define(["exports","./interfaces-f9fc01bd","./config-update-0eaf1dc6"],(function(exports,interfaces,configUpdate){"use strict";
/*!
   * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
   * See LICENSE.md for details.
   * v1.0.0-beta.703
   */const arcgisChartsBoxPlotCss='.hide{display:none}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.boxPlotSeries{flex-grow:1;overflow-y:hidden}.boxPlotSeries>div{justify-content:center;align-items:center}.boxPlotSeries .arcgis-charts-modal-inside{padding:1em;padding-left:0}.boxPlotSeries .arcgis-charts-modal-inside ol{padding-left:2em}.boxPlotSeries .arcgis-charts-modal-curtain{width:100%;height:100%;position:absolute;top:0px;left:0px;z-index:2001;background-color:white;opacity:0.5;opacity:1}.boxPlotSeries .arcgis-charts-modal-content{background:rgba(255, 255, 255, 0.8);color:black;display:inline-block;position:absolute;top:0px;left:0px;max-width:90%;max-height:90%;overflow:auto;z-index:2002;position:absolute;max-width:90%;max-height:90%;width:auto !important;height:auto !important;margin:auto !important;inset:auto !important;left:auto !important;top:auto !important}.boxPlotSeries .arcgis-charts-modal-header{display:block;width:100%;min-height:1.8em;background:rgba(0, 0, 0, 0.05)}.boxPlotSeries .arcgis-charts-modal-close{display:block;position:absolute;top:0.3em;right:0.3em;background:url("data:image/svg+xml;charset=utf-8;base64,PHN2ZyBoZWlnaHQ9IjUxMiIgdmVyc2lvbj0iMSIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHdpZHRoPSI1MTIiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PHBhdGggZD0iTTQ0NS4yIDEwOS4ybC00Mi40LTQyLjRMMjU2IDIxMy42IDEwOS4yIDY2LjhsLTQyLjQgNDIuNEwyMTMuNiAyNTYgNjYuOCA0MDIuOGw0Mi40IDQyLjRMMjU2IDI5OC40bDE0Ni44IDE0Ni44IDQyLjQtNDIuNEwyOTguNCAyNTYiLz48L3N2Zz4=") center center/80% no-repeat rgba(100, 100, 100, 0.1);width:1.2em;height:1.2em;cursor:pointer}.boxPlotSeries .arcgis-charts-modal-title{font-weight:bold;font-size:110%;padding:0.5em 1.2em 0.5em 1em}:host{width:var(--arcgis-charts-bar-chart-width, var(--arcgis-charts-default-width));height:var(--arcgis-charts-bar-chart-height, var(--arcgis-charts-default-height));display:flex;flex-direction:row}';const ArcgisChartsBoxPlot=interfaces.proxyCustomElement(class ArcgisChartsBoxPlot extends interfaces.H{constructor(){super();this.__registerHost();this.__attachShadow();this.arcgisChartsDataProcessError=interfaces.createEvent(this,"arcgisChartsDataProcessError",7);this.arcgisChartsDataProcessComplete=interfaces.createEvent(this,"arcgisChartsDataProcessComplete",7);this.arcgisChartsLegendItemVisibilityChange=interfaces.createEvent(this,"arcgisChartsLegendItemVisibilityChange",7);this.arcgisChartsUpdateComplete=interfaces.createEvent(this,"arcgisChartsUpdateComplete",7);this.arcgisChartsSeriesColorChange=interfaces.createEvent(this,"arcgisChartsSeriesColorChange",7);this.arcgisChartsAxesMinMaxChange=interfaces.createEvent(this,"arcgisChartsAxesMinMaxChange",7);this.arcgisChartsSelectionComplete=interfaces.createEvent(this,"arcgisChartsSelectionComplete",7);this.arcgisChartsNoRenderPropChange=interfaces.createEvent(this,"arcgisChartsNoRenderPropChange",7);this.skipNextUpdate=false;this.noRenderProps=["rotation","legendPosition","legendVisibility","view"];this.dataUpdateNeededProps=["forceDataUpdate","runtimeDataFilters","inlineData","returnFeaturesExtent"];this.updatedProps=new Set;this.config=undefined;this.inlineData=undefined;this.rotation=undefined;this.actionMode=undefined;this.cursorRange=undefined;this.legendPosition=undefined;this.legendVisibility=undefined;this.hideEmptySeriesInLegend=undefined;this.view=undefined;this.layer=undefined;this.selectionData=undefined;this.returnSelectionOIDs=undefined;this.returnSelectionIndexes=undefined;this.returnFeaturesExtent=undefined;this.filterBySelection=undefined;this.disableInteractions=undefined;this.queueChartCreation=undefined;this.useAnimatedCharts=undefined;this.hideLicenceWatermark=undefined;this.enableResponsiveFeatures=undefined;this.autoDisposeChart=undefined;this.placeholder=undefined;this.selectionTheme=undefined;this.chartLimits=undefined;this.tooltipFormatter=undefined;this.dataLabelFormatter=undefined;this.guideTooltipFormatter=undefined;this.xAxisLabelFormatter=undefined;this.yAxisLabelFormatter=undefined;this.noDataOptions=undefined;this.disableTogglingLegendItems=undefined;this.hideLoaderAnimation=undefined;this.runtimeDataFilters=undefined;this.usePopupTemplateFieldsInfo=undefined;this.refreshOnLayerFilterChange=true;this.showNotifyPanel=false}handleChartOutputDataChange(event){this.arcgisChartsDataProcessComplete.emit(event.detail)}handleLegendItemVisibilityChanged(event){this.arcgisChartsLegendItemVisibilityChange.emit(event.detail)}handleUpdateCompleted(event){this.arcgisChartsUpdateComplete.emit(event.detail)}handleSeriesColorsChange(event){this.arcgisChartsSeriesColorChange.emit(event.detail)}handleSelection(event){this.arcgisChartsSelectionComplete.emit(event.detail)}handleTooManySelectedElements(){this.notifyHeading=this.strings.tooManySelectedElements.title;this.notifyMessage=this.strings.tooManySelectedElements.message;this.notifyOptions={kind:"warning",autoClose:true,duration:"fast",active:true};this.showNotifyPanel=true}handleAlertClosed(event){if(event.target===this.el){this.skipNextUpdate=true;this.showNotifyPanel=false}}handleAxesMinMaxChange(event){this.arcgisChartsAxesMinMaxChange.emit(event.detail)}async viewChange(newView,oldView){await this.addExtentChangeListener();if(oldView!==undefined&&newView===undefined){await this.refresh()}}async layerChange(){await this.addLayerListeners()}rotationChange(newRotation){this.config=interfaces.updateRotation(newRotation,this.config)}legendPositionChange(newLegendPosition){this.config=configUpdate.updateLegendPosition(newLegendPosition,this.config)}legendVisibilityChange(newLegendVisibility){this.config=configUpdate.updateLegendVisibility(newLegendVisibility,this.config)}filterBySelectionChanged(){this.config=configUpdate.resetAxesBounds(this.config)}async notify(message,heading,options){if(this.chart!==undefined){this.chart.notify(message,heading,options)}return Promise.resolve(undefined)}async errorAlert(errorMessage){this.notifyHeading=this.strings.errorHeading;this.notifyMessage=errorMessage;this.notifyOptions={kind:"danger",autoClose:true,active:true};this.showNotifyPanel=true}async resetZoom(){if(this.chart!==undefined)this.chart.resetZoom();return Promise.resolve(undefined)}async switchSelection(){if(this.chart!==undefined&&this.filterBySelection!==true)await this.chart.switchSelection()}async clearSelection(){if(this.chart!==undefined){this.chart.clearSelection();if(this.filterBySelection===true){await this.refresh()}}}async refresh(props){const{updateData=true,resetAxesBounds=false,updateExtent=false}=props??{};if(updateData===true)this.dataUpdateIsNeeded();this.viewExtentUpdated=updateExtent;if(resetAxesBounds===true){delete this.config?.axes?.[0]?.minimum;delete this.config?.axes?.[0]?.maximum;delete this.config?.axes?.[1]?.minimum;delete this.config?.axes?.[1]?.maximum}await this.componentDidUpdate();this.viewExtentUpdated=false}componentShouldUpdate(...args){const[value,,propName]=args;this.updatedProps.add(propName);const isNoRenderProp=this.noRenderProps.includes(propName);if(isNoRenderProp===true){this.arcgisChartsNoRenderPropChange.emit({propName,value})}const shouldUpdate=this.skipNextUpdate===false&&isNoRenderProp===false;this.skipNextUpdate=false;return shouldUpdate}async componentWillLoad(){({strings:this.strings}=await interfaces.fetchComponentLocaleStrings(this.el,interfaces.getAssetPath(`.`)));this.debouncedChartUpdate=configUpdate.promise((async()=>{if(this.chart!==undefined){const updatedProps=Array.from(this.updatedProps);const dataUpdateNeeded=updatedProps.some((updatedProp=>this.dataUpdateNeededProps.includes(updatedProp)));this.updatedProps.clear();return await this.chart.update({newChartConfig:this.config,updateOptions:configUpdate.gatherComponentOptions({component:this,dataUpdated:dataUpdateNeeded,viewExtentUpdated:this.viewExtentUpdated}),updateGlobalOptions:configUpdate.gatherComponentGlobalOptions(this)})}}),configUpdate.maximumNumberOfSimultaneousUpdates)}async componentDidLoad(){if(this.chartRef!==undefined){await this.createChartInstance()}}async componentDidUpdate(){if(this.chart===undefined&&this.chartCreationProcessing!==undefined)await this.chartCreationProcessing;await interfaces.validateSeriesType([configUpdate.WebChartTypes$4.BoxPlotSeries],this.config);if(this.config!==undefined&&this.chart!==undefined&&this.showNotifyPanel===false){try{const dataSource=this.config?.dataSource;if(configUpdate.isValidDataSource(this.inlineData,dataSource)&&this.debouncedChartUpdate!==undefined){await this.debouncedChartUpdate.push({})}}catch(e){if(this.chartRef!==undefined&&this.config!==undefined){if(e.name===interfaces.ErrorKeywords.ChartDisposed){this.chart.dispose();this.chartRef.innerHTML="";await this.createChartInstance(false)}else{this.errorAlert(e?.message);if(e.name===interfaces.ErrorKeywords.QueryFeaturesError){this.arcgisChartsDataProcessError.emit(e.details)}}}}}else if(this.chart===undefined&&this.chartCreationProcessing===undefined&&this.showNotifyPanel===false){await this.createChartInstance()}else if(this.placeholder!==undefined){this.notify(this.placeholder)}}async disconnectedCallback(){if(this.chart!==undefined){this.removeLayerListeners();this.removeExtentChangeListeners();this.chart.dispose()}}render(){const notifyPanel=this.showNotifyPanel===true?interfaces.h(configUpdate.ArcgisChartsNotifyPanel,{heading:this.notifyHeading,message:this.notifyMessage,options:this.notifyOptions}):null;const chartStyles=this.showNotifyPanel===true&&this.notifyOptions?.kind==="danger"?"hide":`${configUpdate.WebChartTypes$4.BoxPlotSeries} show`;const notifyStyles=this.showNotifyPanel===true?"show notifyPanel":"hide";return interfaces.h(interfaces.Host,null,interfaces.h("slot",{name:interfaces.Slot.actionBar}),interfaces.h("div",{class:chartStyles,ref:el=>{this.chartRef=el}}),interfaces.h("div",{class:notifyStyles},notifyPanel))}dataUpdateIsNeeded(){this.updatedProps.add("forceDataUpdate")}async addLayerListeners(){this.removeLayerListeners();this.layerFilterListener=await configUpdate.addLayerFilterListener({layer:this.layer,component:this});this.layerRendererListener=await configUpdate.addLayerRendererListener({layer:this.layer,component:this})}async addExtentChangeListener(){this.removeExtentChangeListeners();this.extentChangeListeners=await configUpdate.addExtentChangeListener({view:this.view,layer:this.layer,component:this})}removeLayerListeners(){if(this.layerFilterListener!==undefined)this.layerFilterListener.remove();if(this.layerRendererListener!==undefined)this.layerRendererListener.remove()}removeExtentChangeListeners(){if(this.extentChangeListeners!==undefined){this.extentChangeListeners.forEach((listener=>listener.remove()));this.extentChangeListeners=[]}}checkForIncompatibleChartVersion(){const chartVersion=this.config?.version;if(interfaces.getChartVersionInfo(chartVersion).versionStatus===configUpdate.WebChartVersionStatus$1.Newer){this.notifyHeading=this.strings.incompatibleChartVersion.title;this.notifyMessage=interfaces.formatMessage(this.strings.incompatibleChartVersion.message,{chartVersion:chartVersion??""});this.notifyOptions={kind:"warning",autoClose:true,active:true};this.showNotifyPanel=true}}async createChartInstance(firstCreation=true){await interfaces.validateSeriesType([configUpdate.WebChartTypes$4.BoxPlotSeries],this.config);this.checkForIncompatibleChartVersion();this.updatedProps.clear();try{const dataSource=this.config?.dataSource;if(configUpdate.isValidDataSource(this.inlineData,dataSource)){this.chartCreationProcessing=configUpdate.createChart({chartContainer:this.chartRef,chartConfig:this.config,options:configUpdate.gatherComponentOptions({component:this}),globalOptions:configUpdate.gatherComponentGlobalOptions(this)})}this.chart=await this.chartCreationProcessing;if(firstCreation===true){await this.addLayerListeners();await this.addExtentChangeListener()}}catch(e){if(e.name===interfaces.ErrorKeywords.QueryFeaturesError){this.arcgisChartsDataProcessError.emit(e.details)}this.errorAlert(e?.message);this.chart?.dispose();this.chartCreationProcessing=undefined;this.chart=undefined}}static get assetsDirs(){return["t9n"]}get el(){return this}static get watchers(){return{view:["viewChange"],layer:["layerChange"],rotation:["rotationChange"],legendPosition:["legendPositionChange"],legendVisibility:["legendVisibilityChange"],filterBySelection:["filterBySelectionChanged"]}}static get style(){return arcgisChartsBoxPlotCss}},[1,"arcgis-charts-box-plot",{config:[1040],inlineData:[16],rotation:[4],actionMode:[1,"action-mode"],cursorRange:[1,"cursor-range"],legendPosition:[1,"legend-position"],legendVisibility:[4,"legend-visibility"],hideEmptySeriesInLegend:[4,"hide-empty-series-in-legend"],view:[16],layer:[16],selectionData:[16],returnSelectionOIDs:[4,"return-selection-o-i-ds"],returnSelectionIndexes:[4,"return-selection-indexes"],returnFeaturesExtent:[4,"return-features-extent"],filterBySelection:[4,"filter-by-selection"],disableInteractions:[516,"disable-interactions"],queueChartCreation:[516,"queue-chart-creation"],useAnimatedCharts:[516,"use-animated-charts"],hideLicenceWatermark:[516,"hide-licence-watermark"],enableResponsiveFeatures:[516,"enable-responsive-features"],autoDisposeChart:[516,"auto-dispose-chart"],placeholder:[1],selectionTheme:[16],chartLimits:[16],tooltipFormatter:[16],dataLabelFormatter:[16],guideTooltipFormatter:[16],xAxisLabelFormatter:[16],yAxisLabelFormatter:[16],noDataOptions:[16],disableTogglingLegendItems:[4,"disable-toggling-legend-items"],hideLoaderAnimation:[4,"hide-loader-animation"],runtimeDataFilters:[16],usePopupTemplateFieldsInfo:[4,"use-popup-template-fields-info"],refreshOnLayerFilterChange:[4,"refresh-on-layer-filter-change"],showNotifyPanel:[32],notify:[64],errorAlert:[64],resetZoom:[64],switchSelection:[64],clearSelection:[64],refresh:[64]},[[0,"arcgisChartsJSDataProcessComplete","handleChartOutputDataChange"],[0,"arcgisChartsJSLegendItemVisibilityChange","handleLegendItemVisibilityChanged"],[0,"arcgisChartsJSUpdateComplete","handleUpdateCompleted"],[0,"arcgisChartsJSSeriesColorChange","handleSeriesColorsChange"],[0,"arcgisChartsJSSelectionComplete","handleSelection"],[0,"arcgisChartsJSTooManySelectedElements","handleTooManySelectedElements"],[0,"calciteAlertClose","handleAlertClosed"],[0,"arcgisChartsJSAxesMinMaxChange","handleAxesMinMaxChange"]],{view:["viewChange"],layer:["layerChange"],rotation:["rotationChange"],legendPosition:["legendPositionChange"],legendVisibility:["legendVisibilityChange"],filterBySelection:["filterBySelectionChanged"]}]);function defineCustomElement(){if(typeof customElements==="undefined"){return}const components=["arcgis-charts-box-plot"];components.forEach((tagName=>{switch(tagName){case"arcgis-charts-box-plot":if(!customElements.get(tagName)){customElements.define(tagName,ArcgisChartsBoxPlot)}break}}))}defineCustomElement();exports.ArcgisChartsBoxPlot=ArcgisChartsBoxPlot;exports.defineCustomElement=defineCustomElement}));
