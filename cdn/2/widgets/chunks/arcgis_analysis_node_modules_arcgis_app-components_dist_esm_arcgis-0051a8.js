"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-0051a8"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-item-type.entry.js":
/*!*******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-item-type.entry.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_item_type: () => (/* binding */ ArcgisItemType)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


function getItemDisplayInformation({ item }) {
    const icon = getItemIcon(item);
    return {
        displayName: getDisplayName(item),
        iconPath: (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.a)(`./assets/arcgis-item-type/${icon}16.svg`)
    };
}
// TODO: portal is no longer needed for this calculation, consider removing
function getDisplayName(item) {
    var _a;
    const keywords = item.typeKeywords || [];
    switch (item.type) {
        case "Feature Service":
        case "Feature Collection":
        case "Stream Service":
            if (keywords.includes("ArcgisWorkflowManager")) {
                if (keywords.includes("View Service")) {
                    return "Workflow View";
                }
                return "Workflow Layer";
            }
            if (keywords.includes("ArcgisWorkflowJobLocation") && keywords.includes("View Service")) {
                return "Workflow Job Location View";
            }
            if (keywords.includes("Table")) {
                return "Table";
            }
            if (keywords.includes("Route Layer")) {
                return "Route Layer";
            }
            if (keywords.includes("Markup")) {
                return "Markup";
            }
            return "Feature Layer";
        case "Image Service":
            if (keywords.includes("Elevation 3D Layer")) {
                return "Elevation Layer";
            }
            if (keywords.includes("Tiled Imagery")) {
                return "Tiled Imagery Layer";
            }
            return "Imagery Layer";
        case "Scene Service":
            return "Scene Layer";
        case "Video Service":
            return "Video Layer";
        case "Scene Package":
            return "Scene Layer Package";
        case "Geoprocessing Service":
            if (keywords.includes("Web Tool")) {
                return "Tool";
            }
            return "Geoprocessing Service";
        case "StoryMap":
            if (keywords.includes("storymapcollection")) {
                return "StoryMap Collection";
            }
            if (keywords.includes("storymapbriefing")) {
                return "StoryMap Briefing";
            }
            return "StoryMap";
        case "Geocoding Service":
            return "Locator";
        case "Geoenrichment Service":
            return "GeoEnrichment Service";
        case "Microsoft Powerpoint":
            return "Microsoft PowerPoint";
        case "GeoJson":
            return "GeoJSON";
        case "Globe Service":
            return "Globe Layer";
        case "Vector Tile Service":
            return "Tile Layer";
        case "netCDF":
            return "NetCDF";
        case "Map Service":
            if (!keywords.includes("Spatiotemporal") &&
                (keywords.includes("Hosted Service") || keywords.includes("Tiled")) &&
                !keywords.includes("Relational")) {
                return "Tile Layer";
            }
            return "Map Image Layer";
        case "datastore catalog service":
            return "Big Data File Share";
        case "Compact Tile Package":
            return "Tile Package (tpkx)";
        case "OGCFeatureServer":
            return "OGC Feature Layer";
        case "3DTiles Service":
            return "3D Tiles Layer";
        case "Web Mapping Application":
        case "Application":
        case "Mobile Application":
        case "Operation View":
        case "Desktop Application":
            if (keywords.includes("configurableApp")) {
                return "Instant App";
            }
    }
    if ((_a = item.type) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes("add in")) {
        return item.type.replace(/(add in)/gi, "Add-In");
    }
    return item.type;
}
function getItemIcon(item) {
    var _a;
    const type = ((_a = item === null || item === void 0 ? void 0 : item.type) === null || _a === void 0 ? void 0 : _a.toLowerCase()) || "";
    const keywords = (item === null || item === void 0 ? void 0 : item.typeKeywords) || [];
    const hosted = keywords.includes("Hosted Service");
    switch (type.trim()) {
        case "360 vr experience":
            return "360vr";
        case "3dtiles service":
            return keywords.includes("3DObject")
                ? "3dobjecttileslayer"
                : keywords.includes("IntegratedMesh")
                    ? "integratedmeshtileslayer"
                    : "3dobjecttileslayer";
        case "feature service":
        case "feature collection":
        case "kml":
        case "wfs":
            const isSpatiotemporal = keywords.includes("Spatiotemporal");
            if (keywords.includes("Table")) {
                return isSpatiotemporal ? "spatiotemporaltable" : "table";
            }
            if (keywords.includes("Route Layer")) {
                return "routelayer";
            }
            if (keywords.includes("Markup")) {
                return "markup";
            }
            if (isSpatiotemporal) {
                return "spatiotemporal";
            }
            if (keywords.includes("UtilityNetwork")) {
                return "utilitynetwork";
            }
            return hosted ? "featureshosted" : "features";
        case "group layer":
            if (keywords.includes("Map")) {
                return "layergroup2d";
            }
            if (keywords.includes("Scene")) {
                return "layergroup3d";
            }
            return "layergroup";
        case "wmts":
            return "maptiles";
        case "map service":
        case "wms":
            return hosted || keywords.includes("Tiled") ? "maptiles" : "mapimages";
        case "scene service":
            if (keywords.includes("Line")) {
                return "sceneweblayerline";
            }
            if (keywords.includes("3DObject")) {
                return "sceneweblayermultipatch";
            }
            if (keywords.includes("Point")) {
                return "sceneweblayerpoint";
            }
            if (keywords.includes("IntegratedMesh")) {
                return "sceneweblayermesh";
            }
            if (keywords.includes("PointCloud")) {
                return "sceneweblayerpointcloud";
            }
            if (keywords.includes("Polygon")) {
                return "sceneweblayerpolygon";
            }
            if (keywords.includes("Building")) {
                return "sceneweblayerbuilding";
            }
            if (keywords.includes("Voxel")) {
                return "sceneweblayervoxel";
            }
            return "sceneweblayer";
        case "image service":
            if (keywords.includes("Elevation 3D Layer")) {
                return "elevationlayer";
            }
            if (keywords.includes("Tiled Imagery")) {
                return "tiledimagerylayer";
            }
            return "imagery";
        case "stream service":
            return "streamlayer";
        case "video service":
            return "mediaservice";
        case "vector tile service":
            return "vectortile";
        case "datastore catalog service":
            return "datastorecollection";
        case "geocoding service":
            return "geocodeservice";
        case "geoprocessing service":
            return keywords.includes("Web Tool") ? "tool" : "layers";
        case "geodata service":
            return "geodataservice";
        case "web map":
        case "cityengine web scene":
            return "maps";
        case "web scene":
            return keywords.includes("ViewingMode-Local") ? "webscenelocal" : "websceneglobal";
        case "application":
        case "web mapping application":
        case "mobile application":
        case "operation view":
        case "desktop application":
            return keywords.includes("configurableApp") ? "instantapps" : "apps";
        case "map document":
        case "map package":
        case "published map":
        case "scene document":
        case "globe document":
        case "basemap package":
        case "mobile basemap package":
        case "mobile map package":
        case "project package":
        case "project template":
        case "pro map":
        case "layout":
            return "mapsgray";
        case "layer":
            if (keywords.includes("ArcGIS Pro")) {
                return "mapsgray";
            }
        case "explorer map":
            if (keywords.indexOf("Explorer Document")) {
                return "mapsgray";
            }
            if (keywords.includes("Explorer Mapping Application")) {
                return "datafilesgray";
            }
        case "api key":
            return "key";
        case "csv":
            return "csv";
        case "shapefile":
            return "shapefile";
        case "csv collection":
            return "csvcollection";
        case "media layer":
            return "medialayer";
        case "microsoft excel":
            return "excel";
        case "microsoft powerpoint":
            return "powerpoint";
        case "microsoft word":
            return "word";
        case "pdf":
            return "pdf";
        case "sqlite geodatabase":
            return "sqlite";
        case "administrative report":
            return "report";
        case "image":
            return "image";
        case "cad drawing":
            return "cad";
        case "service definition":
        case "geojson":
        case "360 vr experience":
        case "netcdf":
            return "data";
        case "explorer add in":
        case "desktop add in":
        case "windows viewer add in":
        case "windows viewer configuration":
            return "appsgray";
        case "arcgis pro add in":
        case "arcgis pro configuration":
            return "addindesktop";
        case "rule package":
        case "file geodatabase":
        case "kml collection":
        case "windows mobile package":
        case "map template":
        case "desktop application template":
        case "gml":
        case "arcpad package":
        case "code sample":
        case "document link":
        case "earth configuration":
        case "operations dashboard add in":
        case "rules package":
        case "workflow manager package":
            return "datafilesgray";
        case "form":
            if (keywords.includes("Survey123")) {
                return "survey";
            }
            return "datafilesgray";
        case "network analysis service":
        case "geoprocessing service":
        case "geodata service":
        case "geometry service":
        case "geoprocessing package":
        case "locator package":
        case "geoprocessing sample":
        case "workflow manager service":
            return "toolsgray";
        case "layer":
        case "layer package":
        case "explorer layer":
            return "layersgray";
        case "scene package":
            return "scenepackage";
        case "mobile scene package":
            return "mobilescenepackage";
        case "tile package":
        case "compact tile package":
            return "tilepackage";
        case "task file":
            return "taskfile";
        case "report template":
            return "reporttemplate";
        case "statistical data collection":
            return "statisticaldatacollection";
        case "insights workbook":
            return "workbook";
        case "insights model":
            return "insightsmodel";
        case "insights page":
            return "insightspage";
        case "insights theme":
            return "insightstheme";
        case "hub initiative":
            return "hubinitiative";
        case "hub page":
            return "hubpage";
        case "hub event":
            return "hubevent";
        case "hub site application":
            return "hubsite";
        case "hub project":
            return "hubproject";
        case "relational database connection":
            return "relationaldatabaseconnection";
        case "big data file share":
            return "datastorecollection";
        case "image":
            return "image";
        case "image collection":
            return "imagecollection";
        case "style":
            return "style";
        case "desktop style":
            return "desktopstyle";
        case "dashboard":
            return "dashboard";
        case "raster function template":
            return "rasterprocessingtemplate";
        case "vector tile package":
            return "vectortilepackage";
        case "ortho mapping project":
            return "orthomappingproject";
        case "ortho mapping template":
            return "orthomappingtemplate";
        case "solution":
            return "solutions";
        case "geopackage":
            return "geopackage";
        case "deep learning package":
            return "deeplearningpackage";
        case "real time analytic":
            return "realtimeanalytics";
        case "big data analytic":
            return "bigdataanalytics";
        case "feed":
            return "feed";
        case "excalibur imagery project":
            return "excaliburimageryproject";
        case "notebook":
            return "notebook";
        case "storymap":
            if (keywords.includes("storymapcollection")) {
                return "storymapcollection";
            }
            if (keywords.includes("storymapbriefing")) {
                return "storymapbriefing";
            }
            return "storymap";
        case "survey123 add in":
            return "survey123addin";
        case "mission":
            return "mission";
        case "mission report":
            return "missionreport";
        case "quickcapture project":
            return "quickcaptureproject";
        case "pro report":
            return "proreport";
        case "urban model":
            return "urbanmodel";
        case "web experience":
            return "experiencebuilder";
        case "web experience template":
            return "webexperiencetemplate";
        case "experience builder widget":
            return "experiencebuilderwidget";
        case "experience builder widget package":
            return "experiencebuilderwidgetpackage";
        case "workflow":
            return "workflow";
        case "insights script":
            return "insightsscript";
        case "kernel gateway connection":
            return "kernelgatewayconnection";
        case "hub initiative template":
            return "hubinitiativetemplate";
        case "storymap theme":
            return "storymaptheme";
        case "knowledge graph":
            return "knowledgegraph";
        case "native application":
            return "nativeapp";
        case "native application installer":
            return "nativeappinstaller";
        case "link chart":
            return "linkchart";
        case "investigation":
            return "investigation";
        case "ogcfeatureserver":
            return "features";
        case "pro project":
            return "proproject";
        case "insights workbook package":
            return "insightsworkbookpackage";
        case "apache parquet":
            return "apacheparquet";
        case "notebook code snippets":
        case "notebook code snippet library":
            return "notebookcodesnippets";
        case "suitability model":
            return "suitabilitymodel";
        case "esri classifier definition":
            return "classifierdefinition";
        case "esri classification schema":
            return "classificationschema";
        case "insights data engineering workbook":
            return "dataengineeringworkbook";
        case "insights data engineering model":
            return "dataengineeringmodel";
        case "deep learning studio project":
            return "deeplearningproject";
        case "data store":
            return "datastore";
        case "data pipeline":
            return "datapipeline";
        default:
            if (keywords.includes("Document")) {
                return "datafilesgray";
            }
            return type.includes("service") ? "layers" : "maps";
    }
}

const arcgisItemTypeCss = ":host{display:inline-flex;align-items:center}:host([scale=s]){font-size:0.75rem;--arcgis-item-type-spacing:1rem}:host([scale=m]){font-size:0.875rem;--arcgis-item-type-spacing:1rem}:host([scale=l]){font-size:1rem;--arcgis-item-type-spacing:1.5rem}.icon{display:block;flex-shrink:0;flex-grow:0;width:var(--arcgis-item-type-spacing);height:var(--arcgis-item-type-spacing)}.text{color:var(--calcite-color-text-2);line-height:1.25}.text--spaced{margin-inline-start:calc(var(--arcgis-item-type-spacing) / 2)}";

const ArcgisItemType = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.item = undefined;
        this.portal = undefined;
        this.scale = "s";
        this.showText = true;
        this.showIcon = true;
        this.iconPath = "";
        this.displayName = "";
    }
    async componentWillLoad() {
        const { item } = this;
        if (item) {
            this.getItemDisplayInformation(item);
        }
    }
    getItemDisplayInformation(item) {
        const { displayName, iconPath } = getItemDisplayInformation({ item });
        this.displayName = displayName;
        this.iconPath = iconPath;
    }
    updateTypeInformation(item) {
        if (!this.displayName || !this.iconPath) {
            const { displayName, iconPath } = getItemDisplayInformation({ item });
            this.displayName = displayName;
            this.iconPath = iconPath;
        }
    }
    render() {
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, this.showIcon && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("img", { src: this.iconPath, class: `icon icon--${this.scale}` }), this.showText && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: { text: true, "text--spaced": this.showIcon } }, this.displayName))));
    }
    static get assetsDirs() { return ["assets"]; }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
    static get watchers() { return {
        "item": ["updateTypeInformation"]
    }; }
};
ArcgisItemType.style = arcgisItemTypeCss;



//# sourceMappingURL=arcgis-item-type.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvYXJjZ2lzX2FuYWx5c2lzX25vZGVfbW9kdWxlc19hcmNnaXNfYXBwLWNvbXBvbmVudHNfZGlzdF9lc21fYXJjZ2lzLTAwNTFhOC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQzhHOztBQUU5RyxxQ0FBcUMsTUFBTTtBQUMzQztBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscURBQVksOEJBQThCLEtBQUs7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlDQUFpQyxvQkFBb0IsbUJBQW1CLGlCQUFpQixrQkFBa0IsZ0NBQWdDLGlCQUFpQixtQkFBbUIsZ0NBQWdDLGlCQUFpQixlQUFlLGtDQUFrQyxNQUFNLGNBQWMsY0FBYyxZQUFZLHNDQUFzQyx1Q0FBdUMsTUFBTSxrQ0FBa0MsaUJBQWlCLGNBQWMsOERBQThEOztBQUVqaEI7QUFDQTtBQUNBLFFBQVEscURBQWdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isd0JBQXdCLDhCQUE4QixNQUFNO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isd0JBQXdCLDhCQUE4QixNQUFNO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQUMsQ0FBQyxpREFBSSx5QkFBeUIscURBQUMsVUFBVSx5Q0FBeUMsV0FBVyxHQUFHLHFCQUFxQixxREFBQyxXQUFXLFNBQVMsNkNBQTZDO0FBQ3hNO0FBQ0EsOEJBQThCO0FBQzlCLGVBQWUsT0FBTyxxREFBVTtBQUNoQyw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRThDOztBQUU5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2V4Yi1jbGllbnQvLi9leHRlbnNpb25zL3dpZGdldHMvYXJjZ2lzL2FuYWx5c2lzL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2FwcC1jb21wb25lbnRzL2Rpc3QvZXNtL2FyY2dpcy1pdGVtLXR5cGUuZW50cnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogdjQuMC41OFxuICovXG5pbXBvcnQgeyBhIGFzIGdldEFzc2V0UGF0aCwgciBhcyByZWdpc3Rlckluc3RhbmNlLCBoLCBIIGFzIEhvc3QsIGQgYXMgZ2V0RWxlbWVudCB9IGZyb20gJy4vaW5kZXgtZTNiZjdkYTcuanMnO1xuXG5mdW5jdGlvbiBnZXRJdGVtRGlzcGxheUluZm9ybWF0aW9uKHsgaXRlbSB9KSB7XG4gICAgY29uc3QgaWNvbiA9IGdldEl0ZW1JY29uKGl0ZW0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGRpc3BsYXlOYW1lOiBnZXREaXNwbGF5TmFtZShpdGVtKSxcbiAgICAgICAgaWNvblBhdGg6IGdldEFzc2V0UGF0aChgLi9hc3NldHMvYXJjZ2lzLWl0ZW0tdHlwZS8ke2ljb259MTYuc3ZnYClcbiAgICB9O1xufVxuLy8gVE9ETzogcG9ydGFsIGlzIG5vIGxvbmdlciBuZWVkZWQgZm9yIHRoaXMgY2FsY3VsYXRpb24sIGNvbnNpZGVyIHJlbW92aW5nXG5mdW5jdGlvbiBnZXREaXNwbGF5TmFtZShpdGVtKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IGtleXdvcmRzID0gaXRlbS50eXBlS2V5d29yZHMgfHwgW107XG4gICAgc3dpdGNoIChpdGVtLnR5cGUpIHtcbiAgICAgICAgY2FzZSBcIkZlYXR1cmUgU2VydmljZVwiOlxuICAgICAgICBjYXNlIFwiRmVhdHVyZSBDb2xsZWN0aW9uXCI6XG4gICAgICAgIGNhc2UgXCJTdHJlYW0gU2VydmljZVwiOlxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiQXJjZ2lzV29ya2Zsb3dNYW5hZ2VyXCIpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiVmlldyBTZXJ2aWNlXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBcIldvcmtmbG93IFZpZXdcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiV29ya2Zsb3cgTGF5ZXJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChrZXl3b3Jkcy5pbmNsdWRlcyhcIkFyY2dpc1dvcmtmbG93Sm9iTG9jYXRpb25cIikgJiYga2V5d29yZHMuaW5jbHVkZXMoXCJWaWV3IFNlcnZpY2VcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJXb3JrZmxvdyBKb2IgTG9jYXRpb24gVmlld1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiVGFibGVcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJUYWJsZVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiUm91dGUgTGF5ZXJcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJSb3V0ZSBMYXllclwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiTWFya3VwXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiTWFya3VwXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gXCJGZWF0dXJlIExheWVyXCI7XG4gICAgICAgIGNhc2UgXCJJbWFnZSBTZXJ2aWNlXCI6XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJFbGV2YXRpb24gM0QgTGF5ZXJcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJFbGV2YXRpb24gTGF5ZXJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChrZXl3b3Jkcy5pbmNsdWRlcyhcIlRpbGVkIEltYWdlcnlcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJUaWxlZCBJbWFnZXJ5IExheWVyXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gXCJJbWFnZXJ5IExheWVyXCI7XG4gICAgICAgIGNhc2UgXCJTY2VuZSBTZXJ2aWNlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJTY2VuZSBMYXllclwiO1xuICAgICAgICBjYXNlIFwiVmlkZW8gU2VydmljZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiVmlkZW8gTGF5ZXJcIjtcbiAgICAgICAgY2FzZSBcIlNjZW5lIFBhY2thZ2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcIlNjZW5lIExheWVyIFBhY2thZ2VcIjtcbiAgICAgICAgY2FzZSBcIkdlb3Byb2Nlc3NpbmcgU2VydmljZVwiOlxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiV2ViIFRvb2xcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJUb29sXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gXCJHZW9wcm9jZXNzaW5nIFNlcnZpY2VcIjtcbiAgICAgICAgY2FzZSBcIlN0b3J5TWFwXCI6XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJzdG9yeW1hcGNvbGxlY3Rpb25cIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJTdG9yeU1hcCBDb2xsZWN0aW9uXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJzdG9yeW1hcGJyaWVmaW5nXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiU3RvcnlNYXAgQnJpZWZpbmdcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBcIlN0b3J5TWFwXCI7XG4gICAgICAgIGNhc2UgXCJHZW9jb2RpbmcgU2VydmljZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiTG9jYXRvclwiO1xuICAgICAgICBjYXNlIFwiR2VvZW5yaWNobWVudCBTZXJ2aWNlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJHZW9FbnJpY2htZW50IFNlcnZpY2VcIjtcbiAgICAgICAgY2FzZSBcIk1pY3Jvc29mdCBQb3dlcnBvaW50XCI6XG4gICAgICAgICAgICByZXR1cm4gXCJNaWNyb3NvZnQgUG93ZXJQb2ludFwiO1xuICAgICAgICBjYXNlIFwiR2VvSnNvblwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiR2VvSlNPTlwiO1xuICAgICAgICBjYXNlIFwiR2xvYmUgU2VydmljZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiR2xvYmUgTGF5ZXJcIjtcbiAgICAgICAgY2FzZSBcIlZlY3RvciBUaWxlIFNlcnZpY2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcIlRpbGUgTGF5ZXJcIjtcbiAgICAgICAgY2FzZSBcIm5ldENERlwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiTmV0Q0RGXCI7XG4gICAgICAgIGNhc2UgXCJNYXAgU2VydmljZVwiOlxuICAgICAgICAgICAgaWYgKCFrZXl3b3Jkcy5pbmNsdWRlcyhcIlNwYXRpb3RlbXBvcmFsXCIpICYmXG4gICAgICAgICAgICAgICAgKGtleXdvcmRzLmluY2x1ZGVzKFwiSG9zdGVkIFNlcnZpY2VcIikgfHwga2V5d29yZHMuaW5jbHVkZXMoXCJUaWxlZFwiKSkgJiZcbiAgICAgICAgICAgICAgICAha2V5d29yZHMuaW5jbHVkZXMoXCJSZWxhdGlvbmFsXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiVGlsZSBMYXllclwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFwiTWFwIEltYWdlIExheWVyXCI7XG4gICAgICAgIGNhc2UgXCJkYXRhc3RvcmUgY2F0YWxvZyBzZXJ2aWNlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJCaWcgRGF0YSBGaWxlIFNoYXJlXCI7XG4gICAgICAgIGNhc2UgXCJDb21wYWN0IFRpbGUgUGFja2FnZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiVGlsZSBQYWNrYWdlICh0cGt4KVwiO1xuICAgICAgICBjYXNlIFwiT0dDRmVhdHVyZVNlcnZlclwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiT0dDIEZlYXR1cmUgTGF5ZXJcIjtcbiAgICAgICAgY2FzZSBcIjNEVGlsZXMgU2VydmljZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiM0QgVGlsZXMgTGF5ZXJcIjtcbiAgICAgICAgY2FzZSBcIldlYiBNYXBwaW5nIEFwcGxpY2F0aW9uXCI6XG4gICAgICAgIGNhc2UgXCJBcHBsaWNhdGlvblwiOlxuICAgICAgICBjYXNlIFwiTW9iaWxlIEFwcGxpY2F0aW9uXCI6XG4gICAgICAgIGNhc2UgXCJPcGVyYXRpb24gVmlld1wiOlxuICAgICAgICBjYXNlIFwiRGVza3RvcCBBcHBsaWNhdGlvblwiOlxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiY29uZmlndXJhYmxlQXBwXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiSW5zdGFudCBBcHBcIjtcbiAgICAgICAgICAgIH1cbiAgICB9XG4gICAgaWYgKChfYSA9IGl0ZW0udHlwZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoXCJhZGQgaW5cIikpIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0udHlwZS5yZXBsYWNlKC8oYWRkIGluKS9naSwgXCJBZGQtSW5cIik7XG4gICAgfVxuICAgIHJldHVybiBpdGVtLnR5cGU7XG59XG5mdW5jdGlvbiBnZXRJdGVtSWNvbihpdGVtKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHR5cGUgPSAoKF9hID0gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLnR5cGUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50b0xvd2VyQ2FzZSgpKSB8fCBcIlwiO1xuICAgIGNvbnN0IGtleXdvcmRzID0gKGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS50eXBlS2V5d29yZHMpIHx8IFtdO1xuICAgIGNvbnN0IGhvc3RlZCA9IGtleXdvcmRzLmluY2x1ZGVzKFwiSG9zdGVkIFNlcnZpY2VcIik7XG4gICAgc3dpdGNoICh0eXBlLnRyaW0oKSkge1xuICAgICAgICBjYXNlIFwiMzYwIHZyIGV4cGVyaWVuY2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcIjM2MHZyXCI7XG4gICAgICAgIGNhc2UgXCIzZHRpbGVzIHNlcnZpY2VcIjpcbiAgICAgICAgICAgIHJldHVybiBrZXl3b3Jkcy5pbmNsdWRlcyhcIjNET2JqZWN0XCIpXG4gICAgICAgICAgICAgICAgPyBcIjNkb2JqZWN0dGlsZXNsYXllclwiXG4gICAgICAgICAgICAgICAgOiBrZXl3b3Jkcy5pbmNsdWRlcyhcIkludGVncmF0ZWRNZXNoXCIpXG4gICAgICAgICAgICAgICAgICAgID8gXCJpbnRlZ3JhdGVkbWVzaHRpbGVzbGF5ZXJcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiM2RvYmplY3R0aWxlc2xheWVyXCI7XG4gICAgICAgIGNhc2UgXCJmZWF0dXJlIHNlcnZpY2VcIjpcbiAgICAgICAgY2FzZSBcImZlYXR1cmUgY29sbGVjdGlvblwiOlxuICAgICAgICBjYXNlIFwia21sXCI6XG4gICAgICAgIGNhc2UgXCJ3ZnNcIjpcbiAgICAgICAgICAgIGNvbnN0IGlzU3BhdGlvdGVtcG9yYWwgPSBrZXl3b3Jkcy5pbmNsdWRlcyhcIlNwYXRpb3RlbXBvcmFsXCIpO1xuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiVGFibGVcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNTcGF0aW90ZW1wb3JhbCA/IFwic3BhdGlvdGVtcG9yYWx0YWJsZVwiIDogXCJ0YWJsZVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiUm91dGUgTGF5ZXJcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJyb3V0ZWxheWVyXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJNYXJrdXBcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJtYXJrdXBcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc1NwYXRpb3RlbXBvcmFsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic3BhdGlvdGVtcG9yYWxcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChrZXl3b3Jkcy5pbmNsdWRlcyhcIlV0aWxpdHlOZXR3b3JrXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwidXRpbGl0eW5ldHdvcmtcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBob3N0ZWQgPyBcImZlYXR1cmVzaG9zdGVkXCIgOiBcImZlYXR1cmVzXCI7XG4gICAgICAgIGNhc2UgXCJncm91cCBsYXllclwiOlxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiTWFwXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwibGF5ZXJncm91cDJkXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJTY2VuZVwiKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcImxheWVyZ3JvdXAzZFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFwibGF5ZXJncm91cFwiO1xuICAgICAgICBjYXNlIFwid210c1wiOlxuICAgICAgICAgICAgcmV0dXJuIFwibWFwdGlsZXNcIjtcbiAgICAgICAgY2FzZSBcIm1hcCBzZXJ2aWNlXCI6XG4gICAgICAgIGNhc2UgXCJ3bXNcIjpcbiAgICAgICAgICAgIHJldHVybiBob3N0ZWQgfHwga2V5d29yZHMuaW5jbHVkZXMoXCJUaWxlZFwiKSA/IFwibWFwdGlsZXNcIiA6IFwibWFwaW1hZ2VzXCI7XG4gICAgICAgIGNhc2UgXCJzY2VuZSBzZXJ2aWNlXCI6XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJMaW5lXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic2NlbmV3ZWJsYXllcmxpbmVcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChrZXl3b3Jkcy5pbmNsdWRlcyhcIjNET2JqZWN0XCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic2NlbmV3ZWJsYXllcm11bHRpcGF0Y2hcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChrZXl3b3Jkcy5pbmNsdWRlcyhcIlBvaW50XCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic2NlbmV3ZWJsYXllcnBvaW50XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJJbnRlZ3JhdGVkTWVzaFwiKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcInNjZW5ld2VibGF5ZXJtZXNoXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJQb2ludENsb3VkXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic2NlbmV3ZWJsYXllcnBvaW50Y2xvdWRcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChrZXl3b3Jkcy5pbmNsdWRlcyhcIlBvbHlnb25cIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJzY2VuZXdlYmxheWVycG9seWdvblwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiQnVpbGRpbmdcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJzY2VuZXdlYmxheWVyYnVpbGRpbmdcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChrZXl3b3Jkcy5pbmNsdWRlcyhcIlZveGVsXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic2NlbmV3ZWJsYXllcnZveGVsXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gXCJzY2VuZXdlYmxheWVyXCI7XG4gICAgICAgIGNhc2UgXCJpbWFnZSBzZXJ2aWNlXCI6XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJFbGV2YXRpb24gM0QgTGF5ZXJcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJlbGV2YXRpb25sYXllclwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiVGlsZWQgSW1hZ2VyeVwiKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcInRpbGVkaW1hZ2VyeWxheWVyXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gXCJpbWFnZXJ5XCI7XG4gICAgICAgIGNhc2UgXCJzdHJlYW0gc2VydmljZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwic3RyZWFtbGF5ZXJcIjtcbiAgICAgICAgY2FzZSBcInZpZGVvIHNlcnZpY2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcIm1lZGlhc2VydmljZVwiO1xuICAgICAgICBjYXNlIFwidmVjdG9yIHRpbGUgc2VydmljZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwidmVjdG9ydGlsZVwiO1xuICAgICAgICBjYXNlIFwiZGF0YXN0b3JlIGNhdGFsb2cgc2VydmljZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZGF0YXN0b3JlY29sbGVjdGlvblwiO1xuICAgICAgICBjYXNlIFwiZ2VvY29kaW5nIHNlcnZpY2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcImdlb2NvZGVzZXJ2aWNlXCI7XG4gICAgICAgIGNhc2UgXCJnZW9wcm9jZXNzaW5nIHNlcnZpY2VcIjpcbiAgICAgICAgICAgIHJldHVybiBrZXl3b3Jkcy5pbmNsdWRlcyhcIldlYiBUb29sXCIpID8gXCJ0b29sXCIgOiBcImxheWVyc1wiO1xuICAgICAgICBjYXNlIFwiZ2VvZGF0YSBzZXJ2aWNlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJnZW9kYXRhc2VydmljZVwiO1xuICAgICAgICBjYXNlIFwid2ViIG1hcFwiOlxuICAgICAgICBjYXNlIFwiY2l0eWVuZ2luZSB3ZWIgc2NlbmVcIjpcbiAgICAgICAgICAgIHJldHVybiBcIm1hcHNcIjtcbiAgICAgICAgY2FzZSBcIndlYiBzY2VuZVwiOlxuICAgICAgICAgICAgcmV0dXJuIGtleXdvcmRzLmluY2x1ZGVzKFwiVmlld2luZ01vZGUtTG9jYWxcIikgPyBcIndlYnNjZW5lbG9jYWxcIiA6IFwid2Vic2NlbmVnbG9iYWxcIjtcbiAgICAgICAgY2FzZSBcImFwcGxpY2F0aW9uXCI6XG4gICAgICAgIGNhc2UgXCJ3ZWIgbWFwcGluZyBhcHBsaWNhdGlvblwiOlxuICAgICAgICBjYXNlIFwibW9iaWxlIGFwcGxpY2F0aW9uXCI6XG4gICAgICAgIGNhc2UgXCJvcGVyYXRpb24gdmlld1wiOlxuICAgICAgICBjYXNlIFwiZGVza3RvcCBhcHBsaWNhdGlvblwiOlxuICAgICAgICAgICAgcmV0dXJuIGtleXdvcmRzLmluY2x1ZGVzKFwiY29uZmlndXJhYmxlQXBwXCIpID8gXCJpbnN0YW50YXBwc1wiIDogXCJhcHBzXCI7XG4gICAgICAgIGNhc2UgXCJtYXAgZG9jdW1lbnRcIjpcbiAgICAgICAgY2FzZSBcIm1hcCBwYWNrYWdlXCI6XG4gICAgICAgIGNhc2UgXCJwdWJsaXNoZWQgbWFwXCI6XG4gICAgICAgIGNhc2UgXCJzY2VuZSBkb2N1bWVudFwiOlxuICAgICAgICBjYXNlIFwiZ2xvYmUgZG9jdW1lbnRcIjpcbiAgICAgICAgY2FzZSBcImJhc2VtYXAgcGFja2FnZVwiOlxuICAgICAgICBjYXNlIFwibW9iaWxlIGJhc2VtYXAgcGFja2FnZVwiOlxuICAgICAgICBjYXNlIFwibW9iaWxlIG1hcCBwYWNrYWdlXCI6XG4gICAgICAgIGNhc2UgXCJwcm9qZWN0IHBhY2thZ2VcIjpcbiAgICAgICAgY2FzZSBcInByb2plY3QgdGVtcGxhdGVcIjpcbiAgICAgICAgY2FzZSBcInBybyBtYXBcIjpcbiAgICAgICAgY2FzZSBcImxheW91dFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwibWFwc2dyYXlcIjtcbiAgICAgICAgY2FzZSBcImxheWVyXCI6XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJBcmNHSVMgUHJvXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwibWFwc2dyYXlcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgY2FzZSBcImV4cGxvcmVyIG1hcFwiOlxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluZGV4T2YoXCJFeHBsb3JlciBEb2N1bWVudFwiKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIm1hcHNncmF5XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJFeHBsb3JlciBNYXBwaW5nIEFwcGxpY2F0aW9uXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiZGF0YWZpbGVzZ3JheVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIFwiYXBpIGtleVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwia2V5XCI7XG4gICAgICAgIGNhc2UgXCJjc3ZcIjpcbiAgICAgICAgICAgIHJldHVybiBcImNzdlwiO1xuICAgICAgICBjYXNlIFwic2hhcGVmaWxlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJzaGFwZWZpbGVcIjtcbiAgICAgICAgY2FzZSBcImNzdiBjb2xsZWN0aW9uXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJjc3Zjb2xsZWN0aW9uXCI7XG4gICAgICAgIGNhc2UgXCJtZWRpYSBsYXllclwiOlxuICAgICAgICAgICAgcmV0dXJuIFwibWVkaWFsYXllclwiO1xuICAgICAgICBjYXNlIFwibWljcm9zb2Z0IGV4Y2VsXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJleGNlbFwiO1xuICAgICAgICBjYXNlIFwibWljcm9zb2Z0IHBvd2VycG9pbnRcIjpcbiAgICAgICAgICAgIHJldHVybiBcInBvd2VycG9pbnRcIjtcbiAgICAgICAgY2FzZSBcIm1pY3Jvc29mdCB3b3JkXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJ3b3JkXCI7XG4gICAgICAgIGNhc2UgXCJwZGZcIjpcbiAgICAgICAgICAgIHJldHVybiBcInBkZlwiO1xuICAgICAgICBjYXNlIFwic3FsaXRlIGdlb2RhdGFiYXNlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJzcWxpdGVcIjtcbiAgICAgICAgY2FzZSBcImFkbWluaXN0cmF0aXZlIHJlcG9ydFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwicmVwb3J0XCI7XG4gICAgICAgIGNhc2UgXCJpbWFnZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiaW1hZ2VcIjtcbiAgICAgICAgY2FzZSBcImNhZCBkcmF3aW5nXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJjYWRcIjtcbiAgICAgICAgY2FzZSBcInNlcnZpY2UgZGVmaW5pdGlvblwiOlxuICAgICAgICBjYXNlIFwiZ2VvanNvblwiOlxuICAgICAgICBjYXNlIFwiMzYwIHZyIGV4cGVyaWVuY2VcIjpcbiAgICAgICAgY2FzZSBcIm5ldGNkZlwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZGF0YVwiO1xuICAgICAgICBjYXNlIFwiZXhwbG9yZXIgYWRkIGluXCI6XG4gICAgICAgIGNhc2UgXCJkZXNrdG9wIGFkZCBpblwiOlxuICAgICAgICBjYXNlIFwid2luZG93cyB2aWV3ZXIgYWRkIGluXCI6XG4gICAgICAgIGNhc2UgXCJ3aW5kb3dzIHZpZXdlciBjb25maWd1cmF0aW9uXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJhcHBzZ3JheVwiO1xuICAgICAgICBjYXNlIFwiYXJjZ2lzIHBybyBhZGQgaW5cIjpcbiAgICAgICAgY2FzZSBcImFyY2dpcyBwcm8gY29uZmlndXJhdGlvblwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiYWRkaW5kZXNrdG9wXCI7XG4gICAgICAgIGNhc2UgXCJydWxlIHBhY2thZ2VcIjpcbiAgICAgICAgY2FzZSBcImZpbGUgZ2VvZGF0YWJhc2VcIjpcbiAgICAgICAgY2FzZSBcImttbCBjb2xsZWN0aW9uXCI6XG4gICAgICAgIGNhc2UgXCJ3aW5kb3dzIG1vYmlsZSBwYWNrYWdlXCI6XG4gICAgICAgIGNhc2UgXCJtYXAgdGVtcGxhdGVcIjpcbiAgICAgICAgY2FzZSBcImRlc2t0b3AgYXBwbGljYXRpb24gdGVtcGxhdGVcIjpcbiAgICAgICAgY2FzZSBcImdtbFwiOlxuICAgICAgICBjYXNlIFwiYXJjcGFkIHBhY2thZ2VcIjpcbiAgICAgICAgY2FzZSBcImNvZGUgc2FtcGxlXCI6XG4gICAgICAgIGNhc2UgXCJkb2N1bWVudCBsaW5rXCI6XG4gICAgICAgIGNhc2UgXCJlYXJ0aCBjb25maWd1cmF0aW9uXCI6XG4gICAgICAgIGNhc2UgXCJvcGVyYXRpb25zIGRhc2hib2FyZCBhZGQgaW5cIjpcbiAgICAgICAgY2FzZSBcInJ1bGVzIHBhY2thZ2VcIjpcbiAgICAgICAgY2FzZSBcIndvcmtmbG93IG1hbmFnZXIgcGFja2FnZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZGF0YWZpbGVzZ3JheVwiO1xuICAgICAgICBjYXNlIFwiZm9ybVwiOlxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwiU3VydmV5MTIzXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic3VydmV5XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gXCJkYXRhZmlsZXNncmF5XCI7XG4gICAgICAgIGNhc2UgXCJuZXR3b3JrIGFuYWx5c2lzIHNlcnZpY2VcIjpcbiAgICAgICAgY2FzZSBcImdlb3Byb2Nlc3Npbmcgc2VydmljZVwiOlxuICAgICAgICBjYXNlIFwiZ2VvZGF0YSBzZXJ2aWNlXCI6XG4gICAgICAgIGNhc2UgXCJnZW9tZXRyeSBzZXJ2aWNlXCI6XG4gICAgICAgIGNhc2UgXCJnZW9wcm9jZXNzaW5nIHBhY2thZ2VcIjpcbiAgICAgICAgY2FzZSBcImxvY2F0b3IgcGFja2FnZVwiOlxuICAgICAgICBjYXNlIFwiZ2VvcHJvY2Vzc2luZyBzYW1wbGVcIjpcbiAgICAgICAgY2FzZSBcIndvcmtmbG93IG1hbmFnZXIgc2VydmljZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwidG9vbHNncmF5XCI7XG4gICAgICAgIGNhc2UgXCJsYXllclwiOlxuICAgICAgICBjYXNlIFwibGF5ZXIgcGFja2FnZVwiOlxuICAgICAgICBjYXNlIFwiZXhwbG9yZXIgbGF5ZXJcIjpcbiAgICAgICAgICAgIHJldHVybiBcImxheWVyc2dyYXlcIjtcbiAgICAgICAgY2FzZSBcInNjZW5lIHBhY2thZ2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcInNjZW5lcGFja2FnZVwiO1xuICAgICAgICBjYXNlIFwibW9iaWxlIHNjZW5lIHBhY2thZ2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcIm1vYmlsZXNjZW5lcGFja2FnZVwiO1xuICAgICAgICBjYXNlIFwidGlsZSBwYWNrYWdlXCI6XG4gICAgICAgIGNhc2UgXCJjb21wYWN0IHRpbGUgcGFja2FnZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwidGlsZXBhY2thZ2VcIjtcbiAgICAgICAgY2FzZSBcInRhc2sgZmlsZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwidGFza2ZpbGVcIjtcbiAgICAgICAgY2FzZSBcInJlcG9ydCB0ZW1wbGF0ZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwicmVwb3J0dGVtcGxhdGVcIjtcbiAgICAgICAgY2FzZSBcInN0YXRpc3RpY2FsIGRhdGEgY29sbGVjdGlvblwiOlxuICAgICAgICAgICAgcmV0dXJuIFwic3RhdGlzdGljYWxkYXRhY29sbGVjdGlvblwiO1xuICAgICAgICBjYXNlIFwiaW5zaWdodHMgd29ya2Jvb2tcIjpcbiAgICAgICAgICAgIHJldHVybiBcIndvcmtib29rXCI7XG4gICAgICAgIGNhc2UgXCJpbnNpZ2h0cyBtb2RlbFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiaW5zaWdodHNtb2RlbFwiO1xuICAgICAgICBjYXNlIFwiaW5zaWdodHMgcGFnZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiaW5zaWdodHNwYWdlXCI7XG4gICAgICAgIGNhc2UgXCJpbnNpZ2h0cyB0aGVtZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiaW5zaWdodHN0aGVtZVwiO1xuICAgICAgICBjYXNlIFwiaHViIGluaXRpYXRpdmVcIjpcbiAgICAgICAgICAgIHJldHVybiBcImh1YmluaXRpYXRpdmVcIjtcbiAgICAgICAgY2FzZSBcImh1YiBwYWdlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJodWJwYWdlXCI7XG4gICAgICAgIGNhc2UgXCJodWIgZXZlbnRcIjpcbiAgICAgICAgICAgIHJldHVybiBcImh1YmV2ZW50XCI7XG4gICAgICAgIGNhc2UgXCJodWIgc2l0ZSBhcHBsaWNhdGlvblwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiaHVic2l0ZVwiO1xuICAgICAgICBjYXNlIFwiaHViIHByb2plY3RcIjpcbiAgICAgICAgICAgIHJldHVybiBcImh1YnByb2plY3RcIjtcbiAgICAgICAgY2FzZSBcInJlbGF0aW9uYWwgZGF0YWJhc2UgY29ubmVjdGlvblwiOlxuICAgICAgICAgICAgcmV0dXJuIFwicmVsYXRpb25hbGRhdGFiYXNlY29ubmVjdGlvblwiO1xuICAgICAgICBjYXNlIFwiYmlnIGRhdGEgZmlsZSBzaGFyZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZGF0YXN0b3JlY29sbGVjdGlvblwiO1xuICAgICAgICBjYXNlIFwiaW1hZ2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcImltYWdlXCI7XG4gICAgICAgIGNhc2UgXCJpbWFnZSBjb2xsZWN0aW9uXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJpbWFnZWNvbGxlY3Rpb25cIjtcbiAgICAgICAgY2FzZSBcInN0eWxlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJzdHlsZVwiO1xuICAgICAgICBjYXNlIFwiZGVza3RvcCBzdHlsZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZGVza3RvcHN0eWxlXCI7XG4gICAgICAgIGNhc2UgXCJkYXNoYm9hcmRcIjpcbiAgICAgICAgICAgIHJldHVybiBcImRhc2hib2FyZFwiO1xuICAgICAgICBjYXNlIFwicmFzdGVyIGZ1bmN0aW9uIHRlbXBsYXRlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJyYXN0ZXJwcm9jZXNzaW5ndGVtcGxhdGVcIjtcbiAgICAgICAgY2FzZSBcInZlY3RvciB0aWxlIHBhY2thZ2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcInZlY3RvcnRpbGVwYWNrYWdlXCI7XG4gICAgICAgIGNhc2UgXCJvcnRobyBtYXBwaW5nIHByb2plY3RcIjpcbiAgICAgICAgICAgIHJldHVybiBcIm9ydGhvbWFwcGluZ3Byb2plY3RcIjtcbiAgICAgICAgY2FzZSBcIm9ydGhvIG1hcHBpbmcgdGVtcGxhdGVcIjpcbiAgICAgICAgICAgIHJldHVybiBcIm9ydGhvbWFwcGluZ3RlbXBsYXRlXCI7XG4gICAgICAgIGNhc2UgXCJzb2x1dGlvblwiOlxuICAgICAgICAgICAgcmV0dXJuIFwic29sdXRpb25zXCI7XG4gICAgICAgIGNhc2UgXCJnZW9wYWNrYWdlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJnZW9wYWNrYWdlXCI7XG4gICAgICAgIGNhc2UgXCJkZWVwIGxlYXJuaW5nIHBhY2thZ2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcImRlZXBsZWFybmluZ3BhY2thZ2VcIjtcbiAgICAgICAgY2FzZSBcInJlYWwgdGltZSBhbmFseXRpY1wiOlxuICAgICAgICAgICAgcmV0dXJuIFwicmVhbHRpbWVhbmFseXRpY3NcIjtcbiAgICAgICAgY2FzZSBcImJpZyBkYXRhIGFuYWx5dGljXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJiaWdkYXRhYW5hbHl0aWNzXCI7XG4gICAgICAgIGNhc2UgXCJmZWVkXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJmZWVkXCI7XG4gICAgICAgIGNhc2UgXCJleGNhbGlidXIgaW1hZ2VyeSBwcm9qZWN0XCI6XG4gICAgICAgICAgICByZXR1cm4gXCJleGNhbGlidXJpbWFnZXJ5cHJvamVjdFwiO1xuICAgICAgICBjYXNlIFwibm90ZWJvb2tcIjpcbiAgICAgICAgICAgIHJldHVybiBcIm5vdGVib29rXCI7XG4gICAgICAgIGNhc2UgXCJzdG9yeW1hcFwiOlxuICAgICAgICAgICAgaWYgKGtleXdvcmRzLmluY2x1ZGVzKFwic3RvcnltYXBjb2xsZWN0aW9uXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic3RvcnltYXBjb2xsZWN0aW9uXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoa2V5d29yZHMuaW5jbHVkZXMoXCJzdG9yeW1hcGJyaWVmaW5nXCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic3RvcnltYXBicmllZmluZ1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFwic3RvcnltYXBcIjtcbiAgICAgICAgY2FzZSBcInN1cnZleTEyMyBhZGQgaW5cIjpcbiAgICAgICAgICAgIHJldHVybiBcInN1cnZleTEyM2FkZGluXCI7XG4gICAgICAgIGNhc2UgXCJtaXNzaW9uXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJtaXNzaW9uXCI7XG4gICAgICAgIGNhc2UgXCJtaXNzaW9uIHJlcG9ydFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwibWlzc2lvbnJlcG9ydFwiO1xuICAgICAgICBjYXNlIFwicXVpY2tjYXB0dXJlIHByb2plY3RcIjpcbiAgICAgICAgICAgIHJldHVybiBcInF1aWNrY2FwdHVyZXByb2plY3RcIjtcbiAgICAgICAgY2FzZSBcInBybyByZXBvcnRcIjpcbiAgICAgICAgICAgIHJldHVybiBcInByb3JlcG9ydFwiO1xuICAgICAgICBjYXNlIFwidXJiYW4gbW9kZWxcIjpcbiAgICAgICAgICAgIHJldHVybiBcInVyYmFubW9kZWxcIjtcbiAgICAgICAgY2FzZSBcIndlYiBleHBlcmllbmNlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJleHBlcmllbmNlYnVpbGRlclwiO1xuICAgICAgICBjYXNlIFwid2ViIGV4cGVyaWVuY2UgdGVtcGxhdGVcIjpcbiAgICAgICAgICAgIHJldHVybiBcIndlYmV4cGVyaWVuY2V0ZW1wbGF0ZVwiO1xuICAgICAgICBjYXNlIFwiZXhwZXJpZW5jZSBidWlsZGVyIHdpZGdldFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZXhwZXJpZW5jZWJ1aWxkZXJ3aWRnZXRcIjtcbiAgICAgICAgY2FzZSBcImV4cGVyaWVuY2UgYnVpbGRlciB3aWRnZXQgcGFja2FnZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZXhwZXJpZW5jZWJ1aWxkZXJ3aWRnZXRwYWNrYWdlXCI7XG4gICAgICAgIGNhc2UgXCJ3b3JrZmxvd1wiOlxuICAgICAgICAgICAgcmV0dXJuIFwid29ya2Zsb3dcIjtcbiAgICAgICAgY2FzZSBcImluc2lnaHRzIHNjcmlwdFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiaW5zaWdodHNzY3JpcHRcIjtcbiAgICAgICAgY2FzZSBcImtlcm5lbCBnYXRld2F5IGNvbm5lY3Rpb25cIjpcbiAgICAgICAgICAgIHJldHVybiBcImtlcm5lbGdhdGV3YXljb25uZWN0aW9uXCI7XG4gICAgICAgIGNhc2UgXCJodWIgaW5pdGlhdGl2ZSB0ZW1wbGF0ZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiaHViaW5pdGlhdGl2ZXRlbXBsYXRlXCI7XG4gICAgICAgIGNhc2UgXCJzdG9yeW1hcCB0aGVtZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwic3RvcnltYXB0aGVtZVwiO1xuICAgICAgICBjYXNlIFwia25vd2xlZGdlIGdyYXBoXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJrbm93bGVkZ2VncmFwaFwiO1xuICAgICAgICBjYXNlIFwibmF0aXZlIGFwcGxpY2F0aW9uXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJuYXRpdmVhcHBcIjtcbiAgICAgICAgY2FzZSBcIm5hdGl2ZSBhcHBsaWNhdGlvbiBpbnN0YWxsZXJcIjpcbiAgICAgICAgICAgIHJldHVybiBcIm5hdGl2ZWFwcGluc3RhbGxlclwiO1xuICAgICAgICBjYXNlIFwibGluayBjaGFydFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwibGlua2NoYXJ0XCI7XG4gICAgICAgIGNhc2UgXCJpbnZlc3RpZ2F0aW9uXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJpbnZlc3RpZ2F0aW9uXCI7XG4gICAgICAgIGNhc2UgXCJvZ2NmZWF0dXJlc2VydmVyXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJmZWF0dXJlc1wiO1xuICAgICAgICBjYXNlIFwicHJvIHByb2plY3RcIjpcbiAgICAgICAgICAgIHJldHVybiBcInByb3Byb2plY3RcIjtcbiAgICAgICAgY2FzZSBcImluc2lnaHRzIHdvcmtib29rIHBhY2thZ2VcIjpcbiAgICAgICAgICAgIHJldHVybiBcImluc2lnaHRzd29ya2Jvb2twYWNrYWdlXCI7XG4gICAgICAgIGNhc2UgXCJhcGFjaGUgcGFycXVldFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiYXBhY2hlcGFycXVldFwiO1xuICAgICAgICBjYXNlIFwibm90ZWJvb2sgY29kZSBzbmlwcGV0c1wiOlxuICAgICAgICBjYXNlIFwibm90ZWJvb2sgY29kZSBzbmlwcGV0IGxpYnJhcnlcIjpcbiAgICAgICAgICAgIHJldHVybiBcIm5vdGVib29rY29kZXNuaXBwZXRzXCI7XG4gICAgICAgIGNhc2UgXCJzdWl0YWJpbGl0eSBtb2RlbFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwic3VpdGFiaWxpdHltb2RlbFwiO1xuICAgICAgICBjYXNlIFwiZXNyaSBjbGFzc2lmaWVyIGRlZmluaXRpb25cIjpcbiAgICAgICAgICAgIHJldHVybiBcImNsYXNzaWZpZXJkZWZpbml0aW9uXCI7XG4gICAgICAgIGNhc2UgXCJlc3JpIGNsYXNzaWZpY2F0aW9uIHNjaGVtYVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiY2xhc3NpZmljYXRpb25zY2hlbWFcIjtcbiAgICAgICAgY2FzZSBcImluc2lnaHRzIGRhdGEgZW5naW5lZXJpbmcgd29ya2Jvb2tcIjpcbiAgICAgICAgICAgIHJldHVybiBcImRhdGFlbmdpbmVlcmluZ3dvcmtib29rXCI7XG4gICAgICAgIGNhc2UgXCJpbnNpZ2h0cyBkYXRhIGVuZ2luZWVyaW5nIG1vZGVsXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJkYXRhZW5naW5lZXJpbmdtb2RlbFwiO1xuICAgICAgICBjYXNlIFwiZGVlcCBsZWFybmluZyBzdHVkaW8gcHJvamVjdFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZGVlcGxlYXJuaW5ncHJvamVjdFwiO1xuICAgICAgICBjYXNlIFwiZGF0YSBzdG9yZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZGF0YXN0b3JlXCI7XG4gICAgICAgIGNhc2UgXCJkYXRhIHBpcGVsaW5lXCI6XG4gICAgICAgICAgICByZXR1cm4gXCJkYXRhcGlwZWxpbmVcIjtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGlmIChrZXl3b3Jkcy5pbmNsdWRlcyhcIkRvY3VtZW50XCIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiZGF0YWZpbGVzZ3JheVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHR5cGUuaW5jbHVkZXMoXCJzZXJ2aWNlXCIpID8gXCJsYXllcnNcIiA6IFwibWFwc1wiO1xuICAgIH1cbn1cblxuY29uc3QgYXJjZ2lzSXRlbVR5cGVDc3MgPSBcIjpob3N0e2Rpc3BsYXk6aW5saW5lLWZsZXg7YWxpZ24taXRlbXM6Y2VudGVyfTpob3N0KFtzY2FsZT1zXSl7Zm9udC1zaXplOjAuNzVyZW07LS1hcmNnaXMtaXRlbS10eXBlLXNwYWNpbmc6MXJlbX06aG9zdChbc2NhbGU9bV0pe2ZvbnQtc2l6ZTowLjg3NXJlbTstLWFyY2dpcy1pdGVtLXR5cGUtc3BhY2luZzoxcmVtfTpob3N0KFtzY2FsZT1sXSl7Zm9udC1zaXplOjFyZW07LS1hcmNnaXMtaXRlbS10eXBlLXNwYWNpbmc6MS41cmVtfS5pY29ue2Rpc3BsYXk6YmxvY2s7ZmxleC1zaHJpbms6MDtmbGV4LWdyb3c6MDt3aWR0aDp2YXIoLS1hcmNnaXMtaXRlbS10eXBlLXNwYWNpbmcpO2hlaWdodDp2YXIoLS1hcmNnaXMtaXRlbS10eXBlLXNwYWNpbmcpfS50ZXh0e2NvbG9yOnZhcigtLWNhbGNpdGUtY29sb3ItdGV4dC0yKTtsaW5lLWhlaWdodDoxLjI1fS50ZXh0LS1zcGFjZWR7bWFyZ2luLWlubGluZS1zdGFydDpjYWxjKHZhcigtLWFyY2dpcy1pdGVtLXR5cGUtc3BhY2luZykgLyAyKX1cIjtcblxuY29uc3QgQXJjZ2lzSXRlbVR5cGUgPSBjbGFzcyB7XG4gICAgY29uc3RydWN0b3IoaG9zdFJlZikge1xuICAgICAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xuICAgICAgICB0aGlzLml0ZW0gPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMucG9ydGFsID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnNjYWxlID0gXCJzXCI7XG4gICAgICAgIHRoaXMuc2hvd1RleHQgPSB0cnVlO1xuICAgICAgICB0aGlzLnNob3dJY29uID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5pY29uUGF0aCA9IFwiXCI7XG4gICAgICAgIHRoaXMuZGlzcGxheU5hbWUgPSBcIlwiO1xuICAgIH1cbiAgICBhc3luYyBjb21wb25lbnRXaWxsTG9hZCgpIHtcbiAgICAgICAgY29uc3QgeyBpdGVtIH0gPSB0aGlzO1xuICAgICAgICBpZiAoaXRlbSkge1xuICAgICAgICAgICAgdGhpcy5nZXRJdGVtRGlzcGxheUluZm9ybWF0aW9uKGl0ZW0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldEl0ZW1EaXNwbGF5SW5mb3JtYXRpb24oaXRlbSkge1xuICAgICAgICBjb25zdCB7IGRpc3BsYXlOYW1lLCBpY29uUGF0aCB9ID0gZ2V0SXRlbURpc3BsYXlJbmZvcm1hdGlvbih7IGl0ZW0gfSk7XG4gICAgICAgIHRoaXMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgICAgICAgdGhpcy5pY29uUGF0aCA9IGljb25QYXRoO1xuICAgIH1cbiAgICB1cGRhdGVUeXBlSW5mb3JtYXRpb24oaXRlbSkge1xuICAgICAgICBpZiAoIXRoaXMuZGlzcGxheU5hbWUgfHwgIXRoaXMuaWNvblBhdGgpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZGlzcGxheU5hbWUsIGljb25QYXRoIH0gPSBnZXRJdGVtRGlzcGxheUluZm9ybWF0aW9uKHsgaXRlbSB9KTtcbiAgICAgICAgICAgIHRoaXMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgICAgICAgICAgIHRoaXMuaWNvblBhdGggPSBpY29uUGF0aDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoaChIb3N0LCBudWxsLCB0aGlzLnNob3dJY29uICYmIGgoXCJpbWdcIiwgeyBzcmM6IHRoaXMuaWNvblBhdGgsIGNsYXNzOiBgaWNvbiBpY29uLS0ke3RoaXMuc2NhbGV9YCB9KSwgdGhpcy5zaG93VGV4dCAmJiAoaChcInNwYW5cIiwgeyBjbGFzczogeyB0ZXh0OiB0cnVlLCBcInRleHQtLXNwYWNlZFwiOiB0aGlzLnNob3dJY29uIH0gfSwgdGhpcy5kaXNwbGF5TmFtZSkpKSk7XG4gICAgfVxuICAgIHN0YXRpYyBnZXQgYXNzZXRzRGlycygpIHsgcmV0dXJuIFtcImFzc2V0c1wiXTsgfVxuICAgIGdldCBlbCgpIHsgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7IH1cbiAgICBzdGF0aWMgZ2V0IHdhdGNoZXJzKCkgeyByZXR1cm4ge1xuICAgICAgICBcIml0ZW1cIjogW1widXBkYXRlVHlwZUluZm9ybWF0aW9uXCJdXG4gICAgfTsgfVxufTtcbkFyY2dpc0l0ZW1UeXBlLnN0eWxlID0gYXJjZ2lzSXRlbVR5cGVDc3M7XG5cbmV4cG9ydCB7IEFyY2dpc0l0ZW1UeXBlIGFzIGFyY2dpc19pdGVtX3R5cGUgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJjZ2lzLWl0ZW0tdHlwZS5lbnRyeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=