"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-61b3c2"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-smart-mapping-relationship-focus-button.entry.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-smart-mapping-relationship-focus-button.entry.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_smart_mapping_relationship_focus_button: () => (/* binding */ ArcgisSmartMappingRelationshipFocusButton)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./raster-unique-value-0976ec7f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/raster-unique-value-0976ec7f.js");
/* harmony import */ var _loading_69139907_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loading-69139907.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loading-69139907.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _commonEnums_fcf13661_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./commonEnums-fcf13661.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/commonEnums-fcf13661.js");
/* harmony import */ var _relationship_b72d7d97_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./relationship-b72d7d97.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/relationship-b72d7d97.js");
/* harmony import */ var _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./languageUtil-ef0e54b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./locale-050b6db9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _commonFunctions_b0830e9e_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./commonFunctions-b0830e9e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/commonFunctions-b0830e9e.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */












const arcgisSmartMappingRelationshipFocusButtonCss = ".focus-button{display:flex;padding:6px;justify-content:space-between;align-items:center;border-radius:0;cursor:pointer;background-color:var(--calcite-color-foreground-1);color:var(--calcite-color-text-1);border-color:var(--calcite-color-foreground-3);border-width:2px;border-style:solid;box-shadow:transparent 0px 0px 0px 1px inset}.focus-button:active{box-shadow:inset 0 0 0 1px var(--calcite-color-foreground-3)}.focus-button:focus{box-shadow:inset 0 0 0 1px var(--calcite-color-foreground-3);outline:2px solid var(--calcite-color-brand);outline-offset:2px}.focus-button.active{outline:1px solid var(--calcite-ui-focus-color, var(--calcite-color-brand))}.focus-content{justify-content:space-between;display:flex;align-items:center;width:100%}.focus-button-text{display:inline-block;padding:0 10px}.focus-button-title{font-weight:bold}.focus-button-msg{font-size:80%;line-height:16px}.focus-margin{margin:12px 0}";

const ArcgisSmartMappingRelationshipFocusButton = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisSmartMappingRelationshipFocusButtonChange = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisSmartMappingRelationshipFocusButtonChange", 7);
        this.arcgisSmartMappingRelationshipFocusButtonBeforeOpen = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisSmartMappingRelationshipFocusButtonBeforeOpen", 7);
        this.arcgisSmartMappingRelationshipFocusButtonError = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisSmartMappingRelationshipFocusButtonError", 7);
        this.open = false;
        this.flowItemNode = undefined;
        this.selectedFocusInfo = undefined;
    }
    //--------------------------------------------------------------------------
    //
    //  Public Methods
    //
    //--------------------------------------------------------------------------
    /**
     * Set focus on component
     */
    async setFocus() {
        this.buttonNode.focus();
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    componentWillLoad() {
        const { layer, strings } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.s;
        const renderer = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.h)(layer);
        this.focusInfos = [
            {
                focus: "HH",
                title: strings.relationshipFocusButton.focusHighHigh,
                msg: strings.relationshipFocusButton.focusHighHighMsg,
                selected: false,
                iconPath: null
            },
            {
                focus: "HL",
                title: strings.relationshipFocusButton.focusHighLow,
                msg: strings.relationshipFocusButton.focusHighLowMsg,
                selected: false,
                iconPath: null
            },
            {
                focus: "LH",
                title: strings.relationshipFocusButton.focusLowHigh,
                msg: strings.relationshipFocusButton.focusLowHighMsg,
                selected: false,
                iconPath: null
            },
            {
                focus: "LL",
                title: strings.relationshipFocusButton.focusLowLow,
                msg: strings.relationshipFocusButton.focusLowLowMsg,
                selected: false,
                iconPath: null
            },
            {
                focus: "none",
                title: strings.relationshipFocusButton.none,
                msg: strings.relationshipFocusButton.focusNoneMsg,
                selected: false,
                iconPath: null
            }
        ];
        this.setSelectedFocus(renderer.authoringInfo.focus);
    }
    //--------------------------------------------------------------------------
    //
    //  Render Methods
    //
    //--------------------------------------------------------------------------
    render() {
        const { strings } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.s;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: "focus-margin" }, strings.relationshipFocusButton.focus, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "focus-button", role: "button", tabindex: "0", "aria-haspopup": "true", "aria-label": strings.relationshipFocusButton.focus, ref: (node) => {
                if (node) {
                    this.buttonNode = node;
                }
            }, onKeyDown: (event) => {
                if (event.key === " " || event.key === "Enter") {
                    event.preventDefault();
                    event.stopPropagation();
                    this.openFocusDropdown();
                }
            }, onClick: () => this.openFocusDropdown() }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "focus-content" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "focus-button-text" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "focus-button-title" }, this.selectedFocusInfo.title), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "focus-button-msg" }, this.selectedFocusInfo.msg)), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { scale: "s", icon: "chevron-down" })))))));
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    closePopover() {
        var _a;
        this.open = false;
        if (this.dropdownNode) {
            (_a = this.dropdownNode.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this.dropdownNode);
            this.dropdownNode = null;
            this.buttonNode.classList.remove("active");
        }
    }
    openFocusDropdown() {
        if (!this.open) {
            this.arcgisSmartMappingRelationshipFocusButtonBeforeOpen.emit();
            const dropdown = document.createElement("arcgis-smart-mapping-dropdown");
            dropdown.buttonNode = this.buttonNode;
            dropdown.infos = this.focusInfos;
            this.dropdownNode = dropdown;
            dropdown.addEventListener("arcgisSmartMappingDropdownClose", (event) => {
                this.closePopover();
                event.detail === "Escape" && this.setFocus();
            });
            dropdown.addEventListener("arcgisSmartMappingDropdownChange", (event) => this.setNewFocus(event.detail));
            this.buttonNode.classList.add("active");
            document.body.appendChild(dropdown);
            this.open = true;
        }
        else {
            this.open = false;
        }
    }
    setNewFocus(newFocusInfo) {
        const { layer } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.s;
        const renderer = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.h)(layer);
        const authInfo = renderer.authoringInfo;
        const currentFocus = authInfo.focus;
        const newFocus = newFocusInfo.focus;
        if (newFocus === currentFocus) {
            this.closePopover();
            setTimeout(() => this.setFocus(), 300);
            return;
        }
        (0,_loading_69139907_js__WEBPACK_IMPORTED_MODULE_2__.r)((0,_relationship_b72d7d97_js__WEBPACK_IMPORTED_MODULE_5__.u)({ focus: newFocus }), this.flowItemNode).then((updatedRenderer) => {
            this.setSelectedFocus(newFocusInfo.focus);
            (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.e)(updatedRenderer, layer);
            (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.ab)();
            setTimeout(() => this.setFocus(), 300);
            this.arcgisSmartMappingRelationshipFocusButtonChange.emit();
        }),
            (error) => {
                setTimeout(() => this.setFocus());
                this.arcgisSmartMappingRelationshipFocusButtonError.emit(error);
            };
        this.closePopover();
    }
    setSelectedFocus(newFocus) {
        this.focusInfos.forEach((info) => {
            if (info.focus === newFocus) {
                this.selectedFocusInfo = info;
                info.selected = true;
            }
            else {
                info.selected = false;
            }
        });
    }
    get hostElement() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisSmartMappingRelationshipFocusButton.style = arcgisSmartMappingRelationshipFocusButtonCss;



//# sourceMappingURL=arcgis-smart-mapping-relationship-focus-button.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loading-69139907.js":
/*!*************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loading-69139907.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   r: () => (/* binding */ requestWrapper)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */
let _loadingTimer;
let _requestCancelled;
function startLoading(node) {
    node.loading = true;
    _requestCancelled = false;
    if (_loadingTimer) {
        clearTimeout(_loadingTimer);
    }
    _loadingTimer = setTimeout(() => {
        // took too long
        endLoading(node);
        _requestCancelled = true;
    }, 60000);
}
function endLoading(node) {
    node.loading = false;
}
function requestWrapper(request, node) {
    startLoading(node);
    return request
        .then((result) => {
        endLoading(node);
        if (!_requestCancelled) {
            return Promise.resolve(result);
        }
        else {
            return Promise.reject(new Error("timeout"));
        }
    })
        .catch((error) => {
        endLoading(node);
        return Promise.reject(error);
    });
}



//# sourceMappingURL=loading-69139907.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/relationship-b72d7d97.js":
/*!******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/relationship-b72d7d97.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ createRelationshipRendererFromExisting),
/* harmony export */   c: () => (/* binding */ createRelationshipRenderer),
/* harmony export */   u: () => (/* binding */ updateRelationshipRenderer)
/* harmony export */ });
/* harmony import */ var _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./raster-unique-value-0976ec7f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/raster-unique-value-0976ec7f.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _commonFunctions_b0830e9e_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commonFunctions-b0830e9e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/commonFunctions-b0830e9e.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */




/**
 * Updates the layer with a Color renderer with default settings
 * @param options: options
 */
function createRelationshipRenderer(options) {
    var _a, _b;
    const { layer: smLayer, mapImageSublayer, mapView, modules } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.s;
    const layer = smLayer;
    const rendererType = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.g)();
    let relationshipScheme = options.relationshipScheme;
    if (!relationshipScheme && ["relationship", "relationship-size"].indexOf(rendererType) > -1) {
        relationshipScheme = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.a0)();
    }
    options = options || {};
    if (rendererType === "relationship-size") {
        const renderer = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.h)(layer).clone();
        const authInfo = renderer.authoringInfo;
        if (authInfo &&
            ((_a = options.fieldInfos) === null || _a === void 0 ? void 0 : _a.length) > 1 &&
            options.fieldInfos[0].field == authInfo.field1.field &&
            options.fieldInfos[1].field == authInfo.field2.field) {
            // re-use relationship renderer; remove size
            renderer.visualVariables = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.n)(renderer, "size");
            renderer.authoringInfo.visualVariables = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.o)(renderer, "size");
            if ((0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.q)(layer)) {
                // switch markers to polygons
                const polygonSymbol = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.S)(layer, mapView);
                const infos = renderer.uniqueValueInfos.slice();
                infos.map((valueInfo) => {
                    const color = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.t)(valueInfo.symbol);
                    valueInfo.symbol = polygonSymbol.clone();
                    (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.r)(valueInfo.symbol, color);
                });
                renderer.uniqueValueInfos = infos;
            }
            return Promise.resolve({ renderer });
        }
    }
    const extras = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.m)((0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.h)(layer));
    const config = {
        layer,
        view: mapView,
        field1: { field: options.fieldInfos[0].field },
        field2: { field: options.fieldInfos[1].field },
        classificationMethod: "quantile",
        numClasses: 3,
        focus: "HH",
        relationshipScheme,
        outlineOptimizationEnabled: mapImageSublayer
            ? false
            : (0,_commonFunctions_b0830e9e_js__WEBPACK_IMPORTED_MODULE_2__.i)(options.outlineOptimizationEnabled)
                ? options.outlineOptimizationEnabled
                : true,
        sizeOptimizationEnabled: mapImageSublayer
            ? false
            : (0,_commonFunctions_b0830e9e_js__WEBPACK_IMPORTED_MODULE_2__.i)(options.sizeOptimizationEnabled)
                ? options.sizeOptimizationEnabled
                : true,
        legendOptions: options.legendOptions,
        defaultSymbolEnabled: false,
        forBinning: ((_b = layer.featureReduction) === null || _b === void 0 ? void 0 : _b.type) === "binning"
    };
    //console.log("createRelationshipRenderer", config);
    return modules.RelationshipCreator.createRenderer(config).then((result) => {
        //console.log("createRelationshipRenderer-success", result);
        (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.l)(extras, result.renderer);
        return Promise.resolve(result);
    }, (error) => Promise.reject(error));
}
/**
 * Creates a Relationship renderer with settings from current renderer
 */
function createRelationshipRendererFromExisting(options) {
    var _a;
    const { layer: smLayer, mapImageSublayer, mapView, modules } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.s;
    const layer = smLayer;
    options = options || {};
    const renderer = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.h)(layer);
    const rendererType = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.g)();
    const authInfo = renderer.authoringInfo;
    // are we coming from a relationship-size renderer?
    const sizeVisVar = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.a)(renderer, "size");
    if (options.fieldInfos &&
        options.fieldInfos.length > 1 &&
        options.fieldInfos[0].field == authInfo.field1.field &&
        options.normalizationField1 === authInfo.field1.normalizationField &&
        options.fieldInfos[1].field == authInfo.field2.field &&
        options.normalizationField2 === authInfo.field2.normalizationField) {
        // no changes to fields
        delete options.fieldInfos;
        delete options.normalizationField1;
        delete options.normalizationField2;
        if ((0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.R)(options) && !sizeVisVar) {
            // nothing really changes
            return Promise.resolve({ renderer: renderer.clone() });
        }
    }
    let relationshipScheme = options.relationshipScheme;
    if (!relationshipScheme && ["relationship", "relationship-size"].indexOf(rendererType) > -1) {
        relationshipScheme = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.a0)();
    }
    const extras = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.m)(renderer);
    let fieldInfo1 = options.fieldInfos
        ? options.fieldInfos[0]
        : {
            field: authInfo.field1.field,
            simpleFieldType: _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.w.NUMBER
        };
    let fieldInfo2 = options.fieldInfos
        ? options.fieldInfos[1]
        : {
            field: authInfo.field2.field,
            simpleFieldType: _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.w.NUMBER
        };
    const normalizationField1 = options.normalizationField1 !== undefined // null is used as a value
        ? options.normalizationField1
        : authInfo.field1.normalizationField;
    const normalizationField2 = options.normalizationField2 !== undefined // null is used as a value
        ? options.normalizationField2
        : authInfo.field2.normalizationField;
    const symbol = renderer.uniqueValueInfos && renderer.uniqueValueInfos.length ? renderer.uniqueValueInfos[0].symbol : null;
    const defaultSymbol = renderer.defaultSymbol;
    const defaultLabel = renderer.defaultLabel;
    const numClasses = options.numClasses ? options.numClasses : authInfo.numClasses;
    // TODO need to keep ramp
    return modules.RelationshipCreator.createRenderer({
        layer,
        view: mapView,
        field1: {
            field: fieldInfo1 ? fieldInfo1.field : renderer.field,
            normalizationField: normalizationField1
        },
        field2: {
            field: fieldInfo2 ? fieldInfo2.field : renderer.field,
            normalizationField: normalizationField2
        },
        classificationMethod: options.classificationMethod
            ? options.classificationMethod
            : authInfo.classificationMethod !== "manual"
                ? authInfo.classificationMethod
                : "quantile",
        numClasses,
        focus: options.focus ? options.focus : authInfo.focus,
        relationshipScheme,
        outlineOptimizationEnabled: mapImageSublayer
            ? false
            : (0,_commonFunctions_b0830e9e_js__WEBPACK_IMPORTED_MODULE_2__.i)(options.outlineOptimizationEnabled)
                ? options.outlineOptimizationEnabled
                : !!extras.sizeOutlineVisVar,
        sizeOptimizationEnabled: mapImageSublayer
            ? false
            : (0,_commonFunctions_b0830e9e_js__WEBPACK_IMPORTED_MODULE_2__.i)(options.sizeOptimizationEnabled)
                ? options.sizeOptimizationEnabled
                : !!extras.sizeAutoVisVar,
        legendOptions: options.legendOptions ? options.legendOptions : renderer.legendOptions,
        defaultSymbolEnabled: (0,_commonFunctions_b0830e9e_js__WEBPACK_IMPORTED_MODULE_2__.i)(options.defaultSymbolEnabled)
            ? options.defaultSymbolEnabled
            : !!renderer.defaultSymbol,
        forBinning: ((_a = layer.featureReduction) === null || _a === void 0 ? void 0 : _a.type) === "binning"
    }).then((result) => {
        //console.log("RelationshipCreator.createRenderer", result);
        (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.l)(extras, result.renderer);
        if (symbol) {
            const infos = result.renderer.uniqueValueInfos;
            infos.forEach((info) => {
                // keep the same symbol style, not the color
                const sym = symbol.clone();
                (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.r)(sym, (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.t)(info.symbol));
                info.symbol = sym;
            });
        }
        // keep old labels
        if (!options.numClasses || options.numClasses === authInfo.numClasses) {
            (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.h)(layer).uniqueValueInfos.forEach((oldInfo) => {
                result.renderer.uniqueValueInfos.forEach((newInfo) => {
                    if (oldInfo.value === newInfo.value) {
                        newInfo.label = oldInfo.label;
                    }
                });
            });
        }
        if (defaultSymbol) {
            result.renderer.defaultSymbol = defaultSymbol;
            result.renderer.defaultLabel = defaultLabel;
        }
        return Promise.resolve(result);
    }, (error) => Promise.reject(error));
}
/**
 * Updates a relationship renderer after changes to slider breaks, focus, color ramp
 */
function updateRelationshipRenderer(options) {
    const { layer, modules } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.s;
    options = options || {};
    const renderer = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_0__.h)(layer);
    const authInfo = renderer.authoringInfo;
    return modules.RelationshipCreator.updateRenderer({
        field1: authInfo.field1,
        field2: authInfo.field2,
        numClasses: options.numClasses ? options.numClasses : authInfo.numClasses,
        focus: options.focus ? (options.focus === "none" ? null : options.focus) : authInfo.focus,
        colors: options.colors,
        renderer
    });
}



//# sourceMappingURL=relationship-b72d7d97.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvYXJjZ2lzX2FuYWx5c2lzX25vZGVfbW9kdWxlc19hcmNnaXNfYXBwLWNvbXBvbmVudHNfZGlzdF9lc21fYXJjZ2lzLTYxYjNjMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUM2RztBQUMwQjtBQUMzRTtBQUN6QjtBQUNBO0FBQzBDO0FBQ3pDO0FBQ1Q7QUFDRztBQUNEO0FBQ1U7O0FBRXZDLG9FQUFvRSxhQUFhLFlBQVksOEJBQThCLG1CQUFtQixnQkFBZ0IsZUFBZSxtREFBbUQsa0NBQWtDLCtDQUErQyxpQkFBaUIsbUJBQW1CLDZDQUE2QyxxQkFBcUIsNkRBQTZELG9CQUFvQiw2REFBNkQsNkNBQTZDLG1CQUFtQixxQkFBcUIsNEVBQTRFLGVBQWUsOEJBQThCLGFBQWEsbUJBQW1CLFdBQVcsbUJBQW1CLHFCQUFxQixlQUFlLG9CQUFvQixpQkFBaUIsa0JBQWtCLGNBQWMsaUJBQWlCLGNBQWMsY0FBYzs7QUFFdjhCO0FBQ0E7QUFDQSxRQUFRLHFEQUFnQjtBQUN4QiwrREFBK0QscURBQVc7QUFDMUUsbUVBQW1FLHFEQUFXO0FBQzlFLDhEQUE4RCxxREFBVztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUJBQWlCLEVBQUUsK0RBQWlCO0FBQ3BELHlCQUF5QixtRUFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtB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aUJBQWlCLEVBQUUsK0RBQWlCO0FBQ2hEO0FBQ0EscUJBQXFCLG1FQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRXlIOztBQUV6SCIsInNvdXJjZXMiOlsid2VicGFjazovL2V4Yi1jbGllbnQvLi9leHRlbnNpb25zL3dpZGdldHMvYXJjZ2lzL2FuYWx5c2lzL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2FwcC1jb21wb25lbnRzL2Rpc3QvZXNtL2FyY2dpcy1zbWFydC1tYXBwaW5nLXJlbGF0aW9uc2hpcC1mb2N1cy1idXR0b24uZW50cnkuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL2V4dGVuc2lvbnMvd2lkZ2V0cy9hcmNnaXMvYW5hbHlzaXMvbm9kZV9tb2R1bGVzL0BhcmNnaXMvYXBwLWNvbXBvbmVudHMvZGlzdC9lc20vbG9hZGluZy02OTEzOTkwNy5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL2FyY2dpcy9hbmFseXNpcy9ub2RlX21vZHVsZXMvQGFyY2dpcy9hcHAtY29tcG9uZW50cy9kaXN0L2VzbS9yZWxhdGlvbnNoaXAtYjcyZDdkOTcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogdjQuMC41OFxuICovXG5pbXBvcnQgeyByIGFzIHJlZ2lzdGVySW5zdGFuY2UsIGMgYXMgY3JlYXRlRXZlbnQsIGgsIEggYXMgSG9zdCwgZCBhcyBnZXRFbGVtZW50IH0gZnJvbSAnLi9pbmRleC1lM2JmN2RhNy5qcyc7XG5pbXBvcnQgeyBlIGFzIGFwcGx5UmVuZGVyZXIsIGFiIGFzIHVwZGF0ZVJlbmRlcmVyLCBzIGFzIHNtYXJ0TWFwcGluZ1N0YXRlLCBoIGFzIGdldFJlbmRlcmVyIH0gZnJvbSAnLi9yYXN0ZXItdW5pcXVlLXZhbHVlLTA5NzZlYzdmLmpzJztcbmltcG9ydCB7IHIgYXMgcmVxdWVzdFdyYXBwZXIgfSBmcm9tICcuL2xvYWRpbmctNjkxMzk5MDcuanMnO1xuaW1wb3J0ICcuL2xvYWRNb2R1bGVzLWI0YWMxMjQ3LmpzJztcbmltcG9ydCAnLi9jb21tb25FbnVtcy1mY2YxMzY2MS5qcyc7XG5pbXBvcnQgeyB1IGFzIHVwZGF0ZVJlbGF0aW9uc2hpcFJlbmRlcmVyIH0gZnJvbSAnLi9yZWxhdGlvbnNoaXAtYjcyZDdkOTcuanMnO1xuaW1wb3J0ICcuL2xhbmd1YWdlVXRpbC1lZjBlNTRiMi5qcyc7XG5pbXBvcnQgJy4vZG9tLTRkMzY3Njc3LmpzJztcbmltcG9ydCAnLi9sb2NhbGUtMDUwYjZkYjkuanMnO1xuaW1wb3J0ICcuL2luZGV4LTA1OTU2Y2FiLmpzJztcbmltcG9ydCAnLi9jb21tb25GdW5jdGlvbnMtYjA4MzBlOWUuanMnO1xuXG5jb25zdCBhcmNnaXNTbWFydE1hcHBpbmdSZWxhdGlvbnNoaXBGb2N1c0J1dHRvbkNzcyA9IFwiLmZvY3VzLWJ1dHRvbntkaXNwbGF5OmZsZXg7cGFkZGluZzo2cHg7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47YWxpZ24taXRlbXM6Y2VudGVyO2JvcmRlci1yYWRpdXM6MDtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0xKTtjb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLXRleHQtMSk7Ym9yZGVyLWNvbG9yOnZhcigtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0zKTtib3JkZXItd2lkdGg6MnB4O2JvcmRlci1zdHlsZTpzb2xpZDtib3gtc2hhZG93OnRyYW5zcGFyZW50IDBweCAwcHggMHB4IDFweCBpbnNldH0uZm9jdXMtYnV0dG9uOmFjdGl2ZXtib3gtc2hhZG93Omluc2V0IDAgMCAwIDFweCB2YXIoLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMyl9LmZvY3VzLWJ1dHRvbjpmb2N1c3tib3gtc2hhZG93Omluc2V0IDAgMCAwIDFweCB2YXIoLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMyk7b3V0bGluZToycHggc29saWQgdmFyKC0tY2FsY2l0ZS1jb2xvci1icmFuZCk7b3V0bGluZS1vZmZzZXQ6MnB4fS5mb2N1cy1idXR0b24uYWN0aXZle291dGxpbmU6MXB4IHNvbGlkIHZhcigtLWNhbGNpdGUtdWktZm9jdXMtY29sb3IsIHZhcigtLWNhbGNpdGUtY29sb3ItYnJhbmQpKX0uZm9jdXMtY29udGVudHtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3dpZHRoOjEwMCV9LmZvY3VzLWJ1dHRvbi10ZXh0e2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6MCAxMHB4fS5mb2N1cy1idXR0b24tdGl0bGV7Zm9udC13ZWlnaHQ6Ym9sZH0uZm9jdXMtYnV0dG9uLW1zZ3tmb250LXNpemU6ODAlO2xpbmUtaGVpZ2h0OjE2cHh9LmZvY3VzLW1hcmdpbnttYXJnaW46MTJweCAwfVwiO1xuXG5jb25zdCBBcmNnaXNTbWFydE1hcHBpbmdSZWxhdGlvbnNoaXBGb2N1c0J1dHRvbiA9IGNsYXNzIHtcbiAgICBjb25zdHJ1Y3Rvcihob3N0UmVmKSB7XG4gICAgICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgaG9zdFJlZik7XG4gICAgICAgIHRoaXMuYXJjZ2lzU21hcnRNYXBwaW5nUmVsYXRpb25zaGlwRm9jdXNCdXR0b25DaGFuZ2UgPSBjcmVhdGVFdmVudCh0aGlzLCBcImFyY2dpc1NtYXJ0TWFwcGluZ1JlbGF0aW9uc2hpcEZvY3VzQnV0dG9uQ2hhbmdlXCIsIDcpO1xuICAgICAgICB0aGlzLmFyY2dpc1NtYXJ0TWFwcGluZ1JlbGF0aW9uc2hpcEZvY3VzQnV0dG9uQmVmb3JlT3BlbiA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiYXJjZ2lzU21hcnRNYXBwaW5nUmVsYXRpb25zaGlwRm9jdXNCdXR0b25CZWZvcmVPcGVuXCIsIDcpO1xuICAgICAgICB0aGlzLmFyY2dpc1NtYXJ0TWFwcGluZ1JlbGF0aW9uc2hpcEZvY3VzQnV0dG9uRXJyb3IgPSBjcmVhdGVFdmVudCh0aGlzLCBcImFyY2dpc1NtYXJ0TWFwcGluZ1JlbGF0aW9uc2hpcEZvY3VzQnV0dG9uRXJyb3JcIiwgNyk7XG4gICAgICAgIHRoaXMub3BlbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLmZsb3dJdGVtTm9kZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5zZWxlY3RlZEZvY3VzSW5mbyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vXG4gICAgLy8gIFB1YmxpYyBNZXRob2RzXG4gICAgLy9cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLyoqXG4gICAgICogU2V0IGZvY3VzIG9uIGNvbXBvbmVudFxuICAgICAqL1xuICAgIGFzeW5jIHNldEZvY3VzKCkge1xuICAgICAgICB0aGlzLmJ1dHRvbk5vZGUuZm9jdXMoKTtcbiAgICB9XG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vXG4gICAgLy8gIExpZmVjeWNsZVxuICAgIC8vXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgICAgICBjb25zdCB7IGxheWVyLCBzdHJpbmdzIH0gPSBzbWFydE1hcHBpbmdTdGF0ZTtcbiAgICAgICAgY29uc3QgcmVuZGVyZXIgPSBnZXRSZW5kZXJlcihsYXllcik7XG4gICAgICAgIHRoaXMuZm9jdXNJbmZvcyA9IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBmb2N1czogXCJISFwiLFxuICAgICAgICAgICAgICAgIHRpdGxlOiBzdHJpbmdzLnJlbGF0aW9uc2hpcEZvY3VzQnV0dG9uLmZvY3VzSGlnaEhpZ2gsXG4gICAgICAgICAgICAgICAgbXNnOiBzdHJpbmdzLnJlbGF0aW9uc2hpcEZvY3VzQnV0dG9uLmZvY3VzSGlnaEhpZ2hNc2csXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGljb25QYXRoOiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZvY3VzOiBcIkhMXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6IHN0cmluZ3MucmVsYXRpb25zaGlwRm9jdXNCdXR0b24uZm9jdXNIaWdoTG93LFxuICAgICAgICAgICAgICAgIG1zZzogc3RyaW5ncy5yZWxhdGlvbnNoaXBGb2N1c0J1dHRvbi5mb2N1c0hpZ2hMb3dNc2csXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGljb25QYXRoOiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZvY3VzOiBcIkxIXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6IHN0cmluZ3MucmVsYXRpb25zaGlwRm9jdXNCdXR0b24uZm9jdXNMb3dIaWdoLFxuICAgICAgICAgICAgICAgIG1zZzogc3RyaW5ncy5yZWxhdGlvbnNoaXBGb2N1c0J1dHRvbi5mb2N1c0xvd0hpZ2hNc2csXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGljb25QYXRoOiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZvY3VzOiBcIkxMXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6IHN0cmluZ3MucmVsYXRpb25zaGlwRm9jdXNCdXR0b24uZm9jdXNMb3dMb3csXG4gICAgICAgICAgICAgICAgbXNnOiBzdHJpbmdzLnJlbGF0aW9uc2hpcEZvY3VzQnV0dG9uLmZvY3VzTG93TG93TXNnLFxuICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpY29uUGF0aDogbnVsbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBmb2N1czogXCJub25lXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6IHN0cmluZ3MucmVsYXRpb25zaGlwRm9jdXNCdXR0b24ubm9uZSxcbiAgICAgICAgICAgICAgICBtc2c6IHN0cmluZ3MucmVsYXRpb25zaGlwRm9jdXNCdXR0b24uZm9jdXNOb25lTXNnLFxuICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpY29uUGF0aDogbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICBdO1xuICAgICAgICB0aGlzLnNldFNlbGVjdGVkRm9jdXMocmVuZGVyZXIuYXV0aG9yaW5nSW5mby5mb2N1cyk7XG4gICAgfVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvL1xuICAgIC8vICBSZW5kZXIgTWV0aG9kc1xuICAgIC8vXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBzdHJpbmdzIH0gPSBzbWFydE1hcHBpbmdTdGF0ZTtcbiAgICAgICAgcmV0dXJuIChoKEhvc3QsIG51bGwsIGgoXCJjYWxjaXRlLWxhYmVsXCIsIHsgY2xhc3M6IFwiZm9jdXMtbWFyZ2luXCIgfSwgc3RyaW5ncy5yZWxhdGlvbnNoaXBGb2N1c0J1dHRvbi5mb2N1cywgaChcImRpdlwiLCB7IGNsYXNzOiBcImZvY3VzLWJ1dHRvblwiLCByb2xlOiBcImJ1dHRvblwiLCB0YWJpbmRleDogXCIwXCIsIFwiYXJpYS1oYXNwb3B1cFwiOiBcInRydWVcIiwgXCJhcmlhLWxhYmVsXCI6IHN0cmluZ3MucmVsYXRpb25zaGlwRm9jdXNCdXR0b24uZm9jdXMsIHJlZjogKG5vZGUpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1dHRvbk5vZGUgPSBub2RlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIG9uS2V5RG93bjogKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCIgXCIgfHwgZXZlbnQua2V5ID09PSBcIkVudGVyXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMub3BlbkZvY3VzRHJvcGRvd24oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBvbkNsaWNrOiAoKSA9PiB0aGlzLm9wZW5Gb2N1c0Ryb3Bkb3duKCkgfSwgaChcImRpdlwiLCB7IGNsYXNzOiBcImZvY3VzLWNvbnRlbnRcIiB9LCBoKFwiZGl2XCIsIHsgY2xhc3M6IFwiZm9jdXMtYnV0dG9uLXRleHRcIiB9LCBoKFwiZGl2XCIsIHsgY2xhc3M6IFwiZm9jdXMtYnV0dG9uLXRpdGxlXCIgfSwgdGhpcy5zZWxlY3RlZEZvY3VzSW5mby50aXRsZSksIGgoXCJkaXZcIiwgeyBjbGFzczogXCJmb2N1cy1idXR0b24tbXNnXCIgfSwgdGhpcy5zZWxlY3RlZEZvY3VzSW5mby5tc2cpKSwgaChcImRpdlwiLCBudWxsLCBoKFwiY2FsY2l0ZS1pY29uXCIsIHsgc2NhbGU6IFwic1wiLCBpY29uOiBcImNoZXZyb24tZG93blwiIH0pKSkpKSkpO1xuICAgIH1cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy9cbiAgICAvLyAgUHJpdmF0ZSBNZXRob2RzXG4gICAgLy9cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgY2xvc2VQb3BvdmVyKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHRoaXMub3BlbiA9IGZhbHNlO1xuICAgICAgICBpZiAodGhpcy5kcm9wZG93bk5vZGUpIHtcbiAgICAgICAgICAgIChfYSA9IHRoaXMuZHJvcGRvd25Ob2RlLnBhcmVudE5vZGUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5yZW1vdmVDaGlsZCh0aGlzLmRyb3Bkb3duTm9kZSk7XG4gICAgICAgICAgICB0aGlzLmRyb3Bkb3duTm9kZSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmJ1dHRvbk5vZGUuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvcGVuRm9jdXNEcm9wZG93bigpIHtcbiAgICAgICAgaWYgKCF0aGlzLm9wZW4pIHtcbiAgICAgICAgICAgIHRoaXMuYXJjZ2lzU21hcnRNYXBwaW5nUmVsYXRpb25zaGlwRm9jdXNCdXR0b25CZWZvcmVPcGVuLmVtaXQoKTtcbiAgICAgICAgICAgIGNvbnN0IGRyb3Bkb3duID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFyY2dpcy1zbWFydC1tYXBwaW5nLWRyb3Bkb3duXCIpO1xuICAgICAgICAgICAgZHJvcGRvd24uYnV0dG9uTm9kZSA9IHRoaXMuYnV0dG9uTm9kZTtcbiAgICAgICAgICAgIGRyb3Bkb3duLmluZm9zID0gdGhpcy5mb2N1c0luZm9zO1xuICAgICAgICAgICAgdGhpcy5kcm9wZG93bk5vZGUgPSBkcm9wZG93bjtcbiAgICAgICAgICAgIGRyb3Bkb3duLmFkZEV2ZW50TGlzdGVuZXIoXCJhcmNnaXNTbWFydE1hcHBpbmdEcm9wZG93bkNsb3NlXCIsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VQb3BvdmVyKCk7XG4gICAgICAgICAgICAgICAgZXZlbnQuZGV0YWlsID09PSBcIkVzY2FwZVwiICYmIHRoaXMuc2V0Rm9jdXMoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZHJvcGRvd24uYWRkRXZlbnRMaXN0ZW5lcihcImFyY2dpc1NtYXJ0TWFwcGluZ0Ryb3Bkb3duQ2hhbmdlXCIsIChldmVudCkgPT4gdGhpcy5zZXROZXdGb2N1cyhldmVudC5kZXRhaWwpKTtcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uTm9kZS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkcm9wZG93bik7XG4gICAgICAgICAgICB0aGlzLm9wZW4gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vcGVuID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0TmV3Rm9jdXMobmV3Rm9jdXNJbmZvKSB7XG4gICAgICAgIGNvbnN0IHsgbGF5ZXIgfSA9IHNtYXJ0TWFwcGluZ1N0YXRlO1xuICAgICAgICBjb25zdCByZW5kZXJlciA9IGdldFJlbmRlcmVyKGxheWVyKTtcbiAgICAgICAgY29uc3QgYXV0aEluZm8gPSByZW5kZXJlci5hdXRob3JpbmdJbmZvO1xuICAgICAgICBjb25zdCBjdXJyZW50Rm9jdXMgPSBhdXRoSW5mby5mb2N1cztcbiAgICAgICAgY29uc3QgbmV3Rm9jdXMgPSBuZXdGb2N1c0luZm8uZm9jdXM7XG4gICAgICAgIGlmIChuZXdGb2N1cyA9PT0gY3VycmVudEZvY3VzKSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlUG9wb3ZlcigpO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLnNldEZvY3VzKCksIDMwMCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmVxdWVzdFdyYXBwZXIodXBkYXRlUmVsYXRpb25zaGlwUmVuZGVyZXIoeyBmb2N1czogbmV3Rm9jdXMgfSksIHRoaXMuZmxvd0l0ZW1Ob2RlKS50aGVuKCh1cGRhdGVkUmVuZGVyZXIpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0U2VsZWN0ZWRGb2N1cyhuZXdGb2N1c0luZm8uZm9jdXMpO1xuICAgICAgICAgICAgYXBwbHlSZW5kZXJlcih1cGRhdGVkUmVuZGVyZXIsIGxheWVyKTtcbiAgICAgICAgICAgIHVwZGF0ZVJlbmRlcmVyKCk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMuc2V0Rm9jdXMoKSwgMzAwKTtcbiAgICAgICAgICAgIHRoaXMuYXJjZ2lzU21hcnRNYXBwaW5nUmVsYXRpb25zaGlwRm9jdXNCdXR0b25DaGFuZ2UuZW1pdCgpO1xuICAgICAgICB9KSxcbiAgICAgICAgICAgIChlcnJvcikgPT4ge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5zZXRGb2N1cygpKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFyY2dpc1NtYXJ0TWFwcGluZ1JlbGF0aW9uc2hpcEZvY3VzQnV0dG9uRXJyb3IuZW1pdChlcnJvcik7XG4gICAgICAgICAgICB9O1xuICAgICAgICB0aGlzLmNsb3NlUG9wb3ZlcigpO1xuICAgIH1cbiAgICBzZXRTZWxlY3RlZEZvY3VzKG5ld0ZvY3VzKSB7XG4gICAgICAgIHRoaXMuZm9jdXNJbmZvcy5mb3JFYWNoKChpbmZvKSA9PiB7XG4gICAgICAgICAgICBpZiAoaW5mby5mb2N1cyA9PT0gbmV3Rm9jdXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkRm9jdXNJbmZvID0gaW5mbztcbiAgICAgICAgICAgICAgICBpbmZvLnNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGluZm8uc2VsZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldCBob3N0RWxlbWVudCgpIHsgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7IH1cbn07XG5BcmNnaXNTbWFydE1hcHBpbmdSZWxhdGlvbnNoaXBGb2N1c0J1dHRvbi5zdHlsZSA9IGFyY2dpc1NtYXJ0TWFwcGluZ1JlbGF0aW9uc2hpcEZvY3VzQnV0dG9uQ3NzO1xuXG5leHBvcnQgeyBBcmNnaXNTbWFydE1hcHBpbmdSZWxhdGlvbnNoaXBGb2N1c0J1dHRvbiBhcyBhcmNnaXNfc21hcnRfbWFwcGluZ19yZWxhdGlvbnNoaXBfZm9jdXNfYnV0dG9uIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFyY2dpcy1zbWFydC1tYXBwaW5nLXJlbGF0aW9uc2hpcC1mb2N1cy1idXR0b24uZW50cnkuanMubWFwIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogdjQuMC41OFxuICovXG5sZXQgX2xvYWRpbmdUaW1lcjtcbmxldCBfcmVxdWVzdENhbmNlbGxlZDtcbmZ1bmN0aW9uIHN0YXJ0TG9hZGluZyhub2RlKSB7XG4gICAgbm9kZS5sb2FkaW5nID0gdHJ1ZTtcbiAgICBfcmVxdWVzdENhbmNlbGxlZCA9IGZhbHNlO1xuICAgIGlmIChfbG9hZGluZ1RpbWVyKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChfbG9hZGluZ1RpbWVyKTtcbiAgICB9XG4gICAgX2xvYWRpbmdUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAvLyB0b29rIHRvbyBsb25nXG4gICAgICAgIGVuZExvYWRpbmcobm9kZSk7XG4gICAgICAgIF9yZXF1ZXN0Q2FuY2VsbGVkID0gdHJ1ZTtcbiAgICB9LCA2MDAwMCk7XG59XG5mdW5jdGlvbiBlbmRMb2FkaW5nKG5vZGUpIHtcbiAgICBub2RlLmxvYWRpbmcgPSBmYWxzZTtcbn1cbmZ1bmN0aW9uIHJlcXVlc3RXcmFwcGVyKHJlcXVlc3QsIG5vZGUpIHtcbiAgICBzdGFydExvYWRpbmcobm9kZSk7XG4gICAgcmV0dXJuIHJlcXVlc3RcbiAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICBlbmRMb2FkaW5nKG5vZGUpO1xuICAgICAgICBpZiAoIV9yZXF1ZXN0Q2FuY2VsbGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKFwidGltZW91dFwiKSk7XG4gICAgICAgIH1cbiAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgIGVuZExvYWRpbmcobm9kZSk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG59XG5cbmV4cG9ydCB7IHJlcXVlc3RXcmFwcGVyIGFzIHIgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9hZGluZy02OTEzOTkwNy5qcy5tYXAiLCIvKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiB2NC4wLjU4XG4gKi9cbmltcG9ydCB7IGggYXMgZ2V0UmVuZGVyZXIsIGcgYXMgZ2V0UmVuZGVyZXJUeXBlLCBhIGFzIGdldFZpc1ZhciwgUiBhcyBpc0VtcHR5LCBhMCBhcyBmaW5kUmVsYXRpb25zaGlwU2NoZW1lLCBtIGFzIHNhdmVFeHRyYVZpc1ZhcnMsIGwgYXMgYXBwbHlFeHRyYVZpc1ZhcnMsIHIgYXMgYXBwbHlTeW1ib2xDb2xvciwgdCBhcyBnZXRTeW1ib2xDb2xvciwgcyBhcyBzbWFydE1hcHBpbmdTdGF0ZSwgbiBhcyBnZXRWaXNWYXJzRXhjZXB0LCBvIGFzIGdldEF1dGhWaXNWYXJzRXhjZXB0LCBxIGFzIGlzUG9seWdvblR5cGUsIFMgYXMgZ2V0RGVmYXVsdFN5bWJvbCwgdyBhcyBzaW1wbGVGaWVsZFR5cGVzIH0gZnJvbSAnLi9yYXN0ZXItdW5pcXVlLXZhbHVlLTA5NzZlYzdmLmpzJztcbmltcG9ydCAnLi9sb2FkTW9kdWxlcy1iNGFjMTI0Ny5qcyc7XG5pbXBvcnQgeyBpIGFzIGlzRGVmaW5lZCB9IGZyb20gJy4vY29tbW9uRnVuY3Rpb25zLWIwODMwZTllLmpzJztcblxuLyoqXG4gKiBVcGRhdGVzIHRoZSBsYXllciB3aXRoIGEgQ29sb3IgcmVuZGVyZXIgd2l0aCBkZWZhdWx0IHNldHRpbmdzXG4gKiBAcGFyYW0gb3B0aW9uczogb3B0aW9uc1xuICovXG5mdW5jdGlvbiBjcmVhdGVSZWxhdGlvbnNoaXBSZW5kZXJlcihvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCB7IGxheWVyOiBzbUxheWVyLCBtYXBJbWFnZVN1YmxheWVyLCBtYXBWaWV3LCBtb2R1bGVzIH0gPSBzbWFydE1hcHBpbmdTdGF0ZTtcbiAgICBjb25zdCBsYXllciA9IHNtTGF5ZXI7XG4gICAgY29uc3QgcmVuZGVyZXJUeXBlID0gZ2V0UmVuZGVyZXJUeXBlKCk7XG4gICAgbGV0IHJlbGF0aW9uc2hpcFNjaGVtZSA9IG9wdGlvbnMucmVsYXRpb25zaGlwU2NoZW1lO1xuICAgIGlmICghcmVsYXRpb25zaGlwU2NoZW1lICYmIFtcInJlbGF0aW9uc2hpcFwiLCBcInJlbGF0aW9uc2hpcC1zaXplXCJdLmluZGV4T2YocmVuZGVyZXJUeXBlKSA+IC0xKSB7XG4gICAgICAgIHJlbGF0aW9uc2hpcFNjaGVtZSA9IGZpbmRSZWxhdGlvbnNoaXBTY2hlbWUoKTtcbiAgICB9XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgaWYgKHJlbmRlcmVyVHlwZSA9PT0gXCJyZWxhdGlvbnNoaXAtc2l6ZVwiKSB7XG4gICAgICAgIGNvbnN0IHJlbmRlcmVyID0gZ2V0UmVuZGVyZXIobGF5ZXIpLmNsb25lKCk7XG4gICAgICAgIGNvbnN0IGF1dGhJbmZvID0gcmVuZGVyZXIuYXV0aG9yaW5nSW5mbztcbiAgICAgICAgaWYgKGF1dGhJbmZvICYmXG4gICAgICAgICAgICAoKF9hID0gb3B0aW9ucy5maWVsZEluZm9zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSA+IDEgJiZcbiAgICAgICAgICAgIG9wdGlvbnMuZmllbGRJbmZvc1swXS5maWVsZCA9PSBhdXRoSW5mby5maWVsZDEuZmllbGQgJiZcbiAgICAgICAgICAgIG9wdGlvbnMuZmllbGRJbmZvc1sxXS5maWVsZCA9PSBhdXRoSW5mby5maWVsZDIuZmllbGQpIHtcbiAgICAgICAgICAgIC8vIHJlLXVzZSByZWxhdGlvbnNoaXAgcmVuZGVyZXI7IHJlbW92ZSBzaXplXG4gICAgICAgICAgICByZW5kZXJlci52aXN1YWxWYXJpYWJsZXMgPSBnZXRWaXNWYXJzRXhjZXB0KHJlbmRlcmVyLCBcInNpemVcIik7XG4gICAgICAgICAgICByZW5kZXJlci5hdXRob3JpbmdJbmZvLnZpc3VhbFZhcmlhYmxlcyA9IGdldEF1dGhWaXNWYXJzRXhjZXB0KHJlbmRlcmVyLCBcInNpemVcIik7XG4gICAgICAgICAgICBpZiAoaXNQb2x5Z29uVHlwZShsYXllcikpIHtcbiAgICAgICAgICAgICAgICAvLyBzd2l0Y2ggbWFya2VycyB0byBwb2x5Z29uc1xuICAgICAgICAgICAgICAgIGNvbnN0IHBvbHlnb25TeW1ib2wgPSBnZXREZWZhdWx0U3ltYm9sKGxheWVyLCBtYXBWaWV3KTtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmZvcyA9IHJlbmRlcmVyLnVuaXF1ZVZhbHVlSW5mb3Muc2xpY2UoKTtcbiAgICAgICAgICAgICAgICBpbmZvcy5tYXAoKHZhbHVlSW5mbykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjb2xvciA9IGdldFN5bWJvbENvbG9yKHZhbHVlSW5mby5zeW1ib2wpO1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZUluZm8uc3ltYm9sID0gcG9seWdvblN5bWJvbC5jbG9uZSgpO1xuICAgICAgICAgICAgICAgICAgICBhcHBseVN5bWJvbENvbG9yKHZhbHVlSW5mby5zeW1ib2wsIGNvbG9yKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZW5kZXJlci51bmlxdWVWYWx1ZUluZm9zID0gaW5mb3M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsgcmVuZGVyZXIgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgZXh0cmFzID0gc2F2ZUV4dHJhVmlzVmFycyhnZXRSZW5kZXJlcihsYXllcikpO1xuICAgIGNvbnN0IGNvbmZpZyA9IHtcbiAgICAgICAgbGF5ZXIsXG4gICAgICAgIHZpZXc6IG1hcFZpZXcsXG4gICAgICAgIGZpZWxkMTogeyBmaWVsZDogb3B0aW9ucy5maWVsZEluZm9zWzBdLmZpZWxkIH0sXG4gICAgICAgIGZpZWxkMjogeyBmaWVsZDogb3B0aW9ucy5maWVsZEluZm9zWzFdLmZpZWxkIH0sXG4gICAgICAgIGNsYXNzaWZpY2F0aW9uTWV0aG9kOiBcInF1YW50aWxlXCIsXG4gICAgICAgIG51bUNsYXNzZXM6IDMsXG4gICAgICAgIGZvY3VzOiBcIkhIXCIsXG4gICAgICAgIHJlbGF0aW9uc2hpcFNjaGVtZSxcbiAgICAgICAgb3V0bGluZU9wdGltaXphdGlvbkVuYWJsZWQ6IG1hcEltYWdlU3VibGF5ZXJcbiAgICAgICAgICAgID8gZmFsc2VcbiAgICAgICAgICAgIDogaXNEZWZpbmVkKG9wdGlvbnMub3V0bGluZU9wdGltaXphdGlvbkVuYWJsZWQpXG4gICAgICAgICAgICAgICAgPyBvcHRpb25zLm91dGxpbmVPcHRpbWl6YXRpb25FbmFibGVkXG4gICAgICAgICAgICAgICAgOiB0cnVlLFxuICAgICAgICBzaXplT3B0aW1pemF0aW9uRW5hYmxlZDogbWFwSW1hZ2VTdWJsYXllclxuICAgICAgICAgICAgPyBmYWxzZVxuICAgICAgICAgICAgOiBpc0RlZmluZWQob3B0aW9ucy5zaXplT3B0aW1pemF0aW9uRW5hYmxlZClcbiAgICAgICAgICAgICAgICA/IG9wdGlvbnMuc2l6ZU9wdGltaXphdGlvbkVuYWJsZWRcbiAgICAgICAgICAgICAgICA6IHRydWUsXG4gICAgICAgIGxlZ2VuZE9wdGlvbnM6IG9wdGlvbnMubGVnZW5kT3B0aW9ucyxcbiAgICAgICAgZGVmYXVsdFN5bWJvbEVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICBmb3JCaW5uaW5nOiAoKF9iID0gbGF5ZXIuZmVhdHVyZVJlZHVjdGlvbikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnR5cGUpID09PSBcImJpbm5pbmdcIlxuICAgIH07XG4gICAgLy9jb25zb2xlLmxvZyhcImNyZWF0ZVJlbGF0aW9uc2hpcFJlbmRlcmVyXCIsIGNvbmZpZyk7XG4gICAgcmV0dXJuIG1vZHVsZXMuUmVsYXRpb25zaGlwQ3JlYXRvci5jcmVhdGVSZW5kZXJlcihjb25maWcpLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAvL2NvbnNvbGUubG9nKFwiY3JlYXRlUmVsYXRpb25zaGlwUmVuZGVyZXItc3VjY2Vzc1wiLCByZXN1bHQpO1xuICAgICAgICBhcHBseUV4dHJhVmlzVmFycyhleHRyYXMsIHJlc3VsdC5yZW5kZXJlcik7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzdWx0KTtcbiAgICB9LCAoZXJyb3IpID0+IFByb21pc2UucmVqZWN0KGVycm9yKSk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBSZWxhdGlvbnNoaXAgcmVuZGVyZXIgd2l0aCBzZXR0aW5ncyBmcm9tIGN1cnJlbnQgcmVuZGVyZXJcbiAqL1xuZnVuY3Rpb24gY3JlYXRlUmVsYXRpb25zaGlwUmVuZGVyZXJGcm9tRXhpc3Rpbmcob3B0aW9ucykge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCB7IGxheWVyOiBzbUxheWVyLCBtYXBJbWFnZVN1YmxheWVyLCBtYXBWaWV3LCBtb2R1bGVzIH0gPSBzbWFydE1hcHBpbmdTdGF0ZTtcbiAgICBjb25zdCBsYXllciA9IHNtTGF5ZXI7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgY29uc3QgcmVuZGVyZXIgPSBnZXRSZW5kZXJlcihsYXllcik7XG4gICAgY29uc3QgcmVuZGVyZXJUeXBlID0gZ2V0UmVuZGVyZXJUeXBlKCk7XG4gICAgY29uc3QgYXV0aEluZm8gPSByZW5kZXJlci5hdXRob3JpbmdJbmZvO1xuICAgIC8vIGFyZSB3ZSBjb21pbmcgZnJvbSBhIHJlbGF0aW9uc2hpcC1zaXplIHJlbmRlcmVyP1xuICAgIGNvbnN0IHNpemVWaXNWYXIgPSBnZXRWaXNWYXIocmVuZGVyZXIsIFwic2l6ZVwiKTtcbiAgICBpZiAob3B0aW9ucy5maWVsZEluZm9zICYmXG4gICAgICAgIG9wdGlvbnMuZmllbGRJbmZvcy5sZW5ndGggPiAxICYmXG4gICAgICAgIG9wdGlvbnMuZmllbGRJbmZvc1swXS5maWVsZCA9PSBhdXRoSW5mby5maWVsZDEuZmllbGQgJiZcbiAgICAgICAgb3B0aW9ucy5ub3JtYWxpemF0aW9uRmllbGQxID09PSBhdXRoSW5mby5maWVsZDEubm9ybWFsaXphdGlvbkZpZWxkICYmXG4gICAgICAgIG9wdGlvbnMuZmllbGRJbmZvc1sxXS5maWVsZCA9PSBhdXRoSW5mby5maWVsZDIuZmllbGQgJiZcbiAgICAgICAgb3B0aW9ucy5ub3JtYWxpemF0aW9uRmllbGQyID09PSBhdXRoSW5mby5maWVsZDIubm9ybWFsaXphdGlvbkZpZWxkKSB7XG4gICAgICAgIC8vIG5vIGNoYW5nZXMgdG8gZmllbGRzXG4gICAgICAgIGRlbGV0ZSBvcHRpb25zLmZpZWxkSW5mb3M7XG4gICAgICAgIGRlbGV0ZSBvcHRpb25zLm5vcm1hbGl6YXRpb25GaWVsZDE7XG4gICAgICAgIGRlbGV0ZSBvcHRpb25zLm5vcm1hbGl6YXRpb25GaWVsZDI7XG4gICAgICAgIGlmIChpc0VtcHR5KG9wdGlvbnMpICYmICFzaXplVmlzVmFyKSB7XG4gICAgICAgICAgICAvLyBub3RoaW5nIHJlYWxseSBjaGFuZ2VzXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsgcmVuZGVyZXI6IHJlbmRlcmVyLmNsb25lKCkgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbGV0IHJlbGF0aW9uc2hpcFNjaGVtZSA9IG9wdGlvbnMucmVsYXRpb25zaGlwU2NoZW1lO1xuICAgIGlmICghcmVsYXRpb25zaGlwU2NoZW1lICYmIFtcInJlbGF0aW9uc2hpcFwiLCBcInJlbGF0aW9uc2hpcC1zaXplXCJdLmluZGV4T2YocmVuZGVyZXJUeXBlKSA+IC0xKSB7XG4gICAgICAgIHJlbGF0aW9uc2hpcFNjaGVtZSA9IGZpbmRSZWxhdGlvbnNoaXBTY2hlbWUoKTtcbiAgICB9XG4gICAgY29uc3QgZXh0cmFzID0gc2F2ZUV4dHJhVmlzVmFycyhyZW5kZXJlcik7XG4gICAgbGV0IGZpZWxkSW5mbzEgPSBvcHRpb25zLmZpZWxkSW5mb3NcbiAgICAgICAgPyBvcHRpb25zLmZpZWxkSW5mb3NbMF1cbiAgICAgICAgOiB7XG4gICAgICAgICAgICBmaWVsZDogYXV0aEluZm8uZmllbGQxLmZpZWxkLFxuICAgICAgICAgICAgc2ltcGxlRmllbGRUeXBlOiBzaW1wbGVGaWVsZFR5cGVzLk5VTUJFUlxuICAgICAgICB9O1xuICAgIGxldCBmaWVsZEluZm8yID0gb3B0aW9ucy5maWVsZEluZm9zXG4gICAgICAgID8gb3B0aW9ucy5maWVsZEluZm9zWzFdXG4gICAgICAgIDoge1xuICAgICAgICAgICAgZmllbGQ6IGF1dGhJbmZvLmZpZWxkMi5maWVsZCxcbiAgICAgICAgICAgIHNpbXBsZUZpZWxkVHlwZTogc2ltcGxlRmllbGRUeXBlcy5OVU1CRVJcbiAgICAgICAgfTtcbiAgICBjb25zdCBub3JtYWxpemF0aW9uRmllbGQxID0gb3B0aW9ucy5ub3JtYWxpemF0aW9uRmllbGQxICE9PSB1bmRlZmluZWQgLy8gbnVsbCBpcyB1c2VkIGFzIGEgdmFsdWVcbiAgICAgICAgPyBvcHRpb25zLm5vcm1hbGl6YXRpb25GaWVsZDFcbiAgICAgICAgOiBhdXRoSW5mby5maWVsZDEubm9ybWFsaXphdGlvbkZpZWxkO1xuICAgIGNvbnN0IG5vcm1hbGl6YXRpb25GaWVsZDIgPSBvcHRpb25zLm5vcm1hbGl6YXRpb25GaWVsZDIgIT09IHVuZGVmaW5lZCAvLyBudWxsIGlzIHVzZWQgYXMgYSB2YWx1ZVxuICAgICAgICA/IG9wdGlvbnMubm9ybWFsaXphdGlvbkZpZWxkMlxuICAgICAgICA6IGF1dGhJbmZvLmZpZWxkMi5ub3JtYWxpemF0aW9uRmllbGQ7XG4gICAgY29uc3Qgc3ltYm9sID0gcmVuZGVyZXIudW5pcXVlVmFsdWVJbmZvcyAmJiByZW5kZXJlci51bmlxdWVWYWx1ZUluZm9zLmxlbmd0aCA/IHJlbmRlcmVyLnVuaXF1ZVZhbHVlSW5mb3NbMF0uc3ltYm9sIDogbnVsbDtcbiAgICBjb25zdCBkZWZhdWx0U3ltYm9sID0gcmVuZGVyZXIuZGVmYXVsdFN5bWJvbDtcbiAgICBjb25zdCBkZWZhdWx0TGFiZWwgPSByZW5kZXJlci5kZWZhdWx0TGFiZWw7XG4gICAgY29uc3QgbnVtQ2xhc3NlcyA9IG9wdGlvbnMubnVtQ2xhc3NlcyA/IG9wdGlvbnMubnVtQ2xhc3NlcyA6IGF1dGhJbmZvLm51bUNsYXNzZXM7XG4gICAgLy8gVE9ETyBuZWVkIHRvIGtlZXAgcmFtcFxuICAgIHJldHVybiBtb2R1bGVzLlJlbGF0aW9uc2hpcENyZWF0b3IuY3JlYXRlUmVuZGVyZXIoe1xuICAgICAgICBsYXllcixcbiAgICAgICAgdmlldzogbWFwVmlldyxcbiAgICAgICAgZmllbGQxOiB7XG4gICAgICAgICAgICBmaWVsZDogZmllbGRJbmZvMSA/IGZpZWxkSW5mbzEuZmllbGQgOiByZW5kZXJlci5maWVsZCxcbiAgICAgICAgICAgIG5vcm1hbGl6YXRpb25GaWVsZDogbm9ybWFsaXphdGlvbkZpZWxkMVxuICAgICAgICB9LFxuICAgICAgICBmaWVsZDI6IHtcbiAgICAgICAgICAgIGZpZWxkOiBmaWVsZEluZm8yID8gZmllbGRJbmZvMi5maWVsZCA6IHJlbmRlcmVyLmZpZWxkLFxuICAgICAgICAgICAgbm9ybWFsaXphdGlvbkZpZWxkOiBub3JtYWxpemF0aW9uRmllbGQyXG4gICAgICAgIH0sXG4gICAgICAgIGNsYXNzaWZpY2F0aW9uTWV0aG9kOiBvcHRpb25zLmNsYXNzaWZpY2F0aW9uTWV0aG9kXG4gICAgICAgICAgICA/IG9wdGlvbnMuY2xhc3NpZmljYXRpb25NZXRob2RcbiAgICAgICAgICAgIDogYXV0aEluZm8uY2xhc3NpZmljYXRpb25NZXRob2QgIT09IFwibWFudWFsXCJcbiAgICAgICAgICAgICAgICA/IGF1dGhJbmZvLmNsYXNzaWZpY2F0aW9uTWV0aG9kXG4gICAgICAgICAgICAgICAgOiBcInF1YW50aWxlXCIsXG4gICAgICAgIG51bUNsYXNzZXMsXG4gICAgICAgIGZvY3VzOiBvcHRpb25zLmZvY3VzID8gb3B0aW9ucy5mb2N1cyA6IGF1dGhJbmZvLmZvY3VzLFxuICAgICAgICByZWxhdGlvbnNoaXBTY2hlbWUsXG4gICAgICAgIG91dGxpbmVPcHRpbWl6YXRpb25FbmFibGVkOiBtYXBJbWFnZVN1YmxheWVyXG4gICAgICAgICAgICA/IGZhbHNlXG4gICAgICAgICAgICA6IGlzRGVmaW5lZChvcHRpb25zLm91dGxpbmVPcHRpbWl6YXRpb25FbmFibGVkKVxuICAgICAgICAgICAgICAgID8gb3B0aW9ucy5vdXRsaW5lT3B0aW1pemF0aW9uRW5hYmxlZFxuICAgICAgICAgICAgICAgIDogISFleHRyYXMuc2l6ZU91dGxpbmVWaXNWYXIsXG4gICAgICAgIHNpemVPcHRpbWl6YXRpb25FbmFibGVkOiBtYXBJbWFnZVN1YmxheWVyXG4gICAgICAgICAgICA/IGZhbHNlXG4gICAgICAgICAgICA6IGlzRGVmaW5lZChvcHRpb25zLnNpemVPcHRpbWl6YXRpb25FbmFibGVkKVxuICAgICAgICAgICAgICAgID8gb3B0aW9ucy5zaXplT3B0aW1pemF0aW9uRW5hYmxlZFxuICAgICAgICAgICAgICAgIDogISFleHRyYXMuc2l6ZUF1dG9WaXNWYXIsXG4gICAgICAgIGxlZ2VuZE9wdGlvbnM6IG9wdGlvbnMubGVnZW5kT3B0aW9ucyA/IG9wdGlvbnMubGVnZW5kT3B0aW9ucyA6IHJlbmRlcmVyLmxlZ2VuZE9wdGlvbnMsXG4gICAgICAgIGRlZmF1bHRTeW1ib2xFbmFibGVkOiBpc0RlZmluZWQob3B0aW9ucy5kZWZhdWx0U3ltYm9sRW5hYmxlZClcbiAgICAgICAgICAgID8gb3B0aW9ucy5kZWZhdWx0U3ltYm9sRW5hYmxlZFxuICAgICAgICAgICAgOiAhIXJlbmRlcmVyLmRlZmF1bHRTeW1ib2wsXG4gICAgICAgIGZvckJpbm5pbmc6ICgoX2EgPSBsYXllci5mZWF0dXJlUmVkdWN0aW9uKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudHlwZSkgPT09IFwiYmlubmluZ1wiXG4gICAgfSkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJSZWxhdGlvbnNoaXBDcmVhdG9yLmNyZWF0ZVJlbmRlcmVyXCIsIHJlc3VsdCk7XG4gICAgICAgIGFwcGx5RXh0cmFWaXNWYXJzKGV4dHJhcywgcmVzdWx0LnJlbmRlcmVyKTtcbiAgICAgICAgaWYgKHN5bWJvbCkge1xuICAgICAgICAgICAgY29uc3QgaW5mb3MgPSByZXN1bHQucmVuZGVyZXIudW5pcXVlVmFsdWVJbmZvcztcbiAgICAgICAgICAgIGluZm9zLmZvckVhY2goKGluZm8pID0+IHtcbiAgICAgICAgICAgICAgICAvLyBrZWVwIHRoZSBzYW1lIHN5bWJvbCBzdHlsZSwgbm90IHRoZSBjb2xvclxuICAgICAgICAgICAgICAgIGNvbnN0IHN5bSA9IHN5bWJvbC5jbG9uZSgpO1xuICAgICAgICAgICAgICAgIGFwcGx5U3ltYm9sQ29sb3Ioc3ltLCBnZXRTeW1ib2xDb2xvcihpbmZvLnN5bWJvbCkpO1xuICAgICAgICAgICAgICAgIGluZm8uc3ltYm9sID0gc3ltO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8ga2VlcCBvbGQgbGFiZWxzXG4gICAgICAgIGlmICghb3B0aW9ucy5udW1DbGFzc2VzIHx8IG9wdGlvbnMubnVtQ2xhc3NlcyA9PT0gYXV0aEluZm8ubnVtQ2xhc3Nlcykge1xuICAgICAgICAgICAgZ2V0UmVuZGVyZXIobGF5ZXIpLnVuaXF1ZVZhbHVlSW5mb3MuZm9yRWFjaCgob2xkSW5mbykgPT4ge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5yZW5kZXJlci51bmlxdWVWYWx1ZUluZm9zLmZvckVhY2goKG5ld0luZm8pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9sZEluZm8udmFsdWUgPT09IG5ld0luZm8udmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0luZm8ubGFiZWwgPSBvbGRJbmZvLmxhYmVsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGVmYXVsdFN5bWJvbCkge1xuICAgICAgICAgICAgcmVzdWx0LnJlbmRlcmVyLmRlZmF1bHRTeW1ib2wgPSBkZWZhdWx0U3ltYm9sO1xuICAgICAgICAgICAgcmVzdWx0LnJlbmRlcmVyLmRlZmF1bHRMYWJlbCA9IGRlZmF1bHRMYWJlbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3VsdCk7XG4gICAgfSwgKGVycm9yKSA9PiBQcm9taXNlLnJlamVjdChlcnJvcikpO1xufVxuLyoqXG4gKiBVcGRhdGVzIGEgcmVsYXRpb25zaGlwIHJlbmRlcmVyIGFmdGVyIGNoYW5nZXMgdG8gc2xpZGVyIGJyZWFrcywgZm9jdXMsIGNvbG9yIHJhbXBcbiAqL1xuZnVuY3Rpb24gdXBkYXRlUmVsYXRpb25zaGlwUmVuZGVyZXIob3B0aW9ucykge1xuICAgIGNvbnN0IHsgbGF5ZXIsIG1vZHVsZXMgfSA9IHNtYXJ0TWFwcGluZ1N0YXRlO1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIGNvbnN0IHJlbmRlcmVyID0gZ2V0UmVuZGVyZXIobGF5ZXIpO1xuICAgIGNvbnN0IGF1dGhJbmZvID0gcmVuZGVyZXIuYXV0aG9yaW5nSW5mbztcbiAgICByZXR1cm4gbW9kdWxlcy5SZWxhdGlvbnNoaXBDcmVhdG9yLnVwZGF0ZVJlbmRlcmVyKHtcbiAgICAgICAgZmllbGQxOiBhdXRoSW5mby5maWVsZDEsXG4gICAgICAgIGZpZWxkMjogYXV0aEluZm8uZmllbGQyLFxuICAgICAgICBudW1DbGFzc2VzOiBvcHRpb25zLm51bUNsYXNzZXMgPyBvcHRpb25zLm51bUNsYXNzZXMgOiBhdXRoSW5mby5udW1DbGFzc2VzLFxuICAgICAgICBmb2N1czogb3B0aW9ucy5mb2N1cyA/IChvcHRpb25zLmZvY3VzID09PSBcIm5vbmVcIiA/IG51bGwgOiBvcHRpb25zLmZvY3VzKSA6IGF1dGhJbmZvLmZvY3VzLFxuICAgICAgICBjb2xvcnM6IG9wdGlvbnMuY29sb3JzLFxuICAgICAgICByZW5kZXJlclxuICAgIH0pO1xufVxuXG5leHBvcnQgeyBjcmVhdGVSZWxhdGlvbnNoaXBSZW5kZXJlckZyb21FeGlzdGluZyBhcyBhLCBjcmVhdGVSZWxhdGlvbnNoaXBSZW5kZXJlciBhcyBjLCB1cGRhdGVSZWxhdGlvbnNoaXBSZW5kZXJlciBhcyB1IH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbGF0aW9uc2hpcC1iNzJkN2Q5Ny5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=