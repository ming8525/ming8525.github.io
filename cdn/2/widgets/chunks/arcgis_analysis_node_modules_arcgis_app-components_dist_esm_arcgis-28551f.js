"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-28551f"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-restore-items.entry.js":
/*!***********************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-restore-items.entry.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_restore_items: () => (/* binding */ ArcgisRestoreItems)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user-3ea69c3a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js");
/* harmony import */ var _locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./locale-050b6db9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js");
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./languageUtil-ef0e54b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */












const canRestoreItem = (item, user) => {
    const url = `${user.userContentUrl}/items/${item.id}/canRestore`;
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_3__.r)(url);
};
/** If no folder ID passed, defaults to user's root folder */
const restoreItem = (item, user, folderID) => {
    const url = `${user.userContentUrl}/items/${item.id}/restore`;
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_3__.r)(url, { folderID }, {}, "post");
};

const MAX_BULK_RESTORE_ITEMS_COUNT = 20;
const getRestorableItems = async (items, user) => {
    const restorableItems = [];
    const sourceItems = []; // Must be restored before dependent items
    const unrestorableItems = [];
    await Promise.all(items.map(async (item) => {
        var _a;
        try {
            await canRestoreItem(item, user);
            sourceItems.push({ item });
        }
        catch (error) {
            const sharingError = Object.assign({}, error.details.raw);
            switch (sharingError.messageCode) {
                // This item has a related Service item
                case "CONT_00486":
                    {
                        const { offendingItems } = sharingError;
                        const offendingItemIds = (_a = offendingItems === null || offendingItems === void 0 ? void 0 : offendingItems.map((item) => item.itemId)) !== null && _a !== void 0 ? _a : [];
                        if (offendingItemIds.every((id) => items.map((item) => item.id).includes(id))) {
                            restorableItems.push({ item });
                        }
                        else {
                            unrestorableItems.push({ item, error: sharingError });
                        }
                    }
                    break;
                default:
                    unrestorableItems.push({ item, error: sharingError });
                    break;
            }
        }
    }));
    return { restorableItems, sourceItems, unrestorableItems };
};

const arcgisRestoreItemsCss = ".content{display:flex;min-height:72px;flex-direction:column}::slotted([slot=message]){margin-bottom:1rem}:host{display:flex;flex-direction:column;font-size:var(--calcite-font-size--1)}.folder-picker{margin-top:1rem}.divider{margin-left:0px;margin-right:0px;margin-top:1rem;margin-bottom:0px;border-style:none;border-top:1px solid #ccc}arcgis-items-summary:not(:first-of-type){margin-top:2rem}";

const ArcgisRestoreItems = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisRestoreItemsRestore = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisRestoreItemsRestore", 7);
        this.arcgisRestoreItemsClose = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisRestoreItemsClose", 7);
        this.headerTitle = "";
        this.renderContent = () => {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "message" }), this.restoreItemsBuckets.unrestorableItems.length >= 1 && this.renderUnrestorableItems(), this.allRestorableItems.length >= 1 && this.renderRestorableItems()));
        };
        this.renderUnrestorableItems = () => {
            const { i18n, restoreItemsBuckets } = this;
            const { unrestorableItems } = restoreItemsBuckets;
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-items-summary", null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "title" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", null, i18n.cannotRestore), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-items-summary-bucket", { popoverId: "restore-bucket", summaryGroups: [{ items: unrestorableItems }] })), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "description", innerHTML: i18n.dependentItems[unrestorableItems.length === 1 ? "single" : "multiple"].replace("${parent}", `${unrestorableItems[0].item.title}` // Only applies to single item
                ) })), this.allRestorableItems.length > 0 && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("hr", { class: "divider" })));
        };
        this.renderRestorableItems = () => {
            const { i18n } = this;
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-items-summary", null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "title" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", null, i18n.toRestore[this.allRestorableItems.length === 1 ? "single" : "multiple"]), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-items-summary-bucket", { popoverId: "restore-bucket", summaryGroups: [{ items: this.allRestorableItems }] }))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-folder-picker", { class: "folder-picker", label: this.i18n.restoreTo, user: this.user, onArcgisFolderPickerChange: (e) => (this.folder = e.detail) }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-notice", { open: true, class: "leader-1" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "message" }, this.i18n.noticeMessage))));
        };
        this.handleRestore = async () => {
            this.isLoading = true;
            const { restorableItems, sourceItems } = this.restoreItemsBuckets;
            const { folder } = this;
            // Dependent items cannot be restored until their source item is restored
            const restoredSourceItems = await this.restoreItems(sourceItems.map((bucket) => bucket.item), folder);
            const restoredRemainingItems = await this.restoreItems(restorableItems.map((bucket) => bucket.item), folder);
            this.arcgisRestoreItemsRestore.emit({
                restoredItems: [...restoredSourceItems, ...restoredRemainingItems],
                folder
            });
            this.active = false;
            this.isLoading = false;
        };
        this.restoreItems = async (items, folder = null) => {
            return Promise.all(items.map((item) => restoreItem(item, this.user, folder.id)));
        };
        this.user = undefined;
        this.portal = undefined;
        this.items = [];
        this.active = false;
        this.restoreItemsBuckets = {
            restorableItems: [],
            sourceItems: [],
            unrestorableItems: []
        };
        this.showSelectedItemsCount = true;
        this.isLoading = false;
    }
    async componentWillLoad() {
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_2__.g)(this.el);
        this.i18n = locale[0];
        this.folder = (0,_user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.user.username);
        this.determineRestoreState();
    }
    async determineRestoreState(props = { fetch: true }) {
        const { fetch } = props;
        // Sort items into bins on load
        if (fetch) {
            this.isLoading = true;
            this.restoreItemsBuckets = Object.assign({}, (await getRestorableItems(this.items, this.user)));
            this.isLoading = false;
        }
        const { restorableItems, sourceItems } = this.restoreItemsBuckets;
        this.allRestorableItems = [...restorableItems, ...sourceItems];
        this.tooManyItems = this.items.length > MAX_BULK_RESTORE_ITEMS_COUNT;
        this.allSameOwner = this.items.every((item) => item.owner === this.items[0].owner);
        this.canRestore = !this.tooManyItems && this.allSameOwner && this.allRestorableItems.length > 0;
        this.headerTitle = this.i18n[this.items.length > 1 ? "restoreItems" : "restoreItem"];
    }
    render() {
        const { i18n, active, isLoading, headerTitle, renderContent } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-modal", { open: active, widthScale: "s", kind: "brand", outsideCloseDisabled: true, onCalciteModalBeforeClose: () => {
                this.arcgisRestoreItemsClose.emit();
            }, onCalciteModalClose: () => {
                this.active = false;
            } }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { slot: "header", class: "header" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "header" }, headerTitle)), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "content", class: "content" }, isLoading ? (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-scrim", { loading: true }) : renderContent()), !isLoading && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { slot: "secondary", appearance: "outline-fill", "data-id": "cancelButton", onClick: () => {
                this.arcgisRestoreItemsClose.emit();
                this.active = false;
            }, width: "full" }, i18n.cancel), this.canRestore && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { slot: "primary", appearance: "solid", kind: "brand", "data-id": "nextButton", onClick: () => this.handleRestore(), width: "full", disabled: isLoading }, i18n.restore))))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
    static get watchers() { return {
        "items": ["determineRestoreState"]
    }; }
};
ArcgisRestoreItems.style = arcgisRestoreItemsCss;



//# sourceMappingURL=arcgis-restore-items.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js":
/*!******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CSS_UTILITY),
/* harmony export */   a: () => (/* binding */ formatDate),
/* harmony export */   b: () => (/* binding */ formatPlural),
/* harmony export */   f: () => (/* binding */ formatNumber),
/* harmony export */   g: () => (/* binding */ getElementDir),
/* harmony export */   l: () => (/* binding */ languageMap)
/* harmony export */ });
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */



const languageMap = new Map([
    ["ar", "ar"],
    ["bg", "bg"],
    ["bs", "bs"],
    ["ca", "ca"],
    ["cs", "cs"],
    ["da", "da"],
    ["de", "de"],
    ["el", "el"],
    ["en", "en"],
    ["es", "es"],
    ["et", "et"],
    ["fi", "fi"],
    ["fr", "fr"],
    ["he", "he"],
    ["hr", "hr"],
    ["hu", "hu"],
    ["id", "id"],
    ["it", "it"],
    ["ja", "ja"],
    ["ko", "ko"],
    ["lt", "lt"],
    ["lv", "lv"],
    ["nb", "nb"],
    ["nl", "nl"],
    ["pl", "pl"],
    ["pt-br", "pt-BR"],
    ["pt-pt", "pt-PT"],
    ["ro", "ro"],
    ["ru", "ru"],
    ["sk", "sk"],
    ["sl", "sl"],
    ["sr", "sr"],
    ["sv", "sv"],
    ["th", "th"],
    ["tr", "tr"],
    ["uk", "uk"],
    ["vi", "vi"],
    ["zh-cn", "zh-CN"],
    ["zh-hk", "zh-HK"],
    ["zh-tw", "zh-TW"]
]);
// rtl
function getElementDir(el) {
    return getElementProp(el, "dir", "ltr");
}
function getElementProp(el, prop, value) {
    const closestWithProp = (0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_1__.c)(el, `[${prop}]`);
    return closestWithProp ? closestWithProp.getAttribute(prop) : value;
}
// css
const CSS_UTILITY = {
    rtl: "arcgis--rtl"
};
async function formatNumber(number, options) {
    const { api, type, places } = options || {};
    if (api === 4) {
        const [intl] = await (0,_loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_0__.l)(["esri/intl"]);
        const numberFormatIntlOptions = intl.convertNumberFormatToIntlOptions({
            places,
            style: type,
            digitSeparator: true
        });
        return intl.formatNumber(number, Object.assign(Object.assign({}, numberFormatIntlOptions), { style: type }));
    }
    const [dojoNumber] = await (0,_loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_0__.l)(["dojo/number"]);
    return dojoNumber.format(number, {
        type,
        places,
        pattern: options === null || options === void 0 ? void 0 : options.pattern
    });
}
const cache = {};
function formatDate(date) {
    const lang = document.documentElement.lang;
    const dayShortMonthYear = {
        year: "numeric",
        month: "short",
        day: "numeric"
    };
    if (!cache[lang]) {
        cache[lang] = new Intl.DateTimeFormat(document.documentElement.lang, dayShortMonthYear);
    }
    return cache[lang].format(date);
}
function formatPlural(lang, stringObj, number) {
    const singles = ["id", "ja", "ko", "th", "vi", "zh-cn", "zh-hk", "zh-tw"];
    const likeEnglish = [
        "en",
        "ca",
        "da",
        "de",
        "el",
        "es",
        "et",
        "fi",
        "hi",
        "hu",
        "it",
        "nb",
        "nl",
        "pt-pt",
        "sv",
        "tr"
    ];
    const locale = lang !== null && lang !== void 0 ? lang : "en";
    // if the number is one, or it is a "simple" language, return the 1 string
    if (number === 1 || singles.includes(locale)) {
        return stringObj.single.replace("${number}", "1");
    }
    // if the number is not 1 and the language uses the same pluralization strategy as english,
    // return the multiple string
    if (number !== 1 && likeEnglish.includes(locale)) {
        return stringObj.multiple.replace("${number}", `${number}`);
    }
    // if none of the above worked, return the "unknown" string
    return stringObj.unknown.replace("${number}", `${number}`);
}



//# sourceMappingURL=languageUtil-ef0e54b2.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ getComponentClosestLanguage),
/* harmony export */   g: () => (/* binding */ getLocaleComponentStrings)
/* harmony export */ });
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./languageUtil-ef0e54b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js");
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */




// https://medium.com/stencil-tricks/implementing-internationalisation-i18n-with-stencil-5e6559554117
function getComponentClosestLanguage(element) {
    var _a, _b, _c;
    const closestElement = (_a = (0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
    // language set by the calling application or browser. defaults to english.
    const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
    if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
        return _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
    }
    else {
        // "ru-RU" maps to "ru" use case
        if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
            return _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang.slice(0, 2));
        }
        else {
            return "en";
        }
    }
}
function getComponentClosestLanguageIntl(element) {
    var _a, _b, _c;
    // it's OK if we don't have the 4 letter language file for it
    // 4 letter language code needed for formatting numbers
    const closestElement = (_a = (0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
    // language set by the calling application or browser. defaults to english.
    const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
    if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
        return _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
    }
    else {
        if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
            // we support the 2 letter coded language
            // e.g. it-CH vs it
            return lang;
        }
        else {
            return "en";
        }
    }
}
function fetchLocaleStringsForComponent(componentName, locale) {
    return new Promise((resolve, reject) => {
        fetch((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_2__.a)(`../arcgis-app-assets/i18n/${componentName}.i18n.${locale}.json`)).then((result) => {
            if (result.ok)
                resolve(result.json());
            else
                reject();
        }, () => reject());
    });
}
const stringCache = {};
function fetchLocaleStringsFromCache(componentName, locale) {
    const id = `${componentName}${locale}`;
    if (!stringCache[id]) {
        stringCache[id] = fetchLocaleStringsForComponent(componentName, locale);
    }
    return stringCache[id];
}
/**
 * Get strings and language codes.
 * This method returns 2 language codes.
 * The first one returns a code that's also supported as a language file.
 * The second one returns a code where there is support for the first 2 letters of the code as part of a language file,
 * but will return the original 4 letter code from the page.
 * E.g. For "it-ch" it will return "it" as the first language code and "it-ch" as the second.
 * The second one is required for esri.intl.setLocale() to get the correct formatting.
 *
 * If a tagName is provided it will overwite the element's tagName
 *
 *  @return [ strings, first language code, second language code]
 */
async function getLocaleComponentStrings(element, tagName) {
    const componentName = tagName || element.tagName.toLowerCase();
    const componentLanguage = getComponentClosestLanguage(element);
    const componentLanguageIntl = getComponentClosestLanguageIntl(element);
    let strings;
    try {
        strings = await fetchLocaleStringsFromCache(componentName, componentLanguage);
    }
    catch (e) {
        console.warn(`no locale for ${componentName} (${componentLanguage}) loading default locale en.`);
        strings = await fetchLocaleStringsFromCache(componentName, "en");
    }
    return [strings, componentLanguage, componentLanguageIntl];
}



//# sourceMappingURL=locale-050b6db9.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js":
/*!**********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ getFolderFromId),
/* harmony export */   b: () => (/* binding */ getHomeFolderForUser),
/* harmony export */   c: () => (/* binding */ createFolder),
/* harmony export */   d: () => (/* binding */ getSignedInUsersGroups),
/* harmony export */   e: () => (/* binding */ getSignedInUsersFavoritesGroup),
/* harmony export */   f: () => (/* binding */ fetchUser),
/* harmony export */   g: () => (/* binding */ getFolders),
/* harmony export */   u: () => (/* binding */ updateFolder)
/* harmony export */ });
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */



async function fetchUser(username, portal) {
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal)}/community/users/${username}`);
}
async function fetchSelf() {
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)()}/community/self`);
}
async function getSignedInUsersGroups() {
    var _a;
    const user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === null || _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === void 0 ? void 0 : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user;
    if (!user) {
        return [];
    }
    const self = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.f)(() => fetchSelf(), "communitySelf", user.username);
    return (_a = self === null || self === void 0 ? void 0 : self.groups) !== null && _a !== void 0 ? _a : [];
}
async function getSignedInUsersFavoritesGroup() {
    const user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === null || _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === void 0 ? void 0 : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user;
    if (!user) {
        return null;
    }
    const self = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.f)(() => fetchSelf(), "communitySelf", user.username);
    return self.favGroupId;
}
function getUserContentUrl(user, portal) {
    var _a;
    return (_a = user === null || user === void 0 ? void 0 : user.userContentUrl) !== null && _a !== void 0 ? _a : `${portal === null || portal === void 0 ? void 0 : portal.restUrl}/content/users/${user.username}`;
}
async function getUserContent(portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const portal = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal;
    const url = getUserContentUrl(user, portal);
    const response = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, { num: 1 });
    return Promise.resolve(response);
}
async function getFolders(portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const { folders } = await getUserContent(user);
    const { username } = user;
    const sortedFolders = folders.sort((a, b) => a.title.localeCompare(b.title));
    // add the home folder as if it's in the list
    return [{ username, id: username, title: username, created: "now" }, ...sortedFolders];
}
async function getFolderFromId(folderId, portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const folders = await getFolders(user);
    return folders.find((folder) => folder.id === folderId);
}
function getHomeFolderForUser(username) {
    return { username, id: username, title: username, created: "now" };
}
async function createFolder(folderName, portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const url = `${getUserContentUrl(user, _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal)}/createFolder`;
    const folderResponse = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, { title: folderName }, {}, "post");
    return folderResponse;
}
async function updateFolder(id, newTitle, portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const url = `${getUserContentUrl(user, _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal)}/${id}/updateFolder`;
    try {
        const result = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, { newTitle }, {}, "post");
        return { result };
    }
    catch (error) {
        return { error: { code: "unhandledError" } };
    }
}



//# sourceMappingURL=user-3ea69c3a.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,