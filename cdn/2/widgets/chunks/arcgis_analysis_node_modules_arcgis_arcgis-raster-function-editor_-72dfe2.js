"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-72dfe2"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.he-95b9bde1.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.he-95b9bde1.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   rfxArgsHelpTexts: () => (/* binding */ rfxArgsHelpTexts)
/* harmony export */ });
const rfxArgsHelpTexts = {
	"@@Abs_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Abs_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Abs_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Abs_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Abs_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Abs_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Abs_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Abs_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Abs_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Abs_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Abs_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Abs_Raster_tag0@@": "רסטר הקלט שעבורו יש לחשב את הערכים המוחלטים.",
	"@@ACos_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@ACos_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@ACos_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@ACos_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@ACos_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@ACos_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@ACos_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@ACos_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@ACos_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@ACos_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@ACos_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@ACos_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הקוסינוס ההפוך.",
	"@@ACosH_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@ACosH_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@ACosH_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@ACosH_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@ACosH_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@ACosH_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@ACosH_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@ACosH_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@ACosH_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@ACosH_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@ACosH_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@ACosH_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הקוסינוס ההיפרבולי ההפוך.",
	"@@Apparent-Reflectance_Albedo_tag0@@": "ניתן גם לבטא את התוצאות של פונקציית 'השתקפות נראית' כאלבדו, שזה אחוז האנרגיה הזמינה שמשתקפת על ידי פני השטח הפלנטרי. משתמשים מתחומי המדע עושים שימוש בנתוני אלבדו לצורך מידול מורכב ויישומי חישה מרחוק טכניים.",
	"@@Apparent-Reflectance_Albedo_tag1@@": "לא מסומן - הפונקציה מחזיקה ערכי השתקפות נראית. זוהי ברירת המחדל.",
	"@@Apparent-Reflectance_Albedo_tag2@@": "מסומן - הפונקציה מחזירה ערכי נקודה צפה של 32 ביט, שבדרך כלל הם בטווח של 0.0 עד 1.0. לא מתבצע חיתוך נתונים אם אפשרות זו נבחרה.",
	"@@Apparent-Reflectance_Albedo_tag3@@": "מכיוון שסוג נתוני הפלט עבור אלבדו הוא נקודה צפה, עליך להגדיר במפורש את <strong>סוג פלט הפיקסל</strong> המועדף ל-32 ביט צף או 64 ביט כפול. הפרמטר <strong>סוג פלט פיקסל</strong> נמצא בלשונית <strong>כללי</strong> בפונקציית הרסטר <strong>השתקפות נראית</strong>. אם הפרמטר <strong>סוג פלט הפיקסל</strong> לא הוגדר נכון עבור האפשרות <strong>אלבדו</strong>, ערכי התוצאה יהיו לא חוקיים ויקבלו ערך של 0.",
	"@@Apparent-Reflectance_Offset_tag0@@": "לערך האלבדו שמותאם לקנה מידה יכול להיות ערך היסט:",
	"@@Apparent-Reflectance_Offset_tag1@@": "עבור סוגי נתונים לא חתומים של 16 ביט, היסט קנה המידה שמוגדר כברירת מחדל הוא 5,000.",
	"@@Apparent-Reflectance_Offset_tag2@@": "עבור סוגי נתונים לא חתומים של 8 ביט, היסט קנה המידה שמוגדר כברירת מחדל הוא 0.",
	"@@Apparent-Reflectance_Offset_tag3@@": "לא מוחל שינוי קנה מידה כאשר הפלט הוא אלבדו.",
	"@@Apparent-Reflectance_Radiance-Gains-and-Bias-Values-per-Band_tag0@@": "באפשרותך להגדיר או לערוך ערך זה ידנית עבור כל ערוץ. ניתן לקרוא את המידע המתאים מהמטא-דאטה של תוצר רסטר הפלט.",
	"@@Apparent-Reflectance_Raster_tag0@@": "תוצר הרסטר שעליו תוחל ההשתקפות הנראית.",
	"@@Apparent-Reflectance_Scale-Factor_tag0@@": "ניתן לבטא את ערך ההשתקפות הנראית של הפלט כמספר שלם. פקטור שינוי קנה המידה מוכפל על ידי האלבדו כדי להמיר את כל ערכי הנקודה הצפה לערכי מספרים שלמים.",
	"@@Apparent-Reflectance_Scale-Factor_tag1@@": "אם פקטור קנה המידה הוא ${0} או שלא צוין, יוחל שינוי קנה מידה שמוגדר כברירת מחדל בהתאם לסוג הפיקסל של נתוני הקלט:",
	"@@Apparent-Reflectance_Scale-Factor_tag2@@": "עבור סוגי נתונים לא חתומים של 16 ביט, פקטור קנה המידה שמוגדר כברירת מחדל הוא 50,000.",
	"@@Apparent-Reflectance_Scale-Factor_tag3@@": "עבור סוגי נתונים לא חתומים של 8 ביט, פקטור קנה המידה שמוגדר כברירת מחדל הוא 255.",
	"@@Apparent-Reflectance_Scale-Factor_tag4@@": "פקטור קנה המידה תמיד מוחל כאשר הפלט הוא השתקפות נראית. לא מוחל שינוי קנה מידה כאשר הפלט הוא אלבדו.",
	"@@Apparent-Reflectance_Sun-Elevation_tag0@@": "זהו ערך רום השמש, מבוטא במעלות. ערך זה יאוכלס על ידי המערכת אם ניתן לקרוא את המידע המתאים מהמטא-דאטה. באפשרותך להגדיר או לערוך ערך זה ידנית.",
	"@@ArgStatistics_Max_tag0@@": "הערך המקסימלי שאתה מגדיר הוא הערך הגבוה ביותר ששווה או שקטן יותר מסוף משך הזמן.",
	"@@ArgStatistics_Max_tag1@@": "הקלט ישים רק כאשר השיטה היא 'משך זמן'.",
	"@@ArgStatistics_Method_tag0@@": "בחר את שיטת הסטטיסטיקה לחישוב;",
	"@@ArgStatistics_Method_tag1@@": "Arg Max - הארגומנט של המקסימום, אשר מחזיר את ${Band index} שעבורו הפיקסל הנתון משיג את ערך המקסימום שלו מכל הערוצים. לכל ערוצי הרסטר מכל רסטר קלט מוקצה אינדקס ערוץ אינקרמנטלי מבוסס-0, שמאורגן תחילה על ידי אינדקס רסטר הקלט, ולאחר מכן על ידי סדר הערוץ היחסי בתוך כל רסטר קלט.",
	"@@ArgStatistics_Method_tag2@@": "Arg Median - הארגומנט של החציון, אשר מחזיר את ${Band index} שעבורו הפיקסל הנתון משיג את ערך החציון של ערכים מכל הערוצים.",
	"@@ArgStatistics_Method_tag3@@": "Arg Min - הארגומנט של המינימום, אשר מחזיר את ${Band index} שעבורו הפיקסל הנתון משיג את ערך המינימום שלו מכל הערוצים.",
	"@@ArgStatistics_Method_tag4@@": "משך הזמן - שיטת משך הזמן מוצאת את האלמנטים הרציפים הארוכים ביותר במערך, כאשר לכל אלמנט יש ערך גדול יותר או שווה ל-<strong>Min</strong> וקטן יותר או שווה ל-<strong>Max</strong>, ולאחר מכן מחזיר את אורכו.",
	"@@ArgStatistics_Min_tag0@@": "הערך המינימלי שאתה מגדיר הוא הערך הנמוך  ביותר ששווה או שגדול יותר מתחילת משך הזמן.",
	"@@ArgStatistics_Min_tag1@@": "הקלט ישים רק כאשר השיטה היא 'משך זמן'.",
	"@@ArgStatistics_Rasters_tag0@@": "רסטר הקלט שעליו תבצע את שיטות הסטטיסטיקה השונות.",
	"@@ArgStatistics_Undefined-Class_tag0@@": "קלט קבוע שיוחזר כאשר לא הושגו מקסימום, מינימום או חציון סופיים. התרחיש הנפוץ ביותר הוא כאשר ערכי מקסימום ומינימום חלים יותר מפעם אחת בקרב ערכים מכל הערוצים. ערך ברירת המחדל עבור הקבוע הלא מוגדר הוא 100.",
	"@@ArgStatistics_Undefined-Class_tag1@@": "הקבוצה הלא מוגדרת ישימה רק כאשר השיטה היא <strong>ArgMax</strong>‏, <strong>ArgMin</strong> או <strong>ArgMedian</strong>.",
	"@@ArgStatistics_ignorenodata_tag0@@": "מציין האם החישוב הסטטיסטי מתעלם מערכי NoData.",
	"@@ArgStatistics_ignorenodata_tag1@@": "מסומן - הניתוח יכלול את כל הפיקסלים החוקיים ברסטרי הקלט ויתעלם מפיקסלים שהם NoData.",
	"@@ArgStatistics_ignorenodata_tag2@@": "לא מסומן - תוצאת ניתוח זה תהיה NoData, אם קיימים ערכי NoData עבור הפיקסלים ברסטרי הקלט. זוהי ברירת המחדל.",
	"@@Arithmetic_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Arithmetic_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Arithmetic_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Arithmetic_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Arithmetic_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Arithmetic_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Arithmetic_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Arithmetic_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Arithmetic_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Arithmetic_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Arithmetic_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Arithmetic_Operation_tag0@@": "הפעולה האריתמטית שתבוצע בין שני רסטרי הקלט.",
	"@@Arithmetic_Operation_tag1@@": "להלן האפשרויות:",
	"@@Arithmetic_Operation_tag2@@": "<strong>חילוק</strong> - קבלת פלט של התוצאה הניתנת לחילוק בין ערכי הפיקסל התואמים עבור כל רסטר.",
	"@@Arithmetic_Operation_tag4@@": "<strong>חיסור</strong> - קבלת פלט של ההפרש בין ערכי הפיקסל התואמים עבור כל רסטר. ניתן להשתמש בכך כדי לחשב זיהוי שינויים.",
	"@@Arithmetic_Operation_tag6@@": "<strong>מוד</strong> - קבלת ערך הפיקסל של כל הפיקסלים החופפים אשר מתרחשים הכי הרבה. לדוגמה, אם קיימים שישה ערוצים ברסטר, יהיו שישה פיקסלים חופפים. עבור הערכים 4, 5, 6, 4, 7, 9, הערך השכיח הוא 4.",
	"@@Arithmetic_Operation_tag8@@": "<strong>הכפל</strong> - קבלת התוצאה של ערכי הפיקסל התואמים עבור כל רסטר. ניתן להשתמש בכך כדי לחשב פונקציות עלות מסוימות.",
	"@@Arithmetic_Operation_tag10@@": "<strong>חיבור</strong> - קבלת הסכום של כל ערכי הפיקסל התואמים עבור כל רסטר.",
	"@@Arithmetic_Operation_tag12@@": "<strong>חזקה</strong> - קבלת התוצאה של ערכי הפיקסל התואמים בחזקת רסטר הקלט או סקלר.",
	"@@Arithmetic_Raster_tag0@@": "סט נתוני רסטר קלט ראשון.",
	"@@Arithmetic_Raster2_tag0@@": "סט נתוני רסטר קלט שני.",
	"@@ASin_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@ASin_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@ASin_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@ASin_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@ASin_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@ASin_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@ASin_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@ASin_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@ASin_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@ASin_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@ASin_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@ASin_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הסינוס ההפוך.",
	"@@ASinH_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@ASinH_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@ASinH_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@ASinH_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@ASinH_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@ASinH_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@ASinH_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@ASinH_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@ASinH_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@ASinH_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@ASinH_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@ASinH_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הסינוס ההיפרבולי ההפוך.",
	"@@Aspect_Raster_tag0@@": "DEM הקלט אשר משמש לגזירת סט נתוני המפנה.",
	"@@Aspect-Slope_Raster_tag0@@": "DEM הקלט.",
	"@@Aspect-Slope_Z-Factor_tag0@@": "פקטור קנה מידה אשר משמש להמרת ערכי הגובה לשתי המטרות הבאות:",
	"@@Aspect-Slope_Z-Factor_tag1@@": "להמרת יחידות הגובה (כגון מטרים או רגל) ליחידות הקואורדינטות האופקיות של סט הנתונים, שעשויות להיות רגל, מטרים או מעלות.",
	"@@Aspect-Slope_Z-Factor_tag2@@": "להוספת הגזמה אנכית להשגת אפקט ויזואלי.",
	"@@ATan_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@ATan_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@ATan_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@ATan_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@ATan_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@ATan_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@ATan_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@ATan_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@ATan_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@ATan_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@ATan_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@ATan_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הטנגנס ההפוך.",
	"@@ATan2_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@ATan2_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@ATan2_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@ATan2_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@ATan2_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@ATan2_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@ATan2_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@ATan2_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@ATan2_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@ATan2_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@ATan2_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@ATan2_Raster_tag0@@": "הקלט שמציין את המונה, או ערך y, אשר ישמש בעת חישוב הטנגנס ההפוך.",
	"@@ATan2_Raster2_tag0@@": "הקלט שמציין את המכנה, או ערך x, אשר ישמש בעת חישוב הטנגנס ההפוך.",
	"@@ATanH_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@ATanH_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@ATanH_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@ATanH_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@ATanH_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@ATanH_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@ATanH_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@ATanH_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@ATanH_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@ATanH_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@ATanH_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@ATanH_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הטנגנס ההיפרבולי ההפוך.",
	"@@Attribute-Table_Raster_tag0@@": "רסטר הקלט.",
	"@@Attribute-Table_Table-Type_tag0@@": "ניתן להזין את טבלת המאפיינים תוך שימוש בסוג <strong>ידני</strong> שבו אתה מקצה שם קבוצה וצבע לכל ערך, או שניתן לייחס טבלה קיימת אשר מגיעה מהקובץ ${.dbf}.",
	"@@Band-Arithmetic_Band-Indexes_tag0@@": "הגדר את הנוסחה האריתמטית של הערוץ אם בחרת <strong>מוגדר על ידי המשתמש</strong> עבור <strong>השיטה</strong>.",
	"@@Band-Arithmetic_Band-Indexes_tag5@@": "אם בחרת אינדקס מוגדר מראש עבור <strong>השיטה</strong>, הגדר את הערוצים המתאימים של סט נתוני רסטר הקלט שתואם לאינדקס.",
	"@@Band-Arithmetic_Method_tag0@@": "סוג האלגוריתם האריתמטי של הערוץ שברצונך לפרוס. באפשרותך להגדיר אלגוריתם מותאם אישית, או לבחור אינדקס שהוגדר מראש.",
	"@@Band-Arithmetic_Method_tag1@@": "<strong>BAI</strong>--אינדקס אזור שריפה",
	"@@Band-Arithmetic_Method_tag2@@": "<strong>CIg</strong>--אינדקס כלורופיל - ירוק",
	"@@Band-Arithmetic_Method_tag3@@": "<strong>CIre</strong>--אינדקס כלורופיל - קצה אדום",
	"@@Band-Arithmetic_Method_tag4@@": "<strong>מינרלים חימריים</strong>--יחס מינרלים חימריים",
	"@@Band-Arithmetic_Method_tag5@@": "<strong>EVI</strong>--אינדקס צמחייה מחוזק",
	"@@Band-Arithmetic_Method_tag6@@": "</strong>מינרלים ברזליים<strong>--יחס מינרלים ברזליים",
	"@@Band-Arithmetic_Method_tag7@@": "<strong>GEMI</strong>--אינדקס ניטור סביבה גלובלי",
	"@@Band-Arithmetic_Method_tag8@@": "<strong>GNDVI</strong>--אינדקס צמחייה ירוקה עם הפרש מנורמל",
	"@@Band-Arithmetic_Method_tag9@@": "</strong>GVI (Landsat TM)<strong>--אינדקס צמחייה ירוקה Landsat TM",
	"@@Band-Arithmetic_Method_tag10@@": "</strong>אוקסיד ברזל<strong>--יחס אוקסיד ברזל",
	"@@Band-Arithmetic_Method_tag11@@": "<strong>MNDWI</strong>--אינדקס מים עם הפרש מנורמל",
	"@@Band-Arithmetic_Method_tag12@@": "<strong>MTVI2</strong>--אינדקס צמחייה ירוקה מתוקן שעבר טריאנגולציה (חזרה שנייה)",
	"@@Band-Arithmetic_Method_tag13@@": "<strong>SAVI מתוקן</strong>--אינדקס צמחייה מתוקן עם התאמת אדמה",
	"@@Band-Arithmetic_Method_tag14@@": "<strong>NBR</strong>--אינדקס יחס שריפה מנורמל",
	"@@Band-Arithmetic_Method_tag15@@": "<strong>NDBI</strong>--אינדקס הפרשי בנייה מנורמל",
	"@@Band-Arithmetic_Method_tag16@@": "<strong>NDMI</strong>--אינדקס הפרשי לחות מנורמל",
	"@@Band-Arithmetic_Method_tag17@@": "<strong>NDSI</strong>--אינדקס הפרשי שלג מנורמל",
	"@@Band-Arithmetic_Method_tag18@@": "<strong>NDVI</strong>--אינדקס צמחייה עם הפרש מנורמל",
	"@@Band-Arithmetic_Method_tag19@@": "<strong>NDVIre</strong>--אינדקס צמחייה עם הפרש מנורמל של קצה אדום",
	"@@Band-Arithmetic_Method_tag20@@": "<strong>NDWI</strong>--אינדקס מים עם הפרש מנורמל",
	"@@Band-Arithmetic_Method_tag21@@": "<strong>PVI</strong>--אינדקס צמחייה מאונכת",
	"@@Band-Arithmetic_Method_tag22@@": "<strong>RTVICore</strong>--אינדקס צמחייה עם טריאנגולציה קצה אדום",
	"@@Band-Arithmetic_Method_tag23@@": "<strong>SAVI</strong>--אינדקס צמחייה עם התאמת אדמה",
	"@@Band-Arithmetic_Method_tag24@@": "<strong>SR</strong>--יחס פשוט",
	"@@Band-Arithmetic_Method_tag25@@": "<strong>SRre</strong>--יחס פשוט קצה אדום",
	"@@Band-Arithmetic_Method_tag26@@": "</strong>נוסחת Sultan<strong>--נוסחת Sultan",
	"@@Band-Arithmetic_Method_tag27@@": "<strong>SAVI מותמר</strong>--אינדקס צמחייה מומרת עם התאמת אדמה",
	"@@Band-Arithmetic_Method_tag28@@": "<strong>מוגדר על ידי המשתמש</strong>--מאפשר לך להגדיר את הביטוי האריתמטי של הערוץ המותאם אישית שלך",
	"@@Band-Arithmetic_Method_tag29@@": "<strong>VARI</strong>--אינדקס ההתנגדות האטמוספרית הגלויה",
	"@@Band-Arithmetic_Method_tag30@@": "<strong>WNDWI</strong>--אינדקס מים משוקלל עם הפרש מנורמל",
	"@@Band-Arithmetic_Raster_tag0@@": "רסטר הקלט.",
	"@@Binary-Thresholding_Raster_tag0@@": "רסטר הקלט.",
	"@@Bitwise-And_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Bitwise-And_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Bitwise-And_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Bitwise-And_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Bitwise-And_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Bitwise-And_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Bitwise-And_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Bitwise-And_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-And_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Bitwise-And_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-And_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-And_Raster_tag0@@": "הקלט הראשון שבו יעשה שימוש בפעולת bitwise זו.",
	"@@Bitwise-And_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Bitwise-And_Raster2_tag0@@": "הקלט השני שבו יעשה שימוש בפעולת bitwise זו.",
	"@@Bitwise-And_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Bitwise-Left-Shift_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Bitwise-Left-Shift_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Left-Shift_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Bitwise-Left-Shift_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Left-Shift_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Left-Shift_Raster_tag0@@": "המספר שעליו תבוצע ההזזה.",
	"@@Bitwise-Left-Shift_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Bitwise-Left-Shift_Raster2_tag0@@": "הקלט שמגדיר את מספר המיקומים להזזת הסיביות.",
	"@@Bitwise-Left-Shift_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Bitwise-Not_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Bitwise-Not_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Bitwise-Not_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Bitwise-Not_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Bitwise-Not_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Bitwise-Not_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Bitwise-Not_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Bitwise-Not_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Not_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Bitwise-Not_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Not_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Not_Raster_tag0@@": "רסטר הקלט שעליו תבוצע פעולת Bitwise Not (השלמה).",
	"@@Bitwise-Or_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Bitwise-Or_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Bitwise-Or_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Bitwise-Or_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Bitwise-Or_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Bitwise-Or_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Bitwise-Or_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Bitwise-Or_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Or_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Bitwise-Or_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Or_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Or_Raster_tag0@@": "הקלט הראשון שבו יעשה שימוש בפעולת bitwise זו.",
	"@@Bitwise-Or_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Bitwise-Or_Raster2_tag0@@": "הקלט השני שבו יעשה שימוש בפעולת bitwise זו.",
	"@@Bitwise-Or_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Bitwise-Right-Shift_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Bitwise-Right-Shift_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Right-Shift_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Bitwise-Right-Shift_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Right-Shift_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Right-Shift_Raster_tag0@@": "המספר שעליו תבוצע ההזזה.",
	"@@Bitwise-Right-Shift_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Bitwise-Right-Shift_Raster2_tag0@@": "הקלט שמגדיר את מספר המיקומים להזזת הסיביות.",
	"@@Bitwise-Right-Shift_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Bitwise-Xor_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Bitwise-Xor_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Bitwise-Xor_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Bitwise-Xor_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Bitwise-Xor_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Bitwise-Xor_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Bitwise-Xor_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Bitwise-Xor_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Xor_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Bitwise-Xor_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Xor_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Bitwise-Xor_Raster_tag0@@": "הקלט הראשון שבו יעשה שימוש בפעולת bitwise זו.",
	"@@Bitwise-Xor_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Bitwise-Xor_Raster2_tag0@@": "הקלט השני שבו יעשה שימוש בפעולת bitwise זו.",
	"@@Bitwise-Xor_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Boolean-and_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Boolean-and_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Boolean-and_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Boolean-and_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Boolean-and_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Boolean-and_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Boolean-and_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Boolean-and_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-and_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Boolean-and_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-and_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-and_Raster_tag0@@": "הקלט הראשון שבו יעשה שימוש בפעולה בוליאנית זו.",
	"@@Boolean-and_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Boolean-and_Raster2_tag0@@": "הקלט השני שבו יעשה שימוש בפעולה בוליאנית זו.",
	"@@Boolean-and_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Boolean-Not_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Boolean-Not_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Boolean-Not_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Boolean-Not_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Boolean-Not_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Boolean-Not_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Boolean-Not_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Boolean-Not_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-Not_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Boolean-Not_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-Not_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-Not_Raster_tag0@@": "הקלט הראשון שבו יעשה שימוש בפעולה בוליאנית זו.",
	"@@Boolean-Or_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Boolean-Or_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Boolean-Or_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Boolean-Or_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Boolean-Or_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Boolean-Or_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Boolean-Or_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Boolean-Or_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-Or_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Boolean-Or_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-Or_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-Or_Raster_tag0@@": "הקלט הראשון שבו יעשה שימוש בפעולה בוליאנית זו.",
	"@@Boolean-Or_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Boolean-Or_Raster2_tag0@@": "הקלט השני שבו יעשה שימוש בפעולה בוליאנית זו.",
	"@@Boolean-Or_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Boolean-Xor_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Boolean-Xor_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Boolean-Xor_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Boolean-Xor_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Boolean-Xor_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Boolean-Xor_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Boolean-Xor_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Boolean-Xor_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-Xor_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Boolean-Xor_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-Xor_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Boolean-Xor_Raster_tag0@@": "הקלט הראשון שבו יעשה שימוש בפעולה בוליאנית זו.",
	"@@Boolean-Xor_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Boolean-Xor_Raster2_tag0@@": "הקלט השני שבו יעשה שימוש בפעולה בוליאנית זו.",
	"@@Boolean-Xor_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Buffered_Raster_tag0@@": "רסטר הקלט לאחסון בזיכרון.",
	"@@Calculator_Cellsize-Type_tag0@@": "גודל התא שבו נעשה שימוש ליצירת רסטר הפלט.",
	"@@Calculator_Cellsize-Type_tag1@@": "באפשרותך לבחור בגודל תא הפלט מבין האפשרויות הבאות ברשימה הנפתחת:",
	"@@Calculator_Cellsize-Type_tag2@@": "<strong>First Of</strong> - גודל התא של הרסטר הראשון הזמין.",
	"@@Calculator_Cellsize-Type_tag4@@": "<strong>Min Of</strong> - גודל התא המינימלי של רסטרי הקלט.",
	"@@Calculator_Cellsize-Type_tag6@@": "<strong>Min Of</strong> - גודל התא המקסימלי של רסטרי הקלט.",
	"@@Calculator_Cellsize-Type_tag8@@": "<strong>Mean Of</strong> - גודל התא הממוצע של רסטרי הקלט.",
	"@@Calculator_Cellsize-Type_tag10@@": "<strong>Last Of</strong> - גודל התא של הרסטר האחרון הזמין.",
	"@@Calculator_Cellsize-Type_tag12@@": "בחירת ברירת המחדל היא <strong>Max Of</strong>.",
	"@@Calculator_Expression_tag0@@": "בנה ביטוי אלגברי לביצוע ניתוח מרחבי על רסטר הקלט.",
	"@@Calculator_Expression_tag1@@": "ניתן לקרוא לכל הביטויים המתמטיים הקיימים לבניית הביטוי. להלן האופרטורים הזמינים.",
	"@@Calculator_Expression_tag2@@": "פעולות אריתמטיות",
	"@@Calculator_Expression_tag3@@": "חיבור: +",
	"@@Calculator_Expression_tag4@@": "חילוק: /",
	"@@Calculator_Expression_tag5@@": "מודולו: %",
	"@@Calculator_Expression_tag6@@": "כפל: *",
	"@@Calculator_Expression_tag7@@": "חזקה",
	"@@Calculator_Expression_tag8@@": "חיסור: -",
	"@@Calculator_Expression_tag9@@": "אופרטורים בוליאניים",
	"@@Calculator_Expression_tag10@@": "וגם בוליאני: &&",
	"@@Calculator_Expression_tag11@@": "או בוליאני: ||",
	"@@Calculator_Expression_tag12@@": "אופרטורים יחסיים",
	"@@Calculator_Expression_tag13@@": "שווה ל: ==",
	"@@Calculator_Expression_tag14@@": "גדול מ: >",
	"@@Calculator_Expression_tag15@@": "גדול או שווה ל: >=",
	"@@Calculator_Expression_tag16@@": "קטן מ: <",
	"@@Calculator_Expression_tag17@@": "קטן או שווה ל: <=",
	"@@Calculator_Expression_tag18@@": "לא שווה ל-: !=",
	"@@Calculator_Expression_tag19@@": "אופרטורים נוספים",
	"@@Calculator_Expression_tag20@@": "מינימום של שני רסטרים על בסיס פר-פיקסל: min(a,b)",
	"@@Calculator_Expression_tag21@@": "מקסימום של שני רסטרים על בסיס פר-פיקסל: max(a,b)",
	"@@Calculator_Expression_tag22@@": "להלן כמה דוגמאות לביטויים:",
	"@@Calculator_Expression_tag23@@": "ביטוי יחסי פשוט: ברסטר (שמצוין על ידי T) מצא ערכי רום מעל 4,000 רגל ותן לאזורים אלה ערך של 1 ולכל שאר האזורים ערך של 0.",
	"@@Calculator_Expression_tag24@@": "Con(T > 4000, 1, 0)",
	"@@Calculator_Expression_tag25@@": "ביטוי יחסי מקונן: מצא אזורים שבהם השיפוע (שמצוין על ידי b1) קטן מ-10 מעלות ו-NDVI (שמצוין על ידי b2) גדול מ-0.5, ותן לאזורים אלה את הערך של 1. עבור כל שאר האזורים, הקצה ערך של 2 אם השפיע מעל 10 מעלות והרום (שמצוין על ידי b3) גדול יותר מ-2,500 רגל. לכל שאר האזורים מוקצה הערך של 3.",
	"@@Calculator_Expression_tag26@@": "‎Con((b1 < 10 && b2 > .5, 1, Con(b1 > 10 && b3 > 2500, 2, 3)))‎",
	"@@Calculator_extenttype_tag0@@": "<p>בחר איזה תיחום ישמש ברסטר של הפלט:</p><ul><li><p>ראשון מתוך--שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.</p></li><li>חיתוך של--שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.</li><li>איחוד של--שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.</li><li>אחרון מתוך--שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.</li></ul>",
	"@@Calculator_Raster-Variables_tag0@@": "שם המשתנה המוגדר על ידי המשתמש ורסטר הקלט.",
	"@@Classify_Input-Definition-File_tag0@@": "קובץ הקלט Esri Classifier Definition (${.ecd}) שמכיל את הנתונים הסטטיסטיים ונתוני סיווג אחרים עבור סט הנתונים הספציפי, המסווג והמאפיינים שנבחרו.",
	"@@Classify_Raster_tag0@@": "סט נתוני הרסטר שברצונך לסווג.",
	"@@Classify_Raster2_tag0@@": "סט נתוני רסטר נוסף אופציונלי לשילוב בתוך המסווג, כגון תמונה מקוטעת, תמונה רב-מרחבית או נתוני רום, אשר משמשים להפקת הגדרת סיווג איתנה יותר עבור סט הנתונים. סט נתוני הרסטר עבור פרמטר זה חייב להתאם לזה שבו נעשה שימוש ליצירת קובץ הקלט Esri Classifier Definition.",
	"@@Clip_Clipping-Geometry-or-Raster_tag0@@": "ניתן להשתמש באפשרויות הבאות לציון תיחום הגזירה:",
	"@@Clip_Clipping-Geometry-or-Raster_tag1@@": "<strong>רסטר גזירה</strong> - תיחום רסטר הגזירה",
	"@@Clip_Clipping-Geometry-or-Raster_tag3@@": "<strong>תיחום מותאם אישית</strong> - קואורדינטות X ו-Y מקסימליות ומינימליות",
	"@@Clip_Clipping-Geometry-or-Raster_tag5@@": "<strong>תיחום המפה הנוכחי</strong> - התיחום של תצוגת המפה הנוכחית",
	"@@Clip_Clipping-Raster_tag0@@": "שכבת הרסטר אשר משמשת לגזירה.",
	"@@Clip_Clipping-Type_tag0@@": "ציין האם ברצונך להשאיר את האזור בתוך גאומטריית הגזירה או מחוץ לה.",
	"@@Clip_Clipping-Type_tag1@@": "<strong>גזירה פנימה</strong> - תמונות בתוך תיחומי הגזירה יוסרו.",
	"@@Clip_Clipping-Type_tag3@@": "<strong>גזירה החוצה</strong> - תמונות מחוץ לתיחומי הגזירה יוסרו.",
	"@@Clip_Custom-Extent_tag0@@": "ציין את ארבע הקואורדינטות שמגדירות את התיחום של המלבן התחום אשר משמש לגזירת הרסטר.",
	"@@Clip_Output-Extent_tag0@@": "קואורדינטות x ו-y של תיחום הגזירה הנוכחי.",
	"@@Clip_Output-Extent_tag1@@": "הלחצן <strong>לכוד את תיחום המפה הנוכחי</strong> משתמש בתיחום התצוגה עבור המפה הפעילה.",
	"@@Clip_Raster_tag0@@": "שכבת רסטר הקלט.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag0@@": "כאשר נבחרה, הנתונים נגזרים לפי הגיאומטריה של קבוצת הישויות שצוינה.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag1@@": "לא מסומן - הפונקציה משתמשת בגאומטריית הגזירה שצוינה על ידי <strong>מלבן</strong>. זוהי ברירת המחדל.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag4@@": "לא מסומן - הפונקציה משתמשת בגאומטריית הגזירה שצוינה על ידי קבוצת ישויות.",
	"@@Color-Model-Conversion_Conversion-Type_tag0@@": "סוג המרת הצבע שיש לבצע:",
	"@@Color-Model-Conversion_Conversion-Type_tag1@@": "HSV אל RGB",
	"@@Color-Model-Conversion_Conversion-Type_tag2@@": "RGB אל HSV",
	"@@Color-Model-Conversion_Raster_tag0@@": "רסטר הקלט.",
	"@@Colormap_Color-Ramp_tag0@@": "בחירת מדרג צבעים קיים-מראש.",
	"@@Colormap_Color-Scheme-Type_tag0@@": "בחר את סוג סכמת הצבעים לרינדור רסטר הקלט.",
	"@@Colormap_Color-Scheme-Type_tag1@@": "מדרג צבעים - השתמש במדרג צבעים.",
	"@@Colormap_Color-Scheme-Type_tag2@@": "מפת צבעים - השמש במפת צבעים קיימת-מראש.",
	"@@Colormap_Colormap_tag0@@": "מפות הצבעים הבאות שמוגדרות כברירת מחדל זמינות מהרשימה הנפתחת:",
	"@@Colormap_Colormap_tag1@@": "גובה - מפת צבעים שמשתנה בהדרגה מציאן לסגול לשחור.",
	"@@Colormap_Colormap_tag2@@": "אפור - מפת צבעים שמשתנה בהדרגה משחור ללבן.",
	"@@Colormap_Colormap_tag7@@": "'הצללה - מפת צבעים בגווני אפור להצגה חזותית של פני שטח הקרקע, כאשר יש התייחסות למיקום היחסי של השמש לצורך הצללות בתמונה.",
	"@@Colormap_Colormap_tag3@@": "NDVI - מפת צבעים לתצוגה חזותית של צמחייה. ערכים קרובים לאפס מופיעים בכחול. ערכים נמוכים מופיעים בחום. לאחר מכן, הצבעים משתנים בהדרגה מאדום, לכתום, לצהוב, לירוק ולשחור עם מעבר אינדקס הצמחייה מנמוך לגבוה.",
	"@@Colormap_Colormap_tag4@@": "NDVI2 - מפת צבעים להצגה חזותית של צמחייה. ערכים נמוכים נעים מלבן לירוק. לאחר מכן, הצבעים נעים מאפור, לסגול, לסגול כהה, לכחול כהה ולשחור עם מעבר אינדקס הצמחייה מנמוך לגבוה.",
	"@@Colormap_Colormap_tag5@@": "NDVI3 - מפת צבעים להצגה חזותית של צמחייה. ערכים קרובים לאפס מופיעים בכחול. לאחר מכן, הצבעים משתנים בהדרגה מאדום, לכתום ולירוק עם מעבר אינדקס הצמחייה מנמוך לגבוה.",
	"@@Colormap_Colormap_tag6@@": "אקראי - מפת צבעים אקראית.",
	"@@Colormap_Raster_tag0@@": "רסטר הקלט.",
	"@@Colormap-To-RGB_Raster_tag0@@": "רסטר מפת הצבעים של הקלט.",
	"@@Complex_Raster_tag0@@": "רסטר הקלט.",
	"@@Composite-Bands_Rasters_tag0@@": "השתמש בתפריט הנפתח או בלחצן <strong>עיון</strong> כדי לבחור את קלטי הרסטר.",
	"@@Composite-Bands_cellsizetype_tag0@@": "<p>בחר באיזה גודל תא להשתמש ברסטר הפלט.אם כל גדלי התאים שבקלט זהים, כל האפשרויות יספקו את אותן תוצאות.</p><ul><li>ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.</li><li>מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.</li><li>מקסימום מתוך - שימוש בגודל התא הגדול ביותר מכל הרסטרים של הקלט. זוהי ברירת המחדל.</li><li>ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.</li><li>אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.</li></ul>",
	"@@Con-function_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Con-function_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Con-function_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Con-function_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Con-function_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Con-function_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Con_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Con_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Con_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Con_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Con_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Con_False-Raster_tag0@@": "הקלט שהערכים שלו ישמשו כערכי פיקסל הפלט אם התנאי לא מתקיים. זה יכול להיות כל מספר שלם, רסטר נקודה צפה או ערך קבוע.",
	"@@Con_Raster_tag0@@": "רסטר הקלט שמייצג את התוצאה הבוליאנית של פונקציית רסטר מתמטיקה לוגית. הערכים יהיו 1 (לנכון) או 0 (ללא נכון). זה יכול להיות מספר שלם או רסטר נקודה צפה.",
	"@@Con_True-Raster_tag0@@": "הקלט שהערכים שלו ישמשו כערכי פיקסל הפלט אם התנאי מתקיים. זה יכול להיות כל מספר שלם, רסטר נקודה צפה או ערך קבוע.",
	"@@Constant_Constant_tag0@@": "ערך הקבוע שיתווסף לרסטר הווירטואלי.",
	"@@Constant_Raster-Info_tag0@@": "השתמש בלחצן <strong>טעןן רסטר תבנית</strong> כדי לטעון תבנית מספרייה או מפורטל.",
	"@@Contour_Adaptive-Smoothing_tag0@@": "כמות ההחלקה שיש להחיל על קו הגובה. ערך ברירת המחדל הוא 2.5.",
	"@@Contour_Adaptive-Smoothing_tag1@@": "ערך נמוך יותר מפיק קו גובה עם יותר גרעיניות ופחות החלקה, בעוד שערך גבוה יותר מפיק קו גובה עם יותר החלקה שמופיע פחות משונן.",
	"@@Contour_Contour-Interval_tag0@@": "ההבדל ברום בין קווי גובה.",
	"@@Contour_Contour-Interval_tag1@@": "מרווח קו גובה קטן משמש באזורים שטוחים יחסית, בעוד שמרווחי קו גובה גדולים יותר משמשים בפני שטח הרריים או מגוונים.",
	"@@Contour_Contour-Type_tag0@@": "סוג קו הגובה שיווצר:",
	"@@Contour_Contour-Type_tag1@@": "<strong>מילוי קו גובה</strong> - ממלא את האזור בין כל קו גובה בערך גובה מקוונט.",
	"@@Contour_Contour-Type_tag3@@": "<strong>קווי גובה</strong> - מצרף נקודות בגובה זהה ליצירת קו שמייצג גובה קבוע.",
	"@@Contour_Contour-Type_tag5@@": "<strong>שטח חלק בלבד</strong> - מחליק את שכבת הגובה של הקלט אבל לא יוצר קווי גובה.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag0@@": "אינדקס קו הגובה, אשר מיוצג כקו מודגש.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag1@@": "ערך ברירת המחדל הוא 5, כלומר כל קו גובה חמישי הוא מודגש.",
	"@@Contour_Number-Of-Contours_tag0@@": "מספר קווי הגובה שיש ליצור בתצוגה. אפשרות זו מכווננת באופן דינמי את המרווח בין קווי הגובה באופן שיתאים לפני השטח בתצוגה תוך שמירה על מרווחים מתוקננים כגון 1, 5, 10 וכך הלאה.",
	"@@Contour_Raster_tag0@@": "סט נתוני גובה רסטר של ערוץ אחד.",
	"@@Contour_Z-Base_tag0@@": "ערך הבסיס של קו גובה. קווי גובה נוצרים מעל ומתחת לערך זה כפי שנדרש לכיסוי מלוא טווח הערכים של רסטר הקלט. ערך ברירת המחדל הוא 0.",
	"@@Contour_Z-Base_tag1@@": "ערך של 0 לעתים קרובות מייצג את ממוצע גובה פני הים, בהתאם לסט נתוני הגובה שמשמש כמקור.",
	"@@Contour_Z-Factor_tag0@@": "פקטור המרת היחידות שבו נעשה שימוש בעת הפקת קווי גובה. ערך ברירת המחדל הוא 1.",
	"@@Contour_Z-Factor_tag1@@": "קווי הגובה מופקים על בסיס ערכי z ברסטר הקלט, שלעתים קרובות נמדדים ביחידות של מטרים או רגל. עם ערך ברירת המחדל של 1, קווי הגובה יהיו באותן היחידות כמו ערכי z של רסטר הקלט. כדי ליצור קווי גובה ביחידה אחרת מזו של ערכי ה-z, הגדר ערך מתאים עבור פקטור z. שים לב שלא נדרש ששיחידות קרקע x,y ופני השטח z יהיו עקביות עבור כלי זה.",
	"@@Contour_Z-Factor_tag2@@": "לדוגמה, אם ערכי הגובה ברסטר הקלט הם ברגל, אך אתה מעוניין שקווי הגובה יופקו על בסיס יחידות במטר, הגדר את פקטור z ל-0.3048 (מכיוון שרגל 1 = 0.3048 מטר).",
	"@@Contrast-and-Brightness_Brightness-Offset_tag0@@": "התאם את הבהירות של שכבת הרסטר.",
	"@@Contrast-and-Brightness_Brightness-Offset_tag1@@": "באפשרותך להשתמש במחוון כדי לשנות את היסט הבהירות, או להקליד ערך.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag0@@": "התאם את הניגודיות של שכבת הרסטר.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag1@@": "באפשרותך להשתמש במחוון כדי לשנות את היסט הניגודיות, או להקליד ערך.",
	"@@Contrast-and-Brightness_Raster_tag0@@": "רסטר הקלט שעליו יש לערוך את הבהירות והניגודיות.",
	"@@Convolution_kernel_tag0@@": "<p>טבלה זו מראה כיצד כל פיקסל ישוקלל בתהליך הסינון. תוכל לערוך טבלה זו אם בחרת<strong>מוגדר על ידי המשתמש</strong>בהגדרה<strong>סוג</strong>.</p>",
	"@@Convolution_Raster_tag0@@": "סט נתוני רסטר הקלט.",
	"@@Convolution_Type_tag0@@": "בחר את סוג הסינון שברצונך לבצע. קיימות אפשרויות לחידוד, לטשטוש ולזיהוי קצוות, או שלחלופין באפשרותך להגדיר מסנן משלך מבוסס kernel.",
	"@@Corridor_Distance-Raster-1_tag0@@": "רסטר מרחק הקלט הראשון. עליו להיות פלט מרחק עלות מצטבר מ'מרחק עלות' או 'מרחק נתיב'.",
	"@@Corridor_Distance-Raster-2_tag0@@": "רסטר מרחק הקלט השני. עליו להיות פלט מרחק עלות מצטבר מ'מרחק עלות' או 'מרחק נתיב'.",
	"@@Cos_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Cos_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Cos_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Cos_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Cos_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Cos_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Cos_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Cos_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Cos_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Cos_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Cos_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Cos_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הקוסינוס .",
	"@@CosH_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@CosH_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@CosH_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@CosH_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@CosH_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@CosH_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@CosH_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@CosH_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@CosH_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@CosH_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@CosH_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@CosH_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הקוסינוס ההיפרבולי.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "פרמטר זה מדמה את העלייה במאמץ להתגבר על עלויות כאשר העלות המצטברת עולה. הוא משמש לדיגום עייפות של הנוסע. העלות המצטברת העולה להשגת תא מוכפלת בשיעור ההתנגדות ומתווספת לעלות למעבר אל התא הבא.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "זוהי גרסה מתוקנת של נוסחת שיעור ריבית דריבית אשר משמשת לחישוב העלות בפועל של מעבר דרך תא. עם שערך שיעור ההתנגדות עולה, היא מעלה את העלות של התאים שבהם נעשה ביקור בהמשך. ככל ששיעור ההתנגדות גבוה יותר, כך עולה העלות להשיג את התא הבא, אשר מורכבת עבור כל תנועה עוקבת. מכיוון ששיעור ההתנגדות דומה לשיעור מרוכב ובדרך כלל ערכי העלות המצטברת גדולים מאוד, מומלץ להשתמש בשיעורי התנגדות קטנים, כגון 0.005 או אפילו פחות מכך, בהתאם לערכי העלות המצטברת.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Cost-Allocation_Capacity_tag0@@": "מגדיר את קיבולת העלות עבור הנוסע עבור מקור. תחשיבי העלות ממשיכים עבור כל מקור עד שמושגת הקיבולת שצוינה.",
	"@@Cost-Allocation_Capacity_tag1@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Cost-Allocation_Capacity_tag2@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Cost-Allocation_Cost-Raster_tag0@@": "רסטר קלט נדרש שמגדיר את העלות או העכבה לזוז פלאנימטרית על פני כל תא. הערך בכל מיקום תא מייצג את מרחק העלות-ליחידה עבור תזוזה על פני התא. כל ערך מיקום תא מוכפל ברזולוציית התא, תוך פיצוי גם עבור תנועה אלכסונית, לקבלת העלות הכוללת של מעבר על פני התא.",
	"@@Cost-Allocation_Cost-Raster_tag1@@": "הערכים של <strong>רסטר העלויות</strong> יכולים להיות מספר שלם או נקודה צפה, אבל הם לא יכולים להיות מספר שלילי או אפס.",
	"@@Cost-Allocation_Maximum-Distance_tag0@@": "הסף שאותו ערכי העלות המצטברת לא יכולים לעבור. אם מרחק עלות מצטברת חורג מעבר לערך זה, ערך הפלט עבור מיקום התא יהיה ${NoData}. המרחק המקסימלי מגדיר את התיחום שעבורו מרחקי עלות מצטברת מחושבים. מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "מכפיל שיחול על ערכי העלות.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "פרמטר זה מאפשר לשלוט על אופן הנסיעה או העוצמה במקור. ככל שהמכפיל גדול יותר, כך עולה העלות לזוז על פני כל תא.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "הערכים חייבים להיות גדולים מאפס. ערך ברירת המחדל הוא 1.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Cost-Allocation_Source-Field_tag0@@": "השדה אשר משמש להקצאת ערכים למיקומי המקור. חייב להיות מסוג מספר שלם. אם <strong>רסטר ערכים</strong> הוגדר, הערכים בקלט זה יקבלו קדימות על כל הגדרה עבור <strong>שדה מקור</strong>.",
	"@@Cost-Allocation_Source-Raster_tag0@@": "רסטר הקלט הנדרש של מיקומי מקור.",
	"@@Cost-Allocation_Source-Raster_tag1@@": "זהו רסטר שמזהה את התאים או המיקומים שמהם מרחק העלות המצטברת הקטן ביותר עבור כל מיקום תא פלט מחושב.",
	"@@Cost-Allocation_Source-Raster_tag2@@": "אם <strong>רסטר המקור</strong> של הקלט הוא נקודה צפה, יש להגדיר את <strong>רסטר ערכים</strong> ועליו להיות מספר שלם. <strong>רסטר ערכים</strong> יקבלו קדימות על כל הגדרה של <strong>שדה מקור</strong>.",
	"@@Cost-Allocation_Start-Cost_tag0@@": "העלות ההתחלתית שממנה יש להתחיל את חישובי העלות. פרמטר זה מאפשר לציין עלות קבועה שמשויכת למקור. במקום להתחיל בעלות 0, אלגוריתם העלות יתחיל בערך שצוין.",
	"@@Cost-Allocation_Start-Cost_tag1@@": "הערך חייב להיות 0 ומעלה. ערך ברירת המחדל הוא 0.",
	"@@Cost-Allocation_Travel-Direction_tag0@@": "מגדיר את כיוון הנוסע בעת החלת שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור.",
	"@@Cost-Allocation_Travel-Direction_tag1@@": "<strong>ממקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל ממקור הקלט תוך התקדמות החוצה לתאים שאינם מקור. זוהי ברירת המחדל.",
	"@@Cost-Allocation_Travel-Direction_tag3@@": "<strong>למקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל מכל תא שאינו מקור תוך התקדמות חזרה למקור הקלט.",
	"@@Cost-Allocation_Travel-Direction_tag5@@": "ציין את מילת המפתח <strong>ממקור</strong> או <strong>למקור</strong>, אשר תוחל על כל המקורות, או ציין שדה ב<strong>רסטר המקור</strong> שמכיל את מילות המפתח לזיהוי כיוון הנסיעה עבור כל מקור. שדה זה חייב להכיל את החרוזת ${FROM_SOURCE} או ${TO_SOURCE}.",
	"@@Cost-Allocation_Value-Raster_tag0@@": "רסטר המספר השלם של הקלט שמזהה את ערכי האזור שבהם יש להשתמש עבור כל מיקום מקור קלט. עבור כל תא מיקום מקור, הערך שמוגדר על ידי <strong>רסטר הערכים</strong> ישויך לכל התאים שהוקצו למיקום המקור עבור התחשיב. <strong>רסטר הערכים</strong> יקבל קדימות על כל הגדרה של <strong>שדה מקור</strong>.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "פרמטר זה מדמה את העלייה במאמץ להתגבר על עלויות כאשר העלות המצטברת עולה. הוא משמש לדיגום עייפות של הנוסע. העלות המצטברת העולה להשגת תא מוכפלת בשיעור ההתנגדות ומתווספת לעלות למעבר אל התא הבא.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "זוהי גרסה מתוקנת של נוסחת שיעור ריבית דריבית אשר משמשת לחישוב העלות בפועל של מעבר דרך תא. עם שערך שיעור ההתנגדות עולה, היא מעלה את העלות של התאים שבהם נעשה ביקור בהמשך. ככל ששיעור ההתנגדות גבוה יותר, כך עולה העלות להשיג את התא הבא, אשר מורכבת עבור כל תנועה עוקבת. מכיוון ששיעור ההתנגדות דומה לשיעור מרוכב ובדרך כלל ערכי העלות המצטברת גדולים מאוד, מומלץ להשתמש בשיעורי התנגדות קטנים, כגון 0.005 או אפילו פחות מכך, בהתאם לערכי העלות המצטברת.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Cost-Back-Link_Capacity_tag0@@": "מגדיר את קיבולת העלות עבור הנוסע עבור מקור. תחשיבי העלות ממשיכים עבור כל מקור עד שמושגת הקיבולת שצוינה.",
	"@@Cost-Back-Link_Capacity_tag1@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Cost-Back-Link_Capacity_tag2@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Cost-Back-Link_Cost-Raster_tag0@@": "רסטר קלט נדרש שמגדיר את העלות או העכבה לזוז פלאנימטרית על פני כל תא. הערך בכל מיקום תא מייצג את מרחק העלות-ליחידה עבור תזוזה על פני התא. כל ערך מיקום תא מוכפל ברזולוציית התא, תוך פיצוי גם עבור תנועה אלכסונית, לקבלת העלות הכוללת של מעבר על פני התא.",
	"@@Cost-Back-Link_Cost-Raster_tag1@@": "הערכים של <strong>רסטר העלויות</strong> יכולים להיות מספר שלם או נקודה צפה, אבל הם לא יכולים להיות מספר שלילי או אפס.",
	"@@Cost-Back-Link_Maximum-Distance_tag0@@": "הסף שאותו ערכי העלות המצטברת לא יכולים לעבור. אם מרחק עלות מצטברת חורג מעבר לערך זה, ערך הפלט עבור מיקום התא יהיה NoData. המרחק המקסימלי מגדיר את התיחום שעבורו מרחקי עלות מצטברת מחושבים. מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "מכפיל שיחול על ערכי העלות.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "פרמטר זה מאפשר לשלוט על אופן הנסיעה או העוצמה במקור. ככל שהמכפיל גדול יותר, כך עולה העלות לזוז על פני כל תא.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "הערכים חייבים להיות גדולים מאפס. ערך ברירת המחדל הוא 1.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Cost-Back-Link_Source-Raster_tag0@@": "רסטר הקלט הנדרש של מיקומי מקור.",
	"@@Cost-Back-Link_Source-Raster_tag1@@": "זהו רסטר שמזהה את התאים או המיקומים שמהם מרחק העלות המצטברת הקטן ביותר עבור כל מיקום תא פלט מחושב.",
	"@@Cost-Back-Link_Start-Cost_tag0@@": "העלות ההתחלתית שממנה יש להתחיל את חישובי העלות. פרמטר זה מאפשר לציין עלות קבועה שמשויכת למקור. במקום להתחיל בעלות 0, אלגוריתם העלות יתחיל בערך שצוין.",
	"@@Cost-Back-Link_Start-Cost_tag1@@": "הערך חייב להיות 0 ומעלה. ערך ברירת המחדל הוא 0.",
	"@@Cost-Back-Link_Travel-Direction_tag0@@": "מגדיר את כיוון הנוסע בעת החלת שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור.",
	"@@Cost-Back-Link_Travel-Direction_tag1@@": "<strong>ממקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל ממקור הקלט תוך התקדמות החוצה לתאים שאינם מקור. זוהי ברירת המחדל.",
	"@@Cost-Back-Link_Travel-Direction_tag3@@": "<strong>למקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל מכל תא שאינו מקור תוך התקדמות חזרה למקור הקלט.",
	"@@Cost-Back-Link_Travel-Direction_tag5@@": "ציין את מילת המפתח <strong>ממקור</strong> או <strong>למקור</strong>, אשר תוחל על כל המקורות, או ציין שדה ב<strong>רסטר המקור</strong> שמכיל את מילות המפתח לזיהוי כיוון הנסיעה עבור כל מקור. שדה זה חייב להכיל את החרוזת ${FROM_SOURCE} או ${TO_SOURCE}.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "פרמטר זה מדמה את העלייה במאמץ להתגבר על עלויות כאשר העלות המצטברת עולה. הוא משמש לדיגום עייפות של הנוסע. העלות המצטברת העולה להשגת תא מוכפלת בשיעור ההתנגדות ומתווספת לעלות למעבר אל התא הבא.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "זוהי גרסה מתוקנת של נוסחת שיעור ריבית דריבית אשר משמשת לחישוב העלות בפועל של מעבר דרך תא. עם שערך שיעור ההתנגדות עולה, היא מעלה את העלות של התאים שבהם נעשה ביקור בהמשך. ככל ששיעור ההתנגדות גבוה יותר, כך עולה העלות להשיג את התא הבא, אשר מורכבת עבור כל תנועה עוקבת. מכיוון ששיעור ההתנגדות דומה לשיעור מרוכב ובדרך כלל ערכי העלות המצטברת גדולים מאוד, מומלץ להשתמש בשיעורי התנגדות קטנים, כגון 0.005 או אפילו פחות מכך, בהתאם לערכי העלות המצטברת.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Cost-Distance_Capacity_tag0@@": "מגדיר את קיבולת העלות עבור הנוסע עבור מקור. תחשיבי העלות ממשיכים עבור כל מקור עד שמושגת הקיבולת שצוינה.",
	"@@Cost-Distance_Capacity_tag1@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Cost-Distance_Capacity_tag2@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Cost-Distance_Cost-Raster_tag0@@": "רסטר קלט נדרש שמגדיר את העלות או העכבה לזוז פלאנימטרית על פני כל תא. הערך בכל מיקום תא מייצג את מרחק העלות-ליחידה עבור תזוזה על פני התא. כל ערך מיקום תא מוכפל ברזולוציית התא, תוך פיצוי גם עבור תנועה אלכסונית, לקבלת העלות הכוללת של מעבר על פני התא.",
	"@@Cost-Distance_Cost-Raster_tag1@@": "הערכים של <strong>רסטר העלויות</strong> יכולים להיות מספר שלם או נקודה צפה, אבל הם לא יכולים להיות מספר שלילי או אפס.",
	"@@Cost-Distance_Maximum-Distance_tag0@@": "הסף שאותו ערכי העלות המצטברת לא יכולים לעבור. אם מרחק עלות מצטברת חורג מעבר לערך זה, ערך הפלט עבור מיקום התא יהיה NoData. המרחק המקסימלי מגדיר את התיחום שעבורו מרחקי עלות מצטברת מחושבים. מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "מכפיל שיחול על ערכי העלות.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "פרמטר זה מאפשר לשלוט על אופן הנסיעה או העוצמה במקור. ככל שהמכפיל גדול יותר, כך עולה העלות לזוז על פני כל תא.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "הערכים חייבים להיות גדולים מאפס. ערך ברירת המחדל הוא 1.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Cost-Distance_Source-Raster_tag0@@": "רסטר הקלט הנדרש של מיקומי מקור.",
	"@@Cost-Distance_Source-Raster_tag1@@": "זהו רסטר שמזהה את התאים או המיקומים שמהם מרחק העלות המצטברת הקטן ביותר עבור כל מיקום תא פלט מחושב.",
	"@@Cost-Distance_Start-Cost_tag0@@": "העלות ההתחלתית שממנה יש להתחיל את חישובי העלות. פרמטר זה מאפשר לציין עלות קבועה שמשויכת למקור. במקום להתחיל בעלות 0, אלגוריתם העלות יתחיל בערך שצוין.",
	"@@Cost-Distance_Start-Cost_tag1@@": "הערך חייב להיות 0 ומעלה. ערך ברירת המחדל הוא 0.",
	"@@Cost-Distance_Travel-Direction_tag0@@": "מגדיר את כיוון הנוסע בעת החלת שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור.",
	"@@Cost-Distance_Travel-Direction_tag1@@": "<strong>ממקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל ממקור הקלט תוך התקדמות החוצה לתאים שאינם מקור. זוהי ברירת המחדל.",
	"@@Cost-Distance_Travel-Direction_tag3@@": "<strong>למקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל מכל תא שאינו מקור תוך התקדמות חזרה למקור הקלט.",
	"@@Cost-Distance_Travel-Direction_tag5@@": "ציין את מילת המפתח <strong>ממקור</strong> או <strong>למקור</strong>, אשר תוחל על כל המקורות, או ציין שדה ב<strong>רסטר המקור</strong> שמכיל את מילות המפתח לזיהוי כיוון הנסיעה עבור כל מקור. שדה זה חייב להכיל את החרוזת ${FROM_SOURCE} או ${TO_SOURCE}.",
	"@@Curvature_Curvature-Type_tag0@@": "סוג העקומה מדגיש מפנים שונים של השיפוע. קיימות שלוש אפשרויות עקומה:",
	"@@Curvature_Curvature-Type_tag1@@": "Planform - ניצב לכיוון השיפוע המקסימלי. הוא משפיע על ההתכנסות וההתבדרות של הזרימה על פני שטח.",
	"@@Curvature_Curvature-Type_tag2@@": "פרופיל - מקביל לשיפוע ומציין את הכיון של השיפוע המקסימלי. הוא משפיע על האצה והאטה של הזרימה על פני שטח.",
	"@@Curvature_Curvature-Type_tag3@@": "רגיל - משלב את העקומות מסוג <strong>פרופיל</strong> ו<strong>פלטפורמה</strong>.",
	"@@Curvature_DEM_tag0@@": "רסטר דגם גובה דיגיטלי (DEM).",
	"@@Curvature_Z-Factor_tag0@@": "פקטור Z מכוונן את יחידות המדידה עבור יחידות Z כאשר הן שונות מיחידות X,Y של פני שטח הקלט. אם יחידות X,Y ויחידות הן מאותו סוג של יחידת מדידה, יש להגדיר את פקטור Z ל-1. ערכי Z של פני שטח הקלט מוכפלים בפקטור Z בעת חישוב פני שטח הפלט הסופי. לדוגמה, אם יחידות Z הן רגל ויחידות X,Y הן מטרים, עליך להשתמש בפקטור Z של 0.3048 כדי להמיר את יחידות X מרגל למטרים, מכיוון ש-1 רגל = 0.3048 מטר.",
	"@@Divide_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Divide_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Divide_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Divide_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Divide_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Divide_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Divide_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Divide_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Divide_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Divide_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Divide_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Divide_Raster_tag0@@": "הקלט שהערך שלו יחולק בקלט השני.",
	"@@Divide_Raster_tag1@@": "ניתן להשתמש במספר כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור ${Raster2}.",
	"@@Divide_Raster2_tag0@@": "הקלט שהקלט השני יחולק בערך שלו.",
	"@@Divide_Raster2_tag1@@": "ניתן להשתמש במספר כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור ${Raster}.",
	"@@Elevation-Void-Fill_DEM_tag0@@": "DEM הקלט.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag0@@": "ערך רוחב חלל מקסימלי משמש לציון החלל הגדול ביותר שברצונך למלא. אם הרוחב או הגובה של המלבן התוחם סביב החלל גדול יותר מערך רוחב החלל המקסימלי, החלל לא יתמלא. היחידות של פרמטר זה זהות ליחידות אשר משמשות במערכת הייחוס המרחבי שלך.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag1@@": "אם פרמטר זה ריק או שערכו ${0}, לא יעשה שימוש ברוחב מקסימלי, וכל החללים יתמלאו. ערך של ${-1} משמעו שלא יתבצע כל מילוי חלל.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag0@@": "רדיוס החיפוש המקסימלי אשר ישמש עבור מילוי חלל. חלל שהוא רחוק יותר, מכל פיקסל חוקי, מאשר ערך סף זה יישאר כחלל. היחידות של פרמטר זה זהות ליחידות אשר משמשות במערכת הייחוס המרחבי שלך.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag1@@": "אם הערך של פרמטר זה ריק, ${0}, או ${-1} לא יעשה שימוש בפרמטר זה.",
	"@@Equal-to_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Equal-to_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Equal-to_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Equal-to_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Equal-to_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Equal-to_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Equal-to_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Equal-to_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Equal-to_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Equal-to_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Equal-to_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Equal-to_Raster_tag0@@": "הקלט אשר ישמש להשוואה עבור שוויון על ידי הקלט השני.",
	"@@Equal-to_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Equal-to_Raster2_tag0@@": "הקלט אשר ישמש להשוואה עבור שוויון על ידי הקלט הראשון.",
	"@@Equal-to_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Euclidean-Allocation_Cellsize_tag0@@": "גודל התא שבו רסטר הפלט ייווצר.",
	"@@Euclidean-Allocation_Cellsize_tag1@@": "אם גודל התא הוגדר מפורשות ב<strong>סביבות ניתוח</strong> , זה יהיה גודל ברירת המחדל של התא. אם הוא לא הוגדר, גודל תא הפלט יהיה זהה ל<strong>רסטר מקור</strong>.",
	"@@Euclidean-Allocation_Distance-Method_tag0@@": "קובע האם לחשב את המרחק בשיטה פלאנרית (קרקע שטוחה) או גיאודזית (אליפסואיד).",
	"@@Euclidean-Allocation_Distance-Method_tag1@@": "גיאודזי - הקו הקצר ביותר בין שתי נקודות על פני השטח של כדור הארץ בספרואיד (אליפסואיד). לפיכך, ללא קשר להשלכה של קלט או פלט, התוצאות לא משתנות. דוגמה לשימוש בקו גיאודזי הוא כאשר ברצונך לקבוע את המרחק הקצר ביותר בין שתי ערים עבור מסלול טיסה של מטוס. מוכר גם בשם קו מעגל גדול אם מבוסס על כדור במקום על אליפסואיד.",
	"@@Euclidean-Allocation_Distance-Method_tag2@@": "פלאנרי - מדידות פלאנריות משתמשות במתמטיקה קרטזית דו-ממדית כדי לחשב אורך ושטח. האפשרות זמינה רק בעת מדידה במערכת קואורדינטות מוטלת כאשר המשטח הדו-ממדי של מערכת הקואורדינטות ישמש כבסיס למדידות.",
	"@@Euclidean-Allocation_Maximum-Distance_tag0@@": "מגדיר את מרחק הסף שבתוכו המקור הקרוב ביותר ייקבע. אם המרחק למקור הקרוב ביותר גדול יותר מערך זה, הפלט עבור תא זה יהיה ${NoData}.",
	"@@Euclidean-Allocation_Maximum-Distance_tag1@@": "מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Euclidean-Allocation_Raster-Barriers_tag0@@": "הרסטר שמגדיר את המחסומים.",
	"@@Euclidean-Allocation_Raster-Barriers_tag1@@": "סט הנתונים חייב להכיל ${NoData} היכן שאין מחסומים. מחסומים מיוצגים על ידי ערכים חוקיים כולל אפס.",
	"@@Euclidean-Allocation_Raster-Barriers_tag2@@": "המחסומים יכולים להיות מוגדרים על ידי רסטר נקודה צפה או מספר שלם.",
	"@@Euclidean-Allocation_Source-Field_tag0@@": "השדה אשר משמש להקצאת ערכים למיקומי המקור. חייב להיות מסוג מספר שלם. אם <strong>רסטר ערכים</strong> הוגדר, הערכים בקלט זה יקבלו קדימות על כל הגדרה עבור <strong>שדה מקור</strong>.",
	"@@Euclidean-Allocation_Source-Raster_tag0@@": "רסטר קלט נדרש שמגדיר את מיקומי המקור. על בסיס מרחק אוקלידי, המקור הקרוב ביותר ייקבע עבור כל תא בפלט",
	"@@Euclidean-Allocation_Source-Raster_tag1@@": "סוג הקלט יכול להיות סוג נקודה צפה או מספר שלם.",
	"@@Euclidean-Allocation_Value-Raster_tag0@@": "רסטר המספר השלם של הקלט שמזהה את ערכי האזור שבהם יש להשתמש עבור כל מיקום מקור קלט. עבור כל תא מיקום מקור, הערך שמוגדר על ידי <strong>רסטר הערכים</strong> ישויך לכל התאים שהוקצו למיקום המקור עבור התחשיב. <strong>רסטר הערכים</strong> יקבל קדימות על כל הגדרה של <strong>שדה מקור</strong>.",
	"@@Euclidean-Direction_Cellsize_tag0@@": "גודל התא שבו רסטר הפלט ייווצר.",
	"@@Euclidean-Direction_Cellsize_tag1@@": "אם גודל התא הוגדר מפורשות ב<strong>סביבות ניתוח</strong> , זה יהיה גודל ברירת המחדל של התא. אם הוא לא הוגדר, גודל תא הפלט יהיה זהה ל<strong>רסטר מקור</strong>.",
	"@@Euclidean-Direction_Distance-Method_tag0@@": "קובע האם לחשב את המרחק בשיטה פלאנרית (קרקע שטוחה) או גיאודזית (אליפסואיד).",
	"@@Euclidean-Direction_Distance-Method_tag1@@": "גיאודזי - הקו הקצר ביותר בין שתי נקודות על פני השטח של כדור הארץ בספרואיד (אליפסואיד). לפיכך, ללא קשר להשלכה של קלט או פלט, התוצאות לא משתנות. דוגמה לשימוש בקו גיאודזי הוא כאשר ברצונך לקבוע את המרחק הקצר ביותר בין שתי ערים עבור מסלול טיסה של מטוס. מוכר גם בשם קו מעגל גדול אם מבוסס על כדור במקום על אליפסואיד.",
	"@@Euclidean-Direction_Distance-Method_tag2@@": "פלאנרי - מדידות פלאנריות משתמשות במתמטיקה קרטזית דו-ממדית כדי לחשב אורך ושטח. האפשרות זמינה רק בעת מדידה במערכת קואורדינטות מוטלת כאשר המשטח הדו-ממדי של מערכת הקואורדינטות ישמש כבסיס למדידות.",
	"@@Euclidean-Direction_Maximum-Distance_tag0@@": "מגדיר את מרחק הסף שבתוכו הכיוון למקור הקרוב ביותר יחושב. אם המרחק למקור הקרוב ביותר גדול יותר מערך זה, הפלט עבור תא זה יהיה ${NoData}.",
	"@@Euclidean-Direction_Maximum-Distance_tag1@@": "מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Euclidean-Direction_Raster-Barriers_tag0@@": "הרסטר שמגדיר את המחסומים.",
	"@@Euclidean-Direction_Raster-Barriers_tag1@@": "סט הנתונים חייב להכיל NoData היכן שאין מחסומים. מחסומים מיוצגים על ידי ערכים חוקיים כולל אפס.",
	"@@Euclidean-Direction_Raster-Barriers_tag2@@": "המחסומים יכולים להיות מוגדרים על ידי רסטר נקודה צפה או מספר שלם.",
	"@@Euclidean-Direction_Source-Raster_tag0@@": "רסטר קלט נדרש שמגדיר את התאים או המיקומים שעבורם הכיוון האוקלידי עבור כל מיקום תא פלט מחושב.",
	"@@Euclidean-Direction_Source-Raster_tag1@@": "סוג הקלט יכול להיות סוג נקודה צפה או מספר שלם.",
	"@@Euclidean-Distance_Cellsize_tag0@@": "גודל התא שבו רסטר הפלט ייווצר.",
	"@@Euclidean-Distance_Cellsize_tag1@@": "אם גודל התא הוגדר מפורשות ב<strong>סביבות ניתוח</strong> , זה יהיה גודל ברירת המחדל של התא. אם הוא לא הוגדר, גודל תא הפלט יהיה זהה ל<strong>רסטר מקור</strong>.",
	"@@Euclidean-Distance_Distance-Method_tag0@@": "קובע האם לחשב את המרחק בשיטה פלאנרית (קרקע שטוחה) או גיאודזית (אליפסואיד).",
	"@@Euclidean-Distance_Distance-Method_tag1@@": "גיאודזי - הקו הקצר ביותר בין שתי נקודות על פני השטח של כדור הארץ בספרואיד (אליפסואיד). לפיכך, ללא קשר להשלכה של קלט או פלט, התוצאות לא משתנות. דוגמה לשימוש בקו גיאודזי הוא כאשר ברצונך לקבוע את המרחק הקצר ביותר בין שתי ערים עבור מסלול טיסה של מטוס. מוכר גם בשם קו מעגל גדול אם מבוסס על כדור במקום על אליפסואיד.",
	"@@Euclidean-Distance_Distance-Method_tag2@@": "פלאנרי - מדידות פלאנריות משתמשות במתמטיקה קרטזית דו-ממדית כדי לחשב אורך ושטח. האפשרות זמינה רק בעת מדידה במערכת קואורדינטות מוטלת כאשר המשטח הדו-ממדי של מערכת הקואורדינטות ישמש כבסיס למדידות.",
	"@@Euclidean-Distance_Maximum-Distance_tag0@@": "הסף שאותו ערכי המרחק המצטבר לא יכולים לעבור. אם מרחק אוקלידי מצטבר חורג מעבר לערך זה, ערך הפלט עבור מיקום התא יהיה NoData.",
	"@@Euclidean-Distance_Maximum-Distance_tag1@@": "מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Euclidean-Distance_Raster-Barriers_tag0@@": "הרסטר שמגדיר את המחסומים.",
	"@@Euclidean-Distance_Raster-Barriers_tag1@@": "סט הנתונים חייב להכיל ${NoData} היכן שאין מחסומים. מחסומים מיוצגים על ידי ערכים חוקיים כולל אפס.",
	"@@Euclidean-Distance_Raster-Barriers_tag2@@": "המחסומים יכולים להיות מוגדרים על ידי רסטר נקודה צפה או מספר שלם.",
	"@@Euclidean-Distance_Source-Raster_tag0@@": "רסטר הקלט הנדרש שמגדיר את התאים או המיקומים שעבורם המרחק האוקלידי עבור כל מיקום תא פלט מחושב.",
	"@@Euclidean-Distance_Source-Raster_tag1@@": "סוג הקלט יכול להיות סוג נקודה צפה או מספר שלם.",
	"@@Exp_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Exp_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Exp_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Exp_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Exp_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Exp_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Exp_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Exp_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Exp_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Exp_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Exp_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Exp_Raster_tag0@@": "ערכי הקלט שעבורם יש למצוא את הבסיס e האקספוננציאלי.",
	"@@Exp10_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Exp10_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Exp10_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Exp10_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Exp10_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Exp10_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Exp10_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Exp10_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Exp10_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Exp10_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Exp10_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Exp10_Raster_tag0@@": "ערכי הקלט שעבורם יש למצוא את הבסיס 10 האקספוננציאלי.",
	"@@Exp2_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Exp2_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Exp2_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Exp2_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Exp2_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Exp2_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Exp2_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Exp2_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Exp2_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Exp2_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Exp2_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Exp2_Raster_tag0@@": "ערכי הקלט שעבורם יש למצוא את הבסיס 2 האקספוננציאלי.",
	"@@Extract-Bands_Band_tag0@@": "בחר ערוצים לחילוץ מרשימה על בסיס אפשרות פרמטר <strong>שיטה</strong> שבו נעשה שימוש.",
	"@@Extract-Bands_Combination_tag0@@": "שילוב הערוצים או סדר הערוצים. רשימת הבחירה תלויה באפשרות <strong>שיטה</strong> שצוינה. לדוגמה, אם <strong>שיטה</strong> היא <strong>שמות ערוצים</strong>, באפשרותך לבחור שילוב כחול, ירוק ואדום לחילוץ תמונה בצבע טבעי.",
	"@@Extract-Bands_Method_tag0@@": "בחר אחת מהשיטות הבאות לחילוץ ערוצים:",
	"@@Extract-Bands_Method_tag1@@": "<strong>IDs של ערוצים</strong> - המציין או המספר של הערוץ, שהוא ייחודי לכל חיישן. אלה יכולים להיות זהים ל<strong>שמות ערוצים</strong>.",
	"@@Extract-Bands_Method_tag4@@": "<strong>שמות ערוצים</strong> - משתמש בשם הערוץ שמייצג את מרווח אורך הגל בספקטרום האלקטרומגנטי (אדום, קרוב לאינפרא-אדום, אינפרא-אדום תרמי, לדוגמה). ניתן לציין זאת גם כמזהה מספר ערוץ.",
	"@@Extract-Bands_Method_tag6@@": "<strong>אורכי גל של ערוץ</strong> - אורך הגל בספקטרום האלקטרומגנטי.",
	"@@Extract-Bands_Missing-Band-Action_tag0@@": "ציין את הפעולה שתתרחש כאשר ערוץ בתוך ערוץ רשימת הערוצים לחילוץ אינו זמין.",
	"@@Extract-Bands_Missing-Band-Action_tag1@@": "<strong>התאמה הכי טובה</strong> - מוצא את הערוץ הזמין הטוב ביותר לשימוש במקומו של ערוץ חסר על בסיס אורך גל, כך שהפונקציה לא תיכשל",
	"@@Extract-Bands_Missing-Band-Action_tag3@@": "<strong>נכשל</strong> - אם בסט נתוני הקלט חסר ערוץ כלשהו שצוין בפרמטר <strong>ערוץ</strong>, הפונקציה תיכשל.",
	"@@Extract-Bands_Raster_tag0@@": "תוצר הרסטר שממנו הערוץ או הערוצים יחולץ או יחולצו.",
	"@@Fill_Raster_tag0@@": "רסטר גובה עם ערוץ יחיד.",
	"@@Fill_Z-Limit_tag0@@": "הפרש הגובה המרבי בין נקודת קליטת זרימה ונקודת השפיכה שלה למילוי.",
	"@@Fill_Z-Limit_tag1@@": "אלא אם כן ערך צוין עבור פרמטר זה, כל נקודות קליטת הזרימה ימולאו, ללא תלות בעומק.",
	"@@Fill_Z-Limit_tag2@@": "הערך של <strong>מגבלת Z</strong> חייב להיות גדול מאפס.",
	"@@Float_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Float_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Float_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Float_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Float_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Float_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Float_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Float_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Float_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Float_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Float_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Float_Raster_tag0@@": "רסטר הקלט שיומר לנקודה צפה.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag0@@": "רסטר הקלט שמראה את כיוון הזרימה החוצה מכל תא.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag1@@": "רסטר כיוון הזרימה יכול להיווצר ידי הפעלת הפונקציה <strong>כיוון זרימה</strong>.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag0@@": "מגדיר את סוג רסטר כיוון הזרימה של הקלט.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag1@@": "<strong>D8</strong> - רסטר כיוון הזרימה של הקלט הוא מסוג D8. זוהי ברירת המחדל.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag3@@": "<strong>DINF</strong> - רסטר כיוון הזרימה של הקלט הוא מסוג D-Infinity‏ (DINF).",
	"@@Flow-Accumulation_Flow-Direction-Type_tag5@@": "<strong>MFD</strong> - רסטר כיוון הזרימה של הקלט הוא מסוג Multi Flow Direction‏ (MFD).",
	"@@Flow-Accumulation_Output-Data-Type_tag0@@": "רסטר הצטברות הפלט יכול להיות מסוג נקודה צפה או מספר שלם.",
	"@@Flow-Accumulation_Output-Data-Type_tag1@@": "<strong>צף</strong> - רסטר הפלט יהיה מסוג נקודה צפה. זוהי ברירת המחדל.",
	"@@Flow-Accumulation_Output-Data-Type_tag3@@": "<strong>מספר שלם</strong> - רסטר הפלט יהיה מסוג מספר שלם.",
	"@@Flow-Accumulation_Weight-Raster_tag0@@": "רסטר קלט אופציונלי להחלת משקל לכל פיקסל.",
	"@@Flow-Accumulation_Weight-Raster_tag1@@": "אם לא צוין רסטר משקל, משקל ברירת מחדל של 1 יוחל לכל פיקסל.",
	"@@Flow-Direction_Flow-Direction-Type_tag0@@": "מגדיר את סוג רסטר כיוון הזרימה של הקלט.",
	"@@Flow-Direction_Flow-Direction-Type_tag1@@": "<strong>D8</strong> - רסטר כיוון הזרימה של הקלט הוא מסוג D8. זוהי ברירת המחדל.",
	"@@Flow-Direction_Flow-Direction-Type_tag3@@": "<strong>DINF</strong> - רסטר כיוון הזרימה של הקלט הוא מסוג D-Infinity‏ (DINF).",
	"@@Flow-Direction_Flow-Direction-Type_tag5@@": "<strong>MFD</strong> - רסטר כיוון הזרימה של הקלט הוא מסוג Multi Flow Direction‏ (MFD).",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag0@@": "מציין אם פיקסלים של קצה יזרמו תמיד החוצה או יעקבו אחר כללי זרימה רגילים.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag1@@": "<strong>לא</strong> - אם הנפילה המרבית בחלק הפנימי של פיקסל קצה גדולה יותר מאפס, כיוון הזרימה ייקבע כרגיל; אחרת, כיוון הזרימה יהיה לכיוון הקצה. פיקסלים שצריכים לזרום מהקצה של רסטר פני השטח פנימה, יעשו זאת. זוהי ברירת המחדל.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag3@@": "<strong>כן</strong> - כל הפיקסלים בקצה רסטר פני השטח יזרמו החוצה מרסטר פני השטח.",
	"@@Flow-Direction_Raster_tag0@@": "רסטר הקלט שמייצג פני שטח רציפים של גובה.",
	"@@Flow-Distance_Distance-Type_tag0@@": "קובע אם הרכיב האנכי או האופקי של מרחק זרימה מחושב.",
	"@@Flow-Distance_Distance-Type_tag1@@": "<strong>אופקי</strong> - תחשיבי מרחק הזרימה מייצגים את הרכיב האופקי של מרחק זרימה מכל פיקסל בדומיין אל הפיקסל/ים בזרם לתוכו הם זורמים.",
	"@@Flow-Distance_Distance-Type_tag3@@": "<strong>אנכי</strong> - תחשיבי מרחק הזרימה מייצגים את הרכיב האנכי של מרחק זרימה מכל פיקסל בדומיין אל הפיקסל/ים בזרם לתוכו הם זורמים. זוהי ברירת המחדל.",
	"@@Flow-Distance_Flow-Direction-Raster_tag0@@": "רסטר הקלט שמראה את כיוון הזרימה החוצה מכל תא.",
	"@@Flow-Distance_Flow-Direction-Raster_tag1@@": "אם רסטר כיוון זרימה מסופק, הכיוון/ים במורד הזרם יוגבל/ו לאלו המוגדרים על ידי כיווני הזרימה פנימה.",
	"@@Flow-Distance_Flow-Direction-Raster_tag2@@": "רסטר כיוון הזרימה יכול להיווצר באמצעות הפונקציה 'כיוון זרימה'.",
	"@@Flow-Distance_Flow-Direction-Type_tag0@@": "מגדיר את סוג רסטר כיוון הזרימה של הקלט.",
	"@@Flow-Distance_Flow-Direction-Type_tag1@@": "<strong>D8</strong> - רסטר כיוון הזרימה של הקלט הוא מסוג D8. זוהי ברירת המחדל.",
	"@@Flow-Distance_Flow-Direction-Type_tag3@@": "<strong>DINF</strong> - רסטר כיוון הזרימה של הקלט הוא מסוג D-Infinity‏ (DINF).",
	"@@Flow-Distance_Flow-Direction-Type_tag5@@": "<strong>MFD</strong> - רסטר כיוון הזרימה של הקלט הוא מסוג Multi Flow Direction‏ (MFD).",
	"@@Flow-Distance_Statistics-Type_tag0@@": "קובע את סוג הסטטיסטיקה לחישוב מרחק זרימה על פני נתיבי זרימה מרובים. אם יש נתיב זרימה אחד בלבד מכל תא לתא בזרם, כל סוגי הנתונים הסטטיסטיים מפיקים את אותה תוצאה.",
	"@@Flow-Distance_Statistics-Type_tag1@@": "<strong>מינימום</strong> - כאשר קיימים נתיבי זרימה מרובים, מחושב מרחק זרימה מינימלי. זוהי ברירת המחדל.",
	"@@Flow-Distance_Statistics-Type_tag3@@": "<strong>ממוצע משוקלל</strong> - כאשר קיימים נתיבי זרימה מרובים, מחושב ממוצע של מרחק זרימה. פרופורציית זרימה מתא לתאים השכנים שלו במורד הזרם משמשת כמשקלים לחישוב ממוצע משוקלל.",
	"@@Flow-Distance_Statistics-Type_tag5@@": "<strong>מקסימום</strong> - כאשר קיימים נתיבי זרימה מרובים, מחושב מרחק זרימה מקסימלי.",
	"@@Flow-Distance_Stream-Raster_tag0@@": "רסטר זרימת קלט שמייצג רשת זרימה לינארית.",
	"@@Flow-Distance_Surface-Raster_tag0@@": "רסטר הקלט שמייצג פני שטח רציפים של גובה.",
	"@@Flow-Length_Direction-of-Measurement_tag0@@": "כיוון המדידה לאורך נתיב הזרימה.",
	"@@Flow-Length_Direction-of-Measurement_tag1@@": "<strong>במורד הזרם</strong> - מחשב את המרחק במורד השיפוע לאורך נתיב הזרימה, מכל תא לנקודת קליטת הזרימה או המוצא בקצה הרסטר.",
	"@@Flow-Length_Direction-of-Measurement_tag3@@": "<strong>במעלה הזרם</strong> - מחשב את המרחק הארוך ביותר במעלה השיפוע לאורך נתיב הזרימה, מכל תא לראש קו פרשת המים.",
	"@@Flow-Length_Flow-Direction-Raster_tag0@@": "רסטר הקלט שמראה את כיוון הזרימה החוצה מכל תא.",
	"@@Flow-Length_Flow-Direction-Raster_tag1@@": "רסטר כיוון הזרימה יכול להיווצר ידי הפעלת הפונקציה <strong>כיוון זרימה</strong>.",
	"@@Flow-Length_Weight-Raster_tag0@@": "רסטר קלט אופציונלי להחלת משקל לכל תא.",
	"@@Flow-Length_Weight-Raster_tag1@@": "אם לא צוין רסטר משקל, משקל ברירת מחדל של 1 יוחל לכל תא.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag0@@": "מציין האם החישוב הסטטיסטי מתעלם מערכי ${NoData}..",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag1@@": "<strong>מסומן</strong> - מציין שאם ערך ${NoData} קיים בשכונה, החישוב יתעלם מערך ${NoData}. רק תאים בשכונה שיש להם ערכי נתונים ישמשו בקביעת ערך הפלט. זוהי ברירת המחדל.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag3@@": "<strong>לא מסומן</strong> - מציין שאם לתא כלשהו בשכונה יש ערך של ${NoData}, הפלט עבור תא העיבוד יהיה ${NoData}.",
	"@@Focal-Statistics_Neighborhood_tag0@@": "‏צורת השטח סביב כל תא המשמשת לחישוב הסטטיסטי.",
	"@@Focal-Statistics_Neighborhood_tag1@@": "לכל שכונה יש פרמטרים נוספים להגדרת הצורה.",
	"@@Focal-Statistics_Neighborhood_tag2@@": "טבעת, רדיוס פנימי, רדיוס חיצוני",
	"@@Focal-Statistics_Neighborhood_tag3@@": "עיגול, רדיוס",
	"@@Focal-Statistics_Neighborhood_tag4@@": "לא סדיר, רוחב, גובה, ערכי שכונה",
	"@@Focal-Statistics_Neighborhood_tag5@@": "מלבן, רוחב, גובה",
	"@@Focal-Statistics_Neighborhood_tag6@@": "טריז, רדיוס, זווית התחלה, זווית סוף",
	"@@Focal-Statistics_Neighborhood_tag7@@": "משקל, רוחב, גובה, ערכי שכונה",
	"@@Focal-Statistics_Neighborhood_tag8@@": "סוג השכונה 'לא סדיר' מאפשר לציין שכונה בצורה לא סדירה סביב תא העיבוד. השתמש בטבלת ערכי 'שכונה' להגדרת הצורה של ליבת השכונה. ערך של 0 עבור מיקום תא מציין שהתא אינו חלק מהשכונה, ולא יעשה בו שימוש בעיבוד. ערך של 1 מציין שהתא (והערך) התואם לו חבר בשכונה.",
	"@@Focal-Statistics_Neighborhood_tag9@@": "סוג שכונה 'משקל' דומה לסוג השכונה 'לא סדיר', בכך שהוא מאפשר להגדיר שכונה לא סדירה סביב תא העיבוד, אבל הוא מאפשר בנוסף להחיל משקלים על ערכי הקלט. הערכים בליבת המשקל מציינים אילו מיקומי תאים צריכים להיכלל בשכונה, ואת המשקלים שלפיהם הם יוכפלו. השתמש בערך 0 כדי להחריג תא מהעיבוד. אפשרויות חוקיות למשקל הם ערכים חיוביים, שליליים ועשרוניים. עבור סוג השכונה 'משקל', רק הנתונים הסטטיסטיים ממוצע, סטיית תקן או סיכום נתמכים.",
	"@@Focal-Statistics_Percentile-Value_tag0@@": "מציין באיזה אחוזון לחשב בעת בחירה באפשרות <strong>אחוזון</strong> כסוג הסטטיסטיקה. ברירת המחדל היא 90, עבור אחוזון 90.",
	"@@Focal-Statistics_Percentile-Value_tag3@@": "הערכים יכולים להיות בטווח בין 0 ל-100. אחוזון 0 הוא למעשה שווה ערך לנתון הסטטיסטי 'מינימום', והאחוזון 100 הוא שווה ערך ל'מקסימום', למעט העובדה שהתוצאה תהיה נקודה צפה. הערך 50 יפיק למעשה את אותה תוצאה כמו הנתון הסטטיסטי 'חציון'.",
	"@@Focal-Statistics_Raster_tag0@@": "רסטר הקלט הנדרש.",
	"@@Focal-Statistics_Statistics-Type_tag0@@": "סוג הנתון הסטטיסטי שיחושב.",
	"@@Focal-Statistics_Statistics-Type_tag1@@": "<strong>רוב</strong> - מחשב את הרוב (הערכים שמתרחשים בתדירות הגבוהה ביותר) של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag3@@": "<strong>מקסימום</strong> - מחשב את המקסימום (הערך הגדול ביותר) של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag5@@": "<strong>ממוצע</strong> - מחשב את הממוצע (הערך הממוצע) של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag7@@": "<strong>חציון</strong> - מחשב את החציון של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag9@@": "<strong>מינימום</strong> - מחשב את המינימום (הערך הקטן ביותר) של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag11@@": "<strong>מיעוט</strong> - מחשב את המיעוט (הערכים שמתרחשים בתדירות הנמוכה ביותר) של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag13@@": "<strong>אחוזון</strong> - מחשב את האחוזון של התאים בשכונה. באפשרותך לקבוע איזה אחוז לחשב בעזרת הפרמטר <strong>ערך באחוזים</strong>.",
	"@@Focal-Statistics_Statistics-Type_tag17@@": "<strong>טווח</strong> - מחשב את הטווח (ההפרש בין הערך הגדול והקטן ביותר) של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag19@@": "<strong>סטיית תקן</strong> - מחשב את סטיית התקן של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag21@@": "<strong>סכום</strong> - מחשב את הסכום (סך כל הערכים) של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag23@@": "<strong>שונות</strong> - מחשב את הגיוון (מספר הערכים הייחודיים) של התאים בשכונה.",
	"@@Focal-Statistics_Statistics-Type_tag25@@": "אם רסטר הקלט הוא נקודה צפה, רק סוגי הסטטיסטיקה ממוצע, מקסימום, חציון, מינימום, אחוזון, טווח, סטיית תקן וסכום זמינים.",
	"@@Focal-Statistics_Statistics-Type_tag26@@": "עבור ממוצע, חציון, אחוזון וסטיית תקן, הפלט הוא תמיד נקודה צפה.",
	"@@Focal-Statistics_Statistics-Type_tag27@@": "סוג הסטטיסטיקה שמהווה ברירת מחדל הוא ממוצע.",
	"@@Geometric_Constant-Z_tag0@@": "ציין גובה קבוע לשימוש עבור הפונקציה 'גיאומטריה'.",
	"@@Geometric_DEM_tag0@@": "ציין את ה-DEM לשימוש עבור הפונקציה 'גיאומטריה'. באפשרותך להשתמש ב-DEM שנכלל בסט נתוני המוזאיקה כסט נתוני רסטר או כסט נתוני מוזאיקה שהפלט שלו הוא DEM.",
	"@@Geometric_Geoid_tag0@@": "רוב הסטים של נתוני גובה, כגון USGS NED או ArcGIS Online World Elevation, הם גבהים אורתומטריים, כך שיש לבחור בתיקון Geoid לצורך תאימות עם RPCs של לוויין, שדורש גבהים אליפסואידיים. סמן את תיבת הסימון <strong>Geoid</strong> כדי להחיל את תיקון geoid ‏(EGM96) על ערכי z, אלא אם כן DEM כבר מיוחס לגבהים אליפסואידיים.",
	"@@Geometric_Method_tag0@@": "בחר את שיטת הגובה עור הפונקציה הגיאומטית:",
	"@@Geometric_Method_tag1@@": "השתמש בקבוע Z - ציין גובה קבוע לביצוע הפונקציה 'גיאומטריה'.",
	"@@Geometric_Method_tag2@@": "השתמש ב-DEM - ציין DEM לביצוע הפונקציה 'גיאומטריה'.",
	"@@Geometric_Raster_tag0@@": "רסטר הקלט.",
	"@@Geometric_Z-Factor_tag0@@": "מקדמים פולינומיאליים רציונליים (RPCs) של לוויין מותאמים לקנה מידה עבור סטים של נתוני גובה עם יחידות אנכיות במטרים. אם הגובה שלך משתמש ביחידות אנכיות שונות, הזן <strong>פקטור Z</strong> כדי להתאים את קנה המידה למטרים. לדוגמה, אם יחידות הגובה שלך הן ברגל, תשתמש בערך 0.3048 כדי להמיר את יחידות הגובה מרגל למטרים.",
	"@@Geometric_Z-Offset_tag0@@": "ערך הבסיס להוספה לערך הגובה ב-DEM. ניתן להשתמש בו לצורך היסט של ערכי גובה שלא מתחילים בגובה פני הים.",
	"@@Geometric_Tolerance_tag0@@": "ציין את השגיאה המקסימלית הקבילה בפונקציה הגיאומטרית, נתונה במספר פיקסלים. ברירת המחדל עבור סוג הרסטר NITF (NCDRD) היא שניים.",
	"@@Grayscale_Raster_tag0@@": "רסטר הקלט.",
	"@@Grayscale_Conversion-Parameters_tag0@@": "המשקלים עבור כל אחד מהערוצים שמרכיבים את רסטר הקלט.",
	"@@Greater-Than_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Greater-Than_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Greater-Than_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Greater-Than_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Greater-Than_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Greater-Than_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Greater-Than_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Greater-Than_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Greater-Than_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Greater-Than_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Greater-Than_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Greater-Than_Raster_tag0@@": "הקלט שנבדק לקביעה האם הוא גדול יותר מהקלט השני.",
	"@@Greater-Than_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Greater-Than_Raster2_tag0@@": "הקלט שבהשוואה אליו נבדק האם הקלט הראשון גדול ממנו.",
	"@@Greater-Than_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Greater-Than-Equal_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Greater-Than-Equal_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Greater-Than-Equal_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Greater-Than-Equal_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Greater-Than-Equal_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Greater-Than-Equal_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Greater-Than-Equal_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Greater-Than-Equal_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Greater-Than-Equal_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Greater-Than-Equal_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Greater-Than-Equal_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Greater-Than-Equal_Raster_tag0@@": "הקלט שנבדק לקביעה האם הוא שווה או גדול יותר מהקלט השני.",
	"@@Greater-Than-Equal_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Greater-Than-Equal_Raster2_tag0@@": "הקלט שבהשוואה אליו נבדק האם הקלט הראשון גדול ממנו או שווה לו.",
	"@@Greater-Than-Equal_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Heat-Index_Heat-Index-Units_tag0@@": "יחידת המדידה המשויכת לרסטר הפלט. יחידות פלט זמינות הן צלזיוס, פרנהייט וקלווין.",
	"@@Heat-Index_Relative-Humidity-Raster_tag0@@": "רסטר חד-ערוצי שבו ערכי פיקסל מייצגים לחות יחסית כערך אחוז בין 0 ל-100.",
	"@@Heat-Index_Temperature-Raster_tag0@@": "רסטר חד-ערוצי שבו ערכי פיקסל מייצגים את טמפרטורת האוויר הסובב.",
	"@@Heat-Index_Temperature-Units_tag0@@": "יחידת המדידה המשויכת לרסטר טמפרטורת הקלט. יחידות קלט זמינות הן צלזיוס, פרנהייט וקלווין.",
	"@@Hillshade_Altitude_tag0@@": "גובה הוא זווית הגובה של השמש מעל האופק ונע בין 0 ל-90 מעלות. ערך של 0 מעלות מציין שהשמש נמצאת בקו האופק, כלומר באותו מישור אופקי כמו מסגרת הייחוס. ערך של 90 מעלות מציין שהשמש נמצאת בקו ישר למעלה.",
	"@@Hillshade_Altitude_tag1@@": "פרמטר זה חוקי רק כאשר <strong>סוג הצללה</strong> הוא <strong>מסורתי</strong>. ברירת המחדל היא 45 מעלות מעל האופק.",
	"@@Hillshade_Azimuth_tag0@@": "אזימוט הוא המיקום היחסי של השמש לאורך האופק (במעלות). מיקום זה מצוין על ידי זווית השמש שנמדדת בכיוון השעון מהצפון המוחלט. אזימוט של 0 מעלות מציין צפון, 90 מעלות מציין מזרח, 180 מעלות מציין דרום ו-270 מעלות מציין מערב.",
	"@@Hillshade_Azimuth_tag1@@": "פרמטר זה חוקי רק כאשר <strong>סוג הצללה</strong> הוא <strong>מסורתי</strong>. ברירת המחדל היא 315 מעלות, שהם מצפון-מערב.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag0@@": "השימוש באפשרות זו מונע ארטיפקטים של דגימה מחדש אשר עלולים להתרחש לאורך הקצוות של הרסטר. הפיקסלים של הפלט לאורך הקצה של רסטר או לצד פיקסלים NoData יאוכלסו ב-NoData; לפיכך, מומלץ להשתמש בפרמטר זה רק עם סטים של נתוני גובה מוזאיקה שיש להם חפיפה. כאשר פיקסלים חופפים זמינים, האזורים של NoData יציגו את ערכי הפיקסלים החופפים במקום פיקסלים ריקים.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag1@@": "לא מסומן - דגימה מחדש ביליניארית תוחל באחידות לדגימה מחדש של ההצללה. השתמש באפשרות זו כאשר סט נתוני המוזאיקה שמכילים את נתוני רסטר הגובה הוא מסוג butt joined. זוהי ברירת המחדל.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag2@@": "מסומן - יעשה שימוש בדגימה מחדש ביליניארית בתוך ההצללה, למעט לאורך הקצוות של הרסטרים או לצד פיקסלים NoData. פיקסלים אלה יאוכלסו ב-NoData ויציגו את ערכי הפיקסל החופפים, ובכך יפחיתו את כל ההשפעות של קצה חד אשר עלולים לקרות אלמלא כן. השתמש באפשרות זו כאשר סט נתוני המוזאיקה שמכילים את נתוני רסטר הגובה מורכבים מאריחים או מפריטים חופפים.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag3@@": "התוצאות של הפונקציה יכולים להיות תלויי-נתונים. אם מתגלים ארטיפקטים של גבול אריח בפלט, בחר במצב החלופי של תיבת הסימון.",
	"@@Hillshade_Hillshade-Type_tag0@@": "שולט במקור האור של ההצללה:",
	"@@Hillshade_Hillshade-Type_tag1@@": "מסורתי - מחשב הצללה מכיוון אור יחיד. זוהי ברירת המחדל. ניתן להגדיר את <strong>אזימוט</strong> ו<strong>גובה</strong> כדי לשלוט במיקום מקור האור.",
	"@@Hillshade_Hillshade-Type_tag6@@": "רב-כיווני - משלב אור ממספר מקורות לייצוג ויזואליזציה מחוזקת של פני השטח.",
	"@@Hillshade_Pixel-Size-Factor_tag0@@": "'פקטור גודל פיקסל' מייצג שינויים בקנה המידה בשעה שהצופה מגדיל ומקטין אל תצוגת המפה. הוא שולט בשיעור שבו <strong>פקטור Z</strong> משתנה.",
	"@@Hillshade_Pixel-Size-Factor_tag3@@": "פרמטר זה חוקי רק כאשר סוג <strong>קנה מידה</strong> הוא <strong>מותאם</strong>. ערך ברירת המחדל הוא 0.024.",
	"@@Hillshade_Pixel-Size-Power_tag0@@": "'כוח גודל פיקסל' מייצג שינויים בגובה (או בקנה המידה) בשעה שהצופה מגדיל ומקטין אל תצוגת המפה. זוהי החזקה שמוחלת על מונח גודל הפיקסל במשוואה ששולטת בשיעור שבו <strong>פקטור Z</strong> משתנה למניעת אובדן משמעותי של תבליט.",
	"@@Hillshade_Pixel-Size-Power_tag3@@": "פרמטר זה חוקי רק כאשר סוג <strong>קנה מידה</strong> הוא <strong>מותאם</strong>. ערך ברירת המחדל הוא 0.664.",
	"@@Hillshade_Raster_tag0@@": "סט נתוני גובה הקלט.",
	"@@Hillshade_Scaling_tag0@@": "התוצאה המוצללת מותאמת לקנה המידה באופן דינמי על ידי כוונון פקטור Z תוך שימוש באחת משתי אפשרויות:",
	"@@Hillshade_Scaling_tag1@@": "מותאם - החלת התאמה לא-לינארית תוך שימוש בערכי ברירת המחדל של <strong>חזקה של גודל פיקסל</strong> ושל <strong>פקטור גודל פיקסל</strong>, להכללת מגוון רחב של שינויי גובה (קנה מידה) בשעה שהצופה מגדיל ומקטין אל התצוגה. הגדרת הפרמטר <strong>מותאם</strong> מומלצת בעת שימוש בסט נתונים כלל עולמי.",
	"@@Hillshade_Scaling_tag8@@": "ללא - לא מוחלת התאמת קנה מידה. זו האפשרות המתאימה ביותר לסט נתוני רסטר יחיד שמכסה אזור מקומי. אפשרות זו לא מומלצת לסטי נתונים כלל עולמיים עם שינויים גדולים בגובה או למפות מרובות קני-מידה, מכיוון שהיא תיצור תבליט פני שטח עם מעט מאוד שינויים בקני-מידה קטנים.",
	"@@Hillshade_Z-Factor_tag0@@": "פקטור Z הוא פקטור שינוי קנה מידה אשר משמש להמרת ערכי הגובה לשתי מטרות:",
	"@@Hillshade_Z-Factor_tag1@@": "להמרת יחידות הגובה (כגון מטרים או רגל) ליחידות הקואורדינטות האופקיות של סט הנתונים, שעשויות להיות רגל, מטרים או מעלות.",
	"@@Hillshade_Z-Factor_tag2@@": "להוספת הגזמה אנכית להשגת אפקט ויזואלי.",
	"@@Int_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Int_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Int_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Int_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Int_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Int_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Int_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Int_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Int_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Int_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Int_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Int_Raster_tag0@@": "רסטר הקלט שיומר למספר שלם.",
	"@@Interpolate-Irregular-Data_Cellsize_tag0@@": "גודל התא עבור רסטר הפלט יזוהה אוטומטית; אך באפשרותך לשנות זאת. בעוד שניתן לשנות את גודל התא, התיחום של סט נתוני הרסטר יישאר זהה.",
	"@@Interpolate-Irregular-Data_Input-Samples_tag0@@": "נתוני נקודות הקלט.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag0@@": "קיימות ארבע שיטות דגימה מחדש עבור פונקציה זו:",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag1@@": "<strong>מרחק הפוך משוקלל</strong> - קובע ערכי תא תוך שימוש בשילוב משוקלל לינארי של סט תאי דגימה או נקודות דגימה. המשקל הוא פונקציה של היפוך המרחק מהנקודות או התאים הידועים.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag3@@": "<strong>Tinning לינארי</strong> - משתמש ברשת לא סדירה משולשת מנקודות המרכז של כל תא ברסטר הלא סדיר לביצוע אינטרפולציה של משטח שלאחר מכן מומר לרסטר סדיר.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag5@@": "<strong>שכנים טבעיים</strong> - מוצא את ערכת המשנה של דגימות קלט לנקודת שאילתה ומחיל משקלים עליהן על בסיס אזורים פרופורציונליים לאינטרפולציה של ערך.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag7@@": "<strong>שכן קרוב ביותר</strong> - מחשב ערך פיקסל תוך שימוש בפיקסל הקרוב ביותר. אם לא קיימים פיקסלים של מקור, לא ניתן ליצור פיקסל חדש בפלט. זוהי ברירת המחדל.",
	"@@Interpolate-Irregular-Data_Search-Radius_tag0@@": "מגדיר את מספר הפיקסלים שיש לכלול עבור שיטת הדגימה שנבחרה. ערך ברירת המחדל הוא ${3} פיקסלים.",
	"@@Interpolate-Irregular-Data_Value-Field_tag0@@": "אם בחרת קבוצת ישויות נקודה בתור הקלט, תצטרך לזהות את השדה בטבלת המאפיינים עם הערך של הנקודות",
	"@@Is-Null_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Is-Null_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Is-Null_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Is-Null_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Is-Null_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Is-Null_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Is-Null_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Is-Null_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Is-Null_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Is-Null_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Is-Null_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Is-Null_Raster_tag0@@": "רסטר הקלט שנבדק לזיהוי התאים שהם ${NoData}‏ (null).",
	"@@Is-Null_Raster_tag1@@": "הקלט יכול להיות סוג נקודה צפה או מספר שלם.",
	"@@Key-Metadata_Band-Names_tag0@@": "הדבר משמש לעקיפת שמות הערוצים של רסטר. זוהי מחרוזת מופרדת בפסיקים שמייצגת את שמות הערוצים המעודכנים.",
	"@@Key-Metadata_Band-Names_tag1@@": "פרמטר זה הוא אופציונלי.",
	"@@Key-Metadata_Metadata-JSON_tag0@@": "מטה-דאטה של מפתח שיוכנסו לרסטר היוצא שמתואר כמחרוזת JSON אשר מייצגת אוסף של זוגות מפתח-ערך. להלן דוגמה למחרוזת JSON אשר יכולה לשמש כקלט לפונקציה זו. כל הקלטים עבור פרמטר יהיו בתבנית זו.",
	"@@Key-Metadata_Metadata-JSON_tag1@@": "מחרוזת JSON שמייצגת מטה-דאטה של מפתח",
	"@@Key-Metadata_Metadata-JSON_tag2@@": "{ \"CloudCover\": 4, \"BandProperties\":[ { \"BandName\": \"Blue\", \"WavelengthMin\": 445, \"WavelengthMax\": 516 }, { \"BandName\": \"Green\", \"WavelengthMin\": 506, \"WavelengthMax\": 595 }, ]}",
	"@@Key-Metadata_Property-Name_tag0@@": "שם מאפיין המפתח ברמת סט נתונים שיש לעקוף.",
	"@@Key-Metadata_Raster_tag0@@": "הרסטר או סט נתוני המוזאיקה שמכילים את המטה-דאטה של מפתח שברצונך להכניס או לעקוף.",
	"@@Key-Metadata_Value_tag0@@": "הערך העוקף של מאפיין המפתח ברמת סט נתונים שברצונך להגדיר.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag0@@": "פרמטר זה מדמה את העלייה במאמץ להתגבר על עלויות כאשר העלות המצטברת עולה. הוא משמש לדיגום עייפות של הנוסע. העלות המצטברת העולה להשגת תא מוכפלת בשיעור ההתנגדות ומתווספת לעלות למעבר אל התא הבא.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag1@@": "זוהי גרסה מתוקנת של נוסחת שיעור ריבית דריבית אשר משמשת לחישוב העלות בפועל של מעבר דרך תא. עם שערך שיעור ההתנגדות עולה, היא מעלה את העלות של התאים שבהם נעשה ביקור בהמשך. ככל ששיעור ההתנגדות גבוה יותר, כך עולה העלות להשיג את התא הבא, אשר מורכבת עבור כל תנועה עוקבת. מכיוון ששיעור ההתנגדות דומה לשיעור מרוכב ובדרך כלל ערכי העלות המצטברת גדולים מאוד, מומלץ להשתמש בשיעורי התנגדות קטנים, כגון 0.005 או אפילו פחות מכך, בהתאם לערכי העלות המצטברת.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag2@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Least-Cost-Path_Capacity_tag0@@": "מגדיר את קיבולת העלות עבור הנוסע עבור מקור. תחשיבי העלות ממשיכים עבור כל מקור עד שמושגת הקיבולת שצוינה.",
	"@@Least-Cost-Path_Capacity_tag1@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Least-Cost-Path_Cost-Raster_tag0@@": "רסטר קלט נדרש שמגדיר את העלות או העכבה לזוז פלאנימטרית על פני כל תא. הערך בכל מיקום תא מייצג את מרחק העלות-ליחידה עבור תזוזה על פני התא. כל ערך מיקום תא מוכפל ברזולוציית התא, תוך פיצוי גם עבור תנועה אלכסונית, לקבלת העלות הכוללת של מעבר על פני התא.",
	"@@Least-Cost-Path_Cost-Raster_tag1@@": "הערכים של <strong>רסטר העלויות</strong> יכולים להיות מספר שלם או נקודה צפה, אבל הם לא יכולים להיות מספר שלילי או אפס.",
	"@@Least-Cost-Path_Destination-Field_tag0@@": "השדה אשר משמש להשגת ערכים עבור מיקומי היעד.",
	"@@Least-Cost-Path_Destination-Raster_tag0@@": "שכבת רסטר קלט נדרשת שמזהה את הפיקסלים שמהם נקבע הנתיב עם העלות הנמוכה ביותר אל המקור עם העלות הנמוכה ביותר. קלט זה מורכב מפיקסלים בעלי ערכים חוקיים, ולפיקסלים הנותרים חובה להקצות ${NoData}. ערכי 0 הם חוקיים.",
	"@@Least-Cost-Path_Maximum-Distance_tag0@@": "הסף שאותו ערכי העלות המצטברת לא יכולים לעבור. אם מרחק עלות מצטברת חורג מעבר לערך זה, ערך הפלט עבור מיקום התא יהיה ${NoData}. המרחק המקסימלי מגדיר את התיחום שעבורו מרחקי עלות מצטברת מחושבים. מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag0@@": "פרמטר זה מאפשר לשלוט על אופן הנסיעה או העוצמה במקור. ככל שהמכפיל גדול יותר, כך עולה העלות לזוז על פני כל תא.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag1@@": "הערכים חייבים להיות גדולים מאפס. ערך ברירת המחדל הוא 1.",
	"@@Least-Cost-Path_Path-Type_tag0@@": "מילת מפתח שמגדירה את האופן שבו הערכים והאזורים בנתוני היעד של הקלט יפורשו בחישובי עלויות הנתיבים:",
	"@@Least-Cost-Path_Path-Type_tag1@@": "<strong>היחיד הטוב ביותר</strong> - עבור כל הפיקסלים בנתוני היעד של הקלט, הנתיב עם העלות הנמוכה ביותר נגזר מפיקסל עם מינימום נתיבים עם העלות הנמוכה ביותר אל תאי המקור.",
	"@@Least-Cost-Path_Path-Type_tag3@@": "<strong>כל תא</strong> - נתיב עם העלות הנמוכה ביותר נקבע עבור כל פיקסל עם ערכים חוקיים בנתוני היעד של הקלט, ונשמר ברסטר הפלט. כל תא של נתוני יעד הקלט מטופל בנפרד, ונתיב עם העלות הנמוכה ביותר נקבע עבור כל אחד מתא.",
	"@@Least-Cost-Path_Path-Type_tag5@@": "<strong>כל אזור</strong> - נתיב עם העלות הנמוכה ביותר נקבע עבור כל אזור בנתוני היעד של הקלט ונשמר ברסטר הפלט. הנתיב עם העלות הנמוכה ביותר עבור כל אזור מתחיל בפיקסל עם שקלול המרחק בעל העלות הנמוכה ביותר באזור.",
	"@@Least-Cost-Path_Source-Raster_tag0@@": "זהו רסטר קלט נדרש שמזהה את התאים או המיקומים שמהם מרחק העלות המצטברת הקטן ביותר עבור כל מיקום תא פלט מחושב.",
	"@@Least-Cost-Path_Start-Cost_tag0@@": "העלות ההתחלתית שממנה יש להתחיל את חישובי העלות. פרמטר זה מאפשר לציין עלות קבועה שמשויכת למקור. במקום להתחיל בעלות 0, אלגוריתם העלות יתחיל בערך שצוין.",
	"@@Least-Cost-Path_Start-Cost_tag1@@": "הערך חייב להיות 0 ומעלה. ערך ברירת המחדל הוא 0.",
	"@@Least-Cost-Path_Travel-Direction_tag0@@": "מגדיר את כיוון הנוסע בעת החלת שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור.",
	"@@Least-Cost-Path_Travel-Direction_tag1@@": "<strong>ממקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל ממקור הקלט תוך התקדמות החוצה לתאים שאינם מקור. זוהי ברירת המחדל.",
	"@@Least-Cost-Path_Travel-Direction_tag3@@": "<strong>למקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל מכל תא שאינו מקור תוך התקדמות חזרה למקור הקלט.",
	"@@Least-Cost-Path_Travel-Direction_tag5@@": "ציין את מילת המפתח <strong>ממקור</strong> או <strong>למקור</strong>, אשר תוחל על כל המקורות, או ציין שדה ב<strong>רסטר המקור</strong> שמכיל את מילות המפתח לזיהוי כיוון הנסיעה עבור כל מקור. שדה זה חייב להכיל את החרוזת ${FROM_SOURCE} או ${TO_SOURCE}.",
	"@@Less-Than_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Less-Than_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Less-Than_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Less-Than_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Less-Than_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Less-Than_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Less-Than_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Less-Than_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Less-Than_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Less-Than_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Less-Than_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Less-Than_Raster_tag0@@": "הקלט שנבדק לקביעה האם הוא קטן יותר מהקלט השני.",
	"@@Less-Than_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Less-Than_Raster2_tag0@@": "הקלט שבהשוואה אליו נבדק האם הקלט הראשון קטן ממנו.",
	"@@Less-Than_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Less-Than-Equal_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Less-Than-Equal_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Less-Than-Equal_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Less-Than-Equal_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Less-Than-Equal_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Less-Than-Equal_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Less-Than-Equal_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Less-Than-Equal_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Less-Than-Equal_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Less-Than-Equal_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Less-Than-Equal_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Less-Than-Equal_Raster_tag0@@": "הקלט שנבדק לקביעה האם הוא שווה או קטן יותר מהקלט השני.",
	"@@Less-Than-Equal_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Less-Than-Equal_Raster2_tag0@@": "הקלט שבהשוואה אליו נבדק האם הקלט הראשון קטן ממנו או שווה לו.",
	"@@Less-Than-Equal_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Ln_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Ln_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Ln_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Ln_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Ln_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Ln_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Ln_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Ln_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Ln_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Ln_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Ln_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Ln_Raster_tag0@@": "ערכי הקלט שעבורם יש למצוא את הלוגריתם הטבעי (Ln).",
	"@@Log10_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Log10_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Log10_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Log10_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Log10_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Log10_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Log10_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Log10_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Log10_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Log10_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Log10_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Log10_Raster_tag0@@": "ערכי הקלט שעבורם יש למצוא את הלוגריתם בסיס 10.",
	"@@Log2_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Log2_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Log2_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Log2_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Log2_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Log2_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Log2_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Log2_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Log2_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Log2_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Log2_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Log2_Raster_tag0@@": "ערכי הקלט שעבורם יש למצוא את הלוגריתם בסיס 2.",
	"@@Lookup_Field_tag0@@": "שדה שמכיל את הערכים הרצויים עבור הרסטר החדש.",
	"@@Lookup_Field_tag1@@": "חייב להיות מסוג נומרי.",
	"@@Lookup_Raster_tag0@@": "רסטר הקלט שמכיל שדה שממנו יש ליצור רסטר חדש.",
	"@@Lookup_Raster_tag1@@": "הוא יכול להיות סוג נקודה צפה או מספר שלם.",
	"@@Mask_Included-Ranges_tag0@@": "ניתן לציין את הטווחים הכלולים עבור כל ערוץ על ידי ציון ערך מינמום ומקסימום; כל ערך מחוץ לטווח יוחזר כ-${NoData}. פיקסל כלול אם ערך הפיקסל נופל בתוך אחד מהטווחים שצוינו. לפיכך, אם לערוץ 1 יש טווח של 5-10 ולערוץ 2 יש טווח של 15-20, וערך הפיקסל עבור ערוץ 1 הוא 8, פיקסל זה לא ימוסך.",
	"@@Mask_NoData-Interpretation_tag0@@": "מתייחס לאופן שבו <strong>ערכי ${NoData}</strong> ישפיע על תמונת הפלט.",
	"@@Mask_NoData-Interpretation_tag3@@": "באפשרותך לבחור מבין שתי האפשרויות הבאות:",
	"@@Mask_NoData-Interpretation_tag4@@": "<strong>התאם הכול</strong> - ערכי ${NoData} שאתה מציין עבור כל ערוץ חייבים להתרחש באותו פיקסל כדי שתמונת הפלט תכיל את פיקסל ${NoData}.",
	"@@Mask_NoData-Interpretation_tag6@@": "<strong>התאם כל דבר</strong> - אם ערך ${NoData} שאתה מתרחש עבור פיקסל בערוץ שצוין, אותו פיקסל בתמונת הפלט יהיה ${NoData}. זוהי ברירת המחדל.",
	"@@Mask_NoData-Values_tag0@@": "ניתן לציין ערכי NoData עבור כל ערוץ. באפשרותך לציין יותר מערך אחד על ידי הזנת רשימה מופרדת ברווחים.",
	"@@Mask_Raster_tag0@@": "רסטר הקלט.",
	"@@Minus_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Minus_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Minus_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Minus_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Minus_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Minus_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Minus_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Minus_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Minus_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Minus_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Minus_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Minus_Raster_tag0@@": "הקלט ממנו יש להפחית את הערכים של הקלט השני.",
	"@@Minus_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Minus_Raster2_tag0@@": "ערכי הקלט להפחתה מהערכים של הקלט הראשון.",
	"@@Minus_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@ML-Classify_Raster_tag0@@": "רסטר הקלט לסיווג תוך שימוש בלוגריתם הסיווג של הדומות המרבית.",
	"@@ML-Classify_Signature-File-or-URL_tag0@@": "קובץ החתימה ${.gsg}.",
	"@@Mod_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Mod_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Mod_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Mod_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Mod_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Mod_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Mod_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Mod_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Mod_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Mod_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Mod_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Mod_Raster_tag0@@": "קלט המונה.",
	"@@Mod_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Mod_Raster2_tag0@@": "קלט המכנה.",
	"@@Mod_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Mosaic-Rasters_Operation_tag0@@": "פתור כל התנגשות כאשר בידיך חלקים חופפים משתי תמונות או יותר. האפשרויות כוללות את:",
	"@@Mosaic-Rasters_Operation_tag1@@": "<strong>מיזוג</strong> - חישוב והצגה של ממוצע של הפיקסלים החופפים על ידי נתינת משקל גדול יותר לפיקסלים שקרובים יותר לתמונות שכנות, כך שהפלט הוא תמונה חלקה יותר. זוהי ברירת המחדל.",
	"@@Mosaic-Rasters_Operation_tag3@@": "<strong>ראשון</strong> - הצגת הפיקסלים מהתמונה הראשונה ברשימה של תמונות שחופפות אזור נתון.",
	"@@Mosaic-Rasters_Operation_tag5@@": "<strong>אחרון</strong> - הצגת הפיקסלים מהתמונה האחרונה ברשימה של תמונות שחופפות אזור נתון.",
	"@@Mosaic-Rasters_Operation_tag7@@": "<strong>מקס</strong> - הצגת הפיקסל בעל הערך הגבוה ביותר מכל השכבות החופפות. באפשרות זו, אין ודאות שיוצגו הפיקסלים של תמונה אחת בלבד באזור החפיפה, אלא במקום זה שילוב של כל השכבות הפוטנציאליות.",
	"@@Mosaic-Rasters_Operation_tag9@@": "<strong>ממוצע</strong> - חישוב והצגה של ממוצע של הפיקסלים החופפים.",
	"@@Mosaic-Rasters_Operation_tag11@@": "<strong>מינ</strong> - הצגת הפיקסל בעל הערך הנמוך ביותר מכל השכבות החופפות. באפשרות זו, אין ודאות שיוצגו הפיקסלים של תמונה אחת בלבד באזור החפיפה, אלא במקום זה שילוב של כל השכבות הפוטנציאליות.",
	"@@Mosaic-Rasters_Rasters_tag0@@": "בחר את הרסטרים שמהם ברצונך ליצור מוזאיקה יחד ליצירת תמונה אחת.",
	"@@NDVI_Infrared-Band-ID_tag0@@": "מציין את מזהה הערוץ שמייצג את החלק הקרוב לאינפרא-אדום של הספקטרום האלקטרומגנטי.",
	"@@NDVI_Raster_tag0@@": "הרסטר המולטי-ספקטראלי של הקלט.",
	"@@NDVI_Scientific-Output_tag0@@": "ערכי הפלט ינועו בין ‎-1.0 ל-1.0, אשר משמשים ביישומים מדעיים רבים.",
	"@@NDVI_Visible-Band-ID_tag0@@": "מציין את מזהה הערוץ שמייצג את החלק האדום של הספקטרום האלקטרומגנטי.",
	"@@NDVI-Colorized_Color-Ramp_tag0@@": "בחר סכמת צבעים מוגדרת מראש מהרשימה הנפתחת.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag0@@": "בחר איזה סוג של סכמת הצבעים יצבע את פלט NDVI:",
	"@@NDVI-Colorized_Color-Scheme-Type_tag1@@": "מפת צבעים - בחר מפת צבעים מוגדרת מראש מהרשימה הנפתחת. לחלופין, באפשרותך לדפדף לקובץ מפת צבעים קבועה שקיימת.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag2@@": "מדרג צבעים - בחר סכמת צבעים מוגדרת מראש מהרשימה הנפתחת.",
	"@@NDVI-Colorized_Colormap_tag0@@": "בחר מפת צבעים מוגדרת מראש מהרשימה הנפתחת. לחלופין, באפשרותך לדפדף לקובץ מפת צבעים קיים.",
	"@@NDVI-Colorized_Infrared-Band-ID_tag0@@": "מציין את מזהה הערוץ שמייצג את החלק הקרוב לאינפרא-אדום של הספקטרום האלקטרומגנטי.",
	"@@NDVI-Colorized_Raster_tag0@@": "הרסטר המולטי-ספקטראלי של הקלט.",
	"@@NDVI-Colorized_Scientific-Output_tag0@@": "ערכי הפלט ינועו בין ‎-1.0 ל-1.0, אשר משמשים ביישומים מדעיים רבים.",
	"@@NDVI-Colorized_Visible-Band-ID_tag0@@": "מציין את מזהה הערוץ שמייצג את החלק האדום של הספקטרום האלקטרומגנטי.",
	"@@Negate_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Negate_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Negate_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Negate_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Negate_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Negate_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Negate_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Negate_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Negate_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Negate_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Negate_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Negate_Raster_tag0@@": "רסטר הקלט שיושלל (יוכפל ב: ‎-1).",
	"@@Nibble_Mask-Raster_tag0@@": "רסטר הקלט הנדרש אשר משמש כמסיכה.",
	"@@Nibble_Mask-Raster_tag1@@": "תאים עם הערך NoData יכורסמו בקלט <strong>רסטר</strong>.",
	"@@Nibble_Mask-Raster_tag4@@": "רסטר המסיכה יכול להיות סוג נקודה צפה או מספר שלם.",
	"@@Nibble_Nibble-NoData-cells_tag0@@": "מגדיר אם תאי NoData ברסטר הקלט יישארו NoData ברסטר הפלט.",
	"@@Nibble_Nibble-NoData-cells_tag1@@": "<strong>לא</strong> - מציין שתאי NoData ברסטר הקלט יישארו NoData ברסטר הפלט. זוהי ברירת המחדל.",
	"@@Nibble_Nibble-NoData-cells_tag3@@": "<strong>כן</strong> - מציין שניתן לכרסם תאי NoData ברסטר הקלט ובתוך המסיכה לתוך ערכי תא פלט חוקיים.",
	"@@Nibble_Raster_tag0@@": "רסטר הקלט הנדרש אשר יכורסם.",
	"@@Nibble_Raster_tag1@@": "רסטר הקלט יכול להיות סוג נקודה צפה או מספר שלם.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag0@@": "מגדיר האם ניתן לכרסם ערכי ${NoData} ברסטר הקלט לתוך האזור שמוגדר על ידי רסטר המסיכה.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag1@@": "<strong>כן</strong> - מציין שערך השכן הקרוב ביותר ישמש, בין אם הוא ${NoData} או ערך נתונים אחר ברסטר הקלט. מגדיר האם ניתן לכרסם ערכי ${NoData} ברסטר הקלט לתוך האזורים שמוגדרים ברסטר המסיכה אם הם השכן הקרוב ביותר. זוהי ברירת המחדל.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag3@@": "<strong>לא</strong> - מציין שניתן לכרסם רק ערכי נתונים לתוך אזורים שהוגדרו ברסטר המסיכה. לא ניתן לכרסם ערכי ${NoData} ברסטר הקלט לתוך אזורים שמוגדרים ב רסטר המסיכה, גם אם הם השכן הקרוב ביותר.",
	"@@Nibble_Zone-Raster_tag0@@": "רסטר אזור הקלט.",
	"@@Nibble_Zone-Raster_tag1@@": "אזור הוא כל התאים ברסטר שיש להם אותו ערך, בין אם הם רציפים או לא. שכבת אזור הקלט מגדירה את הצורה, הערכים והמיקומים של האזורים. אזור הקלט יכול להיות סוג נקודה צפה או מספר שלם.",
	"@@Not-Equal_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Not-Equal_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Not-Equal_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Not-Equal_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Not-Equal_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Not-Equal_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Not-Equal_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Not-Equal_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Not-Equal_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Not-Equal_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Not-Equal_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Not-Equal_Raster_tag0@@": "הקלט אשר ישמש להשוואה עבור אי-שוויון על ידי הקלט השני.",
	"@@Not-Equal_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Not-Equal_Raster2_tag0@@": "הקלט אשר ישמש להשוואה עבור אי-שוויון לקלט השני.",
	"@@Not-Equal_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Pansharpening_Multispectral_tag0@@": "הרסטר המולטי-ספקטראלי שברצונך לחדד בעזרת הערוץ הפנכרומטי.",
	"@@Pansharpening_Panchromatic_tag0@@": "הרסטר החד-ערוצי בעל הרזולוציה הגבוהה אשר ישמש לחדד בהזזה את הרסטר המוליטי-ספקטראלי בעל הרזולוציה הנמוכה.",
	"@@Pansharpening_Pansharpening-Type_tag0@@": "בחר באלגוריתם החידוד בהזזה שבו ברצונך להשתמש.",
	"@@Pansharpening_Pansharpening-Type_tag1@@": "Brovey - משתמש באלגוריתם Brovey על בסיס מידול ספקטראלי עבור מיזוג נתונים.",
	"@@Pansharpening_Pansharpening-Type_tag2@@": "Esri - משתמש באלגוריתם Esri על בסיס מידול ספקטראלי עבור מיזוג נתונים.",
	"@@Pansharpening_Pansharpening-Type_tag3@@": "Gram-Schmidt - שימוש באלגוריתם החידוד הספקטראלי Gram-Schmidt לחידוד נתונים מולטי-ספקטראליים.",
	"@@Pansharpening_Pansharpening-Type_tag4@@": "IHS - משתמש במרחב הצבעים עוצמה, גוון ורוויה עבור מיזוג נתונים.",
	"@@Pansharpening_Pansharpening-Type_tag5@@": "ממוצע - משתמש בערך ברירת המחדל בין הערכים אדום, ירוק וכחול ובערך הפיקסל הפנכרומטי.",
	"@@Pansharpening_Weights_tag0@@": "מציין את המשקלים של הערוצים אדום, ירוק, כחול ואינפרא-אדום. כל הערכים חייבים להיות בטווח של 0 עד 1.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "פרמטר זה מדמה את העלייה במאמץ להתגבר על עלויות כאשר העלות המצטברת עולה. הוא משמש לדיגום עייפות של הנוסע. העלות המצטברת העולה להשגת תא מוכפלת בשיעור ההתנגדות ומתווספת לעלות למעבר אל התא הבא.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "זוהי גרסה מתוקנת של נוסחת שיעור ריבית דריבית אשר משמשת לחישוב העלות בפועל של מעבר דרך תא. עם שערך שיעור ההתנגדות עולה, היא מעלה את העלות של התאים שבהם נעשה ביקור בהמשך. ככל ששיעור ההתנגדות גבוה יותר, כך עולה העלות להשיג את התא הבא, אשר מורכבת עבור כל תנועה עוקבת. מכיוון ששיעור ההתנגדות דומה לשיעור מרוכב ובדרך כלל ערכי העלות המצטברת גדולים מאוד, מומלץ להשתמש בשיעורי התנגדות קטנים, כגון 0.005 או אפילו פחות מכך, בהתאם לערכי העלות המצטברת.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Path-Distance_Capacity_tag0@@": "מגדיר את קיבולת העלות עבור הנוסע עבור מקור. תחשיבי העלות ממשיכים עבור כל מקור עד שמושגת הקיבולת שצוינה.",
	"@@Path-Distance_Capacity_tag1@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Path-Distance_Cost-Raster_tag0@@": "רסטר קלט נדרש שמגדיר את העלות או העכבה לזוז פלאנימטרית על פני כל תא. הערך בכל מיקום תא מייצג את מרחק העלות-ליחידה עבור תזוזה על פני התא. כל ערך מיקום תא מוכפל ברזולוציית התא, תוך פיצוי גם עבור תנועה אלכסונית, לקבלת העלות הכוללת של מעבר על פני התא.",
	"@@Path-Distance_Cost-Raster_tag1@@": "הערכים של <strong>רסטר העלויות</strong> יכולים להיות מספר שלם או נקודה צפה, אבל הם לא יכולים להיות מספר שלילי או אפס.",
	"@@Path-Distance_horizontalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האופקי וזווית המעבר היחסית האופקית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: HF ו-HRMA. HF הוא הקיצור של פקטור אופקי, אשר מגדיר את הקושי האופקי לעבור מתא אחד לתא הבא. HRMA הוא הקיצור של זווית מעבר יחסית אופקית, אשר מזהה את הזווית בין הכיוון האופקי מתא לכיוון התנועה.</p><p><strong>הסוגים של פקטור אנכי</strong>כוללים את הבאים:</p><ul><li><strong>בינארי</strong> - מציין שה-HRMA הוא פחות מזווית החיתוך, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לפנים</strong> - קובע שרק תנועה קדימה מותרת. ה-HRMA חייב להיות שווה או גדול מ-0 ופחות מ-90 מעלות (0 &lt;= ‏HRMA &lt;‏ 90). אם ה-HRMA גודל מ-0 ופחות מ-45 מעלות, ה-HF עבור התא מוגדר לערך שקשור לפקטור אפס. אם ה-HRMA שווה או גדול מ-45 מעלות, נעשה שימוש בערך של משנה ערך הצד. ה-HF עבור כל ערך HRMA השווה או גדול מ-90 מעלות מוגדר כאינסוף.</li><li><strong>לינארי</strong> - מציין שה-HF הוא פונקציה לינארית של ה-HRMA.</li><li><strong>לינארי הפוך</strong> - מציין שה-HF הוא פונקציה לינארית הפוכה של ה-HRMA.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האופקי אשר משמש לקביעת ערכי HF.</li></ul><p>משני ערך לפקטורים האופקיים כוללים:</p><ul><li><strong>פקטור אפס</strong> - הפקטור האופקי אשר ישמש כאשר HRMA הוא אפס. פקטור זה ממקם את חיתוך y עבור כל אחת מפונקציות הפקטור האופקי.</li><li><strong>זווית חיתוך</strong> - מגדיר את זווית HRMA שמעבר לה HF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובע את השיפוע של הקו הישר אשר משמש עם מילות המפתח פקטור אופקי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>ערך צד</strong> - קובע את ה-HF כאשר ה-HRMA שווה או גדול מ-45 מעלות ופחות מ-90 מעלות כאשר צוינה מילת המפתח של פקטור אופקי<strong>לפנים</strong>.</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה המגדירה את ה-HF.</li></ul>",
	"@@Path-Distance_Horizontal-Raster_tag0@@": "רסטר שמגדיר את הכיוון האופקי בכל תא.",
	"@@Path-Distance_Horizontal-Raster_tag1@@": "הערכים ברסטר חייבים להיות מספרים שלמים בטווח שבין 0 ל-360, כאשר 0 מעלות הוא צפון, או לכיוון החלק העליון של המסך, ועולה בכיוון השעון. לאזורים שטוחים יש להקצות ערך ‎-1. הערכים בכל מיקום ישמשו בשילוב עם <strong>הפקטור האופקי</strong> לקביעת העלות האופקית שמצטברת בעת מעבר מתא אחד לסמוכים אליו.",
	"@@Path-Distance_Maximum-Distance_tag0@@": "הסף שאותו ערכי העלות המצטברת לא יכולים לעבור. אם מרחק עלות מצטברת חורג מעבר לערך זה, ערך הפלט עבור מיקום התא יהיה NoData. המרחק המקסימלי מגדיר את התיחום שעבורו מרחקי עלות מצטברת מחושבים. מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "מכפיל שיחול על ערכי העלות.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "פרמטר זה מאפשר לשלוט על אופן הנסיעה או העוצמה במקור. ככל שהמכפיל גדול יותר, כך עולה העלות לזוז על פני כל תא.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "הערכים חייבים להיות גדולים מאפס. ערך ברירת המחדל הוא 1.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Path-Distance_Source-Raster_tag0@@": "רסטר הקלט הנדרש של מיקומי מקור.",
	"@@Path-Distance_Source-Raster_tag1@@": "זהו רסטר שמזהה את התאים או המיקומים שמהם מרחק העלות המצטברת הקטן ביותר עבור כל מיקום תא פלט מחושב.",
	"@@Path-Distance_Source-Raster_tag2@@": "זה יכול להיות סוג מספר שלם או נקודה צפה.",
	"@@Path-Distance_Start-Cost_tag0@@": "העלות ההתחלתית שממנה יש להתחיל את חישובי העלות. פרמטר זה מאפשר לציין עלות קבועה שמשויכת למקור. במקום להתחיל בעלות 0, אלגוריתם העלות יתחיל בערך שצוין.",
	"@@Path-Distance_Start-Cost_tag1@@": "הערך חייב להיות 0 ומעלה. ערך ברירת המחדל הוא 0.",
	"@@Path-Distance_Surface-Raster_tag0@@": "רסטר שמגדיר את ערכי הגובה בכל מיקום תא.",
	"@@Path-Distance_Surface-Raster_tag1@@": "הערכים משמשים לחישוב כיסוי מרחק פני השטח בפועל בעת מעבר בין תאים.",
	"@@Path-Distance_Travel-Direction_tag0@@": "מגדיר את כיוון הנוסע בעת החלת שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור.",
	"@@Path-Distance_Travel-Direction_tag1@@": "<strong>ממקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל ממקור הקלט תוך התקדמות החוצה לתאים שאינם מקור. זוהי ברירת המחדל.",
	"@@Path-Distance_Travel-Direction_tag3@@": "<strong>למקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל מכל תא שאינו מקור תוך התקדמות חזרה למקור הקלט.",
	"@@Path-Distance_Travel-Direction_tag5@@": "ציין את מילת המפתח <strong>ממקור</strong> או <strong>למקור</strong>, אשר תוחל על כל המקורות, או ציין שדה ב<strong>רסטר המקור</strong> שמכיל את מילות המפתח לזיהוי כיוון הנסיעה עבור כל מקור. שדה זה חייב להכיל את החרוזת ${FROM_SOURCE} או ${TO_SOURCE}.",
	"@@Path-Distance_verticalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: VF ו-VRMA. VF הוא הקיצור של פקטור אנכי, אשר מגדיר את הקושי האנכי לעבור מתא אחד לתא הבא. VRMA הוא הקיצור של זווית מעבר יחסית אנכית, אשר מזהה את זווית השיפוע בין תא FROM, או תא העיבוד, לתא TO.</p><p><strong>סוגי פקטור אנכי</strong>כוללים:</p><ul><li><strong>בינארי</strong> - מציין שה-VRMA הוא יותר מזווית החיתוך הנמוכה ופחות מזווית החיתוך הגבוהה, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לינארי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA.</li><li><strong>לינארי סימטרי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>לינארי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA.</li><li><strong>לינארי סימטרי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>Cos</strong> - מזהה את ה-VF כפונקציה מבוססת קוסינוס של ה-VRMA.</li><li><strong>Sec</strong> - מזהה את ה-VF כפונקציה מבוססת סקנט של ה-VRMA.</li><li><strong>Cos-Sec</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>Sec-Cos</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האנכי אשר משמש לקביעת ערכי VF.</li></ul><p>משני ערך למילות המפתח האנכיות כוללים:</p><ul><li><strong>פקטור אפס</strong> - קובע את הפקטור האנכי אשר ישמש כאשר VRMA הוא אפס. פקטור זה ממקם את חיתוך y של הפונקציה שצוינה. בהגדרה, פקטור אפס אינו ישים לאף אחת מהפונקציות הטריגונומטריות האנכיות (COS‏, SEC‏, COS-SEC‏ או SEC-COS). חיתוך y מוגדר על ידי פונקציות אלה.</li><li><strong>זווית חיתוך נמוכה</strong> - מגדירה את זווית VRMA שמתחת לה VF יוגדר לאינסוף.</li><li><strong>זווית חיתוך גבוהה</strong> - מגדירה את זווית VRMA שמעבר לה VF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובעת את השיפוע של הקו הישר אשר משמש עם מילות המפתח של פקטור אנכי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה שמגדירה את ה-VF.</li></ul>",
	"@@Path-Distance_Vertical-Raster_tag0@@": "‏מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (VRMA).",
	"@@Path-Distance_Vertical-Raster_tag1@@": "הערכים משמשים לחישוב השיפוע אשר משמש לזיהוי הפקטור האנכי שנוצר בעת מעבר מתא אחד לתא הבא.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "פרמטר זה מדמה את העלייה במאמץ להתגבר על עלויות כאשר העלות המצטברת עולה. הוא משמש לדיגום עייפות של הנוסע. העלות המצטברת העולה להשגת תא מוכפלת בשיעור ההתנגדות ומתווספת לעלות למעבר אל התא הבא.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "זוהי גרסה מתוקנת של נוסחת שיעור ריבית דריבית אשר משמשת לחישוב העלות בפועל של מעבר דרך תא. עם שערך שיעור ההתנגדות עולה, היא מעלה את העלות של התאים שבהם נעשה ביקור בהמשך. ככל ששיעור ההתנגדות גבוה יותר, כך עולה העלות להשיג את התא הבא, אשר מורכבת עבור כל תנועה עוקבת. מכיוון ששיעור ההתנגדות דומה לשיעור מרוכב ובדרך כלל ערכי העלות המצטברת גדולים מאוד, מומלץ להשתמש בשיעורי התנגדות קטנים, כגון 0.005 או אפילו פחות מכך, בהתאם לערכי העלות המצטברת.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Path-Distance-Allocation_Capacity_tag0@@": "מגדיר את קיבולת העלות עבור הנוסע עבור מקור. תחשיבי העלות ממשיכים עבור כל מקור עד שמושגת הקיבולת שצוינה.",
	"@@Path-Distance-Allocation_Capacity_tag1@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Path-Distance-Allocation_Cost-Raster_tag0@@": "רסטר קלט נדרש שמגדיר את העלות או העכבה לזוז פלאנימטרית על פני כל תא. הערך בכל מיקום תא מייצג את מרחק העלות-ליחידה עבור תזוזה על פני התא. כל ערך מיקום תא מוכפל ברזולוציית התא, תוך פיצוי גם עבור תנועה אלכסונית, לקבלת העלות הכוללת של מעבר על פני התא.",
	"@@Path-Distance-Allocation_Cost-Raster_tag1@@": "הערכים של <strong>רסטר העלויות</strong> יכולים להיות מספר שלם או נקודה צפה, אבל הם לא יכולים להיות מספר שלילי או אפס.",
	"@@Path-Distance-Allocation_horizontalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האופקי וזווית המעבר היחסית האופקית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: HF ו-HRMA. HF הוא הקיצור של פקטור אופקי, אשר מגדיר את הקושי האופקי לעבור מתא אחד לתא הבא. HRMA הוא הקיצור של זווית מעבר יחסית אופקית, אשר מזהה את הזווית בין הכיוון האופקי מתא לכיוון התנועה.</p><p><strong>הסוגים של פקטור אנכי</strong>כוללים את הבאים:</p><ul><li><strong>בינארי</strong> - מציין שה-HRMA הוא פחות מזווית החיתוך, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לפנים</strong> - קובע שרק תנועה קדימה מותרת. ה-HRMA חייב להיות שווה או גדול מ-0 ופחות מ-90 מעלות (0 &lt;= ‏HRMA &lt;‏ 90). אם ה-HRMA גודל מ-0 ופחות מ-45 מעלות, ה-HF עבור התא מוגדר לערך שקשור לפקטור אפס. אם ה-HRMA שווה או גדול מ-45 מעלות, נעשה שימוש בערך של משנה ערך הצד. ה-HF עבור כל ערך HRMA השווה או גדול מ-90 מעלות מוגדר כאינסוף.</li><li><strong>לינארי</strong> - מציין שה-HF הוא פונקציה לינארית של ה-HRMA.</li><li><strong>לינארי הפוך</strong> - מציין שה-HF הוא פונקציה לינארית הפוכה של ה-HRMA.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האופקי אשר משמש לקביעת ערכי HF.</li></ul><p>משני ערך לפקטורים האופקיים כוללים:</p><ul><li><strong>פקטור אפס</strong> - הפקטור האופקי אשר ישמש כאשר HRMA הוא אפס. פקטור זה ממקם את חיתוך y עבור כל אחת מפונקציות הפקטור האופקי.</li><li><strong>זווית חיתוך</strong> - מגדיר את זווית HRMA שמעבר לה HF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובע את השיפוע של הקו הישר אשר משמש עם מילות המפתח פקטור אופקי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>ערך צד</strong> - קובע את ה-HF כאשר ה-HRMA שווה או גדול מ-45 מעלות ופחות מ-90 מעלות כאשר צוינה מילת המפתח של פקטור אופקי<strong>לפנים</strong>.</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה המגדירה את ה-HF.</li></ul>",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag0@@": "רסטר שמגדיר את הכיוון האופקי בכל תא.",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag1@@": "הערכים ברסטר חייבים להיות מספרים שלמים בטווח שבין 0 ל-360, כאשר 0 מעלות הוא צפון, או לכיוון החלק העליון של המסך, ועולה בכיוון השעון. לאזורים שטוחים יש להקצות ערך ‎-1. הערכים בכל מיקום ישמשו בשילוב עם <strong>הפקטור האופקי</strong> לקביעת העלות האופקית שמצטברת בעת מעבר מתא אחד לסמוכים אליו.",
	"@@Path-Distance-Allocation_Maximum-Distance_tag0@@": "הסף שאותו ערכי העלות המצטברת לא יכולים לעבור. אם מרחק עלות מצטברת חורג מעבר לערך זה, ערך הפלט עבור מיקום התא יהיה NoData. המרחק המקסימלי מגדיר את התיחום שעבורו מרחקי עלות מצטברת מחושבים. מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "מכפיל שיחול על ערכי העלות.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "פרמטר זה מאפשר לשלוט על אופן הנסיעה או העוצמה במקור. ככל שהמכפיל גדול יותר, כך עולה העלות לזוז על פני כל תא.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "הערכים חייבים להיות גדולים מאפס. ערך ברירת המחדל הוא 1.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Path-Distance-Allocation_Source-Field_tag0@@": "השדה אשר משמש להקצאת ערכים למיקומי המקור. חייב להיות מסוג מספר שלם. אם <strong>רסטר ערכים</strong> הוגדר, הערכים בקלט זה יקבלו קדימות על כל הגדרה עבור <strong>שדה מקור</strong>.",
	"@@Path-Distance-Allocation_Source-Raster_tag0@@": "רסטר הקלט הנדרש של מיקומי מקור.",
	"@@Path-Distance-Allocation_Source-Raster_tag1@@": "זהו רסטר שמזהה את התאים או המיקומים שמהם מרחק העלות המצטברת הקטן ביותר עבור כל מיקום תא פלט מחושב.",
	"@@Path-Distance-Allocation_Source-Raster_tag2@@": "זה יכול להיות סוג מספר שלם או נקודה צפה.",
	"@@Path-Distance-Allocation_Start-Cost_tag0@@": "העלות ההתחלתית שממנה יש להתחיל את חישובי העלות. פרמטר זה מאפשר לציין עלות קבועה שמשויכת למקור. במקום להתחיל בעלות 0, אלגוריתם העלות יתחיל בערך שצוין.",
	"@@Path-Distance-Allocation_Start-Cost_tag1@@": "הערך חייב להיות 0 ומעלה. ערך ברירת המחדל הוא 0.",
	"@@Path-Distance-Allocation_Surface-Raster_tag0@@": "רסטר שמגדיר את ערכי הגובה בכל מיקום תא.",
	"@@Path-Distance-Allocation_Surface-Raster_tag1@@": "הערכים משמשים לחישוב כיסוי מרחק פני השטח בפועל בעת מעבר בין תאים.",
	"@@Path-Distance-Allocation_Travel-Direction_tag0@@": "מגדיר את כיוון הנוסע בעת החלת שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור.",
	"@@Path-Distance-Allocation_Travel-Direction_tag1@@": "<strong>ממקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל ממקור הקלט תוך התקדמות החוצה לתאים שאינם מקור. זוהי ברירת המחדל.",
	"@@Path-Distance-Allocation_Travel-Direction_tag3@@": "<strong>למקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל מכל תא שאינו מקור תוך התקדמות חזרה למקור הקלט.",
	"@@Path-Distance-Allocation_Travel-Direction_tag5@@": "ציין את מילת המפתח <strong>ממקור</strong> או <strong>למקור</strong>, אשר תוחל על כל המקורות, או ציין שדה ב<strong>רסטר המקור</strong> שמכיל את מילות המפתח לזיהוי כיוון הנסיעה עבור כל מקור. שדה זה חייב להכיל את החרוזת ${FROM_SOURCE} או ${TO_SOURCE}.",
	"@@Path-Distance-Allocation_Value-Raster_tag0@@": "רסטר המספר השלם של הקלט שמזהה את ערכי האזור שבהם יש להשתמש עבור כל מיקום מקור קלט. עבור כל תא מיקום מקור, הערך שמוגדר על ידי <strong>רסטר הערכים</strong> ישויך לכל התאים שהוקצו למיקום המקור עבור התחשיב. <strong>רסטר הערכים</strong> יקבל קדימות על כל הגדרה של <strong>שדה מקור</strong>.",
	"@@Path-Distance-Allocation_verticalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: VF ו-VRMA. VF הוא הקיצור של פקטור אנכי, אשר מגדיר את הקושי האנכי לעבור מתא אחד לתא הבא. VRMA הוא הקיצור של זווית מעבר יחסית אנכית, אשר מזהה את זווית השיפוע בין תא FROM, או תא העיבוד, לתא TO.</p><p><strong>סוגי פקטור אנכי</strong>כוללים:</p><ul><li><strong>בינארי</strong> - מציין שה-VRMA הוא יותר מזווית החיתוך הנמוכה ופחות מזווית החיתוך הגבוהה, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לינארי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA.</li><li><strong>לינארי סימטרי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>לינארי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA.</li><li><strong>לינארי סימטרי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>Cos</strong> - מזהה את ה-VF כפונקציה מבוססת קוסינוס של ה-VRMA.</li><li><strong>Sec</strong> - מזהה את ה-VF כפונקציה מבוססת סקנט של ה-VRMA.</li><li><strong>Cos-Sec</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>Sec-Cos</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האנכי אשר משמש לקביעת ערכי VF.</li></ul><p>משני ערך למילות המפתח האנכיות כוללים:</p><ul><li><strong>פקטור אפס</strong> - קובע את הפקטור האנכי אשר ישמש כאשר VRMA הוא אפס. פקטור זה ממקם את חיתוך y של הפונקציה שצוינה. בהגדרה, פקטור אפס אינו ישים לאף אחת מהפונקציות הטריגונומטריות האנכיות (COS‏, SEC‏, COS-SEC‏ או SEC-COS). חיתוך y מוגדר על ידי פונקציות אלה.</li><li><strong>זווית חיתוך נמוכה</strong> - מגדירה את זווית VRMA שמתחת לה VF יוגדר לאינסוף.</li><li><strong>זווית חיתוך גבוהה</strong> - מגדירה את זווית VRMA שמעבר לה VF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובעת את השיפוע של הקו הישר אשר משמש עם מילות המפתח של פקטור אנכי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה שמגדירה את ה-VF.</li></ul>",
	"@@Path-Distance-Allocation_Vertical-Raster_tag0@@": "‏מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (VRMA).",
	"@@Path-Distance-Allocation_Vertical-Raster_tag1@@": "הערכים משמשים לחישוב השיפוע אשר משמש לזיהוי הפקטור האנכי שנוצר בעת מעבר מתא אחד לתא הבא.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "פרמטר זה מדמה את העלייה במאמץ להתגבר על עלויות כאשר העלות המצטברת עולה. הוא משמש לדיגום עייפות של הנוסע. העלות המצטברת העולה להשגת תא מוכפלת בשיעור ההתנגדות ומתווספת לעלות למעבר אל התא הבא.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "זוהי גרסה מתוקנת של נוסחת שיעור ריבית דריבית אשר משמשת לחישוב העלות בפועל של מעבר דרך תא. עם שערך שיעור ההתנגדות עולה, היא מעלה את העלות של התאים שבהם נעשה ביקור בהמשך. ככל ששיעור ההתנגדות גבוה יותר, כך עולה העלות להשיג את התא הבא, אשר מורכבת עבור כל תנועה עוקבת. מכיוון ששיעור ההתנגדות דומה לשיעור מרוכב ובדרך כלל ערכי העלות המצטברת גדולים מאוד, מומלץ להשתמש בשיעורי התנגדות קטנים, כגון 0.005 או אפילו פחות מכך, בהתאם לערכי העלות המצטברת.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Path-Distance-Back-Link_Capacity_tag0@@": "מגדיר את קיבולת העלות עבור הנוסע עבור מקור. תחשיבי העלות ממשיכים עבור כל מקור עד שמושגת הקיבולת שצוינה.",
	"@@Path-Distance-Back-Link_Capacity_tag1@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag0@@": "רסטר קלט נדרש שמגדיר את העלות או העכבה לזוז פלאנימטרית על פני כל תא. הערך בכל מיקום תא מייצג את מרחק העלות-ליחידה עבור תזוזה על פני התא. כל ערך מיקום תא מוכפל ברזולוציית התא, תוך פיצוי גם עבור תנועה אלכסונית, לקבלת העלות הכוללת של מעבר על פני התא.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag1@@": "הערכים של <strong>רסטר העלויות</strong> יכולים להיות מספר שלם או נקודה צפה, אבל הם לא יכולים להיות מספר שלילי או אפס.",
	"@@Path-Distance-Back-Link_horizontalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האופקי וזווית המעבר היחסית האופקית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: HF ו-HRMA. HF הוא הקיצור של פקטור אופקי, אשר מגדיר את הקושי האופקי לעבור מתא אחד לתא הבא. HRMA הוא הקיצור של זווית מעבר יחסית אופקית, אשר מזהה את הזווית בין הכיוון האופקי מתא לכיוון התנועה.</p><p><strong>הסוגים של פקטור אנכי</strong>כוללים את הבאים:</p><ul><li><strong>בינארי</strong> - מציין שה-HRMA הוא פחות מזווית החיתוך, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לפנים</strong> - קובע שרק תנועה קדימה מותרת. ה-HRMA חייב להיות שווה או גדול מ-0 ופחות מ-90 מעלות (0 &lt;= ‏HRMA &lt;‏ 90). אם ה-HRMA גודל מ-0 ופחות מ-45 מעלות, ה-HF עבור התא מוגדר לערך שקשור לפקטור אפס. אם ה-HRMA שווה או גדול מ-45 מעלות, נעשה שימוש בערך של משנה ערך הצד. ה-HF עבור כל ערך HRMA השווה או גדול מ-90 מעלות מוגדר כאינסוף.</li><li><strong>לינארי</strong> - מציין שה-HF הוא פונקציה לינארית של ה-HRMA.</li><li><strong>לינארי הפוך</strong> - מציין שה-HF הוא פונקציה לינארית הפוכה של ה-HRMA.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האופקי אשר משמש לקביעת ערכי HF.</li></ul><p>משני ערך לפקטורים האופקיים כוללים:</p><ul><li><strong>פקטור אפס</strong> - הפקטור האופקי אשר ישמש כאשר HRMA הוא אפס. פקטור זה ממקם את חיתוך y עבור כל אחת מפונקציות הפקטור האופקי.</li><li><strong>זווית חיתוך</strong> - מגדיר את זווית HRMA שמעבר לה HF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובע את השיפוע של הקו הישר אשר משמש עם מילות המפתח פקטור אופקי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>ערך צד</strong> - קובע את ה-HF כאשר ה-HRMA שווה או גדול מ-45 מעלות ופחות מ-90 מעלות כאשר צוינה מילת המפתח של פקטור אופקי<strong>לפנים</strong>.</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה המגדירה את ה-HF.</li></ul>",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag0@@": "רסטר שמגדיר את הכיוון האופקי בכל תא.",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag1@@": "הערכים ברסטר חייבים להיות מספרים שלמים בטווח שבין 0 ל-360, כאשר 0 מעלות הוא צפון, או לכיוון החלק העליון של המסך, ועולה בכיוון השעון. לאזורים שטוחים יש להקצות ערך ‎-1. הערכים בכל מיקום ישמשו בשילוב עם <strong>הפקטור האופקי</strong> לקביעת העלות האופקית שמצטברת בעת מעבר מתא אחד לסמוכים אליו.",
	"@@Path-Distance-Back-Link_Maximum-Distance_tag0@@": "הסף שאותו ערכי העלות המצטברת לא יכולים לעבור. אם מרחק עלות מצטברת חורג מעבר לערך זה, ערך הפלט עבור מיקום התא יהיה NoData. המרחק המקסימלי מגדיר את התיחום שעבורו מרחקי עלות מצטברת מחושבים. מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "מכפיל שיחול על ערכי העלות.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "פרמטר זה מאפשר לשלוט על אופן הנסיעה או העוצמה במקור. ככל שהמכפיל גדול יותר, כך עולה העלות לזוז על פני כל תא.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "הערכים חייבים להיות גדולים מאפס. ערך ברירת המחדל הוא 1.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Path-Distance-Back-Link_Source-Raster_tag0@@": "רסטר הקלט הנדרש של מיקומי מקור.",
	"@@Path-Distance-Back-Link_Source-Raster_tag1@@": "זהו רסטר שמזהה את התאים או המיקומים שמהם מרחק העלות המצטברת הקטן ביותר עבור כל מיקום תא פלט מחושב.",
	"@@Path-Distance-Back-Link_Source-Raster_tag2@@": "זה יכול להיות סוג מספר שלם או נקודה צפה.",
	"@@Path-Distance-Back-Link_Start-Cost_tag0@@": "העלות ההתחלתית שממנה יש להתחיל את חישובי העלות. פרמטר זה מאפשר לציין עלות קבועה שמשויכת למקור. במקום להתחיל בעלות 0, אלגוריתם העלות יתחיל בערך שצוין.",
	"@@Path-Distance-Back-Link_Start-Cost_tag1@@": "הערך חייב להיות 0 ומעלה. ערך ברירת המחדל הוא 0.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag0@@": "רסטר שמגדיר את ערכי הגובה בכל מיקום תא.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag1@@": "הערכים משמשים לחישוב כיסוי מרחק פני השטח בפועל בעת מעבר בין תאים.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag0@@": "מגדיר את כיוון הנוסע בעת החלת שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag1@@": "<strong>ממקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל ממקור הקלט תוך התקדמות החוצה לתאים שאינם מקור. זוהי ברירת המחדל.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag3@@": "<strong>למקור</strong> - שיעור ההתנגדות של המקור והעלות ההתחלתית של המקור יוחלו החל מכל תא שאינו מקור תוך התקדמות חזרה למקור הקלט.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag5@@": "ציין את מילת המפתח <strong>ממקור</strong> או <strong>למקור</strong>, אשר תוחל על כל המקורות, או ציין שדה ב<strong>רסטר המקור</strong> שמכיל את מילות המפתח לזיהוי כיוון הנסיעה עבור כל מקור. שדה זה חייב להכיל את החרוזת ${FROM_SOURCE} או ${TO_SOURCE}.",
	"@@Path-Distance-Back-Link_verticalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: VF ו-VRMA. VF הוא הקיצור של פקטור אנכי, אשר מגדיר את הקושי האנכי לעבור מתא אחד לתא הבא. VRMA הוא הקיצור של זווית מעבר יחסית אנכית, אשר מזהה את זווית השיפוע בין תא FROM, או תא העיבוד, לתא TO.</p><p><strong>סוגי פקטור אנכי</strong>כוללים:</p><ul><li><strong>בינארי</strong> - מציין שה-VRMA הוא יותר מזווית החיתוך הנמוכה ופחות מזווית החיתוך הגבוהה, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לינארי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA.</li><li><strong>לינארי סימטרי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>לינארי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA.</li><li><strong>לינארי סימטרי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>Cos</strong> - מזהה את ה-VF כפונקציה מבוססת קוסינוס של ה-VRMA.</li><li><strong>Sec</strong> - מזהה את ה-VF כפונקציה מבוססת סקנט של ה-VRMA.</li><li><strong>Cos-Sec</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>Sec-Cos</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האנכי אשר משמש לקביעת ערכי VF.</li></ul><p>משני ערך למילות המפתח האנכיות כוללים:</p><ul><li><strong>פקטור אפס</strong> - קובע את הפקטור האנכי אשר ישמש כאשר VRMA הוא אפס. פקטור זה ממקם את חיתוך y של הפונקציה שצוינה. בהגדרה, פקטור אפס אינו ישים לאף אחת מהפונקציות הטריגונומטריות האנכיות (COS‏, SEC‏, COS-SEC‏ או SEC-COS). חיתוך y מוגדר על ידי פונקציות אלה.</li><li><strong>זווית חיתוך נמוך</strong> - מגדירה את זווית VRMA שמתחת לה VF יוגדר לאינסוף.</li><li><strong>זווית חיתוך גבוה</strong> - מגדירה את זווית VRMA שמעבר לה VF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובעת את השיפוע של הקו הישר אשר משמש עם מילות המפתח של פקטור אנכי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה שמגדירה את ה-VF.</li></ul>",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag0@@": "‏מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (VRMA).",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag1@@": "הערכים משמשים לחישוב השיפוע אשר משמש לזיהוי הפקטור האנכי שנוצר בעת מעבר מתא אחד לתא הבא.",
	"@@Plus_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Plus_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Plus_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Plus_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Plus_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Plus_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Plus_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Plus_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Plus_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Plus_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Plus_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Plus_Raster_tag0@@": "הקלט שהערכים שלו יתווספו ל-",
	"@@Plus_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Plus_Raster2_tag0@@": "הקלט שהערכים שלנו יתווספו לקלט הראשון.",
	"@@Plus_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Local_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם הגודל של כל תאי הקלט זהה כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Local_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Local_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Local_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Local_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Local_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Local_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Local_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Local_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Local_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Local_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Local_Raster_tag0@@": "הקלט שהערכים שלו יתווספו אל",
	"@@Local_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Local_Raster2_tag0@@": "הקלט שהערכים שלו יתווספו לקלט הראשון.",
	"@@Local_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Local_False-Raster_tag0@@": "הקלט שהערכים שלו ישמשו כערכי פיקסל הפלט אם התנאי לא מתקיים. זה יכול להיות כל מספר שלם, רסטר נקודה צפה או ערך קבוע.",
	"@@Local_True-Raster_tag0@@": "הקלט שהערכים שלו ישמשו כערכי פיקסל הפלט אם התנאי מתקיים. זה יכול להיות כל מספר שלם, רסטר נקודה צפה או ערך קבוע.",
	"@@Power_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Power_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Power_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Power_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Power_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Power_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Power_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Power_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Power_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Power_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Power_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Power_Raster_tag0@@": "ערכי הקלט שיועלו בחזקה שהוגדרה על ידי <strong>Raster2</strong>.",
	"@@Power_Raster_tag3@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Power_Raster2_tag0@@": "הקלט שקובע את החזקה שבה הערכים של <strong>רסטר</strong> יועלו.",
	"@@Power_Raster2_tag3@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Radar-Calibration_Calibration-Type_tag0@@": "סוג הכיול שיתבצע.",
	"@@Radar-Calibration_Calibration-Type_tag1@@": "Beta-nought - הפונקציה מחזירה את השתקפות הרדאר לכל יחידת שטח בטווח שיפוע. זהו סוג הכיול שמוגדר כברירת מחדל.",
	"@@Radar-Calibration_Calibration-Type_tag2@@": "Beta-nought - הפונקציה מחזירה את השתקפות הרדאר לכל יחידת שטח בטווח קרקע. התוצאות הם ערכי נקודה צפה של 32 ביט, שבדרך כלל הם בטווח של 0.0 עד 1.0. לא מתבצע חיתוך נתונים אם אפשרות זו נבחרה.",
	"@@Radar-Calibration_Calibration-Type_tag3@@": "Gamma - הפונקציה מחזירה את השתקפות הרדאר לכל יחידת שטח במישור הניצב לכיוון המדידה.",
	"@@Radar-Calibration_Calibration-Type_tag4@@": "ללא",
	"@@Radar-Calibration_Raster_tag0@@": "רסטר הקלט.",
	"@@RasterInfo_Raster-Info_tag0@@": "בחר סט נתוני רסטר לשימוש כתבנית",
	"@@RasterInfo_Raster_tag0@@": "רסטר הקלט.",
	"@@Rasterize-Attributes_Attribute-Field-Names_tag0@@": "רשימה של שדות ב<strong>טבלת מאפיינים אזוריים</strong>, כאשר כל שדה מופרד בפסיק. ערכים בכל שדה ייוצגו על ידי ערוץ ברסטר הפלט.",
	"@@Rasterize-Attributes_Background-Value_tag0@@": "ערך הפיקסל ההתחלתי של ערוצי הפלט ברסטר, לפני מיפוי מחדש.",
	"@@Rasterize-Attributes_Background-Value_tag1@@": "אם פיקסל לא נופל בתוך אזור, הוא יישאר כערך רקע.",
	"@@Rasterize-Attributes_Value-Raster_tag0@@": "רסטר הקלט הנדרש.",
	"@@Rasterize-Attributes_Value-Raster_tag1@@": "הקלט צריך להיות רסטר חד-ערוצי. אם נעשה שימוש ברסטר רב-ערוצי, יעשה שימוש רק בערוץ הראשון.",
	"@@Rasterize-Attributes_Where-Clause_tag0@@": "שאילתא נוספת אופציונלית שמוחלת על <strong>טבלת מאפיינים אזוריים</strong>.",
	"@@Rasterize-Attributes_Where-Clause_tag3@@": "אם השתמשת בטבלה שלעיל כדוגמה, השאילתא צריכה להיות ${Variable1 = 'bare earth'}.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag0@@": "המאפיינים האזוריים שצוינו כנתיב לקבוצת ישויות מקומית, הנתיב לטבלה, כתובת ה-URL לשכבת ישויות שירות או מחרוזת JSON.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag1@@": "ב-JSON, הדבר מתואר כאוסף של מיפוי ממזהי אזורים למערך של מספרים שלמים. ‎${{ zoneId:[f1,f2,...,fn], ... } }‎",
	"@@Rasterize-Attributes_Zone-Field_tag0@@": "שם השדה שמכיל את ערכי מזהה האזור.",
	"@@Rasterize-Attributes_Zone-Raster_tag0@@": "רסטר חד-ערוצי אופציונלי שבו כל פיקסל מכיל את מזהה האזור שקשור למיקום. מזהה האזור משמש לחיפוש שורות בטבלת המאפיינים האזוריים עבור בליעה ספציפית לאזור.",
	"@@Rasterize-Attributes_Zone-Raster_tag1@@": "אל תציין פרמטר זה אם אתה מעוניין רק לייבא את המאפיין.",
	"@@Rasterize-Features_Field_tag0@@": "בחר את השדה שבו יש להשתמש כדי לזהות כל מאפיין.",
	"@@Rasterize-Features_Input-Features_tag0@@": "בחר את קבוצת הישויות להמרה לתבנית רסטר.",
	"@@Rasterize-Features_Raster_tag0@@": "בחר רסטר להגדרת גודל התא והתיחום עבור המרת הישויות.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag0@@": "קבע כיצד לנהל ישויות חופפות:",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag1@@": "<strong>ראשון</strong> - לאזורים החופפים יוקצה ערך מסט הנתונים הראשון ברשימה.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag3@@": "<strong>אחרון</strong> - לאזורים החופפים יוקצה ערך מסט הנתונים האחרון ברשימה.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag5@@": "<strong>הקטן ביותר</strong> - לאזורים החופפים יוקצה ערך מהישות הקטנה ביותר.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag7@@": "<strong>הגדול ביותר</strong> - לאזורים החופפים יוקצה ערך מהישות הגדולה ביותר.",
	"@@Recast_Overrides_tag0@@": "טבלה של שמות משתנים וערכים מוגדרים על ידי המשתמש, אשר משמשים לשינוי סט נתוני מוזאיקה.",
	"@@Recast_Raster_tag0@@": "תוצר הרסטר שעליו תוחל הפונקציה Recast.",
	"@@Region-Group_Add-Link_tag0@@": "מציין האם שדה קישור נוסף לטבלה של הפלט.",
	"@@Region-Group_Add-Link_tag1@@": "<strong>הוסף קישור</strong> - פריט ${LINK} יתווסף לטבלה של רסטר הפלט.",
	"@@Region-Group_Add-Link_tag3@@": "<strong>אין קישור</strong> - טבלת המאפיינים עבור רסטר הפלט תכיל רק פריטי ${Value} ו-${Count}.",
	"@@Region-Group_Excluded-Value_tag0@@": "מזהה ערך כך שאם מיקום תא מכיל את הערך, לא תתבצע הערכה של קישוריות מרחבית, ולא משנה איך מספר השכנים צוין ('ארבע' או 'שמונה').",
	"@@Region-Group_Excluded-Value_tag1@@": "תאים עם הערך המוחרג יטופלו כ-NoData ויוצאו מהחישובים. מיקומי תאים שמכילים את הערך המוחרג יקבלו 0 ברסטר הפלט.",
	"@@Region-Group_Excluded-Value_tag2@@": "הערך המוחרג דומה למושג של ערך רקע, או כזה שמוחלת עליו מסיכה. יש לציין ערך עבור פרמטר זה אם הפרמטר <strong>${CROSS}</strong> צוין.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag0@@": "מספר התאים השכנים לשימוש בהערכת קישוריות בין תאים.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag1@@": "<strong>ארבע</strong> - מגדיר קישוריות בין תאים בעלי אותו ערך רק אם התאים נמצאים ישירות משמאל, מימין, מעל או מתחת לכל אחד מארבעת השכנים הקרובים ביותר. זוהי ברירת המחדל.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag3@@": "<strong>שמונה</strong> - מגדיר קישוריות בין תאים בעלי אותו ערך אם הם בשכונה המידית של שמונה תאים זה מזה. זה כולל מימין, משמאל, מעל או באלכסון זה מזה.",
	"@@Region-Group_Zone-Connectivity_tag0@@": "מגדיר אילו ערכי תאים יילקחו בחשבון בעת בדיקת קישוריות.",
	"@@Region-Group_Zone-Connectivity_tag1@@": "<strong>בתוך</strong> - בודק קישוריות בין ערכי קלט שהם זהים בתוך אותו אזור. זוהי ברירת המחדל.",
	"@@Region-Group_Zone-Connectivity_tag3@@": "התאים היחידים שניתן לקבץ הם תאים מאותו אזור (ערך) שעונים על הדרישות המרחביות של קישוריות שצוינו על ידי הפרמטר <strong>מספר השכנים</strong> (ארבע-כיוונים או שמונה-כיוונים).",
	"@@Region-Group_Zone-Connectivity_tag6@@": "חוצה</strong> - בודק קישוריות לפי הדרישות המרחביות שצוינו על ידי פרמטר מספר השכנים בין תאים עם ערכים כלשהם, למעט עבור הערך שזוהה כמוחרג על ידי פרמטר הערך המוחרג.",
	"@@Region-Group_Zone-Connectivity_tag8@@": "כאשר נעשה שימוש באפשרות זו, יש לציין ערך עבור הפרמטר <strong>ערך מוחרג</strong>.",
	"@@Region-Group_Zone-Raster_tag0@@": "רסטר הקלט הנדרש שהאזורים המחוברים הייחודיים שלו יזוהו.",
	"@@Region-Group_Zone-Raster_tag1@@": "חייב להיות מסוג מספר שלם.",
	"@@Region-Grow_Fill-Value-Field_tag0@@": "השדה בטבלת המאפיינים שמגדיר את ערך המילוי עבור קבוצת הפיקסלים. בתמונה מרובת-ערוצים, ערך זה יוקצה לכל הערוצים.",
	"@@Region-Grow_Max-Growth-Radius-Field_tag0@@": "השדה בטבלת המאפיינים שמגדיר את רדיוס הגדילה המקסימלי, ביחידות הייחוס המרחבי של התמונה.",
	"@@Region-Grow_Raster_tag0@@": "הרסטר שעליו ברצונך לבצע את הפונקציה.",
	"@@Region-Grow_Seed-Points_tag0@@": "קבוצת ישויות נקודה, אשר משמשות כזרעים הראשוניים עבור האלגוריתם. כל נקודת זרע תואמת לרשומה אחת בטבלת המאפיינים, שנושאת את המידע של רדיוס הגדילה המרבי, סף הדומות וערך המילוי.",
	"@@Region-Grow_Similarity-Threshold-Field_tag0@@": "השדה בטבלת המאפיינים שמגדיר את סף הדומות, כמרחק אוקלידי בחלל ספקטרלי.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag0@@": "ערכים חסרים בטבלת הסיווג מחדש יכולים לשמור את ערכם או לקבל מיפוי מחדש כ-NoData.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag1@@": "לא מסומן - כל פיקסל מרסטר הקלט שלא מסווג מחדש בטבלת מיפוי מחדש ישמור את ערכו וייכתב עבור מיקומו לרסטר הפלט. זוהי ברירת המחדל.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag2@@": "מסומן - ערכו של כל פיקסל מרסטר הקלט שלא מסווג מחדש בטבלת מיפוי מחדש ימופה מחדש ל-NoData עבור מיקומו לרסטר הפלט.",
	"@@Remap_Input-Field_tag0@@": "בחר את השדה שמציין את ערך פיקסל הקלט אשר ימופה מחדש.",
	"@@Remap_Input-Field_tag1@@": "אם לטבלה שלך יש טווח ערך, זה שדה ערך המינימום, ובנוסף יש לציין את הפרמטר <strong>שדה קלט מקסימום</strong>.",
	"@@Remap_Input-Max-Field_tag0@@": "בחר את שדה ערך המקסימום אם הטבלה שלך מציינת טווח ערכים.",
	"@@Remap_List_tag0@@": "ציין את ערכי המפה וציין את המינימום והמקסימום של טווח הערכים וערכי המיפוי מחדש החדשים. בנוסף, ניתן להגדיר את טווח הערכים לפיקסלים NoData.",
	"@@Remap_Output-Field_tag0@@": "בחר את השדה אשר ישמש כערך המיפוי מחדש של הפלט.",
	"@@Remap_Raster_tag0@@": "רסטר הקלט.",
	"@@Remap_Remap-Definition-Type_tag0@@": "בחר את האפשרות שבה ברצונך להשתמש כדי להגדיר את ערכי המיפוי מחדש:",
	"@@Remap_Remap-Definition-Type_tag1@@": "רשימה - ציין טווח של ערכי למיפוי לערך פיקסל של פלט",
	"@@Remap_Remap-Table-Type_tag0@@": "בחר את סוג הטבלה שבה תשתמש למיפוי מחדש של רסטר הקלט:",
	"@@Remap_Remap-Table-Type_tag1@@": "פשוט - משתמש בקלט <strong>טבלת מיפוי מחדש</strong> כדי למפות מחדש את ערכי הפיקסל של <strong>שדה קלט</strong> לערך התואם בפרמטר <strong>שדה פלט</strong>. שיטה זו שומרת במטמון את טבלת המיפוי מחדש כך שתוכל להתבצע מהר יותר.",
	"@@Remap_Remap-Table-Type_tag8@@": "דינמי - שיטה זו לא שומרת במטמון את טבלת המיפוי מחדש ותבצע שאילתא בכל פעם שנעשית בקשה (הזזה, זום או רענון). אם הטבלה משתנה, הבקשה הבאה יכולה למפות מחדש באופן דינמי את הערכים בהתאם.",
	"@@Remap_Remap-Table-Type_tag9@@": "הקצאה מחדש - טבלה ספציפית משמשת עבור תהליך הסיווג מחדש, כאשר כל שורה בטבלה תמפה מחדש רק על בסיס הגבול של כל ישות.",
	"@@Remap_Remap-Table_tag0@@": "דפדף לטבלה שמגדירה את ערכי המיפוי מחדש.",
	"@@Reproject_Raster_tag0@@": "סט נתוני הרסטר להיטל מחדש או לדגימה מחדש.",
	"@@Reproject_Spatial-Reference_tag0@@": "מערכת הקואורדינטות אשר משמשת להיטל מחדש של הנתונים.",
	"@@Reproject_X-Cellsize_tag0@@": "ממד-x שאליו יש לדגם מחדש את הנתונים. אפשרות זו אופציונלית. אם הערך הוא 0 או פחות, מעטפת הפלט (גודלי תא ותיחום) מחושבת מרסטר הקלט.",
	"@@Reproject_X-Registration-Point_tag0@@": "קואורדינטת-x אשר משמשת להגדרת הפינה השמאלית העליונה של סט הנתונים. יש להגדיר קואורדינטה זו ביחידות של הייחוס המרחבי החדש. אם הפרמטרים <strong>גודל תא X</strong> וכן <strong>גודל תא Y</strong> גדולים מ-0, הם משמשים ביחד עם הפרמטרים <strong>נקודת רישום X</strong> וכן <strong>נקודת רישום Y</strong> להגדרת מעטפת הפלט.",
	"@@Reproject_Y-Cellsize_tag0@@": "ממד-y שאליו יש לדגם מחדש את הנתונים. אפשרות זו אופציונלית. אם הערך הוא 0 או פחות, מעטפת הפלט (גודלי תא ותיחום) מחושבת מרסטר הקלט.",
	"@@Reproject_Y-Registration-Point_tag0@@": "קואורדינטת-y אשר משמשת להגדרת הפינה השמאלית העליונה של סט הנתונים. יש להגדיר קואורדינטה זו ביחידות של הייחוס המרחבי החדש. אם הפרמטרים <strong>גודל תא X</strong> וכן <strong>גודל תא Y</strong> גדולים מ-0, הם משמשים ביחד עם הפרמטרים <strong>נקודת רישום X</strong> וכן <strong>נקודת רישום Y</strong> להגדרת מעטפת הפלט.",
	"@@Resample_Input-Cellsize_tag0@@": "גודל תא הפיקסל של רסטר הקלט.",
	"@@Resample_Output-Cellsize_tag0@@": "גודל תא הפיקסל של רסטר הפלט. ניתן לשנות את גודל התא, אך התיחום של סט נתוני הרסטר יישאר זהה. דגימה מחדש מגודל תא המוגדר על ידי המשתמש יכולה להיות אטית הרבה יותר מאשר ברירת המחדל של המערכת, מכיוון שהדגימה המחדש שמוגדרת כברירת מחדל במערכת מעבדת את כמות הנתונים המינימלית מהרזולוציה הקרובה ביותר האפשרית.",
	"@@Resample_Raster_tag0@@": "רסטר הקלט לדגימה מחדש.",
	"@@Resample_Resampling-Type_tag0@@": "<strong>שכן קרוב ביותר</strong> - מחשב את ערך פיקסל הפלט תוך שימוש בפיקסל הקלט הקרוב ביותר. פיקסלים שהם NoData יישארו ללא שינוי בסט נתוני הרסטר של הפלט. זוהי ברירת המחדל.",
	"@@Resample_Resampling-Type_tag2@@": "<strong>אינטרפולציה בילינארית</strong> - מחשב את ערך הפיקסל תוך שימוש בערך המרחק המשוקלל של ארבעת הפיקסלים הקרובים ביותר. שיטה זו היא יעילה לעיבוד מבחינה חישובית.",
	"@@Resample_Resampling-Type_tag4@@": "<strong>קונוולוציה קובית (Cubic)</strong> - קובע את הערך החדש של פיקסלים על בסיס התאמת עקומה חלקה דרך 16 המרכזים של הפיקסלים הקרובים ביותר בקלט.",
	"@@Resample_Resampling-Type_tag6@@": "<strong>רוב</strong> - מחשב את ערך הפיקסל תוך שימוש בערך פיקסל הרוב ב-16 הפיקסלים הקרובים ביותר. פיקסלים שהם NoData יישארו ללא שינוי בסט נתוני הרסטר של הפלט.",
	"@@Resample_Resampling-Type_tag8@@": "<strong>אינטרפולציה בילינארית פלוס</strong> - משתמש ב<strong>אינטרפולציה בילינארית</strong>, למעט הפיקסלים לאורך הקצוות מוגדרים כ-NoData ולא מוכפלים או נלקחים בחשבון בתחשיב. השתמש ב<strong>אינטרפולציה בילינארית פלוס</strong> עבור נתונים באריחים מכיוון שהדבר ישפר את התאמת הקצוות.",
	"@@Resample_Resampling-Type_tag14@@": "<strong>טשטוש גאוס</strong> - מחיל קונוולציה גאוסיאנית על רסטר המקור ומחשב ערך פיקסל תוך שימוש בערך המרחק המשוקלל של ארבעת הפיקסלים הקרובים ביותר מהרסטר המטושטש. מתאים לצורך הסרת רעש בנתונים שנדגמו מחדש ולדגימה כלפי מטה לגודל פיקסל גודל יותר.",
	"@@Resample_Resampling-Type_tag16@@": "<strong>טשטוש גאוס פלוס</strong> - משתמש ב<strong>טשטוש גאוס פלוס</strong>, למעט הפיקסלים לאורך הקצוות מוגדרים כ-NoData ולא מוכפלים או נלקחים בחשבון בתחשיב. השתמש ב<strong>טשטוש גאוס פלוס</strong> עבור נתונים באריחים מכיוון שהדבר ישפר את התאמת הקצוות.",
	"@@Resample_Resampling-Type_tag22@@": "<strong>ממוצע</strong> - מחשב ערכי פיקסלים תוך שימוש בערך הממוצע של כל הפיקסלים החופפים, עבור כל פיקסל יעד.",
	"@@Resample_Resampling-Type_tag24@@": "<strong>מינימום</strong> - מחשב את ערך הפיקסל תוך שימוש בערך המינימום של כל הפיקסלים החופפים. פיקסלים שהם NoData יישארו ללא שינוי בסט נתוני הרסטר של הפלט.",
	"@@Resample_Resampling-Type_tag26@@": "<strong>מקסימום</strong> - מתאים לנתונים רציפים, מפיק תמונת פלט חלקה יותר מאשר שיטת הדגימה מחדש 'השכן הקרוב ביותר'.",
	"@@Resample_Resampling-Type_tag28@@": "<strong>ממוצע ווקטור</strong> - מחשב ממוצע וקטור של עוצמה-כיוון תוך שימוש בכל הפיקסלים המעורבים. שיטה זו ישימה רק עבור רסטרים בעלי שני ערוצים שמייצגים עוצמה וכיוון. תחילה היא ממירה עוצמה-כיוון ל-U-V, ולאחר מכן לוקחת את הממוצע האריתמטי על פני כל הפיקסלים המעורבים כדי לקבל את ה-U-V של פיקלס היעד וממירה אותו חזרה לעוצמה-כיוון.",
	"@@Round-Down_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Round-Down_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Round-Down_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Round-Down_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Round-Down_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Round-Down_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Round-Down_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Round-Down_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Round-Down_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Round-Down_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Round-Down_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Round-Down_Raster_tag0@@": "ערכי הקלט שיש לעגל כלפי מטה.",
	"@@Round-Up_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Round-Up_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Round-Up_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Round-Up_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Round-Up_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Round-Up_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Round-Up_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Round-Up_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Round-Up_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Round-Up_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Round-Up_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Round-Up_Raster_tag0@@": "ערכי הקלט שיש לעגל כלפי מעלה.",
	"@@Segment-Mean-Shift_Minimum-Segment-Size-in-Pixels_tag0@@": "גודל הסגמנט המינימלי בפיקסלים. ערך זה קשור ליחידת המיפוי המינימלית, ויסנן החוצה בלוקים קטנים של פיקסלים. כל הסגמנטים שהם קטנים יותר מהערך שצוין ימזגו את הסגמנטים הקטנים יותר עם הסגמנט השכן המתאים להם ביותר.",
	"@@Segment-Mean-Shift_Raster_tag0@@": "רסטר הקלט לחלוקה לסגמנטים.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag0@@": "גבולות הסגמנטים משורטטים כקו מתאר שחור סביב כל סגמנט. הדבר מועיל כדי שתוכל להבדיל בין סגמנטים סמוכים בעלי צבעים דומים.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag1@@": "לא מסומן - גבולות הסגמנטים לא מוצגים. זוהי ברירת המחדל.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag2@@": "גבולות הסגמנטים משורטטים כקו מתאר שחור סביב כל סגמנט.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag0@@": "החשיבות היחסית של הפרדת אובייקטים על בסיס מאפיינים מרחביים.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag1@@": "ערכי מספרים שלמים חוקיים הם בין 1 ל-20. ערכים נמוכים יותר מניבים קבוצות נרחבות ויותר החלקה. ערך גבוה יותר מתאים להבדלה בין ישויות שהן קטנות מרחבית ומקובצות יחד. לדוגמה, בסצנה אורבנית, באפשרותך לסווג ישויות פני שטח בלתי חדירות כלליות באמצעות ערך פירוט מרחבי קטן יותר, או לסווג בניינים וכבישים כקבוצות נפרדות באמצעות ערך פירוט מרחבי גבוה יותר.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag0@@": "החשיבות היחסית של הפרדת אובייקטים על בסיס מאפייני צבע.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag1@@": "ערכי נקודה-צפה חוקיים הם בין 1.0 ל-20.0. ערכים נמוכים יותר מניבים קבוצות נרחבות ויותר החלקה. ערך גבוה יותר מתאים להבדלה בין ישויות שהן בעלות מאפיינים ספקטרליים דומים במידה מסוימת. לדוגמה, שימוש בערך פירוט ספקטרלי גבוה בסצנה מיוערת מאפשר להבדיל טוב יותר בין זני העצים השונים.",
	"@@Segment-Mean-Shift_maximumsegmentsizeinpixels_tag0@@": "<p>הגודל המרבי של סגמנט. סגמנטים החורגים מהגודל שצוין יחולקו. השתמש בפרמטר זה למניעת ארטיפקטים בשכבת הקלט, כתוצאה מסגמנטים גדולים. התוצאה היא 1-.</p>",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag0@@": "בחר אחד מארבעת סוגי הכיול הבאים:",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag1@@": "<strong>Beta-nought</strong> - מפיק פלט שמכיל את מקדם הבהירות של הרדאר.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag3@@": "<strong>Sigma nought</strong> - מחזיר אל האנטנה מיחידת אזור על הקרקע, קשור לטווח הקרקע.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag5@@": "<strong>גמא</strong> - מדידת אנרגיה נפלטת ומוחזרת שמסייעת לקבוע דפוסי אנטנה.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag7@@": "<strong>ללא</strong> - אל תחיל תיקון. זוהי ברירת המחדל.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag0@@": "רסטר הקלט Sentinel-1 Level-1 GRD או SLC שברצונך לעבד.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag1@@": "הפונקציה תשתמש בקובץ LUT כדי להחיל את התיקון התרמי או כדי להסיר את התיקון, בהתאם לתוכן של ה-LUT.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag0@@": "רסטר הקלט Sentinel-1 שברצונך לעבד.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag1@@": "הפונקציה תשתמש בקובץ LUT כדי להחיל את התיקון התרמי או כדי להסיר את התיקון, בהתאם לתוכן של ה-LUT.",
	"@@Set-Null_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Set-Null_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Set-Null_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Set-Null_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Set-Null_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Set-Null_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Set-Null_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Set-Null_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Set-Null_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Set-Null_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Set-Null_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Set-Null_False-Raster_tag0@@": "הקלט שהערכים שלו ישמשו כערכי פיקסל הפלט אם התנאי לא מתקיים. זה יכול להיות כל מספר שלם, רסטר נקודה צפה או ערך קבוע.",
	"@@Set-Null_Raster_tag0@@": "רסטר הקלט שמייצג את התוצאה הבוליאנית של פונקציית רסטר מתמטיקה לוגית. הערכים יהיו 1 (לנכון) או 0 (ללא נכון). זה יכול להיות מספר שלם או רסטר נקודה צפה.",
	"@@Shaded-Relief_Altitude_tag0@@": "גובה הוא זווית הגובה של השמש מעל האופק ונע בין 0 ל-90 מעלות. ערך של 0 מעלות מציין שהשמש נמצאת בקו האופק, כלומר באותו מישור אופקי כמו מסגרת הייחוס. ערך של 90 מעלות מציין שהשמש נמצאת בקו ישר למעלה. ברירת המחדל היא 45 מעלות מעל האופק.",
	"@@Shaded-Relief_Azimuth_tag0@@": "אזימוט הוא המיקום היחסי של השמש לאורך האופק (במעלות). מיקום זה מצוין על ידי זווית השמש שנמדדת בכיוון השעון מהצפון המוחלט. אזימוט של 0 מעלות מציין צפון, 90 מעלות מציין מזרח, 180 מעלות מציין דרום ו-270 מעלות מציין מערב.",
	"@@Shaded-Relief_Color-Scheme-Type_tag0@@": "מציין האם מדרג צבעים ישמש להצגת התבליט המוצללת.",
	"@@Shaded-Relief_Color-Scheme-Type_tag1@@": "<strong>מדרג צבעים</strong> - בעת בחירת <strong>מדרג צבעים</strong>, תתבקש לבחור מדרג צבעים מתאים.",
	"@@Shaded-Relief_Color-Scheme-Type_tag5@@": "<strong>מפת צבעים</strong> - בעת בחירת <strong>מפת צבעים</strong>, תתבקש לציין את קובץ מפת הצבעים שבו יש להשתמש.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag0@@": "ציין האם האינטרפולציה של פיסקל הקצה המהווה ברירת מחדל תושבת.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag1@@": "לא מסומן - דגימה מחדש ביליניארית תוחל באחידות לדגימה מחדש של התבליט המוצללת. זוהי ברירת המחדל.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag2@@": "מסומן - יעשה שימוש בדגימה מחדש ביליניארית בתוך התבליט המוצללת, למעט לאורך הקצוות של הרסטרים או לצד פיקסלים NoData. פיקסלים אלה יאוכלסו ב-NoData, מכיוון שיפחיתו את כל ההשפעות של קצה חד אשר עלולים לקרות.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag3@@": "השימוש באפשרות זו מונע ארטיפקטים של דגימה מחדש אשר עלולים להתרחש לאורך הקצוות של הרסטר. הפיקסלים של הפלט לאורך הקצה של רסטר או לצד פיקסלים ללא ערך יאוכלסו ב-NoData; לפיכך, מומלץ להשתמש באפשרות זו רק כאשר קיימים רסטרים אחרים עם פיקסלים חופפים זמינים. כאשר פיקסלים חופפים זמינים, אזורים אלה של NoData יציגו את ערכי הפיקסלים החופפים במקום להיות ריקים.",
	"@@Shaded-Relief_Raster_tag0@@": "רסטר גובה הקלט.",
	"@@Shaded-Relief_Scaling_tag0@@": "התוצאה המוצללת מותאמת לקנה המידה באופן דינמי על ידי כוונון פקטור Z תוך שימוש באחת משתי אפשרויות:",
	"@@Shaded-Relief_Scaling_tag1@@": "<strong>ללא</strong> - לא מוחלת התאמת קנה מידה. זו האפשרות המתאימה ביותר לסט נתוני רסטר יחיד שמכסה אזור מקומי. אפשרות זו לא מומלצת לסטי נתונים כלל עולמיים עם שינויים גדולים בגובה או למפות מרובות קני-מידה, מכיוון שהיא תיצור תבליט פני שטח עם מעט מאוד שינויים בקני-מידה קטנים.",
	"@@Shaded-Relief_Scaling_tag3@@": "<strong>מותאם</strong> - החלת התאמה לא-לינארית תוך שימוש בערכי ברירת המחדל של <strong>חזקה של גודל פיקסל</strong> ושל <strong>פקטור גודל פיקסל</strong>, להכללת מגוון רחב של שינויי גובה (קנה מידה) בשעה שהצופה מגדיל ומקטין אל התצוגה. האפשרות <strong>מותאם</strong> מומלצת בעת שימוש בסט נתונים כלל עולמי.",
	"@@Shaded-Relief_Z-Factor_tag0@@": "פקטור Z הוא פקטור שינוי קנה מידה אשר משמש להמרת ערכי הגובה לשתי מטרות:",
	"@@Shaded-Relief_Z-Factor_tag1@@": "להמרת יחידות הגובה (כגון מטרים או רגל) ליחידות הקואורדינטות האופקיות של סט הנתונים, שעשויות להיות רגל, מטרים או מעלות",
	"@@Shaded-Relief_Z-Factor_tag2@@": "להוספת הגזמה אנכית להשגת אפקט ויזואלי",
	"@@Shaded-Relief_Z-Factor_tag3@@": "התוצאה המוצללת מותאמת לקנה המידה באופן דינמי על ידי כוונון פקטור Z תוך שימוש באחת משתי אפשרויות:",
	"@@Shaded-Relief_Z-Factor_tag4@@": "<strong>ללא</strong> - לא מוחלת התאמת קנה מידה. זו האפשרות המתאימה ביותר לסט נתוני רסטר יחיד שמכסה אזור מקומי. אפשרות זו לא מומלצת לסטי נתונים כלל עולמיים עם שינויים גדולים בגובה או למפות מרובות קני-מידה, מכיוון שהיא תיצור תבליט פני שטח עם מעט מאוד שינויים בקני-מידה קטנים.",
	"@@Shaded-Relief_Z-Factor_tag6@@": "<strong>מותאם</strong> - החלת התאמה לא-לינארית תוך שימוש בערכי ברירת המחדל של <strong>חזקה של גודל פיקסל</strong> ושל <strong>פקטור גודל פיקסל</strong>, להכללת מגוון רחב של שינויי גובה (קנה מידה) בשעה שהצופה מגדיל ומקטין אל התצוגה. האפשרות <strong>מותאם</strong> מומלצת בעת שימוש בסט נתונים כלל עולמי.",
	"@@Shaded-Relief_hillshadetype_tag0@@": "שולט במקור האור של ההצללה.",
	"@@Shaded-Relief_hillshadetype_tag1@@": "<strong>מסורתי</strong> - מחשב הצללה מכיוון אור יחיד. ניתן להגדיר את האפשרויות <strong>אזימוט</strong> ו<strong>גובה</strong> כדי לשלוט במיקום מקור האור. זוהי ברירת המחדל.",
	"@@Shaded-Relief_hillshadetype_tag2@@": "<strong>רב-כיווני</strong> - משלב אור ממספר מקורות לייצוג ויזואליזציה מחוזקת של פני השטח.",
	"@@Shaded-Relief_PSPower_tag0@@": "<strong>כוח גודל פיקסל</strong> מייצג שינויים בגובה (או בקנה המידה) בשעה שהצופה מגדיל ומקטין אל תצוגת המפה. זוהי החזקה שמוחלת על מונח גודל הפיקסל במשוואה ששולטת בשיעור שבו <strong>פקטור Z</strong> משתנה למניעת אובדן משמעותי של תבליט.",
	"@@Shaded-Relief_PSPower_tag1@@": "פרמטר זה חוקי רק כאשר סוג <strong>קנה המידה</strong> הוא <strong>מותאם</strong>. ערך ברירת המחדל הוא 0.664.",
	"@@Shaded-Relief_PSZFactor_tag0@@": "<strong>'פקטור גודל פיקסל</strong> מייצג שינויים בקנה המידה בשעה שהצופה מגדיל ומקטין אל תצוגת המפה. הוא שולט בשיעור שבו <strong>פקטור Z</strong> משתנה.",
	"@@Shaded-Relief_PSZFactor_tag1@@": "פרמטר זה חוקי רק כאשר סוג <strong>קנה המידה</strong> הוא <strong>מותאם</strong>. ערך ברירת המחדל הוא 0.024.",
	"@@Sin_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Sin_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Sin_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Sin_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Sin_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Sin_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Sin_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Sin_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Sin_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Sin_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Sin_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Sin_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הסינוס.",
	"@@SinH_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@SinH_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@SinH_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@SinH_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@SinH_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@SinH_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@SinH_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@SinH_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@SinH_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@SinH_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@SinH_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@SinH_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הסינוס ההיפרבולי.",
	"@@Sink_Flow-Direction-Raster_tag0@@": "רסטר הקלט שמראה את כיוון הזרימה החוצה מכל תא.",
	"@@Sink_Flow-Direction-Raster_tag1@@": "רסטר כיוון הזרימה יכול להיווצר ידי הפעלת הפונקציה <strong>כיוון זרימה</strong>.",
	"@@Slope_DEM_tag0@@": "רסטר גובה הקלט.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag0@@": "השימוש באפשרות זו מונע ארטיפקטים של דגימה מחדש אשר עלולים להתרחש לאורך הקצוות של הרסטר. הפיקסלים של הפלט לאורך הקצה של רסטר או לצד פיקסלים ללא ערך יאוכלסו ב-NoData; לפיכך, מומלץ להשתמש באפשרות זו רק כאשר קיימים רסטרים אחרים עם פיקסלים חופפים זמינים. כאשר פיקסלים חופפים זמינים, אזורים אלה של NoData יציגו את ערכי הפיקסלים החופפים במקום להיות ריקים.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag1@@": "לא מסומן - דגימה מחדש ביליניארית תוחל באחידות לדגימה מחדש של השיפוע. זוהי ברירת המחדל.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag2@@": "מסומן - יעשה שימוש בדגימה מחדש ביליניארית בתוך השיפוע, למעט לאורך הקצוות של הרסטרים או לצד פיקסלים NoData. פיקסלים אלה יאוכלסו ב-NoData, מכיוון שיפחיתו את כל ההשפעות של קצה חד אשר עלולים לקרות.",
	"@@Slope_Scaling_tag0@@": "ההטיה של השיפוע יכולה להיות פלט כערך במעלות או עלייה באחוזים. קיימות שלוש אפשרויות עבור <strong>התאמת קנה מידה</strong>:",
	"@@Slope_Scaling_tag3@@": "<strong>מעלה</strong> - ההטיה של השיפוע מחושבת במעלות. הערכים יכולים להיות בטווח בין 0 ל-90.",
	"@@Slope_Scaling_tag5@@": "<strong>עלייה_באחוזים</strong> - ההטיה של השיפוע מחושבת כערכי אחוזים. הערכים יכולים להיות בטווח בין 0 לאינסוף. העלייה באחוזים של פני שטח שטוחים היא 0, בעוד העלייה באחוזים של פני שטח ב-45 מעלות היא 100. ככל שפני השטח הופכים ליותר אנכיים, העלייה באחוזים הולכת וגדלה.",
	"@@Slope_Scaling_tag7@@": "<strong>קנה מידה</strong> - ההטיה של השיפוע מחושבת כמו עבור 'מעלות', אבל פקטור Z מותאם לקנה המידה. משתמש בערכים של <strong>חזקת גודל פיקסל</strong> ו<strong>פקטור גודל פיקסל</strong>, אשר מציינים את שינויי הרזולוציה (קנה המידה) בשעה שהצופה מגדיל ומקטין את התצוה. אפשרות זו מומלצת בעת שימוש בסטים של נתונים עולמיים - במיוחד בעת שימוש בשיפוע כפני שטח להצגה חזותית.",
	"@@Slope_Scaling_tag13@@": "התאמת פקטור Z נעשית באמצעות המשוואה הבאה:",
	"@@Slope_Scaling_tag14@@": "פקטור Z מותאם = (פקטור Z) + (גודל פיקסל)",
	"@@Slope_Scaling_tag15@@": "x (פקטור גודל פיקסל)",
	"@@Slope_Scaling_tag16@@": "כוח גודל פיקסל",
	"@@Slope_Z-Factor_tag0@@": "<strong>פקטור Z</strong> הוא פקטור שינוי קנה מידה אשר משמש להמרת ערכי הגובה לשתי מטרות:",
	"@@Slope_Z-Factor_tag3@@": "להמרת יחידות הגובה (כגון מטרים או רגל) ליחידות הקואורדינטות האופקיות של סט הנתונים, שעשויות להיות רגל, מטרים או מעלות",
	"@@Slope_Z-Factor_tag4@@": "להוספת הגזמה אנכית להשגת אפקט ויזואלי",
	"@@Slope_PSPower_tag0@@": "<strong>כוח גודל פיקסל</strong> מייצג שינויים בגובה (או בקנה המידה) בשעה שהצופה מגדיל ומקטין אל תצוגת המפה. זוהי החזקה שמוחלת על מונח גודל הפיקסל במשוואה ששולטת בשיעור שבו <strong>פקטור Z</strong> משתנה למניעת אובדן משמעותי של תבליט.",
	"@@Slope_PSPower_tag1@@": "פרמטר זה חוקי רק כאשר סוג <strong>קנה המידה</strong> הוא <strong>בקנה מידה</strong>. ערך ברירת המחדל הוא 0.664.",
	"@@Slope_PSZFactor_tag0@@": "<strong>'פקטור גודל פיקסל</strong> מייצג שינויים בקנה המידה בשעה שהצופה מגדיל ומקטין אל תצוגת המפה. הוא שולט בשיעור שבו <strong>פקטור Z</strong> משתנה.",
	"@@Slope_PSZFactor_tag1@@": "פרמטר זה חוקי רק כאשר סוג <strong>קנה המידה</strong> הוא <strong>בקנה מידה</strong>. ערך ברירת המחדל הוא 0.024.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag0@@": "שכבת הרסטר של הצטברות זרימת הקלט.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag1@@": "ניתן ליצור זאת באמצעות פונקציית <strong>זרימה מצטברת</strong>.",
	"@@Snap-Pour-Point_Pour-Point-Field_tag0@@": "השדה אשר משמש להקצאת ערכים למיקומי נקודת השפיכה.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag0@@": "מיקומי נקודת השפיכה שיוצמדו.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag1@@": "עבור שכבת רסטר הקלט, כל התאים שאינם NoData (כלומר, שיש להם ערך) ייחשבו לנקודות שפיכה ויוצמדו.",
	"@@Snap-Pour-Point_Snap-Distance_tag0@@": "המרחק המקסימלי, ביחידות מפה, לחיפוש של תא בעל זרימת מצטברת גבוהה יותר.",
	"@@Speckle_Additive-Noise-Mean_tag0@@": "מציין את ערך הממוצע של רעש מצטבר. ערך ממוצע רעש גדול יותר יפיק פחות החלקה, בעוד שערך קטן יותר יוביל להחלקה רבה יותר.",
	"@@Speckle_Additive-Noise-Mean_tag1@@": "פרמטר זה חוקי רק כאשר <strong>סוג מסנן</strong> הוא <strong>מסנן Lee</strong> ו<strong>מודל רעש</strong> הוא <strong>רעש מצטבר</strong> או <strong>רעש מצטבר ומוכפל</strong>. ערך ברירת המחדל הוא 0.",
	"@@Speckle_Damping-Factor_tag0@@": "מציין את מידת אפקט הריסון האספוננציאלי על סינון. ערך ממוצע רעש גדול יותר יפיק פחות החלקה, בעוד שערך קטן יותר יוביל להחלקה רבה יותר. הערך 0 יפיק את אותו פלט כמו מסנן שמעביר ערוצים בתדירות נמוכה.",
	"@@Speckle_Damping-Factor_tag1@@": "פרמטר זה חוקי רק כאשר <strong>סוג מסנן</strong> הוא <strong>מסנן Lee משופר</strong> או <strong>מסנן Frost</strong>. ערך ברירת המחדל הוא 1.",
	"@@Speckle_Filter-Size_tag0@@": "מציין את גודל חלון הפיקסל אשר משמש לסינון רעש:",
	"@@Speckle_Filter-Size_tag1@@": "3x3",
	"@@Speckle_Filter-Size_tag2@@": "5x5",
	"@@Speckle_Filter-Size_tag3@@": "7x7",
	"@@Speckle_Filter-Size_tag4@@": "9x9",
	"@@Speckle_Filter-Size_tag5@@": "11x11",
	"@@Speckle_Filter-Type_tag0@@": "מציין את סוג המסנן שבו יש להשתמש באלגוריתם ההחלטה להסרת רעש של כתמי צבע:",
	"@@Speckle_Filter-Type_tag1@@": "<strong>פילטר Lee</strong> - מפחית את הרעש של כתמי צבע על ידי החל מסנן מרחבי על כל פיקסל בתמונה, אשר מסנן את הנתונים על בסיס ערכים סטטיסטיים מקומיים שחושבו בתוך חלון מרובע. מסנן זה שימושי כאשר ברצונך להחליק נתונים עם כתמי צבעים שיש להם רכיב מצטבר או מוכפל. זוהי ברירת המחדל.",
	"@@Speckle_Filter-Type_tag3@@": "<strong>מסנן Lee משופר</strong> - גרסה מותאמת של מסנן Lee שכוללת <strong>פקטור דעיכה</strong> ו<strong>מספר מבטים</strong>. מסנן זה שימושי כאשר ברצונך להפחית כתמי צבעים תוך שמירת מידע הטקסטורה.",
	"@@Speckle_Filter-Type_tag9@@": "<strong>מסנן Frost</strong> - מפחית רעש של כתמי צבע בעזרת מסנן סימטרי מעגלית מרסן אקספוננציאלית אשר משתמש בנתונים סטטיסטיים מקומיים בתוך חלונות מסנן נפרדים. מסנן זה שימושי כאשר ברצונך להפחית כתמי צבעים תוך שמירת קצוות בתמונות רדאר.",
	"@@Speckle_Filter-Type_tag11@@": "<strong>מסנן Kuan</strong> - בדומה למסנן Lee, מסנן זה מחיל מסנן מרחבי על כל פיקסל בתמונה ומסנן את הנתונים על בסיס נתונים סטטיסטיים מקומיים שחושבו בתוך חלון מרובע. מסנן זה שימושי כאשר ברצונך להפחית כתמי צבעים תוך שמירת קצוות בתמונות רדאר.",
	"@@Speckle_Multiplicative-Noise-Mean_tag0@@": "מציין את ערך הממוצע של רעש מוכפל. ערך ממוצע רעש גדול יותר יפיק פחות החלקה, בעוד שערך קטן יותר יוביל להחלקה רבה יותר.",
	"@@Speckle_Multiplicative-Noise-Mean_tag1@@": "פרמטר זה חוקי רק כאשר <strong>סוג מסנן</strong> הוא <strong>מסנן Lee</strong> ו<strong>מודל רעש</strong> הוא <strong>רעש מצטבר</strong> או <strong>רעש מצטבר ומוכפל</strong>. ערך ברירת המחדל הוא 1.",
	"@@Speckle_Noise-Model_tag0@@": "מציין את סוג הרעש שמפחית את איכות תמונת הרדאר:",
	"@@Speckle_Noise-Model_tag1@@": "<strong>רעש מוכפל</strong> - רעש אות אקראי שמוכפל לתוך האות הרלוונטי במהלך לכידה או שידור",
	"@@Speckle_Noise-Model_tag3@@": "<strong>רעש מצטבר</strong> - רעש אות אקראי שמצטבר לתוך האות הרלוונטי במהלך לכידה או שידור",
	"@@Speckle_Noise-Model_tag5@@": "<strong>רעש מצטבר ורעש מוכפל</strong> - שני המודלים של רעש",
	"@@Speckle_Noise-Variance_tag0@@": "מציין את שונות הרעש של תמונת הרדאר.",
	"@@Speckle_Noise-Variance_tag1@@": "פרמטר זה חוקי רק כאשר <strong>סוג מסנן</strong> הוא <strong>מסנן Lee</strong> ו<strong>מודל רעש</strong> הוא <strong>רעש מצטבר</strong> או <strong>רעש מצטבר ומוכפל</strong>. ערך ברירת המחדל הוא 0.25.",
	"@@Speckle_Number-of-Looks_tag0@@": "מציין את מספר המבטים של תמונה, אשר שולט בהחלקת תמונה ואומד שונות רעש. ערך קטן יותר יוביל ליותר החלקה, בעוד ערך גדול יותר שומר על יותר מאפייני תמונה.",
	"@@Speckle_Number-of-Looks_tag1@@": "פרמטר זה חוקי רק כאשר <strong>סוג מסנן</strong> הוא <strong>מסנן Lee</strong> ו<strong>מודל רעש</strong> הוא <strong>רעש מצטבר</strong>, או כאשר <strong>סוג מסנן</strong> הוא <strong>מסנן Kuan</strong>. ערך ברירת המחדל הוא 1.",
	"@@Speckle_Raster_tag0@@": "רסטר הקלט.",
	"@@Spectral-Conversion_Conversion-Matrix_tag0@@": "המטריצה אשר משמשת להמר רסטר הקלט.",
	"@@Spectral-Conversion_Conversion-Matrix_tag1@@": "המשוואה אשר משמשת לביצוע המרה זו היא:",
	"@@Spectral-Conversion_Conversion-Matrix_tag2@@": "Output Band_R = Weight_P * Band_C",
	"@@Spectral-Conversion_Conversion-Matrix_tag3@@": "כאשר:",
	"@@Spectral-Conversion_Conversion-Matrix_tag4@@": "Band_R מייצג את ערוץ הפלט, שבו R הוא מספר מ-1 ועד למספר ערוצי הפלט.",
	"@@Spectral-Conversion_Conversion-Matrix_tag5@@": "Weight_P מייצג רשימת מופרדת-בפסיקים של משקלים, 1 עבור כל ערוץ קלט. סכום המשקלים עבור כל ערוץ חייב להיות שווה ל-1.",
	"@@Spectral-Conversion_Conversion-Matrix_tag6@@": "Band_C מייצג את תמונת הקלט, שבה C הוא מספר מ-1 ועד למספר הערוצים של תמונת הקלט.",
	"@@Spectral-Conversion_Raster_tag0@@": "רסטר הקלט.",
	"@@Spectral-Conversion_Raster_tag1@@": "זה יכול להיות סט נתוני רסטר, סט נתוני מוזאיקה או שירות תמונה.",
	"@@Spectral-Conversion_Size_tag0@@": "מספר השורות ועמודות ב<strong>מטריצת המרה</strong>.",
	"@@Square_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Square_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Square_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Square_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Square_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Square_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Square_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Square_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Square_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Square_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Square_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Square_Raster_tag0@@": "ערכי הקלט שיש לרבע.",
	"@@Square-Root_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Square-Root_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Square-Root_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Square-Root_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Square-Root_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Square-Root_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Square-Root_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Square-Root_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Square-Root_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Square-Root_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Square-Root_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Square-Root_Raster_tag0@@": "ערכי הקלט אשר משמשים למציאת השורש הריבועי.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag0@@": "הגדר את הערכים הסטטיסטיים עבור כל ערוץ.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag1@@": "העמודה ${Histogram} היא שדה לקריאה בלבד שניתן לאכלסו באמצעות הפרמטר <strong>ייבוא</strong>. אם אתה מייבא קובץ היסטוגרמה, העמודה ${Histogram} תסומן בתור <strong>מוגדר</strong>.",
	"@@Statistics-and-Histogram_Import_tag0@@": "יבא את התונים הסטטיסטיים ופרטי ההיסטוגרמה מרסטר או מקובץ XML קיימים.",
	"@@Statistics-and-Histogram_Raster_tag0@@": "רסטר הקלט שדורש הגדרה של החישובים הסטטיסטיים וההיסטוגרמה.",
	"@@Statistics-and-Histogram_Statistics_tag0@@": "הגדר את הערכים הסטטיסטיים עבור כל ערוץ.",
	"@@Stream-Link_Flow-Direction-Raster_tag0@@": "רסטר הקלט שמראה את כיוון הזרימה החוצה מכל תא.",
	"@@Stream-Link_Flow-Direction-Raster_tag1@@": "רסטר כיוון הזרימה יכול להיווצר ידי הפעלת הפונקציה <strong>כיוון זרימה</strong>.",
	"@@Stream-Link_Stream-Raster_tag0@@": "רסטר הקלט שמייצג רשת זרימה לינארית.",
	"@@Stream-Order_Flow-Direction-Raster_tag0@@": "רסטר הקלט שמראה את כיוון הזרימה החוצה מכל תא.",
	"@@Stream-Order_Flow-Direction-Raster_tag1@@": "רסטר כיוון הזרימה יכול להיווצר ידי הפעלת הפונקציה <strong>כיוון זרימה</strong>.",
	"@@Stream-Order_Order-Method_tag0@@": "השיטה המשמשת להקצאת סדר זרימה.",
	"@@Stream-Order_Order-Method_tag1@@": "<strong>STRAHLER</strong> - שיטת סדר הזרימה שהוצע על ידי Strahler ב-1952. סדר הזרימה עולה רק כאשר זרימות מאותו סדר מצטלבות. ההצטלבות של קישור מסדר ראשון ומסדר שני תישאר קישור מסדר שני, במקום ליצור קישור מסדר שלישי. זוהי ברירת המחדל.",
	"@@Stream-Order_Order-Method_tag3@@": "<strong>SHREVE</strong> - שיטת סדר הזרימה לפי עוצמה, שהוצע על ידי Shreve ב-1967. לכל הקישורים שאין להם פלגים מוקצית עוצמה (סדר) של אחד. העוצמות מצטברות במורד השיפוע. כאשר שני קישורים מצטלבים, העוצמות שלהם מתווספות ומוקצה להן קישור במורד השיפוע.",
	"@@Stream-Order_Stream-Raster_tag0@@": "רסטר זרימת קלט שמייצג רשת זרימה לינארית.",
	"@@Stretch_Auto-Gamma_tag0@@": "השתמש ב<strong>גמא אוטומטית</strong> כדי לחשב גמא מהנתונים הסטטיסטיים וההיסטוגרמה של סט הנתונים. הנתונים הסטטיסטיים יכולים להיות אומדן של נתונים סטטיסטיים על ידי הפונקציה עצמה, או שהאומדן יתבצע על ידי התוכנה אם בחרת שכבה.",
	"@@Stretch_Dynamic-Range-Adjustment_tag0@@": "סמן את תיבת הסימון <strong>התאמת טווח דינאמית</strong> אם ברצונך שהנתונים הסטטיסטיים יחושבו רק מהפיקסלים שמוצגים על המסך. אפשרות זו בדרך כלל מיושמת כאשר התמונה תתפרסם ויעשה בה שימוש באפליקציית ווב שלא יכולה לבצע סוג זה של מתיחה.",
	"@@Stretch_Estimate-Statistics_tag0@@": "סמן את תיבת הסימון <strong>הערך סטטיסטיקות</strong> אם ברצונך להעריך את הנתונים הסטטיסטיים. הנתונים הסטטיסטיים המוערכים מחושבים מדגימה של 1000 על 1000 ממרכז הרסטר והמתיחה משתמשת בהם.",
	"@@Stretch_Estimate-Statistics_tag3@@": "אם אפשרות זו מסומנת ולרסטר יש נתונים סטטיסטיים, או שהזנת ערכים בטבלה <strong>נתונים סטטיסטיים</strong>, יעשה בהם שימוש במקום הערכה, אלא אם כן המתיחה דורשת היסטוגרמה. אם המתיחה דורשת היסטוגרמה שלא קיימת, תתבצע הערכה שלה.",
	"@@Stretch_Gamma_tag0@@": "השתמש במחוון כדי להגדיר ידנית את הערך של <strong>גמא</strong>.",
	"@@Stretch_Number-Of-Standard-Deviations_tag0@@": "ציין את ערך n עבור מספר סטיות התקן לשימוש. נעשה שימוש בשיטה זו כדי להדגיש עד כמה ערכי ישות שונים מהערך הממוצע; מרב התועלת ממנה מופקת בעת שימוש על נתונים עם התפלגות נורמלית.",
	"@@Stretch_Output-Maximum_tag0@@": "הגדר את ערך הפיקסל הגבוה ביותר עבור ההיסטוגרמה.",
	"@@Stretch_Output-Maximum_tag1@@": "הערכים <strong>מינימום פלט</strong> ו<strong>מקסימום פלט</strong> יגדירו את טוח הערכים שלאחר מכן יעברו מתיחת ניגודיות לינארית.",
	"@@Stretch_Output-Minimum_tag0@@": "הגדר את ערך הפיקסל הנמוך ביותר עבור ההיסטוגרמה.",
	"@@Stretch_Output-Minimum_tag1@@": "הערכים <strong>מינימום פלט</strong> ו<strong>מקסימום פלט</strong> יגדירו את טוח הערכים שלאחר מכן יעברו מתיחת ניגודיות לינארית.",
	"@@Stretch_Percent-Clip-Maximum_tag0@@": "ציין את האחוז של הערכים הגבוהים שאין לכלול במתיחה.",
	"@@Stretch_Percent-Clip-Maximum_tag1@@": "ערכים חוקיים הם בין 0 ל-99.",
	"@@Stretch_Percent-Clip-Minimum_tag0@@": "ציין את האחוז של הערכים הנמוכים שאין לכלול במתיחה.",
	"@@Stretch_Percent-Clip-Minimum_tag1@@": "ערכים חוקיים הם בין 0 ל-99.",
	"@@Stretch_Raster_tag0@@": "רסטר הקלט למתיחת ניגודיות.",
	"@@Stretch_Sigmoid-Strength-Level_tag0@@": "<strong>רמת עוצמה</strong> קובע בכמה מפונקציית סיגמואיד יעשה שימוש במתיחה. ערך נמוך כגון 1, ישתמש רק בחלק האמצעי של העקומה, שנוטה ליצור צבעים חלשים וחיוורים. ערך גבוה כגון 6, ישתמש רק בעקומה כולה, שנוטה ליצור צבעים מודגשים וחדים.",
	"@@Stretch_Statistics_tag0@@": "באפשרותך להוסיף סטטיסטיקות משלך בתיבת הדו-שיח. כברירת מחדל, הסטטיסטיקות מאוחזרות מהנתונים; עם זאת, במקום זאת יעשה שימוש בכל ערך שאתה מזין בפרמטר זה.",
	"@@Stretch_Type_tag0@@": "בחר בשיטת סוג המתיחה:",
	"@@Stretch_Type_tag1@@": "ללא - ללא מתיחת ניגודיות",
	"@@Stretch_Type_tag2@@": "StdDev - מתיחת סטיית תקן",
	"@@Stretch_Type_tag3@@": "MinMax - מתיחת מינימום-מקסימום",
	"@@Stretch_Type_tag4@@": "PercentMinMax - מתיחת גזירת אחוז",
	"@@Stretch_Type_tag5@@": "סיגמואיד - מתיחת סיגמואיד",
	"@@Stretch_Use-Gamma_tag0@@": "סמן את תיבת הסימון <strong>השתמש בגמא</strong> אם ברצונך להחיל מתיחת גמא.",
	"@@Swath_Cellsize_tag0@@": "גודל התא עבור רסטר הפלט יזוהה אוטומטית; אך באפשרותך לשנות זאת אם תרצה. ניתן לשנות את גודל התא, אך התיחום של סט נתוני הרסטר יישאר זהה.",
	"@@Swath_Interpolation-Method_tag0@@": "קיימות ארבע שיטות דגימה מחדש עבור פונקציה זו:",
	"@@Swath_Interpolation-Method_tag1@@": "<strong>שכן קרוב ביותר</strong> - מחשב ערך פיקסל תוך שימוש בפיקסל הקרוב ביותר. אם לא קיימים פיקסלים של מקור, לא ניתן ליצור פיקסל חדש בפלט.",
	"@@Swath_Interpolation-Method_tag3@@": "<strong>ביליניארי</strong> - מחשב את ערך הפיקסל תוך שימוש בערך המרחק המשוקלל של ארבעת הפיקסלים הקרובים ביותר.",
	"@@Swath_Interpolation-Method_tag5@@": "<strong>Tinning לינארי</strong> - משתמש ברשת לא סדירה משולשת מנקודות המרכז של כל תא ברסטר הלא סדיר לביצוע אינטרפולציה של משטח שלאחר מכן מומר לרסטר סדיר.",
	"@@Swath_Interpolation-Method_tag7@@": "<strong>שכנים טבעיים</strong> - מבצע הקצאת השכן הקרוב ביותר, זוהי שיטת האינטרפולציה המהירה ביותר מכולן. היא משמשת בעיקר עבור נתונים בדידים, כגון סיווג שימוש בקרקע, מכיוון שהיא לא תשנה את הערכים של התאים. השגיאה המרחבית המקסימלית תהיה מחצית מגודל התא.",
	"@@Swath_Raster_tag0@@": "הרסטר המרושת באופן לא סדיר לדגימה מחדש.",
	"@@Tan_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Tan_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Tan_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Tan_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Tan_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Tan_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Tan_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Tan_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Tan_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Tan_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Tan_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Tan_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הטנגנס.",
	"@@TanH_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@TanH_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@TanH_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@TanH_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@TanH_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@TanH_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@TanH_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@TanH_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@TanH_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@TanH_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@TanH_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@TanH_Raster_tag0@@": "הקלט שעבורו יש לחשב את ערכי הטנגנס ההיפרבולי.",
	"@@Tasseled-Cap_Raster_tag0@@": "רסטר הקלט שעליו תבוצע טרספורמציית Tasseled Cap.",
	"@@Times_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Times_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Times_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Times_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Times_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Times_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Times_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Times_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Times_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Times_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Times_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Times_Raster_tag0@@": "הקלט שמכיל את ערכים להכפלה.",
	"@@Times_Raster_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Times_Raster2_tag0@@": "הקלט שמכיל את הערכים שבהם הקלט יוכפל.",
	"@@Times_Raster2_tag1@@": "ניתן להשתמש בערך קבוע כקלט עבור פרמטר זה, בתנאי שצוין רסטר עבור הפרמטר האחר.",
	"@@Transpose-Bits_Bit-Pattern_tag0@@": "בחר את סוג השינוי לביצוע או ציין שינוי מותאם אישית:",
	"@@Transpose-Bits_Bit-Pattern_tag1@@": "Landsat 8 Cirrus",
	"@@Transpose-Bits_Bit-Pattern_tag2@@": "עננים‬ של Landsat 8",
	"@@Transpose-Bits_Bit-Pattern_tag3@@": "צללי עננים של Landsat 8",
	"@@Transpose-Bits_Bit-Pattern_tag4@@": "מילוי ייעודי של Landsat 8",
	"@@Transpose-Bits_Bit-Pattern_tag5@@": "מסגרת נעלמת של Landsat 8",
	"@@Transpose-Bits_Bit-Pattern_tag6@@": "שלג/קרח של Landsat 8",
	"@@Transpose-Bits_Bit-Pattern_tag7@@": "פני קרקע אטומים של Landsat 8",
	"@@Transpose-Bits_Bit-Pattern_tag8@@": "צמחייה של Landsat 8",
	"@@Transpose-Bits_Bit-Pattern_tag9@@": "כיסוי מים של Landsat 8",
	"@@Transpose-Bits_Bit-Pattern_tag10@@": "מוגדר ע\"י המשתמש",
	"@@Transpose-Bits_Constant-Value_tag0@@": "ערך אופציונלי אשר ישמש למילוי כל הביטים שאינם מעורבים בשינוי. פרמטר זה נחשף כאשר הפרמטר <strong>צור רסטר מילוי מקבוע</strong> מוגדר ל<strong>כן</strong>.",
	"@@Transpose-Bits_Fill-Raster_tag0@@": "ציין סט נתוני רסטר אשר ישמש למילוי כל הביטים שאינם מעורבים בשינוי. פרמטר זה נחשף כאשר הפרמטר <strong>צור רסטר מילוי מקבוע</strong> מוגדר ל<strong>לא</strong>.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag0@@": "צור רסטר מילוי על ידי שימוש בערך קבוע:",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag1@@": "<strong>כן</strong> - יעשה שימוש בערך קבוע ליצירת רסטר למילוי הביטים שאינם מעורבים בשינוי. זוהי ברירת המחדל.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag3@@": "<strong>לא</strong> - יעשה שימוש בערכי פיקסל מסט נתוני רסטר קיים למילוי הביטים שאינם מעורבים בשינוי.",
	"@@Transpose-Bits_Output-Bit-and-Input-Bit_tag0@@": "טבלה לקריאה בלבד שמציגה את הביטים של הפלט והקלטים שיתפסו את מקומם.",
	"@@Transpose-Bits_Raster_tag0@@": "רסטר הקלט לפתיחת חבילה ולמיפוי מחדש.",
	"@@Unit-Conversion_From-Unit_tag0@@": "סוג היחידה המקורי של הפיקסלים.",
	"@@Unit-Conversion_Raster_tag0@@": "רסטר הקלט שיכיל את היחידות המומרות.",
	"@@Unit-Conversion_To-Unit_tag0@@": "סוג היחידה הממורת של הפיקסלים.",
	"@@Vector-Field_Angle-Reference-System_tag0@@": "מציין כיצד רכיב הכיוון נמדד.",
	"@@Vector-Field_Angle-Reference-System_tag1@@": "גיאוגרפי - 0° מצביע על צפון מוחלט, 90° מצביע על מזרח מוחלט",
	"@@Vector-Field_Angle-Reference-System_tag2@@": "אריתמטי - 0° מצביע על מזרח מוחלט, 90° מצביע על צפון מוחלט",
	"@@Vector-Field_Input-Data-Type_tag0@@": "סוג שדה הווקטור שהקלטים מייצגים.",
	"@@Vector-Field_Input-Data-Type_tag1@@": "לא ידוע - לא ידוע אם הקלטים מייצגים U-V או עוצמה-כיוון.",
	"@@Vector-Field_Input-Data-Type_tag2@@": "U-V - נתוני קלט מייצגים רכיבי U ו-V.",
	"@@Vector-Field_Input-Data-Type_tag3@@": "עוצמה-כיוון - נתוני קלט מייצגים רכיבי עוצמה וכיוון.",
	"@@Vector-Field_Output-Data-Type_tag0@@": "מציין את סוג שדה הווקטור שהפלט ייצג.",
	"@@Vector-Field_Output-Data-Type_tag1@@": "עוצמה-כיוון - נתוני פלט מייצגים עוצמה וכיוון.",
	"@@Vector-Field_Output-Data-Type_tag2@@": "U-V - נתוני פלט מייצגים רכיבי U ו-V.",
	"@@Vector-Field_Raster1_tag0@@": "רסטר הקלט הראשון.",
	"@@Vector-Field_Raster1_tag1@@": "זה יהיה ערך U או העוצמה.",
	"@@Vector-Field_Raster2_tag0@@": "רסטר הקלט השני.",
	"@@Vector-Field_Raster2_tag1@@": "זה יהיה ערך V או הכיוון.",
	"@@Viewshed_Analysis-Method_tag0@@": "בחר את השיטה שלפיה הנראות תחושב. באפשרות זו ניתן לוותר על מידת דיוק לטובת שיפור הביצועים.",
	"@@Viewshed_Analysis-Method_tag1@@": "כל שדות הראייה - שדה ראייה מתבצע על כל פיקסל ברסטר כדי ליצור אזורי נראות. זוהי השיטה שמוגדרת כברירת מחדל.",
	"@@Viewshed_Analysis-Method_tag2@@": "שדות ראייה היקפיים - שדות ראייה מתבצעים רק על פיקסלים בהיקף של האזורים הנראים כדי ליצור אזורי נראות. לשיטה זו יש ביצועים טובים יותר מאלה של השיטה <strong>כל שדות הראייה</strong> מכיוון שפחות שדות ראייה כלולות בחישוב.",
	"@@Viewshed_Analysis-Type_tag0@@": "בחר איזה סוג של ניתוח נראות ברצונך לבצע, בין אם לקבוע עד כמה כל תא זמין לצופים, או לזהות עבור כל מיקום פני שטח אילו צופים נראים.",
	"@@Viewshed_Analysis-Type_tag1@@": "תדירות - מספר הפעמים שכל מיקום פיקסל ברסטר הקלט של פני השטח יכול להיראות על ידי מיקומי הצפייה של הקלט (כנקודות או כנקודות מפנה עבור ישויות צופה קוויות). זוהי ברירת המחדל.",
	"@@Viewshed_Analysis-Type_tag2@@": "צופים - הפלט מזהה במדויק אילו נקודות צופה נראות מכל מיקום פני שטח של הרסטר. בסוג ניתוח זה, המספר המרבי המותר של צופי קלט הוא 32.",
	"@@Viewshed_Horizontal-End-Angle_tag0@@": "ערך זה מגדיר את זווית הקצה של טווח הסריקה האופקי. יש לציין את הערך במעלות מ-0 עד 360.0, כאשר 0 מכוון לצפון. ערך ברירת המחדל הוא 360.0.",
	"@@Viewshed_Horizontal-End-Angle_tag1@@": "זה יכול להיות שדה בסט נתוני <strong>מאפייני צופה</strong> או ערך מספרי. עם פרמטר זה מוגדר לערך, ערך זה יוחל על כל הצופים. כדי לציין ערכים שונים לכל צופה, הגדר פרמטר זה לשדה בסט הנתונים של <strong>מאפייני צופה</strong>.",
	"@@Viewshed_Horizontal-Start-Angle_tag0@@": "ערך זה מגדיר את זווית ההתחלה של טווח הסריקה האופקי. יש לציין את הערך במעלות מ-0 עד 360.0, כאשר 0 מכוון לצפון. ערך ברירת המחדל הוא 0.",
	"@@Viewshed_Horizontal-Start-Angle_tag1@@": "זה יכול להיות שדה בסט נתוני <strong>מאפייני צופה</strong> או ערך מספרי. עם פרמטר זה מוגדר לערך, ערך זה יוחל על כל הצופים. כדי לציין ערכים שונים לכל צופה, הגדר פרמטר זה לשדה בסט הנתונים של <strong>מאפייני צופה</strong>.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag0@@": "סוג המרחק עבור פרמטר הרדיוס הפנימי.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag1@@": "לא מסומן - <strong>רדיוס פנימי</strong> יפורש כמרחק דו-ממדי. זוהי ברירת המחדל.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag4@@": "מסומן - <strong>רדיוס פנימי</strong> יפורש כמחרק תלת-ממדי.",
	"@@Viewshed_Inner-Radius_tag0@@": "ערך זה מגדיר את מרחק ההתחלה (מינימום) שממנו נקבעת הנראות. תאים קרובים יותר ממרחק זה נחשבים ללא נראים בפלט, אך עדיין יכולים לחסום את הנראות של הפיקסלים בין <strong>רדיוס פנימי</strong> ל<strong>רדיוס חיצוני</strong>. ערך ברירת המחדל הוא 0.",
	"@@Viewshed_Inner-Radius_tag5@@": "זה יכול להיות שדה בסט נתוני <strong>מאפייני צופה</strong> או ערך מספרי. עם פרמטר זה מוגדר לערך, ערך זה יוחל על כל הצופים. כדי לציין ערכים שונים לכל צופה, הגדר פרמטר זה לשדה בסט הנתונים של <strong>מאפייני צופה</strong>.",
	"@@Viewshed_Observer-Elevation_tag0@@": "ערך זה משמש להגדרת גובהי פני השטח של נקודות צופה או נקודות מפנה.",
	"@@Viewshed_Observer-Elevation_tag1@@": "זה יכול להיות שדה בסט נתוני <strong>מאפייני צופה</strong> או ערך מספרי. אם פרמטר זה לא צוין, גובה הצופה יושג מרסטר פני השטח תוך שימוש באינטרפולציה בילינארית. עם פרמטר זה מוגדר לערך, ערך זה יוחל על כל הצופים. כדי לציין ערכים שונים לכל צופה, הגדר פרמטר זה לשדה בסט הנתונים של <strong>מאפייני צופה</strong>.",
	"@@Viewshed_Observer-Features_tag0@@": "זה דורש קבוצת ישויות קלט שמזהה את מיקומי הצופה. אלה יכולות להיות ישויות נקודה, multipoint או פולי-קו.",
	"@@Viewshed_Observer-Features_tag1@@": "קבוצת ישויות הקלט מומרת למערכת קואורדינטות גאוצנטרית תלת-ממדית במהלך חישוב הנראות. צופים מחוץ לתיחום של רסטר פני השטח, או כאלה שנמצאים בתאים שהם NoData, לא יילקחו בחשבון בחישוב.",
	"@@Viewshed_Observer-Offset_tag0@@": "ערך זה מציין מרחק אנכי (ביחידות פני שטח) שיש להוסיף לגובה הצופה. עליו להיות ערך נקודה צפה או מספר שלם חיובי.",
	"@@Viewshed_Observer-Offset_tag1@@": "זה יכול להיות שדה בסט נתוני <strong>מאפייני צופה</strong> או ערך מספרי. עם פרמטר זה מוגדר לערך, ערך זה יוחל על כל הצופים. כדי לציין ערכים שונים לכל צופה, הגדר פרמטר זה לשדה בסט הנתונים של <strong>מאפייני צופה</strong>.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag0@@": "סוג המרחק עבור פרמטר הרדיוס החיצוני.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag1@@": "לא מסומן - <strong>רדיוס חיצוני</strong> יפורש כמרחק דו-ממדי. זוהי ברירת המחדל.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag4@@": "מסומן - <strong>רדיוס חיצוני</strong> יפורש כמרחק תלת-ממדי.",
	"@@Viewshed_Outer-Radius_tag0@@": "ערך זה מגדיר את המרחק המקסימלי שממנו נקבעת הנראות. פיקסלים מעבר למרחק זה לא ייכללו בניתוח.",
	"@@Viewshed_Outer-Radius_tag1@@": "זה יכול להיות שדה בסט נתוני <strong>מאפייני צופה</strong> או ערך מספרי. עם פרמטר זה מוגדר לערך, ערך זה יוחל על כל הצופים. כדי לציין ערכים שונים לכל צופה, הגדר פרמטר זה לשדה בסט הנתונים של <strong>מאפייני צופה</strong>.",
	"@@Viewshed_Raster_tag0@@": "רסטר הקלט הנדרש של פני השטח. זה יכול להיות מספר שלם או רסטר נקודה צפה.",
	"@@Viewshed_Raster_tag1@@": "הקלט מומר למערכת קואורדינטות גאוצנטרית תלת-ממדית במהלך חישוב הנראות. תאי NoData ברסטר הקלט לא חוסמים את קביעת הנראות.",
	"@@Viewshed_Refractive-Coefficient_tag0@@": "מקדם השבירה של אור נראה באוויר.",
	"@@Viewshed_Refractive-Coefficient_tag1@@": "ערך ברירת המחדל הוא 0.13.",
	"@@Viewshed_Surface-Offset_tag0@@": "ערך זה מציין מרחק אנכי (ביחידות פני שטח) שיש להוסיף לערך Z של כל פיקסל יעד בבדיקת הנראות. עליו להיות ערך נקודה צפה או מספר שלם חיובי.",
	"@@Viewshed_Surface-Offset_tag1@@": "זה יכול להיות שדה בסט נתוני <strong>מאפייני צופה</strong> או ערך מספרי. עם פרמטר זה מוגדר לערך, ערך זה יוחל על כל הצופים. כדי לציין ערכים שונים לכל צופה, הגדר פרמטר זה לשדה בסט הנתונים של <strong>מאפייני צופה</strong>.",
	"@@Viewshed_Vertical-Error_tag0@@": "כמות אי-הוודאות, שנמדדת כשגיאה בשורש ריבועי ממוצע (RMSE), בערכי גובה בפני השטח. זהו ערך נקודה צפה שמייצ את השגיאה הצפויה של ערכי הגובה של הקלט. כאשר לפרמטר זה מוקצה ערך גדולה מ-0, רסטר הנראות של הפלט יהיה נקודה צפה. במקרה זה, כל ערך פיקסל ברסטר הנראות של הפלט מייצג את סכום ההסתברויות שהתא נראה למי מהצופים.",
	"@@Viewshed_Vertical-Error_tag1@@": "כאשר <strong>סוג ניתוח</strong> הוא <strong>צופיםה</strong> או שהפרמטר <strong>שיטת ניתוח</strong> הוא <strong>שדות ראייה היקפיים</strong>, פרמטר זה מושבת.",
	"@@Viewshed_Vertical-Lower-Angle_tag0@@": "ערך זה מגדיר את גבול הזווית האנכית התחתון של הסריקה מתחת למישור אופקי. יש לציין את הערך במעלות מ-‎-90.0 עד 0, אשר יכול להיות מספר שלם או נקודה צפה. . ערך ברירת המחדל הוא ‎-90.0.",
	"@@Viewshed_Vertical-Lower-Angle_tag1@@": "זה יכול להיות שדה בסט נתוני <strong>מאפייני צופה</strong> או ערך מספרי. עם פרמטר זה מוגדר לערך, ערך זה יוחל על כל הצופים. כדי לציין ערכים שונים לכל צופה, הגדר פרמטר זה לשדה בסט הנתונים של <strong>מאפייני צופה</strong>.",
	"@@Viewshed_Vertical-Upper-Angle_tag0@@": "ערך זה מגדיר את גבול הזווית האנכית העליון של הסריקה מעל למישור אופקי. יש לציין את הערך במעלות מ-‎0 עד 90.0, אשר יכול להיות מספר שלם או נקודה צפה. . ערך ברירת המחדל הוא 90.0.",
	"@@Viewshed_Vertical-Upper-Angle_tag1@@": "זה יכול להיות שדה בסט נתוני <strong>מאפייני צופה</strong> או ערך מספרי. עם פרמטר זה מוגדר לערך, ערך זה יוחל על כל הצופים. כדי לציין ערכים שונים לכל צופה, הגדר פרמטר זה לשדה בסט הנתונים של <strong>מאפייני צופה</strong>.",
	"@@Watershed_Flow-Direction-Raster_tag0@@": "רסטר הקלט שמראה את כיוון הזרימה החוצה מכל תא.",
	"@@Watershed_Flow-Direction-Raster_tag1@@": "רסטר כיוון הזרימה יכול להיווצר ידי הפעלת הפונקציה <strong>כיוון זרימה</strong>.",
	"@@Watershed_Pour-Point(s)-Raster_tag0@@": "המיקומים של נקודת השפיכה של הקלט.",
	"@@Watershed_Pour-Point(s)-Raster_tag1@@": "רסטר זה מייצג תאים שמעליהם האזור התורם, או המאגר, ייקבע. כל התאים שהם NoData ישמש כתאי מקור.",
	"@@Watershed_Pour-Point-Field_tag0@@": "השדה אשר משמש להקצאת ערכים למיקומי נקודת השפיכה.",
	"@@Watershed_Pour-Point-Field_tag1@@": "עבור סט נתוני רסטר של נקודת שפיכה, ${Value} משמש כברירת מחדל.",
	"@@Weighted-Overlay_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Weighted-Overlay_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Weighted-Overlay_Cellsize-Type_tag2@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Weighted-Overlay_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Weighted-Overlay_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Weighted-Overlay_Cellsize-Type_tag5@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Weighted-Overlay_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Weighted-Overlay_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Weighted-Overlay_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Weighted-Overlay_Extent-Type_tag3@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Weighted-Overlay_Extent-Type_tag4@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Weighted-Overlay_Scales_tag0@@": "הטווח עבור הערכים החדשים שלפיהם יש למפות מחדש את הערכים הישנים.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag0@@": "טבלת החפיפה המשוקללת מורכבת מארבעה חלקים:",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag1@@": "שכבה - כל רסטרי הקלט חייבים להיות מסוג מספר שלם.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag2@@": "השפעה - כל רסטר קלט נשקל בהתאם לחשיבות שלו, או ההשפעה שלו, כאחוז יחסי. סכום משקלי ההשפעה באחוזים חייבים להיות 100, ויש לציין כל משקל בערכי מספר שלם.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag3@@": "שדה - מספר שלום או שדה מחרוזת ברסטר הקלט לשימוש עבור השקלול.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag4@@": "טבלת מיפוי מחדש - לכל ערך ברסטר קלט מוקצה ערך קנה מידה חדש על בסיס טבלת המיפוי מחדש. ערך קנה המידה יכול להיות ערך חוקי או ערך NoData.",
	"@@Weighted-Sum_Cellsize-Type_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Weighted-Sum_Cellsize-Type_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Weighted-Sum_Cellsize-Type_tag2@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Weighted-Sum_Cellsize-Type_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Weighted-Sum_Cellsize-Type_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Weighted-Sum_Cellsize-Type_tag5@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Weighted-Sum_Extent-Type_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Weighted-Sum_Extent-Type_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Weighted-Sum_Extent-Type_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Weighted-Sum_Extent-Type_tag3@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Weighted-Sum_Extent-Type_tag4@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag0@@": "טבלת הסכום המשוקלל מוגדרת על ידי שלושה מאפיינים:",
	"@@Weighted-Sum_Weighted-Sum-Table_tag1@@": "שכבה - הרסטר לשקלול.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag2@@": "שדה - שדה הרסטר לשימוש עבור השקלול.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag3@@": "משקל - ערך המשקל שבו יש להכפיל את הרסטר. זה יכול להיות כל ערך עשרוני חיובי או שלילי.",
	"@@Wind-Chill_Temperature-Raster_tag0@@": "רסטר חד-ערוצי שבו ערכי פיקסל מייצגים את טמפרטורת האוויר הסובב.",
	"@@Wind-Chill_Temperature-Units_tag0@@": "יחידת המדידה המשויכת לרסטר טמפרטורת הקלט. יחידות קלט זמינות הן צלזיוס, פרנהייט וקלווין.",
	"@@Wind-Chill_Wind-Chill-Units_tag0@@": "יחידת המדידה המשויכת לרסטר הפלט. יחידות פלט זמינות הן צלזיוס, פרנהייט וקלווין.",
	"@@Wind-Chill_Wind-Speed-Raster_tag0@@": "רסטר חד-ערוצי שבו ערכי פיקסל מייצגים את מהירות הרוח.",
	"@@Wind-Chill_Wind-Speed-Units_tag0@@": "מגדיר את יחידת המידה עבור רסטר מהירות הרוח:",
	"@@Wind-Chill_Wind-Speed-Units_tag1@@": "מיילים לשעה (mph)",
	"@@Wind-Chill_Wind-Speed-Units_tag2@@": "קילומטר לשעה (km/h)",
	"@@Wind-Chill_Wind-Speed-Units_tag3@@": "מטרים לשנייה (m/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag4@@": "רגל לשנייה (ft/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag5@@": "קשר (kn)",
	"@@Zonal-Remap_Background-Value_tag0@@": "ערך הפיקסל ההתחלתי של רסטר פלט, לפני מיפוי מחדש של פיקסלי קלט.",
	"@@Zonal-Remap_Default-Output-Value_tag0@@": "הערך שיוקצה לפיקסל שלא ממלא אף אחד מהתנאים שהוגדרו ב<strong>טבלת מאפיינים אזוריים</strong>.",
	"@@Zonal-Remap_Default-Output-Value_tag3@@": "זה גם יהיה הערך של פיקסל הפלט אם הפרמטר <strong>שם שדה ערך פלט</strong> נותר ללא ערך או שערך הפלט של הסף האזורי התואם נותר ללא ערך ב<strong>טבלת מאפיינים אזוריים</strong>.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag0@@": "שם השדה שמכיל את ערך המקסימום שמתחת לו פיקסל קלט ימופה מחדש.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag1@@": "אם נותר ללא ערך, או אם ערך השדה הוא null, ערכי פיקסלים לא ייבדקו לאיתור מקסימום.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag0@@": "שם השדה שמכיל את ערך המינימום שמעליו פיקסל קלט ימופה מחדש.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag1@@": "אם נותר ללא ערך, או אם ערך השדה הוא null, ערכי פיקסלים לא ייבדקו לאיתור מינימום.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag0@@": "שם השדה שמכיל את ערך היעד שאליו פיקסל קלט ימופה מחדש.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag1@@": "אם נותר ללא ערך, או אם ערך השדה הוא null, ערכי פיקסלים שמופו מחדש יוגדרו כ<strong>ערך פלט ברירת מחדל</strong>.",
	"@@Zonal-Remap_Value-Raster_tag0@@": "קלט רסטר חד-ערוצי נדרש שמכיל ערכי פיקסלים למיפוי מחדש.",
	"@@Zonal-Remap_Where-Clause_tag0@@": "שאילתא אופציונלית שמוחלת על <strong>טבלת מאפיינים אזוריים</strong>.",
	"@@Zonal-Remap_Where-Clause_tag3@@": "אם השתמשת בטבלה שלעיל כדוגמה, השאילתא תהיה ${Variable1 = 'bare earth' AND Variable2 = 'California'}.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag0@@": "טבלת קלט נדרשת שמכילה לפחות שלושה שדות. חייב להיות לה ערך סף מינימום, ערך סף מקסימום וערך יעד. ערך היעד הוא השדה שיכיל את הערך הממופה מחדש.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag1@@": "הפורמט של הקובץ יכול להית קבוצת ישויות, שירות ישויות או סוג טבלה שבו ArcGIS תומך.",
	"@@Zonal-Remap_Zone-Field_tag0@@": "שם השדה ב<strong>טבלת מאפיינים אזוריים</strong> שמכיל את ערכי מזהה האזור.",
	"@@Zonal-Remap_Zone-Field_tag3@@": "ערכי מזהה האזור קשורים ישירות למזהי האזור ברסטר האזורי. הם מספקים רמה נוספת של סינון במהלך המיפוי מחדש. אם אין מזהה אזור שמשויך לרשומה ספציפית בטבלה, הוא לא ישתתף במיפוי מחדש.",
	"@@Zonal-Remap_Zone-Raster_tag0@@": "רסטר חד-ערוצי שבו כל פיקסל מגדיר אזורים שמשויכים למיקום ספציפי. אזור מוגדר ככל השטחים בקלט שיש להם אותו ערך. האזורים לא חייבים להיות ברצף.",
	"@@Predict-Using-Trend_dimensiondefinition_tag0@@": "מציין את השיטה המשמשת למתן ערכי ממד חזויים.",
	"@@Predict-Using-Trend_dimensiondefinition_tag1@@": "<strong>לפי ערך</strong> - החיזוי יחושב עבור ערך ממד יחיד. לדוגמה, ברצונך לחזות משקעים שנתיים עבור השנים 2050, ‏2100 ו-2150. זוהי ברירת המחדל.",
	"@@Predict-Using-Trend_dimensiondefinition_tag2@@": "<strong>לפי מרווח</strong> - החיזוי יחושב עבור מרווח של הממד שהוגדר על ידי ערך התחלה וסיום. לדוגמה, ברצונך לצרף את שכבת 'קווי מתאר של בניין' לשכבת 'גבולות העיר'.",
	"@@Predict-Using-Trend_end_tag0@@": "תאריך הסיום, הגובה או העומק של מרווח הממד אשר ישמש בחיזוי.",
	"@@Predict-Using-Trend_end_tag1@@": "פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי מרווח</strong>.",
	"@@Predict-Using-Trend_raster_tag0@@": "רסטר המגמה הרב-ממדי מהפונקציה <strong>צור קו מגמה</strong>.",
	"@@Predict-Using-Trend_start_tag0@@": "תאריך ההתחלה, הגובה או העומק של מרווח הממד אשר ישמש בחיזוי.",
	"@@Predict-Using-Trend_start_tag1@@": "פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי מרווח</strong>.",
	"@@Predict-Using-Trend_unit_tag0@@": "היחידה שבה יש להשתמש עבור מרווח הערך. פרמטר זה חל רק כאשר הממד של הניתוח הוא ממד זמן.",
	"@@Predict-Using-Trend_unit_tag1@@": "<strong>שעות</strong> - החיזוי יחושב עבור כל שעה בטווח הזמן שמתואר על ידי הפרמטרים <strong>התחלה</strong>, <strong>סיום</strong> ו<strong>מרווח ערך</strong>.",
	"@@Predict-Using-Trend_unit_tag2@@": "<strong>ימים</strong> - החיזוי יחושב עבור כל יום בטווח הזמן שמתואר על ידי הפרמטרים <strong>התחלה</strong>, <strong>סיום</strong> ו<strong>מרווח ערך</strong>.",
	"@@Predict-Using-Trend_unit_tag3@@": "<strong>שבועות</strong> - החיזוי יחושב עבור כל שבוע בטווח הזמן שמתואר על ידי הפרמטרים <strong>התחלה</strong>, <strong>סיום</strong> ו<strong>מרווח ערך</strong>.",
	"@@Predict-Using-Trend_unit_tag4@@": "<strong>חודשים</strong> - החיזוי יחושב עבור כל חודש בטווח הזמן שמתואר על ידי הפרמטרים <strong>התחלה</strong>, <strong>סיום</strong> ו<strong>מרווח ערך</strong>.",
	"@@Predict-Using-Trend_unit_tag5@@": "<strong>שנים</strong> - החיזוי יחושב עבור כל שנה בטווח הזמן שמתואר על ידי הפרמטרים <strong>התחלה</strong>, <strong>סיום</strong> ו<strong>מרווח ערך</strong>.",
	"@@Predict-Using-Trend_valueinterval_tag0@@": "מספר השלבים בין שני ערכי ממד ייכלל בחיזוי. ערך ברירת המחדל הוא 1.",
	"@@Predict-Using-Trend_valueinterval_tag1@@": "פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי מרווח</strong>.",
	"@@Predict-Using-Trend_values_tag0@@": "ערך או ערכי הממד אשר ישמשו בחיזוי.",
	"@@Predict-Using-Trend_values_tag1@@": "פורמט ערכי הזמן, העומק והגובה חייב להתאים לפורמט של ערכי הממד אשר משמשים ליצירת רסטר המגמה. אם רסטר המגמה נוצר עבור ממד StdTime, הפורמט צריך להיות YYYY-MM-DDTHH:MM:SS, לדוגמה, 2050-01-01T00:00:00. ערכים מרובים מופרדים באמצעות נקודה ופסיק.",
	"@@Process-Raster-Collection_aggregationfunction_tag0@@": "ציין את תבנית פונקציית הרסטר המשמשת לאיסוף פלחים מרובים למספר קטן יתר של פלחים או לפלח בודד.",
	"@@Process-Raster-Collection_dimension_tag0@@": "ממד הצבירה. זהו הממד שלאורכו תתבצע צבירה של המשתנים.",
	"@@Process-Raster-Collection_itemfunction_tag0@@": "ציין את תבנית פונקציית הרסטר המשמשת לעיבוד כל פלח או פריט באוסף רסטר הקלט.",
	"@@Process-Raster-Collection_keywordinterval_tag0@@": "מציין את מרווח מילת המפתח אשר ישמש בעת צבירה לאורך ממד. פרמטר נדרש כאשר <strong>סוג</strong> מוגדר כ<strong>מילת מפתח למרווח</strong>, והצבירה חייבת להיות על פני זמן.",
	"@@Process-Raster-Collection_keywordinterval_tag1@@": "<strong>שעתי</strong> - ערכי הנתונים יצטברו לשלבי זמן שעתיים, והתוצאה תכלול כל שעה בסדרת הזמן.",
	"@@Process-Raster-Collection_keywordinterval_tag2@@": "<strong>יומי</strong> - ערכי הנתונים יצטברו לשלבי זמן יומיים, והתוצאה תכלול כל יום בסדרת הזמן.",
	"@@Process-Raster-Collection_keywordinterval_tag3@@": "<strong>שבועי</strong> - ערכי הנתונים יצטברו לשלבי זמן שבועיים, והתוצאה תכלול כל שבוע בסדרת הזמן.",
	"@@Process-Raster-Collection_keywordinterval_tag4@@": "<strong>Dekadly</strong> - ערכי הנתונים יצטברו ל-3 תקופות של 10 ימים כל אחת. התקופה האחרונה יכולה לכלול יותר או פחות מ-10 ימים. הפלט יכלול 3 פלחים עבור כל חודש.",
	"@@Process-Raster-Collection_keywordinterval_tag5@@": "<strong>Pentadly</strong> - ערכי הנתונים יצטברו ל-6 תקופות של 5 ימים כל אחת. התקופה האחרונה יכולה לכלול יותר או פחות מ-5 ימים. הפלט יכלול 6 פלחים עבור כל חודש.",
	"@@Process-Raster-Collection_keywordinterval_tag6@@": "<strong>חודשי</strong> - ערכי הנתונים יצטברו לשלבי זמן חודשיים, והתוצאה תכלול כל חודש בסדרת הזמן.",
	"@@Process-Raster-Collection_keywordinterval_tag7@@": "<strong>רבעוני</strong> - ערכי הנתונים יצטברו לשלבי זמן רבעוניים, והתוצאה תכלול כל רבעון בסדרת הזמן.",
	"@@Process-Raster-Collection_keywordinterval_tag8@@": "<strong>שנתי</strong> - ערכי הנתונים יצטברו לשלבי זמן שנתיים, והתוצאה תכלול כל שנה בסדרת הזמן.",
	"@@Process-Raster-Collection_keywordinterval_tag9@@": "<strong>חוזר כל יום</strong> - ערכי הנתונים יצטברו לשלבי זמן יומיים, והתוצאה תכלול ערך נצבר אחד לכל יום יוליאני. הפלט יכלול לכל היותר 366 פלחי זמן יומיים.",
	"@@Process-Raster-Collection_keywordinterval_tag10@@": "<strong>חוזר כל שבוע</strong> - ערכי הנתונים יצטברו לשלבי זמן שבועיים, והתוצאה תכלול ערך נצבר אחד לכל שבוע. הפלט יכלול לכל היותר 53 פלחי זמן שבועיים.",
	"@@Process-Raster-Collection_keywordinterval_tag11@@": "<strong>חוזר כל חודש</strong> - ערכי הנתונים יצטברו לשלבי זמן חודשיים, והתוצאה תכלול ערך נצבר אחד לכל חודש. הפלט יכלול לכל היותר 12 פלחי זמן חודשיים.",
	"@@Process-Raster-Collection_keywordinterval_tag12@@": "<strong>חוזר כל רבעון</strong> - ערכי הנתונים יצטברו לשלבי זמן רבעוניים, והתוצאה תכלול ערך נצבר אחד לכל רבעון. הפלט יכלול לכל היותר 4 פלחי זמן רבעוניים.",
	"@@Process-Raster-Collection_maximumvalue_tag0@@": "הערך המקסימלי לטווח.",
	"@@Process-Raster-Collection_maximumvalue_tag1@@": "פרמטר זה נדרש כאשר הפרמטר <strong> סוג </strong> מוגדר כ<strong>טווחי מרווח</strong>.",
	"@@Process-Raster-Collection_minimumvalue_tag0@@": "הערך המינימלי לטווח.",
	"@@Process-Raster-Collection_minimumvalue_tag1@@": "פרמטר זה נדרש כאשר הפרמטר <strong> סוג </strong> מוגדר כ<strong>טווחי מרווח</strong>.",
	"@@Process-Raster-Collection_processingfunction_tag0@@": "ציין את תבנית פונקציית הרסטר המשמשת להצגת שכבת הרסטר המעובדת.",
	"@@Process-Raster-Collection_rastercollection_tag0@@": "קלט הרסטר הרב-ממדי, שכבת המוזאיקה או סט נתוני המוזאיקה.",
	"@@Process-Raster-Collection_type_tag0@@": "מציין את מרווח הממד שעבורו הנתונים יצטברו.",
	"@@Process-Raster-Collection_type_tag1@@": "<strong>כולם</strong> - ערכי הנתונים יצטברו על פני כל הפלחים. זוהי ברירת המחדל.",
	"@@Process-Raster-Collection_type_tag2@@": "<strong>מילת מפתח למרווח</strong> - נתוני המשתנה יצטברו תוך שימוש במרווח מוכר.",
	"@@Process-Raster-Collection_type_tag3@@": "<strong>טווחי מרווח</strong> - נתוני המשתנה יצטברו בין זוגות ערכים או תאריכים שצוינו.",
	"@@Process-Raster-Collection_type_tag4@@": "<strong>ערכי מרווח</strong> - נתוני המשתנה יצטברו תוך שימוש במרווח וביחידה שצוינו על ידי המשתמש.",
	"@@Process-Raster-Collection_unit_tag0@@": "היחידה שבה יש להשתמש עבור ערך המרווח. פרמטר זה נדרש כאשר <strong>ממד</strong> הוא שדה זמן והפרמטר <strong>סוג</strong> מוגדר כ<strong>ערך מרווח</strong>.",
	"@@Process-Raster-Collection_unit_tag1@@": "אם מתבצעת צבירה על ממד אחר שאינו זמן, אפשרות זו לא תהיה זמינה והיחידה עבור ערך המרווח תתאים ליחידת המשתנה לש נתוני הרסטר הרב-ממדי של הקלט.",
	"@@Process-Raster-Collection_unit_tag2@@": "<strong>שעות</strong> - ערכי הנתונים יצטברו לפלחי זמן שעתיים במרווח שצוין.",
	"@@Process-Raster-Collection_unit_tag3@@": "<strong>ימים</strong> - ערכי הנתונים יצטברו לפלחי זמן יומיים במרווח שצוין.",
	"@@Process-Raster-Collection_unit_tag4@@": "<strong>שבועות</strong> - ערכי הנתונים יצטברו לפלחי זמן שבועיים במרווח שצוין.",
	"@@Process-Raster-Collection_unit_tag5@@": "<strong>חודשים</strong> - ערכי הנתונים יצטברו לפלחי זמן חודשיים במרווח שצוין.",
	"@@Process-Raster-Collection_unit_tag6@@": "<strong>שנים</strong> - ערכי הנתונים יצטברו לפלחי זמן שנתיים במרווח שצוין.",
	"@@Process-Raster-Collection_valueinterval_tag0@@": "גודל המרווח שבו יעשה שימוש עבור הצבירה. פרמטר זה נדרש כאשר הפרמטר <strong>סוג </strong> מוגדר כ<strong> ערך מרווח</strong>.",
	"@@Process-Raster-Collection_valueinterval_tag1@@": "לדוגמה, כדי לצבור 30 שנה של נתוני טמפרטורה חודשיים למדרגות של 5 שנים, הזן 5 כ<strong>מרווח ערך</strong>, וציין את ה<strong>יחידה</strong> כ<strong>שנים</strong>.",
	"@@Linear-Spectral-Unmixing_non-negative_tag0@@": "מגדיר את האפשרויות להגדיר את ערכי פיקסל הפלט.",
	"@@Linear-Spectral-Unmixing_non-negative_tag1@@": "מסומן - לא יהיו ערכי פלט שליליים.",
	"@@Linear-Spectral-Unmixing_non-negative_tag2@@": "לא מסומן - יכולים להיות ערכים שליליים של כיסוי קרקע בשברים.",
	"@@Linear-Spectral-Unmixing_raster_tag0@@": "רסטר הקלט.",
	"@@Linear-Spectral-Unmixing_spectralprofile_tag0@@": "קובץ הפרופיל הספקטרלי של הקלט.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag0@@": "המידע הספקטרלי עבור הקבוצות השונות של כיסוי קרקע.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag1@@": "<strong>פרופיל ספקטרלי</strong>--קובץ הגדרה מסווג (${.ecd})‎, שנוצר מהכלי <strong><strong>אימון מסווג סבירות מקסימלית</strong></strong>, או קובץ JavaScript Object Notation ‏‎(${.json})‎ שמכיל את הפרופלים הספקטרליים של הקבוצה.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag2@@": "<strong>ישות אימון</strong>--ישויות פוליגונליות או קבוצת ישויות של דגימת אימון, אשר נוצרות מ<strong>מנהלי דגימות אימון</strong>.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag0@@": "מגדיר את האפשרויות להגדיר את ערכי פיקסל הפלט.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag1@@": "מסומן - ערכי קבוצה עבור כל פיקסל מסופקים בתבנית עשרונית כאשר סכום כל הקבוצות שווה ל-1. לדוגמה, Class1 = 0.16; Class2 = 0.24; Class3 = 0.60.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag2@@": "לא מסומן - סכום כל הקבוצות בפיקסל יכול לחרוג מ-1.",
	"@@Linear-Spectral-Unmixing_trainingfeature_tag0@@": "קובץ ישות האימון של הקלט.",
	"@@Aggregate_aggregationtechnique_tag0@@": "השיטה המשמשת לצבירה. הערכים של תאי הקלט שמוקפים על ידי תאי הפלט ברזולוציה גסה נצברים על ידי אחד מהנתונים הסטטיסטיים הבאים:",
	"@@Aggregate_aggregationtechnique_tag1@@": "</strong>סכום</strong> - הסכום של תאי הקלט. זוהי ברירת המחדל.",
	"@@Aggregate_aggregationtechnique_tag2@@": "<strong>מקסימום</strong> - הערך הגדול ביותר של תאי הקלט.",
	"@@Aggregate_aggregationtechnique_tag3@@": "<strong>ממוצע</strong> - הערך הממוצע של תאי הקלט.",
	"@@Aggregate_aggregationtechnique_tag4@@": "<strong>חציון</strong> - ערך החציון של תאי הקלט.",
	"@@Aggregate_aggregationtechnique_tag5@@": "<strong>מינימום</strong> - הערך הקטן ביותר של תאי הקלט.",
	"@@Aggregate_cellfactor_tag0@@": "הגורם שבו יש להכפיל את גודל התא של רסטר הקלט.",
	"@@Aggregate_cellfactor_tag1@@": "לדוגמה, ערך גורם תא של שלוש יפיק גודל תא פלט גדול פי שלוש מזה של רסטר הקלט.",
	"@@Aggregate_expandextentifneeded_tag0@@": "מגדיר כיצד לטפל בגבולות של רסטר הקלט כאשר השורות או העמודות שלו אינם מכפלה של גורם התא.",
	"@@Aggregate_expandextentifneeded_tag1@@": "מסומן - מרחיב את הגבול העליון או הימני של רסטר הקלט כדי שהמספר הכולל של תאים בשורה או בעמודה יהיה מכפלה של גורם התא. עם אפשרות זו, רסטר הפלט יכול לכסות תיחום מרחבי גדול יותר מאשר רסטר הקלט. זוהי ברירת המחדל.",
	"@@Aggregate_expandextentifneeded_tag2@@": "לא מסומן - מצמצם את מספר השורות ועמודות ברסטר הפלט. דבר זה חותך את התאים הנותרים בגבול העליון או הימני של רסטר הקלט, כדי שמספר השורות או העמודות ברסטר הפלט יהיה מכפלה של גורם התא. עם אפשרות זו, רסטר הפלט יכול לכסות תיחום מרחבי קטן יותר מאשר רסטר הקלט.",
	"@@Aggregate_ignorenodataincalculations_tag0@@": "מציין האם חישוב הצבירה מתעלם מערכי ${NoData}.",
	"@@Aggregate_ignorenodataincalculations_tag1@@": "מסומן - מציין שערכי ${NoData} קיימים עבור כל אחד מהתאים שנכללים בתיחום המרחבי של תא גדול יותר ברסטר הפלט, המערכת תתעלם מערכי ${NoData} בעת קביעת הערך עבור מיקומי תא פלט. רק תאי קלט בתוך התיחום של תא הפלט שיש להם ערכים ישמשו בקביעת הערך של תא הפלט. זוהי ברירת המחדל.",
	"@@Aggregate_ignorenodataincalculations_tag2@@": "לא מסומן - מציין שאם לתא כלשהו שנכלל בתוך התיחום המרחבי של תא גדול יותר ברסטר הפלט יש ערך של ${NoData}, הערך עבור מיקום תא פלט זה יהיה ${NoData}. כאשר נעשה שימוש באפשרות זו, ההנחה היא שכאשר תאים בתוך צבירה מכילים את הערך ${NoData}, אין מספיק מידע לביצוע החישובים הנדרשים שצוינו לקביעת ערך הפלט.",
	"@@Aggregate_raster_tag0@@": "רסטר הקלט לחלוקה לצבירה.",
	"@@Expand_numberofcells_tag0@@": "מספר השורות להרחיב לפיו.",
	"@@Expand_numberofcells_tag1@@": "הערך חייב להיות מספר שלם, ויכול להיות 1 ומעלה.",
	"@@Expand_raster_tag0@@": "רסטר הקלט שעבורו יש להרחיב את האזורים שזוהו.",
	"@@Expand_raster_tag1@@": "חייב להיות מסוג מספר שלם.",
	"@@Expand_zonevalues_tag0@@": "רשימת האזורים להרחבה.",
	"@@Expand_zonevalues_tag1@@": "ערכי האזורים חייבים להיות מספרים שלמים, והם יכולים להיות בכל סדר.",
	"@@Expand_zonevalues_tag2@@": "כדי לציין אזורים מרובים, השתמש ברווח כדי להפריד את ערכי האזורים.",
	"@@Multidimensional-Filter_dimension_tag0@@": "התיחום שממנו יש להפיק משתנים.",
	"@@Multidimensional-Filter_dimensiondefinition_tag0@@": "מציין את השיטה אשר תשמש לפריסת הממד.",
	"@@Multidimensional-Filter_dimensiondefinition_tag1@@": "<strong>הכול</strong> - יעשה שימוש בטווח המלא של כל ממד. זוהי ברירת המחדל.",
	"@@Multidimensional-Filter_dimensiondefinition_tag2@@": "<strong>לפי ערכים</strong> - הממד ייפרס תוך שימוש בערך ממד או ברשימה של ערכים.",
	"@@Multidimensional-Filter_dimensiondefinition_tag3@@": "<strong>לפי טווחים</strong> -  הממד ייפרס תוך שימוש בטווח או ברשימה של טווחים.",
	"@@Multidimensional-Filter_dimensiondefinition_tag4@@": "<strong>לפי איטרציה</strong> -  הממד ייפרס מעל גודל מרווח שצוין.",
	"@@Multidimensional-Filter_endoffirstiteration_tag0@@": "הסוף של המרווח הראשון. מרווח זה משמש לאיטרציה לאורך סט הנתונים. פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי איטרציה</strong>.",
	"@@Multidimensional-Filter_maximumvalue_tag0@@": "הערך המקסימלי עבור הטווח. פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי טווחים</strong>.",
	"@@Multidimensional-Filter_minimumvalue_tag0@@": "הערך המינימלי עבור הטווח. פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי טווחים</strong>.",
	"@@Multidimensional-Filter_raster_tag0@@": "רסטר רב-ממדי של קלט.",
	"@@Multidimensional-Filter_ranges_tag0@@": "<p>טווחי מרווחים שצוינו בטבלה ישמשו לצבירת קבוצות של ערכים. ערכי המינימום והמקסימום מציינם את הטווח שייכלל.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>סוג</strong>מוגדר כ<strong>טווחי מרווחים</strong>.</p>",
	"@@Multidimensional-Filter_startoffirstiteration_tag0@@": "ההתחלה של המרווח הראשון. מרווח זה משמש לאיטרציה לאורך סט הנתונים. פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי איטרציה</strong>.",
	"@@Multidimensional-Filter_step_tag0@@": "התדירות שבה הנתונים ייפרסו. פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי איטרציה</strong>. ערך ברירת המחדל הוא 3.",
	"@@Multidimensional-Filter_unit_tag0@@": "מציין את יחידת האיטרציה. פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי איטרציה</strong> והפרמטר <strong>ממד</strong> מוגדר כ<strong>StdTime</strong>.",
	"@@Multidimensional-Filter_value_tag0@@": "הערך עבור הממד שצוין. פרמטר זה נדרש כאשר הפרמטר <strong>הגדרת ממד</strong> מוגדר כ<strong>לפי ערכים</strong>.",
	"@@Multidimensional-Filter_variables_tag0@@": "הערכים שייכללו בשכבת הרסטר הרב-ממדי של פלט. אם לא צוין משתנה, יעשה שימוש במשתנה הראשון.",
	"@@Multidimensional-Filter_dimensionless_tag0@@": "מציין האם לשכבה צריכים להיות ערכי ממד. אפשרות זו זמינה רק אם פלח יחיד נבחר ליצירת שכבה.",
	"@@Multidimensional-Filter_dimensionless_tag1@@": "מסומן - לשכבה לא יהיו ערכי ממד.",
	"@@Multidimensional-Filter_dimensionless_tag2@@": "לא מסומן-- לשכבה יהיה ערך ממד. זוהי ברירת המחדל.",
	"@@Multidimensional-Raster_interpolationcellsize_tag0@@": "גודל התא של הרסטר שעבר אינטרפולציה. ערך ברירת המחדל הוא ${1}.",
	"@@Multidimensional-Raster_interpolationmethod_tag0@@": "שיטת הדיגום מחדש המשמשת לאינטרפולציה של נתונים לא סדירים.",
	"@@Multidimensional-Raster_interpolationmethod_tag1@@": "<strong>שכן קרוב ביותר</strong> - מחשב את ערך פיקסל הפלט תוך שימוש בפיקסל הקלט הקרוב ביותר. אם לא קיימים פיקסלים של מקור, לא ניתן ליצור פיקסל חדש בפלט. זוהי ברירת המחדל.",
	"@@Multidimensional-Raster_interpolationmethod_tag2@@": "<strong>Tinning לינארי</strong> - משתמש ברשת לא סדירה משולשת מנקודת המרכז של כל פיקסל ברסטר הלא סדיר לביצוע אינטרפולציה של משטח שלאחר מכן מומר לרסטר סדיר.",
	"@@Multidimensional-Raster_interpolationmethod_tag3@@": "<strong>שכנים טבעיים</strong> - מוצא את ערכת המשנה של דגימות קלט לנקודת שאילתה ומחיל משקלים עליהן על , בסיס אזורים פרופורציונליים לאינטרפולציה של ערך.",
	"@@Multidimensional-Raster_interpolationmethod_tag4@@": "<strong>מרחק הפוך משוקלל</strong> - קובע ערכי פיקסל שימוש בשילוב משוקלל לינארי של סט של פיקסלים או נקודות דגימה. המשקל הוא פונקציה של היפוך המרחק מהנקודות או הפיקסלים הידועים.",
	"@@Multidimensional-Raster_raster_tag0@@": "רסטר רב-ממדי של קלט.",
	"@@Multidimensional-Raster_variables_tag0@@": "הערך או הערכים שייכללו בשכבת הרסטר הרב-ממדי.",
	"@@Random_distribution_tag0@@": "ציין את שיטת ההתפלגות של ערך אקראי שבה יש להשתמש.",
	"@@Random_distribution_tag1@@": "<strong>אחיד</strong> (מינימום, מקסימום) - התפלגות אחידה עם טווח מוגדר. ערכי ברירת המחדל הם 0 עבור מינימום ו-1 עבור מקסימום. זוהי ברירת המחדל.",
	"@@Random_distribution_tag2@@": "<strong>מספר שלם</strong> (מינימום, מקסימום) - התפלגות מספר שלם עם טווח מוגדר. ערכי ברירת המחדל הם 1 עבור מינימום ו-10 עבור מקסימום.",
	"@@Random_distribution_tag3@@": "<strong>נורמלית</strong> (ממוצע, סטיית תקן) - התפלגות נורמלית עם ממוצע וסטיית תקן מוגדרים. ערכי ברירת המחדל הם 0 עבור ממוצע ו-10 עבור סטיית תקן.",
	"@@Random_distribution_tag4@@": "<strong>אקספוננציאלית</strong> (ממוצע) - התפלגות אקספוננציאלית עם ממוצע מוגדר. ערך ברירת המחדל הוא 1.",
	"@@Random_distribution_tag5@@": "<strong>Poisson</strong> (ממוצע) - התפלגות Poisson עם ממוצע מוגדר. ערך ברירת המחדל הוא 1.",
	"@@Random_distribution_tag6@@": "<strong>גמא</strong> (אלפא, בטא) - התפלגות גמא עם אלפא ובטא מוגדרים. ערכי ברירת המחדל הם 1 עבור אלפא ו-1 עבור בטא.",
	"@@Random_distribution_tag7@@": "<strong>בינומית</strong> (N, הסתברות) - התפלגות בינומית עם N והסתברות מוגדרים. ערכי ברירת המחדל הם 10 עבור N ו-10 עבור הסתברות.",
	"@@Random_distribution_tag8@@": "<strong>גיאומטרית</strong> (הסתברות) - התפלגות גיאומטרית עם הסתברות מוגדרת. ערך ברירת המחדל הוא 0.5.",
	"@@Random_distribution_tag9@@": "<strong> שלילית בינומית</strong> (r, הסתברות) - התפלגות Pascal עם r והסתברות מוגדרים. ערכי ברירת המחדל הם 10.0 עבור r ו-10 עבור הסתברות.",
	"@@Random_randomnumbergenerator_tag0@@": "ציין את אלגוריתם המחולל האקראי אשר משתמש בזרע ובהתפלגות כדי להפיק רצף של מספרים אקראיים. להלן האפשרויות הזמינות:",
	"@@Random_randomnumbergenerator_tag1@@": "Standard C Rand",
	"@@Random_randomnumbergenerator_tag2@@": "ACM collected algorithm 599",
	"@@Random_randomnumbergenerator_tag3@@": "Mersenne Twister",
	"@@Random_randomnumbergenerator_tag4@@": "ערך ברירת המחדל הוא Mersenne Twister.",
	"@@Random_rasterinfo_tag0@@": "השתמש בלחצן <strong>טעןן רסטר תבנית</strong> כדי לטעון תבנית מספרייה או מפורטל.",
	"@@Random_seed_tag0@@": "הזרע הוא ערך מספר שלם ומשמש להתחלת הפעולה של מחולל המספרים האקראיים. ערך ברירת המחדל הוא 1.",
	"@@Shrink_numberofcells_tag0@@": "מספר התאים שלפיו יש לכווץ כל אזור שצוין.",
	"@@Shrink_numberofcells_tag1@@": "הערך חייב להיות מספר שלם, ויכול להיות 1 ומעלה.",
	"@@Shrink_raster_tag0@@": "רסטר הקלט שעבורו יש לכווץ את האזורים שזוהו.",
	"@@Shrink_raster_tag1@@": "חייב להיות מסוג מספר שלם.",
	"@@Shrink_zonevalues_tag0@@": "רשימת האזורים לכיווץ.",
	"@@Shrink_zonevalues_tag1@@": "ערכי האזורים חייבים להיות מספרים שלמים, והם יכולים להיות בכל סדר.",
	"@@Shrink_zonevalues_tag2@@": "כדי לציין אזורים מרובים, השתמש ברווח כדי להפריד את ערכי האזורים.",
	"@@Distance-Accumulation_costraster_tag0@@": "רסטר שמגדיר את העלות או העכבה לזוז פלאנימטרית על פני כל תא. הערך בכל מיקום תא מייצג את מרחק העלות-ליחידה עבור תזוזה על פני התא. כל ערך מיקום תא מוכפל ברזולוציית התא, תוך פיצוי גם עבור תנועה אלכסונית, לקבלת העלות הכוללת של מעבר על פני התא.",
	"@@Distance-Accumulation_costraster_tag1@@": "הערכים של <strong>רסטר העלויות</strong> יכולים להיות מספר שלם או נקודה צפה, אבל הם לא יכולים להיות מספר שלילי או אפס.",
	"@@Distance-Accumulation_distancemethod_tag0@@": "קובע האם לחשב את המרחק בשיטה פלאנרית (קרקע שטוחה) או גיאודזית (אליפסואיד).",
	"@@Distance-Accumulation_distancemethod_tag1@@": "פלאנרי - מדידות פלאנריות משתמשות במתמטיקה קרטזית דו-ממדית כדי לחשב אורך ושטח. האפשרות זמינה רק בעת מדידה במערכת קואורדינטות מוטלת כאשר המשטח הדו-ממדי של מערכת הקואורדינטות ישמש כבסיס למדידות.",
	"@@Distance-Accumulation_distancemethod_tag2@@": "גיאודזי - הקו הקצר ביותר בין שתי נקודות על פני השטח של כדור הארץ בספרואיד (אליפסואיד). לפיכך, ללא קשר להשלכה של קלט או פלט, התוצאות לא משתנות.",
	"@@Distance-Accumulation_distancemethod_tag3@@": "<strong>הערה:</strong> דוגמה לשימוש בקו גיאודזי הוא כאשר ברצונך לקבוע את המרחק הקצר ביותר בין שתי ערים עבור מסלול טיסה של מטוס. מוכר גם בשם קו מעגל גדול אם מבוסס על כדור במקום על אליפסואיד.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag0@@": "קובע האם רק רסטר צבירת המרחק נוצר או שנוצר רסטר רב-ערוצי של רסטר צבירת מרחקה וכן אסטר של הכיוון ההפוך.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag1@@": "לא מסומן - התוצאה היא רסטר צבירת המרחק. זוהי תוצאה של ערוץ יחיד. זוהי ברירת המחדל.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag2@@": "מסומן - נוצרת תוצאה רב-ערוצית. הרצועה הראשונה היא רסטר צבירת המרחק והרצועה השנייה היא רסטר הכיוון ההפוך.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag3@@": "רסטר הכיוון ההפוך מחשב, עבור כל תא, את הכיוון, במעלות, לתא הסמוך לאורך הנתיב הקצר ביותר חזרה למקור הקרוב ביותר תוך הימנעות ממכשולים.",
	"@@Distance-Accumulation_horizontalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האופקי וזווית המעבר היחסית האופקית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: HF ו-HRMA. HF הוא הקיצור של פקטור אופקי, אשר מגדיר את הקושי האופקי לעבור מתא אחד לתא הבא. HRMA הוא הקיצור של זווית מעבר יחסית אופקית, אשר מזהה את הזווית בין הכיוון האופקי מתא לכיוון התנועה.</p><p><strong>הסוגים של פקטור אנכי</strong>כוללים את הבאים:</p><ul><li><strong>בינארי</strong> - מציין שה-HRMA הוא פחות מזווית החיתוך, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לפנים</strong> - קובע שרק תנועה קדימה מותרת. ה-HRMA חייב להיות שווה או גדול מ-0 ופחות מ-90 מעלות (0 &lt;= ‏HRMA &lt;‏ 90). אם ה-HRMA גודל מ-0 ופחות מ-45 מעלות, ה-HF עבור התא מוגדר לערך שקשור לפקטור אפס. אם ה-HRMA שווה או גדול מ-45 מעלות, נעשה שימוש בערך של משנה ערך הצד. ה-HF עבור כל ערך HRMA השווה או גדול מ-90 מעלות מוגדר כאינסוף.</li><li><strong>לינארי</strong> - מציין שה-HF הוא פונקציה לינארית של ה-HRMA.</li><li><strong>לינארי הפוך</strong> - מציין שה-HF הוא פונקציה לינארית הפוכה של ה-HRMA.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האופקי אשר משמש לקביעת ערכי HF.</li></ul><p>משני ערך לפקטורים האופקיים כוללים:</p><ul><li><strong>פקטור אפס</strong> - הפקטור האופקי אשר ישמש כאשר HRMA הוא אפס. פקטור זה ממקם את חיתוך y עבור כל אחת מפונקציות הפקטור האופקי.</li><li><strong>זווית חיתוך</strong> - מגדיר את זווית HRMA שמעבר לה HF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובע את השיפוע של הקו הישר אשר משמש עם מילות המפתח פקטור אופקי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>ערך צד</strong> - קובע את ה-HF כאשר ה-HRMA שווה או גדול מ-45 מעלות ופחות מ-90 מעלות כאשר צוינה מילת המפתח של פקטור אופקי<strong>לפנים</strong>.</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה המגדירה את ה-HF.</li></ul>",
	"@@Distance-Accumulation_horizontalraster_tag0@@": "רסטר שמגדיר את הכיוון האופקי בכל תא.",
	"@@Distance-Accumulation_horizontalraster_tag1@@": "הערכים ברסטר חייבים להיות מספרים שלמים בטווח שבין 0 ל-360, כאשר 0 מעלות הוא צפון, או לכיוון החלק העליון של המסך, ועולה בכיוון השעון. לאזורים שטוחים יש להקצות ערך ‎-1. הערכים בכל מיקום ישמשו בשילוב עם <strong>הפקטור האופקי</strong> לקביעת העלות האופקית שמצטברת בעת מעבר מתא אחד לסמוכים אליו.",
	"@@Distance-Accumulation_initialaccumulation_tag0@@": "העלות המצטברת ההתחלתית להתחלת חישוב העלות. פרמטר זה מאפשר לציין עלות קבועה שמשויכת למקור. במקום להתחיל בעלות 0, אלגוריתם העלות יתחיל בערך שצוין.",
	"@@Distance-Accumulation_initialaccumulation_tag1@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Distance-Accumulation_initialaccumulation_tag2@@": "הערך חייב להיות 0 ומעלה. ערך ברירת המחדל הוא 0.",
	"@@Distance-Accumulation_maximumaccumulation_tag0@@": "מגדיר את העלות המצטברת המרבית של הנוסע עבור המקור. תחשיבי העלות ממשיכים עבור כל מקור עד שמושגת הקיבולת שצוינה.",
	"@@Distance-Accumulation_maximumaccumulation_tag1@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Distance-Accumulation_maximumaccumulation_tag2@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag0@@": "מכפיל שיחול על ערכי העלות.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag1@@": "פרמטר זה מאפשר לשלוט על אופן הנסיעה או העוצמה במקור. ככל שהמכפיל גדול יותר, כך עולה העלות לזוז על פני כל תא.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag2@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag3@@": "הערכים חייבים להיות גדולים מאפס. ערך ברירת המחדל הוא 1.",
	"@@Distance-Accumulation_rasterbarriers_tag0@@": "הרסטר שמגדיר את המחסומים.",
	"@@Distance-Accumulation_rasterbarriers_tag1@@": "סט הנתונים חייב להכיל NoData היכן שאין מחסומים. מחסומים מיוצגים על ידי ערכים חוקיים כולל אפס.",
	"@@Distance-Accumulation_rasterbarriers_tag2@@": "המחסומים יכולים להיות מוגדרים על ידי רסטר נקודה צפה או מספר שלם.",
	"@@Distance-Accumulation_sourceraster_tag0@@": "מיקומי מקור הקלט.",
	"@@Distance-Accumulation_sourceraster_tag1@@": "זהו סט נתוני רסטר שמזהה את התאים או המיקומים שמהם מרחק העלות המצטברת הקטן ביותר עבור כל מיקום תא פלט מחושב.",
	"@@Distance-Accumulation_sourceraster_tag2@@": "זה יכול להיות סוג מספר שלם או נקודה צפה.",
	"@@Distance-Accumulation_surfaceraster_tag0@@": "רסטר שמגדיר את ערכי הגובה בכל מיקום תא.",
	"@@Distance-Accumulation_surfaceraster_tag1@@": "הערכים משמשים לחישוב כיסוי מרחק פני השטח בפועל בעת מעבר בין תאים.",
	"@@Distance-Accumulation_traveldirection_tag0@@": "מגדיר את כיוון הנוסע בעת החלת פקטור אנכי, פקטור אופקי ואת שיעור ההתנגדות של המקור.",
	"@@Distance-Accumulation_traveldirection_tag1@@": "<strong>ממקור</strong> - הפקטור האנכי, הפקטור האופקי ושיעור ההתנגדות של המקור יוחלו החל ממקור הקלט תוך התקדמות החוצה לתאים שאינם מקור. זוהי ברירת המחדל.",
	"@@Distance-Accumulation_traveldirection_tag2@@": "<strong>למקור</strong> - הפקטור האנכי, הפקטור האופקי ושיעור ההתנגדות של המקור יוחלו החל מכל תא שאינו מקור תוך התקדמות חזרה למקור הקלט.",
	"@@Distance-Accumulation_traveldirection_tag3@@": "ציין את מילת המפתח <strong>ממקור</strong> או <strong>למקור</strong>, אשר תוחל על כל המקורות, או ציין שדה ב<strong>רסטר המקור</strong> שמכיל את מילות המפתח לזיהוי כיוון הנסיעה עבור כל מקור. שדה זה חייב להכיל את החרוזת ${FROM_SOURCE} או ${TO_SOURCE}.",
	"@@Distance-Accumulation_verticalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: VF ו-VRMA. VF הוא הקיצור של פקטור אנכי, אשר מגדיר את הקושי האנכי לעבור מתא אחד לתא הבא. VRMA הוא הקיצור של זווית מעבר יחסית אנכית, אשר מזהה את זווית השיפוע בין תא FROM, או תא העיבוד, לתא TO.</p><p><strong>סוגי פקטור אנכי</strong>כוללים:</p><ul><li><strong>בינארי</strong> - מציין שה-VRMA הוא יותר מזווית החיתוך הנמוכה ופחות מזווית החיתוך הגבוהה, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לינארי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA.</li><li><strong>לינארי סימטרי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>לינארי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA.</li><li><strong>לינארי סימטרי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>Cos</strong> - מזהה את ה-VF כפונקציה מבוססת קוסינוס של ה-VRMA.</li><li><strong>Sec</strong> - מזהה את ה-VF כפונקציה מבוססת סקנט של ה-VRMA.</li><li><strong>Cos-Sec</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>Sec-Cos</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האנכי אשר משמש לקביעת ערכי VF.</li></ul><p>משני ערך למילות המפתח האנכיות כוללים:</p><ul><li><strong>פקטור אפס</strong> - קובע את הפקטור האנכי אשר ישמש כאשר VRMA הוא אפס. פקטור זה ממקם את חיתוך y של הפונקציה שצוינה. בהגדרה, פקטור אפס אינו ישים לאף אחת מהפונקציות הטריגונומטריות האנכיות (COS‏, SEC‏, COS-SEC‏ או SEC-COS). חיתוך y מוגדר על ידי פונקציות אלה.</li><li><strong>זווית חיתוך נמוכה</strong> - מגדירה את זווית VRMA שמתחת לה VF יוגדר לאינסוף.</li><li><strong>זווית חיתוך גבוהה</strong> - מגדירה את זווית VRMA שמעבר לה VF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובעת את השיפוע של הקו הישר אשר משמש עם מילות המפתח של פקטור אנכי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה שמגדירה את ה-VF.</li></ul>",
	"@@Distance-Accumulation_verticalraster_tag0@@": "‏מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (VRMA).",
	"@@Distance-Accumulation_verticalraster_tag1@@": "הערכים משמשים לחישוב השיפוע אשר משמש לזיהוי הפקטור האנכי שנוצר בעת מעבר מתא אחד לתא הבא.",
	"@@Distance-Allocation_costraster_tag0@@": "רסטר שמגדיר את העלות או העכבה לזוז פלאנימטרית על פני כל תא. הערך בכל מיקום תא מייצג את מרחק העלות-ליחידה עבור תזוזה על פני התא. כל ערך מיקום תא מוכפל ברזולוציית התא, תוך פיצוי גם עבור תנועה אלכסונית, לקבלת העלות הכוללת של מעבר על פני התא.",
	"@@Distance-Allocation_costraster_tag1@@": "הערכים של <strong>רסטר העלויות</strong> יכולים להיות מספר שלם או נקודה צפה, אבל הם לא יכולים להיות מספר שלילי או אפס.",
	"@@Distance-Allocation_distancemethod_tag0@@": "קובע האם לחשב את המרחק בשיטה פלאנרית (קרקע שטוחה) או גיאודזית (אליפסואיד).",
	"@@Distance-Allocation_distancemethod_tag1@@": "פלאנרי - מדידות פלאנריות משתמשות במתמטיקה קרטזית דו-ממדית כדי לחשב אורך ושטח. האפשרות זמינה רק בעת מדידה במערכת קואורדינטות מוטלת כאשר המשטח הדו-ממדי של מערכת הקואורדינטות ישמש כבסיס למדידות.",
	"@@Distance-Allocation_distancemethod_tag2@@": "גיאודזי - הקו הקצר ביותר בין שתי נקודות על פני השטח של כדור הארץ בספרואיד (אליפסואיד). לפיכך, ללא קשר להשלכה של קלט או פלט, התוצאות לא משתנות.",
	"@@Distance-Allocation_distancemethod_tag3@@": "<strong>הערה:</strong> דוגמה לשימוש בקו גיאודזי הוא כאשר ברצונך לקבוע את המרחק הקצר ביותר בין שתי ערים עבור מסלול טיסה של מטוס. מוכר גם בשם קו מעגל גדול אם מבוסס על כדור במקום על אליפסואיד.",
	"@@Distance-Allocation_horizontalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האופקי וזווית המעבר היחסית האופקית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: HF ו-HRMA. HF הוא הקיצור של פקטור אופקי, אשר מגדיר את הקושי האופקי לעבור מתא אחד לתא הבא. HRMA הוא הקיצור של זווית מעבר יחסית אופקית, אשר מזהה את הזווית בין הכיוון האופקי מתא לכיוון התנועה.</p><p><strong>הסוגים של פקטור אנכי</strong>כוללים את הבאים:</p><ul><li><strong>בינארי</strong> - מציין שה-HRMA הוא פחות מזווית החיתוך, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לפנים</strong> - קובע שרק תנועה קדימה מותרת. ה-HRMA חייב להיות שווה או גדול מ-0 ופחות מ-90 מעלות (0 &lt;= ‏HRMA &lt;‏ 90). אם ה-HRMA גודל מ-0 ופחות מ-45 מעלות, ה-HF עבור התא מוגדר לערך שקשור לפקטור אפס. אם ה-HRMA שווה או גדול מ-45 מעלות, נעשה שימוש בערך של משנה ערך הצד. ה-HF עבור כל ערך HRMA השווה או גדול מ-90 מעלות מוגדר כאינסוף.</li><li><strong>לינארי</strong> - מציין שה-HF הוא פונקציה לינארית של ה-HRMA.</li><li><strong>לינארי הפוך</strong> - מציין שה-HF הוא פונקציה לינארית הפוכה של ה-HRMA.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האופקי אשר משמש לקביעת ערכי HF.</li></ul><p>משני ערך לפקטורים האופקיים כוללים:</p><ul><li><strong>פקטור אפס</strong> - הפקטור האופקי אשר ישמש כאשר HRMA הוא אפס. פקטור זה ממקם את חיתוך y עבור כל אחת מפונקציות הפקטור האופקי.</li><li><strong>זווית חיתוך</strong> - מגדיר את זווית HRMA שמעבר לה HF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובע את השיפוע של הקו הישר אשר משמש עם מילות המפתח פקטור אופקי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>ערך צד</strong> - קובע את ה-HF כאשר ה-HRMA שווה או גדול מ-45 מעלות ופחות מ-90 מעלות כאשר צוינה מילת המפתח של פקטור אופקי<strong>לפנים</strong>.</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה המגדירה את ה-HF.</li></ul>",
	"@@Distance-Allocation_horizontalraster_tag0@@": "רסטר שמגדיר את הכיוון האופקי בכל תא.",
	"@@Distance-Allocation_horizontalraster_tag1@@": "הערכים ברסטר חייבים להיות מספרים שלמים בטווח שבין 0 ל-360, כאשר 0 מעלות הוא צפון, או לכיוון החלק העליון של המסך, ועולה בכיוון השעון. לאזורים שטוחים יש להקצות ערך ‎-1. הערכים בכל מיקום ישמשו בשילוב עם <strong>הפקטור האופקי</strong> לקביעת העלות האופקית שמצטברת בעת מעבר מתא אחד לסמוכים אליו.",
	"@@Distance-Allocation_initialaccumulation_tag0@@": "העלות המצטברת ההתחלתית להתחלת חישוב העלות. פרמטר זה מאפשר לציין עלות קבועה שמשויכת למקור. במקום להתחיל בעלות 0, אלגוריתם העלות יתחיל בערך שצוין.",
	"@@Distance-Allocation_initialaccumulation_tag1@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Distance-Allocation_initialaccumulation_tag2@@": "הערך חייב להיות 0 ומעלה. ערך ברירת המחדל הוא 0.",
	"@@Distance-Allocation_maximumaccumulation_tag0@@": "מגדיר את העלות המצטברת המרבית של הנוסע עבור המקור. תחשיבי העלות ממשיכים עבור כל מקור עד שמושגת הקיבולת שצוינה.",
	"@@Distance-Allocation_maximumaccumulation_tag1@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Distance-Allocation_maximumaccumulation_tag2@@": "הערך חייב להיות גדול מאפס. קיבולת ברירת המחדל היא עד לקצה רסטר הפלט.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag0@@": "מכפיל שיחול על ערכי העלות.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag1@@": "פרמטר זה מאפשר לשלוט על אופן הנסיעה או העוצמה במקור. ככל שהמכפיל גדול יותר, כך עולה העלות לזוז על פני כל תא.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag2@@": "הערכים חייבים להיות גדולים מאפס. ערך ברירת המחדל הוא 1.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag3@@": "ערך מספרי (כפול) או שדה <strong>מרסטר המקור</strong> יכולים לשמש עבור פרמטר זה.",
	"@@Distance-Allocation_rasterbarriers_tag0@@": "הרסטר שמגדיר את המחסומים.",
	"@@Distance-Allocation_rasterbarriers_tag1@@": "סט הנתונים חייב להכיל NoData היכן שאין מחסומים. מחסומים מיוצגים על ידי ערכים חוקיים כולל אפס.",
	"@@Distance-Allocation_rasterbarriers_tag2@@": "המחסומים יכולים להיות מוגדרים על ידי רסטר נקודה צפה או מספר שלם.",
	"@@Distance-Allocation_sourcefield_tag0@@": "השדה אשר משמש להקצאת ערכים למיקומי המקור. חייב להיות מסוג מספר שלם.",
	"@@Distance-Allocation_sourceraster_tag0@@": "מיקומי מקור הקלט.",
	"@@Distance-Allocation_sourceraster_tag1@@": "זהו סט נתוני רסטר שמזהה את התאים או המיקומים שמהם מרחק העלות המצטברת הקטן ביותר עבור כל מיקום תא פלט מחושב.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag0@@": "קובע האם רק רסטר ההקצאה יווצר או אם תיווצר תוצאה רב-ערוצית.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag1@@": "לא מסומן - התוצאה היא רסטר הקצאת מרחק. זוהי תוצאה של ערוץ יחיד. זוהי ברירת המחדל.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag2@@": "מסומן - נוצר רסטר רב-ערוצי. הערוץ הראשון הוא רסטר הקצאת המרחק, הערוץ השני מכיל אינדקס שורות והערוץ השלישי כולל אינדקס עמודות. אינדקסים אלה מזהים את המיקום של תא המקור שהוא במרחק עם העלות המצטברת הנמוכה ביותר.",
	"@@Distance-Allocation_surfaceraster_tag0@@": "רסטר שמגדיר את ערכי הגובה בכל מיקום תא.",
	"@@Distance-Allocation_surfaceraster_tag1@@": "הערכים משמשים לחישוב כיסוי מרחק פני השטח בפועל בעת מעבר בין תאים.",
	"@@Distance-Allocation_traveldirection_tag0@@": "מגדיר את כיוון הנוסע בעת החלת פקטור אנכי, פקטור אופקי ואת שיעור ההתנגדות של המקור.",
	"@@Distance-Allocation_traveldirection_tag1@@": "<strong>ממקור</strong> - הפקטור האנכי, הפקטור האופקי ושיעור ההתנגדות של המקור יוחלו החל ממקור הקלט תוך התקדמות החוצה לתאים שאינם מקור. זוהי ברירת המחדל.",
	"@@Distance-Allocation_traveldirection_tag2@@": "<strong>למקור</strong> - הפקטור האנכי, הפקטור האופקי ושיעור ההתנגדות של המקור יוחלו החל מכל תא שאינו מקור תוך התקדמות חזרה למקור הקלט.",
	"@@Distance-Allocation_traveldirection_tag3@@": "ציין את מילת המפתח <strong>ממקור</strong> או <strong>למקור</strong>, אשר תוחל על כל המקורות, או ציין שדה ב<strong>רסטר המקור</strong> שמכיל את מילות המפתח לזיהוי כיוון הנסיעה עבור כל מקור. שדה זה חייב להכיל את החרוזת ${FROM_SOURCE} או ${TO_SOURCE}.",
	"@@Distance-Allocation_verticalfactor_tag0@@": "<p>מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (HRMA).</p><p>קיימים מספר פקטורים עם משני ערכים, אשר מזהים גרף פקטור אנכי מוגדר. בנוסף, ניתן להשתמש בטבלה כדי ליצור גרף מותאם אישית. הגרפים משמשים לזיהוי הפקטור האנכי אשר משמש לחישוב העלות הכוללת של מעבר לתא שכן.</p><p>בהסברים שלהלן, נעשה שימוש בשני ראשי תיבות: VF ו-VRMA. VF הוא הקיצור של פקטור אנכי, אשר מגדיר את הקושי האנכי לעבור מתא אחד לתא הבא. VRMA הוא הקיצור של זווית מעבר יחסית אנכית, אשר מזהה את זווית השיפוע בין תא FROM, או תא העיבוד, לתא TO.</p><p><strong>סוגי פקטור אנכי</strong>כוללים:</p><ul><li><strong>בינארי</strong> - מציין שה-VRMA הוא יותר מזווית החיתוך הנמוכה ופחות מזווית החיתוך הגבוהה, ה-HF מוגדר לערך שקשור לפקטור אפס, אחרת, הוא אינסוף.</li><li><strong>לינארי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA.</li><li><strong>לינארי סימטרי</strong> - מציין שה-VF הוא פונקציה לינארית של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>לינארי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA.</li><li><strong>לינארי סימטרי הפוך</strong> - מציין שה-VF הוא פונקציה לינארית הפוכה של ה-VRMA בצד השלילי או החיובי של ה-VRMA, בהתאמה, ושתי הפונקציות הלינאריות הן סימטריות ביחס לציר VF (‏y).</li><li><strong>Cos</strong> - מזהה את ה-VF כפונקציה מבוססת קוסינוס של ה-VRMA.</li><li><strong>Sec</strong> - מזהה את ה-VF כפונקציה מבוססת סקנט של ה-VRMA.</li><li><strong>Cos-Sec</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>Sec-Cos</strong> - מציין שה-VF הוא הפונקציה מבוססת קוסינוס של ה-VRMA כאשר ה-VRMA שלילי והפונקציה מבוססת סקנט של ה-VRMA כאשר ה-VRMA אינו שלילי.</li><li><strong>טבלה</strong> - מזהה שקובץ טבלה ישמש להגדרת גרף הפקטור האנכי אשר משמש לקביעת ערכי VF.</li></ul><p>משני ערך למילות המפתח האנכיות כוללים:</p><ul><li><strong>פקטור אפס</strong> - קובע את הפקטור האנכי אשר ישמש כאשר VRMA הוא אפס. פקטור זה ממקם את חיתוך y של הפונקציה שצוינה. בהגדרה, פקטור אפס אינו ישים לאף אחת מהפונקציות הטריגונומטריות האנכיות (COS‏, SEC‏, COS-SEC‏ או SEC-COS). חיתוך y מוגדר על ידי פונקציות אלה.</li><li><strong>זווית חיתוך נמוכה</strong> - מגדירה את זווית VRMA שמתחת לה VF יוגדר לאינסוף.</li><li><strong>זווית חיתוך גבוהה</strong> - מגדירה את זווית VRMA שמעבר לה VF יוגדר לאינסוף.</li><li><strong>שיפוע</strong> - קובעת את השיפוע של הקו הישר אשר משמש עם מילות המפתח של פקטור אנכי<strong>לינארי</strong>ו<strong>לינארי הפוך</strong>. השיפוע מוגדר כשבר של rise over run (לדוגמה, שיפוע של 45 אחוז הוא 1/45, שהוא קלט של 0.02222).</li><li><strong>שם טבלה</strong> - מזהה את שם הטבלה שמגדירה את ה-VF.</li></ul>",
	"@@Distance-Allocation_verticalraster_tag0@@": "‏מגדיר את יחסי הגומלין בין פקטור העלות האנכי וזווית המעבר היחסית האנכית (VRMA).",
	"@@Distance-Allocation_verticalraster_tag1@@": "הערכים משמשים לחישוב השיפוע אשר משמש לזיהוי הפקטור האנכי שנוצר בעת מעבר מתא אחד לתא הבא.",
	"@@Euclidean-Back-Direction_cellsize_tag0@@": "גודל התא שבו רסטר הפלט ייווצר.",
	"@@Euclidean-Back-Direction_cellsize_tag1@@": "אם גודל התא הוגדר מפורשות ב<strong>סביבות</strong> , זה יהיה גודל ברירת המחדל של התא. אם הוא לא הוגדר, גודל תא הפלט יהיה זהה ל<strong>רסטר מקור</strong>.",
	"@@Euclidean-Back-Direction_distancemethod_tag0@@": "קובע האם לחשב את המרחק בשיטה פלאנרית (קרקע שטוחה) או גיאודזית (אליפסואיד).",
	"@@Euclidean-Back-Direction_distancemethod_tag1@@": "פלאנרי - מדידות פלאנריות משתמשות במתמטיקה קרטזית דו-ממדית כדי לחשב אורך ושטח. האפשרות זמינה רק בעת מדידה במערכת קואורדינטות מוטלת כאשר המשטח הדו-ממדי של מערכת הקואורדינטות ישמש כבסיס למדידות.",
	"@@Euclidean-Back-Direction_distancemethod_tag2@@": "גיאודזי - הקו הקצר ביותר בין שתי נקודות על פני השטח של כדור הארץ בספרואיד (אליפסואיד). לפיכך, ללא קשר להשלכה של קלט או פלט, התוצאות לא משתנות.",
	"@@Euclidean-Back-Direction_distancemethod_tag3@@": "<strong>הערה:</strong> דוגמה לשימוש בקו גיאודזי הוא כאשר ברצונך לקבוע את המרחק הקצר ביותר בין שתי ערים עבור מסלול טיסה של מטוס. מוכר גם בשם קו מעגל גדול אם מבוסס על כדור במקום על אליפסואיד.",
	"@@Euclidean-Back-Direction_maximumdistance_tag0@@": "מגדיר את מרחק הסף שבתוכו הכיוון למקור הקרוב ביותר יחושב. אם המרחק למקור הקרוב ביותר גדול יותר מערך זה, הפלט עבור תא זה יהיה NoData.",
	"@@Euclidean-Back-Direction_maximumdistance_tag1@@": "מרחק ברירת המחדל היא עד לתיחום רסטר הפלט.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag0@@": "הרסטר שמגדיר את המחסומים.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag1@@": "סט הנתונים חייב להכיל NoData היכן שאין מחסומים. מחסומים מיוצגים על ידי ערכים חוקיים כולל אפס.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag2@@": "המחסומים יכולים להיות מוגדרים על ידי רסטר נקודה צפה או מספר שלם.",
	"@@Euclidean-Back-Direction_sourceraster_tag0@@": "סט נתוני רסטר שקובע את התאים או המיקומים שעבורם הכיוון האוקלידי עבור כל מיקום תא פלט מחושב.",
	"@@Euclidean-Back-Direction_sourceraster_tag1@@": "סוג הקלט יכול להיות סוג נקודה צפה או מספר שלם.",
	"@@Cost-Path_costbacklinkraster_tag0@@": "שם שכבת הרסטר קישור נכנס עלות חוזרת אשר משמשת לקביעת הנתיב לחזרה למקור דרך הנתיב עם העלות הנמוכה ביותר.",
	"@@Cost-Path_costbacklinkraster_tag1@@": "עבור כל תא ברסטר הקישור חזרה, ערך מזהה את השכן שהוא התא הבא בנתיב העלות המצטברת הנמוכה ביותר מהתא לתא מקור יחיד או לסט של תאי מקור.",
	"@@Cost-Path_costdistanceraster_tag0@@": "שם רסטר מרחק העלות שבו יעשה שימוש כדי לקבוע את המסלול עם העלות הנמוכה ביותר ממיקומי היעד למקור.",
	"@@Cost-Path_costdistanceraster_tag1@@": "רסטר מרחק העלות בדרך כלל נוצר עם פונקציה 'מרחק עלות', 'הקצאת עלות' או 'קישור עלות חוזרת'. שכבת רסטר מרחק העלות מאחסנת, עבור כל תא, את מרחק העלות המצטברת המינימלית על פני משטח עלות מכל תא אל סט של תאי מקור.",
	"@@Cost-Path_destinationfield_tag0@@": "השדה אשר משמש להשגת ערכים עבור מיקומי היעד. נתוני ישויות קלט חייבים לכלול לפחות שדה חוקי אחד.",
	"@@Cost-Path_destinationraster_tag0@@": "שכבת סט נתוני רסטר שמזהה את התאים שמהם נקבע הנתיב עם העלות הנמוכה ביותר אל המקור עם העלות הנמוכה ביותר.",
	"@@Cost-Path_destinationraster_tag1@@": "שכבת רסטר הקלט מורכבת מתאים שיש להם ערכים חוקיים (אפס הוא ערך חוקי), ולתאים האחרים יש להקצות NoData.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag0@@": "מאלץ את הפונקציה להתייחס לרסטר הקישור חזרה של הקלט כרסטר כיוון זרימה. לרסטרים של כיוון זרימה יכול להיות ערך מספר שלם בין 0-255.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag1@@": "לא מסומן - אם הערים של רסטר הקישור לאחור שצוין הם מספרים שלמים בטווח של 0-8, סט הנתונים ייחשב כרסטר עלות של קישור חזרה. אם הערכים הם בין 0-255, הקלט יחשב לרסטר כיוון זרימה. אם הערכים הם בין 0-360 ונקודה צפה, הקלט יחשב לרסטר בכיוון הפוך.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag2@@": "מסומן - הרסטר שסופק עבור רסטר הקישור חזרה יחשב לרסטר כיוון זרימה. השתמש באפשרות זו אם לרסטר כיוון הזרימה יש ערך מקסימום של 8 או פחות.",
	"@@Cost-Path_pathtype_tag0@@": "מילת מפתח מגדירה את האופן שבו הערכים והאזורים בנתוני היעד של הקלט יפורשו בחישובי עלויות הנתיבים. להלן האפשרויות:",
	"@@Cost-Path_pathtype_tag1@@": "<strong>כל תא</strong> - עבור כל תא או מיקום עם ערכים חוקיים בנתוני יעד הקלט, נתיב עם העלות הנמוכה ביותר נקבע ונשמר בשירות הישויות של הפלט. עם אפשרות זו, כל תא של נתוני יעד הקלט מטופל בנפרד, ונתיב עם העלות הנמוכה ביותר נקבע עבור כל תא.",
	"@@Cost-Path_pathtype_tag2@@": "<strong>כל אזור</strong> - עבור כל אזור בנתוני יעד הקלט, נתיב עם העלות הנמוכה ביותר נקבע ונשמר ברסטר הפלט. עם אפשרות זו, הנתיב עם העלות הנמוכה ביותר עבור כל אזור מתחיל בתא או במיקום עם שקלול המרחק בעל העלות הנמוכה ביותר באזור.",
	"@@Cost-Path_pathtype_tag3@@": "<strong>היחיד הטוב ביותר</strong> - עבור כל התאים בנתוני היעד של הקלט, הנתיב עם העלות הנמוכה ביותר נגזר מתא עם מינימום נתיבים עם העלות הנמוכה ביותר אל תאי המקור.",
	"@@Cell-Statistics_cellsizetype_tag0@@": "בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גודלי התאים של הקלט זהים, כל האפשרויות ייתנו את אותן תוצאות.",
	"@@Cell-Statistics_cellsizetype_tag1@@": "ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.",
	"@@Cell-Statistics_cellsizetype_tag2@@": "מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.",
	"@@Cell-Statistics_cellsizetype_tag3@@": "מקסימום מתוך - שימוש בגודל התא הגדול מכל הרסטרים של הקלט. זוהי ברירת המחדל.",
	"@@Cell-Statistics_cellsizetype_tag4@@": "ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.",
	"@@Cell-Statistics_cellsizetype_tag5@@": "אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.",
	"@@Cell-Statistics_extenttype_tag0@@": "בחר באיזה תיחום יש להשתמש ברסטר של הפלט:",
	"@@Cell-Statistics_extenttype_tag1@@": "ראשון מתוך - שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.",
	"@@Cell-Statistics_extenttype_tag2@@": "הצטלבות מתוך - שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.",
	"@@Cell-Statistics_extenttype_tag3@@": "איחוד מתוך - שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.",
	"@@Cell-Statistics_extenttype_tag4@@": "אחרון מתוך - שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.",
	"@@Cell-Statistics_processasmultiband_tag0@@": "קובע את אופן העיבוד של רצועות הרסטרים של הקלט.",
	"@@Cell-Statistics_processasmultiband_tag1@@": "לא מסומן - כל הקלטים הרב-ערוציים יעובדו כרצועות יחידות. זוהי ברירת המחדל.",
	"@@Cell-Statistics_processasmultiband_tag2@@": "מסומן - כל הקלטים הרב-ערוציים יעובדו כרצועות מרובות.",
	"@@Cell-Statistics_rasters_tag0@@": "רשימת הרסטרים ממנה יש לחשב את הנתונים הסטטיסטיים, על בסיס פיקסל-אחר-פיקסל.",
	"@@Cell-Statistics_percentileinterpolationtype_tag0@@": "<p>מציין את שיטת האינטרפולציה שתשתמש כאשר ערך האחוזון שצוין נמצא בין שני ערכים של תאי קלט.</p><ul><li><strong>זיהוי אוטומטי</strong> - אם הרסטרים של הקלט הם פיקסל מסוג מספר שלם, נעשה שימוש בשיטה<strong>הקרוב ביותר</strong>. אם רסטר הקלט הוא פיקסל מסוג נקודה צפה, נעשה שימוש בשיטה<strong>לינארי</strong>. זוהי ברירת המחדל.</li><li><strong>הקרוב ביותר</strong>--נעשה שימוש בערך הזמין הקרוב ביותר לאחוזון הרצוי. במקרה זה, הסוג של פיקסל הפלט זהה לזה של רסטר הערכים של הקלט.</li><li><strong>לינארי</strong> - נעשה שימוש בממוצע המשוקלל של שני הערכים המקיפים את האחוזון הרצוי. במקרה זה, פיקסל הפלט יהיה מסוג נקודה צפה.</li></ul><p>אפשרות זו זמינה רק אם הפרמטר מסוג<strong>פעולה</strong>מוגדר כ<strong>חציון</strong>או<strong>אחוזון</strong>.</p>",
	"@@Cell-Statistics_percentilevalue_tag0@@": "<p>האחוזון שיש לחשב. ערך ברירת המחדל הוא 90, עבור האחוזון ה-90.</p><p>הערכים יכולים להיות בטווח בין 0 ל-100. אחוזון 0 הוא למעשה שווה ערך לנתון הסטטיסטי 'מינימום', והאחוזון 100 הוא שווה ערך ל'מקסימום'. ערך של 50 יפיק למעשה את אותה התוצאה כמו ערך החציון.</p><p>אפשרות זו זמינה רק אם הפרמטר מסוג<strong>פעולה</strong> מוגדר כ<strong>אחוזון</strong>.</p>",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag0@@": "רסטר הכיוון ההפוך מכיל כיוונים מחושבים במעלות. הכיוו ןמזהה את התא הבא לאורך הנתיב המיטבי חזרה למקור העלות המצטברת הנמוכה ביותר תוך הימנעות ממחסומים.",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag1@@": "טווח הערכים הוא בין 0 מעלות ל- 360 מעלות, כאשר 0 שמור לתאי מקור. כיוון מזרח (ימין) הוא 90 והערכים גדלים עם כיוון השעון (180 הוא דרום, 270 הוא מערב, 360 הוא צפון).",
	"@@Optimal-Path-As-Raster_destinationfield_tag0@@": "השדה אשר משמש להשגת ערכים עבור מיקומי היעד.",
	"@@Optimal-Path-As-Raster_destinationraster_tag0@@": "שכבת סט נתוני רסטר שמזהה את התאים שמהם נקבע הנתיב האופטימלי אל המקור עם העלות הנמוכה ביותר. זהו קלט חובה.",
	"@@Optimal-Path-As-Raster_destinationraster_tag1@@": "שכבת רסטר הקלט מורכבת מתאים שיש להם ערכים חוקיים (אפס הוא ערך חוקי), ולתאים האחרים יש להקצות NoData.",
	"@@Optimal-Path-As-Raster_distanceaccumulationraster_tag0@@": "רסטר הצטברות המרחק משמש לקביעת הנתיב המיטבי מהיעדים אל המקורות. רסטר הצבטברות המרחק בדרך כלל נוצר באמצעות פונקציית <strong>הצטברות מרחק</strong>. כל תא ברסטר הצטברות המרחק מייצג את מרחק העלות המצטברת המינימלית על פני שטח מכל תא לערכה של תארי מקור.",
	"@@Optimal-Path-As-Raster_pathtype_tag0@@": "מציין מילת מפתח שמגדירה את האופן שבו הערכים והאזורים בנתוני היעד של הקלט יפורשו בחישובי עלויות הנתיבים:",
	"@@Optimal-Path-As-Raster_pathtype_tag1@@": "<strong>כל אזור</strong> - עבור כל אזור בנתוני יעד הקלט, נתיב עם העלות הנמוכה ביותר נקבע ונשמר ברסטר הפלט. עם אפשרות זו, הנתיב המיטבי עבור כל אזור מתחיל בתא או במיקום עם שקלול המרחק בעל העלות הנמוכה ביותר באזור.",
	"@@Optimal-Path-As-Raster_pathtype_tag2@@": "<strong>היחיד הטוב ביותר</strong> - עבור כל התאים בנתוני היעד של הקלט, הנתיב המיטבי נגזר מתא עם מינימום נתיבים עם העלות הנמוכה ביותר אל תאי המקור.",
	"@@Optimal-Path-As-Raster_pathtype_tag3@@": "<strong>כל תא</strong> - עבור כל תא או מיקום עם ערכים חוקיים בנתוני יעד הקלט, נקבע נתיב מיטבי. עם אפשרות זו, כל תא של נתוני יעד הקלט מטופל בנפרד, ונתיב מיטבי נקבע עבור כל תא.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag0@@": "מזהי הערוצים לשימוש עבור זיהוי שינוי. אם לא סופקו מזהי ערוצים, יעשה שימוש בכל הערוצים מערכת נתוני רסטר הקלט.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag1@@": "ערכי המזהים צריכים להיות מספרים שלמים מפורדים ברווחים.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag0@@": "מזהי הערוצים של הערוץ הירוק וערוץ SWIR, לשימוש למיסוך עבור ענן, צל ענן ושלג. אם לא סופקו מזהים, לא יתבצע מיסוך.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag1@@": "ערכי המזהים צריכים להיות מספרים שלמים מפורדים ברווחים.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag2@@": "פרמטר זה מציין את הערוצים שבהם יש להשתמש עבור מיסוך ענן, צל ענן ושלג. מכיוון שצל ענן ושלג מופיעים כהים מאוד בערוץ אינפרא-אדום בגלים קצרים (SWIR), ועננים ושלג הם בהירים מאוד בערוץ הירוק, מומלץ למסך את האינדקסים של הערוץ עבור הערוץ הירוק וערוץ SWIR.",
	"@@CCDC-Analysis_chi-squaredthresholdfordetectchange_tag0@@": "סף סבירות שינוי חי בריבוע. אם לתצפית יש סבירות שינוי מחושבת שהיא מעל סף זה, היא מסומנת כאנומליה, שזה אירוע שינוי פוטנציאלי. ערך ברירת המחדל הוא 0.99.",
	"@@CCDC-Analysis_minimumconsecutiveanomalyobservations_tag0@@": "המספר המינימלי של תצפיות אנומליות רציפפות שחייבות להתרחש לפני שאירוע נחשב לשינוי. פיקסל חייב להיות מסומן כאנומליה במשך מספר נתון של פלחי זמן רציפים כדי להיחשב לשינוי אמיתי. ערך ברירת המחדל הוא 6.",
	"@@CCDC-Analysis_raster_tag0@@": "שכבת הרסטר הרב-ממדי של הקלט.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag0@@": "התדירות שבה יש לעדכן את מודל סדרות הזמן עם תצפיות חדשות. ברירת המחדל היא לעדן את המודל אחת לשנה.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag1@@": "פרמטר זה מגדיר באיזו תדירות מודל סדרת הזמן יעודכן עם תצפיות חדשות. עדכון תדירות מודל עשוי להיות יקר מבחינה מחשובית והתועלת עשויה להיות מזערית. לדוגמה, אם יש 365 פלחים או תצפיות ברורות בשנה ברסטר הרב-ממדי, ותדירות העדכון היא עבור כל תצפית, העיבוד יהיה פי 365 יקר יותר חישובית בהשוואה לעדכון פעם בשנה, אבל ייתכן שהדיוק לא יהיה גבוה יותר.",
	"@@Trend-To-RGB_modeltype_tag0@@": "סוג נתוני המודל שיש להמיר ל-RGB.",
	"@@Trend-To-RGB_modeltype_tag1@@": "לינארי - נתוני מגמה לינאריים יומרו ל-RGB. זוהי ברירת המחדל.",
	"@@Trend-To-RGB_modeltype_tag2@@": "הרמוני - נתוני מגמה הרמוניים יומרו ל-RGB.",
	"@@Trend-To-RGB_raster_tag0@@": "רסטר המגמה של הקלט.",
	"@@LandTrendr-Analysis_bestmodelproportion_tag0@@": "<p>ערך פרופורציית המודל הטוב ביותר. בתהליך בחירת המודל, הכלי יחשב את ערך-p עבור כל מודל ויבחר מודל בעל נקודות המפנה הרבות ביותר, תוך שמירה על ערך-p הקטן ביותר (המובהק ביותר) על בסיס ערך פרופורציה זה. ערך של 1 פירושו שערך-p של המודל הוא הנמוך ביותר אך ייתכן שמספר נקודות המפנה אינו גבוה. ערך ברירת המחדל הוא 1.25.</p>",
	"@@LandTrendr-Analysis_maximumnumberofsegments_tag0@@": "<p>מספר הסגמנטים המרבי שניתן להתאים לסדרת הזמנים עבור כל פיקסל. ערך ברירת המחדל הוא 5.</p>",
	"@@LandTrendr-Analysis_minimumnumberofobservations_tag0@@": "<p>המספר המינימלי של תצפיות תקפות שנדרש לביצוע התאמה. מספר השנים בסדרת נתוני הקלט הרב-ממדית חייב להיות שווה לערך זה או גדול ממנו. ערך ברירת המחדל הוא 6.</p>",
	"@@LandTrendr-Analysis_outputotherbands_tag0@@": "<p>מציין אם ערוצים אחרים ייכללו בתוצאות.</p><ul><li>מסומן--ערוצים אחרים ייכללו בתוצאות. נתוני הסגמנטציה ונקודות המפנה שמתקבלים מערוץ הסגמנטציה הראשוני שצוין בפרמטר <strong>ערוץ עיבוד</strong> יותאמו אף הם ליתר הערוצים בתמונות הרב-ערוציות. נתוני המודל ייכללו את ערוץ הסגמנטציה תחילה, ולאחר מכן את יתר הערוצים.</li><li>לא מסומן--יתר הערוצים לא ייכללו. זוהי ברירת המחדל.</li></ul>",
	"@@LandTrendr-Analysis_preventoneyearrecovery_tag0@@": "<p>מציין אם סגמנטים המציגים שחזור שנה אחת לא ייכללו.</p><ul><li>מסומן--סגמנטים המציגים שחזור שנה אחת לא ייכללו. זוהי ברירת המחדל.</li><li>לא מסומן--סגמנטים המציגים שחזור שנה אחת ייכללו.</li></ul>",
	"@@LandTrendr-Analysis_processingband_tag0@@": "<p>הערוץ שישמש לסגמנטציה של מסלולי ערכי הפיקסלים לאורך זמן. בחר את הערוץ שילכוד בצורה הטובה ביותר את השינויים בישות שבה ברצונך לצפות.</p>",
	"@@LandTrendr-Analysis_p-valuethreshold_tag0@@": "<p>סף ערך-p של המודל שייבחר. אחרי זיהוי נקודות המפנה בשלב הראשוני של התאמת המודל, הכלי יתאים כל סגמנט וייחשב את ערך-p כדי לקבוע את מובהקות המודל. באיטרציה הבאה, המודל יפחית את מספר הסגמנטים באחד וייחשב מחדש את ערך-p. תהליך זה יימשך, ואם ערך-p יהיה קטן מהערך שצוין בפרמטר זה, המודל ייבחר והכלי יפסיק לחפש מודל טוב יותר. אם מודל כזה לא ייבחר, הכלי יבחר מודל עם p-value הקטן מ-<strong>p-value הנמוך ביותר x ערך פרופורציית המודל הטוב ביותר</strong>. ערך ברירת המחדל הוא 0.01.</p>",
	"@@LandTrendr-Analysis_raster_tag0@@": "<p>שכבת הרסטר הרב-ממדי Landsat של קלט.</p>",
	"@@LandTrendr-Analysis_recoveryhasincreasetrend_tag0@@": "<p>מציין אם לשחזור יש מגמת עלייה (חיובית).</p><ul><li>מסומן--לשחזור יש מגמת עלייה. זוהי ברירת המחדל.</li><li>לא מסומן--לשחזור יש מגמת ירידה.</li></ul>",
	"@@LandTrendr-Analysis_recoverythreshold_tag0@@": "<p>ערך סף השחזור, בשנים. אם לסגמנט יש קצב שחזור המהיר יותר מ-<strong>1/סף השחזור</strong>, הסגמנט יימחק ולא ייכלל במודל סדרת הזמנים. הערך חייב להיות בין 0 לבין 1. ערך ברירת המחדל הוא 0.25.</p>",
	"@@LandTrendr-Analysis_snappingdate_tag0@@": "<p>התאריך המשמש לבחירת חתך לכל שנה בקלט של סט הנתונים הרב-ממדי. ייבחר החתך עם התאריך הקרוב ביותר לתאריך ההצמדה. פרמטר זה נדרש אם קלט סט הנתונים מכיל נתונים ברמה של פחות משנה.</p>",
	"@@LandTrendr-Analysis_spikethreshold_tag0@@": "<p>הסף שישמש לצמצום ערכים חריגים או אנומליות במסלול ערכי הפיקסל. הערך חייב להיות בין 0 לבין 1, כאשר המשמעות של 1 היא ללא צמצום. ערך ברירת המחדל הוא 0.9.</p>",
	"@@LandTrendr-Analysis_vertexcountovershoot_tag0@@": "<p>מספר נקודות המפנה מעבר ל-<strong>max_num_segments + 1</strong>שיכול לשמש להתאמת המודל בשלב הראשון של זיהוי נקודות המפנה. בשלב מאוחר יותר של תהליך המידול, מספר נקודות המפנה הנוספות יופחת ל-<strong>max_num_segments + 1</strong>. ערך ברירת המחדל הוא 2.</p>",
	"@@Merge-Rasters_rasters_tag0@@": "<p>קלט סטי הנתונים של רסטר או סטי הנתונים של רסטר רב-ממדי שימוזגו.</p>",
	"@@Merge-Rasters_resolveoverlapmethod_tag0@@": "<p>מציין את השיטה שתשמש ליישוב פיקסלים חופפים בסטי הנתונים המשולבים.</p><ul><li><strong>ראשון</strong>--ערך הפיקסל באזורים החופפים הוא הערך שהתקבל מהרסטר הראשון ברשימה של קלט הרסטרים. זוהי ברירת המחדל.</li><li><strong>אחרון</strong>--ערך הפיקסל באזורים החופפים הוא הערך שהתקבל מהרסטר האחרון ברשימה של קלט הרסטרים.</li><li><strong>מינימום</strong>--ערך הפיקסל באזורים החופפים הוא ערך המינימום של הפיקסלים החופפים.</li><li><strong>מקסימום</strong>--ערך הפיקסל באזורים החופפים הוא ערך המקסימום של הפיקסלים החופפים.</li><li><strong>ממוצע</strong>--ערך הפיקסל באזורים החופפים הוא ממוצע הפיקסלים החופפים.</li><li><strong>סכום</strong>--ערך הפיקסל באזורים החופפים הוא סכום הפיקסלים החופפים.</li></ul>",
	"@@Generate-Trend_cycleunit_tag0@@": "<p>מציין את יחידת הזמן שתשמש עבור אורך המחזור ההרמוני.</p><ul><li><strong>ימים</strong>--יחידת הזמן של אורך המחזור ההרמוני היא ימים.</li><li><strong>שנים</strong>--יחידת הזמן של עבור אורך המחזור ההרמוני היא שנים. זוהי ברירת המחדל.</li></ul>",
	"@@Generate-Trend_dimensionname_tag0@@": "<p>הממד שלאורכו מגמה תופק עבור המשתנה או המשתנים שנבחרו בניתוח.</p>",
	"@@Generate-Trend_harmonicfrequency_tag0@@": "<p>מספר התדירות שישמש בהתאמת המגמה. פרמטר זה מזהה את התדירות של מחזורים בשנה. ערך ברירת המחדל הוא ‎1, או מחזור הרמוני אחד בשנה.</p><p>פרמטר זה נכלל רק בניתוח המגמה עבור רגרסיה הרמונית.</p>",
	"@@Generate-Trend_ignorenodata_tag0@@": "<p>מציין אם המערכת תתעלם מערכי NoData במסגרת הניתוח.</p><ul><li>מסומן--הניתוח ייכלול את כל הפיקסלים התקפים לאורך ממד נתון ויתעלם מפיקסלים עם ערכי NoData. זוהי ברירת המחדל.</li><li>לא מסומן--תוצאת ניתוח זה תהיה NoData, אם קיימים ערכי NoData עבור הפיקסלים לאורך הממד הנתון.</li></ul>",
	"@@Generate-Trend_lengthofcycle_tag0@@": "<p>אורך השונות התקופתית למידול. היחידה היא ימים, ללא קשר ליחידת הזמן של קלט הנתונים. לדוגמה, לעוצמת הירוק של עלה יש לעתים קרובות מחזור שונות חזק בשנה יחידה, כך שאורך המחזור הוא 365.25, אפילו אם קלט הנתונים הוא עוצמת ירוק על בסיס חודשי. לנתוני טמפרטורה שעתיים יש מחזור שונות חזק לאורך יום יחיד, לפיכך אורך המחזור הוא יום 1.</p><p>אורך ברירת המחדל הוא 365.25 ימים עבור נתונים שמשתנים במחזור שנתי.</p>",
	"@@Generate-Trend_p-valueofslopecoefficient_tag0@@": "<p>מציין אם לחשב את הנתון הסטטיסטי של ערך-p עבור מקדם השיפוע של קו המגמה.</p><ul><li>מסומן--ערך-p יחושב ויוצג בפרטים כשפעולת הפונקציה תושלם.</li><li>לא מסומן--ערך-p לא יחושב. זוהי ברירת המחדל.</li></ul>",
	"@@Generate-Trend_polynomialorder_tag0@@": "<p>מספר הסדר הפולינומיאלי שבו יש להשתמש בהתאמת המגמה. פרמטר זה מציין את הסדר הפולינומיאלי. ערך ברירת המחדל הוא 2, או פולינומיאלי מסדר-שני.</p><p>פרמטר זה נכלל רק בניתוח המגמה עבור רגרסיה פולינומיאלית.</p>",
	"@@Generate-Trend_r-squared_tag0@@": "<p>מציין אם לחשב את הנתון הסטטיסטי של מידת ההתאמה של R בריבוע עבור קו התאמת המגמה.</p><ul><li>מסומן--R בריבוע יחושב ויוצג בפרטים כשפעולת הפונקציה תושלם.</li><li>לא מסומן--R בריבוע לא יחושב. זוהי ברירת המחדל.</li></ul>",
	"@@Generate-Trend_raster_tag0@@": "<p>קלט הרסטר הרב-ממדי.</p>",
	"@@Generate-Trend_rmse_tag0@@": "<p>מציין אם להפיק את שגיאת השורש המרובע הממוצע (RMSE) של קו התאמת המגמה.</p><ul><li>מסומן--RMSE יחושב ויוצג בפרטים כשפעולת הפונקציה תושלם. זוהי ברירת המחדל.</li><li>לא מסומן--RMSE לא יחושב.</li></ul>",
	"@@Generate-Trend_seasonalperiod_tag0@@": "<p>מציין את יחידת הזמן שתשמש עבור אורך התקופה העונתית בעת ביצוע בדיקת Seasonal-Kendall.</p><ul><li>ימים--היחידה עבור אורך התקופה העונתית היא ימים. זוהי ברירת המחדל.</li><li>חודשים--היחידה עבור אורך התקופה העונתית היא חודשים.</li></ul>",
	"@@Generate-Trend_trendtype_tag0@@": "<p>מציין את סוג הקו שבו יש להשתמש כדי להתאים לערכי הפיקסלים לאורך ממד.</p><ul><li><strong>לינארי</strong>--התאמת ערכי הפיקסלים של משתנה לאורך קו מגמה לינארני. זוהי ברירת המחדל.</li><li><strong>הרמוני</strong>--התאמת ערכי הפיקסלים של משתנה לאורך קו מגמה הרמוני.</li><li><strong>פולינומיאלי</strong>--התאמת ערכי הפיקסלים של משתנה לאורך קו מגמה פולינומיאלי.</li><li><strong>Mann-Kendall</strong>--הערכת ערכי הפיקסלים של המשתנה תתבצע באמצעות בדיקת Mann-Kendall.</li><li><strong>‏Seasonal Kendall</strong>--הערכת ערכי הפיקסלים של המשתנה תתבצע באמצעות בדיקת Seasonal-Kendall.</li></ul>",
	"@@Compute-Change_cellsizetype_tag0@@": "<p>בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גדלי התאים שבקלט זהים, כל האפשרויות יספקו את אותן תוצאות.</p><ul><li>ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.</li><li>מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.</li><li>מקסימום מתוך - שימוש בגודל התא הגדול ביותר מכל הרסטרים של הקלט. זוהי ברירת המחדל.</li><li>ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.</li><li>אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.</li></ul>",
	"@@Compute-Change_computechangemethod_tag0@@": "<p>שיטת החישוב.</p><ul><li><strong>הפרש</strong>--יתבצע חישוב של ההפרש המתמטי, או תוצאת תרגיל החיסור, בין ערכי הפיקסלים ברסטרים של הקלט. זוהי ברירת המחדל.</li><li><strong>הפרש יחסי--<strong>יתבצע חישוב של ההפרש בין ערכי הפיקסלים, המסביר את עוצמות הערכים שנכללים בהשוואה.</strong></li><li>הפרש קטגורי</strong>--יתבצע חישוב של ההפרש בין רסטרים קטגוריים או תמתיים, כאשר הפלט כולל מעברים בין קבוצות שהתרחשו בין שני הרסטרים.<strong></strong></li>מרחק אוקלידי מיוחד<li>--יתבצע חישוב של המרחק האוקלידי בין ערכי הפיקסל של שני רסטרים מרובי ערוצים.<strong></strong></li>הפרש זוויות ספקטרלי<li>--יתבצע חישוב של הזווית הספקטרלית בין ערכי הפיקסל של שני רסטרים מרובי ערוצים. הפלט הוא רדיאנים.</li><li><strong>ערוץ עם שינוי מרבי</strong>--יתבצע חישוב של הערוץ שאחראי לשינוי המרבי בכל פיקסל בין שני רסטרים מרובי ערוצים.</li></ul><p><strong>שיטת חישוב שינוי</strong>הוגדרה ל<strong>הפרד קטגורי</strong>ואחד הקלטים אינו קטגורי, יחושב הפרש פשוט.</p>",
	"@@Compute-Change_definetransitioncolors_tag0@@": "<p>ציין את השיטה לייצוג הפיקסלים שעברו בין קבוצות באמצעות סמלים.</p><ul><li><strong>ממוצע צבעי 'החל מ' ו'עד'</strong>--צבע הפיקסל יהיה ממוצע הצבעים של קבוצתו המקורית וקבוצתו הסופית.</li><li><strong>השתמש בצבעי 'החל מ'</strong>--צבע הפיקסל יהיה צבע קבוצתו המקורית.</li><li><strong>השתמש בצבעי 'עד'</strong>--צבע הפיקסל יהיה צבע קבוצתו הסופית.</li></ul>",
	"@@Compute-Change_extenttype_tag0@@": "<p>בחר איזה תיחום ישמש ברסטר של הפלט:</p><ul><li>ראשון מתוך--שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.</li><li>חיתוך של--שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.</li><li>איחוד של--שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.</li><li>אחרון מתוך--שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.</li></ul>",
	"@@Compute-Change_filtermethod_tag0@@": "<p>בחר את שיטת הסינון לצורך חישוב של שינויים קטגוריים</p><ul><li><strong>השאר הכל</strong>--כל הקבוצות ייכללו בפלט, ולא יתבצע סינון. בחר אפשרות זו כדי להציג את השינוי וההתמדה בסט נתונים יחיד.</li><li><strong>השאר פיקסלים שהשתנו בלבד</strong>--הפלט יכלול רק את הקבוצות שהסוג שלהן השתנה. בחר אפשרות זו אם אתה מתעניין בשינוי בלבד.</li><li><strong>השאר פיקסלים שלא השתנו בלבד</strong>--הפלט יכלול רק את הקבוצות שלא השתנו. בחר אפשרות זו אם אתה מתעניין בהתמדה בלבד.</li></ul>",
	"@@Compute-Change_fromclassvalues_tag0@@": "<p>ערכי הקבוצה מתוך<strong>מרסטר</strong>שייכללו בחישוב, אם מבצעים השוואה בין שני רסטרים קטגוריים. זוהי רשימה המופרדת באמצעות רווחים של ערכי מספרים שלמים התואמים לשדה<strong>ClassValue</strong>בסט נתוני רסטר הקלט שלך.</p>",
	"@@Compute-Change_fromraster_tag0@@": "<p>הרסטר הראשון שישמש בחישוב. כדי להעריך את השינוי בין מועד 1 (מוקדם יותר) למועד 2 (מאוחר יותר), הזן כאן את הרסטר של מועד 1.</p>",
	"@@Compute-Change_toclassvalues_tag0@@": "<p>ערכי הקבוצה מתוך<strong>לרסטר</strong>שייכללו בחישוב, אם מבצעים השוואה בין שני רסטרים קטגוריים. זוהי רשימה המופרדת באמצעות רווחים של ערכי מספרים שלמים התואמים לשדה<strong>ClassValue</strong>בסט נתוני רסטר הקלט שלך.</p>",
	"@@Compute-Change_toraster_tag0@@": "<p>הרסטר השני שישמש בחישוב. כדי להעריך את השינוי בין מועד 1 (מוקדם יותר) למועד 2 (מאוחר יותר), הזן כאן את הרסטר של מועד 2.</p>",
	"@@Compute-Change_usecolormethod_tag0@@": "<p>ציין את השיטה לייצוג הפיקסלים שעברו בין קבוצות באמצעות סמלים.</p><ul><li><strong>ממוצע צבעי 'החל מ' ו'עד'</strong>--צבע הפיקסל יהיה ממוצע הצבעים של קבוצתו המקורית וקבוצתו הסופית.</li><li><strong>השתמש בצבעי 'החל מ'</strong>--צבע הפיקסל יהיה צבע קבוצתו המקורית.</li><li><strong>השתמש בצבעי 'עד'</strong>--צבע הפיקסל יהיה צבע קבוצתו הסופית.</li></ul>",
	"@@Compute-Change_fieldnameforclassnamesinfromraster_tag0@@": "<p>שדה לאחסון שמות של קבוצות בקלט של<strong>הרסטר מ-</strong>. הכלי מחפש באופן אוטומטי את השדה<strong>ClassName</strong>או את השדה<strong>Class_Name</strong>כדי להשתמש בו.</p><p>השתמש באפשרות זו אם הקלט לא מכיל שמות שדות סטנדרטיים אלה.</p>",
	"@@Compute-Change_fieldnameforclassnamesintoraster_tag0@@": "<p>שדה לאחסון שמות של קבוצות בקלט של<strong>הרסטר ל-</strong>. הכלי יחפש באופן אוטומטי את השדה<strong>ClassName</strong>או את השדה<strong>Class_Name</strong>כדי להשתמש בו.</p><p>השתמש באפשרות זו אם הקלט לא מכיל שמות שדות סטנדרטיים אלה.</p>",
	"@@Statistics_numberofcolumns_tag0@@": "<p>מספר עמודות הפיקסלים לשימוש בממד שכונה מוקדי.</p>",
	"@@Statistics_numberofrows_tag0@@": "<p>מספר שורות הפיקסלים לשימוש בממד שכונה מוקדי.</p>",
	"@@Statistics_onlyfillnodatapixels_tag0@@": "<p>מילוי פערי NoData בפלט. אפשרות זו שימושית כאשר עלולים להיות קווים חסרים בתמונה.</p>",
	"@@Statistics_raster_tag0@@": "<p>רסטר הקלט שעליו יתבצעו חישובים סטטיסטיים מוקדיים.</p>",
	"@@Statistics_statisticstype_tag0@@": "<p>להלן שבעה הסוגים של פונקציות סטטיסטיות מוקדיות:</p><ul><li>מינימום--מחשב את ערך המינימום של הפיקסלים בתוך השכונה.</li><li>מקסימום--מחשב את ערך המקסימום של הפיקסלים בתוך השכונה.</li><li>ממוצע--מחשב את הערך הממוצע של הפיקסלים בתוך השכונה. זוהי ברירת המחדל.</li><li>סטיית תקן--מחשב את ערך סטיית התקן של הפיקסלים בתוך השכונה.</li><li>חציון - מחשב את ערך החציון של הפיקסלים בתוך השכונה.</li><li>רוב--מחשב את ערך הרוב, או הערך שקיים בתדירות הגבוהה ביותר, בפיקסלים בתוך השכונה.</li><li>מיעוט--מחשב את ערך המיעוט, או הערך שקיים בתדירות הנמוכה ביותר, בפיקסלים בתוך השכונה.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changedirection_tag0@@": "<p>מציין את כיוון השינוי שייכלל בניתוח.</p><p>פרמטר זה זמין רק כאשר קלט הרסטר של ניתוח השינויים הוא הפלט שהתקבל מכלי LandTrendr.</p><ul><li><strong>כל הכיוונים</strong>--כל כיווני השינויים נכללים בפלט. זוהי ברירת המחדל.</li><li><strong>הגדלה</strong>--הפלט יכלול רק שינויים בכיוון חיובי או של הגדלה.</li><li><strong>הפחתה</strong>--הפלט יכלול רק שינויים בכיוון שלילי או של הפחתה.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changetype_tag0@@": "<p>מציין את נתוני השינויים שיש לחשב.</p><ul><li><strong>מועד השינוי האחרון</strong>--כל פיקסל מכיל את תאריך השינוי האחרון של אותו פיקסל בסדרת הזמנים. זוהי ברירת המחדל.</li><li><strong>מועד השינוי המוקדם ביותר</strong>--כל פיקסל מכיל את תאריך השינוי המוקדם ביותר של אותו פיקסל בסדרת הזמנים.</li><li><strong>מועד השינוי הגדול ביותר</strong>--כל פיקסל מכיל את תאריך השינוי המשמעותי ביותר של אותו פיקסל בסדרת הזמנים.</li><li><strong>מספר שינויים</strong>--כל פיקסל מכיל את מספר הפעמים הכולל שהוא השתנה בסדרת הזמנים.</li><li><strong>מועד השינוי הארוך ביותר</strong>--כל פיקסל מכיל את תאריך השינוי שבסוף סגמנט המעבר הארוך ביותר בסדרת הזמנים.</li><li><strong>מועד השינוי הקצר ביותר</strong>--כל פיקסל מכיל את תאריך השינוי שבסוף סגמנט המעבר הקצר ביותר בסדרת הזמנים.</li><li><strong>מועד השינוי המהיר ביותר</strong>--כל פיקסל מכיל את תאריך השינוי שבסוף המעבר שהתרחש באופן המהיר ביותר.</li><li><strong>מועד השינוי האיטי ביותר</strong>--כל פיקסל מכיל את תאריך השינוי שבסוף המעבר שהתרחש באופן האיטי ביותר.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_filterbyduration_tag0@@": "<p>מציין אם לסנן לפי משך השינוי.</p><p></p><ul><li>מסומן--סינון התוצאות לפי משך זמן כך שרק שינויים שארכו פרק זמן נתון ייכללו בפלט.</li><li>לא מסומן--ללא סינון התוצאות לפי משך זמן. זוהי ברירת המחדל.</li></ul><p>פרמטר זה זמין רק כאשר קלט הרסטר של ניתוח השינויים הוא הפלט שהתקבל מכלי LandTrendr.</p><p>אם פרמטר זה מסומן, יש להגדיר את הפרמטרים<strong>משך מינימלי</strong>ו<strong>משך מקסימלי</strong>עבור סינון.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbymagnitude_tag0@@": "<p>מציין אם לסנן לפי עוצמת השינוי.</p><ul><li>מסומן--סינון התוצאות לפי עוצמה כך שרק שינויים בעוצמה נתונה ייכללו בפלט.</li><li>לא מסומן--ללא סינון התוצאות לפי עוצמה. זוהי ברירת המחדל</li></ul><p>.פרמטר זה זמין רק כאשר קלט הרסטר של ניתוח השינויים הוא הפלט שהתקבל מכלי LandTrendr.</p><p>אם פרמטר זה מסומן, יש להגדיר את הפרמטרים<strong>עוצמה מינימלית</strong>ו<strong>עוצמה מקסימלית</strong>עבור סינון.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyyear_tag0@@": "<p>מציין אם להגביל את הפלט לפי טווח שנים.</p><ul><li>מסומן--סינון התוצאות כך שרק שינויים שהתרחשו בטווח של שנים ספציפיות ייכללו בפלט.</li><li>לא מסומן--ללא סינון התוצאות לפי שנה. זוהי ברירת המחדל.</li></ul><p>אם פרמטר זה מסומן, יש להגדיר את הפרמטרים<strong>ערך מינימום</strong>ו<strong>ערך מקסימום</strong>עבור סינון.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbystartvalue_tag0@@": "<p>סנן את התוצאות לפי ערך התחלתי כך שרק השינויים בערך התחלתי נתון ייכללו בפלט.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyendvalue_tag0@@": "<p>סנן את התוצאות לפי ערך סופי כך שרק השינויים בערך סופי נתון ייכללו בפלט.</p>",
	"@@Detect-Change-Using-Change-Analysis_maximumnumberofchanges_tag0@@": "<p>‏מספר השינויים המרבי שיחושב לכל פיקסל. המספר שהוזן תואם למספר הערוצים ברסטר הפלט. ערך ברירת המחדל הוא 1, כלומר רק תאריך שינוי אחד מחושב ורסטר הפלט מכיל ערוץ אחד בלבד.</p><p>פרמטר זה לא זמין כאשר הפרמטר<strong>סוג השינוי</strong>מוגדר כ<strong>מספר שינויים</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_raster_tag0@@": "<p>קלט הרסטר של ניתוח השינויים.</p>",
	"@@Detect-Change-Using-Change-Analysis_segmentdate_tag0@@": "<p>מציין אם לחלץ את התאריך שבתחילת סגמנט השינוי, או בסופו.</p><p>פרמטר זה זמין רק כאשר קלט הרסטר של ניתוח השינויים הוא הפלט שהתקבל מכלי LandTrendr.</p><ul><li><strong>תחילת הסגמנט--</strong>חילוץ התאריך שבתחילת סגמנט השינוי. זוהי ברירת המחדל.</li><li><strong>סוף הסגמנט</strong>--חילוץ התאריך שבסוף סגמנט השינוי.</li></ul>",
	"@@Kernel-Density_areaunits_tag0@@": "<p>יחידות השטח של פלט ערכי הצפיפות.</p><ul><li>יחידות מפה ריבועיות--עבור הריבוע של היחידות הלינאריות לייחוס המרחבי של הפלט.</li><li>מיילים רבועים--עבור מיילים (ארה\"ב).</li><li>קילומרים רבועים--עבור קילומטרים.</li><li>אקרים--עבור אקרים (ארה\"ב).</li><li>הקטרים--עבור הקטרים.</li><li>מטרים רבועים--עבור מטרים.</li><li>יארדים רבועים--עבור יארדים (ארה\"ב).</li><li>רגל רבוע--עבור רגל (ארה\"ב).</li><li>אינצ'ים רבועים--עבור אינצ'ים (ארה\"ב).</li><li>סנטימטרים רבועים--עבור סנטימטרים.</li><li>מילימטרים רבועים--עבור מילימטרים.</li></ul>",
	"@@Kernel-Density_cellsize_tag0@@": "<p>גודל הפיקסל עבור סט נתוני הרסטר של הפלט. אם הערך<strong>גודל התא</strong>הוגדר בסביבות ה-Geoprocessing, זוהי ברירת המחדל.</p>",
	"@@Kernel-Density_inputbarriers_tag0@@": "<p>סט הנתונים שמגדיר את המחסומים.</p><p>המחסומים יכולים להיות שכבה של ישויות קו או פוליגון.</p>",
	"@@Kernel-Density_inputfeatures_tag0@@": "<p>נקודת הקלט או ישויות הקו שעבורם יש לחשב את הצפיפות.</p>",
	"@@Kernel-Density_method_tag0@@": "<p>קובע אם להשתמש בנתיב הקצר בספרואיד (שיטה גיאודזית) או על קרקע שטוחה (פלאנרית).</p><ul><li><strong>פלאנרית</strong>--משתמש במרחקים פלאנריים בין הישויות. זוהי ברירת המחדל.</li><li><strong>גיאודזית</strong>--משתמש במרחקים גיאודזיים בין ישויות. שיטה זו מביאה בחשבון את עקומת הספרואיד ומטפלת בצורה נכונה בנתונים הסמוכים לקטבים ובקו התאריך הבינלאומי.</li></ul><p>מומלץ להשתמש בשיטה<strong>הגיאודזית</strong>עם נתונים שמאוחסנים במערכת קואורדינטות שאינה מתאימה עבור מדידות מרחק ובכל ניתוח שמתפרס על אזור גיאוגרפי גדול. לדוגמה, Web Mercator או כל מערכת קואורדינטות גיאוגרפית צריכה להשתמש בשיטה<strong>הגיאודזית</strong>.</p>",
	"@@Kernel-Density_outputcellvalues_tag0@@": "<p>קובע מה הערכים ברסטר הפלט מייצגים.</p><ul><li><strong>צפיפויות</strong>--ערכי הפלט מייצגים את ערך הצפיפות החזויה. זוהי ברירת המחדל.</li><li><strong>ספירות צפויות</strong>--ערכי הפלט מייצגים את הכמות החזויה של התופעה בתוך כל פיקסל. משום שגודל הפיקסל מקושר לערך<strong>גודל התא</strong>שצוין, לא ניתן לדגום מחדש את רסטר התוצאה לגודל פיקסל שונה, שעדיין ייצג את כמות התופעה.</li></ul>",
	"@@Kernel-Density_populationfield_tag0@@": "<p>שדה המציין ערכי אוכלוסייה עבור כל ישות. ערך<strong>שדה האוכלוסייה</strong>הוא הספירה או הכמות שיש לפזר על פני השטח כדי ליצור משטח רציף. הערכים של<strong>שדה האוכלוסייה</strong>יכולים להיות מספר שלם או נקודה צפה.</p><p>האפשרויות והתנהגויות ברירת המחדל עבור השדה מפורטות להלן לפי סדר עדיפות.</p><ul><li>השתמש באפשרות<strong>ללא</strong>אל לא ייעשה שימוש באף פריט או ערך מיוחד וכל ישות תיספר פעם אחת.</li><li>השתמש באפשרות<strong>צורה</strong>אם ישויות הקלט מכילות Z.</li><li>אחרת, שדה ברירת המחדל הוא<strong>POPULATION</strong> או כל נגזרת קבילה של population (אוכלוסייה):<ul><li><strong>POPULATIONxxxx</strong>כאשר<strong>xxxx</strong>יכול להיות כל תו חוקי, כגון<strong>POPULATION6</strong>‏,<strong>POPULATION1974</strong>או<strong>POPULATIONROADTYPE</strong>.</li><li><strong>POP</strong>.</li><li><strong>POPxxxx</strong>.</li><li>אם אף אחת מהאפשרויות שלעיל אינה רלוונטית, ערך ברירת המחדל הוא<strong>ללא</strong>.</li></ul></li></ul>",
	"@@Kernel-Density_searchradius_tag0@@": "<p>רדיוס החיפוש שבתוכו יש לחשב צפיפות. היחידות מבוססות על היחידה הלינארית של ההיטל.</p><p>לדוגמה, אם היחידות הן במטרים--כדי לכלול את כל הישויות בתוך שכונה של מייל אחד--הגדר את רדיוס החיפוס שווה ל-1609.344 (מכיוון שמייל 1 = 1609.344 מטרים).</p>",
	"@@Zonal-Statistics_ignorenodataincalculations_tag0@@": "<p>מציין אם ערכי<strong>NoData</strong>ב<strong>רסטר הערכים</strong>ישפיעו על תוצאות האזור שאליו הם שייכים.</p><ul><li><strong>כן</strong>--בכל אזור ספציפי, רק הפיקסלים עם ערך ב<strong>רסטר הערכים</strong>ישמש לקביעת ערך הפלט עבור אזור זה. פיקסלים עם ערך<strong>NoData</strong>ב<strong>רסטר הערכים</strong>לא ייכללו בחישוב הסטטיסטי. זוהי ברירת המחדל.</li><li><strong>לא</strong>--בכל אזור ספציפי, אם קיימים הפיקסלים עם ערך<strong>NoData</strong>ב<strong>רסטר הערכים</strong>, ייקבע שאין די נתונים לביצוע חישובים סטטיסטיים עבור כל הפיקסלים באזור; לכן, האזור כולו יקבל את הערך<strong>NoData</strong>ברסטר הפלט.</li></ul>",
	"@@Zonal-Statistics_percentileinterpolationtype_tag0@@": "<p>קובע את שיטת האינטרפולציה של אחוזונים כאשר מתקבל מרסטר הקלט מספר זוגי של ערכים לחישוב.</p><ul><li><strong>זיהוי אוטומטי</strong>--אם רסטר הערכים של הקלט הוא פיקסל מסוג מספר שלם, נעשה שימוש בשיטה<strong>הקרוב ביותר</strong>. אם רסטר הערכים של הקלט הוא פיקסל מסוג נקודה צפה, נעשה שימוש בשיטה<strong>לינארי</strong>. זוהי ברירת המחדל.</li><li><strong>הקרוב ביותר</strong>--נעשה שימוש בערך הזמין הקרוב ביותר לאחוזון הרצוי. במקרה זה, הסוג של פיקסל הפלט זהה לזה של רסטר הערכים של הקלט.</li><li><strong>לינארי</strong>--נעשה שימוש בממוצע המשוקלל של שני הערכים המקיפים את האחוזון הרצוי. במקרה זה, פיקסל הפלט יהיה מסוג נקודה צפה.</li></ul>",
	"@@Zonal-Statistics_percentilevalue_tag0@@": "<p>האחוזון שיש לחשב. ערך ברירת המחדל הוא 90, עבור האחוזון ה-90.</p><p>הערכים יכולים להיות בטווח בין 0 ל-100. אחוזון 0 הוא למעשה שווה ערך לנתון הסטטיסטי 'מינימום', והאחוזון 100 הוא שווה ערך ל'מקסימום'. ערך של 50 יפיק למעשה את אותה תוצאה כמו ערך החציון.</p>",
	"@@Zonal-Statistics_processasmultidimensional_tag0@@": "<p>קובע את אופן העיבוד של רסטר הערכים הרב-ממדי של הקלט.</p><ul><li><strong>פלח נוכחי</strong>--הנתונים הסטטיסיים יחושבו על בסיס הפלח הנוכחי של סט הנתונים הרב-ממדי. זוהי ברירת המחדל.</li><li><strong>כל הפלחים</strong>--הנתונים הסטטיסיים יחושבו עבור כל הממדים (כגון זמן או עומק) של סט נתונים רב-ממדי.</li></ul>",
	"@@Zonal-Statistics_statisticstype_tag0@@": "<p>סוג החישוב הסטטיסטי שיש לבצע.</p><ul><li><strong>ממוצע</strong>--חישוב הממוצע של כל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li><li><strong>רוב</strong>--קביעת הערך שמתרחש בתדירות הגבוהה ביותר בכל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li><li><strong>מקסימום</strong>--קביעת הערך הגדול ביותר של כל הפיקסלים ב<strong>רסטר הפלט</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li><li><strong>חציון</strong>--קביעת הערך החציוני של כל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li><li><strong>מינימום</strong>--קביעת הערך הקטן ביותר של כל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li><li><strong>מיעוט</strong>--קביעת הערך שמתרחש בתדירות הגבוהה ביותר בכל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li><li><strong>אחוזון</strong>--חישוב אחוזון של כל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט. האחוזון ה-90 מחושב כברירת מחדל. באמצעות הפרמטר<strong>ערך אחוזון</strong>, ניתן לקבוע איזה אחוזון יחושב.</li><li><strong>טווח</strong>--חישוב ההפרש בין הערך הגדול והערך הנמוך ביותר בכל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li><li><strong>סטיית תקן</strong>--חישוב סטיית התקן של כל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li><li><strong>סכום</strong>--חישוב הערך הכולל של כל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li><li><strong>שונות</strong>--חישוב מספר הערכים הייחודיים בכל הפיקסלים ב<strong>רסטר הערכים</strong>ששייכים לאותו אזור כמו פיקסל הפלט.</li></ul>",
	"@@Zonal-Statistics_valueraster_tag0@@": "<p>הרסטר שמכיל את הערכים שלפיהם יש לבצע חישוב סטטיסטי.</p>",
	"@@Zonal-Statistics_zonefield_tag0@@": "<p>השדה שמכיל את הערכים שמגדירים כל אזור. יכול להיות מספר שלם או שדה מחרוזת של רסטר אזור.</p>",
	"@@Zonal-Statistics_zoneraster_tag0@@": "סט הנתונים שמגדיר את האזורים.<p> האזורים יכולים להיות מוגדרים על-ידי רסטר מספר שלם.</p>",
	"@@Zonal-Statistics_calculatecircularstatistics_tag0@@": "<p>מציין כיצד סוג הסטטיסטיקה יחושב.</p><ul><li><strong>חשבוני</strong> - מחשב סטטיסטיקה חשבונית. זוהי ברירת המחדל.</li><li><strong>מעגלי</strong> - מחשב נתונים סטטיסטיים מעגליים שמתאימים לכמויות מעגליות, כגון כיוון מצפן במעלות, שעות יום וחלקי שברים של מספרים אמיתיים.</li></ul>",
	"@@Zonal-Statistics_circularwrapvalue_tag0@@": "<p>הערך הגבוה ביותר האפשרי (גבול עליון) בנתונים מעגליים. זהו מספר חיובי, עם ערך ברירת מחדל של 360. ערך זה מייצג גם את אותה כמות כערך הנמוך ביותר האפשרי (גבול תחתון).</p><p>פרמטר זה ישים רק כאשר מחושבים נתוים מעגליים.</p>",
	"@@Boundary-Clean-function_inputraster_tag0@@": "<p>רסטר הקלט שעבורו תתבצע החלקה של הגבול בין אזורים.</p><p>חייב להיות מסוג מספר שלם.</p>",
	"@@Boundary-Clean-function_runexpansionandshrinkingtwice_tag0@@": "<p>מציין את מספר הפעמים שתהליך ההחלקה יתבצע, אחת או שתיים.</p><ul><li><p><strong>מסומן</strong>--פעולת ההרחבה והכיווץ מתבצעת פעמיים. בפעם הראשונה, הפעולה מתבצעת בהתאם לסוג המיון שצוין. לאחר מכן, מתבצעת פעולה נוספת של הרחבה וכיווץ, עם סדר עדיפויות הפוך. זוהי ברירת המחדל.</p></li><li><p><strong>לא מסומן</strong>--פעולת ההרחבה והכיווץ מתבצעת פעם אחת, בהתאם לסוג המיון.</p></li></ul>",
	"@@Boundary-Clean-function_sorttype_tag0@@": "<p>מציין את סוג המיון שישמש בתהליך ההחלקה. המיון קובע את העדיפות שלפיה תאים יוכלו להתרחב לתוך השכנים שלהם.</p><p>המיון יכול להתבצע על בסיס הערך או השטח של האזור.</p><ul><li><p><strong>אל תמיין</strong>--האזורים לא ממוינים לפי גודל. לאזורים בעלי ערכים גדולים יותר תהיה עדיפות גבוהה יותר להתרחבות לתוך אזורים בעלי ערכים קטנים יותר, בפלט שיעבור החלקה. זוהי ברירת המחדל.</p></li><li><p><strong>סדר יורד</strong>--מיון האזורים בסדר יורד, לפי גודל. לאזורים בעלי שטח כולל גדול יותר תהיה עדיפות גבוהה יותר להתרחבות לתוך אזורים בעלי שטח כולל קטן יותר. במקרים רבים, אפשרות זו מסלקת או מצמצמת את השכיחות של תאים מאזורים קטנים יותר בפלט שעבר החלקה.</p></li><li><p><strong>סדר עולה</strong>--מיון האזורים בסדר עולה, לפי גודל. לאזורים בעלי שטח כולל קטן יותר תהיה עדיפות גבוהה יותר להתרחבות לתוך אזורים בעלי שטח כולל גדול יותר. במקרים רבים, אפשרות זו שומרת או מגדילה את השכיחות של תאים מאזורים קטנים יותר בפלט שעבר החלקה.</p></li></ul>",
	"@@Aggregate-Multidimensional_dimension_tag0@@": "<p>ממד הצבירה. זהו הממד שלאורכו תתבצע צבירה של המשתנים.</p>",
	"@@Aggregate-Multidimensional_dimensiondefinition_tag0@@": "<p>מציין את השיטה שתשמש לסינון הנתונים הרב-ממדיים של הקלט לפני ביצוע הצבירה.</p><ul><li><strong>הכל</strong> - יתבצע שימוש בטווח המלא של ממד. זוהי ברירת המחדל.</li><li><strong>לפי ערכים</strong> - הממד ייפרס תוך שימוש בערך ממד או ברשימה של ערכים.</li><li><strong>לפי טווחים</strong> - הממד ייפרס תוך שימוש בטווח או ברשימה של טווחים.</li><li><strong>לפי איטרציה</strong> - הממד ייפרס מעל גודל מרווח שצוין.</li></ul>",
	"@@Aggregate-Multidimensional_iterationdefinitionparameters_tag0@@": "<p>הפרמטרים של הגדרת האיטרציה מאפשרים לך להגדיר את ערכי הממדים שישמשו לסינון הנתונים הרב-ממדיים של הקלט לצורך ניתוח כאשר הפרמטר<strong>הגדרת ממד</strong>מוגדר כ<strong>לפי איטרציה</strong>.</p><ul><li><strong>ממד</strong> -הממד שישמש לסינון.</li><li><strong>התחלת איטרציה ראשונה</strong> - התחלת המרווח הראשון. מרווח זה משמש לאיטרציה בסט הנתונים.</li><li><strong>סוף האיטרציה הראשונה</strong> - סוף המרווח הראשון. מרווח זה משמש לאיטרציה בסט הנתונים.סוף האיטרציה הראשונה.</li><li><strong>שלב</strong> - תדירות פריסת הנתונים.</li><li><strong>יחידה</strong> - יחידת האיטרציה.</li></ul>",
	"@@Aggregate-Multidimensional_keywordinterval_tag0@@": "<p>מציין את מרווח מילת המפתח אשר ישמש בעת צבירה לאורך ממד.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>סוג</strong>מוגדר כ<strong>מילת מפתח למרווח</strong>.</p><ul><li><strong>שעתי</strong> - ערכי הנתונים יצטברו לשלבי זמן שעתיים, והתוצאה תכלול כל שעה בסדרת הזמן. זוהי ברירת המחדל.</li><li><strong>יומי</strong> - ערכי הנתונים יצטברו לשלבי זמן יומיים, והתוצאה תכלול כל יום בסדרת הזמן.</li><li><strong>שבועי</strong> - ערכי הנתונים יצטברו לשלבי זמן שבועיים, והתוצאה תכלול כל שבוע בסדרת הזמן.</li><li><strong>Dekadly</strong> - ערכי הנתונים יצטברו ל-3 תקופות של 10 ימים כל אחת. התקופה האחרונה יכולה לכלול יותר או פחות מ-10 ימים. הפלט יכלול 3 פלחים לכל חודש.</li><li><strong>Pentadly</strong> - ערכי הנתונים יצטברו ל-6 תקופות של 5 ימים כל אחת. התקופה האחרונה יכולה לכלול יותר או פחות מ-5 ימים. הפלט יכלול 6 פלחים לכל חודש.</li><li><strong>חודשי</strong> - ערכי הנתונים יצטברו לשלבי זמן חודשיים, והתוצאה תכלול כל חודש בסדרת הזמן.</li><li><strong>רבעוני</strong> - ערכי הנתונים יצטברו לשלבי זמן רבעוניים, והתוצאה תכלול כל רבעון בסדרת הזמן.</li><li><strong>שנתי</strong> - ערכי הנתונים יצטברו לשלבי זמן שנתיים, והתוצאה תכלול כל שנה בסדרת הזמן.</li><li><strong>חוזר כל יום</strong> - ערכי הנתונים יצטברו לשלבי זמן יומיים, והתוצאה תכלול ערך נצבר אחד לכל יום יוליאני. הפלט יכלול לכל היותר 366 פלחי זמן יומיים.</li><li><strong>חוזר כל שבוע</strong> - ערכי הנתונים יצטברו לשלבי זמן שבועיים, והתוצאה תכלול ערך נצבר אחד לכל שבוע. הפלט יכלול לכל היותר 53 פלחי זמן שבועיים.</li><li><strong>חוזר כל חודש</strong> - ערכי הנתונים יצטברו לשלבי זמן חודשיים, והתוצאה תכלול ערך נצבר אחד לכל חודש. הפלט יכלול לכל היותר 12 פלחי זמן חודשיים.</li><li><strong>חוזר כל רבעון</strong> - ערכי הנתונים יצטברו לשלבי זמן רבעוניים, והתוצאה תכלול ערך נצבר אחד לכל רבעון. הפלט יכלול לכל היותר 4 פלחי זמן רבעוניים.</li></ul>",
	"@@Aggregate-Multidimensional_operation_tag0@@": "<p>מציין את השיטה המתמטית אשר תשמש לצירוף הפלחים שנצברו במרווח.</p><ul><li><strong>רוב</strong> - ערך הפיקסל שהופיע בתדירות הגבוהה ביותר יחושב על פני כל הפלחים במרווח.</li><li><strong>מקסימום</strong> - ערך המקסימום של פיקסל יחושב על פני כל הפלחים במרווח.</li><li><strong>ממוצע</strong> - ממוצע ערכי הפיקסלים יחושב על פני כל הפלחים במרווח. זוהי ברירת המחדל.</li><li><strong>חציון</strong> - הערך החציוני של פיקסל יחושב על פני כל הפלחים במרווח.</li><li><strong>מינימום</strong> - ערך המינימום של פיקסל יחושב על פני כל הפלחים במרווח.</li><li><strong>מיעוט</strong> - ערך הפיקסל שהופיע בתדירות הנמוכה ביותר יחושב על פני כל הפלחים במרווח.</li><li><strong>טווח</strong> - טווח הערכים עבור פיקסל יחושב על פני כל הפלחים במרווח.</li><li><strong>סטיית תקן</strong> - סטיית התקן של הערכים של פיקסל תחושב על פני כל הפלחים במרווח.</li><li><strong>סכום</strong> - סכום הערכים של פיקסל יחושב על פני כל הפלחים במרווח.</li><li><strong>שונות</strong> - מספר ערכי הפיקסלים הייחודיים יחושב על פני כל הפלחים במרווח.</li></ul><p>לכל האפשרויות יש גם מקבילה עם אפשרות להתעלם מ-NoData. אפשרויות אלה יבצעו את הפעולה המתמטית על כל הפיקסלים החוקיים לאורך הממד ויתעלמו מפיקסלים שהם NoData.</p>",
	"@@Aggregate-Multidimensional_ranges_tag0@@": "<p>טווחי מרווחים שצוינו בטבלה ישמשו לצבירת קבוצות של ערכים. ערכי המינימום והמקסימום מציינם את הטווח שייכלל.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>סוג</strong>מוגדר כ<strong>טווחי מרווחים</strong>.</p>",
	"@@Aggregate-Multidimensional_raster_tag0@@": "<p>קלט הרסטר הרב-ממדי.</p>",
	"@@Aggregate-Multidimensional_type_tag0@@": "<p>מציין את מרווח הממד שעבורו הנתונים יצטברו.</p><ul><li><strong>כולם</strong> - נתוני המשתנה יצטברו על פני כל הפלחים. זוהי ברירת המחדל.</li><li><strong>מילת מפתח למרווח</strong> - נתוני המשתנה יצטברו תוך שימוש במרווח מוכר.</li><li><strong>ערך מרווח</strong> - נתוני המשתנה יצטברו תוך שימוש במרווח וביחידה שצוינו על ידי המשתמש.</li><li><strong>טווחי מרווח</strong> - נתוני המשתנה יצטברו בין זוגות ערכים או תאריכים שצוינו.</li></ul>",
	"@@Aggregate-Multidimensional_valueinterval_tag0@@": "<p>גודל המרווח שישמש עבור הצבירה.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>סוג</strong>מוגדר כ<strong>ערך מרווח</strong>.</p>",
	"@@Aggregate-Multidimensional_values_tag0@@": "<p>ערכי הממד שישמשו לסינון הנתונים הרב-ממדיים של הקלט לצורך ניתוח. פרמטר זה נדרש כאשר הפרמטר<strong>הגדרת ממד</strong>מוגדר כ<strong>לפי ערכים</strong>.</p>",
	"@@Aggregate-Multidimensional_variables_tag0@@": "<p>המשתנה או המשתנים שעבורם תתבצע צבירה לאורך הממד הנתון.</p>",
	"@@Predict-Using-Regression_inputdefinitionfile_tag0@@": "<p>קובץ הגדרת רגרסיית קלט של Esri (<strong>.ecd</strong>) file שמכיל את הנתונים הסטטיסטיים והמידע עבור ערכת הנתונים הספציפית, מודל הרגרסיה ומאפיינים שנבחרו.</p>",
	"@@Predict-Using-Regression_rasters_tag0@@": "<p>ערכת או ערכות הנתונים של רסטר אשר מייצגים את משתני החיזוי. זה יכול להיות רסטר ערוץ-בודד, רסטר מרובה ערוצים, רסטר רב-ממדי, ערכת נתוני מוזאיקה או אוסף רסטר.</p>",
	"@@Cell-Statistics_operation_tag0@@": "<p>סוג החישוב הסטטיסטי שברצונך לבצע.</p><p>הנתונים הסטטיסטיים הזמינים הם<strong>רוב</strong>,<strong>מקסימום</strong>,<strong>ממוצע</strong>,<strong>חציון</strong>,<strong>מינימום</strong>,<strong>מיעוט</strong>,<strong>אחוזון</strong>,<strong>טווח</strong>,<strong>סטיית תקן</strong>,<strong>סכום</strong>ו<strong>גיוון</strong>.</p><p>ברירת המחדל היא<strong>ממוצע</strong>.</p>",
	"@@Colormap-To-RGB_randomlyassigncolortounmappedpixels_tag0@@": "<p>הצבעים מוקצים באופן אקראי לפיקסלים שלא נכללים במפת הצבעים.</p><ul><li>לא מסומן - לא מוקצה צבע לפיקסלים שאינם ממופים. זו ברירת המחדל.</li><li>מסומן - מוקצה צבע לפיקסלים שאינם ממופים.</li></ul>",
	"@@Pansharpen_sensor_tag0@@": "<p>בעת בחירה באלגוריתם Gram-Schmidt, ניתן גם לציין את החיישן שאסף את קלט הרסטר הרב-ערוצי. בחירה בסוג החיישן תגדיר משקלי ערוץ מתאימים.</p>",
	"@@Dimensional-Moving-Statistics_backwardwindow_tag0@@": "<p>הערך של מספר הפלחים לפני או מעל, שייכללו בחלון שהוגדר. הערך חייב להיות מספר שלם חיובי בין 1 ל-100. ערך ברירת המחדל הוא 1.</p><p>היחידה של פרמטר זה היא פלח.</p>",
	"@@Dimensional-Moving-Statistics_circularwrapvalue_tag0@@": "<p>הערך שישמש לעיגול של ערך לינארי לטווח של ממוצע מעגלי נתון.</p><p>הערך חייב להיות חיובי. ערך ברירת המחדל הוא 360 מעלות.</p>",
	"@@Dimensional-Moving-Statistics_dimension_tag0@@": "<p>שם הממד שעל פניו ינוע החלון.</p><p>ערך ברירת המחדל הוא הממד הראשון שאינו x,y שנמצא ברסטר הרב-ממדי של הקלט.</p>",
	"@@Dimensional-Moving-Statistics_forwardwindow_tag0@@": "<p>הערך של מספר הפלחים לפני או מעל, שייכללו בחלון שהוגדר. הערך חייב להיות מספר שלם חיובי בין 1 ל-100. ערך ברירת המחדל הוא 1.</p><p>היחידה של פרמטר זה היא פלח.</p>",
	"@@Dimensional-Moving-Statistics_inputraster_tag0@@": "<p>רסטר הקלט יכול להיות רק רסטר רב-ממדי בפורמט רסטר בענן (קובץ<strong>crf.</strong>).</p>",
	"@@Dimensional-Moving-Statistics_nodatahandling_tag0@@": "<p>מציין כיצד החישוב הסטטיסטי יטפל בערכי NoData.</p><ul><li><strong>‏Data</strong> - ערכי NoData בקלט הערכים לא ייכללו בתוצאות של החלון המוגדר שאליו הם שייכים. זו ברירת המחדל.</li><li><strong>NoData</strong> - ערכי הפלט יהיו NoData אם יש ערכי NoData בקלט שבחלון המוגדר.</li><li><strong>מילוי NoData</strong> - ערכי NoData של תאים יוחלפו בנתון הסטטיסטי שנבחר בחלון המוגדר.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentileinterpolationtype_tag0@@": "<p>מציין את שיטת האינטרפולציה שתשמש כאשר ערך האחוזון נמצא בין שני ערכים של תאים.</p><ul><li><strong>זיהוי אוטומטי</strong> - אם רסטר הקלט הוא פיקסל מסוג מספר שלם, נעשה שימוש בשיטה<strong>הקרוב ביותר</strong>. אם רסטר הקלט הוא פיקסל מסוג נקודה צפה, ייעשה שימוש בשיטה<strong>לינארי</strong>. זו ברירת המחדל.</li><li><strong>הקרוב ביותר</strong> - נעשה שימוש בערך הזמין הקרוב ביותר לאחוזון. במקרה זה, הסוג של פיקסל הפלט זהה לזה של רסטר הערכים של הקלט.</li><li><strong>לינארי</strong> - נעשה שימוש בממוצע המשוקלל של שני הערכים המקיפים את האחוזון. במקרה זה, פיקסל הפלט יהיה מסוג נקודה צפה.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentilevalue_tag0@@": "<p>האחוזון שיחושב כאשר בוחרים<strong>אחוזון</strong>בתור סוג הסטטיסטיקה. ערך ברירת המחדל הוא 90, עבור האחוזון ה-90.</p><p>הערכים יכולים להיות בטווח בין 0 ל-100. אחוזון 0 הוא למעשה שווה ערך לנתון הסטטיסטי 'מינימום', והאחוזון 100 הוא שווה ערך ל'מקסימום', אך התוצאה תהיה נקודה צפה. ערך של 50 יפיק את אותה תוצאה כמו ערך החציון.</p>",
	"@@Dimensional-Moving-Statistics_statisticstype_tag0@@": "<p>מציין את סוג הנתונים הסטטיסטיים שיחושבו.</p><p></p><ul><li><strong>ממוצע</strong> - יחושב הערך הממוצע של התאים בחלון המוגדר. זו ברירת המחדל.</li><li><strong>ממוצע מעגלי</strong> - יחושב הממוצע המעגלי של התאים בחלון המוגדר. כאשר בוחרים בסוג סטטיסטיקה זה, הפרמטר<strong>ערך עוטף מעגלי</strong>הופך לזמין.</li><li><strong>רוב</strong> - יזוהה הרוב (הערך שמתרחש בתדירות הגבוהה ביותר) של התאים בחלון המוגדר.</li><li><strong>מקסימום</strong> - יזוהה המקסימום (הערך הגדול ביותר) של התאים בחלון המוגדר.</li><li><strong>חציון</strong> - יזוהה החציון של התאים בשכונה.</li><li><strong>מינימום</strong> - יזוהה המינימום (הערך הקטן ביותר) של התאים בשכונה.</li><li><strong>אחוזון</strong> - יחושב אחוזון של התאים בשכונה. כשבוחרים סוג סטטיסטיקה זה, הפרמטרים<strong>ערך אחוזון</strong>ו<strong>סוג איטרפולציית אחוזון</strong>הופכים לזמינים. באמצעות פרמטרים חדשים אלה, תוכל לציין את האחוזון שתרצה לחשב ולבחור את סוג האינטרפולציה שבו תרצה להשתמש, בהתאמה.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_dimension_tag0@@": "<p>הממד שישמש לאינטרפולציה.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>הגדרת ממד</strong>מוגדר כ<strong>לפי מרווח</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_dimensiondefinition_tag0@@": "<p>מציין את השיטה שתשמש לסינון הנתונים מרובי-הממדים של הקלט, לפני ביצוע האינטרפולציה.</p><ul><li><strong>לפי ערכים</strong> - הממד יפולח באמצעות ערך ממד או רשימת ערכים.</li><li><strong>לפי מרווח</strong> - הממד יפולח באמצעות טווח או רשימת טווחים.</li><li><strong>לפי רסטר מטרה</strong> - הממד יפולח באמצעות רסטר מטרה רב-ממדי ספציפי.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_endofinterval_tag0@@": "<p>סוף המרווח, המשמש לצורך איטרציה בסט הנתונים.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>הגדרת ממד</strong>מוגדר כ<strong>לפי מרווח</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_ignorenodata_tag0@@": "<p>מציין האם הניתוח יתעלם מערכי NoData.</p><ul><li>לא מסומן - הניתוח יפיק תוצאת NoData אם יש ערכי NoData בפלחים סמוכים. זו ברירת המחדל.</li><li>מסומן - הניתוח ישתמש רק בפלחים המכילים פיקסלים חוקיים, ויתעלם מפלחי NoData.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_interpolationmethod_tag0@@": "<p>מציין את השיטה שתשמש לאינטרפולציה של הרסטר.</p><ul><li><strong>לינארי</strong> - הפלט יעבור אינטרפולציה לינארית באמצעות הפלחים הסמוכים. זו ברירת המחדל.</li><li><strong>השכן הקרוב ביותר</strong> - הפלט ישתמש בפלח הסמוך הקרוב ביותר.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_raster_tag0@@": "<p>קלט הרסטר הרב-ממדי.</p>",
	"@@Interpolate-Raster-By-Dimension_startofinterval_tag0@@": "<p>תחילת המרווח, המשמשת לצורך איטרציה בסט הנתונים.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>הגדרת ממד</strong>מוגדר כ<strong>לפי מרווח</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_step_tag0@@": "<p>תדירות האינטרפולציה של הנתונים.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>הגדרת ממד</strong>מוגדר כ<strong>לפי מרווח</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_targetraster_tag0@@": "<p>רסטר המטרה שהגדרת הממד מציינת.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>הגדרת ממד</strong>מוגדר כ<strong>לפי רסטר מטרה</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_unit_tag0@@": "<p>יחידת המרווח.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>הגדרת ממד</strong>מוגדר כ<strong>לפי מרווח</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_values_tag0@@": "<p>ערכי הממד שישמשו לסינון הנתונים מרובי-הממדים של הקלט לצורך ניתוח.</p><p>פרמטר זה נדרש כאשר הפרמטר<strong>הגדרת ממד</strong>מוגדר כ<strong>לפי ערכים</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_variables_tag0@@": "<p>המשתנה או המשתנים שעבורם תתבצע אינטרפולציה באמצעות הגדרת הממד.</p>",
	"@@Terrain-Flatten_calibrationtype_tag0@@": "<p>מציין האם הקלט יהיה עם השטחת פני שטח באמצעות <strong>Sigma nought</strong>או<strong>Gamma nought</strong>.</p><ul><li><strong>Gamma nought</strong>--פיזור לאחור של beta nought ינורמל באמצעות אזור היחידה של מישור משיק מקומית ל-DEM, שמוכר בשם זווית תקרית מקומית. זוהי ברירת המחדל.</li><li><strong>Sigma nought</strong>--The פיזור לאחור של beta nought ינורמל באמצעות DEM לחישוב השטח.</li></ul>",
	"@@Terrain-Flatten_dem_tag0@@": "<p>קלט DEM.</p><p>ה-DEM משמש להערכת האזור המואר מקומית.</p>",
	"@@Terrain-Flatten_geoid_tag0@@": "<p>מציין האם מערכת הייחוס האנכי של קלט DEM תומר לגובה אליפסואידי. מרבית הסטים של נתוני גובה מיוחסים לגובה אורתומטרי של פני הים, כך שנדרש תיקון במקרים אלה כדי להמיר לגובה אליפסואידי.</p><ul><li>מסומן--יתבצע תיקון גאואיד כדי להמיר גובה אורתומטרי לגובה אליפסואידי (מבוסס על EGM96 גאואיד). זוהי ברירת המחדל.</li><li>לא מסומן--לא יתבצע תיקון גאואיד. השתמש באפשרות זו רק אם ה-DEM מבוטא בגובה אליפסואידי.</li></ul>",
	"@@Terrain-Flatten_raster_tag0@@": "<p>קלט נתוני רדאר.</p><p>יש לכייל תחילה רסטר זה רדיומטרית ל-beta nought.</p>",
	"@@Create-Color-Composite_blueexpression_tag0@@": "<p>החישוב שמוקצה לרצועה השלישית.</p><p>שם רצועה, מזהה רצועה או ביטוי אלגברי המשתמש בערוצים.</p><p>האופרטורים הנתמכים הם אונארי: חיבור (+), חיסור (-), כפל (*) וחילוק (/).</p>",
	"@@Create-Color-Composite_greenexpression_tag0@@": "<p>החישוב שמוקצה לרצועה השנייה.</p><p>שם רצועה, מזהה רצועה או ביטוי אלגברי המשתמש בערוצים.</p><p>האופרטורים הנתמכים הם אונארי: חיבור (+), חיסור (-), כפל (*) וחילוק (/).</p>",
	"@@Create-Color-Composite_inputraster_tag0@@": "<p>קלט נתוני רסטר מרובה ערוצים.</p>",
	"@@Create-Color-Composite_method_tag0@@": "<p>מציין את השיטה אשר תשמש לחילוץ ערוצים.</p><ul><li>שמות ערוצים--יעשה שימוש בשם הערוץ שמייצג את מרווח אורך הגל בספקטרום האלקטרומגנטי (כגון אדום, קרוב לאינפרא-אדום או אינפרא-אדום תרמי) או הקיטוב (כגון, VH, VV, HH או HV). זוהי ברירת המחדל.</li><li>מזהי ערוץ--יעשה שימוש במספר הערוץ (כגון B1, B2 או 3).</li></ul>",
	"@@Create-Color-Composite_redexpression_tag0@@": "<p>החישוב שמוקצה לרצועה הראשונה.</p><p>שם רצועה, מזהה רצועה או ביטוי אלגברי המשתמש בערוצים.</p><p>האופרטורים הנתמכים הם אונארי: חיבור (+), חיסור (-), כפל (*) וחילוק (/).</p>",
	"@@Surface-Parameters_localsurfacetype_tag0@@": "<p>בחר את סוג פונקציית פני השטח שתותאם סביב תא היעד.</p><ul><li>ריבועי - פונקציה ריבועית של פני שטח תותאם לתאי השכונה. זהו סוג ברירת המחדל.</li><li>דו-ריבועי - פונקציית פני שטח דו-ריבועית תותאם לתאי השכונה.</li></ul>",
	"@@Surface-Parameters_neighborhooddistance_tag0@@": "<p>הפלט יחושב על פני מרחק זה ממרכז תא היעד. קובע את גודל השכונה. ערך ברירת המחדל הוא גודל תא רסטר הקלט, עם תוצאה של שכונה בגודל 3 על 3.</p>",
	"@@Surface-Parameters_outputslopemeasurement_tag0@@": "<p>יחידות המדידה (מעלות ואחוזים) אשר ישמשו לרסטר שיפוע הפלט. הפרמטר פעיל רק כאשר<strong>סוג פרמטר</strong>הוא<strong>שיפוע</strong>.</p><ul><li>מעלה - הטיה של השיפוע מחושבת במעלות. זוהי ברירת המחדל.</li><li>עלייה באחוזים - ההטיה של השיפוע תחושב כעלייה באחוזים, נקרא גם אחוז השיפוע.</li></ul>",
	"@@Surface-Parameters_parametertype_tag0@@": "<p>מציין את סוג פרמטר פני שטח הפלט אשר יחושב.</p><ul><li>שיפוע - שיעור השינוי בגובה יחושב. זוהי ברירת המחדל.</li><li>מפנה - כיוון השיפוע מטה של שיעור שינוי מקסימלי, עבור כל תא יחושב.</li><li>עקומה ממוצעת - העקומה הכוללת של פני השטח תחושב. ערך זה מחושב כממוצע של עקומת מינימום ומקסימום. עקומה זו מתארת את הקמירות או הקערוריות הפנימית של פני השטח, ללא תלות בהשפעת כוח הכבידה או הכיוון.</li><li>עקומה משיקית (קו גובה נורמלי) - העקומה הנורמלית הגאומטרית ניצבת לקו השיפוע, משיקית לקו הגובה תימדד. עקומה זו מיושמת באופן טיפוסי לאפיון הקמירות או הקערוריות של זרימה על פני השטח.</li><li>עקומת פרופיל (קו שיפוע נורמלי) - העקומה הנורמלית הגאומטרית לאורך קו השיפוע תימדד. עקומה זו מיושמת באופן טיפוסי לאפיון ההאצה וההאטה של זרימה במורד פני השטח.</li><li>עקומת תוכנית (קו גובה מוטל) - העקומה לאורך קווי הגובה תימדד.</li><li>מאמץ פיתול גיאודזי של קו גובה - שיעור השינוי בזווית השיפוע לאורך קווי גובה יימדד.</li><li>עקומה גיאודזית - העקומה הכוללת של פני השטח תימדד. מחושב כתוצר עקומת המינימום והמקסימום.</li><li>עקומת קזוראטי - העקומה הכללית של פני השטח תימדד. יכול להיות אפס או כל מספר חיובי אחר.</li></ul>",
	"@@Surface-Parameters_projectgeodesicazimuths_tag0@@": "<p>מציין האם אזימוטים גיאודזיים יוטלו לתיקון עיוות הזווית שנגרם על ידי הייחוס המרחבי של הפלט. פרמטר זה פעיל רק כאשר <strong>סוג פרמטר</strong>הוא<strong>מפנה</strong>.</p><ul><li>לא מסומן - אזימוטים גיאודזיים לא יוטלו. זוהי ברירת המחדל.</li><li>מסומן - אזימוטים גיאודזיים יוטלו.</li></ul>",
	"@@Surface-Parameters_raster_tag0@@": "<p>קלט רסטר פני שטח. זה יכול להיות מספר שלם או רסטר נקודה צפה.</p>",
	"@@Surface-Parameters_useadaptiveneighborhood_tag0@@": "<p>מציין האם מרחק שכונה ישתנה עם שינויים בנוף (אדפטיבי). המרחק המקסימלי נקבע על ידי מרחק השכונה. המרחק המינימלי הוא גודל תא רסטר הקלט.</p><ul><li>לא מסומן - מרחק שכונה בודד (קבוע) ישמש בכל המיקומים. זוהי ברירת המחדל.</li><li>מסומן - יעשה שימוש במרחק שכונה אדפטיבי בכל המיקומים.</li></ul>",
	"@@Surface-Parameters_useequatorialaspect_tag0@@": "<p>מציין האם מפנה יימדד מנקודה בקו המשווה או מהקוטב הצפוני. פרמטר זה פעיל רק כאשר<strong>סוג פרמטר</strong>הוא<strong>מפנה</strong>.</p><ul><li>לא מסומן - מפנה יימדד מהקוטב הצפוני. זוהי ברירת המחדל.</li><li>מסומן - מפנה יימדד מנקודה בקו המשווה.</li></ul>",
	"@@Surface-Parameters_zunit_tag0@@": "<p>היחידה הלינארית של ערכי Z אנכיים.</p><p>מוגדר על ידי מערכת קואורדינטות אנכית אם קיימת. אם לא קיימת מערכת קואורדינטות אנכית, יש להגדיר את יחידת Z מרשימת היחידות, כדי להבטיח חישוב גיאודזי נכון.</p><ul><li>אינץ' - היחידה הלינארית תהיה אינץ'.</li><li>רגל - היחידה הלינארית תהיה רגל.</li><li>יארד - היחידה הלינארית תהיה יארד.</li><li>מייל ארה\"ב - היחידה הלינארית תהיה מיילים.</li><li>מייל ימי - היחידה הלינארית תהיה מייל ימי.</li><li>מילימטר - היחידה הלינארית תהיה מילימטרים.</li><li>סנטימטר - היחידה הלינארית תהיה סנטימטרים.</li><li>מטר - היחידה הלינארית תהיה מטרים. זוהי ברירת המחדל.</li><li>קילומטר - היחידה הלינארית תהיה קילומטרים.</li><li>דצימטר - היחידה הלינארית תהיה דצימטרים.</li></ul>",
	"@@Surface-Parameters_analysismask_tag0@@": "<p>רסטר שמציין את המיקומים שבו יתרחש הניתוח.</p><p>הרסטר יכול להיות מספר שלם או מסוג נקודה צפה.</p><p>כל התאים עם ערך חוקי, כולל אפס, ירכיבו את המסכה. תאים שהם NoData במסכה יהיוו NoData בפלט.</p>",
	"@@Geometric-Median_cellsizetype_tag0@@": "<p>בחר באיזה גודל תא להשתמש ברסטר הפלט. אם כל גדלי התאים שבקלט זהים, כל האפשרויות יספקו את אותן תוצאות.</p><ul><li>ראשון מתוך - שימוש בגודל התא הראשון מהרסטרים של הקלט.</li><li>מינימום מתוך - שימוש בגודל התא הקטן ביותר מכל הרסטרים של הקלט.</li><li>מקסימום מתוך - שימוש בגודל התא הגדול ביותר מכל הרסטרים של הקלט. זוהי ברירת המחדל.</li><li>ממוצע מתוך - שימוש בגודל התא הממוצע מכל הרסטרים של הקלט.</li><li>אחרון מתוך - שימוש בגודל התא האחרון מהרסטרים של הקלט.</li></ul>",
	"@@Geometric-Median_epsilon_tag0@@": "<p>מציין את ערך ההתכנסות בין שתי איטרציות עוקבות. כאשר אפסילון קטן מהערך שצוין או שווה לו, האיטרציה מפסיקה, ונעשה שימוש בתוצאה של האיטרציה האחרונה.</p>",
	"@@Geometric-Median_extenttype_tag0@@": "<p>בחר איזה תיחום ישמש ברסטר של הפלט:</p><ul><li><p>ראשון מתוך--שימוש בתיחום של רסטר הקלט הראשון כדי לקבוע את תיחום העיבוד.</p></li><li>חיתוך של--שימוש בתיחום של הפיקסלים החופפים כדי לקבוע את תיחום העיבוד. זוהי ברירת המחדל.</li><li>איחוד של--שימוש בתיחום של כל הרסטרים כדי לקבוע את תיחום העיבוד.</li><li>אחרון מתוך--שימוש בתיחום של רסטר הקלט האחרון כדי לקבוע את תיחום העיבוד.</li></ul>",
	"@@Geometric-Median_maximumnumberofiterations_tag0@@": "<p>מציין את מספר האיטרציות המקסימלי להשלמה. החישוב מסתיים עם הגעה לערך זה, ללא תלות בהגדרה של<strong>אפסילון</strong>.</p>",
	"@@Geometric-Median_rasters_tag0@@": "<p>רטרים מרובי ערוצים של הקלט.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster1_tag0@@": "<p>רסטר הקלט מייצג מרחק עלות מצטברת מהמקור הראשון.</p><p>זה צריך להיות פלט מרחק עלות מצטברת מפונקציה<strong>צבירת מרחק</strong>או<strong>הקצאת מרחק</strong>.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster2_tag0@@": "<p>רסטר הקלט מייצג מרחק עלות מצטברת מהמקור השני.</p><p>זה צריך להיות פלט מרחק עלות מצטברת מפונקציה<strong>צבירת מרחק</strong>או<strong>הקצאת מרחק</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster1_tag0@@": "<p>רסטר כיוון לאחור של הקלט מהמקור הראשון.</p><p>זהו סט נתוני רסטר שמזהה את כיוון התא הבא לאורך הנתיב עם העלות הנמוכה ביותר אל המקור הראשון. זהו פלט מפונקציה<strong>צבירת מרחק</strong>או<strong>הקצאת מרחק</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster2_tag0@@": "<p>רסטר כיוון לאחור של הקלט מהמקור השני.</p><p>זהו סט נתוני רסטר שמזהה את כיוון התא הבא לאורך הנתיב עם העלות הנמוכה ביותר אל המקור הראשון. זהו פלט מפונקציה<strong>צבירת מרחק</strong>או<strong>הקצאת מרחק</strong>.</p>",
	"@@Least-Cost-Corridor_threshold_tag0@@": "<p>סף אחוז או עלות מצטברת שיקבע האם תא נתון ייכלל ברסטר פרוזדור הפלט.</p><p>כאשר הפרמטר<strong>שיטת סף</strong>מוגדר כ<strong>אחוזר העלות הנמוכה ביותר</strong>, הערך שצוין מציין את אחוז העלייה שיש להחיל מערך המינימום של רסטרי מרחק העלות המצטברת שסוכמו. כאשר הפרמטר<strong>שיטת ספ</strong>מוגדר כ<strong>עלות מצטברת</strong>, הערך מציין תאים בעלי עלות מצטברת מסוכמת שווה או קטנה מהערך שייכלל בפרוזדור.</p><p>פרמטר זה פעיל רק אם הפרמטר<strong>שיטת סף</strong>מוגדר כ<strong>אחוז של העלות הנמוכה ביותר</strong>או<strong>עלות מצטברת</strong>.</p>",
	"@@Least-Cost-Corridor_thresholdmethod_tag0@@": "<p>מציין כיצד יוגדר הסף.</p><p></p><ul><li><strong>ללא סף</strong> -לא יוחל סף, ופרוזדור התוצאה יכסה את התיחום המלא של רסטרי הקלט. זוהי ברירת המחדל.</li><li><strong>אחוז של העלות הנמוכה ביותר</strong> - הסף יוגדר כאחוז מערך המינימום של רסטר מרחק העלות המצטברת המסוכמת.</li><li><strong>עלות מצטברת</strong> - הסף יוגדר ביחידות מרחק עלות מצטברת.</li></ul>"
};
const helpTexts_he = {
	rfxArgsHelpTexts: rfxArgsHelpTexts
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpTexts_he);


//# sourceMappingURL=help-texts.he-95b9bde1.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,