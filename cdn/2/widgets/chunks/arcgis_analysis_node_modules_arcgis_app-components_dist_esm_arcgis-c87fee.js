"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-c87fee"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-tile-layer-settings.entry.js":
/*!********************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-tile-layer-settings.entry.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_new_item_pages_tile_layer_settings: () => (/* binding */ ArcgisNewItemPagesTileLayerSettings)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./item-properties-10491b2e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-10491b2e.js");
/* harmony import */ var _feature_layer_573bb473_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./feature-layer-573bb473.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-573bb473.js");
/* harmony import */ var _tile_layer_8a7b93de_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tile-layer-8a7b93de.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-8a7b93de.js");
/* harmony import */ var _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./add-item-dbbe2f57.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js");
/* harmony import */ var _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ui-bca7bcd1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-bca7bcd1.js");
/* harmony import */ var _tile_layer_cf04fa97_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tile-layer-cf04fa97.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-cf04fa97.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _feature_layer_79fb302c_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./feature-layer-79fb302c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-79fb302c.js");
/* harmony import */ var _guid_aeaed84d_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./guid-aeaed84d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-aeaed84d.js");
/* harmony import */ var _thumbnail_bcb89e69_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./thumbnail-bcb89e69.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/thumbnail-bcb89e69.js");
/* harmony import */ var _service_8c2c4241_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./service-8c2c4241.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/service-8c2c4241.js");
/* harmony import */ var _user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./user-3ea69c3a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js");
/* harmony import */ var _query_d62660d4_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./query-d62660d4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-d62660d4.js");
/* harmony import */ var _api_2e3a136f_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./api-2e3a136f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/api-2e3a136f.js");
/* harmony import */ var _string_58a5fef3_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./string-58a5fef3.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/string-58a5fef3.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _item_c58ffced_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./item-c58ffced.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-c58ffced.js");
/* harmony import */ var _server_item_8d384796_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./server-item-8d384796.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-8d384796.js");
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/* harmony import */ var _functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./functional-81373f6d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-81373f6d.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/* harmony import */ var _feature_layer_17b64946_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./feature-layer-17b64946.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-17b64946.js");
/* harmony import */ var _ags_eb458a03_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./ags-eb458a03.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ags-eb458a03.js");
/* harmony import */ var _url_35875a10_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./url-35875a10.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-35875a10.js");
/* harmony import */ var _storage_0353a769_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./storage-0353a769.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/storage-0353a769.js");
/* harmony import */ var _file_bf8ab90f_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./file-bf8ab90f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-bf8ab90f.js");
/* harmony import */ var _store_6a88e6c5_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./store-6a88e6c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/store-6a88e6c5.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


































const arcgisNewItemPagesTileLayerSettingsCss = ".title{margin-bottom:1.5rem}.section{margin-bottom:2rem}.section-title{font-size:1rem;font-weight:400;margin-bottom:0.25rem;margin-top:0px}.description{margin-bottom:1rem;margin-top:0px;font-size:0.75rem}";

const ArcgisNewItemPagesTileLayerSettings = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.newItemUpdatePage = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
        // --- Main flow controller
        this.publishType = "tiles";
        // --- Data
        this.autoCreation = true;
        this.basemapUrl = "";
        this.featureLayerInfos = null;
        this.featureLayerLayers = null;
        this.serviceInfo = null;
        /* For auto creation option */
        this.cacheOnDemandMinScale = _tile_layer_cf04fa97_js__WEBPACK_IMPORTED_MODULE_8__.T;
        this.calculatedScale = {
            minScale: _tile_layer_cf04fa97_js__WEBPACK_IMPORTED_MODULE_8__.T,
            maxScale: _tile_layer_cf04fa97_js__WEBPACK_IMPORTED_MODULE_8__.e
        };
        /** Used to prevent re-fetching whenever the user switch baseMapType */
        this.curLods = [];
        this.ranges = [
            { level: 0, label: "world" },
            { level: 1, label: "continent" },
            { level: 2, label: "countries" },
            { level: 3, label: "countriesSmall" },
            { level: 4, label: "states" },
            { level: 5, label: "state" },
            { level: 6, label: "counties" },
            { level: 7, label: "county" },
            { level: 8, label: "metropolitan" },
            { level: 9, label: "cities" },
            { level: 10, label: "city" },
            { level: 11, label: "town" },
            { level: 12, label: "neighborhood" },
            { level: 13, label: "streets" },
            { level: 14, label: "street" },
            { level: 15, label: "buildings" },
            { level: 16, label: "building" },
            { level: 17, label: "small" },
            { level: 18, label: "rooms" },
            { level: 19, label: "room" }
        ];
        this.tileLayerInfo = null;
        // --- UI
        this.handleUrlInputError = (errString) => {
            const { error } = this.i18n;
            this.alertInfo = {
                title: errString === "invalidUrl" ? this.invalidUrlString : error.urlErrorTitle,
                description: errString === "invalidUrl" ? undefined : error[errString]
            };
        };
        // --- Functionality
        this.getPublishTypeInfo = () => {
            const { publishType } = this;
            switch (publishType) {
                case "tiles":
                    return "mapserver";
                case "scenes":
                    return "sceneserver";
                case "features":
                    return "featureserver";
                case "vectorTiles":
                    return "vectortileserver";
                case "tiledImagery":
                case "dynamicImagery":
                    return "imageserver";
                default:
                    return publishType;
            }
        };
        this.toggleAutoCreation = (e) => {
            this.autoCreation = e.detail;
        };
        this.handleBasemapChange = (basemap) => {
            var _a;
            const { tileLayerInfo, curLods } = this;
            this.basemapType = basemap;
            const handleNewLods = (newLods) => {
                const isSameLods = newLods.length === curLods.length &&
                    newLods.every((lod, index) => {
                        const curLod = curLods[index];
                        return (lod.level === curLod.level &&
                            lod.resolution === curLod.resolution &&
                            lod.scale === curLod.scale &&
                            lod.label === curLod.label);
                    });
                if (!isSameLods) {
                    this.curLods = newLods;
                }
            };
            const userDefinedLods = (_a = tileLayerInfo === null || tileLayerInfo === void 0 ? void 0 : tileLayerInfo.info) === null || _a === void 0 ? void 0 : _a.lods;
            if (basemap === "standard") {
                handleNewLods(_tile_layer_cf04fa97_js__WEBPACK_IMPORTED_MODULE_8__.g);
            }
            else if (userDefinedLods) {
                handleNewLods(userDefinedLods);
            }
        };
        this.fetchTileLayerInfo = async (url) => {
            this.isProcessing = true;
            this.alertInfo = null;
            this.tileLayerInfo = null;
            const { error, result } = await (0,_tile_layer_8a7b93de_js__WEBPACK_IMPORTED_MODULE_5__.b)(url, false);
            if (error) {
                this.handleUrlInputError(error.code);
            }
            else if (result) {
                this.tileLayerInfo = { url, info: result };
            }
            this.isProcessing = false;
            return !error;
        };
        this.onUrlInputBlur = async () => {
            const { tileLayerInfo, basemapUrl } = this;
            if (!basemapUrl) {
                this.tileLayerInfo = null;
                this.basemapUrl = null;
                return;
            }
            if ((tileLayerInfo === null || tileLayerInfo === void 0 ? void 0 : tileLayerInfo.url) === basemapUrl) {
                // No point in re-fetching the same info
                return;
            }
            this.fetchTileLayerInfo(basemapUrl);
        };
        this.alertInfo = undefined;
        this.isProcessing = false;
        this.showIncreaseScaleRangeWarning = false;
        this.selectedItem = undefined;
        this.basemapType = undefined;
    }
    async handleNext() {
        var _a;
        if (_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerPublishType === "3dTiles") {
            // 3D Tiles doesn't support this flow
            return;
        }
        const { publishType, serviceInfo: _, autoCreation, cacheOnDemandMinScale, calculatedScale, tileLayerInfo, selectedItem, basemapType, basemapUrl, inputRef, handleUrlInputError, fetchTileLayerInfo } = this;
        if (basemapType === "custom") {
            if (!basemapUrl) {
                handleUrlInputError("invalidUrl");
                inputRef.setFocus();
                return;
            }
            if (!tileLayerInfo) {
                const success = await fetchTileLayerInfo(basemapUrl);
                if (!success) {
                    inputRef.setFocus();
                    return;
                }
            }
        }
        const { publishContent } = (0,_tile_layer_8a7b93de_js__WEBPACK_IMPORTED_MODULE_5__.d)({
            id: selectedItem.id,
            title: selectedItem.title
        }, {
            publishType,
            cacheOnDemand: publishType !== "vectorTiles" && autoCreation,
            cacheOnDemandMinScale,
            tileInfo: tileLayerInfo === null || tileLayerInfo === void 0 ? void 0 : tileLayerInfo.info,
            scale: Object.assign({}, calculatedScale),
            layers: (_a = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerData) === null || _a === void 0 ? void 0 : _a.layers
        }, _config_75adf962_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isPortal);
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerPublishContent = publishContent;
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileAutoCreation = autoCreation;
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerBasemapType = basemapType;
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerBasemapUrl = basemapUrl;
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerPublishType = publishType;
        this.newItemUpdatePage.emit("itemProperties");
    }
    async componentWillLoad() {
        var _a, _b;
        if (_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerPublishType === "3dTiles") {
            // 3D Tiles doesn't support this flow
            return;
        }
        this.fromFeatureLayer = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerFromFeatureLayer;
        this.publishType = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerPublishType;
        this.i18n = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_7__.u.i18n.tileLayerSettings;
        this.invalidUrlString = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_7__.u.i18n.url.invalidUrl;
        this.autoCreation = (_a = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileAutoCreation) !== null && _a !== void 0 ? _a : true;
        this.basemapUrl = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerBasemapUrl;
        this.basemapType = (_b = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerBasemapType) !== null && _b !== void 0 ? _b : "standard";
        // Reset request item
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerPublishContent = null;
        let curItem = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.item;
        if (!curItem) {
            // In case the item is published from item detail page
            curItem = Object.assign(Object.assign({}, _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.existingItem), { id: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.id, title: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.sourceTitle, type: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.type, tags: _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_3__.i.tags });
            _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.item = curItem;
        }
        // TODO: integrate feature/tile layer publish types with main ItemType structure
        const publishMap = {
            vectorTiles: "Vector Tile Service",
            tiles: "Tile Layer",
            scenes: "Scene Service"
        };
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.type = publishMap[_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerPublishType];
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_3__.i.title = curItem.title;
        this.selectedItem = curItem;
        const processTileDetail = async () => {
            var _a;
            if (_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerPublishType === "3dTiles") {
                // 3D Tiles doesn't support this flow
                return;
            }
            this.isProcessing = true;
            const url = curItem.url;
            let layers = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerLayers;
            let tables = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerTables;
            let serviceInfo = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerServiceInfo;
            if ((!_config_75adf962_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isPortal || !_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_6__.a.tileLayerFromFeatureLayer) &&
                !layers &&
                !tables &&
                !serviceInfo) {
                const result = await (0,_feature_layer_573bb473_js__WEBPACK_IMPORTED_MODULE_4__.q)(url, (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_1__.g)(_config_75adf962_js__WEBPACK_IMPORTED_MODULE_2__.c.portal), true);
                layers = result.layers;
                tables = result.tables;
                serviceInfo = result.serviceInfo;
            }
            this.serviceInfo = serviceInfo;
            this.featureLayerInfos = [...(layers || []), ...(tables || [])];
            this.featureLayerLayers = [...(layers || [])];
            // TODO: support scene
            // https://devtopia.esri.com/WebGIS/arcgis-portal-app/blob/master/src/js/arcgisonline/sharing/dijit/dialog/PublishTileServiceDlg.js#L382-L394
            // https://devtopia.esri.com/WebGIS/arcgis-portal-app/blob/master/src/js/arcgisonline/sharing/dijit/dialog/PublishTileServiceDlg.js#L404-L406
            await this.handleTileLayerScaleChange({
                minScale: _tile_layer_cf04fa97_js__WEBPACK_IMPORTED_MODULE_8__.T,
                maxScale: _tile_layer_cf04fa97_js__WEBPACK_IMPORTED_MODULE_8__.e
            });
            // check for tiles on demand renderer support
            if (this.publishType === "tiles") {
                // TODO: disable cache on demand based on the result
                (0,_tile_layer_8a7b93de_js__WEBPACK_IMPORTED_MODULE_5__.h)(this.featureLayerLayers, (_a = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_2__.c.config.tilesOnDemandEnabled) !== null && _a !== void 0 ? _a : false);
            }
            this.isProcessing = false;
        };
        // Avoid blocking the render thread with await
        processTileDetail();
    }
    async handleTileLayerScaleChange(constraints) {
        var _a, _b;
        const { selectedItem, featureLayerInfos, tileLayerInfo, publishType } = this;
        if (publishType !== "tiles") {
            return;
        }
        const itemUrl = selectedItem.url;
        const { cacheOnDemandMinScale, calculatedScale } = await (0,_tile_layer_8a7b93de_js__WEBPACK_IMPORTED_MODULE_5__.e)(constraints, (_b = (_a = tileLayerInfo === null || tileLayerInfo === void 0 ? void 0 : tileLayerInfo.info) === null || _a === void 0 ? void 0 : _a.lods) !== null && _b !== void 0 ? _b : _tile_layer_cf04fa97_js__WEBPACK_IMPORTED_MODULE_8__.a.lods, featureLayerInfos, itemUrl);
        if (itemUrl) {
            cacheOnDemandMinScale && (this.cacheOnDemandMinScale = cacheOnDemandMinScale);
            this.calculatedScale = calculatedScale;
        }
    }
    render() {
        const { ranges: _, i18n, toggleAutoCreation, handleBasemapChange, onUrlInputBlur, isProcessing, autoCreation, basemapType, basemapUrl, alertInfo, publishType, fromFeatureLayer } = this;
        // TODO: add _selectAttributesContainer for vector tiles
        // TODO: implement the rest of `_getItemAttr`
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { active: isProcessing }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "title" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-description", { header: i18n.title, scale: "l" })), publishType === "tiles" && (!_config_75adf962_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isPortal || !fromFeatureLayer) && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "section" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-switch-card", { defaultChecked: autoCreation, header: i18n.autoCreateOption.title, description: i18n.autoCreateOption.description, onSwitchChange: toggleAutoCreation }))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "section" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "section-title" }, i18n.basemapOption), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select-group", { layout: "vertical" }, _tile_layer_cf04fa97_js__WEBPACK_IMPORTED_MODULE_8__.f.map((option) => {
            const key = option === "custom" ? "customBasemap" : "onlineBasemapOption";
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select", { key: option, checked: option === basemapType, onCalciteTileSelectChange: () => handleBasemapChange(option), description: i18n[key].description, heading: i18n[key].title, name: option, "input-enabled": true, "input-alignment": "start", type: "radio", value: option, width: "full", id: `${option}-input-option` }));
        }))), basemapType === "custom" && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "section" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "section-title" }, i18n.customBasemapUrl), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { scale: "m", disabled: isProcessing, value: basemapUrl, onCalciteInputInput: (e) => {
                this.basemapUrl = e.target.value;
                this.alertInfo = null;
            }, onBlur: onUrlInputBlur, placeholder: "https://webadaptorhost.domain.com/arcgis/rest/services/service/MapServer", ref: (ele) => (this.inputRef = ele) }))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: alertInfo === null || alertInfo === void 0 ? void 0 : alertInfo.title, description: alertInfo === null || alertInfo === void 0 ? void 0 : alertInfo.description, active: !!alertInfo, onAlertDismiss: () => (this.alertInfo = null) })));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesTileLayerSettings.style = arcgisNewItemPagesTileLayerSettingsCss;



//# sourceMappingURL=arcgis-new-item-pages-tile-layer-settings.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-cf04fa97.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-cf04fa97.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   D: () => (/* binding */ DEFAULT_TILE_LAYER_3D_TILES_LAYER_TYPE),
/* harmony export */   T: () => (/* binding */ TILE_LAYER_SCALE_MIN),
/* harmony export */   a: () => (/* binding */ presetRasterTileCacheInfo),
/* harmony export */   b: () => (/* binding */ presetVectorTileImageInfo),
/* harmony export */   c: () => (/* binding */ presetRasterTileImageInfo),
/* harmony export */   d: () => (/* binding */ tileLayerTypes),
/* harmony export */   e: () => (/* binding */ TILE_LAYER_SCALE_MAX),
/* harmony export */   f: () => (/* binding */ tileLayerBasemaps),
/* harmony export */   g: () => (/* binding */ presetLods),
/* harmony export */   p: () => (/* binding */ presetVectorTileCacheInfo),
/* harmony export */   t: () => (/* binding */ tilesLayer3dTilesLayerTypes)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */
const tileLayerBasemaps = ["standard", "custom"];
const tilesLayer3dTilesLayerTypes = ["IntegratedMesh", "3DObject"];
const DEFAULT_TILE_LAYER_3D_TILES_LAYER_TYPE = tilesLayer3dTilesLayerTypes[0];
const tileLayerTypes = ["vector", "raster", "3dTiles"];
// TODO: switch this back once the SettingTileLayer supports this number
// export const TILE_LAYER_SCALE_MIN = 591657527.591555;
const TILE_LAYER_SCALE_MIN = 147914382;
const TILE_LAYER_SCALE_MAX = 0;
const presetLods = [
    { level: 0, label: "1:591,657,528", scale: 591657527.591555 },
    { level: 1, label: "1:295,828,764", scale: 295828763.795777 },
    { level: 2, label: "1:147,914,382", scale: 147914381.897889 },
    { level: 3, label: "1:73,957,191", scale: 73957190.948944 },
    { level: 4, label: "1:36,978,595", scale: 36978595.474472 },
    { level: 5, label: "1:18,489,298", scale: 18489297.737236 },
    { level: 6, label: "1:9,244,649", scale: 9244648.868618 },
    { level: 7, label: "1:4,622,324", scale: 4622324.434309 },
    { level: 8, label: "1:2,311,162", scale: 2311162.217155 },
    { level: 9, label: "1:1,155,581", scale: 1155581.108577 },
    { level: 10, label: "1:577,791", scale: 577790.554289 },
    { level: 11, label: "1:288,895", scale: 288895.277144 },
    { level: 12, label: "1:144,448", scale: 144447.638572 },
    { level: 13, label: "1:72,224", scale: 72223.819286 },
    { level: 14, label: "1:36,112", scale: 36111.909643 },
    { level: 15, label: "1:18,056", scale: 18055.954822 },
    { level: 16, label: "1:9,028", scale: 9027.977411 },
    { level: 17, label: "1:4,514", scale: 4513.988705 },
    { level: 18, label: "1:2,257", scale: 2256.994353 },
    { level: 19, label: "1:1,128", scale: 1128.497176 },
    { level: 20, label: "1:564", scale: 564.248588 },
    { level: 21, label: "1:282", scale: 282.124294 },
    { level: 22, label: "1:141", scale: 141.062147 }
];
const presetRasterTileCacheInfo = {
    spatialReference: { wkid: 102100, latestWkid: 3857 },
    origin: { x: -20037508.342787, y: 20037508.342787 },
    rows: 256,
    cols: 256,
    dpi: 96,
    preciseDpi: 96,
    lods: [
        { level: 0, resolution: 156543.033928, scale: 591657527.591555 },
        { level: 1, resolution: 78271.5169639999, scale: 295828763.795777 },
        { level: 2, resolution: 39135.7584820001, scale: 147914381.897889 },
        { level: 3, resolution: 19567.8792409999, scale: 73957190.948944 },
        { level: 4, resolution: 9783.93962049996, scale: 36978595.474472 },
        { level: 5, resolution: 4891.96981024998, scale: 18489297.737236 },
        { level: 6, resolution: 2445.98490512499, scale: 9244648.868618 },
        { level: 7, resolution: 1222.99245256249, scale: 4622324.434309 },
        { level: 8, resolution: 611.49622628138, scale: 2311162.217155 },
        { level: 9, resolution: 305.748113140558, scale: 1155581.108577 },
        { level: 10, resolution: 152.874056570411, scale: 577790.554289 },
        { level: 11, resolution: 76.4370282850732, scale: 288895.277144 },
        { level: 12, resolution: 38.2185141425366, scale: 144447.638572 },
        { level: 13, resolution: 19.1092570712683, scale: 72223.819286 },
        { level: 14, resolution: 9.55462853563415, scale: 36111.909643 },
        { level: 15, resolution: 4.77731426794937, scale: 18055.954822 },
        { level: 16, resolution: 2.38865713397468, scale: 9027.977411 },
        { level: 17, resolution: 1.19432856685505, scale: 4513.988705 },
        { level: 18, resolution: 0.597164283559817, scale: 2256.994353 },
        { level: 19, resolution: 0.298582141647617, scale: 1128.497176 },
        { level: 20, resolution: 0.14929107082380833, scale: 564.248588 },
        { level: 21, resolution: 0.07464553541190416, scale: 282.124294 },
        { level: 22, resolution: 0.03732276770595208, scale: 141.062147 }
    ]
};
const presetVectorTileCacheInfo = {
    spatialReference: {
        wkid: 102100,
        latestWkid: 3857
    },
    origin: {
        x: -2.0037508342787e7,
        y: 2.0037508342787e7
    },
    rows: 512,
    cols: 512,
    dpi: 96,
    preciseDpi: 96,
    lods: [
        { level: 0, resolution: 78271.51696399994, scale: 2.95828763795777e8 },
        { level: 1, resolution: 39135.75848200009, scale: 1.47914381897889e8 },
        { level: 2, resolution: 19567.87924099992, scale: 7.3957190948944e7 },
        { level: 3, resolution: 9783.93962049996, scale: 3.6978595474472e7 },
        { level: 4, resolution: 4891.96981024998, scale: 1.8489297737236e7 },
        { level: 5, resolution: 2445.98490512499, scale: 9244648.868618 },
        { level: 6, resolution: 1222.992452562495, scale: 4622324.434309 },
        { level: 7, resolution: 611.4962262813797, scale: 2311162.217155 },
        { level: 8, resolution: 305.74811314055756, scale: 1155581.108577 },
        { level: 9, resolution: 152.87405657041106, scale: 577790.554289 },
        { level: 10, resolution: 76.43702828507324, scale: 288895.277144 },
        { level: 11, resolution: 38.21851414253662, scale: 144447.638572 },
        { level: 12, resolution: 19.10925707126831, scale: 72223.819286 },
        { level: 13, resolution: 9.554628535634155, scale: 36111.909643 },
        { level: 14, resolution: 4.77731426794937, scale: 18055.954822 },
        { level: 15, resolution: 2.388657133974685, scale: 9027.977411 },
        { level: 16, resolution: 1.1943285668550503, scale: 4513.988705 },
        { level: 17, resolution: 0.5971642835598172, scale: 2256.994353 },
        { level: 18, resolution: 0.29858214164761665, scale: 1128.497176 },
        { level: 19, resolution: 0.14929107082380833, scale: 564.248588 },
        { level: 20, resolution: 0.07464553541190416, scale: 282.124294 },
        { level: 21, resolution: 0.03732276770595208, scale: 141.062147 },
        { level: 22, resolution: 0.01866138385297604, scale: 70.5310735 },
        { level: 23, resolution: 0.0093306919293428040466217365, scale: 35.265536760789715032412079626 }
    ]
};
const presetVectorTileImageInfo = {
    format: "indexedVector",
    compressionQuality: 0,
    antialiasing: false
};
const presetRasterTileImageInfo = {
    format: "PNG32",
    compressionQuality: 0,
    antialiasing: true
};



//# sourceMappingURL=tile-layer-cf04fa97.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,