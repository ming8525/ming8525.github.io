"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-20e0db"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-item-badge_10.entry.js":
/*!***********************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-item-badge_10.entry.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_item_badge: () => (/* binding */ ArcgisItemBadge),
/* harmony export */   arcgis_item_badges: () => (/* binding */ ArcgisItemBadges),
/* harmony export */   arcgis_item_favorite: () => (/* binding */ ArcgisItemFavorite),
/* harmony export */   arcgis_item_share_summary: () => (/* binding */ ArcgisItemShareSummary),
/* harmony export */   arcgis_selected: () => (/* binding */ ArcgisSelectedItem$1),
/* harmony export */   arcgis_selected_item: () => (/* binding */ ArcgisSelectedItem),
/* harmony export */   arcgis_sublayer_type: () => (/* binding */ ArcgisSublayerTypeIcon),
/* harmony export */   arcgis_user_avatar: () => (/* binding */ ArcgisUserAvatar),
/* harmony export */   arcgis_user_popup: () => (/* binding */ ArcgisUserPopup),
/* harmony export */   arcgis_user_popup_popover: () => (/* binding */ ArcgisUserPopupPopover)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale-050b6db9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js");
/* harmony import */ var _badges_555e1b90_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./badges-555e1b90.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/badges-555e1b90.js");
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _utils_aa26c49f_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils-aa26c49f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/utils-aa26c49f.js");
/* harmony import */ var _user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./user-0fa9ff5a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-0fa9ff5a.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./languageUtil-ef0e54b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js");
/* harmony import */ var _privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./privileges-5c382f61.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js");
/* harmony import */ var _privileges_74639dae_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./privileges-74639dae.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-74639dae.js");
/* harmony import */ var _url_35875a10_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./url-35875a10.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-35875a10.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _query_d62660d4_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./query-d62660d4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-d62660d4.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _storage_0353a769_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./storage-0353a769.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/storage-0353a769.js");
/* harmony import */ var _ags_eb458a03_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ags-eb458a03.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ags-eb458a03.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */






















function getIcon$2() {
    return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { viewBox: "0 0 16 16", fill: "currentColor" },
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M2.7 9c-.4-1.3-.2-2.8.4-4s1.7-2.2 3-2.6c.4.4.8.9 1.1 1.2h.2l.1-.1v-.1C7.2 2.4 6.8.2 6.3 0c-.1 0-.2-.1-.4-.1-.1.1-.2.1-.4.2-.1 0-.2.1-.3.2 0 .2-.1.3-.1.4 0 .2.1.5.4.8-1.4.6-2.6 1.7-3.3 3-.7 1.4-.9 3-.5 4.5h1z" }),
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M14 5c-.5-1.2-1.3-2.2-2.4-2.9S9.3 1 8 1h-.1c.1.3.2.6.3 1 1.2 0 2.4.5 3.3 1.2.9.8 1.5 1.8 1.8 3-3.4 4-10.1 4-12.2 3.9H1v.2l1.2.3c.5 1 1.3 1.8 2.2 2.4.9.6 2 .9 3 1v1h-2v1h5v-1h-2v-1c.9-.1 1.7-.3 2.5-.7.8-.4 1.5-1 2-1.6.6-.7 1-1.5 1.2-2.3.2-.8.3-1.7.2-2.6.7-.8.8-1.5-.3-1.8zm-6 8c-.9 0-1.7-.2-2.5-.6-.8-.4-1.4-.9-1.9-1.6 1.8.2 3.6 0 5.3-.5 1.7-.5 3.3-1.4 4.6-2.5-.1 1.4-.7 2.8-1.7 3.7-1 .9-2.4 1.5-3.8 1.5z" })));
}

function getIcon$1() {
    return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { width: "12", height: "15", viewBox: "0 0 12 15", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M6 0C2.58 0 0 1.29 0 3C0 4.71 2.58 6 6 6C7.76001 6.08843 9.5049 5.6358 11 4.703V10.037C11 10.1696 11.0527 10.2968 11.1464 10.3906C11.2402 10.4843 11.3674 10.537 11.5 10.537C11.6326 10.537 11.7598 10.4843 11.8536 10.3906C11.9473 10.2968 12 10.1696 12 10.037V3C12 1.29 9.42 0 6 0ZM6 5C3.138 5 1 3.944 1 3C1 2.056 3.138 1 6 1C8.862 1 11 2.056 11 3C11 3.944 8.862 5 6 5ZM11.5 11.5C11.3674 11.5 11.2402 11.5527 11.1464 11.6464C11.0527 11.7402 11 11.8674 11 12V12.064C11 12.96 8.816 14 6 14C3.184 14 1 12.96 1 12.064V7.85C2.5767 8.53314 4.28202 8.86875 6 8.834C6.13261 8.834 6.25979 8.78132 6.35355 8.68755C6.44732 8.59379 6.5 8.46661 6.5 8.334C6.5 8.20139 6.44732 8.07421 6.35355 7.98045C6.25979 7.88668 6.13261 7.834 6 7.834C4.1944 7.89821 2.40441 7.4791 0.815 6.62C0.749152 6.56222 0.668856 6.5234 0.582675 6.50767C0.496494 6.49194 0.40766 6.4999 0.325646 6.53069C0.243632 6.56148 0.171514 6.61396 0.116982 6.68252C0.0624495 6.75108 0.0275483 6.83316 0.016 6.92C0.014 6.933 0.0100001 6.945 0.00900006 6.957C0.00700006 6.972 0 6.985 0 7V12.064C0 13.902 3.05 15 6 15C8.95 15 12 13.902 12 12.064V12C12 11.8674 11.9473 11.7402 11.8536 11.6464C11.7598 11.5527 11.6326 11.5 11.5 11.5Z", fill: "currentColor" })));
}

function getIcon() {
    return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { width: "15", height: "14", viewBox: "0 0 15 14", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M14.9815 2.83602C14.9814 2.62597 14.8979 2.42454 14.7494 2.27596C14.6009 2.12738 14.3996 2.04379 14.1895 2.04352H11.5525C11.5402 2.04359 11.528 2.04122 11.5166 2.03655C11.5052 2.03188 11.4948 2.025 11.4861 2.01632C11.4773 2.00763 11.4704 1.9973 11.4657 1.98592C11.461 1.97454 11.4585 1.96234 11.4585 1.95002V0.988524C11.4571 0.85421 11.4287 0.721556 11.3749 0.598477C11.3211 0.475399 11.243 0.364419 11.1454 0.272161C11.0478 0.179903 10.9326 0.108259 10.8067 0.0615025C10.6807 0.0147464 10.5467 -0.00616255 10.4125 2.35228e-05H5.57652C5.29905 0.000288282 5.03302 0.110629 4.83682 0.306829C4.64062 0.503028 4.53028 0.769056 4.53002 1.04652V1.95002C4.53002 1.97482 4.52017 1.9986 4.50263 2.01614C4.4851 2.03367 4.46132 2.04352 4.43652 2.04352H1.79902C1.58896 2.04379 1.38759 2.12738 1.23911 2.27596C1.09062 2.42454 1.00715 2.62597 1.00702 2.83602V4.84402C1.00715 4.8812 1.02201 4.91681 1.04835 4.94305C1.07468 4.96929 1.11034 4.98402 1.14752 4.98402H2.45002L2.45702 4.97752V3.57652C2.45702 3.55305 2.46634 3.53054 2.48294 3.51394C2.49954 3.49735 2.52205 3.48802 2.54552 3.48802H13.2755C13.3349 3.48893 13.3915 3.51294 13.4334 3.55496C13.4754 3.59697 13.4992 3.65368 13.5 3.71302V10.584C13.5 10.7043 13.4763 10.8234 13.4303 10.9346C13.3843 11.0457 13.3168 11.1467 13.2317 11.2317C13.1467 11.3168 13.0457 11.3843 12.9346 11.4303C12.8234 11.4763 12.7043 11.5 12.584 11.5H8.13802C8.07976 11.5001 8.02289 11.4822 7.97513 11.4488C7.92737 11.4155 7.89102 11.3682 7.87102 11.3135C7.72621 10.9132 7.45683 10.5698 7.10244 10.3339C6.74805 10.0979 6.32734 9.98189 5.90211 10.0028C5.47688 10.0236 5.06956 10.1803 4.73997 10.4498C4.41039 10.7193 4.17592 11.0874 4.07102 11.5H2.82852C2.72813 11.5 2.63186 11.4601 2.56088 11.3892C2.4899 11.3182 2.45002 11.2219 2.45002 11.1215V9.59402C2.45002 9.56927 2.44025 9.54551 2.42284 9.52791C2.40543 9.51031 2.38178 9.50029 2.35702 9.50002H1.01402L1.00702 9.50702V11.797C1.00755 12.108 1.13137 12.4062 1.35134 12.6261C1.57132 12.8459 1.8695 12.9696 2.18052 12.97H4.26102C4.42562 13.2708 4.66545 13.5237 4.95706 13.704C5.24867 13.8844 5.58208 13.9859 5.9247 13.9988C6.26732 14.0117 6.60742 13.9355 6.91176 13.7776C7.21611 13.6197 7.47427 13.3856 7.66102 13.098C7.68692 13.0587 7.72218 13.0264 7.76363 13.0041C7.80508 12.9817 7.85143 12.97 7.89852 12.97H13.931C14.2096 12.9699 14.4767 12.8592 14.6737 12.6622C14.8707 12.4652 14.9814 12.1981 14.9815 11.9195V2.83602ZM10.5 1.81252C10.5 1.86225 10.4803 1.90994 10.4451 1.94511C10.4099 1.98027 10.3622 2.00002 10.3125 2.00002H5.68752C5.63779 2.00002 5.5901 1.98027 5.55494 1.94511C5.51977 1.90994 5.50002 1.86225 5.50002 1.81252V1.22502C5.5008 1.16559 5.52475 1.10881 5.56678 1.06678C5.60881 1.02476 5.66559 1.0008 5.72502 1.00002H10.275C10.3345 1.0008 10.3912 1.02476 10.4333 1.06678C10.4753 1.10881 10.4992 1.16559 10.5 1.22502V1.81252ZM6.00002 13C5.80224 13 5.6089 12.9414 5.44445 12.8315C5.28 12.7216 5.15183 12.5654 5.07614 12.3827C5.00045 12.2 4.98065 11.9989 5.01923 11.8049C5.05782 11.611 5.15306 11.4328 5.29291 11.2929C5.43277 11.1531 5.61095 11.0578 5.80493 11.0192C5.99891 10.9807 6.19998 11.0005 6.3827 11.0761C6.56543 11.1518 6.72161 11.28 6.83149 11.4445C6.94137 11.6089 7.00002 11.8022 7.00002 12C7.00002 12.2652 6.89466 12.5196 6.70713 12.7071C6.51959 12.8947 6.26524 13 6.00002 13Z", fill: "currentColor" }),
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M6.6365 7.99698C6.68419 7.99703 6.73111 8.00905 6.77295 8.03194C6.8148 8.05483 6.85023 8.08785 6.876 8.12798C7.04796 8.40157 7.28805 8.62578 7.57274 8.77864C7.85743 8.93151 8.17696 9.00778 8.5 8.99998C8.84896 9.00826 9.19327 8.91871 9.49397 8.74145C9.79468 8.56419 10.0398 8.30631 10.2015 7.99698H11.9065C11.9313 7.99685 11.9551 7.98689 11.9726 7.96927C11.9902 7.95166 12 7.92783 12 7.90298V6.60848C12.0001 6.59612 11.9977 6.58387 11.993 6.57243C11.9883 6.561 11.9814 6.55061 11.9726 6.54187C11.9639 6.53312 11.9535 6.5262 11.9421 6.5215C11.9306 6.5168 11.9184 6.51442 11.906 6.51448H10.4C10.31 6.07987 10.0708 5.69047 9.72373 5.41383C9.37667 5.13719 8.94373 4.99077 8.5 4.99998C8.09556 5.01149 7.70379 5.14365 7.37503 5.37948C7.04627 5.61532 6.79552 5.94406 6.655 6.32348C6.63575 6.37938 6.59953 6.42787 6.55139 6.4622C6.50326 6.49653 6.44562 6.51498 6.3865 6.51498H0.5465C0.534208 6.51511 0.522456 6.52005 0.513763 6.52875C0.505071 6.53744 0.50013 6.54919 0.5 6.56148V7.94998C0.5 7.96245 0.504952 7.9744 0.513766 7.98322C0.52258 7.99203 0.534535 7.99698 0.547 7.99698H6.6365ZM8.5 5.94998C8.70767 5.94998 8.91068 6.01156 9.08335 6.12694C9.25602 6.24231 9.3906 6.4063 9.47007 6.59816C9.54955 6.79003 9.57034 7.00115 9.52982 7.20483C9.48931 7.40851 9.38931 7.5956 9.24246 7.74244C9.09562 7.88929 8.90852 7.98929 8.70484 8.02981C8.50116 8.07032 8.29005 8.04953 8.09818 7.97006C7.90632 7.89058 7.74233 7.756 7.62696 7.58333C7.51158 7.41066 7.45 7.20765 7.45 6.99998C7.45 6.72151 7.56062 6.45443 7.75754 6.25752C7.95445 6.06061 8.22152 5.94998 8.5 5.94998Z", fill: "currentColor" })));
}

const badgeIcons = {
    Authoritative: {
        icon: "check-circle"
    },
    Deprecated: {
        icon: "circle-disallowed"
    },
    Marketplace: {
        icon: "marketplace"
    },
    Retired: {
        icon: "exclamation-mark-triangle"
    },
    "Public Data Collection": {
        icon: "pencil"
    },
    Subscriber: { icon: "security" },
    Premium: { icon: "shield-coin" },
    Collaboration: { icon: "collaboration-distributed" },
    Registered: { icon: "key" },
    "Living Atlas": { image: getIcon$2 },
    "Open Data": { image: getIcon$1 },
    Solution: { image: getIcon }
};

const arcgisItemBadgeCss = ".badge{--calcite-color-foreground-2:var(--arcgis-item-badge-info-background);--calcite-color-text-1:var(--arcgis-item-badge-info-foreground);--calcite-ui-icon-color:var(--arcgis-item-badge-info-foreground);display:inline-block;border-width:0px}.authoritative{--calcite-color-foreground-2:var(--arcgis-item-badge-success-background);--calcite-color-text-1:var(--arcgis-item-badge-success-foreground);--calcite-ui-icon-color:var(--arcgis-item-badge-success-foreground)}.deprecated{--calcite-color-foreground-2:var(--arcgis-item-badge-danger-background);--calcite-color-text-1:var(--arcgis-item-badge-danger-foreground);--calcite-ui-icon-color:var(--arcgis-item-badge-danger-foreground)}.image{align-items:center;justify-content:flex-end;border-radius:0}.narrow{box-sizing:border-box;width:2rem;--calcite-chip-spacing-unit-l:0}.narrow .image{justify-content:center}.wrapper{display:flex;align-items:center}.icon{margin-top:0.25rem;margin-inline-start:0.375rem}.image svg{height:1rem;width:1rem;color:var(--calcite-ui-icon-color)}.image-l svg{height:1.5rem;width:1.5rem}.narrow--s{width:1.5rem}.narrow--s .icon{margin:0.25rem}.narrow--s .image{margin-inline-start:0px}.narrow--m .icon{margin:0.3125rem 0.5rem}.narrow--m .image{margin-inline-start:0px}.narrow--l{width:2.75rem}.narrow--l .icon{margin:0.5rem 0.8rem}.narrow--l .image{margin-inline-end:0.25rem}";

const ArcgisItemBadge = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.openTooltip = () => {
            this.tooltipOpen = true;
        };
        this.closeTooltip = async () => {
            await (0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_3__.t)(200);
            this.tooltipOpen = false;
            this.tooltip = null;
        };
        this.item = undefined;
        this.user = undefined;
        this.width = "full";
        this.scale = "m";
        this.badgeType = undefined;
        this.showTooltip = true;
        this.loading = true;
        this.tooltipText = "";
        this.tooltipOpen = undefined;
    }
    async componentWillLoad() {
        const { el } = this;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__.g)(el);
        this.i18n = locale[0];
        this.lang = locale[1];
        this.updateTooltipText();
    }
    async updateTooltipText() {
        const { badgeType, item, i18n, lang, user } = this;
        this.tooltipText = await (0,_badges_555e1b90_js__WEBPACK_IMPORTED_MODULE_2__.b)(badgeType, item, user, i18n, lang);
        this.loading = false;
    }
    renderImage(image) {
        if (!image) {
            return null;
        }
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { slot: "image", class: { image: true, [`image-${this.scale}`]: true } }, image()));
    }
    render() {
        const { badgeType, width, loading, tooltipText, scale, showTooltip } = this;
        const i18n = this.i18n[badgeType];
        const { icon, image } = badgeIcons[this.badgeType];
        const narrow = width === "narrow";
        const classes = {
            badge: true,
            authoritative: badgeType === "Authoritative",
            deprecated: badgeType === "Deprecated",
            narrow,
            [`narrow--${scale}`]: narrow
        };
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", Object.assign({ class: "wrapper" }, (showTooltip
            ? {
                onMouseLeave: this.closeTooltip,
                onMouseEnter: this.openTooltip,
                onFocusout: this.closeTooltip,
                onFocusin: this.openTooltip
            }
            : {})), narrow ? ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-chip", Object.assign({ class: classes, value: badgeType }, (icon ? { icon } : {}), (showTooltip ? { tabIndex: 0 } : {}), { ref: (el) => (this.chip = el), scale: scale }), image && this.renderImage(image))) : ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-chip", Object.assign({ class: classes, value: badgeType }, (icon ? { icon } : {}), (showTooltip ? { tabIndex: 0 } : {}), { ref: (el) => (this.chip = el), scale: scale }), image && this.renderImage(image), i18n.title)), this.tooltipOpen && this.showTooltip && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-tunnel", { reference: this.el }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tooltip", { ref: (el) => {
                if (!el) {
                    return;
                }
                el.referenceElement = this.chip;
                if (!this.tooltip) {
                    this.tooltip = el;
                    this.tooltip.open = true;
                }
            }, closeOnClick: true, label: i18n.title, placement: "bottom-start", offsetDistance: 6, offsetSkidding: 0, style: { pointerEvents: "none" } }, narrow && !loading && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("h3", { class: "tooltip__title", style: {
                fontSize: "var(--calcite-font-size--1)",
                color: "var(--calcite-color-text-1)",
                margin: "0 0 .25rem 0",
                padding: "0"
            } }, i18n.title)), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "tooltip__text", style: {
                fontSize: "var(--calcite-font-size--2)",
                color: "var(--calcite-color-text-1)",
                margin: "0",
                padding: "0"
            } }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-loader", { hidden: !loading, label: this.i18n.loading, inline: true, scale: "s" }), loading ? this.i18n.loading : tooltipText)))))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisItemBadge.style = arcgisItemBadgeCss;

const arcgisItemBadgesCss = ":host{display:flex;align-items:center}.badge{display:inline-block;margin-inline-end:0.25rem}";

const ArcgisItemBadges = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.item = undefined;
        this.portal = undefined;
        this.user = undefined;
        this.width = "full";
        this.showTooltips = false;
        this.empty = false;
        this.scale = "m";
        this.badges = [];
    }
    componentWillLoad() {
        if (this.item) {
            this.updateBadges(this.item);
        }
    }
    updateBadges(item) {
        var _a;
        this.badges = (0,_badges_555e1b90_js__WEBPACK_IMPORTED_MODULE_2__.a)(item, this.portal, this.user);
        if (!((_a = this.badges) === null || _a === void 0 ? void 0 : _a.length)) {
            this.empty = true;
        }
    }
    render() {
        const { item, width, scale, badges, user, showTooltips } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, badges.map((badge) => ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-item-badge", { class: "badge", item: item, user: user, badgeType: badge, width: width, scale: scale, showTooltip: showTooltips })))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
    static get watchers() { return {
        "item": ["updateBadges"]
    }; }
};
ArcgisItemBadges.style = arcgisItemBadgesCss;

let QUEUE = [];
let PROMISES = [];
const fetchFavorites = (0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_3__.d)(async (portal, user) => {
    var _a;
    // empty the queues and save the current state locally so that further calls can be staged in the queue
    const ids = [...QUEUE];
    const promises = [...PROMISES];
    QUEUE = [];
    PROMISES = [];
    const q = `(group:${getFavGroupId(user)} AND id:(${ids.join(" OR ")}))`;
    const response = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_4__.r)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_4__.g)(portal)}search`, { num: 100, q });
    const favorites = (_a = response === null || response === void 0 ? void 0 : response.results) === null || _a === void 0 ? void 0 : _a.map((item) => item.id);
    promises.forEach(({ id, resolve }) => {
        resolve(favorites.includes(id));
    });
    return;
}, 300);
function getFavGroupId(user) {
    var _a, _b;
    return (_a = user.favGroupId) !== null && _a !== void 0 ? _a : (_b = user.sourceJSON) === null || _b === void 0 ? void 0 : _b.favGroupId;
}
async function isItemInFavorites(id, portal, user) {
    if (!user) {
        return false;
    }
    const promise = new Promise((resolve) => {
        PROMISES.push({ id, resolve });
    });
    if (!QUEUE.includes(id)) {
        QUEUE.push(id);
    }
    fetchFavorites(portal, user);
    return promise;
}
function addToFavorites(options) {
    return updateFavoriteStatus(options, true);
}
function removeFromFavorites(options) {
    return updateFavoriteStatus(options, false);
}
function updateFavoriteStatus({ item, portal, user }, favorite) {
    const { access, id } = item;
    const url = `${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_4__.g)(portal)}content/items/${id}/${favorite ? "share" : "unshare"}`;
    const content = {
        everyone: access === "public",
        org: access === "org",
        groups: getFavGroupId(user),
        items: id
    };
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_4__.r)(url, content, {}, "post");
}

const ArcgisItemFavorite = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisItemFavoriteUpdate = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisItemFavoriteUpdate", 7);
        this.item = undefined;
        this.portal = undefined;
        this.user = undefined;
        this.width = "full";
        this.iconOnly = false;
        this.scale = "m";
        this.isFavorite = undefined;
    }
    /** Set focus on the component */
    async setFocus() {
        var _a;
        (_a = this.button) === null || _a === void 0 ? void 0 : _a.setFocus();
    }
    /** When favorite is updated, sync different favorite components for the same item */
    updateFavorite(e) {
        const { id, favorite } = e.detail;
        if (id === this.item.id) {
            this.isFavorite = favorite;
        }
    }
    async componentWillLoad() {
        const { el, item, portal, user } = this;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__.g)(el);
        this.i18n = locale[0];
        this.isFavorite = await isItemInFavorites(item.id, portal, user);
    }
    async toggleFavorite() {
        const { user, portal, item, isFavorite } = this;
        this.isFavorite = !isFavorite;
        const options = { user, portal, item };
        await (isFavorite ? removeFromFavorites(options) : addToFavorites(options));
        this.arcgisItemFavoriteUpdate.emit({
            id: item.id,
            favorite: this.isFavorite
        });
    }
    render() {
        const { i18n, isFavorite, width, scale, iconOnly } = this;
        const text = isFavorite ? i18n.remove : i18n.add;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", Object.assign({ width: iconOnly ? "auto" : width, scale: scale, appearance: iconOnly ? "transparent" : "outline-fill", kind: "neutral", iconStart: isFavorite ? "star-f" : "star", onClick: () => {
                this.toggleFavorite();
            }, ref: (el) => (this.button = el) }, (iconOnly ? { ariaLabel: text } : {})), !iconOnly && text)));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};

const arcgisItemShareSummaryCss = ":host{display:inline-flex;align-items:center;justify-content:center;background-color:var(--calcite-color-foreground-1);border:1px solid var(--calcite-color-border-1);border-radius:calc(var(--arcgis-item-share-summary-spacing) + 0.25rem);padding:0.25rem 0.5rem;min-width:calc(var(--arcgis-item-share-summary-spacing))}:host([scale=s]){font-size:0.875rem;--arcgis-item-share-summary-spacing:1rem}:host([scale=m]){font-size:1rem;--arcgis-item-share-summary-spacing:1.5rem}:host([scale=l]){font-size:1.125rem;--arcgis-item-share-summary-spacing:2rem}.icon{display:block;flex-shrink:0;flex-grow:0;width:var(--arcgis-item-share-summary-spacing);height:var(--arcgis-item-share-summary-spacing)}.text{font-weight:400;color:var(--calcite-color-text-1);margin-inline-start:calc(var(--arcgis-item-share-summary-spacing) / 2)}";

const ArcgisItemShareSummary = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.item = undefined;
        this.groups = undefined;
        this.showText = true;
        this.scale = "m";
    }
    async componentWillLoad() {
        const { el } = this;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__.g)(el);
        this.i18n = locale[0];
    }
    getIcon(access) {
        const lookup = {
            private: "user",
            shared: "user",
            org: "organization",
            public: "globe"
        };
        return lookup[access] || "globe";
    }
    render() {
        const { item, i18n, scale, showText } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: "icon", icon: this.getIcon(item.access), scale: scale }), item.access === "shared" && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: "icon", icon: "plus", scale: scale }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: "icon", icon: "group", scale: scale }))), showText && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "text" }, i18n[item.access])));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisItemShareSummary.style = arcgisItemShareSummaryCss;

const arcgisSelectedCss = ".hide{display:none}.wrapper{display:flex;opacity:1;transition-property:opacity}.empty{display:block;padding:0.75rem;font-size:0.75rem;color:var(--calcite-color-text-3)}.loading{opacity:0}.button{margin-inline-end:0.5rem}.white-button{border:1px solid var(--calcite-color-border-1);border-inline-end:none;font-family:inherit;box-sizing:border-box;display:flex;height:2rem;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;align-items:center;background-color:var(--calcite-color-foreground-1);padding-left:0.75rem;padding-right:0.75rem;padding-top:0.5rem;padding-bottom:0.5rem;outline-color:transparent;transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s}.white-button:hover{box-shadow:inset 0 0 0 1px var(--calcite-color-foreground-3)}.white-button:focus{outline:2px solid var(--calcite-color-brand);outline-offset:2px}.white-button--disabled{pointer-events:none;opacity:0.25}.white-button__icon{margin-inline-start:0.75rem}calcite-dropdown[open] .white-button{border-bottom-color:var(--calcite-color-brand)}.page-range{font-size:0.875rem;font-weight:400;line-height:2rem;color:var(--calcite-color-text-2)}.screen-readers-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.checkbox{margin-top:0.75rem}";

const ArcgisSelectedItem$1 = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisSelectedDeselectAll = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisSelectedDeselectAll", 7);
        this.arcgisSelectedSelectPage = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisSelectedSelectPage", 7);
        this.checked = undefined;
        this.indeterminate = undefined;
        this.heading = undefined;
        this.emptyText = undefined;
        this.total = undefined;
        this.totalSelected = undefined;
        this.hideCheckbox = false;
        this.hideSelectedText = false;
        this.loading = undefined;
    }
    async componentWillLoad() {
        const { element } = this;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__.g)(element);
        this.i18n = locale[0];
    }
    renderButton() {
        const { totalSelected, i18n } = this;
        const attributes = {
            class: "button",
            slot: "trigger",
            kind: "neutral",
            appearance: "outline-fill",
            iconEnd: !!totalSelected ? "caret-down" : null
        };
        return this.hideSelectedText ? ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", Object.assign({}, attributes))) : ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", Object.assign({}, attributes), i18n.selected.replace("${number}", `${totalSelected || 0}`)));
    }
    render() {
        const { i18n, checked, indeterminate, heading, totalSelected, hideSelectedText } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "wrapper" }, !this.hideCheckbox && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "selected-checkbox", class: "white-button" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "screen-readers-only" }, checked ? i18n.deselect : i18n.selectPage), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { class: "checkbox", id: "selected-checkbox", disabled: !this.total, checked: checked, indeterminate: indeterminate, onCalciteCheckboxChange: (e) => {
                e.stopPropagation();
                const checked = e.currentTarget.checked;
                if (checked) {
                    this.arcgisSelectedSelectPage.emit();
                }
                else {
                    this.arcgisSelectedDeselectAll.emit();
                }
            } }))), (!hideSelectedText || !!totalSelected) && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-dropdown", { widthScale: "l", closeOnSelectDisabled: true }, this.renderButton(), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-dropdown-group", { selectionMode: "none", groupTitle: heading }, totalSelected < 1 && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "empty" }, this.emptyText), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)))))));
    }
    get element() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisSelectedItem$1.style = arcgisSelectedCss;

const arcgisSelectedItemCss = ".selected-item__wrapper{display:flex;align-items:center}.selected-item__content{box-sizing:border-box;flex:1 1 0%;width:100%;padding-inline-start:0.5rem;max-width:12rem}.selected-item__title{margin:0px;margin-top:0.25rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:0px;font-size:0.875rem;font-weight:500;color:var(--calcite-color-text-1)}.selected-item__description{margin:0px;margin-top:0.25rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:0px;font-size:0.75rem;font-weight:400;color:var(--calcite-color-text-1)}";

const ArcgisSelectedItem = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisSelectedItemRemove = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisSelectedItemRemove", 7);
        this.heading = undefined;
        this.description = undefined;
    }
    render() {
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-dropdown-item", { "selection-mode": "none", onClick: (e) => {
                // there is an error with dropdown-items looking across shadow dom, so prevent default and manage this ourselves
                e.preventDefault();
                e.stopPropagation();
                this.arcgisSelectedItemRemove.emit();
            } }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "selected-item__wrapper" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "content-start" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "selected-item__content" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("h4", { class: "selected-item__title", title: this.heading }, this.heading), this.description && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "selected-item__description" }, this.description)), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "content-end" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: "x", scale: "s" })))));
    }
    get element() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisSelectedItem.style = arcgisSelectedItemCss;

const arcgisSublayerTypeCss = ":host{display:flex;align-items:center;line-height:1.35;--sublayer-type-font-size:var(--calcite-font-size--1)}.text{flex:1 1 0%;margin-inline-start:0.5rem;color:inherit}.name{font-weight:500;font-size:var(--sublayer-type-font-size)}.type{font-weight:400;font-size:var(--sublayer-type-font-size)}";

const ArcgisSublayerTypeIcon = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.geometry = undefined;
        this.type = undefined;
        this.scale = undefined;
        this.name = undefined;
        this.showName = true;
        this.showIcon = true;
        this.showType = true;
        this.renderer = undefined;
    }
    async componentWillLoad() {
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__.g)(this.el);
        this.i18n = locale[0];
    }
    render() {
        const { geometry, name, type, showName, showIcon, showType, renderer, i18n } = this;
        const info = (0,_utils_aa26c49f_js__WEBPACK_IMPORTED_MODULE_5__.g)({ type, geometry });
        if (renderer) {
            return renderer(Object.assign(Object.assign({}, info), { name }));
        }
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, showIcon && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: info.icon, class: "icon", scale: this.scale }), (showType || showName) && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "text" }, showName && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "name" }, name), showType && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "type" }, i18n[info.type])))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisSublayerTypeIcon.style = arcgisSublayerTypeCss;

const arcgisUserAvatarCss = ":host{max-width:100%}.skeleton{display:flex}@keyframes pulse{50%{opacity:.5}}.skeleton{animation:pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;align-items:center}.skeleton-avatar{border-radius:100%;background-color:var(--calcite-color-foreground-3);width:var(--arcgis-user-avatar-size);height:var(--arcgis-user-avatar-size)}.skeleton-name{border-radius:var(--calcite-border-radius);background-color:var(--calcite-color-foreground-3);width:var(--arcgis-user-avatar-skeleton-width);border-radius:var(--arcgis-user-avatar-spacing);height:var(--arcgis-user-avatar-spacing);margin-inline-start:var(--arcgis-user-avatar-spacing)}@keyframes pulse{0%,100%{opacity:1}50%{opacity:0.5}}.avatar{display:block;flex-shrink:0;flex-grow:0;border-radius:100%;background-color:var(--calcite-color-foreground-3);width:var(--arcgis-user-avatar-size);height:var(--arcgis-user-avatar-size)}.text{display:flex;min-width:0px;flex-direction:column;justify-content:center;color:var(--calcite-color-text-2);text-align:start;margin-inline-start:var(--arcgis-user-avatar-spacing);line-height:calc(var(--arcgis-user-avatar-size) / 2)}.-text-no-avatar{margin-inline-start:0px}.-text-underline .title{text-decoration-line:underline}.title,.description{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.has-description{font-weight:500}.description{font-weight:400;color:var(--calcite-color-text-2)}:host{display:flex;min-width:0px;align-items:center}:host([scale=xs]){font-size:0.75rem;--arcgis-user-avatar-size:18px;--arcgis-user-avatar-spacing:0.25rem}:host([scale=xs]) .description{font-size:0.625rem;margin-top:-0.125rem}:host([scale=xs]) .text{line-height:1.35}:host([scale=s]){font-size:0.75rem;--arcgis-user-avatar-size:1.5rem;--arcgis-user-avatar-spacing:0.5rem;--arcgis-user-avatar-skeleton-width:4rem}:host([scale=s]) .description{font-size:0.625rem}:host([scale=m]){font-size:0.875rem;--arcgis-user-avatar-size:2rem;--arcgis-user-avatar-spacing:0.75rem;--arcgis-user-avatar-skeleton-width:5rem}:host([scale=m]) .description{font-size:0.75rem}:host([scale=l]){font-size:1rem;--arcgis-user-avatar-size:2.5rem;--arcgis-user-avatar-spacing:1rem;--arcgis-user-avatar-skeleton-width:6rem}:host([scale=l]) .description{font-size:0.875rem}";

const ArcgisUserAvatar = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.user = undefined;
        this.portal = undefined;
        this.scale = "m";
        this.showName = undefined;
        this.showAvatar = true;
        this.heading = undefined;
        this.description = undefined;
        this.underline = undefined;
        this.username = undefined;
        this.checkOnline = undefined;
    }
    async componentWillLoad() {
        const { el, portal, username } = this;
        this.lang = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__.a)(el);
        if (username) {
            this.user = await (0,_user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_6__.f)(username, portal);
        }
    }
    renderSkeleton() {
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "skeleton" }, this.showAvatar && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "skeleton-avatar" }), this.showName && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "skeleton-name" })));
    }
    renderUser() {
        const { user, lang, portal, showAvatar, showName, description, scale, underline, heading } = this;
        const { fullName, username } = user;
        const id = (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_4__.n)(user);
        const showDescription = !!description;
        const name = ((fullName === null || fullName === void 0 ? void 0 : fullName.split(" ")) || []).slice(0, 2).join(" ");
        return [
            showAvatar && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-avatar", Object.assign({ class: "avatar", scale: scale === "xs" ? "s" : scale, fullName: name, username: username, userId: id, thumbnail: (0,_user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_6__.c)(user, portal, this.checkOnline) }, (showName || showDescription ? { inert: true } : {})))),
            (showName || showDescription) && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: { text: true, "text--underline": underline, "text--no-avatar": !showAvatar } }, showName && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: { title: true, "has-description": showDescription } }, heading || (0,_user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_6__.g)(user, lang))), showDescription && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "description" }, description)))
        ];
    }
    render() {
        return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, this.user && this.lang ? this.renderUser() : this.renderSkeleton());
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisUserAvatar.style = arcgisUserAvatarCss;

const arcgisUserPopupCss = ":host{display:flex}.button{display:flex;align-items:center;max-width:100%;cursor:pointer;border-style:none;padding:0px;font-size:0.75rem;color:var(--calcite-color-text-2);outline:2px solid transparent;outline-offset:2px;transition-property:all;outline-color:transparent;background:transparent;font-family:inherit;line-height:1.5}.button:focus{outline:2px solid var(--calcite-color-brand);outline-offset:2px}.name{overflow:hidden;white-space:nowrap;margin-inline-start:0.5rem;text-overflow:ellipsis}";

const ArcgisUserPopup = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisUserPopupInternalUIAction = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisUserPopupInternalUIAction", 7);
        this.user = undefined;
        this.username = undefined;
        this.item = undefined;
        this.api = undefined;
        this.scale = "m";
        this.portal = undefined;
        this.baseUrl = undefined;
        this.underline = undefined;
        this.showAvatar = true;
        this.showName = true;
        this.checkOnline = undefined;
        this.itemUserInfo = undefined;
        this.groups = undefined;
        this.total = undefined;
        this.showPopover = undefined;
        this.privateUser = undefined;
    }
    async componentWillLoad() {
        this.init();
    }
    async init() {
        const { el, item, username, portal } = this;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__.g)(el);
        this.i18n = locale[0];
        this.lang = locale[1];
        if (item) {
            this.fetchItemUserInfo();
        }
        else if (username) {
            try {
                const userInfo = await (0,_user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_6__.f)(username, portal);
                this.itemUserInfo = userInfo;
            }
            catch (_a) {
                this.privateUser = true;
            }
        }
    }
    async setFocus() {
        var _a;
        (_a = this.button) === null || _a === void 0 ? void 0 : _a.focus();
    }
    async fetchItemUserInfo() {
        const { portal, item, lang, checkOnline } = this;
        this.itemUserInfo = await (0,_user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_6__.a)(item, portal, lang, checkOnline);
    }
    async fetchItemsAndGroups() {
        const { user, itemUserInfo, item, portal, total, username: propUsername, checkOnline } = this;
        const username = propUsername || (user === null || user === void 0 ? void 0 : user.username) || (item === null || item === void 0 ? void 0 : item.owner);
        if (!(0,_badges_555e1b90_js__WEBPACK_IMPORTED_MODULE_2__.i)(item)) {
            if (!this.groups) {
                this.groups = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_4__.f)(() => (0,_user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_6__.d)(username, portal, checkOnline), "userGroups", username);
            }
            if (isNaN(total)) {
                this.total = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_4__.f)(() => (0,_user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_6__.e)(user || itemUserInfo, portal, checkOnline), "userItemsTotal", username);
            }
        }
    }
    render() {
        const { user, itemUserInfo, portal, item, baseUrl, button, i18n, scale } = this;
        const userInfo = user || itemUserInfo;
        if (!userInfo || !i18n) {
            return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-user-avatar", { scale: "s", showName: true, checkOnline: this.checkOnline });
        }
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("button", { class: "button", ref: (el) => (this.button = el), onClick: async () => {
                if (!this.showPopover) {
                    this.showPopover = true;
                }
                this.fetchItemsAndGroups();
            } }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-user-avatar", { user: userInfo, scale: scale === "m" ? "m" : "s", portal: portal, showName: this.showName, showAvatar: this.showAvatar, underline: this.underline, checkOnline: this.checkOnline }))), this.showPopover && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-tunnel", { reference: this.el }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-user-popup-popover", { onArcgisUserPopupInternalUIAction: (e) => {
                e.stopPropagation();
                this.arcgisUserPopupInternalUIAction.emit(e.detail);
            }, onArcgisUserPopupPopoverClose: () => {
                this.showPopover = false;
                this.popoverNode = null;
            }, onArcgisUserPopupPopoverKeyDown: (e) => {
                if (e.detail.key === "Escape") {
                    // ! Has to be focused after the popover is completely closed
                    const POPOVER_CLOSE_TIME = 200;
                    setTimeout(() => {
                        this.button.focus();
                    }, POPOVER_CLOSE_TIME);
                }
            }, user: user, item: item, portal: portal, baseUrl: baseUrl, itemUserInfo: itemUserInfo, i18n: i18n, groups: this.groups, total: this.total, checkOnline: this.checkOnline, ref: (el) => {
                if (!el) {
                    return;
                }
                el.referenceElement = button;
                // open when first added
                if (!this.popoverNode) {
                    this.popoverNode = el;
                    el.open();
                }
            } })))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
    static get watchers() { return {
        "item": ["fetchItemUserInfo"]
    }; }
};
ArcgisUserPopup.style = arcgisUserPopupCss;

function addHyperlinks(text) {
    const urlRegex = /(https?:\/\/[^\s]+)/g;
    return text === null || text === void 0 ? void 0 : text.replace(urlRegex, (url) => `<a href="${url}" target="_blank">${url}</a>`);
}
function escapeNewlines(text) {
    return text === null || text === void 0 ? void 0 : text.replace(/(?:\r)/g, "&#10;").replace(/(?:\n)/g, "&#13;");
}
function restoreNewlines(text) {
    return text === null || text === void 0 ? void 0 : text.replace(/(?:&#10;)/g, "\r").replace(/(?:&#13;)/g, "\n");
}
function insertHtmlLineBreaks(text) {
    return text === null || text === void 0 ? void 0 : text.replace(/&#10;&#13;|&#10;|&#13;|\r\n|\r|\n/g, "<br>");
}
function getHtmlFromText(text) {
    return insertHtmlLineBreaks(escapeNewlines(addHyperlinks(restoreNewlines(text))));
}

function getUserLink({ baseUrl, portal, user, type }) {
    var _a, _b;
    const base = (0,_url_35875a10_js__WEBPACK_IMPORTED_MODULE_11__.r)(baseUrl);
    const { username, orgId } = user;
    const name = encodeURIComponent(username);
    const isSelf = ((_a = portal.user) === null || _a === void 0 ? void 0 : _a.username) === user.username;
    const canView = (type === "groups" && (0,_privileges_74639dae_js__WEBPACK_IMPORTED_MODULE_10__.t)(portal.user)) || (type === "content" && (0,_privileges_74639dae_js__WEBPACK_IMPORTED_MODULE_10__.u)(portal.user));
    if ((canView || (0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_9__.b)(portal.user) || isSelf) && orgId === ((_b = portal.user) === null || _b === void 0 ? void 0 : _b.orgId)) {
        return `${base}/${type}.html${!isSelf ? `?user=${name}` : ""}`;
    }
    else {
        return `${base}/search.html?q=owner:%22${name}%22&restrict=false#${type}`;
    }
}

const arcgisUserPopupPopoverCss = ".wrapper{background-color:var(--calcite-color-foreground-1);width:20rem}.header{padding-left:1rem;padding-right:1rem;padding-top:1.25rem;padding-bottom:1.25rem}.user-avatar{max-width:100%}.content{padding-left:1rem;padding-right:1rem;padding-top:0.5rem;padding-bottom:1.25rem}.content__description{margin:0px;overflow:auto;padding:0px;padding-bottom:0.25rem;font-size:0.875rem;color:var(--calcite-color-text-2);max-height:15.5rem}.content__description--expanded:after{content:\"\";display:block;height:1rem}.content__fade{position:relative;z-index:10;margin-bottom:0.25rem;display:block;height:1rem;width:100%;background:linear-gradient(to bottom, transparent, var(--calcite-color-foreground-1) 74%);margin-top:-1rem}.content__link{font-size:0.875rem}.buttons{display:grid;grid-auto-flow:column;padding-top:1rem;grid-gap:0.5rem}.button{min-width:0px}.loader{--calcite-loader-padding:0}";

const ArcgisUserPopupPopover = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisUserPopupPopoverClose = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisUserPopupPopoverClose", 7);
        this.arcgisUserPopupPopoverKeyDown = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisUserPopupPopoverKeyDown", 7);
        this.arcgisUserPopupInternalUIAction = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisUserPopupInternalUIAction", 7);
        this.numberFormatOptions = {
            api: _config_75adf962_js__WEBPACK_IMPORTED_MODULE_7__.c.api,
            places: 0,
            type: "decimal"
        };
        this.user = undefined;
        this.item = undefined;
        this.portal = undefined;
        this.baseUrl = undefined;
        this.referenceElement = undefined;
        this.itemUserInfo = undefined;
        this.groups = undefined;
        this.total = undefined;
        this.i18n = undefined;
        this.checkOnline = undefined;
        this.groupsText = "";
        this.itemsText = "";
        this.expanded = undefined;
    }
    async close() {
        this.togglePopover(false);
    }
    async open() {
        this.togglePopover(true);
    }
    async updateGroupsText(groups) {
        const number = await (0,_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_8__.f)(groups.total, this.numberFormatOptions);
        this.groupsText = this.i18n.groups.replace("${number}", number);
    }
    async updateItemsText(total) {
        const number = await (0,_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_8__.f)(total, this.numberFormatOptions);
        this.itemsText = this.i18n.items.replace("${number}", number);
    }
    componentWillLoad() {
        // when the component is reopened, set groups/total text again as the watcher doesn't fire
        if (this.groups) {
            this.updateGroupsText(this.groups);
        }
        if (!isNaN(this.total)) {
            this.updateItemsText(this.total);
        }
    }
    async togglePopover(open) {
        if (this.popoverNode) {
            this.popoverNode.open = open;
            await (0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_3__.t)(150);
            return;
        }
    }
    openLink(e) {
        var _a;
        // not totally sure why, but if you just link to the page, you'll be signed out
        // if we use window.open, it retains your current signed in status
        e.preventDefault();
        const href = (_a = e.target) === null || _a === void 0 ? void 0 : _a.href;
        window.open(href, "_blank");
    }
    renderOrgButtons() {
        const { i18n, baseUrl, itemUserInfo } = this;
        const url = (0,_url_35875a10_js__WEBPACK_IMPORTED_MODULE_11__.r)((itemUserInfo === null || itemUserInfo === void 0 ? void 0 : itemUserInfo.url) || baseUrl);
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { appearance: "outline-fill", kind: "neutral", href: url, target: "_blank", onClick: (e) => this.openLink(e) }, i18n.homepage), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { appearance: "outline-fill", kind: "neutral", href: `${url}/gallery.html`, target: "_blank", onClick: (e) => this.openLink(e) }, i18n.gallery)));
    }
    renderUserButtons(userInfo) {
        const { i18n, baseUrl, portal, total, groups } = this;
        const loading = !this.groupsText || !this.itemsText;
        const { username } = userInfo;
        if (loading) {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-loader", { label: i18n.loadingUserInformation, scale: "s", class: "loader" }));
        }
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, !!(groups === null || groups === void 0 ? void 0 : groups.total) && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { class: "button", appearance: "outline-fill", kind: "neutral", href: `${getUserLink({ baseUrl, portal, user: userInfo, type: "groups" })}`, target: "_blank", onClick: (e) => {
                this.openLink(e);
                this.arcgisUserPopupInternalUIAction.emit({
                    category: "profile popup",
                    action: "view all groups"
                });
            } }, this.groupsText)), !!total && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { class: "button", appearance: "outline-fill", kind: "neutral", href: `${getUserLink({
                baseUrl,
                portal,
                user: userInfo,
                type: "content"
            })}`, target: "_blank", onClick: (e) => {
                this.openLink(e);
                this.arcgisUserPopupInternalUIAction.emit({
                    category: "profile popup",
                    action: "view all content"
                });
            } }, this.itemsText)), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { class: "button", appearance: "outline-fill", kind: "neutral", href: `${(0,_url_35875a10_js__WEBPACK_IMPORTED_MODULE_11__.r)(baseUrl)}/user.html?user=${encodeURIComponent(username)}`, target: "_blank", onClick: (e) => {
                this.openLink(e);
                this.arcgisUserPopupInternalUIAction.emit({
                    category: "profile popup",
                    action: "view profile"
                });
            } }, i18n.profile)));
    }
    render() {
        const { i18n, user, item, itemUserInfo, lang, portal, expanded, referenceElement } = this;
        const userInfo = user || itemUserInfo;
        const isAuthoritative = (0,_badges_555e1b90_js__WEBPACK_IMPORTED_MODULE_2__.i)(item);
        const { username, description } = userInfo;
        const name = (0,_user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_6__.g)(userInfo, lang);
        const decodedDescription = getHtmlFromText(description) || "";
        //each line break is approximately 40 chars long
        const tempDescription = decodedDescription.replace(/<br>/g, " ".repeat(40));
        const shortenDescription = !expanded && tempDescription.length >= 240;
        const shortDescription = shortenDescription
            ? // Trim at 240 chars, then add back the line breaks assuming 5-40 consecutive spaces is a line break
                `${tempDescription
                    .substring(0, 240)
                    .trim()
                    .replace(/\s{5,40}/g, "<br>")}...`
            : decodedDescription;
        const managedBy = isAuthoritative
            ? this.i18n.itemManagedBy.replace("${username}", username)
            : username;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-popover", { class: "popover", label: name, pointerDisabled: true, referenceElement: referenceElement, placement: "bottom-start", id: `${username}-popover`, ref: (el) => (this.popoverNode = el), autoClose: true, onCalcitePopoverOpen: (0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_3__.d)(() => {
                this.arcgisUserPopupInternalUIAction.emit({
                    category: "profile popup",
                    action: "open profile popup"
                });
            }, 100), onCalcitePopoverClose: () => this.arcgisUserPopupPopoverClose.emit(), onKeyDown: (e) => this.arcgisUserPopupPopoverKeyDown.emit(e) }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "wrapper" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "header" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-user-avatar", { class: "user-avatar", user: userInfo, scale: "l", portal: portal, showName: true, description: managedBy, checkOnline: this.checkOnline })), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "content" }, shortDescription && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: { content__description: true, "content__description--expanded": expanded }, innerHTML: shortDescription })), expanded && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "content__fade" }), shortenDescription && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-link", { class: "content__link", onClick: () => (this.expanded = true) }, i18n.expand)), expanded && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-link", { class: "content__link", onClick: () => (this.expanded = false) }, i18n.showLess)), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "buttons" }, isAuthoritative ? this.renderOrgButtons() : this.renderUserButtons(userInfo)))))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
    static get watchers() { return {
        "groups": ["updateGroupsText"],
        "total": ["updateItemsText"]
    }; }
};
ArcgisUserPopupPopover.style = arcgisUserPopupPopoverCss;



//# sourceMappingURL=arcgis-item-badge_10.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/badges-555e1b90.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/badges-555e1b90.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ getBadges),
/* harmony export */   b: () => (/* binding */ getTooltip),
/* harmony export */   g: () => (/* binding */ getContentStatus),
/* harmony export */   i: () => (/* binding */ isPublicAuthoritative)
/* harmony export */ });
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/* harmony import */ var _privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./privileges-5c382f61.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/* harmony import */ var _user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./user-0fa9ff5a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-0fa9ff5a.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */





const retiredUrlParts = [
    "3DInsetMap",
    "3DScene",
    "3DViz",
    "AttachmentViewer",
    "CapacityAnalysis",
    "Compare/storytelling_compare",
    "Compare/storytelling_tabbed",
    "Compare/storytelling_sidepanel",
    "Compare/Multiviewer",
    "Compare/Search",
    "Compare/Configure",
    "Compare/SideBySideViewer_Configure",
    "Compare3d",
    "CompareAnalysis",
    "CompareMaps",
    "Directions",
    "Edit",
    "Editor",
    "Elevations",
    "ElevationsProfile",
    "Embed",
    "Filter",
    "FilterGallery",
    "GeoList",
    "GeoTour",
    "HeaderFooter",
    "Identify",
    "ImageInterpretation",
    "ImageryViewer",
    "ImpactSummary",
    "InformationLookup",
    "InteractiveFilter",
    "InteractiveLegend",
    "LayerShowcase",
    "Legend",
    "LiveMaps",
    "LocalPerspective",
    "MapAndAppGallery",
    "MapCarousel",
    "MapTools",
    "Media",
    "MinimalGallery",
    "Minimalist",
    "Nearby",
    "OnePane",
    "Panels",
    "PanelsLegend",
    "Profile",
    "PublicGallery",
    "PublicInformation",
    "ServiceLookup",
    "SimpleMapViewer",
    "SimpleViewer",
    "SocialMedia",
    "Solutions/s2.html?app=apps2/FindEditFilter",
    "Solutions/s2.html?app=apps2/Finder",
    "StorytellingTextLegend",
    "StoryMapBasic",
    "Styler",
    "SummaryViewer",
    "Time",
    "TimeAware",
    "TwoPane",
    "Viewer",
    "ZoneLookup"
];

function isRetiredItemType(type) {
    return _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_2__.r.includes(type);
}
function isRetiredStoryMap(item) {
    var _a, _b;
    return ((_a = item.portal) === null || _a === void 0 ? void 0 : _a.isPortal) && item.type === "Web Mapping Application" && ((_b = item.typeKeywords) === null || _b === void 0 ? void 0 : _b.includes("Story Map"));
}
function isCityEngineWebScene(item) {
    return item.type === "CityEngine Web Scene";
}
function isRetiredApp(item) {
    var _a;
    const isRetiredUrl = retiredUrlParts.some((urlPart) => {
        var _a;
        const containsHtml = urlPart.includes(".html");
        const fullRetiredPath = `/apps/${urlPart}${!containsHtml ? "/" : ""}`;
        return (_a = item.url) === null || _a === void 0 ? void 0 : _a.includes(fullRetiredPath);
    });
    return ((_a = item.portal) === null || _a === void 0 ? void 0 : _a.isPortal) && item.type === "Web Mapping Application" && item.url && isRetiredUrl;
}
function getContentStatus(item) {
    var _a;
    return (item === null || item === void 0 ? void 0 : item.contentStatus) || ((_a = item === null || item === void 0 ? void 0 : item.sourceJSON) === null || _a === void 0 ? void 0 : _a.contentStatus);
}
function isOrgAuthoritative(item) {
    return getContentStatus(item) === "org_authoritative";
}
function isPublicAuthoritative(item) {
    return getContentStatus(item) === "public_authoritative";
}
function getBadges(item, portal, user) {
    var _a, _b, _c, _d, _e, _f, _g;
    const badges = [];
    const groupDesignations = (_b = (item.groupDesignations || ((_a = item.sourceJSON) === null || _a === void 0 ? void 0 : _a.groupDesignations))) === null || _b === void 0 ? void 0 : _b.split(", ");
    if (isOrgAuthoritative(item) || isPublicAuthoritative(item)) {
        badges.push("Authoritative");
    }
    if (getContentStatus(item) === "deprecated") {
        badges.push("Deprecated");
    }
    if (item.type === "Solution" && ((_c = item.typeKeywords) === null || _c === void 0 ? void 0 : _c.includes("ArcGIS Solution"))) {
        badges.push("Solution");
    }
    if (((_d = item.typeKeywords) === null || _d === void 0 ? void 0 : _d.includes("Public Data Collection")) && user) {
        badges.push("Public Data Collection");
    }
    if (isRetiredItemType(item.type) || isRetiredStoryMap(item) || isRetiredApp(item)) {
        badges.push("Retired");
    }
    if (groupDesignations === null || groupDesignations === void 0 ? void 0 : groupDesignations.includes("livingatlas")) {
        badges.push("Living Atlas");
    }
    if (groupDesignations && groupDesignations.includes("opendata")) {
        badges.push("Open Data");
    }
    if ((0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__.b)(item)) {
        badges.push("Premium");
    }
    if ((0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__.a)(item)) {
        badges.push("Subscriber");
    }
    if (item.origin || ((_e = item.sourceJSON) === null || _e === void 0 ? void 0 : _e.origin)) {
        badges.push("Collaboration");
    }
    if ((item.listed || ((_f = item.sourceJSON) === null || _f === void 0 ? void 0 : _f.listed)) && !(portal === null || portal === void 0 ? void 0 : portal.isPortal)) {
        badges.push("Marketplace");
    }
    if (((_g = item.typeKeywords) === null || _g === void 0 ? void 0 : _g.includes("Registered App")) &&
        item.type !== "API Key" &&
        (!(portal === null || portal === void 0 ? void 0 : portal.isPortal) || item.owner !== "esri_apps")) {
        badges.push("Registered");
    }
    return badges;
}
async function getTooltip(badgeType, item, user, i18n, locale) {
    var _a, _b;
    const publicUser = !user || (0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user);
    switch (badgeType) {
        case "Authoritative":
            if (getContentStatus(item) === "public_authoritative") {
                const verified = await (0,_user_0fa9ff5a_js__WEBPACK_IMPORTED_MODULE_3__.b)(item, locale);
                const name = ((_a = item.portal) === null || _a === void 0 ? void 0 : _a.isPortal) ? (_b = item.portal) === null || _b === void 0 ? void 0 : _b.name : verified === null || verified === void 0 ? void 0 : verified.name;
                return i18n.Authoritative.tooltip.public.replace("${name}", name);
            }
            else {
                return i18n.Authoritative.tooltip.org;
            }
        case "Retired":
            const retired = i18n.Retired.tooltip;
            if (isRetiredStoryMap(item)) {
                return retired.storyMap;
            }
            else if (isCityEngineWebScene(item)) {
                return retired.cityEngine;
            }
            else if (isRetiredApp(item)) {
                return retired.app;
            }
            else {
                return retired.general;
            }
        case "Subscriber":
            return publicUser ? i18n.Subscriber.tooltip.public : i18n.Subscriber.tooltip.org;
        case "Premium":
            return publicUser ? i18n.Premium.tooltip.public : i18n.Premium.tooltip.org;
        case "Registered":
            return i18n.Registered.tooltip;
        default:
            return i18n[badgeType].tooltip;
    }
}



//# sourceMappingURL=badges-555e1b90.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js":
/*!**********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ isSubscriber),
/* harmony export */   b: () => (/* binding */ isPremium),
/* harmony export */   c: () => (/* binding */ canUpdateItem),
/* harmony export */   d: () => (/* binding */ itemsBelongToUserOrg),
/* harmony export */   g: () => (/* binding */ getItemHomeAppUrl),
/* harmony export */   i: () => (/* binding */ isOwner),
/* harmony export */   u: () => (/* binding */ userIsItemAdmin)
/* harmony export */ });
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


function isEsri(item) {
    var _a;
    return !!((_a = item.owner) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes("esri"));
}
function isPremium(item) {
    var _a;
    return isEsri(item) && !!((_a = item.typeKeywords) === null || _a === void 0 ? void 0 : _a.includes("Requires Credits"));
}
function isSubscriber(item) {
    var _a;
    return isEsri(item) && !!((_a = item.typeKeywords) === null || _a === void 0 ? void 0 : _a.includes("Requires Subscription"));
}
function isOwner(item, user) {
    return item.owner === user.username;
}
/**
 * Can the user update the item
 */
function canUpdateItem(item, user) {
    return userIsItemAdmin(item, user) || item.itemControl === "update";
}
/**
 * Is the user either an owner or admin of the item
 */
function userIsItemAdmin(item, user) {
    return isOwner(item, user) || isItemAdmin(item, user);
}
/**
 * Does the user have admin capabilities on this item
 */
function isItemAdmin(item, user) {
    var _a;
    // if this flag is already set (probably home app), use it
    if (item.isAdmin != null) {
        return !!item.isAdmin;
    }
    const itemOwner = item.owner;
    const itemControlAdmin = item.itemControl === "admin";
    const esriUsers = ["esri_livingatlas", "esri_demographics", "esri_boundaries"];
    if (((_a = item.portal) === null || _a === void 0 ? void 0 : _a.isPortal) &&
        !isOwner(item, user) &&
        itemControlAdmin &&
        itemOwner.includes("esri_") &&
        // portal incorrectly returns "itemControl="admin" for esri owned items
        !esriUsers.includes(itemOwner)) {
        return false;
    }
    return itemControlAdmin;
}
const itemsBelongToUserOrg = (items, user) => {
    return !!user.orgId && items.every((item) => item.isOrgItem);
};
const getItemHomeAppUrl = (itemId, baseUrl) => `${(0,_url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_0__.a)(baseUrl)}item.html?id=${itemId}`;



//# sourceMappingURL=item-3535552d.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-d62660d4.js":
/*!***********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-d62660d4.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: () => (/* binding */ HIDDEN_ITEMS_QUERY)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */
const HIDDEN_ITEMS_QUERY = `-type:"Code Attachment" -type:"Featured Items" -type:"Symbol Set" -type:"Color Set" -type:"Windows Viewer Add In" -type:"Windows Viewer Configuration" -type:"Map Area" -typekeywords:"MapAreaPackage" -type:"Indoors Map Configuration" -typekeywords:"SMX"`;



//# sourceMappingURL=query-d62660d4.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/utils-aa26c49f.js":
/*!***********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/utils-aa26c49f.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: () => (/* binding */ getSublayerTypeInfo)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */
/** Get the correct geometry icon based on layer/table type and geometry type
 * will handles types used by the jsapi, the esri types used on the server,
 * and the types returned by the Search API
 */
function getSublayerTypeInfo({ geometry, type }) {
    switch (type) {
        case "Catalog Layer":
            return {
                icon: "catalog-dataset",
                type: "catalog",
                isGeometry: false
            };
        case "Parcel Layer":
            return {
                icon: "parcel-layer",
                type: "parcel",
                isGeometry: false
            };
        case "Oriented Imagery Layer":
            return {
                icon: "oriented-imagery-layer",
                type: "oriented imagery",
                isGeometry: false
            };
        case "Table":
            return {
                icon: "table",
                type: "table",
                isGeometry: true
            };
    }
    switch (geometry) {
        case "point":
        case "esriGeometryPoint":
            return {
                type: "point",
                icon: "point",
                isGeometry: true
            };
        case "esriGeometryMultipoint":
        case "multipoint":
            return {
                type: "multipoint",
                icon: "layer-points",
                isGeometry: true
            };
        case "line":
        case "polyline":
        case "esriGeometryPolyline":
            return {
                type: "line",
                icon: "line",
                isGeometry: true
            };
        case "polygon":
        case "esriGeometryPolygon":
            return {
                type: "polygon",
                icon: "polygon",
                isGeometry: true
            };
        case "multipatch":
        case "esriGeometryMultiPatch":
            return {
                type: "multipatch",
                icon: "cube",
                isGeometry: true
            };
        default:
            return {
                type: "table",
                icon: "table",
                isGeometry: true
            };
    }
}



//# sourceMappingURL=utils-aa26c49f.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,