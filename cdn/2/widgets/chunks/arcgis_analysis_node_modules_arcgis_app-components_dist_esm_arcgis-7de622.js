"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-7de622"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js":
/*!**************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ addItemState),
/* harmony export */   b: () => (/* binding */ addItemUrlState),
/* harmony export */   c: () => (/* binding */ addItemRequestState),
/* harmony export */   d: () => (/* binding */ addItemStore)
/* harmony export */ });
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


const addItemStore = (0,_index_05956cab_js__WEBPACK_IMPORTED_MODULE_0__.c)({
    typeKeywords: [],
    customParameters: [],
    analyzedLocationTypes: [],
    allowStoredAuth: true,
    isSecured: null,
    checkAuth: false
});
// Entire add item state object
const addItemState = addItemStore.state;
// Subsets of add item state
const addItemRequestState = addItemStore.state;
const addItemUrlState = addItemStore.state;



//# sourceMappingURL=add-item-dbbe2f57.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-notebook-runtime-select.entry.js":
/*!*********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-notebook-runtime-select.entry.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_notebook_runtime_select: () => (/* binding */ ArcgisNotebookRuntimeSelect)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale-050b6db9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js");
/* harmony import */ var _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-item-dbbe2f57.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js");
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _privileges_74639dae_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./privileges-74639dae.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-74639dae.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./languageUtil-ef0e54b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/* harmony import */ var _privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./privileges-5c382f61.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js");
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */















async function getNotebookServerUrl() {
    const { config, portal, user } = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_4__.c;
    return new Promise(async (resolve, reject) => {
        var _a, _b;
        if (!portal.isPortal) {
            const result = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_3__.r)(`${config.restBaseUrl}/portals/self/urls`);
            const url = (_b = (_a = result === null || result === void 0 ? void 0 : result.urls) === null || _a === void 0 ? void 0 : _a.notebooks) === null || _b === void 0 ? void 0 : _b.https;
            if (url) {
                return resolve(`https://${url}`);
            }
        }
        else {
            if (config.userInfo) {
                const servers = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_3__.t)(user, portal);
                if (servers === null || servers === void 0 ? void 0 : servers.length) {
                    const serversFilterResult = servers.filter(({ serverType, serverFunction }) => serverType === "ARCGIS_NOTEBOOK_SERVER" && serverFunction === "NotebookServer");
                    if (serversFilterResult.length) {
                        const notebookServer = serversFilterResult[0];
                        return resolve(notebookServer.url);
                    }
                }
            }
            else
                reject();
        }
    });
}
function getNotebookRuntimesBase(url) {
    const options = {
        useJsonFormatParam: true,
        useCredentials: true
    };
    return notebookRequest(`${url}/admin/notebooks/runtimes`, "GET", null, options);
}
async function getCurrentRuntimeVersion(url) {
    const options = {
        useJsonFormatParam: true,
        useCredentials: true
    };
    const info = await notebookRequest(`${url}/rest/info`, "GET", null, options);
    return info.currentRuntimeVersion;
}
function formatNotebookRuntimeVersion(version) {
    const versionMap = {
        "10.7": "1.0",
        "10.7.0": "1.0",
        "10.7.1": "2.0",
        "10.8": "3.0",
        "10.8.0": "3.0",
        "10.8.1": "4.0"
    };
    return versionMap[version] || version;
}
function processRuntimes(runtimes = [], currentRuntimeVersion) {
    const { user } = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_4__.c;
    const canCreateAdvanced = (0,_privileges_74639dae_js__WEBPACK_IMPORTED_MODULE_6__.s)(user);
    return (runtimes
        // list esri provided runtimes first
        .sort((a, b) => (a.esriProvidedRuntime === b.esriProvidedRuntime ? 0 : a.esriProvidedRuntime ? -1 : 1))
        .filter((runtime) => {
        // filter our advanced notebooks for those that can't use them
        if (!canCreateAdvanced && runtime.requiresAdvancedPrivileges) {
            return false;
        }
        // only show current version or custom runtimes
        const currentVersion = formatNotebookRuntimeVersion(currentRuntimeVersion) === formatNotebookRuntimeVersion(runtime.version);
        return currentVersion || !runtime.esriProvidedRuntime;
    }));
}
async function getNotebookRuntimes() {
    var _a;
    const url = await getNotebookServerUrl();
    const currentRuntimeVersion = await getCurrentRuntimeVersion(url);
    const runtimeInfo = await getNotebookRuntimesBase(url);
    if ((_a = runtimeInfo === null || runtimeInfo === void 0 ? void 0 : runtimeInfo.runtimes) === null || _a === void 0 ? void 0 : _a.length) {
        return processRuntimes(runtimeInfo.runtimes, currentRuntimeVersion);
    }
    return null;
}
function notebookServerConfigured() {
    var _a, _b, _c, _d, _e;
    const { config, portal } = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_4__.c;
    if (portal.isPortal) {
        // On-Prem
        return config.notebookServerEnabled &&
            (portal.supportsHostedNotebooks || ((_a = portal.sourceJSON) === null || _a === void 0 ? void 0 : _a.supportsHostedNotebooks))
            ? true
            : false;
    }
    else {
        // AGOL
        const blacklistedOrgTypes = ["Trial Developer", "Trial", "Trial Press", "Developer Subscription"];
        const hasBlacklistedOrgType = blacklistedOrgTypes.indexOf(((_b = portal.subscriptionInfo) === null || _b === void 0 ? void 0 : _b.type) || ((_d = (_c = portal.sourceJSON) === null || _c === void 0 ? void 0 : _c.subscriptionInfo) === null || _d === void 0 ? void 0 : _d.type)) !== -1;
        return (config.notebookServerEnabled &&
            (!hasBlacklistedOrgType ||
                (portal.allowedBetaFeatures || ((_e = portal.sourceJSON) === null || _e === void 0 ? void 0 : _e.allowedBetaFeatures) || []).indexOf("notebooks") !== -1));
    }
}
function canShowNotebookSelection() {
    const { user } = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_4__.c;
    return notebookServerConfigured() && (0,_privileges_74639dae_js__WEBPACK_IMPORTED_MODULE_6__.r)(user);
}
async function notebookRequest(url, method, data, options) {
    const [_request] = await (0,_loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_5__.l)(["dojo/request"]);
    const { config } = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_4__.c;
    options = options || {};
    let query = {};
    const headers = { "X-Requested-With": null };
    const token = config.userInfo ? config.userInfo.token : null;
    // This is needed because notebook server expects an f parameter
    // otherwise we get 'method not allowed'
    if (options.useJsonFormatParam) {
        query.f = "json";
    }
    if (method === "GET") {
        query = Object.assign(Object.assign({}, query), data);
    }
    if (!options.bypassCustomHeaders) {
        headers["X-Esri-Authorization"] = "Bearer " + token;
        if (options.useJsonBody) {
            headers["Content-Type"] = "application/json";
        }
    }
    if (options.contentType) {
        headers["Content-Type"] = options.contentType;
    }
    const requestOptions = {
        data: options.useJsonBody ? (data ? JSON.stringify(data) : null) : data,
        method: method,
        handleAs: "json",
        headers: Object.keys(headers).length ? headers : null,
        query: Object.keys(query).length ? query : null,
        preventCache: options.preventCache === false ? false : true,
        withCredentials: !options.bypassCustomHeaders ? true : false
    };
    return _request(url, requestOptions);
}

const arcgisNotebookRuntimeSelectCss = ":host{--arcgis-label-font-weight:400}.label{margin-top:0px;margin-bottom:0px;font-weight:var(--arcgis-label-font-weight)}.label--bold{--arcgis-label-font-weight:500}.loader{color:var(--calcite-color-brand)}.leader-text{font-size:0.875rem;color:var(--calcite-color-text-1)}";

const ArcgisNotebookRuntimeSelect = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.handleRuntimeChange = (e) => {
            const value = e.currentTarget.selectedOption.value;
            const i = parseInt(value, 10) || 0;
            this.selectedRuntimeIndex = i;
            this.updateProperties(this.runtimes[i]);
        };
        this.i18n = undefined;
        this.runtimes = undefined;
        this.loading = true;
        this.error = false;
        this.selectedRuntimeIndex = 0;
    }
    async componentWillLoad() {
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_1__.g)(this.el);
        this.i18n = locale[0];
    }
    async componentDidLoad() {
        try {
            if (!canShowNotebookSelection())
                return;
            const runtimes = await getNotebookRuntimes();
            this.runtimes = runtimes;
            if (!runtimes || !runtimes.length) {
                throw new Error();
            }
            this.updateProperties(runtimes[0]);
        }
        catch (error) {
            this.error = true;
        }
        this.loading = false;
    }
    updateProperties(runtime) {
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.properties = {
            notebookRuntimeName: runtime.name,
            notebookRuntimeVersion: formatNotebookRuntimeVersion(runtime.version)
        };
    }
    render() {
        const { i18n, selectedRuntimeIndex } = this;
        if (!canShowNotebookSelection())
            return null;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label" }, i18n.selectRuntime), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-notice", { icon: true, open: this.error, scale: "s", kind: "danger" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "title" }, i18n.error.title), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "message" }, i18n.error.runtimes)), this.loading ? ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-loader", { class: "loader", inline: true, label: i18n.loadingRuntimes }), " ", i18n.loadingRuntimes)) : (!this.error && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: i18n.selectRuntime, onCalciteSelectChange: this.handleRuntimeChange }, this.runtimes.map((runtime, i) => ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: i, selected: selectedRuntimeIndex === i }, runtime.name, " - ", runtime.version))))))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNotebookRuntimeSelect.style = arcgisNotebookRuntimeSelectCss;



//# sourceMappingURL=arcgis-notebook-runtime-select.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js":
/*!**********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ isSubscriber),
/* harmony export */   b: () => (/* binding */ isPremium),
/* harmony export */   c: () => (/* binding */ canUpdateItem),
/* harmony export */   d: () => (/* binding */ itemsBelongToUserOrg),
/* harmony export */   g: () => (/* binding */ getItemHomeAppUrl),
/* harmony export */   i: () => (/* binding */ isOwner),
/* harmony export */   u: () => (/* binding */ userIsItemAdmin)
/* harmony export */ });
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


function isEsri(item) {
    var _a;
    return !!((_a = item.owner) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes("esri"));
}
function isPremium(item) {
    var _a;
    return isEsri(item) && !!((_a = item.typeKeywords) === null || _a === void 0 ? void 0 : _a.includes("Requires Credits"));
}
function isSubscriber(item) {
    var _a;
    return isEsri(item) && !!((_a = item.typeKeywords) === null || _a === void 0 ? void 0 : _a.includes("Requires Subscription"));
}
function isOwner(item, user) {
    return item.owner === user.username;
}
/**
 * Can the user update the item
 */
function canUpdateItem(item, user) {
    return userIsItemAdmin(item, user) || item.itemControl === "update";
}
/**
 * Is the user either an owner or admin of the item
 */
function userIsItemAdmin(item, user) {
    return isOwner(item, user) || isItemAdmin(item, user);
}
/**
 * Does the user have admin capabilities on this item
 */
function isItemAdmin(item, user) {
    var _a;
    // if this flag is already set (probably home app), use it
    if (item.isAdmin != null) {
        return !!item.isAdmin;
    }
    const itemOwner = item.owner;
    const itemControlAdmin = item.itemControl === "admin";
    const esriUsers = ["esri_livingatlas", "esri_demographics", "esri_boundaries"];
    if (((_a = item.portal) === null || _a === void 0 ? void 0 : _a.isPortal) &&
        !isOwner(item, user) &&
        itemControlAdmin &&
        itemOwner.includes("esri_") &&
        // portal incorrectly returns "itemControl="admin" for esri owned items
        !esriUsers.includes(itemOwner)) {
        return false;
    }
    return itemControlAdmin;
}
const itemsBelongToUserOrg = (items, user) => {
    return !!user.orgId && items.every((item) => item.isOrgItem);
};
const getItemHomeAppUrl = (itemId, baseUrl) => `${(0,_url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_0__.a)(baseUrl)}item.html?id=${itemId}`;



//# sourceMappingURL=item-3535552d.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js":
/*!******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CSS_UTILITY),
/* harmony export */   a: () => (/* binding */ formatDate),
/* harmony export */   b: () => (/* binding */ formatPlural),
/* harmony export */   f: () => (/* binding */ formatNumber),
/* harmony export */   g: () => (/* binding */ getElementDir),
/* harmony export */   l: () => (/* binding */ languageMap)
/* harmony export */ });
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */



const languageMap = new Map([
    ["ar", "ar"],
    ["bg", "bg"],
    ["bs", "bs"],
    ["ca", "ca"],
    ["cs", "cs"],
    ["da", "da"],
    ["de", "de"],
    ["el", "el"],
    ["en", "en"],
    ["es", "es"],
    ["et", "et"],
    ["fi", "fi"],
    ["fr", "fr"],
    ["he", "he"],
    ["hr", "hr"],
    ["hu", "hu"],
    ["id", "id"],
    ["it", "it"],
    ["ja", "ja"],
    ["ko", "ko"],
    ["lt", "lt"],
    ["lv", "lv"],
    ["nb", "nb"],
    ["nl", "nl"],
    ["pl", "pl"],
    ["pt-br", "pt-BR"],
    ["pt-pt", "pt-PT"],
    ["ro", "ro"],
    ["ru", "ru"],
    ["sk", "sk"],
    ["sl", "sl"],
    ["sr", "sr"],
    ["sv", "sv"],
    ["th", "th"],
    ["tr", "tr"],
    ["uk", "uk"],
    ["vi", "vi"],
    ["zh-cn", "zh-CN"],
    ["zh-hk", "zh-HK"],
    ["zh-tw", "zh-TW"]
]);
// rtl
function getElementDir(el) {
    return getElementProp(el, "dir", "ltr");
}
function getElementProp(el, prop, value) {
    const closestWithProp = (0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_1__.c)(el, `[${prop}]`);
    return closestWithProp ? closestWithProp.getAttribute(prop) : value;
}
// css
const CSS_UTILITY = {
    rtl: "arcgis--rtl"
};
async function formatNumber(number, options) {
    const { api, type, places } = options || {};
    if (api === 4) {
        const [intl] = await (0,_loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_0__.l)(["esri/intl"]);
        const numberFormatIntlOptions = intl.convertNumberFormatToIntlOptions({
            places,
            style: type,
            digitSeparator: true
        });
        return intl.formatNumber(number, Object.assign(Object.assign({}, numberFormatIntlOptions), { style: type }));
    }
    const [dojoNumber] = await (0,_loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_0__.l)(["dojo/number"]);
    return dojoNumber.format(number, {
        type,
        places,
        pattern: options === null || options === void 0 ? void 0 : options.pattern
    });
}
const cache = {};
function formatDate(date) {
    const lang = document.documentElement.lang;
    const dayShortMonthYear = {
        year: "numeric",
        month: "short",
        day: "numeric"
    };
    if (!cache[lang]) {
        cache[lang] = new Intl.DateTimeFormat(document.documentElement.lang, dayShortMonthYear);
    }
    return cache[lang].format(date);
}
function formatPlural(lang, stringObj, number) {
    const singles = ["id", "ja", "ko", "th", "vi", "zh-cn", "zh-hk", "zh-tw"];
    const likeEnglish = [
        "en",
        "ca",
        "da",
        "de",
        "el",
        "es",
        "et",
        "fi",
        "hi",
        "hu",
        "it",
        "nb",
        "nl",
        "pt-pt",
        "sv",
        "tr"
    ];
    const locale = lang !== null && lang !== void 0 ? lang : "en";
    // if the number is one, or it is a "simple" language, return the 1 string
    if (number === 1 || singles.includes(locale)) {
        return stringObj.single.replace("${number}", "1");
    }
    // if the number is not 1 and the language uses the same pluralization strategy as english,
    // return the multiple string
    if (number !== 1 && likeEnglish.includes(locale)) {
        return stringObj.multiple.replace("${number}", `${number}`);
    }
    // if none of the above worked, return the "unknown" string
    return stringObj.unknown.replace("${number}", `${number}`);
}



//# sourceMappingURL=languageUtil-ef0e54b2.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ getComponentClosestLanguage),
/* harmony export */   g: () => (/* binding */ getLocaleComponentStrings)
/* harmony export */ });
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./languageUtil-ef0e54b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js");
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */




// https://medium.com/stencil-tricks/implementing-internationalisation-i18n-with-stencil-5e6559554117
function getComponentClosestLanguage(element) {
    var _a, _b, _c;
    const closestElement = (_a = (0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
    // language set by the calling application or browser. defaults to english.
    const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
    if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
        return _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
    }
    else {
        // "ru-RU" maps to "ru" use case
        if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
            return _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang.slice(0, 2));
        }
        else {
            return "en";
        }
    }
}
function getComponentClosestLanguageIntl(element) {
    var _a, _b, _c;
    // it's OK if we don't have the 4 letter language file for it
    // 4 letter language code needed for formatting numbers
    const closestElement = (_a = (0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
    // language set by the calling application or browser. defaults to english.
    const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
    if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
        return _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
    }
    else {
        if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
            // we support the 2 letter coded language
            // e.g. it-CH vs it
            return lang;
        }
        else {
            return "en";
        }
    }
}
function fetchLocaleStringsForComponent(componentName, locale) {
    return new Promise((resolve, reject) => {
        fetch((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_2__.a)(`../arcgis-app-assets/i18n/${componentName}.i18n.${locale}.json`)).then((result) => {
            if (result.ok)
                resolve(result.json());
            else
                reject();
        }, () => reject());
    });
}
const stringCache = {};
function fetchLocaleStringsFromCache(componentName, locale) {
    const id = `${componentName}${locale}`;
    if (!stringCache[id]) {
        stringCache[id] = fetchLocaleStringsForComponent(componentName, locale);
    }
    return stringCache[id];
}
/**
 * Get strings and language codes.
 * This method returns 2 language codes.
 * The first one returns a code that's also supported as a language file.
 * The second one returns a code where there is support for the first 2 letters of the code as part of a language file,
 * but will return the original 4 letter code from the page.
 * E.g. For "it-ch" it will return "it" as the first language code and "it-ch" as the second.
 * The second one is required for esri.intl.setLocale() to get the correct formatting.
 *
 * If a tagName is provided it will overwite the element's tagName
 *
 *  @return [ strings, first language code, second language code]
 */
async function getLocaleComponentStrings(element, tagName) {
    const componentName = tagName || element.tagName.toLowerCase();
    const componentLanguage = getComponentClosestLanguage(element);
    const componentLanguageIntl = getComponentClosestLanguageIntl(element);
    let strings;
    try {
        strings = await fetchLocaleStringsFromCache(componentName, componentLanguage);
    }
    catch (e) {
        console.warn(`no locale for ${componentName} (${componentLanguage}) loading default locale en.`);
        strings = await fetchLocaleStringsFromCache(componentName, "en");
    }
    return [strings, componentLanguage, componentLanguageIntl];
}



//# sourceMappingURL=locale-050b6db9.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvYXJjZ2lzX2FuYWx5c2lzX25vZGVfbW9kdWxlc19hcmNnaXNfYXBwLWNvbXBvbmVudHNfZGlzdF9lc21fYXJjZ2lzLTdkZTYyMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ3VEOztBQUV2RCxxQkFBcUIscURBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWdHOztBQUVoRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3RCQTtBQUNBO0FBQ0E7QUFDQTtBQUNnRjtBQUNWO0FBQ1g7QUFDbUI7QUFDdEI7QUFDSztBQUN1QztBQUN6RTtBQUNTO0FBQ1A7QUFDRjtBQUNPO0FBQ0E7QUFDTjs7QUFFNUI7QUFDQSxZQUFZLHVCQUF1QixFQUFFLGtEQUFXO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxzREFBTyxJQUFJLG1CQUFtQjtBQUMvRDtBQUNBO0FBQ0EsMENBQTBDLElBQUk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msc0RBQW1CO0FBQ3pEO0FBQ0Esa0VBQWtFLDRCQUE0QjtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLElBQUk7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLElBQUk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTyxFQUFFLGtEQUFXO0FBQ2hDLDhCQUE4QiwwREFBMEI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7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QUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWMsRUFBRSxPQUFPO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxlQUFlLEdBQUcsa0JBQWtCO0FBQzFFO0FBQ0E7QUFDQTtBQUNBOztBQUU0RTs7QUFFNUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL2FyY2dpcy9hbmFseXNpcy9ub2RlX21vZHVsZXMvQGFyY2dpcy9hcHAtY29tcG9uZW50cy9kaXN0L2VzbS9hZGQtaXRlbS1kYmJlMmY1Ny5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL2FyY2dpcy9hbmFseXNpcy9ub2RlX21vZHVsZXMvQGFyY2dpcy9hcHAtY29tcG9uZW50cy9kaXN0L2VzbS9hcmNnaXMtbm90ZWJvb2stcnVudGltZS1zZWxlY3QuZW50cnkuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL2V4dGVuc2lvbnMvd2lkZ2V0cy9hcmNnaXMvYW5hbHlzaXMvbm9kZV9tb2R1bGVzL0BhcmNnaXMvYXBwLWNvbXBvbmVudHMvZGlzdC9lc20vaXRlbS0zNTM1NTUyZC5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL2FyY2dpcy9hbmFseXNpcy9ub2RlX21vZHVsZXMvQGFyY2dpcy9hcHAtY29tcG9uZW50cy9kaXN0L2VzbS9sYW5ndWFnZVV0aWwtZWYwZTU0YjIuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL2V4dGVuc2lvbnMvd2lkZ2V0cy9hcmNnaXMvYW5hbHlzaXMvbm9kZV9tb2R1bGVzL0BhcmNnaXMvYXBwLWNvbXBvbmVudHMvZGlzdC9lc20vbG9jYWxlLTA1MGI2ZGI5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cbiAqIHY0LjAuNThcbiAqL1xuaW1wb3J0IHsgYyBhcyBjcmVhdGVTdG9yZSB9IGZyb20gJy4vaW5kZXgtMDU5NTZjYWIuanMnO1xuXG5jb25zdCBhZGRJdGVtU3RvcmUgPSBjcmVhdGVTdG9yZSh7XG4gICAgdHlwZUtleXdvcmRzOiBbXSxcbiAgICBjdXN0b21QYXJhbWV0ZXJzOiBbXSxcbiAgICBhbmFseXplZExvY2F0aW9uVHlwZXM6IFtdLFxuICAgIGFsbG93U3RvcmVkQXV0aDogdHJ1ZSxcbiAgICBpc1NlY3VyZWQ6IG51bGwsXG4gICAgY2hlY2tBdXRoOiBmYWxzZVxufSk7XG4vLyBFbnRpcmUgYWRkIGl0ZW0gc3RhdGUgb2JqZWN0XG5jb25zdCBhZGRJdGVtU3RhdGUgPSBhZGRJdGVtU3RvcmUuc3RhdGU7XG4vLyBTdWJzZXRzIG9mIGFkZCBpdGVtIHN0YXRlXG5jb25zdCBhZGRJdGVtUmVxdWVzdFN0YXRlID0gYWRkSXRlbVN0b3JlLnN0YXRlO1xuY29uc3QgYWRkSXRlbVVybFN0YXRlID0gYWRkSXRlbVN0b3JlLnN0YXRlO1xuXG5leHBvcnQgeyBhZGRJdGVtU3RhdGUgYXMgYSwgYWRkSXRlbVVybFN0YXRlIGFzIGIsIGFkZEl0ZW1SZXF1ZXN0U3RhdGUgYXMgYywgYWRkSXRlbVN0b3JlIGFzIGQgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLWl0ZW0tZGJiZTJmNTcuanMubWFwIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogdjQuMC41OFxuICovXG5pbXBvcnQgeyByIGFzIHJlZ2lzdGVySW5zdGFuY2UsIGgsIGQgYXMgZ2V0RWxlbWVudCB9IGZyb20gJy4vaW5kZXgtZTNiZjdkYTcuanMnO1xuaW1wb3J0IHsgZyBhcyBnZXRMb2NhbGVDb21wb25lbnRTdHJpbmdzIH0gZnJvbSAnLi9sb2NhbGUtMDUwYjZkYjkuanMnO1xuaW1wb3J0IHsgYSBhcyBhZGRJdGVtU3RhdGUgfSBmcm9tICcuL2FkZC1pdGVtLWRiYmUyZjU3LmpzJztcbmltcG9ydCB7IHIgYXMgcmVxdWVzdCwgdCBhcyBnZXRGZWRlcmF0ZWRTZXJ2ZXJzIH0gZnJvbSAnLi9wb3J0YWwtZDUxOGI1NzEuanMnO1xuaW1wb3J0IHsgYyBhcyBjb25maWdTdGF0ZSB9IGZyb20gJy4vY29uZmlnLTc1YWRmOTYyLmpzJztcbmltcG9ydCB7IGwgYXMgbG9hZE1vZHVsZXMgfSBmcm9tICcuL2xvYWRNb2R1bGVzLWI0YWMxMjQ3LmpzJztcbmltcG9ydCB7IHIgYXMgY2FuQ3JlYXRlTm90ZWJvb2tzLCBzIGFzIGNhbkNyZWF0ZUFkdmFuY2VkTm90ZWJvb2tzIH0gZnJvbSAnLi9wcml2aWxlZ2VzLTc0NjM5ZGFlLmpzJztcbmltcG9ydCAnLi9kb20tNGQzNjc2NzcuanMnO1xuaW1wb3J0ICcuL2xhbmd1YWdlVXRpbC1lZjBlNTRiMi5qcyc7XG5pbXBvcnQgJy4vaW5kZXgtMDU5NTZjYWIuanMnO1xuaW1wb3J0ICcuL3VybC00YzNhZTU0Yy5qcyc7XG5pbXBvcnQgJy4vZnVuY3Rpb25hbC00NGRlOGZjZi5qcyc7XG5pbXBvcnQgJy4vcHJpdmlsZWdlcy01YzM4MmY2MS5qcyc7XG5pbXBvcnQgJy4vaXRlbS0zNTM1NTUyZC5qcyc7XG5cbmFzeW5jIGZ1bmN0aW9uIGdldE5vdGVib29rU2VydmVyVXJsKCkge1xuICAgIGNvbnN0IHsgY29uZmlnLCBwb3J0YWwsIHVzZXIgfSA9IGNvbmZpZ1N0YXRlO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShhc3luYyAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIGlmICghcG9ydGFsLmlzUG9ydGFsKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXF1ZXN0KGAke2NvbmZpZy5yZXN0QmFzZVVybH0vcG9ydGFscy9zZWxmL3VybHNgKTtcbiAgICAgICAgICAgIGNvbnN0IHVybCA9IChfYiA9IChfYSA9IHJlc3VsdCA9PT0gbnVsbCB8fCByZXN1bHQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlc3VsdC51cmxzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eubm90ZWJvb2tzKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuaHR0cHM7XG4gICAgICAgICAgICBpZiAodXJsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoYGh0dHBzOi8vJHt1cmx9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoY29uZmlnLnVzZXJJbmZvKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VydmVycyA9IGF3YWl0IGdldEZlZGVyYXRlZFNlcnZlcnModXNlciwgcG9ydGFsKTtcbiAgICAgICAgICAgICAgICBpZiAoc2VydmVycyA9PT0gbnVsbCB8fCBzZXJ2ZXJzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZXJ2ZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzZXJ2ZXJzRmlsdGVyUmVzdWx0ID0gc2VydmVycy5maWx0ZXIoKHsgc2VydmVyVHlwZSwgc2VydmVyRnVuY3Rpb24gfSkgPT4gc2VydmVyVHlwZSA9PT0gXCJBUkNHSVNfTk9URUJPT0tfU0VSVkVSXCIgJiYgc2VydmVyRnVuY3Rpb24gPT09IFwiTm90ZWJvb2tTZXJ2ZXJcIik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZXJ2ZXJzRmlsdGVyUmVzdWx0Lmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm90ZWJvb2tTZXJ2ZXIgPSBzZXJ2ZXJzRmlsdGVyUmVzdWx0WzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUobm90ZWJvb2tTZXJ2ZXIudXJsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICByZWplY3QoKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0Tm90ZWJvb2tSdW50aW1lc0Jhc2UodXJsKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgdXNlSnNvbkZvcm1hdFBhcmFtOiB0cnVlLFxuICAgICAgICB1c2VDcmVkZW50aWFsczogdHJ1ZVxuICAgIH07XG4gICAgcmV0dXJuIG5vdGVib29rUmVxdWVzdChgJHt1cmx9L2FkbWluL25vdGVib29rcy9ydW50aW1lc2AsIFwiR0VUXCIsIG51bGwsIG9wdGlvbnMpO1xufVxuYXN5bmMgZnVuY3Rpb24gZ2V0Q3VycmVudFJ1bnRpbWVWZXJzaW9uKHVybCkge1xuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgIHVzZUpzb25Gb3JtYXRQYXJhbTogdHJ1ZSxcbiAgICAgICAgdXNlQ3JlZGVudGlhbHM6IHRydWVcbiAgICB9O1xuICAgIGNvbnN0IGluZm8gPSBhd2FpdCBub3RlYm9va1JlcXVlc3QoYCR7dXJsfS9yZXN0L2luZm9gLCBcIkdFVFwiLCBudWxsLCBvcHRpb25zKTtcbiAgICByZXR1cm4gaW5mby5jdXJyZW50UnVudGltZVZlcnNpb247XG59XG5mdW5jdGlvbiBmb3JtYXROb3RlYm9va1J1bnRpbWVWZXJzaW9uKHZlcnNpb24pIHtcbiAgICBjb25zdCB2ZXJzaW9uTWFwID0ge1xuICAgICAgICBcIjEwLjdcIjogXCIxLjBcIixcbiAgICAgICAgXCIxMC43LjBcIjogXCIxLjBcIixcbiAgICAgICAgXCIxMC43LjFcIjogXCIyLjBcIixcbiAgICAgICAgXCIxMC44XCI6IFwiMy4wXCIsXG4gICAgICAgIFwiMTAuOC4wXCI6IFwiMy4wXCIsXG4gICAgICAgIFwiMTAuOC4xXCI6IFwiNC4wXCJcbiAgICB9O1xuICAgIHJldHVybiB2ZXJzaW9uTWFwW3ZlcnNpb25dIHx8IHZlcnNpb247XG59XG5mdW5jdGlvbiBwcm9jZXNzUnVudGltZXMocnVudGltZXMgPSBbXSwgY3VycmVudFJ1bnRpbWVWZXJzaW9uKSB7XG4gICAgY29uc3QgeyB1c2VyIH0gPSBjb25maWdTdGF0ZTtcbiAgICBjb25zdCBjYW5DcmVhdGVBZHZhbmNlZCA9IGNhbkNyZWF0ZUFkdmFuY2VkTm90ZWJvb2tzKHVzZXIpO1xuICAgIHJldHVybiAocnVudGltZXNcbiAgICAgICAgLy8gbGlzdCBlc3JpIHByb3ZpZGVkIHJ1bnRpbWVzIGZpcnN0XG4gICAgICAgIC5zb3J0KChhLCBiKSA9PiAoYS5lc3JpUHJvdmlkZWRSdW50aW1lID09PSBiLmVzcmlQcm92aWRlZFJ1bnRpbWUgPyAwIDogYS5lc3JpUHJvdmlkZWRSdW50aW1lID8gLTEgOiAxKSlcbiAgICAgICAgLmZpbHRlcigocnVudGltZSkgPT4ge1xuICAgICAgICAvLyBmaWx0ZXIgb3VyIGFkdmFuY2VkIG5vdGVib29rcyBmb3IgdGhvc2UgdGhhdCBjYW4ndCB1c2UgdGhlbVxuICAgICAgICBpZiAoIWNhbkNyZWF0ZUFkdmFuY2VkICYmIHJ1bnRpbWUucmVxdWlyZXNBZHZhbmNlZFByaXZpbGVnZXMpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBvbmx5IHNob3cgY3VycmVudCB2ZXJzaW9uIG9yIGN1c3RvbSBydW50aW1lc1xuICAgICAgICBjb25zdCBjdXJyZW50VmVyc2lvbiA9IGZvcm1hdE5vdGVib29rUnVudGltZVZlcnNpb24oY3VycmVudFJ1bnRpbWVWZXJzaW9uKSA9PT0gZm9ybWF0Tm90ZWJvb2tSdW50aW1lVmVyc2lvbihydW50aW1lLnZlcnNpb24pO1xuICAgICAgICByZXR1cm4gY3VycmVudFZlcnNpb24gfHwgIXJ1bnRpbWUuZXNyaVByb3ZpZGVkUnVudGltZTtcbiAgICB9KSk7XG59XG5hc3luYyBmdW5jdGlvbiBnZXROb3RlYm9va1J1bnRpbWVzKCkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCB1cmwgPSBhd2FpdCBnZXROb3RlYm9va1NlcnZlclVybCgpO1xuICAgIGNvbnN0IGN1cnJlbnRSdW50aW1lVmVyc2lvbiA9IGF3YWl0IGdldEN1cnJlbnRSdW50aW1lVmVyc2lvbih1cmwpO1xuICAgIGNvbnN0IHJ1bnRpbWVJbmZvID0gYXdhaXQgZ2V0Tm90ZWJvb2tSdW50aW1lc0Jhc2UodXJsKTtcbiAgICBpZiAoKF9hID0gcnVudGltZUluZm8gPT09IG51bGwgfHwgcnVudGltZUluZm8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJ1bnRpbWVJbmZvLnJ1bnRpbWVzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBwcm9jZXNzUnVudGltZXMocnVudGltZUluZm8ucnVudGltZXMsIGN1cnJlbnRSdW50aW1lVmVyc2lvbik7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZnVuY3Rpb24gbm90ZWJvb2tTZXJ2ZXJDb25maWd1cmVkKCkge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2U7XG4gICAgY29uc3QgeyBjb25maWcsIHBvcnRhbCB9ID0gY29uZmlnU3RhdGU7XG4gICAgaWYgKHBvcnRhbC5pc1BvcnRhbCkge1xuICAgICAgICAvLyBPbi1QcmVtXG4gICAgICAgIHJldHVybiBjb25maWcubm90ZWJvb2tTZXJ2ZXJFbmFibGVkICYmXG4gICAgICAgICAgICAocG9ydGFsLnN1cHBvcnRzSG9zdGVkTm90ZWJvb2tzIHx8ICgoX2EgPSBwb3J0YWwuc291cmNlSlNPTikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnN1cHBvcnRzSG9zdGVkTm90ZWJvb2tzKSlcbiAgICAgICAgICAgID8gdHJ1ZVxuICAgICAgICAgICAgOiBmYWxzZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIEFHT0xcbiAgICAgICAgY29uc3QgYmxhY2tsaXN0ZWRPcmdUeXBlcyA9IFtcIlRyaWFsIERldmVsb3BlclwiLCBcIlRyaWFsXCIsIFwiVHJpYWwgUHJlc3NcIiwgXCJEZXZlbG9wZXIgU3Vic2NyaXB0aW9uXCJdO1xuICAgICAgICBjb25zdCBoYXNCbGFja2xpc3RlZE9yZ1R5cGUgPSBibGFja2xpc3RlZE9yZ1R5cGVzLmluZGV4T2YoKChfYiA9IHBvcnRhbC5zdWJzY3JpcHRpb25JbmZvKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudHlwZSkgfHwgKChfZCA9IChfYyA9IHBvcnRhbC5zb3VyY2VKU09OKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Muc3Vic2NyaXB0aW9uSW5mbykgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLnR5cGUpKSAhPT0gLTE7XG4gICAgICAgIHJldHVybiAoY29uZmlnLm5vdGVib29rU2VydmVyRW5hYmxlZCAmJlxuICAgICAgICAgICAgKCFoYXNCbGFja2xpc3RlZE9yZ1R5cGUgfHxcbiAgICAgICAgICAgICAgICAocG9ydGFsLmFsbG93ZWRCZXRhRmVhdHVyZXMgfHwgKChfZSA9IHBvcnRhbC5zb3VyY2VKU09OKSA9PT0gbnVsbCB8fCBfZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2UuYWxsb3dlZEJldGFGZWF0dXJlcykgfHwgW10pLmluZGV4T2YoXCJub3RlYm9va3NcIikgIT09IC0xKSk7XG4gICAgfVxufVxuZnVuY3Rpb24gY2FuU2hvd05vdGVib29rU2VsZWN0aW9uKCkge1xuICAgIGNvbnN0IHsgdXNlciB9ID0gY29uZmlnU3RhdGU7XG4gICAgcmV0dXJuIG5vdGVib29rU2VydmVyQ29uZmlndXJlZCgpICYmIGNhbkNyZWF0ZU5vdGVib29rcyh1c2VyKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIG5vdGVib29rUmVxdWVzdCh1cmwsIG1ldGhvZCwgZGF0YSwgb3B0aW9ucykge1xuICAgIGNvbnN0IFtfcmVxdWVzdF0gPSBhd2FpdCBsb2FkTW9kdWxlcyhbXCJkb2pvL3JlcXVlc3RcIl0pO1xuICAgIGNvbnN0IHsgY29uZmlnIH0gPSBjb25maWdTdGF0ZTtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBsZXQgcXVlcnkgPSB7fTtcbiAgICBjb25zdCBoZWFkZXJzID0geyBcIlgtUmVxdWVzdGVkLVdpdGhcIjogbnVsbCB9O1xuICAgIGNvbnN0IHRva2VuID0gY29uZmlnLnVzZXJJbmZvID8gY29uZmlnLnVzZXJJbmZvLnRva2VuIDogbnVsbDtcbiAgICAvLyBUaGlzIGlzIG5lZWRlZCBiZWNhdXNlIG5vdGVib29rIHNlcnZlciBleHBlY3RzIGFuIGYgcGFyYW1ldGVyXG4gICAgLy8gb3RoZXJ3aXNlIHdlIGdldCAnbWV0aG9kIG5vdCBhbGxvd2VkJ1xuICAgIGlmIChvcHRpb25zLnVzZUpzb25Gb3JtYXRQYXJhbSkge1xuICAgICAgICBxdWVyeS5mID0gXCJqc29uXCI7XG4gICAgfVxuICAgIGlmIChtZXRob2QgPT09IFwiR0VUXCIpIHtcbiAgICAgICAgcXVlcnkgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHF1ZXJ5KSwgZGF0YSk7XG4gICAgfVxuICAgIGlmICghb3B0aW9ucy5ieXBhc3NDdXN0b21IZWFkZXJzKSB7XG4gICAgICAgIGhlYWRlcnNbXCJYLUVzcmktQXV0aG9yaXphdGlvblwiXSA9IFwiQmVhcmVyIFwiICsgdG9rZW47XG4gICAgICAgIGlmIChvcHRpb25zLnVzZUpzb25Cb2R5KSB7XG4gICAgICAgICAgICBoZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdID0gXCJhcHBsaWNhdGlvbi9qc29uXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuY29udGVudFR5cGUpIHtcbiAgICAgICAgaGVhZGVyc1tcIkNvbnRlbnQtVHlwZVwiXSA9IG9wdGlvbnMuY29udGVudFR5cGU7XG4gICAgfVxuICAgIGNvbnN0IHJlcXVlc3RPcHRpb25zID0ge1xuICAgICAgICBkYXRhOiBvcHRpb25zLnVzZUpzb25Cb2R5ID8gKGRhdGEgPyBKU09OLnN0cmluZ2lmeShkYXRhKSA6IG51bGwpIDogZGF0YSxcbiAgICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICAgIGhhbmRsZUFzOiBcImpzb25cIixcbiAgICAgICAgaGVhZGVyczogT2JqZWN0LmtleXMoaGVhZGVycykubGVuZ3RoID8gaGVhZGVycyA6IG51bGwsXG4gICAgICAgIHF1ZXJ5OiBPYmplY3Qua2V5cyhxdWVyeSkubGVuZ3RoID8gcXVlcnkgOiBudWxsLFxuICAgICAgICBwcmV2ZW50Q2FjaGU6IG9wdGlvbnMucHJldmVudENhY2hlID09PSBmYWxzZSA/IGZhbHNlIDogdHJ1ZSxcbiAgICAgICAgd2l0aENyZWRlbnRpYWxzOiAhb3B0aW9ucy5ieXBhc3NDdXN0b21IZWFkZXJzID8gdHJ1ZSA6IGZhbHNlXG4gICAgfTtcbiAgICByZXR1cm4gX3JlcXVlc3QodXJsLCByZXF1ZXN0T3B0aW9ucyk7XG59XG5cbmNvbnN0IGFyY2dpc05vdGVib29rUnVudGltZVNlbGVjdENzcyA9IFwiOmhvc3R7LS1hcmNnaXMtbGFiZWwtZm9udC13ZWlnaHQ6NDAwfS5sYWJlbHttYXJnaW4tdG9wOjBweDttYXJnaW4tYm90dG9tOjBweDtmb250LXdlaWdodDp2YXIoLS1hcmNnaXMtbGFiZWwtZm9udC13ZWlnaHQpfS5sYWJlbC0tYm9sZHstLWFyY2dpcy1sYWJlbC1mb250LXdlaWdodDo1MDB9LmxvYWRlcntjb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLWJyYW5kKX0ubGVhZGVyLXRleHR7Zm9udC1zaXplOjAuODc1cmVtO2NvbG9yOnZhcigtLWNhbGNpdGUtY29sb3ItdGV4dC0xKX1cIjtcblxuY29uc3QgQXJjZ2lzTm90ZWJvb2tSdW50aW1lU2VsZWN0ID0gY2xhc3Mge1xuICAgIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICAgICAgcmVnaXN0ZXJJbnN0YW5jZSh0aGlzLCBob3N0UmVmKTtcbiAgICAgICAgdGhpcy5oYW5kbGVSdW50aW1lQ2hhbmdlID0gKGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZS5jdXJyZW50VGFyZ2V0LnNlbGVjdGVkT3B0aW9uLnZhbHVlO1xuICAgICAgICAgICAgY29uc3QgaSA9IHBhcnNlSW50KHZhbHVlLCAxMCkgfHwgMDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRSdW50aW1lSW5kZXggPSBpO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVQcm9wZXJ0aWVzKHRoaXMucnVudGltZXNbaV0pO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmkxOG4gPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMucnVudGltZXMgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XG4gICAgICAgIHRoaXMuZXJyb3IgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zZWxlY3RlZFJ1bnRpbWVJbmRleCA9IDA7XG4gICAgfVxuICAgIGFzeW5jIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgICAgICBjb25zdCBsb2NhbGUgPSBhd2FpdCBnZXRMb2NhbGVDb21wb25lbnRTdHJpbmdzKHRoaXMuZWwpO1xuICAgICAgICB0aGlzLmkxOG4gPSBsb2NhbGVbMF07XG4gICAgfVxuICAgIGFzeW5jIGNvbXBvbmVudERpZExvYWQoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIWNhblNob3dOb3RlYm9va1NlbGVjdGlvbigpKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGNvbnN0IHJ1bnRpbWVzID0gYXdhaXQgZ2V0Tm90ZWJvb2tSdW50aW1lcygpO1xuICAgICAgICAgICAgdGhpcy5ydW50aW1lcyA9IHJ1bnRpbWVzO1xuICAgICAgICAgICAgaWYgKCFydW50aW1lcyB8fCAhcnVudGltZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVByb3BlcnRpZXMocnVudGltZXNbMF0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgdGhpcy5lcnJvciA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XG4gICAgfVxuICAgIHVwZGF0ZVByb3BlcnRpZXMocnVudGltZSkge1xuICAgICAgICBhZGRJdGVtU3RhdGUucHJvcGVydGllcyA9IHtcbiAgICAgICAgICAgIG5vdGVib29rUnVudGltZU5hbWU6IHJ1bnRpbWUubmFtZSxcbiAgICAgICAgICAgIG5vdGVib29rUnVudGltZVZlcnNpb246IGZvcm1hdE5vdGVib29rUnVudGltZVZlcnNpb24ocnVudGltZS52ZXJzaW9uKVxuICAgICAgICB9O1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgaTE4biwgc2VsZWN0ZWRSdW50aW1lSW5kZXggfSA9IHRoaXM7XG4gICAgICAgIGlmICghY2FuU2hvd05vdGVib29rU2VsZWN0aW9uKCkpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgcmV0dXJuIChoKFwiY2FsY2l0ZS1sYWJlbFwiLCBudWxsLCBoKFwic3BhblwiLCB7IGNsYXNzOiBcImxhYmVsXCIgfSwgaTE4bi5zZWxlY3RSdW50aW1lKSwgaChcImNhbGNpdGUtbm90aWNlXCIsIHsgaWNvbjogdHJ1ZSwgb3BlbjogdGhpcy5lcnJvciwgc2NhbGU6IFwic1wiLCBraW5kOiBcImRhbmdlclwiIH0sIGgoXCJkaXZcIiwgeyBzbG90OiBcInRpdGxlXCIgfSwgaTE4bi5lcnJvci50aXRsZSksIGgoXCJkaXZcIiwgeyBzbG90OiBcIm1lc3NhZ2VcIiB9LCBpMThuLmVycm9yLnJ1bnRpbWVzKSksIHRoaXMubG9hZGluZyA/IChoKFwic3BhblwiLCBudWxsLCBoKFwiY2FsY2l0ZS1sb2FkZXJcIiwgeyBjbGFzczogXCJsb2FkZXJcIiwgaW5saW5lOiB0cnVlLCBsYWJlbDogaTE4bi5sb2FkaW5nUnVudGltZXMgfSksIFwiIFwiLCBpMThuLmxvYWRpbmdSdW50aW1lcykpIDogKCF0aGlzLmVycm9yICYmIChoKFwiY2FsY2l0ZS1zZWxlY3RcIiwgeyBsYWJlbDogaTE4bi5zZWxlY3RSdW50aW1lLCBvbkNhbGNpdGVTZWxlY3RDaGFuZ2U6IHRoaXMuaGFuZGxlUnVudGltZUNoYW5nZSB9LCB0aGlzLnJ1bnRpbWVzLm1hcCgocnVudGltZSwgaSkgPT4gKGgoXCJjYWxjaXRlLW9wdGlvblwiLCB7IHZhbHVlOiBpLCBzZWxlY3RlZDogc2VsZWN0ZWRSdW50aW1lSW5kZXggPT09IGkgfSwgcnVudGltZS5uYW1lLCBcIiAtIFwiLCBydW50aW1lLnZlcnNpb24pKSkpKSkpKTtcbiAgICB9XG4gICAgZ2V0IGVsKCkgeyByZXR1cm4gZ2V0RWxlbWVudCh0aGlzKTsgfVxufTtcbkFyY2dpc05vdGVib29rUnVudGltZVNlbGVjdC5zdHlsZSA9IGFyY2dpc05vdGVib29rUnVudGltZVNlbGVjdENzcztcblxuZXhwb3J0IHsgQXJjZ2lzTm90ZWJvb2tSdW50aW1lU2VsZWN0IGFzIGFyY2dpc19ub3RlYm9va19ydW50aW1lX3NlbGVjdCB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcmNnaXMtbm90ZWJvb2stcnVudGltZS1zZWxlY3QuZW50cnkuanMubWFwIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogdjQuMC41OFxuICovXG5pbXBvcnQgeyBhIGFzIGFkZFRyYWlsaW5nU2xhc2hJZk1pc3NpbmcgfSBmcm9tICcuL3VybC00YzNhZTU0Yy5qcyc7XG5cbmZ1bmN0aW9uIGlzRXNyaShpdGVtKSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAhISgoX2EgPSBpdGVtLm93bmVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcImVzcmlcIikpO1xufVxuZnVuY3Rpb24gaXNQcmVtaXVtKGl0ZW0pIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIGlzRXNyaShpdGVtKSAmJiAhISgoX2EgPSBpdGVtLnR5cGVLZXl3b3JkcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmluY2x1ZGVzKFwiUmVxdWlyZXMgQ3JlZGl0c1wiKSk7XG59XG5mdW5jdGlvbiBpc1N1YnNjcmliZXIoaXRlbSkge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4gaXNFc3JpKGl0ZW0pICYmICEhKChfYSA9IGl0ZW0udHlwZUtleXdvcmRzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaW5jbHVkZXMoXCJSZXF1aXJlcyBTdWJzY3JpcHRpb25cIikpO1xufVxuZnVuY3Rpb24gaXNPd25lcihpdGVtLCB1c2VyKSB7XG4gICAgcmV0dXJuIGl0ZW0ub3duZXIgPT09IHVzZXIudXNlcm5hbWU7XG59XG4vKipcbiAqIENhbiB0aGUgdXNlciB1cGRhdGUgdGhlIGl0ZW1cbiAqL1xuZnVuY3Rpb24gY2FuVXBkYXRlSXRlbShpdGVtLCB1c2VyKSB7XG4gICAgcmV0dXJuIHVzZXJJc0l0ZW1BZG1pbihpdGVtLCB1c2VyKSB8fCBpdGVtLml0ZW1Db250cm9sID09PSBcInVwZGF0ZVwiO1xufVxuLyoqXG4gKiBJcyB0aGUgdXNlciBlaXRoZXIgYW4gb3duZXIgb3IgYWRtaW4gb2YgdGhlIGl0ZW1cbiAqL1xuZnVuY3Rpb24gdXNlcklzSXRlbUFkbWluKGl0ZW0sIHVzZXIpIHtcbiAgICByZXR1cm4gaXNPd25lcihpdGVtLCB1c2VyKSB8fCBpc0l0ZW1BZG1pbihpdGVtLCB1c2VyKTtcbn1cbi8qKlxuICogRG9lcyB0aGUgdXNlciBoYXZlIGFkbWluIGNhcGFiaWxpdGllcyBvbiB0aGlzIGl0ZW1cbiAqL1xuZnVuY3Rpb24gaXNJdGVtQWRtaW4oaXRlbSwgdXNlcikge1xuICAgIHZhciBfYTtcbiAgICAvLyBpZiB0aGlzIGZsYWcgaXMgYWxyZWFkeSBzZXQgKHByb2JhYmx5IGhvbWUgYXBwKSwgdXNlIGl0XG4gICAgaWYgKGl0ZW0uaXNBZG1pbiAhPSBudWxsKSB7XG4gICAgICAgIHJldHVybiAhIWl0ZW0uaXNBZG1pbjtcbiAgICB9XG4gICAgY29uc3QgaXRlbU93bmVyID0gaXRlbS5vd25lcjtcbiAgICBjb25zdCBpdGVtQ29udHJvbEFkbWluID0gaXRlbS5pdGVtQ29udHJvbCA9PT0gXCJhZG1pblwiO1xuICAgIGNvbnN0IGVzcmlVc2VycyA9IFtcImVzcmlfbGl2aW5nYXRsYXNcIiwgXCJlc3JpX2RlbW9ncmFwaGljc1wiLCBcImVzcmlfYm91bmRhcmllc1wiXTtcbiAgICBpZiAoKChfYSA9IGl0ZW0ucG9ydGFsKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaXNQb3J0YWwpICYmXG4gICAgICAgICFpc093bmVyKGl0ZW0sIHVzZXIpICYmXG4gICAgICAgIGl0ZW1Db250cm9sQWRtaW4gJiZcbiAgICAgICAgaXRlbU93bmVyLmluY2x1ZGVzKFwiZXNyaV9cIikgJiZcbiAgICAgICAgLy8gcG9ydGFsIGluY29ycmVjdGx5IHJldHVybnMgXCJpdGVtQ29udHJvbD1cImFkbWluXCIgZm9yIGVzcmkgb3duZWQgaXRlbXNcbiAgICAgICAgIWVzcmlVc2Vycy5pbmNsdWRlcyhpdGVtT3duZXIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGl0ZW1Db250cm9sQWRtaW47XG59XG5jb25zdCBpdGVtc0JlbG9uZ1RvVXNlck9yZyA9IChpdGVtcywgdXNlcikgPT4ge1xuICAgIHJldHVybiAhIXVzZXIub3JnSWQgJiYgaXRlbXMuZXZlcnkoKGl0ZW0pID0+IGl0ZW0uaXNPcmdJdGVtKTtcbn07XG5jb25zdCBnZXRJdGVtSG9tZUFwcFVybCA9IChpdGVtSWQsIGJhc2VVcmwpID0+IGAke2FkZFRyYWlsaW5nU2xhc2hJZk1pc3NpbmcoYmFzZVVybCl9aXRlbS5odG1sP2lkPSR7aXRlbUlkfWA7XG5cbmV4cG9ydCB7IGlzU3Vic2NyaWJlciBhcyBhLCBpc1ByZW1pdW0gYXMgYiwgY2FuVXBkYXRlSXRlbSBhcyBjLCBpdGVtc0JlbG9uZ1RvVXNlck9yZyBhcyBkLCBnZXRJdGVtSG9tZUFwcFVybCBhcyBnLCBpc093bmVyIGFzIGksIHVzZXJJc0l0ZW1BZG1pbiBhcyB1IH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWl0ZW0tMzUzNTU1MmQuanMubWFwIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogdjQuMC41OFxuICovXG5pbXBvcnQgeyBsIGFzIGxvYWRNb2R1bGVzIH0gZnJvbSAnLi9sb2FkTW9kdWxlcy1iNGFjMTI0Ny5qcyc7XG5pbXBvcnQgeyBjIGFzIGNsb3Nlc3RFbGVtZW50Q3Jvc3NTaGFkb3dCb3VuZGFyeSB9IGZyb20gJy4vZG9tLTRkMzY3Njc3LmpzJztcblxuY29uc3QgbGFuZ3VhZ2VNYXAgPSBuZXcgTWFwKFtcbiAgICBbXCJhclwiLCBcImFyXCJdLFxuICAgIFtcImJnXCIsIFwiYmdcIl0sXG4gICAgW1wiYnNcIiwgXCJic1wiXSxcbiAgICBbXCJjYVwiLCBcImNhXCJdLFxuICAgIFtcImNzXCIsIFwiY3NcIl0sXG4gICAgW1wiZGFcIiwgXCJkYVwiXSxcbiAgICBbXCJkZVwiLCBcImRlXCJdLFxuICAgIFtcImVsXCIsIFwiZWxcIl0sXG4gICAgW1wiZW5cIiwgXCJlblwiXSxcbiAgICBbXCJlc1wiLCBcImVzXCJdLFxuICAgIFtcImV0XCIsIFwiZXRcIl0sXG4gICAgW1wiZmlcIiwgXCJmaVwiXSxcbiAgICBbXCJmclwiLCBcImZyXCJdLFxuICAgIFtcImhlXCIsIFwiaGVcIl0sXG4gICAgW1wiaHJcIiwgXCJoclwiXSxcbiAgICBbXCJodVwiLCBcImh1XCJdLFxuICAgIFtcImlkXCIsIFwiaWRcIl0sXG4gICAgW1wiaXRcIiwgXCJpdFwiXSxcbiAgICBbXCJqYVwiLCBcImphXCJdLFxuICAgIFtcImtvXCIsIFwia29cIl0sXG4gICAgW1wibHRcIiwgXCJsdFwiXSxcbiAgICBbXCJsdlwiLCBcImx2XCJdLFxuICAgIFtcIm5iXCIsIFwibmJcIl0sXG4gICAgW1wibmxcIiwgXCJubFwiXSxcbiAgICBbXCJwbFwiLCBcInBsXCJdLFxuICAgIFtcInB0LWJyXCIsIFwicHQtQlJcIl0sXG4gICAgW1wicHQtcHRcIiwgXCJwdC1QVFwiXSxcbiAgICBbXCJyb1wiLCBcInJvXCJdLFxuICAgIFtcInJ1XCIsIFwicnVcIl0sXG4gICAgW1wic2tcIiwgXCJza1wiXSxcbiAgICBbXCJzbFwiLCBcInNsXCJdLFxuICAgIFtcInNyXCIsIFwic3JcIl0sXG4gICAgW1wic3ZcIiwgXCJzdlwiXSxcbiAgICBbXCJ0aFwiLCBcInRoXCJdLFxuICAgIFtcInRyXCIsIFwidHJcIl0sXG4gICAgW1widWtcIiwgXCJ1a1wiXSxcbiAgICBbXCJ2aVwiLCBcInZpXCJdLFxuICAgIFtcInpoLWNuXCIsIFwiemgtQ05cIl0sXG4gICAgW1wiemgtaGtcIiwgXCJ6aC1IS1wiXSxcbiAgICBbXCJ6aC10d1wiLCBcInpoLVRXXCJdXG5dKTtcbi8vIHJ0bFxuZnVuY3Rpb24gZ2V0RWxlbWVudERpcihlbCkge1xuICAgIHJldHVybiBnZXRFbGVtZW50UHJvcChlbCwgXCJkaXJcIiwgXCJsdHJcIik7XG59XG5mdW5jdGlvbiBnZXRFbGVtZW50UHJvcChlbCwgcHJvcCwgdmFsdWUpIHtcbiAgICBjb25zdCBjbG9zZXN0V2l0aFByb3AgPSBjbG9zZXN0RWxlbWVudENyb3NzU2hhZG93Qm91bmRhcnkoZWwsIGBbJHtwcm9wfV1gKTtcbiAgICByZXR1cm4gY2xvc2VzdFdpdGhQcm9wID8gY2xvc2VzdFdpdGhQcm9wLmdldEF0dHJpYnV0ZShwcm9wKSA6IHZhbHVlO1xufVxuLy8gY3NzXG5jb25zdCBDU1NfVVRJTElUWSA9IHtcbiAgICBydGw6IFwiYXJjZ2lzLS1ydGxcIlxufTtcbmFzeW5jIGZ1bmN0aW9uIGZvcm1hdE51bWJlcihudW1iZXIsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGFwaSwgdHlwZSwgcGxhY2VzIH0gPSBvcHRpb25zIHx8IHt9O1xuICAgIGlmIChhcGkgPT09IDQpIHtcbiAgICAgICAgY29uc3QgW2ludGxdID0gYXdhaXQgbG9hZE1vZHVsZXMoW1wiZXNyaS9pbnRsXCJdKTtcbiAgICAgICAgY29uc3QgbnVtYmVyRm9ybWF0SW50bE9wdGlvbnMgPSBpbnRsLmNvbnZlcnROdW1iZXJGb3JtYXRUb0ludGxPcHRpb25zKHtcbiAgICAgICAgICAgIHBsYWNlcyxcbiAgICAgICAgICAgIHN0eWxlOiB0eXBlLFxuICAgICAgICAgICAgZGlnaXRTZXBhcmF0b3I6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBpbnRsLmZvcm1hdE51bWJlcihudW1iZXIsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgbnVtYmVyRm9ybWF0SW50bE9wdGlvbnMpLCB7IHN0eWxlOiB0eXBlIH0pKTtcbiAgICB9XG4gICAgY29uc3QgW2Rvam9OdW1iZXJdID0gYXdhaXQgbG9hZE1vZHVsZXMoW1wiZG9qby9udW1iZXJcIl0pO1xuICAgIHJldHVybiBkb2pvTnVtYmVyLmZvcm1hdChudW1iZXIsIHtcbiAgICAgICAgdHlwZSxcbiAgICAgICAgcGxhY2VzLFxuICAgICAgICBwYXR0ZXJuOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucGF0dGVyblxuICAgIH0pO1xufVxuY29uc3QgY2FjaGUgPSB7fTtcbmZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkge1xuICAgIGNvbnN0IGxhbmcgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQubGFuZztcbiAgICBjb25zdCBkYXlTaG9ydE1vbnRoWWVhciA9IHtcbiAgICAgICAgeWVhcjogXCJudW1lcmljXCIsXG4gICAgICAgIG1vbnRoOiBcInNob3J0XCIsXG4gICAgICAgIGRheTogXCJudW1lcmljXCJcbiAgICB9O1xuICAgIGlmICghY2FjaGVbbGFuZ10pIHtcbiAgICAgICAgY2FjaGVbbGFuZ10gPSBuZXcgSW50bC5EYXRlVGltZUZvcm1hdChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQubGFuZywgZGF5U2hvcnRNb250aFllYXIpO1xuICAgIH1cbiAgICByZXR1cm4gY2FjaGVbbGFuZ10uZm9ybWF0KGRhdGUpO1xufVxuZnVuY3Rpb24gZm9ybWF0UGx1cmFsKGxhbmcsIHN0cmluZ09iaiwgbnVtYmVyKSB7XG4gICAgY29uc3Qgc2luZ2xlcyA9IFtcImlkXCIsIFwiamFcIiwgXCJrb1wiLCBcInRoXCIsIFwidmlcIiwgXCJ6aC1jblwiLCBcInpoLWhrXCIsIFwiemgtdHdcIl07XG4gICAgY29uc3QgbGlrZUVuZ2xpc2ggPSBbXG4gICAgICAgIFwiZW5cIixcbiAgICAgICAgXCJjYVwiLFxuICAgICAgICBcImRhXCIsXG4gICAgICAgIFwiZGVcIixcbiAgICAgICAgXCJlbFwiLFxuICAgICAgICBcImVzXCIsXG4gICAgICAgIFwiZXRcIixcbiAgICAgICAgXCJmaVwiLFxuICAgICAgICBcImhpXCIsXG4gICAgICAgIFwiaHVcIixcbiAgICAgICAgXCJpdFwiLFxuICAgICAgICBcIm5iXCIsXG4gICAgICAgIFwibmxcIixcbiAgICAgICAgXCJwdC1wdFwiLFxuICAgICAgICBcInN2XCIsXG4gICAgICAgIFwidHJcIlxuICAgIF07XG4gICAgY29uc3QgbG9jYWxlID0gbGFuZyAhPT0gbnVsbCAmJiBsYW5nICE9PSB2b2lkIDAgPyBsYW5nIDogXCJlblwiO1xuICAgIC8vIGlmIHRoZSBudW1iZXIgaXMgb25lLCBvciBpdCBpcyBhIFwic2ltcGxlXCIgbGFuZ3VhZ2UsIHJldHVybiB0aGUgMSBzdHJpbmdcbiAgICBpZiAobnVtYmVyID09PSAxIHx8IHNpbmdsZXMuaW5jbHVkZXMobG9jYWxlKSkge1xuICAgICAgICByZXR1cm4gc3RyaW5nT2JqLnNpbmdsZS5yZXBsYWNlKFwiJHtudW1iZXJ9XCIsIFwiMVwiKTtcbiAgICB9XG4gICAgLy8gaWYgdGhlIG51bWJlciBpcyBub3QgMSBhbmQgdGhlIGxhbmd1YWdlIHVzZXMgdGhlIHNhbWUgcGx1cmFsaXphdGlvbiBzdHJhdGVneSBhcyBlbmdsaXNoLFxuICAgIC8vIHJldHVybiB0aGUgbXVsdGlwbGUgc3RyaW5nXG4gICAgaWYgKG51bWJlciAhPT0gMSAmJiBsaWtlRW5nbGlzaC5pbmNsdWRlcyhsb2NhbGUpKSB7XG4gICAgICAgIHJldHVybiBzdHJpbmdPYmoubXVsdGlwbGUucmVwbGFjZShcIiR7bnVtYmVyfVwiLCBgJHtudW1iZXJ9YCk7XG4gICAgfVxuICAgIC8vIGlmIG5vbmUgb2YgdGhlIGFib3ZlIHdvcmtlZCwgcmV0dXJuIHRoZSBcInVua25vd25cIiBzdHJpbmdcbiAgICByZXR1cm4gc3RyaW5nT2JqLnVua25vd24ucmVwbGFjZShcIiR7bnVtYmVyfVwiLCBgJHtudW1iZXJ9YCk7XG59XG5cbmV4cG9ydCB7IENTU19VVElMSVRZIGFzIEMsIGZvcm1hdERhdGUgYXMgYSwgZm9ybWF0UGx1cmFsIGFzIGIsIGZvcm1hdE51bWJlciBhcyBmLCBnZXRFbGVtZW50RGlyIGFzIGcsIGxhbmd1YWdlTWFwIGFzIGwgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGFuZ3VhZ2VVdGlsLWVmMGU1NGIyLmpzLm1hcCIsIi8qIVxuICogQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cbiAqIHY0LjAuNThcbiAqL1xuaW1wb3J0IHsgYyBhcyBjbG9zZXN0RWxlbWVudENyb3NzU2hhZG93Qm91bmRhcnkgfSBmcm9tICcuL2RvbS00ZDM2NzY3Ny5qcyc7XG5pbXBvcnQgeyBsIGFzIGxhbmd1YWdlTWFwIH0gZnJvbSAnLi9sYW5ndWFnZVV0aWwtZWYwZTU0YjIuanMnO1xuaW1wb3J0IHsgYSBhcyBnZXRBc3NldFBhdGggfSBmcm9tICcuL2luZGV4LWUzYmY3ZGE3LmpzJztcblxuLy8gaHR0cHM6Ly9tZWRpdW0uY29tL3N0ZW5jaWwtdHJpY2tzL2ltcGxlbWVudGluZy1pbnRlcm5hdGlvbmFsaXNhdGlvbi1pMThuLXdpdGgtc3RlbmNpbC01ZTY1NTk1NTQxMTdcbmZ1bmN0aW9uIGdldENvbXBvbmVudENsb3Nlc3RMYW5ndWFnZShlbGVtZW50KSB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgY29uc3QgY2xvc2VzdEVsZW1lbnQgPSAoX2EgPSBjbG9zZXN0RWxlbWVudENyb3NzU2hhZG93Qm91bmRhcnkoZWxlbWVudCwgXCJbbGFuZ11cIikpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IChfYyA9IChfYiA9IGVsZW1lbnQuc2hhZG93Um9vdCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm93bmVyRG9jdW1lbnQpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgLy8gbGFuZ3VhZ2Ugc2V0IGJ5IHRoZSBjYWxsaW5nIGFwcGxpY2F0aW9uIG9yIGJyb3dzZXIuIGRlZmF1bHRzIHRvIGVuZ2xpc2guXG4gICAgY29uc3QgbGFuZyA9ICgoY2xvc2VzdEVsZW1lbnQgPT09IG51bGwgfHwgY2xvc2VzdEVsZW1lbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNsb3Nlc3RFbGVtZW50LmxhbmcpIHx8IChuYXZpZ2F0b3IgPT09IG51bGwgfHwgbmF2aWdhdG9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBuYXZpZ2F0b3IubGFuZ3VhZ2UpIHx8IFwiZW5cIikudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAobGFuZ3VhZ2VNYXAuaGFzKGxhbmcpKSB7XG4gICAgICAgIHJldHVybiBsYW5ndWFnZU1hcC5nZXQobGFuZyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBcInJ1LVJVXCIgbWFwcyB0byBcInJ1XCIgdXNlIGNhc2VcbiAgICAgICAgaWYgKGxhbmd1YWdlTWFwLmhhcyhsYW5nLnNsaWNlKDAsIDIpKSkge1xuICAgICAgICAgICAgcmV0dXJuIGxhbmd1YWdlTWFwLmdldChsYW5nLnNsaWNlKDAsIDIpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBcImVuXCI7XG4gICAgICAgIH1cbiAgICB9XG59XG5mdW5jdGlvbiBnZXRDb21wb25lbnRDbG9zZXN0TGFuZ3VhZ2VJbnRsKGVsZW1lbnQpIHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAvLyBpdCdzIE9LIGlmIHdlIGRvbid0IGhhdmUgdGhlIDQgbGV0dGVyIGxhbmd1YWdlIGZpbGUgZm9yIGl0XG4gICAgLy8gNCBsZXR0ZXIgbGFuZ3VhZ2UgY29kZSBuZWVkZWQgZm9yIGZvcm1hdHRpbmcgbnVtYmVyc1xuICAgIGNvbnN0IGNsb3Nlc3RFbGVtZW50ID0gKF9hID0gY2xvc2VzdEVsZW1lbnRDcm9zc1NoYWRvd0JvdW5kYXJ5KGVsZW1lbnQsIFwiW2xhbmddXCIpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAoX2MgPSAoX2IgPSBlbGVtZW50LnNoYWRvd1Jvb3QpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5vd25lckRvY3VtZW50KSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuZG9jdW1lbnRFbGVtZW50O1xuICAgIC8vIGxhbmd1YWdlIHNldCBieSB0aGUgY2FsbGluZyBhcHBsaWNhdGlvbiBvciBicm93c2VyLiBkZWZhdWx0cyB0byBlbmdsaXNoLlxuICAgIGNvbnN0IGxhbmcgPSAoKGNsb3Nlc3RFbGVtZW50ID09PSBudWxsIHx8IGNsb3Nlc3RFbGVtZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjbG9zZXN0RWxlbWVudC5sYW5nKSB8fCAobmF2aWdhdG9yID09PSBudWxsIHx8IG5hdmlnYXRvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogbmF2aWdhdG9yLmxhbmd1YWdlKSB8fCBcImVuXCIpLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGxhbmd1YWdlTWFwLmhhcyhsYW5nKSkge1xuICAgICAgICByZXR1cm4gbGFuZ3VhZ2VNYXAuZ2V0KGxhbmcpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKGxhbmd1YWdlTWFwLmhhcyhsYW5nLnNsaWNlKDAsIDIpKSkge1xuICAgICAgICAgICAgLy8gd2Ugc3VwcG9ydCB0aGUgMiBsZXR0ZXIgY29kZWQgbGFuZ3VhZ2VcbiAgICAgICAgICAgIC8vIGUuZy4gaXQtQ0ggdnMgaXRcbiAgICAgICAgICAgIHJldHVybiBsYW5nO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFwiZW5cIjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIGZldGNoTG9jYWxlU3RyaW5nc0ZvckNvbXBvbmVudChjb21wb25lbnROYW1lLCBsb2NhbGUpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBmZXRjaChnZXRBc3NldFBhdGgoYC4uL2FyY2dpcy1hcHAtYXNzZXRzL2kxOG4vJHtjb21wb25lbnROYW1lfS5pMThuLiR7bG9jYWxlfS5qc29uYCkpLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgaWYgKHJlc3VsdC5vaylcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdC5qc29uKCkpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIHJlamVjdCgpO1xuICAgICAgICB9LCAoKSA9PiByZWplY3QoKSk7XG4gICAgfSk7XG59XG5jb25zdCBzdHJpbmdDYWNoZSA9IHt9O1xuZnVuY3Rpb24gZmV0Y2hMb2NhbGVTdHJpbmdzRnJvbUNhY2hlKGNvbXBvbmVudE5hbWUsIGxvY2FsZSkge1xuICAgIGNvbnN0IGlkID0gYCR7Y29tcG9uZW50TmFtZX0ke2xvY2FsZX1gO1xuICAgIGlmICghc3RyaW5nQ2FjaGVbaWRdKSB7XG4gICAgICAgIHN0cmluZ0NhY2hlW2lkXSA9IGZldGNoTG9jYWxlU3RyaW5nc0ZvckNvbXBvbmVudChjb21wb25lbnROYW1lLCBsb2NhbGUpO1xuICAgIH1cbiAgICByZXR1cm4gc3RyaW5nQ2FjaGVbaWRdO1xufVxuLyoqXG4gKiBHZXQgc3RyaW5ncyBhbmQgbGFuZ3VhZ2UgY29kZXMuXG4gKiBUaGlzIG1ldGhvZCByZXR1cm5zIDIgbGFuZ3VhZ2UgY29kZXMuXG4gKiBUaGUgZmlyc3Qgb25lIHJldHVybnMgYSBjb2RlIHRoYXQncyBhbHNvIHN1cHBvcnRlZCBhcyBhIGxhbmd1YWdlIGZpbGUuXG4gKiBUaGUgc2Vjb25kIG9uZSByZXR1cm5zIGEgY29kZSB3aGVyZSB0aGVyZSBpcyBzdXBwb3J0IGZvciB0aGUgZmlyc3QgMiBsZXR0ZXJzIG9mIHRoZSBjb2RlIGFzIHBhcnQgb2YgYSBsYW5ndWFnZSBmaWxlLFxuICogYnV0IHdpbGwgcmV0dXJuIHRoZSBvcmlnaW5hbCA0IGxldHRlciBjb2RlIGZyb20gdGhlIHBhZ2UuXG4gKiBFLmcuIEZvciBcIml0LWNoXCIgaXQgd2lsbCByZXR1cm4gXCJpdFwiIGFzIHRoZSBmaXJzdCBsYW5ndWFnZSBjb2RlIGFuZCBcIml0LWNoXCIgYXMgdGhlIHNlY29uZC5cbiAqIFRoZSBzZWNvbmQgb25lIGlzIHJlcXVpcmVkIGZvciBlc3JpLmludGwuc2V0TG9jYWxlKCkgdG8gZ2V0IHRoZSBjb3JyZWN0IGZvcm1hdHRpbmcuXG4gKlxuICogSWYgYSB0YWdOYW1lIGlzIHByb3ZpZGVkIGl0IHdpbGwgb3ZlcndpdGUgdGhlIGVsZW1lbnQncyB0YWdOYW1lXG4gKlxuICogIEByZXR1cm4gWyBzdHJpbmdzLCBmaXJzdCBsYW5ndWFnZSBjb2RlLCBzZWNvbmQgbGFuZ3VhZ2UgY29kZV1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gZ2V0TG9jYWxlQ29tcG9uZW50U3RyaW5ncyhlbGVtZW50LCB0YWdOYW1lKSB7XG4gICAgY29uc3QgY29tcG9uZW50TmFtZSA9IHRhZ05hbWUgfHwgZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgY29tcG9uZW50TGFuZ3VhZ2UgPSBnZXRDb21wb25lbnRDbG9zZXN0TGFuZ3VhZ2UoZWxlbWVudCk7XG4gICAgY29uc3QgY29tcG9uZW50TGFuZ3VhZ2VJbnRsID0gZ2V0Q29tcG9uZW50Q2xvc2VzdExhbmd1YWdlSW50bChlbGVtZW50KTtcbiAgICBsZXQgc3RyaW5ncztcbiAgICB0cnkge1xuICAgICAgICBzdHJpbmdzID0gYXdhaXQgZmV0Y2hMb2NhbGVTdHJpbmdzRnJvbUNhY2hlKGNvbXBvbmVudE5hbWUsIGNvbXBvbmVudExhbmd1YWdlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGBubyBsb2NhbGUgZm9yICR7Y29tcG9uZW50TmFtZX0gKCR7Y29tcG9uZW50TGFuZ3VhZ2V9KSBsb2FkaW5nIGRlZmF1bHQgbG9jYWxlIGVuLmApO1xuICAgICAgICBzdHJpbmdzID0gYXdhaXQgZmV0Y2hMb2NhbGVTdHJpbmdzRnJvbUNhY2hlKGNvbXBvbmVudE5hbWUsIFwiZW5cIik7XG4gICAgfVxuICAgIHJldHVybiBbc3RyaW5ncywgY29tcG9uZW50TGFuZ3VhZ2UsIGNvbXBvbmVudExhbmd1YWdlSW50bF07XG59XG5cbmV4cG9ydCB7IGdldENvbXBvbmVudENsb3Nlc3RMYW5ndWFnZSBhcyBhLCBnZXRMb2NhbGVDb21wb25lbnRTdHJpbmdzIGFzIGcgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9jYWxlLTA1MGI2ZGI5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==