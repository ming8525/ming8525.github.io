"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-96d103"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-categories-picker_6.entry.js":
/*!*****************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-categories-picker_6.entry.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_categories_picker: () => (/* binding */ ArcgisCategoriesPicker),
/* harmony export */   arcgis_folder_picker: () => (/* binding */ ArcgisFolderPicker),
/* harmony export */   arcgis_item_properties: () => (/* binding */ ArcgisItemProperties),
/* harmony export */   arcgis_summary_input: () => (/* binding */ ArcgisSummaryInput),
/* harmony export */   arcgis_tags_picker: () => (/* binding */ ArcgisTagsPicker),
/* harmony export */   arcgis_title_input: () => (/* binding */ ArcgisTitleInput)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _categories_9f0f37ee_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./categories-9f0f37ee.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/categories-9f0f37ee.js");
/* harmony import */ var _categories_ca134005_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./categories-ca134005.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/categories-ca134005.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/* harmony import */ var _locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./locale-050b6db9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js");
/* harmony import */ var _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./item-properties-10491b2e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-10491b2e.js");
/* harmony import */ var _user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./user-3ea69c3a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js");
/* harmony import */ var _server_item_8d384796_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./server-item-8d384796.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-8d384796.js");
/* harmony import */ var _functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./functional-81373f6d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-81373f6d.js");
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _file_bf8ab90f_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./file-bf8ab90f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-bf8ab90f.js");
/* harmony import */ var _group_6a6303b0_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./group-6a6303b0.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/group-6a6303b0.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/* harmony import */ var _privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./privileges-5c382f61.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js");
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./languageUtil-ef0e54b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./add-item-dbbe2f57.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js");
/* harmony import */ var _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./ui-bca7bcd1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-bca7bcd1.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/* harmony import */ var _guid_aeaed84d_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./guid-aeaed84d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-aeaed84d.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */

























const arcgisCategoriesPickerCss = ".label{margin-top:0px;margin-bottom:0px;font-weight:var(--arcgis-label-font-weight, 400)}";

const ArcgisCategoriesPicker = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisCategoriesPickerChange = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisCategoriesPickerChange", 7);
        this.renderCombobox = () => {
            const { i18n, scale, schema, label } = this;
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-combobox", { label: label !== null && label !== void 0 ? label : i18n.categories, maxItems: 5, selectionMode: "ancestors", placeholder: i18n.assignCategories, scale: scale, ref: (el) => (this.combobox = el) }, this.renderNestedCategories(schema)));
        };
        this.api = undefined;
        this.portal = undefined;
        this.scale = undefined;
        this.label = undefined;
        this.hideLabel = undefined;
        this.categories = undefined;
        this.schema = [];
        this.rootCategoryPath = _categories_ca134005_js__WEBPACK_IMPORTED_MODULE_2__.U;
    }
    async componentWillLoad() {
        var _a, _b, _c, _d;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.el);
        this.i18n = locale[0];
        // Fall back to config if no props passed in
        (_a = this.portal) !== null && _a !== void 0 ? _a : (this.portal = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.portal);
        (_b = this.scale) !== null && _b !== void 0 ? _b : (this.scale = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.scale);
        (_c = this.api) !== null && _c !== void 0 ? _c : (this.api = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.api);
        (_d = this.categories) !== null && _d !== void 0 ? _d : (this.categories = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.categories);
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.a.on("reset", () => {
            this.categories = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.categories;
        });
    }
    async componentDidLoad() {
        var _a, _b, _c;
        const { portal, schema } = this;
        if (portal && !(schema === null || schema === void 0 ? void 0 : schema.length)) {
            if (portal.categories) {
                this.schema = (_a = portal.categories[0]) === null || _a === void 0 ? void 0 : _a.categories;
            }
            else {
                const response = await (0,_categories_9f0f37ee_js__WEBPACK_IMPORTED_MODULE_1__.f)(portal);
                this.schema = (_c = (_b = response.categorySchema) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.categories;
                this.rootCategoryPath = (0,_categories_ca134005_js__WEBPACK_IMPORTED_MODULE_2__.g)(response.categorySchema);
            }
        }
    }
    updateCategories() {
        this.arcgisCategoriesPickerChange.emit(this.categories);
    }
    categoriesPickerChangeHandler(event) {
        var _a;
        event.stopPropagation();
        const values = ((_a = this.combobox) === null || _a === void 0 ? void 0 : _a.value) || [];
        const newList = Array.isArray(values) ? values : [values];
        if ((0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_4__.f)(newList, this.categories)) {
            return;
        }
        this.categories = newList;
    }
    renderNestedCategories(schema, previousValue) {
        return schema.map((category) => {
            // Keep breadcrumbs of categories' ancestry
            const value = previousValue
                ? `${previousValue}/${category.title}`
                : `${this.rootCategoryPath}/${category.title}`;
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-combobox-item", { value: value, textLabel: category.title, selected: this.categories.some((ele) => ele === value || ele.toLocaleLowerCase() === value.toLocaleLowerCase()) }, category.categories && this.renderNestedCategories(category.categories, value)));
        });
    }
    render() {
        const { i18n, scale, schema, hideLabel, label, renderCombobox } = this;
        if (hideLabel) {
            return renderCombobox();
        }
        return (!!schema && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { scale: scale }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "label" }, label !== null && label !== void 0 ? label : i18n.categories), renderCombobox())));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
    static get watchers() { return {
        "categories": ["updateCategories"]
    }; }
};
ArcgisCategoriesPicker.style = arcgisCategoriesPickerCss;

const arcgisFolderPickerCss = ".label{margin-top:0px;margin-bottom:0px;font-weight:var(--arcgis-label-font-weight, 400)}.create-folder{--calcite-color-text-1:var(--calcite-color-text-link);--calcite-color-text-3:var(--calcite-color-text-link)}.combobox-wrapper{position:relative}.progress{position:absolute;top:0px;z-index:1}";

const MAX_TITLE_LENGTH$1 = 250;
const ArcgisFolderPicker = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisFolderPickerChange = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisFolderPickerChange", 7);
        this.arcgisFolderPickerLoad = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisFolderPickerLoad", 7);
        this.api = undefined;
        this.portal = undefined;
        this.user = undefined;
        this.scale = undefined;
        this.label = undefined;
        this.folder = undefined;
        this.folders = [];
        this.newFolderActive = false;
        this.emptyFilterList = false;
        this.filterText = undefined;
        this.newFolderInput = undefined;
        this.createFolderText = undefined;
        this.showError = false;
        this.errorString = undefined;
        this.newFolderInputElement = undefined;
        this.comboboxElement = undefined;
        this.loading = false;
    }
    async componentWillLoad() {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.el);
        this.i18n = locale[0];
        // Fall back to config if no props passed
        (_a = this.portal) !== null && _a !== void 0 ? _a : (this.portal = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.portal);
        (_b = this.user) !== null && _b !== void 0 ? _b : (this.user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.user);
        (_c = this.scale) !== null && _c !== void 0 ? _c : (this.scale = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.scale);
        (_d = this.api) !== null && _d !== void 0 ? _d : (this.api = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.api);
        (_e = this.folder) !== null && _e !== void 0 ? _e : (this.folder = (_g = (_f = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.folder) !== null && _f !== void 0 ? _f : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.initialFolder) !== null && _g !== void 0 ? _g : (_h = this.folders) === null || _h === void 0 ? void 0 : _h[0]);
        this.createFolderText = this.i18n.createNewFolder;
        // arcgis-workflow TODO: re-initializing local state on store reset is not compatible with tests
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.a.on("reset", () => {
            var _a, _b, _c;
            this.folder = (_b = (_a = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.folder) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.initialFolder) !== null && _b !== void 0 ? _b : (_c = this.folders) === null || _c === void 0 ? void 0 : _c[0];
        });
    }
    async componentDidLoad() {
        // Only load folders if empty
        if (!this.folders.length) {
            await this.loadFolders(this.user);
        }
    }
    async handleUserChange(newUser, previousUser) {
        if (!!previousUser && newUser.username !== previousUser.username) {
            await this.loadFolders(newUser);
            this.folder = this.getHomeFolder();
        }
    }
    handleFolderChange() {
        this.arcgisFolderPickerChange.emit(this.folder);
    }
    async loadFolders(user) {
        var _a;
        this.loading = true;
        this.folders = await (0,_user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_7__.g)(user);
        this.arcgisFolderPickerLoad.emit([...this.folders]);
        if (!((_a = this.folder) === null || _a === void 0 ? void 0 : _a.id)) {
            this.folder = this.getHomeFolder();
        }
        this.loading = false;
    }
    getHomeFolder() {
        return this.folders.find((folder) => folder.title === folder.id);
    }
    setNewFolderActive() {
        var _a;
        (_a = this.newFolderInputElement) === null || _a === void 0 ? void 0 : _a.setFocus();
        if (!this.newFolderInputElement) {
            this.showError = false;
            this.newFolderInput = "";
        }
    }
    checkForEmptySuggestions(event) {
        var _a;
        event.stopPropagation();
        const text = this.comboboxElement.shadowRoot.querySelector("input").value;
        const { i18n } = this;
        this.emptyFilterList = ((_a = this.comboboxElement.filteredItems) === null || _a === void 0 ? void 0 : _a.length) <= 1;
        this.createFolderText = this.emptyFilterList
            ? i18n.noFoldersFoundCreate.replace("${folder}", text)
            : i18n.createNewFolder;
        this.filterText = text;
    }
    handleComboboxChange(event) {
        var _a, _b, _c;
        event.stopPropagation();
        const value = (_a = this.comboboxElement) === null || _a === void 0 ? void 0 : _a.value;
        if (value === "create-folder") {
            this.showError = false;
            this.emptyFilterList ? this.createNewFolder(this.filterText) : (this.newFolderActive = true);
            return;
        }
        this.folder =
            (_c = (_b = this.folders.find((folder) => folder.id === value)) !== null && _b !== void 0 ? _b : this.folder) !== null && _c !== void 0 ? _c : this.getHomeFolder();
    }
    closeNewFolderInput(event) {
        event.stopPropagation();
        this.newFolderActive = false;
    }
    // TODO: convert to Result, add folder errors to error structure
    async saveActiveFolder() {
        if (!this.newFolderActive) {
            return true;
        }
        try {
            await this.createNewFolder(this.newFolderInput);
        }
        catch (e) {
            return this.errorString;
        }
        return !this.showError;
    }
    async createNewFolder(folderName) {
        var _a;
        const title = folderName.trim();
        const { i18n, user } = this;
        try {
            const { folder } = await (0,_user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_7__.c)(title, user);
            this.folder = folder;
            this.folders = [this.folder, ...this.folders];
            // TODO: Remove/move configState.folders? Leftover from initial telemetry pass, may not be properly utilized anymore
            _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.folders = this.folders;
            this.newFolderActive = false;
            this.showError = false;
            // for some reason, sometimes the combobox doesn't pick up the change, so make sure the new folder is selected
            await (0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_4__.t)(100);
            const selectedItem = (_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(`calcite-combobox-item[data-id="${this.folder.id}"]`);
            if (selectedItem) {
                selectedItem.selected = true;
            }
        }
        catch (error) {
            // Identify which error occurred
            // TODO: Report via AppComponentErrorCode
            if (!title || (title === null || title === void 0 ? void 0 : title.length) <= 0) {
                this.errorString = i18n.error.noName;
            }
            else if (this.folders.map((folder) => folder.title).includes(title)) {
                this.errorString = i18n.error.folderAlreadyExists.replace("${folder}", title);
            }
            else if (title.indexOf(">") >= 0 || title.indexOf("<") >= 0) {
                this.errorString = i18n.error.invalidCharacters;
            }
            else {
                console.error(error);
                this.errorString = error.message;
            }
            this.showError = true;
            throw error;
        }
    }
    render() {
        var _a;
        const { i18n, scale } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { scale: scale, class: "input-height" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "label" }, (_a = this.label) !== null && _a !== void 0 ? _a : i18n.folder), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, this.newFolderActive ? ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-inline-editable", { controls: true, "editing-enabled": true, afterConfirm: async () => {
                var _a;
                try {
                    await this.createNewFolder(this.newFolderInput);
                    this.newFolderActive = false;
                }
                catch (error) {
                    (_a = this.newFolderInputElement) === null || _a === void 0 ? void 0 : _a.setFocus();
                    throw error;
                }
            }, scale: scale }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { placeholder: i18n.enterFolder, value: this.newFolderInput, maxLength: MAX_TITLE_LENGTH$1, scale: scale, onCalciteInputInput: (event) => (this.newFolderInput = event.target.value), onKeyDown: (e) => {
                e.stopPropagation();
                this.showError = false;
                switch (e.key) {
                    case "Enter":
                        this.createNewFolder(this.newFolderInput);
                        break;
                    case "Escape":
                        this.newFolderActive = false;
                        this.showError = false;
                        break;
                }
            }, ref: (element) => (this.newFolderInputElement = element), status: this.showError ? "invalid" : "idle" }))) : ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "combobox-wrapper" }, this.loading && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-progress", { type: "indeterminate", class: "progress" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-combobox", { label: i18n.folder, selectionMode: "single", maxItems: 5, placeholder: this.loading ? i18n.loading : i18n.searchFolders, scale: scale, ref: (element) => (this.comboboxElement = element), disabled: this.loading, clearDisabled: true, onCalciteComboboxChange: (event) => this.handleComboboxChange(event), onCalciteComboboxBeforeClose: () => {
                // Calcite Combobox workaround: folder picker should always have an option selected - reset folder to previous if selected folder is empty
                if (!this.comboboxElement.selectedItems.length) {
                    this.comboboxElement.value = this.folder.id;
                }
            } }, !this.loading && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, this.user && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-combobox-item", { class: "create-folder", value: "create-folder", textLabel: this.createFolderText, selected: false, icon: "folder-plus", filterDisabled: true })), this.folders.map(({ id, username, title }) => {
            // Fall back to user's home folder if current folder isn't found - invalid, deleted, etc.
            const selectedFolder = this.folders
                .map((folder) => folder.id)
                .includes(this.folder.id)
                ? this.folder
                : this.getHomeFolder();
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-combobox-item", { "data-id": id, value: id, textLabel: title, selected: (selectedFolder === null || selectedFolder === void 0 ? void 0 : selectedFolder.id) !== "all"
                    ? id === (selectedFolder === null || selectedFolder === void 0 ? void 0 : selectedFolder.id)
                    : id === username, icon: id === username ? "home" : "folder" }));
        }))))))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { status: "invalid", hidden: !this.showError, icon: this.showError, scale: scale }, this.errorString)));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
    static get watchers() { return {
        "user": ["handleUserChange"],
        "folder": ["handleFolderChange"],
        "newFolderInputElement": ["setNewFolderActive"]
    }; }
};
ArcgisFolderPicker.style = arcgisFolderPickerCss;

var itemPropertiesEvent;
(function (itemPropertiesEvent) {
    itemPropertiesEvent["arcgisTitleInputChange"] = "title";
    itemPropertiesEvent["arcgisFolderPickerChange"] = "folder";
    itemPropertiesEvent["arcgisSummaryInputChange"] = "snippet";
    itemPropertiesEvent["arcgisTagsPickerChange"] = "tags";
    itemPropertiesEvent["arcgisCategoriesPickerChange"] = "categories";
})(itemPropertiesEvent || (itemPropertiesEvent = {}));
const ArcgisItemProperties = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisItemPropertiesChange = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisItemPropertiesChange", 7);
        this.portal = undefined;
        this.user = undefined;
        this.api = undefined;
        this.config = undefined;
        this.itemId = undefined;
        this.type = undefined;
        this.scale = undefined;
    }
    /**
     * Manually reset state
     */
    async resetItemPropertiesStore() {
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.a.reset();
    }
    // If any prop changes, update the store and emit the current itemPropertiesState
    handleItemPropertiesChange(event) {
        const { detail, type } = event;
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i[itemPropertiesEvent[type]] = detail;
        this.arcgisItemPropertiesChange.emit(Object.assign({}, _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i));
    }
    async componentWillLoad() {
        var _a, _b;
        // Prioritize props over existing store values
        if (this.portal) {
            _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.portal = this.portal;
        }
        if (this.user) {
            _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.user = this.user;
        }
        if (this.api) {
            _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.api = this.api;
        }
        if (this.config) {
            _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.config = this.config;
        }
        if (this.itemId) {
            ({ result: _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.item } = await (0,_server_item_8d384796_js__WEBPACK_IMPORTED_MODULE_8__.a)(this.itemId, this.portal));
        }
        if (this.type) {
            _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.type = (_a = this.type) !== null && _a !== void 0 ? _a : (_b = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.item) === null || _b === void 0 ? void 0 : _b.type;
        }
        if (this.scale) {
            _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.scale = this.scale;
        }
    }
    render() {
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
    }
    disconnectedCallback() {
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.a.reset();
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};

const arcgisSummaryInputCss = ":host{--arcgis-label-margin-bottom:1rem}.container-s{margin-bottom:0.5rem}.container-m{margin-bottom:0.75rem}.container-l{margin-bottom:1rem}.label{--calcite-label-margin-bottom:0}.label-text{margin-top:0px;margin-bottom:0px;font-weight:var(--arcgis-label-font-weight, 400)}calcite-input{--calcite-color-border-1:var(--calcite-color-border-input)}.count{font-size:0.75rem;color:var(--calcite-color-text-1);opacity:0.75}.screen-readers-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}";

// Taken from https://developers.arcgis.com/rest/users-groups-and-items/update-item.htm
const MAX_CHARACTER = 2048;
const ArcgisSummaryInput = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisSummaryInputChange = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisSummaryInputChange", 7);
        this.updateLiveRegion = (0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_4__.d)((summary) => {
            this.liveRegionText = this.getCharactersText(summary);
        }, 1500);
        this.scale = undefined;
        this.label = undefined;
        this.summary = undefined;
        this.liveRegionText = undefined;
        this.valid = true;
    }
    async getErrorMessage() {
        if (!this.valid) {
            return {
                code: "summaryInvalid",
                translatedMessage: this.i18n.invalid
            };
        }
        return null;
    }
    async componentWillLoad() {
        var _a, _b;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.el);
        this.i18n = locale[0];
        // Do not override configState scale for individual components
        (_a = this.scale) !== null && _a !== void 0 ? _a : (this.scale = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.scale);
        (_b = this.summary) !== null && _b !== void 0 ? _b : (this.summary = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.snippet);
        this.liveRegionText = this.getCharactersText(this.summary);
        // arcgis-workflow TODO: re-initializing local state on store reset is not compatible with tests
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.a.on("reset", () => {
            this.summary = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.snippet;
        });
    }
    componentDidRender() {
        var _a, _b, _c;
        // TODO: remove this once calcite-input support resize="vertical" https://github.com/Esri/calcite-design-system/tree/main/packages/calcite-components/src/components/input
        const textArea = (_c = (_b = (_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector("calcite-input")) === null || _b === void 0 ? void 0 : _b.shadowRoot) === null || _c === void 0 ? void 0 : _c.querySelector("textarea");
        textArea && (textArea.style.resize = "vertical");
    }
    getCharactersText(summary) {
        return this.i18n.charactersLeft.replace("${num}", `${MAX_CHARACTER - summary.length}`);
    }
    validate() {
        this.valid = !/>|</.test(this.summary);
    }
    render() {
        const { i18n, summary, label, scale, liveRegionText, valid } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `container-${scale}` }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { scale: scale, class: "label" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "label-text" }, label !== null && label !== void 0 ? label : i18n.summary), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { type: "textarea", id: "summary-input", placeholder: i18n.addSummary, value: summary, maxLength: MAX_CHARACTER, scale: scale, status: valid ? "idle" : "invalid", onCalciteInputInput: (event) => {
                event.stopPropagation();
                const node = event.target;
                this.summary = node.value;
                this.arcgisSummaryInputChange.emit(this.summary);
                this.updateLiveRegion(node.value);
                this.validate();
            } }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { hidden: valid, icon: true, scale: scale, status: valid ? "idle" : "invalid" }, i18n.invalid), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "screen-readers-only", "aria-live": "polite" }, liveRegionText)), valid && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "count", "aria-hidden": "true" }, this.getCharactersText(summary)))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisSummaryInput.style = arcgisSummaryInputCss;

/**
 * Given a publishable type, find what type the resulting published item will be
 */
function findPublishType(type) {
    switch (type) {
        case "CSV":
        case "Microsoft Excel":
        case "GeoJson":
        case "Shapefile":
        case "File Geodatabase":
        case "Image Collection":
        case "GeoPackage":
        case "Service Definition":
        case "Feature Collection":
            return "Feature Service";
        case "Tile Package":
            return "Map Service";
        case "Vector Tile Package":
            return "Vector Tile Service";
        case "Scene Package":
            return "Scene Service";
        case "3DTiles Package":
            return "3DTiles Service";
    }
    return type;
}
/**
 * Check if a title is valid and unique
 */
const MAX_PUBLISH_SERVICE_NAME = 90;
const MAX_DATA_STORE_TITLE = 90;
const MAX_TITLE_LENGTH = 250;
async function validateTitle({ portal, user, title, itemType, folder, extension, enablePublishing = false, update = false }) {
    if (!user || !portal) {
        return { code: "missingUserOrPortal" };
    }
    if (!title || title.length <= 0) {
        return { code: "titleRequired" };
    }
    // for data store items, only alphanumeric and underscores should be allowed
    const dataStoreNameInvalidCharacterRegExp = /[\s.@~`!#$%\^&*+=\-\[\]\\';,\/{}|\\":<>\?]/g;
    if (itemType === "Data Store" &&
        (dataStoreNameInvalidCharacterRegExp.test(title) || title.length > MAX_DATA_STORE_TITLE)) {
        return { code: "dataStoreTitleInvalid" };
    }
    // for non publishable items, the only characters that arent allowed are < and >
    const itemNameCharacterRegExp = /<|>/gi;
    if (!enablePublishing && (itemNameCharacterRegExp.test(title) || title.length > MAX_TITLE_LENGTH)) {
        return { code: "titleInvalid" };
    }
    // for publishable items, only alphanumeric and underscores should be allowed
    const serviceNameInvalidCharacterRegExp = /[.@~`!#$%\^&*+=\-\[\]\\';,\/{}|\\":<>\?]/g;
    if (enablePublishing && (serviceNameInvalidCharacterRegExp.test(title) || title.length > MAX_PUBLISH_SERVICE_NAME)) {
        return { code: "serviceNameInvalid" };
    }
    const publishedItemType = enablePublishing ? findPublishType(itemType) : itemType;
    const { itemURLList } = (await (0,_server_item_8d384796_js__WEBPACK_IMPORTED_MODULE_8__.s)(title, publishedItemType, folder, extension, user, portal)) || {};
    if (itemURLList && !update) {
        return {
            code: "itemExists",
            itemUrl: itemURLList[0]
        };
    }
    // if we're publishing, ensure that the service name is available
    if (enablePublishing) {
        const response = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_10__.r)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_10__.g)(portal)}portals/${portal.id}/isServiceNameAvailable`, {
            name: title.replace(/\s/g, "_"),
            type: publishedItemType
        });
        if (!(response === null || response === void 0 ? void 0 : response.available)) {
            return {
                code: "titleInUseService",
                layerName: title
            };
        }
    }
    return null;
}
async function fetchTags(user) {
    user !== null && user !== void 0 ? user : (user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.user);
    // PortalUser type doesn't include url but it's definitely a thing
    // @ts-ignore
    const tagsUrl = user.url + "/tags";
    try {
        const tagsResponse = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_10__.r)(tagsUrl);
        return tagsResponse.tags;
    }
    catch (error) {
        console.error(error);
    }
}

const arcgisTagsPickerCss = ".label{margin-top:0px;margin-bottom:0px;font-weight:var(--arcgis-label-font-weight, 400)}.screen-reader-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}";

const ArcgisTagsPicker = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisTagsPickerChange = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisTagsPickerChange", 7);
        /** Custom type guard to check if tags need to be re-requested */
        this.isTag = (arg) => arg.tag !== undefined && arg.count !== undefined;
        /** store all the tags that have been rendered through this component in contrast to the ones added directly by calcite-combobox */
        this.controlledTags = [];
        this.mapItemValue = (items) => {
            return items.map((item) => item.value);
        };
        this.handleKeydown = (e) => {
            var _a;
            // If user typed a comma, treat as enter.
            // TODO: remove after calcite enables comma support (https://github.com/Esri/calcite-components/issues/4672)
            if (e.key === ",") {
                const target = e.target;
                const input = (_a = target === null || target === void 0 ? void 0 : target.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector("input");
                if (input === null || input === void 0 ? void 0 : input.value) {
                    e.preventDefault();
                    const existing = target.querySelector(`calcite-combobox-item[value="${input.value}"]`);
                    if (existing) {
                        existing.selected = true;
                    }
                    else {
                        const item = document.createElement("calcite-combobox-item");
                        item.value = input.value;
                        item.textLabel = input.value;
                        item.selected = true;
                        target === null || target === void 0 ? void 0 : target.appendChild(item);
                    }
                    input.value = "";
                }
            }
        };
        this.api = undefined;
        this.user = undefined;
        this.scale = undefined;
        this.activeTags = undefined;
        this.knownTags = [];
        this.label = undefined;
        this.placeholder = undefined;
        this.hideLabel = undefined;
    }
    async componentWillLoad() {
        var _a, _b, _c, _d, _e, _f;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.el);
        this.i18n = locale[0];
        // Fall back to config if no props passed in
        (_a = this.user) !== null && _a !== void 0 ? _a : (this.user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.user);
        (_b = this.scale) !== null && _b !== void 0 ? _b : (this.scale = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.scale);
        (_c = this.api) !== null && _c !== void 0 ? _c : (this.api = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.api);
        (_d = this.activeTags) !== null && _d !== void 0 ? _d : (this.activeTags = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.tags);
        this.activeTags = (0,_functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_9__.f)(this.activeTags);
        // Build initial tags list from existing tags and ones pre-set by the consuming app
        this.knownTags = (0,_functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_9__.f)([...((_e = this.knownTags) !== null && _e !== void 0 ? _e : []), ...((_f = this.activeTags) !== null && _f !== void 0 ? _f : [])]);
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.a.on("reset", () => {
            this.activeTags = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.tags;
        });
    }
    async componentDidLoad() {
        var _a, _b, _c;
        const { user } = this;
        if (user) {
            const userTags = (_a = user.contentTags) !== null && _a !== void 0 ? _a : user.tags;
            if (!(userTags === null || userTags === void 0 ? void 0 : userTags.length) || ((userTags === null || userTags === void 0 ? void 0 : userTags.length) > 0 && !this.isTag(userTags[0]))) {
                this.knownTags = [...this.knownTags, ...(await fetchTags(user)).map((tag) => tag.tag)];
            }
            else {
                this.knownTags = [...this.knownTags, ...userTags.map((tag) => tag.tag)];
            }
            this.knownTags = (0,_functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_9__.f)([...((_b = this.activeTags) !== null && _b !== void 0 ? _b : []), ...((_c = this.knownTags) !== null && _c !== void 0 ? _c : [])]);
        }
    }
    itemPropertiesTagsChangeHandler(event) {
        var _a;
        event.stopPropagation();
        const values = ((_a = this.combobox) === null || _a === void 0 ? void 0 : _a.value) || [];
        const tags = Array.isArray(values) ? values : [values];
        this.arcgisTagsPickerChange.emit((0,_functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_9__.f)(tags));
        const knownItems = Array.from(this.combobox.children);
        const activeItems = this.combobox.selectedItems;
        knownItems.forEach((item) => {
            const hasBeenAdded = this.controlledTags.includes(item.value);
            // remove any combobox-item that is not yet part of the controlled list of tags
            if (!hasBeenAdded) {
                item.remove();
            }
        });
        this.knownTags = this.mapItemValue(knownItems);
        this.activeTags = this.mapItemValue(activeItems);
    }
    renderFormattedTags() {
        const { i18n, scale, handleKeydown, placeholder } = this;
        this.knownTags.forEach((tag) => {
            if (this.controlledTags.includes(tag)) {
                return;
            }
            this.controlledTags.push(tag);
        });
        const tagElements = this.knownTags.map((tag) => {
            var _a;
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-combobox-item", { key: tag, value: tag, textLabel: tag.length > 36 ? `${tag.slice(0, 36)}...` : tag, selected: ((_a = this.activeTags) === null || _a === void 0 ? void 0 : _a.indexOf(tag)) >= 0 }));
        });
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-combobox", { label: i18n.tags, maxItems: 5, "allow-custom-values": true, placeholder: placeholder !== null && placeholder !== void 0 ? placeholder : i18n.addTags, scale: scale, onKeyDown: handleKeydown, ref: (el) => (this.combobox = el) }, tagElements));
    }
    async setFocus() {
        var _a;
        (_a = this.combobox) === null || _a === void 0 ? void 0 : _a.setFocus();
    }
    render() {
        const { i18n, scale, hideLabel, label } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { scale: scale }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: { label: true, "screen-reader-only": hideLabel } }, label !== null && label !== void 0 ? label : i18n.tags), this.renderFormattedTags()));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisTagsPicker.style = arcgisTagsPickerCss;

const arcgisTitleInputCss = ".label{margin-top:0px;margin-bottom:0px;font-weight:var(--arcgis-label-font-weight, 400)}calcite-input{--calcite-color-border-1:var(--calcite-color-border-input)}";

const ArcgisTitleInput = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisTitleInputChange = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisTitleInputChange", 7);
        this.debouncedInput = (0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_4__.d)(() => {
            return this.handleTitleValidation();
        }, 400);
        this.api = undefined;
        this.portal = undefined;
        this.user = undefined;
        this.scale = undefined;
        this.label = undefined;
        this.itemTitle = undefined;
        this.currentFolder = undefined;
        this.type = undefined;
        this.update = false;
        this.enablePublishing = undefined;
        this.titleError = undefined;
    }
    async focusMainInput() {
        var _a, _b;
        // arcgis-workflow TODO: mainInputRef is an empty object when publish item properties' test calls validate
        (_b = (_a = this.mainInputRef).setFocus) === null || _b === void 0 ? void 0 : _b.call(_a);
    }
    async validateTitle() {
        // Check which situations should be flushed instead of invoked - might need to introduce something to catch "modified since last validate"
        return this.debouncedInput.invoke();
        // TODO: Refer to the below snippet if there's a timing issue found always invoking
        // We want to invoke to trigger the empty title error so it always get triggered
        // return !this.itemTitle ? this.debouncedInput.invoke() : this.debouncedInput.flush();
    }
    async handleTitleValidation() {
        const { type, itemTitle, enablePublishing, portal, user, update } = this;
        const { extension } = (0,_file_bf8ab90f_js__WEBPACK_IMPORTED_MODULE_11__.a)(itemTitle);
        if (!type) {
            console.error("No item type found. Skipping title validation");
            return;
        }
        this.titleError = await validateTitle({
            portal,
            user,
            title: itemTitle,
            itemType: type,
            folder: this.currentFolder,
            extension,
            enablePublishing,
            update
        });
        return this.getErrorMessage();
    }
    getErrorMessage() {
        const { itemTitle, titleError, i18n } = this;
        if (!itemTitle) {
            this.titleError = {
                code: "titleRequired",
                translatedMessage: this.i18n.validation.titleRequired
            };
        }
        if (!!titleError) {
            titleError.translatedMessage = i18n.validation[this.titleError.code].replace("${name}", itemTitle);
        }
        return titleError;
    }
    async componentWillLoad() {
        var _a, _b, _c, _d, _e, _f, _g;
        const locale = await (0,_locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.el);
        this.i18n = locale[0];
        // Fall back to config if no props passed
        (_a = this.portal) !== null && _a !== void 0 ? _a : (this.portal = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.portal);
        (_b = this.user) !== null && _b !== void 0 ? _b : (this.user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.user);
        (_c = this.scale) !== null && _c !== void 0 ? _c : (this.scale = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.scale);
        (_d = this.api) !== null && _d !== void 0 ? _d : (this.api = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_3__.c.api);
        (_e = this.type) !== null && _e !== void 0 ? _e : (this.type = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.type);
        (_f = this.itemTitle) !== null && _f !== void 0 ? _f : (this.itemTitle = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.title);
        (_g = this.currentFolder) !== null && _g !== void 0 ? _g : (this.currentFolder = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.folder);
        this.itemTitle && this.handleTitleValidation();
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.title = this.itemTitle;
        // arcgis-workflow TODO: re-initializing local state on store reset is not compatible with tests
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.a.on("reset", () => {
            this.itemTitle = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.title;
        });
    }
    render() {
        var _a;
        const { i18n, itemTitle, scale } = this;
        const { translatedMessage, code } = this.titleError || {};
        const valid = !translatedMessage;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { scale: scale }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "label" }, (_a = this.label) !== null && _a !== void 0 ? _a : i18n.title), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "item-properties-title", placeholder: i18n.addTitle, value: itemTitle, scale: scale, onInput: this.debouncedInput, max: MAX_TITLE_LENGTH, ref: (ele) => (this.mainInputRef = ele), status: valid ? "idle" : "invalid", onCalciteInputInput: (event) => {
                event.stopPropagation();
                this.itemTitle = event.target.value;
                this.arcgisTitleInputChange.emit(this.itemTitle);
            } }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, hidden: valid, status: valid ? "idle" : "invalid" }, translatedMessage || i18n[code] || i18n.title)));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
    static get watchers() { return {
        "currentFolder": ["handleTitleValidation"]
    }; }
};
ArcgisTitleInput.style = arcgisTitleInputCss;



//# sourceMappingURL=arcgis-categories-picker_6.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/categories-9f0f37ee.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/categories-9f0f37ee.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ fetchLivingAtlasCategories),
/* harmony export */   b: () => (/* binding */ fetchGroupCategories),
/* harmony export */   f: () => (/* binding */ fetchCategories),
/* harmony export */   g: () => (/* binding */ getItemCategorySchema),
/* harmony export */   u: () => (/* binding */ updateCategories)
/* harmony export */ });
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _group_6a6303b0_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./group-6a6303b0.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/group-6a6303b0.js");
/* harmony import */ var _privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./privileges-5c382f61.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */





const getItemCategorySchema = async ({ portal, user, group, useCache = false }) => {
    var _a;
    try {
        const fetchResult = await (group
            ? fetchGroupCategories(group.id, portal, useCache)
            : fetchCategories(portal, user, useCache));
        return { result: (_a = fetchResult === null || fetchResult === void 0 ? void 0 : fetchResult.categorySchema) !== null && _a !== void 0 ? _a : null };
    }
    catch (error) {
        console.error(error);
        return { error: { code: "unhandledError" } };
    }
};
async function fetchCategories(portal, user, useCache = true) {
    portal !== null && portal !== void 0 ? portal : (portal = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal);
    user !== null && user !== void 0 ? user : (user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user);
    if (!(portal === null || portal === void 0 ? void 0 : portal.id) || (user && (0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_3__.a)(user))) {
        return null;
    }
    const getSchema = () => (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal)}portals/${portal.id}/categorySchema`);
    return useCache ? (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.f)(getSchema, "categorySchema", portal.id) : getSchema();
}
async function fetchGroupCategories(groupId, portal, useCache = true) {
    portal !== null && portal !== void 0 ? portal : (portal = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === null || _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === void 0 ? void 0 : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal);
    if (!groupId || !portal) {
        return null;
    }
    const getSchema = () => (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(0,_group_6a6303b0_js__WEBPACK_IMPORTED_MODULE_2__.g)(portal, { id: groupId })}categorySchema`);
    return useCache ? (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.f)(getSchema, "categorySchema", groupId) : getSchema();
}
async function fetchLivingAtlasSchema(portal, categoryName) {
    var _a;
    const base = (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal);
    const self = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${base}portals/self`);
    const groupSearch = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${base}community/groups?q=${self.contentCategorySetsGroupQuery}`);
    const categoryGroup = (_a = groupSearch === null || groupSearch === void 0 ? void 0 : groupSearch.results) === null || _a === void 0 ? void 0 : _a[0];
    const schemaItemSearch = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${base}content/groups/${categoryGroup.id}/search`, {
        q: `typekeywords: ${categoryName}`
    });
    const schemaItem = schemaItemSearch.results[0];
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${base}content/items/${schemaItem.id}/data`);
}
async function fetchLivingAtlasCategories(portal, categoryName, useCache = true) {
    const getSchema = () => fetchLivingAtlasSchema(portal, categoryName);
    return useCache ? (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.f)(getSchema, "categorySchema", categoryName) : getSchema();
}
async function updateCategories({ categories, itemIds, portal }) {
    try {
        const url = `${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal)}/content/updateItems`;
        const items = JSON.stringify(itemIds.map((id) => {
            return {
                [id]: { categories: Array.isArray(categories) ? categories : categories[id] }
            };
        }));
        return { result: await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, { items }, {}, "post") };
    }
    catch (error) {
        console.error(error);
        return { error: { code: "unhandledError" } };
    }
}



//# sourceMappingURL=categories-9f0f37ee.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/categories-ca134005.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/categories-ca134005.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CATEGORY_BASE_PATH),
/* harmony export */   U: () => (/* binding */ UPPER_CATEGORY_BASE_PATH),
/* harmony export */   a: () => (/* binding */ getCategoryUIPath),
/* harmony export */   g: () => (/* binding */ getRootCategoryPath)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */
const CATEGORY_BASE_PATH = "/categories";
const UPPER_CATEGORY_BASE_PATH = "/Categories";

// TODO: add unit tests
/**
 * Construct the path of the category based on the parent path and the category title
 */
const getCategoryUIPath = (parentPath, category, lowerCase = true) => {
    const basePath = parentPath !== null && parentPath !== void 0 ? parentPath : "";
    return `${basePath}${basePath.endsWith("/") ? "" : "/"}${lowerCase ? category.title.toLocaleLowerCase() : category.title}`;
};
/**
 * Find the root node title to use for categories
 */
function getRootCategoryPath(categories) {
    var _a;
    let categoryTitle = (_a = categories === null || categories === void 0 ? void 0 : categories[0]) === null || _a === void 0 ? void 0 : _a.title;
    if (categoryTitle && categoryTitle.charAt(0) !== "/") {
        categoryTitle = `/${categoryTitle}`;
    }
    return categoryTitle || UPPER_CATEGORY_BASE_PATH;
}



//# sourceMappingURL=categories-ca134005.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-bf8ab90f.js":
/*!**********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-bf8ab90f.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ sanitizeFileName),
/* harmony export */   f: () => (/* binding */ formatFileSize),
/* harmony export */   g: () => (/* binding */ getItemInfoByType),
/* harmony export */   s: () => (/* binding */ sanitizeFileInput),
/* harmony export */   v: () => (/* binding */ validateOverwriteFileName)
/* harmony export */ });
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/* harmony import */ var _guid_aeaed84d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guid-aeaed84d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-aeaed84d.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */



function sanitizeFileName(name, addGUID) {
    //TODO: add new param to spec file.
    const expression = /(?:\.([^.]+))?$/;
    const invalidTitleCharacters = /\.|-/g;
    let fileName = name.replace(/^.*(\\|\/|:)/, "");
    let extension = (fileName && expression.exec(fileName)[1] ? expression.exec(fileName)[1].toLowerCase() : "");
    let title = "";
    if (fileName.indexOf(".rft.") > -1) {
        const [name, suffix] = fileName.split(".rft.");
        extension = `rft.${suffix}`;
        title = name;
    }
    if (fileName && !title) {
        title = fileName.lastIndexOf(".") === -1 ? fileName : fileName.substring(0, fileName.lastIndexOf("."));
    }
    // Replace any invalid characters with an underscore
    title = title.replace(invalidTitleCharacters, "_");
    // Allow file upload of existing item's file name // currently used in append
    if (addGUID) {
        title = makeUniqueFileName(title);
        fileName = `${title}.${extension}`;
    }
    return { title, fileName, extension };
}
// Helper method that takes in a file & returns the cleaned up file name as is and in title form, and the detected file extension
function sanitizeFileInput(file, addGUID) {
    return sanitizeFileName(file.name, !!addGUID);
}
function makeUniqueFileName(name) {
    return `${name}_${(0,_guid_aeaed84d_js__WEBPACK_IMPORTED_MODULE_1__.g)()}`;
}
function validateOverwriteFileName(uploadedFileName, sourceFileName) {
    let fileName = uploadedFileName;
    const position = uploadedFileName.lastIndexOf("\\");
    if (position > -1) {
        fileName = fileName.substring(position + 1, fileName.length);
    }
    return fileName.replace(/\ /g, "_") === sourceFileName.replace(/\ /g, "_");
}
function getItemInfoByType(type) {
    if (_item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_0__.a[type]) {
        return _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_0__.a[type];
    }
    else {
        return _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_0__.a[Object.keys(_item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_0__.a).find((fileType) => _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_0__.a[fileType].type === type)];
    }
}
function formatFileSize(size) {
    if (!size) {
        return "0 B";
    }
    const i = Math.floor(Math.log(size) / Math.log(1024));
    const adjustedSize = Math.round(size / Math.pow(1024, i));
    const unit = ["B", "KB", "MB", "GB", "TB"][i];
    return `${adjustedSize} ${unit}`;
}



//# sourceMappingURL=file-bf8ab90f.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/group-6a6303b0.js":
/*!***********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/group-6a6303b0.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: () => (/* binding */ getGroupRestBaseUrl)
/* harmony export */ });
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */



const getGroupRestBaseUrl = (portal, group) => (0,_url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_1__.a)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal)}/community/groups/${group.id}`);



//# sourceMappingURL=group-6a6303b0.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-aeaed84d.js":
/*!**********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-aeaed84d.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: () => (/* binding */ guid)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */
function generateId(counts) {
    return counts
        .map((count) => {
        let out = "";
        for (let i = 0; i < count; i++) {
            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }
        return out;
    })
        .join("-");
}
const guid = () => generateId([2, 1, 1, 1, 3]);



//# sourceMappingURL=guid-aeaed84d.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js":
/*!******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CSS_UTILITY),
/* harmony export */   a: () => (/* binding */ formatDate),
/* harmony export */   b: () => (/* binding */ formatPlural),
/* harmony export */   f: () => (/* binding */ formatNumber),
/* harmony export */   g: () => (/* binding */ getElementDir),
/* harmony export */   l: () => (/* binding */ languageMap)
/* harmony export */ });
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */



const languageMap = new Map([
    ["ar", "ar"],
    ["bg", "bg"],
    ["bs", "bs"],
    ["ca", "ca"],
    ["cs", "cs"],
    ["da", "da"],
    ["de", "de"],
    ["el", "el"],
    ["en", "en"],
    ["es", "es"],
    ["et", "et"],
    ["fi", "fi"],
    ["fr", "fr"],
    ["he", "he"],
    ["hr", "hr"],
    ["hu", "hu"],
    ["id", "id"],
    ["it", "it"],
    ["ja", "ja"],
    ["ko", "ko"],
    ["lt", "lt"],
    ["lv", "lv"],
    ["nb", "nb"],
    ["nl", "nl"],
    ["pl", "pl"],
    ["pt-br", "pt-BR"],
    ["pt-pt", "pt-PT"],
    ["ro", "ro"],
    ["ru", "ru"],
    ["sk", "sk"],
    ["sl", "sl"],
    ["sr", "sr"],
    ["sv", "sv"],
    ["th", "th"],
    ["tr", "tr"],
    ["uk", "uk"],
    ["vi", "vi"],
    ["zh-cn", "zh-CN"],
    ["zh-hk", "zh-HK"],
    ["zh-tw", "zh-TW"]
]);
// rtl
function getElementDir(el) {
    return getElementProp(el, "dir", "ltr");
}
function getElementProp(el, prop, value) {
    const closestWithProp = (0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_1__.c)(el, `[${prop}]`);
    return closestWithProp ? closestWithProp.getAttribute(prop) : value;
}
// css
const CSS_UTILITY = {
    rtl: "arcgis--rtl"
};
async function formatNumber(number, options) {
    const { api, type, places } = options || {};
    if (api === 4) {
        const [intl] = await (0,_loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_0__.l)(["esri/intl"]);
        const numberFormatIntlOptions = intl.convertNumberFormatToIntlOptions({
            places,
            style: type,
            digitSeparator: true
        });
        return intl.formatNumber(number, Object.assign(Object.assign({}, numberFormatIntlOptions), { style: type }));
    }
    const [dojoNumber] = await (0,_loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_0__.l)(["dojo/number"]);
    return dojoNumber.format(number, {
        type,
        places,
        pattern: options === null || options === void 0 ? void 0 : options.pattern
    });
}
const cache = {};
function formatDate(date) {
    const lang = document.documentElement.lang;
    const dayShortMonthYear = {
        year: "numeric",
        month: "short",
        day: "numeric"
    };
    if (!cache[lang]) {
        cache[lang] = new Intl.DateTimeFormat(document.documentElement.lang, dayShortMonthYear);
    }
    return cache[lang].format(date);
}
function formatPlural(lang, stringObj, number) {
    const singles = ["id", "ja", "ko", "th", "vi", "zh-cn", "zh-hk", "zh-tw"];
    const likeEnglish = [
        "en",
        "ca",
        "da",
        "de",
        "el",
        "es",
        "et",
        "fi",
        "hi",
        "hu",
        "it",
        "nb",
        "nl",
        "pt-pt",
        "sv",
        "tr"
    ];
    const locale = lang !== null && lang !== void 0 ? lang : "en";
    // if the number is one, or it is a "simple" language, return the 1 string
    if (number === 1 || singles.includes(locale)) {
        return stringObj.single.replace("${number}", "1");
    }
    // if the number is not 1 and the language uses the same pluralization strategy as english,
    // return the multiple string
    if (number !== 1 && likeEnglish.includes(locale)) {
        return stringObj.multiple.replace("${number}", `${number}`);
    }
    // if none of the above worked, return the "unknown" string
    return stringObj.unknown.replace("${number}", `${number}`);
}



//# sourceMappingURL=languageUtil-ef0e54b2.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ getComponentClosestLanguage),
/* harmony export */   g: () => (/* binding */ getLocaleComponentStrings)
/* harmony export */ });
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./languageUtil-ef0e54b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js");
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */




// https://medium.com/stencil-tricks/implementing-internationalisation-i18n-with-stencil-5e6559554117
function getComponentClosestLanguage(element) {
    var _a, _b, _c;
    const closestElement = (_a = (0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
    // language set by the calling application or browser. defaults to english.
    const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
    if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
        return _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
    }
    else {
        // "ru-RU" maps to "ru" use case
        if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
            return _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang.slice(0, 2));
        }
        else {
            return "en";
        }
    }
}
function getComponentClosestLanguageIntl(element) {
    var _a, _b, _c;
    // it's OK if we don't have the 4 letter language file for it
    // 4 letter language code needed for formatting numbers
    const closestElement = (_a = (0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
    // language set by the calling application or browser. defaults to english.
    const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
    if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
        return _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
    }
    else {
        if (_languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
            // we support the 2 letter coded language
            // e.g. it-CH vs it
            return lang;
        }
        else {
            return "en";
        }
    }
}
function fetchLocaleStringsForComponent(componentName, locale) {
    return new Promise((resolve, reject) => {
        fetch((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_2__.a)(`../arcgis-app-assets/i18n/${componentName}.i18n.${locale}.json`)).then((result) => {
            if (result.ok)
                resolve(result.json());
            else
                reject();
        }, () => reject());
    });
}
const stringCache = {};
function fetchLocaleStringsFromCache(componentName, locale) {
    const id = `${componentName}${locale}`;
    if (!stringCache[id]) {
        stringCache[id] = fetchLocaleStringsForComponent(componentName, locale);
    }
    return stringCache[id];
}
/**
 * Get strings and language codes.
 * This method returns 2 language codes.
 * The first one returns a code that's also supported as a language file.
 * The second one returns a code where there is support for the first 2 letters of the code as part of a language file,
 * but will return the original 4 letter code from the page.
 * E.g. For "it-ch" it will return "it" as the first language code and "it-ch" as the second.
 * The second one is required for esri.intl.setLocale() to get the correct formatting.
 *
 * If a tagName is provided it will overwite the element's tagName
 *
 *  @return [ strings, first language code, second language code]
 */
async function getLocaleComponentStrings(element, tagName) {
    const componentName = tagName || element.tagName.toLowerCase();
    const componentLanguage = getComponentClosestLanguage(element);
    const componentLanguageIntl = getComponentClosestLanguageIntl(element);
    let strings;
    try {
        strings = await fetchLocaleStringsFromCache(componentName, componentLanguage);
    }
    catch (e) {
        console.warn(`no locale for ${componentName} (${componentLanguage}) loading default locale en.`);
        strings = await fetchLocaleStringsFromCache(componentName, "en");
    }
    return [strings, componentLanguage, componentLanguageIntl];
}



//# sourceMappingURL=locale-050b6db9.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ isPublicUser),
/* harmony export */   b: () => (/* binding */ isOrgAdmin),
/* harmony export */   c: () => (/* binding */ isHostedPortal),
/* harmony export */   d: () => (/* binding */ isCustomRole),
/* harmony export */   e: () => (/* binding */ canUpdateOrgGroups),
/* harmony export */   f: () => (/* binding */ canUpdateItemCategories),
/* harmony export */   g: () => (/* binding */ canManageCollaborations),
/* harmony export */   h: () => (/* binding */ isOrgUser),
/* harmony export */   i: () => (/* binding */ isDeveloper),
/* harmony export */   j: () => (/* binding */ canShareItemToGroup),
/* harmony export */   k: () => (/* binding */ canShareItemToOrg),
/* harmony export */   l: () => (/* binding */ adminCanShareOthersItemToGroup),
/* harmony export */   m: () => (/* binding */ canShareOthersItemsToOrg),
/* harmony export */   n: () => (/* binding */ canShareItemToPublic),
/* harmony export */   o: () => (/* binding */ canShareOthersItemsToPublic),
/* harmony export */   p: () => (/* binding */ hasAdminSharePrivilege),
/* harmony export */   q: () => (/* binding */ canViewOthersOrgItems)
/* harmony export */ });
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


const getUserRole = (user) => {
    var _a, _b, _c;
    return typeof (user === null || user === void 0 ? void 0 : user.role) === "string" && !!(user === null || user === void 0 ? void 0 : user.role)
        ? user === null || user === void 0 ? void 0 : user.role
        : (_b = (_a = user === null || user === void 0 ? void 0 : user.roleId) !== null && _a !== void 0 ? _a : user === null || user === void 0 ? void 0 : user.id) !== null && _b !== void 0 ? _b : (_c = user === null || user === void 0 ? void 0 : user.sourceJSON) === null || _c === void 0 ? void 0 : _c.id;
};
function isPublicUser(user) {
    return user && !user.orgId;
}
function isHostedPortal(portal) {
    return !portal.isPortal || !!portal.isBackedBySDS;
}
function isDeveloper(subscriptionInfo) {
    const devSubscriptionTypes = ["Trial Developer", "Developer", "Developer Subscription"];
    return devSubscriptionTypes.includes(subscriptionInfo === null || subscriptionInfo === void 0 ? void 0 : subscriptionInfo.type);
}
function isOrgAdmin(user) {
    return getUserRole(user) === "org_admin" || getUserRole(user) === "account_admin";
}
function isOrgUser(user) {
    return getUserRole(user) === "org_user" || getUserRole(user) === "account_user";
}
function isCustomRole(user) {
    // The Home App collapse the `roleId` and `role` into a single `id` property, that's why
    //  https://devtopia.esri.com/WebGIS/arcgis-portal-app/blob/master/src/js/arcgisonline/sharing/dijit/Role.ts#L469 works
    // In practice, we only need to check if `roleId` exist
    //  https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/44682#issuecomment-4146866
    return !!(user === null || user === void 0 ? void 0 : user.roleId) && user.roleId.length > 0;
}
/**
 * Checks whether the privilege "portal:admin:updateItemCategorySchema" is granted.
 */
function canUpdateItemCategories(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:updateItemCategorySchema"));
}
/**
 * Checks whether the privilege "portal:admin:updateGroups" is granted.
 */
function canUpdateOrgGroups(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:updateGroups"));
}
/**
 * Checks whether the user is allowed to update other user's items in their organization.
 */
function canUpdateOrgItems(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:updateItems");
}
/**
 * Checks to ensure the portal is an organization portal
 */
function isOrgPortal(portal) {
    return !!(portal.urlKey && portal.customBaseUrl) || !!portal.isPortal;
}
/**
 * Checks whether the user is allowed to share their item to groups
 */
function canShareItemToGroup(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:user:shareToGroup");
}
/**
 * Checks whether the user can share an item on a given portal
 */
function canShare(user, portal) {
    return (!isOrgPortal(portal) ||
        canShareItemToGroup(user) ||
        canShareItemToOrg(user) ||
        (!!portal.canSharePublic && canShareItemToPublic(user)));
}
/**
 * Checks whether the user is allowed to share their item ot the organization.
 */
function canShareItemToOrg(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:user:shareToOrg");
}
/**
 * Checks whether the user is allowed to share their item to public
 */
function canShareItemToPublic(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:user:shareToPublic");
}
/**
 * Checks whether the user can share other user's items
 */
function canShareOthersItemsToOrg(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:shareToOrg");
}
/**
 * Checks whether the user can share other user's items
 */
function canShareOthersItemsToPublic(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:shareToPublic");
}
/**
 * Checks whether the user can share other user's items
 */
function adminCanShareOthersItemToGroup(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:shareToGroup");
}
/**
 * Checks whether the user is in an allowed organization and has the power to manage collaborations
 */
function canManageCollaborations(config, user, portal, subscriptionInfo) {
    const excludedOrgTypes = ["Trial", "Trial Press", "Trial Developer", "Developer Subscription", "Evaluation"];
    const isValidOrgType = subscriptionInfo && !excludedOrgTypes.includes(subscriptionInfo.type);
    const hasPrivilege = ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:manageCollaborations");
    return !!((config === null || config === void 0 ? void 0 : config.collaborationsEnabled) &&
        user &&
        (isOrgAdmin(user) || hasPrivilege) &&
        ((portal === null || portal === void 0 ? void 0 : portal.isPortal) || isValidOrgType));
}
/**
 * Checks whether the user can view other organization users' items
 */
function canViewOrgItems(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:viewItems");
}
/**
 * Checks whether the user can view other organization users' items
 */
function canViewOthersOrgItems(user) {
    return !!user && (!isCustomRole(user) || (isCustomRole(user) && canViewOrgItems(user)));
}
// TODO: add unit tests
const hasAdminSharePrivilege = ({ items, user, portal }) => {
    const item = items[0];
    // enterprise incorrectly returns items owned by "esri_" as item control admin (WebGIS/arcgis-portal-app#38695)
    const owner = item.owner;
    const whitelistOwner = ["esri_livingatlas"];
    if (portal.isPortal && owner !== user.username && owner.includes("esri_") && !whitelistOwner.includes(owner)) {
        return false;
    }
    const isOwnerOrAdmin = (0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__.u)(item, user);
    const isCustom = isCustomRole(user);
    const canShareOrgItems = canShareOthersItems(user);
    const canUpdateAndShare = (0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__.c)(item, user) &&
        canUpdateOrgItems(user) &&
        !isCustom &&
        (canShare(user, portal) || canShareOthersItems(user));
    // if it's the item owner or admin, or custom admin who can share
    return isOwnerOrAdmin || canUpdateAndShare || ((0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__.d)(items, user) && canShareOrgItems);
};
/**
 * Checks whether the user can share other user's items
 */
function canShareOthersItems(user) {
    return adminCanShareOthersItemToGroup(user) || canShareOthersItemsToOrg(user) || canShareOthersItemsToPublic(user);
}



//# sourceMappingURL=privileges-5c382f61.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js":
/*!**********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ getFolderFromId),
/* harmony export */   b: () => (/* binding */ getHomeFolderForUser),
/* harmony export */   c: () => (/* binding */ createFolder),
/* harmony export */   d: () => (/* binding */ getSignedInUsersGroups),
/* harmony export */   e: () => (/* binding */ getSignedInUsersFavoritesGroup),
/* harmony export */   f: () => (/* binding */ fetchUser),
/* harmony export */   g: () => (/* binding */ getFolders),
/* harmony export */   u: () => (/* binding */ updateFolder)
/* harmony export */ });
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */



async function fetchUser(username, portal) {
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal)}/community/users/${username}`);
}
async function fetchSelf() {
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)()}/community/self`);
}
async function getSignedInUsersGroups() {
    var _a;
    const user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === null || _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === void 0 ? void 0 : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user;
    if (!user) {
        return [];
    }
    const self = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.f)(() => fetchSelf(), "communitySelf", user.username);
    return (_a = self === null || self === void 0 ? void 0 : self.groups) !== null && _a !== void 0 ? _a : [];
}
async function getSignedInUsersFavoritesGroup() {
    const user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === null || _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c === void 0 ? void 0 : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user;
    if (!user) {
        return null;
    }
    const self = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.f)(() => fetchSelf(), "communitySelf", user.username);
    return self.favGroupId;
}
function getUserContentUrl(user, portal) {
    var _a;
    return (_a = user === null || user === void 0 ? void 0 : user.userContentUrl) !== null && _a !== void 0 ? _a : `${portal === null || portal === void 0 ? void 0 : portal.restUrl}/content/users/${user.username}`;
}
async function getUserContent(portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const portal = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal;
    const url = getUserContentUrl(user, portal);
    const response = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, { num: 1 });
    return Promise.resolve(response);
}
async function getFolders(portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const { folders } = await getUserContent(user);
    const { username } = user;
    const sortedFolders = folders.sort((a, b) => a.title.localeCompare(b.title));
    // add the home folder as if it's in the list
    return [{ username, id: username, title: username, created: "now" }, ...sortedFolders];
}
async function getFolderFromId(folderId, portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const folders = await getFolders(user);
    return folders.find((folder) => folder.id === folderId);
}
function getHomeFolderForUser(username) {
    return { username, id: username, title: username, created: "now" };
}
async function createFolder(folderName, portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const url = `${getUserContentUrl(user, _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal)}/createFolder`;
    const folderResponse = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, { title: folderName }, {}, "post");
    return folderResponse;
}
async function updateFolder(id, newTitle, portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const url = `${getUserContentUrl(user, _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal)}/${id}/updateFolder`;
    try {
        const result = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, { newTitle }, {}, "post");
        return { result };
    }
    catch (error) {
        return { error: { code: "unhandledError" } };
    }
}



//# sourceMappingURL=user-3ea69c3a.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,