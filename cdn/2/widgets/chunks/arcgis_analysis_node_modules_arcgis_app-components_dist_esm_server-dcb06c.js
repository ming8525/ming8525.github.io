"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_server-dcb06c"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js":
/*!**************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ addItemState),
/* harmony export */   b: () => (/* binding */ addItemUrlState),
/* harmony export */   c: () => (/* binding */ addItemRequestState),
/* harmony export */   d: () => (/* binding */ addItemStore)
/* harmony export */ });
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


const addItemStore = (0,_index_05956cab_js__WEBPACK_IMPORTED_MODULE_0__.c)({
    typeKeywords: [],
    customParameters: [],
    analyzedLocationTypes: [],
    allowStoredAuth: true,
    isSecured: null,
    checkAuth: false
});
// Entire add item state object
const addItemState = addItemStore.state;
// Subsets of add item state
const addItemRequestState = addItemStore.state;
const addItemUrlState = addItemStore.state;



//# sourceMappingURL=add-item-dbbe2f57.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-81373f6d.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-81373f6d.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ formatFileName),
/* harmony export */   f: () => (/* binding */ formatTags),
/* harmony export */   s: () => (/* binding */ streamPromises)
/* harmony export */ });
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


const formatFileName = (title) => (title === null || title === void 0 ? void 0 : title.replace(/(\s+|:)/g, "_")) || "";
const formatTags = (tags) => {
    const cleanTags = (tagObj) => {
        return tagObj
            .split(",")
            .map((tag) => tag.trim())
            .filter((tag) => tag);
    };
    if (!tags) {
        return [];
    }
    else if (typeof tags === "string") {
        return (0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_0__.b)(cleanTags(tags));
    }
    else {
        return (0,_functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_0__.b)(tags.flatMap((tag) => {
            return [...cleanTags(tag)];
        }));
    }
};
const resolveOnFirstPromise = async (promiseList) => {
    return new Promise((resolve, reject) => {
        for (let i = 0; i < promiseList.length; i++) {
            promiseList[i]
                .then((result) => {
                const newArr = [...promiseList];
                newArr.splice(i, 1);
                resolve({ remainingPromises: newArr, result });
            })
                .catch(reject);
        }
    });
};
/**
 * Similar to Promise.all but will resolve on the first promise that resolves then continuously swap out the resolved promise with the next promise in the list
 * @param getNextPromise A function that returns the next promise to resolve
 */
async function streamPromises(getNextPromise, options) {
    var _a, _b;
    const results = [];
    const { getBatchSize, onPromiseCompleted, onPromiseThrow, shouldContinue } = options !== null && options !== void 0 ? options : {};
    let remainingPromises = [];
    for (let i = 0; i < ((_a = getBatchSize === null || getBatchSize === void 0 ? void 0 : getBatchSize()) !== null && _a !== void 0 ? _a : 1); i++) {
        try {
            const nextElement = getNextPromise();
            nextElement && remainingPromises.push(nextElement);
        }
        catch (e) {
            onPromiseThrow === null || onPromiseThrow === void 0 ? void 0 : onPromiseThrow(e);
        }
    }
    let lastResult = null;
    while (remainingPromises.length > 0 && (!shouldContinue || shouldContinue(lastResult))) {
        try {
            const { remainingPromises: _remainingPromises, result } = await resolveOnFirstPromise(remainingPromises);
            remainingPromises = _remainingPromises;
            lastResult = result;
            !!result && results.push(result);
            onPromiseCompleted === null || onPromiseCompleted === void 0 ? void 0 : onPromiseCompleted(result);
            // Update batch size after the new result is bubbled up
            const batchSize = (_b = getBatchSize === null || getBatchSize === void 0 ? void 0 : getBatchSize()) !== null && _b !== void 0 ? _b : 1;
            while (remainingPromises.length < batchSize) {
                const nextElement = getNextPromise();
                nextElement && remainingPromises.push(nextElement);
                if (nextElement == null) {
                    break;
                }
            }
        }
        catch (e) {
            onPromiseThrow === null || onPromiseThrow === void 0 ? void 0 : onPromiseThrow(e);
        }
    }
    return results;
}



//# sourceMappingURL=functional-81373f6d.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js":
/*!**********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ isSubscriber),
/* harmony export */   b: () => (/* binding */ isPremium),
/* harmony export */   c: () => (/* binding */ canUpdateItem),
/* harmony export */   d: () => (/* binding */ itemsBelongToUserOrg),
/* harmony export */   g: () => (/* binding */ getItemHomeAppUrl),
/* harmony export */   i: () => (/* binding */ isOwner),
/* harmony export */   u: () => (/* binding */ userIsItemAdmin)
/* harmony export */ });
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


function isEsri(item) {
    var _a;
    return !!((_a = item.owner) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes("esri"));
}
function isPremium(item) {
    var _a;
    return isEsri(item) && !!((_a = item.typeKeywords) === null || _a === void 0 ? void 0 : _a.includes("Requires Credits"));
}
function isSubscriber(item) {
    var _a;
    return isEsri(item) && !!((_a = item.typeKeywords) === null || _a === void 0 ? void 0 : _a.includes("Requires Subscription"));
}
function isOwner(item, user) {
    return item.owner === user.username;
}
/**
 * Can the user update the item
 */
function canUpdateItem(item, user) {
    return userIsItemAdmin(item, user) || item.itemControl === "update";
}
/**
 * Is the user either an owner or admin of the item
 */
function userIsItemAdmin(item, user) {
    return isOwner(item, user) || isItemAdmin(item, user);
}
/**
 * Does the user have admin capabilities on this item
 */
function isItemAdmin(item, user) {
    var _a;
    // if this flag is already set (probably home app), use it
    if (item.isAdmin != null) {
        return !!item.isAdmin;
    }
    const itemOwner = item.owner;
    const itemControlAdmin = item.itemControl === "admin";
    const esriUsers = ["esri_livingatlas", "esri_demographics", "esri_boundaries"];
    if (((_a = item.portal) === null || _a === void 0 ? void 0 : _a.isPortal) &&
        !isOwner(item, user) &&
        itemControlAdmin &&
        itemOwner.includes("esri_") &&
        // portal incorrectly returns "itemControl="admin" for esri owned items
        !esriUsers.includes(itemOwner)) {
        return false;
    }
    return itemControlAdmin;
}
const itemsBelongToUserOrg = (items, user) => {
    return !!user.orgId && items.every((item) => item.isOrgItem);
};
const getItemHomeAppUrl = (itemId, baseUrl) => `${(0,_url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_0__.a)(baseUrl)}item.html?id=${itemId}`;



//# sourceMappingURL=item-3535552d.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-10491b2e.js":
/*!*********************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-10491b2e.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ itemPropertiesStore),
/* harmony export */   i: () => (/* binding */ itemPropertiesState)
/* harmony export */ });
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


const itemPropertiesStore = (0,_index_05956cab_js__WEBPACK_IMPORTED_MODULE_0__.c)({
    title: "",
    snippet: "",
    tags: [],
    categories: []
});
const itemPropertiesState = itemPropertiesStore.state;



//# sourceMappingURL=item-properties-10491b2e.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-8d384796.js":
/*!*****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-8d384796.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ getItem),
/* harmony export */   b: () => (/* binding */ sendAddItemRequest),
/* harmony export */   c: () => (/* binding */ searchForExistingItemUrlByName),
/* harmony export */   d: () => (/* binding */ deleteItem),
/* harmony export */   e: () => (/* binding */ addThumbnailToItem),
/* harmony export */   f: () => (/* binding */ formatItemProperties),
/* harmony export */   g: () => (/* binding */ getItemUrl),
/* harmony export */   h: () => (/* binding */ getAddItemParameters),
/* harmony export */   i: () => (/* binding */ createForm),
/* harmony export */   j: () => (/* binding */ commitItem),
/* harmony export */   k: () => (/* binding */ getAddItemUrl),
/* harmony export */   l: () => (/* binding */ cancelItem),
/* harmony export */   m: () => (/* binding */ moveItem),
/* harmony export */   n: () => (/* binding */ getItemData),
/* harmony export */   s: () => (/* binding */ searchExistingItem),
/* harmony export */   u: () => (/* binding */ updateItem)
/* harmony export */ });
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/* harmony import */ var _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./item-properties-10491b2e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-10491b2e.js");
/* harmony import */ var _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./add-item-dbbe2f57.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js");
/* harmony import */ var _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ui-bca7bcd1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-bca7bcd1.js");
/* harmony import */ var _functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./functional-81373f6d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-81373f6d.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */









function formatItemProperties({ title, snippet, tags }) {
    return {
        title,
        snippet,
        tags: (0,_functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_6__.f)(tags).join(",")
    };
}
const getAddItemParameters = (itemPropertiesProps, addItemProps) => {
    var _a;
    const { file, type, extension, dataUrl, properties, typeKeywords: extraTypeKeywords } = addItemProps;
    const formattedItemProperties = formatItemProperties(itemPropertiesProps);
    const typeKeywords = [
        ...(_a = _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_7__.a[type]) === null || _a === void 0 ? void 0 : _a.typeKeywords,
        ...(extraTypeKeywords ? [extraTypeKeywords] : []),
        extension
    ].join(", ");
    const baseRequestState = Object.assign({ type, extension }, (properties ? { properties: JSON.stringify(properties) } : {}));
    // We can't just encode URL since url from Drive have Bearer in the encoder will break that
    // https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/41617
    const additionalRequestState = file
        ? { file }
        : { dataUrl: dataUrl.includes(`httpHeaders={"Authorization"`) ? dataUrl : encodeURI(dataUrl) };
    return Object.assign(Object.assign(Object.assign(Object.assign({}, baseRequestState), additionalRequestState), formattedItemProperties), { typeKeywords });
};
const createForm = (formatItemProps, addItemProps) => {
    const formProperties = getAddItemParameters(formatItemProps, addItemProps);
    const addAsUniqueFile = !!addItemProps.addAsUniqueFile;
    const form = new FormData();
    form.append("f", "json");
    form.append("async", "true");
    Object.keys(formProperties).forEach((property) => {
        if (addAsUniqueFile && property === "file") {
            const fileName = addItemProps.fileName;
            form.append(property, formProperties[property], fileName);
        }
        else {
            form.append(property, formProperties[property]);
        }
    });
    return form;
};
function isSpecialFolder(folder) {
    return ["all", "recycle"].includes(folder.id) || folder.id === folder.username;
}
const getAddItemUrl = (user, folder) => {
    const folderUrl = (folder === null || folder === void 0 ? void 0 : folder.id) && !isSpecialFolder(folder) ? `/${folder.id}` : "";
    return `${user.userContentUrl}${folderUrl}/addItem`;
};

const getItemUrl = (itemId, portal) => `${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal)}content/items/${itemId}`;
const getItem = async (itemId, portal) => {
    try {
        const url = getItemUrl(itemId, portal);
        return { result: await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url) };
    }
    catch (error) {
        console.warn("error getting item", error);
        return { error: { code: "unhandledError" } };
    }
};
const addThumbnailToItem = async (itemId, thumbnailInfo) => {
    const formData = new FormData();
    switch (thumbnailInfo.type) {
        case "base64":
            formData.append("data", thumbnailInfo.data);
            break;
        case "url":
            formData.append("url", thumbnailInfo.url);
            break;
        case "file":
            formData.append("file", thumbnailInfo.file);
            break;
    }
    formData.append("f", "json");
    formData.append("token", (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.e)(_config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal));
    return await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.d)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)()}content/users/${_config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user.username}/items/${itemId}/updateThumbnail`, formData, {}, "post");
};
async function moveItem(itemId, folder) {
    const user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user;
    const url = `${user.userContentUrl}/moveItems`;
    return await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, { items: itemId, folder }, {}, "post");
}
async function deleteItem(itemId, { permanentDelete = false } = {}) {
    const user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user;
    const url = `${user.userContentUrl}/items/${itemId}/delete`;
    return await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, { permanentDelete }, {}, "post");
}
async function updateItem(itemId, updateObj, portalUser) {
    var _a;
    const user = (_a = portalUser !== null && portalUser !== void 0 ? portalUser : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user) !== null && _a !== void 0 ? _a : _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.user;
    const userContentUrl = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_5__.u.workflow === "append"
        ? _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_4__.a.existingItem.itemOwner.userContentUrl
        : user.userContentUrl; // TODO: ! Use fetchUser if itemOwner is not available
    const url = `${userContentUrl}/items/${itemId}/update`;
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, updateObj, {}, "post");
}
const getItemData = (itemId, portal) => {
    const url = `${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal)}content/items/${itemId}/data`;
    return (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url);
};
const commitItem = async (itemId, addItemProps) => {
    const user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user;
    const url = `${user.userContentUrl}/items/${itemId}/commit`;
    const form = createForm(_item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_3__.i, addItemProps);
    form.delete("file");
    const response = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.d)(url, form, {}, "post");
    return response;
};
const cancelItem = async (itemId) => {
    const user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user;
    const url = `${user.userContentUrl}/items/${itemId}/cancel`;
    const response = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, {}, {}, "post");
    return response;
};
/** Send processed item to the server */
const sendAddItemRequest = async (item) => {
    const url = getAddItemUrl(_config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user, _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_3__.i.folder);
    const formattedItemProperties = formatItemProperties(_item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_3__.i);
    const isUrlRequestParameters = (item) => item.url && !!item.serviceInfo;
    const requestItem = Object.assign({}, item);
    // Remove redundant properties
    delete requestItem.initialFolders;
    delete requestItem.initialTitle;
    delete requestItem.newItemMode;
    delete requestItem.serviceInfo;
    delete requestItem.allowStoredAuth;
    delete requestItem.isSecured;
    delete requestItem.checkAuth;
    delete requestItem.agsType;
    delete requestItem.developerCredentialsType;
    delete requestItem.applicationEnvironment;
    delete requestItem.apiKeyReferrerUrls;
    delete requestItem.developerCredentialsRedirectUrls;
    delete requestItem.developerPrivileges;
    return await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url, Object.assign(Object.assign(Object.assign(Object.assign({}, requestItem), (isUrlRequestParameters(item) ? { serviceInfo: JSON.stringify(item.serviceInfo) } : {})), { typeKeywords: JSON.stringify(item.typeKeywords) }), formattedItemProperties), {}, "post");
};
async function searchExistingItem(title, type, folder, extension, user, portal) {
    user !== null && user !== void 0 ? user : (user = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user);
    portal !== null && portal !== void 0 ? portal : (portal = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal);
    const folderId = !folder || folder.id === user.username ? "root" : folder.id;
    const basename = title.replace(`.${extension}`, "");
    // TODO: refine this existing item search so it doesn't return a false positive when the same item is found
    // in the case of feature collections, they have a type of Feature Layer,
    // so it will match itself as you're also publishing a feature layer. (#36658)
    // for now we'll just skip this validation in this case
    // Additionally, non-published Excel files are already created and just need to be updated
    // so the existing item found here is the item that needs to be updated
    if (extension === "featurecollection" || type === "Microsoft Excel") {
        return null;
    }
    const queryList = [
        `title: "${basename}"`,
        `type: "${type}"`,
        `owner: "${user.username}"`,
        `ownerfolder: "${folderId}"`
    ];
    const searchResults = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal)}search`, {
        filter: queryList.join(" AND "),
        num: 1
    });
    return (searchResults === null || searchResults === void 0 ? void 0 : searchResults.total) > 0
        ? {
            num: searchResults.num,
            itemURLList: searchResults.results.map((item) => (0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_2__.g)(item.id, _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.config.baseUrl))
        }
        : null;
}
async function searchForExistingItemUrlByName(name, itemType) {
    const nameToCheck = (0,_functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_6__.a)(name);
    const { user, config, portal } = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c;
    const { folder } = _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_3__.i;
    const folderId = !folder || folder.id === user.username ? "root" : folder.id;
    const queryList = [`owner: "${user.username}"`, `ownerfolder: "${folderId}"`];
    if (itemType) {
        queryList.push(`type: "${itemType}"`);
    }
    const MAX_QUERY_ITEM = 100;
    const MAX_RETRY = 10;
    let resultItem;
    let curStart = 1;
    for (let retry = 0; retry < MAX_RETRY && !resultItem && curStart > -1; retry++) {
        const { nextStart, results } = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.g)()}search`, {
            [portal.isPortal ? "q" : "filter"]: queryList.join(" AND "),
            num: MAX_QUERY_ITEM,
            start: curStart
        });
        resultItem = results.find((item) => item.name === nameToCheck);
        curStart = nextStart;
    }
    return resultItem ? (0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_2__.g)(resultItem.id, config.baseUrl) : null;
}



//# sourceMappingURL=server-item-8d384796.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-bca7bcd1.js":
/*!********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-bca7bcd1.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ uiStore),
/* harmony export */   u: () => (/* binding */ uiStoreState)
/* harmony export */ });
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


const uiStore = (0,_index_05956cab_js__WEBPACK_IMPORTED_MODULE_0__.c)({
    nextText: "next",
    workflow: "content",
    scale: "m",
    disableScroll: false,
    featureFlags: {}
});
const uiStoreState = uiStore.state;



//# sourceMappingURL=ui-bca7bcd1.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,