"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-db0a39"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.hr-a6e7746d.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.hr-a6e7746d.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   rfxArgsHelpTexts: () => (/* binding */ rfxArgsHelpTexts)
/* harmony export */ });
const rfxArgsHelpTexts = {
	"@@Abs_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Abs_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Abs_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Abs_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Abs_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Abs_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Abs_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Abs_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Abs_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Abs_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Abs_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Abs_Raster_tag0@@": "Ulazni raster za koji se izračunavaju apsolutne vrijednosti.",
	"@@ACos_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@ACos_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@ACos_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@ACos_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@ACos_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@ACos_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@ACos_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@ACos_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@ACos_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@ACos_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@ACos_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@ACos_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti inverznog kosinusa.",
	"@@ACosH_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@ACosH_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@ACosH_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@ACosH_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@ACosH_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@ACosH_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@ACosH_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@ACosH_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@ACosH_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@ACosH_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@ACosH_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@ACosH_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti inverznog hiperbolnog kosinusa.",
	"@@Apparent-Reflectance_Albedo_tag0@@": "Rezultat funkcije Vidljiva refleksija također se može izraziti kao albedo, a to je postupak dostupne energije reflektirane planetarnom površinom. Podatke albeda obično upotrebljavaju znanstveni korisnici za složeno modeliranje i tehničke aplikacije za daljinsko istraživanje.",
	"@@Apparent-Reflectance_Albedo_tag1@@": "Neoznačeno--Funkcija vraća vrijednosti vidljive refleksije. To je zadano.",
	"@@Apparent-Reflectance_Albedo_tag2@@": "Označeno--Funkcija vraća vrijednosti plutajuće točke od 32 bita, a one su obično u rasponu od 0,0 do 1,0. Ako je ova opcija odabrana ne provodi se rezanje podataka.",
	"@@Apparent-Reflectance_Albedo_tag3@@": "Pošto su za albedo vrsta izlaznih podataka plutajuće točke, morate eksplicitno staviti preferirane <strong>Output Pixel Type</strong> na ili 32-bitni plutajući ili 64-bitni dvostruki. <strong>Output Pixel Type</strong> parametar se može pronaći na <strong>General</strong> kartici u <strong>Apparent Reflectance</strong> raster funkciji. Ako <strong>Output Pixel Type</strong> nije pravilno postavljen za <strong>Albedo</strong> opciju, rezultirajuće vrijednosti će biti nevaljane i dobit će vrijednost od 0.",
	"@@Apparent-Reflectance_Offset_tag0@@": "Vaša skalirana albedo vrijednost opcionalno može imati vrijednost pomaka:",
	"@@Apparent-Reflectance_Offset_tag1@@": "Za nepotpisanu vrstu podataka od 16 bita, zadani pomak mjerila je 5.000.",
	"@@Apparent-Reflectance_Offset_tag2@@": "Za nepotpisanu vrstu podataka od 8 bita, zadani pomak mjerila je 0.",
	"@@Apparent-Reflectance_Offset_tag3@@": "Skaliranje se ne primjenjuje kada je izlaz albedo.",
	"@@Apparent-Reflectance_Radiance-Gains-and-Bias-Values-per-Band_tag0@@": "Ručno možete postaviti ili urediti ovu vrijednost za svaki kanal. Prikladne informacije moguće je očitati iz metapodataka izlaznog rastera produkta.",
	"@@Apparent-Reflectance_Raster_tag0@@": "Produkt rastera na koji će se primijeniti vidljiva refleksija.",
	"@@Apparent-Reflectance_Scale-Factor_tag0@@": "Vaša izlazna vrijednost vidljive refleksije može biti izražena kao cijeli broj. Faktor mjerila multipliciran je albedom za pretvaranje svih vrijednosti plutajuće točke u vrijednosti cijelog broja.",
	"@@Apparent-Reflectance_Scale-Factor_tag1@@": "Ako je faktor mjerila ${0} ili nije specificiran, zadano skaliranje primijenit će se ovisno o vrsti piksela u ulaznim podacima:",
	"@@Apparent-Reflectance_Scale-Factor_tag2@@": "Za nepotpisanu vrstu podataka od 16 bita, zadani faktor mjerila je 50.000.",
	"@@Apparent-Reflectance_Scale-Factor_tag3@@": "Za nepotpisanu vrstu podataka od 8 bita, zadani faktor mjerila je 255.",
	"@@Apparent-Reflectance_Scale-Factor_tag4@@": "Faktor mjerila uvijek se primjenjuje kada je izlaz vidljiva refleksija. Skaliranje se ne primjenjuje kada je izlaz albedo.",
	"@@Apparent-Reflectance_Sun-Elevation_tag0@@": "To je vrijednost položaja sunca, izražena u stupnjevima. To će biti popunjeno sustavom, ako se prikladne informacije mogu očitati iz metapodataka. Ručno možete postaviti ili urediti ovu vrijednost.",
	"@@ArgStatistics_Max_tag0@@": "Maksimalna vrijednost: koju možete postaviti najviša je vrijednost jednaka ili manja od kraja trajanja.",
	"@@ArgStatistics_Max_tag1@@": "Ovaj je unos primjenjiv samo kada je metoda Trajanje.",
	"@@ArgStatistics_Method_tag0@@": "Odaberite metodu statistike za izračun:",
	"@@ArgStatistics_Method_tag1@@": "Arg Maks--Argument maksimuma koji vraća vrijednost ${Band index} za koji navedeni piksel dohvaća minimalnu vrijednost iz svih kanala. Svim kanalima rastera iz svakog ulaznog rastera dodijeljen je indeks kanala u stupnjevima koji se temelje na 0, kojeg prvog raspodjeljuje indeks ulaznog rastera, a zatim relativni redoslijed kanala unutar svakog ulaznog rastera.",
	"@@ArgStatistics_Method_tag2@@": "Arg medijan--Argument medijana koji vraća vrijednost ${Band index} za koji navedeni piksel dohvaća vrijednost medijana za vrijednosti iz kanala.",
	"@@ArgStatistics_Method_tag3@@": "Arg Min--Argument minimuma koji vraća vrijednost ${Band index} za koji navedeni piksel dohvaća minimalnu vrijednost iz svih kanala.",
	"@@ArgStatistics_Method_tag4@@": "Duration--Duration metoda pronalazi najduži niz uzastopnih elemenata u polju, gdje svaki element ima vrijednost veću ili jednaku <strong>Min</strong> i manju ili jednaku <strong>Max</strong>, a zati vraća svoju duljinu.",
	"@@ArgStatistics_Min_tag0@@": "Minimalna vrijednost koju možete postaviti najniža je vrijednost jednaka ili veća od početka trajanja.",
	"@@ArgStatistics_Min_tag1@@": "Ovaj je unos primjenjiv samo kada je metoda Trajanje.",
	"@@ArgStatistics_Rasters_tag0@@": "Ulazni raster koji će provoditi različite statističke metode.",
	"@@ArgStatistics_Undefined-Class_tag0@@": "Konstantni unos koji će se vratiti kada nije moguće dohvatiti maksimum, minimum ili medijan. Najčešći je scenariju kada vrijednost se maksimuma ili minimuma događa češće među vrijednostima iz svih kanala. Zadana vrijednost za nedefiniranu konstantu je 100.",
	"@@ArgStatistics_Undefined-Class_tag1@@": "Nedefinirani razred primjenjiv je samo kada je metoda <strong>ArgMax</strong>, <strong>ArgMin</strong>, ili <strong>ArgMedian</strong>.",
	"@@ArgStatistics_ignorenodata_tag0@@": "Označava zanemaruju li se vrijednosti NoData u statističkom izračunu.",
	"@@ArgStatistics_ignorenodata_tag1@@": "Označeno--Analiza će uključiti sve važeće piksele u ulaznim rasterima i zanemariti sve piksele NoData.",
	"@@ArgStatistics_ignorenodata_tag2@@": "Neoznačeno--Analiza će rezultirati s NoData ako postoje vrijednosti NoData za piksele u ulaznim rasterima. To je zadano.",
	"@@Arithmetic_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Arithmetic_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Arithmetic_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Arithmetic_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Arithmetic_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Arithmetic_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Arithmetic_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Arithmetic_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Arithmetic_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Arithmetic_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Arithmetic_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Arithmetic_Operation_tag0@@": "Artimetričke operacije koje će se provoditi između dva ulazna rastera.",
	"@@Arithmetic_Operation_tag1@@": "Dostupne su sljedeće opcije:",
	"@@Arithmetic_Operation_tag2@@": "<strong>Divide</strong>--Izlazi djeljivih rezultata između odgovarajućih vrijednosti piksela za svaki raster.",
	"@@Arithmetic_Operation_tag4@@": "<strong>Minus</strong>--Izlazi razlika između odgovarajućih vrijednosti piksela za svaki raster. To se može upotrebljavati za izračun otkrivanja promjena.",
	"@@Arithmetic_Operation_tag6@@": "<strong>Mode</strong>--Izlazi vrijednosti piksela za sve preklapajuće piksele koji se najčešće javljaju. Na primjer, ako je u rasteru šest kanala, bit će šest preklapajućih piksela. Za vrijednosti 4, 5, 6, 4, 7, 9, vrijednost načina je 4.",
	"@@Arithmetic_Operation_tag8@@": "<strong>Multiply</strong>--Izlazi proizvod odgovarajuće vrijednosti piksela za svaki raster. To se može upotrebljavati za provođenje nekih funkcija troška.",
	"@@Arithmetic_Operation_tag10@@": "<strong>Plus</strong>--Izlazi zbroja svih odgovarajućih vrijednosti piksela za svaki raster.",
	"@@Arithmetic_Operation_tag12@@": "<strong>Power</strong>--Izlazi proizvoda odgovarajućih vrijednosti piksela podignutih na snagu ulaznog rastera ili skalara.",
	"@@Arithmetic_Raster_tag0@@": "Prvi ulazni skup rasterskih podataka.",
	"@@Arithmetic_Raster2_tag0@@": "Drugi ulazni skup rasterskih podataka.",
	"@@ASin_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@ASin_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@ASin_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@ASin_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@ASin_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@ASin_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@ASin_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@ASin_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@ASin_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@ASin_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@ASin_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@ASin_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti inverznog sinusa.",
	"@@ASinH_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@ASinH_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@ASinH_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@ASinH_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@ASinH_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@ASinH_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@ASinH_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@ASinH_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@ASinH_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@ASinH_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@ASinH_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@ASinH_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti inverznog hiperbolnog sinusa.",
	"@@Aspect_Raster_tag0@@": "Ulazni DEM upotrebljavan za izvođenje aspekta skupa podataka.",
	"@@Aspect-Slope_Raster_tag0@@": "Ulazni DEM.",
	"@@Aspect-Slope_Z-Factor_tag0@@": "Faktor je za skaliranje koji se upotrebljava za pretvaranje vrijednosti visine terena za sljedeće dvije svrhe:",
	"@@Aspect-Slope_Z-Factor_tag1@@": "Pretvara jedinice visine terena (kao što su metri ili stope) u horizontalne koordinatne jedinice skupa podataka, koje mogu biti stope, metri ili stupnjevi.",
	"@@Aspect-Slope_Z-Factor_tag2@@": "Dodaje vertikalno uveličavanje radi vizualnog efekta.",
	"@@ATan_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@ATan_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@ATan_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@ATan_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@ATan_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@ATan_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@ATan_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@ATan_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@ATan_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@ATan_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@ATan_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@ATan_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti inverznog tangensa.",
	"@@ATan2_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@ATan2_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@ATan2_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@ATan2_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@ATan2_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@ATan2_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@ATan2_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@ATan2_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@ATan2_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@ATan2_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@ATan2_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@ATan2_Raster_tag0@@": "Unos koji specificira brojnik ili vrijednost y koji će se upotrebljavati pri izračunu inverznog tangensa.",
	"@@ATan2_Raster2_tag0@@": "Unos koji specificira nazivnik ili vrijednost x koji će se upotrebljavati pri izračunu inverznog tangensa.",
	"@@ATanH_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@ATanH_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@ATanH_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@ATanH_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@ATanH_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@ATanH_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@ATanH_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@ATanH_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@ATanH_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@ATanH_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@ATanH_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@ATanH_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti hiperboličnog inverznog tangensa.",
	"@@Attribute-Table_Raster_tag0@@": "Ulazni raster.",
	"@@Attribute-Table_Table-Type_tag0@@": "Tablica atributa unosa može se unijeti pomoću <strong>Manual</strong>, gdje možete dodijeliti naziv klase i boju za svaku vrijednost ili možete referencirati postojeću tablicu koja dolazi iz datoteke ${.dbf}.",
	"@@Band-Arithmetic_Band-Indexes_tag0@@": "Definirajte aritmetičku formulu vašeg pojasa ako odaberete <strong>User Defined</strong> za vaš <strong>Method</strong>.",
	"@@Band-Arithmetic_Band-Indexes_tag5@@": "Ako izaberete predefinirani indeks za vaš <strong>Method</strong>, definirajte odgovarajuće pojaseve vašeg ulaznog rasterskog skupa podataka koji odgovaraju indeksu.",
	"@@Band-Arithmetic_Method_tag0@@": "Vrsta algoritma artimetrije za kanal koju želite implementirati. Možete definirati svoj prilagođeni algoritam ili odabrati unaprijed definirani indeks.",
	"@@Band-Arithmetic_Method_tag1@@": "<strong>BAI</strong>--Indeks područja požara",
	"@@Band-Arithmetic_Method_tag2@@": "<strong>CIg</strong>--Indeks klorofila – zeleno",
	"@@Band-Arithmetic_Method_tag3@@": "<strong>CIre</strong>--Indeks klorofila – Red-Edge",
	"@@Band-Arithmetic_Method_tag4@@": "<strong>Clay Minerals</strong>--Omjer minerala gline",
	"@@Band-Arithmetic_Method_tag5@@": "<strong>EVI</strong>--Poboljšani indeks vegetacije",
	"@@Band-Arithmetic_Method_tag6@@": "<strong>Ferrous Minerals</strong>--Omjer željeznih minerala",
	"@@Band-Arithmetic_Method_tag7@@": "<strong>GEMI</strong>--Indeks globalnog praćenja okoliša",
	"@@Band-Arithmetic_Method_tag8@@": "<strong>GNDVI</strong>--Zeleni normalizirani indeks različitosti vegetacije",
	"@@Band-Arithmetic_Method_tag9@@": "<strong>GVI (Landsat TM)</strong>---Indeks zelene vegetacije Landsat TM",
	"@@Band-Arithmetic_Method_tag10@@": "<strong>Iron Oxide</strong>--Omjer željezovog oksida",
	"@@Band-Arithmetic_Method_tag11@@": "<strong>MNDWI</strong>--Modificirani normalizirani indeks različitosti vode",
	"@@Band-Arithmetic_Method_tag12@@": "<strong>MTVI2</strong>---Izmijenjeni triangulirani indeks vegetacije (druga iteracija)",
	"@@Band-Arithmetic_Method_tag13@@": "<strong>Modified SAVI</strong>--Promijenjeni indeks vegetacije prilagođen tlu",
	"@@Band-Arithmetic_Method_tag14@@": "<strong>NBR</strong>--Normalizirani indeks omjera požara",
	"@@Band-Arithmetic_Method_tag15@@": "<strong>NDBI</strong>--Normalizirani indeks stvorenih različitosti",
	"@@Band-Arithmetic_Method_tag16@@": "<strong>NDMI</strong>--Normalizirani indeks različitosti vlage",
	"@@Band-Arithmetic_Method_tag17@@": "<strong>NDSI</strong>--Normalizirani indeks različitosti snijega",
	"@@Band-Arithmetic_Method_tag18@@": "<strong>NDVI</strong>--Normalizirani indeks različitosti vegetacije",
	"@@Band-Arithmetic_Method_tag19@@": "<strong>NDVIre</strong>--Red-Edge normalizirani indeks različitosti vegetacije",
	"@@Band-Arithmetic_Method_tag20@@": "<strong>NDWI</strong>--Normalizirani indeks različitosti vode",
	"@@Band-Arithmetic_Method_tag21@@": "<strong>PVI</strong>--Indeks okomite vegetacije",
	"@@Band-Arithmetic_Method_tag22@@": "<strong>RTVICore</strong>--Red-Edge triangulirani indeks vegetacije",
	"@@Band-Arithmetic_Method_tag23@@": "<strong>SAVI</strong>--Indeks vegetacije prilagođene tlu",
	"@@Band-Arithmetic_Method_tag24@@": "<strong>SR</strong>-Jednostavan omjer",
	"@@Band-Arithmetic_Method_tag25@@": "<strong>SRre</strong>--Red-Edge jednostavni omjer",
	"@@Band-Arithmetic_Method_tag26@@": "<strong>Sultan's Formula</strong>--Sultanova formula",
	"@@Band-Arithmetic_Method_tag27@@": "<strong>Transformed SAVI</strong>--Transformirani indeks vegetacije prilagođen tlu",
	"@@Band-Arithmetic_Method_tag28@@": "<strong>User Defined</strong>--Omogućuje vam definirati prilagođeni izraz aritmetike za kanal.",
	"@@Band-Arithmetic_Method_tag29@@": "<strong>VARI</strong>--Vidljivo atmosferski otporno indeksiranje",
	"@@Band-Arithmetic_Method_tag30@@": "<strong>WNDWI</strong>--Ponderirani normalizirani indeks različitosti vode",
	"@@Band-Arithmetic_Raster_tag0@@": "Ulazni raster.",
	"@@Binary-Thresholding_Raster_tag0@@": "Ulazni raster.",
	"@@Bitwise-And_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Bitwise-And_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Bitwise-And_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Bitwise-And_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Bitwise-And_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-And_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-And_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Bitwise-And_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-And_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Bitwise-And_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-And_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Bitwise-And_Raster_tag0@@": "Prvi unos za upotrebu u ovoj operaciji na razini bita.",
	"@@Bitwise-And_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Bitwise-And_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj operaciji na razini bita.",
	"@@Bitwise-And_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Left-Shift_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Bitwise-Left-Shift_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Left-Shift_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Bitwise-Left-Shift_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Left-Shift_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Left-Shift_Raster_tag0@@": "Unos na kojem će se izvršiti smjena.",
	"@@Bitwise-Left-Shift_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Bitwise-Left-Shift_Raster2_tag0@@": "Unos koji definira broj položaja za promjenu bitova.",
	"@@Bitwise-Left-Shift_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Bitwise-Not_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Bitwise-Not_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Not_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Not_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Bitwise-Not_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Not_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Not_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Bitwise-Not_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Not_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Bitwise-Not_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Not_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Not_Raster_tag0@@": "Ulazni raster na kojem se provodi operacija Ne na razini bita (komplement).",
	"@@Bitwise-Or_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Bitwise-Or_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Or_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Or_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Bitwise-Or_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Or_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Or_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Bitwise-Or_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Or_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Bitwise-Or_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Or_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Or_Raster_tag0@@": "Prvi unos za upotrebu u ovoj operaciji na razini bita.",
	"@@Bitwise-Or_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Bitwise-Or_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj operaciji na razini bita.",
	"@@Bitwise-Or_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Right-Shift_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Bitwise-Right-Shift_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Right-Shift_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Bitwise-Right-Shift_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Right-Shift_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Right-Shift_Raster_tag0@@": "Unos na kojem će se izvršiti smjena.",
	"@@Bitwise-Right-Shift_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Bitwise-Right-Shift_Raster2_tag0@@": "Unos koji definira broj položaja za promjenu bitova.",
	"@@Bitwise-Right-Shift_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Bitwise-Xor_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Bitwise-Xor_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Xor_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Bitwise-Xor_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Bitwise-Xor_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Xor_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Bitwise-Xor_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Bitwise-Xor_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Xor_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Bitwise-Xor_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Xor_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Bitwise-Xor_Raster_tag0@@": "Prvi unos za upotrebu u ovoj operaciji na razini bita.",
	"@@Bitwise-Xor_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Bitwise-Xor_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj operaciji na razini bita.",
	"@@Bitwise-Xor_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Boolean-and_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Boolean-and_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Boolean-and_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Boolean-and_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Boolean-and_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Boolean-and_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Boolean-and_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Boolean-and_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Boolean-and_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Boolean-and_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Boolean-and_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Boolean-and_Raster_tag0@@": "Prvi unos za upotrebu u ovoj Booleovoj operaciji.",
	"@@Boolean-and_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Boolean-and_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj Booleovoj operaciji.",
	"@@Boolean-and_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Boolean-Not_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Boolean-Not_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Boolean-Not_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Boolean-Not_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Boolean-Not_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Boolean-Not_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Boolean-Not_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Boolean-Not_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Boolean-Not_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Boolean-Not_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Boolean-Not_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Boolean-Not_Raster_tag0@@": "Prvi unos za upotrebu u ovoj Booleovoj operaciji.",
	"@@Boolean-Or_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Boolean-Or_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Boolean-Or_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Boolean-Or_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Boolean-Or_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Boolean-Or_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Boolean-Or_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Boolean-Or_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Boolean-Or_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Boolean-Or_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Boolean-Or_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Boolean-Or_Raster_tag0@@": "Prvi unos za upotrebu u ovoj Booleovoj operaciji.",
	"@@Boolean-Or_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Boolean-Or_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj Booleovoj operaciji.",
	"@@Boolean-Or_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Boolean-Xor_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Boolean-Xor_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Boolean-Xor_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Boolean-Xor_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Boolean-Xor_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Boolean-Xor_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Boolean-Xor_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Boolean-Xor_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Boolean-Xor_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Boolean-Xor_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Boolean-Xor_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Boolean-Xor_Raster_tag0@@": "Prvi unos za upotrebu u ovoj Booleovoj operaciji.",
	"@@Boolean-Xor_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Boolean-Xor_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj Booleovoj operaciji.",
	"@@Boolean-Xor_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Buffered_Raster_tag0@@": "Ulazni raster za pohranu u memoriju.",
	"@@Calculator_Cellsize-Type_tag0@@": "Veličina ćelije koja se upotrebljava za izradu izlaznog rastera.",
	"@@Calculator_Cellsize-Type_tag1@@": "Možete odabrati veličinu izlazne ćelije od sljedećih opcija na padajućem popisu:",
	"@@Calculator_Cellsize-Type_tag2@@": "<strong>First Of</strong>--Veličina ćelije prve varijable rastera.",
	"@@Calculator_Cellsize-Type_tag4@@": "<strong>Min Of</strong>--Minimalna veličina ćelije ulaznog rastera.",
	"@@Calculator_Cellsize-Type_tag6@@": "<strong>Max Of</strong>--Maksimalna veličina ćelije ulaznog rastera.",
	"@@Calculator_Cellsize-Type_tag8@@": "<strong>Mean Of</strong>--Prosječna veličina ćelije ulaznog rastera.",
	"@@Calculator_Cellsize-Type_tag10@@": "<strong>Last Of</strong>--Veličina ćelije posljednje varijable rastera.",
	"@@Calculator_Cellsize-Type_tag12@@": "Zadani izbor je <strong>Max Of</strong>.",
	"@@Calculator_Expression_tag0@@": "Izrađuje algebarski izraz za provođenje prostorne analize na izlaznom rasteru.",
	"@@Calculator_Expression_tag1@@": "Sve postojeće matematičke funkcije moguće ne pozvati za izradu izraza. Dostupne operacije navedene su u nastavku.",
	"@@Calculator_Expression_tag2@@": "Artimetričke operacije",
	"@@Calculator_Expression_tag3@@": "Dodavanje: +",
	"@@Calculator_Expression_tag4@@": "Podjela: /",
	"@@Calculator_Expression_tag5@@": "Modulo: %",
	"@@Calculator_Expression_tag6@@": "Množenje: *",
	"@@Calculator_Expression_tag7@@": "Snaga: **",
	"@@Calculator_Expression_tag8@@": "Oduzimanje: -",
	"@@Calculator_Expression_tag9@@": "Booleovi operatori",
	"@@Calculator_Expression_tag10@@": "Istinita vrijednost i: &&",
	"@@Calculator_Expression_tag11@@": "Istinita vrijednost ili: ||",
	"@@Calculator_Expression_tag12@@": "Odnosni operatori",
	"@@Calculator_Expression_tag13@@": "Jednako: ==",
	"@@Calculator_Expression_tag14@@": "Veće od: >",
	"@@Calculator_Expression_tag15@@": "Veće od ili jednako: >=",
	"@@Calculator_Expression_tag16@@": "Manje od: <",
	"@@Calculator_Expression_tag17@@": "Manje od ili jednako: <=",
	"@@Calculator_Expression_tag18@@": "Nije jednako: !=",
	"@@Calculator_Expression_tag19@@": "Dodatne operacije",
	"@@Calculator_Expression_tag20@@": "Minimalno dva rastera na osnovi po pikselu: min(a,b)",
	"@@Calculator_Expression_tag21@@": "Maksimalno dva rastera na osnovi po pikselu: max(a,b)",
	"@@Calculator_Expression_tag22@@": "Ovo su dva primjera izraza:",
	"@@Calculator_Expression_tag23@@": "Jednostavna uvjetna izjava: u rasteru (označenom s T) pronađite vrijednosti visine terena iznad 4.000 stopa i dajte tim područjima vrijednost 1, a svim ostalim područjima vrijednost 0.",
	"@@Calculator_Expression_tag24@@": "Con(T > 4000, 1, 0)",
	"@@Calculator_Expression_tag25@@": "Ugniježđena uvjetna izjava: pronađite područja u kojima je nagib (označen s b1)) ispod 10 stupnjeva, a NDVI (označen s b2) iznad 0,5 te tim područjima dodijelite vrijednost 1. Za sva ostala područja dodijelite vrijednost 2 ako je nagib iznad 10 stupnjeva, a visina terena (označena s b3) iznad 2.500 stopa. Svim ostalim područjima dodijeljena je vrijednost 3.",
	"@@Calculator_Expression_tag26@@": "Con((b1 < 10 && b2 > .5, 1, Con(b1 > 10 && b3 > 2500, 2, 3)))",
	"@@Calculator_extenttype_tag0@@": "<p>Odaberite opseg koji će se koristiti u izlaznom rasteru:</p><ul><li><p>First of--Koristi opseg prvog ulaznog rastera za određivanje opsega obrade.</p></li><li>Intersection of--Koristi opseg preklapajućih piksela za određivanje opsega obrade. To je zadano.</li><li>Union Of--Koristi opseg svih rastera za određivanje opsega obrade.</li><li>Last Of--Koristi opseg zadnjeg ulaznog rastera za određivanje opsega obrade.</li></ul>",
	"@@Calculator_Raster-Variables_tag0@@": "Korisnički definirani naziv varijable i ulazni raster.",
	"@@Classify_Input-Definition-File_tag0@@": "Ulazna Esrijeva datoteka definicije klasifikatora (${.ecd}) koja sadrži statistike i druge informacije o klasifikaciji za specifični skup podataka, klasifikator i odabrane atribute.",
	"@@Classify_Raster_tag0@@": "Skup podataka rastera koji želite upotrebljavati za klasificiranje.",
	"@@Classify_Raster2_tag0@@": "Dodatni pomoćni skup rasterskih podataka za uključivanje u klasifikator, kao što su segmentirana slika, multispektralna slika ili podaci o visini terena, koji se upotrebljavaju za generiranje robusnije definicije klasifikacije za vaš skup podataka. Skup rasterskih podataka za taj parametar mora se podudarati s onim korištenim za izradu ulazne Esrijeve datoteke definicije klasifikatora.",
	"@@Clip_Clipping-Geometry-or-Raster_tag0@@": "Sljedeće se može upotrebljavati za određivanje obuhvata rezanja:",
	"@@Clip_Clipping-Geometry-or-Raster_tag1@@": "<strong>Clipping Raster</strong>--Opseg reznog rastera",
	"@@Clip_Clipping-Geometry-or-Raster_tag3@@": "<strong>Custom Extent</strong>--X i Y minimalne i maksimalne koordinate",
	"@@Clip_Clipping-Geometry-or-Raster_tag5@@": "<strong>Current Map Extent</strong>--Opseg trenutnog prikaza karte",
	"@@Clip_Clipping-Raster_tag0@@": "Rasterski sloj koji se upotrebljava za rezanje.",
	"@@Clip_Clipping-Type_tag0@@": "Specificiraje želite li zadržati područje unutar ili izvan geometrije rezanja.",
	"@@Clip_Clipping-Type_tag1@@": "<strong>Clip Inside</strong>--Slika unutar obuhvata reza bit će uklonjena.",
	"@@Clip_Clipping-Type_tag3@@": "<strong>Clip Outside</strong>--Slika izvan obuhvata reza bit će uklonjena.",
	"@@Clip_Custom-Extent_tag0@@": "Specificirajte četiri koordinate koje definiraju obuhvat graničnog okvira koji se upotrebljava za rezanje rastera.",
	"@@Clip_Output-Extent_tag0@@": "x i y koordinate trenutačnog obuhvata rezanja.",
	"@@Clip_Output-Extent_tag1@@": "<strong>Capture Current Map Extent</strong> gumb koristi opseg prikaza za aktivnu kartu.",
	"@@Clip_Raster_tag0@@": "Ulazni rasterski sloj.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag0@@": "Kada je odabrana ova opcija, podaci se režu u skladu s geometrijom specificirane klase geoobjekta.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag1@@": "Neoznačeno--Funkcija upotrebljava geometriju rezanja koju navodi <strong>Rectangle</strong>. To je zadano.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag4@@": "Označeno--Funkcija upotrebljava geometriju rezanja koja je definirana klasom geoobjekta.",
	"@@Color-Model-Conversion_Conversion-Type_tag0@@": "Vrsta pretvorbe boje za provođenje:",
	"@@Color-Model-Conversion_Conversion-Type_tag1@@": "HSV do RGB",
	"@@Color-Model-Conversion_Conversion-Type_tag2@@": "RGB do HSV",
	"@@Color-Model-Conversion_Raster_tag0@@": "Ulazni raster.",
	"@@Colormap_Color-Ramp_tag0@@": "Odaberite unaprijed postojeću paletu boja.",
	"@@Colormap_Color-Scheme-Type_tag0@@": "Odaberite vrstu sheme boja za renderiranje ulaznog rastera",
	"@@Colormap_Color-Scheme-Type_tag1@@": "Rampa boja--Upotrijebite rampu boja.",
	"@@Colormap_Color-Scheme-Type_tag2@@": "Karta u boji--Upotrijebite unaprijed postojeću kartu u boji.",
	"@@Colormap_Colormap_tag0@@": "Sljedeće zadane karte u boji dostupne su na padajućem popisu:",
	"@@Colormap_Colormap_tag1@@": "Visina terena--Karta u boji koja se postepeno mijenja iz cijana do ljubičaste te crne.",
	"@@Colormap_Colormap_tag2@@": "Siva--Karta u boji koja se postepeno mijenja iz crne u bijelu.",
	"@@Colormap_Colormap_tag7@@": "Hillshade--Karta u sivim tonovima za vizualizaciju 3D prikaza površine terena, s relativnim položajem sunca koji se uzima u obzir za sjenčanje slike.",
	"@@Colormap_Colormap_tag3@@": "NDVI--Karta u boji za vizualiziranje vegetacije. Vrijednosti u blizini nule su plave. Niske su vrijednosti smeđe. Zatim se boje postepeno mijenjaju iz crvene do narančaste, žute, zelene te do crne kako indeks vegetacije ide iz niskog u visoki.",
	"@@Colormap_Colormap_tag4@@": "NDVI2--Karta u boji za vizualiziranje vegetacije. Raspon niskih vrijednosti od bijele do zelene. Zatim se boje mijenjaju iz sive do ljubičaste, ružičaste, tamno plave te do crne kako indeks vegetacije ide iz niskog u visoki.",
	"@@Colormap_Colormap_tag5@@": "NDVI3--Karta u boji za vizualiziranje vegetacije. Vrijednosti u blizini nule su plave. Zatim se boje postepeno mijenjaju iz crvene do narančaste te do zelene kako indeks vegetacije ide iz niskog u visoki.",
	"@@Colormap_Colormap_tag6@@": "Nasumično--Nasumična karta u boji.",
	"@@Colormap_Raster_tag0@@": "Ulazni raster.",
	"@@Colormap-To-RGB_Raster_tag0@@": "Ulazna karta u boji rastera.",
	"@@Complex_Raster_tag0@@": "Ulazni raster.",
	"@@Composite-Bands_Rasters_tag0@@": "Upotrijebite padajući popis ili <strong>Browse</strong> gumb za odabir rasterskih unosa.",
	"@@Composite-Bands_cellsizetype_tag0@@": "<p>Odaberite koju će veličinu ćelije koristiti u izlaznom rasteru. Ako su sve veličine ulaznih ćelija iste, sve će opcije dati iste rezultate.</p><ul><li>First Of--Upotrebljava prvu veličinu ćelije ulaznih rastera.</li><li>Min Of--Upotrebljava najmanju veličinu ćelije od svih ulaznih rastera.</li><li>Max Of--Upotrebljava najveću veličinu ćelije od svih ulaznih rastera. To je zadano.</li><li>Mean Of--Upotrebljava srednju veličinu ćelije od svih ulaznih rastera.</li><li>Last of--Upotrebljava zadnju veličinu ćelije ulaznih rastera.</li></ul>",
	"@@Con-function_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Con-function_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Con-function_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Con-function_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Con-function_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Con-function_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Con_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Con_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Con_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Con_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Con_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Con_False-Raster_tag0@@": "Unos čije će se vrijednosti upotrebljavati kao vrijednosti izlaznog piksela ako je uvjet neistinit. On može biti cijeli broj, plutajuća točka ili konstantna vrijednost.",
	"@@Con_Raster_tag0@@": "Ulazni raster koji predstavlja Booleanski rezultat funkcije logičkog matematičkog rastera. Vrijednosti će biti 1 (za istinito) ili 0 (za neistinito). Može biti cijeli broj ili plutajuća točka rastera.",
	"@@Con_True-Raster_tag0@@": "Unos čije će se vrijednosti upotrebljavati kao vrijednosti izlaznog piksela ako je uvjet istinit. On može biti cijeli broj, plutajuća točka ili konstantna vrijednost.",
	"@@Constant_Constant_tag0@@": "Vrijednost konstante za dodavanje virtualnom rasteru.",
	"@@Constant_Raster-Info_tag0@@": "Koristite <strong>Load template raster</strong> gumb da biste učitali predložak iz mape ili portala.",
	"@@Contour_Adaptive-Smoothing_tag0@@": "Iznos izglađivanja za primjenu u liniji obrisa. Zadana vrijednost je 2,5.",
	"@@Contour_Adaptive-Smoothing_tag1@@": "Niska vrijednost proizvodi liniju obrisa s većom zrnatosti i manje izglađivanja, dok veća vrijednost proizvodi liniju obrisa s više izglađivanja koja izgleda manje oštra.",
	"@@Contour_Contour-Interval_tag0@@": "Razlika u visini između linija obrisa.",
	"@@Contour_Contour-Interval_tag1@@": "Mali interval obrisa upotrebljava se u relativno ravnim područjima, dok se veći intervali obrisa upotrebljavaju u varijabli ili planinskom terenu.",
	"@@Contour_Contour-Type_tag0@@": "Vrsta obrisa koji će se izraditi:",
	"@@Contour_Contour-Type_tag1@@": "<strong>Contour fill</strong>--Ispunjava područje između svake linije obrisa uz kvantiziranu vrijednost visine terena.",
	"@@Contour_Contour-Type_tag3@@": "<strong>Contour lines</strong>--Pridružuje točke jednake visine terena za izradu linije koja predstavlja stalnu visinu terena.",
	"@@Contour_Contour-Type_tag5@@": "<strong>Smooth surface only</strong>--Izglađuje unos visinskog sloja, ali ne proizvodi obrise.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag0@@": "Indeks obrisa koji predstavlja podebljanu liniju.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag1@@": "Zadana vrijednost je 5; zato je svaka 5 linija konture podebljana.",
	"@@Contour_Number-Of-Contours_tag0@@": "Broj obrisa koji će se generirati na prikazu. Ovo dinamički prilagođava interval obrisa da se prilagodi terenu na zaslonu, dok se zadržavaju standardizirani intervali kao što su 1, 5, 10 itd.",
	"@@Contour_Raster_tag0@@": "Jedan kanal skupa podataka rastera visine terena.",
	"@@Contour_Z-Base_tag0@@": "Vrijednost osnovnog obrisa. Obrisi se generiraju iznad i ispod ove vrijednosti po potrebi za obuhvaćanje cijelog raspona vrijednosti ulaznog rastera. Zadana je vrijednost 0.",
	"@@Contour_Z-Base_tag1@@": "Vrijednost 0 često predstavlja srednju razinu mora, ovisno o izvoru skup podataka visine terena.",
	"@@Contour_Z-Factor_tag0@@": "Jedinica faktora konverzije koja se upotrebljava pri generiranju obrisa. Zadana vrijednost je 1.",
	"@@Contour_Z-Factor_tag1@@": "Linije obrisa generiraju se na temelju vrijednosti z u ulaznom rasteru, a one se često mjere u jedinicama metara ili stopa. Uz zadanu vrijednost 1 obrisi će biti u istim jedinicama kao vrijednosti z ulaznog rastera. Za izradu obrisa u jedinicama koje se razlikuju od vrijednosti z postavite odgovarajuću vrijednost za faktor z. Imajte na umu da nije potrebno da jedinice tla x,y i površine z budu dosljedne za ovaj alat.",
	"@@Contour_Z-Factor_tag2@@": "Na primjer, ako su vrijednosti visine terena u ulaznom rasteru u stopama, ali želite da se obrisi generiraju u metrima, postavite faktor z na 0,3048 (jer je 1 stopa =0,3048 metara).",
	"@@Contrast-and-Brightness_Brightness-Offset_tag0@@": "Prilagodite svjetlinu rasterskog sloja.",
	"@@Contrast-and-Brightness_Brightness-Offset_tag1@@": "Možete upotrijebiti klizač za uređivanje izjednačavanja svjetline ili možete unijeti vrijednost.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag0@@": "Prilagodite kontrast rasterskog sloja.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag1@@": "Možete upotrijebiti klizač za uređivanje izjednačavanja kontrasta ili možete unijeti vrijednost.",
	"@@Contrast-and-Brightness_Raster_tag0@@": "Ulazni raster na kojem će se uređivati svjetlina i kontrast.",
	"@@Convolution_kernel_tag0@@": "<p>Ova tablica prikazuje kako će se svaki piksel ponderirati u postupku filtriranja. Ova tablica može se uređivati ako odaberete<strong>Definirano Korisnikom</strong>kao<strong>Tip</strong>.</p>",
	"@@Convolution_Raster_tag0@@": "Ulazni skup rasterskih podataka.",
	"@@Convolution_Type_tag0@@": "Odaberite vrstu filtriranja koju želite provesti. Postoje opcije za izoštravanje, zamućivanje i otkrivanje rubova, ili možete definirati vlastiti filtar na temelju jezgre",
	"@@Corridor_Distance-Raster-1_tag0@@": "Prvi ulazni raster udaljenosti. Trebao bi biti izlaz akumuliranog troška udaljenosti iz stavke Udaljenost troška ili Udaljenost putanje.",
	"@@Corridor_Distance-Raster-2_tag0@@": "Drugi ulazni raster udaljenosti. Trebao bi biti izlaz akumuliranog troška udaljenosti iz stavke Udaljenost troška ili Udaljenost putanje.",
	"@@Cos_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Cos_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Cos_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Cos_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Cos_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Cos_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Cos_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Cos_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Cos_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Cos_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Cos_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Cos_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti kosinusa.",
	"@@CosH_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@CosH_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@CosH_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@CosH_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@CosH_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@CosH_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@CosH_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@CosH_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@CosH_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@CosH_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@CosH_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@CosH_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti hiperbolnog kosinusa.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Ova parametar simulira porast pokušaja za nadilaženje troškova kako se akumulativni trošak povećava. Upotrebljava se za modeliranje umora putnika. Rastući akumulativni trošak za dosezanje ćelije multiplicira se stopom otpora i dodaje trošku za prebacivanje u narednu ćeliju.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "Modificirana je verzija formule za složenu kamatnu stopu koja se upotrebljava za izračunavanje vidljivog troška prebacivanja kroz ćelije. Kako se vrijednost stope otpora povećava, povećava se trošak ćelija koje se posjećuju kasnije. Što je veća stopa otpora, viši je trošak za dosezanje sljedeće ćelije, a on je složen za svako naredno kretanje. Budući da je stopa otpora slična složenoj stopi i općenito su vrijednosti akumulativnog troška jako dugačke, predlažu se male stope otpora, kao što je 0,005 ili čak i manje, ovisno o vrijednostima akumulativnog troška.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Cost-Allocation_Capacity_tag0@@": "Definira kapacitet troška za putnika za izvor. Izračuni troška nastavljaju se za svaki izvor dok se ne dosegne specificirani kapacitet.",
	"@@Cost-Allocation_Capacity_tag1@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Cost-Allocation_Capacity_tag2@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Cost-Allocation_Cost-Raster_tag0@@": "Obavezni ulazni raster koji određuje trošak ili impendanciju za planimetrijsko kretanje do svake ćelije. Vrijednost na svakoj lokaciji ćelije predstavlja troškove po jedinici za udaljenost kretanja kroz njih. Svaka vrijednost lokacije ćelije množi se s razlučivosti ćelije te se također kompenzira za dijagonalno kretanje kako bi se došlo do ukupnog troška prolaska kroz ćeliju.",
	"@@Cost-Allocation_Cost-Raster_tag1@@": "Vrijednosti <strong>Cost Raster</strong> mogu biti cijeli brojevi ili plutajuća točka, ali ne mogu biti negativne ili nula.",
	"@@Cost-Allocation_Maximum-Distance_tag0@@": "Prag koji akumulativne vrijednosti troška ne mogu premašiti. Ako akumulativna udaljenost troška premaši tu vrijednost, izlazna vrijednost za lokaciju ćelije bit će ${NoData}. Maksimalna udaljenost definira obuhvat za koji se izračunavaju akumulativne udaljenosti troška. Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Množitelj koji se primjenjuje na vrijednosti troška.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućuje kontrolu način putovanja ili magnitudu izvora. Što je veći multiplikator, veći je trošak koji treba prebaciti kroz svaku ćeliju.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Vrijednosti moraju biti veća od nule. Zadana je vrijednost 1.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Cost-Allocation_Source-Field_tag0@@": "Polje se upotrebljava za dodjeljivanje vrijednosti do lokacija izvora. Treba biti vrsta cijelog broja. Ako je <strong>Value Raster</strong> postavljen, vrijednosti u tom ulazu imaju prednost nad bilo kojom postavkom za <strong>Source Field</strong>.",
	"@@Cost-Allocation_Source-Raster_tag0@@": "Obavezni ulazni raster lokacija izvora.",
	"@@Cost-Allocation_Source-Raster_tag1@@": "To je raster koji identificira ćelije ili lokacije za koje će se posljednje akumulirani trošak udaljenosti izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Cost-Allocation_Source-Raster_tag2@@": "Ako je ulaz <strong>Source Raster</strong> plutajuća točka, <strong>Value Raster</strong> mora biti postavljen i mora biti cijeli broj. <strong>Value Raster</strong> ima prednost nad bilo kojom postavkom za <strong>Source Field</strong>.",
	"@@Cost-Allocation_Start-Cost_tag0@@": "Početni trošak od kojeg započinju izračuni troška. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih s izvorom. Umjesto započinjanja pri trošku od 0, algoritam troška započet će sa specificiranom vrijednosti.",
	"@@Cost-Allocation_Start-Cost_tag1@@": "Vrijednost mora biti nula ili veća. Zadana je vrijednost 0.",
	"@@Cost-Allocation_Travel-Direction_tag0@@": "Definira smjer putnika kada se primjenjuje stopa otpora izvora i početni trošak izvora.",
	"@@Cost-Allocation_Travel-Direction_tag1@@": "<strong>From Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na ulaznom izvoru i kretati će se prema ćelijama bez izvora. To je zadano.",
	"@@Cost-Allocation_Travel-Direction_tag3@@": "<strong>To Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na svakoj ćeliji bez izvora i kretati će se natrag prema ulaznom izvoru.",
	"@@Cost-Allocation_Travel-Direction_tag5@@": "Ili navedite <strong>From Source</strong> ili <strong>To Source</strong> ključnu riječ koja će biti primijenjena na sve izvore, ili navedite polje u <strong>Source Raster</strong> koje sadrži ključne riječi za prepoznavanje smjera putovanja za svaki izvor. To polje mora sadržavati niz od ${FROM_SOURCE} do ${TO_SOURCE}.",
	"@@Cost-Allocation_Value-Raster_tag0@@": "Ulazni raster cijelih brojeva koji identificira vrijednosti zone koje će se upotrebljavati za svaku lokaciju ulaznog izvora. Za svaku ćeliju izvorne lokacije, vrijednost definirana sa <strong>Value Raster</strong> bit će dodijeljena svim ćelijama dodijeljenim na izvorno mjesto za računanje. <strong>Value Raster</strong> ima prednost nad bilo kojom postavkom za <strong>Source Field</strong>.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Ova parametar simulira porast pokušaja za nadilaženje troškova kako se akumulativni trošak povećava. Upotrebljava se za modeliranje umora putnika. Rastući akumulativni trošak za dosezanje ćelije multiplicira se stopom otpora i dodaje trošku za prebacivanje u narednu ćeliju.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "Modificirana je verzija formule za složenu kamatnu stopu koja se upotrebljava za izračunavanje vidljivog troška prebacivanja kroz ćelije. Kako se vrijednost stope otpora povećava, povećava se trošak ćelija koje se posjećuju kasnije. Što je veća stopa otpora, viši je trošak za dosezanje sljedeće ćelije, a on je složen za svako naredno kretanje. Budući da je stopa otpora slična složenoj stopi i općenito su vrijednosti akumulativnog troška jako dugačke, predlažu se male stope otpora, kao što je 0,005 ili čak i manje, ovisno o vrijednostima akumulativnog troška.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Cost-Back-Link_Capacity_tag0@@": "Definira kapacitet troška za putnika za izvor. Izračuni troška nastavljaju se za svaki izvor dok se ne dosegne specificirani kapacitet.",
	"@@Cost-Back-Link_Capacity_tag1@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Cost-Back-Link_Capacity_tag2@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Cost-Back-Link_Cost-Raster_tag0@@": "Obavezni ulazni raster koji određuje trošak ili impendanciju za planimetrijsko kretanje do svake ćelije. Vrijednost na svakoj lokaciji ćelije predstavlja troškove po jedinici za udaljenost kretanja kroz njih. Svaka vrijednost lokacije ćelije množi se s razlučivosti ćelije te se također kompenzira za dijagonalno kretanje kako bi se došlo do ukupnog troška prolaska kroz ćeliju.",
	"@@Cost-Back-Link_Cost-Raster_tag1@@": "Vrijednosti <strong>Cost Raster</strong> mogu biti cijeli brojevi ili plutajuća točka, ali ne mogu biti negativne ili nula.",
	"@@Cost-Back-Link_Maximum-Distance_tag0@@": "Prag koji akumulativne vrijednosti troška ne mogu premašiti. Ako akumulativna udaljenost troška premaši tu vrijednost, izlazna vrijednost za lokaciju ćelije bit će „Bez podataka“. Maksimalna udaljenost definira obuhvat za koji se izračunavaju akumulativne udaljenosti troška. Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Množitelj koji se primjenjuje na vrijednosti troška.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućuje kontrolu način putovanja ili magnitudu izvora. Što je veći multiplikator, veći je trošak koji treba prebaciti kroz svaku ćeliju.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Vrijednosti moraju biti veća od nule. Zadana je vrijednost 1.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Cost-Back-Link_Source-Raster_tag0@@": "Obavezni ulazni raster lokacija izvora.",
	"@@Cost-Back-Link_Source-Raster_tag1@@": "To je raster koji identificira ćelije ili lokacije za koje će se posljednje akumulirani trošak udaljenosti izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Cost-Back-Link_Start-Cost_tag0@@": "Početni trošak od kojeg započinju izračuni troška. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih s izvorom. Umjesto započinjanja pri trošku od 0, algoritam troška započet će sa specificiranom vrijednosti.",
	"@@Cost-Back-Link_Start-Cost_tag1@@": "Vrijednost mora biti nula ili veća. Zadana je vrijednost 0.",
	"@@Cost-Back-Link_Travel-Direction_tag0@@": "Definira smjer putnika kada se primjenjuje stopa otpora izvora i početni trošak izvora.",
	"@@Cost-Back-Link_Travel-Direction_tag1@@": "<strong>From Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na ulaznom izvoru i kretati će se prema ćelijama bez izvora. To je zadano.",
	"@@Cost-Back-Link_Travel-Direction_tag3@@": "<strong>To Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na svakoj ćeliji bez izvora i kretati će se natrag prema ulaznom izvoru.",
	"@@Cost-Back-Link_Travel-Direction_tag5@@": "Ili navedite <strong>From Source</strong> ili <strong>To Source</strong> ključnu riječ koja će biti primijenjena na sve izvore, ili navedite polje u <strong>Source Raster</strong> koje sadrži ključne riječi za prepoznavanje smjera putovanja za svaki izvor. To polje mora sadržavati niz od ${FROM_SOURCE} do ${TO_SOURCE}.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Ova parametar simulira porast pokušaja za nadilaženje troškova kako se akumulativni trošak povećava. Upotrebljava se za modeliranje umora putnika. Rastući akumulativni trošak za dosezanje ćelije multiplicira se stopom otpora i dodaje trošku za prebacivanje u narednu ćeliju.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "Modificirana je verzija formule za složenu kamatnu stopu koja se upotrebljava za izračunavanje vidljivog troška prebacivanja kroz ćelije. Kako se vrijednost stope otpora povećava, povećava se trošak ćelija koje se posjećuju kasnije. Što je veća stopa otpora, viši je trošak za dosezanje sljedeće ćelije, a on je složen za svako naredno kretanje. Budući da je stopa otpora slična složenoj stopi i općenito su vrijednosti akumulativnog troška jako dugačke, predlažu se male stope otpora, kao što je 0,005 ili čak i manje, ovisno o vrijednostima akumulativnog troška.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Cost-Distance_Capacity_tag0@@": "Definira kapacitet troška za putnika za izvor. Izračuni troška nastavljaju se za svaki izvor dok se ne dosegne specificirani kapacitet.",
	"@@Cost-Distance_Capacity_tag1@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Cost-Distance_Capacity_tag2@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Cost-Distance_Cost-Raster_tag0@@": "Obavezni ulazni raster koji određuje trošak ili impendanciju za planimetrijsko kretanje do svake ćelije. Vrijednost na svakoj lokaciji ćelije predstavlja troškove po jedinici za udaljenost kretanja kroz njih. Svaka vrijednost lokacije ćelije množi se s razlučivosti ćelije te se također kompenzira za dijagonalno kretanje kako bi se došlo do ukupnog troška prolaska kroz ćeliju.",
	"@@Cost-Distance_Cost-Raster_tag1@@": "Vrijednosti <strong>Cost Raster</strong> mogu biti cijeli brojevi ili plutajuća točka, ali ne mogu biti negativne ili nula.",
	"@@Cost-Distance_Maximum-Distance_tag0@@": "Prag koji akumulativne vrijednosti troška ne mogu premašiti. Ako akumulativna udaljenost troška premaši tu vrijednost, izlazna vrijednost za lokaciju ćelije bit će „Bez podataka“. Maksimalna udaljenost definira obuhvat za koji se izračunavaju akumulativne udaljenosti troška. Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Množitelj koji se primjenjuje na vrijednosti troška.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućuje kontrolu način putovanja ili magnitudu izvora. Što je veći multiplikator, veći je trošak koji treba prebaciti kroz svaku ćeliju.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Vrijednosti moraju biti veća od nule. Zadana je vrijednost 1.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Cost-Distance_Source-Raster_tag0@@": "Obavezni ulazni raster lokacija izvora.",
	"@@Cost-Distance_Source-Raster_tag1@@": "To je raster koji identificira ćelije ili lokacije za koje će se posljednje akumulirani trošak udaljenosti izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Cost-Distance_Start-Cost_tag0@@": "Početni trošak od kojeg započinju izračuni troška. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih s izvorom. Umjesto započinjanja pri trošku od 0, algoritam troška započet će sa specificiranom vrijednosti.",
	"@@Cost-Distance_Start-Cost_tag1@@": "Vrijednost mora biti nula ili veća. Zadana je vrijednost 0.",
	"@@Cost-Distance_Travel-Direction_tag0@@": "Definira smjer putnika kada se primjenjuje stopa otpora izvora i početni trošak izvora.",
	"@@Cost-Distance_Travel-Direction_tag1@@": "<strong>From Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na ulaznom izvoru i kretati će se prema ćelijama bez izvora. To je zadano.",
	"@@Cost-Distance_Travel-Direction_tag3@@": "<strong>To Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na svakoj ćeliji bez izvora i kretati će se natrag prema ulaznom izvoru.",
	"@@Cost-Distance_Travel-Direction_tag5@@": "Ili navedite <strong>From Source</strong> ili <strong>To Source</strong> ključnu riječ koja će biti primijenjena na sve izvore, ili navedite polje u <strong>Source Raster</strong> koje sadrži ključne riječi za prepoznavanje smjera putovanja za svaki izvor. To polje mora sadržavati niz od ${FROM_SOURCE} do ${TO_SOURCE}.",
	"@@Curvature_Curvature-Type_tag0@@": "Vrsta zakrivljenja naglašava različite aspekte nagiba. Postoje tri opcije zakrivljenja:",
	"@@Curvature_Curvature-Type_tag1@@": "Planforma--Okomita je na smjer maksimalnog nagiba. Utječe na konvergenciju i divergenciju protoka preko površine.",
	"@@Curvature_Curvature-Type_tag2@@": "Profil--Paralelan je na nagib i navodi smjer maksimalnog nagiba. Utječe na ubrzanje i usporavanje protoka preko površine.",
	"@@Curvature_Curvature-Type_tag3@@": "Standard--Spaja i <strong>Profile</strong> i <strong>Planform</strong> krivine.",
	"@@Curvature_DEM_tag0@@": "Raster digitalnog modela visine terena (DEM).",
	"@@Curvature_Z-Factor_tag0@@": "Faktor z prilagođava mjerne jedinice za jedinice u kada su one različite od jedinica x,y u ulaznoj površini. Ako su jedinice x,y i jedinice z u istoj mjernoj jedinici, faktor z trebalo bi postaviti na 1. Vrijednosti z ulazne površine množe se prema faktoru z pri izračunavanju konačne izlazne površine. Na primjer, ako su vaše jedinice z u stopama, a vaše jedinice x,y u metrima, upotrijebili biste faktor z od 0,3048 za pretvaranje jedinica z iz stopa u metre, jer 1 stopa = 0,3048 metara.",
	"@@Divide_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Divide_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Divide_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Divide_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Divide_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Divide_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Divide_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Divide_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Divide_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Divide_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Divide_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Divide_Raster_tag0@@": "Unos čija će se vrijednost podijeliti drugim unosom.",
	"@@Divide_Raster_tag1@@": "Broj se može upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za ${Raster2}.",
	"@@Divide_Raster2_tag0@@": "Unos čija će se vrijednost podijeliti s prvim unosom.",
	"@@Divide_Raster2_tag1@@": "Broj se može upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za ${Raster}.",
	"@@Elevation-Void-Fill_DEM_tag0@@": "Ulazni DEM.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag0@@": "Vrijednost maksimalne širine upotrebljava se za specificiranje najveće veličine praznine koju želite ispuniti. Ako su širina ili visine graničnog okvira oko praznine veći od vrijednosti maksimalne širine praznine, praznina se neće ispunjavati. Jedinice ovog parametra iste su kao jedinice koje se upotrebljavaju u sustavu prostorne reference vaših podataka.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag1@@": "Ako je ovaj parametar prazan ili ima vrijednost od ${0}, neće se upotrebljavati maksimalna širina i sve će se praznine ispuniti. Vrijednost od ${-1} znači da neće doći do ispunjavanja praznine.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag0@@": "Maksimalni polumjer pretraživanja koji će se upotrebljavati za ispunjavanje praznine. Praznina koja je više udaljena, od bilo kojeg valjanog piksela, nego ova vrijednost praga ostat će kao praznina. Jedinice ovog parametra iste su kao jedinice koje se upotrebljavaju u sustavu prostorne reference vaših podataka.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag1@@": "Ako je vrijednost ovog parametra prazna, ${0} ili ${-1}, ovaj se parametar neće upotrebljavati.",
	"@@Equal-to_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Equal-to_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Equal-to_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Equal-to_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Equal-to_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Equal-to_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Equal-to_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Equal-to_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Equal-to_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Equal-to_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Equal-to_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Equal-to_Raster_tag0@@": "Unos koji će se upotrebljavati za usporedbu jednakosti putem drugog unosa.",
	"@@Equal-to_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Equal-to_Raster2_tag0@@": "Unos koji će se upotrebljavati za usporedbu jednakosti putem prvog unosa.",
	"@@Equal-to_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Euclidean-Allocation_Cellsize_tag0@@": "Veličina ćelije pri kojoj će se izraditi izlazni raster.",
	"@@Euclidean-Allocation_Cellsize_tag1@@": "Ako je veličina ćelije eksplicitno postavljena u <strong>Analysis Environments</strong> , to će biti zadana veličina ćelije. Ako ona nije postavljena, veličina izlazne ćelije bit će jednaka kao <strong>Source Raster</strong>.",
	"@@Euclidean-Allocation_Distance-Method_tag0@@": "Određuje hoće li se računati udaljenost upotrebom planarne (ravno tlo) ili geodezijske (elipsoid) metode.",
	"@@Euclidean-Allocation_Distance-Method_tag1@@": "Geodetski--Najkraća linija između dvije točke na zemaljskoj površini na sferoidu (elipsoid). Stoga bez obzira na projekciju unosa ili izlaza, rezultati se neće mijenjati. Jedna od upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju leta zrakoplova. To je poznato kao linija velikog kruga, ako se temelji na sferi, a ne na elipsoidu.",
	"@@Euclidean-Allocation_Distance-Method_tag2@@": "Planarno--Planarne mjere upotrebljavaju 2D kartezijansku matematiku za izračun duljine i područja. Opcija je dostupna samo kada se mjeri u projiciranom koordinatnom sustavu i kada će se 2D plan koordinatnog sustava upotrebljavati kao baza za mjerenje.",
	"@@Euclidean-Allocation_Maximum-Distance_tag0@@": "Definira prag udaljenosti unutar koje će se odrediti najbliži izvor. Ako udaljenost do najbližeg izbora premašuje tu vrijednost, izlaz za tu ćeliju bit će ${NoData}.",
	"@@Euclidean-Allocation_Maximum-Distance_tag1@@": "Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Euclidean-Allocation_Raster-Barriers_tag0@@": "Raster koji definira ograničenja.",
	"@@Euclidean-Allocation_Raster-Barriers_tag1@@": "Skup podataka mora sadržavati „${NoData}“ ako nema ograničenja. Ograničenja su predstavljena valjanim vrijednostima koje uključuju nulu.",
	"@@Euclidean-Allocation_Raster-Barriers_tag2@@": "Ograničenja je moguće definirati putem rastera cijelih brojeva ili plutajućih točaka.",
	"@@Euclidean-Allocation_Source-Field_tag0@@": "Polje se upotrebljava za dodjeljivanje vrijednosti do lokacija izvora. Treba biti vrsta cijelog broja. Ako je <strong>Value Raster</strong> postavljen, vrijednosti u tom ulazu imaju prednost nad bilo kojom postavkom za <strong>Source Field</strong>.",
	"@@Euclidean-Allocation_Source-Raster_tag0@@": "Obavezni ulazni raster koji identificira lokacije izvora. Na temelju euklidske udaljenosti najbliži izvor bit će određen za svaku ćeliju u izlazu",
	"@@Euclidean-Allocation_Source-Raster_tag1@@": "Vrsta ulaza može biti cijeli broj ili plutajuća točka.",
	"@@Euclidean-Allocation_Value-Raster_tag0@@": "Ulazni raster cijelih brojeva koji identificira vrijednosti zone koje će se upotrebljavati za svaku lokaciju ulaznog izvora. Za svaku ćeliju izvorne lokacije, vrijednost definirana sa <strong>Value Raster</strong> bit će dodijeljena svim ćelijama dodijeljenim na izvorno mjesto za računanje. <strong>Value Raster</strong> ima prednost nad bilo kojom postavkom za <strong>Source Field</strong>.",
	"@@Euclidean-Direction_Cellsize_tag0@@": "Veličina ćelije pri kojoj će se izraditi izlazni raster.",
	"@@Euclidean-Direction_Cellsize_tag1@@": "Ako je veličina ćelije eksplicitno postavljena u <strong>Analysis Environments</strong> , to će biti zadana veličina ćelije. Ako ona nije postavljena, veličina izlazne ćelije bit će jednaka kao <strong>Source Raster</strong>.",
	"@@Euclidean-Direction_Distance-Method_tag0@@": "Određuje hoće li se računati udaljenost upotrebom planarne (ravno tlo) ili geodezijske (elipsoid) metode.",
	"@@Euclidean-Direction_Distance-Method_tag1@@": "Geodetski--Najkraća linija između dvije točke na zemaljskoj površini na sferoidu (elipsoid). Stoga bez obzira na projekciju unosa ili izlaza, rezultati se neće mijenjati. Jedna od upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju leta zrakoplova. To je poznato kao linija velikog kruga, ako se temelji na sferi, a ne na elipsoidu.",
	"@@Euclidean-Direction_Distance-Method_tag2@@": "Planarno--Planarne mjere upotrebljavaju 2D kartezijansku matematiku za izračun duljine i područja. Opcija je dostupna samo kada se mjeri u projiciranom koordinatnom sustavu i kada će se 2D plan koordinatnog sustava upotrebljavati kao baza za mjerenje.",
	"@@Euclidean-Direction_Maximum-Distance_tag0@@": "Definira prag udaljenosti unutar koje će se izračunavati smjer do najbližeg izvora. Ako udaljenost do najbližeg izbora premašuje tu vrijednost, izlaz za tu ćeliju bit će ${NoData}.",
	"@@Euclidean-Direction_Maximum-Distance_tag1@@": "Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Euclidean-Direction_Raster-Barriers_tag0@@": "Raster koji definira ograničenja.",
	"@@Euclidean-Direction_Raster-Barriers_tag1@@": "Skup podataka mora sadržavati vrijednost Bez podataka ako nema ograničenja. Ograničenja su predstavljena valjanim vrijednostima koje uključuju nulu.",
	"@@Euclidean-Direction_Raster-Barriers_tag2@@": "Ograničenja je moguće definirati putem rastera cijelih brojeva ili plutajućih točaka.",
	"@@Euclidean-Direction_Source-Raster_tag0@@": "Obavezni ulazni raster koji identificira ćelije ili lokacije za koje će se Euklidski smjer izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Euclidean-Direction_Source-Raster_tag1@@": "Vrsta ulaza može biti cijeli broj ili plutajuća točka.",
	"@@Euclidean-Distance_Cellsize_tag0@@": "Veličina ćelije pri kojoj će se izraditi izlazni raster.",
	"@@Euclidean-Distance_Cellsize_tag1@@": "Ako je veličina ćelije eksplicitno postavljena u <strong>Analysis Environments</strong> , to će biti zadana veličina ćelije. Ako ona nije postavljena, veličina izlazne ćelije bit će jednaka kao <strong>Source Raster</strong>.",
	"@@Euclidean-Distance_Distance-Method_tag0@@": "Određuje hoće li se računati udaljenost upotrebom planarne (ravno tlo) ili geodezijske (elipsoid) metode.",
	"@@Euclidean-Distance_Distance-Method_tag1@@": "Geodetski--Najkraća linija između dvije točke na zemaljskoj površini na sferoidu (elipsoid). Stoga bez obzira na projekciju unosa ili izlaza, rezultati se neće mijenjati. Jedna od upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju leta zrakoplova. To je poznato kao linija velikog kruga, ako se temelji na sferi, a ne na elipsoidu.",
	"@@Euclidean-Distance_Distance-Method_tag2@@": "Planarno--Planarne mjere upotrebljavaju 2D kartezijansku matematiku za izračun duljine i područja. Opcija je dostupna samo kada se mjeri u projiciranom koordinatnom sustavu i kada će se 2D plan koordinatnog sustava upotrebljavati kao baza za mjerenje.",
	"@@Euclidean-Distance_Maximum-Distance_tag0@@": "Prag koji akumulativne vrijednosti udaljenosti ne mogu premašiti. Ako akumulativna Euklidska udaljenost troška premaši tu vrijednost, izlazna vrijednost za lokaciju ćelije bit će „Bez podataka“.",
	"@@Euclidean-Distance_Maximum-Distance_tag1@@": "Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Euclidean-Distance_Raster-Barriers_tag0@@": "Raster koji definira ograničenja.",
	"@@Euclidean-Distance_Raster-Barriers_tag1@@": "Skup podataka mora sadržavati „${NoData}“ ako nema ograničenja. Ograničenja su predstavljena valjanim vrijednostima koje uključuju nulu.",
	"@@Euclidean-Distance_Raster-Barriers_tag2@@": "Ograničenja je moguće definirati putem rastera cijelih brojeva ili plutajućih točaka.",
	"@@Euclidean-Distance_Source-Raster_tag0@@": "Obavezni ulazni raster koji identificira ćelije ili lokacije za koje će se Euklidska udaljenost izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Euclidean-Distance_Source-Raster_tag1@@": "Vrsta ulaza može biti cijeli broj ili plutajuća točka.",
	"@@Exp_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Exp_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Exp_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Exp_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Exp_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Exp_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Exp_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Exp_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Exp_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Exp_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Exp_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Exp_Raster_tag0@@": "Ulazna vrijednost za koju se pronalazi eksponencijal baze e.",
	"@@Exp10_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Exp10_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Exp10_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Exp10_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Exp10_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Exp10_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Exp10_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Exp10_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Exp10_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Exp10_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Exp10_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Exp10_Raster_tag0@@": "Ulazna vrijednost za koju se pronalazi eksponencijal baze 10.",
	"@@Exp2_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Exp2_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Exp2_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Exp2_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Exp2_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Exp2_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Exp2_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Exp2_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Exp2_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Exp2_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Exp2_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Exp2_Raster_tag0@@": "Ulazna vrijednost za koju se pronalazi eksponencijal baze 2.",
	"@@Extract-Bands_Band_tag0@@": "Odaberite pojase koje želite izdvojiti sa popisa na temelju <strong>Method</strong> upotrijebljene opcije parametra.",
	"@@Extract-Bands_Combination_tag0@@": "Kombinacija ili redoslijed kanala. Popis odabira ovisi o <strong>Method</strong> navedenoj opciji. Na primjer, ako je <strong>Method</strong> <strong>Band Names</strong> , možete odabrati kombinaciju plava, zelena i crvena kako biste izvukli sliku prirodne boje.",
	"@@Extract-Bands_Method_tag0@@": "Odaberite jednu od sljedećih metoda za izdvajanje kanala:",
	"@@Extract-Bands_Method_tag1@@": "<strong>Band IDs</strong>--Obilježje ili broj kanala, koji je jedinstven za svaki senzor. Oni mogu biti isti ako <strong>Band Names</strong>.",
	"@@Extract-Bands_Method_tag4@@": "<strong>Band Names</strong>--Upotrebljava naziv kanala koji predstavlja interval valne duljine na elektromagnetskom spektru (npr. Crveno, Bliski infracrveni, Termički infracrveni). To se može odrediti kao ID broj kanala.",
	"@@Extract-Bands_Method_tag6@@": "<strong>Band Wavelengths</strong>--Valna duljina na elektromagnetskom spektru.",
	"@@Extract-Bands_Missing-Band-Action_tag0@@": "Specificira radnju do koje će doći kada kanal unutar popisa izdvajanja kanala nije dostupan.",
	"@@Extract-Bands_Missing-Band-Action_tag1@@": "<strong>Best Match</strong>--Pronalazi najbolji dostupni kanal za upotrebu umjesto kanala koji nedostaje na temelju valne duljine, tako da funkcioniranje neće prestati",
	"@@Extract-Bands_Missing-Band-Action_tag3@@": "<strong>Fail</strong>--Ako u ulaznom skupu podataka nedostaje bilo koji pojas naveden u <strong>Band</strong> parametru, funkcija neće uspjeti.",
	"@@Extract-Bands_Raster_tag0@@": "Produkt rastere iz kojeg će se izdvajati kanal ili kanali.",
	"@@Fill_Raster_tag0@@": "Jedan kanal rastera visine terena.",
	"@@Fill_Z-Limit_tag0@@": "Maksimalna razlika u visini terena između bazena i njegovih odvodnih točaka koje se ispunjavaju.",
	"@@Fill_Z-Limit_tag1@@": "Osim ako vrijednost nije specificirana za ovaj parametar, svi će se bazeni ispuniti, bez obzira na dubinu.",
	"@@Fill_Z-Limit_tag2@@": "Vrijednost za <strong>Z Limit</strong> mora biti veća od nula.",
	"@@Float_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Float_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Float_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Float_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Float_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Float_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Float_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Float_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Float_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Float_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Float_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Float_Raster_tag0@@": "Ulazni raster koji će se pretvoriti u plutajuću točku.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smjer protoka iz svake ćelije.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag1@@": "Raster smjera protoka može se izraditi upotrebom funkcije <strong>Flow Direction</strong>.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag0@@": "Definira vrstu ulaznog rastera smjera strujanja.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Ulazni raster smjera strujanja je vrste D8. To je zadano.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Ulazni raster smjera strujanja je vrste D-beskonačnost (DINF).",
	"@@Flow-Accumulation_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Ulazni raster smjera strujanja je vrste Smjer više protoka (MFD).",
	"@@Flow-Accumulation_Output-Data-Type_tag0@@": "Izlazni raster akumulacije može biti cijeli broj ili plutajuća točka.",
	"@@Flow-Accumulation_Output-Data-Type_tag1@@": "<strong>Float</strong>--Izlazni raster bit će plutajuća točka. To je zadano.",
	"@@Flow-Accumulation_Output-Data-Type_tag3@@": "<strong>Integer</strong>--Izlazni raster bit će cijeli broj.",
	"@@Flow-Accumulation_Weight-Raster_tag0@@": "Opcionalni ulazni raster za primjenu težine na svaki piksel.",
	"@@Flow-Accumulation_Weight-Raster_tag1@@": "Ako se ne specificira raster pondera, zadana težina 1 primijenit će se na svaki piksel.",
	"@@Flow-Direction_Flow-Direction-Type_tag0@@": "Definira vrstu ulaznog rastera smjera strujanja.",
	"@@Flow-Direction_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Ulazni raster smjera strujanja je vrste D8. To je zadano.",
	"@@Flow-Direction_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Ulazni raster smjera strujanja je vrste D-beskonačnost (DINF).",
	"@@Flow-Direction_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Ulazni raster smjera strujanja je vrste Smjer više protoka (MFD).",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag0@@": "Specificira hoće li se rubni pikseli uvijek kretati prema van ili pratiti pravila uobičajenog protoka.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag1@@": "<strong>No</strong>--Ako je maksimalno ispuštanje unutar rubnog piksela veće od nule, smjer protoka odredit će se na uobičajeni način; u suprotnom, smjer protoka bit će prema rubu. Pikseli koji bi se trebali kretati prema unutra, prema rubu rastera površine kretati će se tako. To je zadano.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag3@@": "<strong>Yes</strong>--Svi pikseli na rubu rastera površine protjecat će prema vani od rastera površine.",
	"@@Flow-Direction_Raster_tag0@@": "Ulazni raster koji predstavlja kontinuiranu površinu visine terena.",
	"@@Flow-Distance_Distance-Type_tag0@@": "Određuje izračunava li se okomita ili vodoravna komponenta udaljenosti protoka.",
	"@@Flow-Distance_Distance-Type_tag1@@": "<strong>Horizontal</strong>--Izračuni udaljenosti protoka predstavljaju vodoravnu komponentu udaljenosti protoka od svakog piksela u domeni piksela na strujanju u koje protječu.",
	"@@Flow-Distance_Distance-Type_tag3@@": "<strong>Vertical</strong>--Izračuni udaljenosti protoka predstavljaju okomitu komponentu udaljenosti protoka od svakog piksela u domeni piksela na strujanju u koje protječu. To je zadano.",
	"@@Flow-Distance_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smjer protoka iz svakog piksela.",
	"@@Flow-Distance_Flow-Direction-Raster_tag1@@": "Ako je pružen raster smjera protoka, smjer(ovi) niz nagib bit će ograničen(i) na one definirane ulaznim smjerovima protoka.",
	"@@Flow-Distance_Flow-Direction-Raster_tag2@@": "Raster smjera protoka može se izraditi upotrebom funkcije Smjer protoka.",
	"@@Flow-Distance_Flow-Direction-Type_tag0@@": "Definira vrstu ulaznog rastera smjera strujanja.",
	"@@Flow-Distance_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Ulazni raster smjera strujanja je vrste D8. To je zadano.",
	"@@Flow-Distance_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Ulazni raster smjera strujanja je vrste D-beskonačnost (DINF).",
	"@@Flow-Distance_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Ulazni raster smjera strujanja je vrste Smjer više protoka (MFD).",
	"@@Flow-Distance_Statistics-Type_tag0@@": "Određuje vrstu statistike koja se upotrebljava za izračunavanje udaljenosti protoka preko više putanja protoka. Ako postoji samo jedna putanja protoka iz svake ćelije do ćelije na strujanju, sve vrste statistike davat će iste rezultate.",
	"@@Flow-Distance_Statistics-Type_tag1@@": "<strong>Minimum</strong>--Ako postoji više putanja protoka, izračunava se minimalna udaljenost protoka. To je zadano.",
	"@@Flow-Distance_Statistics-Type_tag3@@": "<strong>Weighted Mean</strong>--Ako postoji više putanja protoka, izračunava se ponderirana srednja vrijednost udaljenosti protoka. Proporcija protoka iz ćelije do njenih silaznih susjednih ćelija upotrebljava se kao težina za izračunavanje ponderirane srednje vrijednosti.",
	"@@Flow-Distance_Statistics-Type_tag5@@": "<strong>Maximum</strong>--Kada postoji više putanja protoka, izračunava se maksimalna udaljenost protoka.",
	"@@Flow-Distance_Stream-Raster_tag0@@": "Protok ulaznog rastera koji predstavlja mrežu linearnog protoka.",
	"@@Flow-Distance_Surface-Raster_tag0@@": "Ulazni raster koji predstavlja kontinuiranu površinu visine terena.",
	"@@Flow-Length_Direction-of-Measurement_tag0@@": "Smjer mjerenja uz putanju protoka.",
	"@@Flow-Length_Direction-of-Measurement_tag1@@": "<strong>Downstream</strong>--Izračunava udaljenost padine uz putanju protoka, iz svake ćelije do bazena ili izlaza na rubu rastera.",
	"@@Flow-Length_Direction-of-Measurement_tag3@@": "<strong>Upstream</strong>--Izračunava najdužu uzlaznu udaljenost uz putanju protoka, iz svake ćelije do vrha granice odvodnje.",
	"@@Flow-Length_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smjer protoka iz svake ćelije.",
	"@@Flow-Length_Flow-Direction-Raster_tag1@@": "Raster smjera protoka može se izraditi upotrebom funkcije <strong>Flow Direction</strong>.",
	"@@Flow-Length_Weight-Raster_tag0@@": "Opcionalni ulazni raster za primjenu težine na svaku ćeliju.",
	"@@Flow-Length_Weight-Raster_tag1@@": "Ako se ne specificira raster pondera, zadana težina 1 primijenit će se na svaku ćeliju.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag0@@": "Označava hoće li statistički izračun zanemariti vrijednosti ${NoData}.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag1@@": "<strong>Checked</strong>--Određuje da ako postoji vrijednost ${NoData} unutar susjedstva, vrijednost ${NoData} bit će zanemarena. Samo ćelije unutar susjedstva koje imaju vrijednosti podataka upotrebljavat će se pri određivanju izlazne vrijednosti. To je zadano.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag3@@": "<strong>Unchecked</strong>--Određuje da ako u susjedstvu postoji vrijednost ${NoData}, izlaz za ćeliju koja se obrađuje bit će ${NoData}.",
	"@@Focal-Statistics_Neighborhood_tag0@@": "Oblik područja oko svake ćelije koje se upotrebljava za izračun statistike.",
	"@@Focal-Statistics_Neighborhood_tag1@@": "Svako susjedstvo ima dodatne parametre s kojima se definira oblik.",
	"@@Focal-Statistics_Neighborhood_tag2@@": "Prsten, unutarnji polumjer, vanjski polumjer",
	"@@Focal-Statistics_Neighborhood_tag3@@": "Krug, polumjer",
	"@@Focal-Statistics_Neighborhood_tag4@@": "Nepravilno, širina, visina, vrijednosti susjedstva",
	"@@Focal-Statistics_Neighborhood_tag5@@": "Pravokutnik, širina, visina",
	"@@Focal-Statistics_Neighborhood_tag6@@": "Kriška, polumjer, početni kut, krajnji kut",
	"@@Focal-Statistics_Neighborhood_tag7@@": "Težina, širina, visina, vrijednosti susjedstva",
	"@@Focal-Statistics_Neighborhood_tag8@@": "Nepravilno susjedstvo omogućuje vam da specificirate nepravilno oblikovana susjedstva oko ćelije koja se obrađuje. Upotrijebite tablicu Vrijednosti susjedstva za definiranje oblika jezgre susjedstva. Vrijednost 0 za položaj ćelije naznačuje da ćelija nije dio susjedstva i neće se upotrebljavati za obradu. Vrijednost 1 naznačuje da je njena odgovarajuća ćelija (i vrijednost) član susjedstva.",
	"@@Focal-Statistics_Neighborhood_tag9@@": "Težina susjedstva slična je vrsti nepravilnog susjedstva tako što vam omogućuje da definirate nepravilno susjedstvo oko ćelije koja se obrađuje, ali osim toga ona vam omogućuje i da primijenite težine na ulazne vrijednosti. Vrijednosti u težini jezgre specificiraju koji bi se položaji ćelije trebali uključiti unutar susjedstva i težine po kojima bi se trebali pomnožiti. Upotrijebite vrijednost 0 za izuzimanje ćelije iz obrade. Pozitivne, negativne i decimalne vrijednosti važeće su opcije koje se mogu upotrebljavati kao težina. Za vrstu Težina susjedstva podržane su samo statistike Srednja, Standardna devijacija i Zbroj.",
	"@@Focal-Statistics_Percentile-Value_tag0@@": "Označava koji postotak izračunati kada je <strong>Percentile</strong> odabran kao vrsta statistike. Zadana je vrijednost 90, za 90. postotak.",
	"@@Focal-Statistics_Percentile-Value_tag3@@": "Vrijednosti se mogu kretati od 0 do 100. Nulti (0) postotak u osnovi je jednak minimalnoj statistici, dok je stoti (100) postotak jednak maksimalnoj, uz iznimku da će rezultat biti plutajuća točka. Vrijednost 50 u osnovi će proizvesti istu vrijednost kao srednja statistika.",
	"@@Focal-Statistics_Raster_tag0@@": "Obavezni ulazni raster.",
	"@@Focal-Statistics_Statistics-Type_tag0@@": "Vrsta statistike koja se izračunava.",
	"@@Focal-Statistics_Statistics-Type_tag1@@": "<strong>Majority</strong>--Izračunava većinu (vrijednosti koje se javljaju najčešće) ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag3@@": "<strong>Maximum</strong>--Izračunava maksimalnu (najveće vrijednosti) ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag5@@": "<strong>Mean</strong>--Izračunava srednju (prosječnu vrijednost) ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag7@@": "<strong>Median</strong>--Izračunava medijan ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag9@@": "<strong>Minimum</strong>--Izračunava minimalnu (najmanje vrijednosti) ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag11@@": "<strong>Minority</strong>--Izračunava manjinu (vrijednosti koje se javljaju najrjeđe) ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag13@@": "<strong>Percentile</strong>--Izračunava postotak ćelija u susjedstvu. Možete odrediti koji postotak izračunati parametrom <strong>Percentile Value</strong>.",
	"@@Focal-Statistics_Statistics-Type_tag17@@": "<strong>Range</strong>--Izračunava raspon (razliku između najveće i najmanje vrijednosti) ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag19@@": "<strong>Standard Deviation</strong>--Izračunava standardno odstupanje ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag21@@": "<strong>Sum</strong>--Izračunava zbroj (ukupnu vrijednost svih vrijednosti) ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag23@@": "<strong>Variety</strong>--Izračunava različitost (broj jedinstvenih vrijednosti) ćelija u susjedstvu.",
	"@@Focal-Statistics_Statistics-Type_tag25@@": "Ako je ulazni raster plutajuća točka, dostupne su samo vrste Srednja, Maksimum, Medijan, Minimum, Postotak, Raspon, Standardna devijacija i Zbroj statistika.",
	"@@Focal-Statistics_Statistics-Type_tag26@@": "Za vrste Srednja, Medijan, Postotak i Standardna devijacija izlaz je uvijek plutajuća točka.",
	"@@Focal-Statistics_Statistics-Type_tag27@@": "Zadana vrsta statistike je Srednja.",
	"@@Geometric_Constant-Z_tag0@@": "Specificira stalnu visinu terena koja će se upotrebljavati za funkciju Geometrija.",
	"@@Geometric_DEM_tag0@@": "Specificira DEM koji će se upotrebljavati za funkciju Geometrija. Možete upotrebljavati DEM koji se nalazi unutar mozaičnog skupa podataka kao skup rasterskih podataka ili kao mozaični skup podataka čiji je izlaz DEM.",
	"@@Geometric_Geoid_tag0@@": "Većina skupova podataka o nadmorskoj visini, kao što su USGS NED ili ArcGIS Online World Elevation, ortrometrijske su visine, tako da je potrebno odabrati Ispravak geoida za kompatibilnost sa satelitskim RPC-ovima, koji zahtijevaju elipsoidne visine. Potvrdite <strong>Geoid</strong> za primjenu ispravka geoida (EGM96) za vrijednosti z, osim ako vaš DEM već nije referenciran na elipsoidne visine.",
	"@@Geometric_Method_tag0@@": "Odaberite metodu visine terena za geometrijsku funkciju:",
	"@@Geometric_Method_tag1@@": "Upotreba konstante Z--Specificira stalnu visinu terena za provođenje funkcije Geometrija.",
	"@@Geometric_Method_tag2@@": "Upotreba DEM-a--Specificira DEM za provođenje funkcije Geometrija.",
	"@@Geometric_Raster_tag0@@": "Ulazni raster.",
	"@@Geometric_Z-Factor_tag0@@": "Racionalni polinominalni koeficijenti (RPC-ovi) satelita skalirani su za skupove podataka visine terena s okomitim visinama u metrima. Ako vaša nadmorska visina koristi druge okomite jedinice, unesite <strong>Z Factor</strong> da biste je proširili na metre. Na primjer, ako su vaše jedinice visine terena u stopama, trebali biste upotrebljavati vrijednost od 0,3048 za konverziju jedinica visine terena iz stopa u metre.",
	"@@Geometric_Z-Offset_tag0@@": "Osnovna vrijednost za dodavanje vrijednosti visine terena u DEM-u. To bi se moglo upotrebljavati za pomak vrijednosti visine terena koji ne započinju na razini mora.",
	"@@Geometric_Tolerance_tag0@@": "Navedite maksimalnu podnošljivu pogrešku u geometrijskoj funkciji, danu u broju piksela. Zadano za NITF (NCDRD) tip rastera je dva.",
	"@@Grayscale_Raster_tag0@@": "Ulazni raster.",
	"@@Grayscale_Conversion-Parameters_tag0@@": "Težine za svaki kanal od kojeg se sastoji ulazni raster.",
	"@@Greater-Than_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Greater-Than_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Greater-Than_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Greater-Than_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Greater-Than_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Greater-Than_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Greater-Than_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Greater-Than_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Greater-Than_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Greater-Than_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Greater-Than_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Greater-Than_Raster_tag0@@": "Unos se testira kako bi se odredilo je li veći od drugog unosa.",
	"@@Greater-Than_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Greater-Than_Raster2_tag0@@": "Unos uz koji se prvi unos testira da bude veći od.",
	"@@Greater-Than_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Greater-Than-Equal_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Greater-Than-Equal_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Greater-Than-Equal_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Greater-Than-Equal_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Greater-Than-Equal_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Greater-Than-Equal_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Greater-Than-Equal_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Greater-Than-Equal_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Greater-Than-Equal_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Greater-Than-Equal_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Greater-Than-Equal_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Greater-Than-Equal_Raster_tag0@@": "Unos se testira kako bi se odredilo je li veći od drugog unosa ili jednak njemu.",
	"@@Greater-Than-Equal_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Greater-Than-Equal_Raster2_tag0@@": "Unos uz koji se prvi unos testira da bude veći od ili jednak njemu.",
	"@@Greater-Than-Equal_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Heat-Index_Heat-Index-Units_tag0@@": "Jedinica mjere povezana s izlaznim rasterom. Dostupni izlazi su Celzijus, Fahrenheit i Kelvin.",
	"@@Heat-Index_Relative-Humidity-Raster_tag0@@": "Jednokanalni raster u kojem vrijednosti piksela predstavljaju relativnu vlažnost kao postotnu vrijednost između 0 i 100.",
	"@@Heat-Index_Temperature-Raster_tag0@@": "Jednokanalni raster u kojem vrijednosti piksela predstavljaju ambijentalnu temperaturu zraka.",
	"@@Heat-Index_Temperature-Units_tag0@@": "Jedinica mjere povezana s izlaznom temperaturom rasterom. Dostupne su jedinice izlaza Celzijus, Fahrenheit i Kelvin.",
	"@@Hillshade_Altitude_tag0@@": "Nadmorska visina je nagib visine terena sunca iznad horizonta i u rasponu je od 0 do 90 stupnjeva. Vrijednost od 0 stupnjeva naznačuje da je sunce na horizontu, tj. Na istoj horizontalnoj ravnini kao i referentni okvir. Vrijednost od 90 naznačuje da se sunce nalazi izravno iznad glave.",
	"@@Hillshade_Altitude_tag1@@": "Ovaj parametar vrijedi samo kada je <strong>Hillshade Type</strong> <strong>Traditional</strong> . Zadana je vrijednost 45 stupnjeva iznad horizonta.",
	"@@Hillshade_Azimuth_tag0@@": "Azimut je relativni položaj sunca uz horizont (u stupnjevima). Taj je položaj naznačen kutom sunca koji je izmjeren u smjeru kretanja kazaljke na satu prema sjeveru. Azimut od 0 stupnjeva naznačava sjever, isto je na 90 stupnjeva, jug na 180 stupnjeva, a zapad na 270 stupnjeva.",
	"@@Hillshade_Azimuth_tag1@@": "Ovaj parametar vrijedi samo kada je <strong>Hillshade Type</strong> <strong>Traditional</strong> . Zadana je vrijednost 315 stupnjeva, i to od sjeverozapada.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag0@@": "Upotrebom ove opcije izbjegavaju se artefakti ponovnog uzorkovanja do kojih može doći uz rubove rastera. Izlazni pikseli uz rub rastere ili pored piksela Bez podataka bit će popunjeni vrijednosti Bez podataka; zbog toga se preporučuje da se ovaj parametar upotrebljava samo uz mozaične skupove podataka visine terena koji mogu imati preklapanja. Kada su dostupni preklapajući pikseli, područje Bez podataka prikazivat će vrijednosti preklapajućih piksela umjesto praznih piksela.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag1@@": "Neoznačeno--bilinearno ponovno uzorkovanje primjenit će se ujednačeno za ponovno uzorkovanje nijansiranja brda. Upotrijebite ovu opciju kada je mozaični skup podataka koji sadrži vaše rasterske podatke visine terena granično pridružen. To je zadano.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag2@@": "Označeno--Bilinearno ponovno uzorkovanje upotrebljavat će se unutar nijansiranja brda, osim uz rubove rastera ili pored piksela Bez podataka. Ti će pikseli biti popunjeni parametrom Bez podataka i prikazivat će vrijednosti preklapajućih piksela, te će tako smanjiti učinke oštrog ruba koji bi se u suprotnom mogli pojaviti. Upotrijebite ovu opciju kada se mozaični skup podataka koji sadrži vaše rasterske podatke visine terena sastoji od preklapajućih stavki ili ploča.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag3@@": "Rezultati funkcije mogu ovisiti o podacima. Ako opazite granične artefakte ploče u izlazu, odaberite alternativni uvjet potvrdnog okvira.",
	"@@Hillshade_Hillshade-Type_tag0@@": "Upravlja izvorom osvjetljenja za nijansiranje brda:",
	"@@Hillshade_Hillshade-Type_tag1@@": "Tradicionalno--Izračunava nijansiranje brda iz jednog smjera osvjetljenja. To je zadano. Možete postaviti <strong>Azimuth</strong> i <strong>Altitude</strong> za kontrolu lokacije izvora svjetlosti.",
	"@@Hillshade_Hillshade-Type_tag6@@": "Višesmjerno--Kombinira svjetlo iz više izvora za predstavljanje poboljšane vizualizacije terena.",
	"@@Hillshade_Pixel-Size-Factor_tag0@@": "Faktor veličine piksela brine se za izmjene u mjerilu jer preglednik povećava i smanjuje prikaz karte. Upravlja brzinom kojom se mijenja <strong>Z Factor</strong>.",
	"@@Hillshade_Pixel-Size-Factor_tag3@@": "Ovaj parametar vrijedi samo kada je <strong>Scaling</strong> tip <strong>Adjusted</strong> . Zadana vrijednost je 0,024.",
	"@@Hillshade_Pixel-Size-Power_tag0@@": "Snaga veličine piksela brine se za izmjene nadmorske visine (ili mjerila) jer preglednik povećava i smanjuje prikaz karte. Ona se eksponencijalno primjenjuje na pojam veličine piksela u jednadžbi koja upravlja stopu pri kojoj se <strong>Z Factor</strong> mijenja za izbjegavanje znatnog gubitka reljefa.",
	"@@Hillshade_Pixel-Size-Power_tag3@@": "Ovaj parametar vrijedi samo kada je <strong>Scaling</strong> tip <strong>Adjusted</strong> . Zadana vrijednost je 0,664.",
	"@@Hillshade_Raster_tag0@@": "Ulazni skup podataka visine terena.",
	"@@Hillshade_Scaling_tag0@@": "Osjenčeni rezultat dinamično se skalira prilagođavanjem faktora z upotrebom jedne od ove dvije opcije:",
	"@@Hillshade_Scaling_tag1@@": "Adjusted--Ovo primjenjuje nelinearno podešavanje koristeći zadane vrijednosti <strong>Pixel Size Power</strong> i <strong>Pixel Size Factor</strong>, koje prihvaćaju široku raznolikost promjena visine (mjerila) dok gledatelj uvećava i umanjuje. <strong>Adjusted</strong> postavka parametra preporučuje se kada se upotrebljava skup podataka diljem svijeta.",
	"@@Hillshade_Scaling_tag8@@": "Nema--Neće se primjenjivati skaliranje. To je idealno za pojedinačni skup rasterskih podataka koji pokriva lokalno područje. To nije preporučeno za skupove podataka diljem svijeta s velikim varijacama u visini terena ili kartama s više skala jer će to proizvesti reljef terena s malo varijacija pri malim mjerilima.",
	"@@Hillshade_Z-Factor_tag0@@": "Z-faktor je faktor za skaliranje koji se upotrebljava za pretvaranje vrijednosti visine terena za dvije svrhe:",
	"@@Hillshade_Z-Factor_tag1@@": "Pretvara jedinice visine terena (kao što su metri ili stope) u horizontalne koordinatne jedinice skupa podataka, koje mogu biti stope, metri ili stupnjevi.",
	"@@Hillshade_Z-Factor_tag2@@": "Dodaje vertikalno uveličavanje radi vizualnog efekta.",
	"@@Int_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Int_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Int_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Int_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Int_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Int_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Int_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Int_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Int_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Int_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Int_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Int_Raster_tag0@@": "Ulazni raster koji će se pretvoriti u cijeli broj.",
	"@@Interpolate-Irregular-Data_Cellsize_tag0@@": "Veličina ćelije za izlazni raster automatski će se detektirati; međutim, vi to možete promijeniti. Dok je veličinu ćelije moguće promijeniti, obuhvat skupa rasterskih podataka ostaje isti.",
	"@@Interpolate-Irregular-Data_Input-Samples_tag0@@": "Podaci ulaznih točaka.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag0@@": "Postoje četiri metode ponovnog uzorkovanja za ovu funkciju:",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag1@@": "<strong>Inverse Distance Weighted</strong>--Određuje vrijednosti ćelije upotrebom linearno ponderirane kombinacije skupa uzorka točaka ili ćelija. Ponderiranje je funkcija inverzne udaljenosti od poznate točke ili ćelije.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag3@@": "<strong>Linear Tinning</strong>--Upotrebljava trianguliranu nepravilnu mrežu iz središnjih točaka svake ćelije u nepravilnom rasteru za interpolaciju površine koja se zatim pretvara u pravilni raster.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag5@@": "<strong>Natural Neighbor</strong>--Pronalazi najbliži podskup ulaznih uzoraka za točke upita i na njih primjenjuje težine na temelju proporcijalnih područja interpolaciji vrijednosti.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag7@@": "<strong>Nearest Neighbor</strong>--Izračunava vrijednost piksela koristeći najbliži piksel. Ako ne postoji piksel izvora, u izlazu se ne može izraditi novi piksel. To je zadano.",
	"@@Interpolate-Irregular-Data_Search-Radius_tag0@@": "Identificira broj piksela koji će se uključiti za odabranu metodu ponovnog uzorkovanja. Zadana je vrijednost ${3} piksel(a).",
	"@@Interpolate-Irregular-Data_Value-Field_tag0@@": "Ako odaberete klasu točkastog geoobjekta kao unos, trebat ćete identificirati polje u atributnoj tablici s vrijednosti točaka",
	"@@Is-Null_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Is-Null_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Is-Null_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Is-Null_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Is-Null_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Is-Null_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Is-Null_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Is-Null_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Is-Null_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Is-Null_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Is-Null_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Is-Null_Raster_tag0@@": "Ulazni raster testira se za identificiranje ćelija koje su ${NoData} (nula).",
	"@@Is-Null_Raster_tag1@@": "Unos može biti cijeli broj ili plutajuća točka.",
	"@@Key-Metadata_Band-Names_tag0@@": "Ovo se upotrebljava za korekciju naziva kanala rastera. Radi se o nizu odijeljenom zarezima koji predstavlja ažurirane nazive kanala.",
	"@@Key-Metadata_Band-Names_tag1@@": "Ovaj je parametar neobavezan.",
	"@@Key-Metadata_Metadata-JSON_tag0@@": "Ključni metapodaci za injektiranje u izlazni raster opisani kao JSON niz koji predstavlja zbir parova ključne vrijednosti. U nastavku je primjer JSON niza koji se može upotrebljavati kao unos ove funkcije. Svi unosi za ovaj parametar trebali bi imati isti format.",
	"@@Key-Metadata_Metadata-JSON_tag1@@": "JSON niz koji predstavlja ključne metapodatke",
	"@@Key-Metadata_Metadata-JSON_tag2@@": "{ \"CloudCover\": 4, \"BandProperties\":[ { \"BandName\": \"Blue\", \"WavelengthMin\": 445, \"WavelengthMax\": 516 }, { \"BandName\": \"Green\", \"WavelengthMin\": 506, \"WavelengthMax\": 595 }, ]}",
	"@@Key-Metadata_Property-Name_tag0@@": "Naziv razine skupa podataka ključnih vlasništva koji se korigira.",
	"@@Key-Metadata_Raster_tag0@@": "Raster ili mozaični skup podataka koji sadrže ključne metapodatke koje želite umetnuti ili korigirati.",
	"@@Key-Metadata_Value_tag0@@": "Vrijednost korekcije razine skupa podataka ključnog vlasništva koju želite postaviti.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag0@@": "Ova parametar simulira porast pokušaja za nadilaženje troškova kako se akumulativni trošak povećava. Upotrebljava se za modeliranje umora putnika. Rastući akumulativni trošak za dosezanje ćelije multiplicira se stopom otpora i dodaje trošku za prebacivanje u narednu ćeliju.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag1@@": "Modificirana je verzija formule za složenu kamatnu stopu koja se upotrebljava za izračunavanje vidljivog troška prebacivanja kroz ćelije. Kako se vrijednost stope otpora povećava, povećava se trošak ćelija koje se posjećuju kasnije. Što je veća stopa otpora, viši je trošak za dosezanje sljedeće ćelije, a on je složen za svako naredno kretanje. Budući da je stopa otpora slična složenoj stopi i općenito su vrijednosti akumulativnog troška jako dugačke, predlažu se male stope otpora, kao što je 0,005 ili čak i manje, ovisno o vrijednostima akumulativnog troška.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Least-Cost-Path_Capacity_tag0@@": "Definira kapacitet troška za putnika za izvor. Izračuni troška nastavljaju se za svaki izvor dok se ne dosegne specificirani kapacitet.",
	"@@Least-Cost-Path_Capacity_tag1@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Least-Cost-Path_Cost-Raster_tag0@@": "Obavezni ulazni raster koji određuje trošak ili impendanciju za planimetrijsko kretanje do svake ćelije. Vrijednost na svakoj lokaciji ćelije predstavlja troškove po jedinici za udaljenost kretanja kroz njih. Svaka vrijednost lokacije ćelije množi se s razlučivosti ćelije te se također kompenzira za dijagonalno kretanje kako bi se došlo do ukupnog troška prolaska kroz ćeliju.",
	"@@Least-Cost-Path_Cost-Raster_tag1@@": "Vrijednosti <strong>Cost Raster</strong> mogu biti cijeli brojevi ili plutajuća točka, ali ne mogu biti negativne ili nula.",
	"@@Least-Cost-Path_Destination-Field_tag0@@": "Polje koje se upotrebljava za dobivanje vrijednosti za lokacije odredišta.",
	"@@Least-Cost-Path_Destination-Raster_tag0@@": "Obavezni ulazni raster koji identificira piksele od kojih se određuje najpovoljnija putanja određuje se do najpovoljnijeg izvora. Taj se unos sastoji od piksela koji imaju valjane vrijednosti i preostalih piksela koji moraju biti dodijeljeni stavci ${NoData}. Valjane su vrijednosti od 0.",
	"@@Least-Cost-Path_Maximum-Distance_tag0@@": "Prag koji akumulativne vrijednosti troška ne mogu premašiti. Ako akumulativna udaljenost troška premaši tu vrijednost, izlazna vrijednost za lokaciju ćelije bit će ${NoData}. Maksimalna udaljenost definira obuhvat za koji se izračunavaju akumulativne udaljenosti troška. Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag0@@": "Ovaj parametar omogućuje kontrolu način putovanja ili magnitudu izvora. Što je veći multiplikator, veći je trošak koji treba prebaciti kroz svaku ćeliju.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag1@@": "Vrijednosti moraju biti veća od nule. Zadana je vrijednost 1.",
	"@@Least-Cost-Path_Path-Type_tag0@@": "Ključna riječ koja određuje način na koji će se vrijednosti i zone u podacima ulaznog odredišta tumačiti u izračunu troška putanje:",
	"@@Least-Cost-Path_Path-Type_tag1@@": "<strong>Best Single</strong>--Za sve piksele u podacima ulaznog odredišta najpovoljnija putanja izvodi se od piksela s minimumom povoljnih putanja do lokacije ćelije.",
	"@@Least-Cost-Path_Path-Type_tag3@@": "<strong>Each Cell</strong>--Putanja najmanjeg troška određena je za svaki piksel s valjanom vrijednosti u ulaznim podacima odredišta i sprema se u izlazni raster. Sve ćelije podataka ulaznog odredišta tretiraju se zasebno i određuje se najpovoljnija putanja od svake ćelije.",
	"@@Least-Cost-Path_Path-Type_tag5@@": "<strong>Each Zone</strong>--Putanja najmanjeg troška određena je za svaku zonu u ulaznim podacima odredišta i sprema se u izlazni raster. Putanja najmanjeg troška za svaku zonu počinje od piksela s najpovoljnijom prosječnom udaljenosti u zoni.",
	"@@Least-Cost-Path_Source-Raster_tag0@@": "To je obavezni ulazni raster koji identificira ćelije ili lokacije za koje će se posljednje akumulirani trošak udaljenosti izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Least-Cost-Path_Start-Cost_tag0@@": "Početni trošak od kojeg započinju izračuni troška. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih s izvorom. Umjesto započinjanja pri trošku od 0, algoritam troška započet će sa specificiranom vrijednosti.",
	"@@Least-Cost-Path_Start-Cost_tag1@@": "Vrijednost mora biti nula ili veća. Zadana je vrijednost 0.",
	"@@Least-Cost-Path_Travel-Direction_tag0@@": "Definira smjer putnika kada se primjenjuje stopa otpora izvora i početni trošak izvora.",
	"@@Least-Cost-Path_Travel-Direction_tag1@@": "<strong>From Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na ulaznom izvoru i kretati će se prema ćelijama bez izvora. To je zadano.",
	"@@Least-Cost-Path_Travel-Direction_tag3@@": "<strong>To Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na svakoj ćeliji bez izvora i kretati će se natrag prema ulaznom izvoru.",
	"@@Least-Cost-Path_Travel-Direction_tag5@@": "Ili navedite <strong>From Source</strong> ili <strong>To Source</strong> ključnu riječ koja će biti primijenjena na sve izvore, ili navedite polje u <strong>Source Raster</strong> koje sadrži ključne riječi za prepoznavanje smjera putovanja za svaki izvor. To polje mora sadržavati niz od ${FROM_SOURCE} do ${TO_SOURCE}.",
	"@@Less-Than_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Less-Than_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Less-Than_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Less-Than_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Less-Than_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Less-Than_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Less-Than_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Less-Than_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Less-Than_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Less-Than_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Less-Than_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Less-Than_Raster_tag0@@": "Unos se testira kako bi se odredilo je li manji od drugog unosa.",
	"@@Less-Than_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Less-Than_Raster2_tag0@@": "Unos uz koji se prvi unos testira da bude manji od.",
	"@@Less-Than_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Less-Than-Equal_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Less-Than-Equal_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Less-Than-Equal_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Less-Than-Equal_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Less-Than-Equal_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Less-Than-Equal_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Less-Than-Equal_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Less-Than-Equal_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Less-Than-Equal_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Less-Than-Equal_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Less-Than-Equal_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Less-Than-Equal_Raster_tag0@@": "Unos se testira kako bi se odredilo je li manji od drugog unosa ili jednak njemu.",
	"@@Less-Than-Equal_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Less-Than-Equal_Raster2_tag0@@": "Unos uz koji se prvi unos testira da bude manji od ili jednak njemu.",
	"@@Less-Than-Equal_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Ln_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Ln_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Ln_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Ln_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Ln_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Ln_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Ln_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Ln_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Ln_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Ln_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Ln_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Ln_Raster_tag0@@": "Ulazne vrijednosti za koje se pronalazi prirodni logaritam (Ln).",
	"@@Log10_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Log10_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Log10_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Log10_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Log10_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Log10_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Log10_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Log10_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Log10_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Log10_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Log10_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Log10_Raster_tag0@@": "Ulazne vrijednosti za koje se pronalazi baza 10 logaritma.",
	"@@Log2_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Log2_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Log2_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Log2_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Log2_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Log2_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Log2_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Log2_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Log2_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Log2_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Log2_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Log2_Raster_tag0@@": "Ulazne vrijednosti za koje se pronalazi baza 2 logaritma.",
	"@@Lookup_Field_tag0@@": "Polje koje sadrži željene vrijednosti za novi raster.",
	"@@Lookup_Field_tag1@@": "To mora biti numerička vrsta.",
	"@@Lookup_Raster_tag0@@": "Ulazni raster koji sadrži polje iz kojeg će se kreirati novi raster.",
	"@@Lookup_Raster_tag1@@": "Može biti cijeli broj ili plutajuća točka.",
	"@@Mask_Included-Ranges_tag0@@": "Uključene raspone moguće je specificirati za svaki kanal specificiranjem minimalne i maksimalne vrijednosti; svaka vrijednost izvan raspona vratit će se kao ${NoData}. Piksel je uključen ako je vrijednost piksela unutar nekog od specificiranih raspona. Zato, ako kanal 1 ima raspon 5-10 i kanal 2 raspon 15-20, a vrijednost piksela za kanal 1 je 8, taj piksel neće biti maskiran.",
	"@@Mask_NoData-Interpretation_tag0@@": "TO se odnosi na to kako će <strong>${NoData} Values</strong> utjecati na izlaznu sliku.",
	"@@Mask_NoData-Interpretation_tag3@@": "Možete birati između sljedeće dvije opcije:",
	"@@Mask_NoData-Interpretation_tag4@@": "<strong>Match All</strong>--Vrijednosti ${NoData} koje navedete za svaki kanal moraju se pojaviti u istom pikselu kako bi izlazna slika sadržavala piksel ${NoData}.",
	"@@Mask_NoData-Interpretation_tag6@@": "<strong>Match Any</strong>--Ako se vrijednost ${NoData} koju navedete javlja u navedenom kanalu, taj će piksel u izlaznoj slici biti ${NoData}. To je zadano.",
	"@@Mask_NoData-Values_tag0@@": "Vrijednosti Bez podataka moguće je specificirati za svaki kanal. Možete specificirati više vrijednosti unosom popisa razdvojenog praznim mjestima.",
	"@@Mask_Raster_tag0@@": "Ulazni raster.",
	"@@Minus_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Minus_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Minus_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Minus_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Minus_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Minus_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Minus_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Minus_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Minus_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Minus_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Minus_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Minus_Raster_tag0@@": "Unos od kojeg se oduzimaju vrijednosti drugog unosa.",
	"@@Minus_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Minus_Raster2_tag0@@": "Ulazne vrijednosti od kojih se oduzimaju vrijednosti prvog unosa.",
	"@@Minus_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@ML-Classify_Raster_tag0@@": "Ulazni raster za klasificiranje upotrebom algoritma maksimalne vjerojatnosti klasifikacije.",
	"@@ML-Classify_Signature-File-or-URL_tag0@@": "Datoteka potpisa je ${.gsg}.",
	"@@Mod_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Mod_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Mod_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Mod_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Mod_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Mod_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Mod_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Mod_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Mod_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Mod_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Mod_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Mod_Raster_tag0@@": "Unos brojnika.",
	"@@Mod_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Mod_Raster2_tag0@@": "Unos nazivnika.",
	"@@Mod_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Mosaic-Rasters_Operation_tag0@@": "Rješava sve sukobe kada imate dijelove od dvije ili više slika koje se preklapaju. Opcije uključuju sljedeće:",
	"@@Mosaic-Rasters_Operation_tag1@@": "<strong>Blend</strong>--Izračunava i prikazuje prosjek piksela koji se preklapaju dajući veću važnost pikselima koji su bliži susjednim slikama kako bi izlaz bio izglađenija slika. To je zadano.",
	"@@Mosaic-Rasters_Operation_tag3@@": "<strong>First</strong>--Prikazuje piksele iz prve slike na popisu slika koje preklapaju navedeno područje.",
	"@@Mosaic-Rasters_Operation_tag5@@": "<strong>Last</strong>--Prikazuje piksele iz posljednje slike na popisu slika koje preklapaju navedeno područje.",
	"@@Mosaic-Rasters_Operation_tag7@@": "<strong>Max</strong>--Prikazuje piksel najveće vrijednosti svih preklapajućih slojeva. Uz tu opciju nije zajamčeno prikazivanje piksela samo jedne slike u području preklapanja, nego bi se mogla prikazivati kombinacija svih potencijalnih slojeva.",
	"@@Mosaic-Rasters_Operation_tag9@@": "<strong>Mean</strong>--Izračunava i prikazuje prosjek piksela koji se preklapaju.",
	"@@Mosaic-Rasters_Operation_tag11@@": "<strong>Min</strong>--Prikazuje piksel najmanje vrijednosti svih preklapajućih slojeva. Uz tu opciju nije zajamčeno prikazivanje piksela samo jedne slike u području preklapanja, nego bi se mogla prikazivati kombinacija svih potencijalnih slojeva.",
	"@@Mosaic-Rasters_Rasters_tag0@@": "Odabire raster koji želite sastaviti u mozaik za oblikovanje jedne slike.",
	"@@NDVI_Infrared-Band-ID_tag0@@": "Specificira ID kanala koji predstavlja skoro infracrveni dio elektromagnetskog spektra.",
	"@@NDVI_Raster_tag0@@": "Ulazni multispektralni raster.",
	"@@NDVI_Scientific-Output_tag0@@": "Izlazne vrijednosti bit će u rasponu od -1.0 do 1.0, a to se upotrebljava u brojnim znanstvenim primjenama.",
	"@@NDVI_Visible-Band-ID_tag0@@": "Specificira ID kanala koji predstavlja crveni dio elektromagnetskog spektra.",
	"@@NDVI-Colorized_Color-Ramp_tag0@@": "Odaberite unaprijed definiranu shemu boje na padajućem popisu.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag0@@": "Odaberite koja će vrsta sheme boja davati boju NDVI izlazu:",
	"@@NDVI-Colorized_Color-Scheme-Type_tag1@@": "Karta u boji--Odaberite unaprijed definiranu kartu u boji na padajućem popisu. U suprotnom, možete pretražiti datoteku dosljedne karte u boji koja postoji.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag2@@": "Paleta boja--Odaberite unaprijed definiranu shemu boje na padajućem popisu.",
	"@@NDVI-Colorized_Colormap_tag0@@": "Odaberite unaprijed definiranu kartu u boji na padajućem popisu. U suprotnom, možete pretražiti postojeću datoteku karte u boji.",
	"@@NDVI-Colorized_Infrared-Band-ID_tag0@@": "Specificira ID kanala koji predstavlja skoro infracrveni dio elektromagnetskog spektra.",
	"@@NDVI-Colorized_Raster_tag0@@": "Ulazni multispektralni raster.",
	"@@NDVI-Colorized_Scientific-Output_tag0@@": "Izlazne vrijednosti bit će u rasponu od -1.0 do 1.0, a to se upotrebljava u brojnim znanstvenim primjenama.",
	"@@NDVI-Colorized_Visible-Band-ID_tag0@@": "Specificira ID kanala koji predstavlja crveni dio elektromagnetskog spektra.",
	"@@Negate_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Negate_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Negate_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Negate_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Negate_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Negate_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Negate_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Negate_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Negate_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Negate_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Negate_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Negate_Raster_tag0@@": "Ulazni raster koji treba negirati (pomnoženo s -1).",
	"@@Nibble_Mask-Raster_tag0@@": "Obavezni ulazni raster koji se upotrebljava kao maska.",
	"@@Nibble_Mask-Raster_tag1@@": "Ćelije Bez podataka jer će se njihova vrijednost grickati u unosu <strong>Raster</strong>.",
	"@@Nibble_Mask-Raster_tag4@@": "Raster maske može biti cijeli broj ili plutajuća točka.",
	"@@Nibble_Nibble-NoData-cells_tag0@@": "Definira hoće li ćelije Bez podataka u ulaznom rasteru ostati Bez podataka u izlaznom rasteru.",
	"@@Nibble_Nibble-NoData-cells_tag1@@": "<strong>No</strong>--Određuje da će NoData ćelije u ulaznom rasteru ostati NoData u izlazu. To je zadano.",
	"@@Nibble_Nibble-NoData-cells_tag3@@": "<strong>Yes</strong>--Određuje da se NoData ćelije u ulaznom rasteru i unutar maske mogu grickati u valjane vrijednosti izlazne ćelije.",
	"@@Nibble_Raster_tag0@@": "Obavezni ulazni raster koji će se grickati.",
	"@@Nibble_Raster_tag1@@": "Ulazni raster može biti cijeli broj ili plutajuća točka.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag0@@": "Definira je li vrijednosti ${NoData} u ulaznom rasteru dopušteno grickati u područje definirano rasterom maske.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag1@@": "<strong>Yes</strong>--Određuje da će se najbliža susjedna vrijednost upotrebljavati bez obzira je li ${NoData} ili druga vrijednost podataka u ulaznom rasteru. ${NoData} vrijednost u ulaznom rasteru moguće je grickati u područja definirana u maski ako su najbliži susjed. To je zadano.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag3@@": "<strong>No</strong>--Određuje da je vrijednosti podataka moguće grickati samo u područja definirana u rasteru maske. ${NoData} vrijednosti u ulaznom rasteru nije moguće grickati u područja definirana u rasteru maske, čak i ako su najbliži susjed.",
	"@@Nibble_Zone-Raster_tag0@@": "Zona ulaznog rastera.",
	"@@Nibble_Zone-Raster_tag1@@": "Zona su sve ćelije u rasteru koje imaju istu vrijednost, bez obzira jesu li susjedne. Zona ulaznog rastera definira oblik, vrijednosti i lokacije zona. Raster zone može biti cijeli broj ili plutajuća točka.",
	"@@Not-Equal_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Not-Equal_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Not-Equal_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Not-Equal_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Not-Equal_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Not-Equal_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Not-Equal_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Not-Equal_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Not-Equal_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Not-Equal_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Not-Equal_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Not-Equal_Raster_tag0@@": "Unos koji će se uspoređivati za nejednakost putem drugog unosa.",
	"@@Not-Equal_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Not-Equal_Raster2_tag0@@": "Unos koji će se usporediti s prvim unosom za nejednakost.",
	"@@Not-Equal_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Pansharpening_Multispectral_tag0@@": "Multispektralni raster koji želite izoštriti upotrebom pankromatskog kanala.",
	"@@Pansharpening_Panchromatic_tag0@@": "Jednokanalni raster visoke razlučivosti koji će se upotrebljavati za oštrenje multispektralnog rastere niske razlučivosti.",
	"@@Pansharpening_Pansharpening-Type_tag0@@": "Odaberite algoritam oštrenja kretanja po slici koji želite upotrebljavati.",
	"@@Pansharpening_Pansharpening-Type_tag1@@": "Brovey--Upotrebljava Brovey algoritam na temelju spektralnog modeliranja za fuziju podataka.",
	"@@Pansharpening_Pansharpening-Type_tag2@@": "Esri--Upotrebljava Esri algoritam na temelju spektralnog modeliranja za fuziju podataka.",
	"@@Pansharpening_Pansharpening-Type_tag3@@": "Gram-Schmidt--Upotrebljava Gram-Schmidt algoritam za spektralno izoštravanja za izoštravanje multispektralnih podataka.",
	"@@Pansharpening_Pansharpening-Type_tag4@@": "IHS--Upotrebljava prostor boje iz intenziteta, nijanse i zasićenosti za fuziju podataka.",
	"@@Pansharpening_Pansharpening-Type_tag5@@": "Srednje--Upotrebljava prosječnu vrijednost između crvene, zelene i plave vrijednosti te vrijednosti pankromatskog piksela.",
	"@@Pansharpening_Weights_tag0@@": "Specificiraju se težine za crvene, zelene, plave i infracrvene kanale. Sve bi vrijednosti trebale biti u rasponu od 0 do 1.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Ova parametar simulira porast pokušaja za nadilaženje troškova kako se akumulativni trošak povećava. Upotrebljava se za modeliranje umora putnika. Rastući akumulativni trošak za dosezanje ćelije multiplicira se stopom otpora i dodaje trošku za prebacivanje u narednu ćeliju.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "Modificirana je verzija formule za složenu kamatnu stopu koja se upotrebljava za izračunavanje vidljivog troška prebacivanja kroz ćelije. Kako se vrijednost stope otpora povećava, povećava se trošak ćelija koje se posjećuju kasnije. Što je veća stopa otpora, viši je trošak za dosezanje sljedeće ćelije, a on je složen za svako naredno kretanje. Budući da je stopa otpora slična složenoj stopi i općenito su vrijednosti akumulativnog troška jako dugačke, predlažu se male stope otpora, kao što je 0,005 ili čak i manje, ovisno o vrijednostima akumulativnog troška.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Path-Distance_Capacity_tag0@@": "Definira kapacitet troška za putnika za izvor. Izračuni troška nastavljaju se za svaki izvor dok se ne dosegne specificirani kapacitet.",
	"@@Path-Distance_Capacity_tag1@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Path-Distance_Cost-Raster_tag0@@": "Obavezni ulazni raster koji određuje trošak ili impendanciju za planimetrijsko kretanje do svake ćelije. Vrijednost na svakoj lokaciji ćelije predstavlja troškove po jedinici za udaljenost kretanja kroz njih. Svaka vrijednost lokacije ćelije množi se s razlučivosti ćelije te se također kompenzira za dijagonalno kretanje kako bi se došlo do ukupnog troška prolaska kroz ćeliju.",
	"@@Path-Distance_Cost-Raster_tag1@@": "Vrijednosti <strong>Cost Raster</strong> mogu biti cijeli brojevi ili plutajuća točka, ali ne mogu biti negativne ili nula.",
	"@@Path-Distance_horizontalfactor_tag0@@": "<p>Definira odnos između okomitog troška faktora i okomitog relativnog kuta kretanja (HRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: HF i HRMA. HF predstavlja horizontalni faktor koji definira horizontalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. HRMA predstavlja horizontalni relativni kut kretanja koji identificira kut između horizontalnog smjera od ćelije i smjera prebacivanja.</p><p><strong>Vrste horizontalnih</strong>faktora uključuju sljedeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od kuta rezanja, HF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Naprijed</strong>--Utvrđuje da je dopušteno samo kretanje naprijed. HRMA mora biti veći od ili jednako 0 i manji od 90 stupnjeva (0 <= HRMA < 90). Ako je HRMA postavljen na više od 0 i manje od 45 stupnjeva, HF za ćelije postavljen je na vrijednost povezanu s faktorom nula. Ako je HRMA više od ili jednako 45 stupnjeva, upotrebljava se vrijednost modifikatora vrijednosti strane. HF za bilo koju vrijednost HRMA jednaku ili veću od 90 stupnjeva postavlja se na beskonačnost.</li><li><strong>Linearni</strong>--Određuje da je HF linearna funkcija HRMA.</li><li><strong>Obrnuti linearni</strong>--Određuje da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tablica</strong>--Identificira da će se datoteka tablice koristiti za definiranje horizontalnog faktorskog grafikona koji se koristi za određivanje HF-ova.</li></ul><p>Modifikatori horizontalnih faktora uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Horizontalni faktor koji se koristi kada je HRMA nula. Ovaj faktor pozicionira y-presjek za bilo koju od horizontalnih faktorskih funkcija.</li><li><strong>Kut rezanja</strong>--Definira kut HRMA iznad kojeg će HF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne linije koja se koristi s ključnim riječima<strong>Linearni</strong>i<strong>Obrnuti Linearni</strong>horizontalni faktor. Nagib je određen kao dio porasta tijekom rada (na primjer, nagib od 45 posto je 1/45, što je uneseno kao 0,02222).</li><li><strong>Vrijednost strane</strong>--Utvrđuje HF kada je HRMA veći ili jednak 45 stupnjeva i manji od 90 stupnjeva kada je navedena ključna riječ horiontalnog faktora<strong>Naprijed</strong>.</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira HF.</li></ul>",
	"@@Path-Distance_Horizontal-Raster_tag0@@": "Raster koji definira horizontalni smjer u svakoj ćeliji.",
	"@@Path-Distance_Horizontal-Raster_tag1@@": "Vrijednost na rasteru mora biti cijeli broj u rasponu od 0 do 360; time da 0 predstavlja sjever ili smjer pri vrhu zaslona, i povećava se u smjeru kazaljke na satu. Ravnim područjima trebala bi se dodijeliti vrijednost -1. Vrijednosti na svakoj lokaciji biti će korištene zajedno s <strong>Horizontal factor</strong> za određivanje horizontalnih troškova nastalih prilikom prelaska s ćelije na njezine susjede.",
	"@@Path-Distance_Maximum-Distance_tag0@@": "Prag koji akumulativne vrijednosti troška ne mogu premašiti. Ako akumulativna udaljenost troška premaši tu vrijednost, izlazna vrijednost za lokaciju ćelije bit će „Bez podataka“. Maksimalna udaljenost definira obuhvat za koji se izračunavaju akumulativne udaljenosti troška. Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Množitelj koji se primjenjuje na vrijednosti troška.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućuje kontrolu način putovanja ili magnitudu izvora. Što je veći multiplikator, veći je trošak koji treba prebaciti kroz svaku ćeliju.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Vrijednosti moraju biti veća od nule. Zadana je vrijednost 1.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Path-Distance_Source-Raster_tag0@@": "Obavezni ulazni raster lokacija izvora.",
	"@@Path-Distance_Source-Raster_tag1@@": "To je raster koji identificira ćelije ili lokacije za koje će se posljednje akumulirani trošak udaljenosti izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Path-Distance_Source-Raster_tag2@@": "Može biti cijeli broj ili plutajuća točka.",
	"@@Path-Distance_Start-Cost_tag0@@": "Početni trošak od kojeg započinju izračuni troška. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih s izvorom. Umjesto započinjanja pri trošku od 0, algoritam troška započet će sa specificiranom vrijednosti.",
	"@@Path-Distance_Start-Cost_tag1@@": "Vrijednost mora biti nula ili veća. Zadana je vrijednost 0.",
	"@@Path-Distance_Surface-Raster_tag0@@": "Raster koji definira vrijednosti visine terena na svakoj lokaciji ćelije.",
	"@@Path-Distance_Surface-Raster_tag1@@": "Vrijednosti se upotrebljavaju za izračunavanje stvarne udaljenosti površine obuhvaćene prilikom prolaska između ćelija.",
	"@@Path-Distance_Travel-Direction_tag0@@": "Definira smjer putnika kada se primjenjuje stopa otpora izvora i početni trošak izvora.",
	"@@Path-Distance_Travel-Direction_tag1@@": "<strong>From Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na ulaznom izvoru i kretati će se prema ćelijama bez izvora. To je zadano.",
	"@@Path-Distance_Travel-Direction_tag3@@": "<strong>To Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na svakoj ćeliji bez izvora i kretati će se natrag prema ulaznom izvoru.",
	"@@Path-Distance_Travel-Direction_tag5@@": "Ili navedite <strong>From Source</strong> ili <strong>To Source</strong> ključnu riječ koja će biti primijenjena na sve izvore, ili navedite polje u <strong>Source Raster</strong> koje sadrži ključne riječi za prepoznavanje smjera putovanja za svaki izvor. To polje mora sadržavati niz od ${FROM_SOURCE} do ${TO_SOURCE}.",
	"@@Path-Distance_verticalfactor_tag0@@": "<p>Definira odnos između vertikalnog faktora troškova i vertikalnog relativnog kuta kretanja (VRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: VF i VRMA. VF predstavlja vertikalni faktor koji definira vertikalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. VRMA je skraćenica za vertikalni relativni pokretni kut, koji identificira kut nagiba između ćelije OD ili obrade i ćelije DO.</p><p><strong>Vertikalni faktori</strong>uključuju sljedeće:</p><ul><li><strong>Binarni</strong>--Određuje da ako je VRMA veći od niskog kuta i manji od visokog kuta, VF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Linearni</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrični linearni</strong>--Određuje da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Obrnuti linearni</strong>--Označava da je VF inverzna linearna funkcija VRMA.</li><li><strong>Simetrični obrnuti linearni</strong>--Određuje da je VF inverzna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Cos</strong>--Identificira VF kao kosinusnu funkciju VRMA.</li><li><strong>Sec</strong>--Identificira VF kao funkciju VRMA koja se temelji na sekanti.</li><li><strong>Cos-Sec</strong>--Određuje da je VF funkcija temeljena na kosinusu VRMA kada je VRMA negativna i funkcija VRMA temeljena na sekanti kada VRMA nije negativna.</li><li><strong>Sec-Cos</strong>--Određuje da je VF funkcija VRMA temeljena na sekanti kada je VRMA negativna i funkcija temeljena na kosinusu VRMA kada VRMA nije negativna.</li><li><strong>Tablica</strong>--Identificira da će se tablična datoteka koristiti za definiranje grafa vertikalnog faktora koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori vertikalnih ključnih riječi uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalni faktor koji se koristi kada je VRMA nula. Taj faktor pozicionira y-presjek specificirane funkcije. Prema definiciji faktor nula nije primjenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presjek definiran je ovim funkcijama.</li><li><strong>Niski cut</strong>--Definira VRMA kut ispod kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Visoki kut</strong>--Definira VRMA kut iznad kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne crte koja se koristi s ključnim riječima vertikalnih faktora<strong>Linearni</strong>i<strong>Obrnuti linearni</strong>. Nagib je specificiran kao frakcija uzdizanja iznad pokretanja (na primjer, nagib od 45 posto je 1/45, a to je unos kao 0,02222).</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira VF.</li></ul>",
	"@@Path-Distance_Vertical-Raster_tag0@@": "Definira odnos između vertikalnog troška faktora i vertikalnog relativnog kuta kretanja (VRMA).",
	"@@Path-Distance_Vertical-Raster_tag1@@": "Ta se vrijednost upotrebljava za izračunavanje nagiba koji se upotrebljava za identificiranje vertikalnog faktora koji se javio prilikom prebacivanja iz jedne ćelije u drugu.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Ova parametar simulira porast pokušaja za nadilaženje troškova kako se akumulativni trošak povećava. Upotrebljava se za modeliranje umora putnika. Rastući akumulativni trošak za dosezanje ćelije multiplicira se stopom otpora i dodaje trošku za prebacivanje u narednu ćeliju.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "Modificirana je verzija formule za složenu kamatnu stopu koja se upotrebljava za izračunavanje vidljivog troška prebacivanja kroz ćelije. Kako se vrijednost stope otpora povećava, povećava se trošak ćelija koje se posjećuju kasnije. Što je veća stopa otpora, viši je trošak za dosezanje sljedeće ćelije, a on je složen za svako naredno kretanje. Budući da je stopa otpora slična složenoj stopi i općenito su vrijednosti akumulativnog troška jako dugačke, predlažu se male stope otpora, kao što je 0,005 ili čak i manje, ovisno o vrijednostima akumulativnog troška.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Path-Distance-Allocation_Capacity_tag0@@": "Definira kapacitet troška za putnika za izvor. Izračuni troška nastavljaju se za svaki izvor dok se ne dosegne specificirani kapacitet.",
	"@@Path-Distance-Allocation_Capacity_tag1@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Path-Distance-Allocation_Cost-Raster_tag0@@": "Obavezni ulazni raster koji određuje trošak ili impendanciju za planimetrijsko kretanje do svake ćelije. Vrijednost na svakoj lokaciji ćelije predstavlja troškove po jedinici za udaljenost kretanja kroz njih. Svaka vrijednost lokacije ćelije množi se s razlučivosti ćelije te se također kompenzira za dijagonalno kretanje kako bi se došlo do ukupnog troška prolaska kroz ćeliju.",
	"@@Path-Distance-Allocation_Cost-Raster_tag1@@": "Vrijednosti <strong>Cost Raster</strong> mogu biti cijeli brojevi ili plutajuća točka, ali ne mogu biti negativne ili nula.",
	"@@Path-Distance-Allocation_horizontalfactor_tag0@@": "<p>Definira odnos između okomitog troška faktora i okomitog relativnog kuta kretanja (HRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: HF i HRMA. HF predstavlja horizontalni faktor koji definira horizontalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. HRMA predstavlja horizontalni relativni kut kretanja koji identificira kut između horizontalnog smjera od ćelije i smjera prebacivanja.</p><p><strong>Vrste horizontalnih</strong>faktora uključuju sljedeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od kuta rezanja, HF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Naprijed</strong>--Utvrđuje da je dopušteno samo kretanje naprijed. HRMA mora biti veći od ili jednako 0 i manji od 90 stupnjeva (0 <= HRMA < 90). Ako je HRMA postavljen na više od 0 i manje od 45 stupnjeva, HF za ćelije postavljen je na vrijednost povezanu s faktorom nula. Ako je HRMA više od ili jednako 45 stupnjeva, upotrebljava se vrijednost modifikatora vrijednosti strane. HF za bilo koju vrijednost HRMA jednaku ili veću od 90 stupnjeva postavlja se na beskonačnost.</li><li><strong>Linearni</strong>--Određuje da je HF linearna funkcija HRMA.</li><li><strong>Obrnuti linearni</strong>--Određuje da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tablica</strong>--Identificira da će se datoteka tablice koristiti za definiranje horizontalnog faktorskog grafikona koji se koristi za određivanje HF-ova.</li></ul><p>Modifikatori horizontalnih faktora uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Horizontalni faktor koji se koristi kada je HRMA nula. Ovaj faktor pozicionira y-presjek za bilo koju od horizontalnih faktorskih funkcija.</li><li><strong>Kut rezanja</strong>--Definira kut HRMA iznad kojeg će HF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne linije koja se koristi s ključnim riječima<strong>Linearni</strong>i<strong>Obrnuti Linearni</strong>horizontalni faktor. Nagib je određen kao dio porasta tijekom rada (na primjer, nagib od 45 posto je 1/45, što je uneseno kao 0,02222).</li><li><strong>Vrijednost strane</strong>--Utvrđuje HF kada je HRMA veći ili jednak 45 stupnjeva i manji od 90 stupnjeva kada je navedena ključna riječ horiontalnog faktora<strong>Naprijed</strong>.</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira HF.</li></ul>",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag0@@": "Raster koji definira horizontalni smjer u svakoj ćeliji.",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag1@@": "Vrijednost na rasteru mora biti cijeli broj u rasponu od 0 do 360; time da 0 predstavlja sjever ili smjer pri vrhu zaslona, i povećava se u smjeru kazaljke na satu. Ravnim područjima trebala bi se dodijeliti vrijednost -1. Vrijednosti na svakoj lokaciji biti će korištene zajedno s <strong>Horizontal factor</strong> za određivanje horizontalnih troškova nastalih prilikom prelaska s ćelije na njezine susjede.",
	"@@Path-Distance-Allocation_Maximum-Distance_tag0@@": "Prag koji akumulativne vrijednosti troška ne mogu premašiti. Ako akumulativna udaljenost troška premaši tu vrijednost, izlazna vrijednost za lokaciju ćelije bit će „Bez podataka“. Maksimalna udaljenost definira obuhvat za koji se izračunavaju akumulativne udaljenosti troška. Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Množitelj koji se primjenjuje na vrijednosti troška.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućuje kontrolu način putovanja ili magnitudu izvora. Što je veći multiplikator, veći je trošak koji treba prebaciti kroz svaku ćeliju.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Vrijednosti moraju biti veća od nule. Zadana je vrijednost 1.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Path-Distance-Allocation_Source-Field_tag0@@": "Polje se upotrebljava za dodjeljivanje vrijednosti do lokacija izvora. Treba biti vrsta cijelog broja. Ako je <strong>Value Raster</strong> postavljen, vrijednosti u tom ulazu imaju prednost nad bilo kojom postavkom za <strong>Source Field</strong>.",
	"@@Path-Distance-Allocation_Source-Raster_tag0@@": "Obavezni ulazni raster lokacija izvora.",
	"@@Path-Distance-Allocation_Source-Raster_tag1@@": "To je raster koji identificira ćelije ili lokacije za koje će se posljednje akumulirani trošak udaljenosti izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Path-Distance-Allocation_Source-Raster_tag2@@": "Može biti cijeli broj ili plutajuća točka.",
	"@@Path-Distance-Allocation_Start-Cost_tag0@@": "Početni trošak od kojeg započinju izračuni troška. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih s izvorom. Umjesto započinjanja pri trošku od 0, algoritam troška započet će sa specificiranom vrijednosti.",
	"@@Path-Distance-Allocation_Start-Cost_tag1@@": "Vrijednost mora biti nula ili veća. Zadana je vrijednost 0.",
	"@@Path-Distance-Allocation_Surface-Raster_tag0@@": "Raster koji definira vrijednosti visine terena na svakoj lokaciji ćelije.",
	"@@Path-Distance-Allocation_Surface-Raster_tag1@@": "Vrijednosti se upotrebljavaju za izračunavanje stvarne udaljenosti površine obuhvaćene prilikom prolaska između ćelija.",
	"@@Path-Distance-Allocation_Travel-Direction_tag0@@": "Definira smjer putnika kada se primjenjuje stopa otpora izvora i početni trošak izvora.",
	"@@Path-Distance-Allocation_Travel-Direction_tag1@@": "<strong>From Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na ulaznom izvoru i kretati će se prema ćelijama bez izvora. To je zadano.",
	"@@Path-Distance-Allocation_Travel-Direction_tag3@@": "<strong>To Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na svakoj ćeliji bez izvora i kretati će se natrag prema ulaznom izvoru.",
	"@@Path-Distance-Allocation_Travel-Direction_tag5@@": "Ili navedite <strong>From Source</strong> ili <strong>To Source</strong> ključnu riječ koja će biti primijenjena na sve izvore, ili navedite polje u <strong>Source Raster</strong> koje sadrži ključne riječi za prepoznavanje smjera putovanja za svaki izvor. To polje mora sadržavati niz od ${FROM_SOURCE} do ${TO_SOURCE}.",
	"@@Path-Distance-Allocation_Value-Raster_tag0@@": "Ulazni raster cijelih brojeva koji identificira vrijednosti zone koje će se upotrebljavati za svaku lokaciju ulaznog izvora. Za svaku ćeliju izvorne lokacije, vrijednost definirana sa <strong>Value Raster</strong> bit će dodijeljena svim ćelijama dodijeljenim na izvorno mjesto za računanje. <strong>Value Raster</strong> ima prednost nad bilo kojom postavkom za <strong>Source Field</strong>.",
	"@@Path-Distance-Allocation_verticalfactor_tag0@@": "<p>Definira odnos između vertikalnog faktora troškova i vertikalnog relativnog kuta kretanja (VRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: VF i VRMA. VF predstavlja vertikalni faktor koji definira vertikalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. VRMA je skraćenica za vertikalni relativni pokretni kut, koji identificira kut nagiba između ćelije OD ili obrade i ćelije DO.</p><p><strong>Vertikalni faktori</strong>uključuju sljedeće:</p><ul><li><strong>Binarni</strong>--Određuje da ako je VRMA veći od niskog kuta i manji od visokog kuta, VF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Linearni</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrični linearni</strong>--Određuje da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Obrnuti linearni</strong>--Označava da je VF inverzna linearna funkcija VRMA.</li><li><strong>Simetrični obrnuti linearni</strong>--Određuje da je VF inverzna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Cos</strong>--Identificira VF kao kosinusnu funkciju VRMA.</li><li><strong>Sec</strong>--Identificira VF kao funkciju VRMA koja se temelji na sekanti.</li><li><strong>Cos-Sec</strong>--Određuje da je VF funkcija temeljena na kosinusu VRMA kada je VRMA negativna i funkcija VRMA temeljena na sekanti kada VRMA nije negativna.</li><li><strong>Sec-Cos</strong>--Određuje da je VF funkcija VRMA temeljena na sekanti kada je VRMA negativna i funkcija temeljena na kosinusu VRMA kada VRMA nije negativna.</li><li><strong>Tablica</strong>--Identificira da će se tablična datoteka koristiti za definiranje grafa vertikalnog faktora koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori vertikalnih ključnih riječi uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalni faktor koji se koristi kada je VRMA nula. Taj faktor pozicionira y-presjek specificirane funkcije. Prema definiciji faktor nula nije primjenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presjek definiran je ovim funkcijama.</li><li><strong>Niski cut</strong>--Definira VRMA kut ispod kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Visoki kut</strong>--Definira VRMA kut iznad kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne crte koja se koristi s ključnim riječima vertikalnih faktora<strong>Linearni</strong>i<strong>Obrnuti linearni</strong>. Nagib je specificiran kao frakcija uzdizanja iznad pokretanja (na primjer, nagib od 45 posto je 1/45, a to je unos kao 0,02222).</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira VF.</li></ul>",
	"@@Path-Distance-Allocation_Vertical-Raster_tag0@@": "Definira odnos između vertikalnog troška faktora i vertikalnog relativnog kuta kretanja (VRMA).",
	"@@Path-Distance-Allocation_Vertical-Raster_tag1@@": "Ta se vrijednost upotrebljava za izračunavanje nagiba koji se upotrebljava za identificiranje vertikalnog faktora koji se javio prilikom prebacivanja iz jedne ćelije u drugu.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Ova parametar simulira porast pokušaja za nadilaženje troškova kako se akumulativni trošak povećava. Upotrebljava se za modeliranje umora putnika. Rastući akumulativni trošak za dosezanje ćelije multiplicira se stopom otpora i dodaje trošku za prebacivanje u narednu ćeliju.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "Modificirana je verzija formule za složenu kamatnu stopu koja se upotrebljava za izračunavanje vidljivog troška prebacivanja kroz ćelije. Kako se vrijednost stope otpora povećava, povećava se trošak ćelija koje se posjećuju kasnije. Što je veća stopa otpora, viši je trošak za dosezanje sljedeće ćelije, a on je složen za svako naredno kretanje. Budući da je stopa otpora slična složenoj stopi i općenito su vrijednosti akumulativnog troška jako dugačke, predlažu se male stope otpora, kao što je 0,005 ili čak i manje, ovisno o vrijednostima akumulativnog troška.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Path-Distance-Back-Link_Capacity_tag0@@": "Definira kapacitet troška za putnika za izvor. Izračuni troška nastavljaju se za svaki izvor dok se ne dosegne specificirani kapacitet.",
	"@@Path-Distance-Back-Link_Capacity_tag1@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag0@@": "Obavezni ulazni raster koji određuje trošak ili impendanciju za planimetrijsko kretanje do svake ćelije. Vrijednost na svakoj lokaciji ćelije predstavlja troškove po jedinici za udaljenost kretanja kroz njih. Svaka vrijednost lokacije ćelije množi se s razlučivosti ćelije te se također kompenzira za dijagonalno kretanje kako bi se došlo do ukupnog troška prolaska kroz ćeliju.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag1@@": "Vrijednosti <strong>Cost Raster</strong> mogu biti cijeli brojevi ili plutajuća točka, ali ne mogu biti negativne ili nula.",
	"@@Path-Distance-Back-Link_horizontalfactor_tag0@@": "<p>Definira odnos između okomitog troška faktora i okomitog relativnog kuta kretanja (HRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: HF i HRMA. HF predstavlja horizontalni faktor koji definira horizontalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. HRMA predstavlja horizontalni relativni kut kretanja koji identificira kut između horizontalnog smjera od ćelije i smjera prebacivanja.</p><p><strong>Vrste horizontalnih</strong>faktora uključuju sljedeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od kuta rezanja, HF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Naprijed</strong>--Utvrđuje da je dopušteno samo kretanje naprijed. HRMA mora biti veći od ili jednako 0 i manji od 90 stupnjeva (0 <= HRMA < 90). Ako je HRMA postavljen na više od 0 i manje od 45 stupnjeva, HF za ćelije postavljen je na vrijednost povezanu s faktorom nula. Ako je HRMA više od ili jednako 45 stupnjeva, upotrebljava se vrijednost modifikatora vrijednosti strane. HF za bilo koju vrijednost HRMA jednaku ili veću od 90 stupnjeva postavlja se na beskonačnost.</li><li><strong>Linearni</strong>--Određuje da je HF linearna funkcija HRMA.</li><li><strong>Obrnuti linearni</strong>--Određuje da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tablica</strong>--Identificira da će se datoteka tablice koristiti za definiranje horizontalnog faktorskog grafikona koji se koristi za određivanje HF-ova.</li></ul><p>Modifikatori horizontalnih faktora uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Horizontalni faktor koji se koristi kada je HRMA nula. Ovaj faktor pozicionira y-presjek za bilo koju od horizontalnih faktorskih funkcija.</li><li><strong>Kut rezanja</strong>--Definira kut HRMA iznad kojeg će HF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne linije koja se koristi s ključnim riječima<strong>Linearni</strong>i<strong>Obrnuti Linearni</strong>horizontalni faktor. Nagib je određen kao dio porasta tijekom rada (na primjer, nagib od 45 posto je 1/45, što je uneseno kao 0,02222).</li><li><strong>Vrijednost strane</strong>--Utvrđuje HF kada je HRMA veći ili jednak 45 stupnjeva i manji od 90 stupnjeva kada je navedena ključna riječ horiontalnog faktora<strong>Naprijed</strong>.</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira HF.</li></ul>",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag0@@": "Raster koji definira horizontalni smjer u svakoj ćeliji.",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag1@@": "Vrijednost na rasteru mora biti cijeli broj u rasponu od 0 do 360; time da 0 predstavlja sjever ili smjer pri vrhu zaslona, i povećava se u smjeru kazaljke na satu. Ravnim područjima trebala bi se dodijeliti vrijednost -1. Vrijednosti na svakoj lokaciji biti će korištene zajedno s <strong>Horizontal factor</strong> za određivanje horizontalnih troškova nastalih prilikom prelaska s ćelije na njezine susjede.",
	"@@Path-Distance-Back-Link_Maximum-Distance_tag0@@": "Prag koji akumulativne vrijednosti troška ne mogu premašiti. Ako akumulativna udaljenost troška premaši tu vrijednost, izlazna vrijednost za lokaciju ćelije bit će „Bez podataka“. Maksimalna udaljenost definira obuhvat za koji se izračunavaju akumulativne udaljenosti troška. Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Množitelj koji se primjenjuje na vrijednosti troška.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućuje kontrolu način putovanja ili magnitudu izvora. Što je veći multiplikator, veći je trošak koji treba prebaciti kroz svaku ćeliju.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Vrijednosti moraju biti veća od nule. Zadana je vrijednost 1.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Path-Distance-Back-Link_Source-Raster_tag0@@": "Obavezni ulazni raster lokacija izvora.",
	"@@Path-Distance-Back-Link_Source-Raster_tag1@@": "To je raster koji identificira ćelije ili lokacije za koje će se posljednje akumulirani trošak udaljenosti izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Path-Distance-Back-Link_Source-Raster_tag2@@": "Može biti cijeli broj ili plutajuća točka.",
	"@@Path-Distance-Back-Link_Start-Cost_tag0@@": "Početni trošak od kojeg započinju izračuni troška. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih s izvorom. Umjesto započinjanja pri trošku od 0, algoritam troška započet će sa specificiranom vrijednosti.",
	"@@Path-Distance-Back-Link_Start-Cost_tag1@@": "Vrijednost mora biti nula ili veća. Zadana je vrijednost 0.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag0@@": "Raster koji definira vrijednosti visine terena na svakoj lokaciji ćelije.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag1@@": "Vrijednosti se upotrebljavaju za izračunavanje stvarne udaljenosti površine obuhvaćene prilikom prolaska između ćelija.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag0@@": "Definira smjer putnika kada se primjenjuje stopa otpora izvora i početni trošak izvora.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag1@@": "<strong>From Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na ulaznom izvoru i kretati će se prema ćelijama bez izvora. To je zadano.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag3@@": "<strong>To Source</strong>--Stopa otpora izvora i početni trošak izvora primjenjivat će se s početkom na svakoj ćeliji bez izvora i kretati će se natrag prema ulaznom izvoru.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag5@@": "Ili navedite <strong>From Source</strong> ili <strong>To Source</strong> ključnu riječ koja će biti primijenjena na sve izvore, ili navedite polje u <strong>Source Raster</strong> koje sadrži ključne riječi za prepoznavanje smjera putovanja za svaki izvor. To polje mora sadržavati niz od ${FROM_SOURCE} do ${TO_SOURCE}.",
	"@@Path-Distance-Back-Link_verticalfactor_tag0@@": "<p>Definira odnos između vertikalnog faktora troškova i vertikalnog relativnog kuta kretanja (VRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: VF i VRMA. VF predstavlja vertikalni faktor koji definira vertikalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. VRMA je skraćenica za vertikalni relativni pokretni kut, koji identificira kut nagiba između ćelije OD ili obrade i ćelije DO.</p><p><strong>Vertikalni faktori</strong>uključuju sljedeće:</p><ul><li><strong>Binarni</strong>--Određuje da ako je VRMA veći od niskog kuta i manji od visokog kuta, VF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Linearni</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrični linearni</strong>--Određuje da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Obrnuti linearni</strong>--Označava da je VF inverzna linearna funkcija VRMA.</li><li><strong>Simetrični obrnuti linearni</strong>--Određuje da je VF inverzna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Cos</strong>--Identificira VF kao kosinusnu funkciju VRMA.</li><li><strong>Sec</strong>--Identificira VF kao funkciju VRMA koja se temelji na sekanti.</li><li><strong>Cos-Sec</strong>--Određuje da je VF funkcija temeljena na kosinusu VRMA kada je VRMA negativna i funkcija VRMA temeljena na sekanti kada VRMA nije negativna.</li><li><strong>Sec-Cos</strong>--Određuje da je VF funkcija VRMA temeljena na sekanti kada je VRMA negativna i funkcija temeljena na kosinusu VRMA kada VRMA nije negativna.</li><li><strong>Tablica</strong>--Identificira da će se tablična datoteka koristiti za definiranje grafa vertikalnog faktora koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori vertikalnih ključnih riječi uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalni faktor koji se koristi kada je VRMA nula. Taj faktor pozicionira y-presjek specificirane funkcije. Prema definiciji faktor nula nije primjenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presjek definiran je ovim funkcijama.</li><li><strong>Niski cut</strong>--Definira VRMA kut ispod kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Visoki kut</strong>--Definira VRMA kut iznad kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne crte koja se koristi s ključnim riječima vertikalnih faktora<strong>Linearni</strong>i<strong>Obrnuti linearni</strong>. Nagib je specificiran kao frakcija uzdizanja iznad pokretanja (na primjer, nagib od 45 posto je 1/45, a to je unos kao 0,02222).</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira VF.</li></ul>",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag0@@": "Definira odnos između vertikalnog troška faktora i vertikalnog relativnog kuta kretanja (VRMA).",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag1@@": "Ta se vrijednost upotrebljava za izračunavanje nagiba koji se upotrebljava za identificiranje vertikalnog faktora koji se javio prilikom prebacivanja iz jedne ćelije u drugu.",
	"@@Plus_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Plus_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Plus_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Plus_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Plus_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Plus_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Plus_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Plus_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Plus_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Plus_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Plus_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Plus_Raster_tag0@@": "Unos čije će se vrijednosti pridodati.",
	"@@Plus_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Plus_Raster2_tag0@@": "Unos čije će se vrijednosti pridodati prvom unosu.",
	"@@Plus_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Local_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati u izlaznom rasteru. Ako su sve veličine ulaznih ćelija iste, sve opcije će dati iste rezultate.",
	"@@Local_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznih rastera.",
	"@@Local_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznih rastera.",
	"@@Local_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznih rastera. To je zadano.",
	"@@Local_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Local_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije ulaznih rastera.",
	"@@Local_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Local_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Local_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Local_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Local_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Local_Raster_tag0@@": "Unos čije će se vrijednosti pridodati.",
	"@@Local_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Local_Raster2_tag0@@": "Unos čije će se vrijednosti pridodati prvom unosu.",
	"@@Local_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Local_False-Raster_tag0@@": "Unos čije će se vrijednosti upotrebljavati kao vrijednosti izlaznog piksela ako je uvjet neistinit. Može biti cijeli broj, plutajuća točka ili konstantna vrijednost.",
	"@@Local_True-Raster_tag0@@": "Unos čije će se vrijednosti upotrebljavati kao vrijednosti izlaznog piksela ako je uvjet istinit. Može biti cijeli broj, plutajuća točka ili konstantna vrijednost.",
	"@@Power_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Power_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Power_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Power_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Power_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Power_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Power_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Power_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Power_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Power_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Power_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Power_Raster_tag0@@": "Ulazne vrijednosti koje će se podići na snagu koju definira <strong>Raster2</strong>.",
	"@@Power_Raster_tag3@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Power_Raster2_tag0@@": "Unos koji određuje snagu čije će se vrijednosti za <strong>Raster</strong> biti uvećane.",
	"@@Power_Raster2_tag3@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Radar-Calibration_Calibration-Type_tag0@@": "Vrsta kalibracije koji će se provesti.",
	"@@Radar-Calibration_Calibration-Type_tag1@@": "Beta nula--Funkcija vraća radar reflektivno po jedinici područja u kosom rasponu. Ovo je zadana vrsta kalibracije.",
	"@@Radar-Calibration_Calibration-Type_tag2@@": "Sigma nula--Funkcija vraća radar reflektivno po jedinici područja u rasponu zemlje. Rezultati su vrijednosti plutajuće točke od 32 bita, obično u rasponu od 0,0 do 1,0. Ako je ova opcija odabrana ne provodi se rezanje podataka.",
	"@@Radar-Calibration_Calibration-Type_tag3@@": "Gamma--Ova funkcija vraća reflektivnost radara po jedinici područja u okomitoj ravnini na smjer mjerenja.",
	"@@Radar-Calibration_Calibration-Type_tag4@@": "Nema",
	"@@Radar-Calibration_Raster_tag0@@": "Ulazni raster.",
	"@@RasterInfo_Raster-Info_tag0@@": "Odaberite skup rasterskih podataka koji će se upotrebljavati kao predložak",
	"@@RasterInfo_Raster_tag0@@": "Ulazni raster.",
	"@@Rasterize-Attributes_Attribute-Field-Names_tag0@@": "Popis polja u <strong>Zonal Attributes Table</strong> , gdje je svako polje razdvojeno razmakom. Vrijednosti u svakom polju bit će predstavljene kanalom u izlaznom rasteru.",
	"@@Rasterize-Attributes_Background-Value_tag0@@": "Početna vrijednost piksela izlaznih kanala u rasteru, prije ponovnog mapiranja.",
	"@@Rasterize-Attributes_Background-Value_tag1@@": "Ako piksel nije unutar zone, on će ostati kao pozadinska vrijednost.",
	"@@Rasterize-Attributes_Value-Raster_tag0@@": "Obavezni ulazni raster.",
	"@@Rasterize-Attributes_Value-Raster_tag1@@": "Unos bi trebao biti jednokanalni raster. Ako se upotrebljava višekanalni raster, upotrebljavat će se samo prvi kanal.",
	"@@Rasterize-Attributes_Where-Clause_tag0@@": "Neobvezni dodatni upit primijenjen na <strong>Zonal Attributes Table</strong>.",
	"@@Rasterize-Attributes_Where-Clause_tag3@@": "Ako ste upotrebljavali prethodno navedenu tablicu kao primjer, upit bi bio ${Variable1 = 'bare earth'}.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag0@@": "Zonski atributi specificirani kao putanja do lokalne klase geoobjekta, putanja do tablice, URL do sloja usluga geoobjekata ili JSON niz.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag1@@": "Ako se radi o JSON-u, on je opisan kao skup mapiranja iz ID-jeva zone na polje ili cijele brojeve. ${{ zoneId:[f1,f2,...,fn], ... } }",
	"@@Rasterize-Attributes_Zone-Field_tag0@@": "Naziv polja sadrži vrijednosti ID-a zone.",
	"@@Rasterize-Attributes_Zone-Raster_tag0@@": "Opcionalni jednokanalni raster u kojem svaki piksel sadrži ID zone povezan s lokacijom. ID zone upotrebljava se za traženje redaka u tablici zonskih atributa za apsorbiranje specifično za zonu.",
	"@@Rasterize-Attributes_Zone-Raster_tag1@@": "Ostavite ovaj parametar nespecificiran ako samo želite uvesti atribut.",
	"@@Rasterize-Features_Field_tag0@@": "Odaberite polje za upotrebu za identificiranje svakog geoobjekta.",
	"@@Rasterize-Features_Input-Features_tag0@@": "Odaberite klasu geoobjekta za pretvaranje u format rastera.",
	"@@Rasterize-Features_Raster_tag0@@": "Odaberite raster za definiranje veličine ćelije i obuhvata za pretvaranje geoobjekta.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag0@@": "Odredite kako će se upravljati geoobjektima koji se preklapaju:",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag1@@": "<strong>First</strong>--Preklapajućim područjima bit će dodijeljena vrijednost iz prvog navedenog skupa podataka.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag3@@": "<strong>Last</strong>--Preklapajućim područjima bit će dodijeljena vrijednost iz posljednjeg navedenog skupa podataka.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag5@@": "<strong>Smallest</strong>--Preklapajućim područjima bit će dodijeljena vrijednost iz manjeg geoobjekta.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag7@@": "<strong>Largest</strong>--Preklapajućim područjima bit će dodijeljena vrijednost iz većeg geoobjekta.",
	"@@Recast_Overrides_tag0@@": "Tablica naziva varijabli i korisnički definiranih vrijednosti koja se upotrebljava za modificiranje mozaičkog skupa podataka.",
	"@@Recast_Raster_tag0@@": "Produkt rastera na koji će se primijeniti funkcija Ponovno postavljanje.",
	"@@Region-Group_Add-Link_tag0@@": "Specificira je li polje poveznice dodano tablici izlaza.",
	"@@Region-Group_Add-Link_tag1@@": "<strong>Add Link</strong>--Stavka stavke ${LINK} bit će dodana tablici izlaznog rastera.",
	"@@Region-Group_Add-Link_tag3@@": "<strong>No Link</strong>--Tablica atributa za izlazni raster koji će sadržavati samo stavke ${Value} i ${Count}.",
	"@@Region-Group_Excluded-Value_tag0@@": "Identificira vrijednost, primjerice da ako lokacija ćelije sadrži vrijednost, neće se procjenjivati prostorni podatak povezivosti, bez obzira kako je specificiran broj susjeda (FOUR ili EIGHT).",
	"@@Region-Group_Excluded-Value_tag1@@": "Ćelije s isključenom vrijednosti tretirat će se kao Bez podataka i eliminiraju se iz izračuna. Lokacije ćelije koje sadrže isključenu vrijednost primit će vrijednost 0 u izlaznom rasteru.",
	"@@Region-Group_Excluded-Value_tag2@@": "Isključena vrijednost slična je konceptu pozadinske vrijednosti ili primjeni maske. Za ovaj parametar mora biti određena vrijednost ako je <strong>${CROSS}</strong> parametar određen.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag0@@": "Broj susjednih ćelija koji će se upotrebljavati u procjeni povezivosti između ćelija.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag1@@": "<strong>FOUR</strong>--Definira povezanost između ćelija iste vrijednosti samo ako su ćelije izravno lijevo, desno, iznad ili ispod svakog od četiri najbliža susjeda. To je zadano.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag3@@": "<strong>EIGHT</strong>--Definira povezanost između ćelija iste vrijednosti, ako su one unutar neposrednog susjeda ćelije osam jedna od druge. To uključuje ako su one desno, lijevo, iznad ili dijagonalno jedna od druge.",
	"@@Region-Group_Zone-Connectivity_tag0@@": "Definira koje bi se vrijednosti ćelije trebale razmotriti prilikom testiranja za povezivost.",
	"@@Region-Group_Zone-Connectivity_tag1@@": "<strong>WITHIN</strong>--Testira povezanost između ulaznih vrijednosti koje su iste unutar iste zone. To je zadano.",
	"@@Region-Group_Zone-Connectivity_tag3@@": "Jedine ćelije koje se mogu grupirati su ćelije iz iste zone (vrijednost) koje ispunjavaju prostorne preduvjete povezanosti koje određuje parametar <strong>Number of neighbors</strong> (četiri smjera ili osam smjerova).",
	"@@Region-Group_Zone-Connectivity_tag6@@": "<strong>CROSS</strong>--Testira povezanost prema prostornim preduvjetima koji su određeni brojem susjednih parametara između ćelija s bilo kojom vrijednosti, osim vrijednosti identificirane za izuzimanje prema parametru isključene vrijednosti.",
	"@@Region-Group_Zone-Connectivity_tag8@@": "Kada se koristi ova opcija, vrijednost za <strong>Excluded value</strong> parametar mora biti određena.",
	"@@Region-Group_Zone-Raster_tag0@@": "Obavezni ulazni raster čije će se jedinstvene povezane regije identificirati.",
	"@@Region-Group_Zone-Raster_tag1@@": "To treba biti vrsta cijelog broja.",
	"@@Region-Grow_Fill-Value-Field_tag0@@": "Polje u atributnoj tablici koje definira vrijednost ispune za grupe piksela. U višekanalnoj slici svim će se kanalima dodijeliti ova vrijednost.",
	"@@Region-Grow_Max-Growth-Radius-Field_tag0@@": "Polje u atributnoj tablici koje definira polumjer maksimalnog rasta, u jedinicama prostorna referenca slike.",
	"@@Region-Grow_Raster_tag0@@": "Raster koji želite da provodi tu funkciju.",
	"@@Region-Grow_Seed-Points_tag0@@": "Klasa točkastog geoobjekta koja služi kao početno ishodište za algoritam. Svaka ishodišna točka odgovara jednom unosu u atributnu tablicu, koja nosi informacije o polumjeru maksimalnog rasta, pragu sličnosti i vrijednosti ispune.",
	"@@Region-Grow_Similarity-Threshold-Field_tag0@@": "Polje u atributnoj tablici koje definira prag sličnosti, kao Euklidska udaljenost u spektralnom prostoru.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag0@@": "Vrijednosti koje nedostaju u tablici ponovnog klasiranja mogu sačuvati svoje vrijednosti ili se ponovno mapirati u stavku Bez podataka.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag1@@": "Neoznačeno--Bilo koji piksel iz ulaznog rastera koji se ne klasificira ponovno u tablici ponovnog kartiranja sačuvat će svoju vrijednost ili će se pisati za svoju lokaciju u izlazni raster. To je zadano.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag2@@": "Označeno--Bilo kojem pikselu iz ulaznog rastera koji se ne klasificira ponovno u tablici ponovnog kartiranja ponovno će mapirati vrijednost u stavku Bez podataka za njegovu lokaciju u izlazni raster.",
	"@@Remap_Input-Field_tag0@@": "Odaberite polje koje specificira vrijednost izlaznog piksela koja će se ponovno mapirati.",
	"@@Remap_Input-Field_tag1@@": "Ako vaša tablica ima raspon vrijednosti, to će biti polje minimalne vrijednosti, a <strong>Input Max Field</strong> parametar isto mora biti određen.",
	"@@Remap_Input-Max-Field_tag0@@": "Odaberite polje maksimalne vrijednosti, ako vaša tablica specificira raspon vrijednosti.",
	"@@Remap_List_tag0@@": "Specificirajte vrijednosti karte te specificira minimalni i maksimalni raspon vrijednosti i nove vrijednosti ponovnog mapiranja. Osim toga, raspon vrijednosti moguće je postaviti na piksele Bez podataka.",
	"@@Remap_Output-Field_tag0@@": "Odaberite polje koje će se upotrebljavati za izlaznu ponovno mapiranu vrijednost.",
	"@@Remap_Raster_tag0@@": "Ulazni raster.",
	"@@Remap_Remap-Definition-Type_tag0@@": "Odaberite opciju koju želite upotrebljavati za postavljanje vrijednosti ponovnog mapiranja:",
	"@@Remap_Remap-Definition-Type_tag1@@": "Popis--Specificira raspon vrijednosti piksela za rezultate vrijednosti piksela",
	"@@Remap_Remap-Table-Type_tag0@@": "Odaberite vrstu tablice koju ćete upotrebljavati za ponovno mapiranje ulaznog rastera:",
	"@@Remap_Remap-Table-Type_tag1@@": "Simple--Koristi <strong>Remap Table</strong> unos za ponovno mapiranje <strong>Input Field</strong> vrijednosti piksela na odgovarajuću vrijednost u <strong>Output Field</strong> parametru. Ova metoda stavlja u predmemoriju tablicu ponovnog mapiranja tako da može imati bržu izvedbu.",
	"@@Remap_Remap-Table-Type_tag8@@": "Dinamički--Ova metoda ne stavlja u predmemoriju tablicu ponovnog mapiranja i izradit će upit svaki put kada se napravi zahtjev (kretanje po slici, povećavanje ili osvježavanje). Ako se tablica promijeni, sljedeći zahtjev može dinamički ponovno mapirati vrijednosti u skladu s tim.",
	"@@Remap_Remap-Table-Type_tag9@@": "Ponovna dodjela--Specifična tablica koja se upotrebljava za postupak reklasifikacije, pri čemu će se svaki redak u tablici ponovno mapirati samo na temelju svake granice geoobjekta.",
	"@@Remap_Remap-Table_tag0@@": "Pregledajte tablicu koja postavlja vaše vrijednosti ponovnog mapiranja.",
	"@@Reproject_Raster_tag0@@": "Skup rasterskih podataka za ponovno projiciranje ili ponovno uzorkovanje.",
	"@@Reproject_Spatial-Reference_tag0@@": "Koordinatni sustav koji se upotrebljava za ponovno projiciranje podataka.",
	"@@Reproject_X-Cellsize_tag0@@": "Dimenzija x na koju bi se podaci trebali ponovno uzorkovati. Ovo je opcionalno. Ako je vrijednost 0 ili manja, izlazna omotnica (obuhvat i veličine ćelije) izračunava se iz ulaznog rastera.",
	"@@Reproject_X-Registration-Point_tag0@@": "Koordinata x upotrebljava se za definiranje gornjeg lijevog kuta skupa podataka. Ta koordinata treba biti definirana u jedinicama nove prostorne reference. Ako su i <strong>X Cellsize</strong> i <strong>Y Cellsize</strong> parametri veći od 0, koriste se zajedno sa <strong>X Registration Point</strong> i <strong>Y Registration Point</strong> parametrima za definiranje izlaznog prostornog okvira.",
	"@@Reproject_Y-Cellsize_tag0@@": "Dimenzija y na koju bi se podaci trebali ponovno uzorkovati. Ovo je opcionalno. Ako je vrijednost 0 ili manja, izlazna omotnica (obuhvat i veličine ćelije) izračunava se iz ulaznog rastera.",
	"@@Reproject_Y-Registration-Point_tag0@@": "Koordinata y upotrebljava se za definiranje gornjeg lijevog kuta skupa podataka. Ta koordinata treba biti definirana u jedinicama nove prostorne reference. Ako su i <strong>X Cellsize</strong> i <strong>Y Cellsize</strong> parametri veći od 0, koriste se zajedno sa <strong>X Registration Point</strong> i <strong>Y Registration Point</strong> parametrima za definiranje izlaznog prostornog okvira.",
	"@@Resample_Input-Cellsize_tag0@@": "Veličina ćelije piksela ulaznog rastera.",
	"@@Resample_Output-Cellsize_tag0@@": "Veličina ćelije piksela izlazog rastera. Veličinu ćelije moguće promijeniti, ali obuhvat skupa rasterskih podataka ostaje isti. Ponovno uzorkovanje iz korisnički definirane veličine ćelije može biti puno sporije od onog u zadanom sustavu, jer ponovno uzorkovanje zadanog sustava obrađuje minimalnu količinu podataka iz najbliže moguće razlučivosti.",
	"@@Resample_Raster_tag0@@": "Ulazni raster za ponovno uzorkovanje.",
	"@@Resample_Resampling-Type_tag0@@": "<strong>Nearest Neighbor</strong>--Izračunava vrijednost izlaznog piksela koristeći najbliži ulazni piksel. Pikseli Bez podataka ostati će nepromijenjeni u izlaznom skupu rasterskih podataka. To je zadana postavka.",
	"@@Resample_Resampling-Type_tag2@@": "-<strong>Bilinear Interpolation</strong>-Izračunava vrijednost piksela upotrebom vrijednosti ponderirane udaljenosti četiri najbliža piksela. Ova je metoda računalno učinkovita za obradu.",
	"@@Resample_Resampling-Type_tag4@@": "<strong>Cubic Convolution</strong>--Određuje novu vrijednost piksela na temelju podešavanja izglađene krivulje kroz 16 najbližih centara ulaznih piksela.",
	"@@Resample_Resampling-Type_tag6@@": "<strong>Majority</strong>--Izračunava vrijednost piksela upotrebom vrijednosti većine piksela u 16 najbližih piksela. Pikseli Bez podataka ostati će nepromijenjeni u izlaznom skupu rasterskih podataka.",
	"@@Resample_Resampling-Type_tag8@@": "<strong>Bilinear Interpolation Plus</strong>--Koristi <strong>Bilinear Interpolation</strong>, osim piksela uz rubove koji su definirani kao Bez podataka i koji nisu replicirani ili razmatrani u izračunu. Koristite <strong>Bilinear Interpolation Plus</strong> za popločane podatke jer će se rubovi bolje slagati.",
	"@@Resample_Resampling-Type_tag14@@": "<strong>Gauss Blur</strong>--Primjenjuje Gaussovu konvulaciju na izvorni raster i izračunava vrijednost piksela upotrebom vrijednosti ponderirane udaljenosti četiri najbliža piksela iz zamućenog rastera. To je prikladno za uklanjanje šuma iz podataka ponovnog uzorkovanja i za smanjenje uzorkovanja na veću veličinu piksela.",
	"@@Resample_Resampling-Type_tag16@@": "<strong>Gauss Blur Plus</strong>--Koristi istu metodu kao i <strong>Gauss Blur</strong>, osim piksela uz rubove koji su definirani kao Bez podataka i koji nisu replicirani ili razmatrani u izračunu. Koristite <strong>Gauss Blur Plus</strong> za popločane podatke jer će se rubovi bolje slagati.",
	"@@Resample_Resampling-Type_tag22@@": "<strong>Average</strong>--Izračunava vrijednosti piksela upotrebom prosječne vrijednosti svih preklapajućih piksela, za svaki ciljni piksel.",
	"@@Resample_Resampling-Type_tag24@@": "<strong>Minimum</strong>--Izračunava vrijednost piksela upotrebom minimalne vrijednosti svih preklapajućih piksela. Pikseli Bez podataka ostati će nepromijenjeni u izlaznom skupu rasterskih podataka.",
	"@@Resample_Resampling-Type_tag26@@": "<strong>Maximum</strong>--To je prikladno za kontinuirane podatke, ono obrađuje izglađeniju izlaznu sliku nego metoda ponovnog uzorkovanja Najbliži susjed.",
	"@@Resample_Resampling-Type_tag28@@": "<strong>Vector Average</strong>--Izračunava prosjek vektora smjera magnitude upotrebom svih uključenih piksela. Ova je metoda primjenjiva samo za dvokanalne rastere koji predstavljaju magnitudu i smjer. Ona prvo pretvara smjer magnitude u U-V, a zatim uzima artimetički prosjek među svim uključenim pikselima za dohvaćanje vrijednosti U-V ciljnog piksela i pretvara je natrag u smjer magnitude.",
	"@@Round-Down_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Round-Down_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Round-Down_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Round-Down_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Round-Down_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Round-Down_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Round-Down_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Round-Down_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Round-Down_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Round-Down_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Round-Down_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Round-Down_Raster_tag0@@": "Ulazne vrijednosti koje će se zaokružiti prema dolje.",
	"@@Round-Up_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Round-Up_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Round-Up_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Round-Up_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Round-Up_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Round-Up_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Round-Up_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Round-Up_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Round-Up_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Round-Up_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Round-Up_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Round-Up_Raster_tag0@@": "Ulazne vrijednosti koje će se zaokružiti prema gore.",
	"@@Segment-Mean-Shift_Minimum-Segment-Size-in-Pixels_tag0@@": "Minimalna veličina piksela, mjereno u pikselima. Taj je piksel povezan s vašom minimalnom jedinicom mapiranja i filtrirat će manje blokove piksela. Svi segmenti koji su manji od te specificirane vrijednosti spojit će manje segmente sa susjednim segmentom koji im najviše odgovara.",
	"@@Segment-Mean-Shift_Raster_tag0@@": "Ulazni raster za segmentiranje.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag0@@": "Granice segmenta iscrtane kao crna linija obrisa oko svakog segmenta. To je korisno tako da možete razlikovati susjedne segmente koji imaju slične boje.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag1@@": "Neoznačeno--Granice segmenta nisu prikazane. To je zadano.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag2@@": "Označeno--Granice segmenta prikazane su uz crne linije obrisa oko svakog segmenta.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag0@@": "Relativna važnost razdvajanja objekata temelji se na prostornim karakteristikama.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag1@@": "Valjane vrijednosti cijelog broja kreću se od 1 do 20. Manje vrijednosti rezultiraju širim klasama i većim izglađivanjem. Viša je vrijednost prikladna za diskriminiranje između geoobjekata koji su prostorno manji i grupirani zajedno. Na primjer, u urbanoj sceni, općenitu nepropusnu površinu geoobjekta možete klasificirati vrijednosti manjeg prostornog detalja ili možete klasificirati zgrade i ceste kao zasebne razrede pomoću vrijednosti boljih detalja o prostoru.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag0@@": "Relativna važnost razdvajanja objekata temelji se na karakteristikama boje.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag1@@": "Valjane vrijednosti plutajuće točke kreću se od 1,0 do 20,0. Manje vrijednosti rezultiraju širim klasama i većim izglađivanjem. Viša je vrijednost prikladna kada želite diskriminirati između geoobjekata koji imaju donekle slične spektralne karakteristike. Na primjer, upotreba vrijednosti boljih detalja o prostoru u šumovitom prizoru omogućuje vam da bolje razlikujete različite vrste stabala.",
	"@@Segment-Mean-Shift_maximumsegmentsizeinpixels_tag0@@": "<p>Maksimalna veličina segmenta. Segmenti koji su veći od navedene veličine bit će podijeljeni. Koristite ovaj parametar da spriječite artefakte u izlaznom sloju koji nastaju zbog velikih segmenata. Zadana vrijednsot je -1.</p>",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag0@@": "Odaberite jednu od četiri vrste kalibracije:",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag1@@": "<strong>Beta nought</strong>--proizvodi izlaz koji sadrži koeficijent svjetline radara.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag3@@": "<strong>Sigma nought</strong>--povratni radarski signal vraćen na antenu s jedinice područja na tlu, relativno na raspon na tlu.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag5@@": "<strong>Gamma</strong>--mjerenje odaslane i vraćene energije koja je korisna za određivanje uzoraka antene.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag7@@": "<strong>None</strong>--ne primijenite ispravku. To je zadano.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag0@@": "Sentinel-1 Level-1 GRD ili SLC ulazni raster koji želite obraditi.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag1@@": "Funkcija će upotrebljavati LUT datoteku za primjenu termičkog ispravka ili za uklanjanje ispravka, ovisno o sadržaju LUT-a.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag0@@": "Sentinel-1 ulazni raster koji želite obraditi.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag1@@": "Funkcija će upotrebljavati LUT datoteku ili za primjenu termičkog ispravka ili za uklanjanje ispravka, ovisno o sadržaju LUT-a.",
	"@@Set-Null_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Set-Null_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Set-Null_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Set-Null_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Set-Null_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Set-Null_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Set-Null_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Set-Null_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Set-Null_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Set-Null_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Set-Null_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Set-Null_False-Raster_tag0@@": "Unos čije će se vrijednosti upotrebljavati kao vrijednosti izlaznog piksela ako je uvjet neistinit. On može biti cijeli broj, plutajuća točka ili konstantna vrijednost.",
	"@@Set-Null_Raster_tag0@@": "Ulazni raster koji predstavlja Booleanski rezultat funkcije logičkog matematičkog rastera. Vrijednosti će biti 1 (za istinito) ili 0 (za neistinito). Može biti cijeli broj ili plutajuća točka rastera.",
	"@@Shaded-Relief_Altitude_tag0@@": "Nadmorska visina je nagib visine terena sunca iznad horizonta i u rasponu je od 0 do 90 stupnjeva. Vrijednost od 0 stupnjeva naznačuje da je sunce na horizontu, tj. Na istoj horizontalnoj ravnini kao i referentni okvir. Vrijednost od 90 naznačuje da se sunce nalazi izravno iznad glave. Zadana je vrijednost 45 stupnjeva iznad horizonta.",
	"@@Shaded-Relief_Azimuth_tag0@@": "Azimut je relativni položaj sunca uz horizont (u stupnjevima). Taj je položaj naznačen kutom sunca koji je izmjeren u smjeru kretanja kazaljke na satu prema sjeveru. Azimut od 0 stupnjeva naznačava sjever, isto je na 90 stupnjeva, jug na 180 stupnjeva, a zapad na 270 stupnjeva.",
	"@@Shaded-Relief_Color-Scheme-Type_tag0@@": "Specificirajte hoće li se upotrebljavati paleta boja ili karta u boji za prikaz osjenčanog reljefa.",
	"@@Shaded-Relief_Color-Scheme-Type_tag1@@": "<strong>Color Ramp</strong>--Kada odaberete <strong>Color Ramp</strong>, od vas će se tražiti da odaberete odgovarajuću rampu u boji.",
	"@@Shaded-Relief_Color-Scheme-Type_tag5@@": "<strong>Colormap</strong>--Kada odaberete <strong>Colormap</strong> , od vas će se zatražiti da odredite datoteku karte boja koju želite koristiti.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag0@@": "Specificira hoće li interpolacija zadanog rubnog piksela biti onemogućena.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag1@@": "Neoznačeno--bilinearno ponovno uzorkovanje primjenit će se ujednačeno za ponovno uzorkovanje osjenčenog reljefa. To je zadano.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag2@@": "Označeno--Bilinearno ponovno uzorkovanje upotrebljavat će se unutar osjenčenog reljefa, osim uz rubove rastera ili pored piksela Bez podataka. Ti će pikseli biti popunjeni parametrom Bez podataka, jer će on smanjiti svaki efekt oštrog ruba do kojeg može doći.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag3@@": "Upotrebom ove opcije izbjeći će se artefakti ponovnog uzorkovanja do kojih može doći uz rubove rastera. Izlazni pikseli uz rub rastere ili pored piksela bez vrijednosti podataka bit će popunjeni vrijednosti Bez podataka; zbog toga se preporučuje da se ova opcija upotrebljava samo ako drugi rasteri s preklapajućim pikselima nisu dostupni. Kada su dostupni preklapajući pikseli, ta područja Bez podataka prikazivat će vrijednosti preklapajućih piksela umjesto da budu prazna.",
	"@@Shaded-Relief_Raster_tag0@@": "Ulazni raster visine terena.",
	"@@Shaded-Relief_Scaling_tag0@@": "Osjenčeni rezultat dinamično se skalira prilagođavanjem faktora z upotrebom jedne od ove dvije opcije:",
	"@@Shaded-Relief_Scaling_tag1@@": "<strong>None</strong>--Ne primjenjuje se skaliranje. To je idealno za pojedinačni skup rasterskih podataka koji pokriva lokalno područje. To nije preporučeno za skupove podataka diljem svijeta s velikim varijacijama u visini terena ili kartama s više skala, jer će to proizvesti reljef terena s malo varijacija pri malim mjerilima.",
	"@@Shaded-Relief_Scaling_tag3@@": "<strong>Adjusted</strong>--Primjenjuje se nelinearno podešavanje koristeći zadane vrijednosti <strong>Pixel Size Power</strong> i <strong>Pixel Size Factor</strong>, koje prihvaćaju široku raznolikost promjena visine (mjerila) dok gledatelj uvećava i umanjuje. <strong>Adjusted</strong> opcija preporučuje se kada se upotrebljava skup podataka diljem svijeta.",
	"@@Shaded-Relief_Z-Factor_tag0@@": "Z-faktor je faktor za skaliranje koji se upotrebljava za pretvaranje vrijednosti visine terena za dvije svrhe:",
	"@@Shaded-Relief_Z-Factor_tag1@@": "Za pretvaranje jedinice visine terena (kao što su metri ili stope) u horizontalne koordinatne jedinice skupa podataka, koje mogu biti stope, metri ili stupnjevi",
	"@@Shaded-Relief_Z-Factor_tag2@@": "Za dodavanje vertikalnog uveličavanja radi vizualnog efekta",
	"@@Shaded-Relief_Z-Factor_tag3@@": "Osjenčeni rezultat dinamično se skalira prilagođavanjem faktora z upotrebom jedne od ove dvije opcije:",
	"@@Shaded-Relief_Z-Factor_tag4@@": "<strong>None</strong>--Ne primjenjuje se skaliranje. To je idealno za pojedinačni skup rasterskih podataka koji pokriva lokalno područje. To nije preporučeno za skupove podataka diljem svijeta s velikim varijacijama u visini terena ili kartama s više skala, jer će to proizvesti reljef terena s malo varijacija pri malim mjerilima.",
	"@@Shaded-Relief_Z-Factor_tag6@@": "<strong>Adjusted</strong>--Primjenjuje se nelinearno podešavanje koristeći zadane vrijednosti <strong>Pixel Size Power</strong> i <strong>Pixel Size Factor</strong>, koje prihvaćaju široku raznolikost promjena visine (mjerila) dok gledatelj uvećava i umanjuje. <strong>Adjusted</strong> opcija preporučuje se kada se upotrebljava skup podataka diljem svijeta.",
	"@@Shaded-Relief_hillshadetype_tag0@@": "Upravlja izvorom osvjetljenja za nijansiranje brda.",
	"@@Shaded-Relief_hillshadetype_tag1@@": "<strong>Traditional</strong>--Izračunava nijansiranje brda iz jednog smjera osvjetljenja. Možete postaviti <strong>Azimuth</strong> i <strong>Altitude</strong> opcije za kontrolu lokacije izvora svjetlosti. To je zadano.",
	"@@Shaded-Relief_hillshadetype_tag2@@": "<strong>Multidirectional</strong>--Kombinira svjetlo iz više izvora za predstavljanje poboljšane vizualizacije terena.",
	"@@Shaded-Relief_PSPower_tag0@@": "<strong>Pixel Size Power</strong> uzima u obzir promjene nadmorske visine (ili mjerila) dok gledatelj povećava i smanjuje prikaz karte. Ona se eksponencijalno primjenjuje na pojam veličine piksela u jednadžbi koja upravlja stopu pri kojoj se <strong>Z Factor</strong> mijenja za izbjegavanje znatnog gubitka reljefa.",
	"@@Shaded-Relief_PSPower_tag1@@": "Ovaj parametar vrijedi samo kada je <strong>Scaling</strong> tip <strong>Adjusted</strong>. Zadana vrijednost je 0,664.",
	"@@Shaded-Relief_PSZFactor_tag0@@": "<strong>Pixel Size Factor</strong> uzima u obzir promjene u mjerilu dok gledatelj povećava i umanjuje prikaz karte. Upravlja brzinom kojom se mijenja <strong>Z Factor</strong>.",
	"@@Shaded-Relief_PSZFactor_tag1@@": "Ovaj parametar vrijedi samo kada je <strong>Scaling</strong> tip <strong>Adjusted</strong>. Zadana vrijednost je 0,024.",
	"@@Sin_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Sin_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Sin_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Sin_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Sin_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Sin_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Sin_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Sin_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Sin_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Sin_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Sin_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Sin_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti sinusa.",
	"@@SinH_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@SinH_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@SinH_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@SinH_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@SinH_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@SinH_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@SinH_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@SinH_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@SinH_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@SinH_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@SinH_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@SinH_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti hiperbolnog sinusa.",
	"@@Sink_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smjer protoka iz svake ćelije.",
	"@@Sink_Flow-Direction-Raster_tag1@@": "Raster smjera protoka može se izraditi upotrebom funkcije <strong>Flow Direction</strong>.",
	"@@Slope_DEM_tag0@@": "Ulazni raster visine terena.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag0@@": "Upotrebom ove opcije izbjeći će se artefakti ponovnog uzorkovanja do kojih može doći uz rubove rastera. Izlazni pikseli uz rub rastere ili pored piksela bez vrijednosti podataka bit će popunjeni vrijednosti Bez podataka; zbog toga se preporučuje da se ova opcija upotrebljava samo ako drugi rasteri s preklapajućim pikselima nisu dostupni. Kada su dostupni preklapajući pikseli, ta područja Bez podataka prikazivat će vrijednosti preklapajućih piksela umjesto da budu prazna.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag1@@": "Neoznačeno--bilinearno ponovno uzorkovanje primjenit će se ujednačeno za ponovno uzorkovanje nagiba. To je zadano.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag2@@": "Označeno--Bilinearno ponovno uzorkovanje upotrebljavat će se unutar nagiba, osim uz rubove rastera ili pored piksela Bez podataka. Ti će pikseli biti popunjeni parametrom Bez podataka, jer će on smanjiti svaki efekt oštrog ruba do kojeg može doći.",
	"@@Slope_Scaling_tag0@@": "Sklonost nagibu može biti izlaz kao vrijednost u stupnjevima ili porastu postotka. Posoje tri opcije za <strong>Scaling</strong>:",
	"@@Slope_Scaling_tag3@@": "<strong>Degree</strong>--Sklonost nagibu izračunava se u stupnjevima. Vrijednosti se kreću od 0 do 90.",
	"@@Slope_Scaling_tag5@@": "<strong>Percent_Rise</strong>--Sklonost nagibu izračunava se kao postotne vrijednosti. Vrijednosti se kreću od 0 do beskonačno. Ravna površina predstavlja 0 posto porasta, dok 45 stupnjeva površine predstavlja 100 posto porasta. Kako površina postaje okomitija, porast postotka postajat će veći.",
	"@@Slope_Scaling_tag7@@": "<strong>Scaled</strong>--Sklonost nagibu izračunava se isto kao STUPANJ; ali faktor z prilagođava se mjerilu. Koristi <strong>Pixel Size Power</strong> i <strong>Pixel Size Factor</strong> vrijednosti, koje prihvaćaju široku raznolikost promjena visine (mjerila) dok gledatelj uvećava i umanjuje. Ovo se preporučuje prilikom upotrebe skupova podataka diljem svijeta--osobito kada se nagib upotrebljava kao površina za vizualizaciju.",
	"@@Slope_Scaling_tag13@@": "Faktor z prilagođava se upotrebom sljedeće jednadžbe:",
	"@@Slope_Scaling_tag14@@": "Prilagođeni faktor z = (Faktor z) + (Veličina piksela)",
	"@@Slope_Scaling_tag15@@": "x (Faktor veličine piksela)",
	"@@Slope_Scaling_tag16@@": "Snaga veličine piksela",
	"@@Slope_Z-Factor_tag0@@": "<strong>Z Factor</strong> je faktor za skaliranje koji se upotrebljava za pretvaranje vrijednosti visine terena za dvije svrhe:",
	"@@Slope_Z-Factor_tag3@@": "Za pretvaranje jedinice visine terena (kao što su metri ili stope) u horizontalne koordinatne jedinice skupa podataka, koje mogu biti stope, metri ili stupnjevi",
	"@@Slope_Z-Factor_tag4@@": "Za dodavanje vertikalnog uveličavanja radi vizualnog efekta",
	"@@Slope_PSPower_tag0@@": "<strong>Pixel Size Power</strong> uzima u obzir promjene nadmorske visine (ili mjerila) dok gledatelj povećava i smanjuje prikaz karte. Ona se eksponencijalno primjenjuje na pojam veličine piksela u jednadžbi koja upravlja stopu pri kojoj se <strong>Z Factor</strong> mijenja za izbjegavanje znatnog gubitka reljefa.",
	"@@Slope_PSPower_tag1@@": "Ovaj parametar vrijedi samo kada je <strong>Scaling</strong> tip <strong>Scaled</strong>. Zadana vrijednost je 0,664.",
	"@@Slope_PSZFactor_tag0@@": "<strong>Pixel Size Factor</strong> uzima u obzir promjene u mjerilu dok gledatelj povećava i umanjuje prikaz karte. Upravlja brzinom kojom se mijenja <strong>Z Factor</strong>.",
	"@@Slope_PSZFactor_tag1@@": "Ovaj parametar vrijedi samo kada je <strong>Scaling</strong> tip <strong>Scaled</strong>. Zadana vrijednost je 0,024.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag0@@": "Ulazna akumulacija protoka rasterskog sloja.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag1@@": "Može se stvoriti pomoću funkcije <strong>Flow Accumulation</strong>.",
	"@@Snap-Pour-Point_Pour-Point-Field_tag0@@": "Polje se upotrebljava za dodjeljivanje vrijednosti do lokacija odvodnih točaka.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag0@@": "Ulazne lokacije odvodnih točaka koje će se izrezati.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag1@@": "Za ulazni rasterski sloj sve ćelije koje nisu Bez podataka (tj. imaju vrijednost) smatrat će se odvodnim točkama i izrezat će se.",
	"@@Snap-Pour-Point_Snap-Distance_tag0@@": "Maksimalna udaljenost, u jedinicama karte, za pretraživanje ćelije višeg akumuliranog protoka.",
	"@@Speckle_Additive-Noise-Mean_tag0@@": "Određuje srednju vrijednost aditivnog šuma. Veća vrijednost srednjeg šuma proizvodit će manje izglađivanja, dok će manja vrijednost rezultirati s više izglađivanja.",
	"@@Speckle_Additive-Noise-Mean_tag1@@": "Ovaj parametar je valjan samo kada je <strong>Filter Type</strong> <strong>Lee Filter</strong> i <strong>Noise Model</strong> je <strong>Additive Noise</strong> ili <strong>Additive and Multiplicative Noise</strong>. Zadana vrijednost je 0.",
	"@@Speckle_Damping-Factor_tag0@@": "Specificira obuhvat eksponencijalnog učinka prigušivanja na filtriranje. Veća vrijednost prigušivanja bolje zadržava rubove, ali izglađuje manje, dok manja vrijednost proizvodi više izglađivanja. Vrijednost od 0 rezultira istim izlazom kao niskopropusni filtar.",
	"@@Speckle_Damping-Factor_tag1@@": "Ovaj parametar je valjan samo kada je <strong>Filter Type</strong> <strong>Enhanced Lee Filter</strong> ili <strong>Frost Filter</strong>. Zadana vrijednost je 1.",
	"@@Speckle_Filter-Size_tag0@@": "Specificira veličinu okvira piksela koji se upotrebljava za filtriranje šuma:",
	"@@Speckle_Filter-Size_tag1@@": "3x3",
	"@@Speckle_Filter-Size_tag2@@": "5x5",
	"@@Speckle_Filter-Size_tag3@@": "7x7",
	"@@Speckle_Filter-Size_tag4@@": "9x9",
	"@@Speckle_Filter-Size_tag5@@": "11x11",
	"@@Speckle_Filter-Type_tag0@@": "Specificira vrstu filtra koji se treba upotrebljavati u algoritmu izglađivanja za uklanjanja šumova pjega:",
	"@@Speckle_Filter-Type_tag1@@": "<strong>Lee Filter</strong>--Smanjuje šumove pjega primjenom prostornog filtra na svaki piksel na slici, koji filtrira podatke na temelju lokalne statistike koja se izračunava unutar kvadratnog okvira. Ovaj je filtar koristan kada želite izgladiti pjegave podatke koji imaju aditivnu ili multiplikativnu komponentu. To je zadano.",
	"@@Speckle_Filter-Type_tag3@@": "<strong>Enhanced Lee Filter</strong>--Prilagođena verzija Lee filtra koja uključuje <strong>Damping Factor</strong> i <strong>Number of Looks</strong>. Ovaj je filtar koristan kada želite smanjiti pjege, a pritom očuvati informacije o teksturi.",
	"@@Speckle_Filter-Type_tag9@@": "<strong>Frost Filter</strong>--Smanjuje šumove pjega uz eksponencijalno prigušeni cirkularni simetrični filtar koji upotrebljava lokalnu statistiku unutar individualnih okvira filtra. Ovaj je filtar koristan kada želite smanjiti pjege, a pritom očuvati rubove na slikama radara.",
	"@@Speckle_Filter-Type_tag11@@": "<strong>Kuan Filter</strong>--Slično filtru Lee, ovaj filtar primjenjuje prostorni filtar na svaki piksel na slici i filtrira podatke na temelju lokalne statistike koja se izračunava unutar kvadratnog okvira. Ovaj je filtar koristan kada želite smanjiti pjege, a pritom očuvati rubove na slikama radara.",
	"@@Speckle_Multiplicative-Noise-Mean_tag0@@": "Određuje srednju vrijednost multiplikativnog šuma. Veća vrijednost srednjeg šuma proizvodit će manje izglađivanja, dok će manja vrijednost rezultirati s više izglađivanja.",
	"@@Speckle_Multiplicative-Noise-Mean_tag1@@": "Ovaj parametar je valjan samo kada je <strong>Filter Type</strong> <strong>Lee Filter</strong> i <strong>Noise Model</strong> je <strong>Additive Noise</strong> ili <strong>Additive and Multiplicative Noise</strong>. Zadana vrijednost je 1.",
	"@@Speckle_Noise-Model_tag0@@": "Određuje vrstu šuma koja smanjuje kvalitetu slike radara:",
	"@@Speckle_Noise-Model_tag1@@": "<strong>Multiplicative Noise</strong>--Nasumična buka signala koja se multiplicira u relevantni signal tijekom snimanja ili prijenosa",
	"@@Speckle_Noise-Model_tag3@@": "<strong>Additive Noise</strong>--Nasumična buka signala koja se dodaje u relevantni signal tijekom snimanja ili prijenosa",
	"@@Speckle_Noise-Model_tag5@@": "<strong>Additive and Multiplicative Noise</strong>--Oboje su modeli buke",
	"@@Speckle_Noise-Variance_tag0@@": "Određuje varijancu šuma slike radara.",
	"@@Speckle_Noise-Variance_tag1@@": "Ovaj parametar je valjan samo kada je <strong>Filter Type</strong> <strong>Lee Filter</strong> i <strong>Noise Model</strong> je <strong>Additive Noise</strong> ili <strong>Additive and Multiplicative Noise</strong>. Zadana vrijednost je 0,25.",
	"@@Speckle_Number-of-Looks_tag0@@": "Određuje broj gledanja slike, koji kontrolira izglađivanje slike i procjenjuje varijancu šuma. Manja vrijednost rezultira s više izglađivanja, a veća vrijednost zadržava više geoobjekata slike.",
	"@@Speckle_Number-of-Looks_tag1@@": "Ovaj parametar je valjan samo kada je <strong>Filter Type</strong> <strong>Lee Filter</strong> i <strong>Noise Model</strong> je <strong>Multiplicative Noise</strong> ili kada je <strong>Filter Type</strong> <strong>Kuan Filter</strong>. Zadana vrijednost je 1.",
	"@@Speckle_Raster_tag0@@": "Ulazni raster.",
	"@@Spectral-Conversion_Conversion-Matrix_tag0@@": "Matrica koja se upotrebljava za pretvaranje ulaznog rastera.",
	"@@Spectral-Conversion_Conversion-Matrix_tag1@@": "Ovo je jednadžba koja se upotrebljava za provođenje te konverzije:",
	"@@Spectral-Conversion_Conversion-Matrix_tag2@@": "Izlazni Band_R = Weight_P * Band_C",
	"@@Spectral-Conversion_Conversion-Matrix_tag3@@": "pri čemu je:",
	"@@Spectral-Conversion_Conversion-Matrix_tag4@@": "Band_R izlazni kanal, gdje je R broj od 1 do broja izlaznih kanala.",
	"@@Spectral-Conversion_Conversion-Matrix_tag5@@": "Weight_P je popis težina razdvojen zarezima, 1 za svaki ulazni kanal. Zbroj težina za svaki kanal trebao bi biti 1.",
	"@@Spectral-Conversion_Conversion-Matrix_tag6@@": "Band_C je ulazna slika, gdje je G broj od 1 do broja kanala ulazne slike.",
	"@@Spectral-Conversion_Raster_tag0@@": "Ulazni raster.",
	"@@Spectral-Conversion_Raster_tag1@@": "To može biti skup rasterskih podataka, mozaični skup podataka ili usluga slike.",
	"@@Spectral-Conversion_Size_tag0@@": "Broj redaka i stupaca u <strong>Conversion Matrix</strong>.",
	"@@Square_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Square_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Square_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Square_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Square_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Square_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Square_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Square_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Square_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Square_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Square_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Square_Raster_tag0@@": "Ulazne vrijednosti koje će se kvadrirati.",
	"@@Square-Root_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Square-Root_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Square-Root_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Square-Root_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Square-Root_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Square-Root_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Square-Root_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Square-Root_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Square-Root_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Square-Root_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Square-Root_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Square-Root_Raster_tag0@@": "Ulazne vrijednosti koriste se za pronalaženje korijena.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag0@@": "Postavlja vrijednosti statistike za svaki kanal.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag1@@": "Stupac ${Histogram} polje je samo za čitanje koje je moguće popuniti uz pomoć parametra <strong>Import</strong>. Ako uvozite datoteku histograma, stupac ${Histogram} bit će označen kao <strong>Defined</strong>.",
	"@@Statistics-and-Histogram_Import_tag0@@": "Uvozi informacije o statistici i histogramu iz postojećeg rastera ili XML datoteke.",
	"@@Statistics-and-Histogram_Raster_tag0@@": "Ulazni raster koji zahtijeva da statistike i histogram budu postavljeni.",
	"@@Statistics-and-Histogram_Statistics_tag0@@": "Postavlja vrijednosti statistike za svaki kanal.",
	"@@Stream-Link_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smjer protoka iz svake ćelije.",
	"@@Stream-Link_Flow-Direction-Raster_tag1@@": "Raster smjera protoka može se izraditi upotrebom funkcije <strong>Flow Direction</strong>.",
	"@@Stream-Link_Stream-Raster_tag0@@": "Ulazni raster koji predstavlja mrežu linearnog protoka.",
	"@@Stream-Order_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smjer protoka iz svake ćelije.",
	"@@Stream-Order_Flow-Direction-Raster_tag1@@": "Raster smjera protoka može se izraditi upotrebom funkcije <strong>Flow Direction</strong>.",
	"@@Stream-Order_Order-Method_tag0@@": "Metoda koja se upotrebljava za dodjelu reda protoka.",
	"@@Stream-Order_Order-Method_tag1@@": "<strong>STRAHLER</strong>--Metoda reda protoka koju je 1952. godine predložio Strahler. Redoslijed protoka može se povećati kada protoci imaju isti redoslijed presjeka. Presjek poveznice prvog reda i drugog reda ostati će poveznica drugog redoslijeda i neće se izraditi poveznica trećeg reda. To je zadano.",
	"@@Stream-Order_Order-Method_tag3@@": "<strong>SHREVE</strong>-Metoda reda protoka prema jačini koju je 1967. godine predložio Shreve . Sve poveznice bez pritoka dodijeljene su prvoj jačini (redu). Jačine su aditivne padine. Kada se dvije poveznice presijecaju, njihove su jačine dodane i dodijeljene poveznici padine.",
	"@@Stream-Order_Stream-Raster_tag0@@": "Protok ulaznog rastera koji predstavlja mrežu linearnog protoka.",
	"@@Stretch_Auto-Gamma_tag0@@": "Koristite <strong>Auto Gamma</strong> za izračun game iz statistike i histograma skupa podataka. Statistike mogu biti statistike procijenjene samom funkcijom ili ih može procijeniti softver ako odaberete sloj.",
	"@@Stretch_Dynamic-Range-Adjustment_tag0@@": "Označite <strong>Dynamic Range Adjustment</strong> ako želite da se statistike izračunaju samo iz piksela prikazanih na vašem zaslonu. Ova se opcija općenito primjenjuje kada će se slika objavljivati i upotrebljavati u internet aplikaciji koja ne može provoditi ovu vrstu rastezanja.",
	"@@Stretch_Estimate-Statistics_tag0@@": "Označite <strong>Estimate Statistics</strong> ako želite procijeniti statistiku. Procijenjene statistike izračunate su iz uzorkovanja 1000 puta 1000 iz središta rastera i upotrebljavaju se za rastezanje.",
	"@@Stretch_Estimate-Statistics_tag3@@": "Ako je označeno i ako raster ima statistike, ili ste upisali vrijednosti u tablicu <strong>Statistics</strong>, oni će se koristiti umjesto procjenjivanja, osim ako istezanje ne zahtijeva histogram. Ako je za rastezanje potreban histogram koji ne postoji, on će se procijeniti.",
	"@@Stretch_Gamma_tag0@@": "Upotrijebite traku klizača za ručno postavljanje vrijednosti <strong>Gamma</strong>.",
	"@@Stretch_Number-Of-Standard-Deviations_tag0@@": "Odredite n vrijednost za broj standardnih devijacija koje će se upotrebljavati. Ova se metoda upotrebljava za naglašavanje koliko vrijednosti geoobjekta variraju od srednje vrijednosti; najbolja je kada se upotrebljava na normalno distribuiranim podacima.",
	"@@Stretch_Output-Maximum_tag0@@": "Postavite vrijednost najvišeg piksela za h.",
	"@@Stretch_Output-Maximum_tag1@@": "<strong>Output Minimum</strong> i <strong>Output Maximum</strong> postavit će se raspon vrijednosti koji će se zatim linearno kontrastno protezati.",
	"@@Stretch_Output-Minimum_tag0@@": "Postavite vrijednost najnižeg piksela za h.",
	"@@Stretch_Output-Minimum_tag1@@": "<strong>Output Minimum</strong> i <strong>Output Maximum</strong> postavit će se raspon vrijednosti koji će se zatim linearno kontrastno protezati.",
	"@@Stretch_Percent-Clip-Maximum_tag0@@": "Odredite postotak visokih vrijednosti za izuzimanje iz rastezanja.",
	"@@Stretch_Percent-Clip-Maximum_tag1@@": "Valjane vrijednosti kreću se od 0 do 99.",
	"@@Stretch_Percent-Clip-Minimum_tag0@@": "Odredite postotak niskih vrijednosti za izuzimanje iz rastezanja.",
	"@@Stretch_Percent-Clip-Minimum_tag1@@": "Valjane vrijednosti kreću se od 0 do 99.",
	"@@Stretch_Raster_tag0@@": "Ulazni raster za rastezanje kontrasta.",
	"@@Stretch_Sigmoid-Strength-Level_tag0@@": "<strong>Strength Level</strong> određuje koliko će se sigmoidalne funkcije upotrebljavati u rastezanju. Niska vrijednost, kao što je 1, upotrebljavati će samo srednji dio krivulje koja obično proizvodi jednolične i blijede boje. Visoka vrijednost, kao što je 6, upotrebljavati će samo srednji dio krivulje koja obično proizvodi jarke i oštre boje.",
	"@@Stretch_Statistics_tag0@@": "U dijaloški okvir možete unijeti vlastite statistike. Prema zadanim vrijednostima statistike se dohvaćaju iz podataka; međutim, bilo koja vrijednost koju unesete u ovaj parametar upotrebljavat će se umjesto toga.",
	"@@Stretch_Type_tag0@@": "Odaberite metodu vrste rastezanja:",
	"@@Stretch_Type_tag1@@": "Nema--Nema rastezanja kontrasta",
	"@@Stretch_Type_tag2@@": "StdDev--Standardna devijacija rastezanja",
	"@@Stretch_Type_tag3@@": "MinMax--Minimalno-maksimalno rastezanje",
	"@@Stretch_Type_tag4@@": "PercentMinMax--Postotak skraćivanja rastezanja",
	"@@Stretch_Type_tag5@@": "Sigmoid--Sigmoid rastezanje",
	"@@Stretch_Use-Gamma_tag0@@": "Označite <strong>Use Gamma</strong> ako želite ako želite primijeniti gama rastezanje.",
	"@@Swath_Cellsize_tag0@@": "Veličina ćelije za izlazni raster automatski će se detektirati; međutim, vi to možete promijeniti, ako želite. Veličinu ćelije moguće promijeniti, ali obuhvat skupa rasterskih podataka ostaje isti.",
	"@@Swath_Interpolation-Method_tag0@@": "Postoje četiri metode ponovnog uzorkovanja za ovu funkciju:",
	"@@Swath_Interpolation-Method_tag1@@": "<strong>Nearest Neighbor</strong>--Izračunava vrijednost piksela koristeći najbliži piksel. Ako ne postoji piksel izvora, u izlazu se ne može izraditi novi piksel.",
	"@@Swath_Interpolation-Method_tag3@@": "-<strong>Bilinear</strong>-Izračunava vrijednost piksela upotrebom vrijednosti ponderirane udaljenosti četiri najbliža piksela.",
	"@@Swath_Interpolation-Method_tag5@@": "<strong>Linear Tinning</strong>--Upotrebljava trianguliranu nepravilnu mrežu iz središnjih točaka svake ćelije u nepravilnom rasteru za interpolaciju površine koja se zatim pretvara u pravilni raster.",
	"@@Swath_Interpolation-Method_tag7@@": "<strong>Natural Neighbor</strong>--Provodi procjenu najbližeg susjeda, najbrža je od metoda interpolacije. Ako se upotrebljava primarno za diskretne podatke, kao što su klasifikacija upotrebe zemljišta, jer neće promijeniti vrijednosti ćelija. Maksimalna prostorna pogreška bit će jedna polovica veličine ćelije.",
	"@@Swath_Raster_tag0@@": "Nepravilno mrežni raster koji će se ponovno uzorkovati.",
	"@@Tan_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Tan_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Tan_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Tan_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Tan_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Tan_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Tan_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Tan_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Tan_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Tan_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Tan_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Tan_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti tangensa.",
	"@@TanH_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@TanH_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@TanH_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@TanH_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@TanH_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@TanH_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@TanH_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@TanH_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@TanH_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@TanH_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@TanH_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@TanH_Raster_tag0@@": "Unos za koji se izračunavaju vrijednosti hiperbolnog tangensa.",
	"@@Tasseled-Cap_Raster_tag0@@": "Ulazni raster za provođenje transformacije Tasseled Cap.",
	"@@Times_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Times_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Times_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Times_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Times_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Times_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Times_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Times_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Times_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Times_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Times_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Times_Raster_tag0@@": "Unos koji sadrži vrijednosti koje će se multiplicirati.",
	"@@Times_Raster_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Times_Raster2_tag0@@": "Unos koji sadrži vrijednosti prema kojima će se multiplicirati prvi unos.",
	"@@Times_Raster2_tag1@@": "Vrijednost konstante može se upotrebljavati kao unos za ovaj parametar, pod uvjetom da je raster specificiran za drugi parametar.",
	"@@Transpose-Bits_Bit-Pattern_tag0@@": "Odaberite vrstu prijenosa koji će provoditi ili specificirati prilagođeni:",
	"@@Transpose-Bits_Bit-Pattern_tag1@@": "Landsat 8 cirus",
	"@@Transpose-Bits_Bit-Pattern_tag2@@": "Landsat 8 oblaci",
	"@@Transpose-Bits_Bit-Pattern_tag3@@": "Landsat 8 sjene oblaka",
	"@@Transpose-Bits_Bit-Pattern_tag4@@": "Landsat 8 određena ispuna",
	"@@Transpose-Bits_Bit-Pattern_tag5@@": "Landsat 8 izostavljeni okvir",
	"@@Transpose-Bits_Bit-Pattern_tag6@@": "Landsat 8 snijeg/led",
	"@@Transpose-Bits_Bit-Pattern_tag7@@": "Landsat 8 okluzija terena",
	"@@Transpose-Bits_Bit-Pattern_tag8@@": "Landsat 8 vegetacija",
	"@@Transpose-Bits_Bit-Pattern_tag9@@": "Landsat 8 voda",
	"@@Transpose-Bits_Bit-Pattern_tag10@@": "Korisnički definirano",
	"@@Transpose-Bits_Constant-Value_tag0@@": "Opcionalna vrijednost koja će se upotrebljavati za ispunu svih bitova koji nisu uključeni u prijenos. Ovaj je parametar izložen kada je parametar <strong>Generate Fill Raster from Constant</strong> postavljen na <strong>Yes</strong>.",
	"@@Transpose-Bits_Fill-Raster_tag0@@": "Određuje skup rasterskih podataka koji će se upotrebljavati za ispunu svih bitova koji nisu uključeni u prijenos. Ovaj je parametar izložen kada je parametar <strong>Generate Fill Raster from Constant</strong> postavljen na <strong>No</strong>.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag0@@": "Generira raster popunjavanja upotrebom vrijednosti konstante:",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag1@@": "<strong>Yes</strong>--Raster će se upotrebljavati upotrebom vrijednosti konstante za ispunjavanje bitova koji nisu uključeni u prijenos. To je zadano.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag3@@": "<strong>No</strong>--Raster će se upotrebljavati upotrebom vrijednosti piksela iz postojećeg skupa rasterskih podataka za ispunjavanje bitova koji nisu uključeni u prijenos.",
	"@@Transpose-Bits_Output-Bit-and-Input-Bit_tag0@@": "Tablica samo za čitanje koja prikazuje izlazne bitove i ulaze koji će biti na njihovom mjestu.",
	"@@Transpose-Bits_Raster_tag0@@": "Ulazni raster za raspakiravanje i ponovno mapiranje.",
	"@@Unit-Conversion_From-Unit_tag0@@": "Originalna vrsta jedinice piksela.",
	"@@Unit-Conversion_Raster_tag0@@": "Ulazni raster koji će sadržavati pretvorene jedinice.",
	"@@Unit-Conversion_To-Unit_tag0@@": "Vrsta pretvorene jedinice piksela.",
	"@@Vector-Field_Angle-Reference-System_tag0@@": "Specificira kako je izmjerene komponenta smjera.",
	"@@Vector-Field_Angle-Reference-System_tag1@@": "Geografski--0° točaka prema sjeveru, a 90° točaka prema istoku",
	"@@Vector-Field_Angle-Reference-System_tag2@@": "Aritmetički--0° točaka prema istoku, a 90° točaka prema sjeveru",
	"@@Vector-Field_Input-Data-Type_tag0@@": "Vrsta vektorskog polja koji vaši unosi predstavljaju.",
	"@@Vector-Field_Input-Data-Type_tag1@@": "Nepoznato--Nije poznato predstavlja li ulaz U-V ili jačinu smjera.",
	"@@Vector-Field_Input-Data-Type_tag2@@": "U-V--Ulazni podaci predstavljaju komponente U i V.",
	"@@Vector-Field_Input-Data-Type_tag3@@": "Jačina smjera--Ulazni podaci predstavljaju jačinu i smjer.",
	"@@Vector-Field_Output-Data-Type_tag0@@": "Specificira vrstu vektorskog polja koji će vaš unosi predstavljati.",
	"@@Vector-Field_Output-Data-Type_tag1@@": "Jačina smjera--Izlazni podaci predstavljaju jačinu i smjer.",
	"@@Vector-Field_Output-Data-Type_tag2@@": "U-V--Izlazni podaci predstavljaju komponente U i V.",
	"@@Vector-Field_Raster1_tag0@@": "Prvi ulazni raster.",
	"@@Vector-Field_Raster1_tag1@@": "To će biti vrijednost U ili jačina.",
	"@@Vector-Field_Raster2_tag0@@": "Drugi ulazni raster.",
	"@@Vector-Field_Raster2_tag1@@": "To će biti vrijednost V ili smjer.",
	"@@Viewshed_Analysis-Method_tag0@@": "Izaberite metodu prema kojoj će se izračunavati vidljivost. Ova vam opcija omogućuje da nešto točnosti zamijenite za povećanu izvedbu.",
	"@@Viewshed_Analysis-Method_tag1@@": "Svi smjerovi pogleda--Smjer pogleda provodi se na svakom pikselu u rasteru kako bi se uspostavila vidljiva područja. To je zadana metoda.",
	"@@Viewshed_Analysis-Method_tag2@@": "Smjerovi pogleda opsega--Smjerovi pogleda provode se samo na pikselima u opsegu vidljivih područja kako bi se uspostavila područja vidljivost. Ova metoda ima bolje performanse od <strong>All Sightlines</strong> metode budući da je u izračunu manje pogleda.",
	"@@Viewshed_Analysis-Type_tag0@@": "Odaberite koju vrstu analize želite provesti – određivanjem koliko je vidljiva svaka ćelije promatračima ili identificiranjem koji su promatrači vidljivi za svaku lokaciju površine.",
	"@@Viewshed_Analysis-Type_tag1@@": "Frekvencija--Broj puta koliko se svaka lokacija piksela u ulaznoj površini rastara može vidjeti unosom lokacija promatrača (kao točke ili vrhovi za polinijske geoobjekte promatrača). To je zadano.",
	"@@Viewshed_Analysis-Type_tag2@@": "Promatrači--Izlaz definira koje će točno točke promatrača biti vidljive sa svake lokacije rastera površine. Dopušteni maksimalni broj ulaznih promatrača je 32 s ovom vrstom analize.",
	"@@Viewshed_Horizontal-End-Angle_tag0@@": "Ova vrijednost definira krajnji kut horizontalnog raspona skeniranja. Vrijednost treba specificirati u stupnjevima od 0 do 360,0; pri čemu je 0 orijentirana prema sjeveru. Zadana vrijednost je 360,0.",
	"@@Viewshed_Horizontal-End-Angle_tag1@@": "To može biti polje u ulaznom skupu podataka <strong>Observer Features</strong> ili brojčana vrijednost. Ako je taj parametar postavljen na vrijednost, ta će se vrijednost upotrebljavati za sve promatrače. Za određivanje različitih vrijednosti za svakog promatrača, postavite taj parametar na polje u skupu podataka <strong>Observer Features</strong>.",
	"@@Viewshed_Horizontal-Start-Angle_tag0@@": "Ova vrijednost definira početni kut horizontalnog raspona skeniranja. Vrijednost treba specificirati u stupnjevima od 0 do 360,0; pri čemu je 0 orijentirana prema sjeveru. Zadana vrijednost je 0.",
	"@@Viewshed_Horizontal-Start-Angle_tag1@@": "To može biti polje u ulaznom skupu podataka <strong>Observer Features</strong> ili brojčana vrijednost. Ako je taj parametar postavljen na vrijednost, ta će se vrijednost upotrebljavati za sve promatrače. Za određivanje različitih vrijednosti za svakog promatrača, postavite taj parametar na polje u skupu podataka <strong>Observer Features</strong>.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag0@@": "Vrsta udaljenosti za parametar unutarnjeg polumjera.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag1@@": "Neoznačeno--<strong>Inner Radius</strong> mora se protumačiti kao 2D udaljenost. To je zadano.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag4@@": "Označeno--<strong>Inner Radius</strong> mora se protumačiti kao 3D udaljenost.",
	"@@Viewshed_Inner-Radius_tag0@@": "Ova vrijednost definira početnu (minimalnu) udaljenost od koje se određuje vrijednost. Pikseli koji su bliži toj udaljenosti smatraju se da nisu vidljivi u izlazu, ali i dalje mogu blokirati vidljivost piksela između <strong>Inner Radius</strong> i <strong>Outer Radius</strong>. Zadana vrijednost je 0.",
	"@@Viewshed_Inner-Radius_tag5@@": "To može biti polje u ulaznom skupu podataka <strong>Observer Features</strong> ili brojčana vrijednost. Ako je taj parametar postavljen na vrijednost, ta će se vrijednost upotrebljavati za sve promatrače. Za određivanje različitih vrijednosti za svakog promatrača, postavite taj parametar na polje u skupu podataka <strong>Observer Features</strong>.",
	"@@Viewshed_Observer-Elevation_tag0@@": "Ta se vrijednost upotrebljava za definiranje visine terena površine točaka promatrača ili vrhova.",
	"@@Viewshed_Observer-Elevation_tag1@@": "To može biti polje u ulaznom skupu podataka <strong>Observer Features</strong> ili brojčana vrijednost. Ako taj parametar nije određen, visina terena promatrača bit će dohvaćena iz rastera površine upotrebom bilinearne interpolacija. Ako je taj parametar postavljen na vrijednost, onda će se ta vrijednost upotrebljavati za sve promatrače. Za određivanje različitih vrijednosti za svakog promatrača, postavite taj parametar na polje u skupu podataka <strong>Observer Features</strong>.",
	"@@Viewshed_Observer-Features_tag0@@": "Obavezna klasa ulaznog geoobjekta koja identificira lokacije promatrača. To može biti točka, više točaka ili polilinijski geoobjekt.",
	"@@Viewshed_Observer-Features_tag1@@": "Klasa ulaznog geoobjekta transformira se u 3D geocentrični koordinatni sustav tijekom izračuna vidljivosti. Promatrači izvan obuhvata rastera površine, ili koji se nalaze u ćelijama Bez podataka, bit će zanemareni pri izračunavanju.",
	"@@Viewshed_Observer-Offset_tag0@@": "Ova vrijednost naznačuje okomitu udaljenost (u jedinicama površine) koja će se dodavati u visinu terena promatrača. To bi trebala biti vrijednost cijelog broja ili plutajuće točke.",
	"@@Viewshed_Observer-Offset_tag1@@": "To može biti polje u ulaznom skupu podataka <strong>Observer Features</strong> ili brojčana vrijednost. Ako je taj parametar postavljen na vrijednost, ta će se vrijednost upotrebljavati za sve promatrače. Za određivanje različitih vrijednosti za svakog promatrača, postavite taj parametar na polje u skupu podataka <strong>Observer Features</strong>.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag0@@": "Vrsta udaljenosti za parametar vanjskog polumjera.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag1@@": "Neoznačeno--<strong>Outer Radius</strong> mora se protumačiti kao 2D udaljenost. To je zadano.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag4@@": "Označeno--<strong>Outer Radius</strong> mora se protumačiti kao 3D udaljenost.",
	"@@Viewshed_Outer-Radius_tag0@@": "Ova vrijednost definira maksimalnu udaljenost od koje se određuje vrijednost. Pikseli izvan te udaljenosti isključuju se iz analize.",
	"@@Viewshed_Outer-Radius_tag1@@": "To može biti polje u ulaznom skupu podataka <strong>Observer Features</strong> ili brojčana vrijednost. Ako je taj parametar postavljen na vrijednost, ta će se vrijednost upotrebljavati za sve promatrače. Za određivanje različitih vrijednosti za svakog promatrača, postavite taj parametar na polje u skupu podataka <strong>Observer Features</strong>.",
	"@@Viewshed_Raster_tag0@@": "Obavezni ulazni rastera površine. Može biti cijeli broj ili plutajuća točka rastera.",
	"@@Viewshed_Raster_tag1@@": "Unos se transformira se u 3D geocentrični koordinatni sustav tijekom izračuna vidljivosti. Ćelije Bez podataka na ulaznom sloju neće blokirati određivanje vidljivosti.",
	"@@Viewshed_Refractive-Coefficient_tag0@@": "Koeficijent loma vidljivog svjetla u zraku.",
	"@@Viewshed_Refractive-Coefficient_tag1@@": "Zadana vrijednost je 0,13.",
	"@@Viewshed_Surface-Offset_tag0@@": "Ova vrijednost naznačuje okomitu udaljenost (u jedinicama površine) za dodavanje vrijednosti z za svaki ciljni piksel, kako bude uzimala u obzir vidljivost. To bi trebala biti vrijednost cijelog broja ili plutajuće točke.",
	"@@Viewshed_Surface-Offset_tag1@@": "To može biti polje u ulaznom skupu podataka <strong>Observer Features</strong> ili brojčana vrijednost. Ako je taj parametar postavljen na vrijednost, ta će se vrijednost upotrebljavati za sve promatrače. Za određivanje različitih vrijednosti za svakog promatrača, postavite taj parametar na polje u skupu podataka <strong>Observer Features</strong>.",
	"@@Viewshed_Vertical-Error_tag0@@": "Iznos nesigurnosti, mjeren kao pogreška korijena iz kvadrata srednje vrijednosti (RMSE), u vrijednostima visine terena površine. Plutajuća točka predstavlja očekivanu pogrešku ulaznih vrijednosti visine terena. Kada je ovom parametru dodijeljena vrijednost veća od 0, izlazni raster vidljivosti bit će plutajuća točka. U tom slučaju vrijednost svakog piksela u izlaznom rasteru vidljivosti predstavlja zbor vjerojatnosti da će ćelija biti vidljiva svakom promatraču.",
	"@@Viewshed_Vertical-Error_tag1@@": "Kada je <strong>Analysis Type</strong> <strong>Observers</strong> ili je <strong>Analysis Method</strong> <strong>Perimeter Sightlines</strong>, ovaj parametar je isključen.",
	"@@Viewshed_Vertical-Lower-Angle_tag0@@": "Ova vrijednost definira ograničenje okomitog donjeg kuta skena ispod horizontalne ravnine. Vrijednost treba specificirati u stupnjevima od -90,0 do 0; koji mogu biti cijeli broj ili plutajuća točka. Zadana vrijednost je -90,0.",
	"@@Viewshed_Vertical-Lower-Angle_tag1@@": "To može biti polje u ulaznom skupu podataka <strong>Observer Features</strong> ili brojčana vrijednost. Ako je taj parametar postavljen na vrijednost, ta će se vrijednost upotrebljavati za sve promatrače. Za određivanje različitih vrijednosti za svakog promatrača, postavite taj parametar na polje u skupu podataka <strong>Observer Features</strong>.",
	"@@Viewshed_Vertical-Upper-Angle_tag0@@": "Ova vrijednost definira ograničenje okomitog gornjeg kuta skena iznad horizontalne ravnine. Vrijednost treba specificirati u stupnjevima od 0 do 90,0; koji mogu biti cijeli broj ili plutajuća točka. Zadana vrijednost je 90,0.",
	"@@Viewshed_Vertical-Upper-Angle_tag1@@": "To može biti polje u ulaznom skupu podataka <strong>Observer Features</strong> ili brojčana vrijednost. Ako je taj parametar postavljen na vrijednost, ta će se vrijednost upotrebljavati za sve promatrače. Za određivanje različitih vrijednosti za svakog promatrača, postavite taj parametar na polje u skupu podataka <strong>Observer Features</strong>.",
	"@@Watershed_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smjer protoka iz svake ćelije.",
	"@@Watershed_Flow-Direction-Raster_tag1@@": "Raster smjera protoka može se izraditi upotrebom funkcije <strong>Flow Direction</strong>.",
	"@@Watershed_Pour-Point(s)-Raster_tag0@@": "Ulazne lokacije odvodnih točaka.",
	"@@Watershed_Pour-Point(s)-Raster_tag1@@": "Ovaj raster predstavlja ćelije iznad kojih se određuje područje razvođa odnosno područja odakle se slijeva voda. Sve ćelije koje nisu bez podataka upotrijebit će se kao ćelije izvora.",
	"@@Watershed_Pour-Point-Field_tag0@@": "Polje se upotrebljava za dodjeljivanje vrijednosti do lokacija odvodnih točaka.",
	"@@Watershed_Pour-Point-Field_tag1@@": "Za raster skupa podataka odvodne točke ${Value} upotrebljava se prema zadanim postavkama.",
	"@@Weighted-Overlay_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Weighted-Overlay_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Weighted-Overlay_Cellsize-Type_tag2@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Weighted-Overlay_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Weighted-Overlay_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Weighted-Overlay_Cellsize-Type_tag5@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Weighted-Overlay_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Weighted-Overlay_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Weighted-Overlay_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Weighted-Overlay_Extent-Type_tag3@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Weighted-Overlay_Extent-Type_tag4@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Weighted-Overlay_Scales_tag0@@": "Raspon za nove vrijednosti prema kojem se ponovno mapiraju nove vrijednosti.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag0@@": "Tablica ponderiranih preklapanja za četiri dijela:",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag1@@": "Sloj--Svi ulazni raster trebaju biti cijeli broj.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag2@@": "Utjecaj--Svaki ulazni raster ponderiran je u skladu sa svojom važnosti, ili svom utjecaju, kao relativni postotak. Zbroj težina postotka utjecaja mora biti jednak 100, a svaka težina mora biti integrirana vrijednostima u obliku cijelog broja.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag3@@": "Polje--Polje za cijeli broj ili tekst u ulaznom rasteru za upotrebu za ponderiranje.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag4@@": "Tablica za ponovno mapiranje--Svakoj vrijednosti u ulaznom rasteru dodijeljena je nova vrijednost mjerila na temelju tablice za ponovno mapiranje. Vrijednosti mjerila može biti važeća vrijednost ili vrijednost Bez podataka.",
	"@@Weighted-Sum_Cellsize-Type_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Weighted-Sum_Cellsize-Type_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Weighted-Sum_Cellsize-Type_tag2@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Weighted-Sum_Cellsize-Type_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Weighted-Sum_Cellsize-Type_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Weighted-Sum_Cellsize-Type_tag5@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Weighted-Sum_Extent-Type_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Weighted-Sum_Extent-Type_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Weighted-Sum_Extent-Type_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Weighted-Sum_Extent-Type_tag3@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Weighted-Sum_Extent-Type_tag4@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag0@@": "Tablica ponderiranih zbrojeva definirana je trima stavkama:",
	"@@Weighted-Sum_Weighted-Sum-Table_tag1@@": "Sloj--Raster koji se ponderira.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag2@@": "Polje--Polje rastera koje će se upotrebljavati za ponderiranje.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag3@@": "Težina--Vrijednost težine prema kojoj se multiplicira raster. To može biti bilo koja pozitivna ili negativna decimalna vrijednost.",
	"@@Wind-Chill_Temperature-Raster_tag0@@": "Jednokanalni raster u kojem vrijednosti piksela predstavljaju ambijentalnu temperaturu zraka.",
	"@@Wind-Chill_Temperature-Units_tag0@@": "Jedinica mjere povezana s izlaznom temperaturom rasterom. Dostupne su jedinice izlaza Celzijus, Fahrenheit i Kelvin.",
	"@@Wind-Chill_Wind-Chill-Units_tag0@@": "Jedinica mjere povezana s izlaznim rasterom. Dostupni izlazi su Celzijus, Fahrenheit i Kelvin.",
	"@@Wind-Chill_Wind-Speed-Raster_tag0@@": "Jednokanalni raster u kojem vrijednosti piksela predstavljaju brzinu vjetra.",
	"@@Wind-Chill_Wind-Speed-Units_tag0@@": "Definira jedinicu mjere za raster brzine vjetra:",
	"@@Wind-Chill_Wind-Speed-Units_tag1@@": "Milje na sat (mph)",
	"@@Wind-Chill_Wind-Speed-Units_tag2@@": "Kilometri na sat (km/h)",
	"@@Wind-Chill_Wind-Speed-Units_tag3@@": "Metri po sekundi (m/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag4@@": "Stope po sekundi (ft/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag5@@": "Čvorovi (čv.)",
	"@@Zonal-Remap_Background-Value_tag0@@": "Vrijednost početnog piksela izlaznog rastera, prije nego što se ulazni pikseli ponovno mapiraju.",
	"@@Zonal-Remap_Default-Output-Value_tag0@@": "Vrijednost koja će se dodijeliti pikselu koji ne zadovoljava nijedan uvjet postavljen u <strong>Zonal Attributes Table</strong>.",
	"@@Zonal-Remap_Default-Output-Value_tag3@@": "To će biti i vrijednost izlaznog piksela ako je <strong>Output Value Field Name</strong> parametar ostavljen neodređen ili je izlazna vrijednost odgovarajućeg zonskog praga ostavljena neodređena u <strong>Zonal Attributes Table</strong>.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag0@@": "Naziv polje koje sadrži maksimalnu vrijednost ispod koje se ulazni piksel ponovno mapira.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag1@@": "Ako se ostavi nespecificirano ili je vrijednost polja jednaka nuli, vrijednosti piksela ne testiraju se za maksimum.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag0@@": "Naziv polje koje sadrži minimalnu vrijednost iznad koje se ulazni piksel ponovno mapira.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag1@@": "Ako se ostavi nespecificirano ili je vrijednost polja jednaka nuli, vrijednosti piksela ne testiraju se za minimum.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag0@@": "Naziv polje koje sadrži vrijednost cilja na koju se ulazni piksel ponovno mapira.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag1@@": "Ako se ostavi neodređena ili je vrijednost polja jednaka nuli, ponovno mapirane vrijednosti piksela postavljene su na <strong>Default Output Value</strong>",
	"@@Zonal-Remap_Value-Raster_tag0@@": "Obavezni jednokanalni ulazni raster koji sadrži vrijednosti piksela za ponovno mapiranje.",
	"@@Zonal-Remap_Where-Clause_tag0@@": "Neobvezni upit primijenjen na <strong>Zonal Attributes Table</strong>.",
	"@@Zonal-Remap_Where-Clause_tag3@@": "Ako ste upotrebljavali prethodno navedenu tablicu kao primjer, upit bi bio ${Variable1 = 'bare earth' AND Variable2 = 'California'}.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag0@@": "Obavezna ulazna tablica koja sadrži barem tri polja. Ona mora imati minimalnu vrijednost praga, maksimalnu vrijednost praga i ciljnu vrijednost. Ciljna vrijednost je polje koje će sadržavati ponovno mapiranu vrijednost.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag1@@": "Format datoteke može biti klasa geoobjekta, usluga geoobjekata ili bilo koja vrsta tablice koju podržava ArcGIS.",
	"@@Zonal-Remap_Zone-Field_tag0@@": "Naziv polja u <strong>Zonal Attributes Table</strong> koji sadrži vrijednosti ID-a zone.",
	"@@Zonal-Remap_Zone-Field_tag3@@": "Vrijednosti ID zone izravno su vezane uz ID-jeve zone u vašem rasteru zone. One pružaju drugu razinu filtriranja tijekom ponovnog mapiranja. Ako nema ID-ja zone povezanog s određenim zapisom u tablici, ona neće sudjelovati u ponovnom mapiranju.",
	"@@Zonal-Remap_Zone-Raster_tag0@@": "Jednokanalni raster u kojem svaki piksel definira zone povezane s određenom lokacijom. Zona se definira kao sva područja u unosu koje imaju istu vrijednost. Područja ne moraju biti susjedna.",
	"@@Predict-Using-Trend_dimensiondefinition_tag0@@": "Određuje metodu koja se koristi za davanje vrijednosti dimenzija predviđanja.",
	"@@Predict-Using-Trend_dimensiondefinition_tag1@@": "<strong>By Value</strong>--Predviđanje će se izračunati za vrijednost jedne dimenzije. Na primjer, želite predvidjeti godišnje padaline za godine 2050, 2100 i 2150. To je zadano.",
	"@@Predict-Using-Trend_dimensiondefinition_tag2@@": "<strong>By Interval</strong>--Predviđanje će se izračunati za interval dimenzije koji je definiran početnom i krajnjom vrijednošću. Na primjer, želite predvidjeti godišnje padaline za svaku godinu između 2050 i 2150.",
	"@@Predict-Using-Trend_end_tag0@@": "Datum završetka, visina ili dubina intervala dimenzija koji će se koristiti u predviđanju.",
	"@@Predict-Using-Trend_end_tag1@@": "Ovaj je parametar nužan kada je parametar <strong>Dimension Definition</strong> postavljen na <strong>By Interval</strong>.",
	"@@Predict-Using-Trend_raster_tag0@@": "Ulazni višedimenzionalni raster trenda iz funkcije <strong>Generate Trend</strong>.",
	"@@Predict-Using-Trend_start_tag0@@": "Datum početka, visina ili dubina intervala dimenzija koji će se koristiti u predviđanju.",
	"@@Predict-Using-Trend_start_tag1@@": "Ovaj je parametar nužan kada je parametar <strong>Dimension Definition</strong> postavljen na <strong>By Interval</strong>.",
	"@@Predict-Using-Trend_unit_tag0@@": "Jedinica koja će se upotrebljavati za vrijednosni interval. Ovaj se parametar primjenjuje samo kad je dimenzija analize vremenska dimenzija.",
	"@@Predict-Using-Trend_unit_tag1@@": "<strong>Hours</strong>--Predviđanje će se izračunati za svaki sat u rasponu vremena koje je opisao <strong>Start</strong>, <strong>End</strong>, and <strong>Value Interval</strong> parameters.",
	"@@Predict-Using-Trend_unit_tag2@@": "<strong>Days</strong>--Predviđanje će se izračunati za svaki dan u rasponu vremena koje je opisao <strong>Start</strong>, <strong>End</strong>, and <strong>Value Interval</strong> parameters.",
	"@@Predict-Using-Trend_unit_tag3@@": "<strong>Weeks</strong>--Predviđanje će se izračunati za svaki tjedan u rasponu vremena koje je opisao <strong>Start</strong>, <strong>End</strong>, and <strong>Value Interval</strong> parameters.",
	"@@Predict-Using-Trend_unit_tag4@@": "<strong>Months</strong>--Predviđanje će se izračunati za svaki mjesec u rasponu vremena koje je opisao <strong>Start</strong>, <strong>End</strong>, and <strong>Value Interval</strong> parameters.",
	"@@Predict-Using-Trend_unit_tag5@@": "<strong>Years</strong>--Predviđanje će se izračunati za svaku godinu u rasponu vremena koje je opisao <strong>Start</strong>, <strong>End</strong>, and <strong>Value Interval</strong> parameters.",
	"@@Predict-Using-Trend_valueinterval_tag0@@": "Broj koraka između dviju dimenzija koje treba uključiti u predviđanje. Zadana vrijednost je 1.",
	"@@Predict-Using-Trend_valueinterval_tag1@@": "Ovaj je parametar nužan kada je parametar <strong>Dimension Definition</strong> postavljen na <strong>By Interval</strong>.",
	"@@Predict-Using-Trend_values_tag0@@": "Vrijednost ili vrijednosti dimenzije koje se koriste u predviđanju.",
	"@@Predict-Using-Trend_values_tag1@@": "Format vrijednosti vremena, dubine i visine mora odgovarati formatu vrijednosti dimenzija koje se koriste za generiranje rastera trenda. Ako je generiran raster trenda za dimenziju StdTime, format bi trebao biti YYYY-MM-DDTHH: MM: SS, na primjer, 2050-01-01T00: 00: 00. Više vrijednosti odvojeno je točkom sa zarezom.",
	"@@Process-Raster-Collection_aggregationfunction_tag0@@": "Navedite predložak rasterske funkcije koji se koristi za objedinjavanje više prereza u manje prereze ili jedan prerez.",
	"@@Process-Raster-Collection_dimension_tag0@@": "Dimenzija agregacije. Ovo je dimenzija po kojoj će se varijable agregirati.",
	"@@Process-Raster-Collection_itemfunction_tag0@@": "Navedite predložak rasterske funkcije koji se koristi za obradu svakog odsječka ili stavke u kolekciji ulaznih rastera.",
	"@@Process-Raster-Collection_keywordinterval_tag0@@": "Određuje interval za ključne riječi koji će se upotrijebiti prilikom agregiranja po dimenziji. Taj je parametar potreban kada je <strong>Type</strong> postavljen na <strong>Interval Keyword</strong>, a agregacija mora biti vremenska.",
	"@@Process-Raster-Collection_keywordinterval_tag1@@": "<strong>Hourly</strong>--Vrijednosti podataka bit će agregirane u satne vremenske isječke, a rezultat će uključivati svaki sat u vremensku seriju.",
	"@@Process-Raster-Collection_keywordinterval_tag2@@": "<strong>Daily</strong>--Vrijednosti podataka bit će agregirane u dnevne vremenske isječke, a rezultat će uključivati svaki dan u vremensku seriju.",
	"@@Process-Raster-Collection_keywordinterval_tag3@@": "<strong>Weekly</strong>--Vrijednosti podataka bit će agregirane u tjedne vremenske isječke, a rezultat će uključivati svaki tjedan u vremensku seriju.",
	"@@Process-Raster-Collection_keywordinterval_tag4@@": "<strong>Dekadly</strong>--Vrijednosti podataka bit će agregirane u 3 razdoblja od 10 dana. Posljednje razdoblje može sadržavati više ili manje od 10 dana. Izlazni podaci uključivat će 3 isječka za svaki mjesec.",
	"@@Process-Raster-Collection_keywordinterval_tag5@@": "<strong>Pentadly</strong>--Vrijednosti podataka bit će agregirane u 6 razdoblja od 5 dana. Posljednje razdoblje može sadržavati više ili manje od 5 dana. Izlazni podaci uključivat će 6 isječka za svaki mjesec.",
	"@@Process-Raster-Collection_keywordinterval_tag6@@": "<strong>Monthly</strong>--Vrijednosti podataka bit će agregirane u mjesečne vremenske isječke, a rezultat će uključivati svaki mjesec u vremensku seriju.",
	"@@Process-Raster-Collection_keywordinterval_tag7@@": "<strong>Quarterly</strong>--Vrijednosti podataka bit će agregirane u kvartalne vremenske isječke, a rezultat će uključivati svaki kvartal u vremensku seriju.",
	"@@Process-Raster-Collection_keywordinterval_tag8@@": "<strong>Yearlyy</strong>--Vrijednosti podataka bit će agregirane u godišnje vremenske isječke, a rezultat će uključivati svaku godinu u vremensku seriju.",
	"@@Process-Raster-Collection_keywordinterval_tag9@@": "<strong>Recurring daily</strong>--Vrijednosti podataka bit će agregirane u dnevne vremenske isječke, a rezultat će uključivati jednu agregiranu vrijednost po danu prema julijanskom kalendaru. Izlazni podaci uključivat će najviše 366 dnevnih vremenskih isječaka.",
	"@@Process-Raster-Collection_keywordinterval_tag10@@": "<strong>Recurring weekly</strong>--Vrijednosti podataka bit će agregirane u tjedne vremenske isječke, a rezultat će uključivati jednu agregiranu vrijednost po tjednu. Izlazni podaci uključivat će najviše 53 tjednih vremenskih isječaka.",
	"@@Process-Raster-Collection_keywordinterval_tag11@@": "<strong>Recurring monthly</strong>--Vrijednosti podataka bit će agregirane u mjesečne vremenske isječke, a rezultat će uključivati jednu agregiranu vrijednost po mjesecu. Izlazni podaci uključivat će najviše 12 mjesečnih vremenskih isječaka.",
	"@@Process-Raster-Collection_keywordinterval_tag12@@": "<strong>Recurring monthly</strong>--Vrijednosti podataka bit će agregirane u kvartalne vremenske isječke, a rezultat će uključivati jednu agregiranu vrijednost po danu prema kvartalu. Izlazni podaci uključivat će najviše 4 kvartalnih vremenskih isječaka.",
	"@@Process-Raster-Collection_maximumvalue_tag0@@": "Maksimalna vrijednost za raspon.",
	"@@Process-Raster-Collection_maximumvalue_tag1@@": "Ovaj je parametar nužan kada je parametar <strong>Type</strong> postavljen na <strong>Interval Ranges</strong>.",
	"@@Process-Raster-Collection_minimumvalue_tag0@@": "Minimalna vrijednost za raspon.",
	"@@Process-Raster-Collection_minimumvalue_tag1@@": "Ovaj je parametar nužan kada je parametar <strong>Type</strong> postavljen na <strong>Interval Ranges</strong>.",
	"@@Process-Raster-Collection_processingfunction_tag0@@": "Navedite predložak funkcije rastera koji se koristi za prikaz obrađenog sloja rastera.",
	"@@Process-Raster-Collection_rastercollection_tag0@@": "Ulazni višedimenzionalni raster, mozaični sloj ili mozaični skup podataka.",
	"@@Process-Raster-Collection_type_tag0@@": "Određuje interval dimenzija za koji će se podaci agregirati.",
	"@@Process-Raster-Collection_type_tag1@@": "<strong>All</strong>--Vrijednosti podataka bit će agregirani u svim isječcima. To je zadano.",
	"@@Process-Raster-Collection_type_tag2@@": "<strong>Interval Keyword</strong>--Podaci varijabli bit će agregirani upotrebljavajući općepoznat interval.",
	"@@Process-Raster-Collection_type_tag3@@": "<strong>Interval Ranges</strong>--Podaci varijabli bit će agregirani između određenih parova vrijednosti ili datuma.",
	"@@Process-Raster-Collection_type_tag4@@": "<strong>Interval Values</strong>--Podaci varijabli bit će agregirani upotrebljavajući interval i jedinicu koju je odredio korisnik.",
	"@@Process-Raster-Collection_unit_tag0@@": "Jedinica koja će se upotrebljavati za vrijednost intervala. Ovaj je parametar nužan kada je <strong>Dimension</strong> vremensko polje, a parametar <strong>Type</strong> je postavljen na <strong>Interval Value</strong>.",
	"@@Process-Raster-Collection_unit_tag1@@": "Ako agregirate preko bilo čega osim vremena, ova mogućnost neće biti dostupna i jedinica za vrijednost intervala bit će jednaka jedinici varijable unesenih višedimenzionalnih rasterskih podataka.",
	"@@Process-Raster-Collection_unit_tag2@@": "<strong>Hours</strong>--Vrijednosti podataka bit će agregirane u satne vremenske isječke u danom intervalu.",
	"@@Process-Raster-Collection_unit_tag3@@": "<strong>Days</strong>--Vrijednosti podataka bit će agregirane u dnevne vremenske isječke u danom intervalu.",
	"@@Process-Raster-Collection_unit_tag4@@": "<strong>Weeks</strong>--Vrijednosti podataka bit će agregirane u tjedne vremenske isječke u danom intervalu.",
	"@@Process-Raster-Collection_unit_tag5@@": "<strong>Months</strong>--Vrijednosti podataka bit će agregirane u mjesečne vremenske isječke u danom intervalu.",
	"@@Process-Raster-Collection_unit_tag6@@": "<strong>Years</strong>--Vrijednosti podataka bit će agregirane u godišnje vremenske isječke u danom intervalu.",
	"@@Process-Raster-Collection_valueinterval_tag0@@": "Veličina intervala koji će se upotrebljavati za agregaciju. Ovaj je parametar nužan kada je parametar <strong>Type</strong> postavljen na <strong>Interval Value</strong>.",
	"@@Process-Raster-Collection_valueinterval_tag1@@": "Primjerice, za agregaciju 30 godina podataka o mjesečnoj temperaturi u 5-godišnja razdoblja, unesite 5 kao <strong>Value Interval</strong> i postavite <strong>Unit</strong> na <strong>Years</strong>.",
	"@@Linear-Spectral-Unmixing_non-negative_tag0@@": "Određuje opcije za definiranje vrijednosti izlaznih piksela.",
	"@@Linear-Spectral-Unmixing_non-negative_tag1@@": "Označen--Neće biti negativnih izlaznih vrijednosti.",
	"@@Linear-Spectral-Unmixing_non-negative_tag2@@": "Neoznačen--Mogu postojati negativne vrijednosti frakcijskog zemljišnog pokrova.",
	"@@Linear-Spectral-Unmixing_raster_tag0@@": "Ulazni raster.",
	"@@Linear-Spectral-Unmixing_spectralprofile_tag0@@": "Ulazna datoteka spektralnog profila.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag0@@": "Spektralne informacije za različite klase zemljišnog pokrova.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag1@@": "<strong>Spectral Profile</strong>--Datoteka definicije klasifikatora (${.ecd}), stvorena iz <strong><strong>Train Maximum Likelihood Classifier</strong></strong> alata, ili JavaScript Object Notation datoteka (${.json}) koja sadrži klasne spektralne profile.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag2@@": "<strong>Training Feature</strong>--Geoobjekti poligona ili razred geoobjekata s uzorcima za trening, generirane iz <strong>Training Samples Manager</strong>.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag0@@": "Određuje opcije za definiranje vrijednosti izlaznih piksela.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag1@@": "Označeno--Vrijednosti klase za svaki piksel prikazuju se u decimalnom obliku s zbrojem svih klasa jednakim 1. Na primjer, Class1 = 0.16; Class2 = 0.24; Class3 = 0.60.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag2@@": "Neoznačeno--Zbroj svih klasa u pikselu može biti veći od 1.",
	"@@Linear-Spectral-Unmixing_trainingfeature_tag0@@": "Datoteka geoobjekata ulaznog treninga.",
	"@@Aggregate_aggregationtechnique_tag0@@": "Metoda korištena za agregaciju. Vrijednosti ulaznih ćelija obuhvaćenih grubim izlaznim ćelijama objedinjuju se jednom od sljedećih statistika:",
	"@@Aggregate_aggregationtechnique_tag1@@": "<strong>Sum</strong>--Ukupna količina ulaznih ćelija. To je zadano.",
	"@@Aggregate_aggregationtechnique_tag2@@": "<strong>Sum</strong>--Najveća vrijednost ulaznih ćelija.",
	"@@Aggregate_aggregationtechnique_tag3@@": "<strong>Mean</strong>--Prosječna vrijednost ulaznih ćelija.",
	"@@Aggregate_aggregationtechnique_tag4@@": "<strong>Median</strong>--Srednja vrijednost ulaznih ćelija.",
	"@@Aggregate_aggregationtechnique_tag5@@": "<strong>Minmum</strong>--Najmanja vrijednost ulaznih ćelija.",
	"@@Aggregate_cellfactor_tag0@@": "Čimbenik po kojem se umnožavaju veličine ćelije ulaznog rastera.",
	"@@Aggregate_cellfactor_tag1@@": "Na primjer, vrijednost faktora ćelije od tri rezultirala bi veličinom izlazne ćelije tri puta većom od one na ulaznom rasteru.",
	"@@Aggregate_expandextentifneeded_tag0@@": "Definira kako postupati s granicama ulaznog rastera kada njegovi redovi ili stupci nisu višestruki faktor ćelije.",
	"@@Aggregate_expandextentifneeded_tag1@@": "Označeno--Proširuje gornju ili desnu granicu ulaznog rastera tako da je ukupni broj ćelija u retku ili stupcu višekratnik faktora ćelije. S ovom opcijom izlazni raster može pokriti veći prostorni opseg nego ulazni raster. To je zadano.",
	"@@Aggregate_expandextentifneeded_tag2@@": "Neoznačeno--Smanjuje broj redaka ili stupaca u izlaznom rasteru. Ovo skraćuje preostale ćelije na gornjoj ili desnoj granici ulaznog rastera, čineći broj redaka ili stupaca u ulaznom rasteru višekratnikom faktora ćelije. S ovom opcijom izlazni raster može pokriti manji prostorni opseg nego ulazni raster.",
	"@@Aggregate_ignorenodataincalculations_tag0@@": "Označava hoće li agregacijski izračun zanemariti vrijednosti ${NoData}.",
	"@@Aggregate_ignorenodataincalculations_tag1@@": "Označeno--Određuje da ako postoje vrijednosti ${NoData} za bilo koju ćeliju koja spada u prostorni opseg veće ćelije na izlaznom rasteru, vrijednosti ${NoData} bit će zanemarene prilikom određivanja vrijednosti za lokacije izlaznih ćelija. Za određivanje vrijednosti izlazne ćelije koristit će se samo ulazne ćelije unutar opsega izlazne ćelije koje imaju podatkovne vrijednosti. To je zadano.",
	"@@Aggregate_ignorenodataincalculations_tag2@@": "Neoznačeno--Određuje da ako bilo koja ćelija koja spada u prostorni opseg veće ćelije na izlaznom rasteru ima vrijednost ${NoData}, vrijednost za to mjesto izlazne ćelije bit će ${NoData}. Kad se koristi ova opcija, podrazumijeva se da kada ćelije unutar agregacije sadrže vrijednost ${NoData}, nema dovoljno informacija za izvršavanje određenih izračuna potrebnih za utvrđivanje izlazne vrijednosti.",
	"@@Aggregate_raster_tag0@@": "Ulazni raster za agregiranje.",
	"@@Expand_numberofcells_tag0@@": "Broj ćelija za proširenje.",
	"@@Expand_numberofcells_tag1@@": "Vrijednost mora biti cijeli broj, a može biti 1 ili veća.",
	"@@Expand_raster_tag0@@": "Ulazni raster za koji se identificirane zone trebaju proširiti.",
	"@@Expand_raster_tag1@@": "To treba biti vrsta cijelog broja.",
	"@@Expand_zonevalues_tag0@@": "Popis zona za proširenje.",
	"@@Expand_zonevalues_tag1@@": "Vrijednosti zona moraju biti cijeli broj, a mogu biti u bilo kojem rasporedu.",
	"@@Expand_zonevalues_tag2@@": "Da biste odredili više zona, upotrijebite razmak za odvajanje vrijednosti zona.",
	"@@Multidimensional-Filter_dimension_tag0@@": "Dimenzija za izdvajanje varijabli.",
	"@@Multidimensional-Filter_dimensiondefinition_tag0@@": "Određuje metodu koja će se upotrijebiti za rezanje dimenzije.",
	"@@Multidimensional-Filter_dimensiondefinition_tag1@@": "<strong>All</strong>--Koristit će se cijeli raspon za svaku dimenziju. To je zadano.",
	"@@Multidimensional-Filter_dimensiondefinition_tag2@@": "<strong>By Values</strong>--Dimenzija će biti prerezana pomoću vrijednosti dimenzije ili popisa vrijednosti.",
	"@@Multidimensional-Filter_dimensiondefinition_tag3@@": "<strong>By Ranges</strong>--Dimenzija će biti prerezana pomoću raspona ili popisa raspona.",
	"@@Multidimensional-Filter_dimensiondefinition_tag4@@": "<strong>By Iteration</strong>--Dimenzija će biti prerezana na određenu veličinu intervala.",
	"@@Multidimensional-Filter_endoffirstiteration_tag0@@": "Kraj prvog intervala. Ovaj se interval koristi za ponavljanje kroz skup podataka. Ovaj je parametar nužan kada je parametar <strong>Dimension Definition</strong> postavljen na <strong>By Iteration</strong>.",
	"@@Multidimensional-Filter_maximumvalue_tag0@@": "Maksimalna vrijednost za raspon. Ovaj je parametar nužan kada je parametar <strong>Dimension Definition</strong> postavljen na <strong>By Ranges</strong>.",
	"@@Multidimensional-Filter_minimumvalue_tag0@@": "Minimalna vrijednost za raspon. Ovaj je parametar nužan kada je parametar <strong>Dimension Definition</strong> postavljen na <strong>By Ranges</strong>.",
	"@@Multidimensional-Filter_raster_tag0@@": "Uneseni skup višedimenzionalnih rastera.",
	"@@Multidimensional-Filter_ranges_tag0@@": "<p>Rasponi intervala navedeni u tablici koriste se za agregiranje skupina vrijednosti. Minimalne i maksimalne vrijednosti određuju raspon koji treba uključiti.</p><p>Ovaj je parametar nužan kada je parametar<strong>Type</strong>postavljen na<strong>Interval Ranges</strong>.</p>",
	"@@Multidimensional-Filter_startoffirstiteration_tag0@@": "Početak prvog intervala. Ovaj se interval koristi za ponavljanje kroz skup podataka. Ovaj je parametar nužan kada je parametar <strong>Dimension Definition</strong> postavljen na <strong>By Iteration</strong>.",
	"@@Multidimensional-Filter_step_tag0@@": "Frekvencija kojom će podaci biti prerezani. Ovaj je parametar nužan kada je parametar <strong>Dimension Definition</strong> postavljen na <strong>By Iteration</strong>. Zadana je vrijednost 3.",
	"@@Multidimensional-Filter_unit_tag0@@": "Određuje iteracijsku jedinicu. Ovaj je parametar nužan kada je <strong>Dimension Definition</strong> parametar je postavljen na <strong>By Iteration</strong> a <strong>Dimension</strong> parametar je postavljen na <strong>StdTime</strong>.",
	"@@Multidimensional-Filter_value_tag0@@": "Vrijednost za navedenu dimenziju. Ovaj je parametar nužan kada je parametar <strong>Dimension Definition</strong> postavljen na <strong>By Values</strong>.",
	"@@Multidimensional-Filter_variables_tag0@@": "Varijable koje će biti uključene u izlazni višedimenzionalni rasterski sloj. Ako nije navedena nijedna varijabla, koristit će se prva varijabla.",
	"@@Multidimensional-Filter_dimensionless_tag0@@": "Određuje treba li sloj imati dimenzijske vrijednosti. Ova je opcija dostupna samo ako je za kreiranje sloja odabran jedan isječak.",
	"@@Multidimensional-Filter_dimensionless_tag1@@": "Označeno -- Sloj neće imati dimenzijske vrijednosti.",
	"@@Multidimensional-Filter_dimensionless_tag2@@": "Neoznačeno -- Sloj će imati dimenzijske vrijednosti. To je zadano.",
	"@@Multidimensional-Raster_interpolationcellsize_tag0@@": "Veličina ćelije interpoliranog rastera. Zadana vrijednost je ${1}.",
	"@@Multidimensional-Raster_interpolationmethod_tag0@@": "Metoda preraspodjele koja se koristi za interpoliranje neregularnih podataka.",
	"@@Multidimensional-Raster_interpolationmethod_tag1@@": "<strong>Nearest Neighbor</strong>--Izračunava vrijednost izlaznog piksela koristeći najbliži ulazni piksel. Ako ne postoji piksel izvora, u izlazu se ne može izraditi novi piksel. To je zadano.",
	"@@Multidimensional-Raster_interpolationmethod_tag2@@": "<strong>Linear Tinning</strong>--Upotrebljava trianguliranu nepravilnu mrežu iz središnje točke svakog piksela u nepravilnom rasteru za interpolaciju površine koja se zatim pretvara u pravilni raster.",
	"@@Multidimensional-Raster_interpolationmethod_tag3@@": "<strong>Natural Neighbor</strong>--Pronalazi najbliži podskup ulaznih uzoraka za točke upita i na njih primjenjuje težine na temelju proporcijalnih područja interpolaciji vrijednosti.",
	"@@Multidimensional-Raster_interpolationmethod_tag4@@": "<strong>Inverse Distance Weighting</strong>--Određuje vrijednosti piksela upotrebom linearno ponderirane kombinacije skupa uzorka točaka ili piksela. Ponderiranje je funkcija inverzne udaljenosti od poznate točke ili piksela.",
	"@@Multidimensional-Raster_raster_tag0@@": "Uneseni skup višedimenzionalnih rastera.",
	"@@Multidimensional-Raster_variables_tag0@@": "Varijabla ili varijable koje će biti uključene u višedimenzionalni rasterski sloj.",
	"@@Random_distribution_tag0@@": "Navedite metodu raspodjele slučajnih vrijednosti koja se koristi.",
	"@@Random_distribution_tag1@@": "<strong>Uniform</strong> (Minimum, Maksimum)--Ravnomjerna raspodjela s definiranim rasponom. Zadane vrijednosti su 0 za Minimum i 1 za Maksimum. To je zadano.",
	"@@Random_distribution_tag2@@": "<strong>Interger</strong> (Minimum, Maksimum)--Interger raspodjela s definiranim rasponom. Zadane vrijednosti su 1 za Minimum i 10 za Maksimum.",
	"@@Random_distribution_tag3@@": "<strong>Normal</strong> (Srednje, Standardno odstupanje)--Normalna raspodjela s definiranim srednjim i standardnim odstupanjem. Zadane vrijednosti su 0 za Srednje i 1 za Standardno odstupanje.",
	"@@Random_distribution_tag4@@": "<strong>Exponential</strong> (Srednje)--Eksponencijalna raspodjela s definiranom sredinom. Zadana vrijednost je 1.",
	"@@Random_distribution_tag5@@": "<strong>Poisson</strong> (Srednje)--Poisson raspodjela s definiranom sredinom. Zadana vrijednost je 1.",
	"@@Random_distribution_tag6@@": "<strong>Gamma</strong> (Alpha, Beta)--Gama raspodjela s definiranom alfom i betom. Zadane vrijednosti su 1 za Alfa i 1 za Beta.",
	"@@Random_distribution_tag7@@": "<strong>Binomial</strong> (N, Vjerojatnost)--Binomialna raspodjela s definiranim N i vjerojatnošću. Zadane vrijednosti su 10 za N i 0,5 za Vjerojatnost.",
	"@@Random_distribution_tag8@@": "<strong>Geometric</strong> (Srednje)--Geometrijska raspodjela s definiranom vjerojatnošću. Zadana vrijednost je 0,5.",
	"@@Random_distribution_tag9@@": "<strong>Negative Binomial</strong> (r, Vjerojatnost)--Paskalna raspodjela s definiranim r i vjerojatnošću. Zadane vrijednosti su 10,0 za r i 0,5 za Vjerojatnost.",
	"@@Random_randomnumbergenerator_tag0@@": "Navedite algoritam slučajnog generatora koji koristi sjeme i raspodjelu za proizvodnju niza nasumičnih brojeva. Dostupne su sljedeće opcije:",
	"@@Random_randomnumbergenerator_tag1@@": "Standardni C Rand",
	"@@Random_randomnumbergenerator_tag2@@": "ACM prikupljeni algoritam 599",
	"@@Random_randomnumbergenerator_tag3@@": "Mersenne Twister",
	"@@Random_randomnumbergenerator_tag4@@": "Zadana vrijednost je Mersenne Twister.",
	"@@Random_rasterinfo_tag0@@": "Koristite <strong>Load template raster</strong> gumb da biste učitali predložak iz mape ili portala.",
	"@@Random_seed_tag0@@": "Sjeme je cjelobrojna vrijednost i koristi se za pokretanje generatora nasumičnih brojeva. Zadana vrijednost je 1.",
	"@@Shrink_numberofcells_tag0@@": "Broj ćelija kojima se smanjuje svaka navedena zona.",
	"@@Shrink_numberofcells_tag1@@": "Vrijednost mora biti cijeli broj, a može biti 1 ili veća.",
	"@@Shrink_raster_tag0@@": "Ulazni raster za koji se identificirane zone trebaju smanjiti.",
	"@@Shrink_raster_tag1@@": "To treba biti vrsta cijelog broja.",
	"@@Shrink_zonevalues_tag0@@": "Popis zona za smanjenje.",
	"@@Shrink_zonevalues_tag1@@": "Vrijednosti zona moraju biti cijeli broj, a mogu biti u bilo kojem rasporedu.",
	"@@Shrink_zonevalues_tag2@@": "Da biste odredili više zona, upotrijebite razmak za odvajanje vrijednosti zona.",
	"@@Distance-Accumulation_costraster_tag0@@": "Raster koji određuje trošak ili impendanciju za planimetrijsko kretanje do svake ćelije. Vrijednost na svakoj lokaciji ćelije predstavlja troškove po jedinici za udaljenost kretanja kroz njih. Svaka vrijednost lokacije ćelije množi se s razlučivosti ćelije te se također kompenzira za dijagonalno kretanje kako bi se došlo do ukupnog troška prolaska kroz ćeliju.",
	"@@Distance-Accumulation_costraster_tag1@@": "Vrijednosti <strong>Cost Raster</strong> mogu biti cijeli brojevi ili plutajuća točka, ali ne mogu biti negativne ili nula.",
	"@@Distance-Accumulation_distancemethod_tag0@@": "Određuje hoće li se računati udaljenost upotrebom planarne (ravno tlo) ili geodezijske (elipsoid) metode.",
	"@@Distance-Accumulation_distancemethod_tag1@@": "Planarno--Planarne mjere upotrebljavaju 2D kartezijansku matematiku za izračun duljine i područja. Opcija je dostupna samo kada se mjeri u projiciranom koordinatnom sustavu i kada će se 2D plan koordinatnog sustava upotrebljavati kao baza za mjerenje.",
	"@@Distance-Accumulation_distancemethod_tag2@@": "Geodetski--Najkraća linija između dvije točke na zemaljskoj površini na sferoidu (elipsoid). Stoga bez obzira na projekciju unosa ili izlaza, rezultati se neće mijenjati.",
	"@@Distance-Accumulation_distancemethod_tag3@@": "<strong>Note:</strong> jedna od upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju leta zrakoplova. To je poznato kao linija velikog kruga, ako se temelji na sferi, a ne na elipsoidu.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag0@@": "Određuje da li se stvara raster akumulacije na daljinu ili se stvara višepojasni raster koji se sastoji od rastera akumulacije udaljenosti i rastera u smjeru unatrag.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag1@@": "Neoznačeno--Rezultat je raster nakupljanja udaljenosti. Ovo je rezultat u jednom pojasu. To je zadano.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag2@@": "Označeno--Stvara se višepojasni rezultat. Prvi pojas je raster akumulacije daljine, a drugi pojas je raster stražnjeg smjera.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag3@@": "Raster stražnjeg smjera izračunava za svaku ćeliju smjer u stupnjevima prema susjednoj ćeliji najkraćim putem natrag do najbližeg izvora izbjegavajući barijere.",
	"@@Distance-Accumulation_horizontalfactor_tag0@@": "<p>Definira odnos između okomitog troška faktora i okomitog relativnog kuta kretanja (HRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: HF i HRMA. HF predstavlja horizontalni faktor koji definira horizontalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. HRMA predstavlja horizontalni relativni kut kretanja koji identificira kut između horizontalnog smjera od ćelije i smjera prebacivanja.</p><p><strong>Vrste horizontalnih</strong>faktora uključuju sljedeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od kuta rezanja, HF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Naprijed</strong>--Utvrđuje da je dopušteno samo kretanje naprijed. HRMA mora biti veći od ili jednako 0 i manji od 90 stupnjeva (0 <= HRMA < 90). Ako je HRMA postavljen na više od 0 i manje od 45 stupnjeva, HF za ćelije postavljen je na vrijednost povezanu s faktorom nula. Ako je HRMA više od ili jednako 45 stupnjeva, upotrebljava se vrijednost modifikatora vrijednosti strane. HF za bilo koju vrijednost HRMA jednaku ili veću od 90 stupnjeva postavlja se na beskonačnost.</li><li><strong>Linearni</strong>--Određuje da je HF linearna funkcija HRMA.</li><li><strong>Obrnuti linearni</strong>--Određuje da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tablica</strong>--Identificira da će se datoteka tablice koristiti za definiranje horizontalnog faktorskog grafikona koji se koristi za određivanje HF-ova.</li></ul><p>Modifikatori horizontalnih faktora uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Horizontalni faktor koji se koristi kada je HRMA nula. Ovaj faktor pozicionira y-presjek za bilo koju od horizontalnih faktorskih funkcija.</li><li><strong>Kut rezanja</strong>--Definira kut HRMA iznad kojeg će HF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne linije koja se koristi s ključnim riječima<strong>Linearni</strong>i<strong>Obrnuti Linearni</strong>horizontalni faktor. Nagib je određen kao dio porasta tijekom rada (na primjer, nagib od 45 posto je 1/45, što je uneseno kao 0,02222).</li><li><strong>Vrijednost strane</strong>--Utvrđuje HF kada je HRMA veći ili jednak 45 stupnjeva i manji od 90 stupnjeva kada je navedena ključna riječ horiontalnog faktora<strong>Naprijed</strong>.</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira HF.</li></ul>",
	"@@Distance-Accumulation_horizontalraster_tag0@@": "Raster koji definira horizontalni smjer u svakoj ćeliji.",
	"@@Distance-Accumulation_horizontalraster_tag1@@": "Vrijednost na rasteru mora biti cijeli broj u rasponu od 0 do 360; time da 0 predstavlja sjever ili smjer pri vrhu zaslona, i povećava se u smjeru kazaljke na satu. Ravnim područjima trebala bi se dodijeliti vrijednost -1. Vrijednosti na svakoj lokaciji biti će korištene zajedno s <strong>Horizontal factor</strong> za određivanje horizontalnih troškova nastalih prilikom prelaska s ćelije na njezine susjede.",
	"@@Distance-Accumulation_initialaccumulation_tag0@@": "Početni akumulativni trošak za početak obračuna troškova. Ovaj parametar omogućava određivanje fiksnih troškova povezanih s izvorom. Umjesto započinjanja pri trošku od 0, algoritam troška započet će sa određenom vrijednosti.",
	"@@Distance-Accumulation_initialaccumulation_tag1@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Distance-Accumulation_initialaccumulation_tag2@@": "Vrijednost mora biti nula ili veća. Zadana je vrijednost 0.",
	"@@Distance-Accumulation_maximumaccumulation_tag0@@": "Definira maksimalni akumulirani trošak za putnika za izvor. Izračuni troška nastavljaju se za svaki izvor dok se ne dosegne određeni kapacitet.",
	"@@Distance-Accumulation_maximumaccumulation_tag1@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Distance-Accumulation_maximumaccumulation_tag2@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag0@@": "Množitelj koji se primjenjuje na vrijednosti troška.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag1@@": "Ovaj parametar omogućuje kontrolu način putovanja ili magnitudu izvora. Što je veći multiplikator, veći je trošak koji treba prebaciti kroz svaku ćeliju.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag2@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag3@@": "Vrijednosti moraju biti veća od nule. Zadana je vrijednost 1.",
	"@@Distance-Accumulation_rasterbarriers_tag0@@": "Raster koji definira ograničenja.",
	"@@Distance-Accumulation_rasterbarriers_tag1@@": "Skup podataka mora sadržavati vrijednost Bez podataka ako nema ograničenja. Ograničenja su predstavljena valjanim vrijednostima koje uključuju nulu.",
	"@@Distance-Accumulation_rasterbarriers_tag2@@": "Ograničenja je moguće definirati putem rastera cijelih brojeva ili plutajućih točaka.",
	"@@Distance-Accumulation_sourceraster_tag0@@": "Lokacije ulaznog izvora.",
	"@@Distance-Accumulation_sourceraster_tag1@@": "To je raster skupa podataka koji identificira ćelije ili lokacije za koje će se posljednje akumulirani trošak udaljenosti izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Distance-Accumulation_sourceraster_tag2@@": "Može biti cijeli broj ili plutajuća točka.",
	"@@Distance-Accumulation_surfaceraster_tag0@@": "Raster koji definira vrijednosti visine terena na svakoj lokaciji ćelije.",
	"@@Distance-Accumulation_surfaceraster_tag1@@": "Vrijednosti se upotrebljavaju za izračunavanje stvarne udaljenosti površine obuhvaćene prilikom prolaska između ćelija.",
	"@@Distance-Accumulation_traveldirection_tag0@@": "Definira smjer putnika pri primjeni okomitog faktora, vodoravnog faktora i stope otpora izvora.",
	"@@Distance-Accumulation_traveldirection_tag1@@": "<strong>From Source</strong>--Vertikalni faktor, vodoravni faktor i stopa otpora izvora primijenit će se počevši od ulaznog izvora i prelazeći na stanice koje nisu izvori. To je zadano.",
	"@@Distance-Accumulation_traveldirection_tag2@@": "<strong>To Source</strong>--Vertikalni faktor, vodoravni faktor i stopa otpora izvora primjenjivat će se počevši od svake ne-izvorne ćelije i vraćajući se natrag do ulaznog izvora.",
	"@@Distance-Accumulation_traveldirection_tag3@@": "Ili navedite <strong>From Source</strong> ili <strong>To Source</strong> ključnu riječ koja će biti primijenjena na sve izvore, ili navedite polje u <strong>Source Raster</strong> koje sadrži ključne riječi za prepoznavanje smjera putovanja za svaki izvor. To polje mora sadržavati niz od ${FROM_SOURCE} do ${TO_SOURCE}.",
	"@@Distance-Accumulation_verticalfactor_tag0@@": "<p>Definira odnos između vertikalnog faktora troškova i vertikalnog relativnog kuta kretanja (VRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: VF i VRMA. VF predstavlja vertikalni faktor koji definira vertikalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. VRMA je skraćenica za vertikalni relativni pokretni kut, koji identificira kut nagiba između ćelije OD ili obrade i ćelije DO.</p><p><strong>Vertikalni faktori</strong>uključuju sljedeće:</p><ul><li><strong>Binarni</strong>--Određuje da ako je VRMA veći od niskog kuta i manji od visokog kuta, VF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Linearni</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrični linearni</strong>--Određuje da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Obrnuti linearni</strong>--Označava da je VF inverzna linearna funkcija VRMA.</li><li><strong>Simetrični obrnuti linearni</strong>--Određuje da je VF inverzna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Cos</strong>--Identificira VF kao kosinusnu funkciju VRMA.</li><li><strong>Sec</strong>--Identificira VF kao funkciju VRMA koja se temelji na sekanti.</li><li><strong>Cos-Sec</strong>--Određuje da je VF funkcija temeljena na kosinusu VRMA kada je VRMA negativna i funkcija VRMA temeljena na sekanti kada VRMA nije negativna.</li><li><strong>Sec-Cos</strong>--Određuje da je VF funkcija VRMA temeljena na sekanti kada je VRMA negativna i funkcija temeljena na kosinusu VRMA kada VRMA nije negativna.</li><li><strong>Tablica</strong>--Identificira da će se tablična datoteka koristiti za definiranje grafa vertikalnog faktora koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori vertikalnih ključnih riječi uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalni faktor koji se koristi kada je VRMA nula. Taj faktor pozicionira y-presjek specificirane funkcije. Prema definiciji faktor nula nije primjenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presjek definiran je ovim funkcijama.</li><li><strong>Niski cut</strong>--Definira VRMA kut ispod kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Visoki kut</strong>--Definira VRMA kut iznad kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne crte koja se koristi s ključnim riječima vertikalnih faktora<strong>Linearni</strong>i<strong>Obrnuti linearni</strong>. Nagib je specificiran kao frakcija uzdizanja iznad pokretanja (na primjer, nagib od 45 posto je 1/45, a to je unos kao 0,02222).</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira VF.</li></ul>",
	"@@Distance-Accumulation_verticalraster_tag0@@": "Definira odnos između vertikalnog troška faktora i vertikalnog relativnog kuta kretanja (VRMA).",
	"@@Distance-Accumulation_verticalraster_tag1@@": "Ta se vrijednost upotrebljava za izračunavanje nagiba koji se upotrebljava za identificiranje vertikalnog faktora koji se javio prilikom prebacivanja iz jedne ćelije u drugu.",
	"@@Distance-Allocation_costraster_tag0@@": "Raster koji određuje trošak ili impendanciju za planimetrijsko kretanje do svake ćelije. Vrijednost na svakoj lokaciji ćelije predstavlja troškove po jedinici za udaljenost kretanja kroz njih. Svaka vrijednost lokacije ćelije množi se s razlučivosti ćelije te se također kompenzira za dijagonalno kretanje kako bi se došlo do ukupnog troška prolaska kroz ćeliju.",
	"@@Distance-Allocation_costraster_tag1@@": "Vrijednosti <strong>Cost Raster</strong> mogu biti cijeli brojevi ili plutajuća točka, ali ne mogu biti negativne ili nula.",
	"@@Distance-Allocation_distancemethod_tag0@@": "Određuje hoće li se računati udaljenost upotrebom planarne (ravno tlo) ili geodezijske (elipsoid) metode.",
	"@@Distance-Allocation_distancemethod_tag1@@": "Planarno--Planarne mjere upotrebljavaju 2D kartezijansku matematiku za izračun duljine i područja. Opcija je dostupna samo kada se mjeri u projiciranom koordinatnom sustavu i kada će se 2D plan koordinatnog sustava upotrebljavati kao baza za mjerenje.",
	"@@Distance-Allocation_distancemethod_tag2@@": "Geodetski--Najkraća linija između dvije točke na zemaljskoj površini na sferoidu (elipsoid). Stoga bez obzira na projekciju unosa ili izlaza, rezultati se neće mijenjati.",
	"@@Distance-Allocation_distancemethod_tag3@@": "<strong>Note:</strong> jedna od upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju leta zrakoplova. To je poznato kao linija velikog kruga, ako se temelji na sferi, a ne na elipsoidu.",
	"@@Distance-Allocation_horizontalfactor_tag0@@": "<p>Definira odnos između okomitog troška faktora i okomitog relativnog kuta kretanja (HRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: HF i HRMA. HF predstavlja horizontalni faktor koji definira horizontalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. HRMA predstavlja horizontalni relativni kut kretanja koji identificira kut između horizontalnog smjera od ćelije i smjera prebacivanja.</p><p><strong>Vrste horizontalnih</strong>faktora uključuju sljedeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od kuta rezanja, HF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Naprijed</strong>--Utvrđuje da je dopušteno samo kretanje naprijed. HRMA mora biti veći od ili jednako 0 i manji od 90 stupnjeva (0 <= HRMA < 90). Ako je HRMA postavljen na više od 0 i manje od 45 stupnjeva, HF za ćelije postavljen je na vrijednost povezanu s faktorom nula. Ako je HRMA više od ili jednako 45 stupnjeva, upotrebljava se vrijednost modifikatora vrijednosti strane. HF za bilo koju vrijednost HRMA jednaku ili veću od 90 stupnjeva postavlja se na beskonačnost.</li><li><strong>Linearni</strong>--Određuje da je HF linearna funkcija HRMA.</li><li><strong>Obrnuti linearni</strong>--Određuje da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tablica</strong>--Identificira da će se datoteka tablice koristiti za definiranje horizontalnog faktorskog grafikona koji se koristi za određivanje HF-ova.</li></ul><p>Modifikatori horizontalnih faktora uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Horizontalni faktor koji se koristi kada je HRMA nula. Ovaj faktor pozicionira y-presjek za bilo koju od horizontalnih faktorskih funkcija.</li><li><strong>Kut rezanja</strong>--Definira kut HRMA iznad kojeg će HF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne linije koja se koristi s ključnim riječima<strong>Linearni</strong>i<strong>Obrnuti Linearni</strong>horizontalni faktor. Nagib je određen kao dio porasta tijekom rada (na primjer, nagib od 45 posto je 1/45, što je uneseno kao 0,02222).</li><li><strong>Vrijednost strane</strong>--Utvrđuje HF kada je HRMA veći ili jednak 45 stupnjeva i manji od 90 stupnjeva kada je navedena ključna riječ horiontalnog faktora<strong>Naprijed</strong>.</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira HF.</li></ul>",
	"@@Distance-Allocation_horizontalraster_tag0@@": "Raster koji definira horizontalni smjer u svakoj ćeliji.",
	"@@Distance-Allocation_horizontalraster_tag1@@": "Vrijednost na rasteru mora biti cijeli broj u rasponu od 0 do 360; time da 0 predstavlja sjever ili smjer pri vrhu zaslona, i povećava se u smjeru kazaljke na satu. Ravnim područjima trebala bi se dodijeliti vrijednost -1. Vrijednosti na svakoj lokaciji biti će korištene zajedno s <strong>Horizontal factor</strong> za određivanje horizontalnih troškova nastalih prilikom prelaska s ćelije na njezine susjede.",
	"@@Distance-Allocation_initialaccumulation_tag0@@": "Početni akumulativni trošak za početak obračuna troškova. Ovaj parametar omogućava određivanje fiksnih troškova povezanih s izvorom. Umjesto započinjanja pri trošku od 0, algoritam troška započet će sa određenom vrijednosti.",
	"@@Distance-Allocation_initialaccumulation_tag1@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Distance-Allocation_initialaccumulation_tag2@@": "Vrijednost mora biti nula ili veća. Zadana je vrijednost 0.",
	"@@Distance-Allocation_maximumaccumulation_tag0@@": "Definira maksimalni akumulirani trošak za putnika za izvor. Izračuni troška nastavljaju se za svaki izvor dok se ne dosegne određeni kapacitet.",
	"@@Distance-Allocation_maximumaccumulation_tag1@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Distance-Allocation_maximumaccumulation_tag2@@": "Vrijednost mora biti veća od nule. Zadani kapacitet do ruba je izlaznog rastera.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag0@@": "Množitelj koji se primjenjuje na vrijednosti troška.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag1@@": "Ovaj parametar omogućuje kontrolu način putovanja ili magnitudu izvora. Što je veći multiplikator, veći je trošak koji treba prebaciti kroz svaku ćeliju.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag2@@": "Vrijednosti moraju biti veća od nule. Zadana je vrijednost 1.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag3@@": "Numerička (dvostruka) vrijednost ili polje iz <strong>Source Raster</strong> se može koristiti za ovaj parametar.",
	"@@Distance-Allocation_rasterbarriers_tag0@@": "Raster koji definira ograničenja.",
	"@@Distance-Allocation_rasterbarriers_tag1@@": "Skup podataka mora sadržavati vrijednost Bez podataka ako nema ograničenja. Ograničenja su predstavljena valjanim vrijednostima koje uključuju nulu.",
	"@@Distance-Allocation_rasterbarriers_tag2@@": "Ograničenja je moguće definirati putem rastera cijelih brojeva ili plutajućih točaka.",
	"@@Distance-Allocation_sourcefield_tag0@@": "Polje se upotrebljava za dodjeljivanje vrijednosti do lokacija izvora. Treba biti vrsta cijelog broja.",
	"@@Distance-Allocation_sourceraster_tag0@@": "Lokacije ulaznog izvora.",
	"@@Distance-Allocation_sourceraster_tag1@@": "To je raster skupa podataka koji identificira ćelije ili lokacije za koje će se posljednje akumulirani trošak udaljenosti izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag0@@": "Određuje stvara li se samo raster raspodjele ili stvara li se višepojasni rezultat.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag1@@": "Neoznačeno--Rezultat je raster raspodjele udaljenosti. Ovo je rezultat u jednom pojasu. To je zadano.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag2@@": "Označeno--Stvara se višepojasni raster. Prvi pojas je raster za raspodjelu udaljenosti, drugi pojas sadrži indeks reda, a treći pojas sadrži indeks stupaca. Ovi indeksi identificiraju lokaciju izvorne ćelije koja je najmanje udaljena akumulirana udaljenost troškova.",
	"@@Distance-Allocation_surfaceraster_tag0@@": "Raster koji definira vrijednosti visine terena na svakoj lokaciji ćelije.",
	"@@Distance-Allocation_surfaceraster_tag1@@": "Vrijednosti se upotrebljavaju za izračunavanje stvarne udaljenosti površine obuhvaćene prilikom prolaska između ćelija.",
	"@@Distance-Allocation_traveldirection_tag0@@": "Definira smjer putnika pri primjeni okomitog faktora, vodoravnog faktora i stope otpora izvora.",
	"@@Distance-Allocation_traveldirection_tag1@@": "<strong>From Source</strong>--Vertikalni faktor, vodoravni faktor i stopa otpora izvora primijenit će se počevši od ulaznog izvora i prelazeći na stanice koje nisu izvori. To je zadano.",
	"@@Distance-Allocation_traveldirection_tag2@@": "<strong>To Source</strong>--Vertikalni faktor, vodoravni faktor i stopa otpora izvora primjenjivat će se počevši od svake ne-izvorne ćelije i vraćajući se natrag do ulaznog izvora.",
	"@@Distance-Allocation_traveldirection_tag3@@": "Ili navedite <strong>From Source</strong> ili <strong>To Source</strong> ključnu riječ koja će biti primijenjena na sve izvore, ili navedite polje u <strong>Source Raster</strong> koje sadrži ključne riječi za prepoznavanje smjera putovanja za svaki izvor. To polje mora sadržavati niz od ${FROM_SOURCE} do ${TO_SOURCE}.",
	"@@Distance-Allocation_verticalfactor_tag0@@": "<p>Definira odnos između vertikalnog faktora troškova i vertikalnog relativnog kuta kretanja (VRMA).</p><p>Postoji nekoliko faktora s modifikatorima koji identificiraju definirani vertikalni grafikon faktora. Osim toga, za izradu prilagođenog grafikona može se upotrebljavati tablica. Grafikoni se upotrebljavaju za identifikaciju vertikalnog faktora koji se upotrebljava pri izračunavanju ukupnog troška za prebacivanje u susjednu ćeliju.</p><p>U objašnjenjima u nastavku koriste se dvije kratice: VF i VRMA. VF predstavlja vertikalni faktor koji definira vertikalnu poteškoću na koju se nailazi prilikom prebacivanja iz jedne ćelije u sljedeću. VRMA je skraćenica za vertikalni relativni pokretni kut, koji identificira kut nagiba između ćelije OD ili obrade i ćelije DO.</p><p><strong>Vertikalni faktori</strong>uključuju sljedeće:</p><ul><li><strong>Binarni</strong>--Određuje da ako je VRMA veći od niskog kuta i manji od visokog kuta, VF se postavlja na vrijednost pridruženu nultom faktoru; inače, je beskonačno.</li><li><strong>Linearni</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrični linearni</strong>--Određuje da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Obrnuti linearni</strong>--Označava da je VF inverzna linearna funkcija VRMA.</li><li><strong>Simetrični obrnuti linearni</strong>--Određuje da je VF inverzna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, respektivno, a dvije linearne funkcije su simetrične u odnosu na os VF (y).</li><li><strong>Cos</strong>--Identificira VF kao kosinusnu funkciju VRMA.</li><li><strong>Sec</strong>--Identificira VF kao funkciju VRMA koja se temelji na sekanti.</li><li><strong>Cos-Sec</strong>--Određuje da je VF funkcija temeljena na kosinusu VRMA kada je VRMA negativna i funkcija VRMA temeljena na sekanti kada VRMA nije negativna.</li><li><strong>Sec-Cos</strong>--Određuje da je VF funkcija VRMA temeljena na sekanti kada je VRMA negativna i funkcija temeljena na kosinusu VRMA kada VRMA nije negativna.</li><li><strong>Tablica</strong>--Identificira da će se tablična datoteka koristiti za definiranje grafa vertikalnog faktora koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori vertikalnih ključnih riječi uključuju sljedeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalni faktor koji se koristi kada je VRMA nula. Taj faktor pozicionira y-presjek specificirane funkcije. Prema definiciji faktor nula nije primjenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presjek definiran je ovim funkcijama.</li><li><strong>Niski cut</strong>--Definira VRMA kut ispod kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Visoki kut</strong>--Definira VRMA kut iznad kojeg će VF biti postavljen na beskonačnost.</li><li><strong>Nagib</strong>--Utvrđuje nagib ravne crte koja se koristi s ključnim riječima vertikalnih faktora<strong>Linearni</strong>i<strong>Obrnuti linearni</strong>. Nagib je specificiran kao frakcija uzdizanja iznad pokretanja (na primjer, nagib od 45 posto je 1/45, a to je unos kao 0,02222).</li><li><strong>Naziv tablice</strong>--Identificira naziv tablice koja definira VF.</li></ul>",
	"@@Distance-Allocation_verticalraster_tag0@@": "Definira odnos između vertikalnog troška faktora i vertikalnog relativnog kuta kretanja (VRMA).",
	"@@Distance-Allocation_verticalraster_tag1@@": "Ta se vrijednost upotrebljava za izračunavanje nagiba koji se upotrebljava za identificiranje vertikalnog faktora koji se javio prilikom prebacivanja iz jedne ćelije u drugu.",
	"@@Euclidean-Back-Direction_cellsize_tag0@@": "Veličina ćelije pri kojoj će se izraditi izlazni raster.",
	"@@Euclidean-Back-Direction_cellsize_tag1@@": "Ako je veličina ćelije eksplicitno postavljena u <strong>Environments</strong> , to će biti zadana veličina ćelije. Ako ona nije postavljena, veličina izlazne ćelije bit će jednaka kao <strong>Source Raster</strong>.",
	"@@Euclidean-Back-Direction_distancemethod_tag0@@": "Određuje hoće li se računati udaljenost upotrebom planarne (ravno tlo) ili geodezijske (elipsoid) metode.",
	"@@Euclidean-Back-Direction_distancemethod_tag1@@": "Planarno--Planarne mjere upotrebljavaju 2D kartezijansku matematiku za izračun duljine i područja. Opcija je dostupna samo kada se mjeri u projiciranom koordinatnom sustavu i kada će se 2D plan koordinatnog sustava upotrebljavati kao baza za mjerenje.",
	"@@Euclidean-Back-Direction_distancemethod_tag2@@": "Geodetski--Najkraća linija između dvije točke na zemaljskoj površini na sferoidu (elipsoid). Stoga bez obzira na projekciju unosa ili izlaza, rezultati se neće mijenjati.",
	"@@Euclidean-Back-Direction_distancemethod_tag3@@": "<strong>Note:</strong> jedna od upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju leta zrakoplova. To je poznato kao linija velikog kruga, ako se temelji na sferi, a ne na elipsoidu.",
	"@@Euclidean-Back-Direction_maximumdistance_tag0@@": "Definira prag udaljenosti unutar koje će se izračunavati smjer do najbližeg izvora. Ako udaljenost do najbližeg izbora premašuje tu vrijednost, izlaz za tu ćeliju bit će NoData.",
	"@@Euclidean-Back-Direction_maximumdistance_tag1@@": "Zadana udaljenost je do obuhvata izlaznog rastera.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag0@@": "Raster koji definira ograničenja.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag1@@": "Skup podataka mora sadržavati vrijednost Bez podataka ako nema ograničenja. Ograničenja su predstavljena valjanim vrijednostima koje uključuju nulu.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag2@@": "Ograničenja je moguće definirati putem rastera cijelih brojeva ili plutajućih točaka.",
	"@@Euclidean-Back-Direction_sourceraster_tag0@@": "Skup podataka rastera koji identificira ćelije ili lokacije za koje će se Euklidski smjer izračunati za svaku izlaznu lokaciju ćelije.",
	"@@Euclidean-Back-Direction_sourceraster_tag1@@": "Vrsta ulaza može biti cijeli broj ili plutajuća točka.",
	"@@Cost-Path_costbacklinkraster_tag0@@": "Naziv povratne veze za trošak rasterskog sloja koji se upotrebljava za određivanje putanje za vraćanje na izvor putem putanje najmanjeg troška.",
	"@@Cost-Path_costbacklinkraster_tag1@@": "Za svaku ćeliju u povratnoj vezi za trošak rastera vrijednost identificira susjeda koji je sljedeća ćelija na putanji najmanjeg akumulativnog troška od ćelije do pojedinačne ćelije izvora ili skupa ćelija izvora.",
	"@@Cost-Path_costdistanceraster_tag0@@": "Naziv rastera udaljenosti troškova koji će se upotrebljavati za određivanje putanje najmanjeg troška od lokacija odredišta do izvora.",
	"@@Cost-Path_costdistanceraster_tag1@@": "Raster udaljenosti troškova obično se izrađuje uz pomoć funkcije Udaljenost troškova, Raspodjela troškova ili Raster udaljenosti troškova. Rasterski sloj udaljenosti troškova pohranjuje, za svaku ćeliju, minimalnu akumulativnu udaljenost troška preko ili trošak površine od svake ćelije do skupa ćelija izvora.",
	"@@Cost-Path_destinationfield_tag0@@": "Polje koje se upotrebljava za dobivanje vrijednosti za lokacije odredišta. Ulazni podaci o geoobjektu moraju sadržavati barem jedno valjano polje.",
	"@@Cost-Path_destinationraster_tag0@@": "Sloj skupa podataka rastera koji identificira one ćelije od kojih se određuje najpovoljnija putanja određuje se do najpovoljnijeg izvora.",
	"@@Cost-Path_destinationraster_tag1@@": "Ulazni rasterski sloj sastoji se od ćelija koje imaju valjane vrijednosti (nula je valjana vrijednost), a preostalim se ćelijama treba dodijeliti vrijednost bez podataka.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag0@@": "Prisiljava funkciju da ulazni raster povratne veze tretira kao raster smjera toka. Rasteri smjera protoka mogu imati cijeli broj sa vrijednostima od 0-255.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag1@@": "Neoznačeno--Ako su vrijednosti navedenog rastera povratne veze cjeli brojevi u granicama od 0 do 8, skup podataka će se tretirati kao raster povratne veze troškova. Ako su vrijednosti od 0-255, ulaz će se tretirati kao raster smjera toka. Ako su vrijednosti od 0-360 i plutajuća točka, ulaz će se tretirati kao raster povratnog smjera.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag2@@": "Označeno--Raster isporučen za raster povratne veze tretirat će se kao raster smjera toka. Ovu opciju koristite ako se dogodi da raster smjera protoka ima najveću vrijednost 8 ili manju.",
	"@@Cost-Path_pathtype_tag0@@": "Ključna riječ koja određuje način na koji će se vrijednosti i zone u podacima ulaznog odredišta tumačiti u izračunu troška putanje. Dostupne su sljedeće opcije:",
	"@@Cost-Path_pathtype_tag1@@": "<strong>Each Cell</strong>--Za svaku ćeliju s valjanim vrijednostima podataka ulaznog odredišta određuje se najpovoljnija putanja i sprema u izlazni raster. S ovom opcijom sve ćelije podataka ulaznog odredišta tretiraju se zasebno i određuje se najpovoljnija putanja za svaku ćeliju.",
	"@@Cost-Path_pathtype_tag2@@": "<strong>Each Zone</strong>--Za svaku zonu u podacima ulaznog odredišta određuje se najpovoljnija putanja i sprema u izlazni raster. S ovom opcijom najpovoljnija putanja za svaku zonu počinje od ćelije s najpovoljnijom prosječnom udaljenosti u zoni.",
	"@@Cost-Path_pathtype_tag3@@": "<strong>Best Single</strong>--Za sve ćelije u podacima ulaznog odredišta najpovoljnija putanja izvodi se od ćelija s minimumom povoljnih putanja do lokacije ćelije.",
	"@@Cell-Statistics_cellsizetype_tag0@@": "Odaberite koja će se veličina ćelije upotrebljavati kao izlazni raster. Ako su sve ulazne veličine ćelija iste, sve će opcije davati iste rezultate.",
	"@@Cell-Statistics_cellsizetype_tag1@@": "Prvo od--Upotrebljava prvu veličinu ćelije ulaznog rastera.",
	"@@Cell-Statistics_cellsizetype_tag2@@": "Min. od--Upotrebljava najmanju veličinu ćelije svih ulaznih rastera.",
	"@@Cell-Statistics_cellsizetype_tag3@@": "Maks. od--Upotrebljava najveću veličinu ćelije ulaznog rastera. To je zadano.",
	"@@Cell-Statistics_cellsizetype_tag4@@": "Srednje od--Upotrebljava srednju veličinu ćelije svih ulaznih rastera.",
	"@@Cell-Statistics_cellsizetype_tag5@@": "Posljednje od--Upotrebljava posljednju veličinu ćelije ulaznog rastera.",
	"@@Cell-Statistics_extenttype_tag0@@": "Odaberite koji se obuhvat treba upotrebljavati u ulaznom rasteru:",
	"@@Cell-Statistics_extenttype_tag1@@": "Prvo od--Upotrebljava obuhvat prvog ulaznog rastera za određivanje obuhvata obrade.",
	"@@Cell-Statistics_extenttype_tag2@@": "Presjek od--Upotrebljava obuhvat preklapajućih piksela za određivanje obuhvata obrade. To je zadano.",
	"@@Cell-Statistics_extenttype_tag3@@": "Sjedinjenje od--Upotrebljava obuhvat svih rastera za određivanje obuhvata obrade.",
	"@@Cell-Statistics_extenttype_tag4@@": "Posljednje od--Upotrebljava obuhvat posljednjeg ulaznog rastera za određivanje obuhvata obrade.",
	"@@Cell-Statistics_processasmultiband_tag0@@": "Određuje kako se obrađuju pojasevi ulaznih rastera.",
	"@@Cell-Statistics_processasmultiband_tag1@@": "Neoznačeno--Svi višepojasni ulazi bit će obrađeni kao pojedinačni pojasevi. To je zadano.",
	"@@Cell-Statistics_processasmultiband_tag2@@": "Označeno--Svi višepojasni ulazi bit će obrađeni kao višestruki pojasevi.",
	"@@Cell-Statistics_rasters_tag0@@": "Popis rastera iz kojih želite izračunati statistike, na temelju pojedinog piksela.",
	"@@Cell-Statistics_percentileinterpolationtype_tag0@@": "<p>Određuje metodu interpolacije koja će se koristiti kada se navedena vrijednost percentila nalazi između dvije vrijednosti ulazne ćelije.</p><ul><li><strong>Automatsko otkrivanje</strong>--Ako su ulazni rasteri cjelobrojnog tipa piksela, koristi se metoda<strong>Najbliži</strong>. Ako je ulazni raster vrste piksela s plutajućom točkom, tada se koristi<strong>Linearna</strong>metoda. To je zadano.</li><li><strong>Najbliže</strong>--Koristi se najbliža dostupna vrijednost željenom postotku. U ovom je slučaju vrsta izlaznog piksela jednaka onoj u rasteru ulazne vrijednosti.</li><li><strong>Linearna</strong>--Koristi se ponderirani prosjek dviju okolnih vrijednosti iz željenog postotka. U ovom slučaju, tip izlaznog piksela je s plutajućom točkom.</li></ul><p>Ova je opcija dostupna samo ako je parametar tipa<strong>Operacija</strong>postavljen na<strong>Srednje</strong>ili<strong>Percentil</strong>.</p>",
	"@@Cell-Statistics_percentilevalue_tag0@@": "<p>Postotak koji treba izračunati. Zadana je vrijednost 90, za 90. postotak.</p><p>Vrijednosti se mogu kretati od 0 do 100. Nulti (0) postotak u osnovi je jednak minimalnoj statistici, dok je stoti (100) postotak jednak maksimumu. Vrijednost od pedeset rezultirat će u osnovi istim rezultatom kao i srednja vrijednost statistike.</p><p>Ova je opcija dostupna samo ako je parametar tipa<strong>Operacija</strong>postavljen na<strong>Percentil</strong>.</p>",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag0@@": "Raster stražnjeg smjera sadrži izračunate smjerove u stupnjevima. Smjer identificira sljedeću ćeliju duž optimalnog puta natrag do najmanje akumulativnog izvora troška, izbjegavajući prepreke.",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag1@@": "Raspon vrijednosti iznosi od 0 stupnjeva do 360 stupnjeva, s tim da je 0 rezervirano za izvorne ćelije. Prema istoku (desno) je 90, a vrijednosti se povećavaju u smjeru kazaljke na satu (180 je južno, 270 je zapadno, a 360 je sjeverno).",
	"@@Optimal-Path-As-Raster_destinationfield_tag0@@": "Polje koje se upotrebljava za dobivanje vrijednosti za lokacije odredišta.",
	"@@Optimal-Path-As-Raster_destinationraster_tag0@@": "Sloj skupa podataka rastera koji identificira one ćelije od kojih se određuje optimalna putanja određuje se do najpovoljnijeg izvora. Ovaj unos je obavezan..",
	"@@Optimal-Path-As-Raster_destinationraster_tag1@@": "Ulazni rasterski sloj sastoji se od ćelija koje imaju valjane vrijednosti (nula je valjana vrijednost), a preostalim se ćelijama treba dodijeliti vrijednost bez podataka.",
	"@@Optimal-Path-As-Raster_distanceaccumulationraster_tag0@@": "Rast akumulacije udaljenosti koristi se za određivanje optimalnog puta od odredišta do izvora. Raster za nakupljanje udaljenosti obično se stvara funkcijom <strong>Distance Accumulation</strong>. Svaka ćelija u rasteru nakupljanja udaljenosti predstavlja minimalni skupni trošak udaljenosti preko površine od svake ćelije do skupa izvornih ćelija.",
	"@@Optimal-Path-As-Raster_pathtype_tag0@@": "Određuje ključnu riječ koja određuje način na koji će se vrijednosti i zone u podacima ulaznog odredišta tumačiti u izračunu troška.",
	"@@Optimal-Path-As-Raster_pathtype_tag1@@": "<strong>Each Zone</strong>--Za svaku zonu u podacima ulaznog odredišta određuje se najpovoljnija putanja i sprema u izlazni raster. S ovom opcijom optimalna putanja za svaku zonu počinje od ćelije s najpovoljnijom prosječnom udaljenosti u zoni.",
	"@@Optimal-Path-As-Raster_pathtype_tag2@@": "<strong>Best Single</strong>--Za sve ćelije u podacima ulaznog odredišta optimalna putanja izvodi se od ćelija s minimumom povoljnih putanja do lokacije ćelije.",
	"@@Optimal-Path-As-Raster_pathtype_tag3@@": "<strong>Each Cell</strong>--Za svaku ćeliju s valjanim vrijednostima podataka ulaznog odredišta određuje se optimalna putanja. S ovom opcijom sve ćelije podataka ulaznog odredišta tretiraju se zasebno i određuje se optimalna putanja za svaku ćeliju.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag0@@": "ID-ovi pojasa koji se koriste za otkrivanje promjena. Ako nisu navedeni ID-ovi pojasa, koristit će se svi pojasevi iz ulaznog rasterskog skupa podataka.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag1@@": "Vrijednosti ID-a trebaju biti cijeli brojevi odijeljeni razmacima.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag0@@": "ID-i zelenog pojasa i SWIR pojasa koji se koriste za maskiranje oblaka, sjene oblaka i snijega. Ako nisu navedeni ID-ovi pojasa, maskiranje se neće dogoditi.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag1@@": "Vrijednosti ID-a trebaju biti cijeli brojevi odijeljeni razmacima.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag2@@": "Ovaj parametar određuje pojaseve koji će se koristiti za oblak, sjenu oblaka i maskiranje snijega. Budući da se sjena oblaka i snijeg pojavljuju vrlo mračno u infracrvenom opsegu kratkog vala (SWIR), a oblaci i snijeg vrlo su svijetli u zelenom pojasu, preporučuje se da se indeksi pojasa za SWIR i zelene pojase maskiraju.",
	"@@CCDC-Analysis_chi-squaredthresholdfordetectchange_tag0@@": "Prag vjerojatnosti promjene hi-kvadrata. Ako opažanje ima izračunatu vjerojatnost promjene iznad ovog praga, to se označava kao anomalija, što je potencijalni događaj promjene. Zadana vrijednost je 0,99.",
	"@@CCDC-Analysis_minimumconsecutiveanomalyobservations_tag0@@": "Minimalni broj uzastopnih opažanja anomalije koji se moraju dogoditi prije događaja smatra se promjenom. Piksel mora biti označen kao anomalija za određeni broj uzastopnih isječaka vremena prije nego što se smatra istinskom promjenom. Zadana je vrijednost 6.",
	"@@CCDC-Analysis_raster_tag0@@": "Uneseni višedimenzionalni rasterski sloj.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag0@@": "Učestalost kojom se ažurira model vremenske serije novim opažanjima. Zadano je ažuriranje modela svake jedne godine.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag1@@": "Ovaj parametar definira koliko će se često vremenski niz ažurirati novim opažanjima. Ažuriranje modela često može biti računski skupo, a korist može biti minimalna. Na primjer, ako u višedimenzionalnom rasteru ima 365 isječaka ili jasnih opažanja godišnje, a učestalost ažuriranja je za svako promatranje, obrada će biti 365 puta više računski skupa u odnosu na ažuriranje jednom godišnje, ali točnost možda neće biti veća.",
	"@@Trend-To-RGB_modeltype_tag0@@": "Vrsta informacije o modelu za pretvaranje u RGB.",
	"@@Trend-To-RGB_modeltype_tag1@@": "Linearna -- Podaci linearnog trenda bit će pretvoreni u RGB. To je zadano.",
	"@@Trend-To-RGB_modeltype_tag2@@": "Harmonijska -- Podaci harmonijskog trenda bit će pretvoreni u RGB.",
	"@@Trend-To-RGB_raster_tag0@@": "Raster ulaznog trenda.",
	"@@LandTrendr-Analysis_bestmodelproportion_tag0@@": "<p>Najbolja vrijednost proporcije modela. Tijekom postupka odabira modela, alat će izračunati p-vrijednost za svaki model i odabrati model koji ima najviše vrhova, zadržavajući pritom najmanju (najznačajniju) p-vrijednost na temelju ove proporcije. Vrijednost 1 znači da model ima najmanju p-vrijednost, ali možda nema velik broj vrhova. Zadana vrijednost je 1.25.</p>",
	"@@LandTrendr-Analysis_maximumnumberofsegments_tag0@@": "<p>Maksimalni broj segmenata koji se trebaju dolikovati u vremensku seriju za svaki piksel. Zadana vrijednost je 5.</p>",
	"@@LandTrendr-Analysis_minimumnumberofobservations_tag0@@": "<p>Minimalan broj valjanih opažanja potrebnih za izvođenje dolikovanja. Broj godina u ulaznom višedimenzionalnom skupu podataka mora biti jednak ili veći od ove vrijednosti. Zadana vrijednost 6.</p>",
	"@@LandTrendr-Analysis_outputotherbands_tag0@@": "<p>Određuje hoće li drugi pojasevi biti uključeni u rezultate.</p><ul><li>Označeno--Ostali pojasi bit će uključeni u rezultate. Podaci o segmentaciji i vrhovima iz početnog pojasa segmentacije navedeni u parametru <strong>Processing Band</strong> također će se dolikovati u preostale pojaseve na višepojasnim slikama. Rezultati modela prvo će uključivati pojas segmentacije, a zatim preostale pojaseve.</li><li>Neoznačeno--Ostali pojasi neće biti uključeni. To je zadano.</li></ul>",
	"@@LandTrendr-Analysis_preventoneyearrecovery_tag0@@": "<p>Određuje hoće li se izuzeti segmenti koji pokazuju jednogodišnji oporavak.</p><ul><li>Označeno--Segmenti koji pokazuju jednogodišnji oporavak bit će izuzeti. To je zadano.</li><li>Neoznačeno--Segmenti koji pokazuju jednogodišnji oporavak neće biti izuzeti.</li></ul>",
	"@@LandTrendr-Analysis_processingband_tag0@@": "<p>Pojas koji se koristi za segmentiranje putanja vrijednosti piksela tijekom vremena. Odaberite pojas koji će najbolje zabilježiti promjene u geoobjektu koji želite promatrati.</p>",
	"@@LandTrendr-Analysis_p-valuethreshold_tag0@@": "<p>Prag p-vrijednosti za model koji će se odabrati. Nakon otkrivanja vrhova u početnoj fazi dolikovanja modela, alat će uklopiti svaki segment i izračunati p-vrijednost kako bi utvrdio značaj modela. Na sljedećoj iteraciji model će smanjiti broj segmenata za jedan i ponovno izračunati p-vrijednost. To će se nastaviti i ako je p-vrijednost manja od vrijednosti navedene u ovom parametru, odabrat će se model i alat će prestati tražiti bolji model. Ako nije odabran nijedan takav model, alat će odabrati model s p-vrijednosti manjom od<strong>najniže p-vrijednosti x najbolja vrijednost proporcije modela</strong>. Zadana vrijednost je 0,01.</p>",
	"@@LandTrendr-Analysis_raster_tag0@@": "<p>Ulazni Landsat višedimenzionalni rasterski sloj.</p>",
	"@@LandTrendr-Analysis_recoveryhasincreasetrend_tag0@@": "<p>Određuje ima li oporavak rastući (pozitivan) trend.</p><ul><li>Označeno--Oporavak ima rastući trend. To je zadano.</li><li>Neoznačeno--Oporavak ima padajući trend.</li></ul>",
	"@@LandTrendr-Analysis_recoverythreshold_tag0@@": "<p>Vrijednost praga oporavka, u godinama. Ako segment ima brzinu oporavka bržu od<strong>1/prag oporavka</strong>, segment se odbacuje i nije uključen u model vremenske serije. Vrijednost se mora kretati između 0 i 1. Zadana vrijednost je 0,25.</p>",
	"@@LandTrendr-Analysis_snappingdate_tag0@@": "<p>Datum koji se koristi za odabir odsječka za svaku godinu u ulaznom višedimenzionalnom skupu podataka. Odabrat će se odsječak s datumom najbližim datumu snimanja. Ovaj je parametar potreban ako ulazni skup podataka sadrži pod-godišnje podatke.</p>",
	"@@LandTrendr-Analysis_spikethreshold_tag0@@": "<p>Prag za prigušivanje skokova ili anomalija u putanji vrijednosti piksela. Vrijednost se mora kretati između 0 i 1, pri čemu 1 znači da nema prigušivanja. Zadana vrijednost je 0,9.</p>",
	"@@LandTrendr-Analysis_vertexcountovershoot_tag0@@": "<p>Broj dodatnih vrhova iznad<strong>maks_br_segmenata + 1</strong>koji se mogu koristiti za dolikovanje modela tijekom početne faze identificiranja vrhova. Kasnije u procesu modeliranja, broj dodatnih vrhova smanjit će se na<strong>maks_br_segmenata + 1</strong>. Zadana vrijednost je 2.</p>",
	"@@Merge-Rasters_rasters_tag0@@": "<p>Ulazni rasterski skupovi podataka ili višedimenzionalni rasterski skupovi podataka za spajanje.</p>",
	"@@Merge-Rasters_resolveoverlapmethod_tag0@@": "<p>Određuje metodu za rješavanje preklapajućih piksela u kombiniranim skupovima podataka.</p><ul><li><strong>First</strong>--Vrijednost piksela u područjima koja se preklapaju vrijednost je iz prvog rastera na popisu ulaznih rastera. To je zadano.</li><li><strong>Last</strong>--Vrijednost piksela u područjima koja se preklapaju vrijednost je iz zadnjeg rastera na popisu ulaznih rastera.</li><li><strong>Min</strong>--Vrijednost piksela u preklapajućim područjima minimalna je vrijednost preklapajućih piksela.</li><li><strong>Max</strong>--Vrijednost piksela u područjima koja se preklapaju maksimalna je vrijednost preklapajućih piksela.</li><li><strong>Mean</strong>--Vrijednost piksela u područjima koja se preklapaju srednja je vrijednost preklapajućih piksela.</li><li><strong>Sum</strong>--Vrijednost piksela u područjima koja se preklapaju ukupan je zbroj piksela koji se preklapaju.</li></ul>",
	"@@Generate-Trend_cycleunit_tag0@@": "<p>Određuje vremensku jedinicu koja će se koristiti za duljinu harmonijskog ciklusa.</p><ul><li><strong>Days</strong>--Jedinica za duljinu harmonskog ciklusa su dani.</li><li><strong>Years</strong>--Jedinica za duljinu harmonskog ciklusa su godine. To je zadano.</li></ul>",
	"@@Generate-Trend_dimensionname_tag0@@": "<p>Dimenzija uz koju će se izvući trend za varijable ili varijable odabrane u analizi.</p>",
	"@@Generate-Trend_harmonicfrequency_tag0@@": "<p>Broj frekvencija koji se koristi u dolikovanju trenda. Ovaj parametar određuje učestalost ciklusa u godini. Zadana vrijednost je 1 ili jedan harmonijski ciklus godišnje.</p><p>Ovaj je parametar uključen samo u analizu trenda za harmonijsku regresiju.</p>",
	"@@Generate-Trend_ignorenodata_tag0@@": "<p>Određuje hoće li se vrijednosti NoData zanemariti u analizi.</p><ul><li>Označeno--Analiza će obuhvatiti sve važeće piksele duž zadane dimenzije i zanemariti bilo koji NoData pikseli. To je zadanao. </li><li>Neoznačeno--Analiza će prikazati vrijednosti NoData ako postoje vrijednosti BezPodataka za piksele za danu dimenziju.</li></ul>",
	"@@Generate-Trend_lengthofcycle_tag0@@": "<p>Duljina periodične varijacije do modela. Jedinica su dani, bez obzira na vremensku jedinicu ulaznih podataka. Na primjer, zelenilo listova često ima jedan snažni ciklus varijacija u jednoj godini, tako da je duljina ciklusa 365,25, čak i ako su ulazni podaci mjesečno zelenilo. Podaci o temperaturi u satu imaju jedan jak ciklus promjene tijekom jednog dana, tako da je dužina ciklusa 1.</p><p>Zadana dužina je 365,25 dana za podatke koji variraju u godišnjem ciklusu.</p>",
	"@@Generate-Trend_p-valueofslopecoefficient_tag0@@": "<p>Određuje hoće li se izračunati statistika p-vrijednosti za koeficijent nagiba linije trenda.</p><ul><li>Označeno--P-vrijednost će se izračunati i prikazati u pojedinostima kada funkcija završi.</li><li>Neoznačeno--P-vrijednost se neće izračunati. To je zadano.</li></ul>",
	"@@Generate-Trend_polynomialorder_tag0@@": "<p>Broj polinomnog reda koji se koristi u dolikovanju trenda. Ovaj parametar određuje polinomni red. Zadana vrijednost je 2 ili polinom drugog reda.</p><p>Ovaj je parametar uključen samo u analizu trenda za polinomnu regresiju.</p>",
	"@@Generate-Trend_r-squared_tag0@@": "<p>Određuje hoće li se izračunati R na kvadrat statistika ispravnosti dolikovanja za liniju trenda dolikovanja.</p><ul><li>Označeno--R na kvadrat izračunat će se i prikazati u pojedinostima kada se funkcija dovrši.</li><li>Neoznačeno--R na kvadrat se neće izračunati. To je zadano.</li></ul>",
	"@@Generate-Trend_raster_tag0@@": "<p>Ulazni višedimenzionalni raster.</p>",
	"@@Generate-Trend_rmse_tag0@@": "<p>Određuje hoće li se generirati korijenska srednja kvadratna pogreška (RMSE) linije trenda.</p><ul><li>Označeno--RMSE će se izračunati i prikazati u pojedinostima kada se funkcija dovrši. To je zadano.</li><li>Neoznačeno--RMSE se neće izračunati.</li></ul>",
	"@@Generate-Trend_seasonalperiod_tag0@@": "<p>Određuje vremensku jedinicu koja će se koristiti za duljinu sezonskog razdoblja prilikom izvođenja Seasonal-Kendall testa.</p><ul><li>Days--Jedinica za duljinu sezonskog razdoblja su dani. To je zadano.</li><li>Months--Jedinica za duljinu sezonskog razdoblja su mjeseci.</li></ul>",
	"@@Generate-Trend_trendtype_tag0@@": "<p>Određuje vrstu linije koja će se koristiti za dolikovanje u vrijednosti piksela duž dimenzije.</p><ul><li><strong>Linear</strong>--Dolikuje vrijednosti piksela za varijablu duž linearne linije trenda. To je zadano.</li><li><strong>Harmonic</strong>--Smješta vrijednosti piksela za varijablu duž harmonijske linije trenda.</li><li><strong>Polynomial</strong>--Smješta vrijednosti piksela za varijablu duž polinomne linije trenda.</li><li><strong>Mann-Kendall</strong>--Promjenjive vrijednosti piksela procijenit će se pomoću Mann-Kendall testa trenda.</li><li><strong>Seasonal Kendall</strong>--Promjenjive vrijednosti piksela procijenit će se pomoću Seasonal-Kendall testa trenda.</li></ul>",
	"@@Compute-Change_cellsizetype_tag0@@": "<p>Odaberite koja će se veličina ćelije upotrebljavati u izlaznom rasteru. Ako su sve veličine ulaznih ćelija iste, sve će opcije dati iste rezultate.</p><ul><li>First Of--Upotrebljava prvu veličinu ćelije ulaznih rastera.</li><li>Min Of--Upotrebljava najmanju veličinu ćelije od svih ulaznih rastera.</li><li>Max Of--Upotrebljava najveću veličinu ćelije od svih ulaznih rastera. To je zadano.</li><li>Mean Of--Upotrebljava srednju veličinu ćelije od svih ulaznih rastera.</li><li>Last of--Upotrebljava zadnju veličinu ćelije ulaznih rastera.</li></ul>",
	"@@Compute-Change_computechangemethod_tag0@@": "<p>Metoda korištena za izračunavanje.</p><ul><li><strong>Difference</strong>--Izračunat će se matematička razlika ili oduzimanje između vrijednosti piksela u ulaznim rasterima. To je zadano.</li><li><strong>Relative Difference</strong>--Izračunat će se razlika u vrijednostima piksela, uzimajući u obzir veličine vrijednosti koje se uspoređuju.</li><li><strong>Categorical Difference</strong>--Izračunat će se razlika između dva kategorična ili tematska rastera, gdje izlaz sadrži prijelaze klasa koji su se dogodili između dva rastera.</li><li><strong>Spectral Euclidean Distance</strong>--Izračunat će se Euklidska udaljenost između vrijednosti piksela dvaju višepojasnih rastera.</li><li><strong>Spectral Angle Difference</strong>--Izračunat će se spektralni kut između vrijednosti piksela dvaju višepojasnih rastera. Izlaz je u radijanima.</li><li><strong>Band With Most Change</strong>--Izračunat će se pojas koji predstavlja najveću promjenu u svakom pikselu između dva višepojasna rastera.</li></ul><p>Ako je<strong>Compute Change Method</strong>is postavljeno na<strong>Categorical Difference</strong>, a jedan od ulaza nije kategoričan, izračunat će se jednostavna razlika.</p>",
	"@@Compute-Change_definetransitioncolors_tag0@@": "<p>Navedite metodu koja će se koristiti za simboliziranje piksela koji su promijenili klasu.</p><ul><li><strong>Average From And To Colors</strong>--Boja piksela bit će prosjek boje izvorne klase i boje završne klase.</li><li><strong>Use From Colors</strong>--Boja piksela bit će boja njegove izvorne klase.</li><li><strong>Use To Colors</strong>--Boja piksela bit će boja njegove završne klase.</li></ul>",
	"@@Compute-Change_extenttype_tag0@@": "<p>Odaberite opseg koji će se koristiti u izlaznom rasteru:</p><ul><li>First of--Koristi opseg prvog ulaznog rastera za određivanje opsega obrade.</li><li>Intersection of--Koristi opseg preklapajućih piksela za određivanje opsega obrade. To je zadano.</li><li>Union Of--Koristi opseg svih rastera za određivanje opsega obrade.</li><li>Last Of--Koristi opseg zadnjeg ulaznog rastera za određivanje opsega obrade.</li></ul>",
	"@@Compute-Change_filtermethod_tag0@@": "<p>Odaberite metodu filtriranja za izračunavanje kategorijskih promjena.</p><ul><li><strong>Keep All</strong>--Sve su klase uključene u izlaz i neće doći do filtriranja. Odaberite ovu opciju da biste vidjeli promjene i ustrajnost u jednom skupu podataka.</li><li><strong>Keep Changed Pixels Only</strong>--U izlaz su uključene samo klase koje su se promijenile iz jedne vrste u drugu. Odaberite ovu opciju ako vas zanimaju samo promjene.</li><li><strong>Keep Unchanged Pixels Only</strong>--U izlaz su uključene samo klase koje se nisu promijenile. Odaberite ovu opciju ako vas zanima samo ustrajnost.</li></ul>",
	"@@Compute-Change_fromclassvalues_tag0@@": "<p>Vrijednosti klase iz<strong>From Raster</strong>koje će biti uključene u izračun, ako se uspoređuju dva kategorična rastera. Ovo je popis cjelobrojnih vrijednosti razgraničenih razmakom koji odgovaraju polju <strong>ClassValue</strong> u vašem ulaznom rasterskom skupu podataka.</p>",
	"@@Compute-Change_fromraster_tag0@@": "<p>Prvi raster koji se koristi u izračunu. Da biste procijenili promjenu iz vremena 1 (ranije) u vrijeme 2 (kasnije), ovdje unesite raster vremena 1.</p>",
	"@@Compute-Change_toclassvalues_tag0@@": "<p>Vrijednosti klase iz<strong>To Raster</strong>koje će biti uključene u izračun, ako se uspoređuju dva kategorična rastera. Ovo je popis cjelobrojnih vrijednosti razgraničenih razmakom koji odgovaraju polju <strong>ClassValue</strong> u vašem ulaznom rasterskom skupu podataka.</p>",
	"@@Compute-Change_toraster_tag0@@": "<p>Drugi raster koji se koristi u izračunu. Da biste procijenili promjenu iz vremena 1 (ranije) u vrijeme 2 (kasnije), unesite raster vremena 2.</p>",
	"@@Compute-Change_usecolormethod_tag0@@": "<p>Navedite metodu koja će se koristiti za simboliziranje piksela koji su promijenili klasu.</p><ul><li><strong>Average From And To Colors</strong>--Boja piksela bit će prosjek boje izvorne klase i boje završne klase.</li><li><strong>Use From Colors</strong>--Boja piksela bit će boja njegove izvorne klase.</li><li><strong>Use To Colors</strong>--Boja piksela bit će boja njegove završne klase.</li></ul>",
	"@@Compute-Change_fieldnameforclassnamesinfromraster_tag0@@": "<p>Polje koje pohranjuje nazive klasa u ulaz<strong>Od rastera</strong>. Alat automatski pretražuje polje<strong>NazivKlase</strong>ili polje<strong>Naziv_Klase</strong>za korištenje.</p><p>Koristite ovu opciju ako unos ne sadrži ove standardne nazive polja.</p>",
	"@@Compute-Change_fieldnameforclassnamesintoraster_tag0@@": "<p>Polje koje pohranjuje nazive klasa u ulaz<strong>Do rastera</strong>. Alat automatski pretražuje polje<strong>NazivKlase</strong>ili polje<strong>Naziv_Klase</strong>za korištenje.</p><p>Koristite ovu opciju ako unos ne sadrži ove standardne nazive polja.</p>",
	"@@Statistics_numberofcolumns_tag0@@": "<p>Broj stupaca piksela za upotrebu u dimenziji žarišnog susjedstva.</p>",
	"@@Statistics_numberofrows_tag0@@": "<p>Broj redaka piksela za upotrebu u dimenziji žarišnog susjedstva.</p>",
	"@@Statistics_onlyfillnodatapixels_tag0@@": "<p>Popunjava NoData praznine u izlazu. Ovo je korisno kad su na vašim slikama možda ispuštene crte.</p>",
	"@@Statistics_raster_tag0@@": "<p>Ulazni raster na kojem se vrši žarišna statistika.</p>",
	"@@Statistics_statisticstype_tag0@@": "<p>Slijedi sedam vrsta žarišnih statističkih funkcija:</p><ul><li>Minimum--Izračunava minimalnu vrijednost piksela unutar susjedstva.</li><li>Maximum--Izračunava maksimalnu vrijednost piksela unutar susjedstva.</li><li>Mean--Izračunava prosječnu vrijednost piksela unutar susjedstva. To je zadano.</li><li>Standard Deviation--Izračunava vrijednost standardne devijacije piksela unutar susjedstva.</li><li>Median--Izračunava srednju vrijednost piksela unutar susjedstva.</li><li>Majority--Izračunava većinsku vrijednost ili vrijednost koja se najčešće javlja kod piksela u susjedstvu.</li><li>Minority--Izračunava vrijednost manjine ili vrijednost koja se najmanje pojavljuje kod piksela u susjedstvu.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changedirection_tag0@@": "<p>Određuje smjer promjene koji će se uključiti u analizu.</p><p>Ovaj je parametar dostupan samo kada je raster analize promjene ulaza izlaz iz LandTrendr alata.</p><ul><li><strong>All directions</strong>--Svi smjerovi promjene uključeni su u izlaz. To je zadano.</li><li><strong>Increasing</strong>--U izlaz je uključena samo promjena u pozitivnom ili rastućem smjeru.</li><li><strong>Decreasing</strong>--U izlaz je uključena samo promjena u negativnom ili opadajućem smjeru.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changetype_tag0@@": "<p>Određuje informacije o promjeni koju treba izračunati.</p><ul><li><strong>Time of Latest Change</strong>--Svaki piksel sadrži datum najnovije promjene za taj piksel u vremenskoj seriji. To je zadano.</li><li><strong>Time of Earliest Change</strong>--Svaki piksel sadrži datum najranije promjene za taj piksel u vremenskoj seriji.</li><li><strong>Time of Largest Change</strong>--Svaki piksel sadrži datum najznačajnije promjene za taj piksel u vremenskoj seriji.</li><li><strong>Number of Changes</strong>--Svaki piksel sadrži ukupan broj promjena piksela u vremenskoj seriji.</li><li><strong>Time of Longest Change</strong>--Svaki piksel sadrži datum promjene na kraju najduljeg prijelaznog segmenta u vremenskoj seriji.</li><li><strong>Time of Shortest Change</strong>--Svaki piksel sadrži datum promjene na kraju najkraćeg prijelaznog segmenta u vremenskom nizu.</li><li><strong>Time of Fastest Change</strong>--Svaki piksel sadrži datum promjene na kraju prijelaza koja se dogodila najbrže.</li><li><strong>Time fo Slowest Change</strong>--Svaki piksel sadrži datum promjene na kraju prijelaza koja se dogodila najsporije.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_filterbyduration_tag0@@": "<p>Određuje hoće li se filtrirati prema trajanju promjene.</p><p></p><ul><li>Označeno--Filtrira rezultate prema trajanju tako da su u izlaz uključene samo promjene koje su trajale određeno vrijeme.</li><li>Označeno--Ne filtrira rezultate prema trajanju. To je zadano.</li></ul><p>Ovaj je parametar dostupan samo kada je raster analize promjene ulaza izlaz iz LandTrendr alata.</p><p>Ako je ovaj parametar označen, za filtriranje morate postaviti parametre<strong>Minimum Duration</strong>i<strong>Maximum Duration</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbymagnitude_tag0@@": "<p>Određuje hoće li se filtrirati prema veličini promjene.</p><ul><li>Označeno--Filtrira rezultate po veličini tako da su u izlaz uključene samo promjene dane veličine.</li><li>Neoznačeno--Ne filtrira rezultate po veličini. To je zadano.</li></ul><p>Ovaj je parametar dostupan samo kada je raster analize promjene ulaza izlaz iz LandTrendr alata.</p><p>Ako je ovaj parametar označen, za filtriranje morate postaviti parametre<strong>Minimum Magnitude</strong>i<strong>Maximum Magnitude</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyyear_tag0@@": "<p>Određuje treba li ograničiti izlaz na raspon godina.</p><ul><li>Označeno--Filtrira rezultate tako da su u izlaz uključene samo promjene koje su se dogodile u određenom rasponu godina.</li><li>Neoznačeno--Ne filtrira rezultate po godini. To je zadano.</li></ul><p>Ako je ovaj parametar označen, za filtriranje morate postaviti parametre<strong>Minimum Value</strong>i<strong>Maximum Value</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbystartvalue_tag0@@": "<p>Filtrirajte rezultate prema početnoj vrijednosti tako da samo promjene zadane početne vrijednosti budu uključene u izlaz.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyendvalue_tag0@@": "<p>Filtrirajte rezultate po krajnjoj vrijednosti tako da samo promjene zadane krajnje vrijednosti budu uključene u izlaz.</p>",
	"@@Detect-Change-Using-Change-Analysis_maximumnumberofchanges_tag0@@": "<p>Maksimalni broj promjena po pikselu koji se treba izračunati. Uneseni broj odgovara broju pojaseva u izlaznom rasteru. Zadana vrijednost je 1, što znači da se izračunava samo jedan datum promjene, a izlazni raster sadrži samo jedan pojas.</p><p>Ovaj parametar nije dostupan kada je parametar<strong>Change Type</strong>postavljen na<strong>Number of changes</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_raster_tag0@@": "<p>Raster analize promjene ulaza.</p>",
	"@@Detect-Change-Using-Change-Analysis_segmentdate_tag0@@": "<p>Određuje hoće li se izdvojiti datum na početku segmenta promjene ili na kraju.</p><p>Ovaj je parametar dostupan samo kada je raster analize promjene ulaza izlaz iz LandTrendr alata.</p><ul><li><strong>Beginning of segment</strong>--Izdvaja datum na početku segmenta promjene. To je zadano.</li><li><strong>End of segment</strong>--Izdvaja datum na kraju segmenta promjene.</li></ul>",
	"@@Kernel-Density_areaunits_tag0@@": "<p>Jedinice površine vrijednosti izlazne gustoće.</p><ul><li>Square Map Units--Za kvadrat linearnih jedinica izlazne prostorne reference.</li><li>Square Miles--za milje (SAD).</li><li>Square Kilometers--Za kilometre.</li><li>Acres--Za are (SAD).</li><li>Hectares--Za hektre.</li><li>Square Meters--Za metre.</li><li>Square Yards--Za jarde (SAD).</li><li>Square Feet--Za stope (SAD).</li><li>Square Inches--Za inče (SAD).</li><li>Square Centimeters--Za centimetre.</li><li>Square Millimeters--Za milimetre.</li></ul>",
	"@@Kernel-Density_cellsize_tag0@@": "<p>Veličina piksela za izlazni skup rasterskih podataka. Ako je vrijednost<strong>Cellsize</strong>postavljena u okruženjima za geoprocesiranje, to je zadana vrijednost.</p>",
	"@@Kernel-Density_inputbarriers_tag0@@": "<p>Skup podataka koji definira barijere.</p><p>Pregrade mogu biti sloj geoobjekta polilinije ili poligona.</p>",
	"@@Kernel-Density_inputfeatures_tag0@@": "<p>Ulazna točka ili linijski geoobjekti za koji se izračunava gustoća.</p>",
	"@@Kernel-Density_method_tag0@@": "<p>Određuje treba li se upotrebljavati najkraća putanja na sferoidu (gedetski) ili metoda ravne zemlje (planarna).</p><ul><li><strong>Planar</strong>--Koristi planarne udaljenosti između geoobjekata. To je zadana vrijednost.</li><li><strong>Geodesic</strong>--Koristi geodetske udaljenosti između geoobjekata. Ova metoda uzima u obzir zakrivljenost sferoida i ispravno obrađuje podatke u blizini polova i međunarodne datumske linije.</li></ul><p>Preporučuje se upotreba<strong>Geodesic</strong>metode s podacima pohranjenim u koordinatnom sustavu koji nije prikladan za mjerenje udaljenosti i bilo koju analizu koja obuhvaća veliko zemljopisno područje. Na primjer, Web Mercator ili bilo koji geografski koordinatni sustav trebao bi upotrebljavati <strong>Geodesic</strong>metodu.</p>",
	"@@Kernel-Density_outputcellvalues_tag0@@": "<p>Određuje što predstavljaju vrijednosti u izlaznom rasteru.</p><ul><li><strong>Densities</strong>--Izlazne vrijednosti predstavljaju predviđenu vrijednost gustoće. To je zadano.</li><li><strong>Expected Counts</strong>--TIzlazne vrijednosti predstavljaju predviđeni iznos fenomena unutar svakog piksela. Pošto je vrijednost piksela povezana s navedenom vrijednošću<strong>Cellsize</strong>, rezultirajući raster ne može se ponovo primijeniti na drugu veličinu piksela i još uvijek predstavlja količinu fenomena.</li></ul>",
	"@@Kernel-Density_populationfield_tag0@@": "<p>Polja koja označavaju vrijednost populacije za svaki geoobjekt. Vrijednost<strong>Population Field</strong>je broj ili količina koja će se rasporediti po krajoliku kako bi se stvorila kontinuirana površina. Vrijednosti u<strong>Population Field</strong>mogu biti cjelobrojne ili s pomičnim zarezom.</p><p>Opcija i zadano ponašanje za polje navedeni su u nastavku prema redoslijedu prioriteta.</p><ul><li>Krositi<strong>None</strong>ako nijedna stavka ili posebna vrijendosti neče biti korištene i svaki geoobjekt će biti brojan jendom.</li><li>Koristi<strong>Shape</strong>ako ulazni geoobjekti sadrže Z.</li><li>Inače, zadano polje je<strong>POPULATION</strong>, ili bilo koji prihvatljivi derivat populacije:<ul><li><strong>POPULATIONxxxx</strong>gdje<strong>xxxx</strong>može biti bilo koji valjani znak, kao što je<strong>POPULATION6</strong>,<strong>POPULATION1974</strong>ili<strong>POPULATIONROADTYPE</strong>.</li><li><strong>POP</strong>.</li><li><strong>POPxxxx</strong>.</li><li>Ako ništa od navedenog nije primjenjivo, zadano je<strong>None</strong>.</li></ul></li></ul>",
	"@@Kernel-Density_searchradius_tag0@@": "<p>Polumjer pretraživanja unutar kojeg se izračunava gustoća. Jedinice se temelje na linearnoj jedinici projekcije.</p><p>Na primjer, ako su jedinice u metrima--za uključivanje svih geoobjekata unutar četvrti od jedne milje--postavite polumjer pretraživanja na 1609,344 (jer 1 milja je 1609,344 metara).</p>",
	"@@Zonal-Statistics_ignorenodataincalculations_tag0@@": "<p>Označava hoće li vrijednosti<strong>NoData</strong>u<strong>Value Raster</strong>utjecati na rezultate zone u koju spadaju.</p><ul><li><strong>Yes</strong>--Unutar bilo koje određene zone, samo će se pikseli koji imaju vrijednost u<strong>Value Raster</strong>koristiti za određivanje izlazne vrijednosti za tu zonu.<strong>NoData</strong>pikselu u<strong>Value Raster</strong>bit će zanemareni u izračunu statistike. To je zadano.</li><li><strong>No</strong>--Unuar bilo koje zone, ako bilo koji<strong>NoData</strong>pikseli postoje u <strong>rasteru vrijednosti</strong>, onda se smatra da nema dovoljno informacija za provođenje izračuna statistike za sve piksele u toj zoni; zbog toga će cijela zone zabilježiti vrijednost<strong>NoData</strong>u izlaznom rasteru.</li></ul>",
	"@@Zonal-Statistics_percentileinterpolationtype_tag0@@": "<p>Određuje metodu interpolacije postotka koja će se koristiti kada je broj vrijednosti iz ulaznog rastera koji se izračunava ujednačen.</p><ul><li><strong>Auto-detect</strong>--Ako je raster ulazne vrijednosti vrste cijelog broja piksela, koristi se metoda<strong>Nearest</strong>. Ako je raster ulazne vrijednosti vrste piksela s plutajućom točkom, tada se koristi<strong>Linear</strong>metoda. To je zadano.</li><li><strong>Nearest</strong>--Koristi se najbliža dostupna vrijednost željenom postotku. U ovom je slučaju vrsta izlaznog piksela jednaka onoj u rasteru ulazne vrijednosti.</li><li><strong>Linear</strong>--Koristi se ponderirani prosjek dviju okolnih vrijednosti iz željenog postotka. U ovom slučaju je vrsta izlaznog piksela plutajuća točka.</li></ul>",
	"@@Zonal-Statistics_percentilevalue_tag0@@": "<p>Postotak koji treba izračunati. Zadana je vrijednost 90, za 90. postotak.</p><p>Vrijednosti se mogu kretati od 0 do 100. Nulti postotak u osnovi je jednak minimalnoj statistici, dok je stoti postotak jednak maksimalnoj. Vrijednost od pedeset rezultirat će u osnovi istim rezultatom kao i srednja vrijednost statistike.</p>",
	"@@Zonal-Statistics_processasmultidimensional_tag0@@": "<p>Određuje kako se obrađuje ulazni višedimenzionalni raster vrijednosti.</p><ul><li><strong>Current Slice</strong>--Statistički podaci izračunavat će se iz trenutnog odsječka višedimenzionalnog skupa podataka. To je zadano.</li><li><strong>All Slices</strong>--Statistički podaci izračunavat će se za sve dimenzije (kao što su vrijeme ili dubina) višedimenzionalnog skupa podataka.</li></ul>",
	"@@Zonal-Statistics_statisticstype_tag0@@": "<p>Vrsta statistike koju treba izračunati.</p><ul><li><strong>Mean</strong>--Izračunava prosjek svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li><li><strong>Majority</strong>--Određuje vrijednost koja se najčešće javlja od svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li><li><strong>Maximum</strong>--Određuje najveću vrijednost svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li><li><strong>Median</strong>--Određuje drednju vrijednosti svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li><li><strong>Minimum</strong>--Određuje najmanju vrijednost svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li><li><strong>Minority</strong>--Određuje vrijednost koja se najmanje često javlja od svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li><li><strong>Percentile</strong>--Izračunava postotak svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel. 90. postotak izračunava se prema zadanim postavkama. Možete odrediti koji postotak treba izračunati pomoću parametra<strong>Percentile Value</strong>.</li><li><strong>Range</strong>--Izračunava razliku između najveće i najmanje vrijednosti svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li><li><strong>Standard Deviation</strong>--Izračunava standardno odstupanje svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li><li><strong>Sum</strong>--Izračunava ukupnu vrijednost svih piksela u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li><li><strong>Variety</strong>--Izračunava broj jedinstvenih vrijednosti za sve piksele u<strong>Value Raster</strong>koji pripadaju istoj zoni kao i izlazni piksel.</li></ul>",
	"@@Zonal-Statistics_valueraster_tag0@@": "<p>Raster koji sadrži vrijednosti na temelju koji se izračunava statistika.</p>",
	"@@Zonal-Statistics_zonefield_tag0@@": "<p>Polje koje sadrži vrijednost koja definira svaku zonu. Može biti cijeli broj ili polje teksta rastera zone.</p>",
	"@@Zonal-Statistics_zoneraster_tag0@@": "<p>Skup podataka koji definira zone. Zone je moguće definirati putem rastera cijelih brojeva.</p>",
	"@@Zonal-Statistics_calculatecircularstatistics_tag0@@": "<p>Određuje kako će se vrsta statistike izračunati.</p><ul><li><strong>Arithmetic</strong>--Izračunava aritmetičku statistiku. To je zadano.</li><li><strong>Circular</strong>--Izračunava kružnu statistiku koja je prikladna za ciklične veličine, kao što je smjer kompasa u stupnjevima, danima i razlomcima realnih brojeva.</li></ul>",
	"@@Zonal-Statistics_circularwrapvalue_tag0@@": "<p>Najveća moguća vrijednost (gornja granica) u cikličkim podacima. To je pozitivan broj, sa zadanom vrijednošću od 360. Ova vrijednost također predstavlja istu količinu kao najniža moguća vrijednost (donja granica).</p><p>Ovaj je parametar primjenjiv samo kada se izračunava kružna statistika.</p>",
	"@@Boundary-Clean-function_inputraster_tag0@@": "<p>Ulazni raster za koji će se granica između zona zagladiti.</p><p>Mora biti cijeli broj.</p>",
	"@@Boundary-Clean-function_runexpansionandshrinkingtwice_tag0@@": "<p>Određuje koliko će se puta postupak zaglađivanja dogoditi, dvaput ili jednom.</p><ul><li><p><strong>Označeno</strong>--Performs an expansion and shrinking operation two times. Za prvi put, operacija se izvodi prema navedenoj vrsti sortiranja. Zatim se izvodi dodatna operacija širenja i skupljanja s obrnutim prioritetom. To je zadano.</p></li><li><p><strong>Neoznačeno</strong>--Izvodi postupak širenja i skupljanja jednom prema vrsti sortiranja.</p></li></ul>",
	"@@Boundary-Clean-function_sorttype_tag0@@": "<p>Određuje vrstu sortiranja koja će se koristiti u postupku zaglađivanja. Sortiranje određuje prioritet kojim se stanice mogu proširiti na svoje susjede.</p><p>Sortiranje se može izvršiti na temelju vrijednosti zone ili površine zone.</p><ul><li><p><strong>Do not sort</strong>--Zone se ne sortiraju po veličini. Zone s većim vrijednostima imaju veći prioritet za širenje u zone s manjim vrijednostima u zaglađenom izlazu. To je zadano.</p></li><li><p><strong>Descending</strong>--Sortira zone u opadajućem redoslijedu prema veličini. Zone s većim ukupnim površinama imaju veći prioritet za širenje u zone s manjim ukupnim površinama. Ova opcija nastoji eliminirati ili smanjiti prevalenciju stanica iz manjih zona u zaglađenom izlazu.</p></li><li><p><strong>Ascending</strong>--Sortira zone u rastućem redoslijedu prema veličini. Zone s manjim ukupnim površinama imaju veći prioritet za širenje u zone s većim ukupnim površinama. Ova opcija nastoji sačuvati ili povećati prevalenciju stanica iz manjih zona u zaglađenom izlazu.</p></li></ul>",
	"@@Aggregate-Multidimensional_dimension_tag0@@": "<p>Dimenzija agregacije. Ovo je dimenzija po kojoj će se varijable agregirati.</p>",
	"@@Aggregate-Multidimensional_dimensiondefinition_tag0@@": "<p>Određuje metodu za filtriranje ulaznih višedimenzionalnih podataka prije izvođenja agregacije.</p><ul><li><strong>All</strong>--Upotrijebit će se puni raspon za svaku dimenziju. To je zadano.</li><li><strong>By Values</strong>--Dimenzija će biti izrezana pomoću vrijednosti dimenzije ili popisa vrijednosti.</li><li><strong>By Ranges</strong>--Dimenzija će biti izrezana pomoću raspona ili popisa raspona.</li><li><strong>By Iteration</strong>--Dimenzija će biti izrezana na određenu veličinu intervala.</li></ul>",
	"@@Aggregate-Multidimensional_iterationdefinitionparameters_tag0@@": "<p>Parametri definicije iteracije omogućuju vam definiranje vrijednosti dimenzija koje će se koristiti za filtriranje ulaznih višedimenzionalnih podataka za analizu kada je parametar<strong>Dimension Definition</strong>postavljen na<strong>By Iteration</strong>.</p><ul><li><strong>Dimension</strong>--Dimenzija koja će se koristiti za filtriranje.</li><li><strong>Start of first iteration</strong>--Početak prvog intervala. Ovaj se interval koristi za ponavljanje kroz skup podataka.</li><li><strong>End of first iteration</strong>--Kraj prvog intervala. Ovaj se interval koristi za ponavljanje kroz skup podataka.</li><li><strong>Step</strong>--Učestalost rezanja podataka.</li><li><strong>Unit</strong>--Jedinica iteracije.</li></ul>",
	"@@Aggregate-Multidimensional_keywordinterval_tag0@@": "<p>Određuje interval ključne riječi koji će se koristiti za agregiranje duž dimenzije.</p><p>Ovaj je parametar potreban kada je parametar<strong>Type</strong>postavljen na<strong>Interval Keyword</strong>.</p><ul><li><strong>Hourly</strong>--Vrijednosti podataka agregiraju se u satne vremenske korake, a rezultat uključuje svaki sat u vremenskoj seriji. To je zadano.</li><li><strong>Daily</strong>--Vrijednosti podataka prikupljaju se u dnevne vremenske korake, a rezultat uključuje svaki dan u vremenskoj seriji.</li><li><strong>Weekly</strong>--Vrijednosti podataka prikupljaju se u tjedne vremenske korake, a rezultat uključuje svaki tjedan u vremenskoj seriji.</li><li><strong>Dekadly</strong>--Vrijednosti podataka agregiraju se u 3 razdoblja od po 10 dana. Posljednje razdoblje može sadržavati više ili manje od 10 dana. Izlaz uključuje 3 isječka za svaki mjesec.</li><li><strong>Pentadly</strong>--Vrijednosti podataka agregiraju se u 6 razdoblja od po 5 dana. Posljednje razdoblje može sadržavati više ili manje od 5 dana. Izlaz uključuje 6 isječka za svaki mjesec.</li><li><strong>Monthly</strong>--Vrijednosti podataka agregiraju se u mjesečne vremenske korake, a rezultat uključuje svaki mjesec u vremenskoj seriji.</li><li><strong>Quarterly</strong>--Vrijednosti podataka agregiraju se u tromjesečne vremenske korake, a rezultat uključuje svako tromjesečje u vremenskoj seriji.</li><li><strong>Yearly</strong>--Vrijednosti podataka agregirane su u godišnje vremenske korake, a rezultat uključuje svaku godinu u vremenskoj seriji.</li><li><strong>Recurring daily</strong>--Vrijednosti podataka agregirane su u dnevne vremenske korake, a rezultat uključuje jednu agregiranu vrijednost po julijanskom danu. Izlaz uključuje najviše 366 dnevnih vremenskih isječaka.</li><li><strong>Recurring weekly</strong>--Vrijednosti podataka agregiraju se u tjedne vremenske korake, a rezultat uključuje jednu agregiranu vrijednost tjedno. Izlaz uključuje najviše 53 tjedna vremenska isječka.</li><li><strong>Recurring monthly</strong>--Vrijednosti podataka agregirane su u mjesečne vremenske korake, a rezultat uključuje jednu agregiranu vrijednost mjesečno. Izlaz uključuje najviše 12 mjesečnih vremenskih isječaka.</li><li><strong>Recurring quarterly</strong>--Vrijednosti podataka agregiraju se u tromjesečne vremenske korake, a rezultati uključuju jednu agregiranu vrijednost po tromjesečju. Izlaz ukljčuje najviše 4 kvartalna vremenska isječka.</li></ul>",
	"@@Aggregate-Multidimensional_operation_tag0@@": "<p>Određuje matematičku metodu koja će se koristiti za kombiniranje agregiranih isječaka u intervalu.</p><ul><li><strong>Majority</strong>--Vrijednost piksela koja se najčešće dogodila izračunat će se za sve isječke u intervalu.</li><li><strong>Maximum</strong>--Maksimalna vrijednost piksela izračunat će se za sve isječke u intervalu.</li><li><strong>Mean</strong>--Srednja vrijednost piksela izračunat će se za sve isječke u intervalu. To je zadano.</li><li><strong>Median</strong>--Srednja vrijednost piksela izračunat će se za sve isječke u intervalu.</li><li><strong>Minimum</strong>--Minimalna vrijednost piksela izračunat će se za sve isječke u intervalu.</li><li><strong>Minority</strong>--Vrijednost piksela koja se dogodila najmanje često izračunat će se za sve isječke u intervalu.</li><li><strong>Range</strong>--Raspon vrijednosti za piksel izračunat će se za sve isječke u intervalu.</li><li><strong>Standard Deviation</strong>--Standardno odstupanje vrijednosti piksela izračunat će se za sve isječke u intervalu.</li><li><strong>Sum</strong>--Zbroj vrijednosti piksela izračunat će se za sve isječke u intervalu.</li><li><strong>Variety</strong>--Broj jedinstvenih vrijednosti piksela izračunat će se za sve isječke u intervalu.</li></ul><p>Sve opcije također imaju ekvivalent s opcijom Ignore NoData. One će izvesti matematičku operaciju na svim važećim pikselima duž dimenzije i zanemariti bilo koje NoData piksele.</p>",
	"@@Aggregate-Multidimensional_ranges_tag0@@": "<p>Rasponi intervala navedeni u tablici koriste se za agregiranje skupina vrijednosti. Minimalne i maksimalne vrijednosti određuju raspon koji treba uključiti.</p><p>Ovaj je parametar nužan kada je parametar<strong>Type</strong>postavljen na<strong>Interval Ranges</strong>.</p>",
	"@@Aggregate-Multidimensional_raster_tag0@@": "<p>Ulazni višedimenzionalni raster.</p>",
	"@@Aggregate-Multidimensional_type_tag0@@": "<p>Određuje interval dimenzija za koji će se podaci agregirati.</p><ul><li><strong>All</strong>--Varijabilni podaci bit će agregirani za sve isječke. To je zadano.</li><li><strong>Interval Keyword</strong>--Varijabil ni podaci bit će agregirani pomoću uobičajeno poznatog intervala.</li><li><strong>Interval Value</strong>--Varijabilni podaci bit će agregirani pomoću korisničkog intervala i jedinice.</li><li><strong>Interval Ranges</strong>--Varijabilni podaci bit će agregirani između određenih parova vrijednosti ili datuma.</li></ul>",
	"@@Aggregate-Multidimensional_valueinterval_tag0@@": "<p>Veličina intervala korištenog za agregiranje.</p><p>Ovaj je parametar potreban kada je parametar<strong>Type</strong>postavljen na<strong>Interval Value</strong>.</p>",
	"@@Aggregate-Multidimensional_values_tag0@@": "<p>Vrijednosti dimenzija koje se koriste za filtriranje ulaznih višedimenzionalnih podataka za analizu. Taj je parametar potreban kada je parametar<strong>Dimension Definition</strong>postavljen na<strong>By Values</strong>.</p>",
	"@@Aggregate-Multidimensional_variables_tag0@@": "<p>Varijabla ili varijable koje će se agregirati po danoj dimenziji.</p>",
	"@@Predict-Using-Regression_inputdefinitionfile_tag0@@": "<p>Ulazna Esrijeva datoteka definicije regresije (<strong>.ecd</strong>) koja sadrži statistike i druge informacije za specifični skup podataka,regresiju i odabrane atribute.</p>",
	"@@Predict-Using-Regression_rasters_tag0@@": "<p>Skup rasterskih podataka ili skupovi podataka koji predstavljaju varijable prediktore. To može biti jednokanalni raster, višekanalni raster, višedimenzionalni raster, mozaični skup podataka ili zbirka rastera.</p>",
	"@@Cell-Statistics_operation_tag0@@": "<p>Vrsta statističkog izračuna koji želite izvesti.</p><p>Dostupne statistike su<strong>većina</strong>,<strong>maksimum</strong>,<strong>prosjek</strong>,<strong>srednja vrijednost</strong>,<strong>minimum</strong>,<strong>manjina</strong>,<strong>postotak</strong>,<strong>raspon</strong>,<strong>standardna devijacija</strong>,<strong>zbroj</strong>, i <strong>raznolikost</strong>.</p><p>Zadana statistika je<strong>prosjek</strong>.</p>",
	"@@Colormap-To-RGB_randomlyassigncolortounmappedpixels_tag0@@": "<p>Boje se nasumično dodjeljuju pikselima koji nisu uključeni u kartu boja.</p><ul><li>Neoznačenim - nekartiranim pikselima se ne dodijeljuje boja. Ovo je zadano.</li><li>Označenim--nekartiranim pikselima se dodijeljuje boja.</li></ul>",
	"@@Pansharpen_sensor_tag0@@": "<p>Ako je odabran Gram-Schmidt algoritam, također možete specificirati senzor koji prikuplja višekanalni ulazni raster. Odabirom vrste senzora postavit će se prikladne težine kanala.</p>",
	"@@Dimensional-Moving-Statistics_backwardwindow_tag0@@": "<p>Vrijednost koliko isječaka prije ili iznad treba uključiti u definirani prozor. Vrijednost mora biti pozitivni cijeli broj od 1 do 100. Zadana vrijednost je 1.</p><p>Jedinica ovog parametra je isječak.</p>",
	"@@Dimensional-Moving-Statistics_circularwrapvalue_tag0@@": "<p>Vrijednost koja će se koristiti za zaokruživanje linearne vrijednosti na raspon dane srednje kružne vrijednosti.</p><p>Ta vrijednost mora biti pozitivna. Zadana vrijednost je 360 stupnjeva.</p>",
	"@@Dimensional-Moving-Statistics_dimension_tag0@@": "<p>Naziv dimenzije duž koje će se prozor kretati.</p><p>Zadana vrijednost je prva dimenzija osim x,y koja se nalazi u ulaznom višedimenzionalnom rasteru.</p>",
	"@@Dimensional-Moving-Statistics_forwardwindow_tag0@@": "<p>Vrijednost koliko isječaka nakon ili ispod treba uključiti u definirani prozor. Vrijednost mora biti pozitivni cijeli broj od 1 do 100. Zadana vrijednost je 1.</p><p>Jedinica ovog parametra je isječak.</p>",
	"@@Dimensional-Moving-Statistics_inputraster_tag0@@": "<p>Ulazni raster može biti samo višedimenzionalni raster u formatu Cloud Raster Format (<strong>.crf</strong>datoteka).</p>",
	"@@Dimensional-Moving-Statistics_nodatahandling_tag0@@": "<p>Određuje kako će statistički izračun obrađivati vrijednosti Bez podataka.</p><ul><li><strong>Podatci</strong>--Bez podataka vrijednosti u unosu vrijednosti bit će zanemarene u rezultatima definiranog prozora u koji spadaju. Ovo je zadano.</li><li><strong>Bez podataka</strong>--Izlazne vrijednosti bit će Bez podataka ako bilo koja vrijednost Bez podataka postoji na ulazu unutar definiranog prozora.</li><li><strong>Ispuni Bez podataka</strong>--vrijednosti ćelija Bez podataka biti će zamijenjene pomoću odabrane statistike unutar definiranog prozora.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentileinterpolationtype_tag0@@": "<p>Određuje metodu interpolacije koja će se koristiti kada vrijednost postotka padne između dvije vrijednosti ćelije.</p><ul><li><strong>Automatsko otkrivanje</strong>--Ako je ulazni raster cjelobrojnog tipa piksela, koristiti će se<strong>Najbliži</strong>metoda. Ako je ulazni raster vrste piksela s plutajućom točkom, tada će se koristiti<strong>Linearna</strong>metoda. To je zadano.</li><li><strong>Najbliže</strong>--Koristiti će se najbliža dostupna vrijednost postotku. U ovom će slučaju vrsta izlaznog piksela biti jednaka onoj u rasteru ulazne vrijednosti.</li><li><strong>Linear</strong>--Koristiti će se ponderirani prosjek dviju okolnih vrijednosti iz postotka. U ovom slučaju će vrsta izlaznog piksela biti plutajuća točka.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentilevalue_tag0@@": "<p>Postotak koji će biti izračunat kada se<strong>Postotak</strong>odabere kao vrsta statistike. Zadana je vrijednost 90, za 90. postotak.</p><p>Vrijednosti se mogu kretati od 0 do 100. Nulti postotak u osnovi je jednak minimalnoj statistici, dok je stoti postotak jednak maksimalnoj statistici, uz iznimku da će rezultat biti plutajuća točka. Vrijednost od pedeset rezultirat će istim rezultatom kao i srednja vrijednost statistike.</p>",
	"@@Dimensional-Moving-Statistics_statisticstype_tag0@@": "<p>Određuje vrstu statistike koju treba izračunati.</p><p></p><ul><li><strong>Srednja</strong>--Srednja (prosječna vrijednost) ćelija u definiranom prozoru će biti izračunata. To je zadano.</li><li><strong>Kružna srednja vrijednost</strong>--Kružna srednja vrijednost ćelija u definiranom prozoru će biti izračunata. Kada je odabrana ova vrsta statistike, parametar<strong>Vrijednost kružnog omota</strong>postaje dostupan.</li><li><strong>Većina</strong>--Većina (vrijednost koja se najčešće pojavljuje) ćelija u definiranom prozoru će biti identificirana.</li><li><strong>Maksimum</strong>--Maksimum (najveća vrijednost) ćelija u definiranom prozoru će biti identificirana.</li><li><strong>Srednja vrijednost</strong>--Srednja vrijednost ćelija u susjedstvu će biti identificirana.</li><li><strong>Minimum</strong>--Minimum (najmanja vrijednost) ćelija u susjedstvu će biti identificirana.</li><li><strong>Postotak</strong>--Postotak ćelija u susjedstvu će biti izračunat. Kada je odabrana ova vrsta statistike, parametri<strong>Postotna vrijednost</strong>i<strong>Vrsta interpolacije postotka</strong>postaju dostupni. Upotrijebite ove nove parametre za označavanje postotka za izračunavanje i odabir vrste interpolacije za korištenje.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_dimension_tag0@@": "<p>Dimenzija koja se koristi za interpolaciju.</p><p>Ovaj parametar je potreban kada je parametar<strong>Definicija dimenzije</strong>namješten na<strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_dimensiondefinition_tag0@@": "<p>Određuje metodu koja će se koristiti za filtriranje ulaznih višedimenzionalnih podataka prije izvođenja interpolacije.</p><ul><li><strong>Po vrijednostima</strong>--Dimenzija će se izrezati pomoću vrijednosti dimenzije ili popisa vrijednosti.</li><li><strong>Po intervalu</strong>--Dimenzija će se izrezati pomoću raspona ili popisa raspona.</li><li><strong>Po ciljnom rasteru</strong>--Dimenzija će se rezati pomoću specifičnog ciljanog višedimenzionalnog rastera.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_endofinterval_tag0@@": "<p>Kraj intervala koji se koristi za ponavljanje kroz skup podataka.</p><p>Ovaj parametar je potreban kada je parametar<strong>Definicija dimenzije</strong>namješten na<strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_ignorenodata_tag0@@": "<p>Određuje hoće li se vrijednosti Bez podataka zanemariti u analizi.</p><ul><li>Neoznačeno--Analiza će rezultirati Bez podataka ako postoje vrijednosti Bez podataka u susjednim isječcima. Ovo je zadano.</li><li>Označeno--Analiza će koristiti samo isječke koji imaju važeće piksele i zanemarit će isječke Bez podataka.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_interpolationmethod_tag0@@": "<p>Određuje metodu koja će se koristiti za interpolaciju rastera.</p><ul><li><strong>Linearno</strong>--Izlaz će se linearno interpolirati korištenjem susjednih isječaka. To je zadano.</li><li><strong>Najbliži susjed</strong>--Izlaz će koristiti najbliži susjedni isječak.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_raster_tag0@@": "<p>Ulazni višedimenzionalni raster.</p>",
	"@@Interpolate-Raster-By-Dimension_startofinterval_tag0@@": "<p>Početak intervala koji se koristi za ponavljanje kroz skup podataka.</p><p>Ovaj parametar je potreban kada je parametar<strong>Definicija dimenzije</strong>namješten na<strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_step_tag0@@": "<p>Učestalost kojom će se podaci interpolirati.</p><p>Ovaj parametar je potreban kada je parametar<strong>Definicija dimenzije</strong>namješten na<strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_targetraster_tag0@@": "<p>Ciljni raster naveden u definiciji dimenzije.</p><p>Ovaj parametar je potreban kada je parametar<strong>Definicija dimenzije</strong>namješten na<strong>Po ciljnom rasteru</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_unit_tag0@@": "<p>Jedinica intervala.</p><p>Ovaj parametar je potreban kada je parametar<strong>Definicija dimenzije</strong>namješten na<strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_values_tag0@@": "<p>Dimenzionalne vrijednosti koje se koriste za filtriranje ulaznih višedimenzionalnih podataka za analizu.</p><p>Ovaj parametar je potreban kada je parametar<strong>Definicija dimenzije</strong>namješten na<strong>Po vrijednostima</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_variables_tag0@@": "<p>Varijabla ili varijable koje će biti interpolirane definicijom dimenzije.</p>",
	"@@Terrain-Flatten_calibrationtype_tag0@@": "<p>Određuje hoće li se izlazni teren izravnati pomoću<strong>Sigma nought</strong>ili<strong>Gamma nought</strong>.</p><ul><li><strong>Gamma nought</strong>--Beta nula povratno raspršenje bit će normalizirano korištenjem jedinične površine ravnine koja je lokalno tangentna na DEM, uobičajeno poznata kao lokalni upadni kut. To je zadano.</li><li><strong>Sigma nought</strong>--Beta nula povratno raspršivanje će se normalizirati pomoću DEM za izračunavanje površine.</li></ul>",
	"@@Terrain-Flatten_dem_tag0@@": "<p>Ulazni DEM.</p><p>DEM se koristi za procjenu lokalnog osvijetljenog područja.</p>",
	"@@Terrain-Flatten_geoid_tag0@@": "<p>Određuje hoće li se vertikalni referentni sustav ulaznog DEM-a transformirati u elipsoidnu visinu. Većina skupova podataka o nadmorskoj visini odnosi se na ortometrijsku visinu razine mora, pa je u tim slučajevima potrebna korekcija za pretvaranje u elipsoidnu visinu.</p><ul><li>Označeno--Izvršit će se korekcija geoida kako bi se ortometrijska visina pretvorila u elipsoidnu visinu (na temelju geoida EGM96). To je zadano.</li><li>Neoznačeno--Neće se izvršiti korekcija geoida. Koristite ovu opciju samo ako je DEM izražen u elipsoidnoj visini.</li></ul>",
	"@@Terrain-Flatten_raster_tag0@@": "<p>Ulazni radarski podaci.</p><p>Ovaj raster se prvo mora radiometrijski kalibrirati na beta nula.</p>",
	"@@Create-Color-Composite_blueexpression_tag0@@": "<p>Izračun je dodijeljen trećem pojasu.</p><p>Naziv pojasa, ID pojasa ili algebarski izraz koji koristi pojaseve.</p><p>Podržani operatori su unarni: plus (+), minus (-), puta (*) i podijeljeno (/).</p>",
	"@@Create-Color-Composite_greenexpression_tag0@@": "<p>Izračun je dodijeljen drugom pojasu.</p><p>Naziv pojasa, ID pojasa ili algebarski izraz koji koristi pojaseve.</p><p>Podržani operatori su unarni: plus (+), minus (-), puta (*) i podijeljeno (/).</p>",
	"@@Create-Color-Composite_inputraster_tag0@@": "<p>Ulazni višepojasni rasterski podaci.</p>",
	"@@Create-Color-Composite_method_tag0@@": "<p>Određuje metodu koja će se koristiti za izdvajanje pojasa.</p><ul><li>Band Names--Koristit će se naziv pojasa koji predstavlja interval valne duljine na elektromagnetskom spektru (kao što je crvena, bliska infracrvena ili toplinska infracrvena) ili polarizacija (kao što su VH, VV, HH ili HV). To je zaddano.</li><li>Band IDs--Koristit će se broj pojasa (kao što je B1, B2 ili B3).</li></ul>",
	"@@Create-Color-Composite_redexpression_tag0@@": "<p>Izračun je dodijeljen prvom pojasu.</p><p>Naziv pojasa, ID pojasa ili algebarski izraz koji koristi pojaseve.</p><p>Podržani operatori su unarni: plus (+), minus (-), puta (*) i podijeljeno (/).</p>",
	"@@Surface-Parameters_localsurfacetype_tag0@@": "<p>Odaberite vrstu površinske funkcije koja će biti postavljena oko ciljne ćelije.</p><ul><li>Quadratic--Kvadratna površinska funkcija bit će prilagođena susjednim ćelijama. To je zadana vrsta.</li><li>Biquadratic--Bikvadratna površinska funkcija bit će prilagođena susjednim ćelijama.</li></ul>",
	"@@Surface-Parameters_neighborhooddistance_tag0@@": "<p>Izlaz će se izračunati na ovoj udaljenosti od središta ciljne ćelije. Određuje veličinu susjedstva. Zadana vrijednost je veličina ćelije ulaznog rastera, što rezultira susjedstvom 3 puta 3.</p>",
	"@@Surface-Parameters_outputslopemeasurement_tag0@@": "<p>Mjerne jedinice (stupnjevi ili postoci) koje će se koristiti za izlazni raster nagiba. Ovaj parametar je aktivan samo kada je <strong>Vrsta parametra</strong> <strong>Nagib</strong>.</p><ul><li>Degree--Kosina nagiba će se izračunati u stupnjevima. To je zadano.</li><li>Percent rise--Inklinacija nagiba izračunat će se kao postotak porasta, koji se također naziva postotak nagiba.</li></ul>",
	"@@Surface-Parameters_parametertype_tag0@@": "<p>Određuje tip parametra izlazne površine koji će se izračunati.</p><ul><li>Slope--Izračunat će se stopa promjene visine. To je zadano.</li><li>Aspect--Izračunat će se smjer pada maksimalne stope promjene za svaku ćeliju.</li><li>Mean Curvature--Mjerit će se ukupna zakrivljenost površine. Izračunava se kao prosjek minimalne i maksimalne zakrivljenosti. Ova zakrivljenost opisuje intrinzičnu konveksnost ili konkavnost površine, neovisno o smjeru ili utjecaju gravitacije.</li><li>Tangential (normal contour) Curvature--Mjerit će se geometrijska normalna zakrivljenost okomita na liniju nagiba, tangenta na konturnu liniju. Ova se zakrivljenost obično primjenjuje za karakterizaciju konvergencije ili divergencije protoka preko površine.</li><li>Profile (normal slope line) Curvature--Mjerit će se geometrijska normalna zakrivljenost duž linije nagiba. Ova se zakrivljenost obično primjenjuje za karakterizaciju ubrzanja i usporavanja protoka niz površinu.</li><li>Plan (projected contour) Curvature--Mjerit će se zakrivljenost duž konturnih linija.</li><li>Contour Geodesic Torsion--Mjerit će se brzina promjene kuta nagiba duž konturnih linija.</li><li>Gaussian Curvature--Mjerit će se ukupna zakrivljenost površine. Izračunava se kao umnožak minimalne i maksimalne zakrivljenosti.</li><li>Casorati Curvature--Mjerit će se opća zakrivljenost površine Može biti nula ili bilo koji drugi pozitivan broj.</li></ul>",
	"@@Surface-Parameters_projectgeodesicazimuths_tag0@@": "<p>Određuje hoće li se geodetski azimuti projicirati da isprave izobličenje kuta uzrokovano izlaznom prostornom referencom. Ovaj parametar je aktivan samo kada je <strong>Vrsta parametra</strong> <strong>Aspekt</strong>.</p><ul><li>Neoznačeno--Projicirat će se geodetski azimuti. To je zadano.</li><li>Označeno--Projicirat će se geodetski azimuti.</li></ul>",
	"@@Surface-Parameters_raster_tag0@@": "<p>Ulazni raster površine. Može biti cijeli broj ili raster plutajuće točke.</p>",
	"@@Surface-Parameters_useadaptiveneighborhood_tag0@@": "<p>Određuje hoće li udaljenost susjedstva varirati s promjenama krajolika (prilagodljivo). Maksimalna udaljenost određena je udaljenošću susjedstva. Minimalna udaljenost je veličina ćelije ulaznog rastera.</p><ul><li>Neoznačeno--Jedna (fiksna) udaljenost susjedstva koristit će se na svim lokacijama. To je zadano.</li><li>Označeno--Prilagodljiva udaljenost susjedstva koristit će se na svim lokacijama.</li></ul>",
	"@@Surface-Parameters_useequatorialaspect_tag0@@": "<p>Određuje hoće li se aspekt mjeriti od točke na ekvatoru ili od sjevernog pola. Ovaj paramtera je aktivan samo kada je <strong>Vrsta parameta</strong> <strong>Aspekt</strong>.</p><ul><li>Neoznačeno--Aspekt će se mjeriti od sjevernog pola. To je zadano.</li><li>Označeno--Aspekt će se mjeriti od točke na ekvatoru.</li></ul>",
	"@@Surface-Parameters_zunit_tag0@@": "<p>Linearna jedinica okomitih z-vrijednosti.</p><p>Definirana je okomitim koordinatnim sustavom ako postoji. Ako vertikalni koordinatni sustav ne postoji, z-jedinicu treba definirati iz popisa jedinica, kako bi se osiguralo ispravno geodetsko izračunavanje.</p><ul><li>Inč--Linearna jedinica bit će inči.</li><li>Stopa--Linearna jedinica bit će stope.</li><li>Jard--Linearna jedinica bit će jardi.</li><li>Američka milja--Linearna jedinica bit će milje.</li><li>Nautička milja--Linearna jedinica bit će nautične milje.</li><li>Millimetar--Linearna jedinica bit će milimetri.</li><li>Centimetar--Linearna jedinica bit će centimetri.</li><li>Metar--Linearna jedinica bit će metri. To je zadano.</li><li>Kilometar--Linearna jedinica bit će kilometri.</li><li>Decimetar--Linearna jedinica bit će decimetri.</li></ul>",
	"@@Surface-Parameters_analysismask_tag0@@": "<p>Raster koji specificira lokacije na kojima će se izvršiti analiza.</p><p>Raster može biti cijeli broj ili vrsta s pomičnim zarezom.</p><p>Sve ćelije s valjanom vrijednošću, uključujući nulu, sačinjavat će masku. Ćelije koje su NoData u ulazu maske bit će NoData u izlazu.</p>",
	"@@Geometric-Median_cellsizetype_tag0@@": "<p>Odaberite koja će se veličina ćelije upotrebljavati u izlaznom rasteru. Ako su sve veličine ulaznih ćelija iste, sve će opcije dati iste rezultate.</p><ul><li>First Of--Upotrebljava prvu veličinu ćelije ulaznih rastera.</li><li>Min Of--Upotrebljava najmanju veličinu ćelije od svih ulaznih rastera.</li><li>Max Of--Upotrebljava najveću veličinu ćelije od svih ulaznih rastera. To je zadano.</li><li>Mean Of--Upotrebljava srednju veličinu ćelije od svih ulaznih rastera.</li><li>Last of--Upotrebljava zadnju veličinu ćelije ulaznih rastera.</li></ul>",
	"@@Geometric-Median_epsilon_tag0@@": "<p>Određuje vrijednost konvergencije između dvije uzastopne iteracije. Kada je epsilon manji ili jednak navedenoj vrijednosti, ponavljanje se zaustavlja i koristi se rezultat posljednjeg ponavljanja.</p>",
	"@@Geometric-Median_extenttype_tag0@@": "<p>Odaberite opseg koji će se koristiti u izlaznom rasteru:</p><ul><li><p>First of--Koristi opseg prvog ulaznog rastera za određivanje opsega obrade.</p></li><li>Intersection of--Koristi opseg preklapajućih piksela za određivanje opsega obrade. To je zadano.</li><li>Union Of--Koristi opseg svih rastera za određivanje opsega obrade.</li><li>Last Of--Koristi opseg zadnjeg ulaznog rastera za određivanje opsega obrade.</li></ul>",
	"@@Geometric-Median_maximumnumberofiterations_tag0@@": "<p>Određuje maksimalan broj ponavljanja koje treba izvršiti. Izračun završava kada se dosegne ova vrijednost, bez obzira na<strong>postavku</strong>Epsilon.</p>",
	"@@Geometric-Median_rasters_tag0@@": "<p>Ulazni višepojasni rasteri.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster1_tag0@@": "<p>Ulazni raster koji predstavlja udaljenost akumuliranog troška od prvog izvora.</p><p>To bi trebao biti izlaz udaljenosti akumuliranog troška iz funkcije<strong>Akumulacija udaljenosti</strong>ili<strong>Dodjela udaljenosti</strong>.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster2_tag0@@": "<p>Ulazni raster koji predstavlja udaljenost akumuliranog troška od drugog izvora.</p><p>To bi trebao biti izlaz udaljenosti akumuliranog troška iz funkcije<strong>Akumulacija udaljenosti</strong>ili<strong>Dodjela udaljenosti</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster1_tag0@@": "<p>Raster ulaznog povratnog smjera iz prvog izvora.</p><p>Ovo je rasterski skup podataka koji identificira smjer sljedeće ćelije uz najjeftiniji put natrag do prvog izvora. Ovo je izlaz iz funkcije<strong>Akumulacija udaljenosti</strong>ili<strong>Dodjela udaljenosti</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster2_tag0@@": "<p>Raster ulaznog povratnog smjera iz drugog izvora.</p><p>Ovo je rasterski skup podataka koji identificira smjer sljedeće ćelije uz najjeftiniji put natrag do prvog izvora. Ovo je izlaz iz funkcije<strong>Akumulacija udaljenosti</strong>ili<strong>Dodjela udaljenosti</strong>.</p>",
	"@@Least-Cost-Corridor_threshold_tag0@@": "<p>Postotak ili prag kumulativnog troška koji će odrediti hoće li određena ćelija biti uključena u raster izlaznog koridora.</p><p>Kada je parametar<strong>Metoda praga</strong>postavljen na<strong>Postotak najmanje cijene</strong>, navedena vrijednost označava postotak povećanja koji se primjenjuje od minimalne vrijednosti zbrojenih rastera udaljenosti troškova. Kada je parametar<strong>Metoda praga</strong>postavljen na<strong>Akumulativni trošak</strong>, vrijednost označava ćelije koje imaju zbroj akumulativnih troškova jednak ili niži od vrijednosti koja će biti uključena u koridor.</p><p>Ovaj je parametar aktivan samo ako je parametar<strong>Metoda praga</strong>postavljen na<strong>Postotak najmanjeg troška</strong>ili<strong>Akumulativni trošak</strong>.</p>",
	"@@Least-Cost-Corridor_thresholdmethod_tag0@@": "<p>Određuje kako će prag biti definiran.</p><p></p><ul><li><strong>No Threshold</strong>--Neće se primijeniti prag, a rezultirajući koridor će pokriti cijeli obuhvat ulaznih rastera. Ovo je zadano.</li><li><strong>Percent of Least Cost</strong>--Prag će se definirati kao postotak minimalne vrijednosti zbrojenih rastera udaljenosti troškova.</li><li><strong>Accumulative Cost</strong>--Prag će biti definiran u kumulativnim jedinicama troška udaljenosti.</li></ul>"
};
const helpTexts_hr = {
	rfxArgsHelpTexts: rfxArgsHelpTexts
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpTexts_hr);


//# sourceMappingURL=help-texts.hr-a6e7746d.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,