"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-11396c"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.bg-5ec84459.js":
/*!**************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.bg-5ec84459.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addRaster: () => (/* binding */ addRaster),
/* harmony export */   addScalar: () => (/* binding */ addScalar),
/* harmony export */   breadcrumb: () => (/* binding */ breadcrumb),
/* harmony export */   breadcrumbEditor: () => (/* binding */ breadcrumbEditor),
/* harmony export */   cancel: () => (/* binding */ cancel),
/* harmony export */   category: () => (/* binding */ category),
/* harmony export */   categoryNames: () => (/* binding */ categoryNames),
/* harmony export */   close: () => (/* binding */ close),
/* harmony export */   copy: () => (/* binding */ copy),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   defaultModelName: () => (/* binding */ defaultModelName),
/* harmony export */   definitionQuery: () => (/* binding */ definitionQuery),
/* harmony export */   description: () => (/* binding */ description),
/* harmony export */   deselectFunction: () => (/* binding */ deselectFunction),
/* harmony export */   details: () => (/* binding */ details),
/* harmony export */   dialogTitle: () => (/* binding */ dialogTitle),
/* harmony export */   dontSave: () => (/* binding */ dontSave),
/* harmony export */   enterFURL: () => (/* binding */ enterFURL),
/* harmony export */   enterURL: () => (/* binding */ enterURL),
/* harmony export */   error: () => (/* binding */ error),
/* harmony export */   errorTitle: () => (/* binding */ errorTitle),
/* harmony export */   everyone: () => (/* binding */ everyone),
/* harmony export */   f32PixelType: () => (/* binding */ f32PixelType),
/* harmony export */   f64PixelType: () => (/* binding */ f64PixelType),
/* harmony export */   failedToLoadLayer: () => (/* binding */ failedToLoadLayer),
/* harmony export */   folder: () => (/* binding */ folder),
/* harmony export */   general: () => (/* binding */ general),
/* harmony export */   groupFieldName: () => (/* binding */ groupFieldName),
/* harmony export */   groupItemsBy: () => (/* binding */ groupItemsBy),
/* harmony export */   groups: () => (/* binding */ groups),
/* harmony export */   invalidRFTMessage: () => (/* binding */ invalidRFTMessage),
/* harmony export */   isDataset: () => (/* binding */ isDataset),
/* harmony export */   isPublic: () => (/* binding */ isPublic),
/* harmony export */   item: () => (/* binding */ item),
/* harmony export */   itemGroup: () => (/* binding */ itemGroup),
/* harmony export */   loadingLayer: () => (/* binding */ loadingLayer),
/* harmony export */   matchVariables: () => (/* binding */ matchVariables),
/* harmony export */   mosaic: () => (/* binding */ mosaic),
/* harmony export */   multidimensionalRules: () => (/* binding */ multidimensionalRules),
/* harmony export */   name: () => (/* binding */ name),
/* harmony export */   noTagErrorMsg: () => (/* binding */ noTagErrorMsg),
/* harmony export */   noTitleErrorMsg: () => (/* binding */ noTitleErrorMsg),
/* harmony export */   noTitleTagErrorMsg: () => (/* binding */ noTitleTagErrorMsg),
/* harmony export */   ok: () => (/* binding */ ok),
/* harmony export */   organization: () => (/* binding */ organization),
/* harmony export */   outputPixelType: () => (/* binding */ outputPixelType),
/* harmony export */   owner: () => (/* binding */ owner),
/* harmony export */   parameter: () => (/* binding */ parameter),
/* harmony export */   parameters: () => (/* binding */ parameters),
/* harmony export */   properties: () => (/* binding */ properties),
/* harmony export */   raster: () => (/* binding */ raster),
/* harmony export */   rasterFunctionEditor: () => (/* binding */ rasterFunctionEditor),
/* harmony export */   rasterFunctions: () => (/* binding */ rasterFunctions),
/* harmony export */   rfxLicenseInfo: () => (/* binding */ rfxLicenseInfo),
/* harmony export */   s16PixelType: () => (/* binding */ s16PixelType),
/* harmony export */   s32PixelType: () => (/* binding */ s32PixelType),
/* harmony export */   s8PixelType: () => (/* binding */ s8PixelType),
/* harmony export */   save: () => (/* binding */ save),
/* harmony export */   saveAs: () => (/* binding */ saveAs),
/* harmony export */   saveUtils: () => (/* binding */ saveUtils),
/* harmony export */   savingMessage: () => (/* binding */ savingMessage),
/* harmony export */   scalar: () => (/* binding */ scalar),
/* harmony export */   search: () => (/* binding */ search),
/* harmony export */   selectFeature: () => (/* binding */ selectFeature),
/* harmony export */   selectFunction: () => (/* binding */ selectFunction),
/* harmony export */   selectRaster: () => (/* binding */ selectRaster),
/* harmony export */   serviceURL: () => (/* binding */ serviceURL),
/* harmony export */   setGroupSharing: () => (/* binding */ setGroupSharing),
/* harmony export */   setSharingLevel: () => (/* binding */ setSharingLevel),
/* harmony export */   share: () => (/* binding */ share),
/* harmony export */   shareWith: () => (/* binding */ shareWith),
/* harmony export */   success: () => (/* binding */ success),
/* harmony export */   tagFieldName: () => (/* binding */ tagFieldName),
/* harmony export */   tags: () => (/* binding */ tags),
/* harmony export */   title: () => (/* binding */ title),
/* harmony export */   toolDetailsEditor: () => (/* binding */ toolDetailsEditor),
/* harmony export */   toolEditor: () => (/* binding */ toolEditor),
/* harmony export */   toolModeler: () => (/* binding */ toolModeler),
/* harmony export */   tryAgain: () => (/* binding */ tryAgain),
/* harmony export */   type: () => (/* binding */ type),
/* harmony export */   u16PixelType: () => (/* binding */ u16PixelType),
/* harmony export */   u32PixelType: () => (/* binding */ u32PixelType),
/* harmony export */   u8PixelType: () => (/* binding */ u8PixelType),
/* harmony export */   unionDimensions: () => (/* binding */ unionDimensions),
/* harmony export */   unknownPixelType: () => (/* binding */ unknownPixelType),
/* harmony export */   unsavedTitle: () => (/* binding */ unsavedTitle),
/* harmony export */   unsavedWarningExisting: () => (/* binding */ unsavedWarningExisting),
/* harmony export */   unsavedWarningNew: () => (/* binding */ unsavedWarningNew),
/* harmony export */   userStartDirection: () => (/* binding */ userStartDirection),
/* harmony export */   variables: () => (/* binding */ variables),
/* harmony export */   viewerModeMessage: () => (/* binding */ viewerModeMessage),
/* harmony export */   viewerModeTitle: () => (/* binding */ viewerModeTitle),
/* harmony export */   warning: () => (/* binding */ warning)
/* harmony export */ });
const ok = "Ок";
const cancel = "Отказ";
const enterURL = "Въведете URL адрес на услугата за изображения";
const serviceURL = "URL адрес на услуга";
const selectRaster = "Изберете растер";
const failedToLoadLayer = "Неуспешно зареждане на слой";
const loadingLayer = "Слоят се зарежда";
const selectFeature = "Изберете обектен слой";
const enterFURL = "Въведете URL адрес на услугата с обекти";
const addRaster = "Добавете растерна променлива";
const addScalar = "Добавете константа";
const raster = "Растер";
const scalar = "Скаларна стойност";
const defaultModelName = "Шаблон на растерна функция";
const general = "Общ";
const parameters = "Параметри";
const variables = "Променливи";
const name = "Име";
const description = "Описание";
const parameter = "Параметър";
const isPublic = "е публично";
const isDataset = "е набор от данни";
const unknownPixelType = "Непознато";
const outputPixelType = "Тип изходен пиксел";
const u8PixelType = "8 бита без подпис";
const s8PixelType = "8 бита подписани";
const u16PixelType = "16 бита неподписани";
const s16PixelType = "16 бита подписани";
const u32PixelType = "32 бита неподписани";
const s32PixelType = "32 бита подписани";
const f32PixelType = "32 бита плаващи";
const f64PixelType = "64 бита двойни";
const properties = "Свойства";
const multidimensionalRules = "Многоизмерни правила";
const matchVariables = "Съвпадение на променливите";
const unionDimensions = "Обединяване на размери";
const rasterFunctionEditor = {
	invalidRFTMessage: "Шаблонът за растерна функция не е валиден.",
	rfxArgsEditor: {
		outputRaster: "OutputRaster",
		raster: "Растер",
		unsupportedDataTypeWarning: "Следните аргументи не се показват, тъй като в момента не се поддържат.",
		unsupportedFunction: "Съдържа неподдържани в момента растерни функции."
	},
	rfxRasterInput: {
		selectLayer: "Изберете слой",
		browseLayers: "Търсене на слоеве",
		rfxVariable: "Променлива RasterFunction"
	},
	rfxBandCombinationEditor: {
		methodLabel: "Метод",
		bandLabel: "Честотна лента",
		combinationLabel: "Комбинация"
	},
	rfxRemapGrid: {
		minimum: "Минимални",
		maximum: "Максимални",
		output: "Изход",
		noData: "NoData",
		remapValuesLabel: "Стойности за повторно картографиране"
	},
	rfxNamedRasterEditor: {
		rasterVariables: "Растерни променливи",
		deleteSelectedVars: "Премахване на избраните променливи"
	},
	rfxClippingGeometry: {
		clippingLayer: "Изрязващ слой",
		clippingRaster: "Изрязващ растер",
		clippingGeometry: "Изрязваща Геометрия",
		customExtent: "Персонализиран обхват",
		outputExtent: "Изходен обхват",
		currentExtent: "Текущ обхват на картата",
		drawLabel: "Изчертаване"
	},
	rfxCustomExtent: {
		top: "Горен",
		right: "Дясно",
		bottom: "Най-долу",
		left: "Ляво"
	},
	rfxRasterArrayEditor: {
		moveUp: "Нагоре",
		moveDown: "Надолу",
		remove: "Изтриване"
	},
	rfxStatisticsGrid: {
		stdDev: "Станд. Откл.",
		min: "Мин.",
		max: "Макс.",
		mean: "Осреднена стойност"
	},
	rfxWeightedSumTableEditor: {
		weightedSumTable: "Таблица с претеглени суми",
		id: "ИД",
		layer: "Слой",
		field: "Поле",
		weight: "Тегло",
		value: "Стойност",
		selectLayer: "Изберете слой"
	},
	rfxWeightedOverlayTableEditor: {
		weightedOverlayTable: "Таблица на претеглено наслагване",
		id: "ИД",
		layer: "Слой",
		field: "Поле",
		influence: "Влияние",
		sumOfInfluence: "Сума на влияние",
		value: "Стойност",
		remapTable: "Пренастройте таблица",
		scale: "Мащаб",
		scales: "Мащаби",
		selectRaster: "Изберете растер"
	},
	rfxFeatureSelect: {
		addFeatureLayer: "Търсене за обектен слой",
		addPointLayer: "Търсене за точков слой"
	},
	rfxFieldSelect: {
		value: "Стойност",
		count: "Брой"
	},
	rfxAttributeTable: {
		tableType: "Тип таблица",
		manual: "Ръчно",
		external: "Външна",
		minVal: "Минимална стойност",
		maxVal: "Максимална стойност",
		baseClassName: "Базово име на клас",
		colorScheme: "Цветова схема",
		defaultClassName: "Надпис_",
		generateTable: "Генериране на таблица",
		browseTable: "Преглед на таблица",
		value: "Стойност",
		classname: "Име на клас",
		color: "Цвят"
	},
	rfxFieldNumberSwitchable: {
		number: "Цифрови данни",
		field: "Поле",
		string: "Текстово",
		linearUnit: "Линейна единица"
	},
	rfxPropertySet: {
		name: "Име",
		value: "Стойност"
	},
	rfxConversionGrid: {
		size: "Размер"
	},
	rfxTransposeBit: {
		bitPattern: "Битов модел",
		outputBit: "Изходен бит",
		inputBit: "Входен бит"
	},
	rfxSpatialReference: {
		placeHolder: "Прецизирайте по ключова дума",
		coordinateSystem: "Координатна система",
		gcs: "Географска координатна система",
		pcs: "Проекционна координатна система",
		vcs: "Вертикална координатна система"
	}
};
const rfxLicenseInfo = "Този шаблон за растерна функция може да се използва за обработка на Вашите изображения с помощта на ArcGIS Image Server.";
const rasterFunctions = {
	rfx: {
		aCosHName: "ACosH",
		aCosHSnip: "Изчислява обратния хиперболичен косинус на клетките в растер.",
		aCosHDesc: "Функцията изчислява обратния хиперболичен косинус на пикселите в растер.",
		aCosName: "ACos",
		aCosSnip: "Изчислява обратния косинус на пикселите в растер.",
		aCosDesc: "Тази растерна функция изчислява обратния косинус на клетките в даден растер. В математиката, всички тригонометрични функции имат определен диапазон от допустими входни стойности, наречен домейн. Изходните стойности на всяка функция също имат определен диапазон. За този инструмент, домейнът е е [-1, 1], а диапазонът е [0, пи].",
		aSinHName: "ASinH",
		aSinHSnip: "Изчислява обратния хиперболичен синус на клетките в растер.",
		aSinHDesc: "Функцията изчислява обратния хиперболичен синус на пикселите в растер.",
		aSinName: "ASin",
		aSinSnip: "Изчислява обратния синус на клетките в растер.",
		aSinDesc: "Функцията изчислява обратния синус на пикселите в растер.",
		aTan2Name: "ATan2",
		aTan2Snip: "Изчислява обратния тангенс (въз основа на x,y) на клетките в растер.",
		aTan2Desc: "Функцията изчислява обратния тангенс (въз основа на x,y) на пикселите в растер.",
		aTanHName: "ATanH",
		aTanHSnip: "Изчислява обратния хиперболичен тангенс на клетките в растер.",
		aTanHDesc: "Функцията изчислява обратния хиперболичен тангенс на пикселите в растер.",
		aTanName: "ATan",
		aTanSnip: "Изчислява обратния тангенс на клетките в растер.",
		aTanDesc: "Функцията изчислява обратния тангенс на пикселите в растер.",
		absName: "Abs",
		absSnip: "Изчислява абсолютната стойност на клетките в даден растер.",
		absDesc: "Функцията Abs изчислява абсолютната стойност на пикселите в даден растер.",
		reflectanceName: "Видима отражателна способност",
		reflectanceSnip: "Преобразува необработените изображения в стойности за върха на атмосферата, като взема предвид характеристиките на сензора, позицията на слънцето и времето на придобиване.",
		reflectanceDesc: "Тази функция регулира стойностите на цифровия номер (DN) на яркостта на изображението за някои сателитни сензори. Корекциите се основават на височината на слънцето, датата на придобиване и свойствата на сензора, за да се зададе усилването и отклонението за всяка честотна лента. Тази функция се използва за регулиране на стойностите на отражателната способност или яркостта на някои сателитни изображения въз основа на осветеността на сцената и настройките на усилването на сензора. Изображенията се настройват към теоретично общи условия на осветеност, така че би трябвало да има по-малко разлики между сцените от различни дати и различни сензори. Това може да бъде полезно за класифициране на изображения, балансиране на цветовете и мозайка. Тази функция може да се използва само със специфични изображения. Приложимите сензори са Landsat MSS, Landsat TM, Landsat ETM+, Landsat 8, IKONOS, QuickBird, GeoEye-1, RapidEye, DMCii, WorldView-1, WorldView-2, SPOT 6, както и Pleiades.<div><br/>Функцията извършва две корекции. Първата се основава на настройките на усилването. Първоначалните стойности на яркостта се пресъздават от стойностите на изображението чрез обръщане на уравненията за усилване. Втората корекция е свързана с разликите в ъгъла и яркостта на слънцето. Първоначалните стойности на яркостта се привеждат в общо състояние на осветлението чрез нормализиране на сцени, заснети при променливи условия на осветеност. Като цяло, докато типът на данните за изходното изображение е същият като типа на данните за входното изображение, изходните стойности са по-ниски от входните и са изрязани до валидния диапазон от данни.</div>",
		argStatisticsName: "ArgStatistics",
		argStatisticsSnip: "Изчислява статистически данни за аргументите, включително максимална стойност на аргумент, минимална стойност на аргумент, медиана на аргумент и продължителност.",
		argStatisticsDesc: "Функцията изчислява статистиката за аргумента. Във функцията ArgStatistics има четири метода: ArgMax, ArgMin, ArgMedian и Duration.",
		arithmeticName: "Аритметично",
		arithmeticSnip: "Извършва аритметична операция между два растера или растер и скалар.",
		arithmeticDesc: "Аритметичната функция извършва аритметична операция между два растера или растер и скалар и обратно.",
		aspectSlopeName: "Aspect-Slope",
		aspectSlopeSnip: "Създава растер, който едновременно показва аспекта (посоката) и наклона (стръмнината) на непрекъсната повърхност, както е представена в цифров височинен модел.",
		aspectSlopeDesc: "Функцията Aspect Slope създава растерен слой, който едновременно показва аспекта и наклона на дадена повърхност. Аспектът определя посоката на намаляване на максималния темп на промяна на стойността от всеки пиксел към неговите съседи. Аспектът може да се разглежда като посока на наклона. Стойностите на изходното растерно изображение ще представляват посоката на компаса на аспекта, представена чрез цветов тон (цвят). Наклонът представлява скоростта на промяна на котата за всеки пиксел от цифровия височинен модел (DEM). Наклонът представлява стръмността на повърхността и е символизиран в три класа, които са показани с помощта на насищане на цвета (яркост).<div><br/>Стойностите на пикселите в изходния растер аспект-наклон отразяват комбинация от аспект и наклон. Пикселите със стойности под 20 се считат за плоски и са показани в сиво. Стойностите на аспект-наклона на 21 и по-горе ще бъдат показани с различни наситености, както следва: от 21 до 30 —Сатурация на лек наклон, от 31 до 40—Сатурация на среден наклон, от 41 и нагоре—Сатурация на висок наклон</div>",
		aspectName: "Аспект",
		aspectSnip: "Показва посоката, в която е обърнат даден пиксел, където 0 е север, а ъглите се увеличават по посока на часовниковата стрелка",
		aspectDesc: "Функцията Aspect определя посоката на намаляване на максималния темп на промяна на стойността от всяка клетка към нейните съседи. Аспектът може да се разглежда като посока на наклона. Стойностите на изходния растер ще бъдат посоката на компаса на аспекта.<div><br/>Входът за тази функция е входен растер. Функцията Аспект често се прилага към цифров височинен модел (DEM). По подразбиране, аспектът се появява като изображение в сива скала. Можете да добавите функцията Цветна карта, за да зададете конкретна цветова схема или да позволите на човека, който гледа мозайката, да промени символиката със собствената си цветова схема.</div>",
		tableName: "Атрибутивна таблица",
		tableSnip: "Използва таблица за именуване и символизиране на стойностите в набор от данни. Колоните на таблицата са разделени със запетая: PixelValue, AttributeName, RedValue, GreenValue, BlueValue.",
		tableDesc: "Функцията за Атрибутивна таблица Ви позволява да дефинирате атрибутивна таблица за символизиране на набор от мозаечни или растерни данни с единична честотна лента. <div><br/>Това е полезно, когато искате да представите изображения, които са претърпели класификация по отношение на използването на земята, като например горска земя, влажни зони, обработваема земя и градска среда. Освен това, ако вашата таблица съдържа полета с имена червено, зелено и синьо, стойностите в тези полета ще се използват като цветна карта при рендериране на изображението.</div>",
		bandArithmeticName: "Аритметика на честотна лента",
		bandArithmeticSnip: "Изчислява индексите, като използва предварително зададени формули или израз, зададен от потребителя.",
		bandArithmeticDesc: "Аритметичната функция за честотна лента извършва аритметична операция върху честотните ленти на набор от растерни данни. Можете да изберете предварително зададени алгоритми или да въведете своя собствена едноредова формула. Поддържаните оператори са „-“, „+“, „/“, „*“ и унарна операция с „-“.",
		thresholdName: "Бинарно ограничаване",
		thresholdSnip: "Организира непрекъснати данни на преден и заден план, като минимизира ковариацията между двата класа.",
		thresholdDesc: "Когато даден набор от растерни данни има бимодално разпределение, тази функция създава нов растер, който разделя данните на два различни класа. Създава клас с ниска стойност, изобразен с черни пиксели, и клас с висока стойност, изобразен с бели пиксели.",
		bitwiseAndName: "Bitwise And",
		bitwiseAndSnip: "Извършва операция Bitwise And върху двоичните стойности на две входни растерни изображения.",
		bitwiseAndDesc: "Bitwise And извършва операция Bitwise And върху двоичните стойности на две входни растерни изображения.",
		bitwiseLeftShiftName: "Bitwise Left Shift",
		bitwiseLeftShiftSnip: "Извършва операция Bitwise Left Shift върху двоичните стойности на две входни растерни изображения.",
		bitwiseLeftShiftDesc: "Bitwise Left Shift извършва операция Bitwise Left Shift върху двоичните стойности на две входни растерни изображения.",
		bitwiseNotName: "Bitwise Not",
		bitwiseNotSnip: "Извършва операция Bitwise Not (допълване) върху двоичната стойност на входното растерно изображение.",
		bitwiseNotDesc: "Функцията извършва операция Bitwise Not (допълване) върху двоичната стойност на входното растерно изображение.",
		bitwiseOrName: "Bitwise Or",
		bitwiseOrSnip: "Извършва операция Bitwise Or върху двоичните стойности на две входни растерни изображения.",
		bitwiseOrDesc: "Функцията извършва операция Bitwise Or върху двоичните стойности на две входни растерни изображения. ",
		bitwiseRightShiftName: "Bitwise Right Shift",
		bitwiseRightShiftSnip: "Извършва операция Bitwise Right Shift върху двоичните стойности на две входни растерни изображения.",
		bitwiseRightShiftDesc: "Функцията извършва операция Bitwise Right Shift върху двоичните стойности на две входни растерни изображения.",
		bitwiseXorName: "Bitwise Xor",
		bitwiseXorSnip: "Извършва операция Bitwise eXclusive Ir върху двоичните стойности на две входни растерни изображения.",
		bitwiseXorDesc: "Функцията извършва операция Bitwise eXclusive Ir върху двоичните стойности на две входни растерни изображения.",
		booleanAndName: "Boolean And",
		booleanAndSnip: "Извършва операция Boolean And върху стойностите на клетките на две входни растерни изображения. Ако и двете входни стойности са true (ненулеви), изходната стойност е 1. Ако едната или двете входни стойности са false (нула), изходната стойност е 0.",
		booleanAndDesc: "Функцията изпълнява операция Boolean And върху стойностите на пикселите на два набора от входни данни. Ако и двете входни стойности са true (ненулеви), изходната стойност е 1. Ако една или и двете входни стойности са false (нула), изходната стойност е 0. ",
		booleanNotName: "Boolean Not",
		booleanNotSnip: "Извършва операцията Boolean Not (допълване) върху стойностите на клетките от входното растерно изображение. Ако входните стойности са true (ненулеви), изходната стойност е 0. Ако входните стойности са false (нулеви), изходната стойност е 1.",
		booleanNotDesc: "Функцията извършва операцията Boolean Not (допълване) върху стойностите на пикселите от входното растерно изображение. Ако входните стойности са true (ненулеви), изходната стойност е 0. Ако входните стойности са false (нулеви), изходната стойност е 1.",
		booleanOrName: "Boolean Or",
		booleanOrSnip: "Извършва операция Boolean Or върху стойностите на клетките на две входни растерни изображения. Ако едната или и двете входни стойности са true (ненулеви), изходната стойност е 1. Ако и двете входни стойности са false (нулеви), изходната стойност е 0.",
		booleanOrDesc: "Функцията изпълнява операцията Boolean Or върху стойностите на клетките на две входни растерни изображения. Ако едната или и двете входни стойности са true (ненулеви), изходната стойност е 1. Ако и двете входни стойности са false (нулеви), изходната стойност е 0.",
		booleanXorName: "Boolean Xor",
		booleanXorSnip: "Изпълнява операцията Boolean eXclusive Or върху стойностите на клетките на две входни растерни изображения. Ако едната входна стойност е true (ненулева), а другата е false (нулева), изходната стойност е 1. Ако и двете входни стойности са true (ненулеви) или и двете входни стойности са false (нулеви), изходната стойност е 0.",
		booleanXorDesc: "Функцията изпълнява операцията Boolean eXclusive Or върху стойностите на клетките на две входни растерни изображения. Ако едната входна стойност е true (ненулева), а другата е false (нулева), изходната стойност е 1. Ако и двете входни стойности са true (ненулеви) или и двете входни стойности са false (нулеви), изходната стойност е 0.",
		bufferedRasterName: "Буферна функция",
		bufferedRasterSnip: "Буферира последните достъпни пикселни блокове.",
		bufferedRasterDesc: "Буферната функция се използва за оптимизиране на работата на сложни функционални вериги. Тя съхранява в паметта изходната стойност на частта от функционалната верига, която се намира преди нея. <div><br/>Вмъкнете тази функция в Редактора на функции, където искате да запазите изхода.</div>",
		rasterCalculatorName: "Калкулатор",
		rasterCalculatorSnip: "Изчислява растер от математически израз, базиран на растер.",
		rasterCalculatorDesc: "Функцията Калкулатор Ви позволява да създавате и изпълнявате изрази и да ги включвате във функционални вериги.",
		cellStatisticsName: "Статистика на клетките",
		cellStatisticsSnip: "Изчислява статистически данни за всяка клетка от няколко растера. Наличните статистически данни са Мнозинство, Максимум, Осреднена стойност, Медиана, Минимум, Малцинство, Процентил, Диапазон, Стандартно отклонение, Сума и Разнообразие.",
		cellStatisticsDesc: "Тази функция изчислява статистически данни от множество растерни изображения на база пиксел по пиксел. Наличните статистически данни са мнозинство, максимум, осреднена стойност, медиана, минимум, малцинство, диапазон, стандартно отклонение, сума и разнообразие.",
		classifyName: "Класифициране",
		classifySnip: "Причислява всеки пиксел към клас. Включете допълнителни данни, като например сегментирано изображение.",
		classifyDesc: "Тази растерна функция класифицира набор от растерни данни въз основа на файл Esri Classifier Definition (.ecd) и входни данни за набор от растерни данни. Файлът .ecd, използван във функцията Класифициране, съдържа цялата информация за конкретен набор от данни и класификатор и се генерира от инструментите за обучение за класификация, като например инструментите Train Support Vector Machine(Обучение за поддръжка на векторна машина или Train Random Trees(Обучение за случайни дървета).",
		clipName: "Изрязване",
		clipSnip: "Задава обхват на растер с помощта на координати или друг набор от данни.",
		clipDesc: "Тази функция изрязва растер с помощта на правоъгълна форма в съответствие с дефинираните обхвати или изрязва растер до формата на въведен полигонов клас обекти. Формата, определяща изрязването, може да изрязва обхват на растера или да изрязва област в рамките на растера.",
		colorspaceConversionName: "Конверсия на цветен модел",
		colorspaceConversionSnip: "Конвертира растер от RGB в HSV и обратно.",
		colorspaceConversionDesc: "Функцията за Преобразуване на цветен модел преобразува цветния модел на изображение от цветовото пространство на нюанс, сатурация и стойност (HSV) в червено, зелено и синьо (RGB) или обратно.<div><br/>Тази функция може да се използва в набор от данни в мозайка.</div>",
		colormapToRGBName: "Цветна карта към RGB",
		colormapToRGBSnip: "Преобразува растерно изображение с единична честотна лента с цветна карта в растерно изображение с три честотни ленти (червено, зелено и синьо).",
		colormapToRGBDesc: "Тази функция преобразува еднолентов растер с цветна карта в трилентов (червен, зелен и син) растер.<div><br/>Тази функция е полезна, когато трябва да създадете трилентов растер от еднолентов растер със свързана цветна карта. Стойностите в цветната карта ще бъдат използвани за създаване на всяка червена, зелена и синя честотна лента. Тази функция може да се използва в мозаечен набор от данни.</div>",
		colormapName: "Цвят на карта",
		colormapSnip: "Променя стойностите на пикселите, за да покаже растерните данни като сива скала или червено, зелено, синьо (RGB) изображение въз основа на цветна карта или гама от цветове.",
		colormapDesc: "Функцията за цветове на картата е тип растерни данни при генериране на цифрово изображение. Тя трансформира стойностите на пикселите, за да покаже растерните данни като сива скала или RGB цветно изображение въз основа на цветова схема или специфични цветове във файл с цветна карта. Можете да използвате цветна карта за представяне на анализирани данни, като например класифицирано изображение или при показване на топографска карта (или индексно цветно сканирано изображение).<div><br/>Цветните карти съдържат набор от стойности, които са свързани с цветове, използвани за показване на еднолентов растер последователно със същите цветове. Всяка стойност на пиксела се свързва с цвят, определен като набор от RGB стойности. Цветните карти могат да поддържат всякаква дълбочина на бит с изключение на тази с плаваща точка. Те поддържат също положителни и отрицателни стойности и могат да съдържат липсващи стойности, картографирани с цвят. При показване на набор от данни с цветна карта, съдържаща липсващи стойности, пикселите с тези липсващи стойности няма да се показват.</div>",
		complexName: "Сложен тип",
		complexSnip: "Извлича величината от числата от сложен тип.",
		complexDesc: "Тази функция изчислява величината от комплексни стойности.<div><br/>Тази функция обикновено се използва при изображения от радар, които имат сложен тип данни. Може да се използва в мозаечен набор от данни.</div>",
		compositeBandName: "Комбиниране на честотни ленти",
		compositeBandSnip: "Комбинира множество набори от данни в многолентово растерно изображение.",
		compositeBandDesc: "Функцията Комбиниране на честотни ленти Ви позволява да комбинирате растерни изображения, за да образувате многолентово изображение.",
		conName: "Условна функция(Con)",
		conSnip: "Изпълнява условни операции If, Then, Else. Когато се използва условен оператор, обикновено трябва да има две или повече верижно свързани функции, като едната функция посочва критериите, а втората функция е условният оператор, който използва критериите и диктува какви трябва да бъдат резултатите true и false.",
		conDesc: "Функцията Con(Условна функция) задава пикселите на изходния растер въз основа на if \\ else оценка на всеки входен пиксел. Връща стойностите на пикселите от верен растер, ако условната оценка е true (1), или връща стойностите на пикселите от грешен растер, ако условната оценка е false (0). Този критерий се определя от изходните данни на логическа математическа функция, която ще бъде входно растерно изображение.",
		constantName: "Константност",
		constantSnip: "Създава виртуален растер с единична стойност на пиксела.",
		constantDesc: "Тази функция създава виртуален растер с единична стойност на пиксела, който може да се използва в шаблони на растерни функции и за обработка на мозаечен набор от данни.<div><br/>Постоянната стойност се използва за всяка пикселна стойност в растера.</div>",
		contourName: "Контур",
		contourSnip: "Създава контурни линии.",
		contourDesc: "Функцията Контур генерира контурни линии чрез свързване на точки с еднаква височина от растерен набот от данни за височина. Контурите са изолинии, създадени като растери за визуализация. Следните ключови обекти правят тази функция много силна: контурите се генерират бързо и динамично за много големи набори от данни, като например за Височина над хоризонта; контурите могат да се изглаждат, за да се осигури по-привлекателен за картографията външен вид, като същевременно се запазва точността на контурите; осигурен е динамичен контрол на контурния интервал; изходните опции включват контурни линии, контурни индекси и запълнени контури.<div><br/>Създаването на контурен слой като растерен продукт е ценно за широк диапазон от приложения, тъй като контурите могат да се наслагват върху карта и да предоставят информация относно терена, без да затъмняват основните данни. Те са полезни в приложения като инженерство, селско стопанство и управление на водите.</div>",
		contrastBrightnessName: "Контраст и яркост",
		contrastBrightnessSnip: "Регулира контраста и яркостта на растер.",
		contrastBrightnessDesc: "Функцията Контраст и яркост подобрява външния вид на растерните данни чрез промяна на яркостта и контраста в изображението. Яркостта увеличава общата осветеност на изображението—например, като прави тъмните цветове по-светли, а светлите - по-бели—докато контрастът регулира разликата между най-тъмните и най-светлите цветове.<div><br/>Използването на тази функция променя стойностите на пикселите; следователно тази функция трябва да се използва, когато искате да подобрите външния вид на данните, а не ако възнамерявате да използвате данните като част от анализ, който изисква необработени стойности на пикселите. Тази функция е полезна при публикуване на данните като услуга за изображения, която може да се използва в приложения без възможност за промяна на контраста и яркостта на изображенията или за да се гарантира, че те се показват с предпочитаните от вас настройки.</div>",
		convolutionName: "Конволюция",
		convolutionSnip: "Прилага филтър за изостряне, размазване, откриване на ръбове, изглаждане или градиент върху растер.",
		convolutionDesc: "Функцията за Конволюция извършва филтриране на стойностите на пикселите в изображението, което може да се използва за увеличаване на резолюцията на изображението, размазване на изображението, откриване на ръбове в изображението или други подобрения, базирани на ядро. Филтрите се използват за подобряване на качеството на растерното изображение чрез премахване на ненужни данни или подобряване на обектите в данните. Тези конволюционни филтри се прилагат върху движещо се, припокриващо се ядро (прозорец или квартал), например 3 по 3. Конволюционните филтри работят, като изчисляват стойността на пиксела въз основа на теглото на неговите съседи.",
		corridorName: "Коридор",
		corridorSnip: "Изчислява сумата на акумулираните разходи за две входни акумулативни растерни изображения.",
		corridorDesc: "Функцията Коридор изчислява сумата на акумулираните разходи за две входни растерни изображения с акумулирани разходи. Въпреки че за входни данни могат да се използват произволни два растера, за да се получи значим резултат, те трябва да бъдат непроменени изходни растерни изображения с акумулирани разходи. Редът на двата набора от входни данни е без значение.",
		cosHName: "CosH",
		cosHSnip: "Изчислява хиперболичния косинус на клетките в растер.",
		cosHDesc: "Функцията изчислява хиперболичния косинус на пикселите в растер.",
		cosName: "Cos",
		cosSnip: "Изчислява косинуса на клетките в растер.",
		cosDesc: "Функцията изчислява косинуса на пикселите в растер.",
		costAllocationName: "Разпределяне на разходите",
		costAllocationSnip: "Изчислява за всяка клетка нейния източник с най-ниски разходи на базата на най-малко натрупващи се разходи върху повърхност на разходите.",
		costAllocationDesc: "Функцията за разпределение на разходите изчислява за всяка клетка нейния източник с най-малки разходи въз основа на най-малките акумулирани разходи по повърхността на разходите.",
		costBackLinkName: "Обратна връзка на разходите",
		costBackLinkSnip: "Определя съседната клетка, която е следващата клетка по пътя с най-малки акумулирани разходи до източника с най-малки разходи.",
		costBackLinkDesc: "Функцията Обратна връзка на разходите определя съседа, който е следващата клетка по пътя с най-нисък натрупващ се разход към източника с най-нисък разход.<div><br/>Растерът на обратната връзка съдържа стойности от нула до осем, които определят посоката или идентифицират следващата съседна клетка (следваща клетка) по пътя с най-малки натрупващи се разходи от дадена клетка до нейния източник с най-малки разходи. Ако пътят трябва да премине в десния съсед, на клетката ще бъде присвоена стойност 1, 2 за долната дясна диагонална клетка и продължава по посока на часовниковата стрелка. Стойността 0 е запазена за клетките на източника.</div>",
		costDistanceName: "Разстояние на разходите",
		costDistanceSnip: "Изчислява разстоянието на най-малките акумулирани разходи за всяка клетка от или до източника на най-малки разходи по повърхността на разходите.",
		costDistanceDesc: "Функцията за Разстояние на разходите изчислява разстоянието на най-малките акумулирани разходи за всяка клетка от или до източника с най-малки разходи по повърхността на разходите.",
		costPathName: "Път на разходите",
		costPathSnip: "Изчислява пътя с най-малки разходи от източник до дестинация.",
		costPathDesc: "Глобалната функция Път на разходите изчислява пътя с най-ниски разходи от източник до дестинация.<div><br/>Тази функция създава изходно растерно изображение, в което се записва пътеката или пътеките с най-малки разходи от избраните места до най-близката клетка на източника, определена в рамките на повърхността на акумулираните разходи, по отношение на разстоянието на разходите.</div>",
		curvatureName: "Кривина",
		curvatureSnip: "Изчислява кривината на растерна повърхност, като по желание включва кривината на профила и плана.",
		curvatureDesc: "Функцията Кривина показва формата или кривината на наклона. Част от повърхнина може да бъде вдлъбната или изпъкнала; това може да се определи, като се погледне стойността на кривината. Кривината се изчислява чрез изчисляване на втората производна на повърхността.<div><br/>Изходните данни от функцията Кривина може да се използват за описване на физическите характеристики на водосборния басейн, за да се разберат процесите на ерозия и оттичане. Стойността на кривината може да се използва за определяне на моделите на ерозия на почвата, както и на разпределението на водата в земята. Кривината на профила влияе върху ускоряването и забавянето на потока и следователно оказва влияние върху ерозията и отлагането. Кривината на планформата влияе на събирането и разклоняването на потока.</div>",
		divideName: "Разделяне",
		divideSnip: "Разделя стойностите на два растера клетка по клетка.",
		divideDesc: "Функцията Разделяне разделя стойностите на два растера пиксел по пиксел.",
		elevationVoidFillName: "Попълване на празнота на кота",
		elevationVoidFillSnip: "Създава пиксели в местата, където има дупки в данните за височина.",
		elevationVoidFillDesc: "Функцията за запълване на височина се използва за създаване на пиксели, където има дупки във вашата височина.<div><br/>Празни пространства се появяват, когато няма точки, събрани в рамките на областта, представена от даден пиксел в получения растер. Празнотите често се дължат на водни обекти, избор на тип клас или изключване. Запълването на празнини се използва най-често при генериране на земна повърхност.</div>",
		equalToName: "Равенство",
		equalToSnip: "Извършва операцията „Релационно равенство“ на два набора от входни данни на базата клетка по клетка. Връща 1 за клетките, при които първият растер е равен на втория растер, и 0 за клетките, при които няма това равенство.",
		equalToDesc: "Функцията извършва операция за равенство между два растера на база пиксел по пиксел. Връща стойност 1 за пиксели, при които първият растер е равен на втория растер, и стойност 0 за пиксели, при които те не са равни.",
		eucAllocationName: "Евклидово разпределение",
		eucAllocationSnip: "Изчислява за всяка клетка най-близкия източник въз основа на евклидовото разстояние.",
		eucAllocationDesc: "Функцията „Евклидово разпределение“ изчислява за всяка клетка най-близкия източник въз основа на евклидовото разстояние.",
		eucDirectionName: "Евклидова посока",
		eucDirectionSnip: "Изчислява за всяка клетка посоката в градуси до най-близкия източник.",
		eucDirectionDesc: "Функцията „Евклидова посока“ изчислява за всяка клетка посоката в градуси до най-близкия източник. <div><br/>Посоката се изчислява от центъра на всяка клетка до центъра на клетката източник, която е най-близо до нея. Обхватът на стойностите е от 0 градуса до 360 градуса, като 0 е запазена за клетките източници. Изтокът (дясно) е 90, а стойностите се увеличават по посока на часовниковата стрелка (180 е юг, 270 е запад, а 360 е север).</div>",
		eucDistanceName: "Евклидово разстояние",
		eucDistanceSnip: "Изчислява за всяка клетка евклидовото разстояние до най-близкия източник.",
		eucDistanceDesc: "Функцията Евклидово разстояние изчислява за всяка клетка евклидовото разстояние до най-близкия източник.",
		exp10Name: "Експотенциал 10",
		exp10Snip: "Изчислява експоненциала на база 10 на клетките в растер.",
		exp10Desc: "Функцията Експотенциал 10 изчислява експоненциала на база 10 на пикселите в растер.",
		exp2Name: "Експоненциал 2",
		exp2Snip: "Изчислява експоненциала на база 2 на клетките в растер.",
		exp2Desc: "Тази функция изчислява експоненциала с основа 2 на пикселите в растер.",
		expName: "Експоненциал",
		expSnip: "Изчислява базовия експоненциал „e“ на клетките в растер.",
		expDesc: "Тази функция изчислява базовия експоненциал „e“ на пикселите в растер.",
		extractBandName: "Извличане на честотни ленти",
		extractBandSnip: "Посочва с кои честотни ленти да се работи при използване на многолентови набори от данни.",
		extractBandDesc: " Функцията Извличане на ленти ви позволява да извличате една или повече ленти от или да пренареждате лентите в многолентови растерни данни.<div><br/>Можете да използвате функцията Извличане на ленти преди други функции, като например Аритметика, за да контролирате кои честотни ленти се използват като входни данни в следващата функция.</div>",
		fillName: "Запълване",
		fillSnip: "Запълва вдлъбнатини в растер на повърхността, за да отстрани малки несъвършенства в данните.",
		fillDesc: "Функцията за глобално Запълване открива и запълва вдлъбнатини и изпъкналости в растер на височинна повърхност, за да отстрани малки несъвършенства в данните. Функцията ще запълва итеративен процес, докато всички вдлъбнатини се запълнят в рамките на посочения Z Limit.<div><br/>Когато се създава височинна повърхност с помощта на инструменти за ортографско картографиране или по друг начин, в данните често има малки, но съществени грешки под формата на вдлъбнатини и изпъкналости. Във фотограметрията, вдлъбнатините и изпъкналостите често се наричат дупки и шипове. Тъй като данните за повърхността често се използват при моделирането, като хидрологично моделиране, е важно тези грешки при вдлъбнатините и изпъкналостите да се коригират по начин, съобразен със заобикалящите данни.</div>",
		floatName: "Плаваща функция",
		floatSnip: "Преобразува стойността на всяка клетка от растер в репрезентация с плаваща точка.",
		floatDesc: "Плаващата функция преобразува всяка стойност на пиксел от растер в репрезентация с плаваща точка.",
		flowAccumulationName: "Акумулиране на поток",
		flowAccumulationSnip: "Създава растер на акумулирания поток във всяка клетка. По желание може да се използва коефициент за тегло.",
		flowAccumulationDesc: "Глобалната функция за Акумулиране на потока създава растер на акумулирания поток във всеки пиксел, определен чрез натрупване на теглото за всички пиксели, които се вливат във всеки пиксел надолу. Ако не е предоставен растер с тегло, към всеки пиксел се прилага тегло 1, а стойността на пикселите в изходното растерно изображение е броят на пикселите, които се вливат във всеки пиксел.<div><br/>Изходните пиксели с голямо акумулиране на поток са области с концентриран поток и могат да се използват за идентифициране на поточните канали. Изходните пиксели с akumulirane на поток от нула са локални топографски максимуми и могат да се използват за идентифициране на хребети.</div>",
		flowDirectionName: "Посока на поток",
		flowDirectionSnip: "Създава растер на посоката на потока от всяка клетка до нейния най-стръмен съсед по склона.",
		flowDirectionDesc: "Един от ключовите фактори за определяне на хидроложките характеристики на дадена повърхност е възможността за определяне на посоката на потока от всеки пиксел в растера. Функцията за растер на Посоката на потока приема като входна информация повърхност и създава растер на посоката на потока от всеки пиксел до най-стръмния му съсед по наклон. Функцията за посока на потока поддържа три метода за моделиране на потока: D8 (осем посоки), Multi-Flow Direction (MFD) и D-Infinity (DINF). ",
		flowDistanceName: "Разстояние на поток",
		flowDistanceSnip: "Изчислява за всяка клетка, минималното хоризонтално или вертикално разстояние надолу по склона до клетките на потока или реката, в която се вливат.",
		flowDistanceDesc: "За всеки пиксел, функцията изчислява минималното хоризонтално или вертикално разстояние до пиксела (-те) на реката или потока, в който те се вливат. Ако е предоставен допълнителен растер на посоката на потока, посоката на спускане ще бъде ограничена до определената от входящия растер на посоката на потока. Изходните данни са растер на разстоянието на потока.",
		focalName: "Фокална статистика",
		focalSnip: "Изчислява фокална статистика за всеки пиксел от изображение въз основа на дефиниран фокален квартал.",
		focalDesc: "Функцията за фокална статистика изчислява фокална статистика за всеки пиксел на изображение въз основа на дефиниран фокален квартал.",
		geometricName: "Геометрична функция",
		geometricSnip: "Увеличава точността на позициониране на набор от данни чрез отчитане на височината.",
		geometricDesc: "Геометричната функция създава орторектифицирано изображение въз основа на дефиниция на сензора и модел на терена. Увеличава точността на позициониране на набор от данни чрез отчитане на височината.",
		grayscaleName: "Сива скала",
		grayscaleSnip: "Преобразува многолентово изображение в еднолентово изображение в сивата скала.",
		grayscaleDesc: "Тази функция преобразува многолентово изображение в еднолентово изображение в сивата скала.<div><br/>Тази функция добавя определена тежест към всяка от честотните ленти на входните данни и нормализира изходното изображение. Теглата често се използват, тъй като някои честотни ленти имат различно значение в зависимост от приложението. Например, синята лента често съдържа повече шум от другите ленти.</div>",
		greaterThanEqualName: "По-голямо от или равно на",
		greaterThanEqualSnip: "Извършва релационна операция „по-голямо от или равно на“ върху два набора от входни данни на база клетка по клетка. Връща 1 за клетки, в които първият растер е по-голям или равен на втория растер, и 0, ако не е така.",
		greaterThanEqualDesc: "Функцията изпълнява релационна операция „по-голямо от или равно на“ върху два набора от входни данни на база пиксел по пиксел. Връща стойност 1 за пиксели, в които първият растер е по-голям или равен на втория растер, и стойност 0 за пиксели, в които първият растер не е по-голям или равен на втория растер.",
		greaterThanName: "По-голямо от",
		greaterThanSnip: "Извършва релационна операция „по-голямо от“ върху два набора от входни данни на база клетка по клетка. Връща 1 за клетки, в които първият растер е по-голям от втория растер, и 0, ако не е така.",
		greaterThanDesc: "Функцията изпълнява релационна операция „по-голямо от“ върху два набора от входни данни на база пиксел по пиксел. Връща стойност 1 за пиксели, в които първият растер е по-голям от втория растер, и стойност 0 за пиксели, в които първият растер не е по-голям на втория растер.",
		heatIndexName: "Топлинен индекс",
		heatIndexSnip: "Комбинира температурата на околния въздух и относителната влажност, за да върне видимата температура.",
		heatIndexDesc: "Тази функция изчислява видимата температура въз основа на температурата на околната среда и относителната влажност. Видимата температура често се описва като колко гореща се чувства в човешкото тяло.<div><br/>Този индекс може да бъде полезен за изчисляване на опасностите, свързани с медицински проблеми, като мускулни крампи, дехидратация, топлинно изтощение или по-сериозния топлинен удар в горещи и влажни дни. Когато относителната влажност на въздуха е висока, изпаряването на потта от тялото става все по-трудно, което лишава хората от ефективен естествен начин за охлаждане. Картите на топлинните препоръки или предупреждения често са резултат от прекласифициране на резултатите от топлинния индекс в класове, като колкото по-висока е стойността на индекса, толкова по-вероятно е той да се превърне в предупреждение, а не само в препоръка.</div>",
		hillshadeName: "Визуален релеф",
		hillshadeSnip: "Създава 3D представяне на повърхността, като относителното положение на слънцето се взема предвид при засенчването на изображението.",
		hillshadeDesc: "Функцията за визуален релеф създава 3D представяне в сива скала на повърхността на терена, като при засенчването на изображението се взема предвид относителното положение на слънцето. <div><br/>Визуалният релеф е техника за визуализиране на терена, която се определя от източника на светлина и от наклона и аспекта на повърхността на възвишението. Това е качествен метод за визуализиране на топографията и не дава абсолютни стойности на височината. </div>",
		intName: "Цяло число",
		intSnip: "Преобразува стойността на всяка клетка от растер в цяло число чрез съкращаване.",
		intDesc: "Функцията „Цяло число“ преобразува всяка стойност на пиксел от растер в цяло число чрез съкращаване.",
		interpolateIrregularDataName: "Интерполиране на нередовни данни",
		interpolateIrregularDataSnip: "Интерполира от облаци от точки или неправилни решетки.",
		interpolateIrregularDataDesc: "Някои набори от данни netCDF или HDF съхраняват географското си местоположение като масиви от пиксели или точкови данни с неравномерни разстояния. При добавяне на тези набори от данни към набор от мозаечни данни, функцията за интерполация на нередовни данни взема данните с нередовна решетка и ги семплира отново, така че всеки пиксел да е с еднакъв размер и да е квадратен.<div><br/>Когато добавяте променливи от netCDF или HDF към набор от мозаечни данни, той автоматично ще провери дали данните се подреждат правилно. Ако това не е така, може да се използва функцията за интерполиране на нередовни данни, за да се преобразуват нередовните данни в растер с правилна решетка. Можете да промените метода на интерполация и размера на клетките, използвани във функцията за интерполация на растер с нередовни данни. За растерни данни с правилни разстояния не се прилага интерполация и данните се прочитат във вида, в който са.</div>",
		isNullName: "е Null",
		isNullSnip: "Определя кои стойности от входните растерни изображения са NoData за всяка клетка поотделно. Връща стойност 1, ако входните стойности са NoData, и 0 за клетки, които не са такива.",
		isNullDesc: "Функцията Is Null определя кои стойности от входното растерно изображение са NoData на база пиксел по пиксел. Връща стойност 1, ако входната стойност е NoData, и стойност 0 за пиксели, които не са NoData.",
		kernelDensityName: "Плътност на ядро",
		kernelDensitySnip: "Изчислява площта на единица величина от обектите на точка или полилиния, като използва функция на ядро, за да напасне плавно заострена повърхност към всяка точка или полилиния.",
		kernelDensityDesc: "Тази функция изчислява площта на единица величина от обекти на точка или полилиния, като използва функция на ядро, за да приспособи плавно заострена повърхност към всяка точка или полилиния.",
		keyMetadataName: "Ключови метаданни",
		keyMetadataSnip: "Заменя или вмъква ключови метаданни на растер във функционална верига.",
		keyMetadataDesc: "Тази функция ви позволява да вмъкнете или замените ключовите метаданни на растер.<div><br/>Информацията в ключовите метаданни се използва за подпомагане на приложението при обработката и визуализацията, включително за предоставяне на полезна информация, като например името на сензора, имената на честотните ленти или облачната покривка, свързана със снимките..</div>",
		shortestPathName: "Път с най-малки разходи",
		shortestPathSnip: "Извършва анализ на разстоянието на разходите, като използва входни данни за източника и дестинацията, които след това се използват за определяне на пътя с най-малки разходи от източник към дестинация.",
		shortestPathDesc: "Функцията за Път с най-малки разходи изчислява пътя с най-малки разходи от даден източник до дестинация. За всеки пиксел върху повърхността на разходите се изчислява най-малкото акумулирано разстояние до най-близкия източник. Така се получава изходно растерно изображение, в което се записва пътя или пътищата с най-малки разходи от избраните места до най-близките пиксели на източника, определени в рамките на акумулираната повърхност на разходите, по отношение на разстоянието на разходите.<div><br/>На всеки път с най-ниска цена се присвоява стойност, когато се срещне в процеса на сканиране. Крайният пиксел в изходното растерно изображение на пътя на разходите получава стойност 1. Първият път получава стойност 3, вторият - 4 и т.н. Когато няколко пътя се сливат и следват оставащото разстояние до източника по един и същ маршрут, на отсечката, в която двата пътя се събират, се присвоява стойност 2. На обединената част от пътя не може да бъде присвоена стойността на един от пътищата, тъй като обединената част принадлежи и на двата маршрута.</div>",
		lessThanEqualName: "По-малко или равно на",
		lessThanEqualSnip: "Извършва релационна операция „по-малко или равно на“ върху два набора от входни данни на база клетка по клетка. Връща 1 за клетки, в които първият растер е по-малък или равен на втория растер и 0, ако не е така.",
		lessThanEqualDesc: "Функцията изпълнява релационна операция „по-малко или равно на“ върху два набора от входни данни на база пиксел по пиксел. Връща стойност 1 за пиксели, в които първият растер е по-малък или равен на втория растер, и стойност 0, когато не е по-малък или равен на втория растер.",
		lessThanName: "По-малко от",
		lessThanSnip: "Извършва релационна операция „по-малко от“ върху два набора от входни данни на база клетка по клетка. Връща 1 за клетки, в които първият растер е по-малък от втория растер и 0, ако не е така.",
		lessThanDesc: "Функцията изпълнява релационна операция „по-малко от“ върху входни два набора от входни данни на база пиксел по пиксел. Връща стойност 1 за пиксели, в които първият растер е по-малък от втория растер, и стойност 0, когато не е по-малък от втория растер.",
		lnName: "Ln",
		lnSnip: "Изчислява натуралния логаритъм (база „e“) на всяка клетка в растер.",
		lnDesc: "Функцията Ln изчислява натуралния логаритъм (основа „e“) на всеки пиксел в растер.",
		log10Name: "Log10",
		log10Snip: "Изчислява десетичния логаритъм на всяка клетка в растер.",
		log10Desc: "Функцията Log10 изчислява десетичния логаритъм на всеки пиксел в растер.",
		log2Name: "Log2",
		log2Snip: "Изчислява логаритъма с основа 2 на всяка клетка в растер.",
		log2Desc: "Функцията Log2 изчислява логаритъма с основа 2 на всеки пиксел в растер.",
		lookupName: "Търсене",
		lookupSnip: "Създава нов растер чрез търсене на стойности, намерени в друго поле в таблицата на входното растерно изображение.",
		lookupDesc: "Функцията създава нов растер, като търси стойности, открити в друго поле в таблицата на входното растерно изображение.",
		mlClassifyName: "ML Classify",
		mlClassifySnip: "Класифицира изображения, като използва подход за всеки пиксел. Смесените пиксели се причисляват към обекта с най-висок процент в този пиксел.",
		mlClassifyDesc: "Функцията ML Classify Ви позволява да извършите контролирана класификация, като използвате алгоритъма за класификация с максимална вероятност, върху набор от растерни данни или набор от мозаечни данни. Тази функция изисква файл със сигнатура за класификация.",
		maskName: "Маска",
		maskSnip: "Задава стойности, които не искате да показвате.",
		maskDesc: "Тази функция за растер задава стойности, които не искате да се показват в растера. С помощта на функцията за маскиране ще зададете една или повече стойности NoData или диапазон от валидни стойности на пикселите. ",
		minusName: "Минус",
		minusSnip: "Изважда стойността на второто входно растерно изображение от стойността на първото входно растерно изображение на база клетка по клетка.",
		minusDesc: "Функцията „Минус“ изважда стойността на второто входно растерно изображение от стойността на първото входно растерно изображение на база пиксел по пиксел.",
		modName: "Mod",
		modSnip: "Изважда стойността на второто входно растерно изображение от стойността на първото входно растерно изображение на база клетка по клетка.",
		modDesc: "Функцията Mod намира остатъка от първия растер, когато е разделен на втория растер, пиксел по пиксел. Редът на входните данни е важен и влияе върху изходните данни.",
		mosaicRastersName: "Мозаечни растери",
		mosaicRastersSnip: "Обединява набор от растерни набори от данни, за да създаде един набор от данни.",
		mosaicRastersDesc: "Функцията за мозаечни растери създава мозаечно изображение от няколко изображения. Когато изображенията се припокриват, има няколко метода, от които можете да избирате, за да определите кои изображения да бъдат показани.",
		ndviColorizedName: "Цветен NDVI",
		ndviColorizedSnip: "Създава многолентов набор от данни, който представя състоянието на растителността въз основа на разликата между червения и близкия инфрачервен диапазон.",
		ndviColorizedDesc: "Функцията „Цветен NDVI“ използва функцията NDVI върху входното изображение и след това използва цветна карта или гама от цветове, за да покаже резултата.",
		ndviName: "NDVI",
		ndviSnip: "Изчислява нормализиран разликов вегетационен индекс (NDVI).",
		ndviDesc: "Функцията NDVI създава еднолентов набор от данни, който представя състоянието на растителността въз основа на разликата между червената и близката инфрачервена честотна лента.<div><br/>NDVI е стандартизиран индекс, който ви позволява да генерирате изображение, показващо зеленина, известно също като относителна биомаса. Този индекс се възползва от контраста на характеристиките между две честотни ленти от мултиспектрален набор от растерни данни: загубата на пигмента хлорофил в червената честотна лента и високата отражателна способност на растителния материал в близката инфрачервена честотна лента (NIR). Изключително ниските или отрицателни стойности на NDVI представляват области без никаква растителност, например облаци, вода или сняг. Много ниските стойности представляват зони с малко или никаква растителност, като бетон, скали или гола почва. Умерените стойности представляват площи с храсти и тревни площи. Високите стойности представляват горски площи и буйна растителност.</div>",
		negateName: "Смяна на знака",
		negateSnip: "Променя знака (умножава по -1) на стойностите на клетките на входното растерно изображение на база клетка по клетка.",
		negateDesc: "Функцията „Смяна на знака“ променя знака (умножава по -1) на стойностите на пикселите от входното растерно изображение в даден пиксел. ",
		nibbleName: "Откъсване",
		nibbleSnip: "Заменя клетките на растер, съответстващи на маска, със стойностите на най -близките съседи.",
		nibbleDesc: "Глобалната функция Nibble позволява на избрани области от растер да се присвои стойността на най-близкия им съсед. Това е полезно за редактиране на области на растер, където данните могат да бъдат грешни.",
		notEqualName: "Не равни стойности",
		notEqualSnip: "Извършва релационна операция „Не е равно на“ надва набора от входни данни на база клетка по клетка. Връща 1 за клетки, при които първият растер не е равен на втория растер и 0, когато е равен.",
		notEqualDesc: "Функцията изпълнява релационна операция „Не е равно на“ на два набора от входни данни на база пиксел по пиксел. Връща стойност 1 за пиксели, където първият растер не е равен на втория растер и стойност 0 за пиксели, където първият е равен на втория растер.",
		pansharpeningName: "Изостряне (Pansharpen)",
		pansharpeningSnip: "Изкуствено подобрява пространствената разделителна способност на многолентово изображение чрез сливането му с панхроматично изображение с по-висока разделителна способност.",
		pansharpeningDesc: "Функцията Увеличаване на резолюцията чрез използване на панхроматично изображение (Pan Sharpening) използва панхроматично изображение или растерна честотна лента с по-висока разделителна способност за сливане с многолентов набор от растерни данни с по-ниска разделителна способност, за да се увеличи пространствената разделителна способност на многолентовото изображение.<div><br/>Целта на Увеличаване на резолюцията чрез използване на панхроматично изображение (Pan Sharpening) е да се създаде по-висококачествено визуално изображение. Тъй като техниките променят радиометрията и спектралните характеристики на многолентовите изображения, изострените изображения трябва да се използват с повишено внимание за аналитични цели на дистанционното наблюдение.</div>",
		pathAllocationName: "Разпределение на разстояние на пътя",
		pathAllocationSnip: "Изчислява източника с най-малки разходи за всяка клетка въз основа на най-малките акумулирани разходи по повърхността на разходите, като отчита разстоянието до повърхността заедно с хоризонталните и вертикалните фактори на разходите.",
		pathAllocationDesc: "Функцията за Разпределение на разстоянието на пътя изчислява най-близкия източник за всяка клетка въз основа на най-малките акумулирани разходи по повърхността на разходите, като отчита разстоянието до повърхността и хоризонталните и вертикалните фактори на разходите.",
		pathBackLinkName: "Обратна връзка към разстояние на пътя",
		pathBackLinkSnip: "Определя съседа, който е следващата клетка по пътя с най-малко натрупващи се разходи до източника с най-ниски разходи, като същевременно отчита повърхностното разстояние заедно с хоризонтални и вертикални фактори на разходите.",
		pathBackLinkDesc: "Функцията „Обратна връзка към разстояние на пътя“ определя посоката на съседа, който е следващата клетка по пътя с най-малки акумулирани разходи до най-близкия източник, като отчита разстоянието до повърхността и хоризонталните и вертикалните фактори на разходите.",
		pathDistanceName: "Разстояние на път",
		pathDistanceSnip: "Изчислява за всяка клетка разстоянието с най-малки акумулирани разходи от или до източника с най-малки разходи, като отчита разстоянието до повърхността заедно с хоризонталните и вертикалните коефициенти на разходите.",
		pathDistanceDesc: "Функцията за разстояние на пътя изчислява за всяка клетка разстоянието с най-малки акумулирани разходи до най-близкия източник, като отчита разстоянието до повърхността и хоризонталните и вертикалните фактори на разходите.",
		plusName: "Плюс",
		plusSnip: "Добавя (сумира) стойностите на два растера клетка по клетка.",
		plusDesc: "Функцията „Плюс“ добавя (сумира) стойностите на два растера пиксел по пиксел.",
		powerName: "Степен",
		powerSnip: "Повишава стойностите на клетките в даден растер до степента на стойностите, намерени в друг растер.",
		powerDesc: "Функцията „Степен“ повишава стойностите на пикселите в даден растер до степента на стойностите, намиращи се в друг растер.",
		radarCalibrationName: "Калибриране на радар",
		radarCalibrationSnip: "Преобразува обратното разсейване на RADARSAT-2.",
		radarCalibrationDesc: "Тази функция може да се използва за калибриране на изображения RADARSAT-2 в мозаечен набор от данни или като растерен продукт. Калибрирането се извършва върху радарни изображения, така че стойностите на пикселите да са вярно представяне на радарното обратно разсейване.",
		rasterInfoName: "RasterInfo",
		rasterInfoSnip: "Променя свойствата на растера, например дълбочината на битовете, стойността на NoData, размера на клетките и т.н.",
		rasterInfoDesc: "Опцията за растерна информация отваря диалогов прозорец със свойствата на набора от растерни данни, като например броя на колоните и редовете, броя на лентите, типа на пикселите, обхват и проекция. Можете да редактирате тези свойства, като изберете набор от растерни данни, който да използвате като шаблон. ",
		rasterizeAttributesName: "Атрибути за растер",
		rasterizeAttributesSnip: "Обогатява растено изображение чрез допълнителни честотни ленти, получени от стойностите на определени атрибути на външна таблица или услуга за обекти.",
		rasterizeAttributesDesc: "Функцията за атрибути за растер обогатява растер чрез добавяне на честотни ленти, получени от стойностите на зададени атрибути, от външна таблица или услуга за обекти. По желание можете да посочите растер на зона и свързания с нея атрибут ID на зона, за да активирате базирано на областта търсене.",
		rasterizeFeatureClassName: "Обекти за растер",
		rasterizeFeatureClassSnip: "Преобразува обекти в растер.",
		rasterizeFeatureClassDesc: "Тази функция преобразува данните от клас на полигон, полилиния и точков обект в растерния слой.<div><br/>Функциите се присвояват на пикселни стойности въз основа на OBJECTID на функциите (по подразбиране). По избор, стойностите на пикселите могат да се базират на поле за стойност, дефинирано от потребителя в таблицата с атрибути за входни данни.</div>",
		recastName: "Преобразуване",
		recastSnip: "Променя параметрите на функционална верига в набор от мозаечни данни или услуга за изображения. Това често се използва с набори от данни LAS, за да се избегне необходимостта от създаване на отделен набор от мозаечни данни за различни представяния на терена.",
		recastDesc: "Функцията „Преработване“ се използва за динамично промяна на параметъра на функцията, използван в набор от мозаечни данни или услуга за изображения, без физическото запазване на промените.",
		regionGroupName: "Група райони",
		regionGroupSnip: "За всяка клетка на изходните данни се записва идентичността на свързания регион, към който принадлежи тази клетка. На всеки район е зададен уникален номер.",
		regionGroupDesc: "Глобалната функция „Група райони“ записва за всяка клетка в изходните данни, идентификацията на свързания район, към който принадлежи тази клетка. На всеки район се присвоява уникален номер.<div><br/>Първият сканиран район получава стойност едно, вторият –две и т.н., докато на всички райони се присвои стойност. Сканирането се извършва отляво надясно, отгоре надолу. Стойностите, присвоени на изходните зони, се основават на това кога са срещнати в процеса на сканиране.</div>",
		regionGrowName: "Разрастване на региони",
		regionGrowSnip: "Разрастване на региони от посяти точки.",
		regionGrowDesc: "Функцията „Разрастване на региони“ групира съседните пиксели в групи в зависимост от зададения радиус от началната точка. На групата пиксели или обект се присвоява определена стойност на запълване.",
		remapName: "Повторно картиране",
		remapSnip: "Променя стойностите на пикселите, като задава нови стойности на диапазони от стойности на пикселите или използва външна таблица.",
		remapDesc: "Функцията за повторно картиране Ви позволява да променяте или прекласифицирате стойностите на пикселите в растерните данни. Това може да стане чрез задаване на диапазон от стойности на пиксела, които да се съпоставят с изходна стойност на пиксела, или чрез използване на таблица за съпоставяне на стойностите на пиксела с изходна стойност на пиксела.",
		reprojectName: "Репроектиране",
		reprojectSnip: "Променя проекцията на растерна съвкупност от данни, мозаечна съвкупност от данни или растерен елемент в мозаечна съвкупност от данни. Може също така да преизчислява данните до нов размер на клетката и да определя произход.",
		reprojectDesc: "Функцията за репроектиране променя проекцията на набор от растерни данни, набор от мозаечни данни или растерен елемент в набор от мозаечни данни. Той може също така да пробва повторно данните към нов размер на клетката и да определи произход.<div><br/>Функцията за репроектиране може да се използва при създаване на кеш от растерна или мозаечна съвкупност от данни, която не е в необходимата проекция. Например, при създаване на услуга за кеширане на изображения, която може да бъде интегрирана от приложения с други кеширани услуги, е важно всички те да бъдат в една и съща проекция. Това се използва често в Web Mercator проекция. Тъй като наборът от мозаечни данни не може да се препроектира, можете да направите едно от двете неща—или да създадете препратен набор от мозаечни данни от Вашия набор от мозаечни данни в необходимата проекция, или да добавите функцията за репроектиране към функционалната верига на набора от мозаечни данни. Друг пример използва тази функция за растерния елемент в мозаечен набор от данни. Когато използвате функцията за кеширан растер, може да искате да вмъкнете функцията за репроектиране, така че кешът да се създаде в новата проекция. Растерните елементи в мозаечен набор от данни могат да се кешират, когато обработката е интензивна и се опитвате да публикувате бърза услуга за изображения, без да кеширате цялата услуга за изображения.</div>",
		resampleName: "Интерполация на нови стойности на клетки",
		resampleSnip: "Променя размера на клетката в растер.",
		resampleDesc: "Функцията за интерполиране на нови стойности на клетки променя размера на клетката, типа на повторното вземане на проби или и двете.<div><br/>Функцията за интерполиране на нови стойности на клетки трябва да се използва само при специфични изисквания за изчисление; например, когато изчислявате посоката на вятъра или големината на течението, което изисква интерполиране на нови стойности на клетки от резолюцията на източника.</div>",
		roundDownName: "Закръгляне надолу",
		roundDownSnip: "Връща следващата по-ниска целочислена стойност, представена като плаваща точка, за всяка клетка в растер.",
		roundDownDesc: "Функцията „Закръгляне надолу“ връща следващата по-ниска целочислена стойност като стойност с плаваща точка за всеки пиксел в растер.",
		roundUpName: "Закръгляне нагоре",
		roundUpSnip: "Връща следващата по-висока целочислена стойност, представена като плаваща точка, за всяка клетка в растер.",
		roundUpDesc: "Функцията „Закръгляне нагоре“ връща следващата по-висока целочислена стойност като стойност с плаваща точка за всеки пиксел в растер.",
		segmentMeanShiftName: "Средно измерване на сегмент",
		segmentMeanShiftSnip: "Групира съседни пиксели със сходни спектрални характеристики в сегменти.",
		segmentMeanShiftDesc: "Тази функция идентифицира обекти, характеристики или сегменти във Вашите изображения чрез групиране на съседни пиксели, които имат сходни спектрални и пространствени характеристики. Можете да контролирате размера на пространственото и спектралното намаляване на вариации в изображение, за да подпомогнете извличането на интересуващите Ви обекти.",
		s1RadiometricCalibrationName: "Радиометрично калибриране Sentinel-1",
		s1RadiometricCalibrationSnip: "Извършва различни видове радиометрично калибриране на данните от Sentinel-1.",
		s1RadiometricCalibrationDesc: "Тази растерна функция извършва три различни калибрирания за набори от данни на Sentinel 1, включително бета нула и гама, и извежда калибрирания набор от данни. Целта на калибрирането на SAR е да се осигурят изображения, при които стойностите на пикселите могат да се свържат директно с радарното обратно разсейване на сцената. Въпреки че некалибрираните SAR изображения са достатъчни за качествено използване, калибрираните SAR изображения са от съществено значение за количественото използване на SAR данни.<div><br/>Типичната обработка на SAR данни, при която се получават изображения от ниво 1, не включва радиометрични корекции и остава значително радиометрично отклонение. Поради това е необходимо да се приложи радиометрична корекция на SAR изображенията, така че стойностите на пикселите на изображенията наистина да представят радиолокационното обратно разсейване на отразяващата повърхност. Радиометричната корекция е необходима и за сравняване на SAR изображения, получени с различни сензори, или получени от един и същ сензор по различно време, в различни режими или обработени от различни процесори.</div>",
		s1ThermalNoiseRemovalName: "Премахване на термален шум от Sentinel-1.",
		s1ThermalNoiseRemovalSnip: "Премахва термания шум от данните Sentinel-1.",
		s1ThermalNoiseRemovalDesc: "Корекцията на топлинния шум може да се прилага към продуктите на Sentinel-1 Level-1 Single Look Complex (SLC), както и към продуктите на Level-1 Ground Range Detection (GRD), които все още не са коригирани. Операторът може също да премахне тази корекция въз основа на анотациите на продукта, за да въведе отново шумовия сигнал, който е бил отстранен при създаването на оригиналния продукт. Анотациите на продуктите ще бъдат съответно актуализирани, за да се даде възможност за повторно прилагане на корекцията. ",
		setNullName: "Настройте Null",
		setNullSnip: "Настройте Null задава идентифицираните местоположения на клетките като NoData въз основа на зададен критерий. Връща NoData, ако условната оценка е true, и връща стойността, зададена от друг растер, ако тя е false.",
		setNullDesc: "Функцията Настройте Null задава на идентифицираните пиксели стойност NoData , въз основа на конкретните критерии. Връща NoData, ако условната оценка е true (1), и връща стойността, посочена в грешен растер, ако условната оценка е false (0). Този критерий се определя от изходните данни на логическа математическа функция, която ще бъде входно растерно изображение.",
		shadedReliefName: "Засенчен релеф",
		shadedReliefSnip: "Създава многолентово, цветово кодирано 3D представяне на повърхността, като относителното положение на слънцето се взема предвид при засенчването на изображението.",
		shadedReliefDesc: "Функцията Засенчване на релеф създава цветно 3D представяне на терена чрез обединяване на изображенията от методите за кодиране на височина и визуален релеф. Тази функция използва свойствата за височина и азимут, за да определи позицията на слънцето.<div><br/></div>",
		sinHName: "SinH",
		sinHSnip: "Изчислява хиперболичния синус на клетките в растер.",
		sinHDesc: "Функцията изчислява хиперболичния синус на пикселите в растер.",
		sinName: "Sin",
		sinSnip: "Изчислява синуса на клетките в растер.",
		sinDesc: "Функцията изчислява синуса на пикселите в растер.",
		slopeName: "Наклон",
		slopeSnip: "Изчислява скоростта на промяна от една стойност на пиксела към съседните му стойности.",
		slopeDesc: "Тази растерна функция изчислява наклона, който представлява скоростта на промяна на височината за всяка клетка на цифровия височинен модел (DEM). Това е първата производна на цифровия височинен модел DEM.<div><br/>Тази функция използва ускорена atan() функция. Тя е шест пъти по-бърза, а грешката на апроксимацията винаги е по-малка от 0,3 градуса.</div>",
		speckleName: "„Спикъл“ (Speckle)",
		speckleSnip: "Осигурява филтри за отразяване на набори от данни от радарни системи със синтетична апертура (SAR).",
		speckleDesc: "Спекълът е високочестотният шум в радарните данни. Изображенията, генерирани от радарни системи със синтетична апертура (SAR), са силно изложени на ефектите на петната, дължащи се на обработката на разсеяните сигнали и интерференцията на електромагнитните вълни, разпръснати от повърхности или обекти. Функцията „Спикъл“ (Speckle) филтрира набора от радарни данни с петна и изглажда шума, като запазва ръбовете или острите черти на обектите в изображението.",
		spectralConversionName: "Спектрална конверсия",
		spectralConversionSnip: "Прилага матрица към многолентово изображение.",
		spectralConversionDesc: "Функцията „Спектрална конверсия“ прилага матрица към многолентово изображение, за да повлияе на цветовите стойности на изходните данни.<div><br/>Някои сензори не събират сини ленти поради ниско съотношение сигнал / шум. Това може да се използва например за преобразуване на фалшиво цветно инфрачервено изображение в псевдоестествено цветно изображение.</div>",
		squareRootName: "Квадратен корен",
		squareRootSnip: "Изчислява квадратния корен от стойностите на клетките в растерно изображение.",
		squareRootDesc: "Функцията „Квадратен корен“ изчислява квадратния корен от стойностите на пикселите в дадено растерно изображение.",
		squareName: "Квадрат",
		squareSnip: "Изчислява квадрата на стойностите на клетките в растерно изображение.",
		squareDesc: "Функцията „Квадрат“ изчислява квадрата на стойностите на пикселите в дадено растерно изобржение.",
		statisticsHistogramName: "Статистика и хистограма",
		statisticsHistogramSnip: "Определяне или свързване на статистика и хистограма.",
		statisticsHistogramDesc: "Функцията за статистика и хистограма се използва за определяне на статистиката и хистограмата на дадено растерно изображение. Можете да вмъкнете тази функция в края на функционалната верига, за да опишете статистиката и хистограмата на шаблона на растерна функция (RFT). Това може да е необходимо, за да се контролира показването по подразбиране на резултата от обработката, особено при дефиниране на функционална верига, която съдържа много функции.<div><br/>Можете да дефинирате статистика, като въведете стойностите или импортирате от набор от данни от растер или XML файл. Хистограмите могат да бъдат дефинирани само чрез импортиране на файл.</div>",
		statisticsName: "Статистика",
		statisticsSnip: "Изчислява фокална статистика за всеки пиксел от изображение въз основа на дефиниран фокален квартал.",
		statisticsDesc: "Функцията за статистика изчислява фокална статистика за всеки пиксел на изображение въз основа на дефиниран фокален квартал.<div><br/>Функцията Статистика може да се използва за попълване на изпуснати линии в изображение. Прекъснатите линии често се дължат на проблеми в сензора, при които не се събират данни. Това се случи при сензори като Enhanced Thematic Mapper Plus (ETM+) на Landsat 7. Тези липсващи данни създават проблеми при анализа, както и при разглеждането на изображенията. При използването на изображенията за анализ не може да се направи почти нищо; ако обаче има припокриващо се изображение, то може да се използва вместо липсващото съдържание. Същото може да се направи, ако изображенията се използват за визуализация. Невинаги обаче има допълнително изображение, което да попълни липсващото съдържание, затова то трябва да бъде извлечено от съществуващите данни.</div>",
		streamLinkName: "Връзка на поток",
		streamLinkSnip: "Присвоява уникални стойности на участъците от растерна линейна мрежа между кръстовищата.",
		streamLinkDesc: "Глобалната функция Връзка на поток присвоява уникални стойности на участъци от растерна линейна мрежа между кръстовища.<div><br/>Връзките са участъците на поточен канал, свързващи две последователни кръстовища, кръстовище и изход, или кръстовище и дренажен процеп. В хидрологията тези сегменти от потоци се наричат участъци. Кръстовището е свързано с точката на изливане и помага да се очертае границата на водосбор или дренаж на под-басейна.</div>",
		stretchName: "Разтягане",
		stretchSnip: "Подобрява изображението, като регулира обхвата на показаните стойности. Това не променя основните стойности на пикселите. Ако даден пиксел има стойност извън посочения диапазон, тя ще се появи като минимална или максимална стойност.",
		stretchDesc: "Функцията Разтягане подобрява изображението, като променя свойства като яркост, контраст и гама чрез няколко типа разтягане. Тази функция използва статистическите данни от растерите в мозаечния набор от данни; следователно, ако използвате тази функция, трябва да се уверите, че статистическите данни са изчислени.<div><br/>Типът разтягане дефинира разтягане на хистограма, което ще бъде приложено към растерите, за да подобри външния им вид. Разтягането подобрява външния вид на данните, като разпределя стойностите на пикселите по хистограма от минималните и максималните стойности, определени от тяхната битова дълбочина. </div>",
		swathName: "Отклонение",
		swathSnip: "Интерполира от неправилни решетки или данни за просеки.",
		swathDesc: "Някои набори от данни netCDF или HDF съхраняват географското си местоположение като масиви с неравномерни разстояния. При добавяне на тези набори от данни към набор от мозаечни данни, функцията за интерполация на неправилни данни взема данните с неправилна решетка и ги семплира отново, така че всеки пиксел да е с еднакъв размер и да е квадратен.<div><br/>Когато добавяте променливи от netCDF или HDF към набор от мозаечни данни, той автоматично ще провери дали данните се подреждат правилно. Ако това не е така, автоматично се прилага функцията за отклонение, за да се преобразува неправилният растер в точки и след това в растер с правилна решетка. Можете да промените метода на интерполация и размера на клетките, използвани в растерната функция отклонение. За растерни данни с правилни разстояния не се прилага интерполация и данните се прочитат във вида, в който са.</div>",
		tanHName: "TanH",
		tanHSnip: "Изчислява хиперболичния тангенс на клетките в растер.",
		tanHDesc: "Функцията изчислява хиперболичния тангенс на пикселите в растер.",
		tanName: "Tan",
		tanSnip: "Изчислява тангенса на клетките в растер.",
		tanDesc: "Функцията изчислява тангенса на пикселите в растер. ",
		tasseledCapName: "Tasseled Cap (Kauth-Thomas)",
		tasseledCapSnip: "Изчислява нивата на растителност, влажност и яркост. Тази техника разчита на коефициенти, които трябва да се изчислят специално за даден сензор.",
		tasseledCapDesc: "Трансформация на шапката с козирка (Kauth-Thomas) е предназначена за анализ и картографиране на феноменологията на растителността и промените в градското развитие, засечени от различни сателитни сензорни системи. Известна е като трансформация на шапката с козирка поради формата на графичното разпределение на данните. Трансформацията дава обосновка на моделите, открити в данните от Landsat MSS на земеделски полета като функция на жизнения цикъл на културата. По същество, тъй като културите растат от семена до зрялост, има нетно увеличение на близкото инфрачервено и намаляване на отразяването на червеното в зависимост от цвета на почвата<div><br/>Полезността на тази трансформация се разшири от мониторинг на култури до анализ и картографиране на растителност в подкрепа на различни приложения, като горско стопанство, управление на индустриална растителност, картографиране и управление на екосистеми, инвентаризация и мониторинг за поглъщане на въглерод и кредити, градско развитие и др. Поддръжката на Landsat MSS е разширена и включва други популярни спътникови системи, като Landsat TM, Landsat ETM+, Landsat 8, IKONOS, QuickBird, WorldView-2 и мултиспектрални сензори.</div>",
		timesName: "Времена",
		timesSnip: "Умножава стойностите на два растера клетка по клетка.",
		timesDesc: "Функцията „Умнжение“ умножава стойностите на два растера пиксел по пиксел.",
		transposeBitsName: "Транспортиране на битове",
		transposeBitsSnip: "Разопакова битовете на входния пиксел и ги съпоставя с определени битове в изходния пиксел. Целта на тази функция е да манипулира битове от няколко набора от входни данни, като например продуктите от честотната лента за качество на Landsat 8.",
		transposeBitsDesc: "Функцията Транспортиране на бит разопакова битовете на входния пиксел и ги съпоставя с определени битове в изходния пиксел. Целта на тази функция е да манипулира битове от няколко набора от входни данни, като например продуктите от честотната лента за качество на Landsat 8.",
		unitConversionName: "Конверсия на единици",
		unitConversionSnip: "Променя стойностите от една мерна единица в друга.",
		unitConversionDesc: "Тази функция преобразува пикселите от една единица в друга. Поддържа преобразуване на разстоянието, скоростта и температурата.",
		vectorFieldName: "Векторна повърхност",
		vectorFieldSnip: "Показва набори от данни както с величина (u), така и с посока (v) като стрелки, където величината е представена от размера, а посоката – от ъгъла на стрелката.",
		vectorFieldDesc: "Функцията Векторно поле се използва за комбиниране и преобразуване на два растера в двулентов растер, който е или от тип данни Величина-Посока, или от тип данни U-V.<div><br/>Стойността U понякога се нарича зонална скорост, а V стойността понякога се нарича меридионална скорост.</div>",
		viewshed2Name: "Зона на видимост",
		viewshed2Snip: "Определя местата на растерната повърхност, видими за набор от обекти на наблюдателя, като използва геодезични методи.",
		viewshed2Desc: "Функцията за зона на видимост определя местата на растерната повърхност, видими за набор от обекти на наблюдателя, като използва геодезични методи.<div><br/>Видимостта на всеки център на пиксела се определя чрез тест за видимост между целта и всеки наблюдател. Ако наблюдателят може да види целта в центъра на пиксела, пикселът се счита за видим. При определянето на видимостта, този инструмент винаги отчита кривината на Земята.</div>",
		watershedName: "Вододел",
		watershedSnip: "Определя площта над набор от клетки в растер.",
		watershedDesc: "Глобалната функция за Вододел определя площта над набор от пиксели в растер. Вододелите се очертават на базата на растер за посоката на потока, който идентифицира посоката на потока от всеки пиксел.",
		weightedOverlayName: "Претеглено наслагване",
		weightedOverlaySnip: "Налага няколко растера, като използва обща скала за измерване и претегля всеки от тях според важността му.",
		weightedOverlayDesc: "Тази функция Ви позволява да наслагвате няколко растерни изображения, използвайки обща скала за измерване, и да претегляте всяко от тях според важността му.",
		weightedSumName: "Претеглена сума",
		weightedSumSnip: "Претегля и добавя масив от растерни изображения клетка по клетка.",
		weightedSumDesc: "Функцията за претеглена сума позволява наслагване на няколко растера, умножаване на всеки от тях по зададеното му тегло и сумирането им.",
		windchillName: "Вятър",
		windchillSnip: "Комбинира температурата на въздуха на околната среда и скоростта на вятъра, за да изчисли коефициента на вятъра.",
		windchillDesc: "Функцията за вятър е полезна за идентифициране на опасни зимни условия, които, в зависимост от времето на излагане на природните стихии, могат да доведат до измръзване или дори хипотермия. Функцията за вятър е начин за измерване на това колко студено се чувства човек, когато се вземе предвид вятърът и вече ниските температури. Колкото по-висока е скоростта на вятъра, толкова по-бързо тялото губи топлина и толкова по-студено се чувства.",
		zonalRemapName: "Зонално рекартиране",
		zonalRemapSnip: "Рекартиране на пиксели в растер въз основа на зони, дефинирани в друг растер, и зонозависимо картографиране на стойности, дефинирано в таблица.",
		zonalRemapDesc: "Тази функция Ви позволява да пренасочвате пиксели в растер въз основа на зони, дефинирани в друг растер, и зонозависимо картографиране на стойности, дефинирано в таблица.",
		zonalStatisticsName: "Зонална статистика",
		zonalStatisticsSnip: "Изчислява статистически данни за стойностите на даден растер в зоните на друг набор от данни.",
		zonalStatisticsDesc: "Функцията изчислява статистически данни за стойностите на даден растер в зоните на друг набор от данни. Зоната се определя като всички области във входните данни, които имат една и съща стойност. Не е задължително тези зони да са съседни. Когато входните данни за зоната и стойността са растерни с еднаква разделителна способност, те се използват директно. Ако разделителните способности са различни, се прилага вътрешно интерполиране на нови стойности на клетки, за да се уеднаквят разделителните способности, преди да се извърши зоновата операция.",
		flowLengthName: "Дължина на поток",
		flowLengthSnip: "Изчислява разстоянието срещу течението или по течението, или от претегленото разстояние, по пътя на потока за всяка клетка.",
		flowLengthDesc: "Това е глобална растерна функция. Тази функция създава растерен слой от разстоянието срещу течението или по течението, или от претегленото разстояние, по пътя на потока за всяка клетка.<div><br/>Основното използване на функцията за дължина на потока е да се изчисли дължината на най-дългия път на потока в даден басейн. Тази мярка често се използва за изчисляване на времето на концентрация на даден басейн. Това се прави с опцията „Срещу течението“. Функцията може да се използва и за създаване на диаграми на разстоянието и площта на хипотетични валежи и оттичане, като се използва растерът на теглото като пречка за движението надолу по склона.</div>",
		streamOrderName: "Ред на поток",
		streamOrderSnip: "Присвоява цифров ред на сегменти от растерно изображение, представляващи разклонения на линейна.",
		streamOrderDesc: "Това е глобална растерна функция. Тази функция създава растeрен слой, който присвоява числов ред на сегменти от растер, представляващ клонове на линейна мрежа.<div><br/>Изходните данни на функцията за ред на потоците ще бъде с по-високо качество, ако входният растерен слой за поток и входният растерен слой за посока на потока са получени от една и съща повърхност. Ако растерното изображение на потоците е получено от набор от данни за потоците, изходните данни може да не могат да се използват, тъй като на база клетка по клетка посоката няма да съответства на местоположението на клетките на потоците. Резултатите от функцията за натрупване на поток могат да се използват за създаване на растерна мрежа от потоци чрез прилагане на прагова стойност за избор на клетки с висок натрупан поток. Например клетки, в които се вливат повече от 100 клетки, се използват за определяне на поточната мрежа. Използвайте функцията Con или Настройте Null, за да създадете растерно изображение на поточна мрежа, в което стойностите на натрупване на потока от 100 или повече отиват към единица, а останалите се поставят във фонов режим (NoData). Получената мрежа от потоци може да се използва във функцията Ред на поток. Тази функция поддържа само растерен слой D8 с входна посока на потока. Посоките на потока D8 могат да бъдат създадени с помощта на функцията Посока на потока и да се изпълняват с типа на посоката на потока по подразбиране D8.</div>",
		snapPourPointName: "Прикрепване на точки за изливане",
		snapPourPointSnip: "Прикрепва точките за изливане към клетката с най-голямо натрупване на поток в рамките на определено разстояние.",
		snapPourPointDesc: "Това е глобална растерна функция. Тази функция захваща точки на изливане към клетката с най-голямо натрупване на поток в рамките на определено разстояние.<div><br/>Функцията Прикрепване на точки за изливане се използва за гарантиране на избора на точки с висок акумулиран поток, когато се очертават движение на воден поток с помощта на функцията за вододел. Прикрепване на точки за изливане ще потърси в рамките на разстоянието около зададените точки на изливане клетката с най-голям акумулиран поток и ще премести точката на изливане на това място. Изходът е целочислен растерен слой, когато първоначалните места на точките на изливане са преместени на места с по-висок акумулиран поток.</div>",
		sinkName: "Крайна точка за анализ на разстоянието",
		sinkSnip: "Създава растерно изображение, в което се идентифицират всички крайни точки за анализ на разстоянието или зони с вътрешно движение на воден поток.",
		sinkDesc: "Това е глобална растерна функция. Тази функция създава растерен слой, идентифициращ всички крайни точки за анализ на разстоянието или зони на вътрешно движение на воден поток. Крайна точка за анализ на разстоянието е клетка или набор от пространствено свързани клетки с посока на потока, на която не може да бъде присвоена една от осемте валидни стойности в растер за посока на потока. Това може да се случи, когато всички съседни клетки са по-високи от обработващата клетка или когато две клетки се вливат една в друга, създавайки двуклетъчен цикъл.<div><br/>Функцията Kрайна точка за анализ на разстоянието поддържа само растерен слой D8 за посока на входящия поток. Посоките на потока D8 могат да бъдат създадени с помощта на функцията Посока на потока и да се изпълняват с типа на посоката на потока по подразбиране D8. Изходните данни от функцията за крайна точка за анализ на разстоянието е целочислен растер, като на всеки растер се присвоява уникална стойност. Тези уникални стойности имат диапазон между единица и общия брой на крайния брой за анализ на разстоянието. Например, ако общият брой на крайните точки за анализ на разстоянието е 1000, уникалните стойности варират от 1 до 1000.</div>",
		aggregateName: "Обобщаване",
		aggregateSnip: "Генерира версия на растерно изображение с намалена разделителна способност.",
		aggregateDesc: "Функцията за Обобщаване преизбира входното растерно изображение до по-груба разделителна способност въз основа на зададена стратегия за обобщаване. Всяка изходна клетка съдържа сумата, минимума, максимума, средната стойност или медианата на входните данни на клетките, които попадат обхвата на тази клетка.<div><br/>Можете да посочите коефициента, чрез който да умножите размера на клетката на входния растер. Например,стойност на клетъчния фактор от 3 ще доведе до изходни данни, в които размерът на клетката е три пъти по-голям от този на входното растерно изображение. Можете да определите как да се обработва обхвата на изходните данни, ако броят на редовете или колоните във входните данни не е точно кратен на клетъчния фактор. По подразбиране, горната и дясната граница се разширяват, за да покрият по-голям пространствен обхват от този на входното растерно изображение, за да се гарантира обработката на всички входни данни за клетки. Алтернативно, горната и дясната граница могат да бъдат намалени, за да покрие по-малък обхват, така че броят на обработените редове и колони да е точно кратен на клетъчния фактор. Можете да определите как клетките NoData да се обработват при изчисляването на агрегирането. Механизмът по подразбиране е, че входните данни за клетки NoData, които попадат в пространствения обхват на по-голяма клетка в изходното растерно изображение, се игнорират при определяне на стойността на изходните данни на тази клетка. Алтернативно, можете да посочите, че ако в пространствения обхват на изходни данни на клетка има дори една клетка с входни данни NoData, тази клетка ще бъде NoData в изходното растерно изображение.</div>",
		ccdcName: "CCDC Analysis",
		ccdcSnip: "Оценява промените в стойностите на пикселите с течение на времето с помощта на алгоритъма за Непрекъснато откриване и класифициране на промени (CCDC) и генерира резултати от модела.",
		ccdcDesc: "Функцията Анализ на CCDC оценява промените в стойностите на пикселите с течение на времето, като използва алгоритъма за непрекъснато откриване и класифициране на промени (CCDC), и генерира многомерен растер, съдържащ резултатите от модела. Поддържа се само във връзка с функцията Откриване на промяна чрез анализ на промяната в шаблон на растерна функция. За да създадете растерна изходна информация, свържете функцията Анализ на CCDC с функцията Откриване на промяна чрез анализ на промяна, запазете я като шаблон на растерна функция и стартирайте Растерен анализ с шаблона на функцията.<div><br/>Тази функция използва алгоритъма за непрекъснато откриване и класифициране на промени (CCDC) за оценка на промените в стойностите на пикселите във времето за група изображения. Във времеви серии от оптични изображения или производни на изображенията (например NDVI) стойностите на пикселите могат да варират по няколко причини: 1. Сезонна промяна - промените в стойността на пикселите отразяват промените в растителността, дължащи се на сезонната променливост на температурата и валежите. В Северното полукълбо например очакваме да видим по-голяма гъстота на зелената растителност през лятото в сравнение със зимата; 2. Постепенна промяна - промените в стойността на пикселите отразяват тенденциите в растителността или повърхностните води, дължащи се на променливостта на климата или на дългосрочни практики за управление на земята. Например площта на голата почва може постепенно да се увеличи поради дългосрочното намаляване на валежите; и 3. Внезапна промяна - промените в стойността на пикселите отразяват промени в земното покритие, които настъпват внезапно поради обезлесяване, урбанизация, природни бедствия и т.н. Алгоритъмът Непрекъснато откриване и класифициране на промени (CCDC) идентифицира и трите вида промени, като основната му цел е да идентифицира резки промени. Към данните се прилагат хармонична регресия и модели на тенденциите, за да се оценят сезонните и постепенните промени, а внезапните отклонения от моделите на тенденциите са индикация за рязка промяна.<div><br/>CCDC алгоритъмът първоначално е проектиран за данни на Landsat TM, Landsat ETM + и Landsat OLI Surface Reflektance (отражателна способност на повърхност) или Brightness Temperature (температура на яркост). Въпреки това, функцията Откриване на промяна чрез анализ на промяната в комбинация с тази функция ще открие промяна за многолентови изображения от всеки поддържан сензор, както и за производни на еднолентови изображения, като например мултичестотни лентови индекси. Например, можете да извършвате непрекъснато откриване на промени в растер с нормализиран индекс на разликата във вегетацията (NDVI), тъй като резките промени в NDVI могат да са показателни за обезлесяване.</div>",
		computeChangeName: "Изчисление за промяна",
		computeChangeSnip: "Изчислява разликата между два категорични или непрекъснати набора от растерни данни.",
		computeChangeDesc: "Функцията Изчисляване на промяната може да се използва за изброяване на разликите между два класифицирани растера за анализ на промените в земното покритие или за изследване на промените между два еднолентови непрекъснати растера, като например височина, температура, покритие с корони и т.н.",
		detectChangeName: "Откриване на промени с помощта на анализ за промяна",
		detectChangeSnip: "Генерира растерен слой, съдържащ информация за промяна на пиксела, използвайки растера за анализ на промяната на изхода.",
		detectChangeDesc: "<div>Функцията Откриване на промяна чрез анализ на промяната генерира растерен слой, съдържащ информация за промяната на пикселите, като използва растера за анализ на промяната. Растерът за анализ на промените трябва да бъде генериран от инструмента Анализиране на промяната с помощта на CCDC или Анализиране на промените с помощта на инструмента LandTrendr, или растерната функция CCDC анализ или функцията за растер на анализа LandTrendr.</div><br><div>Тази растерна функция може да се комбинира с растерна функция за анализ CCDC Analysis или растерна функция за анализ LandTrendr Analysis в шаблон за растерна функция. За да създадете постоянен изход за растер, свържете изхода на функцията CCDC Analysis или LandTrendr Analysis към функцията Откриване на промяна чрез анализ на промяна, запазете я като шаблон на растерна функция и стартирайте Растерен анализ с шаблона.</div><br><div>Параметърът <strong>Change Type (тип Промяна)</strong> показва генерираната информация. Информацията се извлича от растра за анализ на промените. Когато изпълнявате тази функция на изхода от функцията / инструмента CCDC, можете да избирате от следните опции:</div><ul><li><strong>Време на последната промяна</strong>--Последната дата и час, в който пиксел е означен като променен.</li><li><strong>Време на най-ранна промяна</strong>--Първата дата и час, когато пикселът е бил означен като променен.</li><li><strong>Време на най-голямата промяна</strong>--Датата и часът, в които изчислената промяна е най-значима за пиксел.</li><li> <strong>Брой промени</strong>--Общият брой промени на пиксела.</li></ul><div>При изпълнение на тази функция на изхода от функцията/инструмента LandTrendr са налични следните допълнителни опции:</div><ul><li><strong>Време на най-дългата промяна</strong>--Датата, на която пикселът е означен като променен, в началото или края на най-дългия период на промяна.</li><li><strong>Време на най-кратка промяна</strong>--Датата, на която пикселът е означен като променен, в началото или края на най-краткия период на промяна.</li><li><strong>Време на най-бързата промяна</strong>--Датата, на която пикселът е бил означен като променен, в началото или края на най-бързия период на промяна.</li><li><strong>Време на най-бавната промяна</strong>--Датата, на която пикселът е означен като променен, в началото или края на най-бавния период на промяна.</li></ul><div>Изходният растер е многолентов растер, в който всяка лента съдържа информация за промяна в зависимост от избрания тип промяна и максималния брой посочени промени. Например, ако <strong>Тип промяна</strong>е зададен на <strong>Време на най-ранната промяна</strong> и <strong>Максималният брой промени</strong> е зададен на 2,функцията изчислява двете най-ранни дати, когато е настъпила промяна през времевата серия за всеки пиксел. Резултатът е растер, в който първата лента съдържа датите на най-ранната промяна на пиксел, а втората лента съдържа датите на втората най-ранна промяна на пиксел.</div><br><div>Когато прилагате тази функция към изхода от инструментите на LandTrendr, можете да изберете дали да извлечете датата, която отбелязва началото на промяната или края на промяната, като използвате параметъра <strong>Сегментиране на дата</strong> . Например, за да разберете как е започнала последната промяна във времевите серии, задайте <strong> Типът смяна </strong> на <strong>Време на най-последната смяна</strong> и <strong> Дата на сегмент </strong> на <strong>Начало на сегмент</strong>.</div><br><div>Използвайте следните параметри за филтриране, за да извлечете по-конкретни дати на промяна от Вашия растер за анализ на промените:</div><ul><li><strong>Филтриране по година</strong>--Идентифицирайте промените, настъпили в рамките на определен период от време, например, ако търсите промени, настъпили в ландшафта през петте години суша.</li><li><strong>Филтриране по продължителност</strong>--Идентифицирайте промените, настъпили за даден период от години, например, ако търсите само резки промени, настъпили в продължение на 1 или 2 години. Можете да изчислите продължителността, която ви интересува, като използвате формулата<strong>крайна година - начална година +1</strong>. Ще бъдат включени пропуски във времевия ред.</li><li><strong>Филтрирайте по величина</strong>--Идентифицирайте промените с дадена величина, например, ако търсите само големи промени в растителния индекс NDVI. Величината е абсолютна стойност, така че минималните и максималните стойности не могат да бъдат отрицателни. За да зададете промяна на посоката, използвайте <strong>параметъра</strong> Смяна на посоката.</li></ul>",
		distanceAccumulationName: "Натрупване на разстояние",
		distanceAccumulationSnip: "Изчислява натрупаното разстояние за всяка клетка до източниците, като дава възможност за определяне на разстоянието по права линия, разстоянието на разходите, разстоянието до истинската повърхност, както и на вертикалните и хоризонталните коефициенти на разходите.",
		distanceAccumulationDesc: "С натрупване на разстояния се изчислява разстоянието до всяко място в изследвания район до най-близкия или най-евтиния източник. Ако за въвеждане са предоставени само източниците, се изчислява разстоянието по права линия до всяко място в изследвания район. Ако като входни данни се използват както източници, така и бариери, натрупването на разстояния изчислява разстоянието по права линия около бариерите. Както за растера на източниците, така и за растера на бариерите стойността на фона трябва да бъде NoData, докато източниците и бариерите са представени с валидни стойности на клетките. Валидните стойности включват нула. <div><br/>Когато входните данни се предоставят като растер на повърхността, се изчислява действителното разстояние между клетките на повърхността. За да се извърши анализ на разходите чрез натрупване на разстояние, е необходима повърхност на разходите. Ако е предоставена повърхност на разходите, резултатът е растерно изображение с натрупани разходи за разстояние. Когато се предоставят хоризонтални и вертикални фактори, насочеността се счита за натрупани разходи. Има четири характеристики на източника, които могат да се използват. Тези характеристики, които могат да бъдат както на източника, така и на движещите се лица от източника, се контролират от специфични параметри: 1. Първоначално натрупване:   задава първоначалните разходи преди началото на движението. 2. Максимално натрупване:   определя колко разходи може да натрупа източникът, преди да достигне лимита си. 3. Коефициент, който се прилага към разходите:   посочва начина на пътуване или величината при източника. 4. Посоката на пътуване: определя дали движещото се лице започва от източник и се движи към места, които не са източник, или започва от места, които не са източник, и се движи обратно към източник.<div><br/>По подразбиране резултатът от натрупването на разстояние е единична лента, която е растер за натрупване на разстояние. Въпреки това, може да бъде създадена и втора честотна лента - честотна лента за обратна посока. Тази лента показва от всяко място в изследвания район в каква посока трябва да се отиде до източника с най-ниски разходи. И двете ленти ще са необходими за определяне на оптималните маршрути в рамките на изследвания район. За да генерирате път, първо използвайте функцията Извличане на честотна лента, за да извлечете растерно изображение за натрупване на разстояние и растерно изображение за посока назад. Използвайте тези слоеве като входни данни за функцията Разходи на пътя Във функцията използвайте растер за натрупване на разстояния като вход Разходи за разстояния и растер за обратна посока като вход Обратна връзка на разходите.</div>",
		distanceAllocationName: "Разпределение на разстояние",
		distanceAllocationSnip: "Изчислява разпределението на разстоянието за всяка клетка до предоставените източници въз основа на разстоянието по права линия, разстоянието на разходите, разстоянието до истинската повърхност, както и вертикалните и хоризонталните коефициенти на разходите.",
		distanceAllocationDesc: "Разпределението на разстоянието изчислява към кой източник е разпределено всяко място в изследваната област. Ако за входни данни са предоставени само източниците, местата се разпределят, като се използва разстоянието по права линия до най-близкия източник. Ако като входни данни се използват както източници, така и бариери, разпределението на разстоянията изчислява разстоянието по права линия около бариерите, за да определи към кой източник се разпределя дадено местоположение. Както за растера на източниците, така и за растера на бариерите стойността на фона трябва да бъде NoData, докато източниците и бариерите са представени с валидни стойности на клетките. Валидните стойности включват нула.<div><br/>За да се извърши анализ на разходите чрез разпределение на разстоянията, е необходима повърхност на разходите. Ако е предоставена повърхност на разходите, резултатът е растерно изображение на разпределението, базиран на акумулираните разходи, а не на разстоянието по права линия. Когато се предоставят хоризонтални и вертикални фактори, насочеността се счита за натрупани разходи. Когато като входни данни се предоставя растерно изображение на повърхността, при определяне на разпределението се изчислява действителното разстояние на повърхността, изминато при преминаване между клетките. Има четири характеристики на източника, които могат да се използват. Тези характеристики, които могат да бъдат както на източника, така и на движещите се лица от източника, се контролират от специфични параметри: 1. Първоначално натрупване:   задава първоначалните разходи преди началото на движението. 2. Максимално натрупване:   определя колко разходи може да натрупа източникът, преди да достигне лимита си. 3. Коефициент, който се прилага към разходите:   посочва начина на пътуване или величината при източника. 4. Посоката на пътуване: определя дали движещото се лице започва от източник и се движи към места, които не са източник, или започва от места, които не са източник, и се движи обратно към източник.<div><br/>По подразбиране, резултатът от Разпределяне на разстояние е единична лента, която е растер за разпределяне на разстояние. Проверката на булевата опция Генериране на изходния ред и колона като допълнителни ленти в изхода ще доведе до многолентов растер, състоящ се от три честотни ленти. Първата честотна лента е лентата за разпределение на разстоянието, втората честотна лента съдържа индекс на ред, а третата честотна лента съдържа индекс на колона. Тези индекси определят местоположението на клетката-източник, която е отдалечена на най-малкото разстояние с натрупани разходи. Индексът на изходния ред и индексът на изходната колона могат да се използват заедно, за да се извърши картографиране на интензивността. Ако направите запитване за което и да е място в областта на изследване във втора и трета ленти, ще узнаете реда и колоната на източника с най-ниски разходи за това местоположение.</div>",
		eucBackDirectionName: "Евклидова обратна посока",
		eucBackDirectionSnip: "Изчислява за всяка клетка посоката в градуси към съседната клетка по най-краткия път обратно към най-близкия източник, като избягва бариерите.",
		eucBackDirectionDesc: "Функцията Евклидова посока назад води до непрекъснато растерно изображение с плаваща точка, което представя посоката в градуси назад към най-близкия източник, като избягва бариерите, ако са предоставени бариери.<div><br/>Входните данни за евклидова посока назад са източникът, към който посоката ще бъде изчислена. По желание се въвежда растерно изображение, което представя бариерите в зоната на изследване. Както за растера на източниците, така и за растера на бариерите стойността на фона трябва да бъде NoData, докато източниците и бариерите са представени с валидни стойности. Валидните стойности включват нула. По подразбиране, изчислението се обработва до комбинирания обхват на източниците и бариерите плюс 2 реда и колони. Ако анализът е необходим само на определено разстояние от източниците, може да се използва параметърът за максимално разстояние. Евклидовата обратна посока поддържа както равнинен, така и геодезичен метод при изчислението. Изчисленията по планарния метод се извършват върху проектирана плоска равнина, като се използва двуизмерна декартова координатна система. Изчислението на геодезическия метод ще се извърши върху елипсоида, което означава, че независимо от входната или изходната проекция, резултатите не се променят.<div><br/>Резултатът от функцията Euclidean Евклидовата обратна посока може да се използва заедно с резултата от функцията Евклидовото разстояние, за да се определят най-кратките пътища от местата в областта на изследване обратно към източника. Резултатът от Евклидовата обратна посока и резултатът от Евклидовото разстояние се използват във функцията Път на разходите заедно с дестинациите за генериране на най-кратките пътища.</div>",
		expandName: "Разгъване",
		expandSnip: "Разширява избрани зони от растер по зони с определен брой клетки.",
		expandDesc: "С функцията Expand global (Разширяване на глобалното) можете да генерализирате или опростявате растерни изображения, като уголемявате определени зони. Можете също така да контролирате размера на обобщението, което ще настъпи.<div><br/>Зоните, които изберете, ще се увеличат по размер, като се разширят в други зони. Концептуално избраните стойности на зоната могат да се разглеждат като зони на преден план, докато другите стойности остават зони на заден план. Зоните на предeн план могат да се разширят във фоновите зони.<div><br/>Размерът на генерализацията може да се контролира с параметъра Брой на клетки. По подразбиране тази стойност е 1, което означава, че избраните зони ще се разширят с размер, съответстващ на размера на една клетка. За да увеличите степента на обобщаване, можете да зададете по-голяма стойност за този параметър. Концептуално, това е като да стартирате инструмента толкова пъти, колкото е зададеният брой, като резултатите от предишното стартиране са входни данни за следващата итерация.</div>",
		trendAnalysisName: "Тренд растер",
		trendAnalysisSnip: "Оценява тенденцията за всеки пиксел по протежение на едно измерение за една или повече променливи в многомерен растер.",
		trendAnalysisDesc: "<div>Тази функция може да се използва за поставяне на данни по линейна, хармонична или полиномиална линия на тенденцията, или може да се използва за извършване на откриване на тенденция с помощта на теста на Ман-Кендъл или Сезонен-Кендъл.</div><br><div>Растерът на изходната тенденция, генериран с тази функция, се използва като вход за<strong>функцията </strong> Предсказване с помощта на тенденция.</div><br><div>Тестовете Ман-Кендъл и Сезонен-Кендъл се използват, за да се определи дали има монотонна тенденция в данните. Те са непараметрични, което означава, че не предполагат конкретно разпределение на данните. Тестът на Ман-Кендъл не отчита серийната корелация или сезонните ефекти. Ако данните са сезонни, тестът Seasonal-Kendall е по-подходящ.</div><br><div>Ако инструментът се използва за извършване на тест на Ман-Кендъл или Сезонен-Кендъл, изходът е петлентов растер, както следва:</div><ul><li>Лента 1 = Наклонът на Сен</li><li>Лента 2 = p-стойност</li><li>Лента 3 = Резултат на Ман-Кендъл (S)</li><li>Лента 4 = S дисперсия</li><li>Лента 4 = S дисперсия</li><li>Лента 5 = Z-резултат</li></ul><div>Резултатите от теста на Ман-Кендъл или Сезонен-Кендъл могат да се използват за определяне кои пиксели във вашите многоизмерни времеви серии имат статистически значима тенденция. Можете да използвате тази информация заедно с линейния, хармоничен или полиномичен анализ на тенденциите, за да извлечете значителни тенденции във вашите времеви серии. Можете да генерирате маска, включваща пиксели със значителни р-стойности, да приложите маската към многоизмерния растер и да използвате този маскиран многоизмерен растер като вход за инструмента за извършване на линеен, хармоничен или полиномен анализ на тенденцията.</div><br><div>Има три варианта на линия на тенденцията за приспособяване на тенденция към променливите стойности по размер: линейна, полиномиална и хармонична.</div><br><div>За анализ на линейна тенденция изходът е трилентов растер, както следва:</div><ul><li>Лента 1 = Наклон</li><li>Лента 2 = Прихващане</li><li>Лента 3 = Корен на средната квадратна грешка (RMSE) или грешката около линията на най-доброто съответствие</li></ul><div>За анализ на полиномични тенденции, броят на лентите в изхода зависи от полиномиалния ред. Полиномиалното напасване от втори ред произвежда четирилентов растер, както следва:</div><ul><li>Лента 1 = Polynomial_2</li><li>Лента 2 = Polynomial_1</li><li>Лента 3 = Polynomial_0</li><li>Лента 4 = RMSE</li></ul><div>Полиномното напасване от трети ред дава петлентов растер, където:</div><ul><li>Лента 1 = Полином_3</li><li>Лента 2 = Полином_2</li><li>Лента 3 = Полином_1</li><li>Лента 4 = Полином_0</li><li>Лента 5 = RMSE</li></ul><div>За анализ на хармоничните тенденции броят на лентите в изхода зависи от хармоничната честота. Когато честотата е зададена на 1, резултатът е пет-лентов растер както следва:</div><ul><li>Лента 1 = Наклон</li><li>Лента 2 =Прихващане</li><li>Лента 3 = Harmonic_sin1</li><li>Лента 4 = Harmonic_cos1</li><li>Лента 5 = RMSE</li></ul><div>Когато честотата е зададена на 2, резултатът е седем-лентов растер както следва:</div><ul><li>Лента 1 = Наклон</li><li>Лента 2 = Прихващане</li><li>Лента 3 = Harmonic_sin1</li><li>Лента 4 = Harmonic_cos1</li><li>Лента 5 = Harmonic_sin2</li><li>Лента 6 = Harmonic_cos2</li><li>Лента 7 = RMSE</li></ul><div>Дължината <strong>на параметъра на цикъла</strong> за анализ на хармоничната тенденция се използва за посочване на броя и продължителността на циклите, които очаквате да видите във вашите данни през ден или година. Например, ако очаквате данните ви да преминат през два цикъла на промяна за една година, продължителността на цикъла ще бъде 182,5 дни или 0,5 години. Ако имате данни за температурата, събрани на всеки три часа, и има един цикъл на промяна на ден, продължителността на цикъла е един ден.</div><br><div>Параметърът <strong>Честота</strong> за анализ на хармоничните тенденции се използва за описание на хармоничния модел, който да пасва на данните. Ако честотата е зададена на 1, ще се използва комбинация от линейна и хармонична крива от първи ред, за да пасне на модела. Ако честотата е 2, ще се използва комбинация от линейна хармонична крива от първи ред и хармонична крива от втори ред, за да се напаснат данните. Ако честотата е 3, ще се използва допълнителна хармонична крива от трети ред за моделиране на данните и т.н..</div><br><div>Статистическите данни за пригодността на модела могат да бъдат генерирани като незадължителни резултати. Средноквадратичната грешка (RMSE), R-квадрат и p-стойността на наклона на тенденцията могат да бъдат изчислени и символизирани. Символизирайте растерния слой на изходящата тенденция, като използвате <strong>RGB</strong> симвология и посочете статистиката като червени, зелени и сини ленти.</div><br>",
		spectralUnmixingName: "Линейно спектрално разделение",
		spectralUnmixingSnip: "Извършва класификация на подпиксели и изчислява дробното изобилие на различни типове земно покритие за отделните пиксели.",
		spectralUnmixingDesc: "Функцията за линейно спектрално смесване изчислява частичното покритие за отделни пиксели, които съдържат няколко типа земно покритие. Генерира многолентов слой, в който всяка честотна лента съответства на фракционното изобилие на всеки клас земно покритие. Например, можете да го използвате за класифициране на земното покритие на многоспектърно изображение, за да идентифицирате фотосинтезираща растителност, гола почва и мъртва или нефотосинтезираща растителност.<div><br/>Редът на изходния многолентов растер следва реда на входния спектрален профил. Броят на класовете не може да надвишава броя на честотните ленти във входния растер. Например, не можете да извлечете информация за повече от 8 класа от растер с 8 честотни ленти.</div>",
		multidimensionalFilterName: "Многоизмерен филтър",
		interpolateRasterByDimensionFunctionName: "Интерполиране на растер по измерение",
		interpolateRasterByDimensionFunctionSnip: "Интерполира многоизмерен растер при определени стойности на размерите, използвайки съседни срезове.",
		interpolateRasterByDimensionFunctionDesc: "<p>Тази функция Ви позволява да оцените стойностите в пиксели за недефиниран размер на отрязък в многоизмерен растер. Например, ако имате набор от данни, съдържащ температурата на океана на повърхностно ниво и на 100 метра под морското равнище и искате да оцените температурата на 50 метра под морското равнище, можете да използвате тази функция, за да получите оценка на тази дълбочина, като използвате дефиницията за размер По стойности.</p><p> Можете също така да намалите примера на месечен набор от данни в дневен набор от данни, като използвате дефиницията за размер По интервал и укажете стойността на параметъра Стъпка като 1 и стойността на параметъра Единица като Дни.</p><p> Използвайте дефиницията за размер По целеви растер, за да оцените стойността за Целевия растер.</p>",
		multidimensionalFilterSnip: "Създава растерен слой от многомерен набор от растерни данни или многомерен растров слой чрез нарязване на данните по определени променливи и размери.",
		multidimensionalFilterDesc: "Многомерният филтър създава многомерен растров слой чрез филтриране и извличане на подмножество променливи от многомерен растер. Например, имате многоизмерен набор от данни, който съдържа 30 години месечни данни за валежите, и искате да извлечете данни само за всеки януари, за да видите как са се променили валежите за този месец.<div><br/>Използвайте параметъра за Дефиниция на размер, за да нарязвате размери, като използвате интервал, стойност или диапазон от стойности. Например, ако разполагате с 10-годишни данни за солеността на океана, събирани ежемесечно и на всеки 2 метра дълбочина до 500 метра, можете да използвате различните опции за дефиниране на измеренията за следните сценарии. Сценарий 1: Извличане на данни за солеността през месец януари за 10-годишен период. Изберете По стойности, задайте Измерение на Стандартно време и задайте Стойности на Януари. Сценарий 2: Нарежете данните за солеността на дълбочина от 0 до 150 метра. Изберете По диапазони, задайте Измерение на Стандартно време и задайте Минимална стойност на -150 и Максимална стойност на 0. Сценарий 3: Извличане на данни за солеността през първите 10 дни на всеки януари за период от 10 години. Изберете По итерация, задайте Размер на Стандартно време, задайте Начало на първата итерация и Край на първата итерация на съответните начало и край на периода на итерация, задайте Стъпка на 1 и задайте Единица на Години.</div>",
		multidimensionalRasterName: "Многоизмерен растер",
		multidimensionalRasterSnip: "Добавя многомерни данни към картата като многомерен растерен слой.",
		multidimensionalRasterDesc: "Функцията за многомерен растер добавя многомерни данни към картата като многомерен растерен слой. Тази функция е полезна при извършване на работни процеси за растерни анализи с помощта на функционална верига.<div><br/>Поддържаните многоизмерни набори от растерни данни включват netCDF, GRIB, HDF и CRF на Esri. Поддържат се също и многомерни мозаечни набори от данни.</div>",
		optimalPathAsRasterName: "Оптималнен път като растерна функция",
		optimalPathAsRasterSnip: "Изчислява пътя с най-малки разходи от източник до дестинация.",
		optimalPathAsRasterDesc: "Тази глобална функция произвежда изходен растер, който записва оптималния път или пътища от избрани местоположения до най-близката клетка източник, определена в рамките на повърхността на натрупани разходи, по отношение на разстоянието на разходите.<div><br/>Една или повече от функциите за претеглени разходи (Натрупване на разстояния или разпределение на разстояния) обикновено трябва да бъдат изпълнени преди изпълнението на функцията за оптимален път като растер, за да се създадат входните растери за натрупване на разстояния и растери за обратна посока. Това са задължителните входни растерни слоеве за функцията за оптимален път. Стойностите на изходния оптимален път представляват броя на пътищата на дадено място. В много случаи, пътищата следват един и същ маршрут, като излизат от един източник и след това се разминават, за да стигнат до различни дестинации. Например, стойност 1 означава, че на дадено място има само един оптимален път, докато стойност 5 означава, че на това място има пет оптимални пътя, които преминават през тази клетка в изследваната област.<div><br/>Входните данни за дестинация трябва да са растерен слой. Наборът от целеви клетки се състои от всички клетки във входния растер, които имат валидни стойности. Клетките, които имат стойности NoData, не се включват в набора. Стойността нула се счита за легитимна дестинация. Растерът на местоназначението може да бъде създаден с помощта на инструментите за извличане. Ако имате функции на дестинацията или източника, можете да ги конвертирате в растер с помощта на функцията Растеризиране на обекти. Използвайте растер за натрупване на разстояние или растер за обратна посока като входни данни за растер към функцията за растеризация. Това ще гарантира, че обектът се растерзира, като се използва същият размер на клетката, обхват и проекция като другите растери, които влизат във функцията Оптимален път като растер. Функцията Оптимален път като растер може да се използва и за извеждане на пътя на най-малкото съпротивление по цифров модел на релефа (DEM). В този случай, използвайте DEM за входния растер за натрупване на разстояния и изхода от функцията Посока на потока за растера за обратна посока.</div>",
		trendName: "Прогнозиране с помощта на тренд",
		trendSnip: "Изчислява прогнозен многомерен растерен слой, като използва изходния растер на тренда от функцията за генериране на тренд или инструмента за геообработка „Генериране на растер с тренд“.",
		trendDesc: "Функцията за прогнозиране с помощта на тренд изчислява прогнозен многомерен растерен слой, като използва изходния растер с тренд от функцията за генериране на тренд или инструмента за геообработка „Генериране на растер с тренд“.",
		rasterCollectionName: "Събиране на растерни процеси",
		rasterCollectionSnip: "Обработва всяко парче в многомерен растер или всеки елемент в мозаечен растер. Тази функция може също така да агрегира няколко парчета в едно парче.",
		rasterCollectionDesc: "Функцията за обработване на колекция от растерни изображения обработва всяко парче от многомерен растер или всеки елемент от мозаечен растер. Тази функция може също да обединява няколко отрязъци в един отрязък.<div><br/>Тази функция обработва всяко парче в многомерен растер или мозаечен растер, като използва шаблон на растерна функция. Тази функция поддържа следните опции: 1. Посочете шаблон за растерна функция за функцията на елемента. Например, разполагате с мозаечен набор от данни, който съдържа 20-годишни изображения от Landsat, и искате да изчислите NDVI за всяка сцена във времевата поредица. За функция на елемента посочете шаблон за растерна функция, който съдържа растерната функция NDVI. 2. Посочете шаблон на растерна функция за функцията за обобщаване. Например, разполагате с многомерен растер, който съдържа 10-годишни данни за дневната температура, и искате да изчислите максималната температура за всяка година. В полето Функция за обобщаване задайте шаблон на растерна функция, който съдържа функцията Статистика на клетките, като операцията е зададена на Максимално. В частта Определение за обобщаване задайте Измерение на Стандартно време, задайте Тип на Ключова дума за интервал и задайте Интервал на ключовата дума на Годишно. Обърнете внимание, че ако входната мозаечна съвкупност от данни не е многомерна, функцията за обобщаване няма да спази определението за обобщаване. Функцията за обобщаване ще обобщи всички елементи или всяка група в една, ако те са дефинирани в шаблона на функцията за обобщаване. За повече информация относно използването на групи в мозаечен набор от данни вижте „Използване на елементи от мозаечен набор от данни в шаблони на растерни функции“. 3. Посочете шаблон за растерна функция за функцията за обработване. Функцията или функционалната верига в този шаблон се използва за показване на новия обработен растер. Например, задайте шаблон на растерна функция, който съдържа функцията Colormap, за да промените начина на изобразяване на обработения растерен слой. Обърнете внимание, че ако входните данни са многоизмерен растер, функцията за обработка се прилага към текущата част на дисплея. Ако входните данни са мозаечен слой или мозаечен набор от данни, функцията за обработка се прилага към мозаечния растер, като се използва първият метод за разрешаване на припокриванията. 3. Задайте шаблони за всяка комбинация от трите функции. Например, разполагате с набор от мозаечни данни, който съдържа времеви серии от изображения на Landsat, и искате да генерирате съставно изображение на максималния NDVI. За функция на елемента посочете шаблон за растерна функция, който съдържа растерната функция NDVI. За Функция за обобщаване задайте шаблон на растерна функция, който съдържа функцията Статистика на клетките, като операцията е зададена на Максимално. За функция за обработка посочете шаблон на растерна функция, който съдържа функцията Colormap. Обърнете внимание, че редът на обработка на функциите следва реда на входните параметри. Например функцията за елемент ще бъде обработена първа.</div>",
		randomName: "На случаен принцип",
		randomSnip: "Създава растер със случайни стойности на пикселите, взети от псевдослучайно разпределение. Поддържат се няколко дистрибуции и генератори на случайни числа.",
		randomDesc: "Функцията На случаен принцип създава растер със случайни стойности на пикселите, който може да се използва в шаблони на растерни функции или мозаечни набори от данни.<div><br/>Докато много функции работят върху един или повече входни растери, функцията Random не изисква входен растер. Това означава, че се държи по-скоро като набор от растерни данни, отколкото като функция, така че трябва да се внимава особено много, когато я добавяте към функционална верига или я премахвате от нея.</div>",
		shrinkName: "Свиване",
		shrinkSnip: "Свива избраните зони с определен брой клетки, като ги замества със стойността на клетката, която е най-честа в съседство.",
		shrinkDesc: "С функцията Глобално свиване можете да генерализирате или опростявате растерни изображения, като свива определени зони. Можете също така да контролирате размера на обобщението, което ще настъпи.<div><br/>Избраните от Вас зони ще се свият или ще намалят размера си, като клетките от околните зони ще се разширят в тях. Концептуално избраните стойности на зоната могат да се разглеждат като зони на преден план, докато другите стойности остават зони на заден план. Клетките в зоните на преден план могат да бъдат заменени с клетки във фоновите зони. Тънките острови вътре в зоната, които могат да се разглеждат като общи граници със зоната, също могат да бъдат заменени.<div><br/>Размерът на генерализацията може да се контролира с параметъра Брой на клетки. По подразбиране тази стойност е 1, което означава, че избраните зони ще се свият с размер, съответстващ на размера на една клетка. За да увеличите степента на обобщаване, можете да зададете по-голяма стойност за този параметър. Концептуално, това е като да стартирате инструмента толкова пъти, колкото е зададеният брой, като резултатите от предишното стартиране са входни данни за следващата итерация.</div>",
		trendToRGBName: "Тренд към цветови модели RGB",
		trendToRGBSnip: "Преобразува растер на тренд в трилентов (червен, зелен и син) растер.",
		trendToRGBDesc: "Функцията Тренд към цветови модели RGB преобразува растер на тренда в трилентов (червен, зелен и син) растер. Тренд растера се генерира от генериращата тренд растерна функция или растерната функция за Анализ на CCDC.<div><br/>Тази функция е полезна за визуализиране на данните за коефициентите на модела от функцията Генериране на тренд или функцията Анализ на CCDC. И двете функции оценяват тенденциите в променящите се стойности на пикселите, но резултатите от функциите е трудно да се интерпретират директно.<div><br/>Подобно на много растерни функции, може да се наложи да използвате Регулиране на динамичния диапазон (DRA) за по-добро показване на резултатите от тази функция.</div>",
		landTrendrName: "Анализ на LandTrendr",
		landTrendrSnip: "Оценява промените в стойностите на пикселите с течение на времето, като използва метода на Landsat за откриване на тенденции в смущенията и възстановяването (LandTrendr) и генерира растер за анализ на промяна, съдържащ резултатите от модела.",
		landTrendrDesc: "Тази растерна функция може да се използва само като вход за разпознаване на промяна с помощта на растерната функция за анализ на промените. За да генерирате растерен продукт, свържете функцията за анализ на LandTrendr с функцията Откриване на промяна чрез анализ на промяната, в шаблон за растерна функция и използвайте шаблона като вход в инструмента за геообработка Генериране на растер от растерна функция. Резултатът е растер, съдържащ информация относно времето, в което стойностите на пикселите са се променили.<div><br>Целта на тази растерна функция е да извлече промени в наблюдаван обект, така че идеалното входно многоизмерно изображение трябва да улавя последователно наблюдение през цялото време и не трябва да включва атмосферни или сензорни смущения, облаци или облачна сянка. Най-добрата практика е да се използват данни, които са нормализирани и могат да бъдат маскирани с помощта на QA лента, например продуктите с отражателна способност на повърхност на Landsat Collection 1 Surface Reflextance с облачна маска.<div><br>Функцията извършва анализ на едно изображение на година и броят на годишните отрязъци трябва да бъде равен или по-голям от стойността, посочена в <strong>параметъра за минимален брой</strong> наблюдения. Препоръчително е да имате поне шест годишни данни.<div><br>Ако имате месечни, седмични или дневни данни, се препоръчва да изберете няколко изображения от всяка година (за предпочитане от същия сезон), да премахнете облаците и облачната сянка и да комбинирате изображенията, за да генерирате едно изображение, което улавя добре наблюдението. Ако месечните, седмичните или дневните данни са предоставени като входен многоизмерен растер, функцията ще идентифицира една част за анализ въз основа на датата, най-близка до тази, предоставена в параметъра <strong>Напасване на дата</strong><div><br>Една характеристика в пейзаж често отнема време, за да се възстанови от непостоянна промяна, като например горски пожар или заразяване с насекоми. За да контролирате скоростта на възстановяване, разпозната от модела, задайте параметъра Праг на възстановяване. Различен сегмент не може да има процент на възстановяване, който е по-бърз от 1 / праг на възстановяване.<div><br>Възстановяването от промяна в пейзажа може да настъпи в положителна или отрицателна посока. Например, когато ландшафтът изпитва загуба на гора, времевата серия от стойности на индекса на растителността показва спад в стойностите на индекса, а възстановяването показва постепенно увеличаване на стойностите на растителния индекс или положителна тенденция на възстановяване. Посочете посоката на тенденцията на възстановяване с <strong>параметъра за възстановяване с увеличаваща се</strong> тенденция.",
		aggregateMultidimensionalName: "Многоизмерно обобщение",
		aggregateMultidimensionalSnip: "Комбинира съществуващи многоизмерни растерни данни с променлива по размер.",
		aggregateMultidimensionalDesc: "Обобщаващата многоизмерна функция създава многоизмерен растерен слой чрез комбиниране на съществуващи многоизмерни растерни променливи данни по размер.<div><br>Използвайте <strong>параметърът за дефиниция на размер </strong> , за да филтрирате първо входните данни, които искате да обобщите. Например, ако имате 30 годишни месечни данни, но искате да създадете обобщаващ слой само за първите 15 години, можете да използвате <strong>параметърът за дефиниция на размер </strong> , за да посочите годините, които да включите в анализа.<div><br><ul><li>Извлечете данни за солеността за месец януари за 10-годишния период. Изберете <strong>По стойности,</strong>, задайте <strong>Измерение</strong> на <strong>Стандартно време</strong>, и задайте <strong>Стойности </strong> на <strong>януари</strong>.</li><li>Разделете данните за солеността на дълбочина от 0 до 150 метра. Изберете <strong>По диапазони</strong>, задайте <strong>Размер</strong> на <strong>StdZ</strong>, и задайте <strong>минималната стойност</strong> на <strong>-150</strong> и <strong>максималната стойност</strong> на <strong>0</strong>.</li><li>Извличайте данни за солеността за първите 10 дни за всеки януари за период от 10 години. Изберете <strong>По итерация</strong>, задайте <strong>Измерване</strong> на <strong>Стандартно време </strong>, задайте <strong>Начало на първата итерация</strong> и <strong>Край на първата итерация</strong> на съответните начало и край на периода на итерация, задайте <strong>Стъпка</strong> на <strong>1</strong>, и задайте<strong>Единица</strong> на <strong>години</strong>.</li></ul><div><br>Използвайте <strong>параметрите на Дефиницията за обобшаване</strong> , за да изберете величината за оценка и интервала на обобщаване, като използвате ключова дума, стойност или диапазон от стойности. Например, ако имате 30-годишни данни за температурата на морската повърхност, събирани ежедневно и на всеки 5 метра до 100 метра дълбочина, можете да използвате различните опции за интервали за следните сценарии:<div><br><ul><li>Обобщете дневните данни за температурата в месечни данни, където резултатът е многоизмерен растер с 12 времеви отрязъка, а всеки фрагмент е сборът от всеки месец през всички години. Изберете <strong> ключовата дума Интервал </strong> и задайте ключовата дума на <strong> Повтарящи се месечно </strong>.</li><li>Обобщете дневните данни за температурата в месечни данни, където резултатът е многоизмерен растер с 360 отрязъци или 12 временни отрязъци годишно (30 години x 12 месеца = 360 отрязъци). Изберете <strong> ключовата дума Интервал </strong>и задайте ключовата дума на <strong>месечно</strong>.</li><li>Обобщете месечните данни за температурата на 4-месечни интервали. Изберете <strong> Стойност на интервал </strong>, задайте <strong>стойността на интервала </strong> на 4, и задайте <strong> мерната единици </strong> на <strong>Месеци</strong>.</li><li>Обобщете данните за температурата от 0 до 25 метра, след това от 25 до 50 метра, след това от 50 до 100 метра. Изберете <strong> Обхвати на интервал </strong> и определете минималните и максималните дълбочини като <strong>0 25; 25 50; 50 100</strong>.</li></ul>",
		mergeRastersName: "Сливане на растери",
		mergeRastersSnip: "Комбинира множество растерни данни пространствено или чрез променливи и размери",
		mergeRastersDesc: "Тази функция създава обединен растер от списък с растери. Например, ако имате мозаечен набор от данни, който съдържа 30 години месечни данни за валежите и друг набор от данни с 10 години месечни данни за температурата, можете да ги комбинирате в многоизмерен растер с двете променливи. <div><br>Ако входните многоизмерни растери съдържат различни променливи, изходният многоизмерен растер ще съдържа всички променливи. <div><br>Ако входните многоизмерни растери съдържат различни размери или стойности на размери, изходният многоизмерен растер ще включва всички размери и стойности на размери. <div><br>Ако входните многоизмерни растери съдържат едни и същи размери и променливи, но различни пространствени разстояния, изходният многоизмерен растер ще включва променливите и размерите в обединените пространствени обхвати.<div><br>Тази функция може да се използва и когато имате множество растери, които искате да се третират като един елемент, като например изчисляване на една и съща статистика за всички, или при балансиране на цветовете, така че да не се налага да балансирате цветовете на всяко изображение поотделно. Това е полезно при работа с изображения, съхранявани като отделни плочки поради ограничения на размера на файла; по този начин плочките ще бъдат третирани като част от едно и също изображение.",
		boundaryCleanName: "Изчистване на граница",
		boundaryCleanSnip: "Изглажда границата между зоните.",
		boundaryCleanDesc: "<p>Функцията обобщава или опростява растери чрез изглаждане на границите между зоните. Функцията предоставя опции за контролиране как клетките от зоните във входа влияят върху намаляване на вариациите в изображението и размера на намаляване на вариациите в изображението, което ще бъде приложено. Всяка входна клетка се оценява с помощта на осемте си непосредствени съседи.</p><p>Процесът на намаляване на вариациите в изображението първо сортира съседните клетки по определен приоритет. Приоритетът определя коя зона от съседните клетки може да замени стойността на обработващата клетка в изхода.</p><p>Приоритетът може да се основава или на стойността на зоните, или на размера на зоните. Параметърът <strong>Тип сортиране</strong> определя типа сортиране, който да се използва. </p><p>Настройката <strong> по подразбиране Не сортирай </strong> оценява приоритета въз основа на стойността на зоните. Клетките от зони с по-големи стойности ще имат по-висок приоритет за разширяване в зони с по-малки стойности.</p><p>Размерът или общата площ на зоните могат да се използват за сортиране на приоритета. С настройката <strong>Намаляващ </strong> зоните се сортират по размер в низходящ ред. Зоните с по-големи общи области ще имат приоритет да се разширяват в зони с по-малки площи. С настройката <strong>Възходящ </strong> , обратното е вярно: зоните с по-малки общи области ще имат приоритет да се разширяват в зони с по-големи общи области.</p><p> Количеството на намаляване на вариациите в изображението се контролира от параметъра <strong> Стартиране на разширяване и параметърът за двойно свиване,</strong> който определя колко пъти ще се извършва процесът на разширяване и свиване.</p><p>При немаркирана настройка процесът на разширяване и свиване се извършва веднъж. С маркирана настройка процесът на разширяване и свиване се извършва два пъти, което води до допълнителна степен на изглаждане на границата на зоните.</p><p>Ако стойностите на всичките осем съседни клетки са същите като обработващата клетка, изходната клетка ще запази стойността на входната клетка.</p>",
		predictUsingRegressionName: "Прогнозиране с помощта на Регресия",
		predictUsingRegressionSnip: "Изчислява прогнозен растер, базиран на входове от растерни данни и модел на регресия. Регресионният модел е изходът от <strong> Регресионния обучителен модел на произволни дървета </strong> растер инструмент за геообработка.",
		predictUsingRegressionDesc: "<p>Регресионният модел е дефиниран във файл за дефиниция на регресия на Esri (.ecd). Той съдържа цялата информация за конкретен набор от данни или набор от набори от данни и регресионния модел и се генерира от <strong> Регресионния обучителен модел на произволни дървета </strong> растер инструмент за геообработка..</p><p>Входът може да бъде еднолентов, многолентов или многоизмерен растер, или списък от тези типове. Типовете на входните растери трябва да са от същия тип растер, обучен от регресионния модел.</p><ul><li>Когато входът е многолентов растер, всяка лента се третира като предикторна променлива. Лентите трябва да са в същия ред като многолентовия вход за инструмента за обучение на регресионния модел.</li><li>Когато входът е многоизмерен растер, всяка променлива се третира като предикторна променлива и променливата трябва да е с единична лента и да има измерване на времето. Редът и имената на променливите трябва да са същите като входните данни, когато регресионният модел е бил обучен. Резултатът е многоизмерен растер.</li><li>Входът може да бъде списък с елементи. Броят на елементите и редът на елементите трябва да съвпадат с входа, когато регресионният модел е обучен.</li></ul>",
		dimensionalMovingStatisticsName: "Статистика за подвижни или текущи измерения",
		dimensionalMovingStatisticsSnip: "Изчислява статистически данни за движещ се прозорец върху многоизмерни данни по определени размери.",
		dimensionalMovingStatisticsDesc: "<p>Функцията Статистика за преместване на измерения изчислява различни статистически данни в рамките на предварително дефиниран прозорец за всички стойности на измерения по едно измерение. Тази функция приема многоизмерен растерен слой като вход и създава многоизмерен растерен слой като изход, който има същия размер като входния слой. </p><p>Можете да посочите размер, за който стойностите на размерите се вземат предвид по време на изчисляването. По подразбиране се изчислява по първото непространствено измерение. Можете също да зададете размер на прозореца, като зададете параметрите Прозорец назад и Прозорец напред.</p><p>Когато Типът на статистиката е зададен на Процентил, параметрите Стойност на процентил и Тип на интерполация на процентил стават достъпни. Можете да използвате тези параметри, за да посочите процентила за изчисляване и съответно да изберете типа на интерполация, който да използвате. Когато Типът на статистиката е зададен на Осреднена стойност на окръжност, параметърът Стойност на кръговата обвивка става наличен. Стойността на кръговата обвивка се използва за преобразуване на линейна стойност в диапазона на дадена осреднена стойност на окръжност.</p>",
		terrainFlattenFunctionName: "Изравняване на терена",
		terrainFlattenFunctionSnip: "Коригира входните данни от радар със синтетична бленда (SAR) за радиометрични изкривявания, дължащи се на топография.",
		terrainFlattenFunctionDesc: "<p>Растерната функция за изравняване на терена коригира входните данни от радар със синтетична бленда (SAR) за радиометрични изкривявания, дължащи се на топография.</p><p>Входните радарни данни трябва първо да бъдат калибрирани на бета нула. Използвайте инструмента Прилагане на радиометрично калибриране, за да калибрирате радарните данни до бета нула.</p><p> Ако входната DEM не обхваща целия набор от данни за SAR, инструментът ще изведе стойности на NoData за пикселите извън границата на DEM за гама нула, сигма нула, площ на разсейване и изходи с геометрични изкривявания. За изхода на маската за геометрични изкривявания инструментът ще изведе неопределени стойности за пиксели извън границата на DEM.</p><p>Входящите DEM трябва да са в WGS 1984 (EPSG:4326) географска координатна система.</p>",
		createColorCompositeFunctionName: "Създаване на цветен композит",
		createColorCompositeFunctionSnip: "Създава трилентов растер от многолентов растерен набор от данни, в който всяка лента може да използва алгебрично изчисление въз основа на линейна алгебра.",
		createColorCompositeFunctionDesc: "<p>Функцията Създаване на цветен композитен растер създава трилентов растер от многолентов растерен набор от данни, в който всяка лента може да използва алгебрично изчисление въз основа на линейна алгебра.</p><p>Когато дефинирате лентов аритметичен алгоритъм, можете да въведете едноредова алгебрична формула за всеки израз за създаване на многолентов изход. Поддържаните оператори са унарни, плюс (+), минус (-), пъти (*) и разделяне (/). </p><p>Когато използвате идентификатор на лента в израз, идентифицирайте лентата, като поставите префикс B или b към номера на лентата.</p><p>Общата комбинация от лента, използвана за радар със синтетична апертура (SAR) в линейни единици, е VV за червено, VH за зелено и VV/VH за синьо. Ако входните данни са в децибели, комбинацията от лентата трябва да бъде VV за червено, VH за зелено и VV-VH за синьо.</p>",
		surfaceParametersName: "Параметри на повърхнината",
		surfaceParametersSnip: "Определя параметри на повърхностен растер, като аспект, наклон и няколко типа кривини, използвайки геодезични методи.",
		surfaceParametersDesc: "<p>Функцията Параметри на повърхнината определя параметри на повърхностен растер, като аспект, наклон и няколко типа кривини, използвайки геодезични методи.</p><p> Тази функция може да се използва за следните приложения:</p><ul><li> Изчисляване на аспект и наклон с помощта на геодезични методи.</li><li>Изчисляване на различни типове кривини от входен повърхностен растер, например <strong>тангенциална (нормална контурна) кривина</strong>, която характеризира топографската конвергенция и дивергенция на потока през повърхността.</li></ul>",
		leastCostCorridorName: "Коридор с най-ниска цена",
		leastCostCorridorSnip: "Изчислява сумата на натрупаните разходи за разстояние за две растерни изображения с опция за прилагане на праг въз основа на процент или натрупване на разходи.",
		leastCostCorridorDesc: "<p>Входните растери трябва да бъдат растери за натрупване на разстояние и растери за обратна посока, резуптат от функцията за <strong>Натрупване на разстояние</strong> или функцията за <strong>Разпределение на разстояние</strong>. Те трябва да се основават на разходното разстояние и едни и същи настройки на параметрите трябва да се използват при създаването на слоевете за всеки източник. При създаването на тези растери не трябва да се използват параметри, които зависят от насочеността (хоризонтален фактор, вертикален фактор и посока на движение).</p><p>Стойностите в изходния растера на коридор са сумата от натрупаните разходи за достигане на дадено местоположение със същите единици като входните растери на натрупаните разходи за разстояние.</p><p>Ако определена стойност на <strong>Праг</strong> е по-голяма от максималния натрупан разход, когато двата растера за натрупване на разстояние се сумират, изходният растер на коридор ще покрие същата област като входните натрупващи се растери.</p><p>Ако определена прагова стойност е по-малка от минималната стойност в растера на коридора, се връща предупредително съобщение и изходният растер ще бъде празен.</p><p>Изходният растер на коридор може да съдържа клетки с малко по-високи натрупващи се разходи от праговата стойност. Това е от растери за обратна посока, използващи клетки, на които са присвоени малко по-високи разходи от прага за свързване на несвързани клетки към коридора.</p>",
		geometricMedianName: "Геометрична медиана",
		geometricMedianSnip: "Функцията Геометрична медиана изчислява геометричната медиана на пикселите във времеви серии от многолентови изображения.",
		geometricMedianDesc: "<p>Тази функция намалява шума и отклоненията в изображенията на времеви серии чрез изчисляване на геометричен среден пиксел за всеки пикселен масив в стека от изображения. Алгоритъмът поддържа спектралните връзки между лентите в пикселните спектри, така че изходът може да се използва при анализ, като вегетационни индекси.</p><p>Облаците и сенките трябва да бъдат маскирани с помощта на лентата QA на набора от данни, преди да приложите тази функция.</p><p>Ако входното изображение е с плаваща точка, като повърхностно отразяване със стойности между 0 и 1, епсилон стойност от 0,001 трябва да даде качествени резултати.</p>"
	},
	rfxArgs: {
		rasterName: "Растер",
		colorSchemeTypeName: "Тип цветова схема",
		colormapName: "Цвят на карта",
		colormapNameName: "Име на цветна карта",
		colorRampName: "Гама от цветове",
		contrastOffsetName: "Изместване на контраст",
		brightnessOffsetName: "Изместване на яркост",
		methodName: "Метод",
		bandNamesName: "Имена на честотни ленти",
		bandWavelengthsName: "Дължина на вълната на честотната лента",
		bandIdsName: "Идентификатори на честотни ленти",
		missingBandActionName: "Липсващо действие на честотната лента",
		conversionParametersName: "Параметри за конверсия",
		hillshadeTypeName: "Тип визуален релеф",
		azimuthName: "Азимут",
		altitudeName: "Надморска височина",
		slopeTypeName: "Мащабиране",
		zFactorName: "Z Фактор",
		PSPowerName: "Степен на размер на пиксели",
		PSZFactorName: "Фактор на размер на пиксели",
		removeEdgeEffectName: "Деактивирайте интерполацията на ръбовия пиксел по подразбиране",
		fromUnitName: "От мерна единица",
		toUnitName: "На мерна единица",
		rasterTypeName: "Тип",
		minName: "Минимален изход",
		maxName: "Максимален изход",
		minPercentName: "Минимален процент за изрязване",
		maxPercentName: "Максимален процент за изрязване",
		numberOfStandardDeviationName: "Брой стандартни отклонения",
		sigmoidStrengthLevelName: "Ниво на сигмоидна сила",
		estimateStatsHistogramName: "Приблизителна статистика",
		DRAName: "Регулиране на динамичния диапазон",
		statisticsName: "Статистика",
		histogramsName: "Хистограми",
		statisticsHistogramName: "Определете статистика и хистограма",
		computeGammaName: "Авто гама",
		useGammaName: "Използване на гама",
		gammaName: "Гама",
		inputNamesName: "Имена",
		expressionName: "Израз",
		cellsizeTypeName: "Тип размер на клетка",
		extentTypeName: "Тип обхват",
		classifierDefinitionFileName: "Файл за входно определение",
		raster1Name: "Растер1",
		raster2Name: "Растер2",
		raster3Name: "Растер3",
		trueRasterName: "Истински растер",
		falseRasterName: "Фалшив растер",
		noDataInterpretationName: "Няма интерпретация на данни",
		noDataValuesName: "NoData стойности",
		includedRangesName: "Включени диапазони",
		curvatureTypeName: "Тип кривина",
		rastersName: "Растери",
		attributeTableName: "Таблица",
		attributeTableTypeName: "Тип таблица",
		rowsName: "Брой редове",
		columnsName: "Брой колони",
		kernelName: "Ядро",
		mirrorEdgesName: "Огледални ръбове",
		influencesName: "Влияния",
		fieldsName: "Полета",
		remapsName: "Пренастройте таблица",
		evalFromName: "Скала за оценка от",
		evalToName: "Скала за оценка до",
		weightsName: "Тегла",
		DEMName: "DEM (Цифров височинен модел)",
		shortRangeIDWRadiusName: "Радиус IDW на къси разстояния",
		maxVoidWidthName: "Максимална ширина на празното пространство",
		sigmaGaussianName: "Адаптивно намаляване на вариациите в изображение",
		contourTypeName: "Тип контур",
		zBaseName: "Z база",
		numberOfContoursName: "Брой контури",
		contourIntervalName: "Контурен интервал",
		nthContourLineInBoldName: "N -та контурна линия с удебелен шрифт",
		featureClassName: "Входни данни",
		classIndexFieldName: "Поле",
		resolveOverlapMethodName: "Разрешаване на метода на припокриване",
		resamplingTypeName: "Тип интерполиране на нови стойности на клетки",
		inputCellsizeName: "Въведете размер на клетката",
		outputCellsizeName: "Изходен размер на клетката",
		pointFeatureClassName: "Изходни точки",
		maxGrowthRadiusFieldName: "Максимално поле на радиус на растеж",
		similarityThresholdFieldName: "Поле на прага на подобие",
		fillValueFieldName: "Запълване на поле за стойност",
		spectralDetailName: "Спектрални детайли [1..20]",
		spatialDetailName: "Пространствени детайли [1..20]",
		minNumPixelsPerSegmentName: "Минимален размер на сегмента в пиксели",
		boundariesOnlyName: "Само граници на сегмент",
		statisticsTypeName: "Тип статистика",
		fillNoDataOnlyName: "Попълнете само пиксели NoData",
		inputDataTypeName: "Тип входни данни",
		angleReferenceSystemName: "Ъглова координатна система",
		outputDataTypeName: "Тип изходни данни",
		inputSamplePointFeatureClassName: "Входни проби",
		valueFieldName: "Стойност на поле",
		rasterInfoName: "Растерна информация",
		interpolationMethodName: "Метод за интерполация",
		radiusName: "Радиус",
		radianceGainValuesName: "Получаване на сияние",
		radianceBiasValuesName: "Отклонение на сияние",
		reflectedGainValuesName: "Получаване на отражателна способност",
		reflectedBiasValuesName: "Отклонение на отражателна способност",
		sunElevationName: "Височина на Слънцето (градуси)",
		albedoName: "Албедо",
		scaleFactorName: "Фактор за мащаб",
		offsetName: "Изместване",
		thresholdTypeName: "Тип гранична стойност",
		thresholdsName: "Гранична стойност",
		undefinedClassName: "Неопределен клас",
		minValueName: "Мин.",
		maxValueName: "Макс.",
		operationName: "Операция",
		clippingTypeName: "Тип изрязване",
		clippingGeometryName: "Изрязваща геометрия / Растер",
		extentName: "Изходен обхват",
		useInputFeatureGeometryName: "Използвайте входни данни за изрязване на геометрията",
		remapDefinitionTypeName: "Тип дефиниция на повторно картографиране",
		inputRangeName: "Входни диапазони",
		outputValuesName: "Изходни стойности",
		noDataRangeName: "NoData диапазони",
		inputFieldName: "Входно поле",
		outputFieldName: "Изходно поле",
		inputMaxFieldName: "Входно максимално поле (по избор)",
		remapTableTypeName: "Тип на таблицата за пренастройване",
		allowUnmatchedName: "Разрешаване на несъвпадащи стойности на пиксели",
		changeMissingValuesToNoDataName: "Променете липсващите стойности на NoData",
		visibleBandIDName: "Видим идентификатор на честотната лента",
		infraredBandIDName: "Идентификатор на инфрачервена честотна лента",
		scientificOutputName: "Научни резултати",
		bandIndexesName: "Индекси на честотна лента",
		constantName: "Константност",
		weightName: "Тегло",
		minimumName: "Минимални",
		maximumName: "Максимални",
		sourceDataName: "Източник на растер",
		sourceFieldName: "Поле на източника",
		costRasterName: "Растер на разходите",
		maxDistanceName: "Максимално разстояние",
		valueRasterName: "Растер за стойност",
		costMultiplierName: "Множител за прилагане към разходите",
		startCostName: "Начален разход",
		accumCostResistanceRateName: "Натрупващ процент на устойчивост на разходите",
		capacityName: "Капацитет",
		travelDirectionName: "Посока на пътуване",
		cellSizeName: "Размер на клетка",
		populationFieldName: "Поле за население",
		areaUnitsName: "Мерни единици за област",
		outputValueTypeName: "Стойности на изходна клетка",
		barriersName: "Входни бариери",
		destinationDataName: "Растер на дестинация",
		destinationFieldName: "Поле за дестинация",
		pathTypeName: "Тип път",
		observerFeaturesName: "Обекти на наблюдател",
		analysisMethodName: "Метод на анализ",
		analysisTypeName: "Тип анализ",
		verticalErrorName: "Вертикална грешка",
		refractivityCoefficientName: "Коефициент на пречупване",
		surfaceOffsetName: "Изместване на повърхност",
		observerElevationName: "Височина на наблюдател",
		observerOffsetName: "Изместване на наблюдател",
		innerRadiusName: "Вътрешен радиус",
		innerRadiusIs3DDistanceName: "Вътрешният радиус е 3D разстояние",
		outerRadiusName: "Външен радиус",
		outerRadiusIs3DDistanceName: "Външният радиус е 3D разстояние",
		horizontalStartAngleName: "Хоризонтален начален ъгъл",
		horizontalEndAngleName: "Хоризонтален краен ъгъл",
		verticalUpperAngleName: "Вертикален горен ъгъл",
		verticalLowerAngleName: "Вертикален долен ъгъл",
		zoneDataName: "Растер на зона",
		zoneFieldName: "Поле на зона",
		ignoreNoDataName: "Игнорирайте NoData в изчисленията",
		temperatureRasterName: "Температурен растер",
		inTemperatureUnitsName: "Мерни единици за температура",
		outHeatIndexTemperatureUnitsName: "Мерни единици за топлинен индекс",
		relativeHumidityRasterName: "Растер на относителна влажност",
		outWindChillTemperatureUnitsName: "Мерни единици за студен вятър",
		windSpeedRasterName: "Растер скорост на вятъра",
		inWindSpeedUnitsName: "Мерни единици за скорост на вятъра",
		valueName: "Стойност",
		propertyName: "Име на свойство",
		jsonName: "Метаданни JSON",
		zoneTableName: "Таблица със зонални атрибути",
		attributeFieldNames: "Имена на полета на атрибутите",
		backgroundName: "Стойност на фон",
		whereClauseName: "Критерии WHERE",
		minimumValueFieldName: "Име на поле за минимална стойност",
		maximumValueFieldName: "Име на поле за максимална стойност",
		outValueFieldName: "Име на поле за изходна стойност",
		defaultValueName: "Изходна стойност по подразбиране",
		conversionMatrixName: "Матрица за преобразуване",
		IsPseudoColorOutputName: "Е псевдо цветен изход",
		unmappedAsRandomColorName: "Случайно присвояване на цвят на некартографирани пиксели",
		distanceMethodName: "Метод за разстояние",
		flowDirRasterName: "Растер на посоката на поток",
		pourPointName: "Растер с точка(и) на изливане",
		pourPointFieldName: "Поле на точка на изливане",
		constantZName: "Константа Z",
		zOffsetName: "Изместване Z",
		geoIdName: "Геоид",
		calibrationTypeName: "Тип калибриране",
		filterTypeName: "Тип филтър",
		filterSizeName: "Размер на филтър",
		noiseModelName: "Модел на шум",
		noiseVarianceName: "Отклонение на шум",
		additiveNoiseMeanName: "Осреднена стойност на допълнителен шум",
		multiplicativeNoiseMeanName: "Осреднена стойност на мултипликативен шум",
		numberofLooksName: "Брой изгледи",
		dampingFactorName: "Коефициент на затихване",
		maskRasterName: "Растерна маска",
		nibbleValuesName: "Използвайте стойности NoData, ако те са най-близкият съсед",
		nibbleNoDataName: "Откъсване на NoData клетки",
		zLimitName: "Z ограничение",
		flowDirectionTypeName: "Тип посока на поток",
		weightRasterName: "Растер за тегло",
		forceEdgeName: "Форсирайте всички крайни клетки да изтекат навън",
		streamRasterName: "Растер на поток",
		surfaceRasterName: "Растер на повърхност",
		conversionType: "Тип конверсия",
		distanceRaster1: "Растер за разстояние 1",
		distanceRaster2: "Растер за разстояние 2",
		costDistanceRaster: "Растер за разстояние на разходите",
		costBacklinkRaster: "Разходи за растерни обратни връзки",
		overridesName: "Замени",
		fieldName: "Поле",
		signatureFileOrUrl: "Файл с подпис или URL адрес",
		redName: "Червен",
		greenName: "Зелен",
		blueName: "Син",
		infraredName: "Инфрачервен",
		panchromaticName: "Панхроматичен",
		multispectralName: "Мултиспектрален",
		pansharpeningType: "Изострено изображение",
		sensorName: "Сензор",
		spatialReferenceName: "Пространствено отношение",
		xCellsizeName: "Размер на клетка Х",
		yCellsizeName: "Размер на клетка Y",
		xOriginName: "X точка на регистрация",
		yOriginName: "Y точка на регистрация",
		percentileName: "Перцентилна стойност",
		neighborhoodType: "Тип съседство",
		widthName: "Ширина",
		heightName: "Височина",
		startAngleName: "Начален ъгъл",
		endAngleName: "Краен ъгъл",
		neighborhoodValues: "Стойности на съседсто",
		horizontalRaster: "Хоризонтален растер",
		horizontalFactor: "Хоризонтален фактор",
		verticalRaster: "Вертикален растер",
		verticalFactor: "Вертикален фактор",
		streamRaster: "Растер на поток",
		flowDirRaster: "Растер на посоката на поток",
		numberNeighborCells: "Брой съседни клетки",
		zoneConnectivity: "Свързаност на зона",
		addLinkBehavior: "Добавяне на връзка",
		excludedValue: "Изключена стойност",
		constantFillCheck: "Генериране на растер за запълване от константа",
		fillRaster: "Растер за запълване",
		constantFillValue: "Постоянна стойност",
		inputBitPositions: "Входен бит",
		outputBitPositions: "Изходен бит",
		distanceTypeName: "Тип разстояние",
		barrierDataName: "Растерни бариери",
		pourPointDataName: "Растер с точка на изливане",
		accumulationRasterName: "Растер за акумулиране на потока",
		snapDistanceName: "Разстояние на прилепване",
		orderMethodName: "Метод за поръчка",
		directionMeasurementName: "Посока на измерване",
		processAsMultiband: "Обработка като многолентов процес",
		processMultidimensional: "Процесът като многоизмерен",
		forceFlowDirectionConvention: "Конвенция за сила на посоката на потока за растер за обратна връзка",
		initialAccumulation: "Първоначално натрупване",
		maximumAccumulation: "Максимално натрупване",
		sourceLocationBands: "Генерирайте реда и колоната на източника като допълнителни ленти в изхода",
		backDirectionBand: "Генериране на обратна посока като допълнителна лента в изхода",
		numberOfCells: "Брой клетки",
		zoneValues: "Стойности на зона",
		shrinkMethod: "Метод за свиване",
		expandMethod: "Метод за разширяване",
		inputSpectralProfileType: "Тип спектрален профил",
		spectralProfileFileName: "Спектрален профил",
		trainingFeatureFileName: "Обект за обучение",
		nonNegative: "Неотрицателна",
		sumToOne: "Сума към едно",
		randomDistribution: "Разпределение",
		meanName: "Осреднена стойност",
		probabilityName: "Вероятност",
		alphaName: "Alpha",
		betaName: "Бета",
		rName: "R",
		nName: "С",
		seed: "Семена",
		randomNumberGenerator: "Генератор на случайни числа",
		cellFactor: "Фактор за клетка",
		aggregationType: "Техника за обобщаване",
		extentHandling: "Ако е необходимо, разширете обхвата",
		trendAnalysisDimensionName: "Име на размер",
		trendAnalysisType: "Тип тенденция",
		harmonicFrequency: "Хармонична честота",
		polynomialOrder: "Полиномиален ред",
		cycleLengthName: "Дължина на цикъл",
		trendAnalysisRMSE: "RMSE",
		trendAnalysisR2: "R-квадрат",
		trendAnalysisSlopePValue: "P-стойност на коефициент на наклон",
		trendAnalysisSeasonalPeriod: "Сезонен период",
		cycleUnitName: "Единица за цикъл",
		predictDimensionValues: "Стойности",
		dimensionDefinitionType: "Дефиниция за размер",
		predictDimensionStart: "Начало",
		predictDimensionEnd: "Край",
		predictDimensionInterval: "Интервал на стойност",
		dimensionUnit: "Мерна единица",
		interpolationCellsizeName: "Интерполация на размер на клетка",
		variableName: "Променливи",
		dimensionlessName: "Безразмерни",
		mdimDefinition: "Дефиниция за размер",
		dimensionName: "Размер",
		iterationStart: "Начало на първата итерация",
		iterationEnd: "Край на първата итерация",
		intervalStart: "Начало на интервал",
		intervalEnd: "Край на интервал",
		stepName: "Стъпка",
		rangesName: "Диапазони",
		minValue: "Минимална стойност",
		maxValue: "Максимална стойност",
		changeAnalysisRasterName: "Промяна на Анализ за растер",
		changeTypeName: "Тип смяна",
		segmentDate: "Дата на сегмент",
		changeDirectionName: "Смяна на посоката",
		maxNumChangesName: "Максимален брой промени",
		filterByYear: "Филтриране по години",
		minimumYear: "Минимална стойност",
		maximumYear: "Максимална стойност",
		filterByDuration: "Филтриране по продължителност",
		minimumDuration: "Минимална продължителност",
		maximumDuration: "Максимална продължителност",
		filterByMagnitude: "Филтриране по величина",
		minimumMagnitude: "Минимална величина",
		maximumMagnitude: "Максимална величина",
		filterByStartValue: "Филтриране по начална стойност",
		minimumStartValue: "Минимална начална стойност",
		maximumStartValue: "Максимална начална стойност",
		filterByEndValue: "Филтриране по крайна стойност",
		minimumEndValue: "Минимална крайна стойност",
		maximumEndValue: "Максимална крайна стойност",
		modelTypeName: "Тип модел",
		fromRasterName: "От растер",
		toRasterName: "Към растер",
		computeChangeMethod: "Метод за изчисление на промяна",
		fromClassValues: "От стойности на клас (пример: 2 5)",
		toClassValues: "Към стойности на клас (пример: 2 5)",
		keepMethod: "Метод за филтриране",
		useColorMethod: "Определяне на преходните цветове",
		detectChangeBands: "Ленти за откриване на промяна (започва от 0)",
		tmaskBands: "Ленти за временна маскировка (започва от 0)",
		chiSquaredThreshold: "Чи-квадратен праг за откриване на промяна",
		minAnomaly: "Наблюдения на минимални последователни аномалии",
		updatingFrequency: "Обновяване на честотата на монтаж (в години)",
		distanceAccumulationRasterName: "Растер за натрупване на разстояние",
		costBackdirectionRasterName: "Растер за посока назад или Растер за посока на потока",
		rasterCollectionName: "Колекция растери",
		itemFunctionName: "Функция на елемент",
		aggregationFunctionName: "Функция за обобщаване",
		processingFunctionName: "Функция за обработка",
		aggregationDefinitionName: "Дефиниция за обобщаване",
		queryGeometryName: "Геометрия на заявка",
		factorFunctionZeroFactor: "Нулев фактор",
		factorFunctionCutAngle: "Ъгъл на отрязване",
		factorFunctionSideFactor: "Страничен фактор",
		factorFunctionSlope: "Наклон",
		factorFunctionLowCutAngle: "Нисък ъгъл на отрязване",
		factorFunctionHighCutAngle: "Висок ъгъл на отрязване",
		factorFunctionCosPower: "Косинусова сила",
		factorFunctionSecPower: "Секуща сила",
		factorFunctionTablePath: "Път на таблицата",
		processingBand: "Обработваща честотна лента",
		processingBandName: "Име на обработваща честотна лента",
		snappingDate: "Дата на напасване",
		maxNumSegments: "Максимален брой сегменти",
		vertexCountOvershoot: "Пререгулиране на броя на вертекс",
		spikeThreshold: "Гранична стойност на анормална точка",
		recoveryThreshold: "Възстановяване на гранична стойност",
		minNumObs: "Минимален брой на наблюдения",
		pValueThreshold: "Граница на P-стойност",
		bestModelProportion: "Най-добър пропорционален модел",
		preventOneYearRecovery: "Предотвратете едногодишно възстановяване",
		recoveryIncreaseTrend: "Възстановяването има нарастваща тенденция",
		outputOtherBands: "Извеждане на други честотни ленти",
		sortType: "Тип сортиране",
		numberOfRuns: "Изпълнете разширяване и свиване два пъти",
		percentileValue: "Перцентилна стойност",
		percentileInterpolationType: "Тип перцентилна интерполация",
		rasterInfoProperty: "Свойство",
		rasterInfoValue: "Стойност",
		rasterInfoColumns: "Колони",
		rasterInfoRows: "Редове",
		rasterInfoBandCount: "Брой честотни ленти",
		rasterInfoPixelSizeX: "Размер на клетка Х",
		rasterInfoPixelSizeY: "Размер на клетка Y",
		rasterInfoPixelType: "Тип пиксели",
		rasterExtentTop: "Горен",
		rasterExtentBottom: "Най-долу",
		rasterExtentLeft: "Ляво",
		rasterExtentRight: "Дясно",
		rasterStatisticsNotCalculated: "Статистиката не е изчислена.",
		spatialReferenceProjection: "Проекция",
		spatialReferenceWkid: "WKID",
		spatialReferenceLatestWkid: "Предишно WKID",
		spatialReferenceWkt: "WKT",
		spatialReferenceVcsWkid: "VCSWKID",
		spatialReferenceLatestVcsWkid: "Предишно VCSWKID",
		spatialReferenceAuthority: "Авторитети",
		spatialReferenceLinearUnit: "Линейна единица",
		spatialReferenceAngularUnit: "Ъглова мерна единица",
		spatialReferenceFalseEasting: "Невярно източно",
		spatialReferenceFalseNorthing: "Невярно северно",
		spatialReferenceCentralMeridian: "Централен меридиан",
		spatialReferencePrimeMeridian: "Нулев меридиан",
		spatialReferenceStandardParallel1: "Стандартен паралел 1",
		spatialReferenceStandardParallel2: "Стандартен паралел 2",
		spatialReferenceLatitudeOfOrigin: "Географска ширина на произход",
		spatialReferenceAuxiliarySphereType: "Тип спомагателна сфера",
		spatialReferenceDatum: "Данни",
		spatialReferenceSpheroid: "Сфероид",
		spatialReferenceSemimajorAxis: "Голяма полуос",
		spatialReferenceSemiminorAxis: "Малка полуос",
		spatialReferenceInverseFlattening: "Обратно изравняване",
		inputDefinitionFileName: "Файл за входно определение",
		deleteName: "Изтриване",
		addVariableName: "Добавете променлива",
		maxNumPixelsPerSegment: "Максимален размер на сегмента в пиксели",
		forwardWindowName: "Прозорец напред",
		backwardWindowName: "Прозорец назад",
		noDataHandlingName: "Обработка на NoData",
		circularWrapValueName: "Стойност на кръговата обвивка",
		fromClassNameFieldName: "Име на полето за имена на клас в От растер",
		toClassNameFieldName: "Име на полето за имена на клас в Към растер",
		targetRasterName: "Целеви растер",
		circularWrapValue: "Стойност на кръговата обвивка",
		bandIndexesR: "Червен израз",
		bandIndexesG: "Зелен израз",
		bandIndexesB: "Син израз",
		exampleName: "Пример",
		inputName: "Вход",
		outputName: "Изход",
		optionalName: "По избор",
		browseDefinitionFile: "Преглед на файл за определение",
		selectDefinitionFile: "Избор на файл за входно определение",
		inputDefinitionURL: "URL на файл за входно определение",
		enterDefinitionFileURL: "Въведете URL на файл за определение",
		browseXMLFile: "Преглед на XML файл",
		selectStatsFile: "Изберете Файл със статистика и хистограми",
		enterXMLFileURL: "Въведете URL на XML файл",
		xmlFileURL: "URL на XML файл",
		circularCalculation: "Изчисляване на кръгови статистически данни",
		localSurfaceType: "Тип локална повърхнина",
		surfaceParameterType: "Тип параметър",
		neighborhoodDistance: "Съседно разстояние",
		useAdaptiveNeighborhood: "Използване на адаптивен квартал",
		outputSlopeType: "Измерване на външен наклон",
		projectAzimuths: "Проектиране на геодезични азимути",
		useEquatorialAspect: "Използване на екваториален аспект",
		zUnit: "Z мерна единица",
		analysisMask: "Маска за анализ",
		stdDeviation: "Стандартно отклонение",
		"true": "True",
		"false": "False",
		costDistanceRaster1: "Входен растер за разстояние на натрупаните разходи 1",
		costDistanceRaster2: "Входен растер за разстояние на натрупаните разходи 2",
		threshold: "Гранична стойност",
		thresholdMethod: "Метод на прага",
		directionRaster1: "Въвеждане на растер с обратна посока 1",
		directionRaster2: "Въвеждане на растер с обратна посока 2",
		maxIterations: "Максимален брой повторения",
		epsilon: "Епсилон"
	},
	enumLabels: {
		attributeTableTypeManual: "Ръчно",
		attributeTableTypeExternal: "Външна",
		clrSchemeTypeColormap: "Цвят на карта",
		clrSchemeTypeColorRamp: "Гама от цветове",
		colormapTypeElevation: "Височина",
		colormapTypeGray: "Сива",
		colormapTypeNDVI: "NDVI",
		colormapTypeNDVI2: "NDVI2",
		colormapTypeNDVI3: "NDVI3",
		colormapTypeRandom: "Random (На случаен принцип)",
		none: "Няма",
		slopeTypeAdjusted: "Коригирано",
		slopeTypeDegree: "Градус",
		slopeTypePercentRise: "Процентно покачване",
		slopeTypeScaled: "Мащабирани",
		stretchTypeMinMax: "Мин.Макс.",
		stretchTypePercentMinMax: "Мин.Макс. в проценти",
		stretchTypeSigmoid: "Сигмоидални",
		stretchTypeStdDev: "Стандартно отклонение",
		hillshadeTypeSimple: "Традиционна",
		hillshadeTypeMultidirectional: "Многопосочна",
		bandComboByNames: "Имена на честотни ленти",
		bandComboByWavelength: "Дължина на вълната на честотната лента",
		bandComboByIDs: "Идентификатори на честотни ленти",
		missingBandActionBestMatch: "Най-добро съвпадение",
		missingBandActionFail: "Неуспешно",
		unitTypeCelsius: "Целзий",
		unitTypeCentimeters: "Сантиметри",
		unitTypeDecimeters: "Дециметри",
		unitTypeFahrenheit: "Фаренхайт",
		unitTypeFeet: "Фут",
		unitTypeFeetPerSec: "Фута за секунда (фута/с)",
		unitTypeInches: "Инчове",
		unitTypeKelvin: "Келвин",
		unitTypeKilometers: "Километри",
		unitTypeKmsPerHour: "Километри за час (км/ч)",
		unitTypeKnots: "Възли (kn)",
		unitTypeMeters: "Метри",
		unitTypeMetersPerSec: "Метри за секунда (м/с)",
		unitTypeMiles: "Мили",
		unitTypeMilesPerHour: "Мили за час (mph)",
		unitTypeMillimeters: "Милиметри",
		unitTypeNauticalMiles: "Морски мили",
		unitTypeYards: "Ярд",
		unitTypeDecimalDegrees: "Десетични градуси",
		unitTypePoints: "Точки",
		unitTypeUnknown: "Непознато",
		unitTypeSqMapUnits: "Мерни единици на квадратна карта",
		unitTypeSqMiles: "Квадратни мили",
		unitTypeSqKms: "Квадратни километри",
		unitTypeAcres: "Акра",
		unitTypeHectares: "Хектари",
		unitTypeSqYards: "Квадратни ярда",
		unitTypeSqFt: "Квадратен фут",
		unitTypeSqInches: "Квадратни инчове",
		unitTypeSqMts: "Квадратни метри",
		unitTypeSqCms: "Квадратни сантиметри",
		unitTypeSqMms: "Квадратни милиметри",
		cellsizeTypeFirst: "Първо от",
		cellsizeTypeMin: "Мин. от",
		cellsizeTypeMax: "Макс. от",
		cellsizeTypeMean: "Средна стойност от",
		cellsizeTypeLast: "Последно от",
		extentTypeFirst: "Първо от",
		extentTypeIntersection: "Пресичане от",
		extentTypeUnion: "Обединяване на",
		extentTypeLast: "Последно от",
		noDataInterpretAny: "Съвпадение с някои",
		noDataInterpretAll: "Съвпадение с всички",
		curvatureTypeStandard: "Стандартни",
		curvatureTypeProfile: "Профил",
		curvatureTypePlanform: "Планформа",
		filterTypeLineDetectionHorizontal: "Откриване на линия хоризонтално",
		filterTypeLineDetectionVertical: "Откриване на линия вертикално",
		filterTypeLineDetectionLeftDiagonal: "Откриване на линия вляво по диагонал",
		filterTypeLineDetectionRightDiagonal: "Откриване на линия вдясно по диагонал",
		filterTypeGradientNorth: "Градиент Север",
		filterTypeGradientWest: "Градиент Запад",
		filterTypeGradientEast: "Градиент Изток",
		filterTypeGradientSouth: "Градиент Юг",
		filterTypeGradientNorthEast: "Градиент Североизток",
		filterTypeGradientNorthWest: "Градиент Северозапад",
		filterTypeSmoothArithmeticMean: "Изравняване на аритметична средна стойност",
		filterTypeSmoothing3x3: "Намаляване на вариациите в изображение 3x3",
		filterTypeSmoothing5x5: "Намаляване на вариациите в изображение 5x5",
		filterTypeSharpening3x3: "Увеличаване на резолюцията 3x3",
		filterTypeSharpening5x5: "Увеличаване на резолюцията 5x5",
		filterTypeLaplacian3x3: "Лапласиан 3х3",
		filterTypeLaplacian5x5: "Лапласиан 5х5",
		filterTypeSobelHorizontal: "Sobel хоризонтален",
		filterTypeSobelVertical: "Sobel вертикален",
		filterTypeSharpen: "Изостряне",
		filterTypeSharpen2: "Допълнително изостряне",
		filterTypePointSpread: "Точково разпространение",
		userDefined: "Определен потребител",
		ContourTypeLines: "Контурни линии",
		ContourTypeFill: "Запълване на контур",
		ContourTypeSmoothOnly: "Само гладка повърхнина",
		rasterizeFirst: "Първи",
		rasterizeLast: "Последни",
		rasterizeSmallest: "Най-малки",
		rasterizeLargest: "Най-големи",
		resamplingTypeNearest: "Най-близък съсед",
		resamplingTypeBilinear: "Билинейна интерполация",
		resamplingTypeCubic: "Кубична конволюция",
		resamplingTypeMajority: "Мнозинство",
		resamplingTypeBilinearPlus: "Билинейна интерполация плюс",
		resamplingTypeGauss: "Размиване на Гаус",
		resamplingTypeGaussPlus: "Размиване на Гаус плюс",
		resamplingTypeAverage: "Средни",
		resamplingTypeMinimum: "Минимални",
		resamplingTypeMaximum: "Максимални",
		resamplingTypeVectorAvg: "Средна величина на вектор",
		minimum: "Минимални",
		maximum: "Максимални",
		mean: "Осреднена стойност",
		stdDeviation: "Стандартно отклонение",
		uvMagDirTypeUV: "U-V",
		uvMagDirTypeMagDir: "Величина-Посока",
		unknown: "Непознато",
		angleRefSysGeographic: "Географско",
		angleRefSysArithmetic: "Аритметично",
		interpolateIrregularDataNearest: "Най-близък съсед",
		interpolateIrregularDataBilinear: "Билинейни",
		interpolateIrregularDataTinningLinear: "Линейно калайдисване",
		interpolateIrregularDataTinningNaturalNeighbor: "Естествен съсед",
		interpolateIrregularDataTinningIDW: "Претеглено обратно разстояние",
		esriRasterThresholdTypeConstant: "Константност",
		esriRasterThresholdTypeOtsu: "Оцу",
		esriRasterThresholdTypeTsai: "Цай",
		esriRasterThresholdTypeKapur: "Капур",
		esriRasterThresholdTypeKittler: "Китлер",
		esriRasterThresholdTypeRosin: "Розин",
		argStatsTypeMax: "Arg Max (аргументите на максимума)",
		argStatsTypeMin: "Arg Min (аргументите на минимума)",
		argStatsTypeMedian: "Arg Median (аргументите на медианата)",
		argStatsTypeDuration: "Продължителност",
		arithmeticOpPlus: "Плюс",
		arithmeticOpMinus: "Минус",
		arithmeticOpMultiply: "Умножаване",
		arithmeticOpDivide: "Разделяне",
		arithmeticOpPower: "Степен",
		arithmeticOpMode: "Режим",
		clipTypeOutside: "Изрязване навън",
		clipTypeInside: "Изрязване навътре",
		yes: "Да",
		no: "Не",
		densities: "Плътности",
		expectedCounts: "Очакван брой",
		planar: "Планарно",
		geodesic: "Геодезично",
		eachCell: "Всяка клетка",
		eachZone: "Всяка зона",
		bestSingle: "Най-добри единични",
		allSightlines: "Всички линии на видимост",
		perimeterSightlines: "Периметър на линии на видимост",
		frequency: "Честота",
		observers: "Наблюдатели",
		majority: "Мнозинство",
		median: "Медиана",
		minority: "Малцинство",
		percentile: "Перцентил",
		range: "Диапазон",
		sum: "Сума",
		variety: "Разнообразие",
		ndvi: "NDVI",
		savi: "SAVI",
		bandArithmeticMethodTSAVI: "Трансформирано SAVI",
		bandArithmeticMethodMSAVI: "Модифицирано SAVI",
		bandArithmeticMethodSultan: "формулата на Султан",
		gemi: "GEMI",
		pvi: "PVI",
		gvi: "GVI (Landsat TM)",
		vari: "VARI",
		sr: "SR",
		gndvi: "GNDVI",
		ndvire: "NDVIre (вегетационен индекс за оценка на здравето на растителността)",
		srre: "SRre",
		mtvi2: "MTVI2",
		rtviCore: "RTVIядро",
		cire: "CIre (Восък)",
		cig: "CIg",
		ndwi: "NDWI",
		evi: "EVI",
		ironOxide: "Железен оксид",
		ferrousMinerals: "Железни минерали",
		clayMinerals: "Минерали от глина",
		wndwi: "WNDWI",
		bai: "BAI",
		mndwi: "MNDWI",
		nbr: "NBR",
		ndbi: "NDBI",
		ndmi: "NDMI",
		ndsi: "NDSI",
		localSquareRoot: "Квадратен корен",
		localACos: "ACos",
		localASin: "ASin",
		localATan: "ATan",
		localATanH: "ATanH",
		localAbs: "Abs",
		localBitwiseNot: "Bitwise Not",
		localBooleanNot: "Boolean Not",
		localCos: "Cos",
		localCosH: "CosH",
		localExp: "Експоненциал",
		localExp10: "Експотенциал 10",
		localExp2: "Експоненциал 2",
		localInt: "Цяло число",
		localIsNull: "е нула",
		localFloat: "Плаваща функция",
		localLn: "Ln",
		localLog10: "Log10",
		localLog2: "Log2",
		localNegate: "Смяна на знака",
		localRoundDown: "Закръгляне надолу",
		localRoundUp: "Закръгляне нагоре",
		localSin: "Sin",
		localSinH: "SinH",
		localTan: "Tan",
		localTanH: "TanH",
		localACosH: "ACosH",
		localASinH: "ASinH",
		localPlus: "Плюс",
		localMinus: "Минус",
		localTimes: "Времена",
		localPower: "Степен",
		localBitwiseAnd: "Bitwise And",
		localBitwiseLeftShift: "Bitwise Left Shift",
		localBitwiseOr: "Bitwise Or",
		localBitwiseRightShift: "Bitwise Right Shift",
		localBitwiseXor: "Bitwise Xor",
		localBooleanAnd: "Boolean And",
		localBooleanOr: "Boolean Or",
		localBooleanXor: "Boolean Xor",
		localDivide: "Разделяне",
		localEqualTo: "Равенство",
		localGreaterThan: "По-голямо от",
		localGreaterThanEqual: "По-голямо от или равно на",
		localLessThan: "По-малко от",
		localLessThanEqual: "По-малко или равно на",
		localMod: "Mod",
		localNotEqual: "Не равни стойности",
		localATan2: "ATan2",
		localSquare: "Квадрат",
		localSetNull: "Настройте Null",
		remapDefTypeList: "Списък",
		remapDefTypeTable: "Таблица",
		remapTableTypeSimple: "Пример",
		remapTableTypeDynamic: "Динамично",
		remapTableTypeReassignment: "Преназначение",
		geomCorrectionByConstZ: "Използване на Константа Z",
		geomCorrectionByDEM: "Използване на DEM",
		radarCalibBetaNought: "Бета нула",
		radarCalibSigmaNought: "Сигма нула",
		radarCalibGammaNought: "Гама нула",
		speckleFilterTypeLee: "Лий филтър",
		speckleFilterTypeEnhancedLee: "Подобрен Лий филтър",
		speckleFilterTypeFrost: "Замразен филтър",
		speckleFilterTypeKuan: "Куан филтър",
		speckleNoiseModelMul: "Мултипликативен шум",
		speckleNoiseModelAdd: "Допълнителен шум",
		speckleNoiseModelAddnMul: "Допълнителен и мултипликативен шум",
		mosaicOpTypeFirst: "Първи",
		mosaicOpTypeLast: "Последни",
		mosaicOpTypeMin: "Мин.",
		mosaicOpTypeMax: "Макс.",
		mosaicOpTypeMean: "Осреднена стойност",
		mosaicOpTypeBlend: "Смесени",
		mosaicOpTypeSum: "Сума",
		integer: "Цяло число",
		rfxD8: "D8",
		rfxMFD: "MFD",
		dinf: "DINF",
		vertical: "Вертикално",
		horizontal: "Хоризонтално",
		localCellStatisticsMajority: "Мнозинство",
		localCellStatisticsMax: "Максимални",
		localCellStatisticsMean: "Осреднена стойност",
		localCellStatisticsMedian: "Медиана",
		localCellStatisticsMin: "Минимални",
		localCellStatisticsMinority: "Малцинство",
		localCellStatisticsRange: "Диапазон",
		localCellStatisticsStdDev: "Стандартно отклонение",
		localCellStatisticsSum: "Сума",
		localCellStatisticsVariety: "Разнообразие",
		localCellStatisticsMajorityIgnoreND: "Мнозинство (Игнориране на NoData)",
		localCellStatisticsMaxIgnoreND: "Максимум (Игнориране на NoData)",
		localCellStatisticsMeanIgnoreND: "Осреднена стойност (Игнориране на NoData)",
		localCellStatisticsMedianIgnoreND: "Медиана (Игнориране на NoData)",
		localCellStatisticsMinIgnoreND: "Минимум (Игнориране на NoData)",
		localCellStatisticsMinorityIgnoreND: "Малцинство (Игнориране на NoData)",
		localCellStatisticsRangeIgnoreND: "Диапазон (Игнориране на NoData)",
		localCellStatisticsStdDevIgnoreND: "Стандартно отклонение (Игнориране на NoData)",
		localCellStatisticsSumIgnoreND: "Сума (Игнориране на NoData)",
		localCellStatisticsVarietyIgnoreND: "Разнообразие (Игнориране на NoData)",
		localCellStatisticsTypePercentileIgnoreND: "Перцентил (Игнориране на NoData)",
		fromSource: "От източник",
		toSource: "Към източник",
		colorspaceConversionRgbToHsv: "RGB към HSV",
		colorspaceConversionHsvToRgb: "HSV към RGB",
		pansharpenTypeIHS: "IHS",
		pansharpenTypeBrovey: "Brovey",
		pansharpenTypeEsri: "Esri",
		pansharpenTypeMean: "Осреднена стойност",
		pansharpenTypeGramSchmidt: "Грам – Шмид",
		rectangleNeighborhood: "Правоъгълник",
		circleNeighborhood: "Окръжност",
		annulusNeighborhood: "Пръстеновидно",
		wedgeNeighborhood: "Клиновидно",
		irregularNeighborhood: "Нередовно",
		weightNeighborhood: "Тегло",
		four: "Четири",
		eight: "Осем",
		within: "В рамките на",
		cross: "Пресичане",
		addLink: "Добавяне на връзка",
		noLink: "Няма връзка",
		weightedMean: "Претеглена осреднена стойност",
		ls8QCBitPatternCirrus: "Landsat 8 Перест облак",
		ls8QCBitPatternCloud: "Landsat 8 Облак",
		ls8QCBitPatternCloudShadow: "Landsat 8 Облачна сянка",
		ls8QCBitPatternDesignatedFill: "Landsat 8 Определено запълване",
		ls8QCBitPatternDroppedFrame: "Landsat 8 Паднала рамка",
		ls8QCBitPatternSnowIce: "Landsat 8 Сняг/лед",
		ls8QCBitPatternTerrainOcclusion: "Landsat 8 Запушване на терена",
		ls8QCBitPatternVegetation: "Landsat 8 Растителност",
		ls8QCBitPatternWater: "Landsat 8 Вода",
		downStream: "По направление на поток",
		upStream: "Срещу течението",
		strahler: "STRAHLER",
		shreve: "SHREVE",
		currentSlice: "Текущ отрязък",
		allSlices: "Всички отрязъци",
		expandDistance: "РАЗСТОЯНИЕ",
		expandMorphological: "МОРФОЛОГИЧЕСКИ",
		spectralProfileFile: "Спектрален профил",
		trainingFeatureFile: "Обект за обучение",
		randomDistributionTypeUniform: "Унифицирано",
		randomDistributionTypeUniformInteger: "Цяло число",
		randomDistributionTypeNormal: "Нормална",
		randomDistributionTypeExponential: "Експоненциален",
		randomDistributionTypePoisson: "Поасон",
		randomDistributionTypeGamma: "Гама",
		randomDistributionTypeBinomial: "Бином",
		randomDistributionTypeGeometric: "Геометрична функция",
		randomDistributionTypeNegativeBinomial: "Отрицателен бином",
		randomGeneratorTypeStandardCRand: "Стандартен C ранд",
		randomGeneratorTypeAlgorithmACM599: "ACM събран алгоритъм 599",
		randomGeneratorTypeMersenneTwister: "Twister на Mersenne",
		sumName: "Сума",
		medainName: "Медиана",
		trendLinear: "Линейна",
		trendHarmonic: "Хармонична",
		trendPolynomial: "Полиномиална",
		trendMannKendall: "Ман-Кендъл",
		trendSeasonalKendall: "Сезонен Кендъл",
		dimensionByValue: "По стойност",
		dimensionByInterval: "По интервал",
		mdimDefTypeAll: "Всички",
		mdimDefTypeByValues: "По стойности",
		mdimDefTypeByRanges: "По диапазони",
		mdimDefTypeByIteration: "По итерация",
		mdimDefTypeByInterval: "По интервал",
		mdimDefTypeByTargetRaster: "По целеви растер",
		esriTimeUnitsHours: "Часове",
		esriTimeUnitsDays: "Дни",
		esriTimeUnitsWeeks: "Седмици",
		esriTimeUnitsMonths: "Месеци",
		esriTimeUnitsYears: "Години",
		esriTimeIntervalKeywordHourly: "Ежечасно",
		esriTimeIntervalKeywordDaily: "Ежедневно",
		esriTimeIntervalKeywordWeekly: "Седмично",
		esriTimeIntervalKeywordDekadly: "Декадлично",
		esriTimeIntervalKeywordPentadly: "Пентадли",
		esriTimeIntervalKeywordMonthly: "Месечно",
		esriTimeIntervalKeywordQuarterly: "На три месеца",
		esriTimeIntervalKeywordYearly: "Годишно",
		esriTimeIntervalKeywordRecurringDaily: "Повтаря се ежедневно",
		esriTimeIntervalKeywordRecurringWeekly: "Повтаря се седмично",
		esriTimeIntervalKeywordRecurringMonthly: "Повтаря се месечно",
		esriTimeIntervalKeywordRecurringQuarterly: "Повтаря се на 3 месеца",
		aggDefTypeAll: "Всички",
		aggDefTypeIntervalKeyword: "Интервал на ключова дума",
		aggDefTypeIntervalValue: "Стойност на интервал",
		aggDefTypeIntervalRanges: "Диапазони на интервал",
		latestChange: "Време на последната промяна",
		earliestChange: "Време на първата промяна",
		largestChange: "Време на най-голямата промяна",
		numberOfChanges: "Брой промени",
		longestChange: "Време на най-дългата промяна",
		shortestChange: "Време на най-кратката промяна",
		fastestChange: "Време на най-бързата промяна",
		slowestChange: "Време на най-бавната промяна",
		allChanges: "Всички",
		increaseChanges: "Увеличаване",
		decreaseChanges: "Намаляване",
		segmentBeginning: "Начало на сегмент",
		segmentEnd: "Край на сегмент",
		esriComputeChangeMethodDifference: "Разлика",
		esriComputeChangeMethodRelativeDifference: "Относителна разлика",
		esriComputeChangeMethodCategorical: "Категориална разлика",
		esriComputeChangeMethodMultispectralEuclideanDistance: "Спектрално евклидово разстояние",
		esriComputeChangeMethodMultispectralAngularDifference: "Спектрална ъглова разлика",
		esriComputeChangeMethodMultispectralAxisWithBiggestChange: "Честотна лента с най-много промени",
		esriComputeChangeKeepAll: "Запазване на всички",
		esriComputeChangeKeepChangedOnly: "Запазване само на променените пиксели",
		esriComputeChangeKeepUnchangedOnly: "Запазване само на непроменените пиксели",
		esriComputeChangeUseColorAverage: "Средно от и до цветове",
		esriComputeChangeUseColorFrom: "Използване от цветове",
		esriComputeChangeUseColorTo: "Използване към цветове",
		factorFunctionBinary: "Бинарност",
		factorFunctionForward: "Напред",
		factorFunctionLinear: "Линейна",
		factorFunctionInvLinear: "Обратно линейна",
		factorFunctionTable: "Таблица",
		factorFunctionSymLinear: "Симетрично линейна",
		factorFunctionSymInvLinear: "Симетрично обратно линейна",
		factorFunctionCos: "Косинусова",
		factorFunctionSec: "Секуща",
		factorFunctionCosSec: "Косинусова секуща",
		factorFunctionSecCos: "Секуща косинусова",
		noSort: "Не сортирайте",
		ascend: "Повишаване",
		descend: "Намаляване",
		autoDetect: "Автоматично откриване",
		nearest: "Най-близка",
		linear: "Линейна",
		esriMonthJanuary: "януари",
		esriMonthFebruary: "февруари",
		esriMonthMarch: "март",
		esriMonthApril: "април",
		esriMonthMay: "май",
		esriMonthJune: "юни",
		esriMonthJuly: "юли",
		esriMonthAugust: "август",
		esriMonthSeptember: "септември",
		esriMonthOctober: "октомври",
		esriMonthNovember: "ноември",
		esriMonthDecember: "декември",
		dimensionalMovingIgnoreNoData: "Данни",
		dimensionalMovingPropagateNoData: "NoData",
		dimensionalMovingFillOnlyNoData: "Попълване на NoData",
		circularMean: "Осреднена стойност на окръжност",
		circularName: "Окръжност",
		arithmeticName: "Аритметично",
		slopeName: "Наклон",
		aspectName: "Аспект",
		meanCurvature: "Средна кривина",
		profileCurvature: "Кривина на профила (линия на нормалния наклон).",
		tangentialCurvature: "Тангенциална (нормална контурна) кривина",
		planCurvature: "Планирана (проектирана контурна) кривина",
		contourGeodesicTorsion: "Контурно геодезично усукване",
		gaussianCurvature: "Гаусова кривина",
		casoratiCurvature: "Кривина на Касорати",
		localSurfaceTypeQuadratic: "Квадратен",
		localSurfaceTypeBiquadratic: "Биквадратен",
		thresholdNoThreshold: "Без гранична стойност",
		thresholdPercentLeastCost: "Процент от най-ниските разходи",
		thresholdAccumulativeCost: "Натрупващи се разходи",
		clrmapTypeHillshade: "Визуален релеф"
	},
	categoryLabels: {
		sourceCharacteristics: "Характеристики на източник",
		neighborhoodSettings: "Настройки на съседство",
		statistics: "Статистика",
		gamma: "Гама",
		viewshedParameters: "Параметри на Зона на видимост",
		observerParameters: "Параметри на наблюдател",
		irregularDataInterpolation: "Интерполиране на неправилни данни",
		modelStatistics: "Модел на статистически данни",
		aggregationDef: "Дефиниция за обобщаване",
		filterByAttributes: "Филтриране по атрибут",
		percentileName: "Перцентил",
		rasterInfo: "Растерна информация",
		extent: "Обхват",
		spatialReference: "Проекция"
	},
	outputRasterHelpTexts: {
		outputName: "<p>Името на слоя, който ще бъде създаден и добавен към картата.</p>",
		resultType: "<p>Типът резултат, който ще бъде създаден. Резултатите могат да бъдат слоеве с плочкови изображения или слоеве с динамични изображения.</p>",
		saveResultIn: "<p>Името на папка в <b>Моето съдържание</b>, където резултатите ще бъдат запазени.</p>"
	},
	analysisEnvironmentsHelpTexts: {
		description: "<p>Нaстройки на среда за анализ в Map Viewer.</p>",
		outSR: "<p>Указва координатната система за анализ и резултатния слой.</p>",
		extent: "<p>Определя областта, която ще се използва за анализ.</p>",
		snapRaster: "<p>Регулира обхвата на изходните данни, така че да съответства на подравняването на клетките на зададения моментен растерен слой.</p>",
		cellSize: "<p>Указва размера на клетката или разделителната способност, която ще се използва за анализ и за създаване на изходния растерен слой.</p>",
		mask: "<p>Посочва слой с маска, при който за анализ ще се използват само клетките, които попадат в областта на маската, за която ще се извършва анализ.</p>",
		resamplingMethod: "<p>Указва как да се интерполират стойностите на пикселите, когато входните и изходните растери не се подреждат.</p>"
	},
	mainGenStrings: {
		unsupportedDataType: "Неподдържан тип",
		currentlyUnsupported: " Редакторът по подразбиране за ${missingType} чакащ, но предстои скоро. Временно текстово поле за контейнер за указване на входове, базирани на низ.",
		unsupportedOverrideWarning: "Компонент за редактор за замяна, осигуряващ по-добър потребителски интерфейс за работа със следните параметри, е в процес на изчакване, но предстои скоро:",
		overrideWidgetMissing: "Липсва компонент на редактора за замяна!",
		uiIncomplete: "Неуспешно подаване на задание. Функцията не може да се изпълни, защото някои от задължителните полета са непълни или липсват в потребителския интерфейс.",
		count: "Брой",
		selectVariables: "Изберете променливи",
		selectFeature: "Изберете обектен слой",
		greaterThanErrorMessage: "Входното число трябва да е по-голямо от ${min}",
		lesserThanErrorMessage: "Входното число трябва да е по-малко от ${max}",
		greaterThanOrEqualErrorMessage: "Въведеното число трябва да е по-голямо или равно на ${min}",
		lesserThanOrEqualErrorMessage: "Въведеното число трябва да е по-малко или равно на ${max}",
		allowScalar: "Изберете слой или въведете константа",
		selectField: "Избор на поле",
		parameterRequired: "Този параметър е задължителен.",
		enterAValue: "Въвеждане на стойност...",
		invalidInput: "Въведената стойност не е валидна.",
		itemNotFound: "Елементът не съществува или е недостъпен.",
		itemPermissionDenied: "Нямате права за достъп до този елемент.",
		layerNotAvailable: "Неуспешно зареждане на слой ${layerName}.",
		multipleLayersNotAvailable: "Неуспешно зареждане на слой ${layerName} и други.",
		learnMoreLabel: "Научете повече",
		fieldNotAvailable: "Неуспешно зареждане на поле.",
		allowAnalysis: "Анализът не е разрешен в услугата за изображения.",
		allowAnalysisReason: "Един или повече слоеве от картата не са изброени тук, защото не позволяват анализ.",
		learnMoreText: "Научете повече",
		atLeastOneRasterInput: "Поне един входен слой трябва да бъде растерен слой.",
		browseAnalysisLayers: "Търсене на слоеве",
		activeMapViewExtent: "Употреба на текущия обхват на картата",
		chooseRaster: "Избор на изрязващ растер",
		chooseGeometry: "Избор на изрязваща геометрия",
		resultType: "Тип резултат",
		saveInFolder: "Запазване в папка",
		outputName: "Име на изходния файл",
		outputLayerType: "Тип на изходния слой",
		dynamicImageryLayer: "Слой на динамично изображение",
		tiledImageryLayer: "Плочков слой на изображение",
		custom: "Персонализиран",
		loading: "Зареждане...",
		layerMissing: "Един или повече слоеве от картата не са изброени тук, защото не позволяват анализ. Научете повече.",
		browseCoordinateSystems: "Преглед на координатни системи",
		unableToRepopulateOutSR: "Изходната координатна система не може да се попълни.",
		defaultTitle: "Вижте повече",
		"ARC (equal arc-second)": "ARC (равно на дъгова секунда)",
		Africa: "Африка",
		Antarctica: "Антарктида",
		Argentina: "Аржентина",
		Asia: "Азия",
		"Asteroid Belt": "Астероиден пояс",
		"Atlantic Ocean": "Атлантически океан",
		Australia: "Австралия",
		"Australia and New Zealand": "Австралия и Нова Зеландия",
		Austria: "Австрия",
		"BLM (US Feet)": "BLM (ам. футове)",
		Bangladesh: "Бангладеш",
		"Beijing 1954": "Пекин 1954",
		Bhutan: "Бутан",
		CGCS2000: "CGCS2000",
		Canada: "Канада",
		Caribbean: "Кариби",
		"Caribbean Sea": "Карибско море",
		"Central America": "Централна Америка",
		"Central and North America": "Централна и Северна Америка",
		Colombia: "Колумбия",
		Continental: "Континентален",
		"County Systems": "Системи на окръг",
		"Democratic Republic of the Congo": "Демократична република Конго",
		"EPSG Arctic": "EPSG Арктика",
		Earth: "Земя",
		"Ellipsoidal-based": "На елипсоидална основа",
		Europe: "Европа",
		Finland: "Финландия",
		France: "Франция",
		"GSK 2011": "GSK 2011",
		"Gauss Kruger": "Гаус Крюгер",
		"Geographic Coordinate Systems": "Географски координатни системи",
		Germany: "Германия",
		"Gravity-related": "Свързани с гравитацията",
		"Greenwich-based": "Базиран в Гринуич",
		"Highways England": "Магистрали Англия",
		Illinois: "Илинойс",
		"Indian Ocean": "Индийски океан",
		"Indian Subcontinent": "Индийски субконтинент",
		Indiana: "Индиана",
		Indonesia: "Индонезия",
		Iowa: "Айова",
		"Ireland and United Kingdom": "Ирландия и Обединеното кралство",
		Italy: "Италия",
		Japan: "Япония",
		Jupiter: "Юпитер",
		Kansas: "Канзас",
		"Las Vegas": "Лас Вегас",
		Libya: "Либия",
		Malaysia: "Малайзия",
		"Malaysia and Singapore": "Малайзия и Сингапур",
		Mars: "Марс",
		Mercury: "Меркурий",
		Minnesota: "Минесота",
		Montana: "Монтана",
		"NAD 1927": "Американска нулева точка от 1927 г. (NAD 1927)",
		"NAD 1927 (US Feet)": "Американска нулева точка от 1927 г. (NAD 1927) (ам. футове)",
		"NAD 1983": "Американска нулева точка от 1983 г. (NAD 1983)",
		"NAD 1983 (2011)": "Американска нулева точка от 1983 г. (NAD 1983) (2011)",
		"NAD 1983 (2011) (Intl Feet)": "Американска нулева точка от 1983 г. (NAD 1983) (2011) (межд. футове)",
		"NAD 1983 (2011) (Meters)": "Американска нулева точка от 1983 г. (NAD 1983) (2011) (метри)",
		"NAD 1983 (2011) (US Feet)": "Американска нулева точка от 1983 г. (NAD 1983) (2011) (ам. футове)",
		"NAD 1983 (CORS96) (Intl Feet)": "Американска нулева точка от 1983 г. (NAD 1983) (CORS96) (межд. футове)",
		"NAD 1983 (CORS96) (Meters)": "Американска нулева точка от 1983 г. (NAD 1983) (CORS96) (метри)",
		"NAD 1983 (CORS96) (US Feet)": "Американска нулева точка от 1983 г. (NAD 1983) (CORS96) (ам. футове)",
		"NAD 1983 (Intl Feet)": "Американска нулева точка от 1983 г. (NAD 1983) (межд. футове)",
		"NAD 1983 (Meters)": "Американска нулева точка от 1983 г. (NAD 1983) (метри)",
		"NAD 1983 (PA11) (Meters)": "Американска нулева точка от 1983 г. (NAD 1983) (PA11) (метри)",
		"NAD 1983 (PA11) (US Feet)": "Американска нулева точка от 1983 г. (NAD 1983) (PA11) (ам. футове)",
		"NAD 1983 (US Feet)": "Американска нулева точка от 1983 г. (NAD 1983) (ам. футове)",
		"NAD 1983 HARN (Intl Feet)": "Американска нулева точка от 1983 г. (NAD 1983), Референтна мрежа с висока точност (HARN) (межд. футове)",
		"NAD 1983 HARN (Meters)": "Американска нулева точка от 1983 г. (NAD 1983), Референтна мрежа с висока точност (HARN) (метри)",
		"NAD 1983 HARN (US Feet)": "Американска нулева точка от 1983 г. (NAD 1983), Референтна мрежа с висока точност (HARN) (ам. футове)",
		"NAD 1983 NSRS2007 (Intl Feet)": "Американска нулева точка от 1983 г. (NAD 1983) NSRS2007 (межд. футове)",
		"NAD 1983 NSRS2007 (Meters)": "Американска нулева точка от 1983 г. (NAD 1983) NSRS2007 (метри)",
		"NAD 1983 NSRS2007 (US Feet)": "Американска нулева точка от 1983 г. (NAD 1983) NSRS2007 (ам. футове)",
		"National Grids": "Национални мрежи",
		Navajo: "Навахо",
		Neptune: "Нептун",
		"New Beijing": "Нов Пекин",
		"New Zealand": "Нова Зеландия",
		"North America": "Северна Америка",
		"Northern Hemisphere": "Северно полукълбо",
		Norway: "Норвегия",
		Oceans: "Води",
		Oregon: "Орегон",
		"Other GCS": "Други GCS",
		"Pacific Ocean": "Тихи океан",
		Pluto: "Плутон",
		Polar: "Полярни",
		Portugal: "Португалия",
		"Projected Coordinate Systems": "Проекционни координатни системи",
		"Pulkovo 1942": "Пулково 1942",
		"Pulkovo 1995": "Пулково 1995",
		Replaced: "Подменени",
		"SAD 1969": "SAD 1969",
		SIRGAS: "SIRGAS",
		"SIRGAS 2000": "SIRGAS 2000",
		Saturn: "Сатурн",
		"Solar System": "Слънчева система",
		"South Africa": "Южна Африка",
		"South America": "Южна Америка",
		"South Korea": "Южна Корея",
		"Southern Hemisphere": "Южно полукълбо",
		"Spheroid-based": "На сфероидна основа",
		"State Plane": "Държавна равнина",
		"State Systems": "Държавни системи",
		Sweden: "Швеция",
		"Switzerland and Liechtenstein": "Швейцария и Лихтенщайн",
		Texas: "Тексас",
		Tribal: "Племенни",
		Turkey: "Турция",
		"US Feet": "Ам. футове",
		"USA and territories": "САЩ и територии",
		UTM: "UTM",
		Ukraine: "Украйна",
		"Unknown Height Systems": "Неизвестни системи за височина",
		Uranus: "Уран",
		Venus: "Венера",
		"Vertical Coordinate Systems": "Вертикални координатни системи",
		Vietnam: "Виетнам",
		"WGS 1972": "WGS 1972",
		"WGS 1984": "WGS 1984",
		Wisconsin: "Уисконсин",
		"Wisconsin CRS": "Уисконсин CRS",
		World: "Свят",
		"World (Sphere-based)": "Световни (базиран на сфера)",
		Wyoming: "Уайоминг",
		"Xian 1980": "Хуей 1980",
		done: "Готово",
		noResults: "Няма намерени резултати",
		searchPlaceholder: "Име или WKID",
		browseTemplate: "Преглеждане на шаблони на растерна функция",
		saveTemplate: "Запазване на шаблон на растерна функция",
		preview: "Предварителен преглед",
		previewDescription: "Предварителен преглед на резултата, преди да стартирате анализ.",
		showPreview: "Показване на предварителен преглед",
		previewLayer: "Предварителен преглед на слой ${number}",
		newPreview: "Нов предварителен преглед",
		previewPopup: "Активирайте предварителния преглед на резултатите от анализа въз основа на входните параметри.",
		updatePreviewLayer: "Обновяване на избрания слой за предварителен преглед",
		createPreviewLayer: "Създаване на нов слой за предварителен преглед",
		maximumPreviewAllowed: "Максимален разрешен брой слоеве за предварителен преглед: ${maxCount}",
		previewFailure: "Този слой за предварителен преглед не е наличен. Проверете входните параметри и обновете отново този слой за предварителен преглед.",
		header: "Избиране на елемент",
		content: "Имате незапазени промени в ${rftTitle}. Ако започнете отначало с нов шаблон, тези промени ще бъдат загубени.",
		dontSave: "Не запазвай",
		"continue": "Продължение",
		stretch: "Побиране в прозорец",
		pan: "Местене",
		newTemplate: "Създаване на нов шаблон",
		openTemplate: "Отваряне на шаблон",
		addFunction: "Добавяне на растерни функции",
		addConstant: "Добавяне на константа",
		addRaster: "Добавяне на растерна променлива",
		move: "Придвижване",
		zoom: "Мащабиране",
		saveAs: "Запазване като",
		clear: "Изчистване",
		addRasterFunctionTitle: "Добавяне на растерни функции",
		templatePropertiesTitle: "Свойства на шаблон",
		browseRFT: "Преглеждане на Шаблони за растерна функция",
		defaultToolDescription: "Инструмент за анализ ${toolTitle}",
		openToolText: "Отваряне на инструмент",
		toolDropdownText: "Падащ списък с инструменти",
		addToMap: "Потвърждаване и добавяне към картата",
		confirm: "Потвърждаване",
		select: "Избиране",
		selectTask: "Избиране на задание",
		unsupportedLayer: "Този параметър не поддържа следните слоеве: ${layerName}.",
		viewDetails: "Преглед на цялата подробна информация за елемент",
		rename: "Преименуване",
		duplicate: "Дублиране",
		launch: "Отваряне за изпълнение",
		templateEditor: "Редактор на шаблон",
		createItem: "Запазване на Шаблон на растерна функция",
		actionLabel: "Филтър",
		filterPopoverHeading: "Филтриране на функциите",
		defaultSearchPlaceholder: "Търсене по име",
		settings: "Настройки",
		summary: "Обобщение",
		definitionQuery: "Дефиниране на заявка",
		matchVariables: "Съвпадение на променливи",
		unionDimension: "Обединено измерване",
		nameEditorPlaceholder: "Въвеждане на заглавие",
		summaryEditorPlaceholder: "Въвеждане на кратко описание.",
		definitionQueryPlaceholder: "Въвеждане...",
		upload: "Качване",
		chooseImage: "Натиснете, за да изберете файл",
		update: "Обновяване",
		thumbnailErrors: {
			wrongImageType: "Избран е грешен тип изображение",
			notAvailable: "Миниатюрата не е налична",
			loadError: "Изображението не може да се зареди",
			chooseFile: "Натиснете, за да изберете файл"
		}
	}
};
const copy = "Копиране";
const save = "Запазване";
const title = "Заглавие";
const folder = "Папка";
const tags = "Тагове";
const savingMessage = "Запазване на елемент в";
const shareWith = "Споделяне с";
const share = "Споделяне";
const setSharingLevel = "Задаване на ниво на споделяне";
const setGroupSharing = "Задаване на споделяне в група";
const owner = "Собственик";
const organization = "Организация";
const everyone = "Всички (публично)";
const groups = "Групи:";
const type = "Тип";
const mosaic = "Мозайка";
const itemGroup = "Група елементи";
const item = "Елемент";
const definitionQuery = "Дефиниране на заявка";
const groupItemsBy = "Групирайте елементите по";
const groupFieldName = "Име на полето на групата";
const tagFieldName = "Име на полето на етикет";
const noTitleTagErrorMsg = "Трябва да предоставите заглавие на вашия елемент и тагове, за да можете да намерите картата си чрез търсене.";
const noTitleErrorMsg = "Трябва да посочите заглавие за Вашия елемент.";
const noTagErrorMsg = "Трябва да предоставите поне един таг, за да помогнете на хората да намерят вашия елемент чрез търсения.";
const error = "Грешка";
const warning = "Предупреждение";
const success = "Успешно";
const details = "Подробни данни:";
const tryAgain = "Опитайте отново.";
const toolModeler = {
	save: "Запазване",
	editProperties: "Редактиране на свойства",
	saveAs: "Запазване като",
	savingNotification: "Записване на промените към елемент...",
	savingTitle: "Записва се",
	saveFailedMessage: "Неуспешно запазване на промените.",
	saveWithErrorsMessage: "Промените бяха запазени със следните грешки.",
	viewItemMessage: "Преглед на запазения елемент",
	here: "тук.",
	itemCreatedMessage: "Създаден е нов елемент.",
	clickToViewItemMessage: "Натиснете върху OK, за да видите страницата с подробности за елемента; натиснете върху Отказ, за да продължите.",
	readingFailed: "Неуспешно зареждане на избрания шаблон за растерна функция.",
	failedToLoadXML: "Неуспешно зареждане на избрания шаблон за растерна функция в XML формат.",
	learnMore: "Научете повече",
	overwriteTitle: "Потвърждаване на презаписването",
	overwriteMessage: "Искате ли да презапишете съществуващия елемент?",
	overwriteSuccessMessage: "Елементът беше обновен."
};
const toolEditor = {
	run: "Стартиране",
	save: "Запазване",
	deleteSelected: "Изтриване на избраните елементи",
	addRaster: "Добавяне на растер",
	addScalar: "Добавяне на скаларна стойност",
	layout: "Автоматично оформление",
	errorTitle: "Грешка",
	invalidToolMessage: "Шаблонът за растерна функция не е валиден.",
	out: "Извън",
	zoomIn: "Увеличаване",
	zoomOut: "Намаляване",
	zoomToFit: "Приспособяване към прозорец",
	panOn: "Превключване на режим на местене",
	panOff: "Изключване на режим на местене",
	defaultModelName: "Модел инструмент",
	defaultRasterName: "Растер"
};
const toolDetailsEditor = {
	defaultToolName: "Шаблон на растерна функция",
	defaultToolDescription: "Добавяне на кратко обобщение за растерната функция.",
	defaultHelpText: "Щракнете върху иконата за помощ, за да редактирате текста на помощта",
	editHelpTitle: "Редактиране на помощ",
	saveLabel: "Запазване",
	cancelLabel: "Отказ",
	thumbnail: {
		wrongImageType: "Избран е грешен тип изображение",
		notAvailable: "Миниатюрата не е налична",
		loadError: "Изображението не може да се зареди",
		chooseFile: "Щракнете, за да изберете файл"
	}
};
const saveUtils = {
	thumbnail: "Миниатюра",
	sharing: "Споделяне"
};
const close = "Затваряне";
const unsavedWarningExisting = "Искате ли да запазите промените в елемента <b>${itemTitle}</b> ?";
const unsavedWarningNew = "Искате ли да запишете промените си?";
const saveAs = "Запазване като";
const dontSave = "Не запазвай";
const unsavedTitle = "Незапазени промени";
const invalidRFTMessage = "Създаденият шаблон за растерна функция не е валиден.";
const errorTitle = "Грешка";
const breadcrumb = "Редактор за растерна функция";
const breadcrumbEditor = "Съдържание > Редактор за растерна функция";
const viewerModeTitle = "Само за четене";
const viewerModeMessage = "Елементът на шаблона за растерна функция е само за четене. Промените не могат да бъдат запазени.";
const userStartDirection = "Изберете функция, за да започнете изграждането на шаблон за растерна функция.";
const selectFunction = "Добавяне на функция";
const deselectFunction = "Премахване на функция";
const dialogTitle = "Система";
const category = "Категории";
const search = "Търсене на растерни функции";
const categoryNames = {
	analysis: "Анализи",
	appearance: "Външно представяне",
	classification: "Класификация",
	conversion: "Конверсия",
	correction: "Коригиране",
	dataManagement: "Управление на данни",
	distance: "Разстояние",
	distanceLegacy: "Дистанция (унаследена)",
	hydrology: "Хидрология",
	math: "Математика",
	mathConditional: "Математика: условна",
	mathLogical: "Математика: логическа",
	mathTrigonometric: "Математика: тригонометрия",
	reclass: "Прекласифициране",
	statistical: "Статистика",
	surface: "Повърхност"
};
const commonStrings_bg = {
	ok: ok,
	cancel: cancel,
	enterURL: enterURL,
	serviceURL: serviceURL,
	selectRaster: selectRaster,
	failedToLoadLayer: failedToLoadLayer,
	loadingLayer: loadingLayer,
	selectFeature: selectFeature,
	enterFURL: enterFURL,
	addRaster: addRaster,
	addScalar: addScalar,
	raster: raster,
	scalar: scalar,
	defaultModelName: defaultModelName,
	general: general,
	parameters: parameters,
	variables: variables,
	name: name,
	description: description,
	parameter: parameter,
	isPublic: isPublic,
	isDataset: isDataset,
	unknownPixelType: unknownPixelType,
	outputPixelType: outputPixelType,
	u8PixelType: u8PixelType,
	s8PixelType: s8PixelType,
	u16PixelType: u16PixelType,
	s16PixelType: s16PixelType,
	u32PixelType: u32PixelType,
	s32PixelType: s32PixelType,
	f32PixelType: f32PixelType,
	f64PixelType: f64PixelType,
	properties: properties,
	multidimensionalRules: multidimensionalRules,
	matchVariables: matchVariables,
	unionDimensions: unionDimensions,
	rasterFunctionEditor: rasterFunctionEditor,
	rfxLicenseInfo: rfxLicenseInfo,
	rasterFunctions: rasterFunctions,
	copy: copy,
	save: save,
	title: title,
	folder: folder,
	tags: tags,
	savingMessage: savingMessage,
	shareWith: shareWith,
	share: share,
	setSharingLevel: setSharingLevel,
	setGroupSharing: setGroupSharing,
	owner: owner,
	organization: organization,
	everyone: everyone,
	groups: groups,
	type: type,
	mosaic: mosaic,
	itemGroup: itemGroup,
	item: item,
	definitionQuery: definitionQuery,
	groupItemsBy: groupItemsBy,
	groupFieldName: groupFieldName,
	tagFieldName: tagFieldName,
	noTitleTagErrorMsg: noTitleTagErrorMsg,
	noTitleErrorMsg: noTitleErrorMsg,
	noTagErrorMsg: noTagErrorMsg,
	error: error,
	warning: warning,
	success: success,
	details: details,
	tryAgain: tryAgain,
	toolModeler: toolModeler,
	toolEditor: toolEditor,
	toolDetailsEditor: toolDetailsEditor,
	saveUtils: saveUtils,
	close: close,
	unsavedWarningExisting: unsavedWarningExisting,
	unsavedWarningNew: unsavedWarningNew,
	saveAs: saveAs,
	dontSave: dontSave,
	unsavedTitle: unsavedTitle,
	invalidRFTMessage: invalidRFTMessage,
	errorTitle: errorTitle,
	breadcrumb: breadcrumb,
	breadcrumbEditor: breadcrumbEditor,
	viewerModeTitle: viewerModeTitle,
	viewerModeMessage: viewerModeMessage,
	userStartDirection: userStartDirection,
	selectFunction: selectFunction,
	deselectFunction: deselectFunction,
	dialogTitle: dialogTitle,
	category: category,
	search: search,
	categoryNames: categoryNames
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (commonStrings_bg);


//# sourceMappingURL=common-strings.bg-5ec84459.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,