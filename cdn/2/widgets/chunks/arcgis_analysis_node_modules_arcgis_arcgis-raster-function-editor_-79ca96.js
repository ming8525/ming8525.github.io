"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-79ca96"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-ranged-value-editor-efd6dc16.js":
/*!************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-ranged-value-editor-efd6dc16.js ***!
  \************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   R: () => (/* binding */ RfxRangedValueEditor)
/* harmony export */ });
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./sanitize-number-d84114f7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");




















const HelpClickHandlerKeys = {
    inputArgHelpClickHandler: "inputArgHelpClickHandler"
};

const CONSTRAINT_IDENTIFIER = {
    MIN_VALUE: "minValue",
    MAX_VALUE: "maxValue",
    LESS_THAN: "lessThan",
    GREATER_THAN: "greaterThan"
};
const RfxRangedValueEditor = class {
    constructor(hostRef) {
        (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.rfxArgumentChange = (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "rfxArgumentChange", 7);
        /**
         * Stores event handlers for help action click, stored in connected callback to avoid
         * fetching function on each render ( to avoid common bad practice )
         */
        this.helpActionClickEventHandlers = new Map();
        /**
         * @category Event Handler
         * Called when the calcite input value changes to a valid number
         * @param {CustomEvent} event custom calciteInputInput event
         */
        this.handleInputChange = (event) => {
            // We are stopping the propagation of this change event as we emit a customEvent instead.
            event.stopPropagation();
            if (event.target !== null) {
                const newValueString = (event?.target).value;
                this.value = (0,_sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_16__.p)(newValueString);
                this.inputArg.value = this.value;
                this.validate();
                this.rfxArgumentChange.emit({ value: this.value });
            }
        };
        this.max = undefined;
        this.min = undefined;
        this.errorMessage = undefined;
        this.value = undefined;
        this.widgetArgs = undefined;
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    connectedCallback() {
        this.setInputArgs();
    }
    async componentWillLoad() {
        ({ strings: this.strings, dir: this.direction } = await (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.hostElement, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.g)(`.`)));
        this.setInitialState();
        this.setConstraints();
    }
    componentDidLoad() {
        this.setTriggerArgsInputConstraints();
        this.attachHelpClickEventHandlers();
    }
    /**
     * @category Private
     */
    get isFloatType() {
        return typeof this.numberType === "undefined" || this.numberType === "float";
    }
    //--------------------------------------------------------------------------
    //
    //  Private
    //
    //--------------------------------------------------------------------------
    setInitialState() {
        const rfxArgValue = this.inputArg.value || this.inputArg.defaultValue;
        this.value = rfxArgValue;
    }
    setInputArgs() {
        // should have only one inputArg
        Object.keys(this.widgetArgs.inputArgs).forEach((_inputArg) => {
            const rfxArg = this.widgetArgs.inputArgs[_inputArg];
            this.inputArg = rfxArg;
            rfxArg.input = this.hostElement;
            // Set contraints for "float" datatype
            const rfxDatatype = this.widgetArgs.argSchema.dataType;
            this.numberType = rfxDatatype === "long" ? "float" : "integer";
        });
    }
    attachHelpClickEventHandlers() {
        const inputArgHelpClickHandler = this.widgetArgs.onHelpActionClick({
            heading: this.inputArg.displayName,
            referenceElement: this.widgetContainer,
            helpTextID: this.inputArg?.helpTextID
        });
        this.helpActionClickEventHandlers.set(HelpClickHandlerKeys.inputArgHelpClickHandler, inputArgHelpClickHandler);
    }
    /**
     * utility function to check if the string matches any substring
     * from a given array
     */
    extractIdentifier(str, substrings) {
        const match = substrings.find((substring) => str.includes(substring));
        // when constraint has an unknown identifier
        return match ?? "Invalid";
    }
    /**
     * Parses the widget trigger attributes and sets the corresponding constraints
     * to the widget state. Possible trigger attributes values are:
     * "minValue:0;maxValue:100"
     * "minValue:1;lessThan:OuterRadius"
     * "minValue:2;greaterThan:InnerRadius"
     *
     * @function
     * @private
     */
    setConstraints() {
        const constraints = this.widgetArgs.triggerAttributes.split(";");
        const identifiers = [
            CONSTRAINT_IDENTIFIER.MIN_VALUE,
            CONSTRAINT_IDENTIFIER.MAX_VALUE,
            CONSTRAINT_IDENTIFIER.LESS_THAN,
            CONSTRAINT_IDENTIFIER.GREATER_THAN
        ];
        constraints.forEach((constraint) => {
            const identifierInConstraint = this.extractIdentifier(constraint, identifiers);
            //  store numeric values in minValue and maxValue;
            //  store rfxArgs names in lessThan and greaterThan;
            const actions = {
                [CONSTRAINT_IDENTIFIER.MIN_VALUE]: () => (this.minValue = parseInt(constraint.replace(`${CONSTRAINT_IDENTIFIER.MIN_VALUE}:`, ""), 10)),
                [CONSTRAINT_IDENTIFIER.MAX_VALUE]: () => (this.maxValue = parseInt(constraint.replace(`${CONSTRAINT_IDENTIFIER.MAX_VALUE}:`, ""), 10)),
                [CONSTRAINT_IDENTIFIER.LESS_THAN]: () => (this.lessThan = constraint.replace(`${CONSTRAINT_IDENTIFIER.LESS_THAN}:`, "")),
                [CONSTRAINT_IDENTIFIER.GREATER_THAN]: () => (this.greaterThan = constraint.replace(`${CONSTRAINT_IDENTIFIER.GREATER_THAN}:`, ""))
            };
            actions[identifierInConstraint]();
        }, this);
        if (typeof this.minValue !== "undefined") {
            this.min = this.minValue;
        }
        if (typeof this.maxValue !== "undefined") {
            this.max = this.maxValue;
        }
    }
    setTriggerArgsInputConstraints() {
        if (typeof this.greaterThan !== "undefined") {
            this.attachTriggerArgsChangeListener(CONSTRAINT_IDENTIFIER.GREATER_THAN, this.greaterThan);
        }
        if (typeof this.lessThan !== "undefined") {
            this.attachTriggerArgsChangeListener(CONSTRAINT_IDENTIFIER.LESS_THAN, this.lessThan);
        }
    }
    /**
     * function to attach onChange listeners to RFxArg passed as "triggerArgs"
     */
    attachTriggerArgsChangeListener(type, rfxArg) {
        // check if rfxArg is passed as triggerArg in schema
        if (!this.widgetArgs.triggerArgs[rfxArg]) {
            console.error("Invalid Schema: Trigger Arg Not passed");
        }
        const triggerArg = this.widgetArgs.triggerArgs[rfxArg];
        const triggerArgValue = triggerArg.value;
        const actions = {
            [CONSTRAINT_IDENTIFIER.LESS_THAN]: () => (this.max = triggerArgValue - 1),
            [CONSTRAINT_IDENTIFIER.GREATER_THAN]: () => (this.min = triggerArgValue + 1)
        };
        actions[type]();
        // attach change listener
        triggerArg.input.addEventListener("rfxArgumentChange", ({ detail: { value } }) => {
            this.handleTriggerArgChange(type, value);
        });
    }
    handleTriggerArgChange(type, value) {
        const actions = {
            [CONSTRAINT_IDENTIFIER.LESS_THAN]: () => (this.max = value - 1),
            [CONSTRAINT_IDENTIFIER.GREATER_THAN]: () => (this.min = value + 1)
        };
        actions[type]?.();
        this.validate();
    }
    /**
     * Using the current input value(s), validates the input and sets the error message
     * @category Private
     */
    validate() {
        const value = this.value;
        if (value < this.min && typeof this.greaterThan !== "undefined") {
            this.errorMessage = this.strings.greaterThanErrorMessage.replace("${min}", `${this.widgetArgs.triggerArgs[this.greaterThan].displayName}`);
            return;
        }
        if (value < this.min) {
            this.errorMessage = this.strings.greaterThanOrEqualErrorMessage.replace("${min}", `${this.min}`);
            return;
        }
        if (value > this.max && typeof this.lessThan !== "undefined") {
            this.errorMessage = this.strings.lesserThanErrorMessage.replace("${max}", `${this.widgetArgs.triggerArgs[this.lessThan].displayName}`);
            return;
        }
        if (value > this.max) {
            this.errorMessage = this.strings.lesserThanOrEqualErrorMessage.replace("${max}", `${this.max}`);
            return;
        }
        this.errorMessage = undefined;
    }
    render() {
        const hasError = typeof this.errorMessage !== "undefined";
        const status = hasError ? _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_5__.U.INVALID : _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_5__.U.IDLE;
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { alignment: "start", scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__.U.Scale, layout: "default", ref: (e) => {
                this.widgetContainer = e;
            } }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-label", { label: this.inputArg.displayName, hideHelp: (0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(this.inputArg.helpTextID), onRfxLabelHelpActionClick: () => this.helpActionClickEventHandlers?.get(HelpClickHandlerKeys.inputArgHelpClickHandler)() }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { type: "number", value: (0,_sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_16__.s)(this.value), step: this.isFloatType ? "any" : 1, min: this.min, max: this.max, scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__.U.Scale, groupSeparator: true, onCalciteInputChange: this.handleInputChange }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { status: status, icon: "exclamationMarkTriangle", scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__.U.Scale, "icon-flip-rtl": this.direction === "rtl", hidden: !hasError }, this.errorMessage))));
    }
    static get assetsDirs() { return ["t9n"]; }
    get hostElement() { return (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.a)(this); }
};



//# sourceMappingURL=rfx-cte-ranged-value-editor-efd6dc16.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-ranged-value-editor.entry.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-ranged-value-editor.entry.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   rfx_cte_ranged_value_editor: () => (/* reexport safe */ _rfx_cte_ranged_value_editor_efd6dc16_js__WEBPACK_IMPORTED_MODULE_0__.R)
/* harmony export */ });
/* harmony import */ var _rfx_cte_ranged_value_editor_efd6dc16_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rfx-cte-ranged-value-editor-efd6dc16.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-ranged-value-editor-efd6dc16.js");
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _getTag_96af029d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_getTag-96af029d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/_getTag-96af029d.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./sanitize-number-d84114f7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");






















//# sourceMappingURL=rfx-cte-ranged-value-editor.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js":
/*!************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ formatNumberToLocale),
/* harmony export */   f: () => (/* binding */ formatNumber),
/* harmony export */   i: () => (/* binding */ isValidNumber),
/* harmony export */   p: () => (/* binding */ parseNumber),
/* harmony export */   s: () => (/* binding */ sanitizeNumber)
/* harmony export */ });
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");



/**
 * Indicates if a provided number value is valid.
 * An invalid value is: undefined | NaN | Infinite | -Infinite | null
 * See for more details:
 *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite
 *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN
 * @param {number | undefined | null} value value to check
 * @returns {boolean} if valid or not
 */
function isValidNumber(value) {
    return value !== undefined && value !== null && Number.isNaN(value) === false && Number.isFinite(value) === true;
}
/**
 * Returns a string representation of the provided number for use with calcite-input. It also
 * guards against invalid types following this logic:
 *   - If the value is valid (not NaN, finite), the value is returned as a string
 *   - If not and if a valid default value is provided, the default value is returned as a string
 *   - If not, an empty string is returned
 * @param value
 * @param defaultValue
 * @returns a sanitized string
 */
function sanitizeNumber(value, defaultValue) {
    let returnedValue;
    if (value !== null) {
        const testedValue = typeof value === "string" ? Number.parseFloat(value) : value;
        if (isValidNumber(testedValue))
            returnedValue = testedValue;
        else if (isValidNumber(defaultValue))
            returnedValue = defaultValue;
    }
    return returnedValue === undefined ? "" : `${returnedValue}`;
}
/**
 * Parses a value string to a number for use with calcite-input. If the string is empty, it will return undefined.
 * If the string is otherwise invalid, it will return NaN.
 * @param value calcite-input value
 * @returns {number | undefined} the parsed number
 */
function parseNumber(value) {
    if (value === "")
        return undefined;
    return Number.parseFloat(value);
}
/**
 * Formats a number to a specified number of decimal places.
 *
 * @param {number} value - The number to format.
 * @param {number} [fractionDigits=3] - The number of decimal places to include in the formatted number. Defaults to 3.
 * @returns {number|undefined} - The formatted number, or undefined if the input value is empty.
 */
function formatNumber(value, fractionDigits = 3) {
    if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__.i)(value))
        return undefined;
    return Number.parseFloat(value.toFixed(fractionDigits));
}
/**
 * Formats a number or string representing a number according to the locale, passing Intl number format options
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/ReferenceGlobal_Objects/Intl/NumberFormat/NumberFormat#options
 * @param {number | string | undefined} value to be formatted and localized
 * @param {Intl.NumberFormatOptions} formatOptions options object matching Intl.NumberFormat
 * @returns {string} localized / rounded string
 */
function formatNumberToLocale(value, formatOptions) {
    let formattedValue = "";
    if (!(0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__.i)(value) && !Number.isNaN(value)) {
        const localeCode = (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.g)().locale;
        formattedValue = Intl.NumberFormat(localeCode, formatOptions).format(Number(value));
    }
    return formattedValue;
}



//# sourceMappingURL=sanitize-number-d84114f7.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js":
/*!*****************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CalciteScale),
/* harmony export */   U: () => (/* binding */ UIDefaults),
/* harmony export */   a: () => (/* binding */ CalciteOverlayPositioning)
/* harmony export */ });
const UIDefaults = {
    Scale: "s",
    PopoverTimer: 60
};
const CalciteScale = {
    s: "s",
    m: "m"
};
const CalciteOverlayPositioning = {
    absolute: "absolute",
    fixed: "fixed"
};



//# sourceMappingURL=ui-utils-928a4096.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvYXJjZ2lzX2FuYWx5c2lzX25vZGVfbW9kdWxlc19hcmNnaXNfYXJjZ2lzLXJhc3Rlci1mdW5jdGlvbi1lZGl0b3JfLTc5Y2E5Ni5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFxSDtBQUNoQztBQUNsRDtBQUM4QjtBQUNSO0FBQ0s7QUFDWjtBQUNYO0FBQ0Q7QUFDTztBQUNrQjtBQUM5QjtBQUMwQjtBQUNGO0FBQzFCO0FBQ087QUFDZ0Q7QUFDM0M7QUFDQTs7QUFFM0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHFEQUFnQjtBQUN4QixpQ0FBaUMscURBQVc7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixhQUFhO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixnRUFBVztBQUN4QztBQUNBO0FBQ0EsOENBQThDLG1CQUFtQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw2Q0FBNkMsUUFBUSxtRUFBMkIsbUJBQW1CLHFEQUFZO0FBQzFIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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YnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL2FyY2dpcy9hbmFseXNpcy9ub2RlX21vZHVsZXMvQGFyY2dpcy9hcmNnaXMtcmFzdGVyLWZ1bmN0aW9uLWVkaXRvci9kaXN0L2VzbS9yZngtY3RlLXJhbmdlZC12YWx1ZS1lZGl0b3ItZWZkNmRjMTYuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL2V4dGVuc2lvbnMvd2lkZ2V0cy9hcmNnaXMvYW5hbHlzaXMvbm9kZV9tb2R1bGVzL0BhcmNnaXMvYXJjZ2lzLXJhc3Rlci1mdW5jdGlvbi1lZGl0b3IvZGlzdC9lc20vcmZ4LWN0ZS1yYW5nZWQtdmFsdWUtZWRpdG9yLmVudHJ5LmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9leHRlbnNpb25zL3dpZGdldHMvYXJjZ2lzL2FuYWx5c2lzL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2FyY2dpcy1yYXN0ZXItZnVuY3Rpb24tZWRpdG9yL2Rpc3QvZXNtL3Nhbml0aXplLW51bWJlci1kODQxMTRmNy5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL2FyY2dpcy9hbmFseXNpcy9ub2RlX21vZHVsZXMvQGFyY2dpcy9hcmNnaXMtcmFzdGVyLWZ1bmN0aW9uLWVkaXRvci9kaXN0L2VzbS91aS11dGlscy05MjhhNDA5Ni5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByIGFzIHJlZ2lzdGVySW5zdGFuY2UsIGMgYXMgY3JlYXRlRXZlbnQsIGcgYXMgZ2V0QXNzZXRQYXRoLCBoLCBhIGFzIGdldEVsZW1lbnQgfSBmcm9tICcuL2luZGV4LWRhMWI3MTM4LmpzJztcbmltcG9ydCB7IGIgYXMgZmV0Y2hDb21wb25lbnRMb2NhbGVTdHJpbmdzIH0gZnJvbSAnLi9sb2NhbGl6YXRpb24taGVscGVyLTQ4MTliNjdkLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL2NvcmUvbGFuZy5qcyc7XG5pbXBvcnQgeyBpIGFzIGlzRW1wdHlEYXRhSXRlbSB9IGZyb20gJy4vdHlwZS1nYXVyZHMtMTg0MDc0N2YuanMnO1xuaW1wb3J0IHsgVSBhcyBVSURlZmF1bHRzIH0gZnJvbSAnLi91aS11dGlscy05MjhhNDA5Ni5qcyc7XG5pbXBvcnQgeyBVIGFzIFVJSW5wdXRTdGF0dXMgfSBmcm9tICcuL2ludGVyZmFjZXMtZDBjNjg5NDQuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvaWRlbnRpdHkvSWRlbnRpdHlNYW5hZ2VyLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL2NvcmUvdXJsVXRpbHMuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvbGF5ZXJzL0xheWVyLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL2xheWVycy9JbWFnZXJ5TGF5ZXIuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvc21hcnRNYXBwaW5nL3Jhc3Rlci9yZW5kZXJlcnMvc3RyZXRjaC5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9yZXF1ZXN0LmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL3Jlc3Qvc3VwcG9ydC9BbGdvcml0aG1pY0NvbG9yUmFtcC5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9yZXN0L3N1cHBvcnQvTXVsdGlwYXJ0Q29sb3JSYW1wLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL0NvbG9yLmpzJztcbmltcG9ydCAnLi9jb2xvclJhbXBVdGlscy04YmRkNDZjNS5qcyc7XG5pbXBvcnQgeyBwIGFzIHBhcnNlTnVtYmVyLCBzIGFzIHNhbml0aXplTnVtYmVyIH0gZnJvbSAnLi9zYW5pdGl6ZS1udW1iZXItZDg0MTE0ZjcuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvcmVzdC9nZW9wcm9jZXNzb3IuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvcG9ydGFsL1BvcnRhbEl0ZW0uanMnO1xuXG5jb25zdCBIZWxwQ2xpY2tIYW5kbGVyS2V5cyA9IHtcbiAgICBpbnB1dEFyZ0hlbHBDbGlja0hhbmRsZXI6IFwiaW5wdXRBcmdIZWxwQ2xpY2tIYW5kbGVyXCJcbn07XG5cbmNvbnN0IENPTlNUUkFJTlRfSURFTlRJRklFUiA9IHtcbiAgICBNSU5fVkFMVUU6IFwibWluVmFsdWVcIixcbiAgICBNQVhfVkFMVUU6IFwibWF4VmFsdWVcIixcbiAgICBMRVNTX1RIQU46IFwibGVzc1RoYW5cIixcbiAgICBHUkVBVEVSX1RIQU46IFwiZ3JlYXRlclRoYW5cIlxufTtcbmNvbnN0IFJmeFJhbmdlZFZhbHVlRWRpdG9yID0gY2xhc3Mge1xuICAgIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICAgICAgcmVnaXN0ZXJJbnN0YW5jZSh0aGlzLCBob3N0UmVmKTtcbiAgICAgICAgdGhpcy5yZnhBcmd1bWVudENoYW5nZSA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwicmZ4QXJndW1lbnRDaGFuZ2VcIiwgNyk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTdG9yZXMgZXZlbnQgaGFuZGxlcnMgZm9yIGhlbHAgYWN0aW9uIGNsaWNrLCBzdG9yZWQgaW4gY29ubmVjdGVkIGNhbGxiYWNrIHRvIGF2b2lkXG4gICAgICAgICAqIGZldGNoaW5nIGZ1bmN0aW9uIG9uIGVhY2ggcmVuZGVyICggdG8gYXZvaWQgY29tbW9uIGJhZCBwcmFjdGljZSApXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmhlbHBBY3Rpb25DbGlja0V2ZW50SGFuZGxlcnMgPSBuZXcgTWFwKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAY2F0ZWdvcnkgRXZlbnQgSGFuZGxlclxuICAgICAgICAgKiBDYWxsZWQgd2hlbiB0aGUgY2FsY2l0ZSBpbnB1dCB2YWx1ZSBjaGFuZ2VzIHRvIGEgdmFsaWQgbnVtYmVyXG4gICAgICAgICAqIEBwYXJhbSB7Q3VzdG9tRXZlbnR9IGV2ZW50IGN1c3RvbSBjYWxjaXRlSW5wdXRJbnB1dCBldmVudFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5oYW5kbGVJbnB1dENoYW5nZSA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgLy8gV2UgYXJlIHN0b3BwaW5nIHRoZSBwcm9wYWdhdGlvbiBvZiB0aGlzIGNoYW5nZSBldmVudCBhcyB3ZSBlbWl0IGEgY3VzdG9tRXZlbnQgaW5zdGVhZC5cbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgaWYgKGV2ZW50LnRhcmdldCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlU3RyaW5nID0gKGV2ZW50Py50YXJnZXQpLnZhbHVlO1xuICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBwYXJzZU51bWJlcihuZXdWYWx1ZVN0cmluZyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbnB1dEFyZy52YWx1ZSA9IHRoaXMudmFsdWU7XG4gICAgICAgICAgICAgICAgdGhpcy52YWxpZGF0ZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMucmZ4QXJndW1lbnRDaGFuZ2UuZW1pdCh7IHZhbHVlOiB0aGlzLnZhbHVlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLm1heCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5taW4gPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnZhbHVlID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLndpZGdldEFyZ3MgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvL1xuICAgIC8vICBMaWZlY3ljbGVcbiAgICAvL1xuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgICAgdGhpcy5zZXRJbnB1dEFyZ3MoKTtcbiAgICB9XG4gICAgYXN5bmMgY29tcG9uZW50V2lsbExvYWQoKSB7XG4gICAgICAgICh7IHN0cmluZ3M6IHRoaXMuc3RyaW5ncywgZGlyOiB0aGlzLmRpcmVjdGlvbiB9ID0gYXdhaXQgZmV0Y2hDb21wb25lbnRMb2NhbGVTdHJpbmdzKHRoaXMuaG9zdEVsZW1lbnQsIGdldEFzc2V0UGF0aChgLmApKSk7XG4gICAgICAgIHRoaXMuc2V0SW5pdGlhbFN0YXRlKCk7XG4gICAgICAgIHRoaXMuc2V0Q29uc3RyYWludHMoKTtcbiAgICB9XG4gICAgY29tcG9uZW50RGlkTG9hZCgpIHtcbiAgICAgICAgdGhpcy5zZXRUcmlnZ2VyQXJnc0lucHV0Q29uc3RyYWludHMoKTtcbiAgICAgICAgdGhpcy5hdHRhY2hIZWxwQ2xpY2tFdmVudEhhbmRsZXJzKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBjYXRlZ29yeSBQcml2YXRlXG4gICAgICovXG4gICAgZ2V0IGlzRmxvYXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHRoaXMubnVtYmVyVHlwZSA9PT0gXCJ1bmRlZmluZWRcIiB8fCB0aGlzLm51bWJlclR5cGUgPT09IFwiZmxvYXRcIjtcbiAgICB9XG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vXG4gICAgLy8gIFByaXZhdGVcbiAgICAvL1xuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBzZXRJbml0aWFsU3RhdGUoKSB7XG4gICAgICAgIGNvbnN0IHJmeEFyZ1ZhbHVlID0gdGhpcy5pbnB1dEFyZy52YWx1ZSB8fCB0aGlzLmlucHV0QXJnLmRlZmF1bHRWYWx1ZTtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHJmeEFyZ1ZhbHVlO1xuICAgIH1cbiAgICBzZXRJbnB1dEFyZ3MoKSB7XG4gICAgICAgIC8vIHNob3VsZCBoYXZlIG9ubHkgb25lIGlucHV0QXJnXG4gICAgICAgIE9iamVjdC5rZXlzKHRoaXMud2lkZ2V0QXJncy5pbnB1dEFyZ3MpLmZvckVhY2goKF9pbnB1dEFyZykgPT4ge1xuICAgICAgICAgICAgY29uc3QgcmZ4QXJnID0gdGhpcy53aWRnZXRBcmdzLmlucHV0QXJnc1tfaW5wdXRBcmddO1xuICAgICAgICAgICAgdGhpcy5pbnB1dEFyZyA9IHJmeEFyZztcbiAgICAgICAgICAgIHJmeEFyZy5pbnB1dCA9IHRoaXMuaG9zdEVsZW1lbnQ7XG4gICAgICAgICAgICAvLyBTZXQgY29udHJhaW50cyBmb3IgXCJmbG9hdFwiIGRhdGF0eXBlXG4gICAgICAgICAgICBjb25zdCByZnhEYXRhdHlwZSA9IHRoaXMud2lkZ2V0QXJncy5hcmdTY2hlbWEuZGF0YVR5cGU7XG4gICAgICAgICAgICB0aGlzLm51bWJlclR5cGUgPSByZnhEYXRhdHlwZSA9PT0gXCJsb25nXCIgPyBcImZsb2F0XCIgOiBcImludGVnZXJcIjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGF0dGFjaEhlbHBDbGlja0V2ZW50SGFuZGxlcnMoKSB7XG4gICAgICAgIGNvbnN0IGlucHV0QXJnSGVscENsaWNrSGFuZGxlciA9IHRoaXMud2lkZ2V0QXJncy5vbkhlbHBBY3Rpb25DbGljayh7XG4gICAgICAgICAgICBoZWFkaW5nOiB0aGlzLmlucHV0QXJnLmRpc3BsYXlOYW1lLFxuICAgICAgICAgICAgcmVmZXJlbmNlRWxlbWVudDogdGhpcy53aWRnZXRDb250YWluZXIsXG4gICAgICAgICAgICBoZWxwVGV4dElEOiB0aGlzLmlucHV0QXJnPy5oZWxwVGV4dElEXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmhlbHBBY3Rpb25DbGlja0V2ZW50SGFuZGxlcnMuc2V0KEhlbHBDbGlja0hhbmRsZXJLZXlzLmlucHV0QXJnSGVscENsaWNrSGFuZGxlciwgaW5wdXRBcmdIZWxwQ2xpY2tIYW5kbGVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogdXRpbGl0eSBmdW5jdGlvbiB0byBjaGVjayBpZiB0aGUgc3RyaW5nIG1hdGNoZXMgYW55IHN1YnN0cmluZ1xuICAgICAqIGZyb20gYSBnaXZlbiBhcnJheVxuICAgICAqL1xuICAgIGV4dHJhY3RJZGVudGlmaWVyKHN0ciwgc3Vic3RyaW5ncykge1xuICAgICAgICBjb25zdCBtYXRjaCA9IHN1YnN0cmluZ3MuZmluZCgoc3Vic3RyaW5nKSA9PiBzdHIuaW5jbHVkZXMoc3Vic3RyaW5nKSk7XG4gICAgICAgIC8vIHdoZW4gY29uc3RyYWludCBoYXMgYW4gdW5rbm93biBpZGVudGlmaWVyXG4gICAgICAgIHJldHVybiBtYXRjaCA/PyBcIkludmFsaWRcIjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIHRoZSB3aWRnZXQgdHJpZ2dlciBhdHRyaWJ1dGVzIGFuZCBzZXRzIHRoZSBjb3JyZXNwb25kaW5nIGNvbnN0cmFpbnRzXG4gICAgICogdG8gdGhlIHdpZGdldCBzdGF0ZS4gUG9zc2libGUgdHJpZ2dlciBhdHRyaWJ1dGVzIHZhbHVlcyBhcmU6XG4gICAgICogXCJtaW5WYWx1ZTowO21heFZhbHVlOjEwMFwiXG4gICAgICogXCJtaW5WYWx1ZToxO2xlc3NUaGFuOk91dGVyUmFkaXVzXCJcbiAgICAgKiBcIm1pblZhbHVlOjI7Z3JlYXRlclRoYW46SW5uZXJSYWRpdXNcIlxuICAgICAqXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBzZXRDb25zdHJhaW50cygpIHtcbiAgICAgICAgY29uc3QgY29uc3RyYWludHMgPSB0aGlzLndpZGdldEFyZ3MudHJpZ2dlckF0dHJpYnV0ZXMuc3BsaXQoXCI7XCIpO1xuICAgICAgICBjb25zdCBpZGVudGlmaWVycyA9IFtcbiAgICAgICAgICAgIENPTlNUUkFJTlRfSURFTlRJRklFUi5NSU5fVkFMVUUsXG4gICAgICAgICAgICBDT05TVFJBSU5UX0lERU5USUZJRVIuTUFYX1ZBTFVFLFxuICAgICAgICAgICAgQ09OU1RSQUlOVF9JREVOVElGSUVSLkxFU1NfVEhBTixcbiAgICAgICAgICAgIENPTlNUUkFJTlRfSURFTlRJRklFUi5HUkVBVEVSX1RIQU5cbiAgICAgICAgXTtcbiAgICAgICAgY29uc3RyYWludHMuZm9yRWFjaCgoY29uc3RyYWludCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaWRlbnRpZmllckluQ29uc3RyYWludCA9IHRoaXMuZXh0cmFjdElkZW50aWZpZXIoY29uc3RyYWludCwgaWRlbnRpZmllcnMpO1xuICAgICAgICAgICAgLy8gIHN0b3JlIG51bWVyaWMgdmFsdWVzIGluIG1pblZhbHVlIGFuZCBtYXhWYWx1ZTtcbiAgICAgICAgICAgIC8vICBzdG9yZSByZnhBcmdzIG5hbWVzIGluIGxlc3NUaGFuIGFuZCBncmVhdGVyVGhhbjtcbiAgICAgICAgICAgIGNvbnN0IGFjdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgW0NPTlNUUkFJTlRfSURFTlRJRklFUi5NSU5fVkFMVUVdOiAoKSA9PiAodGhpcy5taW5WYWx1ZSA9IHBhcnNlSW50KGNvbnN0cmFpbnQucmVwbGFjZShgJHtDT05TVFJBSU5UX0lERU5USUZJRVIuTUlOX1ZBTFVFfTpgLCBcIlwiKSwgMTApKSxcbiAgICAgICAgICAgICAgICBbQ09OU1RSQUlOVF9JREVOVElGSUVSLk1BWF9WQUxVRV06ICgpID0+ICh0aGlzLm1heFZhbHVlID0gcGFyc2VJbnQoY29uc3RyYWludC5yZXBsYWNlKGAke0NPTlNUUkFJTlRfSURFTlRJRklFUi5NQVhfVkFMVUV9OmAsIFwiXCIpLCAxMCkpLFxuICAgICAgICAgICAgICAgIFtDT05TVFJBSU5UX0lERU5USUZJRVIuTEVTU19USEFOXTogKCkgPT4gKHRoaXMubGVzc1RoYW4gPSBjb25zdHJhaW50LnJlcGxhY2UoYCR7Q09OU1RSQUlOVF9JREVOVElGSUVSLkxFU1NfVEhBTn06YCwgXCJcIikpLFxuICAgICAgICAgICAgICAgIFtDT05TVFJBSU5UX0lERU5USUZJRVIuR1JFQVRFUl9USEFOXTogKCkgPT4gKHRoaXMuZ3JlYXRlclRoYW4gPSBjb25zdHJhaW50LnJlcGxhY2UoYCR7Q09OU1RSQUlOVF9JREVOVElGSUVSLkdSRUFURVJfVEhBTn06YCwgXCJcIikpXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgYWN0aW9uc1tpZGVudGlmaWVySW5Db25zdHJhaW50XSgpO1xuICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm1pblZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aGlzLm1pbiA9IHRoaXMubWluVmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm1heFZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aGlzLm1heCA9IHRoaXMubWF4VmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0VHJpZ2dlckFyZ3NJbnB1dENvbnN0cmFpbnRzKCkge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuZ3JlYXRlclRoYW4gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHRoaXMuYXR0YWNoVHJpZ2dlckFyZ3NDaGFuZ2VMaXN0ZW5lcihDT05TVFJBSU5UX0lERU5USUZJRVIuR1JFQVRFUl9USEFOLCB0aGlzLmdyZWF0ZXJUaGFuKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHRoaXMubGVzc1RoYW4gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHRoaXMuYXR0YWNoVHJpZ2dlckFyZ3NDaGFuZ2VMaXN0ZW5lcihDT05TVFJBSU5UX0lERU5USUZJRVIuTEVTU19USEFOLCB0aGlzLmxlc3NUaGFuKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBmdW5jdGlvbiB0byBhdHRhY2ggb25DaGFuZ2UgbGlzdGVuZXJzIHRvIFJGeEFyZyBwYXNzZWQgYXMgXCJ0cmlnZ2VyQXJnc1wiXG4gICAgICovXG4gICAgYXR0YWNoVHJpZ2dlckFyZ3NDaGFuZ2VMaXN0ZW5lcih0eXBlLCByZnhBcmcpIHtcbiAgICAgICAgLy8gY2hlY2sgaWYgcmZ4QXJnIGlzIHBhc3NlZCBhcyB0cmlnZ2VyQXJnIGluIHNjaGVtYVxuICAgICAgICBpZiAoIXRoaXMud2lkZ2V0QXJncy50cmlnZ2VyQXJnc1tyZnhBcmddKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiSW52YWxpZCBTY2hlbWE6IFRyaWdnZXIgQXJnIE5vdCBwYXNzZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdHJpZ2dlckFyZyA9IHRoaXMud2lkZ2V0QXJncy50cmlnZ2VyQXJnc1tyZnhBcmddO1xuICAgICAgICBjb25zdCB0cmlnZ2VyQXJnVmFsdWUgPSB0cmlnZ2VyQXJnLnZhbHVlO1xuICAgICAgICBjb25zdCBhY3Rpb25zID0ge1xuICAgICAgICAgICAgW0NPTlNUUkFJTlRfSURFTlRJRklFUi5MRVNTX1RIQU5dOiAoKSA9PiAodGhpcy5tYXggPSB0cmlnZ2VyQXJnVmFsdWUgLSAxKSxcbiAgICAgICAgICAgIFtDT05TVFJBSU5UX0lERU5USUZJRVIuR1JFQVRFUl9USEFOXTogKCkgPT4gKHRoaXMubWluID0gdHJpZ2dlckFyZ1ZhbHVlICsgMSlcbiAgICAgICAgfTtcbiAgICAgICAgYWN0aW9uc1t0eXBlXSgpO1xuICAgICAgICAvLyBhdHRhY2ggY2hhbmdlIGxpc3RlbmVyXG4gICAgICAgIHRyaWdnZXJBcmcuaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcInJmeEFyZ3VtZW50Q2hhbmdlXCIsICh7IGRldGFpbDogeyB2YWx1ZSB9IH0pID0+IHtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlVHJpZ2dlckFyZ0NoYW5nZSh0eXBlLCB2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBoYW5kbGVUcmlnZ2VyQXJnQ2hhbmdlKHR5cGUsIHZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGFjdGlvbnMgPSB7XG4gICAgICAgICAgICBbQ09OU1RSQUlOVF9JREVOVElGSUVSLkxFU1NfVEhBTl06ICgpID0+ICh0aGlzLm1heCA9IHZhbHVlIC0gMSksXG4gICAgICAgICAgICBbQ09OU1RSQUlOVF9JREVOVElGSUVSLkdSRUFURVJfVEhBTl06ICgpID0+ICh0aGlzLm1pbiA9IHZhbHVlICsgMSlcbiAgICAgICAgfTtcbiAgICAgICAgYWN0aW9uc1t0eXBlXT8uKCk7XG4gICAgICAgIHRoaXMudmFsaWRhdGUoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNpbmcgdGhlIGN1cnJlbnQgaW5wdXQgdmFsdWUocyksIHZhbGlkYXRlcyB0aGUgaW5wdXQgYW5kIHNldHMgdGhlIGVycm9yIG1lc3NhZ2VcbiAgICAgKiBAY2F0ZWdvcnkgUHJpdmF0ZVxuICAgICAqL1xuICAgIHZhbGlkYXRlKCkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMudmFsdWU7XG4gICAgICAgIGlmICh2YWx1ZSA8IHRoaXMubWluICYmIHR5cGVvZiB0aGlzLmdyZWF0ZXJUaGFuICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IHRoaXMuc3RyaW5ncy5ncmVhdGVyVGhhbkVycm9yTWVzc2FnZS5yZXBsYWNlKFwiJHttaW59XCIsIGAke3RoaXMud2lkZ2V0QXJncy50cmlnZ2VyQXJnc1t0aGlzLmdyZWF0ZXJUaGFuXS5kaXNwbGF5TmFtZX1gKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgPCB0aGlzLm1pbikge1xuICAgICAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSB0aGlzLnN0cmluZ3MuZ3JlYXRlclRoYW5PckVxdWFsRXJyb3JNZXNzYWdlLnJlcGxhY2UoXCIke21pbn1cIiwgYCR7dGhpcy5taW59YCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlID4gdGhpcy5tYXggJiYgdHlwZW9mIHRoaXMubGVzc1RoYW4gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gdGhpcy5zdHJpbmdzLmxlc3NlclRoYW5FcnJvck1lc3NhZ2UucmVwbGFjZShcIiR7bWF4fVwiLCBgJHt0aGlzLndpZGdldEFyZ3MudHJpZ2dlckFyZ3NbdGhpcy5sZXNzVGhhbl0uZGlzcGxheU5hbWV9YCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlID4gdGhpcy5tYXgpIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gdGhpcy5zdHJpbmdzLmxlc3NlclRoYW5PckVxdWFsRXJyb3JNZXNzYWdlLnJlcGxhY2UoXCIke21heH1cIiwgYCR7dGhpcy5tYXh9YCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgaGFzRXJyb3IgPSB0eXBlb2YgdGhpcy5lcnJvck1lc3NhZ2UgIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICAgIGNvbnN0IHN0YXR1cyA9IGhhc0Vycm9yID8gVUlJbnB1dFN0YXR1cy5JTlZBTElEIDogVUlJbnB1dFN0YXR1cy5JRExFO1xuICAgICAgICByZXR1cm4gKGgoXCJkaXZcIiwgbnVsbCwgaChcImNhbGNpdGUtbGFiZWxcIiwgeyBhbGlnbm1lbnQ6IFwic3RhcnRcIiwgc2NhbGU6IFVJRGVmYXVsdHMuU2NhbGUsIGxheW91dDogXCJkZWZhdWx0XCIsIHJlZjogKGUpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLndpZGdldENvbnRhaW5lciA9IGU7XG4gICAgICAgICAgICB9IH0sIGgoXCJyZngtbGFiZWxcIiwgeyBsYWJlbDogdGhpcy5pbnB1dEFyZy5kaXNwbGF5TmFtZSwgaGlkZUhlbHA6IGlzRW1wdHlEYXRhSXRlbSh0aGlzLmlucHV0QXJnLmhlbHBUZXh0SUQpLCBvblJmeExhYmVsSGVscEFjdGlvbkNsaWNrOiAoKSA9PiB0aGlzLmhlbHBBY3Rpb25DbGlja0V2ZW50SGFuZGxlcnM/LmdldChIZWxwQ2xpY2tIYW5kbGVyS2V5cy5pbnB1dEFyZ0hlbHBDbGlja0hhbmRsZXIpKCkgfSksIGgoXCJjYWxjaXRlLWlucHV0XCIsIHsgdHlwZTogXCJudW1iZXJcIiwgdmFsdWU6IHNhbml0aXplTnVtYmVyKHRoaXMudmFsdWUpLCBzdGVwOiB0aGlzLmlzRmxvYXRUeXBlID8gXCJhbnlcIiA6IDEsIG1pbjogdGhpcy5taW4sIG1heDogdGhpcy5tYXgsIHNjYWxlOiBVSURlZmF1bHRzLlNjYWxlLCBncm91cFNlcGFyYXRvcjogdHJ1ZSwgb25DYWxjaXRlSW5wdXRDaGFuZ2U6IHRoaXMuaGFuZGxlSW5wdXRDaGFuZ2UgfSksIGgoXCJjYWxjaXRlLWlucHV0LW1lc3NhZ2VcIiwgeyBzdGF0dXM6IHN0YXR1cywgaWNvbjogXCJleGNsYW1hdGlvbk1hcmtUcmlhbmdsZVwiLCBzY2FsZTogVUlEZWZhdWx0cy5TY2FsZSwgXCJpY29uLWZsaXAtcnRsXCI6IHRoaXMuZGlyZWN0aW9uID09PSBcInJ0bFwiLCBoaWRkZW46ICFoYXNFcnJvciB9LCB0aGlzLmVycm9yTWVzc2FnZSkpKSk7XG4gICAgfVxuICAgIHN0YXRpYyBnZXQgYXNzZXRzRGlycygpIHsgcmV0dXJuIFtcInQ5blwiXTsgfVxuICAgIGdldCBob3N0RWxlbWVudCgpIHsgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7IH1cbn07XG5cbmV4cG9ydCB7IFJmeFJhbmdlZFZhbHVlRWRpdG9yIGFzIFIgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmZ4LWN0ZS1yYW5nZWQtdmFsdWUtZWRpdG9yLWVmZDZkYzE2LmpzLm1hcCIsImV4cG9ydCB7IFIgYXMgcmZ4X2N0ZV9yYW5nZWRfdmFsdWVfZWRpdG9yIH0gZnJvbSAnLi9yZngtY3RlLXJhbmdlZC12YWx1ZS1lZGl0b3ItZWZkNmRjMTYuanMnO1xuaW1wb3J0ICcuL2luZGV4LWRhMWI3MTM4LmpzJztcbmltcG9ydCAnLi9sb2NhbGl6YXRpb24taGVscGVyLTQ4MTliNjdkLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL2NvcmUvbGFuZy5qcyc7XG5pbXBvcnQgJy4vdHlwZS1nYXVyZHMtMTg0MDc0N2YuanMnO1xuaW1wb3J0ICcuL19nZXRUYWctOTZhZjAyOWQuanMnO1xuaW1wb3J0ICcuL3VpLXV0aWxzLTkyOGE0MDk2LmpzJztcbmltcG9ydCAnLi9pbnRlcmZhY2VzLWQwYzY4OTQ0LmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL2lkZW50aXR5L0lkZW50aXR5TWFuYWdlci5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9jb3JlL3VybFV0aWxzLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL2xheWVycy9MYXllci5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9sYXllcnMvSW1hZ2VyeUxheWVyLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL3NtYXJ0TWFwcGluZy9yYXN0ZXIvcmVuZGVyZXJzL3N0cmV0Y2guanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvcmVxdWVzdC5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9yZXN0L3N1cHBvcnQvQWxnb3JpdGhtaWNDb2xvclJhbXAuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvcmVzdC9zdXBwb3J0L011bHRpcGFydENvbG9yUmFtcC5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9Db2xvci5qcyc7XG5pbXBvcnQgJy4vY29sb3JSYW1wVXRpbHMtOGJkZDQ2YzUuanMnO1xuaW1wb3J0ICcuL3Nhbml0aXplLW51bWJlci1kODQxMTRmNy5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9yZXN0L2dlb3Byb2Nlc3Nvci5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9wb3J0YWwvUG9ydGFsSXRlbS5qcyc7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJmeC1jdGUtcmFuZ2VkLXZhbHVlLWVkaXRvci5lbnRyeS5qcy5tYXAiLCJpbXBvcnQgeyBnIGFzIGdldExvY2FsZUluZm8gfSBmcm9tICcuL2xvY2FsaXphdGlvbi1oZWxwZXItNDgxOWI2N2QuanMnO1xuaW1wb3J0IHsgaSBhcyBpc0VtcHR5RGF0YUl0ZW0gfSBmcm9tICcuL3R5cGUtZ2F1cmRzLTE4NDA3NDdmLmpzJztcblxuLyoqXG4gKiBJbmRpY2F0ZXMgaWYgYSBwcm92aWRlZCBudW1iZXIgdmFsdWUgaXMgdmFsaWQuXG4gKiBBbiBpbnZhbGlkIHZhbHVlIGlzOiB1bmRlZmluZWQgfCBOYU4gfCBJbmZpbml0ZSB8IC1JbmZpbml0ZSB8IG51bGxcbiAqIFNlZSBmb3IgbW9yZSBkZXRhaWxzOlxuICogICAtIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL051bWJlci9pc0Zpbml0ZVxuICogICAtIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL051bWJlci9pc05hTlxuICogQHBhcmFtIHtudW1iZXIgfCB1bmRlZmluZWQgfCBudWxsfSB2YWx1ZSB2YWx1ZSB0byBjaGVja1xuICogQHJldHVybnMge2Jvb2xlYW59IGlmIHZhbGlkIG9yIG5vdFxuICovXG5mdW5jdGlvbiBpc1ZhbGlkTnVtYmVyKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IG51bGwgJiYgTnVtYmVyLmlzTmFOKHZhbHVlKSA9PT0gZmFsc2UgJiYgTnVtYmVyLmlzRmluaXRlKHZhbHVlKSA9PT0gdHJ1ZTtcbn1cbi8qKlxuICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgcHJvdmlkZWQgbnVtYmVyIGZvciB1c2Ugd2l0aCBjYWxjaXRlLWlucHV0LiBJdCBhbHNvXG4gKiBndWFyZHMgYWdhaW5zdCBpbnZhbGlkIHR5cGVzIGZvbGxvd2luZyB0aGlzIGxvZ2ljOlxuICogICAtIElmIHRoZSB2YWx1ZSBpcyB2YWxpZCAobm90IE5hTiwgZmluaXRlKSwgdGhlIHZhbHVlIGlzIHJldHVybmVkIGFzIGEgc3RyaW5nXG4gKiAgIC0gSWYgbm90IGFuZCBpZiBhIHZhbGlkIGRlZmF1bHQgdmFsdWUgaXMgcHJvdmlkZWQsIHRoZSBkZWZhdWx0IHZhbHVlIGlzIHJldHVybmVkIGFzIGEgc3RyaW5nXG4gKiAgIC0gSWYgbm90LCBhbiBlbXB0eSBzdHJpbmcgaXMgcmV0dXJuZWRcbiAqIEBwYXJhbSB2YWx1ZVxuICogQHBhcmFtIGRlZmF1bHRWYWx1ZVxuICogQHJldHVybnMgYSBzYW5pdGl6ZWQgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIHNhbml0aXplTnVtYmVyKHZhbHVlLCBkZWZhdWx0VmFsdWUpIHtcbiAgICBsZXQgcmV0dXJuZWRWYWx1ZTtcbiAgICBpZiAodmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3QgdGVzdGVkVmFsdWUgPSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgPyBOdW1iZXIucGFyc2VGbG9hdCh2YWx1ZSkgOiB2YWx1ZTtcbiAgICAgICAgaWYgKGlzVmFsaWROdW1iZXIodGVzdGVkVmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuZWRWYWx1ZSA9IHRlc3RlZFZhbHVlO1xuICAgICAgICBlbHNlIGlmIChpc1ZhbGlkTnVtYmVyKGRlZmF1bHRWYWx1ZSkpXG4gICAgICAgICAgICByZXR1cm5lZFZhbHVlID0gZGVmYXVsdFZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gcmV0dXJuZWRWYWx1ZSA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IGAke3JldHVybmVkVmFsdWV9YDtcbn1cbi8qKlxuICogUGFyc2VzIGEgdmFsdWUgc3RyaW5nIHRvIGEgbnVtYmVyIGZvciB1c2Ugd2l0aCBjYWxjaXRlLWlucHV0LiBJZiB0aGUgc3RyaW5nIGlzIGVtcHR5LCBpdCB3aWxsIHJldHVybiB1bmRlZmluZWQuXG4gKiBJZiB0aGUgc3RyaW5nIGlzIG90aGVyd2lzZSBpbnZhbGlkLCBpdCB3aWxsIHJldHVybiBOYU4uXG4gKiBAcGFyYW0gdmFsdWUgY2FsY2l0ZS1pbnB1dCB2YWx1ZVxuICogQHJldHVybnMge251bWJlciB8IHVuZGVmaW5lZH0gdGhlIHBhcnNlZCBudW1iZXJcbiAqL1xuZnVuY3Rpb24gcGFyc2VOdW1iZXIodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IFwiXCIpXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KHZhbHVlKTtcbn1cbi8qKlxuICogRm9ybWF0cyBhIG51bWJlciB0byBhIHNwZWNpZmllZCBudW1iZXIgb2YgZGVjaW1hbCBwbGFjZXMuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlIC0gVGhlIG51bWJlciB0byBmb3JtYXQuXG4gKiBAcGFyYW0ge251bWJlcn0gW2ZyYWN0aW9uRGlnaXRzPTNdIC0gVGhlIG51bWJlciBvZiBkZWNpbWFsIHBsYWNlcyB0byBpbmNsdWRlIGluIHRoZSBmb3JtYXR0ZWQgbnVtYmVyLiBEZWZhdWx0cyB0byAzLlxuICogQHJldHVybnMge251bWJlcnx1bmRlZmluZWR9IC0gVGhlIGZvcm1hdHRlZCBudW1iZXIsIG9yIHVuZGVmaW5lZCBpZiB0aGUgaW5wdXQgdmFsdWUgaXMgZW1wdHkuXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdE51bWJlcih2YWx1ZSwgZnJhY3Rpb25EaWdpdHMgPSAzKSB7XG4gICAgaWYgKGlzRW1wdHlEYXRhSXRlbSh2YWx1ZSkpXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KHZhbHVlLnRvRml4ZWQoZnJhY3Rpb25EaWdpdHMpKTtcbn1cbi8qKlxuICogRm9ybWF0cyBhIG51bWJlciBvciBzdHJpbmcgcmVwcmVzZW50aW5nIGEgbnVtYmVyIGFjY29yZGluZyB0byB0aGUgbG9jYWxlLCBwYXNzaW5nIEludGwgbnVtYmVyIGZvcm1hdCBvcHRpb25zXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZUdsb2JhbF9PYmplY3RzL0ludGwvTnVtYmVyRm9ybWF0L051bWJlckZvcm1hdCNvcHRpb25zXG4gKiBAcGFyYW0ge251bWJlciB8IHN0cmluZyB8IHVuZGVmaW5lZH0gdmFsdWUgdG8gYmUgZm9ybWF0dGVkIGFuZCBsb2NhbGl6ZWRcbiAqIEBwYXJhbSB7SW50bC5OdW1iZXJGb3JtYXRPcHRpb25zfSBmb3JtYXRPcHRpb25zIG9wdGlvbnMgb2JqZWN0IG1hdGNoaW5nIEludGwuTnVtYmVyRm9ybWF0XG4gKiBAcmV0dXJucyB7c3RyaW5nfSBsb2NhbGl6ZWQgLyByb3VuZGVkIHN0cmluZ1xuICovXG5mdW5jdGlvbiBmb3JtYXROdW1iZXJUb0xvY2FsZSh2YWx1ZSwgZm9ybWF0T3B0aW9ucykge1xuICAgIGxldCBmb3JtYXR0ZWRWYWx1ZSA9IFwiXCI7XG4gICAgaWYgKCFpc0VtcHR5RGF0YUl0ZW0odmFsdWUpICYmICFOdW1iZXIuaXNOYU4odmFsdWUpKSB7XG4gICAgICAgIGNvbnN0IGxvY2FsZUNvZGUgPSBnZXRMb2NhbGVJbmZvKCkubG9jYWxlO1xuICAgICAgICBmb3JtYXR0ZWRWYWx1ZSA9IEludGwuTnVtYmVyRm9ybWF0KGxvY2FsZUNvZGUsIGZvcm1hdE9wdGlvbnMpLmZvcm1hdChOdW1iZXIodmFsdWUpKTtcbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZFZhbHVlO1xufVxuXG5leHBvcnQgeyBmb3JtYXROdW1iZXJUb0xvY2FsZSBhcyBhLCBmb3JtYXROdW1iZXIgYXMgZiwgaXNWYWxpZE51bWJlciBhcyBpLCBwYXJzZU51bWJlciBhcyBwLCBzYW5pdGl6ZU51bWJlciBhcyBzIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNhbml0aXplLW51bWJlci1kODQxMTRmNy5qcy5tYXAiLCJjb25zdCBVSURlZmF1bHRzID0ge1xuICAgIFNjYWxlOiBcInNcIixcbiAgICBQb3BvdmVyVGltZXI6IDYwXG59O1xuY29uc3QgQ2FsY2l0ZVNjYWxlID0ge1xuICAgIHM6IFwic1wiLFxuICAgIG06IFwibVwiXG59O1xuY29uc3QgQ2FsY2l0ZU92ZXJsYXlQb3NpdGlvbmluZyA9IHtcbiAgICBhYnNvbHV0ZTogXCJhYnNvbHV0ZVwiLFxuICAgIGZpeGVkOiBcImZpeGVkXCJcbn07XG5cbmV4cG9ydCB7IENhbGNpdGVTY2FsZSBhcyBDLCBVSURlZmF1bHRzIGFzIFUsIENhbGNpdGVPdmVybGF5UG9zaXRpb25pbmcgYXMgYSB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11aS11dGlscy05MjhhNDA5Ni5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=