"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_esri_calcite-components_dist_esm_calcite-modal_entry_js"],{

/***/ "./node_modules/@esri/calcite-components/dist/esm/calcite-modal.entry.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/calcite-modal.entry.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcite_modal: () => (/* binding */ Modal)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _conditionalSlot_f6710875_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conditionalSlot-f6710875.js */ "./node_modules/@esri/calcite-components/dist/esm/conditionalSlot-f6710875.js");
/* harmony import */ var _dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom-ed00a585.js */ "./node_modules/@esri/calcite-components/dist/esm/dom-ed00a585.js");
/* harmony import */ var _focusTrapComponent_aee15b41_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./focusTrapComponent-aee15b41.js */ "./node_modules/@esri/calcite-components/dist/esm/focusTrapComponent-aee15b41.js");
/* harmony import */ var _loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./loadable-b17396e0.js */ "./node_modules/@esri/calcite-components/dist/esm/loadable-b17396e0.js");
/* harmony import */ var _observers_71d332db_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./observers-71d332db.js */ "./node_modules/@esri/calcite-components/dist/esm/observers-71d332db.js");
/* harmony import */ var _openCloseComponent_48db6daf_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./openCloseComponent-48db6daf.js */ "./node_modules/@esri/calcite-components/dist/esm/openCloseComponent-48db6daf.js");
/* harmony import */ var _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./locale-6e783cf0.js */ "./node_modules/@esri/calcite-components/dist/esm/locale-6e783cf0.js");
/* harmony import */ var _t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./t9n-0bcdca54.js */ "./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js");
/* harmony import */ var _component_f94cab72_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./component-f94cab72.js */ "./node_modules/@esri/calcite-components/dist/esm/component-f94cab72.js");
/* harmony import */ var _guid_21fecfa4_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./guid-21fecfa4.js */ "./node_modules/@esri/calcite-components/dist/esm/guid-21fecfa4.js");
/* harmony import */ var _resources_cf82388c_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./resources-cf82388c.js */ "./node_modules/@esri/calcite-components/dist/esm/resources-cf82388c.js");
/* harmony import */ var _key_61f82ddb_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./key-61f82ddb.js */ "./node_modules/@esri/calcite-components/dist/esm/key-61f82ddb.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */














const CSS = {
  modal: "modal",
  title: "title",
  header: "header",
  footer: "footer",
  scrim: "scrim",
  back: "back",
  close: "close",
  secondary: "secondary",
  primary: "primary",
  container: "container",
  containerOpen: "container--open",
  content: "content",
  contentNoFooter: "content--no-footer",
  contentBottom: "content-bottom",
  contentTop: "content-top",
  slottedInShell: "slotted-in-shell",
  // these classes help apply the animation in phases to only set transform on open/close
  // this helps avoid a positioning issue for any floating-ui-owning children
  openingIdle: "modal--opening-idle",
  openingActive: "modal--opening-active",
  closingIdle: "modal--closing-idle",
  closingActive: "modal--closing-active",
};
const ICONS = {
  close: "x",
};
const SLOTS = {
  content: "content",
  contentBottom: "content-bottom",
  contentTop: "content-top",
  header: "header",
  back: "back",
  secondary: "secondary",
  primary: "primary",
};

const modalCss = ":host{--calcite-modal-scrim-background:rgba(0, 0, 0, 0.85);position:absolute;inset:0px;z-index:var(--calcite-z-index-overlay);display:flex;opacity:0;visibility:hidden !important;transition:visibility 0ms linear var(--calcite-internal-animation-timing-slow), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);--calcite-modal-scrim-background-internal:rgba(0, 0, 0, 0.85)}.content-top[hidden],.content-bottom[hidden]{display:none}.container{position:fixed;inset:0px;z-index:var(--calcite-z-index-overlay);display:flex;align-items:center;justify-content:center;overflow-y:hidden;color:var(--calcite-color-text-2);opacity:0;visibility:hidden !important;transition:visibility 0ms linear var(--calcite-internal-animation-timing-slow), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88)}:host([scale=s]){--calcite-modal-padding-internal:0.75rem;--calcite-modal-padding-large-internal:1rem;--calcite-modal-title-text-internal:var(--calcite-font-size-1);--calcite-modal-content-text-internal:var(--calcite-font-size--1)}:host([scale=m]){--calcite-modal-padding-internal:1rem;--calcite-modal-padding-large-internal:1.25rem;--calcite-modal-title-text-internal:var(--calcite-font-size-2);--calcite-modal-content-text-internal:var(--calcite-font-size-0)}:host([scale=l]){--calcite-modal-padding-internal:1.25rem;--calcite-modal-padding-large-internal:1.5rem;--calcite-modal-title-text-internal:var(--calcite-font-size-3);--calcite-modal-content-text-internal:var(--calcite-font-size-1)}.scrim{--calcite-scrim-background:var(--calcite-modal-scrim-background, var(--calcite-color-transparent-scrim));position:fixed;inset:0px;display:flex;overflow-y:hidden}.modal{pointer-events:none;z-index:var(--calcite-z-index-modal);float:none;margin:1.5rem;box-sizing:border-box;display:flex;inline-size:100%;flex-direction:column;overflow:hidden;border-radius:0.25rem;background-color:var(--calcite-color-foreground-1);opacity:0;--tw-shadow:0 2px 12px -4px rgba(0, 0, 0, 0.2), 0 2px 4px -2px rgba(0, 0, 0, 0.16);--tw-shadow-colored:0 2px 12px -4px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);-webkit-overflow-scrolling:touch;visibility:hidden;transition:transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), visibility 0ms linear var(--calcite-internal-animation-timing-slow), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);--calcite-modal-hidden-position:translate3d(0, 20px, 0);--calcite-modal-shown-position:translate3d(0, 0, 0)}.modal--opening-idle{transform:var(--calcite-modal-hidden-position)}.modal--opening-active{transform:var(--calcite-modal-shown-position)}.modal--closing-idle{transform:var(--calcite-modal-shown-position)}.modal--closing-active{transform:var(--calcite-modal-hidden-position)}:host([opened]){opacity:1;visibility:visible !important;transition-delay:0ms}.container--open{opacity:1;visibility:visible !important;transition-delay:0ms}.container--open .modal{pointer-events:auto;visibility:visible;opacity:1;transition:transform var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), visibility 0ms linear, opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-inline-size var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), max-block-size var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);transition-delay:0ms}.header{z-index:var(--calcite-z-index-header);display:flex;min-inline-size:0px;max-inline-size:100%;border-start-start-radius:0.25rem;border-start-end-radius:0.25rem;border-width:0px;border-block-end-width:1px;border-style:solid;border-color:var(--calcite-color-border-3);background-color:var(--calcite-color-foreground-1);flex:0 0 auto}.close{order:2;margin:0px;cursor:pointer;appearance:none;border-style:none;background-color:transparent;color:var(--calcite-color-text-3);outline-color:transparent;transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;padding-block:var(--calcite-modal-padding-internal);padding-inline:var(--calcite-modal-padding-internal);flex:0 0 auto}.close calcite-icon{pointer-events:none;vertical-align:-2px}.close:focus{outline:2px solid var(--calcite-color-brand);outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          )}.close:hover,.close:focus,.close:active{background-color:var(--calcite-color-foreground-2);color:var(--calcite-color-text-1)}.title{order:1;display:flex;min-inline-size:0px;align-items:center;flex:1 1 auto;padding-block:var(--calcite-modal-padding-internal);padding-inline:var(--calcite-modal-padding-large-internal)}slot[name=header]::slotted(*),*::slotted([slot=header]){margin:0px;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-color-text-1);font-size:var(--calcite-modal-title-text-internal)}.content{position:relative;box-sizing:border-box;display:block;block-size:100%;overflow:auto;padding:0px;background-color:var(--calcite-modal-content-background, var(--calcite-color-foreground-1));max-block-size:100%;padding:var(--calcite-modal-content-padding, var(--calcite-modal-padding-internal))}.content-top,.content-bottom{z-index:var(--calcite-z-index-header);display:flex;border-width:0px;border-style:solid;border-color:var(--calcite-color-border-3);background-color:var(--calcite-color-foreground-1);flex:0 0 auto;padding:var(--calcite-modal-padding-internal)}.content-top{min-inline-size:0px;max-inline-size:100%;border-block-end-width:1px}.content-bottom{margin-block-start:auto;box-sizing:border-box;inline-size:100%;justify-content:space-between;border-block-start-width:1px}.content-top:not(.header~.content-top){border-start-start-radius:0.25rem;border-start-end-radius:0.25rem}.content-bottom:not(.content-bottom~.footer),.content--no-footer{border-end-end-radius:0.25rem;border-end-start-radius:0.25rem}slot[name=content]::slotted(*),*::slotted([slot=content]){font-size:var(--calcite-modal-context-text-internal)}.footer{z-index:var(--calcite-z-index-header);margin-block-start:auto;box-sizing:border-box;display:flex;inline-size:100%;justify-content:space-between;border-end-end-radius:0.25rem;border-end-start-radius:0.25rem;border-width:0px;border-block-start-width:1px;border-style:solid;border-color:var(--calcite-color-border-3);background-color:var(--calcite-color-foreground-1);flex:0 0 auto;padding-block:var(--calcite-modal-padding-internal);padding-inline:var(--calcite-modal-padding-large-internal)}.footer--hide-back .back,.footer--hide-secondary .secondary{display:none}.back{display:block;margin-inline-end:auto}.secondary{margin-inline:0.25rem;display:block}slot[name=primary]{display:block}:host([width=small]) .modal{inline-size:auto}:host([width-scale=s]) .modal{max-block-size:100%;max-inline-size:100%;inline-size:var(--calcite-modal-width, 32rem);block-size:var(--calcite-modal-height, auto)}@media screen and (max-width: 35rem){:host([width-scale=s]) .modal{margin:0px;block-size:100%;max-block-size:100%;inline-size:100%;max-inline-size:100%}:host([width-scale=s]) .content{flex:1 1 auto;max-block-size:unset}:host([width-scale=s][docked]) .container{align-items:flex-end}}:host([width-scale=m]) .modal{max-block-size:100%;max-inline-size:100%;inline-size:var(--calcite-modal-width, 48rem);block-size:var(--calcite-modal-height, auto)}@media screen and (max-width: 51rem){:host([width-scale=m]) .modal{margin:0px;block-size:100%;max-block-size:100%;inline-size:100%;max-inline-size:100%}:host([width-scale=m]) .content{flex:1 1 auto;max-block-size:unset}:host([width-scale=m][docked]) .container{align-items:flex-end}}:host([width-scale=l]) .modal{max-block-size:100%;max-inline-size:100%;inline-size:var(--calcite-modal-width, 94rem);block-size:var(--calcite-modal-height, auto)}@media screen and (max-width: 97rem){:host([width-scale=l]) .modal{margin:0px;block-size:100%;max-block-size:100%;inline-size:100%;max-inline-size:100%}:host([width-scale=l]) .content{flex:1 1 auto;max-block-size:unset}:host([width-scale=l][docked]) .container{align-items:flex-end}}:host([fullscreen]) .modal{margin:0px;block-size:100%;max-block-size:100%;inline-size:100%;max-inline-size:100%;border-radius:0px;--calcite-modal-hidden-position:translate3D(0, 20px, 0) scale(0.95);--calcite-modal-shown-position:translate3D(0, 0, 0) scale(1)}:host([fullscreen]) .content{max-block-size:100%;flex:1 1 auto}:host([opened][fullscreen]) .header,:host([opened][fullscreen]) .footer,:host([opened][fullscreen]) .content-top,:host([opened][fullscreen]) .content-bottom{border-radius:0}:host([docked]) .modal{block-size:var(--calcite-modal-height, auto)}:host([docked]) .content{block-size:auto;flex:1 1 auto}:host([kind=brand]) .modal{border-color:var(--calcite-color-brand)}:host([kind=danger]) .modal{border-color:var(--calcite-color-status-danger)}:host([kind=info]) .modal{border-color:var(--calcite-color-status-info)}:host([kind=success]) .modal{border-color:var(--calcite-color-status-success)}:host([kind=warning]) .modal{border-color:var(--calcite-color-status-warning)}:host([kind=brand]) .modal,:host([kind=danger]) .modal,:host([kind=info]) .modal,:host([kind=success]) .modal,:host([kind=warning]) .modal{border-width:0px;border-block-start-width:4px;border-style:solid}:host([kind=brand]) .header,:host([kind=brand]) .content-top,:host([kind=danger]) .header,:host([kind=danger]) .content-top,:host([kind=info]) .header,:host([kind=info]) .content-top,:host([kind=success]) .header,:host([kind=success]) .content-top,:host([kind=warning]) .header,:host([kind=warning]) .content-top{border-radius:0.25rem;border-end-end-radius:0px;border-end-start-radius:0px}@media screen and (max-width: 860px){* slot[name=header]::slotted(content-top),* content-top::slotted([slot=header]){font-size:var(--calcite-font-size-1)}.footer,.content-bottom{position:sticky;inset-block-end:0px}}@media screen and (max-width: 480px){.footer,.content-bottom{flex-direction:column}.back,.secondary{margin:0px;margin-block-end:0.25rem}}.container.slotted-in-shell{position:absolute;pointer-events:auto}.container.slotted-in-shell calcite-scrim{position:absolute}:host([hidden]){display:none}[hidden]{display:none}";

const Modal = class {
  constructor(hostRef) {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteModalBeforeClose = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteModalBeforeClose", 6);
    this.calciteModalClose = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteModalClose", 6);
    this.calciteModalBeforeOpen = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteModalBeforeOpen", 6);
    this.calciteModalOpen = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteModalOpen", 6);
    //--------------------------------------------------------------------------
    //
    //  Private Properties/ State
    //
    //--------------------------------------------------------------------------
    this.ignoreOpenChange = false;
    this.mutationObserver = (0,_observers_71d332db_js__WEBPACK_IMPORTED_MODULE_5__.c)("mutation", () => this.handleMutationObserver());
    this.cssVarObserver = (0,_observers_71d332db_js__WEBPACK_IMPORTED_MODULE_5__.c)("mutation", () => {
      this.updateSizeCssVars();
    });
    this.openTransitionProp = "opacity";
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.setTransitionEl = (el) => {
      this.transitionEl = el;
    };
    this.openEnd = () => {
      this.setFocus();
      this.el.removeEventListener("calciteModalOpen", this.openEnd);
    };
    this.handleCloseClick = () => {
      this.open = false;
    };
    this.handleOutsideClose = () => {
      if (this.outsideCloseDisabled) {
        return;
      }
      this.open = false;
    };
    this.closeModal = async () => {
      if (this.beforeClose) {
        try {
          await this.beforeClose(this.el);
        }
        catch (_error) {
          // close prevented
          requestAnimationFrame(() => {
            this.ignoreOpenChange = true;
            this.open = true;
            this.ignoreOpenChange = false;
          });
          return;
        }
      }
      this.opened = false;
      this.removeOverflowHiddenClass();
    };
    this.handleMutationObserver = () => {
      this.updateFooterVisibility();
      this.updateFocusTrapElements();
    };
    this.updateFooterVisibility = () => {
      this.hasFooter = !!(0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.e)(this.el, [SLOTS.back, SLOTS.primary, SLOTS.secondary]);
    };
    this.updateSizeCssVars = () => {
      this.cssWidth = getComputedStyle(this.el).getPropertyValue("--calcite-modal-width");
      this.cssHeight = getComputedStyle(this.el).getPropertyValue("--calcite-modal-height");
    };
    this.contentTopSlotChangeHandler = (event) => {
      this.hasContentTop = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.b)(event);
    };
    this.contentBottomSlotChangeHandler = (event) => {
      this.hasContentBottom = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.b)(event);
    };
    this.open = false;
    this.opened = false;
    this.beforeClose = undefined;
    this.closeButtonDisabled = false;
    this.focusTrapDisabled = false;
    this.outsideCloseDisabled = false;
    this.docked = undefined;
    this.escapeDisabled = false;
    this.scale = "m";
    this.widthScale = "m";
    this.fullscreen = undefined;
    this.kind = undefined;
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.slottedInShell = undefined;
    this.cssWidth = undefined;
    this.cssHeight = undefined;
    this.hasFooter = true;
    this.hasContentTop = false;
    this.hasContentBottom = false;
    this.effectiveLocale = undefined;
    this.defaultMessages = undefined;
  }
  handleFocusTrapDisabled(focusTrapDisabled) {
    if (!this.open) {
      return;
    }
    focusTrapDisabled ? (0,_focusTrapComponent_aee15b41_js__WEBPACK_IMPORTED_MODULE_3__.d)(this) : (0,_focusTrapComponent_aee15b41_js__WEBPACK_IMPORTED_MODULE_3__.a)(this);
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  async componentWillLoad() {
    await (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_8__.s)(this);
    (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_4__.s)(this);
    // when modal initially renders, if active was set we need to open as watcher doesn't fire
    if (this.open) {
      requestAnimationFrame(() => this.openModal());
    }
  }
  componentDidLoad() {
    (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_4__.a)(this);
  }
  connectedCallback() {
    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });
    this.cssVarObserver?.observe(this.el, { attributeFilter: ["style"] });
    this.updateSizeCssVars();
    this.updateFooterVisibility();
    (0,_conditionalSlot_f6710875_js__WEBPACK_IMPORTED_MODULE_1__.c)(this);
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_7__.c)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_8__.c)(this);
    (0,_focusTrapComponent_aee15b41_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
  }
  disconnectedCallback() {
    this.removeOverflowHiddenClass();
    this.mutationObserver?.disconnect();
    this.cssVarObserver?.disconnect();
    (0,_conditionalSlot_f6710875_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    (0,_focusTrapComponent_aee15b41_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_7__.d)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_8__.d)(this);
    this.slottedInShell = false;
  }
  render() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.H, { "aria-describedby": this.contentId, "aria-labelledby": this.titleId, "aria-modal": "true", role: "dialog" }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
        [CSS.container]: true,
        [CSS.containerOpen]: this.opened,
        [CSS.slottedInShell]: this.slottedInShell,
      } }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-scrim", { class: CSS.scrim, onClick: this.handleOutsideClose }), this.renderStyle(), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
        [CSS.modal]: true,
      },
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setTransitionEl }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS.header }, this.renderCloseButton(), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("header", { class: CSS.title }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: CSS.header }))), this.renderContentTop(), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
        [CSS.content]: true,
        [CSS.contentNoFooter]: !this.hasFooter,
      },
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: (el) => (this.modalContent = el) }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.content })), this.renderContentBottom(), this.renderFooter()))));
  }
  renderFooter() {
    return this.hasFooter ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS.footer, key: "footer" }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: CSS.back }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.back })), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: CSS.secondary }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.secondary })), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: CSS.primary }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.primary })))) : null;
  }
  renderContentTop() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS.contentTop, hidden: !this.hasContentTop }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.contentTop, onSlotchange: this.contentTopSlotChangeHandler })));
  }
  renderContentBottom() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS.contentBottom, hidden: !this.hasContentBottom }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.contentBottom, onSlotchange: this.contentBottomSlotChangeHandler })));
  }
  renderCloseButton() {
    return !this.closeButtonDisabled ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("button", { "aria-label": this.messages.close, class: CSS.close, key: "button", onClick: this.handleCloseClick, title: this.messages.close,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: (el) => (this.closeButtonEl = el) }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: ICONS.close, scale: (0,_component_f94cab72_js__WEBPACK_IMPORTED_MODULE_9__.g)(this.scale) }))) : null;
  }
  renderStyle() {
    if (!this.fullscreen && (this.cssWidth || this.cssHeight)) {
      return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("style", null, `.${CSS.container} {
              ${this.docked && this.cssWidth ? `align-items: center !important;` : ""}
            }
            .${CSS.modal} {
              block-size: ${this.cssHeight ? this.cssHeight : "auto"} !important;
              ${this.cssWidth ? `inline-size: ${this.cssWidth} !important;` : ""}
              ${this.cssWidth ? `max-inline-size: ${this.cssWidth} !important;` : ""}
              ${this.docked ? `border-radius: var(--calcite-border-radius) !important;` : ""}
            }
            @media screen and (max-width: ${this.cssWidth}) {
              .${CSS.container} {
                ${this.docked ? `align-items: flex-end !important;` : ""}
              }
              .${CSS.modal} {
                max-block-size: 100% !important;
                inline-size: 100% !important;
                max-inline-size: 100% !important;
                min-inline-size: 100% !important;
                margin: 0 !important;
                ${!this.docked ? `block-size: 100% !important;` : ""}
                ${!this.docked ? `border-radius: 0 !important;` : ""}
                ${this.docked
        ? `border-radius: var(--calcite-border-radius) var(--calcite-border-radius) 0 0 !important;`
        : ""}
              }
            }
          `));
    }
  }
  effectiveLocaleChange() {
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_8__.u)(this, this.effectiveLocale);
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  handleEscape(event) {
    if (this.open && !this.escapeDisabled && event.key === "Escape" && !event.defaultPrevented) {
      this.open = false;
      event.preventDefault();
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Sets focus on the component's "close" button (the first focusable item).
   *
   */
  async setFocus() {
    await (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
    (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.f)(this.el);
  }
  /**
   * Updates the element(s) that are used within the focus-trap of the component.
   */
  async updateFocusTrapElements() {
    (0,_focusTrapComponent_aee15b41_js__WEBPACK_IMPORTED_MODULE_3__.u)(this);
  }
  /**
   * Sets the scroll top of the component's content.
   *
   * @param top
   * @param left
   */
  async scrollContent(top = 0, left = 0) {
    if (this.modalContent) {
      if (this.modalContent.scrollTo) {
        this.modalContent.scrollTo({ top, left, behavior: "smooth" });
      }
      else {
        this.modalContent.scrollTop = top;
        this.modalContent.scrollLeft = left;
      }
    }
  }
  onBeforeOpen() {
    this.transitionEl.classList.add(CSS.openingActive);
    this.calciteModalBeforeOpen.emit();
  }
  onOpen() {
    this.transitionEl.classList.remove(CSS.openingIdle, CSS.openingActive);
    this.calciteModalOpen.emit();
    (0,_focusTrapComponent_aee15b41_js__WEBPACK_IMPORTED_MODULE_3__.a)(this);
  }
  onBeforeClose() {
    this.transitionEl.classList.add(CSS.closingActive);
    this.calciteModalBeforeClose.emit();
  }
  onClose() {
    this.transitionEl.classList.remove(CSS.closingIdle, CSS.closingActive);
    this.calciteModalClose.emit();
    (0,_focusTrapComponent_aee15b41_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
  }
  toggleModal(value) {
    if (this.ignoreOpenChange) {
      return;
    }
    if (value) {
      this.openModal();
    }
    else {
      this.closeModal();
    }
  }
  handleOpenedChange(value) {
    (0,_openCloseComponent_48db6daf_js__WEBPACK_IMPORTED_MODULE_6__.o)(this);
    if (value) {
      this.transitionEl?.classList.add(CSS.openingIdle);
    }
    else {
      this.transitionEl?.classList.add(CSS.closingIdle);
    }
  }
  openModal() {
    this.el.addEventListener("calciteModalOpen", this.openEnd);
    this.opened = true;
    const titleEl = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.e)(this.el, SLOTS.header);
    const contentEl = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.e)(this.el, SLOTS.content);
    this.titleId = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.w)(titleEl);
    this.contentId = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.w)(contentEl);
    if (!this.slottedInShell) {
      this.initialOverflowCSS = document.documentElement.style.overflow;
      // use an inline style instead of a utility class to avoid global class declarations.
      document.documentElement.style.setProperty("overflow", "hidden");
    }
  }
  removeOverflowHiddenClass() {
    document.documentElement.style.setProperty("overflow", this.initialOverflowCSS);
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "focusTrapDisabled": ["handleFocusTrapDisabled"],
    "messageOverrides": ["onMessagesChange"],
    "effectiveLocale": ["effectiveLocaleChange"],
    "open": ["toggleModal"],
    "opened": ["handleOpenedChange"]
  }; }
};
Modal.style = modalCss;



//# sourceMappingURL=calcite-modal.entry.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/component-f94cab72.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/component-f94cab72.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ componentOnReady),
/* harmony export */   g: () => (/* binding */ getIconScale)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */
function getIconScale(componentScale) {
  return componentScale === "l" ? "m" : "s";
}
/**
 * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.
 *
 * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3
 *
 * @param el - the host element to wait for
 */
async function componentOnReady(el) {
  await (isStencilEl(el)
    ? el.componentOnReady()
    : new Promise((resolve) => requestAnimationFrame(() => resolve())));
}
function isStencilEl(el) {
  return typeof el.componentOnReady === "function";
}



//# sourceMappingURL=component-f94cab72.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/conditionalSlot-f6710875.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/conditionalSlot-f6710875.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ connectConditionalSlotComponent),
/* harmony export */   d: () => (/* binding */ disconnectConditionalSlotComponent)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _observers_71d332db_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observers-71d332db.js */ "./node_modules/@esri/calcite-components/dist/esm/observers-71d332db.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



const observed = new Set();
let mutationObserver;
const observerOptions = { childList: true };
/**
 * Helper to set up a conditional slot component on connectedCallback.
 *
 * @param component
 * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.
 *
 * ```
 * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}
 * ```
 */
function connectConditionalSlotComponent(component) {
  if (!mutationObserver) {
    mutationObserver = (0,_observers_71d332db_js__WEBPACK_IMPORTED_MODULE_1__.c)("mutation", processMutations);
  }
  mutationObserver.observe(component.el, observerOptions);
}
/**
 * Helper to tear down a conditional slot component on disconnectedCallback.
 *
 * @param component
 * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.
 *
 * ```
 * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}
 * ```
 */
function disconnectConditionalSlotComponent(component) {
  observed.delete(component.el);
  // we explicitly process queued mutations and disconnect and reconnect
  // the observer until MutationObserver gets an `unobserve` method
  // see https://github.com/whatwg/dom/issues/126
  processMutations(mutationObserver.takeRecords());
  mutationObserver.disconnect();
  for (const [element] of observed.entries()) {
    mutationObserver.observe(element, observerOptions);
  }
}
function processMutations(mutations) {
  mutations.forEach(({ target }) => {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.f)(target);
  });
}



//# sourceMappingURL=conditionalSlot-f6710875.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/loadable-b17396e0.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/loadable-b17396e0.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ setComponentLoaded),
/* harmony export */   b: () => (/* binding */ componentLoaded),
/* harmony export */   c: () => (/* binding */ componentFocusable),
/* harmony export */   s: () => (/* binding */ setUpLoadableComponent)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */


const resolveMap = new WeakMap();
const promiseMap = new WeakMap();
/**
 * This helper util sets up the component for the ability to know when the component has been loaded.
 *
 * This should be used in the `componentWillLoad` lifecycle hook.
 *
 * ```
 * componentWillLoad(): void {
 *   setUpLoadableComponent(this);
 * }
 * ```
 *
 * @param component
 */
function setUpLoadableComponent(component) {
  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));
}
/**
 * This helper util lets the loadable component know that it is now loaded.
 *
 * This should be used in the `componentDidLoad` lifecycle hook.
 *
 * ```
 * componentDidLoad(): void {
 *   setComponentLoaded(this);
 * }
 * ```
 *
 * @param component
 */
function setComponentLoaded(component) {
  resolveMap.get(component)();
}
/**
 * This helper util can be used to ensure a component has been loaded (The "componentDidLoad" Stencil lifecycle method has been called).
 *
 * Requires requires `LoadableComponent` to be implemented.
 *
 * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.
 *
 * ```
 * async myMethod(): Promise<void> {
 *   await componentLoaded(this);
 * }
 * ```
 *
 * @param component
 * @returns Promise<void>
 */
function componentLoaded(component) {
  return promiseMap.get(component);
}
/**
 * This helper util can be used to ensuring the component is loaded and rendered by the browser (The "componentDidLoad" Stencil lifecycle method has been called and any internal elements are focusable).
 *
 * Requires requires `LoadableComponent` to be implemented.
 *
 * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.
 *
 * ```
 * async setFocus(): Promise<void> {
 *   await componentFocusable(this);
 *   this.internalElement?.focus();
 * }
 * ```
 *
 * @param component
 * @returns Promise<void>
 */
async function componentFocusable(component) {
  await componentLoaded(component);
  (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.f)(component);
  return new Promise((resolve) => requestAnimationFrame(() => resolve()));
}



//# sourceMappingURL=loadable-b17396e0.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/openCloseComponent-48db6daf.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/openCloseComponent-48db6daf.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: () => (/* binding */ onToggleOpenCloseComponent)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */


function isOpen(component) {
  return "opened" in component ? component.opened : component.open;
}
function emitImmediately(component, nonOpenCloseComponent = false) {
  (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))
    ? component.onBeforeOpen()
    : component.onBeforeClose();
  (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))
    ? component.onOpen()
    : component.onClose();
}
/**
 * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch("open").
 * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).
 *
 * @example
 * import { onToggleOpenCloseComponent, OpenCloseComponent } from "../../utils/openCloseComponent";
 *
 * async componentWillLoad() {
 * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.
 * if (this.open) {
 *    onToggleOpenCloseComponent(this);
 * }
 * @Watch("open")
 * async toggleModal(value: boolean): Promise<void> {
 *    onToggleOpenCloseComponent(this);
 * }
 *
 * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.
 * @param nonOpenCloseComponent - OpenCloseComponent uses `expanded` prop to emit (before)open/close.
 */
function onToggleOpenCloseComponent(component, nonOpenCloseComponent = false) {
  (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.e)(() => {
    if (component.transitionEl) {
      const { transitionDuration: allDurations, transitionProperty: allProps } = getComputedStyle(component.transitionEl);
      const allTransitionDurationsArray = allDurations.split(",");
      const allTransitionPropsArray = allProps.split(",");
      const openTransitionPropIndex = allTransitionPropsArray.indexOf(component.openTransitionProp);
      const transitionDuration = allTransitionDurationsArray[openTransitionPropIndex] ??
        /* Safari will have a single transition value if multiple props share it,
        so we fall back to it if there's no matching prop duration */
        allTransitionDurationsArray[0];
      if (transitionDuration === "0s") {
        emitImmediately(component, nonOpenCloseComponent);
        return;
      }
      const fallbackTimeoutId = setTimeout(() => {
        component.transitionEl.removeEventListener("transitionstart", onStart);
        component.transitionEl.removeEventListener("transitionend", onEndOrCancel);
        component.transitionEl.removeEventListener("transitioncancel", onEndOrCancel);
        emitImmediately(component, nonOpenCloseComponent);
      }, parseFloat(transitionDuration) * 1000);
      component.transitionEl.addEventListener("transitionstart", onStart);
      component.transitionEl.addEventListener("transitionend", onEndOrCancel);
      component.transitionEl.addEventListener("transitioncancel", onEndOrCancel);
      function onStart(event) {
        if (event.propertyName === component.openTransitionProp && event.target === component.transitionEl) {
          clearTimeout(fallbackTimeoutId);
          component.transitionEl.removeEventListener("transitionstart", onStart);
          (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))
            ? component.onBeforeOpen()
            : component.onBeforeClose();
        }
      }
      function onEndOrCancel(event) {
        if (event.propertyName === component.openTransitionProp && event.target === component.transitionEl) {
          (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))
            ? component.onOpen()
            : component.onClose();
          component.transitionEl.removeEventListener("transitionend", onEndOrCancel);
          component.transitionEl.removeEventListener("transitioncancel", onEndOrCancel);
        }
      }
    }
  });
}



//# sourceMappingURL=openCloseComponent-48db6daf.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ connectMessages),
/* harmony export */   d: () => (/* binding */ disconnectMessages),
/* harmony export */   s: () => (/* binding */ setUpMessages),
/* harmony export */   u: () => (/* binding */ updateMessages)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale-6e783cf0.js */ "./node_modules/@esri/calcite-components/dist/esm/locale-6e783cf0.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



const componentLangToMessageBundleCache = {};
async function getMessageBundle(lang, component) {
  const key = `${component}_${lang}`;
  if (componentLangToMessageBundleCache[key]) {
    return componentLangToMessageBundleCache[key];
  }
  componentLangToMessageBundleCache[key] = fetch((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.a)(`./assets/${component}/t9n/messages_${lang}.json`))
    .then((resp) => {
    if (!resp.ok) {
      throwMessageFetchError();
    }
    return resp.json();
  })
    .catch(() => throwMessageFetchError());
  return componentLangToMessageBundleCache[key];
}
function throwMessageFetchError() {
  throw new Error("could not fetch component message bundle");
}
function mergeMessages(component) {
  component.messages = {
    ...component.defaultMessages,
    ...component.messageOverrides,
  };
}
/**
 * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.
 *
 * @param component
 */
async function setUpMessages(component) {
  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);
  mergeMessages(component);
}
async function fetchMessages(component, lang) {
  const { el } = component;
  const tag = el.tagName.toLowerCase();
  const componentName = tag.replace("calcite-", "");
  return getMessageBundle((0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_1__.g)(lang, "t9n"), componentName);
}
/**
 * This utility must be set up for the component to update its default message bundle if the locale changes.
 *
 * It can be set up in **either** of the following ways:
 *
 * 1. called from `LocalizedComponent`'s `onLocaleChange` method or
 * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop
 *
 * @param component
 * @param lang
 */
async function updateMessages(component, lang) {
  component.defaultMessages = await fetchMessages(component, lang);
  mergeMessages(component);
}
/**
 * This utility sets up internals for messages support.
 *
 * It needs to be called in `connectedCallback`
 *
 * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.
 *
 * @param component
 */
function connectMessages(component) {
  component.onMessagesChange = defaultOnMessagesChange;
}
/**
 * This utility tears down internals for messages support.
 *
 * It needs to be called in `disconnectedCallback`
 *
 * @param component
 */
function disconnectMessages(component) {
  component.onMessagesChange = undefined;
}
function defaultOnMessagesChange() {
  mergeMessages(this);
}



//# sourceMappingURL=t9n-0bcdca54.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsY2l0ZS1jb21wb25lbnRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2VzbV9jYWxjaXRlLW1vZGFsX2VudHJ5X2pzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNkc7QUFDaUI7QUFDQztBQUMwQjtBQUNsQztBQUN6RDtBQUNxQjtBQUNJO0FBQ29DO0FBQy9EO0FBQ2hDO0FBQ0s7QUFDTjs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QixxREFBcUQsa0JBQWtCLFVBQVUsdUNBQXVDLGFBQWEsVUFBVSw2QkFBNkIsNEtBQTRLLDhEQUE4RCw2Q0FBNkMsYUFBYSxXQUFXLGVBQWUsVUFBVSx1Q0FBdUMsYUFBYSxtQkFBbUIsdUJBQXVCLGtCQUFrQixrQ0FBa0MsVUFBVSw2QkFBNkIsNEtBQTRLLGlCQUFpQix5Q0FBeUMsNENBQTRDLCtEQUErRCxrRUFBa0UsaUJBQWlCLHNDQUFzQywrQ0FBK0MsK0RBQStELGlFQUFpRSxpQkFBaUIseUNBQXlDLDhDQUE4QywrREFBK0QsaUVBQWlFLE9BQU8seUdBQXlHLGVBQWUsVUFBVSxhQUFhLGtCQUFrQixPQUFPLG9CQUFvQixxQ0FBcUMsV0FBVyxjQUFjLHNCQUFzQixhQUFhLGlCQUFpQixzQkFBc0IsZ0JBQWdCLHNCQUFzQixtREFBbUQsVUFBVSxtRkFBbUYsa0dBQWtHLHVHQUF1RyxpQ0FBaUMsa0JBQWtCLDJRQUEyUSx3REFBd0Qsb0RBQW9ELHFCQUFxQiwrQ0FBK0Ms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ZjtBQUNBO0FBQ0EsMEJBQTBCLHNEQUFrQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrRzs7QUFFbEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2VzbS9jYWxjaXRlLW1vZGFsLmVudHJ5LmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvZXNtL2NvbXBvbmVudC1mOTRjYWI3Mi5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2VzbS9jb25kaXRpb25hbFNsb3QtZjY3MTA4NzUuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9lc20vbG9hZGFibGUtYjE3Mzk2ZTAuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9lc20vb3BlbkNsb3NlQ29tcG9uZW50LTQ4ZGI2ZGFmLmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvZXNtL3Q5bi0wYmNkY2E1NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9MSUNFTlNFLm1kIGZvciBkZXRhaWxzLlxuICogdjIuMC4wXG4gKi9cbmltcG9ydCB7IHIgYXMgcmVnaXN0ZXJJbnN0YW5jZSwgYyBhcyBjcmVhdGVFdmVudCwgaCwgSCBhcyBIb3N0LCBnIGFzIGdldEVsZW1lbnQgfSBmcm9tICcuL2luZGV4LTg2ZmFlZjljLmpzJztcbmltcG9ydCB7IGMgYXMgY29ubmVjdENvbmRpdGlvbmFsU2xvdENvbXBvbmVudCwgZCBhcyBkaXNjb25uZWN0Q29uZGl0aW9uYWxTbG90Q29tcG9uZW50IH0gZnJvbSAnLi9jb25kaXRpb25hbFNsb3QtZjY3MTA4NzUuanMnO1xuaW1wb3J0IHsgZSBhcyBnZXRTbG90dGVkLCBiIGFzIHNsb3RDaGFuZ2VIYXNBc3NpZ25lZEVsZW1lbnQsIGYgYXMgZm9jdXNGaXJzdFRhYmJhYmxlLCB3IGFzIGVuc3VyZUlkIH0gZnJvbSAnLi9kb20tZWQwMGE1ODUuanMnO1xuaW1wb3J0IHsgZCBhcyBkZWFjdGl2YXRlRm9jdXNUcmFwLCBhIGFzIGFjdGl2YXRlRm9jdXNUcmFwLCBjIGFzIGNvbm5lY3RGb2N1c1RyYXAsIHUgYXMgdXBkYXRlRm9jdXNUcmFwRWxlbWVudHMgfSBmcm9tICcuL2ZvY3VzVHJhcENvbXBvbmVudC1hZWUxNWI0MS5qcyc7XG5pbXBvcnQgeyBzIGFzIHNldFVwTG9hZGFibGVDb21wb25lbnQsIGEgYXMgc2V0Q29tcG9uZW50TG9hZGVkLCBjIGFzIGNvbXBvbmVudEZvY3VzYWJsZSB9IGZyb20gJy4vbG9hZGFibGUtYjE3Mzk2ZTAuanMnO1xuaW1wb3J0IHsgYyBhcyBjcmVhdGVPYnNlcnZlciB9IGZyb20gJy4vb2JzZXJ2ZXJzLTcxZDMzMmRiLmpzJztcbmltcG9ydCB7IG8gYXMgb25Ub2dnbGVPcGVuQ2xvc2VDb21wb25lbnQgfSBmcm9tICcuL29wZW5DbG9zZUNvbXBvbmVudC00OGRiNmRhZi5qcyc7XG5pbXBvcnQgeyBjIGFzIGNvbm5lY3RMb2NhbGl6ZWQsIGQgYXMgZGlzY29ubmVjdExvY2FsaXplZCB9IGZyb20gJy4vbG9jYWxlLTZlNzgzY2YwLmpzJztcbmltcG9ydCB7IHMgYXMgc2V0VXBNZXNzYWdlcywgYyBhcyBjb25uZWN0TWVzc2FnZXMsIGQgYXMgZGlzY29ubmVjdE1lc3NhZ2VzLCB1IGFzIHVwZGF0ZU1lc3NhZ2VzIH0gZnJvbSAnLi90OW4tMGJjZGNhNTQuanMnO1xuaW1wb3J0IHsgZyBhcyBnZXRJY29uU2NhbGUgfSBmcm9tICcuL2NvbXBvbmVudC1mOTRjYWI3Mi5qcyc7XG5pbXBvcnQgJy4vZ3VpZC0yMWZlY2ZhNC5qcyc7XG5pbXBvcnQgJy4vcmVzb3VyY2VzLWNmODIzODhjLmpzJztcbmltcG9ydCAnLi9rZXktNjFmODJkZGIuanMnO1xuXG5jb25zdCBDU1MgPSB7XG4gIG1vZGFsOiBcIm1vZGFsXCIsXG4gIHRpdGxlOiBcInRpdGxlXCIsXG4gIGhlYWRlcjogXCJoZWFkZXJcIixcbiAgZm9vdGVyOiBcImZvb3RlclwiLFxuICBzY3JpbTogXCJzY3JpbVwiLFxuICBiYWNrOiBcImJhY2tcIixcbiAgY2xvc2U6IFwiY2xvc2VcIixcbiAgc2Vjb25kYXJ5OiBcInNlY29uZGFyeVwiLFxuICBwcmltYXJ5OiBcInByaW1hcnlcIixcbiAgY29udGFpbmVyOiBcImNvbnRhaW5lclwiLFxuICBjb250YWluZXJPcGVuOiBcImNvbnRhaW5lci0tb3BlblwiLFxuICBjb250ZW50OiBcImNvbnRlbnRcIixcbiAgY29udGVudE5vRm9vdGVyOiBcImNvbnRlbnQtLW5vLWZvb3RlclwiLFxuICBjb250ZW50Qm90dG9tOiBcImNvbnRlbnQtYm90dG9tXCIsXG4gIGNvbnRlbnRUb3A6IFwiY29udGVudC10b3BcIixcbiAgc2xvdHRlZEluU2hlbGw6IFwic2xvdHRlZC1pbi1zaGVsbFwiLFxuICAvLyB0aGVzZSBjbGFzc2VzIGhlbHAgYXBwbHkgdGhlIGFuaW1hdGlvbiBpbiBwaGFzZXMgdG8gb25seSBzZXQgdHJhbnNmb3JtIG9uIG9wZW4vY2xvc2VcbiAgLy8gdGhpcyBoZWxwcyBhdm9pZCBhIHBvc2l0aW9uaW5nIGlzc3VlIGZvciBhbnkgZmxvYXRpbmctdWktb3duaW5nIGNoaWxkcmVuXG4gIG9wZW5pbmdJZGxlOiBcIm1vZGFsLS1vcGVuaW5nLWlkbGVcIixcbiAgb3BlbmluZ0FjdGl2ZTogXCJtb2RhbC0tb3BlbmluZy1hY3RpdmVcIixcbiAgY2xvc2luZ0lkbGU6IFwibW9kYWwtLWNsb3NpbmctaWRsZVwiLFxuICBjbG9zaW5nQWN0aXZlOiBcIm1vZGFsLS1jbG9zaW5nLWFjdGl2ZVwiLFxufTtcbmNvbnN0IElDT05TID0ge1xuICBjbG9zZTogXCJ4XCIsXG59O1xuY29uc3QgU0xPVFMgPSB7XG4gIGNvbnRlbnQ6IFwiY29udGVudFwiLFxuICBjb250ZW50Qm90dG9tOiBcImNvbnRlbnQtYm90dG9tXCIsXG4gIGNvbnRlbnRUb3A6IFwiY29udGVudC10b3BcIixcbiAgaGVhZGVyOiBcImhlYWRlclwiLFxuICBiYWNrOiBcImJhY2tcIixcbiAgc2Vjb25kYXJ5OiBcInNlY29uZGFyeVwiLFxuICBwcmltYXJ5OiBcInByaW1hcnlcIixcbn07XG5cbmNvbnN0IG1vZGFsQ3NzID0gXCI6aG9zdHstLWNhbGNpdGUtbW9kYWwtc2NyaW0tYmFja2dyb3VuZDpyZ2JhKDAsIDAsIDAsIDAuODUpO3Bvc2l0aW9uOmFic29sdXRlO2luc2V0OjBweDt6LWluZGV4OnZhcigtLWNhbGNpdGUtei1pbmRleC1vdmVybGF5KTtkaXNwbGF5OmZsZXg7b3BhY2l0eTowO3Zpc2liaWxpdHk6aGlkZGVuICFpbXBvcnRhbnQ7dHJhbnNpdGlvbjp2aXNpYmlsaXR5IDBtcyBsaW5lYXIgdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLXNsb3cpLCBvcGFjaXR5IHZhcigtLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1zbG93KSBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNDQsIDAuNDIsIDAuODgpOy0tY2FsY2l0ZS1tb2RhbC1zY3JpbS1iYWNrZ3JvdW5kLWludGVybmFsOnJnYmEoMCwgMCwgMCwgMC44NSl9LmNvbnRlbnQtdG9wW2hpZGRlbl0sLmNvbnRlbnQtYm90dG9tW2hpZGRlbl17ZGlzcGxheTpub25lfS5jb250YWluZXJ7cG9zaXRpb246Zml4ZWQ7aW5zZXQ6MHB4O3otaW5kZXg6dmFyKC0tY2FsY2l0ZS16LWluZGV4LW92ZXJsYXkpO2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtvdmVyZmxvdy15OmhpZGRlbjtjb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLXRleHQtMik7b3BhY2l0eTowO3Zpc2liaWxpdHk6aGlkZGVuICFpbXBvcnRhbnQ7dHJhbnNpdGlvbjp2aXNpYmlsaXR5IDBtcyBsaW5lYXIgdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLXNsb3cpLCBvcGFjaXR5IHZhcigtLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1zbG93KSBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNDQsIDAuNDIsIDAuODgpfTpob3N0KFtzY2FsZT1zXSl7LS1jYWxjaXRlLW1vZGFsLXBhZGRpbmctaW50ZXJuYWw6MC43NXJlbTstLWNhbGNpdGUtbW9kYWwtcGFkZGluZy1sYXJnZS1pbnRlcm5hbDoxcmVtOy0tY2FsY2l0ZS1tb2RhbC10aXRsZS10ZXh0LWludGVybmFsOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLTEpOy0tY2FsY2l0ZS1tb2RhbC1jb250ZW50LXRleHQtaW50ZXJuYWw6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtLTEpfTpob3N0KFtzY2FsZT1tXSl7LS1jYWxjaXRlLW1vZGFsLXBhZGRpbmctaW50ZXJuYWw6MXJlbTstLWNhbGNpdGUtbW9kYWwtcGFkZGluZy1sYXJnZS1pbnRlcm5hbDoxLjI1cmVtOy0tY2FsY2l0ZS1tb2RhbC10aXRsZS10ZXh0LWludGVybmFsOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLTIpOy0tY2FsY2l0ZS1tb2RhbC1jb250ZW50LXRleHQtaW50ZXJuYWw6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtMCl9Omhvc3QoW3NjYWxlPWxdKXstLWNhbGNpdGUtbW9kYWwtcGFkZGluZy1pbnRlcm5hbDoxLjI1cmVtOy0tY2FsY2l0ZS1tb2RhbC1wYWRkaW5nLWxhcmdlLWludGVybmFsOjEuNXJlbTstLWNhbGNpdGUtbW9kYWwtdGl0bGUtdGV4dC1pbnRlcm5hbDp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0zKTstLWNhbGNpdGUtbW9kYWwtY29udGVudC10ZXh0LWludGVybmFsOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLTEpfS5zY3JpbXstLWNhbGNpdGUtc2NyaW0tYmFja2dyb3VuZDp2YXIoLS1jYWxjaXRlLW1vZGFsLXNjcmltLWJhY2tncm91bmQsIHZhcigtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtc2NyaW0pKTtwb3NpdGlvbjpmaXhlZDtpbnNldDowcHg7ZGlzcGxheTpmbGV4O292ZXJmbG93LXk6aGlkZGVufS5tb2RhbHtwb2ludGVyLWV2ZW50czpub25lO3otaW5kZXg6dmFyKC0tY2FsY2l0ZS16LWluZGV4LW1vZGFsKTtmbG9hdDpub25lO21hcmdpbjoxLjVyZW07Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6ZmxleDtpbmxpbmUtc2l6ZToxMDAlO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtvdmVyZmxvdzpoaWRkZW47Ym9yZGVyLXJhZGl1czowLjI1cmVtO2JhY2tncm91bmQtY29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTEpO29wYWNpdHk6MDstLXR3LXNoYWRvdzowIDJweCAxMnB4IC00cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDJweCA0cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMTYpOy0tdHctc2hhZG93LWNvbG9yZWQ6MCAycHggMTJweCAtNHB4IHZhcigtLXR3LXNoYWRvdy1jb2xvciksIDAgMnB4IDRweCAtMnB4IHZhcigtLXR3LXNoYWRvdy1jb2xvcik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpOy13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOnRvdWNoO3Zpc2liaWxpdHk6aGlkZGVuO3RyYW5zaXRpb246dHJhbnNmb3JtIHZhcigtLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1zbG93KSBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNDQsIDAuNDIsIDAuODgpLCB2aXNpYmlsaXR5IDBtcyBsaW5lYXIgdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLXNsb3cpLCBvcGFjaXR5IHZhcigtLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1zbG93KSBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNDQsIDAuNDIsIDAuODgpOy0tY2FsY2l0ZS1tb2RhbC1oaWRkZW4tcG9zaXRpb246dHJhbnNsYXRlM2QoMCwgMjBweCwgMCk7LS1jYWxjaXRlLW1vZGFsLXNob3duLXBvc2l0aW9uOnRyYW5zbGF0ZTNkKDAsIDAsIDApfS5tb2RhbC0tb3BlbmluZy1pZGxle3RyYW5zZm9ybTp2YXIoLS1jYWxjaXRlLW1vZGFsLWhpZGRlbi1wb3NpdGlvbil9Lm1vZGFsLS1vcGVuaW5nLWFjdGl2ZXt0cmFuc2Zvcm06dmFyKC0tY2FsY2l0ZS1tb2RhbC1zaG93bi1wb3NpdGlvbil9Lm1vZGFsLS1jbG9zaW5nLWlkbGV7dHJhbnNmb3JtOnZhcigtLWNhbGNpdGUtbW9kYWwtc2hvd24tcG9zaXRpb24pfS5tb2RhbC0tY2xvc2luZy1hY3RpdmV7dHJhbnNmb3JtOnZhcigtLWNhbGNpdGUtbW9kYWwtaGlkZGVuLXBvc2l0aW9uKX06aG9zdChbb3BlbmVkXSl7b3BhY2l0eToxO3Zpc2liaWxpdHk6dmlzaWJsZSAhaW1wb3J0YW50O3RyYW5zaXRpb24tZGVsYXk6MG1zfS5jb250YWluZXItLW9wZW57b3BhY2l0eToxO3Zpc2liaWxpdHk6dmlzaWJsZSAhaW1wb3J0YW50O3RyYW5zaXRpb24tZGVsYXk6MG1zfS5jb250YWluZXItLW9wZW4gLm1vZGFse3BvaW50ZXItZXZlbnRzOmF1dG87dmlzaWJpbGl0eTp2aXNpYmxlO29wYWNpdHk6MTt0cmFuc2l0aW9uOnRyYW5zZm9ybSB2YXIoLS1jYWxjaXRlLWludGVybmFsLWFuaW1hdGlvbi10aW1pbmctc2xvdykgY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjQ0LCAwLjQyLCAwLjg4KSwgdmlzaWJpbGl0eSAwbXMgbGluZWFyLCBvcGFjaXR5IHZhcigtLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1zbG93KSBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNDQsIDAuNDIsIDAuODgpLCBtYXgtaW5saW5lLXNpemUgdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLXNsb3cpIGN1YmljLWJlemllcigwLjIxNSwgMC40NCwgMC40MiwgMC44OCksIG1heC1ibG9jay1zaXplIHZhcigtLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1zbG93KSBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNDQsIDAuNDIsIDAuODgpO3RyYW5zaXRpb24tZGVsYXk6MG1zfS5oZWFkZXJ7ei1pbmRleDp2YXIoLS1jYWxjaXRlLXotaW5kZXgtaGVhZGVyKTtkaXNwbGF5OmZsZXg7bWluLWlubGluZS1zaXplOjBweDttYXgtaW5saW5lLXNpemU6MTAwJTtib3JkZXItc3RhcnQtc3RhcnQtcmFkaXVzOjAuMjVyZW07Ym9yZGVyLXN0YXJ0LWVuZC1yYWRpdXM6MC4yNXJlbTtib3JkZXItd2lkdGg6MHB4O2JvcmRlci1ibG9jay1lbmQtd2lkdGg6MXB4O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItY29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMyk7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMSk7ZmxleDowIDAgYXV0b30uY2xvc2V7b3JkZXI6MjttYXJnaW46MHB4O2N1cnNvcjpwb2ludGVyO2FwcGVhcmFuY2U6bm9uZTtib3JkZXItc3R5bGU6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2NvbG9yOnZhcigtLWNhbGNpdGUtY29sb3ItdGV4dC0zKTtvdXRsaW5lLWNvbG9yOnRyYW5zcGFyZW50O3RyYW5zaXRpb246YWxsIHZhcigtLWNhbGNpdGUtYW5pbWF0aW9uLXRpbWluZykgZWFzZS1pbi1vdXQgMHMsIG91dGxpbmUgMHMsIG91dGxpbmUtb2Zmc2V0IDBzO3BhZGRpbmctYmxvY2s6dmFyKC0tY2FsY2l0ZS1tb2RhbC1wYWRkaW5nLWludGVybmFsKTtwYWRkaW5nLWlubGluZTp2YXIoLS1jYWxjaXRlLW1vZGFsLXBhZGRpbmctaW50ZXJuYWwpO2ZsZXg6MCAwIGF1dG99LmNsb3NlIGNhbGNpdGUtaWNvbntwb2ludGVyLWV2ZW50czpub25lO3ZlcnRpY2FsLWFsaWduOi0ycHh9LmNsb3NlOmZvY3Vze291dGxpbmU6MnB4IHNvbGlkIHZhcigtLWNhbGNpdGUtY29sb3ItYnJhbmQpO291dGxpbmUtb2Zmc2V0OmNhbGMoXFxuICAgICAgICAgICAgLTJweCAqXFxuICAgICAgICAgICAgY2FsYyhcXG4gICAgICAgICAgICAgIDEgLVxcbiAgICAgICAgICAgICAgMiAqIGNsYW1wKFxcbiAgICAgICAgICAgICAgICAwLFxcbiAgICAgICAgICAgICAgICB2YXIoLS1jYWxjaXRlLW9mZnNldC1pbnZlcnQtZm9jdXMpLFxcbiAgICAgICAgICAgICAgICAxXFxuICAgICAgICAgICAgICApXFxuICAgICAgICAgICAgKVxcbiAgICAgICAgICApfS5jbG9zZTpob3ZlciwuY2xvc2U6Zm9jdXMsLmNsb3NlOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0yKTtjb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLXRleHQtMSl9LnRpdGxle29yZGVyOjE7ZGlzcGxheTpmbGV4O21pbi1pbmxpbmUtc2l6ZTowcHg7YWxpZ24taXRlbXM6Y2VudGVyO2ZsZXg6MSAxIGF1dG87cGFkZGluZy1ibG9jazp2YXIoLS1jYWxjaXRlLW1vZGFsLXBhZGRpbmctaW50ZXJuYWwpO3BhZGRpbmctaW5saW5lOnZhcigtLWNhbGNpdGUtbW9kYWwtcGFkZGluZy1sYXJnZS1pbnRlcm5hbCl9c2xvdFtuYW1lPWhlYWRlcl06OnNsb3R0ZWQoKiksKjo6c2xvdHRlZChbc2xvdD1oZWFkZXJdKXttYXJnaW46MHB4O2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbm9ybWFsKTtjb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLXRleHQtMSk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtbW9kYWwtdGl0bGUtdGV4dC1pbnRlcm5hbCl9LmNvbnRlbnR7cG9zaXRpb246cmVsYXRpdmU7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6YmxvY2s7YmxvY2stc2l6ZToxMDAlO292ZXJmbG93OmF1dG87cGFkZGluZzowcHg7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jYWxjaXRlLW1vZGFsLWNvbnRlbnQtYmFja2dyb3VuZCwgdmFyKC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTEpKTttYXgtYmxvY2stc2l6ZToxMDAlO3BhZGRpbmc6dmFyKC0tY2FsY2l0ZS1tb2RhbC1jb250ZW50LXBhZGRpbmcsIHZhcigtLWNhbGNpdGUtbW9kYWwtcGFkZGluZy1pbnRlcm5hbCkpfS5jb250ZW50LXRvcCwuY29udGVudC1ib3R0b217ei1pbmRleDp2YXIoLS1jYWxjaXRlLXotaW5kZXgtaGVhZGVyKTtkaXNwbGF5OmZsZXg7Ym9yZGVyLXdpZHRoOjBweDtib3JkZXItc3R5bGU6c29saWQ7Ym9yZGVyLWNvbG9yOnZhcigtLWNhbGNpdGUtY29sb3ItYm9yZGVyLTMpO2JhY2tncm91bmQtY29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTEpO2ZsZXg6MCAwIGF1dG87cGFkZGluZzp2YXIoLS1jYWxjaXRlLW1vZGFsLXBhZGRpbmctaW50ZXJuYWwpfS5jb250ZW50LXRvcHttaW4taW5saW5lLXNpemU6MHB4O21heC1pbmxpbmUtc2l6ZToxMDAlO2JvcmRlci1ibG9jay1lbmQtd2lkdGg6MXB4fS5jb250ZW50LWJvdHRvbXttYXJnaW4tYmxvY2stc3RhcnQ6YXV0bztib3gtc2l6aW5nOmJvcmRlci1ib3g7aW5saW5lLXNpemU6MTAwJTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbjtib3JkZXItYmxvY2stc3RhcnQtd2lkdGg6MXB4fS5jb250ZW50LXRvcDpub3QoLmhlYWRlcn4uY29udGVudC10b3Ape2JvcmRlci1zdGFydC1zdGFydC1yYWRpdXM6MC4yNXJlbTtib3JkZXItc3RhcnQtZW5kLXJhZGl1czowLjI1cmVtfS5jb250ZW50LWJvdHRvbTpub3QoLmNvbnRlbnQtYm90dG9tfi5mb290ZXIpLC5jb250ZW50LS1uby1mb290ZXJ7Ym9yZGVyLWVuZC1lbmQtcmFkaXVzOjAuMjVyZW07Ym9yZGVyLWVuZC1zdGFydC1yYWRpdXM6MC4yNXJlbX1zbG90W25hbWU9Y29udGVudF06OnNsb3R0ZWQoKiksKjo6c2xvdHRlZChbc2xvdD1jb250ZW50XSl7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtbW9kYWwtY29udGV4dC10ZXh0LWludGVybmFsKX0uZm9vdGVye3otaW5kZXg6dmFyKC0tY2FsY2l0ZS16LWluZGV4LWhlYWRlcik7bWFyZ2luLWJsb2NrLXN0YXJ0OmF1dG87Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6ZmxleDtpbmxpbmUtc2l6ZToxMDAlO2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2JvcmRlci1lbmQtZW5kLXJhZGl1czowLjI1cmVtO2JvcmRlci1lbmQtc3RhcnQtcmFkaXVzOjAuMjVyZW07Ym9yZGVyLXdpZHRoOjBweDtib3JkZXItYmxvY2stc3RhcnQtd2lkdGg6MXB4O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItY29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMyk7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMSk7ZmxleDowIDAgYXV0bztwYWRkaW5nLWJsb2NrOnZhcigtLWNhbGNpdGUtbW9kYWwtcGFkZGluZy1pbnRlcm5hbCk7cGFkZGluZy1pbmxpbmU6dmFyKC0tY2FsY2l0ZS1tb2RhbC1wYWRkaW5nLWxhcmdlLWludGVybmFsKX0uZm9vdGVyLS1oaWRlLWJhY2sgLmJhY2ssLmZvb3Rlci0taGlkZS1zZWNvbmRhcnkgLnNlY29uZGFyeXtkaXNwbGF5Om5vbmV9LmJhY2t7ZGlzcGxheTpibG9jazttYXJnaW4taW5saW5lLWVuZDphdXRvfS5zZWNvbmRhcnl7bWFyZ2luLWlubGluZTowLjI1cmVtO2Rpc3BsYXk6YmxvY2t9c2xvdFtuYW1lPXByaW1hcnlde2Rpc3BsYXk6YmxvY2t9Omhvc3QoW3dpZHRoPXNtYWxsXSkgLm1vZGFse2lubGluZS1zaXplOmF1dG99Omhvc3QoW3dpZHRoLXNjYWxlPXNdKSAubW9kYWx7bWF4LWJsb2NrLXNpemU6MTAwJTttYXgtaW5saW5lLXNpemU6MTAwJTtpbmxpbmUtc2l6ZTp2YXIoLS1jYWxjaXRlLW1vZGFsLXdpZHRoLCAzMnJlbSk7YmxvY2stc2l6ZTp2YXIoLS1jYWxjaXRlLW1vZGFsLWhlaWdodCwgYXV0byl9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzVyZW0pezpob3N0KFt3aWR0aC1zY2FsZT1zXSkgLm1vZGFse21hcmdpbjowcHg7YmxvY2stc2l6ZToxMDAlO21heC1ibG9jay1zaXplOjEwMCU7aW5saW5lLXNpemU6MTAwJTttYXgtaW5saW5lLXNpemU6MTAwJX06aG9zdChbd2lkdGgtc2NhbGU9c10pIC5jb250ZW50e2ZsZXg6MSAxIGF1dG87bWF4LWJsb2NrLXNpemU6dW5zZXR9Omhvc3QoW3dpZHRoLXNjYWxlPXNdW2RvY2tlZF0pIC5jb250YWluZXJ7YWxpZ24taXRlbXM6ZmxleC1lbmR9fTpob3N0KFt3aWR0aC1zY2FsZT1tXSkgLm1vZGFse21heC1ibG9jay1zaXplOjEwMCU7bWF4LWlubGluZS1zaXplOjEwMCU7aW5saW5lLXNpemU6dmFyKC0tY2FsY2l0ZS1tb2RhbC13aWR0aCwgNDhyZW0pO2Jsb2NrLXNpemU6dmFyKC0tY2FsY2l0ZS1tb2RhbC1oZWlnaHQsIGF1dG8pfUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUxcmVtKXs6aG9zdChbd2lkdGgtc2NhbGU9bV0pIC5tb2RhbHttYXJnaW46MHB4O2Jsb2NrLXNpemU6MTAwJTttYXgtYmxvY2stc2l6ZToxMDAlO2lubGluZS1zaXplOjEwMCU7bWF4LWlubGluZS1zaXplOjEwMCV9Omhvc3QoW3dpZHRoLXNjYWxlPW1dKSAuY29udGVudHtmbGV4OjEgMSBhdXRvO21heC1ibG9jay1zaXplOnVuc2V0fTpob3N0KFt3aWR0aC1zY2FsZT1tXVtkb2NrZWRdKSAuY29udGFpbmVye2FsaWduLWl0ZW1zOmZsZXgtZW5kfX06aG9zdChbd2lkdGgtc2NhbGU9bF0pIC5tb2RhbHttYXgtYmxvY2stc2l6ZToxMDAlO21heC1pbmxpbmUtc2l6ZToxMDAlO2lubGluZS1zaXplOnZhcigtLWNhbGNpdGUtbW9kYWwtd2lkdGgsIDk0cmVtKTtibG9jay1zaXplOnZhcigtLWNhbGNpdGUtbW9kYWwtaGVpZ2h0LCBhdXRvKX1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5N3JlbSl7Omhvc3QoW3dpZHRoLXNjYWxlPWxdKSAubW9kYWx7bWFyZ2luOjBweDtibG9jay1zaXplOjEwMCU7bWF4LWJsb2NrLXNpemU6MTAwJTtpbmxpbmUtc2l6ZToxMDAlO21heC1pbmxpbmUtc2l6ZToxMDAlfTpob3N0KFt3aWR0aC1zY2FsZT1sXSkgLmNvbnRlbnR7ZmxleDoxIDEgYXV0bzttYXgtYmxvY2stc2l6ZTp1bnNldH06aG9zdChbd2lkdGgtc2NhbGU9bF1bZG9ja2VkXSkgLmNvbnRhaW5lcnthbGlnbi1pdGVtczpmbGV4LWVuZH19Omhvc3QoW2Z1bGxzY3JlZW5dKSAubW9kYWx7bWFyZ2luOjBweDtibG9jay1zaXplOjEwMCU7bWF4LWJsb2NrLXNpemU6MTAwJTtpbmxpbmUtc2l6ZToxMDAlO21heC1pbmxpbmUtc2l6ZToxMDAlO2JvcmRlci1yYWRpdXM6MHB4Oy0tY2FsY2l0ZS1tb2RhbC1oaWRkZW4tcG9zaXRpb246dHJhbnNsYXRlM0QoMCwgMjBweCwgMCkgc2NhbGUoMC45NSk7LS1jYWxjaXRlLW1vZGFsLXNob3duLXBvc2l0aW9uOnRyYW5zbGF0ZTNEKDAsIDAsIDApIHNjYWxlKDEpfTpob3N0KFtmdWxsc2NyZWVuXSkgLmNvbnRlbnR7bWF4LWJsb2NrLXNpemU6MTAwJTtmbGV4OjEgMSBhdXRvfTpob3N0KFtvcGVuZWRdW2Z1bGxzY3JlZW5dKSAuaGVhZGVyLDpob3N0KFtvcGVuZWRdW2Z1bGxzY3JlZW5dKSAuZm9vdGVyLDpob3N0KFtvcGVuZWRdW2Z1bGxzY3JlZW5dKSAuY29udGVudC10b3AsOmhvc3QoW29wZW5lZF1bZnVsbHNjcmVlbl0pIC5jb250ZW50LWJvdHRvbXtib3JkZXItcmFkaXVzOjB9Omhvc3QoW2RvY2tlZF0pIC5tb2RhbHtibG9jay1zaXplOnZhcigtLWNhbGNpdGUtbW9kYWwtaGVpZ2h0LCBhdXRvKX06aG9zdChbZG9ja2VkXSkgLmNvbnRlbnR7YmxvY2stc2l6ZTphdXRvO2ZsZXg6MSAxIGF1dG99Omhvc3QoW2tpbmQ9YnJhbmRdKSAubW9kYWx7Ym9yZGVyLWNvbG9yOnZhcigtLWNhbGNpdGUtY29sb3ItYnJhbmQpfTpob3N0KFtraW5kPWRhbmdlcl0pIC5tb2RhbHtib3JkZXItY29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyKX06aG9zdChba2luZD1pbmZvXSkgLm1vZGFse2JvcmRlci1jb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1pbmZvKX06aG9zdChba2luZD1zdWNjZXNzXSkgLm1vZGFse2JvcmRlci1jb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1zdWNjZXNzKX06aG9zdChba2luZD13YXJuaW5nXSkgLm1vZGFse2JvcmRlci1jb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy13YXJuaW5nKX06aG9zdChba2luZD1icmFuZF0pIC5tb2RhbCw6aG9zdChba2luZD1kYW5nZXJdKSAubW9kYWwsOmhvc3QoW2tpbmQ9aW5mb10pIC5tb2RhbCw6aG9zdChba2luZD1zdWNjZXNzXSkgLm1vZGFsLDpob3N0KFtraW5kPXdhcm5pbmddKSAubW9kYWx7Ym9yZGVyLXdpZHRoOjBweDtib3JkZXItYmxvY2stc3RhcnQtd2lkdGg6NHB4O2JvcmRlci1zdHlsZTpzb2xpZH06aG9zdChba2luZD1icmFuZF0pIC5oZWFkZXIsOmhvc3QoW2tpbmQ9YnJhbmRdKSAuY29udGVudC10b3AsOmhvc3QoW2tpbmQ9ZGFuZ2VyXSkgLmhlYWRlciw6aG9zdChba2luZD1kYW5nZXJdKSAuY29udGVudC10b3AsOmhvc3QoW2tpbmQ9aW5mb10pIC5oZWFkZXIsOmhvc3QoW2tpbmQ9aW5mb10pIC5jb250ZW50LXRvcCw6aG9zdChba2luZD1zdWNjZXNzXSkgLmhlYWRlciw6aG9zdChba2luZD1zdWNjZXNzXSkgLmNvbnRlbnQtdG9wLDpob3N0KFtraW5kPXdhcm5pbmddKSAuaGVhZGVyLDpob3N0KFtraW5kPXdhcm5pbmddKSAuY29udGVudC10b3B7Ym9yZGVyLXJhZGl1czowLjI1cmVtO2JvcmRlci1lbmQtZW5kLXJhZGl1czowcHg7Ym9yZGVyLWVuZC1zdGFydC1yYWRpdXM6MHB4fUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDg2MHB4KXsqIHNsb3RbbmFtZT1oZWFkZXJdOjpzbG90dGVkKGNvbnRlbnQtdG9wKSwqIGNvbnRlbnQtdG9wOjpzbG90dGVkKFtzbG90PWhlYWRlcl0pe2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0xKX0uZm9vdGVyLC5jb250ZW50LWJvdHRvbXtwb3NpdGlvbjpzdGlja3k7aW5zZXQtYmxvY2stZW5kOjBweH19QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpey5mb290ZXIsLmNvbnRlbnQtYm90dG9te2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0uYmFjaywuc2Vjb25kYXJ5e21hcmdpbjowcHg7bWFyZ2luLWJsb2NrLWVuZDowLjI1cmVtfX0uY29udGFpbmVyLnNsb3R0ZWQtaW4tc2hlbGx7cG9zaXRpb246YWJzb2x1dGU7cG9pbnRlci1ldmVudHM6YXV0b30uY29udGFpbmVyLnNsb3R0ZWQtaW4tc2hlbGwgY2FsY2l0ZS1zY3JpbXtwb3NpdGlvbjphYnNvbHV0ZX06aG9zdChbaGlkZGVuXSl7ZGlzcGxheTpub25lfVtoaWRkZW5de2Rpc3BsYXk6bm9uZX1cIjtcblxuY29uc3QgTW9kYWwgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xuICAgIHRoaXMuY2FsY2l0ZU1vZGFsQmVmb3JlQ2xvc2UgPSBjcmVhdGVFdmVudCh0aGlzLCBcImNhbGNpdGVNb2RhbEJlZm9yZUNsb3NlXCIsIDYpO1xuICAgIHRoaXMuY2FsY2l0ZU1vZGFsQ2xvc2UgPSBjcmVhdGVFdmVudCh0aGlzLCBcImNhbGNpdGVNb2RhbENsb3NlXCIsIDYpO1xuICAgIHRoaXMuY2FsY2l0ZU1vZGFsQmVmb3JlT3BlbiA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiY2FsY2l0ZU1vZGFsQmVmb3JlT3BlblwiLCA2KTtcbiAgICB0aGlzLmNhbGNpdGVNb2RhbE9wZW4gPSBjcmVhdGVFdmVudCh0aGlzLCBcImNhbGNpdGVNb2RhbE9wZW5cIiwgNik7XG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vXG4gICAgLy8gIFByaXZhdGUgUHJvcGVydGllcy8gU3RhdGVcbiAgICAvL1xuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB0aGlzLmlnbm9yZU9wZW5DaGFuZ2UgPSBmYWxzZTtcbiAgICB0aGlzLm11dGF0aW9uT2JzZXJ2ZXIgPSBjcmVhdGVPYnNlcnZlcihcIm11dGF0aW9uXCIsICgpID0+IHRoaXMuaGFuZGxlTXV0YXRpb25PYnNlcnZlcigpKTtcbiAgICB0aGlzLmNzc1Zhck9ic2VydmVyID0gY3JlYXRlT2JzZXJ2ZXIoXCJtdXRhdGlvblwiLCAoKSA9PiB7XG4gICAgICB0aGlzLnVwZGF0ZVNpemVDc3NWYXJzKCk7XG4gICAgfSk7XG4gICAgdGhpcy5vcGVuVHJhbnNpdGlvblByb3AgPSBcIm9wYWNpdHlcIjtcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy9cbiAgICAvLyAgUHJpdmF0ZSBNZXRob2RzXG4gICAgLy9cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgdGhpcy5zZXRUcmFuc2l0aW9uRWwgPSAoZWwpID0+IHtcbiAgICAgIHRoaXMudHJhbnNpdGlvbkVsID0gZWw7XG4gICAgfTtcbiAgICB0aGlzLm9wZW5FbmQgPSAoKSA9PiB7XG4gICAgICB0aGlzLnNldEZvY3VzKCk7XG4gICAgICB0aGlzLmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjYWxjaXRlTW9kYWxPcGVuXCIsIHRoaXMub3BlbkVuZCk7XG4gICAgfTtcbiAgICB0aGlzLmhhbmRsZUNsb3NlQ2xpY2sgPSAoKSA9PiB7XG4gICAgICB0aGlzLm9wZW4gPSBmYWxzZTtcbiAgICB9O1xuICAgIHRoaXMuaGFuZGxlT3V0c2lkZUNsb3NlID0gKCkgPT4ge1xuICAgICAgaWYgKHRoaXMub3V0c2lkZUNsb3NlRGlzYWJsZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy5vcGVuID0gZmFsc2U7XG4gICAgfTtcbiAgICB0aGlzLmNsb3NlTW9kYWwgPSBhc3luYyAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5iZWZvcmVDbG9zZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGF3YWl0IHRoaXMuYmVmb3JlQ2xvc2UodGhpcy5lbCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9lcnJvcikge1xuICAgICAgICAgIC8vIGNsb3NlIHByZXZlbnRlZFxuICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmlnbm9yZU9wZW5DaGFuZ2UgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5vcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuaWdub3JlT3BlbkNoYW5nZSA9IGZhbHNlO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGhpcy5vcGVuZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMucmVtb3ZlT3ZlcmZsb3dIaWRkZW5DbGFzcygpO1xuICAgIH07XG4gICAgdGhpcy5oYW5kbGVNdXRhdGlvbk9ic2VydmVyID0gKCkgPT4ge1xuICAgICAgdGhpcy51cGRhdGVGb290ZXJWaXNpYmlsaXR5KCk7XG4gICAgICB0aGlzLnVwZGF0ZUZvY3VzVHJhcEVsZW1lbnRzKCk7XG4gICAgfTtcbiAgICB0aGlzLnVwZGF0ZUZvb3RlclZpc2liaWxpdHkgPSAoKSA9PiB7XG4gICAgICB0aGlzLmhhc0Zvb3RlciA9ICEhZ2V0U2xvdHRlZCh0aGlzLmVsLCBbU0xPVFMuYmFjaywgU0xPVFMucHJpbWFyeSwgU0xPVFMuc2Vjb25kYXJ5XSk7XG4gICAgfTtcbiAgICB0aGlzLnVwZGF0ZVNpemVDc3NWYXJzID0gKCkgPT4ge1xuICAgICAgdGhpcy5jc3NXaWR0aCA9IGdldENvbXB1dGVkU3R5bGUodGhpcy5lbCkuZ2V0UHJvcGVydHlWYWx1ZShcIi0tY2FsY2l0ZS1tb2RhbC13aWR0aFwiKTtcbiAgICAgIHRoaXMuY3NzSGVpZ2h0ID0gZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmVsKS5nZXRQcm9wZXJ0eVZhbHVlKFwiLS1jYWxjaXRlLW1vZGFsLWhlaWdodFwiKTtcbiAgICB9O1xuICAgIHRoaXMuY29udGVudFRvcFNsb3RDaGFuZ2VIYW5kbGVyID0gKGV2ZW50KSA9PiB7XG4gICAgICB0aGlzLmhhc0NvbnRlbnRUb3AgPSBzbG90Q2hhbmdlSGFzQXNzaWduZWRFbGVtZW50KGV2ZW50KTtcbiAgICB9O1xuICAgIHRoaXMuY29udGVudEJvdHRvbVNsb3RDaGFuZ2VIYW5kbGVyID0gKGV2ZW50KSA9PiB7XG4gICAgICB0aGlzLmhhc0NvbnRlbnRCb3R0b20gPSBzbG90Q2hhbmdlSGFzQXNzaWduZWRFbGVtZW50KGV2ZW50KTtcbiAgICB9O1xuICAgIHRoaXMub3BlbiA9IGZhbHNlO1xuICAgIHRoaXMub3BlbmVkID0gZmFsc2U7XG4gICAgdGhpcy5iZWZvcmVDbG9zZSA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLmNsb3NlQnV0dG9uRGlzYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmZvY3VzVHJhcERpc2FibGVkID0gZmFsc2U7XG4gICAgdGhpcy5vdXRzaWRlQ2xvc2VEaXNhYmxlZCA9IGZhbHNlO1xuICAgIHRoaXMuZG9ja2VkID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuZXNjYXBlRGlzYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLnNjYWxlID0gXCJtXCI7XG4gICAgdGhpcy53aWR0aFNjYWxlID0gXCJtXCI7XG4gICAgdGhpcy5mdWxsc2NyZWVuID0gdW5kZWZpbmVkO1xuICAgIHRoaXMua2luZCA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLm1lc3NhZ2VzID0gdW5kZWZpbmVkO1xuICAgIHRoaXMubWVzc2FnZU92ZXJyaWRlcyA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnNsb3R0ZWRJblNoZWxsID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuY3NzV2lkdGggPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5jc3NIZWlnaHQgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5oYXNGb290ZXIgPSB0cnVlO1xuICAgIHRoaXMuaGFzQ29udGVudFRvcCA9IGZhbHNlO1xuICAgIHRoaXMuaGFzQ29udGVudEJvdHRvbSA9IGZhbHNlO1xuICAgIHRoaXMuZWZmZWN0aXZlTG9jYWxlID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuZGVmYXVsdE1lc3NhZ2VzID0gdW5kZWZpbmVkO1xuICB9XG4gIGhhbmRsZUZvY3VzVHJhcERpc2FibGVkKGZvY3VzVHJhcERpc2FibGVkKSB7XG4gICAgaWYgKCF0aGlzLm9wZW4pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9jdXNUcmFwRGlzYWJsZWQgPyBkZWFjdGl2YXRlRm9jdXNUcmFwKHRoaXMpIDogYWN0aXZhdGVGb2N1c1RyYXAodGhpcyk7XG4gIH1cbiAgb25NZXNzYWdlc0NoYW5nZSgpIHtcbiAgICAvKiB3aXJlZCB1cCBieSB0OW4gdXRpbCAqL1xuICB9XG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy9cbiAgLy8gIExpZmVjeWNsZVxuICAvL1xuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIGFzeW5jIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgIGF3YWl0IHNldFVwTWVzc2FnZXModGhpcyk7XG4gICAgc2V0VXBMb2FkYWJsZUNvbXBvbmVudCh0aGlzKTtcbiAgICAvLyB3aGVuIG1vZGFsIGluaXRpYWxseSByZW5kZXJzLCBpZiBhY3RpdmUgd2FzIHNldCB3ZSBuZWVkIHRvIG9wZW4gYXMgd2F0Y2hlciBkb2Vzbid0IGZpcmVcbiAgICBpZiAodGhpcy5vcGVuKSB7XG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5vcGVuTW9kYWwoKSk7XG4gICAgfVxuICB9XG4gIGNvbXBvbmVudERpZExvYWQoKSB7XG4gICAgc2V0Q29tcG9uZW50TG9hZGVkKHRoaXMpO1xuICB9XG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMubXV0YXRpb25PYnNlcnZlcj8ub2JzZXJ2ZSh0aGlzLmVsLCB7IGNoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZSB9KTtcbiAgICB0aGlzLmNzc1Zhck9ic2VydmVyPy5vYnNlcnZlKHRoaXMuZWwsIHsgYXR0cmlidXRlRmlsdGVyOiBbXCJzdHlsZVwiXSB9KTtcbiAgICB0aGlzLnVwZGF0ZVNpemVDc3NWYXJzKCk7XG4gICAgdGhpcy51cGRhdGVGb290ZXJWaXNpYmlsaXR5KCk7XG4gICAgY29ubmVjdENvbmRpdGlvbmFsU2xvdENvbXBvbmVudCh0aGlzKTtcbiAgICBjb25uZWN0TG9jYWxpemVkKHRoaXMpO1xuICAgIGNvbm5lY3RNZXNzYWdlcyh0aGlzKTtcbiAgICBjb25uZWN0Rm9jdXNUcmFwKHRoaXMpO1xuICB9XG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMucmVtb3ZlT3ZlcmZsb3dIaWRkZW5DbGFzcygpO1xuICAgIHRoaXMubXV0YXRpb25PYnNlcnZlcj8uZGlzY29ubmVjdCgpO1xuICAgIHRoaXMuY3NzVmFyT2JzZXJ2ZXI/LmRpc2Nvbm5lY3QoKTtcbiAgICBkaXNjb25uZWN0Q29uZGl0aW9uYWxTbG90Q29tcG9uZW50KHRoaXMpO1xuICAgIGRlYWN0aXZhdGVGb2N1c1RyYXAodGhpcyk7XG4gICAgZGlzY29ubmVjdExvY2FsaXplZCh0aGlzKTtcbiAgICBkaXNjb25uZWN0TWVzc2FnZXModGhpcyk7XG4gICAgdGhpcy5zbG90dGVkSW5TaGVsbCA9IGZhbHNlO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKGgoSG9zdCwgeyBcImFyaWEtZGVzY3JpYmVkYnlcIjogdGhpcy5jb250ZW50SWQsIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRoaXMudGl0bGVJZCwgXCJhcmlhLW1vZGFsXCI6IFwidHJ1ZVwiLCByb2xlOiBcImRpYWxvZ1wiIH0sIGgoXCJkaXZcIiwgeyBjbGFzczoge1xuICAgICAgICBbQ1NTLmNvbnRhaW5lcl06IHRydWUsXG4gICAgICAgIFtDU1MuY29udGFpbmVyT3Blbl06IHRoaXMub3BlbmVkLFxuICAgICAgICBbQ1NTLnNsb3R0ZWRJblNoZWxsXTogdGhpcy5zbG90dGVkSW5TaGVsbCxcbiAgICAgIH0gfSwgaChcImNhbGNpdGUtc2NyaW1cIiwgeyBjbGFzczogQ1NTLnNjcmltLCBvbkNsaWNrOiB0aGlzLmhhbmRsZU91dHNpZGVDbG9zZSB9KSwgdGhpcy5yZW5kZXJTdHlsZSgpLCBoKFwiZGl2XCIsIHsgY2xhc3M6IHtcbiAgICAgICAgW0NTUy5tb2RhbF06IHRydWUsXG4gICAgICB9LFxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L2pzeC1zb3J0LXByb3BzIC0tIHJlZiBzaG91bGQgYmUgbGFzdCBzbyBub2RlIGF0dHJzL3Byb3BzIGFyZSBpbiBzeW5jIChzZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL3B1bGwvNjUzMClcbiAgICAgIHJlZjogdGhpcy5zZXRUcmFuc2l0aW9uRWwgfSwgaChcImRpdlwiLCB7IGNsYXNzOiBDU1MuaGVhZGVyIH0sIHRoaXMucmVuZGVyQ2xvc2VCdXR0b24oKSwgaChcImhlYWRlclwiLCB7IGNsYXNzOiBDU1MudGl0bGUgfSwgaChcInNsb3RcIiwgeyBuYW1lOiBDU1MuaGVhZGVyIH0pKSksIHRoaXMucmVuZGVyQ29udGVudFRvcCgpLCBoKFwiZGl2XCIsIHsgY2xhc3M6IHtcbiAgICAgICAgW0NTUy5jb250ZW50XTogdHJ1ZSxcbiAgICAgICAgW0NTUy5jb250ZW50Tm9Gb290ZXJdOiAhdGhpcy5oYXNGb290ZXIsXG4gICAgICB9LFxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L2pzeC1zb3J0LXByb3BzIC0tIHJlZiBzaG91bGQgYmUgbGFzdCBzbyBub2RlIGF0dHJzL3Byb3BzIGFyZSBpbiBzeW5jIChzZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL3B1bGwvNjUzMClcbiAgICAgIHJlZjogKGVsKSA9PiAodGhpcy5tb2RhbENvbnRlbnQgPSBlbCkgfSwgaChcInNsb3RcIiwgeyBuYW1lOiBTTE9UUy5jb250ZW50IH0pKSwgdGhpcy5yZW5kZXJDb250ZW50Qm90dG9tKCksIHRoaXMucmVuZGVyRm9vdGVyKCkpKSkpO1xuICB9XG4gIHJlbmRlckZvb3RlcigpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNGb290ZXIgPyAoaChcImRpdlwiLCB7IGNsYXNzOiBDU1MuZm9vdGVyLCBrZXk6IFwiZm9vdGVyXCIgfSwgaChcInNwYW5cIiwgeyBjbGFzczogQ1NTLmJhY2sgfSwgaChcInNsb3RcIiwgeyBuYW1lOiBTTE9UUy5iYWNrIH0pKSwgaChcInNwYW5cIiwgeyBjbGFzczogQ1NTLnNlY29uZGFyeSB9LCBoKFwic2xvdFwiLCB7IG5hbWU6IFNMT1RTLnNlY29uZGFyeSB9KSksIGgoXCJzcGFuXCIsIHsgY2xhc3M6IENTUy5wcmltYXJ5IH0sIGgoXCJzbG90XCIsIHsgbmFtZTogU0xPVFMucHJpbWFyeSB9KSkpKSA6IG51bGw7XG4gIH1cbiAgcmVuZGVyQ29udGVudFRvcCgpIHtcbiAgICByZXR1cm4gKGgoXCJkaXZcIiwgeyBjbGFzczogQ1NTLmNvbnRlbnRUb3AsIGhpZGRlbjogIXRoaXMuaGFzQ29udGVudFRvcCB9LCBoKFwic2xvdFwiLCB7IG5hbWU6IFNMT1RTLmNvbnRlbnRUb3AsIG9uU2xvdGNoYW5nZTogdGhpcy5jb250ZW50VG9wU2xvdENoYW5nZUhhbmRsZXIgfSkpKTtcbiAgfVxuICByZW5kZXJDb250ZW50Qm90dG9tKCkge1xuICAgIHJldHVybiAoaChcImRpdlwiLCB7IGNsYXNzOiBDU1MuY29udGVudEJvdHRvbSwgaGlkZGVuOiAhdGhpcy5oYXNDb250ZW50Qm90dG9tIH0sIGgoXCJzbG90XCIsIHsgbmFtZTogU0xPVFMuY29udGVudEJvdHRvbSwgb25TbG90Y2hhbmdlOiB0aGlzLmNvbnRlbnRCb3R0b21TbG90Q2hhbmdlSGFuZGxlciB9KSkpO1xuICB9XG4gIHJlbmRlckNsb3NlQnV0dG9uKCkge1xuICAgIHJldHVybiAhdGhpcy5jbG9zZUJ1dHRvbkRpc2FibGVkID8gKGgoXCJidXR0b25cIiwgeyBcImFyaWEtbGFiZWxcIjogdGhpcy5tZXNzYWdlcy5jbG9zZSwgY2xhc3M6IENTUy5jbG9zZSwga2V5OiBcImJ1dHRvblwiLCBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsb3NlQ2xpY2ssIHRpdGxlOiB0aGlzLm1lc3NhZ2VzLmNsb3NlLFxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L2pzeC1zb3J0LXByb3BzIC0tIHJlZiBzaG91bGQgYmUgbGFzdCBzbyBub2RlIGF0dHJzL3Byb3BzIGFyZSBpbiBzeW5jIChzZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL3B1bGwvNjUzMClcbiAgICAgIHJlZjogKGVsKSA9PiAodGhpcy5jbG9zZUJ1dHRvbkVsID0gZWwpIH0sIGgoXCJjYWxjaXRlLWljb25cIiwgeyBpY29uOiBJQ09OUy5jbG9zZSwgc2NhbGU6IGdldEljb25TY2FsZSh0aGlzLnNjYWxlKSB9KSkpIDogbnVsbDtcbiAgfVxuICByZW5kZXJTdHlsZSgpIHtcbiAgICBpZiAoIXRoaXMuZnVsbHNjcmVlbiAmJiAodGhpcy5jc3NXaWR0aCB8fCB0aGlzLmNzc0hlaWdodCkpIHtcbiAgICAgIHJldHVybiAoaChcInN0eWxlXCIsIG51bGwsIGAuJHtDU1MuY29udGFpbmVyfSB7XG4gICAgICAgICAgICAgICR7dGhpcy5kb2NrZWQgJiYgdGhpcy5jc3NXaWR0aCA/IGBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7YCA6IFwiXCJ9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuJHtDU1MubW9kYWx9IHtcbiAgICAgICAgICAgICAgYmxvY2stc2l6ZTogJHt0aGlzLmNzc0hlaWdodCA/IHRoaXMuY3NzSGVpZ2h0IDogXCJhdXRvXCJ9ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICR7dGhpcy5jc3NXaWR0aCA/IGBpbmxpbmUtc2l6ZTogJHt0aGlzLmNzc1dpZHRofSAhaW1wb3J0YW50O2AgOiBcIlwifVxuICAgICAgICAgICAgICAke3RoaXMuY3NzV2lkdGggPyBgbWF4LWlubGluZS1zaXplOiAke3RoaXMuY3NzV2lkdGh9ICFpbXBvcnRhbnQ7YCA6IFwiXCJ9XG4gICAgICAgICAgICAgICR7dGhpcy5kb2NrZWQgPyBgYm9yZGVyLXJhZGl1czogdmFyKC0tY2FsY2l0ZS1ib3JkZXItcmFkaXVzKSAhaW1wb3J0YW50O2AgOiBcIlwifVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHt0aGlzLmNzc1dpZHRofSkge1xuICAgICAgICAgICAgICAuJHtDU1MuY29udGFpbmVyfSB7XG4gICAgICAgICAgICAgICAgJHt0aGlzLmRvY2tlZCA/IGBhbGlnbi1pdGVtczogZmxleC1lbmQgIWltcG9ydGFudDtgIDogXCJcIn1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAuJHtDU1MubW9kYWx9IHtcbiAgICAgICAgICAgICAgICBtYXgtYmxvY2stc2l6ZTogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIGlubGluZS1zaXplOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgbWF4LWlubGluZS1zaXplOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgbWluLWlubGluZS1zaXplOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgJHshdGhpcy5kb2NrZWQgPyBgYmxvY2stc2l6ZTogMTAwJSAhaW1wb3J0YW50O2AgOiBcIlwifVxuICAgICAgICAgICAgICAgICR7IXRoaXMuZG9ja2VkID8gYGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDtgIDogXCJcIn1cbiAgICAgICAgICAgICAgICAke3RoaXMuZG9ja2VkXG4gICAgICAgID8gYGJvcmRlci1yYWRpdXM6IHZhcigtLWNhbGNpdGUtYm9yZGVyLXJhZGl1cykgdmFyKC0tY2FsY2l0ZS1ib3JkZXItcmFkaXVzKSAwIDAgIWltcG9ydGFudDtgXG4gICAgICAgIDogXCJcIn1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIGApKTtcbiAgICB9XG4gIH1cbiAgZWZmZWN0aXZlTG9jYWxlQ2hhbmdlKCkge1xuICAgIHVwZGF0ZU1lc3NhZ2VzKHRoaXMsIHRoaXMuZWZmZWN0aXZlTG9jYWxlKTtcbiAgfVxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vXG4gIC8vICBFdmVudCBMaXN0ZW5lcnNcbiAgLy9cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICBoYW5kbGVFc2NhcGUoZXZlbnQpIHtcbiAgICBpZiAodGhpcy5vcGVuICYmICF0aGlzLmVzY2FwZURpc2FibGVkICYmIGV2ZW50LmtleSA9PT0gXCJFc2NhcGVcIiAmJiAhZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgdGhpcy5vcGVuID0gZmFsc2U7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfVxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vXG4gIC8vICBQdWJsaWMgTWV0aG9kc1xuICAvL1xuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKlxuICAgKiBTZXRzIGZvY3VzIG9uIHRoZSBjb21wb25lbnQncyBcImNsb3NlXCIgYnV0dG9uICh0aGUgZmlyc3QgZm9jdXNhYmxlIGl0ZW0pLlxuICAgKlxuICAgKi9cbiAgYXN5bmMgc2V0Rm9jdXMoKSB7XG4gICAgYXdhaXQgY29tcG9uZW50Rm9jdXNhYmxlKHRoaXMpO1xuICAgIGZvY3VzRmlyc3RUYWJiYWJsZSh0aGlzLmVsKTtcbiAgfVxuICAvKipcbiAgICogVXBkYXRlcyB0aGUgZWxlbWVudChzKSB0aGF0IGFyZSB1c2VkIHdpdGhpbiB0aGUgZm9jdXMtdHJhcCBvZiB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgYXN5bmMgdXBkYXRlRm9jdXNUcmFwRWxlbWVudHMoKSB7XG4gICAgdXBkYXRlRm9jdXNUcmFwRWxlbWVudHModGhpcyk7XG4gIH1cbiAgLyoqXG4gICAqIFNldHMgdGhlIHNjcm9sbCB0b3Agb2YgdGhlIGNvbXBvbmVudCdzIGNvbnRlbnQuXG4gICAqXG4gICAqIEBwYXJhbSB0b3BcbiAgICogQHBhcmFtIGxlZnRcbiAgICovXG4gIGFzeW5jIHNjcm9sbENvbnRlbnQodG9wID0gMCwgbGVmdCA9IDApIHtcbiAgICBpZiAodGhpcy5tb2RhbENvbnRlbnQpIHtcbiAgICAgIGlmICh0aGlzLm1vZGFsQ29udGVudC5zY3JvbGxUbykge1xuICAgICAgICB0aGlzLm1vZGFsQ29udGVudC5zY3JvbGxUbyh7IHRvcCwgbGVmdCwgYmVoYXZpb3I6IFwic21vb3RoXCIgfSk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgdGhpcy5tb2RhbENvbnRlbnQuc2Nyb2xsVG9wID0gdG9wO1xuICAgICAgICB0aGlzLm1vZGFsQ29udGVudC5zY3JvbGxMZWZ0ID0gbGVmdDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgb25CZWZvcmVPcGVuKCkge1xuICAgIHRoaXMudHJhbnNpdGlvbkVsLmNsYXNzTGlzdC5hZGQoQ1NTLm9wZW5pbmdBY3RpdmUpO1xuICAgIHRoaXMuY2FsY2l0ZU1vZGFsQmVmb3JlT3Blbi5lbWl0KCk7XG4gIH1cbiAgb25PcGVuKCkge1xuICAgIHRoaXMudHJhbnNpdGlvbkVsLmNsYXNzTGlzdC5yZW1vdmUoQ1NTLm9wZW5pbmdJZGxlLCBDU1Mub3BlbmluZ0FjdGl2ZSk7XG4gICAgdGhpcy5jYWxjaXRlTW9kYWxPcGVuLmVtaXQoKTtcbiAgICBhY3RpdmF0ZUZvY3VzVHJhcCh0aGlzKTtcbiAgfVxuICBvbkJlZm9yZUNsb3NlKCkge1xuICAgIHRoaXMudHJhbnNpdGlvbkVsLmNsYXNzTGlzdC5hZGQoQ1NTLmNsb3NpbmdBY3RpdmUpO1xuICAgIHRoaXMuY2FsY2l0ZU1vZGFsQmVmb3JlQ2xvc2UuZW1pdCgpO1xuICB9XG4gIG9uQ2xvc2UoKSB7XG4gICAgdGhpcy50cmFuc2l0aW9uRWwuY2xhc3NMaXN0LnJlbW92ZShDU1MuY2xvc2luZ0lkbGUsIENTUy5jbG9zaW5nQWN0aXZlKTtcbiAgICB0aGlzLmNhbGNpdGVNb2RhbENsb3NlLmVtaXQoKTtcbiAgICBkZWFjdGl2YXRlRm9jdXNUcmFwKHRoaXMpO1xuICB9XG4gIHRvZ2dsZU1vZGFsKHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuaWdub3JlT3BlbkNoYW5nZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMub3Blbk1vZGFsKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5jbG9zZU1vZGFsKCk7XG4gICAgfVxuICB9XG4gIGhhbmRsZU9wZW5lZENoYW5nZSh2YWx1ZSkge1xuICAgIG9uVG9nZ2xlT3BlbkNsb3NlQ29tcG9uZW50KHRoaXMpO1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy50cmFuc2l0aW9uRWw/LmNsYXNzTGlzdC5hZGQoQ1NTLm9wZW5pbmdJZGxlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLnRyYW5zaXRpb25FbD8uY2xhc3NMaXN0LmFkZChDU1MuY2xvc2luZ0lkbGUpO1xuICAgIH1cbiAgfVxuICBvcGVuTW9kYWwoKSB7XG4gICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKFwiY2FsY2l0ZU1vZGFsT3BlblwiLCB0aGlzLm9wZW5FbmQpO1xuICAgIHRoaXMub3BlbmVkID0gdHJ1ZTtcbiAgICBjb25zdCB0aXRsZUVsID0gZ2V0U2xvdHRlZCh0aGlzLmVsLCBTTE9UUy5oZWFkZXIpO1xuICAgIGNvbnN0IGNvbnRlbnRFbCA9IGdldFNsb3R0ZWQodGhpcy5lbCwgU0xPVFMuY29udGVudCk7XG4gICAgdGhpcy50aXRsZUlkID0gZW5zdXJlSWQodGl0bGVFbCk7XG4gICAgdGhpcy5jb250ZW50SWQgPSBlbnN1cmVJZChjb250ZW50RWwpO1xuICAgIGlmICghdGhpcy5zbG90dGVkSW5TaGVsbCkge1xuICAgICAgdGhpcy5pbml0aWFsT3ZlcmZsb3dDU1MgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUub3ZlcmZsb3c7XG4gICAgICAvLyB1c2UgYW4gaW5saW5lIHN0eWxlIGluc3RlYWQgb2YgYSB1dGlsaXR5IGNsYXNzIHRvIGF2b2lkIGdsb2JhbCBjbGFzcyBkZWNsYXJhdGlvbnMuXG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoXCJvdmVyZmxvd1wiLCBcImhpZGRlblwiKTtcbiAgICB9XG4gIH1cbiAgcmVtb3ZlT3ZlcmZsb3dIaWRkZW5DbGFzcygpIHtcbiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoXCJvdmVyZmxvd1wiLCB0aGlzLmluaXRpYWxPdmVyZmxvd0NTUyk7XG4gIH1cbiAgc3RhdGljIGdldCBhc3NldHNEaXJzKCkgeyByZXR1cm4gW1wiYXNzZXRzXCJdOyB9XG4gIGdldCBlbCgpIHsgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7IH1cbiAgc3RhdGljIGdldCB3YXRjaGVycygpIHsgcmV0dXJuIHtcbiAgICBcImZvY3VzVHJhcERpc2FibGVkXCI6IFtcImhhbmRsZUZvY3VzVHJhcERpc2FibGVkXCJdLFxuICAgIFwibWVzc2FnZU92ZXJyaWRlc1wiOiBbXCJvbk1lc3NhZ2VzQ2hhbmdlXCJdLFxuICAgIFwiZWZmZWN0aXZlTG9jYWxlXCI6IFtcImVmZmVjdGl2ZUxvY2FsZUNoYW5nZVwiXSxcbiAgICBcIm9wZW5cIjogW1widG9nZ2xlTW9kYWxcIl0sXG4gICAgXCJvcGVuZWRcIjogW1wiaGFuZGxlT3BlbmVkQ2hhbmdlXCJdXG4gIH07IH1cbn07XG5Nb2RhbC5zdHlsZSA9IG1vZGFsQ3NzO1xuXG5leHBvcnQgeyBNb2RhbCBhcyBjYWxjaXRlX21vZGFsIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhbGNpdGUtbW9kYWwuZW50cnkuanMubWFwIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9Fc3JpL2NhbGNpdGUtZGVzaWduLXN5c3RlbS9ibG9iL21haW4vTElDRU5TRS5tZCBmb3IgZGV0YWlscy5cbiAqIHYyLjAuMFxuICovXG5mdW5jdGlvbiBnZXRJY29uU2NhbGUoY29tcG9uZW50U2NhbGUpIHtcbiAgcmV0dXJuIGNvbXBvbmVudFNjYWxlID09PSBcImxcIiA/IFwibVwiIDogXCJzXCI7XG59XG4vKipcbiAqIFRoaXMgdXRpbCBoZWxwcyB1cyB3YWl0IGZvciBhIGNvbXBvbmVudCB0byBiZSByZWFkeSBmb3IgYm90aCBsYXp5LWxvYWRpbmcgKGBkaXN0YCBvdXRwdXQpIGFuZCBub24tbGF6eS1sb2FkaW5nIChgY29tcG9uZW50c2Agb3V0cHV0KSBjb21wb25lbnRzLlxuICpcbiAqIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2lvbmljLWZyYW1ld29yay9ibG9iLzFhOGJkNmQvY29yZS9zcmMvdXRpbHMvaGVscGVycy50cyNMNjBDMS1MNzlDM1xuICpcbiAqIEBwYXJhbSBlbCAtIHRoZSBob3N0IGVsZW1lbnQgdG8gd2FpdCBmb3JcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY29tcG9uZW50T25SZWFkeShlbCkge1xuICBhd2FpdCAoaXNTdGVuY2lsRWwoZWwpXG4gICAgPyBlbC5jb21wb25lbnRPblJlYWR5KClcbiAgICA6IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gcmVzb2x2ZSgpKSkpO1xufVxuZnVuY3Rpb24gaXNTdGVuY2lsRWwoZWwpIHtcbiAgcmV0dXJuIHR5cGVvZiBlbC5jb21wb25lbnRPblJlYWR5ID09PSBcImZ1bmN0aW9uXCI7XG59XG5cbmV4cG9ydCB7IGNvbXBvbmVudE9uUmVhZHkgYXMgYywgZ2V0SWNvblNjYWxlIGFzIGcgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tcG9uZW50LWY5NGNhYjcyLmpzLm1hcCIsIi8qIVxuICogQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vRXNyaS9jYWxjaXRlLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYWluL0xJQ0VOU0UubWQgZm9yIGRldGFpbHMuXG4gKiB2Mi4wLjBcbiAqL1xuaW1wb3J0IHsgZiBhcyBmb3JjZVVwZGF0ZSB9IGZyb20gJy4vaW5kZXgtODZmYWVmOWMuanMnO1xuaW1wb3J0IHsgYyBhcyBjcmVhdGVPYnNlcnZlciB9IGZyb20gJy4vb2JzZXJ2ZXJzLTcxZDMzMmRiLmpzJztcblxuY29uc3Qgb2JzZXJ2ZWQgPSBuZXcgU2V0KCk7XG5sZXQgbXV0YXRpb25PYnNlcnZlcjtcbmNvbnN0IG9ic2VydmVyT3B0aW9ucyA9IHsgY2hpbGRMaXN0OiB0cnVlIH07XG4vKipcbiAqIEhlbHBlciB0byBzZXQgdXAgYSBjb25kaXRpb25hbCBzbG90IGNvbXBvbmVudCBvbiBjb25uZWN0ZWRDYWxsYmFjay5cbiAqXG4gKiBAcGFyYW0gY29tcG9uZW50XG4gKiBAZGVwcmVjYXRlZCBVc2UgYG9uU2xvdGNoYW5nZWAgZXZlbnQgd2l0aCBgc2xvdENoYW5nZUhhc0Fzc2lnbmVkRWxlbWVudGAgRE9NIHV0aWxpdHkgaW5zdGVhZC5cbiAqXG4gKiBgYGBcbiAqIDxzbG90IG9uU2xvdGNoYW5nZT17KGV2ZW50KSA9PiB0aGlzLm15U2xvdEhhc0VsZW1lbnQgPSBzbG90Q2hhbmdlSGFzQXNzaWduZWRFbGVtZW50KGV2ZW50KX0gLz59XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gY29ubmVjdENvbmRpdGlvbmFsU2xvdENvbXBvbmVudChjb21wb25lbnQpIHtcbiAgaWYgKCFtdXRhdGlvbk9ic2VydmVyKSB7XG4gICAgbXV0YXRpb25PYnNlcnZlciA9IGNyZWF0ZU9ic2VydmVyKFwibXV0YXRpb25cIiwgcHJvY2Vzc011dGF0aW9ucyk7XG4gIH1cbiAgbXV0YXRpb25PYnNlcnZlci5vYnNlcnZlKGNvbXBvbmVudC5lbCwgb2JzZXJ2ZXJPcHRpb25zKTtcbn1cbi8qKlxuICogSGVscGVyIHRvIHRlYXIgZG93biBhIGNvbmRpdGlvbmFsIHNsb3QgY29tcG9uZW50IG9uIGRpc2Nvbm5lY3RlZENhbGxiYWNrLlxuICpcbiAqIEBwYXJhbSBjb21wb25lbnRcbiAqIEBkZXByZWNhdGVkIFVzZSBgb25TbG90Y2hhbmdlYCBldmVudCB3aXRoIGBzbG90Q2hhbmdlSGFzQXNzaWduZWRFbGVtZW50YCBET00gdXRpbGl0eSBpbnN0ZWFkLlxuICpcbiAqIGBgYFxuICogPHNsb3Qgb25TbG90Y2hhbmdlPXsoZXZlbnQpID0+IHRoaXMubXlTbG90SGFzRWxlbWVudCA9IHNsb3RDaGFuZ2VIYXNBc3NpZ25lZEVsZW1lbnQoZXZlbnQpfSAvPn1cbiAqIGBgYFxuICovXG5mdW5jdGlvbiBkaXNjb25uZWN0Q29uZGl0aW9uYWxTbG90Q29tcG9uZW50KGNvbXBvbmVudCkge1xuICBvYnNlcnZlZC5kZWxldGUoY29tcG9uZW50LmVsKTtcbiAgLy8gd2UgZXhwbGljaXRseSBwcm9jZXNzIHF1ZXVlZCBtdXRhdGlvbnMgYW5kIGRpc2Nvbm5lY3QgYW5kIHJlY29ubmVjdFxuICAvLyB0aGUgb2JzZXJ2ZXIgdW50aWwgTXV0YXRpb25PYnNlcnZlciBnZXRzIGFuIGB1bm9ic2VydmVgIG1ldGhvZFxuICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3doYXR3Zy9kb20vaXNzdWVzLzEyNlxuICBwcm9jZXNzTXV0YXRpb25zKG11dGF0aW9uT2JzZXJ2ZXIudGFrZVJlY29yZHMoKSk7XG4gIG11dGF0aW9uT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICBmb3IgKGNvbnN0IFtlbGVtZW50XSBvZiBvYnNlcnZlZC5lbnRyaWVzKCkpIHtcbiAgICBtdXRhdGlvbk9ic2VydmVyLm9ic2VydmUoZWxlbWVudCwgb2JzZXJ2ZXJPcHRpb25zKTtcbiAgfVxufVxuZnVuY3Rpb24gcHJvY2Vzc011dGF0aW9ucyhtdXRhdGlvbnMpIHtcbiAgbXV0YXRpb25zLmZvckVhY2goKHsgdGFyZ2V0IH0pID0+IHtcbiAgICBmb3JjZVVwZGF0ZSh0YXJnZXQpO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgY29ubmVjdENvbmRpdGlvbmFsU2xvdENvbXBvbmVudCBhcyBjLCBkaXNjb25uZWN0Q29uZGl0aW9uYWxTbG90Q29tcG9uZW50IGFzIGQgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uZGl0aW9uYWxTbG90LWY2NzEwODc1LmpzLm1hcCIsIi8qIVxuICogQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vRXNyaS9jYWxjaXRlLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYWluL0xJQ0VOU0UubWQgZm9yIGRldGFpbHMuXG4gKiB2Mi4wLjBcbiAqL1xuaW1wb3J0IHsgZiBhcyBmb3JjZVVwZGF0ZSB9IGZyb20gJy4vaW5kZXgtODZmYWVmOWMuanMnO1xuXG5jb25zdCByZXNvbHZlTWFwID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IHByb21pc2VNYXAgPSBuZXcgV2Vha01hcCgpO1xuLyoqXG4gKiBUaGlzIGhlbHBlciB1dGlsIHNldHMgdXAgdGhlIGNvbXBvbmVudCBmb3IgdGhlIGFiaWxpdHkgdG8ga25vdyB3aGVuIHRoZSBjb21wb25lbnQgaGFzIGJlZW4gbG9hZGVkLlxuICpcbiAqIFRoaXMgc2hvdWxkIGJlIHVzZWQgaW4gdGhlIGBjb21wb25lbnRXaWxsTG9hZGAgbGlmZWN5Y2xlIGhvb2suXG4gKlxuICogYGBgXG4gKiBjb21wb25lbnRXaWxsTG9hZCgpOiB2b2lkIHtcbiAqICAgc2V0VXBMb2FkYWJsZUNvbXBvbmVudCh0aGlzKTtcbiAqIH1cbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBjb21wb25lbnRcbiAqL1xuZnVuY3Rpb24gc2V0VXBMb2FkYWJsZUNvbXBvbmVudChjb21wb25lbnQpIHtcbiAgcHJvbWlzZU1hcC5zZXQoY29tcG9uZW50LCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gcmVzb2x2ZU1hcC5zZXQoY29tcG9uZW50LCByZXNvbHZlKSkpO1xufVxuLyoqXG4gKiBUaGlzIGhlbHBlciB1dGlsIGxldHMgdGhlIGxvYWRhYmxlIGNvbXBvbmVudCBrbm93IHRoYXQgaXQgaXMgbm93IGxvYWRlZC5cbiAqXG4gKiBUaGlzIHNob3VsZCBiZSB1c2VkIGluIHRoZSBgY29tcG9uZW50RGlkTG9hZGAgbGlmZWN5Y2xlIGhvb2suXG4gKlxuICogYGBgXG4gKiBjb21wb25lbnREaWRMb2FkKCk6IHZvaWQge1xuICogICBzZXRDb21wb25lbnRMb2FkZWQodGhpcyk7XG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gY29tcG9uZW50XG4gKi9cbmZ1bmN0aW9uIHNldENvbXBvbmVudExvYWRlZChjb21wb25lbnQpIHtcbiAgcmVzb2x2ZU1hcC5nZXQoY29tcG9uZW50KSgpO1xufVxuLyoqXG4gKiBUaGlzIGhlbHBlciB1dGlsIGNhbiBiZSB1c2VkIHRvIGVuc3VyZSBhIGNvbXBvbmVudCBoYXMgYmVlbiBsb2FkZWQgKFRoZSBcImNvbXBvbmVudERpZExvYWRcIiBTdGVuY2lsIGxpZmVjeWNsZSBtZXRob2QgaGFzIGJlZW4gY2FsbGVkKS5cbiAqXG4gKiBSZXF1aXJlcyByZXF1aXJlcyBgTG9hZGFibGVDb21wb25lbnRgIHRvIGJlIGltcGxlbWVudGVkLlxuICpcbiAqIEEgY29tcG9uZW50IGRldmVsb3BlciBjYW4gYXdhaXQgdGhpcyBtZXRob2QgYmVmb3JlIHByb2NlZWRpbmcgd2l0aCBhbnkgbG9naWMgdGhhdCByZXF1aXJlcyBhIGNvbXBvbmVudCB0byBiZSBsb2FkZWQgZmlyc3QuXG4gKlxuICogYGBgXG4gKiBhc3luYyBteU1ldGhvZCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAqICAgYXdhaXQgY29tcG9uZW50TG9hZGVkKHRoaXMpO1xuICogfVxuICogYGBgXG4gKlxuICogQHBhcmFtIGNvbXBvbmVudFxuICogQHJldHVybnMgUHJvbWlzZTx2b2lkPlxuICovXG5mdW5jdGlvbiBjb21wb25lbnRMb2FkZWQoY29tcG9uZW50KSB7XG4gIHJldHVybiBwcm9taXNlTWFwLmdldChjb21wb25lbnQpO1xufVxuLyoqXG4gKiBUaGlzIGhlbHBlciB1dGlsIGNhbiBiZSB1c2VkIHRvIGVuc3VyaW5nIHRoZSBjb21wb25lbnQgaXMgbG9hZGVkIGFuZCByZW5kZXJlZCBieSB0aGUgYnJvd3NlciAoVGhlIFwiY29tcG9uZW50RGlkTG9hZFwiIFN0ZW5jaWwgbGlmZWN5Y2xlIG1ldGhvZCBoYXMgYmVlbiBjYWxsZWQgYW5kIGFueSBpbnRlcm5hbCBlbGVtZW50cyBhcmUgZm9jdXNhYmxlKS5cbiAqXG4gKiBSZXF1aXJlcyByZXF1aXJlcyBgTG9hZGFibGVDb21wb25lbnRgIHRvIGJlIGltcGxlbWVudGVkLlxuICpcbiAqIEEgY29tcG9uZW50IGRldmVsb3BlciBjYW4gYXdhaXQgdGhpcyBtZXRob2QgYmVmb3JlIHByb2NlZWRpbmcgd2l0aCBhbnkgbG9naWMgdGhhdCByZXF1aXJlcyBhIGNvbXBvbmVudCB0byBiZSBsb2FkZWQgZmlyc3QgYW5kIHRoZW4gYW4gaW50ZXJuYWwgZWxlbWVudCBiZSBmb2N1c2VkLlxuICpcbiAqIGBgYFxuICogYXN5bmMgc2V0Rm9jdXMoKTogUHJvbWlzZTx2b2lkPiB7XG4gKiAgIGF3YWl0IGNvbXBvbmVudEZvY3VzYWJsZSh0aGlzKTtcbiAqICAgdGhpcy5pbnRlcm5hbEVsZW1lbnQ/LmZvY3VzKCk7XG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gY29tcG9uZW50XG4gKiBAcmV0dXJucyBQcm9taXNlPHZvaWQ+XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNvbXBvbmVudEZvY3VzYWJsZShjb21wb25lbnQpIHtcbiAgYXdhaXQgY29tcG9uZW50TG9hZGVkKGNvbXBvbmVudCk7XG4gIGZvcmNlVXBkYXRlKGNvbXBvbmVudCk7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHJlc29sdmUoKSkpO1xufVxuXG5leHBvcnQgeyBzZXRDb21wb25lbnRMb2FkZWQgYXMgYSwgY29tcG9uZW50TG9hZGVkIGFzIGIsIGNvbXBvbmVudEZvY3VzYWJsZSBhcyBjLCBzZXRVcExvYWRhYmxlQ29tcG9uZW50IGFzIHMgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9hZGFibGUtYjE3Mzk2ZTAuanMubWFwIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9Fc3JpL2NhbGNpdGUtZGVzaWduLXN5c3RlbS9ibG9iL21haW4vTElDRU5TRS5tZCBmb3IgZGV0YWlscy5cbiAqIHYyLjAuMFxuICovXG5pbXBvcnQgeyBlIGFzIHJlYWRUYXNrIH0gZnJvbSAnLi9pbmRleC04NmZhZWY5Yy5qcyc7XG5cbmZ1bmN0aW9uIGlzT3Blbihjb21wb25lbnQpIHtcbiAgcmV0dXJuIFwib3BlbmVkXCIgaW4gY29tcG9uZW50ID8gY29tcG9uZW50Lm9wZW5lZCA6IGNvbXBvbmVudC5vcGVuO1xufVxuZnVuY3Rpb24gZW1pdEltbWVkaWF0ZWx5KGNvbXBvbmVudCwgbm9uT3BlbkNsb3NlQ29tcG9uZW50ID0gZmFsc2UpIHtcbiAgKG5vbk9wZW5DbG9zZUNvbXBvbmVudCA/IGNvbXBvbmVudFtjb21wb25lbnQudHJhbnNpdGlvblByb3BdIDogaXNPcGVuKGNvbXBvbmVudCkpXG4gICAgPyBjb21wb25lbnQub25CZWZvcmVPcGVuKClcbiAgICA6IGNvbXBvbmVudC5vbkJlZm9yZUNsb3NlKCk7XG4gIChub25PcGVuQ2xvc2VDb21wb25lbnQgPyBjb21wb25lbnRbY29tcG9uZW50LnRyYW5zaXRpb25Qcm9wXSA6IGlzT3Blbihjb21wb25lbnQpKVxuICAgID8gY29tcG9uZW50Lm9uT3BlbigpXG4gICAgOiBjb21wb25lbnQub25DbG9zZSgpO1xufVxuLyoqXG4gKiBIZWxwZXIgdG8gZGV0ZXJtaW5lIGdsb2JhbGx5IHNldCB0cmFuc2l0aW9uIGR1cmF0aW9uIG9uIHRoZSBnaXZlbiBvcGVuVHJhbnNpdGlvblByb3AsIHdoaWNoIGlzIGltcG9ydGVkIGFuZCBzZXQgaW4gdGhlIEBXYXRjaChcIm9wZW5cIikuXG4gKiBVc2VkIHRvIGVtaXQgKGJlZm9yZSlvcGVuL2Nsb3NlIGV2ZW50cyBib3RoIGZvciB3aGVuIHRoZSBvcGFjaXR5IHRyYW5zaXRpb24gaXMgcHJlc2VudCBhbmQgd2hlbiB0aGVyZSBpcyBub25lICh0cmFuc2l0aW9uLWR1cmF0aW9uIGlzIHNldCB0byAwKS5cbiAqXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IHsgb25Ub2dnbGVPcGVuQ2xvc2VDb21wb25lbnQsIE9wZW5DbG9zZUNvbXBvbmVudCB9IGZyb20gXCIuLi8uLi91dGlscy9vcGVuQ2xvc2VDb21wb25lbnRcIjtcbiAqXG4gKiBhc3luYyBjb21wb25lbnRXaWxsTG9hZCgpIHtcbiAqIC8vIFdoZW4gY29tcG9uZW50IGluaXRpYWxseSByZW5kZXJzLCBpZiBgb3BlbmAgd2FzIHNldCB3ZSBuZWVkIHRvIHRyaWdnZXIgb24gbG9hZCBhcyB3YXRjaGVyIGRvZXNuJ3QgZmlyZS5cbiAqIGlmICh0aGlzLm9wZW4pIHtcbiAqICAgIG9uVG9nZ2xlT3BlbkNsb3NlQ29tcG9uZW50KHRoaXMpO1xuICogfVxuICogQFdhdGNoKFwib3BlblwiKVxuICogYXN5bmMgdG9nZ2xlTW9kYWwodmFsdWU6IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+IHtcbiAqICAgIG9uVG9nZ2xlT3BlbkNsb3NlQ29tcG9uZW50KHRoaXMpO1xuICogfVxuICpcbiAqIEBwYXJhbSBjb21wb25lbnQgLSBPcGVuQ2xvc2VDb21wb25lbnQgdXNlcyBgb3BlbmAgcHJvcCB0byBlbWl0IChiZWZvcmUpb3Blbi9jbG9zZS5cbiAqIEBwYXJhbSBub25PcGVuQ2xvc2VDb21wb25lbnQgLSBPcGVuQ2xvc2VDb21wb25lbnQgdXNlcyBgZXhwYW5kZWRgIHByb3AgdG8gZW1pdCAoYmVmb3JlKW9wZW4vY2xvc2UuXG4gKi9cbmZ1bmN0aW9uIG9uVG9nZ2xlT3BlbkNsb3NlQ29tcG9uZW50KGNvbXBvbmVudCwgbm9uT3BlbkNsb3NlQ29tcG9uZW50ID0gZmFsc2UpIHtcbiAgcmVhZFRhc2soKCkgPT4ge1xuICAgIGlmIChjb21wb25lbnQudHJhbnNpdGlvbkVsKSB7XG4gICAgICBjb25zdCB7IHRyYW5zaXRpb25EdXJhdGlvbjogYWxsRHVyYXRpb25zLCB0cmFuc2l0aW9uUHJvcGVydHk6IGFsbFByb3BzIH0gPSBnZXRDb21wdXRlZFN0eWxlKGNvbXBvbmVudC50cmFuc2l0aW9uRWwpO1xuICAgICAgY29uc3QgYWxsVHJhbnNpdGlvbkR1cmF0aW9uc0FycmF5ID0gYWxsRHVyYXRpb25zLnNwbGl0KFwiLFwiKTtcbiAgICAgIGNvbnN0IGFsbFRyYW5zaXRpb25Qcm9wc0FycmF5ID0gYWxsUHJvcHMuc3BsaXQoXCIsXCIpO1xuICAgICAgY29uc3Qgb3BlblRyYW5zaXRpb25Qcm9wSW5kZXggPSBhbGxUcmFuc2l0aW9uUHJvcHNBcnJheS5pbmRleE9mKGNvbXBvbmVudC5vcGVuVHJhbnNpdGlvblByb3ApO1xuICAgICAgY29uc3QgdHJhbnNpdGlvbkR1cmF0aW9uID0gYWxsVHJhbnNpdGlvbkR1cmF0aW9uc0FycmF5W29wZW5UcmFuc2l0aW9uUHJvcEluZGV4XSA/P1xuICAgICAgICAvKiBTYWZhcmkgd2lsbCBoYXZlIGEgc2luZ2xlIHRyYW5zaXRpb24gdmFsdWUgaWYgbXVsdGlwbGUgcHJvcHMgc2hhcmUgaXQsXG4gICAgICAgIHNvIHdlIGZhbGwgYmFjayB0byBpdCBpZiB0aGVyZSdzIG5vIG1hdGNoaW5nIHByb3AgZHVyYXRpb24gKi9cbiAgICAgICAgYWxsVHJhbnNpdGlvbkR1cmF0aW9uc0FycmF5WzBdO1xuICAgICAgaWYgKHRyYW5zaXRpb25EdXJhdGlvbiA9PT0gXCIwc1wiKSB7XG4gICAgICAgIGVtaXRJbW1lZGlhdGVseShjb21wb25lbnQsIG5vbk9wZW5DbG9zZUNvbXBvbmVudCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGZhbGxiYWNrVGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbXBvbmVudC50cmFuc2l0aW9uRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25zdGFydFwiLCBvblN0YXJ0KTtcbiAgICAgICAgY29tcG9uZW50LnRyYW5zaXRpb25FbC5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBvbkVuZE9yQ2FuY2VsKTtcbiAgICAgICAgY29tcG9uZW50LnRyYW5zaXRpb25FbC5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmNhbmNlbFwiLCBvbkVuZE9yQ2FuY2VsKTtcbiAgICAgICAgZW1pdEltbWVkaWF0ZWx5KGNvbXBvbmVudCwgbm9uT3BlbkNsb3NlQ29tcG9uZW50KTtcbiAgICAgIH0sIHBhcnNlRmxvYXQodHJhbnNpdGlvbkR1cmF0aW9uKSAqIDEwMDApO1xuICAgICAgY29tcG9uZW50LnRyYW5zaXRpb25FbC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbnN0YXJ0XCIsIG9uU3RhcnQpO1xuICAgICAgY29tcG9uZW50LnRyYW5zaXRpb25FbC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBvbkVuZE9yQ2FuY2VsKTtcbiAgICAgIGNvbXBvbmVudC50cmFuc2l0aW9uRWwuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25jYW5jZWxcIiwgb25FbmRPckNhbmNlbCk7XG4gICAgICBmdW5jdGlvbiBvblN0YXJ0KGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudC5wcm9wZXJ0eU5hbWUgPT09IGNvbXBvbmVudC5vcGVuVHJhbnNpdGlvblByb3AgJiYgZXZlbnQudGFyZ2V0ID09PSBjb21wb25lbnQudHJhbnNpdGlvbkVsKSB7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KGZhbGxiYWNrVGltZW91dElkKTtcbiAgICAgICAgICBjb21wb25lbnQudHJhbnNpdGlvbkVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uc3RhcnRcIiwgb25TdGFydCk7XG4gICAgICAgICAgKG5vbk9wZW5DbG9zZUNvbXBvbmVudCA/IGNvbXBvbmVudFtjb21wb25lbnQudHJhbnNpdGlvblByb3BdIDogaXNPcGVuKGNvbXBvbmVudCkpXG4gICAgICAgICAgICA/IGNvbXBvbmVudC5vbkJlZm9yZU9wZW4oKVxuICAgICAgICAgICAgOiBjb21wb25lbnQub25CZWZvcmVDbG9zZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBvbkVuZE9yQ2FuY2VsKGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudC5wcm9wZXJ0eU5hbWUgPT09IGNvbXBvbmVudC5vcGVuVHJhbnNpdGlvblByb3AgJiYgZXZlbnQudGFyZ2V0ID09PSBjb21wb25lbnQudHJhbnNpdGlvbkVsKSB7XG4gICAgICAgICAgKG5vbk9wZW5DbG9zZUNvbXBvbmVudCA/IGNvbXBvbmVudFtjb21wb25lbnQudHJhbnNpdGlvblByb3BdIDogaXNPcGVuKGNvbXBvbmVudCkpXG4gICAgICAgICAgICA/IGNvbXBvbmVudC5vbk9wZW4oKVxuICAgICAgICAgICAgOiBjb21wb25lbnQub25DbG9zZSgpO1xuICAgICAgICAgIGNvbXBvbmVudC50cmFuc2l0aW9uRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgb25FbmRPckNhbmNlbCk7XG4gICAgICAgICAgY29tcG9uZW50LnRyYW5zaXRpb25FbC5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmNhbmNlbFwiLCBvbkVuZE9yQ2FuY2VsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydCB7IG9uVG9nZ2xlT3BlbkNsb3NlQ29tcG9uZW50IGFzIG8gfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3BlbkNsb3NlQ29tcG9uZW50LTQ4ZGI2ZGFmLmpzLm1hcCIsIi8qIVxuICogQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vRXNyaS9jYWxjaXRlLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYWluL0xJQ0VOU0UubWQgZm9yIGRldGFpbHMuXG4gKiB2Mi4wLjBcbiAqL1xuaW1wb3J0IHsgYSBhcyBnZXRBc3NldFBhdGggfSBmcm9tICcuL2luZGV4LTg2ZmFlZjljLmpzJztcbmltcG9ydCB7IGcgYXMgZ2V0U3VwcG9ydGVkTG9jYWxlIH0gZnJvbSAnLi9sb2NhbGUtNmU3ODNjZjAuanMnO1xuXG5jb25zdCBjb21wb25lbnRMYW5nVG9NZXNzYWdlQnVuZGxlQ2FjaGUgPSB7fTtcbmFzeW5jIGZ1bmN0aW9uIGdldE1lc3NhZ2VCdW5kbGUobGFuZywgY29tcG9uZW50KSB7XG4gIGNvbnN0IGtleSA9IGAke2NvbXBvbmVudH1fJHtsYW5nfWA7XG4gIGlmIChjb21wb25lbnRMYW5nVG9NZXNzYWdlQnVuZGxlQ2FjaGVba2V5XSkge1xuICAgIHJldHVybiBjb21wb25lbnRMYW5nVG9NZXNzYWdlQnVuZGxlQ2FjaGVba2V5XTtcbiAgfVxuICBjb21wb25lbnRMYW5nVG9NZXNzYWdlQnVuZGxlQ2FjaGVba2V5XSA9IGZldGNoKGdldEFzc2V0UGF0aChgLi9hc3NldHMvJHtjb21wb25lbnR9L3Q5bi9tZXNzYWdlc18ke2xhbmd9Lmpzb25gKSlcbiAgICAudGhlbigocmVzcCkgPT4ge1xuICAgIGlmICghcmVzcC5vaykge1xuICAgICAgdGhyb3dNZXNzYWdlRmV0Y2hFcnJvcigpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzcC5qc29uKCk7XG4gIH0pXG4gICAgLmNhdGNoKCgpID0+IHRocm93TWVzc2FnZUZldGNoRXJyb3IoKSk7XG4gIHJldHVybiBjb21wb25lbnRMYW5nVG9NZXNzYWdlQnVuZGxlQ2FjaGVba2V5XTtcbn1cbmZ1bmN0aW9uIHRocm93TWVzc2FnZUZldGNoRXJyb3IoKSB7XG4gIHRocm93IG5ldyBFcnJvcihcImNvdWxkIG5vdCBmZXRjaCBjb21wb25lbnQgbWVzc2FnZSBidW5kbGVcIik7XG59XG5mdW5jdGlvbiBtZXJnZU1lc3NhZ2VzKGNvbXBvbmVudCkge1xuICBjb21wb25lbnQubWVzc2FnZXMgPSB7XG4gICAgLi4uY29tcG9uZW50LmRlZmF1bHRNZXNzYWdlcyxcbiAgICAuLi5jb21wb25lbnQubWVzc2FnZU92ZXJyaWRlcyxcbiAgfTtcbn1cbi8qKlxuICogVGhpcyB1dGlsaXR5IHNldHMgdXAgdGhlIG1lc3NhZ2VzIHVzZWQgYnkgdGhlIGNvbXBvbmVudC4gSXQgc2hvdWxkIGJlIGF3YWl0ZWQgaW4gdGhlIGBjb21wb25lbnRXaWxsTG9hZGAgbGlmZWN5Y2xlIGhvb2suXG4gKlxuICogQHBhcmFtIGNvbXBvbmVudFxuICovXG5hc3luYyBmdW5jdGlvbiBzZXRVcE1lc3NhZ2VzKGNvbXBvbmVudCkge1xuICBjb21wb25lbnQuZGVmYXVsdE1lc3NhZ2VzID0gYXdhaXQgZmV0Y2hNZXNzYWdlcyhjb21wb25lbnQsIGNvbXBvbmVudC5lZmZlY3RpdmVMb2NhbGUpO1xuICBtZXJnZU1lc3NhZ2VzKGNvbXBvbmVudCk7XG59XG5hc3luYyBmdW5jdGlvbiBmZXRjaE1lc3NhZ2VzKGNvbXBvbmVudCwgbGFuZykge1xuICBjb25zdCB7IGVsIH0gPSBjb21wb25lbnQ7XG4gIGNvbnN0IHRhZyA9IGVsLnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcbiAgY29uc3QgY29tcG9uZW50TmFtZSA9IHRhZy5yZXBsYWNlKFwiY2FsY2l0ZS1cIiwgXCJcIik7XG4gIHJldHVybiBnZXRNZXNzYWdlQnVuZGxlKGdldFN1cHBvcnRlZExvY2FsZShsYW5nLCBcInQ5blwiKSwgY29tcG9uZW50TmFtZSk7XG59XG4vKipcbiAqIFRoaXMgdXRpbGl0eSBtdXN0IGJlIHNldCB1cCBmb3IgdGhlIGNvbXBvbmVudCB0byB1cGRhdGUgaXRzIGRlZmF1bHQgbWVzc2FnZSBidW5kbGUgaWYgdGhlIGxvY2FsZSBjaGFuZ2VzLlxuICpcbiAqIEl0IGNhbiBiZSBzZXQgdXAgaW4gKiplaXRoZXIqKiBvZiB0aGUgZm9sbG93aW5nIHdheXM6XG4gKlxuICogMS4gY2FsbGVkIGZyb20gYExvY2FsaXplZENvbXBvbmVudGAncyBgb25Mb2NhbGVDaGFuZ2VgIG1ldGhvZCBvclxuICogMi4gY2FsbGVkIGZyb20gYSB3YXRjaGVyIGNvbmZpZ3VyZWQgdG8gd2F0Y2ggYExvY2FsaXplZENvbXBvbmVudGAncyBgZWZmZWN0aXZlTG9jYWxlYCBwcm9wXG4gKlxuICogQHBhcmFtIGNvbXBvbmVudFxuICogQHBhcmFtIGxhbmdcbiAqL1xuYXN5bmMgZnVuY3Rpb24gdXBkYXRlTWVzc2FnZXMoY29tcG9uZW50LCBsYW5nKSB7XG4gIGNvbXBvbmVudC5kZWZhdWx0TWVzc2FnZXMgPSBhd2FpdCBmZXRjaE1lc3NhZ2VzKGNvbXBvbmVudCwgbGFuZyk7XG4gIG1lcmdlTWVzc2FnZXMoY29tcG9uZW50KTtcbn1cbi8qKlxuICogVGhpcyB1dGlsaXR5IHNldHMgdXAgaW50ZXJuYWxzIGZvciBtZXNzYWdlcyBzdXBwb3J0LlxuICpcbiAqIEl0IG5lZWRzIHRvIGJlIGNhbGxlZCBpbiBgY29ubmVjdGVkQ2FsbGJhY2tgXG4gKlxuICogKipOb3RlKio6IHRoaXMgbXVzdCBiZSBjYWxsZWQgYWZ0ZXIgYExvY2FsaXplZENvbXBvbmVudGAncyBgY29ubmVjdExvY2FsaXplZGAgbWV0aG9kLlxuICpcbiAqIEBwYXJhbSBjb21wb25lbnRcbiAqL1xuZnVuY3Rpb24gY29ubmVjdE1lc3NhZ2VzKGNvbXBvbmVudCkge1xuICBjb21wb25lbnQub25NZXNzYWdlc0NoYW5nZSA9IGRlZmF1bHRPbk1lc3NhZ2VzQ2hhbmdlO1xufVxuLyoqXG4gKiBUaGlzIHV0aWxpdHkgdGVhcnMgZG93biBpbnRlcm5hbHMgZm9yIG1lc3NhZ2VzIHN1cHBvcnQuXG4gKlxuICogSXQgbmVlZHMgdG8gYmUgY2FsbGVkIGluIGBkaXNjb25uZWN0ZWRDYWxsYmFja2BcbiAqXG4gKiBAcGFyYW0gY29tcG9uZW50XG4gKi9cbmZ1bmN0aW9uIGRpc2Nvbm5lY3RNZXNzYWdlcyhjb21wb25lbnQpIHtcbiAgY29tcG9uZW50Lm9uTWVzc2FnZXNDaGFuZ2UgPSB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiBkZWZhdWx0T25NZXNzYWdlc0NoYW5nZSgpIHtcbiAgbWVyZ2VNZXNzYWdlcyh0aGlzKTtcbn1cblxuZXhwb3J0IHsgY29ubmVjdE1lc3NhZ2VzIGFzIGMsIGRpc2Nvbm5lY3RNZXNzYWdlcyBhcyBkLCBzZXRVcE1lc3NhZ2VzIGFzIHMsIHVwZGF0ZU1lc3NhZ2VzIGFzIHUgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dDluLTBiY2RjYTU0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==