"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_esri_calcite-components_dist_esm_calcite-table_entry_js"],{

/***/ "./node_modules/@esri/calcite-components/dist/esm/browser-ece29da7.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/browser-ece29da7.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: () => (/* binding */ getUserAgentString)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */
function getUserAgentData() {
  return navigator.userAgentData;
}
function getUserAgentString() {
  const uaData = getUserAgentData();
  return uaData?.brands
    ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(" ")
    : navigator.userAgent;
}



//# sourceMappingURL=browser-ece29da7.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/calcite-table.entry.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/calcite-table.entry.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcite_table: () => (/* binding */ Table)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loadable-b17396e0.js */ "./node_modules/@esri/calcite-components/dist/esm/loadable-b17396e0.js");
/* harmony import */ var _t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./t9n-0bcdca54.js */ "./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js");
/* harmony import */ var _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locale-6e783cf0.js */ "./node_modules/@esri/calcite-components/dist/esm/locale-6e783cf0.js");
/* harmony import */ var _browser_ece29da7_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./browser-ece29da7.js */ "./node_modules/@esri/calcite-components/dist/esm/browser-ece29da7.js");
/* harmony import */ var _dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dom-ed00a585.js */ "./node_modules/@esri/calcite-components/dist/esm/dom-ed00a585.js");
/* harmony import */ var _guid_21fecfa4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./guid-21fecfa4.js */ "./node_modules/@esri/calcite-components/dist/esm/guid-21fecfa4.js");
/* harmony import */ var _resources_cf82388c_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./resources-cf82388c.js */ "./node_modules/@esri/calcite-components/dist/esm/resources-cf82388c.js");
/* harmony import */ var _key_61f82ddb_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./key-61f82ddb.js */ "./node_modules/@esri/calcite-components/dist/esm/key-61f82ddb.js");
/* harmony import */ var _observers_71d332db_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./observers-71d332db.js */ "./node_modules/@esri/calcite-components/dist/esm/observers-71d332db.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */











const CSS = {
  bordered: "bordered",
  zebra: "zebra",
  selectionArea: "selection-area",
  paginationArea: "pagination-area",
  container: "container",
  tableContainer: "table-container",
  tableFixed: "table--fixed",
  assistiveText: "assistive-text",
  selectionActions: "selection-actions",
};
const SLOTS = {
  selectionActions: "selection-actions",
  tableHeader: "table-header",
  tableFooter: "table-footer",
};

const tableCss = ":host([scale=s]){--calcite-internal-table-cell-padding:0.25rem;--calcite-internal-table-cell-font-size:var(--calcite-font-size--2);--calcite-internal-table-cell-font-size-secondary:var(--calcite-font-size--3)}:host([scale=m]){--calcite-internal-table-cell-padding:0.5rem;--calcite-internal-table-cell-font-size:var(--calcite-font-size--1);--calcite-internal-table-cell-font-size-secondary:var(--calcite-font-size--2)}:host([scale=l]){--calcite-internal-table-cell-padding:1rem;--calcite-internal-table-cell-font-size:var(--calcite-font-size-0);--calcite-internal-table-cell-font-size-secondary:var(--calcite-font-size--1)}:host{display:table}.container{max-inline-size:100vw;inline-size:100%}.table-container{overflow-x:auto;white-space:nowrap}.table-container:not(.bordered){border-block-end:1px solid var(--calcite-color-border-3)}.assistive-text{position:absolute;inline-size:1px;block-size:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}table{inline-size:100%;border-collapse:collapse;overflow-x:scroll;border-block-start:1px solid var(--calcite-color-border-3);border-inline-start:1px solid var(--calcite-color-border-3);border-block-end:1px solid var(--calcite-color-border-3)}tbody{border-block-end:1px solid var(--calcite-color-border-3)}.table--fixed{table-layout:fixed}.bordered ::slotted(calcite-table-row){--calcite-table-row-border-color:var(--calcite-color-border-3)}.zebra ::slotted(calcite-table-row:nth-child(2n+1)){--calcite-table-row-background:var(--calcite-color-foreground-2)}.selection-actions{display:flex;flex-direction:row;margin-inline-start:auto}.selection-area{display:flex;flex-direction:row;align-items:center;padding-block:var(--calcite-internal-table-cell-padding)}.selection-area calcite-chip:last-of-type{margin-inline-end:0.5rem}.selection-area calcite-chip:last-of-type:not(:first-of-type){margin-inline-start:0.5rem}.selection-area calcite-button{margin-inline-end:1rem}.pagination-area{display:flex;inline-size:100%;flex-direction:row;justify-content:center;padding-block:var(--calcite-internal-table-cell-padding)}calcite-pagination{flex:1;justify-content:center}:host([hidden]){display:none}[hidden]{display:none}";

const Table = class {
  constructor(hostRef) {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteTableSelect = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteTableSelect", 6);
    this.calciteTablePageChange = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteTablePageChange", 6);
    this.calciteInternalTableRowFocusChange = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalTableRowFocusChange", 6);
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.getSlottedRows = (el) => {
      return el
        ?.assignedElements({ flatten: true })
        ?.filter((el) => el?.matches("calcite-table-row"));
    };
    this.updateRows = () => {
      const headRows = this.getSlottedRows(this.tableHeadSlotEl) || [];
      const bodyRows = this.getSlottedRows(this.tableBodySlotEl) || [];
      const footRows = this.getSlottedRows(this.tableFootSlotEl) || [];
      const allRows = [...headRows, ...bodyRows, ...footRows];
      headRows?.forEach((row) => {
        const position = headRows?.indexOf(row);
        row.rowType = "head";
        row.positionSection = position;
        row.positionSectionLocalized = this.localizeNumber((position + 1).toString());
      });
      bodyRows?.forEach((row) => {
        const position = bodyRows?.indexOf(row);
        row.rowType = "body";
        row.positionSection = position;
        row.positionSectionLocalized = this.localizeNumber((position + 1).toString());
      });
      footRows?.forEach((row) => {
        const position = footRows?.indexOf(row);
        row.rowType = "foot";
        row.positionSection = position;
        row.positionSectionLocalized = this.localizeNumber((position + 1).toString());
      });
      allRows?.forEach((row) => {
        row.selectionMode = this.selectionMode;
        row.bodyRowCount = bodyRows?.length;
        row.positionAll = allRows?.indexOf(row);
        row.numbered = this.numbered;
        row.scale = this.scale;
        row.readCellContentsToAT = this.readCellContentsToAT;
      });
      const colCount = headRows[0]?.cellCount || headRows[0]?.querySelectorAll("calcite-table-header")?.length;
      this.colCount = colCount;
      this.headRows = headRows;
      this.bodyRows = bodyRows;
      this.footRows = footRows;
      this.allRows = allRows;
      this.updateSelectedItems();
      this.paginateRows();
    };
    this.handlePaginationChange = () => {
      const requestedItem = this.paginationEl?.startItem;
      this.pageStartRow = requestedItem || 1;
      this.calciteTablePageChange.emit();
      this.updateRows();
    };
    this.paginateRows = () => {
      this.bodyRows?.forEach((row) => {
        const rowPos = row.positionSection + 1;
        const inView = rowPos >= this.pageStartRow && rowPos < this.pageStartRow + this.pageSize;
        row.hidden = this.pageSize > 0 && !inView && !this.footRows.includes(row);
      });
    };
    this.updateSelectedItems = (emit) => {
      const selectedItems = this.bodyRows?.filter((el) => el.selected);
      this.selectedItems = selectedItems;
      this.selectedCount = selectedItems?.length;
      this.allRows?.forEach((row) => {
        row.selectedRowCount = this.selectedCount;
        row.selectedRowCountLocalized = this.localizeNumber(this.selectedCount);
      });
      if (emit) {
        this.calciteTableSelect.emit();
      }
    };
    this.handleDeselectAllRows = () => {
      this.bodyRows?.forEach((row) => {
        row.selected = false;
      });
      this.updateSelectedItems(true);
    };
    this.setSelectedItems = (elToMatch) => {
      this.bodyRows?.forEach((el) => {
        if (elToMatch?.rowType === "head") {
          el.selected = this.selectedCount !== this.bodyRows?.length;
        }
        else {
          el.selected =
            elToMatch === el ? !el.selected : this.selectionMode === "multiple" ? el.selected : false;
        }
      });
      this.updateSelectedItems(true);
    };
    this.localizeNumber = (value) => {
      _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.n.numberFormatOptions = {
        locale: this.effectiveLocale,
        numberingSystem: this.numberingSystem,
        useGrouping: this.groupSeparator,
      };
      return _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.n.localize(value.toString());
    };
    this.bordered = false;
    this.caption = undefined;
    this.groupSeparator = false;
    this.layout = "auto";
    this.numbered = false;
    this.numberingSystem = undefined;
    this.pageSize = 0;
    this.scale = "m";
    this.selectionMode = "none";
    this.zebra = false;
    this.selectedItems = [];
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.colCount = 0;
    this.pageStartRow = 1;
    this.selectedCount = 0;
    this.readCellContentsToAT = undefined;
    this.defaultMessages = undefined;
    this.effectiveLocale = "";
  }
  handleNumberedChange() {
    this.updateRows();
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  effectiveLocaleChange() {
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_2__.u)(this, this.effectiveLocale);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  async componentWillLoad() {
    (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_1__.s)(this);
    await (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_2__.s)(this);
    this.readCellContentsToAT = /safari/i.test((0,_browser_ece29da7_js__WEBPACK_IMPORTED_MODULE_4__.g)());
    this.updateRows();
  }
  componentDidLoad() {
    (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_1__.a)(this);
  }
  connectedCallback() {
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
  }
  disconnectedCallback() {
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  calciteChipSelectListener(event) {
    if (event.composedPath().includes(this.el)) {
      this.setSelectedItems(event.target);
    }
  }
  calciteInternalTableRowFocusEvent(event) {
    const cellPosition = event["detail"].cellPosition;
    const rowPos = event["detail"].rowPosition;
    const destination = event["detail"].destination;
    const lastCell = event["detail"].lastCell;
    const visibleBody = this.bodyRows?.filter((row) => !row.hidden);
    const visibleAll = this.allRows?.filter((row) => !row.hidden);
    const lastHeadRow = this.headRows[this.headRows.length - 1]?.positionAll;
    const firstBodyRow = visibleBody[0]?.positionAll;
    const lastBodyRow = visibleBody[visibleBody.length - 1]?.positionAll;
    const firstFootRow = this.footRows[0]?.positionAll;
    const lastTableRow = visibleAll[visibleAll.length - 1]?.positionAll;
    const leavingHeader = destination === "next" && rowPos === lastHeadRow;
    const leavingFooter = destination === "previous" && rowPos === firstFootRow;
    const enteringHeader = destination === "previous" && rowPos === firstBodyRow;
    const enteringFooter = destination === "next" && rowPos === lastBodyRow;
    let rowPosition;
    switch (destination) {
      case "first":
        rowPosition = 0;
        break;
      case "last":
        rowPosition = lastTableRow;
        break;
      case "next":
        rowPosition = leavingHeader ? firstBodyRow : enteringFooter ? firstFootRow : rowPos + 1;
        break;
      case "previous":
        rowPosition = leavingFooter ? lastBodyRow : enteringHeader ? lastHeadRow : rowPos - 1;
        break;
    }
    const destinationCount = this.allRows?.find((row) => row.positionAll === rowPosition)?.cellCount;
    const adjustedPos = cellPosition > destinationCount ? destinationCount : cellPosition;
    if (rowPosition !== undefined) {
      this.calciteInternalTableRowFocusChange.emit({
        cellPosition: adjustedPos,
        rowPosition,
        destination,
        lastCell,
      });
    }
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderSelectionArea() {
    const outOfViewCount = this.selectedItems?.filter((el) => el.hidden)?.length;
    const localizedOutOfView = this.localizeNumber(outOfViewCount?.toString());
    const localizedSelectedCount = this.localizeNumber(this.selectedCount?.toString());
    const selectionText = `${localizedSelectedCount} ${this.messages.selected}`;
    const outOfView = `${localizedOutOfView} ${this.messages.hiddenSelected}`;
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS.selectionArea }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-chip", { kind: this.selectedCount > 0 ? "brand" : "neutral", scale: this.scale, value: selectionText }, selectionText), outOfViewCount > 0 && ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-chip", { icon: "hide-empty", scale: this.scale, title: outOfView, value: outOfView }, localizedOutOfView)), this.selectedCount > 0 && ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { "icon-start": "x", kind: "neutral", onClick: this.handleDeselectAllRows, round: true, scale: this.scale, title: `${this.messages.clear} ${selectionText} ${this.messages.row}` }, this.messages.clear)), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS.selectionActions }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.selectionActions }))));
  }
  renderPaginationArea() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS.paginationArea }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-pagination", { groupSeparator: this.groupSeparator, numberingSystem: this.numberingSystem, onCalcitePaginationChange: this.handlePaginationChange, pageSize: this.pageSize, scale: this.scale, startItem: 1, totalItems: this.bodyRows?.length,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: (el) => (this.paginationEl = el) })));
  }
  renderTHead() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("thead", null, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.tableHeader, onSlotchange: this.updateRows, ref: (el) => (this.tableHeadSlotEl = el) })));
  }
  renderTBody() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("tbody", null, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { onSlotchange: this.updateRows, ref: (el) => (this.tableBodySlotEl = el) })));
  }
  renderTFoot() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("tfoot", null, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.tableFooter, onSlotchange: this.updateRows, ref: (el) => (this.tableFootSlotEl = el) })));
  }
  render() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS.container }, this.selectionMode !== "none" && this.renderSelectionArea(), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
        [CSS.bordered]: this.bordered,
        [CSS.zebra]: this.zebra,
        [CSS.tableContainer]: true,
      } }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("table", { "aria-colcount": this.colCount, "aria-multiselectable": this.selectionMode === "multiple", "aria-readonly": true, "aria-rowcount": this.allRows?.length, class: { [CSS.tableFixed]: this.layout === "fixed" }, role: "grid" }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("caption", { class: CSS.assistiveText }, this.caption), this.renderTHead(), this.renderTBody(), this.renderTFoot())), this.pageSize > 0 && this.renderPaginationArea())));
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "groupSeparator": ["handleNumberedChange"],
    "numbered": ["handleNumberedChange"],
    "numberingSystem": ["handleNumberedChange"],
    "pageSize": ["handleNumberedChange"],
    "scale": ["handleNumberedChange"],
    "selectionMode": ["handleNumberedChange"],
    "messageOverrides": ["onMessagesChange"],
    "effectiveLocale": ["effectiveLocaleChange"]
  }; }
};
Table.style = tableCss;



//# sourceMappingURL=calcite-table.entry.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/loadable-b17396e0.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/loadable-b17396e0.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ setComponentLoaded),
/* harmony export */   b: () => (/* binding */ componentLoaded),
/* harmony export */   c: () => (/* binding */ componentFocusable),
/* harmony export */   s: () => (/* binding */ setUpLoadableComponent)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */


const resolveMap = new WeakMap();
const promiseMap = new WeakMap();
/**
 * This helper util sets up the component for the ability to know when the component has been loaded.
 *
 * This should be used in the `componentWillLoad` lifecycle hook.
 *
 * ```
 * componentWillLoad(): void {
 *   setUpLoadableComponent(this);
 * }
 * ```
 *
 * @param component
 */
function setUpLoadableComponent(component) {
  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));
}
/**
 * This helper util lets the loadable component know that it is now loaded.
 *
 * This should be used in the `componentDidLoad` lifecycle hook.
 *
 * ```
 * componentDidLoad(): void {
 *   setComponentLoaded(this);
 * }
 * ```
 *
 * @param component
 */
function setComponentLoaded(component) {
  resolveMap.get(component)();
}
/**
 * This helper util can be used to ensure a component has been loaded (The "componentDidLoad" Stencil lifecycle method has been called).
 *
 * Requires requires `LoadableComponent` to be implemented.
 *
 * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.
 *
 * ```
 * async myMethod(): Promise<void> {
 *   await componentLoaded(this);
 * }
 * ```
 *
 * @param component
 * @returns Promise<void>
 */
function componentLoaded(component) {
  return promiseMap.get(component);
}
/**
 * This helper util can be used to ensuring the component is loaded and rendered by the browser (The "componentDidLoad" Stencil lifecycle method has been called and any internal elements are focusable).
 *
 * Requires requires `LoadableComponent` to be implemented.
 *
 * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.
 *
 * ```
 * async setFocus(): Promise<void> {
 *   await componentFocusable(this);
 *   this.internalElement?.focus();
 * }
 * ```
 *
 * @param component
 * @returns Promise<void>
 */
async function componentFocusable(component) {
  await componentLoaded(component);
  (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.f)(component);
  return new Promise((resolve) => requestAnimationFrame(() => resolve()));
}



//# sourceMappingURL=loadable-b17396e0.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ connectMessages),
/* harmony export */   d: () => (/* binding */ disconnectMessages),
/* harmony export */   s: () => (/* binding */ setUpMessages),
/* harmony export */   u: () => (/* binding */ updateMessages)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale-6e783cf0.js */ "./node_modules/@esri/calcite-components/dist/esm/locale-6e783cf0.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



const componentLangToMessageBundleCache = {};
async function getMessageBundle(lang, component) {
  const key = `${component}_${lang}`;
  if (componentLangToMessageBundleCache[key]) {
    return componentLangToMessageBundleCache[key];
  }
  componentLangToMessageBundleCache[key] = fetch((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.a)(`./assets/${component}/t9n/messages_${lang}.json`))
    .then((resp) => {
    if (!resp.ok) {
      throwMessageFetchError();
    }
    return resp.json();
  })
    .catch(() => throwMessageFetchError());
  return componentLangToMessageBundleCache[key];
}
function throwMessageFetchError() {
  throw new Error("could not fetch component message bundle");
}
function mergeMessages(component) {
  component.messages = {
    ...component.defaultMessages,
    ...component.messageOverrides,
  };
}
/**
 * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.
 *
 * @param component
 */
async function setUpMessages(component) {
  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);
  mergeMessages(component);
}
async function fetchMessages(component, lang) {
  const { el } = component;
  const tag = el.tagName.toLowerCase();
  const componentName = tag.replace("calcite-", "");
  return getMessageBundle((0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_1__.g)(lang, "t9n"), componentName);
}
/**
 * This utility must be set up for the component to update its default message bundle if the locale changes.
 *
 * It can be set up in **either** of the following ways:
 *
 * 1. called from `LocalizedComponent`'s `onLocaleChange` method or
 * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop
 *
 * @param component
 * @param lang
 */
async function updateMessages(component, lang) {
  component.defaultMessages = await fetchMessages(component, lang);
  mergeMessages(component);
}
/**
 * This utility sets up internals for messages support.
 *
 * It needs to be called in `connectedCallback`
 *
 * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.
 *
 * @param component
 */
function connectMessages(component) {
  component.onMessagesChange = defaultOnMessagesChange;
}
/**
 * This utility tears down internals for messages support.
 *
 * It needs to be called in `disconnectedCallback`
 *
 * @param component
 */
function disconnectMessages(component) {
  component.onMessagesChange = undefined;
}
function defaultOnMessagesChange() {
  mergeMessages(this);
}



//# sourceMappingURL=t9n-0bcdca54.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,