"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-589c5d"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.sl-42ea0832.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.sl-42ea0832.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   rfxArgsHelpTexts: () => (/* binding */ rfxArgsHelpTexts)
/* harmony export */ });
const rfxArgsHelpTexts = {
	"@@Abs_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Abs_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Abs_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Abs_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Abs_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Abs_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Abs_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Abs_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Abs_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Abs_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Abs_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Abs_Raster_tag0@@": "Vhodni raster, za katerega je treba izračunati absolutne vrednosti.",
	"@@ACos_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@ACos_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@ACos_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@ACos_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@ACos_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@ACos_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@ACos_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@ACos_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@ACos_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@ACos_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@ACos_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@ACos_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednost obratnega kosinusa.",
	"@@ACosH_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@ACosH_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@ACosH_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@ACosH_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@ACosH_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@ACosH_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@ACosH_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@ACosH_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@ACosH_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@ACosH_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@ACosH_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@ACosH_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednost obratnega hiperboličnega kosinusa.",
	"@@Apparent-Reflectance_Albedo_tag0@@": "Rezultate očitne odbojnosti je mogoče izraziti tudi kot albedo, tj. odstotek razpoložljive energije, ki se odbija od površine planeta. Podatke albeda znanstveni uporabniki uporabljajo za kompleksno modeliranje in tehnično daljinsko zaznavanje.",
	"@@Apparent-Reflectance_Albedo_tag1@@": "Nepotrjeno--Funkcija povrne vrednosti očitne odbojnosti. To je privzeta vrednost.",
	"@@Apparent-Reflectance_Albedo_tag2@@": "Potrjeno--Funkcija povrne vrednosti 32-bitne plavajoče vejice, ki so najbolj običajno v razponu od 0,0 do 1,0. Če je izbrana ta možnost, se izsek podatkov ne izvede.",
	"@@Apparent-Reflectance_Albedo_tag3@@": "Ker so izhodni podatki za albedo plavajoča vejica, morate izrecno določiti prednostni <strong>tip izhodnih pikslov</strong> na plavajočo 32-bitno ali dvojno 64-bitno. Parameter <strong>tipa izhodnih pikslov</strong> najdete v zavihku <strong>Splošno</strong> v rastrski funkciji <strong>očitne odbojnosti</strong>. Če <strong>tip izhodnega piksla</strong> za možnost <strong>albedo</strong> ni pravilno nastavljen, bodo nastale vrednosti neveljavne ali se jim dodeli vrednost 0.",
	"@@Apparent-Reflectance_Offset_tag0@@": "Vaša spremenjena vrednost albeda lahko ima izbirno vrednost odmika:",
	"@@Apparent-Reflectance_Offset_tag1@@": "Za 16-bitne tipe nepodpisanih podatkov je privzeti odmik merila 5000.",
	"@@Apparent-Reflectance_Offset_tag2@@": "Za 8-bitne tipe nepodpisanih podatkov je privzeti odmik merila 0.",
	"@@Apparent-Reflectance_Offset_tag3@@": "Če je rezultat albedo, se spreminjanje merila ne uporabi.",
	"@@Apparent-Reflectance_Radiance-Gains-and-Bias-Values-per-Band_tag0@@": "To vrednost lahko nastavite ali urejate ročno za vsak pas. Ustrezne informacije je mogoče prebrati iz metapodatkov vhodnega rastrskega izdelka.",
	"@@Apparent-Reflectance_Raster_tag0@@": "Rastrski izdelek, na katerem bo uporabljena očitna odbojnost.",
	"@@Apparent-Reflectance_Scale-Factor_tag0@@": "Vašo izhodno vrednost očitne odbojnosti lahko izrazite kot celo število. Faktor spreminjanja merila se za pretvorbo vseh vrednosti plavajoče vejice v vrednost celega števila pomnoži z albedom.",
	"@@Apparent-Reflectance_Scale-Factor_tag1@@": "Če je faktor spremembe merila ${0} ali pa ni določen, bo uporabljena privzeta sprememba merila, odvisno od tipa pikslov vhodnih podatkov:",
	"@@Apparent-Reflectance_Scale-Factor_tag2@@": "Za 16-bitne tipe nepodpisanih podatkov je privzeti faktor merila 50.000.",
	"@@Apparent-Reflectance_Scale-Factor_tag3@@": "Za 8-bitne tipe nepodpisanih podatkov je privzeti faktor merila 255.",
	"@@Apparent-Reflectance_Scale-Factor_tag4@@": "Faktor spremembe merila se uporabi vedno, ko je rezultat očitna odbojnost. Če je rezultat albedo, se spreminjanje merila ne uporabi.",
	"@@Apparent-Reflectance_Sun-Elevation_tag0@@": "To je vrednost višine sonca, izražena v stopinjah. Če je iz metapodatkov mogoče prebrati ustrezne informacije, to izpolni sistem. To vrednost lahko nastavite ali urejate ročno.",
	"@@ArgStatistics_Max_tag0@@": "Največja nastavljena vrednost je najvišja vrednost, ki je enaka kot konec trajanja ali manjša.",
	"@@ArgStatistics_Max_tag1@@": "Ta vhodna vrednost je uporabna samo, če je metoda trajanje.",
	"@@ArgStatistics_Method_tag0@@": "Izberite statistično metodo, da izračunate:",
	"@@ArgStatistics_Method_tag1@@": "Arg Max--Argument maksimuma, ki povrne ${Band index}, za katerega dani piksel doseže najmanjšo vrednost vseh pasov. Vsem rastrskim pasovom vsakega vhodnega rastra se dodeli prirastni indeksni pas na osnovi 0, ki ga najprej razvrsti indeks vhodnega rastra, nato pa relativni vrstni red pasov v posameznem vhodnem rastru.",
	"@@ArgStatistics_Method_tag2@@": "Arg Median--Argument mediane, ki povrne ${Band index}, za katerega dani piksel doseže vrednost mediane vrednosti vseh pasov.",
	"@@ArgStatistics_Method_tag3@@": "Arg Min--Argument minimuma, ki povrne ${Band index}, za katerega dani piksel doseže najmanjšo vrednost vseh pasov.",
	"@@ArgStatistics_Method_tag4@@": "Trajanje – Metoda trajanja poišče najdaljše zaporedne elemente v polju, kjer je vrednost vsakega elementa večja ali enaka<strong>Min.</strong> in manjša ali enaka <strong>Maks.</strong>, in mu nato povrne dolžino.",
	"@@ArgStatistics_Min_tag0@@": "Najmanjša nastavljena vrednost je najnižja vrednost, ki je enaka kot konec trajanja ali večja.",
	"@@ArgStatistics_Min_tag1@@": "Ta vhodna vrednost je uporabna samo, če je metoda trajanje.",
	"@@ArgStatistics_Rasters_tag0@@": "Vhodni raster, na katerem boste izvedli različne statistične metode.",
	"@@ArgStatistics_Undefined-Class_tag0@@": "Vnos konstante, ki se povrne, ko ni mogoče doseči določene največje, najmanjše ali srednje vrednosti. Najbolj običajen scenarij je, ko se med vrednostmi vseh pasov največja ali najmanjša vrednost pojavi več kot enkrat. Privzeta vrednost nedoločene konstante je 100.",
	"@@ArgStatistics_Undefined-Class_tag1@@": "Nedoločen razred se uporablja samo, če je metoda <strong>ArgMax</strong>, <strong>ArgMin</strong> ali <strong>ArgMedian</strong>.",
	"@@ArgStatistics_ignorenodata_tag0@@": "Označuje, ali se v statističnem izračunu prezre vrednosti brez podatkov",
	"@@ArgStatistics_ignorenodata_tag1@@": "Obkljukano -- Analiza bo vključevala vse veljavne piksle v vhodnih rastrih in prezrla vse piksle brez podatkov.",
	"@@ArgStatistics_ignorenodata_tag2@@": "Odkljukano -- Rezultat analize bo brez podatkov, če v vhodnih rastrih obstajajo vrednosti brez podatkov za piksle. To je privzeta vrednost.",
	"@@Arithmetic_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Arithmetic_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Arithmetic_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Arithmetic_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Arithmetic_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Arithmetic_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Arithmetic_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Arithmetic_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Arithmetic_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Arithmetic_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Arithmetic_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Arithmetic_Operation_tag0@@": "Izvedba aritmetične operacije med dvema vhodnima rastroma.",
	"@@Arithmetic_Operation_tag1@@": "Možnosti so naslednje:",
	"@@Arithmetic_Operation_tag2@@": "<strong>Deljenje</strong> – Prikaže deljiv rezultat med ustreznimi vrednostmi pikslov za vsak raster.",
	"@@Arithmetic_Operation_tag4@@": "<strong>Odštevanje</strong>--Prikaže razliko med ustreznimi vrednostmi pikslov za vsak raster. To se lahko uporabi za izračun zaznavanja sprememb.",
	"@@Arithmetic_Operation_tag6@@": "<strong>Način</strong>--Prikaže vrednost pikslov za vse prekrivajoče se piksle, ki se najpogosteje pojavi. Če je v rastru na primer šest pasov, se bo prekrivalo šest pikslov. Za vrednosti 4, 5, 6, 4, 7, 9 je vrednost načina 4.",
	"@@Arithmetic_Operation_tag8@@": "<strong>Množenje</strong>--Prikaže zmnožek ustreznih vrednosti pikslov za vsak raster. To se lahko uporabi za izvedbo stroškovnih funkcij.",
	"@@Arithmetic_Operation_tag10@@": "<strong>Seštevanje</strong>--Prikaže seštevek vseh ustreznih vrednosti pikslov za vsak raster.",
	"@@Arithmetic_Operation_tag12@@": "<strong>Potenca</strong>--Prikaže zmnožek ustreznih vrednosti pikslov, povečanih na potenco vhodnega rastra ali skalarja.",
	"@@Arithmetic_Raster_tag0@@": "Prvi sklop podatkov vhodnega rastra.",
	"@@Arithmetic_Raster2_tag0@@": "Drugi sklop podatkov vhodnega rastra.",
	"@@ASin_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@ASin_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@ASin_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@ASin_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@ASin_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@ASin_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@ASin_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@ASin_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@ASin_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@ASin_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@ASin_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@ASin_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednosti obratnega sinusa.",
	"@@ASinH_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@ASinH_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@ASinH_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@ASinH_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@ASinH_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@ASinH_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@ASinH_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@ASinH_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@ASinH_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@ASinH_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@ASinH_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@ASinH_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednosti obratnega hiperboličnega sinusa.",
	"@@Aspect_Raster_tag0@@": "Vhod DMV se uporablja za izpeljavo vidika sklopa podatkov.",
	"@@Aspect-Slope_Raster_tag0@@": "Vhod DMV.",
	"@@Aspect-Slope_Z-Factor_tag0@@": "Faktor spremembe merila se uporablja za pretvarjanje vrednosti višin za naslednja dva namena:",
	"@@Aspect-Slope_Z-Factor_tag1@@": "Pretvarjanje višinskih enot (kot so metri ali čevlji) v vodoravne koordinatne enote sklopa podatkov, ki so lahko čevlji, metri ali stopinje.",
	"@@Aspect-Slope_Z-Factor_tag2@@": "Dodajanje navpičnega povečevanja za vizualni učinek.",
	"@@ATan_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@ATan_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@ATan_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@ATan_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@ATan_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@ATan_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@ATan_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@ATan_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@ATan_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@ATan_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@ATan_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@ATan_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednosti obratnega tangensa.",
	"@@ATan2_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@ATan2_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@ATan2_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@ATan2_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@ATan2_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@ATan2_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@ATan2_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@ATan2_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@ATan2_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@ATan2_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@ATan2_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@ATan2_Raster_tag0@@": "Vhod, ki določa števec ali vrednost y za uporabo pri izračunu obratnega tangensa.",
	"@@ATan2_Raster2_tag0@@": "Vhod, ki določa imenovalec ali vrednost x za uporabo pri izračunu obratnega tangensa.",
	"@@ATanH_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@ATanH_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@ATanH_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@ATanH_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@ATanH_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@ATanH_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@ATanH_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@ATanH_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@ATanH_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@ATanH_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@ATanH_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@ATanH_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednosti obratnega hiperboličnega tangensa.",
	"@@Attribute-Table_Raster_tag0@@": "Vhodni raster.",
	"@@Attribute-Table_Table-Type_tag0@@": "Vnos v vhodno atributno tabelo je mogoč z uporabo <strong>ročnega</strong> načina, kjer vsaki vrednosti dodelite ime razreda in barvo, ali s sklicevanjem na obstoječo tabelo iz datoteke ${.dbf}.",
	"@@Band-Arithmetic_Band-Indexes_tag0@@": "Določite aritmetično formulo pasu, če izberete <strong>Uporabniško določeno</strong> za svojo <strong>metodo</strong>.",
	"@@Band-Arithmetic_Band-Indexes_tag5@@": "Če izberete predhodno določen indeks za vašo <strong>metodo</strong>, določite ustrezne pasove vašega sklopa podatkov vhodnega rastra, ki ustrezajo indeksu.",
	"@@Band-Arithmetic_Method_tag0@@": "Vrsta aritmetičnega algoritma pasu, ki ga želite namestiti. Določite lahko algoritem po meri ali izberete predhodno določen indeks.",
	"@@Band-Arithmetic_Method_tag1@@": "<strong>BAI</strong>--Indeks območja zgorevanja",
	"@@Band-Arithmetic_Method_tag2@@": "<strong>CIg</strong>--Klorofilni indeks - zeleni",
	"@@Band-Arithmetic_Method_tag3@@": "<strong>CIre</strong>--Klorofilni indeks - rdeči rob",
	"@@Band-Arithmetic_Method_tag4@@": "<strong>Glineni materiali</strong>--Razmerje glinenih materialov",
	"@@Band-Arithmetic_Method_tag5@@": "<strong>EVI</strong>--Izboljšan vegetacijski indeks",
	"@@Band-Arithmetic_Method_tag6@@": "<strong>Kovinski materiali</strong>--Razmerje kovinskih materialov",
	"@@Band-Arithmetic_Method_tag7@@": "<strong>GEMI</strong>--Indeks globalnega spremljanja okolja",
	"@@Band-Arithmetic_Method_tag8@@": "<strong>GNDVI</strong>--Vegetacijski indeks normalizirane razlike",
	"@@Band-Arithmetic_Method_tag9@@": "<strong>GVI (Landsat TM)</strong>--Zeleni vegetacijski indeks Landsat TM",
	"@@Band-Arithmetic_Method_tag10@@": "<strong>Železov oksid</strong>--Razmerje železovega oksida",
	"@@Band-Arithmetic_Method_tag11@@": "<strong>MNDWI</strong>--Vodni indeks spremenjene normalizirane razlike",
	"@@Band-Arithmetic_Method_tag12@@": "<strong>MTVI2</strong>--Spremenjen vegetacijski indeks glede na triangulacijo (druga ponovitev)",
	"@@Band-Arithmetic_Method_tag13@@": "<strong>Spremenjen SAVI</strong>--Spremenjen vegetacijski indeks glede na talni tip",
	"@@Band-Arithmetic_Method_tag14@@": "<strong>NBR</strong>--Normalirani indeks zgorevanja",
	"@@Band-Arithmetic_Method_tag15@@": "<strong>NDBI</strong>--Indeks nakopičenja normalizirane razlike",
	"@@Band-Arithmetic_Method_tag16@@": "<strong>NDMI</strong>--Indeks vlage normalizirane razlike",
	"@@Band-Arithmetic_Method_tag17@@": "<strong>NDSI</strong>--Snežni indeks normalizirane razlike",
	"@@Band-Arithmetic_Method_tag18@@": "<strong>NDVI</strong>--Vegetacijski indeks normalizirane razlike",
	"@@Band-Arithmetic_Method_tag19@@": "<strong>NDVIre</strong>--Vegetacijski indeks normalizirane razlike rdečega roba",
	"@@Band-Arithmetic_Method_tag20@@": "<strong>NDWI</strong>--Vodni indeks normalizirane razlike",
	"@@Band-Arithmetic_Method_tag21@@": "<strong>PVI</strong>--Vegetacijski indeks pravokotne razdalje",
	"@@Band-Arithmetic_Method_tag22@@": "<strong>RTVICore</strong>--Vegetacijski indeks glede na triangulacijo rdečega roba",
	"@@Band-Arithmetic_Method_tag23@@": "<strong>SAVI</strong>--Vegetacijski indeks glede na talni tip",
	"@@Band-Arithmetic_Method_tag24@@": "<strong>SR</strong>--Preprosto razmerje",
	"@@Band-Arithmetic_Method_tag25@@": "<strong>SRre</strong>--Preprosto razmerje rdečega roba",
	"@@Band-Arithmetic_Method_tag26@@": "<strong>Sultanova formula</strong>--Sultanova formula",
	"@@Band-Arithmetic_Method_tag27@@": "<strong>Transformiran SAVI</strong>--Transformiran tlem prilagojeni vegetacijski indeks",
	"@@Band-Arithmetic_Method_tag28@@": "<strong>Uporabniško določeno</strong>--Omogoča določanje aritmetičnega izraza pasu.",
	"@@Band-Arithmetic_Method_tag29@@": "<strong>VARI</strong>--Viden atmosfersko odporen indeks",
	"@@Band-Arithmetic_Method_tag30@@": "<strong>WNDWI</strong>--Vodni indeks ponderirane normalizirane razlike",
	"@@Band-Arithmetic_Raster_tag0@@": "Vhodni raster.",
	"@@Binary-Thresholding_Raster_tag0@@": "Vhodni raster.",
	"@@Bitwise-And_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Bitwise-And_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Bitwise-And_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Bitwise-And_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Bitwise-And_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Bitwise-And_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Bitwise-And_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Bitwise-And_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-And_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Bitwise-And_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-And_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Bitwise-And_Raster_tag0@@": "Prvi vhod za uporabo v tej bitni operaciji.",
	"@@Bitwise-And_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Bitwise-And_Raster2_tag0@@": "Drugi vhod za uporabo v tej bitni operaciji.",
	"@@Bitwise-And_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Bitwise-Left-Shift_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Bitwise-Left-Shift_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Left-Shift_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Bitwise-Left-Shift_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Left-Shift_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Bitwise-Left-Shift_Raster_tag0@@": "Vhod, na katerem se izvaja premik.",
	"@@Bitwise-Left-Shift_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Bitwise-Left-Shift_Raster2_tag0@@": "Vhod, ki določa število položajev za premik bitov.",
	"@@Bitwise-Left-Shift_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Bitwise-Not_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Bitwise-Not_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Bitwise-Not_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Bitwise-Not_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Bitwise-Not_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Bitwise-Not_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Bitwise-Not_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Bitwise-Not_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Not_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Bitwise-Not_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Not_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Bitwise-Not_Raster_tag0@@": "Vhodni raste, na kateri se izvede operacija Bitwise Not (komplement).",
	"@@Bitwise-Or_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Bitwise-Or_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Bitwise-Or_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Bitwise-Or_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Bitwise-Or_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Bitwise-Or_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Bitwise-Or_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Bitwise-Or_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Or_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Bitwise-Or_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Or_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Bitwise-Or_Raster_tag0@@": "Prvi vhod za uporabo v tej bitni operaciji.",
	"@@Bitwise-Or_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Bitwise-Or_Raster2_tag0@@": "Drugi vhod za uporabo v tej bitni operaciji.",
	"@@Bitwise-Or_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Bitwise-Right-Shift_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Bitwise-Right-Shift_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Right-Shift_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Bitwise-Right-Shift_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Right-Shift_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Bitwise-Right-Shift_Raster_tag0@@": "Vhod, na katerem se izvaja premik.",
	"@@Bitwise-Right-Shift_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Bitwise-Right-Shift_Raster2_tag0@@": "Vhod, ki določa število položajev za premik bitov.",
	"@@Bitwise-Right-Shift_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Bitwise-Xor_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Bitwise-Xor_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Bitwise-Xor_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Bitwise-Xor_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Bitwise-Xor_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Bitwise-Xor_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Bitwise-Xor_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Bitwise-Xor_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Xor_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Bitwise-Xor_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Bitwise-Xor_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Bitwise-Xor_Raster_tag0@@": "Prvi vhod za uporabo v tej bitni operaciji.",
	"@@Bitwise-Xor_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Bitwise-Xor_Raster2_tag0@@": "Drugi vhod za uporabo v tej bitni operaciji.",
	"@@Bitwise-Xor_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Boolean-and_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Boolean-and_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Boolean-and_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Boolean-and_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Boolean-and_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Boolean-and_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Boolean-and_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Boolean-and_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Boolean-and_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Boolean-and_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Boolean-and_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Boolean-and_Raster_tag0@@": "Prvi vhod za uporabo v tej Boolovi operaciji.",
	"@@Boolean-and_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Boolean-and_Raster2_tag0@@": "Drugi vhod za uporabo v tej Boolovi operaciji.",
	"@@Boolean-and_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Boolean-Not_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Boolean-Not_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Boolean-Not_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Boolean-Not_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Boolean-Not_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Boolean-Not_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Boolean-Not_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Boolean-Not_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Boolean-Not_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Boolean-Not_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Boolean-Not_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Boolean-Not_Raster_tag0@@": "Prvi vhod za uporabo v tej Boolovi operaciji.",
	"@@Boolean-Or_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Boolean-Or_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Boolean-Or_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Boolean-Or_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Boolean-Or_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Boolean-Or_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Boolean-Or_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Boolean-Or_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Boolean-Or_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Boolean-Or_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Boolean-Or_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Boolean-Or_Raster_tag0@@": "Prvi vhod za uporabo v tej Boolovi operaciji.",
	"@@Boolean-Or_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Boolean-Or_Raster2_tag0@@": "Drugi vhod za uporabo v tej Boolovi operaciji.",
	"@@Boolean-Or_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Boolean-Xor_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Boolean-Xor_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Boolean-Xor_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Boolean-Xor_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Boolean-Xor_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Boolean-Xor_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Boolean-Xor_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Boolean-Xor_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Boolean-Xor_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Boolean-Xor_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Boolean-Xor_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Boolean-Xor_Raster_tag0@@": "Prvi vhod za uporabo v tej Boolovi operaciji.",
	"@@Boolean-Xor_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Boolean-Xor_Raster2_tag0@@": "Drugi vhod za uporabo v tej Boolovi operaciji.",
	"@@Boolean-Xor_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Buffered_Raster_tag0@@": "Vhodni raster, shranjen v pomnilniku.",
	"@@Calculator_Cellsize-Type_tag0@@": "Velikost celice, uporabljena za ustvarjanje izhodnega rastra.",
	"@@Calculator_Cellsize-Type_tag1@@": "Velikost izhodne celice lahko izberete iz naslednjih možnosti v spustnem seznamu:",
	"@@Calculator_Cellsize-Type_tag2@@": "<strong>Prva vrednost od</strong>--Velikost celice prve rastrske spremenljivke.",
	"@@Calculator_Cellsize-Type_tag4@@": "<strong>Najmanjša vrednost od</strong>--Najmanjša velikost celice vhodnih rastrov.",
	"@@Calculator_Cellsize-Type_tag6@@": "<strong>Največja vrednost od</strong>--Največja velikost celice vhodnih rastrov.",
	"@@Calculator_Cellsize-Type_tag8@@": "<strong>Srednja vrednost od</strong>--Povprečna velikost celice vhodnih rastrov.",
	"@@Calculator_Cellsize-Type_tag10@@": "<strong>Zadnja vrednost od</strong>--Velikost celice zadnje rastrske spremenljivke.",
	"@@Calculator_Cellsize-Type_tag12@@": "Privzeta izbira je <strong>največja vrednost od</strong>.",
	"@@Calculator_Expression_tag0@@": "Za izvajanje prostorske analize na vhodnem rastru sestavite algebrski izraz.",
	"@@Calculator_Expression_tag1@@": "Za sestavljanje izraza lahko dodate vse obstoječe matematične funkcije. Razpoložljivi operatorji so navedeni spodaj.",
	"@@Calculator_Expression_tag2@@": "Aritmetične operacije",
	"@@Calculator_Expression_tag3@@": "Dodajanje: +",
	"@@Calculator_Expression_tag4@@": "Deljenje: /",
	"@@Calculator_Expression_tag5@@": "Modulo: %",
	"@@Calculator_Expression_tag6@@": "Množenje: *",
	"@@Calculator_Expression_tag7@@": "Potenciranje: **",
	"@@Calculator_Expression_tag8@@": "Odštevanje: -",
	"@@Calculator_Expression_tag9@@": "Boolove operacije",
	"@@Calculator_Expression_tag10@@": "Boolov in: &&",
	"@@Calculator_Expression_tag11@@": "Boolov ali: ||",
	"@@Calculator_Expression_tag12@@": "Relacijske operacije",
	"@@Calculator_Expression_tag13@@": "Enako: ==",
	"@@Calculator_Expression_tag14@@": "Večje kot: >",
	"@@Calculator_Expression_tag15@@": "Večje kot ali enako: >=",
	"@@Calculator_Expression_tag16@@": "Manj kot: <",
	"@@Calculator_Expression_tag17@@": "Manjše kot ali enako:<=",
	"@@Calculator_Expression_tag18@@": "Ni enako: !=",
	"@@Calculator_Expression_tag19@@": "Dodatne operacije",
	"@@Calculator_Expression_tag20@@": "Najmanj dva rastra na osnovi posameznega piksla: min(a,b)",
	"@@Calculator_Expression_tag21@@": "Največ dva rastra na osnovi posameznega piksla: maks(a,b)",
	"@@Calculator_Expression_tag22@@": "Tu je nekaj primerov izrazov:",
	"@@Calculator_Expression_tag23@@": "Preprosta pogojna izjava: v rastru (označenim s T) najdite vrednosti višin nad 4000 čevljev in dodelite tem območjem vrednost 1, vsem drugim območjem pa vrednost 0.",
	"@@Calculator_Expression_tag24@@": "Con(T > 4000, 1, 0)",
	"@@Calculator_Expression_tag25@@": "Ugnezdena pogojna izjava: najdite območja, kjer je naklon (označen z b1) manjši od 10 stopinj in je NDVI (označen z b2) nad 0,5, ter jim dodelite vrednost 1. Vsem drugim območjem dodelite vrednost 2, če je naklon nad 10 stopinj in je višina (označena z b3) nad 2500 čevljev. Vsem drugim območjem je dodeljena vrednost 3.",
	"@@Calculator_Expression_tag26@@": "Con((b1 < 10 && b2 > .5, 1, Con(b1 > 10 && b3 > 2500, 2, 3)))",
	"@@Calculator_extenttype_tag0@@": "<p>Izberite obseg, ki bi moral biti uporabljen v izhodnem rastru:</p><ul><li><p>Prvi od -- Uporabite obseg prvega vhodnega rastra za določitev obsega obdelave.</p></li><li>Presek od -- Uporabite obseg prekrivajočih se pikslov za določitev obsega obdelave. To je privzeta vrednost.</li><li>Združitev--Uporabite obseg vseh rastrov za določitev obsega obdelave.</li><li>Zadnja od--Uporabite obseg zadnjega vhodnega rastra za določitev obsega obdelave.</li></ul>",
	"@@Calculator_Raster-Variables_tag0@@": "Uporabniško določeno ime spremenljivke in vhodni raster.",
	"@@Classify_Input-Definition-File_tag0@@": "Vhodna datoteka definicije klasifikatorja (${.ecd}), ki vsebuje statistiko in druge klasifikacijske informacije za določen sklop podatkov, klasifikator in izbrane atribute.",
	"@@Classify_Raster_tag0@@": "Rastrski sklop podatkov, ki jih želite klasificirati.",
	"@@Classify_Raster2_tag0@@": "Sklop podatkov izbirnega pomožnega rastra za vključitev v klasifikator, kot so segmentirana slika, multispektralna slika ali podatki o višini, ki se uporabljajo za ustvarjanje realnejše klasifikacijske definicije za vaš sklop podatkov. Rastrski sklop podatkov za ta parameter se mora ujemati s tistim, ki se uporablja za ustvarjanje vhodne datoteke definicije klasifikatorja.",
	"@@Clip_Clipping-Geometry-or-Raster_tag0@@": "Za določanje obsega izseka lahko uporabite naslednje:",
	"@@Clip_Clipping-Geometry-or-Raster_tag1@@": "<strong>Izsečni raster</strong>--Obseg izsečnega rastra",
	"@@Clip_Clipping-Geometry-or-Raster_tag3@@": "<strong>Obseg po meri</strong>--Minimalne in maksimalne koordinate X in Y",
	"@@Clip_Clipping-Geometry-or-Raster_tag5@@": "<strong>Trenutni obseg karte</strong>--Obseg trenutnega kartnega prikaza",
	"@@Clip_Clipping-Raster_tag0@@": "Rastrski sloj za izsek.",
	"@@Clip_Clipping-Type_tag0@@": "Določite, ali želite obdržati območje znotraj ali zunaj geometrije izseka.",
	"@@Clip_Clipping-Type_tag1@@": "<strong>Izsekaj znotraj</strong>--Slikovje v obsegu izseka bo odstranjeno.",
	"@@Clip_Clipping-Type_tag3@@": "<strong>Izsekaj izven</strong>--Slikovje izven obsega izseka bo odstranjeno.",
	"@@Clip_Custom-Extent_tag0@@": "Določite štiri koordinate, ki določajo obseg omejitvenega okvirja, ki se uporablja za izsek rastra.",
	"@@Clip_Output-Extent_tag0@@": "Koordinati x in y trenutnega obsega izseka.",
	"@@Clip_Output-Extent_tag1@@": "Gumb za <strong>zajem trenutnega obsega karte</strong> uporablja obseg zaslona za aktivno karto.",
	"@@Clip_Raster_tag0@@": "Vhodni rastrski sloj.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag0@@": "Če je izbran, se podatki izsekajo glede na geometrijo določenega geoobjektnega razreda.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag1@@": "Nepotrjeno--funkcija uporablja geometrijo izseka, ki jo določa <strong>pravokotnik</strong>. To je privzeta vrednost.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag4@@": "Potrjeno--Funkcija uporablja geometrijo izseka, ki jo določa geoobjektni razred.",
	"@@Color-Model-Conversion_Conversion-Type_tag0@@": "Vrsta izvedene pretvorbe barve:",
	"@@Color-Model-Conversion_Conversion-Type_tag1@@": "HSV v RGB",
	"@@Color-Model-Conversion_Conversion-Type_tag2@@": "RGB v HSV",
	"@@Color-Model-Conversion_Raster_tag0@@": "Vhodni raster.",
	"@@Colormap_Color-Ramp_tag0@@": "Izberite predhodno obstoječo barvno lestvico.",
	"@@Colormap_Color-Scheme-Type_tag0@@": "Izberite vrsto barvne sheme za upodobitev vašega vhodnega rastra.",
	"@@Colormap_Color-Scheme-Type_tag1@@": "Barvna lestvica--Uporabite barvno lestvico.",
	"@@Colormap_Color-Scheme-Type_tag2@@": "Barvna karta--Uporabite predhodno obstoječo barvno karto.",
	"@@Colormap_Colormap_tag0@@": "Na spustnem seznamu so na voljo naslednje privzete barvne karte:",
	"@@Colormap_Colormap_tag1@@": "Višina--Barvna karta, ki se postopoma spreminja iz cijan v škrlatno in iz škrlatne v črno.",
	"@@Colormap_Colormap_tag2@@": "Siva--Barvna karta, ki se postopoma spreminja iz črne v belo.",
	"@@Colormap_Colormap_tag7@@": "Senčenje reliefa -- Črno-bela barvna paleta za vizualizacijo 3D-reprezentacije sivin reliefa površja z relativnim položajem sonca, ki se upošteva pri senčenju slike.",
	"@@Colormap_Colormap_tag3@@": "NDVI--Barvna karta za prikaz vegetacije. Vrednosti blizu nič so modre. Nizke vrednosti so rjave. Nato se barve postopoma spreminjajo iz rdeče v oranžno, oranžne v rumeno, rumene v zeleno in zelene v črno, kot poteka vegetacijski indeks od najnižje do najvišje vrednosti.",
	"@@Colormap_Colormap_tag4@@": "NDVI2--Barvna karta za prikaz vegetacije. Nizke vrednosti potekajo od bele do zelene. Nato se barve razprostirajo od sive do škrlatne, od škrlatne do vijolične, od vijolične do temno modre in od temno modre do črne, kot poteka vegetacijski indeks od najnižje do najvišje vrednosti.",
	"@@Colormap_Colormap_tag5@@": "NDVI3--Barvna karta za prikaz vegetacije. Vrednosti blizu nič so modre. Nato se barve postopoma spreminjajo iz rdeče v oranžno in oranžne v zeleno, kot poteka vegetacijski indeks od najnižje do najvišje vrednosti.",
	"@@Colormap_Colormap_tag6@@": "Naključno--Naključna barvna karta.",
	"@@Colormap_Raster_tag0@@": "Vhodni raster.",
	"@@Colormap-To-RGB_Raster_tag0@@": "Vhodni raster barvne karte.",
	"@@Complex_Raster_tag0@@": "Vhodni raster.",
	"@@Composite-Bands_Rasters_tag0@@": "Uporabite spustni seznam ali gumb <strong>Brskaj</strong>, da izberete rastrske vhodne podatke.",
	"@@Composite-Bands_cellsizetype_tag0@@": "<p>Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse velikosti vhodnih celic enake, bodo vse možnosti ustvarile enake rezultate.</p><ul><li>Prva od--Uporabite prvo velikost celice vhodnih rastrov.</li><li>Najm. od - Uporabite najmanšo velikost celice vseh vhodnih rastrov.</li><li>Najv. od - Uporabite največjo velikost celice vseh vhodnih rastrov. To je privzeta vrednost.</li><li>Srednja vrednost od--Uporabite srednjo vrednost velikosti celice vseh vhodnih rastrov.</li><li>Zadnja od--Uporabite zadnjo velikost celice vseh vhodnih rastrov.</li></ul>",
	"@@Con-function_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Con-function_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Con-function_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Con-function_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Con-function_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Con-function_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Con_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Con_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Con_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Con_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Con_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Con_False-Raster_tag0@@": "Vhod, katerega vrednosti bodo uporabljene kot vrednosti izhodnega piksla, če je pogoj neresničen. Lahko gre za celo število, raster plavajoče vejice ali konstantno vrednost.",
	"@@Con_Raster_tag0@@": "Vhodni raster, ki predstavlja Boolov rezultat logične matematične rastrske funkcije. Vrednosti bodo 1 (za resnično) ali 0 (za neresnično). Lahko gre za celo število ali raster plavajoče vejice.",
	"@@Con_True-Raster_tag0@@": "Vhod, katerega vrednosti bodo uporabljene kot vrednosti izhodnega piksla, če je pogoj resničen. Lahko gre za celo število, raster plavajoče vejice ali konstantno vrednost.",
	"@@Constant_Constant_tag0@@": "Vrednost konstante, ki se doda virtualnemu rastru.",
	"@@Constant_Raster-Info_tag0@@": "Uporabite gumb <strong>Naloži raster predloge</strong>, da naložite predlogo iz mape ali portala.",
	"@@Contour_Adaptive-Smoothing_tag0@@": "Količina glajenja, ki se uporablja za glajenje linije plastnice. Privzeta vrednost je 2,5.",
	"@@Contour_Adaptive-Smoothing_tag1@@": "Nižja vrednost proizvede linijo plastnice z več zrnatosti in manj glajenja, medtem ko višja vrednost proizvede linijo plastnice z več glajenja, ki se zdi manj scefrana.",
	"@@Contour_Contour-Interval_tag0@@": "Višinska razlika med linijami plastnice",
	"@@Contour_Contour-Interval_tag1@@": "V relativno ploskih območjih se uporablja majhen razmik plastnic, medtem ko se večji razmiki plastnic uporabljajo v spremenljivem ali hribovitem terenu.",
	"@@Contour_Contour-Type_tag0@@": "Vrsta ustvarjene plastnice:",
	"@@Contour_Contour-Type_tag1@@": "<strong>Polnilo plastnice</strong>--Zapolni območje med vsako linijo plastnice s kvantno vrednostjo višine.",
	"@@Contour_Contour-Type_tag3@@": "<strong>Linija plastnice</strong>--Združi enake višinske točke, da ustvari linijo, ki predstavlja konstantno višino.",
	"@@Contour_Contour-Type_tag5@@": "<strong>Samo gladka površina</strong>--Zgladijo višino višinski sloj vhoda, vendar ne proizvedejo plastnic.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag0@@": "Indeks plastnice, ki je prikazan kot krepka linija.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag1@@": "Privzeta vrednost je 5, zato je vsaka 5. linija plastnice krepka.",
	"@@Contour_Number-Of-Contours_tag0@@": "Število plastnic, ki se ustvarijo na zaslonu. To dinamično prilagodi interval plastnic, da ustrezajo terenu na zaslonu, medtem ko ohranja standardizirane intervale, kot so 1, 5, 10 itn.",
	"@@Contour_Raster_tag0@@": "Enopasovni rastrski sklop podatkov o višini.",
	"@@Contour_Z-Base_tag0@@": "Osnovna vrednost plastnice. Plastnice se po potrebi ustvarjajo nad in pod to vrednostjo,da je pokrit celoten razpon vrednosti vhodnega rastra. Privzeta vrednost je 0.",
	"@@Contour_Z-Base_tag1@@": "Vrednost 0 pogosto predstavlja srednjo vrednost morske gladine, odvisno od sklopa podatkov izvirne višine.",
	"@@Contour_Z-Factor_tag0@@": "Faktor pretvorbe enot, ki se uporablja pri ustvarjanju plastnic. Privzeta vrednost je 1.",
	"@@Contour_Z-Factor_tag1@@": "Linije plastnice se ustvarijo glede na z-vrednost v vhodnem rastru, ki se pogosto merijo v metrih ali čevljih. S privzeto vrednostjo 1 vodo plastnice v enakih enotah kot z-vrednosti vhodnega rastra. Za ustvarjanje plastnic v drugih enotah kot tistih za z-vrednost nastavite ustrezno vrednost z-faktorja. Upoštevajte, da talne enote x,y in površinske enote z za to orodje ne rabijo biti skladne.",
	"@@Contour_Z-Factor_tag2@@": "Če so višinske vrednosti v vašem vhodnem rastru na primer v čevljih, vendar želite plastnice ustvariti glede metre, nastavite z-faktor na 0,3048 (ker je 1 čevelj =0,3048 metrov).",
	"@@Contrast-and-Brightness_Brightness-Offset_tag0@@": "Prilagodi svetlost rastrskega sloja.",
	"@@Contrast-and-Brightness_Brightness-Offset_tag1@@": "Za spremembo odmika svetlosti lahko uporabite drsnik ali vnesete vrednost.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag0@@": "Prilagodi kontrast rastrskega sloja.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag1@@": "Za spremembo odmika kontrasta lahko uporabite drsnik ali vnesete vrednost.",
	"@@Contrast-and-Brightness_Raster_tag0@@": "Vhodni raster za urejanje svetlosti in kontrasta.",
	"@@Convolution_kernel_tag0@@": "<p>Ta tabela prikazuje, kako bo ponderiran posamezen piksel pri postopku filtriranja. To tabelo lahko uredite, če izberete<strong>Uporabniško določeno</strong> kot<strong>način</strong>.</p>",
	"@@Convolution_Raster_tag0@@": "Rastrski sklop podatkov.",
	"@@Convolution_Type_tag0@@": "Izberite vrsto filtriranja, ki jo želite izvesti. Na izbiro imate ostrenje, zameglitev in zaznavanje robov ali pa lahko določite lasten filter na osnovi jedra.",
	"@@Corridor_Distance-Raster-1_tag0@@": "Prvi vhodni raster razdalje. To bi moral biti izhod akumulirane razdalje stroškov iz razdalje stroškov ali razdalje poti.",
	"@@Corridor_Distance-Raster-2_tag0@@": "Drugi vhodni raster razdalje. To bi moral biti izhod akumulirane razdalje stroškov iz razdalje stroškov ali razdalje poti.",
	"@@Cos_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Cos_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Cos_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Cos_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Cos_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Cos_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Cos_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Cos_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Cos_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Cos_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Cos_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Cos_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednost kosinusa.",
	"@@CosH_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@CosH_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@CosH_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@CosH_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@CosH_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@CosH_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@CosH_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@CosH_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@CosH_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@CosH_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@CosH_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@CosH_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednost hiperboličnega kosinusa.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Ta parameter simulira povečan trud za obvladovanje stroškov, ko se akumuliran strošek povečuje. Uporablja se kot model utrujenosti popotnika. Naraščajoči akumuliran strošek se za dosego celice pomnoži s stopnjo odpornosti in doda strošku, da se premakne v naslednjo celico.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "To je spremenjena različica sestavljene formule obrestne mere, ki se uporablja za izračun očitnega stroška za premikanje skozi celico. S povečevanjem stopnje odpornosti se povečuje strošek pozneje obiskanih celic. Večja kot je stopnja odpornosti, višji je strošek za dosego naslednje celice, ki je sestavljena za vsak nadaljnji premik. Ker je stopnja odpornosti podobna sestavljeni stopnji in so vrednosti akumuliranega stroška na splošno zelo visoke, se priporočajo stopnje odpornosti, kot so 0,005 ali manjše, odvisno od vrednosti akumuliranega stroška.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Cost-Allocation_Capacity_tag0@@": "Določa potrošnikovo kapaciteto stroškov za vir. Izračuni stroškov se nadaljujejo za vsak vir, dokler ni dosežena določena kapaciteta,",
	"@@Cost-Allocation_Capacity_tag1@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Cost-Allocation_Capacity_tag2@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Cost-Allocation_Cost-Raster_tag0@@": "Zahtevan vhodni raster, ki določa strošek ali impedanco za planimetrično premikanje skozi posamezno celico. Vrednost na lokaciji vsake celice predstavlja razdaljo stroškov na enoto za premikanje skoznjo. Vrednost lokacije vsake celice je pomnožena z resolucijo celice, hkrati pa upošteva diagonalno premikanje, da se pridobi celoten strošek premika skozi celico.",
	"@@Cost-Allocation_Cost-Raster_tag1@@": "Vrednosti <strong>rastra stroškov</strong> so lahko celo število ali število s plavajočo vejico, vendar ne morejo biti negativne ali ničla.",
	"@@Cost-Allocation_Maximum-Distance_tag0@@": "Prag, ki ga vrednosti akumuliranega stroška, ne morejo preseči. Če razdalja akumuliranega stroška preseže vrednost, bo izhodna vrednost za lokacijo celice ${NoData}. Največja razdalja določa obseg, za katerega se izračunajo razdalje akumuliranega stroška. Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Zmnožek za uporabo z vrednostmi stroška.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Ta parameter omogoča nadzor načina potovanja ali magnitude na viru. Večji kot je zmnožek, večji je strošek za premikanje skozi posamezno celico.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti morajo biti večje od nič. Privzeta vrednost je 1.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Cost-Allocation_Source-Field_tag0@@": "Polje, uporabljeno za dodelitev vrednosti izvornih lokacij. Biti mora tip celega števila. Če je <strong>raster vrednosti</strong> bil nastavljen, bodo vrednosti tega vhoda imele prednost pred katero koli nastavitvijo za <strong>izvorno polje</strong>.",
	"@@Cost-Allocation_Source-Raster_tag0@@": "Zahtevan vhodni raster izvornih lokacij.",
	"@@Cost-Allocation_Source-Raster_tag1@@": "To je raster, ki prepozna celice ali lokacije, za katere je izračunana najmanjša razdalja akumuliranega stroška za lokacijo vsake izhodne celice.",
	"@@Cost-Allocation_Source-Raster_tag2@@": "Če je vhodni<strong>izvorni raster</strong> plavajoča vejica, mora biti nastavljen <strong>raster vrednosti</strong>, ki mora biti celo število. <strong>Raster vrednosti</strong> bo imel prednost pred katero koli nastavitvijo <strong>izvornega polja</strong>.",
	"@@Cost-Allocation_Start-Cost_tag0@@": "Začetni strošek za izračune stroškov. Ta parameter omogoča specifikacijo fiksnih stroškov, povezanih z virom. Namesto, da bi začel pri strošku 0, bo algoritem stroškov začel z določeno vrednostjo.",
	"@@Cost-Allocation_Start-Cost_tag1@@": "Vrednost mora biti 0 ali več. Privzeta vrednost je 0.",
	"@@Cost-Allocation_Travel-Direction_tag0@@": "Določa smer popotnika pri uporabi stopnje odpornosti vira in začetnega stroška vira.",
	"@@Cost-Allocation_Travel-Direction_tag1@@": "<strong>Iz vira</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom v vhodnem viru ter se premikala navzven proti neizvornim celicam. To je privzeta vrednost.",
	"@@Cost-Allocation_Travel-Direction_tag3@@": "<strong>V vir</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom na vsaki neizvorni celici ter se premikala nazaj proti vhodnemu viru.",
	"@@Cost-Allocation_Travel-Direction_tag5@@": "Določite ključno besedo <strong>Iz vira</strong> ali <strong>V vir</strong> , ki bo uporabljena na vseh virih, ali določite polje v <strong>izvornem rastru</strong> , ki vsebuje ključne besede za prepoznavo smeri potovanja za vsak vir. To polje mora vsebovati niz ${FROM_SOURCE} ali ${TO_SOURCE}.",
	"@@Cost-Allocation_Value-Raster_tag0@@": "Vhodni raster celih števil, ki prepozna vrednost območij, ki se uporabljajo za vsako vhodno izvorno lokacijo. Za vsako celico izvorne lokacije bo vrednost, ki jo določa <strong>raster vrednosti</strong> dodeljena vsem celicam, ki so bile dodeljene izvorni lokaciji za izračunavanje. <strong>Raster vrednosti</strong> bo imel prednost pred katero koli nastavitvijo za <strong>izvorno polje</strong>.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Ta parameter simulira povečan trud za obvladovanje stroškov, ko se akumuliran strošek povečuje. Uporablja se kot model utrujenosti popotnika. Naraščajoči akumuliran strošek se za dosego celice pomnoži s stopnjo odpornosti in doda strošku, da se premakne v naslednjo celico.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "To je spremenjena različica sestavljene formule obrestne mere, ki se uporablja za izračun očitnega stroška za premikanje skozi celico. S povečevanjem stopnje odpornosti se povečuje strošek pozneje obiskanih celic. Večja kot je stopnja odpornosti, višji je strošek za dosego naslednje celice, ki je sestavljena za vsak nadaljnji premik. Ker je stopnja odpornosti podobna sestavljeni stopnji in so vrednosti akumuliranega stroška na splošno zelo visoke, se priporočajo stopnje odpornosti, kot so 0,005 ali manjše, odvisno od vrednosti akumuliranega stroška.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Cost-Back-Link_Capacity_tag0@@": "Določa potrošnikovo kapaciteto stroškov za vir. Izračuni stroškov se nadaljujejo za vsak vir, dokler ni dosežena določena kapaciteta,",
	"@@Cost-Back-Link_Capacity_tag1@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Cost-Back-Link_Capacity_tag2@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Cost-Back-Link_Cost-Raster_tag0@@": "Zahtevan vhodni raster, ki določa strošek ali impedanco za planimetrično premikanje skozi posamezno celico. Vrednost na lokaciji vsake celice predstavlja razdaljo stroškov na enoto za premikanje skoznjo. Vrednost lokacije vsake celice je pomnožena z resolucijo celice, hkrati pa upošteva diagonalno premikanje, da se pridobi celoten strošek premika skozi celico.",
	"@@Cost-Back-Link_Cost-Raster_tag1@@": "Vrednosti <strong>rastra stroškov</strong> so lahko celo število ali število s plavajočo vejico, vendar ne morejo biti negativne ali ničla.",
	"@@Cost-Back-Link_Maximum-Distance_tag0@@": "Prag, ki ga vrednosti akumuliranega stroška, ne morejo preseči. Če razdalja akumuliranega stroška preseže vrednost, bo izhodna vrednost za lokacijo celice brez podatkov. Največja razdalja določa obseg, za katerega se izračunajo razdalje akumuliranega stroška. Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Zmnožek za uporabo z vrednostmi stroška.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Ta parameter omogoča nadzor načina potovanja ali magnitude na viru. Večji kot je zmnožek, večji je strošek za premikanje skozi posamezno celico.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti morajo biti večje od nič. Privzeta vrednost je 1.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Cost-Back-Link_Source-Raster_tag0@@": "Zahtevan vhodni raster izvornih lokacij.",
	"@@Cost-Back-Link_Source-Raster_tag1@@": "To je raster, ki prepozna celice ali lokacije, za katere je izračunana najmanjša razdalja akumuliranega stroška za lokacijo vsake izhodne celice.",
	"@@Cost-Back-Link_Start-Cost_tag0@@": "Začetni strošek za izračune stroškov. Ta parameter omogoča specifikacijo fiksnih stroškov, povezanih z virom. Namesto, da bi začel pri strošku 0, bo algoritem stroškov začel z določeno vrednostjo.",
	"@@Cost-Back-Link_Start-Cost_tag1@@": "Vrednost mora biti 0 ali več. Privzeta vrednost je 0.",
	"@@Cost-Back-Link_Travel-Direction_tag0@@": "Določa smer popotnika pri uporabi stopnje odpornosti vira in začetnega stroška vira.",
	"@@Cost-Back-Link_Travel-Direction_tag1@@": "<strong>Iz vira</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom v vhodnem viru ter se premikala navzven proti neizvornim celicam. To je privzeta vrednost.",
	"@@Cost-Back-Link_Travel-Direction_tag3@@": "<strong>V vir</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom na vsaki neizvorni celici ter se premikala nazaj proti vhodnemu viru.",
	"@@Cost-Back-Link_Travel-Direction_tag5@@": "Določite ključno besedo <strong>Iz vira</strong> ali <strong>V vir</strong> , ki bo uporabljena na vseh virih, ali določite polje v <strong>izvornem rastru</strong> , ki vsebuje ključne besede za prepoznavo smeri potovanja za vsak vir. To polje mora vsebovati niz ${FROM_SOURCE} ali ${TO_SOURCE}.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Ta parameter simulira povečan trud za obvladovanje stroškov, ko se akumuliran strošek povečuje. Uporablja se kot model utrujenosti popotnika. Naraščajoči akumuliran strošek se za dosego celice pomnoži s stopnjo odpornosti in doda strošku, da se premakne v naslednjo celico.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "To je spremenjena različica sestavljene formule obrestne mere, ki se uporablja za izračun očitnega stroška za premikanje skozi celico. S povečevanjem stopnje odpornosti se povečuje strošek pozneje obiskanih celic. Večja kot je stopnja odpornosti, višji je strošek za dosego naslednje celice, ki je sestavljena za vsak nadaljnji premik. Ker je stopnja odpornosti podobna sestavljeni stopnji in so vrednosti akumuliranega stroška na splošno zelo visoke, se priporočajo stopnje odpornosti, kot so 0,005 ali manjše, odvisno od vrednosti akumuliranega stroška.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Cost-Distance_Capacity_tag0@@": "Določa potrošnikovo kapaciteto stroškov za vir. Izračuni stroškov se nadaljujejo za vsak vir, dokler ni dosežena določena kapaciteta,",
	"@@Cost-Distance_Capacity_tag1@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Cost-Distance_Capacity_tag2@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Cost-Distance_Cost-Raster_tag0@@": "Zahtevan vhodni raster, ki določa strošek ali impedanco za planimetrično premikanje skozi posamezno celico. Vrednost na lokaciji vsake celice predstavlja razdaljo stroškov na enoto za premikanje skoznjo. Vrednost lokacije vsake celice je pomnožena z resolucijo celice, hkrati pa upošteva diagonalno premikanje, da se pridobi celoten strošek premika skozi celico.",
	"@@Cost-Distance_Cost-Raster_tag1@@": "Vrednosti <strong>rastra stroškov</strong> so lahko celo število ali število s plavajočo vejico, vendar ne morejo biti negativne ali ničla.",
	"@@Cost-Distance_Maximum-Distance_tag0@@": "Prag, ki ga vrednosti akumuliranega stroška, ne morejo preseči. Če razdalja akumuliranega stroška preseže vrednost, bo izhodna vrednost za lokacijo celice brez podatkov. Največja razdalja določa obseg, za katerega se izračunajo razdalje akumuliranega stroška. Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Zmnožek za uporabo z vrednostmi stroška.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Ta parameter omogoča nadzor načina potovanja ali magnitude na viru. Večji kot je zmnožek, večji je strošek za premikanje skozi posamezno celico.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti morajo biti večje od nič. Privzeta vrednost je 1.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Cost-Distance_Source-Raster_tag0@@": "Zahtevan vhodni raster izvornih lokacij.",
	"@@Cost-Distance_Source-Raster_tag1@@": "To je raster, ki prepozna celice ali lokacije, za katere je izračunana najmanjša razdalja akumuliranega stroška za lokacijo vsake izhodne celice.",
	"@@Cost-Distance_Start-Cost_tag0@@": "Začetni strošek za izračune stroškov. Ta parameter omogoča specifikacijo fiksnih stroškov, povezanih z virom. Namesto, da bi začel pri strošku 0, bo algoritem stroškov začel z določeno vrednostjo.",
	"@@Cost-Distance_Start-Cost_tag1@@": "Vrednost mora biti 0 ali več. Privzeta vrednost je 0.",
	"@@Cost-Distance_Travel-Direction_tag0@@": "Določa smer popotnika pri uporabi stopnje odpornosti vira in začetnega stroška vira.",
	"@@Cost-Distance_Travel-Direction_tag1@@": "<strong>Iz vira</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom v vhodnem viru ter se premikala navzven proti neizvornim celicam. To je privzeta vrednost.",
	"@@Cost-Distance_Travel-Direction_tag3@@": "<strong>V vir</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom na vsaki neizvorni celici ter se premikala nazaj proti vhodnemu viru.",
	"@@Cost-Distance_Travel-Direction_tag5@@": "Določite ključno besedo <strong>Iz vira</strong> ali <strong>V vir</strong> , ki bo uporabljena na vseh virih, ali določite polje v <strong>izvornem rastru</strong> , ki vsebuje ključne besede za prepoznavo smeri potovanja za vsak vir. To polje mora vsebovati niz ${FROM_SOURCE} ali ${TO_SOURCE}.",
	"@@Curvature_Curvature-Type_tag0@@": "Vrsta ukrivljenosti poudarja različne vidike naklona. Obstajajo tri možnosti ukrivljenosti:",
	"@@Curvature_Curvature-Type_tag1@@": "Planformno--pravokotno na smer največjega naklona. Vpliva na konvergenco in divergenco površinskega toka.",
	"@@Curvature_Curvature-Type_tag2@@": "Profil--vzporeden na naklon in ponazarja smer največjega naklona. Vpliva na pospeševanje in zaviranje površinskega toka.",
	"@@Curvature_Curvature-Type_tag3@@": "Standard--Združuje tako <strong>profilno</strong> in <strong>planformno</strong> ukrivljenost.",
	"@@Curvature_DEM_tag0@@": "Raster digitalnega modela višine (DMV).",
	"@@Curvature_Z-Factor_tag0@@": "Z-faktor prilagaja merske enote za enote z, če se razlikujejo od enot x,y vhodne površine. Če so enote x,y v enakih merskih enotah, morate z-faktor nastaviti na 1. Z-vrednosti vhodne površine se pri izračunavanju končne izhodne površine pomnožijo z z-faktorjem. Če so na primer vaše enote z čevlji in vaše enote x,y metri, bi za pretvorbo enot z iz čevljev v metre uporabili vrednost z-faktorja 0,3048, saj je 1 čevelj = 0,3048 metra.",
	"@@Divide_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Divide_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Divide_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Divide_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Divide_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Divide_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Divide_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Divide_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Divide_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Divide_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Divide_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Divide_Raster_tag0@@": "Vnos, katerega vrednost bo razdelil drugi vnos.",
	"@@Divide_Raster_tag1@@": "Če je za ${Raster2} določen raster, se za vnos tega parametra lahko uporabi število.",
	"@@Divide_Raster2_tag0@@": "Vnos, katerega vrednost bo razdelil prvi vnos.",
	"@@Divide_Raster2_tag1@@": "Če je za ${Raster} določen raster, se za vnos tega parametra lahko uporabi število.",
	"@@Elevation-Void-Fill_DEM_tag0@@": "Vhod DMV.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag0@@": "Vrednost največje širine praznine se uporablja za določanje največje velikosti praznine, ki jo želite zapolniti. Če je višina ali širina omejitvenega okvirja okoli praznine večja od vrednosti največje širine praznine, se praznina ne zapolni. Parametrske enote so enake kot enote, ki se uporabljajo v vašem koordinatnem sistemu.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag1@@": "Če je ta parameter prazen ali ima vrednost ${0}, največja širina ne bo uporabljena in bodo zapolnjene vse praznine. Vrednost ${-1} pomeni, da ne bo zapolnjena nobena praznina.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag0@@": "Največji iskalni polmer, ki bo uporabljen za polnjenje praznine. Praznina, katere vrednost praga je dlje od katerega koli veljavnega piksla, bo ostala kot praznina. Parametrske enote so enake kot enote, ki se uporabljajo v vašem koordinatnem sistemu.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag1@@": "Če je vrednost tega parametra prazna, ${0} ali ${-1}, ta parameter ne bo uporabljen.",
	"@@Equal-to_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Equal-to_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Equal-to_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Equal-to_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Equal-to_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Equal-to_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Equal-to_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Equal-to_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Equal-to_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Equal-to_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Equal-to_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Equal-to_Raster_tag0@@": "Vnos, ki ga bo drugi vnos uporabil za primerjavo enakosti.",
	"@@Equal-to_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Equal-to_Raster2_tag0@@": "Vnos, ki ga bo prvi vnos uporabil za primerjavo enakosti.",
	"@@Equal-to_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Euclidean-Allocation_Cellsize_tag0@@": "Velikost celice, pri kateri bo ustvarjen izhodni raster.",
	"@@Euclidean-Allocation_Cellsize_tag1@@": "Če je velikost celice izrecno nastavljena v <strong>okoljih analize</strong> , je to privzeta velikost celice. Če ni nastavljena, je velikost izhodne celice enaka kot <strong>izvorni raster</strong>.",
	"@@Euclidean-Allocation_Distance-Method_tag0@@": "Določa izračun razdalje na osnovi ravninske (ravne površine) ali geodetske (elipsoid) metode.",
	"@@Euclidean-Allocation_Distance-Method_tag1@@": "Geodetsko--najkrajša linija med dvema točkama na sferoidni zemeljski površini (elipsoid). Tako se rezultati ne spremenijo ne glede na vhodno ali izhodno projekcijo. Geodetska linija se med drugim uporablja za določanje najkrajše razdalje med dvema mestoma za pot letalskega poleta. Če to namesto na elipsoidu sloni na krogli, je znano tudi kot velika krožna linija.",
	"@@Euclidean-Allocation_Distance-Method_tag2@@": "Ravninsko--Ravninske meritve za izračun dolžine in območja uporabljajo dvodimenzionalno kartezijsko matematiko. Možnost je na voljo samo pri meritvah v projiciranem koordinatnem sistemu, kot osnova za meritve pa se uporablja dvodimenzionalna ravnina tega koordinatnega sistema.",
	"@@Euclidean-Allocation_Maximum-Distance_tag0@@": "Določa razdaljo praga, znotraj katere bo določen najbližji vir. Če razdalja do najbližjega vira to presega, bo izhod za to celico ${NoData}.",
	"@@Euclidean-Allocation_Maximum-Distance_tag1@@": "Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Euclidean-Allocation_Raster-Barriers_tag0@@": "Raster, ki določa ovire.",
	"@@Euclidean-Allocation_Raster-Barriers_tag1@@": "Kjer ni ovir, mora sklop podatkov vsebovati ${NoData}. Ovire predstavljajo veljavne vrednosti, vključno nič.",
	"@@Euclidean-Allocation_Raster-Barriers_tag2@@": "Ovire se lahko določijo s celim številom ali rastrom plavajoče vejice.",
	"@@Euclidean-Allocation_Source-Field_tag0@@": "Polje, uporabljeno za dodelitev vrednosti izvornih lokacij. Biti mora tip celega števila. Če je <strong>raster vrednosti</strong> bil nastavljen, bodo vrednosti tega vhoda imele prednost pred katero koli nastavitvijo za <strong>izvorno polje</strong>.",
	"@@Euclidean-Allocation_Source-Raster_tag0@@": "Zahtevan vhodni raster, ki prepozna izvorne lokacije. Najbližji vir bo za vsako celico v izhodu določen na osnovi evklidske razdalje.",
	"@@Euclidean-Allocation_Source-Raster_tag1@@": "Tip vnosa je lahko celo število ali tip plavajoče vejice.",
	"@@Euclidean-Allocation_Value-Raster_tag0@@": "Vhodni raster celih števil, ki prepozna vrednost območij, ki se uporabljajo za vsako vhodno izvorno lokacijo. Za vsako celico izvorne lokacije bo vrednost, ki jo določa <strong>raster vrednosti</strong> dodeljena vsem celicam, ki so bile dodeljene izvorni lokaciji za izračunavanje. <strong>Raster vrednosti</strong> bo imel prednost pred katero koli nastavitvijo za <strong>izvorno polje</strong>.",
	"@@Euclidean-Direction_Cellsize_tag0@@": "Velikost celice, pri kateri bo ustvarjen izhodni raster.",
	"@@Euclidean-Direction_Cellsize_tag1@@": "Če je velikost celice izrecno nastavljena v <strong>okoljih analize</strong> , je to privzeta velikost celice. Če ni nastavljena, je velikost izhodne celice enaka kot <strong>izvorni raster</strong>.",
	"@@Euclidean-Direction_Distance-Method_tag0@@": "Določa izračun razdalje na osnovi ravninske (ravne površine) ali geodetske (elipsoid) metode.",
	"@@Euclidean-Direction_Distance-Method_tag1@@": "Geodetsko--najkrajša linija med dvema točkama na sferoidni zemeljski površini (elipsoid). Tako se rezultati ne spremenijo ne glede na vhodno ali izhodno projekcijo. Geodetska linija se med drugim uporablja za določanje najkrajše razdalje med dvema mestoma za pot letalskega poleta. Če to namesto na elipsoidu sloni na krogli, je znano tudi kot velika krožna linija.",
	"@@Euclidean-Direction_Distance-Method_tag2@@": "Ravninsko--Ravninske meritve za izračun dolžine in območja uporabljajo dvodimenzionalno kartezijsko matematiko. Možnost je na voljo samo pri meritvah v projiciranem koordinatnem sistemu, kot osnova za meritve pa se uporablja dvodimenzionalna ravnina tega koordinatnega sistema.",
	"@@Euclidean-Direction_Maximum-Distance_tag0@@": "Določa razdaljo praga, znotraj katere bo izračunana smer do najbližjega vira. Če razdalja do najbližjega vira to presega, bo izhod za to celico ${NoData}.",
	"@@Euclidean-Direction_Maximum-Distance_tag1@@": "Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Euclidean-Direction_Raster-Barriers_tag0@@": "Raster, ki določa ovire.",
	"@@Euclidean-Direction_Raster-Barriers_tag1@@": "Kjer ni ovir, mora sklop podatkov biti brez podatkov. Ovire predstavljajo veljavne vrednosti, vključno nič.",
	"@@Euclidean-Direction_Raster-Barriers_tag2@@": "Ovire se lahko določijo s celim številom ali rastrom plavajoče vejice.",
	"@@Euclidean-Direction_Source-Raster_tag0@@": "Zahtevan vhodni raster, ki prepozna celice ali lokacije, za katere je izračunana evklidska smer za lokacijo vsake izhodne celice.",
	"@@Euclidean-Direction_Source-Raster_tag1@@": "Tip vnosa je lahko celo število ali tip plavajoče vejice.",
	"@@Euclidean-Distance_Cellsize_tag0@@": "Velikost celice, pri kateri bo ustvarjen izhodni raster.",
	"@@Euclidean-Distance_Cellsize_tag1@@": "Če je velikost celice izrecno nastavljena v <strong>okoljih analize</strong> , je to privzeta velikost celice. Če ni nastavljena, je velikost izhodne celice enaka kot <strong>izvorni raster</strong>.",
	"@@Euclidean-Distance_Distance-Method_tag0@@": "Določa izračun razdalje na osnovi ravninske (ravne površine) ali geodetske (elipsoid) metode.",
	"@@Euclidean-Distance_Distance-Method_tag1@@": "Geodetsko--najkrajša linija med dvema točkama na sferoidni zemeljski površini (elipsoid). Tako se rezultati ne spremenijo ne glede na vhodno ali izhodno projekcijo. Geodetska linija se med drugim uporablja za določanje najkrajše razdalje med dvema mestoma za pot letalskega poleta. Če to namesto na elipsoidu sloni na krogli, je znano tudi kot velika krožna linija.",
	"@@Euclidean-Distance_Distance-Method_tag2@@": "Ravninsko--Ravninske meritve za izračun dolžine in območja uporabljajo dvodimenzionalno kartezijsko matematiko. Možnost je na voljo samo pri meritvah v projiciranem koordinatnem sistemu, kot osnova za meritve pa se uporablja dvodimenzionalna ravnina tega koordinatnega sistema.",
	"@@Euclidean-Distance_Maximum-Distance_tag0@@": "Prag, ki ga vrednosti akumulirane razdalje ne morejo preseči. Če akumulirana evklidska razdalja preseže vrednost, bo izhodna vrednost za lokacijo celice brez podatkov.",
	"@@Euclidean-Distance_Maximum-Distance_tag1@@": "Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Euclidean-Distance_Raster-Barriers_tag0@@": "Raster, ki določa ovire.",
	"@@Euclidean-Distance_Raster-Barriers_tag1@@": "Kjer ni ovir, mora sklop podatkov vsebovati ${NoData}. Ovire predstavljajo veljavne vrednosti, vključno nič.",
	"@@Euclidean-Distance_Raster-Barriers_tag2@@": "Ovire se lahko določijo s celim številom ali rastrom plavajoče vejice.",
	"@@Euclidean-Distance_Source-Raster_tag0@@": "Zahtevan vhodni raster, ki prepozna celice ali lokacije, za katere je izračunana evklidska razdalja za lokacijo vsake izhodne celice.",
	"@@Euclidean-Distance_Source-Raster_tag1@@": "Tip vnosa je lahko celo število ali tip plavajoče vejice.",
	"@@Exp_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Exp_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Exp_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Exp_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Exp_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Exp_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Exp_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Exp_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Exp_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Exp_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Exp_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Exp_Raster_tag0@@": "Vhodne vrednosti, za katere je treba najti potenco z osnovo e.",
	"@@Exp10_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Exp10_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Exp10_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Exp10_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Exp10_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Exp10_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Exp10_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Exp10_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Exp10_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Exp10_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Exp10_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Exp10_Raster_tag0@@": "Vhodne vrednosti, za katere je treba najti potenco z osnovo 10.",
	"@@Exp2_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Exp2_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Exp2_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Exp2_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Exp2_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Exp2_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Exp2_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Exp2_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Exp2_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Exp2_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Exp2_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Exp2_Raster_tag0@@": "Vhodne vrednosti, za katere je treba najti potenco z osnovo 2.",
	"@@Extract-Bands_Band_tag0@@": "Izberite pasove za ekstrahiranje s seznama, ki sloni na uporabljeni možnosti parametra <strong>metode</strong>.",
	"@@Extract-Bands_Combination_tag0@@": "Kombinacija pasov ali vrstni red pasov. Izbirni seznam je odvisen od določene možnosti <strong>metode</strong>. Na primer, če je<strong>metoda</strong> <strong>Imena pasov</strong>, lahko za ekstrahiranje naravne barve slike izberete modro, zeleno in rdečo kombinacijo.",
	"@@Extract-Bands_Method_tag0@@": "Izberite eno od naslednjih metod za razširitev pasov:",
	"@@Extract-Bands_Method_tag1@@": "<strong>ID-ji pasov</strong>--Oznaka ali številka pasu, ki je edinstvena za vsak senzor. Ti so lahko enaki <strong>imenom pasov</strong>.",
	"@@Extract-Bands_Method_tag4@@": "<strong>Imena pasov</strong>--Uporablja ime pasu, ki predstavlja interval valovne dolžine na elektromagnetnem spektru (na primer rdeče, skoraj infrardeče, toplotno infrardeče). To se lahko označi tudi kot ID številke pasu.",
	"@@Extract-Bands_Method_tag6@@": "<strong>Valovne dolžine pasov</strong>--Valovna dolžina na elektromagnetnem spektru.",
	"@@Extract-Bands_Missing-Band-Action_tag0@@": "Določajo dejanje, ki se bo zgodilo, če pas znotraj seznama razširitve pasov ni na voljo.",
	"@@Extract-Bands_Missing-Band-Action_tag1@@": "<strong>Najboljše ujemanje</strong>--Najde najboljši razpoložljivi pas za uporabo namesto manjkajočega pasu na osnovi valovne dolžine, da funkcija ne bo neuspešna",
	"@@Extract-Bands_Missing-Band-Action_tag3@@": "<strong>Neuspelo</strong>--Če v sklopu vhodnih podatkov manjka kateri koli pas, določen v parametru <strong>pasu</strong> bo funkcija neuspešna.",
	"@@Extract-Bands_Raster_tag0@@": "Rastrski izdelek za razširitev pasu oz. pasov.",
	"@@Fill_Raster_tag0@@": "Raster enopasovne višine.",
	"@@Fill_Z-Limit_tag0@@": "Največja višinska razlika med ponorom in točko litja, ki jo je treba napolniti.",
	"@@Fill_Z-Limit_tag1@@": "Če za ta parameter ne določite vrednosti, bodo napolnjeni vsi ponori, ne glede na globino.",
	"@@Fill_Z-Limit_tag2@@": "Vrednost za<strong>omejitev Z</strong> mora biti večja od nič.",
	"@@Float_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Float_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Float_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Float_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Float_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Float_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Float_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Float_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Float_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Float_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Float_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Float_Raster_tag0@@": "Vhodni raster, ki bo pretvorjen v plavajočo vejico.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag0@@": "Vhodni raster, ki prikazuje smer toka iz vsake celice.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag1@@": "Raster smeri toka lahko ustvarite z zagonom funkcije <strong>smeri toka</strong>.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag0@@": "Določa vrsto rastra smeri vhodnega toka.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Tip vhodnega rastra smeri toka je D8. To je privzeta vrednost.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Tip vhodnega rastra smeri toka je D-Infinity (DINF).",
	"@@Flow-Accumulation_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Tip vhodnega rastra smeri toka je Multi Flow-Direction (MFD).",
	"@@Flow-Accumulation_Output-Data-Type_tag0@@": "Izhodni akumulacijski raster je lahko tip celega števila ali plavajoče vejice.",
	"@@Flow-Accumulation_Output-Data-Type_tag1@@": "<strong>Plavajoče</strong>--Izhodni raster bo tip plavajoče vejice. To je privzeta vrednost.",
	"@@Flow-Accumulation_Output-Data-Type_tag3@@": "<strong>Celo število</strong>--Izhodni raster bo tip celega števila.",
	"@@Flow-Accumulation_Weight-Raster_tag0@@": "Izbirni vhodni raster za dodajanje ponderja posameznemu pikslu.",
	"@@Flow-Accumulation_Weight-Raster_tag1@@": "Če raster ponderja ni določen, bo vsakemu pikslu dodeljen ponder s privzeto vrednostjo 1.",
	"@@Flow-Direction_Flow-Direction-Type_tag0@@": "Določa vrsto rastra smeri vhodnega toka.",
	"@@Flow-Direction_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Tip vhodnega rastra smeri toka je D8. To je privzeta vrednost.",
	"@@Flow-Direction_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Tip vhodnega rastra smeri toka je D-Infinity (DINF).",
	"@@Flow-Direction_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Tip vhodnega rastra smeri toka je Multi Flow-Direction (MFD).",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag0@@": "Določa, ali bodo piksli roba vedno tekli navzven ali upoštevali običajna pravila toka.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag1@@": "<strong>Ne</strong>--Če je največji padec v notranjosti piksla roba večji od nič, bo smer toka določena kot običajno; v nasprotnem primeru bo smer toka proti robu. Piksli, ki bi morali teči od roba površinskega rastra navznoter, bodo tekli navznoter. To je privzeta vrednost.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag3@@": "<strong>Da</strong>--Vsi piksli na robu površinskega rastra bodo s površine rastra tekli navzven.",
	"@@Flow-Direction_Raster_tag0@@": "Vhodni raster, ki predstavlja trajno površino višin.",
	"@@Flow-Distance_Distance-Type_tag0@@": "Določa, ali je izračunana vertikalna oz. horizontalna komponenta razdalje toka.",
	"@@Flow-Distance_Distance-Type_tag1@@": "<strong>Horizontalno</strong>--Izračuni razdalje toka predstavljajo horizontalno komponento razdalje toka od vsakega piksla v domeni do piksla/pikslov do vodotoka, v katerega se stekajo.",
	"@@Flow-Distance_Distance-Type_tag3@@": "<strong>Vertikalno</strong>--Izračuni razdalje toka predstavljajo vertikalno komponento razdalje toka od vsakega piksla v domeni do piksla/pikslov do vodotoka, v katerega se stekajo. To je privzeta vrednost.",
	"@@Flow-Distance_Flow-Direction-Raster_tag0@@": "Vhodni raster, ki prikazuje smer pretoka iz vsakega piksla.",
	"@@Flow-Distance_Flow-Direction-Raster_tag1@@": "Če je na voljo raster smeri toka, bodo smeri toka navzdol omejene na tiste, ki so določene z vhodnim rastrom smeri toka.",
	"@@Flow-Distance_Flow-Direction-Raster_tag2@@": "Raster smeri toka lahko ustvarite z uporabo funkcije smeri toka.",
	"@@Flow-Distance_Flow-Direction-Type_tag0@@": "Določa vrsto rastra smeri vhodnega toka.",
	"@@Flow-Distance_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Tip vhodnega rastra smeri toka je D8. <strong>DINF</strong>--Tip rastra smeri vhodnega toka je D-Infinity (DINF).",
	"@@Flow-Distance_Flow-Direction-Type_tag3@@": "<strong>MFD</strong>--Tip vhodnega rastra smeri toka je Multi Flow-Direction (MFD).",
	"@@Flow-Distance_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Tip vhodnega rastra smeri toka je Multi Flow-Direction (MFD).",
	"@@Flow-Distance_Statistics-Type_tag0@@": "Določa vrsto statistike, ki se uporablja za izračun razdalje toka po več linijah toka. Če iz vsake celice obstaja samo ena linija toka do celice v realnočasovnem pretoku, vse vrste statistik ponudijo enak rezultat.",
	"@@Flow-Distance_Statistics-Type_tag1@@": "<strong>Minimum</strong>--Kjer obstaja več linij toka, se izračuna najmanjša razdalja toka. To je privzeta vrednost.",
	"@@Flow-Distance_Statistics-Type_tag3@@": "<strong>Obteženo povprečje</strong> --Kjer obstaja več linij toka, se izračuna obteženo povprečje razdalje toka. Delež toka od celice do sosednje dolvodne celice se uporablja kot utež za izračunavanje ponderirane srednje vrednosti.",
	"@@Flow-Distance_Statistics-Type_tag5@@": "<strong>Maksimum</strong>--Kjer obstaja več linij toka, se izračuna maksimalna razdalja toka.",
	"@@Flow-Distance_Stream-Raster_tag0@@": "Vhodni pretočni raster predstavlja omrežje linearnega pretoka.",
	"@@Flow-Distance_Surface-Raster_tag0@@": "Vhodni raster, ki predstavlja trajno površino višin.",
	"@@Flow-Length_Direction-of-Measurement_tag0@@": "Smer merjenja ob liniji toka.",
	"@@Flow-Length_Direction-of-Measurement_tag1@@": "strong>Dolvodno</strong>--Izračuna vzdolžno razdaljo ob liniji toka od vsake celice do ponora ali izliva na robu rastra.",
	"@@Flow-Length_Direction-of-Measurement_tag3@@": "<strong>Gorvodno</strong>--Izračuna največjo razdaljo navzgor ob liniji toka od vsake celice do vrha razvodnice.",
	"@@Flow-Length_Flow-Direction-Raster_tag0@@": "Vhodni raster, ki prikazuje smer toka iz vsake celice.",
	"@@Flow-Length_Flow-Direction-Raster_tag1@@": "Raster smeri toka lahko ustvarite z zagonom funkcije <strong>smeri toka</strong>.",
	"@@Flow-Length_Weight-Raster_tag0@@": "Izbirni vhodni raster za dodajanje ponderja posamezni celici.",
	"@@Flow-Length_Weight-Raster_tag1@@": "Če raster ponderja ni določen, bo vsaki celici dodeljen ponder s privzeto vrednostjo 1.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag0@@": "Označuje, ali statistični izračun prezre vrednosti ${NoData}.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag1@@": "<strong>Potrjeno</strong>--Določa, da bo vrednost ${NoData} prezrta, če v soseski obstaja vrednost ${NoData}. Za določanje izhodne vrednosti bodo uporabljene samo celice v soseski, ki imajo podatkovne vrednosti. To je privzeta vrednost.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag3@@": "<strong>Nepotrjeno</strong>--Določa, da bo izhod za celico procesiranja ${NoData}, če ima katera koli celica v soseski vrednost ${NoData}.",
	"@@Focal-Statistics_Neighborhood_tag0@@": "Oblika območja okoli vsake celice, ki se uporablja za izračunavanje statistike.",
	"@@Focal-Statistics_Neighborhood_tag1@@": "Vsaka soseska ima dodatne parametre, s katerimi naj določa obliko.",
	"@@Focal-Statistics_Neighborhood_tag2@@": "Kolobar, notranji polmer, zunanji polmer",
	"@@Focal-Statistics_Neighborhood_tag3@@": "Krog, polmer",
	"@@Focal-Statistics_Neighborhood_tag4@@": "Nepravilno, širina, višina, sosednje vrednosti",
	"@@Focal-Statistics_Neighborhood_tag5@@": "Pravokotnik, širina, višina",
	"@@Focal-Statistics_Neighborhood_tag6@@": "Izsek kroga, polmer, začetni kot, končni kot",
	"@@Focal-Statistics_Neighborhood_tag7@@": "Ponder, širina, višina, sosednje vrednosti",
	"@@Focal-Statistics_Neighborhood_tag8@@": "Nepravilna soseska vam omogoča, da okoli celice procesiranja določite nepravilno oblikovano sosesko. Uporabite tabelo sosednjih vrednosti, da določite obliko jedra soseske. Vrednost 0 za položaj celice ponazarja, da celica ni del soseske in ne bo uporabljena za procesiranje. Vrednost 1 ponazarja, da je ustrezna celica (in vrednost) članica soseske.",
	"@@Focal-Statistics_Neighborhood_tag9@@": "Ponderirana soseska je podobna nepravilni soseski v tem, da vam omogoča določiti nepravilno sosesko okoli celice procesiranja, dodatno pa tudi dodajanje ponderja vhodnim vrednostim. Vrednosti v jedru ponderja določajo, kateri položaji celice naj bodo vključeni v sosesko in ponderje, s katerimi bodo pomnoženi. Za izvzem celice iz procesiranja uporabite vrednost 0. Pozitivne, negativne in decimalne vrednosti so vse veljavne možnosti za uporabo kot ponder. Za ponderirano sosesko so podprte samo srednja vrednost, standardni odklon ali statistika vsote.",
	"@@Focal-Statistics_Percentile-Value_tag0@@": "Označuje, kateri percentil je treba izračunati, ko je <strong>percentil</strong> izbran kot vrsta statistike. Privzeta vrednost je 90 za 90. percentil.",
	"@@Focal-Statistics_Percentile-Value_tag3@@": "Vrednosti se gibljejo od 0 do 100. Percentil 0 je pravzaprav enakovreden najmanjši, percentil 100 pa največji statistični vrednosti, pri čemer bo rezultat izjemoma plavajoča vejica. Vrednost 50 bo pravzaprav ustvarila enak rezultat kot srednja statistična vrednost.",
	"@@Focal-Statistics_Raster_tag0@@": "Zahtevan vhodni raster.",
	"@@Focal-Statistics_Statistics-Type_tag0@@": "Vrsta statistike, ki bo izračunana.",
	"@@Focal-Statistics_Statistics-Type_tag1@@": "<strong>Večina</strong>--Izračuna večino (vrednost, ki se pojavi najpogosteje) celic v soseski.",
	"@@Focal-Statistics_Statistics-Type_tag3@@": "<strong>Maksimum</strong>--Izračuna maksimum (največjo vrednost) celic v soseski.",
	"@@Focal-Statistics_Statistics-Type_tag5@@": "<strong>Povprečje</strong>--Izračuna povprečje (srednjo vrednost) celic v soseski.",
	"@@Focal-Statistics_Statistics-Type_tag7@@": "<strong>Mediana</strong>--Izračuna mediano celic v soseski.",
	"@@Focal-Statistics_Statistics-Type_tag9@@": "<strong>Maksimum</strong>--Izračuna minimum (najnižjo vrednost) celic v soseščini.",
	"@@Focal-Statistics_Statistics-Type_tag11@@": "<strong>Manjšina</strong>----Izračuna manjšino (vrednost, ki se pojavi najredkeje) celic v soseski.",
	"@@Focal-Statistics_Statistics-Type_tag13@@": "<strong>Percentil</strong>--Izračuna percentil celic v soseski. Določite lahko, kateri percentil se naj izračuna s parametrom<strong>vrednosti percentila</strong>.",
	"@@Focal-Statistics_Statistics-Type_tag17@@": "<strong>Razpon</strong>--Izračuna razpon (razlika med največjo in najmanjšo vrednostjo) celic v soseski.",
	"@@Focal-Statistics_Statistics-Type_tag19@@": "<strong>Standardni odklon</strong>--Izračuna standardni odklon celic v soseski.",
	"@@Focal-Statistics_Statistics-Type_tag21@@": "<strong>Vsota</strong>--Izračuna vsoto (seštevek vseh vrednost) celic v soseski.",
	"@@Focal-Statistics_Statistics-Type_tag23@@": "<strong>Raznolikost</strong>--Izračuna raznolikost (število edinstvenih vrednosti) celic v soseski.",
	"@@Focal-Statistics_Statistics-Type_tag25@@": "Če je vhodni raster plavajoča vejica, so na voljo samo vrste srednje vrednosti, maksimuma, mediane, minimuma, percentila, razpona, standardnega odklona in statistike vsote.",
	"@@Focal-Statistics_Statistics-Type_tag26@@": "Za srednje vrednosti, mediano, percentil in standardni odklon je izhod vedno plavajoča vejica.",
	"@@Focal-Statistics_Statistics-Type_tag27@@": "Privzeta vrsta statistike je srednja vrednost.",
	"@@Geometric_Constant-Z_tag0@@": "Določite konstantno višino, ki se uporablja za geometrično funkcijo.",
	"@@Geometric_DEM_tag0@@": "Določite DMV, ki se uporablja za geometrično funkcijo. DMV v mozaičnem sklopu podatkov lahko uporabite kot rastrski sklop podatkov ali mozaični sklop podatkov, katerega izhod je DMV.",
	"@@Geometric_Geoid_tag0@@": "Večina višinskih sklopov podatkov, kot so USGS NED ali višine sveta ArcGIS Online, so ortometrične višine, tako da je za združljivost s satelitskimi RPC-ji, ki zahtevajo elipsoidne višine, treba izbrati geoidni popravek. Obkljukajte izbirno polje <strong>geoid</strong>, da dodelite geoidni (EGM96) popravek z-vrednostim, razen če se vaš DMV že sklicuje na elipsoidne višine.",
	"@@Geometric_Method_tag0@@": "Izberite višinsko metodo za geometrično funkcijo.",
	"@@Geometric_Method_tag1@@": "Uporabi konstanto Z--Določite konstantno višino za izvedbo geometrične funkcije.",
	"@@Geometric_Method_tag2@@": "Uporabi DMV--Določite DMV za izvedbo geometrične funkcije.",
	"@@Geometric_Raster_tag0@@": "Vhodni raster.",
	"@@Geometric_Z-Factor_tag0@@": "Satelitski racionalni polinomski koeficienti (RPC) se za višinske sklope podatkov z navpičnimi enotami merijo v metrih. Če vaša višina uporablja druge navpične enote, vnesite <strong>Z-faktor</strong>, da jih pretvorite v metre. Če so vaše višinske enote na primer v čevljih, boste za pretvorbo višinskih enot iz čevljev v metre uporabili vrednost 0,3048.",
	"@@Geometric_Z-Offset_tag0@@": "Osnovna vrednost, ki se doda višinski vrednosti v DMV. Ta se lahko uporabi za spremembo odmika višinskih vrednosti, ki se ne začnejo z morsko gladino.",
	"@@Geometric_Tolerance_tag0@@": "Določite največjo dopustno napako v geometrijski funkciji, podano v številu slikovnih pik. Privzeto za vrsto rastra NITF (NCDRD) je dve.",
	"@@Grayscale_Raster_tag0@@": "Vhodni raster.",
	"@@Grayscale_Conversion-Parameters_tag0@@": "Ponderji za vsak pas, ki sestavlja vhodni raster.",
	"@@Greater-Than_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Greater-Than_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Greater-Than_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Greater-Than_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Greater-Than_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Greater-Than_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Greater-Than_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Greater-Than_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Greater-Than_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Greater-Than_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Greater-Than_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Greater-Than_Raster_tag0@@": "Preizkušanje vnosa, da se določi, ali je večji od drugega vnosa.",
	"@@Greater-Than_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Greater-Than_Raster2_tag0@@": "Vnos, s katerim se preizkuša prvi vnos, ki je večji od.",
	"@@Greater-Than_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Greater-Than-Equal_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Greater-Than-Equal_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Greater-Than-Equal_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Greater-Than-Equal_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Greater-Than-Equal_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Greater-Than-Equal_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Greater-Than-Equal_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Greater-Than-Equal_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Greater-Than-Equal_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Greater-Than-Equal_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Greater-Than-Equal_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Greater-Than-Equal_Raster_tag0@@": "Preizkušanje vnosa, da se določi, ali je večji od drugega vnosa ali enak.",
	"@@Greater-Than-Equal_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Greater-Than-Equal_Raster2_tag0@@": "Vnos, s katerim se preizkuša prvi vnos, ki je večji od ali enak.",
	"@@Greater-Than-Equal_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Heat-Index_Heat-Index-Units_tag0@@": "Merska enota, povezana z izhodnim rastrom. Razpoložljive izhodne enote so Celzij, Fahrenheit in Kelvin.",
	"@@Heat-Index_Relative-Humidity-Raster_tag0@@": "Enopasovni raster, pri katerem vrednosti pikslov predstavljajo relativno vlažnost kot odstotno vrednost med 0 in 100.",
	"@@Heat-Index_Temperature-Raster_tag0@@": "Enopasovni raster, pri katerem vrednosti pikslov predstavljajo okoliško temperaturo zraka.",
	"@@Heat-Index_Temperature-Units_tag0@@": "Merska enota, povezana z vhodnim temperaturnim rastrom. Razpoložljive vhodne enote so Celzij, Fahrenheit in Kelvin.",
	"@@Hillshade_Altitude_tag0@@": "Višina nad tlemi je višinski kot sonca nad obzorjem in se razprostira od 0 do 90 stopinj. Vrednost 0 stopinj ponazarja, da je sonce na obzorju, tj. na enaki vodoravni ravnini kot referenčni okvir. Vrednost 90 stopinj ponazarja, da je sonce neposredno nad nami.",
	"@@Hillshade_Altitude_tag1@@": "Ta parameter je veljaven samo, ko je<strong>tip senčenega reliefa</strong> <strong>tradicionalen</strong> . Privzeta vrednost je 45 stopinj nad obzorjem.",
	"@@Hillshade_Azimuth_tag0@@": "Azimut je relativni položaj sonca na obzorju (v stopinjah). Ta položaj je ponazorjen s kotom sonca, izmerjenim v obratni smeri od severa. Azimut 0 stopinj predstavlja sever, vzhod je 90 stopinj, jug 180 stopinj in zahod 270 stopinj.",
	"@@Hillshade_Azimuth_tag1@@": "Ta parameter je veljaven samo, ko je<strong>tip senčenega reliefa</strong> <strong>tradicionalen</strong> . Privzeta vrednost je 315 stopinj s severozahodne strani.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag0@@": "Z uporabo te možnosti se izognete artefaktom prevzorčenja, ki se lahko pojavijo na rastrskih robovih. Izhodni piksli na rastrskem robu ali poleg pikslov brez podatkov bodo zasedeni brez podatkov; zato je priporočljivo, da se ta parameter uporablja samo z mozaičnimi sklopi podatkov, ki se prekrivajo. Ko so na voljo prekrivajoči se piksli, bodo območja brez podatkov namesto praznih pikslov prikazovala vrednosti prekrivajočih se pikslov.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag1@@": "Nepotrjeno--Za prevzorčenje senčenega reliefa bo enotno dodano bilinearno prevzorčenje. To možnost uporabite, če je mozaični sklop podatkov, ki vsebuje vaše podatke višinskega rastra, združen čelno. To je privzeta vrednost.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag2@@": "Potrjeno--V senčenem reliefu bo uporabljeno bilinearno prevzorčenje, razen na robovih rastrov ali poleg pikslov brez podatkov. Ti piksli bodo zasedeni brez podatkov in bodo prikazovali prekrivajoče se vrednosti pikslov, s čimer bodo zmanjšali učinke ostrih robov, ki bi se drugače lahko pojavili. To možnost uporabite, ko mozaični sklop podatkov, ki vsebuje vaše podatke višinskega rastra, sestavljajo prekrivajoči se elementi ali ploščice.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag3@@": "Rezultati funkcije so lahko odvisni od podatkov. Če v vašem izhodu opazujete razmejitvene artefakte ploščice, izberite alternativno stanje potrditvenega polja.",
	"@@Hillshade_Hillshade-Type_tag0@@": "Nadzoruje vir osvetljenosti za senčeni relief:",
	"@@Hillshade_Hillshade-Type_tag1@@": "Tradicionalno--Izračuna senčeni relief iz ene smeri osvetljenosti. To je privzeta vrednost. Nastavite lahko <strong>azimut</strong> in <strong>višino</strong> za nadzor lokacije vira svetlobe.",
	"@@Hillshade_Hillshade-Type_tag6@@": "Večsmerno--Združuje svetlobo iz različnih virov za predstavo izboljšane vizualizacije terena.",
	"@@Hillshade_Pixel-Size-Factor_tag0@@": "Dejavnik velikosti pikslov beleži spremembe merila, ko pregledovalnik povečuje in pomanjšuje kartni prikaz. Nadzoruje stopnjo, pri kateri se <strong>Z-faktor</strong> spremeni.",
	"@@Hillshade_Pixel-Size-Factor_tag3@@": "Ta parameter je veljaven samo, ko je tip<strong>spremembe merila</strong> <strong>prilagojen</strong>. Privzeta vrednost je 0,024.",
	"@@Hillshade_Pixel-Size-Power_tag0@@": "Potenca velikosti pikslov beleži višinske spremembe (ali spremembe merila), ko pregledovalnik povečuje in pomanjšuje kartni prikaz. Eksponent, dodeljen izrazu velikosti piksla v enačbi, nadzoruje stopnjo, pri kateri se <strong>Z-faktor</strong> spremeni, da se izogne precejšnjim izgubam reliefa.",
	"@@Hillshade_Pixel-Size-Power_tag3@@": "Ta parameter je veljaven samo, ko je tip<strong>spremembe merila</strong> <strong>prilagojen</strong>. Privzeta vrednost je 0,664.",
	"@@Hillshade_Raster_tag0@@": "Vhodni višinski sklop podatkov.",
	"@@Hillshade_Scaling_tag0@@": "Zasenčeni rezultat se dinamično izmeri s prilagajanjem z-faktorja z uporabo ene izmed dveh metod:",
	"@@Hillshade_Scaling_tag1@@": "Prilagojeno--To omogoča nelinearno prilagajanje z uporabo privzetih vrednosti<strong>potence velikosti pikslov</strong> in <strong>faktorja velikosti pikslov</strong> ki sprejmejo široko paleto višinskih sprememb (spremembe merila) pri povečevanju in pomanjševanju pregledovalnika. Nastavitev parametra <strong>Prilagojeno</strong>je priporočena, ko uporabljate svetovni sklop podatkov.",
	"@@Hillshade_Scaling_tag8@@": "Brez--Spreminjanje merila ni dodeljeno. To je primerno za enojni rastrski sklop podatkov, ki pokriva lokalno območje. To ni priporočeno za svetovne sklope podatkov z velikimi spremembami višine ali karte z več merili, saj bodo pri majhnem merilu ustvarili relief terena z malo spremembami.",
	"@@Hillshade_Z-Factor_tag0@@": "Z-faktor je faktor skaliranja, ki se uporablja za pretvarjanje vrednosti višin za dva namena:",
	"@@Hillshade_Z-Factor_tag1@@": "Pretvarjanje višinskih enot (kot so metri ali čevlji) v vodoravne koordinatne enote sklopa podatkov, ki so lahko čevlji, metri ali stopinje.",
	"@@Hillshade_Z-Factor_tag2@@": "Dodajanje navpičnega povečevanja za vizualni učinek.",
	"@@Int_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Int_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Int_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Int_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Int_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Int_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Int_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Int_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Int_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Int_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Int_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Int_Raster_tag0@@": "Vhodni raster, ki bo pretvorjen v celo število.",
	"@@Interpolate-Irregular-Data_Cellsize_tag0@@": "Velikost celice za izhodni raster bo zaznana samodejno; vseeno lahko to spremenite. Medtem ko lahko velikost celice spremenite, bo obseg rastrskega sklopa podatkov ostal enak.",
	"@@Interpolate-Irregular-Data_Input-Samples_tag0@@": "Vhodni točkovni podatki.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag0@@": "Za to funkcijo obstajajo štiri metode za prevzorčenje:",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag1@@": "<strong>Obtežena obrnjena razdalja</strong>--Določa vrednosti celic z uporabo linearno obtežene kombinacije nabora vzorčnih točk ali celic. Ponder je funkcija obrnjene razdalje od znanih točk ali celic.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag3@@": "<strong>Linearno redčenje</strong>--Uporablja triangulirano nepravilno omrežje iz središčnih točk vsake celice v nepravilnem rastru za interpolacijo površine, ki se nato pretvori v pravilni raster.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag5@@": "<strong>Naravni sosed</strong>--Najde najbližji podizbor vhodnih vzorcev za točko poizvedbe in jim za interpolacijo vrednosti doda uteži glede na sorazmerna območja.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag7@@": "<strong>Najbližji sosed</strong>--Izračuna vrednost pikslov z uporabo najbližjega piksla. Če izhodiščni piksel ne obstaja, v izhodu ni mogoče ustvariti novega piksla. To je privzeta vrednost.",
	"@@Interpolate-Irregular-Data_Search-Radius_tag0@@": "Prepozna število pikslov, ki bodo vključeni v izbrano metodo prevzorčenja. Privzeta vrednost je ${3} pikslov.",
	"@@Interpolate-Irregular-Data_Value-Field_tag0@@": "Če kot vhod izberete geoobjektni razred točke, boste v atributni tabeli morali določiti polje z vrednostjo točk",
	"@@Is-Null_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Is-Null_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Is-Null_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Is-Null_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Is-Null_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Is-Null_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Is-Null_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Is-Null_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Is-Null_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Is-Null_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Is-Null_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Is-Null_Raster_tag0@@": "Preizkušanje vhodnega rastra za prepoznavanje celic, ki so ${NoData} (brez vrednosti).",
	"@@Is-Null_Raster_tag1@@": "Tip vnosa je lahko celo število ali plavajoča vejica.",
	"@@Key-Metadata_Band-Names_tag0@@": "To se uporablja za preglasitev imen pasov rastra. Ta niz, ki ga ločuje vejica, predstavlja posodobljena imena pasov.",
	"@@Key-Metadata_Band-Names_tag1@@": "Ta parameter je izbiren.",
	"@@Key-Metadata_Metadata-JSON_tag0@@": "Ključni metapodatki, ki bodo injicirani v izhodni raster, opisani kot niz JSON, predstavljajo zbirko parov ključne vrednosti. Sledi primer niza JSON, ki se lahko uporabi kot vnos za to funkcijo. Vsi vnosi za ta parameter bi naj sledili istemu formatu.",
	"@@Key-Metadata_Metadata-JSON_tag1@@": "Niz JSON, ki predstavlja ključne metapodatke",
	"@@Key-Metadata_Metadata-JSON_tag2@@": "{ \"CloudCover\": 4, \"BandProperties\":[ { \"BandName\": \"Blue\", \"WavelengthMin\": 445, \"WavelengthMax\": 516 }, { \"BandName\": \"Green\", \"WavelengthMin\": 506, \"WavelengthMax\": 595 }, ]}",
	"@@Key-Metadata_Property-Name_tag0@@": "Ime ključne lastnosti na stopnji sklopa podatkov, ki jo je treba preglasiti.",
	"@@Key-Metadata_Raster_tag0@@": "Rastrski ali mozaični sklop podatkov, ki vsebuje ključne metapodatke, ki jih želite vstaviti ali prepisati.",
	"@@Key-Metadata_Value_tag0@@": "Preglasitvena vrednost ključne lastnosti na stopnji sklopa podatkov, ki jo želite nastaviti.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag0@@": "Ta parameter simulira povečan trud za obvladovanje stroškov, ko se akumuliran strošek povečuje. Uporablja se kot model utrujenosti popotnika. Naraščajoči akumuliran strošek se za dosego celice pomnoži s stopnjo odpornosti in doda strošku, da se premakne v naslednjo celico.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag1@@": "To je spremenjena različica sestavljene formule obrestne mere, ki se uporablja za izračun očitnega stroška za premikanje skozi celico. S povečevanjem stopnje odpornosti se povečuje strošek pozneje obiskanih celic. Večja kot je stopnja odpornosti, višji je strošek za dosego naslednje celice, ki je sestavljena za vsak nadaljnji premik. Ker je stopnja odpornosti podobna sestavljeni stopnji in so vrednosti akumuliranega stroška na splošno zelo visoke, se priporočajo stopnje odpornosti, kot so 0,005 ali manjše, odvisno od vrednosti akumuliranega stroška.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Least-Cost-Path_Capacity_tag0@@": "Določa potrošnikovo kapaciteto stroškov za vir. Izračuni stroškov se nadaljujejo za vsak vir, dokler ni dosežena določena kapaciteta,",
	"@@Least-Cost-Path_Capacity_tag1@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Least-Cost-Path_Cost-Raster_tag0@@": "Zahtevan vhodni raster, ki določa strošek ali impedanco za planimetrično premikanje skozi posamezno celico. Vrednost na lokaciji vsake celice predstavlja razdaljo stroškov na enoto za premikanje skoznjo. Vrednost lokacije vsake celice je pomnožena z resolucijo celice, hkrati pa upošteva diagonalno premikanje, da se pridobi celoten strošek premika skozi celico.",
	"@@Least-Cost-Path_Cost-Raster_tag1@@": "Vrednosti <strong>rastra stroškov</strong> so lahko celo število ali število s plavajočo vejico, vendar ne morejo biti negativne ali ničla.",
	"@@Least-Cost-Path_Destination-Field_tag0@@": "Polje, uporabljeno za pridobitev vrednosti za ciljne lokacije.",
	"@@Least-Cost-Path_Destination-Raster_tag0@@": "Zahtevan vhodni raster, ki prepozna piksle, iz katerih je določena pot najmanjšega stroška do vira, ki je najmanj drag. Ta vhod sestavljajo piksli, ki imajo veljavne vrednosti, preostalim pikslom pa se mora dodeliti ${NoData}. Vrednosti 0 so veljavne.",
	"@@Least-Cost-Path_Maximum-Distance_tag0@@": "Prag, ki ga vrednosti akumuliranega stroška, ne morejo preseči. Če razdalja akumuliranega stroška preseže vrednost, bo izhodna vrednost za lokacijo celice ${NoData}. Največja razdalja določa obseg, za katerega se izračunajo razdalje akumuliranega stroška. Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag0@@": "Ta parameter omogoča nadzor načina potovanja ali magnitude na viru. Večji kot je zmnožek, večji je strošek za premikanje skozi posamezno celico.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag1@@": "Vrednosti morajo biti večje od nič. Privzeta vrednost je 1.",
	"@@Least-Cost-Path_Path-Type_tag0@@": "Ključna beseda, ki določa način, na katerega bodo v izračunih stroškov poti interpretirane vrednosti in območja na vhodnih podatkih cilja:",
	"@@Least-Cost-Path_Path-Type_tag1@@": "<strong>Najboljše enojno</strong>--Za vse piksle vhodnih podatkov cilja pot najmanjšega stroška izhaja iz piksla z najmanj potmi najmanjšega stroška do izvornih celic.",
	"@@Least-Cost-Path_Path-Type_tag3@@": "<strong>Vsaka celica</strong>--Pot najmanjšega stroška se za vsak piksel z veljavnimi vrednostmi določi na vhodnih podatkih cilja in shrani na izhodni raster. Vsaka celica vhodnih podatkov cilja se obravnavana ločeno, iz celice pa je za vsako določena pot najmanjšega stroška.",
	"@@Least-Cost-Path_Path-Type_tag5@@": "<strong>Vsako območje</strong>--Pot najmanjšega stroška se za vsako območje z veljavnimi vrednostmi določi na vhodnih podatkih cilja in shrani na izhodni raster. Pot najmanjšega stroška za vsako območje se začne v pikslu z najmanjšimi stroški glede na razdaljo v območju.",
	"@@Least-Cost-Path_Source-Raster_tag0@@": "To je zahtevan vhodni raster, ki prepozna celice ali lokacije, za katere je izračunana najmanjša razdalja akumuliranega stroška za lokacijo vsake izhodne celice.",
	"@@Least-Cost-Path_Start-Cost_tag0@@": "Začetni strošek za izračune stroškov. Ta parameter omogoča specifikacijo fiksnih stroškov, povezanih z virom. Namesto, da bi začel pri strošku 0, bo algoritem stroškov začel z določeno vrednostjo.",
	"@@Least-Cost-Path_Start-Cost_tag1@@": "Vrednost mora biti 0 ali več. Privzeta vrednost je 0.",
	"@@Least-Cost-Path_Travel-Direction_tag0@@": "Določa smer popotnika pri uporabi stopnje odpornosti vira in začetnega stroška vira.",
	"@@Least-Cost-Path_Travel-Direction_tag1@@": "<strong>Iz vira</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom v vhodnem viru ter se premikala navzven proti neizvornim celicam. To je privzeta vrednost.",
	"@@Least-Cost-Path_Travel-Direction_tag3@@": "<strong>V vir</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom na vsaki neizvorni celici ter se premikala nazaj proti vhodnemu viru.",
	"@@Least-Cost-Path_Travel-Direction_tag5@@": "Določite ključno besedo <strong>Iz vira</strong> ali <strong>V vir</strong> , ki bo uporabljena na vseh virih, ali določite polje v <strong>izvornem rastru</strong> , ki vsebuje ključne besede za prepoznavo smeri potovanja za vsak vir. To polje mora vsebovati niz ${FROM_SOURCE} ali ${TO_SOURCE}.",
	"@@Less-Than_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Less-Than_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Less-Than_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Less-Than_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Less-Than_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Less-Than_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Less-Than_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Less-Than_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Less-Than_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Less-Than_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Less-Than_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Less-Than_Raster_tag0@@": "Preizkušanje vnosa, da se določi, ali je manjši od drugega vnosa.",
	"@@Less-Than_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Less-Than_Raster2_tag0@@": "Vnos, s katerim se preizkuša prvi vnos, ki je manjši od.",
	"@@Less-Than_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Less-Than-Equal_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Less-Than-Equal_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Less-Than-Equal_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Less-Than-Equal_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Less-Than-Equal_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Less-Than-Equal_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Less-Than-Equal_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Less-Than-Equal_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Less-Than-Equal_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Less-Than-Equal_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Less-Than-Equal_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Less-Than-Equal_Raster_tag0@@": "Preizkušanje vnosa, da se določi, ali je manjši od drugega vnosa ali enak.",
	"@@Less-Than-Equal_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Less-Than-Equal_Raster2_tag0@@": "Vnos, s katerim se preizkuša prvi vnos, ki je manjši od ali enak.",
	"@@Less-Than-Equal_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Ln_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Ln_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Ln_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Ln_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Ln_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Ln_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Ln_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Ln_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Ln_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Ln_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Ln_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Ln_Raster_tag0@@": "Vhodne vrednosti, za katere je treba najti naravni logaritem (Ln).",
	"@@Log10_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Log10_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Log10_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Log10_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Log10_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Log10_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Log10_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Log10_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Log10_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Log10_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Log10_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Log10_Raster_tag0@@": "Vhodne vrednosti, za katere je treba najti logaritem z osnovo 10.",
	"@@Log2_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Log2_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Log2_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Log2_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Log2_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Log2_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Log2_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Log2_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Log2_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Log2_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Log2_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Log2_Raster_tag0@@": "Vhodne vrednosti, za katere je treba najti logaritem z osnovo 2.",
	"@@Lookup_Field_tag0@@": "Polje, ki vsebuje želene vrednosti za novi raster.",
	"@@Lookup_Field_tag1@@": "Biti mora števiIski tip.",
	"@@Lookup_Raster_tag0@@": "Vhodni raster, ki vsebuje polje, iz katerega je treba ustvariti novi raster.",
	"@@Lookup_Raster_tag1@@": "Lahko je celo število ali plavajoča vejica.",
	"@@Mask_Included-Ranges_tag0@@": "Vključene razpone lahko določite za vsak pas tako, da določite najmanjšo in največjo vrednost; vse vrednosti izven tega razpona bodo vrnjene kot ${NoData}. Piksel je vključen, če je njegova vrednost znotraj katerega koli določenega razpona. Če ima torej pas 1 razpon 5-10 in pas 2 razpon 15-20 ter ima pas 1 vrednost piksla 8, piksel ne bo maskiran.",
	"@@Mask_NoData-Interpretation_tag0@@": "To se nanaša na to, kako bodo <strong>vrednosti ${NoData}</strong> vplivale na izhodno sliko.",
	"@@Mask_NoData-Interpretation_tag3@@": "Izbirate lahko med naslednjima dvema možnostima:",
	"@@Mask_NoData-Interpretation_tag4@@": "<strong>Ujemanje z vsemi</strong>--Vrednosti ${NoData}, ki jih določite za vsak pas, se morajo pojaviti v enakem pikslu, da izhodna slika vsebuje piksel ${NoData}.",
	"@@Mask_NoData-Interpretation_tag6@@": "<strong>Ujemanje s katero koli</strong>--Če se vrednost ${NoData}, ki jo določite, pojavi za piksel v določenem pasu, bo ta piksel v izhodni sliki ${NoData}. To je privzeta vrednost.",
	"@@Mask_NoData-Values_tag0@@": "Vrednosti brez podatkov lahko določite za vsak pas. Določite lahko več kot samo eno vrednost, če vnesete seznam, ločen s presledki.",
	"@@Mask_Raster_tag0@@": "Vhodni raster.",
	"@@Minus_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Minus_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Minus_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Minus_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Minus_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Minus_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Minus_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Minus_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Minus_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Minus_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Minus_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Minus_Raster_tag0@@": "Vnos, od katerega se odštejejo vrednosti drugega vnosa.",
	"@@Minus_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Minus_Raster2_tag0@@": "Vrednosti vnosa, od katerih se odštejejo vrednosti prvega vnosa.",
	"@@Minus_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@ML-Classify_Raster_tag0@@": "Vhodni raster, ki se določi z uporabo klasifikacijskega logaritma največje verjetnosti.",
	"@@ML-Classify_Signature-File-or-URL_tag0@@": "Podpisna datoteka ${.gsg}.",
	"@@Mod_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Mod_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Mod_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Mod_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Mod_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Mod_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Mod_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Mod_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Mod_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Mod_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Mod_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Mod_Raster_tag0@@": "Vhod števca.",
	"@@Mod_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Mod_Raster2_tag0@@": "Vhod imenovalca.",
	"@@Mod_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Mosaic-Rasters_Operation_tag0@@": "Razrešite kateri koli spor, če imate dele dveh ali več slik, ki se prekrivajo. Možnosti vključujejo naslednje:",
	"@@Mosaic-Rasters_Operation_tag1@@": "<strong>Mešanje</strong>--Izračunajte in prikažite povprečje prekrivajočih se pikslov tako, da pikslom, ki so bližje sosednjim slikam, dodelite večjo utež za gladkejšo izhodno sliko. To je privzeta vrednost.",
	"@@Mosaic-Rasters_Operation_tag3@@": "<strong>Prva</strong>--Prikažite piksle od prve slike na seznamu slik, ki prekrivajo dano površino.",
	"@@Mosaic-Rasters_Operation_tag5@@": "<strong>Zadnja</strong>--Prikažite piksle od zadnje slike na seznamu slik, ki prekrivajo dano površino.",
	"@@Mosaic-Rasters_Operation_tag7@@": "<strong>Maksimum</strong>--Prikažite piksel z največjo vrednostjo med vsemi prekrivajočimi se sloji. <strong>Srednja vrednost</strong>--Izračunajte in prikažite povprečno vrednost prekrivajočih se pikslov.",
	"@@Mosaic-Rasters_Operation_tag9@@": "<strong>Povprečje</strong>--Izračunajte in prikažite povprečno vrednost prekrivajočih se pikslov.",
	"@@Mosaic-Rasters_Operation_tag11@@": "<strong>Minimum</strong>--Prikažite piksel z najnižjo vrednostjo med vsemi prekrivajočimi se sloji. Ta možnost vam ne zagotavlja prikaza pikslov samo ene slike na prekrivajoči se površini, temveč kombinacijo vseh morebitnih slojev.",
	"@@Mosaic-Rasters_Rasters_tag0@@": "Izberite raster, katerega mozaik želite sestaviti, da oblikujete eno sliko.",
	"@@NDVI_Infrared-Band-ID_tag0@@": "Določa ID pasu, ki predstavlja skoraj infrardeči del elektromagnetnega spektra.",
	"@@NDVI_Raster_tag0@@": "Vhodni multispektralni raster.",
	"@@NDVI_Scientific-Output_tag0@@": "Razpon izhodnih vrednosti bo od -1,0 do 1,0, kar se uporablja v številnih znanstvenih aplikacijah.",
	"@@NDVI_Visible-Band-ID_tag0@@": "Določa ID pasu, ki predstavlja rdeči del elektromagnetnega spektra.",
	"@@NDVI-Colorized_Color-Ramp_tag0@@": "S spustnega seznama izberite predhodno določeno barvno shemo.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag0@@": "Izberite, katera vrsta barvne sheme naj obarva izhod NDVI:",
	"@@NDVI-Colorized_Color-Scheme-Type_tag1@@": "Barvna karta--S spustnega seznama izberite predhodno določeno barvno karta. Alternativno lahko brskate po obstoječi ohranjeni datoteki barvne karte.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag2@@": "Barvna lestvica--S spustnega seznama izberite predhodno določeno barvno shemo.",
	"@@NDVI-Colorized_Colormap_tag0@@": "S spustnega seznama izberite predhodno določeno barvno karto. Alternativno lahko brskate po obstoječi datoteki barvne karte.",
	"@@NDVI-Colorized_Infrared-Band-ID_tag0@@": "Določa ID pasu, ki predstavlja skoraj infrardeči del elektromagnetnega spektra.",
	"@@NDVI-Colorized_Raster_tag0@@": "Vhodni multispektralni raster.",
	"@@NDVI-Colorized_Scientific-Output_tag0@@": "Razpon izhodnih vrednosti bo od -1,0 do 1,0, kar se uporablja v številnih znanstvenih aplikacijah.",
	"@@NDVI-Colorized_Visible-Band-ID_tag0@@": "Določa ID pasu, ki predstavlja rdeči del elektromagnetnega spektra.",
	"@@Negate_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Negate_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Negate_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Negate_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Negate_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Negate_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Negate_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Negate_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Negate_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Negate_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Negate_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Negate_Raster_tag0@@": "Vhodni raster, katerega predznak bo spremenjen (pomnožen z -1).",
	"@@Nibble_Mask-Raster_tag0@@": "Uporaba zahtevanega vhodnega rastra kot maska.",
	"@@Nibble_Mask-Raster_tag1@@": "Celice z vrednostjo brez podatkov bodo v vhodnem <strong>rastru</strong> zmanjšane.",
	"@@Nibble_Mask-Raster_tag4@@": "Raster maske je lahko celo število ali tip plavajoče vejice.",
	"@@Nibble_Nibble-NoData-cells_tag0@@": "Določa, ali bodo celice brez podatkov v vhodnem rastru ostale brez podatkov v izhodnem rastru.",
	"@@Nibble_Nibble-NoData-cells_tag1@@": "<strong>Ne</strong>--Določa, ali bodo celice brez podatkov v vhodnem rastru ostale brez podatkov v izhodu. To je privzeta vrednost.",
	"@@Nibble_Nibble-NoData-cells_tag3@@": "<strong>Da</strong>--Določa, ali se celice brez podatkov v vhodnem rastru in znotraj maske lahko zmanjšajo na veljavne vrednosti izhodne celice.",
	"@@Nibble_Raster_tag0@@": "Zahtevani vhodni raster, ki bo zmanjšan.",
	"@@Nibble_Raster_tag1@@": "Vhodni raster je lahko celo število ali tip plavajoče vejice.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag0@@": "Določa, ali vrednosti ${NoData} v vhodnem rastru dovoljeno zmanjšati na površino, ki jo določa raster maske.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag1@@": "<strong>Da</strong>--Določa, ali bo vrednost najbližjega soseda uporabljena, ne glede ali je v vhodnem rastru vrednost ${NoData} ali druga podatkovna vrednost. Vrednosti ${NoData} v vhodnem rastru se lahko prosto zmanjšajo na površine, ki jih določa maska, če so najbližji sosed. To je privzeta vrednost.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag3@@": "<strong>Ne</strong>--Določa, da se na površino, določeno v rastru maske, lahko zmanjšajo samo podatkovne vrednosti. Vrednosti ${NoData} v vhodnem rastru se ne smejo zmanjšati na površine, ki jih določa maska, če so najbližji sosed.",
	"@@Nibble_Zone-Raster_tag0@@": "Vhodni raster območja",
	"@@Nibble_Zone-Raster_tag1@@": "Območje so vse celice v rastru, ki imajo enako vrednost, ne glede če so sosednje ali ne. Sloj vhodnega območja določa obliko, vrednosti in lokacije območij. Raster območja je lahko celo število ali tip plavajoče vejice.",
	"@@Not-Equal_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Not-Equal_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Not-Equal_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Not-Equal_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Not-Equal_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Not-Equal_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Not-Equal_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Not-Equal_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Not-Equal_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Not-Equal_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Not-Equal_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Not-Equal_Raster_tag0@@": "Vnos, ki ga bo drugi vnos primerjal za neenakost.",
	"@@Not-Equal_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Not-Equal_Raster2_tag0@@": "Vnos, ki ga bo za neenakost primerjal prvi vnos.",
	"@@Not-Equal_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Pansharpening_Multispectral_tag0@@": "Multispektralni raster, ki ga želite izostriti z uporabo pankromatskega pasu.",
	"@@Pansharpening_Panchromatic_tag0@@": "Enopasovni raster z visoko ločljivostjo, ki se bo uporabil za izostritev nižje ločljivosti multispektralnega rastra.",
	"@@Pansharpening_Pansharpening-Type_tag0@@": "Izberite izostritveni algoritem, ki ga želite uporabiti.",
	"@@Pansharpening_Pansharpening-Type_tag1@@": "Brovey--Uporablja algoritem Brovey, ki sloni na spektralnem modeliranju za podatkovno fuzijo.",
	"@@Pansharpening_Pansharpening-Type_tag2@@": "Esri--Uporablja algoritem Esri, ki sloni na spektralnem modeliranju za podatkovno fuzijo.",
	"@@Pansharpening_Pansharpening-Type_tag3@@": "Gram-Schmidt--Uporablja algoritem spektralne izostritve Gram-Schmidt za multispektralne podatke.",
	"@@Pansharpening_Pansharpening-Type_tag4@@": "IHS--Uporablja intenzivnost, odtenek in nasičenost barvnega prostora za podatkovno fuzijo.",
	"@@Pansharpening_Pansharpening-Type_tag5@@": "Srednja vrednost--Uporablja povprečno vrednost med rdečimi, zelenimi in modrimi vrednostmi ter vrednostjo pankromatskega piksla.",
	"@@Pansharpening_Weights_tag0@@": "Določite širine za rdeče, zelene, modre in infrardeče pasove. Vse vrednosti na bodo v razponu od 0 do 1.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Ta parameter simulira povečan trud za obvladovanje stroškov, ko se akumuliran strošek povečuje. Uporablja se kot model utrujenosti popotnika. Naraščajoči akumuliran strošek se za dosego celice pomnoži s stopnjo odpornosti in doda strošku, da se premakne v naslednjo celico.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "To je spremenjena različica sestavljene formule obrestne mere, ki se uporablja za izračun očitnega stroška za premikanje skozi celico. S povečevanjem stopnje odpornosti se povečuje strošek pozneje obiskanih celic. Večja kot je stopnja odpornosti, višji je strošek za dosego naslednje celice, ki je sestavljena za vsak nadaljnji premik. Ker je stopnja odpornosti podobna sestavljeni stopnji in so vrednosti akumuliranega stroška na splošno zelo visoke, se priporočajo stopnje odpornosti, kot so 0,005 ali manjše, odvisno od vrednosti akumuliranega stroška.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Path-Distance_Capacity_tag0@@": "Določa potrošnikovo kapaciteto stroškov za vir. Izračuni stroškov se nadaljujejo za vsak vir, dokler ni dosežena določena kapaciteta,",
	"@@Path-Distance_Capacity_tag1@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Path-Distance_Cost-Raster_tag0@@": "Zahtevan vhodni raster, ki določa strošek ali impedanco za planimetrično premikanje skozi posamezno celico. Vrednost na lokaciji vsake celice predstavlja razdaljo stroškov na enoto za premikanje skoznjo. Vrednost lokacije vsake celice je pomnožena z resolucijo celice, hkrati pa upošteva diagonalno premikanje, da se pridobi celoten strošek premika skozi celico.",
	"@@Path-Distance_Cost-Raster_tag1@@": "Vrednosti <strong>rastra stroškov</strong> so lahko celo število ali število s plavajočo vejico, vendar ne morejo biti negativne ali ničla.",
	"@@Path-Distance_horizontalfactor_tag0@@": "<p>Določa odnos med horizontalnim faktorjem stroška in horizontalnim relativnim kotom premikanja (HRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: HF in HRMA. HF pomeni horizontalni faktor, ki določa horizontalno težavnost, ki se pojavi pri premikanju od ene celice do druge. HRMA pomeni horizontalni relativni kot premikanja, ki določa kot med horizontalno smerjo od celice in smerjo premikanja.</p><p><strong>Tipi horizontalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarni</strong>----Ponazarja, da je HF nastavljen na vrednost, povezano s faktorjem nič, če je HRMA manjši od kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Naprej</strong>--Določa, da je dovoljeno samo premikanje naprej. HRMA mora biti večji od ali enak 0 in manjši od 90 stopinj (0 &lt;= HRMA &lt; 90). Če je HRMA večji od 0 in manjši od 45 stopinj, je HF za celico nastavljen na vrednost, povezano s faktorjem nič. Če je HRMA večji od ali enak 45 stopinjam, se uporabi modifikator stranske vrednosti. HF za kateri koli HRMA, ki je enak ali večji od 90 stopinj, je nastavljen na neskončno vrednost.</li><li><strong>Linearno</strong>--Določa, da je HF linearna funkcija HRMA.</li><li><strong>Obratno linearno</strong>--Določa, da je HF obratna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona horizontalnega faktorja, ki se uporablja za določanje vrednosti HF, uporabila tabelna datoteka.</li></ul><p>Modifikatorji horizontalnih faktorjev vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa horizontalni faktor, ki se bo uporabil, ko je HRMA nič. Ta faktor določa položaj y-presečišča za katero koli funkcijo horizontalnega faktorja.</li><li><strong>Kot rezanja</strong>--Določa kot HRMA, po katerem bo HF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama horizontalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Stranska vrednost</strong>--Določa HF, če je HRMA večji od ali enak 45 stopinjam in manjši od 90 stopinj, ko je določena ključna beseda horizontalnega faktorja <strong>Naprej</strong>.</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa HF.</li></ul>",
	"@@Path-Distance_Horizontal-Raster_tag0@@": "Raster, ki določa horizontalno smer vsake celice.",
	"@@Path-Distance_Horizontal-Raster_tag1@@": "Vrednosti rastra morajo biti cela števila v razponu od 0 do 360, pri čemer se 0 stopinj nahaja severno ali proti vrhu zaslona, in se povečevati v smeri urinega kazalca. Ploskim območjem se naj dodeli vrednost -1. Vrednosti na vsaki lokaciji bodo uporabljene skupaj s <strong>horizontalnim faktorjem</strong> za določanje horizontalnega stroška, ki nastane pri premikanju od celice do sosednjih celic.",
	"@@Path-Distance_Maximum-Distance_tag0@@": "Prag, ki ga vrednosti akumuliranega stroška, ne morejo preseči. Če razdalja akumuliranega stroška preseže vrednost, bo izhodna vrednost za lokacijo celice brez podatkov. Največja razdalja določa obseg, za katerega se izračunajo razdalje akumuliranega stroška. Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Zmnožek za uporabo z vrednostmi stroška.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Ta parameter omogoča nadzor načina potovanja ali magnitude na viru. Večji kot je zmnožek, večji je strošek za premikanje skozi posamezno celico.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti morajo biti večje od nič. Privzeta vrednost je 1.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Path-Distance_Source-Raster_tag0@@": "Zahtevan vhodni raster izvornih lokacij.",
	"@@Path-Distance_Source-Raster_tag1@@": "To je raster, ki prepozna celice ali lokacije, za katere je izračunana najmanjša razdalja akumuliranega stroška za lokacijo vsake izhodne celice.",
	"@@Path-Distance_Source-Raster_tag2@@": "Lahko gre za celo število ali tip plavajoče vejice.",
	"@@Path-Distance_Start-Cost_tag0@@": "Začetni strošek za izračune stroškov. Ta parameter omogoča specifikacijo fiksnih stroškov, povezanih z virom. Namesto, da bi začel pri strošku 0, bo algoritem stroškov začel z določeno vrednostjo.",
	"@@Path-Distance_Start-Cost_tag1@@": "Vrednost mora biti 0 ali več. Privzeta vrednost je 0.",
	"@@Path-Distance_Surface-Raster_tag0@@": "Raster, ki določa višinske vrednosti na vsaki lokaciji celice.",
	"@@Path-Distance_Surface-Raster_tag1@@": "Vrednosti se uporabljajo za izračun dejanske površinske razdalje, zajete pri premikanju med celicami.",
	"@@Path-Distance_Travel-Direction_tag0@@": "Določa smer popotnika pri uporabi stopnje odpornosti vira in začetnega stroška vira.",
	"@@Path-Distance_Travel-Direction_tag1@@": "<strong>Iz vira</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom v vhodnem viru ter se premikala navzven proti neizvornim celicam. To je privzeta vrednost.",
	"@@Path-Distance_Travel-Direction_tag3@@": "<strong>V vir</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom na vsaki neizvorni celici ter se premikala nazaj proti vhodnemu viru.",
	"@@Path-Distance_Travel-Direction_tag5@@": "Določite ključno besedo <strong>Iz vira</strong> ali <strong>V vir</strong> , ki bo uporabljena na vseh virih, ali določite polje v <strong>izvornem rastru</strong> , ki vsebuje ključne besede za prepoznavo smeri potovanja za vsak vir. To polje mora vsebovati niz ${FROM_SOURCE} ali ${TO_SOURCE}.",
	"@@Path-Distance_verticalfactor_tag0@@": "<p>Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: VF in VRMA. VF pomeni vertikalni faktor, ki določa vertikalno težavnost, ki se pojavi pri premikanju od ene celice do druge. VRMA pomeni vertikalni relativni kot premikanja, ki določa naklonski kot med celico OD oz. celico procesiranja in celico DO.</p><p><strong>Tipi vertikalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarno</strong>--Določa, da je VF nastavljen na vrednost, povezano s faktorjem nič, če je VRMA večji od nizkega kota rezanja in manjši od visokega kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Linearno</strong>--Določa, da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Določa, da je VF linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA.</li><strong><li>Simetrično obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Cos</strong>--Določa VF kot funkcijo VRMA na osnovi kosinusa.</li><li><strong>Sec</strong>--Določa VF kot funkcijo VRMA na osnovi sekante.</li><li><strong>Cos-Sec</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Sec-Cos</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona vertikalnega faktorja, ki se uporablja za določanje vrednosti VF, uporabila tabelna datoteka.</ul><p></li>Modifikatorji vertikalnih ključnih besed vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa vertikalni faktor, ki se bo uporabil, ko je VRMA nič. Ta faktor določa položaj y-presečišča za določeno funkcijo. Po definiciji faktor nič ne velja za nobeno vertikalno trigonometrično funkcijo (COS, SEC, COS-SEC ali SEC-COS). Te funkcije določajo y-presečišče.</li><li><strong>Nizki kot rezanja</strong>--Določa kot VRMA, pod katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Visoki kot rezanja</strong>--Določa kot VRMA, nad katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama vertikalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa VF.</li></ul>",
	"@@Path-Distance_Vertical-Raster_tag0@@": "Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).",
	"@@Path-Distance_Vertical-Raster_tag1@@": "Vrednosti se uporabljajo za izračun naklona, ki se uporablja za prepoznavanje vertikalnega faktorja, ki nastane pri premikanju od ene celice do druge.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Ta parameter simulira povečan trud za obvladovanje stroškov, ko se akumuliran strošek povečuje. Uporablja se kot model utrujenosti popotnika. Naraščajoči akumuliran strošek se za dosego celice pomnoži s stopnjo odpornosti in doda strošku, da se premakne v naslednjo celico.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "To je spremenjena različica sestavljene formule obrestne mere, ki se uporablja za izračun očitnega stroška za premikanje skozi celico. S povečevanjem stopnje odpornosti se povečuje strošek pozneje obiskanih celic. Večja kot je stopnja odpornosti, višji je strošek za dosego naslednje celice, ki je sestavljena za vsak nadaljnji premik. Ker je stopnja odpornosti podobna sestavljeni stopnji in so vrednosti akumuliranega stroška na splošno zelo visoke, se priporočajo stopnje odpornosti, kot so 0,005 ali manjše, odvisno od vrednosti akumuliranega stroška.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Path-Distance-Allocation_Capacity_tag0@@": "Določa potrošnikovo kapaciteto stroškov za vir. Izračuni stroškov se nadaljujejo za vsak vir, dokler ni dosežena določena kapaciteta,",
	"@@Path-Distance-Allocation_Capacity_tag1@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Path-Distance-Allocation_Cost-Raster_tag0@@": "Zahtevan vhodni raster, ki določa strošek ali impedanco za planimetrično premikanje skozi posamezno celico. Vrednost na lokaciji vsake celice predstavlja razdaljo stroškov na enoto za premikanje skoznjo. Vrednost lokacije vsake celice je pomnožena z resolucijo celice, hkrati pa upošteva diagonalno premikanje, da se pridobi celoten strošek premika skozi celico.",
	"@@Path-Distance-Allocation_Cost-Raster_tag1@@": "Vrednosti <strong>rastra stroškov</strong> so lahko celo število ali število s plavajočo vejico, vendar ne morejo biti negativne ali ničla.",
	"@@Path-Distance-Allocation_horizontalfactor_tag0@@": "<p>Določa odnos med horizontalnim faktorjem stroška in horizontalnim relativnim kotom premikanja (HRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: HF in HRMA. HF pomeni horizontalni faktor, ki določa horizontalno težavnost, ki se pojavi pri premikanju od ene celice do druge. HRMA pomeni horizontalni relativni kot premikanja, ki določa kot med horizontalno smerjo od celice in smerjo premikanja.</p><p><strong>Tipi horizontalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarni</strong>----Ponazarja, da je HF nastavljen na vrednost, povezano s faktorjem nič, če je HRMA manjši od kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Naprej</strong>--Določa, da je dovoljeno samo premikanje naprej. HRMA mora biti večji od ali enak 0 in manjši od 90 stopinj (0 &lt;= HRMA &lt; 90). Če je HRMA večji od 0 in manjši od 45 stopinj, je HF za celico nastavljen na vrednost, povezano s faktorjem nič. Če je HRMA večji od ali enak 45 stopinjam, se uporabi modifikator stranske vrednosti. HF za kateri koli HRMA, ki je enak ali večji od 90 stopinj, je nastavljen na neskončno vrednost.</li><li><strong>Linearno</strong>--Določa, da je HF linearna funkcija HRMA.</li><li><strong>Obratno linearno</strong>--Določa, da je HF obratna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona horizontalnega faktorja, ki se uporablja za določanje vrednosti HF, uporabila tabelna datoteka.</li></ul><p>Modifikatorji horizontalnih faktorjev vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa horizontalni faktor, ki se bo uporabil, ko je HRMA nič. Ta faktor določa položaj y-presečišča za katero koli funkcijo horizontalnega faktorja.</li><li><strong>Kot rezanja</strong>--Določa kot HRMA, po katerem bo HF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama horizontalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Stranska vrednost</strong>--Določa HF, če je HRMA večji od ali enak 45 stopinjam in manjši od 90 stopinj, ko je določena ključna beseda horizontalnega faktorja <strong>Naprej</strong>.</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa HF.</li></ul>",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag0@@": "Raster, ki določa horizontalno smer vsake celice.",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag1@@": "Vrednosti rastra morajo biti cela števila v razponu od 0 do 360, pri čemer se 0 stopinj nahaja severno ali proti vrhu zaslona, in se povečevati v smeri urinega kazalca. Ploskim območjem se naj dodeli vrednost -1. Vrednosti na vsaki lokaciji bodo uporabljene skupaj s <strong>horizontalnim faktorjem</strong> za določanje horizontalnega stroška, ki nastane pri premikanju od celice do sosednjih celic.",
	"@@Path-Distance-Allocation_Maximum-Distance_tag0@@": "Prag, ki ga vrednosti akumuliranega stroška, ne morejo preseči. Če razdalja akumuliranega stroška preseže vrednost, bo izhodna vrednost za lokacijo celice brez podatkov. Največja razdalja določa obseg, za katerega se izračunajo razdalje akumuliranega stroška. Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Zmnožek za uporabo z vrednostmi stroška.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Ta parameter omogoča nadzor načina potovanja ali magnitude na viru. Večji kot je zmnožek, večji je strošek za premikanje skozi posamezno celico.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti morajo biti večje od nič. Privzeta vrednost je 1.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Path-Distance-Allocation_Source-Field_tag0@@": "Polje, uporabljeno za dodelitev vrednosti izvornih lokacij. Biti mora tip celega števila. Če je <strong>raster vrednosti</strong> bil nastavljen, bodo vrednosti tega vhodnega sloja imele prednost pred katero koli nastavitvijo za <strong>izvorno polje</strong>.",
	"@@Path-Distance-Allocation_Source-Raster_tag0@@": "Zahtevan vhodni raster izvornih lokacij.",
	"@@Path-Distance-Allocation_Source-Raster_tag1@@": "To je raster, ki prepozna celice ali lokacije, za katere je izračunana najmanjša razdalja akumuliranega stroška za lokacijo vsake izhodne celice.",
	"@@Path-Distance-Allocation_Source-Raster_tag2@@": "Lahko gre za celo število ali tip plavajoče vejice.",
	"@@Path-Distance-Allocation_Start-Cost_tag0@@": "Začetni strošek za izračune stroškov. Ta parameter omogoča specifikacijo fiksnih stroškov, povezanih z virom. Namesto, da bi začel pri strošku 0, bo algoritem stroškov začel z določeno vrednostjo.",
	"@@Path-Distance-Allocation_Start-Cost_tag1@@": "Vrednost mora biti 0 ali več. Privzeta vrednost je 0.",
	"@@Path-Distance-Allocation_Surface-Raster_tag0@@": "Raster, ki določa višinske vrednosti na vsaki lokaciji celice.",
	"@@Path-Distance-Allocation_Surface-Raster_tag1@@": "Vrednosti se uporabljajo za izračun dejanske površinske razdalje, zajete pri premikanju med celicami.",
	"@@Path-Distance-Allocation_Travel-Direction_tag0@@": "Določa smer popotnika pri uporabi stopnje odpornosti vira in začetnega stroška vira.",
	"@@Path-Distance-Allocation_Travel-Direction_tag1@@": "<strong>Iz vira</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom v vhodnem viru ter se premikala navzven proti neizvornim celicam. To je privzeta vrednost.",
	"@@Path-Distance-Allocation_Travel-Direction_tag3@@": "<strong>V vir</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom na vsaki neizvorni celici ter se premikala nazaj proti vhodnemu viru.",
	"@@Path-Distance-Allocation_Travel-Direction_tag5@@": "Določite ključno besedo <strong>Iz vira</strong> ali <strong>V vir</strong> , ki bo uporabljena na vseh virih, ali določite polje v <strong>izvornem rastru</strong> , ki vsebuje ključne besede za prepoznavo smeri potovanja za vsak vir. To polje mora vsebovati niz ${FROM_SOURCE} ali ${TO_SOURCE}.",
	"@@Path-Distance-Allocation_Value-Raster_tag0@@": "Vhodni raster celih števil, ki prepozna vrednost območij, ki se uporabljajo za vsako vhodno izvorno lokacijo. Za vsako celico izvorne lokacije bo vrednost, ki jo določa <strong>raster vrednosti</strong> dodeljena vsem celicam, ki so bile dodeljene izvorni lokaciji za izračunavanje. <strong>Raster vrednosti</strong> bo imel prednost pred katero koli nastavitvijo za <strong>izvorno polje</strong>.",
	"@@Path-Distance-Allocation_verticalfactor_tag0@@": "<p>Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: VF in VRMA. VF pomeni vertikalni faktor, ki določa vertikalno težavnost, ki se pojavi pri premikanju od ene celice do druge. VRMA pomeni vertikalni relativni kot premikanja, ki določa naklonski kot med celico OD oz. celico procesiranja in celico DO.</p><p><strong>Tipi vertikalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarno</strong>--Določa, da je VF nastavljen na vrednost, povezano s faktorjem nič, če je VRMA večji od nizkega kota rezanja in manjši od visokega kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Linearno</strong>--Določa, da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Določa, da je VF linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA.</li><strong><li>Simetrično obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Cos</strong>--Določa VF kot funkcijo VRMA na osnovi kosinusa.</li><li><strong>Sec</strong>--Določa VF kot funkcijo VRMA na osnovi sekante.</li><li><strong>Cos-Sec</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Sec-Cos</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona vertikalnega faktorja, ki se uporablja za določanje vrednosti VF, uporabila tabelna datoteka.</ul><p></li>Modifikatorji vertikalnih ključnih besed vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa vertikalni faktor, ki se bo uporabil, ko je VRMA nič. Ta faktor določa položaj y-presečišča za določeno funkcijo. Po definiciji faktor nič ne velja za nobeno vertikalno trigonometrično funkcijo (COS, SEC, COS-SEC ali SEC-COS). Te funkcije določajo y-presečišče.</li><li><strong>Nizki kot rezanja</strong>--Določa kot VRMA, pod katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Visoki kot rezanja</strong>--Določa kot VRMA, nad katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama vertikalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa VF.</li></ul>",
	"@@Path-Distance-Allocation_Vertical-Raster_tag0@@": "Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).",
	"@@Path-Distance-Allocation_Vertical-Raster_tag1@@": "Vrednosti se uporabljajo za izračun naklona, ki se uporablja za prepoznavanje vertikalnega faktorja, ki nastane pri premikanju od ene celice do druge.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Ta parameter simulira povečan trud za obvladovanje stroškov, ko se akumuliran strošek povečuje. Uporablja se kot model utrujenosti popotnika. Naraščajoči akumuliran strošek se za dosego celice pomnoži s stopnjo odpornosti in doda strošku, da se premakne v naslednjo celico.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "To je spremenjena različica sestavljene formule obrestne mere, ki se uporablja za izračun očitnega stroška za premikanje skozi celico. S povečevanjem stopnje odpornosti se povečuje strošek pozneje obiskanih celic. Večja kot je stopnja odpornosti, višji je strošek za dosego naslednje celice, ki je sestavljena za vsak nadaljnji premik. Ker je stopnja odpornosti podobna sestavljeni stopnji in so vrednosti akumuliranega stroška na splošno zelo visoke, se priporočajo stopnje odpornosti, kot so 0,005 ali manjše, odvisno od vrednosti akumuliranega stroška.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Path-Distance-Back-Link_Capacity_tag0@@": "Določa potrošnikovo kapaciteto stroškov za vir. Izračuni stroškov se nadaljujejo za vsak vir, dokler ni dosežena določena kapaciteta.",
	"@@Path-Distance-Back-Link_Capacity_tag1@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag0@@": "Zahtevan vhodni raster, ki določa strošek ali impedanco za planimetrično premikanje skozi posamezno celico. Vrednost na lokaciji vsake celice predstavlja razdaljo stroškov na enoto za premikanje skoznjo. Vrednost lokacije vsake celice je pomnožena z resolucijo celice, hkrati pa upošteva diagonalno premikanje, da se pridobi celoten strošek premika skozi celico.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag1@@": "Vrednosti <strong>rastra stroškov</strong> so lahko celo število ali število s plavajočo vejico, vendar ne morejo biti negativne ali ničla.",
	"@@Path-Distance-Back-Link_horizontalfactor_tag0@@": "<p>Določa odnos med horizontalnim faktorjem stroška in horizontalnim relativnim kotom premikanja (HRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: HF in HRMA. HF pomeni horizontalni faktor, ki določa horizontalno težavnost, ki se pojavi pri premikanju od ene celice do druge. HRMA pomeni horizontalni relativni kot premikanja, ki določa kot med horizontalno smerjo od celice in smerjo premikanja.</p><p><strong>Tipi horizontalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarni</strong>----Ponazarja, da je HF nastavljen na vrednost, povezano s faktorjem nič, če je HRMA manjši od kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Naprej</strong>--Določa, da je dovoljeno samo premikanje naprej. HRMA mora biti večji od ali enak 0 in manjši od 90 stopinj (0 &lt;= HRMA &lt; 90). Če je HRMA večji od 0 in manjši od 45 stopinj, je HF za celico nastavljen na vrednost, povezano s faktorjem nič. Če je HRMA večji od ali enak 45 stopinjam, se uporabi modifikator stranske vrednosti. HF za kateri koli HRMA, ki je enak ali večji od 90 stopinj, je nastavljen na neskončno vrednost.</li><li><strong>Linearno</strong>--Določa, da je HF linearna funkcija HRMA.</li><li><strong>Obratno linearno</strong>--Določa, da je HF obratna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona horizontalnega faktorja, ki se uporablja za določanje vrednosti HF, uporabila tabelna datoteka.</li></ul><p>Modifikatorji horizontalnih faktorjev vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa horizontalni faktor, ki se bo uporabil, ko je HRMA nič. Ta faktor določa položaj y-presečišča za katero koli funkcijo horizontalnega faktorja.</li><li><strong>Kot rezanja</strong>--Določa kot HRMA, po katerem bo HF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama horizontalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Stranska vrednost</strong>--Določa HF, če je HRMA večji od ali enak 45 stopinjam in manjši od 90 stopinj, ko je določena ključna beseda horizontalnega faktorja <strong>Naprej</strong>.</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa HF.</li></ul>",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag0@@": "Raster, ki določa horizontalno smer vsake celice.",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag1@@": "Vrednosti rastra morajo biti cela števila v razponu od 0 do 360, pri čemer se 0 stopinj nahaja severno ali proti vrhu zaslona, in se povečevati v smeri urinega kazalca. Ploskim območjem se naj dodeli vrednost -1. Vrednosti na vsaki lokaciji bodo uporabljene skupaj s <strong>horizontalnim faktorjem</strong> za določanje horizontalnega stroška, ki nastane pri premikanju od celice do sosednjih celic.",
	"@@Path-Distance-Back-Link_Maximum-Distance_tag0@@": "Prag, ki ga vrednosti akumuliranega stroška, ne morejo preseči. Če razdalja akumuliranega stroška preseže vrednost, bo izhodna vrednost za lokacijo celice brez podatkov. Največja razdalja določa obseg, za katerega se izračunajo razdalje akumuliranega stroška. Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Zmnožek za uporabo z vrednostmi stroška.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Ta parameter omogoča nadzor načina potovanja ali magnitude na viru. Večji kot je zmnožek, večji je strošek za premikanje skozi posamezno celico.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti morajo biti večje od nič. Privzeta vrednost je 1.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Path-Distance-Back-Link_Source-Raster_tag0@@": "Zahtevan vhodni raster izvornih lokacij.",
	"@@Path-Distance-Back-Link_Source-Raster_tag1@@": "To je raster, ki prepozna celice ali lokacije, za katere je izračunana najmanjša razdalja akumuliranega stroška za lokacijo vsake izhodne celice.",
	"@@Path-Distance-Back-Link_Source-Raster_tag2@@": "Lahko gre za celo število ali tip plavajoče vejice.",
	"@@Path-Distance-Back-Link_Start-Cost_tag0@@": "Začetni strošek za izračune stroškov. Ta parameter omogoča specifikacijo fiksnih stroškov, povezanih z virom. Namesto, da bi začel pri strošku 0, bo algoritem stroškov začel z določeno vrednostjo.",
	"@@Path-Distance-Back-Link_Start-Cost_tag1@@": "Vrednost mora biti 0 ali več. Privzeta vrednost je 0.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag0@@": "Raster, ki določa višinske vrednosti na vsaki lokaciji celice.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag1@@": "Vrednosti se uporabljajo za izračun dejanske površinske razdalje, zajete pri premikanju med celicami.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag0@@": "Določa smer popotnika pri uporabi stopnje odpornosti vira in začetnega stroška vira.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag1@@": "<strong>Iz vira</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom v vhodnem viru ter se premikala navzven proti neizvornim celicam. To je privzeta vrednost.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag3@@": "<strong>V vir</strong>--Uporabljena bosta stopnja odpornosti vira in začetni strošek vira z začetkom na vsaki neizvorni celici ter se premikala nazaj proti vhodnemu viru.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag5@@": "Določite ključno besedo <strong>Iz vira</strong> ali <strong>V vir</strong> , ki bo uporabljena na vseh virih, ali določite polje v <strong>izvornem rastru</strong> , ki vsebuje ključne besede za prepoznavo smeri potovanja za vsak vir. To polje mora vsebovati niz ${FROM_SOURCE} ali ${TO_SOURCE}.",
	"@@Path-Distance-Back-Link_verticalfactor_tag0@@": "<p>Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: VF in VRMA. VF pomeni vertikalni faktor, ki določa vertikalno težavnost, ki se pojavi pri premikanju od ene celice do druge. VRMA pomeni vertikalni relativni kot premikanja, ki določa naklonski kot med celico OD oz. celico procesiranja in celico DO.</p><p><strong>Tipi vertikalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarno</strong>--Določa, da je VF nastavljen na vrednost, povezano s faktorjem nič, če je VRMA večji od nizkega kota rezanja in manjši od visokega kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Linearno</strong>--Določa, da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Določa, da je VF linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA.</li><strong><li>Simetrično obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Cos</strong>--Določa VF kot funkcijo VRMA na osnovi kosinusa.</li><li><strong>Sec</strong>--Določa VF kot funkcijo VRMA na osnovi sekante.</li><li><strong>Cos-Sec</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Sec-Cos</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona vertikalnega faktorja, ki se uporablja za določanje vrednosti VF, uporabila tabelna datoteka.</ul><p></li>Modifikatorji vertikalnih ključnih besed vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa vertikalni faktor, ki se bo uporabil, ko je VRMA nič. Ta faktor določa položaj y-presečišča za določeno funkcijo. Po definiciji faktor nič ne velja za nobeno vertikalno trigonometrično funkcijo (COS, SEC, COS-SEC ali SEC-COS). Te funkcije določajo y-presečišče.</li><li><strong>Nizki kot rezanja</strong>--Določa kot VRMA, pod katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Visoki kot rezanja</strong>--Določa kot VRMA, nad katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama vertikalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa VF.</li></ul>",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag0@@": "Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag1@@": "Vrednosti se uporabljajo za izračun naklona, ki se uporablja za prepoznavanje vertikalnega faktorja, ki nastane pri premikanju od ene celice do druge.",
	"@@Plus_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Plus_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Plus_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Plus_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Plus_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Plus_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Plus_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Plus_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Plus_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Plus_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Plus_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Plus_Raster_tag0@@": "Vnos, katerega vrednosti bodo dodane.",
	"@@Plus_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Plus_Raster2_tag0@@": "Vnos, katerega vrednosti bodo dodane prvemu vnosu.",
	"@@Plus_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Local_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Local_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Local_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Local_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Local_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Local_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Local_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Local_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Local_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Local_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Local_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Local_Raster_tag0@@": "Vnos, katerega vrednosti bodo dodane.",
	"@@Local_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Local_Raster2_tag0@@": "Vnos, katerega vrednosti bodo dodane prvemu vnosu.",
	"@@Local_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Local_False-Raster_tag0@@": "Vhod, katerega vrednosti bodo uporabljene kot vrednosti izhodnega piksla, če je pogoj neresničen. Lahko gre za celo število, raster plavajoče vejice ali konstantno vrednost.",
	"@@Local_True-Raster_tag0@@": "Vhod, katerega vrednosti bodo uporabljene kot vrednosti izhodnega piksla, če je pogoj resničen. Lahko gre za celo število, raster plavajoče vejice ali konstantno vrednost.",
	"@@Power_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Power_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Power_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Power_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Power_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Power_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Power_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Power_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Power_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Power_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Power_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Power_Raster_tag0@@": "Vhodne vrednosti, povišane na potenco, ki jo določa <strong>raster2</strong>.",
	"@@Power_Raster_tag3@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Power_Raster2_tag0@@": "Vnos, ki določa potenco, do katere bodo vrednosti <strong>rastra</strong> povišane.",
	"@@Power_Raster2_tag3@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Radar-Calibration_Calibration-Type_tag0@@": "Vrsta izvedbe kalibracije:",
	"@@Radar-Calibration_Calibration-Type_tag1@@": "Beta ničla--Funkcija vrne radar reflektivno na površinsko enoto v poševno razdaljo. To je privzeti tip kalibracije.",
	"@@Radar-Calibration_Calibration-Type_tag2@@": "Sigma ničla--Funkcija vrne radar reflektivno na površinsko enoto v površinsko razdaljo. Rezultati so vrednosti 32-bitne plavajoče vejice, ki so običajno v razponu od 0,0 do 1,0. Če je izbrana ta možnost, se izsek podatkov ne izvede.",
	"@@Radar-Calibration_Calibration-Type_tag3@@": "Gama--Funkcija vrne radar reflektivno na površinsko enoto ravnine, ki je pravokotna na smer merjenja.",
	"@@Radar-Calibration_Calibration-Type_tag4@@": "Brez",
	"@@Radar-Calibration_Raster_tag0@@": "Vhodni raster.",
	"@@RasterInfo_Raster-Info_tag0@@": "Izberite rastrski sklop podatkov, ki ga boste uporabili kot predlogo",
	"@@RasterInfo_Raster_tag0@@": "Vhodni raster.",
	"@@Rasterize-Attributes_Attribute-Field-Names_tag0@@": "Seznam polj v <strong>tabeli območnih atributov</strong>, kjer vsako polje ločuje vejica. Vrednosti bodo v vsakem polju predstavljene s trakom v izhodnem rastru.",
	"@@Rasterize-Attributes_Background-Value_tag0@@": "Začetna vrednost pikslov izhodnih trakov v rastru pred ponovno določitvijo.",
	"@@Rasterize-Attributes_Background-Value_tag1@@": "Če piksel ni v območju, bo ostal kot vrednost v ozadju.",
	"@@Rasterize-Attributes_Value-Raster_tag0@@": "Zahtevan vhodni raster.",
	"@@Rasterize-Attributes_Value-Raster_tag1@@": "Vhod naj bo enopasovni raster. Če uporabljate večpasovni raster, bi uporabljen samo prvi pas.",
	"@@Rasterize-Attributes_Where-Clause_tag0@@": "Izbirna dodatna poizvedba, uporabljena v <strong>tabeli območnih atributov</strong>.",
	"@@Rasterize-Attributes_Where-Clause_tag3@@": "Če bi zgornjo tabelo uporabili kot primer, bi poizvedba bila ${Variable1 = 'bare earth'}.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag0@@": "Območni atributi, določeni kot pot do lokalnega geoobjektnega razreda, pot do tabele, URL do sloja geoobjektne storitve ali niz JSON.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag1@@": "V nizu JSON je opisano kot zbirka kartiranj od ID-jev območij do polja celih števil. ${{ zoneId:[f1,f2,...,fn], ... } }",
	"@@Rasterize-Attributes_Zone-Field_tag0@@": "Ime polja, ki vsebuje vednosti ID-ja območja.",
	"@@Rasterize-Attributes_Zone-Raster_tag0@@": "Izbirni enopasovni raster, kjer vsak piksel vsebuje ID območja, povezanega z lokacijo. ID območja se uporablja za iskanje vrstic v območni atributni tabeli za zaužitje v določenem območju.",
	"@@Rasterize-Attributes_Zone-Raster_tag1@@": "Pustite ta parameter nedoločen, če želite atribut samo uvoziti.",
	"@@Rasterize-Features_Field_tag0@@": "Za prepoznavanje vsakega geoobjekta izberite polje, ki ga želite uporabiti.",
	"@@Rasterize-Features_Input-Features_tag0@@": "Za pretvorbo v rastrski format izberite geoobjektni razred.",
	"@@Rasterize-Features_Raster_tag0@@": "Za določanje velikosti celice in obsega za pretvorbo geoobjekta izberite raster.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag0@@": "Določite, kako upravljati geoobjekte, ki se prekrivajo:",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag1@@": "<strong>Prva</strong>--Prekrivajočim se površinam bo dodeljena vrednost s prvega navedenega sklopa podatkov.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag3@@": "<strong>Zadnja</strong>--Prekrivajočim se površinam bo dodeljena vrednost z zadnjega navedenega sklopa podatkov.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag5@@": "<strong>Najmanjše</strong>--Prekrivajočim se površinam bo dodeljena vrednost z najmanjšega geoobjekta.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag7@@": "<strong>Največje</strong>--Prekrivajočim se površinam bo dodeljena vrednost z največjega geoobjekta.",
	"@@Recast_Overrides_tag0@@": "Tabela z imeni spremenljivk in uporabniško določenimi vrednostmi, ki se uporablja za spremembo mozaičnega sklopa podatkov.",
	"@@Recast_Raster_tag0@@": "Rastrski izdelek, kateremu bo dodeljena funkcija preoblikovanja.",
	"@@Region-Group_Add-Link_tag0@@": "Določa, ali bo tabeli izhoda dodano polje s povezavo.",
	"@@Region-Group_Add-Link_tag1@@": "<strong>Dodaj povezavo</strong>--Tabeli izhodnega rastra bo dodan element ${LINK}.",
	"@@Region-Group_Add-Link_tag3@@": "<strong>Brez povezave</strong>--Atributna tabela za izhodni raster bo vsebovala samo elemente ${Value} in ${Count}.",
	"@@Region-Group_Excluded-Value_tag0@@": "Določa vrednost tako, da ne bo določena nobena prostorska povezljivost, ne glede kako je določeno število sosedov (ŠTIRI ali OSEM), če lokacija vsebuje vrednost.",
	"@@Region-Group_Excluded-Value_tag1@@": "Celice z izvzeto vrednostjo bodo obravnavane kot brez podatkov in so izvzete iz izračunov. Lokacijam celic, ki vsebujejo izvzeto vrednost, bo na izhodnem rastru dodeljena vrednost 0.",
	"@@Region-Group_Excluded-Value_tag2@@": "Izvzeta vrednost je v zasnovi podobna vrednosti ozadja ali dodelitvi maske. Za ta parameter mora biti vrednost določena, če je določen parameter <strong>${CROSS}</strong>.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag0@@": "Število sosednjih celic, ki se uporabijo za oceno povezljivosti med celicami.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag1@@": "<strong>ŠTIRI</strong>--Določa povezljivost med celicami enake vrednosti, samo če so celice neposredno na levi, desni, spodnji ali zgornji strani vsakega izmed štirih najbližjih sosedov. To je privzeta vrednost.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag3@@": "<strong>OSEM</strong>--Določa povezljivost med celicami enake vrednosti, če so med sabo oddaljene v neposredni osemcelični okolici. To vključuje tudi medsebojno oddaljenost na desno, levo, navzgor ali diagonalno.",
	"@@Region-Group_Zone-Connectivity_tag0@@": "Določa, katere vrednosti se naj upoštevajo pri preverjanju povezljivosti.",
	"@@Region-Group_Zone-Connectivity_tag1@@": "<strong>ZNOTRAJ</strong>--Preverja povezljivost med vhodnimi vrednostmi, ki so znotraj istega območja enake. To je privzeta vrednost.",
	"@@Region-Group_Zone-Connectivity_tag3@@": "Edine celice, ki jih lahko razvrščate, so celice iz istega območja (vrednost), ki izpolnjujejo prostorske zahteve povezljivosti, ki jih določa parameter <strong>Število sosedov</strong> (na štiri ali na osem).",
	"@@Region-Group_Zone-Connectivity_tag6@@": "<strong>KRIŽ</strong>--Preverja povezljivost s prostorskimi zahtevami, ki jih določa parameter števila sosedov med celicami s katerimi koli vrednostmi, razen vrednostjo, ki jo je parameter izvzete vrednosti prepoznal kot izvzeto.",
	"@@Region-Group_Zone-Connectivity_tag8@@": "Kadar je uporabljena ta možnost, je za parameter <strong>izvzete vrednosti</strong> treba določiti vrednost.",
	"@@Region-Group_Zone-Raster_tag0@@": "Zahtevan vhodni raster, za katerega bodo določena edinstvena povezana področja.",
	"@@Region-Group_Zone-Raster_tag1@@": "Biti mora tip celega števila.",
	"@@Region-Grow_Fill-Value-Field_tag0@@": "Polje v atributni tabeli, ki določa vrednost polnila za skupino pikslov. Na večpasovni sliki bo vsem pasovom dodeljena ta vrednost.",
	"@@Region-Grow_Max-Growth-Radius-Field_tag0@@": "Polje v atributni tabeli, ki določa polmer največje rasti z enotami koordinatnega sistema slike.",
	"@@Region-Grow_Raster_tag0@@": "Raster, na katerem želite izvesti to funkcijo.",
	"@@Region-Grow_Seed-Points_tag0@@": "Geoobjektni razred točke, ki služi kot začetna semena za algoritem. Vsaka semenska točka ustreza enemu vnosu v atributni tabeli, ki vsebuje informacije o polmeru največje rasti, pragu podobnosti in vrednosti polnila.",
	"@@Region-Grow_Similarity-Threshold-Field_tag0@@": "Polje v atributni tabeli, ki določa prag podobnosti kot evklidsko razdaljo v spektralnem prostoru.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag0@@": "Manjkajoče vrednosti v tabeli preklasificiranja lahko ohranijo svojo vrednost ali se preslikajo kot brez podatkov.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag1@@": "Potrjeno--Vrednost vsakega piksla iz vhodnega rastra, ki se ne preklasificira v tabeli preslikav, se bo ohranila in zapisal na svojo lokacijo v izhodni raster. To je privzeto.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag2@@": "Potrjeno--Vrednost vsakega piksla iz vhodnega rastra, ki se ne preklasificira v tabeli preslikav, se preslika na svojo lokacijo v izhodni raster kot brez podatkov.",
	"@@Remap_Input-Field_tag0@@": "Izberite polje, ki določa vhodno vrednost pikslov za preslikavo.",
	"@@Remap_Input-Field_tag1@@": "Če ima vaša tabela razpon vrednosti, bo to polje najmanjše vrednosti , določiti pa bo treba tudi parameter <strong>vhodnega maksimalnega polja</strong>.",
	"@@Remap_Input-Max-Field_tag0@@": "Če vaša tabela določa razpon vrednosti, izberite polje največje vrednosti.",
	"@@Remap_List_tag0@@": "Določite vrednosti na karti, razpon najmanjše in največje vrednosti ter nove vrednosti preslikav. Poleg tega lahko razpon vrednosti nastavite kot piksle brez podatkov.",
	"@@Remap_Output-Field_tag0@@": "Izberite polje, ki se bo uporabljalo kot izhodna preslikana vrednost.",
	"@@Remap_Raster_tag0@@": "Vhodni raster.",
	"@@Remap_Remap-Definition-Type_tag0@@": "Izberite možnost, ki jo želite uporabiti za nastavitev vrednosti preslikav:",
	"@@Remap_Remap-Definition-Type_tag1@@": "Seznam--Določite razpon vrednosti pikslov za preslikavo v izhodno vrednost pikslov",
	"@@Remap_Remap-Table-Type_tag0@@": "Izberite vrsto tabele, ki jo boste uporabili za preslikavo vhodnega rastra:",
	"@@Remap_Remap-Table-Type_tag1@@": "Preprosto--Uporablja <strong>tabelo preslikav</strong> za preslikavo vrednosti pikslov <strong>vhodnega polja</strong> v ustrezne vrednosti v parametru <strong>izhodnega polja</strong>. Ta metoda omogoča predpomnjenje tabele preslikav, da se lahko izvaja hitreje.",
	"@@Remap_Remap-Table-Type_tag8@@": "Dinamično--Ta metoda ne omogoča predpomnjenja tabele preslikav in bo za vsako za vsako zahtevo izvedla poizvedbo (pomik, povečava ali osvežitev). Če se tabela spremeni, lahko naslednja zahteva dinamično ustrezno preslika vrednosti.",
	"@@Remap_Remap-Table-Type_tag9@@": "Prerazporeditev--Določena tabela, ki se uporablja za postopek prerazporeditve, pri katerem se bo vsaka vrstica v tabeli preslikala samo glede na omejitev vsakega geoobjekta.",
	"@@Remap_Remap-Table_tag0@@": "Prebrskajte do tabele, ki nastavlja vaše vrednosti preslikav.",
	"@@Reproject_Raster_tag0@@": "Rastrski sklop podatkov, ki ga je treba preprojicirati ali prevzorčiti.",
	"@@Reproject_Spatial-Reference_tag0@@": "Koordinatni sistem, ki se uporablja za preprojiciranje podatkov.",
	"@@Reproject_X-Cellsize_tag0@@": "Dimenzija x, v katero bi podatki naj bili prevzorčeni. To je izbirno. Če je vrednost 0 ali manj, se izhodni prostorski okvir (obseg in velikost celice) izračuna iz vhodnega rastra.",
	"@@Reproject_X-Registration-Point_tag0@@": "Koordinata x, ki se uporablja za določanje zgornjega levega kota sklopa podatkov. Koordinata mora biti določena v enotah novega koordinatnega sistema. Če sta oba parametra <strong>velikosti celice X</strong> in <strong>velikosti celice Y</strong> večja od 0, se uporabljata skupaj s parametroma <strong>točke izhodišča X</strong> in <strong>točke izhodišča Y</strong>, da se določi izhodni prostorski okvir.",
	"@@Reproject_Y-Cellsize_tag0@@": "Dimenzija y, v katero bi podatki naj bili prevzorčeni. To je izbirno. Če je vrednost 0 ali manj, se izhodni prostorski okvir (obseg in velikost celice) izračuna iz vhodnega rastra.",
	"@@Reproject_Y-Registration-Point_tag0@@": "Koordinata y, ki se uporablja za določanje zgornjega levega kota sklopa podatkov. Koordinata mora biti določena v enotah novega koordinatnega sistema. Če sta oba parametra <strong>velikosti celice X</strong> in <strong>velikosti celice Y</strong> večja od 0, se uporabljata skupaj s parametroma <strong>točke izhodišča X</strong> in <strong>točke izhodišča Y</strong>, da se določi izhodni prostorski okvir.",
	"@@Resample_Input-Cellsize_tag0@@": "Velikost celice piksla vhodnega rastra.",
	"@@Resample_Output-Cellsize_tag0@@": "Velikost celice piksla izhodnega rastra. Velikost celice se lahko spremeni, obseg rastrskega sklopa podatkov pa bo ostal enak. Prevzorčenje iz uporabniško določene velikosti celice je lahko veliko počasnejše od sistemsko privzetega, saj sistemsko privzeto prevzorčenje obdela minimalno količino podatkov iz najbližje mogoče ločljivosti.",
	"@@Resample_Raster_tag0@@": "Vhodni raster, ki bo prevzorčen.",
	"@@Resample_Resampling-Type_tag0@@": "<strong>Najbližji sosed</strong>--Izračuna izhodno vrednost pikslov z uporabo najbližjega vhodnega piksla. Piksli brez podatkov se v izhodnem rastrskem sklopu podatkov ne bodo spremenili. To je privzeta vrednost.",
	"@@Resample_Resampling-Type_tag2@@": "<strong>Bilinearna interpolacija</strong>--Izračuna vrednost pikslov z uporabo vrednosti štirih najbližjih pikslov glede na razdaljo. Ta metoda je izračunsko učinkovita za obdelavo.",
	"@@Resample_Resampling-Type_tag4@@": "<strong>Kubična konvolucija</strong>--Določa novo vrednost piksla na osnovi napeljave gladke krivine skozi 16 najbližjih vhodnih centrov piksla.",
	"@@Resample_Resampling-Type_tag6@@": "<strong>Večina</strong>--Izračuna vrednost pikslov z uporabo večinske vrednosti pikslov 16 najbližjih pikslov. Piksli brez podatkov se v izhodnem rastrskem sklopu podatkov ne bodo spremenili.",
	"@@Resample_Resampling-Type_tag8@@": "<strong>Bilinearna interpolacija plus</strong>--Uporablja <strong>bilinearno interpolacijo</strong>, razen piksli na robovih so označeni kot brez podatkov in se ne replicirajo ali upoštevajo pri izračunu. Uporabi <strong>bilinearno interpolacijo plus</strong> za ploščične podatke, saj se bodo robovi bolje ujemali.",
	"@@Resample_Resampling-Type_tag14@@": "<strong>Gaussova zameglitev</strong>--Doda Gaussovo konvolucijo izvornemu rastru in izračuna vrednost piksla z uporabo vrednosti štirih najbližjih pikslov iz zamegljenega rastra glede na razdaljo. V prevzorčenih podatkih in za zmanjševanje z vzorčenjem na večjo velikost pikslov je priporočljivo odstraniti šum.",
	"@@Resample_Resampling-Type_tag16@@": "<strong>Gaussova zameglitev plus</strong>--Uporablja enako metodo kot <strong>Gaussova zameglitev</strong> , razen piksli na robovih so označeni kot brez podatkov in se ne replicirajo ali upoštevajo pri izračunu. Uporabi <strong>Gaussovo zameglitev plus</strong> za ploščične podatke, saj se bodo robovi bolje ujemali.",
	"@@Resample_Resampling-Type_tag22@@": "<strong>Povprečje</strong>--Izračuna vrednosti pikslov z uporabo povprečne vrednosti prekrivajočih se pikslov za vsak ciljni piksel.",
	"@@Resample_Resampling-Type_tag24@@": "<strong>Minimum</strong>--Izračuna vrednosti pikslov z uporabo najmanjše vrednosti vseh prekrivajočih se pikslov. Piksli brez podatkov se v izhodnem rastrskem sklopu podatkov ne bodo spremenili.",
	"@@Resample_Resampling-Type_tag26@@": "<strong>Maksimum</strong>--Primerno za neprekinjene podatke, saj proizvede gladkejšo izhodno sliko kot metoda prevzorčenja najbližjega soseda.",
	"@@Resample_Resampling-Type_tag28@@": "<strong>Vektorsko povprečje</strong>--Izračuna vektorsko povprečje smeri magnitude, ki uporablja vse vključene piksle. Ta metoda se uporablja samo za dvopasovne rastre, ki predstavljajo magnitudo in smer. Najprej pretvori smer magnitude v U-V, nato pa za pridobitev U-V ciljnega piksla vzame aritmetično povprečje vseh vključenih pikslov in ga pretvori nazaj v smer magnitude.",
	"@@Round-Down_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Round-Down_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Round-Down_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Round-Down_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Round-Down_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Round-Down_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Round-Down_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Round-Down_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Round-Down_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Round-Down_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Round-Down_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Round-Down_Raster_tag0@@": "Vhodne vrednosti, ki jih je treba zaokrožiti navzdol.",
	"@@Round-Up_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Round-Up_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Round-Up_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Round-Up_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Round-Up_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Round-Up_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Round-Up_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Round-Up_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Round-Up_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Round-Up_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Round-Up_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Round-Up_Raster_tag0@@": "Vhodne vrednosti, ki jih je treba zaokrožiti navzgor.",
	"@@Segment-Mean-Shift_Minimum-Segment-Size-in-Pixels_tag0@@": "Najmanjša velikost odseka, merjena v pikslih. Ta vrednost je povezana z vašo enoto kartiranja in bo filtrirala manjše bloke pikslov. Vsi odseki, manjši od določene vrednosti, bodo manjše odseke združili z najustreznejšim sosednjim odsekom.",
	"@@Segment-Mean-Shift_Raster_tag0@@": "Vhodni raster, ki bo segmentiran.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag0@@": "Razmejitve odsekov so označene kot črne linije plastnice okoli vsakega odseka. To pomaga pri razlikovanju sosednjih, podobno obarvanih odsekov.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag1@@": "Nepotrjeno--Razmejitve odsekov niso prikazane. To je privzeta vrednost.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag2@@": "Potrjeno--Razmejitve odsekov so prikazane s črnimi linijami plastnice okoli vsakega odseka.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag0@@": "Relativna pomembnost ločevanja predmetov glede na prostorske značilnosti.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag1@@": "Veljavne vrednosti celih števil se gibljejo od 1 do 20. Rezultat manjših vrednosti so široki razredi in več glajenja. Višja vrednost je ustrezna za razlikovanje med prostorsko majhnimi in skupaj nagručenimi geoobjekti. V urbanem okolju lahko na primer splošno neprepustno površino geoobjektov klasificirate s pomočjo manjše vrednosti prostorske podrobnosti ali pa zgradbe in ceste klasificirate kot ločene razrede s pomočjo večje vrednosti prostorske podrobnosti.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag0@@": "Relativna pomembnost ločevanja predmetov glede na barvne značilnosti.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag1@@": "Veljavne vrednosti plavajoče vejice se gibljejo od 1,0 do 20,0. Rezultat manjših vrednosti so široki razredi in več glajenja. Višja vrednost je primerna, ko želite razlikovati med geoobjekti z nekoliko podobnimi spektralnimi značilnostmi. Uporaba višje vrednosti spektralne podrobnosti v gozdnem okolju na primer omogoča boljše razlikovanje različnih drevesnih vrst.",
	"@@Segment-Mean-Shift_maximumsegmentsizeinpixels_tag0@@": "<p>Največja velikost segmenta. Segmenti, ki so večji od navedene velikosti, bodo razdeljeni. Uporabite ta parameter, da preprečite artefakte v izhodnem sloju, ki so posledica velikih segmentov. Privzeta vrednost je -1.</p>",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag0@@": "Izberite enega izmed štirih tipov kalibracije:",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag1@@": "<strong>Beta ničla</strong>--proizvede izhod, ki vsebuje svetlostni koeficient radarja.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag3@@": "<strong>Sigma ničla</strong>--povratno sipanje, povrnjeno na anteno s površinske enote na tleh, povezano s talnim razponom.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag5@@": "<strong>Gama</strong>--meritev oddane in povrnjene energije, uporabna za določanje vzorcev antene.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag7@@": "<strong>Brez</strong>--ne uporabite popravka. To je privzeta vrednost.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag0@@": "Vhodni raster Sentinel-1 Level-1 GRD ali SLC, ki ga želite procesirati.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag1@@": "Funkcija bo uporabila datoteko LUT za dodajanje toplotnega popravka ali odstranitev popravka glede na vsebino datoteke LUT.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag0@@": "Vhodni raster Sentinel-1, ki ga želite procesirati.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag1@@": "Funkcija bo uporabila datoteko LUT za dodajanje toplotnega popravka ali odstranitev popravka glede na vsebino datoteke LUT.",
	"@@Set-Null_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Set-Null_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Set-Null_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Set-Null_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Set-Null_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Set-Null_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Set-Null_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Set-Null_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Set-Null_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Set-Null_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Set-Null_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Set-Null_False-Raster_tag0@@": "Vhod, katerega vrednosti bodo uporabljene kot vrednosti izhodnega piksla, če je pogoj neresničen. Lahko gre za celo število, raster plavajoče vejice ali konstantno vrednost.",
	"@@Set-Null_Raster_tag0@@": "Vhodni raster, ki predstavlja Boolov rezultat logične matematične rastrske funkcije. Vrednosti bodo 1 (za resnično) ali 0 (za neresnično). Lahko gre za celo število ali raster plavajoče vejice.",
	"@@Shaded-Relief_Altitude_tag0@@": "Višina nad tlemi je višinski kot sonca nad obzorjem in se razprostira od 0 do 90 stopinj. Vrednost 0 stopinj ponazarja, da je sonce na obzorju, tj. na enaki vodoravni ravnini kot referenčni okvir. Vrednost 90 stopinj ponazarja, da je sonce neposredno nad nami. Privzeta vrednost je 45 stopinj nad obzorjem.",
	"@@Shaded-Relief_Azimuth_tag0@@": "Azimut je relativni položaj sonca na obzorju (v stopinjah). Ta položaj je ponazorjen s kotom sonca, izmerjenim v obratni smeri od severa. Azimut 0 stopinj predstavlja sever, vzhod je 90 stopinj, jug 180 stopinj in zahod 270 stopinj.",
	"@@Shaded-Relief_Color-Scheme-Type_tag0@@": "Določite, ali bo za prikaz senčenega reliefa uporabljen barvna lestvica ali barvna karta.",
	"@@Shaded-Relief_Color-Scheme-Type_tag1@@": "<strong>Barvna lestvica</strong>--Ko izberete <strong>barvno lestvico</strong>, boste pozvani, da izberete ustrezno barvno lestvico.",
	"@@Shaded-Relief_Color-Scheme-Type_tag5@@": "<strong>Barvna karta</strong>--Ko izberete <strong>barvno karto</strong>, boste pozvani, da določite datoteko barvne karte, ki jo boste uporabili.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag0@@": "Določite, ali bo privzeta interpolacija piksla roba onemogočena.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag1@@": "Nepotrjeno--Za prevzorčenje senčenega reliefa bo enotno dodano bilinearno prevzorčenje. To je privzeta vrednost.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag2@@": "Potrjeno--V senčenem reliefu bo uporabljeno bilinearno prevzorčenje, razen na robovih rastrov ali poleg pikslov brez podatkov. Ti piksli bodo zasedeni brez podatkov, s čimer se bodo zmanjšali učinki ostrih robov, ki bi se lahko pojavili.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag3@@": "Z uporabo te možnosti se boste izognili artefaktom prevzorčenja, ki se lahko pojavijo na rastrskih robovih. Izhodni piksli na rastrskem robu ali poleg pikslov brez vrednosti bodo zasedeni brez podatkov; zato je priporočljivo, da se ta možnost uporablja samo, ko so na voljo drugi rastri s prekrivajočimi se piksli. Ko so na voljo prekrivajoči se piksli, bodo ta območja brez podatkov namesto praznine prikazovala vrednosti prekrivajočih se pikslov.",
	"@@Shaded-Relief_Raster_tag0@@": "Vhodni raster višine",
	"@@Shaded-Relief_Scaling_tag0@@": "Zasenčeni rezultat se dinamično izmeri s prilagajanjem z-faktorja z uporabo ene izmed dveh metod:",
	"@@Shaded-Relief_Scaling_tag1@@": "<strong>Brez</strong>--Spreminjanje merila ni dodeljeno. To je primerno za enojni rastrski sklop podatkov, ki pokriva lokalno območje. To ni priporočeno za svetovne sklope podatkov z velikimi spremembami višine ali karte z več merili, saj bodo pri majhnem merilu ustvarili relief terena z malo spremembami.",
	"@@Shaded-Relief_Scaling_tag3@@": "<strong>Prilagojeno</strong>--Dodeljeno je nelinearno prilagajanje z uporabo privzete vrednosti<strong>potence velikosti pikslov</strong> in <strong>faktorja velikosti pikslov</strong>, ki sprejmejo široko paleto višinskih sprememb (spremembe merila) pri povečevanju in pomanjševanju pregledovalnika. Možnost <strong>Prilagojeno</strong>je priporočena, ko uporabljate svetovni sklop podatkov.",
	"@@Shaded-Relief_Z-Factor_tag0@@": "Z-faktor je faktor skaliranja, ki se uporablja za pretvarjanje vrednosti višin za dva namena:",
	"@@Shaded-Relief_Z-Factor_tag1@@": "Za pretvarjanje višinskih enot (kot so metri ali čevlji) v vodoravne koordinatne enote sklopa podatkov, ki so lahko čevlji, metri ali",
	"@@Shaded-Relief_Z-Factor_tag2@@": "Za dodajanje navpičnega povečevanja za vizualni učinek",
	"@@Shaded-Relief_Z-Factor_tag3@@": "Zasenčeni rezultat se dinamično izmeri s prilagajanjem z-faktorja z uporabo ene izmed dveh metod:",
	"@@Shaded-Relief_Z-Factor_tag4@@": "<strong>Brez</strong>--Spreminjanje merila ni dodeljeno. To je primerno za enojni rastrski sklop podatkov, ki pokriva lokalno območje. To ni priporočeno za svetovne sklope podatkov z velikimi spremembami višine ali karte z več merili, saj bodo pri majhnem merilu ustvarili relief terena z malo spremembami.",
	"@@Shaded-Relief_Z-Factor_tag6@@": "<strong>Prilagojeno</strong>--Dodeljeno je nelinearno prilagajanje z uporabo privzete vrednosti<strong>potence velikosti pikslov</strong> in <strong>faktorja velikosti pikslov</strong>, ki sprejmejo široko paleto višinskih sprememb (spremembe merila) pri povečevanju in pomanjševanju pregledovalnika. Možnost <strong>Prilagojeno</strong>je priporočena, ko uporabljate svetovni sklop podatkov.",
	"@@Shaded-Relief_hillshadetype_tag0@@": "Nadzoruje vir osvetljenosti za senčeni relief.",
	"@@Shaded-Relief_hillshadetype_tag1@@": "<strong>Traditionalno</strong>--Izračuna senčen relief iz posamezne smeri osvetlitve. Nastavite lahko možnosti <strong>azimut</strong> in <strong>višino</strong> za nadzor lokacije vira svetlobe. <strong>DINF</strong>--Tip rastra smeri vhodnega toka je D-Infinity (DINF).",
	"@@Shaded-Relief_hillshadetype_tag2@@": "<strong>Večsmerno</strong>--Združuje svetlobo iz različnih virov za izboljšano vizualizacijo terena.",
	"@@Shaded-Relief_PSPower_tag0@@": "<strong>Potenca velikosti pikslov</strong> beleži višinske spremembe (ali spremembe merila), ko pregledovalnik povečuje in pomanjšuje kartni prikaz. Eksponent, dodeljen izrazu velikosti piksla v enačbi, nadzoruje stopnjo, pri kateri se <strong>Z-faktor</strong> spremeni, da se izogne precejšnjim izgubam reliefa.",
	"@@Shaded-Relief_PSPower_tag1@@": "Ta parameter je veljaven samo, ko je tip <strong>spremembe merila </strong><strong>prilagojen</strong>. Privzeta vrednost je 0,664.",
	"@@Shaded-Relief_PSZFactor_tag0@@": "<strong>Dejavnik velikosti pikslov</strong> beleži spremembe merila, ko pregledovalnik povečuje in pomanjšuje kartni prikaz. Nadzoruje stopnjo, pri kateri se <strong>Z-faktor</strong> spremeni.",
	"@@Shaded-Relief_PSZFactor_tag1@@": "Ta parameter je veljaven samo, ko je tip <strong>spremembe merila </strong><strong>prilagojen</strong>. Privzeta vrednost je 0,024.",
	"@@Sin_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Sin_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Sin_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Sin_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Sin_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Sin_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Sin_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Sin_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Sin_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Sin_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Sin_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Sin_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednosti sinusa.",
	"@@SinH_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@SinH_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@SinH_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@SinH_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@SinH_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@SinH_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@SinH_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@SinH_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@SinH_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@SinH_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@SinH_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@SinH_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednosti hiperboličnega sinusa.",
	"@@Sink_Flow-Direction-Raster_tag0@@": "Vhodni raster, ki prikazuje smer toka iz vsake celice.",
	"@@Sink_Flow-Direction-Raster_tag1@@": "Raster smeri toka lahko ustvarite z zagonom funkcije <strong>smeri toka</strong>.",
	"@@Slope_DEM_tag0@@": "Vhodni raster višine",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag0@@": "Z uporabo te možnosti se boste izognili artefaktom prevzorčenja, ki se lahko pojavijo na rastrskih robovih. Izhodni piksli na rastrskem robu ali poleg pikslov brez vrednosti bodo zasedeni brez podatkov; zato je priporočljivo, da se ta možnost uporablja samo, ko so na voljo drugi rastri s prekrivajočimi se piksli. Ko so na voljo prekrivajoči se piksli, bodo ta območja brez podatkov namesto praznine prikazovala vrednosti prekrivajočih se pikslov.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag1@@": "Nepotrjeno--Za prevzorčenje naklona bo enotno dodano bilinearno prevzorčenje. To je privzeta vrednost.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag2@@": "Potrjeno--V naklonu bo uporabljeno bilinearno prevzorčenje, razen na robovih rastrov ali poleg pikslov brez podatkov. Ti piksli bodo zasedeni brez podatkov, s čimer se bodo zmanjšali učinki ostrih robov, ki bi se lahko pojavili.",
	"@@Slope_Scaling_tag0@@": "Nagnjenost naklona lahko izrazite kot stopinjsko vrednost ali odstotni vzpon. Za <strong>spreminjanje merila</strong> obstajajo tri možnosti:",
	"@@Slope_Scaling_tag3@@": "<strong>Stopinja</strong>--Nagnjenost naklona se izračuna v stopinjah. Vrednosti se gibljejo od 0 do 90.",
	"@@Slope_Scaling_tag5@@": "<strong>Odstotni_vzpon</strong>--Nagnjenost naklona se izračuna kot odstotne vrednosti. Vrednosti se gibljejo od 0 do neskončnosti. Ploska površina je 0-odstotni vzpon, medtem ko je 45-stopinjska površina 100-odstotni vzpon. Ko površina postaja vse bolj navpična, se odstotni vzpon povečuje.",
	"@@Slope_Scaling_tag7@@": "<strong>Skalirano</strong>--Nagnjenost naklona se izračuna enako kot STOPINJA, vendar je z-faktor prilagojen za spremembo merila. Uporablja vrednosti<strong>potence velikosti pikslov</strong> in <strong>faktorja velikosti pikslov</strong>, ki upoštevajo spremembe ločljivosti (sprememba merila) med povečevanjem in pomanjševanjem pregledovalnika. To je priporočljivo pri uporabi svetovnih sklopov podatkov--še posebej pri uporabi naklona kot površino za vizualizacijo.",
	"@@Slope_Scaling_tag13@@": "Z-faktor se prilagaja z uporabo naslednje enačbe:",
	"@@Slope_Scaling_tag14@@": "Prilagojeni Z-faktor = (Z-faktor) + (velikost pikslov)",
	"@@Slope_Scaling_tag15@@": "× (faktor velikosti pikslov)",
	"@@Slope_Scaling_tag16@@": "Potenca velikosti pikslov",
	"@@Slope_Z-Factor_tag0@@": "<strong>Z-faktor</strong> je faktor spremembe merila, ki se uporablja za pretvarjanje vrednosti višin za dva namena:",
	"@@Slope_Z-Factor_tag3@@": "Za pretvarjanje višinskih enot (kot so metri ali čevlji) v vodoravne koordinatne enote sklopa podatkov, ki so lahko čevlji, metri ali",
	"@@Slope_Z-Factor_tag4@@": "Za dodajanje navpičnega povečevanja za vizualni učinek",
	"@@Slope_PSPower_tag0@@": "<strong>Potenca velikosti pikslov</strong> beleži višinske spremembe (ali spremembe merila), ko pregledovalnik povečuje in pomanjšuje kartni prikaz. Eksponent, dodeljen izrazu velikosti piksla v enačbi, nadzoruje stopnjo, pri kateri se <strong>Z-faktor</strong> spremeni, da se izogne precejšnjim izgubam reliefa.",
	"@@Slope_PSPower_tag1@@": "Ta parameter je veljaven samo, ko je <strong>tip spremembe merila</strong> <strong>izmerjen</strong>. Privzeta vrednost je 0,664.",
	"@@Slope_PSZFactor_tag0@@": "<strong>Dejavnik velikosti pikslov</strong> beleži spremembe merila, ko pregledovalnik povečuje in pomanjšuje kartni prikaz. Nadzoruje stopnjo, pri kateri se <strong>Z-faktor</strong> spremeni.",
	"@@Slope_PSZFactor_tag1@@": "Ta parameter je veljaven samo, ko je <strong>tip spremembe merila</strong> <strong>izmerjen</strong>. Privzeta vrednost je 0,024.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag0@@": "Vhodni rastrski sloj akumulacije toka.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag1@@": "To lahko ustvarite s funkcijo <strong>akumulacije toka</strong>.",
	"@@Snap-Pour-Point_Pour-Point-Field_tag0@@": "Polje, uporabljeno za dodelitev vrednosti lokacijam točk litja.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag0@@": "Vhodne lokacije točk litja, ki jih je treba poravnati.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag1@@": "Za vhodni rastrski sloj bodo vse celice, ki niso brez podatkov (tj. Imajo vrednost), obravnavane kot točke litja in poravnane.",
	"@@Snap-Pour-Point_Snap-Distance_tag0@@": "Največja razdalja v enotah karte za iskanje celice z višjim akumuliranim tokom.",
	"@@Speckle_Additive-Noise-Mean_tag0@@": "Določa srednjo vrednost dodatnega šuma. Večja srednja vrednost hrupa bo proizvedla manj glajenja, medtem ko bo rezultat manjše vrednosti več glajenja.",
	"@@Speckle_Additive-Noise-Mean_tag1@@": "Ta parameter je veljaven samo, kadar je <strong>tip filtra</strong> <strong>filter Lee</strong> in je <strong>model šuma</strong> <strong>dodatni šum</strong> ali <strong>dodaten in multiplikativen šum</strong>. Privzeta vrednost je 0.",
	"@@Speckle_Damping-Factor_tag0@@": "Določa obseg eksponentnega učinka dušenja na filtriranje. Večja vrednost dušenja ohranja boljše robove, vendar manj gladi, medtem ko manjša vrednost proizvede več glajenja. Rezultat vrednosti 0 ima enak izhod kot nizkoprepustni filter.",
	"@@Speckle_Damping-Factor_tag1@@": "Ta parameter je veljaven samo, kadar je <strong>tip filtra</strong> <strong>izboljšani filter Lee</strong> ali <strong>filter Frost</strong>. Privzeta vrednost je 1.",
	"@@Speckle_Filter-Size_tag0@@": "Določa velikost okvirja pikslov, ki se uporablja za filtriranje šuma:",
	"@@Speckle_Filter-Size_tag1@@": "3x3",
	"@@Speckle_Filter-Size_tag2@@": "5x5",
	"@@Speckle_Filter-Size_tag3@@": "7x7",
	"@@Speckle_Filter-Size_tag4@@": "9x9",
	"@@Speckle_Filter-Size_tag5@@": "11x11",
	"@@Speckle_Filter-Type_tag0@@": "Določa tip filtra, ki se naj uporabi v algoritmu glajenja za odstranjevanje šuma zrnatosti:",
	"@@Speckle_Filter-Type_tag1@@": "<strong>Filter Lee</strong>--Zmanjša šum zrnatosti tako, da vsakemu pikslu na sliki doda prostorski filter, ki prefiltrira podatke na osnovi lokalne statistike, izračunane v kvadratnem okvirju. Ta filter je uporaben, ko želite zgladiti zrnate podatke, ki imajo dodatno ali multiplikativno komponento. To je privzeta vrednost.",
	"@@Speckle_Filter-Type_tag3@@": "<strong>Izboljšani filter Lee</strong>--Prilagojena različica filtra Lee, ki vključuje <strong>faktor dušenja</strong> in <strong>število pogledov</strong>. Ta filter je uporaben, ko želite zmanjšati zrnatost in ohraniti informacije teksture.",
	"@@Speckle_Filter-Type_tag9@@": "<strong>Filter Frost</strong>--Zmanjša šum zrnatosti z eksponentnim dušenjem krožno simetričnega filtra, ki znotraj posameznih filtrirnih okvirjev uporablja lokalno statistiko. Ta filter je uporaben, ko želite zmanjšati zrnatost in ohraniti robove na radarskih slikah.",
	"@@Speckle_Filter-Type_tag11@@": "<strong>Filter Kuan</strong>--Ta filter podobno kot filter Lee vsakemu pikslu na sliki doda prostorski filter in prefiltrira podatke na osnovi lokalne statistike, izračunane v kvadratnem okvirju. Ta filter je uporaben, ko želite zmanjšati zrnatost in ohraniti robove na radarskih slikah.",
	"@@Speckle_Multiplicative-Noise-Mean_tag0@@": "Določa srednjo vrednost multiplikativnega šuma. Večja srednja vrednost hrupa bo proizvedla manj glajenja, medtem ko bo rezultat manjše vrednosti več glajenja.",
	"@@Speckle_Multiplicative-Noise-Mean_tag1@@": "Ta parameter je veljaven samo, kadar je <strong>tip filtra</strong> <strong>filter Lee</strong> in je <strong>model šuma</strong> <strong>dodatni šum</strong> ali <strong>dodaten in multiplikativen šum</strong>. Privzeta vrednost je 1.",
	"@@Speckle_Noise-Model_tag0@@": "Določa vrsto šuma, ki zmanjšuje kakovost radarske slike:",
	"@@Speckle_Noise-Model_tag1@@": "<strong>Multiplikativni šum</strong>--Naključni šum signala, ki se med zajemom ali prenosom pomnoži v ustrezni signal",
	"@@Speckle_Noise-Model_tag3@@": "<strong>Dodatni šum</strong>--Naključni šum signala, ki se med zajemom ali prenosom doda v ustrezni signal",
	"@@Speckle_Noise-Model_tag5@@": "<strong>Dodatni in multiplikativni šum</strong>--Oba modela šuma",
	"@@Speckle_Noise-Variance_tag0@@": "Določa varianco šuma radarske slike.",
	"@@Speckle_Noise-Variance_tag1@@": "Ta parameter je veljaven samo, kadar je <strong>tip filtra</strong> <strong>filter Lee</strong> in je <strong>model šuma</strong> <strong>dodatni šum</strong> ali <strong>dodaten in multiplikativen šum</strong>. Privzeta vrednost je 0,25.",
	"@@Speckle_Number-of-Looks_tag0@@": "Določa število pogledov slike, ki nadzira glajenje slike in ocenjuje varianco šuma. Rezultat manjše vrednosti je več glajenja, medtem ko večja vrednost ohrani več geoobjektov slike.",
	"@@Speckle_Number-of-Looks_tag1@@": "Ta parameter je veljaven samo, kadar je <strong>tip filtra</strong> <strong>filter Lee</strong> in je <strong>model šuma</strong> <strong>multiplikativni šum</strong>, ali kadar je <strong>tip filtra</strong> <strong>filter Kuan</strong>. Privzeta vrednost je 1.",
	"@@Speckle_Raster_tag0@@": "Vhodni raster.",
	"@@Spectral-Conversion_Conversion-Matrix_tag0@@": "Matrika, ki se uporablja za pretvorbo vhodnega rastra.",
	"@@Spectral-Conversion_Conversion-Matrix_tag1@@": "Enačba za izvedbo te pretvorbe je:",
	"@@Spectral-Conversion_Conversion-Matrix_tag2@@": "Izhodni pas_R = Ponder_P * Pas_C,",
	"@@Spectral-Conversion_Conversion-Matrix_tag3@@": ", kjer velja:",
	"@@Spectral-Conversion_Conversion-Matrix_tag4@@": "Pas_R je izhodni pas, kjer je R število od 1 do števila izhodnih pasov.",
	"@@Spectral-Conversion_Conversion-Matrix_tag5@@": "Ponder_P je z vejico razmejeni seznam ponderjev; 1 za vsak izhodni pas. Vsota vseh ponderjev za vsak pas naj bo enaka 1.",
	"@@Spectral-Conversion_Conversion-Matrix_tag6@@": "Pas_C je vhodna slika, kjer je C število od 1 do števila pasov vhodne slike.",
	"@@Spectral-Conversion_Raster_tag0@@": "Vhodni raster.",
	"@@Spectral-Conversion_Raster_tag1@@": "To je lahko rastrski sklop podatkov, mozaični sklop podatkov ali slikovna storitev.",
	"@@Spectral-Conversion_Size_tag0@@": "Število vrstic in stolpcev v <strong>matriki za pretvorbo</strong>.",
	"@@Square_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Square_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Square_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Square_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Square_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Square_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Square_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Square_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Square_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Square_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Square_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Square_Raster_tag0@@": "Vhodne vrednosti, ki jih je treba kvadrirati.",
	"@@Square-Root_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Square-Root_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Square-Root_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Square-Root_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Square-Root_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Square-Root_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Square-Root_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Square-Root_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Square-Root_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Square-Root_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Square-Root_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Square-Root_Raster_tag0@@": "Vhodne vrednosti, ki se uporabljajo za iskanje kvadratnega korena.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag0@@": "Nastavite statistične vrednosti za vsak pas.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag1@@": "Stolpec ${Histogram} je polje samo za branje, ki ga lahko zasedete z uporabo parametra <strong>uvoza</strong>. Če uvozite datoteko histograma, bo stolpec ${Histogram} označen kot <strong>določen</strong>.",
	"@@Statistics-and-Histogram_Import_tag0@@": "Uvozite informacije statistike in histograma iz obstoječega rastra ali datoteke XML.",
	"@@Statistics-and-Histogram_Raster_tag0@@": "Vhodni raster, ki zahteva, da sta statistika in histogram nastavljena.",
	"@@Statistics-and-Histogram_Statistics_tag0@@": "Nastavite statistične vrednosti za vsak pas.",
	"@@Stream-Link_Flow-Direction-Raster_tag0@@": "Vhodni raster, ki prikazuje smer toka iz vsake celice.",
	"@@Stream-Link_Flow-Direction-Raster_tag1@@": "Raster smeri toka lahko ustvarite z zagonom funkcije <strong>smeri toka</strong>.",
	"@@Stream-Link_Stream-Raster_tag0@@": "Vhodni raster, ki predstavlja omrežje linearnega pretoka.",
	"@@Stream-Order_Flow-Direction-Raster_tag0@@": "Vhodni raster, ki prikazuje smer toka iz vsake celice.",
	"@@Stream-Order_Flow-Direction-Raster_tag1@@": "Raster smeri toka lahko ustvarite z zagonom funkcije <strong>smeri toka</strong>.",
	"@@Stream-Order_Order-Method_tag0@@": "Metoda, ki se uporablja za dodeljevanje vrstnega reda pretoka.",
	"@@Stream-Order_Order-Method_tag1@@": "<strong>STRAHLER</strong>--Metoda vrstnega reda pretoka, ki jo je leta 1952 predlagal Strahler. Vrstni red pretoka se pri sekanju pretokov istega vrstnega reda samo povečuje. Presek povezave prvega in drugega vrstnega reda ostane povezava drugega vrstnega reda, namesto da bi ustvarila povezavo tretjega vrstnega reda. To je privzeta vrednost.",
	"@@Stream-Order_Order-Method_tag3@@": "<strong>SHREVE</strong>--Metoda vrstnega reda pretoka po magnitudi, ki jo je leta 1967 predlagal Shreve. Vsem povezavam brez pritokov se dodeli magnituda (vrstni red) ena. Magnitude se dodajajo dolvodno. Ko se dve povezavi sekata, se njuni magnitudi dodata in dodelita dolvodni povezavi.",
	"@@Stream-Order_Stream-Raster_tag0@@": "Vhodni pretočni raster predstavlja omrežje linearnega pretoka.",
	"@@Stretch_Auto-Gamma_tag0@@": "Uporabite <strong>samodejni gama</strong>, da iz sklopa podatkov statistike in histograma izračunate vrednost gama. Statistika je lahko funkcijsko ocenjena statistika ali pa jo oceni programska oprema, če izberete sloj.",
	"@@Stretch_Dynamic-Range-Adjustment_tag0@@": "Obkljukajte izbirno polje <strong>izravnave dinamičnega razpona</strong> , če želite, da se statistika izračuna samo iz pikslov, prikazanih na vašem zaslonu. Ta možnost se na splošno uporabi pri objavljanju in uporabi slike v spletni aplikaciji, ki ne more izvesti te vrste raztezanja.",
	"@@Stretch_Estimate-Statistics_tag0@@": "Obkljukajte izbirno polje <strong>ocene statistike</strong>, če želite oceniti vašo statistiko. Ocenjena statistika se izračunana iz vzorčenja 1000 s 1000 iz središča rastra in uporabi za raztezanje.",
	"@@Stretch_Estimate-Statistics_tag3@@": "Če je to potrjeno in ima raster statistiko ali pa ste vnesli vrednosti v tabelo <strong>statistike</strong>, bodo te uporabljene namesto ocene, razen če raztezanje zahteva histogram. Če raztezanje zahteva histogram, ki ne obstaja, bo ocenjeno.",
	"@@Stretch_Gamma_tag0@@": "Za ročno nastavitev vrednosti <strong>gama</strong> uporabite vrstico drsnika.",
	"@@Stretch_Number-Of-Standard-Deviations_tag0@@": "Določite vrednost n za število standardnih odklonov, ki bodo uporabljeni. Ta metoda se uporablja za poudarjanje, kako zelo se vrednosti geoobjektov razlikujejo od srednje vrednosti; najbolje jo je uporabiti na običajno porazdeljenih podatkih.",
	"@@Stretch_Output-Maximum_tag0@@": "Nastavite najvišjo vrednost piksla za histogram.",
	"@@Stretch_Output-Maximum_tag1@@": "<strong>Minimum rezultata</strong> in <strong>maksimum rezultata</strong> bosta določili razpon vrednosti, ki bodo potem linearno razširjene s kontrastnim raztezanjem.",
	"@@Stretch_Output-Minimum_tag0@@": "Nastavite najnižjo vrednost piksla za histogram.",
	"@@Stretch_Output-Minimum_tag1@@": "<strong>Minimum rezultata</strong> in <strong>maksimum rezultata</strong> bosta določili razpon vrednosti, ki bodo potem linearno razširjene s kontrastnim raztezanjem.",
	"@@Stretch_Percent-Clip-Maximum_tag0@@": "Določite odstotek visokih vrednosti, ki jih želite izvzeti iz raztezanja.",
	"@@Stretch_Percent-Clip-Maximum_tag1@@": "Veljavne vrednosti se gibljejo od 0 do 99.",
	"@@Stretch_Percent-Clip-Minimum_tag0@@": "Določite odstotek nizkih vrednosti, ki jih želite izvzeti iz raztezanja.",
	"@@Stretch_Percent-Clip-Minimum_tag1@@": "Veljavne vrednosti se gibljejo od 0 do 99.",
	"@@Stretch_Raster_tag0@@": "Vhodni raster za kontrastno raztezanje.",
	"@@Stretch_Sigmoid-Strength-Level_tag0@@": "<strong>Stopnja potence</strong> določa, koliko sigmoidne funkcije se bo uporabilo pri raztezanju. Nizka vrednost, kot je 1, bo uporabila zgolj srednji del krivulje, ki po navadi proizvaja medle in nežne barve. Visoka vrednost, kot je 6, bo uporabila celo krivuljo, ki po navadi proizvaja žive in ostre barve.",
	"@@Stretch_Statistics_tag0@@": "V pogovorno okno lahko vnesete lastno statistiko. Statistike se privzeto pridobijo iz podatkov; vseeno bodo namesto njih uporabljene vrednosti, ki jih vnesete v ta parameter.",
	"@@Stretch_Type_tag0@@": "Izberite metodo tipa raztezanja:",
	"@@Stretch_Type_tag1@@": "Brez--Brez kontrastnega raztezanja",
	"@@Stretch_Type_tag2@@": "StdOdk--Raztezanje s standardnim odklonom",
	"@@Stretch_Type_tag3@@": "MinMax--Raztezanje minimum-maksimum",
	"@@Stretch_Type_tag4@@": "OdstotekMinMax--Raztezanje z odstotkom izreza",
	"@@Stretch_Type_tag5@@": "Sigmoidno--Sigmoidno raztezanje",
	"@@Stretch_Use-Gamma_tag0@@": "Obkljukajte izbirno polje <strong>Uporabi gama</strong>, če želite uporabiti gama raztezanje.",
	"@@Swath_Cellsize_tag0@@": "Velikost celice za izhodni raster bo zaznana samodejno; vseeno lahko to spremenite, če želite. Velikost celice se lahko spremeni, obseg rastrskega sklopa podatkov pa bo ostal enak.",
	"@@Swath_Interpolation-Method_tag0@@": "Za to funkcijo obstajajo štiri metode za prevzorčenje:",
	"@@Swath_Interpolation-Method_tag1@@": "<strong>Najbližji sosed</strong>--Izračuna vrednost pikslov z uporabo najbližjega piksla. Če izhodiščni piksel ne obstaja, v izhodu ni mogoče ustvariti novega piksla.",
	"@@Swath_Interpolation-Method_tag3@@": "<strong>Bilinearno</strong>--Izračuna vrednost pikslov z uporabo vrednosti štirih najbližjih pikslov glede na razdaljo.",
	"@@Swath_Interpolation-Method_tag5@@": "<strong>Linearno redčenje</strong>--Uporablja triangulirano nepravilno omrežje iz središčnih točk vsake celice v nepravilnem rastru za interpolacijo površine, ki se nato pretvori v pravilni raster.",
	"@@Swath_Interpolation-Method_tag7@@": "<strong>Naravni sosed</strong>--Izvede dodelitev najbližjega soseda in je najhitrejša metoda interpolacije. Primarno se uporablja za diskretne podatke, kot je klasifikacija rabe tal, ker ne bo spremenila vrednosti celic. Največja prostorska napaka bo polovica velikosti celice.",
	"@@Swath_Raster_tag0@@": "Nepravilno matričen raster, ki bo prevzorčen.",
	"@@Tan_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Tan_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Tan_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Tan_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Tan_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Tan_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Tan_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Tan_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Tan_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Tan_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Tan_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Tan_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednosti tangensa.",
	"@@TanH_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@TanH_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@TanH_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@TanH_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@TanH_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@TanH_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@TanH_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@TanH_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@TanH_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@TanH_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@TanH_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@TanH_Raster_tag0@@": "Vhod, za katerega je treba izračunati vrednosti hiperboličnega tangensa.",
	"@@Tasseled-Cap_Raster_tag0@@": "Vhodni raster, na katerem se izvede Kauth-Thomasova transformacija.",
	"@@Times_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Times_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Times_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Times_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Times_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Times_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Times_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Times_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Times_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Times_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Times_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Times_Raster_tag0@@": "Vnos, ki vsebuje vrednosti za pomnožitev.",
	"@@Times_Raster_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Times_Raster2_tag0@@": "Vnos, ki vsebuje vrednosti, s katerimi bo pomnožen prvi vnos.",
	"@@Times_Raster2_tag1@@": "Če je za drugi parameter določen raster, se za vnos tega parametra lahko uporabi konstantna vrednost.",
	"@@Transpose-Bits_Bit-Pattern_tag0@@": "Izberite tip transponiranja, da izvedete ali določite tip transponiranja po meri:",
	"@@Transpose-Bits_Bit-Pattern_tag1@@": "Landsat 8 Cirrus",
	"@@Transpose-Bits_Bit-Pattern_tag2@@": "Landsat 8 Oblak",
	"@@Transpose-Bits_Bit-Pattern_tag3@@": "Landsat 8 Senčenje oblaka",
	"@@Transpose-Bits_Bit-Pattern_tag4@@": "Landsat 8 Dodeljeno polnilo",
	"@@Transpose-Bits_Bit-Pattern_tag5@@": "Landsat 8 Odvržen okvir",
	"@@Transpose-Bits_Bit-Pattern_tag6@@": "Landsat 8 Sneg/led",
	"@@Transpose-Bits_Bit-Pattern_tag7@@": "Landsat 8 Okluzija površja",
	"@@Transpose-Bits_Bit-Pattern_tag8@@": "Landsat 8 Vegetacija",
	"@@Transpose-Bits_Bit-Pattern_tag9@@": "Landsat 8 Voda",
	"@@Transpose-Bits_Bit-Pattern_tag10@@": "Uporabniško določen",
	"@@Transpose-Bits_Constant-Value_tag0@@": "Izbirna vrednost, ki se bo uporabila za zapolnitev vseh bitov, ki niso vključeni v transponiranje. Ta parameter je prikazan samo, ko je parameter<strong>Ustvari zapolnitev rastra iz konstante</strong> nastavljen na <strong>Da</strong>.",
	"@@Transpose-Bits_Fill-Raster_tag0@@": "Določite rastrski podatkovni sklop, ki se bo uporabil za zapolnitev vseh bitov, ki niso vključeni v transponiranje. Ta parameter je prikazan samo, ko je parameter<strong>Ustvari zapolnitev rastra iz konstante</strong> nastavljen na <strong>Ne</strong>.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag0@@": "Ustvarite zapolnitev rastra z uporabo konstantne vrednosti:",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag1@@": "<strong>Da</strong>--Raster bo ustvarjen z uporabo konstantne vrednosti, da se zapolnijo biti, ki niso vključeni v transponiranje. To je privzeta vrednost.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag3@@": "<strong>Ne</strong>--Raster bo ustvarjen iz obstoječega rastrskega sklopa podatkov z uporabo vrednosti pikslov, da se zapolnijo biti, ki niso vključeni v transponiranje.",
	"@@Transpose-Bits_Output-Bit-and-Input-Bit_tag0@@": "Tabela samo za branje, ki prikazuje izhodne bite in vhode, ki bodo na njihovem mestu.",
	"@@Transpose-Bits_Raster_tag0@@": "Vhodni raster za razpakiranje in preslikave.",
	"@@Unit-Conversion_From-Unit_tag0@@": "Originalni tip enot za piksle.",
	"@@Unit-Conversion_Raster_tag0@@": "Vhodni raster, ki bo vseboval pretvorjene enote.",
	"@@Unit-Conversion_To-Unit_tag0@@": "Pretvorjeni tip enot za piksle.",
	"@@Vector-Field_Angle-Reference-System_tag0@@": "Določa, kako je bila izmerjena smerna komponenta.",
	"@@Vector-Field_Angle-Reference-System_tag1@@": "Geografsko--0° kaže proti severu in 90° proti vzhodu",
	"@@Vector-Field_Angle-Reference-System_tag2@@": "Aritmetično--0° kaže proti vzhodu in 90° proti severu",
	"@@Vector-Field_Input-Data-Type_tag0@@": "Tip vektorskega polja, ki ga vaši vnosi predstavljajo.",
	"@@Vector-Field_Input-Data-Type_tag1@@": "Neznano--Neznano je, ali vnosi predstavljajo U-V ali smer magnitude.",
	"@@Vector-Field_Input-Data-Type_tag2@@": "U-V--Vhodni podatki predstavljajo komponente U in V.",
	"@@Vector-Field_Input-Data-Type_tag3@@": "Smer magnitude--Vhodni podatki predstavljajo magnitudo in smer.",
	"@@Vector-Field_Output-Data-Type_tag0@@": "Določa tip vektorskega polja, ki ga bodo vaši vnosi predstavljali.",
	"@@Vector-Field_Output-Data-Type_tag1@@": "Smer magnitude--Izhodni podatki predstavljajo magnitudo in smer.",
	"@@Vector-Field_Output-Data-Type_tag2@@": "U-V--Izhodni podatki predstavljajo komponente U in V.",
	"@@Vector-Field_Raster1_tag0@@": "Prvi vhodni raster.",
	"@@Vector-Field_Raster1_tag1@@": "To bo vrednost U ali magnituda.",
	"@@Vector-Field_Raster2_tag0@@": "Drugi vhodni raster.",
	"@@Vector-Field_Raster2_tag1@@": "To bo vrednost V ali smer.",
	"@@Viewshed_Analysis-Method_tag0@@": "Izberite metodo, po kateri se bo izračunala vidnost. Ta možnost vam omogoča, da nekaj natančnosti zamenjate za večjo učinkovitost.",
	"@@Viewshed_Analysis-Method_tag1@@": "Vse linije vidnosti--Linija vidnosti se izvede na vsakem pikslu v rastru, da se vzpostavijo vidne površine. To je privzeta metoda.",
	"@@Viewshed_Analysis-Method_tag2@@": "Obseg linij vidnosti--Linije vidnosti se izvedejo samo na pikslih v obsegu vidnih površin, da se vzpostavijo površine vidnosti. Ta metoda je bolj učinkovita kot metoda <strong>Vse linije vidnosti</strong>, saj je v izračunu manj linij vidnosti.",
	"@@Viewshed_Analysis-Type_tag0@@": "Izberite, kateri tip analize vidnosti želite izvesti, določiti, kako vidna je vsaka celica za opazovalca, ali določiti, kateri opazovalci so vidni za vsako površinsko lokacijo.",
	"@@Viewshed_Analysis-Type_tag1@@": "Pogostost--Kolikokrat lahko vhodne lokacije za opazovanje (kot točke ali vozlišča za polilinijske geoobjekte opazovalca) zaznajo vsako lokacijo piksla. To je privzeta vrednost.",
	"@@Viewshed_Analysis-Type_tag2@@": "Opazovalci--Izhod določa, točno katere opazovalne točke so vidne z vsake površinske lokacije rastra. Največje dovoljeno število vhodnih opazovalcev s tem tipom analize je 32.",
	"@@Viewshed_Horizontal-End-Angle_tag0@@": "Ta vrednost določa končni kot horizontalnega razpona skeniranja. Vrednost naj bo določena v stopinjah od 0 do 360,0, pri čemer je vrednost 0 usmerjena proti severu. Privzeta vrednost je 360,0.",
	"@@Viewshed_Horizontal-End-Angle_tag1@@": "To je lahko polje v vhodnem sklopu podatkov <strong>geoobjektov opazovalca</strong> ali številčna vrednost. Če je parameter nastavljen na vrednost, bo ta vrednost dodeljena vsem opazovalcem. Za določanje različnih vrednosti za vsakega opazovalca nastavite ta parameter na polje v sklopu podatkov <strong>geoobjektov opazovalca</strong>.",
	"@@Viewshed_Horizontal-Start-Angle_tag0@@": "Ta vrednost določa začetni kot horizontalnega razpona skeniranja. Vrednost naj bo določena v stopinjah od 0 do 360,0, pri čemer je vrednost 0 usmerjena proti severu. Privzeta vrednost je 0.",
	"@@Viewshed_Horizontal-Start-Angle_tag1@@": "To je lahko polje v vhodnem sklopu podatkov <strong>geoobjektov opazovalca</strong> ali številčna vrednost. Če je parameter nastavljen na vrednost, bo ta vrednost dodeljena vsem opazovalcem. Za določanje različnih vrednosti za vsakega opazovalca nastavite ta parameter na polje v sklopu podatkov <strong>geoobjektov opazovalca</strong>.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag0@@": "Vrsta razdalje za parameter notranjega polmera.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag1@@": "Nepotrjeno--<strong>Notranji polmer</strong> si je treba razlagati kot dvodimenzionalno razdaljo. To je privzeta vrednost.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag4@@": "Potrjeno--<strong>Notranji polmer</strong> si je treba razlagati kot tridimenzionalno razdaljo.",
	"@@Viewshed_Inner-Radius_tag0@@": "Ta vrednost določa začetno (najmanjšo) razdaljo, iz katere se določi vidnost. Piksli, ki so bliže kot ta razdalja, se smatrajo kot nevidni v izhodu, vendar lahko še vedno ovirajo vidnost pikslov med <strong>notranjim polmerom</strong> in <strong>zunanjim polmerom</strong>. Privzeta vrednost je 0.",
	"@@Viewshed_Inner-Radius_tag5@@": "To je lahko polje v vhodnem sklopu podatkov <strong>geoobjektov opazovalca</strong> ali številčna vrednost. Če je parameter nastavljen na vrednost, bo ta vrednost dodeljena vsem opazovalcem. Za določanje različnih vrednosti za vsakega opazovalca nastavite ta parameter na polje v sklopu podatkov <strong>geoobjektov opazovalca</strong>.",
	"@@Viewshed_Observer-Elevation_tag0@@": "Ta vrednost se uporablja za določanje višine površinskih opazovalnih točk ali vozlišč.",
	"@@Viewshed_Observer-Elevation_tag1@@": "To je lahko polje v vhodnem sklopu podatkov <strong>geoobjektov opazovalca</strong> ali številčna vrednost. Če ta parameter ni določen, bo višina opazovalca pridobljena iz površinskega rastra z bilinearno interpolacijo. Če je parameter nastavljen na vrednost, bo ta vrednost dodeljena vsem opazovalcem. Za določanje različnih vrednosti za vsakega opazovalca nastavite ta parameter na polje v sklopu podatkov <strong>geoobjektov opazovalca</strong>.",
	"@@Viewshed_Observer-Features_tag0@@": "Zahtevan vhodni geoobjektni razred, ki prepozna lokacije opazovalcev. To so lahko točka, mnogotočkovni ali polilinijski geoobjekti.",
	"@@Viewshed_Observer-Features_tag1@@": "Vhodni geoobjektni razred se med izračunom vidnosti pretvori v tridimenzionalni geocentrični koordinatni sistem. Opazovalci izven obsega površinskega rastra ali v celicah brez podatkov bodo v izračunu prezrti.",
	"@@Viewshed_Observer-Offset_tag0@@": "Ta vrednost določa vertikalno razdaljo (v površinskih enotah), ki bo dodana višini opazovalca. Ta naj bo celo število ali vrednost plavajoče vejice.",
	"@@Viewshed_Observer-Offset_tag1@@": "To je lahko polje v vhodnem sklopu podatkov <strong>geoobjektov opazovalca</strong> ali številčna vrednost. Če je parameter nastavljen na vrednost, bo ta vrednost dodeljena vsem opazovalcem. Za določanje različnih vrednosti za vsakega opazovalca nastavite ta parameter na polje v sklopu podatkov <strong>geoobjektov opazovalca</strong>.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag0@@": "Vrsta razdalje za parameter zunanjega polmera.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag1@@": "Nepotrjeno--<strong>Zunanji polmer</strong> si je treba razlagati kot dvodimenzionalno razdaljo. To je privzeta vrednost.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag4@@": "Potrjeno--<strong>Zunanji polmer</strong> si je treba razlagati kot tridimenzionalno razdaljo.",
	"@@Viewshed_Outer-Radius_tag0@@": "Ta vrednost določa največjo razdaljo, iz katere se določi vidnost. Piksli nad to razdaljo so izvzeti iz analize.",
	"@@Viewshed_Outer-Radius_tag1@@": "To je lahko polje v vhodnem sklopu podatkov <strong>geoobjektov opazovalca</strong> ali številčna vrednost. Če je parameter nastavljen na vrednost, bo ta vrednost dodeljena vsem opazovalcem. Za določanje različnih vrednosti za vsakega opazovalca nastavite ta parameter na polje v sklopu podatkov <strong>geoobjektov opazovalca</strong>.",
	"@@Viewshed_Raster_tag0@@": "Zahtevan vhodni površinski raster. Lahko gre za celo število ali raster plavajoče vejice.",
	"@@Viewshed_Raster_tag1@@": "Vhod se med izračunom vidnosti pretvori v tridimenzionalni geocentrični koordinatni sistem. Celice brez podatkov na vhodnem rastru ne ovirajo določanja vidnosti.",
	"@@Viewshed_Refractive-Coefficient_tag0@@": "Koeficient loma vidne svetlobe v zraku.",
	"@@Viewshed_Refractive-Coefficient_tag1@@": "Privzeta vrednost je 0,13.",
	"@@Viewshed_Surface-Offset_tag0@@": "Ta vrednost ponazarja vertikalno razdaljo (v površinskih enotah), ki bo dodana z-vrednosti vsakega ciljnega piksla, saj se upošteva za vidnost. Ta naj bo celo število ali vrednost plavajoče vejice.",
	"@@Viewshed_Surface-Offset_tag1@@": "To je lahko polje v vhodnem sklopu podatkov <strong>geoobjektov opazovalca</strong> ali številčna vrednost. Če je parameter nastavljen na vrednost, bo ta vrednost dodeljena vsem opazovalcem. Za določanje različnih vrednosti za vsakega opazovalca nastavite ta parameter na polje v sklopu podatkov <strong>geoobjektov opazovalca</strong>.",
	"@@Viewshed_Vertical-Error_tag0@@": "Količina negotovosti, izmerjena kot napaka vrednosti korena povprečnih kvadratov (RMSE), v površinskih višinskih vrednostih. To je vrednost plavajoče vejice, ki predstavlja pričakovano napako vhodnih višinskih vrednosti. Ko je temu parametru dodeljena vrednost, večja od 0, bo izhodni raster vidnosti plavajoča vejica. V tem primeru vsaka vrednost piksla na izhodnem rastru vidnosti predstavlja vsoto verjetnosti, da je celica vidna kateremu koli opazovalcu.",
	"@@Viewshed_Vertical-Error_tag1@@": "Kadar je <strong>tip analize</strong> <strong>Opazovalec</strong> ali je <strong>metoda analize</strong> <strong>Obseg linij vidnosti</strong>, je ta parameter onemogočen.",
	"@@Viewshed_Vertical-Lower-Angle_tag0@@": "Ta vrednost določa omejitev spodnjega vertikalnega kota skeniranja pod horizontalno ravnino. Vrednost naj bo določena v stopinjah od -90,0 do 0 in je lahko celo število ali plavajoča vejica. Privzeta vrednost je -90,0.",
	"@@Viewshed_Vertical-Lower-Angle_tag1@@": "To je lahko polje v vhodnem sklopu podatkov <strong>geoobjektov opazovalca</strong> ali številčna vrednost. Če je parameter nastavljen na vrednost, bo ta vrednost dodeljena vsem opazovalcem. Za določanje različnih vrednosti za vsakega opazovalca nastavite ta parameter na polje v sklopu podatkov <strong>geoobjektov opazovalca</strong>.",
	"@@Viewshed_Vertical-Upper-Angle_tag0@@": "Ta vrednost določa omejitev zgornjega vertikalnega kota skeniranja nad horizontalno ravnino. Vrednost naj bo določena v stopinjah od 0 do 90,0 in je lahko celo število ali plavajoča vejica. Privzeta vrednost je 90,0.",
	"@@Viewshed_Vertical-Upper-Angle_tag1@@": "To je lahko polje v vhodnem sklopu podatkov <strong>geoobjektov opazovalca</strong> ali številčna vrednost. Če je parameter nastavljen na vrednost, bo ta vrednost dodeljena vsem opazovalcem. Za določanje različnih vrednosti za vsakega opazovalca nastavite ta parameter na polje v sklopu podatkov <strong>geoobjektov opazovalca</strong>.",
	"@@Watershed_Flow-Direction-Raster_tag0@@": "Vhodni raster, ki prikazuje smer toka iz vsake celice.",
	"@@Watershed_Flow-Direction-Raster_tag1@@": "Raster smeri toka lahko ustvarite z zagonom funkcije <strong>smeri toka</strong>.",
	"@@Watershed_Pour-Point(s)-Raster_tag0@@": "Lokacije vhodnih točk litja.",
	"@@Watershed_Pour-Point(s)-Raster_tag1@@": "Za raster to predstavlja celice, nad katerimi bo določeno prispevno območje. Vse celice, ki nimajo vrednosti brez podatkov, bodo uporabljene kot izvirne celice.",
	"@@Watershed_Pour-Point-Field_tag0@@": "Polje, uporabljeno za dodelitev vrednosti lokacijam točk litja.",
	"@@Watershed_Pour-Point-Field_tag1@@": "Za rastrski sklop podatkov o izlivni točki se kot privzeta vrednost uporablja ${Value}.",
	"@@Weighted-Overlay_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Weighted-Overlay_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Weighted-Overlay_Cellsize-Type_tag2@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Weighted-Overlay_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Weighted-Overlay_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Weighted-Overlay_Cellsize-Type_tag5@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Weighted-Overlay_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Weighted-Overlay_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Weighted-Overlay_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Weighted-Overlay_Extent-Type_tag3@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Weighted-Overlay_Extent-Type_tag4@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Weighted-Overlay_Scales_tag0@@": "Razpon novih vrednosti za preslikavo starih vrednosti.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag0@@": "Tabela obteženega prekrivanja je sestavljena iz štirih delov:",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag1@@": "Sloj--Vsi vhodni rastri morajo biti tip celega števila.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag2@@": "Vpliv--Vsak vhodni raster je obtežen glede na pomembnost ali vpliv kot relativni odstotek. Vsota ponderiranega odstotnega vpliva mora biti enaka 100 in vsak ponder mora biti določen s celimi števili.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag3@@": "Polje--Polje celega števila ali niza na vhodnem rastru, ki se uporablja za ponderiranje.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag4@@": "Tabela preslikav--Vsaki vrednosti v vhodnem rastru je glede na tabelo preslikav dodeljena nova vrednost merila. Vrednost merila je lahko veljavna vrednost ali vrednost brez podatkov.",
	"@@Weighted-Sum_Cellsize-Type_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Weighted-Sum_Cellsize-Type_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Weighted-Sum_Cellsize-Type_tag2@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Weighted-Sum_Cellsize-Type_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Weighted-Sum_Cellsize-Type_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Weighted-Sum_Cellsize-Type_tag5@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Weighted-Sum_Extent-Type_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Weighted-Sum_Extent-Type_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Weighted-Sum_Extent-Type_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Weighted-Sum_Extent-Type_tag3@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Weighted-Sum_Extent-Type_tag4@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag0@@": "Tabelo ponderirane vsote določajo tri lastnosti:",
	"@@Weighted-Sum_Weighted-Sum-Table_tag1@@": "Sloj--Ponderiran raster.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag2@@": "Polje--Polje rastra, ki se uporablja za ponderiranje.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag3@@": "Ponder--Vrednost ponderja, s katero se pomnoži raster. Lahko je katera koli pozitivna ali negativna decimalna vrednost.",
	"@@Wind-Chill_Temperature-Raster_tag0@@": "Enopasovni raster, pri katerem vrednosti pikslov predstavljajo okoliško temperaturo zraka.",
	"@@Wind-Chill_Temperature-Units_tag0@@": "Merska enota, povezana z vhodnim temperaturnim rastrom. Razpoložljive vhodne enote so Celzij, Fahrenheit in Kelvin.",
	"@@Wind-Chill_Wind-Chill-Units_tag0@@": "Merska enota, povezana z izhodnim rastrom. Razpoložljive izhodne enote so Celzij, Fahrenheit in Kelvin.",
	"@@Wind-Chill_Wind-Speed-Raster_tag0@@": "Enopasovni raster, pri katerem vrednosti pikslov predstavljajo hitrost vetra.",
	"@@Wind-Chill_Wind-Speed-Units_tag0@@": "Določa enoto meritve za raster hitrosti vetra:",
	"@@Wind-Chill_Wind-Speed-Units_tag1@@": "Milj na uro (milj/h)",
	"@@Wind-Chill_Wind-Speed-Units_tag2@@": "Kilometrov na uro (km/h)",
	"@@Wind-Chill_Wind-Speed-Units_tag3@@": "Metrov na sekundo (m/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag4@@": "Čevljev na sekundo (čevljev/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag5@@": "Vozlov (kn)",
	"@@Zonal-Remap_Background-Value_tag0@@": "Začetna vrednost pikslov izhodnega rastra, preden se piksli preslikajo.",
	"@@Zonal-Remap_Default-Output-Value_tag0@@": "Vrednost, ki bo dodeljena pikslu, ki ne ustreza nobenemu pogoju, nastavljenem v <strong>tabeli območnih atributov</strong>.",
	"@@Zonal-Remap_Default-Output-Value_tag3@@": "To bo tudi vrednost izhodnega piksla, če parameter <strong>imena polja izhodne vrednosti</strong> ostane nedoločen ali izhodna vrednost ustreznega območnega praga ostane nedoločena v <strong>tabeli območnih atributov</strong>.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag0@@": "Ime polja, ki vsebuje največjo vrednost, pod katero se preslika vhodni piksel.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag1@@": "Če ostane nedoločeno ali če je polje brez vrednosti, se vrednosti pikslov ne preverijo za maksimum.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag0@@": "Ime polja, ki vsebuje najmanjšo vrednost, nad katero se preslika vhodni piksel.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag1@@": "Če ostane nedoločeno ali če je polje brez vrednosti, se vrednosti pikslov ne preverijo za minimum.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag0@@": "Ime polja, ki vsebuje ciljno vrednost, v katero se preslika vhodni piksel.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag1@@": "Če ostane nedoločeno ali če je polje brez vrednosti, se vrednosti preslikanih pikslov nastavijo na <strong>privzeto izhodno vrednost</strong>.",
	"@@Zonal-Remap_Value-Raster_tag0@@": "Zahtevan enopasovni rastrski vhod, ki vsebuje vrednosti pikslov za preslikavo.",
	"@@Zonal-Remap_Where-Clause_tag0@@": "Izbirna poizvedba, uporabljena v <strong>tabeli območnih atributov</strong>.",
	"@@Zonal-Remap_Where-Clause_tag3@@": "Če bi zgornjo tabelo uporabili kot primer, bi poizvedba bila ${Variable1 = 'bare earth' AND Variable2 = 'California'}.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag0@@": "Zahtevana vhodna tabela, ki vsebuje vsaj tri polja. Imeti mora najmanjšo vrednost praga, največjo vrednost praga in ciljno vrednost. Ciljna vrednost je polje, ki bo vsebovalo preslikano vrednost.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag1@@": "Oblika datoteke je lahko geoobjektni razred, geoobjektna storitev ali kateri koli tip tabele, ki ga podpira ArcGIS.",
	"@@Zonal-Remap_Zone-Field_tag0@@": "Ime polja v <strong>tabeli območnih atributov</strong>, ki vsebuje ID vrednosti območja.",
	"@@Zonal-Remap_Zone-Field_tag3@@": "ID vrednosti območja so neposredno povezane z ID-ji območja v vašem območnem rastru. Med preslikavo nudijo še eno stopnjo filtriranja. Če noben ID območja ni povezan z določenim zapisom v tabeli, ne bo vključen v preslikavo.",
	"@@Zonal-Remap_Zone-Raster_tag0@@": "Enopasovni raster, v katerem vsak piksel določa območja, povezana z določeno lokacijo. Območje je določeno kot vsa območja v vhodu, ki imajo enako vrednost. Območja ne morejo biti sosednja.",
	"@@Predict-Using-Trend_dimensiondefinition_tag0@@": "Določi metodo, ki se uporablja za zagotavljanje napovedi vrednosti dimenzije.",
	"@@Predict-Using-Trend_dimensiondefinition_tag1@@": "<strong>Po vrednosti</strong>--Napoved bo izračunana za enojno vrednost dimenzije. Na primer, želite napovedati letne padavine za leta 2050, 2100 in 2150. To je privzeta vrednost.",
	"@@Predict-Using-Trend_dimensiondefinition_tag2@@": "<strong>Po intervalu</strong>--Napoved bo izračunana za interval dimenzije, ki je opredeljen z začetno in končno vrednostjo. Na primer, želite napovedati letne padavine za vsako leto med letoma 20150 in 2150.",
	"@@Predict-Using-Trend_end_tag0@@": "Pri napovedi bo uporabljen končni datum, višina ali globina intervala dimenzije.",
	"@@Predict-Using-Trend_end_tag1@@": "Ta parameter je obvezen, ko je parameter<strong>opredelitve dimenzije</strong> nastavljen na <strong>Po intervalu</strong>.",
	"@@Predict-Using-Trend_raster_tag0@@": "Vhodni večdimenzionalni raster trenda iz funkcije <strong>Ustvari trend</strong>.",
	"@@Predict-Using-Trend_start_tag0@@": "Pri napovedi bo uporabljen začetni datum, višina ali globina intervala dimenzije.",
	"@@Predict-Using-Trend_start_tag1@@": "Ta parameter je obvezen, ko je parameter<strong>opredelitve dimenzije</strong> nastavljen na <strong>Po intervalu</strong>.",
	"@@Predict-Using-Trend_unit_tag0@@": "Enota, ki bo uporabljena za interval vrednosti. Ta parameter velja samo, kadar je dimenzija analize časovna dimenzija.",
	"@@Predict-Using-Trend_unit_tag1@@": "<strong>Ure</strong>--Napoved bo izračunana za vsako uro v razponu časa, opisanega s parametri <strong>Začetek</strong>, <strong>Konec</strong> in <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_unit_tag2@@": "<strong>Dnevi</strong>--Napoved bo izračunana za vsak dan v razponu časa, opisanega s parametri <strong>Začetek</strong>, <strong>Konec</strong> in <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_unit_tag3@@": "<strong>Tedni</strong>--Napoved bo izračunana za vsak teden v razponu časa, opisanega s parametri <strong>Začetek</strong>, <strong>Konec</strong> in <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_unit_tag4@@": "<strong>Meseci</strong>--Napoved bo izračunana za vsak mesec v razponu časa, opisanega s parametri <strong>Začetek</strong>, <strong>Konec</strong> in <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_unit_tag5@@": "<strong>Leta</strong>--Napoved bo izračunana za vsako leto v razponu časa, opisanega s parametri <strong>Začetek</strong>, <strong>Konec</strong> in <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_valueinterval_tag0@@": "Število korakov med dvema vrednostma dimenzije, vključenimi v napoved. Privzeta vrednost je 1.",
	"@@Predict-Using-Trend_valueinterval_tag1@@": "Ta parameter je obvezen, ko je parameter<strong>opredelitve dimenzije</strong> nastavljen na <strong>Po intervalu</strong>.",
	"@@Predict-Using-Trend_values_tag0@@": "Vrednost ali vrednosti dimenzije, uporabljene v napovedi.",
	"@@Predict-Using-Trend_values_tag1@@": "Format vrednosti časa, globine in višine se mora ujemati s formatom vrednosti dimenzije, ki bodo uporabljene za ustvarjanje rastra trenda. Če se raster trenda ustvari za dimenzijo StdTime (standardni čas) mora biti format YYYY-MM-DDTHH:MM:SS, na primer, 2050-01-01T00:00:00. Več vrednosti je ločenih s podpičjem.",
	"@@Process-Raster-Collection_aggregationfunction_tag0@@": "Določite predlogo rastrske funkcije, ki bo uporabljena za agregacijo več izsekov v manj izsekov ali enojni izsek.",
	"@@Process-Raster-Collection_dimension_tag0@@": "Dimenzija agregacije. To je dimenzija vzdolž katere bo potekala agregacija spremenljivk.",
	"@@Process-Raster-Collection_itemfunction_tag0@@": "Določite predlogo rastrske funkcije, ki bo uporabljena za obdelavo vsakega izseka ali elementa v zbirki vhodnega rastra.",
	"@@Process-Raster-Collection_keywordinterval_tag0@@": "Določi interval ključne besede, ki bo uporabljen ob agregaciji vzdolž dimenzije. Parameter je obvezen, kadar je <strong>tip</strong>nastavljen na <strong>Ključna beseda intervala</strong>, in agregacija mora potekati skozi čas.",
	"@@Process-Raster-Collection_keywordinterval_tag1@@": "<strong>Urno</strong>--Vrednosti podatkov bodo agregirane v urne časovne korake in rezultat bo vključeval vsako uro v časovni seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag2@@": "<strong>Dnevno</strong>Vrednosti podatkov bodo agregirane v dnevne časovne korake in rezultat bo vključeval vsak dan v časovni seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag3@@": "<strong>Tedensko</strong>--Vrednosti podatkov bodo agregirane v tedenske časovne korake in rezultat bo vključeval vsak teden v časovni seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag4@@": "<strong>Deseterno</strong>--Vrednosti podatkov bodo agregirane v 3 obdobja, vsako po 10 dni. Zadnje obdobje bo morda vsebovalo manj kot 10 dni. Rezultat bo vključeval 3 izseke za vsak mesec.",
	"@@Process-Raster-Collection_keywordinterval_tag5@@": "<strong>Peterno</strong>--Vrednosti podatkov bodo agregirane v 6 obdobij, vsako po 5 dni. Zadnje obdobje bo morda vsebovalo manj kot 5 dni. Rezultat bo vključeval 6 izsekov za vsak mesec.",
	"@@Process-Raster-Collection_keywordinterval_tag6@@": "<strong>Mesečno</strong>--Vrednosti podatkov bodo agregirane v mesečne časovne korake in rezultat bo vključeval vsak mesec v časovni seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag7@@": "<strong>Trimesečno</strong>--Vrednosti podatkov bodo agregirane v trimesečne časovne korake in rezultat bo vključeval vsako trimesečje v časovni seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag8@@": "<strong>Letno</strong>--Vrednosti podatkov bodo agregirane v letne časovne korake in rezultat bo vključeval vsako leto v časovni seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag9@@": "<strong>Dnevno ponavljajoče</strong>--Vrednosti podatkov bodo agregirane v dnevne časovne korake in rezultat bo vključeval eno agregirano vrednost na julijanski dan. Rezultat bo vključeval največ 366 dnevnih časovnih izsekov.",
	"@@Process-Raster-Collection_keywordinterval_tag10@@": "<strong>Tedensko ponavljajoče</strong>--Vrednosti podatkov bodo agregirane v tedenske časovne korake in rezultat bo vključeval eno agregirano vrednost na julijanski dan. Rezultat bo vključeval največ 53 tedenskih časovnih izsekov.",
	"@@Process-Raster-Collection_keywordinterval_tag11@@": "<strong>Mesečno ponavaljajoče</strong>--Vrednosti podatkov bodo agregirane v tedenske časovne korake in rezultat bo vključeval eno agregirano vrednost na mesec. Rezultat bo vključeval največ 12 mesečnih časovnih izsekov.",
	"@@Process-Raster-Collection_keywordinterval_tag12@@": "<strong>Trimesečno ponavljajoče</strong>--Vrednosti podatkov bodo agregirane v trimesečne časovne korake in rezultat bo vključeval eno agregirano vrednost na trimesečje. Rezultat bo vključeval največ 4 trimesečne časovne izseke.",
	"@@Process-Raster-Collection_maximumvalue_tag0@@": "Najvišja vrednost za razpon.",
	"@@Process-Raster-Collection_maximumvalue_tag1@@": "Ta parameter je obvezen, ko je parameter<strong>tipa</strong> nastavljen na <strong>Razponi intervalov</strong>.",
	"@@Process-Raster-Collection_minimumvalue_tag0@@": "Najnižja vrednost za razpon.",
	"@@Process-Raster-Collection_minimumvalue_tag1@@": "Ta parameter je obvezen, ko je parameter<strong>tipa</strong> nastavljen na <strong>Razponi intervalov</strong>.",
	"@@Process-Raster-Collection_processingfunction_tag0@@": "Določite predlogo rastrske funkcije, ki bo uporabljena za prikaz obdelanega rastrskega sloja.",
	"@@Process-Raster-Collection_rastercollection_tag0@@": "Vhodni večdimenzionalni raster, mozaični sloj ali mozaični sklop podatkov.",
	"@@Process-Raster-Collection_type_tag0@@": "Določi interval dimenzije za katerega bo potekala agregacija podatkov.",
	"@@Process-Raster-Collection_type_tag1@@": "<strong>Vse</strong>--Vrednosti podatkov bodo agregirane po vseh izsekih. To je privzeta vrednost.",
	"@@Process-Raster-Collection_type_tag2@@": "<strong>Ključna beseda intervala</strong>--Podatki spremenljivke bodo agregirani z uporabo splošno znanega intervala.",
	"@@Process-Raster-Collection_type_tag3@@": "<strong>Razponi intervalov</strong>--Podatki spremenljivke bodo agregirani med določenimi pari vrednosti ali datumov",
	"@@Process-Raster-Collection_type_tag4@@": "<strong>Vrednosti intervalov</strong>--Podatki spremenljivke bodo agregirani z uporabo uporabniško določenega intervala in enote.",
	"@@Process-Raster-Collection_unit_tag0@@": "Enota, ki bo uporabljena za vrednost intervala. Ta parameter je obvezen, kadar je <strong>dimenzija</strong> časovno polje in je parameter <strong>tipa</strong>nastavljen na <strong>Vrednosti intervalov</strong>.",
	"@@Process-Raster-Collection_unit_tag1@@": "Če agregacija poteka preko česar kar ni čas, potem ta možnost ne bo na voljo in se bo enota za vrednost intervala ujemala z enoto spremenljivke vhodnih podatkov večdimenzionalnega rastra.",
	"@@Process-Raster-Collection_unit_tag2@@": "<strong>Ure</strong>--Vrednosti podatkov bodo agregirane v urne časovne izseke v navedenem intervalu.",
	"@@Process-Raster-Collection_unit_tag3@@": "<strong>Dnevi</strong>--Vrednosti podatkov bodo agregirane v dnevne časovne izseke v navedenem intervalu.",
	"@@Process-Raster-Collection_unit_tag4@@": "<strong>Tedni</strong>--Vrednosti podatkov bodo agregirane v tedenske časovne izseke v navedenem intervalu.",
	"@@Process-Raster-Collection_unit_tag5@@": "<strong>Meseci</strong>--Vrednosti podatkov bodo agregirane v mesečne časovne izseke v navedenem intervalu.",
	"@@Process-Raster-Collection_unit_tag6@@": "<strong>Leta</strong>--Vrednosti podatkov bodo agregirane v letne časovne izseke v navedenem intervalu.",
	"@@Process-Raster-Collection_valueinterval_tag0@@": "Velikost intervala, ki bo uporabljena za agregacijo. Ta parameter je obvezen, ko je parameter<strong>tipa</strong> nastavljen na <strong>Vrednosti intervalov</strong>.",
	"@@Process-Raster-Collection_valueinterval_tag1@@": "Na primer, za agregacijo 30 let podatkov o mesečni temperaturi v 5-letnih prirastkih, vnesite 5 kot <strong>Interval vrednosti</strong> ter določite <strong>enoto</strong> kot <strong>Leta</strong>.",
	"@@Linear-Spectral-Unmixing_non-negative_tag0@@": "Določi možnosti za opredelitev izhodnih vrednosti pikslov.",
	"@@Linear-Spectral-Unmixing_non-negative_tag1@@": "Potrjeno--Ne bo nobenih negativnih izhodnih vrednosti.",
	"@@Linear-Spectral-Unmixing_non-negative_tag2@@": "Nepotrjeno--Lahko se pojavijo negativne vrednosti delne pokrovnosti tal.",
	"@@Linear-Spectral-Unmixing_raster_tag0@@": "Vhodni raster.",
	"@@Linear-Spectral-Unmixing_spectralprofile_tag0@@": "Datoteka vhodnega spektralnega profila.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag0@@": "Spektralne informacije za različne razrede pokrovnosti tal.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag1@@": "<strong>Spektralni profil</strong>--Datoteka definicije klasifikatorja (${.ecd}), ustvarjena iz orodja <strong><strong>Učenje klasifikatorja maksimalne verjetnosti</strong></strong>, ali datoteka JavaScript Object Notation (${.json}), ki vsebuje spektralne profile razreda.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag2@@": "<strong>Učni geoobjekt</strong>--Poligonski geoobjekti ali razred geoobjekta učnega vzorca, ki je ustvarjen v <strong>Upravitelju učnih vzorcev</strong>.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag0@@": "Določi možnosti za opredelitev izhodnih vrednosti pikslov.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag1@@": "Potrjeno--Vrednosti razreda za vsak piksel so navedene v decimalnem zapisu s seštevkom vseh razredov, ki je enak 1. Na primer, Razred1 = 0,16; Razred2 = 0,24; Razred3 = 0,60.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag2@@": "Nepotrjeno--Seštevek vseh razredov v pikslu lahko presega 1.",
	"@@Linear-Spectral-Unmixing_trainingfeature_tag0@@": "Datoteka vhodnega učnega geoobjekta.",
	"@@Aggregate_aggregationtechnique_tag0@@": "Metoda uporabljena za agregacijo. Vrednosti vhodnih celic, ki so zajete z bolj okvirnimi izhodnimi celicami, so agregirane s pomočjo naslednjih statistik:",
	"@@Aggregate_aggregationtechnique_tag1@@": "<strong>Seštevek</strong>--Skupna vsota vhodnih celic. To je privzeta vrednost.",
	"@@Aggregate_aggregationtechnique_tag2@@": "<strong>Maksimum</strong>--Najvišja vrednost vhodnih celic.",
	"@@Aggregate_aggregationtechnique_tag3@@": "<strong>Srednja vrednost od</strong>--Povprečna vrednost vhodnih celic.",
	"@@Aggregate_aggregationtechnique_tag4@@": "<strong>Mediana</strong>--Vrednost mediane vhodnih celic.",
	"@@Aggregate_aggregationtechnique_tag5@@": "<strong>Minimum</strong>--Najnižja vrednost vhodnih celic.",
	"@@Aggregate_cellfactor_tag0@@": "Faktor, s katerim se pomnoži velikost celice vhodnega rastra.",
	"@@Aggregate_cellfactor_tag1@@": "Na primer, če je vrednost faktorja celice tri, bi to pomenilo velikost izhodne celice, ki je trikrat večja od velikosti vhodnega rastra.",
	"@@Aggregate_expandextentifneeded_tag0@@": "Opredeli kako ravnati z razmejitvami vhodnega rastra, kadar njegove vrstice in stolpci niso večkratnik faktorja celice.",
	"@@Aggregate_expandextentifneeded_tag1@@": "Potrjeno--Razširi zgornje ali desne razmejitve vhodnega rastra, tako da je skupno število celic v vrstici ali stolpcu večkratnik faktorja celic. S to možnostjo lahko izhodni raster pokrije večji prostorski obseg kot vhodni raster. To je privzeta vrednost.",
	"@@Aggregate_expandextentifneeded_tag2@@": "Nepotrjeno--Zmanjša število vrstic in stolpcev v izhodnem rastru. To skrajša preostale celice na zgornjih ali desnih omejitvah vhodnega rastra, kar pomeni, da je število vrstic in stolpcev v vhodnem rastru večkratnik faktorja celice. S to možnostjo lahko izhodni raster pokrije manjši prostorski obseg kot vhodni raster.",
	"@@Aggregate_ignorenodataincalculations_tag0@@": "Označuje, ali izračun agregacije prezre vrednosti ${NoData}.",
	"@@Aggregate_ignorenodataincalculations_tag1@@": "Potrjeno--Določi da bodo, v primeru obstoja vrednosti ${NoData} za katero koli od celic znotraj prostorskega obsega večje celice izhodnega rastra, vrednosti ${NoData} prezrte ob določanju vrednosti za lokacije izhodih celic. Za določanje vrednosti izhodne celice bodo uporabljene samo vhodne celice znotraj obsega izhodne celice, ki imajo podatkovne vrednosti. To je privzeta vrednost.",
	"@@Aggregate_ignorenodataincalculations_tag2@@": "Nepotrjeno--Določi, da če ima katera koli od celic, ki pade znotraj prostorskega obsega večje celice izhodnega rastra, vrednost ${NoData}, bo vrednost lokacije te izhodne celice ${NoData}. Ob uporabi te možnosti je nakazano, da, kadar celice znotraj agregacije vsebujejo vrednost ${NoData} , ni dovolj informacij za izvedbo določenih izračunov, ki so nujni za določanje izhodne vrednosti.",
	"@@Aggregate_raster_tag0@@": "Vhodni raster, ki bo agregiran.",
	"@@Expand_numberofcells_tag0@@": "Število celic za katere se razširi.",
	"@@Expand_numberofcells_tag1@@": "Vrednost mora biti celo število in je lahko 1 ali več.",
	"@@Expand_raster_tag0@@": "Vhodni raster, za katerega bodo identificirana območja razširjena.",
	"@@Expand_raster_tag1@@": "Biti mora tip celega števila.",
	"@@Expand_zonevalues_tag0@@": "Seznam območjih za razširitev.",
	"@@Expand_zonevalues_tag1@@": "Vrednosti območja morajo biti cela števila, in lahko so v kakršnem koli vrstnem redu.",
	"@@Expand_zonevalues_tag2@@": "Za določanje več območij uporabite presledek, da ločite vrednosti območja.",
	"@@Multidimensional-Filter_dimension_tag0@@": "Dimenzija iz katere se ekstrahira spremenljivke.",
	"@@Multidimensional-Filter_dimensiondefinition_tag0@@": "Določi metodo, ki bo uporabljena za ustvarjanje izseka dimenzije.",
	"@@Multidimensional-Filter_dimensiondefinition_tag1@@": "<strong>Vse</strong>--Za vsako dimenzijo bo uporabljen celotni razpon. To je privzeta vrednost.",
	"@@Multidimensional-Filter_dimensiondefinition_tag2@@": "<strong>Po vrednostih</strong>--Dimenzija bo razrezana s pomočjo vrednosti dimenzije ali seznama vrednosti.",
	"@@Multidimensional-Filter_dimensiondefinition_tag3@@": "<strong>Po razponih</strong>--Dimenzija bo razrezana s pomočjo razpona ali seznama razponov.",
	"@@Multidimensional-Filter_dimensiondefinition_tag4@@": "<strong>Po ponovitvi</strong>--Dimenzija bo razrezana po določeni velikosti intervala.",
	"@@Multidimensional-Filter_endoffirstiteration_tag0@@": "Konec prvega intervala. Ta interval je uporabljen za ponovitev skozi sklop podatkov. Ta parameter je obvezen, ko je parameter<strong>opredelitve dimenzije</strong> nastavljen na <strong>Po ponovitvi</strong>.",
	"@@Multidimensional-Filter_maximumvalue_tag0@@": "Najvišja vrednost za razpon. Ta parameter je obvezen, ko je parameter<strong>opredelitve dimenzije</strong> nastavljen na <strong>Po razponih</strong>.",
	"@@Multidimensional-Filter_minimumvalue_tag0@@": "Najnižja vrednost za razpon. Ta parameter je obvezen, ko je parameter<strong>opredelitve dimenzije</strong> nastavljen na <strong>Po razponih</strong>.",
	"@@Multidimensional-Filter_raster_tag0@@": "Vhodni večdimenzionalni raster.",
	"@@Multidimensional-Filter_ranges_tag0@@": "<p>Razponi intervalov, ki so navedeni v tabeli, bodo uporabljeni za agregacijo skupin vrednosti. Minimalne in maksimalne vrednosti določajo razpon, ki bo vključen.</p><p>Ta parameter je obvezen, kadar je parameter <strong>Tipa</strong> nastavljen na <strong>Razponi intervalov</strong>.</p>",
	"@@Multidimensional-Filter_startoffirstiteration_tag0@@": "Začetek prvega intervala. Ta interval je uporabljen za ponovitev skozi sklop podatkov. Ta parameter je obvezen, ko je parameter<strong>opredelitve dimenzije</strong> nastavljen na <strong>Po ponovitvi</strong>.",
	"@@Multidimensional-Filter_step_tag0@@": "Pogostost, s katero bodo podatki razrezani. Ta parameter je obvezen, ko je parameter<strong>opredelitve dimenzije</strong> nastavljen na <strong>Po ponovitvi</strong>. Privzeta vrednost je 3.",
	"@@Multidimensional-Filter_unit_tag0@@": "Določi enoto ponovitve. Ta parameter je obvezen, kadar je parameter <strong>opredelitve dimenzije</strong> nastavljen na <strong>Po ponovitvi</strong> in je parameter <strong>dimenzije</strong>nastavljen na <strong>StdTime</strong>.",
	"@@Multidimensional-Filter_value_tag0@@": "Vrednost za določeno dimenzijo. Ta parameter je obvezen, ko je parameter<strong>opredelitve dimenzije</strong> nastavljen na <strong>Po vrednostih</strong>.",
	"@@Multidimensional-Filter_variables_tag0@@": "Spremenljivke, ki bodo vključene v sloj izhodnega večdimenzionalnega rastra. Če ni določene nobene spremenljive, bo uporabljena prva spremenljivka.",
	"@@Multidimensional-Filter_dimensionless_tag0@@": "Določi, ali naj ima sloj vrednosti dimenzij. Ta možnost je na voljo samo, če je za ustvarjanje sloja izbrana ena rezina.",
	"@@Multidimensional-Filter_dimensionless_tag1@@": "Preverjeno--Sloj ne bo imel vrednosti dimenzij.",
	"@@Multidimensional-Filter_dimensionless_tag2@@": "Nepreverjeno--Sloj ne bo imel vrednosti dimenzij. <strong>DINF</strong>--Tip rastra smeri vhodnega toka je D-Infinity (DINF).",
	"@@Multidimensional-Raster_interpolationcellsize_tag0@@": "Velikost celice interpoliranega rastra. Privzeta vrednost je ${1}.",
	"@@Multidimensional-Raster_interpolationmethod_tag0@@": "Metoda prevzorčenja je uporabljena za interpolacijo nepravilnih podatkov.",
	"@@Multidimensional-Raster_interpolationmethod_tag1@@": "<strong>Najbližji sosed</strong>--Izračuna izhodno vrednost pikslov z uporabo najbližjega vhodnega piksla. Če izhodiščni piksel ne obstaja, v izhodu ni mogoče ustvariti novega piksla. To je privzeta vrednost.",
	"@@Multidimensional-Raster_interpolationmethod_tag2@@": "<strong>Linearno redčenje</strong>--Uporablja triangulirano nepravilno omrežje iz središčne točke vsakega piksla v nepravilnem rastru za interpolacijo površine, ki se nato pretvori v pravilni raster.",
	"@@Multidimensional-Raster_interpolationmethod_tag3@@": "<strong>Naravni sosed</strong>--Najde najbližji podizbor vhodnih vzorcev za točko poizvedbe in jim za interpolacijo vrednosti doda ponderje glede na sorazmerna območja.",
	"@@Multidimensional-Raster_interpolationmethod_tag4@@": "<strong>Ponderiranje obrnjene razdalje</strong>--Določa vrednosti pikslov z uporabo linearno ponderirane kombinacije nabora vzorčnih točk ali pikslov. Ponder je funkcija obrnjene razdalje od znanih točk ali pikslov.",
	"@@Multidimensional-Raster_raster_tag0@@": "Vhodni večdimenzionalni raster.",
	"@@Multidimensional-Raster_variables_tag0@@": "Spremenljivka ali spremenljivke, ki bodo vključene v sloj večdimenzionalnega rastra.",
	"@@Random_distribution_tag0@@": "Določi metodo naključne distribucije vrednosti.",
	"@@Random_distribution_tag1@@": "<strong>Enotno</strong> (Minimum, Maksimum)--Enotna distribucija z opredeljenim razponom. Privzete vrednosti so 0 za minimum in 1 za maksimum. To je privzeta vrednost.",
	"@@Random_distribution_tag2@@": "<strong>Celo število</strong> (Minimum, Maksimum)--Distribucija s celim številom z opredeljenim razponom. Privzete vrednosti so 1 za minimum in 10 za maksimum.",
	"@@Random_distribution_tag3@@": "<strong>Normalno</strong> (Srednja vrednost, Standardni odklon)--Normalna distribucija z opredeljeno srednjo vrednostjo in standardnim odklonom. Privzete vrednosti so 0 za srednjo vrednost in 1 za standardni odklon.",
	"@@Random_distribution_tag4@@": "<strong>Eksponentno</strong> (Srednja vrednost)--Eksponentna distribucija z opredeljeno srednjo vrednostjo. Privzeta vrednost je 1.",
	"@@Random_distribution_tag5@@": "<strong>Poissonovo</strong> (Srednja vrednost)--Poissonova distribucija z opredeljeno srednjo vrednostjo. Privzeta vrednost je 1.",
	"@@Random_distribution_tag6@@": "<strong>Gama</strong> (Alfa, Beta)--Gama distribucija z opredeljenima alfa in beta. Privzete vrednosti so 1 za Alfa in 1 za Beta.",
	"@@Random_distribution_tag7@@": "<strong>Binomsko</strong> (S, Verjetnost)--Binomska distribucija z opredeljenim S in verjetnostjo. Privzete vrednosti so 10 za S in 0,5 za verjetnost.",
	"@@Random_distribution_tag8@@": "<strong>Geometrično</strong> (Verjetnost)--Geometrična distribucija z opredeljeno verjetnostjo. Privzeta vrednost je 0,5.",
	"@@Random_distribution_tag9@@": "<strong>Negativno binomsko</strong> (r, Verjetnost)--Pascalova distribucija z opredeljenim r in verjetnostjo. Privzete vrednosti so 10,0 za r in 0,5 za verjetnost.",
	"@@Random_randomnumbergenerator_tag0@@": "Določite naključni alogoritem tvorbe, ki uporablja seme in distribucijo za ustvarjanje zaporedja naključnih števil. Razpoložljive možnosti so naslednje:",
	"@@Random_randomnumbergenerator_tag1@@": "Standardni C rand",
	"@@Random_randomnumbergenerator_tag2@@": "ACM zbrani algoritmi 599",
	"@@Random_randomnumbergenerator_tag3@@": "Mersenne Twister",
	"@@Random_randomnumbergenerator_tag4@@": "Privzeta vrednost je Mersenne Twister.",
	"@@Random_rasterinfo_tag0@@": "Uporabite gumb <strong>Naloži raster predloge</strong>, da naložite predlogo iz mape ali portala.",
	"@@Random_seed_tag0@@": "Seme je vrednost celega števila in se uporablja za zagon generatorja naključnih števil. Privzeta vrednost je 1.",
	"@@Shrink_numberofcells_tag0@@": "Število celic, za katero se zmanjša vsako določeno območje.",
	"@@Shrink_numberofcells_tag1@@": "Vrednost mora biti celo število in je lahko 1 ali več.",
	"@@Shrink_raster_tag0@@": "Vhodni raster, za katerega bodo identificirana območja zmanjšana.",
	"@@Shrink_raster_tag1@@": "Biti mora tip celega števila.",
	"@@Shrink_zonevalues_tag0@@": "Seznam območjih za zmanjšanje.",
	"@@Shrink_zonevalues_tag1@@": "Vrednosti območja morajo biti cela števila, in lahko so v kakršnem koli vrstnem redu.",
	"@@Shrink_zonevalues_tag2@@": "Za določanje več območij uporabite presledek, da ločite vrednosti območja.",
	"@@Distance-Accumulation_costraster_tag0@@": "Raster, ki določa strošek ali impedanco za planimetrično premikanje skozi posamezno celico. Vrednost na lokaciji vsake celice predstavlja razdaljo stroškov na enoto za premikanje skoznjo. Vrednost lokacije vsake celice je pomnožena z resolucijo celice, hkrati pa upošteva diagonalno premikanje, da se pridobi celoten strošek premika skozi celico.",
	"@@Distance-Accumulation_costraster_tag1@@": "Vrednosti <strong>rastra stroškov</strong> so lahko celo število ali število s plavajočo vejico, vendar ne morejo biti negativne ali ničla.",
	"@@Distance-Accumulation_distancemethod_tag0@@": "Določa izračun razdalje na osnovi ravninske (ravne površine) ali geodetske (elipsoid) metode.",
	"@@Distance-Accumulation_distancemethod_tag1@@": "Ravninsko--Ravninske meritve za izračun dolžine in območja uporabljajo dvodimenzionalno kartezijsko matematiko. Možnost je na voljo samo pri meritvah v projiciranem koordinatnem sistemu, kot osnova za meritve pa se uporablja dvodimenzionalna ravnina tega koordinatnega sistema.",
	"@@Distance-Accumulation_distancemethod_tag2@@": "Geodetsko--najkrajša linija med dvema točkama na sferoidni zemeljski površini (elipsoid). Tako se rezultati ne spremenijo ne glede na vhodno ali izhodno projekcijo.",
	"@@Distance-Accumulation_distancemethod_tag3@@": "<strong>Opomba:</strong> geodetska linija se med drugim uporablja za določanje najkrajše razdalje med dvema mestoma za pot letalskega poleta. Če to namesto na elipsoidu sloni na krogli, je znano tudi kot velika krožna linija.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag0@@": "Določa ali se ustvari samo raster akumulacije razdalje ali pa se ustvari večpasovni raster, sestavljen iz rastra akumulacije razdalje in rastra obratne smeri.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag1@@": "Nepotrjeno--Rezultat je raster akumulacije razdalje. To je enopasovni rezultat. To je privzeta vrednost.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag2@@": "Potrjeno--Ustvarjen je večpasovni rezultat. Prvi pas je raster akumulacije razdalje in drugi pas je raster obratne smeri.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag3@@": "Raster obratne smeri za vsako celico izračuna smer v stopinjah do sosednje celice vzdolž najkrajše poti nazaj do najbližjega vira ob izogibanju oviram.",
	"@@Distance-Accumulation_horizontalfactor_tag0@@": "<p>Določa odnos med horizontalnim faktorjem stroška in horizontalnim relativnim kotom premikanja (HRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: HF in HRMA. HF pomeni horizontalni faktor, ki določa horizontalno težavnost, ki se pojavi pri premikanju od ene celice do druge. HRMA pomeni horizontalni relativni kot premikanja, ki določa kot med horizontalno smerjo od celice in smerjo premikanja.</p><p><strong>Tipi horizontalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarni</strong>----Ponazarja, da je HF nastavljen na vrednost, povezano s faktorjem nič, če je HRMA manjši od kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Naprej</strong>--Določa, da je dovoljeno samo premikanje naprej. HRMA mora biti večji od ali enak 0 in manjši od 90 stopinj (0 &lt;= HRMA &lt; 90). Če je HRMA večji od 0 in manjši od 45 stopinj, je HF za celico nastavljen na vrednost, povezano s faktorjem nič. Če je HRMA večji od ali enak 45 stopinjam, se uporabi modifikator stranske vrednosti. HF za kateri koli HRMA, ki je enak ali večji od 90 stopinj, je nastavljen na neskončno vrednost.</li><li><strong>Linearno</strong>--Določa, da je HF linearna funkcija HRMA.</li><li><strong>Obratno linearno</strong>--Določa, da je HF obratna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona horizontalnega faktorja, ki se uporablja za določanje vrednosti HF, uporabila tabelna datoteka.</li></ul><p>Modifikatorji horizontalnih faktorjev vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa horizontalni faktor, ki se bo uporabil, ko je HRMA nič. Ta faktor določa položaj y-presečišča za katero koli funkcijo horizontalnega faktorja.</li><li><strong>Kot rezanja</strong>--Določa kot HRMA, po katerem bo HF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama horizontalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Stranska vrednost</strong>--Določa HF, če je HRMA večji od ali enak 45 stopinjam in manjši od 90 stopinj, ko je določena ključna beseda horizontalnega faktorja <strong>Naprej</strong>.</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa HF.</li></ul>",
	"@@Distance-Accumulation_horizontalraster_tag0@@": "Raster, ki določa horizontalno smer vsake celice.",
	"@@Distance-Accumulation_horizontalraster_tag1@@": "Vrednosti rastra morajo biti cela števila v razponu od 0 do 360, pri čemer se 0 stopinj nahaja severno ali proti vrhu zaslona, in se povečevati v smeri urinega kazalca. Ploskim območjem se naj dodeli vrednost -1. Vrednosti na vsaki lokaciji bodo uporabljene skupaj s <strong>horizontalnim faktorjem</strong> za določanje horizontalnega stroška, ki nastane pri premikanju od celice do sosednjih celic.",
	"@@Distance-Accumulation_initialaccumulation_tag0@@": "Prvotni akumulirani strošek za začetek izračuna stroškov. Ta parameter omogoča specifikacijo fiksnih stroškov, povezanih z virom. Namesto, da bi začel pri strošku 0, bo algoritem stroškov začel z določeno vrednostjo.",
	"@@Distance-Accumulation_initialaccumulation_tag1@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Distance-Accumulation_initialaccumulation_tag2@@": "Vrednost mora biti 0 ali več. Privzeta vrednost je 0.",
	"@@Distance-Accumulation_maximumaccumulation_tag0@@": "Določa popotnikov maksimalen akumulativni strošek za vir. Izračuni stroškov se nadaljujejo za vsak vir, dokler ni dosežena določena kapaciteta.",
	"@@Distance-Accumulation_maximumaccumulation_tag1@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Distance-Accumulation_maximumaccumulation_tag2@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag0@@": "Zmnožek za uporabo z vrednostmi stroška.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag1@@": "Ta parameter omogoča nadzor načina potovanja ali magnitude na viru. Večji kot je zmnožek, večji je strošek za premikanje skozi posamezno celico.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag2@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag3@@": "Vrednosti morajo biti večje od nič. Privzeta vrednost je 1.",
	"@@Distance-Accumulation_rasterbarriers_tag0@@": "Raster, ki določa ovire.",
	"@@Distance-Accumulation_rasterbarriers_tag1@@": "Kjer ni ovir, mora sklop podatkov biti brez podatkov. Ovire predstavljajo veljavne vrednosti, vključno nič.",
	"@@Distance-Accumulation_rasterbarriers_tag2@@": "Ovire se lahko določijo s celim številom ali rastrom plavajoče vejice.",
	"@@Distance-Accumulation_sourceraster_tag0@@": "Lokacije vhodnega vira.",
	"@@Distance-Accumulation_sourceraster_tag1@@": "To je sklop podatkov rastra, ki prepozna celice ali lokacije, za katere je izračunana najmanjša razdalja akumuliranega stroška za lokacijo vsake izhodne celice.",
	"@@Distance-Accumulation_sourceraster_tag2@@": "Lahko gre za celo število ali tip plavajoče vejice.",
	"@@Distance-Accumulation_surfaceraster_tag0@@": "Raster, ki določa višinske vrednosti na vsaki lokaciji celice.",
	"@@Distance-Accumulation_surfaceraster_tag1@@": "Vrednosti se uporabljajo za izračun dejanske površinske razdalje, zajete pri premikanju med celicami.",
	"@@Distance-Accumulation_traveldirection_tag0@@": "Določa smer popotnika pri uporabi vertikalnega faktorja, horizontalnega faktorja in stopnje odpornosti vira.",
	"@@Distance-Accumulation_traveldirection_tag1@@": "<strong>Od vira</strong>--Uporabljeni bodo vertikalni faktor, horizontalni faktor in stopnja odpornosti vira z začetkom v vhodnem viru ter se premikala navzven proti neizvornim celicam. To je privzeta vrednost.",
	"@@Distance-Accumulation_traveldirection_tag2@@": "<strong>V vir</strong>--Uporabljeni bodo vertikalni faktor, horizontalni faktor in stopnja odpornosti vira z začetkom na vsaki neizvorni celici ter se premikala nazaj proti vhodnemu viru.",
	"@@Distance-Accumulation_traveldirection_tag3@@": "Določite ključno besedo <strong>Iz vira</strong> ali <strong>V vir</strong> , ki bo uporabljena na vseh virih, ali določite polje v <strong>izvornem rastru</strong> , ki vsebuje ključne besede za prepoznavo smeri potovanja za vsak vir. To polje mora vsebovati niz ${FROM_SOURCE} ali ${TO_SOURCE}.",
	"@@Distance-Accumulation_verticalfactor_tag0@@": "<p>Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: VF in VRMA. VF pomeni vertikalni faktor, ki določa vertikalno težavnost, ki se pojavi pri premikanju od ene celice do druge. VRMA pomeni vertikalni relativni kot premikanja, ki določa naklonski kot med celico OD oz. celico procesiranja in celico DO.</p><p><strong>Tipi vertikalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarno</strong>--Določa, da je VF nastavljen na vrednost, povezano s faktorjem nič, če je VRMA večji od nizkega kota rezanja in manjši od visokega kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Linearno</strong>--Določa, da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Določa, da je VF linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA.</li><strong><li>Simetrično obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Cos</strong>--Določa VF kot funkcijo VRMA na osnovi kosinusa.</li><li><strong>Sec</strong>--Določa VF kot funkcijo VRMA na osnovi sekante.</li><li><strong>Cos-Sec</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Sec-Cos</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona vertikalnega faktorja, ki se uporablja za določanje vrednosti VF, uporabila tabelna datoteka.</ul><p></li>Modifikatorji vertikalnih ključnih besed vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa vertikalni faktor, ki se bo uporabil, ko je VRMA nič. Ta faktor določa položaj y-presečišča za določeno funkcijo. Po definiciji faktor nič ne velja za nobeno vertikalno trigonometrično funkcijo (COS, SEC, COS-SEC ali SEC-COS). Te funkcije določajo y-presečišče.</li><li><strong>Nizki kot rezanja</strong>--Določa kot VRMA, pod katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Visoki kot rezanja</strong>--Določa kot VRMA, nad katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama vertikalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa VF.</li></ul>",
	"@@Distance-Accumulation_verticalraster_tag0@@": "Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).",
	"@@Distance-Accumulation_verticalraster_tag1@@": "Vrednosti se uporabljajo za izračun naklona, ki se uporablja za prepoznavanje vertikalnega faktorja, ki nastane pri premikanju od ene celice do druge.",
	"@@Distance-Allocation_costraster_tag0@@": "Raster, ki določa strošek ali impedanco za planimetrično premikanje skozi posamezno celico. Vrednost na lokaciji vsake celice predstavlja razdaljo stroškov na enoto za premikanje skoznjo. Vrednost lokacije vsake celice je pomnožena z resolucijo celice, hkrati pa upošteva diagonalno premikanje, da se pridobi celoten strošek premika skozi celico.",
	"@@Distance-Allocation_costraster_tag1@@": "Vrednosti <strong>rastra stroškov</strong> so lahko celo število ali število s plavajočo vejico, vendar ne morejo biti negativne ali ničla.",
	"@@Distance-Allocation_distancemethod_tag0@@": "Določa izračun razdalje na osnovi ravninske (ravne površine) ali geodetske (elipsoid) metode.",
	"@@Distance-Allocation_distancemethod_tag1@@": "Ravninsko--Ravninske meritve za izračun dolžine in območja uporabljajo dvodimenzionalno kartezijsko matematiko. Možnost je na voljo samo pri meritvah v projiciranem koordinatnem sistemu, kot osnova za meritve pa se uporablja dvodimenzionalna ravnina tega koordinatnega sistema.",
	"@@Distance-Allocation_distancemethod_tag2@@": "Geodetsko--najkrajša linija med dvema točkama na sferoidni zemeljski površini (elipsoid). Tako se rezultati ne spremenijo ne glede na vhodno ali izhodno projekcijo.",
	"@@Distance-Allocation_distancemethod_tag3@@": "<strong>Opomba:</strong> geodetska linija se med drugim uporablja za določanje najkrajše razdalje med dvema mestoma za pot letalskega poleta. Če to namesto na elipsoidu sloni na krogli, je znano tudi kot velika krožna linija.",
	"@@Distance-Allocation_horizontalfactor_tag0@@": "<p>Določa odnos med horizontalnim faktorjem stroška in horizontalnim relativnim kotom premikanja (HRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: HF in HRMA. HF pomeni horizontalni faktor, ki določa horizontalno težavnost, ki se pojavi pri premikanju od ene celice do druge. HRMA pomeni horizontalni relativni kot premikanja, ki določa kot med horizontalno smerjo od celice in smerjo premikanja.</p><p><strong>Tipi horizontalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarni</strong>----Ponazarja, da je HF nastavljen na vrednost, povezano s faktorjem nič, če je HRMA manjši od kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Naprej</strong>--Določa, da je dovoljeno samo premikanje naprej. HRMA mora biti večji od ali enak 0 in manjši od 90 stopinj (0 &lt;= HRMA &lt; 90). Če je HRMA večji od 0 in manjši od 45 stopinj, je HF za celico nastavljen na vrednost, povezano s faktorjem nič. Če je HRMA večji od ali enak 45 stopinjam, se uporabi modifikator stranske vrednosti. HF za kateri koli HRMA, ki je enak ali večji od 90 stopinj, je nastavljen na neskončno vrednost.</li><li><strong>Linearno</strong>--Določa, da je HF linearna funkcija HRMA.</li><li><strong>Obratno linearno</strong>--Določa, da je HF obratna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona horizontalnega faktorja, ki se uporablja za določanje vrednosti HF, uporabila tabelna datoteka.</li></ul><p>Modifikatorji horizontalnih faktorjev vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa horizontalni faktor, ki se bo uporabil, ko je HRMA nič. Ta faktor določa položaj y-presečišča za katero koli funkcijo horizontalnega faktorja.</li><li><strong>Kot rezanja</strong>--Določa kot HRMA, po katerem bo HF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama horizontalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Stranska vrednost</strong>--Določa HF, če je HRMA večji od ali enak 45 stopinjam in manjši od 90 stopinj, ko je določena ključna beseda horizontalnega faktorja <strong>Naprej</strong>.</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa HF.</li></ul>",
	"@@Distance-Allocation_horizontalraster_tag0@@": "Raster, ki določa horizontalno smer vsake celice.",
	"@@Distance-Allocation_horizontalraster_tag1@@": "Vrednosti rastra morajo biti cela števila v razponu od 0 do 360, pri čemer se 0 stopinj nahaja severno ali proti vrhu zaslona, in se povečevati v smeri urinega kazalca. Ploskim območjem se naj dodeli vrednost -1. Vrednosti na vsaki lokaciji bodo uporabljene skupaj s <strong>horizontalnim faktorjem</strong> za določanje horizontalnega stroška, ki nastane pri premikanju od celice do sosednjih celic.",
	"@@Distance-Allocation_initialaccumulation_tag0@@": "Prvotni akumulirani strošek za začetek izračuna stroškov. Ta parameter omogoča specifikacijo fiksnih stroškov, povezanih z virom. Namesto, da bi začel pri strošku 0, bo algoritem stroškov začel z določeno vrednostjo.",
	"@@Distance-Allocation_initialaccumulation_tag1@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Distance-Allocation_initialaccumulation_tag2@@": "Vrednost mora biti 0 ali več. Privzeta vrednost je 0.",
	"@@Distance-Allocation_maximumaccumulation_tag0@@": "Določa popotnikov maksimalen akumulativni strošek za vir. Izračuni stroškov se nadaljujejo za vsak vir, dokler ni dosežena določena kapaciteta.",
	"@@Distance-Allocation_maximumaccumulation_tag1@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Distance-Allocation_maximumaccumulation_tag2@@": "Vrednost mora biti večja od nič. Privzeta kapaciteta je proti robu izhodnega rastra.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag0@@": "Zmnožek za uporabo z vrednostmi stroška.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag1@@": "Ta parameter omogoča nadzor načina potovanja ali magnitude na viru. Večji kot je zmnožek, večji je strošek za premikanje skozi posamezno celico.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag2@@": "Vrednosti morajo biti večje od nič. Privzeta vrednost je 1.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag3@@": "Za ta parameter lahko uporabite številsko (dvojno) vrednost ali polje iz <strong>izvornega rastra</strong>.",
	"@@Distance-Allocation_rasterbarriers_tag0@@": "Raster, ki določa ovire.",
	"@@Distance-Allocation_rasterbarriers_tag1@@": "Kjer ni ovir, mora sklop podatkov biti brez podatkov. Ovire predstavljajo veljavne vrednosti, vključno nič.",
	"@@Distance-Allocation_rasterbarriers_tag2@@": "Ovire se lahko določijo s celim številom ali rastrom plavajoče vejice.",
	"@@Distance-Allocation_sourcefield_tag0@@": "Polje, uporabljeno za dodelitev vrednosti izvornih lokacij. Biti mora tip celega števila.",
	"@@Distance-Allocation_sourceraster_tag0@@": "Lokacije vhodnega vira.",
	"@@Distance-Allocation_sourceraster_tag1@@": "To je sklop podatkov rastra, ki prepozna celice ali lokacije, za katere je izračunana najmanjša razdalja akumuliranega stroška za lokacijo vsake izhodne celice.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag0@@": "Določi ali je ustvarjen samo raster razmestitve ali večpasovni rezultat.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag1@@": "Nepotrjeno--Rezultat je raster razmestitve razdalje. To je enopasovni rezultat. To je privzeta vrednost.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag2@@": "Potrjeno--Ustvarjen je večpasovni raster. Prvi pas je raster razmejitve razdalje, drugi pas vsebuje indeks vrstice in tretji pas vsebuje indeks stolpca. Ti indeksi prepoznavajo lokacijo izvorne celice, ki je oddaljena vsaj za razdaljo akumuliranega stroška.",
	"@@Distance-Allocation_surfaceraster_tag0@@": "Raster, ki določa višinske vrednosti na vsaki lokaciji celice.",
	"@@Distance-Allocation_surfaceraster_tag1@@": "Vrednosti se uporabljajo za izračun dejanske površinske razdalje, zajete pri premikanju med celicami.",
	"@@Distance-Allocation_traveldirection_tag0@@": "Določa smer popotnika pri uporabi vertikalnega faktorja, horizontalnega faktorja in stopnje odpornosti vira.",
	"@@Distance-Allocation_traveldirection_tag1@@": "<strong>Od vira</strong>--Uporabljeni bodo vertikalni faktor, horizontalni faktor in stopnja odpornosti vira z začetkom v vhodnem viru ter se premikala navzven proti neizvornim celicam. To je privzeta vrednost.",
	"@@Distance-Allocation_traveldirection_tag2@@": "<strong>V vir</strong>--Uporabljeni bodo vertikalni faktor, horizontalni faktor in stopnja odpornosti vira z začetkom na vsaki neizvorni celici ter se premikala nazaj proti vhodnemu viru.",
	"@@Distance-Allocation_traveldirection_tag3@@": "Določite ključno besedo <strong>Iz vira</strong> ali <strong>V vir</strong> , ki bo uporabljena na vseh virih, ali določite polje v <strong>izvornem rastru</strong> , ki vsebuje ključne besede za prepoznavo smeri potovanja za vsak vir. To polje mora vsebovati niz ${FROM_SOURCE} ali ${TO_SOURCE}.",
	"@@Distance-Allocation_verticalfactor_tag0@@": "<p>Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).</p><p>Obstaja več faktorjev z izbirnimi modifikatorji, ki prepoznavajo grafikon določenega vertikalnega faktorja. Poleg tega lahko za ustvarjanje grafikona po meri uporabite tabelo. Grafikoni se uporabljajo za prepoznavanje vertikalnega faktorja, ki se uporablja pri izračunavanju skupnih stroškov premika v sosednjo celico.</p><p>V spodnjih razlagah se uporabljata dva akronima: VF in VRMA. VF pomeni vertikalni faktor, ki določa vertikalno težavnost, ki se pojavi pri premikanju od ene celice do druge. VRMA pomeni vertikalni relativni kot premikanja, ki določa naklonski kot med celico OD oz. celico procesiranja in celico DO.</p><p><strong>Tipi vertikalnih faktorjev</strong> vključujejo naslednje:</p><ul><li><strong>Binarno</strong>--Določa, da je VF nastavljen na vrednost, povezano s faktorjem nič, če je VRMA večji od nizkega kota rezanja in manjši od visokega kota rezanja; v nasprotnem primeru je vrednost neskončna.</li><li><strong>Linearno</strong>--Določa, da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Določa, da je VF linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA.</li><strong><li>Simetrično obratno linearno</strong>--Določa, da je VF obratna linearna funkcija VRMA na negativni ali pozitivni strani VRMA in da sta obe linearni funkciji simetrični glede na os VF (y).</li><li><strong>Cos</strong>--Določa VF kot funkcijo VRMA na osnovi kosinusa.</li><li><strong>Sec</strong>--Določa VF kot funkcijo VRMA na osnovi sekante.</li><li><strong>Cos-Sec</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Sec-Cos</strong>--Določa, da je VF funkcija VRMA na osnovi sekante, če je VRMA negativen, in funkcija VRMA na osnovi kosinusa, če VRMA ni negativen.</li><li><strong>Tabela</strong>--Določa, da se bo za določanje grafikona vertikalnega faktorja, ki se uporablja za določanje vrednosti VF, uporabila tabelna datoteka.</ul><p></li>Modifikatorji vertikalnih ključnih besed vključujejo naslednje:</p><ul><li><strong>Faktor nič</strong>--Določa vertikalni faktor, ki se bo uporabil, ko je VRMA nič. Ta faktor določa položaj y-presečišča za določeno funkcijo. Po definiciji faktor nič ne velja za nobeno vertikalno trigonometrično funkcijo (COS, SEC, COS-SEC ali SEC-COS). Te funkcije določajo y-presečišče.</li><li><strong>Nizki kot rezanja</strong>--Določa kot VRMA, pod katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Visoki kot rezanja</strong>--Določa kot VRMA, nad katerim bo VF nastavljen na neskončno vrednost.</li><li><strong>Naklon</strong>--Določa naklon ravne linije, ki se uporablja s ključnima besedama vertikalnega faktorja <strong>Linearno</strong> in <strong>Obratno linearno</strong>. Naklon je določen kot del nagiba linije (45-odstotni naklon je 1/45, kar se vnese kot 0,02222).</li><li><strong>Ime tabele</strong>--Prepozna ime tabele, ki določa VF.</li></ul>",
	"@@Distance-Allocation_verticalraster_tag0@@": "Določa odnos med vertikalnim faktorjem stroška in vertikalnim relativnim kotom premikanja (VRMA).",
	"@@Distance-Allocation_verticalraster_tag1@@": "Vrednosti se uporabljajo za izračun naklona, ki se uporablja za prepoznavanje vertikalnega faktorja, ki nastane pri premikanju od ene celice do druge.",
	"@@Euclidean-Back-Direction_cellsize_tag0@@": "Velikost celice, pri kateri bo ustvarjen izhodni raster.",
	"@@Euclidean-Back-Direction_cellsize_tag1@@": "Če je velikost celice izrecno nastavljena v <strong>okoljih</strong> , je to privzeta velikost celice. Če ni nastavljena, je velikost izhodne celice enaka kot <strong>izvorni raster</strong>.",
	"@@Euclidean-Back-Direction_distancemethod_tag0@@": "Določa izračun razdalje na osnovi ravninske (ravne površine) ali geodetske (elipsoid) metode.",
	"@@Euclidean-Back-Direction_distancemethod_tag1@@": "Ravninsko--Ravninske meritve za izračun dolžine in območja uporabljajo dvodimenzionalno kartezijsko matematiko. Možnost je na voljo samo pri meritvah v projiciranem koordinatnem sistemu, kot osnova za meritve pa se uporablja dvodimenzionalna ravnina tega koordinatnega sistema.",
	"@@Euclidean-Back-Direction_distancemethod_tag2@@": "Geodetsko--najkrajša linija med dvema točkama na sferoidni zemeljski površini (elipsoid). Tako se rezultati ne spremenijo ne glede na vhodno ali izhodno projekcijo.",
	"@@Euclidean-Back-Direction_distancemethod_tag3@@": "<strong>Opomba:</strong> geodetska linija se med drugim uporablja za določanje najkrajše razdalje med dvema mestoma za pot letalskega poleta. Če to namesto na elipsoidu sloni na krogli, je znano tudi kot velika krožna linija.",
	"@@Euclidean-Back-Direction_maximumdistance_tag0@@": "Določa razdaljo praga, znotraj katere bo izračunana smer do najbližjega vira. Če razdalja do najbližjega vira to presega, bo izhod za to celico brez podatkov.",
	"@@Euclidean-Back-Direction_maximumdistance_tag1@@": "Privzeta razdalja je do obsega izhodnega rastra.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag0@@": "Raster, ki določa ovire.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag1@@": "Kjer ni ovir, mora sklop podatkov biti brez podatkov. Ovire predstavljajo veljavne vrednosti, vključno nič.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag2@@": "Ovire se lahko določijo s celim številom ali rastrom plavajoče vejice.",
	"@@Euclidean-Back-Direction_sourceraster_tag0@@": "Sklop podatkov rastra, ki prepozna celice ali lokacije, za katere je izračunana evklidska smer za lokacijo vsake izhodne celice.",
	"@@Euclidean-Back-Direction_sourceraster_tag1@@": "Tip vnosa je lahko celo število ali tip plavajoče vejice.",
	"@@Cost-Path_costbacklinkraster_tag0@@": "Ime povratne povezave stroška, ki ga rastrski sloj uporabi za določanje poti za vrnitev k viru po poti najmanjšega stroška.",
	"@@Cost-Path_costbacklinkraster_tag1@@": "Za vsako celico v rastrski povratni povezavi vrednost prepozna soseda, ki je naslednja celica na poti najmanjšega akumuliranega stroška od celice do posamezne izvorne celice ali sklopa izvornih celic.",
	"@@Cost-Path_costdistanceraster_tag0@@": "Ime rastra razdalje stroškov, ki se uporablja za določanje poti najmanjšega stroška od ciljnih lokacij do vira.",
	"@@Cost-Path_costdistanceraster_tag1@@": "Raster razdalje stroškov se običajno ustvari z razdaljo stroškov, dodelitvijo stroškov ali funkcijo povratne povezave stroška. Rastrski sloj razdalje stroškov shranjuje za vsako celico najmanjšo razdaljo akumuliranega stroška prek površine stroška od vsake celice do sklopa izvornih celic.",
	"@@Cost-Path_destinationfield_tag0@@": "Polje, uporabljeno za pridobitev vrednosti za ciljne lokacije. Podatki vhodnega geoobjekta morajo vsebovati vsaj eno veljavno polje.",
	"@@Cost-Path_destinationraster_tag0@@": "Sloj sklopa podatkov rastra, ki prepozna tiste celice, iz katerih je določena pot najmanjšega stroška do vira, ki je najmanj drag.",
	"@@Cost-Path_destinationraster_tag1@@": "Vhodni rastrski sloj sestavljajo celice, ki imajo veljavne vrednosti (nič je veljavna vrednost), preostale celice pa morajo bit brez dodeljenih podatkov.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag0@@": "Vsili, da funkcija obravnava vhodni raster povratne povezave kot raster smeri toka. Rastri smeri toka imajo lahko vrednosti celega števila od 0 do 255.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag1@@": "Nepotrjeno--Če so vrednosti določenega rastra povratne povezave cela števila v razponu od 0 do 8, bo sklop podatkov obravnavan kot raster povratnih stroškov. Če so vrednosti od 0 do 255, bo vhod obravnavan kot raster smeri toka. Če so vrednosti od 0 do 360 in plavajoča vejica, bo vhod obravnavan kot raster obratne smeri.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag2@@": "Potrjeno--Raster, zagotovljen za raster povratne povezave, bo obravnavan kot raster smeri toka. To možnost rastra smeri toka uporabite, ko ima maksimalno vrednost 8 ali manj.",
	"@@Cost-Path_pathtype_tag0@@": "Ključna beseda, ki določa način, na katerega bodo v izračunih stroškov poti interpretirane vrednosti in območja na vhodnih podatkih cilja. Možnosti so naslednje:",
	"@@Cost-Path_pathtype_tag1@@": "<strong>Vsaka celica</strong>--Za vsako celico z veljavnimi vrednostmi na vhodnih podatkih cilja je pot najmanjšega stroška določena in shranjena na izhodni raster. S to možnostjo je vsaka celica vhodnih podatkov cilja obravnavana ločeno in je za vsako celico določena pot najmanjšega stroška.",
	"@@Cost-Path_pathtype_tag2@@": "<strong>Vsako območje</strong>– Za vsako območje na vhodnih podatkih cilja je pot z najmanjšimi stroški določena in shranjena na izhodni raster. S to možnostjo se pot najmanjšega stroška za vsako območje začne v celici z najmanjšimi stroški glede na razdaljo v območju.",
	"@@Cost-Path_pathtype_tag3@@": "<strong>Najboljše enojno</strong>--Za vse celice vhodnih podatkov cilja pot najmanjšega stroška izhaja iz celice z najmanj potmi najmanjšega stroška do izvornih celic.",
	"@@Cell-Statistics_cellsizetype_tag0@@": "Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse vhodne velikosti celic enake, bo pri vseh izbirah rezultat enak.",
	"@@Cell-Statistics_cellsizetype_tag1@@": "Prva vrednost od--Uporabi prvo velikost celice vhodnega rastra.",
	"@@Cell-Statistics_cellsizetype_tag2@@": "Najmanjša vrednost od--Uporabi najmanjšo velikost celice vhodnega rastra.",
	"@@Cell-Statistics_cellsizetype_tag3@@": "Največja vrednost od--Uporabi največjo velikost celice vhodnega rastra. To je privzeta vrednost.",
	"@@Cell-Statistics_cellsizetype_tag4@@": "Srednja vrednost od--Uporabi srednjo velikost celice vhodnega rastra.",
	"@@Cell-Statistics_cellsizetype_tag5@@": "Zadnja vrednost od--Uporabi zadnjo velikost celice vhodnega rastra.",
	"@@Cell-Statistics_extenttype_tag0@@": "Izberite, kateri obseg želite uporabiti v izhodnem rastru:",
	"@@Cell-Statistics_extenttype_tag1@@": "Prva vrednost od--Uporabi obseg prvega vhodnega rastra za določitev obsega procesiranja.",
	"@@Cell-Statistics_extenttype_tag2@@": "Presek--Uporabi obseg prekrivajočih se pikslov za določitev obsega procesiranja. To je privzeta vrednost.",
	"@@Cell-Statistics_extenttype_tag3@@": "Skupno--Uporabi obseg vseh rastrov za določitev obsega procesiranja.",
	"@@Cell-Statistics_extenttype_tag4@@": "Zadnja vrednost od--Uporabi obseg zadnjega vhodnega rastra za določitev obsega procesiranja.",
	"@@Cell-Statistics_processasmultiband_tag0@@": "Določi način obdelave pasov vhodnega rastra.",
	"@@Cell-Statistics_processasmultiband_tag1@@": "Nepotrjeno--Vsi večpasovni vhodi bodo obdelani kot enopasovni. To je privzeta vrednost.",
	"@@Cell-Statistics_processasmultiband_tag2@@": "Potrjeno--Vsi večpasovni vhodi bodo obdelani kot večpasovni.",
	"@@Cell-Statistics_rasters_tag0@@": "Seznam rastrov, iz katerih se izračuna statistika piksel po piksel.",
	"@@Cell-Statistics_percentileinterpolationtype_tag0@@": "<p>Določa metodo interpolacije, ki bo uporabljena, ko je podana vrednost percentila med dvema vrednostma vhodne celice.</p><ul><li><strong>Samodejno zaznavanje</strong>--Če so vhodni rastri tipa piksla celega števila, potem je uporabljena metoda <strong>Najbližje</strong>. Če je vhodni raster tipa plavajočega točkovnega piksla, potem se uporabi metoda<strong>Linearno</strong>. To je privzeta vrednost.</li><li><strong>Najbližje</strong>--Najbližja razpoložljiva vrednost do želenega percentila je uporabljena. V tem primeru je tip izhodnega piksla enak kot pri vhodnh rastrih vrednosti.</li><li><strong>Linearno</strong>--Uravnoteženo povprečje dveh sosednjih vrednosti iz želenega percentila je uporabljeno. V tem primeru je tip izhodnega piksla plavajoča točka.</li></ul><p>Ta možnost je na voljo samo, če je parameter<strong>Operacija</strong>nastavljen na<strong>Mediana</strong>ali na <strong>Percentil</strong>.</p>",
	"@@Cell-Statistics_percentilevalue_tag0@@": "<p>Percentil za izračun. Privzeta vrednost je 90 za 90. percentil.</p><p>Vrednosti lahko segajo od 0 do 100. Percentil 0 je pravzaprav enakovreden najmanjši, percentil 100 pa največji statistični vrednosti. Vrednost 50 bo pravzaprav ustvarila enak rezultat kot srednja statistična vrednost.</p><p>Ta možnost je na voljo samo, če je parameter <strong>Operacija</strong> nastavljen na<strong>Percentil</strong>.</p>",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag0@@": "Raster obratne smeri vsebuje izračunane smeri v stopinjah. Smer identificira naslednjo celico po optimalni poti nazaj do najmanj akumulativnega vira stroškov, pri čemer se izogne oviram.",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag1@@": "Razpon vrednosti je od 0 stopinj do 360 stopinj, pri čemer je 0 rezervirana za celice z izvornimi vrednostmi. Proti vzhodu (desno) je 90 in vrednost se veča v smeri urnega kazalca (180 je proti jugu, 270 je proti zahodu in 360 je proti severu).",
	"@@Optimal-Path-As-Raster_destinationfield_tag0@@": "Polje, uporabljeno za pridobitev vrednosti za ciljne lokacije.",
	"@@Optimal-Path-As-Raster_destinationraster_tag0@@": "Sloj rastrskega sklopa podatkov, ki prepozna tiste celice, iz katerih je določena optimalna pot do vira, ki je najmanj drag. To polje je obvezno.",
	"@@Optimal-Path-As-Raster_destinationraster_tag1@@": "Vhodni rastrski sloj sestavljajo celice, ki imajo veljavne vrednosti (nič je veljavna vrednost), preostale celice pa morajo bit brez dodeljenih podatkov.",
	"@@Optimal-Path-As-Raster_distanceaccumulationraster_tag0@@": "Raster akumulacije razdalje se uporablja za določitev optimalne poti od ciljev do virov. Raster akumulacije razdalje se običajno ustvari s funkcijo <strong>Akumulacija razdalje</strong>. Vsaka celica v rastru akumulirane razdalje predstavlja najmanjšo razdaljo akumuliranega stroška prek površine stroška od vsake celice do sklopa izvornih celic.",
	"@@Optimal-Path-As-Raster_pathtype_tag0@@": "Določi ključno besedo, ki določa način, na katerega bodo v izračunih stroškov poti interpretirane vrednosti in območja na vhodnih podatkih cilja.",
	"@@Optimal-Path-As-Raster_pathtype_tag1@@": "<strong>Vsako območje</strong>– Za vsako območje na vhodnih podatkih cilja je pot z najmanjšimi stroški določena in shranjena na izhodni raster. S to možnostjo se optimalna pot za vsako območje začne v celici z najmanjšimi stroški glede na razdaljo v območju.",
	"@@Optimal-Path-As-Raster_pathtype_tag2@@": "<strong>Najboljše enojno</strong>--Za vse celice vhodnih podatkov cilja optimalne poti izhaja iz celice z najmanj potmi najmanjšega stroška do izvornih celic.",
	"@@Optimal-Path-As-Raster_pathtype_tag3@@": "<strong>Vsaka celica</strong>--Za vsako celico z veljavnimi vrednostmi na vhodnih podatkih cilja je optimalna pot določena in shranjena na izhodni raster. S to možnostjo je vsaka celica vhodnih podatkov cilja obravnavana ločeno in je za vsako celico določena optimalna pot.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag0@@": "ID-ji pasov, ki se uporabljajo za zaznavanje sprememb. Če ID-ji pasov niso na voljo, bodo uporabljeni vsi pasovi iz vhodnega rastrskega sklopa podatkov.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag1@@": "Vrednosti ID-ja naj bodo cela števila, ločena s presledki.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag0@@": "ID pasov zelenega pasu in pasu SWIR, ki se uporabljajo za prikrivanje oblakov, oblačne sence in snega. Če ni ID-jev pasov, maskiranje ne bo opravljeno.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag1@@": "Vrednosti ID-ja naj bodo cela števila, ločena s presledki.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag2@@": "Ta parameter določa pasove, ki jih želite uporabiti za oblak, senco oblaka in zakrivanje snega. Ker sta senca oblaka in sneg v kratkovalovnem infrardečem pasu (SWIR) prikazana zelo temno, oblaki in sneg pa so v zelenem pasu zelo zeleni, je priporočljivo, da se indeksi pasov za SWIR in zelene pasove zakrijejo.",
	"@@CCDC-Analysis_chi-squaredthresholdfordetectchange_tag0@@": "Prag verjetnosti spremembe hi-kvadrata. Če ima opazovanje izračunano verjetnost spremembe, ki je nad tem pragom, se to označi kot anomalija, kar je potencialna sprememba. Privzeta vrednost je 0,99.",
	"@@CCDC-Analysis_minimumconsecutiveanomalyobservations_tag0@@": "Najmanjše število zaporednih opazovanj anomalije, ki se morajo zgoditi pred dogodkom, se šteje za spremembo. Piksel mora biti označen kot anomalija za določeno število zaporednih časovnih odrezkov, preden se šteje za resnično spremembo. Privzeta vrednost je 6.",
	"@@CCDC-Analysis_raster_tag0@@": "Vneseni večdimenzionalni rastrski sloj.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag0@@": "Pogostost posodobitve modela časovnih vrst z novimi opažanji. Privzeto je treba model posodabljati vsako leto.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag1@@": "Ta parameter določa, kako pogosto bo model časovnih vrst posodobljen z novimi opažanji. Pogosto posodabljanje modela lahko predstavlja velik izdatek, korist pa je lahko minimalna. Na primer, če je v večdimenzionalnem rastru 365 rezin ali jasnih opazovanj na leto in je pogostost posodabljanja opredeljena za vsako opazovanje, bo obdelava 365-krat večja in dražja v primerjavi s posodabljanjem enkrat letno, vendar natančnost morda ne bo večja.",
	"@@Trend-To-RGB_modeltype_tag0@@": "Vrsta informacije o modelu za pretvorbo v RGB.",
	"@@Trend-To-RGB_modeltype_tag1@@": "Linearno--Informacije o linearnem trendu bodo pretvorjene v RGB. <strong>DINF</strong>--Tip rastra smeri vhodnega toka je D-Infinity (DINF).",
	"@@Trend-To-RGB_modeltype_tag2@@": "Harmonično--Informacije o harmoničnem trendu bodo pretvorjene v RGB.",
	"@@Trend-To-RGB_raster_tag0@@": "Vhodni raster trenda.",
	"@@LandTrendr-Analysis_bestmodelproportion_tag0@@": "<p>Vrednost deleža najboljšega dela. Med postopkom izbire modela bo orodje izračunalno vrednost p za vsak model in izbralo model, ki ima največ navpičnic, medtem ko ohranja najmanjšo (najbolj pomembno) vrednost p na podlagi proporcionalne vrednosti. Vrednost 1 pomeni, da ima model najnižjo vrednost p, vendar ne sme imeti visoko število navpičnic. Privzeta vrednost je 1,25.</p>",
	"@@LandTrendr-Analysis_maximumnumberofsegments_tag0@@": "<p>Največje število segmentov za umestitev v časovni niz za vsak piksel. Privzeta vrednost je 5.</p>",
	"@@LandTrendr-Analysis_minimumnumberofobservations_tag0@@": "<p>Najnižja številka veljavnih opazovanj, ki so potrebna za izvajanje umestitve. Število let v vhodnem večdimenzionalnem nizu podatkov mora biti enako ali večje od te vrednosti. Privzeta vrednost je 6.</p>",
	"@@LandTrendr-Analysis_outputotherbands_tag0@@": "<p>Navaja, ali bodo drugi pasovi vključeni v rezultate.</p><ul><li>Izbrano--Drugi pasovi bodo vključeni v rezultate. Informacije segmentacije in navpičnic iz začetnega segmentacijega pasu, določene v parametru<strong>Obdelovalni pas</strong>bodo umeščene tudi v preostale pasove na večpasovnih slikah. Rezultati modela bodo najprej vključevali segmentacijski pas, potem pa vse ostale.</li><li>Preklic izbire--Drugi pasovi ne bodo vključeni. To je privzeta vrednost.</li></ul>",
	"@@LandTrendr-Analysis_preventoneyearrecovery_tag0@@": "<p>Navaja, ali bodo izključeni segmenti, ki kažejo enoletno obnovitev.</p><ul><li>Izbrano--Segmenti, ki kažejo enoletno obnovitev, bodo izključeni. To je privzeta vrednost.</li><li>Preklic izbire--Segmenti, ki kažejo enoletno obnovitev, ne bodo izključeni.</li></ul>",
	"@@LandTrendr-Analysis_processingband_tag0@@": "<p>Pas, ki se uporablja za segmentiranje poti vrednosti piksla skozi čas. Izberite pas, ki bo najboljše zajel spremembe v geoobjektu, ki ga želite opazovati.</p>",
	"@@LandTrendr-Analysis_p-valuethreshold_tag0@@": "<p>Prag vrednosti p za model, ki bo izbran. Ko so navpičnice zaznale začetno stopnjo umestitve modela, bo orodje umestilo vsak segment in izračunalno vrednost p za določitev pomembnosti modela. V naslednji ponovitvi bo model zmanjšal število segmentov za ena in ponovno izračunal vrednost p. To se bo nadaljevalo in v primeru, da je vrednost p manjša od vrednosti, ki je navedena v tem parametru, bo model izbran in orodje bo prenehalo z iskanjem boljšega modela. Če takšen model ni izbran, bo orodje izbralo model z vrednostjo p, ki je manjša od<strong>najnižje vrednosti p × proporcionalna vrednost najboljšega modela</strong>. Privzeta vrednost je 0,01.</p>",
	"@@LandTrendr-Analysis_raster_tag0@@": "<p>Sloj vhodnega večdimenzionalnega rastra Landsat.</p>",
	"@@LandTrendr-Analysis_recoveryhasincreasetrend_tag0@@": "<p>Navaja, ali ima obnovitev povečujoč (pozitivni) trend.</p><ul><li>Izbrano--Obnovitev ima povečujoč trend. To je privzeta vrednost.</li><li>Preklic izbire--Obnovitev ima padajoč trend.</li></ul>",
	"@@LandTrendr-Analysis_recoverythreshold_tag0@@": "<p>Vrednost praga obnovitve, v letih. Če ima segment stopnjo obnovitve, ki je hitrejša od<strong>1/prag obnovitve</strong>, bo segment zavržen in ne bo vključen v časovni niz modela. Vrednost mora biti v razponu med 0 in 1. Privzeta vrednost je 0,25.</p>",
	"@@LandTrendr-Analysis_snappingdate_tag0@@": "<p>Datum, ki bo uporabljen za izbiro rezine za vsako leto v vhodnem večdimenzonalnem nizu podatkov. Rezina z najbližjim datumom do datuma prereza bo izbrana. Ta parameter je potreben, če vhodni niz podatkov vsebuje polletne podatke.</p>",
	"@@LandTrendr-Analysis_spikethreshold_tag0@@": "<p>Prag, ki bo uporabljen za blaženje konic ali anomalij na poti vrednosti piksla. Vrednost se mora nahajati med 0 in 1, pri čemer 1 pomeni, da ni blaženja. Privzeta vrednost znaša 0,9.</p>",
	"@@LandTrendr-Analysis_vertexcountovershoot_tag0@@": "<p>Število dodatnih navpičnic prek<strong>max_num_segments + 1</strong>, ki jih je mogoče uporabiti za umestitev modela med začetno stopnjo identifikacijskih navpičnic. Pozneje v postopku modeliranja se število dodatnih navpičnic zmanjša na<strong>max_num_segments + 1</strong>. Privzeta vredost znaša 2.</p>",
	"@@Merge-Rasters_rasters_tag0@@": "<p>Nizi podatkov vhodnega rastra ali nizi podatkov večdimenzionalnega rastra za združitev.</p>",
	"@@Merge-Rasters_resolveoverlapmethod_tag0@@": "<p>Navaja metodo za uporabo pri reševanju prekrivajočih se pikslov v kombiniranih nizih podatkov.</p><ul><li><strong>Prvi</strong>--Vrednost pikslov v prekrivajočih se območjih je vrednost iz prvega rastra na seznamu vhodnih rastrov. To je privzeta vrednost.</li><li><strong>Zadnji</strong>--Zadnja vrednost piksla v prekrivajočih se območjih je vrednost iz zadnjega rastra na seznamu vhodnih rastrov.</li><li><strong>Najm.</strong>--Vrednost piksla v prekrivajočih se območjih je najnižja vrednost prekrivajočih se pikslov.</li><li><strong>Najv.</strong>--Vrednost pikslov v prekrivajočih se območjih je največja vrednost prekrivajočih se pikslov.</li><li><strong>Povprečno</strong>--Vrednost piksla v prekrivajočih se območjih je povprečje prekrivajočih se pikslov.</li><li><strong>Vsota</strong>--Vrednost piksla v prekrivajočih se območjih je skupna vsota prekrivajočih se pikslov.</li></ul>",
	"@@Generate-Trend_cycleunit_tag0@@": "<p>Navaja časovno enoto, ki bo uporabljena za dolžino usklajenega cikla.</p><ul><li><strong>Dnevi</strong>--Enota za dolžino usklajenega cikla so dnevi.</li><li><strong>Leta</strong>--Enota za dolžino usklajenega cikla so leta. To je privzeta vrednost.</li></ul>",
	"@@Generate-Trend_dimensionname_tag0@@": "<p>Dimenzija vzdolž katere bo izvlečen trend za spremenljivko ali spremenljivke, izbrane v analizi.</p>",
	"@@Generate-Trend_harmonicfrequency_tag0@@": "<p>Število frekvence, ki se uporabi pri prilagajanju trenda. Ta parameter določa pogostost ciklov v letu. Privzeta vrednost je 1 oz. en usklajeni cikel na leto.</p><p>Ta parameter je vključen samo v analizo trendov pri usklajeni regresiji.</p>",
	"@@Generate-Trend_ignorenodata_tag0@@": "<p>Navaja, ali so vrednosti brez podatkov prezrte v analizi.</p><ul><li>Izbrano--Analiza bo vključevala vse veljavne piksle vzdolž dane dimenzije in prezrla vse piksle brez podatkov. To je privzeta vrednost.</li><li>Preklic izbire--Rezultat analize bo brez podatkov, če vzdolž dane dimenzije obstajajo vrednosti brez podatkov za piksle.</li></ul>",
	"@@Generate-Trend_lengthofcycle_tag0@@": "<p>Dolžina periodične variacije do modela. Enota so dnevi, ne glede na časovno enoto vhodnih podatkov. Na primer, zelenost listja ima en močan cikel variacij v posameznem letu, tako da znaša dolžina cikla 365,25, četudi so vhodni podatki mesečna zelenost. Urni podatki o temperaturi imajo en močan cikel spremembe skozi posamezen dan, zato je dolžina cikla 1.</p><p>Privzeta dolžina znaša 365,25 dni za podatke, ki se spreminjajo v letnem ciklu.</p>",
	"@@Generate-Trend_p-valueofslopecoefficient_tag0@@": "<p>Navaja, ali bo izračunana statistika vrednosti p za koeficient naklona linije trenda.</p><ul><li>Izbrano--Vrednost p bo izračunana in prikazana podrobno, ko se funkcija dokonča.</li><li>Preklic izbire--Vrednost p ne bo izračunana. To je privzeta vrednost.</li></ul>",
	"@@Generate-Trend_polynomialorder_tag0@@": "<p>Številka polinomnega vrstnega reda, ki se uporabi pri prilagajanju trenda. Ta parameter določa polinomni vrstni red. Privzeta vrednost znaš 2, oz. polinom drugega zaporedja.</p><p>Ta parameter je vključen samo v analizo trendov pri polinomni regresiji.</p>",
	"@@Generate-Trend_r-squared_tag0@@": "<p>Navaja, ali bo izračunana statistika kakovosti prileganja kvadratnega R.</p><ul><li>Izbrano--Kvadratni R bo izračunan in prikazan podrobno, ko se funkcija dokonča.</li><li>Preklic izbire--Kvadratni R ne bo izračunan. To je privzeta vrednost.</li></ul>",
	"@@Generate-Trend_raster_tag0@@": "<p>Vhodni večdimenzionalni raster.</p>",
	"@@Generate-Trend_rmse_tag0@@": "<p>Navaja, ali bo ustvarjena napaka korena kvadrata srednje vrednosti (RMSE) linije prileganja trenda.</p><ul><li>Izbrano--RMSE bo izračunana in podrobno prikazana, ko se funkcija dokonča. To je privzeta vrednost.</li><li>Preklicana izbira--RMSE ne bo izračunan.</li></ul>",
	"@@Generate-Trend_seasonalperiod_tag0@@": "<p>Določa časovno enoto, ki bo uporabljena za dolžino sezonskega obdobja pri izvajanju testa Seasonal-Kendall.</p><ul><li>Dnevi--Enota za dolžino sezonskega obdobja v dneh. To je privzeta vrednost.</li><li>Meseci--Enota za dolžino sezonskega obdobja v mesecih.</li></ul>",
	"@@Generate-Trend_trendtype_tag0@@": "<p>Navaja tip linije, ki bo uporabljena za prileganje vrednostim piksla vzdolž dimenzije.</p><ul><li><strong>Linearno</strong>--Prilagodi vrednost piksla za spremenljivko vzdolž linearne linije trenda. To je privzeta vrednost.</li><li><strong>Usklajeno</strong>--Prilagodi vrednosti piksla za spremenljivko vzdolž usklajene linije trenda.</li><li><strong>Polinomsko</strong>--Prilagodi linije piksla za spremenljivko vzdolž druge polinomske linije trenda.</li><li><strong>Mann-Kendall</strong>--Vrednosti piksla spremenljivke bodo ocenjene z uporabo testa trenda Mann-Kendall.</li><li><strong>Sezonski Kendall</strong>--Vrednosti piksla spremenljivke bodo ocenjene z uporabo testa trenda Sezonski Kendall.</li></ul>",
	"@@Compute-Change_cellsizetype_tag0@@": "<p>Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse velikosti vhodnih celic enake, bodo vse možnosti ustvarile enake rezultate.</p><ul><li>Prva od--Uporabite prvo velikost celice vhodnih rastrov.</li><li>Najm. od--Uporabite najmanšo velikost celice vseh vhodnih rastrov.</li><li>Najv. od--Uporabite največjo velikost celice vseh vhodnih rastrov. To je privzeta vrednost.</li><li>Srednja vrednost od--Uporabite srednjo vrednost velikosti celice vseh vhodnih rastrov.</li><li>Zadnja od--Uporabite zadnjo velikost celice vseh vhodnih rastrov.</li></ul>",
	"@@Compute-Change_computechangemethod_tag0@@": "<p>Metoda, uporabljena za izračun.</p><ul><li><strong>Razlika</strong>--Matematična razlika, oz. odštevanje, med vrednostmi piksla v vhodnih rastrih bo izračunana. To je privzeta vrednost.</li><li><strong>Relativna razlika</strong>--Razlika v vrednostih piksla, ki pojasnjuje obsege primerjanih vrednosti, bo izračunana.</li><li><strong>Kategorična razlika</strong>--Razlika med dvema kategoričnima ali tematskima rastroma bo izračunana, pri čemer izhod vsebuje prehode razreda, do katerih je prišlo med dvema rastroma.</li><li><strong>Spektralna evklidska razdalja</strong> – Izračunana bo evklidska razdalja med vrednostmi slikovnih pik dveh večpasovnih rastrov.</li><li><strong>Spektralna kotna razlika</strong> – Izračunan bo spektralni kot med vrednostmi slikovnih pik dveh večpasovnih rastrov. Izhod je v radianih.</li><li><strong> Pas z največ spremembami</strong> – izračunan bo pas, ki predstavlja največ sprememb v vsaki slikovni piki med dvema večpasovnima rastroma.</li></ul><p>Če je<strong>Metoda spremembe izračuna</strong>nastavljena na<strong>Kategorična razlika</strong>in eden od vhodov ni kategoričen, bo izračunana enostavna razlika.</p>",
	"@@Compute-Change_definetransitioncolors_tag0@@": "<p>Navedite metodo, ki bo uporabljena za simboliziranje pikslov s spremenjenimi razredi.</p><ul><li><strong>Povprečje od in do barv</strong>--Barva piksla bo povprečje barve njegovega izvirnega razreda in barve svojega končnega razreda.</li><li><strong>Uporabi od barv</strong>--Barva piksla bo barva njegovega izvirnega razreda.</li><li><strong>Uporabi od barv</strong>--Barva piksla bo barva njegovega končnega razreda.</li></ul>",
	"@@Compute-Change_extenttype_tag0@@": "<p>Izberite obseg, ki bi moral biti uporabljen izhodnem rastru:</p><ul><li>Prvi od--Uporabite obseg prvega vhodnega rastra za določitev obsega obdelave.</li><li>Presek od--Uporabite obseg prekrivajočih se pikslov za določitev obsega obdelave. To je privzeta vrednost.</li><li>Združitev--Uporabite obseg vseh rastrov za določitev obsega obdelave.</li><li>Zadnja od--Uporabite obseg zadnjega vhodnega rastra za določitev obsega obdelave.</li></ul>",
	"@@Compute-Change_filtermethod_tag0@@": "<p>Izberite metodo filtra za izračun kategorične spremembe.</p><ul><li><strong>Ohrani vse</strong>--Vsi razredi so vključeni v izhod in ni prišlo do filtriranja. Izberite to možnost, da si ogledate spremembo in vztrajnost v posameznem nizu podatkov.</li><li><strong>Ohrani samo spremenjene piksle</strong>--Samo razredi, ki so se spremenili iz enega tipa razreda v drugega, so vključeni v izhod. To možnost izberite, če vas zanima samo sprememba.</li><li><strong>Ohrani samo nespremejene piksle</strong>--Samo razredi, ki se niso spremenili, so vključeni v izhod. Izberite to možnost, če vas zanima samo vztrajnost.</li></ul>",
	"@@Compute-Change_fromclassvalues_tag0@@": "<p>Vrednost razreda iz<strong>Od rastra</strong>, ki bodo vključene v izračun, ob primerjavi dveh kategoričnih rastrov. To je prostorsko omejen seznam vrednosti celih števil v skladu s poljem<strong>Vrednost razreda</strong>v vašem vhodnem rastrskem nizu podatkov.</p>",
	"@@Compute-Change_fromraster_tag0@@": "<p>Prvi raster, ki bo uporabljen v izračunu. Za oceno spremembe iz časa 1 (prej) v čas 2 (kasneje) tukaj vnesite raster časa 1.</p>",
	"@@Compute-Change_toclassvalues_tag0@@": "<p>Vrednost razreda iz<strong>Do rastra</strong>, ki bodo vključene v izračun, ob primerjavi dveh kategoričnih rastrov. To je prostorsko omejen seznam vrednosti celih števil v skladu s poljem<strong>Vrednost razreda</strong>v vašem vhodnem rastrskem nizu podatkov.</p>",
	"@@Compute-Change_toraster_tag0@@": "<p>Drugi raster, ki bo uporabljen v izračunu. Za oceno spremembe iz časa 1 (prej) v čas 2 (kasneje) tukaj vnesite raster časa 2.</p>",
	"@@Compute-Change_usecolormethod_tag0@@": "<p>Navedite metodo, ki bo uporabljena za simboliziranje pikslov s spremenjenimi razredi.</p><ul><li><strong>Povprečje od in do barv</strong>--Barva piksla bo povprečje barve njegovega izvirnega razreda in barve svojega končnega razreda.</li><li><strong>Uporabi od barv</strong>--Barva piksla bo barva njegovega izvirnega razreda.</li><li><strong>Uporabi od barv</strong>--Barva piksla bo barva njegovega končnega razreda.</li></ul>",
	"@@Compute-Change_fieldnameforclassnamesinfromraster_tag0@@": "<p>Polje, ki shranjuje imena razredov v vnos <strong>Od rastra</strong>. Orodje samodejno poišče polje <strong>ImeRazreda</strong> ali <strong>Ime_Razreda</strong> za uporabo.</p><p>To možnost uporabite, če vnos ne vsebuje teh standardnih imen polj.</p>",
	"@@Compute-Change_fieldnameforclassnamesintoraster_tag0@@": "<p>Polje, ki shranjuje imena razredov v vnos <strong>Do rastra</strong>. Orodje bo samodejno poiskalo polje <strong>ImeRazreda</strong> ali <strong>Ime_Razreda</strong>za uporabo.</p><p>To možnost uporabite, če vnos ne vsebuje teh standardnih imen polj.</p>",
	"@@Statistics_numberofcolumns_tag0@@": "<p>Število stolpcev pikslov, ki jih boste uporabili v dimenziji središčnih soseščin.</p>",
	"@@Statistics_numberofrows_tag0@@": "<p>Število vrstic pikslov, ki jih boste uporabili v dimenziji središčnih soseščin.</p>",
	"@@Statistics_onlyfillnodatapixels_tag0@@": "<p>Dopolni luknje brez podatkov v izhodu. To je koristno, če v vaših slikah manjkajo vrstice.</p>",
	"@@Statistics_raster_tag0@@": "<p>Vhodni raster, na katerem se bodo izvedle središčne statistike.</p>",
	"@@Statistics_statisticstype_tag0@@": "<p>V nadaljevanju sledi sedem tipov goriščnih statističnih funkcij:</p><ul><li>Najmanj--Izračuna najmanjšo vrednost pikslov znotraj soseščine.</li><li>Največ--Izračuna največjo vrednost pikslov znotraj soseščine.</li><li>Srednja vrednost--Izračuna povprečno vrednost pikslov znotraj soseščine. To je privzeta vrednost.</li><li>Standardni odklon--Izračuna vrednost standardnega odklona pikslov znotraj soseščine.</li><li>Mediana--Izračuna vrednost mediane pikslov znotraj soseščine.</li><li>Večina--Izračuna vrednost večine oz. vrednost, ki se najpogosteje pojavi, pikslov v soseščini.</li><li>Manjšina--Izračuna vrednost manjšine oz. vrednosti, ki se pojavi najmanj pogosto, pisklov znotraj soseščine.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changedirection_tag0@@": "<p>Navaja smer spremembe, ki bi vključena v analizo.</p><p>Ta parameter je na voljo samo, ko je vhodni raster analize sprememb izhodni sloj iz orodij LandTrendr.</p><ul><li><strong>Vse smeri</strong>--Vse smeri sprememb so vključene v izhodni sloj. To je privzeta vrednost.</li><li><strong>Povečujoče</strong>--V izhodni sloj je vključena samo sprememba v pozitivni ali povečujoči se smeri.</li><li><strong>Padajoče</strong>--V izhodni sloj je vključena samo sprememba v negativi ali padajoči smeri.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changetype_tag0@@": "<p>Navaja informacijo spremembe za izračun.</p><ul><li><strong>Čas najnovejše spremembe</strong>--Vsak piksel vsebuje datum najnovejše spremembe za tisti piksel v časovnem nizu. To je privzeta vrednost.</li><li><strong>Čas najzgodnejše spremembe</strong>--Vsak piksel vsebuje datum najzgodnejše spremembe za tisti piksel v časovnem nizu.</li><li><strong>Čas največje spremembe</strong>--Vsak piksel vsebuje datum najbolj pomembne spremembe za ta piksel v časovnem nizu.</li><li><strong>Število sprememb</strong>--Vsak piksel vsebuje skupno število kolikokrat se je piksel spremenil v časovnem nizu.</li><li><strong>Čas najdaljše spremembe</strong>--Vsak piksel vsebuje datum spremembe ob koncu najdaljšega prehodnega segmenta v časovnem nizu.</li><li><strong>Čas najkrajše spremembe</strong>--Vsak piksel vsebuje datum spremembe ob koncu najkrajšega prehodnega segmenta v časovnem nizu.</li><li><strong>Čas najhitrejše spremembe</strong>--Vsak piksel vsebuje datum spremembe ob koncu prehoda, ki se je zgodila najhitreje.</li><li><strong>Čas najpočasnejše spremembe</strong>--Vsak piksel vsebuje datum spremembe ob koncu prehoda, ki se je zgodila najpočasneje.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_filterbyduration_tag0@@": "<p>Navaja, ali bo izvedeno filtriranje po trajanju spremembe.</p><p></p><ul><li>Izbrano--Filtrirajte rezultate po trajanju, tako da so v izhodni sloj vključene samo spremembe, ki so trajale navedeno količino časa.</li><li>Preklic izbire--Brez filtriranja rezultatov po trajanju. To je privzeta vrednost.</li></ul><p>Ta parameter je na voljo samo, ko je vhodni raster analize sprememb vhodni sloj iz orodij LandTrendr.</p><p>Če je ta parameter izbran, morate nastaviti parametra<strong>Najkrajše trajanje</strong>in<strong>Najdaljše trajanje</strong>za filtriranje.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbymagnitude_tag0@@": "<p>Navaja, ali bo izvedeno filtriranje po obsegu.</p><ul><li>Izbrano--Filtrirajte rezultate po obsegu, tako da so v izhodni sloj vključeni samo rezultati navedenega obsega.</li><li>Preklic izbire--Brez filtriranja rezultatov po obsegu. To je privzeta vrednost.</li></ul><p>Ta parameter je na voljo samo, ko je vhodni raster analize sprememb vhod iz orodij LandTrendr.</p><p>Če je ta parameter izbran, morate nastaviti parametra<strong>Najmanjši obseg</strong>in<strong>Največji obseg</strong> za filtriranje</p>.",
	"@@Detect-Change-Using-Change-Analysis_filterbyyear_tag0@@": "<p>Navaja, ali bo izhodni sloj omejen glede na razpon let.</p><ul><li>Izbrano--Filtrirajte rezultate, tako da so v izhodni sloj vključene samo spremembe, ki so se zgodile v določenem razponu let.</li><li>Preklic izbire--Brez filtriranja po letih. To je privzeta vrednost.</li></ul><p>Če je ta parameter izbran, morate za filtriranje nastaviti parametra <strong>Najmanjša vrednost</strong>in<strong>Največja vrednost</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbystartvalue_tag0@@": "<p>Filtrirajte rezultate po začetni vrednosti, tako da so v izhod vključene samo spremembe dane začetne vrednosti.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyendvalue_tag0@@": "<p>Filtrirajte rezultate po končni vrednosti, tako da so v izhod vključene samo spremembe dane končne vrednosti.</p>",
	"@@Detect-Change-Using-Change-Analysis_maximumnumberofchanges_tag0@@": "<p>Največje število sprememb na piksel, ki bo izračunano. Vneseno število se sklada s številom pasov v izhodnem rastru. Privzeta vrednost je 1, kar pomeni, da je izračunan samo en datum spremembe, izhodni raster pa vsebuje samo en pas.</p><p>Ta parameter ni na voljo, ko je parameter<strong>Tip spremembe</strong>nastavljen na<strong>Število sprememeb</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_raster_tag0@@": "<p>Vhodni raster analize sprememb.</p>",
	"@@Detect-Change-Using-Change-Analysis_segmentdate_tag0@@": "<p>Navaja, ali bo datum izvlečen na začetku oz. na koncu segmenta spremembe.</p><p>Ta parameter je na voljo samo, ko je vhodni raster analize sprememb izhod iz orodij LandTrendr.</p><ul><li><strong>Začetek segmenta</strong>--Izvlecite datum na začetku segmenta spremembe. To je privzeta vrednost.</li><li><strong>Konec segmenta</strong>--Izvlecite datum na koncu segmenta spremembe.</li></ul>",
	"@@Kernel-Density_areaunits_tag0@@": "<p>Področne enote izhodnih vrednosti gostote.</p><ul><li>Kvadratne enote karte--Za kvadrat linearnih enot izhodnega koordinatnega sistema.</li><li>Kvadratne milje--Za (ameriške) milje.</li><li>Kvadratni kilometri--Za kilometre.</li><li>Akri--Za (ameriške) akre.</li><li>Hektarji--Za hektarje.</li><li>Kvadratni metri--Za metre.</li><li>Kvadratni jardi--Za (ameriške) jarde.</li><li>Kvadratni čevlji--Za (ameriške) čevlje.</li><li>Kvadratni palci--Za (ameriške) palce.</li><li>Kvadratni centrimetri--Za centimetre.</li><li>Kvadratni milimetri--Za milimetre.</li></ul>",
	"@@Kernel-Density_cellsize_tag0@@": "<p>Velikost piksla za izhodni rastrski niz podatkov. Če je <strong>velikost celice</strong> nastavljena v geoprocesnih okoljih, je to privzeta vrednost.</p>",
	"@@Kernel-Density_inputbarriers_tag0@@": "<p>Niz podatkov določa pregrade.</p><p>Pregrade so lahko geobjektni sloj polilinije ali poligonski geoobjekti.</p>",
	"@@Kernel-Density_inputfeatures_tag0@@": "<p>Vhodna točka ali linijski geoobjekti, za katere je treba izračunati gostoto.</p>",
	"@@Kernel-Density_method_tag0@@": "<p>Določa, ali se naj uporabi najkrajša pot na osnovi sferoidne (geodetske) ali ravninske (ravne površine) metode.</p><ul><li><strong>Planarno</strong>--Uporablja planarne razdalje med geoobjekti. To je privzeta vrednost.</li><li><strong>Geodetsko</strong>--Uporablja geodetske razdalje med geoobjekti. Ta metoda upošteva krivuljo sferoida in pravilno ravna s podatki v bližini polov in mednarodne podatkovne linije.</li></ul><p>Priporočljivo je, da uporabljate <strong>geodetsko</strong> metodo za podatke, shranjene v koordinatnem sistemu, ki ni primeren za meritve razdalje, in katero koli analizo, ki zajema veliko geografsko površino. Na primer, Web Mercator ali kateri koli geografski koordinatni sistem bi na primer moral uporabljati <strong>geodetsko</strong>metodo.</p>",
	"@@Kernel-Density_outputcellvalues_tag0@@": "<p>Določa kaj predstavljajo vrednosti v izhodnem rastru.</p><ul><li><strong>Gostote</strong>--Izhodne vrednosti predstavljajo predvideno vrednost gostote. To je privzeta vrednost.</li><li><strong>Pričakovana števila</strong>--Izhodne vrednosti predstavljajo predvideno količino pojava v vsakem pikslu. Ker je vrednost piksla povezana z določeno<strong>velikostjo celice</strong>, dobljenega rastra ni mogoče prevzorčiti v drugo velikost piksla in še vedno predstavljati enako količino pojava.</li></ul>",
	"@@Kernel-Density_populationfield_tag0@@": "<p>Polje, ki označuje vrednosti populacije za vsak geoobjekt. Vrednost <strong>Polje populacije</strong> je število ali količina, ki jo je treba razpršiti po pokrajini, da se ustvari neprekinjena površina. Vrednosti v<strong>Polje populacije</strong>so lahko celo število ali plavajoča točka.</p><p>Možnosti in privzeta vedenja za polje so navedena spodaj v prednostnem zaporedju.</p><ul><li>Uporabite<strong>Brez</strong>, če noben element ali posebna vrednost ne bo uporabljena in bo vsak geoobjekt štet enkrat.</li><li>Uporabite<strong>Oblika</strong>, če vhodni geoobjekti vsebujejo Z.</li><li>V nasprotnem primeru je privzeto polje<strong>POPULACIJA</strong> oz. sprejemljiva izpeljanka populacije:<ul><li><strong>POPULACIJAxxxx</strong>, pri čemer je<strong>xxxx</strong>lahko kateri koli veljaven znak, npr.<strong>POPULACIJA6</strong>,<strong>POPULACIJA1974</strong> ali<strong>POPULACIJATIP CESTE</strong>.</li><li><strong>POP</strong>.</li><li><strong>POPxxxx</strong>.</li><li>Če ne velja nič od navedenega, je privzeta nastavitev<strong>Brez</strong>.</li></ul></li></ul>",
	"@@Kernel-Density_searchradius_tag0@@": "<p>Iskalni polmer, znotraj katerega se izračuna gostota. Enote temeljijo na linearni enoti projekcije.</p><p>Če so enote na primer v metrih--da vključimo vse geoobjekte v okolici ene milje--nastavite iskalni polmer tako, da bo enak 1609,344 (ker je 1 milja 1609,344 metrov).</p>",
	"@@Zonal-Statistics_ignorenodataincalculations_tag0@@": "<p>Označuje, ali bodo vrednosti<strong>Brez podatkov</strong>v<strong>Raster vrednosti</strong>vplivale na rezultate območja, v katerega spadajo.</p><ul><li><strong>Da</strong>--Znotraj katerega koli določenega območja bodo pri določanju izhodne vrednosti za to območje uporabljeni samo piksli, ki imajo vrednost v <strong>Raster vrednosti</strong>.Piksli<strong>Brez podatkov</strong>v<strong>Raster vrednosti</strong>bodo v statističnem izračunu prezrti. To je privzeta vrednost.</li><li><strong>Ne</strong>--Če znotraj katerega koli določenega območja v <strong>rastru vrednosti</strong> obstajajo kakršni koli piksli <strong>Brez podatkov</strong>, se smatra, da ni dovolj informacij za izvedbo statističnih izračunov za vse piksle v tem območju; zato bo celotnemu območju na izhodnem rastru dodeljena vrednost <strong>Brez podatkov</strong>.</li></ul>",
	"@@Zonal-Statistics_percentileinterpolationtype_tag0@@": "<p>Določa metodo interpolacije percentila, ki bo uporabljena, ko je število vrednosti iz vhodnega rastra, ki bo izračunano, sodo.</p><ul><li><strong>Samodejno zaznavanje</strong>--Če je vhodni raster vrednosti tipa piksla celega števila, potem je uporabljena metoda<strong>Najbližje</strong>. Če je vhodni raster vrednosti tipa plavajočega točkovnega piksla, potem se uporabi metoda<strong>Linearno</strong>. To je privzeta vrednost.</li><li><strong>Najbližje</strong>--Najbližja razpoložljiva vrednost do želenega percentila je uporabljena. V tem primeru je tip izhodnega piksla enak kot pri vhodnem rasterju vrednosti.</li><li><strong>Linearno</strong>--Uravnoteženo povprečje dveh sosednjih vrednosti iz želenega percentila je uporabljeno. V tem primeru je tip izhodnega piksla plavajoča točka.</li></ul>",
	"@@Zonal-Statistics_percentilevalue_tag0@@": "<p>Percentil za izračun. Privzeta vrednost je 90 za 90. percentil.</p><p>Vrednosti lahko segajo od 0 do 100. Percentil 0 je pravzaprav enakovreden najmanjši, percentil 100 pa največji statistični vrednosti. Vrednost 50 bo pravzaprav ustvarila enak rezultat kot srednja statistična vrednost.</p>",
	"@@Zonal-Statistics_processasmultidimensional_tag0@@": "<p>Določa kako je obdelan vnos večdimenzionalnega rastra vrednosti.</p><ul><li><strong>Trenutna rezina</strong>--Statistika bo izračunana iz trenutne rezine večdimenzionalnega niza podatkov. To je privzeta vrednost.</li><li><strong>Vse rezine</strong>--Statistika bo izračunana za vse dimenzije (kot sta čas in globina) večdimenzionalnega niza podatkov.</li></ul>",
	"@@Zonal-Statistics_statisticstype_tag0@@": "<p>Statistični tip, ki bo izračunan.</p><ul><li><strong>Povprečno</strong>--Izračuna povprečje vseh pikslov v <strong>rastru vrednosti</strong>, ki spadajo v isto cono kot izhodni piksel.</li><li><strong>Večina</strong>--Določa vrednost, ki se najpogosteje zgodi pri vseh pikslih v<strong>rastru vrednosti</strong>, ki spadajo v isto cono kot izhodni piksel.</li><li><strong>Največ</strong>--Določa največjo vrednost vseh pikslov v<strong>rastru vrednosti</strong>, ki spadajo v isto cono kot izhodni piksel.</li><li><strong>Srednje</strong>--Določa srednjo vrednost vseh pikslov v<strong>rastru vrednosti</strong>, ki spada v isto cono kot izhodni piksel.</li><li><strong>Najmanj</strong>--Določa najmanjšo vrednost vseh pikslov v<strong>rastru vrednosti</strong>, ki spada v isto območje kot izhodni piksel.</li><li><strong>Manjšina</strong>--Določa vrednosti, ki se zgodi najmanj pogosto pri vseh pikslih v<strong>rastru vrednosti</strong>, ki spada v enako cono kot izhodni piksel.</li><li><strong>Percentil</strong>--Izračuna percentil vseh pikslov v<strong>rastru vrednosti</strong>, ki spadajo v isto cono kot izhodni piksel. 90. percentil je izračunan po privzeti nastavitvi. Določite lahko, kateri percenti bo izračunan s parametrom<strong>Vrednost percentila</strong>.</li><li><strong>Razpon</strong>--Izračuna razliko med največjo in najmanjšo vrednostjo vseh pikslov v <strong>rastru vrednosti</strong>, ki spadajo v isto cono kot izhodni piksel.</li><li><strong>Standardni odklon</strong>--Izračuna standardni odklon vseh pikslov v<strong>rastru vrednosti</strong>, ki spadajo v isto cono kot izhodni piksel.</li><li><strong>Vsota</strong>--Izračuna skupno vrednost vseh pikslov v<strong>rastru vrednosti</strong>, ki spadajo v isto cono kot izhodni piksel.</li><li><strong>Raznolikost</strong>--Izračuna število edinstvenih vrednosti za vse piksle v<strong>rastru vrednosti</strong>, ki spadajo v isto cono kot izhodni piksel.</li></ul>",
	"@@Zonal-Statistics_valueraster_tag0@@": "<p>Raster, ki vsebuje vrednosti, na podlagi katerih se izračuna statistika.</p>",
	"@@Zonal-Statistics_zonefield_tag0@@": "<p>Polje, ki vsebuje vrednosti za določanje vsakega območja. To je lahko polje s celim številom ali besedilno polje območnega rastra.</p>",
	"@@Zonal-Statistics_zoneraster_tag0@@": "<p>Sklop podatkov, ki opredeljuje območja. Območja lahko določi raster celih števil.</p>",
	"@@Zonal-Statistics_calculatecircularstatistics_tag0@@": "<p>Določa, kako se bo izračunala vrsta statistike.</p><ul><li><strong>Aritmetika</strong> - Izračuna aritmetično statistiko. To je privzeta vrednost.</li><li><strong>Krožno</strong> – Izračuna krožno statistiko, ki je primerna za ciklične količine, kot je smer kompasa v stopinjah, dnevni čas in ulomki realnih števil.</li></ul>",
	"@@Zonal-Statistics_circularwrapvalue_tag0@@": "<p>Najvišja možna vrednost (zgornja meja) v cikličnih podatkih. Je pozitivno število s privzeto vrednostjo 360. Ta vrednost prav tako predstavlja enako količino kot najnižja možna vrednost (spodnja meja).</p><p>Ta parameter je uporaben le pri izračunu krožne statistike.</p>",
	"@@Boundary-Clean-function_inputraster_tag0@@": "<p>Vhodni raster, za katerega je meja med območji zglajena.</p><p>Biti mora tipa celih števil.</p>",
	"@@Boundary-Clean-function_runexpansionandshrinkingtwice_tag0@@": "<p>Določa število postopkov glajenja, dvakrat ali enkrat.</p><ul><li><p><strong>Izbrano</strong>--Dvakrat izvede razširitev in krčenje. Prvič je postopek izveden v skladu z navedenim tipom razvrščanja. Potem se dodatna razširitev in krčenje izvede z obratno prednostjo. To je privzeta vrednost.</p></li><li><p><strong>Preklic izbire</strong>--Enkrat izvede razširitev in krčenje v skladu s tipom razvrščanja.</p></li></ul>",
	"@@Boundary-Clean-function_sorttype_tag0@@": "<p>Določa tip razvrščanja za uporabo v postopku glajenja. Razvrščanje določa prednost po kateri je mogoče celice razširiti v njihove sosede.</p><p>Razvrščanje je mogoče izvesti na podlagi vrednosti cone ali območja cone.</p><ul><li><p><strong>Brez razvrščanja</strong>--Cone niso razvrščene po velikosti. Cone z večjimi vrednostmi imajo višjo prednost za razširitev v območja z manjšimi vrednostmi v zglajenem izhodu. To je privzeta vrednost.</p></li><li><p><strong>Padajoče</strong>--Razvrsti območja v padajočem vrstnem redu po velikosti. Cone z večjimi skupnimi območji imajo višjo prednost za razširitev v območja z manjšimi skupnimi območji. Ta možnost običajno izloči ali zmanjša prevladovanje celic z manjšimi območji v zglajenem izhodnem sloju.</p></li><li><p><strong>Naraščajoče</strong>--Razvrsti območja v naraščajočem vrstnem redu po velikosti. Cone z manjšimi skupnimi območji imajo višjo prednost za razširitev v območja z večjimi skupnimi območji. Ta možnost običajno ohrani ali poveča prevladovanje celic iz manjših območij v zglajenem izhodnem sloju.</p></li></ul>",
	"@@Aggregate-Multidimensional_dimension_tag0@@": "<p>Dimenzija agregacije. To je dimenzija vzdolž katere bo potekala agregacija spremenljivk.</p>",
	"@@Aggregate-Multidimensional_dimensiondefinition_tag0@@": "<p>Določa metodo, ki bo uporabljena za filtriranje vhodnih večdimenzionalnih podatkov pred izvedbo agregacije.</p><ul><li><strong>Vse</strong> – Za vsako dimenzijo bo uporabljen celotni razpon. To je privzeta nastavitev.</li><li><strong>Po vrednostih</strong> – Dimenzija bo razrezana s pomočjo vrednosti dimenzije ali seznama vrednosti.</li><li><strong>Po razponih</strong> – Dimenzija bo razrezana s pomočjo razpona ali seznama razponov.</li><li><strong>Po ponovitvi</strong> – Dimenzija bo razrezana po določeni velikosti intervala.</li></ul>",
	"@@Aggregate-Multidimensional_iterationdefinitionparameters_tag0@@": "<p>Parametri opredelitve ponovitve vam omogočajo opredelitev vrednosti dimenzije, ki bodo uporabljene za filtriranje vhodnih večdimenzionalnih podatkov za analizo, kadar je parameter <strong>Opredelitev dimenzije</strong> nastavljen na <strong>Po ponovitvi</strong>.</p><ul><li><strong>Dimenzija</strong> – Dimenzija, ki bo uporabljena za filtriranje.</li><li><strong>Začetek prve ponovitve</strong> – Začetek prvega intervala. Interval, ki bo uporabljen za ponovitev skozi sklop podatkov.</li><li><strong>Konec prve ponovitve</strong> –Konec prvega intervala. Interval, ki bo uporabljen za ponovitev skozi sklop podatkov.</li><li><strong>Korak</strong> – Pogostost s katero bodo podatki razrezani.</li><li><strong>Enota</strong> – Enota ponovitve.</li></ul>",
	"@@Aggregate-Multidimensional_keywordinterval_tag0@@": "<p>Določi interval ključne besede, ki bo uporabljen pri agregaciji vzdolž dimenzije.</p><p>Ta parameter je obvezen, kadar je parameter <strong>Tipa</strong> nastavljen na <strong>Ključno besedo intervala</strong>.</p><ul><li><strong>Urno</strong> – Vrednosti podatkov so agregirane v urne časovne korake in rezultat vključuje vsako uro v časovni seriji. To je privzeta nastavitev.</li><li><strong>Dnevno</strong> – Vrednosti podatkov so agregirane v dnevne časovne korake in rezultat vključuje vsak dan v časovni seriji.</li><li><strong>Tedensko</strong> – Vrednosti podatkov so agregirane v tedenske časovne korake in rezultat vključuje vsak teden v časovni seriji.</li><li><strong>Deseterno</strong> – Vrednosti podatkov so agregirane v 3 obdobja, vsako po 10 dni. Zadnje obdobje lahko vsebuje več ali manj kot 10 dni. Rezultat vključuje 3 izseke za vsak mesec.</li><li><strong>Peterno</strong> – Vrednosti podatkov so agregirane v 6 obdobij, vsako po 5 dni. Zadnje obdobje lahko vsebuje več ali manj kot 5 dni. Rezultat vključuje 6 izsekov za vsak mesec.</li><li><strong>Mesečno</strong> – Vrednosti podatkov so agregirane v mesečne časovne korake in rezultat vključuje vsak mesec v časovni seriji.</li><li><strong>Četrtletno</strong> – Vrednosti podatkov so agregirane v četrtletne časovne korake in rezultat vključuje vsako četrtletje v časovni seriji.</li><li><strong>Letno</strong> – Vrednosti podatkov so agregirane v letne časovne korake in rezultat vključuje vsako leto v časovni seriji.</li><li><strong>Dnevno ponavljajoče</strong> – Vrednosti podatkov so agregirane v dnevne časovne korake in rezultat vključuje eno agregirano vrednost na julijanski dan. Rezultat vključuje največ 366 dnevnih časovnih izsekov.</li><li><strong>Tedensko ponavljajoče</strong> – Vrednosti podatkov so agregirane v tedenske časovne korake in rezultat vključuje eno agregirano vrednost na teden. Rezultat vključuje največ 53 tedenskih časovnih izsekov.</li><li><strong>Tedensko ponavljajoče</strong> – Vrednosti podatkov so agregirane v mesečne časovne korake in rezultat vključuje eno agregirano vrednost na mesec. Rezultat vključuje največ 12 mesečnih časovnih izsekov.</li><li><strong>Četrtletno ponavljajoče</strong> – Vrednosti podatkov so agregirane v četrtletne časovne korake in rezultati vključujejo eno agregirano vrednost na četrtletje. Rezultat vključuje največ 4 četrtletne časovne izseke.</li></ul>",
	"@@Aggregate-Multidimensional_operation_tag0@@": "<p>Določa matematično metodo, ki bo uporabljena za združevanje agregiranih izsekov v interval.</p><ul><li><strong>Večina</strong> – Vrednost piksla, ki se je najpogosteje pojavila, bo izračunana po vseh izsekih v intervalu.</li><li><strong>Maksimum</strong> – Maksimalna vrednost piksla bo izračunana po vseh izsekih v intervalu.</li><li><strong>Srednja vrednost</strong> – Srednja vrednost vrednosti piksla bo izračunana po vseh izsekih v intervalu. To je privzeta nastavitev.</li><li><strong>Mediana</strong> – Vrednost mediane piksla bo izračunana po vseh izsekih v intervalu.</li><li><strong>Minimum</strong> – Minimalna vrednost piksla bo izračunana po vseh izsekih v intervalu.</li><li><strong>Manjšina</strong> – Vrednosti piksla, ki se je pojavila najredkeje, bo izračunana po vseh izsekih v intervalu.</li><li><strong>Razpon</strong> – Razpon vrednosti za piksel bo izračunan po vseh izsekih v intervalu.</li><li><strong>Standardni odklon</strong> – Standardni odklon vrednosti piksla bo izračunan po vseh izsekih v intervalu.</li><li><strong>Vsota</strong> – Vsota vrednosti piksla bo izračunana po vseh izsekih v intervalu.<li></li><strong>Raznolikost</strong> – Število enoličnih vrednosti piksla bo izračunano po vseh izsekih v intervalu.</li></ul><p>Vse možnosti imajo ekvivalent z možnostjo Prezri vrednosti NoData. Izvedle bodo matematično operacijo na vseh veljavnih pikslih vzdolž dimenzije in prezrle vse piskle z vrednostjo NoData.</p>",
	"@@Aggregate-Multidimensional_ranges_tag0@@": "<p>Razponi intervalov, ki so navedeni v tabeli, bodo uporabljeni za agregacijo skupin vrednosti. Minimalne in maksimalne vrednosti določajo razpon, ki bo vključen.</p><p>Ta parameter je obvezen, kadar je parameter <strong>Tipa</strong> nastavljen na <strong>Razponi intervalov</strong>.</p>",
	"@@Aggregate-Multidimensional_raster_tag0@@": "<p>Vhodni večdimenzionalni raster.</p>",
	"@@Aggregate-Multidimensional_type_tag0@@": "<p>Določi interval dimenzije za katerega bo potekala agregacija podatkov.</p><ul><li><strong>Vse</strong> – Podatki spremenljivke bodo agregirani po vseh izsekih. To je privzeta nastavitev.</li><li><strong>Ključna beseda intervala</strong> – Podatki spremenljivke bodo agregirani z uporabo splošno znanega intervala.</li><li><strong>Vrednost intervala</strong> – Podatki spremenljivke bodo agregirani z uporabo uporabniško določenega intervala in enote.</li><li><strong>Razponi intervalov</strong> – Podatki spremenljivke bodo agregirani med določenimi pari vrednosti in datumov.</li></ul>",
	"@@Aggregate-Multidimensional_valueinterval_tag0@@": "<p>Velikost intervala, ki je uporabljen za agregacijo.</p><p>Ta parameter je obvezen, kadar je parameter <strong>Tipa</strong> nastavljen na <strong>Vrednost intervala</strong>.</p>",
	"@@Aggregate-Multidimensional_values_tag0@@": "<p>Vrednosti dimenzije, ki bodo uporabljene za filtriranje vhodnih večdimenzionalnih podatkov za analizo. Ta parameter je obvezen, kadar je parameter <strong>Opredelitev dimenzije</strong> nastavljen na <strong>Po vrednostih</strong>.</p>",
	"@@Aggregate-Multidimensional_variables_tag0@@": "<p>Spremenljivka ali spremenljivke, ki bodo agregirane vzdolž podane dimenzije.</p>",
	"@@Predict-Using-Regression_inputdefinitionfile_tag0@@": "<p>Datoteka vhodne regresijske definicije Esri (<strong>.ecd</strong>), ki vsebuje statistiko in informacije za specifični podatkovni sklop, regresijski model in izbrane atribute.</p>",
	"@@Predict-Using-Regression_rasters_tag0@@": "<p>Rastrski podatkovni sklop ali podatkovni sklopi, ki predstavljajo napovedovalne spremenljivke. Lahko je enopasovni raster, večpasovni raster, večdimenzionalni raster, mozaični podatkovni sklop ali rastrska zbirka.</p>",
	"@@Cell-Statistics_operation_tag0@@": "<p>Vrsta statističnega izračuna, ki ga želite izvesti.</p><p>Razpoložljive statistike so<strong>večina</strong>,<strong>maksimum</strong>,<strong>srednja vrednost</strong>,<strong>mediana</strong>,<strong>minimum</strong>,<strong>manjšina</strong>,<strong>percentil</strong>,<strong>razpon</strong>,<strong>standardni odklon</strong>,<strong>vsota</strong> in<strong>različnost</strong>.</p><p>Privzeta je<strong>srednja vrednost</strong>.</p>",
	"@@Colormap-To-RGB_randomlyassigncolortounmappedpixels_tag0@@": "<p>Barve so naključno dodeljene slikovnim pikam, ki niso vključene v barvno karto.</p><ul><li>Neoznačeno--Slikovnim pikam, ki niso na karti, barva ni dodeljena. To je privzeto.</li><li>Označeno--Slikovnim pikam, ki so na karti, je dodeljena barva.</li></ul>",
	"@@Pansharpen_sensor_tag0@@": "<p>Ko je izbran algoritem Gram-Schmidt, lahko določite tudi senzor z zbranim večpasovnim rastrskim vhodom. Z izbiro vrste senzorja boste nastavili ustrezne pasovne širine.</p>",
	"@@Dimensional-Moving-Statistics_backwardwindow_tag0@@": "<p>Vrednost, koliko rezin pred ali nad je treba vključiti v definirano okno. Vrednost mora biti pozitivno celo število od 1 do 100. Privzeta vrednost je 1.</p><p>Enota tega parametra je rezina.</p>",
	"@@Dimensional-Moving-Statistics_circularwrapvalue_tag0@@": "<p>Vrednost, ki bo uporabljena za zaokrožitev linearne vrednosti na območje dane krožne srednje vrednosti.</p><p>Vrednost mora biti pozitivna. Privzeta vrednost je 360 stopinj.</p>",
	"@@Dimensional-Moving-Statistics_dimension_tag0@@": "<p>Ime dimenzije, po kateri se bo okno premikalo.</p><p>Privzeta vrednost je prva dimenzija, ki ni x,y, ki jo najdemo v vhodnem večdimenzionalnem rastru.</p>",
	"@@Dimensional-Moving-Statistics_forwardwindow_tag0@@": "<p>Vrednost, koliko rezin za ali spodaj je treba vključiti v definirano okno. Vrednost mora biti pozitivno celo število od 1 do 100. Privzeta vrednost je 1.</p><p>Enota tega parametra je rezina.</p>",
	"@@Dimensional-Moving-Statistics_inputraster_tag0@@": "<p>Vhodni raster je lahko samo večdimenzionalni raster v rastrskem formatu v oblaku (datoteka <strong>.crf</strong>).</p>",
	"@@Dimensional-Moving-Statistics_nodatahandling_tag0@@": "<p>Določa, kako bodo vrednosti brez podatkov obravnavane s statističnim izračunom.</p><ul><li><strong>Podatki</strong>--Vrednosti brez podatkov v vnosu vrednosti bodo prezrte v rezultatih definiranega okna, v katerega spadajo. To je privzeto.</li><li><strong>Brez podatkov</strong>--Izhodne vrednosti bodo brez podatkov, če na vhodu znotraj definiranega okna obstajajo vrednosti brez podatkov.</li><li><strong>Izpolni brez podatkov</strong>--Vrednosti celic brez podatkov bodo zamenjane z izbrano statistiko znotraj definiranega okna.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentileinterpolationtype_tag0@@": "<p>Določa metodo interpolacije, ki bo uporabljena, ko je podana vrednost percentila med dvema vrednostma vhodne celice.</p><ul><li><strong>Samodejno zaznavanje</strong>--Če so vhodni rastri tipa piksla celega števila, je uporabljena metoda<strong>Najbližje</strong>. Če je vhodni raster tipa plavajočega piksla, se uporabi metoda <strong>Linearno</strong>. To je privzeta vrednost.</li><li><strong>Najbližje</strong>--Uporabljena je nabližja razpoložljiva vrednost do percentila. V tem primeru bo tip izhodnega piksla enak kot pri vhodnem rastru vrednosti.</li><li><strong>Linearno</strong>--Uporabljeno je uravnoteženo povprečje dveh sosednjih vrednosti iz percentila. V tem primeru je tip izhodnega piksla plavajoča vejica.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentilevalue_tag0@@": "<p>Percentil, ki bo izračunan, ko je <strong>percentil</strong>izbran kot vrsta statistike. Privzeta vrednost je 90 za 90. percentil.</p><p>Vrednosti lahko segajo od 0 do 100. Percentil 0 je pravzaprav enakovreden najmanjši, percentil 100 pa največji statistični vrednosti, pri čemer bo rezultat izjemoma plavajoča vejica. Vrednost 50 bo ustvarila enak rezultat kot srednja statistična vrednost.</p>",
	"@@Dimensional-Moving-Statistics_statisticstype_tag0@@": "<p>Določa vrsto statistike, ki bo izračunana.</p><p></p><ul><li><strong>Povprečje</strong>--Izračuna povprečje (srednjo vrednost) celic v definiranem oknu. To je privzeto.</li><li><strong>Krožna srednja vrednost</strong>--Izračuna krožno srednjo vrednost celic v definiranem oknu. Ko je izbrana ta vrsta statistike, postane na voljo parameter<strong>Vrednost krožnega preloma</strong>.</li><li><strong>Večina</strong>--Določena bo večina (vrednost, ki se pojavlja najpogosteje) celic v definiranem oknu.</li><li><strong>Maksimum</strong>--Določen bo maksimum (največja vrednost) celic v definiranem oknu.</li><li><strong>Mediana</strong>--Določena bo mediana celic v soseski.</li><li><strong>Minimum</strong>--Določen bo minimum (najmanjša vrednost) celic v soseski.</li><li><strong>Percentil</strong>--Izračunan bo percentil celic v soseski. Ko je izbrana ta vrsta statistike, postaneta na voljo parametra<strong>Vrednost percentila</strong>in <strong>Vrsta interpolacije percentila</strong>. S temi novimi parametri določite percentil za izračun in izberete vrsto interpolacije, ki jo želite uporabiti.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_dimension_tag0@@": "<p>Dimenzija, ki se uporablja za interpolacijo.</p><p>Ta parameter je obvezen, kadar je parameter<strong>Definicija dimenzije</strong>nastavljen na <strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_dimensiondefinition_tag0@@": "<p>Določa metodo, ki bo uporabljena za filtriranje vhodnih večdimenzionalnih podatkov pred izvedbo interpolacije.</p><ul><li><strong>Po vrednostih</strong>--Dimenzija bo razrezana z uporabo vrednosti dimenzije ali seznama vrednosti.</li><li><strong>Po intervalu</strong>--Dimenzija bo razrezana z uporabo obsega ali seznama obsegov.</li><li><strong>Po ciljnem rastru</strong>--Dimenzija bo razrezana s posebnim ciljnim večdimenzionalnim rastrom.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_endofinterval_tag0@@": "<p>Konec intervala, ki se uporablja za ponovitev skozi sklop podatkov.</p><p>Ta parameter je obvezen, če je parameter<strong>Definicija dimenzije</strong>nastavljen na<strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_ignorenodata_tag0@@": "<p>Določi ali se bo v analizi prezrlo vrednosti brez podatkov.</p><ul><li>Neoznačeno--Analiza bo brez podatkov, če so v sosednjih rezinah vrednosti brez podatkov. To je privzeto.</li><li>Označeno--Analiza bo uporabila samo rezine, ki imajo veljavne slikovne pike, in bo prezrla rezine brez podatkov.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_interpolationmethod_tag0@@": "<p>Določa metodo, ki bo uporabljena za interpolacijo rastra.</p><ul><li><strong>Linearno</strong>--Izhod bo interpoliran linearno z uporabo sosednjih rezin. To je privzeto.</li><li><strong>Najbližji sosed</strong>--izhod bo uporabil najbližjo sosednjo rezino.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_raster_tag0@@": "<p>Vhodni večdimenzionalni raster.</p>",
	"@@Interpolate-Raster-By-Dimension_startofinterval_tag0@@": "<p>Začetek intervala, ki se uporablja za ponovitev skozi sklop podatkov.</p><p>Ta parameter je obvezen, če je parameter<strong>Definicija dimenzije</strong>nastavljen na<strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_step_tag0@@": "<p>Frekvenca, v kateri bodo podatki interpolirani.</p><p>Ta parameter je obvezen, če je parameter<strong>Definicija dimenzije</strong>nastavljen na<strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_targetraster_tag0@@": "<p>Ciljni raster, določen z definicijo dimenzije.</p><p>Ta parameter je obvezen, če je parameter<strong>Definicija dimenzije</strong>nastavljen na<strong>Po ciljnem rastru</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_unit_tag0@@": "<p>Intervalna enota.</p><p>Ta parameter je obvezen, če je parameter<strong>Definicija dimenzije</strong>nastavljen na<strong>Po intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_values_tag0@@": "<p>Dimenzionalne vrednosti za filtriranje vhodnih večdimenzionalnih podatkov za analizo.</p><p>Ta parameter je obvezen, če je parameter<strong>Definicija dimenzije</strong>nastavljen na<strong>Po vrednostih</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_variables_tag0@@": "<p>Spremenljivka ali spremenljivke, ki bodo interpolirane z definicijo dimenzije.</p>",
	"@@Terrain-Flatten_calibrationtype_tag0@@": "<p>Določa, ali bo izhod poravnan z uporabo <strong>Sigma ničla</strong> ali <strong>Gama ničla</strong>.</p><ul><li><strong>Gama ničla</strong>– povratno sipanje beta nič bo normalizirano z uporabo enote površine ravnine, ki je lokalno tangentna na DEM, splošno znana kot lokalni vpadni kot. To je privzeto.</li><li><strong>Sigma ničla</strong> – povratno sipanje beta ničle bo normalizirano z uporabo DEM za izračun površine.</li></ul>",
	"@@Terrain-Flatten_dem_tag0@@": "<p>Vhod DMV.</p><p>DEM se uporablja za oceno lokalne osvetljene površine.</p>",
	"@@Terrain-Flatten_geoid_tag0@@": "<p>Določa, ali bo navpični referenčni sistem vhoda DEM preoblikovan v elipsoidno višino. Večina naborov podatkov o nadmorski višini se nanaša na ortometrično višino morske gladine, zato je v teh primerih potreben popravek za pretvorbo v elipsoidno višino.</p><ul><li>Preverjeno – Izveden bo popravek geoida za pretvorbo ortometrične višine v elipsoidno višino (na podlagi geoida EGM96). To je privzeto.</li><li>Ni označeno – popravek geoida ne bo izveden. To možnost uporabite samo, če je DEM izražen v elipsoidni višini.</li></ul>",
	"@@Terrain-Flatten_raster_tag0@@": "<p>Vhodni radarski podatki.</p><p>Ta raster je treba najprej radiometrično kalibrirati na beta nič.</p>",
	"@@Create-Color-Composite_blueexpression_tag0@@": "<p>Izračun je dodeljen tretjemu pasu.</p><p>Ime pasu, ID pasu ali algebraični izraz, ki uporablja pasove.</p><p>Podprti operatorji so unarni: plus (+), minus (-), krat (*) in deljenje (/).</p>",
	"@@Create-Color-Composite_greenexpression_tag0@@": "<p>Izračun je dodeljen drugemu pasu.</p><p>Ime pasu, ID pasu ali algebraični izraz, ki uporablja pasove.</p><p>Podprti operatorji so unarni: plus (+), minus (-), krat (*) in deljenje (/).</p>",
	"@@Create-Color-Composite_inputraster_tag0@@": "<p>Vhodni večpasovni rastrski podatki.</p>",
	"@@Create-Color-Composite_method_tag0@@": "<p>Določa metodo teme, ki bo uporabljena za ekstrakcijo pasov.</p><ul> <li>Imena pasov – Uporabljeno bo ime pasu, ki predstavlja interval valovne dolžine v elektromagnetnem spektru (kot je rdeča, blizu infrardeča ali toplotna infrardeča) ali polarizacijo (kot so VH, VV, HH ali HV). To je privzeto.</li><li>ID-ji pasov – uporabljena bo številka pasu (kot so B1, B2 ali B3).</li></ul>",
	"@@Create-Color-Composite_redexpression_tag0@@": "<p>Izračun je dodeljen prvemu pasu.</p><p>Ime pasu, ID pasu ali algebraični izraz, ki uporablja pasove.</p><p>Podprti operatorji so unarni: plus (+), minus (-), krat (*) in deljenje (/).</p>",
	"@@Surface-Parameters_localsurfacetype_tag0@@": "<p>Izberite vrsto površinske funkcije, ki bo nameščena okoli ciljne celice.</p><ul><li>Kvadratno - Kvadratna površinska funkcija bo prilagojena sosednjim celicam. To je privzet tip.</li><li>Bikvadratno - Bikvadratna površinska funkcija bo prilagojena sosednjim celicam.</li></ul>",
	"@@Surface-Parameters_neighborhooddistance_tag0@@": "<p>Izhod bo izračunan na tej razdalji od središča ciljne celice. Določa velikost soseske. Privzeta vrednost je velikost vhodne celice rastra, kar ima za posledico sosesko 3 x 3.</p>",
	"@@Surface-Parameters_outputslopemeasurement_tag0@@": "<p>Merske enote (stopinje ali odstotki), ki bodo uporabljene za izhodni raster naklona. Ta parameter je aktiven le, ko je<strong>vrsta parametra</strong><strong>nagib</strong>.</p><ul><li>Stopnja - naklon pobočja se izračuna v stopinjah. To je privzeta vrednost.</li><li>Odstotek vzpona - Naklon naklona bo izračunan kot odstotek dviga, imenovan tudi odstotek naklona.</li></ul>",
	"@@Surface-Parameters_parametertype_tag0@@": "<p>Podaja vrsto parametra izhodne površine, ki bo izračunan.</p><ul><li>Naklon - Izračunana bo stopnja spremembe nadmorske višine. To je privzeta vrednost.</li><li>Lega neba - Izračunana bo smer naklona največje stopnje spremembe za vsako celico.</li><li>Srednja ukrivljenost – Izmerjena bo celotna ukrivljenost površine. Izračuna se kot povprečje najmanjše in največje ukrivljenosti. Ta ukrivljenost opisuje notranjo konveksnost ali konkavnost površine, neodvisno od smeri ali vpliva gravitacije.</li><li>Tangencialna (normalna kontura) ukrivljenost - Merjena bo geometrijska normalna ukrivljenost, pravokotna na naklonsko črto, tangentna na konturno črto. Ta ukrivljenost se običajno uporablja za karakterizacijo konvergence ali divergence toka po površini.</li><li>Profil (normalna naklonska črta) ukrivljenost - Izmerjena bo geometrijska normalna ukrivljenost vzdolž naklonske črte. Ta ukrivljenost se običajno uporablja za karakterizacijo pospeševanja in upočasnjevanja toka po površini.</li><li>Načrt (projicirana kontura) ukrivljenost - Merjena bo ukrivljenost vzdolž konturnih linij.</li><li>Geodetska torzija plastnice – Merjena bo stopnja spremembe kota naklona vzdolž plastnic.</li><li>Gaussova ukrivljenost - Merjena bo celotna ukrivljenost površine. Izračuna se kot produkt najmanjše in največje ukrivljenosti.</li><li>Casoratijeva ukrivljenost – Merjena bo splošna ukrivljenost površine. To je lahko nič ali katero koli drugo pozitivno število.</li></ul>",
	"@@Surface-Parameters_projectgeodesicazimuths_tag0@@": "<p>Podaja, ali bodo geodetski azimuti projicirani za popravljanje popačenja kota, ki ga povzroči izhodna prostorska referenca.Ta parameter je aktiven le, če je <strong>vrsta parametra</strong><strong>lega neba</strong>.</p><ul><li>Neoznačeno - Geodetski azimuti ne bodo projicirani. To je privzeta vrednost.</li><li>Potrjeno - Projicirani bodo geodetski azimuti.</li></ul>",
	"@@Surface-Parameters_raster_tag0@@": "<p>Vhodni površinski raster. Lahko gre za celo število ali raster plavajoče vejice.</p>",
	"@@Surface-Parameters_useadaptiveneighborhood_tag0@@": "<p>Določa, ali se bo razdalja soseske spreminjala s spremembami pokrajine (prilagodljivo). Največja razdalja je določena z razdaljo soseske. Najmanjša razdalja je velikost celice vhodnega rastra.</p><ul><li>Neoznačeno – na vseh lokacijah bo uporabljena enotna (fiksna) razdalja soseske. To je privzeta vrednost.</li><li>Potrjeno – na vseh lokacijah bo uporabljena prilagodljiva velikost soseske.</li></ul>",
	"@@Surface-Parameters_useequatorialaspect_tag0@@": "<p>Določa, ali bo vidik merjen od točke na ekvatorju ali od severnega tečaja. Ta parameter je aktiven le, če je <strong>vrsta parametra</strong><strong>lega neba</strong>.</p><ul><li>Neoznačeno – Razmerje bo izmerjeno od severnega tečaja. To je privzeta vrednost.</li><li>Potrjeno – Razmerje bo izmerjeno od točke na ekvatorju.</li></ul>",
	"@@Surface-Parameters_zunit_tag0@@": "<p>Linearna enota vertikalnih vrednosti z.</p><p>Določena je z navpičnim koordinatnim sistemom, če ta obstaja. Če navpični koordinatni sistem ne obstaja, je treba z-enoto definirati s seznama enot, da se zagotovi pravilen geodetski izračun.</p><ul><li>Palec – linearna enota bo palec.</li><li>Čevelj – linearna enota bo čevelj.</li><li>Dvorišče – linearna enota bo jard.</li><li>Milja – linearna enota bodo milje.</li><li>Navtična milja - činearna enota bodo navtične milje.</li><li>Milimeter - linearna enota bodo milimetri.</li><li>Centimeter - linearna enota bodo centimetri.</li><li>Meter - linearna enota bodo metri. To je privzeta vrednost.</li><li>Kilometer - linearna enota bodo kilometri.</li><li>Decimeter - linearna enota bodo decimetri.</li></ul>",
	"@@Surface-Parameters_analysismask_tag0@@": "<p>Raster, ki določa lokacije, kjer se bo odvila analiza.</p><p>Raster je lahko celo število ali tip plavajoče vejice.</p><p>Vse celice z veljavno vrednostjo, vključno z nič, bodo sestavile masko. Celice, ki so brez podatkov v vnosu maske, bodo brez podatkov tudi v rezultatu.</p>",
	"@@Geometric-Median_cellsizetype_tag0@@": "<p>Izberite, katero velikost celice želite uporabiti v izhodnem rastru. Če so vse velikosti vhodnih celic enake, bodo vse možnosti ustvarile enake rezultate.</p><ul><li>Prva od--Uporabite prvo velikost celice vhodnih rastrov.</li><li>Najm. od--Uporabite najmanšo velikost celice vseh vhodnih rastrov.</li><li>Najv. od--Uporabite največjo velikost celice vseh vhodnih rastrov. To je privzeta vrednost.</li><li>Srednja vrednost od--Uporabite srednjo vrednost velikosti celice vseh vhodnih rastrov.</li><li>Zadnja od--Uporabite zadnjo velikost celice vseh vhodnih rastrov.</li></ul>",
	"@@Geometric-Median_epsilon_tag0@@": "<p>Določa vrednost konvergence med dvema zaporednima ponovitvama, Ko je episilon manjši ali enak navedeni vrednosti, se ponovitev ustavi, uporabi pa se rezultat zadnje ponovitve.</p>",
	"@@Geometric-Median_extenttype_tag0@@": "<p>Izberite obseg, ki bi moral biti uporabljen v izhodnem rastru:</p><ul><li><p>Prvi od -- Uporabite obseg prvega vhodnega rastra za določitev obsega obdelave.</p></li><li>Presek od -- Uporabite obseg prekrivajočih se pikslov za določitev obsega obdelave. To je privzeta vrednost.</li><li>Združitev--Uporabite obseg vseh rastrov za določitev obsega obdelave.</li><li>Zadnja od--Uporabite obseg zadnjega vhodnega rastra za določitev obsega obdelave.</li></ul>",
	"@@Geometric-Median_maximumnumberofiterations_tag0@@": "<p>Določa maksimalno število ponovitev za dokončanje. Izračun se zaključi, ko je vrednost dosežena, ne glede na <strong>nastavitev</strong>Epsilon.</p>",
	"@@Geometric-Median_rasters_tag0@@": "<p>Vhodni večpasovni rastri.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster1_tag0@@": "<p>Vhodni raster predstavlja akumulirano razdaljo stroškov od prvega vira.</p><p>Mora biti izhod akumulirane razdalje stroškov iz funkcij <strong>Akumulacija razdalje</strong> ali <strong>Dodelitev razdalje</strong>.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster2_tag0@@": "<p>Vhodni raster predstavlja akumulirano razdaljo stroškov od drugega vira.</p><p>Mora biti izhod akumulirane razdalje stroškov iz funkcij <strong>Akumulacija razdalje</strong> ali <strong>Dodelitev razdalje</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster1_tag0@@": "<p>Vhodni raster obratne smeri od prvega vira.</p><p>To je rastrski sklop podatkov, ki prepoznava smer naslednje celice vzdolž poti najmanjšega stroška nazaj k prvemu viru. Ta rezultat izhaja iz funkcije <strong>Akumulacija razdalje</strong> ali <strong>Dodelitev razdalje</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster2_tag0@@": "<p>Vhodni raster obratne smeri od drugega vira.<p></p>To je rastrski sklop podatkov, ki prepoznava smer naslednje celice vzdolž poti najmanjšega stroška nazaj k prvemu viru. Ta rezultat izhaja iz funkcije <strong>Akumulacija razdalje</strong> ali <strong>Dodelitev razdalje</strong>.</p>",
	"@@Least-Cost-Corridor_threshold_tag0@@": "<p>Odstotek ali prag akumuliranega stroška, ki bo določil, ali bo dana celica vključena v izhodni raster koridorja.</p><p>Kadar je parameter <strong>Metoda praga</strong> nastavljen na <strong>Odstotek najmanjšega stroška</strong>, navedena vrednost nakazuje povečanje odstotka, ki bo veljalo od minimalne vrednosti povzetih akumulativnih rastrov stroškov razdalje. Kadar je parameter <strong>Metoda praga</strong> nastavljen na <strong>Kumulativni strošek</strong>, vrednost nakazuje celice, ki imajo povzet komulativni strošek enak ali nižji od vrednosti, ki bo vključena v koridor.</p><p>Ta parameter je aktiven samo, če je parameter <strong>Metoda praga</strong> nastavljen na <strong>Odstotek najmanjšega stroška</strong> ali <strong>Kumulativni strošek</strong>.</p>",
	"@@Least-Cost-Corridor_thresholdmethod_tag0@@": "<p>Določi, kako bo prag opredeljen.<p></p><ul><li><strong></p>Brez praga</strong>-- Noben prag ne bo uporabljen in posledični koridor bo pokrival celoten obseg vhodnih rastrov. To je privzeta nastavitev.</li><li><strong>Odstotek najmanjšega stroška</strong>-- Prag bo določen kot odstotek minimalne vrednosti povzetih akumulativnih rastrov razdalje stroškov.</li><li><strong>Kumulativni strošek</strong>-- Prag bo določen v enotah akumulirane razdalje stroška.</li></ul>"
};
const helpTexts_sl = {
	rfxArgsHelpTexts: rfxArgsHelpTexts
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpTexts_sl);


//# sourceMappingURL=help-texts.sl-42ea0832.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,