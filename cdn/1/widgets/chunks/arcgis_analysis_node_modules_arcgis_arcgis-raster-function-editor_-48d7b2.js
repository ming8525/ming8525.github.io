"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-48d7b2"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-band-arithmetic-band-indexes-editor-2c58a432.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-band-arithmetic-band-indexes-editor-2c58a432.js ***!
  \****************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   R: () => (/* binding */ RfxBandArithmeticBandIndexesEditor)
/* harmony export */ });
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");
/* harmony import */ var _sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./sanitize-number-d84114f7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js");



















const HelpClickHandlerKeys = {
    bandindexesHelpClickHandler: "bandindexesHelpClickHandler"
};
/**
 * formats string such that the numbers in string are formatted
 * correctly based on locale. specifically uses "," as decimal seprators.
 */
const formatNumbersInStringToLocale = (str) => {
    const numberRegex = /(\d+(\.\d+)?)/g;
    // Replace each matched number with its formatted counterpart
    return str.replace(numberRegex, function (match) {
        return (0,_sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_17__.a)(parseFloat(match));
    });
};

const RfxBandArithmeticBandIndexesEditor = class {
    constructor(hostRef) {
        (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.rfxArgumentChange = (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "rfxArgumentChange", 7);
        /**
         * Stores event handlers for help action click, stored in connected callback to avoid
         * fetching function on each render ( to avoid common bad practice )
         */
        this.helpActionClickEventHandlers = new Map();
        this.placeholder = undefined;
        this.bandIndexEditorMessage = undefined;
        this.widgetArgs = undefined;
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    connectedCallback() {
        this.widgetArgs.triggerArgs?.Method.input.addEventListener("rfxArgumentChange", ({ detail: { value } }) => {
            this.handleMethodChange(value);
        });
    }
    async componentWillLoad() {
        ({ strings: this.strings, dir: this.direction } = await (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.hostElement, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.g)(`.`)));
        this.setInitialState();
    }
    componentDidLoad() {
        this.attachHelpClickEventHandlers();
    }
    setInitialState() {
        const bandIndexesRfxArgValue = this.widgetArgs.inputArgs?.BandIndexes.value;
        this.value = bandIndexesRfxArgValue;
        const methodRfxArgValue = this.widgetArgs.triggerArgs?.Method.value;
        this.handleMethodChange(methodRfxArgValue);
    }
    attachHelpClickEventHandlers() {
        const bandindexesHelpClickHandler = this.widgetArgs.onHelpActionClick({
            heading: this.widgetArgs?.inputArgs?.BandIndexes?.displayName,
            referenceElement: this.bandIndexsEditorContainer,
            helpTextID: this.widgetArgs.helpTextIDs?.bandarithmetic_bandindexes
        });
        this.helpActionClickEventHandlers.set(HelpClickHandlerKeys.bandindexesHelpClickHandler, bandindexesHelpClickHandler);
    }
    /**
     * Handles changes to the method value and sets the placeholder and bandIndexEditorMessage message.
     * @private
     * @param {any} method - The method value.
     */
    handleMethodChange(method) {
        let example = `${this.strings.example}: `;
        let iDetails = `${this.strings.input}: `;
        let oDetails = `${this.strings.output}: `;
        const optional = ` (${this.strings.optional})`;
        const newLine = "</br>";
        switch (parseInt(method)) {
            case 0: // user-defined
                example += "(B3 - B1) / (B3 + B1)";
                iDetails = "";
                oDetails = "";
                break;
            case 1: // NDVI
                example += "3 1";
                iDetails += "NIR Red";
                oDetails += "(NIR - Red) / (NIR + Red)";
                break;
            case 2: // SAVI
                example += "3 1 0.33";
                iDetails += "NIR Red L";
                oDetails += "((NIR - Red) / (NIR + Red + L)) * (1 + L)";
                break;
            case 3: // TSAVI
                example += "3 1 0.33 0.5 1.5";
                iDetails += "NIR Red s a X";
                oDetails += "(s * (NIR - s * Red - a)) / (a * NIR + Red - a * s + X * (1 + s * s))";
                break;
            case 4: // MSAVI
                example += "3 1";
                iDetails += "NIR Red";
                oDetails += "(2 * NIR + 1 - Sqrt((2 * NIR + 1) ^ 2 - 8 * (NIR - Red))) / 2";
                break;
            case 5: // GEMI
                example += "3 1";
                iDetails += "NIR Red";
                oDetails += "eta * (1 - 0.25 * eta) - ((Red - 0.125) / (1 - Red))";
                oDetails += newLine;
                oDetails += newLine;
                oDetails += " *eta = [2 * (NIR ^ 2 â€“ Red ^ 2) + 1.5 * NIR + 0.5 * Red] / (NIR + Red + 0.5)";
                break;
            case 6: // PVI
                example += "3 1 0.33 0.5";
                iDetails += "NIR Red a b";
                oDetails += "(NIR - a * Red - b) / (Sqrt(1 + a ^ 2))";
                break;
            case 7: // GVITM
                example += "1 2 3 4 5 7";
                iDetails += "TM1 TM2 TM3 TM4 TM5 TM7";
                iDetails += optional;
                oDetails +=
                    "-0.2848 * TM1 - 0.2435 * TM2 - 0.5436 * TM3 + 0.7243 * TM4 + 0.084 * TM5 - 0.18 * TM7";
                break;
            case 8: // Sultan's
                example += "1 3 4 5 6";
                iDetails += "Band1 Band3 Band4 Band5 Band6";
                iDetails += optional;
                oDetails += newLine;
                oDetails += " Band1 = (Band5 / Band6) * 100";
                oDetails += newLine;
                oDetails += " Band2 = (Band5 / Band1) * 100";
                oDetails += newLine;
                oDetails += " Band3 = (Band3 / Band4) * (Band5 / Band4) * 100";
                break;
            case 9: // VARI
                example += "3 2 1";
                iDetails += "Red Green Blue";
                oDetails += "(Green - Red) / (Green + Red - Blue)";
                break;
            case 10: // GNDVI
                example += "3 1";
                iDetails += "NIR Green";
                oDetails += "(NIR - Green) / (NIR + Green)";
                break;
            case 11: // SR
                example += "3 1";
                iDetails += "NIR Red";
                oDetails += "NIR / Red";
                break;
            case 12: // NDVIre
                example += "3 1";
                iDetails += "NIR RedEdge";
                oDetails += "(NIR - RedEdge) / (NIR + RedEdge)";
                break;
            case 13: // SRre
                example += "3 1";
                iDetails += "NIR RedEdge";
                oDetails += "NIR / RedEdge";
                break;
            case 14: // MTVI2
                example += "3 1 2";
                iDetails += "NIR Green Red";
                oDetails +=
                    "(1.5 * (1.2 * (NIR - Green) - 2.5 * (Red - Green) ) / Sqrt( (2 * NIR + 1) ^ 2 - (6 * NIR - 5 * Sqrt(Red) ) - 0.5 ) )";
                break;
            case 15: // RTVICore
                example += "3 2 1";
                iDetails += "NIR RedEdge Green";
                oDetails += "(100 * (NIR - RedEdge) - 10 * (NIR - Green))";
                break;
            case 16: // CIre
                example += "3 2";
                iDetails += "NIR RedEdge";
                oDetails += "(NIR / RedEdge) - 1.0";
                break;
            case 17: // CIg
                example += "3 1";
                iDetails += "NIR Green";
                oDetails += "(NIR / Green) - 1.0";
                break;
            case 18: // NDWI
                example += "3 1";
                iDetails += "NIR Green";
                oDetails += "(Green - NIR) / (Green + NIR)";
                break;
            case 19: // EVI
                example += "3 2 1";
                iDetails += "NIR Red Blue";
                oDetails += "2.5 * [(NIR - Red)/ (NIR + (6 * Red) - (7.5 * Blue) + 1.0)]";
                break;
            case 20: // IronOxide
                example += "3 1";
                iDetails += "Red Blue";
                oDetails += "Red / Blue";
                break;
            case 21: // FerrousMinerals
                example += "3 1";
                iDetails += "SWIR NIR";
                oDetails += "SWIR / NIR";
                break;
            case 22: // ClayMinerals
                example += "3 1";
                iDetails += "SWIR1 SWIR2";
                oDetails += "SWIR1 / SWIR2";
                break;
            case 23: // WNDWI
                example += "3 2 1";
                iDetails += "Green NIR SWIR";
                oDetails += "[Green â€“ Î± * NIR â€“ (1 â€“ Î±) * SWIR ] / [Green + Î± * NIR + (1 â€“ Î±) * SWIR]";
                break;
            case 24: // BAI
                example += "3 1";
                iDetails += "Red NIR";
                oDetails += "1/((0.1 -RED)^2 + (0.06 - NIR)^2)";
                break;
            case 25: // NBR
                example += "3 1";
                iDetails += "NIR SWIR";
                oDetails += "(NIR - SWIR) / (NIR + SWIR)";
                break;
            case 26: // NDBI
                example += "3 1";
                iDetails += "SWIR NIR";
                oDetails += "(SWIR - NIR) / (SWIR + NIR)";
                break;
            case 27: // NDMI
                example += "3 1";
                iDetails += "NIR SWIR1";
                oDetails += "(NIR - SWIR1) / (NIR + SWIR1)";
                break;
            case 28: // NDSI
                example += "3 1";
                iDetails += "Green SWIR";
                oDetails += "(Green - SWIR) / (Green + SWIR)";
                break;
            case 29: // MNDWI
                example += "3 1";
                iDetails += "Green SWIR";
                oDetails += "(Green - SWIR) / (Green + SWIR)";
                break;
        }
        this.placeholder = example;
        let bandIndexEditorMessage;
        try {
            const formattedString = formatNumbersInStringToLocale(iDetails + newLine + oDetails);
            bandIndexEditorMessage = formattedString;
        }
        catch {
            bandIndexEditorMessage = iDetails + newLine + oDetails;
        }
        this.bandIndexEditorMessage = bandIndexEditorMessage;
    }
    render() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { alignment: "start", scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_3__.U.Scale, layout: "default", ref: (e) => {
                this.bandIndexsEditorContainer = e;
            } }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-label", { label: this.widgetArgs.inputArgs.BandIndexes.displayName, onRfxLabelHelpActionClick: () => this.helpActionClickEventHandlers?.get(HelpClickHandlerKeys.bandindexesHelpClickHandler)() }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { type: "text", ref: (input) => {
                // Automatically handles value setting
                this.widgetArgs.inputArgs.BandIndexes.input = input;
            }, scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_3__.U.Scale, placeholder: this.placeholder, value: this.value }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { status: _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_4__.U.IDLE, icon: true, "icon-flip-rtl": this.direction === "rtl", ref: (e) => {
                // TODO: bug the html doesn't render as HTML but as plain string so <br> doesn't work.
                e.innerHTML = this.bandIndexEditorMessage;
            } }))));
    }
    static get assetsDirs() { return ["t9n"]; }
    get hostElement() { return (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.a)(this); }
};



//# sourceMappingURL=rfx-cte-band-arithmetic-band-indexes-editor-2c58a432.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-band-arithmetic-band-indexes-editor.entry.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-band-arithmetic-band-indexes-editor.entry.js ***!
  \*************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   rfx_cte_band_arithmetic_band_indexes_editor: () => (/* reexport safe */ _rfx_cte_band_arithmetic_band_indexes_editor_2c58a432_js__WEBPACK_IMPORTED_MODULE_0__.R)
/* harmony export */ });
/* harmony import */ var _rfx_cte_band_arithmetic_band_indexes_editor_2c58a432_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rfx-cte-band-arithmetic-band-indexes-editor-2c58a432.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-band-arithmetic-band-indexes-editor-2c58a432.js");
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");
/* harmony import */ var _sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./sanitize-number-d84114f7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _getTag_96af029d_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./_getTag-96af029d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/_getTag-96af029d.js");






















//# sourceMappingURL=rfx-cte-band-arithmetic-band-indexes-editor.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js":
/*!************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ formatNumberToLocale),
/* harmony export */   f: () => (/* binding */ formatNumber),
/* harmony export */   i: () => (/* binding */ isValidNumber),
/* harmony export */   p: () => (/* binding */ parseNumber),
/* harmony export */   s: () => (/* binding */ sanitizeNumber)
/* harmony export */ });
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");



/**
 * Indicates if a provided number value is valid.
 * An invalid value is: undefined | NaN | Infinite | -Infinite | null
 * See for more details:
 *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite
 *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN
 * @param {number | undefined | null} value value to check
 * @returns {boolean} if valid or not
 */
function isValidNumber(value) {
    return value !== undefined && value !== null && Number.isNaN(value) === false && Number.isFinite(value) === true;
}
/**
 * Returns a string representation of the provided number for use with calcite-input. It also
 * guards against invalid types following this logic:
 *   - If the value is valid (not NaN, finite), the value is returned as a string
 *   - If not and if a valid default value is provided, the default value is returned as a string
 *   - If not, an empty string is returned
 * @param value
 * @param defaultValue
 * @returns a sanitized string
 */
function sanitizeNumber(value, defaultValue) {
    let returnedValue;
    if (value !== null) {
        const testedValue = typeof value === "string" ? Number.parseFloat(value) : value;
        if (isValidNumber(testedValue))
            returnedValue = testedValue;
        else if (isValidNumber(defaultValue))
            returnedValue = defaultValue;
    }
    return returnedValue === undefined ? "" : `${returnedValue}`;
}
/**
 * Parses a value string to a number for use with calcite-input. If the string is empty, it will return undefined.
 * If the string is otherwise invalid, it will return NaN.
 * @param value calcite-input value
 * @returns {number | undefined} the parsed number
 */
function parseNumber(value) {
    if (value === "")
        return undefined;
    return Number.parseFloat(value);
}
/**
 * Formats a number to a specified number of decimal places.
 *
 * @param {number} value - The number to format.
 * @param {number} [fractionDigits=3] - The number of decimal places to include in the formatted number. Defaults to 3.
 * @returns {number|undefined} - The formatted number, or undefined if the input value is empty.
 */
function formatNumber(value, fractionDigits = 3) {
    if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__.i)(value))
        return undefined;
    return Number.parseFloat(value.toFixed(fractionDigits));
}
/**
 * Formats a number or string representing a number according to the locale, passing Intl number format options
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/ReferenceGlobal_Objects/Intl/NumberFormat/NumberFormat#options
 * @param {number | string | undefined} value to be formatted and localized
 * @param {Intl.NumberFormatOptions} formatOptions options object matching Intl.NumberFormat
 * @returns {string} localized / rounded string
 */
function formatNumberToLocale(value, formatOptions) {
    let formattedValue = "";
    if (!(0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__.i)(value) && !Number.isNaN(value)) {
        const localeCode = (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.g)().locale;
        formattedValue = Intl.NumberFormat(localeCode, formatOptions).format(Number(value));
    }
    return formattedValue;
}



//# sourceMappingURL=sanitize-number-d84114f7.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js":
/*!*****************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CalciteScale),
/* harmony export */   U: () => (/* binding */ UIDefaults),
/* harmony export */   a: () => (/* binding */ CalciteOverlayPositioning)
/* harmony export */ });
const UIDefaults = {
    Scale: "s",
    PopoverTimer: 60
};
const CalciteScale = {
    s: "s",
    m: "m"
};
const CalciteOverlayPositioning = {
    absolute: "absolute",
    fixed: "fixed"
};



//# sourceMappingURL=ui-utils-928a4096.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,