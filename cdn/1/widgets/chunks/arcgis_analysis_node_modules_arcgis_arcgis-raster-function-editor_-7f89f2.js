"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-7f89f2"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.et-1f7a3991.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.et-1f7a3991.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   rfxArgsHelpTexts: () => (/* binding */ rfxArgsHelpTexts)
/* harmony export */ });
const rfxArgsHelpTexts = {
	"@@Abs_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Abs_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Abs_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Abs_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Abs_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Abs_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Abs_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Abs_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Abs_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Abs_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Abs_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Abs_Raster_tag0@@": "Sisendraster, mille puhul arvutatakse absoluutväärtused.",
	"@@ACos_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@ACos_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@ACos_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@ACos_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@ACos_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@ACos_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@ACos_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@ACos_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@ACos_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@ACos_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@ACos_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@ACos_Raster_tag0@@": "Sisend, mille puhul arvutatakse arkuskoosinuse väärtused.",
	"@@ACosH_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@ACosH_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@ACosH_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@ACosH_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@ACosH_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@ACosH_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@ACosH_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@ACosH_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@ACosH_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@ACosH_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@ACosH_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@ACosH_Raster_tag0@@": "Sisend, mille puhul arvutatakse hüperboolse arkuskoosinuse väärtused.",
	"@@Apparent-Reflectance_Albedo_tag0@@": "Näiva peegelduse funktsiooni tulemusi saab väljendada ka albeedo kujul, mis on planeedi pinnalt peegelduva saadaoleva energia protsent. Albeedo andmeid kasutavad teadlased keeruka modelleerimise ja tehniliste kaugseirerakenduste jaoks.",
	"@@Apparent-Reflectance_Albedo_tag1@@": "Märgistamata--funktsioon tagastab näiva peegeldusvõime väärtused. See on vaikimisi valik.",
	"@@Apparent-Reflectance_Albedo_tag2@@": "Märgitud--funktsioon tagastab 32-bitised ujukomaväärtused, mis on kõige sagedamini vahemikus 0,0 kuni 1,0. Kui see suvand on valitud, siis andmekärpimist ei tehta.",
	"@@Apparent-Reflectance_Albedo_tag3@@": "Kuna väljundandmete tüüp on albeedo puhul ujuvpunkt, peate selgelt seadma eelistatud<strong>väljundpikslite tüübiks</strong> kas 32-bitise ujuvpunkti või 64-bitise kaksikpunkti. <strong>Väljundpikslite tüübi</strong> parameetri leiate rastrifunktsiooni <strong>näiv peegeldavus</strong> vahekaardil <strong>Üldteave</strong>. Kui <strong>väljundpiksli tüüp</strong> ei ole suvandi <strong>Albeedo</strong> puhul õigesti seatud, on tulenevad väärtused kehtetud ja nendele on antud väärtus 0.",
	"@@Apparent-Reflectance_Offset_tag0@@": "Teie skaleeritud albeedo väärtus võib valikuliselt olla nihkega:",
	"@@Apparent-Reflectance_Offset_tag1@@": "16-bitiste allkirjastamata andmetüüpide puhul on vaikeskaala nihe 5000.",
	"@@Apparent-Reflectance_Offset_tag2@@": "8-bitiste allkirjastamata andmetüüpide puhul on vaikeskaala nihe 0.",
	"@@Apparent-Reflectance_Offset_tag3@@": "Kui väljund on albeedo, siis skaleerimist ei rakendata.",
	"@@Apparent-Reflectance_Radiance-Gains-and-Bias-Values-per-Band_tag0@@": "Selle väärtuse saate iga riba jaoks käsitsi seada või redigeerida. Asjakohast teavet saab lugeda sisendrastritoote metaandmetest.",
	"@@Apparent-Reflectance_Raster_tag0@@": "Rastertoode, millele ilmset peegeldust rakendatakse.",
	"@@Apparent-Reflectance_Scale-Factor_tag0@@": "Teie näiva peegeldavuse väljundi väärtus võib olla väljendatud täisarvuna. Mõõtkavategur korrutatakse albeedoga, et teisendada kõik ujukoma väärtused täisarvudeks.",
	"@@Apparent-Reflectance_Scale-Factor_tag1@@": "Kui mõõtkavategur on kas ${0} või pole täpsustatud, rakendatakse vaikemõõtkava sõltuvalt sisendandmete pikslitüübist:",
	"@@Apparent-Reflectance_Scale-Factor_tag2@@": "16-bitiste allkirjastamata andmetüüpide puhul on vaikimisi mõõtkavategur 50 000.",
	"@@Apparent-Reflectance_Scale-Factor_tag3@@": "8-bitiste allkirjastamata andmetüüpide puhul on vaikimisi mõõtkavategur 255.",
	"@@Apparent-Reflectance_Scale-Factor_tag4@@": "Kui väljund on nähtav peegeldus, rakendatakse mõõtkavategurit alati. Kui väljund on albeedo, siis skaleerimist ei rakendata.",
	"@@Apparent-Reflectance_Sun-Elevation_tag0@@": "See on päikese kõrguse väärtus, väljendatuna kraadides. Selle täidab süsteem, kui metaandmetest saab lugeda asjakohast teavet. Selle väärtuse saate käsitsi seada või redigeerida.",
	"@@ArgStatistics_Max_tag0@@": "Seatud maksimumväärtus on kõrgeim väärtus, mis on kestuse algusega võrdne või sellest väiksem.",
	"@@ArgStatistics_Max_tag1@@": "See sisend on rakendatav ainult juhul, kui meetod on Kestus.",
	"@@ArgStatistics_Method_tag0@@": "Valige arvutamiseks statistikameetod:",
	"@@ArgStatistics_Method_tag1@@": "Arg Max--maksimumi argument, mis tagastab ${Band index}, mille puhul antud piksel saavutab oma miinimumväärtuse kõigist ribadest. Iga sisendrastri kõikidele rasterribadele määratakse 0-põhine astmeliste ribade indeks, mis on esmalt tellitud sisendrastri indeksiga ja seejärel suhtelise ribade järjestusega igas sisendrastris.",
	"@@ArgStatistics_Method_tag2@@": "Arg Median--mediaani argument, mis tagastab ${Band index}, mille puhul antud piksel saavutab kõigi ribade väärtuste mediaanväärtuse.",
	"@@ArgStatistics_Method_tag3@@": "Arg Min--miinimumi argument, mis tagastab ${Band index}, mille puhul antud piksel saavutab oma miinimumväärtuse kõigist ribadest.",
	"@@ArgStatistics_Method_tag4@@": "Kestus -- Kestuse meetod leiab pikimad järjestikused elemendid jadas, kus kõigi elementide väärtus on suurem või võrdne kui <strong>Min</strong> ja väiksem või võrdne kui <strong>Max</strong>, ja tagastab siis pikkuse.",
	"@@ArgStatistics_Min_tag0@@": "Seatud miinimumväärtus on madalaim väärtus, mis on kestuse algusega võrdne või sellest suurem.",
	"@@ArgStatistics_Min_tag1@@": "See sisend on rakendatav ainult juhul, kui meetod on Kestus.",
	"@@ArgStatistics_Rasters_tag0@@": "Sisendraster, mille puhul sooritate erinevaid statistilisi meetodeid.",
	"@@ArgStatistics_Undefined-Class_tag0@@": "Konstantne sisend, mis tagastatakse, kui ei saavutata lõplikku maksimaalset, minimaalset või mediaanväärtust. Kõige levinum stsenaarium on see, kui maksimum- või miinimumväärtus esineb enam kui üks kord kõigi ribade väärtuste seas. Määratlemata konstandi vaikeväärtus on 100.",
	"@@ArgStatistics_Undefined-Class_tag1@@": "Määratlemata klassi kohaldatakse ainult juhul, kui meetod on <strong>ArgMax</strong>, <strong>ArgMin</strong> või <strong>ArgMedian</strong>.",
	"@@ArgStatistics_ignorenodata_tag0@@": "Näitab, kas statistilises arvutuses ignoreeritakse NoData väärtusi.",
	"@@ArgStatistics_ignorenodata_tag1@@": "Märgitud--Analüüs hõlmab kõiki sisendrastrites olevaid kehtivaid piksleid ja ignoreerib kõiki NoData piksleid.",
	"@@ArgStatistics_ignorenodata_tag2@@": "Märkimata--Analüüs annab tulemuseks NoData, kui sisendrastrites pole pikslite jaoks NoData väärtusi. See on vaikevalik.",
	"@@Arithmetic_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus.  Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Arithmetic_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Arithmetic_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Arithmetic_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Arithmetic_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist piksli suurust.",
	"@@Arithmetic_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Arithmetic_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Arithmetic_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Arithmetic_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Arithmetic_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Arithmetic_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Arithmetic_Operation_tag0@@": "Kahe sisendrastri vahel teostatav aritmeetiline toiming.",
	"@@Arithmetic_Operation_tag1@@": "Valikud on järgmised:",
	"@@Arithmetic_Operation_tag2@@": "<strong>Jagamine</strong>--Väljastab jagatava tulemuse iga rastri vastavate piksliväärtuste vahel.",
	"@@Arithmetic_Operation_tag4@@": "<strong>Miinus</strong>--Väljastab erinevuse iga rastri vastavate piksliväärtuste vahel. Seda saab kasutada muutuste tuvastamise arvutamiseks.",
	"@@Arithmetic_Operation_tag6@@": "<strong>Režiim</strong>--Väljastab kõigi kattuvate pikslite piksliväärtuse, mis esineb kõige rohkem. Näiteks kui rastris on kuus riba, siis on kuus kattuvat pikslit. Väärtuste 4, 5, 6, 4, 7, 9 puhul on režiimi väärtus 4.",
	"@@Arithmetic_Operation_tag8@@": "<strong>Korrutamine</strong>--Väljastab iga rastri vastavate piksliväärtuste korrutise. Seda saab kasutada mõne kulufunktsiooni täitmiseks.",
	"@@Arithmetic_Operation_tag10@@": "<strong>Liitmine</strong>--Väljastab iga rastri vastavate piksliväärtuste summa.",
	"@@Arithmetic_Operation_tag12@@": "<strong>Aste</strong>--Väljastab sisendrastri või skalaari võimsusele astendatud vastavate piksliväärtuste korrutise.",
	"@@Arithmetic_Raster_tag0@@": "Esimene sisendrasterandmestik.",
	"@@Arithmetic_Raster2_tag0@@": "Teine sisendrasterandmestik.",
	"@@ASin_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@ASin_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@ASin_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@ASin_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@ASin_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@ASin_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@ASin_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@ASin_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@ASin_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@ASin_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@ASin_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@ASin_Raster_tag0@@": "Sisend, mille jaoks arvutatakse arkussiinuse väärtused.",
	"@@ASinH_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@ASinH_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@ASinH_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@ASinH_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@ASinH_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@ASinH_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@ASinH_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@ASinH_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@ASinH_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@ASinH_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@ASinH_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@ASinH_Raster_tag0@@": "Sisend, mille jaoks arvutatakse hüperboolse arkussiinuse väärtused.",
	"@@Aspect_Raster_tag0@@": "Sisend-DEM, mida kasutatakse aspektide andmestiku tuletamiseks.",
	"@@Aspect-Slope_Raster_tag0@@": "Sisend-DEM.",
	"@@Aspect-Slope_Z-Factor_tag0@@": "Suurendustegur, mida kasutatakse kõrguse väärtuse teisendamiseks. Seda kasutatakse järgmisel otstarbel:",
	"@@Aspect-Slope_Z-Factor_tag1@@": "kõrgusühikute (meetrid või jalad) teisendamine andmestiku horisontaalsete koordinaatide ühikuteks, mis võivad olla jalad, meetrid või kraadid",
	"@@Aspect-Slope_Z-Factor_tag2@@": "visuaalse efektina vertikaalse liialduse lisamiseks",
	"@@ATan_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@ATan_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@ATan_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@ATan_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@ATan_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist piksli suurust.",
	"@@ATan_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@ATan_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@ATan_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@ATan_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@ATan_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@ATan_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@ATan_Raster_tag0@@": "Sisend, mille puhul arvutatakse arkustangensi väärtused.",
	"@@ATan2_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@ATan2_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@ATan2_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@ATan2_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@ATan2_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@ATan2_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@ATan2_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@ATan2_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@ATan2_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@ATan2_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@ATan2_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@ATan2_Raster_tag0@@": "Sisend, mis täpsustab lugeja või y väärtuse, mida kasutatakse arkustangensi arvutamisel.",
	"@@ATan2_Raster2_tag0@@": "Sisend, mis täpsustab nimetaja või x väärtuse, mida kasutatakse arkustangensi arvutamisel.",
	"@@ATanH_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@ATanH_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@ATanH_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@ATanH_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@ATanH_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@ATanH_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@ATanH_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@ATanH_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@ATanH_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@ATanH_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@ATanH_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@ATanH_Raster_tag0@@": "Sisend, mille puhul arvutatakse hüperboolse arkustangensi väärtused.",
	"@@Attribute-Table_Raster_tag0@@": "Sisendraster.",
	"@@Attribute-Table_Table-Type_tag0@@": "Sisendatribuutide tabeli saab sisestada tüübi <strong>Käsitsi</strong> abil, kus igale väärtusele määratakse klassi nimi ja värv, või saate viidata olemasolevale tabelile, mis pärineb ${.dbf} failist.",
	"@@Band-Arithmetic_Band-Indexes_tag0@@": "Määratlege oma riba aritmeetiline valem, kui valite <strong>meetodiks</strong> <strong>kasutaja määratletud </strong>.",
	"@@Band-Arithmetic_Band-Indexes_tag5@@": "Kui valite oma <strong>meetodi</strong> jaoks eelmääratletud indeksi, määratlege oma sisendrasterandmestiku jaoks õiged ribad, mis vastavad indeksile.",
	"@@Band-Arithmetic_Method_tag0@@": "Lainepikkuse aritmeetika algoritmi tüüp, mida soovite juurutada. Saate määratleda oma kohandatud algoritmi või valida eelmääratletud registri.",
	"@@Band-Arithmetic_Method_tag1@@": "<strong>BAI</strong>--Põlenud ala indeks",
	"@@Band-Arithmetic_Method_tag2@@": "<strong>CIg</strong>--Klorofülli indeks – roheline",
	"@@Band-Arithmetic_Method_tag3@@": "<strong>CIre</strong>--Klorofülli indeks – punane serv",
	"@@Band-Arithmetic_Method_tag4@@": "<strong>Savimineraalid</strong>--Savimineraalide suhe",
	"@@Band-Arithmetic_Method_tag5@@": "<strong>EVI</strong>--Täiustatud taimkatteindeks",
	"@@Band-Arithmetic_Method_tag6@@": "<strong>Raudmineraalid</strong>--Raudmineraalide suhe",
	"@@Band-Arithmetic_Method_tag7@@": "<strong>GEMI</strong>--Ülemaailmne keskkonnaseire indeks",
	"@@Band-Arithmetic_Method_tag8@@": "<strong>GNDVI</strong>--Rohelise taimkatte normaliseeritud vaheindeks",
	"@@Band-Arithmetic_Method_tag9@@": "<strong>GVI (Landsat TM)</strong>--Rohelise taimkatte indeks Landsat TM",
	"@@Band-Arithmetic_Method_tag10@@": "<strong>Raudoksiid</strong>--Raudoksiidide suhe",
	"@@Band-Arithmetic_Method_tag11@@": "<strong>MNDWI</strong>--Vee muudetud normaliseeritud vaheindeks",
	"@@Band-Arithmetic_Method_tag12@@": "<strong>MTVI2</strong>--Muudetud trianguleeritud vegetatsiooniindeks (teine iteratsioon)",
	"@@Band-Arithmetic_Method_tag13@@": "<strong>Muudetud SAVI</strong>--Muudetud pinnase omadustest lähtuv vegetatsiooniindeks",
	"@@Band-Arithmetic_Method_tag14@@": "<strong>NBR</strong>--Normaliseeritud põlemissuhte indeks",
	"@@Band-Arithmetic_Method_tag15@@": "<strong>NDBI</strong>--Ehitiste normaliseeritud vaheindeks",
	"@@Band-Arithmetic_Method_tag16@@": "<strong>NDMI</strong>--Niiskuse normaliseeritud vaheindeks",
	"@@Band-Arithmetic_Method_tag17@@": "<strong>NDSI</strong>--Lume normaliseeritud vaheindeks",
	"@@Band-Arithmetic_Method_tag18@@": "<strong>NDVI</strong>--Taimkatte normaliseeritud vaheindeks",
	"@@Band-Arithmetic_Method_tag19@@": "<strong>NDVIre</strong>--Punase servaga taimkatte normaliseeritud vaheindeks",
	"@@Band-Arithmetic_Method_tag20@@": "<strong>NDWI</strong>--Vee normaliseeritud vaheindeks",
	"@@Band-Arithmetic_Method_tag21@@": "<strong>PVI</strong>--Ristsuunaline vegetatsiooniindeks",
	"@@Band-Arithmetic_Method_tag22@@": "<strong>RTVICore</strong>--Punase servaga trianguleeritud vegetatsiooniindeks",
	"@@Band-Arithmetic_Method_tag23@@": "<strong>SAVI</strong>--Pinnase omadustest lähtuv vegetatsiooniindeks",
	"@@Band-Arithmetic_Method_tag24@@": "<strong>SR</strong>--Lihtne suhteindeks",
	"@@Band-Arithmetic_Method_tag25@@": "<strong>SRre</strong>--Punase servaga lihtne suhteindeks",
	"@@Band-Arithmetic_Method_tag26@@": "<strong>Sultani valem</strong>--Sultani valem",
	"@@Band-Arithmetic_Method_tag27@@": "<strong>Teisendatud SAVI</strong>--Teisendatud pinnase omadustest lähtuv vegetatsiooniindeks",
	"@@Band-Arithmetic_Method_tag28@@": "<strong>Kasutaja määratletud</strong>--Saate määratleda kohandatud spektraalriba aritmeetika avaldise.",
	"@@Band-Arithmetic_Method_tag29@@": "<strong>VARI</strong>--Nähtav atmosfääriresistentsuse indeks",
	"@@Band-Arithmetic_Method_tag30@@": "<strong>WNDWI</strong>--Vee kaalutud normaliseeritud vaheindeks",
	"@@Band-Arithmetic_Raster_tag0@@": "Sisendraster.",
	"@@Binary-Thresholding_Raster_tag0@@": "Sisendraster.",
	"@@Bitwise-And_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Bitwise-And_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Bitwise-And_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Bitwise-And_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Bitwise-And_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Bitwise-And_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Bitwise-And_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Bitwise-And_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Bitwise-And_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Bitwise-And_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Bitwise-And_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Bitwise-And_Raster_tag0@@": "Esimene sisend, mida selles bitwise-operatsioonis kasutatakse.",
	"@@Bitwise-And_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Bitwise-And_Raster2_tag0@@": "Teine sisend, mida selles bitwise-operatsioonis kasutatakse.",
	"@@Bitwise-And_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Bitwise-Left-Shift_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Bitwise-Left-Shift_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Bitwise-Left-Shift_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Bitwise-Left-Shift_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Bitwise-Left-Shift_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Bitwise-Left-Shift_Raster_tag0@@": "Sisend, mille abil vahetust teostada.",
	"@@Bitwise-Left-Shift_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Bitwise-Left-Shift_Raster2_tag0@@": "Sisend, mis määratleb bittide nihutamise positsioonide arvu.",
	"@@Bitwise-Left-Shift_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Bitwise-Not_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Bitwise-Not_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Bitwise-Not_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Bitwise-Not_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Bitwise-Not_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Bitwise-Not_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Bitwise-Not_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Bitwise-Not_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Bitwise-Not_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Bitwise-Not_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Bitwise-Not_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Bitwise-Not_Raster_tag0@@": "Sisendraster, millel sooritada operatsioon Bitwise Not (täiendus).",
	"@@Bitwise-Or_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav piksli suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Bitwise-Or_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Bitwise-Or_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Bitwise-Or_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Bitwise-Or_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Bitwise-Or_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Bitwise-Or_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Bitwise-Or_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Bitwise-Or_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Bitwise-Or_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Bitwise-Or_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Bitwise-Or_Raster_tag0@@": "Esimene sisend, mida selles bitwise-operatsioonis kasutatakse.",
	"@@Bitwise-Or_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Bitwise-Or_Raster2_tag0@@": "Teine sisend, mida selles bitwise-operatsioonis kasutatakse.",
	"@@Bitwise-Or_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Bitwise-Right-Shift_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Bitwise-Right-Shift_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Bitwise-Right-Shift_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Bitwise-Right-Shift_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Bitwise-Right-Shift_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Bitwise-Right-Shift_Raster_tag0@@": "Sisend, mille abil vahetust teostada.",
	"@@Bitwise-Right-Shift_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Bitwise-Right-Shift_Raster2_tag0@@": "Sisend, mis määratleb bittide nihutamise positsioonide arvu.",
	"@@Bitwise-Right-Shift_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Bitwise-Xor_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Bitwise-Xor_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Bitwise-Xor_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Bitwise-Xor_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Bitwise-Xor_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Bitwise-Xor_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Bitwise-Xor_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Bitwise-Xor_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Bitwise-Xor_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Bitwise-Xor_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Bitwise-Xor_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Bitwise-Xor_Raster_tag0@@": "Esimene sisend, mida selles bitwise-operatsioonis kasutatakse.",
	"@@Bitwise-Xor_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Bitwise-Xor_Raster2_tag0@@": "Teine sisend, mida selles bitwise-operatsioonis kasutatakse.",
	"@@Bitwise-Xor_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Boolean-and_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Boolean-and_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Boolean-and_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Boolean-and_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Boolean-and_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Boolean-and_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Boolean-and_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Boolean-and_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Boolean-and_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Boolean-and_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Boolean-and_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Boolean-and_Raster_tag0@@": "Esimene sisend, mida kasutatakse selles loogikatehtes.",
	"@@Boolean-and_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Boolean-and_Raster2_tag0@@": "Teine sisend, mida kasutatakse selles loogikatehtes.",
	"@@Boolean-and_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Boolean-Not_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Boolean-Not_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Boolean-Not_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Boolean-Not_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Boolean-Not_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Boolean-Not_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Boolean-Not_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Boolean-Not_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Boolean-Not_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Boolean-Not_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Boolean-Not_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Boolean-Not_Raster_tag0@@": "Esimene sisend, mida kasutatakse selles loogikatehtes.",
	"@@Boolean-Or_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Boolean-Or_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Boolean-Or_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Boolean-Or_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Boolean-Or_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Boolean-Or_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat piksli suurust.",
	"@@Boolean-Or_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Boolean-Or_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Boolean-Or_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Boolean-Or_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Boolean-Or_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Boolean-Or_Raster_tag0@@": "Esimene sisend, mida kasutatakse selles loogikatehtes.",
	"@@Boolean-Or_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Boolean-Or_Raster2_tag0@@": "Teine sisend, mida kasutatakse selles loogikatehtes.",
	"@@Boolean-Or_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Boolean-Xor_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Boolean-Xor_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Boolean-Xor_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Boolean-Xor_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Boolean-Xor_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Boolean-Xor_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Boolean-Xor_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Boolean-Xor_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Boolean-Xor_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Boolean-Xor_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Boolean-Xor_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Boolean-Xor_Raster_tag0@@": "Esimene sisend, mida kasutatakse selles loogikatehtes.",
	"@@Boolean-Xor_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Boolean-Xor_Raster2_tag0@@": "Teine sisend, mida kasutatakse selles loogikatehtes.",
	"@@Boolean-Xor_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Buffered_Raster_tag0@@": "Mällu salvestatav sisendraster.",
	"@@Calculator_Cellsize-Type_tag0@@": "Väljundrastri loomiseks kasutatud lahtri suurus.",
	"@@Calculator_Cellsize-Type_tag1@@": "Väljundlahtri suuruse saate valida ripploendi järgmiste suvandite seast.",
	"@@Calculator_Cellsize-Type_tag2@@": "<strong>Esimene</strong>--Esimese rastri muutuja lahtri suurus.",
	"@@Calculator_Cellsize-Type_tag4@@": "<strong>Minimaalne</strong>--Sisendrastrite minimaalne lahtri suurus.",
	"@@Calculator_Cellsize-Type_tag6@@": "<strong>Maksimaalne</strong>--Sisendrastrite maksimaalne lahtri suurus.",
	"@@Calculator_Cellsize-Type_tag8@@": "<strong>Keskmine</strong>--Sisendrastrite keskmine lahtri suurus.",
	"@@Calculator_Cellsize-Type_tag10@@": "<strong>Viimane</strong>--Viimase rastri muutuja lahtri suurus.",
	"@@Calculator_Cellsize-Type_tag12@@": "Vaikeväärtus on <strong>Maksimaalne</strong>.",
	"@@Calculator_Expression_tag0@@": "Sisendrastri ruumilise analüüsi tegemiseks koostage algebraline avaldis.",
	"@@Calculator_Expression_tag1@@": "Kõiki olemasolevaid matemaatikafunktsioone saab avaldise loomiseks kutsuda. Saadaolevad tehtemärgid on loetletud allpool.",
	"@@Calculator_Expression_tag2@@": "Aritmeetilised tehtemärgid",
	"@@Calculator_Expression_tag3@@": "Liitmine: +",
	"@@Calculator_Expression_tag4@@": "Allüksus: /",
	"@@Calculator_Expression_tag5@@": "Moodul: %",
	"@@Calculator_Expression_tag6@@": "Korrutamine: *",
	"@@Calculator_Expression_tag7@@": "Astendamine: **",
	"@@Calculator_Expression_tag8@@": "Lahutamine: -",
	"@@Calculator_Expression_tag9@@": "Loogikatehted",
	"@@Calculator_Expression_tag10@@": "Boolean And: &&",
	"@@Calculator_Expression_tag11@@": "Boolean Or: ||",
	"@@Calculator_Expression_tag12@@": "Relatsoontehtemärgid",
	"@@Calculator_Expression_tag13@@": "Võrdne: ==",
	"@@Calculator_Expression_tag14@@": "Suurem kui: >",
	"@@Calculator_Expression_tag15@@": "Suurem või võrdne: >=",
	"@@Calculator_Expression_tag16@@": "Väiksem kui: <",
	"@@Calculator_Expression_tag17@@": "Väiksem või võrdne: <=",
	"@@Calculator_Expression_tag18@@": "Pole võrdne: !=",
	"@@Calculator_Expression_tag19@@": "Lisatehted",
	"@@Calculator_Expression_tag20@@": "Minimaalselt kaks rastrit piksli kohta: min (a,b)",
	"@@Calculator_Expression_tag21@@": "Maksimaalselt kaks rastrit piksli kohta: max (a,b)",
	"@@Calculator_Expression_tag22@@": "Siin on mõned näited avaldiste kohta:",
	"@@Calculator_Expression_tag23@@": "Lihtne tingimuslause: rastris (tähistatud tähisega T) leitakse kõrguseväärtused üle 4000 jala ja antakse nendele aladele väärtus 1 ja kõigile teistele aladele väärtus 0.",
	"@@Calculator_Expression_tag24@@": "Con(T > 4000, 1, 0)",
	"@@Calculator_Expression_tag25@@": "Pesastatud tingimuslause: leidke alad, kus kalle (tähisega b1) on alla 10 kraadi ja NDVI (tähisega b2) on suurem kui 0,5, ja andke neile pindaladele väärtus 1. Kõigile teistele aladele määrake väärtus 2, kui kalle on üle 10 kraadi ja kõrgus (tähisega b3) on üle 2500 jala. Kõigile teistele aladele määratakse väärtus 3.",
	"@@Calculator_Expression_tag26@@": "Con((b1 < 10 && b2 > .5, 1, Con(b1 > 10 && b3 > 2500, 2, 3)))",
	"@@Calculator_extenttype_tag0@@": "<p>Valige, millist ulatust tuleb väljundrastris kasutada:</p><ul><li><p>Esimene--Töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.</p></li><li>Ristmik--Töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikevalik.</li><li>Ühendus--Töötlemise ulatuse määramiseks kasutage kõigi rastrite ulatust.</li><li>Viimane--Töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.</li></ul>",
	"@@Calculator_Raster-Variables_tag0@@": "Kasutaja määratletud muutuja nimi ja sisendraster.",
	"@@Classify_Input-Definition-File_tag0@@": "Sisendfail Esri klassifikaatori määratlus (${.ecd}), mis sisaldab statistika ja muud klassifitseerimisteavet konkreetse andmestiku, klassifikaatori ja valitud atribuutide kohta.",
	"@@Classify_Raster_tag0@@": "Rastri andmestik, mida soovite klassifitseerida.",
	"@@Classify_Raster2_tag0@@": "Klassifikaatorisse kaasatav valikuline lisarasterandmestik (nt segmenteeritud kujutis, multispektraalne kujutis või kõrgusandmed), mida kasutatakse andmekomplekti jaoks töökindlamate liigitusmääratluste loomiseks. Selle parameetri rasterandmestik peab vastama sisendfaili Esri Classifier Definition (Esri klassifikaatori määratlusfaili) loomiseks kasutatud andmestikule.",
	"@@Clip_Clipping-Geometry-or-Raster_tag0@@": "Lõikeulatuse määramiseks võib kasutada järgmist:",
	"@@Clip_Clipping-Geometry-or-Raster_tag1@@": "<strong>Väljalõike raster</strong>--Väljalõike rastri ulatus",
	"@@Clip_Clipping-Geometry-or-Raster_tag3@@": "<strong>Kohandatud ulatus</strong>--X ja Y miinimum- ja maksimumkoordinaadid",
	"@@Clip_Clipping-Geometry-or-Raster_tag5@@": "<strong>Praeguse kaardi ulatus</strong>--Praeguse kaardi ulatuse kuva",
	"@@Clip_Clipping-Raster_tag0@@": "Lõikamiseks kasutatud rastrikiht.",
	"@@Clip_Clipping-Type_tag0@@": "Määrake, kas soovite säilitada ala lõike geomeetria sees või sellest väljaspool.",
	"@@Clip_Clipping-Type_tag1@@": "<strong>Lõige seest</strong>--Lõike laiendite sees olevad pildid eemaldatakse.",
	"@@Clip_Clipping-Type_tag3@@": "<strong>Lõige väljast</strong>--Lõike laienditest väljas olevad pildid eemaldatakse.",
	"@@Clip_Custom-Extent_tag0@@": "Määrake neli koordinaati, mis määratlevad rastri lõikamiseks kasutatava ümarduskasti ulatuse.",
	"@@Clip_Output-Extent_tag0@@": "Praeguse lõikeulatuse x- ja y-koordinaadid.",
	"@@Clip_Output-Extent_tag1@@": "<strong>Praeguse kaardi ulatuse hõivamine</strong> nupp kasutab aktiivse kaardi kuvamisulatust.",
	"@@Clip_Raster_tag0@@": "Sisendrasterkiht",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag0@@": "Kui see ruut on märgitud, kärbitakse andmeid vastavalt määratud objektiklassi geomeetriale.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag1@@": "Märkimata--funktsioon kasutab lõike geomeetriat, mille on määranud <strong>ristkülik</strong>. See on vaikimisi valik.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag4@@": "Märgitud – funktsioon kasutab objektiklassis määratletud lõikegeomeetriat.",
	"@@Color-Model-Conversion_Conversion-Type_tag0@@": "Teostatav värvikonversioonitüüp:",
	"@@Color-Model-Conversion_Conversion-Type_tag1@@": "HSV-st RGB-sse",
	"@@Color-Model-Conversion_Conversion-Type_tag2@@": "RGB-st HSV-sse",
	"@@Color-Model-Conversion_Raster_tag0@@": "Sisendraster.",
	"@@Colormap_Color-Ramp_tag0@@": "Valige eelnevalt olemasolev värvipass.",
	"@@Colormap_Color-Scheme-Type_tag0@@": "Valige sisendrastri renderdamiseks värviskeemi tüüp",
	"@@Colormap_Color-Scheme-Type_tag1@@": "Värvipass--kasutage värvipassi.",
	"@@Colormap_Color-Scheme-Type_tag2@@": "Värvikaart--kasutage olemasolevat värvikaarti.",
	"@@Colormap_Colormap_tag0@@": "Ripploendist on saadaval järgmised vaikevärvikaardid:",
	"@@Colormap_Colormap_tag1@@": "Kõrgus--värvikaart, mis muutub järk-järgult tsüaansinisest lillakasmustaks.",
	"@@Colormap_Colormap_tag2@@": "Hall--värvikaart, mis muutub järk-järgult mustast valgeks.",
	"@@Colormap_Colormap_tag7@@": "Nõlvavarjutus--Hallitoonides värvikaart, millega visualiseerida ruumiline kujutis maapinnast; pildi varjustamiseks võetakse arvesse päikese suhtelist asukohta.",
	"@@Colormap_Colormap_tag3@@": "NDVI--värvikaart vegetatsiooni visualiseerimiseks. Nullilähedased väärtused on sinised. Madalad väärtused on pruunid. Seejärel muutuvad värvid järk-järgult punasest oranžiks, kollaseks, roheliseks ja mustaks, kui vegetatsiooniindeks läheb madalalt kõrgele.",
	"@@Colormap_Colormap_tag4@@": "NDVI2--värvikaart vegetatsiooni visualiseerimiseks. Madalad väärtused varieeruvad valgest roheliseni. Siis ulatuvad värvid hallist lilla, violetse, tumesinise ja mustani, kui vegetatsiooniindeks läheb madalalt kõrgele.",
	"@@Colormap_Colormap_tag5@@": "NDVI3--värvikaart vegetatsiooni visualiseerimiseks. Nullilähedased väärtused on sinised. Seejärel muutuvad värvid järk-järgult punasest oranžiks ja roheliseks, kui vegetatsiooniindeks läheb madalalt kõrgele.",
	"@@Colormap_Colormap_tag6@@": "Juhuslik--juhuslik värvikaart.",
	"@@Colormap_Raster_tag0@@": "Sisendraster.",
	"@@Colormap-To-RGB_Raster_tag0@@": "Sisestatud värvikaardi raster.",
	"@@Complex_Raster_tag0@@": "Sisendraster.",
	"@@Composite-Bands_Rasters_tag0@@": "Rastri sisendi valimiseks kasutage ripploendit või nuppu <strong>Sirvi</strong>.",
	"@@Composite-Bands_cellsizetype_tag0@@": "<p>Valige, millist piksli suurust tuleb väljundrastris kasutada. Kui kõik sisendpikslid on ühesuurused, annavad kõik valikud samad tulemused.</p><ul><li>Esimene -- Kasutage sisendrastrite esimest pikslisuurust.</li><li>Min --Kasutage kõigi sisendrastrite vähimat pikslisuurust.</li><li>Max -- Kasutage kõigi sisendrastrite suurimat pikslisuurust. See on vaikevalik.</li><li>Keskmine -- Kasutage kõigi sisendrastrite keskmist pikslisuurust.</li><li>Viimane --Kasutage sisendrastrite viimast pikslisuurust.</li></ul>",
	"@@Con-function_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Con-function_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Con-function_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Con-function_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Con-function_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Con-function_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Con_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Con_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Con_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Con_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Con_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Con_False-Raster_tag0@@": "Sisend, mille väärtusi kasutatakse väljundpiksli väärtusena, kui tingimus on vale. See võib olla täisarv, ujukoma raster või konstandi väärtus.",
	"@@Con_Raster_tag0@@": "Sisendraster, mis tähistab loogilise matemaatilise rasterfunktsiooni kahendtulemust. Väärtused on kas 1 (tõene) või 0 (väär). See võib olla täisarv või ujukomaraster.",
	"@@Con_True-Raster_tag0@@": "Sisend, mille väärtusi kasutatakse väljundpiksli väärtusena, kui tingimus on tõene. See võib olla täisarv, ujukoma raster või konstandi väärtus.",
	"@@Constant_Constant_tag0@@": "Virtuaalsesse rasterisse lisatava konstandi väärtus.",
	"@@Constant_Raster-Info_tag0@@": "Malli laadimiseks kataloogist või portaalist vajutage nuppu <strong>Laadi malliraster</strong>.",
	"@@Contour_Adaptive-Smoothing_tag0@@": "Samajoonele rakendatav silumiskogus. Vaikeväärtus on 2,5.",
	"@@Contour_Adaptive-Smoothing_tag1@@": "Madalam väärtus annab samajoone suurema detailsusega ja väiksema silumisega, samal ajal kui suurem väärtus annab samajoone suurema silumisega, mis tundub vähem sakiline.",
	"@@Contour_Contour-Interval_tag0@@": "Samajoonte kõrguste erinevus.",
	"@@Contour_Contour-Interval_tag1@@": "Suhteliselt tasastes kohtades kasutatakse väikest kontuuride vahemikku, muutuvatel või mägistel maastikel aga suuremaid kontuuride vahemikke.",
	"@@Contour_Contour-Type_tag0@@": "Loodava kontuuri tüüp:",
	"@@Contour_Contour-Type_tag1@@": "<strong>Samajoonte vahelise ala täitmine</strong>--Täidab iga samajoone vahelise ala kvantifitseeritud kõrguse väärtusega.",
	"@@Contour_Contour-Type_tag3@@": "<strong>Samajooned</strong>--Ühendab võrdse kõrgusega punkte, et luua joon, mis tähistab konstantset kõrgust.",
	"@@Contour_Contour-Type_tag5@@": "<strong>Ainult sile pind</strong>--Silub sisendi kõrgenduskihti, kuid ei tekita kontuure.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag0@@": "Indeksikontuur, mis on esitatud paksu joonena.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag1@@": "Vaikeväärtus on 5; seega on iga 5. samajoon paks.",
	"@@Contour_Number-Of-Contours_tag0@@": "Kuval loodavate kontuuride arv. See reguleerib kontuuride vahemikku dünaamiliselt nii, et see sobiks kuval oleva maastikuga, säilitades samal ajal standardiseeritud intervallid nagu 1, 5, 10 jne.",
	"@@Contour_Raster_tag0@@": "Ühe ribaga rasterkõrguse andmestik.",
	"@@Contour_Z-Base_tag0@@": "Aluskontuuri väärtus. Kontuurid genereeritakse sellest väärtusest kõrgemal ja madalamal vastavalt sisendrastri kogu väärtusvahemiku katmiseks. Vaikeväärtus on 0.",
	"@@Contour_Z-Base_tag1@@": "Väärtus 0 tähistab sageli keskmist merepinna taset, sõltuvalt lähtekõrguse andmestikust.",
	"@@Contour_Z-Factor_tag0@@": "Kontuuride genereerimisel kasutatav ühikuteisendustegur. Vaikeväärtus on 1.",
	"@@Contour_Z-Factor_tag1@@": "Samajooned genereeritakse sisendrastri z-väärtuste põhjal, mida sageli mõõdetakse meetrites või jalgades. Vaikeväärtusega 1 on kontuurid samades ühikutes sisendrastri z-väärtustega. Kontuuride loomiseks erinevast ühikust, mis erineb Z-väärtustest, määrake Z-tegurile sobiv väärtus. Pange tähele, et selle tööriista puhul pole vaja, et maapinna x, y ja pinna Z-ühikud oleksid ühtlased.",
	"@@Contour_Z-Factor_tag2@@": "Näiteks kui teie sisendastris asuvad kõrguse väärtused on jalad, kuid soovite, et kontuurid genereeritaks mõõtühikute alusel, seadke Z-tegur väärtusele 0,3048 (kuna 1 jalg = 0,3048 meetrit).",
	"@@Contrast-and-Brightness_Brightness-Offset_tag0@@": "Reguleerige rasterkihi heledust.",
	"@@Contrast-and-Brightness_Brightness-Offset_tag1@@": "Heleduse nihke muutmiseks saate liugurit kasutada või võite tippida väärtuse.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag0@@": "Reguleerige rasterkihi kontrastsust.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag1@@": "Kontrastsuse nihke muutmiseks saate liugurit kasutada või võite tippida väärtuse.",
	"@@Contrast-and-Brightness_Raster_tag0@@": "Sisendraster, mille abil saab heledust ja kontrasti muuta.",
	"@@Convolution_kernel_tag0@@": "<p>See tabel näitab, kuidas iga pikslit filtrimisprotsessis kaalutakse. Seda tabelit saab muuta, kui valite<strong>tüübiks</strong>kasutaja<strong>määratletud</strong>.</p>",
	"@@Convolution_Raster_tag0@@": "Sisendrasterandmestik.",
	"@@Convolution_Type_tag0@@": "Valige filtreerimise tüüp, mida soovite teostada. Servade teritamiseks, hägustamiseks ja tuvastamiseks on olemas valikud või saate määratleda oma kernelipõhise filtri",
	"@@Corridor_Distance-Raster-1_tag0@@": "Esimene sisendvahemaa raster. See peaks olema akumuleeritud kuluvahemaa väljund kuluvahemaast või tee kaugusest.",
	"@@Corridor_Distance-Raster-2_tag0@@": "Teine sisendvahemaa raster. See peaks olema akumuleeritud kuluvahemaa väljund kuluvahemaast või tee kaugusest.",
	"@@Cos_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Cos_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Cos_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Cos_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Cos_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Cos_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Cos_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Cos_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Cos_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Cos_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Cos_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Cos_Raster_tag0@@": "Sisend, mille puhul arvutatakse koosinuse väärtused.",
	"@@CosH_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@CosH_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@CosH_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@CosH_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@CosH_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@CosH_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@CosH_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@CosH_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@CosH_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@CosH_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@CosH_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@CosH_Raster_tag0@@": "Sisend, mille puhul arvutatakse hüperboolse koosinuse väärtused.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "See parameeter simuleerib kulude katmise jõupingutuste suurenemist, kuna kumulatiivsed kulud suurenevad. Seda kasutatakse ränduri väsimuse modelleerimiseks. Kasvavat akumuleeruvat kulu lahtrisse jõudmiseks korrutatakse resistentsuse määraga ja lisatakse hilisemasse lahtrisse kolimise kulule.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "See on liitintressimäära valemi muudetud versioon, mida kasutatakse lahtris liikumise ilmse kulu arvutamiseks. Kui resistentsuse määra väärtus suureneb, suurendab see hiljem külastatavate lahtrite maksumust. Mida suurem on resistentsuse määr, seda suurem on järgmise lahtrini jõudmise kulu, mis arvutatakse iga järgneva liikumise kohta. Kuna resistentsuse määr on sarnane liitkursiga ja üldiselt on kumulatiivsed kuluväärtused väga suured, soovitatakse sõltuvalt kumulatiivsetest kuluväärtustest kasutada väikeseid resistentsuse määrasid, näiteks 0,005 või isegi väiksemaid.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Cost-Allocation_Capacity_tag0@@": "Määratleb ränduri kuluvõime allika jaoks. Kuluarvutusi jätkatakse iga allika puhul kuni määratud võimsuse saavutamiseni.",
	"@@Cost-Allocation_Capacity_tag1@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Cost-Allocation_Capacity_tag2@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Cost-Allocation_Cost-Raster_tag0@@": "Nõutav sisendraster määrab kulu või takistuse tasapinnalisel liikumisel läbi iga lahtri. Lahtri iga asukoha väärtus väljendab vahemaa ühiku maksumuse liikumisel läbi selle. Iga lahtri asukoha väärtus korrutatakse lahtri resolutsiooniga ja see kompenseerib ka diagonaalliikumist, et saada läbi lahtri liikumise kogukulu.",
	"@@Cost-Allocation_Cost-Raster_tag1@@": "<strong>Kulurastri</strong>väärtus võib täisarv või ujuva väärtusega arv, kuid ei tohi olla negatiivne või null.",
	"@@Cost-Allocation_Maximum-Distance_tag0@@": "Künnis, mida kumulatiivsed kuluväärtused ei tohi ületada.  Kui kumulatiivne kuluvahemaa ületab selle väärtuse, siis lahtri asukoha väljundväärtus on ${NoData}. Maksimaalne kaugus määratleb, mil määral arvutatakse kumulatiivsed kuluvahemaad. Vaikekaugus on väljundrastri ulatuses.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Kulude väärtustele rakendatav kordaja.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "See parameeter võimaldab juhtida liikumisviisi või suurusjärku allika juures. Mida suurem on kordaja, seda suurem on iga lahtri läbimise kulu.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Väärtused peavad olema suuremad kui null. Vaikeväärtus on 1.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Cost-Allocation_Source-Field_tag0@@": "Väli, mida kasutatakse allikate asukohtadele väärtuste määramiseks. See peab olema täisarv. Kui <strong>väärtuse raster</strong> on seatud, on selle sisendi väärtused <strong>lähtevälja</strong> mis tahes seadistuse suhtes ülimuslikud.",
	"@@Cost-Allocation_Source-Raster_tag0@@": "Lähtekohtade nõutav sisendraster.",
	"@@Cost-Allocation_Source-Raster_tag1@@": "See on raster, mis tuvastab lahtrid või asukohad, kust arvutatakse iga väljundlahtri asukoha kohta väikseim akumuleeritud kulukaugus.",
	"@@Cost-Allocation_Source-Raster_tag2@@": "Kui sisendi <strong>lähteraster</strong> on ujuvpunkt, tuleb seada <strong>väärtuse raster</strong> ja see peab olema täisarv. <strong>Väärtuse raster</strong> on <strong>lähtevälja</strong> mis tahes seadistuse suhtes ülimuslik.",
	"@@Cost-Allocation_Start-Cost_tag0@@": "Algkulu, millest alustada kuluarvutusi. See parameeter võimaldab määrata allikaga seotud püsikulu. Selle asemel, et alustada maksumusega 0, algab kulualgoritm määratud väärtusega.",
	"@@Cost-Allocation_Start-Cost_tag1@@": "Väärtus peab olema 0 või suurem. Vaikeväärtus on 0.",
	"@@Cost-Allocation_Travel-Direction_tag0@@": "Määratleb reisija suuna allika takistuse määra ja lähtekulu arvestamisel.",
	"@@Cost-Allocation_Travel-Direction_tag1@@": "<strong>Allikast</strong>--Allikakindluse määr ja allika algkulu rakendatakse sisendallikast alustades ja mittelähtelahtritesse liikudes. See on vaikimisi valik.",
	"@@Cost-Allocation_Travel-Direction_tag3@@": "<strong>Allikasse</strong>--Allikakindluse määr ja allika algkulu rakendatakse alates igast mittelähtelahtrist ja liikudes tagasi sisendallikasse.",
	"@@Cost-Allocation_Travel-Direction_tag5@@": "Määrake kas võtmesõna <strong>Allikast</strong> või <strong>Allikasse</strong>, mida rakendatakse kõigile allikatele, või määrake väli <strong>allikarastris</strong>, mis sisaldab iga allika liikumissuuna identifitseerimise võtmesõnu. See väli peab sisaldama stringi ${FROM_SOURCE} või ${TO_SOURCE}.",
	"@@Cost-Allocation_Value-Raster_tag0@@": "Sisendtäisarvu raster, mis tuvastab iga sisendallika asukoha jaoks kasutatavad tsooniväärtused. Iga lähteasukoha lahtri puhul väärtus, mille on määratlenud <strong>väärtuse raster</strong>, määratakse kõigile lahtritele, mis on määratud arvutuse lähteasukohale. <strong>Väärtuse raster</strong> on <strong>lähtevälja</strong> mis tahes seadistuse suhtes ülimuslik.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "See parameeter simuleerib kulude katmise jõupingutuste suurenemist, kuna kumulatiivsed kulud suurenevad. Seda kasutatakse ränduri väsimuse modelleerimiseks. Kasvavat akumuleeruvat kulu lahtrisse jõudmiseks korrutatakse resistentsuse määraga ja lisatakse hilisemasse lahtrisse kolimise kulule.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "See on liitintressimäära valemi muudetud versioon, mida kasutatakse lahtris liikumise ilmse kulu arvutamiseks. Kui resistentsuse määra väärtus suureneb, suurendab see hiljem külastatavate lahtrite maksumust. Mida suurem on resistentsuse määr, seda suurem on järgmise lahtrini jõudmise kulu, mis arvutatakse iga järgneva liikumise kohta. Kuna resistentsuse määr on sarnane liitkursiga ja üldiselt on kumulatiivsed kuluväärtused väga suured, soovitatakse sõltuvalt kumulatiivsetest kuluväärtustest kasutada väikeseid resistentsuse määrasid, näiteks 0,005 või isegi väiksemaid.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Cost-Back-Link_Capacity_tag0@@": "Määratleb ränduri kuluvõime allika jaoks. Kuluarvutusi jätkatakse iga allika puhul kuni määratud võimsuse saavutamiseni.",
	"@@Cost-Back-Link_Capacity_tag1@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Cost-Back-Link_Capacity_tag2@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Cost-Back-Link_Cost-Raster_tag0@@": "Nõutav sisendraster määrab kulu või takistuse tasapinnalisel liikumisel läbi iga lahtri. Lahtri iga asukoha väärtus väljendab vahemaa ühiku maksumuse liikumisel läbi selle. Iga lahtri asukoha väärtus korrutatakse lahtri resolutsiooniga ja see kompenseerib ka diagonaalliikumist, et saada läbi lahtri liikumise kogukulu.",
	"@@Cost-Back-Link_Cost-Raster_tag1@@": "<strong>Kulurastri</strong>väärtus võib täisarv või ujuva väärtusega arv, kuid ei tohi olla negatiivne või null.",
	"@@Cost-Back-Link_Maximum-Distance_tag0@@": "Künnis, mida kumulatiivsed kuluväärtused ei tohi ületada. Kui kumulatiivne kuluvahemaa ületab selle väärtuse, siis lahtri asukoha väljundväärtus on NoData. Maksimaalne kaugus määratleb, mil määral arvutatakse kumulatiivsed kuluvahemaad. Vaikekaugus on väljundrastri ulatuses.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Kulude väärtustele rakendatav kordaja.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "See parameeter võimaldab juhtida liikumisviisi või suurusjärku allika juures. Mida suurem on kordaja, seda suurem on iga lahtri läbimise kulu.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Väärtused peavad olema suuremad kui null. Vaikeväärtus on 1.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Cost-Back-Link_Source-Raster_tag0@@": "Lähtekohtade nõutav sisendraster.",
	"@@Cost-Back-Link_Source-Raster_tag1@@": "See on raster, mis tuvastab lahtrid või asukohad, kust arvutatakse iga väljundlahtri asukoha kohta väikseim akumuleeritud kulukaugus.",
	"@@Cost-Back-Link_Start-Cost_tag0@@": "Algkulu, millest alustada kuluarvutusi. See parameeter võimaldab määrata allikaga seotud püsikulu. Selle asemel, et alustada maksumusega 0, algab kulualgoritm määratud väärtusega.",
	"@@Cost-Back-Link_Start-Cost_tag1@@": "Väärtus peab olema null või suurem. Vaikeväärtus on 0.",
	"@@Cost-Back-Link_Travel-Direction_tag0@@": "Määratleb reisija suuna allika takistuse määra ja lähtekulu arvestamisel.",
	"@@Cost-Back-Link_Travel-Direction_tag1@@": "<strong>Allikast</strong>--Allikakindluse määr ja allika algkulu rakendatakse sisendallikast alustades ja mittelähtelahtritesse liikudes. See on vaikimisi valik.",
	"@@Cost-Back-Link_Travel-Direction_tag3@@": "<strong>Allikasse</strong>--Allikakindluse määr ja allika algkulu rakendatakse alates igast mittelähtelahtrist ja liikudes tagasi sisendallikasse.",
	"@@Cost-Back-Link_Travel-Direction_tag5@@": "Määrake kas võtmesõna <strong>Allikast</strong> või <strong>Allikasse</strong>, mida rakendatakse kõigile allikatele, või määrake väli <strong>allikarastris</strong>, mis sisaldab iga allika liikumissuuna identifitseerimise võtmesõnu. See väli peab sisaldama stringi ${FROM_SOURCE} või ${TO_SOURCE}.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "See parameeter simuleerib kulude katmise jõupingutuste suurenemist, kuna kumulatiivsed kulud suurenevad. Seda kasutatakse ränduri väsimuse modelleerimiseks. Kasvavat akumuleeruvat kulu lahtrisse jõudmiseks korrutatakse resistentsuse määraga ja lisatakse hilisemasse lahtrisse kolimise kulule.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "See on liitintressimäära valemi muudetud versioon, mida kasutatakse lahtris liikumise ilmse kulu arvutamiseks. Kui resistentsuse määra väärtus suureneb, suurendab see hiljem külastatavate lahtrite maksumust. Mida suurem on resistentsuse määr, seda suurem on järgmise lahtrini jõudmise kulu, mis arvutatakse iga järgneva liikumise kohta. Kuna resistentsuse määr on sarnane liitkursiga ja üldiselt on kumulatiivsed kuluväärtused väga suured, soovitatakse sõltuvalt kumulatiivsetest kuluväärtustest kasutada väikeseid resistentsuse määrasid, näiteks 0,005 või isegi väiksemaid.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Cost-Distance_Capacity_tag0@@": "Määratleb ränduri kuluvõime allika jaoks. Kuluarvutusi jätkatakse iga allika puhul kuni määratud võimsuse saavutamiseni.",
	"@@Cost-Distance_Capacity_tag1@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Cost-Distance_Capacity_tag2@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Cost-Distance_Cost-Raster_tag0@@": "Nõutav sisendraster määrab kulu või takistuse tasapinnalisel liikumisel läbi iga lahtri. Lahtri iga asukoha väärtus väljendab vahemaa ühiku maksumuse liikumisel läbi selle. Iga lahtri asukoha väärtus korrutatakse lahtri resolutsiooniga ja see kompenseerib ka diagonaalliikumist, et saada läbi lahtri liikumise kogukulu.",
	"@@Cost-Distance_Cost-Raster_tag1@@": "<strong>Kulurastri</strong>väärtus võib täisarv või ujuva väärtusega arv, kuid ei tohi olla negatiivne või null.",
	"@@Cost-Distance_Maximum-Distance_tag0@@": "Künnis, mida kumulatiivsed kuluväärtused ei tohi ületada. Kui kumulatiivne kuluvahemaa ületab selle väärtuse, siis lahtri asukoha väljundväärtus on NoData. Maksimaalne kaugus määratleb, mil määral arvutatakse kumulatiivsed kuluvahemaad. Vaikekaugus on väljundrastri ulatuses.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Kulude väärtustele rakendatav kordaja.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "See parameeter võimaldab juhtida liikumisviisi või suurusjärku allika juures. Mida suurem on kordaja, seda suurem on iga lahtri läbimise kulu.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Väärtused peavad olema suuremad kui null. Vaikeväärtus on 1.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Cost-Distance_Source-Raster_tag0@@": "Lähtekohtade nõutav sisendraster.",
	"@@Cost-Distance_Source-Raster_tag1@@": "See on raster, mis tuvastab lahtrid või asukohad, kust arvutatakse iga väljundlahtri asukoha kohta väikseim akumuleeritud kulukaugus.",
	"@@Cost-Distance_Start-Cost_tag0@@": "Algkulu, millest alustada kuluarvutusi. See parameeter võimaldab määrata allikaga seotud püsikulu. Selle asemel, et alustada maksumusega 0, algab kulualgoritm määratud väärtusega.",
	"@@Cost-Distance_Start-Cost_tag1@@": "Väärtus peab olema null või suurem. Vaikeväärtus on 0.",
	"@@Cost-Distance_Travel-Direction_tag0@@": "Määratleb reisija suuna allika takistuse määra ja lähtekulu arvestamisel.",
	"@@Cost-Distance_Travel-Direction_tag1@@": "<strong>Allikast</strong>--Allikakindluse määr ja allika algkulu rakendatakse sisendallikast alustades ja mittelähtelahtritesse liikudes. See on vaikimisi valik.",
	"@@Cost-Distance_Travel-Direction_tag3@@": "<strong>Allikasse</strong>--Allikakindluse määr ja allika algkulu rakendatakse alates igast mittelähtelahtrist ja liikudes tagasi sisendallikasse.",
	"@@Cost-Distance_Travel-Direction_tag5@@": "Määrake kas võtmesõna <strong>Allikast</strong> või <strong>Allikasse</strong>, mida rakendatakse kõigile allikatele, või määrake väli <strong>allikarastris</strong>, mis sisaldab iga allika liikumissuuna identifitseerimise võtmesõnu. See väli peab sisaldama stringi ${FROM_SOURCE} või ${TO_SOURCE}.",
	"@@Curvature_Curvature-Type_tag0@@": "Kurvilisuse tüüp rõhub kalde erinevatele aspektidele. Kurvilisussuvandeid on kolm:",
	"@@Curvature_Curvature-Type_tag1@@": "Planform--on risti maksimaalse kalde suunaga. See mõjutab voohulga ühtlustumist ja lahknevust üle pinna.",
	"@@Curvature_Curvature-Type_tag2@@": "Profiil--on kaldega paralleelne ja näitab maksimaalse kalde suunda. See mõjutab voohulga kiirenemist ja aeglustumist üle pinna.",
	"@@Curvature_Curvature-Type_tag3@@": "Standardne--kombineerib nii <strong>profiili</strong> kui <strong>plaani</strong> kõveruse.",
	"@@Curvature_DEM_tag0@@": "Digitaalse kõrgusmudeli (DEM) raster.",
	"@@Curvature_Z-Factor_tag0@@": "Z-tegur reguleerib mõõtühikuid z-ühikutes, kui need erinevad sisendpinna x, y ühikutest. Kui x -, y- ja z-ühikud on samas mõõtühikus, tuleks z-teguriks määrata 1. Sisendpinna z-väärtused korrutatakse lõppväljundpinna arvutamisel z-teguriga. Näiteks kui teie z-ühikud on jalad ja teie x-y-ühikud on meetrid, kasutaksite z-tegurit 0,3048, et teisendada z-ühikud jalgadest meetriteks, kuna 1 jalg = 0,3048 meetrit.",
	"@@Divide_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Divide_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Divide_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Divide_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Divide_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Divide_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Divide_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Divide_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Divide_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Divide_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Divide_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Divide_Raster_tag0@@": "Sisend, mille väärtus jagatakse teise sisendiga.",
	"@@Divide_Raster_tag1@@": "Selle parameetri sisendina saab kasutada numbrit eeldusel, et ${Raster2} jaoks on määratud raster.",
	"@@Divide_Raster2_tag0@@": "Sisend, mille esimese sisendi väärtus jagatakse.",
	"@@Divide_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada numbrit eeldusel, et ${Raster} jaoks on määratud raster.",
	"@@Elevation-Void-Fill_DEM_tag0@@": "Sisend-DEM.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag0@@": "Maksimaalse tühimiku laiuse väärtust kasutatakse tühimiku suurima suuruse määramiseks, mida soovite täita. Kui tühimiku ümber oleva piiraja-ala laius või kõrgus on suurem kui tühimiku maksimaalne laius, siis tühimikku ei täideta. Selle parameetri ühikud on samad, mida kasutatakse teie andmete matemaatilise aluse süsteemis.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag1@@": "Kui see parameeter on tühi või selle väärtus on ${0}, siis maksimaalset laiust ei kasutata ja kõik tühimikud täidetakse. Väärtus ${-1} tähendab, et tühimiku täitmist ei toimu.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag0@@": "Maksimaalne otsinguraadius, mida tühimiku täitmiseks kasutatakse. Tühimik, mis jääb kõigist kehtivatest pikslitest kaugemale kui see läviväärtus, jääb tühiseks. Selle parameetri ühikud on samad, mida kasutatakse teie andmete matemaatilise aluse süsteemis.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag1@@": "Kui selle parameetri väärtus on tühi, ${0} või ${-1}, siis seda parameetrit ei kasutata.",
	"@@Equal-to_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Equal-to_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Equal-to_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Equal-to_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtrisuurust. See on vaikimisi valik.",
	"@@Equal-to_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Equal-to_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Equal-to_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Equal-to_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Equal-to_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Equal-to_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Equal-to_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Equal-to_Raster_tag0@@": "Sisend, mida kasutatakse võrdsuse võrdlemiseks teise sisendiga.",
	"@@Equal-to_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Equal-to_Raster2_tag0@@": "Sisend, mida kasutatakse võrdsuse võrdlemiseks esimese sisendiga.",
	"@@Equal-to_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Euclidean-Allocation_Cellsize_tag0@@": "Lahtri suurus, millega väljastusraster luuakse.",
	"@@Euclidean-Allocation_Cellsize_tag1@@": "Kui lahtri suurus on selgesõnaliselt seatud <strong>analüüsi keskkonnas</strong>, on see lahtri vaikesuurus. Kui seda ei olnud seatud, on väljundi lahtri suurus sama mis <strong>allika rastril</strong>.",
	"@@Euclidean-Allocation_Distance-Method_tag0@@": "Määrab, kas kaugus arvutatakse planaarse (lapiku maa) või geodeetilise (ellipsoidi) meetodiga.",
	"@@Euclidean-Allocation_Distance-Method_tag1@@": "Geodeesia--kõige lühem joon maakera kahe pinna vahel sfäärilisel (ellipsoidsel) joonel. Hoolimata sisendi või väljundi projitseerimisest tulemused ei muutu. Üks geodeetilise joone kasutus on see, kui soovite määrata lennuki lennutrajektoori jaoks lühima marsruudi kahe linna vahel. Seda nimetatakse ka suurringjooneks, kui see põhineb pigem sfääril kui ellipsoidil.",
	"@@Euclidean-Allocation_Distance-Method_tag2@@": "Tasapinnaline--tasapinnalistel mõõtmistel kasutatakse pikkuse ja pindala arvutamiseks 2D Descartes’i matemaatikat. Valik on saadaval ainult siis, kui mõõdetakse tasapinnaliste ristkoordinaatide süsteemis ja mõõtmiste aluseks võetakse selle koordinaatsüsteemi 2D-tasand.",
	"@@Euclidean-Allocation_Maximum-Distance_tag0@@": "Määratleb läviväärtuse vahemaa, mille piires määratakse lähim allikas. Kui vahemaa lähima allikani ületab selle, siis selle lahtri väljund on ${NoData}.",
	"@@Euclidean-Allocation_Maximum-Distance_tag1@@": "Vaikekaugus on väljundrastri ulatuses.",
	"@@Euclidean-Allocation_Raster-Barriers_tag0@@": "Raster, mis defineerib barjäärid.",
	"@@Euclidean-Allocation_Raster-Barriers_tag1@@": "Andmestik peab sisaldama ${NoData}-andmeid, kui tõkkeid ei ole. Tõkked on esitatud kehtivate väärtustega, sealhulgas nulliga.",
	"@@Euclidean-Allocation_Raster-Barriers_tag2@@": "Tõkkeid saab määratleda täisarvulise või ujukomakujulise rastriga.",
	"@@Euclidean-Allocation_Source-Field_tag0@@": "Väli, mida kasutatakse allikate asukohtadele väärtuste määramiseks. See peab olema täisarv. Kui <strong>väärtuse raster</strong> on seatud, on selle sisendi väärtused <strong>lähtevälja</strong> mis tahes seadistuse suhtes ülimuslikud.",
	"@@Euclidean-Allocation_Source-Raster_tag0@@": "Nõutav sisendraster, mis tuvastab lähteasukohad. Eukleidilise kauguse põhjal määratakse väljundi igale lahtrile lähim allikas",
	"@@Euclidean-Allocation_Source-Raster_tag1@@": "Sisendi tüüp võib olla täisarv või ujukomatüüp.",
	"@@Euclidean-Allocation_Value-Raster_tag0@@": "Sisendtäisarvu raster, mis tuvastab iga sisendallika asukoha jaoks kasutatavad tsooniväärtused. Iga lähteasukoha lahtri puhul väärtus, mille on määratlenud <strong>väärtuse raster</strong>, määratakse kõigile lahtritele, mis on määratud arvutuse lähteasukohale. <strong>Väärtuse raster</strong> on <strong>lähtevälja</strong> mis tahes seadistuse suhtes ülimuslik.",
	"@@Euclidean-Direction_Cellsize_tag0@@": "Lahtri suurus, millega väljastusraster luuakse.",
	"@@Euclidean-Direction_Cellsize_tag1@@": "Kui lahtri suurus on selgesõnaliselt seatud <strong>analüüsi keskkonnas</strong>, on see lahtri vaikesuurus. Kui seda ei olnud seatud, on väljundi lahtri suurus sama mis <strong>allika rastril</strong>.",
	"@@Euclidean-Direction_Distance-Method_tag0@@": "Määrab, kas kaugus arvutatakse planaarse (lapiku maa) või geodeetilise (ellipsoidi) meetodiga.",
	"@@Euclidean-Direction_Distance-Method_tag1@@": "Geodeesia--kõige lühem joon maakera kahe pinna vahel sfäärilisel (ellipsoidsel) joonel. Hoolimata sisendi või väljundi projitseerimisest tulemused ei muutu. Üks geodeetilise joone kasutus on see, kui soovite määrata lennuki lennutrajektoori jaoks lühima marsruudi kahe linna vahel. Seda nimetatakse ka suurringjooneks, kui see põhineb pigem sfääril kui ellipsoidil.",
	"@@Euclidean-Direction_Distance-Method_tag2@@": "Tasapinnaline--tasapinnalistel mõõtmistel kasutatakse pikkuse ja pindala arvutamiseks 2D Descartes’i matemaatikat. Valik on saadaval ainult siis, kui mõõdetakse tasapinnaliste ristkoordinaatide süsteemis ja mõõtmiste aluseks võetakse selle koordinaatsüsteemi 2D-tasand.",
	"@@Euclidean-Direction_Maximum-Distance_tag0@@": "Määratleb läviväärtuse vahemaa, mille piires arvutatakse suund lähimale allikale. Kui vahemaa lähima allikani ületab selle, siis selle lahtri väljund on ${NoData}.",
	"@@Euclidean-Direction_Maximum-Distance_tag1@@": "Vaikekaugus on väljundrastri ulatuses.",
	"@@Euclidean-Direction_Raster-Barriers_tag0@@": "Raster, mis defineerib barjäärid.",
	"@@Euclidean-Direction_Raster-Barriers_tag1@@": "Andmestik peab sisaldama NoData-andmeid, kui tõkkeid ei ole. Tõkked on esitatud kehtivate väärtustega, sealhulgas nulliga.",
	"@@Euclidean-Direction_Raster-Barriers_tag2@@": "Tõkkeid saab määratleda täisarvulise või ujukomakujulise rastriga.",
	"@@Euclidean-Direction_Source-Raster_tag0@@": "Nõutav sisendraster, mis tuvastab lahtrid või asukohad, kuhu arvutatakse iga väljundlahtri asukoha eukleidiline suund.",
	"@@Euclidean-Direction_Source-Raster_tag1@@": "Sisendi tüüp võib olla täisarv või ujukomatüüp.",
	"@@Euclidean-Distance_Cellsize_tag0@@": "Lahtri suurus, millega väljastusraster luuakse.",
	"@@Euclidean-Distance_Cellsize_tag1@@": "Kui lahtri suurus on selgesõnaliselt seatud <strong>analüüsi keskkonnas</strong>, on see lahtri vaikesuurus. Kui seda ei olnud seatud, on väljundi lahtri suurus sama mis <strong>allika rastril</strong>.",
	"@@Euclidean-Distance_Distance-Method_tag0@@": "Määrab, kas kaugus arvutatakse planaarse (lapiku maa) või geodeetilise (ellipsoidi) meetodiga.",
	"@@Euclidean-Distance_Distance-Method_tag1@@": "Geodeesia--kõige lühem joon maakera kahe pinna vahel sfäärilisel (ellipsoidsel) joonel. Hoolimata sisendi või väljundi projitseerimisest tulemused ei muutu. Üks geodeetilise joone kasutus on see, kui soovite määrata lennuki lennutrajektoori jaoks lühima marsruudi kahe linna vahel. Seda nimetatakse ka suurringjooneks, kui see põhineb pigem sfääril kui ellipsoidil.",
	"@@Euclidean-Distance_Distance-Method_tag2@@": "Tasapinnaline--tasapinnalistel mõõtmistel kasutatakse pikkuse ja pindala arvutamiseks 2D Descartes’i matemaatikat. Valik on saadaval ainult siis, kui mõõdetakse tasapinnaliste ristkoordinaatide süsteemis ja mõõtmiste aluseks võetakse selle koordinaatsüsteemi 2D-tasand.",
	"@@Euclidean-Distance_Maximum-Distance_tag0@@": "Lävi, mida kumulatiivsed vahemaad ei tohi ületada. Kui kumulatiivne eukleidiline kaugus ületab selle väärtuse, siis lahtri asukoha väljundväärtus on NoData.",
	"@@Euclidean-Distance_Maximum-Distance_tag1@@": "Vaikekaugus on väljundrastri ulatuses.",
	"@@Euclidean-Distance_Raster-Barriers_tag0@@": "Raster, mis defineerib barjäärid.",
	"@@Euclidean-Distance_Raster-Barriers_tag1@@": "Andmestik peab sisaldama ${NoData}-andmeid, kui tõkkeid ei ole. Tõkked on esitatud kehtivate väärtustega, sealhulgas nulliga.",
	"@@Euclidean-Distance_Raster-Barriers_tag2@@": "Tõkkeid saab määratleda täisarvulise või ujukomakujulise rastriga.",
	"@@Euclidean-Distance_Source-Raster_tag0@@": "Nõutav sisendraster, mis tuvastab lahtrid või asukohad, kuhu arvutatakse iga väljundlahtri asukoha eukleidiline kaugus.",
	"@@Euclidean-Distance_Source-Raster_tag1@@": "Sisendi tüüp võib olla täisarv või ujukomatüüp.",
	"@@Exp_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Exp_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Exp_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Exp_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Exp_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Exp_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Exp_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Exp_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Exp_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Exp_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Exp_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Exp_Raster_tag0@@": "Sisendväärtused, mille jaoks leida aluse e eksponentsiaal.",
	"@@Exp10_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Exp10_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Exp10_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Exp10_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Exp10_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Exp10_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Exp10_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Exp10_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Exp10_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Exp10_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Exp10_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Exp10_Raster_tag0@@": "Sisendväärtused, mille jaoks leida aluse 10 eksponentsiaal.",
	"@@Exp2_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav piksli suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Exp2_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Exp2_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Exp2_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Exp2_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist piksli suurust.",
	"@@Exp2_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat piksli suurust.",
	"@@Exp2_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Exp2_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Exp2_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Exp2_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Exp2_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Exp2_Raster_tag0@@": "Sisendväärtused, mille jaoks leida aluse 2 eksponentsiaal.",
	"@@Extract-Bands_Band_tag0@@": "Valige ribad, mida soovite loendist ekstraktida, lähtudes kasutatavast <strong>meetodi</strong> parameetrisuvandist.",
	"@@Extract-Bands_Combination_tag0@@": "Vahemaa kombinatsioon või vahemaa tellimus. Valikute loend sõltub määratud <strong>meetodi</strong> suvandist. Kui <strong>meetod</strong> on näiteks <strong>sagedusala nimed</strong>, saate loomuliku värvipildi ekstraktimiseks valida sinise, rohelise ja punase kombinatsiooni.",
	"@@Extract-Bands_Method_tag0@@": "Valige ribade ekstraktimiseks üks järgmistest meetoditest:",
	"@@Extract-Bands_Method_tag1@@": "<strong>Sagedusala ID-d</strong>--Sagedusala tähis või number, mis on iga anduri jaoks kordumatu. Need võivad olla identsed <strong>sagedusala nimedega</strong>.",
	"@@Extract-Bands_Method_tag4@@": "<strong>Sagedusala nimed</strong>--Kasutab sagedusala nime, mis tähistab elektromagnetilise spektri lainepikkuse intervalli (näiteks punane, lähi-infrapuna, termiline infrapuna). Seda saab määrata ka ribanumbri ID-ks.",
	"@@Extract-Bands_Method_tag6@@": "<strong>Sagedusala lainepikkused</strong>--Elektromagnetilise spektri lainepikkus.",
	"@@Extract-Bands_Missing-Band-Action_tag0@@": "Määrake toiming, mis toimub siis, kui ekstraktribade loendis olev riba pole saadaval.",
	"@@Extract-Bands_Missing-Band-Action_tag1@@": "<strong>Parim vaste</strong>--Leiab parima saadaoleva riba, mida kasutada puuduva riba asemel lainepikkuse põhjal, et funktsioon ei ebaõnnestuks",
	"@@Extract-Bands_Missing-Band-Action_tag3@@": "<strong>Nurjumine</strong>--Kui sisendandmestikust puudub mõni riba, mis on määratletud parameetriga <strong>Laineala</strong>, funktsioon nurjub.",
	"@@Extract-Bands_Raster_tag0@@": "Rastertoode, millest riba või ribad ekstraheeritakse.",
	"@@Fill_Raster_tag0@@": "Ühe ribaga kõrgusraster.",
	"@@Fill_Z-Limit_tag0@@": "Maksimaalne tõusuvahe neelu ja selle valgumispunkti vahel, mida täita.",
	"@@Fill_Z-Limit_tag1@@": "Kui selle parameetri jaoks pole määratud väärtust, täidetakse kõik neelu sõltumata sügavusest.",
	"@@Fill_Z-Limit_tag2@@": "Väärtus <strong>Z-piirväärtus</strong> peab olema suurem klui null.",
	"@@Float_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Float_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Float_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Float_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Float_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Float_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Float_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Float_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Float_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Float_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Float_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Float_Raster_tag0@@": "Sisendraster, mis teisendatakse ujukomaks.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag0@@": "Sisendraster, mis näitab voosuunda igast lahtrist välja.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag1@@": "Voosuuna rastri saab luua funktsiooni <strong>voosuund</strong>abil.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag0@@": "Määratleb sisendvoosuuna rastri tüübi.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Sisendvoosuuna rastri tüüp on D8. See on vaikimisi valik.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Sisendvoosuuna raster on D-Infinity (DINF) tüüpi.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Sisendvoosuuna raster on mitme voo suuna (MFD) tüüpi.",
	"@@Flow-Accumulation_Output-Data-Type_tag0@@": "--Väljundakumulatsiooni raster võib olla täisarv või ujukomatüüp.",
	"@@Flow-Accumulation_Output-Data-Type_tag1@@": "<strong>Ujukoma</strong>--Väljundraster on ujukomaga tüüpi. See on vaikimisi valik.",
	"@@Flow-Accumulation_Output-Data-Type_tag3@@": "<strong>Täisarv</strong>--Väljundraster on täisarvuga tüüpi.",
	"@@Flow-Accumulation_Weight-Raster_tag0@@": "Valikuline sisendraster igale pikslile kaalu rakendamiseks.",
	"@@Flow-Accumulation_Weight-Raster_tag1@@": "Kui kaalu rastrit pole määratud, rakendatakse igale pikslile vaikemass 1.",
	"@@Flow-Direction_Flow-Direction-Type_tag0@@": "Määratleb sisendvoosuuna rastri tüübi.",
	"@@Flow-Direction_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Sisendvoosuuna rastri tüüp on D8. See on vaikimisi valik.",
	"@@Flow-Direction_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Sisendvoosuuna raster on D-Infinity (DINF) tüüpi.",
	"@@Flow-Direction_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Sisendvoosuuna raster on mitme voo suuna (MFD) tüüpi.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag0@@": "Määrab, kas servapikslid liiguvad alati väljapoole või järgivad tavalisi vooreegleid.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag1@@": "<strong>Ei</strong>--Kui servapiksli sisemuses on maksimaalne langus suurem kui null, määratakse voosuund nagu tavaliselt, vastasel juhul on voosuund serva poole. Pikslid, mis peaksid liikuma pinnarastri servast sissepoole, teevad seda. See on vaikimisi valik.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag3@@": "<strong>Jah</strong>--Kõik pinnarastri servas olevad pikslid liiguvad pinnarastrist väljapoole.",
	"@@Flow-Direction_Raster_tag0@@": "Sisendraster, mis kujutab pidevat kõrguspinda.",
	"@@Flow-Distance_Distance-Type_tag0@@": "Määrab, kas arvutatakse vookauguse vertikaalne või horisontaalne komponent.",
	"@@Flow-Distance_Distance-Type_tag1@@": "<strong>Horisontaalne</strong>--Vookauguse arvutused esindavad vookauguse horisontaalset komponenti iga domeeni pikslist kuni voopikslini (piksliteni), kuhu nad liiguvad.",
	"@@Flow-Distance_Distance-Type_tag3@@": "<strong>Vertikaalne</strong>--Vookauguse arvutused esindavad vookauguse vertikaalset komponenti iga domeeni pikslist kuni voopikslini (piksliteni), kuhu nad liiguvad. See on vaikimisi valik.",
	"@@Flow-Distance_Flow-Direction-Raster_tag0@@": "Sisendraster, mis näitab voosuunda igast pikslist välja.",
	"@@Flow-Distance_Flow-Direction-Raster_tag1@@": "Kui on esitatud voosuuna raster, on kaldesuunad piiratud nendega, mis on määratletud sisendvoosuuna rastris.",
	"@@Flow-Distance_Flow-Direction-Raster_tag2@@": "Voosuuna rastrit saab luua funktsiooni Flow Direction (voosuund) abil.",
	"@@Flow-Distance_Flow-Direction-Type_tag0@@": "Määratleb sisendvoosuuna rastri tüübi.",
	"@@Flow-Distance_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Sisendvoosuuna rastri tüüp on D8. See on vaikimisi valik.",
	"@@Flow-Distance_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Sisendvoosuuna raster on D-Infinity (DINF) tüüpi.",
	"@@Flow-Distance_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Sisendvoosuuna raster on mitme voo suuna (MFD) tüüpi.",
	"@@Flow-Distance_Statistics-Type_tag0@@": "Määrab statistikatüübi, mida kasutatakse vookauguse arvutamiseks mitmel vooteel. Kui igast lahtrist kuni voo lahtrini on ainult üks vootee, annavad kõik statistikatüübid sama tulemuse.",
	"@@Flow-Distance_Statistics-Type_tag1@@": "<strong>Minimaalne</strong>--Kui on olemas mitu vooteed, minimaalne voo vahemaa arvutatuna. See on vaikimisi valik.",
	"@@Flow-Distance_Statistics-Type_tag3@@": "<strong>Kaalutud keskmine</strong>--mitme vootee olemasolul arvutatakse vookaalu kaalutud keskmine. Kaalutud keskmise arvutamiseks kasutatakse kaaludena voohulka lahtrist allavoolu asuvatesse naaberlahtritesse.",
	"@@Flow-Distance_Statistics-Type_tag5@@": "<strong>Maksimaalne</strong>--Kui on olemas mitu vooteed, maksimaalne voo vahemaa arvutatuna.",
	"@@Flow-Distance_Stream-Raster_tag0@@": "Sisendvoo raster, mis kujutab lineaarset voovõrku.",
	"@@Flow-Distance_Surface-Raster_tag0@@": "Sisendraster, mis kujutab pidevat kõrguspinda.",
	"@@Flow-Length_Direction-of-Measurement_tag0@@": "Mõõtmise suund piki vooteed.",
	"@@Flow-Length_Direction-of-Measurement_tag1@@": "<strong>Allavoolu</strong>--Arvutab languskauguse piki vooteed, igast lahtrist kuni neeluni või väljalaskeavani rastri servas.",
	"@@Flow-Length_Direction-of-Measurement_tag3@@": "<strong>Ülesvoolu</strong>--Arvutab pikima tõusutee mööda vooteed, igast lahtrist kuni drenaažijaotuse ülaosani.",
	"@@Flow-Length_Flow-Direction-Raster_tag0@@": "Sisendraster, mis näitab voo suunda igast pikslist välja.",
	"@@Flow-Length_Flow-Direction-Raster_tag1@@": "Voosuuna rastri saab luua funktsiooni <strong>voosuund</strong>abil.",
	"@@Flow-Length_Weight-Raster_tag0@@": "Valikuline sisendraster igale lahtrile kaalu rakendamiseks.",
	"@@Flow-Length_Weight-Raster_tag1@@": "Kui kaalu rastrit pole määratud, rakendatakse igale lahtrile vaikemass 1.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag0@@": "Näitab, kas statistiline arvutus ignoreerib ${NoData} väärtusi.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag1@@": "<strong>Märgitud</strong>--Määrab, et kui ${NoData} väärtus on naabruses olemas, siis ${NoData} väärtust ignoreeritakse. Väljundväärtuse määramisel kasutatakse ainult selle naabruse lahtreid, millel on andmeväärtused. See on vaikimisi valik.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag3@@": "<strong>Märkimata</strong>--Määrab, et kui mõne naabruse lahtri väärtus on ${NoData}, siis töötlemislahtri väljund on ${NoData}.",
	"@@Focal-Statistics_Neighborhood_tag0@@": "Iga lahtri ümber oleva ala kuju, mida kasutatakse statistika arvutamiseks.",
	"@@Focal-Statistics_Neighborhood_tag1@@": "Igal naabrusel on lisaparameetrid, millega kujundit määratleda.",
	"@@Focal-Statistics_Neighborhood_tag2@@": "Annulus, siseraadius, väliraadius",
	"@@Focal-Statistics_Neighborhood_tag3@@": "Ring, raadius",
	"@@Focal-Statistics_Neighborhood_tag4@@": "Ebakorrapärane, laius, kõrgus, naabruse väärtused",
	"@@Focal-Statistics_Neighborhood_tag5@@": "Ristkülik, laius, kõrgus",
	"@@Focal-Statistics_Neighborhood_tag6@@": "Kiil, raadius, alustamise nurk, lõpunurk",
	"@@Focal-Statistics_Neighborhood_tag7@@": "Kaal, laius, kõrgus, naabruse väärtused",
	"@@Focal-Statistics_Neighborhood_tag8@@": "Ebaregulaarne naabrus võimaldab määratleda töötlemislahtri ümber ebakorrapärase kujuga naabruse. Naabruskerneli tabeli määratlemiseks kasutage naabrusväärtuste tabelit. Lahtri asukoha väärtus 0 näitab, et lahter ei kuulu naabrusesse ja seda ei kasutata töötlemiseks. Lahtri asukoha väärtus 0 näitab, et lahter ei kuulu naabrusesse ja seda ei kasutata töötlemiseks.",
	"@@Focal-Statistics_Neighborhood_tag9@@": "Kaalu naabrus on sarnane ebaregulaarse naabruse tüübiga, kuna see võimaldab määratleda töötlemislahtri ümber ebakorrapärase naabruse, kuid lisaks võimaldab see rakendada sisendväärtustele kaalu. Kaalu tuumas olevad väärtused määravad, millised lahtripositsioonid tuleks naabrusesse kaasata, ja kaalud, mille võrra need korrutatakse. Lahtri töötlemiseks välistamiseks kasutage väärtust 0. Positiivsed, negatiivsed ja kümnendkoha väärtused on kaaludena kasutamiseks sobivad valikud. Naabrustüübi puhul toetatakse ainult keskmise, standardhälbe või summa statistikat.",
	"@@Focal-Statistics_Percentile-Value_tag0@@": "Tähistab, millist protsentiili arvutada, kui statistika tüübiks valitakse <strong>protsentiil</strong>. 90. protsentiili vaikeväärtus on 90.",
	"@@Focal-Statistics_Percentile-Value_tag3@@": "Väärtused võivad olla vahemikus 0 kuni 100. 0. protsentiil on sisuliselt võrdne miinimumstatistikaga ja 100. protsentiiliga, mis on võrdne maksimumiga, välja arvatud juhul, kui tulemuseks on ujukomaarv. Väärtus 50 annab sisuliselt sama tulemuse kui mediaanstatistika.",
	"@@Focal-Statistics_Raster_tag0@@": "Nõutav sisendraster.",
	"@@Focal-Statistics_Statistics-Type_tag0@@": "Arvutatav statistikatüüp.",
	"@@Focal-Statistics_Statistics-Type_tag1@@": "<strong>Enamus</strong>--Arvutab naabruse lahtrite enamuse (kõige sagedamini esineva väärtuse).",
	"@@Focal-Statistics_Statistics-Type_tag3@@": "<strong>Maksimum</strong>--Arvutab naabruse lahtrite maksimumväärtuse (suurima väärtuse).",
	"@@Focal-Statistics_Statistics-Type_tag5@@": "<strong>Keskmine</strong>--Arvutab naabruse lahtrite keskmise väärtuse.",
	"@@Focal-Statistics_Statistics-Type_tag7@@": "<strong>Mediaan</strong>--Arvutab naabruse lahtrite mediaani.",
	"@@Focal-Statistics_Statistics-Type_tag9@@": "<strong>Miinimum</strong>--Arvutab naabruse lahtrite minimaalse (vähima) väärtuse.",
	"@@Focal-Statistics_Statistics-Type_tag11@@": "<strong>Vähemus</strong>--Arvutab naabruse lahtrite vähemuse (kõige harvemini esineva väärtuse).",
	"@@Focal-Statistics_Statistics-Type_tag13@@": "<strong>Protsentiil</strong>--Arvutab naabruse lahtrite protsentiili. Arvutatava protsentiili saate määrata parameetriga <strong>protsentiili väärtus</strong>.",
	"@@Focal-Statistics_Statistics-Type_tag17@@": "<strong>Vahemik</strong>--Arvutab naabruse lahtrite kauguse (erinevuse suurima ja väikseima väärtuse vahel).",
	"@@Focal-Statistics_Statistics-Type_tag19@@": "<strong>Standardhälve</strong>--Arvutab naabruse lahtrite standardhälbe.",
	"@@Focal-Statistics_Statistics-Type_tag21@@": "<strong>Summa</strong>--Arvutab naabruse lahtrite summa (kõigi väärtuste kogusumma).",
	"@@Focal-Statistics_Statistics-Type_tag23@@": "<strong>Variatsioon</strong>--Arvutab naabruse lahtrite teisendi (kordumatute väärtuste arvu).",
	"@@Focal-Statistics_Statistics-Type_tag25@@": "Kui sisendraster on ujukomaga, on saadaval ainult statistika keskmised, maksimumid, mediaanid, miinimumid, protsentiil, vahemik, standardhälve ja summa.",
	"@@Focal-Statistics_Statistics-Type_tag26@@": "Keskmise, mediaani, protsentiili ja standardhälbe korral on väljund alati ujukoma.",
	"@@Focal-Statistics_Statistics-Type_tag27@@": "Statistika vaiketüüp on keskmine.",
	"@@Geometric_Constant-Z_tag0@@": "Saate määrata geomeetrilise funktsiooni jaoks kasutatava konstantse kõrguse.",
	"@@Geometric_DEM_tag0@@": "Saate määrata geomeetrilise funktsiooni jaoks kasutatava DEMi. Mosaiikandmestikus sisalduvat DEMi saab kasutada rasterandmestikuna või mosaiikandmestikuna, mille väljundiks on DEM.",
	"@@Geometric_Geoid_tag0@@": "Enamik kõrgusandmestikud, näiteks USGS NED või ArcGIS Online World Elevation on ortomeetrilised kõrgused, seetõttu on vaja valida geoidi korrektsioon ühilduvuseks satelliidi RPC-dega, mis nõuavad ellipsoidset kõrgust. Märkige ära märkeruut <strong>Geoid</strong> geoidi (EGM96) korrektsiooni rakendamiseks z-väärtustele, välja arvatud juhul, kui teie DEM-ile on juba viidatud ellipsoidaalsetele kõrgustele.",
	"@@Geometric_Method_tag0@@": "Valige geomeetrilise funktsiooni jaoks kõrguse meetod:",
	"@@Geometric_Method_tag1@@": "Kasutage konstant Z-väärtust--määrake konstantne kõrgus, et täita geomeetrilist funktsiooni.",
	"@@Geometric_Method_tag2@@": "Kasutage funktsiooni DEM--määrake funktsiooni Geometric (Geomeetriline) täitmiseks DEM.",
	"@@Geometric_Raster_tag0@@": "Sisendraster.",
	"@@Geometric_Z-Factor_tag0@@": "Satelliidi ratsionaalsed polünoomi koefitsiendid (RPC) skaleeritakse kõrguse andmestike jaoks vertikaalsete ühikutega meetrites. Kui teie kõrgus kasutab teisi vertikaalseid ühikuid, sisestage <strong>Z-tegur</strong>, et arvestada ümber meetritesse. Näiteks kui teie kõrgusühikud on jalgades, kasutaksite kõrgusühikute teisendamiseks jalgadest meetriteks väärtust 0,3048.",
	"@@Geometric_Z-Offset_tag0@@": "DEMi kõrguse väärtusele lisatav baasväärtus. Seda võib kasutada selliste kõrguste nihutamiseks, mis ei alga merepinnast.",
	"@@Geometric_Tolerance_tag0@@": "Määrake geomeetrilise funktsiooni maksimaalne lubatud viga pikslite arvuna. NITF (NCDRD) rastritüübi vaikeväärtus on kaks.",
	"@@Grayscale_Raster_tag0@@": "Sisendraster.",
	"@@Grayscale_Conversion-Parameters_tag0@@": "Sisendrastrit sisaldava iga riba kaalud.",
	"@@Greater-Than_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Greater-Than_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Greater-Than_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Greater-Than_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Greater-Than_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Greater-Than_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat piksli suurust.",
	"@@Greater-Than_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Greater-Than_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Greater-Than_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Greater-Than_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Greater-Than_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Greater-Than_Raster_tag0@@": "Testitav sisend, et teha kindlaks, kas see on suurem kui teine sisend.",
	"@@Greater-Than_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Greater-Than_Raster2_tag0@@": "Sisend, mille suhtes esimest sisendit katsetatakse, on suurem kui.",
	"@@Greater-Than_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Greater-Than-Equal_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Greater-Than-Equal_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Greater-Than-Equal_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Greater-Than-Equal_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtrisuurust. See on vaikimisi valik.",
	"@@Greater-Than-Equal_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Greater-Than-Equal_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Greater-Than-Equal_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Greater-Than-Equal_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Greater-Than-Equal_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Greater-Than-Equal_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Greater-Than-Equal_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Greater-Than-Equal_Raster_tag0@@": "Testitav sisend, et teha kindlaks, kas see on suurem või võrdne teise sisendiga.",
	"@@Greater-Than-Equal_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Greater-Than-Equal_Raster2_tag0@@": "Sisend, mille suhtes esimest sisendit katsetatakse, on suurem kui või võrdne.",
	"@@Greater-Than-Equal_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Heat-Index_Heat-Index-Units_tag0@@": "Väljundrastriga seotud mõõtühik. Saadaolevad väljundühikud on Celsius, Fahrenheit ja Kelvin.",
	"@@Heat-Index_Relative-Humidity-Raster_tag0@@": "Üheribaline raster, kus piksli väärtused tähistavad suhtelist õhuniiskust protsendiväärtusena vahemikus 0 –100.",
	"@@Heat-Index_Temperature-Raster_tag0@@": "Ühe ribaga raster, kus piksli väärtused tähistavad välisõhu temperatuuri.",
	"@@Heat-Index_Temperature-Units_tag0@@": "Sisendtemperatuuri rastriga seotud mõõtühik. Saadaolevad sisendühikud on Celsius, Fahrenheit ja Kelvin.",
	"@@Hillshade_Altitude_tag0@@": "Kõrgus on päikese tõusunurk horisondist kõrgemal ja ulatub 0–90 kraadini. Väärtus 0 kraadi näitab, et päike on horisondil, st samal horisontaalsel tasapinnal kui võrdlusraam. Väärtus 90 kraadi näitab, et päike on otse pea kohal.",
	"@@Hillshade_Altitude_tag1@@": "See parameeter kehtib ainult juhul, kui <strong>varjutuspildi tüüp</strong> on <strong>traditsiooniline</strong>. Vaikimisi on horisondi kohal 45 kraadi.",
	"@@Hillshade_Azimuth_tag0@@": "Asimuut on päikese suhteline asukoht horisondi kohal (kraadides). Seda asukohta tähistab päikesenurk, mõõdetuna päripäeva põhja poole. 0 kraadi asimuut näitab põhja, ida on 90 kraadi, lõuna on 180 kraadi ja lääne on 270 kraadi.",
	"@@Hillshade_Azimuth_tag1@@": "See parameeter kehtib ainult juhul, kui <strong>varjutuspildi tüüp</strong> on <strong>traditsiooniline</strong>. Vaikimisi on 315 kraadi, mis on loodest.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag0@@": "Selle valiku kasutamine väldib esemete andmete teisendamist, mis võivad tekkida rastri servades. Väljundpikslid rastri serval või NoData pikslite kõrval asustatakse NoDataga; seetõttu on soovitatav seda parameetrit kasutada ainult kattuvate kõrgusega mosaiikandmekomplektidega. Kui kattuvad pikslid on saadaval, kuvatakse NoData aladel kattuvad piksliväärtused tühjade pikslite asemel.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag1@@": "Märgistamata--bilineaarset andmete teisendamist rakendatakse ühtlaselt teie nõlvavarjutuse andmete teisendamiseks. Kasutage seda suvandit, kui kõrgusrastrite andmeid sisaldav mosaiikandmestik on omavahel ühendatud. See on vaikimisi valik.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag2@@": "Märgitud--bilineaarset andmete teisendamist kasutatakse nõlvavarjutuse sees, välja arvatud rastrite servades või NoData pikslite kõrval. Need pikslid täidetakse NoDataga ja kuvatakse kattuvad piksliväärtused, vähendades nii teravaid servaefekte, mis muidu võivad ilmneda. Kasutage seda suvandit, kui kõrgusrastrite andmeid sisaldav mosaiikandmestik koosneb kattuvatest üksustest või paanidest.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag3@@": "Funktsiooni tulemused võivad sõltuda andmetest. Kui jälgite väljundis paaniääriste artefakte, märkige selle ruudu alternatiivne tingimus.",
	"@@Hillshade_Hillshade-Type_tag0@@": "Juhib nõlvavarjutuse illuminatsiooniallikat:",
	"@@Hillshade_Hillshade-Type_tag1@@": "Traditsiooniline--arvutab nõlvavarjutuse ühe illuminatsiooni suuna järgi. See on vaikimisi valitud. Saate seada <strong>asimuudi</strong> ja <strong>kõrguse</strong> valgusallika asukoha juhtimiseks.",
	"@@Hillshade_Hillshade-Type_tag6@@": "Mitmesuunaline--ühendab mitmest allikast tulevat valgust, et kujutada maastiku täiustatud visuaalsust.",
	"@@Hillshade_Pixel-Size-Factor_tag0@@": "Piksli suuruse tegur arvestab mõõtkava muutustega, kui vaataja suumib kaardiekraanil sisse ja välja. See kontrollib kiirust, millega <strong>Z-tegur</strong> muutub.",
	"@@Hillshade_Pixel-Size-Factor_tag3@@": "See parameeter kehtib ainult juhul, kui <strong>mõõtkava</strong> tüüp on <strong>korrigeeritud</strong>. Vaikeväärtus on 0,024.",
	"@@Hillshade_Pixel-Size-Power_tag0@@": "Piksli suuruse aste arvestab kõrguste muutustega (või mõõtkavaga), kui vaataja suumib kaardiekraanil sisse ja välja. See on astendaja, mida rakendatakse võrrandi piksli suuruse tingimusele, mis kontrollib kiirust, mille juures <strong>Z-tegur</strong> muutub, et vältida märkimisväärset reljeefi kadu.",
	"@@Hillshade_Pixel-Size-Power_tag3@@": "See parameeter kehtib ainult juhul, kui <strong>mõõtkava</strong> tüüp on <strong>korrigeeritud</strong>. Vaikeväärtus on 0,664.",
	"@@Hillshade_Raster_tag0@@": "Sisendkõrgusandmestik.",
	"@@Hillshade_Scaling_tag0@@": "Varjutatud tulemust skaleeritakse dünaamiliselt, reguleerides z-tegurit, kasutades ühte kahest võimalusest:",
	"@@Hillshade_Scaling_tag1@@": "Korrigeeritud--see rakendab mittelineaarset kohandamist vaikimisi <strong>Piksli suuruse aste</strong> and <strong>Piksli suuruse tegur</strong> väärtuste abil, mis mahutavad vaaturi sisse- ja väljalõikamisel mitmesuguseid kõrguse muutusi (skaalat). Parameetri säte <strong>Korrigeeritud</strong> on soovitatav, kui kasutate ülemaailmset andmekogumit.",
	"@@Hillshade_Scaling_tag8@@": "Puudub--skaleerimist ei rakendata. See sobib ideaalselt ühte kohalikku ala hõlmavasse rasterandmestikku. Seda ei soovitata kasutada ülemaailmsete andmestike puhul, millel on suured erinevused kõrgustes või mitme skaalaga kaartides, kuna see tekitab väikeste skaalade juures väikeste variatsioonidega maastikureljeefi.",
	"@@Hillshade_Z-Factor_tag0@@": "Z-tegur on suurendustegur, mida kasutatakse kõrguse väärtuse teisendamiseks. Seda kasutatakse kahel otstarbel:",
	"@@Hillshade_Z-Factor_tag1@@": "kõrgusühikute (meetrid või jalad) teisendamine andmestiku horisontaalsete koordinaatide ühikuteks, mis võivad olla jalad, meetrid või kraadid",
	"@@Hillshade_Z-Factor_tag2@@": "visuaalse efektina vertikaalse liialduse lisamiseks",
	"@@Int_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Int_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Int_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Int_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Int_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Int_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Int_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Int_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Int_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Int_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Int_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Int_Raster_tag0@@": "Sisendraster, mis teisendatakse täisarvuks.",
	"@@Interpolate-Irregular-Data_Cellsize_tag0@@": "Väljundrastri lahtri suurus tuvastatakse automaatselt; aga saate seda muuta. Lahtri suurust saab muuta, kuid rasterandmestiku ulatus jääb samaks.",
	"@@Interpolate-Irregular-Data_Input-Samples_tag0@@": "Sisendpunktide andmed.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag0@@": "Selle funktsiooni jaoks on neli andmete teisendamise meetodit:",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag1@@": "<strong>Pöördkaugusega kaalutud</strong>--Määrab lahtriväärtused, kasutades proovipunktide või -lahtrite kogumi lineaarselt kaalutud kombinatsiooni. Kaal on teadaolevate punktide või lahtrite kauguse pöördfunktsioon.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag3@@": "<strong>Lineaarne säilitamine</strong>--Kasutab ebaregulaarse rastri iga lahtri keskpunktide triangulaarset ebaregulaarset võrku, et interpoleerida pinda, mis seejärel teisendatakse tavaliseks rastriks.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag5@@": "<strong>Loomulik naaber</strong>--Leiab sisendproovide lähima alamhulga päringupunktile ja rakendab neile väärtused proportsionaalsete pindalade alusel väärtuse interpoleerimiseks.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag7@@": "<strong>Lähim naaber</strong>--Arvutab piksli väärtuse lähima piksli abil. Kui lähtepikslit pole olemas, ei saa väljundis uut pikslit luua. See on vaikimisi valik.",
	"@@Interpolate-Irregular-Data_Search-Radius_tag0@@": "Määrab valitud andmete teisendamise meetodi jaoks kaasatavate pikslite arvu. Vaikeväärtus on ${3} pikslit.",
	"@@Interpolate-Irregular-Data_Value-Field_tag0@@": "Kui valite sisendiks punktiobjektiklassi, peate atribuuditabeli välja tuvastama punktide väärtusega",
	"@@Is-Null_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Is-Null_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Is-Null_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Is-Null_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Is-Null_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Is-Null_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Is-Null_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Is-Null_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Is-Null_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Is-Null_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Is-Null_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Is-Null_Raster_tag0@@": "Sisendraster, mida testitakse, et tuvastada lahtrid, mis on ${NoData} (null).",
	"@@Is-Null_Raster_tag1@@": "Sisend võib olla kas täisarv või ujukomaarv.",
	"@@Key-Metadata_Band-Names_tag0@@": "Seda kasutatakse rasterribade nimede alistamiseks. See on komaga eraldatud string, mis tähistab värskendatud ribanimesid.",
	"@@Key-Metadata_Band-Names_tag1@@": "See parameeter on valikuline.",
	"@@Key-Metadata_Metadata-JSON_tag0@@": "Väljaminevasse rastrisse süstitavad võtmetähtsusega paaride kogumit kujutava JSON-stringina kirjeldatud võtmetähtsusega metaandmed. Järgnev on näide JSON-stringist, mida saab selle funktsiooni sisendina kasutada. Kõik selle parameetri sisendid peaksid järgima sama vormingut.",
	"@@Key-Metadata_Metadata-JSON_tag1@@": "JSON-string, mis tähistab peamisi metaandmeid",
	"@@Key-Metadata_Metadata-JSON_tag2@@": "{{ \"CloudCover\": 4, \"BandProperties\":[ { \"BandName\": \"Blue\", \"WavelengthMin\": 445, \"WavelengthMax\": 516 }, { \"BandName\": \"Green\", \"WavelengthMin\": 506, \"WavelengthMax\": 595 }, ]}",
	"@@Key-Metadata_Property-Name_tag0@@": "Alistatava andmestiku taseme võtmeatribuudi nimi.",
	"@@Key-Metadata_Raster_tag0@@": "Raster- või mosaiikandmestik, mis sisaldab peamisi metaandmeid, mida soovite lisada või üle kirjutada.",
	"@@Key-Metadata_Value_tag0@@": "Määratava andmestiku taseme võtmeatribuudi alistuv väärtus.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag0@@": "See parameeter simuleerib kulude katmise jõupingutuste suurenemist, kuna kumulatiivsed kulud suurenevad. Seda kasutatakse ränduri väsimuse modelleerimiseks. Kasvavat akumuleeruvat kulu lahtrisse jõudmiseks korrutatakse resistentsuse määraga ja lisatakse hilisemasse lahtrisse kolimise kulule.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag1@@": "See on liitintressimäära valemi muudetud versioon, mida kasutatakse lahtris liikumise ilmse kulu arvutamiseks. Kui resistentsuse määra väärtus suureneb, suurendab see hiljem külastatavate lahtrite maksumust. Mida suurem on resistentsuse määr, seda suurem on järgmise lahtrini jõudmise kulu, mis arvutatakse iga järgneva liikumise kohta. Kuna resistentsuse määr on sarnane liitkursiga ja üldiselt on kumulatiivsed kuluväärtused väga suured, soovitatakse sõltuvalt kumulatiivsetest kuluväärtustest kasutada väikeseid resistentsuse määrasid, näiteks 0,005 või isegi väiksemaid.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag2@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Least-Cost-Path_Capacity_tag0@@": "Määratleb ränduri kuluvõime allika jaoks. Kuluarvutusi jätkatakse iga allika puhul kuni määratud võimsuse saavutamiseni.",
	"@@Least-Cost-Path_Capacity_tag1@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Least-Cost-Path_Cost-Raster_tag0@@": "Nõutav sisendraster määrab kulu või takistuse tasapinnalisel liikumisel läbi iga lahtri. Lahtri iga asukoha väärtus väljendab vahemaa ühiku maksumuse liikumisel läbi selle. Iga lahtri asukoha väärtus korrutatakse lahtri resolutsiooniga ja see kompenseerib ka diagonaalliikumist, et saada läbi lahtri liikumise kogukulu.",
	"@@Least-Cost-Path_Cost-Raster_tag1@@": "<strong>Kulurastri</strong>väärtus võib täisarv või ujuva väärtusega arv, kuid ei tohi olla negatiivne või null.",
	"@@Least-Cost-Path_Destination-Field_tag0@@": "Seda välja kasutatakse väärtuste määramiseks sihtkoha asukohtadele.",
	"@@Least-Cost-Path_Destination-Raster_tag0@@": "Nõutav sisendraster, mis identifitseerib pikslid, millest alates määratakse vähima kuluga tee kõige odavama allikani. See sisend koosneb pikslitest, millel on kehtivad väärtused, ja ülejäänud pikslid tuleb määrata ${NoData}. 0 väärtused on kehtivad.",
	"@@Least-Cost-Path_Maximum-Distance_tag0@@": "Künnis, mida kumulatiivsed kuluväärtused ei tohi ületada. Kui kumulatiivne kuluvahemaa ületab selle väärtuse, siis lahtri asukoha väljundväärtus on ${NoData}. Maksimaalne kaugus määratleb, mil määral arvutatakse kumulatiivsed kuluvahemaad. Vaikekaugus on väljundrastri ulatuses.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag0@@": "See parameeter võimaldab juhtida liikumisviisi või suurusjärku allika juures. Mida suurem on kordaja, seda suurem on iga lahtri läbimise kulu.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag1@@": "Väärtused peavad olema suuremad kui null. Vaikeväärtus on 1.",
	"@@Least-Cost-Path_Path-Type_tag0@@": "Märksõna, mis määrab viisi, kuidas väärtusi ja tsoone saab sihtkoha sisendandmetel tõlgendada tee kuluarvutustes.",
	"@@Least-Cost-Path_Path-Type_tag1@@": "<strong>Parim üksik</strong>--Sihtkoha sisendandmetel tuletatakse vähima kuluga tee kõigi pikslite puhul pikslist, millest on lähtepikslini vähima kuluga tee.",
	"@@Least-Cost-Path_Path-Type_tag3@@": "<strong>Iga lahter</strong>--Määratakse vähima kuluga tee iga piksli kohta, mille sisendsihtkoha andmetes on kehtivad väärtused, ja salvestatakse väljundrastrisse. Sihtkoha sisendandmete iga lahtrit käsitletakse eraldi ja igast lahtrist määratakse vähima kuluga tee.",
	"@@Least-Cost-Path_Path-Type_tag5@@": "<strong>Iga tsoon</strong>--Määratakse vähima kuluga tee iga tsooni kohta sisendsihtkoha andmete hulgas ja salvestatakse väljundrastrisse. Iga tsooni odavaim tee algab pikslist, mille tsooni kaalutud kaugus on kõige odavam.",
	"@@Least-Cost-Path_Source-Raster_tag0@@": "See on nõutav sisendraster, mis tuvastab lahtrid või asukohad, kust arvutatakse iga väljundlahtri asukoha kohta väikseim akumuleeritud kulukaugus.",
	"@@Least-Cost-Path_Start-Cost_tag0@@": "Algkulu, millest alustada kuluarvutusi. See parameeter võimaldab määrata allikaga seotud püsikulu. Selle asemel, et alustada maksumusega 0, algab kulualgoritm määratud väärtusega.",
	"@@Least-Cost-Path_Start-Cost_tag1@@": "Väärtus peab olema null või suurem. Vaikeväärtus on 0.",
	"@@Least-Cost-Path_Travel-Direction_tag0@@": "Määratleb reisija suuna allika takistuse määra ja lähtekulu arvestamisel.",
	"@@Least-Cost-Path_Travel-Direction_tag1@@": "<strong>Allikast</strong>--Allikakindluse määr ja allika algkulu rakendatakse sisendallikast alustades ja mittelähtelahtritesse liikudes. See on vaikimisi valik.",
	"@@Least-Cost-Path_Travel-Direction_tag3@@": "<strong>Allikasse</strong>--Allikakindluse määr ja allika algkulu rakendatakse alates igast mittelähtelahtrist ja liikudes tagasi sisendallikasse.",
	"@@Least-Cost-Path_Travel-Direction_tag5@@": "Määrake kas võtmesõna <strong>Allikast</strong> või <strong>Allikasse</strong>, mida rakendatakse kõigile allikatele, või määrake väli <strong>allikarastris</strong>, mis sisaldab iga allika liikumissuuna identifitseerimise võtmesõnu. See väli peab sisaldama stringi ${FROM_SOURCE} või ${TO_SOURCE}.",
	"@@Less-Than_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Less-Than_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Less-Than_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Less-Than_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Less-Than_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Less-Than_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Less-Than_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Less-Than_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Less-Than_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Less-Than_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Less-Than_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Less-Than_Raster_tag0@@": "Testitav sisend, et teha kindlaks, kas see on väiksem kui teine sisend.",
	"@@Less-Than_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Less-Than_Raster2_tag0@@": "Sisend, mille suhtes esimest sisendit katsetatakse, on väiksem kui.",
	"@@Less-Than_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Less-Than-Equal_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Less-Than-Equal_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Less-Than-Equal_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Less-Than-Equal_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Less-Than-Equal_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Less-Than-Equal_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Less-Than-Equal_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Less-Than-Equal_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Less-Than-Equal_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Less-Than-Equal_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Less-Than-Equal_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Less-Than-Equal_Raster_tag0@@": "Testitav sisend, et teha kindlaks, kas see on väiksem või võrdne teise sisendiga.",
	"@@Less-Than-Equal_Raster_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Less-Than-Equal_Raster2_tag0@@": "Sisend, mille suhtes esimest sisendit katsetatakse, on väiksem kui või võrdne.",
	"@@Less-Than-Equal_Raster2_tag1@@": "Selle parameetri sisendina saab kasutada konstantset väärtust, kui teisele parameetrile on määratud raster.",
	"@@Ln_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Ln_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Ln_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Ln_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Ln_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Ln_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Ln_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Ln_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Ln_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Ln_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Ln_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Ln_Raster_tag0@@": "Sisendväärtused, mille abil saab leida loomuliku logaritmi (Ln).",
	"@@Log10_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Log10_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Log10_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Log10_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Log10_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Log10_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Log10_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Log10_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Log10_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Log10_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Log10_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Log10_Raster_tag0@@": "Sisendväärtused, mille põhjal leida 10. baaslogaritmi.",
	"@@Log2_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Log2_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Log2_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Log2_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Log2_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Log2_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Log2_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Log2_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Log2_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Log2_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Log2_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Log2_Raster_tag0@@": "Aluslogaritmi leidmiseks vajalikud sisendväärtused.",
	"@@Lookup_Field_tag0@@": "Väli, mis sisaldab uue rastri jaoks soovitud väärtusi.",
	"@@Lookup_Field_tag1@@": "See peab olema numbriline tüüp.",
	"@@Lookup_Raster_tag0@@": "Sisendraster, mis sisaldab välja, millest luua uus raster.",
	"@@Lookup_Raster_tag1@@": "See võib olla täisarv või ujukomatüüp.",
	"@@Mask_Included-Ranges_tag0@@": "Kaasatud vahemikke saab määrata igale ribale, määrates miinimum- ja maksimumväärtuse; kõik vahemikust väljaspool olevad väärtused tagastatakse kui ${NoData}. Piksel on kaasatud, kui piksli väärtus jääb mõnda määratletud vahemikku. Seega, kui riba 1 vahemik on 5–10 ja riba 2 vahemik on 15–20 ja riba 1 piksli väärtus on 8, siis seda pikslit ei maskeerita.",
	"@@Mask_NoData-Interpretation_tag0@@": "See viitab, kuidas <strong>${NoData} väärtused</strong> mõjutavad väljundpilti.",
	"@@Mask_NoData-Interpretation_tag3@@": "Saate valida kahe järgmise valiku vahel:",
	"@@Mask_NoData-Interpretation_tag4@@": "<strong>Vastenda kõik</strong>--Iga riba jaoks määratud ${NoData} väärtused peavad olema samas pikslis, et väljundpilt sisaldaks ${NoData} pikslit.",
	"@@Mask_NoData-Interpretation_tag6@@": "<strong>Vastenda mõni</strong>--Kui teie määratud väärtus ${NoData} ilmub piksli jaoks kindlaksmääratud sagedusribas, on see väljundpildi piksel ${NoData}. See on vaikimisi valik.",
	"@@Mask_NoData-Values_tag0@@": "NoData väärtusi saab määrata igale ribale. Kui sisestate tühikuga eraldatud loendi, saate määrata rohkem kui ühe väärtuse.",
	"@@Mask_Raster_tag0@@": "Sisendraster.",
	"@@Minus_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Minus_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Minus_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Minus_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Minus_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Minus_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Minus_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Minus_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Minus_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Minus_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Minus_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Minus_Raster_tag0@@": "Sisend, millest lahutada teise sisendi väärtused.",
	"@@Minus_Raster_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Minus_Raster2_tag0@@": "Esimese sisendi väärtustest lahutatavad sisendväärtused.",
	"@@Minus_Raster2_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@ML-Classify_Raster_tag0@@": "Sisendraster, mis klassifitseeritakse maksimaalse tõenäosuse klassifitseerimise algoritmi abil.",
	"@@ML-Classify_Signature-File-or-URL_tag0@@": "${.gsg} allkirjafail.",
	"@@Mod_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Mod_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Mod_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Mod_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Mod_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Mod_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Mod_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Mod_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Mod_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Mod_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Mod_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Mod_Raster_tag0@@": "Lugeja sisend.",
	"@@Mod_Raster_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Mod_Raster2_tag0@@": "Nimetaja sisend.",
	"@@Mod_Raster2_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Mosaic-Rasters_Operation_tag0@@": "Kui teil on kaks või enam kattuvat pilti, lahendage kõik konfliktid. Valikud sisaldavad järgmist:",
	"@@Mosaic-Rasters_Operation_tag1@@": "<strong>Sulatus</strong>--Saate arvutada ja kuvada kattuvate pikslite keskmise, andes rohkem kaalu pikslitele, mis on naaberpiltidele lähemal, et väljundiks oleks sujuvam pilt. See on vaikimisi valik.",
	"@@Mosaic-Rasters_Operation_tag3@@": "<strong>Esimene</strong>--Kuvage pikslid esimesest pildist antud ala kattuvate piltide loendis.",
	"@@Mosaic-Rasters_Operation_tag5@@": "<strong>Viimane</strong>--Kuvage pikslid viimasest pildist antud ala kattuvate piltide loendis.",
	"@@Mosaic-Rasters_Operation_tag7@@": "<strong>Max</strong>--Saate kuvada kõigi kattuvate kihtide kõrgeima väärtusega piksli. Selle suvandiga ei garanteeri te ainult ühe pildi pikslite kuvamist kattuval alal, vaid pigem kõigi võimalike kihtide kombinatsiooni.",
	"@@Mosaic-Rasters_Operation_tag9@@": "<strong>Keskmine</strong>--Saate arvutada ja kuvada kattuvate pikslite keskmise.",
	"@@Mosaic-Rasters_Operation_tag11@@": "<strong>Min</strong>--Saate kuvada kõigi kattuvate kihtide madalaima väärtusega piksli. Selle suvandiga ei garanteeri te ainult ühe pildi pikslite kuvamist kattuval alal, vaid pigem kõigi võimalike kihtide kombinatsiooni.",
	"@@Mosaic-Rasters_Rasters_tag0@@": "Valige rastrid, mida soovite ühe pildi moodustamiseks koos mosaiikida.",
	"@@NDVI_Infrared-Band-ID_tag0@@": "Määrab riba ID, mis tähistab elektromagnetilise spektri lähi-infrapuna osa.",
	"@@NDVI_Raster_tag0@@": "Multispektraalne sisendraster.",
	"@@NDVI_Scientific-Output_tag0@@": "Väljundväärtused jäävad vahemikku -1,0 kuni 1,0, mida kasutatakse paljudes teaduslikes rakendustes.",
	"@@NDVI_Visible-Band-ID_tag0@@": "Määrab riba ID, mis tähistab elektromagnetilise spektri punast osa.",
	"@@NDVI-Colorized_Color-Ramp_tag0@@": "Valige ripploendist eelmääratud värviskeem.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag0@@": "Valige, millist tüüpi värviskeem NDVI väljundit värvida:",
	"@@NDVI-Colorized_Color-Scheme-Type_tag1@@": "Värvikaart--valige ripploendist eelmääratud värvikaart. Teise võimalusena saate sirvida püsiva värvikaardifailini, mis on olemas.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag2@@": "Värvipass--valige ripploendist eelmääratud värviskeem.",
	"@@NDVI-Colorized_Colormap_tag0@@": "Valige ripploendist eelmääratud värvikaart. Teise võimalusena saate sirvida olemasoleva värvikaardifailini.",
	"@@NDVI-Colorized_Infrared-Band-ID_tag0@@": "Määrab riba ID, mis tähistab elektromagnetilise spektri lähi-infrapuna osa.",
	"@@NDVI-Colorized_Raster_tag0@@": "Multispektraalne sisendraster.",
	"@@NDVI-Colorized_Scientific-Output_tag0@@": "Väljundväärtused jäävad vahemikku -1,0 kuni 1,0, mida kasutatakse paljudes teaduslikes rakendustes.",
	"@@NDVI-Colorized_Visible-Band-ID_tag0@@": "Määrab riba ID, mis tähistab elektromagnetilise spektri punast osa.",
	"@@Negate_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Negate_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Negate_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Negate_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Negate_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist piksli suurust.",
	"@@Negate_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Negate_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Negate_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Negate_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Negate_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Negate_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Negate_Raster_tag0@@": "Negatiivne sisendraster (korrutatud -1-ga).",
	"@@Nibble_Mask-Raster_tag0@@": "Massina kasutatav nõutav sisendraster.",
	"@@Nibble_Mask-Raster_tag1@@": "Lahtrid, mille väärtus on NoData, nihutatakse sisendisse <strong>Raster</strong>.",
	"@@Nibble_Mask-Raster_tag4@@": "Maskraster võib olla täisarv või ujukomaarv.",
	"@@Nibble_Nibble-NoData-cells_tag0@@": "Määratleb, kas sisendrastri NoData lahtrid jäävad väljundrastrisse NoData.",
	"@@Nibble_Nibble-NoData-cells_tag1@@": "<strong>Ei</strong>--Määrab, et sisendrastri NoData lahtrid jäävad väljundisse NoData. See on vaikimisi valik.",
	"@@Nibble_Nibble-NoData-cells_tag3@@": "<strong>Jah</strong>--Määrab, et sisendrastris ja maskis olevad NoData lahtrid saab lihvida kehtivateks väljundlahtrite väärtusteks.",
	"@@Nibble_Raster_tag0@@": "Vajalik sisendraster, mis naelutatakse.",
	"@@Nibble_Raster_tag1@@": "Sisendraster võib olla täisarv või ujukoma tüüp.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag0@@": "Määratleb, kas sisendrastri ${NoData} väärtustel lubatakse maskrastri määratletud alale naelutada.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag1@@": "<strong>Jah</strong>--Määratleb, et lähima naabruse väärtust kasutatakse juhul, kui see on ${NoData} või mõni teine sisendrastris sisalduv andmeväärtus. Sisendrastri ${NoData} väärtused võivad vabalt nihkuda maskis määratletud piirkondadesse, kui need on lähimad naabrid. See on vaikimisi valik.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag3@@": "<strong>Ei</strong>--Määrab, et maski rastris määratletud aladesse saab nihutada ainult andmeväärtusi. ${NoData} väärtused sisendrastris ei tohi nihutada maskide rastris määratletud piirkondadesse isegi siis, kui need on lähimad naabrid.",
	"@@Nibble_Zone-Raster_tag0@@": "Sisendtsooni raster.",
	"@@Nibble_Zone-Raster_tag1@@": "Tsoon on kõik rastri lahtrid, millel on sama väärtus, olenemata sellest, kas need on külgnevad või mitte. Sisendtsooni kiht määratleb tsoonide kuju, väärtused ja asukohad. Tsooni raster võib olla täisarv või ujukomatüüp.",
	"@@Not-Equal_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Not-Equal_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Not-Equal_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Not-Equal_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Not-Equal_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Not-Equal_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Not-Equal_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Not-Equal_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Not-Equal_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Not-Equal_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Not-Equal_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Not-Equal_Raster_tag0@@": "Sisend, millega võrreldakse ebavõrdsust teise sisendi järgi.",
	"@@Not-Equal_Raster_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Not-Equal_Raster2_tag0@@": "Sisendit, mida võrreldakse ebavõrdsuse esimese sisendiga.",
	"@@Not-Equal_Raster2_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Pansharpening_Multispectral_tag0@@": "Multispektraalne raster, mida soovite teravdada, kasutades pankromaatilist riba.",
	"@@Pansharpening_Panchromatic_tag0@@": "Kõrge eraldusvõimega üheribaline raster, mida kasutatakse madalama eraldusvõimega multispektrilise rastri teravdamiseks.",
	"@@Pansharpening_Pansharpening-Type_tag0@@": "Valige paanide teravdamise algoritm, mida soovite kasutada.",
	"@@Pansharpening_Pansharpening-Type_tag1@@": "Brovey--kasutab andmete ühildamiseks spektrimudelil põhinevat Brovey algoritmi.",
	"@@Pansharpening_Pansharpening-Type_tag2@@": "Esri--kasutab andmete ühildamiseks spektrimudelil põhinevat Esri algoritmi.",
	"@@Pansharpening_Pansharpening-Type_tag3@@": "Gram-Schmidt--kasutab Gram-Schmidti spektraalse teravdamise algoritmi multispektraalsete andmete teravdamiseks.",
	"@@Pansharpening_Pansharpening-Type_tag4@@": "IHS--kasutab andmete ühildamiseks intensiivsuse, värvitooni ja küllastuse värviruumi.",
	"@@Pansharpening_Pansharpening-Type_tag5@@": "Keskmine--kasutab punase, rohelise ja sinise väärtuse ja pankromaatilise piksli väärtuse keskmist väärtust.",
	"@@Pansharpening_Weights_tag0@@": "Määrake punase, rohelise, sinise ja infrapuna ribade kaal. Kõik väärtused peavad olema vahemikus 0–1.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "See parameeter simuleerib kulude katmise jõupingutuste suurenemist, kuna kumulatiivsed kulud suurenevad. Seda kasutatakse ränduri väsimuse modelleerimiseks. Kasvavat akumuleeruvat kulu lahtrisse jõudmiseks korrutatakse resistentsuse määraga ja lisatakse hilisemasse lahtrisse kolimise kulule.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "See on liitintressimäära valemi muudetud versioon, mida kasutatakse lahtris liikumise ilmse kulu arvutamiseks. Kui resistentsuse määra väärtus suureneb, suurendab see hiljem külastatavate lahtrite maksumust. Mida suurem on resistentsuse määr, seda suurem on järgmise lahtrini jõudmise kulu, mis arvutatakse iga järgneva liikumise kohta. Kuna resistentsuse määr on sarnane liitkursiga ja üldiselt on kumulatiivsed kuluväärtused väga suured, soovitatakse sõltuvalt kumulatiivsetest kuluväärtustest kasutada väikeseid resistentsuse määrasid, näiteks 0,005 või isegi väiksemaid.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Path-Distance_Capacity_tag0@@": "Määratleb ränduri kuluvõime allika jaoks. Kuluarvutusi jätkatakse iga allika puhul kuni määratud võimsuse saavutamiseni.",
	"@@Path-Distance_Capacity_tag1@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Path-Distance_Cost-Raster_tag0@@": "Nõutav sisendraster määrab kulu või takistuse tasapinnalisel liikumisel läbi iga lahtri. Lahtri iga asukoha väärtus väljendab vahemaa ühiku maksumuse liikumisel läbi selle. Iga lahtri asukoha väärtus korrutatakse lahtri resolutsiooniga ja see kompenseerib ka diagonaalliikumist, et saada läbi lahtri liikumise kogukulu.",
	"@@Path-Distance_Cost-Raster_tag1@@": "<strong>Kulurastri</strong>väärtus võib täisarv või ujuva väärtusega arv, kuid ei tohi olla negatiivne või null.",
	"@@Path-Distance_horizontalfactor_tag0@@": "<p>Määratleb seose horisontaalse kuluteguri ja horisontaalse liikumisnurga (HRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kahte akronüümi: HF ja HRMA. HF tähistab horisontaalset tegurit, mis määratleb horisontaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. HRMA tähistab horisontaalset suhtelist liikumisnurka, mis identifitseerib lahtri horisontaalse suuna ja liikumissuuna vahelise nurga.</p><p><strong>Horisontaalsed teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--näitab, et kui HRA on lõikenurgast väiksem, seatakse HF väärtusele, mis on seotud nullteguriga; muidu on see lõpmatus.</li><li><strong>Edasisuunas</strong>--Näitab, et lubatud on ainult edasisuunas liikumine HRMA peab olema suurem kui 0 või sellega võrdne ja alla 90 kraadi (0 <= HRMA < 90). Kui HRMA on suurem kui 0 ja väiksem kui 45 kraadi, seatakse lahtri HF väärtuseks, mis on seotud nullteguriga. Kui HRMA on suurem kui 45 kraadi või sellega võrdne, kasutatakse külgväärtuse teisendaja väärtust. Iga HRMA väärtuse HF, mis on võrdne või suurem kui 90 kraadi, on seatud lõpmatuseni.</li><li><strong>Lineaarne</strong>--Määrab, et HF on HRMA lineaarne funktsioon.</li><li><strong>Pöördlineaarne</strong>--Määrab, et HF on HRMA pöördlineaarne funktsioon.</li><li><strong>Tabel</strong>--Tuvastab, et HF-de määramiseks kasutatava horisontaalteguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Horisontaalsete tegurite modifikaatorid on järgmised:</p><ul><li><strong>Nulltegur</strong>--Horisontaalne tegur, mida kasutatakse, kui HRMA on null. See tegur positsioneerib y-lõikepunkti mis tahes horisontaalse teguri funktsiooni jaoks.</li><li><strong>Lõikenurk</strong>--Määratleb HRMA nurga, millest kaugemale HF seatakse lõpmatusse.</li><li><strong>Kalle</strong>--Määratleb sirgjoone kalde, mida kasutatakse koos horisontaalse teguri märksõnadega <strong>Lineaarne</strong>ja<strong>Pöördlineaarne</strong>. Kall on määratud tõusu osana (näiteks 45-protsendiline kalle on 1/45, mis on sisestatud kui 0,02222).</li><li><strong>Küljeväärtus</strong>--Seadistab HF, kui HRMA on suurem või võrdne 45 kraadiga ja väiksem kui 90 kraadi, kui on määratud horisontaalse teguri märksõna<strong>Edasi</strong>horizontal factor keyword is specified.</li><li><strong>Tabeli nimi</strong>--Tuvastab HF-i määratleva tabeli nime.</li></ul>",
	"@@Path-Distance_Horizontal-Raster_tag0@@": "Raster, mis määratleb horisontaalse suuna igas lahtris.",
	"@@Path-Distance_Horizontal-Raster_tag1@@": "Rastril olevad väärtused peavad olema täisarvud vahemikus 0 kuni 360, kusjuures 0 kraadi on põhjas või ekraani ülaosas ja suureneb päripäeva. Tasapinnalistele aladele tuleks anda väärtus -1. Igas asukohas olevaid väärtusi kasutatakse koos <strong>horisontaalse teguriga</strong>, et määrata kindlaks lahtrist naabrite juurde kolimisel tekkivad horisontaalsed kulud.",
	"@@Path-Distance_Maximum-Distance_tag0@@": "Künnis, mida kumulatiivsed kuluväärtused ei tohi ületada. Kui kumulatiivne kuluvahemaa ületab selle väärtuse, siis lahtri asukoha väljundväärtus on NoData. Maksimaalne kaugus määratleb, mil määral arvutatakse kumulatiivsed kuluvahemaad. Vaikekaugus on väljundrastri ulatuses.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Kulude väärtustele rakendatav kordaja.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "See parameeter võimaldab juhtida liikumisviisi või suurusjärku allika juures. Mida suurem on kordaja, seda suurem on iga lahtri läbimise kulu.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Väärtused peavad olema suuremad kui null. Vaikeväärtus on 1.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Path-Distance_Source-Raster_tag0@@": "Lähtekohtade nõutav sisendraster.",
	"@@Path-Distance_Source-Raster_tag1@@": "See on raster, mis tuvastab lahtrid või asukohad, kust arvutatakse iga väljundlahtri asukoha kohta väikseim akumuleeritud kulukaugus.",
	"@@Path-Distance_Source-Raster_tag2@@": "See võib olla täisarv või ujukomatüüp.",
	"@@Path-Distance_Start-Cost_tag0@@": "Algkulu, millest alustada kuluarvutusi. See parameeter võimaldab määrata allikaga seotud püsikulu. Selle asemel, et alustada maksumusega 0, algab kulualgoritm määratud väärtusega.",
	"@@Path-Distance_Start-Cost_tag1@@": "Väärtus peab olema null või suurem. Vaikeväärtus on 0.",
	"@@Path-Distance_Surface-Raster_tag0@@": "Raster, mis määratleb kõrguse väärtused igas lahtri asukohas.",
	"@@Path-Distance_Surface-Raster_tag1@@": "Väärtusi kasutatakse tegeliku pinna vahemaa arvutamiseks lahtrite vahel läbimisel.",
	"@@Path-Distance_Travel-Direction_tag0@@": "Määratleb reisija suuna allika takistuse määra ja lähtekulu arvestamisel.",
	"@@Path-Distance_Travel-Direction_tag1@@": "<strong>Allikast</strong>--Allikakindluse määr ja allika algkulu rakendatakse sisendallikast alustades ja mittelähtelahtritesse liikudes. See on vaikimisi valik.",
	"@@Path-Distance_Travel-Direction_tag3@@": "<strong>Allikasse</strong>--Allikakindluse määr ja allika algkulu rakendatakse alates igast mittelähtelahtrist ja liikudes tagasi sisendallikasse.",
	"@@Path-Distance_Travel-Direction_tag5@@": "Määrake kas võtmesõna <strong>Allikast</strong> või <strong>Allikasse</strong>, mida rakendatakse kõigile allikatele, või määrake väli <strong>allikarastris</strong>, mis sisaldab iga allika liikumissuuna identifitseerimise võtmesõnu. See väli peab sisaldama stringi ${FROM_SOURCE} või ${TO_SOURCE}.",
	"@@Path-Distance_verticalfactor_tag0@@": "<p>Määratleb seose vertikaalse kuluteguri ja vertikaalse liikumisnurga (VRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kaht akronüümi: VHF ja VRMA. VF tähistab vertikaalset tegurit, mis määratleb vertikaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. VRMA tähistab vertikaalset suhtelist liikumisnurka, mis näitab kaldenurka FROM-lahtri või töötluse, lahtri ja TO lahtri vahel.</p><p><strong>Vertikaalse teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--Määrab, et kui VRMA on suurem kui madala lõikenurga nurk ja väiksem kui suure lõikenurga nurk, seatakse VF nullteguriga seotud väärtusele; vastasel juhul on see lõpmatus.</li><li><strong>Lineaarne</strong>--Näitab, et VF on VRMA lineaarne funktsioon.</li><li><strong>Sümmeetriline lineaarne</strong>--Määratleb, et VF on VRMA lineaarne funktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetriliseds.</li><li><strong>Pöördlineaarne </strong>--Näitab, et VF on VRMA pöördlineaarne funktsioon.</li><li><strong>Sümmeetriline pöördlineaarne</strong>--Määratleb, et VF on VRMA lineaarne pöördfunktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetrilised.</li><li><strong>Cos</strong>--Määrab VF-i VRMA koosinusel põhinevaks funktsiooniks.</li><li><strong>Sek</strong>--Tuvastab VFi VRMA lõikajapõhise funktsioonina.</li><li><strong>Cos-Sec</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Sec-Cos</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Tabel</strong>--Tuvastab, et VFide määramiseks kasutatava vertikaalse teguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Vertikaalsete märksõnade muutjad hõlmavad järgmist:</p><ul><li><strong>Nulltegur</strong>--Määravad vertikaalse teguri, mida kasutatakse juhul, kui VRMA on null. See tegur paigutab määratud funktsiooni y-ristlõike. Definitsiooni järgi ei ole nulltegur rakendatav ühegi trigonomeetrilise vertikaalse funktsiooni (COS, SEC, COS-SEC või SEC-COS) korral. Y-lõikejoone määravad alljärgnevad funktsioonid.</li><li><strong>Väike lõikenurk</strong>--Määratleb VRMA nurga, millest allpool seatakse VF lõpmatuseni.</li><li><strong>Suur lõikenurk</strong>--Määratleb VRMA nurga, millest ülalpool seatakse VF lõpmatuseni.</li><li><strong>Kalle</strong>--Seadistab sirgjoone nõlva, mida kasutatakse koos<strong>lineaarse</strong>ja<strong>pöördlineaarse</strong>vertikaalse teguri märksõnadega. Kallak on täpsustatud kui murdosa tõusust (näiteks 45-protsendiline kalle on 1/45, mis sisestatakse kui 0,02222).</li><li><strong>Tabeli nimi</strong>--Tuvastab VFi määratleva tabeli nime.</li></ul>",
	"@@Path-Distance_Vertical-Raster_tag0@@": "Määratleb seose vertikaalse kuluteguri ja vertikaalse suhtelise liikumisnurga (VRMA) vahel.",
	"@@Path-Distance_Vertical-Raster_tag1@@": "Väärtusi kasutatakse kalde arvutamiseks, mida kasutatakse ühest lahtrist teise liikumisel tekkiva vertikaalse teguri tuvastamiseks.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "See parameeter simuleerib kulude katmise jõupingutuste suurenemist, kuna kumulatiivsed kulud suurenevad. Seda kasutatakse ränduri väsimuse modelleerimiseks. Kasvavat akumuleeruvat kulu lahtrisse jõudmiseks korrutatakse resistentsuse määraga ja lisatakse hilisemasse lahtrisse kolimise kulule.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "See on liitintressimäära valemi muudetud versioon, mida kasutatakse lahtris liikumise ilmse kulu arvutamiseks. Kui resistentsuse määra väärtus suureneb, suurendab see hiljem külastatavate lahtrite maksumust. Mida suurem on resistentsuse määr, seda suurem on järgmise lahtrini jõudmise kulu, mis arvutatakse iga järgneva liikumise kohta. Kuna resistentsuse määr on sarnane liitkursiga ja üldiselt on kumulatiivsed kuluväärtused väga suured, soovitatakse sõltuvalt kumulatiivsetest kuluväärtustest kasutada väikeseid resistentsuse määrasid, näiteks 0,005 või isegi väiksemaid.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Path-Distance-Allocation_Capacity_tag0@@": "Määratleb ränduri kuluvõime allika jaoks. Kuluarvutusi jätkatakse iga allika puhul kuni määratud võimsuse saavutamiseni.",
	"@@Path-Distance-Allocation_Capacity_tag1@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Path-Distance-Allocation_Cost-Raster_tag0@@": "Nõutav sisendraster määrab kulu või takistuse tasapinnalisel liikumisel läbi iga lahtri. Lahtri iga asukoha väärtus väljendab vahemaa ühiku maksumuse liikumisel läbi selle. Iga lahtri asukoha väärtus korrutatakse lahtri resolutsiooniga ja see kompenseerib ka diagonaalliikumist, et saada läbi lahtri liikumise kogukulu.",
	"@@Path-Distance-Allocation_Cost-Raster_tag1@@": "<strong>Kulurastri</strong>väärtus võib täisarv või ujuva väärtusega arv, kuid ei tohi olla negatiivne või null.",
	"@@Path-Distance-Allocation_horizontalfactor_tag0@@": "<p>Määratleb seose horisontaalse kuluteguri ja horisontaalse liikumisnurga (HRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kahte akronüümi: HF ja HRMA. HF tähistab horisontaalset tegurit, mis määratleb horisontaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. HRMA tähistab horisontaalset suhtelist liikumisnurka, mis identifitseerib lahtri horisontaalse suuna ja liikumissuuna vahelise nurga.</p><p><strong>Horisontaalsed teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--näitab, et kui HRA on lõikenurgast väiksem, seatakse HF väärtusele, mis on seotud nullteguriga; muidu on see lõpmatus.</li><li><strong>Edasisuunas</strong>--Näitab, et lubatud on ainult edasisuunas liikumine HRMA peab olema suurem kui 0 või sellega võrdne ja alla 90 kraadi (0 <= HRMA < 90). Kui HRMA on suurem kui 0 ja väiksem kui 45 kraadi, seatakse lahtri HF väärtuseks, mis on seotud nullteguriga. Kui HRMA on suurem kui 45 kraadi või sellega võrdne, kasutatakse külgväärtuse teisendaja väärtust. Iga HRMA väärtuse HF, mis on võrdne või suurem kui 90 kraadi, on seatud lõpmatuseni.</li><li><strong>Lineaarne</strong>--Määrab, et HF on HRMA lineaarne funktsioon.</li><li><strong>Pöördlineaarne</strong>--Määrab, et HF on HRMA pöördlineaarne funktsioon.</li><li><strong>Tabel</strong>--Tuvastab, et HF-de määramiseks kasutatava horisontaalteguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Horisontaalsete tegurite modifikaatorid on järgmised:</p><ul><li><strong>Nulltegur</strong>--Horisontaalne tegur, mida kasutatakse, kui HRMA on null. See tegur positsioneerib y-lõikepunkti mis tahes horisontaalse teguri funktsiooni jaoks.</li><li><strong>Lõikenurk</strong>--Määratleb HRMA nurga, millest kaugemale HF seatakse lõpmatusse.</li><li><strong>Kalle</strong>--Määratleb sirgjoone kalde, mida kasutatakse koos horisontaalse teguri märksõnadega <strong>Lineaarne</strong>ja<strong>Pöördlineaarne</strong>. Kall on määratud tõusu osana (näiteks 45-protsendiline kalle on 1/45, mis on sisestatud kui 0,02222).</li><li><strong>Küljeväärtus</strong>--Seadistab HF, kui HRMA on suurem või võrdne 45 kraadiga ja väiksem kui 90 kraadi, kui on määratud horisontaalse teguri märksõna<strong>Edasi</strong>horizontal factor keyword is specified.</li><li><strong>Tabeli nimi</strong>--Tuvastab HF-i määratleva tabeli nime.</li></ul>",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag0@@": "Raster, mis määratleb horisontaalse suuna igas lahtris.",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag1@@": "Rastril olevad väärtused peavad olema täisarvud vahemikus 0 kuni 360, kusjuures 0 kraadi on põhjas või ekraani ülaosas ja suureneb päripäeva. Tasapinnalistele aladele tuleks anda väärtus -1. Igas asukohas olevaid väärtusi kasutatakse koos <strong>horisontaalse teguriga</strong>, et määrata kindlaks lahtrist naabrite juurde kolimisel tekkivad horisontaalsed kulud.",
	"@@Path-Distance-Allocation_Maximum-Distance_tag0@@": "Künnis, mida kumulatiivsed kuluväärtused ei tohi ületada. Kui kumulatiivne kuluvahemaa ületab selle väärtuse, siis lahtri asukoha väljundväärtus on NoData. Maksimaalne kaugus määratleb, mil määral arvutatakse kumulatiivsed kuluvahemaad. Vaikekaugus on väljundrastri ulatuses.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Kulude väärtustele rakendatav kordaja.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "See parameeter võimaldab juhtida liikumisviisi või suurusjärku allika juures. Mida suurem on kordaja, seda suurem on iga lahtri läbimise kulu.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Väärtused peavad olema suuremad kui null. Vaikeväärtus on 1.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Path-Distance-Allocation_Source-Field_tag0@@": "Väli, mida kasutatakse allikate asukohtadele väärtuste määramiseks. See peab olema täisarv. Kui <strong>väärtuse raster</strong> on seatud, on selle sisendi väärtused <strong>lähtevälja</strong> mis tahes seadistuse suhtes ülimuslikud.",
	"@@Path-Distance-Allocation_Source-Raster_tag0@@": "Lähtekohtade nõutav sisendraster.",
	"@@Path-Distance-Allocation_Source-Raster_tag1@@": "See on raster, mis tuvastab lahtrid või asukohad, kust arvutatakse iga väljundlahtri asukoha kohta väikseim akumuleeritud kulukaugus.",
	"@@Path-Distance-Allocation_Source-Raster_tag2@@": "See võib olla täisarv või ujukomatüüp.",
	"@@Path-Distance-Allocation_Start-Cost_tag0@@": "Algkulu, millest alustada kuluarvutusi. See parameeter võimaldab määrata allikaga seotud püsikulu. Selle asemel, et alustada maksumusega 0, algab kulualgoritm määratud väärtusega.",
	"@@Path-Distance-Allocation_Start-Cost_tag1@@": "Väärtus peab olema null või suurem. Vaikeväärtus on 0.",
	"@@Path-Distance-Allocation_Surface-Raster_tag0@@": "Raster, mis määratleb kõrguse väärtused igas lahtri asukohas.",
	"@@Path-Distance-Allocation_Surface-Raster_tag1@@": "Väärtusi kasutatakse tegeliku pinna vahemaa arvutamiseks lahtrite vahel läbimisel.",
	"@@Path-Distance-Allocation_Travel-Direction_tag0@@": "Määratleb reisija suuna allika takistuse määra ja lähtekulu arvestamisel.",
	"@@Path-Distance-Allocation_Travel-Direction_tag1@@": "<strong>Allikast</strong>--Allikakindluse määr ja allika algkulu rakendatakse sisendallikast alustades ja mittelähtelahtritesse liikudes. See on vaikimisi valik.",
	"@@Path-Distance-Allocation_Travel-Direction_tag3@@": "<strong>Allikasse</strong>--Allikakindluse määr ja allika algkulu rakendatakse alates igast mittelähtelahtrist ja liikudes tagasi sisendallikasse.",
	"@@Path-Distance-Allocation_Travel-Direction_tag5@@": "Määrake kas võtmesõna <strong>Allikast</strong> või <strong>Allikasse</strong>, mida rakendatakse kõigile allikatele, või määrake väli <strong>allikarastris</strong>, mis sisaldab iga allika liikumissuuna identifitseerimise võtmesõnu. See väli peab sisaldama stringi ${FROM_SOURCE} või ${TO_SOURCE}.",
	"@@Path-Distance-Allocation_Value-Raster_tag0@@": "Sisendtäisarvu raster, mis tuvastab iga sisendallika asukoha jaoks kasutatavad tsooniväärtused. Iga lähteasukoha lahtri puhul väärtus, mille on määratlenud <strong>väärtuse raster</strong>, määratakse kõigile lahtritele, mis on määratud arvutuse lähteasukohale. <strong>Väärtuse raster</strong> on <strong>lähtevälja</strong> mis tahes seadistuse suhtes ülimuslik.",
	"@@Path-Distance-Allocation_verticalfactor_tag0@@": "<p>Määratleb seose vertikaalse kuluteguri ja vertikaalse liikumisnurga (VRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kaht akronüümi: VHF ja VRMA. VF tähistab vertikaalset tegurit, mis määratleb vertikaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. VRMA tähistab vertikaalset suhtelist liikumisnurka, mis näitab kaldenurka FROM-lahtri või töötluse, lahtri ja TO lahtri vahel.</p><p><strong>Vertikaalse teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--Määrab, et kui VRMA on suurem kui madala lõikenurga nurk ja väiksem kui suure lõikenurga nurk, seatakse VF nullteguriga seotud väärtusele; vastasel juhul on see lõpmatus.</li><li><strong>Lineaarne</strong>--Näitab, et VF on VRMA lineaarne funktsioon.</li><li><strong>Sümmeetriline lineaarne</strong>--Määratleb, et VF on VRMA lineaarne funktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetriliseds.</li><li><strong>Pöördlineaarne </strong>--Näitab, et VF on VRMA pöördlineaarne funktsioon.</li><li><strong>Sümmeetriline pöördlineaarne</strong>--Määratleb, et VF on VRMA lineaarne pöördfunktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetrilised.</li><li><strong>Cos</strong>--Määrab VF-i VRMA koosinusel põhinevaks funktsiooniks.</li><li><strong>Sek</strong>--Tuvastab VFi VRMA lõikajapõhise funktsioonina.</li><li><strong>Cos-Sec</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Sec-Cos</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Tabel</strong>--Tuvastab, et VFide määramiseks kasutatava vertikaalse teguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Vertikaalsete märksõnade muutjad hõlmavad järgmist:</p><ul><li><strong>Nulltegur</strong>--Määravad vertikaalse teguri, mida kasutatakse juhul, kui VRMA on null. See tegur paigutab määratud funktsiooni y-ristlõike. Definitsiooni järgi ei ole nulltegur rakendatav ühegi trigonomeetrilise vertikaalse funktsiooni (COS, SEC, COS-SEC või SEC-COS) korral. Y-lõikejoone määravad alljärgnevad funktsioonid.</li><li><strong>Väike lõikenurk</strong>--Määratleb VRMA nurga, millest allpool seatakse VF lõpmatuseni.</li><li><strong>Suur lõikenurk</strong>--Määratleb VRMA nurga, millest ülalpool seatakse VF lõpmatuseni.</li><li><strong>Kalle</strong>--Seadistab sirgjoone nõlva, mida kasutatakse koos<strong>lineaarse</strong>ja<strong>pöördlineaarse</strong>vertikaalse teguri märksõnadega. Kallak on täpsustatud kui murdosa tõusust (näiteks 45-protsendiline kalle on 1/45, mis sisestatakse kui 0,02222).</li><li><strong>Tabeli nimi</strong>--Tuvastab VFi määratleva tabeli nime.</li></ul>",
	"@@Path-Distance-Allocation_Vertical-Raster_tag0@@": "Määratleb seose vertikaalse kuluteguri ja vertikaalse suhtelise liikumisnurga (VRMA) vahel.",
	"@@Path-Distance-Allocation_Vertical-Raster_tag1@@": "Väärtusi kasutatakse kalde arvutamiseks, mida kasutatakse ühest lahtrist teise liikumisel tekkiva vertikaalse teguri tuvastamiseks.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "See parameeter simuleerib kulude katmise jõupingutuste suurenemist, kuna kumulatiivsed kulud suurenevad. Seda kasutatakse ränduri väsimuse modelleerimiseks. Kasvavat akumuleeruvat kulu lahtrisse jõudmiseks korrutatakse resistentsuse määraga ja lisatakse hilisemasse lahtrisse kolimise kulule.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "See on liitintressimäära valemi muudetud versioon, mida kasutatakse lahtris liikumise ilmse kulu arvutamiseks. Kui resistentsuse määra väärtus suureneb, suurendab see hiljem külastatavate lahtrite maksumust. Mida suurem on resistentsuse määr, seda suurem on järgmise lahtrini jõudmise kulu, mis arvutatakse iga järgneva liikumise kohta. Kuna resistentsuse määr on sarnane liitkursiga ja üldiselt on kumulatiivsed kuluväärtused väga suured, soovitatakse sõltuvalt kumulatiivsetest kuluväärtustest kasutada väikeseid resistentsuse määrasid, näiteks 0,005 või isegi väiksemaid.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Path-Distance-Back-Link_Capacity_tag0@@": "Määratleb ränduri kuluvõime allika jaoks. Kuluarvutusi jätkatakse iga allika puhul kuni määratud võimsuse saavutamiseni.",
	"@@Path-Distance-Back-Link_Capacity_tag1@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag0@@": "Nõutav sisendraster määrab kulu või takistuse tasapinnalisel liikumisel läbi iga lahtri. Lahtri iga asukoha väärtus väljendab vahemaa ühiku maksumuse liikumisel läbi selle. Iga lahtri asukoha väärtus korrutatakse lahtri resolutsiooniga ja see kompenseerib ka diagonaalliikumist, et saada läbi lahtri liikumise kogukulu.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag1@@": "<strong>Kulurastri</strong>väärtus võib täisarv või ujuva väärtusega arv, kuid ei tohi olla negatiivne või null.",
	"@@Path-Distance-Back-Link_horizontalfactor_tag0@@": "<p>Määratleb seose horisontaalse kuluteguri ja horisontaalse liikumisnurga (HRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kahte akronüümi: HF ja HRMA. HF tähistab horisontaalset tegurit, mis määratleb horisontaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. HRMA tähistab horisontaalset suhtelist liikumisnurka, mis identifitseerib lahtri horisontaalse suuna ja liikumissuuna vahelise nurga.</p><p><strong>Horisontaalsed teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--näitab, et kui HRA on lõikenurgast väiksem, seatakse HF väärtusele, mis on seotud nullteguriga; muidu on see lõpmatus.</li><li><strong>Edasisuunas</strong>--Näitab, et lubatud on ainult edasisuunas liikumine HRMA peab olema suurem kui 0 või sellega võrdne ja alla 90 kraadi (0 <= HRMA < 90). Kui HRMA on suurem kui 0 ja väiksem kui 45 kraadi, seatakse lahtri HF väärtuseks, mis on seotud nullteguriga. Kui HRMA on suurem kui 45 kraadi või sellega võrdne, kasutatakse külgväärtuse teisendaja väärtust. Iga HRMA väärtuse HF, mis on võrdne või suurem kui 90 kraadi, on seatud lõpmatuseni.</li><li><strong>Lineaarne</strong>--Määrab, et HF on HRMA lineaarne funktsioon.</li><li><strong>Pöördlineaarne</strong>--Määrab, et HF on HRMA pöördlineaarne funktsioon.</li><li><strong>Tabel</strong>--Tuvastab, et HF-de määramiseks kasutatava horisontaalteguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Horisontaalsete tegurite modifikaatorid on järgmised:</p><ul><li><strong>Nulltegur</strong>--Horisontaalne tegur, mida kasutatakse, kui HRMA on null. See tegur positsioneerib y-lõikepunkti mis tahes horisontaalse teguri funktsiooni jaoks.</li><li><strong>Lõikenurk</strong>--Määratleb HRMA nurga, millest kaugemale HF seatakse lõpmatusse.</li><li><strong>Kalle</strong>--Määratleb sirgjoone kalde, mida kasutatakse koos horisontaalse teguri märksõnadega <strong>Lineaarne</strong>ja<strong>Pöördlineaarne</strong>. Kall on määratud tõusu osana (näiteks 45-protsendiline kalle on 1/45, mis on sisestatud kui 0,02222).</li><li><strong>Küljeväärtus</strong>--Seadistab HF, kui HRMA on suurem või võrdne 45 kraadiga ja väiksem kui 90 kraadi, kui on määratud horisontaalse teguri märksõna<strong>Edasi</strong>horizontal factor keyword is specified.</li><li><strong>Tabeli nimi</strong>--Tuvastab HF-i määratleva tabeli nime.</li></ul>",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag0@@": "Raster, mis määratleb horisontaalse suuna igas lahtris.",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag1@@": "Rastril olevad väärtused peavad olema täisarvud vahemikus 0 kuni 360, kusjuures 0 kraadi on põhjas või ekraani ülaosas ja suureneb päripäeva. Tasapinnalistele aladele tuleks anda väärtus -1. Igas asukohas olevaid väärtusi kasutatakse koos <strong>horisontaalse teguriga</strong>, et määrata kindlaks lahtrist naabrite juurde kolimisel tekkivad horisontaalsed kulud.",
	"@@Path-Distance-Back-Link_Maximum-Distance_tag0@@": "Künnis, mida kumulatiivsed kuluväärtused ei tohi ületada. Kui kumulatiivne kuluvahemaa ületab selle väärtuse, siis lahtri asukoha väljundväärtus on NoData. Maksimaalne kaugus määratleb, mil määral arvutatakse kumulatiivsed kuluvahemaad. Vaikekaugus on väljundrastri ulatuses.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Kulude väärtustele rakendatav kordaja.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "See parameeter võimaldab juhtida liikumisviisi või suurusjärku allika juures. Mida suurem on kordaja, seda suurem on iga lahtri läbimise kulu.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Väärtused peavad olema suuremad kui null. Vaikeväärtus on 1.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Path-Distance-Back-Link_Source-Raster_tag0@@": "Lähtekohtade nõutav sisendraster.",
	"@@Path-Distance-Back-Link_Source-Raster_tag1@@": "See on raster, mis tuvastab lahtrid või asukohad, kust arvutatakse iga väljundlahtri asukoha kohta väikseim akumuleeritud kulukaugus.",
	"@@Path-Distance-Back-Link_Source-Raster_tag2@@": "See võib olla täisarv või ujukomatüüp.",
	"@@Path-Distance-Back-Link_Start-Cost_tag0@@": "Algkulu, millest alustada kuluarvutusi. See parameeter võimaldab määrata allikaga seotud püsikulu. Selle asemel, et alustada maksumusega 0, algab kulualgoritm määratud väärtusega.",
	"@@Path-Distance-Back-Link_Start-Cost_tag1@@": "Väärtus peab olema null või suurem. Vaikeväärtus on 0.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag0@@": "Raster, mis määratleb kõrguse väärtused igas lahtri asukohas.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag1@@": "Väärtusi kasutatakse tegeliku pinna vahemaa arvutamiseks lahtrite vahel läbimisel.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag0@@": "Määratleb reisija suuna allika takistuse määra ja lähtekulu arvestamisel.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag1@@": "<strong>Allikast</strong>--Allikakindluse määr ja allika algkulu rakendatakse sisendallikast alustades ja mittelähtelahtritesse liikudes. See on vaikimisi valik.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag3@@": "<strong>Allikasse</strong>--Allikakindluse määr ja allika algkulu rakendatakse alates igast mittelähtelahtrist ja liikudes tagasi sisendallikasse.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag5@@": "Määrake kas võtmesõna <strong>Allikast</strong> või <strong>Allikasse</strong>, mida rakendatakse kõigile allikatele, või määrake väli <strong>allikarastris</strong>, mis sisaldab iga allika liikumissuuna identifitseerimise võtmesõnu. See väli peab sisaldama stringi ${FROM_SOURCE} või ${TO_SOURCE}.",
	"@@Path-Distance-Back-Link_verticalfactor_tag0@@": "<p>Määratleb seose vertikaalse kuluteguri ja vertikaalse liikumisnurga (VRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kaht akronüümi: VHF ja VRMA. VF tähistab vertikaalset tegurit, mis määratleb vertikaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. VRMA tähistab vertikaalset suhtelist liikumisnurka, mis näitab kaldenurka FROM-lahtri või töötluse, lahtri ja TO lahtri vahel.</p><p><strong>Vertikaalse teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--Määrab, et kui VRMA on suurem kui madala lõikenurga nurk ja väiksem kui suure lõikenurga nurk, seatakse VF nullteguriga seotud väärtusele; vastasel juhul on see lõpmatus.</li><li><strong>Lineaarne</strong>--Näitab, et VF on VRMA lineaarne funktsioon.</li><li><strong>Sümmeetriline lineaarne</strong>--Määratleb, et VF on VRMA lineaarne funktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetriliseds.</li><li><strong>Pöördlineaarne </strong>--Näitab, et VF on VRMA pöördlineaarne funktsioon.</li><li><strong>Sümmeetriline pöördlineaarne</strong>--Määratleb, et VF on VRMA lineaarne pöördfunktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetrilised.</li><li><strong>Cos</strong>--Määrab VF-i VRMA koosinusel põhinevaks funktsiooniks.</li><li><strong>Sek</strong>--Tuvastab VFi VRMA lõikajapõhise funktsioonina.</li><li><strong>Cos-Sec</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Sec-Cos</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Tabel</strong>--Tuvastab, et VFide määramiseks kasutatava vertikaalse teguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Vertikaalsete märksõnade muutjad hõlmavad järgmist:</p><ul><li><strong>Nulltegur</strong>--Määravad vertikaalse teguri, mida kasutatakse juhul, kui VRMA on null. See tegur paigutab määratud funktsiooni y-ristlõike. Definitsiooni järgi ei ole nulltegur rakendatav ühegi trigonomeetrilise vertikaalse funktsiooni (COS, SEC, COS-SEC või SEC-COS) korral. Y-lõikejoone määravad alljärgnevad funktsioonid.</li><li><strong>Väike lõikenurk</strong>--Määratleb VRMA nurga, millest allpool seatakse VF lõpmatuseni.</li><li><strong>Suur lõikenurk</strong>--Määratleb VRMA nurga, millest ülalpool seatakse VF lõpmatuseni.</li><li><strong>Kalle</strong>--Seadistab sirgjoone nõlva, mida kasutatakse koos<strong>lineaarse</strong>ja<strong>pöördlineaarse</strong>vertikaalse teguri märksõnadega. Kallak on täpsustatud kui murdosa tõusust (näiteks 45-protsendiline kalle on 1/45, mis sisestatakse kui 0,02222).</li><li><strong>Tabeli nimi</strong>--Tuvastab VFi määratleva tabeli nime.</li></ul>",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag0@@": "Määratleb seose vertikaalse kuluteguri ja vertikaalse suhtelise liikumisnurga (VRMA) vahel.",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag1@@": "Väärtusi kasutatakse kalde arvutamiseks, mida kasutatakse ühest lahtrist teise liikumisel tekkiva vertikaalse teguri tuvastamiseks.",
	"@@Plus_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Plus_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Plus_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Plus_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Plus_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Plus_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat piksli suurust.",
	"@@Plus_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Plus_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Plus_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Plus_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Plus_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Plus_Raster_tag0@@": "Sisend, millele väärtused lisatakse.",
	"@@Plus_Raster_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Plus_Raster2_tag0@@": "Sisend, mille väärtused lisatakse esimesele sisendile.",
	"@@Plus_Raster2_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Local_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav piksli suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Local_Cellsize-Type_tag1@@": "Esimene -- kasutage sisendrastrite esimest lahtrisuurust.",
	"@@Local_Cellsize-Type_tag2@@": "Viimane -- kasutage sisendrastrite viimast lahtrisuurust.",
	"@@Local_Cellsize-Type_tag3@@": "Max -- kasutage kõikide sisendrastrite suurimat lahtrisuurust. See on vaikevalik.",
	"@@Local_Cellsize-Type_tag4@@": "Keskmine -- kasutage kõikide sisendrastrite keskmist lahtrisuurust.",
	"@@Local_Cellsize-Type_tag5@@": "Min -- kasutage kõikide sisendrastrite väikseimat lahtrisuurust.",
	"@@Local_Extent-Type_tag0@@": "Valige, millist ulatust tuleks väljundrastris kasutada:",
	"@@Local_Extent-Type_tag1@@": "Esimene -- töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Local_Extent-Type_tag2@@": "Lõikepunkt -- töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikevalik.",
	"@@Local_Extent-Type_tag3@@": "Viimane -- töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Local_Extent-Type_tag4@@": "Ühend -- töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Local_Raster_tag0@@": "Sisend, millele väärtused lisatakse.",
	"@@Local_Raster_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Local_Raster2_tag0@@": "Sisend, mille väärtused lisatakse esimesele sisendile.",
	"@@Local_Raster2_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Local_False-Raster_tag0@@": "Sisend, mille väärtusi kasutatakse väljundpiksli väärtustena, kui tingimus on väär. See võib olla täisarv, ujukoma raster või konstantne väärtus.",
	"@@Local_True-Raster_tag0@@": "Sisend, mille väärtusi kasutatakse väljundpiksli väärtustena, kui tingimus on tõene. See võib olla täisarv, ujukoma raster või konstantne väärtus.",
	"@@Power_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Power_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Power_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Power_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Power_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Power_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Power_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Power_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Power_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Power_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Power_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Power_Raster_tag0@@": "Sisendväärtused, mis astendatakse astendajaga, mille on määranud <strong>Raster2</strong>.",
	"@@Power_Raster_tag3@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Power_Raster2_tag0@@": "Sisend, mis määrab astendaja, millega astendatakse <strong>rastri</strong> väärtusi.",
	"@@Power_Raster2_tag3@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Radar-Calibration_Calibration-Type_tag0@@": "Teostatava kalibreerimise tüüp.",
	"@@Radar-Calibration_Calibration-Type_tag1@@": "Beeta-null--funktsioon tagastab radari reflektiivsuse ühiku pindala kohta kaldevahemikus. See on vaikimisi kalibreerimistüüp.",
	"@@Radar-Calibration_Calibration-Type_tag2@@": "Sigma-null-- funktsioon tagastab radari peegelduse pinnaühiku kohta maapinnast. Tulemused on 32-bitised ujukomaväärtused, mis on tavaliselt vahemikus 0,0 kuni 1,0. Kui see suvand on valitud, siis andmekärpimist ei tehta.",
	"@@Radar-Calibration_Calibration-Type_tag3@@": "Gamma--funktsioon tagastab radari peegelduvuse mõõtmissuunaga risti asetsevas tasapinnas ühiku kohta.",
	"@@Radar-Calibration_Calibration-Type_tag4@@": "Puudub",
	"@@Radar-Calibration_Raster_tag0@@": "Sisendraster.",
	"@@RasterInfo_Raster-Info_tag0@@": "Valige mallina kasutatav rasterandmestik",
	"@@RasterInfo_Raster_tag0@@": "Sisendraster.",
	"@@Rasterize-Attributes_Attribute-Field-Names_tag0@@": "Väljade loend <strong>tsooniatribuutide tabelis</strong>, kus iga väli on eraldatud komaga. Iga välja väärtused esitatakse väljundrastris ribaga.",
	"@@Rasterize-Attributes_Background-Value_tag0@@": "Väljundribade algne piksliväärtus rastris, enne kui need uuesti vastendatakse.",
	"@@Rasterize-Attributes_Background-Value_tag1@@": "Kui piksel ei kuulu tsooni, jääb see taustaväärtuseks.",
	"@@Rasterize-Attributes_Value-Raster_tag0@@": "Nõutav sisendraster.",
	"@@Rasterize-Attributes_Value-Raster_tag1@@": "Sisend peaks olema ühe ribaga raster. Mitmeribalise rastri kasutamisel kasutatakse ainult esimest riba.",
	"@@Rasterize-Attributes_Where-Clause_tag0@@": "Valikuline lisapäring, mis on rakendatud <strong>tsooniatribuutide tabelis</strong>.",
	"@@Rasterize-Attributes_Where-Clause_tag3@@": "Kui kasutaksite ülaltoodud tabelit näitena, oleks päring ${Variable1 = 'bare earth'}.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag0@@": "Tsooniatribuudid, mis on määratletud teena kohaliku objektiklassi, tee tabelini, objektiteenusekihi URL või JSON-string.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag1@@": "JSONis kirjeldatakse seda kui tsoonide ID-de kaardistamise kogumit täisarvude massiivini. ${{ zoneId:[f1,f2,...,fn], ... } }",
	"@@Rasterize-Attributes_Zone-Field_tag0@@": "Välja nimi, mis sisaldab tsooni ID väärtusi.",
	"@@Rasterize-Attributes_Zone-Raster_tag0@@": "Valikuline üheribaline raster, kus iga piksel sisaldab asukohaga seotud tsooni ID-d. Tsooni ID-d kasutatakse tsoonispetsiifilise ingestiooni jaoks tsooniatribuutide tabelis ridade otsimiseks.",
	"@@Rasterize-Attributes_Zone-Raster_tag1@@": "Jätke see parameeter määramata, kui soovite ainult atribuuti importida.",
	"@@Rasterize-Features_Field_tag0@@": "Valige väli, mida soovite iga funktsiooni tuvastamiseks kasutada.",
	"@@Rasterize-Features_Input-Features_tag0@@": "Rastervormingusse teisendamiseks valige objektiklass.",
	"@@Rasterize-Features_Raster_tag0@@": "Funktsiooni teisendamiseks lahtri suuruse ja ulatuse määramiseks valige raster.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag0@@": "Kattuvate funktsioonide haldamise määramine:",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag1@@": "<strong>Esimene</strong>--Kattuvatele aladele antakse väärtus alates esimesest loetletud andmestikust.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag3@@": "<strong>Viimane</strong>--Kattuvatele aladele antakse väärtus alates viimasest loetletud andmestikust.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag5@@": "<strong>Vähim</strong>--Kattuvatele aladele omistatakse väärtus väiksema omaduse põhjal.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag7@@": "<strong>Suurim</strong>--Kattuvatele aladele omistatakse väärtus suurema omaduse põhjal.",
	"@@Recast_Overrides_tag0@@": "Mosaiikandmestiku muutmiseks kasutatav muutujate nimede ja kasutaja määratletud väärtuste tabel.",
	"@@Recast_Raster_tag0@@": "Rastertoode, millele rakendatakse uuesti sõnastamise funktsiooni.",
	"@@Region-Group_Add-Link_tag0@@": "Määrab, kas väljundi tabelisse lisatakse lingi väli.",
	"@@Region-Group_Add-Link_tag1@@": "<strong>Lisa link</strong>--Väljundrastri tabelisse lisatakse üksus ${LINK}.",
	"@@Region-Group_Add-Link_tag3@@": "<strong>Link puudub</strong>--Väljundrastri atribuutide tabel sisaldab ainult üksusi ${Value} ja ${Count}.",
	"@@Region-Group_Excluded-Value_tag0@@": "Tuvastab sellise väärtuse, et kui lahtri asukoht sisaldab väärtust, ei hinnata ruumilist ühenduvust sõltumata sellest, kuidas naabrite arv on määratud (NELI või KAHEKSA).",
	"@@Region-Group_Excluded-Value_tag1@@": "Välistatud väärtusega lahtrid töödeldakse kui NoData ja need eemaldatakse arvutustest. Lahtrite asukohad, mis sisaldavad välistatud väärtust, saavad väljundrastril 0.",
	"@@Region-Group_Excluded-Value_tag2@@": "Välistatud väärtus sarnaneb taustaväärtuse mõistega või sellele on rakendatud mask. Selle parameetri jaoks tuleb määrata väärtus, kui on määratud parameeter <strong>${CROSS}</strong>.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag0@@": "Lahtritevahelise ühenduvuse hindamisel kasutatavate naaberlahtrite arv.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag1@@": "<strong>NELI</strong>--Määratleb sama väärtusega lahtrite vahelise ühenduvuse ainult siis, kui lahtrid asuvad otse vasakul, paremal, nelja lähema naabri kohal või all. See on vaikimisi valik.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag3@@": "<strong>KAHEKSA</strong>--Määratleb sama väärtusega lahtrite vahelise ühenduvuse, kui need asuvad teineteise vahetus kaheksa lahtri naabruses. See hõlmab üksteist paremal, vasakul, ülal või diagonaalis.",
	"@@Region-Group_Zone-Connectivity_tag0@@": "Määratleb sama väärtusega lahtrite vahelise ühenduvuse, kui need asuvad teineteise vahetus kaheksa lahtri naabruses.",
	"@@Region-Group_Zone-Connectivity_tag1@@": "<strong>VAHEL</strong>--Testib ühenduvust sama tsooni sisendväärtuste vahel. See on vaikimisi valik.",
	"@@Region-Group_Zone-Connectivity_tag3@@": "Ainsad lahtrid, mida saab rühmitada, on samast tsoonist (väärtusest) pärit lahtrid, mis vastavad ühenduvuse ruumilistele nõuetele, mille on määranud parameeter <strong>Naabrite arv</strong> (neli või kaheksa).",
	"@@Region-Group_Zone-Connectivity_tag6@@": "<strong>RIST</strong>--Katsetab ühenduvust ruumiliste nõuetega, mis on määratud naabritevaheliste parameetrite arvuga mis tahes väärtustega lahtrite vahel, välja arvatud väärtus, mis on kindlaks määratud välistatava väärtuse parameetriga.",
	"@@Region-Group_Zone-Connectivity_tag8@@": "Selle suvandi kasutamisel tuleb määrata parameetri <strong>välistav väärtus</strong> väärtus.",
	"@@Region-Group_Zone-Raster_tag0@@": "Nõutav sisendraster, mille kordumatud ühendatud piirkonnad tuvastatakse.",
	"@@Region-Group_Zone-Raster_tag1@@": "See peab olema täisarvuline.",
	"@@Region-Grow_Fill-Value-Field_tag0@@": "Atribuutide tabeli väli, mis määratleb pikslirühma täitmisväärtuse. Mitmeribalise kujutise puhul määratakse sellele väärtusele kõik ribad.",
	"@@Region-Grow_Max-Growth-Radius-Field_tag0@@": "Atribuutide tabeli väli, mis määratleb kujutise matemaatilise aluse maksimaalse kasvuraadiuse.",
	"@@Region-Grow_Raster_tag0@@": "Raster, millel soovite seda funktsiooni teostada.",
	"@@Region-Grow_Seed-Points_tag0@@": "Punktiobjekti klass, mida kasutatakse algoritmi algseemnetena. Iga algpunkt vastab ühele kirjele atribuutide tabelis, mis kannab maksimaalset kasvuraadust, sarnasuse läve ja täiteväärtuse teavet.",
	"@@Region-Grow_Similarity-Threshold-Field_tag0@@": "Atribuutide tabeli väli, mis määratleb sarnasuse läve, eukleidilise kaugusena spektraalruumis.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag0@@": "Ümberklassifitseerimise tabelis puuduvad väärtused võivad säilitada nende väärtuse või need saab uuesti asendada väärtusega NoData.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag1@@": "Kontrollimata--iga sisendrastrist pärit piksel, mida ei klassifitseerita uuesti vastenduse tabelis, säilitab oma väärtuse ja kirjutatakse selle asukoha jaoks väljundrastrisse. See on vaikevalik.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag2@@": "Kontrollitud--iga sisendrastri piksli väärtus, mida uuesti vastenduse tabelisse ei liigitata, vastendatakse uuesti NoData väärtusele selle asukoha jaoks väljundrastrisse.",
	"@@Remap_Input-Field_tag0@@": "Valige väli, mis määrab uuesti vastendatava sisendpiksli väärtuse.",
	"@@Remap_Input-Field_tag1@@": "Kui teie tabelil on väärtustevahemik, on see minimaalse väärtuse väli ja tuleb määrata ka parameeter <strong>Max sisendväli</strong>.",
	"@@Remap_Input-Max-Field_tag0@@": "Valige maksimumväärtuse väli, kui teie tabel määrab väärtusevahemiku.",
	"@@Remap_List_tag0@@": "Määrake kaardi väärtused ning määrake miinimum- ja maksimumväärtuste vahemik ning uued jääkväärtused. Lisaks saab väärtusevahemiku seada NoData piksliteks.",
	"@@Remap_Output-Field_tag0@@": "Valige väli, mida kasutatakse väljundi uuesti vastendatud väärtusena.",
	"@@Remap_Raster_tag0@@": "Sisendraster.",
	"@@Remap_Remap-Definition-Type_tag0@@": "Valige suvand, mida soovite kasutada eemaldusväärtuste seadmiseks.",
	"@@Remap_Remap-Definition-Type_tag1@@": "Loend--määrake piksliväärtuste vahemik, mis vastendatakse väljundpiksliväärtusega",
	"@@Remap_Remap-Table-Type_tag0@@": "Valige tabeli tüüp, mille abil soovite sisendrastrit uuesti kasutada.",
	"@@Remap_Remap-Table-Type_tag1@@": "Lihtne--Kasutab sisendit <strong>Vastenduste tabel</strong>, et vastendada   <strong>sisendvälja</strong> piksliväärtused vastavale väärtusele parameetril <strong>väljundväli</strong>. See meetod talletab vastenduste tabeli nii, et see saaks kiiremini toimida.",
	"@@Remap_Remap-Table-Type_tag8@@": "Dünaamiline--see meetod ei vahenda vastenduste tabelit ja teeb päringu iga kord, kui taotlus esitatakse (nihutamine, suumimine või värskendamine). Kui tabel muutub, saab järgmine taotlus väärtused vastavalt dünaamiliselt uuesti vastendada.",
	"@@Remap_Remap-Table-Type_tag9@@": "Uuesti määramine--konkreetne tabel, mida kasutatakse ümberliigitamise protsessis, kus iga tabeli rida vastendatakse uuesti ainult iga funktsiooni piiri alusel.",
	"@@Remap_Remap-Table_tag0@@": "Sirvige tabelit, mis määrab uuesti teie vastenduste väärtused.",
	"@@Reproject_Raster_tag0@@": "Rasterandmestik, mis tuleb ümber projekteerida või teisendada.",
	"@@Reproject_Spatial-Reference_tag0@@": "Andmete ümberprojekteerimiseks kasutatav koordinaatsüsteem.",
	"@@Reproject_X-Cellsize_tag0@@": "X-mõõde, mille järgi tuleks andmeid teisendada. See on valikuline. Kui väärtus on 0 või väiksem, arvutatakse väljundi ümbriskast (ulatus ja lahtri suurus) sisendrastrist.",
	"@@Reproject_X-Registration-Point_tag0@@": "X-koordinaat, mida kasutatakse andmestiku vasaku ülanurga määratlemiseks. See koordinaat tuleb määratleda uue matemaatilise aluse ühikutes. Kui nii parameeter <strong>X lahtri suurus</strong> kui ka <strong>Y lahtri suurus</strong> on nullist suuremad, kasutatakse neid koos parameetritega <strong>X registreerimispunkt</strong> ja <strong>Y registreerimispunkt</strong>, et määratleda väljundi ümbriskast.",
	"@@Reproject_Y-Cellsize_tag0@@": "Y-mõõde, mille järgi tuleks andmeid teisendada. See on valikuline. Kui väärtus on 0 või väiksem, arvutatakse väljundi ümbriskast (ulatus ja lahtri suurus) sisendrastrist.",
	"@@Reproject_Y-Registration-Point_tag0@@": "Y-koordinaat, mida kasutatakse andmestiku vasaku ülanurga määratlemiseks. See koordinaat tuleb määratleda uue matemaatilise aluse ühikutes. Kui nii parameeter <strong>X lahtri suurus</strong> kui ka <strong>Y lahtri suurus</strong> on nullist suuremad, kasutatakse neid koos parameetritega <strong>X registreerimispunkt</strong> ja <strong>Y registreerimispunkt</strong>, et määratleda väljundi ümbriskast.",
	"@@Resample_Input-Cellsize_tag0@@": "Sisendrastri lahtri suurus.",
	"@@Resample_Output-Cellsize_tag0@@": "Väljundrastri lahtri suurus. Lahtri suurust saab muuta, kuid rasterandmestiku ulatus jääb samaks. Kasutaja määratud lahtrisuurusest andmete teisendamine võib olla palju aeglasem kui süsteemi vaikesäte, kuna süsteemi vaikesätete andmete teisendamine töötleb minimaalset andmemahtu võimalikult lähedasest eraldusvõimest.",
	"@@Resample_Raster_tag0@@": "Sisendraster, mille andmeid tuleb teisendada.",
	"@@Resample_Resampling-Type_tag0@@": "<strong>Lähim naaber</strong>--Arvutab väljundpiksli väärtuse lähima sisendpiksli abil. NoData pikslid jäävad väljundrasterandmestikus muutumatuks. See on vaikimisi valitud.",
	"@@Resample_Resampling-Type_tag2@@": "<strong>Bilineaarne interpolatsioon</strong>--Arvutab piksli väärtuse, kasutades nelja lähima piksli kaugusega kaalutud väärtust. Selle meetodi töötlemine on arvutuslikult tõhus.",
	"@@Resample_Resampling-Type_tag4@@": "<strong>Kuupkonvolutsioon</strong>--Määrab piksli uue väärtuse, tuginedes sujuva kõvera paigutamisele läbi 16 lähima sisendpiksli keskpunkti.",
	"@@Resample_Resampling-Type_tag6@@": "<strong>Enamus</strong>--Arvutab piksli väärtuse, kasutades enamuse piksli väärtust 16 lähimas pikslis. NoData pikslid jäävad väljundrasterandmestikus muutumatuks.",
	"@@Resample_Resampling-Type_tag8@@": "<strong>Bilineaarne interpolatsioon pluss</strong>--Kasutab <strong>bilineaarset interpolatsiooni</strong>, välja arvatud servasid, mille pikslid on määratletud kui NoData ja neid ei korrata ega arvestata. Kasutage <strong>bilineaarset interpolatsiooni pluss</strong> kallutatud andmete puhul, kuna servad sobituvad paremini.",
	"@@Resample_Resampling-Type_tag14@@": "<strong>Gaussi hägu</strong>--Rakendab algrastrile Gaussi konvolutsiooni ja arvutab piksli väärtuse, kasutades häguse rastri nelja lähima piksli kaugusega kaalutud väärtust. See on asjakohane, et eemaldada müra teisendatud andmetes ja vähendada teisendamist suurema piksli suuruseni.",
	"@@Resample_Resampling-Type_tag16@@": "<strong>Gaussi hägu pluss</strong>--Kasutab sama meetodit nagu <strong>Gaussi hägu</strong>, välja arvatud servasid, mille pikslid on määratletud kui NoData ja neid ei korrata ega arvestata arvutuses. Kasutage <strong>Gaussi hägu pluss</strong> kallutatud andmete puhul, kuna servad sobituvad paremini.",
	"@@Resample_Resampling-Type_tag22@@": "<strong>Keskmine</strong>--Arvutab piksliväärtused, kasutades kõigi kattuvate pikslite keskmist väärtust iga sihtpiksli kohta.",
	"@@Resample_Resampling-Type_tag24@@": "<strong>Miinimum</strong>--Arvutab piksli väärtuse, kasutades kõigi kattuvate pikslite miinimumväärtust. NoData pikslid jäävad väljundrasterandmestikus muutumatuks.",
	"@@Resample_Resampling-Type_tag26@@": "<strong>Maksimum</strong>--Pidevate andmete jaoks sobiv, annab see sujuvama väljundpildi kui lähima naabri andmete teisendamine.",
	"@@Resample_Resampling-Type_tag28@@": "<strong>Vektori keskmine</strong>--Arvutab kõigi kaasatud pikslite abil vektori keskmise suuruse suuna. Seda meetodit saab kasutada ainult kahe ribavahemiku rastri korral, mis tähistavad suurust ja suunda. See teisendab kõigepealt suuruse suuna U-V-ks ja seejärel võtab sihtpiksli U-V saamiseks aritmeetilise keskmise kõigil kaasatud pikslitel ja teisendab selle tagasi suurusjärku.",
	"@@Round-Down_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Round-Down_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Round-Down_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Round-Down_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Round-Down_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Round-Down_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Round-Down_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Round-Down_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Round-Down_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Round-Down_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Round-Down_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Round-Down_Raster_tag0@@": "Allapoole ümardatavad sisendväärtused.",
	"@@Round-Up_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Round-Up_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Round-Up_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Round-Up_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Round-Up_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Round-Up_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Round-Up_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Round-Up_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Round-Up_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Round-Up_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Round-Up_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Round-Up_Raster_tag0@@": "Ülespoole ümardatavad sisendväärtused.",
	"@@Segment-Mean-Shift_Minimum-Segment-Size-in-Pixels_tag0@@": "Minimaalne segmendi suurus, mõõdetuna pikslites. See väärtus on seotud teie minimaalse vastendusühikuga ja filtreerib välja väiksemad piksliplokid. Kõik segmendid, mis on määratud väärtusest väiksemad, ühendavad väiksemad segmendid oma kõige sobivama naabersegmendiga.",
	"@@Segment-Mean-Shift_Raster_tag0@@": "Segmenteeritav sisendraster.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag0@@": "Segmendi piirid tõmbuvad iga segmendi ümber musta samajoonena. See on kasulik, et saaksite eristada külgnevaid segmente, millel on sarnased värvid.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag1@@": "Märkimata--segmendi piire ei kuvata. See on vaikimisi valik.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag2@@": "Märgitud--segmendi piirid kuvatakse mustade samajoontega iga segmendi ümber.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag0@@": "Ruumiomadustel põhinevate objektide eraldamise suhteline tähtsus.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag1@@": "Kehtivad täisarvulised väärtused on vahemikus 1 kuni 20. Väiksemad väärtused annavad tulemuseks laiad klassid ja on sujuvamad. Suurem väärtus on sobiv ruumiliselt väikeste ja koos klasterdatud funktsioonide eristamiseks. Näiteks linnastseenis võiksite klassifitseerida üldised mitteläbipääsetavad pinnaomadused väiksema ruumilise detaili väärtuse abil või klassifitseerida ehitised ja teed eraldi klassideks, kasutades suuremat ruumilise detaili väärtust.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag0@@": "Värviomadustel põhinevate objektide eraldamise suhteline tähtsus.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag1@@": "Kehtivad ujukomaväärtused on vahemikus 1,0 kuni 20.0. Väiksemad väärtused annavad tulemuseks laiad klassid ja on sujuvamad. Suurem väärtus on asjakohane, kui soovite eristada funktsioone, millel on mõnevõrra sarnased spektraalsed omadused. Näiteks võimaldab metsastatud stseenis kõrgema spektraalse detailiväärtuse kasutamine erinevaid puuliike paremini eristada.",
	"@@Segment-Mean-Shift_maximumsegmentsizeinpixels_tag0@@": "<p>Segmendi maksimaalne suurus. Määratud suurusest suuremad segmendid jagatakse. Kasutage seda parameetrit, et vältida suurtest segmentidest tulenevaid artefakte väljundkihis. Vaikeväärtus on -1.</p>",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag0@@": "Valige üks neljast kalibreerimistüübist:",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag1@@": "<strong>Beeta null</strong>--annab radari heleduse koefitsienti sisaldava väljundi.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag3@@": "<strong>Sigma null</strong>--tagasipeegeldus naasis antenni juurde maapinna ühikupinnast, lähtudes maapinna ulatusest.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag5@@": "<strong>Gamma</strong>--antennimudelite määramiseks kasuliku väljastatud ja tagastatud energia mõõtmine.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag7@@": "<strong>Puudub</strong>--ärge rakendage parandust. See on vaikimisi valik.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag0@@": "Sentinel-1 tase-1 GRD või SLC sisendraster, mida soovite töödelda.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag1@@": "Funktsioon kasutab LUT-faili kas termilise korrektsiooni rakendamiseks või paranduse eemaldamiseks sõltuvalt LUT sisust.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag0@@": "Sisendraster Sentinel-1, mida soovite töödelda.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag1@@": "Funktsioon kasutab LUT-faili termilise korrektsiooni rakendamiseks või paranduse eemaldamiseks sõltuvalt LUT sisust.",
	"@@Set-Null_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Set-Null_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Set-Null_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Set-Null_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Set-Null_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Set-Null_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Set-Null_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Set-Null_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Set-Null_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Set-Null_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Set-Null_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Set-Null_False-Raster_tag0@@": "Sisend, mille väärtusi kasutatakse väljundpiksli väärtusena, kui tingimus on vale. See võib olla täisarv, ujukoma raster või konstandi väärtus.",
	"@@Set-Null_Raster_tag0@@": "Sisendraster, mis tähistab loogilise matemaatilise rasterfunktsiooni kahendtulemust. Väärtused on kas 1 (tõene) või 0 (väär). See võib olla täisarv või ujukomaraster.",
	"@@Shaded-Relief_Altitude_tag0@@": "Kõrgus on päikese tõusunurk horisondist kõrgemal ja ulatub 0–90 kraadini. Väärtus 0 kraadi näitab, et päike on horisondil, st samal horisontaalsel tasapinnal kui võrdlusraam. Väärtus 90 kraadi näitab, et päike on otse pea kohal. Vaikimisi on horisondi kohal 45 kraadi.",
	"@@Shaded-Relief_Azimuth_tag0@@": "Asimuut on päikese suhteline asukoht horisondi kohal (kraadides). Seda asukohta tähistab päikesenurk, mõõdetuna päripäeva põhja poole. 0 kraadi asimuut näitab põhja, ida on 90 kraadi, lõuna on 180 kraadi ja lääne on 270 kraadi.",
	"@@Shaded-Relief_Color-Scheme-Type_tag0@@": "Saate määrata, kas varjutatud reljeefi kuvamiseks kasutatakse värvipassi või värvikaarti.",
	"@@Shaded-Relief_Color-Scheme-Type_tag1@@": "<strong>Värvipass</strong>--Kui valite <strong>värvipassi</strong>, palutakse teil valida sobiv värvipass.",
	"@@Shaded-Relief_Color-Scheme-Type_tag5@@": "<strong>Värvikaart</strong>--Kui valite <strong>värvikaardi</strong>, palutakse teil määrata kasutatav värvikaardifail.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag0@@": "Saate määrata, kas vaikeserva piksli interpolatsioon on keelatud.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag1@@": "Märgistamata--bilineaarset andmete teisendamist rakendatakse ühtlaselt varjutatud reljeefi andmete teisendamiseks. See on vaikimisi valik.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag2@@": "Märgitud--bilineaarset andmete teisendamist kasutatakse varjutatud reljeefis, välja arvatud rastrite servades või NoData pikslite kõrval. Need pikslid täidetakse NoDataga, kuna need vähendavad võimalike teravate servade efekte.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag3@@": "Selle valiku kasutamisel välditakse esemete andmete teisendamist, mis võivad tekkida rastri servades. Väljundpikslid rastri serval või pikslite kõrval ilma väärtuseta täidetakse NoData-ga; seetõttu on soovitatav seda suvandit kasutada ainult siis, kui saadaval on teisi kattuvaid piksleid. Kui kattuvad pikslid on saadaval, kuvatakse nendel NoData aladel kattuvad piksliväärtused selle asemel, et olla tühjad.",
	"@@Shaded-Relief_Raster_tag0@@": "Sisendkõrgusraster.",
	"@@Shaded-Relief_Scaling_tag0@@": "Varjutatud tulemust skaleeritakse dünaamiliselt, reguleerides z-tegurit, kasutades ühte kahest võimalusest:",
	"@@Shaded-Relief_Scaling_tag1@@": "<strong>Puudub</strong>--Skaleerimist ei rakendata. See sobib ideaalselt ühte kohalikku ala hõlmavasse rasterandmestikku. Seda ei soovitata kasutada ülemaailmsete andmestike puhul, millel on suured erinevused kõrgustes või mitme skaalaga kaartides, kuna see tekitab väikeste skaalade juures väikeste variatsioonidega maastikureljeefi.",
	"@@Shaded-Relief_Scaling_tag3@@": "<strong>Korrigeeritud</strong>--Rakendab mittelineaarset kohandamist vaikimisi väärtuste <strong>Piksli suuruse aste</strong> ja <strong>Piksli suuruse tegur</strong> abil, mis mahutavad vaaturi sisse- ja väljalõikamisel mitmesuguseid kõrguse muutusi (skaalat). Suvand <strong>Korrigeeritud</strong> on soovitatav, kui kasutate ülemaailmset andmekogumit.",
	"@@Shaded-Relief_Z-Factor_tag0@@": "Z-tegur on suurendustegur, mida kasutatakse kõrguse väärtuse teisendamiseks. Seda kasutatakse kahel otstarbel:",
	"@@Shaded-Relief_Z-Factor_tag1@@": "Kõrgusühikute (meetrid või jalad) teisendamine andmestiku horisontaalsete koordinaatide ühikuteks, mis võivad olla jalad, meetrid või kraadid",
	"@@Shaded-Relief_Z-Factor_tag2@@": "visuaalse efektina vertikaalse liialduse lisamiseks",
	"@@Shaded-Relief_Z-Factor_tag3@@": "Varjutatud tulemust skaleeritakse dünaamiliselt, reguleerides z-tegurit, kasutades ühte kahest võimalusest:",
	"@@Shaded-Relief_Z-Factor_tag4@@": "<strong>Puudub</strong>--Skaleerimist ei rakendata. See sobib ideaalselt ühte kohalikku ala hõlmavasse rasterandmestikku. Seda ei soovitata kasutada ülemaailmsete andmestike puhul, millel on suured erinevused kõrgustes või mitme skaalaga kaartides, kuna see tekitab väikeste skaalade juures väikeste variatsioonidega maastikureljeefi.",
	"@@Shaded-Relief_Z-Factor_tag6@@": "<strong>Korrigeeritud</strong>--Rakendab mittelineaarset kohandamist vaikimisi väärtuste <strong>Piksli suuruse aste</strong> ja <strong>Piksli suuruse tegur</strong> abil, mis mahutavad vaaturi sisse- ja väljalõikamisel mitmesuguseid kõrguse muutusi (skaalat). Suvand <strong>Korrigeeritud</strong> on soovitatav, kui kasutate ülemaailmset andmekogumit.",
	"@@Shaded-Relief_hillshadetype_tag0@@": "Juhib nõlvavarjutuse illuminatsiooniallikat.",
	"@@Shaded-Relief_hillshadetype_tag1@@": "<strong>Traditsiooniline</strong>--arvutab nõlvavarjutuse ühe illuminatsiooni suuna järgi. Saate seada <strong>asimuudi</strong> ja <strong>kõrguse</strong> suvandeid valgusallika asukoha juhtimiseks. See on vaikimisi valik.",
	"@@Shaded-Relief_hillshadetype_tag2@@": "<strong>Mitmesuunaline</strong>--ühendab mitmest allikast tulevat valgust, et kujutada maastiku täiustatud visuaalsust.",
	"@@Shaded-Relief_PSPower_tag0@@": "<strong>Piksli suuruse aste</strong> arvestab kõrguste muutustega (või mõõtkavaga), kui vaataja suumib kaardiekraanil sisse ja välja. See on astendaja, mida rakendatakse võrrandi piksli suuruse tingimusele, mis kontrollib kiirust, mille juures <strong>Z-tegur</strong> muutub, et vältida märkimisväärset reljeefi kadu.",
	"@@Shaded-Relief_PSPower_tag1@@": "Parameeter kehtib ainult siis, kui <strong>skaleerimise</strong> tüüp on <strong>Korrigeeritud</strong>. Vaikeväärtus on 0,664.",
	"@@Shaded-Relief_PSZFactor_tag0@@": "<strong>Piksli suuruse tegur</strong> arvestab mõõtkava muutustega, kui vaataja suumib kaardiekraanil sisse ja välja. See kontrollib kiirust, millega <strong>Z-tegur</strong> muutub.",
	"@@Shaded-Relief_PSZFactor_tag1@@": "Parameeter kehtib ainult siis, kui <strong>skaleerimise</strong> tüüp on <strong>Korrigeeritud</strong>. Vaikeväärtus on 0,024.",
	"@@Sin_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Sin_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Sin_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Sin_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Sin_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Sin_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Sin_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Sin_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Sin_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Sin_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Sin_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Sin_Raster_tag0@@": "Sisend, mille puhul arvutatakse siinuse väärtused.",
	"@@SinH_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@SinH_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@SinH_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@SinH_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@SinH_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@SinH_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@SinH_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@SinH_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@SinH_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@SinH_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@SinH_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@SinH_Raster_tag0@@": "Sisend, mille puhul arvutatakse hüperboolse siinuse väärtused.",
	"@@Sink_Flow-Direction-Raster_tag0@@": "Sisendraster, mis näitab voosuunda igast lahtrist välja.",
	"@@Sink_Flow-Direction-Raster_tag1@@": "Voosuuna rastri saab luua funktsiooni <strong>voosuund</strong>abil.",
	"@@Slope_DEM_tag0@@": "Sisendkõrgusraster.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag0@@": "Selle valiku kasutamisel välditakse esemete andmete teisendamist, mis võivad tekkida rastri servades. Väljundpikslid rastri serval või pikslite kõrval ilma väärtuseta täidetakse NoData-ga; seetõttu on soovitatav seda suvandit kasutada ainult siis, kui saadaval on teisi kattuvaid piksleid. Kui kattuvad pikslid on saadaval, kuvatakse nendel NoData aladel kattuvad piksliväärtused selle asemel, et olla tühjad.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag1@@": "Märgistamata--bilineaarset andmete teisendamist rakendatakse ühtlaselt teie kalde uuesti esitamiseks. See on vaikimisi valik.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag2@@": "Märgitud--bilineaarset andmete teisendamist kasutatakse kalde sees, välja arvatud rastrite servades või NoData pikslite kõrval. Need pikslid täidetakse NoDataga, kuna need vähendavad võimalike teravate servade efekte.",
	"@@Slope_Scaling_tag0@@": "Kaldenurk võib olla väljundiks kas kraadides või protsentides tõusuna. <strong>Skaleerimiseks</strong>on kolm võimalust:",
	"@@Slope_Scaling_tag3@@": "<strong>Kraad</strong>--Kaldenurk arvutatakse kraadides. Väärtused on vahemikus 0 kuni 90.",
	"@@Slope_Scaling_tag5@@": "<strong>Protsentuaalne_tõus</strong>--Kaldenurk arvutatakse protsendiväärtustes. Väärtused on vahemikus 0 kuni lõpmatus. Lameda pinna tõus on 0 protsenti, 45-kraadise pinna tõus on aga 100 protsenti. Pinna vertikaalsemaks muutudes muutub protsendi tõus järjest suuremaks.",
	"@@Slope_Scaling_tag7@@": "<strong>Skaleeritud</strong>--Kalle arvutatakse samamoodi kui KRAAD, kuid z-tegurit reguleeritakse skaala järgi. Kasutab väärtusi <strong>Piksli suuruse aste</strong> ja <strong>Piksli suuruse tegur</strong>, mis mahutavad vaaturi sisse- ja väljalõikamisel mitmesuguseid eraldusvõime muutusi (skaalat). Seda soovitatakse kasutada ülemaailmsete andmekomplektide kasutamisel, eriti kui kasutada kallet visualiseerimiseks pinnana.",
	"@@Slope_Scaling_tag13@@": "Z-tegurit reguleeritakse järgmise võrrandi abil:",
	"@@Slope_Scaling_tag14@@": "korrigeeritud Z-tegur = (Z-tegur) + (piksli suurus)",
	"@@Slope_Scaling_tag15@@": "× (piksli suuruse tegur)",
	"@@Slope_Scaling_tag16@@": "Piksli suuruse aste",
	"@@Slope_Z-Factor_tag0@@": "<strong>Z-tegur</strong> on mõõtkavategur, mida kasutatakse kõrguse väärtuste teisendamiseks. Seda kasutatakse kahel otstarbel:",
	"@@Slope_Z-Factor_tag3@@": "Kõrgusühikute (meetrid või jalad) teisendamine andmestiku horisontaalsete koordinaatide ühikuteks, mis võivad olla jalad, meetrid või kraadid",
	"@@Slope_Z-Factor_tag4@@": "visuaalse efektina vertikaalse liialduse lisamiseks",
	"@@Slope_PSPower_tag0@@": "<strong>Piksli suuruse aste</strong> arvestab kõrguste muutustega (või mõõtkavaga), kui vaataja suumib kaardiekraanil sisse ja välja. See on astendaja, mida rakendatakse võrrandi piksli suuruse tingimusele, mis kontrollib kiirust, mille juures <strong>Z-tegur</strong> muutub, et vältida märkimisväärset reljeefi kadu.",
	"@@Slope_PSPower_tag1@@": "Parameeter kehtib ainult siis, kui skaleer<strong>imise</strong> tüüp on <strong>Skaleeritud</strong>. Vaikeväärtus on 0,664.",
	"@@Slope_PSZFactor_tag0@@": "<strong>Piksli suuruse tegur</strong> arvestab mõõtkava muutustega, kui vaataja suumib kaardiekraanil sisse ja välja. See kontrollib kiirust, millega <strong>Z-tegur</strong> muutub.",
	"@@Slope_PSZFactor_tag1@@": "Parameeter kehtib ainult siis, kui <strong>skaleerimise</strong> tüüp on <strong>Skaleeritud</strong>. Vaikeväärtus on 0,024.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag0@@": "Sisendvoo akumulatsiooni rastrikiht.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag1@@": "Selle saab luua funktsiooniga <strong>Voo akumulatsioon</strong>.",
	"@@Snap-Pour-Point_Pour-Point-Field_tag0@@": "Välja kasutatakse väärtuste määramiseks valgumispunkti asukohtadele.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag0@@": "Sisend-valgumispunkti asukohad, mis tuleb kokku tõmmata.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag1@@": "Sisendrasterkihi puhul loetakse kõik lahtrid, mis pole NoData (st millel on väärtus), valgumispunktideks ja tõmmatakse kokku.",
	"@@Snap-Pour-Point_Snap-Distance_tag0@@": "Maksimaalne kaugus kaardiüksustes suurema akumuleeritud voohulgaga lahtri otsimiseks.",
	"@@Speckle_Additive-Noise-Mean_tag0@@": "Määrab lisamüra keskmise väärtuse. Suurem müra keskmine väärtus annab vähem silumist, väiksem väärtus aga rohkem silumist.",
	"@@Speckle_Additive-Noise-Mean_tag1@@": "See parameeter kehtib ainult juhul, kui <strong>filtri tüüp</strong> on <strong>Lee filter</strong> ja <strong>müramudel</strong> on <strong>Aditiivne müra</strong> või <strong>Aditiivne ja multiplikatiivne müra</strong>. Vaikeväärtus on 0.",
	"@@Speckle_Damping-Factor_tag0@@": "Määrab filtreerimisel eksponentsiaalse summutusefekti ulatuse. Suurem summutusväärtus säilitab servad paremini, kuid silub vähem, samas kui väiksem väärtus annab rohkem silumist. Väärtus 0 annab sama väljundi kui madalpääsfilter.",
	"@@Speckle_Damping-Factor_tag1@@": "See parameeter kehtib ainult juhul, kui <strong>filtri tüüp</strong> on <strong>Täiustatud Lee filter</strong> või <strong>Frosti filter</strong>. Vaikeväärtus on 1.",
	"@@Speckle_Filter-Size_tag0@@": "Määrab müra filtreerimiseks kasutatava piksliakna suuruse:",
	"@@Speckle_Filter-Size_tag1@@": "3x3",
	"@@Speckle_Filter-Size_tag2@@": "5x5",
	"@@Speckle_Filter-Size_tag3@@": "7x7",
	"@@Speckle_Filter-Size_tag4@@": "9x9",
	"@@Speckle_Filter-Size_tag5@@": "11x11",
	"@@Speckle_Filter-Type_tag0@@": "määrab filtri tüübi, mida kasutatakse silumisalgoritmis täppide müra eemaldamiseks:",
	"@@Speckle_Filter-Type_tag1@@": "<strong>Lee filter</strong>--Vähendab täppide müra, rakendades iga pildi pikslile ruumilise filtri, mis filtreerib andmed ruudukujulises aknas arvutatud kohaliku statistika põhjal. See filter on kasulik, kui soovite siluda täppidega andmeid, millel on liidetav või korrutatav komponent. See on vaikimisi valik.",
	"@@Speckle_Filter-Type_tag3@@": "<strong>Täiustatud Lee filter</strong>--Lee filtri kohandatud versioon, mis sisaldab <strong>summutustegurit</strong> ja <strong>vaatamiste arvu</strong>. See filter on kasulik siis, kui soovite vähendada täppe, säilitades samal ajal tekstuuriteabe.",
	"@@Speckle_Filter-Type_tag9@@": "<strong>Frosti filter</strong>--Vähendab täppide müra eksponentsiaalselt summutatud tsirkulaarse sümmeetrilise filtriga, mis kasutab kohalikku statistikat üksikutes filtriakendes. See filter on kasulik siis, kui soovite vähendada täppe, säilitades samal ajal radaripiltide servad.",
	"@@Speckle_Filter-Type_tag11@@": "<strong>Kuani filter</strong>--Sarnaselt Lee filtriga rakendab see filter iga pildi piksli suhtes ruumifiltrit ja filtreerib andmed ruudukujulises aknas arvutatud kohaliku statistika põhjal. See filter on kasulik siis, kui soovite vähendada täppe, säilitades samal ajal radaripiltide servad.",
	"@@Speckle_Multiplicative-Noise-Mean_tag0@@": "Määrab multiplikatiivse müra keskmise väärtuse. Suurem müra keskmine väärtus annab vähem silumist, väiksem väärtus aga rohkem silumist.",
	"@@Speckle_Multiplicative-Noise-Mean_tag1@@": "See parameeter kehtib ainult juhul, kui <strong>filtri tüüp</strong> on <strong>Lee filter</strong> ja <strong>müramudel</strong> on <strong>Aditiivne müra</strong> või <strong>Aditiivne ja multiplikatiivne müra</strong>. Vaikeväärtus on 1.",
	"@@Speckle_Noise-Model_tag0@@": "Määrab müratüübi, mis vähendab radari pildi kvaliteeti:",
	"@@Speckle_Noise-Model_tag1@@": "<strong>Multiplikatiivne müra</strong>--Juhuslik signaalimüra, mis korrutatakse jäädvustamise või edastamise ajal asjakohaseks signaaliks",
	"@@Speckle_Noise-Model_tag3@@": "<strong>Aditiivne müra</strong>--Juhuslik signaalimüra, mis liidetakse jäädvustamise või edastamise ajal asjakohaseks signaaliks",
	"@@Speckle_Noise-Model_tag5@@": "<strong>Aditiivne ja multiplikatiivne müra</strong>--Mõlemad müramudelid",
	"@@Speckle_Noise-Variance_tag0@@": "Määrab radaripildi müra dispersiooni.",
	"@@Speckle_Noise-Variance_tag1@@": "See parameeter kehtib ainult juhul, kui <strong>filtri tüüp</strong> on <strong>Lee filter</strong> ja <strong>müramudel</strong> on <strong>Aditiivne müra</strong> või <strong>Aditiivne ja multiplikatiivne müra</strong>. Vaikeväärtus on 0,25.",
	"@@Speckle_Number-of-Looks_tag0@@": "Määrab pildi välimuse arvu, mis kontrollib pildi silumist ja hindab müra dispersiooni. Väiksem väärtus muudab pildi sujuvamaks, suurem väärtus aga säilitab rohkem pildiobjekte.",
	"@@Speckle_Number-of-Looks_tag1@@": "See parameeter kehtib ainult juhul, kui <strong>filtri tüüp</strong> on <strong>Lee filter</strong> ja <strong>müramudel</strong> on <strong>Multiplikatiivne müra</strong> või kui <strong>filtri tüüp</strong> on <strong>Kuani filter</strong>. Vaikeväärtus on 1.",
	"@@Speckle_Raster_tag0@@": "Sisendraster.",
	"@@Spectral-Conversion_Conversion-Matrix_tag0@@": "Sisendrastri teisendamiseks kasutatav maatriks.",
	"@@Spectral-Conversion_Conversion-Matrix_tag1@@": "Teisendamiseks kasutatav võrrand on:",
	"@@Spectral-Conversion_Conversion-Matrix_tag2@@": "Väljund Riba_R = Kaal_P * Riba_C",
	"@@Spectral-Conversion_Conversion-Matrix_tag3@@": "kus:",
	"@@Spectral-Conversion_Conversion-Matrix_tag4@@": "Riba_R on väljundriba, kus R on arv alates 1 kuni väljundribade arvuni.",
	"@@Spectral-Conversion_Conversion-Matrix_tag5@@": "Kaal_P on komadega eraldatud kaalude loend, 1 iga sisendriba kohta. Iga riba kaalude summa peab olema 1.",
	"@@Spectral-Conversion_Conversion-Matrix_tag6@@": "Riba_C on sisendpilt, kus C on arv vahemikus 1 kuni sisendpildi ribade arvuni.",
	"@@Spectral-Conversion_Raster_tag0@@": "Sisendraster.",
	"@@Spectral-Conversion_Raster_tag1@@": "See võib olla raster-, mosaiik- või pilditeenus.",
	"@@Spectral-Conversion_Size_tag0@@": "Ridade ja veergude arv <strong>teisendusmaatriksis</strong>.",
	"@@Square_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Square_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Square_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Square_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Square_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Square_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Square_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Square_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Square_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Square_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Square_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Square_Raster_tag0@@": "Ruudustatavad sisendväärtused.",
	"@@Square-Root_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Square-Root_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Square-Root_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Square-Root_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Square-Root_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Square-Root_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Square-Root_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Square-Root_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Square-Root_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Square-Root_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Square-Root_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Square-Root_Raster_tag0@@": "Ruutjuure leidmiseks kasutatud sisendväärtused.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag0@@": "Seadistage iga riba statistika väärtused.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag1@@": "Veerg ${Histogram} on kirjutuskaitstud väli, mille saab täita, kasutades parameetrit <strong>Import</strong>. Histogrammifaili importimisel tehakse ${Histogram} veergu märge <strong>Määratletud</strong>.",
	"@@Statistics-and-Histogram_Import_tag0@@": "Saate statistika ja histogrammiteabe importida olemasolevast raster- või XML-failist.",
	"@@Statistics-and-Histogram_Raster_tag0@@": "Sisendraster, mis nõuab statistika ja histogrammi seadistamist.",
	"@@Statistics-and-Histogram_Statistics_tag0@@": "Seadistage iga riba statistika väärtused.",
	"@@Stream-Link_Flow-Direction-Raster_tag0@@": "Sisendraster, mis näitab voosuunda igast lahtrist välja.",
	"@@Stream-Link_Flow-Direction-Raster_tag1@@": "Voosuuna rastri saab luua funktsiooni <strong>voosuund</strong>abil.",
	"@@Stream-Link_Stream-Raster_tag0@@": "Lineaarset voovõrku tähistav sisendraster.",
	"@@Stream-Order_Flow-Direction-Raster_tag0@@": "Sisendraster, mis näitab voosuunda igast lahtrist välja.",
	"@@Stream-Order_Flow-Direction-Raster_tag1@@": "Voosuuna rastri saab luua funktsiooni <strong>voosuund</strong>abil.",
	"@@Stream-Order_Order-Method_tag0@@": "Vookorralduse määramise meetod.",
	"@@Stream-Order_Order-Method_tag1@@": "<strong>STRAHLER</strong>--1952. aastal Strahleri välja pakutud voogude tellimise meetod. Voojärjestus suureneb ainult siis, kui sama järjestusega voog lõikub. Esimese ja teise järgu lingi lõikepunkt jääb kolmanda järgu lingi loomise asemel teise tellimuse lingiks. See on vaikimisi valik.",
	"@@Stream-Order_Order-Method_tag3@@": "<strong>SHREVE</strong>--1967. aastal Shreve välja pakutud meetod voogude järjestamise suurusjärgu järgi. Kõikidele lisajõgedeta linkidele omistatakse suurusjärk (järk) üks. Suurusjärgud on lisandunud kallak. Kui kaks linki ristuvad, lisatakse nende suurusjärk ja määratakse kallaku link.",
	"@@Stream-Order_Stream-Raster_tag0@@": "Sisendvoo raster, mis kujutab lineaarset voovõrku.",
	"@@Stretch_Auto-Gamma_tag0@@": "Kasutage <strong>Auto gamma</strong> gamma arvutamiseks andmestiku statistikast ja histogrammist. Statistika võib olla eeldatav statistika funktsiooni enda järgi või tarkvara saab statistikat hinnata, kui valisite kihi.",
	"@@Stretch_Dynamic-Range-Adjustment_tag0@@": "Märkige ruut <strong>Dünaamilise ulatuse seadistamine</strong>, kui soovite, et statistika arvutataks ainult ekraanil kuvatud pikslite järgi. Seda suvandit rakendatakse tavaliselt siis, kui pilt avaldatakse ja seda kasutatakse veebirakenduses, mis ei saa seda tüüpi venitust täita.",
	"@@Stretch_Estimate-Statistics_tag0@@": "Märkige ära märkeruut <strong>Hinnanguline statistika</strong>, kui soovite hinnata oma statistikat. Hinnanguline statistika arvutatakse 1000 x 1000 proovi põhjal rastri keskelt ja seda kasutatakse venitamisel.",
	"@@Stretch_Estimate-Statistics_tag3@@": "Kui see ruut on ära märgitud ja rastril on statistika, või sisestasite väärtusi tabelisse <strong>Statistika</strong>, kasutatakse neid hindamise asemel, välja arvatud juhul, kui venitamine nõuab histogrammi. Kui venitamine nõuab histogrammi, mida pole olemas, siis hinnatakse seda.",
	"@@Stretch_Gamma_tag0@@": "Kasutage liugurit, et käsitsi määrata väärtus <strong>Gamma</strong>.",
	"@@Stretch_Number-Of-Standard-Deviations_tag0@@": "Määrake kasutatavate standardhälvete arvu n väärtus. Selle meetodi abil rõhutatakse, kui palju omaduste väärtused erinevad keskmisest väärtusest; parim, kui seda kasutatakse hajusandmetel.",
	"@@Stretch_Output-Maximum_tag0@@": "Määrake histogrammi suurim piksliväärtus.",
	"@@Stretch_Output-Maximum_tag1@@": "<strong>Väljundi miinimum</strong> ja <strong>Väljundi maksimum</strong> määravad väärtuste vahemiku, mis seejärel venitatakse lineaarselt kontrastseks.",
	"@@Stretch_Output-Minimum_tag0@@": "Määrake histogrammi väikseim piksliväärtus.",
	"@@Stretch_Output-Minimum_tag1@@": "<strong>Väljundi miinimum</strong> ja <strong>Väljundi maksimum</strong> määravad väärtuste vahemiku, mis seejärel venitatakse lineaarselt kontrastseks.",
	"@@Stretch_Percent-Clip-Maximum_tag0@@": "Määrake suurte väärtuste protsent, mille soovite venitusest välja jätta.",
	"@@Stretch_Percent-Clip-Maximum_tag1@@": "Kehtivad väärtused on vahemikus 0 kuni 99.",
	"@@Stretch_Percent-Clip-Minimum_tag0@@": "Määrake väikeste väärtuste protsent, mille soovite venitusest välja jätta.",
	"@@Stretch_Percent-Clip-Minimum_tag1@@": "Kehtivad väärtused on vahemikus 0 kuni 99.",
	"@@Stretch_Raster_tag0@@": "Sisendraster, et kontrasti tugevdada.",
	"@@Stretch_Sigmoid-Strength-Level_tag0@@": "<strong>Tugevuse tase</strong> määrab, kui suurt osa sigmoidaalfunktsioonist venitamisel kasutatakse. Madal väärtus (nt 1) kasutab ainult kõvera keskmist osa, mis kipub tekitama tuhmi ja nõrku värve. Kõrge väärtus (nt 6) kasutab kogu kõverat, mis kipub tekitama julgeid ja teravaid värve.",
	"@@Stretch_Statistics_tag0@@": "Dialoogiboksi saate sisestada oma statistika. Vaikimisi tuuakse statistika andmetest, kuid selle asemel kasutatakse kõiki sellele parameetrile sisestatud väärtusi.",
	"@@Stretch_Type_tag0@@": "Valige venitamise tüübi meetod:",
	"@@Stretch_Type_tag1@@": "Puudub--pole kontrastitugevdust",
	"@@Stretch_Type_tag2@@": "StdDev--standardhälbe venitus",
	"@@Stretch_Type_tag3@@": "MinMax--miinimum-maksimum venitus",
	"@@Stretch_Type_tag4@@": "PercentMinMax--protsentuaalne lõige",
	"@@Stretch_Type_tag5@@": "Sigmoid--Sigmoidi venitus",
	"@@Stretch_Use-Gamma_tag0@@": "Märkige ära märkeruut <strong>Kasutage gammat</strong>, kui soovite rakendada gamma venitust.",
	"@@Swath_Cellsize_tag0@@": "Väljundrastri lahtri suurus tuvastatakse automaatselt; aga soovi korral saate seda muuta. Lahtri suurust saab muuta, kuid rasterandmestiku ulatus jääb samaks.",
	"@@Swath_Interpolation-Method_tag0@@": "Selle funktsiooni jaoks on neli andmete teisendamise meetodit:",
	"@@Swath_Interpolation-Method_tag1@@": "<strong>Lähim naaber</strong>--Arvutab piksli väärtuse lähima piksli abil. Kui lähtepikslit pole olemas, ei saa väljundis uut pikslit luua.",
	"@@Swath_Interpolation-Method_tag3@@": "<strong>Bilineaarne</strong>--Arvutab piksli väärtuse, kasutades nelja lähima piksli kaugusega kaalutud väärtust.",
	"@@Swath_Interpolation-Method_tag5@@": "<strong>Lineaarne säilitamine</strong>--Kasutab ebaregulaarse rastri iga lahtri keskpunktide triangulaarset ebaregulaarset võrku, et interpoleerida pinda, mis seejärel teisendatakse tavaliseks rastriks.",
	"@@Swath_Interpolation-Method_tag7@@": "<strong>Loomulik naaber</strong>--Sooritab lähima naabri ülesande, on interpolatsiooni meetoditest kiireim. Seda kasutatakse peamiselt diskreetandmete, näiteks maakasutuse klassifikatsiooni puhul, kuna see ei muuda lahtrite väärtusi. Maksimaalne ruumiline viga on üks pool lahtri suurusest.",
	"@@Swath_Raster_tag0@@": "Ebaregulaarselt ruudustunud rastri andmeid tuleb teisendada.",
	"@@Tan_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisenlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Tan_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Tan_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Tan_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Tan_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Tan_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Tan_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Tan_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Tan_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Tan_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Tan_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Tan_Raster_tag0@@": "Sisend, mille puhul arvutatakse tangensi väärtused.",
	"@@TanH_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@TanH_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@TanH_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@TanH_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@TanH_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@TanH_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@TanH_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@TanH_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@TanH_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@TanH_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@TanH_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@TanH_Raster_tag0@@": "Sisend, mille puhul arvutatakse hüperboolse tangensi väärtused.",
	"@@Tasseled-Cap_Raster_tag0@@": "Sisendrastri Tasseled Cap (tutimütsi) teisendamiseks.",
	"@@Times_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Times_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Times_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Times_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Times_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Times_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Times_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Times_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Times_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Times_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Times_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Times_Raster_tag0@@": "Sisend, mis sisaldab korrutatavaid väärtusi.",
	"@@Times_Raster_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Times_Raster2_tag0@@": "Sisend, mis sisaldab väärtusi, millega esimene sisend korrutatakse.",
	"@@Times_Raster2_tag1@@": "Konstantset väärtust saab kasutada selle parameetri sisendina eeldusel, et teise parameetri jaoks on määratud raster.",
	"@@Transpose-Bits_Bit-Pattern_tag0@@": "Valige soovitud transponeerimisviis või määrake kohandatud transponeerimisviis.",
	"@@Transpose-Bits_Bit-Pattern_tag1@@": "Landsat 8 kiudpilv",
	"@@Transpose-Bits_Bit-Pattern_tag2@@": "Landsat 8 pilv",
	"@@Transpose-Bits_Bit-Pattern_tag3@@": "Landsat 8 pilvevari",
	"@@Transpose-Bits_Bit-Pattern_tag4@@": "Landsat 8 ettenähtud täide",
	"@@Transpose-Bits_Bit-Pattern_tag5@@": "Landsat 8 langetatud raam",
	"@@Transpose-Bits_Bit-Pattern_tag6@@": "Landsat 8 lumi/jää",
	"@@Transpose-Bits_Bit-Pattern_tag7@@": "Landsat 8 maastiku varjamine",
	"@@Transpose-Bits_Bit-Pattern_tag8@@": "Landsat 8 taimestik",
	"@@Transpose-Bits_Bit-Pattern_tag9@@": "Landsat 8 vesi",
	"@@Transpose-Bits_Bit-Pattern_tag10@@": "Kasutaja määratud",
	"@@Transpose-Bits_Constant-Value_tag0@@": "Valikuline väärtus, mida kasutatakse kõigi bittide täitmiseks, mis pole ülevõtmisse kaasatud. See parameeter paljastatakse, kui parameetri <strong>Loo täiteraster konstandist</strong> olekuks on seatud <strong>Jah</strong>.",
	"@@Transpose-Bits_Fill-Raster_tag0@@": "Määrake rasterandmestik, mida kasutatakse kõigi bittide täitmiseks, mis pole ülevõtmisega seotud. See parameeter paljastatakse, kui parameetri <strong>Loo täiteraster konstandist</strong> olekuks on seatud <strong>Ei</strong>.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag0@@": "Genereerige täiteraster, kasutades konstandi väärtust:",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag1@@": "<strong>Jah</strong>--Raster genereeritakse, kasutades konstandi väärtust, et täita bitid, mis pole ülevõtmisse kaasatud. See on vaikimisi valik.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag3@@": "<strong>Ei</strong>--Raster genereeritakse, kasutades olemasoleva rasterandmestiku piksliväärtusi, et täita bitid, mis pole ülevõtmisse kaasatud.",
	"@@Transpose-Bits_Output-Bit-and-Input-Bit_tag0@@": "Kirjutuskaitstud tabel, mis näitab väljundbitte ja nende asemele jäävaid sisendeid.",
	"@@Transpose-Bits_Raster_tag0@@": "Sisendraster pakkimiseks ja uuesti vastendamiseks.",
	"@@Unit-Conversion_From-Unit_tag0@@": "Pikslite algne ühikutüüp.",
	"@@Unit-Conversion_Raster_tag0@@": "Sisendraster, mis sisaldab teisendatud ühikuid.",
	"@@Unit-Conversion_To-Unit_tag0@@": "Pikslite teisendatud ühikutüüp.",
	"@@Vector-Field_Angle-Reference-System_tag0@@": "Määrab, kuidas suunakomponenti mõõdeti.",
	"@@Vector-Field_Angle-Reference-System_tag1@@": "Geograafilised--0° punktid otse põhja suunas ja 90° punktid otse itta",
	"@@Vector-Field_Angle-Reference-System_tag2@@": "Aritmeetiline--0° punktid otse itta ja 90° punktid otse põhja suunas",
	"@@Vector-Field_Input-Data-Type_tag0@@": "Vektorivälja tüüp, mida teie sisendid esindavad.",
	"@@Vector-Field_Input-Data-Type_tag1@@": "Tundmatu--pole teada, kas sisendid esindavad U-V või magnituudisuunda.",
	"@@Vector-Field_Input-Data-Type_tag2@@": "U-V--sisendandmed tähistavad U- ja V-komponenti.",
	"@@Vector-Field_Input-Data-Type_tag3@@": "Magnituudi suund--sisendandmed tähistavad suurust ja suunda.",
	"@@Vector-Field_Output-Data-Type_tag0@@": "Määrab vektorvälja tüübi, mida teie väljund esindab.",
	"@@Vector-Field_Output-Data-Type_tag1@@": "Magnituudi suund--väljundandmed tähistavad suurust ja suunda.",
	"@@Vector-Field_Output-Data-Type_tag2@@": "U-V-- väljundandmed tähistavad U- ja V-komponenti.",
	"@@Vector-Field_Raster1_tag0@@": "Esimene sisendraster.",
	"@@Vector-Field_Raster1_tag1@@": "See on kas U väärtus või suurusjärk.",
	"@@Vector-Field_Raster2_tag0@@": "Teine sisendraster.",
	"@@Vector-Field_Raster2_tag1@@": "See on kas V väärtus või suund.",
	"@@Viewshed_Analysis-Method_tag0@@": "Valige meetod, mille järgi nähtavus arvutatakse. Selle suvandi abil saate suurema jõudluse tagamiseks vahetada veidi täpsust.",
	"@@Viewshed_Analysis-Method_tag1@@": "Kõik vaateväli--vaateväli tehakse rastri iga piksliga, et luua nähtavaid alasid. See on vaikimisi valitud meetod.",
	"@@Viewshed_Analysis-Method_tag2@@": "Perimeetri vaateväljad--vaatevälju tehakse nähtavuse piirkondade määramiseks ainult pikslitele nähtava ala perimeetril. Sellel meetodil on parem jõudlus kui meetodil <strong>Kõik vaateväljad</strong> sest arvutustes on vähem vaatevälju.",
	"@@Viewshed_Analysis-Type_tag0@@": "Saate valida, millist tüüpi nähtavuse analüüsi soovite teha, kas määrata, kui nähtav on iga lahter vaatlejatele, või määrata iga nähtava asukoha jaoks kindlaks vaatlejad.",
	"@@Viewshed_Analysis-Type_tag1@@": "Sagedus--kordade arv, mille jooksul sisendpinna rastris iga piksli asukohta saab näha sisendvaatluse asukohtades (punktidena või tippudena vaatleja murdjooneobjektie jaoks). See on vaikimisi valik.",
	"@@Viewshed_Analysis-Type_tag2@@": "Vaatlejad--väljund näitab täpselt, millised vaatluspunktid on näha igast rasterpinna asukohast. Lubatud maksimaalne sisendvaatlejate arv on selle analüüsitüübiga 32.",
	"@@Viewshed_Horizontal-End-Angle_tag0@@": "See väärtus määratleb horisontaalse skannimisvahemiku lõppnurga. Väärtus tuleks määrata kraadides 0 kuni 360,0, kus 0 on suunatud põhja poole. Vaikeväärtus on 360,0.",
	"@@Viewshed_Horizontal-End-Angle_tag1@@": "See võib olla väli sisendi<strong>Vaatleja objektid</strong> andmestikul või numbriline väärtus. Kui see parameeter on seatud väärtusele, rakendatakse seda väärtust kõigile vaatlejatele. Iga vaatleja jaoks erinevate väärtuste määramiseks määrake see parameeter väljale <strong>Vaatleja objektid </strong> andmestikus.",
	"@@Viewshed_Horizontal-Start-Angle_tag0@@": "See väärtus määratleb horisontaalse skannimisvahemiku algusnurga. Väärtus tuleks määrata kraadides 0 kuni 360,0, kus 0 on suunatud põhja poole. Vaikeväärtus on 0.",
	"@@Viewshed_Horizontal-Start-Angle_tag1@@": "See võib olla väli sisendi<strong>Vaatleja objektid</strong> andmestikul või numbriline väärtus. Kui see parameeter on seatud väärtusele, rakendatakse seda väärtust kõigile vaatlejatele. Iga vaatleja jaoks erinevate väärtuste määramiseks määrake see parameeter väljale <strong>Vaatleja objektid </strong> andmestikus.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag0@@": "Sisemise raadiuse parameetri kauguse tüüp.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag1@@": "Märkimata--<strong>Siseraadiust</strong> tuleb tõlgendada 2D-kaugusena. See on vaikimisi valik.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag4@@": "Märgitud--<strong>Siseraadiust</strong> tuleb tõlgendada 3D-kaugusena.",
	"@@Viewshed_Inner-Radius_tag0@@": "See väärtus määratleb alguse (minimaalse) vahemaa, millest nähtavus määratakse. Piksleid, mis on sellest kaugusest lähemal, ei peeta väljundis nähtavaks, kuid need võivad siiski blokeerida pikslite nähtavuse <strong>siseraadiuse</strong> ja <strong>välisraadiuse</strong> vahel. Vaikeväärtus on 0.",
	"@@Viewshed_Inner-Radius_tag5@@": "See võib olla väli sisendi<strong>Vaatleja objektid</strong> andmestikul või numbriline väärtus. Kui see parameeter on seatud väärtusele, rakendatakse seda väärtust kõigile vaatlejatele. Iga vaatleja jaoks erinevate väärtuste määramiseks määrake see parameeter väljale <strong>Vaatleja objektid </strong> andmestikus.",
	"@@Viewshed_Observer-Elevation_tag0@@": "Seda väärtust kasutatakse vaatluspunktide või -vertikaalide pinna kõrguse määratlemiseks.",
	"@@Viewshed_Observer-Elevation_tag1@@": "See võib olla väli sisendi<strong>Vaatleja objektid</strong> andmestikul või numbriline väärtus. Kui seda parameetrit ei ole määratud, saadakse vaatleja kõrgus pinnakattest bilineaarse interpolatsiooni abil. Kui see parameeter on seatud väärtusele, rakendatakse seda väärtust kõigile vaatlejatele. Iga vaatleja jaoks erinevate väärtuste määramiseks määrake see parameeter väljale <strong>Vaatleja objektid </strong> andmestikus.",
	"@@Viewshed_Observer-Features_tag0@@": "Vajalik sisendobjekt, mis tuvastab vaatleja asukohad. See võib olla punkt, mitmikpunkt või murdjoonobjektid.",
	"@@Viewshed_Observer-Features_tag1@@": "Sisendobjektiklass teisendatakse nähtavuse arvutamisel 3D geotsentriliseks koordinaatsüsteemiks. Arvutuses ignoreeritakse vaatlejaid, kes ei kuulu pinna rastri ulatusse või asuvad NoData lahtrites.",
	"@@Viewshed_Observer-Offset_tag0@@": "See väärtus näitab vertikaalset kaugust (pinnaühikutes), mis lisatakse vaatleja kõrgusele. See peaks olema positiivne täisarv või ujukoma väärtus.",
	"@@Viewshed_Observer-Offset_tag1@@": "See võib olla väli sisendi<strong>Vaatleja objektid</strong> andmestikul või numbriline väärtus. Kui see parameeter on seatud väärtusele, rakendatakse seda väärtust kõigile vaatlejatele. Iga vaatleja jaoks erinevate väärtuste määramiseks määrake see parameeter väljale <strong>Vaatleja objektid </strong> andmestikus.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag0@@": "Välisraadiuse parameetri kauguse tüüp.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag1@@": "Märkimata--<strong>Välisraadiust</strong> tuleb tõlgendada 2D-kaugusena. See on vaikimisi valik.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag4@@": "Märgitud--<strong>Välisraadiust</strong> tuleb tõlgendada 3D-kaugusena.",
	"@@Viewshed_Outer-Radius_tag0@@": "See väärtus määratleb maksimaalse vahemaa, millest nähtavus määratakse. Sellest kaugusest kaugemal olevad pikslid jäetakse analüüsist välja.",
	"@@Viewshed_Outer-Radius_tag1@@": "See võib olla väli sisendi<strong>Vaatleja objektid</strong> andmestikul või numbriline väärtus. Kui see parameeter on seatud väärtusele, rakendatakse seda väärtust kõigile vaatlejatele. Iga vaatleja jaoks erinevate väärtuste määramiseks määrake see parameeter väljale <strong>Vaatleja objektid </strong> andmestikus.",
	"@@Viewshed_Raster_tag0@@": "Nõutav sisendpinna raster. See võib olla täisarv või ujukomaraster.",
	"@@Viewshed_Raster_tag1@@": "Sisend teisendatakse nähtavuse arvutamisel 3D geotsentriliseks koordinaatsüsteemiks. Sisendrastri NoData lahtrid ei blokeeri nähtavuse määramist.",
	"@@Viewshed_Refractive-Coefficient_tag0@@": "Õhus nähtava valguse murdumistegur.",
	"@@Viewshed_Refractive-Coefficient_tag1@@": "Vaikeväärtus on 0,13.",
	"@@Viewshed_Surface-Offset_tag0@@": "See väärtus näitab vertikaalset kaugust (pinnaühikutes), mis lisatakse iga sihtpiksli z-väärtusele, nagu seda nähtavuse puhul peetakse. See peaks olema positiivne täisarv või ujukoma väärtus.",
	"@@Viewshed_Surface-Offset_tag1@@": "See võib olla väli sisendi<strong>Vaatleja objektid</strong> andmestikul või numbriline väärtus. Kui see parameeter on seatud väärtusele, rakendatakse seda väärtust kõigile vaatlejatele. Iga vaatleja jaoks erinevate väärtuste määramiseks määrake see parameeter väljale <strong>Vaatleja objektid </strong> andmestikus.",
	"@@Viewshed_Vertical-Error_tag0@@": "Määramatuse summa, mõõdetuna ruutkeskmise veana (RMSE) pinna kõrguse väärtustes. See on ujukoma väärtus, mis tähistab sisendkõrguse väärtuste eeldatavat viga. Kui sellele parameetrile omistatakse väärtus, mis on suurem kui 0, on väljundi nähtavuse raster ujukoma. Sel juhul tähistab iga piksli väärtus väljundi nähtavuse rastril tõenäosuste summat, mille kohaselt lahter on nähtav kõigile vaatlejatele.",
	"@@Viewshed_Vertical-Error_tag1@@": "Kui <strong>alalüüsi tüüp</strong> on <strong>Vaatlejad</strong> või <strong>analüüsi meetod</strong> on <strong>Perimeetri vaateväljad</strong>, on see parameeter keelatud.",
	"@@Viewshed_Vertical-Lower-Angle_tag0@@": "See väärtus määratleb skannimise alumise vertikaalse nurga piiri horisontaaltasapinnast allpool. Väärtus tuleks määrata kraadides -90,0 kuni 0, mis võib olla täisarv või ujukpunkt. Vaikeväärtus on -90,0.",
	"@@Viewshed_Vertical-Lower-Angle_tag1@@": "See võib olla väli sisendi<strong>Vaatleja objektid</strong> andmestikul või numbriline väärtus. Kui see parameeter on seatud väärtusele, rakendatakse seda väärtust kõigile vaatlejatele. Iga vaatleja jaoks erinevate väärtuste määramiseks määrake see parameeter väljale <strong>Vaatleja objektid </strong> andmestikus.",
	"@@Viewshed_Vertical-Upper-Angle_tag0@@": "See väärtus määratleb skannimise ülemise vertikaalse nurga piiri horisontaaltasandi kohal. Väärtus tuleks määrata kraadides 0 kuni 90,0, mis võib olla täisarv või ujukpunkt. Vaikeväärtus on 90,0.",
	"@@Viewshed_Vertical-Upper-Angle_tag1@@": "See võib olla väli sisendi<strong>Vaatleja objektid</strong> andmestikul või numbriline väärtus. Kui see parameeter on seatud väärtusele, rakendatakse seda väärtust kõigile vaatlejatele. Iga vaatleja jaoks erinevate väärtuste määramiseks määrake see parameeter väljale <strong>Vaatleja objektid </strong> andmestikus.",
	"@@Watershed_Flow-Direction-Raster_tag0@@": "Sisendraster, mis näitab voosuunda igast lahtrist välja.",
	"@@Watershed_Flow-Direction-Raster_tag1@@": "Voosuuna rastri saab luua funktsiooni <strong>voosuund</strong>abil.",
	"@@Watershed_Pour-Point(s)-Raster_tag0@@": "Sisend-valgumispunkti asukohad.",
	"@@Watershed_Pour-Point(s)-Raster_tag1@@": "See raster väljendab lahtreid, millest kõrgemal määratakse mõjupiirkond või valgala. Kõiki lahtreid, mis ei ole NoData-lahtrid, kasutatakse lähtelahtritena.",
	"@@Watershed_Pour-Point-Field_tag0@@": "Välja kasutatakse väärtuste määramiseks valgumispunkti asukohtadele.",
	"@@Watershed_Pour-Point-Field_tag1@@": "Rastri valamispunkti andmekomplekti puhul kasutatakse vaikimisi ${Value}.",
	"@@Weighted-Overlay_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Weighted-Overlay_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Weighted-Overlay_Cellsize-Type_tag2@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Weighted-Overlay_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Weighted-Overlay_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Weighted-Overlay_Cellsize-Type_tag5@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Weighted-Overlay_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Weighted-Overlay_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Weighted-Overlay_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Weighted-Overlay_Extent-Type_tag3@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Weighted-Overlay_Extent-Type_tag4@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Weighted-Overlay_Scales_tag0@@": "Uute väärtuste vahemik, mille abil vanu väärtusi uuesti vastendada.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag0@@": "Kaalutud ülekatte tabel koosneb neljast osast:",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag1@@": "Kiht--kõik sisendrastrid peavad olema täisarvulised.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag2@@": "Mõju--iga sisendraster on kaalutud vastavalt selle tähtsusele või mõjule suhtelise protsendina. Protsentuaalsete mõjutuskaalude summa peab olema 100 ja iga kaal peab olema määratud täisarvuliste väärtustega.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag3@@": "Väli--kaalumiseks kasutatav sisendrastri täisarv või stringiväli.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag4@@": "Vastenduste tabel--igale sisendrastri väärtusele määratakse uus skaalaväärtus, mis põhineb vastenduste tabelil. Skaalaväärtus võib olla kehtiv väärtus või NoData väärtus.",
	"@@Weighted-Sum_Cellsize-Type_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisendlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Weighted-Sum_Cellsize-Type_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Weighted-Sum_Cellsize-Type_tag2@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Weighted-Sum_Cellsize-Type_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtri suurust. See on vaikimisi valik.",
	"@@Weighted-Sum_Cellsize-Type_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Weighted-Sum_Cellsize-Type_tag5@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Weighted-Sum_Extent-Type_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Weighted-Sum_Extent-Type_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Weighted-Sum_Extent-Type_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Weighted-Sum_Extent-Type_tag3@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Weighted-Sum_Extent-Type_tag4@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag0@@": "Kaalutud summa tabel on määratletud kolme omadusega:",
	"@@Weighted-Sum_Weighted-Sum-Table_tag1@@": "Kiht--raster, mida kaalutakse.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag2@@": "Väli--kaalumiseks kasutatava rastri väli.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag3@@": "Kaal--massi väärtus, millega raster korrutada. See võib olla mis tahes positiivne või negatiivne kümnendväärtus.",
	"@@Wind-Chill_Temperature-Raster_tag0@@": "Ühe ribaga raster, kus piksli väärtused tähistavad välisõhu temperatuuri.",
	"@@Wind-Chill_Temperature-Units_tag0@@": "Sisendtemperatuuri rastriga seotud mõõtühik. Saadaolevad sisendühikud on Celsius, Fahrenheit ja Kelvin.",
	"@@Wind-Chill_Wind-Chill-Units_tag0@@": "Väljundrastriga seotud mõõtühik. Saadaolevad väljundühikud on Celsius, Fahrenheit ja Kelvin.",
	"@@Wind-Chill_Wind-Speed-Raster_tag0@@": "Ühe ribaga raster, kus piksli väärtused tähistavad tuule kiirust.",
	"@@Wind-Chill_Wind-Speed-Units_tag0@@": "Määratleb tuulekiiruse rastri mõõtühiku:",
	"@@Wind-Chill_Wind-Speed-Units_tag1@@": "Miili tunnis (mph)",
	"@@Wind-Chill_Wind-Speed-Units_tag2@@": "Kilomeetrit tunnis (km/h)",
	"@@Wind-Chill_Wind-Speed-Units_tag3@@": "Meetrit sekundis (m/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag4@@": "Jalga sekundis (ft/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag5@@": "Sõlme (kn)",
	"@@Zonal-Remap_Background-Value_tag0@@": "Väljundrastri algne piksliväärtus enne sisendpikslite kordumist.",
	"@@Zonal-Remap_Default-Output-Value_tag0@@": "Väärtus, mis määratakse pikslile, mis ei vasta ühelegi <strong>tsooniatribuutide tabelis</strong> seatud tingimusele.",
	"@@Zonal-Remap_Default-Output-Value_tag3@@": "See on ka väljundpiksli väärtus, kui parameeter <strong>Väljundväärtuse väljanimi</strong> jäetakse määramata või või vastava piirväärtuse väljundväärtus jäetakse määramata <strong>tsooni atribuutide tabelis</strong>.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag0@@": "Välja nimi, mis sisaldab maksimumväärtust, millest allapoole sisendpiksel uuesti vastendatakse.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag1@@": "Kui see jäetakse määramata või kui välja väärtus on tühiväärtus, siis piksliväärtusi maksimumväärtuse suhtes ei testita.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag0@@": "Välja nimi, mis sisaldab minimaalset väärtust, millest suurem sisendpiksel on.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag1@@": "Kui see jäetakse määramata või kui välja väärtus on tühiväärtus, siis piksliväärtusi miinimumväärtuse suhtes ei testita.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag0@@": "Välja nimi, mis sisaldab sihtväärtust, millele sisendpiksel uuesti vastendatakse.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag1@@": "Kui see jäetakse määramata või kui välja väärtus on tühiväärtus, on muudetud piksliväärtuse väärtuseks seatud <strong>vaikimisi väljundi väärtus</strong>.",
	"@@Zonal-Remap_Value-Raster_tag0@@": "Nõutav üheribaline rastrisisend, mis sisaldab eemaldatavaid piksliväärtusi.",
	"@@Zonal-Remap_Where-Clause_tag0@@": "Valikuline päring, mis on rakendatud <strong>tsooniatribuutide tabelis</strong>.",
	"@@Zonal-Remap_Where-Clause_tag3@@": "Kui kasutaksite ülaltoodud tabelit näitena, oleks päring ${Variable1 = 'bare earth' AND Variable2 = 'California'}.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag0@@": "Nõutav sisendtabel, mis sisaldab vähemalt kolme välja. Sellel peab olema minimaalne lävendi väärtus, maksimaalne lävendi väärtus ja sihtväärtus. Sihtväärtus on väli, mis sisaldab vastendatud väärtust.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag1@@": "Faili vorming võib olla objektiklass, objektiteenus või mis tahes tabelitüüp, mida ArcGIS toetab.",
	"@@Zonal-Remap_Zone-Field_tag0@@": "Välja nimi <strong>tsooniatribuutide tabelis</strong>, mis sisaldab tsooni ID väärtusi.",
	"@@Zonal-Remap_Zone-Field_tag3@@": "Tsooni ID väärtused on otseselt seotud teie tsooni rastri tsooni ID-dega. Need tagavad vastendamisel veel ühe filtreerimistaseme. Kui tabelis pole mõne kindla kirjega seostatud tsooni ID-d, ei osale see vastendamises.",
	"@@Zonal-Remap_Zone-Raster_tag0@@": "Ühe ribaga raster, kus iga piksel määratleb konkreetse asukohaga seotud tsoonid. Tsoon on määratletud sisendi kõigi aladena, millel on sama väärtus. Alad ei pea olema omavahel ühendatud.",
	"@@Predict-Using-Trend_dimensiondefinition_tag0@@": "Määrab meetodi, mida kasutatakse ennustamise dimensiooni väärtuste esitamiseks.",
	"@@Predict-Using-Trend_dimensiondefinition_tag1@@": "<strong>Väärtuse järgi</strong>--Ennustus arvutatakse dimensiooni ühele väärtusele. Näiteks soovite ennustada aastaseid sademeid aastateks 2050, 2100 ja 2150. See on vaikimisi valik.",
	"@@Predict-Using-Trend_dimensiondefinition_tag2@@": "<strong>Intervalli järgi</strong>--Ennustus arvutatakse dimensiooni intervalli kohta, mis on määratletud alguse ja lõpu väärtusega. Näiteks soovite ennustada aastaseid sademeid igaks aastaks ajavahemikus 2050-2150.",
	"@@Predict-Using-Trend_end_tag0@@": "Ennustuses kasutatava dimensiooni intervalli lõpukuupäev, kõrgus ja sügavus.",
	"@@Predict-Using-Trend_end_tag1@@": "See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Intervalli järgi</strong>.",
	"@@Predict-Using-Trend_raster_tag0@@": "Sisendi mitmemõõtmeline trendi raster funktsioonist <strong>Trendi loomine</strong>.",
	"@@Predict-Using-Trend_start_tag0@@": "Ennustuses kasutatava dimensiooni intervalli alguskuupäev, kõrgus või sügavus.",
	"@@Predict-Using-Trend_start_tag1@@": "See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Intervalli järgi</strong>.",
	"@@Predict-Using-Trend_unit_tag0@@": "Vahemiku väärtusena kasutatav ühik. See parameeter kehtib ainult juhul, kui analüüsi dimensioon on ajaline mõõde.",
	"@@Predict-Using-Trend_unit_tag1@@": "<strong>Tunnid</strong>--Ennustus arvutatakse igale tunnile ajavahemikus, mida kirjeldatakse parameetritega <strong>Algus</strong>, <strong>Lõpp</strong> ja <strong>Väärtuse intervall</strong>.",
	"@@Predict-Using-Trend_unit_tag2@@": "<strong>Päevad</strong>--Ennustus arvutatakse igale päevale ajavahemikus, mida kirjeldatakse parameetritega <strong>Algus</strong>, <strong>Lõpp</strong> ja <strong>Väärtuse intervall</strong>.",
	"@@Predict-Using-Trend_unit_tag3@@": "<strong>Nädalad</strong>--Ennustus arvutatakse igale nädalale ajavahemikus, mida kirjeldatakse parameetritega <strong>Algus</strong>, <strong>Lõpp</strong> ja <strong>Väärtuse intervall</strong>.",
	"@@Predict-Using-Trend_unit_tag4@@": "<strong>Kuud</strong>--Ennustus arvutatakse igale kuule ajavahemikus, mida kirjeldatakse parameetritega <strong>Algus</strong>, <strong>Lõpp</strong> ja <strong>Väärtuse intervall</strong>.",
	"@@Predict-Using-Trend_unit_tag5@@": "<strong>Aastad</strong>--Ennustus arvutatakse igale aastale ajavahemikus, mida kirjeldatakse parameetritega <strong>Algus</strong>, <strong>Lõpp</strong> ja <strong>Väärtuse intervall</strong>.",
	"@@Predict-Using-Trend_valueinterval_tag0@@": "Ennustusse kaasatud kahe dimensiooni väärtuse vaheliste etappide arv. Vaikeväärtus on 1.",
	"@@Predict-Using-Trend_valueinterval_tag1@@": "See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Intervalli järgi</strong>.",
	"@@Predict-Using-Trend_values_tag0@@": "Ennustuses kasutatav dimensiooni väärtus või väärtused.",
	"@@Predict-Using-Trend_values_tag1@@": "Aja, sügavuse ja kõrguse väärtuste formaat  peab sobima kokku trendi rastri loomiseks kasutatavate väärtuste dimensiooniga. Kui trendi raster loodi dimensiooni StdTime jaoks, peab formaat olema YYYY-MM-DDTHH:MM:SS, näiteks 2050-01-01T00:00:00. Erinevad väärtused eraldatakse semikooloniga.",
	"@@Process-Raster-Collection_aggregationfunction_tag0@@": "Määrake rastri funktsiooni mall, mida kasutatakse mitme lõigu agregeerimiseks väiksemaks arvuks lõikudeks või üheks ainsaks lõiguks.",
	"@@Process-Raster-Collection_dimension_tag0@@": "Agregeerimise mõõde. See on mõõde, mida mööda muutujad agregeeritakse.",
	"@@Process-Raster-Collection_itemfunction_tag0@@": "Määrake rastrifunktsiooni mall, mida kasutatakse iga lõigu või üksuse töötlemiseks sisendrastri kogumis.",
	"@@Process-Raster-Collection_keywordinterval_tag0@@": "Määrab märksõna vahemiku, mida kasutatakse mööda mõõdet agregeerides. See sisend on nõutav, kui valik <strong>tüüp</strong> on seatud olekusse <strong>Vahemiku märksõna</strong> ja agregatsioon peab toimuma läbi aja.",
	"@@Process-Raster-Collection_keywordinterval_tag1@@": "<strong>Iga tund</strong>--Andmete väärtused agregeeritakse tunnisteks ajasammudeks ja tulemus sisaldab igat tundi aegreas.",
	"@@Process-Raster-Collection_keywordinterval_tag2@@": "<strong>Iga päev</strong>--Andmete väärtused agregeeritakse päevasteks ajasammudeks ja tulemus sisaldab igat päeva aegreas.",
	"@@Process-Raster-Collection_keywordinterval_tag3@@": "<strong>Iga nädal</strong>--Andmete väärtused agregeeritakse nädalasteks ajasammudeks ja tulemus sisaldab igat nädalat aegreas.",
	"@@Process-Raster-Collection_keywordinterval_tag4@@": "<strong>Iga 10 päeva järel</strong>--Andmete väärtused agregeeritakse kolmeks 10-päevaseks perioodiks. Viimane periood võib sisaldada rohkem või vähem, kui 10 päeva. Väljund sisaldab 3 lõiku iga kuu kohta.",
	"@@Process-Raster-Collection_keywordinterval_tag5@@": "<strong>Iga 5 päeva järel</strong>--Andmete väärtused agregeeritakse kuueks 5-päevaseks perioodiks. Viimane periood võib sisaldada rohkem või vähem, kui 5 päeva. Väljund sisaldab 6 lõiku iga kuu kohta.",
	"@@Process-Raster-Collection_keywordinterval_tag6@@": "<strong>Iga kuu</strong>--Andmete väärtused agregeeritakse kuulisteks ajasammudeks ja tulemus sisaldab igat kuud aegreas.",
	"@@Process-Raster-Collection_keywordinterval_tag7@@": "<strong>Iga kvartal</strong>--Andmete väärtused agregeeritakse kvartaalseteks ajasammudeks ja tulemus sisaldab igat kvartalit aegreas.",
	"@@Process-Raster-Collection_keywordinterval_tag8@@": "<strong>Iga aasta</strong>--Andmete väärtused agregeeritakse aastateks ajasammudeks ja tulemus sisaldab igat aastat aegreas.",
	"@@Process-Raster-Collection_keywordinterval_tag9@@": "<strong>Iga päev korduv</strong>--Andmete väärtused agregeeritakse päevasteks ajasammudeks ja tulemus sisaldab ühte agregeeritud väärtust juuliuse päeva kohta. Väljund sisaldab kõige rohkem 366 päevast ajalõiku.",
	"@@Process-Raster-Collection_keywordinterval_tag10@@": "<strong>Iga nädal korduv</strong>--Andmete väärtused agregeeritakse nädalasteks ajasammudeks ja tulemus sisaldab ühte agregeeritud väärtust iga nädala kohta. Väljund sisaldab kõige rohkem 53 nädalast ajalõiku.",
	"@@Process-Raster-Collection_keywordinterval_tag11@@": "<strong>Iga kuu korduv</strong>--Andmete väärtused agregeeritakse kuulisteks ajasammudeks ja tulemus sisaldab ühte agregeeritud väärtust iga kuu kohta. Väljund sisaldab kõige rohkem 12 kuust ajalõiku.",
	"@@Process-Raster-Collection_keywordinterval_tag12@@": "<strong>Iga kvartal korduv</strong>--Andmete väärtused agregeeritakse kvartaalseteks ajasammudeks ja tulemus sisaldab ühte agregeeritud väärtust iga kvartali kohta. Väljund sisaldab kõige rohkem 4 kvartalist ajalõiku.",
	"@@Process-Raster-Collection_maximumvalue_tag0@@": "Vahemiku maksimaalne väärtus.",
	"@@Process-Raster-Collection_maximumvalue_tag1@@": "See parameeter on nõutav, kui parameetri <strong>Tüüp</strong> olekuks on seatud <strong>Ulatuste intervall</strong>.",
	"@@Process-Raster-Collection_minimumvalue_tag0@@": "Vahemiku minimaalne väärtus.",
	"@@Process-Raster-Collection_minimumvalue_tag1@@": "See parameeter on nõutav, kui parameetri <strong>Tüüp</strong> olekuks on seatud <strong>Ulatuste intervall</strong>.",
	"@@Process-Raster-Collection_processingfunction_tag0@@": "Määrake rastrifunktsiooni mall, mida kasutatakse töödeldud rasterkihi kuvamiseks.",
	"@@Process-Raster-Collection_rastercollection_tag0@@": "Sisendi mitmemõõtmeline raster, mosaiikkiht või mosaiikandmestik.",
	"@@Process-Raster-Collection_type_tag0@@": "Täpsustab mõõtme vahemiku, millele andmed agregeeritakse.",
	"@@Process-Raster-Collection_type_tag1@@": "<strong>Kõik</strong>--Andmete väärtused agregeeritakse kõikides lõikudes. See on vaikimisi valik.",
	"@@Process-Raster-Collection_type_tag2@@": "<strong>Vahemiku märksõna</strong>--Muutuja andmed agregeeritakse üldtuntud vahemiku abil.",
	"@@Process-Raster-Collection_type_tag3@@": "<strong>Ulatuste intervall</strong>--Muutuja andmed agregeeritakse määratud väärtuste või kuupäevade paaride vahel.",
	"@@Process-Raster-Collection_type_tag4@@": "<strong>Intervalli väärtused</strong>--Muutuja andmed agregeeritakse kasutajapõhise vahemiku ja ühiku abil.",
	"@@Process-Raster-Collection_unit_tag0@@": "Vahemiku väärtusena kasutatav ühik. See parameeter on nõutav, kui parameeter <strong>Dimensioon</strong> on ajaväli ja parameetri <strong>Tüüp</strong> olekuks on seatud <strong>Intervalli väärtus</strong>.",
	"@@Process-Raster-Collection_unit_tag1@@": "Kui kasutate agregeerimiseks teist tüüpi väärtust kui aeg, ei ole see valik saadaval ja sisendi mitmemõõtmelise rastri vahemiku väärtuse ühik vastab muutuja ühikule.",
	"@@Process-Raster-Collection_unit_tag2@@": "<strong>Tunnid</strong>--Andmete väärtused agregeeritakse tunnisteks ajalõikudeks antud vahemikus.",
	"@@Process-Raster-Collection_unit_tag3@@": "<strong>Päevad</strong>--Andmete väärtused agregeeritakse päevasteks ajalõikudeks antud vahemikus.",
	"@@Process-Raster-Collection_unit_tag4@@": "<strong>Nädalad</strong>--Andmete väärtused agregeeritakse nädalasteks ajalõikudeks antud vahemikus.",
	"@@Process-Raster-Collection_unit_tag5@@": "<strong>Kuud</strong>--Andmete väärtused agregeeritakse kuulisteks ajalõikudeks antud vahemikus.",
	"@@Process-Raster-Collection_unit_tag6@@": "<strong>Aastad</strong>--Andmete väärtused agregeeritakse aastasteks ajalõikudeks antud vahemikus.",
	"@@Process-Raster-Collection_valueinterval_tag0@@": "Agregeerimiseks kasutatava vahemiku suurus. See parameeter on nõutav, kui parameetri <strong>Tüüp</strong> olekuks on seatud <strong>Intervalli väärtus</strong>.",
	"@@Process-Raster-Collection_valueinterval_tag1@@": "Näiteks 30 aasta jagu igakuiste temperatuuriandmete agregeerimiseks 5-aastasteks sammudeks, sisestage number 5 valikusse <strong>Väärtuse vahemik</strong> ja määrake üksusele <strong>Ühik </strong> valik <strong>Aastad</strong>.",
	"@@Linear-Spectral-Unmixing_non-negative_tag0@@": "Määrab väljundi piksli väärtuste määratlemise suvandid.",
	"@@Linear-Spectral-Unmixing_non-negative_tag1@@": "Märgitud--Väljundil puuduvad negatiivsed väärtused.",
	"@@Linear-Spectral-Unmixing_non-negative_tag2@@": "Märkimata--Murrangulisel maakattel võivad olla negatiivsed väärtused.",
	"@@Linear-Spectral-Unmixing_raster_tag0@@": "Sisendraster.",
	"@@Linear-Spectral-Unmixing_spectralprofile_tag0@@": "Sisendi spektraalse profiili fail.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag0@@": "Maakatte erinevate klasside spektraalteave.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag1@@": "<strong>Spektraalprofiil</strong>--Klassifikaatori määratlusfail (${.ecd}), mis on loodud tööriistaga <strong><strong>Maksimaalse sarnasuse klassifikaatori õpetamine</strong></strong>, või JavaScripti objektitähistusega fail (${.json}), mis sisaldab klassi spektraalprofiile.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag2@@": "<strong>Koolitusfunktsioon</strong>--Polügooni objektid või koolituse näidisobjekti klass, mis on loodus <strong>õppenäidiste halduri</strong> abil.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag0@@": "Määrab väljundi piksli väärtuste määratlemise suvandid.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag1@@": "Märgitud--Iga piksli klassi väärtused esitatakse kümnendformaadis, kus klasside summa võrdub 1-ga. Näiteks klass1 = 0,16; klass2 = 0,24; klass3 = 0,60.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag2@@": "Märkimata--Piksli kõigi klasside summa võib olla suurem kui 1.",
	"@@Linear-Spectral-Unmixing_trainingfeature_tag0@@": "Sisendi koolitusobjekti fail.",
	"@@Aggregate_aggregationtechnique_tag0@@": "Agregeerimisel kasutatud meetod. Sisendi lahtrite väärtused, mis on hõlmatud väljundi jämedamate lahtritega, agregeeritakse ükshaaval alljärgneva statistika järgi:",
	"@@Aggregate_aggregationtechnique_tag1@@": "<strong>Summa</strong>--Sisendi lahtrite summa. See on vaikimisi valik.",
	"@@Aggregate_aggregationtechnique_tag2@@": "<strong>Maksimum</strong>--Sisendi lahtrite suurim väärtus.",
	"@@Aggregate_aggregationtechnique_tag3@@": "<strong>Keskmine</strong>--Sisendi lahtrite keskmine väärtus.",
	"@@Aggregate_aggregationtechnique_tag4@@": "<strong>Mediaan</strong>--Sisendi lahtrite mediaanväärtus.",
	"@@Aggregate_aggregationtechnique_tag5@@": "<strong>Miinimum</strong>--Sisendi lahtrite vähim väärtus.",
	"@@Aggregate_cellfactor_tag0@@": "Tegur, millega korrutatakse sisendi rastri lahtri suurus.",
	"@@Aggregate_cellfactor_tag1@@": "Näiteks annab lahtri teguri väärtus kolm väljundi lahtri suuruse, mis on sisendi rastrist kolm korda suurem.",
	"@@Aggregate_expandextentifneeded_tag0@@": "Määratleb, kuidas käsitleda sisendi rastri piire, kui selle read või veerud ei ole lahtri teguri kordajad.",
	"@@Aggregate_expandextentifneeded_tag1@@": "Märgitud --Laiendab sisendi rastri ülemist või parempoolset piiri nii, et rea või veeru lahtrite koguarv on lahtri teguri kordne. Selle suvandi korral saab väljundi raster katta suurema ruumilise ulatuse kui sisendi raster. See on vaikimisi valik.",
	"@@Aggregate_expandextentifneeded_tag2@@": "Märkimata--Vähendab sisendi rastri ridade või veergude arvu. See kärbib ülejäänud lahtreid sisendi rastri ülemisel või parempoolsel piiril, mis muudab sisendi rastri ridade või veergude arvu lahtri teguri kordseks. Selle suvandi korral saab väljundi raster katta väiksema ruumilise ulatuse kui sisendi raster.",
	"@@Aggregate_ignorenodataincalculations_tag0@@": "Näitab, kas agregeerimisarvutus ignoreerib ${NoData} väärtusi.",
	"@@Aggregate_ignorenodataincalculations_tag1@@": "Märgitud--Määrab, et kui ${NoData} väärtused on olemas mis tahes lahtritel, mis kuuluvad väljundi rastri suurema lahtri ruumilisse ulatusse, siis väljundi lahtri asukohtade väärtuse määramisel eiratakse ${NoData} väärtusi. Väljundi lahtri väärtuse määramisel kasutatakse ainult sisendi neid lahtreid väljundi lahtri ulatuse piires, millel on andmeväärtused. See on vaikimisi valik.",
	"@@Aggregate_ignorenodataincalculations_tag2@@": "Märkimata--Määrab, et kui ${NoData} väärtus on olemas mis tahes lahtril, mis kuuluvad väljundi rastri suurema lahtri ruumilisse ulatusse, siis selle väljundi lahtri asukoht on ${NoData}. Selle suvandi kasutamise korral antakse mõista, et kui agregatsiooni koosseisu kuuluvad lahtrid sisaldavad väärtust ${NoData}, on teave ebapiisav selleks, et teha väljundi väärtuse määramiseks vajalikke konkreetseid arvutusi.",
	"@@Aggregate_raster_tag0@@": "Agregeeritav sisendi raster.",
	"@@Expand_numberofcells_tag0@@": "Laiendatavate lahtrite arv.",
	"@@Expand_numberofcells_tag1@@": "Väärtus peab olema täisarv ning võib olla 1 või suurem.",
	"@@Expand_raster_tag0@@": "Sisendi raster, mille jaoks identifitseeritud tsoone tuleb laiendada.",
	"@@Expand_raster_tag1@@": "See peab olema täisarvuline.",
	"@@Expand_zonevalues_tag0@@": "Laiendatavate tsoonide loend.",
	"@@Expand_zonevalues_tag1@@": "Tsoonide väärtused peavad olema täisarvud ning võivad olla mis tahes järjekorras.",
	"@@Expand_zonevalues_tag2@@": "Mitme tsooni määratlemiseks tuleb tsooni väärtuste eraldamiseks kasutada tühikut.",
	"@@Multidimensional-Filter_dimension_tag0@@": "Mõõde, millest ekstraktitakse muutujad.",
	"@@Multidimensional-Filter_dimensiondefinition_tag0@@": "Määrab meetodi, mida kasutatakse mõõtme lõikudeks jagamisel.",
	"@@Multidimensional-Filter_dimensiondefinition_tag1@@": "<strong>Kõik</strong>--Kasutatakse iga mõõtme kogu vahemikku. See on vaikimisi valik.",
	"@@Multidimensional-Filter_dimensiondefinition_tag2@@": "<strong>Väärtuste järgi</strong>--Mõõde jaotatakse lõikudeks, kasutades mõõtme väärtust või väärtuste loendit.",
	"@@Multidimensional-Filter_dimensiondefinition_tag3@@": "<strong>Vahemike järgi</strong>--Mõõde jaotatakse lõikudeks, kasutades vahemikku või vahemike loendit.",
	"@@Multidimensional-Filter_dimensiondefinition_tag4@@": "<strong>Iteratsiooni järgi</strong>--Mõõde jaotatakse lõikudeks intervalli teatud suuruses.",
	"@@Multidimensional-Filter_endoffirstiteration_tag0@@": "Esimese intervalli lõpp. Seda intervalli kasutatakse andmestiku itereerimiseks. See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Iteratsiooni järgi</strong>.",
	"@@Multidimensional-Filter_maximumvalue_tag0@@": "Vahemiku maksimaalne väärtus. See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Vahemiku järgi</strong>.",
	"@@Multidimensional-Filter_minimumvalue_tag0@@": "Vahemiku minimaalne väärtus. See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Vahemiku järgi</strong>.",
	"@@Multidimensional-Filter_raster_tag0@@": "Sisendi mitmemõõtmeline raster.",
	"@@Multidimensional-Filter_ranges_tag0@@": "<p>Väärtuste gruppide agregeerimiseks kasutatakse tabelis määratud intervallivahemikke. Miinimum- ja maksimum väärtused määravad kaasatava vahemiku.</p><p>See parameeeter on nõutav, kui parameetri<strong>Tüüp</strong>väärtuseks on määratud<strong>Intervallivahemikud</strong>.</p>",
	"@@Multidimensional-Filter_startoffirstiteration_tag0@@": "Esimese intervalli algus. Seda intervalli kasutatakse andmestiku itereerimiseks. See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Iteratsiooni järgi</strong>.",
	"@@Multidimensional-Filter_step_tag0@@": "Sagedus, millega andmestik jaotatakse lõikudeks. See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Iteratsiooni järgi</strong>. Vaikeväärtus on 3.",
	"@@Multidimensional-Filter_unit_tag0@@": "Määrab iteratsiooni ühiku. See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Iteratsiooni järgi </strong> ja parameetri <strong>Mõõde</strong> olekuks on seatud <strong>Standardne aeg</strong>.",
	"@@Multidimensional-Filter_value_tag0@@": "Määratletud dimensiooni väärtus. See parameeter on nõutav, kui parameetri <strong>Dimensiooni määratlus</strong> olekuks on seatud <strong>Väärtuste järgi</strong>.",
	"@@Multidimensional-Filter_variables_tag0@@": "Muutujad, mis on kaasatud mitmemõõtmelise rastrikihi väljundisse. Kui muutujat pole määratletud, kasutatakse esimest muutujat.",
	"@@Multidimensional-Filter_dimensionless_tag0@@": "Määrab, kas kihil peavad olema mõõtme väärtused. See suvand on saadaval ainult juhul, kui kihi loomiseks valitakse ainult üks lõik.",
	"@@Multidimensional-Filter_dimensionless_tag1@@": "Märgitud--Kihil ei ole mõõtme väärtusi.",
	"@@Multidimensional-Filter_dimensionless_tag2@@": "Märkimata--Kihil on mõõtme väärtus. See on vaikimisi valik.",
	"@@Multidimensional-Raster_interpolationcellsize_tag0@@": "Interpoleeritud rastri lahtri suurus. Vaikeväärtus on ${1}.",
	"@@Multidimensional-Raster_interpolationmethod_tag0@@": "Ebakorrapäraste andmete interpoleerimiseks kasutatav teisendamismeetod.",
	"@@Multidimensional-Raster_interpolationmethod_tag1@@": "<strong>Lähim naaber</strong>--Arvutab väljundpiksli väärtuse lähima sisendpiksli abil. Kui lähtepikslit pole olemas, ei saa väljundis uut pikslit luua. See on vaikimisi valik.",
	"@@Multidimensional-Raster_interpolationmethod_tag2@@": "<strong>Lineaarne säilitamine</strong>--Kasutab ebaregulaarse rastri iga lahtri keskpunktide triangulaarset ebaregulaarset võrku, et interpoleerida pinda, mis seejärel teisendatakse tavaliseks rastriks.",
	"@@Multidimensional-Raster_interpolationmethod_tag3@@": "<strong>Loomulik naaber</strong>--Leiab sisendproovide lähima alamhulga päringupunktile ja rakendab neile väärtused proportsionaalsete pindalade alusel väärtuse interpoleerimiseks.",
	"@@Multidimensional-Raster_interpolationmethod_tag4@@": "<strong>Pöördkaugusega kaalutud</strong>--Määrab piksli väärtused, kasutades proovipunktide või pikslite kogumi lineaarselt kaalutud kombinatsiooni. Kaal on teadaolevate punktide või pikslite kauguse pöördfunktsioon.",
	"@@Multidimensional-Raster_raster_tag0@@": "Sisendi mitmemõõtmeline raster.",
	"@@Multidimensional-Raster_variables_tag0@@": "Muutuja või muutujad, mis on kaasatud mitmemõõtmelisse rastrikihti.",
	"@@Random_distribution_tag0@@": "Määrake kasutatav väärtuse juhusliku jaotuse meetod.",
	"@@Random_distribution_tag1@@": "<strong>Ühtlane</strong> (minimaalne, maksimaalne)--Ühtlane jaotus määratletud vahemikuga. vaikeväärtus on miinimumi korral 0 ja maksimumi korral 1. See on vaikimisi valik.",
	"@@Random_distribution_tag2@@": "<strong>Täisarv</strong> (minimaalne, maksimaalne)--Täisarvuline jaotus määratletud vahemikuga. vaikeväärtus on miinimumi korral 1 ja maksimumi korral 10.",
	"@@Random_distribution_tag3@@": "<strong>Normaalne</strong> (keskväärtus, standardhälve)--Normaaljaotus määratletud keskväärtuse ja standardhälbega. vaikeväärtus on keskväärtuse korral 0 ja standardhälbe korral 1.",
	"@@Random_distribution_tag4@@": "<strong>Eksponentsiaalne</strong> (keskväärtus)--Eksponentsiaalne jaotus määratletud keskväärtusega. Vaikeväärtus on 1.",
	"@@Random_distribution_tag5@@": "<strong>Poisson</strong> (keskväärtus)--Poissoni jaotus määratletud keskväärtusega. Vaikeväärtus on 1.",
	"@@Random_distribution_tag6@@": "<strong>Gamma</strong> (alfa, beeta)--Gammajaotus määratletud alfa ja beetaga. Vaikeväärtus on alfa korral 1 ja beeta korral 1.",
	"@@Random_distribution_tag7@@": "<strong>Binoom</strong> (N, tõenäosus)--Binoomjaotus määratletud N-i ja tõenäosusega. Vaikeväärtus on N-i korral 10 ja tõenäosuse korral 0,5.",
	"@@Random_distribution_tag8@@": "<strong>Geomeetriline</strong> (N, tõenäosus)--Geomeetriline jaotus määratletud tõenäosusega. Vaikeväärtus on 0,5.",
	"@@Random_distribution_tag9@@": "<strong>Negatiivne</strong> (r, tõenäosus)--Pascali jaotus määratletud r-i ja tõenäosusega. Vaikeväärtus on r-i korral 10,0 ja tõenäosuse korral 0,5.",
	"@@Random_randomnumbergenerator_tag0@@": "Määratlege juhusliku väärtuse generaatori algoritm, mis kasutab seemnena ja jaotusena juhuslike arvude jada genereerimist. Valikud on järgmised:",
	"@@Random_randomnumbergenerator_tag1@@": "Standardne C-ääris",
	"@@Random_randomnumbergenerator_tag2@@": "ACM kogutud algoritm 599",
	"@@Random_randomnumbergenerator_tag3@@": "Mersenne Twister",
	"@@Random_randomnumbergenerator_tag4@@": "Vaikeväärtus on Mersenne Twister.",
	"@@Random_rasterinfo_tag0@@": "Malli laadimiseks kataloogist või portaalist vajutage nuppu <strong>Laadi malliraster</strong>.",
	"@@Random_seed_tag0@@": "Seeme on täisarvuline väärtus ja seda kasutatakse juhusliku arvu generaatori käivitamiseks. Vaikeväärtus on 1.",
	"@@Shrink_numberofcells_tag0@@": "Lahtrite arv, mille võrra tuleb iga konkreetset tsooni kahandada.",
	"@@Shrink_numberofcells_tag1@@": "Väärtus peab olema täisarv ning võib olla 1 või suurem.",
	"@@Shrink_raster_tag0@@": "Sisendi raster, mille jaoks identifitseeritud tsoone tuleb kahandada.",
	"@@Shrink_raster_tag1@@": "See peab olema täisarvuline.",
	"@@Shrink_zonevalues_tag0@@": "Kahandatavate tsoonide loend.",
	"@@Shrink_zonevalues_tag1@@": "Tsoonide väärtused peavad olema täisarvud ning võivad olla mis tahes järjekorras.",
	"@@Shrink_zonevalues_tag2@@": "Mitme tsooni määratlemiseks tuleb tsooni väärtuste eraldamiseks kasutada tühikut.",
	"@@Distance-Accumulation_costraster_tag0@@": "Raster määrab kulu või takistuse tasapinnalisel liikumisel läbi iga lahtri. Lahtri iga asukoha väärtus väljendab vahemaa ühiku maksumuse liikumisel läbi selle. Iga lahtri asukoha väärtus korrutatakse lahtri resolutsiooniga ja see kompenseerib ka diagonaalliikumist, et saada läbi lahtri liikumise kogukulu.",
	"@@Distance-Accumulation_costraster_tag1@@": "<strong>Kulurastri</strong>väärtus võib täisarv või ujuva väärtusega arv, kuid ei tohi olla negatiivne või null.",
	"@@Distance-Accumulation_distancemethod_tag0@@": "Määrab, kas kaugus arvutatakse planaarse (lapiku maa) või geodeetilise (ellipsoidi) meetodiga.",
	"@@Distance-Accumulation_distancemethod_tag1@@": "Tasapinnaline--tasapinnalistel mõõtmistel kasutatakse pikkuse ja pindala arvutamiseks 2D Descartes’i matemaatikat. Valik on saadaval ainult siis, kui mõõdetakse tasapinnaliste ristkoordinaatide süsteemis ja mõõtmiste aluseks võetakse selle koordinaatsüsteemi 2D-tasand.",
	"@@Distance-Accumulation_distancemethod_tag2@@": "Geodeesia--kõige lühem joon maakera kahe pinna vahel sfäärilisel (ellipsoidsel) joonel. Hoolimata sisendi või väljundi projitseerimisest tulemused ei muutu.",
	"@@Distance-Accumulation_distancemethod_tag3@@": "<strong>Märkus:</strong>Üks geodeetilise joone kasutus on see, kui soovite määrata lennuki lennutrajektoori jaoks lühima marsruudi kahe linna vahel. Seda nimetatakse ka suurringjooneks, kui see põhineb pigem sfääril kui ellipsoidil.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag0@@": "Määrab, kas luuakse ainult kauguse akumulatsiooni raster või mitmeribaline raster, mis sisaldab nii kauguse akumulatsiooni rastrit kui tagasisuuna rastrit.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag1@@": "Märkimata--Tulemus on kauguse akumulatsiooni raster. See on üheribaline tulemus. See on vaikimisi valik.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag2@@": "Märgitud--Luuakse mitmeribaline tulemus. Esimene riba on kauguse akumulatsiooni raster ja teine riba on tagasisuuna raster.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag3@@": "Tagasisuuna raster arvutab iga lahtri jaoks suuna kraadides naaberlahtrini piki lühimat teed tagasi lähima allika juurde, vältides takistusi.",
	"@@Distance-Accumulation_horizontalfactor_tag0@@": "<p>Määratleb seose horisontaalse kuluteguri ja horisontaalse liikumisnurga (HRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kahte akronüümi: HF ja HRMA. HF tähistab horisontaalset tegurit, mis määratleb horisontaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. HRMA tähistab horisontaalset suhtelist liikumisnurka, mis identifitseerib lahtri horisontaalse suuna ja liikumissuuna vahelise nurga.</p><p><strong>Horisontaalsed teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--näitab, et kui HRA on lõikenurgast väiksem, seatakse HF väärtusele, mis on seotud nullteguriga; muidu on see lõpmatus.</li><li><strong>Edasisuunas</strong>--Näitab, et lubatud on ainult edasisuunas liikumine HRMA peab olema suurem kui 0 või sellega võrdne ja alla 90 kraadi (0 <= HRMA < 90). Kui HRMA on suurem kui 0 ja väiksem kui 45 kraadi, seatakse lahtri HF väärtuseks, mis on seotud nullteguriga. Kui HRMA on suurem kui 45 kraadi või sellega võrdne, kasutatakse külgväärtuse teisendaja väärtust. Iga HRMA väärtuse HF, mis on võrdne või suurem kui 90 kraadi, on seatud lõpmatuseni.</li><li><strong>Lineaarne</strong>--Määrab, et HF on HRMA lineaarne funktsioon.</li><li><strong>Pöördlineaarne</strong>--Määrab, et HF on HRMA pöördlineaarne funktsioon.</li><li><strong>Tabel</strong>--Tuvastab, et HF-de määramiseks kasutatava horisontaalteguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Horisontaalsete tegurite modifikaatorid on järgmised:</p><ul><li><strong>Nulltegur</strong>--Horisontaalne tegur, mida kasutatakse, kui HRMA on null. See tegur positsioneerib y-lõikepunkti mis tahes horisontaalse teguri funktsiooni jaoks.</li><li><strong>Lõikenurk</strong>--Määratleb HRMA nurga, millest kaugemale HF seatakse lõpmatusse.</li><li><strong>Kalle</strong>--Määratleb sirgjoone kalde, mida kasutatakse koos horisontaalse teguri märksõnadega <strong>Lineaarne</strong>ja<strong>Pöördlineaarne</strong>. Kall on määratud tõusu osana (näiteks 45-protsendiline kalle on 1/45, mis on sisestatud kui 0,02222).</li><li><strong>Küljeväärtus</strong>--Seadistab HF, kui HRMA on suurem või võrdne 45 kraadiga ja väiksem kui 90 kraadi, kui on määratud horisontaalse teguri märksõna<strong>Edasi</strong>horizontal factor keyword is specified.</li><li><strong>Tabeli nimi</strong>--Tuvastab HF-i määratleva tabeli nime.</li></ul>",
	"@@Distance-Accumulation_horizontalraster_tag0@@": "Raster, mis määratleb horisontaalse suuna igas lahtris.",
	"@@Distance-Accumulation_horizontalraster_tag1@@": "Rastril olevad väärtused peavad olema täisarvud vahemikus 0 kuni 360, kusjuures 0 kraadi on põhjas või ekraani ülaosas ja suureneb päripäeva. Tasapinnalistele aladele tuleks anda väärtus -1. Igas asukohas olevaid väärtusi kasutatakse koos <strong>horisontaalse teguriga</strong>, et määrata kindlaks lahtrist naabrite juurde kolimisel tekkivad horisontaalsed kulud.",
	"@@Distance-Accumulation_initialaccumulation_tag0@@": "Algne kumulatiivne kulu kuluarvutuse alustamiseks. See parameeter võimaldab määrata allikaga seotud püsikulu. Selle asemel, et alustada maksumusega 0, algab kulualgoritm määratud väärtusega.",
	"@@Distance-Accumulation_initialaccumulation_tag1@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Distance-Accumulation_initialaccumulation_tag2@@": "Väärtus peab olema null või suurem. Vaikeväärtus on 0.",
	"@@Distance-Accumulation_maximumaccumulation_tag0@@": "Määratleb ränduri maksimaalse kumulatiivse kulu allika jaoks. Kuluarvutusi jätkatakse iga allika puhul kuni määratud võimsuse saavutamiseni.",
	"@@Distance-Accumulation_maximumaccumulation_tag1@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Distance-Accumulation_maximumaccumulation_tag2@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag0@@": "Kulude väärtustele rakendatav kordaja.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag1@@": "See parameeter võimaldab juhtida liikumisviisi või suurusjärku allika juures. Mida suurem on kordaja, seda suurem on iga lahtri läbimise kulu.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag2@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag3@@": "Väärtused peavad olema suuremad kui null. Vaikeväärtus on 1.",
	"@@Distance-Accumulation_rasterbarriers_tag0@@": "Raster, mis defineerib barjäärid.",
	"@@Distance-Accumulation_rasterbarriers_tag1@@": "Andmestik peab sisaldama NoData-andmeid, kui tõkkeid ei ole. Tõkked on esitatud kehtivate väärtustega, sealhulgas nulliga.",
	"@@Distance-Accumulation_rasterbarriers_tag2@@": "Tõkkeid saab määratleda täisarvulise või ujukomakujulise rastriga.",
	"@@Distance-Accumulation_sourceraster_tag0@@": "Sisendi lähteasukohad.",
	"@@Distance-Accumulation_sourceraster_tag1@@": "See on rasterandmestik, mis tuvastab lahtrid või asukohad, kust arvutatakse iga väljundlahtri asukoha kohta väikseim akumuleeritud kulukaugus.",
	"@@Distance-Accumulation_sourceraster_tag2@@": "See võib olla täisarv või ujukomatüüp.",
	"@@Distance-Accumulation_surfaceraster_tag0@@": "Raster, mis määratleb kõrguse väärtused igas lahtri asukohas.",
	"@@Distance-Accumulation_surfaceraster_tag1@@": "Väärtusi kasutatakse tegeliku pinna vahemaa arvutamiseks lahtrite vahel läbimisel.",
	"@@Distance-Accumulation_traveldirection_tag0@@": "Määratleb reisija suuna vertikaalse teguri, horisontaalse teguri ja allikakindluse määra arvestamisel.",
	"@@Distance-Accumulation_traveldirection_tag1@@": "<strong>Allikast</strong>--Vertikaalset tegurit, horisontaalset tegurit ja allikakindluse määra rakendatakse sisendallikast alustades ja mittelähtelahtritesse liikudes. See on vaikimisi valik.",
	"@@Distance-Accumulation_traveldirection_tag2@@": "<strong>Allikasse</strong>--Vertikaalset tegurit, horisontaalset tegurit ja allikakindluse määra rakendatakse alates igast mittelähtelahtrist ja liikudes tagasi sisendallikasse.",
	"@@Distance-Accumulation_traveldirection_tag3@@": "Määrake kas võtmesõna <strong>Allikast</strong> või <strong>Allikasse</strong>, mida rakendatakse kõigile allikatele, või määrake väli <strong>allikarastris</strong>, mis sisaldab iga allika liikumissuuna identifitseerimise võtmesõnu. See väli peab sisaldama stringi ${FROM_SOURCE} või ${TO_SOURCE}.",
	"@@Distance-Accumulation_verticalfactor_tag0@@": "<p>Määratleb seose vertikaalse kuluteguri ja vertikaalse liikumisnurga (VRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kaht akronüümi: VHF ja VRMA. VF tähistab vertikaalset tegurit, mis määratleb vertikaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. VRMA tähistab vertikaalset suhtelist liikumisnurka, mis näitab kaldenurka FROM-lahtri või töötluse, lahtri ja TO lahtri vahel.</p><p><strong>Vertikaalse teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--Määrab, et kui VRMA on suurem kui madala lõikenurga nurk ja väiksem kui suure lõikenurga nurk, seatakse VF nullteguriga seotud väärtusele; vastasel juhul on see lõpmatus..</li><li><strong>Lineaarne</strong>--Näitab, et VF on VRMA lineaarne funktsioon.</li><li><strong>Sümmeetriline lineaarne</strong>--Määratleb, et VF on VRMA lineaarne funktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetriliseds.</li><li><strong>Pöördlineaarne </strong>--Näitab, et VF on VRMA pöördlineaarne funktsioon.</li><li><strong>Sümmeetriline pöördlineaarne</strong>--Määratleb, et VF on VRMA lineaarne pöördfunktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetrilised.</li><li><strong>Cos</strong>--Määrab VF-i VRMA koosinusel põhinevaks funktsiooniks.</li><li><strong>Sek</strong>--Tuvastab VFi VRMA lõikajapõhise funktsioonina.</li><li><strong>Cos-Sec</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Sec-Cos</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Tabel</strong>--Tuvastab, et VFide määramiseks kasutatava vertikaalse teguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Vertikaalsete märksõnade muutjad hõlmavad järgmist:</p><ul><li><strong>Nulltegur</strong>--Määravad vertikaalse teguri, mida kasutatakse juhul, kui VRMA on null. See tegur paigutab määratud funktsiooni y-ristlõike. Definitsiooni järgi ei ole nulltegur rakendatav ühegi trigonomeetrilise vertikaalse funktsiooni (COS, SEC, COS-SEC või SEC-COS) korral. Y-lõikejoone määravad alljärgnevad funktsioonid.</li><li><strong>Väike lõikenurk</strong>--Määratleb VRMA nurga, millest allpool seatakse VF lõpmatuseni.</li><li><strong>Suur lõikenurk</strong>--Määratleb VRMA nurga, millest ülalpool seatakse VF lõpmatuseni.</li><li><strong>Kalle</strong>--Seadistab sirgjoone nõlva, mida kasutatakse koos<strong>lineaarse</strong>ja<strong>pöördlineaarse</strong>vertikaalse teguri märksõnadega. Kallak on täpsustatud kui murdosa tõusust (näiteks 45-protsendiline kalle on 1/45, mis sisestatakse kui 0,02222).</li><li><strong>Tabeli nimi</strong>--Tuvastab VFi määratleva tabeli nime.</li></ul>",
	"@@Distance-Accumulation_verticalraster_tag0@@": "Määratleb seose vertikaalse kuluteguri ja vertikaalse suhtelise liikumisnurga (VRMA) vahel.",
	"@@Distance-Accumulation_verticalraster_tag1@@": "Väärtusi kasutatakse kalde arvutamiseks, mida kasutatakse ühest lahtrist teise liikumisel tekkiva vertikaalse teguri tuvastamiseks.",
	"@@Distance-Allocation_costraster_tag0@@": "Raster määrab kulu või takistuse tasapinnalisel liikumisel läbi iga lahtri. Lahtri iga asukoha väärtus väljendab vahemaa ühiku maksumuse liikumisel läbi selle. Iga lahtri asukoha väärtus korrutatakse lahtri resolutsiooniga ja see kompenseerib ka diagonaalliikumist, et saada läbi lahtri liikumise kogukulu.",
	"@@Distance-Allocation_costraster_tag1@@": "<strong>Kulurastri</strong>väärtus võib täisarv või ujuva väärtusega arv, kuid ei tohi olla negatiivne või null.",
	"@@Distance-Allocation_distancemethod_tag0@@": "Määrab, kas kaugus arvutatakse planaarse (lapiku maa) või geodeetilise (ellipsoidi) meetodiga.",
	"@@Distance-Allocation_distancemethod_tag1@@": "Tasapinnaline--tasapinnalistel mõõtmistel kasutatakse pikkuse ja pindala arvutamiseks 2D Descartes’i matemaatikat. Valik on saadaval ainult siis, kui mõõdetakse tasapinnaliste ristkoordinaatide süsteemis ja mõõtmiste aluseks võetakse selle koordinaatsüsteemi 2D-tasand.",
	"@@Distance-Allocation_distancemethod_tag2@@": "Geodeesia--kõige lühem joon maakera kahe pinna vahel sfäärilisel (ellipsoidsel) joonel. Hoolimata sisendi või väljundi projitseerimisest tulemused ei muutu.",
	"@@Distance-Allocation_distancemethod_tag3@@": "<strong>Märkus:</strong>Üks geodeetilise joone kasutus on see, kui soovite määrata lennuki lennutrajektoori jaoks lühima marsruudi kahe linna vahel. Seda nimetatakse ka suurringjooneks, kui see põhineb pigem sfääril kui ellipsoidil.",
	"@@Distance-Allocation_horizontalfactor_tag0@@": "<p>Määratleb seose horisontaalse kuluteguri ja horisontaalse liikumisnurga (HRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kahte akronüümi: HF ja HRMA. HF tähistab horisontaalset tegurit, mis määratleb horisontaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. HRMA tähistab horisontaalset suhtelist liikumisnurka, mis identifitseerib lahtri horisontaalse suuna ja liikumissuuna vahelise nurga.</p><p><strong>Horisontaalsed teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--näitab, et kui HRA on lõikenurgast väiksem, seatakse HF väärtusele, mis on seotud nullteguriga; muidu on see lõpmatus.</li><li><strong>Edasisuunas</strong>--Näitab, et lubatud on ainult edasisuunas liikumine HRMA peab olema suurem kui 0 või sellega võrdne ja alla 90 kraadi (0 <= HRMA < 90). Kui HRMA on suurem kui 0 ja väiksem kui 45 kraadi, seatakse lahtri HF väärtuseks, mis on seotud nullteguriga. Kui HRMA on suurem kui 45 kraadi või sellega võrdne, kasutatakse külgväärtuse teisendaja väärtust. Iga HRMA väärtuse HF, mis on võrdne või suurem kui 90 kraadi, on seatud lõpmatuseni.</li><li><strong>Lineaarne</strong>--Määrab, et HF on HRMA lineaarne funktsioon.</li><li><strong>Pöördlineaarne</strong>--Määrab, et HF on HRMA pöördlineaarne funktsioon.</li><li><strong>Tabel</strong>--Tuvastab, et HF-de määramiseks kasutatava horisontaalteguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Horisontaalsete tegurite modifikaatorid on järgmised:</p><ul><li><strong>Nulltegur</strong>--Horisontaalne tegur, mida kasutatakse, kui HRMA on null. See tegur positsioneerib y-lõikepunkti mis tahes horisontaalse teguri funktsiooni jaoks.</li><li><strong>Lõikenurk</strong>--Määratleb HRMA nurga, millest kaugemale HF seatakse lõpmatusse.</li><li><strong>Kalle</strong>--Määratleb sirgjoone kalde, mida kasutatakse koos horisontaalse teguri märksõnadega <strong>Lineaarne</strong>ja<strong>Pöördlineaarne</strong>. Kall on määratud tõusu osana (näiteks 45-protsendiline kalle on 1/45, mis on sisestatud kui 0,02222).</li><li><strong>Küljeväärtus</strong>--Seadistab HF, kui HRMA on suurem või võrdne 45 kraadiga ja väiksem kui 90 kraadi, kui on määratud horisontaalse teguri märksõna<strong>Edasi</strong>horizontal factor keyword is specified.</li><li><strong>Tabeli nimi</strong>--Tuvastab HF-i määratleva tabeli nime.</li></ul>",
	"@@Distance-Allocation_horizontalraster_tag0@@": "Raster, mis määratleb horisontaalse suuna igas lahtris.",
	"@@Distance-Allocation_horizontalraster_tag1@@": "Rastril olevad väärtused peavad olema täisarvud vahemikus 0 kuni 360, kusjuures 0 kraadi on põhjas või ekraani ülaosas ja suureneb päripäeva. Tasapinnalistele aladele tuleks anda väärtus -1. Igas asukohas olevaid väärtusi kasutatakse koos <strong>horisontaalse teguriga</strong>, et määrata kindlaks lahtrist naabrite juurde kolimisel tekkivad horisontaalsed kulud.",
	"@@Distance-Allocation_initialaccumulation_tag0@@": "Algne kumulatiivne kulu kuluarvutuse alustamiseks. See parameeter võimaldab määrata allikaga seotud püsikulu. Selle asemel, et alustada maksumusega 0, algab kulualgoritm määratud väärtusega.",
	"@@Distance-Allocation_initialaccumulation_tag1@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Distance-Allocation_initialaccumulation_tag2@@": "Väärtus peab olema null või suurem. Vaikeväärtus on 0.",
	"@@Distance-Allocation_maximumaccumulation_tag0@@": "Määratleb ränduri maksimaalse kumulatiivse kulu allika jaoks. Kuluarvutusi jätkatakse iga allika puhul kuni määratud võimsuse saavutamiseni.",
	"@@Distance-Allocation_maximumaccumulation_tag1@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Distance-Allocation_maximumaccumulation_tag2@@": "Väärtus peab olema suurem kui null. Vaikimisi on võimsus väljundrastri servani.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag0@@": "Kulude väärtustele rakendatav kordaja.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag1@@": "See parameeter võimaldab juhtida liikumisviisi või suurusjärku allika juures. Mida suurem on kordaja, seda suurem on iga lahtri läbimise kulu.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag2@@": "Väärtused peavad olema suuremad kui null. Vaikeväärtus on 1.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag3@@": "Selle parameetrina võib kasutada numbriväärtust (kahekohalist) või välja <strong>lähterastrist</strong>.",
	"@@Distance-Allocation_rasterbarriers_tag0@@": "Raster, mis defineerib barjäärid.",
	"@@Distance-Allocation_rasterbarriers_tag1@@": "Andmestik peab sisaldama NoData-andmeid, kui tõkkeid ei ole. Tõkked on esitatud kehtivate väärtustega, sealhulgas nulliga.",
	"@@Distance-Allocation_rasterbarriers_tag2@@": "Tõkkeid saab määratleda täisarvulise või ujukomakujulise rastriga.",
	"@@Distance-Allocation_sourcefield_tag0@@": "Väli, mida kasutatakse allikate asukohtadele väärtuste määramiseks. See peab olema täisarv.",
	"@@Distance-Allocation_sourceraster_tag0@@": "Sisendi lähteasukohad.",
	"@@Distance-Allocation_sourceraster_tag1@@": "See on rasterandmestik, mis tuvastab lahtrid või asukohad, kust arvutatakse iga väljundlahtri asukoha kohta väikseim akumuleeritud kulukaugus.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag0@@": "Määrab, kas luuakse ainult eralduse raster või mitmeribaline tulemus.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag1@@": "Märkimata--Tulemus on kauguse eraldamise raster. See on üheribaline tulemus. See on vaikimisi valik.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag2@@": "Märgitud--Luuakse mitmeribaline raster. Esimene riba on kauguse eraldamise raster, teine riba sisaldab rea indeksit ja kolmas riba sisaldab veeru indeksit. Need indeksid tuvastavad asukoha väikseima akumuleeritud kulukaugusega lähtelahtril.",
	"@@Distance-Allocation_surfaceraster_tag0@@": "Raster, mis määratleb kõrguse väärtused igas lahtri asukohas.",
	"@@Distance-Allocation_surfaceraster_tag1@@": "Väärtusi kasutatakse tegeliku pinna vahemaa arvutamiseks lahtrite vahel läbimisel.",
	"@@Distance-Allocation_traveldirection_tag0@@": "Määratleb reisija suuna vertikaalse teguri, horisontaalse teguri ja allikakindluse määra arvestamisel.",
	"@@Distance-Allocation_traveldirection_tag1@@": "<strong>Allikast</strong>--Vertikaalset tegurit, horisontaalset tegurit ja allikakindluse määra rakendatakse sisendallikast alustades ja mittelähtelahtritesse liikudes. See on vaikimisi valik.",
	"@@Distance-Allocation_traveldirection_tag2@@": "<strong>Allikasse</strong>--Vertikaalset tegurit, horisontaalset tegurit ja allikakindluse määra rakendatakse alates igast mittelähtelahtrist ja liikudes tagasi sisendallikasse.",
	"@@Distance-Allocation_traveldirection_tag3@@": "Määrake kas võtmesõna <strong>Allikast</strong> või <strong>Allikasse</strong>, mida rakendatakse kõigile allikatele, või määrake väli <strong>allikarastris</strong>, mis sisaldab iga allika liikumissuuna identifitseerimise võtmesõnu. See väli peab sisaldama stringi ${FROM_SOURCE} või ${TO_SOURCE}.",
	"@@Distance-Allocation_verticalfactor_tag0@@": "<p>Määratleb seose vertikaalse kuluteguri ja vertikaalse liikumisnurga (VRMA) vahel.</p><p>Modifikaatoritega on mitu tegurit, mis tuvastavad määratletud vertikaalsete tegurite graafiku. Lisaks saab tabelit kasutada kohandatud graafiku loomiseks. Graafikuid kasutatakse naaberlahtrisse kolimise kogumaksumuse arvutamisel kasutatava vertikaalse teguri tuvastamiseks.</p><p>Allolevates selgitustes on kasutatud kaht akronüümi: VHF ja VRMA. VF tähistab vertikaalset tegurit, mis määratleb vertikaalsed raskused, mis tekivad ühest lahtrist teise liikumisel. VRMA tähistab vertikaalset suhtelist liikumisnurka, mis näitab kaldenurka FROM-lahtri või töötluse, lahtri ja TO lahtri vahel.</p><p><strong>Vertikaalse teguri</strong>tüübid sisaldavad alljärgnevat:</p><ul><li><strong>Binaarne</strong>--Määrab, et kui VRMA on suurem kui madala lõikenurga nurk ja väiksem kui suure lõikenurga nurk, seatakse VF nullteguriga seotud väärtusele; vastasel juhul on see lõpmatus..</li><li><strong>Lineaarne</strong>--Näitab, et VF on VRMA lineaarne funktsioon.</li><li><strong>Sümmeetriline lineaarne</strong>--Määratleb, et VF on VRMA lineaarne funktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetriliseds.</li><li><strong>Pöördlineaarne </strong>--Näitab, et VF on VRMA pöördlineaarne funktsioon.</li><li><strong>Sümmeetriline pöördlineaarne</strong>--Määratleb, et VF on VRMA lineaarne pöördfunktsioon vastavalt kas VRMA negatiivses või positiivses osas ning kaks lineaarset funktsiooni on VF (y) telje suhtes sümmeetrilised.</li><li><strong>Cos</strong>--Määrab VF-i VRMA koosinusel põhinevaks funktsiooniks.</li><li><strong>Sek</strong>--Tuvastab VFi VRMA lõikajapõhise funktsioonina.</li><li><strong>Cos-Sec</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Sec-Cos</strong>--Määratleb, et VF on VRMA koosinusel põhinev funktsioon, kui VRMA on negatiivne, ja VRMA lõikajapõhine funktsioon, kui VRMA ei ole negatiivne.</li><li><strong>Tabel</strong>--Tuvastab, et VFide määramiseks kasutatava vertikaalse teguri graafiku määratlemiseks kasutatakse tabelifaili.</li></ul><p>Vertikaalsete märksõnade muutjad hõlmavad järgmist:</p><ul><li><strong>Nulltegur</strong>--Määravad vertikaalse teguri, mida kasutatakse juhul, kui VRMA on null. See tegur paigutab määratud funktsiooni y-ristlõike. Definitsiooni järgi ei ole nulltegur rakendatav ühegi trigonomeetrilise vertikaalse funktsiooni (COS, SEC, COS-SEC või SEC-COS) korral. Y-lõikejoone määravad alljärgnevad funktsioonid.</li><li><strong>Väike lõikenurk</strong>--Määratleb VRMA nurga, millest allpool seatakse VF lõpmatuseni.</li><li><strong>Suur lõikenurk</strong>--Määratleb VRMA nurga, millest ülalpool seatakse VF lõpmatuseni.</li><li><strong>Kalle</strong>--Seadistab sirgjoone nõlva, mida kasutatakse koos<strong>lineaarse</strong>ja<strong>pöördlineaarse</strong>vertikaalse teguri märksõnadega. Kallak on täpsustatud kui murdosa tõusust (näiteks 45-protsendiline kalle on 1/45, mis sisestatakse kui 0,02222).</li><li><strong>Tabeli nimi</strong>--Tuvastab VFi määratleva tabeli nime.</li></ul>",
	"@@Distance-Allocation_verticalraster_tag0@@": "Määratleb seose vertikaalse kuluteguri ja vertikaalse suhtelise liikumisnurga (VRMA) vahel.",
	"@@Distance-Allocation_verticalraster_tag1@@": "Väärtusi kasutatakse kalde arvutamiseks, mida kasutatakse ühest lahtrist teise liikumisel tekkiva vertikaalse teguri tuvastamiseks.",
	"@@Euclidean-Back-Direction_cellsize_tag0@@": "Lahtri suurus, millega väljastusraster luuakse.",
	"@@Euclidean-Back-Direction_cellsize_tag1@@": "Kui lahtri suurus on selgesõnaliselt seatud <strong>keskkonnas</strong>, on see lahtri vaikesuurus. Kui seda ei olnud seatud, on väljundi lahtri suurus sama mis <strong>allika rastril</strong>.",
	"@@Euclidean-Back-Direction_distancemethod_tag0@@": "Määrab, kas kaugus arvutatakse planaarse (lapiku maa) või geodeetilise (ellipsoidi) meetodiga.",
	"@@Euclidean-Back-Direction_distancemethod_tag1@@": "Tasapinnaline--tasapinnalistel mõõtmistel kasutatakse pikkuse ja pindala arvutamiseks 2D Descartes’i matemaatikat. Valik on saadaval ainult siis, kui mõõdetakse tasapinnaliste ristkoordinaatide süsteemis ja mõõtmiste aluseks võetakse selle koordinaatsüsteemi 2D-tasand.",
	"@@Euclidean-Back-Direction_distancemethod_tag2@@": "Geodeesia--kõige lühem joon maakera kahe pinna vahel sfäärilisel (ellipsoidsel) joonel. Hoolimata sisendi või väljundi projitseerimisest tulemused ei muutu.",
	"@@Euclidean-Back-Direction_distancemethod_tag3@@": "<strong>Märkus:</strong>Üks geodeetilise joone kasutus on see, kui soovite määrata lennuki lennutrajektoori jaoks lühima marsruudi kahe linna vahel. Seda nimetatakse ka suurringjooneks, kui see põhineb pigem sfääril kui ellipsoidil.",
	"@@Euclidean-Back-Direction_maximumdistance_tag0@@": "Määratleb läviväärtuse vahemaa, mille piires arvutatakse suund lähimale allikale. Kui vahemaa lähima allikani ületab selle, siis selle lahtri väljund on NoData.",
	"@@Euclidean-Back-Direction_maximumdistance_tag1@@": "Vaikekaugus on väljundrastri ulatuses.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag0@@": "Raster, mis defineerib barjäärid.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag1@@": "Andmestik peab sisaldama NoData-andmeid, kui tõkkeid ei ole. Tõkked on esitatud kehtivate väärtustega, sealhulgas nulliga.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag2@@": "Tõkkeid saab määratleda täisarvulise või ujukomakujulise rastriga.",
	"@@Euclidean-Back-Direction_sourceraster_tag0@@": "Rasterandmestik, mis tuvastab lahtrid või asukohad, kuhu arvutatakse iga väljundlahtri asukoha eukleidiline suund.",
	"@@Euclidean-Back-Direction_sourceraster_tag1@@": "Sisendi tüüp võib olla täisarv või ujukomatüüp.",
	"@@Cost-Path_costbacklinkraster_tag0@@": "Kulu tagasilingi rasterkihi nimi, mida kasutatakse allikale tagastatava tee määratlemiseks vähima kuluga tee kaudu.",
	"@@Cost-Path_costbacklinkraster_tag1@@": "Iga tagasilingi rastri lahtri puhul tuvastab väärtus naabri, kes on järgmine lahter kõige vähem akumuleeruva kulu teel lahtrist ühe lähtelahtri või lähtelahtrite kogumini.",
	"@@Cost-Path_costdistanceraster_tag0@@": "Kuluvahemaa rastri nimi, mida kasutatakse vähima kuluga tee määramiseks sihtkohast allikani.",
	"@@Cost-Path_costdistanceraster_tag1@@": "Kuluvahemaa raster luuakse tavaliselt funktsiooniga Kuluvahemaa, Kulujaotus või Kulu tagasilink. Kuluvahemaa rasterkiht talletab iga lahtri kohta minimaalse akumuleeruva kuluvahemaa iga lahtri kulupinna kohta lähtelahtrite komplekti.",
	"@@Cost-Path_destinationfield_tag0@@": "Seda välja kasutatakse väärtuste määramiseks sihtkoha asukohtadele. Sisendobjekti andmed peavad sisaldama vähemalt ühte sobivat välja.",
	"@@Cost-Path_destinationraster_tag0@@": "Rasterandmestiku kiht, mis identifitseerib need lahtrid, millest alates määratakse vähima kuluga tee kõige odavama allikani.",
	"@@Cost-Path_destinationraster_tag1@@": "Sisendrasterkiht sisaldab kehtivate väärtustega lahtreid (null on kehtiv väärtus) ja ülejäänud lahtritele tuleb määrata väärtus NoData.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag0@@": "Sunnib funktsioonil käsitlema sisendi tagasilingi rastrit voolusuuna rastrina. Voolusuuna rastritel võivad olla täisarvud väärtustega 0-255.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag1@@": "Märkimata--Kui määratud tagasilingi rastri väärtused on täisarvud vahemikus 0-8, käsitletakse andmestikku kulu tagasilingirastrina. Kui väärtused on vahemikus 0-255, käsitletakse sisendit voolusuunarastrina. Kui väärtused on vahemikus 0-360 ja ujuvpunktiga, käsitletakse sisendit tagasivoolurastrina.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag2@@": "Märgitud--Tagasilingirastri jaoks esitatavat rastrit käsitletakse voolusuunarastrina. Kasutage seda suvandit, kui voolusuunarastri maksimaalne väärtus on 8 või väiksem.",
	"@@Cost-Path_pathtype_tag0@@": "Märksõna, mis määrab viisi, kuidas väärtusi ja tsoone saab sihtkoha sisendandmetel tõlgendada tee kuluarvutustes. Valikud on järgmised:",
	"@@Cost-Path_pathtype_tag1@@": "<strong>Iga lahter</strong>--Igal lahtril, mille sihtkoha sisendandmed on kehtivad, määratakse vähima kuluga tee ja salvestatakse väljundrastrisse. Selle variandi puhul käsitletakse sihtkoha sisendandmete iga lahtrit eraldi ja iga lahtri jaoks määratakse vähima kuluga tee.",
	"@@Cost-Path_pathtype_tag2@@": "<strong>Iga tsoon</strong>Igal tsoonil määratakse sihtkoha sisendandmete hulgas odavaim tee ja salvestatakse väljunrastrina. Selle variandi korral algab iga tsooni vähima kuluga tee lahtrist, mille tsooni kaalutud kaugus on kõige odavam.",
	"@@Cost-Path_pathtype_tag3@@": "<strong>Parim üksik</strong>--Sihtkoha sisendandmete kõigil lahtritel tuletatakse vähima kuluga tee kõigi lahtrite puhul lahtrist, millest on lähtelahtrini vähima kuluga tee.",
	"@@Cell-Statistics_cellsizetype_tag0@@": "Valige väljundrastris kasutatav lahtri suurus. Kui kõik sisenlahtri suurused on samad, annavad kõik valikud samad tulemused.",
	"@@Cell-Statistics_cellsizetype_tag1@@": "Esimene--kasutage sisendrastrite esimest lahtri suurust.",
	"@@Cell-Statistics_cellsizetype_tag2@@": "Min--kasutage kõikide sisendrastrite väikseimat lahtri suurust.",
	"@@Cell-Statistics_cellsizetype_tag3@@": "Max--kasutage kõikide sisendrastrite suurimat lahtrisuurust. See on vaikimisi valik.",
	"@@Cell-Statistics_cellsizetype_tag4@@": "Keskmine--kasutage kõikide sisendrastrite keskmist lahtri suurust.",
	"@@Cell-Statistics_cellsizetype_tag5@@": "Viimane--kasutage sisendrastrite viimast lahtri suurust.",
	"@@Cell-Statistics_extenttype_tag0@@": "Valige, millises ulatuses tuleks väljundrastris kasutada:",
	"@@Cell-Statistics_extenttype_tag1@@": "Esimene--töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.",
	"@@Cell-Statistics_extenttype_tag2@@": "Lõikepunkt--töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikimisi valik.",
	"@@Cell-Statistics_extenttype_tag3@@": "Ühend--töötlemise ulatuse määramiseks kasutage kõikide rastrite ulatust.",
	"@@Cell-Statistics_extenttype_tag4@@": "Viimane--töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.",
	"@@Cell-Statistics_processasmultiband_tag0@@": "Määrab sisendrastri ribade töötlemise viisi.",
	"@@Cell-Statistics_processasmultiband_tag1@@": "Märkimata--Kõiki mitmeribalisi sisendeid töödeldakse ühe ribana. See on vaikimisi valik.",
	"@@Cell-Statistics_processasmultiband_tag2@@": "Märgitud--Kõiki mitmeribalisi sisendeid töödeldakse mitmeribalistena.",
	"@@Cell-Statistics_rasters_tag0@@": "Rastrite loend, mille põhjal statistikat arvutada pikslite kaupa.",
	"@@Cell-Statistics_percentileinterpolationtype_tag0@@": "<p>Määrab interpolatsioonimeetodi, mida kasutatakse juhul, kui määratud protsentiili väärtus jääb kahe sisendlahtri väärtuse vahele.</p><ul><li><strong>Automaatne tuvastamine</strong>--Kui sisendrastrid on täisarvuga piksli tüüpi, kasutatakse meetodit<strong>Lähim</strong>. Kui sisendväärtuse raster on ujukomaga tüüpi, kasutatakse meetodit<strong>Lineaarne</strong>. See on vaikevalik.</li><li><strong>Lähim</strong>--Kasutatakse soovitud protsentiili lähimat saadaolevat väärtust. Sel juhul on väljunpiksli tüüp samasugune kui sisendväärtuse rastril.</li><li><strong>Lineaarne</strong>--Kasutatakse soovitud protsentiili kahe ümbritseva väärtuse kaalutud keskmist. Sel juhul on väljundpiksel ujukomaga tüüpi.</li></ul><p>See valik on toetatud ainult siis, kui parameetri tüübi <strong>Operation</strong>väärtuseks on määratud<strong>Mediaan</strong>või<strong>Protsentiil</strong>.</p>",
	"@@Cell-Statistics_percentilevalue_tag0@@": "<p>Arvutatav protsentiil. Vaikeväärtus on 90, mis on 90. protsentiili väärtus.</p><p>Väärtused võivad olla vahemikus 0-100. 0. protsentiil on sisuliselt võrdne miinimumstatistikaga ja 100. protsentiil on võrdne maksimumiga. Väärtus 50 annab sisuliselt sama tulemuse kui mediaanstatistika.</p><p>See valik on saadaval ainult siis, kui parameetri<strong>Käitus</strong>väärtuseks on seatud<strong>Protsentiil</strong>.</p>",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag0@@": "Tagasisuuna raster sisaldab arvutatud suundi kraadides. Suund identifitseerib järgmise lahtri optimaalsel teel tagasi kõige vähem akumuleeruva kuluallika juurde, vältides takistusi.",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag1@@": "Väärtuste vahemik on 0–360 kraadi (0 on reserveeritud lähtepikslite jaoks). Idasuuna väärtus (suund paremale) on 90 ning väärtused suurenevad päripäeva (lõuna on 180, lääs on 270 ja põhi on 360).",
	"@@Optimal-Path-As-Raster_destinationfield_tag0@@": "Seda välja kasutatakse väärtuste määramiseks sihtkoha asukohtadele.",
	"@@Optimal-Path-As-Raster_destinationraster_tag0@@": "Rasterandmestiku kiht, mis identifitseerib need lahtrid, millest alates määratakse vähima kuluga tee kõige odavama allikani. See sisend on nõutav.",
	"@@Optimal-Path-As-Raster_destinationraster_tag1@@": "Sisendrasterkiht sisaldab kehtivate väärtustega lahtreid (null on kehtiv väärtus) ja ülejäänud lahtritele tuleb määrata väärtus NoData.",
	"@@Optimal-Path-As-Raster_distanceaccumulationraster_tag0@@": "Kauguse akumulatsiooni rastrit kasutatakse selleks, et määrata optimaalne tee sihtkohtadest allikateni. Kauguse akumulatsiooni raster luuakse tavaliselt funktsiooni <strong>kauguse akumulatsioon</strong> abil. Kauguse akumulatsiooni rastri iga lahter esitab minimaalse akumuleeruva kuluvahemaa iga lahtri pinnast kuni lähtelahtrite komplektini.",
	"@@Optimal-Path-As-Raster_pathtype_tag0@@": "Määrab märksõna, mis määratleb viisi, kuidas väärtusi ja tsoone saab sihtkoha sisendandmetel tõlgendada tee kuluarvutustes.",
	"@@Optimal-Path-As-Raster_pathtype_tag1@@": "<strong>Iga tsoon</strong>Igal tsoonil määratakse sihtkoha sisendandmete hulgas odavaim tee ja salvestatakse väljundrastrina. Selle variandi korral algab iga tsooni optimaalne tee lahtrist, mille tsooni kaalutud kaugus on kõige odavam.",
	"@@Optimal-Path-As-Raster_pathtype_tag2@@": "<strong>Parim üksik</strong>--Sihtkoha sisendandmete kõigil lahtritel tuletatakse optimaalne tee kõigi lahtrite puhul lahtrist, millest on lähtelahtriteni vähima kuluga teed.",
	"@@Optimal-Path-As-Raster_pathtype_tag3@@": "<strong>Iga lahter</strong>--Igal lahtril, mille sihtkoha sisendandmed on kehtivad, määratakse optimaalne tee. Selle variandi puhul käsitletakse sihtkoha sisendandmete iga lahtrit eraldi ja iga lahtri jaoks määratakse optimaalne tee.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag0@@": "Riba ID-sid kasutatakse suuna muutmiseks. Kui riba ID-d ei ole esitatud, kasutatakse sisendi rastri andmestiku kõiki ribasid.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag1@@": "ID väärtused peavad olema tühikutega eraldatud täisarvud.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag0@@": "Rohelise riba ja SWIR-riba riba ID-sid kasutatakse pilvede, pilvevarju ja lume maskimiseks. Kui riba ID-sid ei esitata, maskimist ei toimu.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag1@@": "ID väärtused peavad olema tühikutega eraldatud täisarvud.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag2@@": "See parameeter määrab ribad, mida kasutatakse pilve, pilvevarju ja lume maskimiseks. Kuna pilvevari ja lumi on lühilaine infrapuna (SWIR) ribal väga tumedad ning pilved ja lumi on rohelisel ribal väga heledad, on soovitatav SWIR-i ja rohelise riba ribaindeksid maskida.",
	"@@CCDC-Analysis_chi-squaredthresholdfordetectchange_tag0@@": "Hii-ruut muudatuse tõenäosuse läviväärtus. Kui vaatlusel on arvutatud muutuste tõenäosus, mis ületab seda läviväärtust, märgistatakse see kõrvalekaldena, mis on potentsiaalse muutumise sündmus. Vaikeväärtus on 0,99.",
	"@@CCDC-Analysis_minimumconsecutiveanomalyobservations_tag0@@": "Järjestikuste kõrvalekallete tähelepanekute minimaalne arv, mis peab esinema enne, kui sündmus loetakse muudatuseks. Piksel peab olema märgistatud kõrvalekaldena teatud arvu järjestikuste ajalõikude korral enne, kui selle saab lugeda tõeliseks muudatuseks. Vaikeväärtus on 6.",
	"@@CCDC-Analysis_raster_tag0@@": "Sisendi mitmemõõtmeline rastrikiht.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag0@@": "Sagedus, millega aegrea mudelit tuleb värskendada uute tähelepanekutega. Vaikeväärtus on mudeli värskendamine kord aastas.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag1@@": "See parameeter määratleb, kui sageli aegrea mudelit värskendatakse uute tähelepanekutega. Mudeli sage värskendamine võib olla arvutuslikult kulukas ja sellest saadav kasu minimaalne. Kui näiteks mitmemõõtmelises rastris on 365 lõiku või selget tähelepanekut aastas ja värskendamise sagedus kehtib iga tähelepaneku kohta, on töötlemine võrreldes kord aastas värskendamisega arvutuste seisukohast 365 korda kallim, kuid täpsus ei pruugi olla suurem.",
	"@@Trend-To-RGB_modeltype_tag0@@": "RGB-ks teisendatava mudeli teabe tüüp.",
	"@@Trend-To-RGB_modeltype_tag1@@": "Lineaarne--Lineaarne trenditeave teisendatakse RGB-ks. See on vaikimisi valik.",
	"@@Trend-To-RGB_modeltype_tag2@@": "Harmooniline--Harmooniline trenditeave teisendatakse RGB-ks.",
	"@@Trend-To-RGB_raster_tag0@@": "Sisendi trendiraster.",
	"@@LandTrendr-Analysis_bestmodelproportion_tag0@@": "<p>Mudeli parima proportsiooni väärtus Mudeli valimise protsessi käigus arvutab tööriist iga mudeli p-väärtuse ja valib mudeli, millel on kõige rohkem tippe, säilitades selle proportsiooni väärtuse põhjal vähima (kõige olulisema) p-väärtuse. Väärtus 1 tähendab, et mudeli p-väärtus on kõige väiksem, kuid tippude arv ei pruugi olla kõrge. Vaikeväärtus on 1,25.</p>",
	"@@LandTrendr-Analysis_maximumnumberofsegments_tag0@@": "<p>Maksimaalne segmentide arv, mida saab iga piksli aegreale sobitada. Vaikeväärtus on 5.</p>",
	"@@LandTrendr-Analysis_minimumnumberofobservations_tag0@@": "<p>Sobitamiseks vajalik minimaalne kehtivate vaatluste arv. Mitmemõõtmelises andmekogumis sisestatud aastate arv peab olema selle väärtusega võrdne või sellest suurem. Vaikeväärtus on 6.</p>",
	"@@LandTrendr-Analysis_outputotherbands_tag0@@": "<p>Määrab, kas muud ribad kaasatakse tulemustesse.</p><ul><li>Ära märgitud -- Muud ribad kaasatakse tulemustesse. Segmenteerimise ja tippude teave algselt segmenteerimisribalt, mis on määratletud parameetriga<strong>Töötlusriba</strong>, sobitatakse ka mitmeribaliste piltide ülejäänud ribadega. Mudeli tulemused sisaldavad esmalt segmenteerimisriba ja seejärel ülejäänud ribasid.</li><li>Märkimata -- Muud ribad pole kaasatud. See on vaikevalik.</li></ul>",
	"@@LandTrendr-Analysis_preventoneyearrecovery_tag0@@": "<p>Määrab, kas ühe aasta taastamist esitavad segmendid välistatakse.</p><ul><li>Märgitud -- Ühe aasta taastamist esitavad segmendid välistatakse. See on vaikevalik.</li><li>Märkimata -- Ühe aasta taastamist esitavaid segmente ei välistata.</li></ul>",
	"@@LandTrendr-Analysis_processingband_tag0@@": "<p>Riba, mida kasutatakse piksli väärtuse trajektooride segmenteerimiseks aja jooksul. Valige riba, mis jäädvustab kõige paremini muudatusi objektis, mida soovite vaadelda.</p>",
	"@@LandTrendr-Analysis_p-valuethreshold_tag0@@": "<p>Valitava mudeli läve p-väärtus. Pärast tippude tuvastamist mudeli sobitamise algstaadiumis sobib tööriist igale segmendile ja arvutab p-väärtuse, et määrata mudeli olulisus. Järgmisel iteratsioonil vähendab mudel segmentide arvu ühe võrra ja arvutab p-väärtuse ümber. See jätkub ja kui p-väärtus on selles parameetris määratud väärtusest väiksem, valitakse mudel ja tööriist lõpetab parema mudeli otsimise. Kui sellist mudelit ei valita, valib tööriist mudeli, mille p-väärtus on väiksem kui <strong>vähim p-väärtus × mudeli parima proportsiooni väärtus</strong>. Vaikeväärtus on 0,01.</p>",
	"@@LandTrendr-Analysis_raster_tag0@@": "<p>Sisendi Landsat mitmemõõtmelise rastri kiht.</p>",
	"@@LandTrendr-Analysis_recoveryhasincreasetrend_tag0@@": "<p>Määrab, kas taastamine on suureneva (positiivse) trendiga.</p><ul><li>Märgitud -- Taastamine on suureneva trendiga. See on vaikeväärtus.</li><li>Märkimata -- Taastamisel on vähenev trend.</li></ul>",
	"@@LandTrendr-Analysis_recoverythreshold_tag0@@": "<p>Taastamise läviväärtus aastates. Kui segmendi taastamise kiirus on suurem kui<strong>1/taastamise läviväärtus</strong>, tühistatakse segment ja seda ei kaasata aegrea mudelisse. Väärtus peab olema vahemikus 0 kuni 1. Vaikeväärtus on 0,25.</p>",
	"@@LandTrendr-Analysis_snappingdate_tag0@@": "<p>Kuupäev, mida kasutatakse sisendi mitmemõõtmelises andmekogumis iga aasta kohta lõigu valimiseks. Valitakse lõik, mille kuupäev on kõige lähemal snäppimise kuupäevale See parameeter on nõutav, kui sisendandmestik sisaldab iga-aastaseid andmeid.</p>",
	"@@LandTrendr-Analysis_spikethreshold_tag0@@": "<p>Lävi, mida kasutatakse piksliväärtuste trajektoori tippude või anomaaliate summutamiseks. Väärtus peab olema vahemikus 0 kuni 1, kus 1 tähendab summutuse puudumist. Vaikeväärtus on 0,9.</p>",
	"@@LandTrendr-Analysis_vertexcountovershoot_tag0@@": "<p>Lisatippude arv, mis ületab<strong>max_num_segments + 1</strong>, mida võib kasutada mudeli sobitamiseks tippude identifitseerimise esialgse staadiumi ajal. Hiljem vähendatakse modelleerimisprotsessis lisatippude arv väärtusele<strong>max_num_segments + 1</strong>. Vaikeväärtus on 2.</p>",
	"@@Merge-Rasters_rasters_tag0@@": "<p>Sisendi rasterandmekogumid või mitmemõõtmelised rasterandmekogumid ühendamiseks.</p>",
	"@@Merge-Rasters_resolveoverlapmethod_tag0@@": "<p>Määrab meetodi, mida kasutada kombineeritud andmekogumites kattuvate pikslite lahendamiseks.</p><ul><li><strong>Esimene</strong>--Piksliväärtus kattuvatel aladel on väärtus sisestatud rastrite loendi esimesest rastrist. Se eon vaikeväärtus.</li><li><strong>Viimane</strong>--Piksliväärtus kattuvatel aladel on väärtus sisendrastrite loendis viimasest rastrist.</li><li><strong>Min</strong>--Piksliväärtus kattuvatel aladel on kattuvate pikslite minimaalne väärtus.</li><li><strong>Max</strong>--Piksliväärtus kattuvatel aladel on kattuvate pikslite maksimaalne väärtus.</li><li><strong>Keskmine</strong>--Piksliväärtus kattuvatel aladel on kattuvate pikslite keskmine.</li><li><strong>Summa</strong>--Piksliväärtus kattuvatel aladel on kattuvate pikslite kogusumma.</li></ul>",
	"@@Generate-Trend_cycleunit_tag0@@": "<p>Määrab ajaühiku, mida kasutatakse harmoonilise tsükli pikkuse määratlemisel.</p><ul><li><strong>Päevad</strong>--Harmoonilise tsükli pikkuse ühik on päev.</li><li><strong>Aastad</strong>--Harmoonilise tsükli pikkuse ühik on aasta. See on vaikevalik.</li></ul>",
	"@@Generate-Trend_dimensionname_tag0@@": "<p>Dimensioon, mille põhjal trend analüüsis valitud muutuja või muutujate jaoks ekstraktitakse.</p>",
	"@@Generate-Trend_harmonicfrequency_tag0@@": "<p>Trendi paigutamiseks kasutatav sageduse arv. See parameeter määrab tsüklite arvu aastas. Vaikeväärtus on 1 ehk üks harmooniline tsükkel aastas.</p><p>See parameeter on kaasatud ainult harmoonilise regressiooni trendianalüüsi.</p>",
	"@@Generate-Trend_ignorenodata_tag0@@": "<p>Määrab, kas analüüsis ignoreeritakse NoData väärtusi.</p><ul><li>Märgitud-- Analüüsis kaasatakse kõik kehtivad pikslid kindlas dimensioonis ja ignoreeritakse kõiki NoData piksleid. See on vaikevalik.</li><li>Märkimata-- Kui antud dimensiooni pikslites esineb NoData väärtuseid, on analüüsi tulemuseks NoData.</li></ul>",
	"@@Generate-Trend_lengthofcycle_tag0@@": "<p>Mudeli jaoks perioodilise varieerumise pikkus. Ühik on sisendandmete ajaühikust olenemata päev. Näiteks lehevärvil on sageli ühe aasta jooksul üks tugev variatsioonitsükkel ja seega on selle tsükli pikkus 365,25 ka siis, kui sisendandmed on igakuulise lehevärvi andmed. Tunnipõhistel temperatuuriandmetel on sageli üks tugev variatsioonitsükkel päevas ja seega on selle tsükli pikkus 1 päev.</p><p>Vaikimisi määratakse pikkuseks 365,25 päeva, kui andmed varieeruvad aastase tsükliga.</p>",
	"@@Generate-Trend_p-valueofslopecoefficient_tag0@@": "<p>Määrab, kas arvutada trendijoone kalde koefitsiendi p-väärtuse statistika.</p><ul><li>Märgitud -- Funktsiooni lõpuleviimisel arvutatakse p-väärtus ja kuvatakse üksikasjad.</li><li>Märkimata -- p-väärtust ei arvutata. See on vaikevalik.</li></ul>",
	"@@Generate-Trend_polynomialorder_tag0@@": "<p>Trendi paigutamiseks kasutatav polünoomi järjekorranumber. See parameeter määrab polünoomi järjekorra. Vaikeväärtus on 2 ehk teise astme polünoom.</p><p>See parameeter on kaasatud ainult polünoomi regressiooni trendianalüüsi.</p>",
	"@@Generate-Trend_r-squared_tag0@@": "<p>Määrab, kas arvutada trendi sobivusjoone R-ruudu sobivuse statistika.</p><ul><li>Märgitud -- R-ruut arvutatakse ja kuvatakse üksikasjalikult, kui funktsioon on lõpule viidud.</li><li>Märkimata -- R-ruutu ei arvutata. See on vaikevalik.</li></ul>",
	"@@Generate-Trend_raster_tag0@@": "<p>Sisend on mitmemõõtmeline raster.</p>",
	"@@Generate-Trend_rmse_tag0@@": "<p>Määrab, kas arvutada trendi sobivusjoone ruutkeskmine viga.</p><ul><li>Märgitud -- Ruutkeskmine viga arvutatakse ja kuvatakse üksikasjalikult, kui funktsioon on lõpule viidud. See on vaikevalik.</li><li>Märkimata -- Ruutkeskmist viga ei arvutata.</li></ul>",
	"@@Generate-Trend_seasonalperiod_tag0@@": "<p>Määrab hooajalise Kendalli testi sooritamisel hooaja pikkuse jaoks kasutatava ajaühiku.</p><ul><li>Päev -- Hooajalise perioodi pikkuse ajaühik on päev. See on vaikevalik.</li><li>Kuu -- Hooajalise perioodi pikkuse ajaühik on kuu.</li></ul>",
	"@@Generate-Trend_trendtype_tag0@@": "<p>Määrab joone tüübi, mida kasutatakse piksliväärtustega sobitamiseks piki mõõdet.</p><ul><li><strong>Lineaarne</strong>--Sobitab muutuja piksliväärtused mööda lineaarset trendijoont. See on vaikevalik.</li><li><strong>Harmooniline</strong>--Sobitab muutuja piksliväärtused mööda harmoonilist trendijoont.</li><li><strong>Polünoom</strong>--Sobitab muutuja piksliväärtused mööda teise järgu polünoomi trendijoont.</li><li><strong>Mann-Kendall</strong>--Muutuvate pikslite väärtusi hinnatakse Mann-Kendalli trenditesti abil.</li><li><strong>Hooajaline Kendall</strong>--Muutuvate pikslite väärtusi hinnatakse hooajalise Kendalli trenditesti abil.</li></ul>",
	"@@Compute-Change_cellsizetype_tag0@@": "<p>Valige väljundrastris kasutatav piksli suurus. Kui kõik sisendpikslid on ühesuurused, annavad kõik valikud samad tulemused.</p><ul><li>Esimene -- Kasutage sisendrastrite esimest pikslisuurust.</li><li>Min --Kasutage kõigi sisendrastrite vähimat pikslisuurust.</li><li>Max -- Kasutage kõigi sisendrastrite suurimat pikslisuurus. See on vaikevalik.</li><li>Keskmine -- Kasutage kõigi sisendrastrite keskmist pikslisuurust.</li><li>Viimane --Kasutage sisendrastrite viimast pikslisuurust.</li></ul>",
	"@@Compute-Change_computechangemethod_tag0@@": "<p>Arvutamiseks kasutatav meetod.</p><ul><li><strong>Erinevus</strong>-- Arvutatakse sisendrastrite piksliväärtuste matemaatiline erinevus või lahutamine. See on vaikevalik.</li><li><strong>Suhteline erinevus</strong>--Arvutatakse piksliväärtuste erinevus, võttes arvesse võrreldavate väärtuste suurusi.</li><li><strong>Kategooriline erinevus</strong>--Arvutatakse kahe kategoorilise või temaatilise rastri erinevus, kus väljund sisaldab klassiülekandeid, mis toimusid kahe rastri vahel.</li><li><strong>Spektraalne eukleidiline kaugus</strong>--Arvutatakse eukleidiline kaugus kahe mitmeribalise rastri piksliväärtuste vahel.</li><li><strong>ASpektri nurgaerinevus</strong>--Arvutatakse kahe mitmeribalise rastri piksliväärtuste vaheline spektraalnurk. Väljund on esitatud radiaanides.</li><li><strong>Suurima muutusega riba</strong>--Arvutatakse riba, mis põhjustab kõige rohkem muutusi igas pikslis kahe mitmeribalise rastri vahel.</li></ul><p>Kui<strong>muudatuse arvutamise meetod</strong>seatakse väärtusele<strong>Kategooriline erinevus</strong>ja üks sisenditest ei ole kategooriline, arvutatakse lihtne erinevus.</p>",
	"@@Compute-Change_definetransitioncolors_tag0@@": "<p>Määrake meetod, mida kasutatakse klassi muutnud pikslite sümboliseerimiseks.</p><ul><li><strong>Keskmine värvustest ja värvustele</strong>--Piksli värv on algse klassi ja viimase klassi värvuse keskmine.</li><li><strong>Kasuta värvustest</strong>--Piksli värvus on piksli originaalklassi värvus.</li><li><strong>Kasuta värvustele</strong>--Piksli värvus on selle lõpliku klassi värvus.</li></ul>",
	"@@Compute-Change_extenttype_tag0@@": "<p>Valige, millist ulatust tuleb väljundrastris kasutada:</p><ul><li>Esimene--Töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.</li><li>Ristmik--Töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikevalik.</li><li>Ühendus--Töötlemise ulatuse määramiseks kasutage kõigi rastrite ulatust.</li><li>Viimane--Töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.</li></ul>",
	"@@Compute-Change_filtermethod_tag0@@": "<p>Valige filtreerimismeetod kategoorilise muudatuse arvutamiseks.</p><ul><li><strong>Säilita kõik</strong>--Väljundis säilitatakse kõik klassid ja filtreerimist ei toimu. Tehke see valik, et näha muudatusi ja püsivust ühesainsas andmestikus.</li><li><strong>Säilita ainult muudetud pikslid</strong>--Väljundisse kaasatakse ainult klassid, mis on ühest klassitüübist teise klassitüüpi muutunud. Tehke see valik, kui olete huvitatud muudatusest.</li><li><strong>Säilitage ainult muutmata pikslid</strong>--Väljundisse kaasatakse ainult klassid, mis pole muutunud. Tehke see valik, kui olete huvitatud ainult püsivusest.</li></ul>",
	"@@Compute-Change_fromclassvalues_tag0@@": "<p>Kui võrrelda kaht kategoorilist rastrit, tuleb arvutusse lisada klassi <strong>Rastrist</strong> pärit väärtused. See on piiratud ruumiga loend täisarvulistest väärtustest, mis vastab teie väljundrastri andmestiku väljale<strong>Klassi väärtus</strong>.</p>",
	"@@Compute-Change_fromraster_tag0@@": "<p>Arvutuses kasutatav esimene raster. Hindamaks muudatust ajahetkel 1 (varem) ajahetkega 2 (hiljem), sisestage siia ajahetke 1 raster.</p>",
	"@@Compute-Change_toclassvalues_tag0@@": "<p>Kui võrrelda kaht kategoorilist rastrit, tuleb arvutusse lisada klassist <strong>Rastrist </strong>pärit väärtused. See on piiratud ruumiga loend täisarvulistest väärtustest, mis vastab teie väljundrastri andmestiku väljale<strong>Klassi väärtus</strong>.</p>",
	"@@Compute-Change_toraster_tag0@@": "<p>Arvutuses kasutatav teine raster. Hindamaks muudatust ajahetkest 1 (varem) ajahetkele 2 (hiljem), sisestage ajahetke 2 raster.</p>",
	"@@Compute-Change_usecolormethod_tag0@@": "<p>Määrake meetod, mida kasutatakse klassi muutnud pikslite sümboliseerimiseks.</p><ul><li><strong>Keskmine värvustest ja värvustele</strong>--Piksli värv on algse klassi ja viimase klassi värvuse keskmine.</li><li><strong>Kasuta värvustest</strong>--Piksli värvus on piksli originaalklassi värvus.</li><li><strong>Kasuta värvustele</strong>--Piksli värvus on selle lõpliku klassi värvus.</li></ul>",
	"@@Compute-Change_fieldnameforclassnamesinfromraster_tag0@@": "<p>Väli, mis salvestab klassi nimesid sisendis<strong>Rastrist</strong>. Tööriist otsib kasutamiseks automaatselt<strong>klassi nime</strong>välja või<strong>Klassi_Nime</strong>välja.</p><p>Kasutage seda suvandit, kui sisend ei sisalda neid standardseid väljanimesid.</p>",
	"@@Compute-Change_fieldnameforclassnamesintoraster_tag0@@": "<p>Väli, mis salvestab klassi nimesid sisendis<strong>Rastrile</strong>. Tööriist otsib kasutamiseks automaatselt välja<strong>klassi nimi</strong>või välja<strong>Klassi_Nimi</strong>.</p><p>Kasutage seda suvandit, kui sisend ei sisalda neid standardseid väljanimesid.</p>",
	"@@Statistics_numberofcolumns_tag0@@": "<p>Fookuspiirkonna dimensioonis kasutatavate piksliveergude arv.</p>",
	"@@Statistics_numberofrows_tag0@@": "<p>Fookuspiirkonna dimensioonis kasutatavate piksliridade arv.</p>",
	"@@Statistics_onlyfillnodatapixels_tag0@@": "<p>Täidab väljundil NoData lüngad. See on väga kasulik, kui teie piltidel võib olla puuduvaid jooni.</p>",
	"@@Statistics_raster_tag0@@": "<p>Sisendraster fookusstatistika tegemiseks.</p>",
	"@@Statistics_statisticstype_tag0@@": "<p>Allpool on loetletud fookusstatistika funktsioonide seitse tüüpi:</p><ul><li>Miinimum--arvutab naabruse lahtrite miinimumväärtuse.</li><li>Maksimum--arvutab naabruse lahtrite maksimumväärtuse.</li><li>Keskmine--arvutab naabruse lahtrite keskmise väärtuse. See on vaikevalik.</li><li>Standardhälve--Arvutab naabruse pikslite standardhälbe.</li><li>Keskmine--Arvutab naabruse pikslite keskmise väärtuse.</li><li>Enamus--Arvutab naabruses asuvate pikslite enamuse või kõige sagedamini esineva väärtuse.</li><li>Vähemus--Arvutab naabruses asuvate pikslite vähemuse või kõige harvem esineva väärtuse.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changedirection_tag0@@": "<p>Määrab analüüsi kaasatava suunamuudatuse.</p><p>See parameeter on saadaval ainult siis, kui sisendimuutuste analüüsi raster on LandTrendri tööriistade väljund.</p><ul><li><strong>Kõik suunad</strong>--Väljundis kaasatakse kõik suunamuudatused. See on vaikevalik.</li><li><strong>Suurenev</strong>--Väljundis kaasatakse ainult muudatus positiivses või suurenevas suunas.</li><li><strong>Vähenev</strong>--Väljundis kaasatakse ainult muudatus negatiivses või vähenevas suunas.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changetype_tag0@@": "<p>Määrab arvutatava muudatusteabe.</p><ul><li><strong>Viimase muudatuste aeg</strong>--Iga piksel sisaldab selle piksli aegrea viimase muudatuse kuupäeva. See on vaikevalik.</li><li><strong>Varaseima muudatuse aeg</strong>--Iga piksel sisaldab selle piksli aegrea varaseima muutmise kuupäeva.</li><li><strong>Suurima muudatuse aeg</strong>--Iga piksel sisaldab selle piksli jaoks aegrea kõige olulisema muudatuse kuupäeva.</li><li><strong>Muudatuste arv</strong>--Iga piksel sisaldab selle piksli jaoks aegrea kõige olulisema muudatuse kuupäeva.</li><li><strong>Pikima muudatuse aeg</strong>--Iga piksel sisaldab muutmise kuupäeva aegridade pikima üleminekusegmendi lõpus.</li><li><strong>Lühima muudatuse aeg</strong>--Iga piksel sisaldab muutmise kuupäeva aegridade lühima üleminekusegmendi lõpus.</li><li><strong>Kiireima muudatuse aeg</strong>--Iga piksel sisaldab muutmise kuupäeva ülemineku lõpus, mis toimus kõige kiiremini.</li><li><strong>Aeglaseima muudatuse aeg</strong>--Iga piksel sisaldab muutumise kuupäeva ülemineku lõpus, mis toimus kõige aeglasemalt.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_filterbyduration_tag0@@": "<p>Määrab, kas muudatuse kestust tuleb filtreerida.</p><p></p><ul><li>Märgitud--Filtreerige tulemused kestuse järgi nii, et väljundisse lisatakse ainult teatud aja jooksul kestnud muudatused.</li><li>Märkimata--Ärge filtreerige tulemusi kestuse järgi. See on vaikevalik.</li></ul><p>See parameeter on saadaval ainult siis, kui sisendimuutuste analüüsi raster on LandTrendri tööriistade väljund.</p><p>Kui see parameeter on märgitud, peate filtreerimiseks seadistama parameetrid<strong>Minimaalne kestus</strong>ja<strong>Maksimaalne kestus</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbymagnitude_tag0@@": "<p>Määrab, kas filtreerida suurusjärgu muudatuse järgi.</p><ul><li>Märgitud--Filtreerige tulemused suurusjärgu järgi nii, et väljundisse lisatakse ainult antud suuruse muutused.</li><li>Märkimata--Ärge filtreerige tulemusi suurusjärgu järgi. See on vaikevalik.</li></ul><p>See parameeter on saadaval ainult siis, kui sisendimuutuste analüüsi raster on LandTrendri tööriistade väljund.</p><p>Kui see parameeter on märgitud, peate filtreerimiseks seadistama parameetrid<strong>Minimaalne suurusjärk</strong>ja<strong>Maksimaalne suurusjärk</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyyear_tag0@@": "<p>Määrab, kas piirata väljundit aastate vahemikuga.</p><ul><li>Märgitud--Filtreerige tulemused nii, et väljundisse kaasataks ainult muudatused, mis toimusid kindla aasta jooksul.</li><li>Märkimata--Ärge filtreerige tulemusi aasta järgir. See on vaikevalik.</li></ul><p>Kui see parameeter on märgitud, peate filtreerimiseks seadistama parameetrid<strong>Minimaalne väärtus</strong>ja<strong>Maksimaalne väärtus</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbystartvalue_tag0@@": "<p>Filtreerige tulemused algusväärtuse järgi nii, et väljundisse kaasatakse ainult antud algusväärtuse muudatused.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyendvalue_tag0@@": "<p>Filtreerige tulemused lõppväärtuse järgi nii, et väljundisse kaasatakse ainult antud lõppväärtuse muutused.</p>",
	"@@Detect-Change-Using-Change-Analysis_maximumnumberofchanges_tag0@@": "<p>Muudatuste maksimaalne arv arvutatava piksli kohta. Sisestatud number vastab ribade arvule väljundi rastris. Vaikevalik on 1, mis tähendab, et arvutatakse ainult üks muudatuse kuupäev, ja väljundi raster sisaldab ainult üht riba.</p><p>See parameeter ei ole saadaval, kui parameeter<strong>Muudatuse tüüp</strong>on seadistatud valikule<strong>Muudatuste arv</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_raster_tag0@@": "<p>Sisendi muutmise analüüsiraster.</p>",
	"@@Detect-Change-Using-Change-Analysis_segmentdate_tag0@@": "<p>Määrab, kas eraldada kuupäev muudatuste segmendi alguses või lõpus.</p><p>See parameeter on saadaval ainult siis, kui sisendimuutuste analüüsi raster on LandTrendri tööriistade väljund.</p><ul><li><strong>Segmendi algus</strong>--Eraldage muudatuse segmendi alguses olev kuupäev. See on vaikevalik.</li><li><strong>Segmendi lõpp</strong>--Eraldage muudatuse segmendi lõpus olev kuupäev.</li></ul>",
	"@@Kernel-Density_areaunits_tag0@@": "<p>Väljundi tiheduse väärtuse pindalaühikud.</p><ul><li>Kaardi ruutühikud--matemaatilise aluse lineaarsete mõõtühikute ruudu jaoks.</li><li>Ruutmiilid--USA miilide puhul.</li><li>Square Kilomeetrid--kilomeetrite puhul.</li><li>Aakrid--USA aakrite puhul.</li><li>Hektarid--hektarite puhul.</li><li>Ruutmeetrid--meetrite puhul.</li><li>Ruutjardid--USA jardide puhul.</li><li>Ruutjalg--USA jalgade puhul.</li><li>Ruuttollid--USA tollide puhul.</li><li>Ruutsentimeetrid--sentimeetrite puhul.</li><li>Ruutmillimeetrid--millimeetrite puhul.</li></ul>",
	"@@Kernel-Density_cellsize_tag0@@": "<p>Väljundrasterandmestiku piksli suurus. Kui<strong>lahtri suuruse</strong>väärtus on geotöötluskeskkonnas seatud, siis on see vaikeväärtus.</p>",
	"@@Kernel-Density_inputbarriers_tag0@@": "<p>Tõkkeid määratlev andmestik.</p><p>Tõkked võivad olla murdjoone või polügooni objektikihiks .</p>",
	"@@Kernel-Density_inputfeatures_tag0@@": "<p>Sisendpunkt või joonobjektid, mille tihedust arvutatakse.</p>",
	"@@Kernel-Density_method_tag0@@": "<p>Määrab, kas kasutada lühimat teed sferoidi (geodeetilisel) või lameda maa (tasapinnalisel) meetodil.</p><ul><li><strong>Tasapinnaline</strong>--Kasutab objektide vahel tasapinnalisi kaugusi. See on vaikevalik.</li><li><strong>Geodeetiline</strong>--Kasutab objektide vahel geodeetilisi kaugusi. See meetod võtab arvesse sferoidi kumerust ja tegeleb õigesti postide lähedal olevate andmetega ja rahvusvahelise kuupäevarajaga.</li></ul><p>On soovitatav kasutada<strong>geodeetilist</strong> meetodit koos koordinaatsüsteemis salvestatud andmetega, mis ei sobi vahemaa mõõtmisteks ja mis tahes analüüsiks, mis hõlmab suurt geograafilist pindala. Näiteks Web Mercator või mis tahes geograafiline koordinaatsüsteem peaks kasutama<strong>geodeetilist</strong>meetodit.</p>",
	"@@Kernel-Density_outputcellvalues_tag0@@": "<p>Määrab, milliseid väärtusi väljundraster esindab.</p><ul><li><strong>Tihedused</strong>--Väljundväärtused tähistavad prognoositavat tihedusväärtust. See on vaikevalik.</li><li><strong>Eeldatavad arvud</strong>--Väljundväärtused tähistavad nähtuse prognoositavat kogust igas pikslis. Kuna piksli väärtus on lingitud määratud<strong>lahtri suuruse</strong>väärtust, ei saa saadud rastrit uue piksli suuruse järgi uuesti modelleerida ja see esindab ikkagi nähtuse suurust.</li></ul>",
	"@@Kernel-Density_populationfield_tag0@@": "<p>Väli, mis tähistab iga objekti populatsiooni väärtusi. Väärtus<strong>Populatsiooniväli</strong> on maastikul ühtlase pinna saamiseks jaotatav arv või kogus. <strong>Populatsioonivälja</strong>väärtused võivad olla täisarvud või ujuvkomaga arvud.</p><p>Välja suvandid ja vaikekäitumised on loetletud allpool prioriteedi järjekorras.</p><ul><li>Kasutage väärtust<strong>Puudub</strong>, kui ühtegi üksust või eriväärtust ei kasutata ja kui iga objekti loendatakse üks kord.</li><li>Kasutage väärtust<strong>Kuju</strong>, kui sisendobjektid sisaldavad tähte Z.</li><li>Muul juhul on vaikeväli<strong>POPULATSIOON</strong> või populatsiooni vastuvõetav tuletis:<ul><li><strong>POPULATIONxxxx</strong>, kus<strong>xxxx</strong>võib olla mis tahes kehtiv märk, näiteks<strong>POPULATION6</strong>,<strong>POPULATION1974</strong> või<strong>POPULATIONROADTYPE</strong>.</li><li><strong>POP</strong>.</li><li><strong>POPxxxx</strong>.</li><li>Kui mitte ükski ülalnimetatutest ei kehti, on vaikevalik <strong>Puudub</strong>.</li></ul></li></ul>",
	"@@Kernel-Density_searchradius_tag0@@": "<p>Otsinguraadius, mille piires tihedust arvutada. Ühikud põhinevad projektsiooni lineaarüksusel.</p><p>Näiteks kui ühikud on meetrites, mis hõlmavad kõiki ühe miili raadiuses olevaid funktsioone, seadke otsinguraadius 1609,344 (kuna 1 miil = 1609,344 meetrit).</p>",
	"@@Zonal-Statistics_ignorenodataincalculations_tag0@@": "<p>Näitab, kas<strong>NoData</strong>väärtused <strong>väärtuse rastris</strong>mõjutab tulemusi tsoonis, kuhu nad kuuluvad.</p><ul><li><strong>Jah</strong>--Igas konkreetses tsoonis kasutatakse selle tsooni väljundi määramiseks ainult piksleid, millel on väärtus<strong>väärtuse rastris</strong>.<strong>NoData</strong>piksleid <strong>väärtuse rastris</strong>statistilises arvutuses eiratakse. See on vaikevalik.</li><li><strong>Ei</strong>--Kui igas konkreetses tsoonis on<strong>NoData</strong>pikslit<strong>väärtuse rastris</strong>, leitakse, et statistiliste arvutuste tegemiseks kõigi selle tsooni pikslite kohta ei ole piisavalt teavet; seetõttu saab kogu tsoon väljundrastril<strong>NoData</strong>väärtuse.</li></ul>",
	"@@Zonal-Statistics_percentileinterpolationtype_tag0@@": "<p>Määrab protsentiili interpoleerimise meetodi, mida kasutatakse juhul, kui sisendrastri arvutatavate väärtuste arv on ühtlane.</p><ul><li><strong>Automaatne tuvastamine</strong>--Kui sisendväärtuse raster on pikslite täisarvuga tüüpi, kasutatakse meetodit<strong>Lähim</strong>. Kui sisendväärtuse raster on ujukomaga tüüpi, kasutatakse meetodit<strong>Lineaarne</strong>. See on vaikevalik.</li><li><strong>Lähim</strong>--Kasutatakse soovitud protsentiili lähimat saadaolevat väärtust. Sel juhul on väljunpiksli tüüp samasugune kui sisendväärtuse rastril.</li><li><strong>Lineaarne</strong>--Kasutatakse soovitud protsentiili kahe ümbritseva väärtuse kaalutud keskmist. Sel juhul on väljundpiksel ujukomaga tüüpi.</li></ul>",
	"@@Zonal-Statistics_percentilevalue_tag0@@": "<p>Arvutatav protsentiil. Vaikeväärtus on 90, mis on 90. protsentiili väärtus.</p><p>Väärtused võivad olla vahemikus 0-100. 0. protsentiil on sisuliselt võrdne miinimumstatistikaga ja 100. protsentiil on võrdne maksimumiga. Väärtus 50 annab sisuliselt sama tulemuse kui mediaanstatistika.</p>",
	"@@Zonal-Statistics_processasmultidimensional_tag0@@": "<p>Määrab, kuidas töödeldakse mitmemõõtmelist rastrit.</p><ul><li><strong>Praegune lõik</strong>--Statistika arvutatakse mitmemõõtmelise lõigu praegusest lõigust. See on vaikevalik.</li><li><strong>Kõik lõigud</strong>--Statistika arvutatakse mitmemõõtmelise andmestiku kõigile mõõtmetele (nagu ajale või sügavusele).</li></ul>",
	"@@Zonal-Statistics_statisticstype_tag0@@": "<p>Arvutatava statistika tüüp.</p><ul><li><strong>Keskmine</strong>--Arvutab keskmise väärtuse kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li><li><strong>Enamus</strong>--Määrab väärtuse, mis esineb kõige sagedamini kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li><li><strong>Maksimaalne</strong>--Määrab suurima väärtuse kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li><li><strong>Keskmine</strong>--Määrab keskmise väärtuse kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li><li><strong>Minimaalne</strong>--Määrab minimaalse väärtuse kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li><li><strong>Vähemus</strong>--Määrab väärtuse, mis esineb kõige harvem kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li><li><strong>Protsentiil</strong>--Arvutab protsentiili kõigil pikslitel<strong>väljundi rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni. Vaikimisi arvutatakse 90. protsentiil. Saate määrata, millist protsentiili arvutada parameetriga<strong>Protsentiili väärtus</strong>.</li><li><strong>Vahemik</strong>--Arvutab suurima ja vähima väärtuse vahe kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li><li><strong>Standardhälve</strong>--Arvutab standardhälbe kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li><li><strong>Summa</strong>--Arvutab koguväärtuse kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li><li><strong>Variatsioon</strong>--Arvutab kordumatute väärtuste arvu kõigil pikslitel<strong>väärtuse rastris</strong>, mis kuuluvad väljundpiksliga samasse tsooni.</li></ul>",
	"@@Zonal-Statistics_valueraster_tag0@@": "<p>Raster, mis sisaldab väärtusi, mille alusel arvutatakse statistika.</p>",
	"@@Zonal-Statistics_zonefield_tag0@@": "<p>Väli, mis sisaldab iga tsooni määratlevaid väärtusi. See võib olla tsoon-rastri täisarv või stringiväli.</p>",
	"@@Zonal-Statistics_zoneraster_tag0@@": "<p>Tsoone määratlev andmestik. Tsoone saab määratleda täisarvulise rastriga.</p>",
	"@@Zonal-Statistics_calculatecircularstatistics_tag0@@": "<p>Määrab statistika tüübi arvutamise viisi.</p><ul><li><strong>Aritmeetiline</strong>--Arvutab aritmeetilise statistika. See on vaikeseadistus.</li><li><strong>Ringstatistika</strong>--Arvutab ringstatistika, mis sobib selliste tsükliliste suurustega nagu kompassi suund kraadides, päevaaeg ja reaalarvude murdosa.</li></ul>",
	"@@Zonal-Statistics_circularwrapvalue_tag0@@": "<p>Tsükliliste andmete suurim võimalik väärtus (ülempiir). See on positiivne arv vaikeväärtusega 360. See väärtus tähistab ka sama suurt kogust kui madalaim võimalik väärtus (alumine piir).</p><p>See parameeter arvutatakse ainult juhul, kui arvutatakse ringstatistika.</p>",
	"@@Boundary-Clean-function_inputraster_tag0@@": "<p>Sisendi raster, mille jaoks tsoonide vahelisi piire ühtlustatakse.</p><p>See peab olema täisarvuline.</p>",
	"@@Boundary-Clean-function_runexpansionandshrinkingtwice_tag0@@": "<p>Määrab ühtlustamise protsessi toimumise kordade arvu, kas kaks korda või üks kord.</p><ul><li><p><strong>Märgitud</strong>--Teostab laiendamise ja kahandamise kaks korda. Esimest korda tehakse sortimine vastavalt määratud sortimistüübile. Seejärel tehakse täiendav laiendamise ja kahandamise toiming ümberpööratud prioriteediga. See on vaikevalik.</p></li><li><p><strong>Märkimata</strong>--Teostab laiendamise ja kahandamise toimingu vastavalt sortimistüübile.</p></li></ul>",
	"@@Boundary-Clean-function_sorttype_tag0@@": "<p>Määrab ühtlustamisprotsessis kasutatava sortimise tüübi. Sortimine määrab prioriteedi, mille alusel saavad lahtrid laieneda oma naabrite hulka.</p><p>Sortimine võib toimuda kas tsooni väärtuse või tsooni pindala põhjal.</p><ul><li><p><strong>Ära sordi</strong>--Tsoone ei sordita suuruse järgi. Suuremate väärtustega tsoonide elementidel on suurem prioriteet laieneda väiksemate väärtustega tsoonidesse. See on vaikevalik.</p></li><li><p><strong>Kahanev</strong>--Sordib tsoone suuruse järgi kahanevas järjekorras. Suuremate üldpindaladega tsoonidel on eelisõigus laieneda väiksemate üldpindaladega tsoonideks. See valik kipub ühtlustatud väljundis välistama või vähendama väiksematest tsoonidest pärit lahtrite levikut.</p></li><li><p><strong>Kasvav</strong>--Sordib tsoone suuruse järgi kasvavas järjekorras. Väiksemate üldpindaladega tsoonidel on eelisõigus laieneda suuremate üldpindaladega tsoonideks. See valik kipub ühtlustatud väljundis välistama või suurendama väiksematest tsoonidest pärit lahtrite levikut.</p></li></ul>",
	"@@Aggregate-Multidimensional_dimension_tag0@@": "<p>Agregeerimise mõõde. See on mõõde, mida mööda muutujad agregeeritakse.</p>",
	"@@Aggregate-Multidimensional_dimensiondefinition_tag0@@": "<p>Määrab meetodi, mida enne agregeerimist kasutatakse sisendi mitmemõõtmeliste andmete filtreerimiseks.</p><ul><li><strong>Kõik</strong> -- kasutatakse iga mõõtme kogu vahemikku. Vaikeväärtus.</li><li><strong>Väärtuste järgi</strong>--Mõõde jaotatakse lõikudeks, kasutades mõõtme väärtust või väärtuste loendit.</li><li><strong>Vahemike järgi</strong>--Mõõde jaotatakse lõikudeks, kasutades vahemikku või vahemike loendit.</li><li><strong>Iteratsiooni järgi</strong>--Mõõde jaotatakse lõikudeks intervalli teatud suuruses.</li></ul>",
	"@@Aggregate-Multidimensional_iterationdefinitionparameters_tag0@@": "<p>Iteratsiooni definitsiooni parameetrid võimaldavad määratleda mõõtmete väärtused, mida kasutada sisestatud mitmemõõtmeliste andmete filtreerimiseks analüüsi jaoks, kui parameetri<strong>Mõõtme määratlus</strong>väärtuseks on määratud<strong>Iteratsiooni järgi</strong>.</p><ul><li><strong>Mõõde</strong>--Filtreerimiseks kasutatav mõõde.</li><li><strong>Esimese iteratsiooni algus</strong>--Esimese intervalli algus. Seda intervalli kasutatakse andmestiku itereerimiseks.</li><li><strong>Esimese iteratsiooni lõpp</strong>--Esimese intervalli lõpp. Seda intervalli kasutatakse andmestiku itereerimiseks.</li><li><strong>Samm</strong>--Andmete jaotamise sagedus.</li><li><strong>Ühik</strong>--Iteratsiooni ühik.</li></ul>",
	"@@Aggregate-Multidimensional_keywordinterval_tag0@@": "<p>Määrab märksõna intervalli, mida kasutatakse mööda mõõdet agregeerides.</p><p>See parameeter on nõutav, kui parameetri<strong>Tüüp</strong>jaoks kasutatakse väärtust<strong>Intervalli märksõna</strong>.</p><ul><li><strong>Iga tund</strong>--Andmete väärtused agregeeritakse tunnisteks ajasammudeks ja tulemus sisaldab igat tundi aegreas. See on vaikeväärtus.</li><li><strong>Kord päevas</strong>--Andmete väärtused agregeeritakse päevasteks ajasammudeks ja tulemus sisaldab igat päeva aegreas.</li><li><strong>Kord nädalas</strong>--Andmete väärtused agregeeritakse nädalasteks ajasammudeks ja tulemus sisaldab igat nädalat aegreas.</li><li><strong>Kord kümne päeva jooksul</strong>--Andmete väärtused agregeeritakse kolmeks 10-päevaseks perioodiks. Viimane periood võib sisaldada rohkem või vähem kui 10 päeva. Väljund sisaldab 3 lõiku iga kuu kohta.</li><li><strong>Kord viie päeva jooksul</strong>--Andmete väärtused agregeeritakse kuueks 5-päevaseks perioodiks. Viimane periood võib sisaldada rohkem või vähem kui 5 päeva. Väljund sisaldab 6 lõiku iga kuu kohta.</li><li><strong>Kord kuus</strong>--Andmete väärtused agregeeritakse kuisteks ajasammudeks ja tulemus sisaldab igat kuud aegreas.</li><li><strong>Kord kvartalis</strong>--Andmete väärtused agregeeritakse kvartaalseteks ajasammudeks ja tulemus sisaldab igat kvartalit aegreas.</li><li><strong>Kord aastas</strong>--Andmete väärtused agregeeritakse aastasteks ajasammudeks ja tulemus sisaldab igat aastat aegreas.</li><li><strong>Kordub iga päev</strong>--Andmete väärtused agregeeritakse päevasteks ajasammudeks ja tulemus sisaldab ühte agregeeritud väärtust iga Juuliuse kalendripäeva kohta. Väljund sisaldab maksimaalselt 366 igapäevast ajalõiku.</li><li><strong>Kordub iga nädal</strong>--Andmete väärtused agregeeritakse nädalasteks ajasammudeks ja tulemus sisaldab ühte agregeeritud väärtust nädalas. Väljund sisaldab maksimaalselt 53 iganädalast ajalõiku.</li><li><strong>Kordub iga kuu</strong>--Andmete väärtused agregeeritakse kuisteks ajasammudeks ja tulemus sisaldab ühte agregeeritud väärtust kuus. Väljund sisaldab maksimaalselt 12 igakuist ajalõiku.</li><li><strong>Kordub kord kvartalis</strong>--Andmeväärtused agregeeritakse kvartaalseteks sammudeks ja tulemus sisaldab ühte agregeeritud väärtust kvartalis. Väljund sisaldab maksimaalselt 4 kvartaalset ajalõiku.</li></ul>",
	"@@Aggregate-Multidimensional_operation_tag0@@": "<p>Määrab ära matemaatilise meetodi, mida kasutatakse agregeeritud lõikude ühendamiseks intervallis.</p><ul><li><strong>Enamus</strong>--Piksli kõige sagedamini esinev väärtus arvutatakse kõikides intervalli lõikudes.</li><li><strong>Maksimum</strong>--Piksli maksimaalne väärtus arvutatakse kõikides intervalli lõikudes.</li><li><strong>Keskmine</strong>--Piksli väärtuste keskmine arvutatakse kõikides intervalli lõikudes. See on vaikeväärtus.</li><li><strong>Mediaan</strong>--Piksli mediaanväärtus arvutatakse kõikides intervalli lõikudes.</li><li><strong>Minimaalne</strong>--Piksli minimaalne väärtus arvutatakse kõikides intervalli lõikudes.</li><li><strong>Vähemus</strong>--Piksli kõige harvemini esinev väärtus arvutatakse kõikides intervalli lõikudes.</li><li><strong>Vahemik</strong>--Piksli väärtuste vahemik arvutatakse kõikides intervalli lõikudes.</li><li><strong>Standardhälve</strong>--Piksli väärtuste standardhälve arvutatakse kõikides intervalli lõikudes.</li><li><strong>Summa</strong>--Piksli väärtuste summa arvutatakse kõikides intervalli lõikudes.</li><li><strong>Variatsioon</strong>--Piksli kordumatute väärtuste arv arvutatakse kõikides intervalli lõikudes.</li></ul><p>Kõikidel valikutel on ekvivalent valikuga Eira väärtust NoData. Need teevad matemaatilise tehte kõikide kehtivate pikslite puhul mööda seda mõõdet ja eiravad kõiki NoData piksleid.</p>",
	"@@Aggregate-Multidimensional_ranges_tag0@@": "<p>Väärtuste gruppide agregeerimiseks kasutatakse tabelis määratud intervallivahemikke. Miinimum- ja maksimum väärtused määravad kaasatava vahemiku.</p><p>See parameeeter on nõutav, kui parameetri<strong>Tüüp</strong>väärtuseks on määratud<strong>Intervallivahemikud</strong>.</p>",
	"@@Aggregate-Multidimensional_raster_tag0@@": "<p>Sisend on mitmemõõtmeline raster.</p>",
	"@@Aggregate-Multidimensional_type_tag0@@": "<p>Määrab mõõtme intervalli, mille kohta andmed agregeeritakse.</p><ul><li><strong>Kõik</strong>--Muutuja andmed agregeeritakse kõikides lõikudes. See on vaikeväärtus.</li><li><strong>Intervalli märksõna</strong>--Muutuja andmed agregeeritakse üldtuntud intervalli abil.</li><li><strong>Intervalli väärtus</strong>--Muutuja andmed agregeeritakse kasutajapõhise intervalli ja ühiku abil.</li><li><strong>Intervallivahemikud</strong>--Muutuja andmed agregeeritakse määratud väärtuste või kuupäevade paaride vahel.</li></ul>",
	"@@Aggregate-Multidimensional_valueinterval_tag0@@": "<p>Agregeerimiseks kasutatava intervalli suurus.</p><p>See parameeter on nõutav, kui parameetri<strong>Tüüp</strong>väärtuseks on määratud<strong>Intervalli väärtus</strong>.</p>",
	"@@Aggregate-Multidimensional_values_tag0@@": "<p>Mõõtme väärtused, mida kasutatakse sisestatud mitmemõõtmeliste andmete filtreerimiseks analüüsi otstarbel. See parameeter on nõutav, kui parameetri<strong>Mõõtme määratlus</strong>väärtuseks on seatud<strong>Väärtuste järgi</strong>.</p>",
	"@@Aggregate-Multidimensional_variables_tag0@@": "<p>Muutuja või muutujad, mida agregeeritakse mööda antud mõõdet.</p>",
	"@@Predict-Using-Regression_inputdefinitionfile_tag0@@": "<p>Esri regressiooni määratluse sisendi (<strong>.ecd</strong>) fail, mis sisaldab konkreetse andmekogumi, regressioonimudeli ja valitud atribuutide statistikat ja teavet.</p>",
	"@@Predict-Using-Regression_rasters_tag0@@": "<p>Rastri andmekogum või andmekogumid, mis esindavad ennustavaid muutujaid. See võib olla ühe ribaga raster, mitme ribaga raster, mitmemõõtmeline raster, mosaiikandmestik või rastrikogu.</p>",
	"@@Cell-Statistics_operation_tag0@@": "<p>Statistilise arvutuse tüüp, mida soovite teha.</p><p>Saadaolevad statistikud on<strong>enamik</strong>,<strong>maksimum</strong>,<strong>keskmine</strong>,<strong>mediaan</strong>,<strong>miinimum</strong>,<strong>vähemik</strong>,<strong>pertsentiil</strong>,<strong>vahemik</strong>,<strong>standardhälve</strong>,<strong>summa</strong> ja<strong>muutkond</strong>.</p><p>Vaikestatistik on<strong>keskmine</strong>.</p>",
	"@@Colormap-To-RGB_randomlyassigncolortounmappedpixels_tag0@@": "<p>Värvid määratakse juhuslikult pikslitele, mida värvikaardil ei ole.</p><ul><li>Märkimata – kaardistamata pikslitele ei määrata värvi. See on vaikeseadistus.</li><li>Märgitud -- kaardistamata pikslitele määratakse värv.</li></ul>",
	"@@Pansharpen_sensor_tag0@@": "<p>Kui valitud on Gram-Schmidti algoritm, saate määrata ka anduri, mis kogus mitmeribalise rastersisendi. Anduri tüübi valimine määrab sobiva ribavahemikud.</p>",
	"@@Dimensional-Moving-Statistics_backwardwindow_tag0@@": "<p>Väärtus, mitu lõiku enne või üle selle määratletud aknasse kaasatakse. Väärtus peab olema positiivne täisarv vahemikus 1 kuni 100. Vaikeväärtus on 1.</p><p>Selle parameetri ühik on lõik.</p>",
	"@@Dimensional-Moving-Statistics_circularwrapvalue_tag0@@": "<p>Väärtus, mida kasutatakse lineaarse väärtuse ümardamiseks antud ringikujulise keskmise vahemikku.</p><p>Selle väärtus peab olema positiivne. Vaikeväärtus on 360 kraadi.</p>",
	"@@Dimensional-Moving-Statistics_dimension_tag0@@": "<p>Mõõtme nimi, mida mööda aken liigub.</p><p>Vaikeväärtus on esimene mõõde peale x,y, mis leiti sisend mitmemõõtmelises rastris.</p>",
	"@@Dimensional-Moving-Statistics_forwardwindow_tag0@@": "<p>Väärtus, mitu lõiku pärast või alla selle määratletud aknasse kaasatakse. Väärtus peab olema positiivne täisarv vahemikus 1 kuni 100. Vaikeväärtus on 1.</p><p>Selle parameetri ühik on lõik.</p>",
	"@@Dimensional-Moving-Statistics_inputraster_tag0@@": "<p>Sisendraster saab olla ainult pilvrastervormingus mitmemõõtmeline raster (<strong>.crf</strong>file).</p>",
	"@@Dimensional-Moving-Statistics_nodatahandling_tag0@@": "<p>Määrab, kuidas NoData väärtusi statistiline arvutus käsitleb.</p><ul><li><strong>Data</strong>--Väärtuse sisendis olevaid NoData väärtusi eiratakse määratletud akna tulemustes, millesse need jäävad. See on vaikeväärtus.</li><li><strong>NoData</strong>--Väljundväärtusteks on NoData, kui määratletud aknas on sisendis NoData väärtusi.</li><li><strong>NoData täitmine</strong>--NoData lahtrite väärtused asendatakse määratletud aknas valitud statistika abil.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentileinterpolationtype_tag0@@": "<p>Määrab interpolatsioonimeetodi, mida kasutatakse juhul, kui määratud protsentiili väärtus jääb kahe sisendlahtri väärtuse vahele.</p><ul><li><strong>Automaatne tuvastamine</strong>--Kui sisendrastrid on täisarvuga piksli tüüpi, kasutatakse meetodit<strong>Lähim</strong>. Kui sisendväärtuse raster on ujukomaga tüüpi, kasutatakse meetodit<strong>Lineaarne</strong>. See on vaikevalik.</li><li><strong>Lähim</strong>--Kasutatakse soovitud protsentiili lähimat saadaolevat väärtust. Sel juhul on väljunpiksli tüüp samasugune kui sisendväärtuse rastril.</li><li><strong>Lineaarne</strong>--Kasutatakse soovitud protsentiili kahe ümbritseva väärtuse kaalutud keskmist. Sel juhul on väljundpiksel ujukomaga tüüpi.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentilevalue_tag0@@": "<p>Protsentiil, mis arvutatakse, kui<strong>Protsentiil</strong>valitakse statistikatüübiks. Vaikeväärtus on 90, mis on 90. protsentiili väärtus.</p><p>Väärtused võivad olla vahemikus 0-100. 0. protsentiil on sisuliselt võrdne miinimumstatistikaga ja 100. protsentiiliga, mis on võrdne maksimumiga, välja arvatud juhul, kui tulemuseks on ujukomaarv. Väärtus 50 annab sisuliselt sama tulemuse kui mediaanstatistika.</p>",
	"@@Dimensional-Moving-Statistics_statisticstype_tag0@@": "<p>Määrab arvutatava statistika tüübi.</p><p></p><ul><li><strong>Keskmine</strong>--Arvutatakse määratud akna lahtrite keskmine (keskmine väärtus). See on vaikevalik.</li><li><strong>Ringikujuline keskmine</strong>--Määratletud aknas olevate lahtrite ringikujuline keskmine arvutatakse. Kui valitakse see statistikatüüp, muutub<strong>ringikujulise mähkimise väärtuse</strong>parameeeter kättesaadavaks.</li><li><strong>Enamik</strong>--Määratletud aknas tuvastatakse suurem osa (kõige sagedamini esinev väärtus) lahtreid.</li><li><strong>Maksimum</strong>--Määratletud aknas tuvastatakse lahtrite maksimaalne (suurim väärtus).</li><li><strong>Mediaan</strong>--Tuvastatakse naabruses asuvate lahtrite mediaan.</li><li><strong>Miinimum</strong>--Tuvastatakse naabruses olevate lahtrite minimaalne (väikseim väärtus).</li><li><strong>Protsentiil</strong>--Arvutatakse naabruses olevate lahtrite protsentiil. Kui valitakse see statistikatüüp, muutuvad kättesaadavaks parameetrid<strong>Protsentiili väärtus</strong>ja<strong>Protsentiili interpolatsiooni tüüp</strong>. Nende parameetrite abil saate määrata arvutatava protsentiili ja valida vastavalt kasutatava interpolatsiooni tüübi..</li></ul>",
	"@@Interpolate-Raster-By-Dimension_dimension_tag0@@": "<p>Interpoleerimisel kasutatav mõõde.</p><p>See parameeter on nõutav, kui parameeter<strong>Mõõtme määratlemine</strong>on seadistatud olekusse<strong>Vahemike järgi</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_dimensiondefinition_tag0@@": "<p>Määrab meetodi, mida kasutatakse mitmemõõtmeliste sisendandmete filtreerimiseks enne interpolatsiooni sooritamist.</p><ul><li><strong>Väärtuste jätgi</strong>--Mõõde jaotatakse mõõtmete väärtuse või väärtuste loendi abil.</li><li><strong>Vahemike järgi</strong>--Mõõde jaotatakse mõõtmete väärtuse või väärtuste loendi järgi.</li><li><strong>By Sihtraster</strong>--Mõõde jaotatakse konkreetse sihtmärgi mitmemõõtmelise rastri abil.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_endofinterval_tag0@@": "<p>Intervalli lõpp, mida kasutatakse andmestiku itereerimiseks.</p><p>See parameeter on nõutav, kui parameeter<strong>Mõõtme määratlemine</strong>on seatud olekusse<strong>Vahemike järgi</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_ignorenodata_tag0@@": "<p>Määrab ära, kas NoData väärtusi analüüsis ignoreerida.</p><ul><li>Märkimata--Analüüsi tulemuseks on NoData, kui külgnevates lõikudes on NoData väärtused. Se eon vaikevalik.</li><li>Märgitud--Analüüs kasutab ainult kehtivate pikslitega lõikusid ja ignoreerib NoData lõike.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_interpolationmethod_tag0@@": "<p>Määrab meetodi, mida kasutatakse rastri interpoleerimiseksr.</p><ul><li><strong>Lineaarne</strong>--Väljund interpoleeritakse lineaarselt, kasutades naaberlõike. See on vaikevalik.</li><li><strong>Lähim naaber</strong>--Väljund kasutab lähimat naaberlõiku.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_raster_tag0@@": "<p>Sisend on mitmemõõtmeline raster.</p>",
	"@@Interpolate-Raster-By-Dimension_startofinterval_tag0@@": "<p>Intervalli algus, mida kasutatakse andmestiku itereerimiseks.</p><p>See parameeter on nõutav, kui parameetri <strong>Mõõtme määratlemine</strong>on seatud olekusse<strong>Vahemike järgi</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_step_tag0@@": "<p>Sagedus, millega andmeid interpoleeritakse.</p><p>See parameeter on nõutav, kui parameeter<strong>Mõõtme määratlemine</strong>on seatud olekusse<strong>Vahemike järgi</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_targetraster_tag0@@": "<p>Mõõtme määratlusega määratud sihtraster.</p><p>See parameeter on nõutav, kui parameeter<strong>Mõõtme määratlemine</strong>on seatud olekusse<strong>Sihtrastri järgi</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_unit_tag0@@": "<p>Vahemiku ühik.</p><p>See parameeter on nõutav, kui parameeter<strong>Mõõtme määratlemine</strong>on seatud olekusse<strong>vahemike järgi.</strong></p>",
	"@@Interpolate-Raster-By-Dimension_values_tag0@@": "<p>Mõõtme väärtused, mida kasutatakse mitmemõõtmeliste sisendandmete analüüsiks filtreerimiseks.</p><p>See parameeter on nõutav, kui <strong>Mõõtme määratlemine</strong>on seatud olekusse<strong>Väärtuste järgi</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_variables_tag0@@": "<p>Muutuja või muutujad, mida mõõtme määratlemine interpoleerib.</p>",
	"@@Terrain-Flatten_calibrationtype_tag0@@": "<p>Määrab, kas väljund on maastiku tasandamine, kasutades<strong>sigma nulli</strong>või<strong>gamma nulli</strong>.</p><ul><li><strong>Gamma null</strong>--Beeta-tagasihajumine normaliseeritakse, kasutades DEM-i lokaalselt puutuva tasapinna pindala, mida tavaliselt tuntakse kohaliku langemisnurgana. See on vaikeväärtus.</li><li><strong>Sigma null</strong>--Beeta-tagasihajumine normaliseeritakse, kasutades pindala arvutamiseks DEM-i.</li></ul>",
	"@@Terrain-Flatten_dem_tag0@@": "<p>Sisend DEM.</p><p>DEM-i kasutatakse kohaliku valgustatud ala hindamiseks.</p>",
	"@@Terrain-Flatten_geoid_tag0@@": "<p>Määrab, kas sisendi DEM vertikaalne tugisüsteem teisendatakse ellipsoidi kõrguseks. Enamik kõrgusandmekogumeid on viidatud merepinna ortomeetrilisele kõrgusele, seega on sellistel juhtudel vaja korrigeerimist, et teisendada ellipsoidaalseks kõrguseks.</p><ul><li>Märgitud --Tehakse geoidi parandus, et teisendada ortomeetriline kõrgus ellipsoidi kõrguseks (EGM96 geoidi alusel). See on vaikeväärtus.</li><li>Märkimata -- geoidi parandust ei tehta. Kasutage seda suvandit ainult siis, kui DEM on väljendatud ellipsoidi kõrgusega.</li></ul>",
	"@@Terrain-Flatten_raster_tag0@@": "<p>Sisendi radarandmed.</p><p>See raster tuleb esmalt radiomeetriliselt kalibreerida beeta nulliks.</p>",
	"@@Create-Color-Composite_blueexpression_tag0@@": "<p>Kolmandale ribale määratud arvutus.</p><p>Riba nimi, riba ID või ribasid kasutav algebraline avaldis.</p><p>Toetatud operaatorid on unaarsed: pluss (+), miinus (-), kordaja (*) ja jagaja (/).</p>",
	"@@Create-Color-Composite_greenexpression_tag0@@": "<p>Teisele ribale määratud arvutus.</p><p>Riba nimi, riba ID või ribasid kasutav algebraline avaldis.</p><p>Toetatud operaatorid on unaarsed: pluss (+), miinus (-), kordaja (*) ja jagaja (/).</p>",
	"@@Create-Color-Composite_inputraster_tag0@@": "<p>Sisendi mitmeribalised rasterandmed.</p>",
	"@@Create-Color-Composite_method_tag0@@": "<p>Määrab ribade eraldamiseks kasutatava meetodi.</p><ul><li>Riba nimed --Kasutatakse elektromagnetilise spektri lainepikkuse intervalli (nt punane, lähiinfrapuna või termiline infrapuna) või polarisatsiooni (nt VH, VV, HH või HV) tähistavat riba nime. See on vaikeväärtus.</li><li>Riba ID-d--Kasutatakse riba numbrit (näiteks B1, B2 või B3).</li></ul>",
	"@@Create-Color-Composite_redexpression_tag0@@": "<p>Esimesele ribale määratud arvutus.</p><p>Riba nimi, riba ID või ribasid kasutav algebraline avaldis.</p><p>Toetatud operaatorid on unaarsed: pluss (+), miinus (-), kordaja (*) ja jagaja (/).</p>",
	"@@Surface-Parameters_localsurfacetype_tag0@@": "<p>Valige sihtpiksli ümber paigaldatava pinnafunktsiooni tüüp.</p><ul><li>Ruut--Naaberpikslitele paigaldatakse ruutpinna funktsioon. See on vaiketüüp.</li><li>Biruut--Naaberpikslitele paigaldatakse biruut-pinnafunktsioon.</li></ul>",
	"@@Surface-Parameters_neighborhooddistance_tag0@@": "<p>Väljund arvutatakse sellel kaugusel sihtpiksli keskpunktist. See määrab naabruse suuruse. Vaikeväärtus on sisendrastri lahtri suurus, mille tulemuseks on 3x3 naabruskond.</p>",
	"@@Surface-Parameters_outputslopemeasurement_tag0@@": "<p>Mõõtühikud (kraadid või protsendid), mida kasutatakse väljundi kalderastri jaoks. See parameeter on aktiivne ainult juhul, kui<strong>parameetri tüüp</strong>on<strong>kalle</strong>.</p><ul><li>Kraad--Kalde kaldenurk arvutatakse kraadides. See on vaikeseadistus.</li><li>Tõusuprotsent--Kalde kaldenurk arvutatakse tõusuprotsendina, mida nimetatakse ka kaldeprotsendiks.</li></ul>",
	"@@Surface-Parameters_parametertype_tag0@@": "<p>Määrab väljundpinna parameetri tüübi, mida arvutatakse.</p><ul><li>Kalle--Arvutatakse kõrguse muutumise kiirus See on vaikeseadistus.</li><li>Aspekt--Arvutatakse iga piksli maksimaalse muutumiskiiruse langussuund.</li><li>Keskmine kõverus--Arvutatakse pinna üldine kõverus. See arvutatakse minimaalse ja maksimaalxse kõveruse keskmise väärtusena. See kõverus kirjeldab pinna sisemist kumerust või nõgusust, sõltumata suunast või gravitatsiooni mõjust.</li><li>Tangentsiaalne (normaalkontuuriga) kõverus--Mõõdetakse geomeetrilist normaalkõverust, mis paikneb risti kaldejoonega ja on kontuurjoone puutuja. Seda kõverust kasutatakse tavaliselt pinna ulatuses voolu lähenemise või lahknemise iseloomustamiseks.</li><li>Profiilkõverus (normaal-kaldejoonega) --Mõõdetakse geomeetrilist normaalkõverust piki kaldejoont. Seda kõverust kasutatakse tavaliselt pinna ulatuses voolu lähenemise või lahknemise iseloomustamiseks.</li><li>Plaankõverus (projitseeritud kontuur) --Mõõdetakse kõverus piki kontuurjooni.</li><li>Kontuuri geodeetiline vääne--Mõõdetakse kaldenurga muutumise kiirust mööda kontuurjooni.</li><li>Gaussi kõver--Mõõdetakse pinna üldkõverus. See arvutatakse minimaalse ja maksimaalse kõveruse korrutisena.</li><li>Casorati kõver--Arvutatakse pinna üldine kõverus. See võib olla null või mis tahes muu positiivne arv.</li></ul>",
	"@@Surface-Parameters_projectgeodesicazimuths_tag0@@": "<p>Määrab, kas geodeetilised asimuutid projitseeritakse, et korrigeerida väljundi ruumilise võrdlusaluse põhjustatud nurgamoonutusi.See parameeter on aktiivne ainult juhul, kui<strong>parameetri tüüp</strong>on<strong>Aspekt</strong>.</p><ul><li>Märkimata--Geodeetilisi asimuute ei projitseerita. See on vaikeseadistus.</li><li>Märgitud--Geodeetilised asimuudid projitseeritakse.</li></ul>",
	"@@Surface-Parameters_raster_tag0@@": "<p>Sisendpinnaraster. See võib olla täisarv või ujukomaraster.</p>",
	"@@Surface-Parameters_useadaptiveneighborhood_tag0@@": "<p>Määrab, kas naabruskonna kaugus muutub vastavalt maastikumuutustele (on kohanduv). Maksimaalne kaugus määratakse naabruskonna vahemaana. Minimaalne vahemaa on sisendrastri lahtrisuurus.</p><ul><li>Märkimata--Üht (fikseeritud) naabruskonna vahemaad kasutatakse kõigis asukohtades. See on vaikeseadistus.</li><li>Märgitud--Kohanduvat naabruskonna vahemaad kasutatakse kõigis asukohtades.</li></ul>",
	"@@Surface-Parameters_useequatorialaspect_tag0@@": "<p>Määrab, kas aspekti mõõdetakse ekvaatori punktist või põhjapoolusest. See parameeter on aktiivne ainult juhul, kui<strong>parameetri tüüp</strong>on<strong>Aspekt</strong>.</p><ul><li>Märkimata--Aspekti mõõdetakse põhjapooluselt. See on vaikeseadistus.</li><li>Märgitud--Aspekti mõõdetakse ekvaatoril asuvast punktist.</li></ul>",
	"@@Surface-Parameters_zunit_tag0@@": "<p>Vertikaalsete z-väärtuste lineaarüksus.</p><p>See on määratletud vertikaalse koordinaatsüsteemiga, kui see on olemas. Kui vertikaalset koordinaatsüsteemi ei eksisteeri, tuleb z-ühik määrata ühikute loendist, et tagada õige geodeetiline arvutus.</p><ul><li>Toll--Lineaarühik on toll.</li><li>Jalg--Lineaarühik on jalg.</li><li>Jard--Lineaarühik on jard.</li><li>Mile US--Lineaarühik on miil.</li><li>Meremiil--Lineaarühik on meremiil.</li><li>Millimeeter--Lineaarühik on millimeeter.</li><li>Sentimeeter--Lineaarühik on sentimeeter.</li><li>Meeter--Lineaarühik on meeter. See on vaikeseadistus.</li><li>Kilomeeter--Lineaarühik on kilomeeter.</li><li>Detsimeeter--Lineaarühik on detsimeeter.</li></ul>",
	"@@Surface-Parameters_analysismask_tag0@@": "<p>Raster, mis määrab kohad, kus analüüs toimub.</p><p>Raster võib olla täisarvu või ujukoma tüüpi.</p><p>Kõik kehtiva väärtusega (sh null) pikslid koostavad maski. Pikslid, mis on maski sisendis NoData, on väljundis NoData.</p>",
	"@@Geometric-Median_cellsizetype_tag0@@": "<p>Valige väljundrastris kasutatav piksli suurus. Kui kõik sisendpikslid on ühesuurused, annavad kõik valikud samad tulemused.</p><ul><li>Esimene -- Kasutage sisendrastrite esimest pikslisuurust.</li><li>Min --Kasutage kõigi sisendrastrite vähimat pikslisuurust.</li><li>Max -- Kasutage kõigi sisendrastrite suurimat pikslisuurus. See on vaikevalik.</li><li>Keskmine -- Kasutage kõigi sisendrastrite keskmist pikslisuurust.</li><li>Viimane --Kasutage sisendrastrite viimast pikslisuurust.</li></ul>",
	"@@Geometric-Median_epsilon_tag0@@": "<p>Määrab kahe järjestikuse iteratsiooni vahelise konvergentsväärtuse. Kui epsilon on määratud väärtusest väiksem või sellega võrdne, peatub iteratsioon ja kasutatakse viimase iteratsiooni tulemust.</p>",
	"@@Geometric-Median_extenttype_tag0@@": "<p>Valige, millist ulatust tuleb väljundrastris kasutada:</p><ul><li><p>Esimene--Töötlemise ulatuse määramiseks kasutage esimese sisendrastri ulatust.</p></li><li>Ristmik--Töötlemise ulatuse määramiseks kasutage kattuvate pikslite ulatust. See on vaikevalik.</li><li>Ühendus--Töötlemise ulatuse määramiseks kasutage kõigi rastrite ulatust.</li><li>Viimane--Töötlemise ulatuse määramiseks kasutage viimase sisendrastri ulatust.</li></ul>",
	"@@Geometric-Median_maximumnumberofiterations_tag0@@": "<p>Määrab lõpuleviidavate iteratsioonide maksimumarvu. Arvutus lõppeb selle väärtuse saavutamisel, olenemata <strong>epsiloni</strong>seadest.</p>",
	"@@Geometric-Median_rasters_tag0@@": "<p>Mitmeribalised sisendrastrid.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster1_tag0@@": "<p>Sisendraster, mis tähistab kumulatiivset kuluvahemaad esimesest allikast.</p><p>See peab olema kumulatiivse kuluvahemaa väljund funktsioonist <strong>Kauguse akumulatsioon</strong>või<strong>Kauguse paigutus</strong>.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster2_tag0@@": "<p>Sisendraster, mis tähistab kumulatiivset kuluvahemaad teisest allikast.</p><p>See peab olema kumulatiivse kuluvahemaa väljund funktsioonist<strong>Kauguse akumulatsioon</strong>või<strong>Kauguse paigutus</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster1_tag0@@": "<p>Tagasisuuna sisendraster esimesest allikast.</p><p>See on rasterandmestik, mis määratleb järgmise piksli suuna mööda vähima kuluga teed tagasi esimesse allikasse. See on väljund funktsioonist<strong>Kauguse akumulatsioon</strong>või<strong>Kauguse paigutus</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster2_tag0@@": "<p>Tagasisuuna sisendraster teisest allikast.</p><p>See on rasterandmestik, mis määratleb järgmise piksli suuna mööda vähima kuluga teed tagasi esimesse allikasse. See on väljund funktsioonist<strong>Kauguse akumulatsioon</strong>või<strong>Kauguse paigutus</strong>.</p>",
	"@@Least-Cost-Corridor_threshold_tag0@@": "<p>Protsent või kumulatiivne kululävi, mis määrab, kas määratud piksel kaasatakse väljundkoridorirastrisse.</p><p>Kui parameetri<strong>Lävendimeetod</strong>väärtuseks on seatud<strong>Vähima kulu protsent</strong>, tähistab määratud väärtus protsendi suurenemist, mis rakendatakse summeeritud kumulatiivse kuluvahemaa rastrite miinimumväärtuse põhjal. Kui parameetri<strong>Lävendimeetod</strong>väärtuseks on seatud<strong>Kumulatiivne kulu</strong>, tähistab väärtus piksleid, mille summeeritud akumulatiivne kulu võrdub koridori kaasatava väärtusega või on sellest madalam.</p><p>See parameeter on aktiivne ainult juhul, kui parameetri<strong>Lävendimeetod</strong>väärtuseks on seatud<strong>Vähima kulu protsent</strong>või<strong>Kumulatiivne kulu</strong>.</p>",
	"@@Least-Cost-Corridor_thresholdmethod_tag0@@": "<p>Määrab, kuidas lävend määratletakse.</p><p></p><ul><li><strong>Lävend puudub</strong>--Lävendit ei rakendata ja tulemuseks saadav koridor hõlmab sisendrastrite kogu ulatust. See on vaikevalik.</li><li><strong>Vähima kulu protsent</strong>--Lävend määratletakse summeeritud kumulatiivse kuluvahemaa rastrite miinimumväärtuse protsendina.</li><li><strong>Kumulatiivne kulu</strong>--Lävend määratletakse kumulatiivse kuluvahemaa ühikutes.</li></ul>"
};
const helpTexts_et = {
	rfxArgsHelpTexts: rfxArgsHelpTexts
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpTexts_et);


//# sourceMappingURL=help-texts.et-1f7a3991.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,