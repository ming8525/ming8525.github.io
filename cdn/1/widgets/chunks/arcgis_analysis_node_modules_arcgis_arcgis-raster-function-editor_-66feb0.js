"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-66feb0"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.sk-27eca00b.js":
/*!**************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.sk-27eca00b.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addRaster: () => (/* binding */ addRaster),
/* harmony export */   addScalar: () => (/* binding */ addScalar),
/* harmony export */   breadcrumb: () => (/* binding */ breadcrumb),
/* harmony export */   breadcrumbEditor: () => (/* binding */ breadcrumbEditor),
/* harmony export */   cancel: () => (/* binding */ cancel),
/* harmony export */   category: () => (/* binding */ category),
/* harmony export */   categoryNames: () => (/* binding */ categoryNames),
/* harmony export */   close: () => (/* binding */ close),
/* harmony export */   copy: () => (/* binding */ copy),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   defaultModelName: () => (/* binding */ defaultModelName),
/* harmony export */   definitionQuery: () => (/* binding */ definitionQuery),
/* harmony export */   description: () => (/* binding */ description),
/* harmony export */   deselectFunction: () => (/* binding */ deselectFunction),
/* harmony export */   details: () => (/* binding */ details),
/* harmony export */   dialogTitle: () => (/* binding */ dialogTitle),
/* harmony export */   dontSave: () => (/* binding */ dontSave),
/* harmony export */   enterFURL: () => (/* binding */ enterFURL),
/* harmony export */   enterURL: () => (/* binding */ enterURL),
/* harmony export */   error: () => (/* binding */ error),
/* harmony export */   errorTitle: () => (/* binding */ errorTitle),
/* harmony export */   everyone: () => (/* binding */ everyone),
/* harmony export */   f32PixelType: () => (/* binding */ f32PixelType),
/* harmony export */   f64PixelType: () => (/* binding */ f64PixelType),
/* harmony export */   failedToLoadLayer: () => (/* binding */ failedToLoadLayer),
/* harmony export */   folder: () => (/* binding */ folder),
/* harmony export */   general: () => (/* binding */ general),
/* harmony export */   groupFieldName: () => (/* binding */ groupFieldName),
/* harmony export */   groupItemsBy: () => (/* binding */ groupItemsBy),
/* harmony export */   groups: () => (/* binding */ groups),
/* harmony export */   invalidRFTMessage: () => (/* binding */ invalidRFTMessage),
/* harmony export */   isDataset: () => (/* binding */ isDataset),
/* harmony export */   isPublic: () => (/* binding */ isPublic),
/* harmony export */   item: () => (/* binding */ item),
/* harmony export */   itemGroup: () => (/* binding */ itemGroup),
/* harmony export */   loadingLayer: () => (/* binding */ loadingLayer),
/* harmony export */   matchVariables: () => (/* binding */ matchVariables),
/* harmony export */   mosaic: () => (/* binding */ mosaic),
/* harmony export */   multidimensionalRules: () => (/* binding */ multidimensionalRules),
/* harmony export */   name: () => (/* binding */ name),
/* harmony export */   noTagErrorMsg: () => (/* binding */ noTagErrorMsg),
/* harmony export */   noTitleErrorMsg: () => (/* binding */ noTitleErrorMsg),
/* harmony export */   noTitleTagErrorMsg: () => (/* binding */ noTitleTagErrorMsg),
/* harmony export */   ok: () => (/* binding */ ok),
/* harmony export */   organization: () => (/* binding */ organization),
/* harmony export */   outputPixelType: () => (/* binding */ outputPixelType),
/* harmony export */   owner: () => (/* binding */ owner),
/* harmony export */   parameter: () => (/* binding */ parameter),
/* harmony export */   parameters: () => (/* binding */ parameters),
/* harmony export */   properties: () => (/* binding */ properties),
/* harmony export */   raster: () => (/* binding */ raster),
/* harmony export */   rasterFunctionEditor: () => (/* binding */ rasterFunctionEditor),
/* harmony export */   rasterFunctions: () => (/* binding */ rasterFunctions),
/* harmony export */   rfxLicenseInfo: () => (/* binding */ rfxLicenseInfo),
/* harmony export */   s16PixelType: () => (/* binding */ s16PixelType),
/* harmony export */   s32PixelType: () => (/* binding */ s32PixelType),
/* harmony export */   s8PixelType: () => (/* binding */ s8PixelType),
/* harmony export */   save: () => (/* binding */ save),
/* harmony export */   saveAs: () => (/* binding */ saveAs),
/* harmony export */   saveUtils: () => (/* binding */ saveUtils),
/* harmony export */   savingMessage: () => (/* binding */ savingMessage),
/* harmony export */   scalar: () => (/* binding */ scalar),
/* harmony export */   search: () => (/* binding */ search),
/* harmony export */   selectFeature: () => (/* binding */ selectFeature),
/* harmony export */   selectFunction: () => (/* binding */ selectFunction),
/* harmony export */   selectRaster: () => (/* binding */ selectRaster),
/* harmony export */   serviceURL: () => (/* binding */ serviceURL),
/* harmony export */   setGroupSharing: () => (/* binding */ setGroupSharing),
/* harmony export */   setSharingLevel: () => (/* binding */ setSharingLevel),
/* harmony export */   share: () => (/* binding */ share),
/* harmony export */   shareWith: () => (/* binding */ shareWith),
/* harmony export */   success: () => (/* binding */ success),
/* harmony export */   tagFieldName: () => (/* binding */ tagFieldName),
/* harmony export */   tags: () => (/* binding */ tags),
/* harmony export */   title: () => (/* binding */ title),
/* harmony export */   toolDetailsEditor: () => (/* binding */ toolDetailsEditor),
/* harmony export */   toolEditor: () => (/* binding */ toolEditor),
/* harmony export */   toolModeler: () => (/* binding */ toolModeler),
/* harmony export */   tryAgain: () => (/* binding */ tryAgain),
/* harmony export */   type: () => (/* binding */ type),
/* harmony export */   u16PixelType: () => (/* binding */ u16PixelType),
/* harmony export */   u32PixelType: () => (/* binding */ u32PixelType),
/* harmony export */   u8PixelType: () => (/* binding */ u8PixelType),
/* harmony export */   unionDimensions: () => (/* binding */ unionDimensions),
/* harmony export */   unknownPixelType: () => (/* binding */ unknownPixelType),
/* harmony export */   unsavedTitle: () => (/* binding */ unsavedTitle),
/* harmony export */   unsavedWarningExisting: () => (/* binding */ unsavedWarningExisting),
/* harmony export */   unsavedWarningNew: () => (/* binding */ unsavedWarningNew),
/* harmony export */   userStartDirection: () => (/* binding */ userStartDirection),
/* harmony export */   variables: () => (/* binding */ variables),
/* harmony export */   viewerModeMessage: () => (/* binding */ viewerModeMessage),
/* harmony export */   viewerModeTitle: () => (/* binding */ viewerModeTitle),
/* harmony export */   warning: () => (/* binding */ warning)
/* harmony export */ });
const ok = "OK";
const cancel = "Zrušiť";
const enterURL = "Zadajte URL snímkovej služby";
const serviceURL = "URL adresa služby";
const selectRaster = "Vybrať raster";
const failedToLoadLayer = "Nepodarilo sa načítať vrstvu";
const loadingLayer = "Vrstva sa načítava";
const selectFeature = "Vyberte prvkovú vrstvu";
const enterFURL = "Zadajte URL adresu prvkovej služby";
const addRaster = "Pridať rastrovú premennú";
const addScalar = "Pridať konštantu";
const raster = "Raster";
const scalar = "Skalár";
const defaultModelName = "Šablóna rastrovej funkcie";
const general = "Všeobecné";
const parameters = "Parametre";
const variables = "Premenné";
const name = "Meno";
const description = "Popis";
const parameter = "parameter";
const isPublic = "IsPublic";
const isDataset = "IsDataset";
const unknownPixelType = "Neznáme";
const outputPixelType = "Typ výstupného pixelu";
const u8PixelType = "8 Bit Unsigned";
const s8PixelType = "8 Bit Signed";
const u16PixelType = "16 Bit Unsigned";
const s16PixelType = "16 Bit Signed";
const u32PixelType = "32 Bit Unsigned";
const s32PixelType = "32 Bit Signed";
const f32PixelType = "32 Bit Float";
const f64PixelType = "64 Bit Double";
const properties = "Vlastnosti";
const multidimensionalRules = "Multidimenzionálne pravidlá";
const matchVariables = "Spárovať premenné";
const unionDimensions = "Rozmery zjednotenia";
const rasterFunctionEditor = {
	invalidRFTMessage: "Šablóna rastrovej funkcie nie je platná.",
	rfxArgsEditor: {
		outputRaster: "Výstupný raster",
		raster: "Raster",
		unsupportedDataTypeWarning: "Nasledujúce argumenty nie sú zobrazené, pretože momentálne nie sú podporované.",
		unsupportedFunction: "Obsahuje momentálne nepodporované rastrové funkcie."
	},
	rfxRasterInput: {
		selectLayer: "Vybrať vrstvu",
		browseLayers: "Prehľadať vrstvy",
		rfxVariable: "Premenná funkcie rastra"
	},
	rfxBandCombinationEditor: {
		methodLabel: "Metóda",
		bandLabel: "Pásmo",
		combinationLabel: "Kombinácia"
	},
	rfxRemapGrid: {
		minimum: "Minimum",
		maximum: "Maximum",
		output: "Výstup",
		noData: "NoData",
		remapValuesLabel: "Reklasifikácia hodnôt"
	},
	rfxNamedRasterEditor: {
		rasterVariables: "Premenné rastra",
		deleteSelectedVars: "Odstrániť vybrané premenné"
	},
	rfxClippingGeometry: {
		clippingLayer: "Vrstva orezania",
		clippingRaster: "Raster orezania",
		clippingGeometry: "Geometria orezania",
		customExtent: "Vlastný rozsah",
		outputExtent: "Rozsah výstupu",
		currentExtent: "Aktuálny rozsah mapy",
		drawLabel: "Nakresliť"
	},
	rfxCustomExtent: {
		top: "Hore",
		right: "Vpravo",
		bottom: "Dole",
		left: "Vľavo"
	},
	rfxRasterArrayEditor: {
		moveUp: "Posunúť hore",
		moveDown: "Posunúť dolu",
		remove: "Odstrániť"
	},
	rfxStatisticsGrid: {
		stdDev: "Std. Dev",
		min: "Min",
		max: "Max",
		mean: "Priemer"
	},
	rfxWeightedSumTableEditor: {
		weightedSumTable: "Tabuľka váženého súčtu",
		id: "ID",
		layer: "Vrstva",
		field: "Pole",
		weight: "Váha",
		value: "Hodnota",
		selectLayer: "Vybrať vrstvu"
	},
	rfxWeightedOverlayTableEditor: {
		weightedOverlayTable: "Vážená tabuľka prekrytia",
		id: "ID",
		layer: "Vrstva",
		field: "Pole",
		influence: "Vplyv",
		sumOfInfluence: "Súčet vplyvov",
		value: "Hodnota",
		remapTable: "Mapovacia tabuľka",
		scale: "Mierka",
		scales: "Mierky",
		selectRaster: "Vybrať raster"
	},
	rfxFeatureSelect: {
		addFeatureLayer: "Prehľadať pre vrstvu prvkov",
		addPointLayer: "Prehľadať pre bodovú vrstvu"
	},
	rfxFieldSelect: {
		value: "Hodnota",
		count: "Počet"
	},
	rfxAttributeTable: {
		tableType: "Typ tabuľky",
		manual: "Manuálne",
		external: "Externé",
		minVal: "Minimálna hodnota",
		maxVal: "Maximálna hodnota",
		baseClassName: "Názov základnej triedy",
		colorScheme: "Schéma farieb",
		defaultClassName: "Označenie_",
		generateTable: "Generovať tabuľku",
		browseTable: "Prehľadať tabuľku",
		value: "Hodnota",
		classname: "Názov triedy",
		color: "Farba"
	},
	rfxFieldNumberSwitchable: {
		number: "Číselné",
		field: "Pole",
		string: "Reťazec",
		linearUnit: "Dĺžková jednotka"
	},
	rfxPropertySet: {
		name: "Názov",
		value: "Hodnota"
	},
	rfxConversionGrid: {
		size: "Veľkosť"
	},
	rfxTransposeBit: {
		bitPattern: "Vzor bitu",
		outputBit: "Bit výstupu",
		inputBit: "Bit vstupu"
	},
	rfxSpatialReference: {
		placeHolder: "Spresniť kľúčovým slovom",
		coordinateSystem: "Súradnicový systém",
		gcs: "Geografický súradnicový systém",
		pcs: "Rovinný súradnicový systém",
		vcs: "Vertikálny súradnicový systém"
	}
};
const rfxLicenseInfo = "Táto šablóna rastrových funkcií sa môže použiť na spracovanie snímok pomocou servera ArcGIS Image Server.";
const rasterFunctions = {
	rfx: {
		aCosHName: "Arkuskosínus hyperbolický",
		aCosHSnip: "Vypočíta inverzný hyperbolický kosínus buniek v rastri.",
		aCosHDesc: "Táto funkcia vypočíta inverzný hyperbolický kosínus pixelov v rastri.",
		aCosName: "Arkuskosínus",
		aCosSnip: "Vypočíta inverzný kosínus pixelov v rastri.",
		aCosDesc: "Táto funkcia rastra vypočíta inverzný kosínus buniek v rastri. V matematike majú všetky trigonometrické funkcie definovaný rozsah platných vstupných hodnôt nazývaných doména. Výstupné hodnoty z každej funkcie majú tiež definovaný rozsah. Pre tento nástroj je doména [-1, 1] a rozsah je [0, pi].",
		aSinHName: "Arkussínus hyperbolický",
		aSinHSnip: "Vypočíta inverzný hyperbolický sínus buniek v rastri.",
		aSinHDesc: "Táto funkcia vypočíta inverzný hyperbolický sínus pixelov v rastri.",
		aSinName: "Arkussínus",
		aSinSnip: "Vypočíta inverzný sínus buniek v rastri.",
		aSinDesc: "Táto funkcia vypočíta inverzný sínus pixelov v rastri.",
		aTan2Name: "Arkustangens 2",
		aTan2Snip: "Vypočíta inverzný tangens (na základe x, y) buniek v rastri.",
		aTan2Desc: "Funkcia vypočíta inverzný tangens (na základe x, y) pixelov v rastri.",
		aTanHName: "Arkustangens hyperbolický",
		aTanHSnip: "Vypočíta inverzný hyperbolický tangens buniek v rastri.",
		aTanHDesc: "Táto funkcia vypočíta inverzný hyperbolický tangens pixelov v rastri.",
		aTanName: "Arkustangens",
		aTanSnip: "Vypočíta inverzný tangens buniek v rastri.",
		aTanDesc: "Táto funkcia vypočíta inverzný tangens pixelov v rastri.",
		absName: "Abs",
		absSnip: "Vypočíta absolútnu hodnotu buniek v rastri.",
		absDesc: "Funkcia Abs vypočíta absolútnu hodnotu pixelov v rastri.",
		reflectanceName: "Zdanlivá odrazivosť",
		reflectanceSnip: "Konvertuje surové snímky na hodnoty hornej časti atmosféry, pričom berie do úvahy charakteristiky snímača, polohu slnka a čas nasnímania.",
		reflectanceDesc: "Táto funkcia upravuje hodnoty optickej hustoty (DN) pre niektoré satelitné senzory. Úpravy sa zakladajú na výške slnka, dátume získania a vlastnostiach senzora pre nastavenie zosilnenia a zaujatosti pre každé pásmo. Táto funkcia sa používa na úpravu hodnôt odrazivosti alebo jasu niektorých satelitných snímok na základe nastavenia osvetlenia scény a zosilnenia senzora. Snímky sú upravené na teoreticky bežné podmienky osvetlenia, takže medzi scénami s rôznymi dátumami a rôznymi snímačmi by mala byť menšia variabilita. To môže byť užitočné pri klasifikácii snímok, vyvážení farieb a mozaikovaní. Túto funkciu je možné použiť iba s konkrétnymi snímkami. Použiteľné senzory sú Landsat MSS, Landsat TM, Landsat ETM+, Landsat 8, IKONOS, QuickBird, GeoEye-1, RapidEye, DMCii, WorldView-1, WorldView-2, SPOT 6 a Pleiades.<div><br/>Funkcia vykoná dve opravy. Prvá je založená na nastavení zosilnenia. Pôvodné hodnoty jasu sa znova vytvoria z obrazových hodnôt inverziou rovníc zosilnenia. Druhá korekcia sa týka rozdielov v uhle slnečného žiarenia a jasu. Pôvodné hodnoty jasu sa upravia na bežné svetelné podmienky normalizáciou scén zachytených za premenlivých svetelných podmienok. Všeobecne platí, že zatiaľ čo typ výstupných obrazových údajov je rovnaký ako typ vstupných obrazových údajov, výstupné hodnoty sú nižšie ako vstupné hodnoty a sú orezané do platného rozsahu údajov.</div>",
		argStatisticsName: "ArgStatistics",
		argStatisticsSnip: "Vypočíta arg štatistiku vrátane Arg Max, Arg Min, Arg Median a Trvanie.",
		argStatisticsDesc: "Táto funkcia vypočíta štatistiku arg. Vo funkcii ArgStatistics sú štyri metódy: ArgMax, ArgMin, ArgMedian a Trvanie",
		arithmeticName: "Aritmetická",
		arithmeticSnip: "Vykonáva aritmetickú operáciu medzi dvoma rastrami alebo rastrom a skalárom.",
		arithmeticDesc: "Aritmetická funkcia vykonáva aritmetickú operáciu medzi dvoma rastrami alebo rastrom a skalárom a naopak.",
		aspectSlopeName: "Orientácia-Sklon",
		aspectSlopeSnip: "Vytvorí raster, ktorý súčasne zobrazuje orientáciu (smer) a sklon (strmosť) georeliéfu súvislého povrchu, ktorý reprezentuje digitálny výškový model.",
		aspectSlopeDesc: "Funkcia Orientácia-Sklon georeliéfu (Aspect Slope) vytvára rastrovú vrstvu, ktorá súčasne zobrazuje orientáciu a sklon povrchu. Orientácia georeliéfu (Aspect) identifikuje smer klesania maximálnej rýchlosti zmeny hodnoty z každého pixelu na vedľajší. Orientáciu georeliéfu (Aspect) možno považovať za smer sklonu. Hodnoty výstupného rastra budú ukazovať smer orientácie reprezentovanú farebným odtieňom (saturácia). Sklon georeliéfu (Slope) predstavuje rýchlosť zmeny nadmorskej výšky pre každý pixel digitálneho výškového modelu (DEM). Sklon (Slope) predstavuje strmosť povrchu a je symbolizovaný v troch triedach, ktoré sú znázornené pomocou sýtosti farieb (jas).<div><br/>Hodnoty pixelov vo výstupnom rastri pomeru orientácia-sklon odrážajú kombináciu orientácie a sklonu georeliéfu. Pixely s hodnotami pod 20 sa považujú za ploché a sú sivé. Hodnoty pomeru Orientácia-Sklon georeliéfu 21 a vyššie sa budú zobrazovať rôznou sýtosťou a to nasledovne: 21 až 30—Nízka saturácia sklonu, 31 až 40—Mierna saturácia sklonu, 41 a vyššie—Vysoká saturácia sklonu</div>",
		aspectName: "Orientácia georeliéfu (Aspect)",
		aspectSnip: "Ukazuje, ktorým smerom je pixel smerovaný, kde 0 je severne a uhly sa zvyšujú v smere hodinových ručičiek na 360.",
		aspectDesc: "Funkcia Orientácia georeliéfu (Aspect) identifikuje smer klesania maximálnou rýchlosťou zmeny hodnoty z každej bunky do vedľajšej. Orientáciu georeliéfu (Aspect) možno považovať za smer sklonu. Hodnoty výstupného rastra budú ukazovať smer orientácie.<div><br/>Vstupom pre túto funkciu je vstupný raster. Funkcia Orientácia georeliéfu (Aspect) je často aplikovaná na digitálny výškový model (DEM). V predvolenom nastavení sa orientácia georeliéfu zobrazí ako snímku v odtieňoch šedej. Môžete pridať funkciu Farebnej mapy (Colormap) a určiť konkrétnu farebnú schému alebo umožniť užívateľovi prezerajúcemu mozaiku zmeniť symboliku pomocou vlastnej farebnej palety.</div>",
		tableName: "Tabuľka atribútov",
		tableSnip: "Používa nastavenia na pomenovanie a symbolizáciu hodnôt v datasete. Stĺpce tabuľky sú oddelené čiarkami: PixelValue, AttributeName, RedValue, GreenValue, BlueValue.",
		tableDesc: "Funkcia Tabuľka atribútov umožňuje definovať atribútovú tabuľku pre symbolizovanie jednopásmovej mozaiky alebo rastrového datasetu. <div><br/>Je to užitočné, keď chcete predstaviť snímky, ktoré prešli klasifikáciou podľa využívania pôdy, ako napríklad lesná pôda, mokrade, úrodná pôda a mestská pôda. Ak tabuľka navyše obsahuje polia s názvami red, green, blue, hodnoty v týchto poliach sa pri vykresľovaní snímky použijú ako farebná mapa.</div>",
		bandArithmeticName: "Aritmetika pásma",
		bandArithmeticSnip: "Vypočíta indexy pomocou preddefinovaných vzorcov alebo používateľom definovaného výrazu.",
		bandArithmeticDesc: "Funkcia Aritmetika pásma vykonáva aritmetickú operáciu na pásmach rastrového datasetu. Môžete si vybrať preddefinované algoritmy alebo môžete zadať svoj vlastný riadok. Podporované funkcie sú -, +, /, * a unárne -.",
		thresholdName: "Binárne prahovanie",
		thresholdSnip: "Usporiada spojité údaje do popredia a pozadia minimalizáciou kovariancie medzi týmito dvoma triedami.",
		thresholdDesc: "Keď má rastrový dataset bimodálne rozdelenie, táto funkcia vytvorí nový raster, ktorý rozdelí údaje do dvoch rôznych tried. Vytvorí triedu nízkej hodnoty zobrazenú čiernymi pixelmi a triedu vysokej hodnoty zobrazenú bielymi pixelmi.",
		bitwiseAndName: "Bitová operácia And",
		bitwiseAndSnip: "Vykonáva bitovú operáciu AND na binárnych hodnotách dvoch vstupných rastrov.",
		bitwiseAndDesc: "Bitová operácia And vykonáva bitovú operáciu And na binárnych hodnotách dvoch vstupných rastrov",
		bitwiseLeftShiftName: "Bitový ľavý shift",
		bitwiseLeftShiftSnip: "Vykonáva bitovú operáciu ľavého posunu na binárnych hodnotách dvoch vstupných rastrov.",
		bitwiseLeftShiftDesc: "Bitová operácia ľavý posun vykonáva bitovú operáciu ľavého posunu na binárnych hodnotách dvoch vstupných rastrov",
		bitwiseNotName: "Bitová operácia NOT",
		bitwiseNotSnip: "Vykonáva Bitovú operáciu Nie (doplnok) na binárnej hodnote vstupného rastra.",
		bitwiseNotDesc: "Funkcia vykonáva Bitovú operáciu Nie (doplnok) na binárnej hodnote vstupného rastra.",
		bitwiseOrName: "Bitová operácia OR",
		bitwiseOrSnip: "Vykoná bitovú operáciu Alebo na binárnych hodnotách dvoch vstupných rastrov.",
		bitwiseOrDesc: "Funkcia vykoná bitovú operáciu Alebo na binárnych hodnotách dvoch vstupných rastrov. ",
		bitwiseRightShiftName: "Bitový pravý shift",
		bitwiseRightShiftSnip: "Vykoná bitovú operáciu Pravý posun na binárnych hodnotách dvoch vstupných rastrov.",
		bitwiseRightShiftDesc: "Funkcia vykoná bitovú operáciu Pravý posun na binárnych hodnotách dvoch vstupných rastrov.",
		bitwiseXorName: "Bitová operácia XOR",
		bitwiseXorSnip: "Vykoná bitovú operáciu eXclusive Or na binárnych hodnotách dvoch vstupných rastrov.",
		bitwiseXorDesc: "Funkcia vykoná bitovú operáciu eXclusive Or na binárnych hodnotách dvoch vstupných rastrov.",
		booleanAndName: "Boolovské AND",
		booleanAndSnip: "Vykonáva boolovskú operáciu AND na binárnych hodnotách dvoch vstupných rastrov. Ak sú obidve vstupné hodnoty pravdivé (nenulové), výstupná hodnota je 1. Ak je jeden alebo oba vstupy nepravdivé (nula), výstup je 0.",
		booleanAndDesc: "Funkcia vykoná booleovskú operáciu A na pixelových hodnotách dvoch vstupov. Ak sú obidve vstupné hodnoty pravdivé (nenulové), výstupná hodnota je 1. Ak je jedna alebo obe vstupné hodnoty nepravdivé (nula), výstupná hodnota je 0. ",
		booleanNotName: "Boolovské NOT",
		booleanNotSnip: "Vykoná boolovskú operáciu NOT (doplnenie) na hodnotách buniek vstupného rastra. Ak sú vstupné hodnoty pravdivé (nenulové), výstupná hodnota je 0. Ak sú vstupné hodnoty nepravdivé (nula), výstup je 1.",
		booleanNotDesc: "Táto funkcia vykoná boolovskú operáciu NOT (doplnok) na hodnotách pixelov vstupného rastra. Ak sú vstupné hodnoty pravdivé (nenulové), výstupná hodnota je 1. Ak sú vstupné hodnoty nepravdivé (nula), výstupná hodnota je 1.",
		booleanOrName: "Boolovské OR",
		booleanOrSnip: "Vykonáva Boolovskú operáciu OR na bunkových hodnotách dvoch vstupných rastrov. Ak je jedna alebo obidve vstupné hodnoty pravdivé (nenulové), výstupná hodnota je 1. Ak sú obidve vstupné hodnoty nepravdivé (nula), výstup je 0.",
		booleanOrDesc: "Funkcia vykoná operáciu Boolovské OR na bunkových hodnotách dvoch vstupných rastrov. Ak je jedna alebo obidve vstupné hodnoty pravdivé (nenulové), výstupná hodnota je 1. Ak sú obe vstupné hodnoty nepravdivé (nula), výstupná hodnota je 0.",
		booleanXorName: "Boolovské XOR",
		booleanXorSnip: "Vykoná Boolovskú eXcluzívnu operáciu OR na bunkových hodnotách dvoch vstupných rastrov. Ak je jedna vstupná hodnota pravdivá (nenulová) a druhá nepravdivá (nula), výstup je 1. Ak sú obidve vstupné hodnoty pravdivé alebo obe sú nepravdivé, výstup je 0.",
		booleanXorDesc: "Funkcia vykoná Boolovskú eXcluzívnu operáciu OR na bunkových hodnotách dvoch vstupných rastrov. Ak je jedna vstupná hodnota pravdivá (nenulová) a druhá je nepravdivá (nula), výstupná hodnota je 1. Ak sú obidve vstupné hodnoty pravdivé alebo obe sú nepravdivé, výstupná hodnota je 0.",
		bufferedRasterName: "Uložené v medzipamäti",
		bufferedRasterSnip: "Ukladá do vyrovnávacej pamäte naposledy prezerané bloky pixelov.",
		bufferedRasterDesc: "Funkcia vyrovnávacej pamäte sa používa na optimalizáciu výkonu zložitých funkčných reťazcov. Uloží výstup do pamäte tej časti funkčného reťazca, ktorá je pred ňou. <div><br/>Túto funkciu vložte do editora funkcií, do ktorého chcete uložiť výstup.</div>",
		rasterCalculatorName: "Kalkulačka",
		rasterCalculatorSnip: "Vypočíta raster z matematického výrazu založeného na rastri.",
		rasterCalculatorDesc: "Funkcia Kalkulačka vám umožňuje vytvárať a spúšťať výrazy a začleniť ich do funkčných reťazcov.",
		cellStatisticsName: "Štatistika buniek",
		cellStatisticsSnip: "Vypočíta bunkovú štatistiku z viacerých rastrov. K dispozícii sú tieto štatistiky: Majorita, Maximum, Priemer, Medián, Minimum, Minorita, Percentil, Rozsah, Štandardná odchýlka, Súčet a Rozmanitosť.",
		cellStatisticsDesc: "Táto funkcia počíta štatistiku z viacerých rastrov na základe jednotlivých pixelov. Dostupné štatistiky sú väčšina, maximum, priemer, medián, minimum, menšina, rozsah, štandardná odchýlka, súčet a rozmanitosť.",
		classifyName: "Klasifikovať",
		classifySnip: "Priradí každý pixel k triede. Zahrňte doplnkové údaje, napríklad segmentovanú snímku.",
		classifyDesc: "Táto rastrová funkcia klasifikuje rastrový dataset na základe vstupov súboru rastra a definície klasifikátora Esri (.ecd). Súbor .ecd používaný vo funkcii Klasifikovať obsahuje všetky informácie o konkrétnom datasete a klasifikátore a je generovaný pomocou nástrojov klasifikácie, ako sú Train Support Vector Machine alebo Train Random Trees.",
		clipName: "Orezať",
		clipSnip: "Nastavuje rozsah rastra pomocou súradníc alebo iného datasetu.",
		clipDesc: "Táto funkcia oreže raster pomocou obdĺžnikového tvaru podľa definovaných rozsahov alebo ho oreže podľa tvaru vstupnej polygónovej triedy. Tvar definujúci oblasť orezania môže vystrihnúť rozsah rastra alebo vystrihnúť oblasť v rastri.",
		colorspaceConversionName: "Konverzia farebného modelu",
		colorspaceConversionSnip: "Konvertuje raster z RGB na HSV a naopak.",
		colorspaceConversionDesc: "Funkcia konverzie farebného modelu prevádza farebný model snímky z farebného odtieňa, sýtosti a hodnoty (HSV) farebného priestoru na červenú, zelenú a modrú (RGB) alebo naopak.<div><br/>Táto funkcia sa môže použiť v mozaikovom datasete.</div>",
		colormapToRGBName: "Farebná mapa na RGB",
		colormapToRGBSnip: "Konvertuje jednopásmový raster s farebnou mapou na trojpásmový (červený, zelený a modrý) raster.",
		colormapToRGBDesc: "Táto funkcia konvertuje jednopásmový raster s mapou farieb na trojpásmový (červený, zelený a modrý) raster.<div><br/>Táto funkcia je užitočná, ak potrebujete vytvoriť trojpásmový raster z jednopásmového rastra s priradenou mapou farieb. Hodnoty na farebnej mape sa použijú na vytvorenie každého červeného, zeleného a modrého pásma. Túto funkciu je možné použiť v mozaikovom datasete.</div>",
		colormapName: "Farebná mapa",
		colormapSnip: "Mení hodnoty pixelov, aby zobrazoval rastrové údaje v odtieňoch šedej alebo ako červenú, zelenú alebo modrú (RGB) snímku na základe palety farieb alebo farebnej rampy.",
		colormapDesc: "Funkcia Farebná mapa (Colormap) je typ vykresľovača rastrových údajov. Transformuje hodnoty pixelov tak, aby zobrazovali rastrové údaje ako farebnú snímku v odtieňoch šedej alebo RGB na základe farebnej schémy alebo konkrétnych farieb v súbore palety farieb. Mapu farieb môžete použiť na znázornenie analyzovaných údajov, ako je napríklad klasifikovaná snímka alebo pri zobrazovaní topografickej mapy (alebo naskenovaného obrázka s indexovanými farbami).<div><br/>Mapy farieb obsahujú množinu hodnôt, ktoré sú priradené k farbám používaným na zobrazenie jednopásmového rastra konzistentne s rovnakými farbami. Každá hodnota pixelu je priradená farbe stanovenej sadou hodnôt RGB. Farebné mapy podporujú akúkoľvek bitovú hĺbku okrem desatinného čísla. Podporujú aj kladné a záporné hodnoty a môžu obsahovať chýbajúce hodnoty mapovaných farieb. Pri zobrazení datasetu s mapou farieb obsahujúcou chýbajúce hodnoty sa pixely s týmito chýbajúcimi hodnotami nezobrazia.</div>",
		complexName: "Komplex",
		complexSnip: "Extrahuje magnitúdu z komplexných čísel.",
		complexDesc: "Táto funkcia počíta rozsah z komplexných hodnôt.<div><br/>Táto funkcia sa zvyčajne používa v prípade RADAR snímok, ktoré majú komplexný dátový typ. Môže byť použité v mozaikovom datasete.</div>",
		compositeBandName: "Zložené pásma",
		compositeBandSnip: "Kombinuje viacero dátových sád do jedného viacpásmového rastra.",
		compositeBandDesc: "Funkcia Zložené pásma vám umožňuje kombinovať rastre do podoby viacpásmovej snímky.",
		conName: "Con",
		conSnip: "Vykonáva podmienené operácie If, Then a Else. Ak sa používa operácia Con, zvyčajne je potrebné spojiť dve alebo viac funkcií, pričom jedna funkcia určuje kritériá a druhá funkcia je operácia Con, ktorá tieto kritériá používa a určuje, aké by mali byť pravdivé a nepravdivé výstupy.",
		conDesc: "Funkcia Con nastavuje pixely výstupného rastra na základe hodnotenia if-then-else každého vstupného pixla. Ak je podmienené vyhodnotenie pravdivé (1), vracia hodnoty pixelov z True Raster alebo vracia hodnoty pixelov z False Raster, ak je podmienené vyhodnotenie nepravdivé (0). Toto kritérium je určené výstupom logickej matematickej funkcie, ktorá bude vstupným rastrom.",
		constantName: "Konštantné",
		constantSnip: "Vytvorí virtuálny raster s hodnotou jedného pixelu.",
		constantDesc: "Táto funkcia vytvára virtuálny raster s hodnotou jedného pixelu, ktorú je možné použiť v šablónach rastrových funkcií a na spracovanie mozaikováho datasetu.<div><br/>Konštantná hodnota sa používa pre každú hodnotu pixelu v rastri.</div>",
		contourName: "Vrstevnice",
		contourSnip: "Vytvorí vrstevnice.",
		contourDesc: "Funkcia Vrstevnice generuje vrstevnice spojením bodov s rovnakou nadmorskou výškou z rastrového datasetu výšky. Vrstevnice sú izočiary vytvorené ako rastre na vizualizáciu. Nasledujúce kľúčové vlastnosti robia túto funkciu výkonnou: vrstevnice sa generujú rýchlo a dynamicky na veľmi veľkých datasetoch, ako je napríklad globálny výškový raster; vrstevnice môžu byť vyhladené, aby poskytovali kartograficky príjemnejší vzhľad pri zachovaní presnosti vrstevníc; je zabezpečená dynamická kontrola intervalu vrstevnice; možnosti výstupu zahŕňajú vrstevnice, indexové vrstevnice a vyplnené vrstevnice.<div><br/>Vytvorenie vrstevnice ako rastrového produktu je cenné pre širokú škálu aplikácií, pretože vrstevnice je možné v mape prekryť a poskytnúť tak informácie o teréne bez toho, aby boli zakryté podkladové údaje. Sú užitočné v aplikáciách ako je strojárstvo, poľnohospodárstvo a vodné hospodárstvo.</div>",
		contrastBrightnessName: "Kontrast a jas",
		contrastBrightnessSnip: "Nastavuje kontrast a jas rastra.",
		contrastBrightnessDesc: "Funkcia Kontrast a Jas zlepšuje vzhľad rastrových údajov úpravou jasu a kontrastu v obraze. Jas zvyšuje napríklad celkovú svetlosť snímky—, čím zosvetľuje tmavé farby a svetlejšie farby robí belšími—, zatiaľ čo kontrast upravuje rozdiel medzi najtmavšími a najsvetlejšími farbami.<div><br/>Použitím tejto funkcie sa menia hodnoty pixelov; táto funkcia by sa preto mala používať, keď chcete vylepšiť vzhľad údajov a nie, ak chcete údaje používať ako súčasť analýzy, ktorá vyžaduje hodnoty nespracovaných pixelov. Táto funkcia je užitočná pri publikovaní údajov formou snímkovej služby, ktorú je možné použiť v aplikáciách bez možnosti meniť kontrast a jas snímok, alebo zabezpečiť, aby sa zobrazovali pomocou preferovaných nastavení.</div>",
		convolutionName: "Konvolúcia",
		convolutionSnip: "Použije filter na zaostrenie, rozmazanie, detekciu hrán, vyhladenie alebo sklon v rastri.",
		convolutionDesc: "Funkcia Konvolúcia vykonáva filtrovanie hodnôt pixelov obrazu, ktoré možno použiť na zaostrenie, rozmazanie snímky, detekciu okrajov v obraze alebo iné kernel-based vylepšenia. Filtre sa používajú na zlepšenie kvality rastrového obrazu odstránením rušivých údajov alebo vylepšením funkcií v údajoch. Tieto konvolučné filtre sa používajú na pohybujúce a prekrývajúce sa kernel-jadro (okno alebo okolie), napríklad ako 3 x 3 bunky. Konvolučné filtre fungujú tak, že vypočítavajú hodnotu pixelu na základe váhy susedných pixelov.",
		corridorName: "Koridor",
		corridorSnip: "Vypočíta súčet kumulatívnych nákladov pre dva vstupné kumulatívne rastre.",
		corridorDesc: "Funkcia Koridor počíta súčet akumulačných nákladov pre dva vstupné akumulátory nákladových rastrov. Zatiaľ čo na vstup sa môžu použiť ľubovoľné dva rastre, na dosiahnutie zmysluplného výsledku by to mali byť nezmenené rastre s kumulatívnym nákladom. Poradie týchto dvoch vstupov nie je relevantné.",
		cosHName: "Kosínus hyperbolický",
		cosHSnip: "Vypočíta hyperbolický kosínus buniek v rastri.",
		cosHDesc: "Funkcia vypočíta hyperbolický kosínus pixelov v rastri.",
		cosName: "Kosínus",
		cosSnip: "Vypočíta kosínus buniek v rastri.",
		cosDesc: "Funkcia vypočíta kosínus pixelov v rastri.",
		costAllocationName: "Prideľovanie nákladov",
		costAllocationSnip: "Vypočíta pre každú bunku jej zdroj s najmenšími nákladmi založený na najmenších kumulatívnych nákladoch na nákladovej ploche.",
		costAllocationDesc: "Funkcia Priraďovanie nákladov vypočíta pre každú bunku jej zdroj najmenších nákladov na základe najmenších akumulačných nákladov na nákladovej ploche.",
		costBackLinkName: "Cost Back Link",
		costBackLinkSnip: "Definuje vedľajšiu bunku, ktorá je ďalšou bunkou na ceste s najmenšími kumulatívnymi nákladmi k zdroju.",
		costBackLinkDesc: "Funkcia Cost Back Link definuje vedľajšiu bunku, ktorá je ďalšou bunkou na ceste s najmenšími kumulatívnymi nákladmi k zdroju s najmenšími nákladmi.<div><br/>Spätný raster obsahuje hodnoty od nula do osem, ktoré určujú smer alebo identifikujú najbližšiu susednú bunku (nasledujúcu bunku) pozdĺž najmenej kumulatívnej nákladovej cesty z bunky, aby dosiahli svoj zdroj s najmenšími nákladmi. Ak má cesta prejsť k pravému susedovi, bunke bude priradená hodnota 1, 2 pre pravú dolnú diagonálnu bunku a pokračovať bude v smere hodinových ručičiek. Hodnota 0 je vyhradená pre zdrojové bunky.</div>",
		costDistanceName: "Nákladová vzdialenosť",
		costDistanceSnip: "Vypočíta najmenšiu kumulatívnu nákladovú vzdialenosť pre každú bunku od alebo do zdroja najmenších nákladov na nákladovej ploche.",
		costDistanceDesc: "Funkcia Nákladová vzdialenosť vypočíta najmenšiu kumulatívnu nákladovú vzdialenosť pre každú bunku z alebo do zdroja najmenších nákladov na nákladovej ploche.",
		costPathName: "Náklady trasy",
		costPathSnip: "Vypočíta cestu s najmenšími nákladmi od zdroja k cieľu.",
		costPathDesc: "Globálna funkcia Náklady trasy vypočíta cestu s najmenšími nákladmi od zdroja k cieľu.<div><br/>Táto funkcia vytvára výstupný raster, ktorý zaznamenáva najmenej nákladnú cestu alebo cesty z vybraných miest k najbližšej zdrojovej bunke definovanej v akumulačnom nákladovom povrchu, pokiaľ ide o nákladovú vzdialenosť.</div>",
		curvatureName: "Zakrivenie",
		curvatureSnip: "Vypočíta zakrivenie rastrového povrchu, najlepšie vrátane profilu a zakrivenia plánu.",
		curvatureDesc: "Funkcia Zakrivenie zobrazuje tvar alebo zakrivenie sklonu. Časť povrchu môže byť konkávna alebo konvexná; môžete to určiť pri pohľade na hodnotu zakrivenia. Zakrivenie je určené výpočtom druhej derivácie povrchu.<div><br/>Výstup funkcie Zakrivenia sa môže použiť na opis fyzikálnych charakteristík povodia v snahe porozumieť procesom erózie a odtoku. Hodnota zakrivenia sa môže použiť na nájdenie vzorov erózie pôdy, ako aj distribúciu vody na súši. Zakrivenie profilu ovplyvňuje zrýchlenie a spomalenie toku, a preto ovplyvňuje eróziu a usadzovanie. Zakrivenie planformu ovplyvňuje konvergenciu a divergenciu toku.</div>",
		divideName: "Deleno",
		divideSnip: "Rozdeľuje hodnoty dvoch rastrov na základe jednotlivých buniek.",
		divideDesc: "Funkcia Delenie delí hodnoty dvoch rastrov na základe jednotlivých pixelov.",
		elevationVoidFillName: "Elevation Void Fill",
		elevationVoidFillSnip: "Vytvára pixely, kde v údajoch o nadmorskej výške existujú diery.",
		elevationVoidFillDesc: "Funkcia Elevation Void Fill sa používa na vytváranie pixelov tam, kde sú v nadmorskej výške diery.<div><br/>K prázdnym miestam dochádza v miestach, kde nie sú zhromaždené žiadne body v rámci oblasti reprezentovanej pixelmi výstupného rastra. Prázdne miesta sú často spôsobené vodnými plochami, selekciami typu alebo vylúčením. Vypĺňanie prázdnych miest sa najčastejšie používa pri generovaní zemského povrchu.</div>",
		equalToName: "Rovné",
		equalToSnip: "Vykonáva relačnú operáciu s dvoma vstupmi na základe postupu bunka po bunke. Vráti hodnotu 1 pre bunky, kde prvý raster sa rovná druhému rastru a hodnotu 0 pre bunky, kde to tak nie je.",
		equalToDesc: "Táto funkcia vykonáva operáciu, ktorá je rovnaká na dvoch rastroch na základe jednotlivých pixelov. Vracia hodnotu 1 pre pixely, kde sa prvý raster rovná druhému rastru a hodnotu 0 pre pixely, kde tieto rastre nie sú rovnaké.",
		eucAllocationName: "Euklidovská alokácia",
		eucAllocationSnip: "Vypočíta pre každú bunku najbližší zdroj založený na euklidovskej vzdialenosti.",
		eucAllocationDesc: "Funkcia Euklidovská alokácia vypočíta pre každú bunku najbližší zdroj založený na euklidovskej vzdialenosti.",
		eucDirectionName: "Euklidovský smer",
		eucDirectionSnip: "Vypočíta pre každú bunku smer v stupňoch k najbližšiemu zdroju.",
		eucDirectionDesc: "Funkcia Euklidovský smer vypočíta pre každú bunku smer v stupňoch k najbližšiemu zdroju. <div><br/>Smer sa počíta z každého stredu bunky do stredu zdrojovej bunky, ktorá je k nej najbližšie. Rozsah hodnôt je od 0 stupňov do 360 stupňov, pričom 0 je vyhradená pre zdrojové bunky. Na východ (vpravo) je to 90 a hodnoty sa zvyšujú v smere hodinových ručičiek (180 je juh, 270 je západ a 360 je sever).</div>",
		eucDistanceName: "Euklidovská vzdialenosť",
		eucDistanceSnip: "Vypočíta pre každú bunku euklidovskú vzdialenosť od najbližšieho zdroja.",
		eucDistanceDesc: "Funkcia euklidovská vzdialenosť vypočíta pre každú bunku euklidovskú vzdialenosť k najbližšiemu zdroju.",
		exp10Name: "Exp10",
		exp10Snip: "Vypočíta exponenciálnu hodnotu buniek v rastri so základom 10.",
		exp10Desc: "Funkcia Exp 10 vypočíta exponenciálnu hodnota pixelov v rastri so základom 10.",
		exp2Name: "Exp2",
		exp2Snip: "Vypočíta exponenciálnu hodnotu buniek v rastri so základom 2.",
		exp2Desc: "Táto funkcia vypočíta exponenciálnu hodnotu pixelov v rastri so základom 2.",
		expName: "Exp",
		expSnip: "Vypočíta exponenciálnu hodnotu buniek v rastri so základom e.",
		expDesc: "Táto funkcia vypočíta exponenciálnu hodnotu pixelov v rastri so základom e.",
		extractBandName: "Extrahovať pásma",
		extractBandSnip: "Určuje pásma, s ktorými bude pracovať pri použití viacpásmových datasetov.",
		extractBandDesc: " Funkcia Extrahovať pásma umožňuje extrahovať jedno alebo viac pásiem z viacpásmového rastrového datasetu alebo zmeniť ich poradie.<div><br/>Funkciu Extrahovať pásma môžete použiť pred inými funkciami, ako je napríklad Aritmetická funkcia, a to na ovládanie pásiem, ktoré sa používajú ako vstup v nasledujúcej funkcii.</div>",
		fillName: "Výplň",
		fillSnip: "Vyplní odtoky v povrchovom rastri, aby sa odstránili malé nedokonalosti údajov.",
		fillDesc: "Globálna funkcia výplne vyhľadá a vyplní odtoky a vrcholy v rastrovom povrchu, aby sa odstránili malé nedokonalosti údajov. Funkcia vykonáva vyplnenie iteračným procesom, pokým nie sú všetky odtoky vyplnené v stanovenom limite Z.<div><br/>Keď sa vyvýšený povrch vytvorí pomocou nástrojov pre ortografické mapovanie alebo iným spôsobom, často sa vyskytnú malé, ale významné chyby v údajoch vo forme odtokov a vrcholov. Vo fotogrametrii sa odtoky a vrcholy často označujú ako diery a hroty. Pretože povrchové údaje sa často používajú pri modelovaní, napríklad pri hydrologickom modelovaní, je dôležité opraviť tieto chyby odtokov a vrcholov spôsobom konzistentným s okolitými údajmi.</div>",
		floatName: "Desatinné číslo",
		floatSnip: "Skonvertuje každú bunkovú hodnotu rastra na hodnotu s pohyblivou desatinnou čiarkou.",
		floatDesc: "Funkcia Prevod na desatinné konvertuje každú pixelovú hodnotu rastra na formát desatinného čísla.",
		flowAccumulationName: "Akumulácia toku",
		flowAccumulationSnip: "Vytvorí raster akumulovaného toku do každej bunky. Voliteľne sa môže použiť váhový faktor.",
		flowAccumulationDesc: "Globálna funkcia Akumulácia toku vytvára raster akumulovaného toku do každého pixela tak, ako je určené akumuláciou váhy pre všetky pixely, ktoré tečú do každého pixelu klesajúceho sklonu. Ak nie je k dispozícii žiadny váhový raster, na každý pixel sa použije váha 1 a hodnota pixelov vo výstupnom rastri je počet pixelov, ktoré prúdia do každého pixelu.<div><br/>Výstupné pixely s vysokou akumuláciou toku sú oblasťami koncentrovaného toku a možno ich použiť na identifikáciu kanálov prúdenia. Výstupné pixely s nulovou akumuláciou toku sú lokálne topografické vyvýšenia a môžu sa použiť na identifikáciu reliéfnych tvarov.</div>",
		flowDirectionName: "Smer toku",
		flowDirectionSnip: "Vytvorí raster smeru toku od každej bunky smerom jej najstrmšie klesajúcemu susedovi.",
		flowDirectionDesc: "Jedným z kľúčov na odvodenie hydrologických charakteristík povrchu je schopnosť určiť smer toku z každého pixelu rastra. Funkcia Smer toku rastra berie povrch ako vstup a vytvorí raster smeru toku od každého pixelu k jeho najstrmšie klesajúcemu susedovi. Funkcia Smer toku podporuje tri metódy modelovania: D8 (osem smerov), Multi-Flow Direction (MFO), a D-infinity (DINF). ",
		flowDistanceName: "Vzdialenosť toku",
		flowDistanceSnip: "Pre každú bunku vypočíta minimálnu klesajúcu horizontálnu alebo vertikálnu vzdialenosť k bunkám po potok alebo rieku, do ktorej sa vlievajú.",
		flowDistanceDesc: "Funkcia vypočíta pre každý pixel minimálnu klesajúcu horizontálnu alebo vertikálnu vzdialenosť k pixel(om) po rieku alebo potok, do ktorého sa vlievajú. Ak je zadaný voliteľný raster smeru toku, smer(y) klesajúceho sklonu sa obmedzia na tie, ktoré sú definované rastrom vstupného smeru toku. Výstup je raster vzdialenosti prúdu.",
		focalName: "Ohniskové štatistiky",
		focalSnip: "Vypočíta ohniskové štatistiky pre každý pixel snímky na základe definovaného ohniskového okolia.",
		focalDesc: "Funkcia ohniskových štatistík vypočíta ohniskové štatistiky pre každý pixel snímky na základe definovaného ohniskového okolia.",
		geometricName: "Geometrické",
		geometricSnip: "Zvyšuje polohovú presnosť datasetu s ohľadom na výšku.",
		geometricDesc: "Geometrická funkcia produkuje upravenú orto snímku založenú na definícii senzoru a modelu terénu. Zvyšuje polohovú presnosť datasetu s ohľadom na výšku.",
		grayscaleName: "Odtiene sivej",
		grayscaleSnip: "Konvertuje viacpásmovú snímku do jednopásmovej snímky v odtieňoch sivej.",
		grayscaleDesc: "Táto funkcia konvertuje viacpásmovú snímku do jednopásmovej snímky v odtieňoch sivej.<div><br/>Táto funkcia priraďuje zadanú váhu pre každé zo vstupných pásiem a normalizuje výstupnú snímku. Váhy sú často aplikované pretože niektoré pásma majú meniacu sa významnosť v závislosti na aplikácii. Napríklad modré pásmo obsahuje viac šumu ako iné pásma.</div>",
		greaterThanEqualName: "Väčší ako a rovný",
		greaterThanEqualSnip: "Vykonáva relačnú operáciu \"väčší alebo rovný\" na dvoch vstupoch bunka po bunke. Vráti hodnotu 1 kde prvý raster je väčší než alebo rovný druhému rastru a 0 ak nie je.",
		greaterThanEqualDesc: "Táto funkcia vykonáva relačnú operáciu väčší-alebo-rovný na dvoch vstupoch pixel po pixeli. Vráti hodnotu 1 pre pixely kde prvý raster je väčší než alebo rovný druhému rastru alebo hodnotu 0 pre pixely kde prvý raster nie je väčší než alebo rovný druhému rastru.",
		greaterThanName: "Väčší ako",
		greaterThanSnip: "Vykonáva relačnú operáciu \"väčší než\" na dvoch vstupoch bunka po bunke. Vráti hodnotu 1 pre pixely kde prvý raster je väčší než druhý raster alebo hodnotu 0 pre pixely kde nie je.",
		greaterThanDesc: "Funkcia vykonáva relačnú operáciu väčší než na dvoch vstupoch pixel po pixeli. Vráti hodnotu 1 pre pixely kde prvý raster je väčší než druhý raster alebo hodnotu 0 pre pixely kde prvý raster nie je väčší ako druhý raster.",
		heatIndexName: "Teplotný index",
		heatIndexSnip: "Kombinuje okolitú teplotu a relatívnu vlhkosť a vráti zdanlivú teplotu.",
		heatIndexDesc: "Táto funkcia vypočíta zdanlivú teplotu na základe okolitej teploty a relatívnej vlhkosti. Zdanlivá teplota sa často opisuje formou aké horúce je to pre ľudské telo.<div><br/>Tento index je užitočný pre vypočítanie ohrození spojených so zdravotnými problémami ako svalové kŕče, dehydratácia, vyčerpanie z tepla alebo vážnejší úpal počas horúcich a vlhkých dní. Keď je vysoká relatívna vlhkosť, vyparovanie potu z ľudského tela sa stáva zložitejším a ľudia tak nemajú možnosť prirodzeného schladenia. Mapy tepelných odporúčaní alebo varovaní sú často produktom reklasifikácie tepelného indexu do tried, kde čím väčšia hodnota indexu, tým je pravdepodobnejšie vydanie varovania miesto odporúčania.</div>",
		hillshadeName: "Zatienenie",
		hillshadeSnip: "Vytvára 3D zobrazenie povrchu pričom sa pre tieňovanie do úvahy berie relatívna pozícia slnka.",
		hillshadeDesc: "Funkcia zatienenia produkuje 3D reprezentáciu znázornenia povrchu terénu v odtieňoch šedej pričom sa pre tieňovanie do úvahy berie relatívna pozícia slnka. <div><br/>Zatienenie je metóda pre vizualizáciu terénu určená zdrojom svetla a sklonom a orientáciou výškového povrchu. Je to kvalitatívna metóda pre vizualizáciu topografie a neudáva absolútne hodnoty nadmorskej výšky.</div>",
		intName: "Celé číslo",
		intSnip: "Konvertuje hodnotu každého pixelu rastra do celého čísla skrátením.",
		intDesc: "Funkcia Int konvertuje hodnotu každého pixelu rastra do celého čísla skrátením.",
		interpolateIrregularDataName: "Interpolácia nepravidelne rozmiestnených údajov.",
		interpolateIrregularDataSnip: "Interpoluje z bodových mračien alebo nepravidelných mriežok.",
		interpolateIrregularDataDesc: "Niektoré datasety netCDF alebo HDF ukladajú polohu ako nepravidelne rozmiestnené polia pixelov alebo bodové údaje. Keď sa tieto datasety pridávajú do mozaikového datasetu, tak interpolovaná nepravidelná údajová funkcia vezme nepravidelne rozmiestnené údaje a prevzorkuje ich tak, že každý pixel je rovnakej veľkosti a je štvorcový.<div><br/>Pri pridávaní premenných z netCDF alebo HDF do mozaikového datasetu sa automaticky overí, či sú údaje zoradené pravidelne. Ak nie sú tak interpolačná funkcia nepravidelných údajov môže byť použitá na konvertovanie nepravidelných údajov do pravidelne rozmiestneného rastra. Môžete zmeniť interpolačnú metódu a veľkosť bunky použitej pri interpolačnej funkcii nepravidelných údajov. Pre pravidelne rozmiestnené rastrové údaje nebude aplikovaná žiadna interpolácia a údaje budú čítané tak ako sú.</div>",
		isNullName: "Je nedefinované",
		isNullSnip: "Bunka po bunke určí, ktoré hodnoty zo vstupných rastrov sú NoData. Vráti hodnotu 1 ak vstupná hodnota je NoData alebo hodnou 0 pre bunky, ktoré nie sú.",
		isNullDesc: "Funkcia Je nedefinované určuje pixel po pixeli, ktoré hodnoty zo vstupného rastra sú NoData. Vráti hodnotu 1 ak vstupná hodnota je NoData alebo hodnotu 0 pre pixely, ktoré nie sú NoData.",
		kernelDensityName: "Kernel hustota",
		kernelDensitySnip: "Vypočíta plochu na jednotku od prvkov bodu alebo krivky pomocou kernel funkcie, aby sa hladko sa zužujúci povrch prispôsobil každému bodu alebo krivke.",
		kernelDensityDesc: "Táto funkcia počíta plochu na jednotku z prvkov bodu alebo krivky pomocou kernel funkcie, aby sa každému bodu alebo krivke prispôsobil hladko sa zužujúci povrch.",
		keyMetadataName: "Kľúčové metaúdaje",
		keyMetadataSnip: "Prepíše alebo vloží kľúčové metaúdaje rastra do reťazca funkcií.",
		keyMetadataDesc: "Táto funkcia umožňuje vložiť alebo prepísať kľúčové metaúdaje rastra.<div><br/>Informácie v kľúčových metaúdajoch využívajú aplikácie pri spracovaní a renderovaní, vrátane poskytovania užitočných informácií ako názov senzora, názvy pásiem alebo oblačná pokrývka spojená so snímkami.</div>",
		shortestPathName: "Cesta s najmenšími nákladmi",
		shortestPathSnip: "Vykonáva analýzu nákladovej vzdialenosti pomocou vstupov zdroja a cieľa, ktorá sa potom používa na určenie najnižšej nákladovej cesty od zdroja k cieľu.",
		shortestPathDesc: "Funkcia Cesta s najmenšími nákladmi vypočíta cestu s najmenšími nákladmi od zdroja k cieľu. Najmenšia kumulatívna nákladová vzdialenosť sa vypočíta pre každý pixel nad nákladovou plochou k najbližšiemu zdroju. Takto sa vytvorí výstupný raster, ktorý zaznamenáva najnižšiu nákladovú cestu alebo cesty z vybraných miest po najbližšie zdrojové pixely definované v akumulačnej nákladovej ploche, pokiaľ ide o vzdialenosť nákladov.<div><br/>Každej ceste s najmenšími nákladmi je pri skenovaní pridelená hodnota. Koncový pixel na zdrojovom rastri nákladovej cesty dostáva hodnotu 1. Prvá cesta dostane hodnotu 3, druhá 4 atď. Keď sa zlúčia viaceré cesty a sledujú zostávajúcu vzdialenosť späť od zdroja na tej istej trase, tak segmentu, v ktorom sa obe cesty pohybujú spoločne, sa priradí hodnota 2. Zlúčenej časti cesty nemožno priradiť hodnotu jednej z ciest, pretože zlúčená časť patrí do oboch trás.</div>",
		lessThanEqualName: "Menší ako a rovný",
		lessThanEqualSnip: "Vykonáva relačnú operáciu menší alebo rovnaký na dvoch vstupoch bunka po bunke. Vráti hodnotu 1 kde prvý raster je menší než alebo rovný druhému rastru a 0 ak nie je.",
		lessThanEqualDesc: "Táto funkcia vykonáva relačnú operáciu menší než alebo rovný na dvoch vstupoch pixel po pixeli. Vracia hodnotu 1 pre pixely, kde prvý raster je menší alebo rovný druhému rastru a hodnotu 0, ak nie je menší alebo rovný druhému rastru.",
		lessThanName: "Menší ako",
		lessThanSnip: "Vykonáva relačnú operáciu menší ako na dvoch vstupoch na báze bunka po bunke. Vráti hodnotu 1 pre bunky, kde prvý raster je menší ako druhý raster a 0, ak nie je.",
		lessThanDesc: "Funkcia vykonáva relačnú operáciu menší ako na dvoch vstupoch pixel po pixeli. Vracia hodnotu 1 pre pixely, kde prvý raster je menší ako druhý raster a hodnotu 0, ak nie je menší ako druhý raster.",
		lnName: "Prirodzený logaritmus",
		lnSnip: "Vypočíta prirodzený logaritmus (báza e) buniek v rastri.",
		lnDesc: "Funkcia Ln vypočítava prirodzený logaritmus (základ e) každého pixelu v rastri.",
		log10Name: "Dekadický logaritmus",
		log10Snip: "Vypočíta dekadický logaritmus pre bunky v rastri.",
		log10Desc: "Funkcia Log10 vypočíta dekadický logaritmus pre každý pixel v rastri.",
		log2Name: "Binárny logaritmus",
		log2Snip: "Vypočíta logaritmus so základom 2 pre bunky v rastri.",
		log2Desc: "Funkcia Log2 vypočíta logaritmus so základom 2 pre každý pixel v rastri.",
		lookupName: "Prehľadanie",
		lookupSnip: "Vytvára nový raster prehľadaním hodnôt v inom poli tabuľky vstupného rastra.",
		lookupDesc: "Funkcia vytvára nový raster prehľadaním hodnôt v inom poli tabuľky vstupného rastra.",
		mlClassifyName: "Klasifikácia s maximálnou pravdepodobnosťou",
		mlClassifySnip: "Klasifikuje snímky po jednotlivých pixeloch. K prvku sú priradené zmiešané pixely s najvyšším percentuálnym podielom na tomto pixeli.",
		mlClassifyDesc: "Funkcia Klasifikácia s maximálnou pravdepodobnosťou vám umožňuje vykonávať klasifikáciu pod dohľadom cez klasifikátor maximálnej pravdepodobnosti na rastrovom datasete alebo mozaikovom datasete. Táto funkcia vyžaduje súbor s trénovacími množinami klasifikácie.",
		maskName: "Maska",
		maskSnip: "Nastavuje hodnoty, ktoré nechcete zobrazovať.",
		maskDesc: "Táto funkcia rastra nastavuje hodnoty, ktoré vo svojom rastri nechcete zobrazovať. Pomocou funkcie Maska zadáte jednu alebo viac hodnôt NoData alebo rozsah platných hodnôt pixelov. ",
		minusName: "Mínus",
		minusSnip: "Odpočíta hodnotu druhého vstupného rastra od hodnoty prvého vstupného rastra na základe postupu bunka po bunke.",
		minusDesc: "Funkcia Mínus odpočíta hodnotu druhého vstupného rastra od hodnoty prvého vstupného rastra na základe postupu pixel po pixeli.",
		modName: "Mod",
		modSnip: "Nájde zvyšok (modulo) prvého rastra, keď sa delí druhým rastrom na základe postupu bunka po bunke.",
		modDesc: "Funkcia Mod nájde zvyšok (modulo) prvého rastra, keď sa delí druhým rastrom na základe počtu pixelov. Poradie vstupov je dôležité a ovplyvňuje výsledok výstupu.",
		mosaicRastersName: "Mozaikovať rastre",
		mosaicRastersSnip: "Spája množinu rastrových datasetov a vytvorí tak jeden dataset.",
		mosaicRastersDesc: "Funkcia Mozaikovať rastre vytvára snímkovú mozaiku z viacerých snímok. Ak dôjde k prekrývaniu snímok, existuje niekoľko metód, z ktorých môžete určiť, ktoré snímky sa zobrazia.",
		ndviColorizedName: "NDVI Kolorizované",
		ndviColorizedSnip: "Vytvorí súbor údajov o viacerých pásmach, ktorý predstavuje stav vegetácie, na základe rozdielu medzi červeným a blízkym infračerveným pásmom.",
		ndviColorizedDesc: "Funkcia NDVI Kolorizované aplikuje funkciu NDVI na vstupnú snímku a potom použije škálu farieb alebo farebnú rampu na zobrazenie výsledku.",
		ndviName: "NDVI",
		ndviSnip: "Vypočíta index normalizovaného rozdielu vegetácie (NDVI).",
		ndviDesc: "Funkcia NDVI vytvára dataset s jedným pásmom, ktoré predstavuje stav vegetácie na základe rozdielu medzi červeným a blízko infračerveným pásmom.<div><br/>NDVI je štandardizovaný index, ktorý umožňuje vygenerovať snímku zobrazujúcu zeleň, tiež známu ako relatívna biomasa. Tento index využíva kontrast charakteristík medzi dvoma pásmami z multispektrálneho rastrového datasetu: absorpcia chlorofylového pigmentu v červenom pásme a vysoká odrazivosť rastlinného materiálu v blízkom infračervenom pásme (NIR). Extrémne nízke alebo negatívne hodnoty NDVI predstavujú oblasti bez vegetácie, ako je napríklad oblak, voda alebo sneh. Veľmi nízke hodnoty predstavujú oblasti s nízkou alebo žiadnou vegetáciou, napríklad betón, hornina alebo pôda bez porastu. Stredné hodnoty predstavujú plochy kríkov a trávnych porastov. Vysoké hodnoty predstavujú lesné oblasti a bujnú vegetáciu.</div>",
		negateName: "Negovať",
		negateSnip: "Mení znamienko (vynásobí sa -1) hodnôt buniek vstupného rastra na základe postupu bunka po bunke.",
		negateDesc: "Funkcia Negovať zmení znamienko (vynásobí sa -1) pixelových hodnôt vstupného rastra na pixeli ",
		nibbleName: "Nibble",
		nibbleSnip: "Nahradí bunky rastra zodpovedajúce maske hodnotami najbližších susedov.",
		nibbleDesc: "Globálna funkcia Nibble umožňuje priradiť vybraným oblastiam rastra hodnotu ich najbližšieho suseda. Je to užitočné pri úprave oblastí rastra, kde môžu byť údaje chybné.",
		notEqualName: "Nerovné",
		notEqualSnip: "Vykonáva relačnú operáciu nerovnaké na dvoch vstupoch na základe postupu bunka po bunke. Vráti hodnotu 1 pre bunky, kde prvý raster sa nerovná druhému rastru a 0, kde sa rovná.",
		notEqualDesc: "Funkcia vykonáva relačnú operáciu nerovnaké na dvoch vstupoch na základe postupu pixel po pixeli. Vracia hodnotu 1 pre pixely, kde sa prvý raster nerovná druhému rastru a hodnotu 0 pre pixely, kde sa rovná druhému rastru.",
		pansharpeningName: "Panchromatické zaostrovanie",
		pansharpeningSnip: "Umelo zvyšuje priestorové rozlíšenie viacpásmového obrazu fúziou s panchromatickým obrazom s vyšším rozlíšením.",
		pansharpeningDesc: "Funkcia Panchromatického zaostrovania používa panchromatický obraz s vyšším rozlíšením alebo rastrové pásmo na spojenie s viacpásmovým rastrovým datasetom s nižším rozlíšením s cieľom zvýšiť priestorové rozlíšenie viacpásmovej snímky.<div><br/>Účelom zaostrenia je vytvoriť vizuálne kvalitnejšiu snímku. Keďže techniky menia rádiometriu a spektrálne charakteristiky viacpásmových snímok, na účely analytického diaľkového snímania je potrebné takéto zaostrené snímky používať opatrne.</div>",
		pathAllocationName: "Path Distance Allocation",
		pathAllocationSnip: "Vypočítava zdroj najmenších nákladov pre každú bunku na základe najmenších akumulačných nákladov na nákladovej ploche, pričom sa berie do úvahy vzdialenosť povrchu spolu s horizontálnymi a vertikálnymi nákladovými faktormi.",
		pathAllocationDesc: "Funkcia Path Distance Allocation vypočíta najbližší zdroj pre každú bunku na základe najmenších akumulačných nákladov na nákladovom povrchu, pričom sa zohľadňujú povrchové vzdialenosti a horizontálne a vertikálne nákladové faktory.",
		pathBackLinkName: "Path Distance Back Link",
		pathBackLinkSnip: "Definuje suseda, ktorý je ďalšou bunkou na najmenej kumulatívnej nákladovej ceste k zdroju s najmenšími nákladmi, pričom sa započítava vzdialenosť povrchu spolu s horizontálnymi a vertikálnymi nákladovými faktormi.",
		pathBackLinkDesc: "Funkcia Path Distance Back Link identifikuje smerovú orientáciu suseda, ktorý je ďalšou bunkou na najmenej kumulatívnej nákladovej ceste k najbližšiemu zdroju, pričom sa započítavajú povrchové vzdialenosti a horizontálne a vertikálne nákladové faktory.",
		pathDistanceName: "Cestovná vzdielnosť",
		pathDistanceSnip: "Vypočíta pre každú bunku najmenšiu nákladovú vzdialenosť od alebo do zdroja najmenších nákladov, pričom sa berie do úvahy povrchová vzdialenosť spolu s horizontálnymi a vertikálnymi nákladovými faktormi.",
		pathDistanceDesc: "Funkcia Cestovná vzdielnosť vypočíta pre každú bunku najmenšiu kumulatívnu nákladovú vzdialenosť k najbližšiemu zdroju, zatiaľ čo zohľadňuje povrchovú vzdialenosť a horizontálne a vertikálne nákladové faktory.",
		plusName: "Plus",
		plusSnip: "Pripočíta (vykonáva súčty) hodnoty dvoch rastrov na základe jednotlivých pixelov.",
		plusDesc: "Funkcia Plus pripočíta (vykonáva súčty) hodnoty dvoch rastrov na základe jednotlivých pixelov.",
		powerName: "Mocnina",
		powerSnip: "Zvyšuje hodnoty buniek v rastri na hodnoty nájdené v inom rastri.",
		powerDesc: "Funkcia Mocnina zvyšuje hodnoty pixelov v rastri na hodnoty nájdené v inom rastri.",
		radarCalibrationName: "Kalibrácia radaru",
		radarCalibrationSnip: "Skonvertuje spätný rozptyl RADARSAT-2.",
		radarCalibrationDesc: "Túto funkciu je možné použiť na kalibráciu snímok RADARSAT-2 v mozaikovom datasete alebo ako rastrový produkt. Kalibrácia sa vykonáva na radarových snímkach tak, aby hodnoty pixelov boli reprezentáciou skutočného odrazu spätného rozptylu radaru.",
		rasterInfoName: "RasterInfo",
		rasterInfoSnip: "Upravuje vlastnosti rastra, ako je napríklad bitová hĺbka, hodnota NoData, veľkosť bunky atď.",
		rasterInfoDesc: "RasterInfo otvára dialógové okno s vlastnosťami rastrového datasetu, ako je počet stĺpcov a riadkov, počet pásiem, typ pixelov, rozsah a súradnicový systém. Tieto vlastnosti môžete upraviť výberom rastrového datasetu, ktorý sa použije ako šablóna. ",
		rasterizeAttributesName: "Rastrovať atribúty",
		rasterizeAttributesSnip: "Obohacuje raster prostredníctvom dodatočných pásiem odvodených z hodnôt vybraných atribútov z externej tabuľky alebo prvkovej služby.",
		rasterizeAttributesDesc: "Funkcia Rastrovať atribúty obohacuje raster pridaním pásiem odvodených z hodnôt vybraných atribútov, z externej tabuľky alebo z prvkovej služby. Ak chcete povoliť vyhľadávanie podľa oblasti, môžete voliteľne určiť raster zóny a priradený atribút ID zóny.",
		rasterizeFeatureClassName: "Rastrovať prvky",
		rasterizeFeatureClassSnip: "Konvertuje vektorové prvky na raster.",
		rasterizeFeatureClassDesc: "Táto funkcia konvertuje údaje triedy polygónov, línií a bodových prvkov do rastrovej vrstvy.<div><br/>Funkciám sú priradené hodnoty pixelov na základe OBJECTID prvkov (predvolené). Hodnoty pixelov môžu byť voliteľne založené na používateľsky definovanom poli hodnôt z tabuľky atribútov vstupných prvkov.</div>",
		recastName: "Pretvoriť",
		recastSnip: "Upravuje parametre funkčného reťazca v mozaikovom datasete alebo v snímkovej službe. Často sa využíva so súbormi údajov LAS, aby sa predišlo nutnosti vytvorenia samostatného mozaikového datasetu pre rôzne reprezentácie terénu.",
		recastDesc: "Funkcia Pretvoriť sa používa na dynamickú úpravu funkčného parametra použitého v mozaikovom datasete alebo snímkovej službe bez fyzicky trvalých zmien.",
		regionGroupName: "Zoskupenie regiónov",
		regionGroupSnip: "Pre každú bunku na výstupe sa zaznamená identita pripojenej oblasti, do ktorej táto bunka patrí. Každej oblasti je priradené jedinečné číslo.",
		regionGroupDesc: "Globálna funkcia Zoskupenie regiónov zaznamenáva pre každú bunku vo výstupe identifikáciu pripojenej oblasti, do ktorej táto bunka patrí. Každý región má priradenú jedinečnú hodnotu.<div><br/>Prvá skenovaná oblasť dostáva hodnotu jedna, druhá dva a tak ďalej, až kým všetkým regiónom nebude priradená jedinečná hodnota. Skenovanie prebieha zľava doprava, zhora nadol. Hodnoty priradené výstupným zónam závisia od toho, kedy sa vyskytli v procese skenovania.</div>",
		regionGrowName: "Nárast regiónu",
		regionGrowSnip: "Nárast regiónov z počiatočných bodov.",
		regionGrowDesc: "Funkcia Nárast regiónu zoskupuje susedné pixely do skupín v závislosti od zadaného polomeru od počiatočného bodu. Skupine pixelov alebo objektu je priradená zadaná hodnota výplne.",
		remapName: "Premapovať",
		remapSnip: "Mení hodnoty pixelov priradením nových hodnôt k rozsahom hodnôt pixelov alebo pomocou externej tabuľky.",
		remapDesc: "Funkcia Premapovať umožňuje zmeniť alebo reklasifikovať hodnoty pixelov rastrových údajov. To sa dá dosiahnuť buď zadaním rozsahu hodnôt pixelov pre mapovanie na výstupnú hodnotu pixelov, alebo pomocou mapovacej tabuľky.",
		reprojectName: "Preprojektovať",
		reprojectSnip: "Modifikuje projekciu rastrového datasetu, mozaikového datasetu alebo rastra v mozaikovom datasete. Môže tiež resamplovať dáta na novú veľkosť bunky a definovať počiatok.",
		reprojectDesc: "Funkcia Preprojektovať mení projekciu rastrového datasetu, mozaikového datasetu alebo rastra v mozaikovom datasete. Môže tiež resamplovať dáta na novú veľkosť bunky a definovať počiatok.<div><br/>Funkcia Preprojektovať sa môže použiť pri vytváraní cache z rastrového alebo mozaikového datasetu, ktorý nie je v požadovanej projekcii. Napríklad pri vytváraní dlaždicovej obrazovej služby, ktorá môže byť integrovaná v aplikáciách s inými dlaždicovými službami, je dôležité, aby boli všetky v rovnakej projekcii. Toto je často projekcia Web Mercator. Keďže mozaikový dataset nie je možné preprojektovať, môžete urobiť jednu z dvoch vecí — môžete vytvoriť buď referencovaný mozaikový dataset z vášho mozaikového datasetu v potrebnej projekcii, alebo pridať funkciu Preprojektovať do funkčného reťazca mozaikového datasetu. Iný príklad používa túto funkciu na rastrovú položku v mozaikovom datasete. Keď používate funkciu Cachovaný raster, možno budete chcieť vložiť funkciu Preprojektovať, aby sa dlaždice vytvorili v novej projekcii. Rastrové položky v mozaikovom datasete je možné cachovať, ak je spracovanie intenzívne a pokúšate sa publikovať snímkovú službu ktorá musí byť rýchla, bez toho, aby ste cachovali celú snímkovú službu.</div>",
		resampleName: "Prevzorkovanie",
		resampleSnip: "Mení veľkosť bunky rastra.",
		resampleDesc: "Funkcia Prevzorkovania mení veľkosť bunky, typ prevzorkovania alebo oboje.<div><br/>Funkcia Prevzorkovania by sa mala používať iba so špecifickými požiadavkami na výpočet; napríklad pri výpočte vetra alebo aktuálneho smeru a veľkosti, ktoré vyžadujú prevzorkovanie zo zdrojového rozlíšenia.</div>",
		roundDownName: "Zaokrúhliť nadol",
		roundDownSnip: "Vráti ďalšiu nízku celočíselnú hodnotu, ktorá je práve reprezentovaná ako pohyblivá desatinná čiarka, pre každú bunku v rastri.",
		roundDownDesc: "Funkcia Zaokrúhliť nadol vracia nasledujúce nižšie celé číslo ako hodnotu s pohyblivou desatinnou čiarkou pre každý pixel v rastri.",
		roundUpName: "Zaokrúhliť nahor",
		roundUpSnip: "Vráti nasledujúcu vyššiu celočíselnú hodnotu, ktorá je práve reprezentovaná ako pohyblivá desatinná čiarka, pre každú bunku v rastri.",
		roundUpDesc: "Zaokrúhliť nahor vráti nasledujúce vyššie celé číslo ako hodnotu s pohyblivou desatinnou čiarkou pre každý pixel v rastri.",
		segmentMeanShiftName: "Priemerný posun segmentu",
		segmentMeanShiftSnip: "Zoskupuje susedné pixely s podobnými spektrálnymi charakteristikami do segmentov.",
		segmentMeanShiftDesc: "Táto funkcia identifikuje objekty, prvky alebo segmenty vo vašich snímkach zoskupením susedných pixelov, ktoré majú podobné spektrálne a priestorové vlastnosti. Môžete regulovať množstvo priestorového a spektrálneho vyhladenia, aby ste mohli odvodiť požadované prvky.",
		s1RadiometricCalibrationName: "Rádiometrická kalibrácia Sentinel-1",
		s1RadiometricCalibrationSnip: "Vykonáva rôzne typy rádiometrickej kalibrácie na údajoch Sentinel-1.",
		s1RadiometricCalibrationDesc: "Táto rastrová funkcia vykonáva tri rôzne kalibrácie pre datasety Sentinel 1 vrátane verzie beta na nulu a gama a na výstup privádza kalibrovaný dataset. Cieľom kalibrácie SAR je poskytnúť snímky, v ktorých môžu hodnoty pixelov priamo súvisieť s radarovým spätným rozptylom scény. Aj keď nekalibrované snímky SAR sú dostatočné na kvalitatívne použitie, kalibrované snímky SAR sú pre kvantitatívne použitie údajov SAR nevyhnutné.<div><br/>Typické spracovanie údajov SAR, ktoré vytvára snímky úrovne 1, nezahŕňa rádiometrické korekcie a zanecháva významné rádiometrické chyby. Preto je potrebné aplikovať rádiometrickú korekciu na obrazy SAR tak, aby hodnoty pixelov snímok skutočne predstavovali radarový spätný rozptyl odrazovej plochy. Rádiometrická korekcia je tiež potrebná na porovnanie snímok SAR získaných s rôznymi senzormi alebo získaných z toho istého senzora v rôznych časoch, v rôznych režimoch alebo spracovaných rôznymi procesormi.</div>",
		s1ThermalNoiseRemovalName: "Odstránenie tepelného šumu Sentinel-1",
		s1ThermalNoiseRemovalSnip: "Odstraňuje tepelný šum z údajov Sentinel-1.",
		s1ThermalNoiseRemovalDesc: "Korekcia tepelného šumu sa môže uplatniť na produkty Sentinel-1 Level-1 Single Look Complex (SLC), ako aj na produkty úrovne 1 Ground Range Detection (GRD), ktoré doposiaľ neboli opravené. Operátor môže túto korekciu odstrániť na základe anotácií produktu, čím znovuobnoví šumový signál, ktorý bol pôvodne odstránený, čím získa pôvodný produkt. Anotácie produktov sa budú zodpovedajúcim spôsobom aktualizovať, aby sa umožnilo opätovné použitie korekcií. ",
		setNullName: "Nastaviť Null",
		setNullSnip: "Nastaviť Null nastaví identifikované polohy buniek na NoData na základe zadaných kritérií. Ak je podmienené vyhodnotenie pravdivé, vráti NoData a ak je nepravdivé, vráti hodnotu zadanú iným rastrom.",
		setNullDesc: "Funkcia Nastaviť Null nastaví identifikované pixely na NoData na základe konkrétnych kritérií. Ak je podmienené vyhodnotenie pravdivé (1), vracia sa hodnota NoData a ak je podmienené vyhodnotenie nepravdivé, vráti hodnotu zadanú v False Raster. Toto kritérium je určené výstupom logickej matematickej funkcie, ktorá bude vstupným rastrom.",
		shadedReliefName: "Tieňovaný reliéf",
		shadedReliefSnip: "Vytvorí viacpásmové, farebne kódované trojrozmerné znázornenie povrchu s relatívnou pozíciou Slnka pri zatienení snímky.",
		shadedReliefDesc: "Funkcia Tieňovaný reliéf vytvára farebnú 3D reprezentáciu terénu, ktorá sa vytvára zlúčením snímok z metód kódovania výšky a zatienenia. Táto funkcia používa na určenie polohy slnka nadmorskú výšku a azimut.<div><br/></div>",
		sinHName: "Sínus hyperbolický",
		sinHSnip: "Vypočíta hyperbolický sínus buniek v rastri.",
		sinHDesc: "Táto funkcia vypočíta hyperbolický sínus pixelov v rastri.",
		sinName: "Sínus",
		sinSnip: "Vypočíta sínus buniek v rastri.",
		sinDesc: "Funkcia vypočíta sínus pixelov v rastri.",
		slopeName: "Sklon georeliéfu (Slope)",
		slopeSnip: "Vypočíta rýchlosť zmeny z hodnoty jedného pixelu na svojich susedov.",
		slopeDesc: "Táto rastrová funkcia počíta sklon, ktorý predstavuje rýchlosť zmeny nadmorskej výšky pre každú bunku digitálneho výškového modelu (DEM). Je to prvá derivácia DEM.<div><br/>Táto funkcia používa zrýchlenú funkciu atan(). Je šesťkrát rýchlejší a chyba odhadu je vždy menšia ako 0,3 stupňa.</div>",
		speckleName: "Speckle",
		speckleSnip: "Poskytuje filtre na potlačenie šumu radarových datasetov.",
		speckleDesc: "Speckles sú vysokofrekvenčný šum na radarových údajoch. Obrazy generované radarovými systémami so syntetickou apertúrou (SAR) sú vysoko vystavené účinkom zašumenia v dôsledku spracovania rozptýlených signálov a interferencie elektromagnetických vĺn rozptýlených od povrchov alebo objektov. Funkcia Speckle filtruje zašumený radarový dataset a vyhladzuje šum pri zachovaní okrajov alebo ostrých prvkov v obraze.",
		spectralConversionName: "Spektrálna konverzia",
		spectralConversionSnip: "Aplikuje maticu na viacpásmovú snímku.",
		spectralConversionDesc: "Funkcia Spektrálnej konverzie aplikuje maticu na viacpásmovú snímku, aby ovplyvnila hodnoty farieb výstupu.<div><br/>Niektoré senzory nezhromažďujú modré pásma kvôli nízkemu pomeru signálu k šumu. To sa dá použiť napríklad na prevod falošnej infračervenej snímky na snímku s pseudo-prirodzenými farbami.</div>",
		squareRootName: "Odmocnina",
		squareRootSnip: "Vypočíta druhú odmocninu bunkových hodnôt v rastri.",
		squareRootDesc: "Funkcia Druhá odmocnina vypočíta druhú odmocninu hodnôt pixelov v rastri.",
		squareName: "Štvorec",
		squareSnip: "Vypočíta druhú mocninu hodnôt bunky v rastri.",
		squareDesc: "Mocnina vypočíta druhú mocninu hodnôt pixelov v rastri.",
		statisticsHistogramName: "Štatistiky a histogram",
		statisticsHistogramSnip: "Definujte alebo priraďte štatistiku a histogram.",
		statisticsHistogramDesc: "Funkcia Štatistika a Histogram sa používa na definovanie štatistík a histogramu rastra. Túto funkciu môžete vložiť na koniec funkčného reťazca a opísať tak štatistiku a histogram šablóny rastrových funkcií (RFT). To môže byť potrebné na riadenie predvoleného zobrazenia výsledku spracovania, najmä pri definovaní funkčného reťazca, ktorý obsahuje veľa funkcií.<div><br/>Štatistiku môžete definovať zadaním hodnôt, importom z rastrového datasetu alebo zo súboru XML. Histogramy je možné definovať iba importovaním súboru.</div>",
		statisticsName: "Štatistiky",
		statisticsSnip: "Vypočíta ohniskové štatistiky pre každý pixel snímky na základe definovaného ohniskového okolia.",
		statisticsDesc: "Funkcia Štatistiky počíta ohniskovú štatistiku pre každý pixel snímky na základe definovaného ohniskového okolia.<div><br/>Funkciu Štatistiky je možné použiť na vyplnenie vynechaných riadkov snímky. Vynechané línie sú často spôsobené problémami v senzore, keď sa neukladajú údaje. Stalo sa tak v senzoroch, ako je Enhanced Thematic Mapper Plus (ETM +) od spoločnosti Landsat 7. Tieto chýbajúce údaje spôsobujú problémy s analýzou a tiež pri pohľade na snímky. Pri použití snímok pre analýzy sa dá urobiť len málo; ak sa však vyskytla prekrývajúca sa snímka, mohla by sa použiť namiesto chýbajúceho obsahu. To isté by sa dalo urobiť, keby sa snímky použili na vizualizáciu. Neexistuje však vždy snímka pre vyplnenie chýbajúceho obsahu, preto musí byť odvodený z existujúcich údajov.</div>",
		streamLinkName: "Stream Link",
		streamLinkSnip: "Priradí jedinečné hodnoty k častiam rastrovej lineárnej siete medzi priesečníkmi.",
		streamLinkDesc: "Globálna funkcia Stream Link priradí jedinečné hodnoty k častiam rastrovej lineárnej siete medzi priesečníkmi.<div><br/>Prepojenie je časťou toku kanála spájajúceho dva za sebou idúce uzly, uzol a odtok alebo uzol a rozvodie. V hydrológii sa tieto segmenty nazývajú dosahy. Uzol súvisí s bodom odtoku a pomáha vymedziť povodie alebo rozvodie čiastkového povodia.</div>",
		stretchName: "Roztiahnutie",
		stretchSnip: "Vylepšuje snímku úpravou rozsahu zobrazených hodnôt. Tým sa nezmenia základné hodnoty pixelov. Ak má pixel hodnotu mimo určeného rozsahu, zobrazí sa ako minimálna alebo maximálna hodnota.",
		stretchDesc: "Funkcia Roztiahnutie vylepšuje obraz zmenou vlastností, ako je jas, kontrast a gama, a to prostredníctvom viacerých typov roztiahnutí. Táto funkcia používa štatistiku z rastrov v rámci mozaikového datasetu a preto, pred použitím tejto funkcie je potrebné sa uistiť, že boli vypočítané štatistiky.<div><br/>Typ roztiahnutia definuje roztiahnutie histogramu, ktorý sa použije na rastre pre vylepšenie ich vzhľadu. Rozťahovanie zlepšuje vzhľad údajov rozložením hodnôt pixelov pozdĺž histogramu z minimálnych a maximálnych hodnôt definovaných ich bitovou hĺbkou. </div>",
		swathName: "Pokos",
		swathSnip: "Interpoluje z nepravidelných sietí alebo údajov o pokose.",
		swathDesc: "Niektoré datasety netCDF alebo HDF ukladajú svoju geolokáciu ako nepravidelne rozmiestnené polia. Keď sa tieto datasety pridávajú do mozaikového datasetu, funkcia pokosu vezme nepravidelne rozmiestnené údaje a prevzorkuje ich tak, že každý pixel je rovnakej veľkosti a je štvorcový.<div><br/>Pri pridávaní premenných z netCDF alebo HDF do mozaikového datasetu sa automaticky overí, či sú údaje zoradené pravidelne. Ak nie, použije sa funkcia pokosu automaticky na prevod nepravidelného rastra na body a potom na pravidelne rastrovaný raster. Môžete zmeniť metódu interpolácie a veľkosť bunky použitú v rastrovej funkcii pokos. Pre pravidelne rozmiestnené rastrové dáta sa nepoužije žiadna interpolácia, údaje sa budú čítať tak ako sú.</div>",
		tanHName: "Tangens hyperbolický",
		tanHSnip: "Vypočíta hyperbolický tangens buniek v rastri.",
		tanHDesc: "Funkcia vypočíta hyperbolický tangens pixelov v rastri.",
		tanName: "Tangens",
		tanSnip: "Vypočíta tangens buniek v rastri.",
		tanDesc: "Funkcia vypočíta tangens pixelov v rastri. ",
		tasseledCapName: "Tasseled Cap (Kauth-Thomas)",
		tasseledCapSnip: "Vypočíta úrovne vegetácie, vlhkosti a jasu. Táto technika sa spolieha na koeficienty, ktoré sa musia pre snímač vypočítať osobitne.",
		tasseledCapDesc: "Transformácia Tasseled Cap (Kauth-Thomas) je navrhnutá na analýzu a mapovanie fenomenológie vegetácie a zmien mestského rozvoja zistených rôznymi satelitnými senzorovými systémami. Je známa ako transformácia Tasseled Cap kvôli tvaru grafického rozdelenia údajov. Transformácia poskytla odôvodnenie pre vzory nachádzajúce sa v údajoch o poľnohospodárskej pôde Landsat MSS v závislosti od životného cyklu plodiny. V zásade platí, že keď plodiny rastú od zasadenia k zrelosti, dochádza k čistému nárastu v blízkej infračervenej a k poklesu červenej odrazivosti na základe farby pôdy<div><br/>Užitočnosť tejto transformácie sa rozšírila z monitorovania plodín na analýzu a mapovanie vegetácie na podporu rôznych aplikácií, ako sú lesné hospodárstvo, hospodárenie s priemyselnou vegetáciou, mapovanie a riadenie ekosystémov, inventarizácia a monitorovanie na sekvestráciu uhlíka, rozvoj miest a ďalšie. Rozširuje sa tiež z podpory Landsat MSS na ďalšie populárne satelitné systémy, ako sú Landsat TM, Landsat ETM +, Landsat 8, IKONOS, QuickBird, WorldView-2 a RapidEye multispektrálne senzory.</div>",
		timesName: "Časy",
		timesSnip: "Násobí hodnoty dvoch rastrov na základe jednotlivých buniek.",
		timesDesc: "Funkcia Násobiť vynásobí hodnoty dvoch rastrov na základe jednotlivých pixelov.",
		transposeBitsName: "Transponovať bity",
		transposeBitsSnip: "Rozbaľuje bity vstupného pixelu a mapuje ich na určené bity vo výstupnom pixeli. Účelom tejto funkcie je manipulovať s bitmi z niekoľkých vstupov, ako sú produkty pásiem kvality Landsat 8.",
		transposeBitsDesc: "Funkcia Transponovať bity rozbalí bity vstupného pixelu a mapuje ich na určené bity vo výstupnom pixeli. Účelom tejto funkcie je nakladať s bitmi z niekoľkých vstupov, ako sú produkty pásiem kvality Landsat 8.",
		unitConversionName: "Prevod jednotiek",
		unitConversionSnip: "Mení hodnoty z jednej jednotky merania na inú.",
		unitConversionDesc: "Táto funkcia prevádza pixely z jednej jednotky na druhú. Podporuje prevod vzdialenosti, rýchlosti a teploty.",
		vectorFieldName: "Vektorové pole",
		vectorFieldSnip: "Zobrazuje datasety s veľkosťou (u) a smerom (v) ako šípky, kde je veľkosť reprezentovaná veľkosťou a smer je znázornený uhlom šípky.",
		vectorFieldDesc: "Funkcia Vektorového poľa sa používa na kombinovanie a konverziu dvoch rastrov na dvojpásmový raster, ktorý má buď dátový typ Veľkosť-Smer, alebo dátový typ U-V.<div><br/>Hodnota U sa niekedy označuje ako zónová rýchlosť a hodnota V sa niekedy označuje ako poludníková rýchlosť.</div>",
		viewshed2Name: "Oblasti viditeľnosti",
		viewshed2Snip: "Určuje oblasti rastrových povrchov viditeľné pre množinu pozorovateľov pomocou geodetických metód.",
		viewshed2Desc: "Funkcia Oblasti viditeľnosti určuje oblasti rastrových povrchov viditeľné pre pozorovateľov pomocou geodetických metód.<div><br/>Viditeľnosť každého stredu pixelov sa určuje testom priamej viditeľnosti medzi cieľom a každým pozorovateľom. Ak pozorovateľ vidí cieľ v strede pixelu, pixel sa považuje za viditeľný. Tento nástroj vždy pri určovaní viditeľnosti berie do úvahy zakrivenie Zeme.</div>",
		watershedName: "Povodie",
		watershedSnip: "Určuje prispievajúcu oblasť nad sadou buniek v rastri",
		watershedDesc: "Globálna funkcia Povodie určuje prispievajúcu oblasť nad skupinou pixelov v rastri. Povodia sú vymedzené z rastra smeru toku, ktorý identifikuje smer toku z každého pixelu.",
		weightedOverlayName: "Vážené prekrytie",
		weightedOverlaySnip: "Prekrýva niekoľko rastrov pomocou spoločnej mierky merania a váh každého podľa jeho významnosti.",
		weightedOverlayDesc: "Táto funkcia umožňuje prekrývať niekoľko rastrov pomocou spoločnej mierky a váhy každého podľa jeho významnosti.",
		weightedSumName: "Vážený súčet",
		weightedSumSnip: "Váži a pridáva rad rastrov na základe postupu bunka po bunke.",
		weightedSumDesc: "Funkcia Vážený súčet vám umožňuje prekrývať niekoľko rastrov, vynásobením každého z nich danou váhou a ich súčtom.",
		windchillName: "Veterný chlad",
		windchillSnip: "Kombinuje teplotu okolitého vzduchu a rýchlosť vetra na výpočet faktora vetra.",
		windchillDesc: "Funkcia Veterný chlad je užitočná na identifikáciu nebezpečných zimných podmienok, ktoré v závislosti od času vystavenia živlu môžu mať za následok omrzliny alebo dokonca podchladenie. Veterný chlad je spôsob, ako zmerať chladný pocit jednotlivca, keď sa berie do úvahy vietor už pri nízkych teplotách. Čím rýchlejšia je rýchlosť vetra, tým rýchlejšie telo stráca teplo a tým chladnejšie sa bude cítiť.",
		zonalRemapName: "Premapovanie zón",
		zonalRemapSnip: "Premapujte pixely v rastri na základe zón definovaných v inom mapovaní hodnôt rastrov a zón definovaných v tabuľke.",
		zonalRemapDesc: "Táto funkcia umožňuje premapovať pixely v rastri na základe zón definovaných v inom mapovaní hodnôt rastrov a zón definovaných v tabuľke.",
		zonalStatisticsName: "Zonálna štatistika",
		zonalStatisticsSnip: "Vypočíta štatistiku o hodnotách rastra v zónach iného datasetu.",
		zonalStatisticsDesc: "Funkcia vypočíta štatistiku z hodnôt rastra v zónach iného datasetu. Zóna je definovaná ako všetky oblasti na vstupe, ktoré majú rovnakú hodnotu. Tieto oblasti nemusia byť susediace. Ak vstupy zóny a hodnoty sú rastre rovnakého rozlíšenia, použijú sa priamo. Ak sú rozlíšenia odlišné, použije sa interné prevzorkovanie, aby sa rozlíšenia zhodovali pred vykonaním zonálnej operácie.",
		flowLengthName: "Dĺžka toku",
		flowLengthSnip: "Vypočíta vzdialenosť proti prúdu alebo po prúde",
		flowLengthDesc: "Toto je globálna rastrová funkcia. Táto funkcia vytvára rastrovú vrstvu vzdialenosti proti prúdu alebo po prúde alebo váženej vzdialenosti pozdĺž toku pre každú bunku.<div><br/>Primárne použitie funkcie Dĺžky toku je na výpočet dĺžky najdlhšej trasy toku v danom povodí. Toto opatrenie je často použité na výpočet času koncentrácie povodia. Toto je realizované použitím možnosti Proti prúdu. Táto funkcia môže tiež byť použitá na vytvorenie diagramu vzdialenosť-oblasť hypotetických zrážok a odtokových udalostí s použitím váženého rastra ako impendancie pohybu dolu svahom.</div>",
		streamOrderName: "Poradie prúdenia",
		streamOrderSnip: "Priradí číselnú hierarchiu segmentom rastra predstavujúcim vetvy lineárnej siete",
		streamOrderDesc: "Toto je globálna rastrová funkcia. Táto funkcia vytvára rastrovú vrstvu, ktorá priraďuje číselné poradie segmentom rastra predstavujúcim vetvy lineárnej siete.<div><br/>Výstup funkcie Poradie prúdenia bude mať vyššiu kvalitu, ak je rastová vrstva vstupného prúdu a rastová vrstva vstupného toku odvodené z rovnakého povrchu. Ak je raster prúdu odvodený z datasetu rasterizovaných prúdov, výstup nemusí byť použiteľný, pretože pri postupe bunka po bunke smer nebude zodpovedať umiestneniu buniek prúdu. Výsledky funkcie Akumulácia toku sa môžu použiť na vytvorenie siete rastrov prúdu použitím prahovej hodnoty na výber buniek s vysoko akumulovaným tokom. Napríklad bunky, do ktorých prúdi viac ako 100 buniek, sa používajú na definovanie prúdovej siete. Pomocou funkcie Con alebo Nastaviť Null vytvorte prúdový sieťový raster, kde hodnoty akumulácie toku 100 alebo viac vytvárajú sieť a zvyšok je začlenený do pozadia (NoData). Výsledná sieť prúdov sa môže použiť vo funkcii Poradie prúdenia. Táto funkcia podporuje iba rastrovú vrstvu vstupného toku smeru D8. Smery toku D8 sa dajú vytvoriť pomocou funkcie Smeru toku a spustiť s predvoleným typom smeru toku D8.</div>",
		snapPourPointName: "Prichytiť odtokové body",
		snapPourPointSnip: "Prichytí odtokové body do bunky s najvyššou akumuláciou prietoku v určenej vzdialenosti",
		snapPourPointDesc: "Toto je globálna rastrová funkcia. Táto funkcia prichytí odtokové body k bunke s najvyššou akumuláciou prietoku v určenej vzdialenosti.<div><br/>Funkcia Prichytiť odtokové body sa používa na zabezpečenie výberu bodov vysokého akumulovaného prietoku pri vymedzovaní povodí pomocou funkcie Povodie. Prichytávanie bodov odtoku bude hľadať vo vzdialenosti prichytenia okolo určených bodov odtoku bunku najvyššieho nahromadeného toku a bod odtoku presunie na toto miesto. Výstupom je celočíselná rastrová vrstva, keď sa pôvodné miesta odtoku prichytili na miesta s vyšším nahromadeným tokom.</div>",
		sinkName: "Odtok",
		sinkSnip: "Vytvorí raster identifikujúci všetky odtoky alebo oblasti vnútorného odvodnenia",
		sinkDesc: "Toto je globálna rastrová funkcia. Táto funkcia vytvára rastrovú vrstvu identifikujúcu všetky odtoky alebo oblasti vnútorného odvodnenia. Odtok je bunka alebo skupina priestorovo spojených buniek so smerom toku, ktorému nemožno priradiť jednu z ôsmich platných hodnôt v rastri smeru toku. K tomu môže dôjsť, keď sú všetky susediace bunky vyššie ako spracovávaná bunka alebo keď do seba navzájom prúdia dve bunky, čím sa vytvorí dvojbunková slučka.<div><br/>Funkcia Odtok podporuje iba rastrovú vrstvu so smerom vstupu D8. Smery toku D8 možno vytvoriť pomocou funkcie smeru toku a spustiť s predvoleným typom smeru toku D8. Výstupom funkcie Odtok je celočíselný raster, pričom každému odtoku je priradená jedinečná hodnota. Tieto jedinečné hodnoty majú rozsah medzi prvým a celkovým počtom odtokov. Napríklad ak celkový počet odtokov bol 1000, jedinečné hodnoty sa pohybujú od 1 do 1000.</div>",
		aggregateName: "Agregácia",
		aggregateSnip: "Vygeneruje verziu rastra so zníženým rozlíšením.",
		aggregateDesc: "Funkcia Agregácia premení vstupný raster na hrubšie rozlíšenie založené na špecifikovanej agregačnej stratégii. Každá výstupná bunka obsahuje súčet, minimum, maximum, priemer alebo medián vstupných buniek, ktoré sú obsiahnuté v rozsahu tejto bunky.<div><br/>Môžete určiť faktor, ktorým sa má vynásobiť veľkosť bunky vstupného rastra. Napríklad hodnota faktora 3 buniek by vyústila do výstupu, kde je veľkosť bunky trikrát väčšia ako veľkosť vstupného rastra. Môžete definovať, ako spracovať rozsah výstupu, ak počet riadkov alebo stĺpcov na vstupe nie je presným násobkom faktora bunky. V predvolenom nastavení sa horná a pravá hranica rozšíri tak, aby pokryla väčší priestorový rozsah ako rozsah vstupného rastra, aby sa zabezpečilo spracovanie všetkých vstupných buniek. Alternatívne je možné hornú a pravú hranicu zmenšiť tak, aby pokrývali menší rozsah, takže počet spracovaných riadkov a stĺpcov je presným násobkom faktora bunky. Môžete definovať, ako sa majú výpočty agregácie spracovávať s bunkami NoData. Predvolený mechanizmus je, že vstupné bunky NoData, ktoré spadajú do priestorového rozsahu väčšej bunky vo výstupnom rastri, budú pri určovaní hodnoty výstupnej bunky ignorované. Alternatívne môžete stanoviť, že ak existuje čo i len jedna vstupná bunka NoData v priestorovom rozsahu výstupnej bunky, táto bunka bude vo výstupnom rastri NoData.</div>",
		ccdcName: "CCDC Analýza",
		ccdcSnip: "Vyhodnocuje zmeny v hodnotách pixelov v priebehu času pomocou algoritmu detekcie a klasifikácie spojitých zmien (CCDC) a generuje výsledky modelu. Analýza CCDC",
		ccdcDesc: "Funkcia CCDC Analýza vyhodnocuje zmeny v hodnotách pixelov v priebehu času pomocou algoritmu detekcie a klasifikácie spojitých zmien (CCDC) a generuje viacrozmerný raster obsahujúci výsledky modelu. Podporovaná je iba v spojení s funkciou Zistiť zmeny pomocou analýzy zmien v šablóne rastrových funkcií. Ak chcete vytvoriť rastrový výstup, prepojte funkciu CCDC Analýza s funkciou Zistiť zmenu pomocou analýzy zmien, uložte ju ako šablónu funkcie rastra a spustite analýzu rastrov so šablónou funkcie.<div><br/>Táto funkcia využíva algoritmus CCDC (Continuous Change Detection and Classification) na vyhodnotenie zmien v hodnotách pixelov v priebehu času pre veľké množstvo snímok. V časovej rade optických snímok alebo derivátov snímok (napríklad NDVI) sa hodnoty pixelov môžu meniť z niekoľkých dôvodov: 1. Sezónna zmena - zmeny hodnoty pixelov odrážajú zmeny vegetácie v dôsledku sezónnej premenlivosti teploty a zrážok. Napríklad na severnej pologuli očakávame vyššiu hustotu zelene v lete v porovnaní so zimou; 2. Postupná zmena - Zmeny hodnôt pixelov odrážajú trendy vo vegetácii alebo povrchovej vode v dôsledku premenlivosti klímy alebo dlhodobých postupov obhospodarovania pôdy. Napríklad holá pôda sa môže postupne zväčšovať v oblasti kvôli dlhodobému poklesu zrážok; a 3. Náhla zmena - zmeny hodnoty pixelov odrážajú zmeny krajinnej pokrývky, ktoré sa náhle vyskytnú v dôsledku odlesňovania, rozvoja miest, prírodných katastrof atď. Algoritmus CCDC identifikuje všetky tri typy zmien s primárnym účelom identifikácie náhlej zmeny. K odhadom sezónnych a postupných zmien sa pripájajú harmonické regresné a trendové modely a náhle odchýlky od trendových modelov sú znakmi náhlej zmeny.<div><br/>Algoritmus CCDC bol pôvodne navrhnutý pre údaje Landsat TM, Landsat ETM + a Landsat OLI, ďalej pre údaje o povrchovej odrazivosti alebo teplotné údaje jasu. Avšak detekcia zmeny pomocou analýzy zmien v spojení s touto funkciou detekuje zmeny pre viacpásmové snímky z ktoréhokoľvek podporovaného snímača, ako aj pre deriváty jedného pásma, ako sú indexy pásma. Napríklad môžete vykonávať kontinuálnu detekciu zmien na rastri Index normalizácie diferenciácie vegetácie (NDVI), pretože náhle zmeny v NDVI môžu naznačovať odlesňovanie.</div>",
		computeChangeName: "Vypočítať zmenu",
		computeChangeSnip: "Vypočíta rozdiel medzi dvoma kategorickými alebo súvislými rastrovými datasetmi.",
		computeChangeDesc: "Funkcia Vypočítať zmeny sa dá použiť na výpočet rozdielov medzi dvoma klasifikovanými rastrami na analýzu zmien krajinnej pokrývky, alebo sa môže použiť na preskúmanie zmien medzi dvomi jednopásmovými súvislými rastrami, ako sú nadmorská výška, teplota, stromové pokrytie atď.",
		detectChangeName: "Zistiť zmeny pomocou analýzy zmien",
		detectChangeSnip: "Generuje rastrovú vrstvu obsahujúcu informácie o zmene pixelov pomocou výstupného rastra analýzy zmien.",
		detectChangeDesc: "<div>Funkcia Detekovať zmeny pomocou analýzy zmien generuje rastrovú vrstvu obsahujúcu informácie o dátume zmeny pixelov pomocou rastra analýzy zmien. Raster analýzy zmien musí byť generovaný nástrojom Analyzovať zmeny pomocou nástroja CCDC alebo nástrojom Analyzovať zmeny pomocou nástroja LandTrendr, prípadne rastrovými funkciami Analýza CCDC alebo Analýza LandTrendr. </div><br><div>Túto rastrovú funkciu je možné kombinovať s rastrovými funkciami CCDC Analýza alebo LandTrendr Analýza v šablóne rastrovej funkcie. Ak chcete vytvoriť trvalý rastrový výstup, pripojte výstup funkcie Analýza CCDC alebo Analýza LandTrendr k funkcii Zistiť zmenu pomocou funkcie analýzy zmien, uložte ju ako šablónu rastrovej funkcie a so šablónou spustite Analýzu rastra.</div><br><div> Parameter <strong>Typ zmeny</strong> indikuje informácie, ktoré sú generované. Informácie sú extrahované z rastra analýzy zmien. Pri spustení tejto funkcie na výstupe z funkcie/nástroja CCDC si môžete vybrať z nasledujúcich možností: </div><ul><li><strong>Čas poslednej zmeny</strong>-- Najnovší dátum a čas, kedy bol pixel označený ako zmenený. </li><li><strong>Čas najskoršej zmeny</strong>-- Najskorší dátum a čas, kedy bol pixel označený ako zmenený.</li><li><strong>Čas najväčšej zmeny</strong>-- Dátum a čas, kedy bola vypočítaná zmena pre pixel najvýraznejšia.</li><li> <strong>Počet zmien</strong> - Celkový počet zmien pixelu. </li></ul><div>Pri spustení tejto funkcie sú na výstupe z funkcie/nástroja LandTrendr k dispozícii nasledujúce doplňujúce možnosti: </div><ul><li><strong>Čas najdlhšej zmeny</strong>-- Dátum, kedy bol pixel označený ako zmenený na začiatku alebo na konci najdlhšej periódy zmeny.</li><li><strong> Čas najkratšej zmeny</strong>-- Dátum, kedy bol pixel označený ako zmenený na začiatku alebo na konci najkratšej periódy zmeny.</li><li><strong>Čas najrýchlejšej zmeny</strong>-- Dátum, kedy bol pixel označený ako zmenený na začiatku alebo na konci najrýchlejšej periódy zmeny.</li><li><strong> Čas najpomalšej zmeny</strong>-- Dátum, kedy bol pixel označený ako zmenený na začiatku alebo na konci najpomalšej periódy zmeny.</li></ul><div> Výstupný raster je viacpásmový raster, v ktorom každé pásmo obsahuje informácie o zmene v závislosti od vybraného typu zmeny a zadaného maximálneho počtu zmien. Napríklad, ak je <strong>Typ zmeny</strong> nastavený na <strong>Čas najskoršej zmeny</strong> a <strong>Maximálny počet zmien</strong> je nastavený na 2, funkcia pre každý pixel vypočíta dva najskoršie dátumy, kedy došlo k zmene v celej časovej sérii. Výsledkom je raster, v ktorom prvé pásmo obsahuje dátumy najskoršej zmeny na pixel a druhé pásmo obsahuje dátumy druhej najskoršej zmeny na pixel.</div><br><div>Pri použití tejto funkcie na výstup z nástrojov LandTrendr môžete pomocou parametra <strong>Dátum segmentu</strong> zvoliť, či chcete extrahovať dátum, ktorý označuje začiatok zmeny alebo koniec zmeny. Napríklad, pre pochopenie ako začala posledná zmena v časovej sérii nastavte <strong>Typ zmeny</strong> na <strong>Čas poslednej zmeny</strong> a <strong>Dátum segmentu</strong> na <strong>Začiatok segmentu</strong>. </div><br><div>Pomocou nasledujúcich parametrov filtrovania extrahujte z analýzy zmien konkrétnejšie dátumy z rastra analýzy zmien:</div><ul><li><strong>Filtrovať podľa roku</strong>--Identifikujte zmeny, ktoré nastali v konkrétnom časovom období, napríklad ak hľadáte zmeny, ktoré nastali v krajine počas piatich rokov sucha. </li><li><strong>Filter podľa trvania</strong>--Identifikujte zmeny, ktoré nastali v danom rozsahu rokov, napríklad ak hľadáte iba prudké zmeny, ktoré sa udiali v priebehu 1 alebo 2 rokov. Dobu trvania, ktorá vás zaujíma, môžete vypočítať pomocou vzorca <strong>koniec roka - začiatok roka +1</strong>. Medzery v časových radoch budú zahrnuté.</li><li><strong>Filter podľa veľkosti</strong>--Identifikujte zmeny danej veľkosti, napríklad ak hľadáte iba veľké zmeny vegetačného indexu NDVI. Veľkosť je absolútna hodnota, takže minimálna a maximálna hodnota nemôžu byť záporné. Ak chcete určiť zmenu smeru, použite parameter <strong>Smer zmeny</strong>.</li></ul>",
		distanceAccumulationName: "Akumulácia vzdialenosti",
		distanceAccumulationSnip: "Vypočíta akumulovanú vzdialenosť pre každú bunku od zdrojov, umožniac priamu vzdialenosť, nákladovú vzdialenosť, skutočnú povrchovú vzdialenosť, ako aj vertikálne a horizontálne nákladové faktory.",
		distanceAccumulationDesc: "Akumulácia vzdialenosti vypočíta vzdialenosť od každého miesta v študijnej oblasti k najbližšiemu alebo najmenšiemu zdroju. Ak sú pre vstup poskytnuté iba zdroje, potom sa pre každú polohu v študijnej oblasti vypočíta priama vzdialenosť. Ak sa ako vstup použijú zdroje aj bariéry, potom vypočítanie vzdialenosti vypočíta priamu vzdialenosť okolo bariér. Pre zdrojový aj bariérový raster by mala byť hodnota pozadia NoData, zatiaľ čo zdroje a bariéry sú zastúpené platnými hodnotami buniek. K platným hodnotám patrí aj nula. <div><br/>Ak sa ako vstup dodáva povrchový raster, vypočíta sa skutočná povrchová vzdialenosť medzi bunkami. Na vykonanie analýzy nákladov pomocou akumulácie vzdialenosti je potrebný nákladový povrch. Ak je k dispozícii nákladový povrch, výsledkom je raster akumulovanej nákladovej vzdialenosti. Ak sa poskytujú horizontálne a vertikálne faktory, potom sa smerovosť považuje za akumulované náklady. K dispozícii sú štyri charakteristiky zdroja. Tieto vlastnosti, ktoré môžu byť buď zo zdroja alebo z pohybu zdroja, sa riadia osobitnými parametrami: 1. Počiatočná akumulácia: nastaví počiatočné náklady pred začatím presunu 2. Maximálna akumulácia: Špecifikuje, koľko nákladov sa zdroj môže akumulovať pred dosiahnutím svojho limitu. 3. Multiplikátor, ktorý sa použije na náklady: určuje spôsob cesty alebo veľkosť zdroja. 4. Smer jazdy: identifikuje, či pohyb začína pri zdroji a presúva sa na iné ako zdrojové miesta, alebo či začína na iných ako zdrojových miestach a vracia sa späť k zdroju.<div><br/>V predvolenom nastavení je výsledkom Akumulácie vzdialenosti jedno pásmo, čo je raster akumulácie vzdialenosti. Môže sa však tiež vytvoriť druhé pásmo, pásmo spätného smeru. Toto pásmo udáva z každého miesta v študijnej oblasti, akým smerom sa má ísť k najmenšiemu zdroju nákladov. Obe pásma budú potrebné na určenie optimálnych ciest v študijnej oblasti. Ak chcete vygenerovať cestu, najskôr použite funkciu extrakčného pásma na extrahovanie rastra akumulácie vzdialenosti a rastra spätného smeru. Tieto vrstvy použite ako vstup do funkcie Nákladová cesta. Vo funkcii použite raster akumulácie vzdialenosti ako vstup pre raster nákladovej vzdialenosti a raster pre spätný smer ako vstup pre Cost Backlink Raster.</div>",
		distanceAllocationName: "Priradenie vzdialenosti",
		distanceAllocationSnip: "Vypočítava rozdelenie vzdialenosti pre každú bunku poskytnutým zdrojom na základe priamej vzdialenosti, nákladovej vzdialenosti, skutočnej povrchovej vzdialenosti, ako aj vertikálnych a horizontálnych nákladových faktorov.",
		distanceAllocationDesc: "Priradenie vzdialenosti vypočíta, ku ktorému zdroju je každé miesto v študijnej oblasti pridelené. Ak sú pre vstup poskytnuté iba zdroje, potom sú miesta priradené pomocou priamej vzdialenosti k najbližšiemu zdroju. Ak sa ako vstup používajú zdroje aj bariéry, potom funkcia Priradenie vzdialenosti vypočíta priamu vzdialenosť okolo bariér, aby určila, ku ktorému zdroju je miesto pridelené. Pre zdrojový aj bariérový raster by mala byť hodnota pozadia NoData, zatiaľ čo zdroje a bariéry sú zastúpené platnými hodnotami buniek. Platné hodnoty zahŕňajú aj nulu.<div><br/>Na vykonanie analýzy nákladov pomocou rozdelenia vzdialenosti je potrebná nákladová plocha. Ak je k dispozícii nákladová plocha, výsledkom je alokačný raster založený na kumulatívnych nákladoch, nie na priamej vzdialenosti. Ak sa poskytujú horizontálne a vertikálne faktory, potom sa smerovosť považuje za akumulované náklady. Keď sa ako vstup dodáva povrchový raster, potom sa pri určovaní alokácie vypočíta skutočná povrchová vzdialenosť prekonaná pri prechode medzi bunkami. K dispozícii sú štyri charakteristiky zdroja. Tieto vlastnosti, ktoré môžu byť buď zo zdroja alebo z pohybu zo zdroja, sa riadia osobitnými parametrami: 1. Počiatočná akumulácia:  nastaví počiatočné náklady pred začatím presunu. 2. Maximálna akumulácia:   Špecifikuje, koľko nákladov sa zdroj môže akumulovať pred dosiahnutím svojho limitu. 3. Multiplikátor, ktorý sa použije na náklady:  určuje spôsob cesty alebo veľkosť zdroja. 4. Smer jazdy:  identifikuje, či pohyb začína pri zdroji a presúva sa na iné ako zdrojové miesta, alebo či začína na iných ako zdrojových miestach a vracia sa späť k zdroju.<div><br/>V predvolenom nastavení je výsledkom Priradenia vzdialenosti jedno pásmo, čo je raster priradenia vzdialenosti. Zaškrtnutím políčka Boolean vytvoríte zdrojový riadok a stĺpec ako dodatočné pásma vo výstupe, ktorý bude viacpásmovým rastrom skladajúcim sa z troch pásiem. Prvé pásmo je pásmo priradenia vzdialenosti, druhé pásmo obsahuje index riadkov a tretie pásmo obsahuje index stĺpcov. Tieto indexy identifikujú umiestnenie zdrojovej bunky, ktorá je najmenej akumulovaná vzdialenosť nákladov. Index riadka zdroja a index stĺpca zdroja sa môžu spolu použiť na vykonanie mapovania intenzity. Ak zadáte dopyt na akúkoľvek polohu vo vašej študijnej oblasti naprieč pásmami 2 a 3, budete poznať riadok a stĺpec zdroja s najmenšími nákladmi pre danú lokalitu.</div>",
		eucBackDirectionName: "Euklidovský spätný smer",
		eucBackDirectionSnip: "Vypočíta pre každú bunku smer v stupňoch smerom k susednej bunke pozdĺž najkratšej cesty späť k najbližšiemu zdroju, pričom sa vyhýba bariéram.",
		eucBackDirectionDesc: "Funkcia Euklidovský spätný smer vytvorí súvislý raster s pohyblivou desatinnou čiarkou, ktorý predstavuje smer v stupňoch späť k najbližšiemu zdroju a zároveň sa vyhýba bariéram, ak na nejaké narazí.<div><br/>Vstupy do Euklidovského spätného smeru sú zdroje, pre ktoré sa budú smery počítať. Voliteľný vstup je raster, ktorý predstavuje bariéry v študijnej oblasti. Pre zdrojový aj bariérový raster by mala byť hodnota pozadia NoData, zatiaľ čo zdroje a bariéry sú reprezentované platnými hodnotami. Platné hodnoty zahŕňajú nulu. V predvolenom nastavení bude výpočet spracovávaný v kombinovanom rozsahu zdrojov a bariér plus 2 riadky a stĺpce. Ak je analýza potrebná iba v určenej vzdialenosti od zdrojov, možno použiť parameter maximálnej vzdialenosti. Euklidovský spätný smer vo výpočte podporuje planárnu aj geodetickú metódu. Výpočet rovinnej metódy sa vykoná na premietnutej plochej rovine pomocou 2D karteziánskeho súradnicového systému. Výpočet geodetickej metódy sa uskutoční na elipsoide, čo znamená, že bez ohľadu na vstupnú alebo výstupnú projekciu sa výsledky nezmenia.<div><br/>Výsledok funkcie Euklidovský spätný smer sa môže použiť v spojení s výsledkom funkcie Euklidovskej vzdialenosti na určenie najkratších ciest z lokalít v študijnej oblasti späť k zdroju. Výsledok Euklidovského spätného smeru aj výsledok Euklidovskej vzdialenosti sa používajú vo funkcii Nákladová cesta spolu s cieľmi na vygenerovanie najkratších trás.</div>",
		expandName: "Rozbaliť",
		expandSnip: "Expanduje vybrané zóny rastra o zóny o zadaný počet buniek.",
		expandDesc: "Pomocou globálnej funkcie Expandovať môžete generalizovať alebo zjednodušiť rastre zväčšením konkrétnych zón. Môžete tiež určiť mieru generalizácie, ktorá nastane.<div><br/>Vybrané zóny sa zväčšia expandovaním do ďalších zón. Bunky vo vybraných zónach môžu byť považované a bunky popredia, zatiaľ čo ostatné hodnoty zostávajú zónami pozadia. Zóny v popredí sa môžu rozširovať do zón v pozadí.<div><br/>Miera generalizácie sa dá regulovať pomocou parametra Počet buniek. V predvolenom nastavení je táto hodnota 1, čo znamená, že vybrané zóny sa rozšíria o množstvo zodpovedajúce veľkosti jednej bunky. Ak chcete zvýšiť stupeň generalizácie, môžete pre tento parameter zadať väčšiu hodnotu. Z koncepčného hľadiska je to ako spustenie nástroja koľkokrát je zadaná číselná hodnota, pričom výsledky z predchádzajúceho cyklu sú vstupom do nasledujúcej iterácie.</div>",
		trendAnalysisName: "Generovanie trendu",
		trendAnalysisSnip: "Odhaduje trend pre každý pixel pozdĺž dimenzie pre jednu alebo viac premenných vo viacrozmernom rastri.",
		trendAnalysisDesc: "<div>Túto funkciu je možné použiť na prispôsobenie údajov pozdĺž lineárnej, harmonickej alebo polynomiálnej trendovej línie alebo ju možno použiť na vykonanie detekcie trendu pomocou testov Mann-Kendall alebo Seasonal-Kendall.</div><br><div> Výstupný trend rastru vygenerovaný pomocou tejto funkcie sa použije ako vstup do funkcie <strong>Predikovať použitie trendu</strong>. </div><br><div>Testy Mann-Kendall a Seasonal-Kendall sa používajú na zistenie, či v údajoch existuje monotónny trend. Sú neparametrické, čo znamená, že nepredpokladajú konkrétne rozdelenie údajov. Test Mann-Kendall nezohľadňuje sériovú koreláciu ani sezónne vplyvy. Ak sú údaje sezónne, je vhodnejší Seasonal-Kendall test. </div><br><div>Ak sa tento nástroj použije na vykonanie testu Mann-Kendall alebo Seasonal-Kendall, výstupom je nasledovný päťpásmový raster:</div><ul><li>Pásmo 1 = Senov sklon</li><li>Band 2 = p-hodnota</li><li>Pásmo 3 = skóre Mann-Kendall (S)</li><li>Pásmo 4 = S-Variancia</li><li>Pásmo 4 = S-Variancia</li><li>Pásmo 5 = Z-skóre</li></ul><div>Výstupmi z testu Mann-Kendall alebo Seasonal-Kendall možno určiť, ktoré pixely vo vašej viacrozmernej časovej sérii majú štatisticky významný trend. Tieto informácie môžete použiť v spojení s lineárnou, harmonickou alebo polynomickou analýzou trendov na extrakciu významných trendov vo Vašich časových sériách. Môžete vygenerovať masku zahrňujúcu pixely s významnými p-hodnotami, aplikovať masku na viacrozmerný raster a tento maskovaný viacrozmerný raster použiť ako vstup do nástroja na vykonávanie lineárnej, harmonickej alebo polynomickej analýzy trendov.</div><br><div>Existujú tri možnosti na prispôsobenia trendovej línie hodnotám premenných pozdĺž dimenzie: lineárny, polynomický a harmonický.</div><br><div>Pri analýze lineárnych trendov je výstupom nasledovný trojpásmový raster:</div><ul><li>Pásmo 1 = Sklon</li><li>Pásmo 2 = Prerušenie</li><li>Pásmo 3 = Základná stredná kvadratická chyba (RMSE ) alebo chyba okolo línie najlepšieho prispôsobenia.</li></ul><div>Pri analýze polynomiálnych trendov závisí počet pásiem na výstupe od polynomického poradia. Polynomické prispôsobenie druhého rádu vytvorí nasledovný štvorpásmový raster:</div><ul><li>Pásmo 1 = Polynomial_2</li><li>Pásmo 2 = Polynomial_1</li><li>Pásmo 3 = Polynomial_0</li><li>Pásmo 4 = RMSE</li></ul><div>Polynomické prispôsobenie tretieho rádu vytvorí nasledovný päťpásmový raster:</div><ul><li>Pásmo 1 = Polynomial_3</li><li>Pásmo 2 = Polynomial_2</li><li>Pásmo 3 = Polynomial_1</li><li>Pásmo 4 = Polynomial_0</li><li>Pásmo 5 = RMSE</li></ul><div>Pre analýzu harmonických trendov počet pásiem na výstupe závisí od harmonickej frekvencie. Keď je frekvencia nastavená na 1, výstupom bude nasledovný päťpásmový raster:</div><ul><li>Pásmo 1 = Sklon</li><li>Pásmo 2 = Úsek</li><li>Pásmo 3 = Harmonic_sin1</li><li>Pásmo 4 = Harmonic_cos1</li><li>Pásmo 5 = RMSE</li></ul><div> Keď je frekvencia nastavená na 2, výstup bude nasledovný sedempásmový raster:</div><ul><li>Pásmo 1 = Sklon</li><li>Pásmo 2 = Prerušenie</li><li>Pásmo 3 = Harmonic_sin1</li><li>Pásmo 4 = Harmonic_cos1</li><li>Pásmo 5 = Harmonic_sin2</li><li>Pásmo 6 = Harmonic_cos2</li><li>Pásmo 7 = RMSE</li></ul><div>Parameter <strong>Dĺžka cyklu</strong> pre analýzu harmonických trendov sa používa na označenie počtu a dĺžky cyklov, ktoré očakávate vo svojich údajoch počas celého dňa alebo roka. Ak napríklad očakávate, že vaše dáta prejdú dvoma variačnými cyklami v jednom roku, dĺžka cyklu bude 182.5 dňa alebo 0.5 roka. Ak máte údaje o teplote zaznamenávané každé tri hodiny a existuje jeden cyklus zmien za deň, dĺžka cyklu je jeden deň.</div><br><div>Parameter <strong>Frekvencia pre analýzu harmonických trendov</strong> sa používa na popísanie harmonického modelu tak, aby sa prispôsobil údajom. Ak je frekvencia nastavená na 1, na prispôsobenie modelu sa použije kombinácia lineárnej a harmonickej krivky prvého rádu. Ak je frekvencia nastavená na 2, na prispôsobenie údajov sa použije kombinácia lineárnej harmonickej krivky prvého rádu a harmonickej krivky druhého rádu. Ak je frekvencia nastavená na 3, na modelovanie údajov sa použije ďalšia harmonická krivka tretieho rádu atď.</div><br><div>Ako voliteľné výstupy je možné generovať štatistiku zhody modelu. Možno vypočítať a symbolizovať základnú strednú kvadratickú chybu (RMSE), koeficient korelácie a p-hodnotu trendu sklonu. Symbolizujte výstupnú rastrovú vrstvu trendu pomocou symboliky <strong>RGB</strong> a špecifikujte štatistiku ako červené, zelené a modré pásma.</div><br>",
		spectralUnmixingName: "Linear Spectral Unmixing",
		spectralUnmixingSnip: "Vykonáva klasifikáciu subpixelov a vypočíta zlomkovú početnosť rôznych typov pôdneho krytu pre jednotlivé pixely.",
		spectralUnmixingDesc: "Funkcia Linear Spectral Unmixing vypočíta zlomkové pokrytie pre jednotlivé pixely, ktoré obsahujú viacero typov pôdneho krytu. Vytvára viacpásmovú vrstvu, kde každé pásmo zodpovedá zlomkovému množstvu každej triedy pôdneho krytu. Môžete ho napríklad použiť na klasifikáciu pôdneho krytu na multispektrálnej snímke na identifikáciu fotosyntetickej vegetácie, holej pôdy a neživej alebo nefotosyntetickej vegetácie.<div><br/>Poradie výstupného viacpásmového rastra sa riadi poradím vstupného spektrálneho profilu. Počet tried nemôže prekročiť počet pásiem vo vstupnom rastri. Napríklad z 8-pásmového rastra nemôžete extrahovať informácie o viac ako 8 triedach.</div>",
		multidimensionalFilterName: "Viacrozmerný filter",
		interpolateRasterByDimensionFunctionName: "Interpolovať raster podľa dimenzie",
		interpolateRasterByDimensionFunctionSnip: "Interpoluje viacrozmerný raster pri zadaných hodnotách dimenzií pomocou susedných segmentov.",
		interpolateRasterByDimensionFunctionDesc: "<p>Táto funkcia umožňuje odhadnúť hodnoty pixelov pre segment s nedefinovanou dimenziou vo viacrozmernom rastri. Ak máte napríklad dataset obsahujúci teplotu oceánu na úrovni povrchu a v hĺbke 100 metrov pod hladinou mora a chcete odhadnúť teplotu v hĺbke 50 metrov pod hladinou mora, môžete použiť túto funkciu na získanie odhadu v tejto hĺbke pomocou definície dimenzie Podľa hodnôt.</p><p>Mesačný dataset môžete taktiež prevzorkovať na denný dataset pomocou definície dimenzie Podľa intervalu a určením hodnoty parametra Krok ako 1 a hodnoty parametra Jednotka ako Dni.</p><p>Na odhad hodnoty cieľového rastra použite definíciu dimenzie Podľa cieľového rastra.</p>",
		multidimensionalFilterSnip: "Vytvorí rastrovú vrstvu z viacrozmerného rastrového datasetu alebo viacrozmernej rastrovej vrstvy rozdelením údajov pozdĺž definovaných premenných a dimenzií.",
		multidimensionalFilterDesc: "Viacrozmerný filter vytvára viacrozmernú rastrovú vrstvu filtrovaním a extrahovaním podmnožiny premenných z viacrozmerného rastra. Napríklad máte viacrozmerný dataset, ktorý obsahuje 30 rokov mesačných údajov o zrážkach a chcete extrahovať údaje iba za každý január, aby ste zistili, ako sa zrážky zmenili pre daný mesiac.<div><br/>Pomocou parametra Definícia dimenzií môžete rozdeliť rozmer pomocou intervalu, hodnoty alebo rozsahu hodnôt. Napríklad, ak máte 10 rokov údajov o slanosti oceánov zhromažďovaných mesačne a v hĺbke 2 metre do 500 metrov, môžete použiť rôzne možnosti definície dimenzií pre nasledujúce scenáre. Scenár 1: Extrahujte údaje o salinite za január za desaťročné obdobie. Vyberte Podľa hodnoty, nastavte Dimenzia na StdTime a Hodnoty na január. Scenár 2: Údaje o slanosti v rozsahu hĺbky od 0 do 150 metrov. Vyberte možnosť Podľa rozsahov, nastavte položku Dimenzia na StdZ a minimálnu hodnotu nastavte na hodnotu -150 a maximálnu hodnotu na hodnotu 0. Scenár 3: Extrahujte údaje o slanosti za prvých 10 dní každého januára za obdobie 10 rokov. Vyberte Podľa iterácie, nastavte Dimenziu na StdTime, nastavte Začiatok a Koniec prvej iterácie na zodpovedajúci začiatok a koniec iteračného obdobia, nastavte Krok na 1 a nastavte Jednotku na roky.</div>",
		multidimensionalRasterName: "Viacrozmerný raster",
		multidimensionalRasterSnip: "Pridáva do mapy viacrozmerné údaje ako viacrozmernú rastrovú vrstvu.",
		multidimensionalRasterDesc: "Funkcia Viacrozmerný raster pridá viacrozmerné údaje do mapy ako viacrozmernú rastrovú vrstvu. Táto funkcia je užitočná pri vykonávaní pracovných postupov analýzy rastrov pomocou funkčného reťazca.<div><br/>Podporované viacrozmerné rastrové datasety zahŕňajú netCDF, GRIB, HDF a Esri CRF. Podporované sú aj viacrozmerné mozaikové datasety.</div>",
		optimalPathAsRasterName: "Optimálna cesta podľa rastra",
		optimalPathAsRasterSnip: "Vypočíta cestu s najmenšími nákladmi od zdroja k cieľu.",
		optimalPathAsRasterDesc: "Táto globálna funkcia vytvára výstupný raster, ktorý zaznamenáva optimálnu cestu alebo cesty z vybraných lokalít k najbližšej zdrojovej bunke definovanej v rámci akumulačnej nákladovej plochy z hľadiska vzdialenosti nákladov.<div><br/>Vo všeobecnosti sa vyžaduje, aby sa jedna alebo viac vážených nákladových funkcií (Akumulácia vzdialenosti alebo Priradenie vzdialenosti) spustila pred spustením funkcie Optimálna cesta podľa rastra, aby sa vytvorila akumulácia vstupnej vzdialenosti a rastre spätného smeru. Toto sú povinné vstupné rastrové vrstvy pre funkciu Optimálna cesta. Hodnoty na výstupnej optimálnej ceste predstavujú počet ciest v danej lokalite. V mnohých prípadoch cesty nasledujú po tej istej trase, pričom zanechávajú zdroj a potom sa rozchádzajú a idú do rôznych cieľov. Hodnota jedna napríklad indikuje, že na danej lokalite existuje iba jedna optimálna cesta, zatiaľ čo hodnota 5 znamená, že na tejto lokalite prechádza touto bunkou v študijnej oblasti päť optimálnych ciest.<div><br/>Vstupnými cieľovými údajmi musia byť rastrové vrstvy. Sada cieľových buniek pozostáva zo všetkých buniek vo vstupnom rastri, ktoré majú platné hodnoty. Bunky, ktoré majú hodnoty NoData, nie sú zahrnuté v sade. Hodnota nula sa považuje za legitímny cieľ. Cieľový raster sa dá vytvoriť pomocou nástrojov na extrakciu. Ak máte cieľové alebo zdrojové prvky, môžete ich pomocou funkcie Rasterizovať konvertovať na raster. Ako rastrový vstup do funkcie rasterizácie použite akumuláciu vzdialenosti alebo raster spätného smeru. Tým sa zabezpečí, že prvok sa rasterizuje pomocou rovnakej veľkosti bunky, rozsahu a priestorovej referencie ako ostatné rastre použité vo funkcii Optimálna cesta podľa rastra. Funkcia Optimálna cesta podľa rastra sa dá tiež použiť na odvodenie cesty najmenšieho odporu digitálnym výškovým modelom (DEM). V takom prípade použite DEM pre rastrový akumulátor vstupnej vzdialenosti a výstup z funkcie Smeru toku pre raster spätného smeru.</div>",
		trendName: "Predpovedať pomocou trendu",
		trendSnip: "Vypočíta predpovedanú viacrozmernú rastrovú vrstvu pomocou rastra výstupného trendu z funkcie Generovať trend alebo nástroja geoprocessingu Generovať Trend rastra.",
		trendDesc: "Funkcia Predpovedať pomocou trendu vypočítava predpovedanú viacrozmernú rastrovú vrstvu pomocou rastra výstupného trendu z funkcie Generovať Trend alebo z nástroja geoprocessingu Generovať Trend rastra.",
		rasterCollectionName: "Spracovať kolekciu rastrov",
		rasterCollectionSnip: "Spracováva každý rez vo viacrozmernom rastri alebo každej položke v mozaikovom rastri. Táto funkcia môže tiež spojiť viac rezov do jedného rezu.",
		rasterCollectionDesc: "Funkcia Spracovať kolekciu rastrov spracováva každý rez vo viacrozmernom rastri alebo každú položku v mozaikovom rastri. Táto funkcia môže tiež agregovať viac rezov do jedného rezu.<div><br/>Táto funkcia spracováva každý rez vo viacrozmernom rastri alebo mozaikovom rastri pomocou šablóny rastrovej funkcie. Táto funkcia podporuje nasledujúce možnosti: 1. Zadajte šablónu rastrovej funkcie pre položku Funkcia. Napríklad máte mozaikový dataset, ktorý obsahuje 20 rokov snímok Landsat a chcete vypočítať NDVI pre každú scénu v časovej rade. Pre položku Funkcia zadajte šablónu rastrovej funkcie, ktorá obsahuje rastrovú funkciu NDVI. 2. Zadajte šablónu rastrovej funkcie pre funkciu Agregácie. Napríklad máte viacrozmerný raster, ktorý obsahuje 10 rokov denných údajov o teplote a chcete vypočítať maximálnu teplotu pre každý rok. Vo funkcii Agregácie zadajte šablónu rastrovej funkcie, ktorá obsahuje funkciu Štatistika buniek, s operáciou nastavenou na maximum. V časti Definícia agregácie nastavte Dimenzia na StdTime, Typ na Interval kľúčových slov a Interval kľúčových slov nastavte na Ročný. Pozor, ak vstupný mozaikový dataset nie je viacrozmerný, funkcia agregácie nebude rešpektovať definíciu agregácie. Agregačná funkcia agreguje všetky položky alebo každú skupinu do jednej, ak sú definované v šablóne agregačnej funkcie. Ďalšie informácie o používaní skupín v mozaikovom datasete nájdete v časti Používanie položiek mozaikového datasetu v Šablónach rastrových funkcií. 3. Zadajte šablónu rastrovej funkcie pre funkciu spracovania. Funkcia alebo reťazec funkcií v tejto šablóne sa používa na zobrazenie nového spracovaného rastra. Napríklad, špecifikujte šablónu rastrovej funkcie, ktorá obsahuje funkciu Paleta farieb, aby ste zmenili spôsob zobrazenia spracovanej rastrovej vrstvy. Upozorňujeme, že ak je vstupom viacrozmerný raster, na aktuálny segment displeja sa použije funkcia spracovania. Ak je vstupom mozaiková vrstva alebo mozaikový dataset, funkcia spracovania sa použije na mozaikový raster pomocou prvej metódy na riešenie prekrytí. 3. Zadajte šablóny pre ľubovoľnú kombináciu týchto troch funkcií. Máte napríklad mozaikový dataset, ktorý obsahuje snímky série Landsat a chcete vygenerovať kompozitnú snímku maxím NDVI. Pre položku Funkcia zadajte šablónu rastrovej funkcie, ktorá obsahuje rastrovú funkciu NDVI. Pre funkciu agregácie zadajte šablónu rastrovej funkcie, ktorá obsahuje funkciu Štatistika buniek, s prevádzkou nastavenou na maximum. Pre funkciu spracovania zadajte šablónu rastrovej funkcie, ktorá obsahuje funkciu Paleta farieb. Upozorňujeme, že poradie spracovania funkcií sa riadi poradím vstupných parametrov. Napríklad funkcia Položky bude spracovaná ako prvá.</div>",
		randomName: "Náhodné",
		randomSnip: "Vytvorí raster s náhodnými hodnotami pixelov, ktoré sú vykreslené z pseudonáhodného rozdelenia. Podporovaných je niekoľko rozdelení a generátorov náhodných čísel.",
		randomDesc: "Funkcia Náhodné vytvára raster s náhodnými hodnotami pixelov, ktoré je možné použiť v šablónach rastrových funkcií alebo v mozaikových datasetoch.<div><br/>Zatiaľ čo veľa funkcií pracuje na jednom alebo viacerých vstupných rastroch, funkcia Náhodné nevyžaduje vstupný raster. To znamená, že sa správa skôr ako rastrový dataset, než ako funkcia, takže pri jeho pridávaní alebo odstraňovaní z funkčného reťazca je potrebné venovať osobitnú pozornosť.</div>",
		shrinkName: "Zmenšiť",
		shrinkSnip: "Zmenšuje vybrané zóny o určený počet buniek tak, že sa nahradia hodnotou bunky, ktorá je najčastejšia v okolí.",
		shrinkDesc: "Pomocou globálnej funkcie Zmenšiť môžete generalizovať alebo zjednodušiť rastre zmenšením konkrétnych zón. Môžete tiež ovládať mieru generalizíácie.<div><br/>Vybrané zóny sa zmenšia alebo zmenia svoju veľkosť tým, že sa do nich rozšíria bunky z okolitých zón. Bunky v popredných zónach môžu byť nahradené bunkami, zatiaľ čo ostatné hodnoty zostávajú zónami pozadia. Z koncepčného hľadiska je možné vybrané hodnoty zón pozadia zobraziť ako zóny popredia. Rovnako môžu byť nahradené tenké ostrovy vo vnútri zóny, ktoré možno považovať za spoločné hranice so zónou.<div><br/>Miera generalizácie sa dá ovládať pomocou parametra Počet buniek. V predvolenom nastavení je táto hodnota 1, čo znamená, že vybraté zóny sa zmenšia o množstvo zodpovedajúce veľkosti jednej bunky. Ak chcete zvýšiť stupeň generalizácie, môžete pre tento parameter zadať väčšiu hodnotu. Z koncepčného hľadiska ide o opakované spustenie nástroja podľa zadaného čísla, pričom výsledky z predchádzajúceho cyklu sú vstupom do nasledujúcej iterácie.</div>",
		trendToRGBName: "Trend k RGB",
		trendToRGBSnip: "Konvertuje trendový raster na trojpásmový (červený, zelený a modrý) raster.",
		trendToRGBDesc: "Funkcia Trend k RGB prevádza trendový raster na trojpásmový (červený, zelený a modrý) raster. Trend rastra sa generuje z rastrovej funkcie Generovať trend alebo z rastrovej funkcie Analýza CCDC.<div><br/>Táto funkcia je užitočná na vizualizáciu údajov koeficientov modelu z funkcie Generovať trend alebo funkcie CCDC Analýza. Obe funkcie odhadujú trendy v zmene hodnôt pixelov, ale výsledky funkcií je ťažké priamo interpretovať.<div><br/>Rovnako ako pri mnohých rastrových funkciách, budete možno musieť použiť Nastavenie dynamického rozsahu (DRA), aby ste lepšie zobrazili výsledky danej funkcie.</div>",
		landTrendrName: "Analýza LandTrendr",
		landTrendrSnip: "Vyhodnocuje zmeny v hodnotách pixelov v priebehu času pomocou metódy detekcie trendov narušenia a zotavenia (LandTrendr) založenej na platforme Landsat a generuje raster analýzy zmien obsahujúci výsledky modelu.",
		landTrendrDesc: "Túto rastrovú funkciu je možné použiť iba ako vstup do funkcie Zistiť zmenu pomocou analýzy zmien rastra. Ak chcete vygenerovať rastrový výstup, pripojte funkciu Analýza LandTrendr k funkcii Zistiť zmenu pomocou funkcie analýzy zmien v šablóne rastrovej funkcie a šablónu použite ako vstup v geoprocesnom nástroji na Generovanie rastra. Výsledkom je raster, ktorý obsahuje informácie o čase, v ktorom sa hodnoty pixelov zmenili.<div><br>Účelom tejto rastrovej funkcie je extrahovať zmeny pozorovaného prvku tak, že vstupné viacrozmerné snímky by mali ideálne zachytávať konzistentné pozorovanie v priebehu času a nemali by obsahovať interferencie snímača, mraky alebo zatienenie oblačnosti. Osvedčeným postupom je použiť údaje, ktoré boli normalizované a je možné ich maskovať pomocou pásma QA, napríklad produktom Odrazivosť povrchu Landsat Collection 1 s maskovaním mrakov.<div><br>Funkcia vykonáva analýzu na jednej snímke za rok a počet ročných segmentov musí byť rovnaký alebo väčší ako hodnota uvedená v parametri <strong>Minimálny počet pozorovaní</strong>. Odporúča sa, aby ste mali údaje najmenej za šesť rokov.<div><br> Ak máte mesačné, týždenné alebo denné údaje, odporúča sa vybrať niekoľko snímok z každého roku (najlepšie z tej istej sezóny), odstrániť mraky a zatienenie oblačnosti a skombinovať snímky pre vygenerovanie jednej snímky, ktorá vhodne zachytí pozorovanie. Ak sa ako vstupný viacrozmerný raster použijú mesačné, týždenné alebo denné údaje, funkcia identifikuje jeden segment na analýzu na základe dátumu najbližšieho k dátumu uvedenému v parametri <strong>Dátum zachytenia</strong>. <div><br>Prvkom v krajine bude často trvať nejaký čas zotavenie sa z nestálej zmeny, napríklad lesného požiaru alebo napadnutia škodcami. Pre nastavenie rýchlosti zotavenia rozpoznanej modelom, nastavte parameter Prahová hodnota zotavenia. Samostatný segment nemôže mať mieru zotavenia, ktorá je rýchlejšia ako 1/prahová hodnota zotavenia.<div><br>Zotavenie sa zo zmeny v krajine sa môže vyskytnúť v pozitívnom alebo negatívnom smere. Keď napríklad krajina zaznamenala úbytok lesa, časová séria hodnôt vegetačného indexu ukazuje pokles hodnôt indexu a zotavenie ukazuje postupné zvyšovanie hodnôt vegetačného indexu alebo pozitívny trend zotavenia. Určite smer trendu zotavenia pomocou parametra <strong>Zotavenie má zvyšujúci sa trend</strong>.",
		aggregateMultidimensionalName: "Agregovať viacrozmerné",
		aggregateMultidimensionalSnip: "Kombinuje existujúce údaje viacrozmerných rastrových premenných pozdĺž dimenzie.",
		aggregateMultidimensionalDesc: "Funkcia Agregovať viacrozmerné vytvára viacrozmernú rastrovú vrstvu kombináciou existujúcich viacrozmerných premenných dát rastra v rámci dimenzie.<div><br>Použite parameter <strong>Definícia Dimenzie</strong>, aby ste najprv filtrovali vstupné dáta, ktoré chcete agregovať. Napríklad ak máte 30 rokov mesačných dát, ale chcete vytvoriť agregovanú vrstvu iba za prvých 15 rokov, môžete pomocou parametra <strong>Definícia dimenzie</strong> určiť roky, ktoré sa majú zahrnúť do analýzy.<div><br><ul><li>Extrahujte dáta o slanosti za mesiac január počas 10-ročného obdobia. Vyberte možnosť <strong>Podľa hodnôt</strong>, nastavte <strong>Dimenziu</strong> na <strong>Štandardný čas (StdTime)</strong> a <strong>Hodnoty</strong> na <strong>Január</strong>.</li><li>Dáta o slanosti segmentujte podľa hĺbkového rozsahu od 0 do 150 metrov. Vyberte možnosť <strong>Podľa rozsahov</strong>, nastavte <strong>Dimenziu</strong> na <strong>Štandardizované (StdZ)</strong>, ďalej nastavte <strong>Minimálnu hodnotu</strong> na <strong>-150</strong> a <strong>Maximálnu hodnotu</strong> na <strong>0</strong>.</li><li>Extrahujte dáta o slanosti počas prvých 10 dní každého januára počas 10-ročného obdobia. Vyberte <strong>Podľa iterácie</strong>, nastavte <strong>Dimenziu</strong> na <strong>Štandardný čas (StdTime)</strong>, nastavte <strong>Začiatok prvej iterácie</strong> a <strong>Koniec prvej iterácie</strong> na zodpovedajúci začiatok a koniec iteračného obdobia, nastavte <strong>Krok</strong> na <strong>1</strong> a <strong>Jednotku</strong> na <strong>Roky</strong>.</li></ul><div><br>Pomocou parametrov <strong>Definície agregácie</strong> vyberte dimenziu, ktorá sa má vyhodnotiť a interval agregácie pomocou kľúčového slova, hodnoty alebo rozsahu hodnôt. Ak máte napríklad 30 ročné údaje o povrchovej teplote mora, ktoré sa zhromažďovali denne v hĺbke 5 až 100 metrov, môžete použiť rôzne možnosti intervalov pre nasledujúce scenáre:<div><br><ul><li>Agregujte údaje dennej teploty do mesačných údajov, ktorých výsledkom je viacrozmerný raster s 12 časovými segmentami a každý segment je agregátom každého mesiaca za všetky roky. Vyberte <strong>Intervalové kľúčové slovo</strong> a nastavte kľúčové slovo na <strong>Opakujúce sa mesačne</strong>.</li><li>Agregujte dáta o dennej teplote do mesačných dát, ktorých výsledkom je viacrozmerný raster s 360 segmentami alebo 12 časovými segmentami za rok (30 rokov x 12 mesiacov = 360 segmentov). Vyberte <strong>Intervalové kľúčové slovo</strong> a nastavte kľúčové slovo na <strong>Mesačne</strong>.</li><li>Agregujte dáta o mesačnej teplote do 4-mesačných intervalov. Vyberte <strong>Hodnotu intervalu</strong>, nastavte <strong>Interval hodnoty</strong> na 4 a nastavte <strong>Jednotku</strong> na <strong>Mesiace</strong>.</li><li>Agregujte dáta o teplote od 0 do 25 metrov, potom od 25 do 50 metrov a následne od 50 do 100 metrov. Vyberte <strong>Rozsahy intervalu</strong> a zadajte minimálnu a maximálnu hĺbku ako<strong> 0 25; 25 50; 50 100</strong>.</li></ul>",
		mergeRastersName: "Zlúčiť rastre",
		mergeRastersSnip: "Kombinuje niekoľko rastrových datasetov priestorovo alebo naprieč premennými a dimenziami.",
		mergeRastersDesc: "Táto funkcia vytvorí zo zoznamu rastrov zlúčený raster. Napríklad, ak máte mozaikový dataset, ktorý obsahuje 30 rokov mesačných údajov o zrážkach a ďalší dataset s 10-ročnými údajmi o mesačných teplotách, môžete ich skombinovať do viacrozmerného rastra s oboma premennými. <div><br>Ak vstupné viacrozmerné rastre obsahujú rôzne premenné, výstupný viacrozmerný raster bude obsahovať všetky premenné. <div><br>Ak vstupné viacrozmerné rastre obsahujú rôzne dimenzie alebo hodnoty dimenzií, výstupný viacrozmerný raster bude obsahovať všetky dimenzie a hodnoty dimenzií. <div><br>Ak vstupné viacrozmerné rastre obsahujú rovnaké dimenzie a premenné, ale rôzne priestorové rozsahy, výstupný viacrozmerný raster bude obsahovať premenné a dimenzie pozdĺž zlúčených priestorových rozsahov.<div><br>Túto funkciu je možné použiť aj v prípade, že máte viac rastrov, s ktorými chcete pracovať ako s jednou položkou - napríklad výpočet rovnakých štatistík alebo pre vyváženie farieb, aby ste nemuseli vyvažovať každú snímku osobitne. Toto je užitočné pri práci so snímkami uloženými formou samostatných dlaždíc z dôvodu obmedzení veľkosti súboru; takto budú dlaždice považované za súčasť jedinej snímky.",
		boundaryCleanName: "Čistenie obrysov",
		boundaryCleanSnip: "Vyhladzuje obrysy medzi zónami.",
		boundaryCleanDesc: "<p>Funkcia generalizuje alebo zjednodušuje rastre vyhladzovaním obrysov medzi zónami. Táto funkcia poskytuje možnosti pre ovládanie, ako bunky zón vo vstupe ovplyvnia vyhladenie a úroveň vyhladenia. Každá vstupná bunka sa vyhodnocuje pomocou jej ôsmich bezprostredných susedov.</p><p> Proces vyhladzovania najskôr zoraďuje susedné bunky podľa konkrétnej priority. Priorita určuje, ktorá zóna zo susedných buniek môže nahradiť hodnotu spracovávanej bunky vo výstupe.</p><p>Priorita môže byť založená buď na hodnote alebo veľkosti zón. Parameter <strong>Typ zoradenia</strong> určuje typ zoradenia, ktorý sa použije. </p><p>Predvolené nastavenie <strong>Nezoraďovať</strong> hodnotí prioritu na základe hodnoty zón. Bunky zo zón s väčšími hodnotami budú mať vyššiu prioritu pre expandovanie do zón s menšími hodnotami.</p><p>Na zoradenie priority je možné použiť veľkosť alebo celkovú plochu zón. Pri nastavení <strong>Zostupne</strong> sú zóny zoradené podľa veľkosti v zostupnom poradí. Zóny s väčšími celkovými plochami budú mať prioritu expandovať do zón s menšími plochami. Pri nastavení <strong>Vzostupne</strong> to platí naopak: zóny s menšími celkovými plochami budú mať prioritu expandovať do zón s väčšími celkovými plochami.</p><p>Miera vyhladenia je ovládaná parametrom <strong>Spustiť expandovanie a dvakrát zmenšiť</strong>, ktorý určuje počet opakovaní koľkokrát sa vykoná proces expandovania a zmenšenia.</p><p>Pri nezaškrtnutom nastavení sa proces expandovania a zmenšenia vykoná raz. Pri zaškrtnutom nastavení sa proces expandovania a zmenšenia vykoná dvakrát, čo vedie k ďalšiemu stupňu vyhladenia obrysov zón.</p><p>Ak sú hodnoty všetkých ôsmich susedných buniek rovnaké ako bunka na spracovanie, výstupná bunka si zachová hodnotu vstupnej bunky.</p>",
		predictUsingRegressionName: "Predikovať pomocou regresie",
		predictUsingRegressionSnip: "Vypočíta predikovaný raster na základe vstupu rastrových dát a modelu regresie. Model regresie je výstup z rastrového geoprocesného nástroja <strong>Trénovací model regresie náhodných stromov</strong>.",
		predictUsingRegressionDesc: "<p>Model regresie je definovaný ako Esri regresná definícia (.ecd) Obsahuje všetky informácie pre špecifický dataset alebo sadu datasetov a regresnom modeli a je generovaný pomocou nástroja <strong>Trénovací model regresie náhodných stromov</strong>.</p><p>Vstup môže byť jednopásmový, viacpásmový alebo viacrozmerný raster, alebo zoznam týchto typov. Typy vstupných rastrov musia byť rovnakého typu ako raster použitý pri trénovaní modelu regresie.</p><ul><li>Keď je vstup viacpásmový raster, každé pásmo je považované za premennú prediktora. Pásma musia byť v rovnakom poradí ako multipásmový vstup pre nástroj trénovania regresného modelu.</li><li>Keď je vstup viacpásmový raster, každá premenná je považovaná za premennú prediktora a táto premenná musí byť jednopásmová a mať časovú dimenziu. Poradie a názvy premenných musia byť rovnaké ako vstup použitý pri trénovaní modelu regresie. Výstup je multirozmerný raster.</li><li>Vstup môže byť zoznam položiek. Počet a poradie položiek musia byť rovnaké ako vstup použitý pri trénovaní modelu regresie.</li></ul>",
		dimensionalMovingStatisticsName: "Štatistika pohybu dimenzie",
		dimensionalMovingStatisticsSnip: "Vypočíta štatistiku v pohyblivom okne na viacrozmerných dátach pozdĺž zadanej dimenzie.",
		dimensionalMovingStatisticsDesc: "<p>Funkcia Štatistika pohybu dimenzií vypočíta rôzne štatistiky v rámci vopred definovaného okna pre všetky hodnoty pozdĺž dimenzie. Táto funkcia vezme viacrozmernú rastrovú vrstvu ako vstup a ako výstup vytvorí viacrozmernú rastrovú vrstvu, ktorá má rovnakú veľkosť dimenzie ako vstupná vrstva.</p><p>Môžete určiť dimenziu, ktorej hodnoty sa pri výpočte zohľadnia. Predvolene sa počíta pozdĺž prvej nepriestorovej dimenzie. Veľkosť okna môžete určiť aj zadaním parametrov Okno vzad a Okno vpredu.</p><p>Keď je typ štatistiky nastavený na Percentil, sprístupnia sa parametre Hodnota percentilu a Typ interpolácie percentilu. Pomocou týchto parametrov môžete určiť percentil, ktorý sa má vypočítať a vybrať typ interpolácie, ktorý sa má použiť. Keď je typ štatistiky nastavený na hodnotu Kruhový priemer, je k dispozícii parameter Cirkulárna hodnota zaobalenia. Cirkulárna hodnota zaobalenia je použitá na konvertovanie lineárnej hodnoty na rozsah daného kruhového priemeru.</p>",
		terrainFlattenFunctionName: "Vyrovnať terén",
		terrainFlattenFunctionSnip: "Opravuje vstupné dáta z synthetic aperture radar (SAR) pre rádiometrické skreslenia spôsobené topografiou.",
		terrainFlattenFunctionDesc: "<p>Rastrová funkcia Vyrovnať terén koriguje vstupné dáta z synthetic aperture radar (SAR) pre rádiometrické skreslenia spôsobené topografiou.</p><p>Vstupné radarové dáta musia byť najskôr kalibrované na beta nulu. Použite nástroj Aplikovať rádiometrickú kalibráciu na kalibráciu radarových dát na beta nulu.</p><p>Ak vstupný DEM nepokrýva celý SAR dataset, nástroj zapíše do výstupu hodnoty NoData pre pixely mimo rozsahu DEM pre gama nulu, sigma nulu, rozptylovú oblasť a výstupy geometrického skreslenia. Pre výstupnú masku geometrického skreslenia vygeneruje nástroj neurčené hodnoty pre pixely mimo rozsahu DEM.</p><p>Vstupný DEM musí byť v geografickom súradnicovom systéme WGS 1984 (EPSG:4326).</p>",
		createColorCompositeFunctionName: "Vytvoriť farebnú kompozíciu",
		createColorCompositeFunctionSnip: "Vytvorí trojpásmový raster z viacpásmového rastrového datasetu, v ktorom každé pásmo môže použiť algebraický výpočet založený na pásmovej algebre.",
		createColorCompositeFunctionDesc: "<p>Rastrová funkcia Vytvoriť farebnú kompozíciu vytvorí trojpásmový raster z viacpásmového rastrového datasetu, v ktorom môže každé pásmo použiť algebraický výpočet založený na pásmovej algebre.</p><p>Pri definovaní pásmového aritmetického algoritmu môžete pre každý výraz zadať jednoriadkový algebraický vzorec na vytvorenie viacpásmového výstupu. Podporované operátory sú jednočlenné, plus (+), mínus (-), násobenie (*) a delenie (/).</p><p>Pri použití ID pásma vo výraze identifikujte pásmo predponou B alebo b pred číslom pásma.</p><p>Bežná kombinácia pásiem pre synthetic aperture radar (SAR) v lineárnych jednotkách je VV pre červenú, VH pre zelenú a VV/VH pre modrú. Ak sú vstupné dáta v decibeloch, kombinácia pásma by mala byť VV pre červenú, VH pre zelenú a VV-VH pre modrú.</p>",
		surfaceParametersName: "Parametre povrchu",
		surfaceParametersSnip: "Určuje parametre rastra povrchu, ako je orientácia na svetové strany, sklon a niekoľko typov zakrivenia pomocou geodetických metód.",
		surfaceParametersDesc: "<p>Funkcia Parametre povrchu určuje parametre rastra povrchu, ako je orientácia na svetové strany, sklon a niekoľko typov zakrivenia pomocou geodetických metód.</p><p>Túto funkciu možno použiť na nasledujúce aplikácie:</p><ul><li>Výpočet orientácie na svetové strany a sklonu pomocou geodetických metód.</li><li>Výpočet rôznych typov zakrivenia zo vstupného rastra povrchu, napríklad <strong>tangenciálne (normálová vrstevnica) zakrivenie, </strong>ktoré charakterizuje topografickú konvergenciu a divergenciu prúdenia cez povrch.</li></ul>",
		leastCostCorridorName: "Koridor najnižších nákladov",
		leastCostCorridorSnip: "Vypočíta súčet dvoch rastrov kumulatívnych nákladových vzdialeností s možnosťou použiť prah na základe percentuálnych alebo kumulatívnych nákladov.",
		leastCostCorridorDesc: "<p>Vstupnými rastrami by mali byť rastre akumulácie vzdialenosti a rastre spätného smeru vychádzajúce z funkcie <strong>Akumulácie vzdialeností</strong> alebo <strong>Alokácie vzdialeností</strong>. Tieto by mali byť založené na nákladovej vzdialenosti a pri vytváraní vrstiev pre každý zdroj by sa mali použiť rovnaké nastavenia parametrov. Pri vytváraní týchto rastrov by sa nemali používať žiadne parametre, ktoré závisia od smeru (horizontálny faktor, vertikálny faktor a smer pohybu).</p><p>Hodnoty vo výstupnom rastri koridoru sú súčtom kumulatívnych nákladov na dosiahnutie danej lokality s rovnakými jednotkami ako vstupné rastre kumulatívnych nákladových vzdialeností.</p><p>Ak je zadaná <strong>Prahová</strong> hodnota väčšia ako maximálne kumulatívne náklady pri sčítaní dvoch rastrov kumulatívnych vzdialeností, výstupný koridorový raster bude pokrývať rovnakú oblasť ako vstupné kumulatívne rastre.</p><p>Ak je zadaná prahová hodnota menšia ako minimálna hodnota v koridorovom rastri, vráti sa správa s varovaním a výstupný raster bude prázdny.</p><p>Výstupný koridorový raster môže obsahovať bunky s mierne vyššími kumulatívnymi nákladmi, ako je prahová hodnota. Toto je zo spätných smerových rastrov s použitím buniek, ktorým boli priradené mierne vyššie náklady ako prahová hodnota na pripojenie odpojených buniek ku koridoru.</p>",
		geometricMedianName: "Geometrický medián",
		geometricMedianSnip: "Funkcia Geometrický medián vypočíta geometrický medián naprieč pixelmi v časovom rade viacpásmových snímok.",
		geometricMedianDesc: "<p>Táto funkcia znižuje šum a odľahlé hodnoty v časových sériách snímok výpočtom geometrického mediánu pixelov pre každé pixelové pole v celom zásobníku snímok. Algoritmus zachováva spektrálne vzťahy medzi pásmami v spektrách pixelov, takže výstup možno použiť pri analýze napríklad pri indexoch vegetácie.</p><p>Pred použitím tejto funkcie by sa mali maskovať mraky a tiene pomocou QA pásma datasetu.</p><p>Ak je vstupná snímka s pohyblivou desatinnou čiarkou, napríklad odrazivosť povrchu s hodnotami medzi 0 a 1, hodnota epsilon 0,001 by mala poskytnúť kvalitné výsledky.</p>"
	},
	rfxArgs: {
		rasterName: "Raster",
		colorSchemeTypeName: "Typ farebnej palety",
		colormapName: "Farebná mapa",
		colormapNameName: "Názov farebnej mapy",
		colorRampName: "Farebná rampa",
		contrastOffsetName: "Offset kontrastu",
		brightnessOffsetName: "Offset jasu",
		methodName: "Metóda",
		bandNamesName: "Názvy pásiem",
		bandWavelengthsName: "Vlnové dĺžky pásiem",
		bandIdsName: "ID pásiem",
		missingBandActionName: "Akcia pri chýbajúcom pásme",
		conversionParametersName: "Parametre konverzie",
		hillshadeTypeName: "Typ zatienenia",
		azimuthName: "Azimut",
		altitudeName: "Nadmorská výška",
		slopeTypeName: "Škálovanie",
		zFactorName: "Z-faktor",
		PSPowerName: "Mocnina veľkosti pixelu",
		PSZFactorName: "Faktor veľkosti pixelu",
		removeEdgeEffectName: "Deaktivovať predvolenú interpoláciu hrany pixelu",
		fromUnitName: "Od jednotky",
		toUnitName: "K jednotke",
		rasterTypeName: "Typ",
		minName: "Minimálny výstup",
		maxName: "Maximálny výstup",
		minPercentName: "Minimálne percento orezania",
		maxPercentName: "Maximálne percento orezania",
		numberOfStandardDeviationName: "Počet štandardných odchýlok",
		sigmoidStrengthLevelName: "Úroveň sily sigmoidu",
		estimateStatsHistogramName: "Štatistiky odhadu",
		DRAName: "Prispôsobenie dynamického rozsahu",
		statisticsName: "Štatistiky",
		histogramsName: "Histogramy",
		statisticsHistogramName: "Definovať štatistiky a histogram",
		computeGammaName: "Automatická Gama korekcia",
		useGammaName: "Použiť Gama korekciu",
		gammaName: "Gama",
		inputNamesName: "Názvy",
		expressionName: "Výraz",
		cellsizeTypeName: "Typ veľkosti bunky",
		extentTypeName: "Typ rozsahu",
		classifierDefinitionFileName: "Vstupný definičný súbor",
		raster1Name: "Raster1",
		raster2Name: "Raster2",
		raster3Name: "Raster3",
		trueRasterName: "Pravdivý raster",
		falseRasterName: "Nepravdivý raster",
		noDataInterpretationName: "Interpretácia NoData",
		noDataValuesName: "Hodnoty NoData",
		includedRangesName: "Zahrnuté rozsahy",
		curvatureTypeName: "Typ zakrivenia",
		rastersName: "Rastre",
		attributeTableName: "Tabuľka",
		attributeTableTypeName: "Typ tabuľky",
		rowsName: "Počet riadkov",
		columnsName: "Počet stĺpcov",
		kernelName: "Kernel",
		mirrorEdgesName: "Hrany zrkadlenia",
		influencesName: "Vplyvy",
		fieldsName: "Polia",
		remapsName: "Tabuľka premapovania",
		evalFromName: "Mierka vyhodnotenia od",
		evalToName: "Mierka vyhodnotenia do",
		weightsName: "Váhy",
		DEMName: "DEM",
		shortRangeIDWRadiusName: "Polomer IDW krátkeho dosahu",
		maxVoidWidthName: "Maximálna šírka medzery",
		sigmaGaussianName: "Adaptívne vyhladenie",
		contourTypeName: "Typ vrstevnice",
		zBaseName: "Základná hodnota Z",
		numberOfContoursName: "Počet vrstevníc",
		contourIntervalName: "Interval vrstevníc",
		nthContourLineInBoldName: "N-tá vrstevnica hrubá",
		featureClassName: "Vstupný prvok",
		classIndexFieldName: "Pole",
		resolveOverlapMethodName: "Metóda riešenia prekryvu",
		resamplingTypeName: "Typ prevzorkovania",
		inputCellsizeName: "Vstupná veľkosť bunky",
		outputCellsizeName: "Výstupná veľkosť bunky",
		pointFeatureClassName: "Zdrojové body",
		maxGrowthRadiusFieldName: "Pole s polomerom maximálneho rastu",
		similarityThresholdFieldName: "Pole prahu podobnosti",
		fillValueFieldName: "Vyplniť pole hodnoty",
		spectralDetailName: "Spektrálne detaily [1..20]",
		spatialDetailName: "Priestorové detaily [1..20]",
		minNumPixelsPerSegmentName: "Minimálna veľkosť segmentu v pixeloch",
		boundariesOnlyName: "Iba hranice segmentu",
		statisticsTypeName: "Typ štatistiky",
		fillNoDataOnlyName: "Vyplniť iba NoData pixely",
		inputDataTypeName: "Typ vstupných údajov",
		angleReferenceSystemName: "Uhlový referenčný systém",
		outputDataTypeName: "Typ výstupných dát",
		inputSamplePointFeatureClassName: "Vzorky vstupu",
		valueFieldName: "Pole s hodnotami",
		rasterInfoName: "Informácie o rastri",
		interpolationMethodName: "Metóda interpolácie",
		radiusName: "Polomer",
		radianceGainValuesName: "Zisk žiarenia",
		radianceBiasValuesName: "Žiarivosť",
		reflectedGainValuesName: "Prírastok odrazivosti",
		reflectedBiasValuesName: "Odrazivosť",
		sunElevationName: "Výškový uhol slnka (stupne)",
		albedoName: "Albedo",
		scaleFactorName: "Mierkový faktor",
		offsetName: "Odsadenie",
		thresholdTypeName: "Typ prahu",
		thresholdsName: "Prahy",
		undefinedClassName: "Nedefinovaná trieda",
		minValueName: "Min",
		maxValueName: "Max",
		operationName: "Operácia",
		clippingTypeName: "Typ orezania",
		clippingGeometryName: "Geometria orezania / Raster",
		extentName: "Rozsah výstupu",
		useInputFeatureGeometryName: "Použiť vstupný prvok pre geometriu orezu",
		remapDefinitionTypeName: "Typ premapovania definícií",
		inputRangeName: "Rozsahy vstupu",
		outputValuesName: "Hodnoty výstupu",
		noDataRangeName: "Rozsahy NoData",
		inputFieldName: "Pole vstupu",
		outputFieldName: "Pole výstupu",
		inputMaxFieldName: "Vstupné pole s maximom (voliteľné)",
		remapTableTypeName: "Typ tabuľky premapovania",
		allowUnmatchedName: "Povoliť nespárované hodnoty pixelov",
		changeMissingValuesToNoDataName: "Zmeniť chýbajúce hodnoty na NoData",
		visibleBandIDName: "ID viditeľného pásma",
		infraredBandIDName: "ID infračerveného pásma",
		scientificOutputName: "Vedecký výstup",
		bandIndexesName: "Indexy pásiem",
		constantName: "Konštantné",
		weightName: "Váha",
		minimumName: "Minimum",
		maximumName: "Maximum",
		sourceDataName: "Zdrojový raster",
		sourceFieldName: "Zdrojové pole",
		costRasterName: "Raster nákladov",
		maxDistanceName: "Maximálna vzdialenosť",
		valueRasterName: "Raster hodnoty",
		costMultiplierName: "Multiplikátor pre uplatnenie na náklady",
		startCostName: "Začiatočné náklady",
		accumCostResistanceRateName: "Kumulatívna miera nákladovej odolnosti",
		capacityName: "Kapacita",
		travelDirectionName: "Smer cestovania",
		cellSizeName: "Veľkosť bunky",
		populationFieldName: "Pole populácie",
		areaUnitsName: "Jednotky plochy",
		outputValueTypeName: "Výstupná veľkosť bunky",
		barriersName: "Vstupné bariéry",
		destinationDataName: "Cieľový raster",
		destinationFieldName: "Cieľové pole",
		pathTypeName: "Typ trasy",
		observerFeaturesName: "Prvky pozorovateľa",
		analysisMethodName: "Metóda analýzy",
		analysisTypeName: "Typ analýzy",
		verticalErrorName: "Vertikálna chyba",
		refractivityCoefficientName: "Koeficient lomu",
		surfaceOffsetName: "Odsadenie povrchu",
		observerElevationName: "Nadmorská výška pozorovateľa",
		observerOffsetName: "Odsadenie pozorovateľa",
		innerRadiusName: "Vnútorný polomer",
		innerRadiusIs3DDistanceName: "Vnútorný polomer je 3D vzdialenosť",
		outerRadiusName: "Vonkajší polomer",
		outerRadiusIs3DDistanceName: "Vonkajší polomer je 3D vzdialenosť",
		horizontalStartAngleName: "Horizontálny začiatočný uhol",
		horizontalEndAngleName: "Horizontálny koncový uhol",
		verticalUpperAngleName: "Vertikálny horný uhol",
		verticalLowerAngleName: "Vertiálny dolný uhol",
		zoneDataName: "Raster zóny",
		zoneFieldName: "Pole zóny",
		ignoreNoDataName: "Ignorovať vo výpočtoch NoData",
		temperatureRasterName: "Raster teploty",
		inTemperatureUnitsName: "Jednotky teploty",
		outHeatIndexTemperatureUnitsName: "Jednotky tepelného indexu",
		relativeHumidityRasterName: "Raster relatívnej vlhkosti",
		outWindChillTemperatureUnitsName: "Jednotky veterného chladu",
		windSpeedRasterName: "Raster rýchlosti vetra",
		inWindSpeedUnitsName: "Jednotky rýchlosti vetra",
		valueName: "Hodnota",
		propertyName: "Názov vlastnosti",
		jsonName: "Metaúdaje JSON",
		zoneTableName: "Tabuľka zonálnych atribútov",
		attributeFieldNames: "Názvy atribútových polí",
		backgroundName: "Hodnota pozadia",
		whereClauseName: "Where Klauzula",
		minimumValueFieldName: "Názov poľa s minimálnou hodnotou",
		maximumValueFieldName: "Názov poľa s maximálnou hodnotou",
		outValueFieldName: "Názov poľa s výstupnou hodnotou",
		defaultValueName: "Predvolená hodnota výstupu",
		conversionMatrixName: "Matica prevodu",
		IsPseudoColorOutputName: "Je pseudofarebný výstup",
		unmappedAsRandomColorName: "Náhodne priradiť farbu nenamapovaným pixelom",
		distanceMethodName: "Metóda vzdialenosti",
		flowDirRasterName: "Raster smeru toku",
		pourPointName: "Raster bodov odtoku",
		pourPointFieldName: "Pole bodu odtoku",
		constantZName: "Konštanta Z",
		zOffsetName: "Offset Z",
		geoIdName: "Geoid",
		calibrationTypeName: "Typ kalibrácie",
		filterTypeName: "Typ filtra",
		filterSizeName: "Veľkosť filtra",
		noiseModelName: "Model šumu",
		noiseVarianceName: "Rozptyl šumu",
		additiveNoiseMeanName: "Doplnkový priemer šumu",
		multiplicativeNoiseMeanName: "Multiplikatívny priemer šumu",
		numberofLooksName: "Počet vzhľadov",
		dampingFactorName: "Tlmiaci faktor",
		maskRasterName: "Raster masky",
		nibbleValuesName: "Použiť hodnoty NoData ak sú najbližším susedom",
		nibbleNoDataName: "Okrajové bunky NoData",
		zLimitName: "Limit Z",
		flowDirectionTypeName: "Typ smeru toku",
		weightRasterName: "Raster váhy",
		forceEdgeName: "Vynútiť, aby všetky okrajové bunky smerovali von",
		streamRasterName: "Raster toku",
		surfaceRasterName: "Raster povrchu",
		conversionType: "Typ prevodu",
		distanceRaster1: "Raster vzdialenosti 1",
		distanceRaster2: "Raster vzdialenosti 2",
		costDistanceRaster: "Raster vzdialenosti nákladov",
		costBacklinkRaster: "Raster spätných nákladov",
		overridesName: "Nahradenia",
		fieldName: "Pole",
		signatureFileOrUrl: "Súbor s podpisom alebo URL",
		redName: "Červená",
		greenName: "Zelená",
		blueName: "Modrá",
		infraredName: "Infračervená",
		panchromaticName: "Panchromatická",
		multispectralName: "Multispektrálna",
		pansharpeningType: "Typ zaostrenia",
		sensorName: "Senzor",
		spatialReferenceName: "Priestorový referenčný systém",
		xCellsizeName: "Veľkosť bunky v smere X",
		yCellsizeName: "Veľkosť bunky v smere Y",
		xOriginName: "Bod registrácie X",
		yOriginName: "Bod registrácie Y",
		percentileName: "Hodnota percentilu",
		neighborhoodType: "Typ okolia",
		widthName: "Šírka",
		heightName: "Výška",
		startAngleName: "Počiatočný uhol",
		endAngleName: "Koncový uhol",
		neighborhoodValues: "Hodnoty okolia",
		horizontalRaster: "Horizontálny raster",
		horizontalFactor: "Horizontálny faktor",
		verticalRaster: "Vertikálny raster",
		verticalFactor: "Vertikálny faktor",
		streamRaster: "Raster prúdenia",
		flowDirRaster: "Raster smeru toku",
		numberNeighborCells: "Počet susediacich buniek",
		zoneConnectivity: "Konektivita zón",
		addLinkBehavior: "Pridať prepojenie",
		excludedValue: "Vynechaná hodnota",
		constantFillCheck: "Generovať raster výplne podľa konštanty",
		fillRaster: "Raster výplne",
		constantFillValue: "Hodnota konštanty",
		inputBitPositions: "Bit vstupu",
		outputBitPositions: "Bit výstupu",
		distanceTypeName: "Typ vzdialenosti",
		barrierDataName: "Rastrové bariéry",
		pourPointDataName: "Raster odtokových bodov",
		accumulationRasterName: "Raster akumulácie toku",
		snapDistanceName: "Prichytávacia vzdialenosť",
		orderMethodName: "Metóda poradia",
		directionMeasurementName: "Smer merania",
		processAsMultiband: "Spracovať ako viacpásmové",
		processMultidimensional: "Spracovať ako viacrozmerné",
		forceFlowDirectionConvention: "Vynútiť smerovanie toku pre spätný raster",
		initialAccumulation: "Počiatočná akumulácia",
		maximumAccumulation: "Maximálna akumulácia",
		sourceLocationBands: "Generovať zdrojový riadok a stĺpec ako dodatočné pásma vo výstupe",
		backDirectionBand: "Generovať spätný smer ako dodatočné pásmo vo výstupe",
		numberOfCells: "Počet buniek",
		zoneValues: "Hodnoty zón",
		shrinkMethod: "Metóda zmenšovania",
		expandMethod: "Metóda rozširovania",
		inputSpectralProfileType: "Typ spektrálneho profilu",
		spectralProfileFileName: "Spektrálny profil",
		trainingFeatureFileName: "Trénovací prvok",
		nonNegative: "Nie negatív",
		sumToOne: "Súčet do jedna",
		randomDistribution: "Rozloženie",
		meanName: "Priemer",
		probabilityName: "Pravdepodobnosť",
		alphaName: "Alfa",
		betaName: "Beta",
		rName: "r",
		nName: "N",
		seed: "Počiatok",
		randomNumberGenerator: "Náhodný generátor čísel",
		cellFactor: "Faktor bunky",
		aggregationType: "Metóda agregácie",
		extentHandling: "Rozšíriť rozsah ak je to potrebné",
		trendAnalysisDimensionName: "Názov rozmeru",
		trendAnalysisType: "Typ trendu",
		harmonicFrequency: "Harmonická frekvencia",
		polynomialOrder: "Stupeň polynómu",
		cycleLengthName: "Dĺžka cyklu",
		trendAnalysisRMSE: "Stredná kvadratická chyba",
		trendAnalysisR2: "Koeficient korelácie",
		trendAnalysisSlopePValue: "P-hodnota koeficientu sklonu",
		trendAnalysisSeasonalPeriod: "Sezónne obdobie",
		cycleUnitName: "Jednotka cyklu",
		predictDimensionValues: "Hodnoty",
		dimensionDefinitionType: "Definícia rozmerov",
		predictDimensionStart: "Začiatok",
		predictDimensionEnd: "Koniec",
		predictDimensionInterval: "Interval hodnôt",
		dimensionUnit: "Jednotka",
		interpolationCellsizeName: "Veľkosť bunky pre interpoláciu",
		variableName: "Premenné",
		dimensionlessName: "Bez rozmerov",
		mdimDefinition: "Definícia rozmerov",
		dimensionName: "Rozmer",
		iterationStart: "Začiatok prvej iterácie",
		iterationEnd: "Koniec prvej iterácie",
		intervalStart: "Začiatok intervalu",
		intervalEnd: "Koniec intervalu",
		stepName: "Krok",
		rangesName: "Rozsahy",
		minValue: "Minimálna hodnota",
		maxValue: "Maximálna hodnota",
		changeAnalysisRasterName: "Raster analýzy zmien",
		changeTypeName: "Zmeniť typ",
		segmentDate: "Dátum segmentu",
		changeDirectionName: "Zmeniť smer",
		maxNumChangesName: "Maximálny počet zmien",
		filterByYear: "Filtrovať podľa roku",
		minimumYear: "Minimálna hodnota",
		maximumYear: "Maximálna hodnota",
		filterByDuration: "Filtrovať podľa trvania",
		minimumDuration: "Minimálne trvanie",
		maximumDuration: "Maximálne trvanie",
		filterByMagnitude: "Filtrovať podľa rozsahu",
		minimumMagnitude: "Minimálny rozsah",
		maximumMagnitude: "Maximálny rozsah",
		filterByStartValue: "Filtrovať podľa počiatočnej hodnoty",
		minimumStartValue: "Minimálna počiatočná hodnota",
		maximumStartValue: "Maximálna počiatočná hodnota",
		filterByEndValue: "Filtrovať podľa konečnej hodnoty",
		minimumEndValue: "Minimálna konečná hodnota",
		maximumEndValue: "Maximálna konečná hodnota",
		modelTypeName: "Typ modelu",
		fromRasterName: "Z rastra",
		toRasterName: "Do rastra",
		computeChangeMethod: "Vypočítať metódu zmeny",
		fromClassValues: "Od hodnôt triedy",
		toClassValues: "K hodnotám triedy",
		keepMethod: "Metóda filtra",
		useColorMethod: "Definícia prechodových farieb",
		detectChangeBands: "Pásma pre detekciu zmeny (začiatok na 0)",
		tmaskBands: "Pásma pre časové maskovanie (začiatok na 0)",
		chiSquaredThreshold: "Chi-kvadrát prahová hodnota pre detekciu zmeny",
		minAnomaly: "Minimálne po sebe nasledujúce pozorovania anomálií",
		updatingFrequency: "Aktualizovanie frekvencie zhody (v rokoch)",
		distanceAccumulationRasterName: "Raster akumulácie vzdialenosti",
		costBackdirectionRasterName: "Raster smeru toku alebo spätného smeru.",
		rasterCollectionName: "Kolekcia rastrov",
		itemFunctionName: "Funkcia položky",
		aggregationFunctionName: "Funkcia agregácie",
		processingFunctionName: "Funkcia spracovania",
		aggregationDefinitionName: "Definícia agregácie",
		queryGeometryName: "Geometria dopytu",
		factorFunctionZeroFactor: "Nulový faktor",
		factorFunctionCutAngle: "Uhol rezu",
		factorFunctionSideFactor: "Faktor strany",
		factorFunctionSlope: "Sklon",
		factorFunctionLowCutAngle: "Malý uhol rezu",
		factorFunctionHighCutAngle: "Veľký uhol rezu",
		factorFunctionCosPower: "Kosínová mocnina",
		factorFunctionSecPower: "Sekansová mocnina",
		factorFunctionTablePath: "Umiestnenie tabuľky",
		processingBand: "Spracovanie pásma",
		processingBandName: "Spracovanie názvu pásma",
		snappingDate: "Dátum snímania",
		maxNumSegments: "Maximálny počet segmentov",
		vertexCountOvershoot: "Prekročenie množstva lomových bodov",
		spikeThreshold: "Prah ostrého uhla",
		recoveryThreshold: "Prahová hodnota zotavenia",
		minNumObs: "Minimálny počet pozorovaní",
		pValueThreshold: "Prahová p-hodnota",
		bestModelProportion: "Najlepšie proporcie modelu",
		preventOneYearRecovery: "Zameziť zotaveniu po roku",
		recoveryIncreaseTrend: "Režim zotavenia má stúpajúci trend",
		outputOtherBands: "Výstup ďalších pásiem",
		sortType: "Typ zoradenia",
		numberOfRuns: "Spustiť expandovanie a zmenšenie dvakrát",
		percentileValue: "Hodnota percentilu",
		percentileInterpolationType: "Percentilný typ interpolácie",
		rasterInfoProperty: "Vlastnosť",
		rasterInfoValue: "Hodnota",
		rasterInfoColumns: "Stĺpce",
		rasterInfoRows: "Riadky",
		rasterInfoBandCount: "Počet pásiem",
		rasterInfoPixelSizeX: "Veľkosť bunky X",
		rasterInfoPixelSizeY: "Veľkosť bunky Y",
		rasterInfoPixelType: "Typ pixelu",
		rasterExtentTop: "Hore",
		rasterExtentBottom: "Dole",
		rasterExtentLeft: "Vľavo",
		rasterExtentRight: "Vpravo",
		rasterStatisticsNotCalculated: "Štatistiky neboli vypočítané.",
		spatialReferenceProjection: "Projekcia",
		spatialReferenceWkid: "WKID",
		spatialReferenceLatestWkid: "Predchádzajúce WKID",
		spatialReferenceWkt: "WKT",
		spatialReferenceVcsWkid: "VCSWKID",
		spatialReferenceLatestVcsWkid: "Predchádzajúce VCSWKID",
		spatialReferenceAuthority: "Autorita",
		spatialReferenceLinearUnit: "Dĺžková jednotka",
		spatialReferenceAngularUnit: "Uhlová jednotka",
		spatialReferenceFalseEasting: "Vodorovný posun počiatku",
		spatialReferenceFalseNorthing: "Zvislý posun počiatku",
		spatialReferenceCentralMeridian: "Stredný poludník",
		spatialReferencePrimeMeridian: "Hlavný poludník",
		spatialReferenceStandardParallel1: "Štandardná rovnobežka 1",
		spatialReferenceStandardParallel2: "Štandardná rovnobežka 2",
		spatialReferenceLatitudeOfOrigin: "Zemepisná šírka počiatku",
		spatialReferenceAuxiliarySphereType: "Typ pomocnej sféry",
		spatialReferenceDatum: "Datum",
		spatialReferenceSpheroid: "Sféroid",
		spatialReferenceSemimajorAxis: "Hlavná poloos",
		spatialReferenceSemiminorAxis: "Vedľajšia poloos",
		spatialReferenceInverseFlattening: "Inverzné sploštenie",
		inputDefinitionFileName: "Vstupný definičný súbor",
		deleteName: "Zmazať",
		addVariableName: "Pridať premennú",
		maxNumPixelsPerSegment: "Maximálna veľkosť segmentu v pixeloch",
		forwardWindowName: "Predné okno",
		backwardWindowName: "Zadné okno",
		noDataHandlingName: "NoData manipulácia",
		circularWrapValueName: "Hodnota Circular Wrap",
		fromClassNameFieldName: "Názov poľa pre názvy tried z rastra",
		toClassNameFieldName: "Názov poľa pre názvy tried do rastra",
		targetRasterName: "Cieľový raster",
		circularWrapValue: "Hodnota Circular Wrap",
		bandIndexesR: "Červený výraz",
		bandIndexesG: "Zelený výraz",
		bandIndexesB: "Modrý výraz",
		exampleName: "Príklad",
		inputName: "Vstup",
		outputName: "Výstup",
		optionalName: "Voliteľné",
		browseDefinitionFile: "Prehľadávať definičný súbor",
		selectDefinitionFile: "Vyberte vstupný definičný súbor",
		inputDefinitionURL: "URL adresa vstupného definičného súboru",
		enterDefinitionFileURL: "Zadajte URL adresu definičného súboru",
		browseXMLFile: "Prehľadávanie súboru XML",
		selectStatsFile: "Vyberte súbor štatistiky a histogramov",
		enterXMLFileURL: "Zadajte URL adresu súboru XML",
		xmlFileURL: "URL adresa súboru XML",
		circularCalculation: "Výpočet kruhových štatistík",
		localSurfaceType: "Miestny typ povrchu",
		surfaceParameterType: "Typ parametra",
		neighborhoodDistance: "Vzdialenosť okolia",
		useAdaptiveNeighborhood: "Použiť adaptívne susedstvo",
		outputSlopeType: "Meranie výstupného sklonu",
		projectAzimuths: "Projektovať geodetické azimuty",
		useEquatorialAspect: "Použiť rovníkové zobrazenie",
		zUnit: "Jednotka Z",
		analysisMask: "Maska analýzy",
		stdDeviation: "Štandardná odchýlka",
		"true": "Pravdivé",
		"false": "Nepravdivé",
		costDistanceRaster1: "Vstupný kumulatívny Raster vzdialenosti nákladov 1",
		costDistanceRaster2: "Vstupný kumulatívny Raster vzdialenosti nákladov 2",
		threshold: "Prah",
		thresholdMethod: "Prahová metóda",
		directionRaster1: "Vstup Raster spätného smeru 1",
		directionRaster2: "Vstup Raster spätného smeru 2",
		maxIterations: "Maximálny počet iterácií",
		epsilon: "Epsilón"
	},
	enumLabels: {
		attributeTableTypeManual: "Manuálne",
		attributeTableTypeExternal: "Externé",
		clrSchemeTypeColormap: "Farebná mapa",
		clrSchemeTypeColorRamp: "Farebná rampa",
		colormapTypeElevation: "Výška",
		colormapTypeGray: "Šedá",
		colormapTypeNDVI: "NDVI",
		colormapTypeNDVI2: "NDVI2",
		colormapTypeNDVI3: "NDVI3",
		colormapTypeRandom: "Náhodné",
		none: "Žiadne",
		slopeTypeAdjusted: "Prispôsobené",
		slopeTypeDegree: "Stupeň",
		slopeTypePercentRise: "Percentuálny nárast",
		slopeTypeScaled: "Škálované",
		stretchTypeMinMax: "MinMax",
		stretchTypePercentMinMax: "PercentMinMax",
		stretchTypeSigmoid: "Sigmoid",
		stretchTypeStdDev: "StdDev",
		hillshadeTypeSimple: "Tradičný",
		hillshadeTypeMultidirectional: "Viacsmerný",
		bandComboByNames: "Názvy pásiem",
		bandComboByWavelength: "Vlnové dĺžky pásiem",
		bandComboByIDs: "ID pásiem",
		missingBandActionBestMatch: "Najlepšia zhoda",
		missingBandActionFail: "Zlyhanie",
		unitTypeCelsius: "Celzius",
		unitTypeCentimeters: "Centimetre",
		unitTypeDecimeters: "Decimetre",
		unitTypeFahrenheit: "Fahrenheit",
		unitTypeFeet: "Stopy",
		unitTypeFeetPerSec: "Stôp za sekundu (ft/s)",
		unitTypeInches: "Palce",
		unitTypeKelvin: "Kelvin",
		unitTypeKilometers: "Kilometre",
		unitTypeKmsPerHour: "Kilometrov za hodinu (km/h)",
		unitTypeKnots: "Uzly (kn)",
		unitTypeMeters: "Metre",
		unitTypeMetersPerSec: "Metrov za sekundu (m/s)",
		unitTypeMiles: "Míle",
		unitTypeMilesPerHour: "Míľ za hodinu (mph)",
		unitTypeMillimeters: "Milimetre",
		unitTypeNauticalMiles: "Námorné míle",
		unitTypeYards: "Yardy",
		unitTypeDecimalDegrees: "Desatinné stupne",
		unitTypePoints: "Body",
		unitTypeUnknown: "Neznáme",
		unitTypeSqMapUnits: "Štvorcové mapové jednotky",
		unitTypeSqMiles: "Štvorcové míle",
		unitTypeSqKms: "Štvorcové kilometre",
		unitTypeAcres: "Akre",
		unitTypeHectares: "Hektáre",
		unitTypeSqYards: "Štvorcové yardy",
		unitTypeSqFt: "Štvorcové stopy",
		unitTypeSqInches: "Štvorcové palce",
		unitTypeSqMts: "Štvorcové metre",
		unitTypeSqCms: "Štvorcové centimetre",
		unitTypeSqMms: "Štvorcové milimetre",
		cellsizeTypeFirst: "Prvé z",
		cellsizeTypeMin: "Minimum z",
		cellsizeTypeMax: "Maximum z",
		cellsizeTypeMean: "Priemer z",
		cellsizeTypeLast: "Posledné z",
		extentTypeFirst: "Prvé z",
		extentTypeIntersection: "Priesečník",
		extentTypeUnion: "Zjednotenie",
		extentTypeLast: "Posledné z",
		noDataInterpretAny: "Párovať akékoľvek",
		noDataInterpretAll: "Párovať všetky",
		curvatureTypeStandard: "Štandardné",
		curvatureTypeProfile: "Profil",
		curvatureTypePlanform: "Planform",
		filterTypeLineDetectionHorizontal: "Horizontálna detekcia línie",
		filterTypeLineDetectionVertical: "Vertikálna detekcia línie",
		filterTypeLineDetectionLeftDiagonal: "Ľavá diagonálna detekcia línie",
		filterTypeLineDetectionRightDiagonal: "Pravá diagonálny detekcia línie",
		filterTypeGradientNorth: "Gradient sever",
		filterTypeGradientWest: "Gradient západ",
		filterTypeGradientEast: "Gradient východ",
		filterTypeGradientSouth: "Gradient juh",
		filterTypeGradientNorthEast: "Gradient severovýchod",
		filterTypeGradientNorthWest: "Gradient severozápad",
		filterTypeSmoothArithmeticMean: "Hladký aritmetický priemer",
		filterTypeSmoothing3x3: "Vyhladenie 3x3",
		filterTypeSmoothing5x5: "Vyhladenie 5x5",
		filterTypeSharpening3x3: "Zaostrenie 3x3",
		filterTypeSharpening5x5: "Zaostrenie 5x5",
		filterTypeLaplacian3x3: "Laplaceovské 3x3",
		filterTypeLaplacian5x5: "Laplaceovské 5x5",
		filterTypeSobelHorizontal: "Sobel horizontálny",
		filterTypeSobelVertical: "Sobel vertikálny",
		filterTypeSharpen: "Zaostriť",
		filterTypeSharpen2: "Ostriť viac",
		filterTypePointSpread: "Bodové rozpätie",
		userDefined: "Definovaný používateľom",
		ContourTypeLines: "Vrstevnice",
		ContourTypeFill: "Výplň vrstevníc",
		ContourTypeSmoothOnly: "Len vyhladený povrch",
		rasterizeFirst: "Prvé",
		rasterizeLast: "Posledné",
		rasterizeSmallest: "Najmenšie",
		rasterizeLargest: "Najväčšie",
		resamplingTypeNearest: "Najbližší sused",
		resamplingTypeBilinear: "Bilineárna interpolácia",
		resamplingTypeCubic: "Kubická konvolúcia",
		resamplingTypeMajority: "Väčšina",
		resamplingTypeBilinearPlus: "Bilineárna interpolácia Plus",
		resamplingTypeGauss: "Gaussovo rozostrenie",
		resamplingTypeGaussPlus: "Gaussovo rozostrenie Plus",
		resamplingTypeAverage: "Priemer",
		resamplingTypeMinimum: "Minimum",
		resamplingTypeMaximum: "Maximum",
		resamplingTypeVectorAvg: "Priemer vektora",
		minimum: "Minimum",
		maximum: "Maximum",
		mean: "Priemer",
		stdDeviation: "Štandardná odchýlka",
		uvMagDirTypeUV: "U-V",
		uvMagDirTypeMagDir: "Sila-smer",
		unknown: "Neznáme",
		angleRefSysGeographic: "Geografická",
		angleRefSysArithmetic: "Aritmetická",
		interpolateIrregularDataNearest: "Najbližší sused",
		interpolateIrregularDataBilinear: "Bilineárna",
		interpolateIrregularDataTinningLinear: "Lineárne stenšenie",
		interpolateIrregularDataTinningNaturalNeighbor: "Prirodzený sused",
		interpolateIrregularDataTinningIDW: "Vážená inverzná vzdialenosť",
		esriRasterThresholdTypeConstant: "Konštantné",
		esriRasterThresholdTypeOtsu: "Otsu",
		esriRasterThresholdTypeTsai: "Tsai",
		esriRasterThresholdTypeKapur: "Kapur",
		esriRasterThresholdTypeKittler: "Kittler",
		esriRasterThresholdTypeRosin: "Rosin",
		argStatsTypeMax: "Arg Max",
		argStatsTypeMin: "Arg Min",
		argStatsTypeMedian: "Arg Median",
		argStatsTypeDuration: "Trvanie",
		arithmeticOpPlus: "Plus",
		arithmeticOpMinus: "Mínus",
		arithmeticOpMultiply: "Násobok",
		arithmeticOpDivide: "Vydelenie",
		arithmeticOpPower: "Mocnina",
		arithmeticOpMode: "Režim",
		clipTypeOutside: "Orezať vonku",
		clipTypeInside: "Orezať vnútri",
		yes: "Áno",
		no: "Nie",
		densities: "Hustoty",
		expectedCounts: "Očakávané počty",
		planar: "Rovinný",
		geodesic: "Geodetický",
		eachCell: "Každá bunka",
		eachZone: "Každá zóna",
		bestSingle: "Najlepšia jediná",
		allSightlines: "Všetky línie viditeľnosti",
		perimeterSightlines: "Obvodové línie viditeľnosti",
		frequency: "Početnosť",
		observers: "Pozorovatelia",
		majority: "Väčšina",
		median: "Medián",
		minority: "Menšina",
		percentile: "Percentil",
		range: "Rozsah",
		sum: "Súčet",
		variety: "Variácia",
		ndvi: "NDVI",
		savi: "SAVI",
		bandArithmeticMethodTSAVI: "Transformované SAVI",
		bandArithmeticMethodMSAVI: "Upravené SAVI",
		bandArithmeticMethodSultan: "Sultanov vzorec",
		gemi: "GEMI",
		pvi: "PVI",
		gvi: "GVI (Landsat TM)",
		vari: "VARI",
		sr: "SR",
		gndvi: "GNDVI",
		ndvire: "NDVIre",
		srre: "SRre",
		mtvi2: "MTVI2",
		rtviCore: "RTVICore",
		cire: "CIre",
		cig: "CIg",
		ndwi: "NDWI",
		evi: "EVI",
		ironOxide: "Oxid železitý",
		ferrousMinerals: "Železné minerály",
		clayMinerals: "Hlinené minerály",
		wndwi: "WNDWI",
		bai: "BAI",
		mndwi: "MNDWI",
		nbr: "NBR",
		ndbi: "NDBI",
		ndmi: "NDMI",
		ndsi: "NDSI",
		localSquareRoot: "Odmocnina",
		localACos: "Arkuskosínus",
		localASin: "Arkussínus",
		localATan: "Arkustangens",
		localATanH: "Arkustangens hyperbolický",
		localAbs: "Abs",
		localBitwiseNot: "Bitová operácia NOT",
		localBooleanNot: "Boolovské NOT",
		localCos: "Kosínus",
		localCosH: "Kosínus hyperbolický",
		localExp: "Exp",
		localExp10: "Exp10",
		localExp2: "Exp2",
		localInt: "Celé číslo",
		localIsNull: "Je Null",
		localFloat: "Desatinné číslo",
		localLn: "Prirodzený logaritmus",
		localLog10: "Dekadický logaritmus",
		localLog2: "Binárny logaritmus",
		localNegate: "Negovať",
		localRoundDown: "Zaokrúhliť nadol",
		localRoundUp: "Zaokrúhliť nahor",
		localSin: "Sínus",
		localSinH: "Sínus hyperbolický",
		localTan: "Tangens",
		localTanH: "Tangens hyperbolický",
		localACosH: "Arkuskosínus hyperbolický",
		localASinH: "Arkussínus hyperbolický",
		localPlus: "Plus",
		localMinus: "Mínus",
		localTimes: "Časy",
		localPower: "Mocnina",
		localBitwiseAnd: "Bitová operácia And",
		localBitwiseLeftShift: "Bitový ľavý shift",
		localBitwiseOr: "Bitová operácia OR",
		localBitwiseRightShift: "Bitový pravý shift",
		localBitwiseXor: "Bitová operácia XOR",
		localBooleanAnd: "Boolovské AND",
		localBooleanOr: "Boolovské OR",
		localBooleanXor: "Boolovské XOR",
		localDivide: "Vydelenie",
		localEqualTo: "Rovné",
		localGreaterThan: "Väčší ako",
		localGreaterThanEqual: "Väčší ako a rovný",
		localLessThan: "Menší ako",
		localLessThanEqual: "Menší ako a rovný",
		localMod: "Mod",
		localNotEqual: "Nerovné",
		localATan2: "Arkustangens 2",
		localSquare: "Štvorec",
		localSetNull: "Nastaviť Null",
		remapDefTypeList: "Zoznam",
		remapDefTypeTable: "Tabuľka",
		remapTableTypeSimple: "Jednoduchá",
		remapTableTypeDynamic: "Dynamický",
		remapTableTypeReassignment: "Opätovné priradenie",
		geomCorrectionByConstZ: "Použiť konštantu Z",
		geomCorrectionByDEM: "Použiť DTM",
		radarCalibBetaNought: "Beta nula",
		radarCalibSigmaNought: "Sigma nula",
		radarCalibGammaNought: "Gamma nula",
		speckleFilterTypeLee: "Leeov filter",
		speckleFilterTypeEnhancedLee: "Zlepšený Leeov filter",
		speckleFilterTypeFrost: "Mrazový filter",
		speckleFilterTypeKuan: "Filer Kuan",
		speckleNoiseModelMul: "Multiplikatívny šum",
		speckleNoiseModelAdd: "Doplnkový šum",
		speckleNoiseModelAddnMul: "Doplnkový a multiplikatívny šum",
		mosaicOpTypeFirst: "Prvá",
		mosaicOpTypeLast: "Posledná",
		mosaicOpTypeMin: "Min",
		mosaicOpTypeMax: "Max",
		mosaicOpTypeMean: "Priemer",
		mosaicOpTypeBlend: "Kombinovať",
		mosaicOpTypeSum: "Súčet",
		integer: "Integer",
		rfxD8: "D8",
		rfxMFD: "MFD",
		dinf: "Dinf",
		vertical: "Vertikálny",
		horizontal: "Horizontálny",
		localCellStatisticsMajority: "Väčšina",
		localCellStatisticsMax: "Maximum",
		localCellStatisticsMean: "Priemer",
		localCellStatisticsMedian: "Medián",
		localCellStatisticsMin: "Minimum",
		localCellStatisticsMinority: "Menšina",
		localCellStatisticsRange: "Rozsah",
		localCellStatisticsStdDev: "Štandardná odchýlka",
		localCellStatisticsSum: "Súčet",
		localCellStatisticsVariety: "Variácia",
		localCellStatisticsMajorityIgnoreND: "Väčšina (Ignorovať NoData)",
		localCellStatisticsMaxIgnoreND: "Maximum (Ignorovať NoData)",
		localCellStatisticsMeanIgnoreND: "Priemer (Ignorovať NoData)",
		localCellStatisticsMedianIgnoreND: "Medián (Ignorovať NoData)",
		localCellStatisticsMinIgnoreND: "Minimum (Ignorovať NoData)",
		localCellStatisticsMinorityIgnoreND: "Menšina (Ignorovať NoData)",
		localCellStatisticsRangeIgnoreND: "Rozpätie (Ignorovať NoData)",
		localCellStatisticsStdDevIgnoreND: "Štandardná odchýlka (Ignorovať NoData)",
		localCellStatisticsSumIgnoreND: "Súčet (Ignorovať NoData)",
		localCellStatisticsVarietyIgnoreND: "Variácia (Ignorovať NoData)",
		localCellStatisticsTypePercentileIgnoreND: "Percentil (Ignorovať NoData)",
		fromSource: "Zo zdroja",
		toSource: "Do zdroja",
		colorspaceConversionRgbToHsv: "RGB do HSV",
		colorspaceConversionHsvToRgb: "HSV do RGB",
		pansharpenTypeIHS: "IHS",
		pansharpenTypeBrovey: "Brovey",
		pansharpenTypeEsri: "Esri",
		pansharpenTypeMean: "Priemer",
		pansharpenTypeGramSchmidt: "Gram-Schmidt",
		rectangleNeighborhood: "Obdĺžnik",
		circleNeighborhood: "Kruh",
		annulusNeighborhood: "Prstenec",
		wedgeNeighborhood: "Klin",
		irregularNeighborhood: "Nepravidelné",
		weightNeighborhood: "Váha",
		four: "Štyri",
		eight: "Osem",
		within: "V rámci",
		cross: "Priečne",
		addLink: "Pridať prepojenie",
		noLink: "Žiadne prepojenie",
		weightedMean: "Vážený priemer",
		ls8QCBitPatternCirrus: "Landsat 8 Cirrus",
		ls8QCBitPatternCloud: "Landsat 8 Oblak",
		ls8QCBitPatternCloudShadow: "Landsat 8 Tieň oblakov",
		ls8QCBitPatternDesignatedFill: "Landsat 8 Určená výplň",
		ls8QCBitPatternDroppedFrame: "Landsat 8 Vynechané rámy",
		ls8QCBitPatternSnowIce: "Landsat 8 Sneh/Ľad",
		ls8QCBitPatternTerrainOcclusion: "Landsat 8 Terénna oklúzia",
		ls8QCBitPatternVegetation: "Landsat 8 Vegetácia",
		ls8QCBitPatternWater: "Landsat 8 Voda",
		downStream: "Po prúde",
		upStream: "Proti prúdu",
		strahler: "STRAHLER",
		shreve: "SHREVE",
		currentSlice: "Aktuálna výseč",
		allSlices: "Všetky výseče",
		expandDistance: "VZDIALENOSŤ",
		expandMorphological: "MORFOLOGICKÉ",
		spectralProfileFile: "Spektrálny profil",
		trainingFeatureFile: "Trénovací prvok",
		randomDistributionTypeUniform: "Zjednodiť",
		randomDistributionTypeUniformInteger: "Integer",
		randomDistributionTypeNormal: "Normálne",
		randomDistributionTypeExponential: "Exponenciálne",
		randomDistributionTypePoisson: "Poisson",
		randomDistributionTypeGamma: "Gama",
		randomDistributionTypeBinomial: "Binomické",
		randomDistributionTypeGeometric: "Geometrické",
		randomDistributionTypeNegativeBinomial: "Negatívne binomické",
		randomGeneratorTypeStandardCRand: "Štandardné C Rand",
		randomGeneratorTypeAlgorithmACM599: "ACM zberaný algoritmus 599",
		randomGeneratorTypeMersenneTwister: "Mersenne Twister",
		sumName: "Súčet",
		medainName: "Medián",
		trendLinear: "Lineárny",
		trendHarmonic: "Harmonický",
		trendPolynomial: "Polynomický",
		trendMannKendall: "Mann-Kendall",
		trendSeasonalKendall: "Seasonal-Kendall",
		dimensionByValue: "Podľa hodnoty",
		dimensionByInterval: "Podľa intervalu",
		mdimDefTypeAll: "Všetky",
		mdimDefTypeByValues: "Podľa hodnôt",
		mdimDefTypeByRanges: "Podľa rozpätí",
		mdimDefTypeByIteration: "Podľa opakovania",
		mdimDefTypeByInterval: "Podľa intervalu",
		mdimDefTypeByTargetRaster: "Podľa cieľového rastra",
		esriTimeUnitsHours: "Hodiny",
		esriTimeUnitsDays: "Dni",
		esriTimeUnitsWeeks: "Týždne",
		esriTimeUnitsMonths: "Mesiace",
		esriTimeUnitsYears: "Roky",
		esriTimeIntervalKeywordHourly: "Hodinové",
		esriTimeIntervalKeywordDaily: "Denné",
		esriTimeIntervalKeywordWeekly: "Týždenné",
		esriTimeIntervalKeywordDekadly: "Desaťročné",
		esriTimeIntervalKeywordPentadly: "Päťročné",
		esriTimeIntervalKeywordMonthly: "Mesačné",
		esriTimeIntervalKeywordQuarterly: "Štvrťročné",
		esriTimeIntervalKeywordYearly: "Ročné",
		esriTimeIntervalKeywordRecurringDaily: "Opakujúce sa denne",
		esriTimeIntervalKeywordRecurringWeekly: "Opakujúce sa týždenne",
		esriTimeIntervalKeywordRecurringMonthly: "Opakujúce sa mesačne",
		esriTimeIntervalKeywordRecurringQuarterly: "Opakujúce sa štvrťročne",
		aggDefTypeAll: "Všetky",
		aggDefTypeIntervalKeyword: "Kľúčové slovo intervalu",
		aggDefTypeIntervalValue: "Hodnota intervalu",
		aggDefTypeIntervalRanges: "Rozsahy intervalu",
		latestChange: "Čas poslednej zmeny",
		earliestChange: "Čas prvej zmeny",
		largestChange: "Čas najväčšej zmeny",
		numberOfChanges: "Počet zmien",
		longestChange: "Čas najdlhšej zmeny",
		shortestChange: "Čas najkratšej zmeny",
		fastestChange: "Čas najrýchlejšej zmeny",
		slowestChange: "Čas najpomalšej zmeny",
		allChanges: "Všetky",
		increaseChanges: "Zvýšiť",
		decreaseChanges: "Znížiť",
		segmentBeginning: "Začiatok segmentu",
		segmentEnd: "Koniec segmentu",
		esriComputeChangeMethodDifference: "Rozdiel",
		esriComputeChangeMethodRelativeDifference: "Relatívny rozdiel",
		esriComputeChangeMethodCategorical: "Kategorický rozdiel",
		esriComputeChangeMethodMultispectralEuclideanDistance: "Spektrálna euklidovská vzdialenosť",
		esriComputeChangeMethodMultispectralAngularDifference: "Rozdiel spektrálneho uhla",
		esriComputeChangeMethodMultispectralAxisWithBiggestChange: "Pásmo s najväčšou zmenou",
		esriComputeChangeKeepAll: "Ponechať všetko",
		esriComputeChangeKeepChangedOnly: "Ponechať zmenené iba pixely",
		esriComputeChangeKeepUnchangedOnly: "Ponechať nezmenené iba pixely",
		esriComputeChangeUseColorAverage: "Priemer farieb Z a Do",
		esriComputeChangeUseColorFrom: "Použiť z farieb",
		esriComputeChangeUseColorTo: "Použiť na farby",
		factorFunctionBinary: "Binárny",
		factorFunctionForward: "Vpred",
		factorFunctionLinear: "Lineárny",
		factorFunctionInvLinear: "Inverzne lineárny",
		factorFunctionTable: "Tabuľka",
		factorFunctionSymLinear: "Symetricky lineárny",
		factorFunctionSymInvLinear: "Symetricky inverzne lineárny",
		factorFunctionCos: "Kosín",
		factorFunctionSec: "Sekans",
		factorFunctionCosSec: "Kosín Sekans",
		factorFunctionSecCos: "Sekans Kosín",
		noSort: "Nezoradiť",
		ascend: "Vzostupne",
		descend: "Zostupne",
		autoDetect: "Automatická detekcia",
		nearest: "Najbližší",
		linear: "Lineárny",
		esriMonthJanuary: "Január",
		esriMonthFebruary: "Február",
		esriMonthMarch: "Marec",
		esriMonthApril: "Apríl",
		esriMonthMay: "Máj",
		esriMonthJune: "Jún",
		esriMonthJuly: "Júl",
		esriMonthAugust: "August",
		esriMonthSeptember: "September",
		esriMonthOctober: "Október",
		esriMonthNovember: "November",
		esriMonthDecember: "December",
		dimensionalMovingIgnoreNoData: "Dáta",
		dimensionalMovingPropagateNoData: "NoData",
		dimensionalMovingFillOnlyNoData: "Vyplniť NoData",
		circularMean: "Kruhový priemer",
		circularName: "Kruhová",
		arithmeticName: "Aritmetická",
		slopeName: "Sklon",
		aspectName: "Orientácia georeliéfu (Aspect)",
		meanCurvature: "Priemerné zakrivenie",
		profileCurvature: "Zakrivenie profilu (normálna línia sklonu)",
		tangentialCurvature: "Tangenciálne zakrivenie (normálová vrstevnica)",
		planCurvature: "Zakrivenie tvaru roviny (projektovaná vrstevnica)",
		contourGeodesicTorsion: "Geodetická torzia vrstevnice",
		gaussianCurvature: "Gaussovské zakrivenie",
		casoratiCurvature: "Casarotiho zakrivenie",
		localSurfaceTypeQuadratic: "Kvadratický",
		localSurfaceTypeBiquadratic: "Bikvadratický",
		thresholdNoThreshold: "Žiadna prahová hodnota",
		thresholdPercentLeastCost: "Percento najnižších nákladov",
		thresholdAccumulativeCost: "Kumulatívne náklady",
		clrmapTypeHillshade: "Zatienenie"
	},
	categoryLabels: {
		sourceCharacteristics: "Zdrojové charakteristiky",
		neighborhoodSettings: "Nastavenia okolia",
		statistics: "Štatistiky",
		gamma: "Gama",
		viewshedParameters: "Parametre viditeľnosti",
		observerParameters: "Parametre pozorovateľa",
		irregularDataInterpolation: "Interpolácia nepravidelných údajov",
		modelStatistics: "Modelová štatistika",
		aggregationDef: "Definícia agregácie",
		filterByAttributes: "Filter podľa atribútov",
		percentileName: "Percentil",
		rasterInfo: "Rastrové informácie",
		extent: "Rozsah",
		spatialReference: "Priestorový referenčný systém"
	},
	outputRasterHelpTexts: {
		outputName: "<p>Názov vrstvy, ktorá sa vytvorí a pridá do mapy.</p>",
		resultType: "<p>Typ výstupu, ktorý bude vytvorený. </p>Výstupom môže byť dlaždicová snímková vrstva alebo dynamická snímková vrstva.",
		saveResultIn: "<p>Názov priečinka v časti <b>Môj obsah</b>, do ktorého sa uloží výsledok.</p>"
	},
	analysisEnvironmentsHelpTexts: {
		description: "<p>Nastavenia prostredia pre analýzu v aplikácii Map Viewer. </p>",
		outSR: "<p>Určuje súradnicový systém pre analýzy a výslednú vrstvu.</p>",
		extent: "<p>Určuje oblasť, ktorá sa použije na analýzu.</p>",
		snapRaster: "<p>Upravuje rozsah výstupu tak, aby zodpovedal zarovnaniu buniek zadanej rastrovej vrstvy na prichytenie.</p>",
		cellSize: "<p>Určuje veľkosť bunky alebo rozlíšenie, ktoré sa použije na analýzu a vytvorenie výstupnej rastrovej vrstvy.</p>",
		mask: "<p>Určuje vrstvu masky, podľa ktorej sa na analýzu použijú len bunky, ktoré spadajú do oblasti masky.</p>",
		resamplingMethod: "<p>Určuje spôsob interpolácie hodnôt pixelov, keď sa vstupné a výstupné rastre nezhodujú.</p>"
	},
	mainGenStrings: {
		unsupportedDataType: "Nepodporovaný typ",
		currentlyUnsupported: " Predvolený editor ${missingType} je v štádiu prípravy, ale čoskoro sa objaví. Dočasné zástupné textové pole na zadávanie vstupov založených na reťazcoch.",
		unsupportedOverrideWarning: "Náhradný komponent editora, ktorý poskytuje lepšie UX pre prácu s nasledujúcimi parametrami, sa pripravuje a čoskoro sa objaví:",
		overrideWidgetMissing: "Chýba náhradný komponent editora!",
		uiIncomplete: "Odoslanie úlohy zlyhalo. Funkciu nie je možné spustiť, pretože niektoré z požadovaných polí sú neúplné alebo v používateľskom rozhraní chýbajú.",
		count: "Počet",
		selectVariables: "Vybrať premenné",
		selectFeature: "Vyberte prvkovú vrstvu",
		greaterThanErrorMessage: "Vstupné číslo musí byť väčšie ako ${min}",
		lesserThanErrorMessage: "Vstupné číslo musí byť menšie ako ${max}",
		greaterThanOrEqualErrorMessage: "Vstupné číslo musí byť väčšie alebo rovné ${min}",
		lesserThanOrEqualErrorMessage: "Vstupné číslo musí byť menšie alebo rovné ${max}",
		allowScalar: "Vyberte vrstvu alebo zadajte konštantu",
		selectField: "Vyberte pole",
		parameterRequired: "Tento parameter je povinný.",
		enterAValue: "Zadajte hodnotu ...",
		invalidInput: "Zadaná hodnota nie je platná.",
		itemNotFound: "Položka neexistuje alebo je nedostupná.",
		itemPermissionDenied: "Nemáte oprávnenie na prístup k tejto položke.",
		layerNotAvailable: "Nepodarilo sa načítať vrstvu ${layerName}.",
		multipleLayersNotAvailable: "Nepodarilo sa načítať vrstvu ${layerName} a ďalšie.",
		learnMoreLabel: "Zistiť viac",
		fieldNotAvailable: "Nepodarilo sa načítať pole.",
		allowAnalysis: "Analýza nie je v snímkovej službe povolená.",
		allowAnalysisReason: "Jedna alebo viac vrstiev z mapy tu nie sú uvedené, pretože neumožňujú analýzy.",
		learnMoreText: "Zistiť viac",
		atLeastOneRasterInput: "Aspoň jedna vstupná vrstva by mala byť rastrová.",
		browseAnalysisLayers: "Prehľadať vrstvy",
		activeMapViewExtent: "Použiť aktuálny rozsah mapy",
		chooseRaster: "Vybrať raster orezania",
		chooseGeometry: "Vybrať geometriu orezania",
		resultType: "Typ výsledku",
		saveInFolder: "Uložiť do priečinku",
		outputName: "Názov výstupu",
		outputLayerType: "Typ výstupnej vrstvy",
		dynamicImageryLayer: "Dynamická snímková vrstva",
		tiledImageryLayer: "Dlaždicová snímková vrstva",
		custom: "Vlastné",
		loading: "Načítava sa...",
		layerMissing: "Jedna alebo viac vrstiev z mapy tu nie sú uvedené, pretože neumožňujú analýzy. Zistiť viac.",
		browseCoordinateSystems: "Prehľadávať súradnicové systémy",
		unableToRepopulateOutSR: "Nie je možné vyplniť výstupný súradnicový systém.",
		defaultTitle: "Zobraziť viac",
		"ARC (equal arc-second)": "ARC (rovnaká oblúková sekunda)",
		Africa: "Afrika",
		Antarctica: "Antarktída",
		Argentina: "Argentína",
		Asia: "Ázia",
		"Asteroid Belt": "Asteroidový pás",
		"Atlantic Ocean": "Atlantický oceán",
		Australia: "Austrália",
		"Australia and New Zealand": "Austrália a Nový Zéland",
		Austria: "Rakúsko",
		"BLM (US Feet)": "BLM (americké stopy)",
		Bangladesh: "Bangladéš",
		"Beijing 1954": "Peking 1954",
		Bhutan: "Bhután",
		CGCS2000: "CGCS2000",
		Canada: "Kanada",
		Caribbean: "Karibik",
		"Caribbean Sea": "Karibské more",
		"Central America": "Stredná Amerika",
		"Central and North America": "Stredná a Severná Amerika",
		Colombia: "Kolumbia",
		Continental: "Kontinentálne",
		"County Systems": "Okresné systémy",
		"Democratic Republic of the Congo": "Konžská demokratická republika",
		"EPSG Arctic": "EPSG Arktída",
		Earth: "Zem",
		"Ellipsoidal-based": "Elipsoidné",
		Europe: "Európa",
		Finland: "Fínsko",
		France: "Francúzsko",
		"GSK 2011": "GSK 2011",
		"Gauss Kruger": "Gauss Kruger",
		"Geographic Coordinate Systems": "Geografické súradnicové systémy",
		Germany: "Nemecko",
		"Gravity-related": "Gravitačné",
		"Greenwich-based": "So sídlom v Greenwichi",
		"Highways England": "Highways England",
		Illinois: "Illinois",
		"Indian Ocean": "Indický oceán",
		"Indian Subcontinent": "Indický subkontinent",
		Indiana: "Indiana",
		Indonesia: "Indonézia",
		Iowa: "Iowa",
		"Ireland and United Kingdom": "Írsko a Spojené kráľovstvo",
		Italy: "Taliansko",
		Japan: "Japonsko",
		Jupiter: "Jupiter",
		Kansas: "Kansas",
		"Las Vegas": "Las Vegas",
		Libya: "Líbya",
		Malaysia: "Malajzia",
		"Malaysia and Singapore": "Malajzia a Singapur",
		Mars: "Mars",
		Mercury: "Merkúr",
		Minnesota: "Minnesota",
		Montana: "Montana",
		"NAD 1927": "NAD 1927",
		"NAD 1927 (US Feet)": "NAD 1927 (americké stopy)",
		"NAD 1983": "NAD 1983",
		"NAD 1983 (2011)": "NAD 1983 (2011)",
		"NAD 1983 (2011) (Intl Feet)": "NAD 1983 (2011) (medzinárodné stopy)",
		"NAD 1983 (2011) (Meters)": "NAD 1983 (2011) (metre)",
		"NAD 1983 (2011) (US Feet)": "NAD 1983 (2011) (americké stopy)",
		"NAD 1983 (CORS96) (Intl Feet)": "NAD 1983 (CORS96) (medzinárodné stopy)",
		"NAD 1983 (CORS96) (Meters)": "NAD 1983 (CORS96) (metre)",
		"NAD 1983 (CORS96) (US Feet)": "NAD 1983 (CORS96) (americké stopy)",
		"NAD 1983 (Intl Feet)": "NAD 1983 (medzinárodné stopy)",
		"NAD 1983 (Meters)": "NAD 1983 (metre)",
		"NAD 1983 (PA11) (Meters)": "NAD 1983 (PA11) (metre)",
		"NAD 1983 (PA11) (US Feet)": "NAD 1983 (PA11) (americké stopy)",
		"NAD 1983 (US Feet)": "NAD 1983 (americké stopy)",
		"NAD 1983 HARN (Intl Feet)": "NAD 1983 HARN (medzinárodné stopy)",
		"NAD 1983 HARN (Meters)": "NAD 1983 HARN (metre)",
		"NAD 1983 HARN (US Feet)": "NAD 1983 HARN (americké stopy)",
		"NAD 1983 NSRS2007 (Intl Feet)": "NAD 1983 NSRS2007 (medzinárodné stopy)",
		"NAD 1983 NSRS2007 (Meters)": "NAD 1983 NSRS2007 (metre)",
		"NAD 1983 NSRS2007 (US Feet)": "NAD 1983 NSRS2007 (americké stopy)",
		"National Grids": "Národné mriežky",
		Navajo: "Navajo",
		Neptune: "Neptún",
		"New Beijing": "Nový Peking",
		"New Zealand": "Nový Zéland",
		"North America": "Severná Amerika",
		"Northern Hemisphere": "Severná hemisféra",
		Norway: "Nórsko",
		Oceans: "Oceány",
		Oregon: "Oregon",
		"Other GCS": "Ostatné GCS",
		"Pacific Ocean": "Tichý oceán",
		Pluto: "Pluto",
		Polar: "Polárne",
		Portugal: "Portugalsko",
		"Projected Coordinate Systems": "Rovinné súradnicové systémy",
		"Pulkovo 1942": "Pulkovo 1942",
		"Pulkovo 1995": "Pulkovo 1995",
		Replaced: "Nahradené",
		"SAD 1969": "SAD 1969",
		SIRGAS: "SIRGAS",
		"SIRGAS 2000": "SIRGAS 2000",
		Saturn: "Saturn",
		"Solar System": "Slnečná sústava",
		"South Africa": "Južná Afrika",
		"South America": "Južná Amerika",
		"South Korea": "Kórejská republika",
		"Southern Hemisphere": "Južná hemisféra",
		"Spheroid-based": "Sféroidné",
		"State Plane": "Štátna rovina",
		"State Systems": "Štátne systémy",
		Sweden: "Švédsko",
		"Switzerland and Liechtenstein": "Švajčiarsko a Lichtenštajnsko",
		Texas: "Texas",
		Tribal: "Kmeňové",
		Turkey: "Turecko",
		"US Feet": "Americké stopy",
		"USA and territories": "USA a teritóriá",
		UTM: "UTM",
		Ukraine: "Ukrajina",
		"Unknown Height Systems": "Neznáme výškové systémy",
		Uranus: "Urán",
		Venus: "Venuša",
		"Vertical Coordinate Systems": "Vertikálne súradnicové systémy",
		Vietnam: "Vietnam",
		"WGS 1972": "WGS 1972",
		"WGS 1984": "WGS 1984",
		Wisconsin: "Wisconsin",
		"Wisconsin CRS": "Wisconsin CRS",
		World: "Svet",
		"World (Sphere-based)": "Svet (sféroidné)",
		Wyoming: "Wyoming",
		"Xian 1980": "Xian 1980",
		done: "Hotovo",
		noResults: "Neboli nájdené žiadne výsledky",
		searchPlaceholder: "Názov alebo WKID",
		browseTemplate: "Prechádzať šablóny rastrových funkcií",
		saveTemplate: "Uložiť šablónu rastrovej funkcie",
		preview: "Náhľad",
		previewDescription: "Náhľad výsledku pred spustením analýzy.",
		showPreview: "Zobraziť náhľad",
		previewLayer: "Vrstva náhľadu ${number}",
		newPreview: "Nový náhľad",
		previewPopup: "Povoliť náhľad výsledkov analýzy na základe vstupných parametrov.",
		updatePreviewLayer: "Aktualizovať vybranú vrstvu náhľadu",
		createPreviewLayer: "Vytvoriť novú vrstvu náhľadu",
		maximumPreviewAllowed: "Maximálny povolený počet vrstiev náhľadu: ${maxCount}",
		previewFailure: "Táto vrstva náhľadu nie je k dispozícii. Skontrolujte vstupné parametre a znovu aktualizujte túto vrstvu náhľadu.",
		header: "Vybrať položku",
		content: "Máte neuložené zmeny v ${rftTitle}. Ak začnete znova s novou šablónou, tieto zmeny sa stratia.",
		dontSave: "Neuložiť",
		"continue": "Pokračovať",
		stretch: "Prispôsobiť oknu",
		pan: "Posunúť",
		newTemplate: "Vytvoriť novú šablónu",
		openTemplate: "Otvoriť šablónu",
		addFunction: "Pridať rastrové funkcie",
		addConstant: "Pridať konštantu",
		addRaster: "Pridať rastrovú premennú",
		move: "Presunúť",
		zoom: "Priblížiť",
		saveAs: "Uložiť ako",
		clear: "Vyčistiť",
		addRasterFunctionTitle: "Pridať rastrové funkcie",
		templatePropertiesTitle: "Vlastnosti šablóny",
		browseRFT: "Prechádzať šablóny rastrových funkcií",
		defaultToolDescription: "${toolTitle} analytický nástroj.",
		openToolText: "Otvoriť nástroj",
		toolDropdownText: "Rozbaľovacia ponuka nástroja",
		addToMap: "Potvrdiť a pridať do mapy",
		confirm: "Potvrdiť",
		select: "Vybrať",
		selectTask: "Vybrať úlohu",
		unsupportedLayer: "Tento parameter nepodporuje nasledujúce vrstvy: ${layerName}.",
		viewDetails: "Zobraziť úplné podrobnosti položky",
		rename: "Premenovať",
		duplicate: "Duplikovať",
		launch: "Otvoriť na spustenie",
		templateEditor: "Editor šablón",
		createItem: "Uložiť šablónu rastrovej funkcie",
		actionLabel: "Filter",
		filterPopoverHeading: "Filtrovať funkcie",
		defaultSearchPlaceholder: "Vyhľadávanie podľa názvu",
		settings: "Nastavenia",
		summary: "Sumarizácia",
		definitionQuery: "Definičný dopyt",
		matchVariables: "Zodpovedajúce premenné",
		unionDimension: "Zjednotenie dimenzie",
		nameEditorPlaceholder: "Zadajte názov",
		summaryEditorPlaceholder: "Zadajte krátky popis.",
		definitionQueryPlaceholder: "Zadajte...",
		upload: "Nahrať",
		chooseImage: "Kliknutím vyberte súbor",
		update: "Aktualizovať",
		thumbnailErrors: {
			wrongImageType: "Je zvolený nesprávny typ snímky",
			notAvailable: "Miniatúra nie je k dispozícii",
			loadError: "Snímku nebolo možné načítať",
			chooseFile: "Kliknite na voľbu súboru"
		}
	}
};
const copy = "Kopírovať";
const save = "Uložiť";
const title = "Názov";
const folder = "Priečinok";
const tags = "Štítky";
const savingMessage = "Ukladanie položky do";
const shareWith = "Zdielať s";
const share = "Zdieľať";
const setSharingLevel = "Nastaviť úroveň zdieľania";
const setGroupSharing = "Nastaviť skupinové zdieľanie";
const owner = "Vlastník";
const organization = "Organizácia";
const everyone = "Všetci (verejnosť)";
const groups = "Skupiny:";
const type = "Typ";
const mosaic = "Mozaika";
const itemGroup = "Skupina položiek";
const item = "Položka";
const definitionQuery = "Definičný dopyt";
const groupItemsBy = "Zoskupiť položky podľa";
const groupFieldName = "Názov poľa pre zoskupenie";
const tagFieldName = "Názov poľa pre štítky";
const noTitleTagErrorMsg = "Pre vašu položku musíte zadať názov a štítky, aby ste vašu mapu mohli nájsť pri vyhľadávaní.";
const noTitleErrorMsg = "Musíte zadať názov svojej položky.";
const noTagErrorMsg = "Musíte poskytnúť aspoň jeden štítok, aby ste ľuďom pomohli nájsť vašu položku pri vyhľadávaní.";
const error = "Chyba";
const warning = "Upozornenie";
const success = "Úspech";
const details = "Podrobnosti:";
const tryAgain = "Skúste to znova";
const toolModeler = {
	save: "Uložiť",
	editProperties: "Upraviť vlastnosti",
	saveAs: "Uložiť ako",
	savingNotification: "Ukladanie zmien položky",
	savingTitle: "Ukladá sa",
	saveFailedMessage: "Zmeny sa nepodarilo uložiť.",
	saveWithErrorsMessage: "Zmeny sa uložili s nasledovnými chybami.",
	viewItemMessage: "Zobraziť uloženú položku",
	here: "tu.",
	itemCreatedMessage: "Bola vytvorená nová položka.",
	clickToViewItemMessage: "Kliknutím na tlačidlo OK zobrazíte stránku s podrobnosťami o položke; pre pokračovanie kliknite na tlačidlo Zrušiť.",
	readingFailed: "Zvolenú šablónu rastrovej funkcie sa nepodarilo načítať.",
	failedToLoadXML: "Nepodarilo sa načítať vybranú šablónu rastrovej funkcie vo formáte XML.",
	learnMore: "Zistiť viac",
	overwriteTitle: "Potvrdiť prepísanie",
	overwriteMessage: "Chcete prepísať existujúcu položku?",
	overwriteSuccessMessage: "Položka bola aktualizovaná."
};
const toolEditor = {
	run: "Spustiť",
	save: "Uložiť",
	deleteSelected: "Zmazať zvolené položky",
	addRaster: "Pridať raster",
	addScalar: "Pridať skalár",
	layout: "Auto rozvrhnutie",
	errorTitle: "Chyba",
	invalidToolMessage: "Šablóna rastrovej funkcie nie je platná.",
	out: "Von",
	zoomIn: "Priblížiť",
	zoomOut: "Oddialiť",
	zoomToFit: "Prispôsobiť oknu",
	panOn: "Prepnúť do režimu posunu",
	panOff: "Vypnúť režim posunu",
	defaultModelName: "Model nástroja",
	defaultRasterName: "Raster"
};
const toolDetailsEditor = {
	defaultToolName: "Šablóna rastrovej funkcie",
	defaultToolDescription: "Pridať krátke zhrnutie rastrovej funkcie.",
	defaultHelpText: "Kliknite na ikonu pomoci pre editáciu textu pomocníka",
	editHelpTitle: "Editovať Pomocníka",
	saveLabel: "Uložiť",
	cancelLabel: "Zrušiť",
	thumbnail: {
		wrongImageType: "Je zvolený nesprávny typ snímky",
		notAvailable: "Miniatúra nie je k dispozícii",
		loadError: "Snímku nebolo možné načítať",
		chooseFile: "Kliknite na voľbu súboru"
	}
};
const saveUtils = {
	thumbnail: "Miniatúra",
	sharing: "Zdieľanie"
};
const close = "Zatvoriť";
const unsavedWarningExisting = "Chcete uložiť zmeny položky <b>${itemTitle}</b>?";
const unsavedWarningNew = "Chcete uložiť svoje zmeny?";
const saveAs = "Uložiť ako";
const dontSave = "Neukladať";
const unsavedTitle = "Neuložené zmeny";
const invalidRFTMessage = "Vytvorená šablóna rastrovej funkcie nie je platná.";
const errorTitle = "Chyba";
const breadcrumb = "Editor rastrových funkcií";
const breadcrumbEditor = "Obsah > Editor rastrových funkcií";
const viewerModeTitle = "Iba na čítanie";
const viewerModeMessage = "Položka šablóny rastrovej funkcie je iba na čítanie. Zmeny nemôžu byť uložené.";
const userStartDirection = "Vyberte funkciu pre začatie zostavovania šablóny rastrovej funkcie.";
const selectFunction = "Pridať funkciu";
const deselectFunction = "Odobrať funkciu";
const dialogTitle = "Systém";
const category = "Kategórie";
const search = "Prehľadávať rastrové funkcie";
const categoryNames = {
	analysis: "Analýza",
	appearance: "Vzhľad",
	classification: "Klasifikácia",
	conversion: "Konverzia",
	correction: "Korekcia",
	dataManagement: "Správa údajov",
	distance: "Vzdialenosť",
	distanceLegacy: "Vzdialenosť (staršia metóda)",
	hydrology: "Hydrológia",
	math: "Matematika",
	mathConditional: "Matematika: Podmienené funkcie",
	mathLogical: "Matematika: Logické funkcie",
	mathTrigonometric: "Matematika: Trigonometrické funkcie",
	reclass: "Reklasifikácia",
	statistical: "Štatistická",
	surface: "Povrch"
};
const commonStrings_sk = {
	ok: ok,
	cancel: cancel,
	enterURL: enterURL,
	serviceURL: serviceURL,
	selectRaster: selectRaster,
	failedToLoadLayer: failedToLoadLayer,
	loadingLayer: loadingLayer,
	selectFeature: selectFeature,
	enterFURL: enterFURL,
	addRaster: addRaster,
	addScalar: addScalar,
	raster: raster,
	scalar: scalar,
	defaultModelName: defaultModelName,
	general: general,
	parameters: parameters,
	variables: variables,
	name: name,
	description: description,
	parameter: parameter,
	isPublic: isPublic,
	isDataset: isDataset,
	unknownPixelType: unknownPixelType,
	outputPixelType: outputPixelType,
	u8PixelType: u8PixelType,
	s8PixelType: s8PixelType,
	u16PixelType: u16PixelType,
	s16PixelType: s16PixelType,
	u32PixelType: u32PixelType,
	s32PixelType: s32PixelType,
	f32PixelType: f32PixelType,
	f64PixelType: f64PixelType,
	properties: properties,
	multidimensionalRules: multidimensionalRules,
	matchVariables: matchVariables,
	unionDimensions: unionDimensions,
	rasterFunctionEditor: rasterFunctionEditor,
	rfxLicenseInfo: rfxLicenseInfo,
	rasterFunctions: rasterFunctions,
	copy: copy,
	save: save,
	title: title,
	folder: folder,
	tags: tags,
	savingMessage: savingMessage,
	shareWith: shareWith,
	share: share,
	setSharingLevel: setSharingLevel,
	setGroupSharing: setGroupSharing,
	owner: owner,
	organization: organization,
	everyone: everyone,
	groups: groups,
	type: type,
	mosaic: mosaic,
	itemGroup: itemGroup,
	item: item,
	definitionQuery: definitionQuery,
	groupItemsBy: groupItemsBy,
	groupFieldName: groupFieldName,
	tagFieldName: tagFieldName,
	noTitleTagErrorMsg: noTitleTagErrorMsg,
	noTitleErrorMsg: noTitleErrorMsg,
	noTagErrorMsg: noTagErrorMsg,
	error: error,
	warning: warning,
	success: success,
	details: details,
	tryAgain: tryAgain,
	toolModeler: toolModeler,
	toolEditor: toolEditor,
	toolDetailsEditor: toolDetailsEditor,
	saveUtils: saveUtils,
	close: close,
	unsavedWarningExisting: unsavedWarningExisting,
	unsavedWarningNew: unsavedWarningNew,
	saveAs: saveAs,
	dontSave: dontSave,
	unsavedTitle: unsavedTitle,
	invalidRFTMessage: invalidRFTMessage,
	errorTitle: errorTitle,
	breadcrumb: breadcrumb,
	breadcrumbEditor: breadcrumbEditor,
	viewerModeTitle: viewerModeTitle,
	viewerModeMessage: viewerModeMessage,
	userStartDirection: userStartDirection,
	selectFunction: selectFunction,
	deselectFunction: deselectFunction,
	dialogTitle: dialogTitle,
	category: category,
	search: search,
	categoryNames: categoryNames
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (commonStrings_sk);


//# sourceMappingURL=common-strings.sk-27eca00b.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,