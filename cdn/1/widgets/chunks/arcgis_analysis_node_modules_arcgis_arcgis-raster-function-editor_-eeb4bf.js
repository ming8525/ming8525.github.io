"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-eeb4bf"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-weighted-sum-table-editor-b4008d36.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-weighted-sum-table-editor-b4008d36.js ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   R: () => (/* binding */ RfxCteWeightedSumTableEditor)
/* harmony export */ });
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./sanitize-number-d84114f7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");




















const component = "rfx-cte-weighted-sum-table-editor";
const HTMLClasses = {
    grid: `${component}__grid`,
    layerColumn: `${component}__layer-column`,
    fieldColumn: `${component}__field-column`,
    weightColumn: `${component}__weight-column`
};
const HelpClickHandlerKeys = {
    weightedSumTableHelpClickHandler: "weightedSumTableHelpClickHandler"
};

const rfxCteWeightedSumTableEditorCss = ":root{--calcite-color-brand:#007ac2;--calcite-color-brand-hover:#00619b;--calcite-color-brand-press:#004874;--calcite-color-status-info:#00619b;--calcite-color-status-success:#35ac46;--calcite-color-status-warning:#edd317;--calcite-color-status-danger:#d83020;--calcite-color-status-danger-hover:#a82b1e;--calcite-color-status-danger-press:#7c1d13;--calcite-color-background:#f8f8f8;--calcite-color-foreground-1:#ffffff;--calcite-color-foreground-2:#f3f3f3;--calcite-color-foreground-3:#eaeaea;--calcite-color-text-1:#151515;--calcite-color-text-2:#4a4a4a;--calcite-color-text-3:#6a6a6a;--calcite-color-text-inverse:#ffffff;--calcite-color-text-link:#00619b;--calcite-color-border-1:#cacaca;--calcite-color-border-2:#d4d4d4;--calcite-color-border-3:#dfdfdf;--calcite-color-border-input:#949494;--rfx-quarter-spacing:0.25rem;--rfx-half-spacing:0.5rem;--rfx-three-quarter-spacing:0.75rem;--rfx-full-spacing:1rem;--rfx-component-default-width:100%;--rfx-ui-border-input:var(--calcite-color-border-2);--rfx-popover-content-min-height:30vh;--rfx-popover-content-max-height:60vh;--rfx-popover-content-height:45vh;--rfx-widget-content-height:30vh}.rfx-cte-weighted-sum-table-editor__grid table{width:100%;table-layout:fixed}.rfx-cte-weighted-sum-table-editor__grid table thead tr th:first-child{width:7%}.rfx-cte-weighted-sum-table-editor__grid table thead tr th:last-child{width:7%}.rfx-cte-weighted-sum-table-editor__grid table tbody tr td:first-child{width:7%}.rfx-cte-weighted-sum-table-editor__grid table tbody tr td:last-child{width:7%}.rfx-cte-weighted-sum-table-editor__layer-column{width:40%}.rfx-cte-weighted-sum-table-editor__field-column{width:30%}.rfx-cte-weighted-sum-table-editor__weight-column{width:16%}";

const RfxCteWeightedSumTableEditor = class {
    constructor(hostRef) {
        (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.rfxArgumentChange = (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "rfxArgumentChange", 7);
        /**
         * Stores event handlers for help action click, stored in connected callback to avoid
         * fetching function on each render ( to avoid common bad practice )
         */
        this.helpActionClickEventHandlers = new Map();
        this.updateValue = (event) => {
            const { detail: { gridOptions } } = event;
            const { inputArgs } = this.widgetArgs;
            if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(gridOptions) || (0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(inputArgs)) {
                return;
            }
            const rastersValueElements = [], fieldsValue = [], weightsValue = [];
            gridOptions.forEach((dataObj, id) => {
                if (id === gridOptions.length - 1) {
                    return; // last is a placeholder
                }
                const { layer, field, weight } = dataObj;
                rastersValueElements.push(layer);
                fieldsValue.push(field);
                weightsValue.push((0,_sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_16__.p)(weight));
            });
            // Set inputArgs for Raster Function Template
            const rasters = inputArgs.Rasters, fields = inputArgs.Fields, weights = inputArgs.Weights;
            if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(rasters.value)) {
                rasters.value = { elements: rastersValueElements, type: "ArgumentArray" };
            }
            else {
                rasters.value.elements = rastersValueElements;
            }
            fields.value = fieldsValue;
            weights.value = weightsValue;
        };
        this.gridSchema = {
            canAdd: true,
            gridLayout: {},
            gridOptions: [],
            hasBorder: true,
            hasHeader: true,
            hasIdColumn: true
        };
        this.widgetArgs = undefined;
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentWillLoad() {
        ({ strings: this.strings, dir: this.direction } = await (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_2__.b)(this.hostElement, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.g)(".")));
        this.initGrid();
    }
    componentDidLoad() {
        this.attachHelpClickEventHandlers();
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    /**
     * Creates an array of data objects as grid options based on the input arguments.
     * @returns {Object[]} The result array of data objects as grid options.
     */
    createGridOptions() {
        const { inputArgs } = this.widgetArgs;
        if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(inputArgs)) {
            return;
        }
        let dataLength = 0, idx = 0;
        const dataObjs = [], rasters = inputArgs.Rasters, fields = inputArgs.Fields, weights = inputArgs.Weights;
        const rasterElements = rasters.value?.elements ?? rasters.value ?? [];
        if (!(0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(rasters) && !(0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(fields) && !(0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(weights)) {
            dataLength = Math.max(rasterElements?.length, fields.value?.length || 0, weights.value?.length || 0);
        }
        if (dataLength === 0 || isNaN(dataLength)) {
            // add a blank object
            dataObjs.push({
                id: 0
            });
        }
        if (dataLength > 0 && ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(weights.value) || weights.value.length < dataLength)) {
            //if data is there (i.e. a raster is connected) and the weights array is empty, add a default value of 1 as in Pro.
            let i = 0;
            const weightDefault = weights.value ?? [];
            while (i < dataLength) {
                if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(weights.value?.[i])) {
                    weightDefault.push(1);
                }
                i++;
            }
            weights.value = weightDefault;
        }
        while (idx < dataLength) {
            dataObjs.push({
                id: idx,
                layer: rasterElements?.[idx],
                field: fields.value?.[idx],
                weight: weights.value?.[idx]
            });
            idx++;
        }
        return dataObjs;
    }
    initGrid() {
        const gridLayout = {
            layer: {
                allowScalar: false,
                label: this.strings.layer,
                uiType: _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_5__.G.raster,
                style: HTMLClasses.layerColumn
            },
            field: {
                label: this.strings.field,
                uiType: _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_5__.G.field,
                style: HTMLClasses.fieldColumn
            },
            weight: {
                label: this.strings.weight,
                uiType: _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_5__.G.number,
                style: HTMLClasses.weightColumn
            }
        };
        const gridOptions = this.createGridOptions();
        this.gridSchema = {
            ...this.gridSchema,
            gridLayout,
            gridOptions
        };
    }
    attachHelpClickEventHandlers() {
        const weightedSumTableHelpClickHandler = this.widgetArgs.onHelpActionClick({
            heading: this.strings.weightedSumTable,
            referenceElement: this.weightedSumTableElement,
            helpTextID: this.widgetArgs.helpTextIDs?.weightedsum_weightedsumtable
        });
        this.helpActionClickEventHandlers.set(HelpClickHandlerKeys.weightedSumTableHelpClickHandler, weightedSumTableHelpClickHandler);
    }
    render() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { alignment: "start", scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__.U.Scale, layout: "default", ref: (e) => {
                this.weightedSumTableElement = e;
            } }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-label", { label: this.strings.weightedSumTable, onRfxLabelHelpActionClick: () => this.helpActionClickEventHandlers?.get(HelpClickHandlerKeys.weightedSumTableHelpClickHandler)() }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-grid", { canAdd: this.gridSchema.canAdd, class: HTMLClasses.grid, gridLayout: this.gridSchema.gridLayout, gridOptions: this.gridSchema.gridOptions, hasBorder: this.gridSchema.hasBorder, hasHeader: this.gridSchema.hasHeader, hasIdColumn: this.gridSchema.hasIdColumn, inputLayers: this.widgetArgs.inputLayers, onRfxGridOptionChange: this.updateValue, rfxBrowseLayerClick: this.widgetArgs.onRfxBrowseLayerClick }))));
    }
    static get assetsDirs() { return ["t9n"]; }
    get hostElement() { return (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.a)(this); }
};
RfxCteWeightedSumTableEditor.style = rfxCteWeightedSumTableEditorCss;



//# sourceMappingURL=rfx-cte-weighted-sum-table-editor-b4008d36.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-weighted-sum-table-editor.entry.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-weighted-sum-table-editor.entry.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   rfx_cte_weighted_sum_table_editor: () => (/* reexport safe */ _rfx_cte_weighted_sum_table_editor_b4008d36_js__WEBPACK_IMPORTED_MODULE_0__.R)
/* harmony export */ });
/* harmony import */ var _rfx_cte_weighted_sum_table_editor_b4008d36_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rfx-cte-weighted-sum-table-editor-b4008d36.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-weighted-sum-table-editor-b4008d36.js");
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _getTag_96af029d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_getTag-96af029d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/_getTag-96af029d.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./sanitize-number-d84114f7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");






















//# sourceMappingURL=rfx-cte-weighted-sum-table-editor.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js":
/*!************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ formatNumberToLocale),
/* harmony export */   f: () => (/* binding */ formatNumber),
/* harmony export */   i: () => (/* binding */ isValidNumber),
/* harmony export */   p: () => (/* binding */ parseNumber),
/* harmony export */   s: () => (/* binding */ sanitizeNumber)
/* harmony export */ });
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");



/**
 * Indicates if a provided number value is valid.
 * An invalid value is: undefined | NaN | Infinite | -Infinite | null
 * See for more details:
 *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite
 *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN
 * @param {number | undefined | null} value value to check
 * @returns {boolean} if valid or not
 */
function isValidNumber(value) {
    return value !== undefined && value !== null && Number.isNaN(value) === false && Number.isFinite(value) === true;
}
/**
 * Returns a string representation of the provided number for use with calcite-input. It also
 * guards against invalid types following this logic:
 *   - If the value is valid (not NaN, finite), the value is returned as a string
 *   - If not and if a valid default value is provided, the default value is returned as a string
 *   - If not, an empty string is returned
 * @param value
 * @param defaultValue
 * @returns a sanitized string
 */
function sanitizeNumber(value, defaultValue) {
    let returnedValue;
    if (value !== null) {
        const testedValue = typeof value === "string" ? Number.parseFloat(value) : value;
        if (isValidNumber(testedValue))
            returnedValue = testedValue;
        else if (isValidNumber(defaultValue))
            returnedValue = defaultValue;
    }
    return returnedValue === undefined ? "" : `${returnedValue}`;
}
/**
 * Parses a value string to a number for use with calcite-input. If the string is empty, it will return undefined.
 * If the string is otherwise invalid, it will return NaN.
 * @param value calcite-input value
 * @returns {number | undefined} the parsed number
 */
function parseNumber(value) {
    if (value === "")
        return undefined;
    return Number.parseFloat(value);
}
/**
 * Formats a number to a specified number of decimal places.
 *
 * @param {number} value - The number to format.
 * @param {number} [fractionDigits=3] - The number of decimal places to include in the formatted number. Defaults to 3.
 * @returns {number|undefined} - The formatted number, or undefined if the input value is empty.
 */
function formatNumber(value, fractionDigits = 3) {
    if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__.i)(value))
        return undefined;
    return Number.parseFloat(value.toFixed(fractionDigits));
}
/**
 * Formats a number or string representing a number according to the locale, passing Intl number format options
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/ReferenceGlobal_Objects/Intl/NumberFormat/NumberFormat#options
 * @param {number | string | undefined} value to be formatted and localized
 * @param {Intl.NumberFormatOptions} formatOptions options object matching Intl.NumberFormat
 * @returns {string} localized / rounded string
 */
function formatNumberToLocale(value, formatOptions) {
    let formattedValue = "";
    if (!(0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__.i)(value) && !Number.isNaN(value)) {
        const localeCode = (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.g)().locale;
        formattedValue = Intl.NumberFormat(localeCode, formatOptions).format(Number(value));
    }
    return formattedValue;
}



//# sourceMappingURL=sanitize-number-d84114f7.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js":
/*!*****************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CalciteScale),
/* harmony export */   U: () => (/* binding */ UIDefaults),
/* harmony export */   a: () => (/* binding */ CalciteOverlayPositioning)
/* harmony export */ });
const UIDefaults = {
    Scale: "s",
    PopoverTimer: 60
};
const CalciteScale = {
    s: "s",
    m: "m"
};
const CalciteOverlayPositioning = {
    absolute: "absolute",
    fixed: "fixed"
};



//# sourceMappingURL=ui-utils-928a4096.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,