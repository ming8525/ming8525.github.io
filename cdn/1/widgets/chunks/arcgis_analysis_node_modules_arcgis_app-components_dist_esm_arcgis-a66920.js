"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-a66920"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-3f264d56.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-3f264d56.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ canMatchField),
/* harmony export */   g: () => (/* binding */ getAppendParameters)
/* harmony export */ });
/* harmony import */ var _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-item-dbbe2f57.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js");
/* harmony import */ var _append_4e11032c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./append-4e11032c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-4e11032c.js");
/* harmony import */ var _geocode_64e0b0d3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./geocode-64e0b0d3.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/geocode-64e0b0d3.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */





var __rest = ( false) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
function canMatchField(field, matchField) {
    var _a;
    const fieldType = (field === null || field === void 0 ? void 0 : field.type) || null;
    const matchFieldType = (matchField === null || matchField === void 0 ? void 0 : matchField.type) || null;
    const matchFields = {
        esriFieldTypeSmallInteger: ["esriFieldTypeSmallInteger"],
        esriFieldTypeInteger: ["esriFieldTypeInteger", "esriFieldTypeSmallInteger"],
        esriFieldTypeSingle: ["esriFieldTypeSingle", "esriFieldTypeDouble"],
        esriFieldTypeDouble: [
            "esriFieldTypeDouble",
            "esriFieldTypeSingle",
            "esriFieldTypeInteger",
            "esriFieldTypeSmallInteger"
        ],
        esriFieldTypeDate: ["esriFieldTypeDate"],
        esriFieldTypeString: [
            "esriFieldTypeString",
            "esriFieldTypeSmallInteger",
            "esriFieldTypeInteger",
            "esriFieldTypeSingle",
            "esriFieldTypeDouble",
            "esriFieldTypeDate",
            "esriFieldTypeGUID"
        ],
        esriFieldTypeGUID: ["esriFieldTypeGUID", "esriFieldTypeString"],
        esriFieldTypeOID: ["esriFieldTypeOID", "esriFieldTypeSmallInteger", "esriFieldTypeInteger"],
        esriFieldTypeGlobalID: ["esriFieldTypeGlobalID", "esriFieldTypeGUID", "esriFieldTypeString"],
        esriFieldTypeDateOnly: ["esriFieldTypeDateOnly"],
        esriFieldTypeTimeOnly: ["esriFieldTypeTimeOnly"],
        esriFieldTypeTimestampOffset: ["esriFieldTypeTimestampOffset"],
        esriFieldTypeBigInteger: ["esriFieldTypeBigInteger"]
    };
    return matchFieldType && (matchFieldType === fieldType || ((_a = matchFields[fieldType]) === null || _a === void 0 ? void 0 : _a.indexOf(matchFieldType)) > -1);
}
function getAppendParameters(addItemProps) {
    var _a;
    const { timezone, analyzeResults, type, fieldMappings, dataLayer, id, uidPair, addAppendSelectOption, sourceDataLayer } = addItemProps;
    let finalAppendParameters, appendSourceInfo;
    const { publishParameters } = analyzeResults, rest = __rest(analyzeResults, ["publishParameters"]);
    const upsert = addAppendSelectOption === "upsert" || addAppendSelectOption === "update";
    const finalFieldMappings = formatFieldMappings(fieldMappings);
    const appendFields = createAppendFields(finalFieldMappings);
    const timezoneInfo = {
        dateFieldsTimeReference: {
            timeZone: timezone || "UTC",
            respectsDaylightSaving: true
        }
    };
    const defaultAppendParams = {
        sourceTableName: dataLayer.name,
        fieldMappings: (finalFieldMappings === null || finalFieldMappings === void 0 ? void 0 : finalFieldMappings.length) ? JSON.stringify(finalFieldMappings) : null,
        upsert,
        skipInserts: addAppendSelectOption === "update",
        skipUpdates: false,
        useGlobalIds: upsert && (uidPair === null || uidPair === void 0 ? void 0 : uidPair.type) === "esriFieldTypeGlobalID",
        updateGeometry: upsert ? _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_0__.a.addAppendSelectUpdateTypeOption === "attributeAndGeometry" : true,
        appendFields: appendFields.length ? JSON.stringify(appendFields) : null,
        appendItemId: id,
        appendUploadFormat: _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_3__.a[_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_0__.a.type].appendUploadFormat,
        rollbackOnFailure: true
    };
    const publishInfo = __rest(publishParameters, ["layers"]);
    if (type === "CSV") {
        publishParameters.layerInfo.dateFieldsTimeReference = timezoneInfo.dateFieldsTimeReference;
        appendSourceInfo = Object.assign(Object.assign(Object.assign({}, timezoneInfo), publishParameters), rest);
    }
    else if (type === "Microsoft Excel") {
        const layerInfo = (0,_geocode_64e0b0d3_js__WEBPACK_IMPORTED_MODULE_2__.a)({}, true);
        const formattedLayerInfo = getLayerToAppend(layerInfo, publishInfo); //Updated info needs to be added to the layers [] rather than the root for excel
        formattedLayerInfo.dateFieldsTimeReference = timezoneInfo.dateFieldsTimeReference;
        publishInfo.name = dataLayer.name;
        appendSourceInfo = Object.assign(Object.assign(Object.assign(Object.assign({}, timezoneInfo), { layers: [formattedLayerInfo] }), publishInfo), rest);
    }
    else {
        appendSourceInfo = Object.assign(Object.assign(Object.assign({}, timezoneInfo), publishParameters), rest);
    }
    finalAppendParameters = Object.assign(Object.assign({}, defaultAppendParams), { appendSourceInfo: JSON.stringify(appendSourceInfo) });
    if (addAppendSelectOption === "add") {
        finalAppendParameters.upsertMatchingField = sourceDataLayer.objectIdField || ((_a = sourceDataLayer.uniqueField) === null || _a === void 0 ? void 0 : _a.name);
    }
    else {
        if (upsert && (uidPair === null || uidPair === void 0 ? void 0 : uidPair.isUniqueIndex)) {
            finalAppendParameters.upsertMatchingField = uidPair === null || uidPair === void 0 ? void 0 : uidPair.name;
        }
    }
    return finalAppendParameters;
}
function getLayerToAppend(layerInfo, updatedInfo) {
    const formattedLayer = Object.assign({}, layerInfo);
    formattedLayer.locationType = updatedInfo.locationType;
    if (formattedLayer.locationType === "address") {
        formattedLayer.addressFields = updatedInfo.addressFields;
        formattedLayer.sourceCountry = updatedInfo.sourceCountry;
    }
    else if (formattedLayer.locationType === "coordinates") {
        formattedLayer.coordinateFieldType = updatedInfo.coordinateFieldType;
        if (formattedLayer.coordinateFieldType === "LatitudeAndLongitude") {
            formattedLayer.latitudeFieldName = updatedInfo.latitudeFieldName;
            formattedLayer.longitudeFieldName = updatedInfo.longitudeFieldName;
        }
        else {
            formattedLayer.coordinateFieldName = updatedInfo.coordinateFieldName;
        }
    }
    return formattedLayer;
}
function formatFieldMappings(fieldMappings) {
    const fields = fieldMappings.filter((fieldMapping) => {
        return fieldMapping.source !== _append_4e11032c_js__WEBPACK_IMPORTED_MODULE_1__.N;
    });
    const finalFieldMappings = fields.map(({ source, name }) => {
        return { source, name };
    });
    return finalFieldMappings;
}
function createAppendFields(fieldMappings) {
    const appendFields = fieldMappings.map((mapping) => {
        return mapping.name;
    });
    return appendFields;
}



//# sourceMappingURL=append-3f264d56.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-4e11032c.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-4e11032c.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ AppendOverwriteCloudPublishTypes),
/* harmony export */   N: () => (/* binding */ NONE_VALUE),
/* harmony export */   a: () => (/* binding */ appendFileTypes),
/* harmony export */   b: () => (/* binding */ AppendOverwritePublishTypes),
/* harmony export */   c: () => (/* binding */ appendExtensionsForEnterprise),
/* harmony export */   d: () => (/* binding */ appendExtensions),
/* harmony export */   u: () => (/* binding */ uidFields)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */
const uidFields = ["esriFieldTypeOID", "esriFieldTypeGlobalID"];
const NONE_VALUE = "<None>";
const AppendOverwritePublishTypes = {
    "file geodatabase": "filegeodatabase",
    shapefile: "shapefile",
    geojson: "geojson",
    csv: "CSV",
    "microsoft excel": "excel",
    geopackage: "geoPackage"
};
const appendFileTypes = {
    Shapefile: "shapefile",
    "File Geodatabase": "fileGeodatabase",
    CSV: "csv",
    "Microsoft Excel": "excel",
    GeoJson: "geojson",
    GeoPackage: "geoPackage"
};
const AppendOverwriteCloudPublishTypes = {
    csv: "CSV",
    excel: "Microsoft Excel",
    shapefile: "Shapefile",
    fgdb: "File Geodatabase",
    geojson: "GeoJson",
    googlesheets: "Microsoft Excel"
};
const appendExtensions = ["zip", "csv", "xls", "xlsx", "geojson", "gpkg", "json"];
const appendExtensionsForEnterprise = ["zip", "csv", "xls", "xlsx"];



//# sourceMappingURL=append-4e11032c.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-5bb9576c.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-5bb9576c.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ append)
/* harmony export */ });
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _append_3f264d56_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./append-3f264d56.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-3f264d56.js");
/* harmony import */ var _feature_layer_573bb473_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./feature-layer-573bb473.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-573bb473.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */




async function append(addItemProps) {
    var _a;
    const appendParameters = (0,_append_3f264d56_js__WEBPACK_IMPORTED_MODULE_1__.g)(addItemProps);
    const serviceUrl = (_a = addItemProps.existingItem) === null || _a === void 0 ? void 0 : _a.url;
    const appendUrl = `${serviceUrl}/${addItemProps.sourceDataLayer.id}/append`;
    try {
        const appendResponse = (await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(appendUrl, appendParameters, {}, "post"));
        const { status, recordCount } = await (0,_feature_layer_573bb473_js__WEBPACK_IMPORTED_MODULE_2__.x)(addItemProps.id, {}, appendResponse === null || appendResponse === void 0 ? void 0 : appendResponse.statusUrl);
        return { result: { status, recordCount } };
    }
    catch ({ error }) {
        console.error(error);
        return { error: { code: "unhandledError", message: JSON.stringify(error) } };
    }
}



//# sourceMappingURL=append-5bb9576c.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-append-match-fields.entry.js":
/*!********************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-append-match-fields.entry.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_new_item_pages_append_match_fields: () => (/* binding */ ArcgisNewItemPagesAppendMatchFields)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-item-dbbe2f57.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js");
/* harmony import */ var _append_4e11032c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./append-4e11032c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-4e11032c.js");
/* harmony import */ var _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui-bca7bcd1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-bca7bcd1.js");
/* harmony import */ var _append_3f264d56_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./append-3f264d56.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-3f264d56.js");
/* harmony import */ var _server_item_8d384796_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./server-item-8d384796.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-8d384796.js");
/* harmony import */ var _append_5bb9576c_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./append-5bb9576c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-5bb9576c.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _geocode_64e0b0d3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./geocode-64e0b0d3.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/geocode-64e0b0d3.js");
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/* harmony import */ var _privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./privileges-5c382f61.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js");
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/* harmony import */ var _privileges_74639dae_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./privileges-74639dae.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-74639dae.js");
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/* harmony import */ var _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./item-properties-10491b2e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-10491b2e.js");
/* harmony import */ var _functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./functional-81373f6d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-81373f6d.js");
/* harmony import */ var _feature_layer_573bb473_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./feature-layer-573bb473.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-573bb473.js");
/* harmony import */ var _feature_layer_79fb302c_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./feature-layer-79fb302c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-79fb302c.js");
/* harmony import */ var _guid_aeaed84d_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./guid-aeaed84d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-aeaed84d.js");
/* harmony import */ var _thumbnail_bcb89e69_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./thumbnail-bcb89e69.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/thumbnail-bcb89e69.js");
/* harmony import */ var _service_8c2c4241_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./service-8c2c4241.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/service-8c2c4241.js");
/* harmony import */ var _user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./user-3ea69c3a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js");
/* harmony import */ var _query_d62660d4_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./query-d62660d4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-d62660d4.js");
/* harmony import */ var _api_2e3a136f_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./api-2e3a136f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/api-2e3a136f.js");
/* harmony import */ var _string_58a5fef3_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./string-58a5fef3.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/string-58a5fef3.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _item_c58ffced_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./item-c58ffced.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-c58ffced.js");
/* harmony import */ var _feature_layer_17b64946_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./feature-layer-17b64946.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-17b64946.js");
/* harmony import */ var _ags_eb458a03_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./ags-eb458a03.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ags-eb458a03.js");
/* harmony import */ var _url_35875a10_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./url-35875a10.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-35875a10.js");
/* harmony import */ var _storage_0353a769_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./storage-0353a769.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/storage-0353a769.js");
/* harmony import */ var _file_bf8ab90f_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./file-bf8ab90f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-bf8ab90f.js");
/* harmony import */ var _store_6a88e6c5_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./store-6a88e6c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/store-6a88e6c5.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */






































const arcgisNewItemPagesAppendMatchFieldsCss = ".fields-container{display:flex;height:100%;flex-direction:column;overflow-y:auto;overflow-x:hidden}.field-table{margin-bottom:1.5rem;display:flex;flex-direction:column;overflow:auto}.search-container{display:flex;width:100%}.field-search{margin-right:0.5rem;width:50%}.field-select{width:50%}.field-name-column{margin-right:0.5rem;width:50%}.match-field-name-column{width:50%}.fields-scroll-container{margin-bottom:0.75rem;display:flex;flex-direction:column;padding-bottom:0.75rem;border-bottom:0.125rem solid var(--calcite-color-foreground-3)}.header-row{display:flex;align-content:flex-start;justify-content:center;gap:0.25rem;padding:0.25rem;font-size:0.875rem;font-weight:500;color:var(--calcite-color-text-1)}.header-cell{display:flex;width:100%;font-size:1rem}.hide{display:none}.not-visible{visibility:hidden;height:0px}.cell{box-sizing:border-box;width:100%}.cell label{margin-top:0.75rem}.row{margin-bottom:0.75rem;display:flex;align-items:center;justify-content:space-between;gap:0.25rem;padding:0.25rem;font-size:1rem;font-weight:500;color:var(--calcite-color-text-1);border-bottom:0.125rem solid var(--calcite-color-foreground-3)}.deselected{opacity:var(--calcite-ui-opacity-disabled)}.screen-readers-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.label{--calcite-label-margin-bottom:0}.append-timezone{border-top:0.063rem solid var(--calcite-color-foreground-3)}.from-to-fields{display:flex;flex-direction:row}.description{margin-bottom:1rem;font-size:0.875rem;font-weight:300}.header{margin-bottom:0.5rem;font-size:1rem;font-weight:500;color:var(--calcite-color-text-1)}.no-fields{margin-bottom:1.5rem}.popover-icon{cursor:pointer;color:var(--calcite-color-text-3);margin-inline-start:0.75rem;margin-top:0.125rem}.popover-content{margin:0px;font-size:0.75rem;font-weight:400}.header-popover{margin-top:-0.313rem}";

const ArcgisNewItemPagesAppendMatchFields = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.newItemUpdatePage = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
        this.newItemPrevPage = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemPrevPage", 7);
        this.workflowComplete = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowComplete", 7);
        this.newItemToggleNavigationEnabled = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemToggleNavigationEnabled", 7);
        this.newItemDisableCloseButtons = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemDisableCloseButtons", 7);
        this.validatedFields = [];
        this.fields = undefined;
        this.i18n = undefined;
        this.fieldMatches = [];
        this.error = undefined;
        this.loading = false;
        this.loaderType = "indeterminate";
        this.loaderMessage = undefined;
    }
    handleNext() {
        const matchingCompletionError = this.validateMatchings();
        if (matchingCompletionError) {
            this.error = matchingCompletionError;
            return;
        }
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__.a.fieldMappings = this.fieldMatches;
        if (this.appendSelection === "add") {
            this.handleAppend();
            return;
        }
        this.newItemUpdatePage.emit("appendSelectUpdate");
    }
    validateMatchings() {
        //return an error
        const noMatches = this.fieldMatches.every((field) => {
            return field.source === _append_4e11032c_js__WEBPACK_IMPORTED_MODULE_2__.N;
        });
        const insertNonNullable = this.fieldMatches.some((field) => {
            return field.defaultValue && !field.isUniqueIndex && !field.nullable;
        });
        if (!noMatches) {
            const nonNullableFieldsLength = this.fieldMatches.filter((field) => !field.disabled && !field.nullable && field.source === _append_4e11032c_js__WEBPACK_IMPORTED_MODULE_2__.N).length;
            if (nonNullableFieldsLength <= 0 || this.appendSelection === "update") {
                return null;
            }
            if (insertNonNullable && this.appendSelection === "add") {
                return null;
            }
            return {
                title: this.i18n.errors.nonNullableErrorTitle,
                description: this.i18n.errors.nonNullableErrorDescription
            };
        }
        return { title: this.errorLabel, description: this.i18n.errors.noMatchedFields };
    }
    disableModalButtons(disable) {
        this.newItemToggleNavigationEnabled.emit(!disable);
        this.newItemDisableCloseButtons.emit(disable);
    }
    async handleAppend() {
        var _a, _b;
        const { sourceDataLayer, existingItem, timezone, analyzeResults, type, fieldMappings, dataLayer, id, uidPair, addAppendSelectOption } = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__.a;
        this.disableModalButtons(true);
        this.loading = true;
        this.loaderMessage = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.append.appendLoadingMessages.appendCloseNotice;
        const response = await (0,_append_5bb9576c_js__WEBPACK_IMPORTED_MODULE_6__.a)({
            sourceDataLayer,
            existingItem,
            timezone,
            analyzeResults,
            type,
            fieldMappings,
            dataLayer,
            id,
            uidPair,
            addAppendSelectOption
        });
        if (((_b = (_a = response === null || response === void 0 ? void 0 : response.result) === null || _a === void 0 ? void 0 : _a.status) === null || _b === void 0 ? void 0 : _b.toLowerCase()) === "completed") {
            await (0,_server_item_8d384796_js__WEBPACK_IMPORTED_MODULE_5__.d)(_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__.a.id, { permanentDelete: true });
            const emitPayload = Object.assign({
                // `publishResponse` doesn't for some flows so use this id instead
                appendType: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__.a.addAppendSelectOption
            }, response);
            this.workflowComplete.emit(emitPayload);
            return;
        }
        else {
            this.disableModalButtons(false);
            this.loading = false;
            this.error = {
                title: _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.error,
                description: _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.append.appendErrorMessages.appendError
            };
        }
    }
    async handlePrev(event) {
        var _a;
        if (this.loading) {
            return;
        }
        if (this.appendSelection === "add" &&
            !(((_a = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__.a.analyzeResults.publishParameters.layers) === null || _a === void 0 ? void 0 : _a.length) > 1)) {
            event.preventDefault();
            this.newItemPrevPage.emit();
        }
    }
    handleFieldChange(event) {
        const newFieldMapping = Object.assign({}, event.detail);
        this.validateFieldMappings(this.validatedFields, newFieldMapping);
    }
    sortFields() {
        this.fieldMatches = this.fieldMatches.sort(function (a, b) {
            const nameA = a.name.toLowerCase();
            const nameB = b.name.toLowerCase();
            if (nameA < nameB) {
                return -1;
            }
            else if (nameA > nameB) {
                return 1;
            }
            return 0;
        });
    }
    validateFieldMappings(currentFieldMappings, newFieldMapping) {
        newFieldMapping.initialMatch = newFieldMapping.source;
        if (newFieldMapping.source !== this.noneString) {
            const duplicate = currentFieldMappings.filter((mapping) => {
                return mapping.source === newFieldMapping.source;
            });
            if ((duplicate === null || duplicate === void 0 ? void 0 : duplicate.length) > 0) {
                const duplicateIndex = duplicate[0].idx;
                currentFieldMappings[duplicateIndex].initialMatch = this.noneString;
                currentFieldMappings[duplicateIndex].source = this.noneString;
            }
        }
        currentFieldMappings[newFieldMapping.idx] = newFieldMapping;
        this.validatedFields = currentFieldMappings;
        this.fieldMatches = [...this.validatedFields];
        this.sortFields();
    }
    setNextText() {
        _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__.u.nextText =
            this.appendSelection === "add" ? "addAndComplete" : "next";
    }
    componentWillLoad() {
        const { addAppendSelectOption, uidPair, sourceDataLayer, backupLayerFields } = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__.a;
        this.i18n = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.appendMatchFields;
        this.errorLabel = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.error;
        this.noneString = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.appendKeyValuePair.noneField;
        this.appendSelection = addAppendSelectOption;
        const dataLayerFields = backupLayerFields;
        const serviceLayerFields = sourceDataLayer.type === "csv" ? [sourceDataLayer.layerInfo] : sourceDataLayer.fields;
        const updateExistingFeatures = this.appendSelection === "upsert" || this.appendSelection === "update";
        this.setNextText();
        this.selectedKeyPair = uidPair;
        let fieldsListIndex = this.appendSelection === "add" ? 0 : 1;
        serviceLayerFields.forEach((layerInfo) => {
            if ((layerInfo === null || layerInfo === void 0 ? void 0 : layerInfo.type) !== "esriFieldTypeOID" &&
                (layerInfo === null || layerInfo === void 0 ? void 0 : layerInfo.type) !== "esriFieldTypeGlobalID" &&
                layerInfo.editable && (!updateExistingFeatures || layerInfo.name !== this.selectedKeyPair.name)) {
                //match fields that are not uid
                this.fieldMatches.push(this.createFieldMapping(layerInfo, dataLayerFields, fieldsListIndex));
                this.validatedFields.push(this.createFieldMapping(layerInfo, dataLayerFields, fieldsListIndex));
                fieldsListIndex++;
            }
        });
        if (this.appendSelection !== "add") {
            this.fieldMatches.unshift(this.selectedKeyPair);
            this.validatedFields.unshift(this.selectedKeyPair);
        }
        this.sortFields();
    }
    createFieldMapping(serviceLayerField, dataLayerFields, serviceLayerIndex) {
        const addressFields = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__.a.dataLayer.addressFields
            ? Object.values(_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__.a.dataLayer.addressFields)
            : null;
        let matched = this.noneString;
        const possibleMatches = [
            {
                source: this.noneString,
                name: serviceLayerField.name,
                type: "None",
                idx: serviceLayerIndex
            }
        ];
        dataLayerFields.forEach((fieldInfo) => {
            if ((0,_append_3f264d56_js__WEBPACK_IMPORTED_MODULE_4__.c)(serviceLayerField, fieldInfo) &&
                (this.appendSelection === "add"
                    ? true
                    : fieldInfo.name !== this.selectedKeyPair.source)) {
                possibleMatches.push({
                    source: fieldInfo.name,
                    name: serviceLayerField.name,
                    type: serviceLayerField.type,
                    idx: serviceLayerIndex
                });
                if (serviceLayerField.name.toLowerCase() === fieldInfo.name.toLowerCase() &&
                    (serviceLayerField.type === fieldInfo.type ||
                        !!(addressFields === null || addressFields === void 0 ? void 0 : addressFields.find((field) => field === fieldInfo.displayName || field === fieldInfo.name))) &&
                    (this.appendSelection === "add"
                        ? true
                        : fieldInfo.name !== this.selectedKeyPair.source)) {
                    matched = fieldInfo.name;
                }
            }
        });
        return {
            source: matched,
            name: serviceLayerField.name,
            nullable: serviceLayerField.nullable,
            type: serviceLayerField.type,
            idx: serviceLayerIndex,
            isUniqueIndex: serviceLayerField.isUniqueIndex,
            defaultValue: serviceLayerField.defaultValue,
            initialMatch: matched,
            possibleMatches
        };
    }
    render() {
        const { i18n, error } = this;
        const { originalFileName, existingItem } = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_1__.a;
        const rowHeaderInfo = {
            originalField: {
                header: i18n.originalField.header,
                moreInfo: i18n.originalField.moreInfo.replace("${featureLayerName}", existingItem.title)
            },
            uploadedField: {
                header: i18n.uploadedField.header,
                moreInfo: i18n.uploadedField.moreInfo.replace("${uploadedFileName}", originalFileName)
            }
        };
        const description = i18n.description
            .replace("${uploadedFileName}", originalFileName)
            .replace("${featureLayerName}", existingItem.title);
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, { class: { "overflow-hidden": this.loading } }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { type: this.loaderType, active: this.loading, text: this.loaderMessage }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "header" }, " ", i18n.header, " "), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "description" }, description), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "row", role: "row" }, Object.keys(rowHeaderInfo).map((rowHeader) => {
            const { header, moreInfo } = rowHeaderInfo[rowHeader];
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "header-cell", role: "columnheader", "aria-sort": "none" }, header, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-information", { class: "header-popover", label: moreInfo, placement: "top-start", paddedContent: true }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "popover-content" }, moreInfo))));
        })), this.fieldMatches.length > 0 ? ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "fields-scroll-container", role: "table" }, this.fieldMatches.map((mapping) => {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-append-match-field", { key: mapping.source, onFieldChange: this.handleFieldChange.bind(this), field: mapping, role: "row" }));
        }))) : ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { class: "no-fields", icon: true, status: "valid" }, this.i18n.errors.noFields)), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: error === null || error === void 0 ? void 0 : error.title, description: error === null || error === void 0 ? void 0 : error.description, link: { href: error === null || error === void 0 ? void 0 : error.link, title: error === null || error === void 0 ? void 0 : error.linkText }, active: !!error, onAlertDismiss: () => (this.error = null) })));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesAppendMatchFields.style = arcgisNewItemPagesAppendMatchFieldsCss;



//# sourceMappingURL=arcgis-new-item-pages-append-match-fields.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,