"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-a64286"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-data-store-select-cloud-credentials.entry.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-data-store-select-cloud-credentials.entry.js ***!
  \************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_new_item_pages_data_store_select_cloud_credentials: () => (/* binding */ ArcgisNewItemPagesDataStoreSelectCloudCredentials)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-item-dbbe2f57.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js");
/* harmony import */ var _data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data-store-e2ae6a67.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-e2ae6a67.js");
/* harmony import */ var _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui-bca7bcd1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-bca7bcd1.js");
/* harmony import */ var _data_store_8e83fb7a_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data-store-8e83fb7a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-8e83fb7a.js");
/* harmony import */ var _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./item-properties-10491b2e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-10491b2e.js");
/* harmony import */ var _data_store_8f8ac640_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./data-store-8f8ac640.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-8f8ac640.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/* harmony import */ var _service_8c2c4241_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./service-8c2c4241.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/service-8c2c4241.js");
/* harmony import */ var _feature_layer_573bb473_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./feature-layer-573bb473.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-573bb473.js");
/* harmony import */ var _feature_layer_79fb302c_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./feature-layer-79fb302c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-79fb302c.js");
/* harmony import */ var _guid_aeaed84d_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./guid-aeaed84d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-aeaed84d.js");
/* harmony import */ var _thumbnail_bcb89e69_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./thumbnail-bcb89e69.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/thumbnail-bcb89e69.js");
/* harmony import */ var _user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./user-3ea69c3a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js");
/* harmony import */ var _query_d62660d4_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./query-d62660d4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-d62660d4.js");
/* harmony import */ var _api_2e3a136f_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./api-2e3a136f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/api-2e3a136f.js");
/* harmony import */ var _string_58a5fef3_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./string-58a5fef3.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/string-58a5fef3.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _item_c58ffced_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./item-c58ffced.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-c58ffced.js");
/* harmony import */ var _server_item_8d384796_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./server-item-8d384796.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-8d384796.js");
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/* harmony import */ var _functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./functional-81373f6d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-81373f6d.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/* harmony import */ var _feature_layer_17b64946_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./feature-layer-17b64946.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-17b64946.js");
/* harmony import */ var _ags_eb458a03_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./ags-eb458a03.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ags-eb458a03.js");
/* harmony import */ var _url_35875a10_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./url-35875a10.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-35875a10.js");
/* harmony import */ var _storage_0353a769_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./storage-0353a769.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/storage-0353a769.js");
/* harmony import */ var _file_bf8ab90f_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./file-bf8ab90f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-bf8ab90f.js");
/* harmony import */ var _store_6a88e6c5_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./store-6a88e6c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/store-6a88e6c5.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */



































const arcgisNewItemPagesDataStoreSelectCloudCredentialsCss = "calcite-label{--calcite-label-margin-bottom:1.25rem}.configure-form{margin-top:1.5rem}.hide{display:none}.show{display:block}";

const ArcgisNewItemPagesDataStoreSelectCloudCredentials = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.newItemUpdatePage = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
        this.credentialType = null;
        this.authenticationTypes = [
            "activeDirectory",
            "sharedKey",
            "sasToken",
            "anonymous"
        ];
        this.identityTypes = [
            // "servicePrincipal",
            "userAssignedIdentity"
        ];
        this.selectedAuthenticationType = undefined;
        this.selectedIdentityType = undefined;
        this.endpoint = "";
        this.token = "";
        this.tenantId = "";
        this.clientId = "";
        this.clientSecret = "";
        this.accessKey = "";
        this.secretKey = "";
        this.accountName = "";
        this.accountKey = "";
        this.containerName = "";
        this.selectedRegionId = null;
        this.storageURL = "";
        this.bucketName = "";
        this.cloudFolder = "";
        this.regionSelectOptions = [];
        this.showPrivateURL = false;
        this.credentialTypeOptions = [];
        this.missingFields = {};
        this.loading = false;
        this.loaderType = "indeterminate";
        this.loaderMessage = undefined;
        this.invalidEndpoint = false;
        this.error = undefined;
    }
    async componentWillLoad() {
        this.i18n = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_4__.u.i18n.dataStoreSelectCloud;
        this.credentialTypesI18N = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_4__.u.i18n.dataStoreSelectCloud.credentialTypes;
        this.provider =
            _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.addDataStoreType === "bdfs"
                ? _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.bdfsCloudProvider
                : _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.provider;
        this.populateCredentialTypes();
        const regions = await (0,_data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_3__.f)(this.provider);
        this.addOptions((regions === null || regions === void 0 ? void 0 : regions.result) || []);
        this.populateFields();
    }
    populateFields() {
        const { provider } = this;
        switch (provider) {
            case "amazon":
                if (_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.credentialType) {
                    this.credentialType = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.credentialType;
                }
                this.accessKey = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accessKey;
                this.secretKey = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.secretKey;
                if (_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.selectedRegion) {
                    this.selectedRegionId = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.selectedRegion.id;
                }
                this.storageURL = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.storageURL;
                this.bucketName = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.bucketName;
                this.cloudFolder = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.cloudFolder;
                break;
            case "azure":
            case "azuredatalakegen2store":
                // Data lake currently only supports "Shared Key" authentication type
                this.selectedAuthenticationType =
                    provider === "azure"
                        ? _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.azureAuthenticationType || this.authenticationTypes[0]
                        : "sharedKey";
                this.selectedIdentityType = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.azureIdentityType || "userAssignedIdentity";
                this.tenantId = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.tenantId;
                this.clientId = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.clientId;
                this.clientSecret = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.clientSecret;
                this.token = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.token;
                this.endpoint = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.endpoint;
                this.accountKey = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accountKey;
                this.accountName = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accountName;
                if (_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.environment) {
                    this.selectedRegionId = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.environment.id;
                }
                this.containerName = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.containerName;
                this.cloudFolder = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.cloudFolder;
                break;
            case "google":
                // Right now, google only has "access key" as a credential type
                // Support for "private key" to be added later, so this 'if' check is here
                if (_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.credentialType === "accessKey") {
                    this.credentialType = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.credentialType;
                    this.accessKey = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accessKey;
                    this.secretKey = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.secretKey;
                    this.bucketName = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.bucketName;
                }
                this.cloudFolder = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.cloudFolder;
                break;
            case "alibaba":
                this.accessKey = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accessKey;
                this.secretKey = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.secretKey;
                if (_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.selectedRegion) {
                    this.selectedRegionId = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.selectedRegion.id;
                }
                this.storageURL = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.storageURL;
                this.bucketName = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.bucketName;
                this.cloudFolder = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.cloudFolder;
                break;
        }
    }
    saveFieldStates() {
        var _a, _b, _c, _d, _e, _f;
        const { provider } = this;
        switch (provider) {
            case "amazon":
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.credentialType = this.credentialType;
                // https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/40157
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accessKey = (_a = this.accessKey) === null || _a === void 0 ? void 0 : _a.trim();
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.secretKey = (_b = this.secretKey) === null || _b === void 0 ? void 0 : _b.trim();
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.selectedRegion = this.regionSelectOptions.find((region) => region.id === this.selectedRegionId);
                if (this.selectedRegionId === "custom") {
                    _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.storageURL = this.storageURL;
                }
                else {
                    _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.storageURL = "";
                }
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.bucketName = this.bucketName;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.cloudFolder = this.cloudFolder;
                break;
            case "azure":
            case "azuredatalakegen2store":
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.azureAuthenticationType =
                    provider === "azure" ? this.selectedAuthenticationType : "sharedKey";
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.azureIdentityType = this.selectedIdentityType;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.tenantId = this.tenantId;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.clientId = this.clientId;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.clientSecret = this.clientSecret;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.token = this.token;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accountKey = this.accountKey;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accountName = this.accountName;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.endpoint = this.endpoint;
                // Azure uses an 'environment' instead of a 'region' unlike the other cloud types
                // The underlying logic to populate and select the regions/environments is the same
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.environment = this.regionSelectOptions.find((region) => region.id === this.selectedRegionId);
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.containerName = this.containerName;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.cloudFolder = this.cloudFolder;
                break;
            case "google":
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.credentialType = this.credentialType;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accessKey = (_c = this.accessKey) === null || _c === void 0 ? void 0 : _c.trim();
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.secretKey = (_d = this.secretKey) === null || _d === void 0 ? void 0 : _d.trim();
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.bucketName = this.bucketName;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.cloudFolder = this.cloudFolder;
                break;
            case "alibaba":
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.accessKey = (_e = this.accessKey) === null || _e === void 0 ? void 0 : _e.trim();
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.secretKey = (_f = this.secretKey) === null || _f === void 0 ? void 0 : _f.trim();
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.selectedRegion = this.regionSelectOptions.find((region) => region.id === this.selectedRegionId);
                if (this.selectedRegionId === "custom") {
                    _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.storageURL = this.storageURL;
                }
                else {
                    _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.storageURL = "";
                }
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.bucketName = this.bucketName;
                _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.cloudFolder = this.cloudFolder;
                break;
        }
    }
    populateCredentialTypes() {
        // Amazon & Google
        const { provider, credentialTypesI18N } = this;
        const tempCredentialTypeOptions = Object.keys(credentialTypesI18N)
            .filter((key) => {
            const isAmazonPrivateKey = provider === "amazon" && key === "privateKey";
            const isGoogleNotAccessKey = provider === "google" && key !== "accessKey";
            const isOnlineIAM = !_config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.isPortal && key === "IAMRole";
            return !(isAmazonPrivateKey || isGoogleNotAccessKey || isOnlineIAM);
        })
            .map((key) => ({ label: credentialTypesI18N[key], value: key }));
        if (tempCredentialTypeOptions.length > 0) {
            this.credentialType = tempCredentialTypeOptions[0].value;
        }
        this.credentialTypeOptions = tempCredentialTypeOptions;
        // Azure
        this.authenticationTypes = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.isPortal
            ? this.authenticationTypes
            : ["sharedKey", "sasToken"];
    }
    addOptions(options) {
        const { provider, i18n } = this;
        let idProperty = "id";
        this.regionSelectOptions = [...options];
        if (provider === "azure") {
            idProperty = "storageEndpointSuffix";
        }
        if (provider === "amazon" || provider === "alibaba") {
            const customOption = {
                displayName: i18n.custom,
                [idProperty]: "custom"
            };
            this.regionSelectOptions = [...this.regionSelectOptions, customOption];
        }
        if (provider === "azure" || provider === "azuredatalakegen2store") {
            const otherOption = {
                displayName: i18n.other,
                id: "other"
            };
            this.regionSelectOptions = [...this.regionSelectOptions, otherOption];
        }
        if (this.regionSelectOptions.length > 0) {
            this.selectedRegionId = this.regionSelectOptions[0].id;
        }
    }
    async handleNext() {
        if (!this.validateCloudCredentials()) {
            return;
        }
        this.saveFieldStates();
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.regions = this.regionSelectOptions;
        if (_config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.isPortal) {
            // Enterprise - show dedicated page for registering & validating data stores with servers
            this.newItemUpdatePage.emit("dataStoreSelectServerList");
        }
        else {
            // Online - just validate the data store then continue
            this.loading = true;
            this.loaderMessage = this.i18n.validating;
            const { orgId, portal } = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.user;
            const fieldValue = this.provider === "amazon" ? this.bucketName : this.containerName;
            _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_6__.i.title = (0,_data_store_8f8ac640_js__WEBPACK_IMPORTED_MODULE_7__.f)(this.provider, fieldValue);
            const payload = (0,_data_store_8e83fb7a_js__WEBPACK_IMPORTED_MODULE_5__.d)(_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a);
            const { result } = await (0,_data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_3__.v)(orgId, portal, payload);
            if ((result === null || result === void 0 ? void 0 : result.status) === "success") {
                this.newItemUpdatePage.emit("itemProperties");
            }
            else {
                this.handleError();
            }
        }
    }
    validateCloudCredentials() {
        const { provider, i18n, credentialType, endpoint, token, accessKey, secretKey, selectedRegionId, storageURL, bucketName, accountName, accountKey, containerName, tenantId, clientId, clientSecret, selectedAuthenticationType, selectedIdentityType } = this;
        const validationFields = {};
        if (provider === "amazon") {
            validationFields[i18n.accessKey] = credentialType === "accessKey" && !accessKey;
            validationFields[i18n.secretKey] = credentialType === "accessKey" && !secretKey;
            validationFields[i18n.bucketName] = !bucketName;
            validationFields[i18n.storageURL] = selectedRegionId === "custom" && !storageURL;
        }
        if (provider === "google") {
            if (credentialType === "accessKey") {
                validationFields[i18n.accessKey] = !accessKey;
                validationFields[i18n.secretKey] = !secretKey;
            }
            validationFields[i18n.bucketName] = !bucketName;
        }
        if (provider === "azure") {
            if (selectedAuthenticationType === "sharedKey") {
                validationFields[i18n.accountKey] = !accountKey;
                validationFields[i18n.accountName] = !accountName;
            }
            else {
                validationFields[i18n.accountName] =
                    !accountName &&
                        selectedRegionId !== "other" &&
                        selectedAuthenticationType !== "anonymous";
            }
            if (selectedAuthenticationType === "sasToken") {
                validationFields[i18n.token] = !token;
            }
            if (selectedAuthenticationType === "activeDirectory") {
                if (selectedIdentityType === "servicePrincipal") {
                    validationFields[i18n.tenantId] = !tenantId;
                    validationFields[i18n.clientId] = !clientId;
                    validationFields[i18n.clientSecret] = !clientSecret;
                }
                else if (selectedIdentityType === "userAssignedIdentity") {
                    validationFields[i18n.clientId] = !clientId;
                }
            }
            validationFields[i18n.containerName] = !containerName;
            validationFields[i18n.storageURL] = selectedRegionId === "custom" && !storageURL;
            validationFields[i18n.endpoint] =
                (selectedAuthenticationType === "anonymous" || selectedRegionId === "other") && !endpoint;
        }
        if (provider === "azuredatalakegen2store") {
            if (selectedAuthenticationType === "sharedKey") {
                validationFields[i18n.accountKey] = !accountKey;
            }
            validationFields[i18n.accountName] = !accountName && selectedRegionId !== "other";
            validationFields[i18n.containerName] = !containerName;
            validationFields[i18n.endpoint] = selectedRegionId === "other" && !endpoint;
        }
        if (provider === "alibaba") {
            validationFields[i18n.accessKey] = !accessKey;
            validationFields[i18n.secretKey] = !secretKey;
            validationFields[i18n.bucketName] = !bucketName;
            validationFields[i18n.storageURL] = selectedRegionId === "custom" && !storageURL;
        }
        this.missingFields = Object.assign({}, validationFields);
        for (const field in this.missingFields) {
            if (this.missingFields[field]) {
                return false;
            }
        }
        return !((provider === "azure" || provider === "azuredatalakegen2store") &&
            selectedRegionId === "other" &&
            this.invalidEndpoint);
    }
    generateErrorMsg(field) {
        const { i18n } = this;
        return i18n.errorInfo.replace("${missingField}", field);
    }
    handleError() {
        this.loading = false;
        const errorTitle = this.i18n.errors.onlineValidationFailed.heading;
        const errorMessage = this.i18n.errors.onlineValidationFailed.description;
        this.error = {
            title: errorTitle,
            description: errorMessage
        };
    }
    togglePrivateURL(newSelectedRegion) {
        const { provider } = this;
        if (provider !== "azure") {
            this.showPrivateURL = newSelectedRegion === "custom";
        }
    }
    render() {
        var _a, _b;
        const { i18n, provider, credentialTypeOptions, credentialType, regionSelectOptions, selectedAuthenticationType, selectedIdentityType, authenticationTypes, identityTypes, endpoint, token, tenantId, clientId, clientSecret, accessKey, secretKey, showPrivateURL, storageURL, bucketName, cloudFolder, accountName, accountKey, containerName, selectedRegionId, missingFields, invalidEndpoint } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { type: this.loaderType, active: this.loading, text: this.loaderMessage }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-description", { header: _config_75adf962_js__WEBPACK_IMPORTED_MODULE_1__.c.portal.isPortal ? i18n.connectionInfoEnterprise : i18n.connectionInfoOnline }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "configure-form" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, i18n.provider, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { value: i18n.cloudProviders[provider], disabled: true })), (provider === "amazon" || provider === "google") && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "credential-type-select" }, i18n.credentialType, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { id: "credential-type-select", label: "credential-type-select", onCalciteSelectChange: (e) => {
                const credentialType = e.target.value;
                this.missingFields = {};
                this.credentialType = credentialType;
            }, disabled: credentialTypeOptions.length < 2 }, credentialTypeOptions.map((credentialType) => {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { key: credentialType.value, label: credentialType.label, value: credentialType.value, selected: credentialType.value === this.credentialType }));
        })))), (provider === "azure" || provider === "azuredatalakegen2store") && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, provider === "azure" && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "authentication-type-select" }, i18n.authenticationType, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { id: "authentication-type-select", label: "authentication-type-select", onCalciteSelectChange: (e) => {
                const selectedAuthenticationType = e.target
                    .value;
                this.missingFields = {};
                this.selectedAuthenticationType = selectedAuthenticationType;
            } }, authenticationTypes.map((authenticationType) => {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { key: authenticationType, id: authenticationType, label: i18n.authenticationTypes[authenticationType], value: authenticationType, selected: selectedAuthenticationType === authenticationType }));
        })))), provider === "azuredatalakegen2store" && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, i18n.authenticationType, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { value: i18n.authenticationTypes[selectedAuthenticationType], disabled: true }))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "token-input", class: { hide: selectedAuthenticationType !== "sasToken" } }, i18n.token, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "token-input", value: token, onCalciteInputChange: (e) => {
                const token = e.target.value;
                this.token = token;
            }, placeholder: i18n.sasTokenPlaceholder, status: missingFields[i18n.token] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.token] } }, this.generateErrorMsg(i18n.token))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "identity-type-select", class: { hide: selectedAuthenticationType !== "activeDirectory" } }, i18n.identityType, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select-group", { layout: "vertical", id: "identity-type-select" }, identityTypes.map((identityType) => {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select", { key: identityType, checked: selectedIdentityType === identityType, heading: i18n.identityTypes[identityType], name: "identity-type-select", "input-enabled": true, width: "full", type: "radio", value: identityType, onCalciteTileSelectChange: (e) => {
                    const selectedIdentityType = e.target
                        .value;
                    this.selectedIdentityType = selectedIdentityType;
                } }));
        }))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "optional-client-id-input", class: {
                hide: selectedAuthenticationType !== "activeDirectory" ||
                    selectedIdentityType !== "userAssignedIdentity"
            } }, i18n.clientId, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "optional-client-id-input", value: clientId, onCalciteInputChange: (e) => {
                const clientId = e.target.value;
                this.clientId = clientId;
            }, status: missingFields[i18n.clientId] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.clientId] } }, this.generateErrorMsg(i18n.clientId))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "tenant-id-input", class: {
                hide: selectedAuthenticationType !== "activeDirectory" ||
                    selectedIdentityType !== "servicePrincipal"
            } }, i18n.tenantId, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "tenant-id-input", value: tenantId, onCalciteInputChange: (e) => {
                const tenantId = e.target.value;
                this.tenantId = tenantId;
            }, status: missingFields[i18n.tenantId] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.tenantId] } }, this.generateErrorMsg(i18n.tenantId))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "client-id-input", class: {
                hide: selectedAuthenticationType !== "activeDirectory" ||
                    selectedIdentityType !== "servicePrincipal"
            } }, i18n.clientId, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "client-id-input", value: clientId, onCalciteInputChange: (e) => {
                const clientId = e.target.value;
                this.clientId = clientId;
            }, status: missingFields[i18n.clientId] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.clientId] } }, this.generateErrorMsg(i18n.clientId))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "client-secret-input", class: {
                hide: selectedAuthenticationType !== "activeDirectory" ||
                    selectedIdentityType !== "servicePrincipal"
            } }, i18n.clientSecret, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "client-secret-input", type: "password", value: clientSecret, onCalciteInputChange: (e) => {
                const clientSecret = e.target.value;
                this.clientSecret = clientSecret;
            }, status: missingFields[i18n.clientSecret] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.clientSecret] } }, this.generateErrorMsg(i18n.clientSecret))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "account-name-input", class: {
                hide: (selectedRegionId === "other" || selectedAuthenticationType === "anonymous") &&
                    selectedAuthenticationType !== "sharedKey"
            } }, i18n.accountName, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "account-name-input", value: accountName, onCalciteInputChange: (e) => {
                const accountName = e.target.value;
                this.accountName = accountName;
            }, status: missingFields[i18n.accountName] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.accountName] } }, this.generateErrorMsg(i18n.accountName))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "account-key-input", class: { hide: selectedAuthenticationType !== "sharedKey" } }, i18n.accountKey, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "account-key-input", type: "password", value: accountKey, onCalciteInputChange: (e) => {
                const accountKey = e.target.value;
                this.accountKey = accountKey;
            }, status: missingFields[i18n.accountKey] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.accountKey] } }, this.generateErrorMsg(i18n.accountKey))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "environment-select", class: { hide: selectedAuthenticationType === "anonymous" } }, i18n.storageDomain, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { id: "environment-select", label: "environment-select", onCalciteSelectChange: (e) => {
                const selectedRegionId = e.target.value;
                this.selectedRegionId = selectedRegionId;
            } }, regionSelectOptions.map((region) => {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { key: region.id, id: region.id, label: `${region.displayName} ${region.storageEndpointSuffix ? `(${region.storageEndpointSuffix})` : ""}`, value: region.id, selected: region.id === this.selectedRegionId }));
        }))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "endpoint-input", class: {
                hide: true,
                show: selectedRegionId === "other" || selectedAuthenticationType === "anonymous"
            } }, i18n.endpoint, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "endpoint-input", value: endpoint, onCalciteInputChange: (e) => {
                const endpoint = e.target.value;
                if (!endpoint.toLowerCase().startsWith("https") && endpoint.length > 0) {
                    this.invalidEndpoint = true;
                    return;
                }
                this.invalidEndpoint = false;
                this.endpoint = endpoint;
            }, placeholder: i18n.endpointPlaceholder, status: missingFields[i18n.endpoint] || invalidEndpoint ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.endpoint] && !invalidEndpoint } }, this.invalidEndpoint
            ? i18n.invalidEndpoint
            : this.generateErrorMsg(i18n.endpoint))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "container-name-input" }, i18n.containerName, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "container-name-input", value: containerName, onCalciteInputChange: (e) => {
                const containerName = e.target.value;
                this.containerName = containerName;
            }, status: missingFields[i18n.containerName] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.containerName] } }, this.generateErrorMsg(i18n.containerName))))), provider !== "azure" && provider !== "azuredatalakegen2store" && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "access-key-input" }, i18n.accessKey, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "access-key-input", value: accessKey, disabled: credentialType === "IAMRole" || credentialType === "privateKey", onCalciteInputChange: (e) => {
                const accessKey = e.target.value;
                this.accessKey = accessKey;
            }, status: missingFields[i18n.accessKey] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.accessKey] } }, this.generateErrorMsg(i18n.accessKey))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "secret-key-input" }, i18n.secretKey, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "secret-key-input", value: secretKey, type: "password", disabled: credentialType === "IAMRole" || credentialType === "privateKey", onCalciteInputChange: (e) => {
                const secretKey = e.target.value;
                this.secretKey = secretKey;
            }, status: missingFields[i18n.secretKey] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.secretKey] } }, this.generateErrorMsg(i18n.secretKey))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "region-select" }, i18n.region, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { id: "region-select", label: "region-select", onCalciteSelectChange: (e) => {
                const selectedRegionId = e.target.value;
                this.selectedRegionId = selectedRegionId;
            }, disabled: provider === "google" }, regionSelectOptions.map((region) => {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { key: region.id, id: region.id, label: region.displayName, value: region.id, selected: region.id === this.selectedRegionId }));
        }))), showPrivateURL && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "storage-url-input" }, i18n.storageURL, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "storage-url-input", value: storageURL, onCalciteInputChange: (e) => {
                const storageURL = e.target.value;
                this.storageURL = storageURL;
            }, status: missingFields[i18n.storageURL] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.storageURL] } }, this.generateErrorMsg(i18n.storageURL)))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "bucket-name-input" }, i18n.bucketName, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "bucket-name-input", value: bucketName, onCalciteInputChange: (e) => {
                const bucketName = e.target.value;
                this.bucketName = bucketName;
            }, status: missingFields[i18n.bucketName] ? "invalid" : "idle" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "invalid", class: { hide: !missingFields[i18n.bucketName] } }, this.generateErrorMsg(i18n.bucketName))))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "cloud-folder-input" }, i18n.cloudFolder, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "cloud-folder-input", value: cloudFolder, placeholder: i18n.cloudFolderPlaceHolder, onCalciteInputChange: (e) => {
                const cloudFolder = e.target.value;
                this.cloudFolder = cloudFolder;
            } }))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { active: this.error !== undefined, heading: (_a = this.error) === null || _a === void 0 ? void 0 : _a.title, description: (_b = this.error) === null || _b === void 0 ? void 0 : _b.description, onAlertDismiss: () => {
                this.error = undefined;
            } })));
    }
    static get watchers() { return {
        "selectedRegionId": ["togglePrivateURL"]
    }; }
};
ArcgisNewItemPagesDataStoreSelectCloudCredentials.style = arcgisNewItemPagesDataStoreSelectCloudCredentialsCss;



//# sourceMappingURL=arcgis-new-item-pages-data-store-select-cloud-credentials.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-8f8ac640.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-8f8ac640.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   f: () => (/* binding */ formatTitleForDataStoreItem)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */
const formatTitleForDataStoreItem = (provider, fieldValue) => {
    let title;
    const initialTitle = fieldValue !== null && fieldValue !== void 0 ? fieldValue : "";
    switch (provider) {
        case "amazon":
            title = `AmazonS3_${initialTitle}`;
            break;
        case "azure":
            title = `Microsoft_Azure_Storage_${initialTitle}`;
            break;
        case "bigQuery":
            title = `BigQuery_${initialTitle}`;
            break;
        case "snowflake":
            title = `Snowflake_${initialTitle}`;
            break;
    }
    return title.replace(/ /g, "_").replace(/-/g, "_");
};



//# sourceMappingURL=data-store-8f8ac640.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,