"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_privil-794759"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ isPublicUser),
/* harmony export */   b: () => (/* binding */ isOrgAdmin),
/* harmony export */   c: () => (/* binding */ isHostedPortal),
/* harmony export */   d: () => (/* binding */ isCustomRole),
/* harmony export */   e: () => (/* binding */ canUpdateOrgGroups),
/* harmony export */   f: () => (/* binding */ canUpdateItemCategories),
/* harmony export */   g: () => (/* binding */ canManageCollaborations),
/* harmony export */   h: () => (/* binding */ isOrgUser),
/* harmony export */   i: () => (/* binding */ isDeveloper),
/* harmony export */   j: () => (/* binding */ canShareItemToGroup),
/* harmony export */   k: () => (/* binding */ canShareItemToOrg),
/* harmony export */   l: () => (/* binding */ adminCanShareOthersItemToGroup),
/* harmony export */   m: () => (/* binding */ canShareOthersItemsToOrg),
/* harmony export */   n: () => (/* binding */ canShareItemToPublic),
/* harmony export */   o: () => (/* binding */ canShareOthersItemsToPublic),
/* harmony export */   p: () => (/* binding */ hasAdminSharePrivilege),
/* harmony export */   q: () => (/* binding */ canViewOthersOrgItems)
/* harmony export */ });
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


const getUserRole = (user) => {
    var _a, _b, _c;
    return typeof (user === null || user === void 0 ? void 0 : user.role) === "string" && !!(user === null || user === void 0 ? void 0 : user.role)
        ? user === null || user === void 0 ? void 0 : user.role
        : (_b = (_a = user === null || user === void 0 ? void 0 : user.roleId) !== null && _a !== void 0 ? _a : user === null || user === void 0 ? void 0 : user.id) !== null && _b !== void 0 ? _b : (_c = user === null || user === void 0 ? void 0 : user.sourceJSON) === null || _c === void 0 ? void 0 : _c.id;
};
function isPublicUser(user) {
    return user && !user.orgId;
}
function isHostedPortal(portal) {
    return !portal.isPortal || !!portal.isBackedBySDS;
}
function isDeveloper(subscriptionInfo) {
    const devSubscriptionTypes = ["Trial Developer", "Developer", "Developer Subscription"];
    return devSubscriptionTypes.includes(subscriptionInfo === null || subscriptionInfo === void 0 ? void 0 : subscriptionInfo.type);
}
function isOrgAdmin(user) {
    return getUserRole(user) === "org_admin" || getUserRole(user) === "account_admin";
}
function isOrgUser(user) {
    return getUserRole(user) === "org_user" || getUserRole(user) === "account_user";
}
function isCustomRole(user) {
    // The Home App collapse the `roleId` and `role` into a single `id` property, that's why
    //  https://devtopia.esri.com/WebGIS/arcgis-portal-app/blob/master/src/js/arcgisonline/sharing/dijit/Role.ts#L469 works
    // In practice, we only need to check if `roleId` exist
    //  https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/44682#issuecomment-4146866
    return !!(user === null || user === void 0 ? void 0 : user.roleId) && user.roleId.length > 0;
}
/**
 * Checks whether the privilege "portal:admin:updateItemCategorySchema" is granted.
 */
function canUpdateItemCategories(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:updateItemCategorySchema"));
}
/**
 * Checks whether the privilege "portal:admin:updateGroups" is granted.
 */
function canUpdateOrgGroups(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:updateGroups"));
}
/**
 * Checks whether the user is allowed to update other user's items in their organization.
 */
function canUpdateOrgItems(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:updateItems");
}
/**
 * Checks to ensure the portal is an organization portal
 */
function isOrgPortal(portal) {
    return !!(portal.urlKey && portal.customBaseUrl) || !!portal.isPortal;
}
/**
 * Checks whether the user is allowed to share their item to groups
 */
function canShareItemToGroup(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:user:shareToGroup");
}
/**
 * Checks whether the user can share an item on a given portal
 */
function canShare(user, portal) {
    return (!isOrgPortal(portal) ||
        canShareItemToGroup(user) ||
        canShareItemToOrg(user) ||
        (!!portal.canSharePublic && canShareItemToPublic(user)));
}
/**
 * Checks whether the user is allowed to share their item ot the organization.
 */
function canShareItemToOrg(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:user:shareToOrg");
}
/**
 * Checks whether the user is allowed to share their item to public
 */
function canShareItemToPublic(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:user:shareToPublic");
}
/**
 * Checks whether the user can share other user's items
 */
function canShareOthersItemsToOrg(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:shareToOrg");
}
/**
 * Checks whether the user can share other user's items
 */
function canShareOthersItemsToPublic(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:shareToPublic");
}
/**
 * Checks whether the user can share other user's items
 */
function adminCanShareOthersItemToGroup(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:shareToGroup");
}
/**
 * Checks whether the user is in an allowed organization and has the power to manage collaborations
 */
function canManageCollaborations(config, user, portal, subscriptionInfo) {
    const excludedOrgTypes = ["Trial", "Trial Press", "Trial Developer", "Developer Subscription", "Evaluation"];
    const isValidOrgType = subscriptionInfo && !excludedOrgTypes.includes(subscriptionInfo.type);
    const hasPrivilege = ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:manageCollaborations");
    return !!((config === null || config === void 0 ? void 0 : config.collaborationsEnabled) &&
        user &&
        (isOrgAdmin(user) || hasPrivilege) &&
        ((portal === null || portal === void 0 ? void 0 : portal.isPortal) || isValidOrgType));
}
/**
 * Checks whether the user can view other organization users' items
 */
function canViewOrgItems(user) {
    return ((user === null || user === void 0 ? void 0 : user.privileges) || []).includes("portal:admin:viewItems");
}
/**
 * Checks whether the user can view other organization users' items
 */
function canViewOthersOrgItems(user) {
    return !!user && (!isCustomRole(user) || (isCustomRole(user) && canViewOrgItems(user)));
}
// TODO: add unit tests
const hasAdminSharePrivilege = ({ items, user, portal }) => {
    const item = items[0];
    // enterprise incorrectly returns items owned by "esri_" as item control admin (WebGIS/arcgis-portal-app#38695)
    const owner = item.owner;
    const whitelistOwner = ["esri_livingatlas"];
    if (portal.isPortal && owner !== user.username && owner.includes("esri_") && !whitelistOwner.includes(owner)) {
        return false;
    }
    const isOwnerOrAdmin = (0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__.u)(item, user);
    const isCustom = isCustomRole(user);
    const canShareOrgItems = canShareOthersItems(user);
    const canUpdateAndShare = (0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__.c)(item, user) &&
        canUpdateOrgItems(user) &&
        !isCustom &&
        (canShare(user, portal) || canShareOthersItems(user));
    // if it's the item owner or admin, or custom admin who can share
    return isOwnerOrAdmin || canUpdateAndShare || ((0,_item_3535552d_js__WEBPACK_IMPORTED_MODULE_0__.d)(items, user) && canShareOrgItems);
};
/**
 * Checks whether the user can share other user's items
 */
function canShareOthersItems(user) {
    return adminCanShareOthersItemToGroup(user) || canShareOthersItemsToOrg(user) || canShareOthersItemsToPublic(user);
}



//# sourceMappingURL=privileges-5c382f61.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-74639dae.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-74639dae.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ canPublishType),
/* harmony export */   b: () => (/* binding */ canPublishFeatures),
/* harmony export */   c: () => (/* binding */ canPublishFromCloud),
/* harmony export */   d: () => (/* binding */ canCreateDeveloperCredentials),
/* harmony export */   e: () => (/* binding */ canPublishImageCollection),
/* harmony export */   f: () => (/* binding */ fetchUserLicensedItems),
/* harmony export */   g: () => (/* binding */ canPublishTiles),
/* harmony export */   h: () => (/* binding */ canPublishScenes),
/* harmony export */   i: () => (/* binding */ canCreateLocatorView),
/* harmony export */   j: () => (/* binding */ canCreateLocator),
/* harmony export */   k: () => (/* binding */ canCreateDataStore),
/* harmony export */   l: () => (/* binding */ canCreateItems),
/* harmony export */   m: () => (/* binding */ canGeocode),
/* harmony export */   n: () => (/* binding */ canReceiveItems),
/* harmony export */   o: () => (/* binding */ canShowTotalCredits),
/* harmony export */   p: () => (/* binding */ canAddAPIKey),
/* harmony export */   q: () => (/* binding */ getWorldGeocoderUrl),
/* harmony export */   r: () => (/* binding */ canCreateNotebooks),
/* harmony export */   s: () => (/* binding */ canCreateAdvancedNotebooks),
/* harmony export */   t: () => (/* binding */ canViewOrgGroups),
/* harmony export */   u: () => (/* binding */ canManageItems)
/* harmony export */ });
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./privileges-5c382f61.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-5c382f61.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */




async function getWorldGeocoderUrl() {
    return new Promise(async (resolve) => {
        const { portal } = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_2__.c;
        if (!(portal === null || portal === void 0 ? void 0 : portal.isPortal)) {
            const env = getEnvironment(portal);
            resolve(`https://geocode${env}.arcgis.com/arcgis/rest/services/World/GeocodeServer`);
        }
        else {
            const geocoders = portal.helperServices.geocode;
            const url = await getWorldGeocoderUrlFromProxies(geocoders);
            resolve(url);
        }
    });
}
function getEnvironment(portal) {
    const hostname = portal === null || portal === void 0 ? void 0 : portal.portalHostname;
    if (hostname.indexOf("dev") !== -1) {
        return "dev";
    }
    else if (hostname.indexOf("qa") !== -1) {
        return "qa";
    }
    return "";
}
function getWorldGeocoderUrlFromProxies(geocoders) {
    const { config, portal } = _config_75adf962_js__WEBPACK_IMPORTED_MODULE_2__.c;
    return new Promise(async (resolve, reject) => {
        const esriBatchGeocoder = geocoders
            .filter((geocoder) => isServiceProxyGeocoder(geocoder.url, portal))
            .filter((proxy) => proxy.isEsriBatchGeocoder)[0];
        if (esriBatchGeocoder) {
            // Make sure world geocoder is configured
            const id = parseGeocoderItemId(esriBatchGeocoder);
            const url = `${config.restBaseUrl}/content/items/${id}`;
            try {
                const geocoderItem = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(url);
                resolve(geocoderItem.url);
            }
            catch (err) {
                reject(err);
            }
        }
        else {
            reject("No world geocoder configured");
        }
    });
}
function isServiceProxyGeocoder(url = "", portal) {
    var _a;
    const isPortal = portal.isPortal;
    const lowerUrl = url.toLowerCase(), hasProxiedGeocodePaths = lowerUrl.indexOf("/geocodeserver") > -1 && lowerUrl.indexOf("/rest/services/") > -1;
    const isPortalProxy = isPortal && lowerUrl.indexOf((_a = portal.portalHostname) === null || _a === void 0 ? void 0 : _a.toLowerCase()) > -1;
    const isAGOLProxy = !isPortal && lowerUrl.indexOf("utility") && lowerUrl.indexOf(".arcgis.com") > -1;
    return hasProxiedGeocodePaths && (isPortalProxy || isAGOLProxy);
}
function parseGeocoderItemId(geocoder) {
    return geocoder.url.split("/servers/")[1].split("/rest/services/")[0];
}

function canPublish(user, portal, userLicensedItems) {
    return (!(0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user) &&
        !!portal.supportsHostedServices &&
        canCreateItems(user) &&
        (canPublishTiles(user, portal) ||
            canPublishFeatures(user, portal) ||
            canPublishScenes(user) ||
            canPublishVectorTiles(user) ||
            canPublishImageCollection(user, portal, userLicensedItems)));
}
function canCreateItems(user) {
    return (0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user) || (user === null || user === void 0 ? void 0 : user.privileges.includes("portal:user:createItem"));
}
function canReceiveItems(user) {
    return (0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user) || (user === null || user === void 0 ? void 0 : user.privileges.includes("portal:user:receiveItems"));
}
function canPublishFeatures(user, portal) {
    return (!(0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user) &&
        (user === null || user === void 0 ? void 0 : user.privileges.includes("portal:publisher:publishFeatures")) &&
        (!portal.isPortal || portal.isBackedBySDS));
}
function canPublishTiles(user, portal) {
    return (!(0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user) &&
        (user === null || user === void 0 ? void 0 : user.privileges.includes("portal:publisher:publishTiles")) &&
        (!portal.isPortal || portal.isBackedBySDS));
}
function canPublishVectorTiles(user) {
    return !(0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user) && true; // this privilege doesn't exist yet
}
function canPublishScenes(user) {
    var _a;
    return !(0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user) && ((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:publisher:publishScenes"));
}
const canCreateDeveloperCredentials = (user) => !(0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user);
function canPublishImageCollection(user, portal, userLicensedItems) {
    var _a, _b;
    const serverSupportsRasterAnalytics = !!((_b = (_a = portal.helperServices) === null || _a === void 0 ? void 0 : _a.rasterAnalytics) === null || _b === void 0 ? void 0 : _b.url);
    const canPublishDynamic = canPublishDynamicImagery(user, portal, userLicensedItems);
    const canPublish = portal.isPortal
        ? canPublishDynamic
        : canPublishDynamic || canPublishTiledImagery(user, portal, userLicensedItems);
    return serverSupportsRasterAnalytics && canPublish;
}
function canPublishDynamicImagery(user, portal, userLicensedItems) {
    var _a;
    return (((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:publisher:publishDynamicImagery")) &&
        (portal.isPortal || hasImageEntitlement(userLicensedItems)));
}
function canPublishTiledImagery(user, portal, userLicensedItems) {
    var _a;
    return (((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:publisher:publishTiledImagery")) &&
        !portal.isPortal &&
        hasImageEntitlement(userLicensedItems));
}
function hasImageEntitlement(userLicensedItems) {
    return userLicensedItems === null || userLicensedItems === void 0 ? void 0 : userLicensedItems.some((licensedItem) => { var _a; return (_a = licensedItem.entitlements) === null || _a === void 0 ? void 0 : _a.some((entitlement) => entitlement.toLowerCase() === "image"); });
}
async function fetchUserLicensedItems(portal) {
    var _a;
    const { userLicensedItems } = await (0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(_a = portal.restUrl) !== null && _a !== void 0 ? _a : portal.portalUrl}/community/self?returnUserLicensedItems=true`);
    return userLicensedItems;
}
function canCreateLocatorView(user, portal) {
    var _a, _b;
    const hasWorldGeocoder = (_a = portal.helperServices) === null || _a === void 0 ? void 0 : _a.geocode.some(({ url }) => isServiceProxyGeocoder(url, portal));
    const privileges = (_b = user === null || user === void 0 ? void 0 : user.privileges) !== null && _b !== void 0 ? _b : [];
    return (!(0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user) &&
        hasWorldGeocoder &&
        (!portal.isPortal ||
            (!(0,_portal_d518b571_js__WEBPACK_IMPORTED_MODULE_0__.i)(portal) &&
                // https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/40338
                privileges.includes("portal:user:viewOrgItems") &&
                privileges.includes("portal:user:createItem"))));
}
const canCreateLocator = (user) => !(0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user);
function canCreateAdvancedNotebooks(user) {
    return user === null || user === void 0 ? void 0 : user.privileges.includes("premium:publisher:createAdvancedNotebooks");
}
function canCreateNotebooks(user) {
    return user === null || user === void 0 ? void 0 : user.privileges.includes("premium:publisher:createNotebooks");
}
function canCreateDataStore(user, portal) {
    var _a;
    return !!portal.isPortal && !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:publisher:registerDataStores"));
}
function canGeocode(user) {
    return !(0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.a)(user) && (user === null || user === void 0 ? void 0 : user.privileges.includes("premium:user:geocode"));
}
function canPublishFromCloud(user, portal, userLicensedItems) {
    return !portal.isPortal && canPublishFeatures(user, portal) && canPublish(user, portal, userLicensedItems);
}
function canPublishServiceDefinition(user, portal) {
    return canPublishFeatures(user, portal) && canPublishTiles(user, portal);
}
function canPublishType(user, type, portal) {
    switch (type) {
        case "CSV":
        case "GeoJson":
        case "Microsoft Excel":
        case "Shapefile":
        case "File Geodatabase":
        case "Photos with Locations":
            return canPublishFeatures(user, portal);
        case "Tile Package":
            return canPublishTiles(user, portal);
        case "Vector Tile Package":
            return canPublishVectorTiles(user);
        case "Scene Package":
            return canPublishScenes(user);
        case "Service Definition":
            return canPublishServiceDefinition(user, portal);
        default:
            return true;
    }
}
function canManageCredits(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:manageCredits"));
}
function canShowTotalCredits(user, portal) {
    var _a, _b, _c;
    return ((0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.b)(user) ||
        canManageCredits(user) ||
        !!(((_a = user === null || user === void 0 ? void 0 : user.assignedCredits) !== null && _a !== void 0 ? _a : (_b = user === null || user === void 0 ? void 0 : user.sourceJSON) === null || _b === void 0 ? void 0 : _b.assignedCredits) > -1 &&
            ((_c = portal === null || portal === void 0 ? void 0 : portal.portalProperties) === null || _c === void 0 ? void 0 : _c.showCreditsOnProfile)));
}
const canAddAPIKey = (_) => false;
// temporarily disable for now https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/42863
// ["Trial Developer", "Developer", "Developer Subscription"].includes(subscriptionType);
function canViewOrgGroups(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:viewGroups"));
}
function canViewOrgItems(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:viewItems"));
}
function canViewUsers(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:viewUsers"));
}
function canUpdateOrgItems(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:updateItems"));
}
function canDeleteOrgItems(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:deleteItems"));
}
function canReassignOrgItems(user) {
    var _a;
    return !!((_a = user === null || user === void 0 ? void 0 : user.privileges) === null || _a === void 0 ? void 0 : _a.includes("portal:admin:reassignItems"));
}
function canManageItems(user) {
    return ((0,_privileges_5c382f61_js__WEBPACK_IMPORTED_MODULE_1__.b)(user) ||
        (canViewUsers(user) &&
            canViewOrgItems(user) &&
            (canUpdateOrgItems(user) || canDeleteOrgItems(user) || canReassignOrgItems(user))));
}



//# sourceMappingURL=privileges-74639dae.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,