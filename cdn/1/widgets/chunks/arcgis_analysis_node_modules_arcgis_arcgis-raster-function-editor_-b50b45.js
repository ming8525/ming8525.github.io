"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-b50b45"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-879f83d7.js":
/*!*******************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-879f83d7.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F: () => (/* binding */ FunctionType),
/* harmony export */   R: () => (/* binding */ RFxListViewMode)
/* harmony export */ });
/**
 * Defines how a raster function template is applied on an image service
 */
const FunctionType = {
    Mosaic: 0,
    Item: 1,
    ItemGroup: 2
};
/**
 * CORE: the list is shown in rfx-editor-core -> has an action item in the end of the function list item.
 */
const RFxListViewMode = {
    CORE: "CORE",
    STANDARD: "STANDARD"
};



//# sourceMappingURL=interfaces-879f83d7.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/popover-utils-725493d7.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/popover-utils-725493d7.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ createNodeInteractionPopover),
/* harmony export */   r: () => (/* binding */ removeOpenableDomElement),
/* harmony export */   s: () => (/* binding */ showHelp)
/* harmony export */ });
/**
 * @param {OpenableHtmlElement | undefined} element the element to close and remove
 */
function removeOpenableDomElement(element) {
    if (element !== undefined) {
        element.open = false;
        element.remove();
    }
}
/**
 * @param {Document} document used to append
 * @param {OpenableHtmlElement} element the element to add to the dom and open
 */
/**
 *
 * @param document
 * @param element
 */
function addOpenableDomElement(document, element) {
    if (document.body.contains(element) === false) {
        document.body.appendChild(element);
        element.open = true;
    }
}
/**
 * creates  help popover component.
 * @param CreateHelpPopoverParams
 * @param {CreateHelpPopoverParams} params  parameters for creating help popover
 * @returns HTMLRfxHelpPopoverElement
 */
function createHelpPopover(params) {
    const { helpUrl, helpId, heading, referenceElement, portal, helpSrcdoc, learnMoreUrl, placement, offsetDistance, offsetSkidding } = params;
    const popover = document.createElement("rfx-help-popover");
    popover.helpUrl = helpUrl;
    popover.helpId = helpId;
    popover.heading = heading;
    popover.referenceElement = referenceElement;
    popover.placement = placement ?? "leading-start";
    popover.portal = portal;
    popover.helpSrcdoc = helpSrcdoc;
    popover.learnMoreUrl = learnMoreUrl;
    if (offsetDistance !== undefined) {
        popover.offsetDistance = offsetDistance;
    }
    if (offsetSkidding !== undefined) {
        popover.offsetSkidding = offsetSkidding;
    }
    return popover;
}
/**
 *  show help popover for helpId
 *  @param {HTMLRfxHelpPopoverElement} toolHelpPopover
 *  @param {CreateHelpPopoverParams} params needed parameters for help
 *  @returns {HTMLRfxHelpPopoverElement}  helpPopover instance
 */
function showHelp(toolHelpPopover, params) {
    const { helpUrl, helpId, heading, referenceElement, portal, helpSrcdoc, helpFileName, learnMoreUrl, offsetDistance, offsetSkidding } = params;
    if (toolHelpPopover !== undefined) {
        removeOpenableDomElement(toolHelpPopover);
        toolHelpPopover = undefined;
    }
    toolHelpPopover = createHelpPopover({
        helpUrl,
        helpId,
        heading,
        referenceElement,
        portal,
        helpSrcdoc,
        helpFileName,
        learnMoreUrl,
        offsetDistance,
        offsetSkidding
    });
    addOpenableDomElement(document, toolHelpPopover);
    return toolHelpPopover;
}
/**
 * creates  Node Interaction popover component.
 * @param CreateNodeInteractionPopoverParams
 * @param {CreateNodeInteractionPopoverParams} params  parameters for creating node Interaction popover
 * @returns HTMLCalcitePopoverElement
 */
function createNodeInteractionPopover(popover, params) {
    const { referenceElement, label, direction, offsetDistance, offsetSkidding, showPropertiesAction, handleNodeDuplicate, handleNodeRename, handleNodeDelete, handleNodeEditProperties } = params;
    if (popover !== undefined) {
        removeOpenableDomElement(popover);
        popover = undefined;
    }
    popover = document.createElement("calcite-popover");
    const popoverProps = {
        overlayPositioning: "absolute",
        autoClose: true,
        dir: direction,
        focusTrapDisabled: true,
        triggerDisabled: true,
        pointerDisabled: true,
        placement: "top",
        closable: false,
        open: true,
        referenceElement: referenceElement,
        label: label,
        offsetDistance: offsetDistance,
        offsetSkidding: offsetSkidding
    };
    Object.assign(popover, popoverProps);
    const nodeInteractionToolbar = document.createElement("rfx-node-interaction-toolbar");
    const nodeInteractionToolbarProps = {
        showPropertiesAction,
        handleNodeDuplicate,
        handleNodeRename,
        handleNodeDelete,
        handleNodeEditProperties
    };
    Object.assign(nodeInteractionToolbar, nodeInteractionToolbarProps);
    popover.append(nodeInteractionToolbar);
    addOpenableDomElement(document, popover);
    return popover;
}



//# sourceMappingURL=popover-utils-725493d7.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/resources-46b293b2.js":
/*!******************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/resources-46b293b2.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: () => (/* binding */ HTMLClasses),
/* harmony export */   R: () => (/* binding */ RFxPanelSlots)
/* harmony export */ });
const HTMLClasses = {
    panel: `panel`
};
const RFxPanelSlots = {
    headerContent: "header-content",
    headerActionsEnd: "header-actions-end"
};



//# sourceMappingURL=resources-46b293b2.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-core-interfaces-87709b62.js":
/*!****************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-core-interfaces-87709b62.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   E: () => (/* binding */ EditorActonBarActions)
/* harmony export */ });
const EditorActonBarActions = {
    newTemplate: "new-template",
    openTemplate: "open-template",
    addFunction: "add-function",
    addConstant: "add-constant",
    addRaster: "add-raster"
};



//# sourceMappingURL=rfx-core-interfaces-87709b62.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-editor-app-f96dc31e.js":
/*!***********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-editor-app-f96dc31e.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   R: () => (/* binding */ RFxEditorApp)
/* harmony export */ });
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _rfx_core_interfaces_87709b62_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rfx-core-interfaces-87709b62.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-core-interfaces-87709b62.js");
/* harmony import */ var _functions_f1f2dffd_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./functions-f1f2dffd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/functions-f1f2dffd.js");
/* harmony import */ var _help_text_34a29835_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./help-text-34a29835.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-text-34a29835.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");
/* harmony import */ var _resources_46b293b2_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./resources-46b293b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/resources-46b293b2.js");
/* harmony import */ var _popover_utils_725493d7_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./popover-utils-725493d7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/popover-utils-725493d7.js");
/* harmony import */ var _widget_factory_e81c7501_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./widget-factory-e81c7501.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/widget-factory-e81c7501.js");
/* harmony import */ var _interfaces_879f83d7_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./interfaces-879f83d7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-879f83d7.js");























const HTMLClasses = {
    host: "host",
    content: "content",
    actionBar: "action-bar",
    menuActions: "menu-actions",
    headerActions: "header-actions",
    tooltip: "tooltip",
    appContainer: "editor-container",
    overlayElement: "overlay-element",
    overlayPanel: "overlay-panel"
};
const CSS_UTILITY = {
    rtl: "arcgis--rtl"
};
const Slot = {
    actionBar: "action-bar"
};

const DiagramZoomInCommand = (receiver) => {
    return {
        execute: async () => {
            await receiver.zoomIn();
        }
    };
};
const DiagramZoomOutCommand = (receiver) => {
    return {
        execute: async () => {
            await receiver.zoomOut();
        }
    };
};
const DiagramAutoLayoutCommand = (receiver) => {
    return {
        execute: async () => {
            await receiver.autoLayout();
        }
    };
};
const DiagramStretchCommand = (receiver) => {
    return {
        execute: async () => {
            await receiver.stretch();
        }
    };
};
const DiagramPanCommand = (receiver) => {
    return {
        execute: async () => {
            await receiver.pan();
        }
    };
};
const AddRFxFunctionCommand = (receiver) => {
    return {
        execute: async (rfxTemplate) => {
            await receiver.addRFxFunction(rfxTemplate);
        }
    };
};
const AddRasterNodeCommand = (receiver) => {
    return {
        execute: async () => {
            await receiver.addRasterNode();
        }
    };
};
const AddScalarNodeCommand = (receiver) => {
    return {
        execute: async () => {
            await receiver.addScalarNode();
        }
    };
};
const AddRFTPortalItemCommand = (receiver) => {
    return {
        execute: async (portalItemId) => {
            await receiver.addRFTPortalItem(portalItemId);
        }
    };
};

const rightToolBarBuilder = ({ handleRFTLaunch, handleRFTSave, handleRFTSaveAs, handleOpenTemplateEditor, handleRFTShare }) => ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-rft-interaction-toolbar", { handleRFTLaunch: handleRFTLaunch, handleRFTSave: handleRFTSave, handleRFTSaveAs: handleRFTSaveAs, handleOpenTemplateEditor: handleOpenTemplateEditor, handleRFTShare: handleRFTShare }));
const leftToolBarBuilder = ({ handleDiagramZoomIn, handleDiagramZoomOut, handleDiagramAutoLayout, handleDiagramStretch, handleDiagramSelect, handleDiagramPan }) => ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-diagram-interaction-toolbar", { handleDiagramZoomIn: handleDiagramZoomIn, handleDiagramZoomOut: handleDiagramZoomOut, handleDiagramAutoLayout: handleDiagramAutoLayout, handleDiagramStretch: handleDiagramStretch, handleDiagramSelect: handleDiagramSelect, handleDiagramPan: handleDiagramPan }));
const rfxTemplateEditorBuilder = ({ heading, data, handlePanelClose, handlePanelCancel, handlePanelOk }) => ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-panel", { heading: heading, data: data, class: {
        [HTMLClasses.overlayElement]: true,
        [HTMLClasses.overlayPanel]: true
    }, showFooter: true, closable: true, onPanelOkClick: handlePanelOk, onPanelCancelClick: handlePanelCancel, onCalcitePanelClose: handlePanelClose },
    (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-template-editor", null)));
const rfxListViewBuilder = ({ handleTriggerSelectFunction, handlePanelClose, heading }) => ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-panel", { heading: heading, closable: true, showFooter: false, closed: false, class: {
        [HTMLClasses.overlayElement]: true,
        [HTMLClasses.overlayPanel]: true
    }, onCalcitePanelClose: handlePanelClose },
    (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-list-view", { mode: _interfaces_879f83d7_js__WEBPACK_IMPORTED_MODULE_21__.R.CORE, onTriggerSelectFunction: handleTriggerSelectFunction })));
const rfxArgDetailsEditorBuilder = ({ rfxTemplate, handlePanelClose, headerElementComponent, helpActionComponent }) => ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-panel", { heading: rfxTemplate?.name, closable: true, showFooter: true, customHeader: true, customHeaderAction: true, class: {
        [HTMLClasses.overlayElement]: true,
        [HTMLClasses.overlayPanel]: true
    }, onCalcitePanelClose: handlePanelClose },
    headerElementComponent,
    helpActionComponent,
    (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-details-editor", { rfxTemplate: rfxTemplate })));
const rfxBrowseLayersDialogBuilder = ({ heading, handlePanelClose }) => ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-panel", { heading: heading, closable: true, showFooter: true, class: {
        [HTMLClasses.overlayElement]: true,
        [HTMLClasses.overlayPanel]: true
    }, onCalcitePanelClose: handlePanelClose },
    (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-select-layer-panel", null)));

const rfxEditorAppCss = ":root{--calcite-color-brand:#007ac2;--calcite-color-brand-hover:#00619b;--calcite-color-brand-press:#004874;--calcite-color-status-info:#00619b;--calcite-color-status-success:#35ac46;--calcite-color-status-warning:#edd317;--calcite-color-status-danger:#d83020;--calcite-color-status-danger-hover:#a82b1e;--calcite-color-status-danger-press:#7c1d13;--calcite-color-background:#f8f8f8;--calcite-color-foreground-1:#ffffff;--calcite-color-foreground-2:#f3f3f3;--calcite-color-foreground-3:#eaeaea;--calcite-color-text-1:#151515;--calcite-color-text-2:#4a4a4a;--calcite-color-text-3:#6a6a6a;--calcite-color-text-inverse:#ffffff;--calcite-color-text-link:#00619b;--calcite-color-border-1:#cacaca;--calcite-color-border-2:#d4d4d4;--calcite-color-border-3:#dfdfdf;--calcite-color-border-input:#949494;--rfx-quarter-spacing:0.25rem;--rfx-half-spacing:0.5rem;--rfx-three-quarter-spacing:0.75rem;--rfx-full-spacing:1rem;--rfx-component-default-width:100%;--rfx-ui-border-input:var(--calcite-color-border-2);--rfx-popover-content-min-height:30vh;--rfx-popover-content-max-height:60vh;--rfx-popover-content-height:45vh;--rfx-widget-content-height:30vh}.host{height:100%;width:100%}.content{height:100%;display:flex}.action-bar{height:100%;border-width:0 1px 0 0;border-style:solid;border-color:var(--calcite-color-border-2)}.menu-actions{display:inline-flex;justify-self:stretch}.header-actions{height:100%}.tooltip{white-space:nowrap}.arcgis--rtl .action-bar{border-width:0 0 0 1px}.editor-container{position:relative;}.overlay-element{z-index:3;box-shadow:0 0 5px rgba(0, 0, 0, 0.2);border-radius:0.25rem}.overlay-panel{max-height:32rem;max-width:22rem;width:22rem}";

const RFxEditorApp = class {
    constructor(hostRef) {
        (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.analysisRFTLaunch = (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "analysisRFTLaunch", 7);
        this.rfxCoreServices = {
            diagramZoomInCommand: undefined,
            diagramZoomOutCommand: undefined,
            diagramAutoLayoutCommand: undefined,
            diagramStretchCommand: undefined,
            diagramPanCommand: undefined,
            addRFxFunctionCommand: undefined,
            addRasterNodeCommand: undefined,
            addScalarNodeCommand: undefined,
            addRFTPortalItemCommand: undefined
        };
        /**
         * The order in which elements are declared matters, especially for elements that are placed in the "left" slot.
         * In the "left" slot, the first element declared will be positioned on the leftmost side, while in the "right" slot,
         * the first element declared will be on the rightmost side.
         *
         * NOTE that while slots can be used in a generic manner, slots can be generic but will depend on the implemention of
         * the UI we are conforming to, In this context, we are referring to the behavior of slots in esri-core,
         * where there are only two slots available, and they are designed to display elements in the manner described above.
         */
        this.overlayElementsConfig = {
            leftToolBar: {
                slot: "left",
                visible: true,
                builder: () => leftToolBarBuilder({
                    handleDiagramZoomIn: this.handleDiagramZoomIn,
                    handleDiagramZoomOut: this.handleDiagramZoomOut,
                    handleDiagramAutoLayout: this.handleDiagramAutoLayout,
                    handleDiagramStretch: this.handleDiagramStretch,
                    handleDiagramSelect: this.handleDiagramSelect,
                    handleDiagramPan: this.handleDiagramPan
                }),
                type: "static"
            },
            rightToolBar: {
                slot: "right",
                visible: true,
                builder: () => rightToolBarBuilder({
                    handleRFTLaunch: this.handleRFTLaunch,
                    handleRFTSave: this.handleRFTSave,
                    handleRFTSaveAs: this.handleRFTSaveAs,
                    handleOpenTemplateEditor: this.handleOpenTemplateEditor,
                    handleRFTShare: this.handleRFTShare
                }),
                type: "static"
            },
            rfxTemplateEditor: {
                slot: "right",
                visible: false,
                builder: ({ templatePropertiesTitle: heading }) => rfxTemplateEditorBuilder({
                    heading,
                    handlePanelCancel: this.handleRFxTemplateEditorPanelCancel,
                    handlePanelOk: this.handleRFxTemplateEditorPanelOk,
                    handlePanelClose: this.handleRFxTemplateEditorPanelClose,
                    data: {
                        trialData: "trialData"
                    }
                })
            },
            rfxListView: {
                slot: "left",
                visible: false,
                builder: ({ addRasterFunctionTitle: heading }) => rfxListViewBuilder({
                    heading,
                    handleTriggerSelectFunction: this.handleRFxListViewTriggerSelectFunction,
                    handlePanelClose: this.handleRFxListViewPanelClose
                }),
                type: "static"
            },
            rfxArgDetailsEditor: {
                slot: "right",
                visible: false,
                builder: ({ detailsEditorRfxTemplate: rfxTemplate }) => rfxArgDetailsEditorBuilder({
                    rfxTemplate,
                    handlePanelClose: this.handleRFxDetailsEditorPanelClose,
                    headerElementComponent: ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: _resources_46b293b2_js__WEBPACK_IMPORTED_MODULE_18__.R.headerContent, ref: (el) => {
                            // TODO: Fix this in future somehow
                            this.headerElement = el;
                        } }, rfxTemplate?.name)),
                    helpActionComponent: ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-action", { label: "", text: "", icon: "information", slot: _resources_46b293b2_js__WEBPACK_IMPORTED_MODULE_18__.R.headerActionsEnd, class: HTMLClasses.headerActions, onClick: this.handleRFxDetailsEditorHeadingHelpClick }))
                })
            },
            rfxBrowseLayersDialog: {
                slot: "right",
                visible: false,
                builder: ({ browseLayerDialogTitle: heading }) => rfxBrowseLayersDialogBuilder({
                    heading,
                    handlePanelClose: this.handleRFxBrowseLayersPanelClose
                })
            }
        };
        this.initializeRFxEditorCore = (rfxEditorCoreElement) => {
            const rfxEditorCore = rfxEditorCoreElement;
            this.rfxEditorCoreElement = rfxEditorCoreElement;
            // Assign services here
            this.rfxCoreServices.diagramZoomInCommand = DiagramZoomInCommand(rfxEditorCore);
            this.rfxCoreServices.diagramZoomOutCommand = DiagramZoomOutCommand(rfxEditorCore);
            this.rfxCoreServices.diagramAutoLayoutCommand = DiagramAutoLayoutCommand(rfxEditorCore);
            this.rfxCoreServices.diagramStretchCommand = DiagramStretchCommand(rfxEditorCore);
            this.rfxCoreServices.diagramPanCommand = DiagramPanCommand(rfxEditorCore);
            this.rfxCoreServices.addRFxFunctionCommand = AddRFxFunctionCommand(rfxEditorCore);
            this.rfxCoreServices.addRasterNodeCommand = AddRasterNodeCommand(rfxEditorCore);
            this.rfxCoreServices.addScalarNodeCommand = AddScalarNodeCommand(rfxEditorCore);
            this.rfxCoreServices.addRFTPortalItemCommand = AddRFTPortalItemCommand(rfxEditorCore);
        };
        this.afterCreatePanel = (node) => {
            console.log("rfx-editor-app: panel created.", node);
        };
        this.handleNewTemplateClick = () => { };
        this.handleOpenTemplateClick = () => {
            const { portal } = this;
            this.itemBrowserElement = (0,_widget_factory_e81c7501_js__WEBPACK_IMPORTED_MODULE_20__.c)({
                header: this.strings.browseRFT,
                portal,
                user: portal.user,
                onClose: this.closItemBrowser,
                onSelection: this.handleItemBrowserSelection
            });
            document.body.appendChild(this.itemBrowserElement);
        };
        this.handleItemBrowserSelection = async (event) => {
            if (event.detail !== null) {
                const portalItemId = event.detail.id;
                try {
                    await this.rfxCoreServices.addRFTPortalItemCommand.execute(portalItemId);
                }
                catch (error) {
                    console.error("Unable to display selected Raster function template.");
                    // show browse failure alert
                    // this.showFailureAlert({ title: this.strings.rftLoadFail });
                }
            }
        };
        this.handleAddFunctionClick = () => {
            this.visibilityReducer({ key: "rfxListView", visible: true });
        };
        this.handleAddConstantClick = () => {
            this.rfxCoreServices.addScalarNodeCommand.execute();
        };
        this.handleAddRasterClick = () => {
            this.rfxCoreServices.addRasterNodeCommand.execute();
        };
        this.handleRunClick = () => { };
        this.handleSaveClick = () => { };
        this.handleCloseClick = () => { };
        this.handleDiagramZoomIn = () => {
            this.rfxCoreServices.diagramZoomInCommand.execute();
        };
        this.handleDiagramZoomOut = () => {
            this.rfxCoreServices.diagramZoomOutCommand.execute();
        };
        this.handleDiagramAutoLayout = () => {
            this.rfxCoreServices.diagramAutoLayoutCommand.execute();
        };
        this.handleDiagramStretch = () => {
            this.rfxCoreServices.diagramStretchCommand.execute();
        };
        this.handleDiagramPan = () => {
            this.rfxCoreServices.diagramPanCommand.execute();
        };
        this.handleDiagramSelect = () => {
            // FIXME avoid logic to toggle in the same command
            this.rfxCoreServices.diagramPanCommand.execute();
        };
        this.handleRFTLaunch = () => {
            this.analysisRFTLaunch.emit(this.rfxTemplate);
        };
        this.handleRFTSave = () => {
            console.log("handleRFTSave");
        };
        this.closeSaveModal = () => {
            if (this.saveModalElement !== undefined) {
                this.saveModalElement.removeEventListener("cancelClick", this.closeSaveModal);
                this.saveModalElement.remove();
                this.saveModalElement = undefined;
            }
        };
        this.closItemBrowser = () => {
            if (this.itemBrowserElement !== undefined) {
                this.itemBrowserElement.removeEventListener("rfxItemBrowserClose", this.closItemBrowser);
                this.itemBrowserElement.remove();
                this.itemBrowserElement = undefined;
            }
        };
        this.handleRFTSaveAs = () => {
            console.log("handleRFTSaveAs");
            const { portal, portalItem, closeSaveModal } = this;
            this.saveModalElement?.remove();
            this.saveModalElement = (0,_widget_factory_e81c7501_js__WEBPACK_IMPORTED_MODULE_20__.a)({
                portal,
                portalItem,
                onCancel: closeSaveModal
            });
            document.body.appendChild(this.saveModalElement);
        };
        this.handleOpenTemplateEditor = () => {
            this.visibilityReducer({ key: "rfxTemplateEditor", visible: true });
        };
        this.handleRFTShare = () => {
            console.log("handleRFTShare");
        };
        this.handleRFxListViewTriggerSelectFunction = async (event) => {
            event.stopPropagation();
            const { detail: rfxfunctionTitle } = event;
            // TODO: remove when node click is enabled
            const rfxTemplate = await (0,_functions_f1f2dffd_js__WEBPACK_IMPORTED_MODULE_2__.d)(rfxfunctionTitle);
            this.detailsEditorRfxTemplate = rfxTemplate;
            this.rfxCoreServices.addRFxFunctionCommand.execute(rfxTemplate);
            // this.visibilityReducer({ key: "rfxArgDetailsEditor", visible: true });
        };
        this.handleRFxListViewPanelClose = (event) => {
            event.stopPropagation();
            this.visibilityReducer({ key: "rfxListView", visible: false });
        };
        this.handleRFxTemplateEditorPanelClose = (event) => {
            event.stopPropagation();
            this.visibilityReducer({ key: "rfxTemplateEditor", visible: false });
        };
        this.handleRFxTemplateEditorPanelOk = (event) => {
            event.stopPropagation();
            const { detail: value } = event;
            console.log(value);
        };
        this.handleRFxTemplateEditorPanelCancel = (event) => {
            event.stopPropagation();
            const { detail: value } = event;
            console.log(value);
        };
        this.handleRFxDetailsEditorPanelClose = (event) => {
            event.stopPropagation();
            this.visibilityReducer({ key: "rfxArgDetailsEditor", visible: false });
        };
        this.handleRFxBrowseLayersPanelClose = (event) => {
            event.stopPropagation();
            this.visibilityReducer({ key: "rfxBrowseLayersDialog", visible: false });
        };
        /**
         * Handles the change event of Analysis Help Popover close
         * @category Private
         */
        this.handlePopoverClose = () => {
            // Sort of garbage collection, done to ensure toolHelpPopover is dispose correctly once closed.
            (0,_popover_utils_725493d7_js__WEBPACK_IMPORTED_MODULE_19__.r)(this.toolHelpPopover);
        };
        /**
         * Handles the click event of Heading Help
         * @category Private
         */
        this.handleRFxDetailsEditorHeadingHelpClick = async () => {
            // TODO: remove when node click is enabled
            // TODO: looks like rfxName and rfxTitle are two different things
            // Pass rfxName as identifier, rfxTitle as Panel name
            const rfxTemplate = this.detailsEditorRfxTemplate;
            const rfxIdentifer = (0,_functions_f1f2dffd_js__WEBPACK_IMPORTED_MODULE_2__.h)(rfxTemplate);
            const { helpTemplate: helpSrcdoc, learnMoreUrl } = await (0,_help_text_34a29835_js__WEBPACK_IMPORTED_MODULE_3__.b)({
                rfxName: rfxIdentifer,
                rfxTemplate,
                portal: undefined // this.portal
            });
            this.toolHelpPopover = (0,_popover_utils_725493d7_js__WEBPACK_IMPORTED_MODULE_19__.s)(this.toolHelpPopover, {
                helpSrcdoc,
                helpId: "toolDescription",
                heading: rfxTemplate.name,
                referenceElement: this.headerElement,
                learnMoreUrl,
                offsetDistance: 25,
                offsetSkidding: 0 // vertical axis
            });
            this.toolHelpPopover.addEventListener("rfxHelpPopoverClose", this.handlePopoverClose);
        };
        this.showRfxList = false;
        this.mapView = undefined;
        this.mapLayers = undefined;
        this.portal = undefined;
        this.portalItem = undefined;
        this.detailsEditorRfxTemplate = undefined;
        this.renderFlag = false;
    }
    // TODO: Since a slot signifies variable components we can't have this mechanism, improve in future
    handleActionBarClick(payload) {
        switch (payload.detail.actionId) {
            case _rfx_core_interfaces_87709b62_js__WEBPACK_IMPORTED_MODULE_1__.E.newTemplate:
                this.handleNewTemplateClick();
                break;
            case _rfx_core_interfaces_87709b62_js__WEBPACK_IMPORTED_MODULE_1__.E.openTemplate:
                this.handleOpenTemplateClick();
                break;
            case _rfx_core_interfaces_87709b62_js__WEBPACK_IMPORTED_MODULE_1__.E.addFunction:
                this.handleAddFunctionClick();
                break;
            case _rfx_core_interfaces_87709b62_js__WEBPACK_IMPORTED_MODULE_1__.E.addConstant:
                this.handleAddConstantClick();
                break;
            case _rfx_core_interfaces_87709b62_js__WEBPACK_IMPORTED_MODULE_1__.E.addRaster:
                this.handleAddRasterClick();
        }
        console.log("actionBar clicked");
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    async componentWillLoad() {
        ({ strings: this.strings, dir: this.direction } = await (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_5__.b)(this.hostElement, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.g)(`.`)));
    }
    disconnectedCallback() {
        (0,_popover_utils_725493d7_js__WEBPACK_IMPORTED_MODULE_19__.r)(this.toolHelpPopover);
    }
    // --------------------------------------------------------------------------
    //
    //  Private methods
    //
    // --------------------------------------------------------------------------
    // Reducer to update visibility
    visibilityReducer({ key, visible }) {
        const MAX_ITEMS_VISIBLE_IN_SLOT = 2;
        const element = this.overlayElementsConfig[key];
        // Rule 1: Check if the item is already visible.
        if (element.visible === visible) {
            return; // No change needed
        }
        if (visible === true) {
            // Find all items in the same slot.
            const sameSlotItems = Object.values(this.overlayElementsConfig).filter((item) => item.slot === element.slot);
            // Rule 2: If there are more than one visible items in the same slot, hide all but the first one.
            if (sameSlotItems.length >= MAX_ITEMS_VISIBLE_IN_SLOT) {
                sameSlotItems.slice(1).forEach((item) => {
                    item.visible = false;
                    // Optionally, you can call a close method if it exists.
                    // item.close?.();
                });
            }
        }
        element.visible = visible;
        this.scheduleRenderer();
    }
    scheduleRenderer() {
        this.renderFlag = !this.renderFlag;
    }
    /**
     * Renders overlay elements based on the configuration.
     * @returns An array of components to be rendered in the overlay slots.
     */
    renderOverlayElements() {
        const detailsEditorRfxTemplate = this.detailsEditorRfxTemplate;
        const addRasterFunctionTitle = this.strings.addRasterFunctionTitle;
        const templatePropertiesTitle = this.strings.templatePropertiesTitle;
        const browseLayerDialogTitle = this.strings.browseLayerDialogTitle;
        const dynamicBuilderProps = {
            detailsEditorRfxTemplate,
            addRasterFunctionTitle,
            templatePropertiesTitle,
            browseLayerDialogTitle
        };
        const overlayElementsConfig = this.overlayElementsConfig;
        const overlayElementsKeys = Object.keys(overlayElementsConfig);
        const overlayElements = overlayElementsKeys.map((key) => {
            const elementConfig = overlayElementsConfig[key];
            if (!elementConfig.visible) {
                return [];
            }
            const component = elementConfig?.builder?.(dynamicBuilderProps);
            component.$attrs$.slot = elementConfig.slot;
            return component;
        });
        return overlayElements;
    }
    /**
     * Private method to render the editor core UI
     * @category Private
     */
    _renderEditorCoreUI() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-editor-core", { ref: this.initializeRFxEditorCore, onRfxCoreNodeEditProperties: (event) => {
                event.stopPropagation();
                const { detail: value } = event;
                console.log(value);
                switch (value.dataType) {
                    case "Raster" /* ToolArgumentDataType.Raster */:
                        this.visibilityReducer({ key: "rfxBrowseLayersDialog", visible: true });
                        break;
                    case "Tool" /* ToolArgumentDataType.Tool */:
                        this.visibilityReducer({ key: "rfxArgDetailsEditor", visible: true });
                        this.detailsEditorRfxTemplate = value.json;
                        break;
                }
            } }, this.renderOverlayElements()));
    }
    /**
     * @category Lifecycle
     * Render lifecycle method
     */
    render() {
        console.log("rfx-editor-app render");
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.H, { class: HTMLClasses.host }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
                [HTMLClasses.content]: true,
                [CSS_UTILITY.rtl]: this.direction === "rtl"
            } }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: Slot.actionBar }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-panel", { heading: "", ref: this.afterCreatePanel }, this._renderEditorCoreUI()))));
    }
    static get assetsDirs() { return ["t9n"]; }
    get hostElement() { return (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.a)(this); }
};
RFxEditorApp.style = rfxEditorAppCss;



//# sourceMappingURL=rfx-editor-app-f96dc31e.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-editor-app.entry.js":
/*!********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-editor-app.entry.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   rfx_editor_app: () => (/* reexport safe */ _rfx_editor_app_f96dc31e_js__WEBPACK_IMPORTED_MODULE_0__.R)
/* harmony export */ });
/* harmony import */ var _rfx_editor_app_f96dc31e_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rfx-editor-app-f96dc31e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-editor-app-f96dc31e.js");
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _rfx_core_interfaces_87709b62_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rfx-core-interfaces-87709b62.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-core-interfaces-87709b62.js");
/* harmony import */ var _functions_f1f2dffd_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./functions-f1f2dffd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/functions-f1f2dffd.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _resources_27c66f5c_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./resources-27c66f5c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/resources-27c66f5c.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _getTag_96af029d_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./_getTag-96af029d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/_getTag-96af029d.js");
/* harmony import */ var _help_text_34a29835_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./help-text-34a29835.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-text-34a29835.js");
/* harmony import */ var _rfx_args_helper_ab401543_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./rfx-args-helper-ab401543.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-args-helper-ab401543.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");
/* harmony import */ var _resources_46b293b2_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./resources-46b293b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/resources-46b293b2.js");
/* harmony import */ var _popover_utils_725493d7_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./popover-utils-725493d7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/popover-utils-725493d7.js");
/* harmony import */ var _widget_factory_e81c7501_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./widget-factory-e81c7501.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/widget-factory-e81c7501.js");
/* harmony import */ var _interfaces_879f83d7_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./interfaces-879f83d7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-879f83d7.js");





























//# sourceMappingURL=rfx-editor-app.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/widget-factory-e81c7501.js":
/*!***********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/widget-factory-e81c7501.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ createRFxSaveModal),
/* harmony export */   b: () => (/* binding */ buildTitlePane),
/* harmony export */   c: () => (/* binding */ createRFxItemBrowser),
/* harmony export */   d: () => (/* binding */ buildRfxSection),
/* harmony export */   e: () => (/* binding */ createRFxLabelWrapper)
/* harmony export */ });
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");


/**
 * Rfx section widget
 * @param {RFxWidgetProps['label']} label - label of the section
 * @param {RFxWidgetProps['open']} open whether or not the component is open
 * @returns {HTMLRfxSectionElement} - Rfx section component
 */
const buildRfxSection = ({ label, open }) => {
    const rfxSection = document.createElement("rfx-section");
    rfxSection.label = label;
    rfxSection.open = open;
    return rfxSection;
};
/**
 * Rfx wrapper around calcite-block, used as function panel
 * @param {RFxWidgetProps['content']} content - content of the section
 * @param {RFxWidgetProps['title']} title - title of the section
 * @param {RFxWidgetProps['isFunctionChain']} isFunctionChain whether or not the rfxtemplate being built is Function Chain
 * @param {RFxWidgetProps['unsupportedWarningComponent']} unsupportedWarningComponent HTMLCalciteNoticeElement notice to append to panel incase rfxtemplate has unsupported ui-overrrdies / data/domain types
 * @returns {HTMLCalciteBlockElement} - Rfx section component
 */
const buildTitlePane = ({ content, unsupportedWarningComponent, title, isFunctionChain }) => {
    const titlePane = document.createElement("calcite-block");
    titlePane.open = true;
    // if function chain show Function name as heading
    if (isFunctionChain === true) {
        titlePane.heading = title;
        titlePane.collapsible = true;
        titlePane.headingLevel = 3;
    }
    if (!(0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_0__.i)(unsupportedWarningComponent)) {
        titlePane.appendChild(unsupportedWarningComponent);
    }
    titlePane.appendChild(content);
    return titlePane;
};
/**
 * Rfx wrapper around rfx-block, used to display label of function parameters
 * @param {RFxWidgetProps['label']} label - label of the parameter
 * @param {RFxWidgetProps['hideHelp']} hideHelp whether or not to show the help icon next to parameter label
 * @param {RFxWidgetProps['onHelpActionClick']} onHelpActionClick function to be executed when helpAction is clicked
 * @returns {HTMLCalciteBlockElement} - Rfx label component
 */
const createRFxLabelWrapper = ({ label, hideHelp = false, onHelpActionClick }) => {
    const labelWrapper = document.createElement("rfx-label");
    labelWrapper.label = label;
    labelWrapper.hideHelp = hideHelp;
    labelWrapper.addEventListener("rfxLabelHelpActionClick", onHelpActionClick);
    return labelWrapper;
};
/**
 * To create save dialgoue on save or save as click
 * @param {RFxModalProps['portal']} portal - portal to which the item should be saved
 * @param {RFxModalProps['portalItem']} portalItem potal item details to be shown on save dialogue
 * @param {RFxModalProps['onCancelClick']} onCancelClick function to be executed when cancel is clicked
 * @returns {HTMLRFxSaveModalElement} - Rfx save modal element
 */
const createRFxSaveModal = ({ portal, portalItem, onCancel }) => {
    const saveModalElement = document.createElement("rfx-save-modal");
    saveModalElement.portal = portal;
    saveModalElement.portalItem = portalItem;
    saveModalElement.addEventListener("cancelClick", onCancel);
    return saveModalElement;
};
/**
 * To create item broser for RFT browsing
 * @param {RfxSaveModalProps['portal']} portal - portal to which the item should be saved
 * @param {RFxWidgetProps['portalItem']} portalItem potal item details to be shown on save dialogue
 * @param {RFxWidgetProps['onCancelClick']} onCancelClick function to be executed when cancel is clicked
 * @returns {HTMLRFxSaveModalElement} - Rfx save modal element
 */
const createRFxItemBrowser = ({ header, portal, user, onClose, onSelection }) => {
    const itemBrowserElement = document.createElement("rfx-item-browser");
    itemBrowserElement.portal = portal;
    itemBrowserElement.user = user;
    itemBrowserElement.header = header;
    itemBrowserElement.filter = `(type: "Raster function template")`;
    itemBrowserElement.selectionMode = "single";
    itemBrowserElement.addEventListener("rfxItemBrowserClose", onClose);
    itemBrowserElement.addEventListener("rfxItemBrowserSelection", onSelection);
    return itemBrowserElement;
};



//# sourceMappingURL=widget-factory-e81c7501.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,