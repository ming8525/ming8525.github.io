"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-41b04b"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.fi-ae5053e5.js":
/*!**************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.fi-ae5053e5.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addRaster: () => (/* binding */ addRaster),
/* harmony export */   addScalar: () => (/* binding */ addScalar),
/* harmony export */   breadcrumb: () => (/* binding */ breadcrumb),
/* harmony export */   breadcrumbEditor: () => (/* binding */ breadcrumbEditor),
/* harmony export */   cancel: () => (/* binding */ cancel),
/* harmony export */   category: () => (/* binding */ category),
/* harmony export */   categoryNames: () => (/* binding */ categoryNames),
/* harmony export */   close: () => (/* binding */ close),
/* harmony export */   copy: () => (/* binding */ copy),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   defaultModelName: () => (/* binding */ defaultModelName),
/* harmony export */   definitionQuery: () => (/* binding */ definitionQuery),
/* harmony export */   description: () => (/* binding */ description),
/* harmony export */   deselectFunction: () => (/* binding */ deselectFunction),
/* harmony export */   details: () => (/* binding */ details),
/* harmony export */   dialogTitle: () => (/* binding */ dialogTitle),
/* harmony export */   dontSave: () => (/* binding */ dontSave),
/* harmony export */   enterFURL: () => (/* binding */ enterFURL),
/* harmony export */   enterURL: () => (/* binding */ enterURL),
/* harmony export */   error: () => (/* binding */ error),
/* harmony export */   errorTitle: () => (/* binding */ errorTitle),
/* harmony export */   everyone: () => (/* binding */ everyone),
/* harmony export */   f32PixelType: () => (/* binding */ f32PixelType),
/* harmony export */   f64PixelType: () => (/* binding */ f64PixelType),
/* harmony export */   failedToLoadLayer: () => (/* binding */ failedToLoadLayer),
/* harmony export */   folder: () => (/* binding */ folder),
/* harmony export */   general: () => (/* binding */ general),
/* harmony export */   groupFieldName: () => (/* binding */ groupFieldName),
/* harmony export */   groupItemsBy: () => (/* binding */ groupItemsBy),
/* harmony export */   groups: () => (/* binding */ groups),
/* harmony export */   invalidRFTMessage: () => (/* binding */ invalidRFTMessage),
/* harmony export */   isDataset: () => (/* binding */ isDataset),
/* harmony export */   isPublic: () => (/* binding */ isPublic),
/* harmony export */   item: () => (/* binding */ item),
/* harmony export */   itemGroup: () => (/* binding */ itemGroup),
/* harmony export */   loadingLayer: () => (/* binding */ loadingLayer),
/* harmony export */   matchVariables: () => (/* binding */ matchVariables),
/* harmony export */   mosaic: () => (/* binding */ mosaic),
/* harmony export */   multidimensionalRules: () => (/* binding */ multidimensionalRules),
/* harmony export */   name: () => (/* binding */ name),
/* harmony export */   noTagErrorMsg: () => (/* binding */ noTagErrorMsg),
/* harmony export */   noTitleErrorMsg: () => (/* binding */ noTitleErrorMsg),
/* harmony export */   noTitleTagErrorMsg: () => (/* binding */ noTitleTagErrorMsg),
/* harmony export */   ok: () => (/* binding */ ok),
/* harmony export */   organization: () => (/* binding */ organization),
/* harmony export */   outputPixelType: () => (/* binding */ outputPixelType),
/* harmony export */   owner: () => (/* binding */ owner),
/* harmony export */   parameter: () => (/* binding */ parameter),
/* harmony export */   parameters: () => (/* binding */ parameters),
/* harmony export */   properties: () => (/* binding */ properties),
/* harmony export */   raster: () => (/* binding */ raster),
/* harmony export */   rasterFunctionEditor: () => (/* binding */ rasterFunctionEditor),
/* harmony export */   rasterFunctions: () => (/* binding */ rasterFunctions),
/* harmony export */   rfxLicenseInfo: () => (/* binding */ rfxLicenseInfo),
/* harmony export */   s16PixelType: () => (/* binding */ s16PixelType),
/* harmony export */   s32PixelType: () => (/* binding */ s32PixelType),
/* harmony export */   s8PixelType: () => (/* binding */ s8PixelType),
/* harmony export */   save: () => (/* binding */ save),
/* harmony export */   saveAs: () => (/* binding */ saveAs),
/* harmony export */   saveUtils: () => (/* binding */ saveUtils),
/* harmony export */   savingMessage: () => (/* binding */ savingMessage),
/* harmony export */   scalar: () => (/* binding */ scalar),
/* harmony export */   search: () => (/* binding */ search),
/* harmony export */   selectFeature: () => (/* binding */ selectFeature),
/* harmony export */   selectFunction: () => (/* binding */ selectFunction),
/* harmony export */   selectRaster: () => (/* binding */ selectRaster),
/* harmony export */   serviceURL: () => (/* binding */ serviceURL),
/* harmony export */   setGroupSharing: () => (/* binding */ setGroupSharing),
/* harmony export */   setSharingLevel: () => (/* binding */ setSharingLevel),
/* harmony export */   share: () => (/* binding */ share),
/* harmony export */   shareWith: () => (/* binding */ shareWith),
/* harmony export */   success: () => (/* binding */ success),
/* harmony export */   tagFieldName: () => (/* binding */ tagFieldName),
/* harmony export */   tags: () => (/* binding */ tags),
/* harmony export */   title: () => (/* binding */ title),
/* harmony export */   toolDetailsEditor: () => (/* binding */ toolDetailsEditor),
/* harmony export */   toolEditor: () => (/* binding */ toolEditor),
/* harmony export */   toolModeler: () => (/* binding */ toolModeler),
/* harmony export */   tryAgain: () => (/* binding */ tryAgain),
/* harmony export */   type: () => (/* binding */ type),
/* harmony export */   u16PixelType: () => (/* binding */ u16PixelType),
/* harmony export */   u32PixelType: () => (/* binding */ u32PixelType),
/* harmony export */   u8PixelType: () => (/* binding */ u8PixelType),
/* harmony export */   unionDimensions: () => (/* binding */ unionDimensions),
/* harmony export */   unknownPixelType: () => (/* binding */ unknownPixelType),
/* harmony export */   unsavedTitle: () => (/* binding */ unsavedTitle),
/* harmony export */   unsavedWarningExisting: () => (/* binding */ unsavedWarningExisting),
/* harmony export */   unsavedWarningNew: () => (/* binding */ unsavedWarningNew),
/* harmony export */   userStartDirection: () => (/* binding */ userStartDirection),
/* harmony export */   variables: () => (/* binding */ variables),
/* harmony export */   viewerModeMessage: () => (/* binding */ viewerModeMessage),
/* harmony export */   viewerModeTitle: () => (/* binding */ viewerModeTitle),
/* harmony export */   warning: () => (/* binding */ warning)
/* harmony export */ });
const ok = "OK";
const cancel = "Peruuta";
const enterURL = "Kirjoita kuvapalvelun URL-osoite";
const serviceURL = "Palvelun URL-osoite";
const selectRaster = "Valitse rasteri";
const failedToLoadLayer = "Karttatason lataaminen epäonnistui";
const loadingLayer = "Ladataan karttatasoa";
const selectFeature = "Valitse kohdekarttataso";
const enterFURL = "Anna kohdepalvelun URL";
const addRaster = "Lisää rasterin muuttuja";
const addScalar = "Lisää vakio";
const raster = "Rasteri";
const scalar = "Skalaari";
const defaultModelName = "Rasteritoimintomalli";
const general = "Yleinen";
const parameters = "Parametrit";
const variables = "Muuttujat";
const name = "Nimi";
const description = "Kuvaus";
const parameter = "Parametri";
const isPublic = "IsPublic";
const isDataset = "IsDataset";
const unknownPixelType = "Tuntematon";
const outputPixelType = "Tulosaineiston pikselityyppi";
const u8PixelType = "Etumerkitön 8-bittinen";
const s8PixelType = "Etumerkillinen 8-bittinen";
const u16PixelType = "Etumerkitön 16-bittinen";
const s16PixelType = "Etumerkillinen 16-bittinen";
const u32PixelType = "Etumerkitön 32-bittinen";
const s32PixelType = "Etumerkillinen 32-bittinen";
const f32PixelType = "32-bittinen desimaaliluku";
const f64PixelType = "64-bittinen kaksoistarkkuus";
const properties = "Ominaisuudet";
const multidimensionalRules = "Moniulotteiset säännöt";
const matchVariables = "Täsmäytä muuttujat";
const unionDimensions = "Liitä dimensiot";
const rasterFunctionEditor = {
	invalidRFTMessage: "Rasteritoimintomalli ei kelpaa.",
	rfxArgsEditor: {
		outputRaster: "TulosaineistonRasteri",
		raster: "Rasteri",
		unsupportedDataTypeWarning: "Seuraavia argumentteja ei näytetä, koska niitä ei tueta tällä hetkellä.",
		unsupportedFunction: "Sisältää tällä hetkellä rasteritoimintoja, joita ei tueta."
	},
	rfxRasterInput: {
		selectLayer: "Valitse karttataso",
		browseLayers: "Selaa karttatasoja",
		rfxVariable: "RasterFunctionVariable"
	},
	rfxBandCombinationEditor: {
		methodLabel: "Metodi",
		bandLabel: "Kaista",
		combinationLabel: "Yhdistelmä"
	},
	rfxRemapGrid: {
		minimum: "Minimi",
		maximum: "Maksimi",
		output: "Tulosaineisto",
		noData: "NoData-arvo",
		remapValuesLabel: "Täsmäytä arvot uudelleen"
	},
	rfxNamedRasterEditor: {
		rasterVariables: "Rasterimuuttujat",
		deleteSelectedVars: "Poista valitut muuttujat"
	},
	rfxClippingGeometry: {
		clippingLayer: "Karttatason leikkaus",
		clippingRaster: "Leikkausrasteri",
		clippingGeometry: "Leikkausgeometria",
		customExtent: "Mukautettu laajuus",
		outputExtent: "Tulosaineiston laajuus",
		currentExtent: "Nykyinen kartan laajuus",
		drawLabel: "Piirrä"
	},
	rfxCustomExtent: {
		top: "Yläosa",
		right: "Oikea",
		bottom: "Alaosa",
		left: "Vasen"
	},
	rfxRasterArrayEditor: {
		moveUp: "Siirrä ylös",
		moveDown: "Siirry alas",
		remove: "Poista"
	},
	rfxStatisticsGrid: {
		stdDev: "Keski- hajonta",
		min: "Vähimmäisarvo",
		max: "Enimmäisarvo",
		mean: "Keskiarvo"
	},
	rfxWeightedSumTableEditor: {
		weightedSumTable: "Painotetun summan taulu",
		id: "ID",
		layer: "Karttataso",
		field: "Kenttä",
		weight: "Leveys:",
		value: "Arvo",
		selectLayer: "Valitse karttataso"
	},
	rfxWeightedOverlayTableEditor: {
		weightedOverlayTable: "Painotetun päällekkäisyyden taulu",
		id: "ID",
		layer: "Karttataso",
		field: "Kenttä",
		influence: "Vaikutus",
		sumOfInfluence: "Vaikutuksen summa",
		value: "Arvo",
		remapTable: "Täsmäytä taulu uudelleen",
		scale: "Mittakaava",
		scales: "Mittakaavat",
		selectRaster: "Valitse rasteri"
	},
	rfxFeatureSelect: {
		addFeatureLayer: "Etsi kohdekarttatasoa",
		addPointLayer: "Etsi pistekarttatasoa"
	},
	rfxFieldSelect: {
		value: "Arvo",
		count: "Lukumäärä"
	},
	rfxAttributeTable: {
		tableType: "Taulutyyppi",
		manual: "Manuaalinen",
		external: "Ulkoinen",
		minVal: "Vähimmäisarvo",
		maxVal: "Enimmäisarvo",
		baseClassName: "Luokan perusnimi",
		colorScheme: "Värimalli",
		defaultClassName: "Selite_",
		generateTable: "Luo taulu",
		browseTable: "Selaa taulua",
		value: "Arvo",
		classname: "LuokanNimi",
		color: "Väri"
	},
	rfxFieldNumberSwitchable: {
		number: "Numeerinen",
		field: "Kenttä",
		string: "Merkkijono",
		linearUnit: "Lineaarinen yksikkö"
	},
	rfxPropertySet: {
		name: "Nimi",
		value: "Arvo"
	},
	rfxConversionGrid: {
		size: "Koko"
	},
	rfxTransposeBit: {
		bitPattern: "Bittikuvio",
		outputBit: "Tulosbitti",
		inputBit: "Lähtöbitti"
	},
	rfxSpatialReference: {
		placeHolder: "Tarkenna salasanan mukaan",
		coordinateSystem: "Koordinaattijärjestelmä",
		gcs: "Maantieteellinen koordinaattijärjestelmä",
		pcs: "Projisoitu koordinaattijärjestelmä",
		vcs: "Korkeuskoordinaattijärjestelmä"
	}
};
const rfxLicenseInfo = "Tämän rasterifunktiomallin avulla voit käsitellä kuva-aineistosi käyttämällä ArcGIS Image Server -palvelinta.";
const rasterFunctions = {
	rfx: {
		aCosHName: "ACosH",
		aCosHSnip: "Laskee rasterin solujen käänteisen hyperbolisen kosinin.",
		aCosHDesc: "Funktio laskee rasterin pikselien käänteisen hyperbolisen kosiniarvon.",
		aCosName: "ACos",
		aCosSnip: "Laskee rasterin pikselien käänteiskosiniarvon.",
		aCosDesc: "Tämä rasterifunktio laskee rasterin solujen käänteiskosiniarvon. Matematiikassa kaikilla trigonometrisilla funktioilla on määrätty kelvollisten syötearvojen joukko, jota kutsutaan arvoalueeksi. Myös kunkin funktion tulosarvoilla on määrätty arvojoukko. Tämän työkalun arvoalue on [-1, 1], ja arvojoukko on [0, pi].",
		aSinHName: "ASinH",
		aSinHSnip: "Laskee rasterin solujen käänteisen hyperbolisen sinin.",
		aSinHDesc: "Funktio laskee rasterin pikselien käänteisen hyperbolisen siniarvon.",
		aSinName: "ASin",
		aSinSnip: "Laskee rasterin solujen käänteissiniarvon.",
		aSinDesc: "Funktio laskee rasterin pikselien käänteissiniarvon.",
		aTan2Name: "ATan2",
		aTan2Snip: "Laskee rasterin solujen käänteistangentin (x-, y-koordinaattien perusteella).",
		aTan2Desc: "Funktio laskee rasterin pikselien käänteistangentin (x- ja y-koordinaattien perusteella).",
		aTanHName: "ATanH",
		aTanHSnip: "Laskee rasterin solujen käänteisen hyperbolin tangentin.",
		aTanHDesc: "Funktio laskee rasterin pikselien käänteisen hyperbolisen tangenttiarvon.",
		aTanName: "ATan",
		aTanSnip: "Laskee rasterin solujen käänteistangentin.",
		aTanDesc: "Funktio laskee rasterin pikselien käänteistangenttiarvon.",
		absName: "Abs.",
		absSnip: "Laskee rasterin solujen absoluuttisen arvon.",
		absDesc: "Abs-funktio laskee rasterin pikselien absoluuttisen arvon.",
		reflectanceName: "Näennäisheijastus",
		reflectanceSnip: "Muuntaa raakakuva-aineiston ilmakehän yläosan arvoiksi ottamalla huomioon anturin ominaisuudet, auringon aseman ja tietojen tallennusajan.",
		reflectanceDesc: "Tämä funktio säätää kuvan kirkkauden digitaalinumeroiden (DN) arvoja joidenkin satelliittianturien osalta. Säädöt perustuvat auringon korkeuteen, tallennuspäivämäärään ja anturin ominaisuuksiin kunkin kaistan vahvistuksen ja vääristymän määrittämiseksi. Tätä funktiota käytetään joidenkin satelliittikuvien heijastus- tai kirkkausarvojen säätämiseen maiseman valaistuksen ja anturin vahvistusasetusten perusteella. Kuvat säädetään teoreettisesti yleiseen valaistusolosuhteeseen, joten eri päivinä ja eri anturien avulla kuvattujen maisemien välillä ei pitäisi olla suurta eroa. Tästä on hyötyä kuvien luokitellussa, väritasapainotuksessa ja mosaikoinnissa. Tätä funktiota voi käyttää vain tietyissä kuva-aineistoissa. Käytettävissä olevat anturit ovat Landsat MSS, Landsat TM, Landsat ETM+, Landsat 8, IKONOS, QuickBird, GeoEye-1, RapidEye, DMCii, WorldView-1, WorldView-2, SPOT 6 ja Pleiades.<div><br/>Funktio suorittaa kaksi korjausta. Ensimmäinen perustuu vahvistusasetuksiin. Alkuperäiset kirkkausarvot luodaan uudelleen kuvan arvoista käyttämällä käänteisiä vahvistusyhtälöitä. Toinen korjaus liittyy eroihin auringon kulmassa ja kirkkaudessa. Alkuperäiset kirkkausarvot säädetään yleiseen valaistustilaan normalisoimalla tallennetut maisemat muuttujan valaistusolosuhteisiin. Yleisesti, kun tulosaineiston kuvan tietotyyppi on sama kuin lähtöaineiston kuvan tietotyyppi, tulosaineiston arvot ovat pienempiä kuin lähtöaineiston arvot ja ne leikataan kelvolliselle arvoalueelle.</div>.",
		argStatisticsName: "ArgStatistics",
		argStatisticsSnip: "Laskee arg-tilastot, kuten Arg-maksimi, Arg-minimi, Arg-mediaani ja Kesto.",
		argStatisticsDesc: "Funktio laskee arg-tilastot. ArgStatistics-funktiossa on neljä metodia: ArgMax, ArgMin, ArgMedian ja Duration.",
		arithmeticName: "Aritmeettinen",
		arithmeticSnip: "Suorittaa aritmeettisen operaation kahden rasterin välillä tai rasterin ja skalaarin välillä.",
		arithmeticDesc: "Aritmeettinen-funktio suorittaa aritmeettisen operaation kahden rasterin välillä tai rasterin ja skalaarin välillä ja toisin päin.",
		aspectSlopeName: "Kaltevuussuunta-kaltevuus",
		aspectSlopeSnip: "Luo rasterin, joka näyttää samanaikaisesti jatkuvan pinnan kaltevuussuunnan (suunnan) ja kaltevuuden (jyrkkyyden) digitaalisen korkeusmallin esittämällä tavalla.",
		aspectSlopeDesc: "Kaltevuussuunta-Kaltevuus-funktio luo rasterikarttatason, joka näyttää samanaikaisesti pinnan kaltevuussuunnan ja kaltevuuden. Kaltevuussuunta tunnistaa arvonmuutoksen enimmäismäärän laskevan suunnan kustakin pikselistä naapuripikseleihin. Kaltevuussuunta voidaan ajatella kaltevuuden suunnaksi. Tulosaineiston rasterin arvot näyttävät kaltevuussuunnan kompassisuunnan värisävynä (värinä). Kaltevuus edustaa jokaisen DEM (Digital Elevation Model) -pikselin korkeuden arvonmuutosta. Kaltevuus edustaa pinnan jyrkkyyttä ja sitä symboloidaan kolmella luokalla, jotka on esitetty värikylläisyyden (kirkkauden) avulla.<div><br/>Tulosaineiston kaltevuussuunta-kaltevuusrasterin pikseliarvot vastaavat kaltevuussuunnan ja kaltevuuden yhdistelmää. Pikseleitä, joiden arvo on alle 20, pidetään litteinä ja ne esitetään harmaana. Arvoa 21 suuremmat kaltevuussuunta-kaltevuusarvot esitetään vaihtelevina värikylläisyyksinä seuraavasti: 21–30 —Alhaisen kaltevuuden kylläisyysarvo, 31–40—Keskitason kaltevuuden kylläisyysarvo, yli 41—Korkean kaltevuuden kylläisyysarvo</div>",
		aspectName: "Kaltevuussuunta",
		aspectSnip: "Näytä, mihin suuntaan pikseli osoittaa, kun 0 on pohjoinen ja kulmat kasvavat myötäpäivään 360 astetta kohti.",
		aspectDesc: "Kaltevuussuunta-funktio tunnistaa arvonmuutoksen enimmäismäärän laskevan suunnan kustakin solusta naapurisoluihin. Kaltevuussuunta voidaan ajatella kaltevuuden suunnaksi. Tulosaineiston rasterin arvot näyttävät kaltevuussuunnan kompassisuunnan.<div><br/>Tämän funktion syöte on lähtöaineiston rasteri. Kaltevuussuunta-funktiota käytetään usein digitaalisessa korkeusmallissa (DEM). Oletusarvon mukaan kaltevuussuunta näkyy harmaasävykuvana. Voit lisätä Värikartta-funktion tietyn värimallin määrittämistä varten tai sallia mosaiikkia tarkastelevan henkilön muokata symboleja omalla värimallillaan.</div>.",
		tableName: "Ominaisuustietotaulu",
		tableSnip: "Käyttää taulua aineistoryhmän arvojen nimeämiseen ja merkitsemiseen. Taulun sarakkeiden tiedot on erotettu pilkuilla: PixelValue, AttributeName, RedValue, GreenValue, BlueValue.",
		tableDesc: "Ominaisuustietotaulu-funktion avulla voit määrittää ominaisuustietotaulun yksikaistaisen mosaiikkiaineistoryhmän tai rasteriaineistoryhmän symbolisointia varten. <div><br/>Tästä on hyötyä, kun haluat esittää kuva-aineiston, joka on käynyt läpi luokittelun maankäyttöä, kuten metsämaa, kosteikko, maanviljelysalue ja kaupunkialue, varten. Jos taulu sisältää lisäksi kentät nimeltä punainen, vihreä ja sininen, näiden kenttien arvoja käytetään värikarttana kuvaa renderöitäessä.</div>.",
		bandArithmeticName: "Kaistojen aritmeettinen laskenta",
		bandArithmeticSnip: "Laskee indeksit käyttäen ennalta määritettyjä kaavoja tai käyttäjän määrittämää lauseketta.",
		bandArithmeticDesc: "Aritmeettinen Kaista-funktio suorittaa aritmeettisen operaation rasteriaineistoryhmän kaistojen välillä. Voit valita ennalta määritetyistä algoritmeista tai voit syöttää oman yksirivisen kaavan. Tuetut operaattorit ovat -, +, /, * ja yksioperandinen -.",
		thresholdName: "Binaarikynnystäminen",
		thresholdSnip: "Järjestää jatkuvat tiedot edustalle ja taustalla pienentämällä kahden luokan välistä kovarianssia.",
		thresholdDesc: "Kun rasteriaineistoryhmässä on kaksihuippuinen jakauma, tämä funktio luo uuden rasterin, joka jakaa aineiston kahteen erilliseen luokkaan. Se luo alimpien arvojen luokan, joka esitetään mustina pikseleinä, ja korkeiden arvojen luokan, joka esitetään valkoisina pikseleinä.",
		bitwiseAndName: "Bittitason AND",
		bitwiseAndSnip: "Suorittaa kahden lähtöaineiston rasterin binaariarvoille bittitason AND-operaation.",
		bitwiseAndDesc: "Bittitason AND suorittaa kahden lähtöaineiston rasterin binaariarvoille bittitason AND-operaation.",
		bitwiseLeftShiftName: "Bittitason siirto vasemmalle",
		bitwiseLeftShiftSnip: "Suorittaa kahden lähtöaineiston rasterin binaariarvoille bittitason siirto vasemmalle -operaation.",
		bitwiseLeftShiftDesc: "Bittitason siirto vasemmalle suorittaa kahden lähtöaineiston rasterin binaariarvoille bittitason siirto vasemmalle -operaation.",
		bitwiseNotName: "Bittitason NOT",
		bitwiseNotSnip: "Suorittaa kahden lähtöaineiston rasterin binaariarvoille bittitason NOT (komplementti) -operaation.",
		bitwiseNotDesc: "Funktio suorittaa lähtöaineiston rasterin binaariarvolle bittitason NOT (komplementti) -operaation.",
		bitwiseOrName: "Bittitason OR",
		bitwiseOrSnip: "Suorittaa kahden lähtöaineistorasterin binaariarvoille Bittitaso - tai -operaation.",
		bitwiseOrDesc: "Suorittaa kahden lähtöaineiston rasterin binaariarvoille Bittitaso - tai -operaation. ",
		bitwiseRightShiftName: "Bittitason siirto oikealle",
		bitwiseRightShiftSnip: "Suorittaa kahden lähtöaineiston rasterin binaariarvoille bittitason siirto oikealle -operaation.",
		bitwiseRightShiftDesc: "Funktio suorittaa kahden lähtöaineiston rasterin binaariarvoille bittitason siirto oikealle -operaation.",
		bitwiseXorName: "Bittitason XOR",
		bitwiseXorSnip: "Suorittaa kahden lähtöaineiston rasterin binaariarvoille bittitason XOR-operaation.",
		bitwiseXorDesc: "Funktio suorittaa kahden lähtöaineiston rasterin binaariarvoille bittitason XOR-operaation.",
		booleanAndName: "Looginen AND",
		booleanAndSnip: "Suorittaa kahden lähtöaineiston rasterin soluarvoille loogisen AND-operaation. Jos kumpikin lähtöaineiston arvo on tosi (ei nolla), tulosaineiston arvo on 1. Jos jompikumpi tai kumpikin lähtöaineiston arvo on epätosi (nolla), tulosaineiston arvo on 0.",
		booleanAndDesc: "Funktio suorittaa kahden lähtöaineiston rasterin binaariarvoille loogisen AND-operaation. Jos kumpikin lähtöaineiston arvo on tosi (ei nolla), tulosaineiston arvo on 1. Jos jompikumpi tai kumpikin lähtöaineiston arvo on epätosi (nolla), tulosaineiston arvo on 0. ",
		booleanNotName: "Looginen NOT",
		booleanNotSnip: "Suorittaa lähtöaineiston rasterin soluarvoille loogisen NOT (komplementti) -operaation. Jos lähtöaineiston arvot ovat tosia (ei nollia), tulosaineiston arvo on 0. Jos lähtöaineiston arvot ovat epätosia (nollia), tulosaineiston arvo on 1.",
		booleanNotDesc: "Funktio suorittaa lähtöaineiston rasterin pikseliarvoille loogisen NOT (komplementti) -operaation. Jos lähtöaineiston arvot ovat tosia (ei nollia), tulosaineiston arvo on 0. Jos lähtöaineiston arvot ovat epätosia (nollia), tulosaineiston arvo on 1.",
		booleanOrName: "Looginen OR",
		booleanOrSnip: "Suorittaa kahden lähtöaineiston rasterin soluarvoille loogisen OR-operaation. Jos jompikumpi tai kumpikin lähtöaineiston arvo on tosi (ei nolla), tulosaineiston arvo on 1. Jos kumpikin lähtöaineiston arvo on epätosi (nolla), tulosaineiston arvo on 0.",
		booleanOrDesc: "Funktio suorittaa kahden lähtöaineiston rasterin soluarvoille loogisen OR-operaation. Jos jompikumpi tai kumpikin lähtöaineiston arvo on tosi (ei nolla), tulosaineiston arvo on 1. Jos kumpikin lähtöaineiston arvo on epätosi (nolla), tulosaineiston arvo on 0.",
		booleanXorName: "Looginen XOR",
		booleanXorSnip: "Suorittaa kahden lähtöaineiston rasterin soluarvoille loogisen XOR-operaation. Jos toinen lähtöaineiston arvo on tosi (ei nolla) ja toinen on epätosi (nolla), tulosaineiston arvo on 1. Jos kumpikin lähtöaineiston arvo on tosi tai kumpikin on epätosi, tulosaineiston arvo on 0.",
		booleanXorDesc: "Funktio suorittaa kahden lähtöaineiston rasterin soluarvoille loogisen XOR-operaation. Jos toinen lähtöaineiston arvo on tosi (ei nolla) ja toinen arvo on epätosi (nolla), tulosaineiston arvo on 1. Jos kumpikin lähtöaineiston arvo on tosi tai kumpikin on epätosi, tulosaineiston arvo on 0.",
		bufferedRasterName: "Puskuroitu",
		bufferedRasterSnip: "Puskuroi viimeksi käytetyt pikselilohkot.",
		bufferedRasterDesc: "Puskuroitua funktiota käytetään monimutkaisten toimintoketjujen optimoimiseen. Se tallentaa tuloksen sitä edeltävän toimintoketjun osan muistiin. <div><br/>Lisää tämä funktio toimintoeditorissa (funktioeditorissa) kohtaan, johon haluat tallentaa tuloksen.</div>.",
		rasterCalculatorName: "Laskin",
		rasterCalculatorSnip: "Laskee rasterin rasteriin perustuvasta matemaattisesta lausekkeesta.",
		rasterCalculatorDesc: "Laskin-funktion avulla voit luoda ja suorittaa lausekkeita ja sisällyttää niitä toimintoketjuihin.",
		cellStatisticsName: "Solun tilastotiedot",
		cellStatisticsSnip: "Laskee solukohtaiset tilastotiedot useista rastereista. Käytettävissä olevat tilastotiedot ovat enemmistö, maksimi, keskiarvo, mediaani, minimi, vähemmistö, prosenttipiste, vaihteluväli, keskihajonta, summa ja diversiteetti.",
		cellStatisticsDesc: "Tämä funktio laskee tilastotiedot useasta rasterista pikselikohtaisesti. Käytettävissä olevat tilastotiedot ovat enemmistö, maksimi, keskiarvo, mediaani, minimi, vähemmistö, vaihteluväli, keskihajonta, summa ja diversiteetti.",
		classifyName: "Luokittele",
		classifySnip: "Määrittää jokaisen pikselin tiettyyn luokkaan. Voit sisällyttää mukaan liitetietoja, kuten segmentoidun kuvan.",
		classifyDesc: "Tämä rasterifunktio luokittelee rasteriaineistoryhmän Esrin luokitusmääritystiedoston (.ecd) ja rasteriaineistoryhmän lähtöaineistojen perusteella. Luokittele-funktiossa käytetty .ecd-tiedosto sisältää kaikki tiedot tiettyä aineistoryhmää ja luokittelua varten ja se luodaan luokittelun opetustyökalujen avulla, kuten Koulutuksen tukivektorikonetyökalujen tai Koulutuksen satunnaisten puiden työkalujen avulla.",
		clipName: "Leikkaa",
		clipSnip: "Määrittää rasterin laajuuden käyttäen koordinaatteja tai toista aineistoryhmää.",
		clipDesc: "Tämä funktio leikkaa rasterin käyttämällä suorakulmiomuotoa määritettyjen ulottuvuuksien mukaan tai leikkaa rasterin lähtöaineiston aluekohteen kohdeluokan muodon perusteella. Leikkeen määrittävä muoto voi leikata rasterin koko laajuudesta tai leikata pois alueen rasterista.",
		colorspaceConversionName: "Värimallin muunto",
		colorspaceConversionSnip: "Muuntaa rasterin RGB-muodosta ja HSV-muotoon ja päinvastoin.",
		colorspaceConversionDesc: "Värimallin muunto -funktio muuntaa kuvan värimallin värisävyn, kylläisyyden ja arvon (HSV) määrittämästä väriavaruudesta punaiseksi, vihreäksi ja siniseksi (RGB) väriksi tai päinvastoin.<div><br/>Tätä funktiota voi käyttää mosaiikkiaineistoryhmässä.</div>.",
		colormapToRGBName: "Värikartta RGB:ksi",
		colormapToRGBSnip: "Muuntaa yksikaistaisen rasterin värikartan avulla kolmikaistaiseksi (punainen, vihreä ja sininen) rasteriksi.",
		colormapToRGBDesc: "Tämä funktio muuntaa yksikaistaisen rasterin värikartan avulla kolmikaistaiseksi (punainen, vihreä ja sininen) rasteriksi.<div><br/>Tästä funktiosta on hyötyä, kun haluat luoda kolmikaistaisen rasterin yksikaistaisesta rasterista, johon on liitetty värikartta. Värikartan arvoja käytetään kunkin punaisen, vihreän ja sinisen kaistan luontiin. Tätä funktiota voi käyttää mosaiikkiaineistoryhmässä.</div>.",
		colormapName: "Värikartta",
		colormapSnip: "Muuttaa rasteriaineiston pikseliarvot harmaasävyiseksi tai RGB-kuvaksi värikartan tai väriliu'un perusteella.",
		colormapDesc: "Värikartta-funktio on eräänlainen rasteriaineiston renderöijä. Se muuntaa rasteriaineiston pikseliarvot joko harmaasävyiseksi tai RGB-värikuvaksi värimallin tai värikarttatiedoston tiettyjen värien perusteella. Voit käyttää värikarttaa analysoidun aineiston esittämiseen, kuten luokitellun kuvan tai topografisen kartan (tai indeksin väriskannatun kuvan) esittämiseen.<div><br/>Värikartat sisältävät sellaisten arvojen joukon, jotka on liitetty yksikaistaisen rasterin esittämisessä käytettyihin väreihin yhtenäisesti samoilla väreillä. Kuhunkin pikseliarvoon liittyy väri, joka on määritetty RGB-arvojen joukkona. Värikartat tukevat mitä tahansa värisyvyyttä mutta eivät liukulukuja. Ne tukevat myös positiivisia ja negatiivisia arvoja ja voivat sisältää puuttuvia väreihin liitettyjä arvoja. Kun esität aineistoryhmän sellaisen värikartan avulla, joka sisältää puuttuvat arvot, puuttuvia arvoja vastaavia pikseleitä ei näytetä.</div>.",
		complexName: "Monimutkainen",
		complexSnip: "Poimii magnitudin kompleksinumeroista.",
		complexDesc: "Tämä funktio laskee magnitudin monimutkaisista arvoista.<div><br/>Tätä funktiota käytetään yleensä tutkakuvissa, jonka aineistotyyppi on monimutkainen. Sitä voidaan käyttää mosaiikkiaineistoryhmässä.</div>.",
		compositeBandName: "Kaistojen yhdistelmä",
		compositeBandSnip: "Yhdistää useita aineistoryhmiä yhteen monikaistaiseen rasteriin.",
		compositeBandDesc: "Kaistojen yhdistelmä -funktion avulla voit yhdistää rastereita monikaistaisen kuvan muodostamiseksi.",
		conName: "Ehto",
		conSnip: "Suorittaa ehdollisen If, Then, Else (Jos, niin, muuten) -operaation. Kun käytetään Ehto-operaattoria, yleensä pitää ketjuttaa yhteen vähintään kaksi toimintoa, joista yksi ilmoittaa ehdot ja toinen on Ehto-operaattori, joka käyttää ehtoja ja määrää, mitkä ovat tosi- ja epätosi-tulokset.",
		conDesc: "Ehto-funktio määrittää tulosaineiston rasterin pikselit kunkin lähtöaineiston pikselin if\\-else-lauseen arvioinnin tuloksen perusteella. Se palauttaa pikseliarvot Tosi-rasterista, jos ehdollisen arvioinnin tulos on tosi (1), tai palauttaa pikseliarvot Epätosi-rasterista, jos ehdollisen arvioinnin tulos on epätosi (0). Loogisen matemaattisen funktion tulos, joka toimii lähtöaineiston rasterina, määrittää tämän ehdon.",
		constantName: "Vakio",
		constantSnip: "Luo virtuaalisen rasterin, jolla on yksi pikseliarvo.",
		constantDesc: "Tämä funktio luo virtuaalirasterin, jolla on yksi pikseliarvo, jota voi käyttää rasteritoimintomalleissa ja mosaiikkiaineistoryhmän käsittelyyn.<div><br/>Vakioarvoa käytetään kullekin rasterin pikseliarvolle.</div>.",
		contourName: "Arvokäyrä",
		contourSnip: "Luo arvokäyrien viivat.",
		contourDesc: "Arvokäyrä-funktio luo arvokäyrän viivat rasterin korkeusaineistoryhmästä yhdistämällä pisteet, joilla on sama korkeus. Arvokäyrät ovat eroviivoja, jotka on luotu rastereina visualisointia varten. Seuraavat tärkeimmät ominaisuudet tekevät tästä funktiosta tehokkaan: arvokäyrät luodaan nopeasti ja dynaamisesti hyvin suurista aineistoryhmistä, kuten World Elevation -aineistoryhmästä. Arvokäyriä voidaan pehmentää, jotta niiden ulkoasu soveltuu paremmin kartografisiin tarkoituksiin arvokäyrien tarkkuutta heikentämättä. Arvokäyrävälejä voi hallita dynaamisesti. Tulosaineiston vaihtoehtoja ovat korkeuskäyrät, vahvistetut korkeuskäyrät ja täytetyt arvokäyrät.<div><br/>Arvokäyräkarttatason luonnista rasterituotteena on merkitystä useille sovelluksille, koska korkeuskäyrät voidaan sijoittaa karttaan ja tarjota tietoa maastosta peittämättä taustalla olevaa aineistoa. Niistä on hyötyä esimerkiksi teknisissä suunnittelusovelluksissa, maanviljelyksen sovelluksissa ja vesihuollon sovelluksissa.</div>.",
		contrastBrightnessName: "Kontrasti ja kirkkaus",
		contrastBrightnessSnip: "Säätää rasterin kontrastia ja kirkkautta.",
		contrastBrightnessDesc: "Kontrasti ja kirkkaus -funktio parantaa rasteriaineiston ulkoasua muokkaamalla kuvan kontrastia ja kirkkautta. Kirkkaus lisää kuvan kokonaisvaloisuutta esimerkiksi merkitsemällä tummat värit vaaleammiksi ja vaaleat värit valkoisemmiksi. Kontrasti puolestaan säätää tummimpien ja vaaleimpien värien välistä eroa.<div><br/>Tämän funktion käyttö muuttaa pikseliarvoja. Tästä syystä tätä funktiota tulisi käyttää silloin, kun halutaan parantaa aineiston ulkoasua eikä silloin, jos aineistoa on tarkoitus käyttää analysointiin, jossa tarvitaan raakapikseliarvoja. Tästä funktiosta on hyötyä, kun aineisto julkaistaan kuvapalveluna, jota voidaan käyttää sovelluksissa ilman mahdollisuutta muokata kuvien kontrastia ja kirkkautta, tai silloin, kun halutaan varmistaa, että kuvat näkyvät haluamillasi asetuksilla.</div>.",
		convolutionName: "Konvoluutio",
		convolutionSnip: "Käyttää suodatinta, joka terävöittää, samentaa, tunnistaa reunat, silottaa tai muodostaa liukuvärit rasteriin.",
		convolutionDesc: "Konvoluutio-funktio suodattaa kuvan pikseliarvoja, mitä voidaan käyttää kuvan terävöintiin tai epäterävöintiin, kuvan reunojen tunnistamiseen tai muihin ydinperustaisiin parannuksiin. Suodattimia käytetään rasterikuvan laadun parantamiseen jättämällä pois häiriöaineistoa tai parantamalla aineiston kohteita. Näitä konvoluutiosuodattimia käytetään liikkuvaan, päällekkäiseen ytimeen (ikkuna tai naapurusto), kuten 3 x 3. Konvoluutiosuodattimet toimivat laskemalla pikseliarvot niiden naapureiden painojen perusteella.",
		corridorName: "Paksunnos",
		corridorSnip: "Laskee kahden lähtöaineiston kumulatiivisen rasterin kumulatiivisten kustannusten määrän.",
		corridorDesc: "Paksunnos-funktio laskee kahden lähtöaineiston kumulatiivisen kustannusrasterin kumulatiivisten kustannusten määrän. Vaikka mitä tahansa kahta rasteria voidaan käyttää lähtöaineistona, merkitsevän tuloksen saaminen edellyttää sitä, että ne ovat muuttumattomia kumulatiivisia kustannusrastereita. Kahden lähtöaineiston järjestyksellä ei ole väliä.",
		cosHName: "CosH",
		cosHSnip: "Laskee rasterin solujen hyperbolisen kosiniarvon.",
		cosHDesc: "Funktio laskee rasterin pikselien hyperbolisen kosiniarvon.",
		cosName: "Cos",
		cosSnip: "Laskee rasterin solun kosiniarvon.",
		cosDesc: "Funktio laskee rasterin pikselien kosiniarvon.",
		costAllocationName: "Kustannusten kohdennus",
		costAllocationSnip: "Laskee kullekin solulle sen pienimmän kustannuslähteen viimeisimmän kustannuspinnan kumulatiivisen kustannuksen perusteella.",
		costAllocationDesc: "Kustannusten kohdennus -funktio laskee kullekin solulle sen pienimmän kustannuslähteen viimeisimmän kustannuspinnan kumulatiivisen kustannuksen perusteella.",
		costBackLinkName: "Kustannusten paluulinkitys",
		costBackLinkSnip: "Määrittää naapurin, joka on seuraava solu pienimmällä kumulatiivisella kustannusreitillä pienimpään kustannuslähteeseen.",
		costBackLinkDesc: "Kustannusten paluulinkitys -funktio määrittää naapurin, joka on seuraava solu pienimmällä kumulatiivisella kustannusreitillä pienimpään kustannuslähteeseen.<div><br/>Paluulinkin rasteri sisältää arvot väliltä 0–8, jotka määrittävät suunnan tai seuraavan naapurisolun (seuraavan solun) sekä pienimmän kumulatiivisen kustannusreitin solusta sen pienimpään kustannuslähteeseen. Jos reitti kulkee oikeanpuoleiseen naapuriin, solulle määritetään arvo 1, ja arvo 2 solulle, joka sijaitsee oikeassa alakulmassa lävistäjää pitkin kuljettaessa. Näin jatketaan myötäpäivään. Arvo 0 on varattu lähdesoluille.</div>.",
		costDistanceName: "Kustannusetäisyys",
		costDistanceSnip: "Laskee pienimmän kumulatiivisen kustannusetäisyyden kullekin solulle kustannuspinnan pienimmästä kustannuslähteestä tai kustannuspinnan pienimpään kustannuslähteeseen.",
		costDistanceDesc: "Kustannusetäisyys-funktio laskee pienimmän kumulatiivisen kustannusetäisyyden kullekin solulle kustannuspinnan pienimmästä kustannuslähteestä tai kustannuspinnan pienimpään kustannuslähteeseen.",
		costPathName: "Kustannusreitti",
		costPathSnip: "Laskee pienimmän kustannuksen reitin lähteestä määränpäähän.",
		costPathDesc: "Yleinen Kustannusreitti-funktio laskee pienimmän kustannuksen reitin lähteestä määränpäähän.<div><br/>Tämä funktio tuottaa tulosaineiston rasterin, johon tallennetaan pienimmän kustannuksen reitti tai reitit valituista sijainneista kumulatiivisessa kustannuspinnassa määritettyyn lähimpään lähdesoluun kustannusetäisyyden mukaan.</div>.",
		curvatureName: "Kaarevuus",
		curvatureSnip: "Laskee rasteripinnan kaarevuuden, mahdollisesti profiilin ja suunnitellun kaarevuuden mukaan lukien.",
		curvatureDesc: "Kaarevuus-funktio näyttää kaltevuuden muodon tai kaarevuuden. Pinnan osa voi olla kovera tai kupera. Voit päätellä sen tarkastelemalla kaarevuusarvoa. Kaarevuus lasketaan laskemalla pinnan toinen derivaatta.<div><br/>Kaarevuus-funktion tulosaineistoa voidaan käyttää vesistö- tai valuma-alueen fyysisten ominaisuuksien kuvaamiseen yritettäessä ymmärtää eroosio- ja valumaprosesseja. Kaarevuusarvon avulla voidaan etsiä maaperän eroosiomalleja sekä tutkia veden virtaamista maalla. Profiilin kaarevuus vaikuttaa virtauksen kiihtyvyyteen ja hidastumiseen ja vaikuttaa siten eroosioon ja kerrostumiseen. Tasomuodon kaarevuus vaikuttaa virtauksen konvergenssiin ja divergenssiin.</div>.",
		divideName: "Jakolasku",
		divideSnip: "Jakaa kahden rasterin arvot solukohtaisesti.",
		divideDesc: "Jaa-funktio jakaa kahden rasterin arvot pikselikohtaisesti.",
		elevationVoidFillName: "Korkeustason aukkojen täyttö",
		elevationVoidFillSnip: "Luo pikseleitä kohtiin, joissa korkeustasotiedoissa on aukkoja.",
		elevationVoidFillDesc: "Korkeustason aukkojen täyttö -funktiota käytetään pikselien luomiseen korkeustasossa esiintyviin aukkoihin.<div><br/>Aukkoja ilmenee, kun pisteitä ei ole kerätty alueelta, jota pikseli edustaa tulosrasterissa. Vesistöt, luokkatyypin valinta tai rajaus aiheuttavat usein aukkoja. Aukkojen täyttöä käytetään usein maanpinnan luonnissa.</div>.",
		equalToName: "Yhtä suuri kuin",
		equalToSnip: "Suorittaa suhteellisen Yhtä suuri kuin -operaation kahdelle lähtöaineistolle solukohtaisesti. Palauttaa arvon 1 soluille, joissa ensimmäinen rasteri on yhtä suuri kuin toinen rasteri, ja arvon 0 soluille, joissa ne eivät ole yhtä suuria.",
		equalToDesc: "Funktio suorittaa Yhtä suuri kuin -operaation kahden rasterin arvoille pikselikohtaisesti. Se palauttaa arvon 1 pikseleille, joissa ensimmäinen rasteri on yhtä suuri kuin toinen rasteri, ja arvon 0 pikseleille, joissa ne eivät ole yhtä suuria.",
		eucAllocationName: "Euklidinen kohdennus",
		eucAllocationSnip: "Laskee kullekin solulle lähimmän lähteen euklidisen etäisyyden perusteella.",
		eucAllocationDesc: "Euklidinen kohdennus -funktio laskee kullekin solulle lähimmän lähteen euklidisen etäisyyden perusteella.",
		eucDirectionName: "Euklidinen suunta",
		eucDirectionSnip: "Laskee kullekin solulle suunnan asteina lähimpään lähteeseen.",
		eucDirectionDesc: "Euklidinen suunta -funktio laskee kullekin solulle suunnan asteina lähimpään lähteeseen. <div><br/>Suunta lasketaan kunkin solun keskipisteestä sitä lähinnä olevan lähdesolun keskipisteeseen. Arvoväli on 0–360 astetta, jossa 0 on varattu lähdesoluille. Itäsuunta (oikealle) on 90 astetta ja arvot kasvavat myötäpäivään (180 on etelä, 270 on länsi ja 360 on pohjoinen).</div>.",
		eucDistanceName: "Euklidinen etäisyys",
		eucDistanceSnip: "Laskee kullekin solulle euklidisen etäisyyden lähimpään lähteeseen.",
		eucDistanceDesc: "Euklidinen etäisyys -funktio laskee kullekin solulle euklidisen etäisyyden lähimpään lähteeseen.",
		exp10Name: "Exp10",
		exp10Snip: "Laskee rasterin solujen 10-kantaisen eksponentin.",
		exp10Desc: "Exp10-funktio laskee rasterin pikselien 10-kantaisen eksponentin.",
		exp2Name: "Exp2",
		exp2Snip: "Laskee rasterin solujen 2-kantaisen eksponentin.",
		exp2Desc: "Tämä funktio laskee rasterin pikselien 2-kantaisen eksponentin.",
		expName: "Exp",
		expSnip: "Laskee rasterin solujen e-kantaisen eksponentin.",
		expDesc: "Tämä funktio laskee rasterin pikselien e-kantaisen eksponentin.",
		extractBandName: "Pura kaistat",
		extractBandSnip: "Määrittää, mitä kaistoja käytetään käytettäessä monikaistaisia aineistoryhmiä.",
		extractBandDesc: " Pura kaistat -funktion avulla voit poimia yhden tai useamman kaistan monikaistaisesta rasteriaineistoryhmästä tai järjestää kaistat uudelleen.<div><br/>Voit käyttää Pura kaistat -funktiota ennen muita funktiota, kuten Aritmeettinen-funktiota, sen määrittämiseen, mitä kaistoja käytetään seuraavan funktion syötteenä.</div>.",
		fillName: "Täyttö",
		fillSnip: "Täyttää pintarasterin vajoamat aineiston pienten epätarkkuuksien poistamista varten.",
		fillDesc: "Yleinen Täyttö-funktio paikantaa ja täyttää korkeuspintarasterin vajoamat ja huiput aineiston pienten epätarkkuuksien poistamiseksi. Funktio käyttää toistuvaa täyttöä, kunnes kaikki vajoamat on täytetty määritetyn Z-rajan puitteissa.<div><br/>Kun korkeuspinta on luotu ortokartoitustyökalujen avulla tai muulla tavalla, aineistossa voi esiintyä usein pieniä mutta merkitseviä virheitä vajoamien ja huippujen muodossa. Kuvanmittauksessa vajoamia ja huippuja nimitetään usein rei'iksi ja virheiksi. Koska pinta-aineistoa käytetään usein mallinnuksessa, kuten hydrologisessa mallinnuksessa, on tärkeää korjata nämä vajoama- ja huippuvirheet tavalla, joka on yhdenmukainen ympäröivän aineiston kanssa.</div>.",
		floatName: "Liukuluku",
		floatSnip: "Muuntaa rasterin kunkin solun arvon liukulukuesitykseksi.",
		floatDesc: "Float-funktio muuntaa rasterin kunkin pikseliarvon liukulukuesitykseksi.",
		flowAccumulationName: "Virtauskertymä",
		flowAccumulationSnip: "Luo virtauskertymän rasterin kuhunkin soluun. Painokerrointa voidaan käyttää valinnaisesti.",
		flowAccumulationDesc: "Yleinen Virtauskertymä-funktio luo virtauskertymän rasterin kuhunkin pikseliin laskemalla yhteen kaikkien niiden pikselien painot, jotka virtaavat kuhunkin laskevan suunnan pikseliin. Jos painoarvorasteria ei ole määritetty, kussakin pikselissä käytetään painoarvoa 1, ja tulosaineiston rasterin pikselien arvo on kuhunkin pikseliin virtaavien pikselien määrä.<div><br/>Tulosaineiston pikselit, joiden virtauskertymä on suuri, ovat virtauskeskittymiä ja niiden avulla voidaan tunnistaa joen uomia. Tulosaineiston pikselit, joiden virtauskertymä on nolla, ovat paikallisia topografisesti korkeita paikkoja ja niiden avulla voidaan tunnistaa harjanteita.</div>.",
		flowDirectionName: "Virtaussuunta",
		flowDirectionSnip: "Luo virtaussuunnan rasterin kustakin solusta sen jyrkimpään laskevan suunnan naapurisoluun.",
		flowDirectionDesc: "Yksi avaintekijöistä pinnan hydrologisten ominaisuuksien johtamisessa on kyky määrittää virtauksen suunta rasterin kustakin pikselistä. Virtaussuunta-rasterifunktio käyttää pintaa lähtöaineistona ja luo virtaussuunnan rasterin kustakin pikselistä sen jyrkimpään laskevan suunnan naapurisoluun. Virtaussuunta-funktio tukee kolmea virtausmallimenetelmää: D8 (kahdeksan suuntaa)-, Multi-Flow Direction (MFD)- ja D-Infinity (DINF) -menetelmää. ",
		flowDistanceName: "Virtausetäisyys",
		flowDistanceSnip: "Laskee jokaiselle solulle vähimmäiskaltevuuden vaaka- tai pystyetäisyyden soluihin virtauksessa tai joessa, johon ne virtaavat.",
		flowDistanceDesc: "Funktio laskee kullekin pikselille vaakasuuntaisen tai pystysuuntaisen laskevan suunnan vähimmäisetäisyyden sen joen tai virran pikseleihin, joihin pikselit virtaavat. Jos valinnainen virtaussuunnan rasteri on määritetty, laskevat suunnat rajoittuvat lähtöaineiston virtaussuunnan rasterin määrittämiin suuntiin. Tulosaineisto on virtausetäisyyden rasteri.",
		focalName: "Keskipistetilastot",
		focalSnip: "Laskee fokaalistatistiikan jokaiselle rasterin pikselille määrättyä fokaaliympäristöä käyttäen.",
		focalDesc: "Keskipistetilastot-funktio laskee fokaalistatistiikan jokaiselle rasterin pikselille määrättyä fokaaliympäristöä käyttäen.",
		geometricName: "Geometrinen",
		geometricSnip: "Lisää aineistoryhmän sijaintitarkkuutta ottamalla huomioon korkeustasot.",
		geometricDesc: "Geometrinen-funktio tuottaa orto-oikaistun kuvan anturitunnistuksen ja maastomallin perusteella. Se lisää aineistoryhmän sijaintitarkkuutta ottamalla huomioon korkeustasot.",
		grayscaleName: "Harmaasävy",
		grayscaleSnip: "Muuntaa monikaistaisen kuvan yksikaistaiseksi harmaasävykuvaksi.",
		grayscaleDesc: "Tämä funktio muuntaa monikaistaisen kuvan yksikaistaiseksi harmaasävykuvaksi.<div><br/>Tämä funktio käyttää määritettyjä painoarvoja kuhunkin lähtöaineiston kaistaan ja normalisoi tulosaineiston kuvan. Painoarvoja käytetään usein, koska joillakin kaistoilla on vaihtelevaa merkitystä sovelluksen mukaan. Esimerkiksi sininen kaista sisältää usein enemmän kohinaa kuin muut kaistat.</div>.",
		greaterThanEqualName: "Suurempi tai yhtä suuri kuin",
		greaterThanEqualSnip: "Suorittaa suhteellisen suurempi tai yhtä suuri kuin -operaation kahdelle lähtöaineistolle solukohtaisesti. Palauttaa arvon 1 soluille, joissa ensimmäinen rasteri on suurempi tai yhtä suuri kuin toinen rasteri, ja arvon 0, jos se ei ole.",
		greaterThanEqualDesc: "Funktio suorittaa suhteellisen Suurempi tai yhtä suuri kuin -operaation kahden lähtöaineiston arvoille pikselikohtaisesti. Se palauttaa arvon 1 pikseleille, joissa ensimmäinen rasteri on suurempi tai yhtä suuri kuin toinen rasteri, ja arvon 0 pikseleille, joissa ensimmäinen rasteri ei ole suurempi tai yhtä suuri kuin toinen rasteri.",
		greaterThanName: "Suurempi kuin",
		greaterThanSnip: "Suorittaa suhteellisen Suurempi kuin -operaation kahdelle lähtöaineistolle solukohtaisesti. Palauttaa arvon 1 soluille, joissa ensimmäinen rasteri on suurempi kuin toinen rasteri, ja arvon 0 soluille, joissa se ei ole.",
		greaterThanDesc: "Funktio suorittaa suhteellisen Suurempi kuin -operaation kahden lähtöaineiston arvoille pikselikohtaisesti. Palauttaa arvon 1 pikseleille, joissa ensimmäinen rasteri on suurempi kuin toinen rasteri, ja arvon 0 pikseleille, joissa ensimmäinen rasteri ei ole suurempi kuin toinen rasteri.",
		heatIndexName: "Lämpöindeksi",
		heatIndexSnip: "Yhdistää ympäristön ilmanlämpötilan ja suhteellisen kosteuden ja palauttaa näennäisen lämpötilan.",
		heatIndexDesc: "Tämä funktio laskee näennäisen lämpötilan ympäristön lämpötilan ja suhteellisen kosteuden perusteella. Näennäinen lämpötila kuvaa usein sitä, miten lämpimältä lämpötila tuntuu ihmiskeholla.<div><br/>Tästä indeksistä on hyötyä laskettaessa vaaratilanteita, jotka liittyvät lääketieteellisiin ongelmiin, kuten lihaskramppeihin, nestehukkaan, kuumuuden aiheuttamaan uupumukseen tai vielä vakavampiin tiloihin, kuten lämpöhalvaukseen kuumina ja kosteina päivinä. Kun suhteellinen kosteus on korkea, kehon erittämä hiki ei haihdu kunnolla, joten ihminen ei voi viilentää oloaan tehokkaasti luonnollisella tavalla. Lämpöopasteita tai -varoituksia sisältävät kartat ovat usein tuote, jossa lämpöindeksin tulos on luokiteltu uudelleen luokiksi, joissa korkeat arvot aiheuttavat todennäköisemmin varoituksen eivätkä vain neuvoa.</div>.",
		hillshadeName: "Vinovalo",
		hillshadeSnip: "Luo pinnasta 3D-esityksen siten, että auringon suhteellinen asema on otettu huomioon kuvan varjostuksessa.",
		hillshadeDesc: "Luo pinnasta 3D-esityksen siten, että auringon suhteellinen asema on otettu huomioon kuvan varjostuksessa. <div><br/>Vinovalo on tekniikka valonlähteen, kaltevuuden ja korkeuspinnan kaltevuussuunnan määrittämän maaston visualisointiin. Se on kvalitatiivinen menetelmä topografian visualisointiin eikä se tarjoa absoluuttisia korkeusarvoja. </div>.",
		intName: "Int",
		intSnip: "Muuntaa rasterin kunkin solun arvon kokonaisluvuksi katkaisemalla desimaaliosan pois.",
		intDesc: "Int-funktio muuntaa rasterin kunkin pikselin arvon kokonaisluvuksi katkaisemalla desimaaliosan pois.",
		interpolateIrregularDataName: "Interpoloi epäsäännölliset tiedot",
		interpolateIrregularDataSnip: "Interpoloi pistepilvistä tai epäsäännöllisistä ruudukoista.",
		interpolateIrregularDataDesc: "Jotkin netCDF- HDF-aineistoryhmät tallentavat geosijaintinsa pikseli- tai pisteaineistomatriiseina, joiden välit ovat epäsäännölliset. Kun nämä aineistoryhmät lisätään mosaiikkiaineistoryhmään, Interpoloi epäsäännölliset tiedot -funktio tekee epäsäännöllisesti ruudukkoon sijoitetusta aineistosta uudelleenotannan, jotta kukin pikseli on kooltaan yhtenäinen ja neliönmuotoinen.<div><br/>Kun muuttujat lisätään netCDF- tai HDF-aineistoryhmästä mosaiikkiaineistoryhmään, funktio tarkistaa automaattisesti, onko aineistomatriisi säännöllinen. Jos se ei ole, Interpoloi epäsäännölliset tiedot -funktion avulla epäsäännöllinen aineisto voidaan muuntaa säännölliseksi ruudukkorasteriksi. Voit muuttaa interpolointimenetelmää ja Interpoloi epäsäännölliset tiedot -rasterifunktiossa käytetyn solun kokoa. Säännöllisiä välejä käyttävässä rasteriaineistossa ei käytetä interpolaatiota ja aineisto luetaan sellaisenaan.</div>.",
		isNullName: "On tyhjäarvo",
		isNullSnip: "Määrittää solukohtaisesti, mitkä lähtöaineiston rasterin arvot ovat NoData-arvoja. Palauttaa arvon 1, jos lähtöaineiston arvo on NoData, ja arvon 0 soluille, jotka eivät ole NoData-arvoja.",
		isNullDesc: "On tyhjäarvo -funktio määrittää pikselikohtaisesti, mitkä lähtöaineiston rasterin arvot ovat NoData-arvoja. Funktio palauttaa arvon 1, jos lähtöaineiston arvo on NoData, ja arvon 0 pikseleille, jotka eivät ole NoData-arvoja.",
		kernelDensityName: "Ydintiheys",
		kernelDensitySnip: "Laskee yksikköaluekohtaisen magnitudin piste- tai aluekohteista käyttämällä ydintoimintoa, jotta tasaisesti kaventunut pinta sopii kuhunkin pisteeseen tai moniviivalle.",
		kernelDensityDesc: "Tämä funktio laskee yksikköaluekohtaisen magnitudin piste- tai aluekohteista käyttämällä ydintoimintoa, jotta tasaisesti kaventunut pinta sopii kuhunkin pisteeseen tai moniviivalle.",
		keyMetadataName: "Keskeiset metatiedot",
		keyMetadataSnip: "Ohittaa tai lisää toimintoketjun rasterin keskeiset metatiedot.",
		keyMetadataDesc: "Tämän funktio avulla voit lisätä ohittaa rasterin keskeiset metatiedot tai lisätä niitä rasteriin.<div><br/>Keskeisten metatietojen tietoja käytetään sovelluksen avustamiseen aineiston käsittelyssä ja renderöinnissä ja lisäksi hyödyllisten tietojen, kuten anturin nimen, kaistojen nimien tai kuva-aineistoon liittyvän pilvipeitteen, tarjoamisessa.</div>.",
		shortestPathName: "Pienimmän kustannuksen reitti",
		shortestPathSnip: "Suorittaa kustannus-etäisyys-analyysin käyttämällä lähde- ja kohdesyötteitä, joiden avulla määritetään sitten pienimmän kustannuksen reitti lähteestä kohteeseen.",
		shortestPathDesc: "Pienimmän kustannuksen reitti -funktio laskee pienimmän kustannuksen reitin lähteestä määränpäähän. Pienin kumulatiivinen kustannusetäisyys lasketaan kullekin pikselille kustannuspinnan perusteella lähimpään lähteeseen. Tämä tuottaa tulosaineiston rasterin, johon tallennetaan pienimmän kustannuksen reitti tai reitit valituista sijainneista kumulatiivisessa kustannuspinnassa määritettyihin lähimpiin lähdepikseleihin kustannusetäisyyden mukaan.<div><br/>Kullekin pienimmän kustannuksen reitille määritetään arvo, kun sellainen huomataan skannausprosessissa. Kustannusreitin lähderasterin päätepikseli saa arvon 1. Ensimmäinen reitti saa arvon 3, toinen arvon 4 jne. Kun usea reitti yhdistyy ja noudattaa jäljellä olevaa etäisyyttä takaisin saman reitin lähteeseen, segmentti, jossa kaksi reittiä kulkee yhdessä, saa arvon 2. Reitin yhdistetylle osuudelle ei voi määrittää arvoa, joka on jollakin reiteistä, koska yhdistetty osuus kuuluu molempiin reitteihin.</div>.",
		lessThanEqualName: "Pienempi tai yhtä suuri kuin",
		lessThanEqualSnip: "Suorittaa suhteellisen pienempi tai yhtä suuri kuin -operaation kahdelle lähtöaineistolle solukohtaisesti. Palauttaa arvon 1 soluille, joissa ensimmäinen rasteri on pienempi tai yhtä suuri kuin toinen rasteri, ja arvon 0, jos se ei ole.",
		lessThanEqualDesc: "Funktio suorittaa suhteellisen Pienempi tai yhtä suuri kuin -operaation kahden lähtöaineiston arvoille pikselikohtaisesti. Se palauttaa arvon 1 pikseleille, joissa ensimmäinen rasteri on pienempi tai yhtä suuri kuin toinen rasteri, ja arvon 0, joissa ensimmäinen rasteri ei ole pienempi tai yhtä suuri kuin toinen rasteri.",
		lessThanName: "Pienempi kuin",
		lessThanSnip: "Suorittaa suhteellisen Pienempi kuin -operaation kahdelle lähtöaineistolle solukohtaisesti. Palauttaa arvon 1 soluille, joissa ensimmäinen rasteri on pienempi kuin toinen rasteri, ja arvon 0, jos se ei ole.",
		lessThanDesc: "Funktio suorittaa suhteellisen Pienempi kuin -operaation kahden lähtöaineiston arvoille pikselikohtaisesti. Se palauttaa arvon 1 pikseleille, joissa ensimmäinen rasteri on pienempi kuin toinen rasteri, ja arvon 0, jos ensimmäinen rasteri ei ole pienempi kuin toinen rasteri.",
		lnName: "Ln",
		lnSnip: "Laskee rasterin solujen luonnollisen (e-kantaisen) logaritmin.",
		lnDesc: "Ln-funktio laskee rasterin kunkin pikselin luonnollisen (e-kantaisen) logaritmin.",
		log10Name: "Log10",
		log10Snip: "Laskee rasterin solujen 10-kantaisen logaritmin.",
		log10Desc: "Log10-funktio laskee rasterin kunkin pikselin 10-kantaisen logaritmin.",
		log2Name: "Log2",
		log2Snip: "Laskee rasterin solujen 2-kantaisen logaritmin.",
		log2Desc: "Log2-funktio laskee rasterin kunkin pikselin 2-kantaisen logaritmin.",
		lookupName: "Haku",
		lookupSnip: "Luo uuden rasterin hakemalla lähtöaineiston rasterin taulun toisesta kentästä löydetyt arvot.",
		lookupDesc: "Funktio luo uuden rasterin hakemalla lähtöaineiston rasterin taulun toisesta kentästä löydetyt arvot.",
		mlClassifyName: "ML-luokitus",
		mlClassifySnip: "Luokittelee kuva-aineiston pikselikohtaisesti. Sekapikselit määritetään sille kohteelle, jolla on suurin prosenttiosuus kyseisessä pikselissä.",
		mlClassifyDesc: "ML-luokitus-funktion avulla voit suorittaa valvotun luokittelun käyttämällä suurimman todennäköisyyden luokitusalgoritmia rasteriaineistoryhmässä tai mosaiikkiaineistoryhmässä. Tämä funktio edellyttää luokittelun allekirjoitustiedostoa.",
		maskName: "Maski",
		maskSnip: "Asettaa arvot, joiden et halua näkyvän.",
		maskDesc: "Tämä rasterifunktio määrittää arvot, joita et halua näyttää rasterissasi. Maski-funktion avulla voit määrittää vähintään yhden NoData-arvon tai kelvollisten pikseliarvojen arvoalueen. ",
		minusName: "Miinus",
		minusSnip: "Vähentää toisen lähtöaineiston rasterin arvon ensimmäisen lähtöaineiston rasterin arvosta solukohtaisesti.",
		minusDesc: "Miinus-funktio vähentää toisen lähtöaineiston rasterin arvon ensimmäisen lähtöaineiston rasterin arvosta pikselikohtaisesti.",
		modName: "Jakojäännös",
		modSnip: "Etsii solukohtaisesti ensimmäisen rasterin jakojäännöksen (moduulin), kun se on jaettu toisella rasterilla.",
		modDesc: "Jakojäännös-funktio etsii pikselikohtaisesti ensimmäisen rasterin jakojäännöksen (moduulin), kun se on jaettu toisella rasterilla. Lähtöaineistojen järjestys on tärkeä ja se vaikuttaa tulosaineiston tulokseen.",
		mosaicRastersName: "Mosaiikkirasterit",
		mosaicRastersSnip: "Nitoo yhteen rasteriaineistoryhmien joukon ja luo yhden aineistoryhmän.",
		mosaicRastersDesc: "Mosaiikkirasterit-funktio luo mosaiikkikuvan useista kuvista. Kun kuvien välillä on päällekkäisyyttä, voit valita useista tavoista näytettävien kuvien määrittämiseksi.",
		ndviColorizedName: "Väritetty NDVI",
		ndviColorizedSnip: "Luo kasvillisuuden terveyttä edustavan monikaistaisen aineistoryhmän sen mukaan, mikä on puna- ja lähi-infrapunakaistojen välinen ero.",
		ndviColorizedDesc: "Väritetty NDVI -funktio käyttää NDVI-funktiota lähtöaineiston kuvaan ja käyttää sen jälkeen värikarttaa tai väriliukua tuloksen näyttämiseen.",
		ndviName: "NDVI",
		ndviSnip: "Laskee normalisoidun kasvillisuuserojen indeksin (NDVI).",
		ndviDesc: "NDVI-funktio luo kasvillisuuden terveyttä edustavan yksikaistaisen aineistoryhmän sen mukaan, mikä on puna- ja lähi-infrapunakaistojen välinen ero.<div><br/>Standardoidun NDVI-indeksin avulla voit luoda vihreyttä eli suhteellista biomassaa esittävän kuvan. Tämä indeksi hyödyntää monispektrisen rasteriaineistoryhmän kahden kaistan välisten ominaisuuksien eroavaisuuksia: lehtivihreän pigmentin absorptiota punaisessa kaistassa ja kasvimateriaalin korkeaa heijastumista lähi-infrapunakaistassa. Erittäin pienet tai negatiiviset NDVI-arvot edustavat alueita, joissa ei ole lainkaan kasvillisuutta, kuten pilviä, vettä tai lunta. Hyvin pienet arvot edustavat alueita, joissa vähän tai ei ollenkaan kasvillisuutta, kuten betonia, kiveä tai paljasta maaperää. Keskitason arvot edustavat alueita, joissa on pensaita ja ruohotasankoja. Suuret arvot edustavat metsäalueita ja rehevää kasvillisuutta.</div>.",
		negateName: "Negaatio",
		negateSnip: "Muuttaa lähtöaineiston rasterin solujen arvojen etumerkin (kertoo luvulla -1) solukohtaisesti.",
		negateDesc: "Negaatio-funktio muuttaa lähtöaineiston rasterin pikseliarvojen etumerkin (kertoo luvulla -1) solukohtaisesti. ",
		nibbleName: "Nibble",
		nibbleSnip: "Korvaa ne rasterin solut, jotka vastaavat lähimpien naapureiden arvoja sisältävää maskia.",
		nibbleDesc: "Yleisen Nibble-funktion avulla tietyille rasterin alueille voi määrittää niiden lähimmän naapurin arvon. Tästä on hyötyä muokattaessa rasterin alueita, joissa aineisto voi olla virheellistä.",
		notEqualName: "Ei yhtä suuri kuin",
		notEqualSnip: "Suorittaa suhteellisen Ei yhtä suuri kuin -operaation kahdelle lähtöaineistolle solukohtaisesti. Palauttaa arvon 1 soluille, joissa ensimmäinen rasteri ei ole yhtä suuri kuin toinen rasteri, ja arvon 0, jos se on yhtä suuri.",
		notEqualDesc: "Funktio suorittaa suhteellisen Ei yhtä suuri kuin -operaation kahden lähtöaineiston arvoille pikselikohtaisesti. Se palauttaa arvon 1 pikseleille, joissa ensimmäinen rasteri ei ole yhtä suuri kuin toinen rasteri, ja arvon 0 pikseleille, joissa ensimmäinen rasteri on yhtä suuri kuin toinen rasteri.",
		pansharpeningName: "Vieritystarkennus",
		pansharpeningSnip: "Parantaa keinotekoisesti monikaistaisen kuvan koordinaatistoresoluutiota sulauttamalla sen korkearesoluutioiseen pankromaattiseen kuvaan.",
		pansharpeningDesc: "Vieritystarkennus-funktio käyttää korkean resoluution pankromaattista kuvaa tai rasterikaistaa alemman resoluution monikaistaiseen rasteriaineistoryhmään yhdistämiseen monikaistaisen kuvan koordinaatistoresoluution lisäämiseksi.<div><br/>Vieritystarkennuksen tarkoitus on luoda korkealaatuinen visuaalinen kuva. Koska tekniikat muuttavat monikaistaisen kuva-aineiston radiometriaa ja spektriominaisuuksia, vieritystarkennettuja kuvia on käytettävä varoen analyyttisissa kaukokartoitustarkoituksissa.</div>.",
		pathAllocationName: "Reittietäisyyden kohdennus",
		pathAllocationSnip: "Laskee pienimmän kustannuslähteen kullekin solulle kustannuspinnan pienimmän kustannuksen perusteella ja ottaa samalla huomioon pinnan etäisyyden sekä vaaka- että pystysuuntaiset kustannustekijät.",
		pathAllocationDesc: "Reittietäisyyden kohdennus -funktio laskee lähimmän lähteen kullekin solulle kustannuspinnan pienimmän kustannuksen perusteella ja ottaa samalla huomioon pinnan etäisyyden sekä vaaka- että pystysuuntaiset kustannustekijät.",
		pathBackLinkName: "Reittietäisyyden paluulinkitys",
		pathBackLinkSnip: "Määrittää naapurin, joka on seuraava solu pienimmällä kumulatiivisella kustannusreitillä pienimpään kustannuslähteeseen ja ottaa samalla huomioon pinnan etäisyyden sekä vaaka- että pystysuuntaiset kustannustekijät.",
		pathBackLinkDesc: "Reittietäisyyden paluulinkitys -funktio määrittää sen naapurin suunnan, joka on seuraava solu pienimmällä kumulatiivisella kustannusreitillä lähimpään lähteeseen ja ottaa samalla huomioon pinnan etäisyyden sekä vaaka- että pystysuuntaiset kustannustekijät.",
		pathDistanceName: "Reitin matka",
		pathDistanceSnip: "Laskee kullekin solulle pienimmän kumulatiivisen kustannusetäisyyden pienimmästä kustannuslähteestä tai pienimpään kustannuslähteeseen ja ottaa samalla huomioon pinnan etäisyyden sekä vaaka- että pystysuuntaiset kustannustekijät.",
		pathDistanceDesc: "Reittietäisyys-funktio laskee kullekin solulle pienimmän kumulatiivisen kustannusetäisyyden lähimpään lähteeseen ja ottaa samalla huomioon pinnan etäisyyden sekä vaaka- että pystysuuntaiset kustannustekijät.",
		plusName: "Plus",
		plusSnip: "Laskee yhteen (summaa) kahden rasterin arvot solukohtaisesti.",
		plusDesc: "Plus-funktio laskee yhteen (summaa) kahden rasterin arvot pikselikohtaisesti.",
		powerName: "Potenssi",
		powerSnip: "Korottaa rasterin solujen arvot toisessa rasterissa olevien arvojen potenssiin.",
		powerDesc: "Potenssi-funktio korottaa rasterin pikseliarvot toisessa rasterissa olevien arvojen potenssiin.",
		radarCalibrationName: "Tutkan kalibrointi",
		radarCalibrationSnip: "Muuntaa RADARSAT-2-takaisinsironnan.",
		radarCalibrationDesc: "Tätä funktiota voi käyttää RADARSAT-2-kuvien kalibrointiin mosaiikkiaineistoryhmässä tai rasterituotteena. Kalibrointi tehdään tutkakuviin siten, että pikseliarvot edustavat tutkan takaisinsironnan todellisia arvoja.",
		rasterInfoName: "RasterInfo",
		rasterInfoSnip: "Muokkaa rasterin ominaisuuksia, kuten bittisyvyyttä, NoData-arvoa, solukokoa, jne.",
		rasterInfoDesc: "RasterInfo -funktio avaa valintaikkunan, jossa näkyvät rasteriaineistoryhmän ominaisuudet, kuten sarakkeiden ja rivien määrä, kaistojen määrä, pikselityyppi, laajuus ja koordinaatistotiedot. Voit muokata näitä ominaisuuksia valitsemalla mallina käytettävän rasteriaineistoryhmän. ",
		rasterizeAttributesName: "Rasteroi ominaisuustiedot",
		rasterizeAttributesSnip: "Rikastaa rasteria määritettyjen ominaisuustietojen, ulkoisen taulun tai kohdepalvelun arvoista johdettujen lisäkaistojen avulla.",
		rasterizeAttributesDesc: "Rasteroi ominaisuustiedot -funktio rikastaa rasteria lisäämällä määritettyjen ominaisuustietojen, ulkoisen taulun tai kohdepalvelun arvoista johdettuja kaistoja. Voit vaihtoehtoisesti määrittää vyöhykerasterin ja siihen liittyvän vyöhyketunnuksen ominaisuustiedot, jotta voit ottaa käyttöön alueeseen pohjautuvan haun.",
		rasterizeFeatureClassName: "Rasteroi kohteet",
		rasterizeFeatureClassSnip: "Muuntaa kohteet rasteriksi.",
		rasterizeFeatureClassDesc: "Tämä funktio muuntaa aluekohde-, taiteviiva- ja pistekohdeluokan aineiston rasterikarttatasoksi.<div><br/>Kohteille määritetään pikseliarvot kohteiden OBJECTID-tunnuksen (oletusarvo) perusteella. Pikseliarvot voidaan määrittää myös lähtöaineiston kohteen ominaisuustietotaulun käyttäjän määrittämään arvokenttään perustuviksi.</div>.",
		recastName: "Uudelleenmuodostus",
		recastSnip: "Muokkaa mosaiikkiaineistoryhmän tai kuvapalvelun toimintoketjun parametreja. Tätä käytetään usein LAS-aineistoryhmille, jotta voidaan välttää erillisen mosaiikkiaineistoryhmän luominen erilaisille maaston esitysmuodoille.",
		recastDesc: "Uudelleenmuodostus-funktiota käytetään mosaiikkiaineistoryhmässä tai kuvapalvelussa käytetyn funktion parametrin dynaamiseen muokkaamiseen ilman pysyviä fyysisiä muutoksia.",
		regionGroupName: "Alueryhmä",
		regionGroupSnip: "Kullekin tulosaineiston solulle tallennetaan sen liitetyn alueen tunnus, johon solu kuuluu. Kullekin alueelle määritetään yksilöllinen tunnus.",
		regionGroupDesc: "Yleinen Alueryhmä-funktio tallentaa kullekin tulosaineiston solulle sen liitetyn alueen tunnuksen, johon solu kuuluu. Kullekin alueelle määritetään yksilöllinen tunnus.<div><br/>Ensimmäinen skannattu alue saa arvon yksi, toinen arvon kaksi ja niin edelleen, kunnes kaikille alueille on määritetty arvo. Skannaus siirtyy vasemmalta oikealle ja ylhäältä alas. Tulosvyöhykkeille määritetyt arvot perustuva siihen, milloin ne havaitaan skannausprosessissa.</div>.",
		regionGrowName: "Alueen kasvu",
		regionGrowSnip: "Kasvattaa alueita siemenpisteistä.",
		regionGrowDesc: "Alueen kasvu -funktio ryhmittelee naapuripikselit ryhmiin sen perusteella, mikä on niiden määritetyn säteen pituus siemenpisteestä. Pikselien tai objektien ryhmälle määritetään tietty täyttöarvo.",
		remapName: "Täsmäytä uudelleen",
		remapSnip: "Muuttaa pikseliarvoja määrittämällä uudet arvot pikseliarvojen alueille tai käyttämällä ulkoista taulua.",
		remapDesc: "Täsmäytä uudelleen -funktion avulla voit muuttaa tai luokitella uudelleen rasteriaineiston pikseliarvot. Tämä voidaan tehdä joko määrittämällä tulosaineiston pikseliarvoon täsmäytettävien pikseliarvojen arvoalue tai käyttämällä taulua pikseliarvojen täsmäyttämistä varten tulosaineiston pikseliarvoon.",
		reprojectName: "Projisoi uudelleen",
		reprojectSnip: "Muokkaa rasteriaineistoryhmän, mosaiikkiaineistoryhmän tai rasterikohteen projektiota mosaiikkiaineistoryhmässä. Funktio voi myös interpoloida tiedot uuteen solukokoon ja määrittää alkuperän.",
		reprojectDesc: "Projisoi uudelleen -funktio muokkaa rasteriaineistoryhmän, mosaiikkiaineistoryhmän tai rasterikohteen projektiota mosaiikkiaineistoryhmässä. Funktio voi myös interpoloida tiedot uuteen solukokoon ja määrittää alkuperän.<div><br/>Projisoi uudelleen -funktiota voi myös käyttää välimuistin luomiseen rasterista tai mosaiikkiaineistoryhmästä, joka ei ole tarvittavassa projektiossa. Kun luot esimerkiksi välimuistiin tallennettua kuvapalvelua, jonka sovellukset voivat integroida muihin välimuistiin tallennettuihin palveluihin, on tärkeää, että ne kaikki käyttävät samaa projektiota. Tämä on usein Web Mercator -projektio. Koska mosaiikkiaineistoryhmää ei voi projisoida uudelleen, voit tehdä jommankumman seuraavista: voit joko luoda viitemosaiikkiaineistoryhmän omasta mosaiikkiaineistoryhmästä tarvittavassa projektiossa tai lisätä Projisoi uudelleen -funktion mosaiikkiaineistoryhmän toimintoketjuun. Toisessa esimerkissä käytetään tätä funktiota mosaiikkiaineistoryhmän rasterikohteessa. Kun käytät Välimuistiin tallennettu rasteri -funktiota, haluat ehkä lisätä Projisoi uudelleen -funktion, jotta välimuisti luodaan uudessa projektiossa. Mosaiikkiaineistoryhmän rasterikohteet voidaan tallentaa välimuistiin, kun käsittely on intensiivistä, ja yrität julkaista nopeaa kuvapalvelua tallentamatta koko kuvapalvelua välimuistiin.</div>.",
		resampleName: "Uusi otanta",
		resampleSnip: "Muuttaa rasterin solukokoa.",
		resampleDesc: "Uusi otanta -funktio muuttaa solun kokoa, uuden otannan tyyppiä tai molempia.<div><br/>Uusi otanta -funktiota tulisi käyttää vain tiettyjen laskentavaatimusten vallitessa. Esimerkiksi silloin, kun lasket tuulen tai merivirran magnitudi-suuntaa, mikä edellyttää uudelleenotantaa lähderesoluutiosta.</div>.",
		roundDownName: "Pyöristä alaspäin",
		roundDownSnip: "Palauttaa jokaiselle rasterin solulle seuraavaksi pienimmän kokonaislukuarvon, joka esitetään vain liukulukuna.",
		roundDownDesc: "Pyöristä alaspäin -funktio palauttaa rasterin kullekin pikselille seuraavaksi pienemmän kokonaisluvun liukulukuarvona.",
		roundUpName: "Pyöristä ylöspäin",
		roundUpSnip: "Palauttaa jokaiselle rasterin solulle seuraavaksi suurimman kokonaislukuarvon, joka esitetään vain liukulukuna.",
		roundUpDesc: "Pyöristä ylöspäin -funktio palauttaa seuraavaksi suuremman kokonaisluvun liukulukuarvona rasterin kullekin pikselille.",
		segmentMeanShiftName: "Segmentin keskisiirtymä",
		segmentMeanShiftSnip: "Ryhmittelee segmentteihin viereiset pikselit, joilla on samankaltaiset spektriominaisuudet.",
		segmentMeanShiftDesc: "Tämä funktio tunnistaa kuva-aineistosi objektit, kohteet tai segmentit ryhmittelemällä sellaiset vierekkäiset pikselit yhteen, joiden spektri- ja sijaintiominaisuudet ovat samankaltaiset. Voit hallita sijainti- ja spektritietoihin perustuvan pehmennyksen määrää kiinnostavien kohteiden johtamista varten.",
		s1RadiometricCalibrationName: "Sentinel-1:n radiometrinen kalibrointi",
		s1RadiometricCalibrationSnip: "Toteuttaa erilaisia radiometrisiä kalibrointeja Sentinel-1-aineistossa.",
		s1RadiometricCalibrationDesc: "Tämä rasterifunktio suorittaa kolme eri kalibrointia Sentinel 1 -aineistoryhmille, myös beeta-nolla- ja gammakalibroinnit, ja tuottaa kalibroidun aineistoryhmän. SAR-kalibroinnin tavoitteena on tarjota kuva-aineistoa, jossa pikseliarvot voidaan yhdistää suoraan maiseman tutkan takaisinsirontaan. Vaikka kalibroimaton SAR-kuva-aineisto riittää kvalitatiiviseen käyttöön, kalibroidut SAR-kuvat ovat välttämättömiä SAR-aineiston kvantitatiivisessa käytössä.<div><br/>Tyypillinen SAR-aineiston käsittely, joka tuottaa tason 1 kuvia, ei sisällä radiometrisiä korjauksia, ja radiometrisiä vääristymiä jää merkittävästi. Tästä syystä radiometrisiä korjauksia on käytettävä SAR-kuvissa, jotta kuvien pikseliarvot edustavat todenmukaisesti heijastavan pinnan tutkan takaisinsirontaa. Radiometrinen korjaus on myös tarpeen, kun vertaillaan eri anturien avulla kerättyjä, saman anturin eri aikaan tai eri tilassa tuottamia tai eri prosessorien käsittelemiä SAR-kuvia.</div>.",
		s1ThermalNoiseRemovalName: "Sentinel-1:n termisen kohinan poisto",
		s1ThermalNoiseRemovalSnip: "Poistaa termisen kohinan Sentinel-1-aineistosta.",
		s1ThermalNoiseRemovalDesc: "Termisen kohinan korjausta voidaan käyttää Sentinel-1 Level-1 Single Look Complex (SLC) -tuotteissa sekä Level-1 Ground Range Detection (GRD) -tuotteissa, joita ei ole vielä korjattu. Operaattori voi myös poistaa tämän korjauksen tuotteen annotaatioiden perusteella sen kohinasignaalin palauttamiseksi, joka poistettiin alkuperäisen tuotteen tuottamista varten. Tuotteen annotaatiot päivitetään vastaavasti korjauksen uudelleenkäytön sallimista varten. ",
		setNullName: "Aseta tyhjäarvo",
		setNullSnip: "Aseta tyhjäarvo -funktio määrittää solun sijainniksi NoData määritettyjen ehtojen perusteella. Se palauttaa NoData-arvon, jos ehdollisen arvioinnin tulos on tosi, ja palauttaa toisessa rasterissa määritetyn arvon, jos tulos on epätosi.",
		setNullDesc: "Aseta tyhjäarvo -funktio määrittää tunnistettujen pikseleiden arvoksi NoData määritettyjen ehtojen perusteella. Se palauttaa NoData-arvon, jos ehdollisen arvioinnin tulos on tosi (1), ja palauttaa Epätosi-rasterissa määritetyn arvon, jos ehdollisen arvioinnin tulos on epätosi (0). Loogisen matemaattisen funktion tulos, joka toimii lähtöaineiston rasterina, määrittää tämän ehdon.",
		shadedReliefName: "Varjostettu harjanne",
		shadedReliefSnip: "Luo pinnasta monikaistaisen, värikoodatun 3D-esityksen siten, että auringon suhteellinen asema on otettu huomioon kuvan varjostuksessa.",
		shadedReliefDesc: "Varjostettu harjanne -funktio luo maastosta 3D-väriesityksen. Se luodaan yhdistämällä korkeuskoodatun metodin ja vinovalometodin tuottamat kuvat. Tämä funktio käyttää korkeus- ja kompassisuuntaominaisuuksia auringon sijainnin määrittämiseen.<div><br/></div>",
		sinHName: "SinH",
		sinHSnip: "Laskee rasterin solujen hyperbolisen siniarvon.",
		sinHDesc: "Funktio laskee rasterin pikselien hyperbolisen siniarvon.",
		sinName: "Sini",
		sinSnip: "Laskee rasterin solujen siniarvon.",
		sinDesc: "Funktio laskee rasterin pikselien siniarvon.",
		slopeName: "Kaltevuus",
		slopeSnip: "Laskee muutosnopeuden yhdestä pikseliarvosta sen viereisiin pikseleihin.",
		slopeDesc: "Tämä rasterifunktio laskee kaltevuuden, joka vastaa kunkin digitaalisen korkeusmallin (DEM) solun korkeuden arvonmuutosta. Se on digitaalisen korkeusmallin ensimmäinen derivaatta.<div><br/>Tämä funktio käyttää tehostettua atan()-funktiota. Se on kuusi kertaa nopeampi, ja approksimaatiovirhe on aina alle 0,3 astetta.</div>.",
		speckleName: "Rakeisuus",
		speckleSnip: "Sisältää suodattimia, joille voi poistaa kohinaa SAR-tutka-aineistoryhmistä.",
		speckleDesc: "Rakeisuus on korkeataajuista kohinaa tutka-aineistossa. SAR (Synthetic Aperture Radar) -tutkajärjestelmien tuottamat kuvat ovat herkkiä rakeisuusvaikutuksille sirottuvien signaalien ja pinnasta tai objekteista heijastuvien sähkömagneettisten aaltojen interferenssin käsittelyn takia. Tämä Rakeisuus-funktio suodattaa rakeisen tutka-aineistoryhmän ja tasoittaa kohinan, mutta säilyttää kuvan reunat tai terävät kohteet.",
		spectralConversionName: "Spektrimuunnos",
		spectralConversionSnip: "Käyttää matriisia monikaistaiseen kuvaan.",
		spectralConversionDesc: "Spektrimuunnos-funktio käsittelee tulosaineiston väriarvoja käyttämällä matriisia monikaistaisessa kuvassa.<div><br/>Tietyt anturit eivät kerää sinisten kaistojen tietoja, koska niiden signaali-kohinasuhde on alhainen. Tämän avulla väärävärikuva voidaan esimerkiksi muuntaa luonnolliseksi pseudovärikuvaksi.</div>.",
		squareRootName: "Neliöjuuri",
		squareRootSnip: "Laskee rasterin solujen arvojen neliöjuuren.",
		squareRootDesc: "Neliöjuuri-funktio laskee rasterin pikseliarvojen neliöjuuren.",
		squareName: "Neliö",
		squareSnip: "Laskee rasterin solujen arvojen neliön.",
		squareDesc: "Neliö-funktio laskee rasterin pikseliarvojen neliön.",
		statisticsHistogramName: "Tilastotiedot ja histogrammi",
		statisticsHistogramSnip: "Määritä tai liitä tilastotiedot ja histogrammi.",
		statisticsHistogramDesc: "Tilastotiedot ja histogrammi -funktiota käytetään rasterin tilastotietojen ja histogrammin määrittämiseen. Voit lisätä tämän funktion toimintoketjun loppuun rasteritoimintomallin (RFT) tilastotietojen ja histogrammin kuvaamista varten. Tätä voidaan tarvita käsittelyn tuloksen oletusnäytön hallintaan erityisesti silloin, kun määritetään toimintoketjua, joka sisältää useita funktioita.<div><br/>Voit määrittää tilastotiedot kirjoittamalla arvot tai tuomalla ne rasteriaineistoryhmästä tai XML-tiedostosta. Histogrammit voi määrittää vain tuomalla tiedoston.</div>.",
		statisticsName: "Tilastotiedot",
		statisticsSnip: "Laskee fokaalistatistiikan jokaiselle rasterin pikselille määrättyä fokaaliympäristöä käyttäen.",
		statisticsDesc: "Tilastotiedot-funktio laskee fokaalistatistiikan jokaiselle rasterin pikselille määrättyä fokaaliympäristöä käyttäen.<div><br/>Tilastotiedot-funktion avulla voi täyttää kuvan katkenneet viivat. Katkenneet viivat ovat usein seurausta anturissa esiintyvistä ongelmista, jolloin aineistoa ei ole kerätty. Näin on tapahtunut esimerkiksi Landsat 7:n ETM+ (Enhanced Thematic Mapper Plus) -anturissa. Puuttuva aineisto aiheuttaa ongelmia analyysissa ja myös katseltaessa kuva-aineistoa. Käytettäessä kuva-aineistoa analyysitarkoituksiin, asiaa ei voida juurikaan korjata. Jos tarjolla on kuitenkin päällekkäinen kuva, sitä voidaan käyttää puuttuvan sisällön tilalla. Samoin voidaan toimia, jos kuva-aineistoa käytetään visualisointiin. Aina ei kuitenkaan ole ylimääräistä kuvaa, jolla voidaan täyttää puuttuva sisältö, joten se on johdettava olemassa olevasta aineistosta.</div>.",
		streamLinkName: "Virtalinkitys",
		streamLinkSnip: "Määrittää yksilölliset arvot lineaarisen rasteriverkon osiin risteyskohtien välillä.",
		streamLinkDesc: "Virtalinkitys-funktio määrittää yksilölliset arvot lineaarisen rasteriverkon osiin joen yhtymäkohtien välillä.<div><br/>Linkit ovat joen uoman osia, jotka yhdistävät kaksi peräkkäistä joen yhtymäkohtaa, yhtymäkohdan ja poistumiskohdan tai yhtymäkohdan ja vedenjakajan. Hydrologiassa näitä joen segmenttejä kutsutaan joenosiksi. Joen yhtymäkohta liittyy jähmettymispisteeseen ja auttaa valuma-alueen tai vesistön osavesistön rajojen hahmottelussa.</div>.",
		stretchName: "Venytä",
		stretchSnip: "Parantaa kuvaa säätämällä näytettävien arvojen arvoaluetta. Tämä ei muuta taustapikseliarvoja. Jos pikselin arvo on määritetyn alueen ulkopuolella, se näkyy joko minimi- tai maksimiarvona.",
		stretchDesc: "Venytä-funktio parantaa kuvaa muuttamalla ominaisuuksia, kuten kirkkautta, kontrastia ja gammaa, useiden venytystyyppien avulla. Tämä funktio käyttää mosaiikkiaineistoryhmän rastereiden tilastotietoja. Tästä syystä, jos käytät tätä funktiota, varmista, että tilastotiedot on laskettu.<div><br/>Venytystyyppi määrittää histogrammin venytyksen, jota käytetään rastereissa niiden ulkoasun parantamista varten. Venytys parantaa aineiston ulkoasua levittämällä pikseliarvot histogrammiin niiden bittisyvyyden määrittämistä vähimmäis- ja enimmäisarvoista. </div>.",
		swathName: "Kaistale",
		swathSnip: "Interpoloi epäsäännöllisistä ruudukoista tai kaistaleaineistosta.",
		swathDesc: "Jotkin netCDF- HDF-aineistoryhmät tallentavat geosijaintinsa matriiseina, joiden välit ovat epäsäännölliset. Kun nämä aineistoryhmät lisätään mosaiikkiaineistoryhmään, Kaistale-funktio tekee epäsäännöllisesti ruudukkoon sijoitetusta aineistosta uudelleenotannan, jotta kukin pikseli on kooltaan yhtenäinen ja neliönmuotoinen.<div><br/>Kun muuttujat lisätään netCDF- tai HDF-aineistoryhmästä mosaiikkiaineistoryhmään, funktio tarkistaa automaattisesti, onko aineistomatriisi säännöllinen. Jos se ei ole, Kaistale-funktiota käytetään automaattisesti epäsäännöllisen rasterin muuntamiseksi pisteiksi ja sen jälkeen säännölliseksi ruudukkorasteriksi. Voit muuttaa interpolointimenetelmää ja Kaistale-rasterifunktiossa käytetyn solun kokoa. Säännöllisiä välejä käyttävässä rasteriaineistossa ei käytetä interpolaatiota, aineisto luetaan sellaisenaan.</div>.",
		tanHName: "TanH",
		tanHSnip: "Laskee rasterin solujen hyperbolisen tangentin.",
		tanHDesc: "Funktio laskee rasterin pikselien hyperbolisen tangenttiarvon.",
		tanName: "Tan",
		tanSnip: "Laskee rasterin solujen tangentin.",
		tanDesc: "Funktio laskee rasterin pikselien tangenttiarvon. ",
		tasseledCapName: "Tasseled Cap (Kauth-Thomas)",
		tasseledCapSnip: "Laskee kasvillisuuden, kosteuden ja kirkkauden tasot. Tämä tekniikka perustuu kertoimiin, jotka pitää laskea nimenomaan anturille.",
		tasseledCapDesc: "Tasseled Cap (Kauth-Thomas) -muunnos on suunniteltu eri satelliittijärjestelmien havaitsemien kasvillisuuden fenomenologian ja kaupunkirakentamisen muutosten analysointiin ja kartoittamiseen. Se tunnetaan Tasseled Cap -muunnoksena aineiston graafisen jakauman muodon perusteella. Muunnos tarjosi perusteet viljelypeltojen Landsat MSS -aineistosta löydetyille malleille viljelykasvien elinkaaren funktiona. Kun viljelykasvi kasvaa siemenestä täysikasvuiseksi kasviksi, lyhytaaltoinen infrapuna-alue kasvaa ja punaisen aallonpituuden heijastus pienenee maaperän värin perusteella<div><br/>Tämän muunnoksen hyödyntäminen on laajentunut viljelykasvien valvonnasta kasvillisuuden analysointiin ja kartoittamiseen eri sovellusten käyttöön, kuten metsätalouteen, teollisen kasvillisuuden hallintaa, ekosysteemien kartoittamiseen ja hallintaan, hiilen sitoutumisen ja päästöjen tutkimiseen ja valvontaan, kaupunkirakentamiseen ja moneen muuhun tarkoitukseen. Se on myös laajentunut Landsat MSS -aineiston tukemisesta muihin suosittuihin satelliittijärjestelmiin, kuten Landsat TM-, Landsat ETM+-, Landsat 8-, IKONOS-, QuickBird-, WorldView-2- ja monispektrisiin RapidEye-antureihin.</div>.",
		timesName: "Kertaa",
		timesSnip: "Kertoo kahden rasterin arvot solukohtaisesti.",
		timesDesc: "Kertaa-funktio kertoo kahden rasterin arvot pikselikohtaisesti.",
		transposeBitsName: "Siirrä bitit",
		transposeBitsSnip: "Purkaa lähtöpikselin bitit ja kohdistaa ne määritettyihin kohdepikselin bitteihin. Tämän funktion tarkoituksena on käsitellä muutaman lähtöaineiston bittejä, kuten Landsat 8 -laatukaistan tuotteista.",
		transposeBitsDesc: "Siirrä bitit -funktio purkaa lähtöpikselin bitit ja kohdistaa ne määritettyihin kohdepikselin bitteihin. Tämän funktion tarkoituksena on käsitellä muutaman lähtöaineiston bittejä, kuten Landsat 8 -laatukaistan tuotteista.",
		unitConversionName: "Yksikön muunto",
		unitConversionSnip: "Muuntaa arvot yhdestä mittausyksiköstä toiseksi.",
		unitConversionDesc: "Tämä funktio muuntaa pikselit yksiköstä toiseen. Se tukee etäisyyden, nopeuden ja lämpötilan muuntoja.",
		vectorFieldName: "Vektorikenttä",
		vectorFieldSnip: "Näyttää aineistoryhmät siten, että sekä magnitudi (u) että suunta (v) esitetään nuolilla. Magnitudia edustaa nuolen koko, ja suuntaa edustaa nuolen kulma.",
		vectorFieldDesc: "Vektorikenttä-funktiota käytetään kahden rasterin koostamiseen ja muuntamiseen kaksikaistaiseksi rasteriksi, joka on joko aineistotyyppiä magnitudi-suunta tai aineistotyyppiä U-V.<div><br/>U-arvo viittaa joskus vyöhykkeelliseen nopeuteen ja V-arvo viittaa joskus pituuspiirin suuntaiseen nopeuteen.</div>.",
		viewshed2Name: "Näkymäalue",
		viewshed2Snip: "Määrittää tarkkailijakohteille näkyvät rasteripinnan sijainnit geodeettisiä metodeja käyttämällä.",
		viewshed2Desc: "Näkymäalue-funktio määrittää tarkkailijakohteille näkyvät rasteripinnan sijainnit geodeettisiä metodeja käyttämällä<div><br/>Kunkin pikselin keskipisteen näkyvyyden määrittää näkemälinjatesti kohteen ja kunkin tarkkailijan välillä. Jos tarkkailija näkee kohteen pikselin keskipisteessä, pikseliä pidetään näkyvänä. Tämä työkalu huomioi aina maapallon kaarevuuden näkyvyyttä määritettäessä.</div>.",
		watershedName: "Valuma-alue",
		watershedSnip: "Määrittää rasterin solujoukon yläpuolella olevan osallisuusalueen",
		watershedDesc: "Yleinen Valuma-alue-funktio määrittää rasterin pikselijoukon yläpuolella olevan osallisuusalueen. Valuma-alueet hahmotellaan virtaussuunnan rasterista, joka määrittää virtauksen suunnan kustakin pikselistä.",
		weightedOverlayName: "Painotettu päällekkäisyys",
		weightedOverlaySnip: "Asettaa päällekkäin useita rastereita käyttäen yhteistä mittakaavaa ja painottaen kutakin merkityksen mukaan.",
		weightedOverlayDesc: "Tämän funktion avulla voit asettaa päällekkäin useita rastereita käyttäen yhteistä mittakaavaa ja painottaen kutakin sen merkityksen mukaan.",
		weightedSumName: "Painotettu summa",
		weightedSumSnip: "Painottaa ja lisää rasterien ryhmän solukohtaisesti.",
		weightedSumDesc: "Painotettu summa -funktion avulla voit asettaa päällekkäin useita rastereita kertomalla kunkin sille annetulla painoarvolla ja laskemalla ne yhteen.",
		windchillName: "Pakkasen purevuus",
		windchillSnip: "Yhdistää ympäristön ilmanlämpötilan ja tuulennopeuden ja tuulen viilentävän vaikutuksen kertoimen laskemista varten.",
		windchillDesc: "Pakkasen purevuus -funktiosta on hyötyä sellaisten vaarallisten talviolosuhteiden tunnistamisessa, jotka voivat aiheuttaa paleltumia tai jopa hypotermian annetun elementin altistumisajan perusteella. Pakkasen purevuus on tapa mitata sitä, miten kylmältä henkilöstä tuntuu, kun tuulen vaikutus otetaan huomioon ennestään kylmissä lämpötiloissa. Mitä nopeampi tuuli, sitä nopeammin keho menettää lämpöä ja sitä kylmemmältä ihmisestä tuntuu.",
		zonalRemapName: "Vyöhykkeinen uudelleenyhdistäminen",
		zonalRemapSnip: "Yhdistä uudelleen rasterin pikselit toisessa rasterissa määritettyjen vyöhykkeiden ja taulukossa määritetyn, vyöhykkeistä riippuvaisen arvon perusteella.",
		zonalRemapDesc: "Tämä funktio yhdistää uudelleen rasterin pikselit toisessa rasterissa määritettyjen vyöhykkeiden ja taulukossa määritetyn, vyöhykkeistä riippuvaisen arvon perusteella.",
		zonalStatisticsName: "Vyöhykkeiset tilastotiedot",
		zonalStatisticsSnip: "Laskee toisen aineistoryhmän vyöhykkeiden sisällä olevan rasterin arvojen tilastotiedot.",
		zonalStatisticsDesc: "Funktio laskee toisen aineistoryhmän vyöhykkeiden sisällä olevan rasterin arvojen tilastotiedot. Vyöhyke määräytyy kaikkien niiden lähtöaineiston alueiden mukaan, joilla on sama arvo. Näiden alueiden ei tarvitse olla vierekkäisiä. Kun sekä vyöhyke- että arvosyötteet ovat kumpikin saman resoluution rastereita, niitä käytetään suoraan. Jos resoluutiot ovat erilaiset, ennen vyöhykkeisen toiminnon suoritusta käytetään sisäistä uudelleenotantaa, jotta resoluutiot vastaavat toisiaan.",
		flowLengthName: "Virtauksen pituus",
		flowLengthSnip: "Laskee ylävirran tai alavirran etäisyyden taikka painotetun etäisyyden kunkin solun virtausreitin varrella.",
		flowLengthDesc: "Tämä on yleinen rasterifunktio. Tämä funktio luo ylävirran tai alavirran etäisyyden tai painotetun etäisyyden rasterikarttatason kunkin solun virtausreitin varrella.<div><br/>Virtauksen pituus -funktion ensisijainen käyttötilanne on laskea annetun altaan pisimmän virtausreitin pituus. Tämän mitan avulla lasketaan usein altaan veden kertymäaika. Tämä tehdään Ylävirta-vaihtoehdolla. Funktion avulla voi myös luoda hypoteettisen sademäärän ja valumatapahtumien etäisyysaluekaavioita käyttämällä painoarvorasteria liikkeen laskevan suunnan impedanssina.</div>.",
		streamOrderName: "Virtausjärjestys",
		streamOrderSnip: "Määrittää numerojärjestyksen lineaarisen verkon haaroja kuvaavan rasterin segmenteille",
		streamOrderDesc: "Tämä on yleinen rasterifunktio. Tämä funktio luo rasterikarttatason, joka määrittää numerojärjestyksen lineaarisen verkon haaroja kuvaavan rasterin segmenteille.<div><br/>Virtausjärjestys-funktion tulosteen laatu on parempi, jos lähtöaineiston virtausrasteri ja lähtöaineiston virtaussuunnan rasteri johdetaan samasta pinnasta. Jos virtausrasteri johdetaan rasteroitujen virtojen aineistoryhmästä, tulostetta ei ehkä voi käyttää, koska solukohtaisesti suunta ei vastaa virtaussolujen sijaintia. Virtauskertymä-funktion tuloksia voi käyttää rasterin virtausverkoston luontiin käyttämällä kynnysarvoa sellaisten solujen valintaan, joiden virtauskertymä on suuri. Esimerkiksi soluja, joihin virtaa yli 100 solusta, käytetään virtausverkoston luontiin. Käytä Ehto- tai Aseta tyhjäarvo -funktiota sellaisen virtausverkostorasterin luontiin, jossa virtauskertymät, joiden arvo on vähintään 100, eivät johda mihinkään, ja loput sijoitetaan taustalle (NoData). Tuloksena syntyvää virtausverkostoa voidaan käyttää Virtausjärjestys-funktiossa. Tämä funktio tukee ainoastaan D8-lähtöaineiston virtaussuunnan rasteria. D8-virtaussuunnat voidaan luoda käyttämällä Virtaussuunta-funktiota ja suorittaa yhdessä oletusarvoisen virtaussuunnan tyypin D8 kanssa.</div>.",
		snapPourPointName: "Kohdista laskupiste",
		snapPourPointSnip: "Kohdistaa laskupisteet korkeimman virtauskertymän soluun määritetyn etäisyyden sisällä",
		snapPourPointDesc: "Tämä on yleinen rasterifunktio. Tämä funktio kohdistaa laskupisteet korkeimman virtauskertymän soluun määritetyn etäisyyden sisällä.<div><br/>Kohdista laskupiste -funktiota käytetään sellaisten pisteiden valinnan varmistamiseen, joiden virtauskertymä on suuri, kun hahmotellaan valuma-alueita Valuma-alue-funktion avulla. Kohdista laskupiste -funktio etsii määritettyjen laskupisteiden ympäriltä kohdistusetäisyydeltä solua, jonka virtauskertymä on suurin, ja siirtää laskupisteen siihen kohtaan. Tuloksena on kokonaislukurasterikarttataso, kun alkuperäisten laskupisteiden sijainnit on kohdistettu suuremman virtauskertymän sijainteihin.</div>.",
		sinkName: "Vajoama",
		sinkSnip: "Luo rasterin, joka määrittää kaikki vajoamat tai sisäisten viemäriverkkojen alueet",
		sinkDesc: "Tämä on yleinen rasterifunktio. Tämä funktio luo rasterikarttatason, joka määrittää kaikki vajoamat tai sisäisten viemäriverkkojen alueet. Vajoama on solu tai paikkatiedon perusteella yhdistettyjen solujen joukko, jonka virtaussuunnaksi ei voi määrittää jotain virtaussuuntarasterin kahdeksasta kelvollisesta arvosta. Näin voi tapahtua, kun kaikki viereiset solut ovat korkeammalla kuin käsittelyssä oleva solu tai kun kaksi solua virtaavat toisiinsa luoden kahden solun silmukan.<div><br/>Vajoama-funktio tukee ainoastaan D8-lähtöaineiston virtaussuunnan rasteria. D8-virtaussuunnat voidaan luoda käyttämällä Virtaussuunta-funktiota ja suorittaa yhdessä oletusarvoisen virtaussuunnan tyypin D8 kanssa. Vajoama-funktion tuloste on kokonaislukurasteri, jossa kullekin vajoamalle on määritetty yksilöllinen arvo. Näiden yksilöllisten arvojen arvoväli on yhden ja vajoamien kokonaismäärän välillä. Jos vajoamien kokonaismäärä on 1 000, yksilöllisten arvojen arvoväli on 1–1 000.</div>.",
		aggregateName: "Koosta",
		aggregateSnip: "Luo pienennetyn resoluution version rasterista.",
		aggregateDesc: "Koosta-funktio suorittaa lähtöaineiston rasterille uudelleenotannan karkearesoluutioisia tuloksia varten määritetyn koostestrategian perusteella. Kukin tulosaineiston solu sisältää niiden lähtöaineiston solujen summan, vähimmäisarvon, enimmäisarvon, keskiarvon tai mediaanin, jotka kyseisen solun laajuus kattaa.<div><br/>Voit määrittää tekijän, jonka perusteella lähtöaineiston rasterin solukoko kerrotaan. Esimerkiksi solukertoimen arvolla 3 tuloksena on tulosaineisto, jonka solukoko on kolme kertaa suurempi kuin lähtöaineiston rasteri. Voit määrittää, miten tulosaineiston laajuus käsitellään, jos lähtöaineiston rivien tai sarakkeiden määrä ei ole solukertoimen täsmällinen monikerta. Oletusarvon mukaan ylärajaa ja oikeanpuoleista rajaa laajennetaan siten, että ne kattavat laajemman sijaintilaajuuden kuin lähtöaineiston rasteri. Näin varmistetaan, että kaikki lähtöaineiston solut käsitellään. Vaihtoehtoisesti ylärajaa ja oikeanpuoleista rajaa voidaan pienentää siten, että se kattaa pienemmän laajuuden, jotta käsiteltävien rivien ja sarakkeiden määrä on solukertoimen täsmällinen monikerta. Voit määrittää, miten koostelaskelma käsittelee NoData-solut. Oletusmekanismin mukaan NoData-solut, jotka osuvat tulosaineiston rasterin suuremman solun sijaintilaajuuteen, ohitetaan tulosaineiston solun arvoa määritettäessä. Voit vaihtoehtoisesti määrittää, että jos lähtöaineistossa on edes yksi NoData-solu tulosaineiston solun sijaintilaajuuden puitteissa, kyseinen solu on NoData-solu tulosaineiston rasterissa.</div>",
		ccdcName: "CCDC-analyysi",
		ccdcSnip: "Arvioi pikseliarvojen muutokset ajan kuluessa käyttämällä jatkuvaa muutoksen tunnistus- ja luokitusalgoritmia (CCDC, Change Detection and Classification) ja luo mallin tulokset.",
		ccdcDesc: "CCDC-analyysifunktio arvioi pikseliarvojen muutokset ajan kuluessa käyttämällä jatkuvaa muutoksen tunnistus- ja luokitusalgoritmia (CCDC, Change Detection and Classification) ja luo moniulotteisen rasterin, joka sisältää mallin tulokset. Sitä tuetaan vain yhdessä Tunnista muutos muutosanalyysin avulla -funktion kanssa rasterifunktiomallissa. Jos haluat tuottaa rasteritulosteen, yhdistä CCDC-analyysifunktio Tunnista muutos muutosanalyysin avulla -funktion kanssa, tallenna rasterifunktiomallina ja suorita rasterianalyysi funktiomallin kanssa.<div><br/>Tämä funktio käyttää CCDC (Continuous Change Detection and Classification) -algoritmia kuvapinon pikseliarvojen muutosten arvioimiseen ajan kuluessa. Optisen kuva-aineiston tai kuvajäljennösten (esimerkiksi NDVI) aikasarjassa pikseliarvot voivat vaihdella useista syistä: 1. Vuodenajan muutokset – pikseliarvojen muutokset osoittavat muutoksia kasvillisuudessa, jotka johtuvat lämpötilan ja sademäärän vaihtelusta vuodenaikojen mukaan. Esimerkiksi pohjoisella pallonpuoliskolla vihreää kasvillisuutta on enemmän kesällä kuin talvella; 2. Vähittäinen muutos – pikseliarvojen muutokset osoittavat trendejä kasvillisuudessa tai pintavedessä, jotka johtuvat ilmaston vaihtelusta tai pitkäaikaisista maankäytön toimista. Esimerkiksi paljaan maaperän määrä alueella voi kasvaa asteittain sademäärän muuttuessa pitkällä aikavälillä; ja 3. Äkillinen muutos – pikseliarvojen muutokset osoittavat maanpeitteen muutokset, jotka ilmenevät äkillisesti metsien tuhoutumisen, kaupunkirakentamisen, luonnonkatastrofien ja muiden muutosten seurauksena. CCDC-algoritmi tunnistaa kaikki kolme muutostyyppiä, kun ensisijaisena tarkoituksena on tunnistaa äkillisiä muutoksia. Harmoninen regressio ja trendimallit sovitetaan aineistoon vuodenaikaan perustuvan ja asteittaisen muutoksen arvioimiseksi ja äkilliset poikkeavat trendimalleista ilmaisevat äkillisiä muutoksia.<div><br/>CCDC-algoritmi on alun perin suunniteltu Landsat TM-, Landsat ETM+- ja Landsat OLI -aineiston pinnan heijastus- tai kirkkauden lämpötila-aineistoa varten. Tunnista muutos muutosanalyysin avulla -funktio yhdessä tämän funktion kanssa tunnistaa kuitenkin monikaistaisen kuva-aineiston muutokset mistä tahansa tuetusta anturista ja myös yksikaistaisen kuva-aineiston jäljennökset, kuten kaistaindeksit. Voit toteuttaa jatkuvaa muutoksen tunnistusta normalisoidussa kasvillisuuserojen indeksirasterissa (NDVI), koska äkilliset muutokset NDVI-arvoissa voivat tarkoittaa metsien tuhoutumista.</div>.",
		computeChangeName: "Laske muutos",
		computeChangeSnip: "Laskee eron kahden kategorisen tai jatkuvan rasteriaineistoryhmän välillä.",
		computeChangeDesc: "Laske muutos -funktiota voi käyttää kahden luokitellun rasterin välisten erojen luettelemiseen maanpeitteen muutosten analysointia varten. Sitä voi käyttää myös kahden yksikaistaisen jatkuvan rasterin, kuten korkeuserojen, lämpötilan ja latvuspeitteen, välisten muutosten tutkimiseen.",
		detectChangeName: "Tunnista muutos muutosanalyysin avulla",
		detectChangeSnip: "Luo pikselien muutostiedot sisältävän rasterikarttatason käyttämällä muutosanalyysirasteria.",
		detectChangeDesc: "<div>Tunnista muutos muutosanalyysin avulla -toiminto luo pikselien muutospäivämäärätiedot sisältävän rasterikarttatason käyttämällä muutosanalyysirasteria. Muutosanalyysirasterin pitää olla luotu Analysoi muutoksia käyttämällä CCDC-luokitusta -työkalulla tai Analysoi muutoksia käyttämällä LandTrendr-analyysia -työkalulla tai CCDC-analyysirasteritoiminnolla tai LandTrendr-analyysirasteritoiminnolla.</div><br><div>Tämä rasteritoiminto voidaan yhdistää rasteritoimintomallin CCDC-analyysirasteritoimintoon tai LandTrendr-analyysirasteritoimintoon. Jos haluat tuottaa pysyvän rasteritulosaineiston, yhdistä CCDC-analyysi- tai LandTrendr-analyysitoiminnon tulosaineisto Tunnista muutos muutosanalyysin avulla -toimintoon, tallenna rasteritoimintomallina ja suorita rasterianalyysi mallissa.</div><br><div> <strong>Muutoksen tyyppi</strong> -parametri osoittaa luotavat tiedot. Tiedot puretaan muutosanalyysirasterista. Kun suoritat tämän toiminnon CCDC-toiminnon tai -työkalun tulosaineistossa, voit valita seuraavista vaihtoehdoista:</div><ul><li><strong>Viimeisimmän muutoksen aika</strong> – Viimeisin päivämäärä ja kellonaika, jolloin pikseli on merkitty muutetuksi.</li><li><strong>Aikaisimman muutoksen aika</strong> – Aikaisin päivämäärä ja kellonaika, jolloin pikseli on merkitty muutetuksi.</li><li><strong>Suurimman muutoksen aika</strong> – Päivämäärä ja kellonaika, jolloin pikselin laskettu muutos oli merkittävin.</li><li> <strong>Muutosten määrä</strong> – Pikselin muutosten kokonaismäärä.</li></ul><div>Kun suoritat tämän toiminnon LandTrendr-toiminnon tai -työkalun tulosaineistossa, voit valita seuraavista lisävaihtoehdoista:</div><ul><li><strong>Pisimmän muutoksen aika</strong> – Päivämäärä, jolloin pikseli merkittiin muutetuksi; pisimmän muutosajan alussa tai lopussa.</li><li><strong>Lyhimmän muutoksen aika</strong> – Päivämäärä, jolloin pikseli merkittiin muutetuksi; lyhimmän muutosajan alussa tai lopussa.</li><li><strong>Nopeimman muutoksen aika</strong> – Päivämäärä, jolloin pikseli merkittiin muutetuksi; nopeimman muutosajan alussa tai lopussa.</li><li><strong>Hitaimman muutoksen aika</strong> – Päivämäärä, jolloin pikseli merkittiin muutetuksi; hitaimman muutosajan alussa tai lopussa.</li></ul><div>Tulosaineiston rasteri on monikaistainen rasteri, jossa kukin kaista sisältää muutostiedot valitun muutoksen tyypin ja määritettyjen muutosten enimmäismäärän mukaan. Jos esimerkiksi <strong>muutoksen tyypiksi</strong> on määritetty <strong>Aikaisimman muutoksen aika</strong> ja <strong>muutosten enimmäismääräksi</strong> on määritetty 2, toiminto laskee kaksi aikaisinta päivämäärää, jolloin muutos on ilmennyt koko aikasarjassa kunkin pikselin osalta. Tuloksena on rasteri, jossa ensimmäinen kaista sisältää aikaisimman muutoksen päivämäärät pikseliä kohti ja toisessa kaistassa näkyvät toisen vanhan pikselikohtaisen muutoksen päivämäärät.</div><br><div>Kun tämä toiminto suoritetaan LandTrendr-työkalujen tulosaineistossa, voit valita, puretaanko päivämäärä, joka kuvaa muutoksen alkua vai muutoksen loppua, käyttämällä <strong>Segmenttipäivämäärä</strong>-parametria. Jos haluat esimerkiksi ymmärtää, miten uusin muutos aikasarjoissa on käynnistynyt, määritä <strong>muutostyypiksi</strong> <strong>Viimeisimmän muutoksen aika</strong> ja <strong>lohkon päivämääräksi</strong> <strong>Lohkon alku</strong>.</div><br><div>Seuraavien suodatusparametrien avulla voit poimia tarkempia muutospäivien päivämääriä muutosanalyysirasterista:</div><ul><li><strong>Suodata vuoden mukaan</strong> – Tunnista muutokset, jotka esiintyivät tietyn ajanjakson aikana, esimerkiksi jos etsit muutoksia, jotka esiintyivät maisemassa viiden vuoden kuluessa kuivuudesta.</li><li><strong>Suodata keston mukaan</strong> – Tunnista muutokset, jotka esiintyivät tietyn vuoden tai tiettyjen peräkkäisten vuosien aikana, esimerkiksi jos etsit muutoksia, jotka esiintyivät yhden tai kahden vuoden aikana. Voit laskea keston käyttämällä kaavaa <strong>päättymisvuosi – alkamisvuosi +1</strong>. Aikasarjan välit sisällytetään.</li><li><strong>Suodata suuruuden mukaan</strong> – Tunnista tietyn suuruuden muutokset, esimerkiksi jos etsit vain suuria muutoksia kasvillisuusindeksin NDVI:ssä. Suuruus on absoluuttinen arvo, joten vähimmäis- ja enimmäisarvot eivät voi olla negatiivisia. Jos haluat määrittää suunnan muutoksen, käytä <strong>Vaihda suunta</strong> -parametria.</li></ul>",
		distanceAccumulationName: "Etäisyyskertymä",
		distanceAccumulationSnip: "Laskee kunkin solun kumuloituneen etäisyyden lähteistä. Funktio käyttää suoraa etäisyyttä, kustannusetäisyyttä, todellista pintaetäisyyttä sekä pysty- ja vaakasuoraa kustannustekijää.",
		distanceAccumulationDesc: "Etäisyyskertymä laskee etäisyyden kuhunkin tutkimusalueen sijaintiin ja lähimpään tai pienimmän kustannuksen lähteeseen. Jos vain lähteet annetaan syötteenä, lasketaan suoraviivainen etäisyys kuhunkin tutkimusalueen sijaintiin. Jos sekä lähteitä että esteitä käytetään syötteenä, Etäisyyskertymä laskee suoraviivaisen etäisyyden esteiden ympäri. Sekä lähderasterissa että esterasterissa taustan arvon tulee olla NoData, kun lähteet ja esteet esitetään kelvollisilla soluarvoilla. Nolla sisältyy kelvollisiin arvoihin. <div><br/>Kun pintarasteri annetaan syötteenä, lasketaan solujen välinen todellinen pinnan etäisyys. Kustannusanalyysin toteuttaminen Etäisyyskertymän avulla edellyttää kustannuspintaa. Jos kustannuspinta on annettu, tulos on kertynyt kustannusetäisyysrasteri. Kun vaaka- ja pystysuuntaiset tekijät on annettu, suuntatarkkuutta pidetään kustannuskertymänä. Käytettäviä lähteen ominaisuuksia on neljä. Näitä ominaisuuksia, jotka voivat liittyä joko lähteeseen tai lähteen liikkujiin, hallitaan tiettyjen parametrien avulla: 1. Alkuperäinen kertymä: määrittää alkuperäisen kustannuksen ennen kuin liike alkaa. 2. Enimmäiskertymä: määrittää, miten paljon kustannusta voi kertyä lähteeseen, ennen kuin se saavuttaa raja-arvonsa. 3. Kustannuksissa käytettävä kerroin: määrittää matkustustavan tai magnitudin lähteessä. 4. Matkustussuunta: tunnistaa, lähteekö liikkuja liikkeelle lähteestä ja liikkuu muuhun kuin lähdesijaintiin vai lähteekö hän liikkeelle muusta kuin lähdesijainnista ja liikkuu takaisin lähteeseen.<div><br/>Oletusarvon mukaan Etäisyyskertymän tulos on yksittäinen kaista, joka on etäisyyskertymärasteri. Toinen kaista, paluusuunnan kaista, voidaan kuitenkin myös luoda.  Tämä kaista kertoo, mihin suuntaan on liikuttava kustakin tutkimusalueen sijainnista, jotta päästään pienimmän kustannuksen lähteeseen. Kumpaakin kaistaa tarvitaan optimaalisten reittien määrittämiseen tutkimusalueella. Kun luot polkua, käytä ensin Pura kaistat -funktiota etäisyyskertymärasterin ja paluusuunnan rasterin purkamiseen. Käytä näitä karttatasoja Kustannusreitti-funktion syötteenä. Käytä funktiossa etäisyyskertymärasteria Kustannusetäisyysrasterin syötteenä ja paluusuunnan rasteria Kustannuspaluulinkin rasterin syötteenä.</div>.",
		distanceAllocationName: "Etäisyyden kohdennus",
		distanceAllocationSnip: "Laskee kunkin solun etäisyyden kohdennuksen määritettyisiin lähteisiin suoran etäisyyden, kustannusetäisyyden, todellisen pintaetäisyyden sekä pysty- ja vaakasuoran kustannustekijän perusteella.",
		distanceAllocationDesc: "Etäisyyden kohdennus laskee, mihin lähteeseen kukin tutkimusalueen sijainti on kohdennettu. Jos vain lähteet on annettu syötteenä, sijainnit kohdennetaan käyttämällä suoraviivaista etäisyyttä lähimpään lähteeseen. Jos sekä lähteitä että esteitä käytetään syötteenä, Etäisyyden kohdennus laskee suoraviivaisen etäisyyden esteiden ympäri selvittääkseen mihin lähteeseen sijainti on kohdennettu. Sekä lähderasterissa että esterasterissa taustan arvon tulee olla NoData, kun lähteet ja esteet esitetään kelvollisilla soluarvoilla. Nolla sisältyy kelvollisiin arvoihin.<div><br/>Kustannusanalyysin toteuttaminen Etäisyyden kohdennus -funktion avulla edellyttää kustannuspintaa. Jos kustannuspinta on annettu, tulos on kohdennusrasteri, joka perustuu kumulatiiviseen kustannukseen, ei suoraviivaiseen etäisyyteen. Kun vaaka- ja pystysuuntaiset tekijät on annettu, suuntatarkkuutta pidetään kustannuskertymänä. Kun pintarasteri annetaan syötteenä, todellinen pinnan etäisyys kuljettujen solujen välillä lasketaan, kun kohdennus on määritetty. Käytettäviä lähteen ominaisuuksia on neljä. Näitä ominaisuuksia, jotka voivat liittyä joko lähteeseen tai lähteen liikkujiin, hallitaan tiettyjen parametrien avulla: 1. Alkuperäinen kertymä: määrittää alkuperäisen kustannuksen ennen kuin liike alkaa. 2. Enimmäiskertymä: määrittää, miten paljon kustannusta voi kertyä lähteeseen, ennen kuin se saavuttaa raja-arvonsa. 3. Kustannuksissa käytettävä kerroin: määrittää matkustustavan tai magnitudin lähteessä. 4. Matkustussuunta: tunnistaa, lähteekö liikkuja liikkeelle lähteestä ja liikkuu muuhun kuin lähdesijaintiin vai lähteekö hän liikkeelle muusta kuin lähdesijainnista ja liikkuu takaisin lähteeseen.<div><br/>Oletusarvon mukaan Etäisyyden kohdennus -funktion tulos on yksittäinen kaista, joka on etäisyyden kohdennusrasteri. Totuusarvoisen Luo lähderivi ja -sarake tulosaineiston lisäkaistoina -valinnan valitseminen tulosteessa tuottaa monikaistaisen rasterin, joka koostuu kolmesta kaistasta. Ensimmäinen kaista on etäisyysallokointikaista, toinen kaista sisältää rivi-indeksin ja kolmas kaista sisältää sarakeindeksin. Nämä indeksit määrittävät sen lähdesolun sijainnin, joka on pienimmän kumulatiivisen kustannusetäisyyden päässä. Intensiteettikartan voi luoda käyttämällä yhdessä lähderivin indeksiä ja lähdesarakkeen indeksiä. Jos kohdistat kyselyn mihin tahansa tutkimusalueen sijaintiin kaistoissa kaksi ja kolme, tiedät pienimmän kustannuksen lähteen rivin ja sarakkeen kyseisessä sijainnissa.</div>",
		eucBackDirectionName: "Euklidinen paluusuunta",
		eucBackDirectionSnip: "Laskee kullekin solulle asteina suunnan naapurisoluun lyhyintä polkua pitkin takaisin lähimpään lähteeseen välttäen esteitä.",
		eucBackDirectionDesc: "Euklidinen paluusuunta -funktion tuloksena on jatkuva liukulukurasteri, joka edustaa asteina suuntaa takaisin lähimpään lähteeseen samalla välttäen esteitä, jos sellaisia on määritetty.<div><br/>Euklidinen paluusuunta -funktion syötteinä ovat lähteet, joiden paluusuunnat lasketaan. Vaihtoehtoinen syöte on rasteri, joka edustaa tutkimusalueen esteitä. Sekä lähderasterissa että esterasterissa taustan arvon tulee olla NoData, kun lähteet ja esteet esitetään kelvollisilla arvoilla. Nolla sisältyy kelvollisiin arvoihin. Oletusarvon mukaan laskenta käsittelee lähteiden ja esteiden yhdistetyn laajuuden sekä kaksi riviä ja saraketta. Jos analyysia tarvitaan vain määritetyllä etäisyydellä lähteistä, Enimmäisetäisyys-parametria voidaan käyttää. Euklidinen paluusuunta tukee laskennassa sekä Planaarinen-menetelmää että Geodeettinen-menetelmää. Planaarinen-menetelmän laskenta suoritetaan projisoidusta litteästä tasosta karteesisen 2D-koordinaatiston avulla. Geodeettinen-menetelmän laskenta suoritetaan ellipsoideille, mikä tarkoittaa sitä, että tulokset eivät muutu lähtöaineiston tai tulosaineiston projisoinnista huolimatta.<div><br/>Euklidinen paluusuunta -funktion tulosta voi käyttää yhdessä Euklidinen etäisyys -funktion tuloksen kanssa lyhimpien reittien määrittämiseen tutkimusalueen sijainneista takaisin lähteeseen. Sekä Euklidinen paluusuunta -funktion tulosta että Euklidinen etäisyys -funktion tulosta käytetään Kustannusreitti-funktiossa yhdessä määränpäiden kanssa lyhimpien reittien luomiseen.</div>.",
		expandName: "Laajenna",
		expandSnip: "Laajentaa rasterin valitut vyöhykkeet vyöhykkeillä määritetyllä solujen määrällä.",
		expandDesc: "Yleisen Laajenna-funktion avulla voit yleistää tai yksinkertaistaa rastereita laajentamalla tiettyjä vyöhykkeitä. Voit myös hallita tapahtuvan yleistyksen määrää.<div><br/>Valitsemiesi vyöhykkeiden koko suurenee laajentumalla muihin vyöhykkeisiin. Toisin sanoen, valittuja vyöhykearvoja voi tarkastella edustan vyöhykkeinä, kun muut arvot säilyvät taustavyöhykkeinä. Edustan vyöhykkeet voivat laajentua taustavyöhykkeisiin.<div><br/>Yleistyksen määrää voi hallita Solujen määrä -parametrin avulla. Oletusarvon mukaan tämä arvo on 1, mikä tarkoittaa sitä, että valitut vyöhykkeet laajenevat solun koon osoittamalla määrällä. Jos haluat nostaa yleistyksen astetta, voit määrittää suuremman arvon tähän parametriin. Toisin sanoen, se tarkoittaa sitä, että voit suorittaa työkalun niin monta kertaa kuin määritetty numero osoittaa ja että edellisen suorituksen tulokset toimivat seuraavan iteroinnin syötteenä.</div>",
		trendAnalysisName: "Luo trendi",
		trendAnalysisSnip: "Arvioi kunkin pikselin trendin ulottuvuudessa yhdelle tai useammalle moniulotteisen rasterin muuttujalle.",
		trendAnalysisDesc: "<div>Tätä toimintoa voidaan käyttää aineiston sovittamiseen lineaariselle, harmoniselle tai polynomiselle trendiviivalle tai trendin tunnistamiseen Mann-Kendall- tai Vuodenaika-Kendall-testin avulla.</div><br><div>Tämän toiminnon avulla luotua tulostrendirasteria käytetään <strong>Ennusta trendin avulla</strong> -toiminnon lähtöaineistona.</div><br><div>Mann-Kendall- ja Vuodenaika-Kendall-testiä käytetään sen määrittämiseen, onko aineistossa monotoninen trendi. Ne ovat ei-parametrisia, mikä tarkoittaa sitä, että ne eivät oleta tiettyä aineiston jakaumaa. Mann-Kendall-testissä ei oteta huomioon sarjojen korrelointia tai kausittaisia vaikutuksia. Jos aineisto on kausiluonteista, Vuodenaika-Kendall-testi on sopivampi.</div><br><div>Jos työkalua käytetään joko Mann-Kendall-testin tai Vuodenaika-Kendall-testin suorittamiseen, tuloksena on seuraavanlainen viiden kaistan rasteri:</div><ul><li>Kaista 1 = kaltevuus</li><li>Kaista 2 = p-arvo</li><li>Kaista 3 = Mann-Kendall-tulos (S)</li><li>Kaista 4 = varianssi</li><li>Kaista 4 = varianssi</li><li>Kaista 5 = Z-tulos</li></ul><div>Mann-Kendall- tai Vuodenaika-Kendall-testin tulosaineistoa voidaan käyttää sen päättämiseen, millä moniulotteisten aikasarjojen pikseleillä on tilastollisesti merkittävä trendi. Voit käyttää näitä tietoja yhdessä lineaarisen, harmonisen tai polynomisen trendianalyysin kanssa aikasarjojen merkitsevien trendien poimimiseen. Voit luoda maskin, joka sisältää merkitseviä p-arvoja sisältäviä pikseleitä, soveltaa maskia moniulotteiseen rasteriin ja käyttää tätä maskattua moniulotteista rasteria työkalun lähtöaineistona, kun haluat suorittaa lineaarisen, harmonisen tai polynomisen trendianalyysin.</div><br><div>Suuntaviiva-vaihtoehtoja on kolme trendin sovittamiseksi muuttuja-arvoihin ulottuvuudessa: lineaarinen, harmoninen ja polynominen.</div><br><div>Lineaarisessa trendianalyysissa tulos on kolmen kaistan rasteri seuraavasti:</div><ul><li>Kaista 1 = kaltevuus</li><li>Kaista 2 = leikkauspiste</li><li>Kaista 3 = keskimääräisen neliöjuuren virhe (RMSE) tai virhe parhaan sovituksen käyrällä</li></ul><div>Polynomisessa trendianalyysissa kaistojen määrä tuloksessa määräytyy polynomin asteluvun perusteella. Toisen asteen polynomin sovitus tuottaa neljän kaistan rasterin seuraavasti:</div><ul><li>Kaista 1 = polynomi_2</li><li>Kaista 2 = polynomi_1</li><li>Kaista 3 = polynomi_0</li><li>Kaista 4 = RMSE</li></ul><div>Kolmannen asteen polynomi tuottaa viiden kaistan rasterin seuraavasti:</div><ul><li>Kaista 1 = polynomi_3</li><li>Kaista 2 = polynomi_2</li><li>Kaista 3 = polynomi_1</li><li>Kaista 4 = polynomi_0</li><li>Kaista 5 = RMSE</li></ul><div>Harmonisessa trendianalyysissa kaistojen määrä tuloksessa määräytyy harmonisen toistovälin perusteella. Kun toistoväliksi on määritetty 1, tuloksena on viiden kaistan rasteri seuraavasti:</div><ul><li>Kaista 1 = kaltevuus</li><li>Kaista 2 = leikkauspiste</li><li>Kaista 3 = harmoninen_sin1</li><li>Kaista 4 = harmoninen_cos1</li><li>Kaista 5 = RMSE</li></ul><div>Kun toistoväliksi on määritetty 2, tuloksena on seitsemän kaistan rasteri seuraavasti:</div><ul><li>Kaista 1 = kaltevuus</li><li>Kaista 2 = leikkauspiste</li><li>Kaista 3 = harmoninen_sin1</li><li>Kaista 4 = harmoninen_cos1</li><li>Kaista 5 = harmoninen_sin2</li><li>Kaista 6 = harmoninen_cos2</li><li>Kaista 7 = RMSE</li></ul><div><strong>Syklin pituus</strong> -parametrin avulla ilmaistaan niiden syklien määrä ja pituus, joiden odotetaan ilmenevän aineistossa päivän tai vuoden aikana. Jos esimerkiksi oletat aineiston käyvän läpi kaksi vaihtelusykliä vuoden aikana, syklin pituus on 182,5 päivää tai 0,5 vuotta. Jos lämpötila-aineistoa kerätään kolmen tunnin välein ja päivää kohti on yksi vaihtelusykli, syklin pituus on yksi päivä.</div><br><div>Harmonisen trendianalyysin <strong>Toistoväli</strong>-parametria käytetään aineistoon sovitettavan harmonisen mallin kuvaamiseen. Jos toistoväliksi on määritetty 1, mallin sovituksessa käytetään lineaarisen ja ensimmäisen asteen harmonisen käyrän yhdistelmää. Jos toistoväliksi on määritetty 2, mallin sovituksessa käytetään lineaarisen, ensimmäisen asteen harmonisen käyrän ja toisen asteen harmonisen käyrän yhdistelmää. Jos toistoväli on 3, aineiston mallinnuksessa käytetään kolmannen asteen harmonista lisäkäyrää jne.</div><br><div>Mallin yhteensopivuusasteen tilastotietoja voidaan luoda valinnaisina tulosteina. Keskimääräisen neliöjuuren virhe (RMSE), R^2-luku ja trendin kaltevuuden p-arvo voidaan laskea ja symboloida. Valitse tulosaineiston trendirasterikarttatason symbolit käyttämällä <strong>RGB</strong>-symboleja ja määritä tilastotiedot punaisina, vihreinä ja sinisinä kaistoina.</div><br>",
		spectralUnmixingName: "Lineaarinen spektraalinen erottelu",
		spectralUnmixingSnip: "Suorittaa alipikseleiden luokittelun ja laskee eri maanpeitetyyppien murtomäärät yksittäisille pikseleille.",
		spectralUnmixingDesc: "Lineaarinen spektraalinen erottelu laskee niiden yksittäisten pikseleiden katkonaisen peitteen, jotka sisältävät useita maanpeitetyyppejä. Se luo monikaistaisen karttatason, jossa kukin kaista vastaa kunkin maanpeiteluokan murtomäärää. Voit käyttää sitä esimerkiksi maanpinnan luokitteluun monispektrisessä kuvassa fotosynteettisen kasvillisuuden, paljaan maaperän ja kuolleen tai muun kuin fotosynteettisen kasvillisuuden tunnistamiseen.<div><br/>Tulosaineiston monikaistaisen rasterin järjestys noudattaa lähtöaineiston spektriprofiilin järjestystä. Luokkien määrä ei saa ylittää lähtöaineiston rasterin kaistojen määrää. Voit esimerkiksi poimia tietoja enintään kahdeksasta kahdeksankaistaisen rasterin luokasta.</div>.",
		multidimensionalFilterName: "Moniulotteinen suodatin",
		interpolateRasterByDimensionFunctionName: "Interpoloi rasteri ulottuvuuden mukaan",
		interpolateRasterByDimensionFunctionSnip: "Interpoloi moniulotteisen rasterin määritetyille ulottuvuusarvoille käyttämällä vierekkäisiä viipaleita.",
		interpolateRasterByDimensionFunctionDesc: "<p>Tämän toiminnon avulla voit arvioida moniulotteisen rasterin ulottuvuuksiltaan määrittämättömän viipaleen pikseliarvot. Jos sinulla on esimerkiksi aineistoryhmä, joka sisältää meriveden lämpötilat pinnan tasolta ja 100 metrin syvyydestä, ja haluat arvioida lämpötilan 50 metrin syvyydessä, saat tämän toiminnon avulla kyseistä syvyyttä koskevan arvion käyttämällä Arvon mukaan -ulottuvuusmääritelmää.</p><p>Voit myös tarkentaa kuukausittaisen tietoaineiston päivittäiseksi aineistoryhmäksi käyttämällä Välin mukaan -ulottuvuusmääritelmää ja määrittämällä Vaihe-parametrin arvoksi 1 ja Yksikkö-parametrin arvoksi Päivät.</p><p>Käytä Kohderasterin mukaan -ulottuvuusmääritelmää Kohderasterin arvon arvioimiseen.</p>",
		multidimensionalFilterSnip: "Luo rasterikarttatason moniulotteisesta rasteriaineistoryhmästä tai moniulotteisesta rasterikarttatasosta viipaloimalla aineistoa määritettyjen muuttujien ja dimensioiden mukaisesti.",
		multidimensionalFilterDesc: "Moniulotteinen suodatin luo moniulotteisen rasterikarttatason suodattamalla ja poimimalla muuttujien alijoukon moniulotteisesta rasterista. Käytössäsi on esimerkiksi moniulotteinen aineistoryhmä, joka sisältää kuukausittaiset sademäärät 30 vuodelta, mutta haluat poimia aineiston vain kultakin tammikuulta nähdäksesi, miten sademäärä on muuttunut kyseisen kuukauden osalta.<div><br/>Käytä Dimension määritelmä -parametria ulottuvuuksien jakamiseen käyttämällä arvoväliä, arvoa tai arvojen vaihteluväliä. Jos käytössäsi on esimerkiksi aineistoa valtamerien suolapitoisuudesta 10 vuodelta kahden metrin syvyydestä aina 500 metriin saakka, voit käyttää eri dimension määritelmän asetuksia seuraavissa skenaarioissa. Skenaario 1: poimi tammikuun suolapitoisuusaineisto 10 vuoden ajanjaksolta. Valitse Arvojen mukaan, määritä ulottuvuuden arvoksi StdTime ja arvoksi tammikuu. Skenaario 2: jaa suolapitoisuusaineisto syvyysalueen 0–150 metriä mukaan. Valitse Arvovälien mukaan, määritä ulottuvuudeksi StdZ ja määritä vähimmäisarvoksi -150 ja enimmäisarvoksi 0. Skenaario 3: poimi suolapitoisuusaineisto tammikuun ensimmäiseltä 10 päivältä 10 vuoden ajanjaksolta. Valitse Iteroinnin mukaan, määritä ulottuvuudeksi StdTime, määritä ensimmäisen iteroinnin alkuosaksi ja ensimmäisen iteroinnin loppuosaksi vastaava iterointijakson alku ja loppu, määritä vaiheeksi 1 ja määritä yksiköksi Vuodet.</div>.",
		multidimensionalRasterName: "Moniulotteinen rasteri",
		multidimensionalRasterSnip: "Lisää karttaan moniulotteista aineistoa moniulotteisena rasterikarttatasona.",
		multidimensionalRasterDesc: "Moniulotteinen rasteri -funktio lisää karttaan moniulotteista aineistoa moniulotteisena rasterikarttatasona. Tästä funktiosta on hyötyä suoritettaessa rasterianalyysin työnkulkuja toimintoketjun avulla.<div><br/>Tuetut moniulotteisia rasteriaineistoryhmiä ovat netCDF, GRIB, HDF ja Esrin CRF. Moniulotteisia mosaiikkiaineistoryhmiä tuetaan myös.</div>.",
		optimalPathAsRasterName: "Optimaalinen polku rasterina",
		optimalPathAsRasterSnip: "Laskee pienimmän kustannuksen reitin lähteestä määränpäähän.",
		optimalPathAsRasterDesc: "Tämä yleinen funktio tuottaa tulosaineiston rasterin, johon tallennetaan optimaalinen reitti tai optimaaliset reitit valituista sijainneista kumulatiivisessa kustannuspinnassa määritettyyn lähimpään lähdesoluun kustannusetäisyyden mukaan.<div><br/>Yleensä vähintään yksi painotetuista kustannusfunktioista (Etäisyyskertymä tai Etäisyyden kohdennus) on suoritettava ennen Optimaalinen polku rasterina -funktion suoritusta, kun halutaan luoda lähtöaineiston etäisyyskertymärasteri ja paluusuunnan rasteri. Nämä ovat pakollisia Optimaalinen reitti -funktion edellyttämiä lähtöaineiston rasterikarttatasoja. Tulosaineiston optimaalisen reitin arvot edustavat reittien määrää annetussa sijainnissa. Useissa tapauksissa reitit noudattavat samaa kaavaa poistuen lähteestä ja hajaantuen eri määränpäihin. Esimerkiksi arvo yksi tarkoittaa, että annetussa sijainnissa on vain yksi optimaalinen reitti, ja arvo viisi tarkoittaa, että kyseisessä sijainnissa on viisi tutkimusalueen solun läpi kulkevaa optimaalista reittiä.<div><br/>Lähtöaineiston määränpääaineiston on oltava rasterikarttataso. Määränpääsolujen joukko koostuu kaikista niistä lähtöaineiston rasterin soluista, joissa on kelvollisia arvoja. NoData-arvoja sisältäviä soluja ei sisällytetä joukkoon. Arvo nolla vastaa kelvollista määränpäätä. Määränpäärasteri voidaan luoda käyttämällä poimintatyökaluja. Jos sinulla on määränpää- tai lähdekohteita, voit muuntaa ne rasteriksi käyttämällä Rasteroi kohteet -funktiota. Käytä etäisyyskertymä- tai paluusuunnan rasteria rasterointifunktion rasterisyötteenä. Näin varmistat, että kohde rasteroidaan käyttämällä samaa solukokoa, laajuutta ja koordinaatistotietoa kuin jota on käytetty muissa Optimaalinen polku rasterina -funktiolla käsitellyissä rastereissa. Optimaalinen polku rasterina -funktiota voi käyttää myös pienimmän vastuksen reitin johtamiseen alas digitaalista korkeusmallia (DEM). Käytä siinä tapauksessa digitaalista korkeusmallia lähtöaineiston etäisyyskertymärasteria varten ja Virtaussuunta-funktion tulosta paluusuunnan rasteria varten.</div>.",
		trendName: "Ennusta trendin avulla",
		trendSnip: "Laskee ennustetun moniulotteisen rasterikarttatason käyttämällä Luo trendi -funktion tai Luo trendirasteri -geoprosessointityökalun tuottamaa tulosaineiston trendirasteria.",
		trendDesc: "Ennusta trendin avulla -funktio laskee ennustetun moniulotteisen rasterikarttatason käyttämällä Luo trendi -funktion tai Luo trendirasteri -geoprosessointityökalun tuottamaa tulosaineiston trendirasteria.",
		rasterCollectionName: "Käsittele rasterikokoelma",
		rasterCollectionSnip: "Käsittelee kunkin moniulotteisen rasterin viipaleen tai kunkin mosaiikkirasterin kohteen. Tällä funktiolla voi myös koostaa useita viipaleita yhdeksi viipaleeksi.",
		rasterCollectionDesc: "Käsittele rasterikokoelma -funktio käsittelee kunkin moniulotteisen rasterin viipaleen tai kunkin mosaiikkirasterin kohteen. Tällä funktiolla voi myös koostaa useita viipaleita yhdeksi viipaleeksi.<div><br/>Tämä funktio käsittelee kunkin moniulotteisen rasterin tai mosaiikkirasterin viipaleen käyttämällä rasterifunktiomallia. Tämä funktio tukee seuraavia vaihtoehtoja: 1. Määritä rasterifunktiomalli kohteen funktiolle. Mosaiikkiaineistoryhmä sisältää esimerkiksi Landsat-kuva-aineistoa 20 vuodelta ja haluat laskea NDVI-arvon kullekin maisemalle aikasarjassa. Määritä Kohde-funktiossa rasterifunktiomalli, joka sisältää NDVI-rasterifunktion. 2. Määritä rasterifunktiomalli koostefunktiolle. Moniulotteinen rasteri, joka sisältää esimerkiksi päivittäistä lämpötila-aineistoa 10 vuodelta ja haluat laskea enimmäislämpötilan kultakin vuodelta. Määritä koostefunktiossa rasterifunktiomalli, joka sisältää Solun tilastotiedot -funktion, kun toiminnoksi on määritetty Maksimi. Määritä Koontimääritelmä-kohdassa ulottuvuuden arvoksi StdTime, tyypiksi Arvovälin avainsana ja avainsanaväliksi Vuosittain. Huomaa, että jos lähtöaineiston mosaiikkiaineistoryhmä ei ole moniulotteinen, koostefunktio ei noudata koontimääritelmää. Koostefunktio koostaa kaikki kohteet tai kunkin ryhmän yhdeksi, jos ne on määritetty koostefunktiomallissa. Lisätietoja ryhmien käytöstä mosaiikkiaineistoryhmässä on kohdassa Mosaiikkiaineistoryhmän kohteiden käyttö  rasterifunktiomalleissa. 3. Määritä rasterifunktiomalli Käsittely-funktiolle. Tämän mallin funktiota tai funktioiden ketjua käytetään uuden käsitellyn rasterin näyttämiseen. Muuta tapaa, jolla käsitelty rasterikarttataso näytetään, määrittämällä esimerkiksi rasterifunktiomalli, joka sisältää Värikartta-funktion. Huomaa, että jos lähtöaineisto on moniulotteinen rasteri, käsittelyfunktiota käytetään nykyisessä näyttöviipaleessa. Jos lähtöaineisto on mosaiikkikarttataso tai mosaiikkiaineistoryhmä, käsittelyfunktiota käytetään mosaiikkirasterissa Ensimmäinen-menetelmän avulla päällekkäisyyksien ratkaisemiseksi. 3. Määritä mallit mille tahansa kolmen funktion yhdistelmälle. Käytössäsi on esimerkiksi mosaiikkiaineistoryhmä, joka sisältää aikasarjan Landsat-kuva-aineiston, ja haluat luoda yhdistelmäkuvan NDVI-enimmäisarvoista. Määritä Kohde-funktiossa rasterifunktiomalli, joka sisältää NDVI-rasterifunktion. Määritä koostefunktiolle rasterifunktiomalli, joka sisältää Solun tilastotiedot -funktion, kun toiminnoksi on määritetty Maksimi. Määritä Käsittely-funktiossa rasterifunktiomalli, joka sisältää Värikartta-funktion. Huomaa, että funktion käsittelyjärjestys noudattaa lähtöaineiston parametrien järjestystä. Esimerkiksi Kohde-funktio käsitellään ensin.</div>.",
		randomName: "Satunnainen",
		randomSnip: "Luo rasterin, jossa satunnaiset pikseliarvot on piirretty näennäissatunnaisesta jakaumasta. Useita jakaumia ja satunnaislukugeneraattoreita tuetaan.",
		randomDesc: "Satunnaisfunktio luo satunnaispikseliarvoihin perustuvan rasterin, jota voidaan käyttää rasterifunktiomalleissa tai mosaiikkiaineistoryhmissä.<div><br/>Vaikka useat funktiot toimivat ainakin yhdessä rasterissa, Satunnaisfunktio ei edellytä lähtöaineiston rasteria. Tämä tarkoittaa sitä, että funktio toimii enemminkin rasteriaineistoryhmän kuin funktion tavoin, joten lisättäessä sitä toimintoketjuun tai poistettaessa sitä toimintoketjusta on syytä olla varovainen.</div>.",
		shrinkName: "Kutista",
		shrinkSnip: "Kutistaa valitut vyöhykkeet määritetyllä solujen määrällä korvaamalla ne sen solun arvolla, joka useimmiten esiintyy sen naapurustossa.",
		shrinkDesc: "Yleisen Kutista-funktion avulla voit yleistää tai yksinkertaistaa rastereita pienentämällä tiettyjä vyöhykkeitä. Voit myös hallita tapahtuvan yleistyksen määrää.<div><br/>Valitsemasi vyöhykkeet kutistuvat tai niiden koko pienenee, jolloin ympärillä olevien vyöhykkeiden solut laajenevat niihin. Toisin sanoen, valittuja vyöhykearvoja voi tarkastella edustan vyöhykkeinä, kun muut arvot säilyvät taustavyöhykkeinä. Edustan vyöhykkeiden solut voidaan korvata taustavyöhykkeiden soluilla. Ohuet saarekkeet vyöhykkeen sisällä, joiden voidaan katsoa jakavan rajat vyöhykkeen kanssa, voidaan myös korvata.<div><br/>Yleistyksen määrää voi hallita Solujen määrä -parametrin avulla. Oletusarvon mukaan tämä arvo on 1, mikä tarkoittaa sitä, että valitut vyöhykkeet kutistuvat solun koon osoittamalla määrällä. Jos haluat nostaa yleistyksen astetta, voit määrittää suuremman arvon tähän parametriin. Toisin sanoen, se tarkoittaa sitä, että voit suorittaa työkalun niin monta kertaa kuin määritetty numero osoittaa ja että edellisen suorituksen tulokset toimivat seuraavan iteroinnin syötteenä.</div>.",
		trendToRGBName: "Trendi RGB-rasteriksi",
		trendToRGBSnip: "Muuntaa trendirasterin kolmikaistaiseksi (punainen, vihreä ja sininen) rasteriksi.",
		trendToRGBDesc: "Trendi RGB-rasteriksi -funktio muuntaa trendirasterin kolmikaistaiseksi (punainen, vihreä ja sininen) rasteriksi. Trendirasteri luodaan Luo trendi -rasterifunktiosta tai CCDC-analyysin rasterifunktiosta.<div><br/>Tästä funktiosta on hyötyä Luo trendi -funktion tai CCDC-analyysifunktion palauttaman mallin kerroinaineiston visualisoinnissa. Molemmat funktiot arvioivat muuttuvien pikseliarvojen trendejä, mutta funktioiden tuloksia on vaikea tulkita suoraan.<div><br/>Kuten useissa rasterifunktiossa, joudut ehkä käyttämään dynaamisen alueen säätöä (DRA) funktion tulosten parempaa esitystä varten.</div>.",
		landTrendrName: "LandTrendr-analyysi",
		landTrendrSnip: "Arvioi pikseliarvoissa ajan mittaan tapahtuneet muutokset häiriön trendien Landsat-pohjaisella havainnoinnilla ja palautusmenetelmällä (LandTrendr) ja luo muutosanalyysirasterin, joka sisältää mallin tulokset.",
		landTrendrDesc: "Tätä rasteritoimintoa voi käyttää vain lähtöaineistona Tunnista muutos muutosanalyysin avulla -rasteritoiminnolle. Voit luoda rasteritulosaineiston yhdistämällä LandTrendr-analysointitoiminnon Tunnista muutos muutosanalyysin avulla -toimintoon rasteritoimintomallissa ja käyttämällä mallia lähtöaineistona Luo rasteri rasterointitoiminnosta -geoprosessointityökalussa. Tulos on rasteri, joka sisältää tiedon ajankohdasta, jolloin pikseliarvot muuttuivat.<div><br>Tämän rasteritoiminnon tarkoituksena on poimia tarkastellun yksityiskohdan muutokset, joten ihanteellisessa moniulotteisessa lähtöaineistokuvastossa pitäisi näkyä ajan mittaan yhdenmukainen havainto, eikä siinä pitäisi näkyä ilmakehän tai anturin häiriöitä, pilviä tai pilvien varjoja. Paras käytäntö on käyttää tietoja, jotka on normalisoitu ja jotka voidaan peittää QA-kaistalla, esimerkiksi Landsat-satelliitin kokoelman 1 pintaheijastustuotteilla, joissa on pilvimaski.<div><br>Toiminto analysoi yhden kuvan vuodessa, ja vuosittaisten viipaleiden määrän täytyy olla yhtä suuri tai suurempi kuin <strong>Havaintojen vähimmäismäärä</strong> -parametrissa määritetty arvo. Tietoja on suositeltavaa olla vähintään kuuden vuoden ajalta.<div><br>Jos käytettävissä on kuukausittaisia, viikoittaisia tai päivittäisiä tietoja, on suositeltavaa valita useita kuvia jokaiselta vuodelta (mieluiten samalta vuodenajalta), poistaa pilvet ja pilvien varjot, ja yhdistämällä kuvat luoda yksi kuva, jossa havainto näkyy hyvin. Jos kuukausittaisia, viikoittaisia tai päivittäisiä tietoja annetaan lähtöaineiston moniulotteisena rasterina, toiminto tunnistaa yhden viipaleen analysointia varten <strong>Kuvauspäivä</strong>-parametrissa annettua päivämäärää lähinnä olevan päivämäärän perusteella.<div><br>Maisemassa olevan yksityiskohdan palautuminen kestää usein kauan pysymättömän muutoksen, kuten metsäpalon tai hyönteistuhon jälkeen. Mallin tunnistamaa palautumisnopeutta voi säätää asettamalla Palautumiskynnys-parametrin. Yksittäisen lohkon palautumisnopeus ei voi olla nopeampi kuin 1/palautumiskynnys.<div><br>Palautuminen maiseman muutoksesta voi tapahtua myönteiseen tai kielteiseen suuntaan. Kun maisemassa tapahtuu esimerkiksi metsän menetys, kasvillisuusindeksiarvojen aikasarjassa näkyy pudotus indeksiarvoissa ja palautumisessa näkyy vähittäinen kasvillisuusindeksiarvojen nousu eli myönteinen palautumistrendi. Määritä palautumistrendin suunta <strong>Palautumisen trendi on nouseva</strong> -parametrilla.",
		aggregateMultidimensionalName: "Koosta moniulotteinen",
		aggregateMultidimensionalSnip: "Yhdistää olemassa olevan moniulotteisen rasterin muuttuja-aineiston yhdelle ulottuvuudelle.",
		aggregateMultidimensionalDesc: "Koosta moniulotteinen -toiminto luo moniulotteisen rasterikarttatason yhdistämällä olemassa olevan moniulotteisen rasterin muuttuja-aineiston yhdelle ulottuvuudelle.<div><br>Suodata ensin lähtöaineisto, jota haluat käyttää, <strong>Ulottuvuuden määritelmä</strong> -parametrilla. Jos esimerkiksi käytettävissäsi on kuukausittaista tietoa 30 vuoden ajalta, mutta haluat luoda koontikarttatason vain ensimmäisiltä 15 vuodelta, voit määrittää analyysiin mukaan otettavat vuodet <strong>Ulottuvuuden määritelmä</strong> -parametrilla.<div><br><ul><li>Poimi tammikuun suolapitoisuustiedot 10 vuoden ajalta. Valitse <strong>Arvojen mukaan</strong>, määritä <strong>Ulottuvuus</strong>-asetukseksi <strong>StdTime</strong> ja määritä <strong>Arvot</strong>-asetukseksi <strong>Tammikuu</strong>.</li><li>Viipaloi suolapitoisuusaineisto syvyysalueelta 0–150 metriä. Valitse <strong>Arvovälien mukaan</strong>, määritä <strong>Ulottuvuus</strong>-asetukseksi <strong>StdZ</strong> ja määritä <strong>Vähimmäisarvo</strong>-asetukseksi <strong>-150</strong> ja <strong>Enimmäisarvo</strong>-asetukseksi <strong>0</strong>.</li><li>Poimi suolapitoisuusaineisto tammikuun ensimmäiseltä 10 päivältä 10 vuoden ajanjaksolta. Valitse <strong>Iteroinnin mukaan</strong>, määritä <strong>Ulottuvuus</strong>-asetukseksi <strong>StdTime</strong>, määritä <strong>Ensimmäisen iteroinnin alku</strong>- ja <strong>Ensimmäisen iteroinnin loppu</strong> -asetuksiksi iterointijakson alku ja loppu, määritä <strong>Askel</strong>-asetukseksi <strong>1</strong> ja määritä <strong>Yksikkö</strong>-asetukseksi <strong>Vuodet</strong>.</li></ul><div><br>Valitse <strong>Koontimääritelmä</strong>-parametreilla arvioitava ulottuvuus ja koontiväli käyttämällä avainsanaa, arvoa tai arvoaluetta. Jos esimerkiksi käytettävissäsi on 30 vuoden ajalta meren pintalämpötilatietoja, jotka on kerätty päivittäin 5 metrin välein 100 metrin syvyyteen asti, voit käyttää eri välivaihtoehtoja seuraavissa skenaarioissa:<div><br><ul><li>Koosta päivittäiset lämpötilatiedot kuukausittaiseksi aineistoksi, jolloin tuloksena on moniulotteinen rasteri, jossa on 12 aikaviipaletta ja jokainen viipale on koonti jokaisesta kuukaudesta kaikilta vuosilta. Valitse <strong>Arvovälin avainsana</strong> ja määritä avainsanaksi <strong>Toistuu kuukausittain</strong>.</li><li>Koosta päivittäiset lämpötilatiedot kuukausittaiseksi aineistoksi, jolloin tuloksena on moniulotteinen rasteri, jossa on 360 viipaletta eli 12 aikaleikettä jokaiselta vuodelta (30 vuotta x 12 kuukautta = 360 viipaletta). Valitse <strong>Arvovälin avainsana</strong> ja määritä avainsanaksi <strong>Kuukausittainen</strong>.</li><li>Koosta kuukausittainen lämpötila-aineisto neljän kuukauden mittaisiin väleihin. Valitse <strong>Arvovälin arvo</strong>, määritä <strong>Arvoväli</strong>-asetukseksi 4 ja määritä <strong>Yksikkö</strong>-asetukseksi <strong>Kuukaudet</strong>.</li><li>Koosta lämpötila-aineisto 0–25 metrin väliltä, sen jälkeen 25–50 metrin väliltä ja lopuksi 50–100 metrin väliltä. Valitse <strong>Välin arvoalueet</strong> ja määritä vähimmäis- ja enimmäissyvyyksiksi <strong>0 25; 25 50; 50 100</strong>.</li></ul>",
		mergeRastersName: "Yhdistä rasterit",
		mergeRastersSnip: "Yhdistää useita rasteriaineistoryhmiä paikkatiedon tai muuttujien ja ulottuvuuksien mukaan.",
		mergeRastersDesc: "Tämä toiminto luo yhdistetyn rasterin rasteriluettelosta. Jos käytettävissäsi on esimerkiksi mosaiikkiaineistoryhmä, joka sisältää kuukausittaiset sadetiedot 30 vuodelta, ja toinen aineistoryhmä, joka sisältää kuukausittaiset lämpötilatieot 10 vuodelta, voit yhdistää ne moniulotteiseksi rasteriksi, joka sisältää molemmat muuttujat. <div><br>Jos lähtöaineiston moniulotteiset rasterit sisältävät eri muuttujia, tulosaineiston moniulotteinen rasteri sisältää kaikki muuttujat. <div><br>Jos lähtöaineiston moniulotteiset rasterit sisältävät eri ulottuvuuksia tai ulottuvuusarvoja, tulosaineiston moniulotteinen rasteri sisältää kaikki ulottuvuudet ja ulottuvuusarvot. <div><br>Jos lähtöaineiston moniulotteiset rasterit sisältävät samat ulottuvuudet ja muuttujat, mutta eri alueellisia laajuuksia, tulosaineiston moniulotteinen rasteri sisältää muuttujat ja ulottuvuudet yhdistetyiltä alueellisilta laajuuksilta.<div><br>Tätä toimintoa voi käyttää myös silloin, kun käytettävissä on useita rastereita, jotka halutaan käsitellä yhtenä kohteena, esimerkiksi kun halutaan laskea sama tilasto kaikista tai värit halutaan tasapainottaa kerralla, ettei värejä tarvitse tasapainottaa jokaisessa kuvassa erikseen. Tästä on hyötyä työstettäessä kuva-aineistoa, joka on tallennettu erillisinä tiilinä tiedostokoon rajoitusten vuoksi. Tällöin karttatiilet käsitellään osana samaa kuvaa.",
		boundaryCleanName: "Rajan puhdistus",
		boundaryCleanSnip: "Tasoittaa vyöhykkeiden välisen rajan.",
		boundaryCleanDesc: "<p>Toiminto yleistää tai yksinkertaistaa rasterit tasoittamalla vyöhykkeiden välisiä rajoja. Toiminnon asetuksilla määritetään, miten vyöhykkeiden solujen määrä lähtöaineistossa vaikuttaa tasoitukseen ja käytettävän tasoituksen määrään. Kutakin lähtöaineiston solua arvioidaan sen kahdeksan naapurisolun avulla.</p><p>Tasoitusprosessi lajittelee ensin naapurisolut tietyn prioriteetin mukaisesti. Prioriteetti määrittää, mikä naapurisolujen vyöhyke voi korvata käsittelysolun arvon tulosaineistossa.</p><p>Prioriteetti voi perustua joko vyöhykkeiden arvoon tai vyöhykkeiden kokoon. <strong>Lajittelutyyppi</strong>-parametri määrittää käytettävän lajittelutyypin. </p><p>Oletusarvoinen <strong>Ei lajittelua</strong> -asetus arvioi prioriteetin vyöhykkeiden arvon perusteella. Suurempiarvoisten vyöhykkeiden solut ovat ensisijaisimpia laajentumaan vyöhykkeille, joilla on pienemmät arvot.</p><p>Kokoa tai kokonaisaluetta voidaan käyttää prioriteetin määrittämiseen. Kun valittuna on <strong>Laskeva</strong>-asetus, vyöhykkeet lajitellaan koon mukaan laskevaan järjestykseen. Vyöhykkeet, joilla on suuremmat kokonaisalueet, ovat ensisijaisimpia laajentumaan vyöhykkeille, joilla on pienemmät alueet. Kun valittuna on <strong>Nouseva</strong>-asetus, vastakkainen tilanne vallitsee: vyöhykkeet, joilla on pienemmät kokonaispinta-alat, ovat ensisijaisimpia laajenemaan vyöhykkeille, joilla on suuremmat kokonaispinta-alat.</p><p>Tasoituksen määrää hallitaan <strong>Suorita laajennus ja kutistus kahdesti</strong> -parametrilla, joka määrittää, kuinka monta kertaa laajennus- ja kutistusprosessi suoritetaan.</p><p>Jos tätä asetusta ei valita, laajennus- ja kutistusprosessi suoritetaan kerran. Jos tämä asetus valitaan, laajennus- ja kutistusprosessi suoritetaan kahdesti, mikä lisää vyöhykkeen rajojen tasoitusta.</p><p>Jos kaikkien kahdeksan naapurisolun arvot ovat samat kuin käsittelysolulla, tulosaineiston solu säilyttää lähtöaineiston solun arvon.</p>",
		predictUsingRegressionName: "Ennusta regression avulla",
		predictUsingRegressionSnip: "Laskee ennustetun rasterin rasteriaineiston lähtöaineistojen ja regressiomallin perusteella. Regressiomalli on tulos, joka saadaan <strong>Koulutuksen satunnaisten puiden regressiomalli</strong> -rasterigeoprosessointityökalusta.",
		predictUsingRegressionDesc: "<p>Regressiomalli on määritetty Esrin regressiomääritystiedostossa (.ecd). Se sisältää kaikki tiedot tietystä aineistoryhmästä tai aineistoryhmäjoukosta ja regressiomallista, ja se on luotu <strong>Koulutuksen satunnaisten puiden regressiomalli</strong> -rasterigeoprosessointityökalulla.</p><p>Lähtöaineisto voi olla yksikaistainen, monikaistainen tai moniulotteinen rasteri tai luettelo näistä tyypeistä. Lähtöaineistorastereiden tyyppien on oltava samaa regressiomallin kouluttamaa rasterityyppiä.</p><ul><li>Kun lähtöaineisto on monikaistainen rasteri, jokaista kaistaa käsitellään ennustemuuttujana. Kaistojen on oltava samassa järjestyksessä kuin regressiomallikoulutustyökalun monikaistainen lähtöaineisto.</li><li>Kun lähtöaineisto on moniulotteinen rasteri, jokaista muuttujaa käsitellään ennustemuuttujana ja muuttujan on oltava yksikaistainen ja sillä on oltava aikaulottuvuus. Muuttujan järjestyksen ja nimien on oltava samat kuin lähtöaineistolla silloin, kun regressiomallia koulutettiin. Tulosaineiston moniulotteinen rasteri.</li><li>Lähtöaineisto voi olla kohdeluettelo. Kohteiden lukumäärän ja järjestyksen on vastattava lähtöaineistoa silloin, kun regressiomallia koulutettiin.</li></ul>",
		dimensionalMovingStatisticsName: "Dimensionaaliset liikkuvat tilastotiedot",
		dimensionalMovingStatisticsSnip: "Laskee tilastotiedot liikkuvan ikkunan yli moniulotteisen aineiston määritellyn ulottuvuuden alueella.",
		dimensionalMovingStatisticsDesc: "<p>Ulottuvuuden liikkuvat tilastot -toiminto laskee useita tilastoja ennalta määritellyssä ikkunassa kaikille ulottuvuuden arvoille ulottuvuuden alueella. Tämä toiminto käyttää moniulotteista rasterikarttatasoa lähtöaineistona ja antaa tulokseksi moniulotteisen rasterikarttatason, jonka ulottuvuuksien koko vastaa lähtöaineiston karttatasoa.</p><p>Voit määrittää ulottuvuuden, jonka ulottuvuusarvot otetaan huomioon laskennan aikana. Oletusarvoisesti se tekee laskelman ensimmäisen muun kuin sijaintiin liittyvän ulottuvuuden mukaan. Voit myös määrittää ikkunan koon määrittämällä Taaksepäin-ikkuna- ja Eteenpäin-ikkuna-parametrit.</p><p>Kun tilastotyypiksi valitaan Prosenttipiste, Prosenttiarvo- ja Prosenttipisteen interpolointityyppi -parametrit ilmestyvät saataville. Näiden parametrien avulla voit määrittää laskettavan prosenttipisteen ja toisen avulla valita käytettävän interpolointityypin. Kun tilastotyypiksi valitaan Ympyrän keskiarvo, Ympyränmuotoinen rivitysarvo -parametri ilmestyy saataville. Ympyränmuotoinen rivitysarvo -parametria käytetään lineaarisen arvon muuntamiseen määrätyn ympyrän keskiarvon vaikutussäteeksi.</p>",
		terrainFlattenFunctionName: "Maaston litistys",
		terrainFlattenFunctionSnip: "Korjaa topografian aiheuttamia SAR (Synthetic Aperture Radar) -lähtöaineiston radiometrisiä vääristymiä.",
		terrainFlattenFunctionDesc: "<p>Maaston litistys -rasteritoiminto korjaa topografian aiheuttamia SAR (Synthetic Aperture Radar) -lähtöaineiston radiometrisiä vääristymiä.</p><p>Lähtöaineiston tutkatiedot on ensin kalibroitava beeta-nollaan. Käytä radiometrista kalibrointia kalibroidaksesi tutkatiedot beeta-nollaan.</p><p>Jos lähtöaineiston DEM ei ylitä koko SAR-aineistoryhmää, työkalu antaa tulosaineistona NoData-arvoja DEM-laajuuden ulkopuolella oleville pikseleille. Tämä koskee gamma-nollaa, sigma-nollaa, hajonta-aluetta ja geometriavääristymien tulosaineistoja. Työkalu antaa tulosaineistona geometriselle vääristymämaskille lähtöaineiston määrittämättömät pikseliarvot DEM-laajuuden ulkopuolella.</p><p>Lähtöaineiston DEM on oltava maantieteellisessä WGS 1984 (EPSG:4326) -koordinaatistossa.</p>",
		createColorCompositeFunctionName: "Luo väriyhdistelmä",
		createColorCompositeFunctionSnip: "Luo kolmikaistaisen rasterin monikaistaisen rasterin aineistoryhmästä, jossa jokainen kaista voi käyttää kaista-algebraan perustuvaa algebralaskelmaa.",
		createColorCompositeFunctionDesc: "<p>Luo väriyhdistelmä -rasteritoiminto luo kolmikaistaisen rasterin monikaistaisen rasterin aineistoryhmästä, jossa jokainen kaista voi käyttää kaista-algebraan perustuvaa algebralaskelmaa.</p><p>Kun kaistan aritmeettinen algoritmi määritetään, jokaiselle lausekkeelle voidaan luoda yksirivinen algebrakaava monikaistaisen tulosaineiston luontia varten. Tuetut operaattorit ovat yksioperandisia, plus (+), miinus (-), kertaa (*) ja jako (/).</p><p>Kun lausekkeessa käytetään kaistan tunnusta, aseta kaistaan tunnus lisäämällä kaistan numeroon etuliite B tai b.</p><p>Synthetic aperture radar (SAR) -tutkalle käytetään lineaarisissa yksiköissä yhteistä kaistayhdistelmää, joka on VV punaiselle, VH vihreälle ja VV/VH siniselle. Jos lähtoaineisto on desibeleinä, kaistayhdistelmän pitäisi olla VV punaiselle, VH vihreälle ja VV-VH siniselle.</p>",
		surfaceParametersName: "Pintaparametrit",
		surfaceParametersSnip: "Määrittää geodeettisten menetelmien avulla pintarasterin parametrit, kuten kaltevuussuunnan, kaltevuuden ja useita kaarevuuden tyyppejä.",
		surfaceParametersDesc: "<p>Pintaparametrit-toiminto määrittää geodeettisten menetelmien avulla pintarasterin parametrit, kuten kaltevuussuunnan, kaltevuuden ja useita kaarevuuden tyyppejä.</p><p>Tätä toimintoa voidaan käyttää seuraavissa sovelluksissa:</p><ul><li>Laske kaltevuussuunta ja kaltevuus geodeettisten menetelmien avulla.</li><li>Laske lähtöaineiston pintarasterista kaarevuuden eri tyyppejä, kuten <strong>tangentin suuntainen kaarevuus (normaali arvokäyrä)</strong>, joka kuvaa virtauksen topografista konvergointia ja divergensisa koko pinnalla.</li></ul>",
		leastCostCorridorName: "Pienimmän kustannuksen käytävä",
		leastCostCorridorSnip: "Laskee kahden kumulatiivisen kustannuksen etäisyysrasterin summan. Käyttöön voidaan ottaa prosenttiosuuteen tai kumulatiiviseen kustannukseen perustuva raja-arvo.",
		leastCostCorridorDesc: "<p>Lähtöaineiston rastereiden tulisi olla etäisyyskumulaatio- ja paluusuuntarastereiden tulosaineisto <strong>Etäisyyskumulaatio</strong>- tai <strong>Etäisyyden allokointi</strong> -funktiosta. Näiden tulisi perustua kustannusetäisyyteen ja samoja parametriasetuksia tulisi käyttää, kun kullekin lähteelle luodaan karttatasoja. Näiden rasterien luomisessa ei tulisi käyttää suuntaisuudesta (vaakasuora tekijä, pystysuora tekijä ja matkustussuunta) riippuvaisia parametreja.</p><p>Tulosaineiston käytävärasterissa olevat arvot ovat kumulatiivisen kustannuksen summa, jolla saavutetaan annettu sijainti käyttämällä samoja yksikköjä kuin lähtöaineiston kumulatiivisen kustannuksen etäisyysrasterit.</p><p>Jos määritetty <strong>Raja-arvo</strong>-arvo on suurempi kuin kumulatiivinen enimmäiskustannus, kun kaksi etäisyyskumulaation rasteria lasketaan yhteen, tulosaineiston käytävärasteri peittää saman alueen kuin lähtöaineiston kumulatiiviset rasterit.</p><p>Jos määritetty raja-arvo on pienempi kuin käytävärasterissa oleva vähimmäisarvo, palautetaan varoitusviesti, ja tulosaineiston rasteri on tyhjä.</p><p>Tulosaineiston käytävärasteri voi sisältää soluja, joissa on hieman raja-arvoa suuremmat kumulatiiviset kustannukset. Tämä on peräisin paluusuuntaisista rastereista, jotka käyttävät soluja, joille on määritetty raja-arvoa hieman korkeammat kustannukset sellaisten solujen yhdistämiseksi takaisin käytävään, joiden yhteys on katkaistu.</p>",
		geometricMedianName: "Geometrinen mediaani",
		geometricMedianSnip: "Geometrinen mediaanifunktio laskee geometrisen mediaaniarvon monikaistaisen kuva-aineiston aikasarjoissa olevista pikseleistä.",
		geometricMedianDesc: "<p>Tämä funktio vähentää kohinaa ja äärihavaintoja aikasarjakuva-aineistoissa laskemalla geometrisen mediaanipikselin jokaiselle kuvapinon pikselimatriisille. Algoritmi säilyttää kaistojen väliset spektrisuhteet pikselispektrissä, joten tulosaineistoa voidaan käyttää analyysissa, kuten kasvillisuusindekseissä.</p><p>Pilvet ja varjot tulisi maskata käyttämällä aineistoryhmän QA-kaistaa ennen tämän funktion käyttämistä.</p><p>Jos lähtöaineiston kuva on liukuluku, kuten pinnan heijastuvuus, jonka arvot ovat välillä 0 ja 1, epsilonarvon 0,001 pitäisi tuottaa laadukkaat tulokset.</p>"
	},
	rfxArgs: {
		rasterName: "Rasteri",
		colorSchemeTypeName: "Värimallin tyyppi",
		colormapName: "Värikartta",
		colormapNameName: "Värikartan nimi",
		colorRampName: "Väriliuku",
		contrastOffsetName: "Kontrastin siirtymä",
		brightnessOffsetName: "Kirkkauden siirtymä",
		methodName: "Metodi",
		bandNamesName: "Kaistan nimet",
		bandWavelengthsName: "Kaistan aallonpituudet",
		bandIdsName: "Kaistatunnukset",
		missingBandActionName: "Puuttuvan kaistan toiminto",
		conversionParametersName: "Muuntoparametrit",
		hillshadeTypeName: "Hillshade-tyyppi",
		azimuthName: "Kompassisuunta",
		altitudeName: "Korkeus",
		slopeTypeName: "Skaalaus",
		zFactorName: "Z-tekijä",
		PSPowerName: "Pikselikoon potenssi",
		PSZFactorName: "Pikselikoon kerroin",
		removeEdgeEffectName: "Poista oletusreunapikselin interpolointi käytöstä",
		fromUnitName: "Lähtöyksikkö",
		toUnitName: "Kohdeyksikkö",
		rasterTypeName: "Tyyppi",
		minName: "Tulosminimi",
		maxName: "Tulosmaksimi",
		minPercentName: "Prosenttiosuuden leikkauksen vähimmäisarvo",
		maxPercentName: "Prosenttiosuuden leikkauksen enimmäisarvo",
		numberOfStandardDeviationName: "Keskihajontojen määrä",
		sigmoidStrengthLevelName: "Sigmoidin vahvuustaso",
		estimateStatsHistogramName: "Arvioi tilastotiedot",
		DRAName: "Dynaamisen alueen säätö",
		statisticsName: "Tilastotiedot",
		histogramsName: "Histogrammit",
		statisticsHistogramName: "Määritä tilastotiedot ja histogrammi",
		computeGammaName: "Automaattinen gamma",
		useGammaName: "Käytä gammaa",
		gammaName: "Gamma",
		inputNamesName: "Nimet",
		expressionName: "Lauseke",
		cellsizeTypeName: "Solukoon tyyppi",
		extentTypeName: "Laajuustyyppi",
		classifierDefinitionFileName: "Lähtöaineiston määritystiedosto",
		raster1Name: "Raster1",
		raster2Name: "Raster2",
		raster3Name: "Raster3",
		trueRasterName: "Tosi rasteri",
		falseRasterName: "Epätosi rasteri",
		noDataInterpretationName: "NoData-tulkinta",
		noDataValuesName: "NoData-arvot",
		includedRangesName: "Sisällytetyt alueet",
		curvatureTypeName: "Kaarevuustyyppi",
		rastersName: "Rasterit",
		attributeTableName: "Taulu",
		attributeTableTypeName: "Taulutyyppi",
		rowsName: "Rivien määrä",
		columnsName: "Sarakkeiden määrä",
		kernelName: "Ydin",
		mirrorEdgesName: "Peilireunat",
		influencesName: "Vaikutukset",
		fieldsName: "Kentät",
		remapsName: "Täsmäytä taulu uudelleen",
		evalFromName: "Lähdearviointiasteikko",
		evalToName: "Kohdearviointiasteikko",
		weightsName: "Painoarvot",
		DEMName: "digitaalinen korkeusmalli (DEM)",
		shortRangeIDWRadiusName: "Lyhyen kantaman IDW-säde",
		maxVoidWidthName: "Aukon enimmäisleveys",
		sigmaGaussianName: "Mukautuva tasoitus",
		contourTypeName: "Arvokäyrän tyyppi",
		zBaseName: "Z-kanta",
		numberOfContoursName: "Arvokäyrien määrä",
		contourIntervalName: "Sama-arvokäyrän jakso",
		nthContourLineInBoldName: "N.:s käyräviiva lihavoituna",
		featureClassName: "Lähtöaineiston kohteet",
		classIndexFieldName: "Kenttä",
		resolveOverlapMethodName: "Päällekkäisyyden selvitysmenetelmä",
		resamplingTypeName: "Interpolointityyppi",
		inputCellsizeName: "Lähtöaineiston solukoko",
		outputCellsizeName: "Tulosaineiston solukoko",
		pointFeatureClassName: "Siemenpisteet",
		maxGrowthRadiusFieldName: "Suurimman kasvusäteen kenttä",
		similarityThresholdFieldName: "Samankaltaisuuden kynnysarvon kenttä",
		fillValueFieldName: "Täyttöarvokenttä",
		spectralDetailName: "Spektriyksityiskohta [1..20]",
		spatialDetailName: "Sijaintiyksityiskohta [1..20]",
		minNumPixelsPerSegmentName: "Segmentin vähimmäiskoko pikseleinä",
		boundariesOnlyName: "Segmentoi vain rajat",
		statisticsTypeName: "Tilastotyyppi",
		fillNoDataOnlyName: "Täytä vain NoData-pikselit",
		inputDataTypeName: "Lähtöaineiston tyyppi",
		angleReferenceSystemName: "Kulmakoord.järjestelmä",
		outputDataTypeName: "Tulosaineiston aineistotyyppi",
		inputSamplePointFeatureClassName: "Lähdeaineiston näytteet",
		valueFieldName: "Luokituskenttä",
		rasterInfoName: "Rasterin tiedot",
		interpolationMethodName: "Interpolointitapa",
		radiusName: "Säde",
		radianceGainValuesName: "Säteilyn kirkkauden vahvistus",
		radianceBiasValuesName: "Säteilyn kirkkauden vääristymä",
		reflectedGainValuesName: "Heijastusvahvistus",
		reflectedBiasValuesName: "Heijastusvääristymä",
		sunElevationName: "Auringon korkeuskulma (astetta)",
		albedoName: "Heijastuskyky",
		scaleFactorName: "Mittakaavakerroin",
		offsetName: "Siirtymä",
		thresholdTypeName: "Kynnystyyppi",
		thresholdsName: "Kynnykset",
		undefinedClassName: "Määrittämätön luokka",
		minValueName: "Vähimmäisarvo",
		maxValueName: "Enimmäisarvo",
		operationName: "Toiminto",
		clippingTypeName: "Leikkaustyyppi",
		clippingGeometryName: "Leikkausgeometria/-rasteri",
		extentName: "Tulosaineiston laajuus",
		useInputFeatureGeometryName: "Käytä lähtöaineiston kohteita geometrian leikkaamiseen",
		remapDefinitionTypeName: "Yhdistämismääritelmän tyyppi",
		inputRangeName: "Tuloaineiston alueet",
		outputValuesName: "Tulosarvot",
		noDataRangeName: "NoData-alueet",
		inputFieldName: "Lähtökenttä",
		outputFieldName: "Tulosaineiston kenttä",
		inputMaxFieldName: "Lähtöaineiston enimmäisarvon kenttä (valinnainen)",
		remapTableTypeName: "Yhdistämistaulun tyyppi",
		allowUnmatchedName: "Salli paikantamattomat pikseliarvot",
		changeMissingValuesToNoDataName: "Muuta puuttuvat arvot arvoon NoData",
		visibleBandIDName: "Näkyvän kaistan tunnus",
		infraredBandIDName: "Infrapunakaistan tunnus",
		scientificOutputName: "Tieteellinen tulos",
		bandIndexesName: "Kaistan indeksit",
		constantName: "Vakio",
		weightName: "Leveys:",
		minimumName: "Minimi",
		maximumName: "Maksimi",
		sourceDataName: "Lähderasteri",
		sourceFieldName: "Lähdekenttä",
		costRasterName: "Kustannusrasteri",
		maxDistanceName: "Enimmäisetäisyys",
		valueRasterName: "Arvorasteri",
		costMultiplierName: "Kustannuksiin käytettävä kerroin",
		startCostName: "Aloituskustannus",
		accumCostResistanceRateName: "Kumulatiivisen kustannuksen vastustustaso",
		capacityName: "Kapasiteetti",
		travelDirectionName: "Matkustussuunta",
		cellSizeName: "Solukoko",
		populationFieldName: "Populaatiokenttä",
		areaUnitsName: "Pinta-alayksiköt",
		outputValueTypeName: "Tulosaineiston soluarvot",
		barriersName: "Lähtöaineiston esteet",
		destinationDataName: "Määränpäärasteri",
		destinationFieldName: "Määränpääkenttä",
		pathTypeName: "Reitin tyyppi",
		observerFeaturesName: "Tarkkailijakohteet",
		analysisMethodName: "Analyysimenetelmä",
		analysisTypeName: "Analyysityyppi",
		verticalErrorName: "Pystysuuntainen virhe",
		refractivityCoefficientName: "Taitekerroin",
		surfaceOffsetName: "Pinnan siirtymä",
		observerElevationName: "Tarkkailijan korkeus",
		observerOffsetName: "Tarkkailijan siirtymä",
		innerRadiusName: "Sisäsäde",
		innerRadiusIs3DDistanceName: "Sisäsäde on 3D-etäisyys",
		outerRadiusName: "Ulkosäde",
		outerRadiusIs3DDistanceName: "Ulkosäde on 3D-etäisyys",
		horizontalStartAngleName: "Vaakasuuntainen alkukulma",
		horizontalEndAngleName: "Vaakasuuntainen loppukulma",
		verticalUpperAngleName: "Pystysuuntainen yläkulma",
		verticalLowerAngleName: "Pystysuuntainen alakulma",
		zoneDataName: "Vyöhykerasteri",
		zoneFieldName: "Vyöhykekenttä",
		ignoreNoDataName: "Ohita NoData-tiedot laskelmissa",
		temperatureRasterName: "Lämpötilan rasteri",
		inTemperatureUnitsName: "Lämpötilayksiköt",
		outHeatIndexTemperatureUnitsName: "Lämpöindeksin yksiköt",
		relativeHumidityRasterName: "Suhteellisen kosteuden rasteri",
		outWindChillTemperatureUnitsName: "Tuulen viilentävän vaikutuksen yksiköt",
		windSpeedRasterName: "Tuulennopeuden rasteri",
		inWindSpeedUnitsName: "Tuulennopeuden yksiköt",
		valueName: "Arvo",
		propertyName: "Ominaisuuden nimi",
		jsonName: "Metatietojen JSON",
		zoneTableName: "Vyöhykkeisten ominaisuustietojen taulukko",
		attributeFieldNames: "Ominaisuustietokenttien nimet",
		backgroundName: "Taustan arvo",
		whereClauseName: "Where-lause",
		minimumValueFieldName: "Vähimmäisarvokentän nimi",
		maximumValueFieldName: "Enimmäisarvokentän nimi",
		outValueFieldName: "Tulosaineistoarvokentän nimi",
		defaultValueName: "Tulosaineiston oletusarvo",
		conversionMatrixName: "Muuntomatriisi",
		IsPseudoColorOutputName: "On pseudo-tulostusväri",
		unmappedAsRandomColorName: "Määritä väri täsmäämättömille pikseleille satunnaisesti",
		distanceMethodName: "Etäisyysmenetelmä",
		flowDirRasterName: "Virtaussuuntarasteri",
		pourPointName: "Laskupisterasteri",
		pourPointFieldName: "Laskupistekenttä",
		constantZName: "Z-vakio",
		zOffsetName: "Z-siirtymä",
		geoIdName: "Geoidi",
		calibrationTypeName: "Kalibrointityyppi",
		filterTypeName: "Suodatintyyppi",
		filterSizeName: "Suodatinkoko",
		noiseModelName: "Kohinamalli",
		noiseVarianceName: "Kohinavarianssi",
		additiveNoiseMeanName: "Lisäkohinan keskiarvo",
		multiplicativeNoiseMeanName: "Kerrannaiskohinan keskiarvo",
		numberofLooksName: "Katselukertojen määrä",
		dampingFactorName: "Vaimennustekijä",
		maskRasterName: "Maskin rasteri",
		nibbleValuesName: "Käytä NoData-arvoja, jos ne ovat lähin naapuri",
		nibbleNoDataName: "Nibble NoData -solut",
		zLimitName: "Z-raja",
		flowDirectionTypeName: "Virtaussuunnan tyyppi",
		weightRasterName: "Painoarvorasteri",
		forceEdgeName: "Pakota kaikkien reunasolujen virtaus ulospäin",
		streamRasterName: "Virtautusrasteri",
		surfaceRasterName: "Pintarasteri",
		conversionType: "Muuntotyyppi",
		distanceRaster1: "Etäisyysrasteri 1",
		distanceRaster2: "Etäisyysrasteri 2",
		costDistanceRaster: "Kustannusetäisyysrasteri",
		costBacklinkRaster: "Kustannuspaluulinkin rasteri",
		overridesName: "Ohitukset",
		fieldName: "Kenttä",
		signatureFileOrUrl: "Allekirjoitustiedosto tai URL-osoite",
		redName: "Punainen",
		greenName: "Vihreä",
		blueName: "Sininen",
		infraredName: "Infrapuna",
		panchromaticName: "Pankromaattinen",
		multispectralName: "Monispektrinen",
		pansharpeningType: "Vieritystarkennuksen tyyppi",
		sensorName: "Anturi",
		spatialReferenceName: "Koordinaatistotieto",
		xCellsizeName: "X-solukoko",
		yCellsizeName: "Y-solukoko",
		xOriginName: "X-rekisteröintipiste",
		yOriginName: "Y-rekisteröintipiste",
		percentileName: "Prosenttiarvo",
		neighborhoodType: "Naapurin tyyppi",
		widthName: "Leveys",
		heightName: "Korkeus",
		startAngleName: "Alkukulma",
		endAngleName: "Loppukulma",
		neighborhoodValues: "Naapuriarvot",
		horizontalRaster: "Vaakasuuntainen rasteri",
		horizontalFactor: "Vaakasuora tekijä",
		verticalRaster: "Pystysuuntainen rasteri",
		verticalFactor: "Pystysuora tekijä",
		streamRaster: "Virtautusrasteri",
		flowDirRaster: "Virtaussuuntarasteri",
		numberNeighborCells: "Naapurisolujen määrä",
		zoneConnectivity: "Vyöhykkeen yhdistyvyys",
		addLinkBehavior: "Lisää linkki",
		excludedValue: "Poisjätetty arvo",
		constantFillCheck: "Luo täyttörasteri vakiosta",
		fillRaster: "Täyttörasteri",
		constantFillValue: "Vakioarvo",
		inputBitPositions: "Lähtöbitti",
		outputBitPositions: "Tulosbitti",
		distanceTypeName: "Etäisyyden tyyppi",
		barrierDataName: "Rasteriesteet",
		pourPointDataName: "Laskupisterasteri",
		accumulationRasterName: "Virtauskertymärasteri",
		snapDistanceName: "Kohdistusetäisyys",
		orderMethodName: "Järjestysmenetelmä",
		directionMeasurementName: "Mittaussuunta",
		processAsMultiband: "Käsittele monikaistaisena",
		processMultidimensional: "Käsittele moniulotteisena",
		forceFlowDirectionConvention: "Pakota virtaussuuntakäytäntö paluulinkin rasteria varten",
		initialAccumulation: "Alkuperäinen kertymä",
		maximumAccumulation: "Enimmäiskertymä",
		sourceLocationBands: "Luo lähderivi ja -sarake tulosaineiston lisäkaistoina",
		backDirectionBand: "Luo paluusuunta tulosaineiston lisäkaistana",
		numberOfCells: "Solujen määrä",
		zoneValues: "Vyöhykearvot",
		shrinkMethod: "Kutistusmenetelmä",
		expandMethod: "Laajennusmenetelmä",
		inputSpectralProfileType: "Spektriprofiilin tyyppi",
		spectralProfileFileName: "Spektriprofiili",
		trainingFeatureFileName: "Koulutuskohde",
		nonNegative: "Ei-negatiivinen",
		sumToOne: "Summa on yksi",
		randomDistribution: "Jakelu",
		meanName: "Keskiarvo",
		probabilityName: "Todennäköisyys",
		alphaName: "Alfa",
		betaName: "Beeta",
		rName: "r",
		nName: "Pohjoinen",
		seed: "Alkuarvo",
		randomNumberGenerator: "Satunnaisnumeron generaattori",
		cellFactor: "Solukerroin",
		aggregationType: "Koontitekniikka",
		extentHandling: "Laajenna laajuutta tarvittaessa",
		trendAnalysisDimensionName: "Dimension nimi",
		trendAnalysisType: "Trendin tyyppi",
		harmonicFrequency: "Harmoninen taajuus",
		polynomialOrder: "Polynomin asteluku",
		cycleLengthName: "Syklin pituus",
		trendAnalysisRMSE: "RMSE",
		trendAnalysisR2: "Neliöity R",
		trendAnalysisSlopePValue: "Kaltevuuskertoimen P-arvo",
		trendAnalysisSeasonalPeriod: "Vuodenaika",
		cycleUnitName: "Syklin yksikkö",
		predictDimensionValues: "Arvot",
		dimensionDefinitionType: "Dimension määritelmä",
		predictDimensionStart: "Aloita",
		predictDimensionEnd: "Loppu",
		predictDimensionInterval: "Arvoväli",
		dimensionUnit: "Yksikkö",
		interpolationCellsizeName: "Interpolaation solukoko",
		variableName: "Muuttujat",
		dimensionlessName: "Ilman dimensiota",
		mdimDefinition: "Dimension määritelmä",
		dimensionName: "Dimensio",
		iterationStart: "Ensimmäisen iteroinnin alkuosa",
		iterationEnd: "Ensimmäisen iteroinnin loppuosa",
		intervalStart: "Aikävälin alku",
		intervalEnd: "Aikavälin loppu",
		stepName: "Vaihe",
		rangesName: "Vaihteluvälit",
		minValue: "Vähimmäisarvo",
		maxValue: "Enimmäisarvo",
		changeAnalysisRasterName: "Muutosanalyysirasteri",
		changeTypeName: "Muuta tyyppiä",
		segmentDate: "Lohkon päivämäärä",
		changeDirectionName: "Vaihda suunta",
		maxNumChangesName: "Muutosten enimmäismäärä",
		filterByYear: "Suodata vuoden mukaan",
		minimumYear: "Vähimmäisarvo",
		maximumYear: "Enimmäisarvo",
		filterByDuration: "Suodata keston mukaan",
		minimumDuration: "Vähimmäiskesto",
		maximumDuration: "Enimmäiskesto",
		filterByMagnitude: "Suodata suuruuden mukaan",
		minimumMagnitude: "Vähimmäisuuruus",
		maximumMagnitude: "Enimmäissuuruus",
		filterByStartValue: "Suodata alkuarvon mukaan",
		minimumStartValue: "Pienin alkuarvo",
		maximumStartValue: "Suurin alkuarvo",
		filterByEndValue: "Suodata loppuarvon mukaan",
		minimumEndValue: "Pienin loppuarvo",
		maximumEndValue: "Suurin loppuarvo",
		modelTypeName: "Mallin tyyppi",
		fromRasterName: "Rasterista",
		toRasterName: "Rasteriksi",
		computeChangeMethod: "Laske muutosmenetelmä",
		fromClassValues: "Luokan arvoista (esimerkki: 2 5)",
		toClassValues: "Luokan arvoihin (esimerkki: 2 5)",
		keepMethod: "Suodatusmenetelmä",
		useColorMethod: "Määritä siirtymävärit",
		detectChangeBands: "Muutosten havaitsemiskaistat (aloitus 0)",
		tmaskBands: "Temporaalisen maskauksen kaistat (aloitus 0)",
		chiSquaredThreshold: "Khii-toiseen-kynnysarvo muutosten tunnistamiseen",
		minAnomaly: "Peräkkäisten poikkeamahavaintojen vähimmäismäärä",
		updatingFrequency: "Päivitetään sovituksen toistoväliä (vuosina)",
		distanceAccumulationRasterName: "Etäisyyskertymärasteri",
		costBackdirectionRasterName: "Paluusuunnan tai virtaussuunnan rasteri",
		rasterCollectionName: "Rasterikokoelma",
		itemFunctionName: "Kohteen toiminto",
		aggregationFunctionName: "Koontitoiminto",
		processingFunctionName: "Käsittelytoiminto",
		aggregationDefinitionName: "Koontimääritelmä",
		queryGeometryName: "Kyselygeometria",
		factorFunctionZeroFactor: "Nollatekijä",
		factorFunctionCutAngle: "Leikkaa kulma",
		factorFunctionSideFactor: "Sivutekijä",
		factorFunctionSlope: "Kaltevuus",
		factorFunctionLowCutAngle: "Matala leikkauskulma",
		factorFunctionHighCutAngle: "Korkea leikkauskulma",
		factorFunctionCosPower: "Kosinin potenssi",
		factorFunctionSecPower: "Sekantin potenssi",
		factorFunctionTablePath: "Taulun polku",
		processingBand: "Käsittelykaista",
		processingBandName: "Käsittelykaistan nimi",
		snappingDate: "Kuvauspäivä",
		maxNumSegments: "Lohkojen enimmäismäärä",
		vertexCountOvershoot: "Taitepisteiden määrän ohitus",
		spikeThreshold: "Spike-kynnys",
		recoveryThreshold: "Palautumiskynnys",
		minNumObs: "Tarkkailujen vähimmäismäärä",
		pValueThreshold: "P-arvon kynnysarvo",
		bestModelProportion: "Paras mallin suhde",
		preventOneYearRecovery: "Estä yhden vuoden palautuminen",
		recoveryIncreaseTrend: "Palautumisen trendi on nouseva",
		outputOtherBands: "Muiden kaistojen tulos",
		sortType: "Lajittelutyyppi",
		numberOfRuns: "Suorita laajennus ja kutistus kahdesti",
		percentileValue: "Prosenttiarvo",
		percentileInterpolationType: "Prosenttipisteen interpolaatiotyyppi",
		rasterInfoProperty: "Ominaisuus",
		rasterInfoValue: "Arvo",
		rasterInfoColumns: "Sarakkeet",
		rasterInfoRows: "Rivit",
		rasterInfoBandCount: "Kaistojen määrä",
		rasterInfoPixelSizeX: "Solukoko X",
		rasterInfoPixelSizeY: "Solukoko Y",
		rasterInfoPixelType: "Pikselityyppi",
		rasterExtentTop: "Yläosa",
		rasterExtentBottom: "Alaosa",
		rasterExtentLeft: "Vasen",
		rasterExtentRight: "Oikea",
		rasterStatisticsNotCalculated: "Tilastotietoja ei ole laskettu.",
		spatialReferenceProjection: "Projektio",
		spatialReferenceWkid: "WKID-tunnus",
		spatialReferenceLatestWkid: "Edellinen WKID-tunnus",
		spatialReferenceWkt: "WKT",
		spatialReferenceVcsWkid: "VCSWKID",
		spatialReferenceLatestVcsWkid: "Edellinen VCSWKID-tunnus",
		spatialReferenceAuthority: "Valtuutus",
		spatialReferenceLinearUnit: "Lineaarinen yksikkö",
		spatialReferenceAngularUnit: "Kulmayksikkö",
		spatialReferenceFalseEasting: "Valeitä",
		spatialReferenceFalseNorthing: "Valepohjoinen",
		spatialReferenceCentralMeridian: "Keskimeridiaani",
		spatialReferencePrimeMeridian: "Päämeridiaani",
		spatialReferenceStandardParallel1: "Vakioparalleeli 1",
		spatialReferenceStandardParallel2: "Vakioparalleeli 2",
		spatialReferenceLatitudeOfOrigin: "Alkuperäinen leveysaste",
		spatialReferenceAuxiliarySphereType: "Lisäpallon tyyppi",
		spatialReferenceDatum: "Datumi",
		spatialReferenceSpheroid: "Ellipsoidi",
		spatialReferenceSemimajorAxis: "Pääakseli",
		spatialReferenceSemiminorAxis: "Puoliakseli",
		spatialReferenceInverseFlattening: "Käänteinen litistyneisyys",
		inputDefinitionFileName: "Lähtöaineiston määritystiedosto",
		deleteName: "Poista",
		addVariableName: "Lisää muuttuja",
		maxNumPixelsPerSegment: "Segmentin enimmäiskoko pikseleinä",
		forwardWindowName: "Eteenpäin-ikkuna",
		backwardWindowName: "Taaksepäin-ikkuna",
		noDataHandlingName: "NoData-arvon käsittely",
		circularWrapValueName: "Ympyränmuotoinen rivitysarvo",
		fromClassNameFieldName: "Rasterista-kohdassa olevien luokkanimien kentän nimi",
		toClassNameFieldName: "Rasteriin-kohdassa olevien luokkanimien kentän nimi",
		targetRasterName: "Kohderasteri",
		circularWrapValue: "Ympyränmuotoinen rivitysarvo",
		bandIndexesR: "Punainen lauseke",
		bandIndexesG: "Vihreä lauseke",
		bandIndexesB: "Sininen lauseke",
		exampleName: "Esimerkki",
		inputName: "Lähtöaineisto",
		outputName: "Tulosaineisto",
		optionalName: "Valinnainen",
		browseDefinitionFile: "Selaa määritystiedostoa",
		selectDefinitionFile: "Valitse lähtöaineiston määritystiedosto",
		inputDefinitionURL: "Lähtöaineiston määritystiedoston URL",
		enterDefinitionFileURL: "Anna määritystiedoston URL",
		browseXMLFile: "Selaa XML-tiedostoa",
		selectStatsFile: "Valitse tilasto- ja histogrammitiedosto",
		enterXMLFileURL: "Anna XML-tiedoston URL",
		xmlFileURL: "XML-tiedosto URL",
		circularCalculation: "Laske ympyränmuotoiset tilastotiedot",
		localSurfaceType: "Paikallisen pinnan tyyppi",
		surfaceParameterType: "Parametrin tyyppi",
		neighborhoodDistance: "Etäisyys naapuriin",
		useAdaptiveNeighborhood: "Käytä mukautuvaa naapurustoa",
		outputSlopeType: "Kaltevuuden tulosmitta",
		projectAzimuths: "Projektin geodeettiset atsimuutit",
		useEquatorialAspect: "Käytä päiväntasaajan kaltevuussuuntaa",
		zUnit: "Z-yksikkö",
		analysisMask: "Analyysimaski",
		stdDeviation: "Keskihajonta",
		"true": "Tosi",
		"false": "Epätosi",
		costDistanceRaster1: "Lähtöaineiston kumulatiivisen kustannuksen etäisyysrasteri 1",
		costDistanceRaster2: "Lähtöaineiston kumulatiivisen kustannuksen etäisyysrasteri 2",
		threshold: "Raja-arvo",
		thresholdMethod: "Raja-arvomenetelmä",
		directionRaster1: "Lähtöaineiston paluusuuntarasteri 1",
		directionRaster2: "Lähtöaineiston paluusuuntarasteri 2",
		maxIterations: "Toistojen enimmäismäärä",
		epsilon: "Epsilon"
	},
	enumLabels: {
		attributeTableTypeManual: "Manuaalinen",
		attributeTableTypeExternal: "Ulkoinen",
		clrSchemeTypeColormap: "Värikartta",
		clrSchemeTypeColorRamp: "Väriliuku",
		colormapTypeElevation: "Korkeustaso",
		colormapTypeGray: "Harmaa",
		colormapTypeNDVI: "NDVI",
		colormapTypeNDVI2: "NDVI2",
		colormapTypeNDVI3: "NDVI3",
		colormapTypeRandom: "Satunnainen",
		none: "Ei mitään",
		slopeTypeAdjusted: "Säädetty",
		slopeTypeDegree: "Aste",
		slopeTypePercentRise: "Prosentuaalinen nousu",
		slopeTypeScaled: "Skaalattu",
		stretchTypeMinMax: "MinMax",
		stretchTypePercentMinMax: "PercentMinMax",
		stretchTypeSigmoid: "Sigmoid",
		stretchTypeStdDev: "Keskihajonta",
		hillshadeTypeSimple: "Perinteinen",
		hillshadeTypeMultidirectional: "Monisuuntainen",
		bandComboByNames: "Kaistan nimet",
		bandComboByWavelength: "Kaistan aallonpituudet",
		bandComboByIDs: "Kaistatunnukset",
		missingBandActionBestMatch: "Paras vastaavuus",
		missingBandActionFail: "Hylätty",
		unitTypeCelsius: "Celsius",
		unitTypeCentimeters: "Senttimetriä",
		unitTypeDecimeters: "Desimetriä",
		unitTypeFahrenheit: "Fahrenheit",
		unitTypeFeet: "Jalkaa",
		unitTypeFeetPerSec: "Jalkaa sekunnissa (ft/s)",
		unitTypeInches: "Tuumaa",
		unitTypeKelvin: "Kelvin",
		unitTypeKilometers: "Kilometriä",
		unitTypeKmsPerHour: "Kilometriä tunnissa (km/h)",
		unitTypeKnots: "Solmua (kn)",
		unitTypeMeters: "Metriä",
		unitTypeMetersPerSec: "Metriä sekunnissa (m/s)",
		unitTypeMiles: "Mailia",
		unitTypeMilesPerHour: "Mailia tunnissa (mph)",
		unitTypeMillimeters: "Millimetriä",
		unitTypeNauticalMiles: "Meripeninkulmat",
		unitTypeYards: "Jaardia",
		unitTypeDecimalDegrees: "Desimaaliasteet",
		unitTypePoints: "Pisteet",
		unitTypeUnknown: "Tuntematon",
		unitTypeSqMapUnits: "Neliökarttayksiköt",
		unitTypeSqMiles: "Neliömailia",
		unitTypeSqKms: "Neliökilometriä",
		unitTypeAcres: "Eekkeriä",
		unitTypeHectares: "Hehtaaria",
		unitTypeSqYards: "Neliöjaardia",
		unitTypeSqFt: "Neliöjalkaa",
		unitTypeSqInches: "Neliötuumaa",
		unitTypeSqMts: "Neliömetriä",
		unitTypeSqCms: "Neliösenttimetriä",
		unitTypeSqMms: "Neliömillimetriä",
		cellsizeTypeFirst: "Ensimmäinen:",
		cellsizeTypeMin: "Minimi:",
		cellsizeTypeMax: "Maksimi:",
		cellsizeTypeMean: "Keskiarvo:",
		cellsizeTypeLast: "Viimeinen:",
		extentTypeFirst: "Ensimmäinen:",
		extentTypeIntersection: "Leikkaus:",
		extentTypeUnion: "Liitos:",
		extentTypeLast: "Viimeinen:",
		noDataInterpretAny: "Täsmäytä mikä tahansa",
		noDataInterpretAll: "Täsmäytä kaikki",
		curvatureTypeStandard: "Standard",
		curvatureTypeProfile: "Profiili",
		curvatureTypePlanform: "Tasomuoto",
		filterTypeLineDetectionHorizontal: "Viivantunnistus, vaakasuora",
		filterTypeLineDetectionVertical: "Viivantunnistus, pystysuora",
		filterTypeLineDetectionLeftDiagonal: "Viivantunnistus, vasen vino",
		filterTypeLineDetectionRightDiagonal: "Viivantunnistus, oikea vino",
		filterTypeGradientNorth: "Liukuväri, pohjoinen",
		filterTypeGradientWest: "Liukuväri, länsi",
		filterTypeGradientEast: "Liukuväri, itä",
		filterTypeGradientSouth: "Liukuväri, etelä",
		filterTypeGradientNorthEast: "Liukuväri, koillinen",
		filterTypeGradientNorthWest: "Liukuväri, luode",
		filterTypeSmoothArithmeticMean: "Pehmeä aritmeettinen keskiarvo",
		filterTypeSmoothing3x3: "Tasoitus 3 x 3",
		filterTypeSmoothing5x5: "Tasoitus 5 x 5",
		filterTypeSharpening3x3: "Terävöinti 3 x 3",
		filterTypeSharpening5x5: "Terävöinti 5 x 5",
		filterTypeLaplacian3x3: "Laplace 3 x 3",
		filterTypeLaplacian5x5: "Laplace 5 x 5",
		filterTypeSobelHorizontal: "Vaakasuora sobel",
		filterTypeSobelVertical: "Pystysuora sobel",
		filterTypeSharpen: "Terävöitä",
		filterTypeSharpen2: "Terävöitä lisää",
		filterTypePointSpread: "Pisteen levitys",
		userDefined: "Käyttäjän määrittämä",
		ContourTypeLines: "Arvokäyrän viivat",
		ContourTypeFill: "Arvokäyrän täyttö",
		ContourTypeSmoothOnly: "Vain tasainen pinta",
		rasterizeFirst: "Ensimmäinen",
		rasterizeLast: "Viimeinen",
		rasterizeSmallest: "Pienin",
		rasterizeLargest: "Suurin",
		resamplingTypeNearest: "Lähin naapuri",
		resamplingTypeBilinear: "Bilineaarinen interpolointi",
		resamplingTypeCubic: "Kuutiollinen konvoluutio",
		resamplingTypeMajority: "Enemmistö",
		resamplingTypeBilinearPlus: "Kuutiollinen konvoluutio (Plus)",
		resamplingTypeGauss: "Gauss-sumennus",
		resamplingTypeGaussPlus: "Gauss-sumennus (Plus)",
		resamplingTypeAverage: "Keskiarvo",
		resamplingTypeMinimum: "Minimi",
		resamplingTypeMaximum: "Maksimi",
		resamplingTypeVectorAvg: "Vektorin keskiarvo",
		minimum: "Minimi",
		maximum: "Maksimi",
		mean: "Keskiarvo",
		stdDeviation: "Keskihajonta",
		uvMagDirTypeUV: "U-V",
		uvMagDirTypeMagDir: "Magnitudi-suunta",
		unknown: "Tuntematon",
		angleRefSysGeographic: "Maantieteellinen",
		angleRefSysArithmetic: "Aritmeettinen",
		interpolateIrregularDataNearest: "Lähin naapuri",
		interpolateIrregularDataBilinear: "Bilineaarinen",
		interpolateIrregularDataTinningLinear: "Lineaarinen tinning",
		interpolateIrregularDataTinningNaturalNeighbor: "Luonnollinen naapuri",
		interpolateIrregularDataTinningIDW: "Käänteinen painotettu etäisyys",
		esriRasterThresholdTypeConstant: "Vakio",
		esriRasterThresholdTypeOtsu: "Otsu",
		esriRasterThresholdTypeTsai: "Tsai",
		esriRasterThresholdTypeKapur: "Kapur",
		esriRasterThresholdTypeKittler: "Kittler",
		esriRasterThresholdTypeRosin: "Rosin",
		argStatsTypeMax: "Arg-maksimi",
		argStatsTypeMin: "Arg-minimi",
		argStatsTypeMedian: "Arg-mediaani",
		argStatsTypeDuration: "Kesto",
		arithmeticOpPlus: "Plus",
		arithmeticOpMinus: "Miinus",
		arithmeticOpMultiply: "Kertolasku",
		arithmeticOpDivide: "Jakolasku",
		arithmeticOpPower: "Potenssi",
		arithmeticOpMode: "Tila",
		clipTypeOutside: "Leikkaa ulkopuolelta",
		clipTypeInside: "Leikkaa sisältä",
		yes: "Kyllä",
		no: "Ei",
		densities: "Tiheydet",
		expectedCounts: "Odotetut määrät",
		planar: "Planaarinen",
		geodesic: "Geodeettinen",
		eachCell: "Jokainen solu",
		eachZone: "Jokainen alue",
		bestSingle: "Paras yksittäinen",
		allSightlines: "Kaikki tähtäysviivat",
		perimeterSightlines: "Ympäryksen tähtäysviivat",
		frequency: "Toistoväli",
		observers: "Tarkkailijat",
		majority: "Enemmistö",
		median: "Mediaani",
		minority: "Vähemmistö",
		percentile: "Prosenttipiste",
		range: "Vaihteluväli",
		sum: "Summa",
		variety: "Varisto",
		ndvi: "NDVI",
		savi: "SAVI",
		bandArithmeticMethodTSAVI: "Muunnettu SAVI",
		bandArithmeticMethodMSAVI: "Muokattu SAVI",
		bandArithmeticMethodSultan: "Sultanin kaava",
		gemi: "GEMI",
		pvi: "PVI",
		gvi: "GVI (Landsat TM)",
		vari: "VARI",
		sr: "SR",
		gndvi: "GNDVI",
		ndvire: "NDVIre",
		srre: "SRre",
		mtvi2: "MTVI2",
		rtviCore: "RTVICore",
		cire: "CIre",
		cig: "CIg",
		ndwi: "NDWI",
		evi: "EVI",
		ironOxide: "Rautaoksidi",
		ferrousMinerals: "Rautapitoiset mineraalit",
		clayMinerals: "Savimineraalit",
		wndwi: "WNDWI",
		bai: "BAI",
		mndwi: "MNDWI",
		nbr: "NBR",
		ndbi: "NDBI",
		ndmi: "NDMI",
		ndsi: "NDSI",
		localSquareRoot: "Neliöjuuri",
		localACos: "ACos",
		localASin: "ASin",
		localATan: "ATan",
		localATanH: "ATanH",
		localAbs: "Abs.",
		localBitwiseNot: "Bittitaso - ei",
		localBooleanNot: "Totuusarvo - ei",
		localCos: "Cos",
		localCosH: "CosH",
		localExp: "Exp",
		localExp10: "Exp10",
		localExp2: "Exp2",
		localInt: "Int",
		localIsNull: "On tyhjäarvo",
		localFloat: "Float",
		localLn: "Ln",
		localLog10: "Log10",
		localLog2: "Log2",
		localNegate: "Negaatio",
		localRoundDown: "Pyöristä alaspäin",
		localRoundUp: "Pyöristä ylös",
		localSin: "Sini",
		localSinH: "SinH",
		localTan: "Tan",
		localTanH: "TanH",
		localACosH: "ACosH",
		localASinH: "ASinH",
		localPlus: "Plus",
		localMinus: "Miinus",
		localTimes: "Kertaa",
		localPower: "Potenssi",
		localBitwiseAnd: "Bittitason AND",
		localBitwiseLeftShift: "Bittitason siirto vasemmalle",
		localBitwiseOr: "Bittitason OR",
		localBitwiseRightShift: "Bittitason siirto oikealle",
		localBitwiseXor: "Bittitason  XOR",
		localBooleanAnd: "Looginen AND",
		localBooleanOr: "Looginen OR",
		localBooleanXor: "Looginen XOR",
		localDivide: "Jakolasku",
		localEqualTo: "Yhtä suuri kuin",
		localGreaterThan: "Suurempi kuin",
		localGreaterThanEqual: "Suurempi tai yhtä suuri kuin",
		localLessThan: "Pienempi kuin",
		localLessThanEqual: "Pienempi tai yhtä suuri kuin",
		localMod: "Jakojäännös",
		localNotEqual: "Ei yhtä suuri",
		localATan2: "ATan2",
		localSquare: "Neliö",
		localSetNull: "Aseta tyhjäarvo",
		remapDefTypeList: "Luettelo",
		remapDefTypeTable: "Taulu",
		remapTableTypeSimple: "Yksinkertainen",
		remapTableTypeDynamic: "Dynaaminen",
		remapTableTypeReassignment: "Määritä uudelleen",
		geomCorrectionByConstZ: "Käytä Z-vakiota",
		geomCorrectionByDEM: "Käytä DEM-tiedostoa",
		radarCalibBetaNought: "Beeta-nolla",
		radarCalibSigmaNought: "Sigma-nolla",
		radarCalibGammaNought: "Gamma-nolla",
		speckleFilterTypeLee: "Lee-suodatin",
		speckleFilterTypeEnhancedLee: "Tehostettu Lee-suodatin",
		speckleFilterTypeFrost: "Frost-suodatin",
		speckleFilterTypeKuan: "Kuan-suodatin",
		speckleNoiseModelMul: "Kerrannaiskohina",
		speckleNoiseModelAdd: "Lisäkohina",
		speckleNoiseModelAddnMul: "Lisä- ja kerrannaiskohina",
		mosaicOpTypeFirst: "Ensimmäinen",
		mosaicOpTypeLast: "Viimeinen",
		mosaicOpTypeMin: "Vähimmäisarvo",
		mosaicOpTypeMax: "Enimmäisarvo",
		mosaicOpTypeMean: "Keskiarvo",
		mosaicOpTypeBlend: "Sekoita",
		mosaicOpTypeSum: "Summa",
		integer: "Kokonaisluku",
		rfxD8: "D8",
		rfxMFD: "MFD",
		dinf: "Dinf",
		vertical: "Pysty",
		horizontal: "Vaaka",
		localCellStatisticsMajority: "Enemmistö",
		localCellStatisticsMax: "Maksimi",
		localCellStatisticsMean: "Keskiarvo",
		localCellStatisticsMedian: "Mediaani",
		localCellStatisticsMin: "Minimi",
		localCellStatisticsMinority: "Vähemmistö",
		localCellStatisticsRange: "Vaihteluväli",
		localCellStatisticsStdDev: "Keskihajonta",
		localCellStatisticsSum: "Summa",
		localCellStatisticsVariety: "Diversiteetti",
		localCellStatisticsMajorityIgnoreND: "Enemmistö (ohita NoData)",
		localCellStatisticsMaxIgnoreND: "Enimmäisarvo (ohita NoData)",
		localCellStatisticsMeanIgnoreND: "Keskiarvo (ohita NoData)",
		localCellStatisticsMedianIgnoreND: "Mediaani (ohita NoData)",
		localCellStatisticsMinIgnoreND: "Vähimmäisarvo (ohita NoData)",
		localCellStatisticsMinorityIgnoreND: "Vähemmistö (ohita NoData)",
		localCellStatisticsRangeIgnoreND: "Arvojoukko (ohita NoData)",
		localCellStatisticsStdDevIgnoreND: "Keskihajonta (ohita NoData)",
		localCellStatisticsSumIgnoreND: "Summa (ohita NoData)",
		localCellStatisticsVarietyIgnoreND: "Diversiteetti (ohita NoData)",
		localCellStatisticsTypePercentileIgnoreND: "Prosenttipiste (ohita NoData-arvo)",
		fromSource: "Lähteestä",
		toSource: "Lähteeseen",
		colorspaceConversionRgbToHsv: "RGB-HSV",
		colorspaceConversionHsvToRgb: "HSV-RGB",
		pansharpenTypeIHS: "IHS",
		pansharpenTypeBrovey: "Brovey",
		pansharpenTypeEsri: "Esri",
		pansharpenTypeMean: "Keskiarvo",
		pansharpenTypeGramSchmidt: "Gram-Schmidt",
		rectangleNeighborhood: "Rajaus",
		circleNeighborhood: "Ympyrä",
		annulusNeighborhood: "Rengas",
		wedgeNeighborhood: "Keila",
		irregularNeighborhood: "Epäsäännöllisesti",
		weightNeighborhood: "Leveys:",
		four: "Neljä",
		eight: "Kahdeksan",
		within: "Kohteessa",
		cross: "Risti",
		addLink: "Lisää linkki",
		noLink: "Ei linkkiä",
		weightedMean: "Painotettu keskietäisyys",
		ls8QCBitPatternCirrus: "Landsat 8 - untuvapilvi",
		ls8QCBitPatternCloud: "Landsat 8 - pilvi",
		ls8QCBitPatternCloudShadow: "Landsat 8 - pilvien varjo",
		ls8QCBitPatternDesignatedFill: "Landsat 8 - määritetty täyttö",
		ls8QCBitPatternDroppedFrame: "Landsat 8 - puuttuva kehys",
		ls8QCBitPatternSnowIce: "Landsat 8 - lumi/jää",
		ls8QCBitPatternTerrainOcclusion: "Landsat 8 - maaston katvealue",
		ls8QCBitPatternVegetation: "Landsat 8 - kasvillisuus",
		ls8QCBitPatternWater: "Landsat 8 - vesialue",
		downStream: "Myötäsuunta",
		upStream: "Vastasuunta",
		strahler: "STRAHLER",
		shreve: "SHREVE",
		currentSlice: "Nykyinen viipale",
		allSlices: "Kaikki viipaleet",
		expandDistance: "ETÄISYYS",
		expandMorphological: "MORFOLOGINEN",
		spectralProfileFile: "Spektriprofiili",
		trainingFeatureFile: "Koulutuskohde",
		randomDistributionTypeUniform: "Yhtenäinen",
		randomDistributionTypeUniformInteger: "Kokonaisluku",
		randomDistributionTypeNormal: "Normaali",
		randomDistributionTypeExponential: "Eksponentti",
		randomDistributionTypePoisson: "Poisson",
		randomDistributionTypeGamma: "Gamma",
		randomDistributionTypeBinomial: "Binomi",
		randomDistributionTypeGeometric: "Geometrinen",
		randomDistributionTypeNegativeBinomial: "Negatiivinen binomi",
		randomGeneratorTypeStandardCRand: "Standard C -randi",
		randomGeneratorTypeAlgorithmACM599: "ACM-kerätty algoritmi 599",
		randomGeneratorTypeMersenneTwister: "Mersenne Twister",
		sumName: "Summa",
		medainName: "Mediaani",
		trendLinear: "Lineaarinen",
		trendHarmonic: "Harmoninen",
		trendPolynomial: "Polynominen",
		trendMannKendall: "Mann-Kendall",
		trendSeasonalKendall: "Vuodenaika-Kendall",
		dimensionByValue: "Arvon mukaan",
		dimensionByInterval: "Välin mukaan",
		mdimDefTypeAll: "Kaikki",
		mdimDefTypeByValues: "Arvojen mukaan",
		mdimDefTypeByRanges: "Alueiden mukaan",
		mdimDefTypeByIteration: "Iteroinnin mukaan",
		mdimDefTypeByInterval: "Välin mukaan",
		mdimDefTypeByTargetRaster: "Kohderasterin mukaan",
		esriTimeUnitsHours: "Tuntia",
		esriTimeUnitsDays: "Päivää",
		esriTimeUnitsWeeks: "Viikkoa",
		esriTimeUnitsMonths: "Kuukautta",
		esriTimeUnitsYears: "Vuotta",
		esriTimeIntervalKeywordHourly: "Tunneittain",
		esriTimeIntervalKeywordDaily: "Päivittäin",
		esriTimeIntervalKeywordWeekly: "Viikoittain",
		esriTimeIntervalKeywordDekadly: "Vuosikymmenittäin",
		esriTimeIntervalKeywordPentadly: "Viisivuosittain",
		esriTimeIntervalKeywordMonthly: "Kuukausittain",
		esriTimeIntervalKeywordQuarterly: "Neljännesvuosittain",
		esriTimeIntervalKeywordYearly: "Vuosittain",
		esriTimeIntervalKeywordRecurringDaily: "Toistuu päivittäin",
		esriTimeIntervalKeywordRecurringWeekly: "Toistuu viikoittain",
		esriTimeIntervalKeywordRecurringMonthly: "Toistuu kuukausittain",
		esriTimeIntervalKeywordRecurringQuarterly: "Toistuu neljännesvuosittain",
		aggDefTypeAll: "Kaikki",
		aggDefTypeIntervalKeyword: "Arvovälin avainsana",
		aggDefTypeIntervalValue: "Arvovälin arvo",
		aggDefTypeIntervalRanges: "Arvovälin arvoalueet",
		latestChange: "Viimeisimmän muutoksen aika",
		earliestChange: "Aikaisimman muutoksen aika",
		largestChange: "Suurimman muutoksen aika",
		numberOfChanges: "Muutosten määrä",
		longestChange: "Pisimmän muutoksen aika",
		shortestChange: "Lyhimmän muutoksen aika",
		fastestChange: "Nopeimman muutoksen aika",
		slowestChange: "Hitaimman muutoksen aika",
		allChanges: "Kaikki",
		increaseChanges: "Lisää",
		decreaseChanges: "Pienennä",
		segmentBeginning: "Lohkon alku",
		segmentEnd: "Lohkon loppu",
		esriComputeChangeMethodDifference: "Ero",
		esriComputeChangeMethodRelativeDifference: "Suhteellinen ero",
		esriComputeChangeMethodCategorical: "Kategorinen ero",
		esriComputeChangeMethodMultispectralEuclideanDistance: "Spektrinen euklidinen etäisyys",
		esriComputeChangeMethodMultispectralAngularDifference: "Spektrisen kulman ero",
		esriComputeChangeMethodMultispectralAxisWithBiggestChange: "Kaista, jossa suurin muutos",
		esriComputeChangeKeepAll: "Säilytä kaikki",
		esriComputeChangeKeepChangedOnly: "Säilytä vain muuttuneet pikselit",
		esriComputeChangeKeepUnchangedOnly: "Säilytä vain muuttumattomat pikselit",
		esriComputeChangeUseColorAverage: "Värivälin keskiarvo",
		esriComputeChangeUseColorFrom: "Käytä väreistä",
		esriComputeChangeUseColorTo: "Käytä väreihin",
		factorFunctionBinary: "Binaarinen",
		factorFunctionForward: "Eteenpäin",
		factorFunctionLinear: "Lineaarinen",
		factorFunctionInvLinear: "Käänteinen lineaarinen",
		factorFunctionTable: "Taulu",
		factorFunctionSymLinear: "Symmetrinen lineaarinen",
		factorFunctionSymInvLinear: "Symmetrinen käänteinen lineaarinen",
		factorFunctionCos: "Kosini",
		factorFunctionSec: "Sekantti",
		factorFunctionCosSec: "Kosinin sekantti",
		factorFunctionSecCos: "Sekantin kosini",
		noSort: "Ei lajittelua",
		ascend: "Nouseva",
		descend: "Laskeva",
		autoDetect: "Tunnista automaattisesti",
		nearest: "Lähin",
		linear: "Lineaarinen",
		esriMonthJanuary: "Tammikuu",
		esriMonthFebruary: "Helmikuu",
		esriMonthMarch: "Maaliskuu",
		esriMonthApril: "Huhtikuu",
		esriMonthMay: "Touko",
		esriMonthJune: "Kesäkuu",
		esriMonthJuly: "Heinäkuu",
		esriMonthAugust: "Elokuu",
		esriMonthSeptember: "Syyskuu",
		esriMonthOctober: "Lokakuu",
		esriMonthNovember: "Marraskuu",
		esriMonthDecember: "Joulukuu",
		dimensionalMovingIgnoreNoData: "Aineisto",
		dimensionalMovingPropagateNoData: "NoData-arvo",
		dimensionalMovingFillOnlyNoData: "Täytä NoData-arvot",
		circularMean: "Ympyränmuotoinen keskiarvo",
		circularName: "Ympyränmuotoinen",
		arithmeticName: "Aritmeettinen",
		slopeName: "Kaltevuus",
		aspectName: "Ulottuvuus",
		meanCurvature: "Mediaanikaarevuus",
		profileCurvature: "Profiilin (normaali kaltevuusviiva) kaarevuus",
		tangentialCurvature: "Tangentin suuntainen kaarevuus (normaali arvokäyrä)",
		planCurvature: "Suunniteltu (ennakoitu arvokäyrä) kaarevuus",
		contourGeodesicTorsion: "Arvokäyrän geodeettinen kierto",
		gaussianCurvature: "Gaussin kaarevuus",
		casoratiCurvature: "Casoratin kaarevuus",
		localSurfaceTypeQuadratic: "Kvadraatti",
		localSurfaceTypeBiquadratic: "Bikvadraatti",
		thresholdNoThreshold: "Ei raja-arvoa",
		thresholdPercentLeastCost: "Pienimmän kustannuksen prosenttiosuus",
		thresholdAccumulativeCost: "Kumulatiivinen kustannus",
		clrmapTypeHillshade: "Vinovalo"
	},
	categoryLabels: {
		sourceCharacteristics: "Lähteen ominaisuudet",
		neighborhoodSettings: "Naapuriasetukset",
		statistics: "Tilastotiedot",
		gamma: "Gamma",
		viewshedParameters: "Näkymäalueen parametrit",
		observerParameters: "Tarkkailijan parametrit",
		irregularDataInterpolation: "Epäsäännöllisen aineiston interpolointi",
		modelStatistics: "Mallin tilastotiedot",
		aggregationDef: "Koontimääritelmä",
		filterByAttributes: "Suodata ominaisuustietojen perusteella",
		percentileName: "Prosenttipiste",
		rasterInfo: "Rasterin tiedot",
		extent: "Laajuus",
		spatialReference: "Koordinaatistotieto"
	},
	outputRasterHelpTexts: {
		outputName: "<p>Karttaan luotavan ja lisättävän karttatason nimi.</p>",
		resultType: "<p>Luotavan tulosaineiston tyyppi. Tulosaineistot voivat olla tiilitettyjä kuva-aineistokarttatasoja tai dynaamisia kuvakarttatasoja.</p>",
		saveResultIn: "<p>Nimi <b>Oma sisältö</b> -kansiossa, jonne tulos tallennetaan.</p>"
	},
	analysisEnvironmentsHelpTexts: {
		description: "<p>Analyysin ympäristöasetukset Map Viewerissa. </p>",
		outSR: "<p>Määrittää analyysin koordinaattijärjestelmän ja tuloskarttatason.</p>",
		extent: "<p>Määrittää analyysissä käytettävän alueen.</p>",
		snapRaster: "<p>Säätää tulosaineiston laajuutta, jotta se vastaa määritetyn kohdistusrasteritason solujen kohdistusta.</p>",
		cellSize: "<p>Määrittää solukoon tai tarkkuuden, jota käytetään analyysiin ja tulosaineiston rasteritason luontiin.</p>",
		mask: "<p>Määrittää maskitason, jossa vain maskitasolla olevia soluja käytetään analyysiin.</p>",
		resamplingMethod: "<p>Määrittää, miten pikseliarvoja interpoloidaan, kun lähtö- ja tulosaineistorasterit eivät ole linjassa.</p>"
	},
	mainGenStrings: {
		unsupportedDataType: "Tyyppiä ei tueta",
		currentlyUnsupported: " Tyypin oletuseditori ${missingType} odottaa valmistumista ja saapuu pian. Tilapäinen paikkamerkin tekstiruutu merkkijonoon perustuvien lähtöaineistojen määrittämiseen.",
		unsupportedOverrideWarning: "Ohituseditorin komponentti odottaa valmistumista ja saapuu pian, ja se mahdollistaa paremman käyttökokemuksen seuraavia parametreja käytettäessä:",
		overrideWidgetMissing: "Ohituseditorin komponentti puuttuu.",
		uiIncomplete: "Työn lähetys epäonnistui. Toimintoa ei voi suorittaa, koska jotkin pakollisista kentistä eivät ole yhteensopivia tai ne puuttuvat käyttöliitymästä.",
		count: "Määrä",
		selectVariables: "Valitse muuttujat",
		selectFeature: "Valitse kohdekarttataso",
		greaterThanErrorMessage: "Lähtöaineiston numeron on oltava suurempi kuin ${min}",
		lesserThanErrorMessage: "Lähtöaineiston numeron on oltava pienempi kuin ${max}",
		greaterThanOrEqualErrorMessage: "Lähtöaineiston numeron on oltava suurempi tai yhtä suuri kuin ${min}",
		lesserThanOrEqualErrorMessage: "Lähtöaineiston numeron on oltava pienempi tai yhtä suuri kuin ${max}",
		allowScalar: "Valitse karttataso tai anna vakio",
		selectField: "Valitse kenttä",
		parameterRequired: "Tämä parametri on pakollinen.",
		enterAValue: "Anna arvo...",
		invalidInput: "Annettu arvo ei kelpaa.",
		itemNotFound: "Kohdetta ei ole, tai se ei ole käytettävissä.",
		itemPermissionDenied: "Sinulla ei ole tämän kohteen käyttöoikeuksia.",
		layerNotAvailable: "Karttatason ${layerName} lataaminen epäonnistui.",
		multipleLayersNotAvailable: "Karttatason ${layerName} ja muiden lataaminen epäonnistui.",
		learnMoreLabel: "Lisätietoja",
		fieldNotAvailable: "Kentän lataus epäonnistui.",
		allowAnalysis: "Analyysi ei ole sallittu kuvapalvelussa.",
		allowAnalysisReason: "Vähintään yhtä karttatasoa ei ole lueteltu tässä, koska ne eivät salli analyysia.",
		learnMoreText: "Lisätietoja",
		atLeastOneRasterInput: "Vähintään yhden lähtöaineiston karttatason on oltava rasterikarttataso.",
		browseAnalysisLayers: "Selaa karttatasoja",
		activeMapViewExtent: "Käytä nykyisen kartan laajuutta",
		chooseRaster: "Valitse leikkausrasteri",
		chooseGeometry: "Valitse leikkausgeometria",
		resultType: "Tulostyyppi",
		saveInFolder: "Tallenna kansioon",
		outputName: "Tulosaineiston nimi",
		outputLayerType: "Tuloskarttatason tyyppi",
		dynamicImageryLayer: "Dynaaminen kuvakarttataso",
		tiledImageryLayer: "Tiilitetty kuva-aineistokarttataso",
		custom: "Mukautettu",
		loading: "Ladataan...",
		layerMissing: "Vähintään yhtä karttatasoa ei ole lueteltu tässä, koska ne eivät salli analyysia. Lue lisää.",
		browseCoordinateSystems: "Selaa koordinaattijärjestelmiä",
		unableToRepopulateOutSR: "Tulosaineiston koordinaattijärjestelmää ei voi täyttää.",
		defaultTitle: "Näytä enemmän",
		"ARC (equal arc-second)": "ARC (yhtä suuri kaarisekunti)",
		Africa: "Afrikka",
		Antarctica: "Etelämanner",
		Argentina: "Argentiina",
		Asia: "Aasia",
		"Asteroid Belt": "Asteroidivyöhyke",
		"Atlantic Ocean": "Atlantin valtameri",
		Australia: "Australia",
		"Australia and New Zealand": "Australia ja Uusi-Seelanti",
		Austria: "Austria",
		"BLM (US Feet)": "BLM (US-jalkaa)",
		Bangladesh: "Bangladesh",
		"Beijing 1954": "Peking 1954",
		Bhutan: "Bhutan",
		CGCS2000: "CGCS2000",
		Canada: "Kanada",
		Caribbean: "Karibia",
		"Caribbean Sea": "Karibianmeri",
		"Central America": "Keski-Amerikka",
		"Central and North America": "Keski- ja Pohjois-Amerikka",
		Colombia: "Kolumbia",
		Continental: "Mannermainen",
		"County Systems": "Maakuntajärjestelmät",
		"Democratic Republic of the Congo": "Kongon demokraattinen tasavalta",
		"EPSG Arctic": "EPSG Arktinen",
		Earth: "Maa",
		"Ellipsoidal-based": "Ellipsoidiin perustuva",
		Europe: "Eurooppa",
		Finland: "Suomi",
		France: "France",
		"GSK 2011": "GSK 2011",
		"Gauss Kruger": "Gauss Kruger",
		"Geographic Coordinate Systems": "Maantieteelliset koordinaatistot",
		Germany: "Germany",
		"Gravity-related": "Painovoimasidonnainen",
		"Greenwich-based": "Greenwichiin perustuva",
		"Highways England": "Highways England",
		Illinois: "Illinois",
		"Indian Ocean": "Intian valtameri",
		"Indian Subcontinent": "Intian niemimaa",
		Indiana: "Indiana",
		Indonesia: "Indonesia",
		Iowa: "Iowa",
		"Ireland and United Kingdom": "Irlanti ja Yhdistynyt kuningaskunta",
		Italy: "Italia",
		Japan: "Japani",
		Jupiter: "Jupiter",
		Kansas: "Kansas",
		"Las Vegas": "Las Vegas",
		Libya: "Libya",
		Malaysia: "Malesia",
		"Malaysia and Singapore": "Malesia ja Singapore",
		Mars: "Mars",
		Mercury: "Merkurius",
		Minnesota: "Minnesota",
		Montana: "Montana",
		"NAD 1927": "NAD 1927",
		"NAD 1927 (US Feet)": "NAD 1927 (US-jalkaa)",
		"NAD 1983": "NAD 1983",
		"NAD 1983 (2011)": "NAD 1983 (2011)",
		"NAD 1983 (2011) (Intl Feet)": "NAD 1983 (2011) (kansainvälistä jalkaa)",
		"NAD 1983 (2011) (Meters)": "NAD 1983 (2011) (metriä)",
		"NAD 1983 (2011) (US Feet)": "NAD 1983 (2011) (US-jalkaa)",
		"NAD 1983 (CORS96) (Intl Feet)": "NAD 1983 (CORS96) (kansainvälistä jalkaa)",
		"NAD 1983 (CORS96) (Meters)": "NAD 1983 (CORS96) (metriä)",
		"NAD 1983 (CORS96) (US Feet)": "NAD 1983 (CORS96) (US-jalkaa)",
		"NAD 1983 (Intl Feet)": "NAD 1983 (kansainvälistä jalkaa)",
		"NAD 1983 (Meters)": "NAD 1983 (metriä)",
		"NAD 1983 (PA11) (Meters)": "NAD 1983 (PA11) (metriä)",
		"NAD 1983 (PA11) (US Feet)": "NAD 1983 (PA11) (US-jalkaa)",
		"NAD 1983 (US Feet)": "NAD 1983 (US-jalkaa)",
		"NAD 1983 HARN (Intl Feet)": "NAD 1983 HARN (kansainvälistä jalkaa)",
		"NAD 1983 HARN (Meters)": "NAD 1983 HARN (metriä)",
		"NAD 1983 HARN (US Feet)": "NAD 1983 HARN (US-jalkaa)",
		"NAD 1983 NSRS2007 (Intl Feet)": "NAD 1983 NSRS2007 (kansainvälistä jalkaa)",
		"NAD 1983 NSRS2007 (Meters)": "NAD 1983 NSRS2007 (metriä)",
		"NAD 1983 NSRS2007 (US Feet)": "NAD 1983 NSRS2007 (US-jalkaa)",
		"National Grids": "Kansalliset ruudukot",
		Navajo: "Navajo",
		Neptune: "Neptunus",
		"New Beijing": "Uusi Peking",
		"New Zealand": "Uusi-Seelanti",
		"North America": "Pohjois-Amerikka",
		"Northern Hemisphere": "Pohjoinen pallonpuolisko",
		Norway: "Norja",
		Oceans: "Valtameret",
		Oregon: "Oregon",
		"Other GCS": "Muu GCS",
		"Pacific Ocean": "Tyynimeri",
		Pluto: "Pluto",
		Polar: "Polaarinen",
		Portugal: "Portugal",
		"Projected Coordinate Systems": "Projisoidut koordinaattijärjestelmät",
		"Pulkovo 1942": "Pulkovo 1942",
		"Pulkovo 1995": "Pulkovo 1995",
		Replaced: "Korvattu",
		"SAD 1969": "SAD 1969",
		SIRGAS: "SIRGAS",
		"SIRGAS 2000": "SIRGAS 2000",
		Saturn: "Saturnus",
		"Solar System": "Aurinkokunta",
		"South Africa": "Etelä-Afrikka",
		"South America": "Etelä-Amerikka",
		"South Korea": "Etelä-Korea",
		"Southern Hemisphere": "Eteläinen pallonpuolisko",
		"Spheroid-based": "Pyörähdysellipsoidiin perustuva",
		"State Plane": "State Plane",
		"State Systems": "Osavaltiojärjestelmät",
		Sweden: "Sweden",
		"Switzerland and Liechtenstein": "Sveitsi ja Liechtenstein",
		Texas: "Texas",
		Tribal: "Heimo",
		Turkey: "Turkki",
		"US Feet": "US-jalkaa",
		"USA and territories": "Yhdysvallat ja territoriot",
		UTM: "UTM",
		Ukraine: "Ukraina",
		"Unknown Height Systems": "Tuntemattomat korkeusjärjestelmät",
		Uranus: "Uranus",
		Venus: "Venus",
		"Vertical Coordinate Systems": "Pystykoordinaattijärjestelmät",
		Vietnam: "Vietnam",
		"WGS 1972": "WGS 1972",
		"WGS 1984": "WGS 1984",
		Wisconsin: "Wisconsin",
		"Wisconsin CRS": "Wisconsin CRS",
		World: "Maailma",
		"World (Sphere-based)": "Maailma (palloon perustuva)",
		Wyoming: "Wyoming",
		"Xian 1980": "Xian 1980",
		done: "Valmis",
		noResults: "Tuloksia ei löytynyt",
		searchPlaceholder: "Nimi tai koordinaatistotieto",
		browseTemplate: "Selaa rasteritoimintomalleja",
		saveTemplate: "Tallenna rasteritoimintomalli",
		preview: "Esikatselu",
		previewDescription: "Esikatsele tulos ennen analyysin suorittamista.",
		showPreview: "Näytä esikatselu",
		previewLayer: "Esikatselukarttataso ${number}",
		newPreview: "Uusi esikatselu",
		previewPopup: "Ota käyttöön analyysin tulosten esikatselu lähtöaineiston parametrien perusteella.",
		updatePreviewLayer: "Päivitä valittu esikatselukarttataso",
		createPreviewLayer: "Luo uusi esikatselukarttataso",
		maximumPreviewAllowed: "Sallittujen esikatselukarttatasojen enimmäismäärä: ${maxCount}",
		previewFailure: "Tämä esikatselukarttataso ei ole käytettävissä. Tarkista lähtöaineiston parametrit ja päivitä tämä esikatselukarttataso uudelleen.",
		header: "Valitse kohde",
		content: "Sinulla on tallentamattomia muutoksia kohteessa ${rftTitle}. Jos aloitat alusta käyttämällä uutta mallia, kyseiset muutokset menetetään.",
		dontSave: "Älä tallenna",
		"continue": "Jatka",
		stretch: "Sovita ikkunaan",
		pan: "Vieritä",
		newTemplate: "Luo uusi malli",
		openTemplate: "Avaa malli",
		addFunction: "Lisää rasteritoiminnot",
		addConstant: "Lisää vakio",
		addRaster: "Lisää rasterin muuttuja",
		move: "Siirrä",
		zoom: "Tarkenna",
		saveAs: "Tallenna nimellä",
		clear: "Tyhjennä",
		addRasterFunctionTitle: "Lisää rasteritoiminnot",
		templatePropertiesTitle: "Mallin ominaisuudet",
		browseRFT: "Selaa rasteritoimintomalleja",
		defaultToolDescription: "${toolTitle} -analysointityökalu.",
		openToolText: "Avaa työkalu",
		toolDropdownText: "Työkalujen pudotusvalikko",
		addToMap: "Vahvista ja lisää karttaan",
		confirm: "Vahvista",
		select: "Valitse",
		selectTask: "Valitse tehtävä",
		unsupportedLayer: "Tämä parametri ei tue seuraavia karttatasoja: ${layerName}.",
		viewDetails: "Näytä kohteen täydet tiedot",
		rename: "Nimeä uudelleen",
		duplicate: "Kaksoiskappale",
		launch: "Avaa suoritusta varten",
		templateEditor: "Mallieditori",
		createItem: "Tallenna rasteritoimintomalli",
		actionLabel: "Suodata",
		filterPopoverHeading: "Suodata toiminnot",
		defaultSearchPlaceholder: "Hae nimen mukaan",
		settings: "Asetukset",
		summary: "Yhteenveto",
		definitionQuery: "Rajaava kysely",
		matchVariables: "Täsmäytä muuttujat",
		unionDimension: "Liitoksen ulottuvuus",
		nameEditorPlaceholder: "Anna otsikko",
		summaryEditorPlaceholder: "Anna lyhyt kuvaus.",
		definitionQueryPlaceholder: "Anna...",
		upload: "Lataa palvelimeen",
		chooseImage: "Valitse tiedosto napsauttamalla",
		update: "Päivitä",
		thumbnailErrors: {
			wrongImageType: "Väärä kuvatyyppi on valittu",
			notAvailable: "Pikkukuva ei ole käytettävissä",
			loadError: "Kuvan lataus ei onnistunut",
			chooseFile: "Valitse tiedosto napsauttamalla"
		}
	}
};
const copy = "Kopioi";
const save = "Tallenna";
const title = "Otsikko";
const folder = "Kansio";
const tags = "Tunnisteet";
const savingMessage = "Tallennetaan kohdetta kohteeseen";
const shareWith = "Jaa seuraavan kohteen kanssa:";
const share = "Jaa";
const setSharingLevel = "Määritä jakamistaso";
const setGroupSharing = "Määritä jakaminen ryhmille";
const owner = "Omistaja";
const organization = "Organisaatio";
const everyone = "Kaikki (julkinen)";
const groups = "Ryhmät:";
const type = "Tyyppi";
const mosaic = "Mosaikoi";
const itemGroup = "Kohderyhmä";
const item = "Kohde";
const definitionQuery = "Rajaava kysely";
const groupItemsBy = "Kohteiden ryhmittelyperuste";
const groupFieldName = "Ryhmäkentän nimi";
const tagFieldName = "Tunnistekentän nimi";
const noTitleTagErrorMsg = "Anna kohteelle tunnisteet ja otsikko, jotta kartta löytyy hakutoiminnolla.";
const noTitleErrorMsg = "Anna kohteen otsikko.";
const noTagErrorMsg = "Määritä vähintään yksi tunniste, jotta ihmiset löytävät kohteesi hakujen avulla.";
const error = "Virhe";
const warning = "Varoitus";
const success = "Onnistui";
const details = "Yksityiskohdat:";
const tryAgain = "Yritä uudelleen";
const toolModeler = {
	save: "Tallenna",
	editProperties: "Muokkaa ominaisuuksia",
	saveAs: "Tallenna nimellä",
	savingNotification: "Tallennetaan muutoksia kohteeseen...",
	savingTitle: "Tallennetaan",
	saveFailedMessage: "Muutosten tallennus epäonnistui.",
	saveWithErrorsMessage: "Muutokset tallennettiin, mutta seuraavia virheitä ilmeni.",
	viewItemMessage: "Näytä tallennettu kohde",
	here: "tässä.",
	itemCreatedMessage: "Uusi kohde on luotu.",
	clickToViewItemMessage: "Näytä kohteen tietosivu napsauttamalla OK. Jatka napsauttamalla Peruuta.",
	readingFailed: "Valitun rasteritoimintomallin lataus epäonnistui.",
	failedToLoadXML: "Valitun rasteritoimintomallin lataus XML-muodossa epäonnistui.",
	learnMore: "Lisätietoja",
	overwriteTitle: "Vahvista korvaus",
	overwriteMessage: "Haluatko ylikirjoittaa aiemmin luodun kohteen?",
	overwriteSuccessMessage: "Kohde on päivitetty."
};
const toolEditor = {
	run: "Suorita",
	save: "Tallenna",
	deleteSelected: "Poista valitut kohteet",
	addRaster: "Lisää rasteri",
	addScalar: "Lisää skalaari",
	layout: "Automaattinen asettelu",
	errorTitle: "Virhe",
	invalidToolMessage: "Rasteritoimintomalli ei kelpaa.",
	out: "Ulos",
	zoomIn: "Lähennä",
	zoomOut: "Loitonna",
	zoomToFit: "Sovita ikkunaan",
	panOn: "Vaihda vieritystilaan",
	panOff: "Poista vieritystila käytöstä",
	defaultModelName: "Työkalun malli",
	defaultRasterName: "Rasteri"
};
const toolDetailsEditor = {
	defaultToolName: "Rasteritoimintomalli",
	defaultToolDescription: "Lisää lyhyt yhteenveto rasterifunktiosta.",
	defaultHelpText: "Muokkaa ohjetekstiä napsauttamalla ohjekuvaketta",
	editHelpTitle: "Muokkaa ohjetta",
	saveLabel: "Tallenna",
	cancelLabel: "Peruuta",
	thumbnail: {
		wrongImageType: "Väärä kuvatyyppi on valittu",
		notAvailable: "Pikkukuva ei ole käytettävissä",
		loadError: "Kuvan lataus ei onnistunut",
		chooseFile: "Valitse tiedosto napsauttamalla"
	}
};
const saveUtils = {
	thumbnail: "Pikkukuva",
	sharing: "Jakaminen"
};
const close = "Sulje";
const unsavedWarningExisting = "Haluatko tallentaa kohteeseen <b>${itemTitle}</b> tekemäsi muutokset?";
const unsavedWarningNew = "Haluatko tallentaa tekemäsi muutokset?";
const saveAs = "Tallenna nimellä";
const dontSave = "Älä tallenna";
const unsavedTitle = "Tallentamattomat muutokset";
const invalidRFTMessage = "Luotu rasteritoimintomalli ei kelpaa.";
const errorTitle = "Virhe";
const breadcrumb = "Rasteritoimintoeditori";
const breadcrumbEditor = "Sisältö > Rasteritoimintoeditori";
const viewerModeTitle = "Vain luku";
const viewerModeMessage = "Rasteritoimintomallin kohde on vain luku -tilassa. Muutoksia ei voi tallentaa.";
const userStartDirection = "Aloita rasteritoimintomallin muodostaminen valitsemalla funktio.";
const selectFunction = "Lisää funktio";
const deselectFunction = "Poista funktio";
const dialogTitle = "Järjestelmä";
const category = "Luokat";
const search = "Etsi rasterifunktioita";
const categoryNames = {
	analysis: "Analyysi",
	appearance: "Ulkoasu",
	classification: "Luokitus",
	conversion: "Muunto",
	correction: "Korjaus",
	dataManagement: "Aineistonhallinta",
	distance: "Etäisyys",
	distanceLegacy: "Etäisyys (vanha)",
	hydrology: "Hydrologia",
	math: "Matemaattinen",
	mathConditional: "Matemaattinen: ehdollinen",
	mathLogical: "Matemaattinen: looginen",
	mathTrigonometric: "Matemaattinen: trigonometrinen",
	reclass: "Luokittele uudelleen",
	statistical: "Tilastollinen",
	surface: "Pinta"
};
const commonStrings_fi = {
	ok: ok,
	cancel: cancel,
	enterURL: enterURL,
	serviceURL: serviceURL,
	selectRaster: selectRaster,
	failedToLoadLayer: failedToLoadLayer,
	loadingLayer: loadingLayer,
	selectFeature: selectFeature,
	enterFURL: enterFURL,
	addRaster: addRaster,
	addScalar: addScalar,
	raster: raster,
	scalar: scalar,
	defaultModelName: defaultModelName,
	general: general,
	parameters: parameters,
	variables: variables,
	name: name,
	description: description,
	parameter: parameter,
	isPublic: isPublic,
	isDataset: isDataset,
	unknownPixelType: unknownPixelType,
	outputPixelType: outputPixelType,
	u8PixelType: u8PixelType,
	s8PixelType: s8PixelType,
	u16PixelType: u16PixelType,
	s16PixelType: s16PixelType,
	u32PixelType: u32PixelType,
	s32PixelType: s32PixelType,
	f32PixelType: f32PixelType,
	f64PixelType: f64PixelType,
	properties: properties,
	multidimensionalRules: multidimensionalRules,
	matchVariables: matchVariables,
	unionDimensions: unionDimensions,
	rasterFunctionEditor: rasterFunctionEditor,
	rfxLicenseInfo: rfxLicenseInfo,
	rasterFunctions: rasterFunctions,
	copy: copy,
	save: save,
	title: title,
	folder: folder,
	tags: tags,
	savingMessage: savingMessage,
	shareWith: shareWith,
	share: share,
	setSharingLevel: setSharingLevel,
	setGroupSharing: setGroupSharing,
	owner: owner,
	organization: organization,
	everyone: everyone,
	groups: groups,
	type: type,
	mosaic: mosaic,
	itemGroup: itemGroup,
	item: item,
	definitionQuery: definitionQuery,
	groupItemsBy: groupItemsBy,
	groupFieldName: groupFieldName,
	tagFieldName: tagFieldName,
	noTitleTagErrorMsg: noTitleTagErrorMsg,
	noTitleErrorMsg: noTitleErrorMsg,
	noTagErrorMsg: noTagErrorMsg,
	error: error,
	warning: warning,
	success: success,
	details: details,
	tryAgain: tryAgain,
	toolModeler: toolModeler,
	toolEditor: toolEditor,
	toolDetailsEditor: toolDetailsEditor,
	saveUtils: saveUtils,
	close: close,
	unsavedWarningExisting: unsavedWarningExisting,
	unsavedWarningNew: unsavedWarningNew,
	saveAs: saveAs,
	dontSave: dontSave,
	unsavedTitle: unsavedTitle,
	invalidRFTMessage: invalidRFTMessage,
	errorTitle: errorTitle,
	breadcrumb: breadcrumb,
	breadcrumbEditor: breadcrumbEditor,
	viewerModeTitle: viewerModeTitle,
	viewerModeMessage: viewerModeMessage,
	userStartDirection: userStartDirection,
	selectFunction: selectFunction,
	deselectFunction: deselectFunction,
	dialogTitle: dialogTitle,
	category: category,
	search: search,
	categoryNames: categoryNames
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (commonStrings_fi);


//# sourceMappingURL=common-strings.fi-ae5053e5.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,