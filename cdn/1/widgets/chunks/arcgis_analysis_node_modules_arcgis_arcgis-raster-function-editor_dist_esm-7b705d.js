"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_dist_esm-7b705d"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/popover-utils-725493d7.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/popover-utils-725493d7.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ createNodeInteractionPopover),
/* harmony export */   r: () => (/* binding */ removeOpenableDomElement),
/* harmony export */   s: () => (/* binding */ showHelp)
/* harmony export */ });
/**
 * @param {OpenableHtmlElement | undefined} element the element to close and remove
 */
function removeOpenableDomElement(element) {
    if (element !== undefined) {
        element.open = false;
        element.remove();
    }
}
/**
 * @param {Document} document used to append
 * @param {OpenableHtmlElement} element the element to add to the dom and open
 */
/**
 *
 * @param document
 * @param element
 */
function addOpenableDomElement(document, element) {
    if (document.body.contains(element) === false) {
        document.body.appendChild(element);
        element.open = true;
    }
}
/**
 * creates  help popover component.
 * @param CreateHelpPopoverParams
 * @param {CreateHelpPopoverParams} params  parameters for creating help popover
 * @returns HTMLRfxHelpPopoverElement
 */
function createHelpPopover(params) {
    const { helpUrl, helpId, heading, referenceElement, portal, helpSrcdoc, learnMoreUrl, placement, offsetDistance, offsetSkidding } = params;
    const popover = document.createElement("rfx-help-popover");
    popover.helpUrl = helpUrl;
    popover.helpId = helpId;
    popover.heading = heading;
    popover.referenceElement = referenceElement;
    popover.placement = placement ?? "leading-start";
    popover.portal = portal;
    popover.helpSrcdoc = helpSrcdoc;
    popover.learnMoreUrl = learnMoreUrl;
    if (offsetDistance !== undefined) {
        popover.offsetDistance = offsetDistance;
    }
    if (offsetSkidding !== undefined) {
        popover.offsetSkidding = offsetSkidding;
    }
    return popover;
}
/**
 *  show help popover for helpId
 *  @param {HTMLRfxHelpPopoverElement} toolHelpPopover
 *  @param {CreateHelpPopoverParams} params needed parameters for help
 *  @returns {HTMLRfxHelpPopoverElement}  helpPopover instance
 */
function showHelp(toolHelpPopover, params) {
    const { helpUrl, helpId, heading, referenceElement, portal, helpSrcdoc, helpFileName, learnMoreUrl, offsetDistance, offsetSkidding } = params;
    if (toolHelpPopover !== undefined) {
        removeOpenableDomElement(toolHelpPopover);
        toolHelpPopover = undefined;
    }
    toolHelpPopover = createHelpPopover({
        helpUrl,
        helpId,
        heading,
        referenceElement,
        portal,
        helpSrcdoc,
        helpFileName,
        learnMoreUrl,
        offsetDistance,
        offsetSkidding
    });
    addOpenableDomElement(document, toolHelpPopover);
    return toolHelpPopover;
}
/**
 * creates  Node Interaction popover component.
 * @param CreateNodeInteractionPopoverParams
 * @param {CreateNodeInteractionPopoverParams} params  parameters for creating node Interaction popover
 * @returns HTMLCalcitePopoverElement
 */
function createNodeInteractionPopover(popover, params) {
    const { referenceElement, label, direction, offsetDistance, offsetSkidding, showPropertiesAction, handleNodeDuplicate, handleNodeRename, handleNodeDelete, handleNodeEditProperties } = params;
    if (popover !== undefined) {
        removeOpenableDomElement(popover);
        popover = undefined;
    }
    popover = document.createElement("calcite-popover");
    const popoverProps = {
        overlayPositioning: "absolute",
        autoClose: true,
        dir: direction,
        focusTrapDisabled: true,
        triggerDisabled: true,
        pointerDisabled: true,
        placement: "top",
        closable: false,
        open: true,
        referenceElement: referenceElement,
        label: label,
        offsetDistance: offsetDistance,
        offsetSkidding: offsetSkidding
    };
    Object.assign(popover, popoverProps);
    const nodeInteractionToolbar = document.createElement("rfx-node-interaction-toolbar");
    const nodeInteractionToolbarProps = {
        showPropertiesAction,
        handleNodeDuplicate,
        handleNodeRename,
        handleNodeDelete,
        handleNodeEditProperties
    };
    Object.assign(nodeInteractionToolbar, nodeInteractionToolbarProps);
    popover.append(nodeInteractionToolbar);
    addOpenableDomElement(document, popover);
    return popover;
}



//# sourceMappingURL=popover-utils-725493d7.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-container.entry.js":
/*!*******************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-container.entry.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   rfx_container: () => (/* binding */ RFxContainer)
/* harmony export */ });
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");
/* harmony import */ var _popover_utils_725493d7_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./popover-utils-725493d7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/popover-utils-725493d7.js");

















const RFxContainer = class {
    constructor(hostRef) {
        (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        /**
         * Handles the change event of Analysis Help Popover close
         * @category Private
         */
        this.handleAnalysisHelpPopoverClose = () => {
            (0,_popover_utils_725493d7_js__WEBPACK_IMPORTED_MODULE_15__.r)(this.toolHelpPopover);
        };
        /**
         * Handles the change event of Analysis RFx Help Popover
         * @param {CustomEvent} evt - The custom event object containing reference element, help source document, and heading.
         * @category Private
         */
        this.handleRFxHelpPopoverChange = (evt) => {
            evt.stopPropagation();
            const { referenceElement, helpSrcdoc, heading } = evt.detail;
            this.toolHelpPopover = (0,_popover_utils_725493d7_js__WEBPACK_IMPORTED_MODULE_15__.s)(this.toolHelpPopover, {
                helpId: "param.name",
                helpSrcdoc,
                heading,
                referenceElement,
                offsetDistance: 30
            });
            this.toolHelpPopover.addEventListener("rfxHelpPopoverClose", this.handleAnalysisHelpPopoverClose);
        };
        /**
         * called when the close button is clicked
         */
        this.handleClose = () => {
            this.panelMode = 0;
        };
        /**
         * called when the done button is clicked
         */
        this._handleDone = async () => {
            this.panelMode = 0;
            const rftJSON = await this.editorComponent.getUpdatedRFTWithValues();
            console.log("updated JSON..", rftJSON);
        };
        this.panelMode = 0;
        this.mapLayers = undefined;
        this.customRFT = undefined;
    }
    /**
     * Gets called  to show the function UI
     * @category Private
     */
    _renderFunctionUI() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-analysis-wrapper", { ref: (el) => (this.editorComponent = el), functionName: this.functionName, mapLayers: this.mapLayers, usePanel: true, onAnalysisToolclose: this.handleClose, rfxTemplate: this.customRFT, onAnalysisUnsupportedFunction: () => {
                console.log("has unsupported function in this RFT, set showUnsupportedFunction as true in analysis-wrapper to see the function chain");
                this.handleClose();
            }, onAnalysisRFxHelpPopoverChange: this.handleRFxHelpPopoverChange }), this._renderDoneButton()));
    }
    /**
     * called to render the done button
     * @category private
     */
    _renderDoneButton() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { alignment: "start", appearance: "solid", kind: "brand", scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_2__.U.Scale, href: "", onClick: this._handleDone }, "done"));
    }
    /**
     * @category Lifecycle
     * Render lifecycle method
     */
    render() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-flow-item", { id: "rfx-container", key: "rfx-container", heading: "Raster Functions" }, this.panelMode === 0 && ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-list-view", { scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_2__.C.m, onTriggerSelectFunction: (event) => {
                this.functionName = event.detail;
                this.panelMode = 1;
            } })), this.panelMode === 1 && this._renderFunctionUI()));
    }
};



//# sourceMappingURL=rfx-container.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js":
/*!*****************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CalciteScale),
/* harmony export */   U: () => (/* binding */ UIDefaults),
/* harmony export */   a: () => (/* binding */ CalciteOverlayPositioning)
/* harmony export */ });
const UIDefaults = {
    Scale: "s",
    PopoverTimer: 60
};
const CalciteScale = {
    s: "s",
    m: "m"
};
const CalciteOverlayPositioning = {
    absolute: "absolute",
    fixed: "fixed"
};



//# sourceMappingURL=ui-utils-928a4096.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,