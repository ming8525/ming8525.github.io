"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-5b7e87"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-data-store-browser.entry.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-data-store-browser.entry.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_new_item_pages_data_store_browser: () => (/* binding */ ArcgisNewItemPagesDataStoreBrowser)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./item-properties-10491b2e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-10491b2e.js");
/* harmony import */ var _data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data-store-e2ae6a67.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-e2ae6a67.js");
/* harmony import */ var _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-item-dbbe2f57.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js");
/* harmony import */ var _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui-bca7bcd1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-bca7bcd1.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/* harmony import */ var _service_8c2c4241_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./service-8c2c4241.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/service-8c2c4241.js");
/* harmony import */ var _data_store_8e83fb7a_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./data-store-8e83fb7a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-8e83fb7a.js");
/* harmony import */ var _feature_layer_573bb473_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./feature-layer-573bb473.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-573bb473.js");
/* harmony import */ var _feature_layer_79fb302c_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./feature-layer-79fb302c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-79fb302c.js");
/* harmony import */ var _guid_aeaed84d_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./guid-aeaed84d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-aeaed84d.js");
/* harmony import */ var _thumbnail_bcb89e69_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./thumbnail-bcb89e69.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/thumbnail-bcb89e69.js");
/* harmony import */ var _user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./user-3ea69c3a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js");
/* harmony import */ var _query_d62660d4_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./query-d62660d4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-d62660d4.js");
/* harmony import */ var _api_2e3a136f_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./api-2e3a136f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/api-2e3a136f.js");
/* harmony import */ var _string_58a5fef3_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./string-58a5fef3.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/string-58a5fef3.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _item_c58ffced_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./item-c58ffced.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-c58ffced.js");
/* harmony import */ var _server_item_8d384796_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./server-item-8d384796.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-8d384796.js");
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/* harmony import */ var _functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./functional-81373f6d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-81373f6d.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/* harmony import */ var _feature_layer_17b64946_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./feature-layer-17b64946.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-17b64946.js");
/* harmony import */ var _ags_eb458a03_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./ags-eb458a03.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ags-eb458a03.js");
/* harmony import */ var _url_35875a10_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./url-35875a10.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-35875a10.js");
/* harmony import */ var _storage_0353a769_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./storage-0353a769.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/storage-0353a769.js");
/* harmony import */ var _file_bf8ab90f_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./file-bf8ab90f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-bf8ab90f.js");
/* harmony import */ var _store_6a88e6c5_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./store-6a88e6c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/store-6a88e6c5.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


































const arcgisNewItemPagesDataStoreBrowserCss = ":host{background-color:var(--calcite-color-foreground-2);padding:0px}.inner-container{display:flex;flex-direction:column;padding:1.5rem;height:calc(100% - 65px)}.content-wrapper{flex-grow:1}.breadcrumb-container{margin-top:1rem;margin-bottom:1rem;font-weight:500;display:flex}.breadcrumb__item{display:flex;align-items:center;font-size:0.875rem;color:var(--calcite-color-text-2);margin-right:0.5rem}.breadcrumb--inactive{cursor:pointer;margin-right:0.5rem;color:#00619b}.pagination-text{font-size:0.75rem;font-weight:500;margin-top:1rem;margin-bottom:1rem;color:#757575}.data-set-container{background-color:var(--calcite-color-foreground-1)}.data-set__header{border-width:0px;border-bottom-width:2px;border-style:solid;font-size:0.875rem;padding:0px;border-color:transparent;width:-moz-fit-content;width:fit-content}.data-set__header:hover{cursor:pointer}.data-set__header--selected{border-color:#0079c1}.header-icon{margin-right:0.5rem}.item-list{margin-left:0px;margin-inline-start:0px;padding-inline-start:0px}.data-set__item{display:grid;grid-template-columns:repeat(2, minmax(0, 1fr));padding-left:0.75rem;padding-right:0.75rem;padding-top:0.5rem;padding-bottom:0.5rem}.data-set__item:hover{cursor:pointer}.data-set__item>.item--title{font-size:0.875rem;margin-top:0px;margin-bottom:0px}.blue-calcite-icon{--calcite-ui-icon-color:var(--calcite-color-brand)}.sort-icon{margin-left:6rem}.hidden-icon{visibility:hidden}.pagination-wrapper{display:flex;justify-content:center;margin-top:auto;padding-left:0.5rem;padding-right:0.5rem}.header-text{font-size:1rem;font-weight:500;color:var(--calcite-color-text-1)}";

const ArcgisNewItemPagesDataStoreBrowser = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.newItemUpdatePage = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
        this.dataStoreContentType = "tile-layer";
        this.selectedDataset = null;
        this.datastoreContents = undefined;
        this.originalDatasets = undefined;
        this.sortedDatasets = undefined;
        this.displayDatasets = undefined;
        this.pathHistories = [];
        this.cachedData = {};
        this.error = null;
        this.loading = undefined;
        this.sortCriteria = {
            direction: null,
            criteria: null
        };
        this.userTileLayerTypeSelection = undefined;
        this.itemsPerPage = undefined;
        this.totalItems = undefined;
        this.paginationData = undefined;
    }
    /*
      'Vector tile layer' => vectorCacheDataset
      'Raster tile layer' => cacheDataset
      'Scene layer' => i3sRestCache
      Also show 'folder' type datastore contents
     */
    async componentWillLoad() {
        this.dataStoreContentType =
            _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.newItemMode === "tileLayer" ? "tile-layer" : "scene-layer";
        this.dataStoreName = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.dataStoreName;
        this.i18n = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_4__.u.i18n.dataStore;
        this.pathHistories = ["/"];
        this.datastoreContents = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.datastoreContents;
        this.originalDatasets = [..._add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.datastoreContents.children];
        this.sortedDatasets = [...this.originalDatasets];
        this.selectedDataset = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.dataset;
        this.cachedData = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.dataStoreCachedData;
        this.selectedDataset = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.dataset;
        this.serverId = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.serverId;
    }
    toggleSort(criteria) {
        const { sortCriteria } = this;
        const direction = criteria == null
            ? null
            : sortCriteria.criteria !== criteria
                ? "desc"
                : sortCriteria.direction === "desc"
                    ? "asc"
                    : null;
        if (criteria === null || direction === null) {
            this.sortCriteria = { criteria: null, direction: null };
            this.sortedDatasets = this.originalDatasets;
            return;
        }
        this.sortCriteria = { criteria, direction };
        const sortDirectionMultiplier = direction === "asc" ? 1 : -1;
        this.sortedDatasets = [...this.sortedDatasets].sort(function (a, b) {
            const criteriaA = a[criteria].toLowerCase();
            const criteriaB = b[criteria].toLowerCase();
            return criteriaA.localeCompare(criteriaB) * sortDirectionMultiplier;
        });
    }
    async exploreFolder(path, type) {
        var _a;
        this.loading = true;
        const hasCachedData = this.cachedData[path] != null;
        if (!hasCachedData) {
            const response = await (0,_data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_2__.g)(_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.dataStoreId, path, type, this.serverId);
            if (((_a = response.error) === null || _a === void 0 ? void 0 : _a.code) === "failToListDataStoreContents") {
                this.loading = false;
                this.error = "failToListDataStoreContents";
                return;
            }
            this.cachedData = Object.assign(Object.assign({}, this.cachedData), { [path]: response.result });
        }
        const newData = this.cachedData[path];
        this.pathHistories = path === "/" ? ["/"] : path.split("/");
        this.datastoreContents = this.filterContentsByUserSelection(newData);
        this.originalDatasets = [...this.datastoreContents.children];
        this.loading = false;
    }
    filterContentsByUserSelection(contents) {
        const storeType = this.dataStoreContentType;
        const tileLayerPublishType = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.tileLayerPublishType;
        // handles an edge case where the selected data store is empty
        // when the data store is empty, the children attribute does not exist
        if (!contents.children) {
            return Object.assign(Object.assign({}, contents), { children: [] });
        }
        return Object.assign(Object.assign({}, contents), { children: contents.children.filter((element) => {
                const type = element.type;
                let isAcceptable = type === "folder";
                if (storeType === "tile-layer") {
                    isAcceptable || (isAcceptable = (tileLayerPublishType === "tiles" && type === "cacheDataset") ||
                        (tileLayerPublishType === "vectorTiles" && type === "vectorCacheDataset"));
                }
                else if (storeType === "scene-layer") {
                    isAcceptable || (isAcceptable = type === "extractedScenePackage" || type === "i3sRestCache");
                }
                return isAcceptable;
            }) });
    }
    renderErrorItem() {
        const { i18n, error, loading } = this;
        let heading = "";
        let description = "";
        if (error) {
            const i18nErr = i18n.error;
            if (error === "failToListDataStoreContents") {
                heading = i18nErr.listing.heading;
                description = i18nErr.listing.description;
            }
            else {
                heading = i18nErr.noDatasetErrorHeading;
                description = i18nErr.noDatasetErrorDescription;
            }
        }
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: heading, description: description, active: error !== null && !loading, onAlertDismiss: () => {
                this.error = null;
            } }));
    }
    renderHeaderItem(type) {
        const { i18n, sortCriteria } = this;
        const { criteria, direction } = sortCriteria;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { onClick: () => this.toggleSort(type), class: {
                "data-set__header": true,
                "data-set__header--selected": criteria === type && direction != null
            } }, type === "name" && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { scale: "s", icon: "circle", class: "hidden-icon header-icon" })), type === "name" ? i18n.fileName : i18n.fileType, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: {
                "blue-calcite-icon sort-icon": true,
                "hidden-icon": criteria !== type || !direction
            }, scale: "s", icon: direction === "asc" ? "caret-up" : "caret-down" })));
    }
    onDatastoreContentsChange() {
        // Reset sort on new data
        this.toggleSort(null);
    }
    onSortedDataSetsChange() {
        // Reset pagination on new sorted data
        // 1 because CC pagination starts at 1
        this.calculatePagination(1);
    }
    calculatePagination(start) {
        const { sortedDatasets } = this;
        const totalItems = sortedDatasets.length;
        this.totalItems = totalItems;
        const MAX_ITEM_PER_PAGE = 5;
        const itemsPerPage = Math.min(totalItems, MAX_ITEM_PER_PAGE);
        const startIndex = start - 1;
        const endIndex = Math.min(startIndex + itemsPerPage, totalItems) - 1;
        this.itemsPerPage = itemsPerPage;
        this.displayDatasets = sortedDatasets.slice(startIndex, endIndex + 1);
        this.paginationData = { startIndex, endIndex };
    }
    handleNext() {
        const dataset = this.selectedDataset;
        if (!dataset) {
            this.error = "noDataSetSelected";
            return;
        }
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.dataset = dataset;
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.dataStoreCachedId = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.dataStoreId;
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.serverId = this.serverId;
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.datastoreContents = this.datastoreContents;
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.dataStoreCachedData = this.cachedData;
        _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_1__.i.title = dataset.name.split(".")[0];
        let type;
        switch (dataset.type) {
            case "vectorCacheDataset":
                type = "Vector Tile Service";
                break;
            case "i3sRestCache":
            case "extractedScenePackage":
                type = "Scene Service";
                break;
            case "cacheDataset":
                type = "Map Service";
                // Might be an Image Service but we don't know for sure
                // We can make a certain call to the backend but it would take a really long time
                // Garima is trying to solve this issue with the backend team
                // type = "Image Service";
                break;
        }
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_3__.a.type = type;
        this.newItemUpdatePage.emit("serverList");
    }
    render() {
        const { i18n, loading, displayDatasets, originalDatasets, pathHistories, paginationData, dataStoreName } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "inner-container" }, loading ? ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-loader", { label: "datastore-loader", text: i18n.processing })) : ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "content-wrapper" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "header-text" }, i18n.header), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "breadcrumb-container" }, pathHistories.map((path, index) => {
            const isLast = index === pathHistories.length - 1;
            const isFirst = index === 0;
            const onClickPath = isFirst ? "/" : pathHistories.slice(0, index + 1).join("/");
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "breadcrumb__item", key: `${path}_${index}` }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { onClick: isLast ? undefined : () => this.exploreFolder(onClickPath, "folder") }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: { "breadcrumb--inactive": !isLast } }, isFirst ? dataStoreName : path)), !isLast && (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: "chevron-right", scale: "s" })));
        })), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "pagination-text" }, displayDatasets.length > 0 &&
            i18n.paginationRange
                .replace("${start}", `${paginationData.startIndex + 1}`)
                .replace("${end}", `${paginationData.endIndex + 1}`)
                .replace("${total}", `${originalDatasets.length}`)), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "data-set-container" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "data-set__item" }, this.renderHeaderItem("name"), this.renderHeaderItem("type")), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-radio-button-group", { name: "file-group", onCalciteRadioButtonGroupChange: (event) => {
                this.selectedDataset = event.target.selectedItem.value;
            }, layout: "vertical" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("ul", { class: "item-list" }, displayDatasets.length > 0 ? (displayDatasets.map((dataSet) => {
            var _a;
            const { name, path, type } = dataSet;
            const isFolder = type === "folder";
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("li", { key: `dataSet--item__${path}`, class: "data-set__item", onClick: () => {
                    if (isFolder) {
                        this.exploreFolder(dataSet.path, "folder");
                    }
                } }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline", class: "description" }, isFolder ? ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: "folder", scale: "s", class: "blue-calcite-icon" })) : ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-radio-button", { value: dataSet, checked: path === ((_a = this.selectedDataset) === null || _a === void 0 ? void 0 : _a.path) })), name), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "item--title" }, type)));
        })) : ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("li", { class: "data-set__item" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: "exclamation-mark-triangle", scale: "s" }), i18n.emptyFolder))))))), this.itemsPerPage > 0 && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "pagination-wrapper" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-pagination", { startItem: paginationData.startIndex + 1, totalItems: this.totalItems, pageSize: this.itemsPerPage, onCalcitePaginationChange: (event) => {
                const node = event.target;
                this.calculatePagination(node.startItem);
            } })))))), this.renderErrorItem()));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
    static get watchers() { return {
        "originalDatasets": ["onDatastoreContentsChange"],
        "sortedDatasets": ["onSortedDataSetsChange"]
    }; }
};
ArcgisNewItemPagesDataStoreBrowser.style = arcgisNewItemPagesDataStoreBrowserCss;



//# sourceMappingURL=arcgis-new-item-pages-data-store-browser.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,