"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-9e117d"],{53248:(e,t,n)=>{n.d(t,{A:()=>l,G:()=>u,J:()=>i,M:()=>a,P:()=>p,U:()=>r,a:()=>o,d:()=>s});const r={IDLE:"idle",VALID:"valid",INVALID:"invalid"},i={RASTER_FUNCTION_TEMPLATE:"RasterFunctionTemplate",RASTER_FUNCTION_VARIABLE:"RasterFunctionVariable",ARGUMENT_ARRAY:"ArgumentArray",RECORD_SET:"RecordSet",ECD_FILE:"ECDFile"},a={MATCH_VARIABLE:"MatchVariable",UNION_DIMENSION:"UnionDimension"},s={name:"Raster",isDataset:!0,isPublic:!1,type:i.RASTER_FUNCTION_VARIABLE},l={RFX_DTEX_COMMON_SELECT:"RFX-DTEX-COMMON-SELECT",RFX_DTE_COMMON_CHECKBOX:"CALCITE-CHECKBOX",RFX_DTE_COMMON_TEXTINPUT:"CALCITE-INPUT-TEXT",RFX_DTE_COMMON_NUMBERINPUT:"CALCITE-INPUT-NUMBER",RFX_DTE_RASTER_INPUT:"RFX-DTE-RASTER-INPUT",RFX_DTE_FEATURE_SELECT:"RFX-DTE-FEATURE-SELECT",RFX_DTEX_RASTER_VARIABLES_LIST:"RFX-DTEX-RASTER-VARIABLES-LIST",RFX_CTE_RANGED_VALUE_EDITOR:"RFX-CTE-RANGED-VALUE-EDITOR",RFX_CTE_GAMMA_EDITOR:"RFX-CTE-GAMMA-EDITOR",RFX_DTE_COLOR_RAMP_SELECTOR:"RFX-DTE-COLOR-RAMP-SELECTOR",RFX_DTE_EXTENT:"RFX-DTE-EXTENT",RFX_DTE_JSON_FILE_UPLOADER:"RFX-DTE-JSON-FILE-UPLOADER",RFX_CTE_FACTOR_FUNCTION_EDITOR:"RFX-CTE-FACTOR-FUNCTION-EDITOR",RFX_CTE_NEIGHBORHOOD_VALUES:"RFX-CTE-NEIGHBORHOOD-VALUES"},o={ANALYSIS:"analysis",EDITOR:"editor"},u={textInput:"text-input",text:"text",raster:"raster-input",number:"number-input",boolean:"check-box",switch:"switch",field:"field-select",color:"color-input",select:"select",icon:"icon"},p={loading:"loading",success:"success",error:"error"}},5660:(e,t,n)=>{n.d(t,{a:()=>F,b:()=>O,c:()=>w,d:()=>_,e:()=>S,f:()=>b,g:()=>I,h:()=>k,i:()=>L,j:()=>N,k:()=>M,l:()=>D,n:()=>U,o:()=>H});var r=n(46574),i=n(34319),a=n(46717),s=n(55139),l=n(57098),o=(n(78979),n(95876)),u=n(77162),p=n(53248),c=n(32804),g=n(48363),h=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,d=/^\w*$/;function y(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,i=t?t.apply(this,r):r[0],a=n.cache;if(a.has(i))return a.get(i);var s=e.apply(this,r);return n.cache=a.set(i,s)||a,s};return n.cache=new(y.Cache||c.M),n}y.Cache=c.M;var f,m,A,R=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,E=/\\(\\)?/g,C=(f=function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(R,(function(e,n,r,i){t.push(r?i.replace(E,"$1"):n||e)})),t},m=y(f,(function(e){return 500===A.size&&A.clear(),e})),A=m.cache,m);var x=1/0;function T(e){if("string"==typeof e||(0,o.c)(e))return e;var t=e+"";return"0"==t&&1/e==-x?"-0":t}function v(e,t,n){return null==e?e:function(e,t,n,r){if(!(0,g.j)(e))return e;for(var i=-1,a=(t=function(e,t){return(0,g.a)(e)?e:function(e,t){if((0,g.a)(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!(0,o.c)(e))||d.test(e)||!h.test(e)||null!=t&&e in Object(t)}(e,t)?[e]:C((0,o.d)(e))}(t,e)).length,s=a-1,l=e;null!=l&&++i<a;){var u=T(t[i]),p=n;if("__proto__"===u||"constructor"===u||"prototype"===u)return e;if(i!=s){var y=l[u];void 0===(p=void 0)&&(p=(0,g.j)(y)?y:(0,c.i)(t[i+1])?[]:{})}(0,c.a)(l,u,p),l=l[u]}return e}(e,t,n)}function w(e){return i.clone(e)}function F(){return i.clone(p.d)}function G(e){return a.urlToObject(e).path}function I(e){return e?.indexOf("?token=")>0&&(e=e.slice(0,e.indexOf("?token="))),e}function O(e){let t=I(e?.url);"feature"===e.type&&(t=`${t}/${e.layerId??0}`);const n=r.default.findCredential(e.url);return void 0!==n&&(t=`${t}?token=${n.token}`),t}function _(e){const t={url:O(e),name:e.title};if((0,u.i)(e.renderingRule)||(t.renderingRule=e.renderingRule.toJSON()),(0,u.i)(e.definitionExpression))(0,u.i)(e.mosaicRule)||(t.mosaicRule=e.mosaicRule.toJSON?.());else{let n=e.mosaicRule;(0,u.i)(n)||(n=n.clone(),n.where=e.definitionExpression,t.mosaicRule=n.toJSON())}return t}function S(e,t){if((0,u.i)(e?.url)||(0,u.i)(t))return;const n=G(e.url),r=t.find((e=>e.url===n))?.id;return r}async function b(e){if((0,u.i)(e?.url))return;const t=i.clone(e);let n;t.name||(t.name=function(e){const t=e.split("/");return t[t.length-2]}(t.url));try{n=await s.default.fromArcGISServerUrl({url:G(e.url),properties:{renderingRule:e.renderingRule,mosaicRule:e.mosaicRule}}),n.name=e.name}catch(e){}return n}async function k(e){const t=e?.url,n=e?.name;if((0,u.i)(t))return;let r;try{r=await s.default.fromArcGISServerUrl({url:G(t)}),r.name=n}catch(e){console.error("Failed to load feature layer from RFT JSON.")}return r}function L(e){return e?.toLocaleLowerCase().indexOf("f")>=0}function N(e){const t=e&&(e.extent||e.fullExtent);if((0,u.i)(t))return;const{xmin:n,ymin:r,xmax:i,ymax:a,spatialReference:s}=t,{wkid:l,latestWkid:o,wkt:p}=s,c={xmin:n,ymin:r,xmax:i,ymax:a};return(0,u.i)(l)||v(c,"spatialReference.wkid",l),(0,u.i)(o)||v(c,"spatialReference.latestWkid",o),(0,u.i)(p)||v(c,"spatialReference.wkt",p),c}async function M(e){if((0,u.i)(e))return Promise.resolve(void 0);const t=await e.queryFeatures({returnGeometry:!0,where:"1 = 1"});if((0,u.i)(t))return Promise.resolve(void 0);const n=t.features?.map((e=>e?.geometry));return n}function D(e){const t=e?.rasterInfo?.keyProperties?.ChangeAnalysisParameters,n=t?.AnalysisType;return"CCDC"===n}function U(e){return e.filter((e=>function(e){let t=!0;return!1===e.sourceJSON?.allowAnalysis&&(t=!1),(e.portalItem?.typeKeywords?.includes("Hosted Service")??!1)&&(t=!!e.portalItem.isOrgItem||t),t}(e)))}function H(e,t){const n=JSON.stringify(t);return new l.default({url:e,raster:btoa((0,o.t)(n))})}},48302:(e,t,n)=>{n.d(t,{D:()=>l,S:()=>r,a:()=>o,b:()=>p,f:()=>c,g:()=>u});const r={Arabic:"ar",Bosnian:"bs",Bulgarian:"bg",Catalan:"ca",Czech:"cs",Danish:"da",German:"de",Greek:"el",English:"en",EnglishUSA:"en-US",Spanish:"es",Estonian:"et",Finnish:"fi",French:"fr",Hebrew:"he",Hindi:"hi",Croatian:"hr",Hungarian:"hu",Indonesian:"id",Italian:"it",Japanese:"ja",Korean:"ko",Lithuanian:"lt",Latvian:"lv",NorwegianBokml:"nb",Dutch:"nl",Polish:"pl",PortugueseBrazil:"pt-BR",PortuguesePortugal:"pt-PT",Romanian:"ro",Russian:"ru",Serbian:"sr",Slovenian:"sl",Slovak:"sk",Swedish:"sv",Thai:"th",Turkish:"tr",Ukrainian:"uk",Vietnamese:"vi",ChineseChina:"zh-CN",ChineseHongKong:"zh-HK",ChineseTaiwan:"zh-TW"},i=["ar","de","es","fr","it","ja","ko","ru","pl","pt-br","zh-cn"],a={"en-AU":"en","en-CA":"en","en-GB":"en","en-US":"en","es-ES":"es","es-MX":"es","de-CH":"de","de-AT":"de","de-DE":"de","fr-CH":"fr","fr-FR":"fr","it-CH":"it","it-IT":"it",ind:"id",ukr:"uk"},s=[r.Arabic,r.Hebrew],l=r.English;function o(e){return!0===e?"rtl":"ltr"}function u(e=document.documentElement){const t=("[lang]",function e(t){let n;return n=void 0===t||t===document||t===window?null:t.closest("[lang]")||e(t.getRootNode().host),n}(e));const n=t?.lang??window.navigator.language,i=Object.values(r),o=l,u=function(e,t){const n=l;let r=e?.toLowerCase();if(void 0!==r&&-1!==r.indexOf("-")){const[e,t]=r.split("-");r=`${e}-${t.toUpperCase()}`}return r?!0===Object.keys(a).includes(r)?t[r]:r:n}(n,a);return{locale:i.includes(u)?u:o,rtl:s.includes(n)}}async function p(e,t){const n=e.tagName.toLowerCase(),{locale:r,rtl:i}=u(e),a=await async function(e){const{path:t,locale:n,baseURL:r}=e;let i={};try{const e=await fetch(`${r}t9n/${t}.t9n.${n}.json`);i=await e.json()}catch(e){const n=await fetch(`${r}t9n/${t}.t9n.${l}.json`);i=await n.json()}return i}({path:n,locale:r,baseURL:t});return{strings:a,dir:o(i),locale:r}}function c(e,t,n="en"){let r=n;!0===Object.keys(a).includes(n)&&(r=a[n]);const s=r.toLocaleLowerCase();return!0===i.includes(s)&&(t=t.replace(/^https?:\/\/[^/]+\/en/,(e=>e.replace("en",s)))),`${t}analyze/${e}`}},42819:(e,t,n)=>{n.r(t),n.d(t,{rfx_cte_clipping_geometry:()=>d});var r=n(19451),i=n(48302),a=(n(34319),n(77162)),s=n(64729),l=n(5660);n(99248),n(16888),n(95323),n(43278),n(86944),n(83345),n(74656);const o="clippingGeometryOrRasterHelpClickHandler",u="useinputFeaturesHelpClickHandler",p="outputExtentHelpClickHandler",c="clippingRaster",g="clippingGeometry",h="currentExtent",d=class{constructor(e){(0,r.r)(this,e),this.rfxArgumentChange=(0,r.c)(this,"rfxArgumentChange",7),this.rasterOrGeometryValueMapper={geometryValue:void 0,rasterValue:void 0},this.extentMapper={mapExtent:void 0,inputRasterExtent:void 0,clippingRasterGeometryExtent:void 0,clippingFeatureGeometryExtent:void 0,useInputFeatureGeometryExtent:void 0},this.helpActionClickEventHandlers=new Map,this.inituseInputFeatureGeometry=e=>{this.useInputFeatureGeometryRfxArg=e;const{triggerArgs:t}=this.widgetArgs;t.UseInputFeatureGeometry.input=this.useInputFeatureGeometryRfxArg,this.useInputFeatureGeometryRfxArg?.addEventListener("calciteCheckboxChange",(e=>{const t=e.target.checked;this.useInputFeatureGeometryRfxArgValue=t,this.widgetArgs.triggerArgs.UseInputFeatureGeometry.value=t,this.widgetArgs.inputArgs.ClippingGeometry.value=this.useInputFeatureGeometryRfxArgValue?this.extentMapper.useInputFeatureGeometryExtent:this.extentMapper.clippingFeatureGeometryExtent}))},this.initExtent=e=>{this.extentWidget=e;const{inputArgs:t}=this.widgetArgs;t.Extent.input=this.extentWidget},this.handleClippingGeometryTypesChange=e=>{e.stopPropagation();const t=e.target;switch(this.clippingGeometryTypeSelected=t.value,this.clippingGeometryTypeSelected){case h:this.extentMapper.mapExtent=(0,l.j)(this.map?.extent),this.widgetArgs.inputArgs.ClippingRaster.value=void 0,this.widgetArgs.inputArgs.ClippingGeometry.value=void 0;break;case c:this.widgetArgs.inputArgs.ClippingGeometry.value=void 0;break;case g:this.widgetArgs.inputArgs.ClippingRaster.value=void 0}},this.setMapExtent=()=>{(0,a.i)(this.map)||(this.extentMapper.mapExtent=(0,l.j)(this.map?.extent),this.renderFlag=!this.renderFlag)},this.renderUpdateActiveMapExtentButton=()=>(0,r.h)("calcite-button",{alignment:"center",appearance:"outline",kind:"neutral",scale:s.U.Scale,type:"button",width:"full",onClick:this.setMapExtent},this.strings.currentMapExtent),this.handleClippingGeometryRasterChange=async({detail:{value:e}})=>{this.rasterOrGeometryValueMapper.rasterValue=e;const t=await(this.clippingGeometryRasterArg?.getSelectedLayer?.()),n=(0,l.j)(t);this.widgetArgs.inputArgs.ClippingRaster.value=(0,l.d)(t),this.extentMapper.clippingRasterGeometryExtent=n,this.renderFlag=!this.renderFlag},this.handleClippingGeometryFeatureChange=async({detail:{value:e}})=>{this.rasterOrGeometryValueMapper.geometryValue=e;const t=await(this.clippingGeometryFeatureArg?.getSelectedLayer?.()),n=(0,l.j)(t);this.extentMapper.clippingFeatureGeometryExtent=n;const r=await(0,l.k)(t);let i={};i="polygon"===t.geometryType?{rings:r?.map((e=>e?.toJSON().rings?.[0])),spatialReference:r?.[0]?.toJSON().spatialReference}:"point"===t.geometryType?{geometries:r?.map((e=>{const t=e.toJSON();return{x:t.x,y:t.y}})),spatialReference:r?.[0]?.toJSON().spatialReference}:n,this.extentMapper.useInputFeatureGeometryExtent=i,this.widgetArgs.inputArgs.ClippingGeometry.value=this.useInputFeatureGeometryRfxArgValue?i:n,this.renderFlag=!this.renderFlag},this.widgetArgs=void 0,this.clippingGeometryTypeSelected=void 0,this.clippingTypeRfxArgValue=void 0,this.useInputFeatureGeometryRfxArgValue=!1,this.extentvalue=void 0,this.renderFlag=!1}onWidgetArgsChange(e){this.processWidgetArgs(e)}connectedCallback(){this.processWidgetArgs(this.widgetArgs)}async componentWillLoad(){({strings:this.strings,dir:this.direction}=await(0,i.b)(this.hostElement,(0,r.g)("."))),await this.setInitialState(this.widgetArgs)}componentWillRender(){const e={1:()=>{switch(this.clippingGeometryTypeSelected){case h:return this.extentMapper.mapExtent;case c:return this.extentMapper.clippingRasterGeometryExtent;case g:return this.extentMapper.clippingFeatureGeometryExtent}},2:()=>this.extentMapper.inputRasterExtent}[this.clippingTypeRfxArgValue].bind(this)();this.extentvalue=e}componentDidLoad(){this.attachHelpClickEventHandlers()}processWidgetArgs({browseProperties:e,triggerArgs:t}){this.map=e.map,((0,a.i)(t)||(0,a.i)(t.Raster)||(0,a.i)(t.ClippingType)||(0,a.i)(t.UseInputFeatureGeometry))&&console.error("Invalid Schema: TriggerArgs is incorrect!");const n=t.Raster;this.rasterArg=n,n.input?.addEventListener("rfxArgumentChange",this.handleRasterChange.bind(this));const r=t.ClippingType;this.clippingTypeRfxArg=r,r.input?.addEventListener("rfxArgumentChange",(({detail:{value:e}})=>{this.clippingTypeRfxArgValue=e}))}attachHelpClickEventHandlers(){const e=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs.inputArgs.ClippingGeometry.displayName,referenceElement:this.clippingGeometryOrRasterContainer,helpTextID:this.widgetArgs.helpTextIDs?.clip_clippinggeometryorraster}),t=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs.inputArgs.Extent.displayName,referenceElement:this.extentContainer,helpTextID:this.widgetArgs.helpTextIDs?.clip_outputextent});this.helpActionClickEventHandlers.set(o,e),this.helpActionClickEventHandlers.set(p,t)}async setInitialState({inputArgs:e,triggerArgs:t}){const n=t.Raster,r=n?.input,i=await(r?.getSelectedLayer?.());this.extentMapper.inputRasterExtent=(0,l.j)(i);const s=t.ClippingType;this.clippingTypeRfxArgValue=s.value;const o=t.UseInputFeatureGeometry;this.useInputFeatureGeometryRfxArgValue=!!o.value;const u=e.Extent;this.extentvalue=u.value,this.extentMapper.mapExtent=(0,l.j)(this.map?.extent);const p=!(0,a.i)(e.ClippingRaster?.value),d=!(0,a.i)(e.ClippingGeometry?.value),y=!p&&!d,f=1===this.clippingTypeRfxArgValue;p&&f&&(this.extentMapper.clippingRasterGeometryExtent=this.extentvalue),d&&f&&(this.extentMapper.clippingFeatureGeometryExtent=this.extentvalue),this.clippingGeometryTypeSelected=y?h:p?c:g}async handleRasterChange(){const e=this.rasterArg?.input,t=await(e?.getSelectedLayer?.()),n=(0,l.j)(t);this.extentMapper.inputRasterExtent=n}renderClippingGeometryTypes(){const e=[{key:h,label:this.strings.activeMapViewExtent},{key:c,label:this.strings.chooseRaster},{key:g,label:this.strings.chooseGeometry}];return(0,r.h)("rfx-dtex-common-select",{options:e,value:this.clippingGeometryTypeSelected,onRfxArgumentChange:this.handleClippingGeometryTypesChange})}renderClippingGeometryRaster(){const{inputLayers:e}=this.widgetArgs;return(0,r.h)("rfx-dte-raster-input",{ref:e=>this.clippingGeometryRasterArg=e,inputLayers:e,value:this.rasterOrGeometryValueMapper.rasterValue,onRfxArgumentChange:this.handleClippingGeometryRasterChange,rfxBrowseLayerClick:this.widgetArgs.onRfxBrowseLayerClick})}renderClippingGeometryFeature(){const{featureLayers:e}=this.widgetArgs;return(0,r.h)("rfx-dte-feature-select",{ref:e=>this.clippingGeometryFeatureArg=e,inputLayers:e,value:this.rasterOrGeometryValueMapper.geometryValue,onRfxArgumentChange:this.handleClippingGeometryFeatureChange,rfxBrowseLayerClick:this.widgetArgs.onRfxBrowseLayerClick})}render(){return(0,r.h)("div",null,(0,r.h)("calcite-label",{alignment:"start",scale:s.U.Scale,layout:"default",ref:e=>{this.clippingGeometryOrRasterContainer=e}},(0,r.h)("rfx-label",{label:this.widgetArgs.inputArgs.ClippingGeometry.displayName,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(o)()}),this.renderClippingGeometryTypes(),this.clippingGeometryTypeSelected===h?this.renderUpdateActiveMapExtentButton():null,this.clippingGeometryTypeSelected===c?this.renderClippingGeometryRaster():null,this.clippingGeometryTypeSelected===g?this.renderClippingGeometryFeature():null),this.clippingGeometryTypeSelected===g?(0,r.h)("calcite-label",{alignment:"start",scale:s.U.Scale,layout:"inline-space-between",ref:e=>{this.useInputFeatureGeometryContainer=e;const t=this.widgetArgs.onHelpActionClick({heading:this.widgetArgs.triggerArgs.UseInputFeatureGeometry.displayName,referenceElement:this.useInputFeatureGeometryContainer,helpTextID:this.widgetArgs.helpTextIDs?.clip_useinputfeaturesforclippinggeometry});this.helpActionClickEventHandlers.set(u,t)}},(0,r.h)("calcite-checkbox",{checked:this.useInputFeatureGeometryRfxArgValue,ref:this.inituseInputFeatureGeometry}),(0,r.h)("rfx-label",{label:this.widgetArgs.triggerArgs.UseInputFeatureGeometry.displayName,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(u)()})):null,(0,r.h)("calcite-label",{alignment:"start",scale:s.U.Scale,layout:"default",ref:e=>{this.extentContainer=e}},(0,r.h)("rfx-label",{label:this.widgetArgs.inputArgs.Extent.displayName,onRfxLabelHelpActionClick:()=>this.helpActionClickEventHandlers?.get(p)()}),(0,r.h)("rfx-dte-extent",{ref:this.initExtent,value:this.extentvalue})))}static get assetsDirs(){return["t9n"]}get hostElement(){return(0,r.a)(this)}static get watchers(){return{widgetArgs:["onWidgetArgsChange"]}}};n(48363),n(46574),n(46717),n(55139),n(57098),n(78979),n(95876),n(32804),n(53248)},77162:(e,t,n)=>{n.d(t,{A:()=>p,F:()=>c,R:()=>u,T:()=>o,a:()=>f,b:()=>l,c:()=>g,d:()=>h,e:()=>d,g:()=>y,h:()=>m,i:()=>C,l:()=>R,m:()=>E});var r=n(48363),i="[object Map]",a="[object Set]",s=Object.prototype.hasOwnProperty;const l="RasterFunctionTemplate",o="type",u="RasterFunctionVariable",p="arguments",c="function";function g(e){return!!e&&null!=e._object_ref_id}function h(e){return""!==(e=String(e).trim())&&/^[+-]?(\d+)?(\.\d+)?$/.test(e)}function d(e){return e=String(e).trim(),["true","false"].indexOf(e)>=0}function y(e){return e.type&&e.type.toLowerCase().indexOf("recordset")>=0}function f(e){if(!e)return!1;const t=e.type;return[l,u].indexOf(t)>=0||!(!(n=e)||!(n.type&&n.type.toLowerCase().indexOf("colorramp")>=0||n.value&&n.value.type&&n.value.type.toLowerCase().indexOf("colorramp")>=0))||y(e);var n}function m(e){return"feature"===e.type}function A(e){return"imagery-tile"===e.type&&e.sourceJSON.capabilities.toLowerCase().indexOf("tilesonly")<0}function R(e){return"imagery"===e.type||A(e)}function E(e){return"imagery-tile"===e.type&&!A(e)}function C(e){return null==e||"string"==typeof e&&""===e||(0,r.h)(e)&&function(e){if(null==e)return!0;if((0,r.i)(e)&&((0,r.a)(e)||"string"==typeof e||"function"==typeof e.splice||(0,r.b)(e)||(0,r.c)(e)||(0,r.d)(e)))return!e.length;var t=(0,r.g)(e);if(t==i||t==a)return!e.size;if((0,r.e)(e))return!(0,r.f)(e).length;for(var n in e)if(s.call(e,n))return!1;return!0}(e)||Array.isArray(e)&&e.length<1||"object"==typeof e&&!1===(0,r.a)(e)&&function(e){let t=!0;if("object"==typeof e&&!1===(0,r.a)(e))for(const n in e){const r=e?.[n];if(!0===e.hasOwnProperty(n)&&null!=r&&""!==r){t=!1;break}}return t}(e)}},64729:(e,t,n)=>{n.d(t,{C:()=>i,U:()=>r,a:()=>a});const r={Scale:"s",PopoverTimer:60},i={s:"s",m:"m"},a={absolute:"absolute",fixed:"fixed"}}}]);