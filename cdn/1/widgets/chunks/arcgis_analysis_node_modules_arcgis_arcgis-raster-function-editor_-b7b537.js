"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-b7b537"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.he-270225ae.js":
/*!**************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.he-270225ae.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addRaster: () => (/* binding */ addRaster),
/* harmony export */   addScalar: () => (/* binding */ addScalar),
/* harmony export */   breadcrumb: () => (/* binding */ breadcrumb),
/* harmony export */   breadcrumbEditor: () => (/* binding */ breadcrumbEditor),
/* harmony export */   cancel: () => (/* binding */ cancel),
/* harmony export */   category: () => (/* binding */ category),
/* harmony export */   categoryNames: () => (/* binding */ categoryNames),
/* harmony export */   close: () => (/* binding */ close),
/* harmony export */   copy: () => (/* binding */ copy),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   defaultModelName: () => (/* binding */ defaultModelName),
/* harmony export */   definitionQuery: () => (/* binding */ definitionQuery),
/* harmony export */   description: () => (/* binding */ description),
/* harmony export */   deselectFunction: () => (/* binding */ deselectFunction),
/* harmony export */   details: () => (/* binding */ details),
/* harmony export */   dialogTitle: () => (/* binding */ dialogTitle),
/* harmony export */   dontSave: () => (/* binding */ dontSave),
/* harmony export */   enterFURL: () => (/* binding */ enterFURL),
/* harmony export */   enterURL: () => (/* binding */ enterURL),
/* harmony export */   error: () => (/* binding */ error),
/* harmony export */   errorTitle: () => (/* binding */ errorTitle),
/* harmony export */   everyone: () => (/* binding */ everyone),
/* harmony export */   f32PixelType: () => (/* binding */ f32PixelType),
/* harmony export */   f64PixelType: () => (/* binding */ f64PixelType),
/* harmony export */   failedToLoadLayer: () => (/* binding */ failedToLoadLayer),
/* harmony export */   folder: () => (/* binding */ folder),
/* harmony export */   general: () => (/* binding */ general),
/* harmony export */   groupFieldName: () => (/* binding */ groupFieldName),
/* harmony export */   groupItemsBy: () => (/* binding */ groupItemsBy),
/* harmony export */   groups: () => (/* binding */ groups),
/* harmony export */   invalidRFTMessage: () => (/* binding */ invalidRFTMessage),
/* harmony export */   isDataset: () => (/* binding */ isDataset),
/* harmony export */   isPublic: () => (/* binding */ isPublic),
/* harmony export */   item: () => (/* binding */ item),
/* harmony export */   itemGroup: () => (/* binding */ itemGroup),
/* harmony export */   loadingLayer: () => (/* binding */ loadingLayer),
/* harmony export */   matchVariables: () => (/* binding */ matchVariables),
/* harmony export */   mosaic: () => (/* binding */ mosaic),
/* harmony export */   multidimensionalRules: () => (/* binding */ multidimensionalRules),
/* harmony export */   name: () => (/* binding */ name),
/* harmony export */   noTagErrorMsg: () => (/* binding */ noTagErrorMsg),
/* harmony export */   noTitleErrorMsg: () => (/* binding */ noTitleErrorMsg),
/* harmony export */   noTitleTagErrorMsg: () => (/* binding */ noTitleTagErrorMsg),
/* harmony export */   ok: () => (/* binding */ ok),
/* harmony export */   organization: () => (/* binding */ organization),
/* harmony export */   outputPixelType: () => (/* binding */ outputPixelType),
/* harmony export */   owner: () => (/* binding */ owner),
/* harmony export */   parameter: () => (/* binding */ parameter),
/* harmony export */   parameters: () => (/* binding */ parameters),
/* harmony export */   properties: () => (/* binding */ properties),
/* harmony export */   raster: () => (/* binding */ raster),
/* harmony export */   rasterFunctionEditor: () => (/* binding */ rasterFunctionEditor),
/* harmony export */   rasterFunctions: () => (/* binding */ rasterFunctions),
/* harmony export */   rfxLicenseInfo: () => (/* binding */ rfxLicenseInfo),
/* harmony export */   s16PixelType: () => (/* binding */ s16PixelType),
/* harmony export */   s32PixelType: () => (/* binding */ s32PixelType),
/* harmony export */   s8PixelType: () => (/* binding */ s8PixelType),
/* harmony export */   save: () => (/* binding */ save),
/* harmony export */   saveAs: () => (/* binding */ saveAs),
/* harmony export */   saveUtils: () => (/* binding */ saveUtils),
/* harmony export */   savingMessage: () => (/* binding */ savingMessage),
/* harmony export */   scalar: () => (/* binding */ scalar),
/* harmony export */   search: () => (/* binding */ search),
/* harmony export */   selectFeature: () => (/* binding */ selectFeature),
/* harmony export */   selectFunction: () => (/* binding */ selectFunction),
/* harmony export */   selectRaster: () => (/* binding */ selectRaster),
/* harmony export */   serviceURL: () => (/* binding */ serviceURL),
/* harmony export */   setGroupSharing: () => (/* binding */ setGroupSharing),
/* harmony export */   setSharingLevel: () => (/* binding */ setSharingLevel),
/* harmony export */   share: () => (/* binding */ share),
/* harmony export */   shareWith: () => (/* binding */ shareWith),
/* harmony export */   success: () => (/* binding */ success),
/* harmony export */   tagFieldName: () => (/* binding */ tagFieldName),
/* harmony export */   tags: () => (/* binding */ tags),
/* harmony export */   title: () => (/* binding */ title),
/* harmony export */   toolDetailsEditor: () => (/* binding */ toolDetailsEditor),
/* harmony export */   toolEditor: () => (/* binding */ toolEditor),
/* harmony export */   toolModeler: () => (/* binding */ toolModeler),
/* harmony export */   tryAgain: () => (/* binding */ tryAgain),
/* harmony export */   type: () => (/* binding */ type),
/* harmony export */   u16PixelType: () => (/* binding */ u16PixelType),
/* harmony export */   u32PixelType: () => (/* binding */ u32PixelType),
/* harmony export */   u8PixelType: () => (/* binding */ u8PixelType),
/* harmony export */   unionDimensions: () => (/* binding */ unionDimensions),
/* harmony export */   unknownPixelType: () => (/* binding */ unknownPixelType),
/* harmony export */   unsavedTitle: () => (/* binding */ unsavedTitle),
/* harmony export */   unsavedWarningExisting: () => (/* binding */ unsavedWarningExisting),
/* harmony export */   unsavedWarningNew: () => (/* binding */ unsavedWarningNew),
/* harmony export */   userStartDirection: () => (/* binding */ userStartDirection),
/* harmony export */   variables: () => (/* binding */ variables),
/* harmony export */   viewerModeMessage: () => (/* binding */ viewerModeMessage),
/* harmony export */   viewerModeTitle: () => (/* binding */ viewerModeTitle),
/* harmony export */   warning: () => (/* binding */ warning)
/* harmony export */ });
const ok = "אישור";
const cancel = "בטל";
const enterURL = "הזן URL של שירות תמונה";
const serviceURL = "URL של השירות";
const selectRaster = "בחר רסטר";
const failedToLoadLayer = "טעינת השכבה נכשלה";
const loadingLayer = "טוען שכבה";
const selectFeature = "בחר שכבת ישויות";
const enterFURL = "הזן כתובת URL של שירות ישויות";
const addRaster = "הוסף משתנה רסטר";
const addScalar = "הוסף קבוע";
const raster = "רסטר";
const scalar = "Scalar";
const defaultModelName = "‏‫תבניות פונקציית רסטר";
const general = "כללי";
const parameters = "פרמטרים";
const variables = "משתנים";
const name = "שם";
const description = "תאור";
const parameter = "פרמטר";
const isPublic = "IsPublic";
const isDataset = "IsDataset";
const unknownPixelType = "לא ידוע";
const outputPixelType = "סוג פלט הפיקסל";
const u8PixelType = "8 ביט לא חתום";
const s8PixelType = "8 ביט Signed";
const u16PixelType = "16 ביט לא חתום";
const s16PixelType = "16 ביט חתום";
const u32PixelType = "32 ביט לא חתום";
const s32PixelType = "32 ביט חתום";
const f32PixelType = "32 ביט צף";
const f64PixelType = "64 ביט כפול";
const properties = "מאפיינים";
const multidimensionalRules = "כללים רב-ממדיים";
const matchVariables = "התאמת משתנים";
const unionDimensions = "איחוד ממדים";
const rasterFunctionEditor = {
	invalidRFTMessage: "התבנית של פונקציית הרסטר אינה תקינה.",
	rfxArgsEditor: {
		outputRaster: "רסטר פלט",
		raster: "רסטר",
		unsupportedDataTypeWarning: "הארגומנטים הבאים לא מופיעים מכיוון שכרגע הם לא נתמכים.",
		unsupportedFunction: "מכיל פונקציות רסטר שאינן נתמכות כרגע."
	},
	rfxRasterInput: {
		selectLayer: "בחר שכבה",
		browseLayers: "נווט בין שכבות",
		rfxVariable: "RasterFunctionVariable"
	},
	rfxBandCombinationEditor: {
		methodLabel: "שיטה",
		bandLabel: "פס",
		combinationLabel: "שילוב"
	},
	rfxRemapGrid: {
		minimum: "מינימום",
		maximum: "מקסימום",
		output: "פלט",
		noData: "NoData",
		remapValuesLabel: "מיפוי ערכים מחדש"
	},
	rfxNamedRasterEditor: {
		rasterVariables: "משתני רסטר",
		deleteSelectedVars: "הסר את הערכים שנבחרו"
	},
	rfxClippingGeometry: {
		clippingLayer: "גזירה של רסטר",
		clippingRaster: "גזירה של רסטר",
		clippingGeometry: "גיאומטריית גזירה",
		customExtent: "תיחום מותאם אישית",
		outputExtent: "פלט תיחום",
		currentExtent: "תיחום המפה הנוכחי",
		drawLabel: "ציור"
	},
	rfxCustomExtent: {
		top: "עליון",
		right: "ימין",
		bottom: "תחתון",
		left: "שמאל"
	},
	rfxRasterArrayEditor: {
		moveUp: "הזז למעלה",
		moveDown: "הזז למטה",
		remove: "הסרה"
	},
	rfxStatisticsGrid: {
		stdDev: "סטיית תקן",
		min: "מינימום",
		max: "מקסימום",
		mean: "ממוצע"
	},
	rfxWeightedSumTableEditor: {
		weightedSumTable: "טבלת סכום משוקלל",
		id: "מזהה",
		layer: "שכבה",
		field: "שדה",
		weight: "משקל",
		value: "ערך",
		selectLayer: "בחר שכבה"
	},
	rfxWeightedOverlayTableEditor: {
		weightedOverlayTable: "טבלת חפיפה משוקללת",
		id: "מזהה",
		layer: "שכבה",
		field: "שדה",
		influence: "השפעה",
		sumOfInfluence: "סכום ההשפעה",
		value: "ערך",
		remapTable: "מפה מחדש טבלה",
		scale: "קנה מידה",
		scales: "קני מידה",
		selectRaster: "בחר רסטר"
	},
	rfxFeatureSelect: {
		addFeatureLayer: "עיין לאיתור שכבת ישויות",
		addPointLayer: "עיין לאיתור שכבת נקודות"
	},
	rfxFieldSelect: {
		value: "ערך",
		count: "מונה"
	},
	rfxAttributeTable: {
		tableType: "סוג טבלה",
		manual: "ידני",
		external: "חיצוני",
		minVal: "ערך מינימלי",
		maxVal: "ערך מקסימלי",
		baseClassName: "שם בסיס הקבוצה",
		colorScheme: "סכמת צבעים",
		defaultClassName: "תווית_",
		generateTable: "צור טבלה",
		browseTable: "עיין בטבלה",
		value: "ערך",
		classname: "ClassName",
		color: "צבע"
	},
	rfxFieldNumberSwitchable: {
		number: "מספרי",
		field: "שדה",
		string: "מחרוזת",
		linearUnit: "יחידה לינארית"
	},
	rfxPropertySet: {
		name: "שם",
		value: "ערך"
	},
	rfxConversionGrid: {
		size: "גודל"
	},
	rfxTransposeBit: {
		bitPattern: "דפוס Bit",
		outputBit: "ביט פלט",
		inputBit: "ביט קלט"
	},
	rfxSpatialReference: {
		placeHolder: "שיפור לפי מילת מפתח",
		coordinateSystem: "מערכת קואורדינטות",
		gcs: "מערכת קואורדינטות גיאוגרפית",
		pcs: "מערכת קואורדינטות מוטלת",
		vcs: "מערכת קואורדינטות אנכית"
	}
};
const rfxLicenseInfo = "ניתן להשתמש בתבנית פונקציית רסטר זו כדי לעבד את התצלומים באמצעות ArcGIS Image Server.";
const rasterFunctions = {
	rfx: {
		aCosHName: "ACosH",
		aCosHSnip: "מחשב את הקוסינוס ההיפרבולי ההפוך של התאים ברסטר.",
		aCosHDesc: "הפונקציה מחשבת את הקוסינוס ההיפרבולי ההפוך של הפיקסלים ברסטר.",
		aCosName: "ACos",
		aCosSnip: "מחשב את הקוסינוס ההפוך של הפיקסלים ברסטר.",
		aCosDesc: "פונקציית רסטר זו מחשבת את הקוסינוס ההפוך של התאים ברסטר. בחישובים מתמטיים, לכל הפונקציות הטריגונומטריות יש טווח מוגדר של ערכי קלט חוקיים, שנקרא התחום. גם לערכי הפלט של כל פונקציה יש טווח מוגדר. בכלי זה, התחום הוא [‎-1, 1], והטווח הוא [‎0, pi].",
		aSinHName: "ASinH",
		aSinHSnip: "מחשב את הסינוס ההיפרבולי ההפוך של התאים ברסטר.",
		aSinHDesc: "הפונקציה מחשבת את הסינוס ההיפרבולי ההפוך של הפיקסלים ברסטר.",
		aSinName: "ASin",
		aSinSnip: "מחשב את הסינוס ההפוך של התאים ברסטר.",
		aSinDesc: "הפונקציה מחשבת את הסינוס ההפוך של הפיקסלים ברסטר.",
		aTan2Name: "ATan2",
		aTan2Snip: "מחשב את הטנגנס ההפוך של התאים ברסטר (בהתבסס על x,y).",
		aTan2Desc: "הפונקציה מחשבת את הטנגנס ההפוך (מבוסס על x,y) של הפיקסלים ברסטר.",
		aTanHName: "ATanH",
		aTanHSnip: "מחשב את הטנגנס ההיפרבולי ההפוך של התאים ברסטר.",
		aTanHDesc: "הפונקציה מחשבת את הטנגנס ההיפרבולי ההפוך של הפיקסלים ברסטר.",
		aTanName: "ATan",
		aTanSnip: "מחשב את הטנגנס ההפוך של התאים ברסטר.",
		aTanDesc: "הפונקציה מחשבת את הטנגנס ההפוך של הפיקסלים ברסטר.",
		absName: "Abs",
		absSnip: "מחשב את הערך המוחלט של התאים ברסטר.",
		absDesc: "הפונקציה Abs מחשבת את הערך האבסולוטי של הפיקסלים ברסטר.",
		reflectanceName: "השתקפות נראית",
		reflectanceSnip: "ממיר תמונות גולמיות אל ערכי הגבול העליון של האטמוספירה על ידי לקיחה בחשבון של מאפייני חיישן, מיקום השמש וזמן קליטת הנתונים.",
		reflectanceDesc: "הפונקציה הזו מתאימה את ערכי המספרים הדיגיטליים (DN) של בהירות התמונה לפי כמה חיישני לוויינים. ההתאמות מבוססות על גובה השמש, תאריך הצילום ומאפייני חיישנים לצורך הגדרת ה-gain וה-bias בכל ערוץ. הפונקציה הזו משמשת להתאמת ערכי ההחזרה, או הבהירות, של חלק מחיישני הלוויינים, בהתאם לתאורה של הסצנה ולהגדרות של החיישנים. התמונות מותאמות לתנאי תאורה תאורטיים נפוצים, כך שלא אמורה להיות שונות גדולה בין סצנות מתאריכים שונים ומחיישנים שונים. יש לכך יתרון מבחינת סיווג תצלומים, איזון צבעים ויצירת הפסיפס. בפונקציה הזו ניתן להשתמש רק עם תצלומים מסוימים. החיישנים הרלוונטיים הם Landsat MSS, Landsat TM, Landsat ETM+, Landsat 8, IKONOS, QuickBird, GeoEye-1, RapidEye, DMCii, WorldView-1, WorldView-2, SPOT 6, ו-Pleiades.<div><br/>הפונקציה מבצעת שני תיקונים. הראשון מבוסס על הגדרות ה-gain. ערכי הבהירות המקוריים נוצרים מחדש מערכי התמונה על ידי היפוך משוואות ה-gain. התיקון השני מתייחס להפרשים בזווית השמש ובבהירות. ערכי הבהירות המקוריים מותאמים לתנאי תאורה שכיחים על ידי נורמליזציה של סצנות שצולמו בתנאי תאורה שונים. באופן כללי, סוג נתוני הפלט של התמונות דומה לזה של הקלט, אך ערכי הפלט נמוכים מערכי הקלט והם נגזרים לטווח הנתונים החוקי.‎</div>‎",
		argStatisticsName: "סטטיסטיקות Arg",
		argStatisticsSnip: "מחשב סטטיסטיקות Arg כולל Arg מקסימום, Arg מינימום, חציון Arg ומשך.",
		argStatisticsDesc: "הפונקציה מחשבת נתונים סטטיסטיים של arg. יש ארבע שיטות של פונקציית ArgStatistics‏: ArgMax,‏ ArgMin‏, ArgMedian ו- Duration.",
		arithmeticName: "חשבוני",
		arithmeticSnip: "מבצע פעולת חישוב בין שני רסטרים או רסטר ו-scalar.",
		arithmeticDesc: "הפונקציה Arithmetic מבצעת פעולה אריתמטית בין שני רסטרים או בין רסטר לבין סקאלר ולהיפך.",
		aspectSlopeName: "היבט-שיפוע",
		aspectSlopeSnip: "יצירת רסטר המציג בו-זמנית את ההיבט (כיוון) והשיפוע (תלילות) של משטח רציף, כפי שמוצג במוגל גובה דיגיטלי.",
		aspectSlopeDesc: "הפונקציה 'היבט-שיפוע' (Aspect Slope) יוצרת שכבת רסטר שמציגה סימולטנית את ההיבט ואת השיפוע של משטח. ההיבט מזהה את הכיוון במורד השיפוע של ערך השינוי המקסימלי מכל פיקסל לעומת השכנים שלו. אפשר לחשוב על מפנה כעל כיוון השיפוע. הערכים של רסטר הפלט יהיו כיוון המצפן של ההיבט, והם מיוצגים על ידי צבע. השיפוע מייצג את שיעור השינוי בגובה לכל פיקסל במודל הגובה הדיגיטלי (DEM). השיפוע מייצג את מידת השיפוע של משטח ויש לו חלוקה לשלוש מחלקות שמוצגות באמצעות רוויית הצבע (בהירות).<div><br/>ערכי הפיקסלים ברסטר היבט-שיפוע מייצגים שילוב של היבט ושיפוע. פיקסלים שהערך שלהם קטן מ- 20 נחשבים שטוחים ומופיעים באפור. ערכי היבט-שיפוע של 21 ומעלה יוצגו על ידי אפשרויות רוויה שונות: 21 עד 30 —רוויה של שיפוע נמוך, 31 עד 40—רוויה של שיפוע בינוני, ומעל 41 —רוויה של שיפוע גבוה</div>",
		aspectName: "מפנה",
		aspectSnip: "מציג את הכיוון שאליו פונה הפיקסל, היכן ש-0 הוא צפון מוחלט והזוויות גדלות עם כיוון השעון אל 360.",
		aspectDesc: "פונקציית ההיבט (Aspect) מזהה את הכיוון במורד השיפוע של ערך השינוי המקסימלי מכל פיקסל לעומת השכנים שלו. אפשר לחשוב על מפנה כעל כיוון השיפוע. הערכים של רסטר הפלט יהיו כיוון המצפן של המפנה.<div><br/>הקלט של פונקציה זו הוא Input Raster. לעתים קרובות משתמשים בפונקציית ההיבט על מודל גובה דיגיטלי (DEM). כברירת מחדל, ההיבט מופיע כתמונה בגווני אפור. ניתן להוסיף את הפונקציה Colormap כדי לציין סכמת צבעים מסוימת או לאפשר למי שרואה את הפסיפס לשנות את הסימבולוגיה לסכמת צבעים משלו.‎</div>‎",
		tableName: "טבלת מאפיינים",
		tableSnip: "נעשה שימוש בטבלה כדי לתת שם ולייצג את הערכים בסט הנתונים. העמודות בטבלה הם ערכים שמופרדים באמצעות פסיק: PixelValue, AttributeName, RedValue, GreenValue, BlueValue.",
		tableDesc: "הפונקציה של טבלת מאפיינים (Attribute Table) מאפשרת להגדיר טבלת מאפיינים כדי לייצג סט נתונים פסיפס של ערוץ אחד או סט נתונים של רסטר. <div><br/>כך אפשר למשל להציג תצלומים שעברו סיווג לפי ייעודי קרקע, למשל שטחי יערות, ביצות, שטחי יבולים או שטחים אורבניים. בנוסף, אם הטבלה מכילה שדות שנקראים אדום, ירוק וכחול, ערכים בשדות אלו ישמשו כמפת צבעים בעת הרינדור של התצלום.‎</div>‎",
		bandArithmeticName: "חישוב ערוץ",
		bandArithmeticSnip: "מחשב אינדקסים באמצעות נוסחאות מוגדרות מראש או ביטויים המוגדרים על ידי המשתמש.",
		bandArithmeticDesc: "הפונקציה 'חישוב ערוץ' (Band Arithmetic) מבצעת פעולה מתמטית על הערוצים של סט נתוני הרסטר. ניתן לבחור אלגוריתמי קבועים מראש או להזין נוסחה משלך בשורה אחת. האופרטורים הנתמכים הם -,+,/,*, והפעולה האונארית -.",
		thresholdName: "סף בינארי",
		thresholdSnip: "מארגן נתונים רציפים לחזית ולרקע על ידי צמצום השונות בין שתי הקבוצות.",
		thresholdDesc: "כאשר לסט נתוני רסטר יש התפלגות בימודלית, פונקציה זו יוצרת רסטר חדש שמחלק את הנתונים לשתי מחלקות נפרדות. היא יוצרת מחלקה של ערכים נמוכים עם פיקסלים שחורים ומחלקה של ערכים גבוהים עם פיקסלים לבנים.",
		bitwiseAndName: "Bitwise And",
		bitwiseAndSnip: "מבצע פעולת Bitwise And על הערכים הבינאריים של שני רסטרי קלט.",
		bitwiseAndDesc: "הפונקציה Bitwise And מבצעת פעולה של Bitwise And על הערכים הבינאריים של שני רסטרי קלט",
		bitwiseLeftShiftName: "Bitwise Left Shift",
		bitwiseLeftShiftSnip: "מבצע פעולת Bitwise Left Shift על הערכים הבינאריים של שני רסטרי קלט.",
		bitwiseLeftShiftDesc: "הפונקציה Bitwise Left Shift מבצעת פעולה של Bitwise Left Shift על הערכים הבינאריים של שני רסטרי קלט",
		bitwiseNotName: "Bitwise Not",
		bitwiseNotSnip: "הפונקציה מבצעת פעולה של Bitwise Not (השלמה) על הערכים הבינאריים של שני רסטרי קלט.",
		bitwiseNotDesc: "הפונקציה מבצעת פעולה של Bitwise Not (השלמה) על הערכים הבינאריים של רסטר הקלט.",
		bitwiseOrName: "Bitwise Or",
		bitwiseOrSnip: "מבצע פעולת Bitwise Or על הערכים הבינאריים של שני רסטרי קלט.",
		bitwiseOrDesc: "הפונקציה מבצעת פעולה של Bitwise Or על הערכים הבינאריים של שני רסטרי קלט. ",
		bitwiseRightShiftName: "Bitwise Right Shift",
		bitwiseRightShiftSnip: "מבצע פעולת Bitwise Right Shift על הערכים הבינאריים של שני רסטרי קלט.",
		bitwiseRightShiftDesc: "הפונקציה מבצעת פעולה של Bitwise Right Shift על הערכים הבינאריים של שני רסטרי קלט.",
		bitwiseXorName: "Bitwise Xor",
		bitwiseXorSnip: "מבצע פעולת Bitwise eXclusive על הערכים הבינאריים של שני רסטרי קלט.",
		bitwiseXorDesc: "הפונקציה מבצעת פעולה של Bitwise eXclusive Ir על הערכים הבינאריים של שני רסטרי קלט.",
		booleanAndName: "Boolean And",
		booleanAndSnip: "הפונקציה מבצעת פעולה של Boolean And על ערכי התאים של שני רסטרי קלט. אם שני ערכי הקלט הם true ‏(nonzero), ערך הפלט הוא 1. אם אחד מערכי הקלט או שניהם הם false ‏(zero), ערך הפלט הוא 0.",
		booleanAndDesc: "הפונקציה מבצעת פעולה של Boolean And על הערכים הבינאריים של שני קלטים. אם שני ערכי הקלט הם true ‏(nonzero), ערך הפלט הוא 1. אם אחד מערכי הקלט או שניהם הם false ‏(zero), ערך הפלט הוא 0. ",
		booleanNotName: "Boolean Not",
		booleanNotSnip: "הפונקציה מבצעת פעולה של Boolean Not (השלמה) על ערכי התאים של רסטר הקלט. אם ערכי הקלט הם true ‏(nonzero), ערך הפלט הוא 0. אם ערכי הקלט הם false ‏(zero), הפלט הוא 1.",
		booleanNotDesc: "הפונקציה מבצעת פעולה של Boolean Not (השלמה) על ערכי הפיקסלים של רסטר הקלט. אם ערכי הקלט הם true ‏(nonzero), ערך הפלט הוא 0. אם ערכי הקלט הם false ‏(zero), ערך הפלט הוא 1.",
		booleanOrName: "Boolean Or",
		booleanOrSnip: "הפונקציה מבצעת פעולה של Boolean Or על ערכי התאים של שני רסטרי קלט. אם אחד מערכי הקלט או שניהם true ‏(nonzero), ערך הפלט הוא 1. אם שני ערכי הקלט הם false ‏(zero), הפלט הוא 0.",
		booleanOrDesc: "הפונקציה מבצעת פעולה של Boolean Or על ערכי התאים של שני רסטרי קלט. אם אחד מערכי הקלט או שניהם true ‏(nonzero), ערך הפלט הוא 1. אם שני ערכי הקלט הם false ‏(zero), ערך הפלט הוא 0.",
		booleanXorName: "Boolean Xor",
		booleanXorSnip: "מבוצעת פעולה של Boolean eXclusive Or על ערכי התאים של שני רסטרי קלט. אם ערך קלט אחד הוא true ‏(non-zero) והערך השני הוא false ‏(zero), ערך הפלט הוא 1. אם שני ערכי הקלט הם true ‏או ששניהם false, ערך הפלט הוא 0.",
		booleanXorDesc: "הפונקציה מבצעת פעולה של Boolean eXclusive Or על ערכי התאים של שני רסטרי קלט. אם ערך קלט אחד הוא true ‏(nonzero) והערך השני הוא false ‏(zero), ערך הפלט הוא 1. אם שני ערכי הקלט הם true ‏או ששניהם false ‏, ערך הפלט הוא 0.",
		bufferedRasterName: "Buffered",
		bufferedRasterSnip: "יוצר חיץ בין הבלוקים של הפיקסלים האחרונים שבוצעה גישה אליהם.",
		bufferedRasterDesc: "הפונקציה Buffered משמשת לצורך אופטימיזציה של הביצועים של שרשרות פונקציות מורכבות. היא מאחסנת בזיכרון את הפלט של חלק משרשרת הפונקציות שבוצעו לפניה. <div><br/>הכנס את הפונקציה הזו בעורך הפונקציות כאשר תרצה לאחסן את הפלט.‎</div>‎",
		rasterCalculatorName: "מחשבון",
		rasterCalculatorSnip: "מחשב רסטר מתוך ביטוי מתמטי המבוסס על רסטר.",
		rasterCalculatorDesc: "הפונקציה 'מחשבון' (Calculator) מאפשרת ליצור ולהריץ ביטויים ולשלב אותם בשרשרות פונקציות.",
		cellStatisticsName: "סטטיסטיקות תא",
		cellStatisticsSnip: "חישוב סטטיסטיקה לכל תא מכמה רסטרים. הנתונים הסטטיסטיים הזמינים הם רוב, מקסימום, ממוצע, חציון, מינימום, מיעוט, אחוזון, טווח, סטיית תקן, סכום ושונות.",
		cellStatisticsDesc: "הפונקציה הזו מחשבת נתונים סטטיסטיים מכמה רסטרים, לפי פיקסלים. הנתונים הסטטיסטיים הזמינים הם majority‏, maximum‏, mean‏, median‏, minimum‏, minority‏, range‏, standard deviation‏, sum ו-variety.",
		classifyName: "סווג",
		classifySnip: "שיוך של כל פיקסל למחלקה. שילוב מידע ממקורות משניים כמו תמונה שעברה סגמנטציה.",
		classifyDesc: "פונקציית רסטר זו מסווגת סט נתוני רסטר לפי קובץ Esri Classifier Definition ‏(‎.ecd) וקלט מכמה סטים של נתוני רסטר. קובץ ה-‎.ecd המשמש את הפונקציה Classify מכיל את כל המידע לסט נתונים ולמסווג מסוים, והוא נוצר על ידי כלים המאמנים לצורך סיווג, כמו Train Support Vector Machine או Train Random Trees.",
		clipName: "גזירה",
		clipSnip: "קובע את היקף הרסטר על ידי שימוש קואורדינטות או סט נתונים אחר.",
		clipDesc: "פונקציה זו גוזרת רסטר באמצעות צורה מלבנית לפי התיחום המוגדר או שהיא גוזרת את הרסטר לצורה של מחלקת ישויות פוליגונים שהן הקלט. הצורה המגדירה את הקליפ יכולה להגדיר את תיחום הרסטר או לגזור אזור מתוך הרסטר.",
		colorspaceConversionName: "המרת מודל צבע",
		colorspaceConversionSnip: "ממיר רסטר מ-RGB אל HSV ולהפך.",
		colorspaceConversionDesc: "הפונקציה 'המרת מודל צבע' (Color Model Conversion) ממירה את מודל הצבע של התצלום משיטת HSV לשיטת RGB (אדום, ירוק וכחול), או להיפך.<div><br/>אפשר להשתמש בפונקציה הזו בסט נתוני פסיפס.‎</div>‎",
		colormapToRGBName: "Colormap ל- RGB",
		colormapToRGBSnip: "המרת רסטר עם ערוץ אחד עם Colormap לרסטר עם שלושה ערוצים (אדום, ירוק וכחול).",
		colormapToRGBDesc: "הפונקציה ממירה רסטר של ערוץ אחד עם מפת צבעים לרסטר של שלושה ערוצים (אדום, ירוק וכחול).<div><br/>פונקציה זו עוזרת כשצריכים ליצור רסטר של שלושה ערוצים מרסטר של ערוץ אחד באמצעות מפת צבעים. הערכים במפת הצבעים ישמשו ליצירת ערוצי האדום, הירוק והכחול. אפשר להשתמש בפונקציה הזו בסט נתוני פסיפס.‎</div>‎",
		colormapName: "Colormap",
		colormapSnip: "משנה את ערכי הפיקסלים בכדי להציג את המידע הרסטרי כתמונה בגווני אפור או אודם,ירוק,כחול (RGB) בהתבסס על ה- Color map או מדרג צבעים.",
		colormapDesc: "הפונקציה של מפת הצבעים (Colormap) היא סוג של מעבד נתוני רסטר. היא ממירה את ערכי הפיקסלים כדי להציג את נתוני הרסטר בגווני אפור או בצבעי RGB לפי סכמת הצבעים או לפי צבעים מסוימים בקובץ של מפת צבעים. ניתן להשתמש במפת צבעים כדי לייצג נתונים לאחר ניתוח, למשל תמונה שעברה סיווג או בעת הצגת מפה טופוגרפית (או תמונת אינדקס עם סריקת צבעים).<div><br/>מפות צבעים מכילות סט ערכים שמשויכים לצבעים המשמשים להצגת רסטר של ערוץ אחד באופן קונסיסטנטי שתואם לאותם הצבעים. כל ערך פיקסל משויך לצבע המוגדר כסט של ערכי RGB. מפות צבעים מסוגלות לתמוך בכל עומק ביט פרט לנקודה צפה. הן גם תומכות בערכים חיוביים ושליליים, ויכולות להכיל ערכים חסרים של מיפוי צבעים. בעת הצגה של סט נתונים לפי מפת צבעים שמכילה ערכים חסרים, הפיקסלים עם הערכים החסרים פשוט לא יוצגו.‎</div>‎",
		complexName: "מורכב",
		complexSnip: "מחלץ את הגודל ממספרים מורכבים.",
		complexDesc: "פונקציה זו מחשבת עוצמה לפי ערכים מורכבים.<div><br/>השימוש בפונקציה נעשה לרוב עם תצלומי RADAR שיש להם סוג נתונים מורכב. אפשר להשתמש בה בסט נתוני פסיפס.‎</div>‎",
		compositeBandName: "הרכב ערוצים",
		compositeBandSnip: "משלב מספר רב של סטים של נתונים עם רסטר רב ערוצי אחד.",
		compositeBandDesc: "הפונקציה 'הרכב ערוצים' (Composite Band) מאפשרת לשלב רסטרים וליצור תצלום רב-ערוצי.",
		conName: "Con",
		conSnip: "מבצעת פעולה של תנאי כמו If,‏ Then‏, Else. כאשר נעשה שימוש באופרטור Con, בדרך כלל צריכות לפחות שתי פונקציות שקשורות ביניהן, כאשר פונקציה אחת מציינת את הקריטריונים והשניה היא האופרטור Con שמשתמש בקריטריונים וקובע מהם ערכי true או false שצריכים להיות.",
		conDesc: "הפונקציה Con מגדירה את הפיקסלים של רסטר הפלט לפי הערכה מסוג \"מה/אם\" (ifelse) של כל אחד מהפיקסלים של הקלט. היא מחזירה ערכי פיקסלים מה-True Raster אם ההערכה המותנית היא true‏ (1) או שהיא מחזירה את ערכי הפיקסלים מה-False Raster אם ההערכה המותנית היא false ‏(0). קריטריון זה מוגדר על ידי הפלט של הפונקציה המתמטית הלוגית, שיהיה רסטר הקלט.",
		constantName: "קבוע",
		constantSnip: "מייצר רסטר וירטואלי עם ערך פיקסל בודד.",
		constantDesc: "הפונקציה הזו יוצרת רסטר ויזואלי עם ערך פיקסל יחיד שניתן להשתמש בו בתבניות פונקציית רסטר ולעבד סט נתוני פסיפס.<div><br/>הערך הקבוע משמש לכל ערך פיקסל ברסטר.‎</div>‎",
		contourName: "קו גובה",
		contourSnip: "יוצר קווי גובה",
		contourDesc: "הפונקציה 'קו גובה' (Contour) יוצרת קווי גובה על ידי חיבור נקודות בעלות אותו גובה מסט נתוני גובה של רסטר. קווי הגובה הם קווים בעלי ערך אחיד (איזו) שנוצרים כרסטרים לצורך הצגה ויזואלית. המאפיינים העיקריים הבאים הם שהופכים את הפונקציה הזו ליעילה במיוחד: קווי גובה נוצרים במהירות ובאופן דינמי ממאגרי נתונים גדולים מאד, כמו World Elevation. ניתן \"להחליק\" קווי גובה וליצור מראה אסתטי יותר ויחד עם זאת לשמור על רמת הדיוק של קווי הגובה. יש אפשרות לשלוט באופן דינמי על המרווחים בין קווי הגובה. אפשרויות הפלט כוללות קווי גובה, קווי אינדקס ומשטחים מלאים של גבהים.<div><br/>יצירת שכבה של קווי גובה בצורת מוצר רסטר היא פעולה שיכולה להיות יעילה במגוון רחב של יישומים, שכן ניתן להניח את קווי הגובה על מפה וכך להציג מידע על פני השטח מבלי להסתיר את המידע שמתחת. יש לכך יישומים בתחומים שונים כמו הנדסה, חקלאות וניהול מים.‎</div>‎",
		contrastBrightnessName: "ניגודיות ובהירות",
		contrastBrightnessSnip: "מתאים את הניגודיות והבהירות של הרסטר.",
		contrastBrightnessDesc: "הפונקציות של ניגודיות (Contrast) ובהירות (Brightness) משפרות את מראה הרסטר בכך שהן מאפשרות לשנות את הניגודיות והבהירות בתוך התמונה. הבהירות מגדילה את התאורה הכללית של התמונה - למשל אם הופכים צבעים כהים לבהירים יותר וצבעים בהירים ללבן, ואילו בעזרת הניגודיות ניתן לכוונן את ההבדל בין הצבעים הכהים יותר לבין הצבעים הבהירים יותר.<div><br/>באמצעות פונקציה זו ניתן לשנות את ערכי הפיקסלים. כלומר, יש להשתמש בפונקציה כשרוצים לשפר את מראה הנתונים, ולא אם רוצים להשתמש בנתונים לצורך ניתוח שדורש התייחסות לערכי הפיקסלים המקוריים. הפונקציה יעילה כאשר מפרסמים את הנתונים בצורה של שירות תמונות שמיועד לשימוש ביישומים שלא מאפשרים לשנות ניגודיות או בהירות של תצלומים, או כדי לוודא שהמידע מוצג לפי ההגדרות הרצויות.‎</div>‎",
		convolutionName: "עיוות",
		convolutionSnip: "מיישם פילטר כדי לחדד, לטשטש, לזהות קצוות, להחליק או להפעיל גרדיאנט לאורכו של רסטר.",
		convolutionDesc: "הפונקציה 'עיוות' (Convolution, קונוולוציה) מבצעת סינון של ערכי פיקסלים בתמונה, וניתן להשתמש בה לצורך חידוד התמונה, טשטוש התמונה או זיהוי קצוות בתמונה, או שיפורים אחרים מבוססי kernel. השימוש במסננים נעשה כדי לשפר את איכות תמונת הרסטר על ידי מחיקת נתוני \"רעש\" או שיפור תכונות מסוימות בנתונים. מסנני העיוות האלה פועלים על צורת ליבה נעה או חופפת (חלון או שכונה), למשל 3 על 3. מסנני העיוות פועלים לפי חישוב של ערך הפיקסלים לפי המשקלים של הפיקסלים השכנים.",
		corridorName: "מסדרון",
		corridorSnip: "חישוב של סכום העלויות המצטברות עבור שני רסטרים של קלט מצטבר.",
		corridorDesc: "פונקציית המסדרון (Corridor ) מחשבת את סכום העלויות המצטברות עבור שני רסטרים של עלות מצטברת של קלט. אמנם ניתן להשתמש בכל שני רסטרים כקלט, אך כדי להשיג תוצאה משמעותית רצוי שאלו יהיו שני רסטרים של עלות מצטברת של פלט. הסדר של שני הקלטים אינו רלוונטי.",
		cosHName: "CosH",
		cosHSnip: "מחשב את הקוסינוס ההיפרבולי של התאים ברסטר.",
		cosHDesc: "הפונקציה מחשבת את הקוסינוס ההיפרבולי של הפיקסלים ברסטר.",
		cosName: "Cos",
		cosSnip: "מחשב את הקוסינוס של תא ברסטר.",
		cosDesc: "הפונקציה מחשבת את הקוסינוס של הפיקסלים ברסטר.",
		costAllocationName: "הקצאת עלות",
		costAllocationSnip: "חשב, עבור כל תא, את מקור העלות הנמוכה ביותר על בסיס העלות המצטברת הנמוכה ביותר לאורך שטח עלות.",
		costAllocationDesc: "הפונקציה של הקצאת עלות (Cost Allocation) מחשבת עבור כל תא את מקור העלות הנמוכה ביותר על בסיס העלות המצטברת הנמוכה ביותר במשטח עלות.",
		costBackLinkName: "קישור עלות חוזרת",
		costBackLinkSnip: "מגדיר את השכן שנמצא בתא הבא בנתיב שבו תיצבר העלות הנמוכה ביותר, אל מקור העלות הנמוכה ביותר.",
		costBackLinkDesc: "הפונקציה 'קישור עלות חוזרת' (Cost Back Link) מגדירה את השכן שנמצא בתא הבא בנתיב שבו תיצבר העלות הנמוכה ביותר, אל מקור העלות הנמוכה ביותר.<div><br/>הרסטר של הקישור החוזר מכיל ערכים בין אפס לשמונה, שמגדירים את הכיוון או מזהים את התא השכן הבא (התא שאחריו) לאורך נתיב עם העלות הנמוכה ביותר מתא כדי להגיע אל אל מקור העלות הנמוכה ביותר. אם הנתיב עובר אל התא השכן מימין, התא יקבל את הערך 1, את הערך 2 עבור התא שנמצא באלכסון מימין למטה, וכך הלאה עם כיוון השעון. הערך 0 שמור לתאי מקור.‎</div>‎",
		costDistanceName: "מרחק עלות",
		costDistanceSnip: "חשב את מקור מרחק העלות הנמוך ביותר על בסיס מקור העלות הנמוך ביותר לאורך שטח עלות.",
		costDistanceDesc: "הפונקציה 'מרחק עלות' (Cost Distance) מחשבת את המרחק של העלות המצטברת הנמוכה ביותר של כל תא ממקור העלות הנמוכה ביותר במשטח עלות, או אליו.",
		costPathName: "נתיב עלות",
		costPathSnip: "מחשב את הנתיב עם העלות הנמוכה ביותר ממקור ליעד.",
		costPathDesc: "הפונקציה הגלובלית של 'נתיב עלות' (Cost Path) מחשבת את הנתיב עם העלות הנמוכה ביותר ממקור ליעד.<div><br/>פונקציה זו יוצרת רסטר פלט שמתעד את הנתיב עם העלות הנמוכה ביותר או נתיבים ממיקומים נבחרים אל תא המקור הקרוב ביותר שמוגדר במשטח העלות המצטברת, במונחים של מרחק עלות.‎</div>‎",
		curvatureName: "עקומה",
		curvatureSnip: "מחשב את העקומה של משטח הרסטר, כאשר אופציונאלית אפשר לכלול את פרופיל ותכנית העקומה.",
		curvatureDesc: "הפונקציה 'עקומה' (Curvature) מציגה את הצורה או העקומה של השיפוע. חלק ממשטח יכול להיות קעור או קמור. ניתן לראות זאת אם בודקים את ערך העקומה. העקומה מחושבת לפי הנגזרת השנייה של המשטח.<div><br/>ניתן להשתמש בפלט של העקומה כדי לתאר את המאפיינים הפיזיים של אגן ניקוז, למשל, כדי להבין תהליכי בלייה או נגר עילי. ניתן להשתמש בערך העקומה כדי לזהות תבניות בלייה בקרקע, או פיזור של מים באדמה. עקומת הפרופיל משפיעה על האצה או האטה של הזרימה, וכך משפיעה על תהליכי בלייה וריבוד. ה-planform של העקומה משפיע על ההתכנסות או ההתבדרות של הזרימה.‎</div>‎",
		divideName: "חלק",
		divideSnip: "מחלק את הערכים של שני הרסטרים על בסיס של כל תא בנפרד.",
		divideDesc: "הפונקציה 'חילוק' (Divide) מחלקת את הערכים של שני רסטרים על בסיס של כל תא בנפרד.",
		elevationVoidFillName: "מילוי חלל גובה",
		elevationVoidFillSnip: "מייצר פיקסלים היכן שקיימים חורים בנתוני הגובה שלך.",
		elevationVoidFillDesc: "הפונקציה 'מילוי חלל גובה' (Elevation Void Fill) משמשת ליצירת פיקסלים במקרה שיש חורים בנתוני הגובה.<div><br/>חורים קיימים כאשר אין נקודות שנאספו באזור המיוצג על ידי פיקסל ברסטר. הסיבה לחורים יכולה להיות גופי מים, בחירה בסוג מחלקה או אי-הכללה. מילוי החורים מבוצע בדרך כלל כאשר יוצרים משטח של פני קרקע.‎</div>‎",
		equalToName: "שווה ל",
		equalToSnip: "מבצעת פעולה יחסית מסוג \"שווה ל\" על שני קלטים, על כל תא בנפרד. היא מחזירה את הערך 1 לתאים שבהם הרסטר הראשון שווה לרסטר השני, ואת הערך 0 כאשר התאים שונים זה מזה.",
		equalToDesc: "הפונקציה מבצעת פעולה מסוג \"שווה ל\" על שני רסטרים, על כל תא בנפרד. היא מחזירה את הערך 1 לפיקסלים שבהם הרסטר הראשון שווה לרסטר השני, ואת הערך 0 כאשר הפיקסלים שונים זה מזה.",
		eucAllocationName: "הקצאה אוקלידית",
		eucAllocationSnip: "חשב, עבור כל תא, את המקור הקרוב ביותר על בסיס מרחק אוקלידי.",
		eucAllocationDesc: "הפונקציה הקצאה אוקלידית (Euclidean Allocation) מחשבת, עבור כל תא, את המקור הקרוב ביותר בהתאם למרחק אוקלידי.",
		eucDirectionName: "כיוון אוקלידי",
		eucDirectionSnip: "מחשב, עבור כל תא, את המרחק במעלות אל המקור הקרוב ביותר.",
		eucDirectionDesc: "הפונקציה 'כיוון אוקלידי' (Euclidean Direction) מחשבת, עבור כל תא, את הכיוון במעלות אל המקור הקרוב ביותר. <div><br/>הכיוון מחושב מכל מרכז תא למרכז תא המקור הקרוב אליו ביותר. טווח הערכים הוא בין 0 מעלות ל- 360 מעלות, כאשר 0 שמור לתאי מקור. כיוון מזרח (ימין) הוא 90 והערכים גדלים עם כיוון השעון (180 הוא דרום, 270 הוא מערב, 360 הוא צפון).‎</div>‎",
		eucDistanceName: "מרחק אוקלידי",
		eucDistanceSnip: "חשב, עבור כל תא, את המרחק האוקלידי למקור הקרוב ביותר.",
		eucDistanceDesc: "הפונקציה 'מרחק אוקלידי' (Euclidean Distance ) מחשבת לכל תא את המרחק האוקלידי למקור הקרוב ביותר.",
		exp10Name: "Exp10",
		exp10Snip: "מחשב את בסיס 10 האקספוננציאלי של התאים ברסטר.",
		exp10Desc: "הפונקציה Exp10 מחשבת את המעריך בחזקה 10 של הפיקסלים ברסטר.",
		exp2Name: "Exp2",
		exp2Snip: "מחשב את בסיס 2 האקספוננציאלי של התאים ברסטר.",
		exp2Desc: "הפונקציה מחשבת את המעריך בחזקה 2 של הפיקסלים ברסטר.",
		expName: "Exp",
		expSnip: "מחשב את הבסיס האקספוננציאלי של התאים ברסטר.",
		expDesc: "הפונקציה מחשבת את המעריך בחזקה של הפיקסלים ברסטר.",
		extractBandName: "חלץ ערוצים",
		extractBandSnip: "מציין עם אלו ערוצים לעבוד כאשר משתמשים בסטים של נתונים רבי ערוצי.",
		extractBandDesc: " הפונקציה 'חילוץ ערוצים' (Extract Bands) מאפשרת לחלץ ערוץ אחד או כמה ערוצים מסט נתוני רסטר רב-ערוצי, או לשנות את סדר הערוצים.<div><br/>ניתן להשתמש בפונקציה 'חילוץ ערוצים' לפני פונקציות אחרות, כמו Arithmetic, כדי לקבוע אלו ערוצים ישמשו כקלט בפונקציה הבאה.‎</div>‎",
		fillName: "מילוי",
		fillSnip: "ממלא קולטנים במשטח רסטר כדי להסיר פגמים קטנים בנתונים.",
		fillDesc: "הפונקציה הגלובלית 'מילוי' (Fill) מאתרת וממלאת שקעים ושיאים ברסטר של משטח גובה במטרה להסיר פגמים קטנים בנתונים. הפונקציה מבצעת מילוי בתהליך איטרטיבי, עד שכל השקעים מתמלאים במגבלת ערכי Z שצוינה.<div><br/>כאשר משטח גובה נוצר בכלים של מיפוי אורתוגרפי או באמצעים אחרים, לעתים קרובות יש שגיאות קטנות אך משמעותיות בצורה של השקעים והשיאים בנתונים. בפוטוגרמטריה, מתייחסים אל שקעים ושיאים כאל ערכים חריגים. מכיוון שנתוני המשטח משמשים לרוב לצורך הדמיה, למשל הדמיה הידרולוגית, חשוב לתקן את המקומות שבהם יש שגיאות מסוג זה וליצור ערכים שדומים לנתונים מהסביבה הקרובה.‎</div>‎",
		floatName: "צף",
		floatSnip: "המרה של כל ערך של פיקסל ברסטר לייצוג עם נקודה צפה.",
		floatDesc: "הפונקציה 'צף' (Float) ממירה כל ערך של פיקסל ברסטר לייצוג עם נקודה צפה.",
		flowAccumulationName: "זרימה מצטברת",
		flowAccumulationSnip: "יוצרת רסטר של זרימה מצטברת לכל פיקסל. ניתן להחיל פקטור לפי הצורך.",
		flowAccumulationDesc: "הפונקציה זרימה מצטברת גלובלית (Flow Accumulation) יוצרת רסטר של זרימה מצטברת לכל פיקסל, כפי שנקבע על ידי צבירת המשקל של כל הפיקסלים שזורמים לאותו פיקסל במורד הזרימה. אם לא מצוין משקל רסטר, משקל של 1 יחול על כל פיקסל, וערך הפיקסלים ברסטר הפלט הוא מספר הפיקסלים שזורמים לכל פיקסל.<div><br/>פיקסלים של פלט עם זרימה מצטברת גבוהה הם אזורים של זרימה מרוכזת, וניתן להשתמש בהם לזיהוי ערוצי זרימה. פיקסלים של פלט שבהם הזרימה היא אפס הם נקודות טופוגרפיות גבוהות וניתן להשתמש בהם כדי לזהות רכסים.‎</div>‎",
		flowDirectionName: "כיוון זרימה",
		flowDirectionSnip: "יוצר רסטר של כיווני זרימה מכל תא אל התא השכן שנמצא במורד הזרם בשיפוע התלול ביותר.",
		flowDirectionDesc: "אחד הדברים החשובים בזיהוי מאפיינים הידרולוגיים של משטח הוא היכולת לקבוע את כיוון הזרימה מכל פיקסל ברסטר. הפונקציה 'כיוון זרימה' (Flow Direction) ברסטר מתייחסת למשטח כקלט ויוצרת רסטר של כיוון זרימה מכל פיקסל אל השכן בעל השיפוע הגדול ביותר במורד הזרם. הפונקציה של כיוון הזרימה תומכת בשלוש שיטות של הדמיית זרימה: D8 (שמונה כיוונים), Multi-Flow Direction ‏(MFD), ו-D-Infinity ‏(DINF). ",
		flowDistanceName: "מרחק זרימה",
		flowDistanceSnip: "מחשב לכל תא את המרחק האופקי והמרחק האנכי המינימליים במורד עבור תאים בנחל או בנהר שאליו מגיעה הזרימה.",
		flowDistanceDesc: "לכל פיקסל, הפונקציה מחשבת את המרחק האנכי או האופקי המינימלי במורד הזרם אל פיקסלים בנהר או בנחל שאליו מתרחשת הזרימה. אם יש רסטר של כיווני זרימה, הכיוון במורד הזרם מוגבל לאלו המוגדרים ברסטר הקלט של כיווני זרימה. הפלט הוא רסטר של מרחק זרימה.",
		focalName: "נתונים סטטיסטיים של מיקוד",
		focalSnip: "מבצע חישוב focal statistics עבור כל פיקסל בתמונה, בהתבסס על הגדרת סביבת ההתמקדות.",
		focalDesc: "הפונקציה 'נתונים סטטיסטיים של מיקוד' (Focal Statistics) מבצעת חישוב נתונים סטטיסטיים של מיקוד עבור כל פיקסל בתמונה, לפי סביבת המיקוד שנקבעה.",
		geometricName: "גיאומטרי",
		geometricSnip: "מגביר את הדיוק המיקומי של סט נתונים על ידי התחשבות בגובה.",
		geometricDesc: "הפונקציה 'גיאומטרי' (Geometric) hוצרת תמונה מתוקנת מבחינה אורתוגרפית בהתאם להגדרת החיישנים ולמודל פני הקרקע. היא מגדילה את רמת הדיוק של סט נתונים על ידי התחשבות בגובה.",
		grayscaleName: "אפור",
		grayscaleSnip: "המרה של התמונה הרב-ערוצית לתמונה חד-ערוצית בגווני אפור.",
		grayscaleDesc: "פונקציה זו ממירה את התמונה הרב-ערוצית לתמונה חד-ערוצית בגווני אפור.<div><br/>פונקציה זו מעניקה משקלים מסוימים לכל אחד מערוצי הקלט, ומבצעת נרמול של תמונת הפלט. בדרך כלל משתמשים במשקלים מכיוון שלחלק מהערוצים יש חשיבות למשתנים שתלויה ביישום. למשל, הערוץ הכחול מכיל לעתים קרובות יותר רעש מערוצים אחרים.‎</div>‎",
		greaterThanEqualName: "גדול מאשר שווה",
		greaterThanEqualSnip: "מבצעת פעולה יחסית מסוג \"גדול מ- או שווה ל-\" על שני קלטים, על כל תא בנפרד. מחזירה את הערך 1 לתאים כאשר הרסטר הראשון גדול מהרסטר השני או שווה לו, ואת הערך 0 אם זה לא המקרה.",
		greaterThanEqualDesc: "הפונקציה מבצעת פעולה מסוג \"גדול מ- או שווה ל-\" על שני קלטים, על כל תא בנפרד. היא מחזירה את הערך 1 לפיקסלים כאשר הרסטר הראשון גדול מהרסטר השני או שווה לו, ואת הערך 0 לפיקסלים כאשר הרסטר הראשון אינו גדול מהשני ואינו שווה לו.",
		greaterThanName: "גדול מ",
		greaterThanSnip: "מבצעת פעולה יחסית מסוג \"גדול מ-\" על שני קלטים, על כל תא בנפרד. מחזירה את הערך 1 לתאים שבהם הרסטר הראשון גדול מהרסטר השני, ואת הערך 0 אם זה לא המקרה.",
		greaterThanDesc: "הפונקציה מבצעת פעולה מסוג \"גדול מ-\" על שני קלטים, על כל תא בנפרד. מחזירה את הערך 1 לפיקסלים כאשר הרסטר הראשון גדול מהרסטר השני, ואת הערך 0 לפיקסלים כאשר הרסטר הראשון אינו גדול מהשני.",
		heatIndexName: "סיווג חום",
		heatIndexSnip: "‏שקלול של טמפרטורת האוויר והלחות היחסית בסביבה כדי לחשב את הטמפרטורה המורגשת.",
		heatIndexDesc: "הפונקציה מחשבת טמפרטורה מורגשת לפי טמפרטורת הסביבה והלחות היחסית. הטמפרטורה המורגשת מתוארת לרוב כמה שגוף האדם מרגיש.<div><br/>מדד זה יכול להיות שימושי לחישוב הסכנות הקשורות למצבים רפואיים כמו התכווצות שרירים, התייבשות, חום קיצוני או שבץ או התקף לב בימים חמים או לחים במיוחד. כאשר הלחות היחסית גבוהה, הזיעה הנפלטת מהגוף מתקשה להתאדות, וכך קשה לאנשים להתקרר בצורה טבעית. מפות של יועצי חום או אזהרות הן לרוב תוצאה של סיווג מחדש של מדד עומס החום לפי קטגוריות, כאשר ככל שעומס החום גבוה יותר, מדובר באזהרה חמורה ולא רק המלצה.‎</div>‎",
		hillshadeName: "הצללה",
		hillshadeSnip: "יוצרת ייצוג תלת ממדי של פני השטח, תוך התייחסות למיקום היחסי של השמש לצורך הצללות בתמונה",
		hillshadeDesc: "הפונקציה 'הצללה' (Hillshade) יוצרת ייצוג תלת ממדי בגווני אפור של פני השטח, כאשר יש התייחסות למיקום היחסי של השמש לצורך הצללות בתמונה. <div><br/>ההצללה היא טכניקה לצורך הצגה של פני השטח בהתאם למקור אור ולשיפועים וההיבטים במשטח הגובה. זוהי שיטה איכותנית להצגת הטופוגרפיה והיא לא מציינת ערכי גובה מוחלטים. ‎</div>‎",
		intName: "Int",
		intSnip: "המרה של כל ערך של פיקסל ברסטר למספר שלם.",
		intDesc: "הפונקציה Int ממירה כל ערך של פיקסל ברסטר למספר שלם.",
		interpolateIrregularDataName: "אינטרפולציה של נתונים לא סדירים",
		interpolateIrregularDataSnip: "אינטרפולציה מתוך עננים של נקודות או גרידים לא סדירים.",
		interpolateIrregularDataDesc: "חלק ממערכי הנתונים של netCDF או HDF מאחסנים את המיקומים בתור מערכים במרווחים לא סדירים של פיקסלים או נתוני נקודות. בעת הוספה של סט נתונים כזה לסט נתונים של פסיפס, הפונקציה 'אינטרפולציה של נתונים לא סדירים' מתייחסת לנתונים הלא סדירים ודוגמת אותם כך שכל פיקסל יהיה בגודל אחיד ובצורת מרובע.<div><br/>בעת הוספת משתנים מ-netCDF או HDF לסט נתוני הפסיפס, יבוצע אימות אוטומטי אם הנתונים מסודרים. אם לא, ניתן להשתמש בפונקציה של אינטרפולציה של נתונים לא סדירים כדי להמיר את הנתונים הלא סדירים לרסטר מסודר. ניתן לשנות את שיטת האינטרפולציה ואת גודל התאים שבהם משתמשת הפונקציה של אינטרפולציה של נתונים לא סדירים. במקרה של נתוני רסטר סדירים, אין צורך באינטרפולציה ותבוצע קריאה של הנתונים כפי שהם.‎</div>‎",
		isNullName: "ריק",
		isNullSnip: "קובעת אלו ערכים מרסטר הקלט נחשבים NoData, עבור כל אחד מהפיקסלים. מחזירה ערך של 1 אם ערך הקלט הוא NoData ואת הערך 0 לפיקסלים שאינם NoData.",
		isNullDesc: "הפונקציה Is Null קובעת אלו ערכים מרסטר הקלט נחשבים NoData, עבור כל אחד מהפיקסלים. היא מחזירה ערך של 1 אם ערך הקלט הוא NoData ואת הערך 0 לפיקסלים שאינם NoData.",
		kernelDensityName: "צפיפות Kernel",
		kernelDensitySnip: "חשב את שטח העוצמה ליחידה מישויות נקודה או קו באמצעות פונקציית Kernel כדי לבצע התאמה של שטח קוני חלק לכל נקודה או קו.",
		kernelDensityDesc: "הפונקציה מחשבת את שטח העוצמה ליחידה מישויות נקודה או קו באמצעות פונקציית Kernel כדי לבצע התאמה של שטח קוני חלק לכל נקודה או קו.",
		keyMetadataName: "מפתח מטה-דאטה",
		keyMetadataSnip: "החלפה או הוספה של מפתח מטה-דאטה של רסטר בשרשרת פונקציות.",
		keyMetadataDesc: "הפונקציה מאפשרת להכניס או להחליף מטה-דאטה של רסטר.<div><br/>המידע במטה-דאטה משמש לעזור ליישום בכמה תהליכים וברינדור, כולל מתן מידע מועיל כמו שם החיישן, שמות ערוצים או כיסוי עננים - מידע שקשור לתצלומים.‎</div>‎",
		shortestPathName: "הנתיב עם העלות הנמוכה ביותר",
		shortestPathSnip: "מבצע ניתוח מרחק עלות באמצעות קלט מקור וקלט של יעדים. לאחר מכן משתמשים בתוצאות הניתוח כדי לקבוע את המסלול עם העלות הנמוכה ביותר בין נקודת מקור לבין נקודת יעד.",
		shortestPathDesc: "הפונקציה 'הנתיב עם העלות הנמוכה ביותר' (Least Cost Path) מחשבת את הנתיב עם העלות הנמוכה ביותר ממקור ליעד. מרחק העלות המצטברת הנמוכה ביותר מחושב לכל פיקסל במשטח העלות, ממנו אל המקור הקרוב יותר. הפונקציה יוצרת רסטר פלט שמתעד את הנתיב עם העלות הנמוכה ביותר או נתיבים ממיקומים נבחרים אל תא המקור הקרוב ביותר שמוגדר במשטח העלות המצטברת, במונחים של מרחק עלות.<div><br/>כל נתיב של העלות הנמוכה ביותר מקבל ערך כאשר הוא מזוהה בתהליך הסריקה. הפיקסל האחרון ברסטר המקור של נתיב עלות מקבל את הערך 1. הנתיב הראשון מקבל את הערך 3, השני 4 וכך הלאה. כאשר כמה נתיבים מתמזגים ועוברים את המרחק שנותר חזרה אל מקור באותו נתיב, המקטע שבו שני נתיבים נעים יחד מקבל את הערך 2. החלק שבו יש מיזוג של נתיבים לא יכול לקבל ערך של אחד מהנתיבים, מכיוון שהוא שייך לשני נתיבים.‎</div>‎",
		lessThanEqualName: "מפחות מאשר שווה",
		lessThanEqualSnip: "מבצעת פעולה יחסית מסוג \"קטן מ- או שווה ל-\" על שני קלטים, על כל תא בנפרד. מחזירה את הערך 1 לתאים כאשר הרסטר הראשון קטן מהרסטר השני או שווה לו, ואת הערך 0 אם זה לא המקרה.",
		lessThanEqualDesc: "הפונקציה מבצעת פעולה מסוג \"קטן מ- או שווה ל-\" על שני קלטים, על כל תא בנפרד. היא מחזירה את הערך 1 לפיקסלים כאשר הרסטר הראשון קטן מהרסטר השני או שווה לו, ואת הערך 0 לפיקסלים כאשר הרסטר הראשון אינו קטן מהשני ואינו שווה לו.",
		lessThanName: "פחות מ",
		lessThanSnip: "מבצעת פעולה יחסית מסוג \"קטן מ-\" על שני קלטים, על כל תא בנפרד. מחזירה את הערך 1 לתאים כאשר הרסטר הראשון קטן מהרסטר השני, ואת הערך 0 אם זה לא המקרה.",
		lessThanDesc: "הפונקציה מבצעת פעולה מסוג \"קטן מ-\" על שני קלטים, על כל תא בנפרד. היא מחזירה את הערך 1 לפיקסלים כאשר הרסטר הראשון קטן מהרסטר השני, ואת הערך 0 לפיקסלים כאשר הרסטר הראשון אינו קטן מהשני.",
		lnName: "Ln",
		lnSnip: "מחשב את הלוגריתם הטבעי (בסיס e) עבור תאים ברסטר.",
		lnDesc: "הפונקציה מחשבת את הלוגריתם הטבעי (בסיס e) של כל פיקסל ברסטר.",
		log10Name: "Log10",
		log10Snip: "מחשב את בסיס 10 הלוגריתמי של התאים ברסטר.",
		log10Desc: "הפונקציה Log10 מחשבת את הלוגריתם בסיס 10 של כל פיקסל ברסטר.",
		log2Name: "Log2",
		log2Snip: "מחשב בסיס 2 הלוגריתמי של התאים ברסטר.",
		log2Desc: "הפונקציה מחשבת את הלוגריתם בסיס 2 של הפיקסלים ברסטר.",
		lookupName: "חיפוש",
		lookupSnip: "יוצר רסטר חדש על-ידי חיפוש ערכים שנמצאו בשדה אחר בטבלה של רסטר הקלט.",
		lookupDesc: "הפונקציה יוצרת רסטר חדש על-ידי חיפוש ערכים שנמצאו בשדה אחר בטבלה של רסטר הקלט.",
		mlClassifyName: "ML Classify",
		mlClassifySnip: "סיווג של תצלומים באמצעות בדיקה של כל פיקסל. פיקסלים מעורבים משויכים למאפיין עם האחוז הגבוה ביותר באותו פיקסל.",
		mlClassifyDesc: "הפונקציה ML Classify מאפשרת לבצע סיווג מפוקח, תוך שימוש באלגוריתם סיווג של הסבירות המקסימלית, על סט נתוני רסטר או סט נתוני פסיפס. הפונקציה דורשת קובץ חתימות לסיווג.",
		maskName: "מיסוך",
		maskSnip: "הגדר ערכים שאינך רוצה שיוצגו.",
		maskDesc: "פונקציית רסטר זו קובעת ערכים שאינך רוצה להציג ברסטר. באמצעות פונקציית המסכה אפשר לציין ערך NoData, אחד או יותר, או טווח של ערכי פיקסל חוקיים. ",
		minusName: "חיסור",
		minusSnip: "מחסיר את הערך של רסטר הקלט השני מהערך של רסטר הקלט הראשון על בסיס של כל תא בנפרד.",
		minusDesc: "פונקציית החיסור (Minus) מחסרת את הערך של רסטר הקלט השני מהערך של רסטר הקלט הראשון עבור כל אחד מהפיקסלים.",
		modName: "Mod",
		modSnip: "מוצא את השארים (modulo) של הרסטר הראשון כאשר הוא מחולק על ידי הרסטר השני על בסיס של כל תא בנפרד.",
		modDesc: "הפונקציה Mod מוצאת את השארית (modulo) של הרסטר הראשון לאחר חילוק ברסטר השני, לכל פיקסל בנפרד. סדר הקלטים חשוב ומשפיע על התוצאה.",
		mosaicRastersName: "רסטרי מוזאיקה",
		mosaicRastersSnip: "מחבר ביחד סט של נתוני רסטר כדי לייצור סט נתונים אחד.",
		mosaicRastersDesc: "הפונקציה רסטרי מוזאיקה (Mosaic Rasters) יוצרת תמונת פסיפס מכמה תצלומים. כאשר יש חפיפה בין תצלומים, יש כמה שיטות שניתן לבחור מתוכן כדי לקבוע אלו תצלומים יוצגו.",
		ndviColorizedName: "NDVI Colorized",
		ndviColorizedSnip: "מייצר סט נתונים רב ערוצי המייצג את בריאות הצמחייה, בהתבסס על ההבדל בין ערוצי האדום והאינפרא-אדום.",
		ndviColorizedDesc: "הפונקציה NDVI Colorized מפעילה את הפונקציה NDVI על תמונת הקלט ולאחר מכן משתמשת במפת צבעים או בסקלת צבעים כדי להציג את התוצאה.",
		ndviName: "NDVI",
		ndviSnip: "חישוב של Normalized Difference Vegetation Index ‏(NDVI).",
		ndviDesc: "הפונקציה NDVI יוצרת סט נתונים של ערוץ אחד שמייצג את מצב הצמחיה, לפי ההפרשים בין הערוץ האדום לבין ערוץ האינפרא-אדום.<div><br/>המדד NDVI הוא מדד מקובל שמאפשר ליצור תמונה המציגה את רמת הירוק, ונקראת גם ביומסה יחסית. המדד מתייחס לניגודיות המאפיינים בין שני ערוצים מסט הנתונים של הרסטר המולטי-ספקטרלי: ספיגת הכלורופיל בערוץ האדום והרפלקטיביות הגבוהה של חומרי הצמחיה בערוץ הקרוב לאינפרא-אדום (NIR). ערכי NDVI נמוכים במיוחד או שליליים מייצגים אזורים שבהם אין צמחיה, כמו ענן, מים או שלג. ערכים נמוכים במיוחד מייצגים אזורים שהם אין צמחיה או שיש מעט מאד צמחיה, כמו בטון, סלעים או קרקע חשופה. ערכים בינוניים מייצגים אזורים של שיחים ועשביה. ערכים גבוהים מייצגים אזורי יערות וצמחיה סבוכה.‎</div>‎",
		negateName: "Negate",
		negateSnip: "משנה את הסימן (מכפיל במינוס 1) של ערכי התא של רסטר הקלט על בסיס של כל תא בנפרד.",
		negateDesc: "הפונקציה Negate משנה את הסימן(כפול -1) של ערכי הפיקסלים של רסטר הקלט ",
		nibbleName: "כרסום",
		nibbleSnip: "מחליף תאי רסטר שמתאימים למיסוך עם הערכים של השכנים הקרובים אליהם ביותר.",
		nibbleDesc: "הפונקציה הגלובלית 'כרסום' (Nibble) מאפשרת לשייך אזורים נבחרים ברסטר לערך של השכן הקרוב ביותר. זו פעולה שיכולה להיות שימושית לעריכת אזורים של רסטר שבהם יכולים להיות נתונים שגויים.",
		notEqualName: "אינו שווה",
		notEqualSnip: "מבצעת פעולה יחסית מסוג \"לא שווה ל-\" על שני קלטים, על כל תא בנפרד. מחזירה את הערך 1 לתאים כאשר הרסטר הראשון אינו שווה לרסטר השני, ואת הערך 0 אם זה לא המקרה.",
		notEqualDesc: "הפונקציה מבצעת פעולה מסוג \"לא שווה ל-\" על שני קלטים, על כל תא בנפרד. היא מחזירה את הערך 1 לפיקסלים כאשר הרסטר הראשון שונה מהרסטר השני, ואת הערך 0 לפיקסלים כאשר הרסטר הראשון שווה לשני.",
		pansharpeningName: "Pansharpen",
		pansharpeningSnip: "שיפור מלאכותי של הרזולוציה המרחבית של תמונה רב-ערוצית על ידי איחוד עם תמונה פנכרומטית ברזולוציה גבוהה יותר.",
		pansharpeningDesc: "הפונקציה Pansharpening משתמשת בתמונה פנכרומטית ברזולוציה גבוהה יותר או בערוץ רסטר כדי לאחד עם סט נתונים ברזולוציה נמוכה יותר של רסטר רב-ערוצי, במטרה להגביר את הרזולוציה המרחבית של התמונה הרב-ערוצית.<div><br/>המטרה של pan sharpening היא ליצור תמונה באיכות ויזואלית גבוהה יותר. מכיוון שהטכניקות משנות מאפיינים רדיומטריים וספקטרליים של תצלומים רב-ערוציים, יש להשתמש בתצלומים שעברו Pansharpening בזהירות לצורך ניתוח אנליטי של חישה מרחוק.‎</div>‎",
		pathAllocationName: "הקצאת מרחק מסלול",
		pathAllocationSnip: "מחשב את המקור בעל העלות הנמוכה ביותר עבור כל תא על בסיס העלות המצטברת הנמוכה ביותר לאורך שטח עלות, תוך שקלול המרחק בשטח בשילוב עם פקטורים של עלות אופקית ואנכית.",
		pathAllocationDesc: "הפונקציה 'הקצאת מרחק מסלול' (Path Distance Allocation) מחשבת את המקור הקרוב ביותר לכל תא לפי העלות המצטברת הנמוכה ביותר במשטח עלות, תוך שקלול המרחק במשטח בשילוב עם פקטורים של עלות אופקית ואנכית.",
		pathBackLinkName: "קישור לאחור של מרחק נתיב",
		pathBackLinkSnip: "מגדיר את השכן שנמצא בתא הבא בנתיב עם העלות המצטברת הנמוכה ביותר אל המקור עם העלות הנמוכה ביותר, תוך שקלול המרחק בשטח בשילוב עם פקטורים של עלות אופקית ואנכית.",
		pathBackLinkDesc: "הפונקציה 'קישור לאחור של מרחק נתיב' (Path Distance Back Link) מגדירה את הכיווניות של השכן שנמצא בתא הבא בנתיב עם העלות המצטברת הנמוכה ביותר אל המקור הקרוב ביותר, תוך שקלול המרחק במשטח בשילוב עם פקטורים של עלות אופקית ואנכית.",
		pathDistanceName: "מרחק נתיב",
		pathDistanceSnip: "חישוב, עבור כל תא, של מרחק העלות המצטברת הנמוכה ביותר מהמקור עם העלות הנמוכה ביותר, תוך שקלול המרחק בשטח בשילוב עם פקטורים של עלות אופקית ואנכית.",
		pathDistanceDesc: "הפונקציה 'מרחק נתיב' (Path Distance) מחשבת לכל תא את העלות המצטברת הנמוכה ביותר אל המקור הקרוב ביותר, תוך שקלול המרחק בשטח בשילוב עם פקטורים של עלות אופקית ואנכית.",
		plusName: "חיבור",
		plusSnip: "מוסיף (מסכם) את הערכים של שני רסטרים על בסיס של כל תא בנפרד.",
		plusDesc: "הפונקציה 'חיבור' (Plus) מסכמת את הערכים של שני רסטרים, לכל תא בנפרד.",
		powerName: "חזקה",
		powerSnip: "מעלה את ערכי התא ברסטר אל הכוח של הערכים שנמצאו ברסטר אחר.",
		powerDesc: "הפונקציה 'חזקה' (Power) מעלה את ערכי הפיקסלים ברסטר בחזקה של הערכים שנמצאים ברסטר אחר.",
		radarCalibrationName: "כיול רדאר",
		radarCalibrationSnip: "ממיר RADARSAT-2 backscatter.",
		radarCalibrationDesc: "ניתן להשתמש בפונקציה הזו כדי לכייל תצלומי RADARSAT-2 בסט נתוני פסיפס או במוצר רסטר. כיול מבוצע על תצלומי רדאר כדי שערכי הפיקסלים יהיו ייצוג נכון של פיזור לאחור של הרדאר.",
		rasterInfoName: "מידע רסטר",
		rasterInfoSnip: "משנה את תכונות הרסטר, כגון עומק ביט, ערך NoData, גודל תא וכדומה.",
		rasterInfoDesc: "הפונקציה של נתוני הרסטר (Raster Info) פותחת דו-שיח עם מאפיינים של סט נתונים, כמו מספר העמודות והשורות, מספר הערוצים, סוג הפיקסלים, התיחום והייחוס המרחבי. ניתן לערוך מאפיינים אלו על ידי בחירה בסט נתוני רסטר שישמשו בתור תבנית. ",
		rasterizeAttributesName: "בצע רסטר של מאפיינים",
		rasterizeAttributesSnip: "העשרה של רסטר על ידי הוספת ערוצים שנגזרים מערכים של מאפיינים מסוימים, מטבלה חיצונית או משירות ישויות.",
		rasterizeAttributesDesc: "הפונקציה 'רסטר של מאפיינים' (Rasterize Attribute) מעשירה רסטר על ידי הוספת ערוצים שנגזרים מערכים של מאפיינים מסוימים, מטבלה חיצונית או משירות ישויות. ניתן גם לציין רסטר של אזור ואת מזהה האזור המשויך כדי להפעיל בדיקת מידע לפי אזורים.",
		rasterizeFeatureClassName: "המר ישויות לראסטר",
		rasterizeFeatureClassSnip: "המרת ישויות לרסטר.",
		rasterizeFeatureClassDesc: "הפונקציה ממירה ישויות של פוליגון, קו או נקודה לשכבת רסטר.<div><br/>כל ישות מקבלת ערך פיקסל לפי ה- OBJECTID שלה (ברירת המחדל). לחלופין, ערכי הפיקסלים יכולים להיות לפי טבלת מאפיינים שמוגדרת על ידי המשתמש בטבלת המאפיינים של ישות הקלט.‎</div>‎",
		recastName: "הטל מחדש",
		recastSnip: "שינוי הפרמטרים של שרשרת פונקציות בסט נתוני פסיפס או בשירות תמונות. יש לכך שימוש לעתים קרובות בסט נתוני LAS כדי להימנע מהצורך ליצור סט נתוני פסיפס נפרד לייצוגים שונים של פני קרקע.",
		recastDesc: "הפונקציה 'הטל מחדש' (Recast) משמשת לשינוי דינמי של פרמטר הפונקציה המשמש את סט נתוני הפסיפס או שירות התמונות, בלי לבצע שינוי פיזי.",
		regionGroupName: "קבוצת אזורים",
		regionGroupSnip: "עבור כל תא בפלט, מתועדת הזהות של האזור המחובר שאליו תא זה שייך. לכל אזור מוקצה מספר ייחודי.",
		regionGroupDesc: "הפונקציה הגלובלית 'קבוצת אזורים' (Region Group) מתעדת עבור כל תא בפלט את זהות האזור המחובר שאליו תא זה שייך. לכל אזור מוקצה מספר ייחודי.<div><br/>האזור הראשון שנסרק מקבל את הערך 1, השני מקבל את הערך 2, וכך הלאה עד שכל האזורים מקבלים ערכים. הסריקה מבוצעת משמאל ימינה, ומלמעלה למטה. הערכים המשויכים לאזורי הפלט נקבעים לפי הרצף של תהליך הסריקה.‎</div>‎",
		regionGrowName: "הגדלת אזור",
		regionGrowSnip: "מגדיל אזורים מנקודות דגימה.",
		regionGrowDesc: "הפונקציה 'הגדלת אזור' (Region Grow) מקבצת פיקסלים שכנים לקבוצות בהתאם לרדיוס שמוגדר בנקודת הדגימה. קבוצת הפיקסלים או האוביקט מקבל ערך מילוי מוגדר.",
		remapName: "מפה מחדש",
		remapSnip: "משנה את ערכי הפיקסל על ידי יישום של ערכים חדשים אל הטווחים של ערכי הפיקסל או על ידי שימוש בטבלה חיצונית.",
		remapDesc: "הפונקציה 'מפה מחדש' (Remap) מאפשרת לשנות או לסווג מחדש את ערכי הפיקסלים של נתוני הרסטר. ניתן לעשות זאת על ידי ציון טווח של ערכי פיקסלים כדי למפות אותם לערך פיקסל בפלט, או על ידי שימוש בטבלה שממפה את ערכי הפיקסלים לערכי פלט.",
		reprojectName: "הטל מחדש",
		reprojectSnip: "שינוי ההיטל של סט נתוני הרסטר, סט נתוני הפסיפס או פריט הרסטר בסט נתוני פסיפס. כמו כן היא יכולה לדגום מחדש את הנתונים לגודל תא חדש ולהגדיר את מקור הצירים.",
		reprojectDesc: "הפונקציה 'הטל מחדש' (Reproject) משנה את ההיטל של סט נתוני הרסטר, סט נתוני הפסיפס או פריט הרסטר בסט נתוני פסיפס. כמו כן היא יכולה לדגום מחדש את הנתונים לגודל תא חדש ולהגדיר את מקור הצירים.<div><br/>ניתן להשתמש בפונקציה Reproject כאשר יוצרים מטמון מסט נתוני רסטר או פסיפס שאינו נמצא בהיטל הנדרש. למשל, כשיוצרים שירות תמונות מטמון שיכול להשתלב ביישומים עם שירותי מטמון אחרים, חשוב שכולם יהיו באותו היטל. לעתים קרובות זהו היטל Web Mercator. מכיוון שאי אפשר לעשות היטל מחדש של סט נתוני פסיפס, אפשר לעשות אחת משתי הפעולות - ליצור סט נתוני פסיפס לייחוס בהיטל הרצוי, או להוסיף את הפונקציה Reproject לשרשרת הפונקציות של סט נתוני הפסיפס. דוגמה אחרת משתמשת בפונקציה זו בפריט רסטר בסט נתוני פסיפס. כאשר משתמשים בפונקציה Cached Raster, מומלץ להכניס את הפונקציה Reproject כדי שהמטמון ייווצר בהיטל החדש. ניתן להכניס למטמון פריטי רסטר בסט נתוני פסיפס כאשר העיבוד הוא אינטנסיבי ואתה מנסה לפרסם שירות תמונות מהיר בלי להעביר למטמון את כל שירות התמונות.‎</div>‎",
		resampleName: "דגימה מחדש",
		resampleSnip: "משנה את גודל התא של הרסטר.",
		resampleDesc: "הפונקציה 'דגימה מחדש' (Resample) משנה את גודל התא, סוג הדגימה או שניהם.<div><br/>יש להשתמש בפונקציה זו רק עם דרישות חישוב מסוימות. למשל, כשמחשבים את הרוח או את כיוון העוצמה הנוכחי, מה שדורש דגימה מחדש מרזולוציית המקור.‎</div>‎",
		roundDownName: "עגל כלפי מטה",
		roundDownSnip: "מחזיר את ערך המספר השלם הנמוך הבא, שמיוצג כנקודה צפה, עבור כל תא ברסטר.",
		roundDownDesc: "הפונקציה 'עיגול כלפי מטה' (Round Down) מחזירה את המספר השלם הנמוך יותר הבא, בתור ערך עם נקודה צפה, לכל פיקסל ברסטר.",
		roundUpName: "עגל כלפי מעלה",
		roundUpSnip: "מחזירה את המספר השלם הגבוה יותר הבא, שמיוצג כנקודה צפה, לכל תא ברסטר.",
		roundUpDesc: "הפונקציה 'עיגול כלפי מעלה' (Round Up) מחזירה את המספר השלם הגבוה יותר הבא, בתור ערך עם נקודה צפה, לכל פיקסל ברסטר.",
		segmentMeanShiftName: "תנודת מקטע ממוצע",
		segmentMeanShiftSnip: "מקבץ פיקסלים שכנים עם מאפיינים ספקטרליים דומים ביחד אל תוך מקטעים.",
		segmentMeanShiftDesc: "הפונקציה הזו מזהה אוביקטים, ישויות או מקטעים בתצלומים על ידי קיבוץ יחד של פיקסלים סמוכים בעלי מאפיינים דומים מבחינה ספקטרלית ומרחבית. ניתן לשלוט בכמות ההחלקה הספקטרלית והמרחבית כדי לקבל ישויות בעלות עניין.",
		s1RadiometricCalibrationName: "כיול רדיומטרי של Sentinel-1",
		s1RadiometricCalibrationSnip: "מבצע סוגים שונים של כיול רדיומטרי על נתוני Sentinel-1.",
		s1RadiometricCalibrationDesc: "פונקציית רסטר זו מבצעת שלושה כיולים שונים של נתוני Sentinel 1, כולל beta nought ו-gamma, והפלט שלה היא סט נתונים מכויל. המטרה של כיול SAR היא לספק תצלומים שבהם ערכי הפיקסלים יכולים להיות קשורים ישירות לפיזור לאחור של הרדאר בסצנה. אמנם תצלומים ללא כיול SAR מספיקים לשימוש איכותני, אך תצלומי SAR מכוילים הם חיוניים לשימוש כמותני בנתוני SAR.<div><br/>עיבוד נתוני SAR אופייני, שיוצר תמונות ברמה1, לא כולל תיקונים רדיומטריים ושאריות משמעותיות של הטיה רדיומטרית (Bias). לכן חשוב להפעיל תיקון רדיומטרי על תצלומי SAR כדי שערכי הפיקסלים של התמונות ייצגו בצורה נכונה את הפיזור לאחור של הרדאר במשטח המחזיר. תיקון רדיומטרי חיוני גם לצורך השוואה של תצלומי SAR שמתקבלים מחיישנים שונים, או מאותו חיישן בזמנים שונים, במצבים שונים או שעובדו על ידי מעבדים שונים.‎</div>‎",
		s1ThermalNoiseRemovalName: "הסרת רעש תרמי של Sentinel-1",
		s1ThermalNoiseRemovalSnip: "מסיר רעש תרמי ממערכי נתונים של Sentinel -1.",
		s1ThermalNoiseRemovalDesc: "ניתן להפעיל תיקון רעש תרמי על מוצרי Sentinel-1 Level-1 Single Look Complex ‏(SLC) ועל מוצרי Level-1 Ground Range Detection ‏(GRD) שעדיין לא תוקנו. האופרטור יכול גם להסיר את התיקון בהתאם לאנוטציות של המוצר, כדי להכניס מחדש את אותות הרעש שהוסרו וליצור את המוצר המקורי. האנוטציות של המוצר יעודכנו בהתאם כדי לאפשר הפעלה מחדש של התיקון. ",
		setNullName: "Set Null",
		setNullSnip: "הפונקציה Set Null מזהה מיקומים של תאים בתור NoData בהתאם לקריטריונים שצוינו. היא מחזירה NoData אם ההערכה המותנית היא true‏, ואת הערך שהוגדר ברסטר אחר אם ההערכה המותנית היא false.",
		setNullDesc: "הפונקציה Set Null מגדירה את הפיקסלים שזוהו כערכי NoData, בהתאם לקריטריונים שצוינו. היא מחזירה NoData אם ההערכה המותנית היא true‏ (1) ואת הערך שהוגדר ב-False Raster אם ההערכה המותנית היא false ‏(0). קריטריון זה מוגדר על ידי הפלט של הפונקציה המתמטית הלוגית, שיהיה רסטר הקלט.",
		shadedReliefName: "תבליט הצללה",
		shadedReliefSnip: "מייצר משטח 3D, רב ערוצי ומקודד לפי צבע, שמייצג את פני השטח, כאשר המיקום היחסי של השמש נלקח בחשבון עבור הצללה של התמונה.",
		shadedReliefDesc: "הפונקציה 'תבליט הצללה' (Shaded relief) יוצרת ייצוג תלת ממדי בצבעים של פני הקרקע, שנוצר על ידי מיזוג התמונות מהשיטות של קודי גובה (elevation-coded) ושל הצללות (hillshade). פונקציה זו משתמשת במאפייני הגובה והאזימוט כדי לציין את מיקום השמש.<div><br/></div>",
		sinHName: "SinH",
		sinHSnip: "מחשב את הסינוס ההיפרבולי של התאים ברסטר.",
		sinHDesc: "הפונקציה מחשבת את הסינוס ההיפרבולי של הפיקסלים ברסטר.",
		sinName: "Sin",
		sinSnip: "מחשב את הסינוס של התאים ברסטר.",
		sinDesc: "הפונקציה מחשבת את הסינוס של הפיקסלים ברסטר.",
		slopeName: "שיפוע",
		slopeSnip: "מחשב את הקצב של השינוי מערך פיקסל אחד אל השכנים שלו.",
		slopeDesc: "פונקציית הרסטר מחשבת שיפוע שהוא שיעור השינוי בגובה לכל תא במודל הגובה הדיגיטלי (DEM). זוהי התוצאה הנגזרת הראשונה של DEM.<div><br/>פונקציה זו משתמשת בפונקציה המואצת atan(). היא מהירה פי שש, ושגיאת ההערכה תמיד קטנה מ- 0.3 מעלות.‎</div>‎",
		speckleName: "Speckle",
		speckleSnip: "מספק פילטרים כדי לבצע denoise ל-synthetic aperture radar datasets.",
		speckleDesc: "Speckle הוא הרעש בתדירות גבוהה בנתוני רדאר. התמונות שנוצרות על ידי מערכות synthetic aperture radar ‏(SAR) מושפעות מאפקטים של כתמי צבע (speckling) בעקבות העיבוד של האותות המפוזרים וגלים אלקטרומגנטיים שמפוזרים ממשטחים או מאוביקטים. הפונקציה Speckle מסננת את סט נתוני הרדאר עם כתמי הצבע ומחליקה את הרעש תוך כדי שמירה של הקצוות או של ישויות חדות בתמונה.",
		spectralConversionName: "המרה ספקטראלית",
		spectralConversionSnip: "הפעלת מטריצה על תמונה רב-ערוצית.",
		spectralConversionDesc: "הפונקציה 'המרה ספקטראלית' (Spectral Conversion) מפעילה מטריצה על תמונה רב-ערוצית כדי להשפיע על ערכי הצבעים של הפלט.<div><br/>חלק מהחיישנים לא אוספים ערוצים כחולים בגלל אות נמוך ליחס רעש. ניתן להשתמש בכך, למשל כדי להמיר תמונת צבע אינפרא-אדום לתמונה שהיא כביכול בצבעים טבעיים.‎</div>‎",
		squareRootName: "שורש ריבועי",
		squareRootSnip: "מחשב את השורש הריבועי של ערכי התא ברסטר",
		squareRootDesc: "הפונקציה 'שורש ריבועי' (Square Root) מחשבת את השורש הריבועי של ערכי הפיקסלים ברסטר.",
		squareName: "מרובע",
		squareSnip: "מחשב את החזקה של ערכי התא ברסטר.",
		squareDesc: "הפונקציה 'חזקה שנייה' (Square) מחשבת את החזקה השנייה של ערכי הפיקסלים ברסטר.",
		statisticsHistogramName: "סטטיסטיקה והיסטוגרמה",
		statisticsHistogramSnip: "הגדר או שייך סטטיסטיקות והיסטוגרמות.",
		statisticsHistogramDesc: "הפונקציה 'סטטיסטיקה והיסטוגרמה' (Statistics and Histogram) משמשת להגדרת הנתונים הסטטיסטיים והיסטוגרמה של הרסטר. ניתן להכניס את הפונקציה בסוף שרשרת פונקציות כדי לתאר את הסטטיסטיקה וההיסטוגרמה של תבנית פונקציית רסטר (RFT). ייתכן שיהיה בכך צורך כדי לקבוע את תצוגת ברירת המחדל של תוצאת העיבוד, בייחוד כשמגדירים שרשרת פונקציות שמכילה פונקציות רבות.<div><br/>ניתן להגדיר סטטיסטיקה על ידי הקלדת הערכים או ייבוא מסט נתוני רסטר או מקובץ XML. במקרה של היסטוגרמות, ניתן להגדיר אותן רק על ידי ייבוא קובץ.‎</div>‎",
		statisticsName: "סטטיסטיקה",
		statisticsSnip: "מבצע חישוב focal statistics עבור כל פיקסל בתמונה, בהתבסס על הגדרת סביבת ההתמקדות.",
		statisticsDesc: "הפונקציה 'סטטיסטיקה' (Statistics) מבצעת חישוב נתונים סטטיסטיים של מיקוד עבור כל פיקסל בתמונה, לפי סביבת המיקוד שנקבעה.<div><br/>ניתן להשתמש בפונקציית הסטטיסטיקה כדי למלא קווים שהוסרו בתמונה. קווים שהוסרו הם בדרך כלל כאלה שנובעים מבעיות בחיישן, כאשר יש נתונים שלא נאספו. זה יכול לקרות בחיישנים כמו Enhanced Thematic Mapper Plus ‏(ETM+‎) של Landsat 7. הנתונים החסרים גורמים לבעיות בניתוח וכאשר מסתכלים על התצלומים. אין הרבה מה לעשות כשמשתמשים בתצלומים לצורך ניתוח. עם זאת, אם קיים תצלום חופף, אפשר להשתמש בו במקום התוכן החסר. אפשר לעשות זאת גם אם נעשה שימוש בתצלום לצורך ויזואלי. עם זאת, לא תמיד יש תצלום נוסף שיכול למלא את התוכן החסר, לכן חייבים להשתמש בנתונים הקיימים.‎</div>‎",
		streamLinkName: "קישור זרימה",
		streamLinkSnip: "משייך ערכים ייחודיים למקטעים של רשת לינארית של רסטרים בין צמתים.",
		streamLinkDesc: "הפונקציה הגלובלית 'קישור זרימה' (Stream Link) משייכת ערכים ייחודיים למקטעים של רשת לינארית של רסטרים בין צמתים.<div><br/>קישורים הם מקטעים של ערוץ זרימה המחברים בין שני צמתים רצופים, צומת ומוצא, או צומת ופיצול בניקוז. בהידרולוגיה, מקטעי הזרימה האלו נקראים reaches. צומת קשור לנקודת שפך ועוזר לתאר קו פרשת מים או תחום של אגן ניקוז.‎</div>‎",
		stretchName: "מתיחה",
		stretchSnip: "שיפור תמונה על ידי התאמת טווח הערכים המוצג. הפונקציה לא משנה את ערכי הפיקסלים המקוריים. אם לפיקסל יש ערך מחוץ לטווח שהוגדר, הוא יופיע בתור ערך המינימום או המקסימום.",
		stretchDesc: "הפונקציה 'מתיחה' (Stretch) משפרת את התמונה על ידי שינוי מאפיינים כמו בהירות, ניגודיות ו-gamma באמצעות סוגי מתיחה שונים. הפונקציה משתמשת בסטטיסטיקה של הרסטרים בסט נתוני הפסיפס. כלומר, אם משתמשים בה, יש לוודא שנעשה חישוב של הסטטיסטיקה.<div><br/>סוג המתיחה מגדיר את מתיחת ההיסטוגרמה שתופעל על הרסטרים כדי לשפר את המראה שלהם. מתיחה משפרת את מראה הנתונים על ידי כך שהיא פורסת את ערכי הפיקסלים לאורך היסטוגרמה, מערכי המינימום והמקסימום המוגדרים על ידי עומק ה-bit שלהם. ‎</div>‎",
		swathName: "Swath",
		swathSnip: "אינטרפולציה מתוך גרידים לא סדירים או נתוני Swath.",
		swathDesc: "חלק ממערכי הנתונים של netCDF או HDF מאחסנים את המיקומים בתור מערכים במרווחים לא סדירים. בעת הוספה של סט נתונים כזה לסט נתונים של פסיפס, הפונקציה Swath מתייחסת לנתונים הלא סדירים ודוגמת אותם מחדש כך שכל פיקסל יהיה בגודל אחיד ובצורת מרובע.<div><br/>בעת הוספת משתנים מ-netCDF או HDF לסט נתוני הפסיפס, יבוצע אימות אוטומטי אם הנתונים מסודרים. אם לא, הפונקציה Swath מופעלת אוטומטית כדי להמיר את הרסטר הלא-סדיר לנקודות ולאחר מכן לרסטר מסודר בגריד. ניתן לשנות את שיטת האינטרפולציה ואת גודל התאים שבהם משתמשת פונקציית הרסטר Swath. במקרה של נתוני רסטר סדירים, אין צורך באינטרפולציה ותבוצע קריאה של הנתונים כפי שהם.‎</div>‎",
		tanHName: "TanH",
		tanHSnip: "מחשב את הטנגנס ההיפרבולי של התאים ברסטר.",
		tanHDesc: "הפונקציה מחשבת את הטנגנס ההיפרבולי של הפיקסלים ברסטר.",
		tanName: "Tan",
		tanSnip: "מחשב את הטנגנס של התאים ברסטר.",
		tanDesc: "הפונקציה מחשבת את הטנגנס של הפיקסלים ברסטר. ",
		tasseledCapName: "Tasseled Cap (Kauth-Thomas)‎",
		tasseledCapSnip: "חישוב רמות של צמחיה, רטיבות ובהירות. טכניקה זו מתבססת על מקדמים שיש לחשב במיוחד לכל חיישן.",
		tasseledCapDesc: "הפונקציה של טרנספורמציית Tasseled Cap ‏(Kauth-Thomas) מיועדת לניתוח ולמיפוי של שינויים בצמחיה או בפיתוח אורבני שמזוהים על ידי מערכות לוויינים שונות. היא נקראת טרנספורמציית Tasseled Cap בגלל צורת הפיזור הגיאוגרפי של הנתונים. הטרנספורמציה מספקת רציונל לתבניות שמזוהות בנתוני Landsat MSS של שדות חקלאיים בתור פונקציה של מחזור החיים של היבולים. כעקרון, כאשר יבולים גדלים, יש עליה נטו בערוץ הקרוב לאינפרא-אדום וירידה בהחזרת האדום, כתלות בצבע הקרקע.<div><br/>השימוש בטרנספורמציה זו התרחב מניטור יבולים לניתוח ומיפוי של צמחיה במטרה לתמוך במגוון יישומים כמו ייעור, ניהול תעשייתי של חקלאות, מיפוי וניהול אקוסיסטמות, מלאי ומעקב אחר פחמן, פיתוח אורבני ועוד. כמו כן התרחב השימוש מתמיכה ב- Landsat MSS והוא כולל כעת מערכות לוויינים פופולריות נוספות כמו Landsat TM‏, Landsat ETM+‎‏, Landsat 8‏, IKONOS‏, QuickBird‏, WorldView-2 וחיישנים מולטיספקטרליים של RapidEye.‎</div>‎",
		timesName: "זמנים",
		timesSnip: "מכפיל את הערכים של שני הרסטרים על בסיס של כל תא בנפרד.",
		timesDesc: "הפונקציה 'כפל' (Times) מכפילה את הערכים של שני רסטרים, של כל תא בנפרד.",
		transposeBitsName: "שינוי ביטים",
		transposeBitsSnip: "פתיחת הביטים של פיקסל הקלט ומיפוי שלהם לביטים שצוינו בפיקסל הפלט. מטרת הפונקציה היא לעשות מניפולציה על הביטים שמתקבלים מכמה קלטים, כמו מוצרי Landsat 8.",
		transposeBitsDesc: "הפונקציה 'שינוי ביטים' (Transpose Bit) פותחת את הביטים של פיקסל הקלט וממפה אותם לביטים שצוינו בפיקסל הפלט. מטרת הפונקציה היא לעשות מניפולציה על הביטים שמתקבלים מכמה קלטים, כמו מוצרי Landsat 8.",
		unitConversionName: "המרת יחידות",
		unitConversionSnip: "משנה את הערכים מיחידת מדידה אחת אל אחרת.",
		unitConversionDesc: "הפונקציה ממירה פיקסלים מיחידה אחת ליחידה אחרת. היא תומכת בהמרת יחידות מרחק, מהירות וטמפרטורה.",
		vectorFieldName: "שדה ווקטור",
		vectorFieldSnip: "מציג את סטי הנתונים גם עם עוצמה (u) וגם עם כיוון (v) כחצים, כאשר עוצמה מיוצגת על ידי הגודל וכיוון מיוצג על ידי הזווית של החץ.",
		vectorFieldDesc: "הפונקציה 'שדה ווקטור' (Vector Field) משמשת להרכבה ולהמרה של שני רסטרים לרסטר דו-ערוצי מסוג הנתונים Magnitude-Direction או U-V.<div><br/>ערך ה-U נקרא לעתים zonal velocity, וערך ה-V נקרא לעתים meridional velocity.‎</div>‎",
		viewshed2Name: "שטחים נצפים",
		viewshed2Snip: "קובע את מיקומי משטחי הרסטר הנראים לסט של ישויות צפייה, באמצעות שיטות גיאודזיות.",
		viewshed2Desc: "פונקציית השטחים הנצפים (Viewshed) קובעת את מיקומי משטחי הרסטר הנראים לסט של ישויות צפייה, באמצעות שיטות גיאודזיות.<div><br/>הנראות של כל מרכז פיקסל נקבעת בבדיקת קווי-ראייה בין היעד לבין כל צופה. אם צופה יכול לראות את היעד במרכז הפיקסל, הפיקסל נחשב כניתן לצפייה. כלי זה מתייחס תמיד לעקומת כדור הארץ בעת קביעת הנראות.‎</div>‎",
		watershedName: "קו פרשת מים",
		watershedSnip: "קובע מהו האזור הרלוונטי מעל לסט תאים ברסטר",
		watershedDesc: "הפונצקיה הגלובלית 'קווי פרשת המים' (Watershed) קובעת מהו האזור הרלוונטי מעל לסט פיקסלים ברסטר. קווי פרשת המים נקבעים לפי כיוון הזרימה שמזוהה ברסטר מכל פיקסל.",
		weightedOverlayName: "חפיפה משוקללת",
		weightedOverlaySnip: "חפיפה של כמה רסטרים באמצעות קנה מידה משותף ושקלול של כל אחד מהם בהתאם לחשיבות שלו.",
		weightedOverlayDesc: "הפונקציה מאפשרת לבצע חפיפה של כמה רסטרים באמצעות קנה מידה משותף ושקלול של כל אחד מהם בהתאם לחשיבות שלו.",
		weightedSumName: "סכום משוקלל",
		weightedSumSnip: "שקלול וחיבור של מערך רסטרים עבור כל תא בנפרד.",
		weightedSumDesc: "הפונקציה 'סכום משוקלל' (Weighted Sum) מאפשרת לעשות חפיפה של כמה רסטרים, להכפיל כל אחד לפי השקלול שניתן לו ולסכם את כולם יחד.",
		windchillName: "נשיבת רוח",
		windchillSnip: "‏שקלול של טמפרטורת האוויר ומהירות הרוח בסביבה כדי לחשב את גורם צינת הרוח.",
		windchillDesc: "הפונקציה 'נשיבת רוח' (Wind Chill) עוזרת לזיהוי תנאי חורף מסוכנים, שבהתאם לזמני החשיפה לסביבה, עלולים לגרום לכוויות קור ולהיפותרמיה. אפקט הצינון של הרוח הוא דרך למדוד כמה קר לבן אדם כאשר לוקחים בחשבון את הרוח בצירוף עם טמפרטורות נמוכות. ככל שמהירות הרוח גבוהה יותר, הגוף מאבד מהר יותר חום והאדם מרגיש קר יותר.",
		zonalRemapName: "מיפוי אזורי מחדש",
		zonalRemapSnip: "מיפוי מחדש של פיקסלים ברסטר על בסיס אזורים מרחביים שהוגדרו על ידי רסטר אחר ומיפוי ערך תלוי אזור שהוגדר בטבלה.",
		zonalRemapDesc: "הפונקציה מאפשרת למפות מחדש פיקסלים ברסטר לפי אזורים מרחביים שהוגדרו על ידי רסטר אחר ומיפוי ערך תלוי אזור שהוגדר על ידי טבלה.",
		zonalStatisticsName: "סטטיסטיקה אזורית",
		zonalStatisticsSnip: "מחשב את הסטטיסטיקה עבור ערכים של רסטר באזורים של סט נתונים אחר.",
		zonalStatisticsDesc: "הפונקציה מחשבת את הסטטיסטיקה עבור ערכים של רסטר באזורים של סט נתונים אחר. אזור מוגדר ככל השטחים בקלט שיש להם אותו ערך. השטחים לא חייבים להיות ברצף. כאשר האזור וערכי הקלט הם רסטרים באותה רזולוציה, ייעשה שימוש בהם ישירות. אם הרזולוציות שלהם שונות, נעשית דגימה מחדש באופן פנימי, כדי להתאים בין הרזולוציות לפני שמבצעים את הפעולה על האזור.",
		flowLengthName: "אורך זרימה",
		flowLengthSnip: "מחשב את המרחק במעלה הזרם או במורד הזרם, או מרחק משוקלל לאורך נתיב הזרימה לכל תא.",
		flowLengthDesc: "זוהי פונקציית רסטר גלובלית. פונקציה זו יוצרת שכבת רסטר של מרחק במעלה הזרם או במורד הזרם, או מרחק משוקלל, לאורך נתיב הזרימה עבור כל תא.<div><br/>שימוש עיקרי של פונקציית 'אורך הזרימה' הוא לחשב את אורך נתיב הזרימה הארוך ביותר בתוך אגן נתון. מדידה זו משמשת לעתים קרובות לחישוב זמן הריכוז של אגן. דבר זה נעשה בעזרת האפשרות 'במעלה הזרם'. ניתן גם להשתמש בפונקציה זו כדי ליצור תרשימי מרחק-אזור של אירועי משקעים או נגר היפותטיים בעזרת רסטר המשקל כעכבה לתנועה במורד.‎</div>‎",
		streamOrderName: "סדר הזרמים",
		streamOrderSnip: "משייך סדר מספרי לסגמנטים של רסטר המייצגים ענפים של רשת לינארית.",
		streamOrderDesc: "זוהי פונקציית רסטר גלובלית. פונקציה זו יוצרת שכבת רסטר שמקצה סדר מספרי לסגמנטים של רסטר המייצגים ענפים של רשת לינארית.<div><br/>הפלט של פונקציית 'סדר זרימה' יהיה באיכות גבוהה יותר אם שכבת רסטר זרם הקלט ושכבת רסטר כיוון זרימה הקלט ייגזרו מאותו משטח. אם רסטר הזרם נגזר מסט נתוני זרמים מרוסטרים, ייתכן שהפלט לא יהיה יציב מכיוון שעל בסיס תא-אחר-תא, הכיוון לא יהיה תואם עם המיקום של תאי הזרם. התוצאה של פונקציית 'זרימה מצטברת' יכולה לשמש ליצירת רשת זרם רסטר על ידי החלת ערך סף לבחירת תאים עם זרימה מצטברת גבוהה. לדוגמה, תאים שיש להם יותר מ-100 תאים שזורמים לתוכם משמשים להגדרת רשת הזרם. השתמש בפונקציה Con או Set Null כדי ליצור רסטר רשת זרם כאשר ערכי זרימה מצטברת של 100 או יותר זורמים לאחד, והנותרים מושמים ברקע (NoData). ניתן להשתמש ברשת הזרם שמתקבלת בפונקציית 'סדר זרם'. פונקציה זו תומכת רק בשכבת רסטר של כיוון זרימה כקלט D8. ניתן ליצור כיווני זרימה D8 באמצעות הפונקציה 'כיוון זרימה' ולהפעיל עם כיוון הזרימה שמוגדר כברירת מחדל מסוג D8.‎</div>‎",
		snapPourPointName: "הצמדה של נקודת שפך",
		snapPourPointSnip: "הפונקציה מצמידה נקודות שפך לתא עם הצטברות הזרימה הגבוהה ביותר במרחק שהוגדר.",
		snapPourPointDesc: "זוהי פונקציית רסטר גלובלית. פונקציה זו מבצעת הצמדה של נקודות שפך לתא עם הצטברות הזרימה הגבוהה ביותר במרחק שהוגדר.<div><br/>הפונקציה 'הצמדה של נקודת שפך' משמשת להבטחת הבחירה של נקודות עם זרימה מצטברת גבוהה בעת שרטוט אגני ניקוז באמצעות הפונקציה 'פרשת מים'. הפונקציה 'הצמדה של נקודת שפך' תחפש בטווח של מרחק הצמדה סביב נקודות השפך שצוינו, לאיתור התא בעל הזרימה המצטברת הגבוהה ביותר, ותעביר את נקודת השפך למיקום זה. הפלט הוא שכבת רסטר במספר שלם, כאשר מיקומי נקודות השפך המקוריות הוצמדו למיקומים בעלי זרימה מצטברת גבוהה.‎</div>‎",
		sinkName: "נקודת קליטת זרימה",
		sinkSnip: "יוצר רסטר שמזהה את כל נקודות קליטת הזרימה או אזורי הניקוז הפנימיים",
		sinkDesc: "זוהי פונקציית רסטר גלובלית. פונקציה זו יוצרת שכבת רסטר שמזהה את כל נקודות קליטת הזרימה או אזורי הניקוז הפנימיים. נקודת קליטת זרימה היא תא או סט של תאים המחוברים חלקית, עם כיוון זרימה שלא ניתן להקצות לו אחד משמונה ערכים חוקיים ברסטר כיוון זרימה. זה עשוי להתרחש כאשר כל התאים הסמוכים גבוהים יותר מהתא המעובד, או כאשר שני תאים זורמים זה לתוך זה, כך שנוצרת לולאה של שני תאים.<div><br/>פונקציית 'נקודת קליטת זרימה' תומכת רק בשכבת רסטר כיוון זרימת קלט D8. ניתן ליצור כיווני זרימה D8 באמצעות הפונקציה 'כיוון זרימה' ולהפעיל עם כיוון הזרימה שמוגדר כברירת מחדל מסוג D8. הפלט של פונקציית 'נקודת קליטת זרימה' הוא רסטר מספר שלם, כאשר לכל נקודת קליטת זרימה מוקצה ערך ייחודי. לערכים ייחודיים אלה יש טווח שהוא בין אחד לבין המספר הכולל של נקודות קליטת זרימה. לדוגמה, אם המספר הכולל של נקודות קליטת זרימה הוא 1,000, טווח הערכים הייחודיים יהיה בין 1 ל-1,000.‎</div>‎",
		aggregateName: "קבץ",
		aggregateSnip: "מפיק גרסה מופחתת רזולוציה של הרסטר.",
		aggregateDesc: "הפונקציה 'צרף' דוגמת מחדש רסטר קלט לרזולוציה גסה על בסיס אסטרטגיית קיבוץ שצוינה. כל תא פלט מכיל את הסיכום, מינימום, מקסימום, ממוצע או חציון של תאי הקלט שכלולים בתיחום של אותו תא.<div><br/>באפשרותך לציין את הגורם שבו יש להכפיל את גודל התא של רסטר הקלט. לדוגמה, ערך גורם תא של 3 יפיק גודל תא פלט גדול פי שלוש מזה של רסטר הקלט. באפשרותך להגדיר כיצד לטפל בתיחום של הפלט אם מספר השורות או העמודות בקלט אינו מכפלה מדויקת של גורם התא. כברירת מחדל, הגבול העליון והימני יורחבו לכיסוי תיחום מרחבי גדול יותר מזה של רסטר הקלט, כדי להבטיח שכל תאי הקלט יעובדו. לחלופין, ניתן לצמצם את הגבול העליון והימני לכיסוי תיחום קטן יותר, כדי שמספר השורות והעמודות שיועבדו יהיה מכפלה מדויקת של גורם התא. ניתן להגדיר כיצד חישוב הצבירה יטפל בתאי NoData. מנגנון ברירת המחדל הוא להתעלם מתאי קלט מסוג NoData שכלולים בתיחום המרחבי של תא גדול יותר ברסטר הפלט, בעת קביעת הערך של אותו תא פלט. לחלופין, ניתן לציין שאם קיים אפילו תא קלט אחד מסוג NoData בתיחום המרחבי של תא פלט, תא זה יהיה NoData ברסטר הפלט.‎</div>‎",
		ccdcName: "ניתוח CCDC",
		ccdcSnip: "מעריך שינויים בערכי פיקסלים לאורך זמן באמצעות אלגוריתם זיהוי וסיווג של שינוי רציף (CCDC) ומפיק תוצאות מודל.",
		ccdcDesc: "פונקציית ניתוח CCDC מעריכה שינויים בערכי פיקסלים לאורך זמן באמצעות אלגוריתם זיהוי וסיווג של שינוי רציף (CCDC) ומפיקה רסטר רב-ממדי שמכיל את תוצאות המודל. המערכת תומכת באפשרות זו רק בשילוב עם פונקציית זיהוי שינוי באמצעות ניתוח שינוי בתבנית פונקציות הרסטר. כדי להפיק רסטר פלט, חבר את פונקציית ניתוח CCDC עם פונקציית זיהוי שינוי באמצעות ניתוח שינוי, שמור כתבנית פונקציית רסטר והפעל 'ניתוח רסטר' עם תבנית הפונקציה.<div><br/>פונקציה זו משתמשת באלגוריתם זיהוי וסיווג שינוי רציף (CCDC) כדי להעריך שינויים בערכי הפיקסלים לאורך זמן עבור ערימה של תמונות. בסדרת זמן של תמונות אופטיות או נגזרות מונה (לדוגמה, NDVI), ערכי פיקסלים יכולים להשתנות ממספר סיבות: 1. שינויים עונתיים - שינויים בערך הפיקסלים משקפים שינויים בצמחייה עקב השונות העונתית של טמפרטורה ומשקעים. בהמיספרה הצפונית, לדוגמה, נצפה לראות צפיפות גבוהה יותר של צמחייה ירוקה בקיץ בהשוואה לחורף; 2. שינוי הדרגתי - שינויים בערך הפיקסלים משקפים מגמות בצמחייה או במי פני השטח עקב שונות אקלימית או דפוסים ארוכי טווח של ניהול הקרקע. לדוגמה, קרקע חשופה עשויה לגדול בהדרגה באזור עקב ירידה ארוכת טווח במשקעים; ו-3. שינוי פתאומי - שינויים בערך הפיקסלים משקפים שינויים בכיסוי הקרקע שאירעו פתאום עקב בירוא יערות, פיתוח עירוני, אסון טבע וכד'. אלגוריתם CCDC מזהה את כל שלושת סוגי השינויים במטרה לזהות שינוי פתאומי. רגרסיה הרמונית ומודלים של מגמות מתואמים לנתונים כדי להעריך שינוי עונתי והדרגתי, וסטיות פתאומיות מהמודלים של מגמות הן אינדיקציות לשינוי פתאומי.<div><br/>אלגוריתםCCDC תוכנן במקור עבור השתקפות פני שטח או טמפרטורת בהירות של נתוני Landsat TM‏, Landsat ETM+‎‏ ו-Landsat OLI. עם זאת, פונקציית זיהוי שינוי באמצעות ניתוח שינוי בשילוב עם פונקציה זו יצזו שינוי עבור תמונות רב-ערוציות מכל חיישן נתמך, וכן נגזרות של תמונות חד-ערוציות כגון אינדקסים של ערוץ. לדוגמה, באפשרותך לבצע זיהוי שינוי רציף על רסטר אינדקס צמחייה עם הפרש מנורמל (NDVI), מכיוון ששינויים מפתאומיים ב-NDVI יכולים להצביע על בירוא יערות.‎</div>‎",
		computeChangeName: "חשב שינוי",
		computeChangeSnip: "מחשב הבדל בין שתי ערכות נתוני רסטר קטגורי או רציף.",
		computeChangeDesc: "ניתן להשתמש בפונקציה 'חשב שינוי' כדי למנות את ההבדלים בין שני רסטרים מסווגים לצורך ניתוח שינוי כיסוי קרקע, או להשתמש בה כדי לבחון שינויים בין שני רסטרים רציפים חד-ערוציים כגון גובה, טמפרטורה, כיסוי קנופי וכד'.",
		detectChangeName: "זהה שינוי באמצעות ניתוח שינוי",
		detectChangeSnip: "מפיק שכבת רסטר שמכילה נתוני שינויי פיקסלים תוך שימוש ברסטר ניתוח שינוי הפלט.",
		detectChangeDesc: "<div>הפונקציה 'זיהוי שינוי באמצעות ניתוח שינוי' מפיקה שכבת רסטר שמכילה נתוני תאריך שינויי פיקסלים, תוך שימוש ברסטר ניתוח השינויים. יש להפיק את רסטר ניתוח השינויים בעזרת הכלי לניתוח שינויים באמצעות CCDC, הכלי לניתוח שינויים באמצעות LandTrendr, פונקציית הרסטר לניתוח CCDC או פונקצית הרסטר לניתוח LandTrendr.</div><br><div>ניתן לשלב פונקציית רסטר זו עם פונקציית הרסטר לניתוח CCDC או עם פונקציית הרסטר לניתוח LandTrendr בתבנית פונקציית הרסטר. כדי להפיק פלט רסטר קבוע, חבר את פלט הפונקציה של ניתוח CCDC או ניתוח LandTrendr לפונקציה 'זיהוי שינוי באמצעות ניתוח שינוי', שמור כתבנית פונקציית רסטר והפעל 'ניתוח רסטר' עם התבנית.</div><br><div>הפרמטר <strong>סוג השינוי</strong> מציין את המידע שיופק. המידע מחולץ מרסטר ניתוח השינוי. בעת ההפעלה של פונקציה זו על הפלט שמתקבל מכלי/פונקציית CCDC, ניתן לבחור מתוך האפשרויות הבאות:</div><ul><li><strong>מועד השינוי האחרון</strong>--התאריך והשעה האחרונים שבהם הפיקסל סומן כעובר שינוי.</li><li><strong>מועד השינוי המוקדם ביותר</strong>--התאריך והשעה המוקדמים ביותר שבהם הפיקסל סומן כעובר שינוי.</li><li><strong>מועד השינוי הגדול ביותר</strong>--התאריך והשעה שבהם השינוי המחושב היה המשמעותי ביותר עבור הפיקסל.</li><li> <strong>מספר השינויים</strong>--מספר הפעמים הכולל שבהן הפיקסל עבר שינוי.</li></ul><div>בעת הפעלת פונקציה זו על הפלט שמתקבל מכלי/פונקציית LandTrendr, זמינות האפשרויות הנוספות הבאות:</div><ul><li><strong>מועד השינוי הארוך ביותר</strong>--התאריך שבו הפיקסל סומן כעובר שינוי, בהתחלה או בסוף של תקופת השינוי הארוכה ביותר.</li><li><strong>מועד השינוי הקצר ביותר</strong>--התאריך שבו הפיקסל סומן כעובר שינוי, בהתחלה או בסוף של תקופת השינוי הקצרה ביותר.</li><li><strong>מועד השינוי המהיר ביותר</strong>--התאריך שבו הפיקסל סומן כעובר שינוי, בהתחלה או בסוף של תקופת השינוי המהיר ביותר.</li><li><strong>מועד השינוי האיטי ביותר</strong>--התאריך שבו הפיקסל סומן כעובר שינוי, בהתחלה או בסוף של תקופת השינוי האיטי ביותר.</li></ul><div>רסטר הפלט הוא רסטר רב-ערוצי שבו כל ערוץ מכיל נתוני שינוי, בהתאם לסוג השינוי שנבחר ומספר השינויים המרבי שצוין. לדוגמה, אם <strong>סוג השינוי</strong> מוגדר כ<strong>מועד השינוי המוקדם ביותר</strong> ו<strong>מספר השינויים המרבי</strong> מוגדר כ-2, הפונקציה תחשב את שני התאריכים המוקדמים ביותר שבהם התרחש שינוי במהלך סדרת הזמנים, עבור כל פיקסל. התוצאה היא רסטר שבו הערוץ הראשון מכיל את תאריכי השינוי המוקדם ביותר לכל פיקסל, והערוץ השני מכיל את תאריכי השינוי השני המוקדם ביותר לכל פיקסל.</div><br><div>בעת החלת פונקציה זו על הפלט שמתקבל מכלי LandTrendr, ניתן לבחור אם לחלץ את התאריך שמציין את ההתחלה של שינוי או את הסיום של שינוי באמצעות הפרמטר <strong>תאריך הסגמנט</strong>. לדוגמה, כדי להבין כיצד השינוי המאוחר ביותר בסדרת הזמנים התחיל, הגדר את <strong>סוג השינוי</strong> כ<strong>מועד השינוי האחרון</strong> ואת <strong>תאריך הסגמנט</strong> כ<strong>תחילת הסגמנט</strong>.</div><br><div>כדי לחלץ תאריכי שינוי ספציפיים יותר מרסטר ניתוח השינויים שלך, השתמש בפרמטרי הסינון הבאים:</div><ul><li><strong>סינון לפי שנה</strong>--זיהוי שינויים שהתרחשו בפרק זמן מסוים, לדוגמה, אם אתה מחפש שינויים שהתרחשו בנוף במהלך חמש שנות בצורת.</li><li><strong>סינון לפי משך</strong>--זיהוי שינויים שהתרחשו בטווח נתון של שנים, לדוגמה, אם אתה מחפש רק שינויים פתאומיים שהתרחשו במהלך שנה או שנתיים. תוכל לחשב את משך הזמן המעניין אותך באמצעות הנוסחה <strong>שנת סיום - שנת התחלה +1</strong>. הפערים בסדרת הזמנים ייכללו.</li><li><strong>סינון לפי עוצמה</strong>--זיהוי שינויים בעוצמה נתונה, לדוגמה, אם אתה מחפש רק שינויים גדולים ב-NDVI של אינדקס הצמחייה. העוצמה היא ערך מוחלט, לכן ערכי המינימום והמקסימום לא יכולים להיות שליליים. כדי לציין שינוי כיווני, השתמש בפרמטר <strong>כיוון השינוי</strong>.</li></ul>",
		distanceAccumulationName: "הצטברות מרחק",
		distanceAccumulationSnip: "מחשב מרחק מצטבר עבור כל תא למקורות, ומאפשר מרחק בקו ישר, מרחק עלות, מרחק פני שטח אמיתי וכן גורמי עלות אנכית ואופקית.",
		distanceAccumulationDesc: "הפונקציה 'הצטברות מרחק' מחשבת את המרחק לכל מיקום באזור המחקר אל המקור הקרוב ביותר, או בעלות הנמוכה ביותר. אם רק המקורות מסופקים עבור קלט, אז מחושב מרחק בקו ישר אל כל מיקום באזור המחקר. אם נעשה שימוש הן במקור והן במחסומים כקלט, אז פונקציה 'הצטברות מרחק' מחשבת את המרחק בקו ישר סביב מחסומים. עבור רסטר המקור ורסטר המחסום, ערך הרק צריך צריך להיות NoData, בעוד מקורות ומחסומים מיוצגים עם ערכי תא תקינים. ערכים תקינים כוללים אפס. <div><br/>כאשר רסטר פני שטח מסופק כקלט, אז מרחק פני השטח בפועל בין תאים מחושב. כדי לבצע ניתוח עלות באמצעות 'הצטברות מרחק', יש צורך בפני שטח של עלות. אם מסופקים פני שטח של עלות, אז התוצאה היא רסטר מרחק של עלות מצטברת. כאשר מסופקים גורמים אופקיים ואנכיים, אז כיוון נלקח בחשבון בהצטברות עלות. קיימים ארבעה מאפייני מקור שבהם ניתן להשתמש. מאפיינים אלה, שיכולים להיות של המקור או המזיזים מהמקור, נשלטים על ידי פרמטרים ספציפיים: 1. הצטברות התחלתית: מגדיר את העלות ההתחתית לפני התחלת התזוזה. 2. הצטברות מקסימלית: מציין כמה עלות מקור יכול לצבור לפני הגעה לקצה הגבולו שלו. 3. מכפיל ליישום על עלויות: מציין את מצב הנסיעה או העוצמה במקור. 4. כיוון נסיעה: מזהה האם המזיז מתחיל ממקור ונע למיקומים שאינם מקור, או מתחיל במיקומים שאינם מקור ונע חזרה למקור.<div><br/>כברירת מחדל, התוצאה מ'הצטברות מרחק' היא ערוץ אחד, שהוא רסטר הצטברות המרחק. עם זאת, ניתן ליצור גם ערוץ שני, ערוץ הכיוון ההפוך.  ערוץ זה מציין מכל מיקום באזור המחקר, לאיזה כיוון יש לפנות כדי לקבל את המקור עם העלות הנמוכה ביותר. יהיה צורך בשני הערוצים כדי לקבוע נתיבים מיטביים בתוך אזור המחקר. כדי להפיק נתיב, השתמש תחילה בפונקציה 'ערוץ מדויק' כדי לחלץ את רסטר הצטברו המרחק ואת רסטר הכיוון ההפוך. השתמש בשכבות אלה כקלט לפונקציה 'נתיב עלות'. בפונקציה, השתמש ברסטר הצטברות המרחק כקלט רסטר מרחק העלות, וברסטר הכיוון ההפוך כקלט רסטר הקישור החוזר של עלות.‎</div>‎",
		distanceAllocationName: "הקצאת מרחק",
		distanceAllocationSnip: "מחשב הקצאת מרחק עבור כל תא למקורות שצוינו, על בסיס מרחק בקו ישר, מרחק עלות, מרחק פני שטח אמיתי וכן גורמי עלות אנכית ואופקית.",
		distanceAllocationDesc: "הפונקציה 'הקצאת מרחק' מחשבת לאיזה מקור מוקצה כל מיקום באזור המחקר. אם רק המקורות מסופקים עבור קלט, אז מיקומים מוקצים תוך שימוש במרחק בקו ישר למקור הקרוב ביותר. אם נעשה שימוש הן במקור והן במחסומים כקלט, אז פונקציה 'הקצאת מרחק' מחשבת את המרחק בקו ישר סביב מחסומים כדי לקבוע לאיזה מקור מיקום מוקצה. עבור רסטר המקור ורסטר המחסום, ערך הרק צריך צריך להיות NoData, בעוד מקורות ומחסומים מיוצגים עם ערכי תא תקינים. ערכים תקינים כוללים אפס.<div><br/>כדי לבצע ניתוח עלות באמצעות 'הקצאת מרחק', יש צורך בפני שטח של עלות. אם מסופקים פני שטח של עלות, אז התוצאה היא רסטר הקצאה על בסיס עלות מצטברת, ולא על בסיס מרחק בקו ישר. כאשר מסופקים גורמים אופקיים ואנכיים, אז כיוון נלקח בחשבון בהצטברות עלות. כאשר רסטר פני שטח מסופק כקלט, אז מרחק פני השטח בפועל שמכוסה בעת מעבר בין תאים מחושב בעת קביעת הקצאה. קיימים ארבעה מאפייני מקור שבהם ניתן להשתמש. מאפיינים אלה, שיכולים להיות של המקור או המזיזים מהמקור, נשלטים על ידי פרמטרים ספציפיים: 1. הצטברות התחלתית: מגדיר את העלות ההתחתית לפני התחלת התזוזה. 2. הצטברות מקסימלית: מציין כמה עלות מקור יכול לצבור לפני הגעה לקצה הגבולו שלו. 3. מכפיל ליישום על עלויות: מציין את מצב הנסיעה או העוצמה במקור. 4. כיוון נסיעה: מזהה האם המזיז מתחיל ממקור ונע למיקומים שאינם מקור, או מתחיל במיקומים שאינם מקור ונע חזרה למקור.<div><br/>כברירת מחדל, התוצאה מ'הקצאת מרחק' היא ערוץ אחד, שהוא רסטר הקצאת המרחק. סימון האפשרות הבוליאנית של הפקת שורה ועמודה של מקור כערוצים נוספים בפלט ייצור רסטר רב ערוצי שכולל שלושה ערוצים. הערוץ הראשון הוא ערוץ הקצאת המרחק, הערוץ השני מכיל אינדקס שורות והערוץ השלישי כולל אינדקס עמודות. אינדקסים אלה מזהים את המיקום של תא המקור שהוא במרחק עם העלות המצטברת הנמוכה ביותר. אינדקס שורת המקור ואינדקס עמודת המקור יכולים לשמש ביחד כדי לבצע מיפוי עוצמה. בעת תשאול כל מיקום באזור המחקר על פני ערוצים שניים ושלוש, ניתן לדעת את השורה והעמודה של המקור בעלות הנמוכה ביותר עבור אותו מיקום.‎</div>‎",
		eucBackDirectionName: "כיוון אוקלידי חוזר",
		eucBackDirectionSnip: "מחשב, עבור כל תא, את הכיוון, במעלות, לתא הסמוך לאורך הנתיב הקצר ביותר חזרה למקור הקרוב ביותר תוך הימנעות ממכשולים.",
		eucBackDirectionDesc: "הפונקציה 'כיוון אוקלידי חוזר' מפיקה רסטר נקודה-צפה רציפה שמייצג את הכיוון במעלות חזרה למקור הקרוב ביותר, תוך הימנעות ממחסומים, אם סופקו מחסומים.<div><br/>הקלטים עבור כיוון אוקלידי חוזר הם המקור שאליו יחושב הכיוון. קלט אופציונלי הוא רסטר שמייצג מחסומים בתוך אזור המחקר. עבור רסטר המקור ורסטר המחסום, ערך הרק צריך צריך להיות NoData, בעוד מקורות ומחסומים מיוצגים עם ערכים תקינים. ערכים תקינים כוללים אפס. כברירת מחדל, החישוב יעבד לתיחום המשולב של המקורות והמחסומים, ועוד 2 שורות ועמודות. אם הניתוח נדרש רק בתוך מרחק שצוין מהמקורות, אז ניתן להשתמש בפרמטר 'מרחק מקסימאלי'. 'כיוון אוקלידי חוזר' תומך הן בשיטה הפלאנרית והן בשיטה הגיאודזית בחישוב. החישוב בשיטה פלאנרית יתבצע על משטח שטוח מוטל תוך שימוש במערכת קואורדינטות קרטזית דו-ממדית. החישוב בשיטה גיאודזית יתבצע על האליפסואיד, כלומר שללא קשר להשלכה של קלט או פלט, התוצאות לא משתנות.<div><br/>התוצאה מפונקציה 'כיוון אוקלידי חוזר' יכולה לשמש בשילוב עם התוצאה מהפונקציה 'מרחק אוקלידי' כדי לקבוע את הנתיבים הקצרים ביותר ממיקומים בתוך אזור המחקר חזרה למקור. התוצאה של 'כיוון אוקלידי חוזר' ושל 'מרחק אוקלידי' משמשות בפונקציה 'נתיב עלות' לצד יעדים להפקת הנתיבים הקצרים ביותר.‎</div>‎",
		expandName: "הרחב",
		expandSnip: "מרחיב אזורים שנבחרו של רסטר לאזורים לפי מספר התאים שצוין.",
		expandDesc: "בעזרת הפונקציה הרחבה גלובלית, ניתן להכליל, או לפשט, רסטרים על ידי הפיכת אזורים מסוימים לגדולים יותר. ניתן גם לשלוט בכמות ההכללה שתתבצע.<div><br/>האזורים שתבחר יגדלו על ידי הרחבה אל אזורים אחרים. קונספטואלית, ערכי האזור שנבחרו יכולים להיחשב לאזורי קדמה, בעוד ערכים אחרים נותרים אזורי רקע. אזורי הקדמה יכולים להתרחב לתוך אזורי רקע.<div><br/>ניתן לשלוט בכמות ההכללה עם הפרמטר 'מספר תאים'. כברירת מחדל, ערך זה הוא 1, שמשמעו שהאזורים שנבחרו יתרחבו לפי הכמות בהתאם לגודל תא אחד. כדי להגביר את מידת ההכללה, ניתן לציין ערך גדול יותר עבור פרמטר זה. קונספטואלית, מצב זה זהה להרצת כמספר הפעמים שצוין, כאשר תוצאות ההרצה הקודמת הם הקלט של איטרציה עוקבת.‎</div>‎",
		trendAnalysisName: "צור קו מגמה",
		trendAnalysisSnip: "אומד את המגמה עבור כל פיקסל לאורך ממד עבור משתנה אחד או יותר ברסטר רב-ממדי.",
		trendAnalysisDesc: "<div>ניתן להשתמש בפונקציה זו להתאמת נתונים לאורך קו מגמה לינארי, הרמוני או פולינומיאלי, או לזיהוי מגמות באמצעות בדיקת Mann-Kendall או Seasonal-Kendall.</div><br><div>רסטר פלט המגמה שיופק באמצעות פונציה זו משמש בתור הקלט עבור הפונקציה <strong>חיזוי קו מגמת שימוש</strong>.</div><br><div>הבדיקות Mann-Kendall ו-Seasonal-Kendall משמשות כדי לקבוע אם קיימת מגמה מונוטונית בנתונים. הן אינן פרמטריות, כלומר הן לא מבוססות על הנחה שקיימת התפלגות מסוימת של נתונים. בדיקת Mann-Kendall אינה בוחנת קורלציה סדרתית או אפקטים עונתיים. אם הנתונים הם עונתיים, בדיקת Seasonal-Kendall מתאימה יותר.</div><br><div>Iאם הכלי משמש לביצוע בדיקת Mann-Kendall או Seasonal-Kendall, הפלט הוא רסטר עם חמש-ערוצי, שבו:</div><ul><li>ערוץ 1 = שיפוע Sen</li><li>ערוץ 2 = ערך-p</li><li>ערוץ 3 = ציון Mann-Kendall ‏(S)</li><li>ערוץ 4 = שונות S</li><li>ערוץ 4 = שונות S</li><li>ערוץ 5 = Z-score</li></ul><div>רכיבי הפלט המתקבלים מבדיקת Mann-Kendall או Seasonal-Kendall יכולים לשמש כדי לקבוע לאילו פיקסלים בסדרת זמנים רב-ממדית יש מגמה בעלת מובהקות סטטיסטית. ניתן להשתמש במידע זה בשילוב עם ניתוח מגמה לינארי, הרמוני ופולינומיאלי כדי לחלץ מגמות מובהקות בסדרת הזמנים. ניתן להפיק מיסוך הכולל ערכי p-value מובהקים, להחיל את המיסוך על הרסטר הרב-ממדי ולהשתמש ברסטר הרב-ממדי הממוסך בתור הקלט של הכלי כדי לבצע ניתוח מגמה לינארי, הרמוני או פולינומיאלי.</div><br><div>קיימות שלוש אפשרויות קו מגמה להתאמה של מגמה לערכי המתשנה לאורך ממד: לינארי, פולינומיאלי והרמוני.</div><br><div>לניתוח מגמה לינארי, הפלט הוא רסטר תלת-ערוצי, שבו:</div><ul><li>ערוץ 1 = שיפוע</li><li>ערוץ 2 = חיתוך</li><li>ערוץ 3 = שגיאה בשורש ריבועי ממוצע (RMSE) או השגיאה שמסביב לקו ההתאמה הטובה ביותר</li></ul><div>לניתוח מגמה פולינומיאלי, מספר הערוצים בפלט תלוי בסדר הפולינומיאלי. התאמה פולינומיאלית מסדר-שני מפיקה רסטר ארבע-ערוצי, שבו:</div><ul><li>ערוץ 1 = פולינומיאלי_2</li><li>ערוץ 2 = פולינומיאלי_1</li><li>ערוץ 3 = פולינומיאלי_0</li><li>ערוץ 4 = RMSE</li></ul><div>התאמה פולינומיאלית מסדר-שלישי מפיקה רסטר חמש-ערוצי, שבו:</div><ul><li>ערוץ 1 = פולינומיאלי_3</li><li>ערוץ 2 = פולינומיאלי_2</li><li>ערוץ 3 = פולינומיאלי_1</li><li>ערוץ 4 = פולינומיאלי_0</li><li>ערוץ 5 = RMSE</li></ul><div>עבור ניתוח מגמה הרמוני, מספר הערוצים בפלט תלוי בתדר ההרמוני. כאשר התדירות מוגדרת כ-1, הפלט הוא רסטר חמש-ערוצי, שבו:</div><ul><li>ערוץ 1 = שיפוע</li><li>ערוץ 2 = חיתוך</li><li>ערוץ 3 = Harmonic_sin1</li><li>ערוץ 4 = Harmonic_cos1</li><li>ערוץ 5 = RMSE</li></ul><div>כאשר התדר מוגדר כ-2, הפלט הוא רסטר שבע-ערוצי, שבו:</div><ul><li>ערוץ 1 = שיפוע</li><li>ערוץ 2 = חיתוך</li><li>ערוץ 3 = Harmonic_sin1</li><li>ערוץ 4 = Harmonic_cos1</li><li>ערוץ 5 = Harmonic_sin2</li><li>ערוץ 6 = Harmonic_cos2</li><li>ערוץ 7 = RMSE</li></ul><div>הפרמטר <strong>אורך המחזור</strong> עבור ניתוח מגמה הרמוני משמש לציון מספר ואורך המחזורים שאתה מצפה לראות בנתונים שלך, במהלך יום או שנה. לדוגמה, אם אתה מצפה שהנתונים שלך יעברו שני מחזורים של שונות במהלך שנה אחת, אורך המחזור יהיה 182.5 ימים או 0.5 שנים. אם יש לך נתוני טמפרטורה שנאספו מדי שלוש שעות, ויש מחזור שונות אחד בכל יום, אורך המחזור הוא יום אחד.</div><br><div>הפרמטר <strong>תדירות</strong> עבור ניתוח מגמה הרמוני משמש לתיאור המודל ההרמוני שיש להתאים לנתונים. אם התדירות מוגדרת כ-1, שילוב של מגמה לינארית והעקומה ההרמונית מהסדר הראשון ישמש להתאמת המודל. אם התדירות מוגדרת כ-2, שילוב של מגמה לינארית, העקומה ההרמונית מהסדר הראשון והעקומה ההרמונית מהסדר השני ישמש להתאמת הנתונים. אם התדירות מוגדרת כ-3, עקומה הרמונית נוספת מסדר שלישי תשמש למידול הנתונים, וכן הלאה.</div><br><div>ניתן להפיק את נתוני איכות ההתאמה של המודל כפלט אופציונלי. ניתן לחשב ולסמל את שגיאת השורש המרובע הממוצע (RMSE), ‏R בריבוע והערך-p של שיפוע המגמה. ייצג בסמל את שכבת רסטר מגמת הפלט באמצעות סימבולוגיית <strong>RGB</strong> וציין את הנתונים הסטטיסטיים כערוצים אדום, ירוק וכחול.</div><br>",
		spectralUnmixingName: "ביטול ערבוב ספקטרלי לינארי",
		spectralUnmixingSnip: "מבצע סיווג סב-פיקסל ומחשב את השפע השברי של סוגי כיסוי קרקע שונים עבור פיקסלים בדידים.",
		spectralUnmixingDesc: "הפונקציה 'ביטול ערבוב ספקטרלי לינארי' מחשבת את הכיסוי השברי עבור פיקסלים בדידים שמכילים סוגי כיסוי קרקע מרובים. היא מפיקה שכבה רב-ערוצית, שבה כל ערוץ תואם לשפע השברי של כל מחלקת כיסוי קרקע. לדוגמה, באפשרותך להשתמש בה כדי לבצע סיווג כיסוי קרקע על תמונה רב-ספקטרלית כדי לזהות צמחייה פוטוסינתטית, קרקע חשופה וצמחייה מתה או לא-פוטוסינתטית.<div><br/>סדר הרסטר הרב-ערוצי של הפלט עוקב אחר הסדר הפרופיל הספקטרלי של הקלט. מספר המחלקות לא יכול לעלות על מספר הערוצים ברסטר הקלט. לדוגמה, לא ניתן לחלץ מידע אודות יותר מ-8 מחלקות מרסטר בעל 8 ערוצים.‎</div>‎",
		multidimensionalFilterName: "מסנן רב-ממדי",
		interpolateRasterByDimensionFunctionName: "בצע אינטרפולציה של הרסטר לפי ממד",
		interpolateRasterByDimensionFunctionSnip: "אינטרפולציה של רסטר רב-ממדי בערכי ממד שצוינו באמצעות פלחים סמוכים.",
		interpolateRasterByDimensionFunctionDesc: "<p>פונקציה זו מאפשרת להעריך ערכי פיקסלים עבור פלח ממד לא מוגדר ברסטר רב-ממדי. לדוגמה, אם יש לך סט נתונים הכולל את טמפרטורת המים בגובה פני הים וב-100 מטרים מתחת לגובה פני הים וברצונך להעריך את הטמפרטורה ב-50 מטרים מתחת לגובה פני הים, תוכל להשתמש בפונקציה זו כדי לקבל הערכה עבור עומק זה באמצעות הגדרת הממד 'לפי ערכים'.</p><p>תוכל גם לצמצם סט נתונים חודשי לסט נתונים יומי באמצעות הגדרת הממד 'לפי הגדרה' וציון ערך 1 עבור הפרמטר 'שלב' וערך 'ימים' עבור הפרמטר 'יחידה'.</p><p>השתמש בהגדרת הממד 'לפי רסטר מטרה' כדי להעריך את הערך עבור רסטר המטרה.</p>",
		multidimensionalFilterSnip: "יוצר שכבת רסטר מערכת נתוני רסטר רב-ממדי או משכבת רסטר רב-ממדי על ידי פריסת נתונים לאורך משתנים וממדים שהוגדרו.",
		multidimensionalFilterDesc: "המסנן הרב-ממדי יוצר שכבת רסטר רב-ממדי על ידי סינון וחילוץ ערכת משנה של משתנים מרסטר רב-ממדי. לדוגמה, יש לך ערכת נתונים רב-ממדית שמכילה 30 שנה של נתוני משקעים חודשיים, וברצונך לחלץ נונים עבור כל חודש ינואר כדי לראות כיצד המשקעים השתנות עבור אותו חודש.<div><br/>השתמש בפרמטר 'הגדרת ממד' כדי לפרוס ממדים תוך שימוש במרווח, בערך או בטווח של ערכים. לדוגמה, אם יש לך נתוני מליחות ים לאורך 10 שנים, שנאספו אחת לחודש בכל 2 מטר עומק עד 500 מטר, תוכל להשתמש באפשרויות השונות של הגדרת ממד בתרחישים הבאים. תרחיש 1: הפק נתוני מליחות עבור חודש ינואר לאורך תקופה של 10 שנים. בחר לפי ערכים, הגדר ממד ל-StdTime, והגדר ערכים לינואר. תרחיש 2: הפק נתוני מליחות לאורך טווח עומק מ-0 ועד 150 מטר. בחר לפי טווחים, הגדר ממד ל-StdZ, והגדר ערך מינימום ל-‎-150 וערך מקסימום ל-0. תרחיש 3: הפק נתוני מליחות 10 הימים הראשונים בכל חודש ינואר לאורך תקופה של 10 שנים. בחר לפי איטרציה, הגדר ממד ל-StdTime, הגדר התחלה של איטרציה ראשונה וסוף של איטרציה ראשונה להתחלה ולסיום התואמים של תקופת האיטרציה, הגדר שלב ל-1 והגדר יחידה לשנים.‎</div>‎",
		multidimensionalRasterName: "רסטר רב-ממדי",
		multidimensionalRasterSnip: "מוסיף נתונים רב-ממדים למפה כשכבת רסטר רב-ממדי.",
		multidimensionalRasterDesc: "פונקציית רסטר רב-ממדי מוסיפה נתונים רב-ממדים למפה כשכבת רסטר רב-ממדי. פונקציה זו שימושים בעת ביצוע תהליכי עבודה של ניתוח רסטר תוך שימוש בשרשרת פונקציה.<div><br/>תומכת בערכות נתוני רסטר רב-ממדי כולל netCDF, GRIB, HDF ו-CRF של Esri. תומכת גם בבערכות נתוני מוזאיקה רב-ממדיים.‎</div>‎",
		optimalPathAsRasterName: "נתיב מיטבי בתור רסטר",
		optimalPathAsRasterSnip: "מחשב את הנתיב עם העלות הנמוכה ביותר ממקור ליעד.",
		optimalPathAsRasterDesc: "פונקציה גלובלית זו יוצרת רסטר פלט שמתעד את הנתיב עם האופטימלי או נתיבים ממיקומים נבחרים אל תא המקור הקרוב ביותר שמוגדר במשטח העלות המצטברת, במונחים של מרחק עלות.<div><br/>בדרך כלל יש להפעיל אחת או יותר מפונקציות העלות המשוקללת (הצטברות מרחק או הקצאת מרחק) לפני הפעלת הפונקציה 'נתיב מיטבי בתור רסטר' ליצירת הצטברות המרחק של הקלט ורסטרים בכיוון הפוך. שכבות רסטר קלט אלה הן בגדר חובה עבור הפונקציה 'נתיב מיטבי'. הערכים בנתיב האופטימלי של הפלט מייצגים את מספר הנתיבים במיקום נתון. במקרים רבים, נתיבים עוקבים אחר אותו מסלול, עוזבים מקור ולאחר מכן פונים לעבר יעדים שונים. לדוגמה, ערך של אחד מציין שיש רק נתיב מיטבי אחד במיקום נתון, בעוד ערך של חמש משמעו שבאותו מיקום יש חמישה נתיבים מיטיביים דרך תא זה באזור המחקר.<div><br/>נתוני היעד של הקלט חייבים להיות שכבת רסטר. ערכת תאי היעד מורכבת מכל התאים ברסטר הקלט שיש להם ערכים תקינים. תאים עם ערכי NoData לא נכללים בערכה. הערך אפס נחשב ליעד חוקי. רסטר יעד יכול להיווצר על ידי שימוש בכלי החילוץ. אם יש לך ישויות מקור או יעד, באפשרותך להמיר אותן לרסטר באמצעות הפונקציה 'המר ישויות לרסטר'. השתמש ברסטר הצטברות המרחק או כיוון הפוך כרסטר הקלט לפונקציה הפיכה לרסטר. דבר זה יבטיח שהיישות הופכת לרסטר באמצעות אותם ערכים של גודל תא, תיחום וייחוס מרחבי כמו אלה של הרסטרים האחרים שנכנסים לפונקציה 'נתיב מיטבי בתור רסטר'. ניתן גם להשתמש בפונקציה 'נתיב מיטבי בתור רסטר' כדי לגזור את הנתיב של מיעוט התנגדות במורד מודל גובה דיגיטלי (DEM). במקרה כזה, השתמש ב-DEM עבור רסטר הצטברות המרחק של הקלט ובפלט מפונקציית כיוון הזרימה עבור רסטר הכיוון ההפוך.‎</div>‎",
		trendName: "חיזוי באמצעות קו מגמה",
		trendSnip: "מחשב שכבת רסטר רב-ממדי חזוי תוך שימוש ברסטר המגמה של הפלט מהפונקציה 'צור קו מגמה' או מכלי Geoprocessing של רסטר 'צור קו מגמה'.",
		trendDesc: "פונקציית חיזוי באמצעות קו מגמה מחשבת שכבת רסטר רב-ממדי חזוי תוך שימוש ברסטר המגמה של הפלט מהפונקציה 'צור קו מגמה' או מכלי Geoprocessing של רסטר 'צור קו מגמה'.",
		rasterCollectionName: "עיבוד אוסף רסטרים",
		rasterCollectionSnip: "מעבד כל פלח ברסטר רב-ממדי או כל פריט ברסטר מוזאיקה. פונקציה זו יכולה גם לאסוף פלחים מרובים לפלח בודד.",
		rasterCollectionDesc: "הפונקציה 'עיבוד אוסף רסטרים' מעבדת כל פלח ברסטר רב-ממדי או כל פריט ברסטר מוזאיקה. פונקציה זו יכולה גם לאסוף פלחים מרובים לפלח בודד.<div><br/>פונקציה זו מעבדת כל פלח ברסטר רב-ממדי או רסטר מוזאיקה תוך שימוש תבנית פונקציית רסטר. פונקציה זו תומכת באפשרויות הבאות: 1. ציין ‏תבנית פונקציית רסטר עבור פונקציית פריט. לדוגמה, יש לך ערכת נתוני מוזאיקה שמכילה 20 שנה של תמונות Landsat וברצונך לחשב את ה-NDVI עבור כל סצנה בסדרת הזמן. עבור פונקציית פריט, ציין תבנית פונקציית רסטר שמכילה את פונקציית רסטר NDVI‏. 2. ציין ‏תבנית פונקציית רסטר עבור פונקציית הצבירה. לדוגמה, יש לך רסטר רב-ממדי שמכיל 10 שנים של נתוני טמפרטורה יומית וברצונך לחשב את הטמפרטורה המקסימלית עבור כל שנה. בפונקציית הצבירה, ציין תבנית פונקציית רסטר שמכילה את פונקציית סטטיסטיקת תאים, כאשר הפעולה מוגדרת למקסימום. תחת הגדרת צבירה, הגדר את הממד ל-StdTime, הגדר את הסוג למילת מפתח למרווח והגדר את מרווח מילת המפתח ל'שנתי'. שים לב שאם ערכת נתוני המוזאיקה איננה רב-ממדית, פונקציית הצבירה לא תכבד את הגדרת הצבירה. פונקציית הצבירה תצבור את כל הפריטים או כל קבוצה לתוך אחת אם הם מוגדרים בתבנית פונקציית הצבירה. למידע נוסף אודות השימוש בקבוצות בערכת נתוני מוזאיקה, ראה 'שימוש בפריטים של ערכות נתוני מוזאיקה' ב'תבניות פונקציית רסטר'. 3. ציין ‏תבנית פונקציית רסטר עבור פונקציית עיבוד. הפונקציה או שרשרת הפונקציות בתבנית זו משמשת להצגת הרסטר המעובד החדש. לדוגמה, ציין תבנית פונקציית רסטר שמכילה את הפונקציה 'מפת צבעים' כדי לשנות את האופן שבו שכבת הרסטר המעובדת מוצגת. שים לב שאם הקלט הוא רסטר רב-ממדי, פונקציית העיבוד מוחלת על הפתח שמוצג כעת. אם הקלט הוא שכבת מוזעיקה או ערכת נתוני מוזעיקה, פונקציית העיבוד מוחלת על רסטר המוזאיקה תוך שימוש בשיטה הראשונה לפתרון חפיפות. 3. ציין תבניות עבור כל שילוב של שלושת הפונקציות. לדוגמה, יש לך ערכת נתוני מוזאיקה שמכילה תמונות Landsat של סדרת זמן וברצונך להפיק תמונת קומפוזיט של NDVI מקסימום. עבור פונקציית פריט, ציין תבנית פונקציית רסטר שמכילה את פונקציית רסטר NDVI‏. עבור פונקציית הצבירה, ציין תבנית פונקציית רסטר שמכילה את פונקציית סטטיסטיקת תאים, כאשר הפעולה מוגדרת למקסימום. עבור פונקציית עיבוד, ציין תבנית פונקציית רסטר שמכילה את הפונקציה 'מפת צבעים'. שים לב שסדר עיבוד הפונקציה עוקב אחר סדר הפרמטרים של הקלט. לדוגמה, פונקציית הפריט תעובד תחילה.‎</div>‎",
		randomName: "אקראי",
		randomSnip: "יוצר רסטר עם ערכי פיקסל אקראיים שנלקחו מפיזור פסאודו-אקראי. המערכת תומכת במספר פיזורים ומחוללי מספרים אקראיים.",
		randomDesc: "הפונקציה 'אקראי' יוצרת רסטר עם ערכי פיקסל אקראיים לשימוש בתבניות פונקציית רסטר או בערכות נתוני מוזאיקה.<div><br/>בעוד שפונקציות רבות עובדות על רסטר קלט אחד או יותר, הפונקציה 'אקראי' לא מחייבת רסטר קלט. משמעות הדבר שהיא מתנהגת יותר כמו ערכת נתוני רסטר מאשר כפונקציה, לפיכך יש לשים לב באופן מיוחד בעת הוספתה לשרשרת פונקציית או הסרתה ממנה.‎</div>‎",
		shrinkName: "כווץ",
		shrinkSnip: "מכווץ את האזורים שנבחרו במספר מוגדר של תאים, על ידי החלפתם בערך התא שהוא השכיח ביותר בסביבה הקרובה.",
		shrinkDesc: "בעזרת הפונקציה גלובלית 'כווץ', ניתן להכליל, או לפשט, רסטרים על ידי הפיכת אזורים מסוימים לקטנים יותר. ניתן גם לשלוט בכמות ההכללה שתתבצע.<div><br/>האזורים שתבחר יתכווצו, או יצטמצמו בגודלם, על ידי התרחבות של תאים מאזורים סובבים לתוכם. קונספטואלית, ערכי האזור שנבחרו יכולים להיחשב לאזורי קדמה, בעוד ערכים אחרים נותרים אזורי רקע. התאים באזורי הקדמה יכולים להיות מוחלפים בתאים באזורי הרקע. תאים צרים בתוך אזור, שניתן לראותם כמשתפים גבולות עם האזור, יכולים גם כן להיות מוחלפים.<div><br/>ניתן לשלוט בכמות ההכללה עם הפרמטר 'מספר תאים'. כברירת מחדל, ערך זה הוא 1, שמשמעו שהאזורים שנבחרו יצטמצמו לפי הכמות בהתאם לגודל תא אחד. כדי להגביר את מידת ההכללה, ניתן לציין ערך גדול יותר עבור פרמטר זה. קונספטואלית, מצב זה זהה להרצת כמספר הפעמים שצוין, כאשר תוצאות ההרצה הקודמת הם הקלט של איטרציה עוקבת.‎</div>‎",
		trendToRGBName: "קו מגמה ל-RGB",
		trendToRGBSnip: "המרת רסטר מגמה לרסטר תלת-ערוצי (אדום, ירוק וכחול).",
		trendToRGBDesc: "הפונקציה 'מגמה ל-RGB' ממירה רסטר מגמה לרסטר תלת-ערוצי (אדום, ירוק וכחול). רסטר המגמה נוצר מפונקציית יצירת רסטר מגמה או מפונקציית ניתוח CCDC של רסטר.<div><br/>פונקציה זו שימושית לצורך הצגה חזותית של נתוני מקדם מודל מפונקציית יצירת המגמה או מפונקציית ניתוח CCDC. שתי הפונקציות אומדות מגמות בערכי פיקסלים משתנים, אבל התוצאות של הפונקציות קשות לפירוש ישירות.<div><br/>כמו פונקציות רסטר רבות, ייתכן שתצטרך להשתמש בהתאמת טווח דינאמית (DRA) כדי לשפר את התצוגה של תוצאות פונקציה זו.‎</div>‎",
		landTrendrName: "ניתוח LandTrendr",
		landTrendrSnip: "מעריך שינויים בערכי פיקסלים לאורך זמן באמצעות זיהוי מבוסס-Landsat של מגמות בשיטת הפרעה והתאוששות (LandTrendr) ומפיק רסטר ניתוח שינוי שמכיל את תוצאות המודל.",
		landTrendrDesc: "ניתן להשתמש בפונקציית הרסטר רק כקלט לפונקציית הרסטר 'זיהוי שינוי באמצעות ניתוח שינוי'. כדי להפיק רסטר פלט, חבר את פונקציית ניתוח LandTrendr עם פונקציית זיהוי שינוי באמצעות ניתוח שינוי בתבנית פונקציית רסטר, והשתמש בתבנית הקלט בכלי ה-geoprocessing 'צור רסטר מפונקציית רסטר'. התוצאה היא רסטר שמכיל מידע בנוגע לזמן שבו ערכי פיקסלי השתנו.<div><br>התכלית של פונקציית רסטר זו היא לחלץ שינויים בישות ניצפת, כך שהתמונה הרב-ממדית האידאלית של קלט צריכה ללכוד תצפית עקבית לאורך כל הזמן ולא צריכה לכלול הפרעה אטמוספרית או הפרעת חיישן, עננים או צל ענן. דרך הפעולה המומלצת היא להשתמש בנתונים שנורמלו ושניתן למסכם באמצעות רצועת QA, לדוגמה מוצרי אוסף Landsat 1 החזרהת פני שטח עם מסכת ענן.<div><br>הפונקציה מבצעת ניתוח על תמונה אחת בשנה, ומספר פלחי השנים חייב להיות זהה או גדול מהערך שצוין בפרמטר <strong>מספר מינימום של תצפיות</strong>. מומלץ שיהיו לך לפחות שש שנים של נתונים.<div><br>אם ברשותך נתונים חודשיים, שבועיים או יומיים, מומלץ לבחור מספר תמונות מכל שנה (עדיף מאותה עונה), להסיר עננים וצל ענן ולצרף את התמונות ליצירת תמונה אחת שלוכדת היטב את התצפית. אם נתונים חודשיים, שבועיים או יומיים מסופקים כרסטר הרב-ממדי של הקלט, הפונקציה תזהה פלח אחד לניתוח בהתבסס על התאריך הקרוב ביותר לזה שצוין בפרמטר <strong>תאריך הצמדה</strong>.<div><br>לישות בנוף לעתים קרובות ייקח זמן להתאושש משינוי לא תמידי כגון שריפת יער או התפשטות חרקים. כדי לשלוט בקצב ההתאוששות שהמודל מזהה, הגדר את הפרמטר 'סף התאוששות'. למקטע ספציפי לא יכול להיות קצב התאוששות מהיר יותר מ-1/סף ההתאוששות.<div><br>ההתאוששות משינוי בנוף יכולה להתרחש בכיוון החיובי או השלילי. לדוגמה, כאשר חל בנוף אבדן יער, סדרת זמן של ערכי אינדקס צמחייה מראה יריאה בערכי האינדקס, וההתאוששות מראה עלייה הדרגתית בערכי אינדקס הצמחייה, או מגמת התאוששות חיובית. ציין את כיוון מגמת ההתאוששות בפרמטר <strong>להתאוששות יש מגמה גוברת</strong>.",
		aggregateMultidimensionalName: "צבירה רב-ממדית",
		aggregateMultidimensionalSnip: "שלב נתוני משתני רסטר רב-ממדיים קיימים לאורך ממד.",
		aggregateMultidimensionalDesc: "הפונקציה 'צבירה רב-ממדית' יוצרת שכבת רסטר רב-ממדית על ידי שילוב נתוני משתני רסטר רב-ממדיים קיימים לאורך ממד.<div><br>השתמש בפרמטר <strong>הגדרת ממד</strong> לסינון נתוני הקלט שברצונך לצבור. לדוגמה, אם ברשותך 30 שנה של נתונים חודשיים, אך אתה מעוניין ליצור שכבה צבורה עבור 15 השנים הראשונות בלבד, תוכל להשתמש בפרמטר <strong>הגדרת ממד</strong> כדי לציין את השנים שיש לכלול בניתוח.<div><br><ul><li>חלץ נתוני מליחות עבור חודש ינואר לאורך תקופה של 10 שנים. בחר <strong>לפי ערכים</strong>, הגדר <strong>ממד</strong> ל-<strong>StdTime</strong>, והגדר את <strong>ערכים</strong> ל<strong>ינואר</strong>.</li><li>פרוס נתוני מליחות בטווח עומק של 0 עד 150 מטר. בחר <strong>לפי טווחים</strong>, הגדר את <strong>ממד</strong> ל-<strong>StdZ</strong>, והגדר את <strong>ערך מינימום</strong> ל-<strong>150-</strong> ואת <strong>ערך מקסימום</strong> ל-<strong>0</strong>.</li><li>חלץ נתוני מליחות עבור 10 הימים הראשונים בכל חודש ינואר לאורך תקופה של 10 שנים. בחר <strong>לפי איטרציה</strong>, הגדר את <strong>ממד</strong> ל-<strong>StdTime</strong>, הגדר את <strong>התחלת איטרציה ראשונה</strong> ואת  <strong>סוף איטרציה ראשונה</strong> להתחלה ולסוף התואמים של תקופת האיטרציה, הגדר את <strong>שלב</strong> ל-<strong>1</strong>, והגדר את <strong>יחידה</strong> ל<strong>שנים</strong>.</li></ul><div><br>השתמש בפרמטרים של <strong>הגדרת צבירה</strong> כדי לבחור בממד להערכה ובמרווח הצבירה באמצעות מילת מפתח, ערך או טווח של ערכים. לדוגמה, אם ברשותך נתוני טמפרטורת פני הים לאורך 30 שנה, אשר נאספו אחת ליום ובעומק של כל 5 מטר עד ל-100 מטר, באפשרותך להשתמש באפשרויות המרווח השונות עבור התרחישים הבאים:<div><br><ul><li>צבור נתוני טמפרטורה יומיים לתוך נתונים חודשיים, כאשר התוצאה היא רסטר רב-ממדי עם 12 פלחי זמן, וכל פלח הוא צבירה של כל חודש על פני כל השנים. בחר <strong>מילת מפתח של מרווח</strong> והגדר את מילת המפתח ל<strong>חוזר כל חודש</strong>.</li><li>צבור נתוני טמפרטורה יומיים לתוך נתונים חודשיים, כאשר התוצאה היא רסטר רב-ממדי עם 360 פלחים, או 12 פלחי זמן לשנה (30 שנה x‏ 12 חודשים = 360 פלחים). בחר <strong>מילת מפתח של מרווח</strong> והגדר את מילת המפתח ל<strong>חודשי</strong>.</li><li>צבור נתוני טמפרטורה חודשיים לתוך מרווחים של 4 חודשים. בחר <strong>ערך מרווח</strong>, הגדר את <strong>ערך מרווח</strong> ל-4, והגדר את <strong>יחידה</strong> ל<strong>חודשים</strong>.</li><li>צבור נתוני טמפרטורה מ-0 עד 25 מטר, ולאחר מכן מ-25 עד 50 מטר, ולבסוף מ-50 עד 100 מטר. בחר <strong>טווחי מרווח</strong> וציין עומקי מינימום ומקסימום כ-<strong>‎0 25‏; ‎25 50‏; ‎50 100</strong>.</li></ul>",
		mergeRastersName: "מזג רסטרים",
		mergeRastersSnip: "משלב מספר ערכות נתוני רסטר מרובות מרחבית, או על פני משתנים וממדים.",
		mergeRastersDesc: "פונקציה זו יוצרת רסטר ממוזג מרשימת רסטרים. לדוגמה, אם ברשותך ערכת נתוני מוזאיקה שמכילה 30 שנה של נתוני משקעים חודשיים וערכת נתונים נוספת עם 10 שנים של נתוני טמפרטורה חודשיים, באפשרותך לשלב אותן לרסטר רב-ממדי עם שני משתנים. <div><br>אם הרסטרים הרב-ממדיים של הקלט מכילים משתנים שונים, הרסטר הרב-ממדי של הפלט יכיל את כל המשתנים. <div><br>אם הרסטרים הרב-ממדיים של הקלט מכילים ממדים שונים או ערכי ממדים שונים, הרסטר הרב-ממדי של הפלט יכלול את כל הממדים וערכים הממדים. <div><br>אם הרסטרים הרב-ממדיים של הקלט מכילים את אותם ממדים ומשתנים אך תיחומים מרחביים שונים, הרסטר הרב-ממדי של הפלט יכלול את המשתנים והממדים על פני התיחומים המרחביים הממוזגים.<div><br>ניתן להשתמש בפונקציה זו גם כאשר בידיך מספר רסטרים שברצונך שיטופלו כפריט אחד, כגון חישוב אותם ניתונים סטטיסטיים לכולם, או בעת איזון צבע כך שלא תצטרך לאזן צבע של כל תמונה בנפרד. אפשרות זו שימושית בעת עבודה עם תמונות שמאוחסנות כאריחים נפרדים עקב מגבלות גודל קובץ; בדרך זו, הקבצים יטופלו כחלק מאותה תמונה.",
		boundaryCleanName: "ניקוי גבול",
		boundaryCleanSnip: "החלקת הגבול בין אזורים.",
		boundaryCleanDesc: "<p>הפונקציה מכלילה רסטרים, או מפשטת אותם, על-ידי החלקה של הגבולות בין אזורים. הפונקציה מספקת אפשרויות לשליטה באופן שבו תאי האזורים שבקלט ישפיעו על ההחלקה ועל מידת ההחלקה שתחול. כל תא קלט מוערך באמצעות שמונה שכנים מיידיים.</p><p>תהליך ההחלקה ממיין תחילה את התאים השכנים לפי עדיפות מסוימת. העדיפות קובעת איזה אזור מהתאים השכנים יכול להחליף את הערך של תא העיבוד בפלט.</p><p>העדיפות יכולה להתבססס על ערך האזורים או על גודל האזורים. הפרמטר <strong>סוג המיון</strong> קובע את סוג המיון שבו יש להשתמש. </p><p>הגדרת ברירת המחדל <strong>אל תמיין</strong> מעריכה את העדיפות על בסיס ערך האזורים. לתאים מאזורים בעלי ערכים גדולים יותר תהיה עדיפות גבוהה יותר להתרחבות לתוך אזורים בעלי ערכים קטנים יותר.</p><p>גודל האזורים, או שטחם הכולל, יכול לשמש למיון העדיפות. עם ההגדרה <strong>סדר יורד</strong>, האזורים ממוינים בסדר יורד. לאזורים בעלי שטח כולל גדול יותר תהיה עדיפות להתרחבות לתוך אזורים בעלי שטח קטן יותר. עם ההגדרה <strong>סדר עולה</strong>, המצב הפוך: לאזורים בעלי שטח כולל קטן יותר תהיה עדיפות להתרחבות לתוך אזורים בעלי שטח כולל גדול יותר.</p><p>מידת ההחלקה נקבעת על-ידי הפרמטר <strong>הפעל הרחבה וכיווץ פעמיים</strong>, הקובע את מספר הפעמים שתהליך ההרחבה והכיווץ יתבצע.</p><p>כשהגדרה זו לא מסומנת, תהליך ההרחבה והכיווץ מתבצע פעם אחת. כשההגדרה מסומנת, תהליך ההרחבה והכיווץ מתבצע פעמיים, וההחלקה של גבולות האזורים רבה יותר.</p><p>אם הערכים של כל שמונה התאים השכנים זהים לזה של תא העיבוד, תא הפלט ישמור את הערך של תא הקלט.</p>",
		predictUsingRegressionName: "חיזוי באמצעות רגרסיה",
		predictUsingRegressionSnip: "מחשב רסטר חזוי על בסיס קלטי נתוני רסטר ומדול רגרסיה. מודל הרגרסיה הוא הפלט מכלי Geoprocessing רסטר <strong>מודל רגרסיה של עצים אקראיים על הקרקע</strong>.",
		predictUsingRegressionDesc: "<p>מודל הרגרסיה הוגדר בקובץ הגדרת רגרסיה של Esri (.ecd). הוא מכיל את כל המידע עבור ערכת נתונים ספציפית או ערכה של ערכות נתונים, ומודל הרגרסיה, ומופק על ידי כלי Geoprocessing רסטר <strong>מודל רגרסיה של עצים אקראיים על הקרקע</strong>.</p><p>הקלט יכול להיות ערוץ בודד, רסטר מרובה ערוצים או רסטר רב-ממדי, או רשימה של סוגים אלה. סוגי הרסטרים של הקלט חייבים להיות מאותו סוג של רסטר שאומן על ידי מודל הרגרסיה.</p><ul><li>כאשר הקלט הוא רסטר multiband, כל ערוץ מטופל כמשתנה חיזוי. הערוצים חייבים להיות באותו הסדר כמו הקלט מרובה הערוצים עבור כלי האימון של מודל רגרסיה.</li><li>כאשר הקלט הוא רסטר רב-ממדי, כל משתנה מטופל כמשתנה חיזוי, והמשתנה חייב להיות ערוץ בודד ולהיות בעל ממד זמן. הסדר והשמות של המשתנים חייבים להיות זהים לאלה של הקלט בעת אימון מודל הרגרסיה. הפלט הוא רסטר רב-ממדי.</li><li>הקלט יכול להיות רשימה של פריטים. מספר הפריטים וסדר הפריטים חייבים להתאים לקלט בעת אימון מודל הרגרסיה.</li></ul>",
		dimensionalMovingStatisticsName: "סטטיסטיקה ממדית נעה",
		dimensionalMovingStatisticsSnip: "חישוב סטטיסטיקה על פני חלון נע בנתונים מרובי-ממדים על פני ממד שצוין.",
		dimensionalMovingStatisticsDesc: "<p>הפונקציה 'סטטיסטיקה ממדית בתנועה' מחשבת נתונים סטטיסטיים שונים בתוך חלון מוגדר מראש, עבור כל ערכי הממד שעל פני ממד מסוים. פונקציה זו מקבלת שכבת רסטר רב-ממדי בתור קלט ויוצרת שכבת רסטר רב-ממדי בתור פלט, עם אותו גודל ממדי כמו של שכבת הקלט.</p><p>ניתן לציין ממד שעבורו ייבדקו ערכי הממד במהלך החישוב. כברירת מחדל, החישוב מתבצע על פני הממד הראשון שאינו מרחבי. בנוסף, ניתן לציין גודל של חלון בעזרת הפרמטרים 'חלון לאחור' ו'חלון קדימה'.</p><p>כאשר 'סוג סטטיסטיקה' מוגדר כ'אחוזון', הפרמטרים 'ערך אחוזון' ו'סוג אינטרפולציית אחוזון' הופכים לזמינים. באמצעות פרמטרים אלה, תוכל לציין את האחוזון שתרצה לחשב ולבחור את סוג האינטרפולציה שבו תרצה להשתמש, בהתאמה. כאשר 'סוג סטטיסטיקה' מוגדר כ'ממוצע מעגלי', הפרמטר 'ערך עוטף מעגלי' הופך לזמין. ערך העוטף המעגלי משמש להמרת ערך לינארי לטווח של ממוצע מעגלי נתון.</p>",
		terrainFlattenFunctionName: "השטחת פני שטח",
		terrainFlattenFunctionSnip: "מתקן את נתוני הקלט של synthetic aperture radar (SAR) עבור הפרעות רדיומטריות עקב טופוגרפיה.",
		terrainFlattenFunctionDesc: "<p>פונקציית רסטר השטחת פני השטח מתקנת את נתוני הקלט של synthetic aperture radar (SAR) עבור הפרעות רדיומטריות עקב טופוגרפיה.</p><p>נתוני הרדאר של קלט חייבים להיות מכוילים תחילה ל-beta nought. השתמש בכלי Apply Radiometric Calibration כדי לכייל נתוני רדאר ל-beta nought.</p><p>אם קלט DEM לא מקיף את כל סט נתוני SAR, הפלט מהכלי יהיה ערכי NoData עבור הפיקסלים מחוץ לתיחום DEM עבור gamma nought, sigma nought, אזור פיזור ופלטי עיוות גיאומטרי. עבור פלט מסכת העיוות הגיאומטרי, פלט הכלי יהיה ערכים לא מוגדרים עבור פיקסלים מחוץ לתיחום DEM.</p><p>קלט DEM חייב להיות במערכת קואורדינטות גיאוגרפית WGS 1984 (EPSG:4326).</p>",
		createColorCompositeFunctionName: "צור שילוב צבעים",
		createColorCompositeFunctionSnip: "צור רסטר תלת-ערוצי מסט נתוני רסטר רב-ערוצי שבו כל ערוץ יכול להשתמש בחישוב אלגברי המבוסס על אלגברת ערוץ.",
		createColorCompositeFunctionDesc: "<p>פונקציית הרסטר 'צור שילוב צבעים' יוצרת רסטר תלת-ערוצי מסט נתוני רסטר רב-ערוצי שבו כל ערוץ יכול להשתמש בחישוב אלגברי המבוסס על אלגברת ערוץ.</p><p>בעת הגדרת אלגוריתם אריתמטי של ערוץ, באפשרותך להזין נוסחה אלגברית של שורה אחת עבור כל ביטוי כדי ליצור פלט רב-ערוצי. האופרטורים הנתמכים הם אונארי, חיבור (+), חיסור (-), כפל (*) וחילוק (/)</p><p>.בעת שימוש במזהה ערוץ בביטוי, זהה את הערוץ על ידי הוספת קידומת B או b למספר הערוץ.</p><p>שילוב ערוץ נפוץ המשמש עבור synthetic aperture radar (SAR) ביחידות לינאריות הוא VV לאדום, VH לירוק ו-VV/VH לכחול. אם נתוני הקלט הם בדציבלים, שילוב הערוץ צריך להיות VV לאדום, VH לירוק ו-VV-VH לכחול.</p>",
		surfaceParametersName: "פרמטרים של פני השטח",
		surfaceParametersSnip: "קובע פרמטרים של רסטר פני שטח כגון מפנה, שיפוע ומספר סוגי עקומה בשיטות גיאודזיות.",
		surfaceParametersDesc: "<p>הפונקציה 'פרמטרים של פני שטח' קובע פרמטרים של רסטר פני שטח כגון מפנה, שיפוע ומספר סוגי עקומה בשיטות גיאודזיות.</p>אפשר להשתמש בפונקציה זו ליישומים הבאים:<p></p><ul>חשב מפנה ושיפוע בשיטות גיאודזיות.<li></li>חשב סוגים שונים של עקומה מרסטר פני שטח של קלט, לדוגמה, <li>עקומה משיקה (קו גובה נורמלי)<strong> שמאפיינת התכנסות והתבדרות טופוגרפית של זרימה על פני השטח.</strong></li></ul>",
		leastCostCorridorName: "מסדרון העלות הנמוכה ביותר",
		leastCostCorridorSnip: "מחשב את הסכום של שני רסטרי מרחק עלות מצטבר עם אפשרות להחיל סף על בסיס אחוז או עלות מצטברת.",
		leastCostCorridorDesc: "<p>הרסטרים של הקלט צריכם להיות הצטברות מרחק ופלט רסטרים של כיוון לאחור מהפונקציה <strong>הצטברות מרחק</strong> או <strong>הקצאת מרחק</strong>. אלה צריך להתבסס על מרחק עלות, ויש להשתמש באותם פרטמטרי הגדרות בעת יצירת השכבות של כל מקור. אין להשתמש בפרמטרים התלויים בכיוון (גורם אופקי, גורם אנכי וכיוון נסיעה) ביצירת רסטרים אלה.</p><p>הערכים ברסטר פרוזדור הפלט הם הסכום של העלות המצטברת להגעה למיקום נתון עם אותן יחידות כמו רסטרי מרחק העלות המצטברת של הקלט.</p><p>אם ערך <strong>סף</strong> שצוין גדול מהעלות המצטברת המירבית בעת סכימת שני רסטרי צבירת המרחק, רסטר פרוזדור הפלט יכסה את אותו שטח כמו הרסטרים המצטברים של הקלט.</p><p>אם ערך סף שצוין קטן מהערך המינימלי ברסטר הפרודזור, מוחזרת הודעת אזהרה ורסטר הפלט יהיה ריק.</p><p>רסטר פרוזדור הפלט עשוי להכיל תאים עם עלויות מצטברות גדולות מעט מערך הסף. הדבר נובע מרסטרי הכיוון לאחור המשתמשים בתאים שהוקצאו להם עלויות גבוהות מעט מהסף כדי לחבר תאים מנותקים לפרוזדור.</p>",
		geometricMedianName: "חציון גאומטרי",
		geometricMedianSnip: "פונקציית החציון הגאומטרי מחשבת את החציון הגאומטרי בין פיקסלים בסדרות זמן של תצלומים מרובי ערוצים.",
		geometricMedianDesc: "<p>הפונקציה מפחיתה רעש וחריגים בתצלומי סדרות זמן על ידי חישוב פיקסל חציון גאומטרי עבור כל מערך פיקסלים בערמת התמונות. האלגוריתם משאיר את הקשרים הספקטרליים בין ערוצים בספקטרת הפיקסלים, כך שניתן להשתמש בפלט בניתוח, כגון אינדקסים של צמחייה.</p><p>עננים וצללים צריכים להיות מכוסים באמצעות ערוץ QA של סט נתונים לפני החלת פונקציית זו.</p><p>אם תמונת הקלט היא נקודה צפה, כגון החזרת פני שטח עם ערכים בין 0 ל-1, ערך אפסילון של 0.001 צריך להפיק תוצאות איכותיות.</p>"
	},
	rfxArgs: {
		rasterName: "רסטר",
		colorSchemeTypeName: "סוג סכמת צבע",
		colormapName: "Colormap",
		colormapNameName: "שם מפת צבעים",
		colorRampName: "מדרג צבעים",
		contrastOffsetName: "היסט ניגודיות",
		brightnessOffsetName: "היסט בהירות",
		methodName: "שיטה",
		bandNamesName: "שמות ערוצים",
		bandWavelengthsName: "אורכי גל של ערוץ",
		bandIdsName: "IDs של ערוצים",
		missingBandActionName: "פעולת ערוץ חסר",
		conversionParametersName: "פרמטרי המרה",
		hillshadeTypeName: "סוג Hillshade",
		azimuthName: "אזימוט",
		altitudeName: "גובה",
		slopeTypeName: "התאמת קנה מידה",
		zFactorName: "פקטור Z",
		PSPowerName: "כוח גודל פיקסל",
		PSZFactorName: "פקטור גודל פיקסל",
		removeEdgeEffectName: "השבת אינטרפולציית פיקסלים של צלע ברירת מחדל",
		fromUnitName: "מיחידה",
		toUnitName: "אל יחידה",
		rasterTypeName: "סוג",
		minName: "מינימום פלט",
		maxName: "מקסימום פלט",
		minPercentName: "אחוז גזירה מינימלי",
		maxPercentName: "אחוז גזירה מקסימלי",
		numberOfStandardDeviationName: "מספר סטיות תקן",
		sigmoidStrengthLevelName: "רמת עוצמה של סיגמואיד",
		estimateStatsHistogramName: "הערך סטטיסטיקות",
		DRAName: "התאמת טווח דינאמית",
		statisticsName: "סטטיסטיקה",
		histogramsName: "היסטוגרמות",
		statisticsHistogramName: "הגדר סטטיסטיקה והיסטוגרמה",
		computeGammaName: "גמא אוטומטית",
		useGammaName: "השתמש בגמא",
		gammaName: "גמא",
		inputNamesName: "שמות",
		expressionName: "ביטוי",
		cellsizeTypeName: "סוג גודל תא",
		extentTypeName: "סוג הרחבה",
		classifierDefinitionFileName: "קובץ הגדרת קלט",
		raster1Name: "רסטר1",
		raster2Name: "רסטר2",
		raster3Name: "רסטר3",
		trueRasterName: "רסטר True",
		falseRasterName: "רסטר False",
		noDataInterpretationName: "פירוש NoData",
		noDataValuesName: "ערכי NoData",
		includedRangesName: "טווחים כלולים",
		curvatureTypeName: "סוג עקומה",
		rastersName: "רסטרים",
		attributeTableName: "טבלה",
		attributeTableTypeName: "סוג טבלה",
		rowsName: "מספר השורות",
		columnsName: "מספר העמודות",
		kernelName: "Kernel",
		mirrorEdgesName: "קצוות מראה",
		influencesName: "השפעות",
		fieldsName: "שדות",
		remapsName: "מפה מחדש טבלה",
		evalFromName: "הערכת קנה מידה מ:",
		evalToName: "הערכת קנה מידה ל:",
		weightsName: "משקלות",
		DEMName: "DEM",
		shortRangeIDWRadiusName: "רדיוס IDW של טווח קצר",
		maxVoidWidthName: "רוחב חלל מקסימלי",
		sigmaGaussianName: "החלקה מסתגלת",
		contourTypeName: "סוג קו גובה",
		zBaseName: "בסיס Z",
		numberOfContoursName: "מספר קווי גובה",
		contourIntervalName: "מרווחי קווי גובה",
		nthContourLineInBoldName: "קווי גובה מודגשים",
		featureClassName: "ישויות קלט",
		classIndexFieldName: "שדה",
		resolveOverlapMethodName: "שיטה לפתרון חפיפה",
		resamplingTypeName: "סוג דגימה מחדש",
		inputCellsizeName: "גודל תא קלט",
		outputCellsizeName: "גודל תא פלט",
		pointFeatureClassName: "נקודות גרעין",
		maxGrowthRadiusFieldName: "שדה רדיוס הגדילה המקסימלי",
		similarityThresholdFieldName: "שדה סף של דימיון",
		fillValueFieldName: "שדה ערך מילוי",
		spectralDetailName: "פרטים ספקטרליים [1..20]",
		spatialDetailName: "פרטים מרחביים [1...20]",
		minNumPixelsPerSegmentName: "גודל מקטע מינימאלי בפיקסלים",
		boundariesOnlyName: "גבולות סגמנט בלבד",
		statisticsTypeName: "סוג סטטיסטיקות",
		fillNoDataOnlyName: "מלא פיקסלים שהם NoData בלבד",
		inputDataTypeName: "סוג נתוני קלט",
		angleReferenceSystemName: "מערכת ייחוס זווית",
		outputDataTypeName: "סוג נתוני פלט",
		inputSamplePointFeatureClassName: "דוגמאות קלט",
		valueFieldName: "שדה הערך",
		rasterInfoName: "מידע רסטר",
		interpolationMethodName: "שיטת אינטרפולציה",
		radiusName: "רדיוס",
		radianceGainValuesName: "מרווח רדיאני",
		radianceBiasValuesName: "הטיית קרינה",
		reflectedGainValuesName: "רווח החזרה",
		reflectedBiasValuesName: "הטיית החזרה",
		sunElevationName: "גובה שמש (מעלות)",
		albedoName: "אלבדו",
		scaleFactorName: "פקטור קנ\"מ",
		offsetName: "היסט",
		thresholdTypeName: "סוג סף",
		thresholdsName: "נקודות סף",
		undefinedClassName: "קבוצה לא מוגדרת",
		minValueName: "מינימום",
		maxValueName: "מקסימום",
		operationName: "תפעולי",
		clippingTypeName: "סוג גזירה",
		clippingGeometryName: "גיאומטריית גזירה / רסטר",
		extentName: "פלט תיחום",
		useInputFeatureGeometryName: "השתמש ביישויות קלט כדי לגזור גיאומטריה",
		remapDefinitionTypeName: "מפה מחדש סוג הגדרה",
		inputRangeName: "טווחי קלט",
		outputValuesName: "ערכי פלט",
		noDataRangeName: "טווחי NoData",
		inputFieldName: "שדה קלט",
		outputFieldName: "שדה פלט",
		inputMaxFieldName: "שדה קלט מקסימום (אופציונאלי)",
		remapTableTypeName: "מפה מחדש סוג טבלה",
		allowUnmatchedName: "אפשר ערכי פיקסלים לא מתאימים",
		changeMissingValuesToNoDataName: "שנה ערכים חסרים ל-NoData",
		visibleBandIDName: "ID של ערוץ נראה",
		infraredBandIDName: "ID של ערוץ אינפרא-אדום",
		scientificOutputName: "פלט מדעי",
		bandIndexesName: "אינדקסי ערוצים",
		constantName: "קבוע",
		weightName: "משקל",
		minimumName: "מינימום",
		maximumName: "מקסימום",
		sourceDataName: "רסטר מקור",
		sourceFieldName: "שדה מקור",
		costRasterName: "רסטר עלות",
		maxDistanceName: "מרחק מקסימלי",
		valueRasterName: "רסטר ערכים",
		costMultiplierName: "מכפיל לביצוע בעלויות",
		startCostName: "עלות התחלתית",
		accumCostResistanceRateName: "שיעור התנגדות עלות מצטברת",
		capacityName: "קיבולת",
		travelDirectionName: "כיוון נסיעה",
		cellSizeName: "גודל תא",
		populationFieldName: "שדה אוכלוסיה",
		areaUnitsName: "יחידות שטח",
		outputValueTypeName: "ערכי תא פלט",
		barriersName: "קלט גבולות",
		destinationDataName: "רסטר יעד",
		destinationFieldName: "שדה יעד",
		pathTypeName: "סוג נתיב",
		observerFeaturesName: "ישויות צופות",
		analysisMethodName: "שיטת ניתוח",
		analysisTypeName: "סוג ניתוח",
		verticalErrorName: "שגיאה אנכית",
		refractivityCoefficientName: "מקדם שבירה",
		surfaceOffsetName: "היסט משטח",
		observerElevationName: "גובה צופה",
		observerOffsetName: "היסט צופה",
		innerRadiusName: "רדיוס פנימי",
		innerRadiusIs3DDistanceName: "רדיוס פנימי הוא מרחק תלת ממדי",
		outerRadiusName: "רדיוס חיצוני",
		outerRadiusIs3DDistanceName: "רדיוס חיצוני הוא מרחק תלת ממדי",
		horizontalStartAngleName: "זווית פתיחה אופקית",
		horizontalEndAngleName: "סוף זווית אופקית",
		verticalUpperAngleName: "זווית עילית אנכית",
		verticalLowerAngleName: "זווית תחתונה אנכית",
		zoneDataName: "רסטר אזור",
		zoneFieldName: "שדה אזור",
		ignoreNoDataName: "התעלם מהערך NoData בחישובים",
		temperatureRasterName: "רסטר טמפרטורה",
		inTemperatureUnitsName: "יחידות טמפרטורה",
		outHeatIndexTemperatureUnitsName: "יחידות אינדקס חום",
		relativeHumidityRasterName: "רסטר לחות יחסית",
		outWindChillTemperatureUnitsName: "רסטר צינת רוח",
		windSpeedRasterName: "רסטר מהירות-רוח",
		inWindSpeedUnitsName: "יחידות מהירות-רוח",
		valueName: "ערך",
		propertyName: "שם מאפיין",
		jsonName: "מטה-דאטה של JSON",
		zoneTableName: "טבלת מאפיינים אזוריים",
		attributeFieldNames: "שם שדה המאפיין",
		backgroundName: "ערך רקע",
		whereClauseName: "טענת Where",
		minimumValueFieldName: "שם שדה ערך מינימלי",
		maximumValueFieldName: "שם שדה ערך מקסימלי",
		outValueFieldName: "שם שדה ערך פלט",
		defaultValueName: "ערך פלט ברירת מחדל",
		conversionMatrixName: "מטריצת המרה",
		IsPseudoColorOutputName: "פלט צבע מדומה",
		unmappedAsRandomColorName: "הקצה באופן אקראי צבע לפיקסלים שאינם ממופים",
		distanceMethodName: "שיטת חישוב מרחק",
		flowDirRasterName: "רסטר של כיוון זרימה",
		pourPointName: "רסטר של נקודות שפך",
		pourPointFieldName: "שדה של נקודות שפך",
		constantZName: "Z קבוע",
		zOffsetName: "היסט Z",
		geoIdName: "גאואיד",
		calibrationTypeName: "סוג כיול",
		filterTypeName: "סוג מסנן",
		filterSizeName: "גודל מסנן",
		noiseModelName: "מודל רעש",
		noiseVarianceName: "שונות רעש",
		additiveNoiseMeanName: "ממוצע רעש מצטבר",
		multiplicativeNoiseMeanName: "ממוצע רעש Multiplicative",
		numberofLooksName: "מספר המבטים",
		dampingFactorName: "פקטור דעיכה",
		maskRasterName: "מיסוך רסטר",
		nibbleValuesName: "השתמש בערכי  NoData אם הם השכן הקרוב ביותר",
		nibbleNoDataName: "כרסום של תאי NoData",
		zLimitName: "מגבלת Z",
		flowDirectionTypeName: "סוג של כיוון זרימה",
		weightRasterName: "רסטר משוקלל",
		forceEdgeName: "אלץ את כל תאי הקצה לזרום כלפי חוץ",
		streamRasterName: "רסטר של זרימה",
		surfaceRasterName: "משטח רסטר",
		conversionType: "סוג המרה",
		distanceRaster1: "רסטר מרחק 1",
		distanceRaster2: "רסטר מרחק 2",
		costDistanceRaster: "רסטר מרחק עלות",
		costBacklinkRaster: "רסטר של קישור עלות נכנס",
		overridesName: "מעקפים",
		fieldName: "שדה",
		signatureFileOrUrl: "קובץ חתימה או URL",
		redName: "אדום",
		greenName: "ירוק",
		blueName: "כחול",
		infraredName: "אינפרא-אדום",
		panchromaticName: "פנכרומטי",
		multispectralName: "מולטי-ספקטראלי",
		pansharpeningType: "סוג שיפור חדות",
		sensorName: "חיישן",
		spatialReferenceName: "יחוס מרחבי",
		xCellsizeName: "גודל תא X",
		yCellsizeName: "גודל תא Y",
		xOriginName: "נקודת רישום X",
		yOriginName: "נקודת רישום Y",
		percentileName: "ערך באחוזים",
		neighborhoodType: "סוג שכונה",
		widthName: "רוחב",
		heightName: "גובה",
		startAngleName: "זווית פתיחה",
		endAngleName: "סיום זווית",
		neighborhoodValues: "ערכים שכנים",
		horizontalRaster: "רסטר אופקי",
		horizontalFactor: "פקטור אופקי",
		verticalRaster: "רסטר אנכי",
		verticalFactor: "‏פקטור אנכי",
		streamRaster: "רסטר של זרימה",
		flowDirRaster: "רסטר של כיוון זרימה",
		numberNeighborCells: "מספר תאים שכנים",
		zoneConnectivity: "קישוריות אזור",
		addLinkBehavior: "הוסף קישור",
		excludedValue: "ערך שלא נכלל",
		constantFillCheck: "ייצר רסטר מילוי מקבוע",
		fillRaster: "מלא רסטר",
		constantFillValue: "ערך קבוע",
		inputBitPositions: "ביט קלט",
		outputBitPositions: "ביט פלט",
		distanceTypeName: "סוג מרחק",
		barrierDataName: "גבולות רסטר",
		pourPointDataName: "רסטר של נקודת שפך",
		accumulationRasterName: "רסטר של הצטברות זרימה",
		snapDistanceName: "מרחק הצמדה",
		orderMethodName: "שיטת סידור",
		directionMeasurementName: "מרחק המדידה",
		processAsMultiband: "עיבוד כרב-ערוצי",
		processMultidimensional: "עבד כרב-ממדי",
		forceFlowDirectionConvention: "כפה מוסכמת כיוון זרימה עבור רסטר קישור נכנס",
		initialAccumulation: "הצטברות התחלתית",
		maximumAccumulation: "הצטברות מקסימלית",
		sourceLocationBands: "צור שורה ועמודה ששל המקור כרצועות נוספות בפלט",
		backDirectionBand: "צור כיוון חוזר כרצועה נוספת בפלט",
		numberOfCells: "מספר תאים",
		zoneValues: "ערכי אזורים",
		shrinkMethod: "שיטת כיווץ",
		expandMethod: "שיטת הרחבה",
		inputSpectralProfileType: "סוג פרופיל ספקטרלי",
		spectralProfileFileName: "פרופיל ספקטרלי",
		trainingFeatureFileName: "ישות אימון",
		nonNegative: "לא שלילי",
		sumToOne: "סיכום לאחד",
		randomDistribution: "הפצה",
		meanName: "ממוצע",
		probabilityName: "הסתברות",
		alphaName: "אלפא",
		betaName: "בטא",
		rName: "r",
		nName: "צ'",
		seed: "מגורען",
		randomNumberGenerator: "מייצר מספר אקראי",
		cellFactor: "פקטור תא",
		aggregationType: "טכניקת צבירה",
		extentHandling: "הרחב תיחום אם נדרש",
		trendAnalysisDimensionName: "שם ממד",
		trendAnalysisType: "סוג מגמה",
		harmonicFrequency: "תדירות הרמונית",
		polynomialOrder: "סדר פולינומיאלי",
		cycleLengthName: "אורך מחזור",
		trendAnalysisRMSE: "RMSE",
		trendAnalysisR2: "R-Squared",
		trendAnalysisSlopePValue: "P-Value של מקדם שיפוע",
		trendAnalysisSeasonalPeriod: "תקופה עונתית",
		cycleUnitName: "יחידת מחזור",
		predictDimensionValues: "ערכים",
		dimensionDefinitionType: "הגדרת ממד",
		predictDimensionStart: "התחלה",
		predictDimensionEnd: "סיום",
		predictDimensionInterval: "מרווח בין ערכים",
		dimensionUnit: "יחידה",
		interpolationCellsizeName: "גודל תא אינטרפולציה",
		variableName: "משתנים",
		dimensionlessName: "ללא ממדים",
		mdimDefinition: "הגדרת ממד",
		dimensionName: "מימד",
		iterationStart: "התחלה של איטרציה ראשונה",
		iterationEnd: "סוף של איטרציה ראשונה",
		intervalStart: "התחלת מרווח",
		intervalEnd: "סוף מרווח",
		stepName: "צעד",
		rangesName: "טווחים",
		minValue: "ערך מינימלי",
		maxValue: "ערך מקסימלי",
		changeAnalysisRasterName: "שנה רסטר ניתוח",
		changeTypeName: "שנה סוג",
		segmentDate: "תאריך הסגמנט",
		changeDirectionName: "שנה כיוון",
		maxNumChangesName: "מספר שינויים מרבי",
		filterByYear: "סנן לפי שנה",
		minimumYear: "ערך מינימלי",
		maximumYear: "ערך מקסימלי",
		filterByDuration: "סנן לפי משך",
		minimumDuration: "משך מינימלי",
		maximumDuration: "משך מקסימלי",
		filterByMagnitude: "סנן לפי גודל",
		minimumMagnitude: "גודל מינימלי",
		maximumMagnitude: "גודל מקסימלי",
		filterByStartValue: "סנן לפי ערך התחלה",
		minimumStartValue: "ערך התחלה מינימלי",
		maximumStartValue: "ערך התחלה מקסימלי",
		filterByEndValue: "סנן לפי ערך סיום",
		minimumEndValue: "ערך סיום מינימלי",
		maximumEndValue: "ערך סיום מקסימלי",
		modelTypeName: "סוג מודל",
		fromRasterName: "מרסטר",
		toRasterName: "לרסטר",
		computeChangeMethod: "שיטת חישוב שינוי",
		fromClassValues: "ערכי קבוצת 'החל מ' (דוגמה: 2 5)",
		toClassValues: "ערכי קבוצת 'עד' (דוגמה: 2 5)",
		keepMethod: "שיטת סינון",
		useColorMethod: "הגדר צבעי מעבר",
		detectChangeBands: "ערוצים לזיהוי שינוי (התחלה ב-0)",
		tmaskBands: "ערוצים למיסוך בממד הזמן (התחלה ב-0)",
		chiSquaredThreshold: "סף חי בריבוע לזיהוי שינוי",
		minAnomaly: "מינימום תצפיות אנומליות רציפות",
		updatingFrequency: "עדכן תדירות התאמה (בשנים)",
		distanceAccumulationRasterName: "רסטר של הצטברות מרחק",
		costBackdirectionRasterName: "רסטר של כיוון הפוך או כיוון זרימה",
		rasterCollectionName: "אוסף רסטרים",
		itemFunctionName: "‏פונקציית פריט",
		aggregationFunctionName: "פונקציית צבירה",
		processingFunctionName: "פונקציית עיבוד",
		aggregationDefinitionName: "הגדרת צבירה",
		queryGeometryName: "שאילתת גיאומטריה",
		factorFunctionZeroFactor: "פקטור אפס",
		factorFunctionCutAngle: "זווית חיתוך",
		factorFunctionSideFactor: "פקטור צד",
		factorFunctionSlope: "שיפוע",
		factorFunctionLowCutAngle: "זווית חיתוך נמוך",
		factorFunctionHighCutAngle: "זווית חיתוך גבוה",
		factorFunctionCosPower: "חזקת קוסינוס",
		factorFunctionSecPower: "חזקת סקנט",
		factorFunctionTablePath: "נתיב טבלה",
		processingBand: "מבוצע עיבוד של הערוץ",
		processingBandName: "שם ערוץ עיבוד",
		snappingDate: "תאריך הצמדה",
		maxNumSegments: "מספר סגמנטים מקסימלי",
		vertexCountOvershoot: "קטע חורג של ספירת נקודת מפנה",
		spikeThreshold: "סף Spike",
		recoveryThreshold: "סף שחזור",
		minNumObs: "מספר מינימלי של תצפיות",
		pValueThreshold: "סף P-Value",
		bestModelProportion: "פרופורציית המודל הטוב ביותר",
		preventOneYearRecovery: "מנע התאוששות שנה אחת",
		recoveryIncreaseTrend: "להתאוששות יש מגמה גוברת",
		outputOtherBands: "פלט ערוצים אחרים",
		sortType: "סוג המיון",
		numberOfRuns: "הפעל הרחבה וכיווץ פעמיים",
		percentileValue: "ערך באחוזים",
		percentileInterpolationType: "סוג אינטרפולציית אחוזון",
		rasterInfoProperty: "מאפיין",
		rasterInfoValue: "ערך",
		rasterInfoColumns: "עמודות",
		rasterInfoRows: "שורות",
		rasterInfoBandCount: "מספר ערוצים",
		rasterInfoPixelSizeX: "גודל תא X",
		rasterInfoPixelSizeY: "גודל תא Y",
		rasterInfoPixelType: "סוג פיקסל",
		rasterExtentTop: "עליון",
		rasterExtentBottom: "תחתון",
		rasterExtentLeft: "שמאל",
		rasterExtentRight: "ימין",
		rasterStatisticsNotCalculated: "הנתונים הסטטיסטיים לא חושבו.",
		spatialReferenceProjection: "היטל",
		spatialReferenceWkid: "WKID",
		spatialReferenceLatestWkid: "WKID קודם",
		spatialReferenceWkt: "WKT",
		spatialReferenceVcsWkid: "VCSWKID",
		spatialReferenceLatestVcsWkid: "VCSWKID קודם",
		spatialReferenceAuthority: "סמכות",
		spatialReferenceLinearUnit: "יחידה לינארית",
		spatialReferenceAngularUnit: "יחידת זווית",
		spatialReferenceFalseEasting: "מזרח שקרי",
		spatialReferenceFalseNorthing: "צפון שקרי",
		spatialReferenceCentralMeridian: "מרידיאן מרכזי",
		spatialReferencePrimeMeridian: "מרידיאן ראשי",
		spatialReferenceStandardParallel1: "קו רוחב מרכזי להיטל 1",
		spatialReferenceStandardParallel2: "קו רוחב מרכזי להיטל 2",
		spatialReferenceLatitudeOfOrigin: "קו רוחב של מקור",
		spatialReferenceAuxiliarySphereType: "סוג Auxiliary Sphere",
		spatialReferenceDatum: "דאטום",
		spatialReferenceSpheroid: "ספרואיד",
		spatialReferenceSemimajorAxis: "ציר Semimajor:",
		spatialReferenceSemiminorAxis: "ציר Semiminor:",
		spatialReferenceInverseFlattening: "פחיסות הופכית",
		inputDefinitionFileName: "קובץ הגדרת קלט",
		deleteName: "מחיקה",
		addVariableName: "הוסף משתנה",
		maxNumPixelsPerSegment: "גודל סגמנט מרבי בפיקסלים",
		forwardWindowName: "חלון לפנים",
		backwardWindowName: "חלון לאחור",
		noDataHandlingName: "טיפול ב-NoData",
		circularWrapValueName: "ערך עוטף מעגלי",
		fromClassNameFieldName: "שם שדה עבור שמות קבוצה ברסטר מ-",
		toClassNameFieldName: "שם שדה עבור שמות קבוצה ברסטר ל-",
		targetRasterName: "רסטר מטרה",
		circularWrapValue: "ערך עוטף מעגלי",
		bandIndexesR: "ביטוי אדום",
		bandIndexesG: "ביטוי ירוק",
		bandIndexesB: "ביטוי כחול",
		exampleName: "דוגמה",
		inputName: "קלט",
		outputName: "פלט",
		optionalName: "אופציונלי",
		browseDefinitionFile: "דפדף אל קובץ הגדרה",
		selectDefinitionFile: "בחר קובץ הגדרת קלט",
		inputDefinitionURL: "כתובת URL של קובץ הגדרת קלט",
		enterDefinitionFileURL: "הזן כתובת URL של קובץ הגדרה",
		browseXMLFile: "דפדף אל קובץ XML",
		selectStatsFile: "בחר קובץ סטטיסטיקה והיסטוגרמות",
		enterXMLFileURL: "הזן כתובת URL של קובץ XML",
		xmlFileURL: "כתובת URL של קובץ XML",
		circularCalculation: "חישוב סטטיסטיקה מעגלית",
		localSurfaceType: "סוג פני שטח מקומיים",
		surfaceParameterType: "סוג פרמטר",
		neighborhoodDistance: "מרחק שכונה",
		useAdaptiveNeighborhood: "השתמש בשכונה אדפטיבית",
		outputSlopeType: "פלט מדידת שיפוע",
		projectAzimuths: "חיזוי אזימוטים גיאודזיים",
		useEquatorialAspect: "שימוש במישור קו המשווה",
		zUnit: "יחידת Z",
		analysisMask: "מסכת ניתוח",
		stdDeviation: "סטיית תקן",
		"true": "אמת",
		"false": "שקר",
		costDistanceRaster1: "קלט של רסטר מרחק עלות מצטברת 1",
		costDistanceRaster2: "קלט של רסטר מרחק עלות מצטברת 2",
		threshold: "סף",
		thresholdMethod: "שיטה של ערך סף",
		directionRaster1: "קלט רסטר כיוון חוזר 1",
		directionRaster2: "קלט רסטר כיוון חוזר 2",
		maxIterations: "מספר איטרציות מרבי",
		epsilon: "אפסילון"
	},
	enumLabels: {
		attributeTableTypeManual: "ידני",
		attributeTableTypeExternal: "חיצוני",
		clrSchemeTypeColormap: "Colormap",
		clrSchemeTypeColorRamp: "מדרג צבעים",
		colormapTypeElevation: "גובה",
		colormapTypeGray: "אפור",
		colormapTypeNDVI: "NDVI",
		colormapTypeNDVI2: "NDVI2",
		colormapTypeNDVI3: "NDVI3",
		colormapTypeRandom: "אקראי",
		none: "ללא",
		slopeTypeAdjusted: "מותאם",
		slopeTypeDegree: "מעלה",
		slopeTypePercentRise: "עליית אחוז",
		slopeTypeScaled: "מותאם לקנה מידה",
		stretchTypeMinMax: "מינימום-מקסימום",
		stretchTypePercentMinMax: "אחוז מינימום-מקסימום",
		stretchTypeSigmoid: "סיגמואיד",
		stretchTypeStdDev: "סטיית תקן",
		hillshadeTypeSimple: "מסורתי",
		hillshadeTypeMultidirectional: "רב כיווני",
		bandComboByNames: "שמות ערוצים",
		bandComboByWavelength: "אורכי גל של ערוץ",
		bandComboByIDs: "IDs של ערוצים",
		missingBandActionBestMatch: "התאמה הכי טובה",
		missingBandActionFail: "כשל",
		unitTypeCelsius: "צלזיוס",
		unitTypeCentimeters: "סנטימטרים",
		unitTypeDecimeters: "דצימטרים",
		unitTypeFahrenheit: "פרנהייט",
		unitTypeFeet: "רגליים",
		unitTypeFeetPerSec: "רגל לשנייה (ft/s)",
		unitTypeInches: "אינצ׳ים",
		unitTypeKelvin: "קלווין",
		unitTypeKilometers: "קילומטרים",
		unitTypeKmsPerHour: "קילומטר לשעה (km/h)",
		unitTypeKnots: "קשר (kn)",
		unitTypeMeters: "מטרים",
		unitTypeMetersPerSec: "מטרים לשנייה (m/s)",
		unitTypeMiles: "מייל",
		unitTypeMilesPerHour: "מיילים לשעה (mph)",
		unitTypeMillimeters: "מילימטרים",
		unitTypeNauticalMiles: "מיילים ימיים",
		unitTypeYards: "יארדים",
		unitTypeDecimalDegrees: "מעלות עשרוניות",
		unitTypePoints: "נקודות",
		unitTypeUnknown: "לא ידוע",
		unitTypeSqMapUnits: "יחידות מפה ריבועיות",
		unitTypeSqMiles: "מילים רבועים",
		unitTypeSqKms: "קילומטרים רבועים",
		unitTypeAcres: "אקרים",
		unitTypeHectares: "הקטרים",
		unitTypeSqYards: "יארדים רבועים",
		unitTypeSqFt: "רגל רבוע",
		unitTypeSqInches: "אינצ'ים רבועים",
		unitTypeSqMts: "מטרים רבועים",
		unitTypeSqCms: "סנטימטרים רבועים",
		unitTypeSqMms: "מילימטרים רבועים",
		cellsizeTypeFirst: "ראשון מ",
		cellsizeTypeMin: "מינימום של",
		cellsizeTypeMax: "מקסימום של",
		cellsizeTypeMean: "ממוצע של",
		cellsizeTypeLast: "האחרון מ",
		extentTypeFirst: "ראשון מ",
		extentTypeIntersection: "הצטלבות של",
		extentTypeUnion: "איחוד של",
		extentTypeLast: "האחרון מ",
		noDataInterpretAny: "התאם כל דבר",
		noDataInterpretAll: "התאם הכול",
		curvatureTypeStandard: "סטנדרט",
		curvatureTypeProfile: "פרופיל",
		curvatureTypePlanform: "Planform",
		filterTypeLineDetectionHorizontal: "איתור קו אופקי",
		filterTypeLineDetectionVertical: "איתור קו אנכי",
		filterTypeLineDetectionLeftDiagonal: "איתור קו שמאל-אלכסוני",
		filterTypeLineDetectionRightDiagonal: "איתור קו ימין-אלכסוני",
		filterTypeGradientNorth: "שיפוע צפון",
		filterTypeGradientWest: "שיפוע מערב",
		filterTypeGradientEast: "שיפוע מזרח",
		filterTypeGradientSouth: "שיפוע דרום",
		filterTypeGradientNorthEast: "שיפוע צפון מזרח",
		filterTypeGradientNorthWest: "שיפוע צפון מערב",
		filterTypeSmoothArithmeticMean: "ממוצע מתמטי מוחלק",
		filterTypeSmoothing3x3: "החלקה 3x3",
		filterTypeSmoothing5x5: "החלקה 5x5",
		filterTypeSharpening3x3: "חידוד 3x3",
		filterTypeSharpening5x5: "חידוד 5x5",
		filterTypeLaplacian3x3: "Laplacian 3x3",
		filterTypeLaplacian5x5: "Laplacian 5x5",
		filterTypeSobelHorizontal: "Sobel Horizontal",
		filterTypeSobelVertical: "Sobel Vertical",
		filterTypeSharpen: "חידוד",
		filterTypeSharpen2: "חדד יותר",
		filterTypePointSpread: "תפרוסת נקודות",
		userDefined: "מוגדר ע\"י המשתמש",
		ContourTypeLines: "קווי גובה",
		ContourTypeFill: "מילוי קו גובה",
		ContourTypeSmoothOnly: "פני שטח חלקים בלבד",
		rasterizeFirst: "ראשון",
		rasterizeLast: "אחרון",
		rasterizeSmallest: "הקטן ביותר",
		rasterizeLargest: "הגדול ביותר",
		resamplingTypeNearest: "שכן קרוב ביותר",
		resamplingTypeBilinear: "אינטרפולציה בי-לינארית",
		resamplingTypeCubic: "קונוולוציה קובית",
		resamplingTypeMajority: "Majority",
		resamplingTypeBilinearPlus: "אינטרפולציה בי-לינארית פלוס",
		resamplingTypeGauss: "טשטוש גאוס",
		resamplingTypeGaussPlus: "טשטוש גאוס פלוס",
		resamplingTypeAverage: "ממוצע",
		resamplingTypeMinimum: "מינימום",
		resamplingTypeMaximum: "מקסימום",
		resamplingTypeVectorAvg: "ממוצע ווקטור",
		minimum: "מינימום",
		maximum: "מקסימום",
		mean: "ממוצע",
		stdDeviation: "סטיית תקן",
		uvMagDirTypeUV: "U-V",
		uvMagDirTypeMagDir: "כיוון עוצמה",
		unknown: "לא ידוע",
		angleRefSysGeographic: "גיאוגרפי",
		angleRefSysArithmetic: "חשבוני",
		interpolateIrregularDataNearest: "שכן קרוב ביותר",
		interpolateIrregularDataBilinear: "Bilinear",
		interpolateIrregularDataTinningLinear: "Tin לינארי",
		interpolateIrregularDataTinningNaturalNeighbor: "שכן טבעי",
		interpolateIrregularDataTinningIDW: "מרחק הפוך משוקלל",
		esriRasterThresholdTypeConstant: "קבוע",
		esriRasterThresholdTypeOtsu: "Otsu",
		esriRasterThresholdTypeTsai: "Tsai",
		esriRasterThresholdTypeKapur: "Kapur",
		esriRasterThresholdTypeKittler: "Kittler",
		esriRasterThresholdTypeRosin: "Rosin",
		argStatsTypeMax: "Arg Max",
		argStatsTypeMin: "Arg Min",
		argStatsTypeMedian: "Arg Median",
		argStatsTypeDuration: "משך",
		arithmeticOpPlus: "חיבור",
		arithmeticOpMinus: "חיסור",
		arithmeticOpMultiply: "הכפל",
		arithmeticOpDivide: "חלק",
		arithmeticOpPower: "כוח",
		arithmeticOpMode: "מוד",
		clipTypeOutside: "גזירה החוצה",
		clipTypeInside: "גזירה פנימה",
		yes: "כן",
		no: "לא",
		densities: "צפיפויות",
		expectedCounts: "ספירות צפויות",
		planar: "מישורי",
		geodesic: "גיאודזי",
		eachCell: "כל תא",
		eachZone: "כל אזור",
		bestSingle: "היחיד הטוב ביותר",
		allSightlines: "כל שדות הראייה",
		perimeterSightlines: "שדות ראייה היקפיים",
		frequency: "תדירות",
		observers: "צופים",
		majority: "Majority",
		median: "חציון",
		minority: "מיעוט",
		percentile: "אחוזון",
		range: "טווח",
		sum: "סכום",
		variety: "שונות",
		ndvi: "NDVI",
		savi: "SAVI",
		bandArithmeticMethodTSAVI: "SAVI מומר",
		bandArithmeticMethodMSAVI: "SAVI שהשתנה",
		bandArithmeticMethodSultan: "פורמולת Sultan",
		gemi: "GEMI",
		pvi: "PVI",
		gvi: "GVI (Landsat TM)‎",
		vari: "VARI",
		sr: "SR",
		gndvi: "GNDVI",
		ndvire: "NDVIre",
		srre: "SRre",
		mtvi2: "MTVI2",
		rtviCore: "RTVICore",
		cire: "CIre",
		cig: "CIg",
		ndwi: "NDWI",
		evi: "EVI",
		ironOxide: "אוקסיד ברזל",
		ferrousMinerals: "מינרלים אל ברזליים",
		clayMinerals: "מינרלים חימריים",
		wndwi: "WNDWI",
		bai: "BAI",
		mndwi: "MNDWI",
		nbr: "NBR",
		ndbi: "NDBI",
		ndmi: "NDMI",
		ndsi: "NDSI",
		localSquareRoot: "שורש ריבועי",
		localACos: "ACos",
		localASin: "ASin",
		localATan: "ATan",
		localATanH: "ATanH",
		localAbs: "Abs",
		localBitwiseNot: "Bitwise Not",
		localBooleanNot: "Boolean Not",
		localCos: "Cos",
		localCosH: "CosH",
		localExp: "Exp",
		localExp10: "Exp10",
		localExp2: "Exp2",
		localInt: "Int",
		localIsNull: "ריק",
		localFloat: "צף",
		localLn: "Ln",
		localLog10: "Log10",
		localLog2: "Log2",
		localNegate: "Negate",
		localRoundDown: "עגל כלפי מטה",
		localRoundUp: "עגל כלפי מעלה",
		localSin: "Sin",
		localSinH: "SinH",
		localTan: "Tan",
		localTanH: "TanH",
		localACosH: "ACosH",
		localASinH: "ASinH",
		localPlus: "חיבור",
		localMinus: "חיסור",
		localTimes: "זמנים",
		localPower: "כוח",
		localBitwiseAnd: "Bitwise And",
		localBitwiseLeftShift: "Bitwise Left Shift",
		localBitwiseOr: "Bitwise Or",
		localBitwiseRightShift: "Bitwise Right Shift",
		localBitwiseXor: "Bitwise Xor",
		localBooleanAnd: "Boolean And",
		localBooleanOr: "Boolean Or",
		localBooleanXor: "Boolean Xor",
		localDivide: "חלק",
		localEqualTo: "שווה ל",
		localGreaterThan: "גדול מ",
		localGreaterThanEqual: "גדול מאשר שווה",
		localLessThan: "פחות מ",
		localLessThanEqual: "מפחות מאשר שווה",
		localMod: "Mod",
		localNotEqual: "אינו שווה",
		localATan2: "ATan2",
		localSquare: "ריבוע",
		localSetNull: "Set Null",
		remapDefTypeList: "רשימה",
		remapDefTypeTable: "טבלה",
		remapTableTypeSimple: "פשוט",
		remapTableTypeDynamic: "דינאמי",
		remapTableTypeReassignment: "יישום מחדש",
		geomCorrectionByConstZ: "השתמש ב-Z קבוע",
		geomCorrectionByDEM: "השתמש ב-DEM",
		radarCalibBetaNought: "Beta nought",
		radarCalibSigmaNought: "Sigma nought",
		radarCalibGammaNought: "Gamma nought",
		speckleFilterTypeLee: "פילטר Lee",
		speckleFilterTypeEnhancedLee: "פילטר Lee משופר",
		speckleFilterTypeFrost: "פילטר Frost",
		speckleFilterTypeKuan: "פילטר Kuan",
		speckleNoiseModelMul: "רעש Multiplicative",
		speckleNoiseModelAdd: "רעש מצטבר",
		speckleNoiseModelAddnMul: "רעש מצטבר ורעש מכפיל",
		mosaicOpTypeFirst: "ראשון",
		mosaicOpTypeLast: "אחרון",
		mosaicOpTypeMin: "מינימום",
		mosaicOpTypeMax: "מקסימום",
		mosaicOpTypeMean: "ממוצע",
		mosaicOpTypeBlend: "מיזוג",
		mosaicOpTypeSum: "סכום",
		integer: "מספר שלם",
		rfxD8: "D8",
		rfxMFD: "MFD",
		dinf: "Dinf",
		vertical: "אנכי",
		horizontal: "אופקי",
		localCellStatisticsMajority: "Majority",
		localCellStatisticsMax: "מקסימום",
		localCellStatisticsMean: "ממוצע",
		localCellStatisticsMedian: "חציון",
		localCellStatisticsMin: "מינימום",
		localCellStatisticsMinority: "מיעוט",
		localCellStatisticsRange: "טווח",
		localCellStatisticsStdDev: "סטיית תקן",
		localCellStatisticsSum: "סכום",
		localCellStatisticsVariety: "שונות",
		localCellStatisticsMajorityIgnoreND: "רוב (התעלם מ-NoData)",
		localCellStatisticsMaxIgnoreND: "מקסימום (התעלם מ-NoData)",
		localCellStatisticsMeanIgnoreND: "ממוצע (התעלם מ-NoData)",
		localCellStatisticsMedianIgnoreND: "חציון (התעלם מ-NoData)",
		localCellStatisticsMinIgnoreND: "מינימום (התעלם מ-NoData)",
		localCellStatisticsMinorityIgnoreND: "מיעוט (התעלם מ-NoData)",
		localCellStatisticsRangeIgnoreND: "טווח (התעלם מ-NoData)",
		localCellStatisticsStdDevIgnoreND: "סטיית תקן (התעלם מ-NoData)",
		localCellStatisticsSumIgnoreND: "סכום (התעלם מ-NoData)",
		localCellStatisticsVarietyIgnoreND: "שונות (התעלם מ-NoData)",
		localCellStatisticsTypePercentileIgnoreND: "אחוזון (התעלם מ-NoData)",
		fromSource: "ממקור",
		toSource: "למקור",
		colorspaceConversionRgbToHsv: "RGB אל HSV",
		colorspaceConversionHsvToRgb: "HSV אל RGB",
		pansharpenTypeIHS: "IHS",
		pansharpenTypeBrovey: "Brovey",
		pansharpenTypeEsri: "Esri",
		pansharpenTypeMean: "ממוצע",
		pansharpenTypeGramSchmidt: "Gram-Schmidt",
		rectangleNeighborhood: "מלבן",
		circleNeighborhood: "מעגל",
		annulusNeighborhood: "Annulus",
		wedgeNeighborhood: "טריז",
		irregularNeighborhood: "לא סדיר",
		weightNeighborhood: "משקל",
		four: "ארבע",
		eight: "שמונה",
		within: "בתוך",
		cross: "צלב",
		addLink: "הוסף קישור",
		noLink: "אין קישור",
		weightedMean: "ממוצע משוקלל",
		ls8QCBitPatternCirrus: "Landsat 8 Cirrus",
		ls8QCBitPatternCloud: "עננים‬ של Landsat 8",
		ls8QCBitPatternCloudShadow: "צללי עננים של Landsat 8",
		ls8QCBitPatternDesignatedFill: "מילוי ייעודי של Landsat 8",
		ls8QCBitPatternDroppedFrame: "מסגרת נעלמת של Landsat 8",
		ls8QCBitPatternSnowIce: "שלג/קרח של Landsat 8",
		ls8QCBitPatternTerrainOcclusion: "פני קרקע אטומים של Landsat 8",
		ls8QCBitPatternVegetation: "צמחייה של Landsat 8",
		ls8QCBitPatternWater: "כיסוי מים של Landsat 8",
		downStream: "במורד הזרם",
		upStream: "מעלה הזרם",
		strahler: "STRAHLER",
		shreve: "SHREVE",
		currentSlice: "חתך נוכחי",
		allSlices: "כל הפלחים",
		expandDistance: "מרחק",
		expandMorphological: "מורפולוגי",
		spectralProfileFile: "פרופיל ספקטרלי",
		trainingFeatureFile: "ישות אימון",
		randomDistributionTypeUniform: "אחיד",
		randomDistributionTypeUniformInteger: "מספר שלם",
		randomDistributionTypeNormal: "רגיל",
		randomDistributionTypeExponential: "מעריכי",
		randomDistributionTypePoisson: "Poisson",
		randomDistributionTypeGamma: "גמא",
		randomDistributionTypeBinomial: "בינומי",
		randomDistributionTypeGeometric: "גיאומטרי",
		randomDistributionTypeNegativeBinomial: "בינומית שלילית",
		randomGeneratorTypeStandardCRand: "Standard C Rand",
		randomGeneratorTypeAlgorithmACM599: "ACM collected algorithm 599",
		randomGeneratorTypeMersenneTwister: "Mersenne Twister",
		sumName: "סכום",
		medainName: "חציון",
		trendLinear: "לינארי",
		trendHarmonic: "הרמוני",
		trendPolynomial: "פולינום",
		trendMannKendall: "Mann-Kendall",
		trendSeasonalKendall: "Seasonal-Kendall",
		dimensionByValue: "לפי ערך",
		dimensionByInterval: "לפי מרווח",
		mdimDefTypeAll: "הכל",
		mdimDefTypeByValues: "לפי ערכים",
		mdimDefTypeByRanges: "לפי טווחים",
		mdimDefTypeByIteration: "לפי איטרציה",
		mdimDefTypeByInterval: "לפי מרווח",
		mdimDefTypeByTargetRaster: "לפי רסטר יעד",
		esriTimeUnitsHours: "שעות",
		esriTimeUnitsDays: "ימים",
		esriTimeUnitsWeeks: "שבועות",
		esriTimeUnitsMonths: "חודשים",
		esriTimeUnitsYears: "שנים",
		esriTimeIntervalKeywordHourly: "שעתי",
		esriTimeIntervalKeywordDaily: "יומי",
		esriTimeIntervalKeywordWeekly: "שבועי",
		esriTimeIntervalKeywordDekadly: "Dekadly",
		esriTimeIntervalKeywordPentadly: "Pentadly",
		esriTimeIntervalKeywordMonthly: "חודשי",
		esriTimeIntervalKeywordQuarterly: "רבעוני",
		esriTimeIntervalKeywordYearly: "שנתי",
		esriTimeIntervalKeywordRecurringDaily: "חוזר כל יום",
		esriTimeIntervalKeywordRecurringWeekly: "חוזר כל שבוע",
		esriTimeIntervalKeywordRecurringMonthly: "חוזר כל חודש",
		esriTimeIntervalKeywordRecurringQuarterly: "חוזר כל רבעון",
		aggDefTypeAll: "הכל",
		aggDefTypeIntervalKeyword: "מילת מפתח למרווח",
		aggDefTypeIntervalValue: "ערך למרווח",
		aggDefTypeIntervalRanges: "טווחי מרווח",
		latestChange: "מועד השינוי האחרון",
		earliestChange: "מועד השינוי המוקדם ביותר",
		largestChange: "מועד השינוי הגדול ביותר",
		numberOfChanges: "מספר שינויים",
		longestChange: "הזמן של השינוי הארוך ביותר",
		shortestChange: "הזמן של השינוי הקצר ביותר",
		fastestChange: "הזמן של השינוי המהיר ביותר",
		slowestChange: "מועד השינוי האיטי ביותר",
		allChanges: "הכל",
		increaseChanges: "הגדל",
		decreaseChanges: "הקטן",
		segmentBeginning: "התחלת הסגמנט",
		segmentEnd: "סוף הסגמנט",
		esriComputeChangeMethodDifference: "שונות",
		esriComputeChangeMethodRelativeDifference: "הפרש יחסי",
		esriComputeChangeMethodCategorical: "הבדל קטגורי",
		esriComputeChangeMethodMultispectralEuclideanDistance: "מרחק אוקלידי ספקטרלי",
		esriComputeChangeMethodMultispectralAngularDifference: "הפרש זוויות ספקטרלי",
		esriComputeChangeMethodMultispectralAxisWithBiggestChange: "הערוץ עם השינוי הרב ביותר",
		esriComputeChangeKeepAll: "השאר הכל",
		esriComputeChangeKeepChangedOnly: "השאר פיקסלים שהשתנו בלבד",
		esriComputeChangeKeepUnchangedOnly: "השאר פיקסלים שלא השתנו בלבד",
		esriComputeChangeUseColorAverage: "ממוצע צבעי 'החל מ' ו'עד'",
		esriComputeChangeUseColorFrom: "השתמש בצבעי 'החל מ'",
		esriComputeChangeUseColorTo: "השתמש בצבעי 'עד'",
		factorFunctionBinary: "בינארי",
		factorFunctionForward: "קדם",
		factorFunctionLinear: "לינארי",
		factorFunctionInvLinear: "לינארי הפוך",
		factorFunctionTable: "טבלה",
		factorFunctionSymLinear: "לינארי סימטרי",
		factorFunctionSymInvLinear: "לינארי סימטרי הפוך",
		factorFunctionCos: "קוסינוס",
		factorFunctionSec: "סקנט",
		factorFunctionCosSec: "סקנט קוסינוס",
		factorFunctionSecCos: "קוסינוס סקנט",
		noSort: "אל תמיין",
		ascend: "סדר עולה",
		descend: "סדר יורד",
		autoDetect: "זיהוי אוטומטי",
		nearest: "הקרוב ביותר",
		linear: "לינארי",
		esriMonthJanuary: "ינואר",
		esriMonthFebruary: "פברואר",
		esriMonthMarch: "מרץ",
		esriMonthApril: "אפריל",
		esriMonthMay: "מאי",
		esriMonthJune: "יוני",
		esriMonthJuly: "יולי",
		esriMonthAugust: "אוגוסט",
		esriMonthSeptember: "ספטמבר",
		esriMonthOctober: "אוקטובר",
		esriMonthNovember: "נובמבר",
		esriMonthDecember: "דצמבר",
		dimensionalMovingIgnoreNoData: "נתונים",
		dimensionalMovingPropagateNoData: "NoData",
		dimensionalMovingFillOnlyNoData: "מלא NoData",
		circularMean: "ממוצע מעגלי",
		circularName: "מעגלי",
		arithmeticName: "חשבוני",
		slopeName: "שיפוע",
		aspectName: "מפנה",
		meanCurvature: "עקומה ממוצעת",
		profileCurvature: "עקומת פרופיל (קו שיפוע רגיל)",
		tangentialCurvature: "עקומת משיק (קו גובה רגיל)",
		planCurvature: "עקומת תוכנית (קו גובה חזוי)",
		contourGeodesicTorsion: "מאמץ פיתול גיאודזי של קו גובה",
		gaussianCurvature: "עקומת גאוס",
		casoratiCurvature: "עקומת קזוראטי",
		localSurfaceTypeQuadratic: "ריבועי",
		localSurfaceTypeBiquadratic: "דו-ריבועי",
		thresholdNoThreshold: "אין ערך סף",
		thresholdPercentLeastCost: "העלות הנמוכה ביותר באחוזים",
		thresholdAccumulativeCost: "עלות מצטברת",
		clrmapTypeHillshade: "הצללה"
	},
	categoryLabels: {
		sourceCharacteristics: "מאפייני מקור",
		neighborhoodSettings: "הגדרות Neighborhood",
		statistics: "סטטיסטיקה",
		gamma: "גמא",
		viewshedParameters: "פרמטרי Viewshed",
		observerParameters: "פרמטרי צופה",
		irregularDataInterpolation: "אינטרפולציית נתונים לא סדירים",
		modelStatistics: "נתונים סטטיסטיים של מודל",
		aggregationDef: "הגדרת צבירה",
		filterByAttributes: "סנן לפי מאפיינים",
		percentileName: "אחוזון",
		rasterInfo: "נתוני רסטר",
		extent: "תיחום",
		spatialReference: "ייחוס מרחבי"
	},
	outputRasterHelpTexts: {
		outputName: "<p>שם השכבה שתיווצר ותתווסף למפה.</p>",
		resultType: "<p>סוג הקלט שייווצר. פריטי הפלט יכולים להיות שכבות תמונות באריחים או שכבות תמונות דינמיות.</p>",
		saveResultIn: "<p>שם התיקייה ב<b>התוכן שלי</b> שבה התוצאה תישמר.</p>"
	},
	analysisEnvironmentsHelpTexts: {
		description: "<p>הגדרות סביבה לניתוח ב-Map Viewer. </p>",
		outSR: "<p>מציין את מערכת הקואורדינטות עבור הניתוח ושכבת התוצאה.</p>",
		extent: "<p>מציין את השטח שישמש לניתוח.</p>",
		snapRaster: "<p>מכוונן את התיחום של הפלט כך שיתאים ליישור התאים בשכבה שצוינה להצמדת הרסטר.</p>",
		cellSize: "<p>מציין את גודל התא או הרזולוציה אשר ישמשו לניתוח וליצירת שכבת רסטר הפלט.</p>",
		mask: "<p>מציין שכבת מסיכה, שבה רק התאים שבתוך שטח המסיכה ישמשו לניתוח.</p>",
		resamplingMethod: "<p>מציין כיצד לבצע אינטרפולציה של ערכי פיקסל כאשר אין התאמה בין הרסטרים של הקלט ושל הפלט.</p>"
	},
	mainGenStrings: {
		unsupportedDataType: "סוג לא נתמך",
		currentlyUnsupported: " עורך ברירת מחדל של ${missingType} יגיע בקרוב. תיבת טקסט זמנית של מציין מיקום לציון קלטים שמבוססים על מחרוזת.",
		unsupportedOverrideWarning: "בקרוב יגיע רכיב שמחליף את העורך וכולל חווית משתמש טובה יותר לעבודה עם הפרמטרים הבאים:",
		overrideWidgetMissing: "חסר רכיב שמחליף את העורך!",
		uiIncomplete: "שליחת העבודה נכשלה. הפונקציה לא יכולה לפעול מכיוון שכמה משדות החובה לא תואמים או שהם חסרים ב-UI.",
		count: "מונה",
		selectVariables: "בחר משתנים",
		selectFeature: "בחר שכבת ישות",
		greaterThanErrorMessage: "מספר הקלט חייב להיות גדול מ-${min}",
		lesserThanErrorMessage: "מספר הקלט חייב להיות קטן מ-${max}",
		greaterThanOrEqualErrorMessage: "מספר הקלט חייב להיות גדול או שווה ${min}",
		lesserThanOrEqualErrorMessage: "מספר הקלט חייב להיות קטן או שווה ${max}",
		allowScalar: "בחר שכבה או הזן ערך קבוע",
		selectField: "בחר שדה",
		parameterRequired: "זהו פרמטר חובה.",
		enterAValue: "הזן ערך...",
		invalidInput: "הערך שהוזן אינו חוקי.",
		itemNotFound: "הפריט לא קיים או לא נגיש.",
		itemPermissionDenied: "אין לך הרשאות לגשת לפריט זה.",
		layerNotAvailable: "נכשלה טעינת שכבה ${layerName}.",
		multipleLayersNotAvailable: "נכשלה טעינת שכבה ${layerName} ואחרות.",
		learnMoreLabel: "מידע נוסף",
		fieldNotAvailable: "טעינת שדה נכשלה.",
		allowAnalysis: "לא ניתן לבצע ניתוח ב-image service.",
		allowAnalysisReason: "שכבה אחת או יותר מהמפה לא רשומה כאן מכיוון שאינה מאפשרת ניתוח.",
		learnMoreText: "מידע נוסף",
		atLeastOneRasterInput: "שכבת קלט אחת לפחות צריכה להיות שכבת רסטר.",
		browseAnalysisLayers: "עיין בשכבות",
		activeMapViewExtent: "השתמש בתיחום המפה הנוכחי",
		chooseRaster: "בחר רסטר גזירה",
		chooseGeometry: "בחר גיאומטריית גזירה",
		resultType: "סוג תוצאה",
		saveInFolder: "שמור בתיקייה",
		outputName: "שם פלט",
		outputLayerType: "סוג שכבת פלט",
		dynamicImageryLayer: "שכבת תצלומים דינמית",
		tiledImageryLayer: "שכבת תמונות באריחים",
		custom: "מותאם",
		loading: "טוען...",
		layerMissing: "שכבה אחת או יותר מהמפה לא רשומה כאן מכיוון שאינה מאפשרת ניתוח. לימוד נוסף",
		browseCoordinateSystems: "עיין במערכות קואורדינטות",
		unableToRepopulateOutSR: "לא ניתן למלא את מערכת קואורדינטות הפלט.",
		defaultTitle: "הצג עוד",
		"ARC (equal arc-second)": "ARC (שווה קשת-שני)",
		Africa: "אפריקה",
		Antarctica: "אנטארקטיקה",
		Argentina: "ארגנטינה",
		Asia: "אסיה",
		"Asteroid Belt": "חגורת אסטרואיד",
		"Atlantic Ocean": "האוקיינוס האטלנטי",
		Australia: "אוסטרליה",
		"Australia and New Zealand": "אוסטרליה וניו זילנד",
		Austria: "אוסטריה",
		"BLM (US Feet)": "BLM (רגל ארה\"ב)",
		Bangladesh: "בנגלדש",
		"Beijing 1954": "בייג'ין 1954",
		Bhutan: "בהוטן",
		CGCS2000: "CGCS2000",
		Canada: "קנדה",
		Caribbean: "הקריביים",
		"Caribbean Sea": "הים הקריבי",
		"Central America": "מרכז אמריקה",
		"Central and North America": "מרכז וצפון אמריקה",
		Colombia: "קולומביה",
		Continental: "קונטיננטלי",
		"County Systems": "מערכות מחוז",
		"Democratic Republic of the Congo": "הרפובליקה הדמוקרטית של קונגו",
		"EPSG Arctic": "EPSG ארקטי",
		Earth: "כדור הארץ",
		"Ellipsoidal-based": "מבוסס-אליפסואיד",
		Europe: "אירופה",
		Finland: "פינלנד",
		France: "צרפת",
		"GSK 2011": "GSK 2011",
		"Gauss Kruger": "Gauss Kruger",
		"Geographic Coordinate Systems": "מערכות קואורדינטות גיאוגרפיות",
		Germany: "גרמניה",
		"Gravity-related": "קשור לכוח הכבידה",
		"Greenwich-based": "מבוסס גרינוויץ'",
		"Highways England": "כבישים מהירים בריטניה",
		Illinois: "אילינוי",
		"Indian Ocean": "האוקיינוס ההודי",
		"Indian Subcontinent": "תת-היבשת ההודית",
		Indiana: "אינדיאנה",
		Indonesia: "אינדונזיה",
		Iowa: "איווה",
		"Ireland and United Kingdom": "אירלנד ובריטניה",
		Italy: "איטליה",
		Japan: "יפן",
		Jupiter: "צדק",
		Kansas: "קנזס",
		"Las Vegas": "לאס וגאס",
		Libya: "לוב",
		Malaysia: "מלזיה",
		"Malaysia and Singapore": "מלזיה וסינגפור",
		Mars: "מארס",
		Mercury: "מרקורי",
		Minnesota: "מינסוטה",
		Montana: "מונטנה",
		"NAD 1927": "NAD 1927",
		"NAD 1927 (US Feet)": "NAD 1927 (רגל ארה\"ב)",
		"NAD 1983": "NAD 1983",
		"NAD 1983 (2011)": "NAD 1983 (2011)",
		"NAD 1983 (2011) (Intl Feet)": "NAD 1983 (2011) (רגל בנל\"א)",
		"NAD 1983 (2011) (Meters)": "NAD 1983 (2011) (מטרים)",
		"NAD 1983 (2011) (US Feet)": "NAD 1983 (2011) (רגל ארה\"ב)",
		"NAD 1983 (CORS96) (Intl Feet)": "NAD 1983 (CORS96) (רגל בנל\"א)",
		"NAD 1983 (CORS96) (Meters)": "NAD 1983 (CORS96) (מטרים)",
		"NAD 1983 (CORS96) (US Feet)": "NAD 1983 (CORS96) (רגל ארה\"ב)",
		"NAD 1983 (Intl Feet)": "NAD 1983 (רגל בנל\"א)",
		"NAD 1983 (Meters)": "NAD 1983 (מטרים)",
		"NAD 1983 (PA11) (Meters)": "NAD 1983 (PA11) (מטרים)",
		"NAD 1983 (PA11) (US Feet)": "NAD 1983 (PA11) (רגל ארה\"ב)",
		"NAD 1983 (US Feet)": "NAD 1983 (רגל ארה\"ב)",
		"NAD 1983 HARN (Intl Feet)": "NAD 1983 HARN (רגל בנל\"א)",
		"NAD 1983 HARN (Meters)": "NAD 1983 HARN (מטרים)",
		"NAD 1983 HARN (US Feet)": "NAD 1983 HARN (רגל ארה\"ב)",
		"NAD 1983 NSRS2007 (Intl Feet)": "NAD 1983 NSRS2007 (רגל ארה\"ב)",
		"NAD 1983 NSRS2007 (Meters)": "NAD 1983 NSRS2007 (מטרים)",
		"NAD 1983 NSRS2007 (US Feet)": "NAD 1983 NSRS2007 (רגל ארה\"ב)",
		"National Grids": "גרידים לאומיים",
		Navajo: "נאוואחו",
		Neptune: "נפטון",
		"New Beijing": "בייג'ין חדש",
		"New Zealand": "ניו זילנד",
		"North America": "צפון אמריקה",
		"Northern Hemisphere": "המיספרה צפונית",
		Norway: "נורבגיה",
		Oceans: "אוקיינוסים",
		Oregon: "אורגון",
		"Other GCS": "GCS אחר",
		"Pacific Ocean": "האוקיינוס השקט",
		Pluto: "פלוטו",
		Polar: "קוטבי",
		Portugal: "פורטוגל",
		"Projected Coordinate Systems": "מערכות קואורדינטות מוטלות",
		"Pulkovo 1942": "פולקובו 1942",
		"Pulkovo 1995": "פולקובו 1995",
		Replaced: "הוחלף",
		"SAD 1969": "SAD 1969",
		SIRGAS: "SIRGAS",
		"SIRGAS 2000": "SIRGAS 2000",
		Saturn: "שבתאי",
		"Solar System": "מערכת סולרית",
		"South Africa": "דרום אפריקה",
		"South America": "דרום אמריקה",
		"South Korea": "דרום קוריאה",
		"Southern Hemisphere": "המיספרה דרומית",
		"Spheroid-based": "מבוסס-ספרואיד",
		"State Plane": "State Plane",
		"State Systems": "מערכות מדינה",
		Sweden: "שוודיה",
		"Switzerland and Liechtenstein": "שווייץ וליכטנשטיין",
		Texas: "טקסס",
		Tribal: "שבטי",
		Turkey: "טורקיה",
		"US Feet": "רגל ארה\"ב",
		"USA and territories": "ארה\"ב והטריטוריות",
		UTM: "UTM",
		Ukraine: "אוקראינה",
		"Unknown Height Systems": "מערכות גובה לא ידוע",
		Uranus: "אורונס",
		Venus: "נוגה",
		"Vertical Coordinate Systems": "מערכות קואורדינטות אנכיות",
		Vietnam: "וויאטנם",
		"WGS 1972": "WGS 1972",
		"WGS 1984": "WGS 1984",
		Wisconsin: "וויסקונסין",
		"Wisconsin CRS": "וויסקונסין CRS",
		World: "עולם",
		"World (Sphere-based)": "עולם (מבוסס-ספירה)",
		Wyoming: "ויומינג",
		"Xian 1980": "שיאן 1980",
		done: "בוצע",
		noResults: "לא נמצאו תוצאות",
		searchPlaceholder: "שם או WKID",
		browseTemplate: "עיין בתבניות לפונקציות רסטרים",
		saveTemplate: "שמור ‏‫תבנית פונקציית רסטר",
		preview: "תצוגה מקדימה",
		previewDescription: "תצוגה מקדמה של תוצאה לפני הרצת ניתוח.",
		showPreview: "הצג תצוגה מקדימה",
		previewLayer: "תצוגה מקדימה של שכבה ${number}",
		newPreview: "תצוגה מקדימה חדשה",
		previewPopup: "הפעל את התצוגה המקדימה של תוצאות הניתוח על בסיס הפרמטרים של הקלט.",
		updatePreviewLayer: "עדכן שכבת תצוגה מקדימה שנבחרה",
		createPreviewLayer: "צור שכבת תצוגה מקדימה חדשה",
		maximumPreviewAllowed: "מספר שכבות התצוגה המקדימה המרבי המותר: ${maxCount}",
		previewFailure: "שכבת תצוגה מקדימה זו לא זמינה. בדוק את הפרמטרים של הקלט ועדכן שכבת תצוגה מקדימה זו שוב.",
		header: "בחר פריט",
		content: "יש לך שינויים שלא נשמרו ב-${rftTitle}. אם תתחיל מחדש עם תבנית חדשה, שינויים אלה יאבדו.",
		dontSave: "אל תשמור",
		"continue": "המשך",
		stretch: "התאם לחלון",
		pan: "הזזה",
		newTemplate: "צור תבנית חדשה",
		openTemplate: "פתח תבנית",
		addFunction: "הוסף פונקציות רסטר",
		addConstant: "הוסף קבוע",
		addRaster: "הוסף משתנה רסטר",
		move: "הזז",
		zoom: "זום",
		saveAs: "שמירה בשם",
		clear: "נקה",
		addRasterFunctionTitle: "הוסף פונקציות רסטר",
		templatePropertiesTitle: "מאפייני תבנית",
		browseRFT: "עיין בתבניות לפונקציות רסטרים",
		defaultToolDescription: "כלי ניתוח ${toolTitle}.",
		openToolText: "פתח כלי",
		toolDropdownText: "תיבה נפתחת של כלי",
		addToMap: "אשר והוסף למפה",
		confirm: "אישור",
		select: "בחר",
		selectTask: "בחר משימה",
		unsupportedLayer: "פרמטר זה לא תומך בשכבות הבאות: ${layerName}.",
		viewDetails: "הצג את הפרטים המלאים של הפריט",
		rename: "שנה שם",
		duplicate: "שכפול",
		launch: "הפעל כדי להריץ",
		templateEditor: "עורך התבניות",
		createItem: "שמור ‏‫תבנית פונקציית רסטר",
		actionLabel: "מסנן",
		filterPopoverHeading: "סנן את הפונקציות",
		defaultSearchPlaceholder: "חיפוש לפי שם",
		settings: "הגדרות",
		summary: "תקציר",
		definitionQuery: "שאילתת הגדרה",
		matchVariables: "התאמת משתנים",
		unionDimension: "ממד איחוד",
		nameEditorPlaceholder: "הזן כותרת",
		summaryEditorPlaceholder: "הזן תיאור קצר",
		definitionQueryPlaceholder: "הזן...",
		upload: "טען",
		chooseImage: "לחץ כדי לבחור קובץ",
		update: "עדכון",
		thumbnailErrors: {
			wrongImageType: "נבחר סוג תמונה שגוי",
			notAvailable: "תמונה ממוזערת אינה זמינה",
			loadError: "לא ניתן לטעון את התמונה",
			chooseFile: "הקלק כדי לבחור קובץ"
		}
	}
};
const copy = "העתק";
const save = "שמירה";
const title = "כותרת";
const folder = "תיקייה";
const tags = "תגיות";
const savingMessage = "שומר פריט";
const shareWith = "שתף עם";
const share = "שתף";
const setSharingLevel = "הגדר רמת שיתוף";
const setGroupSharing = "הגדר שיתוף קבוצות";
const owner = "בעלים";
const organization = "ארגון";
const everyone = "כולם (ציבורי)";
const groups = "קבוצות:";
const type = "סוג";
const mosaic = "מוזאיקה";
const itemGroup = "קבוצת פריטים";
const item = "פריט";
const definitionQuery = "שאילתת הגדרה";
const groupItemsBy = "קיבוץ פריטים לפי";
const groupFieldName = "שם שדה הקבוצה";
const tagFieldName = "הוסף תגית לשם שדה";
const noTitleTagErrorMsg = "עליך לציין כותרת עבור הצוות והתגיות כדי לאפשר את מציאת המפה בחיפושים.";
const noTitleErrorMsg = "עליך לציין כותרת לפריט שלך.";
const noTagErrorMsg = "עליך לציין לפחות תג אחד כדי לעזור לאנשים למצוא את הפריט בחיפושים.";
const error = "שגיאה";
const warning = "אזהרה";
const success = "הצלחה";
const details = "פרטים:";
const tryAgain = "נסה שוב";
const toolModeler = {
	save: "שמירה",
	editProperties: "ערוך מאפיינים",
	saveAs: "שמור בשם",
	savingNotification: "שומר שינויים בפריט...",
	savingTitle: "שומר",
	saveFailedMessage: "שמירת השינויים נכשלה.",
	saveWithErrorsMessage: "השינויים נשמרו עם השגיאות הבאות.",
	viewItemMessage: "ראה את הפריט שנשמר",
	here: "כאן.",
	itemCreatedMessage: "פריט חדש נוצר.",
	clickToViewItemMessage: "לחץ על 'אישור' כדי לראות את דף פרטי הפריט, לחץ על 'ביטול' כדי להמשיך.",
	readingFailed: "נכשלה הטעינה של תבנית פונקציית הרסטר שנבחרה.",
	failedToLoadXML: "נכשלה הטעינה בפורמט XML של תבנית פונקציית הרסטר שנבחרה.",
	learnMore: "מידע נוסף",
	overwriteTitle: "אשר החלפה",
	overwriteMessage: "האם ברצונך להחליף את הפריט הקיים?",
	overwriteSuccessMessage: "הפריט עודכן."
};
const toolEditor = {
	run: "הרץ",
	save: "שמירה",
	deleteSelected: "מחק פריטים נבחרים",
	addRaster: "הוסף רסטר",
	addScalar: "הוסף Scalar.",
	layout: "פריסה אוטומטית",
	errorTitle: "שגיאה",
	invalidToolMessage: "התבנית של פונקציית הרסטר אינה תקינה.",
	out: "חוץ",
	zoomIn: "הגדלה",
	zoomOut: "הקטנה",
	zoomToFit: "התאם לחלון",
	panOn: "עבור למצב הזזה",
	panOff: "השבת את מצב הזזה",
	defaultModelName: "מודל כלים",
	defaultRasterName: "רסטר"
};
const toolDetailsEditor = {
	defaultToolName: "‏‫תבניות פונקציית רסטר",
	defaultToolDescription: "הוסף סיכום קצר לגבי פונקציית הרסטר.",
	defaultHelpText: "לחץ על סמל העזרה כדי לערוך את טקסט העזרה",
	editHelpTitle: "עזרה לעריכה",
	saveLabel: "שמירה",
	cancelLabel: "בטל",
	thumbnail: {
		wrongImageType: "סוג תמונה שגוי נבחר",
		notAvailable: "תמונה ממוזערת אינה זמינה",
		loadError: "לא ניתן לטעון את התמונה",
		chooseFile: "בחר כדי לבחור קובץ"
	}
};
const saveUtils = {
	thumbnail: "תמונה ממוזערת",
	sharing: "שיתוף"
};
const close = "סגירה";
const unsavedWarningExisting = "האם ברצונך לשמור את השינויים שבוצעו בפריט <b>${itemTitle}</b> ?";
const unsavedWarningNew = "האם ברצונך לשמור את השינויים?";
const saveAs = "שמור בשם";
const dontSave = "אל תשמור";
const unsavedTitle = "שינויים שלא נשמרו";
const invalidRFTMessage = "התבנית שנוצרה לפונקציית הרסטר אינה תקינה.";
const errorTitle = "שגיאה";
const breadcrumb = "עורך פונקציות רסטר";
const breadcrumbEditor = "תוכן > עורך פונקציות רסטר";
const viewerModeTitle = "קריאה בלבד";
const viewerModeMessage = "‏תבנית פונקציית הרסטר מוגדר לקריאה בלבד. לא ניתן לשמור את השינויים.";
const userStartDirection = " בחר פונקציה כדי להתחיל ביצירה של תבנית פונקציית הרסטר.";
const selectFunction = "הוסף פונקציה";
const deselectFunction = "הסר פונקציה";
const dialogTitle = "מערכת";
const category = "קטגוריות";
const search = "חיפוש פונקציות רסטר";
const categoryNames = {
	analysis: "ניתוח",
	appearance: "הופעה",
	classification: "סיווג",
	conversion: "המרה",
	correction: "תיקון",
	dataManagement: "ניהול נתונים",
	distance: "מרחק",
	distanceLegacy: "דיוק (דור קודם)",
	hydrology: "הידרולוגיה",
	math: "מתמטיקה",
	mathConditional: "מתמטיקה: תנאי",
	mathLogical: "מתמטיקה: לוגית",
	mathTrigonometric: "מתמטיקה: טריגונומטרית",
	reclass: "סווג מחדש",
	statistical: "נתונים סטטיסטיים",
	surface: "פני שטח"
};
const commonStrings_he = {
	ok: ok,
	cancel: cancel,
	enterURL: enterURL,
	serviceURL: serviceURL,
	selectRaster: selectRaster,
	failedToLoadLayer: failedToLoadLayer,
	loadingLayer: loadingLayer,
	selectFeature: selectFeature,
	enterFURL: enterFURL,
	addRaster: addRaster,
	addScalar: addScalar,
	raster: raster,
	scalar: scalar,
	defaultModelName: defaultModelName,
	general: general,
	parameters: parameters,
	variables: variables,
	name: name,
	description: description,
	parameter: parameter,
	isPublic: isPublic,
	isDataset: isDataset,
	unknownPixelType: unknownPixelType,
	outputPixelType: outputPixelType,
	u8PixelType: u8PixelType,
	s8PixelType: s8PixelType,
	u16PixelType: u16PixelType,
	s16PixelType: s16PixelType,
	u32PixelType: u32PixelType,
	s32PixelType: s32PixelType,
	f32PixelType: f32PixelType,
	f64PixelType: f64PixelType,
	properties: properties,
	multidimensionalRules: multidimensionalRules,
	matchVariables: matchVariables,
	unionDimensions: unionDimensions,
	rasterFunctionEditor: rasterFunctionEditor,
	rfxLicenseInfo: rfxLicenseInfo,
	rasterFunctions: rasterFunctions,
	copy: copy,
	save: save,
	title: title,
	folder: folder,
	tags: tags,
	savingMessage: savingMessage,
	shareWith: shareWith,
	share: share,
	setSharingLevel: setSharingLevel,
	setGroupSharing: setGroupSharing,
	owner: owner,
	organization: organization,
	everyone: everyone,
	groups: groups,
	type: type,
	mosaic: mosaic,
	itemGroup: itemGroup,
	item: item,
	definitionQuery: definitionQuery,
	groupItemsBy: groupItemsBy,
	groupFieldName: groupFieldName,
	tagFieldName: tagFieldName,
	noTitleTagErrorMsg: noTitleTagErrorMsg,
	noTitleErrorMsg: noTitleErrorMsg,
	noTagErrorMsg: noTagErrorMsg,
	error: error,
	warning: warning,
	success: success,
	details: details,
	tryAgain: tryAgain,
	toolModeler: toolModeler,
	toolEditor: toolEditor,
	toolDetailsEditor: toolDetailsEditor,
	saveUtils: saveUtils,
	close: close,
	unsavedWarningExisting: unsavedWarningExisting,
	unsavedWarningNew: unsavedWarningNew,
	saveAs: saveAs,
	dontSave: dontSave,
	unsavedTitle: unsavedTitle,
	invalidRFTMessage: invalidRFTMessage,
	errorTitle: errorTitle,
	breadcrumb: breadcrumb,
	breadcrumbEditor: breadcrumbEditor,
	viewerModeTitle: viewerModeTitle,
	viewerModeMessage: viewerModeMessage,
	userStartDirection: userStartDirection,
	selectFunction: selectFunction,
	deselectFunction: deselectFunction,
	dialogTitle: dialogTitle,
	category: category,
	search: search,
	categoryNames: categoryNames
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (commonStrings_he);


//# sourceMappingURL=common-strings.he-270225ae.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,