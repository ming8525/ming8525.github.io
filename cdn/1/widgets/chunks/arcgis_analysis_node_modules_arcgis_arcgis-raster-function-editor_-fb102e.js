"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-fb102e"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.ca-1cfd3e53.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.ca-1cfd3e53.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   rfxArgsHelpTexts: () => (/* binding */ rfxArgsHelpTexts)
/* harmony export */ });
const rfxArgsHelpTexts = {
	"@@Abs_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Abs_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Abs_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Abs_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Abs_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Abs_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Abs_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Abs_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Abs_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Abs_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Abs_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Abs_Raster_tag0@@": "Ràster d'entrada del qual es calcularan els valors absoluts.",
	"@@ACos_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@ACos_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@ACos_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@ACos_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@ACos_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@ACos_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@ACos_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@ACos_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@ACos_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@ACos_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@ACos_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@ACos_Raster_tag0@@": "Entrada de la qual es calcularan els valors del cosinus invers.",
	"@@ACosH_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@ACosH_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@ACosH_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@ACosH_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@ACosH_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@ACosH_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@ACosH_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@ACosH_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@ACosH_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@ACosH_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@ACosH_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@ACosH_Raster_tag0@@": "Entrada de la qual es calcularan els valors del cosinus hiperbòlic invers.",
	"@@Apparent-Reflectance_Albedo_tag0@@": "Els resultats de la funció Reflectància aparent també es poden expressar com a albedo, que és el percentatge de l'energia disponible que reflecteix la superfície planetària. Els usuaris científics utilitzen les dades de l'albedo per a les aplicacions tècniques i de modelatge de teledetecció complexes.",
	"@@Apparent-Reflectance_Albedo_tag1@@": "Desactivada: la funció retorna valors de reflectància aparent. Aquesta és l'opció per defecte.",
	"@@Apparent-Reflectance_Albedo_tag2@@": "Activada: la funció retorna valors de punt flotant de 32 bits, que es troben majoritàriament en un interval de 0,0 a 1,0. No es realitza el retall de dades si aquesta opció està seleccionada.",
	"@@Apparent-Reflectance_Albedo_tag3@@": "Com que les dades de sortida d'Albedo són del tipus punt flotant, cal definir de manera explícita el <strong>tipus de píxel de sortida</strong> preferit com a flotant de 32 bits o doble de 64 bits. El paràmetre <strong>Tipus de píxel de sortida</strong> es troba a la pestanya <strong>General</strong> de la funció de ràster <strong>Reflectància aparent</strong>. Si el <strong>Tipus de píxel de sortida</strong> no es defineix correctament per a l'opció <strong>Albedo</strong>, els valors resultants no són vàlids i tenen el valor 0.",
	"@@Apparent-Reflectance_Offset_tag0@@": "El valor de l'albedo escalat pot tenir un valor de desplaçament:",
	"@@Apparent-Reflectance_Offset_tag1@@": "Per als tipus de dades sense signar de 16 bits, el desplaçament d'escala per defecte és de 5.000.",
	"@@Apparent-Reflectance_Offset_tag2@@": "Per als tipus de dades sense signar de 8 bits, el desplaçament d'escala per defecte és de 0.",
	"@@Apparent-Reflectance_Offset_tag3@@": "No s'aplica cap escala quan la sortida és l'albedo.",
	"@@Apparent-Reflectance_Radiance-Gains-and-Bias-Values-per-Band_tag0@@": "Podeu definir o editar manualment aquest valor per a cada banda. La informació adequada es pot obtenir de les metadades de producte de ràster d'entrada.",
	"@@Apparent-Reflectance_Raster_tag0@@": "El producte de ràster al qual s'aplicarà la reflectància aparent.",
	"@@Apparent-Reflectance_Scale-Factor_tag0@@": "El valor de sortida de reflectància aparent es pot expressar com un enter. El factor d'escala es multiplica per l'albedo per convertir tots els valors de punt flotant en valors enters.",
	"@@Apparent-Reflectance_Scale-Factor_tag1@@": "Si el factor d'escala és ${0} o no s'especifica, s'aplicarà l'escala per defecte en funció del tipus de píxel de les dades d'entrada:",
	"@@Apparent-Reflectance_Scale-Factor_tag2@@": "Per als tipus de dades sense signar de 16 bits, el factor d'escala per defecte és de 50.000.",
	"@@Apparent-Reflectance_Scale-Factor_tag3@@": "Per als tipus de dades sense signar de 8 bits, el factor d'escala per defecte és de 255.",
	"@@Apparent-Reflectance_Scale-Factor_tag4@@": "El factor d'escala sempre s'aplica quan la sortida és la reflectància aparent. No s'aplica cap escala quan la sortida és l'albedo.",
	"@@Apparent-Reflectance_Sun-Elevation_tag0@@": "És el valor d'elevació del sol expressat en graus. El sistema l'emplenarà si la informació adequada es pot obtenir de les metadades. Podeu definir o editar manualment aquest valor.",
	"@@ArgStatistics_Max_tag0@@": "El valor màxim que definiu és el valor més alt igual o menor que el final de la durada.",
	"@@ArgStatistics_Max_tag1@@": "Aquesta entrada només és aplicable si el mètode és Duration.",
	"@@ArgStatistics_Method_tag0@@": "Seleccioneu el mètode d'estadístiques del càlcul:",
	"@@ArgStatistics_Method_tag1@@": "Arg Max: argument del valor màxim, que retorna ${Band index} per al qual el píxel proporcionat obté el seu valor mínim de totes les bandes. Totes les bandes de ràster de cada ràster d'entrada tenen assignat un índex de banda incremental de base 0, que s'ordena primer per l'índex del ràster d'entrada i, posteriorment, per l'ordre de banda relatiu dins de cada ràster d'entrada.",
	"@@ArgStatistics_Method_tag2@@": "Arg Median: argument del valor mitjà, que retorna ${Band index} per al qual el píxel proporcionat obté el seu valor mitjà de totes les bandes.",
	"@@ArgStatistics_Method_tag3@@": "Arg Min: argument del valor mínim, que retorna ${Band index} per al qual el píxel proporcionat obté el seu valor mínim de totes les bandes.",
	"@@ArgStatistics_Method_tag4@@": "Durada: el mètode Durada cerca els elements consecutius més llargs de la matriu, on cada element té un valor més gran o igual que <strong>Mínim</strong> i menor o igual que <strong>Màxim</strong>, i en retorna la longitud.",
	"@@ArgStatistics_Min_tag0@@": "El valor mínim que definiu és el valor més baix igual o major que l'inici de la durada.",
	"@@ArgStatistics_Min_tag1@@": "Aquesta entrada només és aplicable si el mètode és Duration.",
	"@@ArgStatistics_Rasters_tag0@@": "El ràster d'entrada al qual executareu els diversos mètodes estadístics.",
	"@@ArgStatistics_Undefined-Class_tag0@@": "Entrada constant que es retornarà quan no es pugui obtenir cap valor màxim, mínim o medià definitiu. L'escenari més habitual es produeix quan el valor màxim o mínim té lloc més d'una vegada entre els valors de totes les bandes. El valor per defecte de la constant no definida és 100.",
	"@@ArgStatistics_Undefined-Class_tag1@@": "La classe sense definir només és aplicable quan el mètode és <strong>ArgMax</strong>, <strong>ArgMin</strong> o <strong>ArgMedian</strong>.",
	"@@ArgStatistics_ignorenodata_tag0@@": "Indica si el càlcul estadístic ignora els valors NoData.",
	"@@ArgStatistics_ignorenodata_tag1@@": "Activada: l'anàlisi inclourà tots els píxels vàlids dels ràsters d'entrada i ignorarà els píxels NoData.",
	"@@ArgStatistics_ignorenodata_tag2@@": "Desactivada: l'anàlisi tindrà com a resultat NoData si hi ha algun valor NoData per als píxels a la dimensió proporcionada. Aquesta és l'opció per defecte.",
	"@@Arithmetic_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Arithmetic_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Arithmetic_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Arithmetic_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Arithmetic_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Arithmetic_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Arithmetic_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Arithmetic_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Arithmetic_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Arithmetic_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Arithmetic_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Arithmetic_Operation_tag0@@": "Operació aritmètica que es realitzarà entre els dos ràsters d'entrada.",
	"@@Arithmetic_Operation_tag1@@": "Les opcions són les següents:",
	"@@Arithmetic_Operation_tag2@@": "<strong>Divideix</strong>: genera el resultat divisible entre els valors de píxel corresponents de cada ràster.",
	"@@Arithmetic_Operation_tag4@@": "<strong> Resta</strong>: genera la diferència entre els valors de píxel corresponents de cada ràster. Es pot utilitzar per calcular la detecció de canvis.",
	"@@Arithmetic_Operation_tag6@@": "<strong>Mode</strong>: genera el valor de píxel de tots els píxels superposats que tenen lloc amb més freqüència. Per exemple, si hi ha sis bandes en un ràster, hi haurà sis píxels superposats. Per als valors 4, 5, 6, 4, 7 i 9, el valor de mode és 4.",
	"@@Arithmetic_Operation_tag8@@": "<strong>Multiplica</strong>: genera el producte dels valors de píxel corresponents de cada ràster. Es pot utilitzar per executar algunes funcions de costos.",
	"@@Arithmetic_Operation_tag10@@": "<strong>Suma</strong>: genera la suma de tots els valors de píxel corresponents de cada ràster.",
	"@@Arithmetic_Operation_tag12@@": "<strong>Potència</strong>: genera el producte dels valors de píxel corresponents elevats a la potència de l'escalar o el ràster d'entrada.",
	"@@Arithmetic_Raster_tag0@@": "Primer dataset ràster d'entrada.",
	"@@Arithmetic_Raster2_tag0@@": "Segon dataset ràster d'entrada.",
	"@@ASin_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@ASin_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@ASin_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@ASin_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@ASin_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@ASin_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@ASin_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@ASin_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@ASin_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@ASin_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@ASin_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@ASin_Raster_tag0@@": "Entrada de la qual es calcularan els valors del sinus invers.",
	"@@ASinH_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@ASinH_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@ASinH_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@ASinH_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@ASinH_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@ASinH_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@ASinH_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@ASinH_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@ASinH_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@ASinH_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@ASinH_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@ASinH_Raster_tag0@@": "Entrada de la qual es calcularan els valors del sinus hiperbòlic invers.",
	"@@Aspect_Raster_tag0@@": "DEM d'entrada utilitzat per derivar el dataset d'aspecte.",
	"@@Aspect-Slope_Raster_tag0@@": "DEM d'entrada.",
	"@@Aspect-Slope_Z-Factor_tag0@@": "Factor d'escala que s'utilitza per convertir els valors d'elevació amb les dues finalitats següents:",
	"@@Aspect-Slope_Z-Factor_tag1@@": "Convertir les unitats d'elevació (com ara metres o peus) a les unitats de la coordenada horitzontal del dataset, que poden ser peus, metres o graus.",
	"@@Aspect-Slope_Z-Factor_tag2@@": "Afegir exageració vertical per aconseguir un efecte visual.",
	"@@ATan_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@ATan_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@ATan_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@ATan_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@ATan_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@ATan_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@ATan_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@ATan_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@ATan_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@ATan_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@ATan_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@ATan_Raster_tag0@@": "Entrada de la qual es calcularan els valors de la tangent inversa.",
	"@@ATan2_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@ATan2_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@ATan2_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@ATan2_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@ATan2_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@ATan2_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@ATan2_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@ATan2_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@ATan2_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@ATan2_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@ATan2_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@ATan2_Raster_tag0@@": "Entrada que especifica el numerador, o el valor d'y, que s'utilitzarà en calcular la tangent inversa.",
	"@@ATan2_Raster2_tag0@@": "Entrada que especifica el denominador, o el valor d'x, que s'utilitzarà en calcular la tangent inversa.",
	"@@ATanH_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@ATanH_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@ATanH_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@ATanH_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@ATanH_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@ATanH_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@ATanH_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@ATanH_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@ATanH_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@ATanH_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@ATanH_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@ATanH_Raster_tag0@@": "Entrada de la qual es calcularan els valors de la tangent hiperbòlica inversa.",
	"@@Attribute-Table_Raster_tag0@@": "Ràster d'entrada.",
	"@@Attribute-Table_Table-Type_tag0@@": "La taula d'atributs d'entrada es pot introduir amb el tipus <strong>Manual</strong>, on haureu d'assignar un nom de classe i un color per a cada valor, o bé podeu consultar una taula existent procedent d'un fitxer ${.dbf}.",
	"@@Band-Arithmetic_Band-Indexes_tag0@@": "Definiu la fórmula aritmètica de banda si trieu <strong>Definit per l'usuari</strong> per la vostre <strong>Mètode</strong>.",
	"@@Band-Arithmetic_Band-Indexes_tag5@@": "Si trieu un índex predefinit per al vostre <strong>Mètode</strong>, definiu les bandes adequades del dataset ràster d'entrada que es corresponen amb l'índex.",
	"@@Band-Arithmetic_Method_tag0@@": "Tipus d'algoritme aritmètica de banda que voleu implementar. Podeu definir el vostre algoritme personalitzat o bé triar-ne un de predefinit.",
	"@@Band-Arithmetic_Method_tag1@@": "<strong>BAI</strong>: índex d'àrea cremada",
	"@@Band-Arithmetic_Method_tag2@@": "<strong>CIg</strong>: índex de clorofil·la - verd",
	"@@Band-Arithmetic_Method_tag3@@": "<strong>Clre</strong>: índex de clorofil·la - marge roig",
	"@@Band-Arithmetic_Method_tag4@@": "<strong>Minerals argilosos</strong>: relació de minerals argilosos",
	"@@Band-Arithmetic_Method_tag5@@": "<strong>EVI</strong>: índex de vegetació millorat",
	"@@Band-Arithmetic_Method_tag6@@": "<strong>Minerals ferrosos</strong>: relació de minerals ferrosos",
	"@@Band-Arithmetic_Method_tag7@@": "<strong>GEMI</strong>: índex de supervisió del medi ambient global",
	"@@Band-Arithmetic_Method_tag8@@": "<strong>GNDVI</strong>: índex de vegetació verda de diferència normalitzada",
	"@@Band-Arithmetic_Method_tag9@@": "<strong>GVI (Landsat TM)</strong>: índex de vegetació verda - Landsat TM",
	"@@Band-Arithmetic_Method_tag10@@": "<strong>Òxid de ferro</strong>: relació d'òxid de ferro",
	"@@Band-Arithmetic_Method_tag11@@": "<strong>MNDWI</strong>: índex d'aigua de diferència normalitzada modificat",
	"@@Band-Arithmetic_Method_tag12@@": "<strong>MTVI2</strong>: índex de vegetació de triangles modificat (segona iteració)",
	"@@Band-Arithmetic_Method_tag13@@": "<strong>SAVI modificat</strong>: índex de vegetació ajustat a terra modificat",
	"@@Band-Arithmetic_Method_tag14@@": "<strong>NBR</strong>: índex de relació de calcinació normalitzat",
	"@@Band-Arithmetic_Method_tag15@@": "<strong>NDBI</strong>: índex d'àrees construïdes de diferència normalitzada",
	"@@Band-Arithmetic_Method_tag16@@": "<strong>NDMI</strong>: índex d'humitat de diferència normalitzada",
	"@@Band-Arithmetic_Method_tag17@@": "<strong>NDSI</strong>: índex de neu de diferència normalitzada",
	"@@Band-Arithmetic_Method_tag18@@": "<strong>NDVI</strong>: índex de vegetació de diferència normalitzada",
	"@@Band-Arithmetic_Method_tag19@@": "<strong>NDVIre</strong>: índex de vegetació de diferència normalitzada de marge roig",
	"@@Band-Arithmetic_Method_tag20@@": "<strong>NDWI</strong>: índex d'aigua de diferència normalitzada",
	"@@Band-Arithmetic_Method_tag21@@": "<strong>PVI</strong>: índex de vegetació perpendicular",
	"@@Band-Arithmetic_Method_tag22@@": "<strong>RTVICore</strong>: índex de vegetació de triangles de marge roig",
	"@@Band-Arithmetic_Method_tag23@@": "<strong>SAVI</strong>: índex de vegetació ajustat a terra",
	"@@Band-Arithmetic_Method_tag24@@": "<strong>SR</strong>: relació simple",
	"@@Band-Arithmetic_Method_tag25@@": "<strong>SRre</strong>: relació senzilla de marge roig",
	"@@Band-Arithmetic_Method_tag26@@": "<strong>Fórmula de Sultan</strong>: fórmula de Sultan",
	"@@Band-Arithmetic_Method_tag27@@": "<strong>SAVI transformat</strong>: índex de vegetació ajustat a terra transformat",
	"@@Band-Arithmetic_Method_tag28@@": "<strong>Definit per l'usuari</strong>: permet definir l'expressió aritmètica de banda personalitzada.",
	"@@Band-Arithmetic_Method_tag29@@": "<strong>VARI</strong>: índex de resistència atmosfèrica visible",
	"@@Band-Arithmetic_Method_tag30@@": "<strong>WNDWI</strong>: índex d'aigua de diferència normalitzada ponderat",
	"@@Band-Arithmetic_Raster_tag0@@": "Ràster d'entrada.",
	"@@Binary-Thresholding_Raster_tag0@@": "Ràster d'entrada.",
	"@@Bitwise-And_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Bitwise-And_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-And_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-And_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Bitwise-And_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Bitwise-And_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Bitwise-And_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Bitwise-And_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-And_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Bitwise-And_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-And_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Bitwise-And_Raster_tag0@@": "Primera entrada que s'utilitzarà en aquesta operació bit a bit.",
	"@@Bitwise-And_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Bitwise-And_Raster2_tag0@@": "Segona entrada que s'utilitzarà en aquesta operació bit a bit.",
	"@@Bitwise-And_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Bitwise-Left-Shift_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Bitwise-Left-Shift_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Left-Shift_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Bitwise-Left-Shift_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Left-Shift_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Bitwise-Left-Shift_Raster_tag0@@": "Entrada on es farà el desplaçament.",
	"@@Bitwise-Left-Shift_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Bitwise-Left-Shift_Raster2_tag0@@": "Entrada que defineix el nombre de posicions per desplaçar els bits.",
	"@@Bitwise-Left-Shift_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Bitwise-Not_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Bitwise-Not_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Not_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Not_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Bitwise-Not_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Bitwise-Not_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Bitwise-Not_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Bitwise-Not_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Not_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Bitwise-Not_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Not_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Bitwise-Not_Raster_tag0@@": "Ràster d'entrada on es realitzarà l'operació Bitwise Not (complement).",
	"@@Bitwise-Or_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Bitwise-Or_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Or_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Or_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Bitwise-Or_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Bitwise-Or_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Bitwise-Or_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Bitwise-Or_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Or_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Bitwise-Or_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Or_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Bitwise-Or_Raster_tag0@@": "Primera entrada que s'utilitzarà en aquesta operació bit a bit.",
	"@@Bitwise-Or_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Bitwise-Or_Raster2_tag0@@": "Segona entrada que s'utilitzarà en aquesta operació bit a bit.",
	"@@Bitwise-Or_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Bitwise-Right-Shift_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Bitwise-Right-Shift_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Right-Shift_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Bitwise-Right-Shift_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Right-Shift_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Bitwise-Right-Shift_Raster_tag0@@": "Entrada on es farà el desplaçament.",
	"@@Bitwise-Right-Shift_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Bitwise-Right-Shift_Raster2_tag0@@": "Entrada que defineix el nombre de posicions per desplaçar els bits.",
	"@@Bitwise-Right-Shift_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Bitwise-Xor_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Bitwise-Xor_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Xor_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Bitwise-Xor_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Bitwise-Xor_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Bitwise-Xor_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Bitwise-Xor_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Bitwise-Xor_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Xor_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Bitwise-Xor_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Bitwise-Xor_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Bitwise-Xor_Raster_tag0@@": "Primera entrada que s'utilitzarà en aquesta operació bit a bit.",
	"@@Bitwise-Xor_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Bitwise-Xor_Raster2_tag0@@": "Segona entrada que s'utilitzarà en aquesta operació bit a bit.",
	"@@Bitwise-Xor_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Boolean-and_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Boolean-and_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Boolean-and_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Boolean-and_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Boolean-and_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Boolean-and_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Boolean-and_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Boolean-and_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Boolean-and_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Boolean-and_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Boolean-and_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Boolean-and_Raster_tag0@@": "Primera entrada que s'utilitzarà en aquesta operació booleana.",
	"@@Boolean-and_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Boolean-and_Raster2_tag0@@": "Segona entrada que s'utilitzarà en aquesta operació booleana.",
	"@@Boolean-and_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Boolean-Not_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Boolean-Not_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Boolean-Not_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Boolean-Not_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Boolean-Not_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Boolean-Not_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Boolean-Not_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Boolean-Not_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Boolean-Not_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Boolean-Not_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Boolean-Not_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Boolean-Not_Raster_tag0@@": "Primera entrada que s'utilitzarà en aquesta operació booleana.",
	"@@Boolean-Or_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Boolean-Or_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Boolean-Or_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Boolean-Or_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Boolean-Or_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Boolean-Or_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Boolean-Or_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Boolean-Or_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Boolean-Or_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Boolean-Or_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Boolean-Or_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Boolean-Or_Raster_tag0@@": "Primera entrada que s'utilitzarà en aquesta operació booleana.",
	"@@Boolean-Or_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Boolean-Or_Raster2_tag0@@": "Segona entrada que s'utilitzarà en aquesta operació booleana.",
	"@@Boolean-Or_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Boolean-Xor_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Boolean-Xor_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Boolean-Xor_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Boolean-Xor_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Boolean-Xor_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Boolean-Xor_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Boolean-Xor_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Boolean-Xor_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Boolean-Xor_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Boolean-Xor_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Boolean-Xor_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Boolean-Xor_Raster_tag0@@": "Primera entrada que s'utilitzarà en aquesta operació booleana.",
	"@@Boolean-Xor_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Boolean-Xor_Raster2_tag0@@": "Segona entrada que s'utilitzarà en aquesta operació booleana.",
	"@@Boolean-Xor_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Buffered_Raster_tag0@@": "Ràster d'entrada que s'emmagatzemarà a la memòria.",
	"@@Calculator_Cellsize-Type_tag0@@": "Mida de cel·la utilitzada per crear el ràster de sortida.",
	"@@Calculator_Cellsize-Type_tag1@@": "Podeu triar la mida de cel·la de sortida entre les opcions següents de la llista desplegable:",
	"@@Calculator_Cellsize-Type_tag2@@": "<strong>Primer de</strong>: mida de cel·la de la primera variable de ràster.",
	"@@Calculator_Cellsize-Type_tag4@@": "<strong>Mínim de</strong>: mida de cel·la mínima dels ràsters d'entrada.",
	"@@Calculator_Cellsize-Type_tag6@@": "<strong>Màxim de</strong>: mida de cel·la màxima dels ràsters d'entrada.",
	"@@Calculator_Cellsize-Type_tag8@@": "<strong>Mitjana de</strong>: mida de cel·la mitjana dels ràsters d'entrada.",
	"@@Calculator_Cellsize-Type_tag10@@": "<strong>Últim de</strong>: mida de cel·la de l'última variable de ràster.",
	"@@Calculator_Cellsize-Type_tag12@@": "La selecció per defecte és <strong>Màxim de</strong>.",
	"@@Calculator_Expression_tag0@@": "Creeu una expressió algebraica per fer l'anàlisi espacial al ràster d'entrada.",
	"@@Calculator_Expression_tag1@@": "Totes les funcions matemàtiques existents es poden utilitzar per crear l'expressió. Els operadors disponibles s'indiquen a continuació.",
	"@@Calculator_Expression_tag2@@": "Operacions aritmètiques",
	"@@Calculator_Expression_tag3@@": "Suma: +",
	"@@Calculator_Expression_tag4@@": "Divisió: /",
	"@@Calculator_Expression_tag5@@": "Mòdul: %",
	"@@Calculator_Expression_tag6@@": "Multiplicació: *",
	"@@Calculator_Expression_tag7@@": "Potència: **",
	"@@Calculator_Expression_tag8@@": "Resta: -",
	"@@Calculator_Expression_tag9@@": "Operacions booleanes",
	"@@Calculator_Expression_tag10@@": "Operador booleà And: &&",
	"@@Calculator_Expression_tag11@@": "Operador booleà Or: ||",
	"@@Calculator_Expression_tag12@@": "Operacions de relació",
	"@@Calculator_Expression_tag13@@": "Igual que: ==",
	"@@Calculator_Expression_tag14@@": "Major que: >",
	"@@Calculator_Expression_tag15@@": "Major o igual que: >=",
	"@@Calculator_Expression_tag16@@": "Menor que: <",
	"@@Calculator_Expression_tag17@@": "Menor o igual que: <=",
	"@@Calculator_Expression_tag18@@": "No igual que: ==",
	"@@Calculator_Expression_tag19@@": "Operacions addicionals",
	"@@Calculator_Expression_tag20@@": "Mínim de dos ràsters píxel per píxel: min(a,b)",
	"@@Calculator_Expression_tag21@@": "Màxim de dos ràsters píxel per píxel: max(a,b)",
	"@@Calculator_Expression_tag22@@": "A continuació s'inclouen alguns exemples d'expressions:",
	"@@Calculator_Expression_tag23@@": "Declaració condicional simple: en un ràster (indicat amb T) cerqueu valors d'elevació per sobre dels 4.000 peus, i proporcioneu a aquestes àrees un valor d'1 i a la resta un valor de 0.",
	"@@Calculator_Expression_tag24@@": "Con(T > 4000, 1, 0)",
	"@@Calculator_Expression_tag25@@": "Declaració condicional niada: cerqueu àrees amb un pendent (indicat amb b1) inferior a 10 graus i un NDVI (indicat amb b2) superior a 0,5. Proporcioneu a aquestes àrees un valor d'1. Per a la resta d'àrees, assigneu un valor de 2 si el pendent és superior a 10 graus i l'elevació (indicada amb b3) és superior a 2.500 peus. S'assigna un valor de 3 a totes les altres àrees.",
	"@@Calculator_Expression_tag26@@": "Con((b1 < 10 && b2 > .5, 1, Con(b1 > 10 && b3 > 2500, 2, 3)))",
	"@@Calculator_extenttype_tag0@@": "<p>Trieu quina extensió s'ha de fer servir al ràster de sortida:</p><ul><li><p>Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.</p></li><li>Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.</li><li>Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.</li><li>Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.</li></ul>",
	"@@Calculator_Raster-Variables_tag0@@": "Nom de variable definit per l'usuari i ràster d'entrada.",
	"@@Classify_Input-Definition-File_tag0@@": "Fitxer de definició de classificador d'Esri d'entrada (${.ecd}) que conté les estadístiques i altres dades de classificació del dataset específic, el classificador i els atributs seleccionats.",
	"@@Classify_Raster_tag0@@": "Dataset ràster que voleu classificar.",
	"@@Classify_Raster2_tag0@@": "Dataset ràster auxiliar opcional per incorporar al classificador, com ara una imatge segmentada, una imatge multiespectral o dades d'elevació, que s'utilitza per generar una definició de classificació més sòlida del dataset. El dataset ràster d'aquest paràmetre ha de coincidir amb l'utilitzat per crear el fitxer de definició de classificador d'Esri d'entrada.",
	"@@Clip_Clipping-Geometry-or-Raster_tag0@@": "Es pot utilitzar el següent per especificar l'extensió de retallada:",
	"@@Clip_Clipping-Geometry-or-Raster_tag1@@": "<strong>Ràster de retallada</strong>: extensió del ràster de retallada",
	"@@Clip_Clipping-Geometry-or-Raster_tag3@@": "<strong>Extensió personalitzada</strong>: coordenades X i Y mínimes i màximes",
	"@@Clip_Clipping-Geometry-or-Raster_tag5@@": "<strong>Extensió del mapa actual</strong>: extensió de la visualització de mapa actual",
	"@@Clip_Clipping-Raster_tag0@@": "Capa ràster utilitzada per a la retallada.",
	"@@Clip_Clipping-Type_tag0@@": "Especifiqueu si voleu conservar l'àrea dins o fora de la geometria de retallada.",
	"@@Clip_Clipping-Type_tag1@@": "<strong>Retall interior</strong>: les imatges dins de les extensions de retallada s'eliminaran.",
	"@@Clip_Clipping-Type_tag3@@": "<strong>Retall exterior</strong>: les imatges fora de les extensions de retallada s'eliminaran.",
	"@@Clip_Custom-Extent_tag0@@": "Especifiqueu les quatre coordenades que defineixen l'extensió del quadre delimitador utilitzat per retallar el ràster.",
	"@@Clip_Output-Extent_tag0@@": "Coordenades x i y de l'extensió de retallada actual.",
	"@@Clip_Output-Extent_tag1@@": "El botó <strong>Captura l'extensió del mapa actual</strong> utilitza l'extensió de visualització per al mapa actiu.",
	"@@Clip_Raster_tag0@@": "Capa ràster d'entrada.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag0@@": "Si aquesta opció està seleccionada, les dades es retallen d'acord amb la geometria de la classe d'entitat especificada.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag1@@": "Desactivada: la funció utilitza la geometria de retallada especificada per <strong>Rectangle</strong>. Aquesta és l'opció per defecte.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag4@@": "Activada: la funció utilitza la geometria de retallada definida per una classe d'entitat.",
	"@@Color-Model-Conversion_Conversion-Type_tag0@@": "Tipus de conversió de color que es realitzarà:",
	"@@Color-Model-Conversion_Conversion-Type_tag1@@": "HSV a RGB",
	"@@Color-Model-Conversion_Conversion-Type_tag2@@": "RGB a HSV",
	"@@Color-Model-Conversion_Raster_tag0@@": "Ràster d'entrada.",
	"@@Colormap_Color-Ramp_tag0@@": "Trieu una rampa de color preexistent.",
	"@@Colormap_Color-Scheme-Type_tag0@@": "Trieu el tipus d'esquema de colors per representar el ràster d'entrada",
	"@@Colormap_Color-Scheme-Type_tag1@@": "Rampa de color: utilitzeu una rampa de color.",
	"@@Colormap_Color-Scheme-Type_tag2@@": "Mapa de color: trieu un mapa de color preexistent.",
	"@@Colormap_Colormap_tag0@@": "La llista desplegable inclou els següents mapes de color per defecte:",
	"@@Colormap_Colormap_tag1@@": "Elevació: mapa de color que canvia gradualment de cian a porpra i a negre.",
	"@@Colormap_Colormap_tag2@@": "Gris: mapa de color que canvia gradualment de negre a blanc.",
	"@@Colormap_Colormap_tag7@@": "Ombreig: un mapa de color en escala de grisos per visualitzar una representació 3D de la superfície del terreny, tenint en compte la posició relativa del sol per ombrejar la imatge.",
	"@@Colormap_Colormap_tag3@@": "NDVI: mapa de color per visualitzar vegetació. Els valors propers a zero indiquen blau. Els valors baixos indiquen marró. A continuació, els colors canvien gradualment de vermell a taronja, groc, verd i negre, a mesura que l'índex de vegetació augmenta.",
	"@@Colormap_Colormap_tag4@@": "NDVI2: mapa de color per visualitzar vegetació. Els valors baixos van de blanc a verd. A continuació, els colors varien de gris, a porpra, violeta, blau fosc i negre, a mesura que l'índex de vegetació augmenta.",
	"@@Colormap_Colormap_tag5@@": "NDVI3: mapa de color per visualitzar vegetació. Els valors propers a zero indiquen blau. A continuació, els colors canvien gradualment de vermell a taronja i a verd, a mesura que l'índex de vegetació augmenta.",
	"@@Colormap_Colormap_tag6@@": "Aleatori: mapa de color aleatori.",
	"@@Colormap_Raster_tag0@@": "Ràster d'entrada.",
	"@@Colormap-To-RGB_Raster_tag0@@": "Ràster del mapa de color d'entrada.",
	"@@Complex_Raster_tag0@@": "Ràster d'entrada.",
	"@@Composite-Bands_Rasters_tag0@@": "Utilitzeu la llista desplegable o el botó <strong>Examina</strong> per triar les entrades de ràster.",
	"@@Composite-Bands_cellsizetype_tag0@@": "<p>Trieu la mida de cel·la que voleu fer servir al ràster de sortida. Si la mida de totes les cel·les d'entrada és igual, totes les opcions donaran el mateix resultat.</p><ul><li>Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.</li><li>Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.</li><li>Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.</li><li>Mitjana de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.</li><li>Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.</li></ul>",
	"@@Con-function_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Con-function_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Con-function_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Con-function_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Con-function_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Con-function_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Con_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Con_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Con_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Con_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Con_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Con_False-Raster_tag0@@": "Entrada els valors de la qual s'utilitzaran com a valors del píxel de sortida si la condició és falsa. Pot ser un enter, un ràster de punt flotant o un valor constant.",
	"@@Con_Raster_tag0@@": "Ràster d'entrada que representa el resultat booleà d'una funció matemàtica lògica del ràster. Els valors seran 1 (true) o 0 (false). Pot ser un enter o un ràster de punt flotant.",
	"@@Con_True-Raster_tag0@@": "Entrada els valors de la qual s'utilitzaran com a valors del píxel de sortida si la condició és certa. Pot ser un enter, un ràster de punt flotant o un valor constant.",
	"@@Constant_Constant_tag0@@": "Valor de la constant que s'afegirà al ràster virtual.",
	"@@Constant_Raster-Info_tag0@@": "Utilitzeu el botó <strong>Carrega el ràster de la plantilla</strong> per carregar una plantilla des d'un directori o un portal.",
	"@@Contour_Adaptive-Smoothing_tag0@@": "Quantitat de suavització que s'aplicarà a la línia de corba de nivell. El valor per defecte és 2,5.",
	"@@Contour_Adaptive-Smoothing_tag1@@": "Un valor inferior produeix una línia de corba de nivell amb més granularitat i menys suavització, mentre que un valor superior produeix una línia de corba de nivell amb més suavització que es mostra menys irregular.",
	"@@Contour_Contour-Interval_tag0@@": "Diferència d'altitud entre les línies de corba de nivell.",
	"@@Contour_Contour-Interval_tag1@@": "Un interval de corbes de nivell petit s'utilitza en àrees relativament planes, mentre d'altres més grans s'utilitzen en terrenys irregulars o muntanyosos.",
	"@@Contour_Contour-Type_tag0@@": "Tipus de corba de nivell que es crearà:",
	"@@Contour_Contour-Type_tag1@@": "<strong>Emplenament de la corba de nivell</strong>: emplena l'àrea entre cada línia de corba de nivell amb el valor d'elevació quantificat.",
	"@@Contour_Contour-Type_tag3@@": "<strong>Línies de corba de nivell</strong>: uneix punts amb la mateixa elevació per crear una línia que representi una elevació constant.",
	"@@Contour_Contour-Type_tag5@@": "<strong>Suavitza només la superfície</strong>: suavitza la capa d'elevació d'entrada, però no produeix corbes de nivell.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag0@@": "Corba de nivell d'índex, que es representa com una línia en negreta.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag1@@": "El valor per defecte és 5; per tant, cada cinquena línia de corba de nivell està en negreta.",
	"@@Contour_Number-Of-Contours_tag0@@": "Nombre de corbes de nivell que es generaran a la visualització. Aquesta opció ajusta de manera dinàmica l'interval de corbes de nivell per ajustar el terreny a la visualització i mantenir alhora els interval estandarditzats, com ara 1, 5, 10, etc.",
	"@@Contour_Raster_tag0@@": "Dataset d'elevació de ràster d'una banda.",
	"@@Contour_Z-Base_tag0@@": "Valor de base de les corbes de nivell. Les corbes de nivell es generen per sobre i per sota d'aquest valor, segons sigui necessari per cobrir tot l'interval de valors del ràster d'entrada. El valor per defecte és 0.",
	"@@Contour_Z-Base_tag1@@": "Un valor de 0 sovint representa el nivell mitjà del mar, en funció del dataset d'elevació d'origen.",
	"@@Contour_Z-Factor_tag0@@": "Factor de conversió d'unitats utilitzat en generar corbes de nivell. El valor per defecte és 1.",
	"@@Contour_Z-Factor_tag1@@": "Les línies de corba de nivell es generen en funció dels valors de z del ràster d'entrada, que sovint es mesuren en unitats de metres o peus. Amb un valor per defecte d'1, les corbes de nivell s'indicaran amb les mateixes unitats que els valor de z del ràster d'entrada. Per crear corbes de nivell amb una unitat diferent que la dels valors de z, definiu un valor adequat per al factor z. Tingueu en compte que no és necessari tenir unitats x,y de terreny i z de superfície coherents per a aquesta eina.",
	"@@Contour_Z-Factor_tag2@@": "Per exemple, si els valors d'elevació del ràster d'entrada són peus, però voleu que les corbes de nivell es generin en metres, definiu el factor z en 0,3048 (1 peu =0,3048 metres).",
	"@@Contrast-and-Brightness_Brightness-Offset_tag0@@": "Ajusteu la brillantor de la capa ràster.",
	"@@Contrast-and-Brightness_Brightness-Offset_tag1@@": "Podeu utilitzar el control lliscant per modificar la compensació de la brillantor, o bé podeu escriure un valor.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag0@@": "Ajusteu el contrast de la capa ràster.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag1@@": "Podeu utilitzar el control lliscant per modificar la compensació del contrast, o bé podeu escriure un valor.",
	"@@Contrast-and-Brightness_Raster_tag0@@": "Ràster d'entrada on s'editaran la brillantor i el contrast.",
	"@@Convolution_kernel_tag0@@": "<p>En aquesta taula es mostra com es ponderarà cada píxel al procés de filtratge. Aquesta taula es pot editar si trieu <strong>Definit per l'usuari</strong> com a <strong>Tipus</strong>.</p>",
	"@@Convolution_Raster_tag0@@": "Dataset ràster d'entrada.",
	"@@Convolution_Type_tag0@@": "Seleccioneu el tipus de filtratge que voleu realitzar. Hi ha opcions per enfocar, difuminar i detectar vores, o bé podeu definir un filtre propi basat en el nucli",
	"@@Corridor_Distance-Raster-1_tag0@@": "Primer ràster de distància d'entrada. Ha de ser una sortida de distància de cost acumulat de Cost en pla o Distància de ruta.",
	"@@Corridor_Distance-Raster-2_tag0@@": "Segon ràster de distància d'entrada. Ha de ser una sortida de distància de cost acumulat de Cost en pla o Distància de ruta.",
	"@@Cos_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Cos_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Cos_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Cos_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Cos_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Cos_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Cos_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Cos_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Cos_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Cos_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Cos_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Cos_Raster_tag0@@": "Entrada de la qual es calcularan els valors del cosinus.",
	"@@CosH_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@CosH_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@CosH_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@CosH_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@CosH_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@CosH_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@CosH_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@CosH_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@CosH_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@CosH_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@CosH_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@CosH_Raster_tag0@@": "Entrada de la qual es calcularan els valors del cosinus hiperbòlic.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Aquest paràmetre simula l'increment de l'esforç per superar els costos a mesura que el cost acumulatiu augmenta. S'utilitza per representar la fatiga del viatger. El cost acumulatiu creixent per arribar a una cel·la es multiplica per la taxa de resistència i s'afegeix al cost per passar a la cel·la següent.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "És una versió modificada d'una fórmula de tipus d'interès compost que s'utilitza per calcular el cost aparent de passar per una cel·la. A mesura que el valor de la taxa de resistència augmenta, també ho fa el cost de les cel·les que es visiten posteriorment. Com més alta és la taxa de resistència, més alt és el cost per arribar a la cel·la següent, que es calcula per a cada moviment posterior. Atès que la taxa de resistència és similar a una taxa composta i que els valors del cost acumulatiu acostumen a ser molt alts, es recomanen taxes de resistència baixes, com ara de 0,005 o menys, segons els valors del cost acumulatiu.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Cost-Allocation_Capacity_tag0@@": "Defineix la capacitat de cost del viatger per a un origen. Els càlculs de cost continuen per a cada origen fins a assolir la capacitat especificada.",
	"@@Cost-Allocation_Capacity_tag1@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Cost-Allocation_Capacity_tag2@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Cost-Allocation_Cost-Raster_tag0@@": "Ràster d'entrada necessari que defineix el cost o la impedància del moviment planimètric a través de cada cel·la. El valor de cada ubicació de cel·la representa la distància de cost per unitat per moure's a través de la cel·la. Cada valor d'ubicació de cel·la es multiplica per la resolució de la cel·la i també es compensa el moviment diagonal per obtenir el cost total de passar a través de la cel·la.",
	"@@Cost-Allocation_Cost-Raster_tag1@@": "Els valors del <strong>ràster de costos</strong> poden ser enters o punts flotants, però no poden ser negatius ni zero.",
	"@@Cost-Allocation_Maximum-Distance_tag0@@": "Llindar que els valors del cost acumulatiu no poden superar. Si una distància de cost acumulatiu supera aquest valor, el valor de sortida de la ubicació de la cel·la serà ${NoData}. La distància màxima defineix l'extensió de la qual es calculen les distàncies de cost acumulatiu. La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Multiplicador que s'aplicarà als valors dels costos.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Aquest paràmetre permet controlar el mode de viatge o la magnitud en un origen. Com major sigui el multiplicador, més alt serà el cost del moviment a través de cada cel·la.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Els valors han de ser més grans que zero. El valor per defecte és 1.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Cost-Allocation_Source-Field_tag0@@": "Camp utilitzat per assignar valors a les ubicacions d'origen. Ha de ser de tipus enter. Si s'ha definit el <strong>ràster de valor</strong>, els valors d'aquesta entrada tindran prioritat sobre qualsevol configuració del <strong>camp d'origen</strong>.",
	"@@Cost-Allocation_Source-Raster_tag0@@": "Ràster d'entrada necessari de les ubicacions d'origen.",
	"@@Cost-Allocation_Source-Raster_tag1@@": "Aquest és un ràster que identifica les cel·les o les ubicacions des de les quals s'ha calculat la distància de menor cost acumulat de la ubicació de cada cel·la de sortida.",
	"@@Cost-Allocation_Source-Raster_tag2@@": "Si el <strong>ràster d'origen</strong> d'entrada es de punt flotant, cal definir el <strong>ràster de valor</strong> i ha de ser un enter. El <strong>ràster de valor</strong> tindrà prioritat sobre qualsevol configuració del <strong>camp d'origen</strong>.",
	"@@Cost-Allocation_Start-Cost_tag0@@": "Cost inicial on començaran els càlculs de costos. Aquest paràmetre permet l'especificació del cost fix associat a un origen. En lloc de començar amb un cost de 0, l'algoritme de cost ho farà amb el valor especificat.",
	"@@Cost-Allocation_Start-Cost_tag1@@": "El valor ha de ser zero o superior. El valor per defecte és 0.",
	"@@Cost-Allocation_Travel-Direction_tag0@@": "Defineix la direcció del viatger quan s'apliquen la taxa de resistència i el cost inicial de l'origen.",
	"@@Cost-Allocation_Travel-Direction_tag1@@": "<strong>Des de l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per l'origen d'entrada i passant a les cel·les que no són la d'origen. Aquesta és l'opció per defecte.",
	"@@Cost-Allocation_Travel-Direction_tag3@@": "<strong>Fins a l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per cada cel·la que no sigui la d'origen i tornant a l'origen d'entrada.",
	"@@Cost-Allocation_Travel-Direction_tag5@@": "Especifiqueu la paraula clau <strong>Des de l'origen</strong> o <strong>Fins a l'origen</strong>, que s'aplicarà a tots els orígens o especifiqueu un camp al <strong>ràster d'origen</strong> que contingui les paraules clau per identificar la direcció de viatge de cada origen. Aquest camp ha de contenir la cadena ${FROM_SOURCE} o ${TO_SOURCE}.",
	"@@Cost-Allocation_Value-Raster_tag0@@": "Ràster enter d'entrada que identifica els valors de zona que s'utilitzaran per a cada ubicació d'origen d'entrada. A cada cel·la d'ubicació d'origen, el valor definit pel <strong>ràster de valor</strong> s'assignarà a totes les cel·les assignades a la ubicació d'origen per al càlcul. El <strong>ràster de valor</strong> tindrà prioritat sobre qualsevol configuració per al <strong>camp d'origen</strong>.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Aquest paràmetre simula l'increment de l'esforç per superar els costos a mesura que el cost acumulatiu augmenta. S'utilitza per representar la fatiga del viatger. El cost acumulatiu creixent per arribar a una cel·la es multiplica per la taxa de resistència i s'afegeix al cost per passar a la cel·la següent.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "És una versió modificada d'una fórmula de tipus d'interès compost que s'utilitza per calcular el cost aparent de passar per una cel·la. A mesura que el valor de la taxa de resistència augmenta, també ho fa el cost de les cel·les que es visiten posteriorment. Com més alta és la taxa de resistència, més alt és el cost per arribar a la cel·la següent, que es calcula per a cada moviment posterior. Atès que la taxa de resistència és similar a una taxa composta i que els valors del cost acumulatiu acostumen a ser molt alts, es recomanen taxes de resistència baixes, com ara de 0,005 o menys, segons els valors del cost acumulatiu.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Cost-Back-Link_Capacity_tag0@@": "Defineix la capacitat de cost del viatger per a un origen. Els càlculs de cost continuen per a cada origen fins a assolir la capacitat especificada.",
	"@@Cost-Back-Link_Capacity_tag1@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Cost-Back-Link_Capacity_tag2@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Cost-Back-Link_Cost-Raster_tag0@@": "Ràster d'entrada necessari que defineix el cost o la impedància del moviment planimètric a través de cada cel·la. El valor de cada ubicació de cel·la representa la distància de cost per unitat per moure's a través de la cel·la. Cada valor d'ubicació de cel·la es multiplica per la resolució de la cel·la i també es compensa el moviment diagonal per obtenir el cost total de passar a través de la cel·la.",
	"@@Cost-Back-Link_Cost-Raster_tag1@@": "Els valors del <strong>ràster de costos</strong> poden ser enters o punts flotants, però no poden ser negatius ni zero.",
	"@@Cost-Back-Link_Maximum-Distance_tag0@@": "Llindar que els valors del cost acumulatiu no poden superar. Si una distància de cost acumulatiu supera aquest valor, el valor de sortida de la ubicació de la cel·la serà NoData. La distància màxima defineix l'extensió de la qual es calculen les distàncies de cost acumulatiu. La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Multiplicador que s'aplicarà als valors dels costos.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Aquest paràmetre permet controlar el mode de viatge o la magnitud en un origen. Com major sigui el multiplicador, més alt serà el cost del moviment a través de cada cel·la.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Els valors han de ser més grans que zero. El valor per defecte és 1.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Cost-Back-Link_Source-Raster_tag0@@": "Ràster d'entrada necessari de les ubicacions d'origen.",
	"@@Cost-Back-Link_Source-Raster_tag1@@": "Aquest és un ràster que identifica les cel·les o les ubicacions des de les quals s'ha calculat la distància de menor cost acumulat de la ubicació de cada cel·la de sortida.",
	"@@Cost-Back-Link_Start-Cost_tag0@@": "Cost inicial on començaran els càlculs de costos. Aquest paràmetre permet l'especificació del cost fix associat a un origen. En lloc de començar amb un cost de 0, l'algoritme de cost ho farà amb el valor especificat.",
	"@@Cost-Back-Link_Start-Cost_tag1@@": "El valor ha de ser zero o superior. El valor per defecte és 0.",
	"@@Cost-Back-Link_Travel-Direction_tag0@@": "Defineix la direcció del viatger quan s'apliquen la taxa de resistència i el cost inicial de l'origen.",
	"@@Cost-Back-Link_Travel-Direction_tag1@@": "<strong>Des de l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per l'origen d'entrada i passant a les cel·les que no són la d'origen. Aquesta és l'opció per defecte.",
	"@@Cost-Back-Link_Travel-Direction_tag3@@": "<strong>Fins a l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per cada cel·la que no sigui la d'origen i tornant a l'origen d'entrada.",
	"@@Cost-Back-Link_Travel-Direction_tag5@@": "Especifiqueu la paraula clau <strong>Des de l'origen</strong> o <strong>Fins a l'origen</strong>, que s'aplicarà a tots els orígens o especifiqueu un camp al <strong>ràster d'origen</strong> que contingui les paraules clau per identificar la direcció de viatge de cada origen. Aquest camp ha de contenir la cadena ${FROM_SOURCE} o ${TO_SOURCE}.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Aquest paràmetre simula l'increment de l'esforç per superar els costos a mesura que el cost acumulatiu augmenta. S'utilitza per representar la fatiga del viatger. El cost acumulatiu creixent per arribar a una cel·la es multiplica per la taxa de resistència i s'afegeix al cost per passar a la cel·la següent.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "És una versió modificada d'una fórmula de tipus d'interès compost que s'utilitza per calcular el cost aparent de passar per una cel·la. A mesura que el valor de la taxa de resistència augmenta, també ho fa el cost de les cel·les que es visiten posteriorment. Com més alta és la taxa de resistència, més alt és el cost per arribar a la cel·la següent, que es calcula per a cada moviment posterior. Atès que la taxa de resistència és similar a una taxa composta i que els valors del cost acumulatiu acostumen a ser molt alts, es recomanen taxes de resistència baixes, com ara de 0,005 o menys, segons els valors del cost acumulatiu.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Cost-Distance_Capacity_tag0@@": "Defineix la capacitat de cost del viatger per a un origen. Els càlculs de cost continuen per a cada origen fins a assolir la capacitat especificada.",
	"@@Cost-Distance_Capacity_tag1@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Cost-Distance_Capacity_tag2@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Cost-Distance_Cost-Raster_tag0@@": "Ràster d'entrada necessari que defineix el cost o la impedància del moviment planimètric a través de cada cel·la. El valor de cada ubicació de cel·la representa la distància de cost per unitat per moure's a través de la cel·la. Cada valor d'ubicació de cel·la es multiplica per la resolució de la cel·la i també es compensa el moviment diagonal per obtenir el cost total de passar a través de la cel·la.",
	"@@Cost-Distance_Cost-Raster_tag1@@": "Els valors del <strong>ràster de costos</strong> poden ser enters o punts flotants, però no poden ser negatius ni zero.",
	"@@Cost-Distance_Maximum-Distance_tag0@@": "Llindar que els valors del cost acumulatiu no poden superar. Si una distància de cost acumulatiu supera aquest valor, el valor de sortida de la ubicació de la cel·la serà NoData. La distància màxima defineix l'extensió de la qual es calculen les distàncies de cost acumulatiu. La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Multiplicador que s'aplicarà als valors dels costos.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Aquest paràmetre permet controlar el mode de viatge o la magnitud en un origen. Com major sigui el multiplicador, més alt serà el cost del moviment a través de cada cel·la.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Els valors han de ser més grans que zero. El valor per defecte és 1.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Cost-Distance_Source-Raster_tag0@@": "Ràster d'entrada necessari de les ubicacions d'origen.",
	"@@Cost-Distance_Source-Raster_tag1@@": "Aquest és un ràster que identifica les cel·les o les ubicacions des de les quals s'ha calculat la distància de menor cost acumulat de la ubicació de cada cel·la de sortida.",
	"@@Cost-Distance_Start-Cost_tag0@@": "Cost inicial on començaran els càlculs de costos. Aquest paràmetre permet l'especificació del cost fix associat a un origen. En lloc de començar amb un cost de 0, l'algoritme de cost ho farà amb el valor especificat.",
	"@@Cost-Distance_Start-Cost_tag1@@": "El valor ha de ser zero o superior. El valor per defecte és 0.",
	"@@Cost-Distance_Travel-Direction_tag0@@": "Defineix la direcció del viatger quan s'apliquen la taxa de resistència i el cost inicial de l'origen.",
	"@@Cost-Distance_Travel-Direction_tag1@@": "<strong>Des de l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per l'origen d'entrada i passant a les cel·les que no són la d'origen. Aquesta és l'opció per defecte.",
	"@@Cost-Distance_Travel-Direction_tag3@@": "<strong>Fins a l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per cada cel·la que no sigui la d'origen i tornant a l'origen d'entrada.",
	"@@Cost-Distance_Travel-Direction_tag5@@": "Especifiqueu la paraula clau <strong>Des de l'origen</strong> o <strong>Fins a l'origen</strong>, que s'aplicarà a tots els orígens o especifiqueu un camp al <strong>ràster d'origen</strong> que contingui les paraules clau per identificar la direcció de viatge de cada origen. Aquest camp ha de contenir la cadena ${FROM_SOURCE} o ${TO_SOURCE}.",
	"@@Curvature_Curvature-Type_tag0@@": "El tipus de curvatura accentua els diferents aspectes del pendent. Hi ha tres opcions de curvatura:",
	"@@Curvature_Curvature-Type_tag1@@": "Pla: és perpendicular a la direcció del pendent màxim. Influeix en la convergència i la divergència del flux en una superfície.",
	"@@Curvature_Curvature-Type_tag2@@": "Perfil: és paral·lel al pendent i indica la direcció del pendent màxim. Afecta l'acceleració i desacceleració del flux en tota la superfície.",
	"@@Curvature_Curvature-Type_tag3@@": "Estàndard: combina les curvatures <strong>Perfil</strong> i <strong>Pla</strong>.",
	"@@Curvature_DEM_tag0@@": "Ràster de model d'elevació digital (DEM).",
	"@@Curvature_Z-Factor_tag0@@": "El factor z ajusta les unitats de mesura de les unitats de z quan són diferents de les unitats d'x,y de la superfície d'entrada. Si les unitats d'x,y i les unitats de z són les mateixes unitats de mesura, el factor z ha d'estar definit en 1. Els valors de z de la superfície d'entrada es multipliquen pel factor z en calcular la superfície de sortida final. Per exemple, si les unitats de z són peus i les unitats d'x,y són metres, heu d'utilitzar un factor z de 0,3048 per convertir les unitats de z de peus a metres, ja que 1 peu = 0,3048 metres.",
	"@@Divide_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Divide_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Divide_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Divide_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Divide_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Divide_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Divide_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Divide_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Divide_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Divide_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Divide_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Divide_Raster_tag0@@": "Entrada el valor de la qual es dividirà per la segona entrada.",
	"@@Divide_Raster_tag1@@": "Es pot utilitzar un nombre com a entrada per a aquest paràmetre, sempre i quan s'especifiqui un ràster per a ${Raster2}.",
	"@@Divide_Raster2_tag0@@": "Entrada pel valor de la qual es dividirà la primera entrada.",
	"@@Divide_Raster2_tag1@@": "Es pot utilitzar un nombre com a entrada per a aquest paràmetre, sempre i quan s'especifiqui un ràster per a ${Raster}.",
	"@@Elevation-Void-Fill_DEM_tag0@@": "DEM d'entrada.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag0@@": "El valor màxim d'amplada de buit s'utilitza per especificar la mida més gran d'un buit que voleu emplenar. Si l'amplada o l'altura del quadre delimitador que envolta el buit és més gran que el valor màxim d'amplada del buit, el buit no s'emplenarà. Les unitats d'aquest paràmetre són les mateixes que s'utilitzen al sistema de referència espacial de les vostres dades.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag1@@": "Si aquest paràmetre està en blanc o té un valor de ${0}, no s'utilitzarà cap amplada màxima i s'emplenaran tots els buits. Un valor de ${-1} significa que no s'emplenarà cap buit.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag0@@": "Radi de cerca màxim que s'utilitzarà per emplenar buits. Un buit que es trobi més lluny de qualsevol píxel vàlid que aquest valor de llindar continuarà essent un buit. Les unitats d'aquest paràmetre són les mateixes que s'utilitzen al sistema de referència espacial de les vostres dades.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag1@@": "Si el valor d'aquest paràmetre està en blanc, és ${0} o és ${-1}, aquest paràmetre no s'utilitzarà.",
	"@@Equal-to_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Equal-to_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Equal-to_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Equal-to_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Equal-to_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Equal-to_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Equal-to_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Equal-to_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Equal-to_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Equal-to_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Equal-to_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Equal-to_Raster_tag0@@": "Entrada que s'utilitzarà per comparar la igualtat de la segona entrada.",
	"@@Equal-to_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Equal-to_Raster2_tag0@@": "Entrada que s'utilitzarà per comparar la igualtat de la primera entrada.",
	"@@Equal-to_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Euclidean-Allocation_Cellsize_tag0@@": "Mida de la cel·la on es crearà el ràster de sortida.",
	"@@Euclidean-Allocation_Cellsize_tag1@@": "Si la mida de la cel·la s'ha definit explícitament a <strong>Entorns d'anàlisi</strong>, aquesta serà la mida de cel·la per defecte. Si no s'ha definit, la mida de la cel·la de sortida coincidirà amb la del <strong>ràster d'origen</strong>.",
	"@@Euclidean-Allocation_Distance-Method_tag0@@": "Determina si es calcularà la distància mitjançant un mètode pla (terra plana) o geodèsic (el·lipsoide).",
	"@@Euclidean-Allocation_Distance-Method_tag1@@": "Geodèsic: línia més curta entre dos punts a la superfície terrestre en un esferoide (el·lipsoide). Per tant, independentment de la projecció d'entrada o de sortida, els resultats no canvien. Una línia geodèsica es pot utilitzar quan voleu determinar la distància més curta entre dues ciutats per definir una ruta de vol. També es coneix com a línia ortodròmica si es basa en una esfera en lloc de basar-se en un el·lipsoide.",
	"@@Euclidean-Allocation_Distance-Method_tag2@@": "Pla: les mesures planes utilitzen matemàtiques cartesianes 2D per calcular la longitud i l'àrea. L'opció només està disponible quan es mesura en un sistema de coordenades projectades, i el pla 2D d'aquest sistema de coordenades s'utilitzarà com a base per a les mesures.",
	"@@Euclidean-Allocation_Maximum-Distance_tag0@@": "Defineix el llindar de distància en què es determinarà l'origen més proper. Si la distància a l'origen més proper supera aquest llindar, la sortida de la cel·la serà ${NoData}.",
	"@@Euclidean-Allocation_Maximum-Distance_tag1@@": "La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Euclidean-Allocation_Raster-Barriers_tag0@@": "Ràster que defineix les barreres.",
	"@@Euclidean-Allocation_Raster-Barriers_tag1@@": "El dataset ha de contenir ${NoData} allà on no hi ha barreres. Les barreres es representen amb valors vàlids, que inclouen el zero.",
	"@@Euclidean-Allocation_Raster-Barriers_tag2@@": "Les barreres es poden definir amb un enter o un ràster de punt flotant.",
	"@@Euclidean-Allocation_Source-Field_tag0@@": "Camp utilitzat per assignar valors a les ubicacions d'origen. Ha de ser de tipus enter. Si s'ha definit el <strong>ràster de valor</strong>, els valors d'aquesta entrada tindran prioritat sobre qualsevol configuració del <strong>camp d'origen</strong>.",
	"@@Euclidean-Allocation_Source-Raster_tag0@@": "Ràster d'entrada necessari que identifica les ubicacions d'origen. L'origen més proper es determinarà, en funció de la distància euclidiana, per a cada cel·la de la sortida",
	"@@Euclidean-Allocation_Source-Raster_tag1@@": "L'entrada pot ser de tipus enter o punt flotant.",
	"@@Euclidean-Allocation_Value-Raster_tag0@@": "Ràster enter d'entrada que identifica els valors de zona que s'utilitzaran per a cada ubicació d'origen d'entrada. A cada cel·la d'ubicació d'origen, el valor definit pel <strong>ràster de valor</strong> s'assignarà a totes les cel·les assignades a la ubicació d'origen per al càlcul. El <strong>ràster de valor</strong> tindrà prioritat sobre qualsevol configuració per al <strong>camp d'origen</strong>.",
	"@@Euclidean-Direction_Cellsize_tag0@@": "Mida de la cel·la on es crearà el ràster de sortida.",
	"@@Euclidean-Direction_Cellsize_tag1@@": "Si la mida de la cel·la s'ha definit explícitament a <strong>Entorns d'anàlisi</strong>, aquesta serà la mida de cel·la per defecte. Si no s'ha definit, la mida de la cel·la de sortida coincidirà amb la del <strong>ràster d'origen</strong>.",
	"@@Euclidean-Direction_Distance-Method_tag0@@": "Determina si es calcularà la distància mitjançant un mètode pla (terra plana) o geodèsic (el·lipsoide).",
	"@@Euclidean-Direction_Distance-Method_tag1@@": "Geodèsic: línia més curta entre dos punts a la superfície terrestre en un esferoide (el·lipsoide). Per tant, independentment de la projecció d'entrada o de sortida, els resultats no canvien. Una línia geodèsica es pot utilitzar quan voleu determinar la distància més curta entre dues ciutats per definir una ruta de vol. També es coneix com a línia ortodròmica si es basa en una esfera en lloc de basar-se en un el·lipsoide.",
	"@@Euclidean-Direction_Distance-Method_tag2@@": "Pla: les mesures planes utilitzen matemàtiques cartesianes 2D per calcular la longitud i l'àrea. L'opció només està disponible quan es mesura en un sistema de coordenades projectades, i el pla 2D d'aquest sistema de coordenades s'utilitzarà com a base per a les mesures.",
	"@@Euclidean-Direction_Maximum-Distance_tag0@@": "Defineix el llindar de distància en què es calcularà la direcció a l'origen més proper. Si la distància a l'origen més proper supera aquest llindar, la sortida de la cel·la serà ${NoData}.",
	"@@Euclidean-Direction_Maximum-Distance_tag1@@": "La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Euclidean-Direction_Raster-Barriers_tag0@@": "Ràster que defineix les barreres.",
	"@@Euclidean-Direction_Raster-Barriers_tag1@@": "El dataset ha de contenir NoData allà on no hi ha barreres. Les barreres es representen amb valors vàlids, que inclouen el zero.",
	"@@Euclidean-Direction_Raster-Barriers_tag2@@": "Les barreres es poden definir amb un enter o un ràster de punt flotant.",
	"@@Euclidean-Direction_Source-Raster_tag0@@": "Ràster d'entrada necessari que identifica les cel·les o les ubicacions a les quals s'ha calculat la direcció euclidiana de la ubicació de cada cel·la de sortida.",
	"@@Euclidean-Direction_Source-Raster_tag1@@": "L'entrada pot ser de tipus enter o punt flotant.",
	"@@Euclidean-Distance_Cellsize_tag0@@": "Mida de la cel·la on es crearà el ràster de sortida.",
	"@@Euclidean-Distance_Cellsize_tag1@@": "Si la mida de la cel·la s'ha definit explícitament a <strong>Entorns d'anàlisi</strong>, aquesta serà la mida de cel·la per defecte. Si no s'ha definit, la mida de la cel·la de sortida coincidirà amb la del <strong>ràster d'origen</strong>.",
	"@@Euclidean-Distance_Distance-Method_tag0@@": "Determina si es calcularà la distància mitjançant un mètode pla (terra plana) o geodèsic (el·lipsoide).",
	"@@Euclidean-Distance_Distance-Method_tag1@@": "Geodèsic: línia més curta entre dos punts a la superfície terrestre en un esferoide (el·lipsoide). Per tant, independentment de la projecció d'entrada o de sortida, els resultats no canvien. Una línia geodèsica es pot utilitzar quan voleu determinar la distància més curta entre dues ciutats per definir una ruta de vol. També es coneix com a línia ortodròmica si es basa en una esfera en lloc de basar-se en un el·lipsoide.",
	"@@Euclidean-Distance_Distance-Method_tag2@@": "Pla: les mesures planes utilitzen matemàtiques cartesianes 2D per calcular la longitud i l'àrea. L'opció només està disponible quan es mesura en un sistema de coordenades projectades, i el pla 2D d'aquest sistema de coordenades s'utilitzarà com a base per a les mesures.",
	"@@Euclidean-Distance_Maximum-Distance_tag0@@": "Llindar que els valors de la distància acumulativa no poden superar. Si una distància euclidiana acumulativa supera aquest valor, el valor de sortida de la ubicació de la cel·la serà NoData.",
	"@@Euclidean-Distance_Maximum-Distance_tag1@@": "La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Euclidean-Distance_Raster-Barriers_tag0@@": "Ràster que defineix les barreres.",
	"@@Euclidean-Distance_Raster-Barriers_tag1@@": "El dataset ha de contenir ${NoData} allà on no hi ha barreres. Les barreres es representen amb valors vàlids, que inclouen el zero.",
	"@@Euclidean-Distance_Raster-Barriers_tag2@@": "Les barreres es poden definir amb un enter o un ràster de punt flotant.",
	"@@Euclidean-Distance_Source-Raster_tag0@@": "Ràster d'entrada necessari que identifica les cel·les o les ubicacions a les quals s'ha calculat la distància euclidiana de la ubicació de cada cel·la de sortida.",
	"@@Euclidean-Distance_Source-Raster_tag1@@": "L'entrada pot ser de tipus enter o punt flotant.",
	"@@Exp_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Exp_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Exp_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Exp_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Exp_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Exp_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Exp_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Exp_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Exp_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Exp_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Exp_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Exp_Raster_tag0@@": "Valors d'entrada dels quals es cercarà l'exponencial de base e.",
	"@@Exp10_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Exp10_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Exp10_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Exp10_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Exp10_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Exp10_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Exp10_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Exp10_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Exp10_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Exp10_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Exp10_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Exp10_Raster_tag0@@": "Valors d'entrada dels quals es cercarà l'exponencial de base 10.",
	"@@Exp2_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Exp2_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Exp2_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Exp2_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Exp2_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Exp2_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Exp2_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Exp2_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Exp2_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Exp2_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Exp2_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Exp2_Raster_tag0@@": "Valors d'entrada dels quals es cercarà l'exponencial de base 2.",
	"@@Extract-Bands_Band_tag0@@": "Seleccioneu les bandes que voleu extreure d'una llista basada en l'opció del paràmetre <strong>Mètode</strong> que utilitzeu.",
	"@@Extract-Bands_Combination_tag0@@": "Combinació de bandes o ordre de les bandes. La llista de selecció depèn de l'opció de <strong>Mètode</strong> especificada. Per exemple, si l'opció de <strong>Mètode</strong> és <strong>Noms de banda</strong>, podeu seleccionar una combinació de blau, verd i vermell per extreure una imatge de color natural.",
	"@@Extract-Bands_Method_tag0@@": "Seleccioneu un dels mètodes següents per extreure bandes:",
	"@@Extract-Bands_Method_tag1@@": "<strong>ID de banda</strong>: designació o nombre de la banda, que és un valor únic per a cada sensor. Poden ser idèntics als <strong>Noms de banda</strong>.",
	"@@Extract-Bands_Method_tag4@@": "<strong>Noms de banda</strong>: utilitza el nom de banda que representa l'interval de longitud d'ona a l'espectre electromagnètic (per exemple, vermell, infraroig proper o infraroig tèrmic). També es pot designar com un ID de nombre de bandes.",
	"@@Extract-Bands_Method_tag6@@": "<strong>Longituds d'ona de bandes</strong>: longitud d'ona a l'espectre electromagnètic.",
	"@@Extract-Bands_Missing-Band-Action_tag0@@": "Especifiqueu l'acció que es produirà quan una banda de l'extracte de la llista de bandes no estigui disponible.",
	"@@Extract-Bands_Missing-Band-Action_tag1@@": "<strong>Millor coincidència</strong>: cerca la millor banda disponible per utilitzar en lloc de la banda que falta i es basa en la longitud d'ona per evitar errors de la funció",
	"@@Extract-Bands_Missing-Band-Action_tag3@@": "<strong>Error</strong>: si al dataset d'entrada li falta alguna banda especificada al paràmetre <strong>Banda</strong>, es produirà un error de la funció.",
	"@@Extract-Bands_Raster_tag0@@": "Producte de ràster del qual s'extrauran les bandes.",
	"@@Fill_Raster_tag0@@": "Ràster d'elevació d'una banda.",
	"@@Fill_Z-Limit_tag0@@": "Diferència d'elevació màxima entre un embornal i el seu punt de fluïdesa per omplir.",
	"@@Fill_Z-Limit_tag1@@": "Tret que s'especifiqui un valor per a aquest paràmetre, tots els embornals s'ompliran, independentment de la profunditat.",
	"@@Fill_Z-Limit_tag2@@": "El valor de <strong>Límit de Z</strong> ha de ser més gran que zero.",
	"@@Float_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Float_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Float_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Float_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Float_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Float_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Float_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Float_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Float_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Float_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Float_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Float_Raster_tag0@@": "Ràster d'entrada que es convertirà en un punt flotant.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag0@@": "Ràster d'entrada que mostra la direcció de sortida del flux de cada cel·la.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag1@@": "El ràster de direcció del flux es pot crear executant la funció <strong>Direcció del flux</strong>.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag0@@": "Defineix el tipus de ràster de direcció del flux d'entrada.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag1@@": "<strong>D8</strong>: el ràster de direcció del flux d'entrada és de tipus D8. Aquesta és l'opció per defecte.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag3@@": "<strong> DINF</strong>: el ràster de direcció del flux d'entrada és de tipus D-Infinity (DINF).",
	"@@Flow-Accumulation_Flow-Direction-Type_tag5@@": "<strong> MFD</strong>: el ràster de direcció del flux d'entrada és de tipus Direcció del flux múltiple (MFD).",
	"@@Flow-Accumulation_Output-Data-Type_tag0@@": "El ràster d'acumulació de sortida pot ser de tipus enter o punt flotant.",
	"@@Flow-Accumulation_Output-Data-Type_tag1@@": "<strong>Punt flotant</strong>: el ràster de sortida serà de tipus punt flotant. Aquesta és l'opció per defecte.",
	"@@Flow-Accumulation_Output-Data-Type_tag3@@": "<strong> Enter</strong>: el ràster de sortida serà de tipus enter.",
	"@@Flow-Accumulation_Weight-Raster_tag0@@": "Ràster d'entrada opcional per aplicar una ponderació a cada píxel.",
	"@@Flow-Accumulation_Weight-Raster_tag1@@": "Si no s'especifica cap ràster de ponderació, s'aplicarà la ponderació per defecte d'1 a cada píxel.",
	"@@Flow-Direction_Flow-Direction-Type_tag0@@": "Defineix el tipus de ràster de direcció del flux d'entrada.",
	"@@Flow-Direction_Flow-Direction-Type_tag1@@": "<strong>D8</strong>: el ràster de direcció del flux d'entrada és de tipus D8. Aquesta és l'opció per defecte.",
	"@@Flow-Direction_Flow-Direction-Type_tag3@@": "<strong> DINF</strong>: el ràster de direcció del flux d'entrada és de tipus D-Infinity (DINF).",
	"@@Flow-Direction_Flow-Direction-Type_tag5@@": "<strong> MFD</strong>: el ràster de direcció del flux d'entrada és de tipus Direcció del flux múltiple (MFD).",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag0@@": "Especifica si els píxels de les vores sempre fluiran enfora o seguiran les regles de flux normals.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag1@@": "<strong>No</strong>: si la caiguda màxima dins d'un píxel de vora és més gran que zero, la direcció del flux es determinarà de la manera habitual; altrament, la direcció del flux serà cap a la vora. Els píxels que hagin de fluir des de la vora del ràster de superfície cap endins ho faran. Aquesta és l'opció per defecte.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag3@@": "<strong>Sí</strong>: tots els píxels de la vora del ràster de superfície fluiran enfora des del ràster de superfície.",
	"@@Flow-Direction_Raster_tag0@@": "Ràster d'entrada que representa una superfície d'elevació contínua.",
	"@@Flow-Distance_Distance-Type_tag0@@": "Determina si es calcularà el component vertical o horitzontal de la distància del flux.",
	"@@Flow-Distance_Distance-Type_tag1@@": "<strong>Horitzontal</strong>: els càlculs de distància del flux representen el component horitzontal de la distància del flux des de cada píxel del domini fins al píxel o els píxels del canal on flueixen.",
	"@@Flow-Distance_Distance-Type_tag3@@": "<strong>Vertical</strong>: els càlculs de distància del flux representen el component vertical de la distància del flux des de cada píxel del domini fins al píxel o els píxels del canal on flueixen. Aquesta és l'opció per defecte.",
	"@@Flow-Distance_Flow-Direction-Raster_tag0@@": "Ràster d'entrada que mostra la direcció de sortida del flux de cada píxel.",
	"@@Flow-Distance_Flow-Direction-Raster_tag1@@": "Si es proporciona un ràster de direcció del flux, les direccions del pendent descendent es limitaran a les definides per les direccions del flux d'entrada.",
	"@@Flow-Distance_Flow-Direction-Raster_tag2@@": "El ràster de direcció del flux es poden crear mitjançant la funció Direcció del flux.",
	"@@Flow-Distance_Flow-Direction-Type_tag0@@": "Defineix el tipus de ràster de direcció del flux d'entrada.",
	"@@Flow-Distance_Flow-Direction-Type_tag1@@": "<strong>D8</strong>: el ràster de direcció del flux d'entrada és de tipus D8. Aquesta és l'opció per defecte.",
	"@@Flow-Distance_Flow-Direction-Type_tag3@@": "<strong> DINF</strong>: el ràster de direcció del flux d'entrada és de tipus D-Infinity (DINF).",
	"@@Flow-Distance_Flow-Direction-Type_tag5@@": "<strong> MFD</strong>: el ràster de direcció del flux d'entrada és de tipus Direcció del flux múltiple (MFD).",
	"@@Flow-Distance_Statistics-Type_tag0@@": "Determina el tipus d'estadístiques utilitzat per calcular la distància del flux sobre diversos recorreguts del flux. Si només hi ha un recorregut del flux des de cada cel·la a una cel·la en un canal, tots els tipus d'estadístiques generaran el mateix resultat.",
	"@@Flow-Distance_Statistics-Type_tag1@@": "<strong>Mínim</strong>: si hi ha diversos recorreguts del flux, es calcula la distància del flux mínima. Aquesta és l'opció per defecte.",
	"@@Flow-Distance_Statistics-Type_tag3@@": "<strong>Mitjana ponderada</strong>: si hi ha diversos recorreguts del flux, es calcula una mitjana ponderada de la distància del flux. La proporció del flux d'una cel·la amb les seves cel·les veïnes descendents s'utilitza com a ponderació per calcular la mitjana ponderada.",
	"@@Flow-Distance_Statistics-Type_tag5@@": "<strong>Màxim</strong>: si hi ha diversos recorreguts del flux, es calcula una distància del flux màxima.",
	"@@Flow-Distance_Stream-Raster_tag0@@": "Ràster de transmissió d'entrada que representa una xarxa de transmissió lineal.",
	"@@Flow-Distance_Surface-Raster_tag0@@": "Ràster d'entrada que representa una superfície d'elevació contínua.",
	"@@Flow-Length_Direction-of-Measurement_tag0@@": "Direcció de mesura al llarg del recorregut del flux.",
	"@@Flow-Length_Direction-of-Measurement_tag1@@": "<strong>Descendent</strong>: calcula la distància del pendent descendent al llarg del recorregut del flux, des de cada cel·la fins a un embornal o una sortida a la vora del ràster.",
	"@@Flow-Length_Direction-of-Measurement_tag3@@": "<strong> Ascendent</strong>: calcula la distància de pendent ascendent més llarga al llarg del recorregut del flux, des de cada cel·la fins a la part superior de la divisió de drenatge.",
	"@@Flow-Length_Flow-Direction-Raster_tag0@@": "Ràster d'entrada que mostra la direcció de sortida del flux de cada cel·la.",
	"@@Flow-Length_Flow-Direction-Raster_tag1@@": "El ràster de direcció del flux es pot crear executant la funció <strong>Direcció del flux</strong>.",
	"@@Flow-Length_Weight-Raster_tag0@@": "Ràster d'entrada opcional per aplicar una ponderació a cada cel·la.",
	"@@Flow-Length_Weight-Raster_tag1@@": "Si no s'especifica cap ràster de ponderació, s'aplicarà la ponderació per defecte d'1 a cada cel·la.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag0@@": "Indica si el càlcul estadístic ignora els valors ${NoData}.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag1@@": "<strong>Activada</strong>: especifica que, si existeix un valor ${NoData} en un veïnat, aquest valor s'ignorarà. Només les cel·les del veïnat que tinguin valors de dades s'utilitzaran per determinar el valor de sortida. Aquesta és l'opció per defecte.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag3@@": "<strong>Desactivada</strong>: especifica que, si una cel·la d'un veïnat té un valor ${NoData}, la sortida de la cel·la de processament serà ${NoData}.",
	"@@Focal-Statistics_Neighborhood_tag0@@": "Forma de l'àrea que envolta cada cel·la utilitzada per calcular l'estadística.",
	"@@Focal-Statistics_Neighborhood_tag1@@": "Cada veïnat té paràmetres addicionals per definir la forma.",
	"@@Focal-Statistics_Neighborhood_tag2@@": "Corona circular, Radi intern, Radi extern",
	"@@Focal-Statistics_Neighborhood_tag3@@": "Cercle, Radi",
	"@@Focal-Statistics_Neighborhood_tag4@@": "Irregular, Amplada, Altura, Valors de veïnat",
	"@@Focal-Statistics_Neighborhood_tag5@@": "Rectangle, Amplada, Altura",
	"@@Focal-Statistics_Neighborhood_tag6@@": "Falca, Radi, Angle d'inici, Angle de finalització",
	"@@Focal-Statistics_Neighborhood_tag7@@": "Pes, Amplada, Altura, Valors de veïnat",
	"@@Focal-Statistics_Neighborhood_tag8@@": "El veïnat Irregular us permet especificar un veïnat de forma irregular al voltant de la cel·la de processament. Utilitzeu la taula Valors de veïnat per definir la forma del nucli del veïnat. Un valor de 0 per a una posició de cel·la indica que la cel·la no forma part del veïnat, i no s'utilitzarà per al processament. Un valor d'1 indica que la seva cel·la corresponent (i el seu valor) és membre del veïnat.",
	"@@Focal-Statistics_Neighborhood_tag9@@": "El veïnat Pes és similar al de tipus Irregular, en què us permet definir un veïnat irregular al voltant de la cel·la de processament, però a més us permet aplicar ponderacions als valors d'entrada. Els valors del nucli de ponderació especifiquen les posicions de cel·la que s'han d'incloure al veïnat i els pesos per les quals es multiplicaran. Utilitzeu un valor de 0 per excloure una cel·la del processament. Els valors positius, negatius i decimals són tots opcions vàlides per utilitzar com a pes. Per al tipus de veïnat Pes, només s'admeten estadístiques de tipus Mitjana, Desviació estàndard o Suma.",
	"@@Focal-Statistics_Percentile-Value_tag0@@": "Indica quin percentil s'ha de calcular quan <strong>Percentil</strong> està seleccionat com a tipus d'estadística. El valor per defecte és 90 per al percentil 90.",
	"@@Focal-Statistics_Percentile-Value_tag3@@": "Els valors poden ser de 0 a 100. El percentil 0 és bàsicament equivalent a l'estadística mínima i el percentil 100 equival a la màxima, amb l'excepció que el resultat serà de tipus punt flotant. Un valor de 50 generarà bàsicament el mateix resultat que l'estadística mediana.",
	"@@Focal-Statistics_Raster_tag0@@": "Ràster d'entrada necessari.",
	"@@Focal-Statistics_Statistics-Type_tag0@@": "Tipus d'estadística que es calcularà.",
	"@@Focal-Statistics_Statistics-Type_tag1@@": "<strong>Majoria</strong>: calcula la majoria (valor que es produeix més sovint) de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag3@@": "<strong>Màxima</strong>: calcula la màxima (valor més gran) de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag5@@": "<strong>Mitjana</strong>: calcula la mitjana (valor mitjà) de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag7@@": "<strong>Mediana</strong>: calcula la mediana de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag9@@": "<strong>Mínima</strong>: calcula la mínima (valor més petit) de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag11@@": "<strong>Minoria</strong>: calcula la minoria (valor que es produeix amb menys freqüència) de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag13@@": "<strong>Percentil</strong>: calcula un percentil de les cel·les del veïnat. Podeu determinar quin percentil s'ha de calcular amb el paràmetre <strong>Valor de percentil</strong>.",
	"@@Focal-Statistics_Statistics-Type_tag17@@": "<strong>Interval</strong>: calcula l'interval (diferència entre els valors més gran i més petit) de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag19@@": "<strong>Desviació estàndard</strong>: calcula la desviació estàndard de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag21@@": "<strong> Suma</strong>: calcula la suma (total de tots els valors) de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag23@@": "<strong>Varietat</strong>: calcula la varietat (nombre de valors únics) de les cel·les del veïnat.",
	"@@Focal-Statistics_Statistics-Type_tag25@@": "Si el ràster d'entrada és de punt flotant, només estaran disponibles els tipus d'estadístiques Mitjana, Màxim, Mediana, Mínim, Percentil, Interval, Desviació estàndard i Suma.",
	"@@Focal-Statistics_Statistics-Type_tag26@@": "Per als tipus Mitjana, Mediana, Percentil i Desviació estàndard, la sortida sempre és de punt flotant.",
	"@@Focal-Statistics_Statistics-Type_tag27@@": "El tipus d'estadístiques per defecte és Mitjana.",
	"@@Geometric_Constant-Z_tag0@@": "Especifiqueu una elevació constant per utilitzar la funció Geomètrica.",
	"@@Geometric_DEM_tag0@@": "Especifiqueu el DEM per utilitzar la funció Geomètrica. Podeu utilitzar un DEM inclòs al dataset de mosaic com un dataset ràster o un dataset de mosaic la sortida del qual sigui un DEM.",
	"@@Geometric_Geoid_tag0@@": "La majoria dels datasets d'elevació, com ara USGS NED o ArcGIS Online World Elevation, són altituds ortomètriques i, per tant, és necessari seleccionar la correcció del geoide per a la compatibilitat amb els RPC de satèl·lit, que necessiten altituds el·lipsoïdals. Marqueu la casella de verificació <strong>Geoide</strong> per aplicar la correcció del geoide (EGM96) als valors de z, tret que ja es faci referència al vostre DEM a les altituds el·lipsoïdals.",
	"@@Geometric_Method_tag0@@": "Trieu el mètode d'elevació per a la funció geomètrica:",
	"@@Geometric_Method_tag1@@": "Utilitza Z constant: especifiqueu una elevació constant per executar la funció Geomètrica.",
	"@@Geometric_Method_tag2@@": "Utilitza DEM: especifiqueu un DEM per executar la funció Geomètrica.",
	"@@Geometric_Raster_tag0@@": "Ràster d'entrada.",
	"@@Geometric_Z-Factor_tag0@@": "Els coeficients polinòmics racionals (RPC) dels satèl·lits s'escalen per als datasets d'elevació amb unitats verticals en metres. Si l'elevació utilitza altres unitats verticals, introduïu un <strong>factor z</strong> per ajustar l'escala a metres. Per exemple, si les unitats d'elevació són peus, heu d'utilitzar un valor de 0,3048 per convertir les unitats d'elevació de peus a metres.",
	"@@Geometric_Z-Offset_tag0@@": "Valor de base que s'afegirà al valor d'elevació al DEM. Es pot utilitzar per desfasar els valors d'elevació que no comencen al nivell del mar.",
	"@@Geometric_Tolerance_tag0@@": "Especifiqueu l'error màxim tolerable a la funció geomètrica, expressat en nombre de píxels. El valor per defecte del tipus de ràster NITF (NCDRD) és dos.",
	"@@Grayscale_Raster_tag0@@": "Ràster d'entrada.",
	"@@Grayscale_Conversion-Parameters_tag0@@": "Ponderacions de cadascuna de les bandes que formen el ràster d'entrada.",
	"@@Greater-Than_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Greater-Than_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Greater-Than_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Greater-Than_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Greater-Than_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Greater-Than_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Greater-Than_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Greater-Than_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Greater-Than_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Greater-Than_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Greater-Than_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Greater-Than_Raster_tag0@@": "Entrada que s'està provant per determinar si és més gran que la segona entrada.",
	"@@Greater-Than_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Greater-Than_Raster2_tag0@@": "Entrada que s'utilitzarà per provar que la primera entrada és més gran.",
	"@@Greater-Than_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Greater-Than-Equal_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Greater-Than-Equal_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Greater-Than-Equal_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Greater-Than-Equal_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Greater-Than-Equal_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Greater-Than-Equal_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Greater-Than-Equal_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Greater-Than-Equal_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Greater-Than-Equal_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Greater-Than-Equal_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Greater-Than-Equal_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Greater-Than-Equal_Raster_tag0@@": "Entrada que s'està provant per determinar si és més gran o igual que la segona entrada.",
	"@@Greater-Than-Equal_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Greater-Than-Equal_Raster2_tag0@@": "Entrada que s'utilitzarà per provar que la primera entrada és més gran o igual.",
	"@@Greater-Than-Equal_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Heat-Index_Heat-Index-Units_tag0@@": "Unitat de mesura associada al ràster de sortida. Les unitats de sortida disponibles són Celsius, Fahrenheit i Kelvin.",
	"@@Heat-Index_Relative-Humidity-Raster_tag0@@": "Ràster d'una banda on els valors de píxel representen una humitat relativa com un valor de percentatge entre 0 i 100.",
	"@@Heat-Index_Temperature-Raster_tag0@@": "Ràster d'una banda on els valors de píxel representen la temperatura ambient de l'aire.",
	"@@Heat-Index_Temperature-Units_tag0@@": "Unitat de mesura associada al ràster de temperatura d'entrada. Les unitats d'entrada disponibles són Celsius, Fahrenheit i Kelvin.",
	"@@Hillshade_Altitude_tag0@@": "L'altitud és l'angle d'elevació del sol sobre l'horitzó i va de 0 a 90 graus. Un valor de 0 graus indica que el sol és a l'horitzó, és a dir, al mateix pla horitzontal que el marc de referència. Un valor de 90 graus indica que el sol es troba directament a sobre.",
	"@@Hillshade_Altitude_tag1@@": "Aquest paràmetre només és vàlid quan <strong>Tipus d'ombra</strong> és <strong>Tradicional</strong>. El valor per defecte és de 45 graus sobre l'horitzó.",
	"@@Hillshade_Azimuth_tag0@@": "L'Azimut és la posició relativa del sol a l'horitzó (en graus). Aquesta posició s'indica amb l'angle del sol mesurat en sentit horari des del nord. Els valors de l'azimut indiquen el següent: 0 graus és el nord, 90 graus és l'est, 180 graus és el sud i 270 graus és l'oest.",
	"@@Hillshade_Azimuth_tag1@@": "Aquest paràmetre només és vàlid quan <strong>Tipus d'ombra</strong> és <strong>Tradicional</strong>. El valor per defecte és de 315 graus, que correspon al nord-oest.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag0@@": "L'ús d'aquesta opció evita qualsevol artefacte de remostreig que es pugui produir a les vores d'un ràster. Els píxels de sortida al llarg de la vora d'un ràster o al costat dels píxels NoData s'emplenaran amb NoData; per tant, es recomana que aquest paràmetre només s'utilitzi amb els datasets de mosaic d'elevació que se superposen. Quan hi hagi píxels superposats disponibles, les àrees de NoData mostraran els valors dels píxels superposats en lloc de píxels en blanc.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag1@@": "Desactivada: el remostreig bilineal s'aplicarà de manera uniforme per remostrejar l'ombreig. Utilitzeu aquesta opció si el dataset de mosaic que conté les dades del ràster d'elevació s'ha unit a topar. Aquesta és l'opció per defecte.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag2@@": "Activada: el remostreig bilineal s'utilitzarà a l'ombreig, excepte a les vores dels ràsters o al costat dels píxels de NoData. Aquests píxels s'emplenaran amb NoData i mostraran els valors de píxels superposats, de manera que es redueixi qualsevol efecte de vora esmolada que altrament es podria produir. Utilitzeu aquesta opció si el dataset de mosaic que conté les dades del ràster d'elevació està format per tessel·les o elements superposats.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag3@@": "Pot ser que els resultats de la funció depenguin de les dades. Si observeu artefactes de límits de tessel·les a la sortida, seleccioneu la condició alternativa de la casella de selecció.",
	"@@Hillshade_Hillshade-Type_tag0@@": "Controla la font d'il·luminació de l'ombrejat:",
	"@@Hillshade_Hillshade-Type_tag1@@": "Tradicional: calcula l'ombrejat des d'una direcció d'il·luminació única. Aquesta és l'opció per defecte. Podeu definir <strong>Azimuth</strong> i <strong>Altitud</strong> per controla la ubicació de la font de llum.",
	"@@Hillshade_Hillshade-Type_tag6@@": "Multidireccional: combina la llum de diverses fonts per representar una visualització millorada del terreny.",
	"@@Hillshade_Pixel-Size-Factor_tag0@@": "El factor de mida de píxel té en compte els canvis d'escala a mesura que el visor amplia i redueix la visualització del mapa. Controla la velocitat a què canvia el <strong>factor z</strong>.",
	"@@Hillshade_Pixel-Size-Factor_tag3@@": "Aquest paràmetre només és vàlid quan el tipus <strong>Escalat</strong> és <strong>Ajustat</strong>. El valor per defecte és 0,024.",
	"@@Hillshade_Pixel-Size-Power_tag0@@": "La potència de mida de píxel té en compte els canvis d'altitud (o escala) a mesura que el visor amplia i redueix la visualització del mapa. És l'exponent aplicat al terme de mida de píxel a l'equació que controla la velocitat a què canvia el <strong>factor z</strong> per evitar una pèrdua de relleu significativa.",
	"@@Hillshade_Pixel-Size-Power_tag3@@": "Aquest paràmetre només és vàlid quan el tipus <strong>Escalat</strong> és <strong>Ajustat</strong>. El valor per defecte és 0,664.",
	"@@Hillshade_Raster_tag0@@": "Dataset d'elevació d'entrada.",
	"@@Hillshade_Scaling_tag0@@": "El resultat ombrejat s'escala de manera dinàmica mitjançant l'ajust del factor z amb una de les dues opcions següents:",
	"@@Hillshade_Scaling_tag1@@": "Ajustat: s'aplica a un ajust no lineal en què s'utilitzen els valors per defecte <strong>Potència de mida de píxel</strong> i <strong>Factor de mida de píxel</strong>, que tenen en compte una àmplia varietat de canvis d'altitud (escala) a mida que la imatge s'acosta i s'allunya. El paràmetre <strong>Ajustat</strong> es recomana quan s'utilitza un dataset de tot el món.",
	"@@Hillshade_Scaling_tag8@@": "Cap: no s'aplica cap escala. És ideal per a un dataset ràster únic que cobreix una àrea local. No es recomana per a datasets de tot el món amb grans variacions d'elevació o mapes multiescala, ja que produiria un relleu del terreny amb poca variació a escales petites.",
	"@@Hillshade_Z-Factor_tag0@@": "El factor z és un factor d'escala que s'utilitza per convertir els valors d'elevació amb dues finalitats:",
	"@@Hillshade_Z-Factor_tag1@@": "Convertir les unitats d'elevació (com ara metres o peus) a les unitats de la coordenada horitzontal del dataset, que poden ser peus, metres o graus.",
	"@@Hillshade_Z-Factor_tag2@@": "Afegir exageració vertical per aconseguir un efecte visual.",
	"@@Int_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Int_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Int_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Int_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Int_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Int_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Int_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Int_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Int_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Int_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Int_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Int_Raster_tag0@@": "Ràster d'entrada que es convertirà en un enter.",
	"@@Interpolate-Irregular-Data_Cellsize_tag0@@": "La mida de cel·la del ràster de sortida es detectarà automàticament, però ho podeu canviar. Tot i que la mida de la cel·la es pot canviar, l'extensió del dataset ràster es mantindrà.",
	"@@Interpolate-Irregular-Data_Input-Samples_tag0@@": "Dades de punts d'entrada.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag0@@": "Hi ha quatre mètodes de remostreig per a aquesta funció:",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag1@@": "<strong>Distància inversa ponderada</strong>: determina els valors de cel·la mitjançant una combinació ponderada de manera lineal d'un conjunt de punts o cel·les de mostra. La funció de ponderació és la inversa de la distància des de les cel·les o els punts coneguts.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag3@@": "<strong>Simplificació lineal</strong>: utilitza una xarxa irregular triangular des dels punts centrals de cada cel·la del ràster irregular per interpolar una superfície que, aleshores, es converteix en un ràster regular.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag5@@": "<strong>Veí natural</strong>: cerca el subconjunt més proper de les mostres d'entrada a un punt de consulta i hi aplica ponderacions basades en àrees proporcionades per interpolar un valor.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag7@@": "<strong>Veí més proper</strong>: calcula el valor del píxel mitjançant el píxel més proper. Si no existeix cap píxel d'origen, no es podrà crear cap píxel nou a la sortida. Aquesta és l'opció per defecte.",
	"@@Interpolate-Irregular-Data_Search-Radius_tag0@@": "Identifica el nombre de píxels que s'inclouran per al mètode de remostreig seleccionat. El valor per defecte és de ${3} píxels.",
	"@@Interpolate-Irregular-Data_Value-Field_tag0@@": "Si seleccioneu una classe d'entitat de punt com a entrada, haureu d'identificar el camp a la taula d'atributs amb el valor dels punts",
	"@@Is-Null_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Is-Null_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Is-Null_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Is-Null_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Is-Null_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Is-Null_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Is-Null_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Is-Null_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Is-Null_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Is-Null_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Is-Null_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Is-Null_Raster_tag0@@": "Ràster d'entrada que s'està provant per identificar les cel·les que son ${NoData} (nul·les).",
	"@@Is-Null_Raster_tag1@@": "L'entrada pot ser de tipus enter o punt flotant.",
	"@@Key-Metadata_Band-Names_tag0@@": "S'utilitza per substituir els noms de banda d'un ràster. És una cadena separada per comes que representa noms de banda actualitzats.",
	"@@Key-Metadata_Band-Names_tag1@@": "Aquest paràmetre és opcional.",
	"@@Key-Metadata_Metadata-JSON_tag0@@": "Metadades clau que s'inseriran al ràster de sortida i que es descriuen com una cadena JSON que representa una col·lecció de parells clau-valor. A continuació es mostra un exemple de cadena JSON que es pot utilitzar com una entrada a aquesta funció. Totes les entrades d'aquest paràmetre han de seguir el mateix format.",
	"@@Key-Metadata_Metadata-JSON_tag1@@": "Cadena JSON que representa metadades clau",
	"@@Key-Metadata_Metadata-JSON_tag2@@": "{ \"CloudCover\": 4, \"BandProperties\":[ { \"BandName\": \"Blue\", \"WavelengthMin\": 445, \"WavelengthMax\": 516 }, { \"BandName\": \"Green\", \"WavelengthMin\": 506, \"WavelengthMax\": 595 }, ]}",
	"@@Key-Metadata_Property-Name_tag0@@": "Nom de la propietat clau de nivell del dataset que se substituirà.",
	"@@Key-Metadata_Raster_tag0@@": "Dataset ràster o de mosaic que conté les metadades clau que voleu inserir o sobrescriure.",
	"@@Key-Metadata_Value_tag0@@": "Valor de substitució de la propietat clau de nivell del dataset que voleu definir.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag0@@": "Aquest paràmetre simula l'increment de l'esforç per superar els costos a mesura que el cost acumulatiu augmenta. S'utilitza per representar la fatiga del viatger. El cost acumulatiu creixent per arribar a una cel·la es multiplica per la taxa de resistència i s'afegeix al cost per passar a la cel·la següent.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag1@@": "És una versió modificada d'una fórmula de tipus d'interès compost que s'utilitza per calcular el cost aparent de passar per una cel·la. A mesura que el valor de la taxa de resistència augmenta, també ho fa el cost de les cel·les que es visiten posteriorment. Com més alta és la taxa de resistència, més alt és el cost per arribar a la cel·la següent, que es calcula per a cada moviment posterior. Atès que la taxa de resistència és similar a una taxa composta i que els valors del cost acumulatiu acostumen a ser molt alts, es recomanen taxes de resistència baixes, com ara de 0,005 o menys, segons els valors del cost acumulatiu.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag2@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Least-Cost-Path_Capacity_tag0@@": "Defineix la capacitat de cost del viatger per a un origen. Els càlculs de cost continuen per a cada origen fins a assolir la capacitat especificada.",
	"@@Least-Cost-Path_Capacity_tag1@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Least-Cost-Path_Cost-Raster_tag0@@": "Ràster d'entrada necessari que defineix el cost o la impedància del moviment planimètric a través de cada cel·la. El valor de cada ubicació de cel·la representa la distància de cost per unitat per moure's a través de la cel·la. Cada valor d'ubicació de cel·la es multiplica per la resolució de la cel·la i també es compensa el moviment diagonal per obtenir el cost total de passar a través de la cel·la.",
	"@@Least-Cost-Path_Cost-Raster_tag1@@": "Els valors del <strong>ràster de costos</strong> poden ser enters o punts flotants, però no poden ser negatius ni zero.",
	"@@Least-Cost-Path_Destination-Field_tag0@@": "Camp utilitzat per obtenir els valors de les ubicacions de destinació.",
	"@@Least-Cost-Path_Destination-Raster_tag0@@": "Ràster d'entrada necessari que identifica els píxels des dels quals es determina la ruta de menor cost a l'origen menys costós. Aquesta entrada està formada per píxels que tenen valors vàlids, i els píxels restants han de tenir assignat el valor ${NoData}. Els valors de 0 són vàlids.",
	"@@Least-Cost-Path_Maximum-Distance_tag0@@": "Llindar que els valors del cost acumulatiu no poden superar. Si una distància de cost acumulatiu supera aquest valor, el valor de sortida de la ubicació de la cel·la serà ${NoData}. La distància màxima defineix l'extensió de la qual es calculen les distàncies de cost acumulatiu. La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag0@@": "Aquest paràmetre permet controlar el mode de viatge o la magnitud en un origen. Com major sigui el multiplicador, més alt serà el cost del moviment a través de cada cel·la.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag1@@": "Els valors han de ser més grans que zero. El valor per defecte és 1.",
	"@@Least-Cost-Path_Path-Type_tag0@@": "Paraula clau que defineix de quina manera s'interpretaran els valors i les zones de les dades de destinació d'entrada als càlculs de ruta de cost:",
	"@@Least-Cost-Path_Path-Type_tag1@@": "<strong>L'únic millor</strong>: per a tots els píxels de les dades de destinació d'entrada, la ruta de menor cost es deriva del píxel amb el mínim de rutes de menor cost a les cel·les d'origen.",
	"@@Least-Cost-Path_Path-Type_tag3@@": "<strong>Cada cel·la</strong>: per a cada píxel amb valors vàlids a les dades de destinació d'entrada, es determinarà una ruta de menor cost i es desarà al ràster de sortida. Cada cel·la de les dades de destinació d'entrada es tractarà de manera individual i es determinarà una ruta de menor cost per a cada cel·la d'origen.",
	"@@Least-Cost-Path_Path-Type_tag5@@": "<strong>Cada zona</strong>: per a cada zona de les dades de destinació d'entrada, es determinarà una ruta de menor cost i es desarà al ràster de sortida. La ruta de menor cost per a cada zona comença al píxel amb la ponderació de distància de menor cost a la zona.",
	"@@Least-Cost-Path_Source-Raster_tag0@@": "Aquest és un ràster d'entrada necessari que identifica les cel·les o les ubicacions des de les quals s'ha calculat la distància de menor cost acumulat de la ubicació de cada cel·la de sortida.",
	"@@Least-Cost-Path_Start-Cost_tag0@@": "Cost inicial on començaran els càlculs de costos. Aquest paràmetre permet l'especificació del cost fix associat a un origen. En lloc de començar amb un cost de 0, l'algoritme de cost ho farà amb el valor especificat.",
	"@@Least-Cost-Path_Start-Cost_tag1@@": "El valor ha de ser zero o superior. El valor per defecte és 0.",
	"@@Least-Cost-Path_Travel-Direction_tag0@@": "Defineix la direcció del viatger quan s'apliquen la taxa de resistència i el cost inicial de l'origen.",
	"@@Least-Cost-Path_Travel-Direction_tag1@@": "<strong>Des de l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per l'origen d'entrada i passant a les cel·les que no són la d'origen. Aquesta és l'opció per defecte.",
	"@@Least-Cost-Path_Travel-Direction_tag3@@": "<strong>Fins a l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per cada cel·la que no sigui la d'origen i tornant a l'origen d'entrada.",
	"@@Least-Cost-Path_Travel-Direction_tag5@@": "Especifiqueu la paraula clau <strong>Des de l'origen</strong> o <strong>Fins a l'origen</strong>, que s'aplicarà a tots els orígens o especifiqueu un camp al <strong>ràster d'origen</strong> que contingui les paraules clau per identificar la direcció de viatge de cada origen. Aquest camp ha de contenir la cadena ${FROM_SOURCE} o ${TO_SOURCE}.",
	"@@Less-Than_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Less-Than_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Less-Than_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Less-Than_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Less-Than_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Less-Than_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Less-Than_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Less-Than_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Less-Than_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Less-Than_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Less-Than_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Less-Than_Raster_tag0@@": "Entrada que s'està provant per determinar si és menor que la segona entrada.",
	"@@Less-Than_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Less-Than_Raster2_tag0@@": "Entrada que s'utilitzarà per provar que la primera entrada és menor.",
	"@@Less-Than_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Less-Than-Equal_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Less-Than-Equal_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Less-Than-Equal_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Less-Than-Equal_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Less-Than-Equal_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Less-Than-Equal_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Less-Than-Equal_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Less-Than-Equal_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Less-Than-Equal_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Less-Than-Equal_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Less-Than-Equal_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Less-Than-Equal_Raster_tag0@@": "Entrada que s'està provant per determinar si és menor o igual que la segona entrada.",
	"@@Less-Than-Equal_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Less-Than-Equal_Raster2_tag0@@": "Entrada que s'utilitzarà per provar que la primera entrada és menor o igual.",
	"@@Less-Than-Equal_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Ln_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Ln_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Ln_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Ln_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Ln_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Ln_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Ln_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Ln_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Ln_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Ln_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Ln_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Ln_Raster_tag0@@": "Valors d'entrada dels quals es cercarà el logaritme natural (Ln).",
	"@@Log10_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Log10_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Log10_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Log10_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Log10_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Log10_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Log10_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Log10_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Log10_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Log10_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Log10_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Log10_Raster_tag0@@": "Valors d'entrada per als quals es cercarà el logaritme de base 10.",
	"@@Log2_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Log2_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Log2_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Log2_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Log2_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Log2_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Log2_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Log2_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Log2_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Log2_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Log2_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Log2_Raster_tag0@@": "Valors d'entrada per als quals es cercarà el logaritme de base 2.",
	"@@Lookup_Field_tag0@@": "Camp que conté els valors desitjats del nou ràster.",
	"@@Lookup_Field_tag1@@": "Ha de ser de tipus numèric.",
	"@@Lookup_Raster_tag0@@": "Ràster d'entrada que conté un camp des del qual es crearà un nou ràster.",
	"@@Lookup_Raster_tag1@@": "Pot ser de tipus enter o punt flotant.",
	"@@Mask_Included-Ranges_tag0@@": "Els intervals inclosos es poden especificar per a cada banda. Per fer-ho, especifiqueu un valor mínim i un valor màxim; tots els valors fora de l'interval es retornaran com ${NoData}. Un píxel s'inclou si el seu valor es troba dins de qualsevol dels intervals especificats. Per tant, si la banda 1 té un interval de 5-10, la banda 2 té un interval de 15-20 i el valor del píxel de la banda 1 és 8, aquest píxel no s'emmascararà.",
	"@@Mask_NoData-Interpretation_tag0@@": "Fa referència a l'impacte que tindran els <strong>valors ${NoData}</strong> en la imatge de sortida.",
	"@@Mask_NoData-Interpretation_tag3@@": "Podeu triar entre les dues opcions següents:",
	"@@Mask_NoData-Interpretation_tag4@@": "<strong>Coincideix amb tots</strong>: els valors ${NoData} que especifiqueu per a cada banda han de tenir lloc al mateix píxel de la imatge de sortida que ha de contenir el píxel ${NoData}.",
	"@@Mask_NoData-Interpretation_tag6@@": "<strong>Coincideix amb qualsevol</strong>: si el valor ${NoData} que especifiqueu té lloc per a un píxel d'una banda especificada, el píxel de la imatge de sortida serà ${NoData}. Aquesta és l'opció per defecte.",
	"@@Mask_NoData-Values_tag0@@": "Els valors NoData es poden especificar per a cada banda. Per especificar més d'un valor podeu introduir una llista delimitada per espais.",
	"@@Mask_Raster_tag0@@": "Ràster d'entrada.",
	"@@Minus_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Minus_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Minus_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Minus_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Minus_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Minus_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Minus_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Minus_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Minus_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Minus_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Minus_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Minus_Raster_tag0@@": "Entrada de la qual es restaran els valors de la segona entrada.",
	"@@Minus_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Minus_Raster2_tag0@@": "Valors d'entrada que se sostrauran dels valors de la primera entrada.",
	"@@Minus_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@ML-Classify_Raster_tag0@@": "Ràster d'entrada que es classificarà mitjançant l'algoritme de classificació de màxima versemblança.",
	"@@ML-Classify_Signature-File-or-URL_tag0@@": "Fitxer de signatura ${.gsg}.",
	"@@Mod_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Mod_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Mod_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Mod_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Mod_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Mod_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Mod_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Mod_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Mod_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Mod_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Mod_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Mod_Raster_tag0@@": "Entrada del numerador.",
	"@@Mod_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Mod_Raster2_tag0@@": "Entrada del denominador.",
	"@@Mod_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Mosaic-Rasters_Operation_tag0@@": "Resoleu qualsevol conflicte si teniu parts de dues o més imatges que se superposen. Algunes de les opcions són:",
	"@@Mosaic-Rasters_Operation_tag1@@": "<strong>Combinació</strong>: per calcular i mostrar una mitjana dels píxels superposats, atorgueu més pes als píxels més propers a les imatges veïnes perquè la sortida sigui una imatge més suau. Aquesta és l'opció per defecte.",
	"@@Mosaic-Rasters_Operation_tag3@@": "<strong>Primera</strong>: mostreu els píxels de la primera imatge a la llista d'imatges que se superposen a una àrea determinada.",
	"@@Mosaic-Rasters_Operation_tag5@@": "<strong>Última</strong>: mostreu els píxels de l'última imatge a la llista d'imatges que se superposen a una àrea determinada.",
	"@@Mosaic-Rasters_Operation_tag7@@": "<strong>Màxim</strong>: mostreu el píxel amb el valor més alt de totes les capes superposades. Amb aquesta opció, no teniu cap garantia de visualització dels píxels d'una sola imatge a l'àrea superposada, sinó d'una combinació de totes les capes possibles.",
	"@@Mosaic-Rasters_Operation_tag9@@": "<strong> Mitjana</strong>: calculeu i mostreu una mitjana dels píxels superposats.",
	"@@Mosaic-Rasters_Operation_tag11@@": "<strong>Mínim</strong>: mostreu el píxel amb el valor més baix de totes les capes superposades. Amb aquesta opció, no teniu cap garantia de visualització dels píxels d'una sola imatge a l'àrea superposada, sinó d'una combinació de totes les capes possibles.",
	"@@Mosaic-Rasters_Rasters_tag0@@": "Seleccioneu els ràsters que voleu tessel·lar junts per formar una imatge.",
	"@@NDVI_Infrared-Band-ID_tag0@@": "Especifica l'ID de banda que representa la part infraroja propera de l'espectre electromagnètic.",
	"@@NDVI_Raster_tag0@@": "Ràster multiespectral d'entrada.",
	"@@NDVI_Scientific-Output_tag0@@": "Els valors de sortida es trobaran en l'interval de -1,0 a 1,0, que s'utilitza en moltes aplicacions científiques.",
	"@@NDVI_Visible-Band-ID_tag0@@": "Especifica l'ID de banda que representa la part vermella de l'espectre electromagnètic.",
	"@@NDVI-Colorized_Color-Ramp_tag0@@": "Trieu un esquema de colors predefinit de la llista desplegable.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag0@@": "Trieu el tipus d'esquema de color per acolorir la sortida de l'NDVI:",
	"@@NDVI-Colorized_Color-Scheme-Type_tag1@@": "Mapa de color: trieu un mapa de color predefinit de la llista desplegable. També podeu cercar un fitxer de mapa de color persistent existent.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag2@@": "Rampa de color: trieu un esquema de colors predefinit de la llista desplegable.",
	"@@NDVI-Colorized_Colormap_tag0@@": "Trieu un mapa de color predefinit de la llista desplegable. També podeu cercar un fitxer de mapa de color existent.",
	"@@NDVI-Colorized_Infrared-Band-ID_tag0@@": "Especifica l'ID de banda que representa la part infraroja propera de l'espectre electromagnètic.",
	"@@NDVI-Colorized_Raster_tag0@@": "Ràster multiespectral d'entrada.",
	"@@NDVI-Colorized_Scientific-Output_tag0@@": "Els valors de sortida es trobaran en l'interval de -1,0 a 1,0, que s'utilitza en moltes aplicacions científiques.",
	"@@NDVI-Colorized_Visible-Band-ID_tag0@@": "Especifica l'ID de banda que representa la part vermella de l'espectre electromagnètic.",
	"@@Negate_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Negate_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Negate_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Negate_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Negate_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Negate_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Negate_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Negate_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Negate_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Negate_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Negate_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Negate_Raster_tag0@@": "Ràster d'entrada que s'invalidarà (multiplicat per -1).",
	"@@Nibble_Mask-Raster_tag0@@": "Ràster d'entrada necessari utilitzat com a màscara.",
	"@@Nibble_Mask-Raster_tag1@@": "Les cel·les amb el valor NoData es reassignaran al <strong>ràster</strong> d'entrada.",
	"@@Nibble_Mask-Raster_tag4@@": "El ràster de màscara pot ser de tipus enter o punt flotant.",
	"@@Nibble_Nibble-NoData-cells_tag0@@": "Defineix si les cel·les NoData del ràster d'entrada continuaran tenint el valor NoData al ràster de sortida.",
	"@@Nibble_Nibble-NoData-cells_tag1@@": "<strong>No</strong>: especifica que les cel·les NoData del ràster d'entrada continuen tenint el valor NoData al ràster de sortida. Aquesta és l'opció per defecte.",
	"@@Nibble_Nibble-NoData-cells_tag3@@": "<strong>Sí</strong>: especifica que les cel·les NoData del ràster d'entrada i dins de la màscara es poden reassignar a valors de cel·la de sortida vàlids.",
	"@@Nibble_Raster_tag0@@": "Ràster d'entrada necessari que es reassignarà.",
	"@@Nibble_Raster_tag1@@": "El ràster d'entrada pot ser de tipus enter o punt flotant.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag0@@": "Defineix si els valors ${NoData} del ràster d'entrada es poden reassignar a l'àrea definida pel ràster de màscara.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag1@@": "<strong>Sí</strong>: especifica que el valor del veí més proper s'utilitzarà tant si és ${NoData} com un altre valor de dades del ràster d'entrada. Els valors ${NoData} del ràster d'entrada es poden reassignar a àrees definides a la màscara si són el veí més proper. Aquesta és l'opció per defecte.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag3@@": "<strong>No</strong>: especifica que només els valors de dades es poden reassignar a àrees definides al ràster de màscara. Els valors ${NoData} del ràster d'entrada no es poden reassignar a àrees definides al ràster de màscara, encara que siguin el veí més proper.",
	"@@Nibble_Zone-Raster_tag0@@": "Ràster de zona d'entrada.",
	"@@Nibble_Zone-Raster_tag1@@": "Una zona està formada per totes les cel·les d'un ràster que tenen el mateix valor, siguin o no contigües. La capa de la zona d'entrada defineix la forma, els valors i les ubicacions de les zones. El ràster de zona pot ser de tipus enter o punt flotant.",
	"@@Not-Equal_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Not-Equal_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Not-Equal_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Not-Equal_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Not-Equal_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Not-Equal_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Not-Equal_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Not-Equal_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Not-Equal_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Not-Equal_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Not-Equal_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Not-Equal_Raster_tag0@@": "Entrada que s'utilitzarà per comparar la desigualtat de la segona entrada.",
	"@@Not-Equal_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Not-Equal_Raster2_tag0@@": "Entrada que s'utilitzarà per comparar la desigualtat de la primera entrada.",
	"@@Not-Equal_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Pansharpening_Multispectral_tag0@@": "Ràster multiespectral que voleu enfocar amb la banda pancromàtica.",
	"@@Pansharpening_Panchromatic_tag0@@": "Ràster d'alta resolució d'una banda que s'utilitzarà per a l'enfocament pancromàtic del ràster multiespectral de resolució inferior.",
	"@@Pansharpening_Pansharpening-Type_tag0@@": "Trieu l'algoritme d'enfocament pancromàtic que voleu utilitzar.",
	"@@Pansharpening_Pansharpening-Type_tag1@@": "Brovey: utilitza l'algoritme de Brovey basat en la modelització espectral per a la fusió de dades.",
	"@@Pansharpening_Pansharpening-Type_tag2@@": "Esri: utilitza l'algoritme d'Esri basat en la modelització espectral per a la fusió de dades.",
	"@@Pansharpening_Pansharpening-Type_tag3@@": "Gram-Schmidt: utilitza l'algoritme d'enfocament espectral de Gram-Schmidt per enfocar les dades multiespectrals.",
	"@@Pansharpening_Pansharpening-Type_tag4@@": "IHS: utilitza l'espai de color d'intensitat, to i saturació per a la fusió de dades.",
	"@@Pansharpening_Pansharpening-Type_tag5@@": "Mitjana: utilitza la mitjana dels valors de vermell, verd i blau i el valor de píxels pancromàtics.",
	"@@Pansharpening_Weights_tag0@@": "Especifiqueu els pesos de les bandes vermella, verda, blava i infraroja. Tots els valors han de trobar-se en un interval de 0 a 1.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Aquest paràmetre simula l'increment de l'esforç per superar els costos a mesura que el cost acumulatiu augmenta. S'utilitza per representar la fatiga del viatger. El cost acumulatiu creixent per arribar a una cel·la es multiplica per la taxa de resistència i s'afegeix al cost per passar a la cel·la següent.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "És una versió modificada d'una fórmula de tipus d'interès compost que s'utilitza per calcular el cost aparent de passar per una cel·la. A mesura que el valor de la taxa de resistència augmenta, també ho fa el cost de les cel·les que es visiten posteriorment. Com més alta és la taxa de resistència, més alt és el cost per arribar a la cel·la següent, que es calcula per a cada moviment posterior. Atès que la taxa de resistència és similar a una taxa composta i que els valors del cost acumulatiu acostumen a ser molt alts, es recomanen taxes de resistència baixes, com ara de 0,005 o menys, segons els valors del cost acumulatiu.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Path-Distance_Capacity_tag0@@": "Defineix la capacitat de cost del viatger per a un origen. Els càlculs de cost continuen per a cada origen fins a assolir la capacitat especificada.",
	"@@Path-Distance_Capacity_tag1@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Path-Distance_Cost-Raster_tag0@@": "Ràster d'entrada necessari que defineix el cost o la impedància del moviment planimètric a través de cada cel·la. El valor de cada ubicació de cel·la representa la distància de cost per unitat per moure's a través de la cel·la. Cada valor d'ubicació de cel·la es multiplica per la resolució de la cel·la i també es compensa el moviment diagonal per obtenir el cost total de passar a través de la cel·la.",
	"@@Path-Distance_Cost-Raster_tag1@@": "Els valors del <strong>ràster de costos</strong> poden ser enters o punts flotants, però no poden ser negatius ni zero.",
	"@@Path-Distance_horizontalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost horitzontal i l'angle de moviment relatiu horitzontal (HRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: HF i HRMA. HF significa \"factor horitzontal\", que defineix la dificultat horitzontal que s'experimenta en passar d'una cel·la a la següent. HRMA significa \"angle de moviment relatiu horitzontal\", i identifica l'angle entre la direcció horitzontal d'una cel·la i la direcció del moviment.</p><p>Els tipus <strong>Factor horitzontal</strong> són:</p><ul><li><strong>Binari</strong>: indica que, si HRMA és inferior a l'angle de tall, l'HF es defineix en el valor associat amb el factor zero; altrament, és infinit.</li><li><strong>Endavant</strong>: estableix que només es permet el moviment cap endavant. L'HRMA ha de ser superior o igual a 0 i inferior a 90 graus (0 &lt;= HRMA &lt; 90). Si l'HRMA és superior a 0 i inferior a 45 graus, l'HF de la cel·la es defineix en el valor associat al factor zero. Si l'HRMA és superior o igual a 45 graus, s'utilitza el valor modificador del valor lateral. L'HF per a qualsevol valor d'HRMA igual o superior a 90 es defineix en infinit.</li><li><strong>Lineal</strong>: especifica que l'HF és una funció lineal de l'HRMA.</li><li><strong>Lineal invers</strong>: especifica que l'HF és una funció lineal inversa de l'HRMA.</li><li><strong>Taula</strong>: identifica el fitxer de taula que s'utilitzarà per definir el gràfic de factor horitzontal emprat per determinar els HF.</li></ul><p>Els modificadors per als factors horitzontals són:</p><ul><li><strong>Factor zero</strong>: factor horitzontal que cal utilitzar quan HRMA és zero. Aquest factor posiciona la intercepció \"y\" per a qualsevol de les funcions de factor horitzontal.</li><li><strong>Angle de tall</strong>: defineix l'angle d'HRMA més enllà del qual l'HF es definirà en infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor horitzontal <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció de la pujada sobre la baixada (per exemple, un pendent del 45% és 1/45, que s'introdueix com a 0,02222).</li><li><strong>Valor lateral</strong>: estableix l'HF quan l'HRMA és superior o igual a 45 graus i és inferior a 90 graus quan s'especifica la paraula clau de factor horitzontal <strong>Endavant</strong>.</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix l'HF.</li></ul>",
	"@@Path-Distance_Horizontal-Raster_tag0@@": "Ràster que defineix la direcció horitzontal a cada cel·la.",
	"@@Path-Distance_Horizontal-Raster_tag1@@": "Els valors del ràster han de ser enters de 0 a 360, amb 0 graus al nord o cap a la part superior de la pantalla, que augmentin en sentit horari. Les àrees planes han de tenir assignat un valor de -1. Els valors en cada ubicació s'utilitzaran juntament amb el <strong>factor horitzontal</strong> per determinar el cost horitzontal que es produeix en passar d'una cel·la a les veïnes.",
	"@@Path-Distance_Maximum-Distance_tag0@@": "Llindar que els valors del cost acumulatiu no poden superar. Si una distància de cost acumulatiu supera aquest valor, el valor de sortida de la ubicació de la cel·la serà NoData. La distància màxima defineix l'extensió de la qual es calculen les distàncies de cost acumulatiu. La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Multiplicador que s'aplicarà als valors dels costos.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Aquest paràmetre permet controlar el mode de viatge o la magnitud en un origen. Com major sigui el multiplicador, més alt serà el cost del moviment a través de cada cel·la.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Els valors han de ser més grans que zero. El valor per defecte és 1.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Path-Distance_Source-Raster_tag0@@": "Ràster d'entrada necessari de les ubicacions d'origen.",
	"@@Path-Distance_Source-Raster_tag1@@": "Aquest és un ràster que identifica les cel·les o les ubicacions des de les quals s'ha calculat la distància de menor cost acumulat de la ubicació de cada cel·la de sortida.",
	"@@Path-Distance_Source-Raster_tag2@@": "Pot ser de tipus enter o punt flotant.",
	"@@Path-Distance_Start-Cost_tag0@@": "Cost inicial on començaran els càlculs de costos. Aquest paràmetre permet l'especificació del cost fix associat a un origen. En lloc de començar amb un cost de 0, l'algoritme de cost ho farà amb el valor especificat.",
	"@@Path-Distance_Start-Cost_tag1@@": "El valor ha de ser zero o superior. El valor per defecte és 0.",
	"@@Path-Distance_Surface-Raster_tag0@@": "Ràster que defineix els valors d'elevació a la ubicació de cada cel·la.",
	"@@Path-Distance_Surface-Raster_tag1@@": "Els valors s'utilitzen per calcular la distància de superfície real coberta en passar entre cel·les.",
	"@@Path-Distance_Travel-Direction_tag0@@": "Defineix la direcció del viatger quan s'apliquen la taxa de resistència i el cost inicial de l'origen.",
	"@@Path-Distance_Travel-Direction_tag1@@": "<strong>Des de l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per l'origen d'entrada i passant a les cel·les que no són la d'origen. Aquesta és l'opció per defecte.",
	"@@Path-Distance_Travel-Direction_tag3@@": "<strong>Fins a l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per cada cel·la que no sigui la d'origen i tornant a l'origen d'entrada.",
	"@@Path-Distance_Travel-Direction_tag5@@": "Especifiqueu la paraula clau <strong>Des de l'origen</strong> o <strong>Fins a l'origen</strong>, que s'aplicarà a tots els orígens o especifiqueu un camp al <strong>ràster d'origen</strong> que contingui les paraules clau per identificar la direcció de viatge de cada origen. Aquest camp ha de contenir la cadena ${FROM_SOURCE} o ${TO_SOURCE}.",
	"@@Path-Distance_verticalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: VF i VRMA. VF significa \"factor vertical\", que defineix la dificultat vertical que s'experimenta en passar d'una cel·la a la següent. VRMA significa \"angle de moviment relatiu vertical\", i identifica l'angle d'inclinació entre la cel·la d'origen, o processament, i la cel·la de destinació.Els tipus </p><p><strong>Factor vertical</strong> són:</p><ul><li><strong>Binari</strong>: especifica que, si el VRMA és major que l'angle de tall baix i menor que l'angle de tall alt, el VF es defineix en el valor associat al factor zero; altrament, és infinit.</li><li><strong>Lineal</strong>: indica que el VF és una funció lineal del VRMA.</li><li><strong>Lineal simètric</strong>: especifica que el VF és una funció lineal del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Lineal invers</strong>: indica que el VF és una funció lineal inversa del VRMA.</li><li><strong>Lineal invers simètric</strong>: especifica que el VF és una funció lineal inversa del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Cos</strong>: identifica el VF com la funció basada en el cosinus del VRMA.</li><li><strong>Sec</strong>: identifica el VF com la funció basada en la secant del VRMA.</li><li><strong>Cos-Sec</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Sec-Cos</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Taula</strong>: identifica que s'utilitzarà un fitxer de taula per definir el gràfic de factor vertical utilitzat per determinar els VF.</li></ul><p>Alguns modificadors per a les paraules claus verticals són:</p><ul><li><strong>Factor zero</strong>: estableix el factor vertical utilitzat si el VRMA és zero. Aquest factor col·loca la intercepció y de la funció especificada. Per definició, el factor zero no és aplicable a cap de les funcions verticals trigonomètriques (COS, SEC, COS-SEC o SEC-COS). Aquestes funcions defineixen la intercepció y.</li><li><strong>Angle de tall baix</strong>: defineix l'angle VRMA per sota del qual es definirà un VF infinit.</li><li><strong>Angle de tall alt</strong>: defineix l'angle VRMA per sobre del qual es definirà un VF infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor vertical <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció d'elevació sobre l'extensió (per exemple, un pendent del 45 % és 1/45, que s'especifica com 0,02222).</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix el VF.</li></ul>",
	"@@Path-Distance_Vertical-Raster_tag0@@": "Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).",
	"@@Path-Distance_Vertical-Raster_tag1@@": "Els valors s'utilitzen per calcular el pendent utilitzat per identificar el factor vertical que es produeix en passar d'una cel·la a una altra.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Aquest paràmetre simula l'increment de l'esforç per superar els costos a mesura que el cost acumulatiu augmenta. S'utilitza per representar la fatiga del viatger. El cost acumulatiu creixent per arribar a una cel·la es multiplica per la taxa de resistència i s'afegeix al cost per passar a la cel·la següent.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "És una versió modificada d'una fórmula de tipus d'interès compost que s'utilitza per calcular el cost aparent de passar per una cel·la. A mesura que el valor de la taxa de resistència augmenta, també ho fa el cost de les cel·les que es visiten posteriorment. Com més alta és la taxa de resistència, més alt és el cost per arribar a la cel·la següent, que es calcula per a cada moviment posterior. Atès que la taxa de resistència és similar a una taxa composta i que els valors del cost acumulatiu acostumen a ser molt alts, es recomanen taxes de resistència baixes, com ara de 0,005 o menys, segons els valors del cost acumulatiu.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Path-Distance-Allocation_Capacity_tag0@@": "Defineix la capacitat de cost del viatger per a un origen. Els càlculs de cost continuen per a cada origen fins a assolir la capacitat especificada.",
	"@@Path-Distance-Allocation_Capacity_tag1@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Path-Distance-Allocation_Cost-Raster_tag0@@": "Ràster d'entrada necessari que defineix el cost o la impedància del moviment planimètric a través de cada cel·la. El valor de cada ubicació de cel·la representa la distància de cost per unitat per moure's a través de la cel·la. Cada valor d'ubicació de cel·la es multiplica per la resolució de la cel·la i també es compensa el moviment diagonal per obtenir el cost total de passar a través de la cel·la.",
	"@@Path-Distance-Allocation_Cost-Raster_tag1@@": "Els valors del <strong>ràster de costos</strong> poden ser enters o punts flotants, però no poden ser negatius ni zero.",
	"@@Path-Distance-Allocation_horizontalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost horitzontal i l'angle de moviment relatiu horitzontal (HRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: HF i HRMA. HF significa \"factor horitzontal\", que defineix la dificultat horitzontal que s'experimenta en passar d'una cel·la a la següent. HRMA significa \"angle de moviment relatiu horitzontal\", i identifica l'angle entre la direcció horitzontal d'una cel·la i la direcció del moviment.</p><p>Els tipus <strong>Factor horitzontal</strong> són:</p><ul><li><strong>Binari</strong>: indica que, si HRMA és inferior a l'angle de tall, l'HF es defineix en el valor associat amb el factor zero; altrament, és infinit.</li><li><strong>Endavant</strong>: estableix que només es permet el moviment cap endavant. L'HRMA ha de ser superior o igual a 0 i inferior a 90 graus (0 &lt;= HRMA &lt; 90). Si l'HRMA és superior a 0 i inferior a 45 graus, l'HF de la cel·la es defineix en el valor associat al factor zero. Si l'HRMA és superior o igual a 45 graus, s'utilitza el valor modificador del valor lateral. L'HF per a qualsevol valor d'HRMA igual o superior a 90 es defineix en infinit.</li><li><strong>Lineal</strong>: especifica que l'HF és una funció lineal de l'HRMA.</li><li><strong>Lineal invers</strong>: especifica que l'HF és una funció lineal inversa de l'HRMA.</li><li><strong>Taula</strong>: identifica el fitxer de taula que s'utilitzarà per definir el gràfic de factor horitzontal emprat per determinar els HF.</li></ul><p>Els modificadors per als factors horitzontals són:</p><ul><li><strong>Factor zero</strong>: factor horitzontal que cal utilitzar quan HRMA és zero. Aquest factor posiciona la intercepció \"y\" per a qualsevol de les funcions de factor horitzontal.</li><li><strong>Angle de tall</strong>: defineix l'angle d'HRMA més enllà del qual l'HF es definirà en infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor horitzontal <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció de la pujada sobre la baixada (per exemple, un pendent del 45% és 1/45, que s'introdueix com a 0,02222).</li><li><strong>Valor lateral</strong>: estableix l'HF quan l'HRMA és superior o igual a 45 graus i és inferior a 90 graus quan s'especifica la paraula clau de factor horitzontal <strong>Endavant</strong>.</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix l'HF.</li></ul>",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag0@@": "Ràster que defineix la direcció horitzontal a cada cel·la.",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag1@@": "Els valors del ràster han de ser enters de 0 a 360, amb 0 graus al nord o cap a la part superior de la pantalla, que augmentin en sentit horari. Les àrees planes han de tenir assignat un valor de -1. Els valors en cada ubicació s'utilitzaran juntament amb el <strong>factor horitzontal</strong> per determinar el cost horitzontal que es produeix en passar d'una cel·la a les veïnes.",
	"@@Path-Distance-Allocation_Maximum-Distance_tag0@@": "Llindar que els valors del cost acumulatiu no poden superar. Si una distància de cost acumulatiu supera aquest valor, el valor de sortida de la ubicació de la cel·la serà NoData. La distància màxima defineix l'extensió de la qual es calculen les distàncies de cost acumulatiu. La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Multiplicador que s'aplicarà als valors dels costos.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Aquest paràmetre permet controlar el mode de viatge o la magnitud en un origen. Com major sigui el multiplicador, més alt serà el cost del moviment a través de cada cel·la.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Els valors han de ser més grans que zero. El valor per defecte és 1.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Path-Distance-Allocation_Source-Field_tag0@@": "Camp utilitzat per assignar valors a les ubicacions d'origen. Ha de ser de tipus enter. Si s'ha definit el <strong>ràster de valor</strong>, els valors d'aquesta entrada tindran prioritat sobre qualsevol configuració del <strong>camp d'origen</strong>.",
	"@@Path-Distance-Allocation_Source-Raster_tag0@@": "Ràster d'entrada necessari de les ubicacions d'origen.",
	"@@Path-Distance-Allocation_Source-Raster_tag1@@": "Aquest és un ràster que identifica les cel·les o les ubicacions des de les quals s'ha calculat la distància de menor cost acumulat de la ubicació de cada cel·la de sortida.",
	"@@Path-Distance-Allocation_Source-Raster_tag2@@": "Pot ser de tipus enter o punt flotant.",
	"@@Path-Distance-Allocation_Start-Cost_tag0@@": "Cost inicial on començaran els càlculs de costos. Aquest paràmetre permet l'especificació del cost fix associat a un origen. En lloc de començar amb un cost de 0, l'algoritme de cost ho farà amb el valor especificat.",
	"@@Path-Distance-Allocation_Start-Cost_tag1@@": "El valor ha de ser zero o superior. El valor per defecte és 0.",
	"@@Path-Distance-Allocation_Surface-Raster_tag0@@": "Ràster que defineix els valors d'elevació a la ubicació de cada cel·la.",
	"@@Path-Distance-Allocation_Surface-Raster_tag1@@": "Els valors s'utilitzen per calcular la distància de superfície real coberta en passar entre cel·les.",
	"@@Path-Distance-Allocation_Travel-Direction_tag0@@": "Defineix la direcció del viatger quan s'apliquen la taxa de resistència i el cost inicial de l'origen.",
	"@@Path-Distance-Allocation_Travel-Direction_tag1@@": "<strong>Des de l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per l'origen d'entrada i passant a les cel·les que no són la d'origen. Aquesta és l'opció per defecte.",
	"@@Path-Distance-Allocation_Travel-Direction_tag3@@": "<strong>Fins a l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per cada cel·la que no sigui la d'origen i tornant a l'origen d'entrada.",
	"@@Path-Distance-Allocation_Travel-Direction_tag5@@": "Especifiqueu la paraula clau <strong>Des de l'origen</strong> o <strong>Fins a l'origen</strong>, que s'aplicarà a tots els orígens o especifiqueu un camp al <strong>ràster d'origen</strong> que contingui les paraules clau per identificar la direcció de viatge de cada origen. Aquest camp ha de contenir la cadena ${FROM_SOURCE} o ${TO_SOURCE}.",
	"@@Path-Distance-Allocation_Value-Raster_tag0@@": "Ràster enter d'entrada que identifica els valors de zona que s'utilitzaran per a cada ubicació d'origen d'entrada. A cada cel·la d'ubicació d'origen, el valor definit pel <strong>ràster de valor</strong> s'assignarà a totes les cel·les assignades a la ubicació d'origen per al càlcul. El <strong>ràster de valor</strong> tindrà prioritat sobre qualsevol configuració per al <strong>camp d'origen</strong>.",
	"@@Path-Distance-Allocation_verticalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: VF i VRMA. VF significa \"factor vertical\", que defineix la dificultat vertical que s'experimenta en passar d'una cel·la a la següent. VRMA significa \"angle de moviment relatiu vertical\", i identifica l'angle d'inclinació entre la cel·la d'origen, o processament, i la cel·la de destinació.Els tipus </p><p><strong>Factor vertical</strong> són:</p><ul><li><strong>Binari</strong>: especifica que, si el VRMA és major que l'angle de tall baix i menor que l'angle de tall alt, el VF es defineix en el valor associat al factor zero; altrament, és infinit.</li><li><strong>Lineal</strong>: indica que el VF és una funció lineal del VRMA.</li><li><strong>Lineal simètric</strong>: especifica que el VF és una funció lineal del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Lineal invers</strong>: indica que el VF és una funció lineal inversa del VRMA.</li><li><strong>Lineal invers simètric</strong>: especifica que el VF és una funció lineal inversa del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Cos</strong>: identifica el VF com la funció basada en el cosinus del VRMA.</li><li><strong>Sec</strong>: identifica el VF com la funció basada en la secant del VRMA.</li><li><strong>Cos-Sec</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Sec-Cos</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Taula</strong>: identifica que s'utilitzarà un fitxer de taula per definir el gràfic de factor vertical utilitzat per determinar els VF.</li></ul><p>Alguns modificadors per a les paraules claus verticals són:</p><ul><li><strong>Factor zero</strong>: estableix el factor vertical utilitzat si el VRMA és zero. Aquest factor col·loca la intercepció y de la funció especificada. Per definició, el factor zero no és aplicable a cap de les funcions verticals trigonomètriques (COS, SEC, COS-SEC o SEC-COS). Aquestes funcions defineixen la intercepció y.</li><li><strong>Angle de tall baix</strong>: defineix l'angle VRMA per sota del qual es definirà un VF infinit.</li><li><strong>Angle de tall alt</strong>: defineix l'angle VRMA per sobre del qual es definirà un VF infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor vertical <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció d'elevació sobre l'extensió (per exemple, un pendent del 45 % és 1/45, que s'especifica com 0,02222).</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix el VF.</li></ul>",
	"@@Path-Distance-Allocation_Vertical-Raster_tag0@@": "Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).",
	"@@Path-Distance-Allocation_Vertical-Raster_tag1@@": "Els valors s'utilitzen per calcular el pendent utilitzat per identificar el factor vertical que es produeix en passar d'una cel·la a una altra.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Aquest paràmetre simula l'increment de l'esforç per superar els costos a mesura que el cost acumulatiu augmenta. S'utilitza per representar la fatiga del viatger. El cost acumulatiu creixent per arribar a una cel·la es multiplica per la taxa de resistència i s'afegeix al cost per passar a la cel·la següent.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "És una versió modificada d'una fórmula de tipus d'interès compost que s'utilitza per calcular el cost aparent de passar per una cel·la. A mesura que el valor de la taxa de resistència augmenta, també ho fa el cost de les cel·les que es visiten posteriorment. Com més alta és la taxa de resistència, més alt és el cost per arribar a la cel·la següent, que es calcula per a cada moviment posterior. Atès que la taxa de resistència és similar a una taxa composta i que els valors del cost acumulatiu acostumen a ser molt alts, es recomanen taxes de resistència baixes, com ara de 0,005 o menys, segons els valors del cost acumulatiu.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Path-Distance-Back-Link_Capacity_tag0@@": "Defineix la capacitat de cost del viatger per a un origen. Els càlculs de cost continuen per a cada origen fins a assolir la capacitat especificada.",
	"@@Path-Distance-Back-Link_Capacity_tag1@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag0@@": "Ràster d'entrada necessari que defineix el cost o la impedància del moviment planimètric a través de cada cel·la. El valor de cada ubicació de cel·la representa la distància de cost per unitat per moure's a través de la cel·la. Cada valor d'ubicació de cel·la es multiplica per la resolució de la cel·la i també es compensa el moviment diagonal per obtenir el cost total de passar a través de la cel·la.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag1@@": "Els valors del <strong>ràster de costos</strong> poden ser enters o punts flotants, però no poden ser negatius ni zero.",
	"@@Path-Distance-Back-Link_horizontalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost horitzontal i l'angle de moviment relatiu horitzontal (HRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: HF i HRMA. HF significa \"factor horitzontal\", que defineix la dificultat horitzontal que s'experimenta en passar d'una cel·la a la següent. HRMA significa \"angle de moviment relatiu horitzontal\", i identifica l'angle entre la direcció horitzontal d'una cel·la i la direcció del moviment.</p><p>Els tipus <strong>Factor horitzontal</strong> són:</p><ul><li><strong>Binari</strong>: indica que, si HRMA és inferior a l'angle de tall, l'HF es defineix en el valor associat amb el factor zero; altrament, és infinit.</li><li><strong>Endavant</strong>: estableix que només es permet el moviment cap endavant. L'HRMA ha de ser superior o igual a 0 i inferior a 90 graus (0 &lt;= HRMA &lt; 90). Si l'HRMA és superior a 0 i inferior a 45 graus, l'HF de la cel·la es defineix en el valor associat al factor zero. Si l'HRMA és superior o igual a 45 graus, s'utilitza el valor modificador del valor lateral. L'HF per a qualsevol valor d'HRMA igual o superior a 90 es defineix en infinit.</li><li><strong>Lineal</strong>: especifica que l'HF és una funció lineal de l'HRMA.</li><li><strong>Lineal invers</strong>: especifica que l'HF és una funció lineal inversa de l'HRMA.</li><li><strong>Taula</strong>: identifica el fitxer de taula que s'utilitzarà per definir el gràfic de factor horitzontal emprat per determinar els HF.</li></ul><p>Els modificadors per als factors horitzontals són:</p><ul><li><strong>Factor zero</strong>: factor horitzontal que cal utilitzar quan HRMA és zero. Aquest factor posiciona la intercepció \"y\" per a qualsevol de les funcions de factor horitzontal.</li><li><strong>Angle de tall</strong>: defineix l'angle d'HRMA més enllà del qual l'HF es definirà en infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor horitzontal <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció de la pujada sobre la baixada (per exemple, un pendent del 45% és 1/45, que s'introdueix com a 0,02222).</li><li><strong>Valor lateral</strong>: estableix l'HF quan l'HRMA és superior o igual a 45 graus i és inferior a 90 graus quan s'especifica la paraula clau de factor horitzontal <strong>Endavant</strong>.</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix l'HF.</li></ul>",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag0@@": "Ràster que defineix la direcció horitzontal a cada cel·la.",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag1@@": "Els valors del ràster han de ser enters de 0 a 360, amb 0 graus al nord o cap a la part superior de la pantalla, que augmentin en sentit horari. Les àrees planes han de tenir assignat un valor de -1. Els valors en cada ubicació s'utilitzaran juntament amb el <strong>factor horitzontal</strong> per determinar el cost horitzontal que es produeix en passar d'una cel·la a les veïnes.",
	"@@Path-Distance-Back-Link_Maximum-Distance_tag0@@": "Llindar que els valors del cost acumulatiu no poden superar. Si una distància de cost acumulatiu supera aquest valor, el valor de sortida de la ubicació de la cel·la serà NoData. La distància màxima defineix l'extensió de la qual es calculen les distàncies de cost acumulatiu. La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Multiplicador que s'aplicarà als valors dels costos.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Aquest paràmetre permet controlar el mode de viatge o la magnitud en un origen. Com major sigui el multiplicador, més alt serà el cost del moviment a través de cada cel·la.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Els valors han de ser més grans que zero. El valor per defecte és 1.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Path-Distance-Back-Link_Source-Raster_tag0@@": "Ràster d'entrada necessari de les ubicacions d'origen.",
	"@@Path-Distance-Back-Link_Source-Raster_tag1@@": "Aquest és un ràster que identifica les cel·les o les ubicacions des de les quals s'ha calculat la distància de menor cost acumulat de la ubicació de cada cel·la de sortida.",
	"@@Path-Distance-Back-Link_Source-Raster_tag2@@": "Pot ser de tipus enter o punt flotant.",
	"@@Path-Distance-Back-Link_Start-Cost_tag0@@": "Cost inicial on començaran els càlculs de costos. Aquest paràmetre permet l'especificació del cost fix associat a un origen. En lloc de començar amb un cost de 0, l'algoritme de cost ho farà amb el valor especificat.",
	"@@Path-Distance-Back-Link_Start-Cost_tag1@@": "El valor ha de ser zero o superior. El valor per defecte és 0.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag0@@": "Ràster que defineix els valors d'elevació a la ubicació de cada cel·la.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag1@@": "Els valors s'utilitzen per calcular la distància de superfície real coberta en passar entre cel·les.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag0@@": "Defineix la direcció del viatger quan s'apliquen la taxa de resistència i el cost inicial de l'origen.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag1@@": "<strong>Des de l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per l'origen d'entrada i passant a les cel·les que no són la d'origen. Aquesta és l'opció per defecte.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag3@@": "<strong>Fins a l'origen</strong>: la taxa de resistència i el cost inicial de l'origen s'aplicaran començant per cada cel·la que no sigui la d'origen i tornant a l'origen d'entrada.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag5@@": "Especifiqueu la paraula clau <strong>Des de l'origen</strong> o <strong>Fins a l'origen</strong>, que s'aplicarà a tots els orígens o especifiqueu un camp al <strong>ràster d'origen</strong> que contingui les paraules clau per identificar la direcció de viatge de cada origen. Aquest camp ha de contenir la cadena ${FROM_SOURCE} o ${TO_SOURCE}.",
	"@@Path-Distance-Back-Link_verticalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: VF i VRMA. VF significa \"factor vertical\", que defineix la dificultat vertical que s'experimenta en passar d'una cel·la a la següent. VRMA significa \"angle de moviment relatiu vertical\", i identifica l'angle d'inclinació entre la cel·la d'origen, o processament, i la cel·la de destinació.Els tipus </p><p><strong>Factor vertical</strong> són:</p><ul><li><strong>Binari</strong>: especifica que, si el VRMA és major que l'angle de tall baix i menor que l'angle de tall alt, el VF es defineix en el valor associat al factor zero; altrament, és infinit.</li><li><strong>Lineal</strong>: indica que el VF és una funció lineal del VRMA.</li><li><strong>Lineal simètric</strong>: especifica que el VF és una funció lineal del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Lineal invers</strong>: indica que el VF és una funció lineal inversa del VRMA.</li><li><strong>Lineal invers simètric</strong>: especifica que el VF és una funció lineal inversa del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Cos</strong>: identifica el VF com la funció basada en el cosinus del VRMA.</li><li><strong>Sec</strong>: identifica el VF com la funció basada en la secant del VRMA.</li><li><strong>Cos-Sec</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Sec-Cos</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Taula</strong>: identifica que s'utilitzarà un fitxer de taula per definir el gràfic de factor vertical utilitzat per determinar els VF.</li></ul><p>Alguns modificadors per a les paraules claus verticals són:</p><ul><li><strong>Factor zero</strong>: estableix el factor vertical utilitzat si el VRMA és zero. Aquest factor col·loca la intercepció y de la funció especificada. Per definició, el factor zero no és aplicable a cap de les funcions verticals trigonomètriques (COS, SEC, COS-SEC o SEC-COS). Aquestes funcions defineixen la intercepció y.</li><li><strong>Angle de tall baix</strong>: defineix l'angle VRMA per sota del qual es definirà un VF infinit.</li><li><strong>Angle de tall alt</strong>: defineix l'angle VRMA per sobre del qual es definirà un VF infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor vertical <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció d'elevació sobre l'extensió (per exemple, un pendent del 45 % és 1/45, que s'especifica com 0,02222).</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix el VF.</li></ul>",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag0@@": "Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag1@@": "Els valors s'utilitzen per calcular el pendent utilitzat per identificar el factor vertical que es produeix en passar d'una cel·la a una altra.",
	"@@Plus_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Plus_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Plus_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Plus_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Plus_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Plus_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Plus_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Plus_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Plus_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Plus_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Plus_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Plus_Raster_tag0@@": "Entrada els valors de la qual s'afegiran.",
	"@@Plus_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Plus_Raster2_tag0@@": "Entrada els valors de la qual s'afegiran a la primera entrada.",
	"@@Plus_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Local_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que voleu fer servir al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Local_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Local_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Local_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Local_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Local_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Local_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Local_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Local_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Local_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Local_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Local_Raster_tag0@@": "Entrada els valors de la qual s'afegiran.",
	"@@Local_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, a condició que el ràster estigui especificat per a l'altre paràmetre.",
	"@@Local_Raster2_tag0@@": "Entrada els valors de la qual s'afegiran a la primera entrada.",
	"@@Local_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, a condició que el ràster estigui especificat per a l'altre paràmetre.",
	"@@Local_False-Raster_tag0@@": "Entrada els valors de la qual s'utilitzaran com a valors de píxel de sortida si la condició és falsa. Pot ser un enter, un ràster de punt flotant o un valor constant.",
	"@@Local_True-Raster_tag0@@": "Entrada els valors de la qual s'utilitzaran com a valors de píxel de sortida si la condició és verdadera. Pot ser un enter, un ràster de punt flotant o un valor constant.",
	"@@Power_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Power_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Power_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Power_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Power_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Power_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Power_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Power_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Power_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Power_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Power_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Power_Raster_tag0@@": "Valors d'entrada que s'elevaran a la potència que es defineix a <strong>Ràster2</strong>.",
	"@@Power_Raster_tag3@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Power_Raster2_tag0@@": "L'entrada que determina la potència a què s'elevaran els valors de <strong>Ràster</strong>.",
	"@@Power_Raster2_tag3@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Radar-Calibration_Calibration-Type_tag0@@": "Tipus de calibratge que es realitzarà.",
	"@@Radar-Calibration_Calibration-Type_tag1@@": "Beta zero: la funció retorna la reflectivitat radar per àrea d'unitat de l'interval d'inclinació. Aquesta és el tipus de calibratge per defecte.",
	"@@Radar-Calibration_Calibration-Type_tag2@@": "Sigma zero: la funció retorna la reflectivitat radar per àrea d'unitat de l'interval de terreny. Els resultats són valors de punt flotant de 32 bits, que es troben majoritàriament en un interval de 0,0 a 1,0. No es realitza el retall de dades si aquesta opció està seleccionada.",
	"@@Radar-Calibration_Calibration-Type_tag3@@": "Gamma: la funció retorna la reflectivitat radar per àrea d'unitat del pla perpendicular a la direcció de mesura.",
	"@@Radar-Calibration_Calibration-Type_tag4@@": "Cap",
	"@@Radar-Calibration_Raster_tag0@@": "Ràster d'entrada.",
	"@@RasterInfo_Raster-Info_tag0@@": "Seleccioneu un dataset ràster per utilitzar-lo com a plantilla",
	"@@RasterInfo_Raster_tag0@@": "Ràster d'entrada.",
	"@@Rasterize-Attributes_Attribute-Field-Names_tag0@@": "Una llista de camps a la <strong>taula d'atributs zonal</strong>, amb els camps separats per comes. Els valors de cada camp estan representats per una banda del ràster de sortida.",
	"@@Rasterize-Attributes_Background-Value_tag0@@": "Valor del píxel inicial de les bandes de sortida d'un ràster, abans que es torni a representar cartogràficament.",
	"@@Rasterize-Attributes_Background-Value_tag1@@": "Si un píxel no es troba dins d'una zona, romandrà com a valor de fons.",
	"@@Rasterize-Attributes_Value-Raster_tag0@@": "Ràster d'entrada necessari.",
	"@@Rasterize-Attributes_Value-Raster_tag1@@": "L'entrada ha de ser un ràster d'una banda. Si s'utilitza un ràster multibanda, només es farà servir la primera banda.",
	"@@Rasterize-Attributes_Where-Clause_tag0@@": "Una consulta addicional opcional aplicada a la <strong>taula d'atributs zonal</strong>.",
	"@@Rasterize-Attributes_Where-Clause_tag3@@": "Si la taula anterior s'utilitzava com un exemple, la consulta seria ${Variable1 = 'bare earth'}.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag0@@": "Atributs zonals especificats com una ruta a una classe d'entitat local, la ruta a una taula, la URL a una capa de servei d'entitats o una cadena JSON.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag1@@": "Al format JSON, es descriu com una col·lecció d'assignacions d'identificadors de zona a una matriu d'enters. ${{ zoneId:[f1,f2,...,fn], ... } }",
	"@@Rasterize-Attributes_Zone-Field_tag0@@": "El nom del camp conté valors d'ID de zona.",
	"@@Rasterize-Attributes_Zone-Raster_tag0@@": "Ràster d'una banda opcional on cada píxel conté l'ID de zona associat a la ubicació. L'ID de zona s'utilitza per cercar files a la taula d'atributs zonals per a la ingesta específica de la zona.",
	"@@Rasterize-Attributes_Zone-Raster_tag1@@": "Deixeu aquest paràmetre sense especificar si només voleu importar l'atribut.",
	"@@Rasterize-Features_Field_tag0@@": "Seleccioneu el camp que s'utilitzarà per identificar cada entitat.",
	"@@Rasterize-Features_Input-Features_tag0@@": "Seleccioneu la classe d'entitat que es convertirà al format de ràster.",
	"@@Rasterize-Features_Raster_tag0@@": "Seleccioneu un ràster per definir l'extensió i la mida de la cel·la per a la conversió de l'entitat.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag0@@": "Determineu com s'administraran les entitats superposades:",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag1@@": "<strong>Primer</strong>: s'assignarà un valor del primer dataset publicat a les àrees superposades.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag3@@": "<strong>Últim</strong>: s'assignarà un valor de l'últim dataset publicat a les àrees superposades.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag5@@": "<strong>Més petit</strong>: s'assignarà un valor de l'entitat més petita a les àrees superposades.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag7@@": "<strong>Més gran</strong>: s'assignarà un valor de l'entitat més gran a les àrees superposades.",
	"@@Recast_Overrides_tag0@@": "Taula de noms de variable i valors definits per l'usuari utilitzada per modificar un dataset de mosaic.",
	"@@Recast_Raster_tag0@@": "Producte de ràster al qual s'aplicarà la funció Reformula.",
	"@@Region-Group_Add-Link_tag0@@": "Especifica si s'ha d'afegir un camp d'enllaç a la taula de la sortida.",
	"@@Region-Group_Add-Link_tag1@@": "<strong>Afegeix un enllaç</strong>: s'afegirà un element ${LINK} a la taula del ràster de sortida.",
	"@@Region-Group_Add-Link_tag3@@": "<strong>Sense enllaç</strong>: la taula d'atributs del ràster de sortida només contindrà els elements ${Value} i ${Count}.",
	"@@Region-Group_Excluded-Value_tag0@@": "Identifica un valor que, en cas de ser present en una ubicació de cel·la, provocarà que no s'avaluï cap connectivitat espacial, independentment de com s'hagi especificat el nombre de veïns (QUATRE o VUIT).",
	"@@Region-Group_Excluded-Value_tag1@@": "Les cel·les que no incloguin el valor es tractaran com NoData i s'exclouran dels càlculs. Les ubicacions de cel·la que continguin el valor exclòs rebran 0 al ràster de sortida.",
	"@@Region-Group_Excluded-Value_tag2@@": "El valor exclòs és similar al concepte d'un valor de fons o a tenir una màscara aplicada. S'ha d'especificar un valor per a aquest paràmetre si s'ha definit el paràmetre <strong>${CROSS}</strong>.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag0@@": "Nombre de cel·les veïnes que s'utilitzaran per avaluar la connectivitat entre les cel·les.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag1@@": "<strong>QUATRE</strong>: defineix la connectivitat entre les cel·les amb el mateix valor només si aquestes es troben directament a l'esquerra, a la dreta, a sobre o a sota de cadascuna de les quatre veïnes més properes. Aquesta és l'opció per defecte.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag3@@": "<strong>VUIT</strong>: defineix la connectivitat entre les cel·les amb el mateix valor si aquestes es troben dins del veïnat de vuit cel·les immediat unes de les altres. Inclou les direccions a la dreta, a l'esquerra, amunt o en diagonal unes respecte de les altres.",
	"@@Region-Group_Zone-Connectivity_tag0@@": "Defineix quins valors de cel·la s'han de tenir en compte en fer proves de connectivitat.",
	"@@Region-Group_Zone-Connectivity_tag1@@": "<strong>DINS</strong>: prova la connectivitat entre els valors d'entrada que són iguals dins de la mateixa zona. Aquesta és l'opció per defecte.",
	"@@Region-Group_Zone-Connectivity_tag3@@": "Les úniques cel·les que es poden agrupar són les de la mateixa zona (valor) que compleixen els requisits espacials de la connectivitat especificada pel paràmetre <strong>Nombre de veïns</strong> (quatre o vuit).",
	"@@Region-Group_Zone-Connectivity_tag6@@": "<strong>CREUAT</strong>: prova la connectivitat segons els requisits espacials especificats pel paràmetre de nombre de veïns entre les cel·les amb qualsevol valor, excepte per al valor que el paràmetre de valor exclòs ha identificat perquè s'exclogui.",
	"@@Region-Group_Zone-Connectivity_tag8@@": "Quan s'utilitza aquesta opció, cal especificar un valor per al paràmetre <strong>Valor exclòs</strong>.",
	"@@Region-Group_Zone-Raster_tag0@@": "Ràster d'entrada necessari del qual s'identificaran les regions úniques connectades.",
	"@@Region-Group_Zone-Raster_tag1@@": "Ha de ser de tipus enter.",
	"@@Region-Grow_Fill-Value-Field_tag0@@": "Camp de la taula d'atributs que defineix el valor d'emplenament del grup de píxels. En una imatge multibanda, aquest valor s'assignarà a totes les bandes.",
	"@@Region-Grow_Max-Growth-Radius-Field_tag0@@": "Camp de la taula d'atributs que defineix el radi de creixement màxim en les unitats de referència espacial de la imatge.",
	"@@Region-Grow_Raster_tag0@@": "Ràster al qual voleu executar aquesta funció.",
	"@@Region-Grow_Seed-Points_tag0@@": "Classe d'entitat de punt, que actua com a origen inicial de l'algoritme. Cada punt d'origen correspon a una entrada de la taula d'atributs, que comunica les dades de radi de creixement màxim, llindar de similitud i valor d'emplenament.",
	"@@Region-Grow_Similarity-Threshold-Field_tag0@@": "Camp de la taula d'atributs que defineix el llindar de similitud, com una distància euclidiana a l'espai espectral.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag0@@": "Els valors que falten a la taula de reclassificació poden mantenir el seu valor o reassignar-se a NoData.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag1@@": "Desactivada: qualsevol píxel del ràster d'entrada que no es reclassifiqui en una taula de nova representació cartogràfica conservarà el seu valor i s'escriurà per a la seva ubicació al ràster de sortida. Aquesta és l'opció per defecte.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag2@@": "Activada: qualsevol píxel del ràster d'entrada que no es reclassifiqui en una taula de nova representació cartogràfica tindrà el seu valor amb la nova representació cartogràfica NoData per a la seva ubicació al ràster de sortida.",
	"@@Remap_Input-Field_tag0@@": "Trieu el camp que especifica el valor del píxel d'entrada que es tornarà a representar cartogràficament.",
	"@@Remap_Input-Field_tag1@@": "Si la vostra taula té un interval de valors, serà el camp de valor mínim, i també s'ha d'especificar un paràmetre <strong>Camp d'entrada màxim</strong>.",
	"@@Remap_Input-Max-Field_tag0@@": "Trieu un camp de valor màxim si la taula especifica un interval de valors.",
	"@@Remap_List_tag0@@": "Especifiqueu els valors del mapa, així com l'interval de valors mínim i màxim i els nous valors de representació cartogràfica. A més, l'interval de valors es pot definir com a píxels NoData.",
	"@@Remap_Output-Field_tag0@@": "Trieu el camp que s'utilitzarà com a valor de sortida que s'ha tornat a representar cartogràficament.",
	"@@Remap_Raster_tag0@@": "Ràster d'entrada.",
	"@@Remap_Remap-Definition-Type_tag0@@": "Trieu l'opció que voleu utilitzar per definir els valors de nova representació cartogràfica:",
	"@@Remap_Remap-Definition-Type_tag1@@": "Llista: especifiqueu un interval de valors de píxel per assignar a un valor de píxel de sortida",
	"@@Remap_Remap-Table-Type_tag0@@": "Trieu el tipus de taula que utilitzareu per a la nova representació cartogràfica del ràster d'entrada:",
	"@@Remap_Remap-Table-Type_tag1@@": "Simple: utilitza l'entrada <strong>Taula de nova representació geogràfica</strong> per fer una nova representació cartogràfica dels valors de píxel de <strong>Camp d'entrada</strong> al valor corresponent del paràmetre <strong>Camp de sortida</strong>. Aquest mètode emmagatzema a la memòria cau la taula de nova representació cartogràfica perquè s'executi amb més rapidesa.",
	"@@Remap_Remap-Table-Type_tag8@@": "Dinàmic: aquest mètode no emmagatzema a la memòria cau la taula de nova representació cartogràfica i realitzarà una consulta cada cop que es presenti una sol·licitud (panoràmica, zoom o actualització). Si la taula canvia, la sol·licitud següent pot tornar a representar cartogràficament els valors de forma dinàmica.",
	"@@Remap_Remap-Table-Type_tag9@@": "Reassignació: taula específica utilitzada per al procés de reclassificació, on cada fila només es tornarà a representar cartogràficament en funció del límit de cada entitat.",
	"@@Remap_Remap-Table_tag0@@": "Navegueu per la taula on es defineixen els vostres valors de nova representació cartogràfica de valors.",
	"@@Reproject_Raster_tag0@@": "Dataset ràster que es tornarà a projectar o mostrejar.",
	"@@Reproject_Spatial-Reference_tag0@@": "Sistema de coordenades utilitzat per tornar a projectar les dades.",
	"@@Reproject_X-Cellsize_tag0@@": "Dimensió x on s'haurien de tornar a mostrejar les dades. És opcional. Si el valor és 0 o inferior, el sobre de sortida (mides de cel·la i extensió) es calcula a partir del ràster d'entrada.",
	"@@Reproject_X-Registration-Point_tag0@@": "Coordenada x utilitzada per definir la cantonada superior esquerra del dataset. Aquesta coordenada s'ha de definir amb les unitats de la nova referència espacial. Si els paràmetres <strong>Mida de cel·la X</strong> i <strong>Mida de cel·la Y</strong> són més grans que 0, es fan servir juntament amb els paràmetres <strong>Punt de registre X</strong> i <strong>Punt de registre Y</strong> per definir el contorn de sortida.",
	"@@Reproject_Y-Cellsize_tag0@@": "Dimensió y on s'haurien de tornar a mostrejar les dades. És opcional. Si el valor és 0 o inferior, el sobre de sortida (mides de cel·la i extensió) es calcula a partir del ràster d'entrada.",
	"@@Reproject_Y-Registration-Point_tag0@@": "Coordenada y utilitzada per definir la cantonada superior esquerra del dataset. Aquesta coordenada s'ha de definir amb les unitats de la nova referència espacial. Si els paràmetres <strong>Mida de cel·la X</strong> i <strong>Mida de cel·la Y</strong> són més grans que 0, es fan servir juntament amb els paràmetres <strong>Punt de registre X</strong> i <strong>Punt de registre Y</strong> per definir el contorn de sortida.",
	"@@Resample_Input-Cellsize_tag0@@": "Mida de cel·la del píxel del ràster d'entrada.",
	"@@Resample_Output-Cellsize_tag0@@": "Mida de cel·la del píxel del ràster de sortida. La mida de la cel·la es pot canviar, però l'extensió del dataset ràster es mantindrà. El remostreig a partir d'una mida de cel·la definida per l'usuari pot ser molt més lent que l'opció per defecte del sistema, ja que el remostreig per defecte del sistema processa la quantitat mínima de dades a partir de la resolució més pròxima possible.",
	"@@Resample_Raster_tag0@@": "Ràster d'entrada que es tornarà a mostrejar.",
	"@@Resample_Resampling-Type_tag0@@": "<strong>Veí més proper</strong>: calcula el valor del píxel de sortida mitjançant el píxel d'entrada més proper. Els píxels NoData romandran sense canvis al dataset ràster de sortida. Aquesta és l'opció per defecte.",
	"@@Resample_Resampling-Type_tag2@@": "<strong>Interpolació bilineal</strong>: calcula el valor del píxel mitjançant el valor de distància ponderada dels quatre píxels més propers. Aquest mètode és eficient per al procés des d'un punt de vista computacional.",
	"@@Resample_Resampling-Type_tag4@@": "<strong>Convolució cúbica</strong>: determina el valor nou d'un píxel basat en l'ajustament d'una corba suau a través dels 16 centres del píxel d'entrada més propers.",
	"@@Resample_Resampling-Type_tag6@@": "<strong>Majoria</strong>: calcula el valor del píxel mitjançant el valor del píxel majoritari als 16 píxels més propers. Els píxels NoData romandran sense canvis al dataset ràster de sortida.",
	"@@Resample_Resampling-Type_tag8@@": "<strong>Interpolació bilineal plus</strong>: utilitza <strong>Interpolació bilineal</strong>, excepte els píxels de les vores, que es defineixen com NoData i no es repliquen ni es tenen en compte al càlcul. Utilitzeu <strong>Interpolació bilineal plus</strong> per a les dades de tessel·les, ja que les vores coincidiran millor.",
	"@@Resample_Resampling-Type_tag14@@": "<strong>Desenfocament de Gauss</strong>: aplica una convolució gaussiana al ràster d'origen i calcula el valor del píxel mitjançant el valor de distància ponderada dels quatre píxels més propers des del ràster desenfocat. Es recomana per eliminar el soroll de les dades remostrejades i per al submostratge en una mida de píxel més gran.",
	"@@Resample_Resampling-Type_tag16@@": "<strong>Desenfocament de Gauss plus</strong>: utilitza el mateix mètode que <strong>Desenfocament de Gauss</strong>, excepte els píxels de les vores, que es defineixen com NoData i no es repliquen ni es tenen en compte al càlcul. Utilitzeu <strong>Desenfocament de Gauss plus</strong> per a les dades de tessel·les, ja que les vores coincidiran millor.",
	"@@Resample_Resampling-Type_tag22@@": "<strong>Mitjà</strong>: calcula els valors de píxel de cada píxel de destinació mitjançant el valor mitjà dels píxels superposats.",
	"@@Resample_Resampling-Type_tag24@@": "<strong>Mínim</strong>: calcula el valor de píxel mitjançant el valor mínim dels píxels superposats. Els píxels NoData romandran sense canvis al dataset ràster de sortida.",
	"@@Resample_Resampling-Type_tag26@@": "<strong>Màxim</strong>: es recomana per a dades contínues. Produeix una imatge de sortida més suau que el mètode de remostreig de veí més proper.",
	"@@Resample_Resampling-Type_tag28@@": "<strong>Mitjana del vector</strong>: calcula la mitjana del vector de magnitud-direcció mitjançant tots els píxels implicats. Aquest mètode només és aplicable als ràsters de dues bandes que representen la magnitud i la direcció. En primer lloc, cobreix la magnitud-direcció a U-V i, a continuació, pren la mitjana aritmètica en tots els píxels implicats per obtenir l'U-V del píxel de destinació i torna a fer la conversió magnitud-direcció.",
	"@@Round-Down_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Round-Down_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Round-Down_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Round-Down_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Round-Down_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Round-Down_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Round-Down_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Round-Down_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Round-Down_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Round-Down_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Round-Down_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Round-Down_Raster_tag0@@": "Valors d'entrada que s'arrodoniran a la baixa.",
	"@@Round-Up_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Round-Up_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Round-Up_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Round-Up_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Round-Up_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Round-Up_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Round-Up_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Round-Up_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Round-Up_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Round-Up_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Round-Up_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Round-Up_Raster_tag0@@": "Valors d'entrada que s'arrodoniran a l'alça.",
	"@@Segment-Mean-Shift_Minimum-Segment-Size-in-Pixels_tag0@@": "Mida de segment mínima calculada en píxels. Aquest valor està relacionat amb la vostra unitat d'assignació mínima i filtrarà blocs de píxels més petits. Tots els segments que siguin més petits que el valor especificat fusionaran els segments més petits amb el segment veí que més hi encaixi.",
	"@@Segment-Mean-Shift_Raster_tag0@@": "Ràster d'entrada que es segmentarà.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag0@@": "Els límits de segment es dibuixen com un línia de corbes de nivell negra al voltant de cada segment. Resulta útil per distingir segments adjacents que tenen colors similars.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag1@@": "Desactivada: els límits de segment no es mostren. Aquesta és l'opció per defecte.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag2@@": "Activada: els límits de segment es mostren amb línies de corbes de nivell negres al voltant de cada segment.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag0@@": "Importància relativa de separar objectes en funció de les característiques espacials.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag1@@": "Els valors enters vàlids van de 1 a 20. Els valors inferiors proporcionen classes àmplies i més suavització. Un valor superior és adequat per discriminar entitats espacialment petites o clusteritzades. Per exemple, en una escena urbana, podeu classificar entitats de superfície impermeable mitjançant un valor de detall espacial menor, o bé podeu classificar edificis i carreteres com classes independents mitjançant un valor de detall espacial més alt.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag0@@": "Importància relativa de separar objectes en funció de les característiques de color.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag1@@": "Els valors de punt flotant vàlids van de 1,0 a 20,0. Els valors inferiors proporcionen classes àmplies i més suavització. Un valor superior és adequat si voleu discriminar entitats que tenen característiques espectrals una mica semblants. Per exemple, l'ús d'un valor de detall espectral superior en una escena boscosa us permet distingir millor les espècies d'arbres diferents.",
	"@@Segment-Mean-Shift_maximumsegmentsizeinpixels_tag0@@": "<p>Mida màxima d'un segment. Els segments que siguin més llargs de la mida especificada es dividiran. Utilitzeu aquest paràmetre per impedir que artefactes de la capa de sortida generin segments grans. El valor per defecte és -1.</p>",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag0@@": "Seleccioneu un dels quatre tipus de calibratge:",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag1@@": "<strong>Beta zero</strong>: produeix una sortida que conté el coeficient de brillantor de radar.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag3@@": "<strong>Sigma zero</strong>: retrodispersió retornada a l'antena des d'una àrea d'unitat al terra, en relació amb un interval de terreny.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag5@@": "<strong> Gamma</strong>: mesura d'energia emesa i retornada útil per determinar patrons d'antena.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag7@@": "<strong>Cap</strong>: no s'aplica cap correcció. Aquesta és l'opció per defecte.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag0@@": "Ràster d'entrada SLC o GRD de nivell 1 de Sentinel-1 que voleu processar.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag1@@": "La funció utilitzarà el fitxer LUT per aplicar la correcció tèrmica o per eliminar la correcció, en funció del contingut del LUT.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag0@@": "Ràster d'entrada de Sentinel-1 que voleu processar.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag1@@": "La funció utilitzarà el fitxer LUT per aplicar la correcció tèrmica o per eliminar la correcció, en funció del contingut del LUT.",
	"@@Set-Null_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Set-Null_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Set-Null_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Set-Null_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Set-Null_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Set-Null_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Set-Null_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Set-Null_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Set-Null_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Set-Null_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Set-Null_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Set-Null_False-Raster_tag0@@": "Entrada els valors de la qual s'utilitzaran com a valors del píxel de sortida si la condició és falsa. Pot ser un enter, un ràster de punt flotant o un valor constant.",
	"@@Set-Null_Raster_tag0@@": "Ràster d'entrada que representa el resultat booleà d'una funció matemàtica lògica del ràster. Els valors seran 1 (true) o 0 (false). Pot ser un enter o un ràster de punt flotant.",
	"@@Shaded-Relief_Altitude_tag0@@": "L'altitud és l'angle d'elevació del sol sobre l'horitzó i va de 0 a 90 graus. Un valor de 0 graus indica que el sol és a l'horitzó, és a dir, al mateix pla horitzontal que el marc de referència. Un valor de 90 graus indica que el sol es troba directament a sobre. El valor per defecte és de 45 graus sobre l'horitzó.",
	"@@Shaded-Relief_Azimuth_tag0@@": "L'Azimut és la posició relativa del sol a l'horitzó (en graus). Aquesta posició s'indica amb l'angle del sol mesurat en sentit horari des del nord. Els valors de l'azimut indiquen el següent: 0 graus és el nord, 90 graus és l'est, 180 graus és el sud i 270 graus és l'oest.",
	"@@Shaded-Relief_Color-Scheme-Type_tag0@@": "Especifiqueu si s'utilitzarà una rampa de color o un mapa de color per mostrar el relleu ombrejat.",
	"@@Shaded-Relief_Color-Scheme-Type_tag1@@": "<strong>Rampa de color</strong>: quan seleccioneu <strong>Rampa de color</strong>, se us demanarà que seleccioneu una rampa de color adequada.",
	"@@Shaded-Relief_Color-Scheme-Type_tag5@@": "<strong>Mapa de color</strong>: quan trieu <strong>Mapa de color</strong>, se us demanarà que especifiqueu el fitxer del mapa de color que voleu utilitzar.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag0@@": "Especifiqueu si la interpolació de píxels de vora per defecte estarà deshabilitada.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag1@@": "Desactivada: el remostreig bilineal s'aplicarà de manera uniforme per remostrejar el relleu ombrejat. Aquesta és l'opció per defecte.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag2@@": "Activada: el remostreig bilineal s'utilitzarà al relleu ombrejat, excepte a les vores dels ràsters o al costat dels píxels de NoData. Aquests píxels s'emplenaran amb NoData, ja que reduiran qualsevol efecte de vora esmolada que es pugui produir.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag3@@": "L'ús d'aquesta opció evitarà qualsevol artefacte de remostreig que es pugui produir a les vores d'un ràster. Els píxels de sortida al llarg de la vora d'un ràster o al costat de píxels sense cap valor s'emplenaran amb NoData; per tant, es recomana que aquesta opció només s'utilitzi quan hi hagi altres ràsters amb píxels superposats disponibles. Quan hi hagi píxels superposats disponibles, aquestes àrees de NoData mostraran els valors dels píxels superposats en lloc d'estar en blanc.",
	"@@Shaded-Relief_Raster_tag0@@": "Dataset d'elevació d'entrada.",
	"@@Shaded-Relief_Scaling_tag0@@": "El resultat ombrejat s'escala de manera dinàmica mitjançant l'ajust del factor z amb una de les dues opcions següents:",
	"@@Shaded-Relief_Scaling_tag1@@": "<strong>Cap</strong>: no s'aplica cap escala. És ideal per a un dataset ràster únic que cobreix una àrea local. No es recomana per a datasets de tot el món amb grans variacions d'elevació o mapes multiescala, ja que produiria un relleu del terreny amb poca variació a escales petites.",
	"@@Shaded-Relief_Scaling_tag3@@": "<strong>Ajustat</strong>: s'aplica un ajust no lineal mitjançant els valors per defecte <strong>Potència de mida de píxel</strong> i <strong>Factor de mida de píxel</strong>, que tenen en compte una àmplia varietat de canvis d'altitud (escala) a mida que la imatge s'acosta i s'allunya. L'opció <strong>Ajustat</strong> es recomana quan s'utilitza un dataset de tot el món.",
	"@@Shaded-Relief_Z-Factor_tag0@@": "El factor z és un factor d'escala que s'utilitza per convertir els valors d'elevació amb dues finalitats:",
	"@@Shaded-Relief_Z-Factor_tag1@@": "Convertir les unitats d'elevació (com ara metres o peus) a les unitats de la coordenada horitzontal del dataset, que poden ser peus, metres o graus",
	"@@Shaded-Relief_Z-Factor_tag2@@": "Afegir exageració vertical per aconseguir un efecte visual",
	"@@Shaded-Relief_Z-Factor_tag3@@": "El resultat ombrejat s'escala de manera dinàmica mitjançant l'ajust del factor z amb una de les dues opcions següents:",
	"@@Shaded-Relief_Z-Factor_tag4@@": "<strong>Cap</strong>: no s'aplica cap escala. És ideal per a un dataset ràster únic que cobreix una àrea local. No es recomana per a datasets de tot el món amb grans variacions d'elevació o mapes multiescala, ja que produiria un relleu del terreny amb poca variació a escales petites.",
	"@@Shaded-Relief_Z-Factor_tag6@@": "<strong>Ajustat</strong>: s'aplica un ajust no lineal mitjançant els valors per defecte <strong>Potència de mida de píxel</strong> i <strong>Factor de mida de píxel</strong>, que tenen en compte una àmplia varietat de canvis d'altitud (escala) a mida que la imatge s'acosta i s'allunya. L'opció <strong>Ajustat</strong> es recomana quan s'utilitza un dataset de tot el món.",
	"@@Shaded-Relief_hillshadetype_tag0@@": "Controla l'origen de la il·luminació per a l'ombrejat.",
	"@@Shaded-Relief_hillshadetype_tag1@@": "<strong>Tradicional</strong>: calcula l'ombrejat des d'una direcció d'il·luminació única. Podeu definir les opcions <strong>Azimuth</strong> i <strong>Altitud</strong> per controla la ubicació de la font de llum. Aquesta és l'opció per defecte.",
	"@@Shaded-Relief_hillshadetype_tag2@@": "<strong>Multidireccional</strong>: combina la llum de diverses fonts per representar una visualització millorada del terreny.",
	"@@Shaded-Relief_PSPower_tag0@@": "La <strong>potència de mida de píxel</strong> té en compte els canvis d'altitud (o escala) a mesura que el visor amplia i redueix la visualització del mapa. És l'exponent aplicat al terme de mida de píxel a l'equació que controla la velocitat a què canvia el <strong>factor Z</strong> per evitar una pèrdua de relleu significativa.",
	"@@Shaded-Relief_PSPower_tag1@@": "Aquest paràmetre només és vàlid si el tipus d'<strong>Escala</strong> és <strong>Ajustada</strong>. El valor per defecte és 0,664.",
	"@@Shaded-Relief_PSZFactor_tag0@@": "El <strong>factor de mida de píxel</strong> té en compte els canvis d'escala a mesura que el visor amplia i redueix la visualització del mapa. Controla la velocitat a què canvia el <strong>factor Z</strong>.",
	"@@Shaded-Relief_PSZFactor_tag1@@": "Aquest paràmetre només és vàlid si el tipus d'<strong>Escala</strong> és <strong>Ajustada</strong>. El valor per defecte és 0,024.",
	"@@Sin_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Sin_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Sin_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Sin_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Sin_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Sin_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Sin_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Sin_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Sin_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Sin_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Sin_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Sin_Raster_tag0@@": "Entrada de la qual es calcularan els valors del sinus.",
	"@@SinH_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@SinH_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@SinH_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@SinH_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@SinH_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@SinH_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@SinH_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@SinH_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@SinH_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@SinH_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@SinH_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@SinH_Raster_tag0@@": "Entrada de la qual es calcularan els valors del sinus hiperbòlic.",
	"@@Sink_Flow-Direction-Raster_tag0@@": "Ràster d'entrada que mostra la direcció de sortida del flux de cada cel·la.",
	"@@Sink_Flow-Direction-Raster_tag1@@": "El ràster de direcció del flux es pot crear executant la funció <strong>Direcció del flux</strong>.",
	"@@Slope_DEM_tag0@@": "Dataset d'elevació d'entrada.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag0@@": "L'ús d'aquesta opció evitarà qualsevol artefacte de remostreig que es pugui produir a les vores d'un ràster. Els píxels de sortida al llarg de la vora d'un ràster o al costat de píxels sense cap valor s'emplenaran amb NoData; per tant, es recomana que aquesta opció només s'utilitzi quan hi hagi altres ràsters amb píxels superposats disponibles. Quan hi hagi píxels superposats disponibles, aquestes àrees de NoData mostraran els valors dels píxels superposats en lloc d'estar en blanc.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag1@@": "Desactivada: el remostreig bilineal s'aplicarà de manera uniforme per remostrejar el pendent. Aquesta és l'opció per defecte.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag2@@": "Activada: el remostreig bilineal s'utilitzarà al pendent, excepte a les vores dels ràsters o al costat dels píxels de NoData. Aquests píxels s'emplenaran amb NoData, ja que reduiran qualsevol efecte de vora esmolada que es pugui produir.",
	"@@Slope_Scaling_tag0@@": "La inclinació del pendent es pot mostrar com un valor en graus o un percentatge d'elevació. Hi ha tres opcions d'<strong>Escalat</strong>:",
	"@@Slope_Scaling_tag3@@": "<strong>Grau</strong>: la inclinació del pendent es calcula en graus. Els valors van de 0 a 90.",
	"@@Slope_Scaling_tag5@@": "<strong>Percent_Rise</strong>: la inclinació del pendent es calcula en percentatge. Els valors van de 0 a infinit. Una superfície plana té una inclinació de 0 %, mentre que una superfície de 45 graus té un percentatge d'elevació de 100. Com més vertical és la superfície, més augmenta el percentatge d'elevació.",
	"@@Slope_Scaling_tag7@@": "<strong>Escalat</strong>: la inclinació del pendent es calcula igual que amb Grau, però s'ajusta el factor z de l'escala. Utilitza els valors <strong>Potència de mida de píxel</strong> i <strong>Factor de mida de píxel</strong>, que tenen en compte els canvis de resolució (escala) a mida que la imatge s'acosta i s'allunya. Aquesta opció es recomana quan s'utilitzen datasets de tot el món, especialment quan es fa servir el pendent com una superfície de visualització.",
	"@@Slope_Scaling_tag13@@": "El factor z s'ajusta mitjançant l'equació següent:",
	"@@Slope_Scaling_tag14@@": "Factor Z ajustat = (factor Z) + (mida de píxel)",
	"@@Slope_Scaling_tag15@@": "× (Factor de mida de píxel)",
	"@@Slope_Scaling_tag16@@": "Potència de mida de píxel",
	"@@Slope_Z-Factor_tag0@@": "El <strong>factor z</strong> és un factor d'escala que s'utilitza per convertir els valors d'elevació amb dues finalitats:",
	"@@Slope_Z-Factor_tag3@@": "Convertir les unitats d'elevació (com ara metres o peus) a les unitats de la coordenada horitzontal del dataset, que poden ser peus, metres o graus",
	"@@Slope_Z-Factor_tag4@@": "Afegir exageració vertical per aconseguir un efecte visual",
	"@@Slope_PSPower_tag0@@": "La <strong>potència de mida de píxel</strong> té en compte els canvis d'altitud (o escala) a mesura que el visor amplia i redueix la visualització del mapa. És l'exponent aplicat al terme de mida de píxel a l'equació que controla la velocitat a què canvia el <strong>factor Z</strong> per evitar una pèrdua de relleu significativa.",
	"@@Slope_PSPower_tag1@@": "Aquest paràmetre només és vàlid si el tipus d'<strong>Escala</strong> és <strong>Escalat</strong>. El valor per defecte és 0,664.",
	"@@Slope_PSZFactor_tag0@@": "El <strong>factor de mida de píxel</strong> té en compte els canvis d'escala a mesura que el visor amplia i redueix la visualització del mapa. Controla la velocitat a què canvia el <strong>factor Z</strong>.",
	"@@Slope_PSZFactor_tag1@@": "Aquest paràmetre només és vàlid si el tipus d'<strong>Escala</strong> és <strong>Escalat</strong>. El valor per defecte és 0,024.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag0@@": "Capa ràster d'acumulació del flux d'entrada.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag1@@": "Es pot crear amb la funció <strong>Acumulació de flux</strong>.",
	"@@Snap-Pour-Point_Pour-Point-Field_tag0@@": "Camp utilitzat per assignar valors a les ubicacions de punts de fluïdesa.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag0@@": "Ubicacions dels punts de fluïdesa d'entrada que s'ajustaran.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag1@@": "Per a una capa ràster d'entrada, totes les cel·les que no siguin NoData (és a dir, que tinguin un valor) es consideraran punts de fluïdesa i s'ajustaran.",
	"@@Snap-Pour-Point_Snap-Distance_tag0@@": "Distància màxima, en unitats de mapa, per cercar una cel·la de flux acumulat més alt.",
	"@@Speckle_Additive-Noise-Mean_tag0@@": "Especifica el valor mitjà del soroll additiu. Un valor mitjà de soroll més alt produirà menys suavització, mentre un valor més baix tindrà com a resultat més suavització.",
	"@@Speckle_Additive-Noise-Mean_tag1@@": "Aquest paràmetre només és vàlid quan el <strong>tipus de filtre</strong> és <strong>Filtre de Lee</strong> i el <strong>model de soroll</strong> és <strong>Soroll additiu</strong> o <strong>Soroll additiu i multiplicatiu</strong>. El valor per defecte és 0.",
	"@@Speckle_Damping-Factor_tag0@@": "Especifica l'extensió de l'efecte d'amortiment exponencial al filtratge. Un valor d'amortiment més alt preserva millor les vores i suavitza menys, mentre que un valor més baix produeix més suavització. Un valor de 0 produeix la mateixa sortida que el filtre de pas baix.",
	"@@Speckle_Damping-Factor_tag1@@": "Aquest paràmetre només és vàlid quan el <strong>Tipus de filtre</strong> és <strong>Filtre de Lee millorat</strong> o <strong>Filtre de Frost</strong>. El valor per defecte és 1.",
	"@@Speckle_Filter-Size_tag0@@": "Especifica la mida de la finestra de píxels utilitzada per filtrar soroll:",
	"@@Speckle_Filter-Size_tag1@@": "3x3",
	"@@Speckle_Filter-Size_tag2@@": "5x5",
	"@@Speckle_Filter-Size_tag3@@": "7x7",
	"@@Speckle_Filter-Size_tag4@@": "9x9",
	"@@Speckle_Filter-Size_tag5@@": "11x11",
	"@@Speckle_Filter-Type_tag0@@": "Especifica el tipus de filtre que s'utilitzarà a l'algoritme de suavització per eliminar el soroll pigallat:",
	"@@Speckle_Filter-Type_tag1@@": "<strong>Filtre de Lee</strong>: redueix el soroll pigallat mitjançant l'aplicació d'un filtre espacial a cada píxel d'una imatge, que filtra les dades en funció de les estadístiques locals calculades en una finestra quadrada. Aquest filtre resulta útil si voleu suavitzar dades pigallades que tenen un component additiu o multiplicatiu. Aquesta és l'opció per defecte.",
	"@@Speckle_Filter-Type_tag3@@": "<strong>Filtre de Lee millorat</strong>: una versió adaptada del filtre de Lee que inclou <strong>Factor d'amortiment</strong> i <strong>Nombre d'observacions</strong>. Aquest filtre resulta útil si voleu reduir el pigallat i alhora conservar la informació de textura.",
	"@@Speckle_Filter-Type_tag9@@": "<strong>Filtre de Frost</strong>: redueix el soroll pigallat amb un filtre circularment simètric amb amortiment exponencial que utilitza les estadístiques locals en finestres de filtre individuals. Aquest filtre resulta útil si voleu reduir el pigallat i alhora conservar les vores a les imatges de radar.",
	"@@Speckle_Filter-Type_tag11@@": "<strong>Filtre de Kuan</strong> aquest filtre, que és similar al de Lee, aplica un filtre espacial a cada píxel d'una imatge i filtra les dades en funció de les estadístiques locals calculades en una finestra quadrada. Aquest filtre resulta útil si voleu reduir el pigallat i alhora conservar les vores a les imatges de radar.",
	"@@Speckle_Multiplicative-Noise-Mean_tag0@@": "Especifica el valor mitjà del soroll multiplicatiu. Un valor mitjà de soroll més alt produirà menys suavització, mentre un valor més baix tindrà com a resultat més suavització.",
	"@@Speckle_Multiplicative-Noise-Mean_tag1@@": "Aquest paràmetre només és vàlid quan el <strong>tipus de filtre</strong> és <strong>Filtre de Lee</strong> i el <strong>model de soroll</strong> és <strong>Soroll additiu</strong> o <strong>Soroll additiu i multiplicatiu</strong>. El valor per defecte és 1.",
	"@@Speckle_Noise-Model_tag0@@": "Especifica el tipus de soroll que redueix la qualitat de la imatge de radar:",
	"@@Speckle_Noise-Model_tag1@@": "<strong>Soroll multiplicatiu</strong>: soroll de senyal aleatori que es multiplica al senyal rellevant durant la captura o la transmissió",
	"@@Speckle_Noise-Model_tag3@@": "<strong>Soroll additiu</strong>: soroll de senyal aleatori que s'afegeix al senyal rellevant durant la captura o la transmissió",
	"@@Speckle_Noise-Model_tag5@@": "<strong>Soroll additiu i multiplicatiu</strong>: tots dos models de soroll",
	"@@Speckle_Noise-Variance_tag0@@": "Especifica la variància de soroll de la imatge de radar.",
	"@@Speckle_Noise-Variance_tag1@@": "Aquest paràmetre només és vàlid quan el <strong>tipus de filtre</strong> és <strong>Filtre de Lee</strong> i el <strong>model de soroll</strong> és <strong>Soroll additiu</strong> o <strong>Soroll additiu i multiplicatiu</strong>. El valor per defecte és 0,25.",
	"@@Speckle_Number-of-Looks_tag0@@": "Especifica el nombre d'observacions de la imatge, que controla la suavització de la imatge i estima la variància de soroll. Un valor més baix produirà menys suavització, mentre un valor més alt conservarà més característiques de la imatge.",
	"@@Speckle_Number-of-Looks_tag1@@": "Aquest paràmetre només és vàlid quan el <strong>tipus de filtre</strong> és <strong>Filtre de Lee</strong> i el <strong>model de soroll</strong> és <strong>Soroll multiplicatiu</strong>, o quan el <strong>tipus de filtre</strong> és <strong>Filtre de Kuan</strong>. El valor per defecte és 1.",
	"@@Speckle_Raster_tag0@@": "Ràster d'entrada.",
	"@@Spectral-Conversion_Conversion-Matrix_tag0@@": "Matriu utilitzada per convertir el ràster d'entrada.",
	"@@Spectral-Conversion_Conversion-Matrix_tag1@@": "L'equació utilitzada per executar aquesta conversió és la següent:",
	"@@Spectral-Conversion_Conversion-Matrix_tag2@@": "Output Band_R = Weight_P * Band_C",
	"@@Spectral-Conversion_Conversion-Matrix_tag3@@": "on:",
	"@@Spectral-Conversion_Conversion-Matrix_tag4@@": "Band_R és una banda de sortida, on R és un nombre d'1 al nombre de bandes de sortida.",
	"@@Spectral-Conversion_Conversion-Matrix_tag5@@": "Weight_P és una llista de pesos delimitada per comes, 1 per cada banda d'entrada. La suma dels pesos de cada banda ha de ser igual a 1.",
	"@@Spectral-Conversion_Conversion-Matrix_tag6@@": "Band_C és una imatge d'entrada, on C és un nombre d'1 al nombre de bandes de la imatge d'entrada.",
	"@@Spectral-Conversion_Raster_tag0@@": "Ràster d'entrada.",
	"@@Spectral-Conversion_Raster_tag1@@": "Pot ser un dataset ràster, un dataset de mosaic o un servei d'imatges.",
	"@@Spectral-Conversion_Size_tag0@@": "Nombre de files i columnes a la <strong>matriu de conversió</strong>.",
	"@@Square_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Square_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Square_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Square_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Square_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Square_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Square_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Square_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Square_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Square_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Square_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Square_Raster_tag0@@": "Valors d'entrada dels quals es farà el quadrat.",
	"@@Square-Root_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Square-Root_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Square-Root_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Square-Root_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Square-Root_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Square-Root_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Square-Root_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Square-Root_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Square-Root_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Square-Root_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Square-Root_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Square-Root_Raster_tag0@@": "Valors d'entrada utilitzats per cercar l'arrel quadrada.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag0@@": "Definiu els valors de les estadístiques de cada banda.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag1@@": "La columna ${Histogram} és un camp només de lectura que es pot emplenar amb el paràmetre <strong>Importa</strong>. Si importeu un fitxer d'histograma, la columna ${Histogram} es marcarà com a <strong>Definit</strong>.",
	"@@Statistics-and-Histogram_Import_tag0@@": "Importeu les estadístiques i la informació de l'histograma d'un ràster o un fitxer XML existent.",
	"@@Statistics-and-Histogram_Raster_tag0@@": "Ràster d'entrada que necessita que es defineixin les estadístiques i l'histograma.",
	"@@Statistics-and-Histogram_Statistics_tag0@@": "Definiu els valors de les estadístiques de cada banda.",
	"@@Stream-Link_Flow-Direction-Raster_tag0@@": "Ràster d'entrada que mostra la direcció de sortida del flux de cada cel·la.",
	"@@Stream-Link_Flow-Direction-Raster_tag1@@": "El ràster de direcció del flux es pot crear executant la funció <strong>Direcció del flux</strong>.",
	"@@Stream-Link_Stream-Raster_tag0@@": "Ràster d'entrada que representa una xarxa de transmissió lineal.",
	"@@Stream-Order_Flow-Direction-Raster_tag0@@": "Ràster d'entrada que mostra la direcció de sortida del flux de cada cel·la.",
	"@@Stream-Order_Flow-Direction-Raster_tag1@@": "El ràster de direcció del flux es pot crear executant la funció <strong>Direcció del flux</strong>.",
	"@@Stream-Order_Order-Method_tag0@@": "Mètode utilitzat per assignar l'ordre de canals.",
	"@@Stream-Order_Order-Method_tag1@@": "<strong>STRAHLER</strong>: mètode d'ordenació de canals proposat per Strahler el 1952. L'ordre de canals només augmenta quan els canals del mateix ordre s'intersequen. La intersecció d'un enllaç de primer ordre i un enllaç de segon ordre continuarà essent un enllaç de segon ordre, en lloc de crear-ne un de tercer ordre. Aquesta és l'opció per defecte.",
	"@@Stream-Order_Order-Method_tag3@@": "<strong>SHREVE</strong>: mètode d'ordenació de canals per magnitud proposat per Shreve el 1967. S'assignarà una magnitud (ordre) d'u a tots els enllaços sense afluents. Les magnituds són pendents descendents additius. Quan dos enllaços s'intersequen, les seves magnituds s'afegeixen i assignen a l'enllaç del pendent descendent.",
	"@@Stream-Order_Stream-Raster_tag0@@": "Ràster de transmissió d'entrada que representa una xarxa de transmissió lineal.",
	"@@Stretch_Auto-Gamma_tag0@@": "Utilitzeu <strong>Gamma automàtic</strong> per calcular el gamma a partir de les estadístiques i l'histograma del dataset. Les estadístiques poden ser estimades per la pròpia funció, o bé estimades pel programari si heu triat una capa.",
	"@@Stretch_Dynamic-Range-Adjustment_tag0@@": "Activeu la casella <strong>Ajust del marge dinàmic</strong> si voleu que les estadístiques es calculin només a partir dels píxels que es mostren a la pantalla. Generalment, aquesta opció s'aplica quan la imatge es publica i s'utilitza en una aplicació web que no pot realitzar aquest tipus de millora del contrast.",
	"@@Stretch_Estimate-Statistics_tag0@@": "Activeu la casella <strong>Calcula les estadístiques</strong> per calcular les estadístiques. Les estadístiques estimades es calculen a partir d'una mostra de 1.000 per 1.000 del centre del ràster i s'utilitzen per a la millora del contrast.",
	"@@Stretch_Estimate-Statistics_tag3@@": "Si aquesta opció està activada i el ràster té estadístiques, o bé si heu introduït valors a la taula <strong>Estadístiques</strong>, s'utilitzaran en lloc de calcular-les, tret que la millora requereixi un histograma. Si la millora del contrast requereix un histograma que no existeix, es farà l'estimació.",
	"@@Stretch_Gamma_tag0@@": "Utilitzeu la barra de control lliscant per definir manualment el valor de <strong>Gamma</strong>.",
	"@@Stretch_Number-Of-Standard-Deviations_tag0@@": "Especifiqueu el valor n del nombre de desviacions estàndard que s'utilitzaran. Aquest mètode s'utilitza per emfasitzar com es diferencien del valor mitjà els valors de les característiques; és millor quan s'utilitza en dades distribuïdes amb normalitat.",
	"@@Stretch_Output-Maximum_tag0@@": "Definiu el valor de píxel més alt per a l'histograma.",
	"@@Stretch_Output-Maximum_tag1@@": "<strong>Sortida mínima</strong> i <strong>Sortida màxima</strong> definiran l'interval de valors en què es farà l'expansió del contrast lineal.",
	"@@Stretch_Output-Minimum_tag0@@": "Definiu el valor de píxel més baix per a l'histograma.",
	"@@Stretch_Output-Minimum_tag1@@": "<strong>Sortida mínima</strong> i <strong>Sortida màxima</strong> definiran l'interval de valors en què es farà l'expansió del contrast lineal.",
	"@@Stretch_Percent-Clip-Maximum_tag0@@": "Especifiqueu el percentatge de valors alts que s'exclouran de la millora del contrast.",
	"@@Stretch_Percent-Clip-Maximum_tag1@@": "Els valors vàlids van de 0 a 99.",
	"@@Stretch_Percent-Clip-Minimum_tag0@@": "Especifiqueu el percentatge de valors baixos que s'exclouran de la millora del contrast.",
	"@@Stretch_Percent-Clip-Minimum_tag1@@": "Els valors vàlids van de 0 a 99.",
	"@@Stretch_Raster_tag0@@": "Ràster d'entrada on es farà la millora del contrast.",
	"@@Stretch_Sigmoid-Strength-Level_tag0@@": "<strong>Nivell de resistència</strong> determina la quantitat de funció sigmoïdal que s'utilitzarà a la millora del contrast. Un valor baix, com ara 1, utilitzarà només la part central de la corba, el que tendeix a produir colors apagats i suaus. Un valor alt, com ara 6, utilitzarà tota la corba, el que tendeix a produir colors intensos i nítids.",
	"@@Stretch_Statistics_tag0@@": "Podeu introduir les vostres pròpies estadístiques al quadre de diàleg. Per defecte, les estadístiques es recuperen de les dades; això no obstant, s'utilitzaran tots els valors que introduïu en aquest paràmetre en lloc seu.",
	"@@Stretch_Type_tag0@@": "Trieu el mètode del tipus de millora del contrast:",
	"@@Stretch_Type_tag1@@": "Cap: no es realitza cap millora del contrast",
	"@@Stretch_Type_tag2@@": "Desv. est.: millora del contrast de desviació estàndard",
	"@@Stretch_Type_tag3@@": "MinMax: millora del contrast mínim-màxim",
	"@@Stretch_Type_tag4@@": "PercentMinMax: percentatge de millora del contrast retallada",
	"@@Stretch_Type_tag5@@": "Sigmoide: estirament sigmoïdal",
	"@@Stretch_Use-Gamma_tag0@@": "Activeu la casella <strong>Utilitza el gamma</strong> si voleu aplicar una millora del contrast de gamma.",
	"@@Swath_Cellsize_tag0@@": "La mida de cel·la del ràster de sortida es detectarà automàticament, però ho podeu canviar si és necessari. La mida de la cel·la es pot canviar, però l'extensió del dataset ràster es mantindrà.",
	"@@Swath_Interpolation-Method_tag0@@": "Hi ha quatre mètodes de remostreig per a aquesta funció:",
	"@@Swath_Interpolation-Method_tag1@@": "<strong>Veí més proper</strong>: calcula el valor del píxel mitjançant el píxel més proper. Si no existeix cap píxel d'origen, no es podrà crear cap píxel nou a la sortida.",
	"@@Swath_Interpolation-Method_tag3@@": "<strong>Bilineal</strong>: calcula el valor del píxel mitjançant el valor de distància ponderada dels quatre píxels més propers.",
	"@@Swath_Interpolation-Method_tag5@@": "<strong>Simplificació lineal</strong>: utilitza una xarxa irregular de triangles des dels punts centrals de cada cel·la del ràster irregular per interpolar una superfície que, aleshores, es converteix en un ràster regular.",
	"@@Swath_Interpolation-Method_tag7@@": "<strong>Veí natural</strong>: realitza una assignació de veí més proper i és el mètode d'interpolació més ràpid. S'utilitza principalment per a les dades discretes, com ara una classificació d'ús del sòl, perquè no canviarà els valors de les cel·les. L'error espacial màxim serà la meitat de la mida de la cel·la.",
	"@@Swath_Raster_tag0@@": "Ràster quadriculat irregular que es tornarà a mostrejar.",
	"@@Tan_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Tan_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Tan_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Tan_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Tan_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Tan_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Tan_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Tan_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Tan_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Tan_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Tan_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Tan_Raster_tag0@@": "Entrada de la qual es calcularan els valors de la tangent.",
	"@@TanH_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@TanH_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@TanH_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@TanH_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@TanH_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@TanH_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@TanH_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@TanH_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@TanH_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@TanH_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@TanH_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@TanH_Raster_tag0@@": "Entrada de la qual es calcularan els valors de la tangent hiperbòlica.",
	"@@Tasseled-Cap_Raster_tag0@@": "Ràster d'entrada al qual es realitzarà la transformació Tasseled Cap.",
	"@@Times_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Times_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Times_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Times_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Times_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Times_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Times_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Times_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Times_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Times_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Times_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Times_Raster_tag0@@": "Entrada que conté els valors que es multiplicaran.",
	"@@Times_Raster_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Times_Raster2_tag0@@": "Entrada que conté els valors pels quals es multiplicarà la primera entrada.",
	"@@Times_Raster2_tag1@@": "Un valor constant es pot utilitzar com a entrada per a aquest paràmetre, sempre i quan el ràster estigui especificat per a l'altre paràmetre.",
	"@@Transpose-Bits_Bit-Pattern_tag0@@": "Trieu el tipus de transposició que es realitzarà o especifiqueu-ne un de personalitzat:",
	"@@Transpose-Bits_Bit-Pattern_tag1@@": "Landsat 8 Cirrus",
	"@@Transpose-Bits_Bit-Pattern_tag2@@": "Landsat 8 Cloud",
	"@@Transpose-Bits_Bit-Pattern_tag3@@": "Landsat 8 Cloud Shadow",
	"@@Transpose-Bits_Bit-Pattern_tag4@@": "Landsat 8 Designated Fill",
	"@@Transpose-Bits_Bit-Pattern_tag5@@": "Landsat 8 Dropped Frame",
	"@@Transpose-Bits_Bit-Pattern_tag6@@": "Landsat 8 Snow/Ice",
	"@@Transpose-Bits_Bit-Pattern_tag7@@": "Landsat 8 Terrain Occlusion",
	"@@Transpose-Bits_Bit-Pattern_tag8@@": "Landsat 8 Vegetation",
	"@@Transpose-Bits_Bit-Pattern_tag9@@": "Landsat 8 Water",
	"@@Transpose-Bits_Bit-Pattern_tag10@@": "Definit per l'usuari",
	"@@Transpose-Bits_Constant-Value_tag0@@": "Valor opcional que s'utilitzarà per emplenar tots els bits que no estiguin implicats en la transposició. Aquest paràmetre es mostra quan el paràmetre <strong>Genera un ràster d'emplenament a partir de la constant</strong> es defineix en <strong>Sí</strong>.",
	"@@Transpose-Bits_Fill-Raster_tag0@@": "Especifiqueu un dataset ràster per utilitzar-lo per emplenar tots els bits que no estan implicats en la transposició. Aquest paràmetre es mostra quan el paràmetre <strong>Genera un ràster d'emplenament a partir de la constant</strong> es defineix en <strong>No</strong>.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag0@@": "Genereu un ràster d'emplenament mitjançant un valor constant:",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag1@@": "<strong>Sí</strong>: es generarà un ràster mitjançant un valor constant per emplenar els bits no implicats en la transposició. Aquesta és l'opció per defecte.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag3@@": "<strong>No</strong>: es generarà un ràster mitjançant valors de píxel d'un dataset ràster existent per emplenar els bits no implicats en la transposició.",
	"@@Transpose-Bits_Output-Bit-and-Input-Bit_tag0@@": "Taula només de lectura que mostra els bits de sortida i les entrades que es trobaran el seu lloc.",
	"@@Transpose-Bits_Raster_tag0@@": "Ràster d'entrada per desempaquetar i representar cartogràficament de nou.",
	"@@Unit-Conversion_From-Unit_tag0@@": "Tipus d'unitat original dels píxels.",
	"@@Unit-Conversion_Raster_tag0@@": "Ràster d'entrada que contindrà les unitats convertides.",
	"@@Unit-Conversion_To-Unit_tag0@@": "Tipus d'unitat convertida dels píxels.",
	"@@Vector-Field_Angle-Reference-System_tag0@@": "Especifica com s'ha mesurat el component de direcció.",
	"@@Vector-Field_Angle-Reference-System_tag1@@": "Geogràfica: 0° apunta cap al nord i 90° apunta camp a l'est",
	"@@Vector-Field_Angle-Reference-System_tag2@@": "Aritmètica: 0° apunta cap a l'est i 90° apunta cap al nord",
	"@@Vector-Field_Input-Data-Type_tag0@@": "Tipus de camp vectorial que representen les vostres entrades.",
	"@@Vector-Field_Input-Data-Type_tag1@@": "Desconeguda: és desconeguda si les entrades representen U-V o magnitud-direcció.",
	"@@Vector-Field_Input-Data-Type_tag2@@": "U-V: les dades d'entrada representen els components U i V.",
	"@@Vector-Field_Input-Data-Type_tag3@@": "Magnitud-direcció: les dades d'entrada representen la magnitud i la direcció.",
	"@@Vector-Field_Output-Data-Type_tag0@@": "Especifica el tipus de camp vectorial que representarà la vostra sortida.",
	"@@Vector-Field_Output-Data-Type_tag1@@": "Magnitud-direcció: les dades de sortida representen la magnitud i la direcció.",
	"@@Vector-Field_Output-Data-Type_tag2@@": "U-V: les dades de sortida representen els components U i V.",
	"@@Vector-Field_Raster1_tag0@@": "Primer ràster d'entrada.",
	"@@Vector-Field_Raster1_tag1@@": "Serà el valor d'U o la magnitud.",
	"@@Vector-Field_Raster2_tag0@@": "Segon ràster d'entrada.",
	"@@Vector-Field_Raster2_tag1@@": "Serà el valor de V o la direcció.",
	"@@Viewshed_Analysis-Method_tag0@@": "Trieu el mètode mitjançant el qual es calcularà la visibilitat. Aquesta opció us permet intercanviar part de la precisió per un rendiment superior.",
	"@@Viewshed_Analysis-Method_tag1@@": "Totes les línies de visió: s'executa una línia de visió en cada píxel del ràster a fi d'establir les àrees visibles. Aquest és el mètode per defecte.",
	"@@Viewshed_Analysis-Method_tag2@@": "Línies de visió de perímetre: les línies de visió només s'executen als píxels del perímetre de les àrees visibles a fi d'establir les àrees de visibilitat. Amb aquest mètode s'obté un millor rendiment que amb el mètode <strong>Totes les línies de visió</strong> perquè hi ha menys línies de visió al càlcul.",
	"@@Viewshed_Analysis-Type_tag0@@": "Trieu el tipus d'anàlisi de visibilitat que voleu realitzar, ja sigui per determinar la visibilitat de cada cel·la per als observadors o per identificar els observadors visibles per a cada ubicació de superfície.",
	"@@Viewshed_Analysis-Type_tag1@@": "Freqüència: nombre de vegades que les ubicacions d'observació d'entrada poden veure cada ubicació de píxel del ràster de superfície d'entrada (com a punts o vèrtexs de les entitats de l'observador de polilínia). Aquesta és l'opció per defecte.",
	"@@Viewshed_Analysis-Type_tag2@@": "Observadors: la sortida identifica exactament els punts d'observador visibles des de cada ubicació de superfície del ràster. El nombre màxim permès d'observadors d'entrada és de 32 amb aquest tipus d'anàlisi.",
	"@@Viewshed_Horizontal-End-Angle_tag0@@": "Aquest valor defineix l'angle final de l'interval d'anàlisi horitzontal. El valor s'ha d'especificar en graus de 0 a 360,0, on 0 està orientat al nord. El valor per defecte és 360,0.",
	"@@Viewshed_Horizontal-End-Angle_tag1@@": "Pot ser un camp del dataset <strong>Entitats d'observador</strong> d'entrada o un valor numèric. Si aquest paràmetre està definit en un valor, el valor s'aplicarà a tots els observadors. Per especificar valors diferents per a cada observador, definiu aquest paràmetre en un camp del dataset <strong>Entitats d'observador</strong>.",
	"@@Viewshed_Horizontal-Start-Angle_tag0@@": "Aquest valor defineix l'angle inicial de l'interval d'anàlisi horitzontal. El valor s'ha d'especificar en graus de 0 a 360,0, on 0 està orientat al nord. El valor per defecte és 0.",
	"@@Viewshed_Horizontal-Start-Angle_tag1@@": "Pot ser un camp del dataset <strong>Entitats d'observador</strong> d'entrada o un valor numèric. Si aquest paràmetre està definit en un valor, el valor s'aplicarà a tots els observadors. Per especificar valors diferents per a cada observador, definiu aquest paràmetre en un camp del dataset <strong>Entitats d'observador</strong>.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag0@@": "Tipus de distància del paràmetre de radi intern.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag1@@": "Desactivat: el <strong>radi intern</strong> s'ha d'interpretar com una distància 2D. Aquesta és l'opció per defecte.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag4@@": "Activat: el <strong>radi intern</strong> s'ha d'interpretar com una distància 3D.",
	"@@Viewshed_Inner-Radius_tag0@@": "Aquest valor defineix la distància inicial (mínima) des de la qual es determina la visibilitat. Els píxels més propers que aquesta distància es consideren no visibles a la sortida, però poden continuar bloquejant la visibilitat dels píxels entre el <strong>radi intern</strong> i el <strong>radi extern</strong>. El valor per defecte és 0.",
	"@@Viewshed_Inner-Radius_tag5@@": "Pot ser un camp del dataset <strong>Entitats d'observador</strong> d'entrada o un valor numèric. Si aquest paràmetre està definit en un valor, el valor s'aplicarà a tots els observadors. Per especificar valors diferents per a cada observador, definiu aquest paràmetre en un camp del dataset <strong>Entitats d'observador</strong>.",
	"@@Viewshed_Observer-Elevation_tag0@@": "Aquest valor s'utilitza per definir les elevacions de superfície dels punts o els vèrtexs d'observador.",
	"@@Viewshed_Observer-Elevation_tag1@@": "Pot ser un camp del dataset <strong>Entitats d'observador</strong> d'entrada o un valor numèric. Si aquest paràmetre no s'especifica, l'elevació de l'observador s'obtindrà del ràster de superfície mitjançant la interpolació bilineal. Si aquest paràmetre està definit en un valor, el valor s'aplicarà a tots els observadors. Per especificar valors diferents per a cada observador, definiu aquest paràmetre en un camp del dataset <strong>Entitats d'observador</strong>.",
	"@@Viewshed_Observer-Features_tag0@@": "Classe d'entitat d'entrada necessària que identifica les ubicacions de l'observador. Poden ser entitats de punt, multipunt o polilínia.",
	"@@Viewshed_Observer-Features_tag1@@": "La classe d'entitat d'entrada es transforma en un sistema de coordenades geocèntriques 3D durant el càlcul de la visibilitat. Els observadors que es trobin fora de l'extensió del ràster de superfície o en cel·les NoData s'ignoraran al càlcul.",
	"@@Viewshed_Observer-Offset_tag0@@": "Aquest valor indica una distància vertical (en unitats de superfície) que s'afegirà a l'elevació de l'observador. Ha de ser un enter positiu o un valor de punt flotant.",
	"@@Viewshed_Observer-Offset_tag1@@": "Pot ser un camp del dataset <strong>Entitats d'observador</strong> d'entrada o un valor numèric. Si aquest paràmetre està definit en un valor, el valor s'aplicarà a tots els observadors. Per especificar valors diferents per a cada observador, definiu aquest paràmetre en un camp del dataset <strong>Entitats d'observador</strong>.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag0@@": "Tipus de distància del paràmetre de radi extern.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag1@@": "Desactivat: el <strong>radi extern</strong> s'ha d'interpretar com una distància 2D. Aquesta és l'opció per defecte.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag4@@": "Activat: el <strong>radi extern</strong> s'ha d'interpretar com una distància 3D.",
	"@@Viewshed_Outer-Radius_tag0@@": "Aquest valor defineix la distància màxima des de la qual es determina la visibilitat. Els píxels més enllà d'aquesta distància s'exclouen de l'anàlisi.",
	"@@Viewshed_Outer-Radius_tag1@@": "Pot ser un camp del dataset <strong>Entitats d'observador</strong> d'entrada o un valor numèric. Si aquest paràmetre està definit en un valor, el valor s'aplicarà a tots els observadors. Per especificar valors diferents per a cada observador, definiu aquest paràmetre en un camp del dataset <strong>Entitats d'observador</strong>.",
	"@@Viewshed_Raster_tag0@@": "Ràster de superfície d'entrada necessari. Pot ser un enter o un ràster de punt flotant.",
	"@@Viewshed_Raster_tag1@@": "L'entrada es transforma en un sistema de coordenades geocèntriques 3D durant el càlcul de la visibilitat. Les cel·les NoData del ràster d'entrada no bloquegen la determinació de la visibilitat.",
	"@@Viewshed_Refractive-Coefficient_tag0@@": "Coeficient de refracció de llum visible a l'aire.",
	"@@Viewshed_Refractive-Coefficient_tag1@@": "El valor per defecte és 0,13.",
	"@@Viewshed_Surface-Offset_tag0@@": "Aquest valor indica una distància vertical (en unitats de superfície) que s'afegirà al valor Z de cada píxel de destinació quan es consideri per a la visibilitat. Ha de ser un enter positiu o un valor de punt flotant.",
	"@@Viewshed_Surface-Offset_tag1@@": "Pot ser un camp del dataset <strong>Entitats d'observador</strong> d'entrada o un valor numèric. Si aquest paràmetre està definit en un valor, el valor s'aplicarà a tots els observadors. Per especificar valors diferents per a cada observador, definiu aquest paràmetre en un camp del dataset <strong>Entitats d'observador</strong>.",
	"@@Viewshed_Vertical-Error_tag0@@": "Quantitat d'incertesa, mesurada com error de mitjana quadràtica (RMSE), als valors d'elevació de superfície. És un valor de punt flotant que representa l'error previst dels valors d'elevació d'entrada. Si s'assigna un valor més gran que 0 a aquest paràmetre, el ràster de visibilitat de sortida serà de punt flotant. En aquest cas, cada valor de píxel del ràster de visibilitat de sortida representa la suma de probabilitats que la cel·la sigui visible per a qualsevol dels observadors.",
	"@@Viewshed_Vertical-Error_tag1@@": "Quan el <strong>tipus d'anàlisi</strong> és <strong>Observadors</strong> o el <strong>mètode d'anàlisi</strong> és <strong>Línies de visió de perímetre</strong>, aquest paràmetre està desactivat.",
	"@@Viewshed_Vertical-Lower-Angle_tag0@@": "Aquest valor defineix el límit de l'angle vertical inferior de l'anàlisi per sota d'un pla horitzontal. El valor s'ha d'especificar en graus de -90,0 a 0, que pot ser de tipus enter o punt flotant. El valor per defecte és -90,0.",
	"@@Viewshed_Vertical-Lower-Angle_tag1@@": "Pot ser un camp del dataset <strong>Entitats d'observador</strong> d'entrada o un valor numèric. Si aquest paràmetre està definit en un valor, el valor s'aplicarà a tots els observadors. Per especificar valors diferents per a cada observador, definiu aquest paràmetre en un camp del dataset <strong>Entitats d'observador</strong>.",
	"@@Viewshed_Vertical-Upper-Angle_tag0@@": "Aquest valor defineix el límit de l'angle vertical superior de l'anàlisi per sobre d'un pla horitzontal. El valor s'ha d'especificar en graus de 0 a 90.0, que pot ser de tipus enter o punt flotant. El valor per defecte és 90,0.",
	"@@Viewshed_Vertical-Upper-Angle_tag1@@": "Pot ser un camp del dataset <strong>Entitats d'observador</strong> d'entrada o un valor numèric. Si aquest paràmetre està definit en un valor, el valor s'aplicarà a tots els observadors. Per especificar valors diferents per a cada observador, definiu aquest paràmetre en un camp del dataset <strong>Entitats d'observador</strong>.",
	"@@Watershed_Flow-Direction-Raster_tag0@@": "Ràster d'entrada que mostra la direcció de sortida del flux de cada cel·la.",
	"@@Watershed_Flow-Direction-Raster_tag1@@": "El ràster de direcció del flux es pot crear executant la funció <strong>Direcció del flux</strong>.",
	"@@Watershed_Pour-Point(s)-Raster_tag0@@": "Ubicacions dels punts de fluïdesa d'entrada.",
	"@@Watershed_Pour-Point(s)-Raster_tag1@@": "Aquest ràster representa les cel·les sobre les quals es determinarà l'àrea de contribució (o captació). Totes les cel·les que siguin NoData s'utilitzaran com a cel·les d'origen.",
	"@@Watershed_Pour-Point-Field_tag0@@": "Camp utilitzat per assignar valors a les ubicacions de punts de fluïdesa.",
	"@@Watershed_Pour-Point-Field_tag1@@": "Per a un dataset de punt de fluïdesa de ràster, s'utilitza ${Value} per defecte.",
	"@@Weighted-Overlay_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Weighted-Overlay_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Weighted-Overlay_Cellsize-Type_tag2@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Weighted-Overlay_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Weighted-Overlay_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Weighted-Overlay_Cellsize-Type_tag5@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Weighted-Overlay_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Weighted-Overlay_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Weighted-Overlay_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Weighted-Overlay_Extent-Type_tag3@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Weighted-Overlay_Extent-Type_tag4@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Weighted-Overlay_Scales_tag0@@": "Interval dels valors nous que s'utilitzarà per a la nova representació cartogràfica dels valors antics.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag0@@": "La taula de superposició ponderada consta de quatre parts:",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag1@@": "Capa: tots els ràsters d'entrada han de ser de tipus enter.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag2@@": "Influència: cada ràster d'entrada es pondera segons la seva importància, o la seva influència, com un percentatge relatiu. La suma dels percentatges de les ponderacions d'influència ha de ser igual a 100, i cadascuna de les ponderacions s'ha d'especificar amb un valor enter.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag3@@": "Camp: camp d'enter o cadena al ràster d'entrada que s'utilitzarà per a la ponderació.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag4@@": "Taula de nova representació geogràfica: cada valor d'un ràster d'entrada té assignat un nou valor d'escala segons la taula de nova representació cartogràfica. El valor d'escala pot ser un valor vàlid o un valor NoData.",
	"@@Weighted-Sum_Cellsize-Type_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Weighted-Sum_Cellsize-Type_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Weighted-Sum_Cellsize-Type_tag2@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Weighted-Sum_Cellsize-Type_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Weighted-Sum_Cellsize-Type_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Weighted-Sum_Cellsize-Type_tag5@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Weighted-Sum_Extent-Type_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Weighted-Sum_Extent-Type_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Weighted-Sum_Extent-Type_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Weighted-Sum_Extent-Type_tag3@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Weighted-Sum_Extent-Type_tag4@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag0@@": "La taula de suma ponderada es defineix mitjançant tres propietats:",
	"@@Weighted-Sum_Weighted-Sum-Table_tag1@@": "Capa: ràster que s'està ponderant.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag2@@": "Camp: camp del ràster que s'utilitzarà per a la ponderació.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag3@@": "Pes: valor de pes pel qual es multiplicarà el ràster. Pot ser qualsevol valor decimal positiu o negatiu.",
	"@@Wind-Chill_Temperature-Raster_tag0@@": "Ràster d'una banda on els valors de píxel representen la temperatura ambient de l'aire.",
	"@@Wind-Chill_Temperature-Units_tag0@@": "Unitat de mesura associada al ràster de temperatura d'entrada. Les unitats d'entrada disponibles són Celsius, Fahrenheit i Kelvin.",
	"@@Wind-Chill_Wind-Chill-Units_tag0@@": "Unitat de mesura associada al ràster de sortida. Les unitats de sortida disponibles són Celsius, Fahrenheit i Kelvin.",
	"@@Wind-Chill_Wind-Speed-Raster_tag0@@": "Ràster d'una banda on els valors de píxel representen la velocitat del vent.",
	"@@Wind-Chill_Wind-Speed-Units_tag0@@": "Defineix la unitat de mesura del ràster de velocitat del vent:",
	"@@Wind-Chill_Wind-Speed-Units_tag1@@": "Milles per hora (mph)",
	"@@Wind-Chill_Wind-Speed-Units_tag2@@": "Quilòmetres per hora (km/h)",
	"@@Wind-Chill_Wind-Speed-Units_tag3@@": "Metres per segon (m/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag4@@": "Peus per segon (ft/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag5@@": "Nusos (kn)",
	"@@Zonal-Remap_Background-Value_tag0@@": "Valor del píxel inicial del ràster de sortida, abans que es tornin a representar cartogràficament els píxels d'entrada.",
	"@@Zonal-Remap_Default-Output-Value_tag0@@": "Valor que s'assignarà a un píxel que no compleixi cap de les condicions establertes a la <strong>taula d'atributs zonal</strong>.",
	"@@Zonal-Remap_Default-Output-Value_tag3@@": "També serà el valor del píxel de sortida si no s'especifica el paràmetre <strong>Nom de camp de valor de sortida</strong> o si el valor de sortida del llindar zonal corresponent es deixa sense definir a la <strong>taula d'atributs zonal</strong>.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag0@@": "Nom del camp que conté el valor màxim per sota del qual es farà la nova representació cartogràfica d'un píxel d'entrada.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag1@@": "Si es deixa sense especificar o si el valor del camp és nul, els valors de píxel no es provaran per determinar el màxim.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag0@@": "Nom del camp que conté el valor mínim per sobre del qual es farà la nova representació cartogràfica d'un píxel d'entrada.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag1@@": "Si es deixa sense especificar o si el valor del camp és nul, els valors de píxel no es provaran per determinar el mínim.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag0@@": "Nom del camp que conté el valor de destinació amb el qual es farà la nova representació cartogràfica d'un píxel d'entrada.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag1@@": "Si es deixa sense especificar o si el valor del camp és nul, els valors de píxel dels quals s'ha fet la nova representació cartogràfica es defineixen en <strong>Valor de sortida per defecte</strong>.",
	"@@Zonal-Remap_Value-Raster_tag0@@": "Entrada de ràster d'una banda necessària que conté els valors del píxel que es representaran cartogràficament.",
	"@@Zonal-Remap_Where-Clause_tag0@@": "Una consulta opcional aplicada a la <strong>taula d'atributs zonal</strong>.",
	"@@Zonal-Remap_Where-Clause_tag3@@": "Si la taula anterior s'utilitzava com un exemple, la consulta seria ${Variable1 = 'bare earth' AND Variable2 = 'California'}.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag0@@": "Taula d'entrada necessària que conté com a mínim tres camps. Ha de tenir un valor de llindar mínim, un valor de llindar màxim i un valor de destinació. El valor de destinació és el camp que contindrà el valor de nova representació cartogràfica.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag1@@": "El format del fitxer pot ser una classe d'entitat, un servei d'entitats o qualsevol tipus de taula que s'admeti a l'ArcGIS.",
	"@@Zonal-Remap_Zone-Field_tag0@@": "Nom del camp de la <strong>taula d'atributs zonal</strong> que conté els valors d'ID de zona.",
	"@@Zonal-Remap_Zone-Field_tag3@@": "Els valors d'ID de zona estan directament vinculats als ID de zona del ràster zonal. Proporcionen un altre nivell de filtratge durant la nova representació cartogràfica. Si no hi ha cap ID de zona associat a un registre concret de la taula, no s'inclourà a la nova representació cartogràfica.",
	"@@Zonal-Remap_Zone-Raster_tag0@@": "Ràster d'una banda on cada píxel defineix les zones associades a una ubicació concreta. Una zona es defineix com totes les àrees de l'entrada que tenen el mateix valor. No és necessari que les àrees siguin contigües.",
	"@@Predict-Using-Trend_dimensiondefinition_tag0@@": "Especifica el mètode utilitzat per proporcionar valors de dimensió de predicció.",
	"@@Predict-Using-Trend_dimensiondefinition_tag1@@": "<strong>Per valor</strong>: la predicció es calcularà per a un sol valor de dimensió. Per exemple, si voleu predir les precipitacions anuals dels anys 2050, 2100 i 2150. Aquesta és l'opció per defecte.",
	"@@Predict-Using-Trend_dimensiondefinition_tag2@@": "<strong>Per interval</strong>: la predicció es calcularà per a un interval de la dimensió definida per un valor d'inici i de finalització. Per exemple, si voleu predir les precipitacions anuals de tots els anys entre el 2050 i el 2150.",
	"@@Predict-Using-Trend_end_tag0@@": "La data de finalització, l'altura o la profunditat de l'interval de dimensió que s'utilitzarà a la predicció.",
	"@@Predict-Using-Trend_end_tag1@@": "Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per interval</strong>.",
	"@@Predict-Using-Trend_raster_tag0@@": "Ràster de tendència multidimensional d'entrada de la funció <strong>Genera tendència</strong>.",
	"@@Predict-Using-Trend_start_tag0@@": "La data d'inici, l'altura o la profunditat de l'interval de dimensió que s'utilitzarà a la predicció.",
	"@@Predict-Using-Trend_start_tag1@@": "Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per interval</strong>.",
	"@@Predict-Using-Trend_unit_tag0@@": "Unitat que s'utilitzarà per a l'interval de valors. Aquest paràmetre només s'aplica quan la dimensió de l'anàlisi és una dimensió de temps.",
	"@@Predict-Using-Trend_unit_tag1@@": "<strong>Hores</strong>: la predicció es calcularà per a cada hora dins l'interval de temps descrit pels paràmetres <strong>Inici</strong>, <strong>Finalització</strong> i <strong>Interval de valors</strong>.",
	"@@Predict-Using-Trend_unit_tag2@@": "<strong>Dies</strong>: la predicció es calcularà per a cada dia dins l'interval de temps descrit pels paràmetres <strong>Inici</strong>, <strong>Finalització</strong> i <strong>Interval de valors</strong>.",
	"@@Predict-Using-Trend_unit_tag3@@": "<strong>Setmanes</strong>: la predicció es calcularà per a cada setmana dins l'interval de temps descrit pels paràmetres <strong>Inici</strong>, <strong>Finalització</strong> i <strong>Interval de valors</strong>.",
	"@@Predict-Using-Trend_unit_tag4@@": "<strong>Mesos</strong>: la predicció es calcularà per a cada mes dins l'interval de temps descrit pels paràmetres <strong>Inici</strong>, <strong>Finalització</strong> i <strong>Interval de valors</strong>.",
	"@@Predict-Using-Trend_unit_tag5@@": "<strong>Anys</strong>: la predicció es calcularà per a cada any dins l'interval de temps descrit pels paràmetres <strong>Inici</strong>, <strong>Finalització</strong> i <strong>Interval de valors</strong>.",
	"@@Predict-Using-Trend_valueinterval_tag0@@": "El nombre de passos entre dos valors de dimensió que s'inclouran a la predicció. El valor per defecte és 1.",
	"@@Predict-Using-Trend_valueinterval_tag1@@": "Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per interval</strong>.",
	"@@Predict-Using-Trend_values_tag0@@": "Valor o valors de la dimensió que s'utilitzaran a la predicció.",
	"@@Predict-Using-Trend_values_tag1@@": "El format dels valors de temps, profunditat i altura han de coincidir amb el format dels valors de dimensió que s'utilitzaran per generar el ràster de tendència. Si el ràster de tendència s'ha generat per a la dimensió StdTime, el format ha de ser AAAA-MM-DDTHH:MM:SS, per exemple, 2050-01-01T00:00:00. Diversos valors se separen amb un punt i coma.",
	"@@Process-Raster-Collection_aggregationfunction_tag0@@": "Especifiqueu la plantilla de funció de ràster que voleu utilitzar per agregar diversos sectors en menys sectors o un sol sector.",
	"@@Process-Raster-Collection_dimension_tag0@@": "Dimensió de l'agregació. És la dimensió a la qual s'agregaran les variables.",
	"@@Process-Raster-Collection_itemfunction_tag0@@": "Especifiqueu la plantilla de funció de ràster que voleu utilitzar per processar cada sector o element a la col·lecció de ràster d'entrada.",
	"@@Process-Raster-Collection_keywordinterval_tag0@@": "Especifica l'interval de paraules clau que s'utilitzarà en l'agregació a la dimensió. Aquest paràmetre és obligatori quan <strong>Tipus</strong> s'ha definit en <strong>Paraula clau de l'interval</strong> i l'agregació s'ha de fer al llarg del temps.",
	"@@Process-Raster-Collection_keywordinterval_tag1@@": "<strong>Cada hora</strong>: els valors de les dades s'agregaran en períodes de temps d'hores, i el resultat inclourà cada hora de la sèrie temporal.",
	"@@Process-Raster-Collection_keywordinterval_tag2@@": "<strong>Cada dia</strong>: els valors de les dades s'agregaran en períodes de temps diaris, i el resultat inclourà cada dia de la sèrie temporal.",
	"@@Process-Raster-Collection_keywordinterval_tag3@@": "<strong>Cada setmana</strong>: els valors de les dades s'agregaran en períodes de temps setmanals, i el resultat inclourà cada setmana de la sèrie temporal.",
	"@@Process-Raster-Collection_keywordinterval_tag4@@": "<strong>Cada 10 dies</strong>: els valors de les dades s'agregaran en 3 períodes de 10 dies cadascun. El darrer període pot contenir més o menys de 10 dies. La sortida inclourà 3 sectors per a cada mes.",
	"@@Process-Raster-Collection_keywordinterval_tag5@@": "<strong>Cada 5 dies</strong>: els valors de les dades s'agregaran en 6 períodes de 5 dies cadascun. El darrer període pot contenir més o menys de 5 dies. La sortida inclourà 6 sectors per a cada mes.",
	"@@Process-Raster-Collection_keywordinterval_tag6@@": "<strong>Cada mes</strong>: els valors de les dades s'agregaran en períodes de temps mensuals, i el resultat inclourà cada mes de la sèrie temporal.",
	"@@Process-Raster-Collection_keywordinterval_tag7@@": "<strong>Cada trimestre</strong>: els valors de les dades s'agregaran en períodes de temps trimestrals, i el resultat inclourà cada trimestre de la sèrie temporal.",
	"@@Process-Raster-Collection_keywordinterval_tag8@@": "<strong>Cada any</strong>: els valors de les dades s'agregaran en períodes de temps anuals, i el resultat inclourà cada any de la sèrie temporal.",
	"@@Process-Raster-Collection_keywordinterval_tag9@@": "<strong>Recurrent cada dia</strong>: els valors de les dades s'agregaran en períodes de temps diaris, i el resultat inclourà un valor agregat per dia julià. La sortida inclourà, com a màxim, 366 sectors de temps diaris.",
	"@@Process-Raster-Collection_keywordinterval_tag10@@": "<strong>Recurrent cada setmana</strong>: els valors de les dades s'agregaran en períodes de temps setmanals, i el resultat inclourà un valor agregat per setmana. La sortida inclourà, com a màxim, 53 sectors de temps setmanals.",
	"@@Process-Raster-Collection_keywordinterval_tag11@@": "<strong>Recurrent cada mes</strong>: els valors de les dades s'agregaran en períodes de temps mensuals, i el resultat inclourà un valor agregat per mes. La sortida inclourà, com a màxim, 12 sectors de temps mensuals.",
	"@@Process-Raster-Collection_keywordinterval_tag12@@": "<strong>Recurrent cada trimestre</strong>: els valors de les dades s'agregaran en períodes de temps trimestrals, i el resultat inclourà un valor agregat per trimestre. La sortida inclourà, com a màxim, 4 sectors de temps trimestrals.",
	"@@Process-Raster-Collection_maximumvalue_tag0@@": "Valor màxim d'un interval.",
	"@@Process-Raster-Collection_maximumvalue_tag1@@": "Aquest paràmetre és obligatori quan el paràmetre <strong>Tipus</strong> es defineix en <strong>Rangs de l'interval</strong>.",
	"@@Process-Raster-Collection_minimumvalue_tag0@@": "Valor mínim d'un interval.",
	"@@Process-Raster-Collection_minimumvalue_tag1@@": "Aquest paràmetre és obligatori quan el paràmetre <strong>Tipus</strong> es defineix en <strong>Rangs de l'interval</strong>.",
	"@@Process-Raster-Collection_processingfunction_tag0@@": "Especifiqueu la plantilla de funció de ràster que s'utilitzarà per mostrar la capa ràster processada.",
	"@@Process-Raster-Collection_rastercollection_tag0@@": "Ràster multidimensional d'entrada, capa de mosaic o dataset de mosaic.",
	"@@Process-Raster-Collection_type_tag0@@": "Especifica l'interval de dimensions per al qual s'agregaran les dades.",
	"@@Process-Raster-Collection_type_tag1@@": "<strong>Tots</strong>: els valors de les dades s'agregaran en tots els sectors. Aquesta és l'opció per defecte.",
	"@@Process-Raster-Collection_type_tag2@@": "<strong>Paraula clau de l'interval</strong>: les dades de variables s'agregaran amb un interval conegut comunament.",
	"@@Process-Raster-Collection_type_tag3@@": "<strong>Rangs de l'interval</strong>: les dades de variables s'agregaran entre parells de valors o dates especificats.",
	"@@Process-Raster-Collection_type_tag4@@": "<strong>Valors de l'interval</strong>: les dades de variables s'agregaran amb un interval generalment conegut.",
	"@@Process-Raster-Collection_unit_tag0@@": "Unitat que s'utilitzarà per al valor de l'interval. Aquest paràmetre és obligatori quan la <strong>dimensió</strong> és un camp de temps i el paràmetre <strong>Tipus</strong> es defineix en <strong>Valor de l'interval</strong>.",
	"@@Process-Raster-Collection_unit_tag1@@": "Si feu l'agregació sobre una variable que no és de temps, aquesta opció no estarà disponible i la unitat del valor de l'interval coincidirà amb la unitat de la variable de les dades del ràster multidimensional d'entrada.",
	"@@Process-Raster-Collection_unit_tag2@@": "<strong>Hores</strong>: els valors de les dades s'agregaran en sectors de temps d'hora a l'interval proporcionat.",
	"@@Process-Raster-Collection_unit_tag3@@": "<strong>Dies</strong>: els valors de les dades s'agregaran en sectors de temps diaris a l'interval proporcionat.",
	"@@Process-Raster-Collection_unit_tag4@@": "<strong>Setmanes</strong>: els valors de les dades s'agregaran en sectors de temps setmanals a l'interval proporcionat.",
	"@@Process-Raster-Collection_unit_tag5@@": "<strong>Mesos</strong>: els valors de les dades s'agregaran en sectors de temps mensuals a l'interval proporcionat.",
	"@@Process-Raster-Collection_unit_tag6@@": "<strong>Anys</strong>: els valors de les dades s'agregaran en sectors de temps anuals a l'interval proporcionat.",
	"@@Process-Raster-Collection_valueinterval_tag0@@": "Mida de l'interval que s'utilitzarà per a l'agregació. Aquest paràmetre és obligatori quan el paràmetre <strong>Tipus</strong> es defineix en <strong>Valor de l'interval</strong>.",
	"@@Process-Raster-Collection_valueinterval_tag1@@": "Per exemple, per agregar 30 anys de dades de temperatura mensuals en increments de 5 anys, introduïu 5 com a <strong>Interval de valors</strong> i a <strong>Unitat</strong> especifiqueu <strong>Anys</strong>.",
	"@@Linear-Spectral-Unmixing_non-negative_tag0@@": "Especifica les opcions per definir els valors de píxel de sortida.",
	"@@Linear-Spectral-Unmixing_non-negative_tag1@@": "Activat: no hi haurà valors de sortida negatius.",
	"@@Linear-Spectral-Unmixing_non-negative_tag2@@": "Desactivat: poden haver-hi valors negatius de cobertura de sòl fraccional.",
	"@@Linear-Spectral-Unmixing_raster_tag0@@": "Ràster d'entrada.",
	"@@Linear-Spectral-Unmixing_spectralprofile_tag0@@": "Fitxer de perfil espectral d'entrada.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag0@@": "Informació espectral de les diferents classes de cobertura de sòl.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag1@@": "<strong>Perfil espectral</strong>: un fitxer de definició de classificador d'entrada (${.ecd}), generat a partir de l'eina <strong><strong>Forma el classificador per màxima versemblança</strong></strong>, o un fitxer JavaScript Object Notation (${.json}) que contingui els perfils espectrals de classe.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag2@@": "<strong>Entitat de formació</strong>: entitats de polígon o una classe d'entitat de mostra de formació, generada des de l'<strong>Administrador de mostres de formació</strong>.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag0@@": "Especifica les opcions per definir els valors de píxel de sortida.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag1@@": "Activat: els valors de classe de cada píxel es proporcionen en format decimal i la suma de totes les classes és igual a 1. Per exemple, Classe1 = 0,16; Classe2 = 0,24; Classe3 = 0,60.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag2@@": "Desactivat: la suma de totes les classes d'un píxel pot ser superior a 1.",
	"@@Linear-Spectral-Unmixing_trainingfeature_tag0@@": "Fitxer d'entitat de formació d'entrada.",
	"@@Aggregate_aggregationtechnique_tag0@@": "Mètode utilitzat per a l'agregació. Els valors de les cel·les d'entrada compreses per les cel·les de sortida més imprecises s'agreguen mitjançant una de les estadístiques següents:",
	"@@Aggregate_aggregationtechnique_tag1@@": "<strong>Suma</strong>: total de les cel·les d'entrada. Aquesta és l'opció per defecte.",
	"@@Aggregate_aggregationtechnique_tag2@@": "<strong>Màxim</strong>: valor més gran de les cel·les d'entrada.",
	"@@Aggregate_aggregationtechnique_tag3@@": "<strong>Mitjana</strong>: valor mitjà de les cel·les d'entrada.",
	"@@Aggregate_aggregationtechnique_tag4@@": "<strong>Mediana</strong>: valor medià de les cel·les d'entrada.",
	"@@Aggregate_aggregationtechnique_tag5@@": "<strong>Mínim</strong>: valor més petit de les cel·les d'entrada.",
	"@@Aggregate_cellfactor_tag0@@": "Factor pel que es multiplicarà la mida de cel·la del ràster d'entrada.",
	"@@Aggregate_cellfactor_tag1@@": "Por ejemplo, un valor de factor de celda de tres generará como resultado un tamaño de celda de salida tres veces mayor que el del ráster de entrada.",
	"@@Aggregate_expandextentifneeded_tag0@@": "Define cómo se gestionan los límites del ráster de entrada cuando sus filas o columnas no son múltiplos del factor de celda.",
	"@@Aggregate_expandextentifneeded_tag1@@": "Activat: expandeix els límits superiors o de la dreta del ràster d'entrada de manera que la quantitat total de cel·les d'una fila o una columna sigui un múltiple del factor de cel·la. Con esta opción, el ráster de salida puede cubrir una extensión espacial más amplia que la del ráster de entrada. Aquesta és l'opció per defecte.",
	"@@Aggregate_expandextentifneeded_tag2@@": "Desactivat: redueix el nombre de files o columnes del ràster de sortida. La resta de cel·les dels límits superior o de la dreta del ràster d'entrada es truncaran, de manera que el nombre de files o columnes del ràster d'entrada sigui un múltiple del factor de cel·la. Con esta opción, el ráster de salida puede cubrir una extensión espacial más reducida que la del ráster de entrada.",
	"@@Aggregate_ignorenodataincalculations_tag0@@": "Indica si el càlcul d'agregació ignora els valors ${NoData}.",
	"@@Aggregate_ignorenodataincalculations_tag1@@": "Activat: especifica que, si hi ha valors ${NoData} de qualsevol de les cel·les que estan dins l'extensió espacial d'una cel·la més gran al ràster de sortida, els valors ${NoData} s'ignoraran quan es determini el valor de les ubicacions de cel·les de sortida. Per determinar el valor de la cel·la de sortida, només s'utilitzaran les cel·les d'entrada dins de l'extensió de la cel·la de sortida que continguin valors de dades. Aquesta és l'opció per defecte.",
	"@@Aggregate_ignorenodataincalculations_tag2@@": "Desactivat: especifica que, si qualsevol de les cel·les que estan dins l'extensió espacial d'una cel·la més gran al ràster de sortida té un valor ${NoData}, el valor d'aquesta ubicació de cel·la de sortida serà ${NoData}. Utilitzar aquesta opció implica que, quan les cel·les en una agregació contenen el valor ${NoData}, no hi ha prou informació per fer els càlculs especificats necessaris per determinar un valor de sortida.",
	"@@Aggregate_raster_tag0@@": "Ràster d'entrada que s'agregarà.",
	"@@Expand_numberofcells_tag0@@": "Nombre de cel·les que s'expandirà.",
	"@@Expand_numberofcells_tag1@@": "El valor ha de ser un enter i pot ser 1 o superior.",
	"@@Expand_raster_tag0@@": "Ràster d'entrada per al qual s'expandiran les zones identificades.",
	"@@Expand_raster_tag1@@": "Ha de ser de tipus enter.",
	"@@Expand_zonevalues_tag0@@": "Llista de zones que s'expandiran.",
	"@@Expand_zonevalues_tag1@@": "Els valors de zona han de ser enters i poden estar en qualsevol ordre.",
	"@@Expand_zonevalues_tag2@@": "Per especificar diverses zones, feu servir un espai per separar els valors de zona.",
	"@@Multidimensional-Filter_dimension_tag0@@": "Dimensió de la qual s'extrauran les variables.",
	"@@Multidimensional-Filter_dimensiondefinition_tag0@@": "Especifica el mètode que s'utilitzarà per dividir l'anomalia en sectors.",
	"@@Multidimensional-Filter_dimensiondefinition_tag1@@": "<strong>Tot</strong>: s'utilitzarà l'interval complet de cada dimensió. Aquesta és l'opció per defecte.",
	"@@Multidimensional-Filter_dimensiondefinition_tag2@@": "<strong>Per valors</strong>: la dimensió es dividirà en sectors utilitzant un valor de dimensió o una llista de valors.",
	"@@Multidimensional-Filter_dimensiondefinition_tag3@@": "<strong>Per intervals</strong>: la dimensió es dividirà en sectors utilitzant un interval o una llista d'intervals.",
	"@@Multidimensional-Filter_dimensiondefinition_tag4@@": "<strong>Per iteració</strong>: la dimensió es dividirà en sectors en una mida d'interval especificada.",
	"@@Multidimensional-Filter_endoffirstiteration_tag0@@": "El final del primer interval. Aquest interval s'utilitza per iterar al dataset. Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per iteració</strong>.",
	"@@Multidimensional-Filter_maximumvalue_tag0@@": "Valor màxim de l'interval. Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per intervals</strong>.",
	"@@Multidimensional-Filter_minimumvalue_tag0@@": "Valor mínim de l'interval. Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per intervals</strong>.",
	"@@Multidimensional-Filter_raster_tag0@@": "Ràster multidimensional d'entrada.",
	"@@Multidimensional-Filter_ranges_tag0@@": "<p>Els rangs de l'interval especificats en una taula s'utilitzen per agregar grups de valors. Els valors mínim i màxim especifiquen l'interval que s'inclourà.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Tipus</strong>s'estableix en<strong>Rangs de l'interval</strong>.</p>",
	"@@Multidimensional-Filter_startoffirstiteration_tag0@@": "L'inici del primer interval. Aquest interval s'utilitza per iterar al dataset. Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per iteració</strong>.",
	"@@Multidimensional-Filter_step_tag0@@": "Freqüència amb què les dades es dividiran en sectors. Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per iteració</strong>. El valor per defecte és 3.",
	"@@Multidimensional-Filter_unit_tag0@@": "Especifica la unitat d'iteració. Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per iteració</strong> i el paràmetre <strong>Dimensió</strong> es defineix en <strong>StdTime</strong>.",
	"@@Multidimensional-Filter_value_tag0@@": "Valor de la dimensió especificada. Aquest paràmetre és obligatori quan el paràmetre <strong>Definició de la dimensió</strong> es defineix en <strong>Per valors</strong>.",
	"@@Multidimensional-Filter_variables_tag0@@": "Variables que s'inclouran a la capa ràster multidimensional de sortida. Si no s'ha especificat cap variable, es farà servir la primera.",
	"@@Multidimensional-Filter_dimensionless_tag0@@": "Especifica si la capa ha de tenir valors de dimensió. Aquesta opció només està disponible si s'ha seleccionat un sol sector per crear una capa.",
	"@@Multidimensional-Filter_dimensionless_tag1@@": "Activat: la capa no tindrà valors de dimensió.",
	"@@Multidimensional-Filter_dimensionless_tag2@@": "Desactivat: la capa tindrà un valor de dimensió. Aquesta és l'opció per defecte.",
	"@@Multidimensional-Raster_interpolationcellsize_tag0@@": "Mida de cel·la del ràster interpolat. El valor per defecte és ${1}.",
	"@@Multidimensional-Raster_interpolationmethod_tag0@@": "Mètode de remostreig utilitzat per interpolar dades irregulars.",
	"@@Multidimensional-Raster_interpolationmethod_tag1@@": "<strong>Veí més proper</strong>: calcula el valor del píxel de sortida mitjançant el píxel d'entrada més proper. Si no existeix cap píxel d'origen, no es podrà crear cap píxel nou a la sortida. Aquesta és l'opció per defecte.",
	"@@Multidimensional-Raster_interpolationmethod_tag2@@": "<strong>Simplificació lineal</strong>: utilitza una xarxa irregular de triangles des del punt central de cada píxel del ràster irregular per interpolar una superfície que, aleshores, es converteix en un ràster regular.",
	"@@Multidimensional-Raster_interpolationmethod_tag3@@": "<strong>Veí natural</strong>: cerca el subconjunt més proper de les mostres d'entrada a un punt de consulta i hi aplica ponderacions basades en àrees proporcionades per interpolar un valor.",
	"@@Multidimensional-Raster_interpolationmethod_tag4@@": "<strong>Ponderació de distància inversa</strong>: determina els valors de píxel mitjançant una combinació ponderada de manera lineal d'un conjunt de punts o cel·les de mostra. La funció de ponderació és la inversa de la distància des dels píxels o els punts coneguts.",
	"@@Multidimensional-Raster_raster_tag0@@": "Ràster multidimensional d'entrada.",
	"@@Multidimensional-Raster_variables_tag0@@": "Variable o variables que s'inclouran a la capa ràster multidimensional.",
	"@@Random_distribution_tag0@@": "Especifiqueu el mètode de distribució de valors aleatoris que voleu utilitzar.",
	"@@Random_distribution_tag1@@": "<strong>Uniforme</strong> (Mínim, Màxim): una distribució uniforme amb un interval definit. Els valors per defecte són 0 per a Mínim i 1 per a Màxim. Aquesta és l'opció per defecte.",
	"@@Random_distribution_tag2@@": "<strong>Enter</strong> (Mínim, Màxim): una distribució d'enters amb un interval definit. Els valors per defecte són 1 per a Mínim i 10 per a Màxim.",
	"@@Random_distribution_tag3@@": "<strong>Normal</strong> (Mitjana, Desviació estàndard): una distribució normal amb una mitjana definida i una desviació estàndard. Els valors per defecte són 0 per a Mitjana i 1 per a Desviació estàndard.",
	"@@Random_distribution_tag4@@": "<strong>Exponencial</strong> (Mitjana): una distribució exponencial amb una mitjana definida. El valor per defecte és 1.",
	"@@Random_distribution_tag5@@": "<strong>Poisson</strong> (Mitjana): una distribució de Poisson amb una mitjana definida. El valor per defecte és 1.",
	"@@Random_distribution_tag6@@": "<strong>Gamma</strong> (Alfa, Beta): una distribució gamma amb un valor alfa i un valor beta definits. Els valors per defecte són 1 per a Alfa i 1 per a Beta.",
	"@@Random_distribution_tag7@@": "<strong>Binomial</strong> (N, Probabilitat): una distribució binomial amb un valor N i una probabilitat definits. Els valors per defecte són 10 per a N i 0,5 per a Probabilitat.",
	"@@Random_distribution_tag8@@": "<strong>Geomètrica</strong> (Probabilitat): una distribució geomètrica amb una probabilitat definida. El valor per defecte és 0,5.",
	"@@Random_distribution_tag9@@": "<strong>Binomial negativa</strong> (r, Probabilitat): una distribució de Pascal amb un valor r i una probabilitat definits. Els valors per defecte són 10,0 per a r i 0,5 per a Probabilitat.",
	"@@Random_randomnumbergenerator_tag0@@": "Especifiqueu l'algoritme de generació aleatòria que fa servir el punt d'origen i la distribució per produir una seqüència de nombres aleatoris. Les opcions disponibles són les següents:",
	"@@Random_randomnumbergenerator_tag1@@": "Rand C estándar",
	"@@Random_randomnumbergenerator_tag2@@": "Algoritmo 599 capturado por ACM",
	"@@Random_randomnumbergenerator_tag3@@": "Mersenne Twister",
	"@@Random_randomnumbergenerator_tag4@@": "El valor per defecte és Mersenne Twister.",
	"@@Random_rasterinfo_tag0@@": "Utilitzeu el botó <strong>Carrega el ràster de la plantilla</strong> per carregar una plantilla des d'un directori o un portal.",
	"@@Random_seed_tag0@@": "El valor d'inicialització és un valor enter que es fa servir per iniciar el generador de nombres aleatoris. El valor per defecte és 1.",
	"@@Shrink_numberofcells_tag0@@": "Nombre de cel·les pel que es reduirà cadascuna de les zones especificades.",
	"@@Shrink_numberofcells_tag1@@": "El valor ha de ser un enter i pot ser 1 o superior.",
	"@@Shrink_raster_tag0@@": "Ràster d'entrada per al qual es reduiran les zones identificades.",
	"@@Shrink_raster_tag1@@": "Ha de ser de tipus enter.",
	"@@Shrink_zonevalues_tag0@@": "Llista de zones que es reduiran.",
	"@@Shrink_zonevalues_tag1@@": "Els valors de zona han de ser enters i poden estar en qualsevol ordre.",
	"@@Shrink_zonevalues_tag2@@": "Per especificar diverses zones, feu servir un espai per separar els valors de zona.",
	"@@Distance-Accumulation_costraster_tag0@@": "Ràster que defineix el cost o la impedància del moviment planimètric a través de cada cel·la. El valor de cada ubicació de cel·la representa la distància de cost per unitat per moure's a través de la cel·la. Cada valor d'ubicació de cel·la es multiplica per la resolució de la cel·la i també es compensa el moviment diagonal per obtenir el cost total de passar a través de la cel·la.",
	"@@Distance-Accumulation_costraster_tag1@@": "Els valors del <strong>ràster de costos</strong> poden ser enters o punts flotants, però no poden ser negatius ni zero.",
	"@@Distance-Accumulation_distancemethod_tag0@@": "Determina si es calcularà la distància mitjançant un mètode pla (terra plana) o geodèsic (el·lipsoide).",
	"@@Distance-Accumulation_distancemethod_tag1@@": "Pla: les mesures planes utilitzen matemàtiques cartesianes 2D per calcular la longitud i l'àrea. L'opció només està disponible quan es mesura en un sistema de coordenades projectades, i el pla 2D d'aquest sistema de coordenades s'utilitzarà com a base per a les mesures.",
	"@@Distance-Accumulation_distancemethod_tag2@@": "Geodèsic: línia més curta entre dos punts a la superfície terrestre en un esferoide (el·lipsoide). Per tant, independentment de la projecció d'entrada o de sortida, els resultats no canvien.",
	"@@Distance-Accumulation_distancemethod_tag3@@": "<strong>Nota:</strong> una línia geodèsica es pot utilitzar quan voleu determinar la distància més curta entre dues ciutats per definir una ruta de vol. També es coneix com a línia ortodròmica si es basa en una esfera en lloc de basar-se en un el·lipsoide.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag0@@": "Determina si només es crea el ràster d'acumulació o bé si es crea un ràster multibanda format per un ràster d'acumulació de distància i un ràster de direcció inversa.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag1@@": "Desactivat: el resultat és el ràster d'acumulació de distància. És un resultat de banda única. Aquesta és l'opció per defecte.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag2@@": "Activat: es crea un resultat multibanda. La primera banda és el ràster d'acumulació de distància i la segona banda és el ràster de direcció inversa.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag3@@": "El ràster de direcció inversa calcula per a cada cel·la la direcció en graus a la cel·la veïna, a més de la ruta més curta de tornada a la font més propera, a la vegada que evita les barreres.",
	"@@Distance-Accumulation_horizontalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost horitzontal i l'angle de moviment relatiu horitzontal (HRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: HF i HRMA. HF significa \"factor horitzontal\", que defineix la dificultat horitzontal que s'experimenta en passar d'una cel·la a la següent. HRMA significa \"angle de moviment relatiu horitzontal\", i identifica l'angle entre la direcció horitzontal d'una cel·la i la direcció del moviment.</p><p>Els tipus <strong>Factor horitzontal</strong> són:</p><ul><li><strong>Binari</strong>: indica que, si HRMA és inferior a l'angle de tall, l'HF es defineix en el valor associat amb el factor zero; altrament, és infinit.</li><li><strong>Endavant</strong>: estableix que només es permet el moviment cap endavant. L'HRMA ha de ser superior o igual a 0 i inferior a 90 graus (0 &lt;= HRMA &lt; 90). Si l'HRMA és superior a 0 i inferior a 45 graus, l'HF de la cel·la es defineix en el valor associat al factor zero. Si l'HRMA és superior o igual a 45 graus, s'utilitza el valor modificador del valor lateral. L'HF per a qualsevol valor d'HRMA igual o superior a 90 es defineix en infinit.</li><li><strong>Lineal</strong>: especifica que l'HF és una funció lineal de l'HRMA.</li><li><strong>Lineal invers</strong>: especifica que l'HF és una funció lineal inversa de l'HRMA.</li><li><strong>Taula</strong>: identifica el fitxer de taula que s'utilitzarà per definir el gràfic de factor horitzontal emprat per determinar els HF.</li></ul><p>Els modificadors per als factors horitzontals són:</p><ul><li><strong>Factor zero</strong>: factor horitzontal que cal utilitzar quan HRMA és zero. Aquest factor posiciona la intercepció \"y\" per a qualsevol de les funcions de factor horitzontal.</li><li><strong>Angle de tall</strong>: defineix l'angle d'HRMA més enllà del qual l'HF es definirà en infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor horitzontal <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció de la pujada sobre la baixada (per exemple, un pendent del 45% és 1/45, que s'introdueix com a 0,02222).</li><li><strong>Valor lateral</strong>: estableix l'HF quan l'HRMA és superior o igual a 45 graus i és inferior a 90 graus quan s'especifica la paraula clau de factor horitzontal <strong>Endavant</strong>.</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix l'HF.</li></ul>",
	"@@Distance-Accumulation_horizontalraster_tag0@@": "Ràster que defineix la direcció horitzontal a cada cel·la.",
	"@@Distance-Accumulation_horizontalraster_tag1@@": "Els valors del ràster han de ser enters de 0 a 360, amb 0 graus al nord o cap a la part superior de la pantalla, que augmentin en sentit horari. Les àrees planes han de tenir assignat un valor de -1. Els valors en cada ubicació s'utilitzaran juntament amb el <strong>factor horitzontal</strong> per determinar el cost horitzontal que es produeix en passar d'una cel·la a les veïnes.",
	"@@Distance-Accumulation_initialaccumulation_tag0@@": "Cost acumulatiu inicial per iniciar el càlcul del cost. Aquest paràmetre permet l'especificació del cost fix associat a un origen. En lloc de començar amb un cost de 0, l'algoritme de cost ho farà amb el valor especificat.",
	"@@Distance-Accumulation_initialaccumulation_tag1@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Distance-Accumulation_initialaccumulation_tag2@@": "El valor ha de ser zero o superior. El valor per defecte és 0.",
	"@@Distance-Accumulation_maximumaccumulation_tag0@@": "Defineix el cost acumulatiu màxim del viatger d'un origen. Els càlculs de cost continuen per a cada origen fins a assolir la capacitat especificada.",
	"@@Distance-Accumulation_maximumaccumulation_tag1@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Distance-Accumulation_maximumaccumulation_tag2@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag0@@": "Multiplicador que s'aplicarà als valors dels costos.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag1@@": "Aquest paràmetre permet controlar el mode de viatge o la magnitud en un origen. Com major sigui el multiplicador, més alt serà el cost del moviment a través de cada cel·la.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag2@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag3@@": "Els valors han de ser més grans que zero. El valor per defecte és 1.",
	"@@Distance-Accumulation_rasterbarriers_tag0@@": "Ràster que defineix les barreres.",
	"@@Distance-Accumulation_rasterbarriers_tag1@@": "El dataset ha de contenir NoData allà on no hi ha barreres. Les barreres es representen amb valors vàlids, que inclouen el zero.",
	"@@Distance-Accumulation_rasterbarriers_tag2@@": "Les barreres es poden definir amb un enter o un ràster de punt flotant.",
	"@@Distance-Accumulation_sourceraster_tag0@@": "Ubicacions d'origen d'entrada.",
	"@@Distance-Accumulation_sourceraster_tag1@@": "Aquest és un dataset ràster que identifica les cel·les o les ubicacions des de les quals s'ha calculat la distància de menor cost acumulat de la ubicació de cada cel·la de sortida.",
	"@@Distance-Accumulation_sourceraster_tag2@@": "Pot ser de tipus enter o punt flotant.",
	"@@Distance-Accumulation_surfaceraster_tag0@@": "Ràster que defineix els valors d'elevació a la ubicació de cada cel·la.",
	"@@Distance-Accumulation_surfaceraster_tag1@@": "Els valors s'utilitzen per calcular la distància de superfície real coberta en passar entre cel·les.",
	"@@Distance-Accumulation_traveldirection_tag0@@": "Defineix la direcció del viatger en aplicar el factor vertical, el factor horitzontal i la taxa de resistència de l'origen.",
	"@@Distance-Accumulation_traveldirection_tag1@@": "<strong>Des de l'origen</strong>: el factor vertical, el factor horitzontal i la taxa de resistència de l'origen s'aplicaran començant per l'origen d'entrada i passant a les cel·les que no són la d'origen. Aquesta és l'opció per defecte.",
	"@@Distance-Accumulation_traveldirection_tag2@@": "<strong>Fins a l'origen</strong>: el factor vertical, el factor horitzontal i la taxa de resistència de l'origen s'aplicaran començant per cada cel·la que no sigui la d'origen i tornant a l'origen d'entrada.",
	"@@Distance-Accumulation_traveldirection_tag3@@": "Especifiqueu la paraula clau <strong>Des de l'origen</strong> o <strong>Fins a l'origen</strong>, que s'aplicarà a tots els orígens o especifiqueu un camp al <strong>ràster d'origen</strong> que contingui les paraules clau per identificar la direcció de viatge de cada origen. Aquest camp ha de contenir la cadena ${FROM_SOURCE} o ${TO_SOURCE}.",
	"@@Distance-Accumulation_verticalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: VF i VRMA. VF significa \"factor vertical\", que defineix la dificultat vertical que s'experimenta en passar d'una cel·la a la següent. VRMA significa \"angle de moviment relatiu vertical\", i identifica l'angle d'inclinació entre la cel·la d'origen, o processament, i la cel·la de destinació.Els tipus </p><p><strong>Factor vertical</strong> són:</p><ul><li><strong>Binari</strong>: especifica que, si el VRMA és major que l'angle de tall baix i menor que l'angle de tall alt, el VF es defineix en el valor associat al factor zero; altrament, és infinit.</li><li><strong>Lineal</strong>: indica que el VF és una funció lineal del VRMA.</li><li><strong>Lineal simètric</strong>: especifica que el VF és una funció lineal del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Lineal invers</strong>: indica que el VF és una funció lineal inversa del VRMA.</li><li><strong>Lineal invers simètric</strong>: especifica que el VF és una funció lineal inversa del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Cos</strong>: identifica el VF com la funció basada en el cosinus del VRMA.</li><li><strong>Sec</strong>: identifica el VF com la funció basada en la secant del VRMA.</li><li><strong>Cos-Sec</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Sec-Cos</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Taula</strong>: identifica que s'utilitzarà un fitxer de taula per definir el gràfic de factor vertical utilitzat per determinar els VF.</li></ul><p>Alguns modificadors per a les paraules claus verticals són:</p><ul><li><strong>Factor zero</strong>: estableix el factor vertical utilitzat si el VRMA és zero. Aquest factor col·loca la intercepció y de la funció especificada. Per definició, el factor zero no és aplicable a cap de les funcions verticals trigonomètriques (COS, SEC, COS-SEC o SEC-COS). Aquestes funcions defineixen la intercepció y.</li><li><strong>Angle de tall baix</strong>: defineix l'angle VRMA per sota del qual es definirà un VF infinit.</li><li><strong>Angle de tall alt</strong>: defineix l'angle VRMA per sobre del qual es definirà un VF infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor vertical <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció d'elevació sobre l'extensió (per exemple, un pendent del 45 % és 1/45, que s'especifica com 0,02222).</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix el VF.</li></ul>",
	"@@Distance-Accumulation_verticalraster_tag0@@": "Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).",
	"@@Distance-Accumulation_verticalraster_tag1@@": "Els valors s'utilitzen per calcular el pendent utilitzat per identificar el factor vertical que es produeix en passar d'una cel·la a una altra.",
	"@@Distance-Allocation_costraster_tag0@@": "Ràster que defineix el cost o la impedància del moviment planimètric a través de cada cel·la. El valor de cada ubicació de cel·la representa la distància de cost per unitat per moure's a través de la cel·la. Cada valor d'ubicació de cel·la es multiplica per la resolució de la cel·la i també es compensa el moviment diagonal per obtenir el cost total de passar a través de la cel·la.",
	"@@Distance-Allocation_costraster_tag1@@": "Els valors del <strong>ràster de costos</strong> poden ser enters o punts flotants, però no poden ser negatius ni zero.",
	"@@Distance-Allocation_distancemethod_tag0@@": "Determina si es calcularà la distància mitjançant un mètode pla (terra plana) o geodèsic (el·lipsoide).",
	"@@Distance-Allocation_distancemethod_tag1@@": "Pla: les mesures planes utilitzen matemàtiques cartesianes 2D per calcular la longitud i l'àrea. L'opció només està disponible quan es mesura en un sistema de coordenades projectades, i el pla 2D d'aquest sistema de coordenades s'utilitzarà com a base per a les mesures.",
	"@@Distance-Allocation_distancemethod_tag2@@": "Geodèsic: línia més curta entre dos punts a la superfície terrestre en un esferoide (el·lipsoide). Per tant, independentment de la projecció d'entrada o de sortida, els resultats no canvien.",
	"@@Distance-Allocation_distancemethod_tag3@@": "<strong>Nota:</strong> una línia geodèsica es pot utilitzar quan voleu determinar la distància més curta entre dues ciutats per definir una ruta de vol. També es coneix com a línia ortodròmica si es basa en una esfera en lloc de basar-se en un el·lipsoide.",
	"@@Distance-Allocation_horizontalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost horitzontal i l'angle de moviment relatiu horitzontal (HRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: HF i HRMA. HF significa \"factor horitzontal\", que defineix la dificultat horitzontal que s'experimenta en passar d'una cel·la a la següent. HRMA significa \"angle de moviment relatiu horitzontal\", i identifica l'angle entre la direcció horitzontal d'una cel·la i la direcció del moviment.</p><p>Els tipus <strong>Factor horitzontal</strong> són:</p><ul><li><strong>Binari</strong>: indica que, si HRMA és inferior a l'angle de tall, l'HF es defineix en el valor associat amb el factor zero; altrament, és infinit.</li><li><strong>Endavant</strong>: estableix que només es permet el moviment cap endavant. L'HRMA ha de ser superior o igual a 0 i inferior a 90 graus (0 &lt;= HRMA &lt; 90). Si l'HRMA és superior a 0 i inferior a 45 graus, l'HF de la cel·la es defineix en el valor associat al factor zero. Si l'HRMA és superior o igual a 45 graus, s'utilitza el valor modificador del valor lateral. L'HF per a qualsevol valor d'HRMA igual o superior a 90 es defineix en infinit.</li><li><strong>Lineal</strong>: especifica que l'HF és una funció lineal de l'HRMA.</li><li><strong>Lineal invers</strong>: especifica que l'HF és una funció lineal inversa de l'HRMA.</li><li><strong>Taula</strong>: identifica el fitxer de taula que s'utilitzarà per definir el gràfic de factor horitzontal emprat per determinar els HF.</li></ul><p>Els modificadors per als factors horitzontals són:</p><ul><li><strong>Factor zero</strong>: factor horitzontal que cal utilitzar quan HRMA és zero. Aquest factor posiciona la intercepció \"y\" per a qualsevol de les funcions de factor horitzontal.</li><li><strong>Angle de tall</strong>: defineix l'angle d'HRMA més enllà del qual l'HF es definirà en infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor horitzontal <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció de la pujada sobre la baixada (per exemple, un pendent del 45% és 1/45, que s'introdueix com a 0,02222).</li><li><strong>Valor lateral</strong>: estableix l'HF quan l'HRMA és superior o igual a 45 graus i és inferior a 90 graus quan s'especifica la paraula clau de factor horitzontal <strong>Endavant</strong>.</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix l'HF.</li></ul>",
	"@@Distance-Allocation_horizontalraster_tag0@@": "Ràster que defineix la direcció horitzontal a cada cel·la.",
	"@@Distance-Allocation_horizontalraster_tag1@@": "Els valors del ràster han de ser enters de 0 a 360, amb 0 graus al nord o cap a la part superior de la pantalla, que augmentin en sentit horari. Les àrees planes han de tenir assignat un valor de -1. Els valors en cada ubicació s'utilitzaran juntament amb el <strong>factor horitzontal</strong> per determinar el cost horitzontal que es produeix en passar d'una cel·la a les veïnes.",
	"@@Distance-Allocation_initialaccumulation_tag0@@": "Cost acumulatiu inicial per iniciar el càlcul del cost. Aquest paràmetre permet l'especificació del cost fix associat a un origen. En lloc de començar amb un cost de 0, l'algoritme de cost ho farà amb el valor especificat.",
	"@@Distance-Allocation_initialaccumulation_tag1@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Distance-Allocation_initialaccumulation_tag2@@": "El valor ha de ser zero o superior. El valor per defecte és 0.",
	"@@Distance-Allocation_maximumaccumulation_tag0@@": "Defineix el cost acumulatiu màxim del viatger d'un origen. Els càlculs de cost continuen per a cada origen fins a assolir la capacitat especificada.",
	"@@Distance-Allocation_maximumaccumulation_tag1@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Distance-Allocation_maximumaccumulation_tag2@@": "El valor ha de ser més gran que zero. La capacitat per defecte és al llindar del ràster de sortida.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag0@@": "Multiplicador que s'aplicarà als valors dels costos.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag1@@": "Aquest paràmetre permet controlar el mode de viatge o la magnitud en un origen. Com major sigui el multiplicador, més alt serà el cost del moviment a través de cada cel·la.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag2@@": "Els valors han de ser més grans que zero. El valor per defecte és 1.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag3@@": "Per a aquest paràmetre, es poden utilitzar un valor numèric (doble) o un camp del <strong>ràster d'origen</strong>.",
	"@@Distance-Allocation_rasterbarriers_tag0@@": "Ràster que defineix les barreres.",
	"@@Distance-Allocation_rasterbarriers_tag1@@": "El dataset ha de contenir NoData allà on no hi ha barreres. Les barreres es representen amb valors vàlids, que inclouen el zero.",
	"@@Distance-Allocation_rasterbarriers_tag2@@": "Les barreres es poden definir amb un enter o un ràster de punt flotant.",
	"@@Distance-Allocation_sourcefield_tag0@@": "Camp utilitzat per assignar valors a les ubicacions d'origen. Ha de ser de tipus enter.",
	"@@Distance-Allocation_sourceraster_tag0@@": "Ubicacions d'origen d'entrada.",
	"@@Distance-Allocation_sourceraster_tag1@@": "Aquest és un dataset ràster que identifica les cel·les o les ubicacions des de les quals s'ha calculat la distància de menor cost acumulat de la ubicació de cada cel·la de sortida.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag0@@": "Determina si només es crea un ràster d'assignació o bé si es crea un resultat multibanda.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag1@@": "Desactivat: el resultat és el ràster d'assignació de distància. És un resultat de banda única. Aquesta és l'opció per defecte.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag2@@": "Activat: es crea un ràster multibanda. La primera banda és el ràster d'assignació de distància, la segona banda conté un índex de files i la tercera banda conté un índex de columnes. Aquests índex identifiquen la ubicació de la cel·la d'origen amb la menor distància de cost acumulat.",
	"@@Distance-Allocation_surfaceraster_tag0@@": "Ràster que defineix els valors d'elevació a la ubicació de cada cel·la.",
	"@@Distance-Allocation_surfaceraster_tag1@@": "Els valors s'utilitzen per calcular la distància de superfície real coberta en passar entre cel·les.",
	"@@Distance-Allocation_traveldirection_tag0@@": "Defineix la direcció del viatger en aplicar el factor vertical, el factor horitzontal i la taxa de resistència de l'origen.",
	"@@Distance-Allocation_traveldirection_tag1@@": "<strong>Des de l'origen</strong>: el factor vertical, el factor horitzontal i la taxa de resistència de l'origen s'aplicaran començant per l'origen d'entrada i passant a les cel·les que no són la d'origen. Aquesta és l'opció per defecte.",
	"@@Distance-Allocation_traveldirection_tag2@@": "<strong>Fins a l'origen</strong>: el factor vertical, el factor horitzontal i la taxa de resistència de l'origen s'aplicaran començant per cada cel·la que no sigui la d'origen i tornant a l'origen d'entrada.",
	"@@Distance-Allocation_traveldirection_tag3@@": "Especifiqueu la paraula clau <strong>Des de l'origen</strong> o <strong>Fins a l'origen</strong>, que s'aplicarà a tots els orígens o especifiqueu un camp al <strong>ràster d'origen</strong> que contingui les paraules clau per identificar la direcció de viatge de cada origen. Aquest camp ha de contenir la cadena ${FROM_SOURCE} o ${TO_SOURCE}.",
	"@@Distance-Allocation_verticalfactor_tag0@@": "<p>Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).</p><p>Hi ha diversos factors amb modificadors que identifiquen un gràfic de factor vertical definit. A més, es pot utilitzar una taula per crear un gràfic personalitzat. Els gràfics s'utilitzen per identificar el factor vertical utilitzat per calcular el cost total del moviment a una cel·la veïna.</p><p>A les explicacions següents s'utilitzen dos acrònims: VF i VRMA. VF significa \"factor vertical\", que defineix la dificultat vertical que s'experimenta en passar d'una cel·la a la següent. VRMA significa \"angle de moviment relatiu vertical\", i identifica l'angle d'inclinació entre la cel·la d'origen, o processament, i la cel·la de destinació.Els tipus </p><p><strong>Factor vertical</strong> són:</p><ul><li><strong>Binari</strong>: especifica que, si el VRMA és major que l'angle de tall baix i menor que l'angle de tall alt, el VF es defineix en el valor associat al factor zero; altrament, és infinit.</li><li><strong>Lineal</strong>: indica que el VF és una funció lineal del VRMA.</li><li><strong>Lineal simètric</strong>: especifica que el VF és una funció lineal del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Lineal invers</strong>: indica que el VF és una funció lineal inversa del VRMA.</li><li><strong>Lineal invers simètric</strong>: especifica que el VF és una funció lineal inversa del VRMA a la part negativa o positiva del VRMA, respectivament, i les dues funcions lineals són simètriques respecte de l'eix del VF (y).</li><li><strong>Cos</strong>: identifica el VF com la funció basada en el cosinus del VRMA.</li><li><strong>Sec</strong>: identifica el VF com la funció basada en la secant del VRMA.</li><li><strong>Cos-Sec</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Sec-Cos</strong>: especifica que el VF és la funció basada en el cosinus del VRMA si el VRMA és negatiu i la funció basada en la secant del VRMA si el VRMA no és negatiu.</li><li><strong>Taula</strong>: identifica que s'utilitzarà un fitxer de taula per definir el gràfic de factor vertical utilitzat per determinar els VF.</li></ul><p>Alguns modificadors per a les paraules claus verticals són:</p><ul><li><strong>Factor zero</strong>: estableix el factor vertical utilitzat si el VRMA és zero. Aquest factor col·loca la intercepció y de la funció especificada. Per definició, el factor zero no és aplicable a cap de les funcions verticals trigonomètriques (COS, SEC, COS-SEC o SEC-COS). Aquestes funcions defineixen la intercepció y.</li><li><strong>Angle de tall baix</strong>: defineix l'angle VRMA per sota del qual es definirà un VF infinit.</li><li><strong>Angle de tall alt</strong>: defineix l'angle VRMA per sobre del qual es definirà un VF infinit.</li><li><strong>Pendent</strong>: estableix el pendent de la línia recta utilitzada amb les paraules clau de factor vertical <strong>Lineal</strong> i <strong>Lineal invers</strong>. El pendent s'especifica com una fracció d'elevació sobre l'extensió (per exemple, un pendent del 45 % és 1/45, que s'especifica com 0,02222).</li><li><strong>Nom de taula</strong>: identifica el nom de la taula que defineix el VF.</li></ul>",
	"@@Distance-Allocation_verticalraster_tag0@@": "Defineix la relació entre el factor de cost vertical i l'angle de moviment relatiu vertical (VRMA).",
	"@@Distance-Allocation_verticalraster_tag1@@": "Els valors s'utilitzen per calcular el pendent utilitzat per identificar el factor vertical que es produeix en passar d'una cel·la a una altra.",
	"@@Euclidean-Back-Direction_cellsize_tag0@@": "Mida de la cel·la on es crearà el ràster de sortida.",
	"@@Euclidean-Back-Direction_cellsize_tag1@@": "Si la mida de la cel·la s'ha definit explícitament a <strong>Entorns</strong>, aquesta serà la mida de cel·la per defecte. Si no s'ha definit, la mida de la cel·la de sortida coincidirà amb la del <strong>ràster d'origen</strong>.",
	"@@Euclidean-Back-Direction_distancemethod_tag0@@": "Determina si es calcularà la distància mitjançant un mètode pla (terra plana) o geodèsic (el·lipsoide).",
	"@@Euclidean-Back-Direction_distancemethod_tag1@@": "Pla: les mesures planes utilitzen matemàtiques cartesianes 2D per calcular la longitud i l'àrea. L'opció només està disponible quan es mesura en un sistema de coordenades projectades, i el pla 2D d'aquest sistema de coordenades s'utilitzarà com a base per a les mesures.",
	"@@Euclidean-Back-Direction_distancemethod_tag2@@": "Geodèsic: línia més curta entre dos punts a la superfície terrestre en un esferoide (el·lipsoide). Per tant, independentment de la projecció d'entrada o de sortida, els resultats no canvien.",
	"@@Euclidean-Back-Direction_distancemethod_tag3@@": "<strong>Nota:</strong> una línia geodèsica es pot utilitzar quan voleu determinar la distància més curta entre dues ciutats per definir una ruta de vol. També es coneix com a línia ortodròmica si es basa en una esfera en lloc de basar-se en un el·lipsoide.",
	"@@Euclidean-Back-Direction_maximumdistance_tag0@@": "Defineix el llindar de distància en què es calcularà la direcció a l'origen més proper. Si la distància a l'origen més proper supera aquest llindar, la sortida de la cel·la serà NoData.",
	"@@Euclidean-Back-Direction_maximumdistance_tag1@@": "La distància per defecte és la de l'extensió del ràster de sortida.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag0@@": "Ràster que defineix les barreres.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag1@@": "El dataset ha de contenir NoData allà on no hi ha barreres. Les barreres es representen amb valors vàlids, que inclouen el zero.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag2@@": "Les barreres es poden definir amb un enter o un ràster de punt flotant.",
	"@@Euclidean-Back-Direction_sourceraster_tag0@@": "Dataset ràster que identifica les cel·les o les ubicacions a les quals s'ha calculat la direcció euclidiana de la ubicació de cada cel·la de sortida.",
	"@@Euclidean-Back-Direction_sourceraster_tag1@@": "L'entrada pot ser de tipus enter o punt flotant.",
	"@@Cost-Path_costbacklinkraster_tag0@@": "Nom d'una capa ràster d'enllaç de menor cost utilitzada per determinar la ruta per tornar a un origen a través de la ruta de menor cost.",
	"@@Cost-Path_costbacklinkraster_tag1@@": "Per a cada cel·la del ràster d'enllaç entrant, un valor identifica el veí, que és la cel·la següent en la ruta de menor cost acumulatiu de la cel·la a una cel·la d'origen únic o a un conjunt de cel·les d'origen.",
	"@@Cost-Path_costdistanceraster_tag0@@": "Nom d'un ràster de distància de cost que s'utilitzarà per determinar la ruta de menor cost de les ubicacions de destinació a un origen.",
	"@@Cost-Path_costdistanceraster_tag1@@": "El ràster de distància de cost es crea normalment amb la funció Cost en pla, Assignació de costos o Enllaç de menor cost. La capa ràster de distància de cost emmagatzema, per a cada cel·la, la distància de cost acumulatiu mínim sobre una superfície de cost de cada cel·la a un conjunt de cel·les d'origen.",
	"@@Cost-Path_destinationfield_tag0@@": "Camp utilitzat per obtenir els valors de les ubicacions de destinació. Les dades d'entitats d'entrada han de contenir almenys un camp vàlid.",
	"@@Cost-Path_destinationraster_tag0@@": "Capa de dataset ràster que identifica les cel·les des de les quals es determina la ruta de menor cost a l'origen menys costós.",
	"@@Cost-Path_destinationraster_tag1@@": "La capa ràster d'entrada està formada per cel·les que tenen valors vàlids (zero és un valor vàlid), i les cel·les restants han de tenir assignat el valor NoData.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag0@@": "Força la funció per tractar el ràster d'enllaç d'entrada com a ràster de direcció del flux. Els ràsters de direcció del flux poden tenir enters amb valors entre 0 i 255.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag1@@": "Desactivat: si els valors del ràster d'enllaç especificats són enters dins d'un interval entre 0 i 8, el dataset es tractarà com un ràster d'enllaç de menor cost. Si els valors són entre 0 i 255, l'entrada es tractarà com un ràster de direcció del flux. Si els valors són entre 0 i 360 i un punt flotant, l'entrada es tractarà com un ràster de direcció inversa.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag2@@": "Activat: el ràster proporcionat per al ràster d'enllaç es tractarà com un ràster de direcció del flux. Aquesta opció de ràster de direcció del flux té un valor màxim de 8 o menys.",
	"@@Cost-Path_pathtype_tag0@@": "Paraula clau que defineix de quina manera s'interpretaran els valors i les zones de les dades de destinació d'entrada als càlculs de ruta de cost. Les opcions són les següents:",
	"@@Cost-Path_pathtype_tag1@@": "<strong>Cada cel·la</strong>: per a cada cel·la amb valors vàlids a les dades de destinació d'entrada, es determinarà una ruta de menor cost i es desarà al ràster de sortida. Amb aquesta opció, cada cel·la de les dades de destinació d'entrada es tractarà de manera individual i es determinarà una ruta de menor cost per a cada cel·la.",
	"@@Cost-Path_pathtype_tag2@@": "<strong>Cada zona</strong>: per a cada zona de les dades de destinació d'entrada, es determinarà una ruta de menor cost i es desarà al ràster de sortida. Amb aquesta opció, la ruta de menor cost per a cada zona comença a la cel·la amb la ponderació de distància de menor cost a la zona.",
	"@@Cost-Path_pathtype_tag3@@": "<strong>L'únic millor</strong>: per a totes les cel·les de les dades de destinació d'entrada, la ruta de menor cost es deriva de la cel·la amb el mínim de rutes de menor cost a les cel·les d'origen.",
	"@@Cell-Statistics_cellsizetype_tag0@@": "Trieu la mida de cel·la que s'utilitzarà al ràster de sortida. Si totes les mides de cel·la introduïdes són iguals, totes les opcions generaran els mateixos resultats.",
	"@@Cell-Statistics_cellsizetype_tag1@@": "Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.",
	"@@Cell-Statistics_cellsizetype_tag2@@": "Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.",
	"@@Cell-Statistics_cellsizetype_tag3@@": "Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.",
	"@@Cell-Statistics_cellsizetype_tag4@@": "Mitja de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.",
	"@@Cell-Statistics_cellsizetype_tag5@@": "Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.",
	"@@Cell-Statistics_extenttype_tag0@@": "Trieu l'extensió que s'utilitzarà al ràster de sortida:",
	"@@Cell-Statistics_extenttype_tag1@@": "Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.",
	"@@Cell-Statistics_extenttype_tag2@@": "Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.",
	"@@Cell-Statistics_extenttype_tag3@@": "Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.",
	"@@Cell-Statistics_extenttype_tag4@@": "Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.",
	"@@Cell-Statistics_processasmultiband_tag0@@": "Determina com es processen les bandes de ràsters d'entrada.",
	"@@Cell-Statistics_processasmultiband_tag1@@": "Desactivat: totes les entrades multibanda es processaran com a bandes úniques. Aquesta és l'opció per defecte.",
	"@@Cell-Statistics_processasmultiband_tag2@@": "Activat: totes les entrades multibanda es processaran com a multibanda.",
	"@@Cell-Statistics_rasters_tag0@@": "Llista de ràsters des de la qual es calcularan les estadístiques, píxel per píxel.",
	"@@Cell-Statistics_percentileinterpolationtype_tag0@@": "<p>Especifica el mètode d'interpolació que es farà servir quan el valor de percentil especificat estigui entre els dos valors de les cel·les d'entrada.</p><ul><li><strong>Detecta automàticament</strong>: si els ràsters d'entrada són de tipus de píxel enter, s'utilitza el mètode <strong>Més proper</strong>. Si el ràster d'entrada és de tipus de píxel de punt flotant, es fa servir el mètode <strong>Lineal</strong>. Aquesta és l'opció per defecte.</li><li><strong>Més proper</strong>: es fa servir el valor disponible més proper al percentil desitjat. En aquest cas, el tipus de píxel de sortida és el mateix que el del ràster de valor d'entrada.</li><li><strong>Lineal</strong>: es fa servir la mitjana ponderada dels dos valors circumdants del percentil desitjat. En aquest as, el tipus de píxel de sortida és el punt flotant.</li></ul><p>Aquesta opció només està disponible si el paràmetre de tipus <strong>Operació</strong> està definit amb el valor <strong>Mediana</strong> o <strong>Percentil</strong>.</p>",
	"@@Cell-Statistics_percentilevalue_tag0@@": "<p>Percentil que es calcularà. El valor per defecte és 90, per al percentil 90.</p><p>Els valors poden ser de 0 a 100. El percentil 0 és bàsicament equivalent a l'estadística mínima i el percentil 100 equival a la màxima. Un valor de 50 produirà bàsicament el mateix resultat que l'estadística de mediana.</p><p>Aquesta opció només està disponible si paràmetre el <strong>Operació</strong> està definit amb el valor <strong>Percentil</strong>.</p>",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag0@@": "El ràster de direcció inversa conté les direccions calculades en graus. La direcció identifica la cel·la següent al llarg de la ruta òptima de tornada a l'origen de menor cost acumulatiu evitant les barreres.",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag1@@": "L'interval de valors és de 0 a 360 graus, amb el valor 0 reservat per a les cel·les d'origen. Cap a l'est (dreta) és 90 i els valors augmenten en el sentit de les agulles del rellotge (180 és el sud, 270 és l'oest i 360 és el nord).",
	"@@Optimal-Path-As-Raster_destinationfield_tag0@@": "Camp utilitzat per obtenir els valors de les ubicacions de destinació.",
	"@@Optimal-Path-As-Raster_destinationraster_tag0@@": "Capa de dataset ràster que identifica les cel·les des de les quals es determina la ruta òptima a l'origen menys costós. Aquesta entrada és obligatòria.",
	"@@Optimal-Path-As-Raster_destinationraster_tag1@@": "La capa ràster d'entrada està formada per cel·les que tenen valors vàlids (zero és un valor vàlid), i les cel·les restants han de tenir assignat el valor NoData.",
	"@@Optimal-Path-As-Raster_distanceaccumulationraster_tag0@@": "El ràster d'acumulació de distància s'utilitza per determinar la ruta òptima des de les destinacions fins als orígens. El ràster d'acumulació de distància normalment es crea amb la funció <strong>Acumulació de distància</strong>. Cada cel·la del ràster d'acumulació de distància representa la distància de cost acumulatiu mínim sobre una superfície de cada cel·la a un conjunt de cel·les d'origen.",
	"@@Optimal-Path-As-Raster_pathtype_tag0@@": "Especifica una paraula clau que defineix de quina manera s'interpretaran els valors i les zones de les dades de destinació d'entrada als càlculs de ruta de cost.",
	"@@Optimal-Path-As-Raster_pathtype_tag1@@": "<strong>Cada zona</strong>: per a cada zona de les dades de destinació d'entrada, es determinarà una ruta de menor cost i es desarà al ràster de sortida. Amb aquesta opció, la ruta òptima per a cada zona comença a la cel·la amb la ponderació de distància de menor cost a la zona.",
	"@@Optimal-Path-As-Raster_pathtype_tag2@@": "<strong>L'únic millor</strong>: per a totes les cel·les de les dades de destinació d'entrada, la ruta òptima es deriva de la cel·la amb el mínim de rutes de menor cost a les cel·les d'origen.",
	"@@Optimal-Path-As-Raster_pathtype_tag3@@": "<strong>Cada cel·la</strong>: per a cada cel·la amb valors vàlids a les dades de destinació d'entrada, es determina una ruta òptima. Amb aquesta opció, cada cel·la de les dades de destinació d'entrada es tractarà de manera individual i es determinarà una ruta òptima per a cada cel·la.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag0@@": "ID de banda que s'utilitzaran per detectar canvis. Si no es proporcionen ID de banda, s'utilitzaran totes les bandes del dataset ràster d'entrada.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag1@@": "Els valors d'ID han de ser enters separats per espais.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag0@@": "ID de banda de la banda verda i la banda de SWIR que s'utilitzaran per emmascarar núvols, ombres de núvols i neu. Si no es proporcionen ID de banda, no es crearan les màscares.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag1@@": "Els valors d'ID han de ser enters separats per espais.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag2@@": "Aquest paràmetre especifica les bandes que s'utilitzaran per a les màscares de núvols, d'ombres de núvols i de neu. Com que les ombres de núvols i la neu es mostren molt fosques a la banda d'infrarojos d'ona curta (SWIR), i els núvols i la neu es mostren molt brillants a la banda verda, es recomana que els índex de la banda de SWIR i la banda verda estiguin emmascarats.",
	"@@CCDC-Analysis_chi-squaredthresholdfordetectchange_tag0@@": "Límit de probabilitat de canvi de khi quadrat. Si una observació té una probabilitat de canvi calculada que està per sobre d'aquest límit, es marca com una anomalia, que és un possible esdeveniment de canvi. El valor per defecte és 0,99.",
	"@@CCDC-Analysis_minimumconsecutiveanomalyobservations_tag0@@": "Nombre mínim d'observacions consecutives d'anomalies que s'han de produir abans que un esdeveniment es consideri un canvi. Un píxel s'ha de marcar com una anomalia el nombre especificat de sectors de temps consecutius abans que es consideri un canvi real. El valor per defecte és 6.",
	"@@CCDC-Analysis_raster_tag0@@": "Capa ràster multidimensional d'entrada.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag0@@": "Freqüència amb què s'actualitza el model de sèrie temporal amb noves observacions. Per defecte, s'actualitza el model cada any.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag1@@": "Aquest paràmetre defineix amb quina freqüència s'actualitzarà el model de sèrie temporal amb noves observacions. Actualitzar un model amb freqüència pot comportar un gran cost computacional i els beneficis poden ser mínims. Per exemple, si hi ha 365 sectors o observacions clares per any al ràster multidimensional i la freqüència d'actualització és per a cada observació, el processament tindrà un cost computacional 365 vegades superior en comparació amb actualitzar-lo cada any, però és possible que la precisió no sigui superior.",
	"@@Trend-To-RGB_modeltype_tag0@@": "Tipus d'informació del model que es convertirà a RGB.",
	"@@Trend-To-RGB_modeltype_tag1@@": "Lineal: informació de tendència lineal que es convertirà a RGB. Aquesta és l'opció per defecte.",
	"@@Trend-To-RGB_modeltype_tag2@@": "Harmònic: informació de tendència harmònica que es convertirà a RGB.",
	"@@Trend-To-RGB_raster_tag0@@": "Ràster de tendència d'entrada.",
	"@@LandTrendr-Analysis_bestmodelproportion_tag0@@": "<p>El millor valor de proporció del model. Durant el procés de selecció del model, l'eina calcularà el valor p de cada model i seleccionarà el que tingui més vèrtexs, alhora que conservarà el valor p més petit (el més significatiu) en funció d'aquest valor de proporció. Si el valor és 1, significa que el model té el valor p més baix, però és possible que no tingui un valor elevat de vèrtexs. El valor per defecte és 1,25.</p>",
	"@@LandTrendr-Analysis_maximumnumberofsegments_tag0@@": "<p>Nombre màxim de segments que s'ajustaran a la sèrie temporal de cada píxel. El valor per defecte és 5.</p>",
	"@@LandTrendr-Analysis_minimumnumberofobservations_tag0@@": "<p>Nombre mínim d'observacions vàlides necessàries per fer l'ajust. El nombre d'anys del dataset multidimensional d'entrada ha de ser igual o més gran que aquest valor. El valor per defecte és 6.</p>",
	"@@LandTrendr-Analysis_outputotherbands_tag0@@": "<p>Especifica si s'inclouran altres bandes als resultats.</p><ul><li>Activat: s'inclouran altres bandes als resultats. La informació de segmentació i de vèrtexs de la banda de segmentació inicial especificada al paràmetre<strong>Banda de processament</strong>també s'ajustarà a les bandes restants de les imatges multibanda. Els resultats del model inclouran primer la banda de segmentació i, a continuació, la resta de bandes.</li><li>Desactivat: no s'inclouran les altres bandes. Aquesta és l'opció per defecte.</li></ul>",
	"@@LandTrendr-Analysis_preventoneyearrecovery_tag0@@": "<p>Especifica si els segments que presenten una recuperació d'un any s'exclouran.</p><ul><li>Activat: els segments que presenten una recuperació d'un any s'exclouran. Aquesta és l'opció per defecte.</li><li>Desactivat: els segments que presenten una recuperació d'un any no s'exclouran.</li></ul>",
	"@@LandTrendr-Analysis_processingband_tag0@@": "<p>Banda que s'utilitzarà per segmentar les trajectòries de valors de píxel al llarg del temps. Trieu la banda que capturarà millor els canvis en l'entitat que voleu observar.</p>",
	"@@LandTrendr-Analysis_p-valuethreshold_tag0@@": "<p>Llindar del valor p d'un model que se seleccionarà. Després que es detectin els vèrtexs a l'etapa inicial de l'ajust del model, l'eina ajustarà cada segment i calcularà el valor p per determinar la significació del model. A la iteració següent, el model disminuirà en un el nombre de segments i recalcularà el valor p. Aquest procés continuarà i, si el valor p és més petit que el valor especificat en aquest paràmetre, se seleccionarà el model i l'eina deixarà de cercar un model millor. Si no se selecciona cap model d'aquest tipus, l'eina seleccionarà un model amb un valor p més petit que <strong>el valor p més petit × el millor valor de proporció de model</strong>. El valor per defecte és 0,01.</p>",
	"@@LandTrendr-Analysis_raster_tag0@@": "<p>Capa ràster multidimensional de Landsat d'entrada.</p>",
	"@@LandTrendr-Analysis_recoveryhasincreasetrend_tag0@@": "<p>Especifica si la recuperació té una tendència creixent (positiva).</p><ul><li>Activat: la recuperació té una tendència creixent. Aquesta és l'opció per defecte.</li><li>Desactivat: la recuperació té una tendència decreixent.</li></ul>",
	"@@LandTrendr-Analysis_recoverythreshold_tag0@@": "<p>Valor del llindar de recuperació, en anys. Si un segment té un índex de recuperació més ràpid que <strong>1/llindar de recuperació</strong>, el segment es descarta i no s'inclou al model de sèrie temporal. El valor ha d'estar comprès entre 0 i 1. El valor per defecte és 0,25.</p>",
	"@@LandTrendr-Analysis_snappingdate_tag0@@": "<p>Data que es fa servir per seleccionar un sector per a cada any al dataset multidimensional d'entrada. Se seleccionarà el sector amb la data més propera a la data d'alineació. Aquest paràmetre és obligatori si el dataset conté dades subanuals.</p>",
	"@@LandTrendr-Analysis_spikethreshold_tag0@@": "<p>Llindar que es farà servir per suavitzar els pics o les anomalies a la trajectòria de valors de píxel. El valor ha d'estar comprès entre 0 i 1, i 1 significa que no se suavitzarà. El valor per defecte és 0,9.</p>",
	"@@LandTrendr-Analysis_vertexcountovershoot_tag0@@": "<p>Nombre de vèrtexs addicionals més enllà de<strong>max_num_segments + 1</strong>que es poden fer servir per ajustar el model durant l'estat inicial d'identificació dels vèrtexs. Més endavant en el procés de modelització, el nombre de vèrtexs addicionals es reduirà a<strong>max_num_segments + 1</strong>. El valor per defecte és 2.</p>",
	"@@Merge-Rasters_rasters_tag0@@": "<p>Datasets ràster d'entrada o datasets ràster multidimensionals que es fusionaran.</p>",
	"@@Merge-Rasters_resolveoverlapmethod_tag0@@": "<p>Especifica el mètode que es farà servir per resoldre els píxels superposats als datasets combinats.</p><ul><li><strong>Primer</strong>: el valor del píxel a les zones superposades és el valor del primer ràster a la llista de ràsters d'entrada. Aquesta és l'opció predeterminada.</li><li><strong>Últim</strong>: el valor del píxel a les zones superposades és el valor de l'últim ràster a la llista de ràsters d'entrada.</li><li><strong>Mínim</strong>: el valor del píxel a les zones superposades és el valor mínim dels píxels superposats.</li><li><strong>Màxim</strong>: el valor del píxel a les zones superposades és el valor màxim dels píxels superposats.</li><li><strong>Valor mitjà</strong>: el valor del píxel a les zones superposades és el valor mitjà dels píxels superposats.</li><li><strong>Suma</strong>: el valor del píxel a les zones superposades és el total de la suma dels píxels superposats.</li></ul>",
	"@@Generate-Trend_cycleunit_tag0@@": "<p>Especifica la unitat de temps que s'utilitzarà per a la durada d'un cicle harmònic.</p><ul><li><strong>Dies</strong>: la unitat de la durada del cicle harmònic és dies.</li><li><strong>Anys</strong>: la unitat de la durada del cicle harmònic és anys. Aquesta és l'opció per defecte.</li></ul>",
	"@@Generate-Trend_dimensionname_tag0@@": "<p>Dimensió amb la qual s'extraurà una tendència per a la variable o les variables seleccionades a l'anàlisi.</p>",
	"@@Generate-Trend_harmonicfrequency_tag0@@": "<p>Nombre de la freqüència que es farà servir a l'ajust de la tendència. Aquest paràmetre especifica la freqüència de cicles a l'any. El valor per defecte és 1, o un cicle harmònic per any.</p><p>Aquest paràmetre només s'inclou a l'anàlisi de tendència d'una regressió harmònica.</p>",
	"@@Generate-Trend_ignorenodata_tag0@@": "<p>Especifica si els valors NoData s'ignoraran a l'anàlisi.</p><ul><li>Activat: l'anàlisi inclourà tots els píxels vàlids en una dimensió determinada i ignorarà els píxels NoData. Aquest és el valor per defecte.</li><li>Desactivat: l'anàlisi tindrà com a resultat NoData si hi ha algun valor NoData per als píxels a la dimensió proporcionada.</li></ul>",
	"@@Generate-Trend_lengthofcycle_tag0@@": "<p>Durada de la variació periòdica amb què es crearà el model. La unitat és dies, independentment de la unitat de temps de les dades d'entrada. Per exemple, la verdor de les fulles sovint té un cicle marcat de variació al llarg d'un any, així que la durada del cicle és de 365,25, encara que les dades d'entrada siguin la verdor mensual. Les dades de temperatura per hora tenen un cicle marcat de variació al llarg d'un dia, de manera que la durada del cicle és d'1.</p><p>La durada per defecte és de 365,25 dies per a les dades que varien en un cicle anual.</p>",
	"@@Generate-Trend_p-valueofslopecoefficient_tag0@@": "<p>Especifica si es calcularà l'estadística del valor p del coeficient de pendent de la línia de tendència.</p><ul><li>Activat: el valor p es calcularà i es mostrarà als detalls quan es completi la funció.</li><li>Desactivat: no es calcularà el valor p. Aquesta és l'opció per defecte.</li></ul>",
	"@@Generate-Trend_polynomialorder_tag0@@": "<p>Número d'ordre polinòmic que s'utilitzarà a l'ajust de la tendència. Aquest paràmetre especifica l'ordre polinòmic. El valor per defecte és 2, o un polinomi de segon ordre.</p><p>Aquest paràmetre només s'inclou a l'anàlisi de tendència d'una regressió polinòmica.</p>",
	"@@Generate-Trend_r-squared_tag0@@": "<p>Especifica si es calcularà l'estadística de bondat d'ajust d'R quadrat per a la línia d'ajust de tendència.</p><ul><li>Activat: es calcularà l'R quadrat i es mostrarà als detalls quan s'hagi completat la funció.</li><li>Desactivat: no es calcularà l'R quadrat. Aquesta és l'opció per defecte.</li></ul>",
	"@@Generate-Trend_raster_tag0@@": "<p>Ràster multidimensional d'entrada.</p>",
	"@@Generate-Trend_rmse_tag0@@": "<p>Especifica si es generarà l'error quadràtic mitjà (RMSE) de la línia d'ajust de tendència.</p><ul><li>Activat: l'RMSE es calcularà i es mostrarà als detalls en completar la funció. Aquesta és l'opció per defecte.</li><li>Desactivat: no es calcularà l'RMSE.</li></ul>",
	"@@Generate-Trend_seasonalperiod_tag0@@": "<p>Especifica la unitat de temps que es farà servir per a la durada d'un període estacional en dur a terme la prova estacional de Kendall.</p><ul><li>Dies: la unitat de la durada del període estacional és dies. Aquesta és l'opció per defecte.</li><li>Mesos: la unitat de la durada del període estacional és mesos.</li></ul>",
	"@@Generate-Trend_trendtype_tag0@@": "<p>Especifica el tipus de línia que s'utilitzarà per ajustar els valors de píxel a una dimensió.</p><ul><li><strong>Lineal</strong>: ajusta els valors de píxel d'una variable al llarg d'una línia de tendència lineal. Aquesta és l'opció per defecte.</li><li><strong>Harmònica</strong>: ajusta els valors de píxel d'una variable al llarg d'una línia de tendència harmònica.</li><li><strong>Polinòmica</strong>: ajusta els valors de píxel d'una variable al llarg d'una línia de tendència polinòmica de segon ordre.</li><li><strong>Mann-Kendall</strong>: els valors de píxel d'una variable s'avaluaran amb la prova de tendència de Mann-Kendall.</li><li><strong>Estacional de Kendall</strong>: els valors de píxel d'una variable s'avaluaran amb la prova de tendència estacional de Kendall.</li></ul>",
	"@@Compute-Change_cellsizetype_tag0@@": "<p>Trieu la mida de cel·la que voleu fer servir al ràster de sortida. Si la mida de totes les cel·les d'entrada és igual, totes les opcions donaran el mateix resultat.</p><ul><li>Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.</li><li>Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.</li><li>Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.</li><li>Mitjana de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.</li><li>Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.</li></ul>",
	"@@Compute-Change_computechangemethod_tag0@@": "<p>Mètode que es farà servir per al còmput.</p><ul><li><strong>Diferència</strong>: es calcularà la diferència matemàtica, o resta, entre els valors de píxel dels ràsters d'entrada. Aquesta és l'opció per defecte.</li><li><strong>Diferència relativa</strong>: es calcularà la diferència en els valors de píxel, tenint en compte les magnituds dels valors que es comparen.</li><li><strong>Diferència categòrica</strong>: --es calcularà la diferència entre dos ràsters categòrics o temàtics, en què la sortida conté transicions de classe que s'han produït entre dos ràsters.</li><li><strong>Distància euclidiana espectral</strong>: es calcularà la distància euclidiana entre els valors de píxel de dos ràsters multibanda.</li><li><strong>Diferència d'angle espectral</strong>: es calcularà l'angle espectral entre els valors de píxel de dos ràsters multibanda. La sortida és en radians.</li><li><strong>Banda amb més canvis</strong>: es calcularà la banda que tingui el més canvis a cada píxel entre dos ràsters multibanda.</li></ul><p>Si el <strong>mètode de càlcul de canvis</strong> és <strong>Diferència categòrica</strong> i una de les entrades no és categòrica, es calcularà una diferència simple.</p>",
	"@@Compute-Change_definetransitioncolors_tag0@@": "<p>Especifiqueu el mètode que es farà servir per simbolitzar els píxels que han canviat de classe.</p><ul><li><strong>Mitjana dels colors d'origen i de destinació</strong>: el color del píxel serà la mitjana del color de la classe original i el color de la classe final.</li><li><strong>Utilitza els colors d'origen</strong>: el color del píxel serà el color de la classe original.</li><li><strong>Utilitza els colors de destinació</strong>: el color del píxel serà el color de la classe final.</li></ul>",
	"@@Compute-Change_extenttype_tag0@@": "<p>Trieu quina extensió s'ha de fer servir al ràster de sortida:</p><ul><li>Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.</li><li>Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.</li><li>Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.</li><li>Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.</li></ul>",
	"@@Compute-Change_filtermethod_tag0@@": "<p>Trieu el mètode de filtratge per al còmput de canvi categòric.</p><ul><li><strong>Conserva'ls tots</strong>: totes les classes s'inclouran a la sortida i no es produirà cap filtratge. Trieu aquesta opció per veure el canvi i la persistència en un sol dataset.</li><li><strong>Conserva només els píxels canviats</strong>: només les classes que hagin canviat d'un tipus de classe a un altre s'inclouran a la sortida. Trieu aquesta opció si només us interessa veure els canvis.</li><li><strong>Conserva només els píxels no canviats</strong>: només les classes que no hagin canviat s'inclouran a la sortida. Trieu aquesta opció si només us interessa veure la persistència.</li></ul>",
	"@@Compute-Change_fromclassvalues_tag0@@": "<p>Valors de classe del<strong>ràster d'origen</strong>que s'inclouran al còmput si es comparen dos ràsters categòrics. Es tracta d'una llista delimitada per espais de valors enters corresponents al camp<strong>ClassValue</strong>al dataset ràster d'entrada.</p>",
	"@@Compute-Change_fromraster_tag0@@": "<p>Primer ràster que es farà servir al còmput. Per avaluar el canvi des del temps 1 (anterior) fins al temps 2 (posterior), introduïu el ràster del temps 1 aquí.</p>",
	"@@Compute-Change_toclassvalues_tag0@@": "<p>Valors de classe del<strong>ràster de destinació</strong>que s'inclouran al còmput si es comparen dos ràsters categòrics. Es tracta d'una llista delimitada per espais de valors enters corresponents al camp<strong>ClassValue</strong>al dataset ràster d'entrada.</p>",
	"@@Compute-Change_toraster_tag0@@": "<p>Segon ràster que es farà servir al còmput. Per avaluar el canvi des del temps 1 (anterior) fins al temps 2 (posterior), introduïu el ràster del temps 2.</p>",
	"@@Compute-Change_usecolormethod_tag0@@": "<p>Especifiqueu el mètode que es farà servir per simbolitzar els píxels que han canviat de classe.</p><ul><li><strong>Mitjana dels colors d'origen i de destinació</strong>: el color del píxel serà la mitjana del color de la classe original i el color de la classe final.</li><li><strong>Utilitza els colors d'origen</strong>: el color del píxel serà el color de la classe original.</li><li><strong>Utilitza els colors de destinació</strong>: el color del píxel serà el color de la classe final.</li></ul>",
	"@@Compute-Change_fieldnameforclassnamesinfromraster_tag0@@": "<p>Camp que emmagatzema noms de classe a l'entrada <strong>De ràster</strong>. L'eina cerca automàticament el camp <strong>ClassName</strong> o el camp <strong>Class_Name</strong> que cal utilitzar.</p><p>Utilitzeu aquesta opció si l'entrada no inclou aquests noms de camp estàndard.</p>",
	"@@Compute-Change_fieldnameforclassnamesintoraster_tag0@@": "<p>Camp que emmagatzema noms de classe a l'entrada <strong>A ràster</strong>. L'eina cercarà automàticament el camp <strong>ClassName</strong> o el camp <strong>Class_Name</strong> que cal utilitzar.</p><p>Utilitzeu aquesta opció si l'entrada no inclou aquests noms de camp estàndard.</p>",
	"@@Statistics_numberofcolumns_tag0@@": "<p>Nombre de columnes de píxels que s'utilitzaran en una dimensió de veïnat focal.</p>",
	"@@Statistics_numberofrows_tag0@@": "<p>Nombre de files de píxels que s'utilitzaran en una dimensió de veïnat focal.</p>",
	"@@Statistics_onlyfillnodatapixels_tag0@@": "<p>Emplena separacions NoData a la sortida. Aquesta opció és útil quan és possible que les imatges tinguin línies no contínues.</p>",
	"@@Statistics_raster_tag0@@": "<p>Ràster d'entrada del qual voleu crear estadístiques focals.</p>",
	"@@Statistics_statisticstype_tag0@@": "<p>Aquests són els set tipus de funcions estadístiques focals:</p><ul><li>Mínim: calcula el valor mínim dels píxels dins del veïnat.</li><li>Màxim: calcula el valor màxim dels píxels dins del veïnat.</li><li>Mitjana: calcula el valor mitjà dels píxels dins del veïnat. Aquesta és l'opció per defecte.</li><li>Desviació estàndard: calcula el valor de desviació estàndard dels píxels dins del veïnat.</li><li>Mediana: calcula el valor de la mediana dels píxels dins del veïnat.</li><li>Majoria: calcula el valor majoritari, o el valor que es produeix amb més freqüència, dels píxels dins del veïnat.</li><li>Minoria: calcula el valor minoritari, o el valor que es produeix amb menys freqüència, dels píxels dins del veïnat.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changedirection_tag0@@": "<p>Especifica la direcció del canvi que s'inclourà a l'anàlisi.</p><p>Aquest paràmetre només està disponible quan el ràster d'anàlisi de canvis d'entrada és la sortida de les eines de LandTrendr.</p><ul><li><strong>Totes les direccions</strong>: totes les direccions de canvi s'inclouran a la sortida. Aquesta és l'opció per defecte.</li><li><strong>Creixent</strong>: només s'inclourà a la sortida el canvi en la direcció positiva o creixent.</li><li><strong>Decreixent</strong>: només s'inclourà a la sortida el canvi en la direcció negativa o decreixent.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changetype_tag0@@": "<p>Especifica la informació de canvi que es calcularà.</p><ul><li><strong>Hora de l'últim canvi</strong>: cada píxel conté la data del canvi més recent del píxel en qüestió a la sèrie temporal. Aquesta és l'opció per defecte.</li><li><strong>Hora del primer canvi</strong>: cada píxel conté la data del primer canvi del píxel en qüestió a la sèrie temporal.</li><li><strong>Hora del canvi més gran</strong>: cada píxel conté la data del canvi més significatiu del píxel en qüestió a la sèrie temporal.</li><li><strong>Nombre de canvis</strong>: cada píxel conté el nombre total de vegades que el píxel ha canviat a la sèrie temporal.</li><li><strong>Temps del canvi més llarg</strong>: cada píxel conté la data del canvi al final del segment de transició més llarg a la sèrie temporal.</li><li><strong>Temps del canvi més curt</strong>: cada píxel conté la data del canvi al final del segment de transició més curt a la sèrie temporal.</li><li><strong>Temps del canvi més ràpid</strong>: cada píxel conté la data del canvi al final de la transició que s'ha produït més ràpidament.</li><li><strong>Temps del canvi més lent</strong>: cada píxel conté la data del canvi al final de la transició que s'ha produït més lentament.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_filterbyduration_tag0@@": "<p>Especifica si es vol filtrar per la durada del canvi.</p><p></p><ul><li>Activat: es filtren els resultats per la durada de manera que només s'inclouen a la sortida els canvis que han durat una quantitat de temps especificada.</li><li>Desactivat: no es filtren els resultats per la durada. Aquesta és l'opció per defecte.</li></ul><p>Aquest paràmetre només està disponible quan el ràster d'anàlisi de canvis d'entrada és la sortida de les eines de LandTrendr.</p><p>Si aquest paràmetre està activat, heu de definir els paràmetres<strong>Durada mínima</strong>i<strong>Durada màxima</strong>per filtrar els resultats.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbymagnitude_tag0@@": "<p>Especifica si es vol filtrar per la magnitud del canvi.</p><ul><li>Activat: es filtren els resultats per la magnitud de manera que només s'inclouen a la sortida els canvis d'una magnitud especificada.</li><li>Desactivada: no es filtren els resultats per la magnitud. Aquesta és l'opció per defecte.</li></ul><p>Aquest paràmetre només està disponible quan el ràster d'anàlisi de canvis d'entrada és la sortida de les eines de LandTrendr.</p><p>Si aquest paràmetre està activat, heu de definir els paràmetres<strong>Magnitud mínima</strong>i<strong>Magnitud màxima</strong>per filtrar els resultats.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyyear_tag0@@": "<p>Especifica si es vol limitar la sortida a un interval d'anys.</p><ul><li>Activat: es filtren els resultats de manera que només s'inclouen a la sortida els canvis que s'hagin produït en un interval especificat d'anys.</li><li>Desactivat: no es filtren els resultats per l'any. Aquesta és l'opció per defecte.</li></ul><p>Si aquest paràmetre està activat, heu de definir els paràmetres<strong>Valor mínim</strong>i<strong>Valor màxim</strong>per filtrar els resultats.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbystartvalue_tag0@@": "<p>Filtreu els resultats per valor d'inici de manera que la sortida inclogui només els canvis d'un valor d'inici determinat.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyendvalue_tag0@@": "<p>Filtreu els resultats pel valro final de manera que la sortida inclogui només els canvis d'un valor final determinat.</p>",
	"@@Detect-Change-Using-Change-Analysis_maximumnumberofchanges_tag0@@": "<p>Nombre màxim de canvis per píxel que es calcularan. El nombre introduït correspon al nombre de bandes del ràster de sortida. El valor per defecte és 1, cosa que significa que només es calcularà una data de canvi i que el ràster de sortida només conté una banda.</p><p>Aquest paràmetre no està disponible si el paràmetre<strong>Tipus de canvi</strong>s'ha definit com a<strong>Nombre de canvis</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_raster_tag0@@": "<p>Ràster d'anàlisi de canvis d'entrada.</p>",
	"@@Detect-Change-Using-Change-Analysis_segmentdate_tag0@@": "<p>Especifica si es vol extreure la data al principi d'un segment de canvi o bé al final.</p><p>Aquest paràmetre només està disponible quan el ràster d'anàlisi de canvis d'entrada és la sortida de les eines de LandTrendr.</p><ul><li><strong>Inici del segment</strong>: s'extreu la data al principi d'un segment de canvi. Aquesta és l'opció per defecte.</li><li><strong>Final del segment</strong>: s'extreu la data al final d'un segment de canvi.</li></ul>",
	"@@Kernel-Density_areaunits_tag0@@": "<p>Unitats d'àrea dels valors de densitat de sortida.</p><ul><li>Unitats de mapa quadrades: per al quadrat de les unitats lineals de la referència espacial de sortida.</li><li>Milles quadrades: per a milles (EUA).</li><li>Quilòmetres quadrats: per a quilòmetres.</li><li>Acres: per a acres (EUA).</li><li>Hectàrees: per a hectàrees.</li><li>Metres quadrats: per a metres.</li><li>Iardes quadrades: per a iardes (EUA).</li><li>Peus quadrats: per a peus (EUA).</li><li>Polzades quadrades: per a polzades (EUA).</li><li>Centímetres quadrats: per a centímetres.</li><li>Mil·límetres quadrats: per a mil·límetres.</li></ul>",
	"@@Kernel-Density_cellsize_tag0@@": "<p>La mida de píxel del dataset ràster de sortida. Si s'ha definit el valor<strong>Cellsize</strong>als entorns de geoprocessament, és el valor per defecte.</p>",
	"@@Kernel-Density_inputbarriers_tag0@@": "<p>Dataset que defineix les barreres.</p><p>Les barreres poden ser una capa d'entitats poligonals o de polilínia.</p>",
	"@@Kernel-Density_inputfeatures_tag0@@": "<p>Entitats d'entrada de punt o de línia per a les quals es calcularà la densitat.</p>",
	"@@Kernel-Density_method_tag0@@": "<p>Determina si s'utilitzarà la ruta més curta en un mètode esferoide (geodèsic) o de terra plana (pla).</p><ul><li><strong>Pla</strong>: utilitza les distàncies planes entre les entitats. Aquesta és l'opció per defecte.</li><li><strong>Geodèsic</strong>: utilitza distàncies geodèsiques entre les entitats. Aquest mètode té en compte la curvatura de l'esferoide i gestiona correctament les dades a prop dels pols i la línia internacional de canvi de data.</li></ul><p>Es recomana que feu servir el mètode<strong>Geodèsic</strong>amb dades emmagatzemades en un sistema de coordenades que no sigui adequat per a les mesures de distància i les anàlisis que abastin una àrea geogràfica gran. Per exemple, Web Mercator o qualsevol sistema de coordenades geogràfiques s'ha de fer servir amb el mètode<strong>Geodèsic</strong>.</p>",
	"@@Kernel-Density_outputcellvalues_tag0@@": "<p>Determina què representen els valors del ràster de sortida.</p><ul><li><strong>Densitats</strong>: els valors de sortida representen el valor de densitat predit. Aquesta és l'opció per defecte.</li><li><strong>Recomptes esperats</strong>: els valors de sortida representen la quantitat del fenomen predita de cada píxel. Com que el valor del píxel està enllaçat al valor especificat de<strong>Cellsize</strong>, el ràster resultant no es pot remostrejar amb una mida de píxel diferent i continua representant la quantitat del fenomen.</li></ul>",
	"@@Kernel-Density_populationfield_tag0@@": "<p>Camp que denota els valors de població de cada entitat. El valor de<strong>Camp de població</strong>és el recompte o la quantitat que s'estendrà pel paisatge per crear una superfície contínua. Els valors de<strong>Camp de població</strong>poden ser de tipus enter o punt flotant.</p><p>Les opcions i els comportaments per defecte del camp s'indiquen a continuació ordenats per prioritat.</p><ul><li>Feu servir<strong>Cap</strong>si no es farà servir cap element o valor especial i cada entitat es contarà una vegada.</li><li>Feu servir<strong>Forma</strong>si les entitats d'entrada contenen Z.</li><li>Altrament, el camp per defecte serà <strong>POPULATION</strong> o qualsevol derivada de població acceptable:<ul><li><strong>POPULATIONxxxx</strong>, en què<strong>xxxx</strong>pot ser qualsevol caràcter vàlid, com ara<strong>POPULATION6</strong>,<strong>POPULATION1974</strong> o<strong>POPULATIONROADTYPE</strong>.</li><li><strong>POP</strong>.</li><li><strong>POPxxxx</strong>.</li><li>Si cap de les opcions anteriors no és aplicable, el valor per defecte serà <strong>Cap</strong>.</li></ul></li></ul>",
	"@@Kernel-Density_searchradius_tag0@@": "<p>Radi de cerca en què es calcularà la densitat. Les unitats es basen en la unitat lineal de la projecció.</p><p>Per exemple, si les unitats són metres, per incloure totes les entitats dins d'un veïnat d'una milla, definiu un radi de cerca de 1.609,344 (atès que 1 milla = 1.609,344 metres).</p>",
	"@@Zonal-Statistics_ignorenodataincalculations_tag0@@": "<p>Denota si els valors<strong>NoData</strong>del<strong>ràster de valor</strong>influiran en els resultats de la zona on es troben.</p><ul><li><strong>Sí</strong>: dins de qualsevol zona concreta, només els píxels que tinguin un valor al<strong>ràster de valor</strong>s'utilitzaran per determinar el valor de sortida d'aquesta zona. Els píxels <strong>NoData</strong>del<strong>ràster de valor</strong>s'ignoraran al càlcul estadístic. Aquesta és l'opció per defecte.</li><li><strong>No</strong>: dins de qualsevol zona concreta, si existeix algun píxel<strong>NoData</strong>al<strong>ràster de valor</strong>, es considerarà insuficient la informació per realitzar càlculs estadístics a tots els píxels de la zona; per tant, tota la zona rebrà el valor<strong>NoData</strong>al ràster de sortida.</li></ul>",
	"@@Zonal-Statistics_percentileinterpolationtype_tag0@@": "<p>Determina el mètode d'interpolació del percentil que es farà servir quan el nombre de valors del ràster d'entrada que s'hagin de calcular sigui parell.</p><ul><li><strong>Detecta automàticament</strong>: si el ràster de valor d'entrada és de tipus de píxel enter, es fa servir el mètode <strong>Més proper</strong>. Si el ràster de valor d'entrada és de tipus de píxel de punt flotant, es fa servir el mètode<strong>Lineal</strong>. Aquesta és l'opció per defecte.</li><li><strong>Més proper</strong>: es fa servir el valor disponible més proper al percentil desitjat. En aquest cas, el tipus de píxel de sortida és el mateix que el del ràster de valor d'entrada.</li><li><strong>Lineal</strong>: es fa servir la mitjana ponderada dels dos valors circumdants del percentil desitjat. En aquest cas, el tipus de píxel de sortida és de punt flotant.</li></ul>",
	"@@Zonal-Statistics_percentilevalue_tag0@@": "<p>Percentil que es calcularà. El valor per defecte és 90, per al percentil 90.</p><p>Els valors poden ser de 0 a 100. El percentil 0 és bàsicament equivalent a l'estadística mínima i el percentil 100 equival a la màxima. Un valor de 50 produirà bàsicament el mateix resultat que l'estadística mediana.</p>",
	"@@Zonal-Statistics_processasmultidimensional_tag0@@": "<p>Determina com es processa el ràster de valor multidimensional d'entrada.</p><ul><li><strong>Sector actual</strong>: es calcularan les estadístiques del sector actual d'un dataset multidimensional. Aquesta és l'opció predeterminada.</li><li><strong>Tots els sectors</strong>: es calcularan les estadístiques de totes les dimensions (com ara el temps o la profunditat) d'un dataset multidimensional.</li></ul>",
	"@@Zonal-Statistics_statisticstype_tag0@@": "<p>Tipus d'estadística que es calcularà.</p><ul><li><strong>Mitjana</strong>: calcula la mitjana de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li><li><strong>Majoria</strong>: determina el valor que es produeix més sovint de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li><li><strong>Màxim</strong>: determina el valor més gran de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li><li><strong>Mediana</strong>: determina el valor medià de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li><li><strong>Mínim</strong>: determina el valor més petit de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li><li><strong>Minoria</strong>: determina el valor que es produeix menys sovint de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li><li><strong>Percentil</strong>: calcula un percentil de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida. El percentil 90 es calcula de manera predeterminada. Pots determinar el percentil que es calcularà amb el paràmetre<strong>Valor de percentil</strong>.</li><li><strong>Interval</strong>: calcula la diferència entre el valor més alt i el més baix de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li><li><strong>Desviació estàndard</strong>: calcula la desviació estàndard de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li><li><strong>Suma</strong>: calcula el valor total de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li><li><strong>Varietat</strong>: calcula el nombre de valors únics de tots els píxels del<strong>ràster de valor</strong>que pertanyen a la mateixa zona que el píxel de sortida.</li></ul>",
	"@@Zonal-Statistics_valueraster_tag0@@": "<p>Ràster que conté els valors en què es calcularà una estadística.</p>",
	"@@Zonal-Statistics_zonefield_tag0@@": "<p>Camp que conté els valors que defineixen cada zona. Pot ser un enter o un camp de cadena del ràster de zona.</p>",
	"@@Zonal-Statistics_zoneraster_tag0@@": "<p>Dataset que defineix les zones. Les zones es poden definir amb un ràster d'enter.</p>",
	"@@Zonal-Statistics_calculatecircularstatistics_tag0@@": "<p>Especifica com es calcularà el tipus d'estadístiques.</p><ul><li><strong>Aritmètica</strong>: calcula estadístiques aritmètiques. Aquest és el valor per defecte.</li><li><strong>Circular</strong>: calcula estadístiques circulars que són adequades per a quantitats cícliques, com ara la direcció de la brúixola en graus, les hores del dia i fraccions de nombres reals.</li></ul>",
	"@@Zonal-Statistics_circularwrapvalue_tag0@@": "<p>El valor més gran possible (límit superior) de les dades cícliques. És un nombre positiu, amb un valor per defecte de 360. Aquest valor també representa la mateixa quantitat que el valor més baix possible (límit inferior).</p><p>Aquest paràmetre només és aplicable quan es calculen estadístiques circulars.</p>",
	"@@Boundary-Clean-function_inputraster_tag0@@": "<p>Ràster d'entrada per al qual se suavitzarà el límit entre zones.</p><p>Ha de ser de tipus enter.</p>",
	"@@Boundary-Clean-function_runexpansionandshrinkingtwice_tag0@@": "<p>Especifica el nombre de vegades que es produirà el procés de suavització, una o dues vegades.</p><ul><li><p><strong>Activat</strong>: du a terme una operació d'expansió i reducció dues vegades. La primera vegada, l'operació es du a terme d'acord amb el tipus d'ordenació especificat. A continuació, es fa una altra operació d'expansió i reducció amb la prioritat invertida. Aquesta és l'opció predeterminada.</p></li><li><p><strong>Desactivat</strong>: realitza l'operació d'expansió i reducció una vegada d'acord amb el tipus d'ordenació.</p></li></ul>",
	"@@Boundary-Clean-function_sorttype_tag0@@": "<p>Especifica el tipus d'ordenació que es farà servir al procés de suavització. L'ordenació determina la prioritat amb què les cel·les es poden expandir a les seves cel·les veïnes.</p><p>L'ordenació es pot fer en funció del valor de zona o de l'àrea de zona.</p><ul><li><p><strong>No ho ordenis</strong>: els valors de zona no s'ordenen per mida. Les zones amb valors més grans tindran més prioritat per expandir-se a zones amb valors més petits a la sortida suavitzada. Aquesta és l'opció per defecte.</p></li><li><p><strong>Descendent</strong>: ordena les zones en ordre descendent per mida. Les zones amb àrees totals més grans tenen més prioritat per expandir-se a zones amb àrees totals més petites. Aquesta opció tendeix a eliminar o reduir la prevalença de les zones més petites a la sortida suavitzada.</p></li><li><p><strong>Ascendent</strong>: ordena les zones en ordre ascendent per mida. Les zones amb àrees totals més petites tenen més prioritat per expandir-se a zones amb àrees totals més grans. Aquesta opció tendeix a mantenir o augmentar la prevalença de les zones més petites a la sortida suavitzada.</p></li></ul>",
	"@@Aggregate-Multidimensional_dimension_tag0@@": "<p>Dimensió de l'agregació. És la dimensió a la qual s'agregaran les variables.</p>",
	"@@Aggregate-Multidimensional_dimensiondefinition_tag0@@": "<p>Especifica el mètode que s'utilitzarà per filtrar les dades multidimensionals introduïdes abans d'efectuar l'agregació.</p><ul><li><strong>Tot</strong>: s'utilitzarà l'interval complet de cada dimensió. Aquesta és l'opció predeterminada.</li><li><strong>Per valors</strong>: la dimensió es dividirà en sectors utilitzant un valor de dimensió o una llista de valors.</li><li><strong>Per intervals</strong>: la dimensió es dividirà en sectors utilitzant un interval o una llista d'intervals.</li><li><strong>Per iteració</strong>: la dimensió es dividirà en sectors en una mida d'interval especificada.</li></ul>",
	"@@Aggregate-Multidimensional_iterationdefinitionparameters_tag0@@": "<p>Els paràmetres de Definició d'iteració permeten definir els valors de dimensió que s'utilitzaran per filtrar les dades multidimensionals introduïdes quan el paràmetre <strong>Definició de dimensió</strong>s'estableix en <strong>Per iteració</strong>.</p><ul><li><strong>Dimensió</strong>: dimensió que s'utilitzarà per filtrar les dades.</li><li><strong>Inici de la primera iteració</strong>: principi del primer interval. Aquest interval s'utilitza per iterar el dataset.</li><li><strong>Final de la primera iteració</strong>: acabament del primer interval. Aquest interval s'utilitza per iterar el dataset.</li><li><strong>Període</strong>: freqüència amb què es dividiran les dades.</li><li><strong>Unitat</strong>: unitat d'iteració.</li></ul>",
	"@@Aggregate-Multidimensional_keywordinterval_tag0@@": "<p>Especifica l'interval de paraules clau que s'utilitzarà en l'agregació a la dimensió.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Tipus</strong>s'estableix en<strong>Paraula clau de l'interval</strong>.</p><ul><li><strong>Cada hora</strong>: els valors de les dades s'agreguen en períodes de temps d'hores, i el resultat inclou cada hora de la sèrie temporal. Aquesta és l'opció per defecte.</li><li><strong>Cada dia</strong>: els valors de les dades s'agreguen en períodes de temps diaris, i el resultat inclou cada dia de la sèrie temporal.</li><li><strong>Cada setmana</strong>: els valors de les dades s'agreguen en períodes de temps setmanals, i el resultat inclou cada setmana de la sèrie temporal.</li><li><strong>Cada dècada</strong>: els valors de les dades s'agreguen en 3 períodes de 10 dies cadascun. El darrer període pot contenir més o menys de 10 dies. La sortida inclou 3 sectors per a cada mes.</li><li><strong>Cada 5 dies</strong>: els valors de les dades s'agregaran en 6 períodes de 5 dies cadascun. El darrer període pot contenir més o menys de 5 dies. La sortida inclou 6 sectors per a cada mes.</li><li><strong>Cada mes</strong>: els valors de les dades s'agreguen en períodes de temps mensuals, i el resultat inclou cada mes de la sèrie temporal.</li><li><strong>Cada trimestre</strong>: els valors de les dades s'agreguen en períodes de temps trimestrals, i el resultat inclou cada trimestre de la sèrie temporal.</li><li><strong>Cada any</strong>: els valors de les dades s'agreguen en períodes de temps anuals, i el resultat inclou cada any de la sèrie temporal.</li><li><strong>Amb recurrència diària</strong>: els valors de les dades s'agreguen en períodes de temps diaris, i el resultat inclou un valor agregat per dia julià. La sortida inclou, com a màxim, 366 sectors de temps diaris.</li><li><strong>Amb recurrència setmanal</strong>: els valors de les dades s'agreguen en períodes de temps setmanals, i el resultat inclou un valor agregat per setmana. La sortida inclou, com a màxim, 53 sectors de temps setmanals.</li><li><strong>Amb recurrència mensual</strong>: els valors de les dades s'agreguen en períodes de temps mensuals, i el resultat inclou un valor agregat per mes. La sortida inclou, com a màxim, 12 sectors de temps mensuals.</li><li><strong>Amb recurrència trimestral</strong>: els valors de les dades s'agreguen en períodes de temps trimestrals, i el resultat inclou un valor agregat per trimestre. La sortida inclou, com a màxim, 4 sectors de temps trimestrals.</ul></li>",
	"@@Aggregate-Multidimensional_operation_tag0@@": "<p>Especifica el mètode matemàtic que s'utilitzarà per combinar els sectors agregats en un interval.</p><ul><li><strong>Majoria</strong>: calcula el valor que s'ha donat amb més freqüència per a un píxel en tots els sectors de l'interval.</li><li><strong>Màxim</strong>: calcula el valor màxim d'un píxel en tots els sectors de l'interval.</li><li><strong>Mitjana</strong>: calcula la mitjana dels valors d'un píxel en tots els sectors de l'interval. Aquesta és l'opció per defecte.</li><li><strong>Mediana</strong>: calcula el valor de la mediana d'un píxel en tots els sectors de l'interval.</li><li><strong>Mínim</strong>: calcula el valor mínim d'un píxel en tots els sectors de l'interval.</li><li><strong>Minoria</strong>: calcula el valor que s'ha donat amb menys freqüència per a un píxel en tots els sectors de l'interval.</li><li><strong>Interval</strong>: calcula l'interval de valors d'un píxel en tots els sectors de l'interval.</li><li><strong>Desviació estàndard</strong>: calcula la desviació estàndard dels valors d'un píxel en tots els sectors de l'interval.</li><li><strong>Suma</strong>: calcula la suma dels valors d'un píxel en tots els sectors de l'interval.</li><li><strong>Varietat</strong>: calcula el nombre de valors únics d'un píxel en tots els sectors de l'interval.</li></ul><p>Totes les opcions tenen a més una altra opció equivalent amb Ignora els elements NoData, que efectua l'operació matemàtica per a tots els píxels vàlids de la dimensió i ignora els píxels NoData.</p>",
	"@@Aggregate-Multidimensional_ranges_tag0@@": "<p>Els rangs de l'interval especificats en una taula s'utilitzen per agregar grups de valors. Els valors mínim i màxim especifiquen l'interval que s'inclourà.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Tipus</strong>s'estableix en<strong>Rangs de l'interval</strong>.</p>",
	"@@Aggregate-Multidimensional_raster_tag0@@": "<p>Ràster multidimensional d'entrada.</p>",
	"@@Aggregate-Multidimensional_type_tag0@@": "<p>Especifica l'interval de dimensions per al qual s'agregaran les dades.</p><ul><li><strong>Tots</strong>: les dades de la variable s'agregaran en tots els sectors. Aquesta és l'opció per defecte.</li><li><strong>Paraula clau de l'interval</strong>: les dades de la variable s'agregaran amb un interval conegut comunament.</li><li><strong>Valor de l'interval</strong>: les dades de la variable s'agregaran amb un interval i una unitat especificats per l'usuari.</li><li><strong>Rangs de l'interval</strong>: les dades de la variable s'agregaran entre parells de valors o dates especificats.</li></ul>",
	"@@Aggregate-Multidimensional_valueinterval_tag0@@": "<p>Mida de l'interval que s'utilitzarà per a l'agregació.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Tipus</strong>s'estableix en<strong>Valor de l'interval</strong>.</p>",
	"@@Aggregate-Multidimensional_values_tag0@@": "<p>Valors de la dimensió que s'utilitzaran per filtrar les dades multidimensionals introduïdes per a l'anàlisi. Aquest paràmetre és obligatori quan el paràmetre<strong>Definició de la dimensió</strong>s'estableix en<strong>Per valors</strong>.</p>",
	"@@Aggregate-Multidimensional_variables_tag0@@": "<p>Variable o variables que s'agregaran a la dimensió especificada.</p>",
	"@@Predict-Using-Regression_inputdefinitionfile_tag0@@": "<p>El fitxer de definició de regressió d’entrada Esri (<strong>.ecd</strong>) que conté les estadístiques i la informació del conjunt de dades específic, el model de regressió i els atributs escollits.</p>",
	"@@Predict-Using-Regression_rasters_tag0@@": "<p>El conjunt o conjunts de dades de dades ràster que representen les variables predictores. Pot ser un ràster de banda única, ràster de bandes múltiples, ràster multidimensional, conjunt de dades de mosaic o una col·lecció de ràsters.</p>",
	"@@Cell-Statistics_operation_tag0@@": "<p>Tipus de càlcul estadístic que voleu dur a terme.</p><p>Les estadístiques disponibles són<strong>Majoria</strong>,<strong>Màxim</strong>,<strong>Mitjana</strong>,<strong>Mediana</strong>,<strong>Mínim</strong>,<strong>Minoria</strong>,<strong>Percentil</strong>,<strong>Interval</strong>,<strong>Desviació estàndard</strong>,<strong>Suma</strong> i<strong>Varietat</strong>.</p><p>El valor per defecte és <strong>Mitjana</strong>.</p>",
	"@@Colormap-To-RGB_randomlyassigncolortounmappedpixels_tag0@@": "<p>S'assignen colors de manera aleatòria als píxels que no s'inclouen al mapa de color.</p><ul><li>Desactivat: no s'assigna cap color als píxels sense assignar. Aquest és el valor per defecte.</li><li>Activat: s'assigna un color als píxels sense assignar.</li></ul>",
	"@@Pansharpen_sensor_tag0@@": "<p>Si es tria l'algoritme de Gram-Schmidt, també podeu especificar el sensor que ha recopilat l'entrada de ràster multibanda. En triar el tipus de sensor es definiran els pesos de les bandes adequats.</p>",
	"@@Dimensional-Moving-Statistics_backwardwindow_tag0@@": "<p>Valor que indica quants sectors a dalt o abans s'inclouran a la finestra definida. El valor ha de ser un enter positiu entre 1 i 100. El valor per defecte és 1.</p><p>La unitat d'aquest paràmetre és Sector.</p>",
	"@@Dimensional-Moving-Statistics_circularwrapvalue_tag0@@": "<p>Valor que es farà servir per arrodonir un valor lineal a l'interval d'una mitjana circular determinada.</p><p>El valor ha de ser positiu. El valor per defecte és 360 graus.</p>",
	"@@Dimensional-Moving-Statistics_dimension_tag0@@": "<p>Nom de la dimensió en la qual es mourà la finestra.</p><p>El valor per defecte és la primera dimensió a part d'x,y que es troba al ràster multidimensional d'entrada.</p>",
	"@@Dimensional-Moving-Statistics_forwardwindow_tag0@@": "<p>Valor que indica quants sectors després o per sota s'inclouran a la finestra definida. El valor ha de ser un enter positiu entre 1 i 100. El valor per defecte és 1.</p><p>La unitat d'aquest paràmetre és Sector.</p>",
	"@@Dimensional-Moving-Statistics_inputraster_tag0@@": "<p>El ràster d'entrada només pot ser un ràster multimensional en format de ràster de núvol (fitxer <strong>.crf</strong>).</p>",
	"@@Dimensional-Moving-Statistics_nodatahandling_tag0@@": "<p>Especifica com el càlcul estadístic gestionarà els valors NoData.</p><ul><li><strong>Dades</strong>: els valors NoData de l'entrada de valors s'ignoraran als resultats de la finestra definida en què es trobin. Aquest és el valor per defecte.</li><li><strong>NoData</strong>: els valors de sortida seran NoData si hi ha valors NoData a l'entrada dins de la finestra definida.</li><li><strong>Emplena NoData</strong>: els valors de cel·la NoData se substituiran mitjançant l'estadística seleccionada dins de la finestra definida.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentileinterpolationtype_tag0@@": "<p>Especifica el mètode d'interpolació que es farà servir quan el valor de percentil estigui entre dos valors de cel·la.</p><ul><li><strong>Detecta automàticament</strong>: si el ràster d'entrada és de tipus de píxel enter, s'utilitzarà el mètode <strong>Més proper</strong>. Si el ràster d'entrada és de tipus de píxel flotant, es farà servir el mètode<strong>Lineal</strong>. Aquest és el valor per defecte.</li><li><strong>Més proper</strong>: es farà servir el valor disponible més proper al percentil. En aquest cas, el tipus de píxel de sortida serà el mateix que el del ràster de valor d'entrada.</li><li><strong>Lineal</strong>: es farà servir la mitjana ponderada dels dos valors circumdants del percentil. En aquest cas, el tipus de píxel de sortida serà de punt flotant.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentilevalue_tag0@@": "<p>Percentil que es calcularà quan<strong>Percentil</strong>s'hagi seleccionat com a tipus d'estadística. El valor per defecte és 90, per al percentil 90.</p><p>Els valors poden ser de 0 a 100. El percentil 0 és bàsicament equivalent a l'estadística mínima i el percentil 100 equival a l'estadística màxima, amb l'excepció que el resultat serà de tipus punt flotant. Un valor de 50 produirà el mateix resultat que l'estadística mediana.</p>",
	"@@Dimensional-Moving-Statistics_statisticstype_tag0@@": "<p>Especifica el tipus d'estadística que es calcularà.</p><p></p><ul><li><strong>Mitjana</strong>: es calcularà la mitjana (valor mitjà) de les cel·les de la finestra definida. Aquest és el valor per defecte.</li><li><strong>Mitjana circular</strong>: es calcularà la mitjana circular de les cel·les de la finestra definida. Quan se selecciona aquest tipus d'estadística, el paràmetre<strong>Valor d'ajust circular</strong>està disponible.</li><li><strong>Majoria</strong>: s'identificarà la majoria (valor que es produeix amb més freqüència) de les cel·les de la finestra definida.</li><li><strong>Màxim</strong>: s'identificarà el màxim (valor més gran) de les cel·les de la finestra definida.</li><li><strong>Mediana</strong>: s'identificarà la mediana de les cel·les del veïnat.</li><li><strong>Mínim</strong>: s'identificarà el valor mínim (més petit) de les cel·les del veïnat.</li><li><strong>Percentil</strong>: es calcularà un percentil de les cel·les del veïnat. Quan se selecciona aquest tipus d'estadística, els paràmetres<strong>Valor de percentil</strong>i<strong>Tipus d'interpolació del percentil</strong>estan disponibles. Feu servir aquests nous paràmetres per especificar el percentil que voleu calcular i triar el tipus d'interpolació que voleu fer servir, respectivament.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_dimension_tag0@@": "<p>Dimensió que s'utilitzarà per a la interpolació.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Definició de la dimensió</strong>s'estableix en<strong>Per interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_dimensiondefinition_tag0@@": "<p>Especifica el mètode que es farà servir per filtrar les dades multidimensionals d'entrada abans de dur a terme la interpolació.</p><ul><li><strong>Per valors</strong>: la dimensió es dividirà en sectors utilitzant un valor de dimensió o una llista de valors.</li><li><strong>Per interval</strong>: la dimensió es dividirà en sectors utilitzant un interval o una llista d'intervals.</li><li><strong>Per ràster de destinació</strong>: la dimensió es dividirà en sectors utilitzant un ràster multidimensional de destinació específic.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_endofinterval_tag0@@": "<p>Final de l'interval, que es fa servir per iterar al dataset.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Definició de la dimensió</strong>s'estableix en<strong>Per interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_ignorenodata_tag0@@": "<p>Especifica si els valors NoData s'ignoraran a l'anàlisi.</p><ul><li>Desactivat: l'anàlisi tindrà com a resultat NoData si hi ha valors NoData als sectors adjacents. Aquest és el valor per defecte.</li><li>Activat: l'anàlisi només farà servir sectors que tinguin píxels vàlids i ignorarà els sectors NoData.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_interpolationmethod_tag0@@": "<p>Especifica el mètode que es farà servir per interpolar el ràster.</p><ul><li><strong>Lineal</strong>: la sortida s'interpolarà linealment mitjançant els sectors adjacents. Aquest és el valor per defecte.</li><li><strong>Veí més proper</strong>: la sortida farà servir el sector adjacent més proper.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_raster_tag0@@": "<p>Ràster multidimensional d'entrada.</p>",
	"@@Interpolate-Raster-By-Dimension_startofinterval_tag0@@": "<p>Inici de l'interval, que es fa servir per iterar al dataset.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Definició de la dimensió</strong>s'estableix en<strong>Per interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_step_tag0@@": "<p>Freqüència amb què s'interpolaran les dades.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Definició de la dimensió</strong>s'estableix en<strong>Per interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_targetraster_tag0@@": "<p>Ràster de destinació especificat per la definició de la dimensió.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Definició de la dimensió</strong>s'estableix en<strong>Per ràster de destinació</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_unit_tag0@@": "<p>Unitat de l'interval.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Definició de la dimensió</strong>s'estableix en<strong>Per interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_values_tag0@@": "<p>Valors dimensionals que es faran servir per filtrar les dades multidimensionals d'entrada per a l'anàlisi.</p><p>Aquest paràmetre és obligatori quan el paràmetre<strong>Definició de la dimensió</strong>s'estableix en<strong>Per valors</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_variables_tag0@@": "<p>Variable o variables que interpolarà la definició de la dimensió.</p>",
	"@@Terrain-Flatten_calibrationtype_tag0@@": "<p>Especifica si la sortida serà un terreny aplanat mitjançant <strong>Sigma zero</strong> o <strong>Gamma zero</strong>.</p><ul><li><strong>Gamma zero</strong>: la retrodispersió beta zero es normalitzarà mitjançant l'àrea d'unitat d'un nivell localment tangent a DEM, que se sol conèixer com a angle d'incidència local. Aquesta és l'opció per defecte.</li><li><strong>Sigma zero</strong>: s'utilitzarà un DEM per calcular l'àrea per normalitzar la retrodispersió.</li></ul>",
	"@@Terrain-Flatten_dem_tag0@@": "<p>DEM d'entrada.</p><p>El DEM s'utilitza per estimar l'àrea il·luminada local.</p>",
	"@@Terrain-Flatten_geoid_tag0@@": "<p>Especifica si el sistema de referència vertical del DEM es transformarà en una alçada el·lipsoidal. Atès que se sol fer referència a la majoria dels datasets d'elevació a l'altitud ortomètrica del nivell del mar, en aquests casos cal fer la conversió a una altitud el·lipsoidal.</p><ul><li>Opció seleccionada: es farà una correcció de geoide per convertir l'altitud ortomètrica en altitud el·lipsoidal (basada en el geoide EGM96). Aquesta és l'opció per defecte.</li><li>Opció no seleccionada: no es farà cap correcció de geoide. Utilitzeu aquesta opció només si el DEM s'expressa en altitud el·lipsoidal.</li></ul>",
	"@@Terrain-Flatten_raster_tag0@@": "<p>Dades del radar d'entrada.</p><p>En primer lloc cal calibrar radiomètricament aquest ràster a beta zero.</p>",
	"@@Create-Color-Composite_blueexpression_tag0@@": "<p>Càlcul assignat a la tercera banda.</p><p>Nom de banda, Id. de banda o expressió algebraica que utilitza les bandes.</p><p>Les operadors admesos són unaris: suma (+), resta (-), multiplicació (*) i divisió (/).</p>",
	"@@Create-Color-Composite_greenexpression_tag0@@": "<p>Càlcul assignat a la segona banda.</p><p>Nom de banda, Id. de banda o expressió algebraica que utilitza les bandes.</p><p>Els operadors admesos són unaris: suma (+), resta (-), multiplicació (*) i divisió (/).</p>",
	"@@Create-Color-Composite_inputraster_tag0@@": "<p>Dades de ràster multibanda d'entrada.</p>",
	"@@Create-Color-Composite_method_tag0@@": "<p>Especifica el mètode que s'utilitzarà per extreure bandes.</p><ul><li>Noms de banda: -s'utilitzarà el nom de banda que representa l'interval de longitud d'ona a l'espectre electromagnètic (per exemple, vermell, infraroig proper o infraroig tèrmic) o la polarització (per exemple, VH, VV, HH o HV). Aquesta és l'opció per defecte.</li><li>Id. de banda: s'utilitzarà el número de banda (per exemple, B1, B2 o B3).</li></ul>",
	"@@Create-Color-Composite_redexpression_tag0@@": "<p>Càlcul assignat a la primera banda.</p><p>Nom de banda, Id. de banda o expressió algebraica que utilitza les bandes.</p><p>Els operadors admesos són unaris: suma (+), resta (-), multiplicació (*) i divisió (/).</p>",
	"@@Surface-Parameters_localsurfacetype_tag0@@": "<p>Trieu el tipus de funció de superfície que s'ajustarà al voltant de la cel·la de destinació.</p><ul><li>Quadràtica: s'ajustarà una funció de superfície quadràtica a les cel·les del veïnat. Aquest és el tipus per defecte.</li><li>Biquadràtica: s'ajustarà una funció de superfície biquadràtica a les cel·les del veïnat.</li></ul>",
	"@@Surface-Parameters_neighborhooddistance_tag0@@": "<p>Es calcularà la sortida al llarg d'aquesta distància respecte del centre de la cel·la de destinació. Determina la mida del veïnat. El valor per defecte és la mida de la cel·la del ràster d'entrada, que dona lloc a un veïnat de 3 per 3.</p>",
	"@@Surface-Parameters_outputslopemeasurement_tag0@@": "<p>Unitats de mesura (graus o percentatges) que s'utilitzaran per al ràster de pendent de sortida. Aquest paràmetre només està actiu quan<strong>Tipus de paràmetre</strong>és<strong>Pendent</strong>.</p><ul><li>Grau: la inclinació del pendent es calcularà en graus. Aquest és el valor per defecte.</li><li>Percentatge d'elevació: la inclinació del pendent es calcularà com un percentatge d'elevació, que també es coneix com a pendent en percentatge.</li></ul>",
	"@@Surface-Parameters_parametertype_tag0@@": "<p>Especifica el paràmetre de superfície de sortida que es calcularà.</p><ul><li>Pendent: es calcularà l'índex de canvi en l'elevació. Aquest és el valor per defecte.</li><li>Aspecte: es calcularà la direcció descendent de l'índex de canvi màxim de cada cel·la.</li><li>Curvatura mitjana: es mesurarà la curvatura general de la superfície. Es calcula com la mitjana de la curvatura mínima i màxima. Aquesta curvatura descriu la convexitat i la concavitat intrínseques de la superfície, independentment de la direcció o la influència de la gravetat.</li><li>Curvatura tangencial (contorn normal): es mesurarà la curvatura normal geomètrica perpendicular a la línia de pendent, tangent a la línia de contorn. Aquesta curvatura normalment s'aplica per caracteritzar la convergència o la divergència del flux per la superfície.</li><li>Curvatura del perfil (línia de pendent normal): es mesurarà la curvatura normal geomètrica al llarg de la línia de pendent. Normalment, aquesta curvatura s'aplica per caracteritzar l'acceleració i la desacceleració del flux per la superfície.</li><li>Curvatura del pla (contorn projectat): es mesurarà la curvatura al llarg de les línies de contorn.</li><li>Torsió geodèsica del contorn: es mesurarà l'índex de canvi de l'angle de pendent al llarg de les línies de contorn.</li><li>Curvatura gaussiana: es mesurarà la curvatura general de la superfície. Es calcula com el producte de la curvatura mínima i màxima.</li><li>Curvatura de Casorati: es mesurarà la curvatura general de la superfície. Pot ser zero o qualsevol altre nombre positiu.</li></ul>",
	"@@Surface-Parameters_projectgeodesicazimuths_tag0@@": "<p>Especifica si es projectaran azimuts geodèsics per corregir l'angle de distorsió causat per la referència espacial de sortida. Aquest paràmetre només està actiu quan<strong>Tipus de paràmetre</strong>és<strong>Aspecte</strong>.</p><ul><li>Desactivat: no es projectaran azimuts geodèsics. Aquest és el valor per defecte.</li><li>Activat: es projectara azimuts geodèsics.</li></ul>",
	"@@Surface-Parameters_raster_tag0@@": "<p>Ràster de superfície d'entrada. Pot ser un enter o un ràster de punt flotant.</p>",
	"@@Surface-Parameters_useadaptiveneighborhood_tag0@@": "<p>Especifica si la distància de veïnatge variarà amb els canvis del paisatge (adaptativa). La distància màxima la determina la distància de veïnatge. La distància mínima és la mida de la cel·la del ràster d'entrada.</p><ul><li>Desactivat: s'utilitzarà una única distància de veïnatge (fixa) a totes les ubicacions. Aquest és el valor per defecte.</li><li>Activa: s'utilitzarà una distància de veïnatge adaptativa a totes les ubicacions.</li></ul>",
	"@@Surface-Parameters_useequatorialaspect_tag0@@": "<p>Especifica si l'aspecte es mesurarà des d'un punt de l'equador o des del pol nord. Aquest paràmetre només està actiu quan<strong>Tipus de paràmetre</strong>és<strong>Aspecte</strong>.</p><ul><li>Desactivat: l'aspecte es mesurarà des del pol nord. Aquest és el valor per defecte.</li><li>Activat: l'aspecte es mesurarà des d'un punt de l'equador.</li></ul>",
	"@@Surface-Parameters_zunit_tag0@@": "<p>Unitat lineal dels valors z verticals.</p><p>Es defineix mitjançant un sistema de coordenades verticals, si n'hi ha. Si no hi ha cap sistema de coordenades verticals, la unitat z s'ha de definir des de la llista d'unitats per garantir el càlcul geodèsic.</p><ul><li>Polzada: la unitat lineal seran polzades.</li><li>Peu: la unitat lineal seran peus.</li><li>Iarda: la unitat lineal seran iardes.</li><li>Milla dels EUA: la unitat lineal seran milles.</li><li>Milla nàutica: la unitat lineal seran milles nàutiques.</li><li>Mil·límetre: la unitat lineal seran mil·límetres.</li><li>Centímetres: la unitat lineal seran centímetres.</li><li>Metre: la unitat lineal seran metres. Aquest és el valor per defecte.</li><li>Quilòmetre: la unitat lineal seran quilòmetres.</li><li>Decímetre: la unitat lineal seran decímetres.</li></ul>",
	"@@Surface-Parameters_analysismask_tag0@@": "<p>Un ràster que especifica les ubicacions on es produirà l'anàlisi.</p><p>El ràster pot ser de tipus enter o punt flotant.</p><p>Totes les cel·les amb un valor vàlid, incloent-hi zero, formaran la màscara. Les cel·les que siguin NoData a la màscara d'entrada seran NoData a la sortida.</p>",
	"@@Geometric-Median_cellsizetype_tag0@@": "<p>Trieu la mida de cel·la que voleu fer servir al ràster de sortida. Si la mida de totes les cel·les d'entrada és igual, totes les opcions donaran el mateix resultat.</p><ul><li>Primer de: utilitzeu la primera mida de cel·la dels ràsters d'entrada.</li><li>Mínim de: utilitzeu la mida de cel·la més petita de tots els ràsters d'entrada.</li><li>Màxim de: utilitzeu la mida de cel·la més gran de tots els ràsters d'entrada. Aquesta és l'opció per defecte.</li><li>Mitjana de: utilitzeu la mida de cel·la mitjana de tots els ràsters d'entrada.</li><li>Últim de: utilitzeu la darrera mida de cel·la dels ràsters d'entrada.</li></ul>",
	"@@Geometric-Median_epsilon_tag0@@": "<p>Especifica el valor de convergència entre dues iteracions consecutives. Quan èpsilon és inferior o igual que el valor especificat, la iteració s'atura i s'utilitza el resultat de l'última iteració.</p>",
	"@@Geometric-Median_extenttype_tag0@@": "<p>Trieu quina extensió s'ha de fer servir al ràster de sortida:</p><ul><li><p>Primer de: utilitzeu l'extensió del primer ràster d'entrada per determinar l'extensió de processament.</p></li><li>Intersecció de: utilitzeu l'extensió dels píxels superposats per determinar l'extensió de processament. Aquesta és l'opció per defecte.</li><li>Unió de: utilitzeu l'extensió de tots els ràsters per determinar l'extensió de processament.</li><li>Últim de: utilitzeu l'extensió de l'últim ràster d'entrada per determinar l'extensió de processament.</li></ul>",
	"@@Geometric-Median_maximumnumberofiterations_tag0@@": "<p>Especifica el nombre màxim d'iteracions per completar. La computació finalitza quan s'arriba a aquest valor, independentment de l'opció de configuració<strong>Èpsilon</strong>.</p>",
	"@@Geometric-Median_rasters_tag0@@": "<p>Ràsters multibanda d'entrada.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster1_tag0@@": "<p>Ràster d'entrada que representa la distància de cost acumulatiu de la primera font.</p><p>Ha de ser una sortida de distància de cost acumulat de la funció<strong>Acumulació de distància</strong>o<strong>Assignació de distància</strong>.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster2_tag0@@": "<p>Ràster d'entrada que representa la distància de cost acumulatiu de la segona font.</p><p>Ha de ser una sortida de distància de cost acumulat de la funció<strong>Acumulació de distància</strong>o<strong>Assignació de distància</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster1_tag0@@": "<p>Ràster de direcció inversa d'entrada de la primera font.</p><p>Aquest dataset ràster identifica la direcció de la pròxima cel·la a la ruta de menor cost de tornada a la primera font. És la sortida de la funció<strong>Acumulació de distància</strong>o<strong>Assignació de distància</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster2_tag0@@": "<p>Ràster de direcció inversa d'entrada de la segona font.</p><p>Aquest dataset ràster identifica la direcció de la pròxima cel·la a la ruta de menor cost de tornada a la primera font. És la sortida de la funció<strong>Acumulació de distància</strong>o<strong>Assignació de distància</strong>.</p>",
	"@@Least-Cost-Corridor_threshold_tag0@@": "<p>Un llindar de percentatge o cost acumulatiu que determinarà si una cel·la determinada s'inclourà al ràster de corredor de sortida.</p><p>Quan el paràmetre<strong>Mètode de llindar</strong>estigui definit en<strong>Percentatge del menor cost</strong>, el valor especificat indica l'augment percentual que s'aplicarà respecte del valor mínim dels ràsters de distància de cost acumulatiu sumat. Quan el paràmetre<strong>Mètode de llindar</strong>es defineix en<strong>Cost acumulatiu</strong>, el valor indica les cel·les que tenen un cost acumulatiu sumat igual o inferior al valor que s'inclourà al corredor.</p><p>Aquest paràmetre només està actiu si el<strong>Mètode de llindar</strong>està definit en<strong>Percentatge del menor cost</strong>o<strong>Cost acumulatiu</strong>.</p>",
	"@@Least-Cost-Corridor_thresholdmethod_tag0@@": "<p>Especifica com es definirà el llindar.</p><p></p><ul><li><strong>Sense llindar</strong>: no s'aplicarà cap llindar i el corredor resultant cobrirà l'extensió completa de ràsters d'entrada. És el valor per defecte.</li><li><strong>Percentatge del menor cost</strong>: el llindar es definirà com un percentatge del valor mínim dels ràsters de distància de cost acumulatiu sumats.</li><li><strong>Cost acumulatiu</strong>: el llindar es definirà en unitats de distància de cost acumulatiu.</li></ul>"
};
const helpTexts_ca = {
	rfxArgsHelpTexts: rfxArgsHelpTexts
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpTexts_ca);


//# sourceMappingURL=help-texts.ca-1cfd3e53.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvYXJjZ2lzX2FuYWx5c2lzX25vZGVfbW9kdWxlc19hcmNnaXNfYXJjZ2lzLXJhc3Rlci1mdW5jdGlvbi1lZGl0b3JfLWZiMTAyZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxHQUFHO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLFlBQVk7QUFDaEcsdUZBQXVGLFlBQVk7QUFDbkcsb0ZBQW9GLFlBQVk7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpUUFBaVEsS0FBSztBQUN0UTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNHQUFzRyxLQUFLO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNE5BQTROLE9BQU87QUFDbk87QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyV0FBMlcsYUFBYSxJQUFJLFVBQVU7QUFDdFk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwV0FBMFcsYUFBYSxJQUFJLFVBQVU7QUFDclk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseVdBQXlXLGFBQWEsSUFBSSxVQUFVO0FBQ3BZO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJJQUEySSxRQUFRO0FBQ25KO0FBQ0EsNElBQTRJLE9BQU87QUFDbko7QUFDQTtBQUNBLHNHQUFzRyxFQUFFLGtGQUFrRixJQUFJO0FBQzlMO0FBQ0EsNEdBQTRHLEdBQUcsT0FBTyxHQUFHO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0TkFBNE4sT0FBTztBQUNuTztBQUNBO0FBQ0EsK0VBQStFLFFBQVE7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1T0FBdU8sT0FBTztBQUM5TztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLFFBQVE7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscU5BQXFOO0FBQ3JOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0hBQWdILE9BQU87QUFDdkgsK0hBQStILFFBQVE7QUFDdkksbUpBQW1KLE9BQU8saURBQWlELE9BQU87QUFDbE47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMFJBQTBSO0FBQzFSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRLQUE0SyxHQUFHO0FBQy9LO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVHQUF1RyxRQUFRO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsMENBQTBDLHdFQUF3RSxJQUFJLHlFQUF5RSxJQUFJO0FBQzlPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5U0FBeVMsT0FBTztBQUNoVCw0TkFBNE4sT0FBTztBQUNuTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyV0FBMlcsYUFBYSxJQUFJLFVBQVU7QUFDdFk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwySkFBMkosdURBQXVELE9BQU87QUFDek4sb0dBQW9HLE9BQU87QUFDM0c7QUFDQSw0RkFBNEYsUUFBUSwwSEFBMEgsT0FBTztBQUNyTyxrR0FBa0csUUFBUSwwR0FBMEcsT0FBTztBQUMzTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRUFBc0UsS0FBSztBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUdBQWlHLFFBQVE7QUFDekcsa0tBQWtLLFFBQVEsK0RBQStELFFBQVE7QUFDalAsK01BQStNLFFBQVE7QUFDdk47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsKytCQUErK0IscUxBQXFMLFlBQVk7QUFDaHJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5V0FBeVcsYUFBYSxJQUFJLFVBQVU7QUFDcFksOGdDQUE4Z0M7QUFDOWdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDAvQkFBMC9CLHFMQUFxTCxZQUFZO0FBQzNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvWEFBb1gsYUFBYSxJQUFJLFVBQVU7QUFDL1k7QUFDQSx5aENBQXloQztBQUN6aEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseS9CQUF5L0IscUxBQXFMLFlBQVk7QUFDMXJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtWEFBbVgsYUFBYSxJQUFJLFVBQVU7QUFDOVksd2hDQUF3aEM7QUFDeGhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNIQUFzSCx5QkFBeUI7QUFDL0k7QUFDQSwyS0FBMkssOEJBQThCO0FBQ3pNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRkFBK0YsTUFBTTtBQUNyRyw0SUFBNEksT0FBTyxJQUFJLE1BQU07QUFDN0o7QUFDQTtBQUNBLDhOQUE4TixNQUFNO0FBQ3BPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdVNBQXVTO0FBQ3ZTO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrUkFBK1I7QUFDL1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLFdBQVcsNElBQTRJLFdBQVc7QUFDdFA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtQQUFrUDtBQUNsUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtLQUFrSztBQUNsSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzR0FBc0csT0FBTztBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkdBQTZHLHNEQUFzRDtBQUNuSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUpBQW1KLEtBQUssMEpBQTBKLE1BQU07QUFDeFQ7QUFDQTtBQUNBLHdNQUF3TSxnQkFBZ0I7QUFDeE47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1R0FBdUcsT0FBTztBQUM5Ryw4RkFBOEYsUUFBUSx3SEFBd0gsUUFBUTtBQUN0Tyx1TUFBdU0sT0FBTywwREFBMEQsT0FBTyw2RkFBNkYsT0FBTztBQUNuWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0SEFBNEgsRUFBRTtBQUM5SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdS9CQUF1L0IscUxBQXFMLFlBQVk7QUFDeHJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnWEFBZ1gsYUFBYSxJQUFJLFVBQVU7QUFDM1ksc2hDQUFzaEM7QUFDdGhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxL0JBQXEvQixxTEFBcUwsWUFBWTtBQUN0ckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhXQUE4VyxhQUFhLElBQUksVUFBVTtBQUN6WSxvaENBQW9oQztBQUNwaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseXdCQUF5d0I7QUFDendCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsWUFBWSxFQUFDO0FBQ0E7O0FBRTVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL2V4dGVuc2lvbnMvd2lkZ2V0cy9hcmNnaXMvYW5hbHlzaXMvbm9kZV9tb2R1bGVzL0BhcmNnaXMvYXJjZ2lzLXJhc3Rlci1mdW5jdGlvbi1lZGl0b3IvZGlzdC9lc20vaGVscC10ZXh0cy5jYS0xY2ZkM2U1My5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByZnhBcmdzSGVscFRleHRzID0ge1xuXHRcIkBAQWJzX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQEFic19DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQWJzX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBYnNfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBBYnNfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFic19DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBYnNfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAQWJzX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQWJzX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQWJzX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEFic19FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEFic19SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgZGVsIHF1YWwgZXMgY2FsY3VsYXJhbiBlbHMgdmFsb3JzIGFic29sdXRzLlwiLFxuXHRcIkBAQUNvc19DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBBQ29zX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBQ29zX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBQ29zX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQUNvc19DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQUNvc19DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBQ29zX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEFDb3NfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBQ29zX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQUNvc19FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBQ29zX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQUNvc19SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBkZSBsYSBxdWFsIGVzIGNhbGN1bGFyYW4gZWxzIHZhbG9ycyBkZWwgY29zaW51cyBpbnZlcnMuXCIsXG5cdFwiQEBBQ29zSF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBBQ29zSF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQUNvc0hfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFDb3NIX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQUNvc0hfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFDb3NIX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFDb3NIX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEFDb3NIX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQUNvc0hfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBBQ29zSF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBQ29zSF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEFDb3NIX1Jhc3Rlcl90YWcwQEBcIjogXCJFbnRyYWRhIGRlIGxhIHF1YWwgZXMgY2FsY3VsYXJhbiBlbHMgdmFsb3JzIGRlbCBjb3NpbnVzIGhpcGVyYsOybGljIGludmVycy5cIixcblx0XCJAQEFwcGFyZW50LVJlZmxlY3RhbmNlX0FsYmVkb190YWcwQEBcIjogXCJFbHMgcmVzdWx0YXRzIGRlIGxhIGZ1bmNpw7MgUmVmbGVjdMOgbmNpYSBhcGFyZW50IHRhbWLDqSBlcyBwb2RlbiBleHByZXNzYXIgY29tIGEgYWxiZWRvLCBxdWUgw6lzIGVsIHBlcmNlbnRhdGdlIGRlIGwnZW5lcmdpYSBkaXNwb25pYmxlIHF1ZSByZWZsZWN0ZWl4IGxhIHN1cGVyZsOtY2llIHBsYW5ldMOgcmlhLiBFbHMgdXN1YXJpcyBjaWVudMOtZmljcyB1dGlsaXR6ZW4gbGVzIGRhZGVzIGRlIGwnYWxiZWRvIHBlciBhIGxlcyBhcGxpY2FjaW9ucyB0w6hjbmlxdWVzIGkgZGUgbW9kZWxhdGdlIGRlIHRlbGVkZXRlY2Npw7MgY29tcGxleGVzLlwiLFxuXHRcIkBAQXBwYXJlbnQtUmVmbGVjdGFuY2VfQWxiZWRvX3RhZzFAQFwiOiBcIkRlc2FjdGl2YWRhOiBsYSBmdW5jacOzIHJldG9ybmEgdmFsb3JzIGRlIHJlZmxlY3TDoG5jaWEgYXBhcmVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBBcHBhcmVudC1SZWZsZWN0YW5jZV9BbGJlZG9fdGFnMkBAXCI6IFwiQWN0aXZhZGE6IGxhIGZ1bmNpw7MgcmV0b3JuYSB2YWxvcnMgZGUgcHVudCBmbG90YW50IGRlIDMyIGJpdHMsIHF1ZSBlcyB0cm9iZW4gbWFqb3JpdMOgcmlhbWVudCBlbiB1biBpbnRlcnZhbCBkZSAwLDAgYSAxLDAuIE5vIGVzIHJlYWxpdHphIGVsIHJldGFsbCBkZSBkYWRlcyBzaSBhcXVlc3RhIG9wY2nDsyBlc3TDoCBzZWxlY2Npb25hZGEuXCIsXG5cdFwiQEBBcHBhcmVudC1SZWZsZWN0YW5jZV9BbGJlZG9fdGFnM0BAXCI6IFwiQ29tIHF1ZSBsZXMgZGFkZXMgZGUgc29ydGlkYSBkJ0FsYmVkbyBzw7NuIGRlbCB0aXB1cyBwdW50IGZsb3RhbnQsIGNhbCBkZWZpbmlyIGRlIG1hbmVyYSBleHBsw61jaXRhIGVsIDxzdHJvbmc+dGlwdXMgZGUgcMOteGVsIGRlIHNvcnRpZGE8L3N0cm9uZz4gcHJlZmVyaXQgY29tIGEgZmxvdGFudCBkZSAzMiBiaXRzIG8gZG9ibGUgZGUgNjQgYml0cy4gRWwgcGFyw6BtZXRyZSA8c3Ryb25nPlRpcHVzIGRlIHDDrXhlbCBkZSBzb3J0aWRhPC9zdHJvbmc+IGVzIHRyb2JhIGEgbGEgcGVzdGFueWEgPHN0cm9uZz5HZW5lcmFsPC9zdHJvbmc+IGRlIGxhIGZ1bmNpw7MgZGUgcsOgc3RlciA8c3Ryb25nPlJlZmxlY3TDoG5jaWEgYXBhcmVudDwvc3Ryb25nPi4gU2kgZWwgPHN0cm9uZz5UaXB1cyBkZSBww614ZWwgZGUgc29ydGlkYTwvc3Ryb25nPiBubyBlcyBkZWZpbmVpeCBjb3JyZWN0YW1lbnQgcGVyIGEgbCdvcGNpw7MgPHN0cm9uZz5BbGJlZG88L3N0cm9uZz4sIGVscyB2YWxvcnMgcmVzdWx0YW50cyBubyBzw7NuIHbDoGxpZHMgaSB0ZW5lbiBlbCB2YWxvciAwLlwiLFxuXHRcIkBAQXBwYXJlbnQtUmVmbGVjdGFuY2VfT2Zmc2V0X3RhZzBAQFwiOiBcIkVsIHZhbG9yIGRlIGwnYWxiZWRvIGVzY2FsYXQgcG90IHRlbmlyIHVuIHZhbG9yIGRlIGRlc3BsYcOnYW1lbnQ6XCIsXG5cdFwiQEBBcHBhcmVudC1SZWZsZWN0YW5jZV9PZmZzZXRfdGFnMUBAXCI6IFwiUGVyIGFscyB0aXB1cyBkZSBkYWRlcyBzZW5zZSBzaWduYXIgZGUgMTYgYml0cywgZWwgZGVzcGxhw6dhbWVudCBkJ2VzY2FsYSBwZXIgZGVmZWN0ZSDDqXMgZGUgNS4wMDAuXCIsXG5cdFwiQEBBcHBhcmVudC1SZWZsZWN0YW5jZV9PZmZzZXRfdGFnMkBAXCI6IFwiUGVyIGFscyB0aXB1cyBkZSBkYWRlcyBzZW5zZSBzaWduYXIgZGUgOCBiaXRzLCBlbCBkZXNwbGHDp2FtZW50IGQnZXNjYWxhIHBlciBkZWZlY3RlIMOpcyBkZSAwLlwiLFxuXHRcIkBAQXBwYXJlbnQtUmVmbGVjdGFuY2VfT2Zmc2V0X3RhZzNAQFwiOiBcIk5vIHMnYXBsaWNhIGNhcCBlc2NhbGEgcXVhbiBsYSBzb3J0aWRhIMOpcyBsJ2FsYmVkby5cIixcblx0XCJAQEFwcGFyZW50LVJlZmxlY3RhbmNlX1JhZGlhbmNlLUdhaW5zLWFuZC1CaWFzLVZhbHVlcy1wZXItQmFuZF90YWcwQEBcIjogXCJQb2RldSBkZWZpbmlyIG8gZWRpdGFyIG1hbnVhbG1lbnQgYXF1ZXN0IHZhbG9yIHBlciBhIGNhZGEgYmFuZGEuIExhIGluZm9ybWFjacOzIGFkZXF1YWRhIGVzIHBvdCBvYnRlbmlyIGRlIGxlcyBtZXRhZGFkZXMgZGUgcHJvZHVjdGUgZGUgcsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBcHBhcmVudC1SZWZsZWN0YW5jZV9SYXN0ZXJfdGFnMEBAXCI6IFwiRWwgcHJvZHVjdGUgZGUgcsOgc3RlciBhbCBxdWFsIHMnYXBsaWNhcsOgIGxhIHJlZmxlY3TDoG5jaWEgYXBhcmVudC5cIixcblx0XCJAQEFwcGFyZW50LVJlZmxlY3RhbmNlX1NjYWxlLUZhY3Rvcl90YWcwQEBcIjogXCJFbCB2YWxvciBkZSBzb3J0aWRhIGRlIHJlZmxlY3TDoG5jaWEgYXBhcmVudCBlcyBwb3QgZXhwcmVzc2FyIGNvbSB1biBlbnRlci4gRWwgZmFjdG9yIGQnZXNjYWxhIGVzIG11bHRpcGxpY2EgcGVyIGwnYWxiZWRvIHBlciBjb252ZXJ0aXIgdG90cyBlbHMgdmFsb3JzIGRlIHB1bnQgZmxvdGFudCBlbiB2YWxvcnMgZW50ZXJzLlwiLFxuXHRcIkBAQXBwYXJlbnQtUmVmbGVjdGFuY2VfU2NhbGUtRmFjdG9yX3RhZzFAQFwiOiBcIlNpIGVsIGZhY3RvciBkJ2VzY2FsYSDDqXMgJHswfSBvIG5vIHMnZXNwZWNpZmljYSwgcydhcGxpY2Fyw6AgbCdlc2NhbGEgcGVyIGRlZmVjdGUgZW4gZnVuY2nDsyBkZWwgdGlwdXMgZGUgcMOteGVsIGRlIGxlcyBkYWRlcyBkJ2VudHJhZGE6XCIsXG5cdFwiQEBBcHBhcmVudC1SZWZsZWN0YW5jZV9TY2FsZS1GYWN0b3JfdGFnMkBAXCI6IFwiUGVyIGFscyB0aXB1cyBkZSBkYWRlcyBzZW5zZSBzaWduYXIgZGUgMTYgYml0cywgZWwgZmFjdG9yIGQnZXNjYWxhIHBlciBkZWZlY3RlIMOpcyBkZSA1MC4wMDAuXCIsXG5cdFwiQEBBcHBhcmVudC1SZWZsZWN0YW5jZV9TY2FsZS1GYWN0b3JfdGFnM0BAXCI6IFwiUGVyIGFscyB0aXB1cyBkZSBkYWRlcyBzZW5zZSBzaWduYXIgZGUgOCBiaXRzLCBlbCBmYWN0b3IgZCdlc2NhbGEgcGVyIGRlZmVjdGUgw6lzIGRlIDI1NS5cIixcblx0XCJAQEFwcGFyZW50LVJlZmxlY3RhbmNlX1NjYWxlLUZhY3Rvcl90YWc0QEBcIjogXCJFbCBmYWN0b3IgZCdlc2NhbGEgc2VtcHJlIHMnYXBsaWNhIHF1YW4gbGEgc29ydGlkYSDDqXMgbGEgcmVmbGVjdMOgbmNpYSBhcGFyZW50LiBObyBzJ2FwbGljYSBjYXAgZXNjYWxhIHF1YW4gbGEgc29ydGlkYSDDqXMgbCdhbGJlZG8uXCIsXG5cdFwiQEBBcHBhcmVudC1SZWZsZWN0YW5jZV9TdW4tRWxldmF0aW9uX3RhZzBAQFwiOiBcIsOJcyBlbCB2YWxvciBkJ2VsZXZhY2nDsyBkZWwgc29sIGV4cHJlc3NhdCBlbiBncmF1cy4gRWwgc2lzdGVtYSBsJ2VtcGxlbmFyw6Agc2kgbGEgaW5mb3JtYWNpw7MgYWRlcXVhZGEgZXMgcG90IG9idGVuaXIgZGUgbGVzIG1ldGFkYWRlcy4gUG9kZXUgZGVmaW5pciBvIGVkaXRhciBtYW51YWxtZW50IGFxdWVzdCB2YWxvci5cIixcblx0XCJAQEFyZ1N0YXRpc3RpY3NfTWF4X3RhZzBAQFwiOiBcIkVsIHZhbG9yIG3DoHhpbSBxdWUgZGVmaW5pdSDDqXMgZWwgdmFsb3IgbcOpcyBhbHQgaWd1YWwgbyBtZW5vciBxdWUgZWwgZmluYWwgZGUgbGEgZHVyYWRhLlwiLFxuXHRcIkBAQXJnU3RhdGlzdGljc19NYXhfdGFnMUBAXCI6IFwiQXF1ZXN0YSBlbnRyYWRhIG5vbcOpcyDDqXMgYXBsaWNhYmxlIHNpIGVsIG3DqHRvZGUgw6lzIER1cmF0aW9uLlwiLFxuXHRcIkBAQXJnU3RhdGlzdGljc19NZXRob2RfdGFnMEBAXCI6IFwiU2VsZWNjaW9uZXUgZWwgbcOodG9kZSBkJ2VzdGFkw61zdGlxdWVzIGRlbCBjw6BsY3VsOlwiLFxuXHRcIkBAQXJnU3RhdGlzdGljc19NZXRob2RfdGFnMUBAXCI6IFwiQXJnIE1heDogYXJndW1lbnQgZGVsIHZhbG9yIG3DoHhpbSwgcXVlIHJldG9ybmEgJHtCYW5kIGluZGV4fSBwZXIgYWwgcXVhbCBlbCBww614ZWwgcHJvcG9yY2lvbmF0IG9idMOpIGVsIHNldSB2YWxvciBtw61uaW0gZGUgdG90ZXMgbGVzIGJhbmRlcy4gVG90ZXMgbGVzIGJhbmRlcyBkZSByw6BzdGVyIGRlIGNhZGEgcsOgc3RlciBkJ2VudHJhZGEgdGVuZW4gYXNzaWduYXQgdW4gw61uZGV4IGRlIGJhbmRhIGluY3JlbWVudGFsIGRlIGJhc2UgMCwgcXVlIHMnb3JkZW5hIHByaW1lciBwZXIgbCfDrW5kZXggZGVsIHLDoHN0ZXIgZCdlbnRyYWRhIGksIHBvc3Rlcmlvcm1lbnQsIHBlciBsJ29yZHJlIGRlIGJhbmRhIHJlbGF0aXUgZGlucyBkZSBjYWRhIHLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQXJnU3RhdGlzdGljc19NZXRob2RfdGFnMkBAXCI6IFwiQXJnIE1lZGlhbjogYXJndW1lbnQgZGVsIHZhbG9yIG1pdGrDoCwgcXVlIHJldG9ybmEgJHtCYW5kIGluZGV4fSBwZXIgYWwgcXVhbCBlbCBww614ZWwgcHJvcG9yY2lvbmF0IG9idMOpIGVsIHNldSB2YWxvciBtaXRqw6AgZGUgdG90ZXMgbGVzIGJhbmRlcy5cIixcblx0XCJAQEFyZ1N0YXRpc3RpY3NfTWV0aG9kX3RhZzNAQFwiOiBcIkFyZyBNaW46IGFyZ3VtZW50IGRlbCB2YWxvciBtw61uaW0sIHF1ZSByZXRvcm5hICR7QmFuZCBpbmRleH0gcGVyIGFsIHF1YWwgZWwgcMOteGVsIHByb3BvcmNpb25hdCBvYnTDqSBlbCBzZXUgdmFsb3IgbcOtbmltIGRlIHRvdGVzIGxlcyBiYW5kZXMuXCIsXG5cdFwiQEBBcmdTdGF0aXN0aWNzX01ldGhvZF90YWc0QEBcIjogXCJEdXJhZGE6IGVsIG3DqHRvZGUgRHVyYWRhIGNlcmNhIGVscyBlbGVtZW50cyBjb25zZWN1dGl1cyBtw6lzIGxsYXJncyBkZSBsYSBtYXRyaXUsIG9uIGNhZGEgZWxlbWVudCB0w6kgdW4gdmFsb3IgbcOpcyBncmFuIG8gaWd1YWwgcXVlIDxzdHJvbmc+TcOtbmltPC9zdHJvbmc+IGkgbWVub3IgbyBpZ3VhbCBxdWUgPHN0cm9uZz5Nw6B4aW08L3N0cm9uZz4sIGkgZW4gcmV0b3JuYSBsYSBsb25naXR1ZC5cIixcblx0XCJAQEFyZ1N0YXRpc3RpY3NfTWluX3RhZzBAQFwiOiBcIkVsIHZhbG9yIG3DrW5pbSBxdWUgZGVmaW5pdSDDqXMgZWwgdmFsb3IgbcOpcyBiYWl4IGlndWFsIG8gbWFqb3IgcXVlIGwnaW5pY2kgZGUgbGEgZHVyYWRhLlwiLFxuXHRcIkBAQXJnU3RhdGlzdGljc19NaW5fdGFnMUBAXCI6IFwiQXF1ZXN0YSBlbnRyYWRhIG5vbcOpcyDDqXMgYXBsaWNhYmxlIHNpIGVsIG3DqHRvZGUgw6lzIER1cmF0aW9uLlwiLFxuXHRcIkBAQXJnU3RhdGlzdGljc19SYXN0ZXJzX3RhZzBAQFwiOiBcIkVsIHLDoHN0ZXIgZCdlbnRyYWRhIGFsIHF1YWwgZXhlY3V0YXJldSBlbHMgZGl2ZXJzb3MgbcOodG9kZXMgZXN0YWTDrXN0aWNzLlwiLFxuXHRcIkBAQXJnU3RhdGlzdGljc19VbmRlZmluZWQtQ2xhc3NfdGFnMEBAXCI6IFwiRW50cmFkYSBjb25zdGFudCBxdWUgZXMgcmV0b3JuYXLDoCBxdWFuIG5vIGVzIHB1Z3VpIG9idGVuaXIgY2FwIHZhbG9yIG3DoHhpbSwgbcOtbmltIG8gbWVkacOgIGRlZmluaXRpdS4gTCdlc2NlbmFyaSBtw6lzIGhhYml0dWFsIGVzIHByb2R1ZWl4IHF1YW4gZWwgdmFsb3IgbcOgeGltIG8gbcOtbmltIHTDqSBsbG9jIG3DqXMgZCd1bmEgdmVnYWRhIGVudHJlIGVscyB2YWxvcnMgZGUgdG90ZXMgbGVzIGJhbmRlcy4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgZGUgbGEgY29uc3RhbnQgbm8gZGVmaW5pZGEgw6lzIDEwMC5cIixcblx0XCJAQEFyZ1N0YXRpc3RpY3NfVW5kZWZpbmVkLUNsYXNzX3RhZzFAQFwiOiBcIkxhIGNsYXNzZSBzZW5zZSBkZWZpbmlyIG5vbcOpcyDDqXMgYXBsaWNhYmxlIHF1YW4gZWwgbcOodG9kZSDDqXMgPHN0cm9uZz5BcmdNYXg8L3N0cm9uZz4sIDxzdHJvbmc+QXJnTWluPC9zdHJvbmc+IG8gPHN0cm9uZz5BcmdNZWRpYW48L3N0cm9uZz4uXCIsXG5cdFwiQEBBcmdTdGF0aXN0aWNzX2lnbm9yZW5vZGF0YV90YWcwQEBcIjogXCJJbmRpY2Egc2kgZWwgY8OgbGN1bCBlc3RhZMOtc3RpYyBpZ25vcmEgZWxzIHZhbG9ycyBOb0RhdGEuXCIsXG5cdFwiQEBBcmdTdGF0aXN0aWNzX2lnbm9yZW5vZGF0YV90YWcxQEBcIjogXCJBY3RpdmFkYTogbCdhbsOgbGlzaSBpbmNsb3Vyw6AgdG90cyBlbHMgcMOteGVscyB2w6BsaWRzIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhIGkgaWdub3JhcsOgIGVscyBww614ZWxzIE5vRGF0YS5cIixcblx0XCJAQEFyZ1N0YXRpc3RpY3NfaWdub3Jlbm9kYXRhX3RhZzJAQFwiOiBcIkRlc2FjdGl2YWRhOiBsJ2Fuw6BsaXNpIHRpbmRyw6AgY29tIGEgcmVzdWx0YXQgTm9EYXRhIHNpIGhpIGhhIGFsZ3VuIHZhbG9yIE5vRGF0YSBwZXIgYWxzIHDDrXhlbHMgYSBsYSBkaW1lbnNpw7MgcHJvcG9yY2lvbmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBBcml0aG1ldGljX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQEFyaXRobWV0aWNfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFyaXRobWV0aWNfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFyaXRobWV0aWNfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBBcml0aG1ldGljX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBcml0aG1ldGljX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFyaXRobWV0aWNfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAQXJpdGhtZXRpY19FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEFyaXRobWV0aWNfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBBcml0aG1ldGljX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEFyaXRobWV0aWNfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBcml0aG1ldGljX09wZXJhdGlvbl90YWcwQEBcIjogXCJPcGVyYWNpw7MgYXJpdG3DqHRpY2EgcXVlIGVzIHJlYWxpdHphcsOgIGVudHJlIGVscyBkb3MgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQXJpdGhtZXRpY19PcGVyYXRpb25fdGFnMUBAXCI6IFwiTGVzIG9wY2lvbnMgc8OzbiBsZXMgc2Vnw7xlbnRzOlwiLFxuXHRcIkBAQXJpdGhtZXRpY19PcGVyYXRpb25fdGFnMkBAXCI6IFwiPHN0cm9uZz5EaXZpZGVpeDwvc3Ryb25nPjogZ2VuZXJhIGVsIHJlc3VsdGF0IGRpdmlzaWJsZSBlbnRyZSBlbHMgdmFsb3JzIGRlIHDDrXhlbCBjb3JyZXNwb25lbnRzIGRlIGNhZGEgcsOgc3Rlci5cIixcblx0XCJAQEFyaXRobWV0aWNfT3BlcmF0aW9uX3RhZzRAQFwiOiBcIjxzdHJvbmc+IFJlc3RhPC9zdHJvbmc+OiBnZW5lcmEgbGEgZGlmZXLDqG5jaWEgZW50cmUgZWxzIHZhbG9ycyBkZSBww614ZWwgY29ycmVzcG9uZW50cyBkZSBjYWRhIHLDoHN0ZXIuIEVzIHBvdCB1dGlsaXR6YXIgcGVyIGNhbGN1bGFyIGxhIGRldGVjY2nDsyBkZSBjYW52aXMuXCIsXG5cdFwiQEBBcml0aG1ldGljX09wZXJhdGlvbl90YWc2QEBcIjogXCI8c3Ryb25nPk1vZGU8L3N0cm9uZz46IGdlbmVyYSBlbCB2YWxvciBkZSBww614ZWwgZGUgdG90cyBlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBxdWUgdGVuZW4gbGxvYyBhbWIgbcOpcyBmcmVxw7zDqG5jaWEuIFBlciBleGVtcGxlLCBzaSBoaSBoYSBzaXMgYmFuZGVzIGVuIHVuIHLDoHN0ZXIsIGhpIGhhdXLDoCBzaXMgcMOteGVscyBzdXBlcnBvc2F0cy4gUGVyIGFscyB2YWxvcnMgNCwgNSwgNiwgNCwgNyBpIDksIGVsIHZhbG9yIGRlIG1vZGUgw6lzIDQuXCIsXG5cdFwiQEBBcml0aG1ldGljX09wZXJhdGlvbl90YWc4QEBcIjogXCI8c3Ryb25nPk11bHRpcGxpY2E8L3N0cm9uZz46IGdlbmVyYSBlbCBwcm9kdWN0ZSBkZWxzIHZhbG9ycyBkZSBww614ZWwgY29ycmVzcG9uZW50cyBkZSBjYWRhIHLDoHN0ZXIuIEVzIHBvdCB1dGlsaXR6YXIgcGVyIGV4ZWN1dGFyIGFsZ3VuZXMgZnVuY2lvbnMgZGUgY29zdG9zLlwiLFxuXHRcIkBAQXJpdGhtZXRpY19PcGVyYXRpb25fdGFnMTBAQFwiOiBcIjxzdHJvbmc+U3VtYTwvc3Ryb25nPjogZ2VuZXJhIGxhIHN1bWEgZGUgdG90cyBlbHMgdmFsb3JzIGRlIHDDrXhlbCBjb3JyZXNwb25lbnRzIGRlIGNhZGEgcsOgc3Rlci5cIixcblx0XCJAQEFyaXRobWV0aWNfT3BlcmF0aW9uX3RhZzEyQEBcIjogXCI8c3Ryb25nPlBvdMOobmNpYTwvc3Ryb25nPjogZ2VuZXJhIGVsIHByb2R1Y3RlIGRlbHMgdmFsb3JzIGRlIHDDrXhlbCBjb3JyZXNwb25lbnRzIGVsZXZhdHMgYSBsYSBwb3TDqG5jaWEgZGUgbCdlc2NhbGFyIG8gZWwgcsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBcml0aG1ldGljX1Jhc3Rlcl90YWcwQEBcIjogXCJQcmltZXIgZGF0YXNldCByw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQEFyaXRobWV0aWNfUmFzdGVyMl90YWcwQEBcIjogXCJTZWdvbiBkYXRhc2V0IHLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQVNpbl9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBBU2luX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBU2luX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBU2luX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQVNpbl9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQVNpbl9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBU2luX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEFTaW5fRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBU2luX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQVNpbl9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBU2luX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQVNpbl9SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBkZSBsYSBxdWFsIGVzIGNhbGN1bGFyYW4gZWxzIHZhbG9ycyBkZWwgc2ludXMgaW52ZXJzLlwiLFxuXHRcIkBAQVNpbkhfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAQVNpbkhfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFTaW5IX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBU2luSF9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEFTaW5IX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBU2luSF9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBU2luSF9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBBU2luSF9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEFTaW5IX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQVNpbkhfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQVNpbkhfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBU2luSF9SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBkZSBsYSBxdWFsIGVzIGNhbGN1bGFyYW4gZWxzIHZhbG9ycyBkZWwgc2ludXMgaGlwZXJiw7JsaWMgaW52ZXJzLlwiLFxuXHRcIkBAQXNwZWN0X1Jhc3Rlcl90YWcwQEBcIjogXCJERU0gZCdlbnRyYWRhIHV0aWxpdHphdCBwZXIgZGVyaXZhciBlbCBkYXRhc2V0IGQnYXNwZWN0ZS5cIixcblx0XCJAQEFzcGVjdC1TbG9wZV9SYXN0ZXJfdGFnMEBAXCI6IFwiREVNIGQnZW50cmFkYS5cIixcblx0XCJAQEFzcGVjdC1TbG9wZV9aLUZhY3Rvcl90YWcwQEBcIjogXCJGYWN0b3IgZCdlc2NhbGEgcXVlIHMndXRpbGl0emEgcGVyIGNvbnZlcnRpciBlbHMgdmFsb3JzIGQnZWxldmFjacOzIGFtYiBsZXMgZHVlcyBmaW5hbGl0YXRzIHNlZ8O8ZW50czpcIixcblx0XCJAQEFzcGVjdC1TbG9wZV9aLUZhY3Rvcl90YWcxQEBcIjogXCJDb252ZXJ0aXIgbGVzIHVuaXRhdHMgZCdlbGV2YWNpw7MgKGNvbSBhcmEgbWV0cmVzIG8gcGV1cykgYSBsZXMgdW5pdGF0cyBkZSBsYSBjb29yZGVuYWRhIGhvcml0em9udGFsIGRlbCBkYXRhc2V0LCBxdWUgcG9kZW4gc2VyIHBldXMsIG1ldHJlcyBvIGdyYXVzLlwiLFxuXHRcIkBAQXNwZWN0LVNsb3BlX1otRmFjdG9yX3RhZzJAQFwiOiBcIkFmZWdpciBleGFnZXJhY2nDsyB2ZXJ0aWNhbCBwZXIgYWNvbnNlZ3VpciB1biBlZmVjdGUgdmlzdWFsLlwiLFxuXHRcIkBAQVRhbl9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBBVGFuX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBVGFuX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBVGFuX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQVRhbl9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQVRhbl9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBVGFuX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEFUYW5fRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBVGFuX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQVRhbl9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBVGFuX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQVRhbl9SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBkZSBsYSBxdWFsIGVzIGNhbGN1bGFyYW4gZWxzIHZhbG9ycyBkZSBsYSB0YW5nZW50IGludmVyc2EuXCIsXG5cdFwiQEBBVGFuMl9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBBVGFuMl9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQVRhbjJfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFUYW4yX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQVRhbjJfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFUYW4yX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEFUYW4yX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEFUYW4yX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQVRhbjJfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBBVGFuMl9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBVGFuMl9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEFUYW4yX1Jhc3Rlcl90YWcwQEBcIjogXCJFbnRyYWRhIHF1ZSBlc3BlY2lmaWNhIGVsIG51bWVyYWRvciwgbyBlbCB2YWxvciBkJ3ksIHF1ZSBzJ3V0aWxpdHphcsOgIGVuIGNhbGN1bGFyIGxhIHRhbmdlbnQgaW52ZXJzYS5cIixcblx0XCJAQEFUYW4yX1Jhc3RlcjJfdGFnMEBAXCI6IFwiRW50cmFkYSBxdWUgZXNwZWNpZmljYSBlbCBkZW5vbWluYWRvciwgbyBlbCB2YWxvciBkJ3gsIHF1ZSBzJ3V0aWxpdHphcsOgIGVuIGNhbGN1bGFyIGxhIHRhbmdlbnQgaW52ZXJzYS5cIixcblx0XCJAQEFUYW5IX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQEFUYW5IX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBVGFuSF9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQVRhbkhfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBBVGFuSF9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQVRhbkhfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQVRhbkhfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAQVRhbkhfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBBVGFuSF9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEFUYW5IX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEFUYW5IX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQVRhbkhfUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZGUgbGEgcXVhbCBlcyBjYWxjdWxhcmFuIGVscyB2YWxvcnMgZGUgbGEgdGFuZ2VudCBoaXBlcmLDsmxpY2EgaW52ZXJzYS5cIixcblx0XCJAQEF0dHJpYnV0ZS1UYWJsZV9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBdHRyaWJ1dGUtVGFibGVfVGFibGUtVHlwZV90YWcwQEBcIjogXCJMYSB0YXVsYSBkJ2F0cmlidXRzIGQnZW50cmFkYSBlcyBwb3QgaW50cm9kdWlyIGFtYiBlbCB0aXB1cyA8c3Ryb25nPk1hbnVhbDwvc3Ryb25nPiwgb24gaGF1cmV1IGQnYXNzaWduYXIgdW4gbm9tIGRlIGNsYXNzZSBpIHVuIGNvbG9yIHBlciBhIGNhZGEgdmFsb3IsIG8gYsOpIHBvZGV1IGNvbnN1bHRhciB1bmEgdGF1bGEgZXhpc3RlbnQgcHJvY2VkZW50IGQndW4gZml0eGVyICR7LmRiZn0uXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfQmFuZC1JbmRleGVzX3RhZzBAQFwiOiBcIkRlZmluaXUgbGEgZsOzcm11bGEgYXJpdG3DqHRpY2EgZGUgYmFuZGEgc2kgdHJpZXUgPHN0cm9uZz5EZWZpbml0IHBlciBsJ3VzdWFyaTwvc3Ryb25nPiBwZXIgbGEgdm9zdHJlIDxzdHJvbmc+TcOodG9kZTwvc3Ryb25nPi5cIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19CYW5kLUluZGV4ZXNfdGFnNUBAXCI6IFwiU2kgdHJpZXUgdW4gw61uZGV4IHByZWRlZmluaXQgcGVyIGFsIHZvc3RyZSA8c3Ryb25nPk3DqHRvZGU8L3N0cm9uZz4sIGRlZmluaXUgbGVzIGJhbmRlcyBhZGVxdWFkZXMgZGVsIGRhdGFzZXQgcsOgc3RlciBkJ2VudHJhZGEgcXVlIGVzIGNvcnJlc3BvbmVuIGFtYiBsJ8OtbmRleC5cIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnMEBAXCI6IFwiVGlwdXMgZCdhbGdvcml0bWUgYXJpdG3DqHRpY2EgZGUgYmFuZGEgcXVlIHZvbGV1IGltcGxlbWVudGFyLiBQb2RldSBkZWZpbmlyIGVsIHZvc3RyZSBhbGdvcml0bWUgcGVyc29uYWxpdHphdCBvIGLDqSB0cmlhci1uZSB1biBkZSBwcmVkZWZpbml0LlwiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX01ldGhvZF90YWcxQEBcIjogXCI8c3Ryb25nPkJBSTwvc3Ryb25nPjogw61uZGV4IGQnw6ByZWEgY3JlbWFkYVwiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX01ldGhvZF90YWcyQEBcIjogXCI8c3Ryb25nPkNJZzwvc3Ryb25nPjogw61uZGV4IGRlIGNsb3JvZmlswrdsYSAtIHZlcmRcIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnM0BAXCI6IFwiPHN0cm9uZz5DbHJlPC9zdHJvbmc+OiDDrW5kZXggZGUgY2xvcm9maWzCt2xhIC0gbWFyZ2Ugcm9pZ1wiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX01ldGhvZF90YWc0QEBcIjogXCI8c3Ryb25nPk1pbmVyYWxzIGFyZ2lsb3Nvczwvc3Ryb25nPjogcmVsYWNpw7MgZGUgbWluZXJhbHMgYXJnaWxvc29zXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzVAQFwiOiBcIjxzdHJvbmc+RVZJPC9zdHJvbmc+OiDDrW5kZXggZGUgdmVnZXRhY2nDsyBtaWxsb3JhdFwiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX01ldGhvZF90YWc2QEBcIjogXCI8c3Ryb25nPk1pbmVyYWxzIGZlcnJvc29zPC9zdHJvbmc+OiByZWxhY2nDsyBkZSBtaW5lcmFscyBmZXJyb3Nvc1wiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX01ldGhvZF90YWc3QEBcIjogXCI8c3Ryb25nPkdFTUk8L3N0cm9uZz46IMOtbmRleCBkZSBzdXBlcnZpc2nDsyBkZWwgbWVkaSBhbWJpZW50IGdsb2JhbFwiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX01ldGhvZF90YWc4QEBcIjogXCI8c3Ryb25nPkdORFZJPC9zdHJvbmc+OiDDrW5kZXggZGUgdmVnZXRhY2nDsyB2ZXJkYSBkZSBkaWZlcsOobmNpYSBub3JtYWxpdHphZGFcIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnOUBAXCI6IFwiPHN0cm9uZz5HVkkgKExhbmRzYXQgVE0pPC9zdHJvbmc+OiDDrW5kZXggZGUgdmVnZXRhY2nDsyB2ZXJkYSAtIExhbmRzYXQgVE1cIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnMTBAQFwiOiBcIjxzdHJvbmc+w5J4aWQgZGUgZmVycm88L3N0cm9uZz46IHJlbGFjacOzIGQnw7J4aWQgZGUgZmVycm9cIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnMTFAQFwiOiBcIjxzdHJvbmc+TU5EV0k8L3N0cm9uZz46IMOtbmRleCBkJ2FpZ3VhIGRlIGRpZmVyw6huY2lhIG5vcm1hbGl0emFkYSBtb2RpZmljYXRcIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnMTJAQFwiOiBcIjxzdHJvbmc+TVRWSTI8L3N0cm9uZz46IMOtbmRleCBkZSB2ZWdldGFjacOzIGRlIHRyaWFuZ2xlcyBtb2RpZmljYXQgKHNlZ29uYSBpdGVyYWNpw7MpXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzEzQEBcIjogXCI8c3Ryb25nPlNBVkkgbW9kaWZpY2F0PC9zdHJvbmc+OiDDrW5kZXggZGUgdmVnZXRhY2nDsyBhanVzdGF0IGEgdGVycmEgbW9kaWZpY2F0XCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzE0QEBcIjogXCI8c3Ryb25nPk5CUjwvc3Ryb25nPjogw61uZGV4IGRlIHJlbGFjacOzIGRlIGNhbGNpbmFjacOzIG5vcm1hbGl0emF0XCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzE1QEBcIjogXCI8c3Ryb25nPk5EQkk8L3N0cm9uZz46IMOtbmRleCBkJ8OgcmVlcyBjb25zdHJ1w69kZXMgZGUgZGlmZXLDqG5jaWEgbm9ybWFsaXR6YWRhXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzE2QEBcIjogXCI8c3Ryb25nPk5ETUk8L3N0cm9uZz46IMOtbmRleCBkJ2h1bWl0YXQgZGUgZGlmZXLDqG5jaWEgbm9ybWFsaXR6YWRhXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzE3QEBcIjogXCI8c3Ryb25nPk5EU0k8L3N0cm9uZz46IMOtbmRleCBkZSBuZXUgZGUgZGlmZXLDqG5jaWEgbm9ybWFsaXR6YWRhXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzE4QEBcIjogXCI8c3Ryb25nPk5EVkk8L3N0cm9uZz46IMOtbmRleCBkZSB2ZWdldGFjacOzIGRlIGRpZmVyw6huY2lhIG5vcm1hbGl0emFkYVwiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX01ldGhvZF90YWcxOUBAXCI6IFwiPHN0cm9uZz5ORFZJcmU8L3N0cm9uZz46IMOtbmRleCBkZSB2ZWdldGFjacOzIGRlIGRpZmVyw6huY2lhIG5vcm1hbGl0emFkYSBkZSBtYXJnZSByb2lnXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzIwQEBcIjogXCI8c3Ryb25nPk5EV0k8L3N0cm9uZz46IMOtbmRleCBkJ2FpZ3VhIGRlIGRpZmVyw6huY2lhIG5vcm1hbGl0emFkYVwiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX01ldGhvZF90YWcyMUBAXCI6IFwiPHN0cm9uZz5QVkk8L3N0cm9uZz46IMOtbmRleCBkZSB2ZWdldGFjacOzIHBlcnBlbmRpY3VsYXJcIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnMjJAQFwiOiBcIjxzdHJvbmc+UlRWSUNvcmU8L3N0cm9uZz46IMOtbmRleCBkZSB2ZWdldGFjacOzIGRlIHRyaWFuZ2xlcyBkZSBtYXJnZSByb2lnXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzIzQEBcIjogXCI8c3Ryb25nPlNBVkk8L3N0cm9uZz46IMOtbmRleCBkZSB2ZWdldGFjacOzIGFqdXN0YXQgYSB0ZXJyYVwiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX01ldGhvZF90YWcyNEBAXCI6IFwiPHN0cm9uZz5TUjwvc3Ryb25nPjogcmVsYWNpw7Mgc2ltcGxlXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzI1QEBcIjogXCI8c3Ryb25nPlNScmU8L3N0cm9uZz46IHJlbGFjacOzIHNlbnppbGxhIGRlIG1hcmdlIHJvaWdcIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnMjZAQFwiOiBcIjxzdHJvbmc+RsOzcm11bGEgZGUgU3VsdGFuPC9zdHJvbmc+OiBmw7NybXVsYSBkZSBTdWx0YW5cIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnMjdAQFwiOiBcIjxzdHJvbmc+U0FWSSB0cmFuc2Zvcm1hdDwvc3Ryb25nPjogw61uZGV4IGRlIHZlZ2V0YWNpw7MgYWp1c3RhdCBhIHRlcnJhIHRyYW5zZm9ybWF0XCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzI4QEBcIjogXCI8c3Ryb25nPkRlZmluaXQgcGVyIGwndXN1YXJpPC9zdHJvbmc+OiBwZXJtZXQgZGVmaW5pciBsJ2V4cHJlc3Npw7MgYXJpdG3DqHRpY2EgZGUgYmFuZGEgcGVyc29uYWxpdHphZGEuXCIsXG5cdFwiQEBCYW5kLUFyaXRobWV0aWNfTWV0aG9kX3RhZzI5QEBcIjogXCI8c3Ryb25nPlZBUkk8L3N0cm9uZz46IMOtbmRleCBkZSByZXNpc3TDqG5jaWEgYXRtb3Nmw6hyaWNhIHZpc2libGVcIixcblx0XCJAQEJhbmQtQXJpdGhtZXRpY19NZXRob2RfdGFnMzBAQFwiOiBcIjxzdHJvbmc+V05EV0k8L3N0cm9uZz46IMOtbmRleCBkJ2FpZ3VhIGRlIGRpZmVyw6huY2lhIG5vcm1hbGl0emFkYSBwb25kZXJhdFwiLFxuXHRcIkBAQmFuZC1Bcml0aG1ldGljX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQEJpbmFyeS1UaHJlc2hvbGRpbmdfUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQml0d2lzZS1BbmRfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAQml0d2lzZS1BbmRfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJpdHdpc2UtQW5kX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCaXR3aXNlLUFuZF9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEJpdHdpc2UtQW5kX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCaXR3aXNlLUFuZF9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCaXR3aXNlLUFuZF9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBCaXR3aXNlLUFuZF9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJpdHdpc2UtQW5kX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQml0d2lzZS1BbmRfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQml0d2lzZS1BbmRfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCaXR3aXNlLUFuZF9SYXN0ZXJfdGFnMEBAXCI6IFwiUHJpbWVyYSBlbnRyYWRhIHF1ZSBzJ3V0aWxpdHphcsOgIGVuIGFxdWVzdGEgb3BlcmFjacOzIGJpdCBhIGJpdC5cIixcblx0XCJAQEJpdHdpc2UtQW5kX1Jhc3Rlcl90YWcxQEBcIjogXCJVbiB2YWxvciBjb25zdGFudCBlcyBwb3QgdXRpbGl0emFyIGNvbSBhIGVudHJhZGEgcGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUsIHNlbXByZSBpIHF1YW4gZWwgcsOgc3RlciBlc3RpZ3VpIGVzcGVjaWZpY2F0IHBlciBhIGwnYWx0cmUgcGFyw6BtZXRyZS5cIixcblx0XCJAQEJpdHdpc2UtQW5kX1Jhc3RlcjJfdGFnMEBAXCI6IFwiU2Vnb25hIGVudHJhZGEgcXVlIHMndXRpbGl0emFyw6AgZW4gYXF1ZXN0YSBvcGVyYWNpw7MgYml0IGEgYml0LlwiLFxuXHRcIkBAQml0d2lzZS1BbmRfUmFzdGVyMl90YWcxQEBcIjogXCJVbiB2YWxvciBjb25zdGFudCBlcyBwb3QgdXRpbGl0emFyIGNvbSBhIGVudHJhZGEgcGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUsIHNlbXByZSBpIHF1YW4gZWwgcsOgc3RlciBlc3RpZ3VpIGVzcGVjaWZpY2F0IHBlciBhIGwnYWx0cmUgcGFyw6BtZXRyZS5cIixcblx0XCJAQEJpdHdpc2UtTGVmdC1TaGlmdF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBCaXR3aXNlLUxlZnQtU2hpZnRfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJpdHdpc2UtTGVmdC1TaGlmdF9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQml0d2lzZS1MZWZ0LVNoaWZ0X0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQml0d2lzZS1MZWZ0LVNoaWZ0X0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCaXR3aXNlLUxlZnQtU2hpZnRfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQml0d2lzZS1MZWZ0LVNoaWZ0X0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEJpdHdpc2UtTGVmdC1TaGlmdF9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJpdHdpc2UtTGVmdC1TaGlmdF9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEJpdHdpc2UtTGVmdC1TaGlmdF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCaXR3aXNlLUxlZnQtU2hpZnRfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCaXR3aXNlLUxlZnQtU2hpZnRfUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgb24gZXMgZmFyw6AgZWwgZGVzcGxhw6dhbWVudC5cIixcblx0XCJAQEJpdHdpc2UtTGVmdC1TaGlmdF9SYXN0ZXJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBCaXR3aXNlLUxlZnQtU2hpZnRfUmFzdGVyMl90YWcwQEBcIjogXCJFbnRyYWRhIHF1ZSBkZWZpbmVpeCBlbCBub21icmUgZGUgcG9zaWNpb25zIHBlciBkZXNwbGHDp2FyIGVscyBiaXRzLlwiLFxuXHRcIkBAQml0d2lzZS1MZWZ0LVNoaWZ0X1Jhc3RlcjJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBCaXR3aXNlLU5vdF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBCaXR3aXNlLU5vdF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQml0d2lzZS1Ob3RfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJpdHdpc2UtTm90X0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQml0d2lzZS1Ob3RfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJpdHdpc2UtTm90X0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJpdHdpc2UtTm90X0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEJpdHdpc2UtTm90X0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQml0d2lzZS1Ob3RfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBCaXR3aXNlLU5vdF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCaXR3aXNlLU5vdF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJpdHdpc2UtTm90X1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBvbiBlcyByZWFsaXR6YXLDoCBsJ29wZXJhY2nDsyBCaXR3aXNlIE5vdCAoY29tcGxlbWVudCkuXCIsXG5cdFwiQEBCaXR3aXNlLU9yX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQEJpdHdpc2UtT3JfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJpdHdpc2UtT3JfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJpdHdpc2UtT3JfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBCaXR3aXNlLU9yX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCaXR3aXNlLU9yX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJpdHdpc2UtT3JfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAQml0d2lzZS1Pcl9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJpdHdpc2UtT3JfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBCaXR3aXNlLU9yX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJpdHdpc2UtT3JfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCaXR3aXNlLU9yX1Jhc3Rlcl90YWcwQEBcIjogXCJQcmltZXJhIGVudHJhZGEgcXVlIHMndXRpbGl0emFyw6AgZW4gYXF1ZXN0YSBvcGVyYWNpw7MgYml0IGEgYml0LlwiLFxuXHRcIkBAQml0d2lzZS1Pcl9SYXN0ZXJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBCaXR3aXNlLU9yX1Jhc3RlcjJfdGFnMEBAXCI6IFwiU2Vnb25hIGVudHJhZGEgcXVlIHMndXRpbGl0emFyw6AgZW4gYXF1ZXN0YSBvcGVyYWNpw7MgYml0IGEgYml0LlwiLFxuXHRcIkBAQml0d2lzZS1Pcl9SYXN0ZXIyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAQml0d2lzZS1SaWdodC1TaGlmdF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBCaXR3aXNlLVJpZ2h0LVNoaWZ0X0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCaXR3aXNlLVJpZ2h0LVNoaWZ0X0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCaXR3aXNlLVJpZ2h0LVNoaWZ0X0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQml0d2lzZS1SaWdodC1TaGlmdF9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQml0d2lzZS1SaWdodC1TaGlmdF9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCaXR3aXNlLVJpZ2h0LVNoaWZ0X0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEJpdHdpc2UtUmlnaHQtU2hpZnRfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCaXR3aXNlLVJpZ2h0LVNoaWZ0X0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQml0d2lzZS1SaWdodC1TaGlmdF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCaXR3aXNlLVJpZ2h0LVNoaWZ0X0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQml0d2lzZS1SaWdodC1TaGlmdF9SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBvbiBlcyBmYXLDoCBlbCBkZXNwbGHDp2FtZW50LlwiLFxuXHRcIkBAQml0d2lzZS1SaWdodC1TaGlmdF9SYXN0ZXJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBCaXR3aXNlLVJpZ2h0LVNoaWZ0X1Jhc3RlcjJfdGFnMEBAXCI6IFwiRW50cmFkYSBxdWUgZGVmaW5laXggZWwgbm9tYnJlIGRlIHBvc2ljaW9ucyBwZXIgZGVzcGxhw6dhciBlbHMgYml0cy5cIixcblx0XCJAQEJpdHdpc2UtUmlnaHQtU2hpZnRfUmFzdGVyMl90YWcxQEBcIjogXCJVbiB2YWxvciBjb25zdGFudCBlcyBwb3QgdXRpbGl0emFyIGNvbSBhIGVudHJhZGEgcGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUsIHNlbXByZSBpIHF1YW4gZWwgcsOgc3RlciBlc3RpZ3VpIGVzcGVjaWZpY2F0IHBlciBhIGwnYWx0cmUgcGFyw6BtZXRyZS5cIixcblx0XCJAQEJpdHdpc2UtWG9yX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQEJpdHdpc2UtWG9yX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCaXR3aXNlLVhvcl9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQml0d2lzZS1Yb3JfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBCaXR3aXNlLVhvcl9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQml0d2lzZS1Yb3JfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQml0d2lzZS1Yb3JfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAQml0d2lzZS1Yb3JfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCaXR3aXNlLVhvcl9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEJpdHdpc2UtWG9yX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJpdHdpc2UtWG9yX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQml0d2lzZS1Yb3JfUmFzdGVyX3RhZzBAQFwiOiBcIlByaW1lcmEgZW50cmFkYSBxdWUgcyd1dGlsaXR6YXLDoCBlbiBhcXVlc3RhIG9wZXJhY2nDsyBiaXQgYSBiaXQuXCIsXG5cdFwiQEBCaXR3aXNlLVhvcl9SYXN0ZXJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBCaXR3aXNlLVhvcl9SYXN0ZXIyX3RhZzBAQFwiOiBcIlNlZ29uYSBlbnRyYWRhIHF1ZSBzJ3V0aWxpdHphcsOgIGVuIGFxdWVzdGEgb3BlcmFjacOzIGJpdCBhIGJpdC5cIixcblx0XCJAQEJpdHdpc2UtWG9yX1Jhc3RlcjJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBCb29sZWFuLWFuZF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBCb29sZWFuLWFuZF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQm9vbGVhbi1hbmRfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJvb2xlYW4tYW5kX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQm9vbGVhbi1hbmRfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJvb2xlYW4tYW5kX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJvb2xlYW4tYW5kX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEJvb2xlYW4tYW5kX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQm9vbGVhbi1hbmRfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBCb29sZWFuLWFuZF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCb29sZWFuLWFuZF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJvb2xlYW4tYW5kX1Jhc3Rlcl90YWcwQEBcIjogXCJQcmltZXJhIGVudHJhZGEgcXVlIHMndXRpbGl0emFyw6AgZW4gYXF1ZXN0YSBvcGVyYWNpw7MgYm9vbGVhbmEuXCIsXG5cdFwiQEBCb29sZWFuLWFuZF9SYXN0ZXJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBCb29sZWFuLWFuZF9SYXN0ZXIyX3RhZzBAQFwiOiBcIlNlZ29uYSBlbnRyYWRhIHF1ZSBzJ3V0aWxpdHphcsOgIGVuIGFxdWVzdGEgb3BlcmFjacOzIGJvb2xlYW5hLlwiLFxuXHRcIkBAQm9vbGVhbi1hbmRfUmFzdGVyMl90YWcxQEBcIjogXCJVbiB2YWxvciBjb25zdGFudCBlcyBwb3QgdXRpbGl0emFyIGNvbSBhIGVudHJhZGEgcGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUsIHNlbXByZSBpIHF1YW4gZWwgcsOgc3RlciBlc3RpZ3VpIGVzcGVjaWZpY2F0IHBlciBhIGwnYWx0cmUgcGFyw6BtZXRyZS5cIixcblx0XCJAQEJvb2xlYW4tTm90X0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQEJvb2xlYW4tTm90X0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCb29sZWFuLU5vdF9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQm9vbGVhbi1Ob3RfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBCb29sZWFuLU5vdF9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQm9vbGVhbi1Ob3RfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQm9vbGVhbi1Ob3RfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAQm9vbGVhbi1Ob3RfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCb29sZWFuLU5vdF9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEJvb2xlYW4tTm90X0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJvb2xlYW4tTm90X0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQm9vbGVhbi1Ob3RfUmFzdGVyX3RhZzBAQFwiOiBcIlByaW1lcmEgZW50cmFkYSBxdWUgcyd1dGlsaXR6YXLDoCBlbiBhcXVlc3RhIG9wZXJhY2nDsyBib29sZWFuYS5cIixcblx0XCJAQEJvb2xlYW4tT3JfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAQm9vbGVhbi1Pcl9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQm9vbGVhbi1Pcl9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQm9vbGVhbi1Pcl9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEJvb2xlYW4tT3JfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJvb2xlYW4tT3JfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQm9vbGVhbi1Pcl9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBCb29sZWFuLU9yX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQm9vbGVhbi1Pcl9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEJvb2xlYW4tT3JfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQm9vbGVhbi1Pcl9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJvb2xlYW4tT3JfUmFzdGVyX3RhZzBAQFwiOiBcIlByaW1lcmEgZW50cmFkYSBxdWUgcyd1dGlsaXR6YXLDoCBlbiBhcXVlc3RhIG9wZXJhY2nDsyBib29sZWFuYS5cIixcblx0XCJAQEJvb2xlYW4tT3JfUmFzdGVyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAQm9vbGVhbi1Pcl9SYXN0ZXIyX3RhZzBAQFwiOiBcIlNlZ29uYSBlbnRyYWRhIHF1ZSBzJ3V0aWxpdHphcsOgIGVuIGFxdWVzdGEgb3BlcmFjacOzIGJvb2xlYW5hLlwiLFxuXHRcIkBAQm9vbGVhbi1Pcl9SYXN0ZXIyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAQm9vbGVhbi1Yb3JfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAQm9vbGVhbi1Yb3JfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEJvb2xlYW4tWG9yX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCb29sZWFuLVhvcl9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEJvb2xlYW4tWG9yX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCb29sZWFuLVhvcl9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBCb29sZWFuLVhvcl9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBCb29sZWFuLVhvcl9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEJvb2xlYW4tWG9yX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQm9vbGVhbi1Yb3JfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQm9vbGVhbi1Yb3JfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBCb29sZWFuLVhvcl9SYXN0ZXJfdGFnMEBAXCI6IFwiUHJpbWVyYSBlbnRyYWRhIHF1ZSBzJ3V0aWxpdHphcsOgIGVuIGFxdWVzdGEgb3BlcmFjacOzIGJvb2xlYW5hLlwiLFxuXHRcIkBAQm9vbGVhbi1Yb3JfUmFzdGVyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAQm9vbGVhbi1Yb3JfUmFzdGVyMl90YWcwQEBcIjogXCJTZWdvbmEgZW50cmFkYSBxdWUgcyd1dGlsaXR6YXLDoCBlbiBhcXVlc3RhIG9wZXJhY2nDsyBib29sZWFuYS5cIixcblx0XCJAQEJvb2xlYW4tWG9yX1Jhc3RlcjJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBCdWZmZXJlZF9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIHMnZW1tYWdhdHplbWFyw6AgYSBsYSBtZW3DsnJpYS5cIixcblx0XCJAQENhbGN1bGF0b3JfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJNaWRhIGRlIGNlbMK3bGEgdXRpbGl0emFkYSBwZXIgY3JlYXIgZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlBvZGV1IHRyaWFyIGxhIG1pZGEgZGUgY2VswrdsYSBkZSBzb3J0aWRhIGVudHJlIGxlcyBvcGNpb25zIHNlZ8O8ZW50cyBkZSBsYSBsbGlzdGEgZGVzcGxlZ2FibGU6XCIsXG5cdFwiQEBDYWxjdWxhdG9yX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiPHN0cm9uZz5QcmltZXIgZGU8L3N0cm9uZz46IG1pZGEgZGUgY2VswrdsYSBkZSBsYSBwcmltZXJhIHZhcmlhYmxlIGRlIHLDoHN0ZXIuXCIsXG5cdFwiQEBDYWxjdWxhdG9yX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiPHN0cm9uZz5Nw61uaW0gZGU8L3N0cm9uZz46IG1pZGEgZGUgY2VswrdsYSBtw61uaW1hIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9DZWxsc2l6ZS1UeXBlX3RhZzZAQFwiOiBcIjxzdHJvbmc+TcOgeGltIGRlPC9zdHJvbmc+OiBtaWRhIGRlIGNlbMK3bGEgbcOgeGltYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQENhbGN1bGF0b3JfQ2VsbHNpemUtVHlwZV90YWc4QEBcIjogXCI8c3Ryb25nPk1pdGphbmEgZGU8L3N0cm9uZz46IG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9DZWxsc2l6ZS1UeXBlX3RhZzEwQEBcIjogXCI8c3Ryb25nPsOabHRpbSBkZTwvc3Ryb25nPjogbWlkYSBkZSBjZWzCt2xhIGRlIGwnw7psdGltYSB2YXJpYWJsZSBkZSByw6BzdGVyLlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9DZWxsc2l6ZS1UeXBlX3RhZzEyQEBcIjogXCJMYSBzZWxlY2Npw7MgcGVyIGRlZmVjdGUgw6lzIDxzdHJvbmc+TcOgeGltIGRlPC9zdHJvbmc+LlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzBAQFwiOiBcIkNyZWV1IHVuYSBleHByZXNzacOzIGFsZ2VicmFpY2EgcGVyIGZlciBsJ2Fuw6BsaXNpIGVzcGFjaWFsIGFsIHLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzFAQFwiOiBcIlRvdGVzIGxlcyBmdW5jaW9ucyBtYXRlbcOgdGlxdWVzIGV4aXN0ZW50cyBlcyBwb2RlbiB1dGlsaXR6YXIgcGVyIGNyZWFyIGwnZXhwcmVzc2nDsy4gRWxzIG9wZXJhZG9ycyBkaXNwb25pYmxlcyBzJ2luZGlxdWVuIGEgY29udGludWFjacOzLlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzJAQFwiOiBcIk9wZXJhY2lvbnMgYXJpdG3DqHRpcXVlc1wiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzNAQFwiOiBcIlN1bWE6ICtcIixcblx0XCJAQENhbGN1bGF0b3JfRXhwcmVzc2lvbl90YWc0QEBcIjogXCJEaXZpc2nDszogL1wiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzVAQFwiOiBcIk3DsmR1bDogJVwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzZAQFwiOiBcIk11bHRpcGxpY2FjacOzOiAqXCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnN0BAXCI6IFwiUG90w6huY2lhOiAqKlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzhAQFwiOiBcIlJlc3RhOiAtXCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnOUBAXCI6IFwiT3BlcmFjaW9ucyBib29sZWFuZXNcIixcblx0XCJAQENhbGN1bGF0b3JfRXhwcmVzc2lvbl90YWcxMEBAXCI6IFwiT3BlcmFkb3IgYm9vbGXDoCBBbmQ6ICYmXCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnMTFAQFwiOiBcIk9wZXJhZG9yIGJvb2xlw6AgT3I6IHx8XCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnMTJAQFwiOiBcIk9wZXJhY2lvbnMgZGUgcmVsYWNpw7NcIixcblx0XCJAQENhbGN1bGF0b3JfRXhwcmVzc2lvbl90YWcxM0BAXCI6IFwiSWd1YWwgcXVlOiA9PVwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzE0QEBcIjogXCJNYWpvciBxdWU6ID5cIixcblx0XCJAQENhbGN1bGF0b3JfRXhwcmVzc2lvbl90YWcxNUBAXCI6IFwiTWFqb3IgbyBpZ3VhbCBxdWU6ID49XCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnMTZAQFwiOiBcIk1lbm9yIHF1ZTogPFwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzE3QEBcIjogXCJNZW5vciBvIGlndWFsIHF1ZTogPD1cIixcblx0XCJAQENhbGN1bGF0b3JfRXhwcmVzc2lvbl90YWcxOEBAXCI6IFwiTm8gaWd1YWwgcXVlOiA9PVwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzE5QEBcIjogXCJPcGVyYWNpb25zIGFkZGljaW9uYWxzXCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnMjBAQFwiOiBcIk3DrW5pbSBkZSBkb3MgcsOgc3RlcnMgcMOteGVsIHBlciBww614ZWw6IG1pbihhLGIpXCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnMjFAQFwiOiBcIk3DoHhpbSBkZSBkb3MgcsOgc3RlcnMgcMOteGVsIHBlciBww614ZWw6IG1heChhLGIpXCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnMjJAQFwiOiBcIkEgY29udGludWFjacOzIHMnaW5jbG91ZW4gYWxndW5zIGV4ZW1wbGVzIGQnZXhwcmVzc2lvbnM6XCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnMjNAQFwiOiBcIkRlY2xhcmFjacOzIGNvbmRpY2lvbmFsIHNpbXBsZTogZW4gdW4gcsOgc3RlciAoaW5kaWNhdCBhbWIgVCkgY2VycXVldSB2YWxvcnMgZCdlbGV2YWNpw7MgcGVyIHNvYnJlIGRlbHMgNC4wMDAgcGV1cywgaSBwcm9wb3JjaW9uZXUgYSBhcXVlc3RlcyDDoHJlZXMgdW4gdmFsb3IgZCcxIGkgYSBsYSByZXN0YSB1biB2YWxvciBkZSAwLlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzI0QEBcIjogXCJDb24oVCA+IDQwMDAsIDEsIDApXCIsXG5cdFwiQEBDYWxjdWxhdG9yX0V4cHJlc3Npb25fdGFnMjVAQFwiOiBcIkRlY2xhcmFjacOzIGNvbmRpY2lvbmFsIG5pYWRhOiBjZXJxdWV1IMOgcmVlcyBhbWIgdW4gcGVuZGVudCAoaW5kaWNhdCBhbWIgYjEpIGluZmVyaW9yIGEgMTAgZ3JhdXMgaSB1biBORFZJIChpbmRpY2F0IGFtYiBiMikgc3VwZXJpb3IgYSAwLDUuIFByb3BvcmNpb25ldSBhIGFxdWVzdGVzIMOgcmVlcyB1biB2YWxvciBkJzEuIFBlciBhIGxhIHJlc3RhIGQnw6ByZWVzLCBhc3NpZ25ldSB1biB2YWxvciBkZSAyIHNpIGVsIHBlbmRlbnQgw6lzIHN1cGVyaW9yIGEgMTAgZ3JhdXMgaSBsJ2VsZXZhY2nDsyAoaW5kaWNhZGEgYW1iIGIzKSDDqXMgc3VwZXJpb3IgYSAyLjUwMCBwZXVzLiBTJ2Fzc2lnbmEgdW4gdmFsb3IgZGUgMyBhIHRvdGVzIGxlcyBhbHRyZXMgw6ByZWVzLlwiLFxuXHRcIkBAQ2FsY3VsYXRvcl9FeHByZXNzaW9uX3RhZzI2QEBcIjogXCJDb24oKGIxIDwgMTAgJiYgYjIgPiAuNSwgMSwgQ29uKGIxID4gMTAgJiYgYjMgPiAyNTAwLCAyLCAzKSkpXCIsXG5cdFwiQEBDYWxjdWxhdG9yX2V4dGVudHR5cGVfdGFnMEBAXCI6IFwiPHA+VHJpZXUgcXVpbmEgZXh0ZW5zacOzIHMnaGEgZGUgZmVyIHNlcnZpciBhbCByw6BzdGVyIGRlIHNvcnRpZGE6PC9wPjx1bD48bGk+PHA+UHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuPC9wPjwvbGk+PGxpPkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLjwvbGk+PGxpPlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LjwvbGk+PGxpPsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC48L2xpPjwvdWw+XCIsXG5cdFwiQEBDYWxjdWxhdG9yX1Jhc3Rlci1WYXJpYWJsZXNfdGFnMEBAXCI6IFwiTm9tIGRlIHZhcmlhYmxlIGRlZmluaXQgcGVyIGwndXN1YXJpIGkgcsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDbGFzc2lmeV9JbnB1dC1EZWZpbml0aW9uLUZpbGVfdGFnMEBAXCI6IFwiRml0eGVyIGRlIGRlZmluaWNpw7MgZGUgY2xhc3NpZmljYWRvciBkJ0VzcmkgZCdlbnRyYWRhICgkey5lY2R9KSBxdWUgY29udMOpIGxlcyBlc3RhZMOtc3RpcXVlcyBpIGFsdHJlcyBkYWRlcyBkZSBjbGFzc2lmaWNhY2nDsyBkZWwgZGF0YXNldCBlc3BlY8OtZmljLCBlbCBjbGFzc2lmaWNhZG9yIGkgZWxzIGF0cmlidXRzIHNlbGVjY2lvbmF0cy5cIixcblx0XCJAQENsYXNzaWZ5X1Jhc3Rlcl90YWcwQEBcIjogXCJEYXRhc2V0IHLDoHN0ZXIgcXVlIHZvbGV1IGNsYXNzaWZpY2FyLlwiLFxuXHRcIkBAQ2xhc3NpZnlfUmFzdGVyMl90YWcwQEBcIjogXCJEYXRhc2V0IHLDoHN0ZXIgYXV4aWxpYXIgb3BjaW9uYWwgcGVyIGluY29ycG9yYXIgYWwgY2xhc3NpZmljYWRvciwgY29tIGFyYSB1bmEgaW1hdGdlIHNlZ21lbnRhZGEsIHVuYSBpbWF0Z2UgbXVsdGllc3BlY3RyYWwgbyBkYWRlcyBkJ2VsZXZhY2nDsywgcXVlIHMndXRpbGl0emEgcGVyIGdlbmVyYXIgdW5hIGRlZmluaWNpw7MgZGUgY2xhc3NpZmljYWNpw7MgbcOpcyBzw7JsaWRhIGRlbCBkYXRhc2V0LiBFbCBkYXRhc2V0IHLDoHN0ZXIgZCdhcXVlc3QgcGFyw6BtZXRyZSBoYSBkZSBjb2luY2lkaXIgYW1iIGwndXRpbGl0emF0IHBlciBjcmVhciBlbCBmaXR4ZXIgZGUgZGVmaW5pY2nDsyBkZSBjbGFzc2lmaWNhZG9yIGQnRXNyaSBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDbGlwX0NsaXBwaW5nLUdlb21ldHJ5LW9yLVJhc3Rlcl90YWcwQEBcIjogXCJFcyBwb3QgdXRpbGl0emFyIGVsIHNlZ8O8ZW50IHBlciBlc3BlY2lmaWNhciBsJ2V4dGVuc2nDsyBkZSByZXRhbGxhZGE6XCIsXG5cdFwiQEBDbGlwX0NsaXBwaW5nLUdlb21ldHJ5LW9yLVJhc3Rlcl90YWcxQEBcIjogXCI8c3Ryb25nPlLDoHN0ZXIgZGUgcmV0YWxsYWRhPC9zdHJvbmc+OiBleHRlbnNpw7MgZGVsIHLDoHN0ZXIgZGUgcmV0YWxsYWRhXCIsXG5cdFwiQEBDbGlwX0NsaXBwaW5nLUdlb21ldHJ5LW9yLVJhc3Rlcl90YWczQEBcIjogXCI8c3Ryb25nPkV4dGVuc2nDsyBwZXJzb25hbGl0emFkYTwvc3Ryb25nPjogY29vcmRlbmFkZXMgWCBpIFkgbcOtbmltZXMgaSBtw6B4aW1lc1wiLFxuXHRcIkBAQ2xpcF9DbGlwcGluZy1HZW9tZXRyeS1vci1SYXN0ZXJfdGFnNUBAXCI6IFwiPHN0cm9uZz5FeHRlbnNpw7MgZGVsIG1hcGEgYWN0dWFsPC9zdHJvbmc+OiBleHRlbnNpw7MgZGUgbGEgdmlzdWFsaXR6YWNpw7MgZGUgbWFwYSBhY3R1YWxcIixcblx0XCJAQENsaXBfQ2xpcHBpbmctUmFzdGVyX3RhZzBAQFwiOiBcIkNhcGEgcsOgc3RlciB1dGlsaXR6YWRhIHBlciBhIGxhIHJldGFsbGFkYS5cIixcblx0XCJAQENsaXBfQ2xpcHBpbmctVHlwZV90YWcwQEBcIjogXCJFc3BlY2lmaXF1ZXUgc2kgdm9sZXUgY29uc2VydmFyIGwnw6ByZWEgZGlucyBvIGZvcmEgZGUgbGEgZ2VvbWV0cmlhIGRlIHJldGFsbGFkYS5cIixcblx0XCJAQENsaXBfQ2xpcHBpbmctVHlwZV90YWcxQEBcIjogXCI8c3Ryb25nPlJldGFsbCBpbnRlcmlvcjwvc3Ryb25nPjogbGVzIGltYXRnZXMgZGlucyBkZSBsZXMgZXh0ZW5zaW9ucyBkZSByZXRhbGxhZGEgcydlbGltaW5hcmFuLlwiLFxuXHRcIkBAQ2xpcF9DbGlwcGluZy1UeXBlX3RhZzNAQFwiOiBcIjxzdHJvbmc+UmV0YWxsIGV4dGVyaW9yPC9zdHJvbmc+OiBsZXMgaW1hdGdlcyBmb3JhIGRlIGxlcyBleHRlbnNpb25zIGRlIHJldGFsbGFkYSBzJ2VsaW1pbmFyYW4uXCIsXG5cdFwiQEBDbGlwX0N1c3RvbS1FeHRlbnRfdGFnMEBAXCI6IFwiRXNwZWNpZmlxdWV1IGxlcyBxdWF0cmUgY29vcmRlbmFkZXMgcXVlIGRlZmluZWl4ZW4gbCdleHRlbnNpw7MgZGVsIHF1YWRyZSBkZWxpbWl0YWRvciB1dGlsaXR6YXQgcGVyIHJldGFsbGFyIGVsIHLDoHN0ZXIuXCIsXG5cdFwiQEBDbGlwX091dHB1dC1FeHRlbnRfdGFnMEBAXCI6IFwiQ29vcmRlbmFkZXMgeCBpIHkgZGUgbCdleHRlbnNpw7MgZGUgcmV0YWxsYWRhIGFjdHVhbC5cIixcblx0XCJAQENsaXBfT3V0cHV0LUV4dGVudF90YWcxQEBcIjogXCJFbCBib3TDsyA8c3Ryb25nPkNhcHR1cmEgbCdleHRlbnNpw7MgZGVsIG1hcGEgYWN0dWFsPC9zdHJvbmc+IHV0aWxpdHphIGwnZXh0ZW5zacOzIGRlIHZpc3VhbGl0emFjacOzIHBlciBhbCBtYXBhIGFjdGl1LlwiLFxuXHRcIkBAQ2xpcF9SYXN0ZXJfdGFnMEBAXCI6IFwiQ2FwYSByw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQENsaXBfVXNlLUlucHV0LUZlYXR1cmVzLWZvci1DbGlwcGluZy1HZW9tZXRyeV90YWcwQEBcIjogXCJTaSBhcXVlc3RhIG9wY2nDsyBlc3TDoCBzZWxlY2Npb25hZGEsIGxlcyBkYWRlcyBlcyByZXRhbGxlbiBkJ2Fjb3JkIGFtYiBsYSBnZW9tZXRyaWEgZGUgbGEgY2xhc3NlIGQnZW50aXRhdCBlc3BlY2lmaWNhZGEuXCIsXG5cdFwiQEBDbGlwX1VzZS1JbnB1dC1GZWF0dXJlcy1mb3ItQ2xpcHBpbmctR2VvbWV0cnlfdGFnMUBAXCI6IFwiRGVzYWN0aXZhZGE6IGxhIGZ1bmNpw7MgdXRpbGl0emEgbGEgZ2VvbWV0cmlhIGRlIHJldGFsbGFkYSBlc3BlY2lmaWNhZGEgcGVyIDxzdHJvbmc+UmVjdGFuZ2xlPC9zdHJvbmc+LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQENsaXBfVXNlLUlucHV0LUZlYXR1cmVzLWZvci1DbGlwcGluZy1HZW9tZXRyeV90YWc0QEBcIjogXCJBY3RpdmFkYTogbGEgZnVuY2nDsyB1dGlsaXR6YSBsYSBnZW9tZXRyaWEgZGUgcmV0YWxsYWRhIGRlZmluaWRhIHBlciB1bmEgY2xhc3NlIGQnZW50aXRhdC5cIixcblx0XCJAQENvbG9yLU1vZGVsLUNvbnZlcnNpb25fQ29udmVyc2lvbi1UeXBlX3RhZzBAQFwiOiBcIlRpcHVzIGRlIGNvbnZlcnNpw7MgZGUgY29sb3IgcXVlIGVzIHJlYWxpdHphcsOgOlwiLFxuXHRcIkBAQ29sb3ItTW9kZWwtQ29udmVyc2lvbl9Db252ZXJzaW9uLVR5cGVfdGFnMUBAXCI6IFwiSFNWIGEgUkdCXCIsXG5cdFwiQEBDb2xvci1Nb2RlbC1Db252ZXJzaW9uX0NvbnZlcnNpb24tVHlwZV90YWcyQEBcIjogXCJSR0IgYSBIU1ZcIixcblx0XCJAQENvbG9yLU1vZGVsLUNvbnZlcnNpb25fUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ29sb3JtYXBfQ29sb3ItUmFtcF90YWcwQEBcIjogXCJUcmlldSB1bmEgcmFtcGEgZGUgY29sb3IgcHJlZXhpc3RlbnQuXCIsXG5cdFwiQEBDb2xvcm1hcF9Db2xvci1TY2hlbWUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBlbCB0aXB1cyBkJ2VzcXVlbWEgZGUgY29sb3JzIHBlciByZXByZXNlbnRhciBlbCByw6BzdGVyIGQnZW50cmFkYVwiLFxuXHRcIkBAQ29sb3JtYXBfQ29sb3ItU2NoZW1lLVR5cGVfdGFnMUBAXCI6IFwiUmFtcGEgZGUgY29sb3I6IHV0aWxpdHpldSB1bmEgcmFtcGEgZGUgY29sb3IuXCIsXG5cdFwiQEBDb2xvcm1hcF9Db2xvci1TY2hlbWUtVHlwZV90YWcyQEBcIjogXCJNYXBhIGRlIGNvbG9yOiB0cmlldSB1biBtYXBhIGRlIGNvbG9yIHByZWV4aXN0ZW50LlwiLFxuXHRcIkBAQ29sb3JtYXBfQ29sb3JtYXBfdGFnMEBAXCI6IFwiTGEgbGxpc3RhIGRlc3BsZWdhYmxlIGluY2xvdSBlbHMgc2Vnw7xlbnRzIG1hcGVzIGRlIGNvbG9yIHBlciBkZWZlY3RlOlwiLFxuXHRcIkBAQ29sb3JtYXBfQ29sb3JtYXBfdGFnMUBAXCI6IFwiRWxldmFjacOzOiBtYXBhIGRlIGNvbG9yIHF1ZSBjYW52aWEgZ3JhZHVhbG1lbnQgZGUgY2lhbiBhIHBvcnByYSBpIGEgbmVncmUuXCIsXG5cdFwiQEBDb2xvcm1hcF9Db2xvcm1hcF90YWcyQEBcIjogXCJHcmlzOiBtYXBhIGRlIGNvbG9yIHF1ZSBjYW52aWEgZ3JhZHVhbG1lbnQgZGUgbmVncmUgYSBibGFuYy5cIixcblx0XCJAQENvbG9ybWFwX0NvbG9ybWFwX3RhZzdAQFwiOiBcIk9tYnJlaWc6IHVuIG1hcGEgZGUgY29sb3IgZW4gZXNjYWxhIGRlIGdyaXNvcyBwZXIgdmlzdWFsaXR6YXIgdW5hIHJlcHJlc2VudGFjacOzIDNEIGRlIGxhIHN1cGVyZsOtY2llIGRlbCB0ZXJyZW55LCB0ZW5pbnQgZW4gY29tcHRlIGxhIHBvc2ljacOzIHJlbGF0aXZhIGRlbCBzb2wgcGVyIG9tYnJlamFyIGxhIGltYXRnZS5cIixcblx0XCJAQENvbG9ybWFwX0NvbG9ybWFwX3RhZzNAQFwiOiBcIk5EVkk6IG1hcGEgZGUgY29sb3IgcGVyIHZpc3VhbGl0emFyIHZlZ2V0YWNpw7MuIEVscyB2YWxvcnMgcHJvcGVycyBhIHplcm8gaW5kaXF1ZW4gYmxhdS4gRWxzIHZhbG9ycyBiYWl4b3MgaW5kaXF1ZW4gbWFycsOzLiBBIGNvbnRpbnVhY2nDsywgZWxzIGNvbG9ycyBjYW52aWVuIGdyYWR1YWxtZW50IGRlIHZlcm1lbGwgYSB0YXJvbmphLCBncm9jLCB2ZXJkIGkgbmVncmUsIGEgbWVzdXJhIHF1ZSBsJ8OtbmRleCBkZSB2ZWdldGFjacOzIGF1Z21lbnRhLlwiLFxuXHRcIkBAQ29sb3JtYXBfQ29sb3JtYXBfdGFnNEBAXCI6IFwiTkRWSTI6IG1hcGEgZGUgY29sb3IgcGVyIHZpc3VhbGl0emFyIHZlZ2V0YWNpw7MuIEVscyB2YWxvcnMgYmFpeG9zIHZhbiBkZSBibGFuYyBhIHZlcmQuIEEgY29udGludWFjacOzLCBlbHMgY29sb3JzIHZhcmllbiBkZSBncmlzLCBhIHBvcnByYSwgdmlvbGV0YSwgYmxhdSBmb3NjIGkgbmVncmUsIGEgbWVzdXJhIHF1ZSBsJ8OtbmRleCBkZSB2ZWdldGFjacOzIGF1Z21lbnRhLlwiLFxuXHRcIkBAQ29sb3JtYXBfQ29sb3JtYXBfdGFnNUBAXCI6IFwiTkRWSTM6IG1hcGEgZGUgY29sb3IgcGVyIHZpc3VhbGl0emFyIHZlZ2V0YWNpw7MuIEVscyB2YWxvcnMgcHJvcGVycyBhIHplcm8gaW5kaXF1ZW4gYmxhdS4gQSBjb250aW51YWNpw7MsIGVscyBjb2xvcnMgY2FudmllbiBncmFkdWFsbWVudCBkZSB2ZXJtZWxsIGEgdGFyb25qYSBpIGEgdmVyZCwgYSBtZXN1cmEgcXVlIGwnw61uZGV4IGRlIHZlZ2V0YWNpw7MgYXVnbWVudGEuXCIsXG5cdFwiQEBDb2xvcm1hcF9Db2xvcm1hcF90YWc2QEBcIjogXCJBbGVhdG9yaTogbWFwYSBkZSBjb2xvciBhbGVhdG9yaS5cIixcblx0XCJAQENvbG9ybWFwX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQENvbG9ybWFwLVRvLVJHQl9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkZWwgbWFwYSBkZSBjb2xvciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDb21wbGV4X1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQENvbXBvc2l0ZS1CYW5kc19SYXN0ZXJzX3RhZzBAQFwiOiBcIlV0aWxpdHpldSBsYSBsbGlzdGEgZGVzcGxlZ2FibGUgbyBlbCBib3TDsyA8c3Ryb25nPkV4YW1pbmE8L3N0cm9uZz4gcGVyIHRyaWFyIGxlcyBlbnRyYWRlcyBkZSByw6BzdGVyLlwiLFxuXHRcIkBAQ29tcG9zaXRlLUJhbmRzX2NlbGxzaXpldHlwZV90YWcwQEBcIjogXCI8cD5UcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHZvbGV1IGZlciBzZXJ2aXIgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSBsYSBtaWRhIGRlIHRvdGVzIGxlcyBjZWzCt2xlcyBkJ2VudHJhZGEgw6lzIGlndWFsLCB0b3RlcyBsZXMgb3BjaW9ucyBkb25hcmFuIGVsIG1hdGVpeCByZXN1bHRhdC48L3A+PHVsPjxsaT5QcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS48L2xpPjxsaT5Nw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLjwvbGk+PGxpPk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT5NaXRqYW5hIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLjwvbGk+PGxpPsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLjwvbGk+PC91bD5cIixcblx0XCJAQENvbi1mdW5jdGlvbl9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBDb24tZnVuY3Rpb25fQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQENvbi1mdW5jdGlvbl9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ29uLWZ1bmN0aW9uX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQ29uLWZ1bmN0aW9uX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDb24tZnVuY3Rpb25fQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ29uX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQENvbl9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQENvbl9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQENvbl9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBDb25fRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBDb25fRmFsc2UtUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZWxzIHZhbG9ycyBkZSBsYSBxdWFsIHMndXRpbGl0emFyYW4gY29tIGEgdmFsb3JzIGRlbCBww614ZWwgZGUgc29ydGlkYSBzaSBsYSBjb25kaWNpw7Mgw6lzIGZhbHNhLiBQb3Qgc2VyIHVuIGVudGVyLCB1biByw6BzdGVyIGRlIHB1bnQgZmxvdGFudCBvIHVuIHZhbG9yIGNvbnN0YW50LlwiLFxuXHRcIkBAQ29uX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBxdWUgcmVwcmVzZW50YSBlbCByZXN1bHRhdCBib29sZcOgIGQndW5hIGZ1bmNpw7MgbWF0ZW3DoHRpY2EgbMOyZ2ljYSBkZWwgcsOgc3Rlci4gRWxzIHZhbG9ycyBzZXJhbiAxICh0cnVlKSBvIDAgKGZhbHNlKS4gUG90IHNlciB1biBlbnRlciBvIHVuIHLDoHN0ZXIgZGUgcHVudCBmbG90YW50LlwiLFxuXHRcIkBAQ29uX1RydWUtUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZWxzIHZhbG9ycyBkZSBsYSBxdWFsIHMndXRpbGl0emFyYW4gY29tIGEgdmFsb3JzIGRlbCBww614ZWwgZGUgc29ydGlkYSBzaSBsYSBjb25kaWNpw7Mgw6lzIGNlcnRhLiBQb3Qgc2VyIHVuIGVudGVyLCB1biByw6BzdGVyIGRlIHB1bnQgZmxvdGFudCBvIHVuIHZhbG9yIGNvbnN0YW50LlwiLFxuXHRcIkBAQ29uc3RhbnRfQ29uc3RhbnRfdGFnMEBAXCI6IFwiVmFsb3IgZGUgbGEgY29uc3RhbnQgcXVlIHMnYWZlZ2lyw6AgYWwgcsOgc3RlciB2aXJ0dWFsLlwiLFxuXHRcIkBAQ29uc3RhbnRfUmFzdGVyLUluZm9fdGFnMEBAXCI6IFwiVXRpbGl0emV1IGVsIGJvdMOzIDxzdHJvbmc+Q2FycmVnYSBlbCByw6BzdGVyIGRlIGxhIHBsYW50aWxsYTwvc3Ryb25nPiBwZXIgY2FycmVnYXIgdW5hIHBsYW50aWxsYSBkZXMgZCd1biBkaXJlY3RvcmkgbyB1biBwb3J0YWwuXCIsXG5cdFwiQEBDb250b3VyX0FkYXB0aXZlLVNtb290aGluZ190YWcwQEBcIjogXCJRdWFudGl0YXQgZGUgc3Vhdml0emFjacOzIHF1ZSBzJ2FwbGljYXLDoCBhIGxhIGzDrW5pYSBkZSBjb3JiYSBkZSBuaXZlbGwuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAyLDUuXCIsXG5cdFwiQEBDb250b3VyX0FkYXB0aXZlLVNtb290aGluZ190YWcxQEBcIjogXCJVbiB2YWxvciBpbmZlcmlvciBwcm9kdWVpeCB1bmEgbMOtbmlhIGRlIGNvcmJhIGRlIG5pdmVsbCBhbWIgbcOpcyBncmFudWxhcml0YXQgaSBtZW55cyBzdWF2aXR6YWNpw7MsIG1lbnRyZSBxdWUgdW4gdmFsb3Igc3VwZXJpb3IgcHJvZHVlaXggdW5hIGzDrW5pYSBkZSBjb3JiYSBkZSBuaXZlbGwgYW1iIG3DqXMgc3Vhdml0emFjacOzIHF1ZSBlcyBtb3N0cmEgbWVueXMgaXJyZWd1bGFyLlwiLFxuXHRcIkBAQ29udG91cl9Db250b3VyLUludGVydmFsX3RhZzBAQFwiOiBcIkRpZmVyw6huY2lhIGQnYWx0aXR1ZCBlbnRyZSBsZXMgbMOtbmllcyBkZSBjb3JiYSBkZSBuaXZlbGwuXCIsXG5cdFwiQEBDb250b3VyX0NvbnRvdXItSW50ZXJ2YWxfdGFnMUBAXCI6IFwiVW4gaW50ZXJ2YWwgZGUgY29yYmVzIGRlIG5pdmVsbCBwZXRpdCBzJ3V0aWxpdHphIGVuIMOgcmVlcyByZWxhdGl2YW1lbnQgcGxhbmVzLCBtZW50cmUgZCdhbHRyZXMgbcOpcyBncmFucyBzJ3V0aWxpdHplbiBlbiB0ZXJyZW55cyBpcnJlZ3VsYXJzIG8gbXVudGFueW9zb3MuXCIsXG5cdFwiQEBDb250b3VyX0NvbnRvdXItVHlwZV90YWcwQEBcIjogXCJUaXB1cyBkZSBjb3JiYSBkZSBuaXZlbGwgcXVlIGVzIGNyZWFyw6A6XCIsXG5cdFwiQEBDb250b3VyX0NvbnRvdXItVHlwZV90YWcxQEBcIjogXCI8c3Ryb25nPkVtcGxlbmFtZW50IGRlIGxhIGNvcmJhIGRlIG5pdmVsbDwvc3Ryb25nPjogZW1wbGVuYSBsJ8OgcmVhIGVudHJlIGNhZGEgbMOtbmlhIGRlIGNvcmJhIGRlIG5pdmVsbCBhbWIgZWwgdmFsb3IgZCdlbGV2YWNpw7MgcXVhbnRpZmljYXQuXCIsXG5cdFwiQEBDb250b3VyX0NvbnRvdXItVHlwZV90YWczQEBcIjogXCI8c3Ryb25nPkzDrW5pZXMgZGUgY29yYmEgZGUgbml2ZWxsPC9zdHJvbmc+OiB1bmVpeCBwdW50cyBhbWIgbGEgbWF0ZWl4YSBlbGV2YWNpw7MgcGVyIGNyZWFyIHVuYSBsw61uaWEgcXVlIHJlcHJlc2VudGkgdW5hIGVsZXZhY2nDsyBjb25zdGFudC5cIixcblx0XCJAQENvbnRvdXJfQ29udG91ci1UeXBlX3RhZzVAQFwiOiBcIjxzdHJvbmc+U3Vhdml0emEgbm9tw6lzIGxhIHN1cGVyZsOtY2llPC9zdHJvbmc+OiBzdWF2aXR6YSBsYSBjYXBhIGQnZWxldmFjacOzIGQnZW50cmFkYSwgcGVyw7Igbm8gcHJvZHVlaXggY29yYmVzIGRlIG5pdmVsbC5cIixcblx0XCJAQENvbnRvdXJfTnRoLUNvbnRvdXItTGluZS1Jbi1Cb2xkX3RhZzBAQFwiOiBcIkNvcmJhIGRlIG5pdmVsbCBkJ8OtbmRleCwgcXVlIGVzIHJlcHJlc2VudGEgY29tIHVuYSBsw61uaWEgZW4gbmVncmV0YS5cIixcblx0XCJAQENvbnRvdXJfTnRoLUNvbnRvdXItTGluZS1Jbi1Cb2xkX3RhZzFAQFwiOiBcIkVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyA1OyBwZXIgdGFudCwgY2FkYSBjaW5xdWVuYSBsw61uaWEgZGUgY29yYmEgZGUgbml2ZWxsIGVzdMOgIGVuIG5lZ3JldGEuXCIsXG5cdFwiQEBDb250b3VyX051bWJlci1PZi1Db250b3Vyc190YWcwQEBcIjogXCJOb21icmUgZGUgY29yYmVzIGRlIG5pdmVsbCBxdWUgZXMgZ2VuZXJhcmFuIGEgbGEgdmlzdWFsaXR6YWNpw7MuIEFxdWVzdGEgb3BjacOzIGFqdXN0YSBkZSBtYW5lcmEgZGluw6BtaWNhIGwnaW50ZXJ2YWwgZGUgY29yYmVzIGRlIG5pdmVsbCBwZXIgYWp1c3RhciBlbCB0ZXJyZW55IGEgbGEgdmlzdWFsaXR6YWNpw7MgaSBtYW50ZW5pciBhbGhvcmEgZWxzIGludGVydmFsIGVzdGFuZGFyZGl0emF0cywgY29tIGFyYSAxLCA1LCAxMCwgZXRjLlwiLFxuXHRcIkBAQ29udG91cl9SYXN0ZXJfdGFnMEBAXCI6IFwiRGF0YXNldCBkJ2VsZXZhY2nDsyBkZSByw6BzdGVyIGQndW5hIGJhbmRhLlwiLFxuXHRcIkBAQ29udG91cl9aLUJhc2VfdGFnMEBAXCI6IFwiVmFsb3IgZGUgYmFzZSBkZSBsZXMgY29yYmVzIGRlIG5pdmVsbC4gTGVzIGNvcmJlcyBkZSBuaXZlbGwgZXMgZ2VuZXJlbiBwZXIgc29icmUgaSBwZXIgc290YSBkJ2FxdWVzdCB2YWxvciwgc2Vnb25zIHNpZ3VpIG5lY2Vzc2FyaSBwZXIgY29icmlyIHRvdCBsJ2ludGVydmFsIGRlIHZhbG9ycyBkZWwgcsOgc3RlciBkJ2VudHJhZGEuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLlwiLFxuXHRcIkBAQ29udG91cl9aLUJhc2VfdGFnMUBAXCI6IFwiVW4gdmFsb3IgZGUgMCBzb3ZpbnQgcmVwcmVzZW50YSBlbCBuaXZlbGwgbWl0asOgIGRlbCBtYXIsIGVuIGZ1bmNpw7MgZGVsIGRhdGFzZXQgZCdlbGV2YWNpw7MgZCdvcmlnZW4uXCIsXG5cdFwiQEBDb250b3VyX1otRmFjdG9yX3RhZzBAQFwiOiBcIkZhY3RvciBkZSBjb252ZXJzacOzIGQndW5pdGF0cyB1dGlsaXR6YXQgZW4gZ2VuZXJhciBjb3JiZXMgZGUgbml2ZWxsLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMS5cIixcblx0XCJAQENvbnRvdXJfWi1GYWN0b3JfdGFnMUBAXCI6IFwiTGVzIGzDrW5pZXMgZGUgY29yYmEgZGUgbml2ZWxsIGVzIGdlbmVyZW4gZW4gZnVuY2nDsyBkZWxzIHZhbG9ycyBkZSB6IGRlbCByw6BzdGVyIGQnZW50cmFkYSwgcXVlIHNvdmludCBlcyBtZXN1cmVuIGVuIHVuaXRhdHMgZGUgbWV0cmVzIG8gcGV1cy4gQW1iIHVuIHZhbG9yIHBlciBkZWZlY3RlIGQnMSwgbGVzIGNvcmJlcyBkZSBuaXZlbGwgcydpbmRpY2FyYW4gYW1iIGxlcyBtYXRlaXhlcyB1bml0YXRzIHF1ZSBlbHMgdmFsb3IgZGUgeiBkZWwgcsOgc3RlciBkJ2VudHJhZGEuIFBlciBjcmVhciBjb3JiZXMgZGUgbml2ZWxsIGFtYiB1bmEgdW5pdGF0IGRpZmVyZW50IHF1ZSBsYSBkZWxzIHZhbG9ycyBkZSB6LCBkZWZpbml1IHVuIHZhbG9yIGFkZXF1YXQgcGVyIGFsIGZhY3RvciB6LiBUaW5ndWV1IGVuIGNvbXB0ZSBxdWUgbm8gw6lzIG5lY2Vzc2FyaSB0ZW5pciB1bml0YXRzIHgseSBkZSB0ZXJyZW55IGkgeiBkZSBzdXBlcmbDrWNpZSBjb2hlcmVudHMgcGVyIGEgYXF1ZXN0YSBlaW5hLlwiLFxuXHRcIkBAQ29udG91cl9aLUZhY3Rvcl90YWcyQEBcIjogXCJQZXIgZXhlbXBsZSwgc2kgZWxzIHZhbG9ycyBkJ2VsZXZhY2nDsyBkZWwgcsOgc3RlciBkJ2VudHJhZGEgc8OzbiBwZXVzLCBwZXLDsiB2b2xldSBxdWUgbGVzIGNvcmJlcyBkZSBuaXZlbGwgZXMgZ2VuZXJpbiBlbiBtZXRyZXMsIGRlZmluaXUgZWwgZmFjdG9yIHogZW4gMCwzMDQ4ICgxIHBldSA9MCwzMDQ4IG1ldHJlcykuXCIsXG5cdFwiQEBDb250cmFzdC1hbmQtQnJpZ2h0bmVzc19CcmlnaHRuZXNzLU9mZnNldF90YWcwQEBcIjogXCJBanVzdGV1IGxhIGJyaWxsYW50b3IgZGUgbGEgY2FwYSByw6BzdGVyLlwiLFxuXHRcIkBAQ29udHJhc3QtYW5kLUJyaWdodG5lc3NfQnJpZ2h0bmVzcy1PZmZzZXRfdGFnMUBAXCI6IFwiUG9kZXUgdXRpbGl0emFyIGVsIGNvbnRyb2wgbGxpc2NhbnQgcGVyIG1vZGlmaWNhciBsYSBjb21wZW5zYWNpw7MgZGUgbGEgYnJpbGxhbnRvciwgbyBiw6kgcG9kZXUgZXNjcml1cmUgdW4gdmFsb3IuXCIsXG5cdFwiQEBDb250cmFzdC1hbmQtQnJpZ2h0bmVzc19Db250cmFzdC1PZmZzZXRfdGFnMEBAXCI6IFwiQWp1c3RldSBlbCBjb250cmFzdCBkZSBsYSBjYXBhIHLDoHN0ZXIuXCIsXG5cdFwiQEBDb250cmFzdC1hbmQtQnJpZ2h0bmVzc19Db250cmFzdC1PZmZzZXRfdGFnMUBAXCI6IFwiUG9kZXUgdXRpbGl0emFyIGVsIGNvbnRyb2wgbGxpc2NhbnQgcGVyIG1vZGlmaWNhciBsYSBjb21wZW5zYWNpw7MgZGVsIGNvbnRyYXN0LCBvIGLDqSBwb2RldSBlc2NyaXVyZSB1biB2YWxvci5cIixcblx0XCJAQENvbnRyYXN0LWFuZC1CcmlnaHRuZXNzX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBvbiBzJ2VkaXRhcmFuIGxhIGJyaWxsYW50b3IgaSBlbCBjb250cmFzdC5cIixcblx0XCJAQENvbnZvbHV0aW9uX2tlcm5lbF90YWcwQEBcIjogXCI8cD5FbiBhcXVlc3RhIHRhdWxhIGVzIG1vc3RyYSBjb20gZXMgcG9uZGVyYXLDoCBjYWRhIHDDrXhlbCBhbCBwcm9jw6lzIGRlIGZpbHRyYXRnZS4gQXF1ZXN0YSB0YXVsYSBlcyBwb3QgZWRpdGFyIHNpIHRyaWV1IDxzdHJvbmc+RGVmaW5pdCBwZXIgbCd1c3Vhcmk8L3N0cm9uZz4gY29tIGEgPHN0cm9uZz5UaXB1czwvc3Ryb25nPi48L3A+XCIsXG5cdFwiQEBDb252b2x1dGlvbl9SYXN0ZXJfdGFnMEBAXCI6IFwiRGF0YXNldCByw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQENvbnZvbHV0aW9uX1R5cGVfdGFnMEBAXCI6IFwiU2VsZWNjaW9uZXUgZWwgdGlwdXMgZGUgZmlsdHJhdGdlIHF1ZSB2b2xldSByZWFsaXR6YXIuIEhpIGhhIG9wY2lvbnMgcGVyIGVuZm9jYXIsIGRpZnVtaW5hciBpIGRldGVjdGFyIHZvcmVzLCBvIGLDqSBwb2RldSBkZWZpbmlyIHVuIGZpbHRyZSBwcm9waSBiYXNhdCBlbiBlbCBudWNsaVwiLFxuXHRcIkBAQ29ycmlkb3JfRGlzdGFuY2UtUmFzdGVyLTFfdGFnMEBAXCI6IFwiUHJpbWVyIHLDoHN0ZXIgZGUgZGlzdMOgbmNpYSBkJ2VudHJhZGEuIEhhIGRlIHNlciB1bmEgc29ydGlkYSBkZSBkaXN0w6BuY2lhIGRlIGNvc3QgYWN1bXVsYXQgZGUgQ29zdCBlbiBwbGEgbyBEaXN0w6BuY2lhIGRlIHJ1dGEuXCIsXG5cdFwiQEBDb3JyaWRvcl9EaXN0YW5jZS1SYXN0ZXItMl90YWcwQEBcIjogXCJTZWdvbiByw6BzdGVyIGRlIGRpc3TDoG5jaWEgZCdlbnRyYWRhLiBIYSBkZSBzZXIgdW5hIHNvcnRpZGEgZGUgZGlzdMOgbmNpYSBkZSBjb3N0IGFjdW11bGF0IGRlIENvc3QgZW4gcGxhIG8gRGlzdMOgbmNpYSBkZSBydXRhLlwiLFxuXHRcIkBAQ29zX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQENvc19DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ29zX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDb3NfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBDb3NfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQENvc19DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDb3NfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAQ29zX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQ29zX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQ29zX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQENvc19FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQENvc19SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBkZSBsYSBxdWFsIGVzIGNhbGN1bGFyYW4gZWxzIHZhbG9ycyBkZWwgY29zaW51cy5cIixcblx0XCJAQENvc0hfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAQ29zSF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ29zSF9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ29zSF9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQENvc0hfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQENvc0hfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ29zSF9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBDb3NIX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQ29zSF9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQENvc0hfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQ29zSF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQENvc0hfUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZGUgbGEgcXVhbCBlcyBjYWxjdWxhcmFuIGVscyB2YWxvcnMgZGVsIGNvc2ludXMgaGlwZXJiw7JsaWMuXCIsXG5cdFwiQEBDb3N0LUFsbG9jYXRpb25fQWNjdW11bGF0aXZlLUNvc3QtUmVzaXN0YW5jZS1SYXRlX3RhZzBAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIHNpbXVsYSBsJ2luY3JlbWVudCBkZSBsJ2VzZm9yw6cgcGVyIHN1cGVyYXIgZWxzIGNvc3RvcyBhIG1lc3VyYSBxdWUgZWwgY29zdCBhY3VtdWxhdGl1IGF1Z21lbnRhLiBTJ3V0aWxpdHphIHBlciByZXByZXNlbnRhciBsYSBmYXRpZ2EgZGVsIHZpYXRnZXIuIEVsIGNvc3QgYWN1bXVsYXRpdSBjcmVpeGVudCBwZXIgYXJyaWJhciBhIHVuYSBjZWzCt2xhIGVzIG11bHRpcGxpY2EgcGVyIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGkgcydhZmVnZWl4IGFsIGNvc3QgcGVyIHBhc3NhciBhIGxhIGNlbMK3bGEgc2Vnw7xlbnQuXCIsXG5cdFwiQEBDb3N0LUFsbG9jYXRpb25fQWNjdW11bGF0aXZlLUNvc3QtUmVzaXN0YW5jZS1SYXRlX3RhZzFAQFwiOiBcIsOJcyB1bmEgdmVyc2nDsyBtb2RpZmljYWRhIGQndW5hIGbDs3JtdWxhIGRlIHRpcHVzIGQnaW50ZXLDqHMgY29tcG9zdCBxdWUgcyd1dGlsaXR6YSBwZXIgY2FsY3VsYXIgZWwgY29zdCBhcGFyZW50IGRlIHBhc3NhciBwZXIgdW5hIGNlbMK3bGEuIEEgbWVzdXJhIHF1ZSBlbCB2YWxvciBkZSBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBhdWdtZW50YSwgdGFtYsOpIGhvIGZhIGVsIGNvc3QgZGUgbGVzIGNlbMK3bGVzIHF1ZSBlcyB2aXNpdGVuIHBvc3Rlcmlvcm1lbnQuIENvbSBtw6lzIGFsdGEgw6lzIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhLCBtw6lzIGFsdCDDqXMgZWwgY29zdCBwZXIgYXJyaWJhciBhIGxhIGNlbMK3bGEgc2Vnw7xlbnQsIHF1ZSBlcyBjYWxjdWxhIHBlciBhIGNhZGEgbW92aW1lbnQgcG9zdGVyaW9yLiBBdMOocyBxdWUgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgw6lzIHNpbWlsYXIgYSB1bmEgdGF4YSBjb21wb3N0YSBpIHF1ZSBlbHMgdmFsb3JzIGRlbCBjb3N0IGFjdW11bGF0aXUgYWNvc3R1bWVuIGEgc2VyIG1vbHQgYWx0cywgZXMgcmVjb21hbmVuIHRheGVzIGRlIHJlc2lzdMOobmNpYSBiYWl4ZXMsIGNvbSBhcmEgZGUgMCwwMDUgbyBtZW55cywgc2Vnb25zIGVscyB2YWxvcnMgZGVsIGNvc3QgYWN1bXVsYXRpdS5cIixcblx0XCJAQENvc3QtQWxsb2NhdGlvbl9BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMkBAXCI6IFwiRWwgdmFsb3IgaGEgZGUgc2VyIG3DqXMgZ3JhbiBxdWUgemVyby4gTGEgY2FwYWNpdGF0IHBlciBkZWZlY3RlIMOpcyBhbCBsbGluZGFyIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBDb3N0LUFsbG9jYXRpb25fQWNjdW11bGF0aXZlLUNvc3QtUmVzaXN0YW5jZS1SYXRlX3RhZzNAQFwiOiBcIlBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBlcyBwb2RlbiB1dGlsaXR6YXIgdW4gdmFsb3IgbnVtw6hyaWMgKGRvYmxlKSBvIHVuIGNhbXAgZGVsIDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQENvc3QtQWxsb2NhdGlvbl9DYXBhY2l0eV90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSBjYXBhY2l0YXQgZGUgY29zdCBkZWwgdmlhdGdlciBwZXIgYSB1biBvcmlnZW4uIEVscyBjw6BsY3VscyBkZSBjb3N0IGNvbnRpbnVlbiBwZXIgYSBjYWRhIG9yaWdlbiBmaW5zIGEgYXNzb2xpciBsYSBjYXBhY2l0YXQgZXNwZWNpZmljYWRhLlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX0NhcGFjaXR5X3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciBtw6lzIGdyYW4gcXVlIHplcm8uIExhIGNhcGFjaXRhdCBwZXIgZGVmZWN0ZSDDqXMgYWwgbGxpbmRhciBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX0NhcGFjaXR5X3RhZzJAQFwiOiBcIlBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBlcyBwb2RlbiB1dGlsaXR6YXIgdW4gdmFsb3IgbnVtw6hyaWMgKGRvYmxlKSBvIHVuIGNhbXAgZGVsIDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQENvc3QtQWxsb2NhdGlvbl9Db3N0LVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgcXVlIGRlZmluZWl4IGVsIGNvc3QgbyBsYSBpbXBlZMOgbmNpYSBkZWwgbW92aW1lbnQgcGxhbmltw6h0cmljIGEgdHJhdsOpcyBkZSBjYWRhIGNlbMK3bGEuIEVsIHZhbG9yIGRlIGNhZGEgdWJpY2FjacOzIGRlIGNlbMK3bGEgcmVwcmVzZW50YSBsYSBkaXN0w6BuY2lhIGRlIGNvc3QgcGVyIHVuaXRhdCBwZXIgbW91cmUncyBhIHRyYXbDqXMgZGUgbGEgY2VswrdsYS4gQ2FkYSB2YWxvciBkJ3ViaWNhY2nDsyBkZSBjZWzCt2xhIGVzIG11bHRpcGxpY2EgcGVyIGxhIHJlc29sdWNpw7MgZGUgbGEgY2VswrdsYSBpIHRhbWLDqSBlcyBjb21wZW5zYSBlbCBtb3ZpbWVudCBkaWFnb25hbCBwZXIgb2J0ZW5pciBlbCBjb3N0IHRvdGFsIGRlIHBhc3NhciBhIHRyYXbDqXMgZGUgbGEgY2VswrdsYS5cIixcblx0XCJAQENvc3QtQWxsb2NhdGlvbl9Db3N0LVJhc3Rlcl90YWcxQEBcIjogXCJFbHMgdmFsb3JzIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZGUgY29zdG9zPC9zdHJvbmc+IHBvZGVuIHNlciBlbnRlcnMgbyBwdW50cyBmbG90YW50cywgcGVyw7Igbm8gcG9kZW4gc2VyIG5lZ2F0aXVzIG5pIHplcm8uXCIsXG5cdFwiQEBDb3N0LUFsbG9jYXRpb25fTWF4aW11bS1EaXN0YW5jZV90YWcwQEBcIjogXCJMbGluZGFyIHF1ZSBlbHMgdmFsb3JzIGRlbCBjb3N0IGFjdW11bGF0aXUgbm8gcG9kZW4gc3VwZXJhci4gU2kgdW5hIGRpc3TDoG5jaWEgZGUgY29zdCBhY3VtdWxhdGl1IHN1cGVyYSBhcXVlc3QgdmFsb3IsIGVsIHZhbG9yIGRlIHNvcnRpZGEgZGUgbGEgdWJpY2FjacOzIGRlIGxhIGNlbMK3bGEgc2Vyw6AgJHtOb0RhdGF9LiBMYSBkaXN0w6BuY2lhIG3DoHhpbWEgZGVmaW5laXggbCdleHRlbnNpw7MgZGUgbGEgcXVhbCBlcyBjYWxjdWxlbiBsZXMgZGlzdMOgbmNpZXMgZGUgY29zdCBhY3VtdWxhdGl1LiBMYSBkaXN0w6BuY2lhIHBlciBkZWZlY3RlIMOpcyBsYSBkZSBsJ2V4dGVuc2nDsyBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX011bHRpcGxpZXItdG8tQXBwbHktdG8tQ29zdHNfdGFnMEBAXCI6IFwiTXVsdGlwbGljYWRvciBxdWUgcydhcGxpY2Fyw6AgYWxzIHZhbG9ycyBkZWxzIGNvc3Rvcy5cIixcblx0XCJAQENvc3QtQWxsb2NhdGlvbl9NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIHBlcm1ldCBjb250cm9sYXIgZWwgbW9kZSBkZSB2aWF0Z2UgbyBsYSBtYWduaXR1ZCBlbiB1biBvcmlnZW4uIENvbSBtYWpvciBzaWd1aSBlbCBtdWx0aXBsaWNhZG9yLCBtw6lzIGFsdCBzZXLDoCBlbCBjb3N0IGRlbCBtb3ZpbWVudCBhIHRyYXbDqXMgZGUgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX011bHRpcGxpZXItdG8tQXBwbHktdG8tQ29zdHNfdGFnMkBAXCI6IFwiRWxzIHZhbG9ycyBoYW4gZGUgc2VyIG3DqXMgZ3JhbnMgcXVlIHplcm8uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAxLlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX011bHRpcGxpZXItdG8tQXBwbHktdG8tQ29zdHNfdGFnM0BAXCI6IFwiUGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUsIGVzIHBvZGVuIHV0aWxpdHphciB1biB2YWxvciBudW3DqHJpYyAoZG9ibGUpIG8gdW4gY2FtcCBkZWwgPHN0cm9uZz5yw6BzdGVyIGQnb3JpZ2VuPC9zdHJvbmc+LlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX1NvdXJjZS1GaWVsZF90YWcwQEBcIjogXCJDYW1wIHV0aWxpdHphdCBwZXIgYXNzaWduYXIgdmFsb3JzIGEgbGVzIHViaWNhY2lvbnMgZCdvcmlnZW4uIEhhIGRlIHNlciBkZSB0aXB1cyBlbnRlci4gU2kgcydoYSBkZWZpbml0IGVsIDxzdHJvbmc+csOgc3RlciBkZSB2YWxvcjwvc3Ryb25nPiwgZWxzIHZhbG9ycyBkJ2FxdWVzdGEgZW50cmFkYSB0aW5kcmFuIHByaW9yaXRhdCBzb2JyZSBxdWFsc2V2b2wgY29uZmlndXJhY2nDsyBkZWwgPHN0cm9uZz5jYW1wIGQnb3JpZ2VuPC9zdHJvbmc+LlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX1NvdXJjZS1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgbmVjZXNzYXJpIGRlIGxlcyB1YmljYWNpb25zIGQnb3JpZ2VuLlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX1NvdXJjZS1SYXN0ZXJfdGFnMUBAXCI6IFwiQXF1ZXN0IMOpcyB1biByw6BzdGVyIHF1ZSBpZGVudGlmaWNhIGxlcyBjZWzCt2xlcyBvIGxlcyB1YmljYWNpb25zIGRlcyBkZSBsZXMgcXVhbHMgcydoYSBjYWxjdWxhdCBsYSBkaXN0w6BuY2lhIGRlIG1lbm9yIGNvc3QgYWN1bXVsYXQgZGUgbGEgdWJpY2FjacOzIGRlIGNhZGEgY2VswrdsYSBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX1NvdXJjZS1SYXN0ZXJfdGFnMkBAXCI6IFwiU2kgZWwgPHN0cm9uZz5yw6BzdGVyIGQnb3JpZ2VuPC9zdHJvbmc+IGQnZW50cmFkYSBlcyBkZSBwdW50IGZsb3RhbnQsIGNhbCBkZWZpbmlyIGVsIDxzdHJvbmc+csOgc3RlciBkZSB2YWxvcjwvc3Ryb25nPiBpIGhhIGRlIHNlciB1biBlbnRlci4gRWwgPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+IHRpbmRyw6AgcHJpb3JpdGF0IHNvYnJlIHF1YWxzZXZvbCBjb25maWd1cmFjacOzIGRlbCA8c3Ryb25nPmNhbXAgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBDb3N0LUFsbG9jYXRpb25fU3RhcnQtQ29zdF90YWcwQEBcIjogXCJDb3N0IGluaWNpYWwgb24gY29tZW7Dp2FyYW4gZWxzIGPDoGxjdWxzIGRlIGNvc3Rvcy4gQXF1ZXN0IHBhcsOgbWV0cmUgcGVybWV0IGwnZXNwZWNpZmljYWNpw7MgZGVsIGNvc3QgZml4IGFzc29jaWF0IGEgdW4gb3JpZ2VuLiBFbiBsbG9jIGRlIGNvbWVuw6dhciBhbWIgdW4gY29zdCBkZSAwLCBsJ2FsZ29yaXRtZSBkZSBjb3N0IGhvIGZhcsOgIGFtYiBlbCB2YWxvciBlc3BlY2lmaWNhdC5cIixcblx0XCJAQENvc3QtQWxsb2NhdGlvbl9TdGFydC1Db3N0X3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciB6ZXJvIG8gc3VwZXJpb3IuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX1RyYXZlbC1EaXJlY3Rpb25fdGFnMEBAXCI6IFwiRGVmaW5laXggbGEgZGlyZWNjacOzIGRlbCB2aWF0Z2VyIHF1YW4gcydhcGxpcXVlbiBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIGVsIGNvc3QgaW5pY2lhbCBkZSBsJ29yaWdlbi5cIixcblx0XCJAQENvc3QtQWxsb2NhdGlvbl9UcmF2ZWwtRGlyZWN0aW9uX3RhZzFAQFwiOiBcIjxzdHJvbmc+RGVzIGRlIGwnb3JpZ2VuPC9zdHJvbmc+OiBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIGVsIGNvc3QgaW5pY2lhbCBkZSBsJ29yaWdlbiBzJ2FwbGljYXJhbiBjb21lbsOnYW50IHBlciBsJ29yaWdlbiBkJ2VudHJhZGEgaSBwYXNzYW50IGEgbGVzIGNlbMK3bGVzIHF1ZSBubyBzw7NuIGxhIGQnb3JpZ2VuLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQENvc3QtQWxsb2NhdGlvbl9UcmF2ZWwtRGlyZWN0aW9uX3RhZzNAQFwiOiBcIjxzdHJvbmc+RmlucyBhIGwnb3JpZ2VuPC9zdHJvbmc+OiBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIGVsIGNvc3QgaW5pY2lhbCBkZSBsJ29yaWdlbiBzJ2FwbGljYXJhbiBjb21lbsOnYW50IHBlciBjYWRhIGNlbMK3bGEgcXVlIG5vIHNpZ3VpIGxhIGQnb3JpZ2VuIGkgdG9ybmFudCBhIGwnb3JpZ2VuIGQnZW50cmFkYS5cIixcblx0XCJAQENvc3QtQWxsb2NhdGlvbl9UcmF2ZWwtRGlyZWN0aW9uX3RhZzVAQFwiOiBcIkVzcGVjaWZpcXVldSBsYSBwYXJhdWxhIGNsYXUgPHN0cm9uZz5EZXMgZGUgbCdvcmlnZW48L3N0cm9uZz4gbyA8c3Ryb25nPkZpbnMgYSBsJ29yaWdlbjwvc3Ryb25nPiwgcXVlIHMnYXBsaWNhcsOgIGEgdG90cyBlbHMgb3LDrWdlbnMgbyBlc3BlY2lmaXF1ZXUgdW4gY2FtcCBhbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4gcXVlIGNvbnRpbmd1aSBsZXMgcGFyYXVsZXMgY2xhdSBwZXIgaWRlbnRpZmljYXIgbGEgZGlyZWNjacOzIGRlIHZpYXRnZSBkZSBjYWRhIG9yaWdlbi4gQXF1ZXN0IGNhbXAgaGEgZGUgY29udGVuaXIgbGEgY2FkZW5hICR7RlJPTV9TT1VSQ0V9IG8gJHtUT19TT1VSQ0V9LlwiLFxuXHRcIkBAQ29zdC1BbGxvY2F0aW9uX1ZhbHVlLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGVudGVyIGQnZW50cmFkYSBxdWUgaWRlbnRpZmljYSBlbHMgdmFsb3JzIGRlIHpvbmEgcXVlIHMndXRpbGl0emFyYW4gcGVyIGEgY2FkYSB1YmljYWNpw7MgZCdvcmlnZW4gZCdlbnRyYWRhLiBBIGNhZGEgY2VswrdsYSBkJ3ViaWNhY2nDsyBkJ29yaWdlbiwgZWwgdmFsb3IgZGVmaW5pdCBwZWwgPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+IHMnYXNzaWduYXLDoCBhIHRvdGVzIGxlcyBjZWzCt2xlcyBhc3NpZ25hZGVzIGEgbGEgdWJpY2FjacOzIGQnb3JpZ2VuIHBlciBhbCBjw6BsY3VsLiBFbCA8c3Ryb25nPnLDoHN0ZXIgZGUgdmFsb3I8L3N0cm9uZz4gdGluZHLDoCBwcmlvcml0YXQgc29icmUgcXVhbHNldm9sIGNvbmZpZ3VyYWNpw7MgcGVyIGFsIDxzdHJvbmc+Y2FtcCBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX0FjY3VtdWxhdGl2ZS1Db3N0LVJlc2lzdGFuY2UtUmF0ZV90YWcwQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBzaW11bGEgbCdpbmNyZW1lbnQgZGUgbCdlc2ZvcsOnIHBlciBzdXBlcmFyIGVscyBjb3N0b3MgYSBtZXN1cmEgcXVlIGVsIGNvc3QgYWN1bXVsYXRpdSBhdWdtZW50YS4gUyd1dGlsaXR6YSBwZXIgcmVwcmVzZW50YXIgbGEgZmF0aWdhIGRlbCB2aWF0Z2VyLiBFbCBjb3N0IGFjdW11bGF0aXUgY3JlaXhlbnQgcGVyIGFycmliYXIgYSB1bmEgY2VswrdsYSBlcyBtdWx0aXBsaWNhIHBlciBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIHMnYWZlZ2VpeCBhbCBjb3N0IHBlciBwYXNzYXIgYSBsYSBjZWzCt2xhIHNlZ8O8ZW50LlwiLFxuXHRcIkBAQ29zdC1CYWNrLUxpbmtfQWNjdW11bGF0aXZlLUNvc3QtUmVzaXN0YW5jZS1SYXRlX3RhZzFAQFwiOiBcIsOJcyB1bmEgdmVyc2nDsyBtb2RpZmljYWRhIGQndW5hIGbDs3JtdWxhIGRlIHRpcHVzIGQnaW50ZXLDqHMgY29tcG9zdCBxdWUgcyd1dGlsaXR6YSBwZXIgY2FsY3VsYXIgZWwgY29zdCBhcGFyZW50IGRlIHBhc3NhciBwZXIgdW5hIGNlbMK3bGEuIEEgbWVzdXJhIHF1ZSBlbCB2YWxvciBkZSBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBhdWdtZW50YSwgdGFtYsOpIGhvIGZhIGVsIGNvc3QgZGUgbGVzIGNlbMK3bGVzIHF1ZSBlcyB2aXNpdGVuIHBvc3Rlcmlvcm1lbnQuIENvbSBtw6lzIGFsdGEgw6lzIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhLCBtw6lzIGFsdCDDqXMgZWwgY29zdCBwZXIgYXJyaWJhciBhIGxhIGNlbMK3bGEgc2Vnw7xlbnQsIHF1ZSBlcyBjYWxjdWxhIHBlciBhIGNhZGEgbW92aW1lbnQgcG9zdGVyaW9yLiBBdMOocyBxdWUgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgw6lzIHNpbWlsYXIgYSB1bmEgdGF4YSBjb21wb3N0YSBpIHF1ZSBlbHMgdmFsb3JzIGRlbCBjb3N0IGFjdW11bGF0aXUgYWNvc3R1bWVuIGEgc2VyIG1vbHQgYWx0cywgZXMgcmVjb21hbmVuIHRheGVzIGRlIHJlc2lzdMOobmNpYSBiYWl4ZXMsIGNvbSBhcmEgZGUgMCwwMDUgbyBtZW55cywgc2Vnb25zIGVscyB2YWxvcnMgZGVsIGNvc3QgYWN1bXVsYXRpdS5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX0FjY3VtdWxhdGl2ZS1Db3N0LVJlc2lzdGFuY2UtUmF0ZV90YWcyQEBcIjogXCJFbCB2YWxvciBoYSBkZSBzZXIgbcOpcyBncmFuIHF1ZSB6ZXJvLiBMYSBjYXBhY2l0YXQgcGVyIGRlZmVjdGUgw6lzIGFsIGxsaW5kYXIgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX0FjY3VtdWxhdGl2ZS1Db3N0LVJlc2lzdGFuY2UtUmF0ZV90YWczQEBcIjogXCJQZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgZXMgcG9kZW4gdXRpbGl0emFyIHVuIHZhbG9yIG51bcOocmljIChkb2JsZSkgbyB1biBjYW1wIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBDb3N0LUJhY2stTGlua19DYXBhY2l0eV90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSBjYXBhY2l0YXQgZGUgY29zdCBkZWwgdmlhdGdlciBwZXIgYSB1biBvcmlnZW4uIEVscyBjw6BsY3VscyBkZSBjb3N0IGNvbnRpbnVlbiBwZXIgYSBjYWRhIG9yaWdlbiBmaW5zIGEgYXNzb2xpciBsYSBjYXBhY2l0YXQgZXNwZWNpZmljYWRhLlwiLFxuXHRcIkBAQ29zdC1CYWNrLUxpbmtfQ2FwYWNpdHlfdGFnMUBAXCI6IFwiRWwgdmFsb3IgaGEgZGUgc2VyIG3DqXMgZ3JhbiBxdWUgemVyby4gTGEgY2FwYWNpdGF0IHBlciBkZWZlY3RlIMOpcyBhbCBsbGluZGFyIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBDb3N0LUJhY2stTGlua19DYXBhY2l0eV90YWcyQEBcIjogXCJQZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgZXMgcG9kZW4gdXRpbGl0emFyIHVuIHZhbG9yIG51bcOocmljIChkb2JsZSkgbyB1biBjYW1wIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBDb3N0LUJhY2stTGlua19Db3N0LVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgcXVlIGRlZmluZWl4IGVsIGNvc3QgbyBsYSBpbXBlZMOgbmNpYSBkZWwgbW92aW1lbnQgcGxhbmltw6h0cmljIGEgdHJhdsOpcyBkZSBjYWRhIGNlbMK3bGEuIEVsIHZhbG9yIGRlIGNhZGEgdWJpY2FjacOzIGRlIGNlbMK3bGEgcmVwcmVzZW50YSBsYSBkaXN0w6BuY2lhIGRlIGNvc3QgcGVyIHVuaXRhdCBwZXIgbW91cmUncyBhIHRyYXbDqXMgZGUgbGEgY2VswrdsYS4gQ2FkYSB2YWxvciBkJ3ViaWNhY2nDsyBkZSBjZWzCt2xhIGVzIG11bHRpcGxpY2EgcGVyIGxhIHJlc29sdWNpw7MgZGUgbGEgY2VswrdsYSBpIHRhbWLDqSBlcyBjb21wZW5zYSBlbCBtb3ZpbWVudCBkaWFnb25hbCBwZXIgb2J0ZW5pciBlbCBjb3N0IHRvdGFsIGRlIHBhc3NhciBhIHRyYXbDqXMgZGUgbGEgY2VswrdsYS5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX0Nvc3QtUmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGVsIDxzdHJvbmc+csOgc3RlciBkZSBjb3N0b3M8L3N0cm9uZz4gcG9kZW4gc2VyIGVudGVycyBvIHB1bnRzIGZsb3RhbnRzLCBwZXLDsiBubyBwb2RlbiBzZXIgbmVnYXRpdXMgbmkgemVyby5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX01heGltdW0tRGlzdGFuY2VfdGFnMEBAXCI6IFwiTGxpbmRhciBxdWUgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1IG5vIHBvZGVuIHN1cGVyYXIuIFNpIHVuYSBkaXN0w6BuY2lhIGRlIGNvc3QgYWN1bXVsYXRpdSBzdXBlcmEgYXF1ZXN0IHZhbG9yLCBlbCB2YWxvciBkZSBzb3J0aWRhIGRlIGxhIHViaWNhY2nDsyBkZSBsYSBjZWzCt2xhIHNlcsOgIE5vRGF0YS4gTGEgZGlzdMOgbmNpYSBtw6B4aW1hIGRlZmluZWl4IGwnZXh0ZW5zacOzIGRlIGxhIHF1YWwgZXMgY2FsY3VsZW4gbGVzIGRpc3TDoG5jaWVzIGRlIGNvc3QgYWN1bXVsYXRpdS4gTGEgZGlzdMOgbmNpYSBwZXIgZGVmZWN0ZSDDqXMgbGEgZGUgbCdleHRlbnNpw7MgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX011bHRpcGxpZXItdG8tQXBwbHktdG8tQ29zdHNfdGFnMEBAXCI6IFwiTXVsdGlwbGljYWRvciBxdWUgcydhcGxpY2Fyw6AgYWxzIHZhbG9ycyBkZWxzIGNvc3Rvcy5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX011bHRpcGxpZXItdG8tQXBwbHktdG8tQ29zdHNfdGFnMUBAXCI6IFwiQXF1ZXN0IHBhcsOgbWV0cmUgcGVybWV0IGNvbnRyb2xhciBlbCBtb2RlIGRlIHZpYXRnZSBvIGxhIG1hZ25pdHVkIGVuIHVuIG9yaWdlbi4gQ29tIG1ham9yIHNpZ3VpIGVsIG11bHRpcGxpY2Fkb3IsIG3DqXMgYWx0IHNlcsOgIGVsIGNvc3QgZGVsIG1vdmltZW50IGEgdHJhdsOpcyBkZSBjYWRhIGNlbMK3bGEuXCIsXG5cdFwiQEBDb3N0LUJhY2stTGlua19NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzJAQFwiOiBcIkVscyB2YWxvcnMgaGFuIGRlIHNlciBtw6lzIGdyYW5zIHF1ZSB6ZXJvLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMS5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX011bHRpcGxpZXItdG8tQXBwbHktdG8tQ29zdHNfdGFnM0BAXCI6IFwiUGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUsIGVzIHBvZGVuIHV0aWxpdHphciB1biB2YWxvciBudW3DqHJpYyAoZG9ibGUpIG8gdW4gY2FtcCBkZWwgPHN0cm9uZz5yw6BzdGVyIGQnb3JpZ2VuPC9zdHJvbmc+LlwiLFxuXHRcIkBAQ29zdC1CYWNrLUxpbmtfU291cmNlLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgZGUgbGVzIHViaWNhY2lvbnMgZCdvcmlnZW4uXCIsXG5cdFwiQEBDb3N0LUJhY2stTGlua19Tb3VyY2UtUmFzdGVyX3RhZzFAQFwiOiBcIkFxdWVzdCDDqXMgdW4gcsOgc3RlciBxdWUgaWRlbnRpZmljYSBsZXMgY2VswrdsZXMgbyBsZXMgdWJpY2FjaW9ucyBkZXMgZGUgbGVzIHF1YWxzIHMnaGEgY2FsY3VsYXQgbGEgZGlzdMOgbmNpYSBkZSBtZW5vciBjb3N0IGFjdW11bGF0IGRlIGxhIHViaWNhY2nDsyBkZSBjYWRhIGNlbMK3bGEgZGUgc29ydGlkYS5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX1N0YXJ0LUNvc3RfdGFnMEBAXCI6IFwiQ29zdCBpbmljaWFsIG9uIGNvbWVuw6dhcmFuIGVscyBjw6BsY3VscyBkZSBjb3N0b3MuIEFxdWVzdCBwYXLDoG1ldHJlIHBlcm1ldCBsJ2VzcGVjaWZpY2FjacOzIGRlbCBjb3N0IGZpeCBhc3NvY2lhdCBhIHVuIG9yaWdlbi4gRW4gbGxvYyBkZSBjb21lbsOnYXIgYW1iIHVuIGNvc3QgZGUgMCwgbCdhbGdvcml0bWUgZGUgY29zdCBobyBmYXLDoCBhbWIgZWwgdmFsb3IgZXNwZWNpZmljYXQuXCIsXG5cdFwiQEBDb3N0LUJhY2stTGlua19TdGFydC1Db3N0X3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciB6ZXJvIG8gc3VwZXJpb3IuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLlwiLFxuXHRcIkBAQ29zdC1CYWNrLUxpbmtfVHJhdmVsLURpcmVjdGlvbl90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSBkaXJlY2Npw7MgZGVsIHZpYXRnZXIgcXVhbiBzJ2FwbGlxdWVuIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGkgZWwgY29zdCBpbmljaWFsIGRlIGwnb3JpZ2VuLlwiLFxuXHRcIkBAQ29zdC1CYWNrLUxpbmtfVHJhdmVsLURpcmVjdGlvbl90YWcxQEBcIjogXCI8c3Ryb25nPkRlcyBkZSBsJ29yaWdlbjwvc3Ryb25nPjogbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4gcydhcGxpY2FyYW4gY29tZW7Dp2FudCBwZXIgbCdvcmlnZW4gZCdlbnRyYWRhIGkgcGFzc2FudCBhIGxlcyBjZWzCt2xlcyBxdWUgbm8gc8OzbiBsYSBkJ29yaWdlbi4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBDb3N0LUJhY2stTGlua19UcmF2ZWwtRGlyZWN0aW9uX3RhZzNAQFwiOiBcIjxzdHJvbmc+RmlucyBhIGwnb3JpZ2VuPC9zdHJvbmc+OiBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIGVsIGNvc3QgaW5pY2lhbCBkZSBsJ29yaWdlbiBzJ2FwbGljYXJhbiBjb21lbsOnYW50IHBlciBjYWRhIGNlbMK3bGEgcXVlIG5vIHNpZ3VpIGxhIGQnb3JpZ2VuIGkgdG9ybmFudCBhIGwnb3JpZ2VuIGQnZW50cmFkYS5cIixcblx0XCJAQENvc3QtQmFjay1MaW5rX1RyYXZlbC1EaXJlY3Rpb25fdGFnNUBAXCI6IFwiRXNwZWNpZmlxdWV1IGxhIHBhcmF1bGEgY2xhdSA8c3Ryb25nPkRlcyBkZSBsJ29yaWdlbjwvc3Ryb25nPiBvIDxzdHJvbmc+RmlucyBhIGwnb3JpZ2VuPC9zdHJvbmc+LCBxdWUgcydhcGxpY2Fyw6AgYSB0b3RzIGVscyBvcsOtZ2VucyBvIGVzcGVjaWZpcXVldSB1biBjYW1wIGFsIDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPiBxdWUgY29udGluZ3VpIGxlcyBwYXJhdWxlcyBjbGF1IHBlciBpZGVudGlmaWNhciBsYSBkaXJlY2Npw7MgZGUgdmlhdGdlIGRlIGNhZGEgb3JpZ2VuLiBBcXVlc3QgY2FtcCBoYSBkZSBjb250ZW5pciBsYSBjYWRlbmEgJHtGUk9NX1NPVVJDRX0gbyAke1RPX1NPVVJDRX0uXCIsXG5cdFwiQEBDb3N0LURpc3RhbmNlX0FjY3VtdWxhdGl2ZS1Db3N0LVJlc2lzdGFuY2UtUmF0ZV90YWcwQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBzaW11bGEgbCdpbmNyZW1lbnQgZGUgbCdlc2ZvcsOnIHBlciBzdXBlcmFyIGVscyBjb3N0b3MgYSBtZXN1cmEgcXVlIGVsIGNvc3QgYWN1bXVsYXRpdSBhdWdtZW50YS4gUyd1dGlsaXR6YSBwZXIgcmVwcmVzZW50YXIgbGEgZmF0aWdhIGRlbCB2aWF0Z2VyLiBFbCBjb3N0IGFjdW11bGF0aXUgY3JlaXhlbnQgcGVyIGFycmliYXIgYSB1bmEgY2VswrdsYSBlcyBtdWx0aXBsaWNhIHBlciBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIHMnYWZlZ2VpeCBhbCBjb3N0IHBlciBwYXNzYXIgYSBsYSBjZWzCt2xhIHNlZ8O8ZW50LlwiLFxuXHRcIkBAQ29zdC1EaXN0YW5jZV9BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMUBAXCI6IFwiw4lzIHVuYSB2ZXJzacOzIG1vZGlmaWNhZGEgZCd1bmEgZsOzcm11bGEgZGUgdGlwdXMgZCdpbnRlcsOocyBjb21wb3N0IHF1ZSBzJ3V0aWxpdHphIHBlciBjYWxjdWxhciBlbCBjb3N0IGFwYXJlbnQgZGUgcGFzc2FyIHBlciB1bmEgY2VswrdsYS4gQSBtZXN1cmEgcXVlIGVsIHZhbG9yIGRlIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGF1Z21lbnRhLCB0YW1iw6kgaG8gZmEgZWwgY29zdCBkZSBsZXMgY2VswrdsZXMgcXVlIGVzIHZpc2l0ZW4gcG9zdGVyaW9ybWVudC4gQ29tIG3DqXMgYWx0YSDDqXMgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEsIG3DqXMgYWx0IMOpcyBlbCBjb3N0IHBlciBhcnJpYmFyIGEgbGEgY2VswrdsYSBzZWfDvGVudCwgcXVlIGVzIGNhbGN1bGEgcGVyIGEgY2FkYSBtb3ZpbWVudCBwb3N0ZXJpb3IuIEF0w6hzIHF1ZSBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSDDqXMgc2ltaWxhciBhIHVuYSB0YXhhIGNvbXBvc3RhIGkgcXVlIGVscyB2YWxvcnMgZGVsIGNvc3QgYWN1bXVsYXRpdSBhY29zdHVtZW4gYSBzZXIgbW9sdCBhbHRzLCBlcyByZWNvbWFuZW4gdGF4ZXMgZGUgcmVzaXN0w6huY2lhIGJhaXhlcywgY29tIGFyYSBkZSAwLDAwNSBvIG1lbnlzLCBzZWdvbnMgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1LlwiLFxuXHRcIkBAQ29zdC1EaXN0YW5jZV9BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMkBAXCI6IFwiRWwgdmFsb3IgaGEgZGUgc2VyIG3DqXMgZ3JhbiBxdWUgemVyby4gTGEgY2FwYWNpdGF0IHBlciBkZWZlY3RlIMOpcyBhbCBsbGluZGFyIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBDb3N0LURpc3RhbmNlX0FjY3VtdWxhdGl2ZS1Db3N0LVJlc2lzdGFuY2UtUmF0ZV90YWczQEBcIjogXCJQZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgZXMgcG9kZW4gdXRpbGl0emFyIHVuIHZhbG9yIG51bcOocmljIChkb2JsZSkgbyB1biBjYW1wIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBDb3N0LURpc3RhbmNlX0NhcGFjaXR5X3RhZzBAQFwiOiBcIkRlZmluZWl4IGxhIGNhcGFjaXRhdCBkZSBjb3N0IGRlbCB2aWF0Z2VyIHBlciBhIHVuIG9yaWdlbi4gRWxzIGPDoGxjdWxzIGRlIGNvc3QgY29udGludWVuIHBlciBhIGNhZGEgb3JpZ2VuIGZpbnMgYSBhc3NvbGlyIGxhIGNhcGFjaXRhdCBlc3BlY2lmaWNhZGEuXCIsXG5cdFwiQEBDb3N0LURpc3RhbmNlX0NhcGFjaXR5X3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciBtw6lzIGdyYW4gcXVlIHplcm8uIExhIGNhcGFjaXRhdCBwZXIgZGVmZWN0ZSDDqXMgYWwgbGxpbmRhciBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAQ29zdC1EaXN0YW5jZV9DYXBhY2l0eV90YWcyQEBcIjogXCJQZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgZXMgcG9kZW4gdXRpbGl0emFyIHVuIHZhbG9yIG51bcOocmljIChkb2JsZSkgbyB1biBjYW1wIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBDb3N0LURpc3RhbmNlX0Nvc3QtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIG5lY2Vzc2FyaSBxdWUgZGVmaW5laXggZWwgY29zdCBvIGxhIGltcGVkw6BuY2lhIGRlbCBtb3ZpbWVudCBwbGFuaW3DqHRyaWMgYSB0cmF2w6lzIGRlIGNhZGEgY2VswrdsYS4gRWwgdmFsb3IgZGUgY2FkYSB1YmljYWNpw7MgZGUgY2VswrdsYSByZXByZXNlbnRhIGxhIGRpc3TDoG5jaWEgZGUgY29zdCBwZXIgdW5pdGF0IHBlciBtb3VyZSdzIGEgdHJhdsOpcyBkZSBsYSBjZWzCt2xhLiBDYWRhIHZhbG9yIGQndWJpY2FjacOzIGRlIGNlbMK3bGEgZXMgbXVsdGlwbGljYSBwZXIgbGEgcmVzb2x1Y2nDsyBkZSBsYSBjZWzCt2xhIGkgdGFtYsOpIGVzIGNvbXBlbnNhIGVsIG1vdmltZW50IGRpYWdvbmFsIHBlciBvYnRlbmlyIGVsIGNvc3QgdG90YWwgZGUgcGFzc2FyIGEgdHJhdsOpcyBkZSBsYSBjZWzCt2xhLlwiLFxuXHRcIkBAQ29zdC1EaXN0YW5jZV9Db3N0LVJhc3Rlcl90YWcxQEBcIjogXCJFbHMgdmFsb3JzIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZGUgY29zdG9zPC9zdHJvbmc+IHBvZGVuIHNlciBlbnRlcnMgbyBwdW50cyBmbG90YW50cywgcGVyw7Igbm8gcG9kZW4gc2VyIG5lZ2F0aXVzIG5pIHplcm8uXCIsXG5cdFwiQEBDb3N0LURpc3RhbmNlX01heGltdW0tRGlzdGFuY2VfdGFnMEBAXCI6IFwiTGxpbmRhciBxdWUgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1IG5vIHBvZGVuIHN1cGVyYXIuIFNpIHVuYSBkaXN0w6BuY2lhIGRlIGNvc3QgYWN1bXVsYXRpdSBzdXBlcmEgYXF1ZXN0IHZhbG9yLCBlbCB2YWxvciBkZSBzb3J0aWRhIGRlIGxhIHViaWNhY2nDsyBkZSBsYSBjZWzCt2xhIHNlcsOgIE5vRGF0YS4gTGEgZGlzdMOgbmNpYSBtw6B4aW1hIGRlZmluZWl4IGwnZXh0ZW5zacOzIGRlIGxhIHF1YWwgZXMgY2FsY3VsZW4gbGVzIGRpc3TDoG5jaWVzIGRlIGNvc3QgYWN1bXVsYXRpdS4gTGEgZGlzdMOgbmNpYSBwZXIgZGVmZWN0ZSDDqXMgbGEgZGUgbCdleHRlbnNpw7MgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQENvc3QtRGlzdGFuY2VfTXVsdGlwbGllci10by1BcHBseS10by1Db3N0c190YWcwQEBcIjogXCJNdWx0aXBsaWNhZG9yIHF1ZSBzJ2FwbGljYXLDoCBhbHMgdmFsb3JzIGRlbHMgY29zdG9zLlwiLFxuXHRcIkBAQ29zdC1EaXN0YW5jZV9NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIHBlcm1ldCBjb250cm9sYXIgZWwgbW9kZSBkZSB2aWF0Z2UgbyBsYSBtYWduaXR1ZCBlbiB1biBvcmlnZW4uIENvbSBtYWpvciBzaWd1aSBlbCBtdWx0aXBsaWNhZG9yLCBtw6lzIGFsdCBzZXLDoCBlbCBjb3N0IGRlbCBtb3ZpbWVudCBhIHRyYXbDqXMgZGUgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBAQ29zdC1EaXN0YW5jZV9NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzJAQFwiOiBcIkVscyB2YWxvcnMgaGFuIGRlIHNlciBtw6lzIGdyYW5zIHF1ZSB6ZXJvLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMS5cIixcblx0XCJAQENvc3QtRGlzdGFuY2VfTXVsdGlwbGllci10by1BcHBseS10by1Db3N0c190YWczQEBcIjogXCJQZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgZXMgcG9kZW4gdXRpbGl0emFyIHVuIHZhbG9yIG51bcOocmljIChkb2JsZSkgbyB1biBjYW1wIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBDb3N0LURpc3RhbmNlX1NvdXJjZS1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgbmVjZXNzYXJpIGRlIGxlcyB1YmljYWNpb25zIGQnb3JpZ2VuLlwiLFxuXHRcIkBAQ29zdC1EaXN0YW5jZV9Tb3VyY2UtUmFzdGVyX3RhZzFAQFwiOiBcIkFxdWVzdCDDqXMgdW4gcsOgc3RlciBxdWUgaWRlbnRpZmljYSBsZXMgY2VswrdsZXMgbyBsZXMgdWJpY2FjaW9ucyBkZXMgZGUgbGVzIHF1YWxzIHMnaGEgY2FsY3VsYXQgbGEgZGlzdMOgbmNpYSBkZSBtZW5vciBjb3N0IGFjdW11bGF0IGRlIGxhIHViaWNhY2nDsyBkZSBjYWRhIGNlbMK3bGEgZGUgc29ydGlkYS5cIixcblx0XCJAQENvc3QtRGlzdGFuY2VfU3RhcnQtQ29zdF90YWcwQEBcIjogXCJDb3N0IGluaWNpYWwgb24gY29tZW7Dp2FyYW4gZWxzIGPDoGxjdWxzIGRlIGNvc3Rvcy4gQXF1ZXN0IHBhcsOgbWV0cmUgcGVybWV0IGwnZXNwZWNpZmljYWNpw7MgZGVsIGNvc3QgZml4IGFzc29jaWF0IGEgdW4gb3JpZ2VuLiBFbiBsbG9jIGRlIGNvbWVuw6dhciBhbWIgdW4gY29zdCBkZSAwLCBsJ2FsZ29yaXRtZSBkZSBjb3N0IGhvIGZhcsOgIGFtYiBlbCB2YWxvciBlc3BlY2lmaWNhdC5cIixcblx0XCJAQENvc3QtRGlzdGFuY2VfU3RhcnQtQ29zdF90YWcxQEBcIjogXCJFbCB2YWxvciBoYSBkZSBzZXIgemVybyBvIHN1cGVyaW9yLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMC5cIixcblx0XCJAQENvc3QtRGlzdGFuY2VfVHJhdmVsLURpcmVjdGlvbl90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSBkaXJlY2Npw7MgZGVsIHZpYXRnZXIgcXVhbiBzJ2FwbGlxdWVuIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGkgZWwgY29zdCBpbmljaWFsIGRlIGwnb3JpZ2VuLlwiLFxuXHRcIkBAQ29zdC1EaXN0YW5jZV9UcmF2ZWwtRGlyZWN0aW9uX3RhZzFAQFwiOiBcIjxzdHJvbmc+RGVzIGRlIGwnb3JpZ2VuPC9zdHJvbmc+OiBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIGVsIGNvc3QgaW5pY2lhbCBkZSBsJ29yaWdlbiBzJ2FwbGljYXJhbiBjb21lbsOnYW50IHBlciBsJ29yaWdlbiBkJ2VudHJhZGEgaSBwYXNzYW50IGEgbGVzIGNlbMK3bGVzIHF1ZSBubyBzw7NuIGxhIGQnb3JpZ2VuLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQENvc3QtRGlzdGFuY2VfVHJhdmVsLURpcmVjdGlvbl90YWczQEBcIjogXCI8c3Ryb25nPkZpbnMgYSBsJ29yaWdlbjwvc3Ryb25nPjogbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4gcydhcGxpY2FyYW4gY29tZW7Dp2FudCBwZXIgY2FkYSBjZWzCt2xhIHF1ZSBubyBzaWd1aSBsYSBkJ29yaWdlbiBpIHRvcm5hbnQgYSBsJ29yaWdlbiBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDb3N0LURpc3RhbmNlX1RyYXZlbC1EaXJlY3Rpb25fdGFnNUBAXCI6IFwiRXNwZWNpZmlxdWV1IGxhIHBhcmF1bGEgY2xhdSA8c3Ryb25nPkRlcyBkZSBsJ29yaWdlbjwvc3Ryb25nPiBvIDxzdHJvbmc+RmlucyBhIGwnb3JpZ2VuPC9zdHJvbmc+LCBxdWUgcydhcGxpY2Fyw6AgYSB0b3RzIGVscyBvcsOtZ2VucyBvIGVzcGVjaWZpcXVldSB1biBjYW1wIGFsIDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPiBxdWUgY29udGluZ3VpIGxlcyBwYXJhdWxlcyBjbGF1IHBlciBpZGVudGlmaWNhciBsYSBkaXJlY2Npw7MgZGUgdmlhdGdlIGRlIGNhZGEgb3JpZ2VuLiBBcXVlc3QgY2FtcCBoYSBkZSBjb250ZW5pciBsYSBjYWRlbmEgJHtGUk9NX1NPVVJDRX0gbyAke1RPX1NPVVJDRX0uXCIsXG5cdFwiQEBDdXJ2YXR1cmVfQ3VydmF0dXJlLVR5cGVfdGFnMEBAXCI6IFwiRWwgdGlwdXMgZGUgY3VydmF0dXJhIGFjY2VudHVhIGVscyBkaWZlcmVudHMgYXNwZWN0ZXMgZGVsIHBlbmRlbnQuIEhpIGhhIHRyZXMgb3BjaW9ucyBkZSBjdXJ2YXR1cmE6XCIsXG5cdFwiQEBDdXJ2YXR1cmVfQ3VydmF0dXJlLVR5cGVfdGFnMUBAXCI6IFwiUGxhOiDDqXMgcGVycGVuZGljdWxhciBhIGxhIGRpcmVjY2nDsyBkZWwgcGVuZGVudCBtw6B4aW0uIEluZmx1ZWl4IGVuIGxhIGNvbnZlcmfDqG5jaWEgaSBsYSBkaXZlcmfDqG5jaWEgZGVsIGZsdXggZW4gdW5hIHN1cGVyZsOtY2llLlwiLFxuXHRcIkBAQ3VydmF0dXJlX0N1cnZhdHVyZS1UeXBlX3RhZzJAQFwiOiBcIlBlcmZpbDogw6lzIHBhcmFswrdsZWwgYWwgcGVuZGVudCBpIGluZGljYSBsYSBkaXJlY2Npw7MgZGVsIHBlbmRlbnQgbcOgeGltLiBBZmVjdGEgbCdhY2NlbGVyYWNpw7MgaSBkZXNhY2NlbGVyYWNpw7MgZGVsIGZsdXggZW4gdG90YSBsYSBzdXBlcmbDrWNpZS5cIixcblx0XCJAQEN1cnZhdHVyZV9DdXJ2YXR1cmUtVHlwZV90YWczQEBcIjogXCJFc3TDoG5kYXJkOiBjb21iaW5hIGxlcyBjdXJ2YXR1cmVzIDxzdHJvbmc+UGVyZmlsPC9zdHJvbmc+IGkgPHN0cm9uZz5QbGE8L3N0cm9uZz4uXCIsXG5cdFwiQEBDdXJ2YXR1cmVfREVNX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZGUgbW9kZWwgZCdlbGV2YWNpw7MgZGlnaXRhbCAoREVNKS5cIixcblx0XCJAQEN1cnZhdHVyZV9aLUZhY3Rvcl90YWcwQEBcIjogXCJFbCBmYWN0b3IgeiBhanVzdGEgbGVzIHVuaXRhdHMgZGUgbWVzdXJhIGRlIGxlcyB1bml0YXRzIGRlIHogcXVhbiBzw7NuIGRpZmVyZW50cyBkZSBsZXMgdW5pdGF0cyBkJ3gseSBkZSBsYSBzdXBlcmbDrWNpZSBkJ2VudHJhZGEuIFNpIGxlcyB1bml0YXRzIGQneCx5IGkgbGVzIHVuaXRhdHMgZGUgeiBzw7NuIGxlcyBtYXRlaXhlcyB1bml0YXRzIGRlIG1lc3VyYSwgZWwgZmFjdG9yIHogaGEgZCdlc3RhciBkZWZpbml0IGVuIDEuIEVscyB2YWxvcnMgZGUgeiBkZSBsYSBzdXBlcmbDrWNpZSBkJ2VudHJhZGEgZXMgbXVsdGlwbGlxdWVuIHBlbCBmYWN0b3IgeiBlbiBjYWxjdWxhciBsYSBzdXBlcmbDrWNpZSBkZSBzb3J0aWRhIGZpbmFsLiBQZXIgZXhlbXBsZSwgc2kgbGVzIHVuaXRhdHMgZGUgeiBzw7NuIHBldXMgaSBsZXMgdW5pdGF0cyBkJ3gseSBzw7NuIG1ldHJlcywgaGV1IGQndXRpbGl0emFyIHVuIGZhY3RvciB6IGRlIDAsMzA0OCBwZXIgY29udmVydGlyIGxlcyB1bml0YXRzIGRlIHogZGUgcGV1cyBhIG1ldHJlcywgamEgcXVlIDEgcGV1ID0gMCwzMDQ4IG1ldHJlcy5cIixcblx0XCJAQERpdmlkZV9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBEaXZpZGVfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQERpdmlkZV9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBARGl2aWRlX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARGl2aWRlX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBEaXZpZGVfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBARGl2aWRlX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQERpdmlkZV9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQERpdmlkZV9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQERpdmlkZV9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBEaXZpZGVfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBEaXZpZGVfUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZWwgdmFsb3IgZGUgbGEgcXVhbCBlcyBkaXZpZGlyw6AgcGVyIGxhIHNlZ29uYSBlbnRyYWRhLlwiLFxuXHRcIkBARGl2aWRlX1Jhc3Rlcl90YWcxQEBcIjogXCJFcyBwb3QgdXRpbGl0emFyIHVuIG5vbWJyZSBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIHMnZXNwZWNpZmlxdWkgdW4gcsOgc3RlciBwZXIgYSAke1Jhc3RlcjJ9LlwiLFxuXHRcIkBARGl2aWRlX1Jhc3RlcjJfdGFnMEBAXCI6IFwiRW50cmFkYSBwZWwgdmFsb3IgZGUgbGEgcXVhbCBlcyBkaXZpZGlyw6AgbGEgcHJpbWVyYSBlbnRyYWRhLlwiLFxuXHRcIkBARGl2aWRlX1Jhc3RlcjJfdGFnMUBAXCI6IFwiRXMgcG90IHV0aWxpdHphciB1biBub21icmUgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBzJ2VzcGVjaWZpcXVpIHVuIHLDoHN0ZXIgcGVyIGEgJHtSYXN0ZXJ9LlwiLFxuXHRcIkBARWxldmF0aW9uLVZvaWQtRmlsbF9ERU1fdGFnMEBAXCI6IFwiREVNIGQnZW50cmFkYS5cIixcblx0XCJAQEVsZXZhdGlvbi1Wb2lkLUZpbGxfTWF4LVZvaWQtV2lkdGhfdGFnMEBAXCI6IFwiRWwgdmFsb3IgbcOgeGltIGQnYW1wbGFkYSBkZSBidWl0IHMndXRpbGl0emEgcGVyIGVzcGVjaWZpY2FyIGxhIG1pZGEgbcOpcyBncmFuIGQndW4gYnVpdCBxdWUgdm9sZXUgZW1wbGVuYXIuIFNpIGwnYW1wbGFkYSBvIGwnYWx0dXJhIGRlbCBxdWFkcmUgZGVsaW1pdGFkb3IgcXVlIGVudm9sdGEgZWwgYnVpdCDDqXMgbcOpcyBncmFuIHF1ZSBlbCB2YWxvciBtw6B4aW0gZCdhbXBsYWRhIGRlbCBidWl0LCBlbCBidWl0IG5vIHMnZW1wbGVuYXLDoC4gTGVzIHVuaXRhdHMgZCdhcXVlc3QgcGFyw6BtZXRyZSBzw7NuIGxlcyBtYXRlaXhlcyBxdWUgcyd1dGlsaXR6ZW4gYWwgc2lzdGVtYSBkZSByZWZlcsOobmNpYSBlc3BhY2lhbCBkZSBsZXMgdm9zdHJlcyBkYWRlcy5cIixcblx0XCJAQEVsZXZhdGlvbi1Wb2lkLUZpbGxfTWF4LVZvaWQtV2lkdGhfdGFnMUBAXCI6IFwiU2kgYXF1ZXN0IHBhcsOgbWV0cmUgZXN0w6AgZW4gYmxhbmMgbyB0w6kgdW4gdmFsb3IgZGUgJHswfSwgbm8gcyd1dGlsaXR6YXLDoCBjYXAgYW1wbGFkYSBtw6B4aW1hIGkgcydlbXBsZW5hcmFuIHRvdHMgZWxzIGJ1aXRzLiBVbiB2YWxvciBkZSAkey0xfSBzaWduaWZpY2EgcXVlIG5vIHMnZW1wbGVuYXLDoCBjYXAgYnVpdC5cIixcblx0XCJAQEVsZXZhdGlvbi1Wb2lkLUZpbGxfU2hvcnQtUmFuZ2UtSURXLVJhZGl1c190YWcwQEBcIjogXCJSYWRpIGRlIGNlcmNhIG3DoHhpbSBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgZW1wbGVuYXIgYnVpdHMuIFVuIGJ1aXQgcXVlIGVzIHRyb2JpIG3DqXMgbGx1bnkgZGUgcXVhbHNldm9sIHDDrXhlbCB2w6BsaWQgcXVlIGFxdWVzdCB2YWxvciBkZSBsbGluZGFyIGNvbnRpbnVhcsOgIGVzc2VudCB1biBidWl0LiBMZXMgdW5pdGF0cyBkJ2FxdWVzdCBwYXLDoG1ldHJlIHPDs24gbGVzIG1hdGVpeGVzIHF1ZSBzJ3V0aWxpdHplbiBhbCBzaXN0ZW1hIGRlIHJlZmVyw6huY2lhIGVzcGFjaWFsIGRlIGxlcyB2b3N0cmVzIGRhZGVzLlwiLFxuXHRcIkBARWxldmF0aW9uLVZvaWQtRmlsbF9TaG9ydC1SYW5nZS1JRFctUmFkaXVzX3RhZzFAQFwiOiBcIlNpIGVsIHZhbG9yIGQnYXF1ZXN0IHBhcsOgbWV0cmUgZXN0w6AgZW4gYmxhbmMsIMOpcyAkezB9IG8gw6lzICR7LTF9LCBhcXVlc3QgcGFyw6BtZXRyZSBubyBzJ3V0aWxpdHphcsOgLlwiLFxuXHRcIkBARXF1YWwtdG9fQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBARXF1YWwtdG9fQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEVxdWFsLXRvX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBFcXVhbC10b19DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEVxdWFsLXRvX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBFcXVhbC10b19DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBFcXVhbC10b19FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBFcXVhbC10b19FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEVxdWFsLXRvX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARXF1YWwtdG9fRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBARXF1YWwtdG9fRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBFcXVhbC10b19SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgY29tcGFyYXIgbGEgaWd1YWx0YXQgZGUgbGEgc2Vnb25hIGVudHJhZGEuXCIsXG5cdFwiQEBFcXVhbC10b19SYXN0ZXJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBFcXVhbC10b19SYXN0ZXIyX3RhZzBAQFwiOiBcIkVudHJhZGEgcXVlIHMndXRpbGl0emFyw6AgcGVyIGNvbXBhcmFyIGxhIGlndWFsdGF0IGRlIGxhIHByaW1lcmEgZW50cmFkYS5cIixcblx0XCJAQEVxdWFsLXRvX1Jhc3RlcjJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBFdWNsaWRlYW4tQWxsb2NhdGlvbl9DZWxsc2l6ZV90YWcwQEBcIjogXCJNaWRhIGRlIGxhIGNlbMK3bGEgb24gZXMgY3JlYXLDoCBlbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBFdWNsaWRlYW4tQWxsb2NhdGlvbl9DZWxsc2l6ZV90YWcxQEBcIjogXCJTaSBsYSBtaWRhIGRlIGxhIGNlbMK3bGEgcydoYSBkZWZpbml0IGV4cGzDrWNpdGFtZW50IGEgPHN0cm9uZz5FbnRvcm5zIGQnYW7DoGxpc2k8L3N0cm9uZz4sIGFxdWVzdGEgc2Vyw6AgbGEgbWlkYSBkZSBjZWzCt2xhIHBlciBkZWZlY3RlLiBTaSBubyBzJ2hhIGRlZmluaXQsIGxhIG1pZGEgZGUgbGEgY2VswrdsYSBkZSBzb3J0aWRhIGNvaW5jaWRpcsOgIGFtYiBsYSBkZWwgPHN0cm9uZz5yw6BzdGVyIGQnb3JpZ2VuPC9zdHJvbmc+LlwiLFxuXHRcIkBARXVjbGlkZWFuLUFsbG9jYXRpb25fRGlzdGFuY2UtTWV0aG9kX3RhZzBAQFwiOiBcIkRldGVybWluYSBzaSBlcyBjYWxjdWxhcsOgIGxhIGRpc3TDoG5jaWEgbWl0amFuw6dhbnQgdW4gbcOodG9kZSBwbGEgKHRlcnJhIHBsYW5hKSBvIGdlb2TDqHNpYyAoZWzCt2xpcHNvaWRlKS5cIixcblx0XCJAQEV1Y2xpZGVhbi1BbGxvY2F0aW9uX0Rpc3RhbmNlLU1ldGhvZF90YWcxQEBcIjogXCJHZW9kw6hzaWM6IGzDrW5pYSBtw6lzIGN1cnRhIGVudHJlIGRvcyBwdW50cyBhIGxhIHN1cGVyZsOtY2llIHRlcnJlc3RyZSBlbiB1biBlc2Zlcm9pZGUgKGVswrdsaXBzb2lkZSkuIFBlciB0YW50LCBpbmRlcGVuZGVudG1lbnQgZGUgbGEgcHJvamVjY2nDsyBkJ2VudHJhZGEgbyBkZSBzb3J0aWRhLCBlbHMgcmVzdWx0YXRzIG5vIGNhbnZpZW4uIFVuYSBsw61uaWEgZ2VvZMOoc2ljYSBlcyBwb3QgdXRpbGl0emFyIHF1YW4gdm9sZXUgZGV0ZXJtaW5hciBsYSBkaXN0w6BuY2lhIG3DqXMgY3VydGEgZW50cmUgZHVlcyBjaXV0YXRzIHBlciBkZWZpbmlyIHVuYSBydXRhIGRlIHZvbC4gVGFtYsOpIGVzIGNvbmVpeCBjb20gYSBsw61uaWEgb3J0b2Ryw7JtaWNhIHNpIGVzIGJhc2EgZW4gdW5hIGVzZmVyYSBlbiBsbG9jIGRlIGJhc2FyLXNlIGVuIHVuIGVswrdsaXBzb2lkZS5cIixcblx0XCJAQEV1Y2xpZGVhbi1BbGxvY2F0aW9uX0Rpc3RhbmNlLU1ldGhvZF90YWcyQEBcIjogXCJQbGE6IGxlcyBtZXN1cmVzIHBsYW5lcyB1dGlsaXR6ZW4gbWF0ZW3DoHRpcXVlcyBjYXJ0ZXNpYW5lcyAyRCBwZXIgY2FsY3VsYXIgbGEgbG9uZ2l0dWQgaSBsJ8OgcmVhLiBMJ29wY2nDsyBub23DqXMgZXN0w6AgZGlzcG9uaWJsZSBxdWFuIGVzIG1lc3VyYSBlbiB1biBzaXN0ZW1hIGRlIGNvb3JkZW5hZGVzIHByb2plY3RhZGVzLCBpIGVsIHBsYSAyRCBkJ2FxdWVzdCBzaXN0ZW1hIGRlIGNvb3JkZW5hZGVzIHMndXRpbGl0emFyw6AgY29tIGEgYmFzZSBwZXIgYSBsZXMgbWVzdXJlcy5cIixcblx0XCJAQEV1Y2xpZGVhbi1BbGxvY2F0aW9uX01heGltdW0tRGlzdGFuY2VfdGFnMEBAXCI6IFwiRGVmaW5laXggZWwgbGxpbmRhciBkZSBkaXN0w6BuY2lhIGVuIHF1w6ggZXMgZGV0ZXJtaW5hcsOgIGwnb3JpZ2VuIG3DqXMgcHJvcGVyLiBTaSBsYSBkaXN0w6BuY2lhIGEgbCdvcmlnZW4gbcOpcyBwcm9wZXIgc3VwZXJhIGFxdWVzdCBsbGluZGFyLCBsYSBzb3J0aWRhIGRlIGxhIGNlbMK3bGEgc2Vyw6AgJHtOb0RhdGF9LlwiLFxuXHRcIkBARXVjbGlkZWFuLUFsbG9jYXRpb25fTWF4aW11bS1EaXN0YW5jZV90YWcxQEBcIjogXCJMYSBkaXN0w6BuY2lhIHBlciBkZWZlY3RlIMOpcyBsYSBkZSBsJ2V4dGVuc2nDsyBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBARXVjbGlkZWFuLUFsbG9jYXRpb25fUmFzdGVyLUJhcnJpZXJzX3RhZzBAQFwiOiBcIlLDoHN0ZXIgcXVlIGRlZmluZWl4IGxlcyBiYXJyZXJlcy5cIixcblx0XCJAQEV1Y2xpZGVhbi1BbGxvY2F0aW9uX1Jhc3Rlci1CYXJyaWVyc190YWcxQEBcIjogXCJFbCBkYXRhc2V0IGhhIGRlIGNvbnRlbmlyICR7Tm9EYXRhfSBhbGzDoCBvbiBubyBoaSBoYSBiYXJyZXJlcy4gTGVzIGJhcnJlcmVzIGVzIHJlcHJlc2VudGVuIGFtYiB2YWxvcnMgdsOgbGlkcywgcXVlIGluY2xvdWVuIGVsIHplcm8uXCIsXG5cdFwiQEBFdWNsaWRlYW4tQWxsb2NhdGlvbl9SYXN0ZXItQmFycmllcnNfdGFnMkBAXCI6IFwiTGVzIGJhcnJlcmVzIGVzIHBvZGVuIGRlZmluaXIgYW1iIHVuIGVudGVyIG8gdW4gcsOgc3RlciBkZSBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBFdWNsaWRlYW4tQWxsb2NhdGlvbl9Tb3VyY2UtRmllbGRfdGFnMEBAXCI6IFwiQ2FtcCB1dGlsaXR6YXQgcGVyIGFzc2lnbmFyIHZhbG9ycyBhIGxlcyB1YmljYWNpb25zIGQnb3JpZ2VuLiBIYSBkZSBzZXIgZGUgdGlwdXMgZW50ZXIuIFNpIHMnaGEgZGVmaW5pdCBlbCA8c3Ryb25nPnLDoHN0ZXIgZGUgdmFsb3I8L3N0cm9uZz4sIGVscyB2YWxvcnMgZCdhcXVlc3RhIGVudHJhZGEgdGluZHJhbiBwcmlvcml0YXQgc29icmUgcXVhbHNldm9sIGNvbmZpZ3VyYWNpw7MgZGVsIDxzdHJvbmc+Y2FtcCBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQEV1Y2xpZGVhbi1BbGxvY2F0aW9uX1NvdXJjZS1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgbmVjZXNzYXJpIHF1ZSBpZGVudGlmaWNhIGxlcyB1YmljYWNpb25zIGQnb3JpZ2VuLiBMJ29yaWdlbiBtw6lzIHByb3BlciBlcyBkZXRlcm1pbmFyw6AsIGVuIGZ1bmNpw7MgZGUgbGEgZGlzdMOgbmNpYSBldWNsaWRpYW5hLCBwZXIgYSBjYWRhIGNlbMK3bGEgZGUgbGEgc29ydGlkYVwiLFxuXHRcIkBARXVjbGlkZWFuLUFsbG9jYXRpb25fU291cmNlLVJhc3Rlcl90YWcxQEBcIjogXCJMJ2VudHJhZGEgcG90IHNlciBkZSB0aXB1cyBlbnRlciBvIHB1bnQgZmxvdGFudC5cIixcblx0XCJAQEV1Y2xpZGVhbi1BbGxvY2F0aW9uX1ZhbHVlLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGVudGVyIGQnZW50cmFkYSBxdWUgaWRlbnRpZmljYSBlbHMgdmFsb3JzIGRlIHpvbmEgcXVlIHMndXRpbGl0emFyYW4gcGVyIGEgY2FkYSB1YmljYWNpw7MgZCdvcmlnZW4gZCdlbnRyYWRhLiBBIGNhZGEgY2VswrdsYSBkJ3ViaWNhY2nDsyBkJ29yaWdlbiwgZWwgdmFsb3IgZGVmaW5pdCBwZWwgPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+IHMnYXNzaWduYXLDoCBhIHRvdGVzIGxlcyBjZWzCt2xlcyBhc3NpZ25hZGVzIGEgbGEgdWJpY2FjacOzIGQnb3JpZ2VuIHBlciBhbCBjw6BsY3VsLiBFbCA8c3Ryb25nPnLDoHN0ZXIgZGUgdmFsb3I8L3N0cm9uZz4gdGluZHLDoCBwcmlvcml0YXQgc29icmUgcXVhbHNldm9sIGNvbmZpZ3VyYWNpw7MgcGVyIGFsIDxzdHJvbmc+Y2FtcCBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQEV1Y2xpZGVhbi1EaXJlY3Rpb25fQ2VsbHNpemVfdGFnMEBAXCI6IFwiTWlkYSBkZSBsYSBjZWzCt2xhIG9uIGVzIGNyZWFyw6AgZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBARXVjbGlkZWFuLURpcmVjdGlvbl9DZWxsc2l6ZV90YWcxQEBcIjogXCJTaSBsYSBtaWRhIGRlIGxhIGNlbMK3bGEgcydoYSBkZWZpbml0IGV4cGzDrWNpdGFtZW50IGEgPHN0cm9uZz5FbnRvcm5zIGQnYW7DoGxpc2k8L3N0cm9uZz4sIGFxdWVzdGEgc2Vyw6AgbGEgbWlkYSBkZSBjZWzCt2xhIHBlciBkZWZlY3RlLiBTaSBubyBzJ2hhIGRlZmluaXQsIGxhIG1pZGEgZGUgbGEgY2VswrdsYSBkZSBzb3J0aWRhIGNvaW5jaWRpcsOgIGFtYiBsYSBkZWwgPHN0cm9uZz5yw6BzdGVyIGQnb3JpZ2VuPC9zdHJvbmc+LlwiLFxuXHRcIkBARXVjbGlkZWFuLURpcmVjdGlvbl9EaXN0YW5jZS1NZXRob2RfdGFnMEBAXCI6IFwiRGV0ZXJtaW5hIHNpIGVzIGNhbGN1bGFyw6AgbGEgZGlzdMOgbmNpYSBtaXRqYW7Dp2FudCB1biBtw6h0b2RlIHBsYSAodGVycmEgcGxhbmEpIG8gZ2VvZMOoc2ljIChlbMK3bGlwc29pZGUpLlwiLFxuXHRcIkBARXVjbGlkZWFuLURpcmVjdGlvbl9EaXN0YW5jZS1NZXRob2RfdGFnMUBAXCI6IFwiR2VvZMOoc2ljOiBsw61uaWEgbcOpcyBjdXJ0YSBlbnRyZSBkb3MgcHVudHMgYSBsYSBzdXBlcmbDrWNpZSB0ZXJyZXN0cmUgZW4gdW4gZXNmZXJvaWRlIChlbMK3bGlwc29pZGUpLiBQZXIgdGFudCwgaW5kZXBlbmRlbnRtZW50IGRlIGxhIHByb2plY2Npw7MgZCdlbnRyYWRhIG8gZGUgc29ydGlkYSwgZWxzIHJlc3VsdGF0cyBubyBjYW52aWVuLiBVbmEgbMOtbmlhIGdlb2TDqHNpY2EgZXMgcG90IHV0aWxpdHphciBxdWFuIHZvbGV1IGRldGVybWluYXIgbGEgZGlzdMOgbmNpYSBtw6lzIGN1cnRhIGVudHJlIGR1ZXMgY2l1dGF0cyBwZXIgZGVmaW5pciB1bmEgcnV0YSBkZSB2b2wuIFRhbWLDqSBlcyBjb25laXggY29tIGEgbMOtbmlhIG9ydG9kcsOybWljYSBzaSBlcyBiYXNhIGVuIHVuYSBlc2ZlcmEgZW4gbGxvYyBkZSBiYXNhci1zZSBlbiB1biBlbMK3bGlwc29pZGUuXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlyZWN0aW9uX0Rpc3RhbmNlLU1ldGhvZF90YWcyQEBcIjogXCJQbGE6IGxlcyBtZXN1cmVzIHBsYW5lcyB1dGlsaXR6ZW4gbWF0ZW3DoHRpcXVlcyBjYXJ0ZXNpYW5lcyAyRCBwZXIgY2FsY3VsYXIgbGEgbG9uZ2l0dWQgaSBsJ8OgcmVhLiBMJ29wY2nDsyBub23DqXMgZXN0w6AgZGlzcG9uaWJsZSBxdWFuIGVzIG1lc3VyYSBlbiB1biBzaXN0ZW1hIGRlIGNvb3JkZW5hZGVzIHByb2plY3RhZGVzLCBpIGVsIHBsYSAyRCBkJ2FxdWVzdCBzaXN0ZW1hIGRlIGNvb3JkZW5hZGVzIHMndXRpbGl0emFyw6AgY29tIGEgYmFzZSBwZXIgYSBsZXMgbWVzdXJlcy5cIixcblx0XCJAQEV1Y2xpZGVhbi1EaXJlY3Rpb25fTWF4aW11bS1EaXN0YW5jZV90YWcwQEBcIjogXCJEZWZpbmVpeCBlbCBsbGluZGFyIGRlIGRpc3TDoG5jaWEgZW4gcXXDqCBlcyBjYWxjdWxhcsOgIGxhIGRpcmVjY2nDsyBhIGwnb3JpZ2VuIG3DqXMgcHJvcGVyLiBTaSBsYSBkaXN0w6BuY2lhIGEgbCdvcmlnZW4gbcOpcyBwcm9wZXIgc3VwZXJhIGFxdWVzdCBsbGluZGFyLCBsYSBzb3J0aWRhIGRlIGxhIGNlbMK3bGEgc2Vyw6AgJHtOb0RhdGF9LlwiLFxuXHRcIkBARXVjbGlkZWFuLURpcmVjdGlvbl9NYXhpbXVtLURpc3RhbmNlX3RhZzFAQFwiOiBcIkxhIGRpc3TDoG5jaWEgcGVyIGRlZmVjdGUgw6lzIGxhIGRlIGwnZXh0ZW5zacOzIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlyZWN0aW9uX1Jhc3Rlci1CYXJyaWVyc190YWcwQEBcIjogXCJSw6BzdGVyIHF1ZSBkZWZpbmVpeCBsZXMgYmFycmVyZXMuXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlyZWN0aW9uX1Jhc3Rlci1CYXJyaWVyc190YWcxQEBcIjogXCJFbCBkYXRhc2V0IGhhIGRlIGNvbnRlbmlyIE5vRGF0YSBhbGzDoCBvbiBubyBoaSBoYSBiYXJyZXJlcy4gTGVzIGJhcnJlcmVzIGVzIHJlcHJlc2VudGVuIGFtYiB2YWxvcnMgdsOgbGlkcywgcXVlIGluY2xvdWVuIGVsIHplcm8uXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlyZWN0aW9uX1Jhc3Rlci1CYXJyaWVyc190YWcyQEBcIjogXCJMZXMgYmFycmVyZXMgZXMgcG9kZW4gZGVmaW5pciBhbWIgdW4gZW50ZXIgbyB1biByw6BzdGVyIGRlIHB1bnQgZmxvdGFudC5cIixcblx0XCJAQEV1Y2xpZGVhbi1EaXJlY3Rpb25fU291cmNlLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgcXVlIGlkZW50aWZpY2EgbGVzIGNlbMK3bGVzIG8gbGVzIHViaWNhY2lvbnMgYSBsZXMgcXVhbHMgcydoYSBjYWxjdWxhdCBsYSBkaXJlY2Npw7MgZXVjbGlkaWFuYSBkZSBsYSB1YmljYWNpw7MgZGUgY2FkYSBjZWzCt2xhIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlyZWN0aW9uX1NvdXJjZS1SYXN0ZXJfdGFnMUBAXCI6IFwiTCdlbnRyYWRhIHBvdCBzZXIgZGUgdGlwdXMgZW50ZXIgbyBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlzdGFuY2VfQ2VsbHNpemVfdGFnMEBAXCI6IFwiTWlkYSBkZSBsYSBjZWzCt2xhIG9uIGVzIGNyZWFyw6AgZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBARXVjbGlkZWFuLURpc3RhbmNlX0NlbGxzaXplX3RhZzFAQFwiOiBcIlNpIGxhIG1pZGEgZGUgbGEgY2VswrdsYSBzJ2hhIGRlZmluaXQgZXhwbMOtY2l0YW1lbnQgYSA8c3Ryb25nPkVudG9ybnMgZCdhbsOgbGlzaTwvc3Ryb25nPiwgYXF1ZXN0YSBzZXLDoCBsYSBtaWRhIGRlIGNlbMK3bGEgcGVyIGRlZmVjdGUuIFNpIG5vIHMnaGEgZGVmaW5pdCwgbGEgbWlkYSBkZSBsYSBjZWzCt2xhIGRlIHNvcnRpZGEgY29pbmNpZGlyw6AgYW1iIGxhIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlzdGFuY2VfRGlzdGFuY2UtTWV0aG9kX3RhZzBAQFwiOiBcIkRldGVybWluYSBzaSBlcyBjYWxjdWxhcsOgIGxhIGRpc3TDoG5jaWEgbWl0amFuw6dhbnQgdW4gbcOodG9kZSBwbGEgKHRlcnJhIHBsYW5hKSBvIGdlb2TDqHNpYyAoZWzCt2xpcHNvaWRlKS5cIixcblx0XCJAQEV1Y2xpZGVhbi1EaXN0YW5jZV9EaXN0YW5jZS1NZXRob2RfdGFnMUBAXCI6IFwiR2VvZMOoc2ljOiBsw61uaWEgbcOpcyBjdXJ0YSBlbnRyZSBkb3MgcHVudHMgYSBsYSBzdXBlcmbDrWNpZSB0ZXJyZXN0cmUgZW4gdW4gZXNmZXJvaWRlIChlbMK3bGlwc29pZGUpLiBQZXIgdGFudCwgaW5kZXBlbmRlbnRtZW50IGRlIGxhIHByb2plY2Npw7MgZCdlbnRyYWRhIG8gZGUgc29ydGlkYSwgZWxzIHJlc3VsdGF0cyBubyBjYW52aWVuLiBVbmEgbMOtbmlhIGdlb2TDqHNpY2EgZXMgcG90IHV0aWxpdHphciBxdWFuIHZvbGV1IGRldGVybWluYXIgbGEgZGlzdMOgbmNpYSBtw6lzIGN1cnRhIGVudHJlIGR1ZXMgY2l1dGF0cyBwZXIgZGVmaW5pciB1bmEgcnV0YSBkZSB2b2wuIFRhbWLDqSBlcyBjb25laXggY29tIGEgbMOtbmlhIG9ydG9kcsOybWljYSBzaSBlcyBiYXNhIGVuIHVuYSBlc2ZlcmEgZW4gbGxvYyBkZSBiYXNhci1zZSBlbiB1biBlbMK3bGlwc29pZGUuXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlzdGFuY2VfRGlzdGFuY2UtTWV0aG9kX3RhZzJAQFwiOiBcIlBsYTogbGVzIG1lc3VyZXMgcGxhbmVzIHV0aWxpdHplbiBtYXRlbcOgdGlxdWVzIGNhcnRlc2lhbmVzIDJEIHBlciBjYWxjdWxhciBsYSBsb25naXR1ZCBpIGwnw6ByZWEuIEwnb3BjacOzIG5vbcOpcyBlc3TDoCBkaXNwb25pYmxlIHF1YW4gZXMgbWVzdXJhIGVuIHVuIHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgcHJvamVjdGFkZXMsIGkgZWwgcGxhIDJEIGQnYXF1ZXN0IHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgcyd1dGlsaXR6YXLDoCBjb20gYSBiYXNlIHBlciBhIGxlcyBtZXN1cmVzLlwiLFxuXHRcIkBARXVjbGlkZWFuLURpc3RhbmNlX01heGltdW0tRGlzdGFuY2VfdGFnMEBAXCI6IFwiTGxpbmRhciBxdWUgZWxzIHZhbG9ycyBkZSBsYSBkaXN0w6BuY2lhIGFjdW11bGF0aXZhIG5vIHBvZGVuIHN1cGVyYXIuIFNpIHVuYSBkaXN0w6BuY2lhIGV1Y2xpZGlhbmEgYWN1bXVsYXRpdmEgc3VwZXJhIGFxdWVzdCB2YWxvciwgZWwgdmFsb3IgZGUgc29ydGlkYSBkZSBsYSB1YmljYWNpw7MgZGUgbGEgY2VswrdsYSBzZXLDoCBOb0RhdGEuXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlzdGFuY2VfTWF4aW11bS1EaXN0YW5jZV90YWcxQEBcIjogXCJMYSBkaXN0w6BuY2lhIHBlciBkZWZlY3RlIMOpcyBsYSBkZSBsJ2V4dGVuc2nDsyBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBARXVjbGlkZWFuLURpc3RhbmNlX1Jhc3Rlci1CYXJyaWVyc190YWcwQEBcIjogXCJSw6BzdGVyIHF1ZSBkZWZpbmVpeCBsZXMgYmFycmVyZXMuXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlzdGFuY2VfUmFzdGVyLUJhcnJpZXJzX3RhZzFAQFwiOiBcIkVsIGRhdGFzZXQgaGEgZGUgY29udGVuaXIgJHtOb0RhdGF9IGFsbMOgIG9uIG5vIGhpIGhhIGJhcnJlcmVzLiBMZXMgYmFycmVyZXMgZXMgcmVwcmVzZW50ZW4gYW1iIHZhbG9ycyB2w6BsaWRzLCBxdWUgaW5jbG91ZW4gZWwgemVyby5cIixcblx0XCJAQEV1Y2xpZGVhbi1EaXN0YW5jZV9SYXN0ZXItQmFycmllcnNfdGFnMkBAXCI6IFwiTGVzIGJhcnJlcmVzIGVzIHBvZGVuIGRlZmluaXIgYW1iIHVuIGVudGVyIG8gdW4gcsOgc3RlciBkZSBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBFdWNsaWRlYW4tRGlzdGFuY2VfU291cmNlLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgcXVlIGlkZW50aWZpY2EgbGVzIGNlbMK3bGVzIG8gbGVzIHViaWNhY2lvbnMgYSBsZXMgcXVhbHMgcydoYSBjYWxjdWxhdCBsYSBkaXN0w6BuY2lhIGV1Y2xpZGlhbmEgZGUgbGEgdWJpY2FjacOzIGRlIGNhZGEgY2VswrdsYSBkZSBzb3J0aWRhLlwiLFxuXHRcIkBARXVjbGlkZWFuLURpc3RhbmNlX1NvdXJjZS1SYXN0ZXJfdGFnMUBAXCI6IFwiTCdlbnRyYWRhIHBvdCBzZXIgZGUgdGlwdXMgZW50ZXIgbyBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBFeHBfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBARXhwX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBFeHBfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEV4cF9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEV4cF9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBARXhwX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEV4cF9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBFeHBfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBFeHBfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBFeHBfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBARXhwX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBARXhwX1Jhc3Rlcl90YWcwQEBcIjogXCJWYWxvcnMgZCdlbnRyYWRhIGRlbHMgcXVhbHMgZXMgY2VyY2Fyw6AgbCdleHBvbmVuY2lhbCBkZSBiYXNlIGUuXCIsXG5cdFwiQEBFeHAxMF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBFeHAxMF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBARXhwMTBfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEV4cDEwX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARXhwMTBfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEV4cDEwX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEV4cDEwX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEV4cDEwX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBARXhwMTBfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBFeHAxMF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBFeHAxMF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEV4cDEwX1Jhc3Rlcl90YWcwQEBcIjogXCJWYWxvcnMgZCdlbnRyYWRhIGRlbHMgcXVhbHMgZXMgY2VyY2Fyw6AgbCdleHBvbmVuY2lhbCBkZSBiYXNlIDEwLlwiLFxuXHRcIkBARXhwMl9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBFeHAyX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBFeHAyX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBFeHAyX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARXhwMl9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBARXhwMl9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBFeHAyX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQEV4cDJfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBFeHAyX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARXhwMl9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBFeHAyX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBARXhwMl9SYXN0ZXJfdGFnMEBAXCI6IFwiVmFsb3JzIGQnZW50cmFkYSBkZWxzIHF1YWxzIGVzIGNlcmNhcsOgIGwnZXhwb25lbmNpYWwgZGUgYmFzZSAyLlwiLFxuXHRcIkBARXh0cmFjdC1CYW5kc19CYW5kX3RhZzBAQFwiOiBcIlNlbGVjY2lvbmV1IGxlcyBiYW5kZXMgcXVlIHZvbGV1IGV4dHJldXJlIGQndW5hIGxsaXN0YSBiYXNhZGEgZW4gbCdvcGNpw7MgZGVsIHBhcsOgbWV0cmUgPHN0cm9uZz5Nw6h0b2RlPC9zdHJvbmc+IHF1ZSB1dGlsaXR6ZXUuXCIsXG5cdFwiQEBFeHRyYWN0LUJhbmRzX0NvbWJpbmF0aW9uX3RhZzBAQFwiOiBcIkNvbWJpbmFjacOzIGRlIGJhbmRlcyBvIG9yZHJlIGRlIGxlcyBiYW5kZXMuIExhIGxsaXN0YSBkZSBzZWxlY2Npw7MgZGVww6huIGRlIGwnb3BjacOzIGRlIDxzdHJvbmc+TcOodG9kZTwvc3Ryb25nPiBlc3BlY2lmaWNhZGEuIFBlciBleGVtcGxlLCBzaSBsJ29wY2nDsyBkZSA8c3Ryb25nPk3DqHRvZGU8L3N0cm9uZz4gw6lzIDxzdHJvbmc+Tm9tcyBkZSBiYW5kYTwvc3Ryb25nPiwgcG9kZXUgc2VsZWNjaW9uYXIgdW5hIGNvbWJpbmFjacOzIGRlIGJsYXUsIHZlcmQgaSB2ZXJtZWxsIHBlciBleHRyZXVyZSB1bmEgaW1hdGdlIGRlIGNvbG9yIG5hdHVyYWwuXCIsXG5cdFwiQEBFeHRyYWN0LUJhbmRzX01ldGhvZF90YWcwQEBcIjogXCJTZWxlY2Npb25ldSB1biBkZWxzIG3DqHRvZGVzIHNlZ8O8ZW50cyBwZXIgZXh0cmV1cmUgYmFuZGVzOlwiLFxuXHRcIkBARXh0cmFjdC1CYW5kc19NZXRob2RfdGFnMUBAXCI6IFwiPHN0cm9uZz5JRCBkZSBiYW5kYTwvc3Ryb25nPjogZGVzaWduYWNpw7MgbyBub21icmUgZGUgbGEgYmFuZGEsIHF1ZSDDqXMgdW4gdmFsb3Igw7puaWMgcGVyIGEgY2FkYSBzZW5zb3IuIFBvZGVuIHNlciBpZMOobnRpY3MgYWxzIDxzdHJvbmc+Tm9tcyBkZSBiYW5kYTwvc3Ryb25nPi5cIixcblx0XCJAQEV4dHJhY3QtQmFuZHNfTWV0aG9kX3RhZzRAQFwiOiBcIjxzdHJvbmc+Tm9tcyBkZSBiYW5kYTwvc3Ryb25nPjogdXRpbGl0emEgZWwgbm9tIGRlIGJhbmRhIHF1ZSByZXByZXNlbnRhIGwnaW50ZXJ2YWwgZGUgbG9uZ2l0dWQgZCdvbmEgYSBsJ2VzcGVjdHJlIGVsZWN0cm9tYWduw6h0aWMgKHBlciBleGVtcGxlLCB2ZXJtZWxsLCBpbmZyYXJvaWcgcHJvcGVyIG8gaW5mcmFyb2lnIHTDqHJtaWMpLiBUYW1iw6kgZXMgcG90IGRlc2lnbmFyIGNvbSB1biBJRCBkZSBub21icmUgZGUgYmFuZGVzLlwiLFxuXHRcIkBARXh0cmFjdC1CYW5kc19NZXRob2RfdGFnNkBAXCI6IFwiPHN0cm9uZz5Mb25naXR1ZHMgZCdvbmEgZGUgYmFuZGVzPC9zdHJvbmc+OiBsb25naXR1ZCBkJ29uYSBhIGwnZXNwZWN0cmUgZWxlY3Ryb21hZ27DqHRpYy5cIixcblx0XCJAQEV4dHJhY3QtQmFuZHNfTWlzc2luZy1CYW5kLUFjdGlvbl90YWcwQEBcIjogXCJFc3BlY2lmaXF1ZXUgbCdhY2Npw7MgcXVlIGVzIHByb2R1aXLDoCBxdWFuIHVuYSBiYW5kYSBkZSBsJ2V4dHJhY3RlIGRlIGxhIGxsaXN0YSBkZSBiYW5kZXMgbm8gZXN0aWd1aSBkaXNwb25pYmxlLlwiLFxuXHRcIkBARXh0cmFjdC1CYW5kc19NaXNzaW5nLUJhbmQtQWN0aW9uX3RhZzFAQFwiOiBcIjxzdHJvbmc+TWlsbG9yIGNvaW5jaWTDqG5jaWE8L3N0cm9uZz46IGNlcmNhIGxhIG1pbGxvciBiYW5kYSBkaXNwb25pYmxlIHBlciB1dGlsaXR6YXIgZW4gbGxvYyBkZSBsYSBiYW5kYSBxdWUgZmFsdGEgaSBlcyBiYXNhIGVuIGxhIGxvbmdpdHVkIGQnb25hIHBlciBldml0YXIgZXJyb3JzIGRlIGxhIGZ1bmNpw7NcIixcblx0XCJAQEV4dHJhY3QtQmFuZHNfTWlzc2luZy1CYW5kLUFjdGlvbl90YWczQEBcIjogXCI8c3Ryb25nPkVycm9yPC9zdHJvbmc+OiBzaSBhbCBkYXRhc2V0IGQnZW50cmFkYSBsaSBmYWx0YSBhbGd1bmEgYmFuZGEgZXNwZWNpZmljYWRhIGFsIHBhcsOgbWV0cmUgPHN0cm9uZz5CYW5kYTwvc3Ryb25nPiwgZXMgcHJvZHVpcsOgIHVuIGVycm9yIGRlIGxhIGZ1bmNpw7MuXCIsXG5cdFwiQEBFeHRyYWN0LUJhbmRzX1Jhc3Rlcl90YWcwQEBcIjogXCJQcm9kdWN0ZSBkZSByw6BzdGVyIGRlbCBxdWFsIHMnZXh0cmF1cmFuIGxlcyBiYW5kZXMuXCIsXG5cdFwiQEBGaWxsX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZWxldmFjacOzIGQndW5hIGJhbmRhLlwiLFxuXHRcIkBARmlsbF9aLUxpbWl0X3RhZzBAQFwiOiBcIkRpZmVyw6huY2lhIGQnZWxldmFjacOzIG3DoHhpbWEgZW50cmUgdW4gZW1ib3JuYWwgaSBlbCBzZXUgcHVudCBkZSBmbHXDr2Rlc2EgcGVyIG9tcGxpci5cIixcblx0XCJAQEZpbGxfWi1MaW1pdF90YWcxQEBcIjogXCJUcmV0IHF1ZSBzJ2VzcGVjaWZpcXVpIHVuIHZhbG9yIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCB0b3RzIGVscyBlbWJvcm5hbHMgcydvbXBsaXJhbiwgaW5kZXBlbmRlbnRtZW50IGRlIGxhIHByb2Z1bmRpdGF0LlwiLFxuXHRcIkBARmlsbF9aLUxpbWl0X3RhZzJAQFwiOiBcIkVsIHZhbG9yIGRlIDxzdHJvbmc+TMOtbWl0IGRlIFo8L3N0cm9uZz4gaGEgZGUgc2VyIG3DqXMgZ3JhbiBxdWUgemVyby5cIixcblx0XCJAQEZsb2F0X0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQEZsb2F0X0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBGbG9hdF9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBARmxvYXRfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBGbG9hdF9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBARmxvYXRfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBARmxvYXRfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBARmxvYXRfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBGbG9hdF9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEZsb2F0X0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEZsb2F0X0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBARmxvYXRfUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIHF1ZSBlcyBjb252ZXJ0aXLDoCBlbiB1biBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBGbG93LUFjY3VtdWxhdGlvbl9GbG93LURpcmVjdGlvbi1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIG1vc3RyYSBsYSBkaXJlY2Npw7MgZGUgc29ydGlkYSBkZWwgZmx1eCBkZSBjYWRhIGNlbMK3bGEuXCIsXG5cdFwiQEBGbG93LUFjY3VtdWxhdGlvbl9GbG93LURpcmVjdGlvbi1SYXN0ZXJfdGFnMUBAXCI6IFwiRWwgcsOgc3RlciBkZSBkaXJlY2Npw7MgZGVsIGZsdXggZXMgcG90IGNyZWFyIGV4ZWN1dGFudCBsYSBmdW5jacOzIDxzdHJvbmc+RGlyZWNjacOzIGRlbCBmbHV4PC9zdHJvbmc+LlwiLFxuXHRcIkBARmxvdy1BY2N1bXVsYXRpb25fRmxvdy1EaXJlY3Rpb24tVHlwZV90YWcwQEBcIjogXCJEZWZpbmVpeCBlbCB0aXB1cyBkZSByw6BzdGVyIGRlIGRpcmVjY2nDsyBkZWwgZmx1eCBkJ2VudHJhZGEuXCIsXG5cdFwiQEBGbG93LUFjY3VtdWxhdGlvbl9GbG93LURpcmVjdGlvbi1UeXBlX3RhZzFAQFwiOiBcIjxzdHJvbmc+RDg8L3N0cm9uZz46IGVsIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGRlbCBmbHV4IGQnZW50cmFkYSDDqXMgZGUgdGlwdXMgRDguIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARmxvdy1BY2N1bXVsYXRpb25fRmxvdy1EaXJlY3Rpb24tVHlwZV90YWczQEBcIjogXCI8c3Ryb25nPiBESU5GPC9zdHJvbmc+OiBlbCByw6BzdGVyIGRlIGRpcmVjY2nDsyBkZWwgZmx1eCBkJ2VudHJhZGEgw6lzIGRlIHRpcHVzIEQtSW5maW5pdHkgKERJTkYpLlwiLFxuXHRcIkBARmxvdy1BY2N1bXVsYXRpb25fRmxvdy1EaXJlY3Rpb24tVHlwZV90YWc1QEBcIjogXCI8c3Ryb25nPiBNRkQ8L3N0cm9uZz46IGVsIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGRlbCBmbHV4IGQnZW50cmFkYSDDqXMgZGUgdGlwdXMgRGlyZWNjacOzIGRlbCBmbHV4IG3Dumx0aXBsZSAoTUZEKS5cIixcblx0XCJAQEZsb3ctQWNjdW11bGF0aW9uX091dHB1dC1EYXRhLVR5cGVfdGFnMEBAXCI6IFwiRWwgcsOgc3RlciBkJ2FjdW11bGFjacOzIGRlIHNvcnRpZGEgcG90IHNlciBkZSB0aXB1cyBlbnRlciBvIHB1bnQgZmxvdGFudC5cIixcblx0XCJAQEZsb3ctQWNjdW11bGF0aW9uX091dHB1dC1EYXRhLVR5cGVfdGFnMUBAXCI6IFwiPHN0cm9uZz5QdW50IGZsb3RhbnQ8L3N0cm9uZz46IGVsIHLDoHN0ZXIgZGUgc29ydGlkYSBzZXLDoCBkZSB0aXB1cyBwdW50IGZsb3RhbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARmxvdy1BY2N1bXVsYXRpb25fT3V0cHV0LURhdGEtVHlwZV90YWczQEBcIjogXCI8c3Ryb25nPiBFbnRlcjwvc3Ryb25nPjogZWwgcsOgc3RlciBkZSBzb3J0aWRhIHNlcsOgIGRlIHRpcHVzIGVudGVyLlwiLFxuXHRcIkBARmxvdy1BY2N1bXVsYXRpb25fV2VpZ2h0LVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBvcGNpb25hbCBwZXIgYXBsaWNhciB1bmEgcG9uZGVyYWNpw7MgYSBjYWRhIHDDrXhlbC5cIixcblx0XCJAQEZsb3ctQWNjdW11bGF0aW9uX1dlaWdodC1SYXN0ZXJfdGFnMUBAXCI6IFwiU2kgbm8gcydlc3BlY2lmaWNhIGNhcCByw6BzdGVyIGRlIHBvbmRlcmFjacOzLCBzJ2FwbGljYXLDoCBsYSBwb25kZXJhY2nDsyBwZXIgZGVmZWN0ZSBkJzEgYSBjYWRhIHDDrXhlbC5cIixcblx0XCJAQEZsb3ctRGlyZWN0aW9uX0Zsb3ctRGlyZWN0aW9uLVR5cGVfdGFnMEBAXCI6IFwiRGVmaW5laXggZWwgdGlwdXMgZGUgcsOgc3RlciBkZSBkaXJlY2Npw7MgZGVsIGZsdXggZCdlbnRyYWRhLlwiLFxuXHRcIkBARmxvdy1EaXJlY3Rpb25fRmxvdy1EaXJlY3Rpb24tVHlwZV90YWcxQEBcIjogXCI8c3Ryb25nPkQ4PC9zdHJvbmc+OiBlbCByw6BzdGVyIGRlIGRpcmVjY2nDsyBkZWwgZmx1eCBkJ2VudHJhZGEgw6lzIGRlIHRpcHVzIEQ4LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEZsb3ctRGlyZWN0aW9uX0Zsb3ctRGlyZWN0aW9uLVR5cGVfdGFnM0BAXCI6IFwiPHN0cm9uZz4gRElORjwvc3Ryb25nPjogZWwgcsOgc3RlciBkZSBkaXJlY2Npw7MgZGVsIGZsdXggZCdlbnRyYWRhIMOpcyBkZSB0aXB1cyBELUluZmluaXR5IChESU5GKS5cIixcblx0XCJAQEZsb3ctRGlyZWN0aW9uX0Zsb3ctRGlyZWN0aW9uLVR5cGVfdGFnNUBAXCI6IFwiPHN0cm9uZz4gTUZEPC9zdHJvbmc+OiBlbCByw6BzdGVyIGRlIGRpcmVjY2nDsyBkZWwgZmx1eCBkJ2VudHJhZGEgw6lzIGRlIHRpcHVzIERpcmVjY2nDsyBkZWwgZmx1eCBtw7psdGlwbGUgKE1GRCkuXCIsXG5cdFwiQEBGbG93LURpcmVjdGlvbl9Gb3JjZS1hbGwtZWRnZS1jZWxscy10by1mbG93LW91dHdhcmRfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBzaSBlbHMgcMOteGVscyBkZSBsZXMgdm9yZXMgc2VtcHJlIGZsdWlyYW4gZW5mb3JhIG8gc2VndWlyYW4gbGVzIHJlZ2xlcyBkZSBmbHV4IG5vcm1hbHMuXCIsXG5cdFwiQEBGbG93LURpcmVjdGlvbl9Gb3JjZS1hbGwtZWRnZS1jZWxscy10by1mbG93LW91dHdhcmRfdGFnMUBAXCI6IFwiPHN0cm9uZz5Obzwvc3Ryb25nPjogc2kgbGEgY2FpZ3VkYSBtw6B4aW1hIGRpbnMgZCd1biBww614ZWwgZGUgdm9yYSDDqXMgbcOpcyBncmFuIHF1ZSB6ZXJvLCBsYSBkaXJlY2Npw7MgZGVsIGZsdXggZXMgZGV0ZXJtaW5hcsOgIGRlIGxhIG1hbmVyYSBoYWJpdHVhbDsgYWx0cmFtZW50LCBsYSBkaXJlY2Npw7MgZGVsIGZsdXggc2Vyw6AgY2FwIGEgbGEgdm9yYS4gRWxzIHDDrXhlbHMgcXVlIGhhZ2luIGRlIGZsdWlyIGRlcyBkZSBsYSB2b3JhIGRlbCByw6BzdGVyIGRlIHN1cGVyZsOtY2llIGNhcCBlbmRpbnMgaG8gZmFyYW4uIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARmxvdy1EaXJlY3Rpb25fRm9yY2UtYWxsLWVkZ2UtY2VsbHMtdG8tZmxvdy1vdXR3YXJkX3RhZzNAQFwiOiBcIjxzdHJvbmc+U8OtPC9zdHJvbmc+OiB0b3RzIGVscyBww614ZWxzIGRlIGxhIHZvcmEgZGVsIHLDoHN0ZXIgZGUgc3VwZXJmw61jaWUgZmx1aXJhbiBlbmZvcmEgZGVzIGRlbCByw6BzdGVyIGRlIHN1cGVyZsOtY2llLlwiLFxuXHRcIkBARmxvdy1EaXJlY3Rpb25fUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIHF1ZSByZXByZXNlbnRhIHVuYSBzdXBlcmbDrWNpZSBkJ2VsZXZhY2nDsyBjb250w61udWEuXCIsXG5cdFwiQEBGbG93LURpc3RhbmNlX0Rpc3RhbmNlLVR5cGVfdGFnMEBAXCI6IFwiRGV0ZXJtaW5hIHNpIGVzIGNhbGN1bGFyw6AgZWwgY29tcG9uZW50IHZlcnRpY2FsIG8gaG9yaXR6b250YWwgZGUgbGEgZGlzdMOgbmNpYSBkZWwgZmx1eC5cIixcblx0XCJAQEZsb3ctRGlzdGFuY2VfRGlzdGFuY2UtVHlwZV90YWcxQEBcIjogXCI8c3Ryb25nPkhvcml0em9udGFsPC9zdHJvbmc+OiBlbHMgY8OgbGN1bHMgZGUgZGlzdMOgbmNpYSBkZWwgZmx1eCByZXByZXNlbnRlbiBlbCBjb21wb25lbnQgaG9yaXR6b250YWwgZGUgbGEgZGlzdMOgbmNpYSBkZWwgZmx1eCBkZXMgZGUgY2FkYSBww614ZWwgZGVsIGRvbWluaSBmaW5zIGFsIHDDrXhlbCBvIGVscyBww614ZWxzIGRlbCBjYW5hbCBvbiBmbHVlaXhlbi5cIixcblx0XCJAQEZsb3ctRGlzdGFuY2VfRGlzdGFuY2UtVHlwZV90YWczQEBcIjogXCI8c3Ryb25nPlZlcnRpY2FsPC9zdHJvbmc+OiBlbHMgY8OgbGN1bHMgZGUgZGlzdMOgbmNpYSBkZWwgZmx1eCByZXByZXNlbnRlbiBlbCBjb21wb25lbnQgdmVydGljYWwgZGUgbGEgZGlzdMOgbmNpYSBkZWwgZmx1eCBkZXMgZGUgY2FkYSBww614ZWwgZGVsIGRvbWluaSBmaW5zIGFsIHDDrXhlbCBvIGVscyBww614ZWxzIGRlbCBjYW5hbCBvbiBmbHVlaXhlbi4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBGbG93LURpc3RhbmNlX0Zsb3ctRGlyZWN0aW9uLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBxdWUgbW9zdHJhIGxhIGRpcmVjY2nDsyBkZSBzb3J0aWRhIGRlbCBmbHV4IGRlIGNhZGEgcMOteGVsLlwiLFxuXHRcIkBARmxvdy1EaXN0YW5jZV9GbG93LURpcmVjdGlvbi1SYXN0ZXJfdGFnMUBAXCI6IFwiU2kgZXMgcHJvcG9yY2lvbmEgdW4gcsOgc3RlciBkZSBkaXJlY2Npw7MgZGVsIGZsdXgsIGxlcyBkaXJlY2Npb25zIGRlbCBwZW5kZW50IGRlc2NlbmRlbnQgZXMgbGltaXRhcmFuIGEgbGVzIGRlZmluaWRlcyBwZXIgbGVzIGRpcmVjY2lvbnMgZGVsIGZsdXggZCdlbnRyYWRhLlwiLFxuXHRcIkBARmxvdy1EaXN0YW5jZV9GbG93LURpcmVjdGlvbi1SYXN0ZXJfdGFnMkBAXCI6IFwiRWwgcsOgc3RlciBkZSBkaXJlY2Npw7MgZGVsIGZsdXggZXMgcG9kZW4gY3JlYXIgbWl0amFuw6dhbnQgbGEgZnVuY2nDsyBEaXJlY2Npw7MgZGVsIGZsdXguXCIsXG5cdFwiQEBGbG93LURpc3RhbmNlX0Zsb3ctRGlyZWN0aW9uLVR5cGVfdGFnMEBAXCI6IFwiRGVmaW5laXggZWwgdGlwdXMgZGUgcsOgc3RlciBkZSBkaXJlY2Npw7MgZGVsIGZsdXggZCdlbnRyYWRhLlwiLFxuXHRcIkBARmxvdy1EaXN0YW5jZV9GbG93LURpcmVjdGlvbi1UeXBlX3RhZzFAQFwiOiBcIjxzdHJvbmc+RDg8L3N0cm9uZz46IGVsIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGRlbCBmbHV4IGQnZW50cmFkYSDDqXMgZGUgdGlwdXMgRDguIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARmxvdy1EaXN0YW5jZV9GbG93LURpcmVjdGlvbi1UeXBlX3RhZzNAQFwiOiBcIjxzdHJvbmc+IERJTkY8L3N0cm9uZz46IGVsIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGRlbCBmbHV4IGQnZW50cmFkYSDDqXMgZGUgdGlwdXMgRC1JbmZpbml0eSAoRElORikuXCIsXG5cdFwiQEBGbG93LURpc3RhbmNlX0Zsb3ctRGlyZWN0aW9uLVR5cGVfdGFnNUBAXCI6IFwiPHN0cm9uZz4gTUZEPC9zdHJvbmc+OiBlbCByw6BzdGVyIGRlIGRpcmVjY2nDsyBkZWwgZmx1eCBkJ2VudHJhZGEgw6lzIGRlIHRpcHVzIERpcmVjY2nDsyBkZWwgZmx1eCBtw7psdGlwbGUgKE1GRCkuXCIsXG5cdFwiQEBGbG93LURpc3RhbmNlX1N0YXRpc3RpY3MtVHlwZV90YWcwQEBcIjogXCJEZXRlcm1pbmEgZWwgdGlwdXMgZCdlc3RhZMOtc3RpcXVlcyB1dGlsaXR6YXQgcGVyIGNhbGN1bGFyIGxhIGRpc3TDoG5jaWEgZGVsIGZsdXggc29icmUgZGl2ZXJzb3MgcmVjb3JyZWd1dHMgZGVsIGZsdXguIFNpIG5vbcOpcyBoaSBoYSB1biByZWNvcnJlZ3V0IGRlbCBmbHV4IGRlcyBkZSBjYWRhIGNlbMK3bGEgYSB1bmEgY2VswrdsYSBlbiB1biBjYW5hbCwgdG90cyBlbHMgdGlwdXMgZCdlc3RhZMOtc3RpcXVlcyBnZW5lcmFyYW4gZWwgbWF0ZWl4IHJlc3VsdGF0LlwiLFxuXHRcIkBARmxvdy1EaXN0YW5jZV9TdGF0aXN0aWNzLVR5cGVfdGFnMUBAXCI6IFwiPHN0cm9uZz5Nw61uaW08L3N0cm9uZz46IHNpIGhpIGhhIGRpdmVyc29zIHJlY29ycmVndXRzIGRlbCBmbHV4LCBlcyBjYWxjdWxhIGxhIGRpc3TDoG5jaWEgZGVsIGZsdXggbcOtbmltYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBGbG93LURpc3RhbmNlX1N0YXRpc3RpY3MtVHlwZV90YWczQEBcIjogXCI8c3Ryb25nPk1pdGphbmEgcG9uZGVyYWRhPC9zdHJvbmc+OiBzaSBoaSBoYSBkaXZlcnNvcyByZWNvcnJlZ3V0cyBkZWwgZmx1eCwgZXMgY2FsY3VsYSB1bmEgbWl0amFuYSBwb25kZXJhZGEgZGUgbGEgZGlzdMOgbmNpYSBkZWwgZmx1eC4gTGEgcHJvcG9yY2nDsyBkZWwgZmx1eCBkJ3VuYSBjZWzCt2xhIGFtYiBsZXMgc2V2ZXMgY2VswrdsZXMgdmXDr25lcyBkZXNjZW5kZW50cyBzJ3V0aWxpdHphIGNvbSBhIHBvbmRlcmFjacOzIHBlciBjYWxjdWxhciBsYSBtaXRqYW5hIHBvbmRlcmFkYS5cIixcblx0XCJAQEZsb3ctRGlzdGFuY2VfU3RhdGlzdGljcy1UeXBlX3RhZzVAQFwiOiBcIjxzdHJvbmc+TcOgeGltPC9zdHJvbmc+OiBzaSBoaSBoYSBkaXZlcnNvcyByZWNvcnJlZ3V0cyBkZWwgZmx1eCwgZXMgY2FsY3VsYSB1bmEgZGlzdMOgbmNpYSBkZWwgZmx1eCBtw6B4aW1hLlwiLFxuXHRcIkBARmxvdy1EaXN0YW5jZV9TdHJlYW0tUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZGUgdHJhbnNtaXNzacOzIGQnZW50cmFkYSBxdWUgcmVwcmVzZW50YSB1bmEgeGFyeGEgZGUgdHJhbnNtaXNzacOzIGxpbmVhbC5cIixcblx0XCJAQEZsb3ctRGlzdGFuY2VfU3VyZmFjZS1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIHJlcHJlc2VudGEgdW5hIHN1cGVyZsOtY2llIGQnZWxldmFjacOzIGNvbnTDrW51YS5cIixcblx0XCJAQEZsb3ctTGVuZ3RoX0RpcmVjdGlvbi1vZi1NZWFzdXJlbWVudF90YWcwQEBcIjogXCJEaXJlY2Npw7MgZGUgbWVzdXJhIGFsIGxsYXJnIGRlbCByZWNvcnJlZ3V0IGRlbCBmbHV4LlwiLFxuXHRcIkBARmxvdy1MZW5ndGhfRGlyZWN0aW9uLW9mLU1lYXN1cmVtZW50X3RhZzFAQFwiOiBcIjxzdHJvbmc+RGVzY2VuZGVudDwvc3Ryb25nPjogY2FsY3VsYSBsYSBkaXN0w6BuY2lhIGRlbCBwZW5kZW50IGRlc2NlbmRlbnQgYWwgbGxhcmcgZGVsIHJlY29ycmVndXQgZGVsIGZsdXgsIGRlcyBkZSBjYWRhIGNlbMK3bGEgZmlucyBhIHVuIGVtYm9ybmFsIG8gdW5hIHNvcnRpZGEgYSBsYSB2b3JhIGRlbCByw6BzdGVyLlwiLFxuXHRcIkBARmxvdy1MZW5ndGhfRGlyZWN0aW9uLW9mLU1lYXN1cmVtZW50X3RhZzNAQFwiOiBcIjxzdHJvbmc+IEFzY2VuZGVudDwvc3Ryb25nPjogY2FsY3VsYSBsYSBkaXN0w6BuY2lhIGRlIHBlbmRlbnQgYXNjZW5kZW50IG3DqXMgbGxhcmdhIGFsIGxsYXJnIGRlbCByZWNvcnJlZ3V0IGRlbCBmbHV4LCBkZXMgZGUgY2FkYSBjZWzCt2xhIGZpbnMgYSBsYSBwYXJ0IHN1cGVyaW9yIGRlIGxhIGRpdmlzacOzIGRlIGRyZW5hdGdlLlwiLFxuXHRcIkBARmxvdy1MZW5ndGhfRmxvdy1EaXJlY3Rpb24tUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIHF1ZSBtb3N0cmEgbGEgZGlyZWNjacOzIGRlIHNvcnRpZGEgZGVsIGZsdXggZGUgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBARmxvdy1MZW5ndGhfRmxvdy1EaXJlY3Rpb24tUmFzdGVyX3RhZzFAQFwiOiBcIkVsIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGRlbCBmbHV4IGVzIHBvdCBjcmVhciBleGVjdXRhbnQgbGEgZnVuY2nDsyA8c3Ryb25nPkRpcmVjY2nDsyBkZWwgZmx1eDwvc3Ryb25nPi5cIixcblx0XCJAQEZsb3ctTGVuZ3RoX1dlaWdodC1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgb3BjaW9uYWwgcGVyIGFwbGljYXIgdW5hIHBvbmRlcmFjacOzIGEgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBARmxvdy1MZW5ndGhfV2VpZ2h0LVJhc3Rlcl90YWcxQEBcIjogXCJTaSBubyBzJ2VzcGVjaWZpY2EgY2FwIHLDoHN0ZXIgZGUgcG9uZGVyYWNpw7MsIHMnYXBsaWNhcsOgIGxhIHBvbmRlcmFjacOzIHBlciBkZWZlY3RlIGQnMSBhIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQEZvY2FsLVN0YXRpc3RpY3NfSWdub3JlLU5vRGF0YS1pbi1jYWxjdWxhdGlvbnNfdGFnMEBAXCI6IFwiSW5kaWNhIHNpIGVsIGPDoGxjdWwgZXN0YWTDrXN0aWMgaWdub3JhIGVscyB2YWxvcnMgJHtOb0RhdGF9LlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19JZ25vcmUtTm9EYXRhLWluLWNhbGN1bGF0aW9uc190YWcxQEBcIjogXCI8c3Ryb25nPkFjdGl2YWRhPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSwgc2kgZXhpc3RlaXggdW4gdmFsb3IgJHtOb0RhdGF9IGVuIHVuIHZlw69uYXQsIGFxdWVzdCB2YWxvciBzJ2lnbm9yYXLDoC4gTm9tw6lzIGxlcyBjZWzCt2xlcyBkZWwgdmXDr25hdCBxdWUgdGluZ3VpbiB2YWxvcnMgZGUgZGFkZXMgcyd1dGlsaXR6YXJhbiBwZXIgZGV0ZXJtaW5hciBlbCB2YWxvciBkZSBzb3J0aWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEZvY2FsLVN0YXRpc3RpY3NfSWdub3JlLU5vRGF0YS1pbi1jYWxjdWxhdGlvbnNfdGFnM0BAXCI6IFwiPHN0cm9uZz5EZXNhY3RpdmFkYTwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUsIHNpIHVuYSBjZWzCt2xhIGQndW4gdmXDr25hdCB0w6kgdW4gdmFsb3IgJHtOb0RhdGF9LCBsYSBzb3J0aWRhIGRlIGxhIGNlbMK3bGEgZGUgcHJvY2Vzc2FtZW50IHNlcsOgICR7Tm9EYXRhfS5cIixcblx0XCJAQEZvY2FsLVN0YXRpc3RpY3NfTmVpZ2hib3Job29kX3RhZzBAQFwiOiBcIkZvcm1hIGRlIGwnw6ByZWEgcXVlIGVudm9sdGEgY2FkYSBjZWzCt2xhIHV0aWxpdHphZGEgcGVyIGNhbGN1bGFyIGwnZXN0YWTDrXN0aWNhLlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19OZWlnaGJvcmhvb2RfdGFnMUBAXCI6IFwiQ2FkYSB2ZcOvbmF0IHTDqSBwYXLDoG1ldHJlcyBhZGRpY2lvbmFscyBwZXIgZGVmaW5pciBsYSBmb3JtYS5cIixcblx0XCJAQEZvY2FsLVN0YXRpc3RpY3NfTmVpZ2hib3Job29kX3RhZzJAQFwiOiBcIkNvcm9uYSBjaXJjdWxhciwgUmFkaSBpbnRlcm4sIFJhZGkgZXh0ZXJuXCIsXG5cdFwiQEBGb2NhbC1TdGF0aXN0aWNzX05laWdoYm9yaG9vZF90YWczQEBcIjogXCJDZXJjbGUsIFJhZGlcIixcblx0XCJAQEZvY2FsLVN0YXRpc3RpY3NfTmVpZ2hib3Job29kX3RhZzRAQFwiOiBcIklycmVndWxhciwgQW1wbGFkYSwgQWx0dXJhLCBWYWxvcnMgZGUgdmXDr25hdFwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19OZWlnaGJvcmhvb2RfdGFnNUBAXCI6IFwiUmVjdGFuZ2xlLCBBbXBsYWRhLCBBbHR1cmFcIixcblx0XCJAQEZvY2FsLVN0YXRpc3RpY3NfTmVpZ2hib3Job29kX3RhZzZAQFwiOiBcIkZhbGNhLCBSYWRpLCBBbmdsZSBkJ2luaWNpLCBBbmdsZSBkZSBmaW5hbGl0emFjacOzXCIsXG5cdFwiQEBGb2NhbC1TdGF0aXN0aWNzX05laWdoYm9yaG9vZF90YWc3QEBcIjogXCJQZXMsIEFtcGxhZGEsIEFsdHVyYSwgVmFsb3JzIGRlIHZlw69uYXRcIixcblx0XCJAQEZvY2FsLVN0YXRpc3RpY3NfTmVpZ2hib3Job29kX3RhZzhAQFwiOiBcIkVsIHZlw69uYXQgSXJyZWd1bGFyIHVzIHBlcm1ldCBlc3BlY2lmaWNhciB1biB2ZcOvbmF0IGRlIGZvcm1hIGlycmVndWxhciBhbCB2b2x0YW50IGRlIGxhIGNlbMK3bGEgZGUgcHJvY2Vzc2FtZW50LiBVdGlsaXR6ZXUgbGEgdGF1bGEgVmFsb3JzIGRlIHZlw69uYXQgcGVyIGRlZmluaXIgbGEgZm9ybWEgZGVsIG51Y2xpIGRlbCB2ZcOvbmF0LiBVbiB2YWxvciBkZSAwIHBlciBhIHVuYSBwb3NpY2nDsyBkZSBjZWzCt2xhIGluZGljYSBxdWUgbGEgY2VswrdsYSBubyBmb3JtYSBwYXJ0IGRlbCB2ZcOvbmF0LCBpIG5vIHMndXRpbGl0emFyw6AgcGVyIGFsIHByb2Nlc3NhbWVudC4gVW4gdmFsb3IgZCcxIGluZGljYSBxdWUgbGEgc2V2YSBjZWzCt2xhIGNvcnJlc3BvbmVudCAoaSBlbCBzZXUgdmFsb3IpIMOpcyBtZW1icmUgZGVsIHZlw69uYXQuXCIsXG5cdFwiQEBGb2NhbC1TdGF0aXN0aWNzX05laWdoYm9yaG9vZF90YWc5QEBcIjogXCJFbCB2ZcOvbmF0IFBlcyDDqXMgc2ltaWxhciBhbCBkZSB0aXB1cyBJcnJlZ3VsYXIsIGVuIHF1w6ggdXMgcGVybWV0IGRlZmluaXIgdW4gdmXDr25hdCBpcnJlZ3VsYXIgYWwgdm9sdGFudCBkZSBsYSBjZWzCt2xhIGRlIHByb2Nlc3NhbWVudCwgcGVyw7IgYSBtw6lzIHVzIHBlcm1ldCBhcGxpY2FyIHBvbmRlcmFjaW9ucyBhbHMgdmFsb3JzIGQnZW50cmFkYS4gRWxzIHZhbG9ycyBkZWwgbnVjbGkgZGUgcG9uZGVyYWNpw7MgZXNwZWNpZmlxdWVuIGxlcyBwb3NpY2lvbnMgZGUgY2VswrdsYSBxdWUgcydoYW4gZCdpbmNsb3VyZSBhbCB2ZcOvbmF0IGkgZWxzIHBlc29zIHBlciBsZXMgcXVhbHMgZXMgbXVsdGlwbGljYXJhbi4gVXRpbGl0emV1IHVuIHZhbG9yIGRlIDAgcGVyIGV4Y2xvdXJlIHVuYSBjZWzCt2xhIGRlbCBwcm9jZXNzYW1lbnQuIEVscyB2YWxvcnMgcG9zaXRpdXMsIG5lZ2F0aXVzIGkgZGVjaW1hbHMgc8OzbiB0b3RzIG9wY2lvbnMgdsOgbGlkZXMgcGVyIHV0aWxpdHphciBjb20gYSBwZXMuIFBlciBhbCB0aXB1cyBkZSB2ZcOvbmF0IFBlcywgbm9tw6lzIHMnYWRtZXRlbiBlc3RhZMOtc3RpcXVlcyBkZSB0aXB1cyBNaXRqYW5hLCBEZXN2aWFjacOzIGVzdMOgbmRhcmQgbyBTdW1hLlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19QZXJjZW50aWxlLVZhbHVlX3RhZzBAQFwiOiBcIkluZGljYSBxdWluIHBlcmNlbnRpbCBzJ2hhIGRlIGNhbGN1bGFyIHF1YW4gPHN0cm9uZz5QZXJjZW50aWw8L3N0cm9uZz4gZXN0w6Agc2VsZWNjaW9uYXQgY29tIGEgdGlwdXMgZCdlc3RhZMOtc3RpY2EuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyA5MCBwZXIgYWwgcGVyY2VudGlsIDkwLlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19QZXJjZW50aWxlLVZhbHVlX3RhZzNAQFwiOiBcIkVscyB2YWxvcnMgcG9kZW4gc2VyIGRlIDAgYSAxMDAuIEVsIHBlcmNlbnRpbCAwIMOpcyBiw6BzaWNhbWVudCBlcXVpdmFsZW50IGEgbCdlc3RhZMOtc3RpY2EgbcOtbmltYSBpIGVsIHBlcmNlbnRpbCAxMDAgZXF1aXZhbCBhIGxhIG3DoHhpbWEsIGFtYiBsJ2V4Y2VwY2nDsyBxdWUgZWwgcmVzdWx0YXQgc2Vyw6AgZGUgdGlwdXMgcHVudCBmbG90YW50LiBVbiB2YWxvciBkZSA1MCBnZW5lcmFyw6AgYsOgc2ljYW1lbnQgZWwgbWF0ZWl4IHJlc3VsdGF0IHF1ZSBsJ2VzdGFkw61zdGljYSBtZWRpYW5hLlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgbmVjZXNzYXJpLlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19TdGF0aXN0aWNzLVR5cGVfdGFnMEBAXCI6IFwiVGlwdXMgZCdlc3RhZMOtc3RpY2EgcXVlIGVzIGNhbGN1bGFyw6AuXCIsXG5cdFwiQEBGb2NhbC1TdGF0aXN0aWNzX1N0YXRpc3RpY3MtVHlwZV90YWcxQEBcIjogXCI8c3Ryb25nPk1ham9yaWE8L3N0cm9uZz46IGNhbGN1bGEgbGEgbWFqb3JpYSAodmFsb3IgcXVlIGVzIHByb2R1ZWl4IG3DqXMgc292aW50KSBkZSBsZXMgY2VswrdsZXMgZGVsIHZlw69uYXQuXCIsXG5cdFwiQEBGb2NhbC1TdGF0aXN0aWNzX1N0YXRpc3RpY3MtVHlwZV90YWczQEBcIjogXCI8c3Ryb25nPk3DoHhpbWE8L3N0cm9uZz46IGNhbGN1bGEgbGEgbcOgeGltYSAodmFsb3IgbcOpcyBncmFuKSBkZSBsZXMgY2VswrdsZXMgZGVsIHZlw69uYXQuXCIsXG5cdFwiQEBGb2NhbC1TdGF0aXN0aWNzX1N0YXRpc3RpY3MtVHlwZV90YWc1QEBcIjogXCI8c3Ryb25nPk1pdGphbmE8L3N0cm9uZz46IGNhbGN1bGEgbGEgbWl0amFuYSAodmFsb3IgbWl0asOgKSBkZSBsZXMgY2VswrdsZXMgZGVsIHZlw69uYXQuXCIsXG5cdFwiQEBGb2NhbC1TdGF0aXN0aWNzX1N0YXRpc3RpY3MtVHlwZV90YWc3QEBcIjogXCI8c3Ryb25nPk1lZGlhbmE8L3N0cm9uZz46IGNhbGN1bGEgbGEgbWVkaWFuYSBkZSBsZXMgY2VswrdsZXMgZGVsIHZlw69uYXQuXCIsXG5cdFwiQEBGb2NhbC1TdGF0aXN0aWNzX1N0YXRpc3RpY3MtVHlwZV90YWc5QEBcIjogXCI8c3Ryb25nPk3DrW5pbWE8L3N0cm9uZz46IGNhbGN1bGEgbGEgbcOtbmltYSAodmFsb3IgbcOpcyBwZXRpdCkgZGUgbGVzIGNlbMK3bGVzIGRlbCB2ZcOvbmF0LlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19TdGF0aXN0aWNzLVR5cGVfdGFnMTFAQFwiOiBcIjxzdHJvbmc+TWlub3JpYTwvc3Ryb25nPjogY2FsY3VsYSBsYSBtaW5vcmlhICh2YWxvciBxdWUgZXMgcHJvZHVlaXggYW1iIG1lbnlzIGZyZXHDvMOobmNpYSkgZGUgbGVzIGNlbMK3bGVzIGRlbCB2ZcOvbmF0LlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19TdGF0aXN0aWNzLVR5cGVfdGFnMTNAQFwiOiBcIjxzdHJvbmc+UGVyY2VudGlsPC9zdHJvbmc+OiBjYWxjdWxhIHVuIHBlcmNlbnRpbCBkZSBsZXMgY2VswrdsZXMgZGVsIHZlw69uYXQuIFBvZGV1IGRldGVybWluYXIgcXVpbiBwZXJjZW50aWwgcydoYSBkZSBjYWxjdWxhciBhbWIgZWwgcGFyw6BtZXRyZSA8c3Ryb25nPlZhbG9yIGRlIHBlcmNlbnRpbDwvc3Ryb25nPi5cIixcblx0XCJAQEZvY2FsLVN0YXRpc3RpY3NfU3RhdGlzdGljcy1UeXBlX3RhZzE3QEBcIjogXCI8c3Ryb25nPkludGVydmFsPC9zdHJvbmc+OiBjYWxjdWxhIGwnaW50ZXJ2YWwgKGRpZmVyw6huY2lhIGVudHJlIGVscyB2YWxvcnMgbcOpcyBncmFuIGkgbcOpcyBwZXRpdCkgZGUgbGVzIGNlbMK3bGVzIGRlbCB2ZcOvbmF0LlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19TdGF0aXN0aWNzLVR5cGVfdGFnMTlAQFwiOiBcIjxzdHJvbmc+RGVzdmlhY2nDsyBlc3TDoG5kYXJkPC9zdHJvbmc+OiBjYWxjdWxhIGxhIGRlc3ZpYWNpw7MgZXN0w6BuZGFyZCBkZSBsZXMgY2VswrdsZXMgZGVsIHZlw69uYXQuXCIsXG5cdFwiQEBGb2NhbC1TdGF0aXN0aWNzX1N0YXRpc3RpY3MtVHlwZV90YWcyMUBAXCI6IFwiPHN0cm9uZz4gU3VtYTwvc3Ryb25nPjogY2FsY3VsYSBsYSBzdW1hICh0b3RhbCBkZSB0b3RzIGVscyB2YWxvcnMpIGRlIGxlcyBjZWzCt2xlcyBkZWwgdmXDr25hdC5cIixcblx0XCJAQEZvY2FsLVN0YXRpc3RpY3NfU3RhdGlzdGljcy1UeXBlX3RhZzIzQEBcIjogXCI8c3Ryb25nPlZhcmlldGF0PC9zdHJvbmc+OiBjYWxjdWxhIGxhIHZhcmlldGF0IChub21icmUgZGUgdmFsb3JzIMO6bmljcykgZGUgbGVzIGNlbMK3bGVzIGRlbCB2ZcOvbmF0LlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19TdGF0aXN0aWNzLVR5cGVfdGFnMjVAQFwiOiBcIlNpIGVsIHLDoHN0ZXIgZCdlbnRyYWRhIMOpcyBkZSBwdW50IGZsb3RhbnQsIG5vbcOpcyBlc3RhcmFuIGRpc3BvbmlibGVzIGVscyB0aXB1cyBkJ2VzdGFkw61zdGlxdWVzIE1pdGphbmEsIE3DoHhpbSwgTWVkaWFuYSwgTcOtbmltLCBQZXJjZW50aWwsIEludGVydmFsLCBEZXN2aWFjacOzIGVzdMOgbmRhcmQgaSBTdW1hLlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19TdGF0aXN0aWNzLVR5cGVfdGFnMjZAQFwiOiBcIlBlciBhbHMgdGlwdXMgTWl0amFuYSwgTWVkaWFuYSwgUGVyY2VudGlsIGkgRGVzdmlhY2nDsyBlc3TDoG5kYXJkLCBsYSBzb3J0aWRhIHNlbXByZSDDqXMgZGUgcHVudCBmbG90YW50LlwiLFxuXHRcIkBARm9jYWwtU3RhdGlzdGljc19TdGF0aXN0aWNzLVR5cGVfdGFnMjdAQFwiOiBcIkVsIHRpcHVzIGQnZXN0YWTDrXN0aXF1ZXMgcGVyIGRlZmVjdGUgw6lzIE1pdGphbmEuXCIsXG5cdFwiQEBHZW9tZXRyaWNfQ29uc3RhbnQtWl90YWcwQEBcIjogXCJFc3BlY2lmaXF1ZXUgdW5hIGVsZXZhY2nDsyBjb25zdGFudCBwZXIgdXRpbGl0emFyIGxhIGZ1bmNpw7MgR2VvbcOodHJpY2EuXCIsXG5cdFwiQEBHZW9tZXRyaWNfREVNX3RhZzBAQFwiOiBcIkVzcGVjaWZpcXVldSBlbCBERU0gcGVyIHV0aWxpdHphciBsYSBmdW5jacOzIEdlb23DqHRyaWNhLiBQb2RldSB1dGlsaXR6YXIgdW4gREVNIGluY2zDsnMgYWwgZGF0YXNldCBkZSBtb3NhaWMgY29tIHVuIGRhdGFzZXQgcsOgc3RlciBvIHVuIGRhdGFzZXQgZGUgbW9zYWljIGxhIHNvcnRpZGEgZGVsIHF1YWwgc2lndWkgdW4gREVNLlwiLFxuXHRcIkBAR2VvbWV0cmljX0dlb2lkX3RhZzBAQFwiOiBcIkxhIG1ham9yaWEgZGVscyBkYXRhc2V0cyBkJ2VsZXZhY2nDsywgY29tIGFyYSBVU0dTIE5FRCBvIEFyY0dJUyBPbmxpbmUgV29ybGQgRWxldmF0aW9uLCBzw7NuIGFsdGl0dWRzIG9ydG9tw6h0cmlxdWVzIGksIHBlciB0YW50LCDDqXMgbmVjZXNzYXJpIHNlbGVjY2lvbmFyIGxhIGNvcnJlY2Npw7MgZGVsIGdlb2lkZSBwZXIgYSBsYSBjb21wYXRpYmlsaXRhdCBhbWIgZWxzIFJQQyBkZSBzYXTDqGzCt2xpdCwgcXVlIG5lY2Vzc2l0ZW4gYWx0aXR1ZHMgZWzCt2xpcHNvw69kYWxzLiBNYXJxdWV1IGxhIGNhc2VsbGEgZGUgdmVyaWZpY2FjacOzIDxzdHJvbmc+R2VvaWRlPC9zdHJvbmc+IHBlciBhcGxpY2FyIGxhIGNvcnJlY2Npw7MgZGVsIGdlb2lkZSAoRUdNOTYpIGFscyB2YWxvcnMgZGUgeiwgdHJldCBxdWUgamEgZXMgZmFjaSByZWZlcsOobmNpYSBhbCB2b3N0cmUgREVNIGEgbGVzIGFsdGl0dWRzIGVswrdsaXBzb8OvZGFscy5cIixcblx0XCJAQEdlb21ldHJpY19NZXRob2RfdGFnMEBAXCI6IFwiVHJpZXUgZWwgbcOodG9kZSBkJ2VsZXZhY2nDsyBwZXIgYSBsYSBmdW5jacOzIGdlb23DqHRyaWNhOlwiLFxuXHRcIkBAR2VvbWV0cmljX01ldGhvZF90YWcxQEBcIjogXCJVdGlsaXR6YSBaIGNvbnN0YW50OiBlc3BlY2lmaXF1ZXUgdW5hIGVsZXZhY2nDsyBjb25zdGFudCBwZXIgZXhlY3V0YXIgbGEgZnVuY2nDsyBHZW9tw6h0cmljYS5cIixcblx0XCJAQEdlb21ldHJpY19NZXRob2RfdGFnMkBAXCI6IFwiVXRpbGl0emEgREVNOiBlc3BlY2lmaXF1ZXUgdW4gREVNIHBlciBleGVjdXRhciBsYSBmdW5jacOzIEdlb23DqHRyaWNhLlwiLFxuXHRcIkBAR2VvbWV0cmljX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQEdlb21ldHJpY19aLUZhY3Rvcl90YWcwQEBcIjogXCJFbHMgY29lZmljaWVudHMgcG9saW7Dsm1pY3MgcmFjaW9uYWxzIChSUEMpIGRlbHMgc2F0w6hswrdsaXRzIHMnZXNjYWxlbiBwZXIgYWxzIGRhdGFzZXRzIGQnZWxldmFjacOzIGFtYiB1bml0YXRzIHZlcnRpY2FscyBlbiBtZXRyZXMuIFNpIGwnZWxldmFjacOzIHV0aWxpdHphIGFsdHJlcyB1bml0YXRzIHZlcnRpY2FscywgaW50cm9kdcOvdSB1biA8c3Ryb25nPmZhY3RvciB6PC9zdHJvbmc+IHBlciBhanVzdGFyIGwnZXNjYWxhIGEgbWV0cmVzLiBQZXIgZXhlbXBsZSwgc2kgbGVzIHVuaXRhdHMgZCdlbGV2YWNpw7Mgc8OzbiBwZXVzLCBoZXUgZCd1dGlsaXR6YXIgdW4gdmFsb3IgZGUgMCwzMDQ4IHBlciBjb252ZXJ0aXIgbGVzIHVuaXRhdHMgZCdlbGV2YWNpw7MgZGUgcGV1cyBhIG1ldHJlcy5cIixcblx0XCJAQEdlb21ldHJpY19aLU9mZnNldF90YWcwQEBcIjogXCJWYWxvciBkZSBiYXNlIHF1ZSBzJ2FmZWdpcsOgIGFsIHZhbG9yIGQnZWxldmFjacOzIGFsIERFTS4gRXMgcG90IHV0aWxpdHphciBwZXIgZGVzZmFzYXIgZWxzIHZhbG9ycyBkJ2VsZXZhY2nDsyBxdWUgbm8gY29tZW5jZW4gYWwgbml2ZWxsIGRlbCBtYXIuXCIsXG5cdFwiQEBHZW9tZXRyaWNfVG9sZXJhbmNlX3RhZzBAQFwiOiBcIkVzcGVjaWZpcXVldSBsJ2Vycm9yIG3DoHhpbSB0b2xlcmFibGUgYSBsYSBmdW5jacOzIGdlb23DqHRyaWNhLCBleHByZXNzYXQgZW4gbm9tYnJlIGRlIHDDrXhlbHMuIEVsIHZhbG9yIHBlciBkZWZlY3RlIGRlbCB0aXB1cyBkZSByw6BzdGVyIE5JVEYgKE5DRFJEKSDDqXMgZG9zLlwiLFxuXHRcIkBAR3JheXNjYWxlX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQEdyYXlzY2FsZV9Db252ZXJzaW9uLVBhcmFtZXRlcnNfdGFnMEBAXCI6IFwiUG9uZGVyYWNpb25zIGRlIGNhZGFzY3VuYSBkZSBsZXMgYmFuZGVzIHF1ZSBmb3JtZW4gZWwgcsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBHcmVhdGVyLVRoYW5fQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBHcmVhdGVyLVRoYW5fQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEdyZWF0ZXItVGhhbl9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEdyZWF0ZXItVGhhbl9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEdyZWF0ZXItVGhhbl9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBHcmVhdGVyLVRoYW5fRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBHcmVhdGVyLVRoYW5fRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBHcmVhdGVyLVRoYW5fRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuX1Jhc3Rlcl90YWcwQEBcIjogXCJFbnRyYWRhIHF1ZSBzJ2VzdMOgIHByb3ZhbnQgcGVyIGRldGVybWluYXIgc2kgw6lzIG3DqXMgZ3JhbiBxdWUgbGEgc2Vnb25hIGVudHJhZGEuXCIsXG5cdFwiQEBHcmVhdGVyLVRoYW5fUmFzdGVyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuX1Jhc3RlcjJfdGFnMEBAXCI6IFwiRW50cmFkYSBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgcHJvdmFyIHF1ZSBsYSBwcmltZXJhIGVudHJhZGEgw6lzIG3DqXMgZ3Jhbi5cIixcblx0XCJAQEdyZWF0ZXItVGhhbl9SYXN0ZXIyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuLUVxdWFsX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQEdyZWF0ZXItVGhhbi1FcXVhbF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuLUVxdWFsX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBHcmVhdGVyLVRoYW4tRXF1YWxfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBHcmVhdGVyLVRoYW4tRXF1YWxfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEdyZWF0ZXItVGhhbi1FcXVhbF9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBHcmVhdGVyLVRoYW4tRXF1YWxfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuLUVxdWFsX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuLUVxdWFsX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuLUVxdWFsX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEdyZWF0ZXItVGhhbi1FcXVhbF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEdyZWF0ZXItVGhhbi1FcXVhbF9SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBxdWUgcydlc3TDoCBwcm92YW50IHBlciBkZXRlcm1pbmFyIHNpIMOpcyBtw6lzIGdyYW4gbyBpZ3VhbCBxdWUgbGEgc2Vnb25hIGVudHJhZGEuXCIsXG5cdFwiQEBHcmVhdGVyLVRoYW4tRXF1YWxfUmFzdGVyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuLUVxdWFsX1Jhc3RlcjJfdGFnMEBAXCI6IFwiRW50cmFkYSBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgcHJvdmFyIHF1ZSBsYSBwcmltZXJhIGVudHJhZGEgw6lzIG3DqXMgZ3JhbiBvIGlndWFsLlwiLFxuXHRcIkBAR3JlYXRlci1UaGFuLUVxdWFsX1Jhc3RlcjJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBIZWF0LUluZGV4X0hlYXQtSW5kZXgtVW5pdHNfdGFnMEBAXCI6IFwiVW5pdGF0IGRlIG1lc3VyYSBhc3NvY2lhZGEgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBMZXMgdW5pdGF0cyBkZSBzb3J0aWRhIGRpc3BvbmlibGVzIHPDs24gQ2Vsc2l1cywgRmFocmVuaGVpdCBpIEtlbHZpbi5cIixcblx0XCJAQEhlYXQtSW5kZXhfUmVsYXRpdmUtSHVtaWRpdHktUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCd1bmEgYmFuZGEgb24gZWxzIHZhbG9ycyBkZSBww614ZWwgcmVwcmVzZW50ZW4gdW5hIGh1bWl0YXQgcmVsYXRpdmEgY29tIHVuIHZhbG9yIGRlIHBlcmNlbnRhdGdlIGVudHJlIDAgaSAxMDAuXCIsXG5cdFwiQEBIZWF0LUluZGV4X1RlbXBlcmF0dXJlLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQndW5hIGJhbmRhIG9uIGVscyB2YWxvcnMgZGUgcMOteGVsIHJlcHJlc2VudGVuIGxhIHRlbXBlcmF0dXJhIGFtYmllbnQgZGUgbCdhaXJlLlwiLFxuXHRcIkBASGVhdC1JbmRleF9UZW1wZXJhdHVyZS1Vbml0c190YWcwQEBcIjogXCJVbml0YXQgZGUgbWVzdXJhIGFzc29jaWFkYSBhbCByw6BzdGVyIGRlIHRlbXBlcmF0dXJhIGQnZW50cmFkYS4gTGVzIHVuaXRhdHMgZCdlbnRyYWRhIGRpc3BvbmlibGVzIHPDs24gQ2Vsc2l1cywgRmFocmVuaGVpdCBpIEtlbHZpbi5cIixcblx0XCJAQEhpbGxzaGFkZV9BbHRpdHVkZV90YWcwQEBcIjogXCJMJ2FsdGl0dWQgw6lzIGwnYW5nbGUgZCdlbGV2YWNpw7MgZGVsIHNvbCBzb2JyZSBsJ2hvcml0esOzIGkgdmEgZGUgMCBhIDkwIGdyYXVzLiBVbiB2YWxvciBkZSAwIGdyYXVzIGluZGljYSBxdWUgZWwgc29sIMOpcyBhIGwnaG9yaXR6w7MsIMOpcyBhIGRpciwgYWwgbWF0ZWl4IHBsYSBob3JpdHpvbnRhbCBxdWUgZWwgbWFyYyBkZSByZWZlcsOobmNpYS4gVW4gdmFsb3IgZGUgOTAgZ3JhdXMgaW5kaWNhIHF1ZSBlbCBzb2wgZXMgdHJvYmEgZGlyZWN0YW1lbnQgYSBzb2JyZS5cIixcblx0XCJAQEhpbGxzaGFkZV9BbHRpdHVkZV90YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBub23DqXMgw6lzIHbDoGxpZCBxdWFuIDxzdHJvbmc+VGlwdXMgZCdvbWJyYTwvc3Ryb25nPiDDqXMgPHN0cm9uZz5UcmFkaWNpb25hbDwvc3Ryb25nPi4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIGRlIDQ1IGdyYXVzIHNvYnJlIGwnaG9yaXR6w7MuXCIsXG5cdFwiQEBIaWxsc2hhZGVfQXppbXV0aF90YWcwQEBcIjogXCJMJ0F6aW11dCDDqXMgbGEgcG9zaWNpw7MgcmVsYXRpdmEgZGVsIHNvbCBhIGwnaG9yaXR6w7MgKGVuIGdyYXVzKS4gQXF1ZXN0YSBwb3NpY2nDsyBzJ2luZGljYSBhbWIgbCdhbmdsZSBkZWwgc29sIG1lc3VyYXQgZW4gc2VudGl0IGhvcmFyaSBkZXMgZGVsIG5vcmQuIEVscyB2YWxvcnMgZGUgbCdhemltdXQgaW5kaXF1ZW4gZWwgc2Vnw7xlbnQ6IDAgZ3JhdXMgw6lzIGVsIG5vcmQsIDkwIGdyYXVzIMOpcyBsJ2VzdCwgMTgwIGdyYXVzIMOpcyBlbCBzdWQgaSAyNzAgZ3JhdXMgw6lzIGwnb2VzdC5cIixcblx0XCJAQEhpbGxzaGFkZV9BemltdXRoX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyDDqXMgdsOgbGlkIHF1YW4gPHN0cm9uZz5UaXB1cyBkJ29tYnJhPC9zdHJvbmc+IMOpcyA8c3Ryb25nPlRyYWRpY2lvbmFsPC9zdHJvbmc+LiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgZGUgMzE1IGdyYXVzLCBxdWUgY29ycmVzcG9uIGFsIG5vcmQtb2VzdC5cIixcblx0XCJAQEhpbGxzaGFkZV9EaXNhYmxlLWRlZmF1bHQtZWRnZS1waXhlbC1pbnRlcnBvbGF0aW9uX3RhZzBAQFwiOiBcIkwnw7pzIGQnYXF1ZXN0YSBvcGNpw7MgZXZpdGEgcXVhbHNldm9sIGFydGVmYWN0ZSBkZSByZW1vc3RyZWlnIHF1ZSBlcyBwdWd1aSBwcm9kdWlyIGEgbGVzIHZvcmVzIGQndW4gcsOgc3Rlci4gRWxzIHDDrXhlbHMgZGUgc29ydGlkYSBhbCBsbGFyZyBkZSBsYSB2b3JhIGQndW4gcsOgc3RlciBvIGFsIGNvc3RhdCBkZWxzIHDDrXhlbHMgTm9EYXRhIHMnZW1wbGVuYXJhbiBhbWIgTm9EYXRhOyBwZXIgdGFudCwgZXMgcmVjb21hbmEgcXVlIGFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyBzJ3V0aWxpdHppIGFtYiBlbHMgZGF0YXNldHMgZGUgbW9zYWljIGQnZWxldmFjacOzIHF1ZSBzZSBzdXBlcnBvc2VuLiBRdWFuIGhpIGhhZ2kgcMOteGVscyBzdXBlcnBvc2F0cyBkaXNwb25pYmxlcywgbGVzIMOgcmVlcyBkZSBOb0RhdGEgbW9zdHJhcmFuIGVscyB2YWxvcnMgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIGVuIGxsb2MgZGUgcMOteGVscyBlbiBibGFuYy5cIixcblx0XCJAQEhpbGxzaGFkZV9EaXNhYmxlLWRlZmF1bHQtZWRnZS1waXhlbC1pbnRlcnBvbGF0aW9uX3RhZzFAQFwiOiBcIkRlc2FjdGl2YWRhOiBlbCByZW1vc3RyZWlnIGJpbGluZWFsIHMnYXBsaWNhcsOgIGRlIG1hbmVyYSB1bmlmb3JtZSBwZXIgcmVtb3N0cmVqYXIgbCdvbWJyZWlnLiBVdGlsaXR6ZXUgYXF1ZXN0YSBvcGNpw7Mgc2kgZWwgZGF0YXNldCBkZSBtb3NhaWMgcXVlIGNvbnTDqSBsZXMgZGFkZXMgZGVsIHLDoHN0ZXIgZCdlbGV2YWNpw7MgcydoYSB1bml0IGEgdG9wYXIuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBASGlsbHNoYWRlX0Rpc2FibGUtZGVmYXVsdC1lZGdlLXBpeGVsLWludGVycG9sYXRpb25fdGFnMkBAXCI6IFwiQWN0aXZhZGE6IGVsIHJlbW9zdHJlaWcgYmlsaW5lYWwgcyd1dGlsaXR6YXLDoCBhIGwnb21icmVpZywgZXhjZXB0ZSBhIGxlcyB2b3JlcyBkZWxzIHLDoHN0ZXJzIG8gYWwgY29zdGF0IGRlbHMgcMOteGVscyBkZSBOb0RhdGEuIEFxdWVzdHMgcMOteGVscyBzJ2VtcGxlbmFyYW4gYW1iIE5vRGF0YSBpIG1vc3RyYXJhbiBlbHMgdmFsb3JzIGRlIHDDrXhlbHMgc3VwZXJwb3NhdHMsIGRlIG1hbmVyYSBxdWUgZXMgcmVkdWVpeGkgcXVhbHNldm9sIGVmZWN0ZSBkZSB2b3JhIGVzbW9sYWRhIHF1ZSBhbHRyYW1lbnQgZXMgcG9kcmlhIHByb2R1aXIuIFV0aWxpdHpldSBhcXVlc3RhIG9wY2nDsyBzaSBlbCBkYXRhc2V0IGRlIG1vc2FpYyBxdWUgY29udMOpIGxlcyBkYWRlcyBkZWwgcsOgc3RlciBkJ2VsZXZhY2nDsyBlc3TDoCBmb3JtYXQgcGVyIHRlc3NlbMK3bGVzIG8gZWxlbWVudHMgc3VwZXJwb3NhdHMuXCIsXG5cdFwiQEBIaWxsc2hhZGVfRGlzYWJsZS1kZWZhdWx0LWVkZ2UtcGl4ZWwtaW50ZXJwb2xhdGlvbl90YWczQEBcIjogXCJQb3Qgc2VyIHF1ZSBlbHMgcmVzdWx0YXRzIGRlIGxhIGZ1bmNpw7MgZGVwZW5ndWluIGRlIGxlcyBkYWRlcy4gU2kgb2JzZXJ2ZXUgYXJ0ZWZhY3RlcyBkZSBsw61taXRzIGRlIHRlc3NlbMK3bGVzIGEgbGEgc29ydGlkYSwgc2VsZWNjaW9uZXUgbGEgY29uZGljacOzIGFsdGVybmF0aXZhIGRlIGxhIGNhc2VsbGEgZGUgc2VsZWNjacOzLlwiLFxuXHRcIkBASGlsbHNoYWRlX0hpbGxzaGFkZS1UeXBlX3RhZzBAQFwiOiBcIkNvbnRyb2xhIGxhIGZvbnQgZCdpbMK3bHVtaW5hY2nDsyBkZSBsJ29tYnJlamF0OlwiLFxuXHRcIkBASGlsbHNoYWRlX0hpbGxzaGFkZS1UeXBlX3RhZzFAQFwiOiBcIlRyYWRpY2lvbmFsOiBjYWxjdWxhIGwnb21icmVqYXQgZGVzIGQndW5hIGRpcmVjY2nDsyBkJ2lswrdsdW1pbmFjacOzIMO6bmljYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuIFBvZGV1IGRlZmluaXIgPHN0cm9uZz5BemltdXRoPC9zdHJvbmc+IGkgPHN0cm9uZz5BbHRpdHVkPC9zdHJvbmc+IHBlciBjb250cm9sYSBsYSB1YmljYWNpw7MgZGUgbGEgZm9udCBkZSBsbHVtLlwiLFxuXHRcIkBASGlsbHNoYWRlX0hpbGxzaGFkZS1UeXBlX3RhZzZAQFwiOiBcIk11bHRpZGlyZWNjaW9uYWw6IGNvbWJpbmEgbGEgbGx1bSBkZSBkaXZlcnNlcyBmb250cyBwZXIgcmVwcmVzZW50YXIgdW5hIHZpc3VhbGl0emFjacOzIG1pbGxvcmFkYSBkZWwgdGVycmVueS5cIixcblx0XCJAQEhpbGxzaGFkZV9QaXhlbC1TaXplLUZhY3Rvcl90YWcwQEBcIjogXCJFbCBmYWN0b3IgZGUgbWlkYSBkZSBww614ZWwgdMOpIGVuIGNvbXB0ZSBlbHMgY2FudmlzIGQnZXNjYWxhIGEgbWVzdXJhIHF1ZSBlbCB2aXNvciBhbXBsaWEgaSByZWR1ZWl4IGxhIHZpc3VhbGl0emFjacOzIGRlbCBtYXBhLiBDb250cm9sYSBsYSB2ZWxvY2l0YXQgYSBxdcOoIGNhbnZpYSBlbCA8c3Ryb25nPmZhY3RvciB6PC9zdHJvbmc+LlwiLFxuXHRcIkBASGlsbHNoYWRlX1BpeGVsLVNpemUtRmFjdG9yX3RhZzNAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyDDqXMgdsOgbGlkIHF1YW4gZWwgdGlwdXMgPHN0cm9uZz5Fc2NhbGF0PC9zdHJvbmc+IMOpcyA8c3Ryb25nPkFqdXN0YXQ8L3N0cm9uZz4uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLDAyNC5cIixcblx0XCJAQEhpbGxzaGFkZV9QaXhlbC1TaXplLVBvd2VyX3RhZzBAQFwiOiBcIkxhIHBvdMOobmNpYSBkZSBtaWRhIGRlIHDDrXhlbCB0w6kgZW4gY29tcHRlIGVscyBjYW52aXMgZCdhbHRpdHVkIChvIGVzY2FsYSkgYSBtZXN1cmEgcXVlIGVsIHZpc29yIGFtcGxpYSBpIHJlZHVlaXggbGEgdmlzdWFsaXR6YWNpw7MgZGVsIG1hcGEuIMOJcyBsJ2V4cG9uZW50IGFwbGljYXQgYWwgdGVybWUgZGUgbWlkYSBkZSBww614ZWwgYSBsJ2VxdWFjacOzIHF1ZSBjb250cm9sYSBsYSB2ZWxvY2l0YXQgYSBxdcOoIGNhbnZpYSBlbCA8c3Ryb25nPmZhY3RvciB6PC9zdHJvbmc+IHBlciBldml0YXIgdW5hIHDDqHJkdWEgZGUgcmVsbGV1IHNpZ25pZmljYXRpdmEuXCIsXG5cdFwiQEBIaWxsc2hhZGVfUGl4ZWwtU2l6ZS1Qb3dlcl90YWczQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBub23DqXMgw6lzIHbDoGxpZCBxdWFuIGVsIHRpcHVzIDxzdHJvbmc+RXNjYWxhdDwvc3Ryb25nPiDDqXMgPHN0cm9uZz5BanVzdGF0PC9zdHJvbmc+LiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMCw2NjQuXCIsXG5cdFwiQEBIaWxsc2hhZGVfUmFzdGVyX3RhZzBAQFwiOiBcIkRhdGFzZXQgZCdlbGV2YWNpw7MgZCdlbnRyYWRhLlwiLFxuXHRcIkBASGlsbHNoYWRlX1NjYWxpbmdfdGFnMEBAXCI6IFwiRWwgcmVzdWx0YXQgb21icmVqYXQgcydlc2NhbGEgZGUgbWFuZXJhIGRpbsOgbWljYSBtaXRqYW7Dp2FudCBsJ2FqdXN0IGRlbCBmYWN0b3IgeiBhbWIgdW5hIGRlIGxlcyBkdWVzIG9wY2lvbnMgc2Vnw7xlbnRzOlwiLFxuXHRcIkBASGlsbHNoYWRlX1NjYWxpbmdfdGFnMUBAXCI6IFwiQWp1c3RhdDogcydhcGxpY2EgYSB1biBhanVzdCBubyBsaW5lYWwgZW4gcXXDqCBzJ3V0aWxpdHplbiBlbHMgdmFsb3JzIHBlciBkZWZlY3RlIDxzdHJvbmc+UG90w6huY2lhIGRlIG1pZGEgZGUgcMOteGVsPC9zdHJvbmc+IGkgPHN0cm9uZz5GYWN0b3IgZGUgbWlkYSBkZSBww614ZWw8L3N0cm9uZz4sIHF1ZSB0ZW5lbiBlbiBjb21wdGUgdW5hIMOgbXBsaWEgdmFyaWV0YXQgZGUgY2FudmlzIGQnYWx0aXR1ZCAoZXNjYWxhKSBhIG1pZGEgcXVlIGxhIGltYXRnZSBzJ2Fjb3N0YSBpIHMnYWxsdW55YS4gRWwgcGFyw6BtZXRyZSA8c3Ryb25nPkFqdXN0YXQ8L3N0cm9uZz4gZXMgcmVjb21hbmEgcXVhbiBzJ3V0aWxpdHphIHVuIGRhdGFzZXQgZGUgdG90IGVsIG3Ds24uXCIsXG5cdFwiQEBIaWxsc2hhZGVfU2NhbGluZ190YWc4QEBcIjogXCJDYXA6IG5vIHMnYXBsaWNhIGNhcCBlc2NhbGEuIMOJcyBpZGVhbCBwZXIgYSB1biBkYXRhc2V0IHLDoHN0ZXIgw7puaWMgcXVlIGNvYnJlaXggdW5hIMOgcmVhIGxvY2FsLiBObyBlcyByZWNvbWFuYSBwZXIgYSBkYXRhc2V0cyBkZSB0b3QgZWwgbcOzbiBhbWIgZ3JhbnMgdmFyaWFjaW9ucyBkJ2VsZXZhY2nDsyBvIG1hcGVzIG11bHRpZXNjYWxhLCBqYSBxdWUgcHJvZHVpcmlhIHVuIHJlbGxldSBkZWwgdGVycmVueSBhbWIgcG9jYSB2YXJpYWNpw7MgYSBlc2NhbGVzIHBldGl0ZXMuXCIsXG5cdFwiQEBIaWxsc2hhZGVfWi1GYWN0b3JfdGFnMEBAXCI6IFwiRWwgZmFjdG9yIHogw6lzIHVuIGZhY3RvciBkJ2VzY2FsYSBxdWUgcyd1dGlsaXR6YSBwZXIgY29udmVydGlyIGVscyB2YWxvcnMgZCdlbGV2YWNpw7MgYW1iIGR1ZXMgZmluYWxpdGF0czpcIixcblx0XCJAQEhpbGxzaGFkZV9aLUZhY3Rvcl90YWcxQEBcIjogXCJDb252ZXJ0aXIgbGVzIHVuaXRhdHMgZCdlbGV2YWNpw7MgKGNvbSBhcmEgbWV0cmVzIG8gcGV1cykgYSBsZXMgdW5pdGF0cyBkZSBsYSBjb29yZGVuYWRhIGhvcml0em9udGFsIGRlbCBkYXRhc2V0LCBxdWUgcG9kZW4gc2VyIHBldXMsIG1ldHJlcyBvIGdyYXVzLlwiLFxuXHRcIkBASGlsbHNoYWRlX1otRmFjdG9yX3RhZzJAQFwiOiBcIkFmZWdpciBleGFnZXJhY2nDsyB2ZXJ0aWNhbCBwZXIgYWNvbnNlZ3VpciB1biBlZmVjdGUgdmlzdWFsLlwiLFxuXHRcIkBASW50X0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQEludF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBASW50X0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBJbnRfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBJbnRfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQEludF9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBJbnRfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBASW50X0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBASW50X0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBASW50X0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEludF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQEludF9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIGVzIGNvbnZlcnRpcsOgIGVuIHVuIGVudGVyLlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtSXJyZWd1bGFyLURhdGFfQ2VsbHNpemVfdGFnMEBAXCI6IFwiTGEgbWlkYSBkZSBjZWzCt2xhIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEgZXMgZGV0ZWN0YXLDoCBhdXRvbcOgdGljYW1lbnQsIHBlcsOyIGhvIHBvZGV1IGNhbnZpYXIuIFRvdCBpIHF1ZSBsYSBtaWRhIGRlIGxhIGNlbMK3bGEgZXMgcG90IGNhbnZpYXIsIGwnZXh0ZW5zacOzIGRlbCBkYXRhc2V0IHLDoHN0ZXIgZXMgbWFudGluZHLDoC5cIixcblx0XCJAQEludGVycG9sYXRlLUlycmVndWxhci1EYXRhX0lucHV0LVNhbXBsZXNfdGFnMEBAXCI6IFwiRGFkZXMgZGUgcHVudHMgZCdlbnRyYWRhLlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtSXJyZWd1bGFyLURhdGFfSW50ZXJwb2xhdGlvbi1NZXRob2RfdGFnMEBAXCI6IFwiSGkgaGEgcXVhdHJlIG3DqHRvZGVzIGRlIHJlbW9zdHJlaWcgcGVyIGEgYXF1ZXN0YSBmdW5jacOzOlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtSXJyZWd1bGFyLURhdGFfSW50ZXJwb2xhdGlvbi1NZXRob2RfdGFnMUBAXCI6IFwiPHN0cm9uZz5EaXN0w6BuY2lhIGludmVyc2EgcG9uZGVyYWRhPC9zdHJvbmc+OiBkZXRlcm1pbmEgZWxzIHZhbG9ycyBkZSBjZWzCt2xhIG1pdGphbsOnYW50IHVuYSBjb21iaW5hY2nDsyBwb25kZXJhZGEgZGUgbWFuZXJhIGxpbmVhbCBkJ3VuIGNvbmp1bnQgZGUgcHVudHMgbyBjZWzCt2xlcyBkZSBtb3N0cmEuIExhIGZ1bmNpw7MgZGUgcG9uZGVyYWNpw7Mgw6lzIGxhIGludmVyc2EgZGUgbGEgZGlzdMOgbmNpYSBkZXMgZGUgbGVzIGNlbMK3bGVzIG8gZWxzIHB1bnRzIGNvbmVndXRzLlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtSXJyZWd1bGFyLURhdGFfSW50ZXJwb2xhdGlvbi1NZXRob2RfdGFnM0BAXCI6IFwiPHN0cm9uZz5TaW1wbGlmaWNhY2nDsyBsaW5lYWw8L3N0cm9uZz46IHV0aWxpdHphIHVuYSB4YXJ4YSBpcnJlZ3VsYXIgdHJpYW5ndWxhciBkZXMgZGVscyBwdW50cyBjZW50cmFscyBkZSBjYWRhIGNlbMK3bGEgZGVsIHLDoHN0ZXIgaXJyZWd1bGFyIHBlciBpbnRlcnBvbGFyIHVuYSBzdXBlcmbDrWNpZSBxdWUsIGFsZXNob3JlcywgZXMgY29udmVydGVpeCBlbiB1biByw6BzdGVyIHJlZ3VsYXIuXCIsXG5cdFwiQEBJbnRlcnBvbGF0ZS1JcnJlZ3VsYXItRGF0YV9JbnRlcnBvbGF0aW9uLU1ldGhvZF90YWc1QEBcIjogXCI8c3Ryb25nPlZlw60gbmF0dXJhbDwvc3Ryb25nPjogY2VyY2EgZWwgc3ViY29uanVudCBtw6lzIHByb3BlciBkZSBsZXMgbW9zdHJlcyBkJ2VudHJhZGEgYSB1biBwdW50IGRlIGNvbnN1bHRhIGkgaGkgYXBsaWNhIHBvbmRlcmFjaW9ucyBiYXNhZGVzIGVuIMOgcmVlcyBwcm9wb3JjaW9uYWRlcyBwZXIgaW50ZXJwb2xhciB1biB2YWxvci5cIixcblx0XCJAQEludGVycG9sYXRlLUlycmVndWxhci1EYXRhX0ludGVycG9sYXRpb24tTWV0aG9kX3RhZzdAQFwiOiBcIjxzdHJvbmc+VmXDrSBtw6lzIHByb3Blcjwvc3Ryb25nPjogY2FsY3VsYSBlbCB2YWxvciBkZWwgcMOteGVsIG1pdGphbsOnYW50IGVsIHDDrXhlbCBtw6lzIHByb3Blci4gU2kgbm8gZXhpc3RlaXggY2FwIHDDrXhlbCBkJ29yaWdlbiwgbm8gZXMgcG9kcsOgIGNyZWFyIGNhcCBww614ZWwgbm91IGEgbGEgc29ydGlkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBJbnRlcnBvbGF0ZS1JcnJlZ3VsYXItRGF0YV9TZWFyY2gtUmFkaXVzX3RhZzBAQFwiOiBcIklkZW50aWZpY2EgZWwgbm9tYnJlIGRlIHDDrXhlbHMgcXVlIHMnaW5jbG91cmFuIHBlciBhbCBtw6h0b2RlIGRlIHJlbW9zdHJlaWcgc2VsZWNjaW9uYXQuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyBkZSAkezN9IHDDrXhlbHMuXCIsXG5cdFwiQEBJbnRlcnBvbGF0ZS1JcnJlZ3VsYXItRGF0YV9WYWx1ZS1GaWVsZF90YWcwQEBcIjogXCJTaSBzZWxlY2Npb25ldSB1bmEgY2xhc3NlIGQnZW50aXRhdCBkZSBwdW50IGNvbSBhIGVudHJhZGEsIGhhdXJldSBkJ2lkZW50aWZpY2FyIGVsIGNhbXAgYSBsYSB0YXVsYSBkJ2F0cmlidXRzIGFtYiBlbCB2YWxvciBkZWxzIHB1bnRzXCIsXG5cdFwiQEBJcy1OdWxsX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQElzLU51bGxfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQElzLU51bGxfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQElzLU51bGxfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBJcy1OdWxsX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBJcy1OdWxsX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQElzLU51bGxfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBASXMtTnVsbF9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQElzLU51bGxfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBJcy1OdWxsX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQElzLU51bGxfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBJcy1OdWxsX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBxdWUgcydlc3TDoCBwcm92YW50IHBlciBpZGVudGlmaWNhciBsZXMgY2VswrdsZXMgcXVlIHNvbiAke05vRGF0YX0gKG51bMK3bGVzKS5cIixcblx0XCJAQElzLU51bGxfUmFzdGVyX3RhZzFAQFwiOiBcIkwnZW50cmFkYSBwb3Qgc2VyIGRlIHRpcHVzIGVudGVyIG8gcHVudCBmbG90YW50LlwiLFxuXHRcIkBAS2V5LU1ldGFkYXRhX0JhbmQtTmFtZXNfdGFnMEBAXCI6IFwiUyd1dGlsaXR6YSBwZXIgc3Vic3RpdHVpciBlbHMgbm9tcyBkZSBiYW5kYSBkJ3VuIHLDoHN0ZXIuIMOJcyB1bmEgY2FkZW5hIHNlcGFyYWRhIHBlciBjb21lcyBxdWUgcmVwcmVzZW50YSBub21zIGRlIGJhbmRhIGFjdHVhbGl0emF0cy5cIixcblx0XCJAQEtleS1NZXRhZGF0YV9CYW5kLU5hbWVzX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIMOpcyBvcGNpb25hbC5cIixcblx0XCJAQEtleS1NZXRhZGF0YV9NZXRhZGF0YS1KU09OX3RhZzBAQFwiOiBcIk1ldGFkYWRlcyBjbGF1IHF1ZSBzJ2luc2VyaXJhbiBhbCByw6BzdGVyIGRlIHNvcnRpZGEgaSBxdWUgZXMgZGVzY3JpdWVuIGNvbSB1bmEgY2FkZW5hIEpTT04gcXVlIHJlcHJlc2VudGEgdW5hIGNvbMK3bGVjY2nDsyBkZSBwYXJlbGxzIGNsYXUtdmFsb3IuIEEgY29udGludWFjacOzIGVzIG1vc3RyYSB1biBleGVtcGxlIGRlIGNhZGVuYSBKU09OIHF1ZSBlcyBwb3QgdXRpbGl0emFyIGNvbSB1bmEgZW50cmFkYSBhIGFxdWVzdGEgZnVuY2nDsy4gVG90ZXMgbGVzIGVudHJhZGVzIGQnYXF1ZXN0IHBhcsOgbWV0cmUgaGFuIGRlIHNlZ3VpciBlbCBtYXRlaXggZm9ybWF0LlwiLFxuXHRcIkBAS2V5LU1ldGFkYXRhX01ldGFkYXRhLUpTT05fdGFnMUBAXCI6IFwiQ2FkZW5hIEpTT04gcXVlIHJlcHJlc2VudGEgbWV0YWRhZGVzIGNsYXVcIixcblx0XCJAQEtleS1NZXRhZGF0YV9NZXRhZGF0YS1KU09OX3RhZzJAQFwiOiBcInsgXFxcIkNsb3VkQ292ZXJcXFwiOiA0LCBcXFwiQmFuZFByb3BlcnRpZXNcXFwiOlsgeyBcXFwiQmFuZE5hbWVcXFwiOiBcXFwiQmx1ZVxcXCIsIFxcXCJXYXZlbGVuZ3RoTWluXFxcIjogNDQ1LCBcXFwiV2F2ZWxlbmd0aE1heFxcXCI6IDUxNiB9LCB7IFxcXCJCYW5kTmFtZVxcXCI6IFxcXCJHcmVlblxcXCIsIFxcXCJXYXZlbGVuZ3RoTWluXFxcIjogNTA2LCBcXFwiV2F2ZWxlbmd0aE1heFxcXCI6IDU5NSB9LCBdfVwiLFxuXHRcIkBAS2V5LU1ldGFkYXRhX1Byb3BlcnR5LU5hbWVfdGFnMEBAXCI6IFwiTm9tIGRlIGxhIHByb3BpZXRhdCBjbGF1IGRlIG5pdmVsbCBkZWwgZGF0YXNldCBxdWUgc2Ugc3Vic3RpdHVpcsOgLlwiLFxuXHRcIkBAS2V5LU1ldGFkYXRhX1Jhc3Rlcl90YWcwQEBcIjogXCJEYXRhc2V0IHLDoHN0ZXIgbyBkZSBtb3NhaWMgcXVlIGNvbnTDqSBsZXMgbWV0YWRhZGVzIGNsYXUgcXVlIHZvbGV1IGluc2VyaXIgbyBzb2JyZXNjcml1cmUuXCIsXG5cdFwiQEBLZXktTWV0YWRhdGFfVmFsdWVfdGFnMEBAXCI6IFwiVmFsb3IgZGUgc3Vic3RpdHVjacOzIGRlIGxhIHByb3BpZXRhdCBjbGF1IGRlIG5pdmVsbCBkZWwgZGF0YXNldCBxdWUgdm9sZXUgZGVmaW5pci5cIixcblx0XCJAQExlYXN0LUNvc3QtUGF0aF9BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMEBAXCI6IFwiQXF1ZXN0IHBhcsOgbWV0cmUgc2ltdWxhIGwnaW5jcmVtZW50IGRlIGwnZXNmb3LDpyBwZXIgc3VwZXJhciBlbHMgY29zdG9zIGEgbWVzdXJhIHF1ZSBlbCBjb3N0IGFjdW11bGF0aXUgYXVnbWVudGEuIFMndXRpbGl0emEgcGVyIHJlcHJlc2VudGFyIGxhIGZhdGlnYSBkZWwgdmlhdGdlci4gRWwgY29zdCBhY3VtdWxhdGl1IGNyZWl4ZW50IHBlciBhcnJpYmFyIGEgdW5hIGNlbMK3bGEgZXMgbXVsdGlwbGljYSBwZXIgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBzJ2FmZWdlaXggYWwgY29zdCBwZXIgcGFzc2FyIGEgbGEgY2VswrdsYSBzZWfDvGVudC5cIixcblx0XCJAQExlYXN0LUNvc3QtUGF0aF9BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMUBAXCI6IFwiw4lzIHVuYSB2ZXJzacOzIG1vZGlmaWNhZGEgZCd1bmEgZsOzcm11bGEgZGUgdGlwdXMgZCdpbnRlcsOocyBjb21wb3N0IHF1ZSBzJ3V0aWxpdHphIHBlciBjYWxjdWxhciBlbCBjb3N0IGFwYXJlbnQgZGUgcGFzc2FyIHBlciB1bmEgY2VswrdsYS4gQSBtZXN1cmEgcXVlIGVsIHZhbG9yIGRlIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGF1Z21lbnRhLCB0YW1iw6kgaG8gZmEgZWwgY29zdCBkZSBsZXMgY2VswrdsZXMgcXVlIGVzIHZpc2l0ZW4gcG9zdGVyaW9ybWVudC4gQ29tIG3DqXMgYWx0YSDDqXMgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEsIG3DqXMgYWx0IMOpcyBlbCBjb3N0IHBlciBhcnJpYmFyIGEgbGEgY2VswrdsYSBzZWfDvGVudCwgcXVlIGVzIGNhbGN1bGEgcGVyIGEgY2FkYSBtb3ZpbWVudCBwb3N0ZXJpb3IuIEF0w6hzIHF1ZSBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSDDqXMgc2ltaWxhciBhIHVuYSB0YXhhIGNvbXBvc3RhIGkgcXVlIGVscyB2YWxvcnMgZGVsIGNvc3QgYWN1bXVsYXRpdSBhY29zdHVtZW4gYSBzZXIgbW9sdCBhbHRzLCBlcyByZWNvbWFuZW4gdGF4ZXMgZGUgcmVzaXN0w6huY2lhIGJhaXhlcywgY29tIGFyYSBkZSAwLDAwNSBvIG1lbnlzLCBzZWdvbnMgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1LlwiLFxuXHRcIkBATGVhc3QtQ29zdC1QYXRoX0FjY3VtdWxhdGl2ZS1Db3N0LVJlc2lzdGFuY2UtUmF0ZV90YWcyQEBcIjogXCJFbCB2YWxvciBoYSBkZSBzZXIgbcOpcyBncmFuIHF1ZSB6ZXJvLiBMYSBjYXBhY2l0YXQgcGVyIGRlZmVjdGUgw6lzIGFsIGxsaW5kYXIgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQExlYXN0LUNvc3QtUGF0aF9DYXBhY2l0eV90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSBjYXBhY2l0YXQgZGUgY29zdCBkZWwgdmlhdGdlciBwZXIgYSB1biBvcmlnZW4uIEVscyBjw6BsY3VscyBkZSBjb3N0IGNvbnRpbnVlbiBwZXIgYSBjYWRhIG9yaWdlbiBmaW5zIGEgYXNzb2xpciBsYSBjYXBhY2l0YXQgZXNwZWNpZmljYWRhLlwiLFxuXHRcIkBATGVhc3QtQ29zdC1QYXRoX0NhcGFjaXR5X3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciBtw6lzIGdyYW4gcXVlIHplcm8uIExhIGNhcGFjaXRhdCBwZXIgZGVmZWN0ZSDDqXMgYWwgbGxpbmRhciBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBATGVhc3QtQ29zdC1QYXRoX0Nvc3QtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIG5lY2Vzc2FyaSBxdWUgZGVmaW5laXggZWwgY29zdCBvIGxhIGltcGVkw6BuY2lhIGRlbCBtb3ZpbWVudCBwbGFuaW3DqHRyaWMgYSB0cmF2w6lzIGRlIGNhZGEgY2VswrdsYS4gRWwgdmFsb3IgZGUgY2FkYSB1YmljYWNpw7MgZGUgY2VswrdsYSByZXByZXNlbnRhIGxhIGRpc3TDoG5jaWEgZGUgY29zdCBwZXIgdW5pdGF0IHBlciBtb3VyZSdzIGEgdHJhdsOpcyBkZSBsYSBjZWzCt2xhLiBDYWRhIHZhbG9yIGQndWJpY2FjacOzIGRlIGNlbMK3bGEgZXMgbXVsdGlwbGljYSBwZXIgbGEgcmVzb2x1Y2nDsyBkZSBsYSBjZWzCt2xhIGkgdGFtYsOpIGVzIGNvbXBlbnNhIGVsIG1vdmltZW50IGRpYWdvbmFsIHBlciBvYnRlbmlyIGVsIGNvc3QgdG90YWwgZGUgcGFzc2FyIGEgdHJhdsOpcyBkZSBsYSBjZWzCt2xhLlwiLFxuXHRcIkBATGVhc3QtQ29zdC1QYXRoX0Nvc3QtUmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGVsIDxzdHJvbmc+csOgc3RlciBkZSBjb3N0b3M8L3N0cm9uZz4gcG9kZW4gc2VyIGVudGVycyBvIHB1bnRzIGZsb3RhbnRzLCBwZXLDsiBubyBwb2RlbiBzZXIgbmVnYXRpdXMgbmkgemVyby5cIixcblx0XCJAQExlYXN0LUNvc3QtUGF0aF9EZXN0aW5hdGlvbi1GaWVsZF90YWcwQEBcIjogXCJDYW1wIHV0aWxpdHphdCBwZXIgb2J0ZW5pciBlbHMgdmFsb3JzIGRlIGxlcyB1YmljYWNpb25zIGRlIGRlc3RpbmFjacOzLlwiLFxuXHRcIkBATGVhc3QtQ29zdC1QYXRoX0Rlc3RpbmF0aW9uLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgcXVlIGlkZW50aWZpY2EgZWxzIHDDrXhlbHMgZGVzIGRlbHMgcXVhbHMgZXMgZGV0ZXJtaW5hIGxhIHJ1dGEgZGUgbWVub3IgY29zdCBhIGwnb3JpZ2VuIG1lbnlzIGNvc3TDs3MuIEFxdWVzdGEgZW50cmFkYSBlc3TDoCBmb3JtYWRhIHBlciBww614ZWxzIHF1ZSB0ZW5lbiB2YWxvcnMgdsOgbGlkcywgaSBlbHMgcMOteGVscyByZXN0YW50cyBoYW4gZGUgdGVuaXIgYXNzaWduYXQgZWwgdmFsb3IgJHtOb0RhdGF9LiBFbHMgdmFsb3JzIGRlIDAgc8OzbiB2w6BsaWRzLlwiLFxuXHRcIkBATGVhc3QtQ29zdC1QYXRoX01heGltdW0tRGlzdGFuY2VfdGFnMEBAXCI6IFwiTGxpbmRhciBxdWUgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1IG5vIHBvZGVuIHN1cGVyYXIuIFNpIHVuYSBkaXN0w6BuY2lhIGRlIGNvc3QgYWN1bXVsYXRpdSBzdXBlcmEgYXF1ZXN0IHZhbG9yLCBlbCB2YWxvciBkZSBzb3J0aWRhIGRlIGxhIHViaWNhY2nDsyBkZSBsYSBjZWzCt2xhIHNlcsOgICR7Tm9EYXRhfS4gTGEgZGlzdMOgbmNpYSBtw6B4aW1hIGRlZmluZWl4IGwnZXh0ZW5zacOzIGRlIGxhIHF1YWwgZXMgY2FsY3VsZW4gbGVzIGRpc3TDoG5jaWVzIGRlIGNvc3QgYWN1bXVsYXRpdS4gTGEgZGlzdMOgbmNpYSBwZXIgZGVmZWN0ZSDDqXMgbGEgZGUgbCdleHRlbnNpw7MgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQExlYXN0LUNvc3QtUGF0aF9NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzBAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIHBlcm1ldCBjb250cm9sYXIgZWwgbW9kZSBkZSB2aWF0Z2UgbyBsYSBtYWduaXR1ZCBlbiB1biBvcmlnZW4uIENvbSBtYWpvciBzaWd1aSBlbCBtdWx0aXBsaWNhZG9yLCBtw6lzIGFsdCBzZXLDoCBlbCBjb3N0IGRlbCBtb3ZpbWVudCBhIHRyYXbDqXMgZGUgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBATGVhc3QtQ29zdC1QYXRoX011bHRpcGxpZXItdG8tQXBwbHktdG8tQ29zdHNfdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyBoYW4gZGUgc2VyIG3DqXMgZ3JhbnMgcXVlIHplcm8uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAxLlwiLFxuXHRcIkBATGVhc3QtQ29zdC1QYXRoX1BhdGgtVHlwZV90YWcwQEBcIjogXCJQYXJhdWxhIGNsYXUgcXVlIGRlZmluZWl4IGRlIHF1aW5hIG1hbmVyYSBzJ2ludGVycHJldGFyYW4gZWxzIHZhbG9ycyBpIGxlcyB6b25lcyBkZSBsZXMgZGFkZXMgZGUgZGVzdGluYWNpw7MgZCdlbnRyYWRhIGFscyBjw6BsY3VscyBkZSBydXRhIGRlIGNvc3Q6XCIsXG5cdFwiQEBMZWFzdC1Db3N0LVBhdGhfUGF0aC1UeXBlX3RhZzFAQFwiOiBcIjxzdHJvbmc+TCfDum5pYyBtaWxsb3I8L3N0cm9uZz46IHBlciBhIHRvdHMgZWxzIHDDrXhlbHMgZGUgbGVzIGRhZGVzIGRlIGRlc3RpbmFjacOzIGQnZW50cmFkYSwgbGEgcnV0YSBkZSBtZW5vciBjb3N0IGVzIGRlcml2YSBkZWwgcMOteGVsIGFtYiBlbCBtw61uaW0gZGUgcnV0ZXMgZGUgbWVub3IgY29zdCBhIGxlcyBjZWzCt2xlcyBkJ29yaWdlbi5cIixcblx0XCJAQExlYXN0LUNvc3QtUGF0aF9QYXRoLVR5cGVfdGFnM0BAXCI6IFwiPHN0cm9uZz5DYWRhIGNlbMK3bGE8L3N0cm9uZz46IHBlciBhIGNhZGEgcMOteGVsIGFtYiB2YWxvcnMgdsOgbGlkcyBhIGxlcyBkYWRlcyBkZSBkZXN0aW5hY2nDsyBkJ2VudHJhZGEsIGVzIGRldGVybWluYXLDoCB1bmEgcnV0YSBkZSBtZW5vciBjb3N0IGkgZXMgZGVzYXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIENhZGEgY2VswrdsYSBkZSBsZXMgZGFkZXMgZGUgZGVzdGluYWNpw7MgZCdlbnRyYWRhIGVzIHRyYWN0YXLDoCBkZSBtYW5lcmEgaW5kaXZpZHVhbCBpIGVzIGRldGVybWluYXLDoCB1bmEgcnV0YSBkZSBtZW5vciBjb3N0IHBlciBhIGNhZGEgY2VswrdsYSBkJ29yaWdlbi5cIixcblx0XCJAQExlYXN0LUNvc3QtUGF0aF9QYXRoLVR5cGVfdGFnNUBAXCI6IFwiPHN0cm9uZz5DYWRhIHpvbmE8L3N0cm9uZz46IHBlciBhIGNhZGEgem9uYSBkZSBsZXMgZGFkZXMgZGUgZGVzdGluYWNpw7MgZCdlbnRyYWRhLCBlcyBkZXRlcm1pbmFyw6AgdW5hIHJ1dGEgZGUgbWVub3IgY29zdCBpIGVzIGRlc2Fyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBMYSBydXRhIGRlIG1lbm9yIGNvc3QgcGVyIGEgY2FkYSB6b25hIGNvbWVuw6dhIGFsIHDDrXhlbCBhbWIgbGEgcG9uZGVyYWNpw7MgZGUgZGlzdMOgbmNpYSBkZSBtZW5vciBjb3N0IGEgbGEgem9uYS5cIixcblx0XCJAQExlYXN0LUNvc3QtUGF0aF9Tb3VyY2UtUmFzdGVyX3RhZzBAQFwiOiBcIkFxdWVzdCDDqXMgdW4gcsOgc3RlciBkJ2VudHJhZGEgbmVjZXNzYXJpIHF1ZSBpZGVudGlmaWNhIGxlcyBjZWzCt2xlcyBvIGxlcyB1YmljYWNpb25zIGRlcyBkZSBsZXMgcXVhbHMgcydoYSBjYWxjdWxhdCBsYSBkaXN0w6BuY2lhIGRlIG1lbm9yIGNvc3QgYWN1bXVsYXQgZGUgbGEgdWJpY2FjacOzIGRlIGNhZGEgY2VswrdsYSBkZSBzb3J0aWRhLlwiLFxuXHRcIkBATGVhc3QtQ29zdC1QYXRoX1N0YXJ0LUNvc3RfdGFnMEBAXCI6IFwiQ29zdCBpbmljaWFsIG9uIGNvbWVuw6dhcmFuIGVscyBjw6BsY3VscyBkZSBjb3N0b3MuIEFxdWVzdCBwYXLDoG1ldHJlIHBlcm1ldCBsJ2VzcGVjaWZpY2FjacOzIGRlbCBjb3N0IGZpeCBhc3NvY2lhdCBhIHVuIG9yaWdlbi4gRW4gbGxvYyBkZSBjb21lbsOnYXIgYW1iIHVuIGNvc3QgZGUgMCwgbCdhbGdvcml0bWUgZGUgY29zdCBobyBmYXLDoCBhbWIgZWwgdmFsb3IgZXNwZWNpZmljYXQuXCIsXG5cdFwiQEBMZWFzdC1Db3N0LVBhdGhfU3RhcnQtQ29zdF90YWcxQEBcIjogXCJFbCB2YWxvciBoYSBkZSBzZXIgemVybyBvIHN1cGVyaW9yLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMC5cIixcblx0XCJAQExlYXN0LUNvc3QtUGF0aF9UcmF2ZWwtRGlyZWN0aW9uX3RhZzBAQFwiOiBcIkRlZmluZWl4IGxhIGRpcmVjY2nDsyBkZWwgdmlhdGdlciBxdWFuIHMnYXBsaXF1ZW4gbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4uXCIsXG5cdFwiQEBMZWFzdC1Db3N0LVBhdGhfVHJhdmVsLURpcmVjdGlvbl90YWcxQEBcIjogXCI8c3Ryb25nPkRlcyBkZSBsJ29yaWdlbjwvc3Ryb25nPjogbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4gcydhcGxpY2FyYW4gY29tZW7Dp2FudCBwZXIgbCdvcmlnZW4gZCdlbnRyYWRhIGkgcGFzc2FudCBhIGxlcyBjZWzCt2xlcyBxdWUgbm8gc8OzbiBsYSBkJ29yaWdlbi4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBMZWFzdC1Db3N0LVBhdGhfVHJhdmVsLURpcmVjdGlvbl90YWczQEBcIjogXCI8c3Ryb25nPkZpbnMgYSBsJ29yaWdlbjwvc3Ryb25nPjogbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4gcydhcGxpY2FyYW4gY29tZW7Dp2FudCBwZXIgY2FkYSBjZWzCt2xhIHF1ZSBubyBzaWd1aSBsYSBkJ29yaWdlbiBpIHRvcm5hbnQgYSBsJ29yaWdlbiBkJ2VudHJhZGEuXCIsXG5cdFwiQEBMZWFzdC1Db3N0LVBhdGhfVHJhdmVsLURpcmVjdGlvbl90YWc1QEBcIjogXCJFc3BlY2lmaXF1ZXUgbGEgcGFyYXVsYSBjbGF1IDxzdHJvbmc+RGVzIGRlIGwnb3JpZ2VuPC9zdHJvbmc+IG8gPHN0cm9uZz5GaW5zIGEgbCdvcmlnZW48L3N0cm9uZz4sIHF1ZSBzJ2FwbGljYXLDoCBhIHRvdHMgZWxzIG9yw61nZW5zIG8gZXNwZWNpZmlxdWV1IHVuIGNhbXAgYWwgPHN0cm9uZz5yw6BzdGVyIGQnb3JpZ2VuPC9zdHJvbmc+IHF1ZSBjb250aW5ndWkgbGVzIHBhcmF1bGVzIGNsYXUgcGVyIGlkZW50aWZpY2FyIGxhIGRpcmVjY2nDsyBkZSB2aWF0Z2UgZGUgY2FkYSBvcmlnZW4uIEFxdWVzdCBjYW1wIGhhIGRlIGNvbnRlbmlyIGxhIGNhZGVuYSAke0ZST01fU09VUkNFfSBvICR7VE9fU09VUkNFfS5cIixcblx0XCJAQExlc3MtVGhhbl9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBMZXNzLVRoYW5fQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExlc3MtVGhhbl9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATGVzcy1UaGFuX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBATGVzcy1UaGFuX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBMZXNzLVRoYW5fQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATGVzcy1UaGFuX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQExlc3MtVGhhbl9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQExlc3MtVGhhbl9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQExlc3MtVGhhbl9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBMZXNzLVRoYW5fRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBMZXNzLVRoYW5fUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgcXVlIHMnZXN0w6AgcHJvdmFudCBwZXIgZGV0ZXJtaW5hciBzaSDDqXMgbWVub3IgcXVlIGxhIHNlZ29uYSBlbnRyYWRhLlwiLFxuXHRcIkBATGVzcy1UaGFuX1Jhc3Rlcl90YWcxQEBcIjogXCJVbiB2YWxvciBjb25zdGFudCBlcyBwb3QgdXRpbGl0emFyIGNvbSBhIGVudHJhZGEgcGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUsIHNlbXByZSBpIHF1YW4gZWwgcsOgc3RlciBlc3RpZ3VpIGVzcGVjaWZpY2F0IHBlciBhIGwnYWx0cmUgcGFyw6BtZXRyZS5cIixcblx0XCJAQExlc3MtVGhhbl9SYXN0ZXIyX3RhZzBAQFwiOiBcIkVudHJhZGEgcXVlIHMndXRpbGl0emFyw6AgcGVyIHByb3ZhciBxdWUgbGEgcHJpbWVyYSBlbnRyYWRhIMOpcyBtZW5vci5cIixcblx0XCJAQExlc3MtVGhhbl9SYXN0ZXIyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBATGVzcy1UaGFuLUVxdWFsX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQExlc3MtVGhhbi1FcXVhbF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATGVzcy1UaGFuLUVxdWFsX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBMZXNzLVRoYW4tRXF1YWxfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBMZXNzLVRoYW4tRXF1YWxfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExlc3MtVGhhbi1FcXVhbF9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBMZXNzLVRoYW4tRXF1YWxfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBATGVzcy1UaGFuLUVxdWFsX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBATGVzcy1UaGFuLUVxdWFsX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBATGVzcy1UaGFuLUVxdWFsX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQExlc3MtVGhhbi1FcXVhbF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQExlc3MtVGhhbi1FcXVhbF9SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBxdWUgcydlc3TDoCBwcm92YW50IHBlciBkZXRlcm1pbmFyIHNpIMOpcyBtZW5vciBvIGlndWFsIHF1ZSBsYSBzZWdvbmEgZW50cmFkYS5cIixcblx0XCJAQExlc3MtVGhhbi1FcXVhbF9SYXN0ZXJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBMZXNzLVRoYW4tRXF1YWxfUmFzdGVyMl90YWcwQEBcIjogXCJFbnRyYWRhIHF1ZSBzJ3V0aWxpdHphcsOgIHBlciBwcm92YXIgcXVlIGxhIHByaW1lcmEgZW50cmFkYSDDqXMgbWVub3IgbyBpZ3VhbC5cIixcblx0XCJAQExlc3MtVGhhbi1FcXVhbF9SYXN0ZXIyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBATG5fQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBATG5fQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExuX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBMbl9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQExuX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBMbl9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBMbl9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBMbl9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQExuX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBATG5fRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBATG5fRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBMbl9SYXN0ZXJfdGFnMEBAXCI6IFwiVmFsb3JzIGQnZW50cmFkYSBkZWxzIHF1YWxzIGVzIGNlcmNhcsOgIGVsIGxvZ2FyaXRtZSBuYXR1cmFsIChMbikuXCIsXG5cdFwiQEBMb2cxMF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBMb2cxMF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATG9nMTBfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExvZzEwX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBATG9nMTBfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExvZzEwX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExvZzEwX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQExvZzEwX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBATG9nMTBfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBMb2cxMF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBMb2cxMF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQExvZzEwX1Jhc3Rlcl90YWcwQEBcIjogXCJWYWxvcnMgZCdlbnRyYWRhIHBlciBhbHMgcXVhbHMgZXMgY2VyY2Fyw6AgZWwgbG9nYXJpdG1lIGRlIGJhc2UgMTAuXCIsXG5cdFwiQEBMb2cyX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQExvZzJfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExvZzJfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExvZzJfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBMb2cyX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBMb2cyX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExvZzJfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBATG9nMl9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQExvZzJfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBMb2cyX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQExvZzJfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBMb2cyX1Jhc3Rlcl90YWcwQEBcIjogXCJWYWxvcnMgZCdlbnRyYWRhIHBlciBhbHMgcXVhbHMgZXMgY2VyY2Fyw6AgZWwgbG9nYXJpdG1lIGRlIGJhc2UgMi5cIixcblx0XCJAQExvb2t1cF9GaWVsZF90YWcwQEBcIjogXCJDYW1wIHF1ZSBjb250w6kgZWxzIHZhbG9ycyBkZXNpdGphdHMgZGVsIG5vdSByw6BzdGVyLlwiLFxuXHRcIkBATG9va3VwX0ZpZWxkX3RhZzFAQFwiOiBcIkhhIGRlIHNlciBkZSB0aXB1cyBudW3DqHJpYy5cIixcblx0XCJAQExvb2t1cF9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIGNvbnTDqSB1biBjYW1wIGRlcyBkZWwgcXVhbCBlcyBjcmVhcsOgIHVuIG5vdSByw6BzdGVyLlwiLFxuXHRcIkBATG9va3VwX1Jhc3Rlcl90YWcxQEBcIjogXCJQb3Qgc2VyIGRlIHRpcHVzIGVudGVyIG8gcHVudCBmbG90YW50LlwiLFxuXHRcIkBATWFza19JbmNsdWRlZC1SYW5nZXNfdGFnMEBAXCI6IFwiRWxzIGludGVydmFscyBpbmNsb3NvcyBlcyBwb2RlbiBlc3BlY2lmaWNhciBwZXIgYSBjYWRhIGJhbmRhLiBQZXIgZmVyLWhvLCBlc3BlY2lmaXF1ZXUgdW4gdmFsb3IgbcOtbmltIGkgdW4gdmFsb3IgbcOgeGltOyB0b3RzIGVscyB2YWxvcnMgZm9yYSBkZSBsJ2ludGVydmFsIGVzIHJldG9ybmFyYW4gY29tICR7Tm9EYXRhfS4gVW4gcMOteGVsIHMnaW5jbG91IHNpIGVsIHNldSB2YWxvciBlcyB0cm9iYSBkaW5zIGRlIHF1YWxzZXZvbCBkZWxzIGludGVydmFscyBlc3BlY2lmaWNhdHMuIFBlciB0YW50LCBzaSBsYSBiYW5kYSAxIHTDqSB1biBpbnRlcnZhbCBkZSA1LTEwLCBsYSBiYW5kYSAyIHTDqSB1biBpbnRlcnZhbCBkZSAxNS0yMCBpIGVsIHZhbG9yIGRlbCBww614ZWwgZGUgbGEgYmFuZGEgMSDDqXMgOCwgYXF1ZXN0IHDDrXhlbCBubyBzJ2VtbWFzY2FyYXLDoC5cIixcblx0XCJAQE1hc2tfTm9EYXRhLUludGVycHJldGF0aW9uX3RhZzBAQFwiOiBcIkZhIHJlZmVyw6huY2lhIGEgbCdpbXBhY3RlIHF1ZSB0aW5kcmFuIGVscyA8c3Ryb25nPnZhbG9ycyAke05vRGF0YX08L3N0cm9uZz4gZW4gbGEgaW1hdGdlIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBNYXNrX05vRGF0YS1JbnRlcnByZXRhdGlvbl90YWczQEBcIjogXCJQb2RldSB0cmlhciBlbnRyZSBsZXMgZHVlcyBvcGNpb25zIHNlZ8O8ZW50czpcIixcblx0XCJAQE1hc2tfTm9EYXRhLUludGVycHJldGF0aW9uX3RhZzRAQFwiOiBcIjxzdHJvbmc+Q29pbmNpZGVpeCBhbWIgdG90czwvc3Ryb25nPjogZWxzIHZhbG9ycyAke05vRGF0YX0gcXVlIGVzcGVjaWZpcXVldSBwZXIgYSBjYWRhIGJhbmRhIGhhbiBkZSB0ZW5pciBsbG9jIGFsIG1hdGVpeCBww614ZWwgZGUgbGEgaW1hdGdlIGRlIHNvcnRpZGEgcXVlIGhhIGRlIGNvbnRlbmlyIGVsIHDDrXhlbCAke05vRGF0YX0uXCIsXG5cdFwiQEBNYXNrX05vRGF0YS1JbnRlcnByZXRhdGlvbl90YWc2QEBcIjogXCI8c3Ryb25nPkNvaW5jaWRlaXggYW1iIHF1YWxzZXZvbDwvc3Ryb25nPjogc2kgZWwgdmFsb3IgJHtOb0RhdGF9IHF1ZSBlc3BlY2lmaXF1ZXUgdMOpIGxsb2MgcGVyIGEgdW4gcMOteGVsIGQndW5hIGJhbmRhIGVzcGVjaWZpY2FkYSwgZWwgcMOteGVsIGRlIGxhIGltYXRnZSBkZSBzb3J0aWRhIHNlcsOgICR7Tm9EYXRhfS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBNYXNrX05vRGF0YS1WYWx1ZXNfdGFnMEBAXCI6IFwiRWxzIHZhbG9ycyBOb0RhdGEgZXMgcG9kZW4gZXNwZWNpZmljYXIgcGVyIGEgY2FkYSBiYW5kYS4gUGVyIGVzcGVjaWZpY2FyIG3DqXMgZCd1biB2YWxvciBwb2RldSBpbnRyb2R1aXIgdW5hIGxsaXN0YSBkZWxpbWl0YWRhIHBlciBlc3BhaXMuXCIsXG5cdFwiQEBNYXNrX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQE1pbnVzX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQE1pbnVzX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBNaW51c19DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATWludXNfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBNaW51c19DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATWludXNfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATWludXNfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBATWludXNfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBNaW51c19FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQE1pbnVzX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQE1pbnVzX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBATWludXNfUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZGUgbGEgcXVhbCBlcyByZXN0YXJhbiBlbHMgdmFsb3JzIGRlIGxhIHNlZ29uYSBlbnRyYWRhLlwiLFxuXHRcIkBATWludXNfUmFzdGVyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBATWludXNfUmFzdGVyMl90YWcwQEBcIjogXCJWYWxvcnMgZCdlbnRyYWRhIHF1ZSBzZSBzb3N0cmF1cmFuIGRlbHMgdmFsb3JzIGRlIGxhIHByaW1lcmEgZW50cmFkYS5cIixcblx0XCJAQE1pbnVzX1Jhc3RlcjJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBNTC1DbGFzc2lmeV9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIGVzIGNsYXNzaWZpY2Fyw6AgbWl0amFuw6dhbnQgbCdhbGdvcml0bWUgZGUgY2xhc3NpZmljYWNpw7MgZGUgbcOgeGltYSB2ZXJzZW1ibGFuw6dhLlwiLFxuXHRcIkBATUwtQ2xhc3NpZnlfU2lnbmF0dXJlLUZpbGUtb3ItVVJMX3RhZzBAQFwiOiBcIkZpdHhlciBkZSBzaWduYXR1cmEgJHsuZ3NnfS5cIixcblx0XCJAQE1vZF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBNb2RfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQE1vZF9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATW9kX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBATW9kX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBNb2RfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATW9kX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQE1vZF9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQE1vZF9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQE1vZF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBNb2RfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBNb2RfUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZGVsIG51bWVyYWRvci5cIixcblx0XCJAQE1vZF9SYXN0ZXJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBNb2RfUmFzdGVyMl90YWcwQEBcIjogXCJFbnRyYWRhIGRlbCBkZW5vbWluYWRvci5cIixcblx0XCJAQE1vZF9SYXN0ZXIyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBATW9zYWljLVJhc3RlcnNfT3BlcmF0aW9uX3RhZzBAQFwiOiBcIlJlc29sZXUgcXVhbHNldm9sIGNvbmZsaWN0ZSBzaSB0ZW5pdSBwYXJ0cyBkZSBkdWVzIG8gbcOpcyBpbWF0Z2VzIHF1ZSBzZSBzdXBlcnBvc2VuLiBBbGd1bmVzIGRlIGxlcyBvcGNpb25zIHPDs246XCIsXG5cdFwiQEBNb3NhaWMtUmFzdGVyc19PcGVyYXRpb25fdGFnMUBAXCI6IFwiPHN0cm9uZz5Db21iaW5hY2nDszwvc3Ryb25nPjogcGVyIGNhbGN1bGFyIGkgbW9zdHJhciB1bmEgbWl0amFuYSBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMsIGF0b3JndWV1IG3DqXMgcGVzIGFscyBww614ZWxzIG3DqXMgcHJvcGVycyBhIGxlcyBpbWF0Z2VzIHZlw69uZXMgcGVycXXDqCBsYSBzb3J0aWRhIHNpZ3VpIHVuYSBpbWF0Z2UgbcOpcyBzdWF1LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQE1vc2FpYy1SYXN0ZXJzX09wZXJhdGlvbl90YWczQEBcIjogXCI8c3Ryb25nPlByaW1lcmE8L3N0cm9uZz46IG1vc3RyZXUgZWxzIHDDrXhlbHMgZGUgbGEgcHJpbWVyYSBpbWF0Z2UgYSBsYSBsbGlzdGEgZCdpbWF0Z2VzIHF1ZSBzZSBzdXBlcnBvc2VuIGEgdW5hIMOgcmVhIGRldGVybWluYWRhLlwiLFxuXHRcIkBATW9zYWljLVJhc3RlcnNfT3BlcmF0aW9uX3RhZzVAQFwiOiBcIjxzdHJvbmc+w5psdGltYTwvc3Ryb25nPjogbW9zdHJldSBlbHMgcMOteGVscyBkZSBsJ8O6bHRpbWEgaW1hdGdlIGEgbGEgbGxpc3RhIGQnaW1hdGdlcyBxdWUgc2Ugc3VwZXJwb3NlbiBhIHVuYSDDoHJlYSBkZXRlcm1pbmFkYS5cIixcblx0XCJAQE1vc2FpYy1SYXN0ZXJzX09wZXJhdGlvbl90YWc3QEBcIjogXCI8c3Ryb25nPk3DoHhpbTwvc3Ryb25nPjogbW9zdHJldSBlbCBww614ZWwgYW1iIGVsIHZhbG9yIG3DqXMgYWx0IGRlIHRvdGVzIGxlcyBjYXBlcyBzdXBlcnBvc2FkZXMuIEFtYiBhcXVlc3RhIG9wY2nDsywgbm8gdGVuaXUgY2FwIGdhcmFudGlhIGRlIHZpc3VhbGl0emFjacOzIGRlbHMgcMOteGVscyBkJ3VuYSBzb2xhIGltYXRnZSBhIGwnw6ByZWEgc3VwZXJwb3NhZGEsIHNpbsOzIGQndW5hIGNvbWJpbmFjacOzIGRlIHRvdGVzIGxlcyBjYXBlcyBwb3NzaWJsZXMuXCIsXG5cdFwiQEBNb3NhaWMtUmFzdGVyc19PcGVyYXRpb25fdGFnOUBAXCI6IFwiPHN0cm9uZz4gTWl0amFuYTwvc3Ryb25nPjogY2FsY3VsZXUgaSBtb3N0cmV1IHVuYSBtaXRqYW5hIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cy5cIixcblx0XCJAQE1vc2FpYy1SYXN0ZXJzX09wZXJhdGlvbl90YWcxMUBAXCI6IFwiPHN0cm9uZz5Nw61uaW08L3N0cm9uZz46IG1vc3RyZXUgZWwgcMOteGVsIGFtYiBlbCB2YWxvciBtw6lzIGJhaXggZGUgdG90ZXMgbGVzIGNhcGVzIHN1cGVycG9zYWRlcy4gQW1iIGFxdWVzdGEgb3BjacOzLCBubyB0ZW5pdSBjYXAgZ2FyYW50aWEgZGUgdmlzdWFsaXR6YWNpw7MgZGVscyBww614ZWxzIGQndW5hIHNvbGEgaW1hdGdlIGEgbCfDoHJlYSBzdXBlcnBvc2FkYSwgc2luw7MgZCd1bmEgY29tYmluYWNpw7MgZGUgdG90ZXMgbGVzIGNhcGVzIHBvc3NpYmxlcy5cIixcblx0XCJAQE1vc2FpYy1SYXN0ZXJzX1Jhc3RlcnNfdGFnMEBAXCI6IFwiU2VsZWNjaW9uZXUgZWxzIHLDoHN0ZXJzIHF1ZSB2b2xldSB0ZXNzZWzCt2xhciBqdW50cyBwZXIgZm9ybWFyIHVuYSBpbWF0Z2UuXCIsXG5cdFwiQEBORFZJX0luZnJhcmVkLUJhbmQtSURfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBsJ0lEIGRlIGJhbmRhIHF1ZSByZXByZXNlbnRhIGxhIHBhcnQgaW5mcmFyb2phIHByb3BlcmEgZGUgbCdlc3BlY3RyZSBlbGVjdHJvbWFnbsOodGljLlwiLFxuXHRcIkBATkRWSV9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBtdWx0aWVzcGVjdHJhbCBkJ2VudHJhZGEuXCIsXG5cdFwiQEBORFZJX1NjaWVudGlmaWMtT3V0cHV0X3RhZzBAQFwiOiBcIkVscyB2YWxvcnMgZGUgc29ydGlkYSBlcyB0cm9iYXJhbiBlbiBsJ2ludGVydmFsIGRlIC0xLDAgYSAxLDAsIHF1ZSBzJ3V0aWxpdHphIGVuIG1vbHRlcyBhcGxpY2FjaW9ucyBjaWVudMOtZmlxdWVzLlwiLFxuXHRcIkBATkRWSV9WaXNpYmxlLUJhbmQtSURfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBsJ0lEIGRlIGJhbmRhIHF1ZSByZXByZXNlbnRhIGxhIHBhcnQgdmVybWVsbGEgZGUgbCdlc3BlY3RyZSBlbGVjdHJvbWFnbsOodGljLlwiLFxuXHRcIkBATkRWSS1Db2xvcml6ZWRfQ29sb3ItUmFtcF90YWcwQEBcIjogXCJUcmlldSB1biBlc3F1ZW1hIGRlIGNvbG9ycyBwcmVkZWZpbml0IGRlIGxhIGxsaXN0YSBkZXNwbGVnYWJsZS5cIixcblx0XCJAQE5EVkktQ29sb3JpemVkX0NvbG9yLVNjaGVtZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGVsIHRpcHVzIGQnZXNxdWVtYSBkZSBjb2xvciBwZXIgYWNvbG9yaXIgbGEgc29ydGlkYSBkZSBsJ05EVkk6XCIsXG5cdFwiQEBORFZJLUNvbG9yaXplZF9Db2xvci1TY2hlbWUtVHlwZV90YWcxQEBcIjogXCJNYXBhIGRlIGNvbG9yOiB0cmlldSB1biBtYXBhIGRlIGNvbG9yIHByZWRlZmluaXQgZGUgbGEgbGxpc3RhIGRlc3BsZWdhYmxlLiBUYW1iw6kgcG9kZXUgY2VyY2FyIHVuIGZpdHhlciBkZSBtYXBhIGRlIGNvbG9yIHBlcnNpc3RlbnQgZXhpc3RlbnQuXCIsXG5cdFwiQEBORFZJLUNvbG9yaXplZF9Db2xvci1TY2hlbWUtVHlwZV90YWcyQEBcIjogXCJSYW1wYSBkZSBjb2xvcjogdHJpZXUgdW4gZXNxdWVtYSBkZSBjb2xvcnMgcHJlZGVmaW5pdCBkZSBsYSBsbGlzdGEgZGVzcGxlZ2FibGUuXCIsXG5cdFwiQEBORFZJLUNvbG9yaXplZF9Db2xvcm1hcF90YWcwQEBcIjogXCJUcmlldSB1biBtYXBhIGRlIGNvbG9yIHByZWRlZmluaXQgZGUgbGEgbGxpc3RhIGRlc3BsZWdhYmxlLiBUYW1iw6kgcG9kZXUgY2VyY2FyIHVuIGZpdHhlciBkZSBtYXBhIGRlIGNvbG9yIGV4aXN0ZW50LlwiLFxuXHRcIkBATkRWSS1Db2xvcml6ZWRfSW5mcmFyZWQtQmFuZC1JRF90YWcwQEBcIjogXCJFc3BlY2lmaWNhIGwnSUQgZGUgYmFuZGEgcXVlIHJlcHJlc2VudGEgbGEgcGFydCBpbmZyYXJvamEgcHJvcGVyYSBkZSBsJ2VzcGVjdHJlIGVsZWN0cm9tYWduw6h0aWMuXCIsXG5cdFwiQEBORFZJLUNvbG9yaXplZF9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBtdWx0aWVzcGVjdHJhbCBkJ2VudHJhZGEuXCIsXG5cdFwiQEBORFZJLUNvbG9yaXplZF9TY2llbnRpZmljLU91dHB1dF90YWcwQEBcIjogXCJFbHMgdmFsb3JzIGRlIHNvcnRpZGEgZXMgdHJvYmFyYW4gZW4gbCdpbnRlcnZhbCBkZSAtMSwwIGEgMSwwLCBxdWUgcyd1dGlsaXR6YSBlbiBtb2x0ZXMgYXBsaWNhY2lvbnMgY2llbnTDrWZpcXVlcy5cIixcblx0XCJAQE5EVkktQ29sb3JpemVkX1Zpc2libGUtQmFuZC1JRF90YWcwQEBcIjogXCJFc3BlY2lmaWNhIGwnSUQgZGUgYmFuZGEgcXVlIHJlcHJlc2VudGEgbGEgcGFydCB2ZXJtZWxsYSBkZSBsJ2VzcGVjdHJlIGVsZWN0cm9tYWduw6h0aWMuXCIsXG5cdFwiQEBOZWdhdGVfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBATmVnYXRlX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBOZWdhdGVfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQE5lZ2F0ZV9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQE5lZ2F0ZV9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATmVnYXRlX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQE5lZ2F0ZV9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBOZWdhdGVfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBOZWdhdGVfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBOZWdhdGVfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBATmVnYXRlX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBATmVnYXRlX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBxdWUgcydpbnZhbGlkYXLDoCAobXVsdGlwbGljYXQgcGVyIC0xKS5cIixcblx0XCJAQE5pYmJsZV9NYXNrLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgdXRpbGl0emF0IGNvbSBhIG3DoHNjYXJhLlwiLFxuXHRcIkBATmliYmxlX01hc2stUmFzdGVyX3RhZzFAQFwiOiBcIkxlcyBjZWzCt2xlcyBhbWIgZWwgdmFsb3IgTm9EYXRhIGVzIHJlYXNzaWduYXJhbiBhbCA8c3Ryb25nPnLDoHN0ZXI8L3N0cm9uZz4gZCdlbnRyYWRhLlwiLFxuXHRcIkBATmliYmxlX01hc2stUmFzdGVyX3RhZzRAQFwiOiBcIkVsIHLDoHN0ZXIgZGUgbcOgc2NhcmEgcG90IHNlciBkZSB0aXB1cyBlbnRlciBvIHB1bnQgZmxvdGFudC5cIixcblx0XCJAQE5pYmJsZV9OaWJibGUtTm9EYXRhLWNlbGxzX3RhZzBAQFwiOiBcIkRlZmluZWl4IHNpIGxlcyBjZWzCt2xlcyBOb0RhdGEgZGVsIHLDoHN0ZXIgZCdlbnRyYWRhIGNvbnRpbnVhcmFuIHRlbmludCBlbCB2YWxvciBOb0RhdGEgYWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBATmliYmxlX05pYmJsZS1Ob0RhdGEtY2VsbHNfdGFnMUBAXCI6IFwiPHN0cm9uZz5Obzwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgbGVzIGNlbMK3bGVzIE5vRGF0YSBkZWwgcsOgc3RlciBkJ2VudHJhZGEgY29udGludWVuIHRlbmludCBlbCB2YWxvciBOb0RhdGEgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQE5pYmJsZV9OaWJibGUtTm9EYXRhLWNlbGxzX3RhZzNAQFwiOiBcIjxzdHJvbmc+U8OtPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSBsZXMgY2VswrdsZXMgTm9EYXRhIGRlbCByw6BzdGVyIGQnZW50cmFkYSBpIGRpbnMgZGUgbGEgbcOgc2NhcmEgZXMgcG9kZW4gcmVhc3NpZ25hciBhIHZhbG9ycyBkZSBjZWzCt2xhIGRlIHNvcnRpZGEgdsOgbGlkcy5cIixcblx0XCJAQE5pYmJsZV9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgbmVjZXNzYXJpIHF1ZSBlcyByZWFzc2lnbmFyw6AuXCIsXG5cdFwiQEBOaWJibGVfUmFzdGVyX3RhZzFAQFwiOiBcIkVsIHLDoHN0ZXIgZCdlbnRyYWRhIHBvdCBzZXIgZGUgdGlwdXMgZW50ZXIgbyBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBOaWJibGVfVXNlLU5vRGF0YS12YWx1ZXMtaWYtdGhleS1hcmUtdGhlLW5lYXJlc3QtbmVpZ2hib3JfdGFnMEBAXCI6IFwiRGVmaW5laXggc2kgZWxzIHZhbG9ycyAke05vRGF0YX0gZGVsIHLDoHN0ZXIgZCdlbnRyYWRhIGVzIHBvZGVuIHJlYXNzaWduYXIgYSBsJ8OgcmVhIGRlZmluaWRhIHBlbCByw6BzdGVyIGRlIG3DoHNjYXJhLlwiLFxuXHRcIkBATmliYmxlX1VzZS1Ob0RhdGEtdmFsdWVzLWlmLXRoZXktYXJlLXRoZS1uZWFyZXN0LW5laWdoYm9yX3RhZzFAQFwiOiBcIjxzdHJvbmc+U8OtPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSBlbCB2YWxvciBkZWwgdmXDrSBtw6lzIHByb3BlciBzJ3V0aWxpdHphcsOgIHRhbnQgc2kgw6lzICR7Tm9EYXRhfSBjb20gdW4gYWx0cmUgdmFsb3IgZGUgZGFkZXMgZGVsIHLDoHN0ZXIgZCdlbnRyYWRhLiBFbHMgdmFsb3JzICR7Tm9EYXRhfSBkZWwgcsOgc3RlciBkJ2VudHJhZGEgZXMgcG9kZW4gcmVhc3NpZ25hciBhIMOgcmVlcyBkZWZpbmlkZXMgYSBsYSBtw6BzY2FyYSBzaSBzw7NuIGVsIHZlw60gbcOpcyBwcm9wZXIuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBATmliYmxlX1VzZS1Ob0RhdGEtdmFsdWVzLWlmLXRoZXktYXJlLXRoZS1uZWFyZXN0LW5laWdoYm9yX3RhZzNAQFwiOiBcIjxzdHJvbmc+Tm88L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIG5vbcOpcyBlbHMgdmFsb3JzIGRlIGRhZGVzIGVzIHBvZGVuIHJlYXNzaWduYXIgYSDDoHJlZXMgZGVmaW5pZGVzIGFsIHLDoHN0ZXIgZGUgbcOgc2NhcmEuIEVscyB2YWxvcnMgJHtOb0RhdGF9IGRlbCByw6BzdGVyIGQnZW50cmFkYSBubyBlcyBwb2RlbiByZWFzc2lnbmFyIGEgw6ByZWVzIGRlZmluaWRlcyBhbCByw6BzdGVyIGRlIG3DoHNjYXJhLCBlbmNhcmEgcXVlIHNpZ3VpbiBlbCB2ZcOtIG3DqXMgcHJvcGVyLlwiLFxuXHRcIkBATmliYmxlX1pvbmUtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZGUgem9uYSBkJ2VudHJhZGEuXCIsXG5cdFwiQEBOaWJibGVfWm9uZS1SYXN0ZXJfdGFnMUBAXCI6IFwiVW5hIHpvbmEgZXN0w6AgZm9ybWFkYSBwZXIgdG90ZXMgbGVzIGNlbMK3bGVzIGQndW4gcsOgc3RlciBxdWUgdGVuZW4gZWwgbWF0ZWl4IHZhbG9yLCBzaWd1aW4gbyBubyBjb250aWfDvGVzLiBMYSBjYXBhIGRlIGxhIHpvbmEgZCdlbnRyYWRhIGRlZmluZWl4IGxhIGZvcm1hLCBlbHMgdmFsb3JzIGkgbGVzIHViaWNhY2lvbnMgZGUgbGVzIHpvbmVzLiBFbCByw6BzdGVyIGRlIHpvbmEgcG90IHNlciBkZSB0aXB1cyBlbnRlciBvIHB1bnQgZmxvdGFudC5cIixcblx0XCJAQE5vdC1FcXVhbF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBOb3QtRXF1YWxfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQE5vdC1FcXVhbF9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATm90LUVxdWFsX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBATm90LUVxdWFsX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBOb3QtRXF1YWxfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATm90LUVxdWFsX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQE5vdC1FcXVhbF9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQE5vdC1FcXVhbF9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQE5vdC1FcXVhbF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBOb3QtRXF1YWxfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBOb3QtRXF1YWxfUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgcXVlIHMndXRpbGl0emFyw6AgcGVyIGNvbXBhcmFyIGxhIGRlc2lndWFsdGF0IGRlIGxhIHNlZ29uYSBlbnRyYWRhLlwiLFxuXHRcIkBATm90LUVxdWFsX1Jhc3Rlcl90YWcxQEBcIjogXCJVbiB2YWxvciBjb25zdGFudCBlcyBwb3QgdXRpbGl0emFyIGNvbSBhIGVudHJhZGEgcGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUsIHNlbXByZSBpIHF1YW4gZWwgcsOgc3RlciBlc3RpZ3VpIGVzcGVjaWZpY2F0IHBlciBhIGwnYWx0cmUgcGFyw6BtZXRyZS5cIixcblx0XCJAQE5vdC1FcXVhbF9SYXN0ZXIyX3RhZzBAQFwiOiBcIkVudHJhZGEgcXVlIHMndXRpbGl0emFyw6AgcGVyIGNvbXBhcmFyIGxhIGRlc2lndWFsdGF0IGRlIGxhIHByaW1lcmEgZW50cmFkYS5cIixcblx0XCJAQE5vdC1FcXVhbF9SYXN0ZXIyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAUGFuc2hhcnBlbmluZ19NdWx0aXNwZWN0cmFsX3RhZzBAQFwiOiBcIlLDoHN0ZXIgbXVsdGllc3BlY3RyYWwgcXVlIHZvbGV1IGVuZm9jYXIgYW1iIGxhIGJhbmRhIHBhbmNyb23DoHRpY2EuXCIsXG5cdFwiQEBQYW5zaGFycGVuaW5nX1BhbmNocm9tYXRpY190YWcwQEBcIjogXCJSw6BzdGVyIGQnYWx0YSByZXNvbHVjacOzIGQndW5hIGJhbmRhIHF1ZSBzJ3V0aWxpdHphcsOgIHBlciBhIGwnZW5mb2NhbWVudCBwYW5jcm9tw6B0aWMgZGVsIHLDoHN0ZXIgbXVsdGllc3BlY3RyYWwgZGUgcmVzb2x1Y2nDsyBpbmZlcmlvci5cIixcblx0XCJAQFBhbnNoYXJwZW5pbmdfUGFuc2hhcnBlbmluZy1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnYWxnb3JpdG1lIGQnZW5mb2NhbWVudCBwYW5jcm9tw6B0aWMgcXVlIHZvbGV1IHV0aWxpdHphci5cIixcblx0XCJAQFBhbnNoYXJwZW5pbmdfUGFuc2hhcnBlbmluZy1UeXBlX3RhZzFAQFwiOiBcIkJyb3ZleTogdXRpbGl0emEgbCdhbGdvcml0bWUgZGUgQnJvdmV5IGJhc2F0IGVuIGxhIG1vZGVsaXR6YWNpw7MgZXNwZWN0cmFsIHBlciBhIGxhIGZ1c2nDsyBkZSBkYWRlcy5cIixcblx0XCJAQFBhbnNoYXJwZW5pbmdfUGFuc2hhcnBlbmluZy1UeXBlX3RhZzJAQFwiOiBcIkVzcmk6IHV0aWxpdHphIGwnYWxnb3JpdG1lIGQnRXNyaSBiYXNhdCBlbiBsYSBtb2RlbGl0emFjacOzIGVzcGVjdHJhbCBwZXIgYSBsYSBmdXNpw7MgZGUgZGFkZXMuXCIsXG5cdFwiQEBQYW5zaGFycGVuaW5nX1BhbnNoYXJwZW5pbmctVHlwZV90YWczQEBcIjogXCJHcmFtLVNjaG1pZHQ6IHV0aWxpdHphIGwnYWxnb3JpdG1lIGQnZW5mb2NhbWVudCBlc3BlY3RyYWwgZGUgR3JhbS1TY2htaWR0IHBlciBlbmZvY2FyIGxlcyBkYWRlcyBtdWx0aWVzcGVjdHJhbHMuXCIsXG5cdFwiQEBQYW5zaGFycGVuaW5nX1BhbnNoYXJwZW5pbmctVHlwZV90YWc0QEBcIjogXCJJSFM6IHV0aWxpdHphIGwnZXNwYWkgZGUgY29sb3IgZCdpbnRlbnNpdGF0LCB0byBpIHNhdHVyYWNpw7MgcGVyIGEgbGEgZnVzacOzIGRlIGRhZGVzLlwiLFxuXHRcIkBAUGFuc2hhcnBlbmluZ19QYW5zaGFycGVuaW5nLVR5cGVfdGFnNUBAXCI6IFwiTWl0amFuYTogdXRpbGl0emEgbGEgbWl0amFuYSBkZWxzIHZhbG9ycyBkZSB2ZXJtZWxsLCB2ZXJkIGkgYmxhdSBpIGVsIHZhbG9yIGRlIHDDrXhlbHMgcGFuY3JvbcOgdGljcy5cIixcblx0XCJAQFBhbnNoYXJwZW5pbmdfV2VpZ2h0c190YWcwQEBcIjogXCJFc3BlY2lmaXF1ZXUgZWxzIHBlc29zIGRlIGxlcyBiYW5kZXMgdmVybWVsbGEsIHZlcmRhLCBibGF2YSBpIGluZnJhcm9qYS4gVG90cyBlbHMgdmFsb3JzIGhhbiBkZSB0cm9iYXItc2UgZW4gdW4gaW50ZXJ2YWwgZGUgMCBhIDEuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlX0FjY3VtdWxhdGl2ZS1Db3N0LVJlc2lzdGFuY2UtUmF0ZV90YWcwQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBzaW11bGEgbCdpbmNyZW1lbnQgZGUgbCdlc2ZvcsOnIHBlciBzdXBlcmFyIGVscyBjb3N0b3MgYSBtZXN1cmEgcXVlIGVsIGNvc3QgYWN1bXVsYXRpdSBhdWdtZW50YS4gUyd1dGlsaXR6YSBwZXIgcmVwcmVzZW50YXIgbGEgZmF0aWdhIGRlbCB2aWF0Z2VyLiBFbCBjb3N0IGFjdW11bGF0aXUgY3JlaXhlbnQgcGVyIGFycmliYXIgYSB1bmEgY2VswrdsYSBlcyBtdWx0aXBsaWNhIHBlciBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIHMnYWZlZ2VpeCBhbCBjb3N0IHBlciBwYXNzYXIgYSBsYSBjZWzCt2xhIHNlZ8O8ZW50LlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMUBAXCI6IFwiw4lzIHVuYSB2ZXJzacOzIG1vZGlmaWNhZGEgZCd1bmEgZsOzcm11bGEgZGUgdGlwdXMgZCdpbnRlcsOocyBjb21wb3N0IHF1ZSBzJ3V0aWxpdHphIHBlciBjYWxjdWxhciBlbCBjb3N0IGFwYXJlbnQgZGUgcGFzc2FyIHBlciB1bmEgY2VswrdsYS4gQSBtZXN1cmEgcXVlIGVsIHZhbG9yIGRlIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGF1Z21lbnRhLCB0YW1iw6kgaG8gZmEgZWwgY29zdCBkZSBsZXMgY2VswrdsZXMgcXVlIGVzIHZpc2l0ZW4gcG9zdGVyaW9ybWVudC4gQ29tIG3DqXMgYWx0YSDDqXMgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEsIG3DqXMgYWx0IMOpcyBlbCBjb3N0IHBlciBhcnJpYmFyIGEgbGEgY2VswrdsYSBzZWfDvGVudCwgcXVlIGVzIGNhbGN1bGEgcGVyIGEgY2FkYSBtb3ZpbWVudCBwb3N0ZXJpb3IuIEF0w6hzIHF1ZSBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSDDqXMgc2ltaWxhciBhIHVuYSB0YXhhIGNvbXBvc3RhIGkgcXVlIGVscyB2YWxvcnMgZGVsIGNvc3QgYWN1bXVsYXRpdSBhY29zdHVtZW4gYSBzZXIgbW9sdCBhbHRzLCBlcyByZWNvbWFuZW4gdGF4ZXMgZGUgcmVzaXN0w6huY2lhIGJhaXhlcywgY29tIGFyYSBkZSAwLDAwNSBvIG1lbnlzLCBzZWdvbnMgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1LlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMkBAXCI6IFwiRWwgdmFsb3IgaGEgZGUgc2VyIG3DqXMgZ3JhbiBxdWUgemVyby4gTGEgY2FwYWNpdGF0IHBlciBkZWZlY3RlIMOpcyBhbCBsbGluZGFyIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlX0NhcGFjaXR5X3RhZzBAQFwiOiBcIkRlZmluZWl4IGxhIGNhcGFjaXRhdCBkZSBjb3N0IGRlbCB2aWF0Z2VyIHBlciBhIHVuIG9yaWdlbi4gRWxzIGPDoGxjdWxzIGRlIGNvc3QgY29udGludWVuIHBlciBhIGNhZGEgb3JpZ2VuIGZpbnMgYSBhc3NvbGlyIGxhIGNhcGFjaXRhdCBlc3BlY2lmaWNhZGEuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlX0NhcGFjaXR5X3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciBtw6lzIGdyYW4gcXVlIHplcm8uIExhIGNhcGFjaXRhdCBwZXIgZGVmZWN0ZSDDqXMgYWwgbGxpbmRhciBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9Db3N0LVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgcXVlIGRlZmluZWl4IGVsIGNvc3QgbyBsYSBpbXBlZMOgbmNpYSBkZWwgbW92aW1lbnQgcGxhbmltw6h0cmljIGEgdHJhdsOpcyBkZSBjYWRhIGNlbMK3bGEuIEVsIHZhbG9yIGRlIGNhZGEgdWJpY2FjacOzIGRlIGNlbMK3bGEgcmVwcmVzZW50YSBsYSBkaXN0w6BuY2lhIGRlIGNvc3QgcGVyIHVuaXRhdCBwZXIgbW91cmUncyBhIHRyYXbDqXMgZGUgbGEgY2VswrdsYS4gQ2FkYSB2YWxvciBkJ3ViaWNhY2nDsyBkZSBjZWzCt2xhIGVzIG11bHRpcGxpY2EgcGVyIGxhIHJlc29sdWNpw7MgZGUgbGEgY2VswrdsYSBpIHRhbWLDqSBlcyBjb21wZW5zYSBlbCBtb3ZpbWVudCBkaWFnb25hbCBwZXIgb2J0ZW5pciBlbCBjb3N0IHRvdGFsIGRlIHBhc3NhciBhIHRyYXbDqXMgZGUgbGEgY2VswrdsYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2VfQ29zdC1SYXN0ZXJfdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyBkZWwgPHN0cm9uZz5yw6BzdGVyIGRlIGNvc3Rvczwvc3Ryb25nPiBwb2RlbiBzZXIgZW50ZXJzIG8gcHVudHMgZmxvdGFudHMsIHBlcsOyIG5vIHBvZGVuIHNlciBuZWdhdGl1cyBuaSB6ZXJvLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9ob3Jpem9udGFsZmFjdG9yX3RhZzBAQFwiOiBcIjxwPkRlZmluZWl4IGxhIHJlbGFjacOzIGVudHJlIGVsIGZhY3RvciBkZSBjb3N0IGhvcml0em9udGFsIGkgbCdhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IGhvcml0em9udGFsIChIUk1BKS48L3A+PHA+SGkgaGEgZGl2ZXJzb3MgZmFjdG9ycyBhbWIgbW9kaWZpY2Fkb3JzIHF1ZSBpZGVudGlmaXF1ZW4gdW4gZ3LDoGZpYyBkZSBmYWN0b3IgdmVydGljYWwgZGVmaW5pdC4gQSBtw6lzLCBlcyBwb3QgdXRpbGl0emFyIHVuYSB0YXVsYSBwZXIgY3JlYXIgdW4gZ3LDoGZpYyBwZXJzb25hbGl0emF0LiBFbHMgZ3LDoGZpY3Mgcyd1dGlsaXR6ZW4gcGVyIGlkZW50aWZpY2FyIGVsIGZhY3RvciB2ZXJ0aWNhbCB1dGlsaXR6YXQgcGVyIGNhbGN1bGFyIGVsIGNvc3QgdG90YWwgZGVsIG1vdmltZW50IGEgdW5hIGNlbMK3bGEgdmXDr25hLjwvcD48cD5BIGxlcyBleHBsaWNhY2lvbnMgc2Vnw7xlbnRzIHMndXRpbGl0emVuIGRvcyBhY3LDsm5pbXM6IEhGIGkgSFJNQS4gSEYgc2lnbmlmaWNhIFxcXCJmYWN0b3IgaG9yaXR6b250YWxcXFwiLCBxdWUgZGVmaW5laXggbGEgZGlmaWN1bHRhdCBob3JpdHpvbnRhbCBxdWUgcydleHBlcmltZW50YSBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIGxhIHNlZ8O8ZW50LiBIUk1BIHNpZ25pZmljYSBcXFwiYW5nbGUgZGUgbW92aW1lbnQgcmVsYXRpdSBob3JpdHpvbnRhbFxcXCIsIGkgaWRlbnRpZmljYSBsJ2FuZ2xlIGVudHJlIGxhIGRpcmVjY2nDsyBob3JpdHpvbnRhbCBkJ3VuYSBjZWzCt2xhIGkgbGEgZGlyZWNjacOzIGRlbCBtb3ZpbWVudC48L3A+PHA+RWxzIHRpcHVzIDxzdHJvbmc+RmFjdG9yIGhvcml0em9udGFsPC9zdHJvbmc+IHPDs246PC9wPjx1bD48bGk+PHN0cm9uZz5CaW5hcmk8L3N0cm9uZz46IGluZGljYSBxdWUsIHNpIEhSTUEgw6lzIGluZmVyaW9yIGEgbCdhbmdsZSBkZSB0YWxsLCBsJ0hGIGVzIGRlZmluZWl4IGVuIGVsIHZhbG9yIGFzc29jaWF0IGFtYiBlbCBmYWN0b3IgemVybzsgYWx0cmFtZW50LCDDqXMgaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkVuZGF2YW50PC9zdHJvbmc+OiBlc3RhYmxlaXggcXVlIG5vbcOpcyBlcyBwZXJtZXQgZWwgbW92aW1lbnQgY2FwIGVuZGF2YW50LiBMJ0hSTUEgaGEgZGUgc2VyIHN1cGVyaW9yIG8gaWd1YWwgYSAwIGkgaW5mZXJpb3IgYSA5MCBncmF1cyAoMCAmbHQ7PSBIUk1BICZsdDsgOTApLiBTaSBsJ0hSTUEgw6lzIHN1cGVyaW9yIGEgMCBpIGluZmVyaW9yIGEgNDUgZ3JhdXMsIGwnSEYgZGUgbGEgY2VswrdsYSBlcyBkZWZpbmVpeCBlbiBlbCB2YWxvciBhc3NvY2lhdCBhbCBmYWN0b3IgemVyby4gU2kgbCdIUk1BIMOpcyBzdXBlcmlvciBvIGlndWFsIGEgNDUgZ3JhdXMsIHMndXRpbGl0emEgZWwgdmFsb3IgbW9kaWZpY2Fkb3IgZGVsIHZhbG9yIGxhdGVyYWwuIEwnSEYgcGVyIGEgcXVhbHNldm9sIHZhbG9yIGQnSFJNQSBpZ3VhbCBvIHN1cGVyaW9yIGEgOTAgZXMgZGVmaW5laXggZW4gaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkxpbmVhbDwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgbCdIRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGRlIGwnSFJNQS48L2xpPjxsaT48c3Ryb25nPkxpbmVhbCBpbnZlcnM8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGwnSEYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBpbnZlcnNhIGRlIGwnSFJNQS48L2xpPjxsaT48c3Ryb25nPlRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIGVsIGZpdHhlciBkZSB0YXVsYSBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgZGVmaW5pciBlbCBncsOgZmljIGRlIGZhY3RvciBob3JpdHpvbnRhbCBlbXByYXQgcGVyIGRldGVybWluYXIgZWxzIEhGLjwvbGk+PC91bD48cD5FbHMgbW9kaWZpY2Fkb3JzIHBlciBhbHMgZmFjdG9ycyBob3JpdHpvbnRhbHMgc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkZhY3RvciB6ZXJvPC9zdHJvbmc+OiBmYWN0b3IgaG9yaXR6b250YWwgcXVlIGNhbCB1dGlsaXR6YXIgcXVhbiBIUk1BIMOpcyB6ZXJvLiBBcXVlc3QgZmFjdG9yIHBvc2ljaW9uYSBsYSBpbnRlcmNlcGNpw7MgXFxcInlcXFwiIHBlciBhIHF1YWxzZXZvbCBkZSBsZXMgZnVuY2lvbnMgZGUgZmFjdG9yIGhvcml0em9udGFsLjwvbGk+PGxpPjxzdHJvbmc+QW5nbGUgZGUgdGFsbDwvc3Ryb25nPjogZGVmaW5laXggbCdhbmdsZSBkJ0hSTUEgbcOpcyBlbmxsw6AgZGVsIHF1YWwgbCdIRiBlcyBkZWZpbmlyw6AgZW4gaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPlBlbmRlbnQ8L3N0cm9uZz46IGVzdGFibGVpeCBlbCBwZW5kZW50IGRlIGxhIGzDrW5pYSByZWN0YSB1dGlsaXR6YWRhIGFtYiBsZXMgcGFyYXVsZXMgY2xhdSBkZSBmYWN0b3IgaG9yaXR6b250YWwgPHN0cm9uZz5MaW5lYWw8L3N0cm9uZz4gaSA8c3Ryb25nPkxpbmVhbCBpbnZlcnM8L3N0cm9uZz4uIEVsIHBlbmRlbnQgcydlc3BlY2lmaWNhIGNvbSB1bmEgZnJhY2Npw7MgZGUgbGEgcHVqYWRhIHNvYnJlIGxhIGJhaXhhZGEgKHBlciBleGVtcGxlLCB1biBwZW5kZW50IGRlbCA0NSUgw6lzIDEvNDUsIHF1ZSBzJ2ludHJvZHVlaXggY29tIGEgMCwwMjIyMikuPC9saT48bGk+PHN0cm9uZz5WYWxvciBsYXRlcmFsPC9zdHJvbmc+OiBlc3RhYmxlaXggbCdIRiBxdWFuIGwnSFJNQSDDqXMgc3VwZXJpb3IgbyBpZ3VhbCBhIDQ1IGdyYXVzIGkgw6lzIGluZmVyaW9yIGEgOTAgZ3JhdXMgcXVhbiBzJ2VzcGVjaWZpY2EgbGEgcGFyYXVsYSBjbGF1IGRlIGZhY3RvciBob3JpdHpvbnRhbCA8c3Ryb25nPkVuZGF2YW50PC9zdHJvbmc+LjwvbGk+PGxpPjxzdHJvbmc+Tm9tIGRlIHRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIGVsIG5vbSBkZSBsYSB0YXVsYSBxdWUgZGVmaW5laXggbCdIRi48L2xpPjwvdWw+XCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlX0hvcml6b250YWwtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgcXVlIGRlZmluZWl4IGxhIGRpcmVjY2nDsyBob3JpdHpvbnRhbCBhIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2VfSG9yaXpvbnRhbC1SYXN0ZXJfdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyBkZWwgcsOgc3RlciBoYW4gZGUgc2VyIGVudGVycyBkZSAwIGEgMzYwLCBhbWIgMCBncmF1cyBhbCBub3JkIG8gY2FwIGEgbGEgcGFydCBzdXBlcmlvciBkZSBsYSBwYW50YWxsYSwgcXVlIGF1Z21lbnRpbiBlbiBzZW50aXQgaG9yYXJpLiBMZXMgw6ByZWVzIHBsYW5lcyBoYW4gZGUgdGVuaXIgYXNzaWduYXQgdW4gdmFsb3IgZGUgLTEuIEVscyB2YWxvcnMgZW4gY2FkYSB1YmljYWNpw7Mgcyd1dGlsaXR6YXJhbiBqdW50YW1lbnQgYW1iIGVsIDxzdHJvbmc+ZmFjdG9yIGhvcml0em9udGFsPC9zdHJvbmc+IHBlciBkZXRlcm1pbmFyIGVsIGNvc3QgaG9yaXR6b250YWwgcXVlIGVzIHByb2R1ZWl4IGVuIHBhc3NhciBkJ3VuYSBjZWzCt2xhIGEgbGVzIHZlw69uZXMuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlX01heGltdW0tRGlzdGFuY2VfdGFnMEBAXCI6IFwiTGxpbmRhciBxdWUgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1IG5vIHBvZGVuIHN1cGVyYXIuIFNpIHVuYSBkaXN0w6BuY2lhIGRlIGNvc3QgYWN1bXVsYXRpdSBzdXBlcmEgYXF1ZXN0IHZhbG9yLCBlbCB2YWxvciBkZSBzb3J0aWRhIGRlIGxhIHViaWNhY2nDsyBkZSBsYSBjZWzCt2xhIHNlcsOgIE5vRGF0YS4gTGEgZGlzdMOgbmNpYSBtw6B4aW1hIGRlZmluZWl4IGwnZXh0ZW5zacOzIGRlIGxhIHF1YWwgZXMgY2FsY3VsZW4gbGVzIGRpc3TDoG5jaWVzIGRlIGNvc3QgYWN1bXVsYXRpdS4gTGEgZGlzdMOgbmNpYSBwZXIgZGVmZWN0ZSDDqXMgbGEgZGUgbCdleHRlbnNpw7MgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2VfTXVsdGlwbGllci10by1BcHBseS10by1Db3N0c190YWcwQEBcIjogXCJNdWx0aXBsaWNhZG9yIHF1ZSBzJ2FwbGljYXLDoCBhbHMgdmFsb3JzIGRlbHMgY29zdG9zLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIHBlcm1ldCBjb250cm9sYXIgZWwgbW9kZSBkZSB2aWF0Z2UgbyBsYSBtYWduaXR1ZCBlbiB1biBvcmlnZW4uIENvbSBtYWpvciBzaWd1aSBlbCBtdWx0aXBsaWNhZG9yLCBtw6lzIGFsdCBzZXLDoCBlbCBjb3N0IGRlbCBtb3ZpbWVudCBhIHRyYXbDqXMgZGUgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzJAQFwiOiBcIkVscyB2YWxvcnMgaGFuIGRlIHNlciBtw6lzIGdyYW5zIHF1ZSB6ZXJvLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2VfTXVsdGlwbGllci10by1BcHBseS10by1Db3N0c190YWczQEBcIjogXCJQZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgZXMgcG9kZW4gdXRpbGl0emFyIHVuIHZhbG9yIG51bcOocmljIChkb2JsZSkgbyB1biBjYW1wIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlX1NvdXJjZS1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgbmVjZXNzYXJpIGRlIGxlcyB1YmljYWNpb25zIGQnb3JpZ2VuLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9Tb3VyY2UtUmFzdGVyX3RhZzFAQFwiOiBcIkFxdWVzdCDDqXMgdW4gcsOgc3RlciBxdWUgaWRlbnRpZmljYSBsZXMgY2VswrdsZXMgbyBsZXMgdWJpY2FjaW9ucyBkZXMgZGUgbGVzIHF1YWxzIHMnaGEgY2FsY3VsYXQgbGEgZGlzdMOgbmNpYSBkZSBtZW5vciBjb3N0IGFjdW11bGF0IGRlIGxhIHViaWNhY2nDsyBkZSBjYWRhIGNlbMK3bGEgZGUgc29ydGlkYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2VfU291cmNlLVJhc3Rlcl90YWcyQEBcIjogXCJQb3Qgc2VyIGRlIHRpcHVzIGVudGVyIG8gcHVudCBmbG90YW50LlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9TdGFydC1Db3N0X3RhZzBAQFwiOiBcIkNvc3QgaW5pY2lhbCBvbiBjb21lbsOnYXJhbiBlbHMgY8OgbGN1bHMgZGUgY29zdG9zLiBBcXVlc3QgcGFyw6BtZXRyZSBwZXJtZXQgbCdlc3BlY2lmaWNhY2nDsyBkZWwgY29zdCBmaXggYXNzb2NpYXQgYSB1biBvcmlnZW4uIEVuIGxsb2MgZGUgY29tZW7Dp2FyIGFtYiB1biBjb3N0IGRlIDAsIGwnYWxnb3JpdG1lIGRlIGNvc3QgaG8gZmFyw6AgYW1iIGVsIHZhbG9yIGVzcGVjaWZpY2F0LlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9TdGFydC1Db3N0X3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciB6ZXJvIG8gc3VwZXJpb3IuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9TdXJmYWNlLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIHF1ZSBkZWZpbmVpeCBlbHMgdmFsb3JzIGQnZWxldmFjacOzIGEgbGEgdWJpY2FjacOzIGRlIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2VfU3VyZmFjZS1SYXN0ZXJfdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyBzJ3V0aWxpdHplbiBwZXIgY2FsY3VsYXIgbGEgZGlzdMOgbmNpYSBkZSBzdXBlcmbDrWNpZSByZWFsIGNvYmVydGEgZW4gcGFzc2FyIGVudHJlIGNlbMK3bGVzLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9UcmF2ZWwtRGlyZWN0aW9uX3RhZzBAQFwiOiBcIkRlZmluZWl4IGxhIGRpcmVjY2nDsyBkZWwgdmlhdGdlciBxdWFuIHMnYXBsaXF1ZW4gbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4uXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlX1RyYXZlbC1EaXJlY3Rpb25fdGFnMUBAXCI6IFwiPHN0cm9uZz5EZXMgZGUgbCdvcmlnZW48L3N0cm9uZz46IGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGkgZWwgY29zdCBpbmljaWFsIGRlIGwnb3JpZ2VuIHMnYXBsaWNhcmFuIGNvbWVuw6dhbnQgcGVyIGwnb3JpZ2VuIGQnZW50cmFkYSBpIHBhc3NhbnQgYSBsZXMgY2VswrdsZXMgcXVlIG5vIHPDs24gbGEgZCdvcmlnZW4uIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZV9UcmF2ZWwtRGlyZWN0aW9uX3RhZzNAQFwiOiBcIjxzdHJvbmc+RmlucyBhIGwnb3JpZ2VuPC9zdHJvbmc+OiBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIGVsIGNvc3QgaW5pY2lhbCBkZSBsJ29yaWdlbiBzJ2FwbGljYXJhbiBjb21lbsOnYW50IHBlciBjYWRhIGNlbMK3bGEgcXVlIG5vIHNpZ3VpIGxhIGQnb3JpZ2VuIGkgdG9ybmFudCBhIGwnb3JpZ2VuIGQnZW50cmFkYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2VfVHJhdmVsLURpcmVjdGlvbl90YWc1QEBcIjogXCJFc3BlY2lmaXF1ZXUgbGEgcGFyYXVsYSBjbGF1IDxzdHJvbmc+RGVzIGRlIGwnb3JpZ2VuPC9zdHJvbmc+IG8gPHN0cm9uZz5GaW5zIGEgbCdvcmlnZW48L3N0cm9uZz4sIHF1ZSBzJ2FwbGljYXLDoCBhIHRvdHMgZWxzIG9yw61nZW5zIG8gZXNwZWNpZmlxdWV1IHVuIGNhbXAgYWwgPHN0cm9uZz5yw6BzdGVyIGQnb3JpZ2VuPC9zdHJvbmc+IHF1ZSBjb250aW5ndWkgbGVzIHBhcmF1bGVzIGNsYXUgcGVyIGlkZW50aWZpY2FyIGxhIGRpcmVjY2nDsyBkZSB2aWF0Z2UgZGUgY2FkYSBvcmlnZW4uIEFxdWVzdCBjYW1wIGhhIGRlIGNvbnRlbmlyIGxhIGNhZGVuYSAke0ZST01fU09VUkNFfSBvICR7VE9fU09VUkNFfS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2VfdmVydGljYWxmYWN0b3JfdGFnMEBAXCI6IFwiPHA+RGVmaW5laXggbGEgcmVsYWNpw7MgZW50cmUgZWwgZmFjdG9yIGRlIGNvc3QgdmVydGljYWwgaSBsJ2FuZ2xlIGRlIG1vdmltZW50IHJlbGF0aXUgdmVydGljYWwgKFZSTUEpLjwvcD48cD5IaSBoYSBkaXZlcnNvcyBmYWN0b3JzIGFtYiBtb2RpZmljYWRvcnMgcXVlIGlkZW50aWZpcXVlbiB1biBncsOgZmljIGRlIGZhY3RvciB2ZXJ0aWNhbCBkZWZpbml0LiBBIG3DqXMsIGVzIHBvdCB1dGlsaXR6YXIgdW5hIHRhdWxhIHBlciBjcmVhciB1biBncsOgZmljIHBlcnNvbmFsaXR6YXQuIEVscyBncsOgZmljcyBzJ3V0aWxpdHplbiBwZXIgaWRlbnRpZmljYXIgZWwgZmFjdG9yIHZlcnRpY2FsIHV0aWxpdHphdCBwZXIgY2FsY3VsYXIgZWwgY29zdCB0b3RhbCBkZWwgbW92aW1lbnQgYSB1bmEgY2VswrdsYSB2ZcOvbmEuPC9wPjxwPkEgbGVzIGV4cGxpY2FjaW9ucyBzZWfDvGVudHMgcyd1dGlsaXR6ZW4gZG9zIGFjcsOybmltczogVkYgaSBWUk1BLiBWRiBzaWduaWZpY2EgXFxcImZhY3RvciB2ZXJ0aWNhbFxcXCIsIHF1ZSBkZWZpbmVpeCBsYSBkaWZpY3VsdGF0IHZlcnRpY2FsIHF1ZSBzJ2V4cGVyaW1lbnRhIGVuIHBhc3NhciBkJ3VuYSBjZWzCt2xhIGEgbGEgc2Vnw7xlbnQuIFZSTUEgc2lnbmlmaWNhIFxcXCJhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IHZlcnRpY2FsXFxcIiwgaSBpZGVudGlmaWNhIGwnYW5nbGUgZCdpbmNsaW5hY2nDsyBlbnRyZSBsYSBjZWzCt2xhIGQnb3JpZ2VuLCBvIHByb2Nlc3NhbWVudCwgaSBsYSBjZWzCt2xhIGRlIGRlc3RpbmFjacOzLkVscyB0aXB1cyA8L3A+PHA+PHN0cm9uZz5GYWN0b3IgdmVydGljYWw8L3N0cm9uZz4gc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkJpbmFyaTwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUsIHNpIGVsIFZSTUEgw6lzIG1ham9yIHF1ZSBsJ2FuZ2xlIGRlIHRhbGwgYmFpeCBpIG1lbm9yIHF1ZSBsJ2FuZ2xlIGRlIHRhbGwgYWx0LCBlbCBWRiBlcyBkZWZpbmVpeCBlbiBlbCB2YWxvciBhc3NvY2lhdCBhbCBmYWN0b3IgemVybzsgYWx0cmFtZW50LCDDqXMgaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkxpbmVhbDwvc3Ryb25nPjogaW5kaWNhIHF1ZSBlbCBWRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGRlbCBWUk1BLjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsIHNpbcOodHJpYzwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgZWwgVkYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBkZWwgVlJNQSBhIGxhIHBhcnQgbmVnYXRpdmEgbyBwb3NpdGl2YSBkZWwgVlJNQSwgcmVzcGVjdGl2YW1lbnQsIGkgbGVzIGR1ZXMgZnVuY2lvbnMgbGluZWFscyBzw7NuIHNpbcOodHJpcXVlcyByZXNwZWN0ZSBkZSBsJ2VpeCBkZWwgVkYgKHkpLjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsIGludmVyczwvc3Ryb25nPjogaW5kaWNhIHF1ZSBlbCBWRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGludmVyc2EgZGVsIFZSTUEuPC9saT48bGk+PHN0cm9uZz5MaW5lYWwgaW52ZXJzIHNpbcOodHJpYzwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgZWwgVkYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBpbnZlcnNhIGRlbCBWUk1BIGEgbGEgcGFydCBuZWdhdGl2YSBvIHBvc2l0aXZhIGRlbCBWUk1BLCByZXNwZWN0aXZhbWVudCwgaSBsZXMgZHVlcyBmdW5jaW9ucyBsaW5lYWxzIHPDs24gc2ltw6h0cmlxdWVzIHJlc3BlY3RlIGRlIGwnZWl4IGRlbCBWRiAoeSkuPC9saT48bGk+PHN0cm9uZz5Db3M8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgVkYgY29tIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGVsIGNvc2ludXMgZGVsIFZSTUEuPC9saT48bGk+PHN0cm9uZz5TZWM8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgVkYgY29tIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGxhIHNlY2FudCBkZWwgVlJNQS48L2xpPjxsaT48c3Ryb25nPkNvcy1TZWM8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGVsIFZGIMOpcyBsYSBmdW5jacOzIGJhc2FkYSBlbiBlbCBjb3NpbnVzIGRlbCBWUk1BIHNpIGVsIFZSTUEgw6lzIG5lZ2F0aXUgaSBsYSBmdW5jacOzIGJhc2FkYSBlbiBsYSBzZWNhbnQgZGVsIFZSTUEgc2kgZWwgVlJNQSBubyDDqXMgbmVnYXRpdS48L2xpPjxsaT48c3Ryb25nPlNlYy1Db3M8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGVsIFZGIMOpcyBsYSBmdW5jacOzIGJhc2FkYSBlbiBlbCBjb3NpbnVzIGRlbCBWUk1BIHNpIGVsIFZSTUEgw6lzIG5lZ2F0aXUgaSBsYSBmdW5jacOzIGJhc2FkYSBlbiBsYSBzZWNhbnQgZGVsIFZSTUEgc2kgZWwgVlJNQSBubyDDqXMgbmVnYXRpdS48L2xpPjxsaT48c3Ryb25nPlRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIHF1ZSBzJ3V0aWxpdHphcsOgIHVuIGZpdHhlciBkZSB0YXVsYSBwZXIgZGVmaW5pciBlbCBncsOgZmljIGRlIGZhY3RvciB2ZXJ0aWNhbCB1dGlsaXR6YXQgcGVyIGRldGVybWluYXIgZWxzIFZGLjwvbGk+PC91bD48cD5BbGd1bnMgbW9kaWZpY2Fkb3JzIHBlciBhIGxlcyBwYXJhdWxlcyBjbGF1cyB2ZXJ0aWNhbHMgc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkZhY3RvciB6ZXJvPC9zdHJvbmc+OiBlc3RhYmxlaXggZWwgZmFjdG9yIHZlcnRpY2FsIHV0aWxpdHphdCBzaSBlbCBWUk1BIMOpcyB6ZXJvLiBBcXVlc3QgZmFjdG9yIGNvbMK3bG9jYSBsYSBpbnRlcmNlcGNpw7MgeSBkZSBsYSBmdW5jacOzIGVzcGVjaWZpY2FkYS4gUGVyIGRlZmluaWNpw7MsIGVsIGZhY3RvciB6ZXJvIG5vIMOpcyBhcGxpY2FibGUgYSBjYXAgZGUgbGVzIGZ1bmNpb25zIHZlcnRpY2FscyB0cmlnb25vbcOodHJpcXVlcyAoQ09TLCBTRUMsIENPUy1TRUMgbyBTRUMtQ09TKS4gQXF1ZXN0ZXMgZnVuY2lvbnMgZGVmaW5laXhlbiBsYSBpbnRlcmNlcGNpw7MgeS48L2xpPjxsaT48c3Ryb25nPkFuZ2xlIGRlIHRhbGwgYmFpeDwvc3Ryb25nPjogZGVmaW5laXggbCdhbmdsZSBWUk1BIHBlciBzb3RhIGRlbCBxdWFsIGVzIGRlZmluaXLDoCB1biBWRiBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+QW5nbGUgZGUgdGFsbCBhbHQ8L3N0cm9uZz46IGRlZmluZWl4IGwnYW5nbGUgVlJNQSBwZXIgc29icmUgZGVsIHF1YWwgZXMgZGVmaW5pcsOgIHVuIFZGIGluZmluaXQuPC9saT48bGk+PHN0cm9uZz5QZW5kZW50PC9zdHJvbmc+OiBlc3RhYmxlaXggZWwgcGVuZGVudCBkZSBsYSBsw61uaWEgcmVjdGEgdXRpbGl0emFkYSBhbWIgbGVzIHBhcmF1bGVzIGNsYXUgZGUgZmFjdG9yIHZlcnRpY2FsIDxzdHJvbmc+TGluZWFsPC9zdHJvbmc+IGkgPHN0cm9uZz5MaW5lYWwgaW52ZXJzPC9zdHJvbmc+LiBFbCBwZW5kZW50IHMnZXNwZWNpZmljYSBjb20gdW5hIGZyYWNjacOzIGQnZWxldmFjacOzIHNvYnJlIGwnZXh0ZW5zacOzIChwZXIgZXhlbXBsZSwgdW4gcGVuZGVudCBkZWwgNDUgJSDDqXMgMS80NSwgcXVlIHMnZXNwZWNpZmljYSBjb20gMCwwMjIyMikuPC9saT48bGk+PHN0cm9uZz5Ob20gZGUgdGF1bGE8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgbm9tIGRlIGxhIHRhdWxhIHF1ZSBkZWZpbmVpeCBlbCBWRi48L2xpPjwvdWw+XCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlX1ZlcnRpY2FsLVJhc3Rlcl90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSByZWxhY2nDsyBlbnRyZSBlbCBmYWN0b3IgZGUgY29zdCB2ZXJ0aWNhbCBpIGwnYW5nbGUgZGUgbW92aW1lbnQgcmVsYXRpdSB2ZXJ0aWNhbCAoVlJNQSkuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlX1ZlcnRpY2FsLVJhc3Rlcl90YWcxQEBcIjogXCJFbHMgdmFsb3JzIHMndXRpbGl0emVuIHBlciBjYWxjdWxhciBlbCBwZW5kZW50IHV0aWxpdHphdCBwZXIgaWRlbnRpZmljYXIgZWwgZmFjdG9yIHZlcnRpY2FsIHF1ZSBlcyBwcm9kdWVpeCBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIHVuYSBhbHRyYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMEBAXCI6IFwiQXF1ZXN0IHBhcsOgbWV0cmUgc2ltdWxhIGwnaW5jcmVtZW50IGRlIGwnZXNmb3LDpyBwZXIgc3VwZXJhciBlbHMgY29zdG9zIGEgbWVzdXJhIHF1ZSBlbCBjb3N0IGFjdW11bGF0aXUgYXVnbWVudGEuIFMndXRpbGl0emEgcGVyIHJlcHJlc2VudGFyIGxhIGZhdGlnYSBkZWwgdmlhdGdlci4gRWwgY29zdCBhY3VtdWxhdGl1IGNyZWl4ZW50IHBlciBhcnJpYmFyIGEgdW5hIGNlbMK3bGEgZXMgbXVsdGlwbGljYSBwZXIgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBzJ2FmZWdlaXggYWwgY29zdCBwZXIgcGFzc2FyIGEgbGEgY2VswrdsYSBzZWfDvGVudC5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMUBAXCI6IFwiw4lzIHVuYSB2ZXJzacOzIG1vZGlmaWNhZGEgZCd1bmEgZsOzcm11bGEgZGUgdGlwdXMgZCdpbnRlcsOocyBjb21wb3N0IHF1ZSBzJ3V0aWxpdHphIHBlciBjYWxjdWxhciBlbCBjb3N0IGFwYXJlbnQgZGUgcGFzc2FyIHBlciB1bmEgY2VswrdsYS4gQSBtZXN1cmEgcXVlIGVsIHZhbG9yIGRlIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGF1Z21lbnRhLCB0YW1iw6kgaG8gZmEgZWwgY29zdCBkZSBsZXMgY2VswrdsZXMgcXVlIGVzIHZpc2l0ZW4gcG9zdGVyaW9ybWVudC4gQ29tIG3DqXMgYWx0YSDDqXMgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEsIG3DqXMgYWx0IMOpcyBlbCBjb3N0IHBlciBhcnJpYmFyIGEgbGEgY2VswrdsYSBzZWfDvGVudCwgcXVlIGVzIGNhbGN1bGEgcGVyIGEgY2FkYSBtb3ZpbWVudCBwb3N0ZXJpb3IuIEF0w6hzIHF1ZSBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSDDqXMgc2ltaWxhciBhIHVuYSB0YXhhIGNvbXBvc3RhIGkgcXVlIGVscyB2YWxvcnMgZGVsIGNvc3QgYWN1bXVsYXRpdSBhY29zdHVtZW4gYSBzZXIgbW9sdCBhbHRzLCBlcyByZWNvbWFuZW4gdGF4ZXMgZGUgcmVzaXN0w6huY2lhIGJhaXhlcywgY29tIGFyYSBkZSAwLDAwNSBvIG1lbnlzLCBzZWdvbnMgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1LlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1BbGxvY2F0aW9uX0FjY3VtdWxhdGl2ZS1Db3N0LVJlc2lzdGFuY2UtUmF0ZV90YWcyQEBcIjogXCJFbCB2YWxvciBoYSBkZSBzZXIgbcOpcyBncmFuIHF1ZSB6ZXJvLiBMYSBjYXBhY2l0YXQgcGVyIGRlZmVjdGUgw6lzIGFsIGxsaW5kYXIgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9DYXBhY2l0eV90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSBjYXBhY2l0YXQgZGUgY29zdCBkZWwgdmlhdGdlciBwZXIgYSB1biBvcmlnZW4uIEVscyBjw6BsY3VscyBkZSBjb3N0IGNvbnRpbnVlbiBwZXIgYSBjYWRhIG9yaWdlbiBmaW5zIGEgYXNzb2xpciBsYSBjYXBhY2l0YXQgZXNwZWNpZmljYWRhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1BbGxvY2F0aW9uX0NhcGFjaXR5X3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciBtw6lzIGdyYW4gcXVlIHplcm8uIExhIGNhcGFjaXRhdCBwZXIgZGVmZWN0ZSDDqXMgYWwgbGxpbmRhciBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1BbGxvY2F0aW9uX0Nvc3QtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIG5lY2Vzc2FyaSBxdWUgZGVmaW5laXggZWwgY29zdCBvIGxhIGltcGVkw6BuY2lhIGRlbCBtb3ZpbWVudCBwbGFuaW3DqHRyaWMgYSB0cmF2w6lzIGRlIGNhZGEgY2VswrdsYS4gRWwgdmFsb3IgZGUgY2FkYSB1YmljYWNpw7MgZGUgY2VswrdsYSByZXByZXNlbnRhIGxhIGRpc3TDoG5jaWEgZGUgY29zdCBwZXIgdW5pdGF0IHBlciBtb3VyZSdzIGEgdHJhdsOpcyBkZSBsYSBjZWzCt2xhLiBDYWRhIHZhbG9yIGQndWJpY2FjacOzIGRlIGNlbMK3bGEgZXMgbXVsdGlwbGljYSBwZXIgbGEgcmVzb2x1Y2nDsyBkZSBsYSBjZWzCt2xhIGkgdGFtYsOpIGVzIGNvbXBlbnNhIGVsIG1vdmltZW50IGRpYWdvbmFsIHBlciBvYnRlbmlyIGVsIGNvc3QgdG90YWwgZGUgcGFzc2FyIGEgdHJhdsOpcyBkZSBsYSBjZWzCt2xhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1BbGxvY2F0aW9uX0Nvc3QtUmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGVsIDxzdHJvbmc+csOgc3RlciBkZSBjb3N0b3M8L3N0cm9uZz4gcG9kZW4gc2VyIGVudGVycyBvIHB1bnRzIGZsb3RhbnRzLCBwZXLDsiBubyBwb2RlbiBzZXIgbmVnYXRpdXMgbmkgemVyby5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9ob3Jpem9udGFsZmFjdG9yX3RhZzBAQFwiOiBcIjxwPkRlZmluZWl4IGxhIHJlbGFjacOzIGVudHJlIGVsIGZhY3RvciBkZSBjb3N0IGhvcml0em9udGFsIGkgbCdhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IGhvcml0em9udGFsIChIUk1BKS48L3A+PHA+SGkgaGEgZGl2ZXJzb3MgZmFjdG9ycyBhbWIgbW9kaWZpY2Fkb3JzIHF1ZSBpZGVudGlmaXF1ZW4gdW4gZ3LDoGZpYyBkZSBmYWN0b3IgdmVydGljYWwgZGVmaW5pdC4gQSBtw6lzLCBlcyBwb3QgdXRpbGl0emFyIHVuYSB0YXVsYSBwZXIgY3JlYXIgdW4gZ3LDoGZpYyBwZXJzb25hbGl0emF0LiBFbHMgZ3LDoGZpY3Mgcyd1dGlsaXR6ZW4gcGVyIGlkZW50aWZpY2FyIGVsIGZhY3RvciB2ZXJ0aWNhbCB1dGlsaXR6YXQgcGVyIGNhbGN1bGFyIGVsIGNvc3QgdG90YWwgZGVsIG1vdmltZW50IGEgdW5hIGNlbMK3bGEgdmXDr25hLjwvcD48cD5BIGxlcyBleHBsaWNhY2lvbnMgc2Vnw7xlbnRzIHMndXRpbGl0emVuIGRvcyBhY3LDsm5pbXM6IEhGIGkgSFJNQS4gSEYgc2lnbmlmaWNhIFxcXCJmYWN0b3IgaG9yaXR6b250YWxcXFwiLCBxdWUgZGVmaW5laXggbGEgZGlmaWN1bHRhdCBob3JpdHpvbnRhbCBxdWUgcydleHBlcmltZW50YSBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIGxhIHNlZ8O8ZW50LiBIUk1BIHNpZ25pZmljYSBcXFwiYW5nbGUgZGUgbW92aW1lbnQgcmVsYXRpdSBob3JpdHpvbnRhbFxcXCIsIGkgaWRlbnRpZmljYSBsJ2FuZ2xlIGVudHJlIGxhIGRpcmVjY2nDsyBob3JpdHpvbnRhbCBkJ3VuYSBjZWzCt2xhIGkgbGEgZGlyZWNjacOzIGRlbCBtb3ZpbWVudC48L3A+PHA+RWxzIHRpcHVzIDxzdHJvbmc+RmFjdG9yIGhvcml0em9udGFsPC9zdHJvbmc+IHPDs246PC9wPjx1bD48bGk+PHN0cm9uZz5CaW5hcmk8L3N0cm9uZz46IGluZGljYSBxdWUsIHNpIEhSTUEgw6lzIGluZmVyaW9yIGEgbCdhbmdsZSBkZSB0YWxsLCBsJ0hGIGVzIGRlZmluZWl4IGVuIGVsIHZhbG9yIGFzc29jaWF0IGFtYiBlbCBmYWN0b3IgemVybzsgYWx0cmFtZW50LCDDqXMgaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkVuZGF2YW50PC9zdHJvbmc+OiBlc3RhYmxlaXggcXVlIG5vbcOpcyBlcyBwZXJtZXQgZWwgbW92aW1lbnQgY2FwIGVuZGF2YW50LiBMJ0hSTUEgaGEgZGUgc2VyIHN1cGVyaW9yIG8gaWd1YWwgYSAwIGkgaW5mZXJpb3IgYSA5MCBncmF1cyAoMCAmbHQ7PSBIUk1BICZsdDsgOTApLiBTaSBsJ0hSTUEgw6lzIHN1cGVyaW9yIGEgMCBpIGluZmVyaW9yIGEgNDUgZ3JhdXMsIGwnSEYgZGUgbGEgY2VswrdsYSBlcyBkZWZpbmVpeCBlbiBlbCB2YWxvciBhc3NvY2lhdCBhbCBmYWN0b3IgemVyby4gU2kgbCdIUk1BIMOpcyBzdXBlcmlvciBvIGlndWFsIGEgNDUgZ3JhdXMsIHMndXRpbGl0emEgZWwgdmFsb3IgbW9kaWZpY2Fkb3IgZGVsIHZhbG9yIGxhdGVyYWwuIEwnSEYgcGVyIGEgcXVhbHNldm9sIHZhbG9yIGQnSFJNQSBpZ3VhbCBvIHN1cGVyaW9yIGEgOTAgZXMgZGVmaW5laXggZW4gaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkxpbmVhbDwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgbCdIRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGRlIGwnSFJNQS48L2xpPjxsaT48c3Ryb25nPkxpbmVhbCBpbnZlcnM8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGwnSEYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBpbnZlcnNhIGRlIGwnSFJNQS48L2xpPjxsaT48c3Ryb25nPlRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIGVsIGZpdHhlciBkZSB0YXVsYSBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgZGVmaW5pciBlbCBncsOgZmljIGRlIGZhY3RvciBob3JpdHpvbnRhbCBlbXByYXQgcGVyIGRldGVybWluYXIgZWxzIEhGLjwvbGk+PC91bD48cD5FbHMgbW9kaWZpY2Fkb3JzIHBlciBhbHMgZmFjdG9ycyBob3JpdHpvbnRhbHMgc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkZhY3RvciB6ZXJvPC9zdHJvbmc+OiBmYWN0b3IgaG9yaXR6b250YWwgcXVlIGNhbCB1dGlsaXR6YXIgcXVhbiBIUk1BIMOpcyB6ZXJvLiBBcXVlc3QgZmFjdG9yIHBvc2ljaW9uYSBsYSBpbnRlcmNlcGNpw7MgXFxcInlcXFwiIHBlciBhIHF1YWxzZXZvbCBkZSBsZXMgZnVuY2lvbnMgZGUgZmFjdG9yIGhvcml0em9udGFsLjwvbGk+PGxpPjxzdHJvbmc+QW5nbGUgZGUgdGFsbDwvc3Ryb25nPjogZGVmaW5laXggbCdhbmdsZSBkJ0hSTUEgbcOpcyBlbmxsw6AgZGVsIHF1YWwgbCdIRiBlcyBkZWZpbmlyw6AgZW4gaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPlBlbmRlbnQ8L3N0cm9uZz46IGVzdGFibGVpeCBlbCBwZW5kZW50IGRlIGxhIGzDrW5pYSByZWN0YSB1dGlsaXR6YWRhIGFtYiBsZXMgcGFyYXVsZXMgY2xhdSBkZSBmYWN0b3IgaG9yaXR6b250YWwgPHN0cm9uZz5MaW5lYWw8L3N0cm9uZz4gaSA8c3Ryb25nPkxpbmVhbCBpbnZlcnM8L3N0cm9uZz4uIEVsIHBlbmRlbnQgcydlc3BlY2lmaWNhIGNvbSB1bmEgZnJhY2Npw7MgZGUgbGEgcHVqYWRhIHNvYnJlIGxhIGJhaXhhZGEgKHBlciBleGVtcGxlLCB1biBwZW5kZW50IGRlbCA0NSUgw6lzIDEvNDUsIHF1ZSBzJ2ludHJvZHVlaXggY29tIGEgMCwwMjIyMikuPC9saT48bGk+PHN0cm9uZz5WYWxvciBsYXRlcmFsPC9zdHJvbmc+OiBlc3RhYmxlaXggbCdIRiBxdWFuIGwnSFJNQSDDqXMgc3VwZXJpb3IgbyBpZ3VhbCBhIDQ1IGdyYXVzIGkgw6lzIGluZmVyaW9yIGEgOTAgZ3JhdXMgcXVhbiBzJ2VzcGVjaWZpY2EgbGEgcGFyYXVsYSBjbGF1IGRlIGZhY3RvciBob3JpdHpvbnRhbCA8c3Ryb25nPkVuZGF2YW50PC9zdHJvbmc+LjwvbGk+PGxpPjxzdHJvbmc+Tm9tIGRlIHRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIGVsIG5vbSBkZSBsYSB0YXVsYSBxdWUgZGVmaW5laXggbCdIRi48L2xpPjwvdWw+XCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUFsbG9jYXRpb25fSG9yaXpvbnRhbC1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBxdWUgZGVmaW5laXggbGEgZGlyZWNjacOzIGhvcml0em9udGFsIGEgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1BbGxvY2F0aW9uX0hvcml6b250YWwtUmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGVsIHLDoHN0ZXIgaGFuIGRlIHNlciBlbnRlcnMgZGUgMCBhIDM2MCwgYW1iIDAgZ3JhdXMgYWwgbm9yZCBvIGNhcCBhIGxhIHBhcnQgc3VwZXJpb3IgZGUgbGEgcGFudGFsbGEsIHF1ZSBhdWdtZW50aW4gZW4gc2VudGl0IGhvcmFyaS4gTGVzIMOgcmVlcyBwbGFuZXMgaGFuIGRlIHRlbmlyIGFzc2lnbmF0IHVuIHZhbG9yIGRlIC0xLiBFbHMgdmFsb3JzIGVuIGNhZGEgdWJpY2FjacOzIHMndXRpbGl0emFyYW4ganVudGFtZW50IGFtYiBlbCA8c3Ryb25nPmZhY3RvciBob3JpdHpvbnRhbDwvc3Ryb25nPiBwZXIgZGV0ZXJtaW5hciBlbCBjb3N0IGhvcml0em9udGFsIHF1ZSBlcyBwcm9kdWVpeCBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIGxlcyB2ZcOvbmVzLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1BbGxvY2F0aW9uX01heGltdW0tRGlzdGFuY2VfdGFnMEBAXCI6IFwiTGxpbmRhciBxdWUgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1IG5vIHBvZGVuIHN1cGVyYXIuIFNpIHVuYSBkaXN0w6BuY2lhIGRlIGNvc3QgYWN1bXVsYXRpdSBzdXBlcmEgYXF1ZXN0IHZhbG9yLCBlbCB2YWxvciBkZSBzb3J0aWRhIGRlIGxhIHViaWNhY2nDsyBkZSBsYSBjZWzCt2xhIHNlcsOgIE5vRGF0YS4gTGEgZGlzdMOgbmNpYSBtw6B4aW1hIGRlZmluZWl4IGwnZXh0ZW5zacOzIGRlIGxhIHF1YWwgZXMgY2FsY3VsZW4gbGVzIGRpc3TDoG5jaWVzIGRlIGNvc3QgYWN1bXVsYXRpdS4gTGEgZGlzdMOgbmNpYSBwZXIgZGVmZWN0ZSDDqXMgbGEgZGUgbCdleHRlbnNpw7MgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzBAQFwiOiBcIk11bHRpcGxpY2Fkb3IgcXVlIHMnYXBsaWNhcsOgIGFscyB2YWxvcnMgZGVscyBjb3N0b3MuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUFsbG9jYXRpb25fTXVsdGlwbGllci10by1BcHBseS10by1Db3N0c190YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBwZXJtZXQgY29udHJvbGFyIGVsIG1vZGUgZGUgdmlhdGdlIG8gbGEgbWFnbml0dWQgZW4gdW4gb3JpZ2VuLiBDb20gbWFqb3Igc2lndWkgZWwgbXVsdGlwbGljYWRvciwgbcOpcyBhbHQgc2Vyw6AgZWwgY29zdCBkZWwgbW92aW1lbnQgYSB0cmF2w6lzIGRlIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzJAQFwiOiBcIkVscyB2YWxvcnMgaGFuIGRlIHNlciBtw6lzIGdyYW5zIHF1ZSB6ZXJvLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9NdWx0aXBsaWVyLXRvLUFwcGx5LXRvLUNvc3RzX3RhZzNAQFwiOiBcIlBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBlcyBwb2RlbiB1dGlsaXR6YXIgdW4gdmFsb3IgbnVtw6hyaWMgKGRvYmxlKSBvIHVuIGNhbXAgZGVsIDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9Tb3VyY2UtRmllbGRfdGFnMEBAXCI6IFwiQ2FtcCB1dGlsaXR6YXQgcGVyIGFzc2lnbmFyIHZhbG9ycyBhIGxlcyB1YmljYWNpb25zIGQnb3JpZ2VuLiBIYSBkZSBzZXIgZGUgdGlwdXMgZW50ZXIuIFNpIHMnaGEgZGVmaW5pdCBlbCA8c3Ryb25nPnLDoHN0ZXIgZGUgdmFsb3I8L3N0cm9uZz4sIGVscyB2YWxvcnMgZCdhcXVlc3RhIGVudHJhZGEgdGluZHJhbiBwcmlvcml0YXQgc29icmUgcXVhbHNldm9sIGNvbmZpZ3VyYWNpw7MgZGVsIDxzdHJvbmc+Y2FtcCBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9Tb3VyY2UtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIG5lY2Vzc2FyaSBkZSBsZXMgdWJpY2FjaW9ucyBkJ29yaWdlbi5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9Tb3VyY2UtUmFzdGVyX3RhZzFAQFwiOiBcIkFxdWVzdCDDqXMgdW4gcsOgc3RlciBxdWUgaWRlbnRpZmljYSBsZXMgY2VswrdsZXMgbyBsZXMgdWJpY2FjaW9ucyBkZXMgZGUgbGVzIHF1YWxzIHMnaGEgY2FsY3VsYXQgbGEgZGlzdMOgbmNpYSBkZSBtZW5vciBjb3N0IGFjdW11bGF0IGRlIGxhIHViaWNhY2nDsyBkZSBjYWRhIGNlbMK3bGEgZGUgc29ydGlkYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9Tb3VyY2UtUmFzdGVyX3RhZzJAQFwiOiBcIlBvdCBzZXIgZGUgdGlwdXMgZW50ZXIgbyBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUFsbG9jYXRpb25fU3RhcnQtQ29zdF90YWcwQEBcIjogXCJDb3N0IGluaWNpYWwgb24gY29tZW7Dp2FyYW4gZWxzIGPDoGxjdWxzIGRlIGNvc3Rvcy4gQXF1ZXN0IHBhcsOgbWV0cmUgcGVybWV0IGwnZXNwZWNpZmljYWNpw7MgZGVsIGNvc3QgZml4IGFzc29jaWF0IGEgdW4gb3JpZ2VuLiBFbiBsbG9jIGRlIGNvbWVuw6dhciBhbWIgdW4gY29zdCBkZSAwLCBsJ2FsZ29yaXRtZSBkZSBjb3N0IGhvIGZhcsOgIGFtYiBlbCB2YWxvciBlc3BlY2lmaWNhdC5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9TdGFydC1Db3N0X3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciB6ZXJvIG8gc3VwZXJpb3IuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1BbGxvY2F0aW9uX1N1cmZhY2UtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgcXVlIGRlZmluZWl4IGVscyB2YWxvcnMgZCdlbGV2YWNpw7MgYSBsYSB1YmljYWNpw7MgZGUgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1BbGxvY2F0aW9uX1N1cmZhY2UtUmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgcyd1dGlsaXR6ZW4gcGVyIGNhbGN1bGFyIGxhIGRpc3TDoG5jaWEgZGUgc3VwZXJmw61jaWUgcmVhbCBjb2JlcnRhIGVuIHBhc3NhciBlbnRyZSBjZWzCt2xlcy5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9UcmF2ZWwtRGlyZWN0aW9uX3RhZzBAQFwiOiBcIkRlZmluZWl4IGxhIGRpcmVjY2nDsyBkZWwgdmlhdGdlciBxdWFuIHMnYXBsaXF1ZW4gbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4uXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUFsbG9jYXRpb25fVHJhdmVsLURpcmVjdGlvbl90YWcxQEBcIjogXCI8c3Ryb25nPkRlcyBkZSBsJ29yaWdlbjwvc3Ryb25nPjogbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4gcydhcGxpY2FyYW4gY29tZW7Dp2FudCBwZXIgbCdvcmlnZW4gZCdlbnRyYWRhIGkgcGFzc2FudCBhIGxlcyBjZWzCt2xlcyBxdWUgbm8gc8OzbiBsYSBkJ29yaWdlbi4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUFsbG9jYXRpb25fVHJhdmVsLURpcmVjdGlvbl90YWczQEBcIjogXCI8c3Ryb25nPkZpbnMgYSBsJ29yaWdlbjwvc3Ryb25nPjogbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4gcydhcGxpY2FyYW4gY29tZW7Dp2FudCBwZXIgY2FkYSBjZWzCt2xhIHF1ZSBubyBzaWd1aSBsYSBkJ29yaWdlbiBpIHRvcm5hbnQgYSBsJ29yaWdlbiBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUFsbG9jYXRpb25fVHJhdmVsLURpcmVjdGlvbl90YWc1QEBcIjogXCJFc3BlY2lmaXF1ZXUgbGEgcGFyYXVsYSBjbGF1IDxzdHJvbmc+RGVzIGRlIGwnb3JpZ2VuPC9zdHJvbmc+IG8gPHN0cm9uZz5GaW5zIGEgbCdvcmlnZW48L3N0cm9uZz4sIHF1ZSBzJ2FwbGljYXLDoCBhIHRvdHMgZWxzIG9yw61nZW5zIG8gZXNwZWNpZmlxdWV1IHVuIGNhbXAgYWwgPHN0cm9uZz5yw6BzdGVyIGQnb3JpZ2VuPC9zdHJvbmc+IHF1ZSBjb250aW5ndWkgbGVzIHBhcmF1bGVzIGNsYXUgcGVyIGlkZW50aWZpY2FyIGxhIGRpcmVjY2nDsyBkZSB2aWF0Z2UgZGUgY2FkYSBvcmlnZW4uIEFxdWVzdCBjYW1wIGhhIGRlIGNvbnRlbmlyIGxhIGNhZGVuYSAke0ZST01fU09VUkNFfSBvICR7VE9fU09VUkNFfS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9WYWx1ZS1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBlbnRlciBkJ2VudHJhZGEgcXVlIGlkZW50aWZpY2EgZWxzIHZhbG9ycyBkZSB6b25hIHF1ZSBzJ3V0aWxpdHphcmFuIHBlciBhIGNhZGEgdWJpY2FjacOzIGQnb3JpZ2VuIGQnZW50cmFkYS4gQSBjYWRhIGNlbMK3bGEgZCd1YmljYWNpw7MgZCdvcmlnZW4sIGVsIHZhbG9yIGRlZmluaXQgcGVsIDxzdHJvbmc+csOgc3RlciBkZSB2YWxvcjwvc3Ryb25nPiBzJ2Fzc2lnbmFyw6AgYSB0b3RlcyBsZXMgY2VswrdsZXMgYXNzaWduYWRlcyBhIGxhIHViaWNhY2nDsyBkJ29yaWdlbiBwZXIgYWwgY8OgbGN1bC4gRWwgPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+IHRpbmRyw6AgcHJpb3JpdGF0IHNvYnJlIHF1YWxzZXZvbCBjb25maWd1cmFjacOzIHBlciBhbCA8c3Ryb25nPmNhbXAgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUFsbG9jYXRpb25fdmVydGljYWxmYWN0b3JfdGFnMEBAXCI6IFwiPHA+RGVmaW5laXggbGEgcmVsYWNpw7MgZW50cmUgZWwgZmFjdG9yIGRlIGNvc3QgdmVydGljYWwgaSBsJ2FuZ2xlIGRlIG1vdmltZW50IHJlbGF0aXUgdmVydGljYWwgKFZSTUEpLjwvcD48cD5IaSBoYSBkaXZlcnNvcyBmYWN0b3JzIGFtYiBtb2RpZmljYWRvcnMgcXVlIGlkZW50aWZpcXVlbiB1biBncsOgZmljIGRlIGZhY3RvciB2ZXJ0aWNhbCBkZWZpbml0LiBBIG3DqXMsIGVzIHBvdCB1dGlsaXR6YXIgdW5hIHRhdWxhIHBlciBjcmVhciB1biBncsOgZmljIHBlcnNvbmFsaXR6YXQuIEVscyBncsOgZmljcyBzJ3V0aWxpdHplbiBwZXIgaWRlbnRpZmljYXIgZWwgZmFjdG9yIHZlcnRpY2FsIHV0aWxpdHphdCBwZXIgY2FsY3VsYXIgZWwgY29zdCB0b3RhbCBkZWwgbW92aW1lbnQgYSB1bmEgY2VswrdsYSB2ZcOvbmEuPC9wPjxwPkEgbGVzIGV4cGxpY2FjaW9ucyBzZWfDvGVudHMgcyd1dGlsaXR6ZW4gZG9zIGFjcsOybmltczogVkYgaSBWUk1BLiBWRiBzaWduaWZpY2EgXFxcImZhY3RvciB2ZXJ0aWNhbFxcXCIsIHF1ZSBkZWZpbmVpeCBsYSBkaWZpY3VsdGF0IHZlcnRpY2FsIHF1ZSBzJ2V4cGVyaW1lbnRhIGVuIHBhc3NhciBkJ3VuYSBjZWzCt2xhIGEgbGEgc2Vnw7xlbnQuIFZSTUEgc2lnbmlmaWNhIFxcXCJhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IHZlcnRpY2FsXFxcIiwgaSBpZGVudGlmaWNhIGwnYW5nbGUgZCdpbmNsaW5hY2nDsyBlbnRyZSBsYSBjZWzCt2xhIGQnb3JpZ2VuLCBvIHByb2Nlc3NhbWVudCwgaSBsYSBjZWzCt2xhIGRlIGRlc3RpbmFjacOzLkVscyB0aXB1cyA8L3A+PHA+PHN0cm9uZz5GYWN0b3IgdmVydGljYWw8L3N0cm9uZz4gc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkJpbmFyaTwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUsIHNpIGVsIFZSTUEgw6lzIG1ham9yIHF1ZSBsJ2FuZ2xlIGRlIHRhbGwgYmFpeCBpIG1lbm9yIHF1ZSBsJ2FuZ2xlIGRlIHRhbGwgYWx0LCBlbCBWRiBlcyBkZWZpbmVpeCBlbiBlbCB2YWxvciBhc3NvY2lhdCBhbCBmYWN0b3IgemVybzsgYWx0cmFtZW50LCDDqXMgaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkxpbmVhbDwvc3Ryb25nPjogaW5kaWNhIHF1ZSBlbCBWRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGRlbCBWUk1BLjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsIHNpbcOodHJpYzwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgZWwgVkYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBkZWwgVlJNQSBhIGxhIHBhcnQgbmVnYXRpdmEgbyBwb3NpdGl2YSBkZWwgVlJNQSwgcmVzcGVjdGl2YW1lbnQsIGkgbGVzIGR1ZXMgZnVuY2lvbnMgbGluZWFscyBzw7NuIHNpbcOodHJpcXVlcyByZXNwZWN0ZSBkZSBsJ2VpeCBkZWwgVkYgKHkpLjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsIGludmVyczwvc3Ryb25nPjogaW5kaWNhIHF1ZSBlbCBWRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGludmVyc2EgZGVsIFZSTUEuPC9saT48bGk+PHN0cm9uZz5MaW5lYWwgaW52ZXJzIHNpbcOodHJpYzwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgZWwgVkYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBpbnZlcnNhIGRlbCBWUk1BIGEgbGEgcGFydCBuZWdhdGl2YSBvIHBvc2l0aXZhIGRlbCBWUk1BLCByZXNwZWN0aXZhbWVudCwgaSBsZXMgZHVlcyBmdW5jaW9ucyBsaW5lYWxzIHPDs24gc2ltw6h0cmlxdWVzIHJlc3BlY3RlIGRlIGwnZWl4IGRlbCBWRiAoeSkuPC9saT48bGk+PHN0cm9uZz5Db3M8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgVkYgY29tIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGVsIGNvc2ludXMgZGVsIFZSTUEuPC9saT48bGk+PHN0cm9uZz5TZWM8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgVkYgY29tIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGxhIHNlY2FudCBkZWwgVlJNQS48L2xpPjxsaT48c3Ryb25nPkNvcy1TZWM8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGVsIFZGIMOpcyBsYSBmdW5jacOzIGJhc2FkYSBlbiBlbCBjb3NpbnVzIGRlbCBWUk1BIHNpIGVsIFZSTUEgw6lzIG5lZ2F0aXUgaSBsYSBmdW5jacOzIGJhc2FkYSBlbiBsYSBzZWNhbnQgZGVsIFZSTUEgc2kgZWwgVlJNQSBubyDDqXMgbmVnYXRpdS48L2xpPjxsaT48c3Ryb25nPlNlYy1Db3M8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGVsIFZGIMOpcyBsYSBmdW5jacOzIGJhc2FkYSBlbiBlbCBjb3NpbnVzIGRlbCBWUk1BIHNpIGVsIFZSTUEgw6lzIG5lZ2F0aXUgaSBsYSBmdW5jacOzIGJhc2FkYSBlbiBsYSBzZWNhbnQgZGVsIFZSTUEgc2kgZWwgVlJNQSBubyDDqXMgbmVnYXRpdS48L2xpPjxsaT48c3Ryb25nPlRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIHF1ZSBzJ3V0aWxpdHphcsOgIHVuIGZpdHhlciBkZSB0YXVsYSBwZXIgZGVmaW5pciBlbCBncsOgZmljIGRlIGZhY3RvciB2ZXJ0aWNhbCB1dGlsaXR6YXQgcGVyIGRldGVybWluYXIgZWxzIFZGLjwvbGk+PC91bD48cD5BbGd1bnMgbW9kaWZpY2Fkb3JzIHBlciBhIGxlcyBwYXJhdWxlcyBjbGF1cyB2ZXJ0aWNhbHMgc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkZhY3RvciB6ZXJvPC9zdHJvbmc+OiBlc3RhYmxlaXggZWwgZmFjdG9yIHZlcnRpY2FsIHV0aWxpdHphdCBzaSBlbCBWUk1BIMOpcyB6ZXJvLiBBcXVlc3QgZmFjdG9yIGNvbMK3bG9jYSBsYSBpbnRlcmNlcGNpw7MgeSBkZSBsYSBmdW5jacOzIGVzcGVjaWZpY2FkYS4gUGVyIGRlZmluaWNpw7MsIGVsIGZhY3RvciB6ZXJvIG5vIMOpcyBhcGxpY2FibGUgYSBjYXAgZGUgbGVzIGZ1bmNpb25zIHZlcnRpY2FscyB0cmlnb25vbcOodHJpcXVlcyAoQ09TLCBTRUMsIENPUy1TRUMgbyBTRUMtQ09TKS4gQXF1ZXN0ZXMgZnVuY2lvbnMgZGVmaW5laXhlbiBsYSBpbnRlcmNlcGNpw7MgeS48L2xpPjxsaT48c3Ryb25nPkFuZ2xlIGRlIHRhbGwgYmFpeDwvc3Ryb25nPjogZGVmaW5laXggbCdhbmdsZSBWUk1BIHBlciBzb3RhIGRlbCBxdWFsIGVzIGRlZmluaXLDoCB1biBWRiBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+QW5nbGUgZGUgdGFsbCBhbHQ8L3N0cm9uZz46IGRlZmluZWl4IGwnYW5nbGUgVlJNQSBwZXIgc29icmUgZGVsIHF1YWwgZXMgZGVmaW5pcsOgIHVuIFZGIGluZmluaXQuPC9saT48bGk+PHN0cm9uZz5QZW5kZW50PC9zdHJvbmc+OiBlc3RhYmxlaXggZWwgcGVuZGVudCBkZSBsYSBsw61uaWEgcmVjdGEgdXRpbGl0emFkYSBhbWIgbGVzIHBhcmF1bGVzIGNsYXUgZGUgZmFjdG9yIHZlcnRpY2FsIDxzdHJvbmc+TGluZWFsPC9zdHJvbmc+IGkgPHN0cm9uZz5MaW5lYWwgaW52ZXJzPC9zdHJvbmc+LiBFbCBwZW5kZW50IHMnZXNwZWNpZmljYSBjb20gdW5hIGZyYWNjacOzIGQnZWxldmFjacOzIHNvYnJlIGwnZXh0ZW5zacOzIChwZXIgZXhlbXBsZSwgdW4gcGVuZGVudCBkZWwgNDUgJSDDqXMgMS80NSwgcXVlIHMnZXNwZWNpZmljYSBjb20gMCwwMjIyMikuPC9saT48bGk+PHN0cm9uZz5Ob20gZGUgdGF1bGE8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgbm9tIGRlIGxhIHRhdWxhIHF1ZSBkZWZpbmVpeCBlbCBWRi48L2xpPjwvdWw+XCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUFsbG9jYXRpb25fVmVydGljYWwtUmFzdGVyX3RhZzBAQFwiOiBcIkRlZmluZWl4IGxhIHJlbGFjacOzIGVudHJlIGVsIGZhY3RvciBkZSBjb3N0IHZlcnRpY2FsIGkgbCdhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IHZlcnRpY2FsIChWUk1BKS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQWxsb2NhdGlvbl9WZXJ0aWNhbC1SYXN0ZXJfdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyBzJ3V0aWxpdHplbiBwZXIgY2FsY3VsYXIgZWwgcGVuZGVudCB1dGlsaXR6YXQgcGVyIGlkZW50aWZpY2FyIGVsIGZhY3RvciB2ZXJ0aWNhbCBxdWUgZXMgcHJvZHVlaXggZW4gcGFzc2FyIGQndW5hIGNlbMK3bGEgYSB1bmEgYWx0cmEuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUJhY2stTGlua19BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMEBAXCI6IFwiQXF1ZXN0IHBhcsOgbWV0cmUgc2ltdWxhIGwnaW5jcmVtZW50IGRlIGwnZXNmb3LDpyBwZXIgc3VwZXJhciBlbHMgY29zdG9zIGEgbWVzdXJhIHF1ZSBlbCBjb3N0IGFjdW11bGF0aXUgYXVnbWVudGEuIFMndXRpbGl0emEgcGVyIHJlcHJlc2VudGFyIGxhIGZhdGlnYSBkZWwgdmlhdGdlci4gRWwgY29zdCBhY3VtdWxhdGl1IGNyZWl4ZW50IHBlciBhcnJpYmFyIGEgdW5hIGNlbMK3bGEgZXMgbXVsdGlwbGljYSBwZXIgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBzJ2FmZWdlaXggYWwgY29zdCBwZXIgcGFzc2FyIGEgbGEgY2VswrdsYSBzZWfDvGVudC5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX0FjY3VtdWxhdGl2ZS1Db3N0LVJlc2lzdGFuY2UtUmF0ZV90YWcxQEBcIjogXCLDiXMgdW5hIHZlcnNpw7MgbW9kaWZpY2FkYSBkJ3VuYSBmw7NybXVsYSBkZSB0aXB1cyBkJ2ludGVyw6hzIGNvbXBvc3QgcXVlIHMndXRpbGl0emEgcGVyIGNhbGN1bGFyIGVsIGNvc3QgYXBhcmVudCBkZSBwYXNzYXIgcGVyIHVuYSBjZWzCt2xhLiBBIG1lc3VyYSBxdWUgZWwgdmFsb3IgZGUgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgYXVnbWVudGEsIHRhbWLDqSBobyBmYSBlbCBjb3N0IGRlIGxlcyBjZWzCt2xlcyBxdWUgZXMgdmlzaXRlbiBwb3N0ZXJpb3JtZW50LiBDb20gbcOpcyBhbHRhIMOpcyBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSwgbcOpcyBhbHQgw6lzIGVsIGNvc3QgcGVyIGFycmliYXIgYSBsYSBjZWzCt2xhIHNlZ8O8ZW50LCBxdWUgZXMgY2FsY3VsYSBwZXIgYSBjYWRhIG1vdmltZW50IHBvc3Rlcmlvci4gQXTDqHMgcXVlIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIMOpcyBzaW1pbGFyIGEgdW5hIHRheGEgY29tcG9zdGEgaSBxdWUgZWxzIHZhbG9ycyBkZWwgY29zdCBhY3VtdWxhdGl1IGFjb3N0dW1lbiBhIHNlciBtb2x0IGFsdHMsIGVzIHJlY29tYW5lbiB0YXhlcyBkZSByZXNpc3TDqG5jaWEgYmFpeGVzLCBjb20gYXJhIGRlIDAsMDA1IG8gbWVueXMsIHNlZ29ucyBlbHMgdmFsb3JzIGRlbCBjb3N0IGFjdW11bGF0aXUuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUJhY2stTGlua19BY2N1bXVsYXRpdmUtQ29zdC1SZXNpc3RhbmNlLVJhdGVfdGFnMkBAXCI6IFwiRWwgdmFsb3IgaGEgZGUgc2VyIG3DqXMgZ3JhbiBxdWUgemVyby4gTGEgY2FwYWNpdGF0IHBlciBkZWZlY3RlIMOpcyBhbCBsbGluZGFyIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUJhY2stTGlua19DYXBhY2l0eV90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSBjYXBhY2l0YXQgZGUgY29zdCBkZWwgdmlhdGdlciBwZXIgYSB1biBvcmlnZW4uIEVscyBjw6BsY3VscyBkZSBjb3N0IGNvbnRpbnVlbiBwZXIgYSBjYWRhIG9yaWdlbiBmaW5zIGEgYXNzb2xpciBsYSBjYXBhY2l0YXQgZXNwZWNpZmljYWRhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfQ2FwYWNpdHlfdGFnMUBAXCI6IFwiRWwgdmFsb3IgaGEgZGUgc2VyIG3DqXMgZ3JhbiBxdWUgemVyby4gTGEgY2FwYWNpdGF0IHBlciBkZWZlY3RlIMOpcyBhbCBsbGluZGFyIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUJhY2stTGlua19Db3N0LVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgcXVlIGRlZmluZWl4IGVsIGNvc3QgbyBsYSBpbXBlZMOgbmNpYSBkZWwgbW92aW1lbnQgcGxhbmltw6h0cmljIGEgdHJhdsOpcyBkZSBjYWRhIGNlbMK3bGEuIEVsIHZhbG9yIGRlIGNhZGEgdWJpY2FjacOzIGRlIGNlbMK3bGEgcmVwcmVzZW50YSBsYSBkaXN0w6BuY2lhIGRlIGNvc3QgcGVyIHVuaXRhdCBwZXIgbW91cmUncyBhIHRyYXbDqXMgZGUgbGEgY2VswrdsYS4gQ2FkYSB2YWxvciBkJ3ViaWNhY2nDsyBkZSBjZWzCt2xhIGVzIG11bHRpcGxpY2EgcGVyIGxhIHJlc29sdWNpw7MgZGUgbGEgY2VswrdsYSBpIHRhbWLDqSBlcyBjb21wZW5zYSBlbCBtb3ZpbWVudCBkaWFnb25hbCBwZXIgb2J0ZW5pciBlbCBjb3N0IHRvdGFsIGRlIHBhc3NhciBhIHRyYXbDqXMgZGUgbGEgY2VswrdsYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX0Nvc3QtUmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGVsIDxzdHJvbmc+csOgc3RlciBkZSBjb3N0b3M8L3N0cm9uZz4gcG9kZW4gc2VyIGVudGVycyBvIHB1bnRzIGZsb3RhbnRzLCBwZXLDsiBubyBwb2RlbiBzZXIgbmVnYXRpdXMgbmkgemVyby5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX2hvcml6b250YWxmYWN0b3JfdGFnMEBAXCI6IFwiPHA+RGVmaW5laXggbGEgcmVsYWNpw7MgZW50cmUgZWwgZmFjdG9yIGRlIGNvc3QgaG9yaXR6b250YWwgaSBsJ2FuZ2xlIGRlIG1vdmltZW50IHJlbGF0aXUgaG9yaXR6b250YWwgKEhSTUEpLjwvcD48cD5IaSBoYSBkaXZlcnNvcyBmYWN0b3JzIGFtYiBtb2RpZmljYWRvcnMgcXVlIGlkZW50aWZpcXVlbiB1biBncsOgZmljIGRlIGZhY3RvciB2ZXJ0aWNhbCBkZWZpbml0LiBBIG3DqXMsIGVzIHBvdCB1dGlsaXR6YXIgdW5hIHRhdWxhIHBlciBjcmVhciB1biBncsOgZmljIHBlcnNvbmFsaXR6YXQuIEVscyBncsOgZmljcyBzJ3V0aWxpdHplbiBwZXIgaWRlbnRpZmljYXIgZWwgZmFjdG9yIHZlcnRpY2FsIHV0aWxpdHphdCBwZXIgY2FsY3VsYXIgZWwgY29zdCB0b3RhbCBkZWwgbW92aW1lbnQgYSB1bmEgY2VswrdsYSB2ZcOvbmEuPC9wPjxwPkEgbGVzIGV4cGxpY2FjaW9ucyBzZWfDvGVudHMgcyd1dGlsaXR6ZW4gZG9zIGFjcsOybmltczogSEYgaSBIUk1BLiBIRiBzaWduaWZpY2EgXFxcImZhY3RvciBob3JpdHpvbnRhbFxcXCIsIHF1ZSBkZWZpbmVpeCBsYSBkaWZpY3VsdGF0IGhvcml0em9udGFsIHF1ZSBzJ2V4cGVyaW1lbnRhIGVuIHBhc3NhciBkJ3VuYSBjZWzCt2xhIGEgbGEgc2Vnw7xlbnQuIEhSTUEgc2lnbmlmaWNhIFxcXCJhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IGhvcml0em9udGFsXFxcIiwgaSBpZGVudGlmaWNhIGwnYW5nbGUgZW50cmUgbGEgZGlyZWNjacOzIGhvcml0em9udGFsIGQndW5hIGNlbMK3bGEgaSBsYSBkaXJlY2Npw7MgZGVsIG1vdmltZW50LjwvcD48cD5FbHMgdGlwdXMgPHN0cm9uZz5GYWN0b3IgaG9yaXR6b250YWw8L3N0cm9uZz4gc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkJpbmFyaTwvc3Ryb25nPjogaW5kaWNhIHF1ZSwgc2kgSFJNQSDDqXMgaW5mZXJpb3IgYSBsJ2FuZ2xlIGRlIHRhbGwsIGwnSEYgZXMgZGVmaW5laXggZW4gZWwgdmFsb3IgYXNzb2NpYXQgYW1iIGVsIGZhY3RvciB6ZXJvOyBhbHRyYW1lbnQsIMOpcyBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+RW5kYXZhbnQ8L3N0cm9uZz46IGVzdGFibGVpeCBxdWUgbm9tw6lzIGVzIHBlcm1ldCBlbCBtb3ZpbWVudCBjYXAgZW5kYXZhbnQuIEwnSFJNQSBoYSBkZSBzZXIgc3VwZXJpb3IgbyBpZ3VhbCBhIDAgaSBpbmZlcmlvciBhIDkwIGdyYXVzICgwICZsdDs9IEhSTUEgJmx0OyA5MCkuIFNpIGwnSFJNQSDDqXMgc3VwZXJpb3IgYSAwIGkgaW5mZXJpb3IgYSA0NSBncmF1cywgbCdIRiBkZSBsYSBjZWzCt2xhIGVzIGRlZmluZWl4IGVuIGVsIHZhbG9yIGFzc29jaWF0IGFsIGZhY3RvciB6ZXJvLiBTaSBsJ0hSTUEgw6lzIHN1cGVyaW9yIG8gaWd1YWwgYSA0NSBncmF1cywgcyd1dGlsaXR6YSBlbCB2YWxvciBtb2RpZmljYWRvciBkZWwgdmFsb3IgbGF0ZXJhbC4gTCdIRiBwZXIgYSBxdWFsc2V2b2wgdmFsb3IgZCdIUk1BIGlndWFsIG8gc3VwZXJpb3IgYSA5MCBlcyBkZWZpbmVpeCBlbiBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSBsJ0hGIMOpcyB1bmEgZnVuY2nDsyBsaW5lYWwgZGUgbCdIUk1BLjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsIGludmVyczwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgbCdIRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGludmVyc2EgZGUgbCdIUk1BLjwvbGk+PGxpPjxzdHJvbmc+VGF1bGE8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgZml0eGVyIGRlIHRhdWxhIHF1ZSBzJ3V0aWxpdHphcsOgIHBlciBkZWZpbmlyIGVsIGdyw6BmaWMgZGUgZmFjdG9yIGhvcml0em9udGFsIGVtcHJhdCBwZXIgZGV0ZXJtaW5hciBlbHMgSEYuPC9saT48L3VsPjxwPkVscyBtb2RpZmljYWRvcnMgcGVyIGFscyBmYWN0b3JzIGhvcml0em9udGFscyBzw7NuOjwvcD48dWw+PGxpPjxzdHJvbmc+RmFjdG9yIHplcm88L3N0cm9uZz46IGZhY3RvciBob3JpdHpvbnRhbCBxdWUgY2FsIHV0aWxpdHphciBxdWFuIEhSTUEgw6lzIHplcm8uIEFxdWVzdCBmYWN0b3IgcG9zaWNpb25hIGxhIGludGVyY2VwY2nDsyBcXFwieVxcXCIgcGVyIGEgcXVhbHNldm9sIGRlIGxlcyBmdW5jaW9ucyBkZSBmYWN0b3IgaG9yaXR6b250YWwuPC9saT48bGk+PHN0cm9uZz5BbmdsZSBkZSB0YWxsPC9zdHJvbmc+OiBkZWZpbmVpeCBsJ2FuZ2xlIGQnSFJNQSBtw6lzIGVubGzDoCBkZWwgcXVhbCBsJ0hGIGVzIGRlZmluaXLDoCBlbiBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+UGVuZGVudDwvc3Ryb25nPjogZXN0YWJsZWl4IGVsIHBlbmRlbnQgZGUgbGEgbMOtbmlhIHJlY3RhIHV0aWxpdHphZGEgYW1iIGxlcyBwYXJhdWxlcyBjbGF1IGRlIGZhY3RvciBob3JpdHpvbnRhbCA8c3Ryb25nPkxpbmVhbDwvc3Ryb25nPiBpIDxzdHJvbmc+TGluZWFsIGludmVyczwvc3Ryb25nPi4gRWwgcGVuZGVudCBzJ2VzcGVjaWZpY2EgY29tIHVuYSBmcmFjY2nDsyBkZSBsYSBwdWphZGEgc29icmUgbGEgYmFpeGFkYSAocGVyIGV4ZW1wbGUsIHVuIHBlbmRlbnQgZGVsIDQ1JSDDqXMgMS80NSwgcXVlIHMnaW50cm9kdWVpeCBjb20gYSAwLDAyMjIyKS48L2xpPjxsaT48c3Ryb25nPlZhbG9yIGxhdGVyYWw8L3N0cm9uZz46IGVzdGFibGVpeCBsJ0hGIHF1YW4gbCdIUk1BIMOpcyBzdXBlcmlvciBvIGlndWFsIGEgNDUgZ3JhdXMgaSDDqXMgaW5mZXJpb3IgYSA5MCBncmF1cyBxdWFuIHMnZXNwZWNpZmljYSBsYSBwYXJhdWxhIGNsYXUgZGUgZmFjdG9yIGhvcml0em9udGFsIDxzdHJvbmc+RW5kYXZhbnQ8L3N0cm9uZz4uPC9saT48bGk+PHN0cm9uZz5Ob20gZGUgdGF1bGE8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgbm9tIGRlIGxhIHRhdWxhIHF1ZSBkZWZpbmVpeCBsJ0hGLjwvbGk+PC91bD5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX0hvcml6b250YWwtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgcXVlIGRlZmluZWl4IGxhIGRpcmVjY2nDsyBob3JpdHpvbnRhbCBhIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX0hvcml6b250YWwtUmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGVsIHLDoHN0ZXIgaGFuIGRlIHNlciBlbnRlcnMgZGUgMCBhIDM2MCwgYW1iIDAgZ3JhdXMgYWwgbm9yZCBvIGNhcCBhIGxhIHBhcnQgc3VwZXJpb3IgZGUgbGEgcGFudGFsbGEsIHF1ZSBhdWdtZW50aW4gZW4gc2VudGl0IGhvcmFyaS4gTGVzIMOgcmVlcyBwbGFuZXMgaGFuIGRlIHRlbmlyIGFzc2lnbmF0IHVuIHZhbG9yIGRlIC0xLiBFbHMgdmFsb3JzIGVuIGNhZGEgdWJpY2FjacOzIHMndXRpbGl0emFyYW4ganVudGFtZW50IGFtYiBlbCA8c3Ryb25nPmZhY3RvciBob3JpdHpvbnRhbDwvc3Ryb25nPiBwZXIgZGV0ZXJtaW5hciBlbCBjb3N0IGhvcml0em9udGFsIHF1ZSBlcyBwcm9kdWVpeCBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIGxlcyB2ZcOvbmVzLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfTWF4aW11bS1EaXN0YW5jZV90YWcwQEBcIjogXCJMbGluZGFyIHF1ZSBlbHMgdmFsb3JzIGRlbCBjb3N0IGFjdW11bGF0aXUgbm8gcG9kZW4gc3VwZXJhci4gU2kgdW5hIGRpc3TDoG5jaWEgZGUgY29zdCBhY3VtdWxhdGl1IHN1cGVyYSBhcXVlc3QgdmFsb3IsIGVsIHZhbG9yIGRlIHNvcnRpZGEgZGUgbGEgdWJpY2FjacOzIGRlIGxhIGNlbMK3bGEgc2Vyw6AgTm9EYXRhLiBMYSBkaXN0w6BuY2lhIG3DoHhpbWEgZGVmaW5laXggbCdleHRlbnNpw7MgZGUgbGEgcXVhbCBlcyBjYWxjdWxlbiBsZXMgZGlzdMOgbmNpZXMgZGUgY29zdCBhY3VtdWxhdGl1LiBMYSBkaXN0w6BuY2lhIHBlciBkZWZlY3RlIMOpcyBsYSBkZSBsJ2V4dGVuc2nDsyBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfTXVsdGlwbGllci10by1BcHBseS10by1Db3N0c190YWcwQEBcIjogXCJNdWx0aXBsaWNhZG9yIHF1ZSBzJ2FwbGljYXLDoCBhbHMgdmFsb3JzIGRlbHMgY29zdG9zLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfTXVsdGlwbGllci10by1BcHBseS10by1Db3N0c190YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBwZXJtZXQgY29udHJvbGFyIGVsIG1vZGUgZGUgdmlhdGdlIG8gbGEgbWFnbml0dWQgZW4gdW4gb3JpZ2VuLiBDb20gbWFqb3Igc2lndWkgZWwgbXVsdGlwbGljYWRvciwgbcOpcyBhbHQgc2Vyw6AgZWwgY29zdCBkZWwgbW92aW1lbnQgYSB0cmF2w6lzIGRlIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX011bHRpcGxpZXItdG8tQXBwbHktdG8tQ29zdHNfdGFnMkBAXCI6IFwiRWxzIHZhbG9ycyBoYW4gZGUgc2VyIG3DqXMgZ3JhbnMgcXVlIHplcm8uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAxLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfTXVsdGlwbGllci10by1BcHBseS10by1Db3N0c190YWczQEBcIjogXCJQZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgZXMgcG9kZW4gdXRpbGl0emFyIHVuIHZhbG9yIG51bcOocmljIChkb2JsZSkgbyB1biBjYW1wIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUJhY2stTGlua19Tb3VyY2UtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIG5lY2Vzc2FyaSBkZSBsZXMgdWJpY2FjaW9ucyBkJ29yaWdlbi5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX1NvdXJjZS1SYXN0ZXJfdGFnMUBAXCI6IFwiQXF1ZXN0IMOpcyB1biByw6BzdGVyIHF1ZSBpZGVudGlmaWNhIGxlcyBjZWzCt2xlcyBvIGxlcyB1YmljYWNpb25zIGRlcyBkZSBsZXMgcXVhbHMgcydoYSBjYWxjdWxhdCBsYSBkaXN0w6BuY2lhIGRlIG1lbm9yIGNvc3QgYWN1bXVsYXQgZGUgbGEgdWJpY2FjacOzIGRlIGNhZGEgY2VswrdsYSBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfU291cmNlLVJhc3Rlcl90YWcyQEBcIjogXCJQb3Qgc2VyIGRlIHRpcHVzIGVudGVyIG8gcHVudCBmbG90YW50LlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfU3RhcnQtQ29zdF90YWcwQEBcIjogXCJDb3N0IGluaWNpYWwgb24gY29tZW7Dp2FyYW4gZWxzIGPDoGxjdWxzIGRlIGNvc3Rvcy4gQXF1ZXN0IHBhcsOgbWV0cmUgcGVybWV0IGwnZXNwZWNpZmljYWNpw7MgZGVsIGNvc3QgZml4IGFzc29jaWF0IGEgdW4gb3JpZ2VuLiBFbiBsbG9jIGRlIGNvbWVuw6dhciBhbWIgdW4gY29zdCBkZSAwLCBsJ2FsZ29yaXRtZSBkZSBjb3N0IGhvIGZhcsOgIGFtYiBlbCB2YWxvciBlc3BlY2lmaWNhdC5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX1N0YXJ0LUNvc3RfdGFnMUBAXCI6IFwiRWwgdmFsb3IgaGEgZGUgc2VyIHplcm8gbyBzdXBlcmlvci4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIDAuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUJhY2stTGlua19TdXJmYWNlLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIHF1ZSBkZWZpbmVpeCBlbHMgdmFsb3JzIGQnZWxldmFjacOzIGEgbGEgdWJpY2FjacOzIGRlIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX1N1cmZhY2UtUmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgcyd1dGlsaXR6ZW4gcGVyIGNhbGN1bGFyIGxhIGRpc3TDoG5jaWEgZGUgc3VwZXJmw61jaWUgcmVhbCBjb2JlcnRhIGVuIHBhc3NhciBlbnRyZSBjZWzCt2xlcy5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX1RyYXZlbC1EaXJlY3Rpb25fdGFnMEBAXCI6IFwiRGVmaW5laXggbGEgZGlyZWNjacOzIGRlbCB2aWF0Z2VyIHF1YW4gcydhcGxpcXVlbiBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBpIGVsIGNvc3QgaW5pY2lhbCBkZSBsJ29yaWdlbi5cIixcblx0XCJAQFBhdGgtRGlzdGFuY2UtQmFjay1MaW5rX1RyYXZlbC1EaXJlY3Rpb25fdGFnMUBAXCI6IFwiPHN0cm9uZz5EZXMgZGUgbCdvcmlnZW48L3N0cm9uZz46IGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGkgZWwgY29zdCBpbmljaWFsIGRlIGwnb3JpZ2VuIHMnYXBsaWNhcmFuIGNvbWVuw6dhbnQgcGVyIGwnb3JpZ2VuIGQnZW50cmFkYSBpIHBhc3NhbnQgYSBsZXMgY2VswrdsZXMgcXVlIG5vIHPDs24gbGEgZCdvcmlnZW4uIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfVHJhdmVsLURpcmVjdGlvbl90YWczQEBcIjogXCI8c3Ryb25nPkZpbnMgYSBsJ29yaWdlbjwvc3Ryb25nPjogbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgaSBlbCBjb3N0IGluaWNpYWwgZGUgbCdvcmlnZW4gcydhcGxpY2FyYW4gY29tZW7Dp2FudCBwZXIgY2FkYSBjZWzCt2xhIHF1ZSBubyBzaWd1aSBsYSBkJ29yaWdlbiBpIHRvcm5hbnQgYSBsJ29yaWdlbiBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUJhY2stTGlua19UcmF2ZWwtRGlyZWN0aW9uX3RhZzVAQFwiOiBcIkVzcGVjaWZpcXVldSBsYSBwYXJhdWxhIGNsYXUgPHN0cm9uZz5EZXMgZGUgbCdvcmlnZW48L3N0cm9uZz4gbyA8c3Ryb25nPkZpbnMgYSBsJ29yaWdlbjwvc3Ryb25nPiwgcXVlIHMnYXBsaWNhcsOgIGEgdG90cyBlbHMgb3LDrWdlbnMgbyBlc3BlY2lmaXF1ZXUgdW4gY2FtcCBhbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4gcXVlIGNvbnRpbmd1aSBsZXMgcGFyYXVsZXMgY2xhdSBwZXIgaWRlbnRpZmljYXIgbGEgZGlyZWNjacOzIGRlIHZpYXRnZSBkZSBjYWRhIG9yaWdlbi4gQXF1ZXN0IGNhbXAgaGEgZGUgY29udGVuaXIgbGEgY2FkZW5hICR7RlJPTV9TT1VSQ0V9IG8gJHtUT19TT1VSQ0V9LlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfdmVydGljYWxmYWN0b3JfdGFnMEBAXCI6IFwiPHA+RGVmaW5laXggbGEgcmVsYWNpw7MgZW50cmUgZWwgZmFjdG9yIGRlIGNvc3QgdmVydGljYWwgaSBsJ2FuZ2xlIGRlIG1vdmltZW50IHJlbGF0aXUgdmVydGljYWwgKFZSTUEpLjwvcD48cD5IaSBoYSBkaXZlcnNvcyBmYWN0b3JzIGFtYiBtb2RpZmljYWRvcnMgcXVlIGlkZW50aWZpcXVlbiB1biBncsOgZmljIGRlIGZhY3RvciB2ZXJ0aWNhbCBkZWZpbml0LiBBIG3DqXMsIGVzIHBvdCB1dGlsaXR6YXIgdW5hIHRhdWxhIHBlciBjcmVhciB1biBncsOgZmljIHBlcnNvbmFsaXR6YXQuIEVscyBncsOgZmljcyBzJ3V0aWxpdHplbiBwZXIgaWRlbnRpZmljYXIgZWwgZmFjdG9yIHZlcnRpY2FsIHV0aWxpdHphdCBwZXIgY2FsY3VsYXIgZWwgY29zdCB0b3RhbCBkZWwgbW92aW1lbnQgYSB1bmEgY2VswrdsYSB2ZcOvbmEuPC9wPjxwPkEgbGVzIGV4cGxpY2FjaW9ucyBzZWfDvGVudHMgcyd1dGlsaXR6ZW4gZG9zIGFjcsOybmltczogVkYgaSBWUk1BLiBWRiBzaWduaWZpY2EgXFxcImZhY3RvciB2ZXJ0aWNhbFxcXCIsIHF1ZSBkZWZpbmVpeCBsYSBkaWZpY3VsdGF0IHZlcnRpY2FsIHF1ZSBzJ2V4cGVyaW1lbnRhIGVuIHBhc3NhciBkJ3VuYSBjZWzCt2xhIGEgbGEgc2Vnw7xlbnQuIFZSTUEgc2lnbmlmaWNhIFxcXCJhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IHZlcnRpY2FsXFxcIiwgaSBpZGVudGlmaWNhIGwnYW5nbGUgZCdpbmNsaW5hY2nDsyBlbnRyZSBsYSBjZWzCt2xhIGQnb3JpZ2VuLCBvIHByb2Nlc3NhbWVudCwgaSBsYSBjZWzCt2xhIGRlIGRlc3RpbmFjacOzLkVscyB0aXB1cyA8L3A+PHA+PHN0cm9uZz5GYWN0b3IgdmVydGljYWw8L3N0cm9uZz4gc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkJpbmFyaTwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUsIHNpIGVsIFZSTUEgw6lzIG1ham9yIHF1ZSBsJ2FuZ2xlIGRlIHRhbGwgYmFpeCBpIG1lbm9yIHF1ZSBsJ2FuZ2xlIGRlIHRhbGwgYWx0LCBlbCBWRiBlcyBkZWZpbmVpeCBlbiBlbCB2YWxvciBhc3NvY2lhdCBhbCBmYWN0b3IgemVybzsgYWx0cmFtZW50LCDDqXMgaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkxpbmVhbDwvc3Ryb25nPjogaW5kaWNhIHF1ZSBlbCBWRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGRlbCBWUk1BLjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsIHNpbcOodHJpYzwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgZWwgVkYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBkZWwgVlJNQSBhIGxhIHBhcnQgbmVnYXRpdmEgbyBwb3NpdGl2YSBkZWwgVlJNQSwgcmVzcGVjdGl2YW1lbnQsIGkgbGVzIGR1ZXMgZnVuY2lvbnMgbGluZWFscyBzw7NuIHNpbcOodHJpcXVlcyByZXNwZWN0ZSBkZSBsJ2VpeCBkZWwgVkYgKHkpLjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsIGludmVyczwvc3Ryb25nPjogaW5kaWNhIHF1ZSBlbCBWRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGludmVyc2EgZGVsIFZSTUEuPC9saT48bGk+PHN0cm9uZz5MaW5lYWwgaW52ZXJzIHNpbcOodHJpYzwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgZWwgVkYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBpbnZlcnNhIGRlbCBWUk1BIGEgbGEgcGFydCBuZWdhdGl2YSBvIHBvc2l0aXZhIGRlbCBWUk1BLCByZXNwZWN0aXZhbWVudCwgaSBsZXMgZHVlcyBmdW5jaW9ucyBsaW5lYWxzIHPDs24gc2ltw6h0cmlxdWVzIHJlc3BlY3RlIGRlIGwnZWl4IGRlbCBWRiAoeSkuPC9saT48bGk+PHN0cm9uZz5Db3M8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgVkYgY29tIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGVsIGNvc2ludXMgZGVsIFZSTUEuPC9saT48bGk+PHN0cm9uZz5TZWM8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgVkYgY29tIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGxhIHNlY2FudCBkZWwgVlJNQS48L2xpPjxsaT48c3Ryb25nPkNvcy1TZWM8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGVsIFZGIMOpcyBsYSBmdW5jacOzIGJhc2FkYSBlbiBlbCBjb3NpbnVzIGRlbCBWUk1BIHNpIGVsIFZSTUEgw6lzIG5lZ2F0aXUgaSBsYSBmdW5jacOzIGJhc2FkYSBlbiBsYSBzZWNhbnQgZGVsIFZSTUEgc2kgZWwgVlJNQSBubyDDqXMgbmVnYXRpdS48L2xpPjxsaT48c3Ryb25nPlNlYy1Db3M8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGVsIFZGIMOpcyBsYSBmdW5jacOzIGJhc2FkYSBlbiBlbCBjb3NpbnVzIGRlbCBWUk1BIHNpIGVsIFZSTUEgw6lzIG5lZ2F0aXUgaSBsYSBmdW5jacOzIGJhc2FkYSBlbiBsYSBzZWNhbnQgZGVsIFZSTUEgc2kgZWwgVlJNQSBubyDDqXMgbmVnYXRpdS48L2xpPjxsaT48c3Ryb25nPlRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIHF1ZSBzJ3V0aWxpdHphcsOgIHVuIGZpdHhlciBkZSB0YXVsYSBwZXIgZGVmaW5pciBlbCBncsOgZmljIGRlIGZhY3RvciB2ZXJ0aWNhbCB1dGlsaXR6YXQgcGVyIGRldGVybWluYXIgZWxzIFZGLjwvbGk+PC91bD48cD5BbGd1bnMgbW9kaWZpY2Fkb3JzIHBlciBhIGxlcyBwYXJhdWxlcyBjbGF1cyB2ZXJ0aWNhbHMgc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkZhY3RvciB6ZXJvPC9zdHJvbmc+OiBlc3RhYmxlaXggZWwgZmFjdG9yIHZlcnRpY2FsIHV0aWxpdHphdCBzaSBlbCBWUk1BIMOpcyB6ZXJvLiBBcXVlc3QgZmFjdG9yIGNvbMK3bG9jYSBsYSBpbnRlcmNlcGNpw7MgeSBkZSBsYSBmdW5jacOzIGVzcGVjaWZpY2FkYS4gUGVyIGRlZmluaWNpw7MsIGVsIGZhY3RvciB6ZXJvIG5vIMOpcyBhcGxpY2FibGUgYSBjYXAgZGUgbGVzIGZ1bmNpb25zIHZlcnRpY2FscyB0cmlnb25vbcOodHJpcXVlcyAoQ09TLCBTRUMsIENPUy1TRUMgbyBTRUMtQ09TKS4gQXF1ZXN0ZXMgZnVuY2lvbnMgZGVmaW5laXhlbiBsYSBpbnRlcmNlcGNpw7MgeS48L2xpPjxsaT48c3Ryb25nPkFuZ2xlIGRlIHRhbGwgYmFpeDwvc3Ryb25nPjogZGVmaW5laXggbCdhbmdsZSBWUk1BIHBlciBzb3RhIGRlbCBxdWFsIGVzIGRlZmluaXLDoCB1biBWRiBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+QW5nbGUgZGUgdGFsbCBhbHQ8L3N0cm9uZz46IGRlZmluZWl4IGwnYW5nbGUgVlJNQSBwZXIgc29icmUgZGVsIHF1YWwgZXMgZGVmaW5pcsOgIHVuIFZGIGluZmluaXQuPC9saT48bGk+PHN0cm9uZz5QZW5kZW50PC9zdHJvbmc+OiBlc3RhYmxlaXggZWwgcGVuZGVudCBkZSBsYSBsw61uaWEgcmVjdGEgdXRpbGl0emFkYSBhbWIgbGVzIHBhcmF1bGVzIGNsYXUgZGUgZmFjdG9yIHZlcnRpY2FsIDxzdHJvbmc+TGluZWFsPC9zdHJvbmc+IGkgPHN0cm9uZz5MaW5lYWwgaW52ZXJzPC9zdHJvbmc+LiBFbCBwZW5kZW50IHMnZXNwZWNpZmljYSBjb20gdW5hIGZyYWNjacOzIGQnZWxldmFjacOzIHNvYnJlIGwnZXh0ZW5zacOzIChwZXIgZXhlbXBsZSwgdW4gcGVuZGVudCBkZWwgNDUgJSDDqXMgMS80NSwgcXVlIHMnZXNwZWNpZmljYSBjb20gMCwwMjIyMikuPC9saT48bGk+PHN0cm9uZz5Ob20gZGUgdGF1bGE8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgbm9tIGRlIGxhIHRhdWxhIHF1ZSBkZWZpbmVpeCBlbCBWRi48L2xpPjwvdWw+XCIsXG5cdFwiQEBQYXRoLURpc3RhbmNlLUJhY2stTGlua19WZXJ0aWNhbC1SYXN0ZXJfdGFnMEBAXCI6IFwiRGVmaW5laXggbGEgcmVsYWNpw7MgZW50cmUgZWwgZmFjdG9yIGRlIGNvc3QgdmVydGljYWwgaSBsJ2FuZ2xlIGRlIG1vdmltZW50IHJlbGF0aXUgdmVydGljYWwgKFZSTUEpLlwiLFxuXHRcIkBAUGF0aC1EaXN0YW5jZS1CYWNrLUxpbmtfVmVydGljYWwtUmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgcyd1dGlsaXR6ZW4gcGVyIGNhbGN1bGFyIGVsIHBlbmRlbnQgdXRpbGl0emF0IHBlciBpZGVudGlmaWNhciBlbCBmYWN0b3IgdmVydGljYWwgcXVlIGVzIHByb2R1ZWl4IGVuIHBhc3NhciBkJ3VuYSBjZWzCt2xhIGEgdW5hIGFsdHJhLlwiLFxuXHRcIkBAUGx1c19DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBQbHVzX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQbHVzX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQbHVzX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAUGx1c19DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAUGx1c19DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQbHVzX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQFBsdXNfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBQbHVzX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAUGx1c19FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBQbHVzX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAUGx1c19SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBlbHMgdmFsb3JzIGRlIGxhIHF1YWwgcydhZmVnaXJhbi5cIixcblx0XCJAQFBsdXNfUmFzdGVyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAUGx1c19SYXN0ZXIyX3RhZzBAQFwiOiBcIkVudHJhZGEgZWxzIHZhbG9ycyBkZSBsYSBxdWFsIHMnYWZlZ2lyYW4gYSBsYSBwcmltZXJhIGVudHJhZGEuXCIsXG5cdFwiQEBQbHVzX1Jhc3RlcjJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBMb2NhbF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgdm9sZXUgZmVyIHNlcnZpciBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBMb2NhbF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBATG9jYWxfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExvY2FsX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBATG9jYWxfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExvY2FsX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQExvY2FsX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQExvY2FsX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBATG9jYWxfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBMb2NhbF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBMb2NhbF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQExvY2FsX1Jhc3Rlcl90YWcwQEBcIjogXCJFbnRyYWRhIGVscyB2YWxvcnMgZGUgbGEgcXVhbCBzJ2FmZWdpcmFuLlwiLFxuXHRcIkBATG9jYWxfUmFzdGVyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgYSBjb25kaWNpw7MgcXVlIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBMb2NhbF9SYXN0ZXIyX3RhZzBAQFwiOiBcIkVudHJhZGEgZWxzIHZhbG9ycyBkZSBsYSBxdWFsIHMnYWZlZ2lyYW4gYSBsYSBwcmltZXJhIGVudHJhZGEuXCIsXG5cdFwiQEBMb2NhbF9SYXN0ZXIyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgYSBjb25kaWNpw7MgcXVlIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBMb2NhbF9GYWxzZS1SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBlbHMgdmFsb3JzIGRlIGxhIHF1YWwgcyd1dGlsaXR6YXJhbiBjb20gYSB2YWxvcnMgZGUgcMOteGVsIGRlIHNvcnRpZGEgc2kgbGEgY29uZGljacOzIMOpcyBmYWxzYS4gUG90IHNlciB1biBlbnRlciwgdW4gcsOgc3RlciBkZSBwdW50IGZsb3RhbnQgbyB1biB2YWxvciBjb25zdGFudC5cIixcblx0XCJAQExvY2FsX1RydWUtUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZWxzIHZhbG9ycyBkZSBsYSBxdWFsIHMndXRpbGl0emFyYW4gY29tIGEgdmFsb3JzIGRlIHDDrXhlbCBkZSBzb3J0aWRhIHNpIGxhIGNvbmRpY2nDsyDDqXMgdmVyZGFkZXJhLiBQb3Qgc2VyIHVuIGVudGVyLCB1biByw6BzdGVyIGRlIHB1bnQgZmxvdGFudCBvIHVuIHZhbG9yIGNvbnN0YW50LlwiLFxuXHRcIkBAUG93ZXJfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAUG93ZXJfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFBvd2VyX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQb3dlcl9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFBvd2VyX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQb3dlcl9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQb3dlcl9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBQb3dlcl9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFBvd2VyX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAUG93ZXJfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAUG93ZXJfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBQb3dlcl9SYXN0ZXJfdGFnMEBAXCI6IFwiVmFsb3JzIGQnZW50cmFkYSBxdWUgcydlbGV2YXJhbiBhIGxhIHBvdMOobmNpYSBxdWUgZXMgZGVmaW5laXggYSA8c3Ryb25nPlLDoHN0ZXIyPC9zdHJvbmc+LlwiLFxuXHRcIkBAUG93ZXJfUmFzdGVyX3RhZzNAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAUG93ZXJfUmFzdGVyMl90YWcwQEBcIjogXCJMJ2VudHJhZGEgcXVlIGRldGVybWluYSBsYSBwb3TDqG5jaWEgYSBxdcOoIHMnZWxldmFyYW4gZWxzIHZhbG9ycyBkZSA8c3Ryb25nPlLDoHN0ZXI8L3N0cm9uZz4uXCIsXG5cdFwiQEBQb3dlcl9SYXN0ZXIyX3RhZzNAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAUmFkYXItQ2FsaWJyYXRpb25fQ2FsaWJyYXRpb24tVHlwZV90YWcwQEBcIjogXCJUaXB1cyBkZSBjYWxpYnJhdGdlIHF1ZSBlcyByZWFsaXR6YXLDoC5cIixcblx0XCJAQFJhZGFyLUNhbGlicmF0aW9uX0NhbGlicmF0aW9uLVR5cGVfdGFnMUBAXCI6IFwiQmV0YSB6ZXJvOiBsYSBmdW5jacOzIHJldG9ybmEgbGEgcmVmbGVjdGl2aXRhdCByYWRhciBwZXIgw6ByZWEgZCd1bml0YXQgZGUgbCdpbnRlcnZhbCBkJ2luY2xpbmFjacOzLiBBcXVlc3RhIMOpcyBlbCB0aXB1cyBkZSBjYWxpYnJhdGdlIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAUmFkYXItQ2FsaWJyYXRpb25fQ2FsaWJyYXRpb24tVHlwZV90YWcyQEBcIjogXCJTaWdtYSB6ZXJvOiBsYSBmdW5jacOzIHJldG9ybmEgbGEgcmVmbGVjdGl2aXRhdCByYWRhciBwZXIgw6ByZWEgZCd1bml0YXQgZGUgbCdpbnRlcnZhbCBkZSB0ZXJyZW55LiBFbHMgcmVzdWx0YXRzIHPDs24gdmFsb3JzIGRlIHB1bnQgZmxvdGFudCBkZSAzMiBiaXRzLCBxdWUgZXMgdHJvYmVuIG1ham9yaXTDoHJpYW1lbnQgZW4gdW4gaW50ZXJ2YWwgZGUgMCwwIGEgMSwwLiBObyBlcyByZWFsaXR6YSBlbCByZXRhbGwgZGUgZGFkZXMgc2kgYXF1ZXN0YSBvcGNpw7MgZXN0w6Agc2VsZWNjaW9uYWRhLlwiLFxuXHRcIkBAUmFkYXItQ2FsaWJyYXRpb25fQ2FsaWJyYXRpb24tVHlwZV90YWczQEBcIjogXCJHYW1tYTogbGEgZnVuY2nDsyByZXRvcm5hIGxhIHJlZmxlY3Rpdml0YXQgcmFkYXIgcGVyIMOgcmVhIGQndW5pdGF0IGRlbCBwbGEgcGVycGVuZGljdWxhciBhIGxhIGRpcmVjY2nDsyBkZSBtZXN1cmEuXCIsXG5cdFwiQEBSYWRhci1DYWxpYnJhdGlvbl9DYWxpYnJhdGlvbi1UeXBlX3RhZzRAQFwiOiBcIkNhcFwiLFxuXHRcIkBAUmFkYXItQ2FsaWJyYXRpb25fUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAUmFzdGVySW5mb19SYXN0ZXItSW5mb190YWcwQEBcIjogXCJTZWxlY2Npb25ldSB1biBkYXRhc2V0IHLDoHN0ZXIgcGVyIHV0aWxpdHphci1sbyBjb20gYSBwbGFudGlsbGFcIixcblx0XCJAQFJhc3RlckluZm9fUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAUmFzdGVyaXplLUF0dHJpYnV0ZXNfQXR0cmlidXRlLUZpZWxkLU5hbWVzX3RhZzBAQFwiOiBcIlVuYSBsbGlzdGEgZGUgY2FtcHMgYSBsYSA8c3Ryb25nPnRhdWxhIGQnYXRyaWJ1dHMgem9uYWw8L3N0cm9uZz4sIGFtYiBlbHMgY2FtcHMgc2VwYXJhdHMgcGVyIGNvbWVzLiBFbHMgdmFsb3JzIGRlIGNhZGEgY2FtcCBlc3RhbiByZXByZXNlbnRhdHMgcGVyIHVuYSBiYW5kYSBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAUmFzdGVyaXplLUF0dHJpYnV0ZXNfQmFja2dyb3VuZC1WYWx1ZV90YWcwQEBcIjogXCJWYWxvciBkZWwgcMOteGVsIGluaWNpYWwgZGUgbGVzIGJhbmRlcyBkZSBzb3J0aWRhIGQndW4gcsOgc3RlciwgYWJhbnMgcXVlIGVzIHRvcm5pIGEgcmVwcmVzZW50YXIgY2FydG9ncsOgZmljYW1lbnQuXCIsXG5cdFwiQEBSYXN0ZXJpemUtQXR0cmlidXRlc19CYWNrZ3JvdW5kLVZhbHVlX3RhZzFAQFwiOiBcIlNpIHVuIHDDrXhlbCBubyBlcyB0cm9iYSBkaW5zIGQndW5hIHpvbmEsIHJvbWFuZHLDoCBjb20gYSB2YWxvciBkZSBmb25zLlwiLFxuXHRcIkBAUmFzdGVyaXplLUF0dHJpYnV0ZXNfVmFsdWUtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIG5lY2Vzc2FyaS5cIixcblx0XCJAQFJhc3Rlcml6ZS1BdHRyaWJ1dGVzX1ZhbHVlLVJhc3Rlcl90YWcxQEBcIjogXCJMJ2VudHJhZGEgaGEgZGUgc2VyIHVuIHLDoHN0ZXIgZCd1bmEgYmFuZGEuIFNpIHMndXRpbGl0emEgdW4gcsOgc3RlciBtdWx0aWJhbmRhLCBub23DqXMgZXMgZmFyw6Agc2VydmlyIGxhIHByaW1lcmEgYmFuZGEuXCIsXG5cdFwiQEBSYXN0ZXJpemUtQXR0cmlidXRlc19XaGVyZS1DbGF1c2VfdGFnMEBAXCI6IFwiVW5hIGNvbnN1bHRhIGFkZGljaW9uYWwgb3BjaW9uYWwgYXBsaWNhZGEgYSBsYSA8c3Ryb25nPnRhdWxhIGQnYXRyaWJ1dHMgem9uYWw8L3N0cm9uZz4uXCIsXG5cdFwiQEBSYXN0ZXJpemUtQXR0cmlidXRlc19XaGVyZS1DbGF1c2VfdGFnM0BAXCI6IFwiU2kgbGEgdGF1bGEgYW50ZXJpb3Igcyd1dGlsaXR6YXZhIGNvbSB1biBleGVtcGxlLCBsYSBjb25zdWx0YSBzZXJpYSAke1ZhcmlhYmxlMSA9ICdiYXJlIGVhcnRoJ30uXCIsXG5cdFwiQEBSYXN0ZXJpemUtQXR0cmlidXRlc19ab25hbC1BdHRyaWJ1dGVzLVRhYmxlX3RhZzBAQFwiOiBcIkF0cmlidXRzIHpvbmFscyBlc3BlY2lmaWNhdHMgY29tIHVuYSBydXRhIGEgdW5hIGNsYXNzZSBkJ2VudGl0YXQgbG9jYWwsIGxhIHJ1dGEgYSB1bmEgdGF1bGEsIGxhIFVSTCBhIHVuYSBjYXBhIGRlIHNlcnZlaSBkJ2VudGl0YXRzIG8gdW5hIGNhZGVuYSBKU09OLlwiLFxuXHRcIkBAUmFzdGVyaXplLUF0dHJpYnV0ZXNfWm9uYWwtQXR0cmlidXRlcy1UYWJsZV90YWcxQEBcIjogXCJBbCBmb3JtYXQgSlNPTiwgZXMgZGVzY3JpdSBjb20gdW5hIGNvbMK3bGVjY2nDsyBkJ2Fzc2lnbmFjaW9ucyBkJ2lkZW50aWZpY2Fkb3JzIGRlIHpvbmEgYSB1bmEgbWF0cml1IGQnZW50ZXJzLiAke3sgem9uZUlkOltmMSxmMiwuLi4sZm5dLCAuLi4gfSB9XCIsXG5cdFwiQEBSYXN0ZXJpemUtQXR0cmlidXRlc19ab25lLUZpZWxkX3RhZzBAQFwiOiBcIkVsIG5vbSBkZWwgY2FtcCBjb250w6kgdmFsb3JzIGQnSUQgZGUgem9uYS5cIixcblx0XCJAQFJhc3Rlcml6ZS1BdHRyaWJ1dGVzX1pvbmUtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCd1bmEgYmFuZGEgb3BjaW9uYWwgb24gY2FkYSBww614ZWwgY29udMOpIGwnSUQgZGUgem9uYSBhc3NvY2lhdCBhIGxhIHViaWNhY2nDsy4gTCdJRCBkZSB6b25hIHMndXRpbGl0emEgcGVyIGNlcmNhciBmaWxlcyBhIGxhIHRhdWxhIGQnYXRyaWJ1dHMgem9uYWxzIHBlciBhIGxhIGluZ2VzdGEgZXNwZWPDrWZpY2EgZGUgbGEgem9uYS5cIixcblx0XCJAQFJhc3Rlcml6ZS1BdHRyaWJ1dGVzX1pvbmUtUmFzdGVyX3RhZzFAQFwiOiBcIkRlaXhldSBhcXVlc3QgcGFyw6BtZXRyZSBzZW5zZSBlc3BlY2lmaWNhciBzaSBub23DqXMgdm9sZXUgaW1wb3J0YXIgbCdhdHJpYnV0LlwiLFxuXHRcIkBAUmFzdGVyaXplLUZlYXR1cmVzX0ZpZWxkX3RhZzBAQFwiOiBcIlNlbGVjY2lvbmV1IGVsIGNhbXAgcXVlIHMndXRpbGl0emFyw6AgcGVyIGlkZW50aWZpY2FyIGNhZGEgZW50aXRhdC5cIixcblx0XCJAQFJhc3Rlcml6ZS1GZWF0dXJlc19JbnB1dC1GZWF0dXJlc190YWcwQEBcIjogXCJTZWxlY2Npb25ldSBsYSBjbGFzc2UgZCdlbnRpdGF0IHF1ZSBlcyBjb252ZXJ0aXLDoCBhbCBmb3JtYXQgZGUgcsOgc3Rlci5cIixcblx0XCJAQFJhc3Rlcml6ZS1GZWF0dXJlc19SYXN0ZXJfdGFnMEBAXCI6IFwiU2VsZWNjaW9uZXUgdW4gcsOgc3RlciBwZXIgZGVmaW5pciBsJ2V4dGVuc2nDsyBpIGxhIG1pZGEgZGUgbGEgY2VswrdsYSBwZXIgYSBsYSBjb252ZXJzacOzIGRlIGwnZW50aXRhdC5cIixcblx0XCJAQFJhc3Rlcml6ZS1GZWF0dXJlc19SZXNvbHZlLU92ZXJsYXAtTWV0aG9kX3RhZzBAQFwiOiBcIkRldGVybWluZXUgY29tIHMnYWRtaW5pc3RyYXJhbiBsZXMgZW50aXRhdHMgc3VwZXJwb3NhZGVzOlwiLFxuXHRcIkBAUmFzdGVyaXplLUZlYXR1cmVzX1Jlc29sdmUtT3ZlcmxhcC1NZXRob2RfdGFnMUBAXCI6IFwiPHN0cm9uZz5QcmltZXI8L3N0cm9uZz46IHMnYXNzaWduYXLDoCB1biB2YWxvciBkZWwgcHJpbWVyIGRhdGFzZXQgcHVibGljYXQgYSBsZXMgw6ByZWVzIHN1cGVycG9zYWRlcy5cIixcblx0XCJAQFJhc3Rlcml6ZS1GZWF0dXJlc19SZXNvbHZlLU92ZXJsYXAtTWV0aG9kX3RhZzNAQFwiOiBcIjxzdHJvbmc+w5psdGltPC9zdHJvbmc+OiBzJ2Fzc2lnbmFyw6AgdW4gdmFsb3IgZGUgbCfDumx0aW0gZGF0YXNldCBwdWJsaWNhdCBhIGxlcyDDoHJlZXMgc3VwZXJwb3NhZGVzLlwiLFxuXHRcIkBAUmFzdGVyaXplLUZlYXR1cmVzX1Jlc29sdmUtT3ZlcmxhcC1NZXRob2RfdGFnNUBAXCI6IFwiPHN0cm9uZz5Nw6lzIHBldGl0PC9zdHJvbmc+OiBzJ2Fzc2lnbmFyw6AgdW4gdmFsb3IgZGUgbCdlbnRpdGF0IG3DqXMgcGV0aXRhIGEgbGVzIMOgcmVlcyBzdXBlcnBvc2FkZXMuXCIsXG5cdFwiQEBSYXN0ZXJpemUtRmVhdHVyZXNfUmVzb2x2ZS1PdmVybGFwLU1ldGhvZF90YWc3QEBcIjogXCI8c3Ryb25nPk3DqXMgZ3Jhbjwvc3Ryb25nPjogcydhc3NpZ25hcsOgIHVuIHZhbG9yIGRlIGwnZW50aXRhdCBtw6lzIGdyYW4gYSBsZXMgw6ByZWVzIHN1cGVycG9zYWRlcy5cIixcblx0XCJAQFJlY2FzdF9PdmVycmlkZXNfdGFnMEBAXCI6IFwiVGF1bGEgZGUgbm9tcyBkZSB2YXJpYWJsZSBpIHZhbG9ycyBkZWZpbml0cyBwZXIgbCd1c3VhcmkgdXRpbGl0emFkYSBwZXIgbW9kaWZpY2FyIHVuIGRhdGFzZXQgZGUgbW9zYWljLlwiLFxuXHRcIkBAUmVjYXN0X1Jhc3Rlcl90YWcwQEBcIjogXCJQcm9kdWN0ZSBkZSByw6BzdGVyIGFsIHF1YWwgcydhcGxpY2Fyw6AgbGEgZnVuY2nDsyBSZWZvcm11bGEuXCIsXG5cdFwiQEBSZWdpb24tR3JvdXBfQWRkLUxpbmtfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBzaSBzJ2hhIGQnYWZlZ2lyIHVuIGNhbXAgZCdlbmxsYcOnIGEgbGEgdGF1bGEgZGUgbGEgc29ydGlkYS5cIixcblx0XCJAQFJlZ2lvbi1Hcm91cF9BZGQtTGlua190YWcxQEBcIjogXCI8c3Ryb25nPkFmZWdlaXggdW4gZW5sbGHDpzwvc3Ryb25nPjogcydhZmVnaXLDoCB1biBlbGVtZW50ICR7TElOS30gYSBsYSB0YXVsYSBkZWwgcsOgc3RlciBkZSBzb3J0aWRhLlwiLFxuXHRcIkBAUmVnaW9uLUdyb3VwX0FkZC1MaW5rX3RhZzNAQFwiOiBcIjxzdHJvbmc+U2Vuc2UgZW5sbGHDpzwvc3Ryb25nPjogbGEgdGF1bGEgZCdhdHJpYnV0cyBkZWwgcsOgc3RlciBkZSBzb3J0aWRhIG5vbcOpcyBjb250aW5kcsOgIGVscyBlbGVtZW50cyAke1ZhbHVlfSBpICR7Q291bnR9LlwiLFxuXHRcIkBAUmVnaW9uLUdyb3VwX0V4Y2x1ZGVkLVZhbHVlX3RhZzBAQFwiOiBcIklkZW50aWZpY2EgdW4gdmFsb3IgcXVlLCBlbiBjYXMgZGUgc2VyIHByZXNlbnQgZW4gdW5hIHViaWNhY2nDsyBkZSBjZWzCt2xhLCBwcm92b2NhcsOgIHF1ZSBubyBzJ2F2YWx1w68gY2FwIGNvbm5lY3Rpdml0YXQgZXNwYWNpYWwsIGluZGVwZW5kZW50bWVudCBkZSBjb20gcydoYWdpIGVzcGVjaWZpY2F0IGVsIG5vbWJyZSBkZSB2ZcOvbnMgKFFVQVRSRSBvIFZVSVQpLlwiLFxuXHRcIkBAUmVnaW9uLUdyb3VwX0V4Y2x1ZGVkLVZhbHVlX3RhZzFAQFwiOiBcIkxlcyBjZWzCt2xlcyBxdWUgbm8gaW5jbG9ndWluIGVsIHZhbG9yIGVzIHRyYWN0YXJhbiBjb20gTm9EYXRhIGkgcydleGNsb3VyYW4gZGVscyBjw6BsY3Vscy4gTGVzIHViaWNhY2lvbnMgZGUgY2VswrdsYSBxdWUgY29udGluZ3VpbiBlbCB2YWxvciBleGNsw7JzIHJlYnJhbiAwIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQFJlZ2lvbi1Hcm91cF9FeGNsdWRlZC1WYWx1ZV90YWcyQEBcIjogXCJFbCB2YWxvciBleGNsw7JzIMOpcyBzaW1pbGFyIGFsIGNvbmNlcHRlIGQndW4gdmFsb3IgZGUgZm9ucyBvIGEgdGVuaXIgdW5hIG3DoHNjYXJhIGFwbGljYWRhLiBTJ2hhIGQnZXNwZWNpZmljYXIgdW4gdmFsb3IgcGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUgc2kgcydoYSBkZWZpbml0IGVsIHBhcsOgbWV0cmUgPHN0cm9uZz4ke0NST1NTfTwvc3Ryb25nPi5cIixcblx0XCJAQFJlZ2lvbi1Hcm91cF9OdW1iZXItb2YtTmVpZ2hib3ItQ2VsbHNfdGFnMEBAXCI6IFwiTm9tYnJlIGRlIGNlbMK3bGVzIHZlw69uZXMgcXVlIHMndXRpbGl0emFyYW4gcGVyIGF2YWx1YXIgbGEgY29ubmVjdGl2aXRhdCBlbnRyZSBsZXMgY2VswrdsZXMuXCIsXG5cdFwiQEBSZWdpb24tR3JvdXBfTnVtYmVyLW9mLU5laWdoYm9yLUNlbGxzX3RhZzFAQFwiOiBcIjxzdHJvbmc+UVVBVFJFPC9zdHJvbmc+OiBkZWZpbmVpeCBsYSBjb25uZWN0aXZpdGF0IGVudHJlIGxlcyBjZWzCt2xlcyBhbWIgZWwgbWF0ZWl4IHZhbG9yIG5vbcOpcyBzaSBhcXVlc3RlcyBlcyB0cm9iZW4gZGlyZWN0YW1lbnQgYSBsJ2VzcXVlcnJhLCBhIGxhIGRyZXRhLCBhIHNvYnJlIG8gYSBzb3RhIGRlIGNhZGFzY3VuYSBkZSBsZXMgcXVhdHJlIHZlw69uZXMgbcOpcyBwcm9wZXJlcy4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBSZWdpb24tR3JvdXBfTnVtYmVyLW9mLU5laWdoYm9yLUNlbGxzX3RhZzNAQFwiOiBcIjxzdHJvbmc+VlVJVDwvc3Ryb25nPjogZGVmaW5laXggbGEgY29ubmVjdGl2aXRhdCBlbnRyZSBsZXMgY2VswrdsZXMgYW1iIGVsIG1hdGVpeCB2YWxvciBzaSBhcXVlc3RlcyBlcyB0cm9iZW4gZGlucyBkZWwgdmXDr25hdCBkZSB2dWl0IGNlbMK3bGVzIGltbWVkaWF0IHVuZXMgZGUgbGVzIGFsdHJlcy4gSW5jbG91IGxlcyBkaXJlY2Npb25zIGEgbGEgZHJldGEsIGEgbCdlc3F1ZXJyYSwgYW11bnQgbyBlbiBkaWFnb25hbCB1bmVzIHJlc3BlY3RlIGRlIGxlcyBhbHRyZXMuXCIsXG5cdFwiQEBSZWdpb24tR3JvdXBfWm9uZS1Db25uZWN0aXZpdHlfdGFnMEBAXCI6IFwiRGVmaW5laXggcXVpbnMgdmFsb3JzIGRlIGNlbMK3bGEgcydoYW4gZGUgdGVuaXIgZW4gY29tcHRlIGVuIGZlciBwcm92ZXMgZGUgY29ubmVjdGl2aXRhdC5cIixcblx0XCJAQFJlZ2lvbi1Hcm91cF9ab25lLUNvbm5lY3Rpdml0eV90YWcxQEBcIjogXCI8c3Ryb25nPkRJTlM8L3N0cm9uZz46IHByb3ZhIGxhIGNvbm5lY3Rpdml0YXQgZW50cmUgZWxzIHZhbG9ycyBkJ2VudHJhZGEgcXVlIHPDs24gaWd1YWxzIGRpbnMgZGUgbGEgbWF0ZWl4YSB6b25hLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFJlZ2lvbi1Hcm91cF9ab25lLUNvbm5lY3Rpdml0eV90YWczQEBcIjogXCJMZXMgw7puaXF1ZXMgY2VswrdsZXMgcXVlIGVzIHBvZGVuIGFncnVwYXIgc8OzbiBsZXMgZGUgbGEgbWF0ZWl4YSB6b25hICh2YWxvcikgcXVlIGNvbXBsZWl4ZW4gZWxzIHJlcXVpc2l0cyBlc3BhY2lhbHMgZGUgbGEgY29ubmVjdGl2aXRhdCBlc3BlY2lmaWNhZGEgcGVsIHBhcsOgbWV0cmUgPHN0cm9uZz5Ob21icmUgZGUgdmXDr25zPC9zdHJvbmc+IChxdWF0cmUgbyB2dWl0KS5cIixcblx0XCJAQFJlZ2lvbi1Hcm91cF9ab25lLUNvbm5lY3Rpdml0eV90YWc2QEBcIjogXCI8c3Ryb25nPkNSRVVBVDwvc3Ryb25nPjogcHJvdmEgbGEgY29ubmVjdGl2aXRhdCBzZWdvbnMgZWxzIHJlcXVpc2l0cyBlc3BhY2lhbHMgZXNwZWNpZmljYXRzIHBlbCBwYXLDoG1ldHJlIGRlIG5vbWJyZSBkZSB2ZcOvbnMgZW50cmUgbGVzIGNlbMK3bGVzIGFtYiBxdWFsc2V2b2wgdmFsb3IsIGV4Y2VwdGUgcGVyIGFsIHZhbG9yIHF1ZSBlbCBwYXLDoG1ldHJlIGRlIHZhbG9yIGV4Y2zDsnMgaGEgaWRlbnRpZmljYXQgcGVycXXDqCBzJ2V4Y2xvZ3VpLlwiLFxuXHRcIkBAUmVnaW9uLUdyb3VwX1pvbmUtQ29ubmVjdGl2aXR5X3RhZzhAQFwiOiBcIlF1YW4gcyd1dGlsaXR6YSBhcXVlc3RhIG9wY2nDsywgY2FsIGVzcGVjaWZpY2FyIHVuIHZhbG9yIHBlciBhbCBwYXLDoG1ldHJlIDxzdHJvbmc+VmFsb3IgZXhjbMOyczwvc3Ryb25nPi5cIixcblx0XCJAQFJlZ2lvbi1Hcm91cF9ab25lLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBuZWNlc3NhcmkgZGVsIHF1YWwgcydpZGVudGlmaWNhcmFuIGxlcyByZWdpb25zIMO6bmlxdWVzIGNvbm5lY3RhZGVzLlwiLFxuXHRcIkBAUmVnaW9uLUdyb3VwX1pvbmUtUmFzdGVyX3RhZzFAQFwiOiBcIkhhIGRlIHNlciBkZSB0aXB1cyBlbnRlci5cIixcblx0XCJAQFJlZ2lvbi1Hcm93X0ZpbGwtVmFsdWUtRmllbGRfdGFnMEBAXCI6IFwiQ2FtcCBkZSBsYSB0YXVsYSBkJ2F0cmlidXRzIHF1ZSBkZWZpbmVpeCBlbCB2YWxvciBkJ2VtcGxlbmFtZW50IGRlbCBncnVwIGRlIHDDrXhlbHMuIEVuIHVuYSBpbWF0Z2UgbXVsdGliYW5kYSwgYXF1ZXN0IHZhbG9yIHMnYXNzaWduYXLDoCBhIHRvdGVzIGxlcyBiYW5kZXMuXCIsXG5cdFwiQEBSZWdpb24tR3Jvd19NYXgtR3Jvd3RoLVJhZGl1cy1GaWVsZF90YWcwQEBcIjogXCJDYW1wIGRlIGxhIHRhdWxhIGQnYXRyaWJ1dHMgcXVlIGRlZmluZWl4IGVsIHJhZGkgZGUgY3JlaXhlbWVudCBtw6B4aW0gZW4gbGVzIHVuaXRhdHMgZGUgcmVmZXLDqG5jaWEgZXNwYWNpYWwgZGUgbGEgaW1hdGdlLlwiLFxuXHRcIkBAUmVnaW9uLUdyb3dfUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgYWwgcXVhbCB2b2xldSBleGVjdXRhciBhcXVlc3RhIGZ1bmNpw7MuXCIsXG5cdFwiQEBSZWdpb24tR3Jvd19TZWVkLVBvaW50c190YWcwQEBcIjogXCJDbGFzc2UgZCdlbnRpdGF0IGRlIHB1bnQsIHF1ZSBhY3R1YSBjb20gYSBvcmlnZW4gaW5pY2lhbCBkZSBsJ2FsZ29yaXRtZS4gQ2FkYSBwdW50IGQnb3JpZ2VuIGNvcnJlc3BvbiBhIHVuYSBlbnRyYWRhIGRlIGxhIHRhdWxhIGQnYXRyaWJ1dHMsIHF1ZSBjb211bmljYSBsZXMgZGFkZXMgZGUgcmFkaSBkZSBjcmVpeGVtZW50IG3DoHhpbSwgbGxpbmRhciBkZSBzaW1pbGl0dWQgaSB2YWxvciBkJ2VtcGxlbmFtZW50LlwiLFxuXHRcIkBAUmVnaW9uLUdyb3dfU2ltaWxhcml0eS1UaHJlc2hvbGQtRmllbGRfdGFnMEBAXCI6IFwiQ2FtcCBkZSBsYSB0YXVsYSBkJ2F0cmlidXRzIHF1ZSBkZWZpbmVpeCBlbCBsbGluZGFyIGRlIHNpbWlsaXR1ZCwgY29tIHVuYSBkaXN0w6BuY2lhIGV1Y2xpZGlhbmEgYSBsJ2VzcGFpIGVzcGVjdHJhbC5cIixcblx0XCJAQFJlbWFwX0FsbG93LVVubWF0Y2hlZC1QaXhlbC1WYWx1ZXNfdGFnMEBAXCI6IFwiRWxzIHZhbG9ycyBxdWUgZmFsdGVuIGEgbGEgdGF1bGEgZGUgcmVjbGFzc2lmaWNhY2nDsyBwb2RlbiBtYW50ZW5pciBlbCBzZXUgdmFsb3IgbyByZWFzc2lnbmFyLXNlIGEgTm9EYXRhLlwiLFxuXHRcIkBAUmVtYXBfQWxsb3ctVW5tYXRjaGVkLVBpeGVsLVZhbHVlc190YWcxQEBcIjogXCJEZXNhY3RpdmFkYTogcXVhbHNldm9sIHDDrXhlbCBkZWwgcsOgc3RlciBkJ2VudHJhZGEgcXVlIG5vIGVzIHJlY2xhc3NpZmlxdWkgZW4gdW5hIHRhdWxhIGRlIG5vdmEgcmVwcmVzZW50YWNpw7MgY2FydG9ncsOgZmljYSBjb25zZXJ2YXLDoCBlbCBzZXUgdmFsb3IgaSBzJ2VzY3JpdXLDoCBwZXIgYSBsYSBzZXZhIHViaWNhY2nDsyBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAUmVtYXBfQWxsb3ctVW5tYXRjaGVkLVBpeGVsLVZhbHVlc190YWcyQEBcIjogXCJBY3RpdmFkYTogcXVhbHNldm9sIHDDrXhlbCBkZWwgcsOgc3RlciBkJ2VudHJhZGEgcXVlIG5vIGVzIHJlY2xhc3NpZmlxdWkgZW4gdW5hIHRhdWxhIGRlIG5vdmEgcmVwcmVzZW50YWNpw7MgY2FydG9ncsOgZmljYSB0aW5kcsOgIGVsIHNldSB2YWxvciBhbWIgbGEgbm92YSByZXByZXNlbnRhY2nDsyBjYXJ0b2dyw6BmaWNhIE5vRGF0YSBwZXIgYSBsYSBzZXZhIHViaWNhY2nDsyBhbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBSZW1hcF9JbnB1dC1GaWVsZF90YWcwQEBcIjogXCJUcmlldSBlbCBjYW1wIHF1ZSBlc3BlY2lmaWNhIGVsIHZhbG9yIGRlbCBww614ZWwgZCdlbnRyYWRhIHF1ZSBlcyB0b3JuYXLDoCBhIHJlcHJlc2VudGFyIGNhcnRvZ3LDoGZpY2FtZW50LlwiLFxuXHRcIkBAUmVtYXBfSW5wdXQtRmllbGRfdGFnMUBAXCI6IFwiU2kgbGEgdm9zdHJhIHRhdWxhIHTDqSB1biBpbnRlcnZhbCBkZSB2YWxvcnMsIHNlcsOgIGVsIGNhbXAgZGUgdmFsb3IgbcOtbmltLCBpIHRhbWLDqSBzJ2hhIGQnZXNwZWNpZmljYXIgdW4gcGFyw6BtZXRyZSA8c3Ryb25nPkNhbXAgZCdlbnRyYWRhIG3DoHhpbTwvc3Ryb25nPi5cIixcblx0XCJAQFJlbWFwX0lucHV0LU1heC1GaWVsZF90YWcwQEBcIjogXCJUcmlldSB1biBjYW1wIGRlIHZhbG9yIG3DoHhpbSBzaSBsYSB0YXVsYSBlc3BlY2lmaWNhIHVuIGludGVydmFsIGRlIHZhbG9ycy5cIixcblx0XCJAQFJlbWFwX0xpc3RfdGFnMEBAXCI6IFwiRXNwZWNpZmlxdWV1IGVscyB2YWxvcnMgZGVsIG1hcGEsIGFpeMOtIGNvbSBsJ2ludGVydmFsIGRlIHZhbG9ycyBtw61uaW0gaSBtw6B4aW0gaSBlbHMgbm91cyB2YWxvcnMgZGUgcmVwcmVzZW50YWNpw7MgY2FydG9ncsOgZmljYS4gQSBtw6lzLCBsJ2ludGVydmFsIGRlIHZhbG9ycyBlcyBwb3QgZGVmaW5pciBjb20gYSBww614ZWxzIE5vRGF0YS5cIixcblx0XCJAQFJlbWFwX091dHB1dC1GaWVsZF90YWcwQEBcIjogXCJUcmlldSBlbCBjYW1wIHF1ZSBzJ3V0aWxpdHphcsOgIGNvbSBhIHZhbG9yIGRlIHNvcnRpZGEgcXVlIHMnaGEgdG9ybmF0IGEgcmVwcmVzZW50YXIgY2FydG9ncsOgZmljYW1lbnQuXCIsXG5cdFwiQEBSZW1hcF9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBSZW1hcF9SZW1hcC1EZWZpbml0aW9uLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdvcGNpw7MgcXVlIHZvbGV1IHV0aWxpdHphciBwZXIgZGVmaW5pciBlbHMgdmFsb3JzIGRlIG5vdmEgcmVwcmVzZW50YWNpw7MgY2FydG9ncsOgZmljYTpcIixcblx0XCJAQFJlbWFwX1JlbWFwLURlZmluaXRpb24tVHlwZV90YWcxQEBcIjogXCJMbGlzdGE6IGVzcGVjaWZpcXVldSB1biBpbnRlcnZhbCBkZSB2YWxvcnMgZGUgcMOteGVsIHBlciBhc3NpZ25hciBhIHVuIHZhbG9yIGRlIHDDrXhlbCBkZSBzb3J0aWRhXCIsXG5cdFwiQEBSZW1hcF9SZW1hcC1UYWJsZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGVsIHRpcHVzIGRlIHRhdWxhIHF1ZSB1dGlsaXR6YXJldSBwZXIgYSBsYSBub3ZhIHJlcHJlc2VudGFjacOzIGNhcnRvZ3LDoGZpY2EgZGVsIHLDoHN0ZXIgZCdlbnRyYWRhOlwiLFxuXHRcIkBAUmVtYXBfUmVtYXAtVGFibGUtVHlwZV90YWcxQEBcIjogXCJTaW1wbGU6IHV0aWxpdHphIGwnZW50cmFkYSA8c3Ryb25nPlRhdWxhIGRlIG5vdmEgcmVwcmVzZW50YWNpw7MgZ2VvZ3LDoGZpY2E8L3N0cm9uZz4gcGVyIGZlciB1bmEgbm92YSByZXByZXNlbnRhY2nDsyBjYXJ0b2dyw6BmaWNhIGRlbHMgdmFsb3JzIGRlIHDDrXhlbCBkZSA8c3Ryb25nPkNhbXAgZCdlbnRyYWRhPC9zdHJvbmc+IGFsIHZhbG9yIGNvcnJlc3BvbmVudCBkZWwgcGFyw6BtZXRyZSA8c3Ryb25nPkNhbXAgZGUgc29ydGlkYTwvc3Ryb25nPi4gQXF1ZXN0IG3DqHRvZGUgZW1tYWdhdHplbWEgYSBsYSBtZW3DsnJpYSBjYXUgbGEgdGF1bGEgZGUgbm92YSByZXByZXNlbnRhY2nDsyBjYXJ0b2dyw6BmaWNhIHBlcnF1w6ggcydleGVjdXRpIGFtYiBtw6lzIHJhcGlkZXNhLlwiLFxuXHRcIkBAUmVtYXBfUmVtYXAtVGFibGUtVHlwZV90YWc4QEBcIjogXCJEaW7DoG1pYzogYXF1ZXN0IG3DqHRvZGUgbm8gZW1tYWdhdHplbWEgYSBsYSBtZW3DsnJpYSBjYXUgbGEgdGF1bGEgZGUgbm92YSByZXByZXNlbnRhY2nDsyBjYXJ0b2dyw6BmaWNhIGkgcmVhbGl0emFyw6AgdW5hIGNvbnN1bHRhIGNhZGEgY29wIHF1ZSBlcyBwcmVzZW50aSB1bmEgc29swrdsaWNpdHVkIChwYW5vcsOgbWljYSwgem9vbSBvIGFjdHVhbGl0emFjacOzKS4gU2kgbGEgdGF1bGEgY2FudmlhLCBsYSBzb2zCt2xpY2l0dWQgc2Vnw7xlbnQgcG90IHRvcm5hciBhIHJlcHJlc2VudGFyIGNhcnRvZ3LDoGZpY2FtZW50IGVscyB2YWxvcnMgZGUgZm9ybWEgZGluw6BtaWNhLlwiLFxuXHRcIkBAUmVtYXBfUmVtYXAtVGFibGUtVHlwZV90YWc5QEBcIjogXCJSZWFzc2lnbmFjacOzOiB0YXVsYSBlc3BlY8OtZmljYSB1dGlsaXR6YWRhIHBlciBhbCBwcm9jw6lzIGRlIHJlY2xhc3NpZmljYWNpw7MsIG9uIGNhZGEgZmlsYSBub23DqXMgZXMgdG9ybmFyw6AgYSByZXByZXNlbnRhciBjYXJ0b2dyw6BmaWNhbWVudCBlbiBmdW5jacOzIGRlbCBsw61taXQgZGUgY2FkYSBlbnRpdGF0LlwiLFxuXHRcIkBAUmVtYXBfUmVtYXAtVGFibGVfdGFnMEBAXCI6IFwiTmF2ZWd1ZXUgcGVyIGxhIHRhdWxhIG9uIGVzIGRlZmluZWl4ZW4gZWxzIHZvc3RyZXMgdmFsb3JzIGRlIG5vdmEgcmVwcmVzZW50YWNpw7MgY2FydG9ncsOgZmljYSBkZSB2YWxvcnMuXCIsXG5cdFwiQEBSZXByb2plY3RfUmFzdGVyX3RhZzBAQFwiOiBcIkRhdGFzZXQgcsOgc3RlciBxdWUgZXMgdG9ybmFyw6AgYSBwcm9qZWN0YXIgbyBtb3N0cmVqYXIuXCIsXG5cdFwiQEBSZXByb2plY3RfU3BhdGlhbC1SZWZlcmVuY2VfdGFnMEBAXCI6IFwiU2lzdGVtYSBkZSBjb29yZGVuYWRlcyB1dGlsaXR6YXQgcGVyIHRvcm5hciBhIHByb2plY3RhciBsZXMgZGFkZXMuXCIsXG5cdFwiQEBSZXByb2plY3RfWC1DZWxsc2l6ZV90YWcwQEBcIjogXCJEaW1lbnNpw7MgeCBvbiBzJ2hhdXJpZW4gZGUgdG9ybmFyIGEgbW9zdHJlamFyIGxlcyBkYWRlcy4gw4lzIG9wY2lvbmFsLiBTaSBlbCB2YWxvciDDqXMgMCBvIGluZmVyaW9yLCBlbCBzb2JyZSBkZSBzb3J0aWRhIChtaWRlcyBkZSBjZWzCt2xhIGkgZXh0ZW5zacOzKSBlcyBjYWxjdWxhIGEgcGFydGlyIGRlbCByw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQFJlcHJvamVjdF9YLVJlZ2lzdHJhdGlvbi1Qb2ludF90YWcwQEBcIjogXCJDb29yZGVuYWRhIHggdXRpbGl0emFkYSBwZXIgZGVmaW5pciBsYSBjYW50b25hZGEgc3VwZXJpb3IgZXNxdWVycmEgZGVsIGRhdGFzZXQuIEFxdWVzdGEgY29vcmRlbmFkYSBzJ2hhIGRlIGRlZmluaXIgYW1iIGxlcyB1bml0YXRzIGRlIGxhIG5vdmEgcmVmZXLDqG5jaWEgZXNwYWNpYWwuIFNpIGVscyBwYXLDoG1ldHJlcyA8c3Ryb25nPk1pZGEgZGUgY2VswrdsYSBYPC9zdHJvbmc+IGkgPHN0cm9uZz5NaWRhIGRlIGNlbMK3bGEgWTwvc3Ryb25nPiBzw7NuIG3DqXMgZ3JhbnMgcXVlIDAsIGVzIGZhbiBzZXJ2aXIganVudGFtZW50IGFtYiBlbHMgcGFyw6BtZXRyZXMgPHN0cm9uZz5QdW50IGRlIHJlZ2lzdHJlIFg8L3N0cm9uZz4gaSA8c3Ryb25nPlB1bnQgZGUgcmVnaXN0cmUgWTwvc3Ryb25nPiBwZXIgZGVmaW5pciBlbCBjb250b3JuIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBSZXByb2plY3RfWS1DZWxsc2l6ZV90YWcwQEBcIjogXCJEaW1lbnNpw7MgeSBvbiBzJ2hhdXJpZW4gZGUgdG9ybmFyIGEgbW9zdHJlamFyIGxlcyBkYWRlcy4gw4lzIG9wY2lvbmFsLiBTaSBlbCB2YWxvciDDqXMgMCBvIGluZmVyaW9yLCBlbCBzb2JyZSBkZSBzb3J0aWRhIChtaWRlcyBkZSBjZWzCt2xhIGkgZXh0ZW5zacOzKSBlcyBjYWxjdWxhIGEgcGFydGlyIGRlbCByw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQFJlcHJvamVjdF9ZLVJlZ2lzdHJhdGlvbi1Qb2ludF90YWcwQEBcIjogXCJDb29yZGVuYWRhIHkgdXRpbGl0emFkYSBwZXIgZGVmaW5pciBsYSBjYW50b25hZGEgc3VwZXJpb3IgZXNxdWVycmEgZGVsIGRhdGFzZXQuIEFxdWVzdGEgY29vcmRlbmFkYSBzJ2hhIGRlIGRlZmluaXIgYW1iIGxlcyB1bml0YXRzIGRlIGxhIG5vdmEgcmVmZXLDqG5jaWEgZXNwYWNpYWwuIFNpIGVscyBwYXLDoG1ldHJlcyA8c3Ryb25nPk1pZGEgZGUgY2VswrdsYSBYPC9zdHJvbmc+IGkgPHN0cm9uZz5NaWRhIGRlIGNlbMK3bGEgWTwvc3Ryb25nPiBzw7NuIG3DqXMgZ3JhbnMgcXVlIDAsIGVzIGZhbiBzZXJ2aXIganVudGFtZW50IGFtYiBlbHMgcGFyw6BtZXRyZXMgPHN0cm9uZz5QdW50IGRlIHJlZ2lzdHJlIFg8L3N0cm9uZz4gaSA8c3Ryb25nPlB1bnQgZGUgcmVnaXN0cmUgWTwvc3Ryb25nPiBwZXIgZGVmaW5pciBlbCBjb250b3JuIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBSZXNhbXBsZV9JbnB1dC1DZWxsc2l6ZV90YWcwQEBcIjogXCJNaWRhIGRlIGNlbMK3bGEgZGVsIHDDrXhlbCBkZWwgcsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBSZXNhbXBsZV9PdXRwdXQtQ2VsbHNpemVfdGFnMEBAXCI6IFwiTWlkYSBkZSBjZWzCt2xhIGRlbCBww614ZWwgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS4gTGEgbWlkYSBkZSBsYSBjZWzCt2xhIGVzIHBvdCBjYW52aWFyLCBwZXLDsiBsJ2V4dGVuc2nDsyBkZWwgZGF0YXNldCByw6BzdGVyIGVzIG1hbnRpbmRyw6AuIEVsIHJlbW9zdHJlaWcgYSBwYXJ0aXIgZCd1bmEgbWlkYSBkZSBjZWzCt2xhIGRlZmluaWRhIHBlciBsJ3VzdWFyaSBwb3Qgc2VyIG1vbHQgbcOpcyBsZW50IHF1ZSBsJ29wY2nDsyBwZXIgZGVmZWN0ZSBkZWwgc2lzdGVtYSwgamEgcXVlIGVsIHJlbW9zdHJlaWcgcGVyIGRlZmVjdGUgZGVsIHNpc3RlbWEgcHJvY2Vzc2EgbGEgcXVhbnRpdGF0IG3DrW5pbWEgZGUgZGFkZXMgYSBwYXJ0aXIgZGUgbGEgcmVzb2x1Y2nDsyBtw6lzIHByw7J4aW1hIHBvc3NpYmxlLlwiLFxuXHRcIkBAUmVzYW1wbGVfUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIHF1ZSBlcyB0b3JuYXLDoCBhIG1vc3RyZWphci5cIixcblx0XCJAQFJlc2FtcGxlX1Jlc2FtcGxpbmctVHlwZV90YWcwQEBcIjogXCI8c3Ryb25nPlZlw60gbcOpcyBwcm9wZXI8L3N0cm9uZz46IGNhbGN1bGEgZWwgdmFsb3IgZGVsIHDDrXhlbCBkZSBzb3J0aWRhIG1pdGphbsOnYW50IGVsIHDDrXhlbCBkJ2VudHJhZGEgbcOpcyBwcm9wZXIuIEVscyBww614ZWxzIE5vRGF0YSByb21hbmRyYW4gc2Vuc2UgY2FudmlzIGFsIGRhdGFzZXQgcsOgc3RlciBkZSBzb3J0aWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFJlc2FtcGxlX1Jlc2FtcGxpbmctVHlwZV90YWcyQEBcIjogXCI8c3Ryb25nPkludGVycG9sYWNpw7MgYmlsaW5lYWw8L3N0cm9uZz46IGNhbGN1bGEgZWwgdmFsb3IgZGVsIHDDrXhlbCBtaXRqYW7Dp2FudCBlbCB2YWxvciBkZSBkaXN0w6BuY2lhIHBvbmRlcmFkYSBkZWxzIHF1YXRyZSBww614ZWxzIG3DqXMgcHJvcGVycy4gQXF1ZXN0IG3DqHRvZGUgw6lzIGVmaWNpZW50IHBlciBhbCBwcm9jw6lzIGRlcyBkJ3VuIHB1bnQgZGUgdmlzdGEgY29tcHV0YWNpb25hbC5cIixcblx0XCJAQFJlc2FtcGxlX1Jlc2FtcGxpbmctVHlwZV90YWc0QEBcIjogXCI8c3Ryb25nPkNvbnZvbHVjacOzIGPDumJpY2E8L3N0cm9uZz46IGRldGVybWluYSBlbCB2YWxvciBub3UgZCd1biBww614ZWwgYmFzYXQgZW4gbCdhanVzdGFtZW50IGQndW5hIGNvcmJhIHN1YXUgYSB0cmF2w6lzIGRlbHMgMTYgY2VudHJlcyBkZWwgcMOteGVsIGQnZW50cmFkYSBtw6lzIHByb3BlcnMuXCIsXG5cdFwiQEBSZXNhbXBsZV9SZXNhbXBsaW5nLVR5cGVfdGFnNkBAXCI6IFwiPHN0cm9uZz5NYWpvcmlhPC9zdHJvbmc+OiBjYWxjdWxhIGVsIHZhbG9yIGRlbCBww614ZWwgbWl0amFuw6dhbnQgZWwgdmFsb3IgZGVsIHDDrXhlbCBtYWpvcml0YXJpIGFscyAxNiBww614ZWxzIG3DqXMgcHJvcGVycy4gRWxzIHDDrXhlbHMgTm9EYXRhIHJvbWFuZHJhbiBzZW5zZSBjYW52aXMgYWwgZGF0YXNldCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBSZXNhbXBsZV9SZXNhbXBsaW5nLVR5cGVfdGFnOEBAXCI6IFwiPHN0cm9uZz5JbnRlcnBvbGFjacOzIGJpbGluZWFsIHBsdXM8L3N0cm9uZz46IHV0aWxpdHphIDxzdHJvbmc+SW50ZXJwb2xhY2nDsyBiaWxpbmVhbDwvc3Ryb25nPiwgZXhjZXB0ZSBlbHMgcMOteGVscyBkZSBsZXMgdm9yZXMsIHF1ZSBlcyBkZWZpbmVpeGVuIGNvbSBOb0RhdGEgaSBubyBlcyByZXBsaXF1ZW4gbmkgZXMgdGVuZW4gZW4gY29tcHRlIGFsIGPDoGxjdWwuIFV0aWxpdHpldSA8c3Ryb25nPkludGVycG9sYWNpw7MgYmlsaW5lYWwgcGx1czwvc3Ryb25nPiBwZXIgYSBsZXMgZGFkZXMgZGUgdGVzc2VswrdsZXMsIGphIHF1ZSBsZXMgdm9yZXMgY29pbmNpZGlyYW4gbWlsbG9yLlwiLFxuXHRcIkBAUmVzYW1wbGVfUmVzYW1wbGluZy1UeXBlX3RhZzE0QEBcIjogXCI8c3Ryb25nPkRlc2VuZm9jYW1lbnQgZGUgR2F1c3M8L3N0cm9uZz46IGFwbGljYSB1bmEgY29udm9sdWNpw7MgZ2F1c3NpYW5hIGFsIHLDoHN0ZXIgZCdvcmlnZW4gaSBjYWxjdWxhIGVsIHZhbG9yIGRlbCBww614ZWwgbWl0amFuw6dhbnQgZWwgdmFsb3IgZGUgZGlzdMOgbmNpYSBwb25kZXJhZGEgZGVscyBxdWF0cmUgcMOteGVscyBtw6lzIHByb3BlcnMgZGVzIGRlbCByw6BzdGVyIGRlc2VuZm9jYXQuIEVzIHJlY29tYW5hIHBlciBlbGltaW5hciBlbCBzb3JvbGwgZGUgbGVzIGRhZGVzIHJlbW9zdHJlamFkZXMgaSBwZXIgYWwgc3VibW9zdHJhdGdlIGVuIHVuYSBtaWRhIGRlIHDDrXhlbCBtw6lzIGdyYW4uXCIsXG5cdFwiQEBSZXNhbXBsZV9SZXNhbXBsaW5nLVR5cGVfdGFnMTZAQFwiOiBcIjxzdHJvbmc+RGVzZW5mb2NhbWVudCBkZSBHYXVzcyBwbHVzPC9zdHJvbmc+OiB1dGlsaXR6YSBlbCBtYXRlaXggbcOodG9kZSBxdWUgPHN0cm9uZz5EZXNlbmZvY2FtZW50IGRlIEdhdXNzPC9zdHJvbmc+LCBleGNlcHRlIGVscyBww614ZWxzIGRlIGxlcyB2b3JlcywgcXVlIGVzIGRlZmluZWl4ZW4gY29tIE5vRGF0YSBpIG5vIGVzIHJlcGxpcXVlbiBuaSBlcyB0ZW5lbiBlbiBjb21wdGUgYWwgY8OgbGN1bC4gVXRpbGl0emV1IDxzdHJvbmc+RGVzZW5mb2NhbWVudCBkZSBHYXVzcyBwbHVzPC9zdHJvbmc+IHBlciBhIGxlcyBkYWRlcyBkZSB0ZXNzZWzCt2xlcywgamEgcXVlIGxlcyB2b3JlcyBjb2luY2lkaXJhbiBtaWxsb3IuXCIsXG5cdFwiQEBSZXNhbXBsZV9SZXNhbXBsaW5nLVR5cGVfdGFnMjJAQFwiOiBcIjxzdHJvbmc+TWl0asOgPC9zdHJvbmc+OiBjYWxjdWxhIGVscyB2YWxvcnMgZGUgcMOteGVsIGRlIGNhZGEgcMOteGVsIGRlIGRlc3RpbmFjacOzIG1pdGphbsOnYW50IGVsIHZhbG9yIG1pdGrDoCBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMuXCIsXG5cdFwiQEBSZXNhbXBsZV9SZXNhbXBsaW5nLVR5cGVfdGFnMjRAQFwiOiBcIjxzdHJvbmc+TcOtbmltPC9zdHJvbmc+OiBjYWxjdWxhIGVsIHZhbG9yIGRlIHDDrXhlbCBtaXRqYW7Dp2FudCBlbCB2YWxvciBtw61uaW0gZGVscyBww614ZWxzIHN1cGVycG9zYXRzLiBFbHMgcMOteGVscyBOb0RhdGEgcm9tYW5kcmFuIHNlbnNlIGNhbnZpcyBhbCBkYXRhc2V0IHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQFJlc2FtcGxlX1Jlc2FtcGxpbmctVHlwZV90YWcyNkBAXCI6IFwiPHN0cm9uZz5Nw6B4aW08L3N0cm9uZz46IGVzIHJlY29tYW5hIHBlciBhIGRhZGVzIGNvbnTDrW51ZXMuIFByb2R1ZWl4IHVuYSBpbWF0Z2UgZGUgc29ydGlkYSBtw6lzIHN1YXUgcXVlIGVsIG3DqHRvZGUgZGUgcmVtb3N0cmVpZyBkZSB2ZcOtIG3DqXMgcHJvcGVyLlwiLFxuXHRcIkBAUmVzYW1wbGVfUmVzYW1wbGluZy1UeXBlX3RhZzI4QEBcIjogXCI8c3Ryb25nPk1pdGphbmEgZGVsIHZlY3Rvcjwvc3Ryb25nPjogY2FsY3VsYSBsYSBtaXRqYW5hIGRlbCB2ZWN0b3IgZGUgbWFnbml0dWQtZGlyZWNjacOzIG1pdGphbsOnYW50IHRvdHMgZWxzIHDDrXhlbHMgaW1wbGljYXRzLiBBcXVlc3QgbcOodG9kZSBub23DqXMgw6lzIGFwbGljYWJsZSBhbHMgcsOgc3RlcnMgZGUgZHVlcyBiYW5kZXMgcXVlIHJlcHJlc2VudGVuIGxhIG1hZ25pdHVkIGkgbGEgZGlyZWNjacOzLiBFbiBwcmltZXIgbGxvYywgY29icmVpeCBsYSBtYWduaXR1ZC1kaXJlY2Npw7MgYSBVLVYgaSwgYSBjb250aW51YWNpw7MsIHByZW4gbGEgbWl0amFuYSBhcml0bcOodGljYSBlbiB0b3RzIGVscyBww614ZWxzIGltcGxpY2F0cyBwZXIgb2J0ZW5pciBsJ1UtViBkZWwgcMOteGVsIGRlIGRlc3RpbmFjacOzIGkgdG9ybmEgYSBmZXIgbGEgY29udmVyc2nDsyBtYWduaXR1ZC1kaXJlY2Npw7MuXCIsXG5cdFwiQEBSb3VuZC1Eb3duX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQFJvdW5kLURvd25fQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFJvdW5kLURvd25fQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFJvdW5kLURvd25fQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBSb3VuZC1Eb3duX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBSb3VuZC1Eb3duX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFJvdW5kLURvd25fRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAUm91bmQtRG93bl9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFJvdW5kLURvd25fRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBSb3VuZC1Eb3duX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFJvdW5kLURvd25fRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBSb3VuZC1Eb3duX1Jhc3Rlcl90YWcwQEBcIjogXCJWYWxvcnMgZCdlbnRyYWRhIHF1ZSBzJ2Fycm9kb25pcmFuIGEgbGEgYmFpeGEuXCIsXG5cdFwiQEBSb3VuZC1VcF9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBSb3VuZC1VcF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAUm91bmQtVXBfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFJvdW5kLVVwX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAUm91bmQtVXBfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFJvdW5kLVVwX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFJvdW5kLVVwX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQFJvdW5kLVVwX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAUm91bmQtVXBfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBSb3VuZC1VcF9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBSb3VuZC1VcF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFJvdW5kLVVwX1Jhc3Rlcl90YWcwQEBcIjogXCJWYWxvcnMgZCdlbnRyYWRhIHF1ZSBzJ2Fycm9kb25pcmFuIGEgbCdhbMOnYS5cIixcblx0XCJAQFNlZ21lbnQtTWVhbi1TaGlmdF9NaW5pbXVtLVNlZ21lbnQtU2l6ZS1pbi1QaXhlbHNfdGFnMEBAXCI6IFwiTWlkYSBkZSBzZWdtZW50IG3DrW5pbWEgY2FsY3VsYWRhIGVuIHDDrXhlbHMuIEFxdWVzdCB2YWxvciBlc3TDoCByZWxhY2lvbmF0IGFtYiBsYSB2b3N0cmEgdW5pdGF0IGQnYXNzaWduYWNpw7MgbcOtbmltYSBpIGZpbHRyYXLDoCBibG9jcyBkZSBww614ZWxzIG3DqXMgcGV0aXRzLiBUb3RzIGVscyBzZWdtZW50cyBxdWUgc2lndWluIG3DqXMgcGV0aXRzIHF1ZSBlbCB2YWxvciBlc3BlY2lmaWNhdCBmdXNpb25hcmFuIGVscyBzZWdtZW50cyBtw6lzIHBldGl0cyBhbWIgZWwgc2VnbWVudCB2ZcOtIHF1ZSBtw6lzIGhpIGVuY2FpeGkuXCIsXG5cdFwiQEBTZWdtZW50LU1lYW4tU2hpZnRfUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIHF1ZSBlcyBzZWdtZW50YXLDoC5cIixcblx0XCJAQFNlZ21lbnQtTWVhbi1TaGlmdF9TZWdtZW50LWJvdW5kYXJpZXMtb25seV90YWcwQEBcIjogXCJFbHMgbMOtbWl0cyBkZSBzZWdtZW50IGVzIGRpYnVpeGVuIGNvbSB1biBsw61uaWEgZGUgY29yYmVzIGRlIG5pdmVsbCBuZWdyYSBhbCB2b2x0YW50IGRlIGNhZGEgc2VnbWVudC4gUmVzdWx0YSDDunRpbCBwZXIgZGlzdGluZ2lyIHNlZ21lbnRzIGFkamFjZW50cyBxdWUgdGVuZW4gY29sb3JzIHNpbWlsYXJzLlwiLFxuXHRcIkBAU2VnbWVudC1NZWFuLVNoaWZ0X1NlZ21lbnQtYm91bmRhcmllcy1vbmx5X3RhZzFAQFwiOiBcIkRlc2FjdGl2YWRhOiBlbHMgbMOtbWl0cyBkZSBzZWdtZW50IG5vIGVzIG1vc3RyZW4uIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAU2VnbWVudC1NZWFuLVNoaWZ0X1NlZ21lbnQtYm91bmRhcmllcy1vbmx5X3RhZzJAQFwiOiBcIkFjdGl2YWRhOiBlbHMgbMOtbWl0cyBkZSBzZWdtZW50IGVzIG1vc3RyZW4gYW1iIGzDrW5pZXMgZGUgY29yYmVzIGRlIG5pdmVsbCBuZWdyZXMgYWwgdm9sdGFudCBkZSBjYWRhIHNlZ21lbnQuXCIsXG5cdFwiQEBTZWdtZW50LU1lYW4tU2hpZnRfU3BhdGlhbC1EZXRhaWxfdGFnMEBAXCI6IFwiSW1wb3J0w6BuY2lhIHJlbGF0aXZhIGRlIHNlcGFyYXIgb2JqZWN0ZXMgZW4gZnVuY2nDsyBkZSBsZXMgY2FyYWN0ZXLDrXN0aXF1ZXMgZXNwYWNpYWxzLlwiLFxuXHRcIkBAU2VnbWVudC1NZWFuLVNoaWZ0X1NwYXRpYWwtRGV0YWlsX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZW50ZXJzIHbDoGxpZHMgdmFuIGRlIDEgYSAyMC4gRWxzIHZhbG9ycyBpbmZlcmlvcnMgcHJvcG9yY2lvbmVuIGNsYXNzZXMgw6BtcGxpZXMgaSBtw6lzIHN1YXZpdHphY2nDsy4gVW4gdmFsb3Igc3VwZXJpb3Igw6lzIGFkZXF1YXQgcGVyIGRpc2NyaW1pbmFyIGVudGl0YXRzIGVzcGFjaWFsbWVudCBwZXRpdGVzIG8gY2x1c3Rlcml0emFkZXMuIFBlciBleGVtcGxlLCBlbiB1bmEgZXNjZW5hIHVyYmFuYSwgcG9kZXUgY2xhc3NpZmljYXIgZW50aXRhdHMgZGUgc3VwZXJmw61jaWUgaW1wZXJtZWFibGUgbWl0amFuw6dhbnQgdW4gdmFsb3IgZGUgZGV0YWxsIGVzcGFjaWFsIG1lbm9yLCBvIGLDqSBwb2RldSBjbGFzc2lmaWNhciBlZGlmaWNpcyBpIGNhcnJldGVyZXMgY29tIGNsYXNzZXMgaW5kZXBlbmRlbnRzIG1pdGphbsOnYW50IHVuIHZhbG9yIGRlIGRldGFsbCBlc3BhY2lhbCBtw6lzIGFsdC5cIixcblx0XCJAQFNlZ21lbnQtTWVhbi1TaGlmdF9TcGVjdHJhbC1EZXRhaWxfdGFnMEBAXCI6IFwiSW1wb3J0w6BuY2lhIHJlbGF0aXZhIGRlIHNlcGFyYXIgb2JqZWN0ZXMgZW4gZnVuY2nDsyBkZSBsZXMgY2FyYWN0ZXLDrXN0aXF1ZXMgZGUgY29sb3IuXCIsXG5cdFwiQEBTZWdtZW50LU1lYW4tU2hpZnRfU3BlY3RyYWwtRGV0YWlsX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGUgcHVudCBmbG90YW50IHbDoGxpZHMgdmFuIGRlIDEsMCBhIDIwLDAuIEVscyB2YWxvcnMgaW5mZXJpb3JzIHByb3BvcmNpb25lbiBjbGFzc2VzIMOgbXBsaWVzIGkgbcOpcyBzdWF2aXR6YWNpw7MuIFVuIHZhbG9yIHN1cGVyaW9yIMOpcyBhZGVxdWF0IHNpIHZvbGV1IGRpc2NyaW1pbmFyIGVudGl0YXRzIHF1ZSB0ZW5lbiBjYXJhY3RlcsOtc3RpcXVlcyBlc3BlY3RyYWxzIHVuYSBtaWNhIHNlbWJsYW50cy4gUGVyIGV4ZW1wbGUsIGwnw7pzIGQndW4gdmFsb3IgZGUgZGV0YWxsIGVzcGVjdHJhbCBzdXBlcmlvciBlbiB1bmEgZXNjZW5hIGJvc2Nvc2EgdXMgcGVybWV0IGRpc3RpbmdpciBtaWxsb3IgbGVzIGVzcMOoY2llcyBkJ2FyYnJlcyBkaWZlcmVudHMuXCIsXG5cdFwiQEBTZWdtZW50LU1lYW4tU2hpZnRfbWF4aW11bXNlZ21lbnRzaXplaW5waXhlbHNfdGFnMEBAXCI6IFwiPHA+TWlkYSBtw6B4aW1hIGQndW4gc2VnbWVudC4gRWxzIHNlZ21lbnRzIHF1ZSBzaWd1aW4gbcOpcyBsbGFyZ3MgZGUgbGEgbWlkYSBlc3BlY2lmaWNhZGEgZXMgZGl2aWRpcmFuLiBVdGlsaXR6ZXUgYXF1ZXN0IHBhcsOgbWV0cmUgcGVyIGltcGVkaXIgcXVlIGFydGVmYWN0ZXMgZGUgbGEgY2FwYSBkZSBzb3J0aWRhIGdlbmVyaW4gc2VnbWVudHMgZ3JhbnMuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAtMS48L3A+XCIsXG5cdFwiQEBTZW50aW5lbC0xLVJhZGlvbWV0cmljLUNhbGlicmF0aW9uX0NhbGlicmF0aW9uLVR5cGVfdGFnMEBAXCI6IFwiU2VsZWNjaW9uZXUgdW4gZGVscyBxdWF0cmUgdGlwdXMgZGUgY2FsaWJyYXRnZTpcIixcblx0XCJAQFNlbnRpbmVsLTEtUmFkaW9tZXRyaWMtQ2FsaWJyYXRpb25fQ2FsaWJyYXRpb24tVHlwZV90YWcxQEBcIjogXCI8c3Ryb25nPkJldGEgemVybzwvc3Ryb25nPjogcHJvZHVlaXggdW5hIHNvcnRpZGEgcXVlIGNvbnTDqSBlbCBjb2VmaWNpZW50IGRlIGJyaWxsYW50b3IgZGUgcmFkYXIuXCIsXG5cdFwiQEBTZW50aW5lbC0xLVJhZGlvbWV0cmljLUNhbGlicmF0aW9uX0NhbGlicmF0aW9uLVR5cGVfdGFnM0BAXCI6IFwiPHN0cm9uZz5TaWdtYSB6ZXJvPC9zdHJvbmc+OiByZXRyb2Rpc3BlcnNpw7MgcmV0b3JuYWRhIGEgbCdhbnRlbmEgZGVzIGQndW5hIMOgcmVhIGQndW5pdGF0IGFsIHRlcnJhLCBlbiByZWxhY2nDsyBhbWIgdW4gaW50ZXJ2YWwgZGUgdGVycmVueS5cIixcblx0XCJAQFNlbnRpbmVsLTEtUmFkaW9tZXRyaWMtQ2FsaWJyYXRpb25fQ2FsaWJyYXRpb24tVHlwZV90YWc1QEBcIjogXCI8c3Ryb25nPiBHYW1tYTwvc3Ryb25nPjogbWVzdXJhIGQnZW5lcmdpYSBlbWVzYSBpIHJldG9ybmFkYSDDunRpbCBwZXIgZGV0ZXJtaW5hciBwYXRyb25zIGQnYW50ZW5hLlwiLFxuXHRcIkBAU2VudGluZWwtMS1SYWRpb21ldHJpYy1DYWxpYnJhdGlvbl9DYWxpYnJhdGlvbi1UeXBlX3RhZzdAQFwiOiBcIjxzdHJvbmc+Q2FwPC9zdHJvbmc+OiBubyBzJ2FwbGljYSBjYXAgY29ycmVjY2nDsy4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBTZW50aW5lbC0xLVJhZGlvbWV0cmljLUNhbGlicmF0aW9uX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBTTEMgbyBHUkQgZGUgbml2ZWxsIDEgZGUgU2VudGluZWwtMSBxdWUgdm9sZXUgcHJvY2Vzc2FyLlwiLFxuXHRcIkBAU2VudGluZWwtMS1SYWRpb21ldHJpYy1DYWxpYnJhdGlvbl9SYXN0ZXJfdGFnMUBAXCI6IFwiTGEgZnVuY2nDsyB1dGlsaXR6YXLDoCBlbCBmaXR4ZXIgTFVUIHBlciBhcGxpY2FyIGxhIGNvcnJlY2Npw7MgdMOocm1pY2EgbyBwZXIgZWxpbWluYXIgbGEgY29ycmVjY2nDsywgZW4gZnVuY2nDsyBkZWwgY29udGluZ3V0IGRlbCBMVVQuXCIsXG5cdFwiQEBTZW50aW5lbC0xLVRoZXJtYWwtTm9pc2UtUmVtb3ZhbF9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgZGUgU2VudGluZWwtMSBxdWUgdm9sZXUgcHJvY2Vzc2FyLlwiLFxuXHRcIkBAU2VudGluZWwtMS1UaGVybWFsLU5vaXNlLVJlbW92YWxfUmFzdGVyX3RhZzFAQFwiOiBcIkxhIGZ1bmNpw7MgdXRpbGl0emFyw6AgZWwgZml0eGVyIExVVCBwZXIgYXBsaWNhciBsYSBjb3JyZWNjacOzIHTDqHJtaWNhIG8gcGVyIGVsaW1pbmFyIGxhIGNvcnJlY2Npw7MsIGVuIGZ1bmNpw7MgZGVsIGNvbnRpbmd1dCBkZWwgTFVULlwiLFxuXHRcIkBAU2V0LU51bGxfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAU2V0LU51bGxfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFNldC1OdWxsX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTZXQtTnVsbF9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFNldC1OdWxsX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTZXQtTnVsbF9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTZXQtTnVsbF9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBTZXQtTnVsbF9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFNldC1OdWxsX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAU2V0LU51bGxfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAU2V0LU51bGxfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBTZXQtTnVsbF9GYWxzZS1SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBlbHMgdmFsb3JzIGRlIGxhIHF1YWwgcyd1dGlsaXR6YXJhbiBjb20gYSB2YWxvcnMgZGVsIHDDrXhlbCBkZSBzb3J0aWRhIHNpIGxhIGNvbmRpY2nDsyDDqXMgZmFsc2EuIFBvdCBzZXIgdW4gZW50ZXIsIHVuIHLDoHN0ZXIgZGUgcHVudCBmbG90YW50IG8gdW4gdmFsb3IgY29uc3RhbnQuXCIsXG5cdFwiQEBTZXQtTnVsbF9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIHJlcHJlc2VudGEgZWwgcmVzdWx0YXQgYm9vbGXDoCBkJ3VuYSBmdW5jacOzIG1hdGVtw6B0aWNhIGzDsmdpY2EgZGVsIHLDoHN0ZXIuIEVscyB2YWxvcnMgc2VyYW4gMSAodHJ1ZSkgbyAwIChmYWxzZSkuIFBvdCBzZXIgdW4gZW50ZXIgbyB1biByw6BzdGVyIGRlIHB1bnQgZmxvdGFudC5cIixcblx0XCJAQFNoYWRlZC1SZWxpZWZfQWx0aXR1ZGVfdGFnMEBAXCI6IFwiTCdhbHRpdHVkIMOpcyBsJ2FuZ2xlIGQnZWxldmFjacOzIGRlbCBzb2wgc29icmUgbCdob3JpdHrDsyBpIHZhIGRlIDAgYSA5MCBncmF1cy4gVW4gdmFsb3IgZGUgMCBncmF1cyBpbmRpY2EgcXVlIGVsIHNvbCDDqXMgYSBsJ2hvcml0esOzLCDDqXMgYSBkaXIsIGFsIG1hdGVpeCBwbGEgaG9yaXR6b250YWwgcXVlIGVsIG1hcmMgZGUgcmVmZXLDqG5jaWEuIFVuIHZhbG9yIGRlIDkwIGdyYXVzIGluZGljYSBxdWUgZWwgc29sIGVzIHRyb2JhIGRpcmVjdGFtZW50IGEgc29icmUuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyBkZSA0NSBncmF1cyBzb2JyZSBsJ2hvcml0esOzLlwiLFxuXHRcIkBAU2hhZGVkLVJlbGllZl9BemltdXRoX3RhZzBAQFwiOiBcIkwnQXppbXV0IMOpcyBsYSBwb3NpY2nDsyByZWxhdGl2YSBkZWwgc29sIGEgbCdob3JpdHrDsyAoZW4gZ3JhdXMpLiBBcXVlc3RhIHBvc2ljacOzIHMnaW5kaWNhIGFtYiBsJ2FuZ2xlIGRlbCBzb2wgbWVzdXJhdCBlbiBzZW50aXQgaG9yYXJpIGRlcyBkZWwgbm9yZC4gRWxzIHZhbG9ycyBkZSBsJ2F6aW11dCBpbmRpcXVlbiBlbCBzZWfDvGVudDogMCBncmF1cyDDqXMgZWwgbm9yZCwgOTAgZ3JhdXMgw6lzIGwnZXN0LCAxODAgZ3JhdXMgw6lzIGVsIHN1ZCBpIDI3MCBncmF1cyDDqXMgbCdvZXN0LlwiLFxuXHRcIkBAU2hhZGVkLVJlbGllZl9Db2xvci1TY2hlbWUtVHlwZV90YWcwQEBcIjogXCJFc3BlY2lmaXF1ZXUgc2kgcyd1dGlsaXR6YXLDoCB1bmEgcmFtcGEgZGUgY29sb3IgbyB1biBtYXBhIGRlIGNvbG9yIHBlciBtb3N0cmFyIGVsIHJlbGxldSBvbWJyZWphdC5cIixcblx0XCJAQFNoYWRlZC1SZWxpZWZfQ29sb3ItU2NoZW1lLVR5cGVfdGFnMUBAXCI6IFwiPHN0cm9uZz5SYW1wYSBkZSBjb2xvcjwvc3Ryb25nPjogcXVhbiBzZWxlY2Npb25ldSA8c3Ryb25nPlJhbXBhIGRlIGNvbG9yPC9zdHJvbmc+LCBzZSB1cyBkZW1hbmFyw6AgcXVlIHNlbGVjY2lvbmV1IHVuYSByYW1wYSBkZSBjb2xvciBhZGVxdWFkYS5cIixcblx0XCJAQFNoYWRlZC1SZWxpZWZfQ29sb3ItU2NoZW1lLVR5cGVfdGFnNUBAXCI6IFwiPHN0cm9uZz5NYXBhIGRlIGNvbG9yPC9zdHJvbmc+OiBxdWFuIHRyaWV1IDxzdHJvbmc+TWFwYSBkZSBjb2xvcjwvc3Ryb25nPiwgc2UgdXMgZGVtYW5hcsOgIHF1ZSBlc3BlY2lmaXF1ZXUgZWwgZml0eGVyIGRlbCBtYXBhIGRlIGNvbG9yIHF1ZSB2b2xldSB1dGlsaXR6YXIuXCIsXG5cdFwiQEBTaGFkZWQtUmVsaWVmX0Rpc2FibGUtZGVmYXVsdC1lZGdlLXBpeGVsLWludGVycG9sYXRpb25fdGFnMEBAXCI6IFwiRXNwZWNpZmlxdWV1IHNpIGxhIGludGVycG9sYWNpw7MgZGUgcMOteGVscyBkZSB2b3JhIHBlciBkZWZlY3RlIGVzdGFyw6AgZGVzaGFiaWxpdGFkYS5cIixcblx0XCJAQFNoYWRlZC1SZWxpZWZfRGlzYWJsZS1kZWZhdWx0LWVkZ2UtcGl4ZWwtaW50ZXJwb2xhdGlvbl90YWcxQEBcIjogXCJEZXNhY3RpdmFkYTogZWwgcmVtb3N0cmVpZyBiaWxpbmVhbCBzJ2FwbGljYXLDoCBkZSBtYW5lcmEgdW5pZm9ybWUgcGVyIHJlbW9zdHJlamFyIGVsIHJlbGxldSBvbWJyZWphdC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBTaGFkZWQtUmVsaWVmX0Rpc2FibGUtZGVmYXVsdC1lZGdlLXBpeGVsLWludGVycG9sYXRpb25fdGFnMkBAXCI6IFwiQWN0aXZhZGE6IGVsIHJlbW9zdHJlaWcgYmlsaW5lYWwgcyd1dGlsaXR6YXLDoCBhbCByZWxsZXUgb21icmVqYXQsIGV4Y2VwdGUgYSBsZXMgdm9yZXMgZGVscyByw6BzdGVycyBvIGFsIGNvc3RhdCBkZWxzIHDDrXhlbHMgZGUgTm9EYXRhLiBBcXVlc3RzIHDDrXhlbHMgcydlbXBsZW5hcmFuIGFtYiBOb0RhdGEsIGphIHF1ZSByZWR1aXJhbiBxdWFsc2V2b2wgZWZlY3RlIGRlIHZvcmEgZXNtb2xhZGEgcXVlIGVzIHB1Z3VpIHByb2R1aXIuXCIsXG5cdFwiQEBTaGFkZWQtUmVsaWVmX0Rpc2FibGUtZGVmYXVsdC1lZGdlLXBpeGVsLWludGVycG9sYXRpb25fdGFnM0BAXCI6IFwiTCfDunMgZCdhcXVlc3RhIG9wY2nDsyBldml0YXLDoCBxdWFsc2V2b2wgYXJ0ZWZhY3RlIGRlIHJlbW9zdHJlaWcgcXVlIGVzIHB1Z3VpIHByb2R1aXIgYSBsZXMgdm9yZXMgZCd1biByw6BzdGVyLiBFbHMgcMOteGVscyBkZSBzb3J0aWRhIGFsIGxsYXJnIGRlIGxhIHZvcmEgZCd1biByw6BzdGVyIG8gYWwgY29zdGF0IGRlIHDDrXhlbHMgc2Vuc2UgY2FwIHZhbG9yIHMnZW1wbGVuYXJhbiBhbWIgTm9EYXRhOyBwZXIgdGFudCwgZXMgcmVjb21hbmEgcXVlIGFxdWVzdGEgb3BjacOzIG5vbcOpcyBzJ3V0aWxpdHppIHF1YW4gaGkgaGFnaSBhbHRyZXMgcsOgc3RlcnMgYW1iIHDDrXhlbHMgc3VwZXJwb3NhdHMgZGlzcG9uaWJsZXMuIFF1YW4gaGkgaGFnaSBww614ZWxzIHN1cGVycG9zYXRzIGRpc3BvbmlibGVzLCBhcXVlc3RlcyDDoHJlZXMgZGUgTm9EYXRhIG1vc3RyYXJhbiBlbHMgdmFsb3JzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBlbiBsbG9jIGQnZXN0YXIgZW4gYmxhbmMuXCIsXG5cdFwiQEBTaGFkZWQtUmVsaWVmX1Jhc3Rlcl90YWcwQEBcIjogXCJEYXRhc2V0IGQnZWxldmFjacOzIGQnZW50cmFkYS5cIixcblx0XCJAQFNoYWRlZC1SZWxpZWZfU2NhbGluZ190YWcwQEBcIjogXCJFbCByZXN1bHRhdCBvbWJyZWphdCBzJ2VzY2FsYSBkZSBtYW5lcmEgZGluw6BtaWNhIG1pdGphbsOnYW50IGwnYWp1c3QgZGVsIGZhY3RvciB6IGFtYiB1bmEgZGUgbGVzIGR1ZXMgb3BjaW9ucyBzZWfDvGVudHM6XCIsXG5cdFwiQEBTaGFkZWQtUmVsaWVmX1NjYWxpbmdfdGFnMUBAXCI6IFwiPHN0cm9uZz5DYXA8L3N0cm9uZz46IG5vIHMnYXBsaWNhIGNhcCBlc2NhbGEuIMOJcyBpZGVhbCBwZXIgYSB1biBkYXRhc2V0IHLDoHN0ZXIgw7puaWMgcXVlIGNvYnJlaXggdW5hIMOgcmVhIGxvY2FsLiBObyBlcyByZWNvbWFuYSBwZXIgYSBkYXRhc2V0cyBkZSB0b3QgZWwgbcOzbiBhbWIgZ3JhbnMgdmFyaWFjaW9ucyBkJ2VsZXZhY2nDsyBvIG1hcGVzIG11bHRpZXNjYWxhLCBqYSBxdWUgcHJvZHVpcmlhIHVuIHJlbGxldSBkZWwgdGVycmVueSBhbWIgcG9jYSB2YXJpYWNpw7MgYSBlc2NhbGVzIHBldGl0ZXMuXCIsXG5cdFwiQEBTaGFkZWQtUmVsaWVmX1NjYWxpbmdfdGFnM0BAXCI6IFwiPHN0cm9uZz5BanVzdGF0PC9zdHJvbmc+OiBzJ2FwbGljYSB1biBhanVzdCBubyBsaW5lYWwgbWl0amFuw6dhbnQgZWxzIHZhbG9ycyBwZXIgZGVmZWN0ZSA8c3Ryb25nPlBvdMOobmNpYSBkZSBtaWRhIGRlIHDDrXhlbDwvc3Ryb25nPiBpIDxzdHJvbmc+RmFjdG9yIGRlIG1pZGEgZGUgcMOteGVsPC9zdHJvbmc+LCBxdWUgdGVuZW4gZW4gY29tcHRlIHVuYSDDoG1wbGlhIHZhcmlldGF0IGRlIGNhbnZpcyBkJ2FsdGl0dWQgKGVzY2FsYSkgYSBtaWRhIHF1ZSBsYSBpbWF0Z2UgcydhY29zdGEgaSBzJ2FsbHVueWEuIEwnb3BjacOzIDxzdHJvbmc+QWp1c3RhdDwvc3Ryb25nPiBlcyByZWNvbWFuYSBxdWFuIHMndXRpbGl0emEgdW4gZGF0YXNldCBkZSB0b3QgZWwgbcOzbi5cIixcblx0XCJAQFNoYWRlZC1SZWxpZWZfWi1GYWN0b3JfdGFnMEBAXCI6IFwiRWwgZmFjdG9yIHogw6lzIHVuIGZhY3RvciBkJ2VzY2FsYSBxdWUgcyd1dGlsaXR6YSBwZXIgY29udmVydGlyIGVscyB2YWxvcnMgZCdlbGV2YWNpw7MgYW1iIGR1ZXMgZmluYWxpdGF0czpcIixcblx0XCJAQFNoYWRlZC1SZWxpZWZfWi1GYWN0b3JfdGFnMUBAXCI6IFwiQ29udmVydGlyIGxlcyB1bml0YXRzIGQnZWxldmFjacOzIChjb20gYXJhIG1ldHJlcyBvIHBldXMpIGEgbGVzIHVuaXRhdHMgZGUgbGEgY29vcmRlbmFkYSBob3JpdHpvbnRhbCBkZWwgZGF0YXNldCwgcXVlIHBvZGVuIHNlciBwZXVzLCBtZXRyZXMgbyBncmF1c1wiLFxuXHRcIkBAU2hhZGVkLVJlbGllZl9aLUZhY3Rvcl90YWcyQEBcIjogXCJBZmVnaXIgZXhhZ2VyYWNpw7MgdmVydGljYWwgcGVyIGFjb25zZWd1aXIgdW4gZWZlY3RlIHZpc3VhbFwiLFxuXHRcIkBAU2hhZGVkLVJlbGllZl9aLUZhY3Rvcl90YWczQEBcIjogXCJFbCByZXN1bHRhdCBvbWJyZWphdCBzJ2VzY2FsYSBkZSBtYW5lcmEgZGluw6BtaWNhIG1pdGphbsOnYW50IGwnYWp1c3QgZGVsIGZhY3RvciB6IGFtYiB1bmEgZGUgbGVzIGR1ZXMgb3BjaW9ucyBzZWfDvGVudHM6XCIsXG5cdFwiQEBTaGFkZWQtUmVsaWVmX1otRmFjdG9yX3RhZzRAQFwiOiBcIjxzdHJvbmc+Q2FwPC9zdHJvbmc+OiBubyBzJ2FwbGljYSBjYXAgZXNjYWxhLiDDiXMgaWRlYWwgcGVyIGEgdW4gZGF0YXNldCByw6BzdGVyIMO6bmljIHF1ZSBjb2JyZWl4IHVuYSDDoHJlYSBsb2NhbC4gTm8gZXMgcmVjb21hbmEgcGVyIGEgZGF0YXNldHMgZGUgdG90IGVsIG3Ds24gYW1iIGdyYW5zIHZhcmlhY2lvbnMgZCdlbGV2YWNpw7MgbyBtYXBlcyBtdWx0aWVzY2FsYSwgamEgcXVlIHByb2R1aXJpYSB1biByZWxsZXUgZGVsIHRlcnJlbnkgYW1iIHBvY2EgdmFyaWFjacOzIGEgZXNjYWxlcyBwZXRpdGVzLlwiLFxuXHRcIkBAU2hhZGVkLVJlbGllZl9aLUZhY3Rvcl90YWc2QEBcIjogXCI8c3Ryb25nPkFqdXN0YXQ8L3N0cm9uZz46IHMnYXBsaWNhIHVuIGFqdXN0IG5vIGxpbmVhbCBtaXRqYW7Dp2FudCBlbHMgdmFsb3JzIHBlciBkZWZlY3RlIDxzdHJvbmc+UG90w6huY2lhIGRlIG1pZGEgZGUgcMOteGVsPC9zdHJvbmc+IGkgPHN0cm9uZz5GYWN0b3IgZGUgbWlkYSBkZSBww614ZWw8L3N0cm9uZz4sIHF1ZSB0ZW5lbiBlbiBjb21wdGUgdW5hIMOgbXBsaWEgdmFyaWV0YXQgZGUgY2FudmlzIGQnYWx0aXR1ZCAoZXNjYWxhKSBhIG1pZGEgcXVlIGxhIGltYXRnZSBzJ2Fjb3N0YSBpIHMnYWxsdW55YS4gTCdvcGNpw7MgPHN0cm9uZz5BanVzdGF0PC9zdHJvbmc+IGVzIHJlY29tYW5hIHF1YW4gcyd1dGlsaXR6YSB1biBkYXRhc2V0IGRlIHRvdCBlbCBtw7NuLlwiLFxuXHRcIkBAU2hhZGVkLVJlbGllZl9oaWxsc2hhZGV0eXBlX3RhZzBAQFwiOiBcIkNvbnRyb2xhIGwnb3JpZ2VuIGRlIGxhIGlswrdsdW1pbmFjacOzIHBlciBhIGwnb21icmVqYXQuXCIsXG5cdFwiQEBTaGFkZWQtUmVsaWVmX2hpbGxzaGFkZXR5cGVfdGFnMUBAXCI6IFwiPHN0cm9uZz5UcmFkaWNpb25hbDwvc3Ryb25nPjogY2FsY3VsYSBsJ29tYnJlamF0IGRlcyBkJ3VuYSBkaXJlY2Npw7MgZCdpbMK3bHVtaW5hY2nDsyDDum5pY2EuIFBvZGV1IGRlZmluaXIgbGVzIG9wY2lvbnMgPHN0cm9uZz5BemltdXRoPC9zdHJvbmc+IGkgPHN0cm9uZz5BbHRpdHVkPC9zdHJvbmc+IHBlciBjb250cm9sYSBsYSB1YmljYWNpw7MgZGUgbGEgZm9udCBkZSBsbHVtLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFNoYWRlZC1SZWxpZWZfaGlsbHNoYWRldHlwZV90YWcyQEBcIjogXCI8c3Ryb25nPk11bHRpZGlyZWNjaW9uYWw8L3N0cm9uZz46IGNvbWJpbmEgbGEgbGx1bSBkZSBkaXZlcnNlcyBmb250cyBwZXIgcmVwcmVzZW50YXIgdW5hIHZpc3VhbGl0emFjacOzIG1pbGxvcmFkYSBkZWwgdGVycmVueS5cIixcblx0XCJAQFNoYWRlZC1SZWxpZWZfUFNQb3dlcl90YWcwQEBcIjogXCJMYSA8c3Ryb25nPnBvdMOobmNpYSBkZSBtaWRhIGRlIHDDrXhlbDwvc3Ryb25nPiB0w6kgZW4gY29tcHRlIGVscyBjYW52aXMgZCdhbHRpdHVkIChvIGVzY2FsYSkgYSBtZXN1cmEgcXVlIGVsIHZpc29yIGFtcGxpYSBpIHJlZHVlaXggbGEgdmlzdWFsaXR6YWNpw7MgZGVsIG1hcGEuIMOJcyBsJ2V4cG9uZW50IGFwbGljYXQgYWwgdGVybWUgZGUgbWlkYSBkZSBww614ZWwgYSBsJ2VxdWFjacOzIHF1ZSBjb250cm9sYSBsYSB2ZWxvY2l0YXQgYSBxdcOoIGNhbnZpYSBlbCA8c3Ryb25nPmZhY3RvciBaPC9zdHJvbmc+IHBlciBldml0YXIgdW5hIHDDqHJkdWEgZGUgcmVsbGV1IHNpZ25pZmljYXRpdmEuXCIsXG5cdFwiQEBTaGFkZWQtUmVsaWVmX1BTUG93ZXJfdGFnMUBAXCI6IFwiQXF1ZXN0IHBhcsOgbWV0cmUgbm9tw6lzIMOpcyB2w6BsaWQgc2kgZWwgdGlwdXMgZCc8c3Ryb25nPkVzY2FsYTwvc3Ryb25nPiDDqXMgPHN0cm9uZz5BanVzdGFkYTwvc3Ryb25nPi4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIDAsNjY0LlwiLFxuXHRcIkBAU2hhZGVkLVJlbGllZl9QU1pGYWN0b3JfdGFnMEBAXCI6IFwiRWwgPHN0cm9uZz5mYWN0b3IgZGUgbWlkYSBkZSBww614ZWw8L3N0cm9uZz4gdMOpIGVuIGNvbXB0ZSBlbHMgY2FudmlzIGQnZXNjYWxhIGEgbWVzdXJhIHF1ZSBlbCB2aXNvciBhbXBsaWEgaSByZWR1ZWl4IGxhIHZpc3VhbGl0emFjacOzIGRlbCBtYXBhLiBDb250cm9sYSBsYSB2ZWxvY2l0YXQgYSBxdcOoIGNhbnZpYSBlbCA8c3Ryb25nPmZhY3RvciBaPC9zdHJvbmc+LlwiLFxuXHRcIkBAU2hhZGVkLVJlbGllZl9QU1pGYWN0b3JfdGFnMUBAXCI6IFwiQXF1ZXN0IHBhcsOgbWV0cmUgbm9tw6lzIMOpcyB2w6BsaWQgc2kgZWwgdGlwdXMgZCc8c3Ryb25nPkVzY2FsYTwvc3Ryb25nPiDDqXMgPHN0cm9uZz5BanVzdGFkYTwvc3Ryb25nPi4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIDAsMDI0LlwiLFxuXHRcIkBAU2luX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQFNpbl9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAU2luX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTaW5fQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBTaW5fQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFNpbl9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTaW5fRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAU2luX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAU2luX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAU2luX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFNpbl9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFNpbl9SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBkZSBsYSBxdWFsIGVzIGNhbGN1bGFyYW4gZWxzIHZhbG9ycyBkZWwgc2ludXMuXCIsXG5cdFwiQEBTaW5IX0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQFNpbkhfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFNpbkhfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFNpbkhfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBTaW5IX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTaW5IX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFNpbkhfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAU2luSF9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFNpbkhfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBTaW5IX0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFNpbkhfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBTaW5IX1Jhc3Rlcl90YWcwQEBcIjogXCJFbnRyYWRhIGRlIGxhIHF1YWwgZXMgY2FsY3VsYXJhbiBlbHMgdmFsb3JzIGRlbCBzaW51cyBoaXBlcmLDsmxpYy5cIixcblx0XCJAQFNpbmtfRmxvdy1EaXJlY3Rpb24tUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIHF1ZSBtb3N0cmEgbGEgZGlyZWNjacOzIGRlIHNvcnRpZGEgZGVsIGZsdXggZGUgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBAU2lua19GbG93LURpcmVjdGlvbi1SYXN0ZXJfdGFnMUBAXCI6IFwiRWwgcsOgc3RlciBkZSBkaXJlY2Npw7MgZGVsIGZsdXggZXMgcG90IGNyZWFyIGV4ZWN1dGFudCBsYSBmdW5jacOzIDxzdHJvbmc+RGlyZWNjacOzIGRlbCBmbHV4PC9zdHJvbmc+LlwiLFxuXHRcIkBAU2xvcGVfREVNX3RhZzBAQFwiOiBcIkRhdGFzZXQgZCdlbGV2YWNpw7MgZCdlbnRyYWRhLlwiLFxuXHRcIkBAU2xvcGVfRGlzYWJsZS1kZWZhdWx0LWVkZ2UtcGl4ZWwtaW50ZXJwb2xhdGlvbl90YWcwQEBcIjogXCJMJ8O6cyBkJ2FxdWVzdGEgb3BjacOzIGV2aXRhcsOgIHF1YWxzZXZvbCBhcnRlZmFjdGUgZGUgcmVtb3N0cmVpZyBxdWUgZXMgcHVndWkgcHJvZHVpciBhIGxlcyB2b3JlcyBkJ3VuIHLDoHN0ZXIuIEVscyBww614ZWxzIGRlIHNvcnRpZGEgYWwgbGxhcmcgZGUgbGEgdm9yYSBkJ3VuIHLDoHN0ZXIgbyBhbCBjb3N0YXQgZGUgcMOteGVscyBzZW5zZSBjYXAgdmFsb3IgcydlbXBsZW5hcmFuIGFtYiBOb0RhdGE7IHBlciB0YW50LCBlcyByZWNvbWFuYSBxdWUgYXF1ZXN0YSBvcGNpw7Mgbm9tw6lzIHMndXRpbGl0emkgcXVhbiBoaSBoYWdpIGFsdHJlcyByw6BzdGVycyBhbWIgcMOteGVscyBzdXBlcnBvc2F0cyBkaXNwb25pYmxlcy4gUXVhbiBoaSBoYWdpIHDDrXhlbHMgc3VwZXJwb3NhdHMgZGlzcG9uaWJsZXMsIGFxdWVzdGVzIMOgcmVlcyBkZSBOb0RhdGEgbW9zdHJhcmFuIGVscyB2YWxvcnMgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIGVuIGxsb2MgZCdlc3RhciBlbiBibGFuYy5cIixcblx0XCJAQFNsb3BlX0Rpc2FibGUtZGVmYXVsdC1lZGdlLXBpeGVsLWludGVycG9sYXRpb25fdGFnMUBAXCI6IFwiRGVzYWN0aXZhZGE6IGVsIHJlbW9zdHJlaWcgYmlsaW5lYWwgcydhcGxpY2Fyw6AgZGUgbWFuZXJhIHVuaWZvcm1lIHBlciByZW1vc3RyZWphciBlbCBwZW5kZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFNsb3BlX0Rpc2FibGUtZGVmYXVsdC1lZGdlLXBpeGVsLWludGVycG9sYXRpb25fdGFnMkBAXCI6IFwiQWN0aXZhZGE6IGVsIHJlbW9zdHJlaWcgYmlsaW5lYWwgcyd1dGlsaXR6YXLDoCBhbCBwZW5kZW50LCBleGNlcHRlIGEgbGVzIHZvcmVzIGRlbHMgcsOgc3RlcnMgbyBhbCBjb3N0YXQgZGVscyBww614ZWxzIGRlIE5vRGF0YS4gQXF1ZXN0cyBww614ZWxzIHMnZW1wbGVuYXJhbiBhbWIgTm9EYXRhLCBqYSBxdWUgcmVkdWlyYW4gcXVhbHNldm9sIGVmZWN0ZSBkZSB2b3JhIGVzbW9sYWRhIHF1ZSBlcyBwdWd1aSBwcm9kdWlyLlwiLFxuXHRcIkBAU2xvcGVfU2NhbGluZ190YWcwQEBcIjogXCJMYSBpbmNsaW5hY2nDsyBkZWwgcGVuZGVudCBlcyBwb3QgbW9zdHJhciBjb20gdW4gdmFsb3IgZW4gZ3JhdXMgbyB1biBwZXJjZW50YXRnZSBkJ2VsZXZhY2nDsy4gSGkgaGEgdHJlcyBvcGNpb25zIGQnPHN0cm9uZz5Fc2NhbGF0PC9zdHJvbmc+OlwiLFxuXHRcIkBAU2xvcGVfU2NhbGluZ190YWczQEBcIjogXCI8c3Ryb25nPkdyYXU8L3N0cm9uZz46IGxhIGluY2xpbmFjacOzIGRlbCBwZW5kZW50IGVzIGNhbGN1bGEgZW4gZ3JhdXMuIEVscyB2YWxvcnMgdmFuIGRlIDAgYSA5MC5cIixcblx0XCJAQFNsb3BlX1NjYWxpbmdfdGFnNUBAXCI6IFwiPHN0cm9uZz5QZXJjZW50X1Jpc2U8L3N0cm9uZz46IGxhIGluY2xpbmFjacOzIGRlbCBwZW5kZW50IGVzIGNhbGN1bGEgZW4gcGVyY2VudGF0Z2UuIEVscyB2YWxvcnMgdmFuIGRlIDAgYSBpbmZpbml0LiBVbmEgc3VwZXJmw61jaWUgcGxhbmEgdMOpIHVuYSBpbmNsaW5hY2nDsyBkZSAwICUsIG1lbnRyZSBxdWUgdW5hIHN1cGVyZsOtY2llIGRlIDQ1IGdyYXVzIHTDqSB1biBwZXJjZW50YXRnZSBkJ2VsZXZhY2nDsyBkZSAxMDAuIENvbSBtw6lzIHZlcnRpY2FsIMOpcyBsYSBzdXBlcmbDrWNpZSwgbcOpcyBhdWdtZW50YSBlbCBwZXJjZW50YXRnZSBkJ2VsZXZhY2nDsy5cIixcblx0XCJAQFNsb3BlX1NjYWxpbmdfdGFnN0BAXCI6IFwiPHN0cm9uZz5Fc2NhbGF0PC9zdHJvbmc+OiBsYSBpbmNsaW5hY2nDsyBkZWwgcGVuZGVudCBlcyBjYWxjdWxhIGlndWFsIHF1ZSBhbWIgR3JhdSwgcGVyw7IgcydhanVzdGEgZWwgZmFjdG9yIHogZGUgbCdlc2NhbGEuIFV0aWxpdHphIGVscyB2YWxvcnMgPHN0cm9uZz5Qb3TDqG5jaWEgZGUgbWlkYSBkZSBww614ZWw8L3N0cm9uZz4gaSA8c3Ryb25nPkZhY3RvciBkZSBtaWRhIGRlIHDDrXhlbDwvc3Ryb25nPiwgcXVlIHRlbmVuIGVuIGNvbXB0ZSBlbHMgY2FudmlzIGRlIHJlc29sdWNpw7MgKGVzY2FsYSkgYSBtaWRhIHF1ZSBsYSBpbWF0Z2UgcydhY29zdGEgaSBzJ2FsbHVueWEuIEFxdWVzdGEgb3BjacOzIGVzIHJlY29tYW5hIHF1YW4gcyd1dGlsaXR6ZW4gZGF0YXNldHMgZGUgdG90IGVsIG3Ds24sIGVzcGVjaWFsbWVudCBxdWFuIGVzIGZhIHNlcnZpciBlbCBwZW5kZW50IGNvbSB1bmEgc3VwZXJmw61jaWUgZGUgdmlzdWFsaXR6YWNpw7MuXCIsXG5cdFwiQEBTbG9wZV9TY2FsaW5nX3RhZzEzQEBcIjogXCJFbCBmYWN0b3IgeiBzJ2FqdXN0YSBtaXRqYW7Dp2FudCBsJ2VxdWFjacOzIHNlZ8O8ZW50OlwiLFxuXHRcIkBAU2xvcGVfU2NhbGluZ190YWcxNEBAXCI6IFwiRmFjdG9yIFogYWp1c3RhdCA9IChmYWN0b3IgWikgKyAobWlkYSBkZSBww614ZWwpXCIsXG5cdFwiQEBTbG9wZV9TY2FsaW5nX3RhZzE1QEBcIjogXCLDlyAoRmFjdG9yIGRlIG1pZGEgZGUgcMOteGVsKVwiLFxuXHRcIkBAU2xvcGVfU2NhbGluZ190YWcxNkBAXCI6IFwiUG90w6huY2lhIGRlIG1pZGEgZGUgcMOteGVsXCIsXG5cdFwiQEBTbG9wZV9aLUZhY3Rvcl90YWcwQEBcIjogXCJFbCA8c3Ryb25nPmZhY3RvciB6PC9zdHJvbmc+IMOpcyB1biBmYWN0b3IgZCdlc2NhbGEgcXVlIHMndXRpbGl0emEgcGVyIGNvbnZlcnRpciBlbHMgdmFsb3JzIGQnZWxldmFjacOzIGFtYiBkdWVzIGZpbmFsaXRhdHM6XCIsXG5cdFwiQEBTbG9wZV9aLUZhY3Rvcl90YWczQEBcIjogXCJDb252ZXJ0aXIgbGVzIHVuaXRhdHMgZCdlbGV2YWNpw7MgKGNvbSBhcmEgbWV0cmVzIG8gcGV1cykgYSBsZXMgdW5pdGF0cyBkZSBsYSBjb29yZGVuYWRhIGhvcml0em9udGFsIGRlbCBkYXRhc2V0LCBxdWUgcG9kZW4gc2VyIHBldXMsIG1ldHJlcyBvIGdyYXVzXCIsXG5cdFwiQEBTbG9wZV9aLUZhY3Rvcl90YWc0QEBcIjogXCJBZmVnaXIgZXhhZ2VyYWNpw7MgdmVydGljYWwgcGVyIGFjb25zZWd1aXIgdW4gZWZlY3RlIHZpc3VhbFwiLFxuXHRcIkBAU2xvcGVfUFNQb3dlcl90YWcwQEBcIjogXCJMYSA8c3Ryb25nPnBvdMOobmNpYSBkZSBtaWRhIGRlIHDDrXhlbDwvc3Ryb25nPiB0w6kgZW4gY29tcHRlIGVscyBjYW52aXMgZCdhbHRpdHVkIChvIGVzY2FsYSkgYSBtZXN1cmEgcXVlIGVsIHZpc29yIGFtcGxpYSBpIHJlZHVlaXggbGEgdmlzdWFsaXR6YWNpw7MgZGVsIG1hcGEuIMOJcyBsJ2V4cG9uZW50IGFwbGljYXQgYWwgdGVybWUgZGUgbWlkYSBkZSBww614ZWwgYSBsJ2VxdWFjacOzIHF1ZSBjb250cm9sYSBsYSB2ZWxvY2l0YXQgYSBxdcOoIGNhbnZpYSBlbCA8c3Ryb25nPmZhY3RvciBaPC9zdHJvbmc+IHBlciBldml0YXIgdW5hIHDDqHJkdWEgZGUgcmVsbGV1IHNpZ25pZmljYXRpdmEuXCIsXG5cdFwiQEBTbG9wZV9QU1Bvd2VyX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyDDqXMgdsOgbGlkIHNpIGVsIHRpcHVzIGQnPHN0cm9uZz5Fc2NhbGE8L3N0cm9uZz4gw6lzIDxzdHJvbmc+RXNjYWxhdDwvc3Ryb25nPi4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIDAsNjY0LlwiLFxuXHRcIkBAU2xvcGVfUFNaRmFjdG9yX3RhZzBAQFwiOiBcIkVsIDxzdHJvbmc+ZmFjdG9yIGRlIG1pZGEgZGUgcMOteGVsPC9zdHJvbmc+IHTDqSBlbiBjb21wdGUgZWxzIGNhbnZpcyBkJ2VzY2FsYSBhIG1lc3VyYSBxdWUgZWwgdmlzb3IgYW1wbGlhIGkgcmVkdWVpeCBsYSB2aXN1YWxpdHphY2nDsyBkZWwgbWFwYS4gQ29udHJvbGEgbGEgdmVsb2NpdGF0IGEgcXXDqCBjYW52aWEgZWwgPHN0cm9uZz5mYWN0b3IgWjwvc3Ryb25nPi5cIixcblx0XCJAQFNsb3BlX1BTWkZhY3Rvcl90YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBub23DqXMgw6lzIHbDoGxpZCBzaSBlbCB0aXB1cyBkJzxzdHJvbmc+RXNjYWxhPC9zdHJvbmc+IMOpcyA8c3Ryb25nPkVzY2FsYXQ8L3N0cm9uZz4uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLDAyNC5cIixcblx0XCJAQFNuYXAtUG91ci1Qb2ludF9GbG93LUFjY3VtdWxhdGlvbi1SYXN0ZXJfdGFnMEBAXCI6IFwiQ2FwYSByw6BzdGVyIGQnYWN1bXVsYWNpw7MgZGVsIGZsdXggZCdlbnRyYWRhLlwiLFxuXHRcIkBAU25hcC1Qb3VyLVBvaW50X0Zsb3ctQWNjdW11bGF0aW9uLVJhc3Rlcl90YWcxQEBcIjogXCJFcyBwb3QgY3JlYXIgYW1iIGxhIGZ1bmNpw7MgPHN0cm9uZz5BY3VtdWxhY2nDsyBkZSBmbHV4PC9zdHJvbmc+LlwiLFxuXHRcIkBAU25hcC1Qb3VyLVBvaW50X1BvdXItUG9pbnQtRmllbGRfdGFnMEBAXCI6IFwiQ2FtcCB1dGlsaXR6YXQgcGVyIGFzc2lnbmFyIHZhbG9ycyBhIGxlcyB1YmljYWNpb25zIGRlIHB1bnRzIGRlIGZsdcOvZGVzYS5cIixcblx0XCJAQFNuYXAtUG91ci1Qb2ludF9Qb3VyLVBvaW50LVJhc3Rlcl90YWcwQEBcIjogXCJVYmljYWNpb25zIGRlbHMgcHVudHMgZGUgZmx1w69kZXNhIGQnZW50cmFkYSBxdWUgcydhanVzdGFyYW4uXCIsXG5cdFwiQEBTbmFwLVBvdXItUG9pbnRfUG91ci1Qb2ludC1SYXN0ZXJfdGFnMUBAXCI6IFwiUGVyIGEgdW5hIGNhcGEgcsOgc3RlciBkJ2VudHJhZGEsIHRvdGVzIGxlcyBjZWzCt2xlcyBxdWUgbm8gc2lndWluIE5vRGF0YSAow6lzIGEgZGlyLCBxdWUgdGluZ3VpbiB1biB2YWxvcikgZXMgY29uc2lkZXJhcmFuIHB1bnRzIGRlIGZsdcOvZGVzYSBpIHMnYWp1c3RhcmFuLlwiLFxuXHRcIkBAU25hcC1Qb3VyLVBvaW50X1NuYXAtRGlzdGFuY2VfdGFnMEBAXCI6IFwiRGlzdMOgbmNpYSBtw6B4aW1hLCBlbiB1bml0YXRzIGRlIG1hcGEsIHBlciBjZXJjYXIgdW5hIGNlbMK3bGEgZGUgZmx1eCBhY3VtdWxhdCBtw6lzIGFsdC5cIixcblx0XCJAQFNwZWNrbGVfQWRkaXRpdmUtTm9pc2UtTWVhbl90YWcwQEBcIjogXCJFc3BlY2lmaWNhIGVsIHZhbG9yIG1pdGrDoCBkZWwgc29yb2xsIGFkZGl0aXUuIFVuIHZhbG9yIG1pdGrDoCBkZSBzb3JvbGwgbcOpcyBhbHQgcHJvZHVpcsOgIG1lbnlzIHN1YXZpdHphY2nDsywgbWVudHJlIHVuIHZhbG9yIG3DqXMgYmFpeCB0aW5kcsOgIGNvbSBhIHJlc3VsdGF0IG3DqXMgc3Vhdml0emFjacOzLlwiLFxuXHRcIkBAU3BlY2tsZV9BZGRpdGl2ZS1Ob2lzZS1NZWFuX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyDDqXMgdsOgbGlkIHF1YW4gZWwgPHN0cm9uZz50aXB1cyBkZSBmaWx0cmU8L3N0cm9uZz4gw6lzIDxzdHJvbmc+RmlsdHJlIGRlIExlZTwvc3Ryb25nPiBpIGVsIDxzdHJvbmc+bW9kZWwgZGUgc29yb2xsPC9zdHJvbmc+IMOpcyA8c3Ryb25nPlNvcm9sbCBhZGRpdGl1PC9zdHJvbmc+IG8gPHN0cm9uZz5Tb3JvbGwgYWRkaXRpdSBpIG11bHRpcGxpY2F0aXU8L3N0cm9uZz4uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLlwiLFxuXHRcIkBAU3BlY2tsZV9EYW1waW5nLUZhY3Rvcl90YWcwQEBcIjogXCJFc3BlY2lmaWNhIGwnZXh0ZW5zacOzIGRlIGwnZWZlY3RlIGQnYW1vcnRpbWVudCBleHBvbmVuY2lhbCBhbCBmaWx0cmF0Z2UuIFVuIHZhbG9yIGQnYW1vcnRpbWVudCBtw6lzIGFsdCBwcmVzZXJ2YSBtaWxsb3IgbGVzIHZvcmVzIGkgc3Vhdml0emEgbWVueXMsIG1lbnRyZSBxdWUgdW4gdmFsb3IgbcOpcyBiYWl4IHByb2R1ZWl4IG3DqXMgc3Vhdml0emFjacOzLiBVbiB2YWxvciBkZSAwIHByb2R1ZWl4IGxhIG1hdGVpeGEgc29ydGlkYSBxdWUgZWwgZmlsdHJlIGRlIHBhcyBiYWl4LlwiLFxuXHRcIkBAU3BlY2tsZV9EYW1waW5nLUZhY3Rvcl90YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBub23DqXMgw6lzIHbDoGxpZCBxdWFuIGVsIDxzdHJvbmc+VGlwdXMgZGUgZmlsdHJlPC9zdHJvbmc+IMOpcyA8c3Ryb25nPkZpbHRyZSBkZSBMZWUgbWlsbG9yYXQ8L3N0cm9uZz4gbyA8c3Ryb25nPkZpbHRyZSBkZSBGcm9zdDwvc3Ryb25nPi4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIDEuXCIsXG5cdFwiQEBTcGVja2xlX0ZpbHRlci1TaXplX3RhZzBAQFwiOiBcIkVzcGVjaWZpY2EgbGEgbWlkYSBkZSBsYSBmaW5lc3RyYSBkZSBww614ZWxzIHV0aWxpdHphZGEgcGVyIGZpbHRyYXIgc29yb2xsOlwiLFxuXHRcIkBAU3BlY2tsZV9GaWx0ZXItU2l6ZV90YWcxQEBcIjogXCIzeDNcIixcblx0XCJAQFNwZWNrbGVfRmlsdGVyLVNpemVfdGFnMkBAXCI6IFwiNXg1XCIsXG5cdFwiQEBTcGVja2xlX0ZpbHRlci1TaXplX3RhZzNAQFwiOiBcIjd4N1wiLFxuXHRcIkBAU3BlY2tsZV9GaWx0ZXItU2l6ZV90YWc0QEBcIjogXCI5eDlcIixcblx0XCJAQFNwZWNrbGVfRmlsdGVyLVNpemVfdGFnNUBAXCI6IFwiMTF4MTFcIixcblx0XCJAQFNwZWNrbGVfRmlsdGVyLVR5cGVfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBlbCB0aXB1cyBkZSBmaWx0cmUgcXVlIHMndXRpbGl0emFyw6AgYSBsJ2FsZ29yaXRtZSBkZSBzdWF2aXR6YWNpw7MgcGVyIGVsaW1pbmFyIGVsIHNvcm9sbCBwaWdhbGxhdDpcIixcblx0XCJAQFNwZWNrbGVfRmlsdGVyLVR5cGVfdGFnMUBAXCI6IFwiPHN0cm9uZz5GaWx0cmUgZGUgTGVlPC9zdHJvbmc+OiByZWR1ZWl4IGVsIHNvcm9sbCBwaWdhbGxhdCBtaXRqYW7Dp2FudCBsJ2FwbGljYWNpw7MgZCd1biBmaWx0cmUgZXNwYWNpYWwgYSBjYWRhIHDDrXhlbCBkJ3VuYSBpbWF0Z2UsIHF1ZSBmaWx0cmEgbGVzIGRhZGVzIGVuIGZ1bmNpw7MgZGUgbGVzIGVzdGFkw61zdGlxdWVzIGxvY2FscyBjYWxjdWxhZGVzIGVuIHVuYSBmaW5lc3RyYSBxdWFkcmFkYS4gQXF1ZXN0IGZpbHRyZSByZXN1bHRhIMO6dGlsIHNpIHZvbGV1IHN1YXZpdHphciBkYWRlcyBwaWdhbGxhZGVzIHF1ZSB0ZW5lbiB1biBjb21wb25lbnQgYWRkaXRpdSBvIG11bHRpcGxpY2F0aXUuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAU3BlY2tsZV9GaWx0ZXItVHlwZV90YWczQEBcIjogXCI8c3Ryb25nPkZpbHRyZSBkZSBMZWUgbWlsbG9yYXQ8L3N0cm9uZz46IHVuYSB2ZXJzacOzIGFkYXB0YWRhIGRlbCBmaWx0cmUgZGUgTGVlIHF1ZSBpbmNsb3UgPHN0cm9uZz5GYWN0b3IgZCdhbW9ydGltZW50PC9zdHJvbmc+IGkgPHN0cm9uZz5Ob21icmUgZCdvYnNlcnZhY2lvbnM8L3N0cm9uZz4uIEFxdWVzdCBmaWx0cmUgcmVzdWx0YSDDunRpbCBzaSB2b2xldSByZWR1aXIgZWwgcGlnYWxsYXQgaSBhbGhvcmEgY29uc2VydmFyIGxhIGluZm9ybWFjacOzIGRlIHRleHR1cmEuXCIsXG5cdFwiQEBTcGVja2xlX0ZpbHRlci1UeXBlX3RhZzlAQFwiOiBcIjxzdHJvbmc+RmlsdHJlIGRlIEZyb3N0PC9zdHJvbmc+OiByZWR1ZWl4IGVsIHNvcm9sbCBwaWdhbGxhdCBhbWIgdW4gZmlsdHJlIGNpcmN1bGFybWVudCBzaW3DqHRyaWMgYW1iIGFtb3J0aW1lbnQgZXhwb25lbmNpYWwgcXVlIHV0aWxpdHphIGxlcyBlc3RhZMOtc3RpcXVlcyBsb2NhbHMgZW4gZmluZXN0cmVzIGRlIGZpbHRyZSBpbmRpdmlkdWFscy4gQXF1ZXN0IGZpbHRyZSByZXN1bHRhIMO6dGlsIHNpIHZvbGV1IHJlZHVpciBlbCBwaWdhbGxhdCBpIGFsaG9yYSBjb25zZXJ2YXIgbGVzIHZvcmVzIGEgbGVzIGltYXRnZXMgZGUgcmFkYXIuXCIsXG5cdFwiQEBTcGVja2xlX0ZpbHRlci1UeXBlX3RhZzExQEBcIjogXCI8c3Ryb25nPkZpbHRyZSBkZSBLdWFuPC9zdHJvbmc+IGFxdWVzdCBmaWx0cmUsIHF1ZSDDqXMgc2ltaWxhciBhbCBkZSBMZWUsIGFwbGljYSB1biBmaWx0cmUgZXNwYWNpYWwgYSBjYWRhIHDDrXhlbCBkJ3VuYSBpbWF0Z2UgaSBmaWx0cmEgbGVzIGRhZGVzIGVuIGZ1bmNpw7MgZGUgbGVzIGVzdGFkw61zdGlxdWVzIGxvY2FscyBjYWxjdWxhZGVzIGVuIHVuYSBmaW5lc3RyYSBxdWFkcmFkYS4gQXF1ZXN0IGZpbHRyZSByZXN1bHRhIMO6dGlsIHNpIHZvbGV1IHJlZHVpciBlbCBwaWdhbGxhdCBpIGFsaG9yYSBjb25zZXJ2YXIgbGVzIHZvcmVzIGEgbGVzIGltYXRnZXMgZGUgcmFkYXIuXCIsXG5cdFwiQEBTcGVja2xlX011bHRpcGxpY2F0aXZlLU5vaXNlLU1lYW5fdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBlbCB2YWxvciBtaXRqw6AgZGVsIHNvcm9sbCBtdWx0aXBsaWNhdGl1LiBVbiB2YWxvciBtaXRqw6AgZGUgc29yb2xsIG3DqXMgYWx0IHByb2R1aXLDoCBtZW55cyBzdWF2aXR6YWNpw7MsIG1lbnRyZSB1biB2YWxvciBtw6lzIGJhaXggdGluZHLDoCBjb20gYSByZXN1bHRhdCBtw6lzIHN1YXZpdHphY2nDsy5cIixcblx0XCJAQFNwZWNrbGVfTXVsdGlwbGljYXRpdmUtTm9pc2UtTWVhbl90YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBub23DqXMgw6lzIHbDoGxpZCBxdWFuIGVsIDxzdHJvbmc+dGlwdXMgZGUgZmlsdHJlPC9zdHJvbmc+IMOpcyA8c3Ryb25nPkZpbHRyZSBkZSBMZWU8L3N0cm9uZz4gaSBlbCA8c3Ryb25nPm1vZGVsIGRlIHNvcm9sbDwvc3Ryb25nPiDDqXMgPHN0cm9uZz5Tb3JvbGwgYWRkaXRpdTwvc3Ryb25nPiBvIDxzdHJvbmc+U29yb2xsIGFkZGl0aXUgaSBtdWx0aXBsaWNhdGl1PC9zdHJvbmc+LiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMS5cIixcblx0XCJAQFNwZWNrbGVfTm9pc2UtTW9kZWxfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBlbCB0aXB1cyBkZSBzb3JvbGwgcXVlIHJlZHVlaXggbGEgcXVhbGl0YXQgZGUgbGEgaW1hdGdlIGRlIHJhZGFyOlwiLFxuXHRcIkBAU3BlY2tsZV9Ob2lzZS1Nb2RlbF90YWcxQEBcIjogXCI8c3Ryb25nPlNvcm9sbCBtdWx0aXBsaWNhdGl1PC9zdHJvbmc+OiBzb3JvbGwgZGUgc2VueWFsIGFsZWF0b3JpIHF1ZSBlcyBtdWx0aXBsaWNhIGFsIHNlbnlhbCByZWxsZXZhbnQgZHVyYW50IGxhIGNhcHR1cmEgbyBsYSB0cmFuc21pc3Npw7NcIixcblx0XCJAQFNwZWNrbGVfTm9pc2UtTW9kZWxfdGFnM0BAXCI6IFwiPHN0cm9uZz5Tb3JvbGwgYWRkaXRpdTwvc3Ryb25nPjogc29yb2xsIGRlIHNlbnlhbCBhbGVhdG9yaSBxdWUgcydhZmVnZWl4IGFsIHNlbnlhbCByZWxsZXZhbnQgZHVyYW50IGxhIGNhcHR1cmEgbyBsYSB0cmFuc21pc3Npw7NcIixcblx0XCJAQFNwZWNrbGVfTm9pc2UtTW9kZWxfdGFnNUBAXCI6IFwiPHN0cm9uZz5Tb3JvbGwgYWRkaXRpdSBpIG11bHRpcGxpY2F0aXU8L3N0cm9uZz46IHRvdHMgZG9zIG1vZGVscyBkZSBzb3JvbGxcIixcblx0XCJAQFNwZWNrbGVfTm9pc2UtVmFyaWFuY2VfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBsYSB2YXJpw6BuY2lhIGRlIHNvcm9sbCBkZSBsYSBpbWF0Z2UgZGUgcmFkYXIuXCIsXG5cdFwiQEBTcGVja2xlX05vaXNlLVZhcmlhbmNlX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyDDqXMgdsOgbGlkIHF1YW4gZWwgPHN0cm9uZz50aXB1cyBkZSBmaWx0cmU8L3N0cm9uZz4gw6lzIDxzdHJvbmc+RmlsdHJlIGRlIExlZTwvc3Ryb25nPiBpIGVsIDxzdHJvbmc+bW9kZWwgZGUgc29yb2xsPC9zdHJvbmc+IMOpcyA8c3Ryb25nPlNvcm9sbCBhZGRpdGl1PC9zdHJvbmc+IG8gPHN0cm9uZz5Tb3JvbGwgYWRkaXRpdSBpIG11bHRpcGxpY2F0aXU8L3N0cm9uZz4uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLDI1LlwiLFxuXHRcIkBAU3BlY2tsZV9OdW1iZXItb2YtTG9va3NfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBlbCBub21icmUgZCdvYnNlcnZhY2lvbnMgZGUgbGEgaW1hdGdlLCBxdWUgY29udHJvbGEgbGEgc3Vhdml0emFjacOzIGRlIGxhIGltYXRnZSBpIGVzdGltYSBsYSB2YXJpw6BuY2lhIGRlIHNvcm9sbC4gVW4gdmFsb3IgbcOpcyBiYWl4IHByb2R1aXLDoCBtZW55cyBzdWF2aXR6YWNpw7MsIG1lbnRyZSB1biB2YWxvciBtw6lzIGFsdCBjb25zZXJ2YXLDoCBtw6lzIGNhcmFjdGVyw61zdGlxdWVzIGRlIGxhIGltYXRnZS5cIixcblx0XCJAQFNwZWNrbGVfTnVtYmVyLW9mLUxvb2tzX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyDDqXMgdsOgbGlkIHF1YW4gZWwgPHN0cm9uZz50aXB1cyBkZSBmaWx0cmU8L3N0cm9uZz4gw6lzIDxzdHJvbmc+RmlsdHJlIGRlIExlZTwvc3Ryb25nPiBpIGVsIDxzdHJvbmc+bW9kZWwgZGUgc29yb2xsPC9zdHJvbmc+IMOpcyA8c3Ryb25nPlNvcm9sbCBtdWx0aXBsaWNhdGl1PC9zdHJvbmc+LCBvIHF1YW4gZWwgPHN0cm9uZz50aXB1cyBkZSBmaWx0cmU8L3N0cm9uZz4gw6lzIDxzdHJvbmc+RmlsdHJlIGRlIEt1YW48L3N0cm9uZz4uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAxLlwiLFxuXHRcIkBAU3BlY2tsZV9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTcGVjdHJhbC1Db252ZXJzaW9uX0NvbnZlcnNpb24tTWF0cml4X3RhZzBAQFwiOiBcIk1hdHJpdSB1dGlsaXR6YWRhIHBlciBjb252ZXJ0aXIgZWwgcsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTcGVjdHJhbC1Db252ZXJzaW9uX0NvbnZlcnNpb24tTWF0cml4X3RhZzFAQFwiOiBcIkwnZXF1YWNpw7MgdXRpbGl0emFkYSBwZXIgZXhlY3V0YXIgYXF1ZXN0YSBjb252ZXJzacOzIMOpcyBsYSBzZWfDvGVudDpcIixcblx0XCJAQFNwZWN0cmFsLUNvbnZlcnNpb25fQ29udmVyc2lvbi1NYXRyaXhfdGFnMkBAXCI6IFwiT3V0cHV0IEJhbmRfUiA9IFdlaWdodF9QICogQmFuZF9DXCIsXG5cdFwiQEBTcGVjdHJhbC1Db252ZXJzaW9uX0NvbnZlcnNpb24tTWF0cml4X3RhZzNAQFwiOiBcIm9uOlwiLFxuXHRcIkBAU3BlY3RyYWwtQ29udmVyc2lvbl9Db252ZXJzaW9uLU1hdHJpeF90YWc0QEBcIjogXCJCYW5kX1Igw6lzIHVuYSBiYW5kYSBkZSBzb3J0aWRhLCBvbiBSIMOpcyB1biBub21icmUgZCcxIGFsIG5vbWJyZSBkZSBiYW5kZXMgZGUgc29ydGlkYS5cIixcblx0XCJAQFNwZWN0cmFsLUNvbnZlcnNpb25fQ29udmVyc2lvbi1NYXRyaXhfdGFnNUBAXCI6IFwiV2VpZ2h0X1Agw6lzIHVuYSBsbGlzdGEgZGUgcGVzb3MgZGVsaW1pdGFkYSBwZXIgY29tZXMsIDEgcGVyIGNhZGEgYmFuZGEgZCdlbnRyYWRhLiBMYSBzdW1hIGRlbHMgcGVzb3MgZGUgY2FkYSBiYW5kYSBoYSBkZSBzZXIgaWd1YWwgYSAxLlwiLFxuXHRcIkBAU3BlY3RyYWwtQ29udmVyc2lvbl9Db252ZXJzaW9uLU1hdHJpeF90YWc2QEBcIjogXCJCYW5kX0Mgw6lzIHVuYSBpbWF0Z2UgZCdlbnRyYWRhLCBvbiBDIMOpcyB1biBub21icmUgZCcxIGFsIG5vbWJyZSBkZSBiYW5kZXMgZGUgbGEgaW1hdGdlIGQnZW50cmFkYS5cIixcblx0XCJAQFNwZWN0cmFsLUNvbnZlcnNpb25fUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAU3BlY3RyYWwtQ29udmVyc2lvbl9SYXN0ZXJfdGFnMUBAXCI6IFwiUG90IHNlciB1biBkYXRhc2V0IHLDoHN0ZXIsIHVuIGRhdGFzZXQgZGUgbW9zYWljIG8gdW4gc2VydmVpIGQnaW1hdGdlcy5cIixcblx0XCJAQFNwZWN0cmFsLUNvbnZlcnNpb25fU2l6ZV90YWcwQEBcIjogXCJOb21icmUgZGUgZmlsZXMgaSBjb2x1bW5lcyBhIGxhIDxzdHJvbmc+bWF0cml1IGRlIGNvbnZlcnNpw7M8L3N0cm9uZz4uXCIsXG5cdFwiQEBTcXVhcmVfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAU3F1YXJlX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTcXVhcmVfQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFNxdWFyZV9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFNxdWFyZV9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAU3F1YXJlX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFNxdWFyZV9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBTcXVhcmVfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBTcXVhcmVfRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBTcXVhcmVfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAU3F1YXJlX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAU3F1YXJlX1Jhc3Rlcl90YWcwQEBcIjogXCJWYWxvcnMgZCdlbnRyYWRhIGRlbHMgcXVhbHMgZXMgZmFyw6AgZWwgcXVhZHJhdC5cIixcblx0XCJAQFNxdWFyZS1Sb290X0NlbGxzaXplLVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQFNxdWFyZS1Sb290X0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBTcXVhcmUtUm9vdF9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAU3F1YXJlLVJvb3RfQ2VsbHNpemUtVHlwZV90YWczQEBcIjogXCJNw6B4aW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBTcXVhcmUtUm9vdF9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAU3F1YXJlLVJvb3RfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAU3F1YXJlLVJvb3RfRXh0ZW50LVR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAU3F1YXJlLVJvb3RfRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBTcXVhcmUtUm9vdF9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFNxdWFyZS1Sb290X0V4dGVudC1UeXBlX3RhZzNAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFNxdWFyZS1Sb290X0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAU3F1YXJlLVJvb3RfUmFzdGVyX3RhZzBAQFwiOiBcIlZhbG9ycyBkJ2VudHJhZGEgdXRpbGl0emF0cyBwZXIgY2VyY2FyIGwnYXJyZWwgcXVhZHJhZGEuXCIsXG5cdFwiQEBTdGF0aXN0aWNzLWFuZC1IaXN0b2dyYW1fRGVmaW5lLVN0YXRpc3RpY3MtYW5kLUhpc3RvZ3JhbV90YWcwQEBcIjogXCJEZWZpbml1IGVscyB2YWxvcnMgZGUgbGVzIGVzdGFkw61zdGlxdWVzIGRlIGNhZGEgYmFuZGEuXCIsXG5cdFwiQEBTdGF0aXN0aWNzLWFuZC1IaXN0b2dyYW1fRGVmaW5lLVN0YXRpc3RpY3MtYW5kLUhpc3RvZ3JhbV90YWcxQEBcIjogXCJMYSBjb2x1bW5hICR7SGlzdG9ncmFtfSDDqXMgdW4gY2FtcCBub23DqXMgZGUgbGVjdHVyYSBxdWUgZXMgcG90IGVtcGxlbmFyIGFtYiBlbCBwYXLDoG1ldHJlIDxzdHJvbmc+SW1wb3J0YTwvc3Ryb25nPi4gU2kgaW1wb3J0ZXUgdW4gZml0eGVyIGQnaGlzdG9ncmFtYSwgbGEgY29sdW1uYSAke0hpc3RvZ3JhbX0gZXMgbWFyY2Fyw6AgY29tIGEgPHN0cm9uZz5EZWZpbml0PC9zdHJvbmc+LlwiLFxuXHRcIkBAU3RhdGlzdGljcy1hbmQtSGlzdG9ncmFtX0ltcG9ydF90YWcwQEBcIjogXCJJbXBvcnRldSBsZXMgZXN0YWTDrXN0aXF1ZXMgaSBsYSBpbmZvcm1hY2nDsyBkZSBsJ2hpc3RvZ3JhbWEgZCd1biByw6BzdGVyIG8gdW4gZml0eGVyIFhNTCBleGlzdGVudC5cIixcblx0XCJAQFN0YXRpc3RpY3MtYW5kLUhpc3RvZ3JhbV9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIG5lY2Vzc2l0YSBxdWUgZXMgZGVmaW5laXhpbiBsZXMgZXN0YWTDrXN0aXF1ZXMgaSBsJ2hpc3RvZ3JhbWEuXCIsXG5cdFwiQEBTdGF0aXN0aWNzLWFuZC1IaXN0b2dyYW1fU3RhdGlzdGljc190YWcwQEBcIjogXCJEZWZpbml1IGVscyB2YWxvcnMgZGUgbGVzIGVzdGFkw61zdGlxdWVzIGRlIGNhZGEgYmFuZGEuXCIsXG5cdFwiQEBTdHJlYW0tTGlua19GbG93LURpcmVjdGlvbi1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIG1vc3RyYSBsYSBkaXJlY2Npw7MgZGUgc29ydGlkYSBkZWwgZmx1eCBkZSBjYWRhIGNlbMK3bGEuXCIsXG5cdFwiQEBTdHJlYW0tTGlua19GbG93LURpcmVjdGlvbi1SYXN0ZXJfdGFnMUBAXCI6IFwiRWwgcsOgc3RlciBkZSBkaXJlY2Npw7MgZGVsIGZsdXggZXMgcG90IGNyZWFyIGV4ZWN1dGFudCBsYSBmdW5jacOzIDxzdHJvbmc+RGlyZWNjacOzIGRlbCBmbHV4PC9zdHJvbmc+LlwiLFxuXHRcIkBAU3RyZWFtLUxpbmtfU3RyZWFtLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBxdWUgcmVwcmVzZW50YSB1bmEgeGFyeGEgZGUgdHJhbnNtaXNzacOzIGxpbmVhbC5cIixcblx0XCJAQFN0cmVhbS1PcmRlcl9GbG93LURpcmVjdGlvbi1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIG1vc3RyYSBsYSBkaXJlY2Npw7MgZGUgc29ydGlkYSBkZWwgZmx1eCBkZSBjYWRhIGNlbMK3bGEuXCIsXG5cdFwiQEBTdHJlYW0tT3JkZXJfRmxvdy1EaXJlY3Rpb24tUmFzdGVyX3RhZzFAQFwiOiBcIkVsIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGRlbCBmbHV4IGVzIHBvdCBjcmVhciBleGVjdXRhbnQgbGEgZnVuY2nDsyA8c3Ryb25nPkRpcmVjY2nDsyBkZWwgZmx1eDwvc3Ryb25nPi5cIixcblx0XCJAQFN0cmVhbS1PcmRlcl9PcmRlci1NZXRob2RfdGFnMEBAXCI6IFwiTcOodG9kZSB1dGlsaXR6YXQgcGVyIGFzc2lnbmFyIGwnb3JkcmUgZGUgY2FuYWxzLlwiLFxuXHRcIkBAU3RyZWFtLU9yZGVyX09yZGVyLU1ldGhvZF90YWcxQEBcIjogXCI8c3Ryb25nPlNUUkFITEVSPC9zdHJvbmc+OiBtw6h0b2RlIGQnb3JkZW5hY2nDsyBkZSBjYW5hbHMgcHJvcG9zYXQgcGVyIFN0cmFobGVyIGVsIDE5NTIuIEwnb3JkcmUgZGUgY2FuYWxzIG5vbcOpcyBhdWdtZW50YSBxdWFuIGVscyBjYW5hbHMgZGVsIG1hdGVpeCBvcmRyZSBzJ2ludGVyc2VxdWVuLiBMYSBpbnRlcnNlY2Npw7MgZCd1biBlbmxsYcOnIGRlIHByaW1lciBvcmRyZSBpIHVuIGVubGxhw6cgZGUgc2Vnb24gb3JkcmUgY29udGludWFyw6AgZXNzZW50IHVuIGVubGxhw6cgZGUgc2Vnb24gb3JkcmUsIGVuIGxsb2MgZGUgY3JlYXItbmUgdW4gZGUgdGVyY2VyIG9yZHJlLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFN0cmVhbS1PcmRlcl9PcmRlci1NZXRob2RfdGFnM0BAXCI6IFwiPHN0cm9uZz5TSFJFVkU8L3N0cm9uZz46IG3DqHRvZGUgZCdvcmRlbmFjacOzIGRlIGNhbmFscyBwZXIgbWFnbml0dWQgcHJvcG9zYXQgcGVyIFNocmV2ZSBlbCAxOTY3LiBTJ2Fzc2lnbmFyw6AgdW5hIG1hZ25pdHVkIChvcmRyZSkgZCd1IGEgdG90cyBlbHMgZW5sbGHDp29zIHNlbnNlIGFmbHVlbnRzLiBMZXMgbWFnbml0dWRzIHPDs24gcGVuZGVudHMgZGVzY2VuZGVudHMgYWRkaXRpdXMuIFF1YW4gZG9zIGVubGxhw6dvcyBzJ2ludGVyc2VxdWVuLCBsZXMgc2V2ZXMgbWFnbml0dWRzIHMnYWZlZ2VpeGVuIGkgYXNzaWduZW4gYSBsJ2VubGxhw6cgZGVsIHBlbmRlbnQgZGVzY2VuZGVudC5cIixcblx0XCJAQFN0cmVhbS1PcmRlcl9TdHJlYW0tUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZGUgdHJhbnNtaXNzacOzIGQnZW50cmFkYSBxdWUgcmVwcmVzZW50YSB1bmEgeGFyeGEgZGUgdHJhbnNtaXNzacOzIGxpbmVhbC5cIixcblx0XCJAQFN0cmV0Y2hfQXV0by1HYW1tYV90YWcwQEBcIjogXCJVdGlsaXR6ZXUgPHN0cm9uZz5HYW1tYSBhdXRvbcOgdGljPC9zdHJvbmc+IHBlciBjYWxjdWxhciBlbCBnYW1tYSBhIHBhcnRpciBkZSBsZXMgZXN0YWTDrXN0aXF1ZXMgaSBsJ2hpc3RvZ3JhbWEgZGVsIGRhdGFzZXQuIExlcyBlc3RhZMOtc3RpcXVlcyBwb2RlbiBzZXIgZXN0aW1hZGVzIHBlciBsYSBwcsOycGlhIGZ1bmNpw7MsIG8gYsOpIGVzdGltYWRlcyBwZWwgcHJvZ3JhbWFyaSBzaSBoZXUgdHJpYXQgdW5hIGNhcGEuXCIsXG5cdFwiQEBTdHJldGNoX0R5bmFtaWMtUmFuZ2UtQWRqdXN0bWVudF90YWcwQEBcIjogXCJBY3RpdmV1IGxhIGNhc2VsbGEgPHN0cm9uZz5BanVzdCBkZWwgbWFyZ2UgZGluw6BtaWM8L3N0cm9uZz4gc2kgdm9sZXUgcXVlIGxlcyBlc3RhZMOtc3RpcXVlcyBlcyBjYWxjdWxpbiBub23DqXMgYSBwYXJ0aXIgZGVscyBww614ZWxzIHF1ZSBlcyBtb3N0cmVuIGEgbGEgcGFudGFsbGEuIEdlbmVyYWxtZW50LCBhcXVlc3RhIG9wY2nDsyBzJ2FwbGljYSBxdWFuIGxhIGltYXRnZSBlcyBwdWJsaWNhIGkgcyd1dGlsaXR6YSBlbiB1bmEgYXBsaWNhY2nDsyB3ZWIgcXVlIG5vIHBvdCByZWFsaXR6YXIgYXF1ZXN0IHRpcHVzIGRlIG1pbGxvcmEgZGVsIGNvbnRyYXN0LlwiLFxuXHRcIkBAU3RyZXRjaF9Fc3RpbWF0ZS1TdGF0aXN0aWNzX3RhZzBAQFwiOiBcIkFjdGl2ZXUgbGEgY2FzZWxsYSA8c3Ryb25nPkNhbGN1bGEgbGVzIGVzdGFkw61zdGlxdWVzPC9zdHJvbmc+IHBlciBjYWxjdWxhciBsZXMgZXN0YWTDrXN0aXF1ZXMuIExlcyBlc3RhZMOtc3RpcXVlcyBlc3RpbWFkZXMgZXMgY2FsY3VsZW4gYSBwYXJ0aXIgZCd1bmEgbW9zdHJhIGRlIDEuMDAwIHBlciAxLjAwMCBkZWwgY2VudHJlIGRlbCByw6BzdGVyIGkgcyd1dGlsaXR6ZW4gcGVyIGEgbGEgbWlsbG9yYSBkZWwgY29udHJhc3QuXCIsXG5cdFwiQEBTdHJldGNoX0VzdGltYXRlLVN0YXRpc3RpY3NfdGFnM0BAXCI6IFwiU2kgYXF1ZXN0YSBvcGNpw7MgZXN0w6AgYWN0aXZhZGEgaSBlbCByw6BzdGVyIHTDqSBlc3RhZMOtc3RpcXVlcywgbyBiw6kgc2kgaGV1IGludHJvZHXDr3QgdmFsb3JzIGEgbGEgdGF1bGEgPHN0cm9uZz5Fc3RhZMOtc3RpcXVlczwvc3Ryb25nPiwgcyd1dGlsaXR6YXJhbiBlbiBsbG9jIGRlIGNhbGN1bGFyLWxlcywgdHJldCBxdWUgbGEgbWlsbG9yYSByZXF1ZXJlaXhpIHVuIGhpc3RvZ3JhbWEuIFNpIGxhIG1pbGxvcmEgZGVsIGNvbnRyYXN0IHJlcXVlcmVpeCB1biBoaXN0b2dyYW1hIHF1ZSBubyBleGlzdGVpeCwgZXMgZmFyw6AgbCdlc3RpbWFjacOzLlwiLFxuXHRcIkBAU3RyZXRjaF9HYW1tYV90YWcwQEBcIjogXCJVdGlsaXR6ZXUgbGEgYmFycmEgZGUgY29udHJvbCBsbGlzY2FudCBwZXIgZGVmaW5pciBtYW51YWxtZW50IGVsIHZhbG9yIGRlIDxzdHJvbmc+R2FtbWE8L3N0cm9uZz4uXCIsXG5cdFwiQEBTdHJldGNoX051bWJlci1PZi1TdGFuZGFyZC1EZXZpYXRpb25zX3RhZzBAQFwiOiBcIkVzcGVjaWZpcXVldSBlbCB2YWxvciBuIGRlbCBub21icmUgZGUgZGVzdmlhY2lvbnMgZXN0w6BuZGFyZCBxdWUgcyd1dGlsaXR6YXJhbi4gQXF1ZXN0IG3DqHRvZGUgcyd1dGlsaXR6YSBwZXIgZW1mYXNpdHphciBjb20gZXMgZGlmZXJlbmNpZW4gZGVsIHZhbG9yIG1pdGrDoCBlbHMgdmFsb3JzIGRlIGxlcyBjYXJhY3RlcsOtc3RpcXVlczsgw6lzIG1pbGxvciBxdWFuIHMndXRpbGl0emEgZW4gZGFkZXMgZGlzdHJpYnXDr2RlcyBhbWIgbm9ybWFsaXRhdC5cIixcblx0XCJAQFN0cmV0Y2hfT3V0cHV0LU1heGltdW1fdGFnMEBAXCI6IFwiRGVmaW5pdSBlbCB2YWxvciBkZSBww614ZWwgbcOpcyBhbHQgcGVyIGEgbCdoaXN0b2dyYW1hLlwiLFxuXHRcIkBAU3RyZXRjaF9PdXRwdXQtTWF4aW11bV90YWcxQEBcIjogXCI8c3Ryb25nPlNvcnRpZGEgbcOtbmltYTwvc3Ryb25nPiBpIDxzdHJvbmc+U29ydGlkYSBtw6B4aW1hPC9zdHJvbmc+IGRlZmluaXJhbiBsJ2ludGVydmFsIGRlIHZhbG9ycyBlbiBxdcOoIGVzIGZhcsOgIGwnZXhwYW5zacOzIGRlbCBjb250cmFzdCBsaW5lYWwuXCIsXG5cdFwiQEBTdHJldGNoX091dHB1dC1NaW5pbXVtX3RhZzBAQFwiOiBcIkRlZmluaXUgZWwgdmFsb3IgZGUgcMOteGVsIG3DqXMgYmFpeCBwZXIgYSBsJ2hpc3RvZ3JhbWEuXCIsXG5cdFwiQEBTdHJldGNoX091dHB1dC1NaW5pbXVtX3RhZzFAQFwiOiBcIjxzdHJvbmc+U29ydGlkYSBtw61uaW1hPC9zdHJvbmc+IGkgPHN0cm9uZz5Tb3J0aWRhIG3DoHhpbWE8L3N0cm9uZz4gZGVmaW5pcmFuIGwnaW50ZXJ2YWwgZGUgdmFsb3JzIGVuIHF1w6ggZXMgZmFyw6AgbCdleHBhbnNpw7MgZGVsIGNvbnRyYXN0IGxpbmVhbC5cIixcblx0XCJAQFN0cmV0Y2hfUGVyY2VudC1DbGlwLU1heGltdW1fdGFnMEBAXCI6IFwiRXNwZWNpZmlxdWV1IGVsIHBlcmNlbnRhdGdlIGRlIHZhbG9ycyBhbHRzIHF1ZSBzJ2V4Y2xvdXJhbiBkZSBsYSBtaWxsb3JhIGRlbCBjb250cmFzdC5cIixcblx0XCJAQFN0cmV0Y2hfUGVyY2VudC1DbGlwLU1heGltdW1fdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyB2w6BsaWRzIHZhbiBkZSAwIGEgOTkuXCIsXG5cdFwiQEBTdHJldGNoX1BlcmNlbnQtQ2xpcC1NaW5pbXVtX3RhZzBAQFwiOiBcIkVzcGVjaWZpcXVldSBlbCBwZXJjZW50YXRnZSBkZSB2YWxvcnMgYmFpeG9zIHF1ZSBzJ2V4Y2xvdXJhbiBkZSBsYSBtaWxsb3JhIGRlbCBjb250cmFzdC5cIixcblx0XCJAQFN0cmV0Y2hfUGVyY2VudC1DbGlwLU1pbmltdW1fdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyB2w6BsaWRzIHZhbiBkZSAwIGEgOTkuXCIsXG5cdFwiQEBTdHJldGNoX1Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBvbiBlcyBmYXLDoCBsYSBtaWxsb3JhIGRlbCBjb250cmFzdC5cIixcblx0XCJAQFN0cmV0Y2hfU2lnbW9pZC1TdHJlbmd0aC1MZXZlbF90YWcwQEBcIjogXCI8c3Ryb25nPk5pdmVsbCBkZSByZXNpc3TDqG5jaWE8L3N0cm9uZz4gZGV0ZXJtaW5hIGxhIHF1YW50aXRhdCBkZSBmdW5jacOzIHNpZ21vw69kYWwgcXVlIHMndXRpbGl0emFyw6AgYSBsYSBtaWxsb3JhIGRlbCBjb250cmFzdC4gVW4gdmFsb3IgYmFpeCwgY29tIGFyYSAxLCB1dGlsaXR6YXLDoCBub23DqXMgbGEgcGFydCBjZW50cmFsIGRlIGxhIGNvcmJhLCBlbCBxdWUgdGVuZGVpeCBhIHByb2R1aXIgY29sb3JzIGFwYWdhdHMgaSBzdWF1cy4gVW4gdmFsb3IgYWx0LCBjb20gYXJhIDYsIHV0aWxpdHphcsOgIHRvdGEgbGEgY29yYmEsIGVsIHF1ZSB0ZW5kZWl4IGEgcHJvZHVpciBjb2xvcnMgaW50ZW5zb3MgaSBuw610aWRzLlwiLFxuXHRcIkBAU3RyZXRjaF9TdGF0aXN0aWNzX3RhZzBAQFwiOiBcIlBvZGV1IGludHJvZHVpciBsZXMgdm9zdHJlcyBwcsOycGllcyBlc3RhZMOtc3RpcXVlcyBhbCBxdWFkcmUgZGUgZGnDoGxlZy4gUGVyIGRlZmVjdGUsIGxlcyBlc3RhZMOtc3RpcXVlcyBlcyByZWN1cGVyZW4gZGUgbGVzIGRhZGVzOyBhaXjDsiBubyBvYnN0YW50LCBzJ3V0aWxpdHphcmFuIHRvdHMgZWxzIHZhbG9ycyBxdWUgaW50cm9kdcOvdSBlbiBhcXVlc3QgcGFyw6BtZXRyZSBlbiBsbG9jIHNldS5cIixcblx0XCJAQFN0cmV0Y2hfVHlwZV90YWcwQEBcIjogXCJUcmlldSBlbCBtw6h0b2RlIGRlbCB0aXB1cyBkZSBtaWxsb3JhIGRlbCBjb250cmFzdDpcIixcblx0XCJAQFN0cmV0Y2hfVHlwZV90YWcxQEBcIjogXCJDYXA6IG5vIGVzIHJlYWxpdHphIGNhcCBtaWxsb3JhIGRlbCBjb250cmFzdFwiLFxuXHRcIkBAU3RyZXRjaF9UeXBlX3RhZzJAQFwiOiBcIkRlc3YuIGVzdC46IG1pbGxvcmEgZGVsIGNvbnRyYXN0IGRlIGRlc3ZpYWNpw7MgZXN0w6BuZGFyZFwiLFxuXHRcIkBAU3RyZXRjaF9UeXBlX3RhZzNAQFwiOiBcIk1pbk1heDogbWlsbG9yYSBkZWwgY29udHJhc3QgbcOtbmltLW3DoHhpbVwiLFxuXHRcIkBAU3RyZXRjaF9UeXBlX3RhZzRAQFwiOiBcIlBlcmNlbnRNaW5NYXg6IHBlcmNlbnRhdGdlIGRlIG1pbGxvcmEgZGVsIGNvbnRyYXN0IHJldGFsbGFkYVwiLFxuXHRcIkBAU3RyZXRjaF9UeXBlX3RhZzVAQFwiOiBcIlNpZ21vaWRlOiBlc3RpcmFtZW50IHNpZ21vw69kYWxcIixcblx0XCJAQFN0cmV0Y2hfVXNlLUdhbW1hX3RhZzBAQFwiOiBcIkFjdGl2ZXUgbGEgY2FzZWxsYSA8c3Ryb25nPlV0aWxpdHphIGVsIGdhbW1hPC9zdHJvbmc+IHNpIHZvbGV1IGFwbGljYXIgdW5hIG1pbGxvcmEgZGVsIGNvbnRyYXN0IGRlIGdhbW1hLlwiLFxuXHRcIkBAU3dhdGhfQ2VsbHNpemVfdGFnMEBAXCI6IFwiTGEgbWlkYSBkZSBjZWzCt2xhIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEgZXMgZGV0ZWN0YXLDoCBhdXRvbcOgdGljYW1lbnQsIHBlcsOyIGhvIHBvZGV1IGNhbnZpYXIgc2kgw6lzIG5lY2Vzc2FyaS4gTGEgbWlkYSBkZSBsYSBjZWzCt2xhIGVzIHBvdCBjYW52aWFyLCBwZXLDsiBsJ2V4dGVuc2nDsyBkZWwgZGF0YXNldCByw6BzdGVyIGVzIG1hbnRpbmRyw6AuXCIsXG5cdFwiQEBTd2F0aF9JbnRlcnBvbGF0aW9uLU1ldGhvZF90YWcwQEBcIjogXCJIaSBoYSBxdWF0cmUgbcOodG9kZXMgZGUgcmVtb3N0cmVpZyBwZXIgYSBhcXVlc3RhIGZ1bmNpw7M6XCIsXG5cdFwiQEBTd2F0aF9JbnRlcnBvbGF0aW9uLU1ldGhvZF90YWcxQEBcIjogXCI8c3Ryb25nPlZlw60gbcOpcyBwcm9wZXI8L3N0cm9uZz46IGNhbGN1bGEgZWwgdmFsb3IgZGVsIHDDrXhlbCBtaXRqYW7Dp2FudCBlbCBww614ZWwgbcOpcyBwcm9wZXIuIFNpIG5vIGV4aXN0ZWl4IGNhcCBww614ZWwgZCdvcmlnZW4sIG5vIGVzIHBvZHLDoCBjcmVhciBjYXAgcMOteGVsIG5vdSBhIGxhIHNvcnRpZGEuXCIsXG5cdFwiQEBTd2F0aF9JbnRlcnBvbGF0aW9uLU1ldGhvZF90YWczQEBcIjogXCI8c3Ryb25nPkJpbGluZWFsPC9zdHJvbmc+OiBjYWxjdWxhIGVsIHZhbG9yIGRlbCBww614ZWwgbWl0amFuw6dhbnQgZWwgdmFsb3IgZGUgZGlzdMOgbmNpYSBwb25kZXJhZGEgZGVscyBxdWF0cmUgcMOteGVscyBtw6lzIHByb3BlcnMuXCIsXG5cdFwiQEBTd2F0aF9JbnRlcnBvbGF0aW9uLU1ldGhvZF90YWc1QEBcIjogXCI8c3Ryb25nPlNpbXBsaWZpY2FjacOzIGxpbmVhbDwvc3Ryb25nPjogdXRpbGl0emEgdW5hIHhhcnhhIGlycmVndWxhciBkZSB0cmlhbmdsZXMgZGVzIGRlbHMgcHVudHMgY2VudHJhbHMgZGUgY2FkYSBjZWzCt2xhIGRlbCByw6BzdGVyIGlycmVndWxhciBwZXIgaW50ZXJwb2xhciB1bmEgc3VwZXJmw61jaWUgcXVlLCBhbGVzaG9yZXMsIGVzIGNvbnZlcnRlaXggZW4gdW4gcsOgc3RlciByZWd1bGFyLlwiLFxuXHRcIkBAU3dhdGhfSW50ZXJwb2xhdGlvbi1NZXRob2RfdGFnN0BAXCI6IFwiPHN0cm9uZz5WZcOtIG5hdHVyYWw8L3N0cm9uZz46IHJlYWxpdHphIHVuYSBhc3NpZ25hY2nDsyBkZSB2ZcOtIG3DqXMgcHJvcGVyIGkgw6lzIGVsIG3DqHRvZGUgZCdpbnRlcnBvbGFjacOzIG3DqXMgcsOgcGlkLiBTJ3V0aWxpdHphIHByaW5jaXBhbG1lbnQgcGVyIGEgbGVzIGRhZGVzIGRpc2NyZXRlcywgY29tIGFyYSB1bmEgY2xhc3NpZmljYWNpw7MgZCfDunMgZGVsIHPDsmwsIHBlcnF1w6ggbm8gY2FudmlhcsOgIGVscyB2YWxvcnMgZGUgbGVzIGNlbMK3bGVzLiBMJ2Vycm9yIGVzcGFjaWFsIG3DoHhpbSBzZXLDoCBsYSBtZWl0YXQgZGUgbGEgbWlkYSBkZSBsYSBjZWzCt2xhLlwiLFxuXHRcIkBAU3dhdGhfUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgcXVhZHJpY3VsYXQgaXJyZWd1bGFyIHF1ZSBlcyB0b3JuYXLDoCBhIG1vc3RyZWphci5cIixcblx0XCJAQFRhbl9DZWxsc2l6ZS1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIHRvdGVzIGxlcyBtaWRlcyBkZSBjZWzCt2xhIGludHJvZHXDr2RlcyBzw7NuIGlndWFscywgdG90ZXMgbGVzIG9wY2lvbnMgZ2VuZXJhcmFuIGVscyBtYXRlaXhvcyByZXN1bHRhdHMuXCIsXG5cdFwiQEBUYW5fQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFRhbl9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAVGFuX0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAVGFuX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBUYW5fQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAVGFuX0V4dGVudC1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGwnZXh0ZW5zacOzIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYTpcIixcblx0XCJAQFRhbl9FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFRhbl9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFRhbl9FeHRlbnQtVHlwZV90YWczQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBUYW5fRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBUYW5fUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZGUgbGEgcXVhbCBlcyBjYWxjdWxhcmFuIGVscyB2YWxvcnMgZGUgbGEgdGFuZ2VudC5cIixcblx0XCJAQFRhbkhfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAVGFuSF9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAVGFuSF9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAVGFuSF9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFRhbkhfQ2VsbHNpemUtVHlwZV90YWc0QEBcIjogXCJNaXRqYSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtaXRqYW5hIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFRhbkhfQ2VsbHNpemUtVHlwZV90YWc1QEBcIjogXCJNw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAVGFuSF9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBUYW5IX0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAVGFuSF9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFRhbkhfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAVGFuSF9FeHRlbnQtVHlwZV90YWc0QEBcIjogXCJVbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFRhbkhfUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZGUgbGEgcXVhbCBlcyBjYWxjdWxhcmFuIGVscyB2YWxvcnMgZGUgbGEgdGFuZ2VudCBoaXBlcmLDsmxpY2EuXCIsXG5cdFwiQEBUYXNzZWxlZC1DYXBfUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIGFsIHF1YWwgZXMgcmVhbGl0emFyw6AgbGEgdHJhbnNmb3JtYWNpw7MgVGFzc2VsZWQgQ2FwLlwiLFxuXHRcIkBAVGltZXNfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAVGltZXNfQ2VsbHNpemUtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFRpbWVzX0NlbGxzaXplLVR5cGVfdGFnMkBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBUaW1lc19DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFRpbWVzX0NlbGxzaXplLVR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBUaW1lc19DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBUaW1lc19FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBUaW1lc19FeHRlbnQtVHlwZV90YWcxQEBcIjogXCJQcmltZXIgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWwgcHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFRpbWVzX0V4dGVudC1UeXBlX3RhZzJAQFwiOiBcIkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAVGltZXNfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAVGltZXNfRXh0ZW50LVR5cGVfdGFnNEBAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBUaW1lc19SYXN0ZXJfdGFnMEBAXCI6IFwiRW50cmFkYSBxdWUgY29udMOpIGVscyB2YWxvcnMgcXVlIGVzIG11bHRpcGxpY2FyYW4uXCIsXG5cdFwiQEBUaW1lc19SYXN0ZXJfdGFnMUBAXCI6IFwiVW4gdmFsb3IgY29uc3RhbnQgZXMgcG90IHV0aWxpdHphciBjb20gYSBlbnRyYWRhIHBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBzZW1wcmUgaSBxdWFuIGVsIHLDoHN0ZXIgZXN0aWd1aSBlc3BlY2lmaWNhdCBwZXIgYSBsJ2FsdHJlIHBhcsOgbWV0cmUuXCIsXG5cdFwiQEBUaW1lc19SYXN0ZXIyX3RhZzBAQFwiOiBcIkVudHJhZGEgcXVlIGNvbnTDqSBlbHMgdmFsb3JzIHBlbHMgcXVhbHMgZXMgbXVsdGlwbGljYXLDoCBsYSBwcmltZXJhIGVudHJhZGEuXCIsXG5cdFwiQEBUaW1lc19SYXN0ZXIyX3RhZzFAQFwiOiBcIlVuIHZhbG9yIGNvbnN0YW50IGVzIHBvdCB1dGlsaXR6YXIgY29tIGEgZW50cmFkYSBwZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgc2VtcHJlIGkgcXVhbiBlbCByw6BzdGVyIGVzdGlndWkgZXNwZWNpZmljYXQgcGVyIGEgbCdhbHRyZSBwYXLDoG1ldHJlLlwiLFxuXHRcIkBAVHJhbnNwb3NlLUJpdHNfQml0LVBhdHRlcm5fdGFnMEBAXCI6IFwiVHJpZXUgZWwgdGlwdXMgZGUgdHJhbnNwb3NpY2nDsyBxdWUgZXMgcmVhbGl0emFyw6AgbyBlc3BlY2lmaXF1ZXUtbmUgdW4gZGUgcGVyc29uYWxpdHphdDpcIixcblx0XCJAQFRyYW5zcG9zZS1CaXRzX0JpdC1QYXR0ZXJuX3RhZzFAQFwiOiBcIkxhbmRzYXQgOCBDaXJydXNcIixcblx0XCJAQFRyYW5zcG9zZS1CaXRzX0JpdC1QYXR0ZXJuX3RhZzJAQFwiOiBcIkxhbmRzYXQgOCBDbG91ZFwiLFxuXHRcIkBAVHJhbnNwb3NlLUJpdHNfQml0LVBhdHRlcm5fdGFnM0BAXCI6IFwiTGFuZHNhdCA4IENsb3VkIFNoYWRvd1wiLFxuXHRcIkBAVHJhbnNwb3NlLUJpdHNfQml0LVBhdHRlcm5fdGFnNEBAXCI6IFwiTGFuZHNhdCA4IERlc2lnbmF0ZWQgRmlsbFwiLFxuXHRcIkBAVHJhbnNwb3NlLUJpdHNfQml0LVBhdHRlcm5fdGFnNUBAXCI6IFwiTGFuZHNhdCA4IERyb3BwZWQgRnJhbWVcIixcblx0XCJAQFRyYW5zcG9zZS1CaXRzX0JpdC1QYXR0ZXJuX3RhZzZAQFwiOiBcIkxhbmRzYXQgOCBTbm93L0ljZVwiLFxuXHRcIkBAVHJhbnNwb3NlLUJpdHNfQml0LVBhdHRlcm5fdGFnN0BAXCI6IFwiTGFuZHNhdCA4IFRlcnJhaW4gT2NjbHVzaW9uXCIsXG5cdFwiQEBUcmFuc3Bvc2UtQml0c19CaXQtUGF0dGVybl90YWc4QEBcIjogXCJMYW5kc2F0IDggVmVnZXRhdGlvblwiLFxuXHRcIkBAVHJhbnNwb3NlLUJpdHNfQml0LVBhdHRlcm5fdGFnOUBAXCI6IFwiTGFuZHNhdCA4IFdhdGVyXCIsXG5cdFwiQEBUcmFuc3Bvc2UtQml0c19CaXQtUGF0dGVybl90YWcxMEBAXCI6IFwiRGVmaW5pdCBwZXIgbCd1c3VhcmlcIixcblx0XCJAQFRyYW5zcG9zZS1CaXRzX0NvbnN0YW50LVZhbHVlX3RhZzBAQFwiOiBcIlZhbG9yIG9wY2lvbmFsIHF1ZSBzJ3V0aWxpdHphcsOgIHBlciBlbXBsZW5hciB0b3RzIGVscyBiaXRzIHF1ZSBubyBlc3RpZ3VpbiBpbXBsaWNhdHMgZW4gbGEgdHJhbnNwb3NpY2nDsy4gQXF1ZXN0IHBhcsOgbWV0cmUgZXMgbW9zdHJhIHF1YW4gZWwgcGFyw6BtZXRyZSA8c3Ryb25nPkdlbmVyYSB1biByw6BzdGVyIGQnZW1wbGVuYW1lbnQgYSBwYXJ0aXIgZGUgbGEgY29uc3RhbnQ8L3N0cm9uZz4gZXMgZGVmaW5laXggZW4gPHN0cm9uZz5Tw608L3N0cm9uZz4uXCIsXG5cdFwiQEBUcmFuc3Bvc2UtQml0c19GaWxsLVJhc3Rlcl90YWcwQEBcIjogXCJFc3BlY2lmaXF1ZXUgdW4gZGF0YXNldCByw6BzdGVyIHBlciB1dGlsaXR6YXItbG8gcGVyIGVtcGxlbmFyIHRvdHMgZWxzIGJpdHMgcXVlIG5vIGVzdGFuIGltcGxpY2F0cyBlbiBsYSB0cmFuc3Bvc2ljacOzLiBBcXVlc3QgcGFyw6BtZXRyZSBlcyBtb3N0cmEgcXVhbiBlbCBwYXLDoG1ldHJlIDxzdHJvbmc+R2VuZXJhIHVuIHLDoHN0ZXIgZCdlbXBsZW5hbWVudCBhIHBhcnRpciBkZSBsYSBjb25zdGFudDwvc3Ryb25nPiBlcyBkZWZpbmVpeCBlbiA8c3Ryb25nPk5vPC9zdHJvbmc+LlwiLFxuXHRcIkBAVHJhbnNwb3NlLUJpdHNfR2VuZXJhdGUtRmlsbC1SYXN0ZXItZnJvbS1Db25zdGFudF90YWcwQEBcIjogXCJHZW5lcmV1IHVuIHLDoHN0ZXIgZCdlbXBsZW5hbWVudCBtaXRqYW7Dp2FudCB1biB2YWxvciBjb25zdGFudDpcIixcblx0XCJAQFRyYW5zcG9zZS1CaXRzX0dlbmVyYXRlLUZpbGwtUmFzdGVyLWZyb20tQ29uc3RhbnRfdGFnMUBAXCI6IFwiPHN0cm9uZz5Tw608L3N0cm9uZz46IGVzIGdlbmVyYXLDoCB1biByw6BzdGVyIG1pdGphbsOnYW50IHVuIHZhbG9yIGNvbnN0YW50IHBlciBlbXBsZW5hciBlbHMgYml0cyBubyBpbXBsaWNhdHMgZW4gbGEgdHJhbnNwb3NpY2nDsy4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBUcmFuc3Bvc2UtQml0c19HZW5lcmF0ZS1GaWxsLVJhc3Rlci1mcm9tLUNvbnN0YW50X3RhZzNAQFwiOiBcIjxzdHJvbmc+Tm88L3N0cm9uZz46IGVzIGdlbmVyYXLDoCB1biByw6BzdGVyIG1pdGphbsOnYW50IHZhbG9ycyBkZSBww614ZWwgZCd1biBkYXRhc2V0IHLDoHN0ZXIgZXhpc3RlbnQgcGVyIGVtcGxlbmFyIGVscyBiaXRzIG5vIGltcGxpY2F0cyBlbiBsYSB0cmFuc3Bvc2ljacOzLlwiLFxuXHRcIkBAVHJhbnNwb3NlLUJpdHNfT3V0cHV0LUJpdC1hbmQtSW5wdXQtQml0X3RhZzBAQFwiOiBcIlRhdWxhIG5vbcOpcyBkZSBsZWN0dXJhIHF1ZSBtb3N0cmEgZWxzIGJpdHMgZGUgc29ydGlkYSBpIGxlcyBlbnRyYWRlcyBxdWUgZXMgdHJvYmFyYW4gZWwgc2V1IGxsb2MuXCIsXG5cdFwiQEBUcmFuc3Bvc2UtQml0c19SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcGVyIGRlc2VtcGFxdWV0YXIgaSByZXByZXNlbnRhciBjYXJ0b2dyw6BmaWNhbWVudCBkZSBub3UuXCIsXG5cdFwiQEBVbml0LUNvbnZlcnNpb25fRnJvbS1Vbml0X3RhZzBAQFwiOiBcIlRpcHVzIGQndW5pdGF0IG9yaWdpbmFsIGRlbHMgcMOteGVscy5cIixcblx0XCJAQFVuaXQtQ29udmVyc2lvbl9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIGNvbnRpbmRyw6AgbGVzIHVuaXRhdHMgY29udmVydGlkZXMuXCIsXG5cdFwiQEBVbml0LUNvbnZlcnNpb25fVG8tVW5pdF90YWcwQEBcIjogXCJUaXB1cyBkJ3VuaXRhdCBjb252ZXJ0aWRhIGRlbHMgcMOteGVscy5cIixcblx0XCJAQFZlY3Rvci1GaWVsZF9BbmdsZS1SZWZlcmVuY2UtU3lzdGVtX3RhZzBAQFwiOiBcIkVzcGVjaWZpY2EgY29tIHMnaGEgbWVzdXJhdCBlbCBjb21wb25lbnQgZGUgZGlyZWNjacOzLlwiLFxuXHRcIkBAVmVjdG9yLUZpZWxkX0FuZ2xlLVJlZmVyZW5jZS1TeXN0ZW1fdGFnMUBAXCI6IFwiR2VvZ3LDoGZpY2E6IDDCsCBhcHVudGEgY2FwIGFsIG5vcmQgaSA5MMKwIGFwdW50YSBjYW1wIGEgbCdlc3RcIixcblx0XCJAQFZlY3Rvci1GaWVsZF9BbmdsZS1SZWZlcmVuY2UtU3lzdGVtX3RhZzJAQFwiOiBcIkFyaXRtw6h0aWNhOiAwwrAgYXB1bnRhIGNhcCBhIGwnZXN0IGkgOTDCsCBhcHVudGEgY2FwIGFsIG5vcmRcIixcblx0XCJAQFZlY3Rvci1GaWVsZF9JbnB1dC1EYXRhLVR5cGVfdGFnMEBAXCI6IFwiVGlwdXMgZGUgY2FtcCB2ZWN0b3JpYWwgcXVlIHJlcHJlc2VudGVuIGxlcyB2b3N0cmVzIGVudHJhZGVzLlwiLFxuXHRcIkBAVmVjdG9yLUZpZWxkX0lucHV0LURhdGEtVHlwZV90YWcxQEBcIjogXCJEZXNjb25lZ3VkYTogw6lzIGRlc2NvbmVndWRhIHNpIGxlcyBlbnRyYWRlcyByZXByZXNlbnRlbiBVLVYgbyBtYWduaXR1ZC1kaXJlY2Npw7MuXCIsXG5cdFwiQEBWZWN0b3ItRmllbGRfSW5wdXQtRGF0YS1UeXBlX3RhZzJAQFwiOiBcIlUtVjogbGVzIGRhZGVzIGQnZW50cmFkYSByZXByZXNlbnRlbiBlbHMgY29tcG9uZW50cyBVIGkgVi5cIixcblx0XCJAQFZlY3Rvci1GaWVsZF9JbnB1dC1EYXRhLVR5cGVfdGFnM0BAXCI6IFwiTWFnbml0dWQtZGlyZWNjacOzOiBsZXMgZGFkZXMgZCdlbnRyYWRhIHJlcHJlc2VudGVuIGxhIG1hZ25pdHVkIGkgbGEgZGlyZWNjacOzLlwiLFxuXHRcIkBAVmVjdG9yLUZpZWxkX091dHB1dC1EYXRhLVR5cGVfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBlbCB0aXB1cyBkZSBjYW1wIHZlY3RvcmlhbCBxdWUgcmVwcmVzZW50YXLDoCBsYSB2b3N0cmEgc29ydGlkYS5cIixcblx0XCJAQFZlY3Rvci1GaWVsZF9PdXRwdXQtRGF0YS1UeXBlX3RhZzFAQFwiOiBcIk1hZ25pdHVkLWRpcmVjY2nDszogbGVzIGRhZGVzIGRlIHNvcnRpZGEgcmVwcmVzZW50ZW4gbGEgbWFnbml0dWQgaSBsYSBkaXJlY2Npw7MuXCIsXG5cdFwiQEBWZWN0b3ItRmllbGRfT3V0cHV0LURhdGEtVHlwZV90YWcyQEBcIjogXCJVLVY6IGxlcyBkYWRlcyBkZSBzb3J0aWRhIHJlcHJlc2VudGVuIGVscyBjb21wb25lbnRzIFUgaSBWLlwiLFxuXHRcIkBAVmVjdG9yLUZpZWxkX1Jhc3RlcjFfdGFnMEBAXCI6IFwiUHJpbWVyIHLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAVmVjdG9yLUZpZWxkX1Jhc3RlcjFfdGFnMUBAXCI6IFwiU2Vyw6AgZWwgdmFsb3IgZCdVIG8gbGEgbWFnbml0dWQuXCIsXG5cdFwiQEBWZWN0b3ItRmllbGRfUmFzdGVyMl90YWcwQEBcIjogXCJTZWdvbiByw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQFZlY3Rvci1GaWVsZF9SYXN0ZXIyX3RhZzFAQFwiOiBcIlNlcsOgIGVsIHZhbG9yIGRlIFYgbyBsYSBkaXJlY2Npw7MuXCIsXG5cdFwiQEBWaWV3c2hlZF9BbmFseXNpcy1NZXRob2RfdGFnMEBAXCI6IFwiVHJpZXUgZWwgbcOodG9kZSBtaXRqYW7Dp2FudCBlbCBxdWFsIGVzIGNhbGN1bGFyw6AgbGEgdmlzaWJpbGl0YXQuIEFxdWVzdGEgb3BjacOzIHVzIHBlcm1ldCBpbnRlcmNhbnZpYXIgcGFydCBkZSBsYSBwcmVjaXNpw7MgcGVyIHVuIHJlbmRpbWVudCBzdXBlcmlvci5cIixcblx0XCJAQFZpZXdzaGVkX0FuYWx5c2lzLU1ldGhvZF90YWcxQEBcIjogXCJUb3RlcyBsZXMgbMOtbmllcyBkZSB2aXNpw7M6IHMnZXhlY3V0YSB1bmEgbMOtbmlhIGRlIHZpc2nDsyBlbiBjYWRhIHDDrXhlbCBkZWwgcsOgc3RlciBhIGZpIGQnZXN0YWJsaXIgbGVzIMOgcmVlcyB2aXNpYmxlcy4gQXF1ZXN0IMOpcyBlbCBtw6h0b2RlIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAVmlld3NoZWRfQW5hbHlzaXMtTWV0aG9kX3RhZzJAQFwiOiBcIkzDrW5pZXMgZGUgdmlzacOzIGRlIHBlcsOtbWV0cmU6IGxlcyBsw61uaWVzIGRlIHZpc2nDsyBub23DqXMgcydleGVjdXRlbiBhbHMgcMOteGVscyBkZWwgcGVyw61tZXRyZSBkZSBsZXMgw6ByZWVzIHZpc2libGVzIGEgZmkgZCdlc3RhYmxpciBsZXMgw6ByZWVzIGRlIHZpc2liaWxpdGF0LiBBbWIgYXF1ZXN0IG3DqHRvZGUgcydvYnTDqSB1biBtaWxsb3IgcmVuZGltZW50IHF1ZSBhbWIgZWwgbcOodG9kZSA8c3Ryb25nPlRvdGVzIGxlcyBsw61uaWVzIGRlIHZpc2nDszwvc3Ryb25nPiBwZXJxdcOoIGhpIGhhIG1lbnlzIGzDrW5pZXMgZGUgdmlzacOzIGFsIGPDoGxjdWwuXCIsXG5cdFwiQEBWaWV3c2hlZF9BbmFseXNpcy1UeXBlX3RhZzBAQFwiOiBcIlRyaWV1IGVsIHRpcHVzIGQnYW7DoGxpc2kgZGUgdmlzaWJpbGl0YXQgcXVlIHZvbGV1IHJlYWxpdHphciwgamEgc2lndWkgcGVyIGRldGVybWluYXIgbGEgdmlzaWJpbGl0YXQgZGUgY2FkYSBjZWzCt2xhIHBlciBhbHMgb2JzZXJ2YWRvcnMgbyBwZXIgaWRlbnRpZmljYXIgZWxzIG9ic2VydmFkb3JzIHZpc2libGVzIHBlciBhIGNhZGEgdWJpY2FjacOzIGRlIHN1cGVyZsOtY2llLlwiLFxuXHRcIkBAVmlld3NoZWRfQW5hbHlzaXMtVHlwZV90YWcxQEBcIjogXCJGcmVxw7zDqG5jaWE6IG5vbWJyZSBkZSB2ZWdhZGVzIHF1ZSBsZXMgdWJpY2FjaW9ucyBkJ29ic2VydmFjacOzIGQnZW50cmFkYSBwb2RlbiB2ZXVyZSBjYWRhIHViaWNhY2nDsyBkZSBww614ZWwgZGVsIHLDoHN0ZXIgZGUgc3VwZXJmw61jaWUgZCdlbnRyYWRhIChjb20gYSBwdW50cyBvIHbDqHJ0ZXhzIGRlIGxlcyBlbnRpdGF0cyBkZSBsJ29ic2VydmFkb3IgZGUgcG9saWzDrW5pYSkuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAVmlld3NoZWRfQW5hbHlzaXMtVHlwZV90YWcyQEBcIjogXCJPYnNlcnZhZG9yczogbGEgc29ydGlkYSBpZGVudGlmaWNhIGV4YWN0YW1lbnQgZWxzIHB1bnRzIGQnb2JzZXJ2YWRvciB2aXNpYmxlcyBkZXMgZGUgY2FkYSB1YmljYWNpw7MgZGUgc3VwZXJmw61jaWUgZGVsIHLDoHN0ZXIuIEVsIG5vbWJyZSBtw6B4aW0gcGVybcOocyBkJ29ic2VydmFkb3JzIGQnZW50cmFkYSDDqXMgZGUgMzIgYW1iIGFxdWVzdCB0aXB1cyBkJ2Fuw6BsaXNpLlwiLFxuXHRcIkBAVmlld3NoZWRfSG9yaXpvbnRhbC1FbmQtQW5nbGVfdGFnMEBAXCI6IFwiQXF1ZXN0IHZhbG9yIGRlZmluZWl4IGwnYW5nbGUgZmluYWwgZGUgbCdpbnRlcnZhbCBkJ2Fuw6BsaXNpIGhvcml0em9udGFsLiBFbCB2YWxvciBzJ2hhIGQnZXNwZWNpZmljYXIgZW4gZ3JhdXMgZGUgMCBhIDM2MCwwLCBvbiAwIGVzdMOgIG9yaWVudGF0IGFsIG5vcmQuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAzNjAsMC5cIixcblx0XCJAQFZpZXdzaGVkX0hvcml6b250YWwtRW5kLUFuZ2xlX3RhZzFAQFwiOiBcIlBvdCBzZXIgdW4gY2FtcCBkZWwgZGF0YXNldCA8c3Ryb25nPkVudGl0YXRzIGQnb2JzZXJ2YWRvcjwvc3Ryb25nPiBkJ2VudHJhZGEgbyB1biB2YWxvciBudW3DqHJpYy4gU2kgYXF1ZXN0IHBhcsOgbWV0cmUgZXN0w6AgZGVmaW5pdCBlbiB1biB2YWxvciwgZWwgdmFsb3IgcydhcGxpY2Fyw6AgYSB0b3RzIGVscyBvYnNlcnZhZG9ycy4gUGVyIGVzcGVjaWZpY2FyIHZhbG9ycyBkaWZlcmVudHMgcGVyIGEgY2FkYSBvYnNlcnZhZG9yLCBkZWZpbml1IGFxdWVzdCBwYXLDoG1ldHJlIGVuIHVuIGNhbXAgZGVsIGRhdGFzZXQgPHN0cm9uZz5FbnRpdGF0cyBkJ29ic2VydmFkb3I8L3N0cm9uZz4uXCIsXG5cdFwiQEBWaWV3c2hlZF9Ib3Jpem9udGFsLVN0YXJ0LUFuZ2xlX3RhZzBAQFwiOiBcIkFxdWVzdCB2YWxvciBkZWZpbmVpeCBsJ2FuZ2xlIGluaWNpYWwgZGUgbCdpbnRlcnZhbCBkJ2Fuw6BsaXNpIGhvcml0em9udGFsLiBFbCB2YWxvciBzJ2hhIGQnZXNwZWNpZmljYXIgZW4gZ3JhdXMgZGUgMCBhIDM2MCwwLCBvbiAwIGVzdMOgIG9yaWVudGF0IGFsIG5vcmQuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLlwiLFxuXHRcIkBAVmlld3NoZWRfSG9yaXpvbnRhbC1TdGFydC1BbmdsZV90YWcxQEBcIjogXCJQb3Qgc2VyIHVuIGNhbXAgZGVsIGRhdGFzZXQgPHN0cm9uZz5FbnRpdGF0cyBkJ29ic2VydmFkb3I8L3N0cm9uZz4gZCdlbnRyYWRhIG8gdW4gdmFsb3IgbnVtw6hyaWMuIFNpIGFxdWVzdCBwYXLDoG1ldHJlIGVzdMOgIGRlZmluaXQgZW4gdW4gdmFsb3IsIGVsIHZhbG9yIHMnYXBsaWNhcsOgIGEgdG90cyBlbHMgb2JzZXJ2YWRvcnMuIFBlciBlc3BlY2lmaWNhciB2YWxvcnMgZGlmZXJlbnRzIHBlciBhIGNhZGEgb2JzZXJ2YWRvciwgZGVmaW5pdSBhcXVlc3QgcGFyw6BtZXRyZSBlbiB1biBjYW1wIGRlbCBkYXRhc2V0IDxzdHJvbmc+RW50aXRhdHMgZCdvYnNlcnZhZG9yPC9zdHJvbmc+LlwiLFxuXHRcIkBAVmlld3NoZWRfSW5uZXItUmFkaXVzLWlzLTNELURpc3RhbmNlX3RhZzBAQFwiOiBcIlRpcHVzIGRlIGRpc3TDoG5jaWEgZGVsIHBhcsOgbWV0cmUgZGUgcmFkaSBpbnRlcm4uXCIsXG5cdFwiQEBWaWV3c2hlZF9Jbm5lci1SYWRpdXMtaXMtM0QtRGlzdGFuY2VfdGFnMUBAXCI6IFwiRGVzYWN0aXZhdDogZWwgPHN0cm9uZz5yYWRpIGludGVybjwvc3Ryb25nPiBzJ2hhIGQnaW50ZXJwcmV0YXIgY29tIHVuYSBkaXN0w6BuY2lhIDJELiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFZpZXdzaGVkX0lubmVyLVJhZGl1cy1pcy0zRC1EaXN0YW5jZV90YWc0QEBcIjogXCJBY3RpdmF0OiBlbCA8c3Ryb25nPnJhZGkgaW50ZXJuPC9zdHJvbmc+IHMnaGEgZCdpbnRlcnByZXRhciBjb20gdW5hIGRpc3TDoG5jaWEgM0QuXCIsXG5cdFwiQEBWaWV3c2hlZF9Jbm5lci1SYWRpdXNfdGFnMEBAXCI6IFwiQXF1ZXN0IHZhbG9yIGRlZmluZWl4IGxhIGRpc3TDoG5jaWEgaW5pY2lhbCAobcOtbmltYSkgZGVzIGRlIGxhIHF1YWwgZXMgZGV0ZXJtaW5hIGxhIHZpc2liaWxpdGF0LiBFbHMgcMOteGVscyBtw6lzIHByb3BlcnMgcXVlIGFxdWVzdGEgZGlzdMOgbmNpYSBlcyBjb25zaWRlcmVuIG5vIHZpc2libGVzIGEgbGEgc29ydGlkYSwgcGVyw7IgcG9kZW4gY29udGludWFyIGJsb3F1ZWphbnQgbGEgdmlzaWJpbGl0YXQgZGVscyBww614ZWxzIGVudHJlIGVsIDxzdHJvbmc+cmFkaSBpbnRlcm48L3N0cm9uZz4gaSBlbCA8c3Ryb25nPnJhZGkgZXh0ZXJuPC9zdHJvbmc+LiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMC5cIixcblx0XCJAQFZpZXdzaGVkX0lubmVyLVJhZGl1c190YWc1QEBcIjogXCJQb3Qgc2VyIHVuIGNhbXAgZGVsIGRhdGFzZXQgPHN0cm9uZz5FbnRpdGF0cyBkJ29ic2VydmFkb3I8L3N0cm9uZz4gZCdlbnRyYWRhIG8gdW4gdmFsb3IgbnVtw6hyaWMuIFNpIGFxdWVzdCBwYXLDoG1ldHJlIGVzdMOgIGRlZmluaXQgZW4gdW4gdmFsb3IsIGVsIHZhbG9yIHMnYXBsaWNhcsOgIGEgdG90cyBlbHMgb2JzZXJ2YWRvcnMuIFBlciBlc3BlY2lmaWNhciB2YWxvcnMgZGlmZXJlbnRzIHBlciBhIGNhZGEgb2JzZXJ2YWRvciwgZGVmaW5pdSBhcXVlc3QgcGFyw6BtZXRyZSBlbiB1biBjYW1wIGRlbCBkYXRhc2V0IDxzdHJvbmc+RW50aXRhdHMgZCdvYnNlcnZhZG9yPC9zdHJvbmc+LlwiLFxuXHRcIkBAVmlld3NoZWRfT2JzZXJ2ZXItRWxldmF0aW9uX3RhZzBAQFwiOiBcIkFxdWVzdCB2YWxvciBzJ3V0aWxpdHphIHBlciBkZWZpbmlyIGxlcyBlbGV2YWNpb25zIGRlIHN1cGVyZsOtY2llIGRlbHMgcHVudHMgbyBlbHMgdsOocnRleHMgZCdvYnNlcnZhZG9yLlwiLFxuXHRcIkBAVmlld3NoZWRfT2JzZXJ2ZXItRWxldmF0aW9uX3RhZzFAQFwiOiBcIlBvdCBzZXIgdW4gY2FtcCBkZWwgZGF0YXNldCA8c3Ryb25nPkVudGl0YXRzIGQnb2JzZXJ2YWRvcjwvc3Ryb25nPiBkJ2VudHJhZGEgbyB1biB2YWxvciBudW3DqHJpYy4gU2kgYXF1ZXN0IHBhcsOgbWV0cmUgbm8gcydlc3BlY2lmaWNhLCBsJ2VsZXZhY2nDsyBkZSBsJ29ic2VydmFkb3IgcydvYnRpbmRyw6AgZGVsIHLDoHN0ZXIgZGUgc3VwZXJmw61jaWUgbWl0amFuw6dhbnQgbGEgaW50ZXJwb2xhY2nDsyBiaWxpbmVhbC4gU2kgYXF1ZXN0IHBhcsOgbWV0cmUgZXN0w6AgZGVmaW5pdCBlbiB1biB2YWxvciwgZWwgdmFsb3IgcydhcGxpY2Fyw6AgYSB0b3RzIGVscyBvYnNlcnZhZG9ycy4gUGVyIGVzcGVjaWZpY2FyIHZhbG9ycyBkaWZlcmVudHMgcGVyIGEgY2FkYSBvYnNlcnZhZG9yLCBkZWZpbml1IGFxdWVzdCBwYXLDoG1ldHJlIGVuIHVuIGNhbXAgZGVsIGRhdGFzZXQgPHN0cm9uZz5FbnRpdGF0cyBkJ29ic2VydmFkb3I8L3N0cm9uZz4uXCIsXG5cdFwiQEBWaWV3c2hlZF9PYnNlcnZlci1GZWF0dXJlc190YWcwQEBcIjogXCJDbGFzc2UgZCdlbnRpdGF0IGQnZW50cmFkYSBuZWNlc3PDoHJpYSBxdWUgaWRlbnRpZmljYSBsZXMgdWJpY2FjaW9ucyBkZSBsJ29ic2VydmFkb3IuIFBvZGVuIHNlciBlbnRpdGF0cyBkZSBwdW50LCBtdWx0aXB1bnQgbyBwb2xpbMOtbmlhLlwiLFxuXHRcIkBAVmlld3NoZWRfT2JzZXJ2ZXItRmVhdHVyZXNfdGFnMUBAXCI6IFwiTGEgY2xhc3NlIGQnZW50aXRhdCBkJ2VudHJhZGEgZXMgdHJhbnNmb3JtYSBlbiB1biBzaXN0ZW1hIGRlIGNvb3JkZW5hZGVzIGdlb2PDqG50cmlxdWVzIDNEIGR1cmFudCBlbCBjw6BsY3VsIGRlIGxhIHZpc2liaWxpdGF0LiBFbHMgb2JzZXJ2YWRvcnMgcXVlIGVzIHRyb2JpbiBmb3JhIGRlIGwnZXh0ZW5zacOzIGRlbCByw6BzdGVyIGRlIHN1cGVyZsOtY2llIG8gZW4gY2VswrdsZXMgTm9EYXRhIHMnaWdub3JhcmFuIGFsIGPDoGxjdWwuXCIsXG5cdFwiQEBWaWV3c2hlZF9PYnNlcnZlci1PZmZzZXRfdGFnMEBAXCI6IFwiQXF1ZXN0IHZhbG9yIGluZGljYSB1bmEgZGlzdMOgbmNpYSB2ZXJ0aWNhbCAoZW4gdW5pdGF0cyBkZSBzdXBlcmbDrWNpZSkgcXVlIHMnYWZlZ2lyw6AgYSBsJ2VsZXZhY2nDsyBkZSBsJ29ic2VydmFkb3IuIEhhIGRlIHNlciB1biBlbnRlciBwb3NpdGl1IG8gdW4gdmFsb3IgZGUgcHVudCBmbG90YW50LlwiLFxuXHRcIkBAVmlld3NoZWRfT2JzZXJ2ZXItT2Zmc2V0X3RhZzFAQFwiOiBcIlBvdCBzZXIgdW4gY2FtcCBkZWwgZGF0YXNldCA8c3Ryb25nPkVudGl0YXRzIGQnb2JzZXJ2YWRvcjwvc3Ryb25nPiBkJ2VudHJhZGEgbyB1biB2YWxvciBudW3DqHJpYy4gU2kgYXF1ZXN0IHBhcsOgbWV0cmUgZXN0w6AgZGVmaW5pdCBlbiB1biB2YWxvciwgZWwgdmFsb3IgcydhcGxpY2Fyw6AgYSB0b3RzIGVscyBvYnNlcnZhZG9ycy4gUGVyIGVzcGVjaWZpY2FyIHZhbG9ycyBkaWZlcmVudHMgcGVyIGEgY2FkYSBvYnNlcnZhZG9yLCBkZWZpbml1IGFxdWVzdCBwYXLDoG1ldHJlIGVuIHVuIGNhbXAgZGVsIGRhdGFzZXQgPHN0cm9uZz5FbnRpdGF0cyBkJ29ic2VydmFkb3I8L3N0cm9uZz4uXCIsXG5cdFwiQEBWaWV3c2hlZF9PdXRlci1SYWRpdXMtaXMtM0QtRGlzdGFuY2VfdGFnMEBAXCI6IFwiVGlwdXMgZGUgZGlzdMOgbmNpYSBkZWwgcGFyw6BtZXRyZSBkZSByYWRpIGV4dGVybi5cIixcblx0XCJAQFZpZXdzaGVkX091dGVyLVJhZGl1cy1pcy0zRC1EaXN0YW5jZV90YWcxQEBcIjogXCJEZXNhY3RpdmF0OiBlbCA8c3Ryb25nPnJhZGkgZXh0ZXJuPC9zdHJvbmc+IHMnaGEgZCdpbnRlcnByZXRhciBjb20gdW5hIGRpc3TDoG5jaWEgMkQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAVmlld3NoZWRfT3V0ZXItUmFkaXVzLWlzLTNELURpc3RhbmNlX3RhZzRAQFwiOiBcIkFjdGl2YXQ6IGVsIDxzdHJvbmc+cmFkaSBleHRlcm48L3N0cm9uZz4gcydoYSBkJ2ludGVycHJldGFyIGNvbSB1bmEgZGlzdMOgbmNpYSAzRC5cIixcblx0XCJAQFZpZXdzaGVkX091dGVyLVJhZGl1c190YWcwQEBcIjogXCJBcXVlc3QgdmFsb3IgZGVmaW5laXggbGEgZGlzdMOgbmNpYSBtw6B4aW1hIGRlcyBkZSBsYSBxdWFsIGVzIGRldGVybWluYSBsYSB2aXNpYmlsaXRhdC4gRWxzIHDDrXhlbHMgbcOpcyBlbmxsw6AgZCdhcXVlc3RhIGRpc3TDoG5jaWEgcydleGNsb3VlbiBkZSBsJ2Fuw6BsaXNpLlwiLFxuXHRcIkBAVmlld3NoZWRfT3V0ZXItUmFkaXVzX3RhZzFAQFwiOiBcIlBvdCBzZXIgdW4gY2FtcCBkZWwgZGF0YXNldCA8c3Ryb25nPkVudGl0YXRzIGQnb2JzZXJ2YWRvcjwvc3Ryb25nPiBkJ2VudHJhZGEgbyB1biB2YWxvciBudW3DqHJpYy4gU2kgYXF1ZXN0IHBhcsOgbWV0cmUgZXN0w6AgZGVmaW5pdCBlbiB1biB2YWxvciwgZWwgdmFsb3IgcydhcGxpY2Fyw6AgYSB0b3RzIGVscyBvYnNlcnZhZG9ycy4gUGVyIGVzcGVjaWZpY2FyIHZhbG9ycyBkaWZlcmVudHMgcGVyIGEgY2FkYSBvYnNlcnZhZG9yLCBkZWZpbml1IGFxdWVzdCBwYXLDoG1ldHJlIGVuIHVuIGNhbXAgZGVsIGRhdGFzZXQgPHN0cm9uZz5FbnRpdGF0cyBkJ29ic2VydmFkb3I8L3N0cm9uZz4uXCIsXG5cdFwiQEBWaWV3c2hlZF9SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkZSBzdXBlcmbDrWNpZSBkJ2VudHJhZGEgbmVjZXNzYXJpLiBQb3Qgc2VyIHVuIGVudGVyIG8gdW4gcsOgc3RlciBkZSBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBWaWV3c2hlZF9SYXN0ZXJfdGFnMUBAXCI6IFwiTCdlbnRyYWRhIGVzIHRyYW5zZm9ybWEgZW4gdW4gc2lzdGVtYSBkZSBjb29yZGVuYWRlcyBnZW9jw6hudHJpcXVlcyAzRCBkdXJhbnQgZWwgY8OgbGN1bCBkZSBsYSB2aXNpYmlsaXRhdC4gTGVzIGNlbMK3bGVzIE5vRGF0YSBkZWwgcsOgc3RlciBkJ2VudHJhZGEgbm8gYmxvcXVlZ2VuIGxhIGRldGVybWluYWNpw7MgZGUgbGEgdmlzaWJpbGl0YXQuXCIsXG5cdFwiQEBWaWV3c2hlZF9SZWZyYWN0aXZlLUNvZWZmaWNpZW50X3RhZzBAQFwiOiBcIkNvZWZpY2llbnQgZGUgcmVmcmFjY2nDsyBkZSBsbHVtIHZpc2libGUgYSBsJ2FpcmUuXCIsXG5cdFwiQEBWaWV3c2hlZF9SZWZyYWN0aXZlLUNvZWZmaWNpZW50X3RhZzFAQFwiOiBcIkVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLDEzLlwiLFxuXHRcIkBAVmlld3NoZWRfU3VyZmFjZS1PZmZzZXRfdGFnMEBAXCI6IFwiQXF1ZXN0IHZhbG9yIGluZGljYSB1bmEgZGlzdMOgbmNpYSB2ZXJ0aWNhbCAoZW4gdW5pdGF0cyBkZSBzdXBlcmbDrWNpZSkgcXVlIHMnYWZlZ2lyw6AgYWwgdmFsb3IgWiBkZSBjYWRhIHDDrXhlbCBkZSBkZXN0aW5hY2nDsyBxdWFuIGVzIGNvbnNpZGVyaSBwZXIgYSBsYSB2aXNpYmlsaXRhdC4gSGEgZGUgc2VyIHVuIGVudGVyIHBvc2l0aXUgbyB1biB2YWxvciBkZSBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBWaWV3c2hlZF9TdXJmYWNlLU9mZnNldF90YWcxQEBcIjogXCJQb3Qgc2VyIHVuIGNhbXAgZGVsIGRhdGFzZXQgPHN0cm9uZz5FbnRpdGF0cyBkJ29ic2VydmFkb3I8L3N0cm9uZz4gZCdlbnRyYWRhIG8gdW4gdmFsb3IgbnVtw6hyaWMuIFNpIGFxdWVzdCBwYXLDoG1ldHJlIGVzdMOgIGRlZmluaXQgZW4gdW4gdmFsb3IsIGVsIHZhbG9yIHMnYXBsaWNhcsOgIGEgdG90cyBlbHMgb2JzZXJ2YWRvcnMuIFBlciBlc3BlY2lmaWNhciB2YWxvcnMgZGlmZXJlbnRzIHBlciBhIGNhZGEgb2JzZXJ2YWRvciwgZGVmaW5pdSBhcXVlc3QgcGFyw6BtZXRyZSBlbiB1biBjYW1wIGRlbCBkYXRhc2V0IDxzdHJvbmc+RW50aXRhdHMgZCdvYnNlcnZhZG9yPC9zdHJvbmc+LlwiLFxuXHRcIkBAVmlld3NoZWRfVmVydGljYWwtRXJyb3JfdGFnMEBAXCI6IFwiUXVhbnRpdGF0IGQnaW5jZXJ0ZXNhLCBtZXN1cmFkYSBjb20gZXJyb3IgZGUgbWl0amFuYSBxdWFkcsOgdGljYSAoUk1TRSksIGFscyB2YWxvcnMgZCdlbGV2YWNpw7MgZGUgc3VwZXJmw61jaWUuIMOJcyB1biB2YWxvciBkZSBwdW50IGZsb3RhbnQgcXVlIHJlcHJlc2VudGEgbCdlcnJvciBwcmV2aXN0IGRlbHMgdmFsb3JzIGQnZWxldmFjacOzIGQnZW50cmFkYS4gU2kgcydhc3NpZ25hIHVuIHZhbG9yIG3DqXMgZ3JhbiBxdWUgMCBhIGFxdWVzdCBwYXLDoG1ldHJlLCBlbCByw6BzdGVyIGRlIHZpc2liaWxpdGF0IGRlIHNvcnRpZGEgc2Vyw6AgZGUgcHVudCBmbG90YW50LiBFbiBhcXVlc3QgY2FzLCBjYWRhIHZhbG9yIGRlIHDDrXhlbCBkZWwgcsOgc3RlciBkZSB2aXNpYmlsaXRhdCBkZSBzb3J0aWRhIHJlcHJlc2VudGEgbGEgc3VtYSBkZSBwcm9iYWJpbGl0YXRzIHF1ZSBsYSBjZWzCt2xhIHNpZ3VpIHZpc2libGUgcGVyIGEgcXVhbHNldm9sIGRlbHMgb2JzZXJ2YWRvcnMuXCIsXG5cdFwiQEBWaWV3c2hlZF9WZXJ0aWNhbC1FcnJvcl90YWcxQEBcIjogXCJRdWFuIGVsIDxzdHJvbmc+dGlwdXMgZCdhbsOgbGlzaTwvc3Ryb25nPiDDqXMgPHN0cm9uZz5PYnNlcnZhZG9yczwvc3Ryb25nPiBvIGVsIDxzdHJvbmc+bcOodG9kZSBkJ2Fuw6BsaXNpPC9zdHJvbmc+IMOpcyA8c3Ryb25nPkzDrW5pZXMgZGUgdmlzacOzIGRlIHBlcsOtbWV0cmU8L3N0cm9uZz4sIGFxdWVzdCBwYXLDoG1ldHJlIGVzdMOgIGRlc2FjdGl2YXQuXCIsXG5cdFwiQEBWaWV3c2hlZF9WZXJ0aWNhbC1Mb3dlci1BbmdsZV90YWcwQEBcIjogXCJBcXVlc3QgdmFsb3IgZGVmaW5laXggZWwgbMOtbWl0IGRlIGwnYW5nbGUgdmVydGljYWwgaW5mZXJpb3IgZGUgbCdhbsOgbGlzaSBwZXIgc290YSBkJ3VuIHBsYSBob3JpdHpvbnRhbC4gRWwgdmFsb3IgcydoYSBkJ2VzcGVjaWZpY2FyIGVuIGdyYXVzIGRlIC05MCwwIGEgMCwgcXVlIHBvdCBzZXIgZGUgdGlwdXMgZW50ZXIgbyBwdW50IGZsb3RhbnQuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAtOTAsMC5cIixcblx0XCJAQFZpZXdzaGVkX1ZlcnRpY2FsLUxvd2VyLUFuZ2xlX3RhZzFAQFwiOiBcIlBvdCBzZXIgdW4gY2FtcCBkZWwgZGF0YXNldCA8c3Ryb25nPkVudGl0YXRzIGQnb2JzZXJ2YWRvcjwvc3Ryb25nPiBkJ2VudHJhZGEgbyB1biB2YWxvciBudW3DqHJpYy4gU2kgYXF1ZXN0IHBhcsOgbWV0cmUgZXN0w6AgZGVmaW5pdCBlbiB1biB2YWxvciwgZWwgdmFsb3IgcydhcGxpY2Fyw6AgYSB0b3RzIGVscyBvYnNlcnZhZG9ycy4gUGVyIGVzcGVjaWZpY2FyIHZhbG9ycyBkaWZlcmVudHMgcGVyIGEgY2FkYSBvYnNlcnZhZG9yLCBkZWZpbml1IGFxdWVzdCBwYXLDoG1ldHJlIGVuIHVuIGNhbXAgZGVsIGRhdGFzZXQgPHN0cm9uZz5FbnRpdGF0cyBkJ29ic2VydmFkb3I8L3N0cm9uZz4uXCIsXG5cdFwiQEBWaWV3c2hlZF9WZXJ0aWNhbC1VcHBlci1BbmdsZV90YWcwQEBcIjogXCJBcXVlc3QgdmFsb3IgZGVmaW5laXggZWwgbMOtbWl0IGRlIGwnYW5nbGUgdmVydGljYWwgc3VwZXJpb3IgZGUgbCdhbsOgbGlzaSBwZXIgc29icmUgZCd1biBwbGEgaG9yaXR6b250YWwuIEVsIHZhbG9yIHMnaGEgZCdlc3BlY2lmaWNhciBlbiBncmF1cyBkZSAwIGEgOTAuMCwgcXVlIHBvdCBzZXIgZGUgdGlwdXMgZW50ZXIgbyBwdW50IGZsb3RhbnQuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyA5MCwwLlwiLFxuXHRcIkBAVmlld3NoZWRfVmVydGljYWwtVXBwZXItQW5nbGVfdGFnMUBAXCI6IFwiUG90IHNlciB1biBjYW1wIGRlbCBkYXRhc2V0IDxzdHJvbmc+RW50aXRhdHMgZCdvYnNlcnZhZG9yPC9zdHJvbmc+IGQnZW50cmFkYSBvIHVuIHZhbG9yIG51bcOocmljLiBTaSBhcXVlc3QgcGFyw6BtZXRyZSBlc3TDoCBkZWZpbml0IGVuIHVuIHZhbG9yLCBlbCB2YWxvciBzJ2FwbGljYXLDoCBhIHRvdHMgZWxzIG9ic2VydmFkb3JzLiBQZXIgZXNwZWNpZmljYXIgdmFsb3JzIGRpZmVyZW50cyBwZXIgYSBjYWRhIG9ic2VydmFkb3IsIGRlZmluaXUgYXF1ZXN0IHBhcsOgbWV0cmUgZW4gdW4gY2FtcCBkZWwgZGF0YXNldCA8c3Ryb25nPkVudGl0YXRzIGQnb2JzZXJ2YWRvcjwvc3Ryb25nPi5cIixcblx0XCJAQFdhdGVyc2hlZF9GbG93LURpcmVjdGlvbi1SYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkJ2VudHJhZGEgcXVlIG1vc3RyYSBsYSBkaXJlY2Npw7MgZGUgc29ydGlkYSBkZWwgZmx1eCBkZSBjYWRhIGNlbMK3bGEuXCIsXG5cdFwiQEBXYXRlcnNoZWRfRmxvdy1EaXJlY3Rpb24tUmFzdGVyX3RhZzFAQFwiOiBcIkVsIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGRlbCBmbHV4IGVzIHBvdCBjcmVhciBleGVjdXRhbnQgbGEgZnVuY2nDsyA8c3Ryb25nPkRpcmVjY2nDsyBkZWwgZmx1eDwvc3Ryb25nPi5cIixcblx0XCJAQFdhdGVyc2hlZF9Qb3VyLVBvaW50KHMpLVJhc3Rlcl90YWcwQEBcIjogXCJVYmljYWNpb25zIGRlbHMgcHVudHMgZGUgZmx1w69kZXNhIGQnZW50cmFkYS5cIixcblx0XCJAQFdhdGVyc2hlZF9Qb3VyLVBvaW50KHMpLVJhc3Rlcl90YWcxQEBcIjogXCJBcXVlc3QgcsOgc3RlciByZXByZXNlbnRhIGxlcyBjZWzCt2xlcyBzb2JyZSBsZXMgcXVhbHMgZXMgZGV0ZXJtaW5hcsOgIGwnw6ByZWEgZGUgY29udHJpYnVjacOzIChvIGNhcHRhY2nDsykuIFRvdGVzIGxlcyBjZWzCt2xlcyBxdWUgc2lndWluIE5vRGF0YSBzJ3V0aWxpdHphcmFuIGNvbSBhIGNlbMK3bGVzIGQnb3JpZ2VuLlwiLFxuXHRcIkBAV2F0ZXJzaGVkX1BvdXItUG9pbnQtRmllbGRfdGFnMEBAXCI6IFwiQ2FtcCB1dGlsaXR6YXQgcGVyIGFzc2lnbmFyIHZhbG9ycyBhIGxlcyB1YmljYWNpb25zIGRlIHB1bnRzIGRlIGZsdcOvZGVzYS5cIixcblx0XCJAQFdhdGVyc2hlZF9Qb3VyLVBvaW50LUZpZWxkX3RhZzFAQFwiOiBcIlBlciBhIHVuIGRhdGFzZXQgZGUgcHVudCBkZSBmbHXDr2Rlc2EgZGUgcsOgc3Rlciwgcyd1dGlsaXR6YSAke1ZhbHVlfSBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFdlaWdodGVkLU92ZXJsYXlfQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAV2VpZ2h0ZWQtT3ZlcmxheV9DZWxsc2l6ZS1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAV2VpZ2h0ZWQtT3ZlcmxheV9DZWxsc2l6ZS1UeXBlX3RhZzJAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBXZWlnaHRlZC1PdmVybGF5X0NlbGxzaXplLVR5cGVfdGFnM0BAXCI6IFwiTcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAV2VpZ2h0ZWQtT3ZlcmxheV9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAV2VpZ2h0ZWQtT3ZlcmxheV9DZWxsc2l6ZS1UeXBlX3RhZzVAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAV2VpZ2h0ZWQtT3ZlcmxheV9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBXZWlnaHRlZC1PdmVybGF5X0V4dGVudC1UeXBlX3RhZzFAQFwiOiBcIlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAV2VpZ2h0ZWQtT3ZlcmxheV9FeHRlbnQtVHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFdlaWdodGVkLU92ZXJsYXlfRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiVW5pw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSB0b3RzIGVscyByw6BzdGVycyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBXZWlnaHRlZC1PdmVybGF5X0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC5cIixcblx0XCJAQFdlaWdodGVkLU92ZXJsYXlfU2NhbGVzX3RhZzBAQFwiOiBcIkludGVydmFsIGRlbHMgdmFsb3JzIG5vdXMgcXVlIHMndXRpbGl0emFyw6AgcGVyIGEgbGEgbm92YSByZXByZXNlbnRhY2nDsyBjYXJ0b2dyw6BmaWNhIGRlbHMgdmFsb3JzIGFudGljcy5cIixcblx0XCJAQFdlaWdodGVkLU92ZXJsYXlfV2VpZ2h0ZWQtT3ZlcmxheS1UYWJsZV90YWcwQEBcIjogXCJMYSB0YXVsYSBkZSBzdXBlcnBvc2ljacOzIHBvbmRlcmFkYSBjb25zdGEgZGUgcXVhdHJlIHBhcnRzOlwiLFxuXHRcIkBAV2VpZ2h0ZWQtT3ZlcmxheV9XZWlnaHRlZC1PdmVybGF5LVRhYmxlX3RhZzFAQFwiOiBcIkNhcGE6IHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYSBoYW4gZGUgc2VyIGRlIHRpcHVzIGVudGVyLlwiLFxuXHRcIkBAV2VpZ2h0ZWQtT3ZlcmxheV9XZWlnaHRlZC1PdmVybGF5LVRhYmxlX3RhZzJAQFwiOiBcIkluZmx1w6huY2lhOiBjYWRhIHLDoHN0ZXIgZCdlbnRyYWRhIGVzIHBvbmRlcmEgc2Vnb25zIGxhIHNldmEgaW1wb3J0w6BuY2lhLCBvIGxhIHNldmEgaW5mbHXDqG5jaWEsIGNvbSB1biBwZXJjZW50YXRnZSByZWxhdGl1LiBMYSBzdW1hIGRlbHMgcGVyY2VudGF0Z2VzIGRlIGxlcyBwb25kZXJhY2lvbnMgZCdpbmZsdcOobmNpYSBoYSBkZSBzZXIgaWd1YWwgYSAxMDAsIGkgY2FkYXNjdW5hIGRlIGxlcyBwb25kZXJhY2lvbnMgcydoYSBkJ2VzcGVjaWZpY2FyIGFtYiB1biB2YWxvciBlbnRlci5cIixcblx0XCJAQFdlaWdodGVkLU92ZXJsYXlfV2VpZ2h0ZWQtT3ZlcmxheS1UYWJsZV90YWczQEBcIjogXCJDYW1wOiBjYW1wIGQnZW50ZXIgbyBjYWRlbmEgYWwgcsOgc3RlciBkJ2VudHJhZGEgcXVlIHMndXRpbGl0emFyw6AgcGVyIGEgbGEgcG9uZGVyYWNpw7MuXCIsXG5cdFwiQEBXZWlnaHRlZC1PdmVybGF5X1dlaWdodGVkLU92ZXJsYXktVGFibGVfdGFnNEBAXCI6IFwiVGF1bGEgZGUgbm92YSByZXByZXNlbnRhY2nDsyBnZW9ncsOgZmljYTogY2FkYSB2YWxvciBkJ3VuIHLDoHN0ZXIgZCdlbnRyYWRhIHTDqSBhc3NpZ25hdCB1biBub3UgdmFsb3IgZCdlc2NhbGEgc2Vnb25zIGxhIHRhdWxhIGRlIG5vdmEgcmVwcmVzZW50YWNpw7MgY2FydG9ncsOgZmljYS4gRWwgdmFsb3IgZCdlc2NhbGEgcG90IHNlciB1biB2YWxvciB2w6BsaWQgbyB1biB2YWxvciBOb0RhdGEuXCIsXG5cdFwiQEBXZWlnaHRlZC1TdW1fQ2VsbHNpemUtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSB0b3RlcyBsZXMgbWlkZXMgZGUgY2VswrdsYSBpbnRyb2R1w69kZXMgc8OzbiBpZ3VhbHMsIHRvdGVzIGxlcyBvcGNpb25zIGdlbmVyYXJhbiBlbHMgbWF0ZWl4b3MgcmVzdWx0YXRzLlwiLFxuXHRcIkBAV2VpZ2h0ZWQtU3VtX0NlbGxzaXplLVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBXZWlnaHRlZC1TdW1fQ2VsbHNpemUtVHlwZV90YWcyQEBcIjogXCLDmmx0aW0gZGU6IHV0aWxpdHpldSBsYSBkYXJyZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFdlaWdodGVkLVN1bV9DZWxsc2l6ZS1UeXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFdlaWdodGVkLVN1bV9DZWxsc2l6ZS1UeXBlX3RhZzRAQFwiOiBcIk1pdGphIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAV2VpZ2h0ZWQtU3VtX0NlbGxzaXplLVR5cGVfdGFnNUBAXCI6IFwiTcOtbmltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgcGV0aXRhIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQFdlaWdodGVkLVN1bV9FeHRlbnQtVHlwZV90YWcwQEBcIjogXCJUcmlldSBsJ2V4dGVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGE6XCIsXG5cdFwiQEBXZWlnaHRlZC1TdW1fRXh0ZW50LVR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBXZWlnaHRlZC1TdW1fRXh0ZW50LVR5cGVfdGFnMkBAXCI6IFwiSW50ZXJzZWNjacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVscyBww614ZWxzIHN1cGVycG9zYXRzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBXZWlnaHRlZC1TdW1fRXh0ZW50LVR5cGVfdGFnM0BAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAV2VpZ2h0ZWQtU3VtX0V4dGVudC1UeXBlX3RhZzRAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAV2VpZ2h0ZWQtU3VtX1dlaWdodGVkLVN1bS1UYWJsZV90YWcwQEBcIjogXCJMYSB0YXVsYSBkZSBzdW1hIHBvbmRlcmFkYSBlcyBkZWZpbmVpeCBtaXRqYW7Dp2FudCB0cmVzIHByb3BpZXRhdHM6XCIsXG5cdFwiQEBXZWlnaHRlZC1TdW1fV2VpZ2h0ZWQtU3VtLVRhYmxlX3RhZzFAQFwiOiBcIkNhcGE6IHLDoHN0ZXIgcXVlIHMnZXN0w6AgcG9uZGVyYW50LlwiLFxuXHRcIkBAV2VpZ2h0ZWQtU3VtX1dlaWdodGVkLVN1bS1UYWJsZV90YWcyQEBcIjogXCJDYW1wOiBjYW1wIGRlbCByw6BzdGVyIHF1ZSBzJ3V0aWxpdHphcsOgIHBlciBhIGxhIHBvbmRlcmFjacOzLlwiLFxuXHRcIkBAV2VpZ2h0ZWQtU3VtX1dlaWdodGVkLVN1bS1UYWJsZV90YWczQEBcIjogXCJQZXM6IHZhbG9yIGRlIHBlcyBwZWwgcXVhbCBlcyBtdWx0aXBsaWNhcsOgIGVsIHLDoHN0ZXIuIFBvdCBzZXIgcXVhbHNldm9sIHZhbG9yIGRlY2ltYWwgcG9zaXRpdSBvIG5lZ2F0aXUuXCIsXG5cdFwiQEBXaW5kLUNoaWxsX1RlbXBlcmF0dXJlLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQndW5hIGJhbmRhIG9uIGVscyB2YWxvcnMgZGUgcMOteGVsIHJlcHJlc2VudGVuIGxhIHRlbXBlcmF0dXJhIGFtYmllbnQgZGUgbCdhaXJlLlwiLFxuXHRcIkBAV2luZC1DaGlsbF9UZW1wZXJhdHVyZS1Vbml0c190YWcwQEBcIjogXCJVbml0YXQgZGUgbWVzdXJhIGFzc29jaWFkYSBhbCByw6BzdGVyIGRlIHRlbXBlcmF0dXJhIGQnZW50cmFkYS4gTGVzIHVuaXRhdHMgZCdlbnRyYWRhIGRpc3BvbmlibGVzIHPDs24gQ2Vsc2l1cywgRmFocmVuaGVpdCBpIEtlbHZpbi5cIixcblx0XCJAQFdpbmQtQ2hpbGxfV2luZC1DaGlsbC1Vbml0c190YWcwQEBcIjogXCJVbml0YXQgZGUgbWVzdXJhIGFzc29jaWFkYSBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIExlcyB1bml0YXRzIGRlIHNvcnRpZGEgZGlzcG9uaWJsZXMgc8OzbiBDZWxzaXVzLCBGYWhyZW5oZWl0IGkgS2VsdmluLlwiLFxuXHRcIkBAV2luZC1DaGlsbF9XaW5kLVNwZWVkLVJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQndW5hIGJhbmRhIG9uIGVscyB2YWxvcnMgZGUgcMOteGVsIHJlcHJlc2VudGVuIGxhIHZlbG9jaXRhdCBkZWwgdmVudC5cIixcblx0XCJAQFdpbmQtQ2hpbGxfV2luZC1TcGVlZC1Vbml0c190YWcwQEBcIjogXCJEZWZpbmVpeCBsYSB1bml0YXQgZGUgbWVzdXJhIGRlbCByw6BzdGVyIGRlIHZlbG9jaXRhdCBkZWwgdmVudDpcIixcblx0XCJAQFdpbmQtQ2hpbGxfV2luZC1TcGVlZC1Vbml0c190YWcxQEBcIjogXCJNaWxsZXMgcGVyIGhvcmEgKG1waClcIixcblx0XCJAQFdpbmQtQ2hpbGxfV2luZC1TcGVlZC1Vbml0c190YWcyQEBcIjogXCJRdWlsw7JtZXRyZXMgcGVyIGhvcmEgKGttL2gpXCIsXG5cdFwiQEBXaW5kLUNoaWxsX1dpbmQtU3BlZWQtVW5pdHNfdGFnM0BAXCI6IFwiTWV0cmVzIHBlciBzZWdvbiAobS9zKVwiLFxuXHRcIkBAV2luZC1DaGlsbF9XaW5kLVNwZWVkLVVuaXRzX3RhZzRAQFwiOiBcIlBldXMgcGVyIHNlZ29uIChmdC9zKVwiLFxuXHRcIkBAV2luZC1DaGlsbF9XaW5kLVNwZWVkLVVuaXRzX3RhZzVAQFwiOiBcIk51c29zIChrbilcIixcblx0XCJAQFpvbmFsLVJlbWFwX0JhY2tncm91bmQtVmFsdWVfdGFnMEBAXCI6IFwiVmFsb3IgZGVsIHDDrXhlbCBpbmljaWFsIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEsIGFiYW5zIHF1ZSBlcyB0b3JuaW4gYSByZXByZXNlbnRhciBjYXJ0b2dyw6BmaWNhbWVudCBlbHMgcMOteGVscyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBab25hbC1SZW1hcF9EZWZhdWx0LU91dHB1dC1WYWx1ZV90YWcwQEBcIjogXCJWYWxvciBxdWUgcydhc3NpZ25hcsOgIGEgdW4gcMOteGVsIHF1ZSBubyBjb21wbGVpeGkgY2FwIGRlIGxlcyBjb25kaWNpb25zIGVzdGFibGVydGVzIGEgbGEgPHN0cm9uZz50YXVsYSBkJ2F0cmlidXRzIHpvbmFsPC9zdHJvbmc+LlwiLFxuXHRcIkBAWm9uYWwtUmVtYXBfRGVmYXVsdC1PdXRwdXQtVmFsdWVfdGFnM0BAXCI6IFwiVGFtYsOpIHNlcsOgIGVsIHZhbG9yIGRlbCBww614ZWwgZGUgc29ydGlkYSBzaSBubyBzJ2VzcGVjaWZpY2EgZWwgcGFyw6BtZXRyZSA8c3Ryb25nPk5vbSBkZSBjYW1wIGRlIHZhbG9yIGRlIHNvcnRpZGE8L3N0cm9uZz4gbyBzaSBlbCB2YWxvciBkZSBzb3J0aWRhIGRlbCBsbGluZGFyIHpvbmFsIGNvcnJlc3BvbmVudCBlcyBkZWl4YSBzZW5zZSBkZWZpbmlyIGEgbGEgPHN0cm9uZz50YXVsYSBkJ2F0cmlidXRzIHpvbmFsPC9zdHJvbmc+LlwiLFxuXHRcIkBAWm9uYWwtUmVtYXBfTWF4aW11bS1WYWx1ZS1GaWVsZC1OYW1lX3RhZzBAQFwiOiBcIk5vbSBkZWwgY2FtcCBxdWUgY29udMOpIGVsIHZhbG9yIG3DoHhpbSBwZXIgc290YSBkZWwgcXVhbCBlcyBmYXLDoCBsYSBub3ZhIHJlcHJlc2VudGFjacOzIGNhcnRvZ3LDoGZpY2EgZCd1biBww614ZWwgZCdlbnRyYWRhLlwiLFxuXHRcIkBAWm9uYWwtUmVtYXBfTWF4aW11bS1WYWx1ZS1GaWVsZC1OYW1lX3RhZzFAQFwiOiBcIlNpIGVzIGRlaXhhIHNlbnNlIGVzcGVjaWZpY2FyIG8gc2kgZWwgdmFsb3IgZGVsIGNhbXAgw6lzIG51bCwgZWxzIHZhbG9ycyBkZSBww614ZWwgbm8gZXMgcHJvdmFyYW4gcGVyIGRldGVybWluYXIgZWwgbcOgeGltLlwiLFxuXHRcIkBAWm9uYWwtUmVtYXBfTWluaW11bS1WYWx1ZS1GaWVsZC1OYW1lX3RhZzBAQFwiOiBcIk5vbSBkZWwgY2FtcCBxdWUgY29udMOpIGVsIHZhbG9yIG3DrW5pbSBwZXIgc29icmUgZGVsIHF1YWwgZXMgZmFyw6AgbGEgbm92YSByZXByZXNlbnRhY2nDsyBjYXJ0b2dyw6BmaWNhIGQndW4gcMOteGVsIGQnZW50cmFkYS5cIixcblx0XCJAQFpvbmFsLVJlbWFwX01pbmltdW0tVmFsdWUtRmllbGQtTmFtZV90YWcxQEBcIjogXCJTaSBlcyBkZWl4YSBzZW5zZSBlc3BlY2lmaWNhciBvIHNpIGVsIHZhbG9yIGRlbCBjYW1wIMOpcyBudWwsIGVscyB2YWxvcnMgZGUgcMOteGVsIG5vIGVzIHByb3ZhcmFuIHBlciBkZXRlcm1pbmFyIGVsIG3DrW5pbS5cIixcblx0XCJAQFpvbmFsLVJlbWFwX091dHB1dC1WYWx1ZS1GaWVsZC1OYW1lX3RhZzBAQFwiOiBcIk5vbSBkZWwgY2FtcCBxdWUgY29udMOpIGVsIHZhbG9yIGRlIGRlc3RpbmFjacOzIGFtYiBlbCBxdWFsIGVzIGZhcsOgIGxhIG5vdmEgcmVwcmVzZW50YWNpw7MgY2FydG9ncsOgZmljYSBkJ3VuIHDDrXhlbCBkJ2VudHJhZGEuXCIsXG5cdFwiQEBab25hbC1SZW1hcF9PdXRwdXQtVmFsdWUtRmllbGQtTmFtZV90YWcxQEBcIjogXCJTaSBlcyBkZWl4YSBzZW5zZSBlc3BlY2lmaWNhciBvIHNpIGVsIHZhbG9yIGRlbCBjYW1wIMOpcyBudWwsIGVscyB2YWxvcnMgZGUgcMOteGVsIGRlbHMgcXVhbHMgcydoYSBmZXQgbGEgbm92YSByZXByZXNlbnRhY2nDsyBjYXJ0b2dyw6BmaWNhIGVzIGRlZmluZWl4ZW4gZW4gPHN0cm9uZz5WYWxvciBkZSBzb3J0aWRhIHBlciBkZWZlY3RlPC9zdHJvbmc+LlwiLFxuXHRcIkBAWm9uYWwtUmVtYXBfVmFsdWUtUmFzdGVyX3RhZzBAQFwiOiBcIkVudHJhZGEgZGUgcsOgc3RlciBkJ3VuYSBiYW5kYSBuZWNlc3PDoHJpYSBxdWUgY29udMOpIGVscyB2YWxvcnMgZGVsIHDDrXhlbCBxdWUgZXMgcmVwcmVzZW50YXJhbiBjYXJ0b2dyw6BmaWNhbWVudC5cIixcblx0XCJAQFpvbmFsLVJlbWFwX1doZXJlLUNsYXVzZV90YWcwQEBcIjogXCJVbmEgY29uc3VsdGEgb3BjaW9uYWwgYXBsaWNhZGEgYSBsYSA8c3Ryb25nPnRhdWxhIGQnYXRyaWJ1dHMgem9uYWw8L3N0cm9uZz4uXCIsXG5cdFwiQEBab25hbC1SZW1hcF9XaGVyZS1DbGF1c2VfdGFnM0BAXCI6IFwiU2kgbGEgdGF1bGEgYW50ZXJpb3Igcyd1dGlsaXR6YXZhIGNvbSB1biBleGVtcGxlLCBsYSBjb25zdWx0YSBzZXJpYSAke1ZhcmlhYmxlMSA9ICdiYXJlIGVhcnRoJyBBTkQgVmFyaWFibGUyID0gJ0NhbGlmb3JuaWEnfS5cIixcblx0XCJAQFpvbmFsLVJlbWFwX1pvbmFsLUF0dHJpYnV0ZXMtVGFibGVfdGFnMEBAXCI6IFwiVGF1bGEgZCdlbnRyYWRhIG5lY2Vzc8OgcmlhIHF1ZSBjb250w6kgY29tIGEgbcOtbmltIHRyZXMgY2FtcHMuIEhhIGRlIHRlbmlyIHVuIHZhbG9yIGRlIGxsaW5kYXIgbcOtbmltLCB1biB2YWxvciBkZSBsbGluZGFyIG3DoHhpbSBpIHVuIHZhbG9yIGRlIGRlc3RpbmFjacOzLiBFbCB2YWxvciBkZSBkZXN0aW5hY2nDsyDDqXMgZWwgY2FtcCBxdWUgY29udGluZHLDoCBlbCB2YWxvciBkZSBub3ZhIHJlcHJlc2VudGFjacOzIGNhcnRvZ3LDoGZpY2EuXCIsXG5cdFwiQEBab25hbC1SZW1hcF9ab25hbC1BdHRyaWJ1dGVzLVRhYmxlX3RhZzFAQFwiOiBcIkVsIGZvcm1hdCBkZWwgZml0eGVyIHBvdCBzZXIgdW5hIGNsYXNzZSBkJ2VudGl0YXQsIHVuIHNlcnZlaSBkJ2VudGl0YXRzIG8gcXVhbHNldm9sIHRpcHVzIGRlIHRhdWxhIHF1ZSBzJ2FkbWV0aSBhIGwnQXJjR0lTLlwiLFxuXHRcIkBAWm9uYWwtUmVtYXBfWm9uZS1GaWVsZF90YWcwQEBcIjogXCJOb20gZGVsIGNhbXAgZGUgbGEgPHN0cm9uZz50YXVsYSBkJ2F0cmlidXRzIHpvbmFsPC9zdHJvbmc+IHF1ZSBjb250w6kgZWxzIHZhbG9ycyBkJ0lEIGRlIHpvbmEuXCIsXG5cdFwiQEBab25hbC1SZW1hcF9ab25lLUZpZWxkX3RhZzNAQFwiOiBcIkVscyB2YWxvcnMgZCdJRCBkZSB6b25hIGVzdGFuIGRpcmVjdGFtZW50IHZpbmN1bGF0cyBhbHMgSUQgZGUgem9uYSBkZWwgcsOgc3RlciB6b25hbC4gUHJvcG9yY2lvbmVuIHVuIGFsdHJlIG5pdmVsbCBkZSBmaWx0cmF0Z2UgZHVyYW50IGxhIG5vdmEgcmVwcmVzZW50YWNpw7MgY2FydG9ncsOgZmljYS4gU2kgbm8gaGkgaGEgY2FwIElEIGRlIHpvbmEgYXNzb2NpYXQgYSB1biByZWdpc3RyZSBjb25jcmV0IGRlIGxhIHRhdWxhLCBubyBzJ2luY2xvdXLDoCBhIGxhIG5vdmEgcmVwcmVzZW50YWNpw7MgY2FydG9ncsOgZmljYS5cIixcblx0XCJAQFpvbmFsLVJlbWFwX1pvbmUtUmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCd1bmEgYmFuZGEgb24gY2FkYSBww614ZWwgZGVmaW5laXggbGVzIHpvbmVzIGFzc29jaWFkZXMgYSB1bmEgdWJpY2FjacOzIGNvbmNyZXRhLiBVbmEgem9uYSBlcyBkZWZpbmVpeCBjb20gdG90ZXMgbGVzIMOgcmVlcyBkZSBsJ2VudHJhZGEgcXVlIHRlbmVuIGVsIG1hdGVpeCB2YWxvci4gTm8gw6lzIG5lY2Vzc2FyaSBxdWUgbGVzIMOgcmVlcyBzaWd1aW4gY29udGlnw7xlcy5cIixcblx0XCJAQFByZWRpY3QtVXNpbmctVHJlbmRfZGltZW5zaW9uZGVmaW5pdGlvbl90YWcwQEBcIjogXCJFc3BlY2lmaWNhIGVsIG3DqHRvZGUgdXRpbGl0emF0IHBlciBwcm9wb3JjaW9uYXIgdmFsb3JzIGRlIGRpbWVuc2nDsyBkZSBwcmVkaWNjacOzLlwiLFxuXHRcIkBAUHJlZGljdC1Vc2luZy1UcmVuZF9kaW1lbnNpb25kZWZpbml0aW9uX3RhZzFAQFwiOiBcIjxzdHJvbmc+UGVyIHZhbG9yPC9zdHJvbmc+OiBsYSBwcmVkaWNjacOzIGVzIGNhbGN1bGFyw6AgcGVyIGEgdW4gc29sIHZhbG9yIGRlIGRpbWVuc2nDsy4gUGVyIGV4ZW1wbGUsIHNpIHZvbGV1IHByZWRpciBsZXMgcHJlY2lwaXRhY2lvbnMgYW51YWxzIGRlbHMgYW55cyAyMDUwLCAyMTAwIGkgMjE1MC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBQcmVkaWN0LVVzaW5nLVRyZW5kX2RpbWVuc2lvbmRlZmluaXRpb25fdGFnMkBAXCI6IFwiPHN0cm9uZz5QZXIgaW50ZXJ2YWw8L3N0cm9uZz46IGxhIHByZWRpY2Npw7MgZXMgY2FsY3VsYXLDoCBwZXIgYSB1biBpbnRlcnZhbCBkZSBsYSBkaW1lbnNpw7MgZGVmaW5pZGEgcGVyIHVuIHZhbG9yIGQnaW5pY2kgaSBkZSBmaW5hbGl0emFjacOzLiBQZXIgZXhlbXBsZSwgc2kgdm9sZXUgcHJlZGlyIGxlcyBwcmVjaXBpdGFjaW9ucyBhbnVhbHMgZGUgdG90cyBlbHMgYW55cyBlbnRyZSBlbCAyMDUwIGkgZWwgMjE1MC5cIixcblx0XCJAQFByZWRpY3QtVXNpbmctVHJlbmRfZW5kX3RhZzBAQFwiOiBcIkxhIGRhdGEgZGUgZmluYWxpdHphY2nDsywgbCdhbHR1cmEgbyBsYSBwcm9mdW5kaXRhdCBkZSBsJ2ludGVydmFsIGRlIGRpbWVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhIGxhIHByZWRpY2Npw7MuXCIsXG5cdFwiQEBQcmVkaWN0LVVzaW5nLVRyZW5kX2VuZF90YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGVsIHBhcsOgbWV0cmUgPHN0cm9uZz5EZWZpbmljacOzIGRlIGxhIGRpbWVuc2nDszwvc3Ryb25nPiBlcyBkZWZpbmVpeCBlbiA8c3Ryb25nPlBlciBpbnRlcnZhbDwvc3Ryb25nPi5cIixcblx0XCJAQFByZWRpY3QtVXNpbmctVHJlbmRfcmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZGUgdGVuZMOobmNpYSBtdWx0aWRpbWVuc2lvbmFsIGQnZW50cmFkYSBkZSBsYSBmdW5jacOzIDxzdHJvbmc+R2VuZXJhIHRlbmTDqG5jaWE8L3N0cm9uZz4uXCIsXG5cdFwiQEBQcmVkaWN0LVVzaW5nLVRyZW5kX3N0YXJ0X3RhZzBAQFwiOiBcIkxhIGRhdGEgZCdpbmljaSwgbCdhbHR1cmEgbyBsYSBwcm9mdW5kaXRhdCBkZSBsJ2ludGVydmFsIGRlIGRpbWVuc2nDsyBxdWUgcyd1dGlsaXR6YXLDoCBhIGxhIHByZWRpY2Npw7MuXCIsXG5cdFwiQEBQcmVkaWN0LVVzaW5nLVRyZW5kX3N0YXJ0X3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIMOpcyBvYmxpZ2F0b3JpIHF1YW4gZWwgcGFyw6BtZXRyZSA8c3Ryb25nPkRlZmluaWNpw7MgZGUgbGEgZGltZW5zacOzPC9zdHJvbmc+IGVzIGRlZmluZWl4IGVuIDxzdHJvbmc+UGVyIGludGVydmFsPC9zdHJvbmc+LlwiLFxuXHRcIkBAUHJlZGljdC1Vc2luZy1UcmVuZF91bml0X3RhZzBAQFwiOiBcIlVuaXRhdCBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgYSBsJ2ludGVydmFsIGRlIHZhbG9ycy4gQXF1ZXN0IHBhcsOgbWV0cmUgbm9tw6lzIHMnYXBsaWNhIHF1YW4gbGEgZGltZW5zacOzIGRlIGwnYW7DoGxpc2kgw6lzIHVuYSBkaW1lbnNpw7MgZGUgdGVtcHMuXCIsXG5cdFwiQEBQcmVkaWN0LVVzaW5nLVRyZW5kX3VuaXRfdGFnMUBAXCI6IFwiPHN0cm9uZz5Ib3Jlczwvc3Ryb25nPjogbGEgcHJlZGljY2nDsyBlcyBjYWxjdWxhcsOgIHBlciBhIGNhZGEgaG9yYSBkaW5zIGwnaW50ZXJ2YWwgZGUgdGVtcHMgZGVzY3JpdCBwZWxzIHBhcsOgbWV0cmVzIDxzdHJvbmc+SW5pY2k8L3N0cm9uZz4sIDxzdHJvbmc+RmluYWxpdHphY2nDszwvc3Ryb25nPiBpIDxzdHJvbmc+SW50ZXJ2YWwgZGUgdmFsb3JzPC9zdHJvbmc+LlwiLFxuXHRcIkBAUHJlZGljdC1Vc2luZy1UcmVuZF91bml0X3RhZzJAQFwiOiBcIjxzdHJvbmc+RGllczwvc3Ryb25nPjogbGEgcHJlZGljY2nDsyBlcyBjYWxjdWxhcsOgIHBlciBhIGNhZGEgZGlhIGRpbnMgbCdpbnRlcnZhbCBkZSB0ZW1wcyBkZXNjcml0IHBlbHMgcGFyw6BtZXRyZXMgPHN0cm9uZz5JbmljaTwvc3Ryb25nPiwgPHN0cm9uZz5GaW5hbGl0emFjacOzPC9zdHJvbmc+IGkgPHN0cm9uZz5JbnRlcnZhbCBkZSB2YWxvcnM8L3N0cm9uZz4uXCIsXG5cdFwiQEBQcmVkaWN0LVVzaW5nLVRyZW5kX3VuaXRfdGFnM0BAXCI6IFwiPHN0cm9uZz5TZXRtYW5lczwvc3Ryb25nPjogbGEgcHJlZGljY2nDsyBlcyBjYWxjdWxhcsOgIHBlciBhIGNhZGEgc2V0bWFuYSBkaW5zIGwnaW50ZXJ2YWwgZGUgdGVtcHMgZGVzY3JpdCBwZWxzIHBhcsOgbWV0cmVzIDxzdHJvbmc+SW5pY2k8L3N0cm9uZz4sIDxzdHJvbmc+RmluYWxpdHphY2nDszwvc3Ryb25nPiBpIDxzdHJvbmc+SW50ZXJ2YWwgZGUgdmFsb3JzPC9zdHJvbmc+LlwiLFxuXHRcIkBAUHJlZGljdC1Vc2luZy1UcmVuZF91bml0X3RhZzRAQFwiOiBcIjxzdHJvbmc+TWVzb3M8L3N0cm9uZz46IGxhIHByZWRpY2Npw7MgZXMgY2FsY3VsYXLDoCBwZXIgYSBjYWRhIG1lcyBkaW5zIGwnaW50ZXJ2YWwgZGUgdGVtcHMgZGVzY3JpdCBwZWxzIHBhcsOgbWV0cmVzIDxzdHJvbmc+SW5pY2k8L3N0cm9uZz4sIDxzdHJvbmc+RmluYWxpdHphY2nDszwvc3Ryb25nPiBpIDxzdHJvbmc+SW50ZXJ2YWwgZGUgdmFsb3JzPC9zdHJvbmc+LlwiLFxuXHRcIkBAUHJlZGljdC1Vc2luZy1UcmVuZF91bml0X3RhZzVAQFwiOiBcIjxzdHJvbmc+QW55czwvc3Ryb25nPjogbGEgcHJlZGljY2nDsyBlcyBjYWxjdWxhcsOgIHBlciBhIGNhZGEgYW55IGRpbnMgbCdpbnRlcnZhbCBkZSB0ZW1wcyBkZXNjcml0IHBlbHMgcGFyw6BtZXRyZXMgPHN0cm9uZz5JbmljaTwvc3Ryb25nPiwgPHN0cm9uZz5GaW5hbGl0emFjacOzPC9zdHJvbmc+IGkgPHN0cm9uZz5JbnRlcnZhbCBkZSB2YWxvcnM8L3N0cm9uZz4uXCIsXG5cdFwiQEBQcmVkaWN0LVVzaW5nLVRyZW5kX3ZhbHVlaW50ZXJ2YWxfdGFnMEBAXCI6IFwiRWwgbm9tYnJlIGRlIHBhc3NvcyBlbnRyZSBkb3MgdmFsb3JzIGRlIGRpbWVuc2nDsyBxdWUgcydpbmNsb3VyYW4gYSBsYSBwcmVkaWNjacOzLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMS5cIixcblx0XCJAQFByZWRpY3QtVXNpbmctVHJlbmRfdmFsdWVpbnRlcnZhbF90YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGVsIHBhcsOgbWV0cmUgPHN0cm9uZz5EZWZpbmljacOzIGRlIGxhIGRpbWVuc2nDszwvc3Ryb25nPiBlcyBkZWZpbmVpeCBlbiA8c3Ryb25nPlBlciBpbnRlcnZhbDwvc3Ryb25nPi5cIixcblx0XCJAQFByZWRpY3QtVXNpbmctVHJlbmRfdmFsdWVzX3RhZzBAQFwiOiBcIlZhbG9yIG8gdmFsb3JzIGRlIGxhIGRpbWVuc2nDsyBxdWUgcyd1dGlsaXR6YXJhbiBhIGxhIHByZWRpY2Npw7MuXCIsXG5cdFwiQEBQcmVkaWN0LVVzaW5nLVRyZW5kX3ZhbHVlc190YWcxQEBcIjogXCJFbCBmb3JtYXQgZGVscyB2YWxvcnMgZGUgdGVtcHMsIHByb2Z1bmRpdGF0IGkgYWx0dXJhIGhhbiBkZSBjb2luY2lkaXIgYW1iIGVsIGZvcm1hdCBkZWxzIHZhbG9ycyBkZSBkaW1lbnNpw7MgcXVlIHMndXRpbGl0emFyYW4gcGVyIGdlbmVyYXIgZWwgcsOgc3RlciBkZSB0ZW5kw6huY2lhLiBTaSBlbCByw6BzdGVyIGRlIHRlbmTDqG5jaWEgcydoYSBnZW5lcmF0IHBlciBhIGxhIGRpbWVuc2nDsyBTdGRUaW1lLCBlbCBmb3JtYXQgaGEgZGUgc2VyIEFBQUEtTU0tRERUSEg6TU06U1MsIHBlciBleGVtcGxlLCAyMDUwLTAxLTAxVDAwOjAwOjAwLiBEaXZlcnNvcyB2YWxvcnMgc2Ugc2VwYXJlbiBhbWIgdW4gcHVudCBpIGNvbWEuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX2FnZ3JlZ2F0aW9uZnVuY3Rpb25fdGFnMEBAXCI6IFwiRXNwZWNpZmlxdWV1IGxhIHBsYW50aWxsYSBkZSBmdW5jacOzIGRlIHLDoHN0ZXIgcXVlIHZvbGV1IHV0aWxpdHphciBwZXIgYWdyZWdhciBkaXZlcnNvcyBzZWN0b3JzIGVuIG1lbnlzIHNlY3RvcnMgbyB1biBzb2wgc2VjdG9yLlwiLFxuXHRcIkBAUHJvY2Vzcy1SYXN0ZXItQ29sbGVjdGlvbl9kaW1lbnNpb25fdGFnMEBAXCI6IFwiRGltZW5zacOzIGRlIGwnYWdyZWdhY2nDsy4gw4lzIGxhIGRpbWVuc2nDsyBhIGxhIHF1YWwgcydhZ3JlZ2FyYW4gbGVzIHZhcmlhYmxlcy5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25faXRlbWZ1bmN0aW9uX3RhZzBAQFwiOiBcIkVzcGVjaWZpcXVldSBsYSBwbGFudGlsbGEgZGUgZnVuY2nDsyBkZSByw6BzdGVyIHF1ZSB2b2xldSB1dGlsaXR6YXIgcGVyIHByb2Nlc3NhciBjYWRhIHNlY3RvciBvIGVsZW1lbnQgYSBsYSBjb2zCt2xlY2Npw7MgZGUgcsOgc3RlciBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX2tleXdvcmRpbnRlcnZhbF90YWcwQEBcIjogXCJFc3BlY2lmaWNhIGwnaW50ZXJ2YWwgZGUgcGFyYXVsZXMgY2xhdSBxdWUgcyd1dGlsaXR6YXLDoCBlbiBsJ2FncmVnYWNpw7MgYSBsYSBkaW1lbnNpw7MuIEFxdWVzdCBwYXLDoG1ldHJlIMOpcyBvYmxpZ2F0b3JpIHF1YW4gPHN0cm9uZz5UaXB1czwvc3Ryb25nPiBzJ2hhIGRlZmluaXQgZW4gPHN0cm9uZz5QYXJhdWxhIGNsYXUgZGUgbCdpbnRlcnZhbDwvc3Ryb25nPiBpIGwnYWdyZWdhY2nDsyBzJ2hhIGRlIGZlciBhbCBsbGFyZyBkZWwgdGVtcHMuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX2tleXdvcmRpbnRlcnZhbF90YWcxQEBcIjogXCI8c3Ryb25nPkNhZGEgaG9yYTwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ2FyYW4gZW4gcGVyw61vZGVzIGRlIHRlbXBzIGQnaG9yZXMsIGkgZWwgcmVzdWx0YXQgaW5jbG91csOgIGNhZGEgaG9yYSBkZSBsYSBzw6hyaWUgdGVtcG9yYWwuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX2tleXdvcmRpbnRlcnZhbF90YWcyQEBcIjogXCI8c3Ryb25nPkNhZGEgZGlhPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVnYXJhbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgZGlhcmlzLCBpIGVsIHJlc3VsdGF0IGluY2xvdXLDoCBjYWRhIGRpYSBkZSBsYSBzw6hyaWUgdGVtcG9yYWwuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX2tleXdvcmRpbnRlcnZhbF90YWczQEBcIjogXCI8c3Ryb25nPkNhZGEgc2V0bWFuYTwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ2FyYW4gZW4gcGVyw61vZGVzIGRlIHRlbXBzIHNldG1hbmFscywgaSBlbCByZXN1bHRhdCBpbmNsb3Vyw6AgY2FkYSBzZXRtYW5hIGRlIGxhIHPDqHJpZSB0ZW1wb3JhbC5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fa2V5d29yZGludGVydmFsX3RhZzRAQFwiOiBcIjxzdHJvbmc+Q2FkYSAxMCBkaWVzPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVnYXJhbiBlbiAzIHBlcsOtb2RlcyBkZSAxMCBkaWVzIGNhZGFzY3VuLiBFbCBkYXJyZXIgcGVyw61vZGUgcG90IGNvbnRlbmlyIG3DqXMgbyBtZW55cyBkZSAxMCBkaWVzLiBMYSBzb3J0aWRhIGluY2xvdXLDoCAzIHNlY3RvcnMgcGVyIGEgY2FkYSBtZXMuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX2tleXdvcmRpbnRlcnZhbF90YWc1QEBcIjogXCI8c3Ryb25nPkNhZGEgNSBkaWVzPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVnYXJhbiBlbiA2IHBlcsOtb2RlcyBkZSA1IGRpZXMgY2FkYXNjdW4uIEVsIGRhcnJlciBwZXLDrW9kZSBwb3QgY29udGVuaXIgbcOpcyBvIG1lbnlzIGRlIDUgZGllcy4gTGEgc29ydGlkYSBpbmNsb3Vyw6AgNiBzZWN0b3JzIHBlciBhIGNhZGEgbWVzLlwiLFxuXHRcIkBAUHJvY2Vzcy1SYXN0ZXItQ29sbGVjdGlvbl9rZXl3b3JkaW50ZXJ2YWxfdGFnNkBAXCI6IFwiPHN0cm9uZz5DYWRhIG1lczwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ2FyYW4gZW4gcGVyw61vZGVzIGRlIHRlbXBzIG1lbnN1YWxzLCBpIGVsIHJlc3VsdGF0IGluY2xvdXLDoCBjYWRhIG1lcyBkZSBsYSBzw6hyaWUgdGVtcG9yYWwuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX2tleXdvcmRpbnRlcnZhbF90YWc3QEBcIjogXCI8c3Ryb25nPkNhZGEgdHJpbWVzdHJlPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVnYXJhbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgdHJpbWVzdHJhbHMsIGkgZWwgcmVzdWx0YXQgaW5jbG91csOgIGNhZGEgdHJpbWVzdHJlIGRlIGxhIHPDqHJpZSB0ZW1wb3JhbC5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fa2V5d29yZGludGVydmFsX3RhZzhAQFwiOiBcIjxzdHJvbmc+Q2FkYSBhbnk8L3N0cm9uZz46IGVscyB2YWxvcnMgZGUgbGVzIGRhZGVzIHMnYWdyZWdhcmFuIGVuIHBlcsOtb2RlcyBkZSB0ZW1wcyBhbnVhbHMsIGkgZWwgcmVzdWx0YXQgaW5jbG91csOgIGNhZGEgYW55IGRlIGxhIHPDqHJpZSB0ZW1wb3JhbC5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fa2V5d29yZGludGVydmFsX3RhZzlAQFwiOiBcIjxzdHJvbmc+UmVjdXJyZW50IGNhZGEgZGlhPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVnYXJhbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgZGlhcmlzLCBpIGVsIHJlc3VsdGF0IGluY2xvdXLDoCB1biB2YWxvciBhZ3JlZ2F0IHBlciBkaWEganVsacOgLiBMYSBzb3J0aWRhIGluY2xvdXLDoCwgY29tIGEgbcOgeGltLCAzNjYgc2VjdG9ycyBkZSB0ZW1wcyBkaWFyaXMuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX2tleXdvcmRpbnRlcnZhbF90YWcxMEBAXCI6IFwiPHN0cm9uZz5SZWN1cnJlbnQgY2FkYSBzZXRtYW5hPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVnYXJhbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgc2V0bWFuYWxzLCBpIGVsIHJlc3VsdGF0IGluY2xvdXLDoCB1biB2YWxvciBhZ3JlZ2F0IHBlciBzZXRtYW5hLiBMYSBzb3J0aWRhIGluY2xvdXLDoCwgY29tIGEgbcOgeGltLCA1MyBzZWN0b3JzIGRlIHRlbXBzIHNldG1hbmFscy5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fa2V5d29yZGludGVydmFsX3RhZzExQEBcIjogXCI8c3Ryb25nPlJlY3VycmVudCBjYWRhIG1lczwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ2FyYW4gZW4gcGVyw61vZGVzIGRlIHRlbXBzIG1lbnN1YWxzLCBpIGVsIHJlc3VsdGF0IGluY2xvdXLDoCB1biB2YWxvciBhZ3JlZ2F0IHBlciBtZXMuIExhIHNvcnRpZGEgaW5jbG91csOgLCBjb20gYSBtw6B4aW0sIDEyIHNlY3RvcnMgZGUgdGVtcHMgbWVuc3VhbHMuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX2tleXdvcmRpbnRlcnZhbF90YWcxMkBAXCI6IFwiPHN0cm9uZz5SZWN1cnJlbnQgY2FkYSB0cmltZXN0cmU8L3N0cm9uZz46IGVscyB2YWxvcnMgZGUgbGVzIGRhZGVzIHMnYWdyZWdhcmFuIGVuIHBlcsOtb2RlcyBkZSB0ZW1wcyB0cmltZXN0cmFscywgaSBlbCByZXN1bHRhdCBpbmNsb3Vyw6AgdW4gdmFsb3IgYWdyZWdhdCBwZXIgdHJpbWVzdHJlLiBMYSBzb3J0aWRhIGluY2xvdXLDoCwgY29tIGEgbcOgeGltLCA0IHNlY3RvcnMgZGUgdGVtcHMgdHJpbWVzdHJhbHMuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX21heGltdW12YWx1ZV90YWcwQEBcIjogXCJWYWxvciBtw6B4aW0gZCd1biBpbnRlcnZhbC5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fbWF4aW11bXZhbHVlX3RhZzFAQFwiOiBcIkFxdWVzdCBwYXLDoG1ldHJlIMOpcyBvYmxpZ2F0b3JpIHF1YW4gZWwgcGFyw6BtZXRyZSA8c3Ryb25nPlRpcHVzPC9zdHJvbmc+IGVzIGRlZmluZWl4IGVuIDxzdHJvbmc+UmFuZ3MgZGUgbCdpbnRlcnZhbDwvc3Ryb25nPi5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fbWluaW11bXZhbHVlX3RhZzBAQFwiOiBcIlZhbG9yIG3DrW5pbSBkJ3VuIGludGVydmFsLlwiLFxuXHRcIkBAUHJvY2Vzcy1SYXN0ZXItQ29sbGVjdGlvbl9taW5pbXVtdmFsdWVfdGFnMUBAXCI6IFwiQXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlIDxzdHJvbmc+VGlwdXM8L3N0cm9uZz4gZXMgZGVmaW5laXggZW4gPHN0cm9uZz5SYW5ncyBkZSBsJ2ludGVydmFsPC9zdHJvbmc+LlwiLFxuXHRcIkBAUHJvY2Vzcy1SYXN0ZXItQ29sbGVjdGlvbl9wcm9jZXNzaW5nZnVuY3Rpb25fdGFnMEBAXCI6IFwiRXNwZWNpZmlxdWV1IGxhIHBsYW50aWxsYSBkZSBmdW5jacOzIGRlIHLDoHN0ZXIgcXVlIHMndXRpbGl0emFyw6AgcGVyIG1vc3RyYXIgbGEgY2FwYSByw6BzdGVyIHByb2Nlc3NhZGEuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX3Jhc3RlcmNvbGxlY3Rpb25fdGFnMEBAXCI6IFwiUsOgc3RlciBtdWx0aWRpbWVuc2lvbmFsIGQnZW50cmFkYSwgY2FwYSBkZSBtb3NhaWMgbyBkYXRhc2V0IGRlIG1vc2FpYy5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fdHlwZV90YWcwQEBcIjogXCJFc3BlY2lmaWNhIGwnaW50ZXJ2YWwgZGUgZGltZW5zaW9ucyBwZXIgYWwgcXVhbCBzJ2FncmVnYXJhbiBsZXMgZGFkZXMuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX3R5cGVfdGFnMUBAXCI6IFwiPHN0cm9uZz5Ub3RzPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVnYXJhbiBlbiB0b3RzIGVscyBzZWN0b3JzLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fdHlwZV90YWcyQEBcIjogXCI8c3Ryb25nPlBhcmF1bGEgY2xhdSBkZSBsJ2ludGVydmFsPC9zdHJvbmc+OiBsZXMgZGFkZXMgZGUgdmFyaWFibGVzIHMnYWdyZWdhcmFuIGFtYiB1biBpbnRlcnZhbCBjb25lZ3V0IGNvbXVuYW1lbnQuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX3R5cGVfdGFnM0BAXCI6IFwiPHN0cm9uZz5SYW5ncyBkZSBsJ2ludGVydmFsPC9zdHJvbmc+OiBsZXMgZGFkZXMgZGUgdmFyaWFibGVzIHMnYWdyZWdhcmFuIGVudHJlIHBhcmVsbHMgZGUgdmFsb3JzIG8gZGF0ZXMgZXNwZWNpZmljYXRzLlwiLFxuXHRcIkBAUHJvY2Vzcy1SYXN0ZXItQ29sbGVjdGlvbl90eXBlX3RhZzRAQFwiOiBcIjxzdHJvbmc+VmFsb3JzIGRlIGwnaW50ZXJ2YWw8L3N0cm9uZz46IGxlcyBkYWRlcyBkZSB2YXJpYWJsZXMgcydhZ3JlZ2FyYW4gYW1iIHVuIGludGVydmFsIGdlbmVyYWxtZW50IGNvbmVndXQuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX3VuaXRfdGFnMEBAXCI6IFwiVW5pdGF0IHF1ZSBzJ3V0aWxpdHphcsOgIHBlciBhbCB2YWxvciBkZSBsJ2ludGVydmFsLiBBcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGxhIDxzdHJvbmc+ZGltZW5zacOzPC9zdHJvbmc+IMOpcyB1biBjYW1wIGRlIHRlbXBzIGkgZWwgcGFyw6BtZXRyZSA8c3Ryb25nPlRpcHVzPC9zdHJvbmc+IGVzIGRlZmluZWl4IGVuIDxzdHJvbmc+VmFsb3IgZGUgbCdpbnRlcnZhbDwvc3Ryb25nPi5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fdW5pdF90YWcxQEBcIjogXCJTaSBmZXUgbCdhZ3JlZ2FjacOzIHNvYnJlIHVuYSB2YXJpYWJsZSBxdWUgbm8gw6lzIGRlIHRlbXBzLCBhcXVlc3RhIG9wY2nDsyBubyBlc3RhcsOgIGRpc3BvbmlibGUgaSBsYSB1bml0YXQgZGVsIHZhbG9yIGRlIGwnaW50ZXJ2YWwgY29pbmNpZGlyw6AgYW1iIGxhIHVuaXRhdCBkZSBsYSB2YXJpYWJsZSBkZSBsZXMgZGFkZXMgZGVsIHLDoHN0ZXIgbXVsdGlkaW1lbnNpb25hbCBkJ2VudHJhZGEuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX3VuaXRfdGFnMkBAXCI6IFwiPHN0cm9uZz5Ib3Jlczwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ2FyYW4gZW4gc2VjdG9ycyBkZSB0ZW1wcyBkJ2hvcmEgYSBsJ2ludGVydmFsIHByb3BvcmNpb25hdC5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fdW5pdF90YWczQEBcIjogXCI8c3Ryb25nPkRpZXM8L3N0cm9uZz46IGVscyB2YWxvcnMgZGUgbGVzIGRhZGVzIHMnYWdyZWdhcmFuIGVuIHNlY3RvcnMgZGUgdGVtcHMgZGlhcmlzIGEgbCdpbnRlcnZhbCBwcm9wb3JjaW9uYXQuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX3VuaXRfdGFnNEBAXCI6IFwiPHN0cm9uZz5TZXRtYW5lczwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ2FyYW4gZW4gc2VjdG9ycyBkZSB0ZW1wcyBzZXRtYW5hbHMgYSBsJ2ludGVydmFsIHByb3BvcmNpb25hdC5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fdW5pdF90YWc1QEBcIjogXCI8c3Ryb25nPk1lc29zPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVnYXJhbiBlbiBzZWN0b3JzIGRlIHRlbXBzIG1lbnN1YWxzIGEgbCdpbnRlcnZhbCBwcm9wb3JjaW9uYXQuXCIsXG5cdFwiQEBQcm9jZXNzLVJhc3Rlci1Db2xsZWN0aW9uX3VuaXRfdGFnNkBAXCI6IFwiPHN0cm9uZz5BbnlzPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVnYXJhbiBlbiBzZWN0b3JzIGRlIHRlbXBzIGFudWFscyBhIGwnaW50ZXJ2YWwgcHJvcG9yY2lvbmF0LlwiLFxuXHRcIkBAUHJvY2Vzcy1SYXN0ZXItQ29sbGVjdGlvbl92YWx1ZWludGVydmFsX3RhZzBAQFwiOiBcIk1pZGEgZGUgbCdpbnRlcnZhbCBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgYSBsJ2FncmVnYWNpw7MuIEFxdWVzdCBwYXLDoG1ldHJlIMOpcyBvYmxpZ2F0b3JpIHF1YW4gZWwgcGFyw6BtZXRyZSA8c3Ryb25nPlRpcHVzPC9zdHJvbmc+IGVzIGRlZmluZWl4IGVuIDxzdHJvbmc+VmFsb3IgZGUgbCdpbnRlcnZhbDwvc3Ryb25nPi5cIixcblx0XCJAQFByb2Nlc3MtUmFzdGVyLUNvbGxlY3Rpb25fdmFsdWVpbnRlcnZhbF90YWcxQEBcIjogXCJQZXIgZXhlbXBsZSwgcGVyIGFncmVnYXIgMzAgYW55cyBkZSBkYWRlcyBkZSB0ZW1wZXJhdHVyYSBtZW5zdWFscyBlbiBpbmNyZW1lbnRzIGRlIDUgYW55cywgaW50cm9kdcOvdSA1IGNvbSBhIDxzdHJvbmc+SW50ZXJ2YWwgZGUgdmFsb3JzPC9zdHJvbmc+IGkgYSA8c3Ryb25nPlVuaXRhdDwvc3Ryb25nPiBlc3BlY2lmaXF1ZXUgPHN0cm9uZz5BbnlzPC9zdHJvbmc+LlwiLFxuXHRcIkBATGluZWFyLVNwZWN0cmFsLVVubWl4aW5nX25vbi1uZWdhdGl2ZV90YWcwQEBcIjogXCJFc3BlY2lmaWNhIGxlcyBvcGNpb25zIHBlciBkZWZpbmlyIGVscyB2YWxvcnMgZGUgcMOteGVsIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBMaW5lYXItU3BlY3RyYWwtVW5taXhpbmdfbm9uLW5lZ2F0aXZlX3RhZzFAQFwiOiBcIkFjdGl2YXQ6IG5vIGhpIGhhdXLDoCB2YWxvcnMgZGUgc29ydGlkYSBuZWdhdGl1cy5cIixcblx0XCJAQExpbmVhci1TcGVjdHJhbC1Vbm1peGluZ19ub24tbmVnYXRpdmVfdGFnMkBAXCI6IFwiRGVzYWN0aXZhdDogcG9kZW4gaGF2ZXItaGkgdmFsb3JzIG5lZ2F0aXVzIGRlIGNvYmVydHVyYSBkZSBzw7JsIGZyYWNjaW9uYWwuXCIsXG5cdFwiQEBMaW5lYXItU3BlY3RyYWwtVW5taXhpbmdfcmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBATGluZWFyLVNwZWN0cmFsLVVubWl4aW5nX3NwZWN0cmFscHJvZmlsZV90YWcwQEBcIjogXCJGaXR4ZXIgZGUgcGVyZmlsIGVzcGVjdHJhbCBkJ2VudHJhZGEuXCIsXG5cdFwiQEBMaW5lYXItU3BlY3RyYWwtVW5taXhpbmdfc3BlY3RyYWxwcm9maWxldHlwZV90YWcwQEBcIjogXCJJbmZvcm1hY2nDsyBlc3BlY3RyYWwgZGUgbGVzIGRpZmVyZW50cyBjbGFzc2VzIGRlIGNvYmVydHVyYSBkZSBzw7JsLlwiLFxuXHRcIkBATGluZWFyLVNwZWN0cmFsLVVubWl4aW5nX3NwZWN0cmFscHJvZmlsZXR5cGVfdGFnMUBAXCI6IFwiPHN0cm9uZz5QZXJmaWwgZXNwZWN0cmFsPC9zdHJvbmc+OiB1biBmaXR4ZXIgZGUgZGVmaW5pY2nDsyBkZSBjbGFzc2lmaWNhZG9yIGQnZW50cmFkYSAoJHsuZWNkfSksIGdlbmVyYXQgYSBwYXJ0aXIgZGUgbCdlaW5hIDxzdHJvbmc+PHN0cm9uZz5Gb3JtYSBlbCBjbGFzc2lmaWNhZG9yIHBlciBtw6B4aW1hIHZlcnNlbWJsYW7Dp2E8L3N0cm9uZz48L3N0cm9uZz4sIG8gdW4gZml0eGVyIEphdmFTY3JpcHQgT2JqZWN0IE5vdGF0aW9uICgkey5qc29ufSkgcXVlIGNvbnRpbmd1aSBlbHMgcGVyZmlscyBlc3BlY3RyYWxzIGRlIGNsYXNzZS5cIixcblx0XCJAQExpbmVhci1TcGVjdHJhbC1Vbm1peGluZ19zcGVjdHJhbHByb2ZpbGV0eXBlX3RhZzJAQFwiOiBcIjxzdHJvbmc+RW50aXRhdCBkZSBmb3JtYWNpw7M8L3N0cm9uZz46IGVudGl0YXRzIGRlIHBvbMOtZ29uIG8gdW5hIGNsYXNzZSBkJ2VudGl0YXQgZGUgbW9zdHJhIGRlIGZvcm1hY2nDsywgZ2VuZXJhZGEgZGVzIGRlIGwnPHN0cm9uZz5BZG1pbmlzdHJhZG9yIGRlIG1vc3RyZXMgZGUgZm9ybWFjacOzPC9zdHJvbmc+LlwiLFxuXHRcIkBATGluZWFyLVNwZWN0cmFsLVVubWl4aW5nX3N1bXRvb25lX3RhZzBAQFwiOiBcIkVzcGVjaWZpY2EgbGVzIG9wY2lvbnMgcGVyIGRlZmluaXIgZWxzIHZhbG9ycyBkZSBww614ZWwgZGUgc29ydGlkYS5cIixcblx0XCJAQExpbmVhci1TcGVjdHJhbC1Vbm1peGluZ19zdW10b29uZV90YWcxQEBcIjogXCJBY3RpdmF0OiBlbHMgdmFsb3JzIGRlIGNsYXNzZSBkZSBjYWRhIHDDrXhlbCBlcyBwcm9wb3JjaW9uZW4gZW4gZm9ybWF0IGRlY2ltYWwgaSBsYSBzdW1hIGRlIHRvdGVzIGxlcyBjbGFzc2VzIMOpcyBpZ3VhbCBhIDEuIFBlciBleGVtcGxlLCBDbGFzc2UxID0gMCwxNjsgQ2xhc3NlMiA9IDAsMjQ7IENsYXNzZTMgPSAwLDYwLlwiLFxuXHRcIkBATGluZWFyLVNwZWN0cmFsLVVubWl4aW5nX3N1bXRvb25lX3RhZzJAQFwiOiBcIkRlc2FjdGl2YXQ6IGxhIHN1bWEgZGUgdG90ZXMgbGVzIGNsYXNzZXMgZCd1biBww614ZWwgcG90IHNlciBzdXBlcmlvciBhIDEuXCIsXG5cdFwiQEBMaW5lYXItU3BlY3RyYWwtVW5taXhpbmdfdHJhaW5pbmdmZWF0dXJlX3RhZzBAQFwiOiBcIkZpdHhlciBkJ2VudGl0YXQgZGUgZm9ybWFjacOzIGQnZW50cmFkYS5cIixcblx0XCJAQEFnZ3JlZ2F0ZV9hZ2dyZWdhdGlvbnRlY2huaXF1ZV90YWcwQEBcIjogXCJNw6h0b2RlIHV0aWxpdHphdCBwZXIgYSBsJ2FncmVnYWNpw7MuIEVscyB2YWxvcnMgZGUgbGVzIGNlbMK3bGVzIGQnZW50cmFkYSBjb21wcmVzZXMgcGVyIGxlcyBjZWzCt2xlcyBkZSBzb3J0aWRhIG3DqXMgaW1wcmVjaXNlcyBzJ2FncmVndWVuIG1pdGphbsOnYW50IHVuYSBkZSBsZXMgZXN0YWTDrXN0aXF1ZXMgc2Vnw7xlbnRzOlwiLFxuXHRcIkBAQWdncmVnYXRlX2FnZ3JlZ2F0aW9udGVjaG5pcXVlX3RhZzFAQFwiOiBcIjxzdHJvbmc+U3VtYTwvc3Ryb25nPjogdG90YWwgZGUgbGVzIGNlbMK3bGVzIGQnZW50cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBBZ2dyZWdhdGVfYWdncmVnYXRpb250ZWNobmlxdWVfdGFnMkBAXCI6IFwiPHN0cm9uZz5Nw6B4aW08L3N0cm9uZz46IHZhbG9yIG3DqXMgZ3JhbiBkZSBsZXMgY2VswrdsZXMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQWdncmVnYXRlX2FnZ3JlZ2F0aW9udGVjaG5pcXVlX3RhZzNAQFwiOiBcIjxzdHJvbmc+TWl0amFuYTwvc3Ryb25nPjogdmFsb3IgbWl0asOgIGRlIGxlcyBjZWzCt2xlcyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBBZ2dyZWdhdGVfYWdncmVnYXRpb250ZWNobmlxdWVfdGFnNEBAXCI6IFwiPHN0cm9uZz5NZWRpYW5hPC9zdHJvbmc+OiB2YWxvciBtZWRpw6AgZGUgbGVzIGNlbMK3bGVzIGQnZW50cmFkYS5cIixcblx0XCJAQEFnZ3JlZ2F0ZV9hZ2dyZWdhdGlvbnRlY2huaXF1ZV90YWc1QEBcIjogXCI8c3Ryb25nPk3DrW5pbTwvc3Ryb25nPjogdmFsb3IgbcOpcyBwZXRpdCBkZSBsZXMgY2VswrdsZXMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQWdncmVnYXRlX2NlbGxmYWN0b3JfdGFnMEBAXCI6IFwiRmFjdG9yIHBlbCBxdWUgZXMgbXVsdGlwbGljYXLDoCBsYSBtaWRhIGRlIGNlbMK3bGEgZGVsIHLDoHN0ZXIgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQWdncmVnYXRlX2NlbGxmYWN0b3JfdGFnMUBAXCI6IFwiUG9yIGVqZW1wbG8sIHVuIHZhbG9yIGRlIGZhY3RvciBkZSBjZWxkYSBkZSB0cmVzIGdlbmVyYXLDoSBjb21vIHJlc3VsdGFkbyB1biB0YW1hw7FvIGRlIGNlbGRhIGRlIHNhbGlkYSB0cmVzIHZlY2VzIG1heW9yIHF1ZSBlbCBkZWwgcsOhc3RlciBkZSBlbnRyYWRhLlwiLFxuXHRcIkBAQWdncmVnYXRlX2V4cGFuZGV4dGVudGlmbmVlZGVkX3RhZzBAQFwiOiBcIkRlZmluZSBjw7NtbyBzZSBnZXN0aW9uYW4gbG9zIGzDrW1pdGVzIGRlbCByw6FzdGVyIGRlIGVudHJhZGEgY3VhbmRvIHN1cyBmaWxhcyBvIGNvbHVtbmFzIG5vIHNvbiBtw7psdGlwbG9zIGRlbCBmYWN0b3IgZGUgY2VsZGEuXCIsXG5cdFwiQEBBZ2dyZWdhdGVfZXhwYW5kZXh0ZW50aWZuZWVkZWRfdGFnMUBAXCI6IFwiQWN0aXZhdDogZXhwYW5kZWl4IGVscyBsw61taXRzIHN1cGVyaW9ycyBvIGRlIGxhIGRyZXRhIGRlbCByw6BzdGVyIGQnZW50cmFkYSBkZSBtYW5lcmEgcXVlIGxhIHF1YW50aXRhdCB0b3RhbCBkZSBjZWzCt2xlcyBkJ3VuYSBmaWxhIG8gdW5hIGNvbHVtbmEgc2lndWkgdW4gbcO6bHRpcGxlIGRlbCBmYWN0b3IgZGUgY2VswrdsYS4gQ29uIGVzdGEgb3BjacOzbiwgZWwgcsOhc3RlciBkZSBzYWxpZGEgcHVlZGUgY3VicmlyIHVuYSBleHRlbnNpw7NuIGVzcGFjaWFsIG3DoXMgYW1wbGlhIHF1ZSBsYSBkZWwgcsOhc3RlciBkZSBlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQEFnZ3JlZ2F0ZV9leHBhbmRleHRlbnRpZm5lZWRlZF90YWcyQEBcIjogXCJEZXNhY3RpdmF0OiByZWR1ZWl4IGVsIG5vbWJyZSBkZSBmaWxlcyBvIGNvbHVtbmVzIGRlbCByw6BzdGVyIGRlIHNvcnRpZGEuIExhIHJlc3RhIGRlIGNlbMK3bGVzIGRlbHMgbMOtbWl0cyBzdXBlcmlvciBvIGRlIGxhIGRyZXRhIGRlbCByw6BzdGVyIGQnZW50cmFkYSBlcyB0cnVuY2FyYW4sIGRlIG1hbmVyYSBxdWUgZWwgbm9tYnJlIGRlIGZpbGVzIG8gY29sdW1uZXMgZGVsIHLDoHN0ZXIgZCdlbnRyYWRhIHNpZ3VpIHVuIG3Dumx0aXBsZSBkZWwgZmFjdG9yIGRlIGNlbMK3bGEuIENvbiBlc3RhIG9wY2nDs24sIGVsIHLDoXN0ZXIgZGUgc2FsaWRhIHB1ZWRlIGN1YnJpciB1bmEgZXh0ZW5zacOzbiBlc3BhY2lhbCBtw6FzIHJlZHVjaWRhIHF1ZSBsYSBkZWwgcsOhc3RlciBkZSBlbnRyYWRhLlwiLFxuXHRcIkBAQWdncmVnYXRlX2lnbm9yZW5vZGF0YWluY2FsY3VsYXRpb25zX3RhZzBAQFwiOiBcIkluZGljYSBzaSBlbCBjw6BsY3VsIGQnYWdyZWdhY2nDsyBpZ25vcmEgZWxzIHZhbG9ycyAke05vRGF0YX0uXCIsXG5cdFwiQEBBZ2dyZWdhdGVfaWdub3Jlbm9kYXRhaW5jYWxjdWxhdGlvbnNfdGFnMUBAXCI6IFwiQWN0aXZhdDogZXNwZWNpZmljYSBxdWUsIHNpIGhpIGhhIHZhbG9ycyAke05vRGF0YX0gZGUgcXVhbHNldm9sIGRlIGxlcyBjZWzCt2xlcyBxdWUgZXN0YW4gZGlucyBsJ2V4dGVuc2nDsyBlc3BhY2lhbCBkJ3VuYSBjZWzCt2xhIG3DqXMgZ3JhbiBhbCByw6BzdGVyIGRlIHNvcnRpZGEsIGVscyB2YWxvcnMgJHtOb0RhdGF9IHMnaWdub3JhcmFuIHF1YW4gZXMgZGV0ZXJtaW5pIGVsIHZhbG9yIGRlIGxlcyB1YmljYWNpb25zIGRlIGNlbMK3bGVzIGRlIHNvcnRpZGEuIFBlciBkZXRlcm1pbmFyIGVsIHZhbG9yIGRlIGxhIGNlbMK3bGEgZGUgc29ydGlkYSwgbm9tw6lzIHMndXRpbGl0emFyYW4gbGVzIGNlbMK3bGVzIGQnZW50cmFkYSBkaW5zIGRlIGwnZXh0ZW5zacOzIGRlIGxhIGNlbMK3bGEgZGUgc29ydGlkYSBxdWUgY29udGluZ3VpbiB2YWxvcnMgZGUgZGFkZXMuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBAQWdncmVnYXRlX2lnbm9yZW5vZGF0YWluY2FsY3VsYXRpb25zX3RhZzJAQFwiOiBcIkRlc2FjdGl2YXQ6IGVzcGVjaWZpY2EgcXVlLCBzaSBxdWFsc2V2b2wgZGUgbGVzIGNlbMK3bGVzIHF1ZSBlc3RhbiBkaW5zIGwnZXh0ZW5zacOzIGVzcGFjaWFsIGQndW5hIGNlbMK3bGEgbcOpcyBncmFuIGFsIHLDoHN0ZXIgZGUgc29ydGlkYSB0w6kgdW4gdmFsb3IgJHtOb0RhdGF9LCBlbCB2YWxvciBkJ2FxdWVzdGEgdWJpY2FjacOzIGRlIGNlbMK3bGEgZGUgc29ydGlkYSBzZXLDoCAke05vRGF0YX0uIFV0aWxpdHphciBhcXVlc3RhIG9wY2nDsyBpbXBsaWNhIHF1ZSwgcXVhbiBsZXMgY2VswrdsZXMgZW4gdW5hIGFncmVnYWNpw7MgY29udGVuZW4gZWwgdmFsb3IgJHtOb0RhdGF9LCBubyBoaSBoYSBwcm91IGluZm9ybWFjacOzIHBlciBmZXIgZWxzIGPDoGxjdWxzIGVzcGVjaWZpY2F0cyBuZWNlc3NhcmlzIHBlciBkZXRlcm1pbmFyIHVuIHZhbG9yIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBBZ2dyZWdhdGVfcmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIHF1ZSBzJ2FncmVnYXLDoC5cIixcblx0XCJAQEV4cGFuZF9udW1iZXJvZmNlbGxzX3RhZzBAQFwiOiBcIk5vbWJyZSBkZSBjZWzCt2xlcyBxdWUgcydleHBhbmRpcsOgLlwiLFxuXHRcIkBARXhwYW5kX251bWJlcm9mY2VsbHNfdGFnMUBAXCI6IFwiRWwgdmFsb3IgaGEgZGUgc2VyIHVuIGVudGVyIGkgcG90IHNlciAxIG8gc3VwZXJpb3IuXCIsXG5cdFwiQEBFeHBhbmRfcmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgZCdlbnRyYWRhIHBlciBhbCBxdWFsIHMnZXhwYW5kaXJhbiBsZXMgem9uZXMgaWRlbnRpZmljYWRlcy5cIixcblx0XCJAQEV4cGFuZF9yYXN0ZXJfdGFnMUBAXCI6IFwiSGEgZGUgc2VyIGRlIHRpcHVzIGVudGVyLlwiLFxuXHRcIkBARXhwYW5kX3pvbmV2YWx1ZXNfdGFnMEBAXCI6IFwiTGxpc3RhIGRlIHpvbmVzIHF1ZSBzJ2V4cGFuZGlyYW4uXCIsXG5cdFwiQEBFeHBhbmRfem9uZXZhbHVlc190YWcxQEBcIjogXCJFbHMgdmFsb3JzIGRlIHpvbmEgaGFuIGRlIHNlciBlbnRlcnMgaSBwb2RlbiBlc3RhciBlbiBxdWFsc2V2b2wgb3JkcmUuXCIsXG5cdFwiQEBFeHBhbmRfem9uZXZhbHVlc190YWcyQEBcIjogXCJQZXIgZXNwZWNpZmljYXIgZGl2ZXJzZXMgem9uZXMsIGZldSBzZXJ2aXIgdW4gZXNwYWkgcGVyIHNlcGFyYXIgZWxzIHZhbG9ycyBkZSB6b25hLlwiLFxuXHRcIkBATXVsdGlkaW1lbnNpb25hbC1GaWx0ZXJfZGltZW5zaW9uX3RhZzBAQFwiOiBcIkRpbWVuc2nDsyBkZSBsYSBxdWFsIHMnZXh0cmF1cmFuIGxlcyB2YXJpYWJsZXMuXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLUZpbHRlcl9kaW1lbnNpb25kZWZpbml0aW9uX3RhZzBAQFwiOiBcIkVzcGVjaWZpY2EgZWwgbcOodG9kZSBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgZGl2aWRpciBsJ2Fub21hbGlhIGVuIHNlY3RvcnMuXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLUZpbHRlcl9kaW1lbnNpb25kZWZpbml0aW9uX3RhZzFAQFwiOiBcIjxzdHJvbmc+VG90PC9zdHJvbmc+OiBzJ3V0aWxpdHphcsOgIGwnaW50ZXJ2YWwgY29tcGxldCBkZSBjYWRhIGRpbWVuc2nDsy4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLUZpbHRlcl9kaW1lbnNpb25kZWZpbml0aW9uX3RhZzJAQFwiOiBcIjxzdHJvbmc+UGVyIHZhbG9yczwvc3Ryb25nPjogbGEgZGltZW5zacOzIGVzIGRpdmlkaXLDoCBlbiBzZWN0b3JzIHV0aWxpdHphbnQgdW4gdmFsb3IgZGUgZGltZW5zacOzIG8gdW5hIGxsaXN0YSBkZSB2YWxvcnMuXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLUZpbHRlcl9kaW1lbnNpb25kZWZpbml0aW9uX3RhZzNAQFwiOiBcIjxzdHJvbmc+UGVyIGludGVydmFsczwvc3Ryb25nPjogbGEgZGltZW5zacOzIGVzIGRpdmlkaXLDoCBlbiBzZWN0b3JzIHV0aWxpdHphbnQgdW4gaW50ZXJ2YWwgbyB1bmEgbGxpc3RhIGQnaW50ZXJ2YWxzLlwiLFxuXHRcIkBATXVsdGlkaW1lbnNpb25hbC1GaWx0ZXJfZGltZW5zaW9uZGVmaW5pdGlvbl90YWc0QEBcIjogXCI8c3Ryb25nPlBlciBpdGVyYWNpw7M8L3N0cm9uZz46IGxhIGRpbWVuc2nDsyBlcyBkaXZpZGlyw6AgZW4gc2VjdG9ycyBlbiB1bmEgbWlkYSBkJ2ludGVydmFsIGVzcGVjaWZpY2FkYS5cIixcblx0XCJAQE11bHRpZGltZW5zaW9uYWwtRmlsdGVyX2VuZG9mZmlyc3RpdGVyYXRpb25fdGFnMEBAXCI6IFwiRWwgZmluYWwgZGVsIHByaW1lciBpbnRlcnZhbC4gQXF1ZXN0IGludGVydmFsIHMndXRpbGl0emEgcGVyIGl0ZXJhciBhbCBkYXRhc2V0LiBBcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGVsIHBhcsOgbWV0cmUgPHN0cm9uZz5EZWZpbmljacOzIGRlIGxhIGRpbWVuc2nDszwvc3Ryb25nPiBlcyBkZWZpbmVpeCBlbiA8c3Ryb25nPlBlciBpdGVyYWNpw7M8L3N0cm9uZz4uXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLUZpbHRlcl9tYXhpbXVtdmFsdWVfdGFnMEBAXCI6IFwiVmFsb3IgbcOgeGltIGRlIGwnaW50ZXJ2YWwuIEFxdWVzdCBwYXLDoG1ldHJlIMOpcyBvYmxpZ2F0b3JpIHF1YW4gZWwgcGFyw6BtZXRyZSA8c3Ryb25nPkRlZmluaWNpw7MgZGUgbGEgZGltZW5zacOzPC9zdHJvbmc+IGVzIGRlZmluZWl4IGVuIDxzdHJvbmc+UGVyIGludGVydmFsczwvc3Ryb25nPi5cIixcblx0XCJAQE11bHRpZGltZW5zaW9uYWwtRmlsdGVyX21pbmltdW12YWx1ZV90YWcwQEBcIjogXCJWYWxvciBtw61uaW0gZGUgbCdpbnRlcnZhbC4gQXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlIDxzdHJvbmc+RGVmaW5pY2nDsyBkZSBsYSBkaW1lbnNpw7M8L3N0cm9uZz4gZXMgZGVmaW5laXggZW4gPHN0cm9uZz5QZXIgaW50ZXJ2YWxzPC9zdHJvbmc+LlwiLFxuXHRcIkBATXVsdGlkaW1lbnNpb25hbC1GaWx0ZXJfcmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgbXVsdGlkaW1lbnNpb25hbCBkJ2VudHJhZGEuXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLUZpbHRlcl9yYW5nZXNfdGFnMEBAXCI6IFwiPHA+RWxzIHJhbmdzIGRlIGwnaW50ZXJ2YWwgZXNwZWNpZmljYXRzIGVuIHVuYSB0YXVsYSBzJ3V0aWxpdHplbiBwZXIgYWdyZWdhciBncnVwcyBkZSB2YWxvcnMuIEVscyB2YWxvcnMgbcOtbmltIGkgbcOgeGltIGVzcGVjaWZpcXVlbiBsJ2ludGVydmFsIHF1ZSBzJ2luY2xvdXLDoC48L3A+PHA+QXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlPHN0cm9uZz5UaXB1czwvc3Ryb25nPnMnZXN0YWJsZWl4IGVuPHN0cm9uZz5SYW5ncyBkZSBsJ2ludGVydmFsPC9zdHJvbmc+LjwvcD5cIixcblx0XCJAQE11bHRpZGltZW5zaW9uYWwtRmlsdGVyX3N0YXJ0b2ZmaXJzdGl0ZXJhdGlvbl90YWcwQEBcIjogXCJMJ2luaWNpIGRlbCBwcmltZXIgaW50ZXJ2YWwuIEFxdWVzdCBpbnRlcnZhbCBzJ3V0aWxpdHphIHBlciBpdGVyYXIgYWwgZGF0YXNldC4gQXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlIDxzdHJvbmc+RGVmaW5pY2nDsyBkZSBsYSBkaW1lbnNpw7M8L3N0cm9uZz4gZXMgZGVmaW5laXggZW4gPHN0cm9uZz5QZXIgaXRlcmFjacOzPC9zdHJvbmc+LlwiLFxuXHRcIkBATXVsdGlkaW1lbnNpb25hbC1GaWx0ZXJfc3RlcF90YWcwQEBcIjogXCJGcmVxw7zDqG5jaWEgYW1iIHF1w6ggbGVzIGRhZGVzIGVzIGRpdmlkaXJhbiBlbiBzZWN0b3JzLiBBcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGVsIHBhcsOgbWV0cmUgPHN0cm9uZz5EZWZpbmljacOzIGRlIGxhIGRpbWVuc2nDszwvc3Ryb25nPiBlcyBkZWZpbmVpeCBlbiA8c3Ryb25nPlBlciBpdGVyYWNpw7M8L3N0cm9uZz4uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAzLlwiLFxuXHRcIkBATXVsdGlkaW1lbnNpb25hbC1GaWx0ZXJfdW5pdF90YWcwQEBcIjogXCJFc3BlY2lmaWNhIGxhIHVuaXRhdCBkJ2l0ZXJhY2nDsy4gQXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlIDxzdHJvbmc+RGVmaW5pY2nDsyBkZSBsYSBkaW1lbnNpw7M8L3N0cm9uZz4gZXMgZGVmaW5laXggZW4gPHN0cm9uZz5QZXIgaXRlcmFjacOzPC9zdHJvbmc+IGkgZWwgcGFyw6BtZXRyZSA8c3Ryb25nPkRpbWVuc2nDszwvc3Ryb25nPiBlcyBkZWZpbmVpeCBlbiA8c3Ryb25nPlN0ZFRpbWU8L3N0cm9uZz4uXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLUZpbHRlcl92YWx1ZV90YWcwQEBcIjogXCJWYWxvciBkZSBsYSBkaW1lbnNpw7MgZXNwZWNpZmljYWRhLiBBcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGVsIHBhcsOgbWV0cmUgPHN0cm9uZz5EZWZpbmljacOzIGRlIGxhIGRpbWVuc2nDszwvc3Ryb25nPiBlcyBkZWZpbmVpeCBlbiA8c3Ryb25nPlBlciB2YWxvcnM8L3N0cm9uZz4uXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLUZpbHRlcl92YXJpYWJsZXNfdGFnMEBAXCI6IFwiVmFyaWFibGVzIHF1ZSBzJ2luY2xvdXJhbiBhIGxhIGNhcGEgcsOgc3RlciBtdWx0aWRpbWVuc2lvbmFsIGRlIHNvcnRpZGEuIFNpIG5vIHMnaGEgZXNwZWNpZmljYXQgY2FwIHZhcmlhYmxlLCBlcyBmYXLDoCBzZXJ2aXIgbGEgcHJpbWVyYS5cIixcblx0XCJAQE11bHRpZGltZW5zaW9uYWwtRmlsdGVyX2RpbWVuc2lvbmxlc3NfdGFnMEBAXCI6IFwiRXNwZWNpZmljYSBzaSBsYSBjYXBhIGhhIGRlIHRlbmlyIHZhbG9ycyBkZSBkaW1lbnNpw7MuIEFxdWVzdGEgb3BjacOzIG5vbcOpcyBlc3TDoCBkaXNwb25pYmxlIHNpIHMnaGEgc2VsZWNjaW9uYXQgdW4gc29sIHNlY3RvciBwZXIgY3JlYXIgdW5hIGNhcGEuXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLUZpbHRlcl9kaW1lbnNpb25sZXNzX3RhZzFAQFwiOiBcIkFjdGl2YXQ6IGxhIGNhcGEgbm8gdGluZHLDoCB2YWxvcnMgZGUgZGltZW5zacOzLlwiLFxuXHRcIkBATXVsdGlkaW1lbnNpb25hbC1GaWx0ZXJfZGltZW5zaW9ubGVzc190YWcyQEBcIjogXCJEZXNhY3RpdmF0OiBsYSBjYXBhIHRpbmRyw6AgdW4gdmFsb3IgZGUgZGltZW5zacOzLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQE11bHRpZGltZW5zaW9uYWwtUmFzdGVyX2ludGVycG9sYXRpb25jZWxsc2l6ZV90YWcwQEBcIjogXCJNaWRhIGRlIGNlbMK3bGEgZGVsIHLDoHN0ZXIgaW50ZXJwb2xhdC4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzICR7MX0uXCIsXG5cdFwiQEBNdWx0aWRpbWVuc2lvbmFsLVJhc3Rlcl9pbnRlcnBvbGF0aW9ubWV0aG9kX3RhZzBAQFwiOiBcIk3DqHRvZGUgZGUgcmVtb3N0cmVpZyB1dGlsaXR6YXQgcGVyIGludGVycG9sYXIgZGFkZXMgaXJyZWd1bGFycy5cIixcblx0XCJAQE11bHRpZGltZW5zaW9uYWwtUmFzdGVyX2ludGVycG9sYXRpb25tZXRob2RfdGFnMUBAXCI6IFwiPHN0cm9uZz5WZcOtIG3DqXMgcHJvcGVyPC9zdHJvbmc+OiBjYWxjdWxhIGVsIHZhbG9yIGRlbCBww614ZWwgZGUgc29ydGlkYSBtaXRqYW7Dp2FudCBlbCBww614ZWwgZCdlbnRyYWRhIG3DqXMgcHJvcGVyLiBTaSBubyBleGlzdGVpeCBjYXAgcMOteGVsIGQnb3JpZ2VuLCBubyBlcyBwb2Ryw6AgY3JlYXIgY2FwIHDDrXhlbCBub3UgYSBsYSBzb3J0aWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQE11bHRpZGltZW5zaW9uYWwtUmFzdGVyX2ludGVycG9sYXRpb25tZXRob2RfdGFnMkBAXCI6IFwiPHN0cm9uZz5TaW1wbGlmaWNhY2nDsyBsaW5lYWw8L3N0cm9uZz46IHV0aWxpdHphIHVuYSB4YXJ4YSBpcnJlZ3VsYXIgZGUgdHJpYW5nbGVzIGRlcyBkZWwgcHVudCBjZW50cmFsIGRlIGNhZGEgcMOteGVsIGRlbCByw6BzdGVyIGlycmVndWxhciBwZXIgaW50ZXJwb2xhciB1bmEgc3VwZXJmw61jaWUgcXVlLCBhbGVzaG9yZXMsIGVzIGNvbnZlcnRlaXggZW4gdW4gcsOgc3RlciByZWd1bGFyLlwiLFxuXHRcIkBATXVsdGlkaW1lbnNpb25hbC1SYXN0ZXJfaW50ZXJwb2xhdGlvbm1ldGhvZF90YWczQEBcIjogXCI8c3Ryb25nPlZlw60gbmF0dXJhbDwvc3Ryb25nPjogY2VyY2EgZWwgc3ViY29uanVudCBtw6lzIHByb3BlciBkZSBsZXMgbW9zdHJlcyBkJ2VudHJhZGEgYSB1biBwdW50IGRlIGNvbnN1bHRhIGkgaGkgYXBsaWNhIHBvbmRlcmFjaW9ucyBiYXNhZGVzIGVuIMOgcmVlcyBwcm9wb3JjaW9uYWRlcyBwZXIgaW50ZXJwb2xhciB1biB2YWxvci5cIixcblx0XCJAQE11bHRpZGltZW5zaW9uYWwtUmFzdGVyX2ludGVycG9sYXRpb25tZXRob2RfdGFnNEBAXCI6IFwiPHN0cm9uZz5Qb25kZXJhY2nDsyBkZSBkaXN0w6BuY2lhIGludmVyc2E8L3N0cm9uZz46IGRldGVybWluYSBlbHMgdmFsb3JzIGRlIHDDrXhlbCBtaXRqYW7Dp2FudCB1bmEgY29tYmluYWNpw7MgcG9uZGVyYWRhIGRlIG1hbmVyYSBsaW5lYWwgZCd1biBjb25qdW50IGRlIHB1bnRzIG8gY2VswrdsZXMgZGUgbW9zdHJhLiBMYSBmdW5jacOzIGRlIHBvbmRlcmFjacOzIMOpcyBsYSBpbnZlcnNhIGRlIGxhIGRpc3TDoG5jaWEgZGVzIGRlbHMgcMOteGVscyBvIGVscyBwdW50cyBjb25lZ3V0cy5cIixcblx0XCJAQE11bHRpZGltZW5zaW9uYWwtUmFzdGVyX3Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIG11bHRpZGltZW5zaW9uYWwgZCdlbnRyYWRhLlwiLFxuXHRcIkBATXVsdGlkaW1lbnNpb25hbC1SYXN0ZXJfdmFyaWFibGVzX3RhZzBAQFwiOiBcIlZhcmlhYmxlIG8gdmFyaWFibGVzIHF1ZSBzJ2luY2xvdXJhbiBhIGxhIGNhcGEgcsOgc3RlciBtdWx0aWRpbWVuc2lvbmFsLlwiLFxuXHRcIkBAUmFuZG9tX2Rpc3RyaWJ1dGlvbl90YWcwQEBcIjogXCJFc3BlY2lmaXF1ZXUgZWwgbcOodG9kZSBkZSBkaXN0cmlidWNpw7MgZGUgdmFsb3JzIGFsZWF0b3JpcyBxdWUgdm9sZXUgdXRpbGl0emFyLlwiLFxuXHRcIkBAUmFuZG9tX2Rpc3RyaWJ1dGlvbl90YWcxQEBcIjogXCI8c3Ryb25nPlVuaWZvcm1lPC9zdHJvbmc+IChNw61uaW0sIE3DoHhpbSk6IHVuYSBkaXN0cmlidWNpw7MgdW5pZm9ybWUgYW1iIHVuIGludGVydmFsIGRlZmluaXQuIEVscyB2YWxvcnMgcGVyIGRlZmVjdGUgc8OzbiAwIHBlciBhIE3DrW5pbSBpIDEgcGVyIGEgTcOgeGltLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQFJhbmRvbV9kaXN0cmlidXRpb25fdGFnMkBAXCI6IFwiPHN0cm9uZz5FbnRlcjwvc3Ryb25nPiAoTcOtbmltLCBNw6B4aW0pOiB1bmEgZGlzdHJpYnVjacOzIGQnZW50ZXJzIGFtYiB1biBpbnRlcnZhbCBkZWZpbml0LiBFbHMgdmFsb3JzIHBlciBkZWZlY3RlIHPDs24gMSBwZXIgYSBNw61uaW0gaSAxMCBwZXIgYSBNw6B4aW0uXCIsXG5cdFwiQEBSYW5kb21fZGlzdHJpYnV0aW9uX3RhZzNAQFwiOiBcIjxzdHJvbmc+Tm9ybWFsPC9zdHJvbmc+IChNaXRqYW5hLCBEZXN2aWFjacOzIGVzdMOgbmRhcmQpOiB1bmEgZGlzdHJpYnVjacOzIG5vcm1hbCBhbWIgdW5hIG1pdGphbmEgZGVmaW5pZGEgaSB1bmEgZGVzdmlhY2nDsyBlc3TDoG5kYXJkLiBFbHMgdmFsb3JzIHBlciBkZWZlY3RlIHPDs24gMCBwZXIgYSBNaXRqYW5hIGkgMSBwZXIgYSBEZXN2aWFjacOzIGVzdMOgbmRhcmQuXCIsXG5cdFwiQEBSYW5kb21fZGlzdHJpYnV0aW9uX3RhZzRAQFwiOiBcIjxzdHJvbmc+RXhwb25lbmNpYWw8L3N0cm9uZz4gKE1pdGphbmEpOiB1bmEgZGlzdHJpYnVjacOzIGV4cG9uZW5jaWFsIGFtYiB1bmEgbWl0amFuYSBkZWZpbmlkYS4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIDEuXCIsXG5cdFwiQEBSYW5kb21fZGlzdHJpYnV0aW9uX3RhZzVAQFwiOiBcIjxzdHJvbmc+UG9pc3Nvbjwvc3Ryb25nPiAoTWl0amFuYSk6IHVuYSBkaXN0cmlidWNpw7MgZGUgUG9pc3NvbiBhbWIgdW5hIG1pdGphbmEgZGVmaW5pZGEuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAxLlwiLFxuXHRcIkBAUmFuZG9tX2Rpc3RyaWJ1dGlvbl90YWc2QEBcIjogXCI8c3Ryb25nPkdhbW1hPC9zdHJvbmc+IChBbGZhLCBCZXRhKTogdW5hIGRpc3RyaWJ1Y2nDsyBnYW1tYSBhbWIgdW4gdmFsb3IgYWxmYSBpIHVuIHZhbG9yIGJldGEgZGVmaW5pdHMuIEVscyB2YWxvcnMgcGVyIGRlZmVjdGUgc8OzbiAxIHBlciBhIEFsZmEgaSAxIHBlciBhIEJldGEuXCIsXG5cdFwiQEBSYW5kb21fZGlzdHJpYnV0aW9uX3RhZzdAQFwiOiBcIjxzdHJvbmc+Qmlub21pYWw8L3N0cm9uZz4gKE4sIFByb2JhYmlsaXRhdCk6IHVuYSBkaXN0cmlidWNpw7MgYmlub21pYWwgYW1iIHVuIHZhbG9yIE4gaSB1bmEgcHJvYmFiaWxpdGF0IGRlZmluaXRzLiBFbHMgdmFsb3JzIHBlciBkZWZlY3RlIHPDs24gMTAgcGVyIGEgTiBpIDAsNSBwZXIgYSBQcm9iYWJpbGl0YXQuXCIsXG5cdFwiQEBSYW5kb21fZGlzdHJpYnV0aW9uX3RhZzhAQFwiOiBcIjxzdHJvbmc+R2VvbcOodHJpY2E8L3N0cm9uZz4gKFByb2JhYmlsaXRhdCk6IHVuYSBkaXN0cmlidWNpw7MgZ2VvbcOodHJpY2EgYW1iIHVuYSBwcm9iYWJpbGl0YXQgZGVmaW5pZGEuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLDUuXCIsXG5cdFwiQEBSYW5kb21fZGlzdHJpYnV0aW9uX3RhZzlAQFwiOiBcIjxzdHJvbmc+Qmlub21pYWwgbmVnYXRpdmE8L3N0cm9uZz4gKHIsIFByb2JhYmlsaXRhdCk6IHVuYSBkaXN0cmlidWNpw7MgZGUgUGFzY2FsIGFtYiB1biB2YWxvciByIGkgdW5hIHByb2JhYmlsaXRhdCBkZWZpbml0cy4gRWxzIHZhbG9ycyBwZXIgZGVmZWN0ZSBzw7NuIDEwLDAgcGVyIGEgciBpIDAsNSBwZXIgYSBQcm9iYWJpbGl0YXQuXCIsXG5cdFwiQEBSYW5kb21fcmFuZG9tbnVtYmVyZ2VuZXJhdG9yX3RhZzBAQFwiOiBcIkVzcGVjaWZpcXVldSBsJ2FsZ29yaXRtZSBkZSBnZW5lcmFjacOzIGFsZWF0w7JyaWEgcXVlIGZhIHNlcnZpciBlbCBwdW50IGQnb3JpZ2VuIGkgbGEgZGlzdHJpYnVjacOzIHBlciBwcm9kdWlyIHVuYSBzZXHDvMOobmNpYSBkZSBub21icmVzIGFsZWF0b3Jpcy4gTGVzIG9wY2lvbnMgZGlzcG9uaWJsZXMgc8OzbiBsZXMgc2Vnw7xlbnRzOlwiLFxuXHRcIkBAUmFuZG9tX3JhbmRvbW51bWJlcmdlbmVyYXRvcl90YWcxQEBcIjogXCJSYW5kIEMgZXN0w6FuZGFyXCIsXG5cdFwiQEBSYW5kb21fcmFuZG9tbnVtYmVyZ2VuZXJhdG9yX3RhZzJAQFwiOiBcIkFsZ29yaXRtbyA1OTkgY2FwdHVyYWRvIHBvciBBQ01cIixcblx0XCJAQFJhbmRvbV9yYW5kb21udW1iZXJnZW5lcmF0b3JfdGFnM0BAXCI6IFwiTWVyc2VubmUgVHdpc3RlclwiLFxuXHRcIkBAUmFuZG9tX3JhbmRvbW51bWJlcmdlbmVyYXRvcl90YWc0QEBcIjogXCJFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgTWVyc2VubmUgVHdpc3Rlci5cIixcblx0XCJAQFJhbmRvbV9yYXN0ZXJpbmZvX3RhZzBAQFwiOiBcIlV0aWxpdHpldSBlbCBib3TDsyA8c3Ryb25nPkNhcnJlZ2EgZWwgcsOgc3RlciBkZSBsYSBwbGFudGlsbGE8L3N0cm9uZz4gcGVyIGNhcnJlZ2FyIHVuYSBwbGFudGlsbGEgZGVzIGQndW4gZGlyZWN0b3JpIG8gdW4gcG9ydGFsLlwiLFxuXHRcIkBAUmFuZG9tX3NlZWRfdGFnMEBAXCI6IFwiRWwgdmFsb3IgZCdpbmljaWFsaXR6YWNpw7Mgw6lzIHVuIHZhbG9yIGVudGVyIHF1ZSBlcyBmYSBzZXJ2aXIgcGVyIGluaWNpYXIgZWwgZ2VuZXJhZG9yIGRlIG5vbWJyZXMgYWxlYXRvcmlzLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMS5cIixcblx0XCJAQFNocmlua19udW1iZXJvZmNlbGxzX3RhZzBAQFwiOiBcIk5vbWJyZSBkZSBjZWzCt2xlcyBwZWwgcXVlIGVzIHJlZHVpcsOgIGNhZGFzY3VuYSBkZSBsZXMgem9uZXMgZXNwZWNpZmljYWRlcy5cIixcblx0XCJAQFNocmlua19udW1iZXJvZmNlbGxzX3RhZzFAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciB1biBlbnRlciBpIHBvdCBzZXIgMSBvIHN1cGVyaW9yLlwiLFxuXHRcIkBAU2hyaW5rX3Jhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIGQnZW50cmFkYSBwZXIgYWwgcXVhbCBlcyByZWR1aXJhbiBsZXMgem9uZXMgaWRlbnRpZmljYWRlcy5cIixcblx0XCJAQFNocmlua19yYXN0ZXJfdGFnMUBAXCI6IFwiSGEgZGUgc2VyIGRlIHRpcHVzIGVudGVyLlwiLFxuXHRcIkBAU2hyaW5rX3pvbmV2YWx1ZXNfdGFnMEBAXCI6IFwiTGxpc3RhIGRlIHpvbmVzIHF1ZSBlcyByZWR1aXJhbi5cIixcblx0XCJAQFNocmlua196b25ldmFsdWVzX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGUgem9uYSBoYW4gZGUgc2VyIGVudGVycyBpIHBvZGVuIGVzdGFyIGVuIHF1YWxzZXZvbCBvcmRyZS5cIixcblx0XCJAQFNocmlua196b25ldmFsdWVzX3RhZzJAQFwiOiBcIlBlciBlc3BlY2lmaWNhciBkaXZlcnNlcyB6b25lcywgZmV1IHNlcnZpciB1biBlc3BhaSBwZXIgc2VwYXJhciBlbHMgdmFsb3JzIGRlIHpvbmEuXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fY29zdHJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIHF1ZSBkZWZpbmVpeCBlbCBjb3N0IG8gbGEgaW1wZWTDoG5jaWEgZGVsIG1vdmltZW50IHBsYW5pbcOodHJpYyBhIHRyYXbDqXMgZGUgY2FkYSBjZWzCt2xhLiBFbCB2YWxvciBkZSBjYWRhIHViaWNhY2nDsyBkZSBjZWzCt2xhIHJlcHJlc2VudGEgbGEgZGlzdMOgbmNpYSBkZSBjb3N0IHBlciB1bml0YXQgcGVyIG1vdXJlJ3MgYSB0cmF2w6lzIGRlIGxhIGNlbMK3bGEuIENhZGEgdmFsb3IgZCd1YmljYWNpw7MgZGUgY2VswrdsYSBlcyBtdWx0aXBsaWNhIHBlciBsYSByZXNvbHVjacOzIGRlIGxhIGNlbMK3bGEgaSB0YW1iw6kgZXMgY29tcGVuc2EgZWwgbW92aW1lbnQgZGlhZ29uYWwgcGVyIG9idGVuaXIgZWwgY29zdCB0b3RhbCBkZSBwYXNzYXIgYSB0cmF2w6lzIGRlIGxhIGNlbMK3bGEuXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fY29zdHJhc3Rlcl90YWcxQEBcIjogXCJFbHMgdmFsb3JzIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZGUgY29zdG9zPC9zdHJvbmc+IHBvZGVuIHNlciBlbnRlcnMgbyBwdW50cyBmbG90YW50cywgcGVyw7Igbm8gcG9kZW4gc2VyIG5lZ2F0aXVzIG5pIHplcm8uXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fZGlzdGFuY2VtZXRob2RfdGFnMEBAXCI6IFwiRGV0ZXJtaW5hIHNpIGVzIGNhbGN1bGFyw6AgbGEgZGlzdMOgbmNpYSBtaXRqYW7Dp2FudCB1biBtw6h0b2RlIHBsYSAodGVycmEgcGxhbmEpIG8gZ2VvZMOoc2ljIChlbMK3bGlwc29pZGUpLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX2Rpc3RhbmNlbWV0aG9kX3RhZzFAQFwiOiBcIlBsYTogbGVzIG1lc3VyZXMgcGxhbmVzIHV0aWxpdHplbiBtYXRlbcOgdGlxdWVzIGNhcnRlc2lhbmVzIDJEIHBlciBjYWxjdWxhciBsYSBsb25naXR1ZCBpIGwnw6ByZWEuIEwnb3BjacOzIG5vbcOpcyBlc3TDoCBkaXNwb25pYmxlIHF1YW4gZXMgbWVzdXJhIGVuIHVuIHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgcHJvamVjdGFkZXMsIGkgZWwgcGxhIDJEIGQnYXF1ZXN0IHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgcyd1dGlsaXR6YXLDoCBjb20gYSBiYXNlIHBlciBhIGxlcyBtZXN1cmVzLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX2Rpc3RhbmNlbWV0aG9kX3RhZzJAQFwiOiBcIkdlb2TDqHNpYzogbMOtbmlhIG3DqXMgY3VydGEgZW50cmUgZG9zIHB1bnRzIGEgbGEgc3VwZXJmw61jaWUgdGVycmVzdHJlIGVuIHVuIGVzZmVyb2lkZSAoZWzCt2xpcHNvaWRlKS4gUGVyIHRhbnQsIGluZGVwZW5kZW50bWVudCBkZSBsYSBwcm9qZWNjacOzIGQnZW50cmFkYSBvIGRlIHNvcnRpZGEsIGVscyByZXN1bHRhdHMgbm8gY2Fudmllbi5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9kaXN0YW5jZW1ldGhvZF90YWczQEBcIjogXCI8c3Ryb25nPk5vdGE6PC9zdHJvbmc+IHVuYSBsw61uaWEgZ2VvZMOoc2ljYSBlcyBwb3QgdXRpbGl0emFyIHF1YW4gdm9sZXUgZGV0ZXJtaW5hciBsYSBkaXN0w6BuY2lhIG3DqXMgY3VydGEgZW50cmUgZHVlcyBjaXV0YXRzIHBlciBkZWZpbmlyIHVuYSBydXRhIGRlIHZvbC4gVGFtYsOpIGVzIGNvbmVpeCBjb20gYSBsw61uaWEgb3J0b2Ryw7JtaWNhIHNpIGVzIGJhc2EgZW4gdW5hIGVzZmVyYSBlbiBsbG9jIGRlIGJhc2FyLXNlIGVuIHVuIGVswrdsaXBzb2lkZS5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9nZW5lcmF0ZWJhY2tkaXJlY3Rpb25iYW5kYXNhZGRpdGlvbmFsYmFuZGlub3V0cHV0X3RhZzBAQFwiOiBcIkRldGVybWluYSBzaSBub23DqXMgZXMgY3JlYSBlbCByw6BzdGVyIGQnYWN1bXVsYWNpw7MgbyBiw6kgc2kgZXMgY3JlYSB1biByw6BzdGVyIG11bHRpYmFuZGEgZm9ybWF0IHBlciB1biByw6BzdGVyIGQnYWN1bXVsYWNpw7MgZGUgZGlzdMOgbmNpYSBpIHVuIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGludmVyc2EuXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fZ2VuZXJhdGViYWNrZGlyZWN0aW9uYmFuZGFzYWRkaXRpb25hbGJhbmRpbm91dHB1dF90YWcxQEBcIjogXCJEZXNhY3RpdmF0OiBlbCByZXN1bHRhdCDDqXMgZWwgcsOgc3RlciBkJ2FjdW11bGFjacOzIGRlIGRpc3TDoG5jaWEuIMOJcyB1biByZXN1bHRhdCBkZSBiYW5kYSDDum5pY2EuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX2dlbmVyYXRlYmFja2RpcmVjdGlvbmJhbmRhc2FkZGl0aW9uYWxiYW5kaW5vdXRwdXRfdGFnMkBAXCI6IFwiQWN0aXZhdDogZXMgY3JlYSB1biByZXN1bHRhdCBtdWx0aWJhbmRhLiBMYSBwcmltZXJhIGJhbmRhIMOpcyBlbCByw6BzdGVyIGQnYWN1bXVsYWNpw7MgZGUgZGlzdMOgbmNpYSBpIGxhIHNlZ29uYSBiYW5kYSDDqXMgZWwgcsOgc3RlciBkZSBkaXJlY2Npw7MgaW52ZXJzYS5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9nZW5lcmF0ZWJhY2tkaXJlY3Rpb25iYW5kYXNhZGRpdGlvbmFsYmFuZGlub3V0cHV0X3RhZzNAQFwiOiBcIkVsIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGludmVyc2EgY2FsY3VsYSBwZXIgYSBjYWRhIGNlbMK3bGEgbGEgZGlyZWNjacOzIGVuIGdyYXVzIGEgbGEgY2VswrdsYSB2ZcOvbmEsIGEgbcOpcyBkZSBsYSBydXRhIG3DqXMgY3VydGEgZGUgdG9ybmFkYSBhIGxhIGZvbnQgbcOpcyBwcm9wZXJhLCBhIGxhIHZlZ2FkYSBxdWUgZXZpdGEgbGVzIGJhcnJlcmVzLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX2hvcml6b250YWxmYWN0b3JfdGFnMEBAXCI6IFwiPHA+RGVmaW5laXggbGEgcmVsYWNpw7MgZW50cmUgZWwgZmFjdG9yIGRlIGNvc3QgaG9yaXR6b250YWwgaSBsJ2FuZ2xlIGRlIG1vdmltZW50IHJlbGF0aXUgaG9yaXR6b250YWwgKEhSTUEpLjwvcD48cD5IaSBoYSBkaXZlcnNvcyBmYWN0b3JzIGFtYiBtb2RpZmljYWRvcnMgcXVlIGlkZW50aWZpcXVlbiB1biBncsOgZmljIGRlIGZhY3RvciB2ZXJ0aWNhbCBkZWZpbml0LiBBIG3DqXMsIGVzIHBvdCB1dGlsaXR6YXIgdW5hIHRhdWxhIHBlciBjcmVhciB1biBncsOgZmljIHBlcnNvbmFsaXR6YXQuIEVscyBncsOgZmljcyBzJ3V0aWxpdHplbiBwZXIgaWRlbnRpZmljYXIgZWwgZmFjdG9yIHZlcnRpY2FsIHV0aWxpdHphdCBwZXIgY2FsY3VsYXIgZWwgY29zdCB0b3RhbCBkZWwgbW92aW1lbnQgYSB1bmEgY2VswrdsYSB2ZcOvbmEuPC9wPjxwPkEgbGVzIGV4cGxpY2FjaW9ucyBzZWfDvGVudHMgcyd1dGlsaXR6ZW4gZG9zIGFjcsOybmltczogSEYgaSBIUk1BLiBIRiBzaWduaWZpY2EgXFxcImZhY3RvciBob3JpdHpvbnRhbFxcXCIsIHF1ZSBkZWZpbmVpeCBsYSBkaWZpY3VsdGF0IGhvcml0em9udGFsIHF1ZSBzJ2V4cGVyaW1lbnRhIGVuIHBhc3NhciBkJ3VuYSBjZWzCt2xhIGEgbGEgc2Vnw7xlbnQuIEhSTUEgc2lnbmlmaWNhIFxcXCJhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IGhvcml0em9udGFsXFxcIiwgaSBpZGVudGlmaWNhIGwnYW5nbGUgZW50cmUgbGEgZGlyZWNjacOzIGhvcml0em9udGFsIGQndW5hIGNlbMK3bGEgaSBsYSBkaXJlY2Npw7MgZGVsIG1vdmltZW50LjwvcD48cD5FbHMgdGlwdXMgPHN0cm9uZz5GYWN0b3IgaG9yaXR6b250YWw8L3N0cm9uZz4gc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkJpbmFyaTwvc3Ryb25nPjogaW5kaWNhIHF1ZSwgc2kgSFJNQSDDqXMgaW5mZXJpb3IgYSBsJ2FuZ2xlIGRlIHRhbGwsIGwnSEYgZXMgZGVmaW5laXggZW4gZWwgdmFsb3IgYXNzb2NpYXQgYW1iIGVsIGZhY3RvciB6ZXJvOyBhbHRyYW1lbnQsIMOpcyBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+RW5kYXZhbnQ8L3N0cm9uZz46IGVzdGFibGVpeCBxdWUgbm9tw6lzIGVzIHBlcm1ldCBlbCBtb3ZpbWVudCBjYXAgZW5kYXZhbnQuIEwnSFJNQSBoYSBkZSBzZXIgc3VwZXJpb3IgbyBpZ3VhbCBhIDAgaSBpbmZlcmlvciBhIDkwIGdyYXVzICgwICZsdDs9IEhSTUEgJmx0OyA5MCkuIFNpIGwnSFJNQSDDqXMgc3VwZXJpb3IgYSAwIGkgaW5mZXJpb3IgYSA0NSBncmF1cywgbCdIRiBkZSBsYSBjZWzCt2xhIGVzIGRlZmluZWl4IGVuIGVsIHZhbG9yIGFzc29jaWF0IGFsIGZhY3RvciB6ZXJvLiBTaSBsJ0hSTUEgw6lzIHN1cGVyaW9yIG8gaWd1YWwgYSA0NSBncmF1cywgcyd1dGlsaXR6YSBlbCB2YWxvciBtb2RpZmljYWRvciBkZWwgdmFsb3IgbGF0ZXJhbC4gTCdIRiBwZXIgYSBxdWFsc2V2b2wgdmFsb3IgZCdIUk1BIGlndWFsIG8gc3VwZXJpb3IgYSA5MCBlcyBkZWZpbmVpeCBlbiBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSBsJ0hGIMOpcyB1bmEgZnVuY2nDsyBsaW5lYWwgZGUgbCdIUk1BLjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsIGludmVyczwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgbCdIRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGludmVyc2EgZGUgbCdIUk1BLjwvbGk+PGxpPjxzdHJvbmc+VGF1bGE8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgZml0eGVyIGRlIHRhdWxhIHF1ZSBzJ3V0aWxpdHphcsOgIHBlciBkZWZpbmlyIGVsIGdyw6BmaWMgZGUgZmFjdG9yIGhvcml0em9udGFsIGVtcHJhdCBwZXIgZGV0ZXJtaW5hciBlbHMgSEYuPC9saT48L3VsPjxwPkVscyBtb2RpZmljYWRvcnMgcGVyIGFscyBmYWN0b3JzIGhvcml0em9udGFscyBzw7NuOjwvcD48dWw+PGxpPjxzdHJvbmc+RmFjdG9yIHplcm88L3N0cm9uZz46IGZhY3RvciBob3JpdHpvbnRhbCBxdWUgY2FsIHV0aWxpdHphciBxdWFuIEhSTUEgw6lzIHplcm8uIEFxdWVzdCBmYWN0b3IgcG9zaWNpb25hIGxhIGludGVyY2VwY2nDsyBcXFwieVxcXCIgcGVyIGEgcXVhbHNldm9sIGRlIGxlcyBmdW5jaW9ucyBkZSBmYWN0b3IgaG9yaXR6b250YWwuPC9saT48bGk+PHN0cm9uZz5BbmdsZSBkZSB0YWxsPC9zdHJvbmc+OiBkZWZpbmVpeCBsJ2FuZ2xlIGQnSFJNQSBtw6lzIGVubGzDoCBkZWwgcXVhbCBsJ0hGIGVzIGRlZmluaXLDoCBlbiBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+UGVuZGVudDwvc3Ryb25nPjogZXN0YWJsZWl4IGVsIHBlbmRlbnQgZGUgbGEgbMOtbmlhIHJlY3RhIHV0aWxpdHphZGEgYW1iIGxlcyBwYXJhdWxlcyBjbGF1IGRlIGZhY3RvciBob3JpdHpvbnRhbCA8c3Ryb25nPkxpbmVhbDwvc3Ryb25nPiBpIDxzdHJvbmc+TGluZWFsIGludmVyczwvc3Ryb25nPi4gRWwgcGVuZGVudCBzJ2VzcGVjaWZpY2EgY29tIHVuYSBmcmFjY2nDsyBkZSBsYSBwdWphZGEgc29icmUgbGEgYmFpeGFkYSAocGVyIGV4ZW1wbGUsIHVuIHBlbmRlbnQgZGVsIDQ1JSDDqXMgMS80NSwgcXVlIHMnaW50cm9kdWVpeCBjb20gYSAwLDAyMjIyKS48L2xpPjxsaT48c3Ryb25nPlZhbG9yIGxhdGVyYWw8L3N0cm9uZz46IGVzdGFibGVpeCBsJ0hGIHF1YW4gbCdIUk1BIMOpcyBzdXBlcmlvciBvIGlndWFsIGEgNDUgZ3JhdXMgaSDDqXMgaW5mZXJpb3IgYSA5MCBncmF1cyBxdWFuIHMnZXNwZWNpZmljYSBsYSBwYXJhdWxhIGNsYXUgZGUgZmFjdG9yIGhvcml0em9udGFsIDxzdHJvbmc+RW5kYXZhbnQ8L3N0cm9uZz4uPC9saT48bGk+PHN0cm9uZz5Ob20gZGUgdGF1bGE8L3N0cm9uZz46IGlkZW50aWZpY2EgZWwgbm9tIGRlIGxhIHRhdWxhIHF1ZSBkZWZpbmVpeCBsJ0hGLjwvbGk+PC91bD5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9ob3Jpem9udGFscmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgcXVlIGRlZmluZWl4IGxhIGRpcmVjY2nDsyBob3JpdHpvbnRhbCBhIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9ob3Jpem9udGFscmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGVsIHLDoHN0ZXIgaGFuIGRlIHNlciBlbnRlcnMgZGUgMCBhIDM2MCwgYW1iIDAgZ3JhdXMgYWwgbm9yZCBvIGNhcCBhIGxhIHBhcnQgc3VwZXJpb3IgZGUgbGEgcGFudGFsbGEsIHF1ZSBhdWdtZW50aW4gZW4gc2VudGl0IGhvcmFyaS4gTGVzIMOgcmVlcyBwbGFuZXMgaGFuIGRlIHRlbmlyIGFzc2lnbmF0IHVuIHZhbG9yIGRlIC0xLiBFbHMgdmFsb3JzIGVuIGNhZGEgdWJpY2FjacOzIHMndXRpbGl0emFyYW4ganVudGFtZW50IGFtYiBlbCA8c3Ryb25nPmZhY3RvciBob3JpdHpvbnRhbDwvc3Ryb25nPiBwZXIgZGV0ZXJtaW5hciBlbCBjb3N0IGhvcml0em9udGFsIHF1ZSBlcyBwcm9kdWVpeCBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIGxlcyB2ZcOvbmVzLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX2luaXRpYWxhY2N1bXVsYXRpb25fdGFnMEBAXCI6IFwiQ29zdCBhY3VtdWxhdGl1IGluaWNpYWwgcGVyIGluaWNpYXIgZWwgY8OgbGN1bCBkZWwgY29zdC4gQXF1ZXN0IHBhcsOgbWV0cmUgcGVybWV0IGwnZXNwZWNpZmljYWNpw7MgZGVsIGNvc3QgZml4IGFzc29jaWF0IGEgdW4gb3JpZ2VuLiBFbiBsbG9jIGRlIGNvbWVuw6dhciBhbWIgdW4gY29zdCBkZSAwLCBsJ2FsZ29yaXRtZSBkZSBjb3N0IGhvIGZhcsOgIGFtYiBlbCB2YWxvciBlc3BlY2lmaWNhdC5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9pbml0aWFsYWNjdW11bGF0aW9uX3RhZzFAQFwiOiBcIlBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBlcyBwb2RlbiB1dGlsaXR6YXIgdW4gdmFsb3IgbnVtw6hyaWMgKGRvYmxlKSBvIHVuIGNhbXAgZGVsIDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9pbml0aWFsYWNjdW11bGF0aW9uX3RhZzJAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciB6ZXJvIG8gc3VwZXJpb3IuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX21heGltdW1hY2N1bXVsYXRpb25fdGFnMEBAXCI6IFwiRGVmaW5laXggZWwgY29zdCBhY3VtdWxhdGl1IG3DoHhpbSBkZWwgdmlhdGdlciBkJ3VuIG9yaWdlbi4gRWxzIGPDoGxjdWxzIGRlIGNvc3QgY29udGludWVuIHBlciBhIGNhZGEgb3JpZ2VuIGZpbnMgYSBhc3NvbGlyIGxhIGNhcGFjaXRhdCBlc3BlY2lmaWNhZGEuXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fbWF4aW11bWFjY3VtdWxhdGlvbl90YWcxQEBcIjogXCJQZXIgYSBhcXVlc3QgcGFyw6BtZXRyZSwgZXMgcG9kZW4gdXRpbGl0emFyIHVuIHZhbG9yIG51bcOocmljIChkb2JsZSkgbyB1biBjYW1wIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fbWF4aW11bWFjY3VtdWxhdGlvbl90YWcyQEBcIjogXCJFbCB2YWxvciBoYSBkZSBzZXIgbcOpcyBncmFuIHF1ZSB6ZXJvLiBMYSBjYXBhY2l0YXQgcGVyIGRlZmVjdGUgw6lzIGFsIGxsaW5kYXIgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9tdWx0aXBsaWVydG9hcHBseXRvY29zdHNfdGFnMEBAXCI6IFwiTXVsdGlwbGljYWRvciBxdWUgcydhcGxpY2Fyw6AgYWxzIHZhbG9ycyBkZWxzIGNvc3Rvcy5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9tdWx0aXBsaWVydG9hcHBseXRvY29zdHNfdGFnMUBAXCI6IFwiQXF1ZXN0IHBhcsOgbWV0cmUgcGVybWV0IGNvbnRyb2xhciBlbCBtb2RlIGRlIHZpYXRnZSBvIGxhIG1hZ25pdHVkIGVuIHVuIG9yaWdlbi4gQ29tIG1ham9yIHNpZ3VpIGVsIG11bHRpcGxpY2Fkb3IsIG3DqXMgYWx0IHNlcsOgIGVsIGNvc3QgZGVsIG1vdmltZW50IGEgdHJhdsOpcyBkZSBjYWRhIGNlbMK3bGEuXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fbXVsdGlwbGllcnRvYXBwbHl0b2Nvc3RzX3RhZzJAQFwiOiBcIlBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBlcyBwb2RlbiB1dGlsaXR6YXIgdW4gdmFsb3IgbnVtw6hyaWMgKGRvYmxlKSBvIHVuIGNhbXAgZGVsIDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9tdWx0aXBsaWVydG9hcHBseXRvY29zdHNfdGFnM0BAXCI6IFwiRWxzIHZhbG9ycyBoYW4gZGUgc2VyIG3DqXMgZ3JhbnMgcXVlIHplcm8uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAxLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX3Jhc3RlcmJhcnJpZXJzX3RhZzBAQFwiOiBcIlLDoHN0ZXIgcXVlIGRlZmluZWl4IGxlcyBiYXJyZXJlcy5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9yYXN0ZXJiYXJyaWVyc190YWcxQEBcIjogXCJFbCBkYXRhc2V0IGhhIGRlIGNvbnRlbmlyIE5vRGF0YSBhbGzDoCBvbiBubyBoaSBoYSBiYXJyZXJlcy4gTGVzIGJhcnJlcmVzIGVzIHJlcHJlc2VudGVuIGFtYiB2YWxvcnMgdsOgbGlkcywgcXVlIGluY2xvdWVuIGVsIHplcm8uXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fcmFzdGVyYmFycmllcnNfdGFnMkBAXCI6IFwiTGVzIGJhcnJlcmVzIGVzIHBvZGVuIGRlZmluaXIgYW1iIHVuIGVudGVyIG8gdW4gcsOgc3RlciBkZSBwdW50IGZsb3RhbnQuXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fc291cmNlcmFzdGVyX3RhZzBAQFwiOiBcIlViaWNhY2lvbnMgZCdvcmlnZW4gZCdlbnRyYWRhLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX3NvdXJjZXJhc3Rlcl90YWcxQEBcIjogXCJBcXVlc3Qgw6lzIHVuIGRhdGFzZXQgcsOgc3RlciBxdWUgaWRlbnRpZmljYSBsZXMgY2VswrdsZXMgbyBsZXMgdWJpY2FjaW9ucyBkZXMgZGUgbGVzIHF1YWxzIHMnaGEgY2FsY3VsYXQgbGEgZGlzdMOgbmNpYSBkZSBtZW5vciBjb3N0IGFjdW11bGF0IGRlIGxhIHViaWNhY2nDsyBkZSBjYWRhIGNlbMK3bGEgZGUgc29ydGlkYS5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9zb3VyY2VyYXN0ZXJfdGFnMkBAXCI6IFwiUG90IHNlciBkZSB0aXB1cyBlbnRlciBvIHB1bnQgZmxvdGFudC5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl9zdXJmYWNlcmFzdGVyX3RhZzBAQFwiOiBcIlLDoHN0ZXIgcXVlIGRlZmluZWl4IGVscyB2YWxvcnMgZCdlbGV2YWNpw7MgYSBsYSB1YmljYWNpw7MgZGUgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX3N1cmZhY2VyYXN0ZXJfdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyBzJ3V0aWxpdHplbiBwZXIgY2FsY3VsYXIgbGEgZGlzdMOgbmNpYSBkZSBzdXBlcmbDrWNpZSByZWFsIGNvYmVydGEgZW4gcGFzc2FyIGVudHJlIGNlbMK3bGVzLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX3RyYXZlbGRpcmVjdGlvbl90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSBkaXJlY2Npw7MgZGVsIHZpYXRnZXIgZW4gYXBsaWNhciBlbCBmYWN0b3IgdmVydGljYWwsIGVsIGZhY3RvciBob3JpdHpvbnRhbCBpIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGRlIGwnb3JpZ2VuLlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX3RyYXZlbGRpcmVjdGlvbl90YWcxQEBcIjogXCI8c3Ryb25nPkRlcyBkZSBsJ29yaWdlbjwvc3Ryb25nPjogZWwgZmFjdG9yIHZlcnRpY2FsLCBlbCBmYWN0b3IgaG9yaXR6b250YWwgaSBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBkZSBsJ29yaWdlbiBzJ2FwbGljYXJhbiBjb21lbsOnYW50IHBlciBsJ29yaWdlbiBkJ2VudHJhZGEgaSBwYXNzYW50IGEgbGVzIGNlbMK3bGVzIHF1ZSBubyBzw7NuIGxhIGQnb3JpZ2VuLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl90cmF2ZWxkaXJlY3Rpb25fdGFnMkBAXCI6IFwiPHN0cm9uZz5GaW5zIGEgbCdvcmlnZW48L3N0cm9uZz46IGVsIGZhY3RvciB2ZXJ0aWNhbCwgZWwgZmFjdG9yIGhvcml0em9udGFsIGkgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgZGUgbCdvcmlnZW4gcydhcGxpY2FyYW4gY29tZW7Dp2FudCBwZXIgY2FkYSBjZWzCt2xhIHF1ZSBubyBzaWd1aSBsYSBkJ29yaWdlbiBpIHRvcm5hbnQgYSBsJ29yaWdlbiBkJ2VudHJhZGEuXCIsXG5cdFwiQEBEaXN0YW5jZS1BY2N1bXVsYXRpb25fdHJhdmVsZGlyZWN0aW9uX3RhZzNAQFwiOiBcIkVzcGVjaWZpcXVldSBsYSBwYXJhdWxhIGNsYXUgPHN0cm9uZz5EZXMgZGUgbCdvcmlnZW48L3N0cm9uZz4gbyA8c3Ryb25nPkZpbnMgYSBsJ29yaWdlbjwvc3Ryb25nPiwgcXVlIHMnYXBsaWNhcsOgIGEgdG90cyBlbHMgb3LDrWdlbnMgbyBlc3BlY2lmaXF1ZXUgdW4gY2FtcCBhbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4gcXVlIGNvbnRpbmd1aSBsZXMgcGFyYXVsZXMgY2xhdSBwZXIgaWRlbnRpZmljYXIgbGEgZGlyZWNjacOzIGRlIHZpYXRnZSBkZSBjYWRhIG9yaWdlbi4gQXF1ZXN0IGNhbXAgaGEgZGUgY29udGVuaXIgbGEgY2FkZW5hICR7RlJPTV9TT1VSQ0V9IG8gJHtUT19TT1VSQ0V9LlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX3ZlcnRpY2FsZmFjdG9yX3RhZzBAQFwiOiBcIjxwPkRlZmluZWl4IGxhIHJlbGFjacOzIGVudHJlIGVsIGZhY3RvciBkZSBjb3N0IHZlcnRpY2FsIGkgbCdhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IHZlcnRpY2FsIChWUk1BKS48L3A+PHA+SGkgaGEgZGl2ZXJzb3MgZmFjdG9ycyBhbWIgbW9kaWZpY2Fkb3JzIHF1ZSBpZGVudGlmaXF1ZW4gdW4gZ3LDoGZpYyBkZSBmYWN0b3IgdmVydGljYWwgZGVmaW5pdC4gQSBtw6lzLCBlcyBwb3QgdXRpbGl0emFyIHVuYSB0YXVsYSBwZXIgY3JlYXIgdW4gZ3LDoGZpYyBwZXJzb25hbGl0emF0LiBFbHMgZ3LDoGZpY3Mgcyd1dGlsaXR6ZW4gcGVyIGlkZW50aWZpY2FyIGVsIGZhY3RvciB2ZXJ0aWNhbCB1dGlsaXR6YXQgcGVyIGNhbGN1bGFyIGVsIGNvc3QgdG90YWwgZGVsIG1vdmltZW50IGEgdW5hIGNlbMK3bGEgdmXDr25hLjwvcD48cD5BIGxlcyBleHBsaWNhY2lvbnMgc2Vnw7xlbnRzIHMndXRpbGl0emVuIGRvcyBhY3LDsm5pbXM6IFZGIGkgVlJNQS4gVkYgc2lnbmlmaWNhIFxcXCJmYWN0b3IgdmVydGljYWxcXFwiLCBxdWUgZGVmaW5laXggbGEgZGlmaWN1bHRhdCB2ZXJ0aWNhbCBxdWUgcydleHBlcmltZW50YSBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIGxhIHNlZ8O8ZW50LiBWUk1BIHNpZ25pZmljYSBcXFwiYW5nbGUgZGUgbW92aW1lbnQgcmVsYXRpdSB2ZXJ0aWNhbFxcXCIsIGkgaWRlbnRpZmljYSBsJ2FuZ2xlIGQnaW5jbGluYWNpw7MgZW50cmUgbGEgY2VswrdsYSBkJ29yaWdlbiwgbyBwcm9jZXNzYW1lbnQsIGkgbGEgY2VswrdsYSBkZSBkZXN0aW5hY2nDsy5FbHMgdGlwdXMgPC9wPjxwPjxzdHJvbmc+RmFjdG9yIHZlcnRpY2FsPC9zdHJvbmc+IHPDs246PC9wPjx1bD48bGk+PHN0cm9uZz5CaW5hcmk8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlLCBzaSBlbCBWUk1BIMOpcyBtYWpvciBxdWUgbCdhbmdsZSBkZSB0YWxsIGJhaXggaSBtZW5vciBxdWUgbCdhbmdsZSBkZSB0YWxsIGFsdCwgZWwgVkYgZXMgZGVmaW5laXggZW4gZWwgdmFsb3IgYXNzb2NpYXQgYWwgZmFjdG9yIHplcm87IGFsdHJhbWVudCwgw6lzIGluZmluaXQuPC9saT48bGk+PHN0cm9uZz5MaW5lYWw8L3N0cm9uZz46IGluZGljYSBxdWUgZWwgVkYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBkZWwgVlJNQS48L2xpPjxsaT48c3Ryb25nPkxpbmVhbCBzaW3DqHRyaWM8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGVsIFZGIMOpcyB1bmEgZnVuY2nDsyBsaW5lYWwgZGVsIFZSTUEgYSBsYSBwYXJ0IG5lZ2F0aXZhIG8gcG9zaXRpdmEgZGVsIFZSTUEsIHJlc3BlY3RpdmFtZW50LCBpIGxlcyBkdWVzIGZ1bmNpb25zIGxpbmVhbHMgc8OzbiBzaW3DqHRyaXF1ZXMgcmVzcGVjdGUgZGUgbCdlaXggZGVsIFZGICh5KS48L2xpPjxsaT48c3Ryb25nPkxpbmVhbCBpbnZlcnM8L3N0cm9uZz46IGluZGljYSBxdWUgZWwgVkYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBpbnZlcnNhIGRlbCBWUk1BLjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsIGludmVycyBzaW3DqHRyaWM8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGVsIFZGIMOpcyB1bmEgZnVuY2nDsyBsaW5lYWwgaW52ZXJzYSBkZWwgVlJNQSBhIGxhIHBhcnQgbmVnYXRpdmEgbyBwb3NpdGl2YSBkZWwgVlJNQSwgcmVzcGVjdGl2YW1lbnQsIGkgbGVzIGR1ZXMgZnVuY2lvbnMgbGluZWFscyBzw7NuIHNpbcOodHJpcXVlcyByZXNwZWN0ZSBkZSBsJ2VpeCBkZWwgVkYgKHkpLjwvbGk+PGxpPjxzdHJvbmc+Q29zPC9zdHJvbmc+OiBpZGVudGlmaWNhIGVsIFZGIGNvbSBsYSBmdW5jacOzIGJhc2FkYSBlbiBlbCBjb3NpbnVzIGRlbCBWUk1BLjwvbGk+PGxpPjxzdHJvbmc+U2VjPC9zdHJvbmc+OiBpZGVudGlmaWNhIGVsIFZGIGNvbSBsYSBmdW5jacOzIGJhc2FkYSBlbiBsYSBzZWNhbnQgZGVsIFZSTUEuPC9saT48bGk+PHN0cm9uZz5Db3MtU2VjPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSBlbCBWRiDDqXMgbGEgZnVuY2nDsyBiYXNhZGEgZW4gZWwgY29zaW51cyBkZWwgVlJNQSBzaSBlbCBWUk1BIMOpcyBuZWdhdGl1IGkgbGEgZnVuY2nDsyBiYXNhZGEgZW4gbGEgc2VjYW50IGRlbCBWUk1BIHNpIGVsIFZSTUEgbm8gw6lzIG5lZ2F0aXUuPC9saT48bGk+PHN0cm9uZz5TZWMtQ29zPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSBlbCBWRiDDqXMgbGEgZnVuY2nDsyBiYXNhZGEgZW4gZWwgY29zaW51cyBkZWwgVlJNQSBzaSBlbCBWUk1BIMOpcyBuZWdhdGl1IGkgbGEgZnVuY2nDsyBiYXNhZGEgZW4gbGEgc2VjYW50IGRlbCBWUk1BIHNpIGVsIFZSTUEgbm8gw6lzIG5lZ2F0aXUuPC9saT48bGk+PHN0cm9uZz5UYXVsYTwvc3Ryb25nPjogaWRlbnRpZmljYSBxdWUgcyd1dGlsaXR6YXLDoCB1biBmaXR4ZXIgZGUgdGF1bGEgcGVyIGRlZmluaXIgZWwgZ3LDoGZpYyBkZSBmYWN0b3IgdmVydGljYWwgdXRpbGl0emF0IHBlciBkZXRlcm1pbmFyIGVscyBWRi48L2xpPjwvdWw+PHA+QWxndW5zIG1vZGlmaWNhZG9ycyBwZXIgYSBsZXMgcGFyYXVsZXMgY2xhdXMgdmVydGljYWxzIHPDs246PC9wPjx1bD48bGk+PHN0cm9uZz5GYWN0b3IgemVybzwvc3Ryb25nPjogZXN0YWJsZWl4IGVsIGZhY3RvciB2ZXJ0aWNhbCB1dGlsaXR6YXQgc2kgZWwgVlJNQSDDqXMgemVyby4gQXF1ZXN0IGZhY3RvciBjb2zCt2xvY2EgbGEgaW50ZXJjZXBjacOzIHkgZGUgbGEgZnVuY2nDsyBlc3BlY2lmaWNhZGEuIFBlciBkZWZpbmljacOzLCBlbCBmYWN0b3IgemVybyBubyDDqXMgYXBsaWNhYmxlIGEgY2FwIGRlIGxlcyBmdW5jaW9ucyB2ZXJ0aWNhbHMgdHJpZ29ub23DqHRyaXF1ZXMgKENPUywgU0VDLCBDT1MtU0VDIG8gU0VDLUNPUykuIEFxdWVzdGVzIGZ1bmNpb25zIGRlZmluZWl4ZW4gbGEgaW50ZXJjZXBjacOzIHkuPC9saT48bGk+PHN0cm9uZz5BbmdsZSBkZSB0YWxsIGJhaXg8L3N0cm9uZz46IGRlZmluZWl4IGwnYW5nbGUgVlJNQSBwZXIgc290YSBkZWwgcXVhbCBlcyBkZWZpbmlyw6AgdW4gVkYgaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkFuZ2xlIGRlIHRhbGwgYWx0PC9zdHJvbmc+OiBkZWZpbmVpeCBsJ2FuZ2xlIFZSTUEgcGVyIHNvYnJlIGRlbCBxdWFsIGVzIGRlZmluaXLDoCB1biBWRiBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+UGVuZGVudDwvc3Ryb25nPjogZXN0YWJsZWl4IGVsIHBlbmRlbnQgZGUgbGEgbMOtbmlhIHJlY3RhIHV0aWxpdHphZGEgYW1iIGxlcyBwYXJhdWxlcyBjbGF1IGRlIGZhY3RvciB2ZXJ0aWNhbCA8c3Ryb25nPkxpbmVhbDwvc3Ryb25nPiBpIDxzdHJvbmc+TGluZWFsIGludmVyczwvc3Ryb25nPi4gRWwgcGVuZGVudCBzJ2VzcGVjaWZpY2EgY29tIHVuYSBmcmFjY2nDsyBkJ2VsZXZhY2nDsyBzb2JyZSBsJ2V4dGVuc2nDsyAocGVyIGV4ZW1wbGUsIHVuIHBlbmRlbnQgZGVsIDQ1ICUgw6lzIDEvNDUsIHF1ZSBzJ2VzcGVjaWZpY2EgY29tIDAsMDIyMjIpLjwvbGk+PGxpPjxzdHJvbmc+Tm9tIGRlIHRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIGVsIG5vbSBkZSBsYSB0YXVsYSBxdWUgZGVmaW5laXggZWwgVkYuPC9saT48L3VsPlwiLFxuXHRcIkBARGlzdGFuY2UtQWNjdW11bGF0aW9uX3ZlcnRpY2FscmFzdGVyX3RhZzBAQFwiOiBcIkRlZmluZWl4IGxhIHJlbGFjacOzIGVudHJlIGVsIGZhY3RvciBkZSBjb3N0IHZlcnRpY2FsIGkgbCdhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IHZlcnRpY2FsIChWUk1BKS5cIixcblx0XCJAQERpc3RhbmNlLUFjY3VtdWxhdGlvbl92ZXJ0aWNhbHJhc3Rlcl90YWcxQEBcIjogXCJFbHMgdmFsb3JzIHMndXRpbGl0emVuIHBlciBjYWxjdWxhciBlbCBwZW5kZW50IHV0aWxpdHphdCBwZXIgaWRlbnRpZmljYXIgZWwgZmFjdG9yIHZlcnRpY2FsIHF1ZSBlcyBwcm9kdWVpeCBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIHVuYSBhbHRyYS5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fY29zdHJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIHF1ZSBkZWZpbmVpeCBlbCBjb3N0IG8gbGEgaW1wZWTDoG5jaWEgZGVsIG1vdmltZW50IHBsYW5pbcOodHJpYyBhIHRyYXbDqXMgZGUgY2FkYSBjZWzCt2xhLiBFbCB2YWxvciBkZSBjYWRhIHViaWNhY2nDsyBkZSBjZWzCt2xhIHJlcHJlc2VudGEgbGEgZGlzdMOgbmNpYSBkZSBjb3N0IHBlciB1bml0YXQgcGVyIG1vdXJlJ3MgYSB0cmF2w6lzIGRlIGxhIGNlbMK3bGEuIENhZGEgdmFsb3IgZCd1YmljYWNpw7MgZGUgY2VswrdsYSBlcyBtdWx0aXBsaWNhIHBlciBsYSByZXNvbHVjacOzIGRlIGxhIGNlbMK3bGEgaSB0YW1iw6kgZXMgY29tcGVuc2EgZWwgbW92aW1lbnQgZGlhZ29uYWwgcGVyIG9idGVuaXIgZWwgY29zdCB0b3RhbCBkZSBwYXNzYXIgYSB0cmF2w6lzIGRlIGxhIGNlbMK3bGEuXCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX2Nvc3RyYXN0ZXJfdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyBkZWwgPHN0cm9uZz5yw6BzdGVyIGRlIGNvc3Rvczwvc3Ryb25nPiBwb2RlbiBzZXIgZW50ZXJzIG8gcHVudHMgZmxvdGFudHMsIHBlcsOyIG5vIHBvZGVuIHNlciBuZWdhdGl1cyBuaSB6ZXJvLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9kaXN0YW5jZW1ldGhvZF90YWcwQEBcIjogXCJEZXRlcm1pbmEgc2kgZXMgY2FsY3VsYXLDoCBsYSBkaXN0w6BuY2lhIG1pdGphbsOnYW50IHVuIG3DqHRvZGUgcGxhICh0ZXJyYSBwbGFuYSkgbyBnZW9kw6hzaWMgKGVswrdsaXBzb2lkZSkuXCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX2Rpc3RhbmNlbWV0aG9kX3RhZzFAQFwiOiBcIlBsYTogbGVzIG1lc3VyZXMgcGxhbmVzIHV0aWxpdHplbiBtYXRlbcOgdGlxdWVzIGNhcnRlc2lhbmVzIDJEIHBlciBjYWxjdWxhciBsYSBsb25naXR1ZCBpIGwnw6ByZWEuIEwnb3BjacOzIG5vbcOpcyBlc3TDoCBkaXNwb25pYmxlIHF1YW4gZXMgbWVzdXJhIGVuIHVuIHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgcHJvamVjdGFkZXMsIGkgZWwgcGxhIDJEIGQnYXF1ZXN0IHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgcyd1dGlsaXR6YXLDoCBjb20gYSBiYXNlIHBlciBhIGxlcyBtZXN1cmVzLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9kaXN0YW5jZW1ldGhvZF90YWcyQEBcIjogXCJHZW9kw6hzaWM6IGzDrW5pYSBtw6lzIGN1cnRhIGVudHJlIGRvcyBwdW50cyBhIGxhIHN1cGVyZsOtY2llIHRlcnJlc3RyZSBlbiB1biBlc2Zlcm9pZGUgKGVswrdsaXBzb2lkZSkuIFBlciB0YW50LCBpbmRlcGVuZGVudG1lbnQgZGUgbGEgcHJvamVjY2nDsyBkJ2VudHJhZGEgbyBkZSBzb3J0aWRhLCBlbHMgcmVzdWx0YXRzIG5vIGNhbnZpZW4uXCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX2Rpc3RhbmNlbWV0aG9kX3RhZzNAQFwiOiBcIjxzdHJvbmc+Tm90YTo8L3N0cm9uZz4gdW5hIGzDrW5pYSBnZW9kw6hzaWNhIGVzIHBvdCB1dGlsaXR6YXIgcXVhbiB2b2xldSBkZXRlcm1pbmFyIGxhIGRpc3TDoG5jaWEgbcOpcyBjdXJ0YSBlbnRyZSBkdWVzIGNpdXRhdHMgcGVyIGRlZmluaXIgdW5hIHJ1dGEgZGUgdm9sLiBUYW1iw6kgZXMgY29uZWl4IGNvbSBhIGzDrW5pYSBvcnRvZHLDsm1pY2Egc2kgZXMgYmFzYSBlbiB1bmEgZXNmZXJhIGVuIGxsb2MgZGUgYmFzYXItc2UgZW4gdW4gZWzCt2xpcHNvaWRlLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9ob3Jpem9udGFsZmFjdG9yX3RhZzBAQFwiOiBcIjxwPkRlZmluZWl4IGxhIHJlbGFjacOzIGVudHJlIGVsIGZhY3RvciBkZSBjb3N0IGhvcml0em9udGFsIGkgbCdhbmdsZSBkZSBtb3ZpbWVudCByZWxhdGl1IGhvcml0em9udGFsIChIUk1BKS48L3A+PHA+SGkgaGEgZGl2ZXJzb3MgZmFjdG9ycyBhbWIgbW9kaWZpY2Fkb3JzIHF1ZSBpZGVudGlmaXF1ZW4gdW4gZ3LDoGZpYyBkZSBmYWN0b3IgdmVydGljYWwgZGVmaW5pdC4gQSBtw6lzLCBlcyBwb3QgdXRpbGl0emFyIHVuYSB0YXVsYSBwZXIgY3JlYXIgdW4gZ3LDoGZpYyBwZXJzb25hbGl0emF0LiBFbHMgZ3LDoGZpY3Mgcyd1dGlsaXR6ZW4gcGVyIGlkZW50aWZpY2FyIGVsIGZhY3RvciB2ZXJ0aWNhbCB1dGlsaXR6YXQgcGVyIGNhbGN1bGFyIGVsIGNvc3QgdG90YWwgZGVsIG1vdmltZW50IGEgdW5hIGNlbMK3bGEgdmXDr25hLjwvcD48cD5BIGxlcyBleHBsaWNhY2lvbnMgc2Vnw7xlbnRzIHMndXRpbGl0emVuIGRvcyBhY3LDsm5pbXM6IEhGIGkgSFJNQS4gSEYgc2lnbmlmaWNhIFxcXCJmYWN0b3IgaG9yaXR6b250YWxcXFwiLCBxdWUgZGVmaW5laXggbGEgZGlmaWN1bHRhdCBob3JpdHpvbnRhbCBxdWUgcydleHBlcmltZW50YSBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIGxhIHNlZ8O8ZW50LiBIUk1BIHNpZ25pZmljYSBcXFwiYW5nbGUgZGUgbW92aW1lbnQgcmVsYXRpdSBob3JpdHpvbnRhbFxcXCIsIGkgaWRlbnRpZmljYSBsJ2FuZ2xlIGVudHJlIGxhIGRpcmVjY2nDsyBob3JpdHpvbnRhbCBkJ3VuYSBjZWzCt2xhIGkgbGEgZGlyZWNjacOzIGRlbCBtb3ZpbWVudC48L3A+PHA+RWxzIHRpcHVzIDxzdHJvbmc+RmFjdG9yIGhvcml0em9udGFsPC9zdHJvbmc+IHPDs246PC9wPjx1bD48bGk+PHN0cm9uZz5CaW5hcmk8L3N0cm9uZz46IGluZGljYSBxdWUsIHNpIEhSTUEgw6lzIGluZmVyaW9yIGEgbCdhbmdsZSBkZSB0YWxsLCBsJ0hGIGVzIGRlZmluZWl4IGVuIGVsIHZhbG9yIGFzc29jaWF0IGFtYiBlbCBmYWN0b3IgemVybzsgYWx0cmFtZW50LCDDqXMgaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkVuZGF2YW50PC9zdHJvbmc+OiBlc3RhYmxlaXggcXVlIG5vbcOpcyBlcyBwZXJtZXQgZWwgbW92aW1lbnQgY2FwIGVuZGF2YW50LiBMJ0hSTUEgaGEgZGUgc2VyIHN1cGVyaW9yIG8gaWd1YWwgYSAwIGkgaW5mZXJpb3IgYSA5MCBncmF1cyAoMCAmbHQ7PSBIUk1BICZsdDsgOTApLiBTaSBsJ0hSTUEgw6lzIHN1cGVyaW9yIGEgMCBpIGluZmVyaW9yIGEgNDUgZ3JhdXMsIGwnSEYgZGUgbGEgY2VswrdsYSBlcyBkZWZpbmVpeCBlbiBlbCB2YWxvciBhc3NvY2lhdCBhbCBmYWN0b3IgemVyby4gU2kgbCdIUk1BIMOpcyBzdXBlcmlvciBvIGlndWFsIGEgNDUgZ3JhdXMsIHMndXRpbGl0emEgZWwgdmFsb3IgbW9kaWZpY2Fkb3IgZGVsIHZhbG9yIGxhdGVyYWwuIEwnSEYgcGVyIGEgcXVhbHNldm9sIHZhbG9yIGQnSFJNQSBpZ3VhbCBvIHN1cGVyaW9yIGEgOTAgZXMgZGVmaW5laXggZW4gaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPkxpbmVhbDwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgbCdIRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGRlIGwnSFJNQS48L2xpPjxsaT48c3Ryb25nPkxpbmVhbCBpbnZlcnM8L3N0cm9uZz46IGVzcGVjaWZpY2EgcXVlIGwnSEYgw6lzIHVuYSBmdW5jacOzIGxpbmVhbCBpbnZlcnNhIGRlIGwnSFJNQS48L2xpPjxsaT48c3Ryb25nPlRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIGVsIGZpdHhlciBkZSB0YXVsYSBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgZGVmaW5pciBlbCBncsOgZmljIGRlIGZhY3RvciBob3JpdHpvbnRhbCBlbXByYXQgcGVyIGRldGVybWluYXIgZWxzIEhGLjwvbGk+PC91bD48cD5FbHMgbW9kaWZpY2Fkb3JzIHBlciBhbHMgZmFjdG9ycyBob3JpdHpvbnRhbHMgc8Ozbjo8L3A+PHVsPjxsaT48c3Ryb25nPkZhY3RvciB6ZXJvPC9zdHJvbmc+OiBmYWN0b3IgaG9yaXR6b250YWwgcXVlIGNhbCB1dGlsaXR6YXIgcXVhbiBIUk1BIMOpcyB6ZXJvLiBBcXVlc3QgZmFjdG9yIHBvc2ljaW9uYSBsYSBpbnRlcmNlcGNpw7MgXFxcInlcXFwiIHBlciBhIHF1YWxzZXZvbCBkZSBsZXMgZnVuY2lvbnMgZGUgZmFjdG9yIGhvcml0em9udGFsLjwvbGk+PGxpPjxzdHJvbmc+QW5nbGUgZGUgdGFsbDwvc3Ryb25nPjogZGVmaW5laXggbCdhbmdsZSBkJ0hSTUEgbcOpcyBlbmxsw6AgZGVsIHF1YWwgbCdIRiBlcyBkZWZpbmlyw6AgZW4gaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPlBlbmRlbnQ8L3N0cm9uZz46IGVzdGFibGVpeCBlbCBwZW5kZW50IGRlIGxhIGzDrW5pYSByZWN0YSB1dGlsaXR6YWRhIGFtYiBsZXMgcGFyYXVsZXMgY2xhdSBkZSBmYWN0b3IgaG9yaXR6b250YWwgPHN0cm9uZz5MaW5lYWw8L3N0cm9uZz4gaSA8c3Ryb25nPkxpbmVhbCBpbnZlcnM8L3N0cm9uZz4uIEVsIHBlbmRlbnQgcydlc3BlY2lmaWNhIGNvbSB1bmEgZnJhY2Npw7MgZGUgbGEgcHVqYWRhIHNvYnJlIGxhIGJhaXhhZGEgKHBlciBleGVtcGxlLCB1biBwZW5kZW50IGRlbCA0NSUgw6lzIDEvNDUsIHF1ZSBzJ2ludHJvZHVlaXggY29tIGEgMCwwMjIyMikuPC9saT48bGk+PHN0cm9uZz5WYWxvciBsYXRlcmFsPC9zdHJvbmc+OiBlc3RhYmxlaXggbCdIRiBxdWFuIGwnSFJNQSDDqXMgc3VwZXJpb3IgbyBpZ3VhbCBhIDQ1IGdyYXVzIGkgw6lzIGluZmVyaW9yIGEgOTAgZ3JhdXMgcXVhbiBzJ2VzcGVjaWZpY2EgbGEgcGFyYXVsYSBjbGF1IGRlIGZhY3RvciBob3JpdHpvbnRhbCA8c3Ryb25nPkVuZGF2YW50PC9zdHJvbmc+LjwvbGk+PGxpPjxzdHJvbmc+Tm9tIGRlIHRhdWxhPC9zdHJvbmc+OiBpZGVudGlmaWNhIGVsIG5vbSBkZSBsYSB0YXVsYSBxdWUgZGVmaW5laXggbCdIRi48L2xpPjwvdWw+XCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX2hvcml6b250YWxyYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBxdWUgZGVmaW5laXggbGEgZGlyZWNjacOzIGhvcml0em9udGFsIGEgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9ob3Jpem9udGFscmFzdGVyX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZGVsIHLDoHN0ZXIgaGFuIGRlIHNlciBlbnRlcnMgZGUgMCBhIDM2MCwgYW1iIDAgZ3JhdXMgYWwgbm9yZCBvIGNhcCBhIGxhIHBhcnQgc3VwZXJpb3IgZGUgbGEgcGFudGFsbGEsIHF1ZSBhdWdtZW50aW4gZW4gc2VudGl0IGhvcmFyaS4gTGVzIMOgcmVlcyBwbGFuZXMgaGFuIGRlIHRlbmlyIGFzc2lnbmF0IHVuIHZhbG9yIGRlIC0xLiBFbHMgdmFsb3JzIGVuIGNhZGEgdWJpY2FjacOzIHMndXRpbGl0emFyYW4ganVudGFtZW50IGFtYiBlbCA8c3Ryb25nPmZhY3RvciBob3JpdHpvbnRhbDwvc3Ryb25nPiBwZXIgZGV0ZXJtaW5hciBlbCBjb3N0IGhvcml0em9udGFsIHF1ZSBlcyBwcm9kdWVpeCBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIGxlcyB2ZcOvbmVzLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9pbml0aWFsYWNjdW11bGF0aW9uX3RhZzBAQFwiOiBcIkNvc3QgYWN1bXVsYXRpdSBpbmljaWFsIHBlciBpbmljaWFyIGVsIGPDoGxjdWwgZGVsIGNvc3QuIEFxdWVzdCBwYXLDoG1ldHJlIHBlcm1ldCBsJ2VzcGVjaWZpY2FjacOzIGRlbCBjb3N0IGZpeCBhc3NvY2lhdCBhIHVuIG9yaWdlbi4gRW4gbGxvYyBkZSBjb21lbsOnYXIgYW1iIHVuIGNvc3QgZGUgMCwgbCdhbGdvcml0bWUgZGUgY29zdCBobyBmYXLDoCBhbWIgZWwgdmFsb3IgZXNwZWNpZmljYXQuXCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX2luaXRpYWxhY2N1bXVsYXRpb25fdGFnMUBAXCI6IFwiUGVyIGEgYXF1ZXN0IHBhcsOgbWV0cmUsIGVzIHBvZGVuIHV0aWxpdHphciB1biB2YWxvciBudW3DqHJpYyAoZG9ibGUpIG8gdW4gY2FtcCBkZWwgPHN0cm9uZz5yw6BzdGVyIGQnb3JpZ2VuPC9zdHJvbmc+LlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9pbml0aWFsYWNjdW11bGF0aW9uX3RhZzJAQFwiOiBcIkVsIHZhbG9yIGhhIGRlIHNlciB6ZXJvIG8gc3VwZXJpb3IuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9tYXhpbXVtYWNjdW11bGF0aW9uX3RhZzBAQFwiOiBcIkRlZmluZWl4IGVsIGNvc3QgYWN1bXVsYXRpdSBtw6B4aW0gZGVsIHZpYXRnZXIgZCd1biBvcmlnZW4uIEVscyBjw6BsY3VscyBkZSBjb3N0IGNvbnRpbnVlbiBwZXIgYSBjYWRhIG9yaWdlbiBmaW5zIGEgYXNzb2xpciBsYSBjYXBhY2l0YXQgZXNwZWNpZmljYWRhLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9tYXhpbXVtYWNjdW11bGF0aW9uX3RhZzFAQFwiOiBcIlBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBlcyBwb2RlbiB1dGlsaXR6YXIgdW4gdmFsb3IgbnVtw6hyaWMgKGRvYmxlKSBvIHVuIGNhbXAgZGVsIDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fbWF4aW11bWFjY3VtdWxhdGlvbl90YWcyQEBcIjogXCJFbCB2YWxvciBoYSBkZSBzZXIgbcOpcyBncmFuIHF1ZSB6ZXJvLiBMYSBjYXBhY2l0YXQgcGVyIGRlZmVjdGUgw6lzIGFsIGxsaW5kYXIgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fbXVsdGlwbGllcnRvYXBwbHl0b2Nvc3RzX3RhZzBAQFwiOiBcIk11bHRpcGxpY2Fkb3IgcXVlIHMnYXBsaWNhcsOgIGFscyB2YWxvcnMgZGVscyBjb3N0b3MuXCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX211bHRpcGxpZXJ0b2FwcGx5dG9jb3N0c190YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBwZXJtZXQgY29udHJvbGFyIGVsIG1vZGUgZGUgdmlhdGdlIG8gbGEgbWFnbml0dWQgZW4gdW4gb3JpZ2VuLiBDb20gbWFqb3Igc2lndWkgZWwgbXVsdGlwbGljYWRvciwgbcOpcyBhbHQgc2Vyw6AgZWwgY29zdCBkZWwgbW92aW1lbnQgYSB0cmF2w6lzIGRlIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fbXVsdGlwbGllcnRvYXBwbHl0b2Nvc3RzX3RhZzJAQFwiOiBcIkVscyB2YWxvcnMgaGFuIGRlIHNlciBtw6lzIGdyYW5zIHF1ZSB6ZXJvLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMS5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fbXVsdGlwbGllcnRvYXBwbHl0b2Nvc3RzX3RhZzNAQFwiOiBcIlBlciBhIGFxdWVzdCBwYXLDoG1ldHJlLCBlcyBwb2RlbiB1dGlsaXR6YXIgdW4gdmFsb3IgbnVtw6hyaWMgKGRvYmxlKSBvIHVuIGNhbXAgZGVsIDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPi5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fcmFzdGVyYmFycmllcnNfdGFnMEBAXCI6IFwiUsOgc3RlciBxdWUgZGVmaW5laXggbGVzIGJhcnJlcmVzLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9yYXN0ZXJiYXJyaWVyc190YWcxQEBcIjogXCJFbCBkYXRhc2V0IGhhIGRlIGNvbnRlbmlyIE5vRGF0YSBhbGzDoCBvbiBubyBoaSBoYSBiYXJyZXJlcy4gTGVzIGJhcnJlcmVzIGVzIHJlcHJlc2VudGVuIGFtYiB2YWxvcnMgdsOgbGlkcywgcXVlIGluY2xvdWVuIGVsIHplcm8uXCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX3Jhc3RlcmJhcnJpZXJzX3RhZzJAQFwiOiBcIkxlcyBiYXJyZXJlcyBlcyBwb2RlbiBkZWZpbmlyIGFtYiB1biBlbnRlciBvIHVuIHLDoHN0ZXIgZGUgcHVudCBmbG90YW50LlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9zb3VyY2VmaWVsZF90YWcwQEBcIjogXCJDYW1wIHV0aWxpdHphdCBwZXIgYXNzaWduYXIgdmFsb3JzIGEgbGVzIHViaWNhY2lvbnMgZCdvcmlnZW4uIEhhIGRlIHNlciBkZSB0aXB1cyBlbnRlci5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fc291cmNlcmFzdGVyX3RhZzBAQFwiOiBcIlViaWNhY2lvbnMgZCdvcmlnZW4gZCdlbnRyYWRhLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9zb3VyY2VyYXN0ZXJfdGFnMUBAXCI6IFwiQXF1ZXN0IMOpcyB1biBkYXRhc2V0IHLDoHN0ZXIgcXVlIGlkZW50aWZpY2EgbGVzIGNlbMK3bGVzIG8gbGVzIHViaWNhY2lvbnMgZGVzIGRlIGxlcyBxdWFscyBzJ2hhIGNhbGN1bGF0IGxhIGRpc3TDoG5jaWEgZGUgbWVub3IgY29zdCBhY3VtdWxhdCBkZSBsYSB1YmljYWNpw7MgZGUgY2FkYSBjZWzCt2xhIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX3NvdXJjZXJvd2FuZGNvbHVtbmJhbmRzX3RhZzBAQFwiOiBcIkRldGVybWluYSBzaSBub23DqXMgZXMgY3JlYSB1biByw6BzdGVyIGQnYXNzaWduYWNpw7MgbyBiw6kgc2kgZXMgY3JlYSB1biByZXN1bHRhdCBtdWx0aWJhbmRhLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9zb3VyY2Vyb3dhbmRjb2x1bW5iYW5kc190YWcxQEBcIjogXCJEZXNhY3RpdmF0OiBlbCByZXN1bHRhdCDDqXMgZWwgcsOgc3RlciBkJ2Fzc2lnbmFjacOzIGRlIGRpc3TDoG5jaWEuIMOJcyB1biByZXN1bHRhdCBkZSBiYW5kYSDDum5pY2EuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl9zb3VyY2Vyb3dhbmRjb2x1bW5iYW5kc190YWcyQEBcIjogXCJBY3RpdmF0OiBlcyBjcmVhIHVuIHLDoHN0ZXIgbXVsdGliYW5kYS4gTGEgcHJpbWVyYSBiYW5kYSDDqXMgZWwgcsOgc3RlciBkJ2Fzc2lnbmFjacOzIGRlIGRpc3TDoG5jaWEsIGxhIHNlZ29uYSBiYW5kYSBjb250w6kgdW4gw61uZGV4IGRlIGZpbGVzIGkgbGEgdGVyY2VyYSBiYW5kYSBjb250w6kgdW4gw61uZGV4IGRlIGNvbHVtbmVzLiBBcXVlc3RzIMOtbmRleCBpZGVudGlmaXF1ZW4gbGEgdWJpY2FjacOzIGRlIGxhIGNlbMK3bGEgZCdvcmlnZW4gYW1iIGxhIG1lbm9yIGRpc3TDoG5jaWEgZGUgY29zdCBhY3VtdWxhdC5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fc3VyZmFjZXJhc3Rlcl90YWcwQEBcIjogXCJSw6BzdGVyIHF1ZSBkZWZpbmVpeCBlbHMgdmFsb3JzIGQnZWxldmFjacOzIGEgbGEgdWJpY2FjacOzIGRlIGNhZGEgY2VswrdsYS5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fc3VyZmFjZXJhc3Rlcl90YWcxQEBcIjogXCJFbHMgdmFsb3JzIHMndXRpbGl0emVuIHBlciBjYWxjdWxhciBsYSBkaXN0w6BuY2lhIGRlIHN1cGVyZsOtY2llIHJlYWwgY29iZXJ0YSBlbiBwYXNzYXIgZW50cmUgY2VswrdsZXMuXCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX3RyYXZlbGRpcmVjdGlvbl90YWcwQEBcIjogXCJEZWZpbmVpeCBsYSBkaXJlY2Npw7MgZGVsIHZpYXRnZXIgZW4gYXBsaWNhciBlbCBmYWN0b3IgdmVydGljYWwsIGVsIGZhY3RvciBob3JpdHpvbnRhbCBpIGxhIHRheGEgZGUgcmVzaXN0w6huY2lhIGRlIGwnb3JpZ2VuLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl90cmF2ZWxkaXJlY3Rpb25fdGFnMUBAXCI6IFwiPHN0cm9uZz5EZXMgZGUgbCdvcmlnZW48L3N0cm9uZz46IGVsIGZhY3RvciB2ZXJ0aWNhbCwgZWwgZmFjdG9yIGhvcml0em9udGFsIGkgbGEgdGF4YSBkZSByZXNpc3TDqG5jaWEgZGUgbCdvcmlnZW4gcydhcGxpY2FyYW4gY29tZW7Dp2FudCBwZXIgbCdvcmlnZW4gZCdlbnRyYWRhIGkgcGFzc2FudCBhIGxlcyBjZWzCt2xlcyBxdWUgbm8gc8OzbiBsYSBkJ29yaWdlbi4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBEaXN0YW5jZS1BbGxvY2F0aW9uX3RyYXZlbGRpcmVjdGlvbl90YWcyQEBcIjogXCI8c3Ryb25nPkZpbnMgYSBsJ29yaWdlbjwvc3Ryb25nPjogZWwgZmFjdG9yIHZlcnRpY2FsLCBlbCBmYWN0b3IgaG9yaXR6b250YWwgaSBsYSB0YXhhIGRlIHJlc2lzdMOobmNpYSBkZSBsJ29yaWdlbiBzJ2FwbGljYXJhbiBjb21lbsOnYW50IHBlciBjYWRhIGNlbMK3bGEgcXVlIG5vIHNpZ3VpIGxhIGQnb3JpZ2VuIGkgdG9ybmFudCBhIGwnb3JpZ2VuIGQnZW50cmFkYS5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fdHJhdmVsZGlyZWN0aW9uX3RhZzNAQFwiOiBcIkVzcGVjaWZpcXVldSBsYSBwYXJhdWxhIGNsYXUgPHN0cm9uZz5EZXMgZGUgbCdvcmlnZW48L3N0cm9uZz4gbyA8c3Ryb25nPkZpbnMgYSBsJ29yaWdlbjwvc3Ryb25nPiwgcXVlIHMnYXBsaWNhcsOgIGEgdG90cyBlbHMgb3LDrWdlbnMgbyBlc3BlY2lmaXF1ZXUgdW4gY2FtcCBhbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4gcXVlIGNvbnRpbmd1aSBsZXMgcGFyYXVsZXMgY2xhdSBwZXIgaWRlbnRpZmljYXIgbGEgZGlyZWNjacOzIGRlIHZpYXRnZSBkZSBjYWRhIG9yaWdlbi4gQXF1ZXN0IGNhbXAgaGEgZGUgY29udGVuaXIgbGEgY2FkZW5hICR7RlJPTV9TT1VSQ0V9IG8gJHtUT19TT1VSQ0V9LlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl92ZXJ0aWNhbGZhY3Rvcl90YWcwQEBcIjogXCI8cD5EZWZpbmVpeCBsYSByZWxhY2nDsyBlbnRyZSBlbCBmYWN0b3IgZGUgY29zdCB2ZXJ0aWNhbCBpIGwnYW5nbGUgZGUgbW92aW1lbnQgcmVsYXRpdSB2ZXJ0aWNhbCAoVlJNQSkuPC9wPjxwPkhpIGhhIGRpdmVyc29zIGZhY3RvcnMgYW1iIG1vZGlmaWNhZG9ycyBxdWUgaWRlbnRpZmlxdWVuIHVuIGdyw6BmaWMgZGUgZmFjdG9yIHZlcnRpY2FsIGRlZmluaXQuIEEgbcOpcywgZXMgcG90IHV0aWxpdHphciB1bmEgdGF1bGEgcGVyIGNyZWFyIHVuIGdyw6BmaWMgcGVyc29uYWxpdHphdC4gRWxzIGdyw6BmaWNzIHMndXRpbGl0emVuIHBlciBpZGVudGlmaWNhciBlbCBmYWN0b3IgdmVydGljYWwgdXRpbGl0emF0IHBlciBjYWxjdWxhciBlbCBjb3N0IHRvdGFsIGRlbCBtb3ZpbWVudCBhIHVuYSBjZWzCt2xhIHZlw69uYS48L3A+PHA+QSBsZXMgZXhwbGljYWNpb25zIHNlZ8O8ZW50cyBzJ3V0aWxpdHplbiBkb3MgYWNyw7JuaW1zOiBWRiBpIFZSTUEuIFZGIHNpZ25pZmljYSBcXFwiZmFjdG9yIHZlcnRpY2FsXFxcIiwgcXVlIGRlZmluZWl4IGxhIGRpZmljdWx0YXQgdmVydGljYWwgcXVlIHMnZXhwZXJpbWVudGEgZW4gcGFzc2FyIGQndW5hIGNlbMK3bGEgYSBsYSBzZWfDvGVudC4gVlJNQSBzaWduaWZpY2EgXFxcImFuZ2xlIGRlIG1vdmltZW50IHJlbGF0aXUgdmVydGljYWxcXFwiLCBpIGlkZW50aWZpY2EgbCdhbmdsZSBkJ2luY2xpbmFjacOzIGVudHJlIGxhIGNlbMK3bGEgZCdvcmlnZW4sIG8gcHJvY2Vzc2FtZW50LCBpIGxhIGNlbMK3bGEgZGUgZGVzdGluYWNpw7MuRWxzIHRpcHVzIDwvcD48cD48c3Ryb25nPkZhY3RvciB2ZXJ0aWNhbDwvc3Ryb25nPiBzw7NuOjwvcD48dWw+PGxpPjxzdHJvbmc+QmluYXJpPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSwgc2kgZWwgVlJNQSDDqXMgbWFqb3IgcXVlIGwnYW5nbGUgZGUgdGFsbCBiYWl4IGkgbWVub3IgcXVlIGwnYW5nbGUgZGUgdGFsbCBhbHQsIGVsIFZGIGVzIGRlZmluZWl4IGVuIGVsIHZhbG9yIGFzc29jaWF0IGFsIGZhY3RvciB6ZXJvOyBhbHRyYW1lbnQsIMOpcyBpbmZpbml0LjwvbGk+PGxpPjxzdHJvbmc+TGluZWFsPC9zdHJvbmc+OiBpbmRpY2EgcXVlIGVsIFZGIMOpcyB1bmEgZnVuY2nDsyBsaW5lYWwgZGVsIFZSTUEuPC9saT48bGk+PHN0cm9uZz5MaW5lYWwgc2ltw6h0cmljPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSBlbCBWRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGRlbCBWUk1BIGEgbGEgcGFydCBuZWdhdGl2YSBvIHBvc2l0aXZhIGRlbCBWUk1BLCByZXNwZWN0aXZhbWVudCwgaSBsZXMgZHVlcyBmdW5jaW9ucyBsaW5lYWxzIHPDs24gc2ltw6h0cmlxdWVzIHJlc3BlY3RlIGRlIGwnZWl4IGRlbCBWRiAoeSkuPC9saT48bGk+PHN0cm9uZz5MaW5lYWwgaW52ZXJzPC9zdHJvbmc+OiBpbmRpY2EgcXVlIGVsIFZGIMOpcyB1bmEgZnVuY2nDsyBsaW5lYWwgaW52ZXJzYSBkZWwgVlJNQS48L2xpPjxsaT48c3Ryb25nPkxpbmVhbCBpbnZlcnMgc2ltw6h0cmljPC9zdHJvbmc+OiBlc3BlY2lmaWNhIHF1ZSBlbCBWRiDDqXMgdW5hIGZ1bmNpw7MgbGluZWFsIGludmVyc2EgZGVsIFZSTUEgYSBsYSBwYXJ0IG5lZ2F0aXZhIG8gcG9zaXRpdmEgZGVsIFZSTUEsIHJlc3BlY3RpdmFtZW50LCBpIGxlcyBkdWVzIGZ1bmNpb25zIGxpbmVhbHMgc8OzbiBzaW3DqHRyaXF1ZXMgcmVzcGVjdGUgZGUgbCdlaXggZGVsIFZGICh5KS48L2xpPjxsaT48c3Ryb25nPkNvczwvc3Ryb25nPjogaWRlbnRpZmljYSBlbCBWRiBjb20gbGEgZnVuY2nDsyBiYXNhZGEgZW4gZWwgY29zaW51cyBkZWwgVlJNQS48L2xpPjxsaT48c3Ryb25nPlNlYzwvc3Ryb25nPjogaWRlbnRpZmljYSBlbCBWRiBjb20gbGEgZnVuY2nDsyBiYXNhZGEgZW4gbGEgc2VjYW50IGRlbCBWUk1BLjwvbGk+PGxpPjxzdHJvbmc+Q29zLVNlYzwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgZWwgVkYgw6lzIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGVsIGNvc2ludXMgZGVsIFZSTUEgc2kgZWwgVlJNQSDDqXMgbmVnYXRpdSBpIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGxhIHNlY2FudCBkZWwgVlJNQSBzaSBlbCBWUk1BIG5vIMOpcyBuZWdhdGl1LjwvbGk+PGxpPjxzdHJvbmc+U2VjLUNvczwvc3Ryb25nPjogZXNwZWNpZmljYSBxdWUgZWwgVkYgw6lzIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGVsIGNvc2ludXMgZGVsIFZSTUEgc2kgZWwgVlJNQSDDqXMgbmVnYXRpdSBpIGxhIGZ1bmNpw7MgYmFzYWRhIGVuIGxhIHNlY2FudCBkZWwgVlJNQSBzaSBlbCBWUk1BIG5vIMOpcyBuZWdhdGl1LjwvbGk+PGxpPjxzdHJvbmc+VGF1bGE8L3N0cm9uZz46IGlkZW50aWZpY2EgcXVlIHMndXRpbGl0emFyw6AgdW4gZml0eGVyIGRlIHRhdWxhIHBlciBkZWZpbmlyIGVsIGdyw6BmaWMgZGUgZmFjdG9yIHZlcnRpY2FsIHV0aWxpdHphdCBwZXIgZGV0ZXJtaW5hciBlbHMgVkYuPC9saT48L3VsPjxwPkFsZ3VucyBtb2RpZmljYWRvcnMgcGVyIGEgbGVzIHBhcmF1bGVzIGNsYXVzIHZlcnRpY2FscyBzw7NuOjwvcD48dWw+PGxpPjxzdHJvbmc+RmFjdG9yIHplcm88L3N0cm9uZz46IGVzdGFibGVpeCBlbCBmYWN0b3IgdmVydGljYWwgdXRpbGl0emF0IHNpIGVsIFZSTUEgw6lzIHplcm8uIEFxdWVzdCBmYWN0b3IgY29swrdsb2NhIGxhIGludGVyY2VwY2nDsyB5IGRlIGxhIGZ1bmNpw7MgZXNwZWNpZmljYWRhLiBQZXIgZGVmaW5pY2nDsywgZWwgZmFjdG9yIHplcm8gbm8gw6lzIGFwbGljYWJsZSBhIGNhcCBkZSBsZXMgZnVuY2lvbnMgdmVydGljYWxzIHRyaWdvbm9tw6h0cmlxdWVzIChDT1MsIFNFQywgQ09TLVNFQyBvIFNFQy1DT1MpLiBBcXVlc3RlcyBmdW5jaW9ucyBkZWZpbmVpeGVuIGxhIGludGVyY2VwY2nDsyB5LjwvbGk+PGxpPjxzdHJvbmc+QW5nbGUgZGUgdGFsbCBiYWl4PC9zdHJvbmc+OiBkZWZpbmVpeCBsJ2FuZ2xlIFZSTUEgcGVyIHNvdGEgZGVsIHF1YWwgZXMgZGVmaW5pcsOgIHVuIFZGIGluZmluaXQuPC9saT48bGk+PHN0cm9uZz5BbmdsZSBkZSB0YWxsIGFsdDwvc3Ryb25nPjogZGVmaW5laXggbCdhbmdsZSBWUk1BIHBlciBzb2JyZSBkZWwgcXVhbCBlcyBkZWZpbmlyw6AgdW4gVkYgaW5maW5pdC48L2xpPjxsaT48c3Ryb25nPlBlbmRlbnQ8L3N0cm9uZz46IGVzdGFibGVpeCBlbCBwZW5kZW50IGRlIGxhIGzDrW5pYSByZWN0YSB1dGlsaXR6YWRhIGFtYiBsZXMgcGFyYXVsZXMgY2xhdSBkZSBmYWN0b3IgdmVydGljYWwgPHN0cm9uZz5MaW5lYWw8L3N0cm9uZz4gaSA8c3Ryb25nPkxpbmVhbCBpbnZlcnM8L3N0cm9uZz4uIEVsIHBlbmRlbnQgcydlc3BlY2lmaWNhIGNvbSB1bmEgZnJhY2Npw7MgZCdlbGV2YWNpw7Mgc29icmUgbCdleHRlbnNpw7MgKHBlciBleGVtcGxlLCB1biBwZW5kZW50IGRlbCA0NSAlIMOpcyAxLzQ1LCBxdWUgcydlc3BlY2lmaWNhIGNvbSAwLDAyMjIyKS48L2xpPjxsaT48c3Ryb25nPk5vbSBkZSB0YXVsYTwvc3Ryb25nPjogaWRlbnRpZmljYSBlbCBub20gZGUgbGEgdGF1bGEgcXVlIGRlZmluZWl4IGVsIFZGLjwvbGk+PC91bD5cIixcblx0XCJAQERpc3RhbmNlLUFsbG9jYXRpb25fdmVydGljYWxyYXN0ZXJfdGFnMEBAXCI6IFwiRGVmaW5laXggbGEgcmVsYWNpw7MgZW50cmUgZWwgZmFjdG9yIGRlIGNvc3QgdmVydGljYWwgaSBsJ2FuZ2xlIGRlIG1vdmltZW50IHJlbGF0aXUgdmVydGljYWwgKFZSTUEpLlwiLFxuXHRcIkBARGlzdGFuY2UtQWxsb2NhdGlvbl92ZXJ0aWNhbHJhc3Rlcl90YWcxQEBcIjogXCJFbHMgdmFsb3JzIHMndXRpbGl0emVuIHBlciBjYWxjdWxhciBlbCBwZW5kZW50IHV0aWxpdHphdCBwZXIgaWRlbnRpZmljYXIgZWwgZmFjdG9yIHZlcnRpY2FsIHF1ZSBlcyBwcm9kdWVpeCBlbiBwYXNzYXIgZCd1bmEgY2VswrdsYSBhIHVuYSBhbHRyYS5cIixcblx0XCJAQEV1Y2xpZGVhbi1CYWNrLURpcmVjdGlvbl9jZWxsc2l6ZV90YWcwQEBcIjogXCJNaWRhIGRlIGxhIGNlbMK3bGEgb24gZXMgY3JlYXLDoCBlbCByw6BzdGVyIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBFdWNsaWRlYW4tQmFjay1EaXJlY3Rpb25fY2VsbHNpemVfdGFnMUBAXCI6IFwiU2kgbGEgbWlkYSBkZSBsYSBjZWzCt2xhIHMnaGEgZGVmaW5pdCBleHBsw61jaXRhbWVudCBhIDxzdHJvbmc+RW50b3Juczwvc3Ryb25nPiwgYXF1ZXN0YSBzZXLDoCBsYSBtaWRhIGRlIGNlbMK3bGEgcGVyIGRlZmVjdGUuIFNpIG5vIHMnaGEgZGVmaW5pdCwgbGEgbWlkYSBkZSBsYSBjZWzCt2xhIGRlIHNvcnRpZGEgY29pbmNpZGlyw6AgYW1iIGxhIGRlbCA8c3Ryb25nPnLDoHN0ZXIgZCdvcmlnZW48L3N0cm9uZz4uXCIsXG5cdFwiQEBFdWNsaWRlYW4tQmFjay1EaXJlY3Rpb25fZGlzdGFuY2VtZXRob2RfdGFnMEBAXCI6IFwiRGV0ZXJtaW5hIHNpIGVzIGNhbGN1bGFyw6AgbGEgZGlzdMOgbmNpYSBtaXRqYW7Dp2FudCB1biBtw6h0b2RlIHBsYSAodGVycmEgcGxhbmEpIG8gZ2VvZMOoc2ljIChlbMK3bGlwc29pZGUpLlwiLFxuXHRcIkBARXVjbGlkZWFuLUJhY2stRGlyZWN0aW9uX2Rpc3RhbmNlbWV0aG9kX3RhZzFAQFwiOiBcIlBsYTogbGVzIG1lc3VyZXMgcGxhbmVzIHV0aWxpdHplbiBtYXRlbcOgdGlxdWVzIGNhcnRlc2lhbmVzIDJEIHBlciBjYWxjdWxhciBsYSBsb25naXR1ZCBpIGwnw6ByZWEuIEwnb3BjacOzIG5vbcOpcyBlc3TDoCBkaXNwb25pYmxlIHF1YW4gZXMgbWVzdXJhIGVuIHVuIHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgcHJvamVjdGFkZXMsIGkgZWwgcGxhIDJEIGQnYXF1ZXN0IHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgcyd1dGlsaXR6YXLDoCBjb20gYSBiYXNlIHBlciBhIGxlcyBtZXN1cmVzLlwiLFxuXHRcIkBARXVjbGlkZWFuLUJhY2stRGlyZWN0aW9uX2Rpc3RhbmNlbWV0aG9kX3RhZzJAQFwiOiBcIkdlb2TDqHNpYzogbMOtbmlhIG3DqXMgY3VydGEgZW50cmUgZG9zIHB1bnRzIGEgbGEgc3VwZXJmw61jaWUgdGVycmVzdHJlIGVuIHVuIGVzZmVyb2lkZSAoZWzCt2xpcHNvaWRlKS4gUGVyIHRhbnQsIGluZGVwZW5kZW50bWVudCBkZSBsYSBwcm9qZWNjacOzIGQnZW50cmFkYSBvIGRlIHNvcnRpZGEsIGVscyByZXN1bHRhdHMgbm8gY2Fudmllbi5cIixcblx0XCJAQEV1Y2xpZGVhbi1CYWNrLURpcmVjdGlvbl9kaXN0YW5jZW1ldGhvZF90YWczQEBcIjogXCI8c3Ryb25nPk5vdGE6PC9zdHJvbmc+IHVuYSBsw61uaWEgZ2VvZMOoc2ljYSBlcyBwb3QgdXRpbGl0emFyIHF1YW4gdm9sZXUgZGV0ZXJtaW5hciBsYSBkaXN0w6BuY2lhIG3DqXMgY3VydGEgZW50cmUgZHVlcyBjaXV0YXRzIHBlciBkZWZpbmlyIHVuYSBydXRhIGRlIHZvbC4gVGFtYsOpIGVzIGNvbmVpeCBjb20gYSBsw61uaWEgb3J0b2Ryw7JtaWNhIHNpIGVzIGJhc2EgZW4gdW5hIGVzZmVyYSBlbiBsbG9jIGRlIGJhc2FyLXNlIGVuIHVuIGVswrdsaXBzb2lkZS5cIixcblx0XCJAQEV1Y2xpZGVhbi1CYWNrLURpcmVjdGlvbl9tYXhpbXVtZGlzdGFuY2VfdGFnMEBAXCI6IFwiRGVmaW5laXggZWwgbGxpbmRhciBkZSBkaXN0w6BuY2lhIGVuIHF1w6ggZXMgY2FsY3VsYXLDoCBsYSBkaXJlY2Npw7MgYSBsJ29yaWdlbiBtw6lzIHByb3Blci4gU2kgbGEgZGlzdMOgbmNpYSBhIGwnb3JpZ2VuIG3DqXMgcHJvcGVyIHN1cGVyYSBhcXVlc3QgbGxpbmRhciwgbGEgc29ydGlkYSBkZSBsYSBjZWzCt2xhIHNlcsOgIE5vRGF0YS5cIixcblx0XCJAQEV1Y2xpZGVhbi1CYWNrLURpcmVjdGlvbl9tYXhpbXVtZGlzdGFuY2VfdGFnMUBAXCI6IFwiTGEgZGlzdMOgbmNpYSBwZXIgZGVmZWN0ZSDDqXMgbGEgZGUgbCdleHRlbnNpw7MgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS5cIixcblx0XCJAQEV1Y2xpZGVhbi1CYWNrLURpcmVjdGlvbl9yYXN0ZXJiYXJyaWVyc190YWcwQEBcIjogXCJSw6BzdGVyIHF1ZSBkZWZpbmVpeCBsZXMgYmFycmVyZXMuXCIsXG5cdFwiQEBFdWNsaWRlYW4tQmFjay1EaXJlY3Rpb25fcmFzdGVyYmFycmllcnNfdGFnMUBAXCI6IFwiRWwgZGF0YXNldCBoYSBkZSBjb250ZW5pciBOb0RhdGEgYWxsw6Agb24gbm8gaGkgaGEgYmFycmVyZXMuIExlcyBiYXJyZXJlcyBlcyByZXByZXNlbnRlbiBhbWIgdmFsb3JzIHbDoGxpZHMsIHF1ZSBpbmNsb3VlbiBlbCB6ZXJvLlwiLFxuXHRcIkBARXVjbGlkZWFuLUJhY2stRGlyZWN0aW9uX3Jhc3RlcmJhcnJpZXJzX3RhZzJAQFwiOiBcIkxlcyBiYXJyZXJlcyBlcyBwb2RlbiBkZWZpbmlyIGFtYiB1biBlbnRlciBvIHVuIHLDoHN0ZXIgZGUgcHVudCBmbG90YW50LlwiLFxuXHRcIkBARXVjbGlkZWFuLUJhY2stRGlyZWN0aW9uX3NvdXJjZXJhc3Rlcl90YWcwQEBcIjogXCJEYXRhc2V0IHLDoHN0ZXIgcXVlIGlkZW50aWZpY2EgbGVzIGNlbMK3bGVzIG8gbGVzIHViaWNhY2lvbnMgYSBsZXMgcXVhbHMgcydoYSBjYWxjdWxhdCBsYSBkaXJlY2Npw7MgZXVjbGlkaWFuYSBkZSBsYSB1YmljYWNpw7MgZGUgY2FkYSBjZWzCt2xhIGRlIHNvcnRpZGEuXCIsXG5cdFwiQEBFdWNsaWRlYW4tQmFjay1EaXJlY3Rpb25fc291cmNlcmFzdGVyX3RhZzFAQFwiOiBcIkwnZW50cmFkYSBwb3Qgc2VyIGRlIHRpcHVzIGVudGVyIG8gcHVudCBmbG90YW50LlwiLFxuXHRcIkBAQ29zdC1QYXRoX2Nvc3RiYWNrbGlua3Jhc3Rlcl90YWcwQEBcIjogXCJOb20gZCd1bmEgY2FwYSByw6BzdGVyIGQnZW5sbGHDpyBkZSBtZW5vciBjb3N0IHV0aWxpdHphZGEgcGVyIGRldGVybWluYXIgbGEgcnV0YSBwZXIgdG9ybmFyIGEgdW4gb3JpZ2VuIGEgdHJhdsOpcyBkZSBsYSBydXRhIGRlIG1lbm9yIGNvc3QuXCIsXG5cdFwiQEBDb3N0LVBhdGhfY29zdGJhY2tsaW5rcmFzdGVyX3RhZzFAQFwiOiBcIlBlciBhIGNhZGEgY2VswrdsYSBkZWwgcsOgc3RlciBkJ2VubGxhw6cgZW50cmFudCwgdW4gdmFsb3IgaWRlbnRpZmljYSBlbCB2ZcOtLCBxdWUgw6lzIGxhIGNlbMK3bGEgc2Vnw7xlbnQgZW4gbGEgcnV0YSBkZSBtZW5vciBjb3N0IGFjdW11bGF0aXUgZGUgbGEgY2VswrdsYSBhIHVuYSBjZWzCt2xhIGQnb3JpZ2VuIMO6bmljIG8gYSB1biBjb25qdW50IGRlIGNlbMK3bGVzIGQnb3JpZ2VuLlwiLFxuXHRcIkBAQ29zdC1QYXRoX2Nvc3RkaXN0YW5jZXJhc3Rlcl90YWcwQEBcIjogXCJOb20gZCd1biByw6BzdGVyIGRlIGRpc3TDoG5jaWEgZGUgY29zdCBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgZGV0ZXJtaW5hciBsYSBydXRhIGRlIG1lbm9yIGNvc3QgZGUgbGVzIHViaWNhY2lvbnMgZGUgZGVzdGluYWNpw7MgYSB1biBvcmlnZW4uXCIsXG5cdFwiQEBDb3N0LVBhdGhfY29zdGRpc3RhbmNlcmFzdGVyX3RhZzFAQFwiOiBcIkVsIHLDoHN0ZXIgZGUgZGlzdMOgbmNpYSBkZSBjb3N0IGVzIGNyZWEgbm9ybWFsbWVudCBhbWIgbGEgZnVuY2nDsyBDb3N0IGVuIHBsYSwgQXNzaWduYWNpw7MgZGUgY29zdG9zIG8gRW5sbGHDpyBkZSBtZW5vciBjb3N0LiBMYSBjYXBhIHLDoHN0ZXIgZGUgZGlzdMOgbmNpYSBkZSBjb3N0IGVtbWFnYXR6ZW1hLCBwZXIgYSBjYWRhIGNlbMK3bGEsIGxhIGRpc3TDoG5jaWEgZGUgY29zdCBhY3VtdWxhdGl1IG3DrW5pbSBzb2JyZSB1bmEgc3VwZXJmw61jaWUgZGUgY29zdCBkZSBjYWRhIGNlbMK3bGEgYSB1biBjb25qdW50IGRlIGNlbMK3bGVzIGQnb3JpZ2VuLlwiLFxuXHRcIkBAQ29zdC1QYXRoX2Rlc3RpbmF0aW9uZmllbGRfdGFnMEBAXCI6IFwiQ2FtcCB1dGlsaXR6YXQgcGVyIG9idGVuaXIgZWxzIHZhbG9ycyBkZSBsZXMgdWJpY2FjaW9ucyBkZSBkZXN0aW5hY2nDsy4gTGVzIGRhZGVzIGQnZW50aXRhdHMgZCdlbnRyYWRhIGhhbiBkZSBjb250ZW5pciBhbG1lbnlzIHVuIGNhbXAgdsOgbGlkLlwiLFxuXHRcIkBAQ29zdC1QYXRoX2Rlc3RpbmF0aW9ucmFzdGVyX3RhZzBAQFwiOiBcIkNhcGEgZGUgZGF0YXNldCByw6BzdGVyIHF1ZSBpZGVudGlmaWNhIGxlcyBjZWzCt2xlcyBkZXMgZGUgbGVzIHF1YWxzIGVzIGRldGVybWluYSBsYSBydXRhIGRlIG1lbm9yIGNvc3QgYSBsJ29yaWdlbiBtZW55cyBjb3N0w7NzLlwiLFxuXHRcIkBAQ29zdC1QYXRoX2Rlc3RpbmF0aW9ucmFzdGVyX3RhZzFAQFwiOiBcIkxhIGNhcGEgcsOgc3RlciBkJ2VudHJhZGEgZXN0w6AgZm9ybWFkYSBwZXIgY2VswrdsZXMgcXVlIHRlbmVuIHZhbG9ycyB2w6BsaWRzICh6ZXJvIMOpcyB1biB2YWxvciB2w6BsaWQpLCBpIGxlcyBjZWzCt2xlcyByZXN0YW50cyBoYW4gZGUgdGVuaXIgYXNzaWduYXQgZWwgdmFsb3IgTm9EYXRhLlwiLFxuXHRcIkBAQ29zdC1QYXRoX2ZvcmNlZmxvd2RpcmVjdGlvbmNvbnZlbnRpb25mb3JiYWNrbGlua3Jhc3Rlcl90YWcwQEBcIjogXCJGb3LDp2EgbGEgZnVuY2nDsyBwZXIgdHJhY3RhciBlbCByw6BzdGVyIGQnZW5sbGHDpyBkJ2VudHJhZGEgY29tIGEgcsOgc3RlciBkZSBkaXJlY2Npw7MgZGVsIGZsdXguIEVscyByw6BzdGVycyBkZSBkaXJlY2Npw7MgZGVsIGZsdXggcG9kZW4gdGVuaXIgZW50ZXJzIGFtYiB2YWxvcnMgZW50cmUgMCBpIDI1NS5cIixcblx0XCJAQENvc3QtUGF0aF9mb3JjZWZsb3dkaXJlY3Rpb25jb252ZW50aW9uZm9yYmFja2xpbmtyYXN0ZXJfdGFnMUBAXCI6IFwiRGVzYWN0aXZhdDogc2kgZWxzIHZhbG9ycyBkZWwgcsOgc3RlciBkJ2VubGxhw6cgZXNwZWNpZmljYXRzIHPDs24gZW50ZXJzIGRpbnMgZCd1biBpbnRlcnZhbCBlbnRyZSAwIGkgOCwgZWwgZGF0YXNldCBlcyB0cmFjdGFyw6AgY29tIHVuIHLDoHN0ZXIgZCdlbmxsYcOnIGRlIG1lbm9yIGNvc3QuIFNpIGVscyB2YWxvcnMgc8OzbiBlbnRyZSAwIGkgMjU1LCBsJ2VudHJhZGEgZXMgdHJhY3RhcsOgIGNvbSB1biByw6BzdGVyIGRlIGRpcmVjY2nDsyBkZWwgZmx1eC4gU2kgZWxzIHZhbG9ycyBzw7NuIGVudHJlIDAgaSAzNjAgaSB1biBwdW50IGZsb3RhbnQsIGwnZW50cmFkYSBlcyB0cmFjdGFyw6AgY29tIHVuIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGludmVyc2EuXCIsXG5cdFwiQEBDb3N0LVBhdGhfZm9yY2VmbG93ZGlyZWN0aW9uY29udmVudGlvbmZvcmJhY2tsaW5rcmFzdGVyX3RhZzJAQFwiOiBcIkFjdGl2YXQ6IGVsIHLDoHN0ZXIgcHJvcG9yY2lvbmF0IHBlciBhbCByw6BzdGVyIGQnZW5sbGHDpyBlcyB0cmFjdGFyw6AgY29tIHVuIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGRlbCBmbHV4LiBBcXVlc3RhIG9wY2nDsyBkZSByw6BzdGVyIGRlIGRpcmVjY2nDsyBkZWwgZmx1eCB0w6kgdW4gdmFsb3IgbcOgeGltIGRlIDggbyBtZW55cy5cIixcblx0XCJAQENvc3QtUGF0aF9wYXRodHlwZV90YWcwQEBcIjogXCJQYXJhdWxhIGNsYXUgcXVlIGRlZmluZWl4IGRlIHF1aW5hIG1hbmVyYSBzJ2ludGVycHJldGFyYW4gZWxzIHZhbG9ycyBpIGxlcyB6b25lcyBkZSBsZXMgZGFkZXMgZGUgZGVzdGluYWNpw7MgZCdlbnRyYWRhIGFscyBjw6BsY3VscyBkZSBydXRhIGRlIGNvc3QuIExlcyBvcGNpb25zIHPDs24gbGVzIHNlZ8O8ZW50czpcIixcblx0XCJAQENvc3QtUGF0aF9wYXRodHlwZV90YWcxQEBcIjogXCI8c3Ryb25nPkNhZGEgY2VswrdsYTwvc3Ryb25nPjogcGVyIGEgY2FkYSBjZWzCt2xhIGFtYiB2YWxvcnMgdsOgbGlkcyBhIGxlcyBkYWRlcyBkZSBkZXN0aW5hY2nDsyBkJ2VudHJhZGEsIGVzIGRldGVybWluYXLDoCB1bmEgcnV0YSBkZSBtZW5vciBjb3N0IGkgZXMgZGVzYXLDoCBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIEFtYiBhcXVlc3RhIG9wY2nDsywgY2FkYSBjZWzCt2xhIGRlIGxlcyBkYWRlcyBkZSBkZXN0aW5hY2nDsyBkJ2VudHJhZGEgZXMgdHJhY3RhcsOgIGRlIG1hbmVyYSBpbmRpdmlkdWFsIGkgZXMgZGV0ZXJtaW5hcsOgIHVuYSBydXRhIGRlIG1lbm9yIGNvc3QgcGVyIGEgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBAQ29zdC1QYXRoX3BhdGh0eXBlX3RhZzJAQFwiOiBcIjxzdHJvbmc+Q2FkYSB6b25hPC9zdHJvbmc+OiBwZXIgYSBjYWRhIHpvbmEgZGUgbGVzIGRhZGVzIGRlIGRlc3RpbmFjacOzIGQnZW50cmFkYSwgZXMgZGV0ZXJtaW5hcsOgIHVuYSBydXRhIGRlIG1lbm9yIGNvc3QgaSBlcyBkZXNhcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gQW1iIGFxdWVzdGEgb3BjacOzLCBsYSBydXRhIGRlIG1lbm9yIGNvc3QgcGVyIGEgY2FkYSB6b25hIGNvbWVuw6dhIGEgbGEgY2VswrdsYSBhbWIgbGEgcG9uZGVyYWNpw7MgZGUgZGlzdMOgbmNpYSBkZSBtZW5vciBjb3N0IGEgbGEgem9uYS5cIixcblx0XCJAQENvc3QtUGF0aF9wYXRodHlwZV90YWczQEBcIjogXCI8c3Ryb25nPkwnw7puaWMgbWlsbG9yPC9zdHJvbmc+OiBwZXIgYSB0b3RlcyBsZXMgY2VswrdsZXMgZGUgbGVzIGRhZGVzIGRlIGRlc3RpbmFjacOzIGQnZW50cmFkYSwgbGEgcnV0YSBkZSBtZW5vciBjb3N0IGVzIGRlcml2YSBkZSBsYSBjZWzCt2xhIGFtYiBlbCBtw61uaW0gZGUgcnV0ZXMgZGUgbWVub3IgY29zdCBhIGxlcyBjZWzCt2xlcyBkJ29yaWdlbi5cIixcblx0XCJAQENlbGwtU3RhdGlzdGljc19jZWxsc2l6ZXR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbGEgbWlkYSBkZSBjZWzCt2xhIHF1ZSBzJ3V0aWxpdHphcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gU2kgdG90ZXMgbGVzIG1pZGVzIGRlIGNlbMK3bGEgaW50cm9kdcOvZGVzIHPDs24gaWd1YWxzLCB0b3RlcyBsZXMgb3BjaW9ucyBnZW5lcmFyYW4gZWxzIG1hdGVpeG9zIHJlc3VsdGF0cy5cIixcblx0XCJAQENlbGwtU3RhdGlzdGljc19jZWxsc2l6ZXR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbGEgcHJpbWVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDZWxsLVN0YXRpc3RpY3NfY2VsbHNpemV0eXBlX3RhZzJAQFwiOiBcIk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDZWxsLVN0YXRpc3RpY3NfY2VsbHNpemV0eXBlX3RhZzNAQFwiOiBcIk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQENlbGwtU3RhdGlzdGljc19jZWxsc2l6ZXR5cGVfdGFnNEBAXCI6IFwiTWl0amEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuXCIsXG5cdFwiQEBDZWxsLVN0YXRpc3RpY3NfY2VsbHNpemV0eXBlX3RhZzVAQFwiOiBcIsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLlwiLFxuXHRcIkBAQ2VsbC1TdGF0aXN0aWNzX2V4dGVudHR5cGVfdGFnMEBAXCI6IFwiVHJpZXUgbCdleHRlbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgYWwgcsOgc3RlciBkZSBzb3J0aWRhOlwiLFxuXHRcIkBAQ2VsbC1TdGF0aXN0aWNzX2V4dGVudHR5cGVfdGFnMUBAXCI6IFwiUHJpbWVyIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGVsIHByaW1lciByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuXCIsXG5cdFwiQEBDZWxsLVN0YXRpc3RpY3NfZXh0ZW50dHlwZV90YWcyQEBcIjogXCJJbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQENlbGwtU3RhdGlzdGljc19leHRlbnR0eXBlX3RhZzNAQFwiOiBcIlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQ2VsbC1TdGF0aXN0aWNzX2V4dGVudHR5cGVfdGFnNEBAXCI6IFwiw5psdGltIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgbCfDumx0aW0gcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LlwiLFxuXHRcIkBAQ2VsbC1TdGF0aXN0aWNzX3Byb2Nlc3Nhc211bHRpYmFuZF90YWcwQEBcIjogXCJEZXRlcm1pbmEgY29tIGVzIHByb2Nlc3NlbiBsZXMgYmFuZGVzIGRlIHLDoHN0ZXJzIGQnZW50cmFkYS5cIixcblx0XCJAQENlbGwtU3RhdGlzdGljc19wcm9jZXNzYXNtdWx0aWJhbmRfdGFnMUBAXCI6IFwiRGVzYWN0aXZhdDogdG90ZXMgbGVzIGVudHJhZGVzIG11bHRpYmFuZGEgZXMgcHJvY2Vzc2FyYW4gY29tIGEgYmFuZGVzIMO6bmlxdWVzLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS5cIixcblx0XCJAQENlbGwtU3RhdGlzdGljc19wcm9jZXNzYXNtdWx0aWJhbmRfdGFnMkBAXCI6IFwiQWN0aXZhdDogdG90ZXMgbGVzIGVudHJhZGVzIG11bHRpYmFuZGEgZXMgcHJvY2Vzc2FyYW4gY29tIGEgbXVsdGliYW5kYS5cIixcblx0XCJAQENlbGwtU3RhdGlzdGljc19yYXN0ZXJzX3RhZzBAQFwiOiBcIkxsaXN0YSBkZSByw6BzdGVycyBkZXMgZGUgbGEgcXVhbCBlcyBjYWxjdWxhcmFuIGxlcyBlc3RhZMOtc3RpcXVlcywgcMOteGVsIHBlciBww614ZWwuXCIsXG5cdFwiQEBDZWxsLVN0YXRpc3RpY3NfcGVyY2VudGlsZWludGVycG9sYXRpb250eXBlX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgZWwgbcOodG9kZSBkJ2ludGVycG9sYWNpw7MgcXVlIGVzIGZhcsOgIHNlcnZpciBxdWFuIGVsIHZhbG9yIGRlIHBlcmNlbnRpbCBlc3BlY2lmaWNhdCBlc3RpZ3VpIGVudHJlIGVscyBkb3MgdmFsb3JzIGRlIGxlcyBjZWzCt2xlcyBkJ2VudHJhZGEuPC9wPjx1bD48bGk+PHN0cm9uZz5EZXRlY3RhIGF1dG9tw6B0aWNhbWVudDwvc3Ryb25nPjogc2kgZWxzIHLDoHN0ZXJzIGQnZW50cmFkYSBzw7NuIGRlIHRpcHVzIGRlIHDDrXhlbCBlbnRlciwgcyd1dGlsaXR6YSBlbCBtw6h0b2RlIDxzdHJvbmc+TcOpcyBwcm9wZXI8L3N0cm9uZz4uIFNpIGVsIHLDoHN0ZXIgZCdlbnRyYWRhIMOpcyBkZSB0aXB1cyBkZSBww614ZWwgZGUgcHVudCBmbG90YW50LCBlcyBmYSBzZXJ2aXIgZWwgbcOodG9kZSA8c3Ryb25nPkxpbmVhbDwvc3Ryb25nPi4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48bGk+PHN0cm9uZz5Nw6lzIHByb3Blcjwvc3Ryb25nPjogZXMgZmEgc2VydmlyIGVsIHZhbG9yIGRpc3BvbmlibGUgbcOpcyBwcm9wZXIgYWwgcGVyY2VudGlsIGRlc2l0amF0LiBFbiBhcXVlc3QgY2FzLCBlbCB0aXB1cyBkZSBww614ZWwgZGUgc29ydGlkYSDDqXMgZWwgbWF0ZWl4IHF1ZSBlbCBkZWwgcsOgc3RlciBkZSB2YWxvciBkJ2VudHJhZGEuPC9saT48bGk+PHN0cm9uZz5MaW5lYWw8L3N0cm9uZz46IGVzIGZhIHNlcnZpciBsYSBtaXRqYW5hIHBvbmRlcmFkYSBkZWxzIGRvcyB2YWxvcnMgY2lyY3VtZGFudHMgZGVsIHBlcmNlbnRpbCBkZXNpdGphdC4gRW4gYXF1ZXN0IGFzLCBlbCB0aXB1cyBkZSBww614ZWwgZGUgc29ydGlkYSDDqXMgZWwgcHVudCBmbG90YW50LjwvbGk+PC91bD48cD5BcXVlc3RhIG9wY2nDsyBub23DqXMgZXN0w6AgZGlzcG9uaWJsZSBzaSBlbCBwYXLDoG1ldHJlIGRlIHRpcHVzIDxzdHJvbmc+T3BlcmFjacOzPC9zdHJvbmc+IGVzdMOgIGRlZmluaXQgYW1iIGVsIHZhbG9yIDxzdHJvbmc+TWVkaWFuYTwvc3Ryb25nPiBvIDxzdHJvbmc+UGVyY2VudGlsPC9zdHJvbmc+LjwvcD5cIixcblx0XCJAQENlbGwtU3RhdGlzdGljc19wZXJjZW50aWxldmFsdWVfdGFnMEBAXCI6IFwiPHA+UGVyY2VudGlsIHF1ZSBlcyBjYWxjdWxhcsOgLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgOTAsIHBlciBhbCBwZXJjZW50aWwgOTAuPC9wPjxwPkVscyB2YWxvcnMgcG9kZW4gc2VyIGRlIDAgYSAxMDAuIEVsIHBlcmNlbnRpbCAwIMOpcyBiw6BzaWNhbWVudCBlcXVpdmFsZW50IGEgbCdlc3RhZMOtc3RpY2EgbcOtbmltYSBpIGVsIHBlcmNlbnRpbCAxMDAgZXF1aXZhbCBhIGxhIG3DoHhpbWEuIFVuIHZhbG9yIGRlIDUwIHByb2R1aXLDoCBiw6BzaWNhbWVudCBlbCBtYXRlaXggcmVzdWx0YXQgcXVlIGwnZXN0YWTDrXN0aWNhIGRlIG1lZGlhbmEuPC9wPjxwPkFxdWVzdGEgb3BjacOzIG5vbcOpcyBlc3TDoCBkaXNwb25pYmxlIHNpIHBhcsOgbWV0cmUgZWwgPHN0cm9uZz5PcGVyYWNpw7M8L3N0cm9uZz4gZXN0w6AgZGVmaW5pdCBhbWIgZWwgdmFsb3IgPHN0cm9uZz5QZXJjZW50aWw8L3N0cm9uZz4uPC9wPlwiLFxuXHRcIkBAT3B0aW1hbC1QYXRoLUFzLVJhc3Rlcl9iYWNrZGlyZWN0aW9ucmFzdGVyb3JmbG93ZGlyZWN0aW9ucmFzdGVyX3RhZzBAQFwiOiBcIkVsIHLDoHN0ZXIgZGUgZGlyZWNjacOzIGludmVyc2EgY29udMOpIGxlcyBkaXJlY2Npb25zIGNhbGN1bGFkZXMgZW4gZ3JhdXMuIExhIGRpcmVjY2nDsyBpZGVudGlmaWNhIGxhIGNlbMK3bGEgc2Vnw7xlbnQgYWwgbGxhcmcgZGUgbGEgcnV0YSDDsnB0aW1hIGRlIHRvcm5hZGEgYSBsJ29yaWdlbiBkZSBtZW5vciBjb3N0IGFjdW11bGF0aXUgZXZpdGFudCBsZXMgYmFycmVyZXMuXCIsXG5cdFwiQEBPcHRpbWFsLVBhdGgtQXMtUmFzdGVyX2JhY2tkaXJlY3Rpb25yYXN0ZXJvcmZsb3dkaXJlY3Rpb25yYXN0ZXJfdGFnMUBAXCI6IFwiTCdpbnRlcnZhbCBkZSB2YWxvcnMgw6lzIGRlIDAgYSAzNjAgZ3JhdXMsIGFtYiBlbCB2YWxvciAwIHJlc2VydmF0IHBlciBhIGxlcyBjZWzCt2xlcyBkJ29yaWdlbi4gQ2FwIGEgbCdlc3QgKGRyZXRhKSDDqXMgOTAgaSBlbHMgdmFsb3JzIGF1Z21lbnRlbiBlbiBlbCBzZW50aXQgZGUgbGVzIGFndWxsZXMgZGVsIHJlbGxvdGdlICgxODAgw6lzIGVsIHN1ZCwgMjcwIMOpcyBsJ29lc3QgaSAzNjAgw6lzIGVsIG5vcmQpLlwiLFxuXHRcIkBAT3B0aW1hbC1QYXRoLUFzLVJhc3Rlcl9kZXN0aW5hdGlvbmZpZWxkX3RhZzBAQFwiOiBcIkNhbXAgdXRpbGl0emF0IHBlciBvYnRlbmlyIGVscyB2YWxvcnMgZGUgbGVzIHViaWNhY2lvbnMgZGUgZGVzdGluYWNpw7MuXCIsXG5cdFwiQEBPcHRpbWFsLVBhdGgtQXMtUmFzdGVyX2Rlc3RpbmF0aW9ucmFzdGVyX3RhZzBAQFwiOiBcIkNhcGEgZGUgZGF0YXNldCByw6BzdGVyIHF1ZSBpZGVudGlmaWNhIGxlcyBjZWzCt2xlcyBkZXMgZGUgbGVzIHF1YWxzIGVzIGRldGVybWluYSBsYSBydXRhIMOycHRpbWEgYSBsJ29yaWdlbiBtZW55cyBjb3N0w7NzLiBBcXVlc3RhIGVudHJhZGEgw6lzIG9ibGlnYXTDsnJpYS5cIixcblx0XCJAQE9wdGltYWwtUGF0aC1Bcy1SYXN0ZXJfZGVzdGluYXRpb25yYXN0ZXJfdGFnMUBAXCI6IFwiTGEgY2FwYSByw6BzdGVyIGQnZW50cmFkYSBlc3TDoCBmb3JtYWRhIHBlciBjZWzCt2xlcyBxdWUgdGVuZW4gdmFsb3JzIHbDoGxpZHMgKHplcm8gw6lzIHVuIHZhbG9yIHbDoGxpZCksIGkgbGVzIGNlbMK3bGVzIHJlc3RhbnRzIGhhbiBkZSB0ZW5pciBhc3NpZ25hdCBlbCB2YWxvciBOb0RhdGEuXCIsXG5cdFwiQEBPcHRpbWFsLVBhdGgtQXMtUmFzdGVyX2Rpc3RhbmNlYWNjdW11bGF0aW9ucmFzdGVyX3RhZzBAQFwiOiBcIkVsIHLDoHN0ZXIgZCdhY3VtdWxhY2nDsyBkZSBkaXN0w6BuY2lhIHMndXRpbGl0emEgcGVyIGRldGVybWluYXIgbGEgcnV0YSDDsnB0aW1hIGRlcyBkZSBsZXMgZGVzdGluYWNpb25zIGZpbnMgYWxzIG9yw61nZW5zLiBFbCByw6BzdGVyIGQnYWN1bXVsYWNpw7MgZGUgZGlzdMOgbmNpYSBub3JtYWxtZW50IGVzIGNyZWEgYW1iIGxhIGZ1bmNpw7MgPHN0cm9uZz5BY3VtdWxhY2nDsyBkZSBkaXN0w6BuY2lhPC9zdHJvbmc+LiBDYWRhIGNlbMK3bGEgZGVsIHLDoHN0ZXIgZCdhY3VtdWxhY2nDsyBkZSBkaXN0w6BuY2lhIHJlcHJlc2VudGEgbGEgZGlzdMOgbmNpYSBkZSBjb3N0IGFjdW11bGF0aXUgbcOtbmltIHNvYnJlIHVuYSBzdXBlcmbDrWNpZSBkZSBjYWRhIGNlbMK3bGEgYSB1biBjb25qdW50IGRlIGNlbMK3bGVzIGQnb3JpZ2VuLlwiLFxuXHRcIkBAT3B0aW1hbC1QYXRoLUFzLVJhc3Rlcl9wYXRodHlwZV90YWcwQEBcIjogXCJFc3BlY2lmaWNhIHVuYSBwYXJhdWxhIGNsYXUgcXVlIGRlZmluZWl4IGRlIHF1aW5hIG1hbmVyYSBzJ2ludGVycHJldGFyYW4gZWxzIHZhbG9ycyBpIGxlcyB6b25lcyBkZSBsZXMgZGFkZXMgZGUgZGVzdGluYWNpw7MgZCdlbnRyYWRhIGFscyBjw6BsY3VscyBkZSBydXRhIGRlIGNvc3QuXCIsXG5cdFwiQEBPcHRpbWFsLVBhdGgtQXMtUmFzdGVyX3BhdGh0eXBlX3RhZzFAQFwiOiBcIjxzdHJvbmc+Q2FkYSB6b25hPC9zdHJvbmc+OiBwZXIgYSBjYWRhIHpvbmEgZGUgbGVzIGRhZGVzIGRlIGRlc3RpbmFjacOzIGQnZW50cmFkYSwgZXMgZGV0ZXJtaW5hcsOgIHVuYSBydXRhIGRlIG1lbm9yIGNvc3QgaSBlcyBkZXNhcsOgIGFsIHLDoHN0ZXIgZGUgc29ydGlkYS4gQW1iIGFxdWVzdGEgb3BjacOzLCBsYSBydXRhIMOycHRpbWEgcGVyIGEgY2FkYSB6b25hIGNvbWVuw6dhIGEgbGEgY2VswrdsYSBhbWIgbGEgcG9uZGVyYWNpw7MgZGUgZGlzdMOgbmNpYSBkZSBtZW5vciBjb3N0IGEgbGEgem9uYS5cIixcblx0XCJAQE9wdGltYWwtUGF0aC1Bcy1SYXN0ZXJfcGF0aHR5cGVfdGFnMkBAXCI6IFwiPHN0cm9uZz5MJ8O6bmljIG1pbGxvcjwvc3Ryb25nPjogcGVyIGEgdG90ZXMgbGVzIGNlbMK3bGVzIGRlIGxlcyBkYWRlcyBkZSBkZXN0aW5hY2nDsyBkJ2VudHJhZGEsIGxhIHJ1dGEgw7JwdGltYSBlcyBkZXJpdmEgZGUgbGEgY2VswrdsYSBhbWIgZWwgbcOtbmltIGRlIHJ1dGVzIGRlIG1lbm9yIGNvc3QgYSBsZXMgY2VswrdsZXMgZCdvcmlnZW4uXCIsXG5cdFwiQEBPcHRpbWFsLVBhdGgtQXMtUmFzdGVyX3BhdGh0eXBlX3RhZzNAQFwiOiBcIjxzdHJvbmc+Q2FkYSBjZWzCt2xhPC9zdHJvbmc+OiBwZXIgYSBjYWRhIGNlbMK3bGEgYW1iIHZhbG9ycyB2w6BsaWRzIGEgbGVzIGRhZGVzIGRlIGRlc3RpbmFjacOzIGQnZW50cmFkYSwgZXMgZGV0ZXJtaW5hIHVuYSBydXRhIMOycHRpbWEuIEFtYiBhcXVlc3RhIG9wY2nDsywgY2FkYSBjZWzCt2xhIGRlIGxlcyBkYWRlcyBkZSBkZXN0aW5hY2nDsyBkJ2VudHJhZGEgZXMgdHJhY3RhcsOgIGRlIG1hbmVyYSBpbmRpdmlkdWFsIGkgZXMgZGV0ZXJtaW5hcsOgIHVuYSBydXRhIMOycHRpbWEgcGVyIGEgY2FkYSBjZWzCt2xhLlwiLFxuXHRcIkBAQ0NEQy1BbmFseXNpc19iYW5kc2ZvcmRldGVjdGluZ2NoYW5nZV90YWcwQEBcIjogXCJJRCBkZSBiYW5kYSBxdWUgcyd1dGlsaXR6YXJhbiBwZXIgZGV0ZWN0YXIgY2FudmlzLiBTaSBubyBlcyBwcm9wb3JjaW9uZW4gSUQgZGUgYmFuZGEsIHMndXRpbGl0emFyYW4gdG90ZXMgbGVzIGJhbmRlcyBkZWwgZGF0YXNldCByw6BzdGVyIGQnZW50cmFkYS5cIixcblx0XCJAQENDREMtQW5hbHlzaXNfYmFuZHNmb3JkZXRlY3RpbmdjaGFuZ2VfdGFnMUBAXCI6IFwiRWxzIHZhbG9ycyBkJ0lEIGhhbiBkZSBzZXIgZW50ZXJzIHNlcGFyYXRzIHBlciBlc3BhaXMuXCIsXG5cdFwiQEBDQ0RDLUFuYWx5c2lzX2JhbmRzZm9ydGVtcG9yYWxtYXNraW5nX3RhZzBAQFwiOiBcIklEIGRlIGJhbmRhIGRlIGxhIGJhbmRhIHZlcmRhIGkgbGEgYmFuZGEgZGUgU1dJUiBxdWUgcyd1dGlsaXR6YXJhbiBwZXIgZW1tYXNjYXJhciBuw7p2b2xzLCBvbWJyZXMgZGUgbsO6dm9scyBpIG5ldS4gU2kgbm8gZXMgcHJvcG9yY2lvbmVuIElEIGRlIGJhbmRhLCBubyBlcyBjcmVhcmFuIGxlcyBtw6BzY2FyZXMuXCIsXG5cdFwiQEBDQ0RDLUFuYWx5c2lzX2JhbmRzZm9ydGVtcG9yYWxtYXNraW5nX3RhZzFAQFwiOiBcIkVscyB2YWxvcnMgZCdJRCBoYW4gZGUgc2VyIGVudGVycyBzZXBhcmF0cyBwZXIgZXNwYWlzLlwiLFxuXHRcIkBAQ0NEQy1BbmFseXNpc19iYW5kc2ZvcnRlbXBvcmFsbWFza2luZ190YWcyQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBlc3BlY2lmaWNhIGxlcyBiYW5kZXMgcXVlIHMndXRpbGl0emFyYW4gcGVyIGEgbGVzIG3DoHNjYXJlcyBkZSBuw7p2b2xzLCBkJ29tYnJlcyBkZSBuw7p2b2xzIGkgZGUgbmV1LiBDb20gcXVlIGxlcyBvbWJyZXMgZGUgbsO6dm9scyBpIGxhIG5ldSBlcyBtb3N0cmVuIG1vbHQgZm9zcXVlcyBhIGxhIGJhbmRhIGQnaW5mcmFyb2pvcyBkJ29uYSBjdXJ0YSAoU1dJUiksIGkgZWxzIG7DunZvbHMgaSBsYSBuZXUgZXMgbW9zdHJlbiBtb2x0IGJyaWxsYW50cyBhIGxhIGJhbmRhIHZlcmRhLCBlcyByZWNvbWFuYSBxdWUgZWxzIMOtbmRleCBkZSBsYSBiYW5kYSBkZSBTV0lSIGkgbGEgYmFuZGEgdmVyZGEgZXN0aWd1aW4gZW1tYXNjYXJhdHMuXCIsXG5cdFwiQEBDQ0RDLUFuYWx5c2lzX2NoaS1zcXVhcmVkdGhyZXNob2xkZm9yZGV0ZWN0Y2hhbmdlX3RhZzBAQFwiOiBcIkzDrW1pdCBkZSBwcm9iYWJpbGl0YXQgZGUgY2FudmkgZGUga2hpIHF1YWRyYXQuIFNpIHVuYSBvYnNlcnZhY2nDsyB0w6kgdW5hIHByb2JhYmlsaXRhdCBkZSBjYW52aSBjYWxjdWxhZGEgcXVlIGVzdMOgIHBlciBzb2JyZSBkJ2FxdWVzdCBsw61taXQsIGVzIG1hcmNhIGNvbSB1bmEgYW5vbWFsaWEsIHF1ZSDDqXMgdW4gcG9zc2libGUgZXNkZXZlbmltZW50IGRlIGNhbnZpLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMCw5OS5cIixcblx0XCJAQENDREMtQW5hbHlzaXNfbWluaW11bWNvbnNlY3V0aXZlYW5vbWFseW9ic2VydmF0aW9uc190YWcwQEBcIjogXCJOb21icmUgbcOtbmltIGQnb2JzZXJ2YWNpb25zIGNvbnNlY3V0aXZlcyBkJ2Fub21hbGllcyBxdWUgcydoYW4gZGUgcHJvZHVpciBhYmFucyBxdWUgdW4gZXNkZXZlbmltZW50IGVzIGNvbnNpZGVyaSB1biBjYW52aS4gVW4gcMOteGVsIHMnaGEgZGUgbWFyY2FyIGNvbSB1bmEgYW5vbWFsaWEgZWwgbm9tYnJlIGVzcGVjaWZpY2F0IGRlIHNlY3RvcnMgZGUgdGVtcHMgY29uc2VjdXRpdXMgYWJhbnMgcXVlIGVzIGNvbnNpZGVyaSB1biBjYW52aSByZWFsLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgNi5cIixcblx0XCJAQENDREMtQW5hbHlzaXNfcmFzdGVyX3RhZzBAQFwiOiBcIkNhcGEgcsOgc3RlciBtdWx0aWRpbWVuc2lvbmFsIGQnZW50cmFkYS5cIixcblx0XCJAQENDREMtQW5hbHlzaXNfdXBkYXRpbmdmaXR0aW5nZnJlcXVlbmN5KGlueWVhcnMpX3RhZzBAQFwiOiBcIkZyZXHDvMOobmNpYSBhbWIgcXXDqCBzJ2FjdHVhbGl0emEgZWwgbW9kZWwgZGUgc8OocmllIHRlbXBvcmFsIGFtYiBub3ZlcyBvYnNlcnZhY2lvbnMuIFBlciBkZWZlY3RlLCBzJ2FjdHVhbGl0emEgZWwgbW9kZWwgY2FkYSBhbnkuXCIsXG5cdFwiQEBDQ0RDLUFuYWx5c2lzX3VwZGF0aW5nZml0dGluZ2ZyZXF1ZW5jeShpbnllYXJzKV90YWcxQEBcIjogXCJBcXVlc3QgcGFyw6BtZXRyZSBkZWZpbmVpeCBhbWIgcXVpbmEgZnJlccO8w6huY2lhIHMnYWN0dWFsaXR6YXLDoCBlbCBtb2RlbCBkZSBzw6hyaWUgdGVtcG9yYWwgYW1iIG5vdmVzIG9ic2VydmFjaW9ucy4gQWN0dWFsaXR6YXIgdW4gbW9kZWwgYW1iIGZyZXHDvMOobmNpYSBwb3QgY29tcG9ydGFyIHVuIGdyYW4gY29zdCBjb21wdXRhY2lvbmFsIGkgZWxzIGJlbmVmaWNpcyBwb2RlbiBzZXIgbcOtbmltcy4gUGVyIGV4ZW1wbGUsIHNpIGhpIGhhIDM2NSBzZWN0b3JzIG8gb2JzZXJ2YWNpb25zIGNsYXJlcyBwZXIgYW55IGFsIHLDoHN0ZXIgbXVsdGlkaW1lbnNpb25hbCBpIGxhIGZyZXHDvMOobmNpYSBkJ2FjdHVhbGl0emFjacOzIMOpcyBwZXIgYSBjYWRhIG9ic2VydmFjacOzLCBlbCBwcm9jZXNzYW1lbnQgdGluZHLDoCB1biBjb3N0IGNvbXB1dGFjaW9uYWwgMzY1IHZlZ2FkZXMgc3VwZXJpb3IgZW4gY29tcGFyYWNpw7MgYW1iIGFjdHVhbGl0emFyLWxvIGNhZGEgYW55LCBwZXLDsiDDqXMgcG9zc2libGUgcXVlIGxhIHByZWNpc2nDsyBubyBzaWd1aSBzdXBlcmlvci5cIixcblx0XCJAQFRyZW5kLVRvLVJHQl9tb2RlbHR5cGVfdGFnMEBAXCI6IFwiVGlwdXMgZCdpbmZvcm1hY2nDsyBkZWwgbW9kZWwgcXVlIGVzIGNvbnZlcnRpcsOgIGEgUkdCLlwiLFxuXHRcIkBAVHJlbmQtVG8tUkdCX21vZGVsdHlwZV90YWcxQEBcIjogXCJMaW5lYWw6IGluZm9ybWFjacOzIGRlIHRlbmTDqG5jaWEgbGluZWFsIHF1ZSBlcyBjb252ZXJ0aXLDoCBhIFJHQi4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuXCIsXG5cdFwiQEBUcmVuZC1Uby1SR0JfbW9kZWx0eXBlX3RhZzJAQFwiOiBcIkhhcm3Dsm5pYzogaW5mb3JtYWNpw7MgZGUgdGVuZMOobmNpYSBoYXJtw7JuaWNhIHF1ZSBlcyBjb252ZXJ0aXLDoCBhIFJHQi5cIixcblx0XCJAQFRyZW5kLVRvLVJHQl9yYXN0ZXJfdGFnMEBAXCI6IFwiUsOgc3RlciBkZSB0ZW5kw6huY2lhIGQnZW50cmFkYS5cIixcblx0XCJAQExhbmRUcmVuZHItQW5hbHlzaXNfYmVzdG1vZGVscHJvcG9ydGlvbl90YWcwQEBcIjogXCI8cD5FbCBtaWxsb3IgdmFsb3IgZGUgcHJvcG9yY2nDsyBkZWwgbW9kZWwuIER1cmFudCBlbCBwcm9jw6lzIGRlIHNlbGVjY2nDsyBkZWwgbW9kZWwsIGwnZWluYSBjYWxjdWxhcsOgIGVsIHZhbG9yIHAgZGUgY2FkYSBtb2RlbCBpIHNlbGVjY2lvbmFyw6AgZWwgcXVlIHRpbmd1aSBtw6lzIHbDqHJ0ZXhzLCBhbGhvcmEgcXVlIGNvbnNlcnZhcsOgIGVsIHZhbG9yIHAgbcOpcyBwZXRpdCAoZWwgbcOpcyBzaWduaWZpY2F0aXUpIGVuIGZ1bmNpw7MgZCdhcXVlc3QgdmFsb3IgZGUgcHJvcG9yY2nDsy4gU2kgZWwgdmFsb3Igw6lzIDEsIHNpZ25pZmljYSBxdWUgZWwgbW9kZWwgdMOpIGVsIHZhbG9yIHAgbcOpcyBiYWl4LCBwZXLDsiDDqXMgcG9zc2libGUgcXVlIG5vIHRpbmd1aSB1biB2YWxvciBlbGV2YXQgZGUgdsOocnRleHMuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAxLDI1LjwvcD5cIixcblx0XCJAQExhbmRUcmVuZHItQW5hbHlzaXNfbWF4aW11bW51bWJlcm9mc2VnbWVudHNfdGFnMEBAXCI6IFwiPHA+Tm9tYnJlIG3DoHhpbSBkZSBzZWdtZW50cyBxdWUgcydhanVzdGFyYW4gYSBsYSBzw6hyaWUgdGVtcG9yYWwgZGUgY2FkYSBww614ZWwuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyA1LjwvcD5cIixcblx0XCJAQExhbmRUcmVuZHItQW5hbHlzaXNfbWluaW11bW51bWJlcm9mb2JzZXJ2YXRpb25zX3RhZzBAQFwiOiBcIjxwPk5vbWJyZSBtw61uaW0gZCdvYnNlcnZhY2lvbnMgdsOgbGlkZXMgbmVjZXNzw6ByaWVzIHBlciBmZXIgbCdhanVzdC4gRWwgbm9tYnJlIGQnYW55cyBkZWwgZGF0YXNldCBtdWx0aWRpbWVuc2lvbmFsIGQnZW50cmFkYSBoYSBkZSBzZXIgaWd1YWwgbyBtw6lzIGdyYW4gcXVlIGFxdWVzdCB2YWxvci4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIDYuPC9wPlwiLFxuXHRcIkBATGFuZFRyZW5kci1BbmFseXNpc19vdXRwdXRvdGhlcmJhbmRzX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2Egc2kgcydpbmNsb3VyYW4gYWx0cmVzIGJhbmRlcyBhbHMgcmVzdWx0YXRzLjwvcD48dWw+PGxpPkFjdGl2YXQ6IHMnaW5jbG91cmFuIGFsdHJlcyBiYW5kZXMgYWxzIHJlc3VsdGF0cy4gTGEgaW5mb3JtYWNpw7MgZGUgc2VnbWVudGFjacOzIGkgZGUgdsOocnRleHMgZGUgbGEgYmFuZGEgZGUgc2VnbWVudGFjacOzIGluaWNpYWwgZXNwZWNpZmljYWRhIGFsIHBhcsOgbWV0cmU8c3Ryb25nPkJhbmRhIGRlIHByb2Nlc3NhbWVudDwvc3Ryb25nPnRhbWLDqSBzJ2FqdXN0YXLDoCBhIGxlcyBiYW5kZXMgcmVzdGFudHMgZGUgbGVzIGltYXRnZXMgbXVsdGliYW5kYS4gRWxzIHJlc3VsdGF0cyBkZWwgbW9kZWwgaW5jbG91cmFuIHByaW1lciBsYSBiYW5kYSBkZSBzZWdtZW50YWNpw7MgaSwgYSBjb250aW51YWNpw7MsIGxhIHJlc3RhIGRlIGJhbmRlcy48L2xpPjxsaT5EZXNhY3RpdmF0OiBubyBzJ2luY2xvdXJhbiBsZXMgYWx0cmVzIGJhbmRlcy4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48L3VsPlwiLFxuXHRcIkBATGFuZFRyZW5kci1BbmFseXNpc19wcmV2ZW50b25leWVhcnJlY292ZXJ5X3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2Egc2kgZWxzIHNlZ21lbnRzIHF1ZSBwcmVzZW50ZW4gdW5hIHJlY3VwZXJhY2nDsyBkJ3VuIGFueSBzJ2V4Y2xvdXJhbi48L3A+PHVsPjxsaT5BY3RpdmF0OiBlbHMgc2VnbWVudHMgcXVlIHByZXNlbnRlbiB1bmEgcmVjdXBlcmFjacOzIGQndW4gYW55IHMnZXhjbG91cmFuLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT5EZXNhY3RpdmF0OiBlbHMgc2VnbWVudHMgcXVlIHByZXNlbnRlbiB1bmEgcmVjdXBlcmFjacOzIGQndW4gYW55IG5vIHMnZXhjbG91cmFuLjwvbGk+PC91bD5cIixcblx0XCJAQExhbmRUcmVuZHItQW5hbHlzaXNfcHJvY2Vzc2luZ2JhbmRfdGFnMEBAXCI6IFwiPHA+QmFuZGEgcXVlIHMndXRpbGl0emFyw6AgcGVyIHNlZ21lbnRhciBsZXMgdHJhamVjdMOycmllcyBkZSB2YWxvcnMgZGUgcMOteGVsIGFsIGxsYXJnIGRlbCB0ZW1wcy4gVHJpZXUgbGEgYmFuZGEgcXVlIGNhcHR1cmFyw6AgbWlsbG9yIGVscyBjYW52aXMgZW4gbCdlbnRpdGF0IHF1ZSB2b2xldSBvYnNlcnZhci48L3A+XCIsXG5cdFwiQEBMYW5kVHJlbmRyLUFuYWx5c2lzX3AtdmFsdWV0aHJlc2hvbGRfdGFnMEBAXCI6IFwiPHA+TGxpbmRhciBkZWwgdmFsb3IgcCBkJ3VuIG1vZGVsIHF1ZSBzZSBzZWxlY2Npb25hcsOgLiBEZXNwcsOpcyBxdWUgZXMgZGV0ZWN0aW4gZWxzIHbDqHJ0ZXhzIGEgbCdldGFwYSBpbmljaWFsIGRlIGwnYWp1c3QgZGVsIG1vZGVsLCBsJ2VpbmEgYWp1c3RhcsOgIGNhZGEgc2VnbWVudCBpIGNhbGN1bGFyw6AgZWwgdmFsb3IgcCBwZXIgZGV0ZXJtaW5hciBsYSBzaWduaWZpY2FjacOzIGRlbCBtb2RlbC4gQSBsYSBpdGVyYWNpw7Mgc2Vnw7xlbnQsIGVsIG1vZGVsIGRpc21pbnVpcsOgIGVuIHVuIGVsIG5vbWJyZSBkZSBzZWdtZW50cyBpIHJlY2FsY3VsYXLDoCBlbCB2YWxvciBwLiBBcXVlc3QgcHJvY8OpcyBjb250aW51YXLDoCBpLCBzaSBlbCB2YWxvciBwIMOpcyBtw6lzIHBldGl0IHF1ZSBlbCB2YWxvciBlc3BlY2lmaWNhdCBlbiBhcXVlc3QgcGFyw6BtZXRyZSwgc2Ugc2VsZWNjaW9uYXLDoCBlbCBtb2RlbCBpIGwnZWluYSBkZWl4YXLDoCBkZSBjZXJjYXIgdW4gbW9kZWwgbWlsbG9yLiBTaSBubyBzZSBzZWxlY2Npb25hIGNhcCBtb2RlbCBkJ2FxdWVzdCB0aXB1cywgbCdlaW5hIHNlbGVjY2lvbmFyw6AgdW4gbW9kZWwgYW1iIHVuIHZhbG9yIHAgbcOpcyBwZXRpdCBxdWUgPHN0cm9uZz5lbCB2YWxvciBwIG3DqXMgcGV0aXQgw5cgZWwgbWlsbG9yIHZhbG9yIGRlIHByb3BvcmNpw7MgZGUgbW9kZWw8L3N0cm9uZz4uIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAwLDAxLjwvcD5cIixcblx0XCJAQExhbmRUcmVuZHItQW5hbHlzaXNfcmFzdGVyX3RhZzBAQFwiOiBcIjxwPkNhcGEgcsOgc3RlciBtdWx0aWRpbWVuc2lvbmFsIGRlIExhbmRzYXQgZCdlbnRyYWRhLjwvcD5cIixcblx0XCJAQExhbmRUcmVuZHItQW5hbHlzaXNfcmVjb3ZlcnloYXNpbmNyZWFzZXRyZW5kX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2Egc2kgbGEgcmVjdXBlcmFjacOzIHTDqSB1bmEgdGVuZMOobmNpYSBjcmVpeGVudCAocG9zaXRpdmEpLjwvcD48dWw+PGxpPkFjdGl2YXQ6IGxhIHJlY3VwZXJhY2nDsyB0w6kgdW5hIHRlbmTDqG5jaWEgY3JlaXhlbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLjwvbGk+PGxpPkRlc2FjdGl2YXQ6IGxhIHJlY3VwZXJhY2nDsyB0w6kgdW5hIHRlbmTDqG5jaWEgZGVjcmVpeGVudC48L2xpPjwvdWw+XCIsXG5cdFwiQEBMYW5kVHJlbmRyLUFuYWx5c2lzX3JlY292ZXJ5dGhyZXNob2xkX3RhZzBAQFwiOiBcIjxwPlZhbG9yIGRlbCBsbGluZGFyIGRlIHJlY3VwZXJhY2nDsywgZW4gYW55cy4gU2kgdW4gc2VnbWVudCB0w6kgdW4gw61uZGV4IGRlIHJlY3VwZXJhY2nDsyBtw6lzIHLDoHBpZCBxdWUgPHN0cm9uZz4xL2xsaW5kYXIgZGUgcmVjdXBlcmFjacOzPC9zdHJvbmc+LCBlbCBzZWdtZW50IGVzIGRlc2NhcnRhIGkgbm8gcydpbmNsb3UgYWwgbW9kZWwgZGUgc8OocmllIHRlbXBvcmFsLiBFbCB2YWxvciBoYSBkJ2VzdGFyIGNvbXByw6hzIGVudHJlIDAgaSAxLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMCwyNS48L3A+XCIsXG5cdFwiQEBMYW5kVHJlbmRyLUFuYWx5c2lzX3NuYXBwaW5nZGF0ZV90YWcwQEBcIjogXCI8cD5EYXRhIHF1ZSBlcyBmYSBzZXJ2aXIgcGVyIHNlbGVjY2lvbmFyIHVuIHNlY3RvciBwZXIgYSBjYWRhIGFueSBhbCBkYXRhc2V0IG11bHRpZGltZW5zaW9uYWwgZCdlbnRyYWRhLiBTZSBzZWxlY2Npb25hcsOgIGVsIHNlY3RvciBhbWIgbGEgZGF0YSBtw6lzIHByb3BlcmEgYSBsYSBkYXRhIGQnYWxpbmVhY2nDsy4gQXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgc2kgZWwgZGF0YXNldCBjb250w6kgZGFkZXMgc3ViYW51YWxzLjwvcD5cIixcblx0XCJAQExhbmRUcmVuZHItQW5hbHlzaXNfc3Bpa2V0aHJlc2hvbGRfdGFnMEBAXCI6IFwiPHA+TGxpbmRhciBxdWUgZXMgZmFyw6Agc2VydmlyIHBlciBzdWF2aXR6YXIgZWxzIHBpY3MgbyBsZXMgYW5vbWFsaWVzIGEgbGEgdHJhamVjdMOycmlhIGRlIHZhbG9ycyBkZSBww614ZWwuIEVsIHZhbG9yIGhhIGQnZXN0YXIgY29tcHLDqHMgZW50cmUgMCBpIDEsIGkgMSBzaWduaWZpY2EgcXVlIG5vIHNlIHN1YXZpdHphcsOgLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMCw5LjwvcD5cIixcblx0XCJAQExhbmRUcmVuZHItQW5hbHlzaXNfdmVydGV4Y291bnRvdmVyc2hvb3RfdGFnMEBAXCI6IFwiPHA+Tm9tYnJlIGRlIHbDqHJ0ZXhzIGFkZGljaW9uYWxzIG3DqXMgZW5sbMOgIGRlPHN0cm9uZz5tYXhfbnVtX3NlZ21lbnRzICsgMTwvc3Ryb25nPnF1ZSBlcyBwb2RlbiBmZXIgc2VydmlyIHBlciBhanVzdGFyIGVsIG1vZGVsIGR1cmFudCBsJ2VzdGF0IGluaWNpYWwgZCdpZGVudGlmaWNhY2nDsyBkZWxzIHbDqHJ0ZXhzLiBNw6lzIGVuZGF2YW50IGVuIGVsIHByb2PDqXMgZGUgbW9kZWxpdHphY2nDsywgZWwgbm9tYnJlIGRlIHbDqHJ0ZXhzIGFkZGljaW9uYWxzIGVzIHJlZHVpcsOgIGE8c3Ryb25nPm1heF9udW1fc2VnbWVudHMgKyAxPC9zdHJvbmc+LiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMi48L3A+XCIsXG5cdFwiQEBNZXJnZS1SYXN0ZXJzX3Jhc3RlcnNfdGFnMEBAXCI6IFwiPHA+RGF0YXNldHMgcsOgc3RlciBkJ2VudHJhZGEgbyBkYXRhc2V0cyByw6BzdGVyIG11bHRpZGltZW5zaW9uYWxzIHF1ZSBlcyBmdXNpb25hcmFuLjwvcD5cIixcblx0XCJAQE1lcmdlLVJhc3RlcnNfcmVzb2x2ZW92ZXJsYXBtZXRob2RfdGFnMEBAXCI6IFwiPHA+RXNwZWNpZmljYSBlbCBtw6h0b2RlIHF1ZSBlcyBmYXLDoCBzZXJ2aXIgcGVyIHJlc29sZHJlIGVscyBww614ZWxzIHN1cGVycG9zYXRzIGFscyBkYXRhc2V0cyBjb21iaW5hdHMuPC9wPjx1bD48bGk+PHN0cm9uZz5QcmltZXI8L3N0cm9uZz46IGVsIHZhbG9yIGRlbCBww614ZWwgYSBsZXMgem9uZXMgc3VwZXJwb3NhZGVzIMOpcyBlbCB2YWxvciBkZWwgcHJpbWVyIHLDoHN0ZXIgYSBsYSBsbGlzdGEgZGUgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwcmVkZXRlcm1pbmFkYS48L2xpPjxsaT48c3Ryb25nPsOabHRpbTwvc3Ryb25nPjogZWwgdmFsb3IgZGVsIHDDrXhlbCBhIGxlcyB6b25lcyBzdXBlcnBvc2FkZXMgw6lzIGVsIHZhbG9yIGRlIGwnw7psdGltIHLDoHN0ZXIgYSBsYSBsbGlzdGEgZGUgcsOgc3RlcnMgZCdlbnRyYWRhLjwvbGk+PGxpPjxzdHJvbmc+TcOtbmltPC9zdHJvbmc+OiBlbCB2YWxvciBkZWwgcMOteGVsIGEgbGVzIHpvbmVzIHN1cGVycG9zYWRlcyDDqXMgZWwgdmFsb3IgbcOtbmltIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cy48L2xpPjxsaT48c3Ryb25nPk3DoHhpbTwvc3Ryb25nPjogZWwgdmFsb3IgZGVsIHDDrXhlbCBhIGxlcyB6b25lcyBzdXBlcnBvc2FkZXMgw6lzIGVsIHZhbG9yIG3DoHhpbSBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMuPC9saT48bGk+PHN0cm9uZz5WYWxvciBtaXRqw6A8L3N0cm9uZz46IGVsIHZhbG9yIGRlbCBww614ZWwgYSBsZXMgem9uZXMgc3VwZXJwb3NhZGVzIMOpcyBlbCB2YWxvciBtaXRqw6AgZGVscyBww614ZWxzIHN1cGVycG9zYXRzLjwvbGk+PGxpPjxzdHJvbmc+U3VtYTwvc3Ryb25nPjogZWwgdmFsb3IgZGVsIHDDrXhlbCBhIGxlcyB6b25lcyBzdXBlcnBvc2FkZXMgw6lzIGVsIHRvdGFsIGRlIGxhIHN1bWEgZGVscyBww614ZWxzIHN1cGVycG9zYXRzLjwvbGk+PC91bD5cIixcblx0XCJAQEdlbmVyYXRlLVRyZW5kX2N5Y2xldW5pdF90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIGxhIHVuaXRhdCBkZSB0ZW1wcyBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgYSBsYSBkdXJhZGEgZCd1biBjaWNsZSBoYXJtw7JuaWMuPC9wPjx1bD48bGk+PHN0cm9uZz5EaWVzPC9zdHJvbmc+OiBsYSB1bml0YXQgZGUgbGEgZHVyYWRhIGRlbCBjaWNsZSBoYXJtw7JuaWMgw6lzIGRpZXMuPC9saT48bGk+PHN0cm9uZz5BbnlzPC9zdHJvbmc+OiBsYSB1bml0YXQgZGUgbGEgZHVyYWRhIGRlbCBjaWNsZSBoYXJtw7JuaWMgw6lzIGFueXMuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLjwvbGk+PC91bD5cIixcblx0XCJAQEdlbmVyYXRlLVRyZW5kX2RpbWVuc2lvbm5hbWVfdGFnMEBAXCI6IFwiPHA+RGltZW5zacOzIGFtYiBsYSBxdWFsIHMnZXh0cmF1csOgIHVuYSB0ZW5kw6huY2lhIHBlciBhIGxhIHZhcmlhYmxlIG8gbGVzIHZhcmlhYmxlcyBzZWxlY2Npb25hZGVzIGEgbCdhbsOgbGlzaS48L3A+XCIsXG5cdFwiQEBHZW5lcmF0ZS1UcmVuZF9oYXJtb25pY2ZyZXF1ZW5jeV90YWcwQEBcIjogXCI8cD5Ob21icmUgZGUgbGEgZnJlccO8w6huY2lhIHF1ZSBlcyBmYXLDoCBzZXJ2aXIgYSBsJ2FqdXN0IGRlIGxhIHRlbmTDqG5jaWEuIEFxdWVzdCBwYXLDoG1ldHJlIGVzcGVjaWZpY2EgbGEgZnJlccO8w6huY2lhIGRlIGNpY2xlcyBhIGwnYW55LiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMSwgbyB1biBjaWNsZSBoYXJtw7JuaWMgcGVyIGFueS48L3A+PHA+QXF1ZXN0IHBhcsOgbWV0cmUgbm9tw6lzIHMnaW5jbG91IGEgbCdhbsOgbGlzaSBkZSB0ZW5kw6huY2lhIGQndW5hIHJlZ3Jlc3Npw7MgaGFybcOybmljYS48L3A+XCIsXG5cdFwiQEBHZW5lcmF0ZS1UcmVuZF9pZ25vcmVub2RhdGFfdGFnMEBAXCI6IFwiPHA+RXNwZWNpZmljYSBzaSBlbHMgdmFsb3JzIE5vRGF0YSBzJ2lnbm9yYXJhbiBhIGwnYW7DoGxpc2kuPC9wPjx1bD48bGk+QWN0aXZhdDogbCdhbsOgbGlzaSBpbmNsb3Vyw6AgdG90cyBlbHMgcMOteGVscyB2w6BsaWRzIGVuIHVuYSBkaW1lbnNpw7MgZGV0ZXJtaW5hZGEgaSBpZ25vcmFyw6AgZWxzIHDDrXhlbHMgTm9EYXRhLiBBcXVlc3Qgw6lzIGVsIHZhbG9yIHBlciBkZWZlY3RlLjwvbGk+PGxpPkRlc2FjdGl2YXQ6IGwnYW7DoGxpc2kgdGluZHLDoCBjb20gYSByZXN1bHRhdCBOb0RhdGEgc2kgaGkgaGEgYWxndW4gdmFsb3IgTm9EYXRhIHBlciBhbHMgcMOteGVscyBhIGxhIGRpbWVuc2nDsyBwcm9wb3JjaW9uYWRhLjwvbGk+PC91bD5cIixcblx0XCJAQEdlbmVyYXRlLVRyZW5kX2xlbmd0aG9mY3ljbGVfdGFnMEBAXCI6IFwiPHA+RHVyYWRhIGRlIGxhIHZhcmlhY2nDsyBwZXJpw7JkaWNhIGFtYiBxdcOoIGVzIGNyZWFyw6AgZWwgbW9kZWwuIExhIHVuaXRhdCDDqXMgZGllcywgaW5kZXBlbmRlbnRtZW50IGRlIGxhIHVuaXRhdCBkZSB0ZW1wcyBkZSBsZXMgZGFkZXMgZCdlbnRyYWRhLiBQZXIgZXhlbXBsZSwgbGEgdmVyZG9yIGRlIGxlcyBmdWxsZXMgc292aW50IHTDqSB1biBjaWNsZSBtYXJjYXQgZGUgdmFyaWFjacOzIGFsIGxsYXJnIGQndW4gYW55LCBhaXjDrSBxdWUgbGEgZHVyYWRhIGRlbCBjaWNsZSDDqXMgZGUgMzY1LDI1LCBlbmNhcmEgcXVlIGxlcyBkYWRlcyBkJ2VudHJhZGEgc2lndWluIGxhIHZlcmRvciBtZW5zdWFsLiBMZXMgZGFkZXMgZGUgdGVtcGVyYXR1cmEgcGVyIGhvcmEgdGVuZW4gdW4gY2ljbGUgbWFyY2F0IGRlIHZhcmlhY2nDsyBhbCBsbGFyZyBkJ3VuIGRpYSwgZGUgbWFuZXJhIHF1ZSBsYSBkdXJhZGEgZGVsIGNpY2xlIMOpcyBkJzEuPC9wPjxwPkxhIGR1cmFkYSBwZXIgZGVmZWN0ZSDDqXMgZGUgMzY1LDI1IGRpZXMgcGVyIGEgbGVzIGRhZGVzIHF1ZSB2YXJpZW4gZW4gdW4gY2ljbGUgYW51YWwuPC9wPlwiLFxuXHRcIkBAR2VuZXJhdGUtVHJlbmRfcC12YWx1ZW9mc2xvcGVjb2VmZmljaWVudF90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIHNpIGVzIGNhbGN1bGFyw6AgbCdlc3RhZMOtc3RpY2EgZGVsIHZhbG9yIHAgZGVsIGNvZWZpY2llbnQgZGUgcGVuZGVudCBkZSBsYSBsw61uaWEgZGUgdGVuZMOobmNpYS48L3A+PHVsPjxsaT5BY3RpdmF0OiBlbCB2YWxvciBwIGVzIGNhbGN1bGFyw6AgaSBlcyBtb3N0cmFyw6AgYWxzIGRldGFsbHMgcXVhbiBlcyBjb21wbGV0aSBsYSBmdW5jacOzLjwvbGk+PGxpPkRlc2FjdGl2YXQ6IG5vIGVzIGNhbGN1bGFyw6AgZWwgdmFsb3IgcC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48L3VsPlwiLFxuXHRcIkBAR2VuZXJhdGUtVHJlbmRfcG9seW5vbWlhbG9yZGVyX3RhZzBAQFwiOiBcIjxwPk7Dum1lcm8gZCdvcmRyZSBwb2xpbsOybWljIHF1ZSBzJ3V0aWxpdHphcsOgIGEgbCdhanVzdCBkZSBsYSB0ZW5kw6huY2lhLiBBcXVlc3QgcGFyw6BtZXRyZSBlc3BlY2lmaWNhIGwnb3JkcmUgcG9saW7Dsm1pYy4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIDIsIG8gdW4gcG9saW5vbWkgZGUgc2Vnb24gb3JkcmUuPC9wPjxwPkFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyBzJ2luY2xvdSBhIGwnYW7DoGxpc2kgZGUgdGVuZMOobmNpYSBkJ3VuYSByZWdyZXNzacOzIHBvbGluw7JtaWNhLjwvcD5cIixcblx0XCJAQEdlbmVyYXRlLVRyZW5kX3Itc3F1YXJlZF90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIHNpIGVzIGNhbGN1bGFyw6AgbCdlc3RhZMOtc3RpY2EgZGUgYm9uZGF0IGQnYWp1c3QgZCdSIHF1YWRyYXQgcGVyIGEgbGEgbMOtbmlhIGQnYWp1c3QgZGUgdGVuZMOobmNpYS48L3A+PHVsPjxsaT5BY3RpdmF0OiBlcyBjYWxjdWxhcsOgIGwnUiBxdWFkcmF0IGkgZXMgbW9zdHJhcsOgIGFscyBkZXRhbGxzIHF1YW4gcydoYWdpIGNvbXBsZXRhdCBsYSBmdW5jacOzLjwvbGk+PGxpPkRlc2FjdGl2YXQ6IG5vIGVzIGNhbGN1bGFyw6AgbCdSIHF1YWRyYXQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLjwvbGk+PC91bD5cIixcblx0XCJAQEdlbmVyYXRlLVRyZW5kX3Jhc3Rlcl90YWcwQEBcIjogXCI8cD5Sw6BzdGVyIG11bHRpZGltZW5zaW9uYWwgZCdlbnRyYWRhLjwvcD5cIixcblx0XCJAQEdlbmVyYXRlLVRyZW5kX3Jtc2VfdGFnMEBAXCI6IFwiPHA+RXNwZWNpZmljYSBzaSBlcyBnZW5lcmFyw6AgbCdlcnJvciBxdWFkcsOgdGljIG1pdGrDoCAoUk1TRSkgZGUgbGEgbMOtbmlhIGQnYWp1c3QgZGUgdGVuZMOobmNpYS48L3A+PHVsPjxsaT5BY3RpdmF0OiBsJ1JNU0UgZXMgY2FsY3VsYXLDoCBpIGVzIG1vc3RyYXLDoCBhbHMgZGV0YWxscyBlbiBjb21wbGV0YXIgbGEgZnVuY2nDsy4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48bGk+RGVzYWN0aXZhdDogbm8gZXMgY2FsY3VsYXLDoCBsJ1JNU0UuPC9saT48L3VsPlwiLFxuXHRcIkBAR2VuZXJhdGUtVHJlbmRfc2Vhc29uYWxwZXJpb2RfdGFnMEBAXCI6IFwiPHA+RXNwZWNpZmljYSBsYSB1bml0YXQgZGUgdGVtcHMgcXVlIGVzIGZhcsOgIHNlcnZpciBwZXIgYSBsYSBkdXJhZGEgZCd1biBwZXLDrW9kZSBlc3RhY2lvbmFsIGVuIGR1ciBhIHRlcm1lIGxhIHByb3ZhIGVzdGFjaW9uYWwgZGUgS2VuZGFsbC48L3A+PHVsPjxsaT5EaWVzOiBsYSB1bml0YXQgZGUgbGEgZHVyYWRhIGRlbCBwZXLDrW9kZSBlc3RhY2lvbmFsIMOpcyBkaWVzLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT5NZXNvczogbGEgdW5pdGF0IGRlIGxhIGR1cmFkYSBkZWwgcGVyw61vZGUgZXN0YWNpb25hbCDDqXMgbWVzb3MuPC9saT48L3VsPlwiLFxuXHRcIkBAR2VuZXJhdGUtVHJlbmRfdHJlbmR0eXBlX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgZWwgdGlwdXMgZGUgbMOtbmlhIHF1ZSBzJ3V0aWxpdHphcsOgIHBlciBhanVzdGFyIGVscyB2YWxvcnMgZGUgcMOteGVsIGEgdW5hIGRpbWVuc2nDsy48L3A+PHVsPjxsaT48c3Ryb25nPkxpbmVhbDwvc3Ryb25nPjogYWp1c3RhIGVscyB2YWxvcnMgZGUgcMOteGVsIGQndW5hIHZhcmlhYmxlIGFsIGxsYXJnIGQndW5hIGzDrW5pYSBkZSB0ZW5kw6huY2lhIGxpbmVhbC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48bGk+PHN0cm9uZz5IYXJtw7JuaWNhPC9zdHJvbmc+OiBhanVzdGEgZWxzIHZhbG9ycyBkZSBww614ZWwgZCd1bmEgdmFyaWFibGUgYWwgbGxhcmcgZCd1bmEgbMOtbmlhIGRlIHRlbmTDqG5jaWEgaGFybcOybmljYS48L2xpPjxsaT48c3Ryb25nPlBvbGluw7JtaWNhPC9zdHJvbmc+OiBhanVzdGEgZWxzIHZhbG9ycyBkZSBww614ZWwgZCd1bmEgdmFyaWFibGUgYWwgbGxhcmcgZCd1bmEgbMOtbmlhIGRlIHRlbmTDqG5jaWEgcG9saW7Dsm1pY2EgZGUgc2Vnb24gb3JkcmUuPC9saT48bGk+PHN0cm9uZz5NYW5uLUtlbmRhbGw8L3N0cm9uZz46IGVscyB2YWxvcnMgZGUgcMOteGVsIGQndW5hIHZhcmlhYmxlIHMnYXZhbHVhcmFuIGFtYiBsYSBwcm92YSBkZSB0ZW5kw6huY2lhIGRlIE1hbm4tS2VuZGFsbC48L2xpPjxsaT48c3Ryb25nPkVzdGFjaW9uYWwgZGUgS2VuZGFsbDwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBww614ZWwgZCd1bmEgdmFyaWFibGUgcydhdmFsdWFyYW4gYW1iIGxhIHByb3ZhIGRlIHRlbmTDqG5jaWEgZXN0YWNpb25hbCBkZSBLZW5kYWxsLjwvbGk+PC91bD5cIixcblx0XCJAQENvbXB1dGUtQ2hhbmdlX2NlbGxzaXpldHlwZV90YWcwQEBcIjogXCI8cD5UcmlldSBsYSBtaWRhIGRlIGNlbMK3bGEgcXVlIHZvbGV1IGZlciBzZXJ2aXIgYWwgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSBsYSBtaWRhIGRlIHRvdGVzIGxlcyBjZWzCt2xlcyBkJ2VudHJhZGEgw6lzIGlndWFsLCB0b3RlcyBsZXMgb3BjaW9ucyBkb25hcmFuIGVsIG1hdGVpeCByZXN1bHRhdC48L3A+PHVsPjxsaT5QcmltZXIgZGU6IHV0aWxpdHpldSBsYSBwcmltZXJhIG1pZGEgZGUgY2VswrdsYSBkZWxzIHLDoHN0ZXJzIGQnZW50cmFkYS48L2xpPjxsaT5Nw61uaW0gZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbcOpcyBwZXRpdGEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLjwvbGk+PGxpPk3DoHhpbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIGdyYW4gZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT5NaXRqYW5hIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG1pdGphbmEgZGUgdG90cyBlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLjwvbGk+PGxpPsOabHRpbSBkZTogdXRpbGl0emV1IGxhIGRhcnJlcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLjwvbGk+PC91bD5cIixcblx0XCJAQENvbXB1dGUtQ2hhbmdlX2NvbXB1dGVjaGFuZ2VtZXRob2RfdGFnMEBAXCI6IFwiPHA+TcOodG9kZSBxdWUgZXMgZmFyw6Agc2VydmlyIHBlciBhbCBjw7JtcHV0LjwvcD48dWw+PGxpPjxzdHJvbmc+RGlmZXLDqG5jaWE8L3N0cm9uZz46IGVzIGNhbGN1bGFyw6AgbGEgZGlmZXLDqG5jaWEgbWF0ZW3DoHRpY2EsIG8gcmVzdGEsIGVudHJlIGVscyB2YWxvcnMgZGUgcMOteGVsIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT48c3Ryb25nPkRpZmVyw6huY2lhIHJlbGF0aXZhPC9zdHJvbmc+OiBlcyBjYWxjdWxhcsOgIGxhIGRpZmVyw6huY2lhIGVuIGVscyB2YWxvcnMgZGUgcMOteGVsLCB0ZW5pbnQgZW4gY29tcHRlIGxlcyBtYWduaXR1ZHMgZGVscyB2YWxvcnMgcXVlIGVzIGNvbXBhcmVuLjwvbGk+PGxpPjxzdHJvbmc+RGlmZXLDqG5jaWEgY2F0ZWfDsnJpY2E8L3N0cm9uZz46IC0tZXMgY2FsY3VsYXLDoCBsYSBkaWZlcsOobmNpYSBlbnRyZSBkb3MgcsOgc3RlcnMgY2F0ZWfDsnJpY3MgbyB0ZW3DoHRpY3MsIGVuIHF1w6ggbGEgc29ydGlkYSBjb250w6kgdHJhbnNpY2lvbnMgZGUgY2xhc3NlIHF1ZSBzJ2hhbiBwcm9kdcOvdCBlbnRyZSBkb3MgcsOgc3RlcnMuPC9saT48bGk+PHN0cm9uZz5EaXN0w6BuY2lhIGV1Y2xpZGlhbmEgZXNwZWN0cmFsPC9zdHJvbmc+OiBlcyBjYWxjdWxhcsOgIGxhIGRpc3TDoG5jaWEgZXVjbGlkaWFuYSBlbnRyZSBlbHMgdmFsb3JzIGRlIHDDrXhlbCBkZSBkb3MgcsOgc3RlcnMgbXVsdGliYW5kYS48L2xpPjxsaT48c3Ryb25nPkRpZmVyw6huY2lhIGQnYW5nbGUgZXNwZWN0cmFsPC9zdHJvbmc+OiBlcyBjYWxjdWxhcsOgIGwnYW5nbGUgZXNwZWN0cmFsIGVudHJlIGVscyB2YWxvcnMgZGUgcMOteGVsIGRlIGRvcyByw6BzdGVycyBtdWx0aWJhbmRhLiBMYSBzb3J0aWRhIMOpcyBlbiByYWRpYW5zLjwvbGk+PGxpPjxzdHJvbmc+QmFuZGEgYW1iIG3DqXMgY2FudmlzPC9zdHJvbmc+OiBlcyBjYWxjdWxhcsOgIGxhIGJhbmRhIHF1ZSB0aW5ndWkgZWwgbcOpcyBjYW52aXMgYSBjYWRhIHDDrXhlbCBlbnRyZSBkb3MgcsOgc3RlcnMgbXVsdGliYW5kYS48L2xpPjwvdWw+PHA+U2kgZWwgPHN0cm9uZz5tw6h0b2RlIGRlIGPDoGxjdWwgZGUgY2FudmlzPC9zdHJvbmc+IMOpcyA8c3Ryb25nPkRpZmVyw6huY2lhIGNhdGVnw7JyaWNhPC9zdHJvbmc+IGkgdW5hIGRlIGxlcyBlbnRyYWRlcyBubyDDqXMgY2F0ZWfDsnJpY2EsIGVzIGNhbGN1bGFyw6AgdW5hIGRpZmVyw6huY2lhIHNpbXBsZS48L3A+XCIsXG5cdFwiQEBDb21wdXRlLUNoYW5nZV9kZWZpbmV0cmFuc2l0aW9uY29sb3JzX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpcXVldSBlbCBtw6h0b2RlIHF1ZSBlcyBmYXLDoCBzZXJ2aXIgcGVyIHNpbWJvbGl0emFyIGVscyBww614ZWxzIHF1ZSBoYW4gY2FudmlhdCBkZSBjbGFzc2UuPC9wPjx1bD48bGk+PHN0cm9uZz5NaXRqYW5hIGRlbHMgY29sb3JzIGQnb3JpZ2VuIGkgZGUgZGVzdGluYWNpw7M8L3N0cm9uZz46IGVsIGNvbG9yIGRlbCBww614ZWwgc2Vyw6AgbGEgbWl0amFuYSBkZWwgY29sb3IgZGUgbGEgY2xhc3NlIG9yaWdpbmFsIGkgZWwgY29sb3IgZGUgbGEgY2xhc3NlIGZpbmFsLjwvbGk+PGxpPjxzdHJvbmc+VXRpbGl0emEgZWxzIGNvbG9ycyBkJ29yaWdlbjwvc3Ryb25nPjogZWwgY29sb3IgZGVsIHDDrXhlbCBzZXLDoCBlbCBjb2xvciBkZSBsYSBjbGFzc2Ugb3JpZ2luYWwuPC9saT48bGk+PHN0cm9uZz5VdGlsaXR6YSBlbHMgY29sb3JzIGRlIGRlc3RpbmFjacOzPC9zdHJvbmc+OiBlbCBjb2xvciBkZWwgcMOteGVsIHNlcsOgIGVsIGNvbG9yIGRlIGxhIGNsYXNzZSBmaW5hbC48L2xpPjwvdWw+XCIsXG5cdFwiQEBDb21wdXRlLUNoYW5nZV9leHRlbnR0eXBlX3RhZzBAQFwiOiBcIjxwPlRyaWV1IHF1aW5hIGV4dGVuc2nDsyBzJ2hhIGRlIGZlciBzZXJ2aXIgYWwgcsOgc3RlciBkZSBzb3J0aWRhOjwvcD48dWw+PGxpPlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LjwvbGk+PGxpPkludGVyc2VjY2nDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbHMgcMOteGVscyBzdXBlcnBvc2F0cyBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLjwvbGk+PGxpPlVuacOzIGRlOiB1dGlsaXR6ZXUgbCdleHRlbnNpw7MgZGUgdG90cyBlbHMgcsOgc3RlcnMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LjwvbGk+PGxpPsOabHRpbSBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIGwnw7psdGltIHLDoHN0ZXIgZCdlbnRyYWRhIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC48L2xpPjwvdWw+XCIsXG5cdFwiQEBDb21wdXRlLUNoYW5nZV9maWx0ZXJtZXRob2RfdGFnMEBAXCI6IFwiPHA+VHJpZXUgZWwgbcOodG9kZSBkZSBmaWx0cmF0Z2UgcGVyIGFsIGPDsm1wdXQgZGUgY2FudmkgY2F0ZWfDsnJpYy48L3A+PHVsPjxsaT48c3Ryb25nPkNvbnNlcnZhJ2xzIHRvdHM8L3N0cm9uZz46IHRvdGVzIGxlcyBjbGFzc2VzIHMnaW5jbG91cmFuIGEgbGEgc29ydGlkYSBpIG5vIGVzIHByb2R1aXLDoCBjYXAgZmlsdHJhdGdlLiBUcmlldSBhcXVlc3RhIG9wY2nDsyBwZXIgdmV1cmUgZWwgY2FudmkgaSBsYSBwZXJzaXN0w6huY2lhIGVuIHVuIHNvbCBkYXRhc2V0LjwvbGk+PGxpPjxzdHJvbmc+Q29uc2VydmEgbm9tw6lzIGVscyBww614ZWxzIGNhbnZpYXRzPC9zdHJvbmc+OiBub23DqXMgbGVzIGNsYXNzZXMgcXVlIGhhZ2luIGNhbnZpYXQgZCd1biB0aXB1cyBkZSBjbGFzc2UgYSB1biBhbHRyZSBzJ2luY2xvdXJhbiBhIGxhIHNvcnRpZGEuIFRyaWV1IGFxdWVzdGEgb3BjacOzIHNpIG5vbcOpcyB1cyBpbnRlcmVzc2EgdmV1cmUgZWxzIGNhbnZpcy48L2xpPjxsaT48c3Ryb25nPkNvbnNlcnZhIG5vbcOpcyBlbHMgcMOteGVscyBubyBjYW52aWF0czwvc3Ryb25nPjogbm9tw6lzIGxlcyBjbGFzc2VzIHF1ZSBubyBoYWdpbiBjYW52aWF0IHMnaW5jbG91cmFuIGEgbGEgc29ydGlkYS4gVHJpZXUgYXF1ZXN0YSBvcGNpw7Mgc2kgbm9tw6lzIHVzIGludGVyZXNzYSB2ZXVyZSBsYSBwZXJzaXN0w6huY2lhLjwvbGk+PC91bD5cIixcblx0XCJAQENvbXB1dGUtQ2hhbmdlX2Zyb21jbGFzc3ZhbHVlc190YWcwQEBcIjogXCI8cD5WYWxvcnMgZGUgY2xhc3NlIGRlbDxzdHJvbmc+csOgc3RlciBkJ29yaWdlbjwvc3Ryb25nPnF1ZSBzJ2luY2xvdXJhbiBhbCBjw7JtcHV0IHNpIGVzIGNvbXBhcmVuIGRvcyByw6BzdGVycyBjYXRlZ8Oycmljcy4gRXMgdHJhY3RhIGQndW5hIGxsaXN0YSBkZWxpbWl0YWRhIHBlciBlc3BhaXMgZGUgdmFsb3JzIGVudGVycyBjb3JyZXNwb25lbnRzIGFsIGNhbXA8c3Ryb25nPkNsYXNzVmFsdWU8L3N0cm9uZz5hbCBkYXRhc2V0IHLDoHN0ZXIgZCdlbnRyYWRhLjwvcD5cIixcblx0XCJAQENvbXB1dGUtQ2hhbmdlX2Zyb21yYXN0ZXJfdGFnMEBAXCI6IFwiPHA+UHJpbWVyIHLDoHN0ZXIgcXVlIGVzIGZhcsOgIHNlcnZpciBhbCBjw7JtcHV0LiBQZXIgYXZhbHVhciBlbCBjYW52aSBkZXMgZGVsIHRlbXBzIDEgKGFudGVyaW9yKSBmaW5zIGFsIHRlbXBzIDIgKHBvc3RlcmlvciksIGludHJvZHXDr3UgZWwgcsOgc3RlciBkZWwgdGVtcHMgMSBhcXXDrS48L3A+XCIsXG5cdFwiQEBDb21wdXRlLUNoYW5nZV90b2NsYXNzdmFsdWVzX3RhZzBAQFwiOiBcIjxwPlZhbG9ycyBkZSBjbGFzc2UgZGVsPHN0cm9uZz5yw6BzdGVyIGRlIGRlc3RpbmFjacOzPC9zdHJvbmc+cXVlIHMnaW5jbG91cmFuIGFsIGPDsm1wdXQgc2kgZXMgY29tcGFyZW4gZG9zIHLDoHN0ZXJzIGNhdGVnw7JyaWNzLiBFcyB0cmFjdGEgZCd1bmEgbGxpc3RhIGRlbGltaXRhZGEgcGVyIGVzcGFpcyBkZSB2YWxvcnMgZW50ZXJzIGNvcnJlc3BvbmVudHMgYWwgY2FtcDxzdHJvbmc+Q2xhc3NWYWx1ZTwvc3Ryb25nPmFsIGRhdGFzZXQgcsOgc3RlciBkJ2VudHJhZGEuPC9wPlwiLFxuXHRcIkBAQ29tcHV0ZS1DaGFuZ2VfdG9yYXN0ZXJfdGFnMEBAXCI6IFwiPHA+U2Vnb24gcsOgc3RlciBxdWUgZXMgZmFyw6Agc2VydmlyIGFsIGPDsm1wdXQuIFBlciBhdmFsdWFyIGVsIGNhbnZpIGRlcyBkZWwgdGVtcHMgMSAoYW50ZXJpb3IpIGZpbnMgYWwgdGVtcHMgMiAocG9zdGVyaW9yKSwgaW50cm9kdcOvdSBlbCByw6BzdGVyIGRlbCB0ZW1wcyAyLjwvcD5cIixcblx0XCJAQENvbXB1dGUtQ2hhbmdlX3VzZWNvbG9ybWV0aG9kX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpcXVldSBlbCBtw6h0b2RlIHF1ZSBlcyBmYXLDoCBzZXJ2aXIgcGVyIHNpbWJvbGl0emFyIGVscyBww614ZWxzIHF1ZSBoYW4gY2FudmlhdCBkZSBjbGFzc2UuPC9wPjx1bD48bGk+PHN0cm9uZz5NaXRqYW5hIGRlbHMgY29sb3JzIGQnb3JpZ2VuIGkgZGUgZGVzdGluYWNpw7M8L3N0cm9uZz46IGVsIGNvbG9yIGRlbCBww614ZWwgc2Vyw6AgbGEgbWl0amFuYSBkZWwgY29sb3IgZGUgbGEgY2xhc3NlIG9yaWdpbmFsIGkgZWwgY29sb3IgZGUgbGEgY2xhc3NlIGZpbmFsLjwvbGk+PGxpPjxzdHJvbmc+VXRpbGl0emEgZWxzIGNvbG9ycyBkJ29yaWdlbjwvc3Ryb25nPjogZWwgY29sb3IgZGVsIHDDrXhlbCBzZXLDoCBlbCBjb2xvciBkZSBsYSBjbGFzc2Ugb3JpZ2luYWwuPC9saT48bGk+PHN0cm9uZz5VdGlsaXR6YSBlbHMgY29sb3JzIGRlIGRlc3RpbmFjacOzPC9zdHJvbmc+OiBlbCBjb2xvciBkZWwgcMOteGVsIHNlcsOgIGVsIGNvbG9yIGRlIGxhIGNsYXNzZSBmaW5hbC48L2xpPjwvdWw+XCIsXG5cdFwiQEBDb21wdXRlLUNoYW5nZV9maWVsZG5hbWVmb3JjbGFzc25hbWVzaW5mcm9tcmFzdGVyX3RhZzBAQFwiOiBcIjxwPkNhbXAgcXVlIGVtbWFnYXR6ZW1hIG5vbXMgZGUgY2xhc3NlIGEgbCdlbnRyYWRhIDxzdHJvbmc+RGUgcsOgc3Rlcjwvc3Ryb25nPi4gTCdlaW5hIGNlcmNhIGF1dG9tw6B0aWNhbWVudCBlbCBjYW1wIDxzdHJvbmc+Q2xhc3NOYW1lPC9zdHJvbmc+IG8gZWwgY2FtcCA8c3Ryb25nPkNsYXNzX05hbWU8L3N0cm9uZz4gcXVlIGNhbCB1dGlsaXR6YXIuPC9wPjxwPlV0aWxpdHpldSBhcXVlc3RhIG9wY2nDsyBzaSBsJ2VudHJhZGEgbm8gaW5jbG91IGFxdWVzdHMgbm9tcyBkZSBjYW1wIGVzdMOgbmRhcmQuPC9wPlwiLFxuXHRcIkBAQ29tcHV0ZS1DaGFuZ2VfZmllbGRuYW1lZm9yY2xhc3NuYW1lc2ludG9yYXN0ZXJfdGFnMEBAXCI6IFwiPHA+Q2FtcCBxdWUgZW1tYWdhdHplbWEgbm9tcyBkZSBjbGFzc2UgYSBsJ2VudHJhZGEgPHN0cm9uZz5BIHLDoHN0ZXI8L3N0cm9uZz4uIEwnZWluYSBjZXJjYXLDoCBhdXRvbcOgdGljYW1lbnQgZWwgY2FtcCA8c3Ryb25nPkNsYXNzTmFtZTwvc3Ryb25nPiBvIGVsIGNhbXAgPHN0cm9uZz5DbGFzc19OYW1lPC9zdHJvbmc+IHF1ZSBjYWwgdXRpbGl0emFyLjwvcD48cD5VdGlsaXR6ZXUgYXF1ZXN0YSBvcGNpw7Mgc2kgbCdlbnRyYWRhIG5vIGluY2xvdSBhcXVlc3RzIG5vbXMgZGUgY2FtcCBlc3TDoG5kYXJkLjwvcD5cIixcblx0XCJAQFN0YXRpc3RpY3NfbnVtYmVyb2Zjb2x1bW5zX3RhZzBAQFwiOiBcIjxwPk5vbWJyZSBkZSBjb2x1bW5lcyBkZSBww614ZWxzIHF1ZSBzJ3V0aWxpdHphcmFuIGVuIHVuYSBkaW1lbnNpw7MgZGUgdmXDr25hdCBmb2NhbC48L3A+XCIsXG5cdFwiQEBTdGF0aXN0aWNzX251bWJlcm9mcm93c190YWcwQEBcIjogXCI8cD5Ob21icmUgZGUgZmlsZXMgZGUgcMOteGVscyBxdWUgcyd1dGlsaXR6YXJhbiBlbiB1bmEgZGltZW5zacOzIGRlIHZlw69uYXQgZm9jYWwuPC9wPlwiLFxuXHRcIkBAU3RhdGlzdGljc19vbmx5ZmlsbG5vZGF0YXBpeGVsc190YWcwQEBcIjogXCI8cD5FbXBsZW5hIHNlcGFyYWNpb25zIE5vRGF0YSBhIGxhIHNvcnRpZGEuIEFxdWVzdGEgb3BjacOzIMOpcyDDunRpbCBxdWFuIMOpcyBwb3NzaWJsZSBxdWUgbGVzIGltYXRnZXMgdGluZ3VpbiBsw61uaWVzIG5vIGNvbnTDrW51ZXMuPC9wPlwiLFxuXHRcIkBAU3RhdGlzdGljc19yYXN0ZXJfdGFnMEBAXCI6IFwiPHA+UsOgc3RlciBkJ2VudHJhZGEgZGVsIHF1YWwgdm9sZXUgY3JlYXIgZXN0YWTDrXN0aXF1ZXMgZm9jYWxzLjwvcD5cIixcblx0XCJAQFN0YXRpc3RpY3Nfc3RhdGlzdGljc3R5cGVfdGFnMEBAXCI6IFwiPHA+QXF1ZXN0cyBzw7NuIGVscyBzZXQgdGlwdXMgZGUgZnVuY2lvbnMgZXN0YWTDrXN0aXF1ZXMgZm9jYWxzOjwvcD48dWw+PGxpPk3DrW5pbTogY2FsY3VsYSBlbCB2YWxvciBtw61uaW0gZGVscyBww614ZWxzIGRpbnMgZGVsIHZlw69uYXQuPC9saT48bGk+TcOgeGltOiBjYWxjdWxhIGVsIHZhbG9yIG3DoHhpbSBkZWxzIHDDrXhlbHMgZGlucyBkZWwgdmXDr25hdC48L2xpPjxsaT5NaXRqYW5hOiBjYWxjdWxhIGVsIHZhbG9yIG1pdGrDoCBkZWxzIHDDrXhlbHMgZGlucyBkZWwgdmXDr25hdC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48bGk+RGVzdmlhY2nDsyBlc3TDoG5kYXJkOiBjYWxjdWxhIGVsIHZhbG9yIGRlIGRlc3ZpYWNpw7MgZXN0w6BuZGFyZCBkZWxzIHDDrXhlbHMgZGlucyBkZWwgdmXDr25hdC48L2xpPjxsaT5NZWRpYW5hOiBjYWxjdWxhIGVsIHZhbG9yIGRlIGxhIG1lZGlhbmEgZGVscyBww614ZWxzIGRpbnMgZGVsIHZlw69uYXQuPC9saT48bGk+TWFqb3JpYTogY2FsY3VsYSBlbCB2YWxvciBtYWpvcml0YXJpLCBvIGVsIHZhbG9yIHF1ZSBlcyBwcm9kdWVpeCBhbWIgbcOpcyBmcmVxw7zDqG5jaWEsIGRlbHMgcMOteGVscyBkaW5zIGRlbCB2ZcOvbmF0LjwvbGk+PGxpPk1pbm9yaWE6IGNhbGN1bGEgZWwgdmFsb3IgbWlub3JpdGFyaSwgbyBlbCB2YWxvciBxdWUgZXMgcHJvZHVlaXggYW1iIG1lbnlzIGZyZXHDvMOobmNpYSwgZGVscyBww614ZWxzIGRpbnMgZGVsIHZlw69uYXQuPC9saT48L3VsPlwiLFxuXHRcIkBARGV0ZWN0LUNoYW5nZS1Vc2luZy1DaGFuZ2UtQW5hbHlzaXNfY2hhbmdlZGlyZWN0aW9uX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgbGEgZGlyZWNjacOzIGRlbCBjYW52aSBxdWUgcydpbmNsb3Vyw6AgYSBsJ2Fuw6BsaXNpLjwvcD48cD5BcXVlc3QgcGFyw6BtZXRyZSBub23DqXMgZXN0w6AgZGlzcG9uaWJsZSBxdWFuIGVsIHLDoHN0ZXIgZCdhbsOgbGlzaSBkZSBjYW52aXMgZCdlbnRyYWRhIMOpcyBsYSBzb3J0aWRhIGRlIGxlcyBlaW5lcyBkZSBMYW5kVHJlbmRyLjwvcD48dWw+PGxpPjxzdHJvbmc+VG90ZXMgbGVzIGRpcmVjY2lvbnM8L3N0cm9uZz46IHRvdGVzIGxlcyBkaXJlY2Npb25zIGRlIGNhbnZpIHMnaW5jbG91cmFuIGEgbGEgc29ydGlkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48bGk+PHN0cm9uZz5DcmVpeGVudDwvc3Ryb25nPjogbm9tw6lzIHMnaW5jbG91csOgIGEgbGEgc29ydGlkYSBlbCBjYW52aSBlbiBsYSBkaXJlY2Npw7MgcG9zaXRpdmEgbyBjcmVpeGVudC48L2xpPjxsaT48c3Ryb25nPkRlY3JlaXhlbnQ8L3N0cm9uZz46IG5vbcOpcyBzJ2luY2xvdXLDoCBhIGxhIHNvcnRpZGEgZWwgY2FudmkgZW4gbGEgZGlyZWNjacOzIG5lZ2F0aXZhIG8gZGVjcmVpeGVudC48L2xpPjwvdWw+XCIsXG5cdFwiQEBEZXRlY3QtQ2hhbmdlLVVzaW5nLUNoYW5nZS1BbmFseXNpc19jaGFuZ2V0eXBlX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgbGEgaW5mb3JtYWNpw7MgZGUgY2FudmkgcXVlIGVzIGNhbGN1bGFyw6AuPC9wPjx1bD48bGk+PHN0cm9uZz5Ib3JhIGRlIGwnw7psdGltIGNhbnZpPC9zdHJvbmc+OiBjYWRhIHDDrXhlbCBjb250w6kgbGEgZGF0YSBkZWwgY2FudmkgbcOpcyByZWNlbnQgZGVsIHDDrXhlbCBlbiBxw7xlc3Rpw7MgYSBsYSBzw6hyaWUgdGVtcG9yYWwuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLjwvbGk+PGxpPjxzdHJvbmc+SG9yYSBkZWwgcHJpbWVyIGNhbnZpPC9zdHJvbmc+OiBjYWRhIHDDrXhlbCBjb250w6kgbGEgZGF0YSBkZWwgcHJpbWVyIGNhbnZpIGRlbCBww614ZWwgZW4gccO8ZXN0acOzIGEgbGEgc8OocmllIHRlbXBvcmFsLjwvbGk+PGxpPjxzdHJvbmc+SG9yYSBkZWwgY2FudmkgbcOpcyBncmFuPC9zdHJvbmc+OiBjYWRhIHDDrXhlbCBjb250w6kgbGEgZGF0YSBkZWwgY2FudmkgbcOpcyBzaWduaWZpY2F0aXUgZGVsIHDDrXhlbCBlbiBxw7xlc3Rpw7MgYSBsYSBzw6hyaWUgdGVtcG9yYWwuPC9saT48bGk+PHN0cm9uZz5Ob21icmUgZGUgY2FudmlzPC9zdHJvbmc+OiBjYWRhIHDDrXhlbCBjb250w6kgZWwgbm9tYnJlIHRvdGFsIGRlIHZlZ2FkZXMgcXVlIGVsIHDDrXhlbCBoYSBjYW52aWF0IGEgbGEgc8OocmllIHRlbXBvcmFsLjwvbGk+PGxpPjxzdHJvbmc+VGVtcHMgZGVsIGNhbnZpIG3DqXMgbGxhcmc8L3N0cm9uZz46IGNhZGEgcMOteGVsIGNvbnTDqSBsYSBkYXRhIGRlbCBjYW52aSBhbCBmaW5hbCBkZWwgc2VnbWVudCBkZSB0cmFuc2ljacOzIG3DqXMgbGxhcmcgYSBsYSBzw6hyaWUgdGVtcG9yYWwuPC9saT48bGk+PHN0cm9uZz5UZW1wcyBkZWwgY2FudmkgbcOpcyBjdXJ0PC9zdHJvbmc+OiBjYWRhIHDDrXhlbCBjb250w6kgbGEgZGF0YSBkZWwgY2FudmkgYWwgZmluYWwgZGVsIHNlZ21lbnQgZGUgdHJhbnNpY2nDsyBtw6lzIGN1cnQgYSBsYSBzw6hyaWUgdGVtcG9yYWwuPC9saT48bGk+PHN0cm9uZz5UZW1wcyBkZWwgY2FudmkgbcOpcyByw6BwaWQ8L3N0cm9uZz46IGNhZGEgcMOteGVsIGNvbnTDqSBsYSBkYXRhIGRlbCBjYW52aSBhbCBmaW5hbCBkZSBsYSB0cmFuc2ljacOzIHF1ZSBzJ2hhIHByb2R1w690IG3DqXMgcsOgcGlkYW1lbnQuPC9saT48bGk+PHN0cm9uZz5UZW1wcyBkZWwgY2FudmkgbcOpcyBsZW50PC9zdHJvbmc+OiBjYWRhIHDDrXhlbCBjb250w6kgbGEgZGF0YSBkZWwgY2FudmkgYWwgZmluYWwgZGUgbGEgdHJhbnNpY2nDsyBxdWUgcydoYSBwcm9kdcOvdCBtw6lzIGxlbnRhbWVudC48L2xpPjwvdWw+XCIsXG5cdFwiQEBEZXRlY3QtQ2hhbmdlLVVzaW5nLUNoYW5nZS1BbmFseXNpc19maWx0ZXJieWR1cmF0aW9uX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2Egc2kgZXMgdm9sIGZpbHRyYXIgcGVyIGxhIGR1cmFkYSBkZWwgY2FudmkuPC9wPjxwPjwvcD48dWw+PGxpPkFjdGl2YXQ6IGVzIGZpbHRyZW4gZWxzIHJlc3VsdGF0cyBwZXIgbGEgZHVyYWRhIGRlIG1hbmVyYSBxdWUgbm9tw6lzIHMnaW5jbG91ZW4gYSBsYSBzb3J0aWRhIGVscyBjYW52aXMgcXVlIGhhbiBkdXJhdCB1bmEgcXVhbnRpdGF0IGRlIHRlbXBzIGVzcGVjaWZpY2FkYS48L2xpPjxsaT5EZXNhY3RpdmF0OiBubyBlcyBmaWx0cmVuIGVscyByZXN1bHRhdHMgcGVyIGxhIGR1cmFkYS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48L3VsPjxwPkFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyBlc3TDoCBkaXNwb25pYmxlIHF1YW4gZWwgcsOgc3RlciBkJ2Fuw6BsaXNpIGRlIGNhbnZpcyBkJ2VudHJhZGEgw6lzIGxhIHNvcnRpZGEgZGUgbGVzIGVpbmVzIGRlIExhbmRUcmVuZHIuPC9wPjxwPlNpIGFxdWVzdCBwYXLDoG1ldHJlIGVzdMOgIGFjdGl2YXQsIGhldSBkZSBkZWZpbmlyIGVscyBwYXLDoG1ldHJlczxzdHJvbmc+RHVyYWRhIG3DrW5pbWE8L3N0cm9uZz5pPHN0cm9uZz5EdXJhZGEgbcOgeGltYTwvc3Ryb25nPnBlciBmaWx0cmFyIGVscyByZXN1bHRhdHMuPC9wPlwiLFxuXHRcIkBARGV0ZWN0LUNoYW5nZS1Vc2luZy1DaGFuZ2UtQW5hbHlzaXNfZmlsdGVyYnltYWduaXR1ZGVfdGFnMEBAXCI6IFwiPHA+RXNwZWNpZmljYSBzaSBlcyB2b2wgZmlsdHJhciBwZXIgbGEgbWFnbml0dWQgZGVsIGNhbnZpLjwvcD48dWw+PGxpPkFjdGl2YXQ6IGVzIGZpbHRyZW4gZWxzIHJlc3VsdGF0cyBwZXIgbGEgbWFnbml0dWQgZGUgbWFuZXJhIHF1ZSBub23DqXMgcydpbmNsb3VlbiBhIGxhIHNvcnRpZGEgZWxzIGNhbnZpcyBkJ3VuYSBtYWduaXR1ZCBlc3BlY2lmaWNhZGEuPC9saT48bGk+RGVzYWN0aXZhZGE6IG5vIGVzIGZpbHRyZW4gZWxzIHJlc3VsdGF0cyBwZXIgbGEgbWFnbml0dWQuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLjwvbGk+PC91bD48cD5BcXVlc3QgcGFyw6BtZXRyZSBub23DqXMgZXN0w6AgZGlzcG9uaWJsZSBxdWFuIGVsIHLDoHN0ZXIgZCdhbsOgbGlzaSBkZSBjYW52aXMgZCdlbnRyYWRhIMOpcyBsYSBzb3J0aWRhIGRlIGxlcyBlaW5lcyBkZSBMYW5kVHJlbmRyLjwvcD48cD5TaSBhcXVlc3QgcGFyw6BtZXRyZSBlc3TDoCBhY3RpdmF0LCBoZXUgZGUgZGVmaW5pciBlbHMgcGFyw6BtZXRyZXM8c3Ryb25nPk1hZ25pdHVkIG3DrW5pbWE8L3N0cm9uZz5pPHN0cm9uZz5NYWduaXR1ZCBtw6B4aW1hPC9zdHJvbmc+cGVyIGZpbHRyYXIgZWxzIHJlc3VsdGF0cy48L3A+XCIsXG5cdFwiQEBEZXRlY3QtQ2hhbmdlLVVzaW5nLUNoYW5nZS1BbmFseXNpc19maWx0ZXJieXllYXJfdGFnMEBAXCI6IFwiPHA+RXNwZWNpZmljYSBzaSBlcyB2b2wgbGltaXRhciBsYSBzb3J0aWRhIGEgdW4gaW50ZXJ2YWwgZCdhbnlzLjwvcD48dWw+PGxpPkFjdGl2YXQ6IGVzIGZpbHRyZW4gZWxzIHJlc3VsdGF0cyBkZSBtYW5lcmEgcXVlIG5vbcOpcyBzJ2luY2xvdWVuIGEgbGEgc29ydGlkYSBlbHMgY2FudmlzIHF1ZSBzJ2hhZ2luIHByb2R1w690IGVuIHVuIGludGVydmFsIGVzcGVjaWZpY2F0IGQnYW55cy48L2xpPjxsaT5EZXNhY3RpdmF0OiBubyBlcyBmaWx0cmVuIGVscyByZXN1bHRhdHMgcGVyIGwnYW55LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjwvdWw+PHA+U2kgYXF1ZXN0IHBhcsOgbWV0cmUgZXN0w6AgYWN0aXZhdCwgaGV1IGRlIGRlZmluaXIgZWxzIHBhcsOgbWV0cmVzPHN0cm9uZz5WYWxvciBtw61uaW08L3N0cm9uZz5pPHN0cm9uZz5WYWxvciBtw6B4aW08L3N0cm9uZz5wZXIgZmlsdHJhciBlbHMgcmVzdWx0YXRzLjwvcD5cIixcblx0XCJAQERldGVjdC1DaGFuZ2UtVXNpbmctQ2hhbmdlLUFuYWx5c2lzX2ZpbHRlcmJ5c3RhcnR2YWx1ZV90YWcwQEBcIjogXCI8cD5GaWx0cmV1IGVscyByZXN1bHRhdHMgcGVyIHZhbG9yIGQnaW5pY2kgZGUgbWFuZXJhIHF1ZSBsYSBzb3J0aWRhIGluY2xvZ3VpIG5vbcOpcyBlbHMgY2FudmlzIGQndW4gdmFsb3IgZCdpbmljaSBkZXRlcm1pbmF0LjwvcD5cIixcblx0XCJAQERldGVjdC1DaGFuZ2UtVXNpbmctQ2hhbmdlLUFuYWx5c2lzX2ZpbHRlcmJ5ZW5kdmFsdWVfdGFnMEBAXCI6IFwiPHA+RmlsdHJldSBlbHMgcmVzdWx0YXRzIHBlbCB2YWxybyBmaW5hbCBkZSBtYW5lcmEgcXVlIGxhIHNvcnRpZGEgaW5jbG9ndWkgbm9tw6lzIGVscyBjYW52aXMgZCd1biB2YWxvciBmaW5hbCBkZXRlcm1pbmF0LjwvcD5cIixcblx0XCJAQERldGVjdC1DaGFuZ2UtVXNpbmctQ2hhbmdlLUFuYWx5c2lzX21heGltdW1udW1iZXJvZmNoYW5nZXNfdGFnMEBAXCI6IFwiPHA+Tm9tYnJlIG3DoHhpbSBkZSBjYW52aXMgcGVyIHDDrXhlbCBxdWUgZXMgY2FsY3VsYXJhbi4gRWwgbm9tYnJlIGludHJvZHXDr3QgY29ycmVzcG9uIGFsIG5vbWJyZSBkZSBiYW5kZXMgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS4gRWwgdmFsb3IgcGVyIGRlZmVjdGUgw6lzIDEsIGNvc2EgcXVlIHNpZ25pZmljYSBxdWUgbm9tw6lzIGVzIGNhbGN1bGFyw6AgdW5hIGRhdGEgZGUgY2FudmkgaSBxdWUgZWwgcsOgc3RlciBkZSBzb3J0aWRhIG5vbcOpcyBjb250w6kgdW5hIGJhbmRhLjwvcD48cD5BcXVlc3QgcGFyw6BtZXRyZSBubyBlc3TDoCBkaXNwb25pYmxlIHNpIGVsIHBhcsOgbWV0cmU8c3Ryb25nPlRpcHVzIGRlIGNhbnZpPC9zdHJvbmc+cydoYSBkZWZpbml0IGNvbSBhPHN0cm9uZz5Ob21icmUgZGUgY2FudmlzPC9zdHJvbmc+LjwvcD5cIixcblx0XCJAQERldGVjdC1DaGFuZ2UtVXNpbmctQ2hhbmdlLUFuYWx5c2lzX3Jhc3Rlcl90YWcwQEBcIjogXCI8cD5Sw6BzdGVyIGQnYW7DoGxpc2kgZGUgY2FudmlzIGQnZW50cmFkYS48L3A+XCIsXG5cdFwiQEBEZXRlY3QtQ2hhbmdlLVVzaW5nLUNoYW5nZS1BbmFseXNpc19zZWdtZW50ZGF0ZV90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIHNpIGVzIHZvbCBleHRyZXVyZSBsYSBkYXRhIGFsIHByaW5jaXBpIGQndW4gc2VnbWVudCBkZSBjYW52aSBvIGLDqSBhbCBmaW5hbC48L3A+PHA+QXF1ZXN0IHBhcsOgbWV0cmUgbm9tw6lzIGVzdMOgIGRpc3BvbmlibGUgcXVhbiBlbCByw6BzdGVyIGQnYW7DoGxpc2kgZGUgY2FudmlzIGQnZW50cmFkYSDDqXMgbGEgc29ydGlkYSBkZSBsZXMgZWluZXMgZGUgTGFuZFRyZW5kci48L3A+PHVsPjxsaT48c3Ryb25nPkluaWNpIGRlbCBzZWdtZW50PC9zdHJvbmc+OiBzJ2V4dHJldSBsYSBkYXRhIGFsIHByaW5jaXBpIGQndW4gc2VnbWVudCBkZSBjYW52aS4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48bGk+PHN0cm9uZz5GaW5hbCBkZWwgc2VnbWVudDwvc3Ryb25nPjogcydleHRyZXUgbGEgZGF0YSBhbCBmaW5hbCBkJ3VuIHNlZ21lbnQgZGUgY2FudmkuPC9saT48L3VsPlwiLFxuXHRcIkBAS2VybmVsLURlbnNpdHlfYXJlYXVuaXRzX3RhZzBAQFwiOiBcIjxwPlVuaXRhdHMgZCfDoHJlYSBkZWxzIHZhbG9ycyBkZSBkZW5zaXRhdCBkZSBzb3J0aWRhLjwvcD48dWw+PGxpPlVuaXRhdHMgZGUgbWFwYSBxdWFkcmFkZXM6IHBlciBhbCBxdWFkcmF0IGRlIGxlcyB1bml0YXRzIGxpbmVhbHMgZGUgbGEgcmVmZXLDqG5jaWEgZXNwYWNpYWwgZGUgc29ydGlkYS48L2xpPjxsaT5NaWxsZXMgcXVhZHJhZGVzOiBwZXIgYSBtaWxsZXMgKEVVQSkuPC9saT48bGk+UXVpbMOybWV0cmVzIHF1YWRyYXRzOiBwZXIgYSBxdWlsw7JtZXRyZXMuPC9saT48bGk+QWNyZXM6IHBlciBhIGFjcmVzIChFVUEpLjwvbGk+PGxpPkhlY3TDoHJlZXM6IHBlciBhIGhlY3TDoHJlZXMuPC9saT48bGk+TWV0cmVzIHF1YWRyYXRzOiBwZXIgYSBtZXRyZXMuPC9saT48bGk+SWFyZGVzIHF1YWRyYWRlczogcGVyIGEgaWFyZGVzIChFVUEpLjwvbGk+PGxpPlBldXMgcXVhZHJhdHM6IHBlciBhIHBldXMgKEVVQSkuPC9saT48bGk+UG9semFkZXMgcXVhZHJhZGVzOiBwZXIgYSBwb2x6YWRlcyAoRVVBKS48L2xpPjxsaT5DZW50w61tZXRyZXMgcXVhZHJhdHM6IHBlciBhIGNlbnTDrW1ldHJlcy48L2xpPjxsaT5NaWzCt2zDrW1ldHJlcyBxdWFkcmF0czogcGVyIGEgbWlswrdsw61tZXRyZXMuPC9saT48L3VsPlwiLFxuXHRcIkBAS2VybmVsLURlbnNpdHlfY2VsbHNpemVfdGFnMEBAXCI6IFwiPHA+TGEgbWlkYSBkZSBww614ZWwgZGVsIGRhdGFzZXQgcsOgc3RlciBkZSBzb3J0aWRhLiBTaSBzJ2hhIGRlZmluaXQgZWwgdmFsb3I8c3Ryb25nPkNlbGxzaXplPC9zdHJvbmc+YWxzIGVudG9ybnMgZGUgZ2VvcHJvY2Vzc2FtZW50LCDDqXMgZWwgdmFsb3IgcGVyIGRlZmVjdGUuPC9wPlwiLFxuXHRcIkBAS2VybmVsLURlbnNpdHlfaW5wdXRiYXJyaWVyc190YWcwQEBcIjogXCI8cD5EYXRhc2V0IHF1ZSBkZWZpbmVpeCBsZXMgYmFycmVyZXMuPC9wPjxwPkxlcyBiYXJyZXJlcyBwb2RlbiBzZXIgdW5hIGNhcGEgZCdlbnRpdGF0cyBwb2xpZ29uYWxzIG8gZGUgcG9saWzDrW5pYS48L3A+XCIsXG5cdFwiQEBLZXJuZWwtRGVuc2l0eV9pbnB1dGZlYXR1cmVzX3RhZzBAQFwiOiBcIjxwPkVudGl0YXRzIGQnZW50cmFkYSBkZSBwdW50IG8gZGUgbMOtbmlhIHBlciBhIGxlcyBxdWFscyBlcyBjYWxjdWxhcsOgIGxhIGRlbnNpdGF0LjwvcD5cIixcblx0XCJAQEtlcm5lbC1EZW5zaXR5X21ldGhvZF90YWcwQEBcIjogXCI8cD5EZXRlcm1pbmEgc2kgcyd1dGlsaXR6YXLDoCBsYSBydXRhIG3DqXMgY3VydGEgZW4gdW4gbcOodG9kZSBlc2Zlcm9pZGUgKGdlb2TDqHNpYykgbyBkZSB0ZXJyYSBwbGFuYSAocGxhKS48L3A+PHVsPjxsaT48c3Ryb25nPlBsYTwvc3Ryb25nPjogdXRpbGl0emEgbGVzIGRpc3TDoG5jaWVzIHBsYW5lcyBlbnRyZSBsZXMgZW50aXRhdHMuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLjwvbGk+PGxpPjxzdHJvbmc+R2VvZMOoc2ljPC9zdHJvbmc+OiB1dGlsaXR6YSBkaXN0w6BuY2llcyBnZW9kw6hzaXF1ZXMgZW50cmUgbGVzIGVudGl0YXRzLiBBcXVlc3QgbcOodG9kZSB0w6kgZW4gY29tcHRlIGxhIGN1cnZhdHVyYSBkZSBsJ2VzZmVyb2lkZSBpIGdlc3Rpb25hIGNvcnJlY3RhbWVudCBsZXMgZGFkZXMgYSBwcm9wIGRlbHMgcG9scyBpIGxhIGzDrW5pYSBpbnRlcm5hY2lvbmFsIGRlIGNhbnZpIGRlIGRhdGEuPC9saT48L3VsPjxwPkVzIHJlY29tYW5hIHF1ZSBmZXUgc2VydmlyIGVsIG3DqHRvZGU8c3Ryb25nPkdlb2TDqHNpYzwvc3Ryb25nPmFtYiBkYWRlcyBlbW1hZ2F0emVtYWRlcyBlbiB1biBzaXN0ZW1hIGRlIGNvb3JkZW5hZGVzIHF1ZSBubyBzaWd1aSBhZGVxdWF0IHBlciBhIGxlcyBtZXN1cmVzIGRlIGRpc3TDoG5jaWEgaSBsZXMgYW7DoGxpc2lzIHF1ZSBhYmFzdGluIHVuYSDDoHJlYSBnZW9ncsOgZmljYSBncmFuLiBQZXIgZXhlbXBsZSwgV2ViIE1lcmNhdG9yIG8gcXVhbHNldm9sIHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgZ2VvZ3LDoGZpcXVlcyBzJ2hhIGRlIGZlciBzZXJ2aXIgYW1iIGVsIG3DqHRvZGU8c3Ryb25nPkdlb2TDqHNpYzwvc3Ryb25nPi48L3A+XCIsXG5cdFwiQEBLZXJuZWwtRGVuc2l0eV9vdXRwdXRjZWxsdmFsdWVzX3RhZzBAQFwiOiBcIjxwPkRldGVybWluYSBxdcOoIHJlcHJlc2VudGVuIGVscyB2YWxvcnMgZGVsIHLDoHN0ZXIgZGUgc29ydGlkYS48L3A+PHVsPjxsaT48c3Ryb25nPkRlbnNpdGF0czwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBzb3J0aWRhIHJlcHJlc2VudGVuIGVsIHZhbG9yIGRlIGRlbnNpdGF0IHByZWRpdC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48bGk+PHN0cm9uZz5SZWNvbXB0ZXMgZXNwZXJhdHM8L3N0cm9uZz46IGVscyB2YWxvcnMgZGUgc29ydGlkYSByZXByZXNlbnRlbiBsYSBxdWFudGl0YXQgZGVsIGZlbm9tZW4gcHJlZGl0YSBkZSBjYWRhIHDDrXhlbC4gQ29tIHF1ZSBlbCB2YWxvciBkZWwgcMOteGVsIGVzdMOgIGVubGxhw6dhdCBhbCB2YWxvciBlc3BlY2lmaWNhdCBkZTxzdHJvbmc+Q2VsbHNpemU8L3N0cm9uZz4sIGVsIHLDoHN0ZXIgcmVzdWx0YW50IG5vIGVzIHBvdCByZW1vc3RyZWphciBhbWIgdW5hIG1pZGEgZGUgcMOteGVsIGRpZmVyZW50IGkgY29udGludWEgcmVwcmVzZW50YW50IGxhIHF1YW50aXRhdCBkZWwgZmVub21lbi48L2xpPjwvdWw+XCIsXG5cdFwiQEBLZXJuZWwtRGVuc2l0eV9wb3B1bGF0aW9uZmllbGRfdGFnMEBAXCI6IFwiPHA+Q2FtcCBxdWUgZGVub3RhIGVscyB2YWxvcnMgZGUgcG9ibGFjacOzIGRlIGNhZGEgZW50aXRhdC4gRWwgdmFsb3IgZGU8c3Ryb25nPkNhbXAgZGUgcG9ibGFjacOzPC9zdHJvbmc+w6lzIGVsIHJlY29tcHRlIG8gbGEgcXVhbnRpdGF0IHF1ZSBzJ2VzdGVuZHLDoCBwZWwgcGFpc2F0Z2UgcGVyIGNyZWFyIHVuYSBzdXBlcmbDrWNpZSBjb250w61udWEuIEVscyB2YWxvcnMgZGU8c3Ryb25nPkNhbXAgZGUgcG9ibGFjacOzPC9zdHJvbmc+cG9kZW4gc2VyIGRlIHRpcHVzIGVudGVyIG8gcHVudCBmbG90YW50LjwvcD48cD5MZXMgb3BjaW9ucyBpIGVscyBjb21wb3J0YW1lbnRzIHBlciBkZWZlY3RlIGRlbCBjYW1wIHMnaW5kaXF1ZW4gYSBjb250aW51YWNpw7Mgb3JkZW5hdHMgcGVyIHByaW9yaXRhdC48L3A+PHVsPjxsaT5GZXUgc2VydmlyPHN0cm9uZz5DYXA8L3N0cm9uZz5zaSBubyBlcyBmYXLDoCBzZXJ2aXIgY2FwIGVsZW1lbnQgbyB2YWxvciBlc3BlY2lhbCBpIGNhZGEgZW50aXRhdCBlcyBjb250YXLDoCB1bmEgdmVnYWRhLjwvbGk+PGxpPkZldSBzZXJ2aXI8c3Ryb25nPkZvcm1hPC9zdHJvbmc+c2kgbGVzIGVudGl0YXRzIGQnZW50cmFkYSBjb250ZW5lbiBaLjwvbGk+PGxpPkFsdHJhbWVudCwgZWwgY2FtcCBwZXIgZGVmZWN0ZSBzZXLDoCA8c3Ryb25nPlBPUFVMQVRJT048L3N0cm9uZz4gbyBxdWFsc2V2b2wgZGVyaXZhZGEgZGUgcG9ibGFjacOzIGFjY2VwdGFibGU6PHVsPjxsaT48c3Ryb25nPlBPUFVMQVRJT054eHh4PC9zdHJvbmc+LCBlbiBxdcOoPHN0cm9uZz54eHh4PC9zdHJvbmc+cG90IHNlciBxdWFsc2V2b2wgY2Fyw6BjdGVyIHbDoGxpZCwgY29tIGFyYTxzdHJvbmc+UE9QVUxBVElPTjY8L3N0cm9uZz4sPHN0cm9uZz5QT1BVTEFUSU9OMTk3NDwvc3Ryb25nPiBvPHN0cm9uZz5QT1BVTEFUSU9OUk9BRFRZUEU8L3N0cm9uZz4uPC9saT48bGk+PHN0cm9uZz5QT1A8L3N0cm9uZz4uPC9saT48bGk+PHN0cm9uZz5QT1B4eHh4PC9zdHJvbmc+LjwvbGk+PGxpPlNpIGNhcCBkZSBsZXMgb3BjaW9ucyBhbnRlcmlvcnMgbm8gw6lzIGFwbGljYWJsZSwgZWwgdmFsb3IgcGVyIGRlZmVjdGUgc2Vyw6AgPHN0cm9uZz5DYXA8L3N0cm9uZz4uPC9saT48L3VsPjwvbGk+PC91bD5cIixcblx0XCJAQEtlcm5lbC1EZW5zaXR5X3NlYXJjaHJhZGl1c190YWcwQEBcIjogXCI8cD5SYWRpIGRlIGNlcmNhIGVuIHF1w6ggZXMgY2FsY3VsYXLDoCBsYSBkZW5zaXRhdC4gTGVzIHVuaXRhdHMgZXMgYmFzZW4gZW4gbGEgdW5pdGF0IGxpbmVhbCBkZSBsYSBwcm9qZWNjacOzLjwvcD48cD5QZXIgZXhlbXBsZSwgc2kgbGVzIHVuaXRhdHMgc8OzbiBtZXRyZXMsIHBlciBpbmNsb3VyZSB0b3RlcyBsZXMgZW50aXRhdHMgZGlucyBkJ3VuIHZlw69uYXQgZCd1bmEgbWlsbGEsIGRlZmluaXUgdW4gcmFkaSBkZSBjZXJjYSBkZSAxLjYwOSwzNDQgKGF0w6hzIHF1ZSAxIG1pbGxhID0gMS42MDksMzQ0IG1ldHJlcykuPC9wPlwiLFxuXHRcIkBAWm9uYWwtU3RhdGlzdGljc19pZ25vcmVub2RhdGFpbmNhbGN1bGF0aW9uc190YWcwQEBcIjogXCI8cD5EZW5vdGEgc2kgZWxzIHZhbG9yczxzdHJvbmc+Tm9EYXRhPC9zdHJvbmc+ZGVsPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+aW5mbHVpcmFuIGVuIGVscyByZXN1bHRhdHMgZGUgbGEgem9uYSBvbiBlcyB0cm9iZW4uPC9wPjx1bD48bGk+PHN0cm9uZz5Tw608L3N0cm9uZz46IGRpbnMgZGUgcXVhbHNldm9sIHpvbmEgY29uY3JldGEsIG5vbcOpcyBlbHMgcMOteGVscyBxdWUgdGluZ3VpbiB1biB2YWxvciBhbDxzdHJvbmc+csOgc3RlciBkZSB2YWxvcjwvc3Ryb25nPnMndXRpbGl0emFyYW4gcGVyIGRldGVybWluYXIgZWwgdmFsb3IgZGUgc29ydGlkYSBkJ2FxdWVzdGEgem9uYS4gRWxzIHDDrXhlbHMgPHN0cm9uZz5Ob0RhdGE8L3N0cm9uZz5kZWw8c3Ryb25nPnLDoHN0ZXIgZGUgdmFsb3I8L3N0cm9uZz5zJ2lnbm9yYXJhbiBhbCBjw6BsY3VsIGVzdGFkw61zdGljLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT48c3Ryb25nPk5vPC9zdHJvbmc+OiBkaW5zIGRlIHF1YWxzZXZvbCB6b25hIGNvbmNyZXRhLCBzaSBleGlzdGVpeCBhbGd1biBww614ZWw8c3Ryb25nPk5vRGF0YTwvc3Ryb25nPmFsPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+LCBlcyBjb25zaWRlcmFyw6AgaW5zdWZpY2llbnQgbGEgaW5mb3JtYWNpw7MgcGVyIHJlYWxpdHphciBjw6BsY3VscyBlc3RhZMOtc3RpY3MgYSB0b3RzIGVscyBww614ZWxzIGRlIGxhIHpvbmE7IHBlciB0YW50LCB0b3RhIGxhIHpvbmEgcmVicsOgIGVsIHZhbG9yPHN0cm9uZz5Ob0RhdGE8L3N0cm9uZz5hbCByw6BzdGVyIGRlIHNvcnRpZGEuPC9saT48L3VsPlwiLFxuXHRcIkBAWm9uYWwtU3RhdGlzdGljc19wZXJjZW50aWxlaW50ZXJwb2xhdGlvbnR5cGVfdGFnMEBAXCI6IFwiPHA+RGV0ZXJtaW5hIGVsIG3DqHRvZGUgZCdpbnRlcnBvbGFjacOzIGRlbCBwZXJjZW50aWwgcXVlIGVzIGZhcsOgIHNlcnZpciBxdWFuIGVsIG5vbWJyZSBkZSB2YWxvcnMgZGVsIHLDoHN0ZXIgZCdlbnRyYWRhIHF1ZSBzJ2hhZ2luIGRlIGNhbGN1bGFyIHNpZ3VpIHBhcmVsbC48L3A+PHVsPjxsaT48c3Ryb25nPkRldGVjdGEgYXV0b23DoHRpY2FtZW50PC9zdHJvbmc+OiBzaSBlbCByw6BzdGVyIGRlIHZhbG9yIGQnZW50cmFkYSDDqXMgZGUgdGlwdXMgZGUgcMOteGVsIGVudGVyLCBlcyBmYSBzZXJ2aXIgZWwgbcOodG9kZSA8c3Ryb25nPk3DqXMgcHJvcGVyPC9zdHJvbmc+LiBTaSBlbCByw6BzdGVyIGRlIHZhbG9yIGQnZW50cmFkYSDDqXMgZGUgdGlwdXMgZGUgcMOteGVsIGRlIHB1bnQgZmxvdGFudCwgZXMgZmEgc2VydmlyIGVsIG3DqHRvZGU8c3Ryb25nPkxpbmVhbDwvc3Ryb25nPi4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48bGk+PHN0cm9uZz5Nw6lzIHByb3Blcjwvc3Ryb25nPjogZXMgZmEgc2VydmlyIGVsIHZhbG9yIGRpc3BvbmlibGUgbcOpcyBwcm9wZXIgYWwgcGVyY2VudGlsIGRlc2l0amF0LiBFbiBhcXVlc3QgY2FzLCBlbCB0aXB1cyBkZSBww614ZWwgZGUgc29ydGlkYSDDqXMgZWwgbWF0ZWl4IHF1ZSBlbCBkZWwgcsOgc3RlciBkZSB2YWxvciBkJ2VudHJhZGEuPC9saT48bGk+PHN0cm9uZz5MaW5lYWw8L3N0cm9uZz46IGVzIGZhIHNlcnZpciBsYSBtaXRqYW5hIHBvbmRlcmFkYSBkZWxzIGRvcyB2YWxvcnMgY2lyY3VtZGFudHMgZGVsIHBlcmNlbnRpbCBkZXNpdGphdC4gRW4gYXF1ZXN0IGNhcywgZWwgdGlwdXMgZGUgcMOteGVsIGRlIHNvcnRpZGEgw6lzIGRlIHB1bnQgZmxvdGFudC48L2xpPjwvdWw+XCIsXG5cdFwiQEBab25hbC1TdGF0aXN0aWNzX3BlcmNlbnRpbGV2YWx1ZV90YWcwQEBcIjogXCI8cD5QZXJjZW50aWwgcXVlIGVzIGNhbGN1bGFyw6AuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyA5MCwgcGVyIGFsIHBlcmNlbnRpbCA5MC48L3A+PHA+RWxzIHZhbG9ycyBwb2RlbiBzZXIgZGUgMCBhIDEwMC4gRWwgcGVyY2VudGlsIDAgw6lzIGLDoHNpY2FtZW50IGVxdWl2YWxlbnQgYSBsJ2VzdGFkw61zdGljYSBtw61uaW1hIGkgZWwgcGVyY2VudGlsIDEwMCBlcXVpdmFsIGEgbGEgbcOgeGltYS4gVW4gdmFsb3IgZGUgNTAgcHJvZHVpcsOgIGLDoHNpY2FtZW50IGVsIG1hdGVpeCByZXN1bHRhdCBxdWUgbCdlc3RhZMOtc3RpY2EgbWVkaWFuYS48L3A+XCIsXG5cdFwiQEBab25hbC1TdGF0aXN0aWNzX3Byb2Nlc3Nhc211bHRpZGltZW5zaW9uYWxfdGFnMEBAXCI6IFwiPHA+RGV0ZXJtaW5hIGNvbSBlcyBwcm9jZXNzYSBlbCByw6BzdGVyIGRlIHZhbG9yIG11bHRpZGltZW5zaW9uYWwgZCdlbnRyYWRhLjwvcD48dWw+PGxpPjxzdHJvbmc+U2VjdG9yIGFjdHVhbDwvc3Ryb25nPjogZXMgY2FsY3VsYXJhbiBsZXMgZXN0YWTDrXN0aXF1ZXMgZGVsIHNlY3RvciBhY3R1YWwgZCd1biBkYXRhc2V0IG11bHRpZGltZW5zaW9uYWwuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHByZWRldGVybWluYWRhLjwvbGk+PGxpPjxzdHJvbmc+VG90cyBlbHMgc2VjdG9yczwvc3Ryb25nPjogZXMgY2FsY3VsYXJhbiBsZXMgZXN0YWTDrXN0aXF1ZXMgZGUgdG90ZXMgbGVzIGRpbWVuc2lvbnMgKGNvbSBhcmEgZWwgdGVtcHMgbyBsYSBwcm9mdW5kaXRhdCkgZCd1biBkYXRhc2V0IG11bHRpZGltZW5zaW9uYWwuPC9saT48L3VsPlwiLFxuXHRcIkBAWm9uYWwtU3RhdGlzdGljc19zdGF0aXN0aWNzdHlwZV90YWcwQEBcIjogXCI8cD5UaXB1cyBkJ2VzdGFkw61zdGljYSBxdWUgZXMgY2FsY3VsYXLDoC48L3A+PHVsPjxsaT48c3Ryb25nPk1pdGphbmE8L3N0cm9uZz46IGNhbGN1bGEgbGEgbWl0amFuYSBkZSB0b3RzIGVscyBww614ZWxzIGRlbDxzdHJvbmc+csOgc3RlciBkZSB2YWxvcjwvc3Ryb25nPnF1ZSBwZXJ0YW55ZW4gYSBsYSBtYXRlaXhhIHpvbmEgcXVlIGVsIHDDrXhlbCBkZSBzb3J0aWRhLjwvbGk+PGxpPjxzdHJvbmc+TWFqb3JpYTwvc3Ryb25nPjogZGV0ZXJtaW5hIGVsIHZhbG9yIHF1ZSBlcyBwcm9kdWVpeCBtw6lzIHNvdmludCBkZSB0b3RzIGVscyBww614ZWxzIGRlbDxzdHJvbmc+csOgc3RlciBkZSB2YWxvcjwvc3Ryb25nPnF1ZSBwZXJ0YW55ZW4gYSBsYSBtYXRlaXhhIHpvbmEgcXVlIGVsIHDDrXhlbCBkZSBzb3J0aWRhLjwvbGk+PGxpPjxzdHJvbmc+TcOgeGltPC9zdHJvbmc+OiBkZXRlcm1pbmEgZWwgdmFsb3IgbcOpcyBncmFuIGRlIHRvdHMgZWxzIHDDrXhlbHMgZGVsPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+cXVlIHBlcnRhbnllbiBhIGxhIG1hdGVpeGEgem9uYSBxdWUgZWwgcMOteGVsIGRlIHNvcnRpZGEuPC9saT48bGk+PHN0cm9uZz5NZWRpYW5hPC9zdHJvbmc+OiBkZXRlcm1pbmEgZWwgdmFsb3IgbWVkacOgIGRlIHRvdHMgZWxzIHDDrXhlbHMgZGVsPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+cXVlIHBlcnRhbnllbiBhIGxhIG1hdGVpeGEgem9uYSBxdWUgZWwgcMOteGVsIGRlIHNvcnRpZGEuPC9saT48bGk+PHN0cm9uZz5Nw61uaW08L3N0cm9uZz46IGRldGVybWluYSBlbCB2YWxvciBtw6lzIHBldGl0IGRlIHRvdHMgZWxzIHDDrXhlbHMgZGVsPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+cXVlIHBlcnRhbnllbiBhIGxhIG1hdGVpeGEgem9uYSBxdWUgZWwgcMOteGVsIGRlIHNvcnRpZGEuPC9saT48bGk+PHN0cm9uZz5NaW5vcmlhPC9zdHJvbmc+OiBkZXRlcm1pbmEgZWwgdmFsb3IgcXVlIGVzIHByb2R1ZWl4IG1lbnlzIHNvdmludCBkZSB0b3RzIGVscyBww614ZWxzIGRlbDxzdHJvbmc+csOgc3RlciBkZSB2YWxvcjwvc3Ryb25nPnF1ZSBwZXJ0YW55ZW4gYSBsYSBtYXRlaXhhIHpvbmEgcXVlIGVsIHDDrXhlbCBkZSBzb3J0aWRhLjwvbGk+PGxpPjxzdHJvbmc+UGVyY2VudGlsPC9zdHJvbmc+OiBjYWxjdWxhIHVuIHBlcmNlbnRpbCBkZSB0b3RzIGVscyBww614ZWxzIGRlbDxzdHJvbmc+csOgc3RlciBkZSB2YWxvcjwvc3Ryb25nPnF1ZSBwZXJ0YW55ZW4gYSBsYSBtYXRlaXhhIHpvbmEgcXVlIGVsIHDDrXhlbCBkZSBzb3J0aWRhLiBFbCBwZXJjZW50aWwgOTAgZXMgY2FsY3VsYSBkZSBtYW5lcmEgcHJlZGV0ZXJtaW5hZGEuIFBvdHMgZGV0ZXJtaW5hciBlbCBwZXJjZW50aWwgcXVlIGVzIGNhbGN1bGFyw6AgYW1iIGVsIHBhcsOgbWV0cmU8c3Ryb25nPlZhbG9yIGRlIHBlcmNlbnRpbDwvc3Ryb25nPi48L2xpPjxsaT48c3Ryb25nPkludGVydmFsPC9zdHJvbmc+OiBjYWxjdWxhIGxhIGRpZmVyw6huY2lhIGVudHJlIGVsIHZhbG9yIG3DqXMgYWx0IGkgZWwgbcOpcyBiYWl4IGRlIHRvdHMgZWxzIHDDrXhlbHMgZGVsPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+cXVlIHBlcnRhbnllbiBhIGxhIG1hdGVpeGEgem9uYSBxdWUgZWwgcMOteGVsIGRlIHNvcnRpZGEuPC9saT48bGk+PHN0cm9uZz5EZXN2aWFjacOzIGVzdMOgbmRhcmQ8L3N0cm9uZz46IGNhbGN1bGEgbGEgZGVzdmlhY2nDsyBlc3TDoG5kYXJkIGRlIHRvdHMgZWxzIHDDrXhlbHMgZGVsPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+cXVlIHBlcnRhbnllbiBhIGxhIG1hdGVpeGEgem9uYSBxdWUgZWwgcMOteGVsIGRlIHNvcnRpZGEuPC9saT48bGk+PHN0cm9uZz5TdW1hPC9zdHJvbmc+OiBjYWxjdWxhIGVsIHZhbG9yIHRvdGFsIGRlIHRvdHMgZWxzIHDDrXhlbHMgZGVsPHN0cm9uZz5yw6BzdGVyIGRlIHZhbG9yPC9zdHJvbmc+cXVlIHBlcnRhbnllbiBhIGxhIG1hdGVpeGEgem9uYSBxdWUgZWwgcMOteGVsIGRlIHNvcnRpZGEuPC9saT48bGk+PHN0cm9uZz5WYXJpZXRhdDwvc3Ryb25nPjogY2FsY3VsYSBlbCBub21icmUgZGUgdmFsb3JzIMO6bmljcyBkZSB0b3RzIGVscyBww614ZWxzIGRlbDxzdHJvbmc+csOgc3RlciBkZSB2YWxvcjwvc3Ryb25nPnF1ZSBwZXJ0YW55ZW4gYSBsYSBtYXRlaXhhIHpvbmEgcXVlIGVsIHDDrXhlbCBkZSBzb3J0aWRhLjwvbGk+PC91bD5cIixcblx0XCJAQFpvbmFsLVN0YXRpc3RpY3NfdmFsdWVyYXN0ZXJfdGFnMEBAXCI6IFwiPHA+UsOgc3RlciBxdWUgY29udMOpIGVscyB2YWxvcnMgZW4gcXXDqCBlcyBjYWxjdWxhcsOgIHVuYSBlc3RhZMOtc3RpY2EuPC9wPlwiLFxuXHRcIkBAWm9uYWwtU3RhdGlzdGljc196b25lZmllbGRfdGFnMEBAXCI6IFwiPHA+Q2FtcCBxdWUgY29udMOpIGVscyB2YWxvcnMgcXVlIGRlZmluZWl4ZW4gY2FkYSB6b25hLiBQb3Qgc2VyIHVuIGVudGVyIG8gdW4gY2FtcCBkZSBjYWRlbmEgZGVsIHLDoHN0ZXIgZGUgem9uYS48L3A+XCIsXG5cdFwiQEBab25hbC1TdGF0aXN0aWNzX3pvbmVyYXN0ZXJfdGFnMEBAXCI6IFwiPHA+RGF0YXNldCBxdWUgZGVmaW5laXggbGVzIHpvbmVzLiBMZXMgem9uZXMgZXMgcG9kZW4gZGVmaW5pciBhbWIgdW4gcsOgc3RlciBkJ2VudGVyLjwvcD5cIixcblx0XCJAQFpvbmFsLVN0YXRpc3RpY3NfY2FsY3VsYXRlY2lyY3VsYXJzdGF0aXN0aWNzX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgY29tIGVzIGNhbGN1bGFyw6AgZWwgdGlwdXMgZCdlc3RhZMOtc3RpcXVlcy48L3A+PHVsPjxsaT48c3Ryb25nPkFyaXRtw6h0aWNhPC9zdHJvbmc+OiBjYWxjdWxhIGVzdGFkw61zdGlxdWVzIGFyaXRtw6h0aXF1ZXMuIEFxdWVzdCDDqXMgZWwgdmFsb3IgcGVyIGRlZmVjdGUuPC9saT48bGk+PHN0cm9uZz5DaXJjdWxhcjwvc3Ryb25nPjogY2FsY3VsYSBlc3RhZMOtc3RpcXVlcyBjaXJjdWxhcnMgcXVlIHPDs24gYWRlcXVhZGVzIHBlciBhIHF1YW50aXRhdHMgY8OtY2xpcXVlcywgY29tIGFyYSBsYSBkaXJlY2Npw7MgZGUgbGEgYnLDuml4b2xhIGVuIGdyYXVzLCBsZXMgaG9yZXMgZGVsIGRpYSBpIGZyYWNjaW9ucyBkZSBub21icmVzIHJlYWxzLjwvbGk+PC91bD5cIixcblx0XCJAQFpvbmFsLVN0YXRpc3RpY3NfY2lyY3VsYXJ3cmFwdmFsdWVfdGFnMEBAXCI6IFwiPHA+RWwgdmFsb3IgbcOpcyBncmFuIHBvc3NpYmxlIChsw61taXQgc3VwZXJpb3IpIGRlIGxlcyBkYWRlcyBjw61jbGlxdWVzLiDDiXMgdW4gbm9tYnJlIHBvc2l0aXUsIGFtYiB1biB2YWxvciBwZXIgZGVmZWN0ZSBkZSAzNjAuIEFxdWVzdCB2YWxvciB0YW1iw6kgcmVwcmVzZW50YSBsYSBtYXRlaXhhIHF1YW50aXRhdCBxdWUgZWwgdmFsb3IgbcOpcyBiYWl4IHBvc3NpYmxlIChsw61taXQgaW5mZXJpb3IpLjwvcD48cD5BcXVlc3QgcGFyw6BtZXRyZSBub23DqXMgw6lzIGFwbGljYWJsZSBxdWFuIGVzIGNhbGN1bGVuIGVzdGFkw61zdGlxdWVzIGNpcmN1bGFycy48L3A+XCIsXG5cdFwiQEBCb3VuZGFyeS1DbGVhbi1mdW5jdGlvbl9pbnB1dHJhc3Rlcl90YWcwQEBcIjogXCI8cD5Sw6BzdGVyIGQnZW50cmFkYSBwZXIgYWwgcXVhbCBzZSBzdWF2aXR6YXLDoCBlbCBsw61taXQgZW50cmUgem9uZXMuPC9wPjxwPkhhIGRlIHNlciBkZSB0aXB1cyBlbnRlci48L3A+XCIsXG5cdFwiQEBCb3VuZGFyeS1DbGVhbi1mdW5jdGlvbl9ydW5leHBhbnNpb25hbmRzaHJpbmtpbmd0d2ljZV90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIGVsIG5vbWJyZSBkZSB2ZWdhZGVzIHF1ZSBlcyBwcm9kdWlyw6AgZWwgcHJvY8OpcyBkZSBzdWF2aXR6YWNpw7MsIHVuYSBvIGR1ZXMgdmVnYWRlcy48L3A+PHVsPjxsaT48cD48c3Ryb25nPkFjdGl2YXQ8L3N0cm9uZz46IGR1IGEgdGVybWUgdW5hIG9wZXJhY2nDsyBkJ2V4cGFuc2nDsyBpIHJlZHVjY2nDsyBkdWVzIHZlZ2FkZXMuIExhIHByaW1lcmEgdmVnYWRhLCBsJ29wZXJhY2nDsyBlcyBkdSBhIHRlcm1lIGQnYWNvcmQgYW1iIGVsIHRpcHVzIGQnb3JkZW5hY2nDsyBlc3BlY2lmaWNhdC4gQSBjb250aW51YWNpw7MsIGVzIGZhIHVuYSBhbHRyYSBvcGVyYWNpw7MgZCdleHBhbnNpw7MgaSByZWR1Y2Npw7MgYW1iIGxhIHByaW9yaXRhdCBpbnZlcnRpZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHByZWRldGVybWluYWRhLjwvcD48L2xpPjxsaT48cD48c3Ryb25nPkRlc2FjdGl2YXQ8L3N0cm9uZz46IHJlYWxpdHphIGwnb3BlcmFjacOzIGQnZXhwYW5zacOzIGkgcmVkdWNjacOzIHVuYSB2ZWdhZGEgZCdhY29yZCBhbWIgZWwgdGlwdXMgZCdvcmRlbmFjacOzLjwvcD48L2xpPjwvdWw+XCIsXG5cdFwiQEBCb3VuZGFyeS1DbGVhbi1mdW5jdGlvbl9zb3J0dHlwZV90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIGVsIHRpcHVzIGQnb3JkZW5hY2nDsyBxdWUgZXMgZmFyw6Agc2VydmlyIGFsIHByb2PDqXMgZGUgc3Vhdml0emFjacOzLiBMJ29yZGVuYWNpw7MgZGV0ZXJtaW5hIGxhIHByaW9yaXRhdCBhbWIgcXXDqCBsZXMgY2VswrdsZXMgZXMgcG9kZW4gZXhwYW5kaXIgYSBsZXMgc2V2ZXMgY2VswrdsZXMgdmXDr25lcy48L3A+PHA+TCdvcmRlbmFjacOzIGVzIHBvdCBmZXIgZW4gZnVuY2nDsyBkZWwgdmFsb3IgZGUgem9uYSBvIGRlIGwnw6ByZWEgZGUgem9uYS48L3A+PHVsPjxsaT48cD48c3Ryb25nPk5vIGhvIG9yZGVuaXM8L3N0cm9uZz46IGVscyB2YWxvcnMgZGUgem9uYSBubyBzJ29yZGVuZW4gcGVyIG1pZGEuIExlcyB6b25lcyBhbWIgdmFsb3JzIG3DqXMgZ3JhbnMgdGluZHJhbiBtw6lzIHByaW9yaXRhdCBwZXIgZXhwYW5kaXItc2UgYSB6b25lcyBhbWIgdmFsb3JzIG3DqXMgcGV0aXRzIGEgbGEgc29ydGlkYSBzdWF2aXR6YWRhLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L3A+PC9saT48bGk+PHA+PHN0cm9uZz5EZXNjZW5kZW50PC9zdHJvbmc+OiBvcmRlbmEgbGVzIHpvbmVzIGVuIG9yZHJlIGRlc2NlbmRlbnQgcGVyIG1pZGEuIExlcyB6b25lcyBhbWIgw6ByZWVzIHRvdGFscyBtw6lzIGdyYW5zIHRlbmVuIG3DqXMgcHJpb3JpdGF0IHBlciBleHBhbmRpci1zZSBhIHpvbmVzIGFtYiDDoHJlZXMgdG90YWxzIG3DqXMgcGV0aXRlcy4gQXF1ZXN0YSBvcGNpw7MgdGVuZGVpeCBhIGVsaW1pbmFyIG8gcmVkdWlyIGxhIHByZXZhbGVuw6dhIGRlIGxlcyB6b25lcyBtw6lzIHBldGl0ZXMgYSBsYSBzb3J0aWRhIHN1YXZpdHphZGEuPC9wPjwvbGk+PGxpPjxwPjxzdHJvbmc+QXNjZW5kZW50PC9zdHJvbmc+OiBvcmRlbmEgbGVzIHpvbmVzIGVuIG9yZHJlIGFzY2VuZGVudCBwZXIgbWlkYS4gTGVzIHpvbmVzIGFtYiDDoHJlZXMgdG90YWxzIG3DqXMgcGV0aXRlcyB0ZW5lbiBtw6lzIHByaW9yaXRhdCBwZXIgZXhwYW5kaXItc2UgYSB6b25lcyBhbWIgw6ByZWVzIHRvdGFscyBtw6lzIGdyYW5zLiBBcXVlc3RhIG9wY2nDsyB0ZW5kZWl4IGEgbWFudGVuaXIgbyBhdWdtZW50YXIgbGEgcHJldmFsZW7Dp2EgZGUgbGVzIHpvbmVzIG3DqXMgcGV0aXRlcyBhIGxhIHNvcnRpZGEgc3Vhdml0emFkYS48L3A+PC9saT48L3VsPlwiLFxuXHRcIkBAQWdncmVnYXRlLU11bHRpZGltZW5zaW9uYWxfZGltZW5zaW9uX3RhZzBAQFwiOiBcIjxwPkRpbWVuc2nDsyBkZSBsJ2FncmVnYWNpw7MuIMOJcyBsYSBkaW1lbnNpw7MgYSBsYSBxdWFsIHMnYWdyZWdhcmFuIGxlcyB2YXJpYWJsZXMuPC9wPlwiLFxuXHRcIkBAQWdncmVnYXRlLU11bHRpZGltZW5zaW9uYWxfZGltZW5zaW9uZGVmaW5pdGlvbl90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIGVsIG3DqHRvZGUgcXVlIHMndXRpbGl0emFyw6AgcGVyIGZpbHRyYXIgbGVzIGRhZGVzIG11bHRpZGltZW5zaW9uYWxzIGludHJvZHXDr2RlcyBhYmFucyBkJ2VmZWN0dWFyIGwnYWdyZWdhY2nDsy48L3A+PHVsPjxsaT48c3Ryb25nPlRvdDwvc3Ryb25nPjogcyd1dGlsaXR6YXLDoCBsJ2ludGVydmFsIGNvbXBsZXQgZGUgY2FkYSBkaW1lbnNpw7MuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHByZWRldGVybWluYWRhLjwvbGk+PGxpPjxzdHJvbmc+UGVyIHZhbG9yczwvc3Ryb25nPjogbGEgZGltZW5zacOzIGVzIGRpdmlkaXLDoCBlbiBzZWN0b3JzIHV0aWxpdHphbnQgdW4gdmFsb3IgZGUgZGltZW5zacOzIG8gdW5hIGxsaXN0YSBkZSB2YWxvcnMuPC9saT48bGk+PHN0cm9uZz5QZXIgaW50ZXJ2YWxzPC9zdHJvbmc+OiBsYSBkaW1lbnNpw7MgZXMgZGl2aWRpcsOgIGVuIHNlY3RvcnMgdXRpbGl0emFudCB1biBpbnRlcnZhbCBvIHVuYSBsbGlzdGEgZCdpbnRlcnZhbHMuPC9saT48bGk+PHN0cm9uZz5QZXIgaXRlcmFjacOzPC9zdHJvbmc+OiBsYSBkaW1lbnNpw7MgZXMgZGl2aWRpcsOgIGVuIHNlY3RvcnMgZW4gdW5hIG1pZGEgZCdpbnRlcnZhbCBlc3BlY2lmaWNhZGEuPC9saT48L3VsPlwiLFxuXHRcIkBAQWdncmVnYXRlLU11bHRpZGltZW5zaW9uYWxfaXRlcmF0aW9uZGVmaW5pdGlvbnBhcmFtZXRlcnNfdGFnMEBAXCI6IFwiPHA+RWxzIHBhcsOgbWV0cmVzIGRlIERlZmluaWNpw7MgZCdpdGVyYWNpw7MgcGVybWV0ZW4gZGVmaW5pciBlbHMgdmFsb3JzIGRlIGRpbWVuc2nDsyBxdWUgcyd1dGlsaXR6YXJhbiBwZXIgZmlsdHJhciBsZXMgZGFkZXMgbXVsdGlkaW1lbnNpb25hbHMgaW50cm9kdcOvZGVzIHF1YW4gZWwgcGFyw6BtZXRyZSA8c3Ryb25nPkRlZmluaWNpw7MgZGUgZGltZW5zacOzPC9zdHJvbmc+cydlc3RhYmxlaXggZW4gPHN0cm9uZz5QZXIgaXRlcmFjacOzPC9zdHJvbmc+LjwvcD48dWw+PGxpPjxzdHJvbmc+RGltZW5zacOzPC9zdHJvbmc+OiBkaW1lbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgcGVyIGZpbHRyYXIgbGVzIGRhZGVzLjwvbGk+PGxpPjxzdHJvbmc+SW5pY2kgZGUgbGEgcHJpbWVyYSBpdGVyYWNpw7M8L3N0cm9uZz46IHByaW5jaXBpIGRlbCBwcmltZXIgaW50ZXJ2YWwuIEFxdWVzdCBpbnRlcnZhbCBzJ3V0aWxpdHphIHBlciBpdGVyYXIgZWwgZGF0YXNldC48L2xpPjxsaT48c3Ryb25nPkZpbmFsIGRlIGxhIHByaW1lcmEgaXRlcmFjacOzPC9zdHJvbmc+OiBhY2FiYW1lbnQgZGVsIHByaW1lciBpbnRlcnZhbC4gQXF1ZXN0IGludGVydmFsIHMndXRpbGl0emEgcGVyIGl0ZXJhciBlbCBkYXRhc2V0LjwvbGk+PGxpPjxzdHJvbmc+UGVyw61vZGU8L3N0cm9uZz46IGZyZXHDvMOobmNpYSBhbWIgcXXDqCBlcyBkaXZpZGlyYW4gbGVzIGRhZGVzLjwvbGk+PGxpPjxzdHJvbmc+VW5pdGF0PC9zdHJvbmc+OiB1bml0YXQgZCdpdGVyYWNpw7MuPC9saT48L3VsPlwiLFxuXHRcIkBAQWdncmVnYXRlLU11bHRpZGltZW5zaW9uYWxfa2V5d29yZGludGVydmFsX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgbCdpbnRlcnZhbCBkZSBwYXJhdWxlcyBjbGF1IHF1ZSBzJ3V0aWxpdHphcsOgIGVuIGwnYWdyZWdhY2nDsyBhIGxhIGRpbWVuc2nDsy48L3A+PHA+QXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlPHN0cm9uZz5UaXB1czwvc3Ryb25nPnMnZXN0YWJsZWl4IGVuPHN0cm9uZz5QYXJhdWxhIGNsYXUgZGUgbCdpbnRlcnZhbDwvc3Ryb25nPi48L3A+PHVsPjxsaT48c3Ryb25nPkNhZGEgaG9yYTwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ3VlbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgZCdob3JlcywgaSBlbCByZXN1bHRhdCBpbmNsb3UgY2FkYSBob3JhIGRlIGxhIHPDqHJpZSB0ZW1wb3JhbC4gQXF1ZXN0YSDDqXMgbCdvcGNpw7MgcGVyIGRlZmVjdGUuPC9saT48bGk+PHN0cm9uZz5DYWRhIGRpYTwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ3VlbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgZGlhcmlzLCBpIGVsIHJlc3VsdGF0IGluY2xvdSBjYWRhIGRpYSBkZSBsYSBzw6hyaWUgdGVtcG9yYWwuPC9saT48bGk+PHN0cm9uZz5DYWRhIHNldG1hbmE8L3N0cm9uZz46IGVscyB2YWxvcnMgZGUgbGVzIGRhZGVzIHMnYWdyZWd1ZW4gZW4gcGVyw61vZGVzIGRlIHRlbXBzIHNldG1hbmFscywgaSBlbCByZXN1bHRhdCBpbmNsb3UgY2FkYSBzZXRtYW5hIGRlIGxhIHPDqHJpZSB0ZW1wb3JhbC48L2xpPjxsaT48c3Ryb25nPkNhZGEgZMOoY2FkYTwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ3VlbiBlbiAzIHBlcsOtb2RlcyBkZSAxMCBkaWVzIGNhZGFzY3VuLiBFbCBkYXJyZXIgcGVyw61vZGUgcG90IGNvbnRlbmlyIG3DqXMgbyBtZW55cyBkZSAxMCBkaWVzLiBMYSBzb3J0aWRhIGluY2xvdSAzIHNlY3RvcnMgcGVyIGEgY2FkYSBtZXMuPC9saT48bGk+PHN0cm9uZz5DYWRhIDUgZGllczwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ2FyYW4gZW4gNiBwZXLDrW9kZXMgZGUgNSBkaWVzIGNhZGFzY3VuLiBFbCBkYXJyZXIgcGVyw61vZGUgcG90IGNvbnRlbmlyIG3DqXMgbyBtZW55cyBkZSA1IGRpZXMuIExhIHNvcnRpZGEgaW5jbG91IDYgc2VjdG9ycyBwZXIgYSBjYWRhIG1lcy48L2xpPjxsaT48c3Ryb25nPkNhZGEgbWVzPC9zdHJvbmc+OiBlbHMgdmFsb3JzIGRlIGxlcyBkYWRlcyBzJ2FncmVndWVuIGVuIHBlcsOtb2RlcyBkZSB0ZW1wcyBtZW5zdWFscywgaSBlbCByZXN1bHRhdCBpbmNsb3UgY2FkYSBtZXMgZGUgbGEgc8OocmllIHRlbXBvcmFsLjwvbGk+PGxpPjxzdHJvbmc+Q2FkYSB0cmltZXN0cmU8L3N0cm9uZz46IGVscyB2YWxvcnMgZGUgbGVzIGRhZGVzIHMnYWdyZWd1ZW4gZW4gcGVyw61vZGVzIGRlIHRlbXBzIHRyaW1lc3RyYWxzLCBpIGVsIHJlc3VsdGF0IGluY2xvdSBjYWRhIHRyaW1lc3RyZSBkZSBsYSBzw6hyaWUgdGVtcG9yYWwuPC9saT48bGk+PHN0cm9uZz5DYWRhIGFueTwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ3VlbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgYW51YWxzLCBpIGVsIHJlc3VsdGF0IGluY2xvdSBjYWRhIGFueSBkZSBsYSBzw6hyaWUgdGVtcG9yYWwuPC9saT48bGk+PHN0cm9uZz5BbWIgcmVjdXJyw6huY2lhIGRpw6ByaWE8L3N0cm9uZz46IGVscyB2YWxvcnMgZGUgbGVzIGRhZGVzIHMnYWdyZWd1ZW4gZW4gcGVyw61vZGVzIGRlIHRlbXBzIGRpYXJpcywgaSBlbCByZXN1bHRhdCBpbmNsb3UgdW4gdmFsb3IgYWdyZWdhdCBwZXIgZGlhIGp1bGnDoC4gTGEgc29ydGlkYSBpbmNsb3UsIGNvbSBhIG3DoHhpbSwgMzY2IHNlY3RvcnMgZGUgdGVtcHMgZGlhcmlzLjwvbGk+PGxpPjxzdHJvbmc+QW1iIHJlY3VycsOobmNpYSBzZXRtYW5hbDwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ3VlbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgc2V0bWFuYWxzLCBpIGVsIHJlc3VsdGF0IGluY2xvdSB1biB2YWxvciBhZ3JlZ2F0IHBlciBzZXRtYW5hLiBMYSBzb3J0aWRhIGluY2xvdSwgY29tIGEgbcOgeGltLCA1MyBzZWN0b3JzIGRlIHRlbXBzIHNldG1hbmFscy48L2xpPjxsaT48c3Ryb25nPkFtYiByZWN1cnLDqG5jaWEgbWVuc3VhbDwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ3VlbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgbWVuc3VhbHMsIGkgZWwgcmVzdWx0YXQgaW5jbG91IHVuIHZhbG9yIGFncmVnYXQgcGVyIG1lcy4gTGEgc29ydGlkYSBpbmNsb3UsIGNvbSBhIG3DoHhpbSwgMTIgc2VjdG9ycyBkZSB0ZW1wcyBtZW5zdWFscy48L2xpPjxsaT48c3Ryb25nPkFtYiByZWN1cnLDqG5jaWEgdHJpbWVzdHJhbDwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBsZXMgZGFkZXMgcydhZ3JlZ3VlbiBlbiBwZXLDrW9kZXMgZGUgdGVtcHMgdHJpbWVzdHJhbHMsIGkgZWwgcmVzdWx0YXQgaW5jbG91IHVuIHZhbG9yIGFncmVnYXQgcGVyIHRyaW1lc3RyZS4gTGEgc29ydGlkYSBpbmNsb3UsIGNvbSBhIG3DoHhpbSwgNCBzZWN0b3JzIGRlIHRlbXBzIHRyaW1lc3RyYWxzLjwvdWw+PC9saT5cIixcblx0XCJAQEFnZ3JlZ2F0ZS1NdWx0aWRpbWVuc2lvbmFsX29wZXJhdGlvbl90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIGVsIG3DqHRvZGUgbWF0ZW3DoHRpYyBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgY29tYmluYXIgZWxzIHNlY3RvcnMgYWdyZWdhdHMgZW4gdW4gaW50ZXJ2YWwuPC9wPjx1bD48bGk+PHN0cm9uZz5NYWpvcmlhPC9zdHJvbmc+OiBjYWxjdWxhIGVsIHZhbG9yIHF1ZSBzJ2hhIGRvbmF0IGFtYiBtw6lzIGZyZXHDvMOobmNpYSBwZXIgYSB1biBww614ZWwgZW4gdG90cyBlbHMgc2VjdG9ycyBkZSBsJ2ludGVydmFsLjwvbGk+PGxpPjxzdHJvbmc+TcOgeGltPC9zdHJvbmc+OiBjYWxjdWxhIGVsIHZhbG9yIG3DoHhpbSBkJ3VuIHDDrXhlbCBlbiB0b3RzIGVscyBzZWN0b3JzIGRlIGwnaW50ZXJ2YWwuPC9saT48bGk+PHN0cm9uZz5NaXRqYW5hPC9zdHJvbmc+OiBjYWxjdWxhIGxhIG1pdGphbmEgZGVscyB2YWxvcnMgZCd1biBww614ZWwgZW4gdG90cyBlbHMgc2VjdG9ycyBkZSBsJ2ludGVydmFsLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT48c3Ryb25nPk1lZGlhbmE8L3N0cm9uZz46IGNhbGN1bGEgZWwgdmFsb3IgZGUgbGEgbWVkaWFuYSBkJ3VuIHDDrXhlbCBlbiB0b3RzIGVscyBzZWN0b3JzIGRlIGwnaW50ZXJ2YWwuPC9saT48bGk+PHN0cm9uZz5Nw61uaW08L3N0cm9uZz46IGNhbGN1bGEgZWwgdmFsb3IgbcOtbmltIGQndW4gcMOteGVsIGVuIHRvdHMgZWxzIHNlY3RvcnMgZGUgbCdpbnRlcnZhbC48L2xpPjxsaT48c3Ryb25nPk1pbm9yaWE8L3N0cm9uZz46IGNhbGN1bGEgZWwgdmFsb3IgcXVlIHMnaGEgZG9uYXQgYW1iIG1lbnlzIGZyZXHDvMOobmNpYSBwZXIgYSB1biBww614ZWwgZW4gdG90cyBlbHMgc2VjdG9ycyBkZSBsJ2ludGVydmFsLjwvbGk+PGxpPjxzdHJvbmc+SW50ZXJ2YWw8L3N0cm9uZz46IGNhbGN1bGEgbCdpbnRlcnZhbCBkZSB2YWxvcnMgZCd1biBww614ZWwgZW4gdG90cyBlbHMgc2VjdG9ycyBkZSBsJ2ludGVydmFsLjwvbGk+PGxpPjxzdHJvbmc+RGVzdmlhY2nDsyBlc3TDoG5kYXJkPC9zdHJvbmc+OiBjYWxjdWxhIGxhIGRlc3ZpYWNpw7MgZXN0w6BuZGFyZCBkZWxzIHZhbG9ycyBkJ3VuIHDDrXhlbCBlbiB0b3RzIGVscyBzZWN0b3JzIGRlIGwnaW50ZXJ2YWwuPC9saT48bGk+PHN0cm9uZz5TdW1hPC9zdHJvbmc+OiBjYWxjdWxhIGxhIHN1bWEgZGVscyB2YWxvcnMgZCd1biBww614ZWwgZW4gdG90cyBlbHMgc2VjdG9ycyBkZSBsJ2ludGVydmFsLjwvbGk+PGxpPjxzdHJvbmc+VmFyaWV0YXQ8L3N0cm9uZz46IGNhbGN1bGEgZWwgbm9tYnJlIGRlIHZhbG9ycyDDum5pY3MgZCd1biBww614ZWwgZW4gdG90cyBlbHMgc2VjdG9ycyBkZSBsJ2ludGVydmFsLjwvbGk+PC91bD48cD5Ub3RlcyBsZXMgb3BjaW9ucyB0ZW5lbiBhIG3DqXMgdW5hIGFsdHJhIG9wY2nDsyBlcXVpdmFsZW50IGFtYiBJZ25vcmEgZWxzIGVsZW1lbnRzIE5vRGF0YSwgcXVlIGVmZWN0dWEgbCdvcGVyYWNpw7MgbWF0ZW3DoHRpY2EgcGVyIGEgdG90cyBlbHMgcMOteGVscyB2w6BsaWRzIGRlIGxhIGRpbWVuc2nDsyBpIGlnbm9yYSBlbHMgcMOteGVscyBOb0RhdGEuPC9wPlwiLFxuXHRcIkBAQWdncmVnYXRlLU11bHRpZGltZW5zaW9uYWxfcmFuZ2VzX3RhZzBAQFwiOiBcIjxwPkVscyByYW5ncyBkZSBsJ2ludGVydmFsIGVzcGVjaWZpY2F0cyBlbiB1bmEgdGF1bGEgcyd1dGlsaXR6ZW4gcGVyIGFncmVnYXIgZ3J1cHMgZGUgdmFsb3JzLiBFbHMgdmFsb3JzIG3DrW5pbSBpIG3DoHhpbSBlc3BlY2lmaXF1ZW4gbCdpbnRlcnZhbCBxdWUgcydpbmNsb3Vyw6AuPC9wPjxwPkFxdWVzdCBwYXLDoG1ldHJlIMOpcyBvYmxpZ2F0b3JpIHF1YW4gZWwgcGFyw6BtZXRyZTxzdHJvbmc+VGlwdXM8L3N0cm9uZz5zJ2VzdGFibGVpeCBlbjxzdHJvbmc+UmFuZ3MgZGUgbCdpbnRlcnZhbDwvc3Ryb25nPi48L3A+XCIsXG5cdFwiQEBBZ2dyZWdhdGUtTXVsdGlkaW1lbnNpb25hbF9yYXN0ZXJfdGFnMEBAXCI6IFwiPHA+UsOgc3RlciBtdWx0aWRpbWVuc2lvbmFsIGQnZW50cmFkYS48L3A+XCIsXG5cdFwiQEBBZ2dyZWdhdGUtTXVsdGlkaW1lbnNpb25hbF90eXBlX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgbCdpbnRlcnZhbCBkZSBkaW1lbnNpb25zIHBlciBhbCBxdWFsIHMnYWdyZWdhcmFuIGxlcyBkYWRlcy48L3A+PHVsPjxsaT48c3Ryb25nPlRvdHM8L3N0cm9uZz46IGxlcyBkYWRlcyBkZSBsYSB2YXJpYWJsZSBzJ2FncmVnYXJhbiBlbiB0b3RzIGVscyBzZWN0b3JzLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT48c3Ryb25nPlBhcmF1bGEgY2xhdSBkZSBsJ2ludGVydmFsPC9zdHJvbmc+OiBsZXMgZGFkZXMgZGUgbGEgdmFyaWFibGUgcydhZ3JlZ2FyYW4gYW1iIHVuIGludGVydmFsIGNvbmVndXQgY29tdW5hbWVudC48L2xpPjxsaT48c3Ryb25nPlZhbG9yIGRlIGwnaW50ZXJ2YWw8L3N0cm9uZz46IGxlcyBkYWRlcyBkZSBsYSB2YXJpYWJsZSBzJ2FncmVnYXJhbiBhbWIgdW4gaW50ZXJ2YWwgaSB1bmEgdW5pdGF0IGVzcGVjaWZpY2F0cyBwZXIgbCd1c3VhcmkuPC9saT48bGk+PHN0cm9uZz5SYW5ncyBkZSBsJ2ludGVydmFsPC9zdHJvbmc+OiBsZXMgZGFkZXMgZGUgbGEgdmFyaWFibGUgcydhZ3JlZ2FyYW4gZW50cmUgcGFyZWxscyBkZSB2YWxvcnMgbyBkYXRlcyBlc3BlY2lmaWNhdHMuPC9saT48L3VsPlwiLFxuXHRcIkBAQWdncmVnYXRlLU11bHRpZGltZW5zaW9uYWxfdmFsdWVpbnRlcnZhbF90YWcwQEBcIjogXCI8cD5NaWRhIGRlIGwnaW50ZXJ2YWwgcXVlIHMndXRpbGl0emFyw6AgcGVyIGEgbCdhZ3JlZ2FjacOzLjwvcD48cD5BcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGVsIHBhcsOgbWV0cmU8c3Ryb25nPlRpcHVzPC9zdHJvbmc+cydlc3RhYmxlaXggZW48c3Ryb25nPlZhbG9yIGRlIGwnaW50ZXJ2YWw8L3N0cm9uZz4uPC9wPlwiLFxuXHRcIkBAQWdncmVnYXRlLU11bHRpZGltZW5zaW9uYWxfdmFsdWVzX3RhZzBAQFwiOiBcIjxwPlZhbG9ycyBkZSBsYSBkaW1lbnNpw7MgcXVlIHMndXRpbGl0emFyYW4gcGVyIGZpbHRyYXIgbGVzIGRhZGVzIG11bHRpZGltZW5zaW9uYWxzIGludHJvZHXDr2RlcyBwZXIgYSBsJ2Fuw6BsaXNpLiBBcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGVsIHBhcsOgbWV0cmU8c3Ryb25nPkRlZmluaWNpw7MgZGUgbGEgZGltZW5zacOzPC9zdHJvbmc+cydlc3RhYmxlaXggZW48c3Ryb25nPlBlciB2YWxvcnM8L3N0cm9uZz4uPC9wPlwiLFxuXHRcIkBAQWdncmVnYXRlLU11bHRpZGltZW5zaW9uYWxfdmFyaWFibGVzX3RhZzBAQFwiOiBcIjxwPlZhcmlhYmxlIG8gdmFyaWFibGVzIHF1ZSBzJ2FncmVnYXJhbiBhIGxhIGRpbWVuc2nDsyBlc3BlY2lmaWNhZGEuPC9wPlwiLFxuXHRcIkBAUHJlZGljdC1Vc2luZy1SZWdyZXNzaW9uX2lucHV0ZGVmaW5pdGlvbmZpbGVfdGFnMEBAXCI6IFwiPHA+RWwgZml0eGVyIGRlIGRlZmluaWNpw7MgZGUgcmVncmVzc2nDsyBk4oCZZW50cmFkYSBFc3JpICg8c3Ryb25nPi5lY2Q8L3N0cm9uZz4pIHF1ZSBjb250w6kgbGVzIGVzdGFkw61zdGlxdWVzIGkgbGEgaW5mb3JtYWNpw7MgZGVsIGNvbmp1bnQgZGUgZGFkZXMgZXNwZWPDrWZpYywgZWwgbW9kZWwgZGUgcmVncmVzc2nDsyBpIGVscyBhdHJpYnV0cyBlc2NvbGxpdHMuPC9wPlwiLFxuXHRcIkBAUHJlZGljdC1Vc2luZy1SZWdyZXNzaW9uX3Jhc3RlcnNfdGFnMEBAXCI6IFwiPHA+RWwgY29uanVudCBvIGNvbmp1bnRzIGRlIGRhZGVzIGRlIGRhZGVzIHLDoHN0ZXIgcXVlIHJlcHJlc2VudGVuIGxlcyB2YXJpYWJsZXMgcHJlZGljdG9yZXMuIFBvdCBzZXIgdW4gcsOgc3RlciBkZSBiYW5kYSDDum5pY2EsIHLDoHN0ZXIgZGUgYmFuZGVzIG3Dumx0aXBsZXMsIHLDoHN0ZXIgbXVsdGlkaW1lbnNpb25hbCwgY29uanVudCBkZSBkYWRlcyBkZSBtb3NhaWMgbyB1bmEgY29swrdsZWNjacOzIGRlIHLDoHN0ZXJzLjwvcD5cIixcblx0XCJAQENlbGwtU3RhdGlzdGljc19vcGVyYXRpb25fdGFnMEBAXCI6IFwiPHA+VGlwdXMgZGUgY8OgbGN1bCBlc3RhZMOtc3RpYyBxdWUgdm9sZXUgZHVyIGEgdGVybWUuPC9wPjxwPkxlcyBlc3RhZMOtc3RpcXVlcyBkaXNwb25pYmxlcyBzw7NuPHN0cm9uZz5NYWpvcmlhPC9zdHJvbmc+LDxzdHJvbmc+TcOgeGltPC9zdHJvbmc+LDxzdHJvbmc+TWl0amFuYTwvc3Ryb25nPiw8c3Ryb25nPk1lZGlhbmE8L3N0cm9uZz4sPHN0cm9uZz5Nw61uaW08L3N0cm9uZz4sPHN0cm9uZz5NaW5vcmlhPC9zdHJvbmc+LDxzdHJvbmc+UGVyY2VudGlsPC9zdHJvbmc+LDxzdHJvbmc+SW50ZXJ2YWw8L3N0cm9uZz4sPHN0cm9uZz5EZXN2aWFjacOzIGVzdMOgbmRhcmQ8L3N0cm9uZz4sPHN0cm9uZz5TdW1hPC9zdHJvbmc+IGk8c3Ryb25nPlZhcmlldGF0PC9zdHJvbmc+LjwvcD48cD5FbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgPHN0cm9uZz5NaXRqYW5hPC9zdHJvbmc+LjwvcD5cIixcblx0XCJAQENvbG9ybWFwLVRvLVJHQl9yYW5kb21seWFzc2lnbmNvbG9ydG91bm1hcHBlZHBpeGVsc190YWcwQEBcIjogXCI8cD5TJ2Fzc2lnbmVuIGNvbG9ycyBkZSBtYW5lcmEgYWxlYXTDsnJpYSBhbHMgcMOteGVscyBxdWUgbm8gcydpbmNsb3VlbiBhbCBtYXBhIGRlIGNvbG9yLjwvcD48dWw+PGxpPkRlc2FjdGl2YXQ6IG5vIHMnYXNzaWduYSBjYXAgY29sb3IgYWxzIHDDrXhlbHMgc2Vuc2UgYXNzaWduYXIuIEFxdWVzdCDDqXMgZWwgdmFsb3IgcGVyIGRlZmVjdGUuPC9saT48bGk+QWN0aXZhdDogcydhc3NpZ25hIHVuIGNvbG9yIGFscyBww614ZWxzIHNlbnNlIGFzc2lnbmFyLjwvbGk+PC91bD5cIixcblx0XCJAQFBhbnNoYXJwZW5fc2Vuc29yX3RhZzBAQFwiOiBcIjxwPlNpIGVzIHRyaWEgbCdhbGdvcml0bWUgZGUgR3JhbS1TY2htaWR0LCB0YW1iw6kgcG9kZXUgZXNwZWNpZmljYXIgZWwgc2Vuc29yIHF1ZSBoYSByZWNvcGlsYXQgbCdlbnRyYWRhIGRlIHLDoHN0ZXIgbXVsdGliYW5kYS4gRW4gdHJpYXIgZWwgdGlwdXMgZGUgc2Vuc29yIGVzIGRlZmluaXJhbiBlbHMgcGVzb3MgZGUgbGVzIGJhbmRlcyBhZGVxdWF0cy48L3A+XCIsXG5cdFwiQEBEaW1lbnNpb25hbC1Nb3ZpbmctU3RhdGlzdGljc19iYWNrd2FyZHdpbmRvd190YWcwQEBcIjogXCI8cD5WYWxvciBxdWUgaW5kaWNhIHF1YW50cyBzZWN0b3JzIGEgZGFsdCBvIGFiYW5zIHMnaW5jbG91cmFuIGEgbGEgZmluZXN0cmEgZGVmaW5pZGEuIEVsIHZhbG9yIGhhIGRlIHNlciB1biBlbnRlciBwb3NpdGl1IGVudHJlIDEgaSAxMDAuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAxLjwvcD48cD5MYSB1bml0YXQgZCdhcXVlc3QgcGFyw6BtZXRyZSDDqXMgU2VjdG9yLjwvcD5cIixcblx0XCJAQERpbWVuc2lvbmFsLU1vdmluZy1TdGF0aXN0aWNzX2NpcmN1bGFyd3JhcHZhbHVlX3RhZzBAQFwiOiBcIjxwPlZhbG9yIHF1ZSBlcyBmYXLDoCBzZXJ2aXIgcGVyIGFycm9kb25pciB1biB2YWxvciBsaW5lYWwgYSBsJ2ludGVydmFsIGQndW5hIG1pdGphbmEgY2lyY3VsYXIgZGV0ZXJtaW5hZGEuPC9wPjxwPkVsIHZhbG9yIGhhIGRlIHNlciBwb3NpdGl1LiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgMzYwIGdyYXVzLjwvcD5cIixcblx0XCJAQERpbWVuc2lvbmFsLU1vdmluZy1TdGF0aXN0aWNzX2RpbWVuc2lvbl90YWcwQEBcIjogXCI8cD5Ob20gZGUgbGEgZGltZW5zacOzIGVuIGxhIHF1YWwgZXMgbW91csOgIGxhIGZpbmVzdHJhLjwvcD48cD5FbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgbGEgcHJpbWVyYSBkaW1lbnNpw7MgYSBwYXJ0IGQneCx5IHF1ZSBlcyB0cm9iYSBhbCByw6BzdGVyIG11bHRpZGltZW5zaW9uYWwgZCdlbnRyYWRhLjwvcD5cIixcblx0XCJAQERpbWVuc2lvbmFsLU1vdmluZy1TdGF0aXN0aWNzX2ZvcndhcmR3aW5kb3dfdGFnMEBAXCI6IFwiPHA+VmFsb3IgcXVlIGluZGljYSBxdWFudHMgc2VjdG9ycyBkZXNwcsOpcyBvIHBlciBzb3RhIHMnaW5jbG91cmFuIGEgbGEgZmluZXN0cmEgZGVmaW5pZGEuIEVsIHZhbG9yIGhhIGRlIHNlciB1biBlbnRlciBwb3NpdGl1IGVudHJlIDEgaSAxMDAuIEVsIHZhbG9yIHBlciBkZWZlY3RlIMOpcyAxLjwvcD48cD5MYSB1bml0YXQgZCdhcXVlc3QgcGFyw6BtZXRyZSDDqXMgU2VjdG9yLjwvcD5cIixcblx0XCJAQERpbWVuc2lvbmFsLU1vdmluZy1TdGF0aXN0aWNzX2lucHV0cmFzdGVyX3RhZzBAQFwiOiBcIjxwPkVsIHLDoHN0ZXIgZCdlbnRyYWRhIG5vbcOpcyBwb3Qgc2VyIHVuIHLDoHN0ZXIgbXVsdGltZW5zaW9uYWwgZW4gZm9ybWF0IGRlIHLDoHN0ZXIgZGUgbsO6dm9sIChmaXR4ZXIgPHN0cm9uZz4uY3JmPC9zdHJvbmc+KS48L3A+XCIsXG5cdFwiQEBEaW1lbnNpb25hbC1Nb3ZpbmctU3RhdGlzdGljc19ub2RhdGFoYW5kbGluZ190YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIGNvbSBlbCBjw6BsY3VsIGVzdGFkw61zdGljIGdlc3Rpb25hcsOgIGVscyB2YWxvcnMgTm9EYXRhLjwvcD48dWw+PGxpPjxzdHJvbmc+RGFkZXM8L3N0cm9uZz46IGVscyB2YWxvcnMgTm9EYXRhIGRlIGwnZW50cmFkYSBkZSB2YWxvcnMgcydpZ25vcmFyYW4gYWxzIHJlc3VsdGF0cyBkZSBsYSBmaW5lc3RyYSBkZWZpbmlkYSBlbiBxdcOoIGVzIHRyb2Jpbi4gQXF1ZXN0IMOpcyBlbCB2YWxvciBwZXIgZGVmZWN0ZS48L2xpPjxsaT48c3Ryb25nPk5vRGF0YTwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBzb3J0aWRhIHNlcmFuIE5vRGF0YSBzaSBoaSBoYSB2YWxvcnMgTm9EYXRhIGEgbCdlbnRyYWRhIGRpbnMgZGUgbGEgZmluZXN0cmEgZGVmaW5pZGEuPC9saT48bGk+PHN0cm9uZz5FbXBsZW5hIE5vRGF0YTwvc3Ryb25nPjogZWxzIHZhbG9ycyBkZSBjZWzCt2xhIE5vRGF0YSBzZSBzdWJzdGl0dWlyYW4gbWl0amFuw6dhbnQgbCdlc3RhZMOtc3RpY2Egc2VsZWNjaW9uYWRhIGRpbnMgZGUgbGEgZmluZXN0cmEgZGVmaW5pZGEuPC9saT48L3VsPlwiLFxuXHRcIkBARGltZW5zaW9uYWwtTW92aW5nLVN0YXRpc3RpY3NfcGVyY2VudGlsZWludGVycG9sYXRpb250eXBlX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgZWwgbcOodG9kZSBkJ2ludGVycG9sYWNpw7MgcXVlIGVzIGZhcsOgIHNlcnZpciBxdWFuIGVsIHZhbG9yIGRlIHBlcmNlbnRpbCBlc3RpZ3VpIGVudHJlIGRvcyB2YWxvcnMgZGUgY2VswrdsYS48L3A+PHVsPjxsaT48c3Ryb25nPkRldGVjdGEgYXV0b23DoHRpY2FtZW50PC9zdHJvbmc+OiBzaSBlbCByw6BzdGVyIGQnZW50cmFkYSDDqXMgZGUgdGlwdXMgZGUgcMOteGVsIGVudGVyLCBzJ3V0aWxpdHphcsOgIGVsIG3DqHRvZGUgPHN0cm9uZz5Nw6lzIHByb3Blcjwvc3Ryb25nPi4gU2kgZWwgcsOgc3RlciBkJ2VudHJhZGEgw6lzIGRlIHRpcHVzIGRlIHDDrXhlbCBmbG90YW50LCBlcyBmYXLDoCBzZXJ2aXIgZWwgbcOodG9kZTxzdHJvbmc+TGluZWFsPC9zdHJvbmc+LiBBcXVlc3Qgw6lzIGVsIHZhbG9yIHBlciBkZWZlY3RlLjwvbGk+PGxpPjxzdHJvbmc+TcOpcyBwcm9wZXI8L3N0cm9uZz46IGVzIGZhcsOgIHNlcnZpciBlbCB2YWxvciBkaXNwb25pYmxlIG3DqXMgcHJvcGVyIGFsIHBlcmNlbnRpbC4gRW4gYXF1ZXN0IGNhcywgZWwgdGlwdXMgZGUgcMOteGVsIGRlIHNvcnRpZGEgc2Vyw6AgZWwgbWF0ZWl4IHF1ZSBlbCBkZWwgcsOgc3RlciBkZSB2YWxvciBkJ2VudHJhZGEuPC9saT48bGk+PHN0cm9uZz5MaW5lYWw8L3N0cm9uZz46IGVzIGZhcsOgIHNlcnZpciBsYSBtaXRqYW5hIHBvbmRlcmFkYSBkZWxzIGRvcyB2YWxvcnMgY2lyY3VtZGFudHMgZGVsIHBlcmNlbnRpbC4gRW4gYXF1ZXN0IGNhcywgZWwgdGlwdXMgZGUgcMOteGVsIGRlIHNvcnRpZGEgc2Vyw6AgZGUgcHVudCBmbG90YW50LjwvbGk+PC91bD5cIixcblx0XCJAQERpbWVuc2lvbmFsLU1vdmluZy1TdGF0aXN0aWNzX3BlcmNlbnRpbGV2YWx1ZV90YWcwQEBcIjogXCI8cD5QZXJjZW50aWwgcXVlIGVzIGNhbGN1bGFyw6AgcXVhbjxzdHJvbmc+UGVyY2VudGlsPC9zdHJvbmc+cydoYWdpIHNlbGVjY2lvbmF0IGNvbSBhIHRpcHVzIGQnZXN0YWTDrXN0aWNhLiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgOTAsIHBlciBhbCBwZXJjZW50aWwgOTAuPC9wPjxwPkVscyB2YWxvcnMgcG9kZW4gc2VyIGRlIDAgYSAxMDAuIEVsIHBlcmNlbnRpbCAwIMOpcyBiw6BzaWNhbWVudCBlcXVpdmFsZW50IGEgbCdlc3RhZMOtc3RpY2EgbcOtbmltYSBpIGVsIHBlcmNlbnRpbCAxMDAgZXF1aXZhbCBhIGwnZXN0YWTDrXN0aWNhIG3DoHhpbWEsIGFtYiBsJ2V4Y2VwY2nDsyBxdWUgZWwgcmVzdWx0YXQgc2Vyw6AgZGUgdGlwdXMgcHVudCBmbG90YW50LiBVbiB2YWxvciBkZSA1MCBwcm9kdWlyw6AgZWwgbWF0ZWl4IHJlc3VsdGF0IHF1ZSBsJ2VzdGFkw61zdGljYSBtZWRpYW5hLjwvcD5cIixcblx0XCJAQERpbWVuc2lvbmFsLU1vdmluZy1TdGF0aXN0aWNzX3N0YXRpc3RpY3N0eXBlX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgZWwgdGlwdXMgZCdlc3RhZMOtc3RpY2EgcXVlIGVzIGNhbGN1bGFyw6AuPC9wPjxwPjwvcD48dWw+PGxpPjxzdHJvbmc+TWl0amFuYTwvc3Ryb25nPjogZXMgY2FsY3VsYXLDoCBsYSBtaXRqYW5hICh2YWxvciBtaXRqw6ApIGRlIGxlcyBjZWzCt2xlcyBkZSBsYSBmaW5lc3RyYSBkZWZpbmlkYS4gQXF1ZXN0IMOpcyBlbCB2YWxvciBwZXIgZGVmZWN0ZS48L2xpPjxsaT48c3Ryb25nPk1pdGphbmEgY2lyY3VsYXI8L3N0cm9uZz46IGVzIGNhbGN1bGFyw6AgbGEgbWl0amFuYSBjaXJjdWxhciBkZSBsZXMgY2VswrdsZXMgZGUgbGEgZmluZXN0cmEgZGVmaW5pZGEuIFF1YW4gc2Ugc2VsZWNjaW9uYSBhcXVlc3QgdGlwdXMgZCdlc3RhZMOtc3RpY2EsIGVsIHBhcsOgbWV0cmU8c3Ryb25nPlZhbG9yIGQnYWp1c3QgY2lyY3VsYXI8L3N0cm9uZz5lc3TDoCBkaXNwb25pYmxlLjwvbGk+PGxpPjxzdHJvbmc+TWFqb3JpYTwvc3Ryb25nPjogcydpZGVudGlmaWNhcsOgIGxhIG1ham9yaWEgKHZhbG9yIHF1ZSBlcyBwcm9kdWVpeCBhbWIgbcOpcyBmcmVxw7zDqG5jaWEpIGRlIGxlcyBjZWzCt2xlcyBkZSBsYSBmaW5lc3RyYSBkZWZpbmlkYS48L2xpPjxsaT48c3Ryb25nPk3DoHhpbTwvc3Ryb25nPjogcydpZGVudGlmaWNhcsOgIGVsIG3DoHhpbSAodmFsb3IgbcOpcyBncmFuKSBkZSBsZXMgY2VswrdsZXMgZGUgbGEgZmluZXN0cmEgZGVmaW5pZGEuPC9saT48bGk+PHN0cm9uZz5NZWRpYW5hPC9zdHJvbmc+OiBzJ2lkZW50aWZpY2Fyw6AgbGEgbWVkaWFuYSBkZSBsZXMgY2VswrdsZXMgZGVsIHZlw69uYXQuPC9saT48bGk+PHN0cm9uZz5Nw61uaW08L3N0cm9uZz46IHMnaWRlbnRpZmljYXLDoCBlbCB2YWxvciBtw61uaW0gKG3DqXMgcGV0aXQpIGRlIGxlcyBjZWzCt2xlcyBkZWwgdmXDr25hdC48L2xpPjxsaT48c3Ryb25nPlBlcmNlbnRpbDwvc3Ryb25nPjogZXMgY2FsY3VsYXLDoCB1biBwZXJjZW50aWwgZGUgbGVzIGNlbMK3bGVzIGRlbCB2ZcOvbmF0LiBRdWFuIHNlIHNlbGVjY2lvbmEgYXF1ZXN0IHRpcHVzIGQnZXN0YWTDrXN0aWNhLCBlbHMgcGFyw6BtZXRyZXM8c3Ryb25nPlZhbG9yIGRlIHBlcmNlbnRpbDwvc3Ryb25nPmk8c3Ryb25nPlRpcHVzIGQnaW50ZXJwb2xhY2nDsyBkZWwgcGVyY2VudGlsPC9zdHJvbmc+ZXN0YW4gZGlzcG9uaWJsZXMuIEZldSBzZXJ2aXIgYXF1ZXN0cyBub3VzIHBhcsOgbWV0cmVzIHBlciBlc3BlY2lmaWNhciBlbCBwZXJjZW50aWwgcXVlIHZvbGV1IGNhbGN1bGFyIGkgdHJpYXIgZWwgdGlwdXMgZCdpbnRlcnBvbGFjacOzIHF1ZSB2b2xldSBmZXIgc2VydmlyLCByZXNwZWN0aXZhbWVudC48L2xpPjwvdWw+XCIsXG5cdFwiQEBJbnRlcnBvbGF0ZS1SYXN0ZXItQnktRGltZW5zaW9uX2RpbWVuc2lvbl90YWcwQEBcIjogXCI8cD5EaW1lbnNpw7MgcXVlIHMndXRpbGl0emFyw6AgcGVyIGEgbGEgaW50ZXJwb2xhY2nDsy48L3A+PHA+QXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlPHN0cm9uZz5EZWZpbmljacOzIGRlIGxhIGRpbWVuc2nDszwvc3Ryb25nPnMnZXN0YWJsZWl4IGVuPHN0cm9uZz5QZXIgaW50ZXJ2YWw8L3N0cm9uZz4uPC9wPlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtUmFzdGVyLUJ5LURpbWVuc2lvbl9kaW1lbnNpb25kZWZpbml0aW9uX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgZWwgbcOodG9kZSBxdWUgZXMgZmFyw6Agc2VydmlyIHBlciBmaWx0cmFyIGxlcyBkYWRlcyBtdWx0aWRpbWVuc2lvbmFscyBkJ2VudHJhZGEgYWJhbnMgZGUgZHVyIGEgdGVybWUgbGEgaW50ZXJwb2xhY2nDsy48L3A+PHVsPjxsaT48c3Ryb25nPlBlciB2YWxvcnM8L3N0cm9uZz46IGxhIGRpbWVuc2nDsyBlcyBkaXZpZGlyw6AgZW4gc2VjdG9ycyB1dGlsaXR6YW50IHVuIHZhbG9yIGRlIGRpbWVuc2nDsyBvIHVuYSBsbGlzdGEgZGUgdmFsb3JzLjwvbGk+PGxpPjxzdHJvbmc+UGVyIGludGVydmFsPC9zdHJvbmc+OiBsYSBkaW1lbnNpw7MgZXMgZGl2aWRpcsOgIGVuIHNlY3RvcnMgdXRpbGl0emFudCB1biBpbnRlcnZhbCBvIHVuYSBsbGlzdGEgZCdpbnRlcnZhbHMuPC9saT48bGk+PHN0cm9uZz5QZXIgcsOgc3RlciBkZSBkZXN0aW5hY2nDszwvc3Ryb25nPjogbGEgZGltZW5zacOzIGVzIGRpdmlkaXLDoCBlbiBzZWN0b3JzIHV0aWxpdHphbnQgdW4gcsOgc3RlciBtdWx0aWRpbWVuc2lvbmFsIGRlIGRlc3RpbmFjacOzIGVzcGVjw61maWMuPC9saT48L3VsPlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtUmFzdGVyLUJ5LURpbWVuc2lvbl9lbmRvZmludGVydmFsX3RhZzBAQFwiOiBcIjxwPkZpbmFsIGRlIGwnaW50ZXJ2YWwsIHF1ZSBlcyBmYSBzZXJ2aXIgcGVyIGl0ZXJhciBhbCBkYXRhc2V0LjwvcD48cD5BcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGVsIHBhcsOgbWV0cmU8c3Ryb25nPkRlZmluaWNpw7MgZGUgbGEgZGltZW5zacOzPC9zdHJvbmc+cydlc3RhYmxlaXggZW48c3Ryb25nPlBlciBpbnRlcnZhbDwvc3Ryb25nPi48L3A+XCIsXG5cdFwiQEBJbnRlcnBvbGF0ZS1SYXN0ZXItQnktRGltZW5zaW9uX2lnbm9yZW5vZGF0YV90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIHNpIGVscyB2YWxvcnMgTm9EYXRhIHMnaWdub3JhcmFuIGEgbCdhbsOgbGlzaS48L3A+PHVsPjxsaT5EZXNhY3RpdmF0OiBsJ2Fuw6BsaXNpIHRpbmRyw6AgY29tIGEgcmVzdWx0YXQgTm9EYXRhIHNpIGhpIGhhIHZhbG9ycyBOb0RhdGEgYWxzIHNlY3RvcnMgYWRqYWNlbnRzLiBBcXVlc3Qgw6lzIGVsIHZhbG9yIHBlciBkZWZlY3RlLjwvbGk+PGxpPkFjdGl2YXQ6IGwnYW7DoGxpc2kgbm9tw6lzIGZhcsOgIHNlcnZpciBzZWN0b3JzIHF1ZSB0aW5ndWluIHDDrXhlbHMgdsOgbGlkcyBpIGlnbm9yYXLDoCBlbHMgc2VjdG9ycyBOb0RhdGEuPC9saT48L3VsPlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtUmFzdGVyLUJ5LURpbWVuc2lvbl9pbnRlcnBvbGF0aW9ubWV0aG9kX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgZWwgbcOodG9kZSBxdWUgZXMgZmFyw6Agc2VydmlyIHBlciBpbnRlcnBvbGFyIGVsIHLDoHN0ZXIuPC9wPjx1bD48bGk+PHN0cm9uZz5MaW5lYWw8L3N0cm9uZz46IGxhIHNvcnRpZGEgcydpbnRlcnBvbGFyw6AgbGluZWFsbWVudCBtaXRqYW7Dp2FudCBlbHMgc2VjdG9ycyBhZGphY2VudHMuIEFxdWVzdCDDqXMgZWwgdmFsb3IgcGVyIGRlZmVjdGUuPC9saT48bGk+PHN0cm9uZz5WZcOtIG3DqXMgcHJvcGVyPC9zdHJvbmc+OiBsYSBzb3J0aWRhIGZhcsOgIHNlcnZpciBlbCBzZWN0b3IgYWRqYWNlbnQgbcOpcyBwcm9wZXIuPC9saT48L3VsPlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtUmFzdGVyLUJ5LURpbWVuc2lvbl9yYXN0ZXJfdGFnMEBAXCI6IFwiPHA+UsOgc3RlciBtdWx0aWRpbWVuc2lvbmFsIGQnZW50cmFkYS48L3A+XCIsXG5cdFwiQEBJbnRlcnBvbGF0ZS1SYXN0ZXItQnktRGltZW5zaW9uX3N0YXJ0b2ZpbnRlcnZhbF90YWcwQEBcIjogXCI8cD5JbmljaSBkZSBsJ2ludGVydmFsLCBxdWUgZXMgZmEgc2VydmlyIHBlciBpdGVyYXIgYWwgZGF0YXNldC48L3A+PHA+QXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlPHN0cm9uZz5EZWZpbmljacOzIGRlIGxhIGRpbWVuc2nDszwvc3Ryb25nPnMnZXN0YWJsZWl4IGVuPHN0cm9uZz5QZXIgaW50ZXJ2YWw8L3N0cm9uZz4uPC9wPlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtUmFzdGVyLUJ5LURpbWVuc2lvbl9zdGVwX3RhZzBAQFwiOiBcIjxwPkZyZXHDvMOobmNpYSBhbWIgcXXDqCBzJ2ludGVycG9sYXJhbiBsZXMgZGFkZXMuPC9wPjxwPkFxdWVzdCBwYXLDoG1ldHJlIMOpcyBvYmxpZ2F0b3JpIHF1YW4gZWwgcGFyw6BtZXRyZTxzdHJvbmc+RGVmaW5pY2nDsyBkZSBsYSBkaW1lbnNpw7M8L3N0cm9uZz5zJ2VzdGFibGVpeCBlbjxzdHJvbmc+UGVyIGludGVydmFsPC9zdHJvbmc+LjwvcD5cIixcblx0XCJAQEludGVycG9sYXRlLVJhc3Rlci1CeS1EaW1lbnNpb25fdGFyZ2V0cmFzdGVyX3RhZzBAQFwiOiBcIjxwPlLDoHN0ZXIgZGUgZGVzdGluYWNpw7MgZXNwZWNpZmljYXQgcGVyIGxhIGRlZmluaWNpw7MgZGUgbGEgZGltZW5zacOzLjwvcD48cD5BcXVlc3QgcGFyw6BtZXRyZSDDqXMgb2JsaWdhdG9yaSBxdWFuIGVsIHBhcsOgbWV0cmU8c3Ryb25nPkRlZmluaWNpw7MgZGUgbGEgZGltZW5zacOzPC9zdHJvbmc+cydlc3RhYmxlaXggZW48c3Ryb25nPlBlciByw6BzdGVyIGRlIGRlc3RpbmFjacOzPC9zdHJvbmc+LjwvcD5cIixcblx0XCJAQEludGVycG9sYXRlLVJhc3Rlci1CeS1EaW1lbnNpb25fdW5pdF90YWcwQEBcIjogXCI8cD5Vbml0YXQgZGUgbCdpbnRlcnZhbC48L3A+PHA+QXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlPHN0cm9uZz5EZWZpbmljacOzIGRlIGxhIGRpbWVuc2nDszwvc3Ryb25nPnMnZXN0YWJsZWl4IGVuPHN0cm9uZz5QZXIgaW50ZXJ2YWw8L3N0cm9uZz4uPC9wPlwiLFxuXHRcIkBASW50ZXJwb2xhdGUtUmFzdGVyLUJ5LURpbWVuc2lvbl92YWx1ZXNfdGFnMEBAXCI6IFwiPHA+VmFsb3JzIGRpbWVuc2lvbmFscyBxdWUgZXMgZmFyYW4gc2VydmlyIHBlciBmaWx0cmFyIGxlcyBkYWRlcyBtdWx0aWRpbWVuc2lvbmFscyBkJ2VudHJhZGEgcGVyIGEgbCdhbsOgbGlzaS48L3A+PHA+QXF1ZXN0IHBhcsOgbWV0cmUgw6lzIG9ibGlnYXRvcmkgcXVhbiBlbCBwYXLDoG1ldHJlPHN0cm9uZz5EZWZpbmljacOzIGRlIGxhIGRpbWVuc2nDszwvc3Ryb25nPnMnZXN0YWJsZWl4IGVuPHN0cm9uZz5QZXIgdmFsb3JzPC9zdHJvbmc+LjwvcD5cIixcblx0XCJAQEludGVycG9sYXRlLVJhc3Rlci1CeS1EaW1lbnNpb25fdmFyaWFibGVzX3RhZzBAQFwiOiBcIjxwPlZhcmlhYmxlIG8gdmFyaWFibGVzIHF1ZSBpbnRlcnBvbGFyw6AgbGEgZGVmaW5pY2nDsyBkZSBsYSBkaW1lbnNpw7MuPC9wPlwiLFxuXHRcIkBAVGVycmFpbi1GbGF0dGVuX2NhbGlicmF0aW9udHlwZV90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIHNpIGxhIHNvcnRpZGEgc2Vyw6AgdW4gdGVycmVueSBhcGxhbmF0IG1pdGphbsOnYW50IDxzdHJvbmc+U2lnbWEgemVybzwvc3Ryb25nPiBvIDxzdHJvbmc+R2FtbWEgemVybzwvc3Ryb25nPi48L3A+PHVsPjxsaT48c3Ryb25nPkdhbW1hIHplcm88L3N0cm9uZz46IGxhIHJldHJvZGlzcGVyc2nDsyBiZXRhIHplcm8gZXMgbm9ybWFsaXR6YXLDoCBtaXRqYW7Dp2FudCBsJ8OgcmVhIGQndW5pdGF0IGQndW4gbml2ZWxsIGxvY2FsbWVudCB0YW5nZW50IGEgREVNLCBxdWUgc2Ugc29sIGNvbsOoaXhlciBjb20gYSBhbmdsZSBkJ2luY2lkw6huY2lhIGxvY2FsLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT48c3Ryb25nPlNpZ21hIHplcm88L3N0cm9uZz46IHMndXRpbGl0emFyw6AgdW4gREVNIHBlciBjYWxjdWxhciBsJ8OgcmVhIHBlciBub3JtYWxpdHphciBsYSByZXRyb2Rpc3BlcnNpw7MuPC9saT48L3VsPlwiLFxuXHRcIkBAVGVycmFpbi1GbGF0dGVuX2RlbV90YWcwQEBcIjogXCI8cD5ERU0gZCdlbnRyYWRhLjwvcD48cD5FbCBERU0gcyd1dGlsaXR6YSBwZXIgZXN0aW1hciBsJ8OgcmVhIGlswrdsdW1pbmFkYSBsb2NhbC48L3A+XCIsXG5cdFwiQEBUZXJyYWluLUZsYXR0ZW5fZ2VvaWRfdGFnMEBAXCI6IFwiPHA+RXNwZWNpZmljYSBzaSBlbCBzaXN0ZW1hIGRlIHJlZmVyw6huY2lhIHZlcnRpY2FsIGRlbCBERU0gZXMgdHJhbnNmb3JtYXLDoCBlbiB1bmEgYWzDp2FkYSBlbMK3bGlwc29pZGFsLiBBdMOocyBxdWUgc2Ugc29sIGZlciByZWZlcsOobmNpYSBhIGxhIG1ham9yaWEgZGVscyBkYXRhc2V0cyBkJ2VsZXZhY2nDsyBhIGwnYWx0aXR1ZCBvcnRvbcOodHJpY2EgZGVsIG5pdmVsbCBkZWwgbWFyLCBlbiBhcXVlc3RzIGNhc29zIGNhbCBmZXIgbGEgY29udmVyc2nDsyBhIHVuYSBhbHRpdHVkIGVswrdsaXBzb2lkYWwuPC9wPjx1bD48bGk+T3BjacOzIHNlbGVjY2lvbmFkYTogZXMgZmFyw6AgdW5hIGNvcnJlY2Npw7MgZGUgZ2VvaWRlIHBlciBjb252ZXJ0aXIgbCdhbHRpdHVkIG9ydG9tw6h0cmljYSBlbiBhbHRpdHVkIGVswrdsaXBzb2lkYWwgKGJhc2FkYSBlbiBlbCBnZW9pZGUgRUdNOTYpLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT5PcGNpw7Mgbm8gc2VsZWNjaW9uYWRhOiBubyBlcyBmYXLDoCBjYXAgY29ycmVjY2nDsyBkZSBnZW9pZGUuIFV0aWxpdHpldSBhcXVlc3RhIG9wY2nDsyBub23DqXMgc2kgZWwgREVNIHMnZXhwcmVzc2EgZW4gYWx0aXR1ZCBlbMK3bGlwc29pZGFsLjwvbGk+PC91bD5cIixcblx0XCJAQFRlcnJhaW4tRmxhdHRlbl9yYXN0ZXJfdGFnMEBAXCI6IFwiPHA+RGFkZXMgZGVsIHJhZGFyIGQnZW50cmFkYS48L3A+PHA+RW4gcHJpbWVyIGxsb2MgY2FsIGNhbGlicmFyIHJhZGlvbcOodHJpY2FtZW50IGFxdWVzdCByw6BzdGVyIGEgYmV0YSB6ZXJvLjwvcD5cIixcblx0XCJAQENyZWF0ZS1Db2xvci1Db21wb3NpdGVfYmx1ZWV4cHJlc3Npb25fdGFnMEBAXCI6IFwiPHA+Q8OgbGN1bCBhc3NpZ25hdCBhIGxhIHRlcmNlcmEgYmFuZGEuPC9wPjxwPk5vbSBkZSBiYW5kYSwgSWQuIGRlIGJhbmRhIG8gZXhwcmVzc2nDsyBhbGdlYnJhaWNhIHF1ZSB1dGlsaXR6YSBsZXMgYmFuZGVzLjwvcD48cD5MZXMgb3BlcmFkb3JzIGFkbWVzb3Mgc8OzbiB1bmFyaXM6IHN1bWEgKCspLCByZXN0YSAoLSksIG11bHRpcGxpY2FjacOzICgqKSBpIGRpdmlzacOzICgvKS48L3A+XCIsXG5cdFwiQEBDcmVhdGUtQ29sb3ItQ29tcG9zaXRlX2dyZWVuZXhwcmVzc2lvbl90YWcwQEBcIjogXCI8cD5Dw6BsY3VsIGFzc2lnbmF0IGEgbGEgc2Vnb25hIGJhbmRhLjwvcD48cD5Ob20gZGUgYmFuZGEsIElkLiBkZSBiYW5kYSBvIGV4cHJlc3Npw7MgYWxnZWJyYWljYSBxdWUgdXRpbGl0emEgbGVzIGJhbmRlcy48L3A+PHA+RWxzIG9wZXJhZG9ycyBhZG1lc29zIHPDs24gdW5hcmlzOiBzdW1hICgrKSwgcmVzdGEgKC0pLCBtdWx0aXBsaWNhY2nDsyAoKikgaSBkaXZpc2nDsyAoLykuPC9wPlwiLFxuXHRcIkBAQ3JlYXRlLUNvbG9yLUNvbXBvc2l0ZV9pbnB1dHJhc3Rlcl90YWcwQEBcIjogXCI8cD5EYWRlcyBkZSByw6BzdGVyIG11bHRpYmFuZGEgZCdlbnRyYWRhLjwvcD5cIixcblx0XCJAQENyZWF0ZS1Db2xvci1Db21wb3NpdGVfbWV0aG9kX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgZWwgbcOodG9kZSBxdWUgcyd1dGlsaXR6YXLDoCBwZXIgZXh0cmV1cmUgYmFuZGVzLjwvcD48dWw+PGxpPk5vbXMgZGUgYmFuZGE6IC1zJ3V0aWxpdHphcsOgIGVsIG5vbSBkZSBiYW5kYSBxdWUgcmVwcmVzZW50YSBsJ2ludGVydmFsIGRlIGxvbmdpdHVkIGQnb25hIGEgbCdlc3BlY3RyZSBlbGVjdHJvbWFnbsOodGljIChwZXIgZXhlbXBsZSwgdmVybWVsbCwgaW5mcmFyb2lnIHByb3BlciBvIGluZnJhcm9pZyB0w6hybWljKSBvIGxhIHBvbGFyaXR6YWNpw7MgKHBlciBleGVtcGxlLCBWSCwgVlYsIEhIIG8gSFYpLiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT5JZC4gZGUgYmFuZGE6IHMndXRpbGl0emFyw6AgZWwgbsO6bWVybyBkZSBiYW5kYSAocGVyIGV4ZW1wbGUsIEIxLCBCMiBvIEIzKS48L2xpPjwvdWw+XCIsXG5cdFwiQEBDcmVhdGUtQ29sb3ItQ29tcG9zaXRlX3JlZGV4cHJlc3Npb25fdGFnMEBAXCI6IFwiPHA+Q8OgbGN1bCBhc3NpZ25hdCBhIGxhIHByaW1lcmEgYmFuZGEuPC9wPjxwPk5vbSBkZSBiYW5kYSwgSWQuIGRlIGJhbmRhIG8gZXhwcmVzc2nDsyBhbGdlYnJhaWNhIHF1ZSB1dGlsaXR6YSBsZXMgYmFuZGVzLjwvcD48cD5FbHMgb3BlcmFkb3JzIGFkbWVzb3Mgc8OzbiB1bmFyaXM6IHN1bWEgKCspLCByZXN0YSAoLSksIG11bHRpcGxpY2FjacOzICgqKSBpIGRpdmlzacOzICgvKS48L3A+XCIsXG5cdFwiQEBTdXJmYWNlLVBhcmFtZXRlcnNfbG9jYWxzdXJmYWNldHlwZV90YWcwQEBcIjogXCI8cD5UcmlldSBlbCB0aXB1cyBkZSBmdW5jacOzIGRlIHN1cGVyZsOtY2llIHF1ZSBzJ2FqdXN0YXLDoCBhbCB2b2x0YW50IGRlIGxhIGNlbMK3bGEgZGUgZGVzdGluYWNpw7MuPC9wPjx1bD48bGk+UXVhZHLDoHRpY2E6IHMnYWp1c3RhcsOgIHVuYSBmdW5jacOzIGRlIHN1cGVyZsOtY2llIHF1YWRyw6B0aWNhIGEgbGVzIGNlbMK3bGVzIGRlbCB2ZcOvbmF0LiBBcXVlc3Qgw6lzIGVsIHRpcHVzIHBlciBkZWZlY3RlLjwvbGk+PGxpPkJpcXVhZHLDoHRpY2E6IHMnYWp1c3RhcsOgIHVuYSBmdW5jacOzIGRlIHN1cGVyZsOtY2llIGJpcXVhZHLDoHRpY2EgYSBsZXMgY2VswrdsZXMgZGVsIHZlw69uYXQuPC9saT48L3VsPlwiLFxuXHRcIkBAU3VyZmFjZS1QYXJhbWV0ZXJzX25laWdoYm9yaG9vZGRpc3RhbmNlX3RhZzBAQFwiOiBcIjxwPkVzIGNhbGN1bGFyw6AgbGEgc29ydGlkYSBhbCBsbGFyZyBkJ2FxdWVzdGEgZGlzdMOgbmNpYSByZXNwZWN0ZSBkZWwgY2VudHJlIGRlIGxhIGNlbMK3bGEgZGUgZGVzdGluYWNpw7MuIERldGVybWluYSBsYSBtaWRhIGRlbCB2ZcOvbmF0LiBFbCB2YWxvciBwZXIgZGVmZWN0ZSDDqXMgbGEgbWlkYSBkZSBsYSBjZWzCt2xhIGRlbCByw6BzdGVyIGQnZW50cmFkYSwgcXVlIGRvbmEgbGxvYyBhIHVuIHZlw69uYXQgZGUgMyBwZXIgMy48L3A+XCIsXG5cdFwiQEBTdXJmYWNlLVBhcmFtZXRlcnNfb3V0cHV0c2xvcGVtZWFzdXJlbWVudF90YWcwQEBcIjogXCI8cD5Vbml0YXRzIGRlIG1lc3VyYSAoZ3JhdXMgbyBwZXJjZW50YXRnZXMpIHF1ZSBzJ3V0aWxpdHphcmFuIHBlciBhbCByw6BzdGVyIGRlIHBlbmRlbnQgZGUgc29ydGlkYS4gQXF1ZXN0IHBhcsOgbWV0cmUgbm9tw6lzIGVzdMOgIGFjdGl1IHF1YW48c3Ryb25nPlRpcHVzIGRlIHBhcsOgbWV0cmU8L3N0cm9uZz7DqXM8c3Ryb25nPlBlbmRlbnQ8L3N0cm9uZz4uPC9wPjx1bD48bGk+R3JhdTogbGEgaW5jbGluYWNpw7MgZGVsIHBlbmRlbnQgZXMgY2FsY3VsYXLDoCBlbiBncmF1cy4gQXF1ZXN0IMOpcyBlbCB2YWxvciBwZXIgZGVmZWN0ZS48L2xpPjxsaT5QZXJjZW50YXRnZSBkJ2VsZXZhY2nDszogbGEgaW5jbGluYWNpw7MgZGVsIHBlbmRlbnQgZXMgY2FsY3VsYXLDoCBjb20gdW4gcGVyY2VudGF0Z2UgZCdlbGV2YWNpw7MsIHF1ZSB0YW1iw6kgZXMgY29uZWl4IGNvbSBhIHBlbmRlbnQgZW4gcGVyY2VudGF0Z2UuPC9saT48L3VsPlwiLFxuXHRcIkBAU3VyZmFjZS1QYXJhbWV0ZXJzX3BhcmFtZXRlcnR5cGVfdGFnMEBAXCI6IFwiPHA+RXNwZWNpZmljYSBlbCBwYXLDoG1ldHJlIGRlIHN1cGVyZsOtY2llIGRlIHNvcnRpZGEgcXVlIGVzIGNhbGN1bGFyw6AuPC9wPjx1bD48bGk+UGVuZGVudDogZXMgY2FsY3VsYXLDoCBsJ8OtbmRleCBkZSBjYW52aSBlbiBsJ2VsZXZhY2nDsy4gQXF1ZXN0IMOpcyBlbCB2YWxvciBwZXIgZGVmZWN0ZS48L2xpPjxsaT5Bc3BlY3RlOiBlcyBjYWxjdWxhcsOgIGxhIGRpcmVjY2nDsyBkZXNjZW5kZW50IGRlIGwnw61uZGV4IGRlIGNhbnZpIG3DoHhpbSBkZSBjYWRhIGNlbMK3bGEuPC9saT48bGk+Q3VydmF0dXJhIG1pdGphbmE6IGVzIG1lc3VyYXLDoCBsYSBjdXJ2YXR1cmEgZ2VuZXJhbCBkZSBsYSBzdXBlcmbDrWNpZS4gRXMgY2FsY3VsYSBjb20gbGEgbWl0amFuYSBkZSBsYSBjdXJ2YXR1cmEgbcOtbmltYSBpIG3DoHhpbWEuIEFxdWVzdGEgY3VydmF0dXJhIGRlc2NyaXUgbGEgY29udmV4aXRhdCBpIGxhIGNvbmNhdml0YXQgaW50csOtbnNlcXVlcyBkZSBsYSBzdXBlcmbDrWNpZSwgaW5kZXBlbmRlbnRtZW50IGRlIGxhIGRpcmVjY2nDsyBvIGxhIGluZmx1w6huY2lhIGRlIGxhIGdyYXZldGF0LjwvbGk+PGxpPkN1cnZhdHVyYSB0YW5nZW5jaWFsIChjb250b3JuIG5vcm1hbCk6IGVzIG1lc3VyYXLDoCBsYSBjdXJ2YXR1cmEgbm9ybWFsIGdlb23DqHRyaWNhIHBlcnBlbmRpY3VsYXIgYSBsYSBsw61uaWEgZGUgcGVuZGVudCwgdGFuZ2VudCBhIGxhIGzDrW5pYSBkZSBjb250b3JuLiBBcXVlc3RhIGN1cnZhdHVyYSBub3JtYWxtZW50IHMnYXBsaWNhIHBlciBjYXJhY3Rlcml0emFyIGxhIGNvbnZlcmfDqG5jaWEgbyBsYSBkaXZlcmfDqG5jaWEgZGVsIGZsdXggcGVyIGxhIHN1cGVyZsOtY2llLjwvbGk+PGxpPkN1cnZhdHVyYSBkZWwgcGVyZmlsIChsw61uaWEgZGUgcGVuZGVudCBub3JtYWwpOiBlcyBtZXN1cmFyw6AgbGEgY3VydmF0dXJhIG5vcm1hbCBnZW9tw6h0cmljYSBhbCBsbGFyZyBkZSBsYSBsw61uaWEgZGUgcGVuZGVudC4gTm9ybWFsbWVudCwgYXF1ZXN0YSBjdXJ2YXR1cmEgcydhcGxpY2EgcGVyIGNhcmFjdGVyaXR6YXIgbCdhY2NlbGVyYWNpw7MgaSBsYSBkZXNhY2NlbGVyYWNpw7MgZGVsIGZsdXggcGVyIGxhIHN1cGVyZsOtY2llLjwvbGk+PGxpPkN1cnZhdHVyYSBkZWwgcGxhIChjb250b3JuIHByb2plY3RhdCk6IGVzIG1lc3VyYXLDoCBsYSBjdXJ2YXR1cmEgYWwgbGxhcmcgZGUgbGVzIGzDrW5pZXMgZGUgY29udG9ybi48L2xpPjxsaT5Ub3JzacOzIGdlb2TDqHNpY2EgZGVsIGNvbnRvcm46IGVzIG1lc3VyYXLDoCBsJ8OtbmRleCBkZSBjYW52aSBkZSBsJ2FuZ2xlIGRlIHBlbmRlbnQgYWwgbGxhcmcgZGUgbGVzIGzDrW5pZXMgZGUgY29udG9ybi48L2xpPjxsaT5DdXJ2YXR1cmEgZ2F1c3NpYW5hOiBlcyBtZXN1cmFyw6AgbGEgY3VydmF0dXJhIGdlbmVyYWwgZGUgbGEgc3VwZXJmw61jaWUuIEVzIGNhbGN1bGEgY29tIGVsIHByb2R1Y3RlIGRlIGxhIGN1cnZhdHVyYSBtw61uaW1hIGkgbcOgeGltYS48L2xpPjxsaT5DdXJ2YXR1cmEgZGUgQ2Fzb3JhdGk6IGVzIG1lc3VyYXLDoCBsYSBjdXJ2YXR1cmEgZ2VuZXJhbCBkZSBsYSBzdXBlcmbDrWNpZS4gUG90IHNlciB6ZXJvIG8gcXVhbHNldm9sIGFsdHJlIG5vbWJyZSBwb3NpdGl1LjwvbGk+PC91bD5cIixcblx0XCJAQFN1cmZhY2UtUGFyYW1ldGVyc19wcm9qZWN0Z2VvZGVzaWNhemltdXRoc190YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIHNpIGVzIHByb2plY3RhcmFuIGF6aW11dHMgZ2VvZMOoc2ljcyBwZXIgY29ycmVnaXIgbCdhbmdsZSBkZSBkaXN0b3JzacOzIGNhdXNhdCBwZXIgbGEgcmVmZXLDqG5jaWEgZXNwYWNpYWwgZGUgc29ydGlkYS4gQXF1ZXN0IHBhcsOgbWV0cmUgbm9tw6lzIGVzdMOgIGFjdGl1IHF1YW48c3Ryb25nPlRpcHVzIGRlIHBhcsOgbWV0cmU8L3N0cm9uZz7DqXM8c3Ryb25nPkFzcGVjdGU8L3N0cm9uZz4uPC9wPjx1bD48bGk+RGVzYWN0aXZhdDogbm8gZXMgcHJvamVjdGFyYW4gYXppbXV0cyBnZW9kw6hzaWNzLiBBcXVlc3Qgw6lzIGVsIHZhbG9yIHBlciBkZWZlY3RlLjwvbGk+PGxpPkFjdGl2YXQ6IGVzIHByb2plY3RhcmEgYXppbXV0cyBnZW9kw6hzaWNzLjwvbGk+PC91bD5cIixcblx0XCJAQFN1cmZhY2UtUGFyYW1ldGVyc19yYXN0ZXJfdGFnMEBAXCI6IFwiPHA+UsOgc3RlciBkZSBzdXBlcmbDrWNpZSBkJ2VudHJhZGEuIFBvdCBzZXIgdW4gZW50ZXIgbyB1biByw6BzdGVyIGRlIHB1bnQgZmxvdGFudC48L3A+XCIsXG5cdFwiQEBTdXJmYWNlLVBhcmFtZXRlcnNfdXNlYWRhcHRpdmVuZWlnaGJvcmhvb2RfdGFnMEBAXCI6IFwiPHA+RXNwZWNpZmljYSBzaSBsYSBkaXN0w6BuY2lhIGRlIHZlw69uYXRnZSB2YXJpYXLDoCBhbWIgZWxzIGNhbnZpcyBkZWwgcGFpc2F0Z2UgKGFkYXB0YXRpdmEpLiBMYSBkaXN0w6BuY2lhIG3DoHhpbWEgbGEgZGV0ZXJtaW5hIGxhIGRpc3TDoG5jaWEgZGUgdmXDr25hdGdlLiBMYSBkaXN0w6BuY2lhIG3DrW5pbWEgw6lzIGxhIG1pZGEgZGUgbGEgY2VswrdsYSBkZWwgcsOgc3RlciBkJ2VudHJhZGEuPC9wPjx1bD48bGk+RGVzYWN0aXZhdDogcyd1dGlsaXR6YXLDoCB1bmEgw7puaWNhIGRpc3TDoG5jaWEgZGUgdmXDr25hdGdlIChmaXhhKSBhIHRvdGVzIGxlcyB1YmljYWNpb25zLiBBcXVlc3Qgw6lzIGVsIHZhbG9yIHBlciBkZWZlY3RlLjwvbGk+PGxpPkFjdGl2YTogcyd1dGlsaXR6YXLDoCB1bmEgZGlzdMOgbmNpYSBkZSB2ZcOvbmF0Z2UgYWRhcHRhdGl2YSBhIHRvdGVzIGxlcyB1YmljYWNpb25zLjwvbGk+PC91bD5cIixcblx0XCJAQFN1cmZhY2UtUGFyYW1ldGVyc191c2VlcXVhdG9yaWFsYXNwZWN0X3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2Egc2kgbCdhc3BlY3RlIGVzIG1lc3VyYXLDoCBkZXMgZCd1biBwdW50IGRlIGwnZXF1YWRvciBvIGRlcyBkZWwgcG9sIG5vcmQuIEFxdWVzdCBwYXLDoG1ldHJlIG5vbcOpcyBlc3TDoCBhY3RpdSBxdWFuPHN0cm9uZz5UaXB1cyBkZSBwYXLDoG1ldHJlPC9zdHJvbmc+w6lzPHN0cm9uZz5Bc3BlY3RlPC9zdHJvbmc+LjwvcD48dWw+PGxpPkRlc2FjdGl2YXQ6IGwnYXNwZWN0ZSBlcyBtZXN1cmFyw6AgZGVzIGRlbCBwb2wgbm9yZC4gQXF1ZXN0IMOpcyBlbCB2YWxvciBwZXIgZGVmZWN0ZS48L2xpPjxsaT5BY3RpdmF0OiBsJ2FzcGVjdGUgZXMgbWVzdXJhcsOgIGRlcyBkJ3VuIHB1bnQgZGUgbCdlcXVhZG9yLjwvbGk+PC91bD5cIixcblx0XCJAQFN1cmZhY2UtUGFyYW1ldGVyc196dW5pdF90YWcwQEBcIjogXCI8cD5Vbml0YXQgbGluZWFsIGRlbHMgdmFsb3JzIHogdmVydGljYWxzLjwvcD48cD5FcyBkZWZpbmVpeCBtaXRqYW7Dp2FudCB1biBzaXN0ZW1hIGRlIGNvb3JkZW5hZGVzIHZlcnRpY2Fscywgc2kgbidoaSBoYS4gU2kgbm8gaGkgaGEgY2FwIHNpc3RlbWEgZGUgY29vcmRlbmFkZXMgdmVydGljYWxzLCBsYSB1bml0YXQgeiBzJ2hhIGRlIGRlZmluaXIgZGVzIGRlIGxhIGxsaXN0YSBkJ3VuaXRhdHMgcGVyIGdhcmFudGlyIGVsIGPDoGxjdWwgZ2VvZMOoc2ljLjwvcD48dWw+PGxpPlBvbHphZGE6IGxhIHVuaXRhdCBsaW5lYWwgc2VyYW4gcG9semFkZXMuPC9saT48bGk+UGV1OiBsYSB1bml0YXQgbGluZWFsIHNlcmFuIHBldXMuPC9saT48bGk+SWFyZGE6IGxhIHVuaXRhdCBsaW5lYWwgc2VyYW4gaWFyZGVzLjwvbGk+PGxpPk1pbGxhIGRlbHMgRVVBOiBsYSB1bml0YXQgbGluZWFsIHNlcmFuIG1pbGxlcy48L2xpPjxsaT5NaWxsYSBuw6B1dGljYTogbGEgdW5pdGF0IGxpbmVhbCBzZXJhbiBtaWxsZXMgbsOgdXRpcXVlcy48L2xpPjxsaT5NaWzCt2zDrW1ldHJlOiBsYSB1bml0YXQgbGluZWFsIHNlcmFuIG1pbMK3bMOtbWV0cmVzLjwvbGk+PGxpPkNlbnTDrW1ldHJlczogbGEgdW5pdGF0IGxpbmVhbCBzZXJhbiBjZW50w61tZXRyZXMuPC9saT48bGk+TWV0cmU6IGxhIHVuaXRhdCBsaW5lYWwgc2VyYW4gbWV0cmVzLiBBcXVlc3Qgw6lzIGVsIHZhbG9yIHBlciBkZWZlY3RlLjwvbGk+PGxpPlF1aWzDsm1ldHJlOiBsYSB1bml0YXQgbGluZWFsIHNlcmFuIHF1aWzDsm1ldHJlcy48L2xpPjxsaT5EZWPDrW1ldHJlOiBsYSB1bml0YXQgbGluZWFsIHNlcmFuIGRlY8OtbWV0cmVzLjwvbGk+PC91bD5cIixcblx0XCJAQFN1cmZhY2UtUGFyYW1ldGVyc19hbmFseXNpc21hc2tfdGFnMEBAXCI6IFwiPHA+VW4gcsOgc3RlciBxdWUgZXNwZWNpZmljYSBsZXMgdWJpY2FjaW9ucyBvbiBlcyBwcm9kdWlyw6AgbCdhbsOgbGlzaS48L3A+PHA+RWwgcsOgc3RlciBwb3Qgc2VyIGRlIHRpcHVzIGVudGVyIG8gcHVudCBmbG90YW50LjwvcD48cD5Ub3RlcyBsZXMgY2VswrdsZXMgYW1iIHVuIHZhbG9yIHbDoGxpZCwgaW5jbG9lbnQtaGkgemVybywgZm9ybWFyYW4gbGEgbcOgc2NhcmEuIExlcyBjZWzCt2xlcyBxdWUgc2lndWluIE5vRGF0YSBhIGxhIG3DoHNjYXJhIGQnZW50cmFkYSBzZXJhbiBOb0RhdGEgYSBsYSBzb3J0aWRhLjwvcD5cIixcblx0XCJAQEdlb21ldHJpYy1NZWRpYW5fY2VsbHNpemV0eXBlX3RhZzBAQFwiOiBcIjxwPlRyaWV1IGxhIG1pZGEgZGUgY2VswrdsYSBxdWUgdm9sZXUgZmVyIHNlcnZpciBhbCByw6BzdGVyIGRlIHNvcnRpZGEuIFNpIGxhIG1pZGEgZGUgdG90ZXMgbGVzIGNlbMK3bGVzIGQnZW50cmFkYSDDqXMgaWd1YWwsIHRvdGVzIGxlcyBvcGNpb25zIGRvbmFyYW4gZWwgbWF0ZWl4IHJlc3VsdGF0LjwvcD48dWw+PGxpPlByaW1lciBkZTogdXRpbGl0emV1IGxhIHByaW1lcmEgbWlkYSBkZSBjZWzCt2xhIGRlbHMgcsOgc3RlcnMgZCdlbnRyYWRhLjwvbGk+PGxpPk3DrW5pbSBkZTogdXRpbGl0emV1IGxhIG1pZGEgZGUgY2VswrdsYSBtw6lzIHBldGl0YSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuPC9saT48bGk+TcOgeGltIGRlOiB1dGlsaXR6ZXUgbGEgbWlkYSBkZSBjZWzCt2xhIG3DqXMgZ3JhbiBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuIEFxdWVzdGEgw6lzIGwnb3BjacOzIHBlciBkZWZlY3RlLjwvbGk+PGxpPk1pdGphbmEgZGU6IHV0aWxpdHpldSBsYSBtaWRhIGRlIGNlbMK3bGEgbWl0amFuYSBkZSB0b3RzIGVscyByw6BzdGVycyBkJ2VudHJhZGEuPC9saT48bGk+w5psdGltIGRlOiB1dGlsaXR6ZXUgbGEgZGFycmVyYSBtaWRhIGRlIGNlbMK3bGEgZGVscyByw6BzdGVycyBkJ2VudHJhZGEuPC9saT48L3VsPlwiLFxuXHRcIkBAR2VvbWV0cmljLU1lZGlhbl9lcHNpbG9uX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgZWwgdmFsb3IgZGUgY29udmVyZ8OobmNpYSBlbnRyZSBkdWVzIGl0ZXJhY2lvbnMgY29uc2VjdXRpdmVzLiBRdWFuIMOocHNpbG9uIMOpcyBpbmZlcmlvciBvIGlndWFsIHF1ZSBlbCB2YWxvciBlc3BlY2lmaWNhdCwgbGEgaXRlcmFjacOzIHMnYXR1cmEgaSBzJ3V0aWxpdHphIGVsIHJlc3VsdGF0IGRlIGwnw7psdGltYSBpdGVyYWNpw7MuPC9wPlwiLFxuXHRcIkBAR2VvbWV0cmljLU1lZGlhbl9leHRlbnR0eXBlX3RhZzBAQFwiOiBcIjxwPlRyaWV1IHF1aW5hIGV4dGVuc2nDsyBzJ2hhIGRlIGZlciBzZXJ2aXIgYWwgcsOgc3RlciBkZSBzb3J0aWRhOjwvcD48dWw+PGxpPjxwPlByaW1lciBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlbCBwcmltZXIgcsOgc3RlciBkJ2VudHJhZGEgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LjwvcD48L2xpPjxsaT5JbnRlcnNlY2Npw7MgZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZWxzIHDDrXhlbHMgc3VwZXJwb3NhdHMgcGVyIGRldGVybWluYXIgbCdleHRlbnNpw7MgZGUgcHJvY2Vzc2FtZW50LiBBcXVlc3RhIMOpcyBsJ29wY2nDsyBwZXIgZGVmZWN0ZS48L2xpPjxsaT5VbmnDsyBkZTogdXRpbGl0emV1IGwnZXh0ZW5zacOzIGRlIHRvdHMgZWxzIHLDoHN0ZXJzIHBlciBkZXRlcm1pbmFyIGwnZXh0ZW5zacOzIGRlIHByb2Nlc3NhbWVudC48L2xpPjxsaT7Dmmx0aW0gZGU6IHV0aWxpdHpldSBsJ2V4dGVuc2nDsyBkZSBsJ8O6bHRpbSByw6BzdGVyIGQnZW50cmFkYSBwZXIgZGV0ZXJtaW5hciBsJ2V4dGVuc2nDsyBkZSBwcm9jZXNzYW1lbnQuPC9saT48L3VsPlwiLFxuXHRcIkBAR2VvbWV0cmljLU1lZGlhbl9tYXhpbXVtbnVtYmVyb2ZpdGVyYXRpb25zX3RhZzBAQFwiOiBcIjxwPkVzcGVjaWZpY2EgZWwgbm9tYnJlIG3DoHhpbSBkJ2l0ZXJhY2lvbnMgcGVyIGNvbXBsZXRhci4gTGEgY29tcHV0YWNpw7MgZmluYWxpdHphIHF1YW4gcydhcnJpYmEgYSBhcXVlc3QgdmFsb3IsIGluZGVwZW5kZW50bWVudCBkZSBsJ29wY2nDsyBkZSBjb25maWd1cmFjacOzPHN0cm9uZz7DiHBzaWxvbjwvc3Ryb25nPi48L3A+XCIsXG5cdFwiQEBHZW9tZXRyaWMtTWVkaWFuX3Jhc3RlcnNfdGFnMEBAXCI6IFwiPHA+UsOgc3RlcnMgbXVsdGliYW5kYSBkJ2VudHJhZGEuPC9wPlwiLFxuXHRcIkBATGVhc3QtQ29zdC1Db3JyaWRvcl9pbnB1dGFjY3VtdWxhdGl2ZWNvc3RkaXN0YW5jZXJhc3RlcjFfdGFnMEBAXCI6IFwiPHA+UsOgc3RlciBkJ2VudHJhZGEgcXVlIHJlcHJlc2VudGEgbGEgZGlzdMOgbmNpYSBkZSBjb3N0IGFjdW11bGF0aXUgZGUgbGEgcHJpbWVyYSBmb250LjwvcD48cD5IYSBkZSBzZXIgdW5hIHNvcnRpZGEgZGUgZGlzdMOgbmNpYSBkZSBjb3N0IGFjdW11bGF0IGRlIGxhIGZ1bmNpw7M8c3Ryb25nPkFjdW11bGFjacOzIGRlIGRpc3TDoG5jaWE8L3N0cm9uZz5vPHN0cm9uZz5Bc3NpZ25hY2nDsyBkZSBkaXN0w6BuY2lhPC9zdHJvbmc+LjwvcD5cIixcblx0XCJAQExlYXN0LUNvc3QtQ29ycmlkb3JfaW5wdXRhY2N1bXVsYXRpdmVjb3N0ZGlzdGFuY2VyYXN0ZXIyX3RhZzBAQFwiOiBcIjxwPlLDoHN0ZXIgZCdlbnRyYWRhIHF1ZSByZXByZXNlbnRhIGxhIGRpc3TDoG5jaWEgZGUgY29zdCBhY3VtdWxhdGl1IGRlIGxhIHNlZ29uYSBmb250LjwvcD48cD5IYSBkZSBzZXIgdW5hIHNvcnRpZGEgZGUgZGlzdMOgbmNpYSBkZSBjb3N0IGFjdW11bGF0IGRlIGxhIGZ1bmNpw7M8c3Ryb25nPkFjdW11bGFjacOzIGRlIGRpc3TDoG5jaWE8L3N0cm9uZz5vPHN0cm9uZz5Bc3NpZ25hY2nDsyBkZSBkaXN0w6BuY2lhPC9zdHJvbmc+LjwvcD5cIixcblx0XCJAQExlYXN0LUNvc3QtQ29ycmlkb3JfaW5wdXRiYWNrZGlyZWN0aW9ucmFzdGVyMV90YWcwQEBcIjogXCI8cD5Sw6BzdGVyIGRlIGRpcmVjY2nDsyBpbnZlcnNhIGQnZW50cmFkYSBkZSBsYSBwcmltZXJhIGZvbnQuPC9wPjxwPkFxdWVzdCBkYXRhc2V0IHLDoHN0ZXIgaWRlbnRpZmljYSBsYSBkaXJlY2Npw7MgZGUgbGEgcHLDsnhpbWEgY2VswrdsYSBhIGxhIHJ1dGEgZGUgbWVub3IgY29zdCBkZSB0b3JuYWRhIGEgbGEgcHJpbWVyYSBmb250LiDDiXMgbGEgc29ydGlkYSBkZSBsYSBmdW5jacOzPHN0cm9uZz5BY3VtdWxhY2nDsyBkZSBkaXN0w6BuY2lhPC9zdHJvbmc+bzxzdHJvbmc+QXNzaWduYWNpw7MgZGUgZGlzdMOgbmNpYTwvc3Ryb25nPi48L3A+XCIsXG5cdFwiQEBMZWFzdC1Db3N0LUNvcnJpZG9yX2lucHV0YmFja2RpcmVjdGlvbnJhc3RlcjJfdGFnMEBAXCI6IFwiPHA+UsOgc3RlciBkZSBkaXJlY2Npw7MgaW52ZXJzYSBkJ2VudHJhZGEgZGUgbGEgc2Vnb25hIGZvbnQuPC9wPjxwPkFxdWVzdCBkYXRhc2V0IHLDoHN0ZXIgaWRlbnRpZmljYSBsYSBkaXJlY2Npw7MgZGUgbGEgcHLDsnhpbWEgY2VswrdsYSBhIGxhIHJ1dGEgZGUgbWVub3IgY29zdCBkZSB0b3JuYWRhIGEgbGEgcHJpbWVyYSBmb250LiDDiXMgbGEgc29ydGlkYSBkZSBsYSBmdW5jacOzPHN0cm9uZz5BY3VtdWxhY2nDsyBkZSBkaXN0w6BuY2lhPC9zdHJvbmc+bzxzdHJvbmc+QXNzaWduYWNpw7MgZGUgZGlzdMOgbmNpYTwvc3Ryb25nPi48L3A+XCIsXG5cdFwiQEBMZWFzdC1Db3N0LUNvcnJpZG9yX3RocmVzaG9sZF90YWcwQEBcIjogXCI8cD5VbiBsbGluZGFyIGRlIHBlcmNlbnRhdGdlIG8gY29zdCBhY3VtdWxhdGl1IHF1ZSBkZXRlcm1pbmFyw6Agc2kgdW5hIGNlbMK3bGEgZGV0ZXJtaW5hZGEgcydpbmNsb3Vyw6AgYWwgcsOgc3RlciBkZSBjb3JyZWRvciBkZSBzb3J0aWRhLjwvcD48cD5RdWFuIGVsIHBhcsOgbWV0cmU8c3Ryb25nPk3DqHRvZGUgZGUgbGxpbmRhcjwvc3Ryb25nPmVzdGlndWkgZGVmaW5pdCBlbjxzdHJvbmc+UGVyY2VudGF0Z2UgZGVsIG1lbm9yIGNvc3Q8L3N0cm9uZz4sIGVsIHZhbG9yIGVzcGVjaWZpY2F0IGluZGljYSBsJ2F1Z21lbnQgcGVyY2VudHVhbCBxdWUgcydhcGxpY2Fyw6AgcmVzcGVjdGUgZGVsIHZhbG9yIG3DrW5pbSBkZWxzIHLDoHN0ZXJzIGRlIGRpc3TDoG5jaWEgZGUgY29zdCBhY3VtdWxhdGl1IHN1bWF0LiBRdWFuIGVsIHBhcsOgbWV0cmU8c3Ryb25nPk3DqHRvZGUgZGUgbGxpbmRhcjwvc3Ryb25nPmVzIGRlZmluZWl4IGVuPHN0cm9uZz5Db3N0IGFjdW11bGF0aXU8L3N0cm9uZz4sIGVsIHZhbG9yIGluZGljYSBsZXMgY2VswrdsZXMgcXVlIHRlbmVuIHVuIGNvc3QgYWN1bXVsYXRpdSBzdW1hdCBpZ3VhbCBvIGluZmVyaW9yIGFsIHZhbG9yIHF1ZSBzJ2luY2xvdXLDoCBhbCBjb3JyZWRvci48L3A+PHA+QXF1ZXN0IHBhcsOgbWV0cmUgbm9tw6lzIGVzdMOgIGFjdGl1IHNpIGVsPHN0cm9uZz5Nw6h0b2RlIGRlIGxsaW5kYXI8L3N0cm9uZz5lc3TDoCBkZWZpbml0IGVuPHN0cm9uZz5QZXJjZW50YXRnZSBkZWwgbWVub3IgY29zdDwvc3Ryb25nPm88c3Ryb25nPkNvc3QgYWN1bXVsYXRpdTwvc3Ryb25nPi48L3A+XCIsXG5cdFwiQEBMZWFzdC1Db3N0LUNvcnJpZG9yX3RocmVzaG9sZG1ldGhvZF90YWcwQEBcIjogXCI8cD5Fc3BlY2lmaWNhIGNvbSBlcyBkZWZpbmlyw6AgZWwgbGxpbmRhci48L3A+PHA+PC9wPjx1bD48bGk+PHN0cm9uZz5TZW5zZSBsbGluZGFyPC9zdHJvbmc+OiBubyBzJ2FwbGljYXLDoCBjYXAgbGxpbmRhciBpIGVsIGNvcnJlZG9yIHJlc3VsdGFudCBjb2JyaXLDoCBsJ2V4dGVuc2nDsyBjb21wbGV0YSBkZSByw6BzdGVycyBkJ2VudHJhZGEuIMOJcyBlbCB2YWxvciBwZXIgZGVmZWN0ZS48L2xpPjxsaT48c3Ryb25nPlBlcmNlbnRhdGdlIGRlbCBtZW5vciBjb3N0PC9zdHJvbmc+OiBlbCBsbGluZGFyIGVzIGRlZmluaXLDoCBjb20gdW4gcGVyY2VudGF0Z2UgZGVsIHZhbG9yIG3DrW5pbSBkZWxzIHLDoHN0ZXJzIGRlIGRpc3TDoG5jaWEgZGUgY29zdCBhY3VtdWxhdGl1IHN1bWF0cy48L2xpPjxsaT48c3Ryb25nPkNvc3QgYWN1bXVsYXRpdTwvc3Ryb25nPjogZWwgbGxpbmRhciBlcyBkZWZpbmlyw6AgZW4gdW5pdGF0cyBkZSBkaXN0w6BuY2lhIGRlIGNvc3QgYWN1bXVsYXRpdS48L2xpPjwvdWw+XCJcbn07XG5jb25zdCBoZWxwVGV4dHNfY2EgPSB7XG5cdHJmeEFyZ3NIZWxwVGV4dHM6IHJmeEFyZ3NIZWxwVGV4dHNcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGhlbHBUZXh0c19jYTtcbmV4cG9ydCB7IHJmeEFyZ3NIZWxwVGV4dHMgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscC10ZXh0cy5jYS0xY2ZkM2U1My5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=