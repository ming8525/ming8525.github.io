"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-8660c8"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.fi-87f11009.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.fi-87f11009.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   rfxArgsHelpTexts: () => (/* binding */ rfxArgsHelpTexts)
/* harmony export */ });
const rfxArgsHelpTexts = {
	"@@Abs_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Abs_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Abs_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Abs_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Abs_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Abs_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Abs_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Abs_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Abs_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Abs_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Abs_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Abs_Raster_tag0@@": "Lähtöaineiston rasteri, jolle absoluuttiset arvot lasketaan.",
	"@@ACos_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@ACos_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@ACos_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@ACos_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@ACos_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@ACos_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@ACos_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@ACos_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ACos_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@ACos_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ACos_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ACos_Raster_tag0@@": "Lähtöaineisto, jolle käänteisen kosinin arvot lasketaan.",
	"@@ACosH_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@ACosH_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@ACosH_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@ACosH_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@ACosH_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@ACosH_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@ACosH_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@ACosH_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ACosH_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@ACosH_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ACosH_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ACosH_Raster_tag0@@": "Lähtöaineisto, jolle käänteisen hyperbolisen kosinin arvot lasketaan.",
	"@@Apparent-Reflectance_Albedo_tag0@@": "Näennäisheijastus-funktion tulokset voidaan ilmaista myös heijastuskykynä eli planetaarisen pinnan heijastaman energian prosenttiosuutena. Heijastuskykytietoja käytetään monimutkaisissa mallinnussovelluksissa ja teknisissä kaukokartoitussovelluksissa.",
	"@@Apparent-Reflectance_Albedo_tag1@@": "Ei valittu – Funktio palauttaa näennäisheijastusarvot. Tämä on oletusarvo.",
	"@@Apparent-Reflectance_Albedo_tag2@@": "Valittu – Funktio palauttaa 32-bittisiä liukulukuarvoja, jotka ovat useimmiten 0,0–1,0. Aineiston leikkausta ei tehdä, jos tämä vaihtoehto on valittuna.",
	"@@Apparent-Reflectance_Albedo_tag3@@": "Koska heijastuskyvyn tulosaineiston aineistotyyppi on liukuluku, sinun on erikseen määritettävä haluamasi <strong>Tulosaineiston pikselityyppi</strong> -arvo joko 32-bittiseksi liukuluvuksi tai 64-bittiseksi kaksinkertaisen tarkkuuden liukuluvuksi. <strong>Tulosaineiston pikselityyppi</strong> -parametri löytyy <strong>Näennäisheijastus</strong>-rasterifunktion <strong>Yleinen</strong>-välilehdeltä. Jos <strong>Tulosaineiston pikselityyppi</strong> -arvoa ei ole määritetty oikein <strong>Heijastuskyky</strong>-vaihtoehdolle, tuloksena olevat arvot ovat virheellisiä tai arvona on 0.",
	"@@Apparent-Reflectance_Offset_tag0@@": "Skaalatulla heijastuskykyarvolla voi vaihtoehtoisesti olla siirtymäarvo:",
	"@@Apparent-Reflectance_Offset_tag1@@": "16-bittisten etumerkittömien tietotyyppien oletusmittakaavasiirtymä on 5 000.",
	"@@Apparent-Reflectance_Offset_tag2@@": "8-bittisten etumerkittömien tietotyyppien oletusmittakaavasiirtymä on 0.",
	"@@Apparent-Reflectance_Offset_tag3@@": "Skaalausta ei käytetä, jos tuloksena on heijastuskyky.",
	"@@Apparent-Reflectance_Radiance-Gains-and-Bias-Values-per-Band_tag0@@": "Voit määrittää tai muokata tätä arvoa kullekin kaistalle manuaalisesti. Asianmukaiset tiedot voidaan lukea lähtöaineiston rasterituotteen metatiedoista.",
	"@@Apparent-Reflectance_Raster_tag0@@": "Rasterituote, johon näennäisheijastusta käytetään.",
	"@@Apparent-Reflectance_Scale-Factor_tag0@@": "Näennäisheijastuksen tulosaineiston arvo voidaan ilmaista kokonaislukuna. Kaikki liukulukuarvot muutetaan kokonaislukuarvoiksi kertomalla mittakaavakerroin heijastusarvolla.",
	"@@Apparent-Reflectance_Scale-Factor_tag1@@": "Jos mittakaavakerroin on ${0} tai sitä ei ole määritetty, käytetään oletusmittakaavaa lähtöaineiston pikselityypin mukaan:",
	"@@Apparent-Reflectance_Scale-Factor_tag2@@": "16-bittisten etumerkittömien tietotyyppien oletusmittakaavakerroin on 50 000.",
	"@@Apparent-Reflectance_Scale-Factor_tag3@@": "8-bittisten etumerkittömien tietotyyppien oletusmittakaavakerroin on 255.",
	"@@Apparent-Reflectance_Scale-Factor_tag4@@": "Mittakaavakerrointa käytetään aina, jos tuloksena on näennäisheijastus. Skaalausta ei käytetä, jos tuloksena on heijastuskyky.",
	"@@Apparent-Reflectance_Sun-Elevation_tag0@@": "Tämä on auringon korkeusarvo asteina. Järjestelmä täyttää tämän kentän tiedot, jos asianmukaiset tiedot voidaan lukea metatiedoista. Voit määrittää tämän arvon tai muokata sitä manuaalisesti.",
	"@@ArgStatistics_Max_tag0@@": "Määrittämäsi maksimiarvo on suurin arvo, joka on yhtä suuri tai pienempi kuin keston lopetus.",
	"@@ArgStatistics_Max_tag1@@": "Tätä lähtöaineistoa voidaan käyttää vain, jos menetelmänä on Kesto.",
	"@@ArgStatistics_Method_tag0@@": "Valitse tilastollinen menetelmä laskemista varten:",
	"@@ArgStatistics_Method_tag1@@": "Arg-maksimi – Maksimin argumentti, joka palauttaa kohteen ${Band index}, jolle annettu pikseli noutaa sen minimiarvon kaikista kaistoista. Kaikille rasterikaistoille kustakin lähtöaineiston rasterista määritetään 0-pohjainen, lisäävä kaistaindeksi, joka järjestetään ensin lähtöaineiston rasteri-indeksin mukaan ja sitten kunkin lähtöaineiston rasterin suhteellisen kaistajärjestyksen mukaan.",
	"@@ArgStatistics_Method_tag2@@": "Arg-mediaani – Mediaanin argumentti, joka palauttaa kohteen ${Band index}, jolle annettu pikseli noutaa mediaaniarvon kaikkien kaistojen arvoista.",
	"@@ArgStatistics_Method_tag3@@": "Arg-minimi – Minimin argumentti, joka palauttaa kohteen ${Band index}, jolle annettu pikseli noutaa sen minimiarvon kaikista kaistoista.",
	"@@ArgStatistics_Method_tag4@@": "Kesto – Kesto-menetelmä etsii pisimmät peräkkäiset elementit matriisista, jossa jokaisen elementin arvo on suurempi tai yhtä suuri kuin <strong>Minimi</strong> ja pienempi tai yhtä suuri kuin <strong>Maksimi</strong>, ja palauttaa sitten sen pituuden.",
	"@@ArgStatistics_Min_tag0@@": "Määrittämäsi minimiarvo on pienin arvo, joka on yhtä suuri tai suurempi kuin keston aloitus.",
	"@@ArgStatistics_Min_tag1@@": "Tätä lähtöaineistoa voidaan käyttää vain, jos menetelmänä on Kesto.",
	"@@ArgStatistics_Rasters_tag0@@": "Lähtöaineiston rasteri, jolle suoritat erilaisia tilastollisia menetelmiä.",
	"@@ArgStatistics_Undefined-Class_tag0@@": "Vakiolähtöaineisto, joka palautetaan, kun lopullista maksimiarvoa, minimiarvoa tai mediaania ei voi noutaa. Yleisin skenaario on, kun maksimi- tai minimiarvot esiintyvät useammin kuin kerran kaikkien kaistojen arvoissa. Määrittämättömän vakion oletusarvo on 100.",
	"@@ArgStatistics_Undefined-Class_tag1@@": "Määrittämätön luokka soveltuu vain, kun menetelmänä on <strong>ArgMax</strong>, <strong>ArgMin</strong> tai <strong>ArgMedian</strong>.",
	"@@ArgStatistics_ignorenodata_tag0@@": "Ilmaisee, ohitetaanko NoData-arvot tilastollisessa laskelmassa.",
	"@@ArgStatistics_ignorenodata_tag1@@": "Valittu – analyysi sisältää kaikki kelvolliset pikselit lähtöaineiston rastereissa ja ohittaa kaikki NoData-pikselit.",
	"@@ArgStatistics_ignorenodata_tag2@@": "Ei valittu – analyysin tuloksena on NoData, jos pikselien arvona on NoData-arvoja lähtöaineiston rastereissa. Tämä on oletusarvo.",
	"@@Arithmetic_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Arithmetic_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Arithmetic_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Arithmetic_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Arithmetic_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Arithmetic_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Arithmetic_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Arithmetic_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Arithmetic_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Arithmetic_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Arithmetic_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Arithmetic_Operation_tag0@@": "Aritmeettinen operaatio, joka suoritetaan kahden lähtöaineiston rasterin välillä.",
	"@@Arithmetic_Operation_tag1@@": "Asetukset ovat seuraavat:",
	"@@Arithmetic_Operation_tag2@@": "<strong>Jakolasku</strong> – Tuloksena on kunkin rasterin vastaavien pikseliarvojen välinen jaollinen tulos.",
	"@@Arithmetic_Operation_tag4@@": "<strong>Vähennyslasku</strong> – Tuloksena on kunkin rasterin vastaavien pikseliarvojen välinen ero. Tätä voidaan käyttää muutoksen havaitsemisen laskemiseen.",
	"@@Arithmetic_Operation_tag6@@": "<strong>Moodi</strong> – Tuloksena on kaikkien useimmiten esiintyvien päällekkäisten pikselien arvo. Jos esimerkiksi rasterissa on kuusi kaistaa, päällekkäisiä pikseleitä on kuusi. Arvojen 4, 5, 6, 4, 7 ja 9 tilan arvo on 4.",
	"@@Arithmetic_Operation_tag8@@": "<strong>Kertolasku</strong> – Tuloksena on kunkin rasterin vastaavien pikseliarvojen tulo. Tätä voidaan käyttää joidenkin kustannusfunktioiden suorittamiseen.",
	"@@Arithmetic_Operation_tag10@@": "<strong>Yhteenlasku</strong> – Tuloksena on kunkin rasterin vastaavien pikseliarvojen summa.",
	"@@Arithmetic_Operation_tag12@@": "<strong>Potenssi</strong> – Tuloksena on vastaavien pikseliarvojen tuote korotettuna lähtöaineiston rasterin tai skalaarin potenssiin.",
	"@@Arithmetic_Raster_tag0@@": "Ensimmäinen lähtöaineiston rasteriaineistoryhmä.",
	"@@Arithmetic_Raster2_tag0@@": "Toinen lähtöaineiston rasteriaineistoryhmä.",
	"@@ASin_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@ASin_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@ASin_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@ASin_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@ASin_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@ASin_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@ASin_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@ASin_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ASin_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@ASin_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ASin_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ASin_Raster_tag0@@": "Lähtöaineisto, jolle käänteisen sinin arvot lasketaan.",
	"@@ASinH_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@ASinH_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@ASinH_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@ASinH_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@ASinH_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@ASinH_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@ASinH_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@ASinH_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ASinH_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@ASinH_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ASinH_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ASinH_Raster_tag0@@": "Lähtöaineisto, jolle käänteisen hyperbolisen sinin arvot lasketaan.",
	"@@Aspect_Raster_tag0@@": "Lähtöaineiston DEM, jota käytetään kaltevuussuunnan aineistoryhmän johtamiseen.",
	"@@Aspect-Slope_Raster_tag0@@": "Lähtöaineiston DEM.",
	"@@Aspect-Slope_Z-Factor_tag0@@": "Mittakaavakerroin, jota käytetään korkeusarvojen muuntamiseen seuraavissa tilanteissa:",
	"@@Aspect-Slope_Z-Factor_tag1@@": "Korkeusyksiköt (kuten metrit tai jalat) halutaan muuttaa karttatason vaakakoordinaattiyksiköiksi, kuten jaloiksi, metreiksi tai asteiksi.",
	"@@Aspect-Slope_Z-Factor_tag2@@": "Pystysuuntainen liioittelu halutaan lisätään visuaalisena tehosteena.",
	"@@ATan_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@ATan_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@ATan_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@ATan_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@ATan_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@ATan_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@ATan_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@ATan_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ATan_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@ATan_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ATan_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ATan_Raster_tag0@@": "Lähtöaineisto, jolle käänteisen  tangentin arvot lasketaan.",
	"@@ATan2_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@ATan2_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@ATan2_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@ATan2_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@ATan2_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@ATan2_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@ATan2_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@ATan2_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ATan2_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@ATan2_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ATan2_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ATan2_Raster_tag0@@": "Lähtöaineisto, joka määrittää osoittajan tai y-arvon, jota käytetään käänteisen tangentin laskemiseen.",
	"@@ATan2_Raster2_tag0@@": "Lähtöaineisto, joka määrittää nimittäjän tai x-arvon, jota käytetään käänteisen tangentin laskemiseen.",
	"@@ATanH_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@ATanH_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@ATanH_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@ATanH_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@ATanH_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@ATanH_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@ATanH_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@ATanH_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ATanH_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@ATanH_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ATanH_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@ATanH_Raster_tag0@@": "Lähtöaineisto, jolle käänteisen hyperbolisen tangentin arvot lasketaan.",
	"@@Attribute-Table_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Attribute-Table_Table-Type_tag0@@": "Voit antaa lähtöaineiston ominaisuustietotaulun käyttämällä <strong>Manuaalinen</strong>-tyyppiä, jossa määrität luokan nimen ja värin kullekin arvolle. Vaihtoehtoisesti voit viitata aiemmin luotuun ominaisuustietotauluun, joka tulee ${.dbf}-tiedostosta.",
	"@@Band-Arithmetic_Band-Indexes_tag0@@": "Määritä kaistan aritmeettinen kaava, jos valitsit <strong>Menetelmäksi</strong> <strong>Käyttäjän määrittämä</strong>.",
	"@@Band-Arithmetic_Band-Indexes_tag5@@": "Jos valitsit <strong>Menetelmäksi</strong> ennalta määritetyn indeksin, määritä lähtöaineiston rasteriaineistoryhmän oikeat kaistat, jotka vastaavat indeksiä.",
	"@@Band-Arithmetic_Method_tag0@@": "Kaistan aritmeettisen algoritmin tyyppi, jonka haluat ottaa käyttöön. Voit määrittää oman algoritmin tai valita ennalta määritetyn indeksin.",
	"@@Band-Arithmetic_Method_tag1@@": "<strong>BAI</strong> – Burn Area Index (paloalueindeksi)",
	"@@Band-Arithmetic_Method_tag2@@": "<strong>CIg</strong> – Chlorophyll Index (lehtivihreäindeksi)",
	"@@Band-Arithmetic_Method_tag3@@": "<strong>CIre</strong> – Chlorophyll Index – Red Edge (lehtivihreäindeksi, punainen reuna)",
	"@@Band-Arithmetic_Method_tag4@@": "<strong>Savimineraalit</strong> – Savimineraalien suhde",
	"@@Band-Arithmetic_Method_tag5@@": "<strong>EVI</strong> – Enhanced Vegetation Index (parannettu kasvillisuusindeksi)",
	"@@Band-Arithmetic_Method_tag6@@": "<strong>Rautapitoiset mineraalit</strong> – Rautapitoisten mineraalien suhde",
	"@@Band-Arithmetic_Method_tag7@@": "<strong>GEMI</strong> – Global Environmental Monitoring Index (maailmanlaajuinen ympäristön tarkkailuindeksi)",
	"@@Band-Arithmetic_Method_tag8@@": "<strong>GNDVI</strong> – Green Normalized Difference Vegetation Index (normalisoitu kasvillisuuserojen indeksi)",
	"@@Band-Arithmetic_Method_tag9@@": "<strong>GVI (Landsat TM)</strong> – Green Vegetation Index (vihreän kasvillisuuden indeksi) Landsat TM",
	"@@Band-Arithmetic_Method_tag10@@": "<strong>Rautaoksidi</strong> –Rautaoksidien suhde",
	"@@Band-Arithmetic_Method_tag11@@": "<strong>MNDWI</strong> – Modified Normalized Difference Water Index (muokattu normalisoitu vesierojen indeksi)",
	"@@Band-Arithmetic_Method_tag12@@": "<strong>MTVI2</strong> – Modified Triangulated Vegetation Index (second iteration) (muokattu kolmiomitattu kasvillisuusindeksi, toinen iteraatio)",
	"@@Band-Arithmetic_Method_tag13@@": "<strong>Modified SAVI</strong> – Modified Soil Adjusted Vegetation Index (muokattu maaperäkorjattu kasvillisuusindeksi)",
	"@@Band-Arithmetic_Method_tag14@@": "<strong>NBR</strong> – Normalized Burn Ratio Index (normalisoitu palosuhdeindeksi)",
	"@@Band-Arithmetic_Method_tag15@@": "<strong>NDBI</strong> – Normalized Difference Built-up Index (normalisoitu asutuserojen indeksi)",
	"@@Band-Arithmetic_Method_tag16@@": "<strong>NDMI</strong> – Normalized Difference Moisture Index (normalisoitu kosteuserojen indeksi)",
	"@@Band-Arithmetic_Method_tag17@@": "<strong>NDSI</strong> – Normalized Difference Snow Index (normalisoitu lumierojen indeksi)",
	"@@Band-Arithmetic_Method_tag18@@": "<strong>NDVI</strong> – Normalized Difference Vegetation Index (normalisoitu kasvillisuuserojen indeksi)",
	"@@Band-Arithmetic_Method_tag19@@": "<strong>NDVIre</strong> – Red-Edge Normalized Difference Vegetation Index (punaisen reunan normalisoitu kasvillisuuserojen indeksi)",
	"@@Band-Arithmetic_Method_tag20@@": "<strong>NDWI</strong> – Normalized Difference Water Index (normalisoitu vesieron indeksi)",
	"@@Band-Arithmetic_Method_tag21@@": "<strong>PVI</strong> – Perpendicular Vegetation Index (pystysuuntainen kasvillisuusindeksi)",
	"@@Band-Arithmetic_Method_tag22@@": "<strong>RTVICore</strong> – Red-Edge Triangulated Vegetation Index (punaisen reunan kolmiomitattu kasvillisuusindeksi)",
	"@@Band-Arithmetic_Method_tag23@@": "<strong>SAVI</strong> – Soil Adjusted Vegetation Index (maaperäkorjattu kasvillisuusindeksi)",
	"@@Band-Arithmetic_Method_tag24@@": "<strong>SR</strong> – Simple Ratio",
	"@@Band-Arithmetic_Method_tag25@@": "<strong>SRre</strong> – Red-Edge Simple Ratio",
	"@@Band-Arithmetic_Method_tag26@@": "<strong>Sultanin kaava</strong> – Sultanin kaava",
	"@@Band-Arithmetic_Method_tag27@@": "<strong>Transformed SAVI</strong> – Transformed Soil Adjusted Vegetation Index (muunnettu maaperäkorjattu kasvillisuusindeksi)",
	"@@Band-Arithmetic_Method_tag28@@": "<strong>Käyttäjän määrittämä</strong> – voit määrittää oman kaistan aritmeettisen lausekkeen.s",
	"@@Band-Arithmetic_Method_tag29@@": "<strong>VARI</strong> – Visible Atmospherically Resistant Index (näkyvä ilmakehällisesti resistentti indeksi)",
	"@@Band-Arithmetic_Method_tag30@@": "<strong>WNDWI</strong> – Weighted Normalized Difference Water Index (painotettu normalisoitu vesierojen indeksi)",
	"@@Band-Arithmetic_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Binary-Thresholding_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Bitwise-And_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Bitwise-And_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Bitwise-And_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Bitwise-And_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Bitwise-And_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Bitwise-And_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Bitwise-And_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Bitwise-And_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-And_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Bitwise-And_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-And_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-And_Raster_tag0@@": "Ensimmäinen lähtöaineisto, jota käytetään tässä bittitason operaatiossa.",
	"@@Bitwise-And_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Bitwise-And_Raster2_tag0@@": "Toinen lähtöaineisto, jota käytetään tässä bittitason operaatiossa.",
	"@@Bitwise-And_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Bitwise-Left-Shift_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Bitwise-Left-Shift_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Left-Shift_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Bitwise-Left-Shift_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Left-Shift_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Left-Shift_Raster_tag0@@": "Lähdeaineisto, jolle siirto suoritetaan.",
	"@@Bitwise-Left-Shift_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Bitwise-Left-Shift_Raster2_tag0@@": "Lähtöaineisto, joka määrittää niiden sijaintien määrän, joihin bitit siirretään.",
	"@@Bitwise-Left-Shift_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Bitwise-Not_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Bitwise-Not_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Bitwise-Not_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Bitwise-Not_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Bitwise-Not_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Bitwise-Not_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Bitwise-Not_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Bitwise-Not_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Not_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Bitwise-Not_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Not_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Not_Raster_tag0@@": "Lähtöaineiston rasteri, jolle bittitason NOT (komplementti) -operaatio suoritetaan.",
	"@@Bitwise-Or_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Bitwise-Or_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Bitwise-Or_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Bitwise-Or_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Bitwise-Or_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Bitwise-Or_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Bitwise-Or_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Bitwise-Or_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Or_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Bitwise-Or_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Or_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Or_Raster_tag0@@": "Ensimmäinen lähtöaineisto, jota käytetään tässä bittitason operaatiossa.",
	"@@Bitwise-Or_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Bitwise-Or_Raster2_tag0@@": "Toinen lähtöaineisto, jota käytetään tässä bittitason operaatiossa.",
	"@@Bitwise-Or_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Bitwise-Right-Shift_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Bitwise-Right-Shift_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Right-Shift_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Bitwise-Right-Shift_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Right-Shift_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Right-Shift_Raster_tag0@@": "Lähdeaineisto, jolle siirto suoritetaan.",
	"@@Bitwise-Right-Shift_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Bitwise-Right-Shift_Raster2_tag0@@": "Lähtöaineisto, joka määrittää niiden sijaintien määrän, joihin bitit siirretään.",
	"@@Bitwise-Right-Shift_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Bitwise-Xor_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Bitwise-Xor_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Bitwise-Xor_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Bitwise-Xor_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Bitwise-Xor_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Bitwise-Xor_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Bitwise-Xor_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Bitwise-Xor_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Xor_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Bitwise-Xor_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Xor_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Bitwise-Xor_Raster_tag0@@": "Ensimmäinen lähtöaineisto, jota käytetään tässä bittitason operaatiossa.",
	"@@Bitwise-Xor_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Bitwise-Xor_Raster2_tag0@@": "Toinen lähtöaineisto, jota käytetään tässä bittitason operaatiossa.",
	"@@Bitwise-Xor_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Boolean-and_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Boolean-and_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Boolean-and_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Boolean-and_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Boolean-and_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Boolean-and_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Boolean-and_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Boolean-and_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-and_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Boolean-and_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-and_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-and_Raster_tag0@@": "Ensimmäinen lähtöaineisto, jota käytetään tässä loogisessa operaatiossa.",
	"@@Boolean-and_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Boolean-and_Raster2_tag0@@": "Toinen lähtöaineisto, jota käytetään tässä loogisessa operaatiossa.",
	"@@Boolean-and_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Boolean-Not_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Boolean-Not_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Boolean-Not_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Boolean-Not_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Boolean-Not_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Boolean-Not_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Boolean-Not_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Boolean-Not_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-Not_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Boolean-Not_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-Not_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-Not_Raster_tag0@@": "Ensimmäinen lähtöaineisto, jota käytetään tässä loogisessa operaatiossa.",
	"@@Boolean-Or_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Boolean-Or_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Boolean-Or_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Boolean-Or_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Boolean-Or_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Boolean-Or_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Boolean-Or_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Boolean-Or_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-Or_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Boolean-Or_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-Or_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-Or_Raster_tag0@@": "Ensimmäinen lähtöaineisto, jota käytetään tässä loogisessa operaatiossa.",
	"@@Boolean-Or_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Boolean-Or_Raster2_tag0@@": "Toinen lähtöaineisto, jota käytetään tässä loogisessa operaatiossa.",
	"@@Boolean-Or_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Boolean-Xor_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Boolean-Xor_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Boolean-Xor_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Boolean-Xor_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Boolean-Xor_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Boolean-Xor_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Boolean-Xor_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Boolean-Xor_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-Xor_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Boolean-Xor_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-Xor_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Boolean-Xor_Raster_tag0@@": "Ensimmäinen lähtöaineisto, jota käytetään tässä loogisessa operaatiossa.",
	"@@Boolean-Xor_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Boolean-Xor_Raster2_tag0@@": "Toinen lähtöaineisto, jota käytetään tässä loogisessa operaatiossa.",
	"@@Boolean-Xor_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Buffered_Raster_tag0@@": "Lähtöaineiston rasteri, joka tallennetaan muistiin.",
	"@@Calculator_Cellsize-Type_tag0@@": "Tulosaineiston rasterin luomiseen käytetty solukoko.",
	"@@Calculator_Cellsize-Type_tag1@@": "Voit valita tulosaineiston solukoon avattavan luettelon seuraavista vaihtoehdoista:",
	"@@Calculator_Cellsize-Type_tag2@@": "<strong>Ensimmäinen</strong> – Ensimmäisen rasterimuuttujan solukoko.",
	"@@Calculator_Cellsize-Type_tag4@@": "<strong>Pienin</strong> – Lähtöaineiston rasterien minimisolukoko.",
	"@@Calculator_Cellsize-Type_tag6@@": "<strong>Suurin</strong> – Lähtöaineiston rasterien maksimisolukoko.",
	"@@Calculator_Cellsize-Type_tag8@@": "<strong>Keskiarvo</strong> – Lähtöaineiston rasterien keskimääräinen solukoko.",
	"@@Calculator_Cellsize-Type_tag10@@": "<strong>Viimeinen</strong> – Viimeisen rasterimuuttujan solukoko.",
	"@@Calculator_Cellsize-Type_tag12@@": "Oletusvalinta on <strong>Suurin</strong>.",
	"@@Calculator_Expression_tag0@@": "Luo algebralauseke, jota käytetään paikkatietoanalyysin suorittamiseen lähtöaineiston rasterissa.",
	"@@Calculator_Expression_tag1@@": "Lausekkeen voi luoda kutsumalla minkä tahansa aiemmista matemaattisista funktioista. Käytettävissä olevat operaattorit on lueteltu alla.",
	"@@Calculator_Expression_tag2@@": "Aritmeettiset operaattorit",
	"@@Calculator_Expression_tag3@@": "Yhteenlasku: +",
	"@@Calculator_Expression_tag4@@": "Jakolasko: /",
	"@@Calculator_Expression_tag5@@": "Jakojäännös: %",
	"@@Calculator_Expression_tag6@@": "Kertolasku: *",
	"@@Calculator_Expression_tag7@@": "Potenssi: **",
	"@@Calculator_Expression_tag8@@": "Vähennyslasku: –",
	"@@Calculator_Expression_tag9@@": "Loogiset operaattorit",
	"@@Calculator_Expression_tag10@@": "Looginen AND: &&",
	"@@Calculator_Expression_tag11@@": "Looginen OR: ||",
	"@@Calculator_Expression_tag12@@": "Vertailuoperaattorit",
	"@@Calculator_Expression_tag13@@": "Yhtä suuri kuin: ==",
	"@@Calculator_Expression_tag14@@": "Suurempi kuin: >",
	"@@Calculator_Expression_tag15@@": "Suurempi tai yhtä suuri kuin: >=",
	"@@Calculator_Expression_tag16@@": "Pienempi kuin: <",
	"@@Calculator_Expression_tag17@@": "Pienempi tai yhtä suuri kuin: <=",
	"@@Calculator_Expression_tag18@@": "Erisuuri kuin: !=",
	"@@Calculator_Expression_tag19@@": "Muut operaattorit",
	"@@Calculator_Expression_tag20@@": "Vähintään kaksi rasteria pikselikohtaisesti: min(a,b)",
	"@@Calculator_Expression_tag21@@": "Enintään kaksi rasteria pikselikohtaisesti: max(a,b)",
	"@@Calculator_Expression_tag22@@": "Tässä on esimerkkejä lausekkeista:",
	"@@Calculator_Expression_tag23@@": "Yksinkertainen ehtolauseke: Etsi rasterista (tunnus T) korkeusarvoja, jotka ovat yli 4 000 jalkaa, ja määritä näiden alueiden arvoksi 1 ja muiden alueiden arvoksi 0.",
	"@@Calculator_Expression_tag24@@": "Con(T > 4000, 1, 0)",
	"@@Calculator_Expression_tag25@@": "Sisäkkäinen ehtolauseke: Etsi alueita, joiden kaltevuus on (tunnus b1) on alle 10 astetta ja NDVI (tunnus b2) on yli 0,5, ja määritä näiden alueiden arvoksi 1. Määritä kaikkien niiden alueiden arvoksi 2, joiden kaltevuus on yli 10 astetta ja korkeus (tunnus b3) on yli 2 500 jalkaa. Määritä kaikkien muiden alueiden arvoksi 3.",
	"@@Calculator_Expression_tag26@@": "Con((b1 < 10 && b2 > .5, 1, Con(b1 > 10 && b3 > 2500, 2, 3)))",
	"@@Calculator_extenttype_tag0@@": "<p>Valitse tulosrasterissa käytettävä laajuus:</p><ul><li><p>Ensimmäinen – Käytä lähtöaineiston ensimmäisen rasterin laajuutta käsittelylaajuuden määrittämiseen.</p></li><li>Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.</li><li>Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.</li><li>Viimeinen – Käytä lähtöaineiston viimeisen rasterin laajuutta käsittelylaajuuden määrittämiseen.</li></ul>",
	"@@Calculator_Raster-Variables_tag0@@": "Käyttäjän määrittämän muuttujan nimi ja lähtöaineiston rasteri.",
	"@@Classify_Input-Definition-File_tag0@@": "Lähtöaineiston Esri-luokitusmääritystiedosto (Esri Classifier Definition, ${.ecd}), joka sisältää tilastotiedot ja muut luokittelutiedot tiettyä aineistoryhmää, luokitusta ja valittuja ominaisuustietoja varten.",
	"@@Classify_Raster_tag0@@": "Rasteriaineistoryhmä, jonka haluat luokitella.",
	"@@Classify_Raster2_tag0@@": "Valinnainen täydentävä rasteriaineistoryhmä, jonka voi sisällyttää luokitteluun. Se voi olla esimerkiksi segmentoitu kuva, monispektrinen kuva tai korkeustiedot. Täydentävän rasteriaineistoryhmän avulla voit luoda monipuolisemman luokittelumäärityksen aineistoryhmää varten. Tämän parametrin rasteriaineistoryhmän on vastattava aineistoryhmää, jota on käytetty lähtöaineiston Esri-luokitusmääritystiedoston luomiseen.",
	"@@Clip_Clipping-Geometry-or-Raster_tag0@@": "Seuraavia voidaan käyttää leikkauslaajuuden määrittämiseen:",
	"@@Clip_Clipping-Geometry-or-Raster_tag1@@": "<strong>Leikkausrasteri</strong> – Leikkausrasterin laajuus",
	"@@Clip_Clipping-Geometry-or-Raster_tag3@@": "<strong>Mukautettu laajuus</strong> – X- ja Y-minimi- ja maksimikoordinaatit",
	"@@Clip_Clipping-Geometry-or-Raster_tag5@@": "<strong>Nykyinen kartan laajuus</strong> – Nykyisen karttanäkymän laajuus",
	"@@Clip_Clipping-Raster_tag0@@": "Leikkaamiseen käytettävä rasterikarttataso.",
	"@@Clip_Clipping-Type_tag0@@": "Määritä, haluatko säilyttää alueen leikkausgeometrian sisä- vai ulkopuolella.",
	"@@Clip_Clipping-Type_tag1@@": "<strong>Leikkaa sisältä</strong> – Leikkauslaajuuksien sisäpuolella olevat kuvat poistetaan.",
	"@@Clip_Clipping-Type_tag3@@": "<strong>Leikkaa ulkopuolelta</strong> – Leikkauslaajuuksien ulkopuolella olevat kuvat poistetaan.",
	"@@Clip_Custom-Extent_tag0@@": "Määritä neljä koordinaattia, jotka määrittävät rasterin leikkaamiseen käytettävän rajaavan ruudun laajuuden.",
	"@@Clip_Output-Extent_tag0@@": "Nykyisen leikkauslaajuuden x- ja y-koordinaatit.",
	"@@Clip_Output-Extent_tag1@@": "<strong>Tallenna nykyisen kartan laajuus</strong> -painike käyttää aktiivisen kartan näyttölaajuutta.",
	"@@Clip_Raster_tag0@@": "Lähtöaineiston rasterikarttataso.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag0@@": "Kun tämä on valittuna, aineisto leikataan määritetyn kohdeluokan geometrian mukaan.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag1@@": "Ei valittu – Funktio käyttää leikkausgeometriaa, jonka on määrittänyt <strong>Suorakulmio</strong>. Tämä on oletusarvo.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag4@@": "Valittu – Funktio käyttää kohdeluokan määrittämää leikkausgeometriaa.",
	"@@Color-Model-Conversion_Conversion-Type_tag0@@": "Suoritettava värin muuntotyyppi:",
	"@@Color-Model-Conversion_Conversion-Type_tag1@@": "HSV-RGB",
	"@@Color-Model-Conversion_Conversion-Type_tag2@@": "RGB-HSV",
	"@@Color-Model-Conversion_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Colormap_Color-Ramp_tag0@@": "Valitse aiemmin luotu väriliukuma.",
	"@@Colormap_Color-Scheme-Type_tag0@@": "Valitse värimalli, jota käytetään lähtöaineiston rasterin hahmontamiseen",
	"@@Colormap_Color-Scheme-Type_tag1@@": "Väriliukuma – Käytä väriliukumaa.",
	"@@Colormap_Color-Scheme-Type_tag2@@": "Värikartta – Käytä aiemmin luotua värikarttaa.",
	"@@Colormap_Colormap_tag0@@": "Seuraavat oletusvärikartat ovat käytettävissä avattavasta luettelosta:",
	"@@Colormap_Colormap_tag1@@": "Korkeus – Värikartta, jonka väri muuttuu asteittain syaanista purppuraan ja mustaan.",
	"@@Colormap_Colormap_tag2@@": "Harmaa – Värikartta, jonka väri muuttuu asteittain mustasta valkoiseen.",
	"@@Colormap_Colormap_tag7@@": "Vinovalo – harmaasävyvärikartta, joka visualisoi maaston pinnasta 3D-esityksen siten, että auringon suhteellinen asema on otettu huomioon kuvan varjostuksessa.",
	"@@Colormap_Colormap_tag3@@": "NDVI – Värikartta kasvillisuuden visualisoimiseen. Nollaa lähellä olevat arvot ovat sinisiä. Pienet arvot ovat ruskeita. Sitten värit muuttuvat asteittain punaisesta oranssiin, oranssista keltaiseen, keltaisesta vihreään ja vihreästä mustaan sitä mukaa kuin kasvillisuusindeksin arvo suurenee.",
	"@@Colormap_Colormap_tag4@@": "NDVI2 – Värikartta kasvillisuuden visualisoimiseen. Pienet arvot vaihtelevat valkoisesta vihreään. Sitten värit muuttuvat harmaasta purppuraan, purppurasta violettiin, violetista tummansiniseen ja tummansinisestä mustaan sitä mukaa kuin kasvillisuusindeksin arvo suurenee.",
	"@@Colormap_Colormap_tag5@@": "NDVI3 – Värikartta kasvillisuuden visualisoimiseen. Nollaa lähellä olevat arvot ovat sinisiä. Sitten värit muuttuvat asteittain punaisesta oranssiin ja oranssista vihreään sitä mukaa kuin kasvillisuusindeksin arvo suurenee.",
	"@@Colormap_Colormap_tag6@@": "Satunnainen – Satunnainen värikartta.",
	"@@Colormap_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Colormap-To-RGB_Raster_tag0@@": "Lähtöaineiston värikarttarasteri.",
	"@@Complex_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Composite-Bands_Rasters_tag0@@": "Käytä avattavaa luetteloa tai <strong>Selaa</strong>-painiketta rasterin lähtöaineistojen valitsemiseen.",
	"@@Composite-Bands_cellsizetype_tag0@@": "<p>Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan sama lopputulos.</p><ul><li>Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.</li><li>Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.</li><li>Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.</li><li>Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.</li><li>Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.</li></ul>",
	"@@Con-function_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Con-function_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Con-function_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Con-function_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Con-function_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Con-function_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Con_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Con_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Con_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Con_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Con_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Con_False-Raster_tag0@@": "Lähtöaineisto, jonka arvoja käytetään tulosaineiston pikseliarvoina, jos ehto on epätosi. Se voi olla kokonaisluku, liukulukurasteri tai vakioarvo.",
	"@@Con_Raster_tag0@@": "Lähtöaineiston rasteri, joka kuvaa loogisen matemaattisen rasterifunktion totuusarvotulosta. Arvot ovat joko 1 (tosi) tai 0 (epätosi). Sen tyyppi voi olla kokonaisluku tai liukulukurasteri.",
	"@@Con_True-Raster_tag0@@": "Lähtöaineisto, jonka arvoja käytetään tulosaineiston pikseliarvoina, jos ehto on tosi. Se voi olla kokonaisluku, liukulukurasteri tai vakioarvo.",
	"@@Constant_Constant_tag0@@": "Vakion arvo, joka lisätään virtuaalirasteriin.",
	"@@Constant_Raster-Info_tag0@@": "Käytä <strong>Lataa mallirasteri</strong> -painiketta mallin lataamiseen hakemistosta tai portaalista.",
	"@@Contour_Adaptive-Smoothing_tag0@@": "Arvokäyrään käytettävä tasoituksen määrä. Oletusarvo on 2,5.",
	"@@Contour_Adaptive-Smoothing_tag1@@": "Pienempi arvo tuottaa rakeisemman ja epätasaisemman arvokäyrän ja suurempi arvo tuottaa arvokäyrän, jonka tasoitus ei ole niin rosoinen.",
	"@@Contour_Contour-Interval_tag0@@": "Ero korkeudessa arvokäyrien välillä.",
	"@@Contour_Contour-Interval_tag1@@": "Pientä arvokäyräväliä käytetään suhteellisen tasaisilla alueilla ja suurempia arvokäyrävälejä käytetään muuttuvassa tai vuoristoisessa maastossa.",
	"@@Contour_Contour-Type_tag0@@": "Luotavan arvokäyrän tyyppi:",
	"@@Contour_Contour-Type_tag1@@": "<strong>Arvokäyrän täyttö</strong> – Täyttää jokaisen arvokäyrän välisen alueen kvantisoidulla korkeusarvolla.",
	"@@Contour_Contour-Type_tag3@@": "<strong>Arvokäyrän viivat</strong> – Luo vakiokorkeutta esittävän viivan liittämällä samansuuruisten korkeuksien pisteet.",
	"@@Contour_Contour-Type_tag5@@": "<strong>Vain tasainen pinta</strong> – Tasoittaa lähtöaineiston korkeuskarttatason, mutta ei tuota korkeuskäyriä.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag0@@": "Indeksoitu sama-arvokäyrä, joka esitetään lihavoituna viivana.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag1@@": "Oletusarvo on 5; näin ollen joka 5. arvokäyrä on lihavoitu.",
	"@@Contour_Number-Of-Contours_tag0@@": "Näytölle luotavien arvokäyrien määrä. Tämä muuttaa arvokäyräväliä dynaamisesti niin, että se sopii näytön maastoon säilyttäen standardoidut välit, kuten 1, 5 ja 10.",
	"@@Contour_Raster_tag0@@": "Yksikaistaisen rasterin korkeusaineistoryhmä.",
	"@@Contour_Z-Base_tag0@@": "Perusarvokäyrän arvo. Arvokäyrät luodaan tämän arvon ylä- tai alapuolelle tarpeen mukaan lähtöaineistorasterin koko arvoalueen kattamiseksi. Oletusarvo on 0.",
	"@@Contour_Z-Base_tag1@@": "0-arvo tarkoittaa usein merenpinnan keskikorkeutta lähtökorkeuden aineistoryhmän mukaan.",
	"@@Contour_Z-Factor_tag0@@": "Yksikön muuntokerroin, jota käytetään arvokäyrien luomiseen. Oletusarvo on 1.",
	"@@Contour_Z-Factor_tag1@@": "Arvokäyrät luodaan lähtöaineiston rasterin z-arvojen perusteella, ja ne mitataan usein metreinä tai jalkoina. Oletusarvo on 1, jolloin arvokäyrät ilmaistaan käyttäen samoja yksikköjä kuin joissa lähtöaineiston rasterin z-arvot ovat. Jos haluat luoda arvokäyriä, joissa käytetään eri yksiköitä kuin z-arvoissa, määritä z-tekijän arvo. Huomaa, että maan x,y-arvojen ja pinnan z-yksiköiden ei tarvitse olla yhdenmukaisia tälle työkalulle.",
	"@@Contour_Z-Factor_tag2@@": "Jos korkeusarvot on ilmaistu lähtöaineiston rasterissa esimerkiksi jalkoina, mutta haluat luoda arvokäyrät käyttämällä metrejä, määritä z-kertoimen arvoksi 0,3048 (koska 1 jalka on 0,3048 metriä).",
	"@@Contrast-and-Brightness_Brightness-Offset_tag0@@": "Muuta rasterikarttatason kirkkautta.",
	"@@Contrast-and-Brightness_Brightness-Offset_tag1@@": "Voit muokata kirkkauden siirtymää liukusäätimellä tai kirjoittamalla arvon.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag0@@": "Muuta rasterikarttatason kontrastia.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag1@@": "Voit muokata kontrastin siirtymää liukusäätimellä tai kirjoittamalla arvon.",
	"@@Contrast-and-Brightness_Raster_tag0@@": "Lähtöaineiston rasteri, jonka kirkkautta tai kontrastia haluat muokata.",
	"@@Convolution_kernel_tag0@@": "<p>Tästä taulusta näet, miten kutakin pikseliä painotetaan suodatuksessa. Voit muokata tätä taulua, jos valitset<strong>tyypiksi</strong> <strong>Käyttäjän määrittämä</strong>.</p>",
	"@@Convolution_Raster_tag0@@": "Lähtöaineiston rasteriaineistoryhmä.",
	"@@Convolution_Type_tag0@@": "Valitse suoritettavan suodatuksen tyyppi. Reunojen terävöittämiseen, sumentamiseen ja havaitsemiseen on käytettävissä valmiita suodattimia, tai voit määrittää oman ydinperustaisen suodattimen",
	"@@Corridor_Distance-Raster-1_tag0@@": "Ensimmäinen lähtöaineiston etäisyysrasteri. Sen tulee olla kumulatiivinen kustannusetäisyyden tulosaineisto kustannusetäisyydestä tai reittietäisyydestä.",
	"@@Corridor_Distance-Raster-2_tag0@@": "Toinen lähtöaineiston etäisyysrasteri. Sen tulee olla kumulatiivinen kustannusetäisyyden tulosaineisto kustannusetäisyydestä tai reittietäisyydestä.",
	"@@Cos_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Cos_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Cos_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Cos_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Cos_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Cos_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Cos_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Cos_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Cos_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Cos_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Cos_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Cos_Raster_tag0@@": "Lähtöaineisto, jolle kosinin arvot lasketaan.",
	"@@CosH_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@CosH_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@CosH_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@CosH_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@CosH_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@CosH_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@CosH_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@CosH_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@CosH_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@CosH_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@CosH_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@CosH_Raster_tag0@@": "Lähtöaineisto, jolle hyperbolisen kosinin arvot lasketaan.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Tämä parametri simuloi lisääntyviä yrityksiä selvitä kustannuksista, kun kumulatiiviset kustannukset kasvavat. Sitä käytetään matkustajan uupumuksen mallintamiseen. Kasvavan kumulatiivisen kustannuksen saavuttamiseksi solu kerrotaan vastustustasolla ja lisätään seuraavaan soluun liikkuvaan kustannukseen.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "Se on koronkorkoprosentin kaavan muokattu versio, jota käytetään solun kautta liikkuvan näennäiskustannuksen laskemiseen. Vastustustason arvon nouseminen lisää niiden solujen kustannuksia, joissa käydään myöhemmin. Mitä korkeampi on vastustustaso, sitä suurempi  on seuraavassa solussa saavutettava kustannus, joka on muodostettu kullekin seuraavalle liikkeelle. Koska vastustustaso vastaa koronkorkoprosenttia ja kumulatiivisten kustannusten arvot ovat yleensä erittäin suuria, suositellaan pieniä vastustustasoja (kuten arvoa 0,005 tai sitä pienempää) kumulatiivisten kustannusarvojen mukaan.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Cost-Allocation_Capacity_tag0@@": "Määrittää matkustajan kustannuskapasiteetin lähteelle. Kustannuslaskentaa jatketaan kullekin lähteelle, kunnes määritetty kapasiteetti saavutetaan.",
	"@@Cost-Allocation_Capacity_tag1@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Cost-Allocation_Capacity_tag2@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Cost-Allocation_Cost-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää kustannuksen tai impedanssin, joka liikkuu planimetrisesti jokaisen solun läpi. Kunkin solusijainnin arvo kuvaa sen kautta liikkuvan yksikkökohtaisen kustannuksen etäisyyttä. Kunkin solusijainnin arvo kerrotaan solun resoluutiolla, ja lisäksi arvo kompensoi diagonaalista liikettä, jotta saadaan selville solun läpikulun aiheuttamat kustannukset.",
	"@@Cost-Allocation_Cost-Raster_tag1@@": "<strong>Kustannusrasterin</strong> arvo voi olla kokonaisluku tai liukuluku, mutta se ei voi olla negatiivinen eikä nolla.",
	"@@Cost-Allocation_Maximum-Distance_tag0@@": "Kynnysarvo, jota kumulatiiviset kustannusarvot eivät saa ylittää. Jos kumulatiivinen kustannusetäisyys ylittää tämän arvon, tulosaineiston arvo solusijainnille on ${NoData}. Enimmäisetäisyys määrittää laajuuden, jolle kumulatiiviset kustannusetäisyydet lasketaan. Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Kustannusarvoihin käytettävä kerroin.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Tämän parametrin avulla voidaan hallita matkustustilaa tai magnitudia lähteessä. Mitä suurempi kerroin on, sitä suurempi on kunkin solun läpi liikkuva kustannus.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Arvojen on oltava suurempia kuin nolla. Oletusarvo on 1.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Cost-Allocation_Source-Field_tag0@@": "Kenttää käytetään määrittämään arvot lähdesijainteihin. Sen tyypin on oltava kokonaisluku. Jos <strong>arvorasteri</strong> on määritetty, kyseisessä lähtöaineistossa olevat arvot ohittavat <strong>lähdekentän</strong> asetuksen.",
	"@@Cost-Allocation_Source-Raster_tag0@@": "Lähdesijaintien pakollinen lähtöaineiston rasteri.",
	"@@Cost-Allocation_Source-Raster_tag1@@": "Tämä rasteri määrittää solut ja sijainnit, joista viimeisin kumulatiivinen kustannusetäisyys lasketaan jokaiselle tulosaineiston solusijainnille.",
	"@@Cost-Allocation_Source-Raster_tag2@@": "Jos lähtöaineiston <strong>lähderasteri</strong> on liukuluku, <strong>arvorasteri</strong> on määritettävä, ja sen on oltava kokonaisluku. <strong>Arvorasteri</strong> ohittaa minkä tahansa <strong>lähdekentän</strong> asetuksen.",
	"@@Cost-Allocation_Start-Cost_tag0@@": "Aloituskustannus, josta kustannuslaskenta aloitetaan. Tämän parametrin avulla kiinteän kustannuksen määritys voidaan liittää lähteeseen. 0-kustannuksesta aloittamisen sijasta kustannusalgoritmi aloittaa määritetyllä arvolla.",
	"@@Cost-Allocation_Start-Cost_tag1@@": "Tämän arvon on oltava vähintään nolla. Oletusarvo on 0.",
	"@@Cost-Allocation_Travel-Direction_tag0@@": "Määrittää matkustajan suunnan, kun käytetään lähdevastustustasoa ja lähdealoituskustannusta.",
	"@@Cost-Allocation_Travel-Direction_tag1@@": "<strong>Lähteestä</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään lähtöaineiston lähteen alussa ja liikuttaessa pois muihin kuin lähdesoluihin. Tämä on oletusarvo.",
	"@@Cost-Allocation_Travel-Direction_tag3@@": "<strong>Lähteeseen</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään muun kuin lähdesolun alussa ja liikuttaessa takaisin lähtöaineiston lähteeseen.",
	"@@Cost-Allocation_Travel-Direction_tag5@@": "Määritä joko <strong>Lähteestä</strong>- tai <strong>Lähteeseen</strong>-avainsana, jota käytetään kaikkiin lähteisiin, tai määritä <strong>lähderasterin</strong> kenttä, joka sisältää avainsanat kunkin lähteen matkustussuunnan määrittämiseen. Kyseisen kentän on sisällettävä merkkijono ${FROM_SOURCE} tai ${TO_SOURCE}.",
	"@@Cost-Allocation_Value-Raster_tag0@@": "Lähtöaineiston kokonaislukurasteri, joka määrittää kussakin lähtöaineiston lähdesijainnissa käytettävät vyöhykearvot. Kussakin lähdesijainnin solussa <strong>arvorasterin</strong> määrittämä arvo annetaan kaikille soluille, jotka on varattu lähdesijaintiin laskentaa varten. <strong>Arvorasteri</strong> ohittaa minkä tahansa <strong>lähdekentän</strong> asetuksen.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Tämä parametri simuloi lisääntyviä yrityksiä selvitä kustannuksista, kun kumulatiiviset kustannukset kasvavat. Sitä käytetään matkustajan uupumuksen mallintamiseen. Kasvavan kumulatiivisen kustannuksen saavuttamiseksi solu kerrotaan vastustustasolla ja lisätään seuraavaan soluun liikkuvaan kustannukseen.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "Se on koronkorkoprosentin kaavan muokattu versio, jota käytetään solun kautta liikkumisen näennäiskustannuksen laskemiseen. Vastustustason arvon nouseminen lisää niiden solujen kustannuksia, joissa käydään myöhemmin. Mitä korkeampi on vastustustaso, sitä suurempi  on seuraavassa solussa saavutettava kustannus, joka on muodostettu kullekin seuraavalle liikkeelle. Koska vastustustaso vastaa koronkorkoprosenttia ja kumulatiivisten kustannusten arvot ovat yleensä erittäin suuria, suositellaan pieniä vastustustasoja (kuten arvoa 0,005 tai sitä pienempää) kumulatiivisten kustannusarvojen mukaan.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Cost-Back-Link_Capacity_tag0@@": "Määrittää matkustajan kustannuskapasiteetin lähteelle. Kustannuslaskentaa jatketaan kullekin lähteelle, kunnes määritetty kapasiteetti saavutetaan.",
	"@@Cost-Back-Link_Capacity_tag1@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Cost-Back-Link_Capacity_tag2@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Cost-Back-Link_Cost-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää kustannuksen tai impedanssin, joka liikkuu planimetrisesti jokaisen solun läpi. Kunkin solusijainnin arvo kuvaa sen kautta liikkuvan yksikkökohtaisen kustannuksen etäisyyttä. Kunkin solusijainnin arvo kerrotaan solun resoluutiolla, ja lisäksi arvo kompensoi diagonaalista liikettä, jotta saadaan selville solun läpikulun aiheuttamat kustannukset.",
	"@@Cost-Back-Link_Cost-Raster_tag1@@": "<strong>Kustannusrasterin</strong> arvo voi olla kokonaisluku tai liukuluku, mutta se ei voi olla negatiivinen eikä nolla.",
	"@@Cost-Back-Link_Maximum-Distance_tag0@@": "Kynnysarvo, jota kumulatiiviset kustannusarvot eivät saa ylittää. Jos kumulatiivinen kustannusetäisyys ylittää tämän arvon, tulosaineiston arvo solusijainnille on NoData. Enimmäisetäisyys määrittää laajuuden, jolle kumulatiiviset kustannusetäisyydet lasketaan. Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Kustannusarvoihin käytettävä kerroin.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Tämän parametrin avulla voidaan hallita matkustustilaa tai magnitudia lähteessä. Mitä suurempi kerroin on, sitä suurempi on kunkin solun läpi liikkuva kustannus.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Arvojen on oltava suurempia kuin nolla. Oletusarvo on 1.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Cost-Back-Link_Source-Raster_tag0@@": "Lähdesijaintien pakollinen lähtöaineiston rasteri.",
	"@@Cost-Back-Link_Source-Raster_tag1@@": "Tämä rasteri määrittää solut ja sijainnit, joista viimeisin kumulatiivinen kustannusetäisyys lasketaan jokaiselle tulosaineiston solusijainnille.",
	"@@Cost-Back-Link_Start-Cost_tag0@@": "Aloituskustannus, josta kustannuslaskenta aloitetaan. Tämän parametrin avulla kiinteän kustannuksen määritys voidaan liittää lähteeseen. 0-kustannuksesta aloittamisen sijasta kustannusalgoritmi aloittaa määritetystä arvosta.",
	"@@Cost-Back-Link_Start-Cost_tag1@@": "Tämän arvon on oltava vähintään nolla. Oletusarvo on 0.",
	"@@Cost-Back-Link_Travel-Direction_tag0@@": "Määrittää matkustajan suunnan, kun käytetään lähdevastustustasoa ja lähdealoituskustannusta.",
	"@@Cost-Back-Link_Travel-Direction_tag1@@": "<strong>Lähteestä</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään lähtöaineiston lähteen alussa ja liikuttaessa pois muihin kuin lähdesoluihin. Tämä on oletusarvo.",
	"@@Cost-Back-Link_Travel-Direction_tag3@@": "<strong>Lähteeseen</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään muun kuin lähdesolun alussa ja liikuttaessa takaisin lähtöaineiston lähteeseen.",
	"@@Cost-Back-Link_Travel-Direction_tag5@@": "Määritä joko <strong>Lähteestä</strong>- tai <strong>Lähteeseen</strong>-avainsana, jota käytetään kaikkiin lähteisiin, tai määritä <strong>lähderasterin</strong> kenttä, joka sisältää avainsanat kunkin lähteen matkustussuunnan määrittämiseen. Kyseisen kentän on sisällettävä merkkijono ${FROM_SOURCE} tai ${TO_SOURCE}.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Tämä parametri simuloi lisääntyviä yrityksiä selvitä kustannuksista, kun kumulatiiviset kustannukset kasvavat. Sitä käytetään matkustajan uupumuksen mallintamiseen. Kasvavan kumulatiivisen kustannuksen saavuttamiseksi solu kerrotaan vastustustasolla ja lisätään seuraavaan soluun liikkuvaan kustannukseen.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "Se on koronkorkoprosentin kaavan muokattu versio, jota käytetään solun kautta liikkumisen näennäiskustannuksen laskemiseen. Vastustustason arvon nouseminen lisää niiden solujen kustannuksia, joissa käydään myöhemmin. Mitä korkeampi on vastustustaso, sitä suurempi  on seuraavassa solussa saavutettava kustannus, joka on muodostettu kullekin seuraavalle liikkeelle. Koska vastustustaso vastaa koronkorkoprosenttia ja kumulatiivisten kustannusten arvot ovat yleensä erittäin suuria, suositellaan pieniä vastustustasoja (kuten arvoa 0,005 tai sitä pienempää) kumulatiivisten kustannusarvojen mukaan.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Cost-Distance_Capacity_tag0@@": "Määrittää matkustajan kustannuskapasiteetin lähteelle. Kustannuslaskentaa jatketaan kullekin lähteelle, kunnes määritetty kapasiteetti saavutetaan.",
	"@@Cost-Distance_Capacity_tag1@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Cost-Distance_Capacity_tag2@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Cost-Distance_Cost-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää kustannuksen tai impedanssin, joka liikkuu planimetrisesti jokaisen solun läpi. Kunkin solusijainnin arvo kuvaa sen kautta liikkuvan yksikkökohtaisen kustannuksen etäisyyttä. Kunkin solusijainnin arvo kerrotaan solun resoluutiolla, ja lisäksi arvo kompensoi diagonaalista liikettä, jotta saadaan selville solun läpikulun aiheuttamat kustannukset.",
	"@@Cost-Distance_Cost-Raster_tag1@@": "<strong>Kustannusrasterin</strong> arvo voi olla kokonaisluku tai liukuluku, mutta se ei voi olla negatiivinen eikä nolla.",
	"@@Cost-Distance_Maximum-Distance_tag0@@": "Kynnysarvo, jota kumulatiiviset kustannusarvot eivät saa ylittää. Jos kumulatiivinen kustannusetäisyys ylittää tämän arvon, tulosaineiston arvo solusijainnille on NoData. Enimmäisetäisyys määrittää laajuuden, jolle kumulatiiviset kustannusetäisyydet lasketaan. Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Kustannusarvoihin käytettävä kerroin.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Tämän parametrin avulla voidaan hallita matkustustilaa tai magnitudia lähteessä. Mitä suurempi kerroin on, sitä suurempi on kunkin solun läpi liikkuva kustannus.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Arvojen on oltava suurempia kuin nolla. Oletusarvo on 1.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Cost-Distance_Source-Raster_tag0@@": "Lähdesijaintien pakollinen lähtöaineiston rasteri.",
	"@@Cost-Distance_Source-Raster_tag1@@": "Tämä rasteri määrittää solut ja sijainnit, joista viimeisin kumulatiivinen kustannusetäisyys lasketaan jokaiselle tulosaineiston solusijainnille.",
	"@@Cost-Distance_Start-Cost_tag0@@": "Aloituskustannus, josta kustannuslaskenta aloitetaan. Tämän parametrin avulla kiinteän kustannuksen määritys voidaan liittää lähteeseen. 0-kustannuksesta aloittamisen sijasta kustannusalgoritmi aloittaa määritetyllä arvolla.",
	"@@Cost-Distance_Start-Cost_tag1@@": "Tämän arvon on oltava vähintään nolla. Oletusarvo on 0.",
	"@@Cost-Distance_Travel-Direction_tag0@@": "Määrittää matkustajan suunnan, kun käytetään lähdevastustustasoa ja lähdealoituskustannusta.",
	"@@Cost-Distance_Travel-Direction_tag1@@": "<strong>Lähteestä</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään lähtöaineiston lähteen alussa ja liikuttaessa pois muihin kuin lähdesoluihin. Tämä on oletusarvo.",
	"@@Cost-Distance_Travel-Direction_tag3@@": "<strong>Lähteeseen</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään muun kuin lähdesolun alussa ja liikuttaessa takaisin lähtöaineiston lähteeseen.",
	"@@Cost-Distance_Travel-Direction_tag5@@": "Määritä joko <strong>Lähteestä</strong>- tai <strong>Lähteeseen</strong>-avainsana, jota käytetään kaikkiin lähteisiin, tai määritä <strong>lähderasterin</strong> kenttä, joka sisältää avainsanat kunkin lähteen matkustussuunnan määrittämiseen. Kyseisen kentän on sisällettävä merkkijono ${FROM_SOURCE} tai ${TO_SOURCE}.",
	"@@Curvature_Curvature-Type_tag0@@": "Kaarevuustyyppi korostaa kaltevuuden eri aspekteja. Kaarevuusvaihtoehtoja on kolme:",
	"@@Curvature_Curvature-Type_tag1@@": "Tasomuoto – Tasomuoto on kohtisuorassa enimmäiskaltevuuden suuntaan nähden. Se vaikuttaa koko pinnan virtauksen konvergenssiin ja divergenssiin.",
	"@@Curvature_Curvature-Type_tag2@@": "Profiili – Profiili on samansuuntainen kaltevuuden kanssa ja ilmaisee enimmäiskaltevuuden suunnan. Se vaikuttaa koko pinnan virtauksen kiihtyvyyteen ja hidastumiseen.",
	"@@Curvature_Curvature-Type_tag3@@": "Vakio – Yhdistää sekä <strong>profiilin</strong> että <strong>tasomuodon</strong> kaarevuuden.",
	"@@Curvature_DEM_tag0@@": "Digitaalisen korkeusmallin (DEM) rasteri.",
	"@@Curvature_Z-Factor_tag0@@": "Z-tekijä muokkaa mittayksikön z-yksikköjä, kun ne eroavat lähtöaineiston pinnan x,y-yksiköistä. Jos x,y-yksiköt ja z-yksiköt ovat samassa mittayksikössä, z-tekijän arvoksi on määritettävä 1. Lähtöaineiston pinnan z-arvot kerrotaan z-tekijällä, kun lopullista lähtöaineiston pintaa lasketaan. Jos z-yksiköt ovat esimerkiksi jalkoina ja x,y-yksiköt ovat metreinä, voit muuttaa z-yksiköt jaloista metreiksi käyttämällä z-tekijää 0,3048 (1 jalka = 0,3048 metriä).",
	"@@Divide_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Divide_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Divide_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Divide_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Divide_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Divide_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Divide_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Divide_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Divide_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Divide_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Divide_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Divide_Raster_tag0@@": "Lähtöaineisto, jonka arvo jaetaan toisella lähtöaineistolla.",
	"@@Divide_Raster_tag1@@": "Numeroa voidaan käyttää tämän parametrin lähtöaineistona, jos kohteelle ${Raster2} on määritetty rasteri.",
	"@@Divide_Raster2_tag0@@": "Lähtöaineisto, jonka arvo jaetaan ensimmäisellä lähtöaineistolla.",
	"@@Divide_Raster2_tag1@@": "Numeroa voidaan käyttää tämän parametrin lähtöaineistona, jos kohteelle ${Raster} on määritetty rasteri.",
	"@@Elevation-Void-Fill_DEM_tag0@@": "Lähtöaineiston DEM.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag0@@": "Aukon enimmäisleveyden arvon avulla määritetään täytettävän aukon suurin koko. Jos aukon ympärillä olevan rajaavan ruudun leveys tai korkeus on suurempi kuin aukon enimmäisleveyden arvo, aukkoa ei täytetä. Tämän parametrin yksiköt ovat samoja kuin joita käytetään aineiston koordinaatistotietojärjestelmässä.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag1@@": "Jos parametri on tyhjä tai sen arvo on ${0}, enimmäisleveyttä ei käytetä ja kaikki aukot täytetään. Arvo ${-1} tarkoittaa, että aukkojen täyttöä ei tapahdu.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag0@@": "Haun enimmäissäde, jota käytetään aukkojen täyttämiseen. Aukko, joka on tätä raja-arvoa kauempana kelvollisesta pikselistä, säilyy aukkona. Tämän parametrin yksiköt ovat samoja kuin joita käytetään aineiston koordinaatistotietojärjestelmässä.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag1@@": "Jos tämän parametrin arvo on tyhjä, ${0} tai ${-1}, parametria ei käytetä.",
	"@@Equal-to_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Equal-to_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Equal-to_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Equal-to_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Equal-to_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Equal-to_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Equal-to_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Equal-to_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Equal-to_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Equal-to_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Equal-to_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Equal-to_Raster_tag0@@": "Lähtöaineisto, jota toinen lähtöaineisto käyttää samanarvoisuuden vertaamiseen.",
	"@@Equal-to_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Equal-to_Raster2_tag0@@": "Lähtöaineisto, jota ensimmäinen lähtöaineisto käyttää samanarvoisuuden vertaamiseen.",
	"@@Equal-to_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Euclidean-Allocation_Cellsize_tag0@@": "Solukoko, jolla tulosaineiston rasteri luodaan.",
	"@@Euclidean-Allocation_Cellsize_tag1@@": "Jos solukoko on määritetty eksplisiittisesti <strong>analyysiympäristöissä</strong>, kyseistä solukokoa käytetään oletuksena. Jos sitä ei ole määritetty, tulosaineiston solukoko on sama kuin <strong>Lähderasteri</strong>.",
	"@@Euclidean-Allocation_Distance-Method_tag0@@": "Määrittää, lasketaanko etäisyys planaarisen (litteä maa) tai geodeettisen (ellipsoidi) menetelmän avulla.",
	"@@Euclidean-Allocation_Distance-Method_tag1@@": "Geodeettinen – Lyhyin viiva kahden pisteen välillä maanpinnalla sferoidissa (ellipsoidissa). Siksi tulokset eivät muutu lähtöaineiston tai tulosaineiston projisoinnista huolimatta. Geodeettista viivaa voidaan käyttää esimerkiksi lyhyimmän etäisyyden määrittämiseen kahden kaupungin välillä lentokoneen lentoreitillä. Tästä käytetään myös nimitystä isoympyrän viiva, jos se perustuu ellipsoidin sijasta palloon.",
	"@@Euclidean-Allocation_Distance-Method_tag2@@": "Planaarinen – Planaarisissa mittauksissa käytetään koordinaatistoon liittyvää 2D-matematiikkaa pituuden ja alueen laskemiseen. Vaihtoehto on käytettävissä vain silloin, kun mittaus suoritetaan projisoidussa koodinaattijärjestelmässä ja kyseisen koordinaattijärjestelmän 2D-tasoa käytetään mittausten pohjana.",
	"@@Euclidean-Allocation_Maximum-Distance_tag0@@": "Määrittää kynnysetäisyyden, jonka sisällä lähimmän lähteen on oltava. Jos etäisyys lähimpään lähteeseen ylittää kynnysetäisyyden, kyseisen solun tulosaineisto on ${NoData}.",
	"@@Euclidean-Allocation_Maximum-Distance_tag1@@": "Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Euclidean-Allocation_Raster-Barriers_tag0@@": "Rasteri, joka määrittää esteet.",
	"@@Euclidean-Allocation_Raster-Barriers_tag1@@": "Aineistoryhmän on sisällettävä ${NoData}, jossa ei ole esteitä. Esteet esitetään kelvollisten arvojen, myös nollien, avulla.",
	"@@Euclidean-Allocation_Raster-Barriers_tag2@@": "Este voidaan määrittää kokonaisluku- tai liukulukurasterin avulla.",
	"@@Euclidean-Allocation_Source-Field_tag0@@": "Kenttää käytetään määrittämään arvot lähdesijainteihin. Sen tyypin on oltava kokonaisluku. Jos <strong>arvorasteri</strong> on määritetty, kyseisessä lähtöaineistossa olevat arvot ohittavat <strong>lähdekentän</strong> asetuksen.",
	"@@Euclidean-Allocation_Source-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää lähdesijainnit. Lähin lähde määritetään kullekin tulosaineiston solulle euklidenisen etäisyyden perusteella.",
	"@@Euclidean-Allocation_Source-Raster_tag1@@": "Lähtöaineiston tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Euclidean-Allocation_Value-Raster_tag0@@": "Lähtöaineiston kokonaislukurasteri, joka määrittää kussakin lähtöaineiston lähdesijainnissa käytettävät vyöhykearvot. Kussakin lähdesijainnin solussa <strong>arvorasterin</strong> määrittämä arvo annetaan kaikille soluille, jotka on varattu lähdesijaintiin laskentaa varten. <strong>Arvorasteri</strong> ohittaa minkä tahansa <strong>lähdekentän</strong> asetuksen.",
	"@@Euclidean-Direction_Cellsize_tag0@@": "Solukoko, jolla tulosaineiston rasteri luodaan.",
	"@@Euclidean-Direction_Cellsize_tag1@@": "Jos solukoko on määritetty eksplisiittisesti <strong>analyysiympäristöissä</strong>, kyseistä solukokoa käytetään oletuksena. Jos sitä ei ole määritetty, tulosaineiston solukoko on sama kuin <strong>Lähderasteri</strong>.",
	"@@Euclidean-Direction_Distance-Method_tag0@@": "Määrittää, lasketaanko etäisyys planaarisen (litteä maa) tai geodeettisen (ellipsoidi) menetelmän avulla.",
	"@@Euclidean-Direction_Distance-Method_tag1@@": "Geodeettinen – Lyhyin viiva kahden pisteen välillä maanpinnalla sferoidissa (ellipsoidissa). Siksi tulokset eivät muutu lähtöaineiston tai tulosaineiston projisoinnista huolimatta. Geodeettista viivaa voidaan käyttää esimerkiksi lyhyimmän etäisyyden määrittämiseen kahden kaupungin välillä lentokoneen lentoreitillä. Tästä käytetään myös nimitystä isoympyrän viiva, jos se perustuu ellipsoidin sijasta palloon.",
	"@@Euclidean-Direction_Distance-Method_tag2@@": "Planaarinen – Planaarisissa mittauksissa käytetään koordinaatistoon liittyvää 2D-matematiikkaa pituuden ja alueen laskemiseen. Vaihtoehto on käytettävissä vain silloin, kun mittaus suoritetaan projisoidussa koodinaattijärjestelmässä ja kyseisen koordinaattijärjestelmän 2D-tasoa käytetään mittausten pohjana.",
	"@@Euclidean-Direction_Maximum-Distance_tag0@@": "Määrittää kynnysetäisyyden, jonka sisällä suunta lähimpään lähteeseen lasketaan. Jos etäisyys lähimpään lähteeseen ylittää kynnysetäisyyden, kyseisen solun tulosaineisto on ${NoData}.",
	"@@Euclidean-Direction_Maximum-Distance_tag1@@": "Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Euclidean-Direction_Raster-Barriers_tag0@@": "Rasteri, joka määrittää esteet.",
	"@@Euclidean-Direction_Raster-Barriers_tag1@@": "Aineistoryhmän on sisällettävä NoData, jossa ei ole esteitä. Esteet esitetään kelvollisten arvojen, myös nollien, avulla.",
	"@@Euclidean-Direction_Raster-Barriers_tag2@@": "Este voidaan määrittää kokonaisluku- tai liukulukurasterin avulla.",
	"@@Euclidean-Direction_Source-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää solut tai sijainnit, joihin jokaisen tulosaineiston solusijainnin euklidinen suunta lasketaan.",
	"@@Euclidean-Direction_Source-Raster_tag1@@": "Lähtöaineiston tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Euclidean-Distance_Cellsize_tag0@@": "Solukoko, jolla tulosaineiston rasteri luodaan.",
	"@@Euclidean-Distance_Cellsize_tag1@@": "Jos solukoko on määritetty eksplisiittisesti <strong>analyysiympäristöissä</strong>, kyseistä solukokoa käytetään oletuksena. Jos sitä ei ole määritetty, tulosaineiston solukoko on sama kuin <strong>Lähderasteri</strong>.",
	"@@Euclidean-Distance_Distance-Method_tag0@@": "Määrittää, lasketaanko etäisyys planaarisen (litteä maa) tai geodeettisen (ellipsoidi) menetelmän avulla.",
	"@@Euclidean-Distance_Distance-Method_tag1@@": "Geodeettinen – Lyhyin viiva kahden pisteen välillä maanpinnalla sferoidissa (ellipsoidissa). Siksi tulokset eivät muutu lähtöaineiston tai tulosaineiston projisoinnista huolimatta. Geodeettista viivaa voidaan käyttää esimerkiksi lyhyimmän etäisyyden määrittämiseen kahden kaupungin välillä lentokoneen lentoreitillä. Tästä käytetään myös nimitystä isoympyrän viiva, jos se perustuu ellipsoidin sijasta palloon.",
	"@@Euclidean-Distance_Distance-Method_tag2@@": "Planaarinen – Planaarisissa mittauksissa käytetään koordinaatistoon liittyvää 2D-matematiikkaa pituuden ja alueen laskemiseen. Vaihtoehto on käytettävissä vain silloin, kun mittaus suoritetaan projisoidussa koodinaattijärjestelmässä ja kyseisen koordinaattijärjestelmän 2D-tasoa käytetään mittausten pohjana.",
	"@@Euclidean-Distance_Maximum-Distance_tag0@@": "Kynnysarvo, jota kumulatiiviset etäisyysarvot eivät saa ylittää. Jos kumulatiivinen euklidinen etäisyys ylittää tämän arvon, tulosaineiston arvo solusijainnille on NoData.",
	"@@Euclidean-Distance_Maximum-Distance_tag1@@": "Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Euclidean-Distance_Raster-Barriers_tag0@@": "Rasteri, joka määrittää esteet.",
	"@@Euclidean-Distance_Raster-Barriers_tag1@@": "Aineistoryhmän on sisällettävä ${NoData}, jossa ei ole esteitä. Esteet esitetään kelvollisten arvojen, myös nollien, avulla.",
	"@@Euclidean-Distance_Raster-Barriers_tag2@@": "Este voidaan määrittää kokonaisluku- tai liukulukurasterin avulla.",
	"@@Euclidean-Distance_Source-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää solut tai sijainnit, joihin jokaisen tulosaineiston solusijainnin euklidinen etäisyys lasketaan.",
	"@@Euclidean-Distance_Source-Raster_tag1@@": "Lähtöaineiston tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Exp_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Exp_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Exp_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Exp_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Exp_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Exp_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Exp_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Exp_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Exp_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Exp_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Exp_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Exp_Raster_tag0@@": "Lähtöaineiston arvot, joille e-kantainen eksponentti etsitään.",
	"@@Exp10_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Exp10_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Exp10_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Exp10_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Exp10_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Exp10_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Exp10_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Exp10_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Exp10_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Exp10_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Exp10_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Exp10_Raster_tag0@@": "Lähtöaineiston arvot, joille 10-kantainen eksponentti etsitään.",
	"@@Exp2_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Exp2_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Exp2_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Exp2_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Exp2_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Exp2_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Exp2_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Exp2_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Exp2_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Exp2_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Exp2_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Exp2_Raster_tag0@@": "Lähtöaineiston arvot, joille 2-kantainen eksponentti etsitään.",
	"@@Extract-Bands_Band_tag0@@": "Valitse luettelosta poimittavat kaistat käytetyn <strong>Menetelmä</strong>-parametrivaihtoehdon perusteella.",
	"@@Extract-Bands_Combination_tag0@@": "Kaistayhdistelmä tai kaistajärjestys. Valintaluettelo määräytyy määritetyn <strong>Menetelmä</strong>-vaihtoehdon mukaan. Jos <strong>Menetelmä</strong> on esimerkiksi <strong>Kaistojen nimet</strong>, voit valita sinisen, vihreän ja punaisen yhdistelmän luonnollisen värisen kuvan tuottamiseen.",
	"@@Extract-Bands_Method_tag0@@": "Valitse jokin seuraavista kaistojen poimimismenetelmistä:",
	"@@Extract-Bands_Method_tag1@@": "<strong>Kaistatunnukset</strong> – Kaistamääritys tai kaistan numero, joka on yksilöllinen kullekin anturille. Nämä voivat olla samoja kuin <strong>kaistojen nimet</strong>.",
	"@@Extract-Bands_Method_tag4@@": "<strong>Kaistojen nimet</strong> – Käyttää kaistan nimeä, joka edustaa aallonpituuden väliä sähkömagneettisessa spektrissä (kuten punainen, lähi-infrapuna ja lämpöinfrapuna). Tämä voidaan ilmaista myös kaistan numeron tunnuksena.",
	"@@Extract-Bands_Method_tag6@@": "<strong>Kaistan aallonpituudet</strong> – Aallonpituus sähkömagneettisessa spektrissä.",
	"@@Extract-Bands_Missing-Band-Action_tag0@@": "Määritä toiminto, joka tapahtuu, kun kaistaa ei ole poimittavien kaistojen luettelossa.",
	"@@Extract-Bands_Missing-Band-Action_tag1@@": "<strong>Paras vastaavuus</strong> – Etsii aallonpituuden perusteella parhaan käytettävissä olevan kaistan, jota käytetään puuttuvan kaistan tilalla, jotta funktio ei epäonnistu",
	"@@Extract-Bands_Missing-Band-Action_tag3@@": "<strong>Epäonnistuu</strong> – Jos lähtöaineiston aineistoryhmästä puuttuu jokin <strong>Kaista</strong>-parametrissa määritetyistä kaistoista, funktio epäonnistuu.",
	"@@Extract-Bands_Raster_tag0@@": "Rasterituote, josta kaista tai kaistat poimitaan.",
	"@@Fill_Raster_tag0@@": "Yksikaistainen korkeusrasteri.",
	"@@Fill_Z-Limit_tag0@@": "Maksimikorkeusero, joka on täytettävä vajoaman ja sen laskupisteiden välillä.",
	"@@Fill_Z-Limit_tag1@@": "Jos tälle parametrille ei määritetä arvoa, kaikki vajoamat täytetään syvyydestä riippumatta.",
	"@@Fill_Z-Limit_tag2@@": "<strong>Z-raja</strong> arvon on oltava suurempi kuin nolla.",
	"@@Float_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Float_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Float_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Float_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Float_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Float_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Float_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Float_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Float_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Float_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Float_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Float_Raster_tag0@@": "Liukuluvuksi muutettava lähtöaineiston rasteri.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag0@@": "Lähtöaineiston rasteri, joka näyttää virtaussuunnan jokaisesta solusta.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag1@@": "Virtaussuuntarasteri voidaan luoda suorittamalla <strong>Virtaussuunta</strong>-funktio.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag0@@": "Määrittää lähtöaineiston virtaussuuntarasterin tyypin.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag1@@": "<strong>D8</strong> – Virtaussuuntarasterin tyyppi on D8. Tämä on oletusarvo.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag3@@": "<strong>DINF</strong> – Lähtöaineiston virtaussuuntarasterin tyyppi on D-Infinity (DINF).",
	"@@Flow-Accumulation_Flow-Direction-Type_tag5@@": "<strong>MFD</strong> – Lähtöaineiston virtaussuuntarasterin tyyppi on Multi Flow Direction (MFD).",
	"@@Flow-Accumulation_Output-Data-Type_tag0@@": "Tulosaineiston kertymärasterin tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Flow-Accumulation_Output-Data-Type_tag1@@": "<strong>Liukuluku</strong> – Tulosaineiston rasterin tyyppi on liukuluku. Tämä on oletusarvo.",
	"@@Flow-Accumulation_Output-Data-Type_tag3@@": "<strong>Kokonaisluku</strong> – Tulosaineiston rasterin tyyppi on kokonaisluku.",
	"@@Flow-Accumulation_Weight-Raster_tag0@@": "Valinnainen lähtöaineiston rasteri painoarvon käyttämiseen kussakin pikselissä.",
	"@@Flow-Accumulation_Weight-Raster_tag1@@": "Jos painoarvorasteria ei ole määritetty, kussakin pikselissä käytetään oletuspainoarvoa 1.",
	"@@Flow-Direction_Flow-Direction-Type_tag0@@": "Määrittää lähtöaineiston virtaussuuntarasterin tyypin.",
	"@@Flow-Direction_Flow-Direction-Type_tag1@@": "<strong>D8</strong> – Virtaussuuntarasterin tyyppi on D8. Tämä on oletusarvo.",
	"@@Flow-Direction_Flow-Direction-Type_tag3@@": "<strong>DINF</strong> – Lähtöaineiston virtaussuuntarasterin tyyppi on D-Infinity (DINF).",
	"@@Flow-Direction_Flow-Direction-Type_tag5@@": "<strong>MFD</strong> – Lähtöaineiston virtaussuuntarasterin tyyppi on Multi Flow Direction (MFD).",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag0@@": "Määrittää, virtaavatko reunapikselit aina ulospäin vai normaalien virtaussääntöjen mukaisesti.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag1@@": "<strong>Ei</strong> – Jos maksimipudotus reunapikselin sisällä on suurempi kuin nolla, virtaussuunta määritetään tavalliseen tapaan. Muutoin virtaussuunta on reunaa kohti. Pikselit, joiden tulee virrata pintarasterin reunasta sisäänpäin, virtaavat edelleen niin. Tämä on oletusarvo.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag3@@": "<strong>Kyllä</strong> – Kaikki pintarasterin reunalla olevat pikselit virtaavat pintarasterista ulospäin.",
	"@@Flow-Direction_Raster_tag0@@": "Lähtöaineiston rasteri, joka kuvaa jatkuvaa korkeuspintaa.",
	"@@Flow-Distance_Distance-Type_tag0@@": "Määrittää, lasketaanko virtausetäisyyden pystysuuntainen vai vaakasuuntainen komponentti.",
	"@@Flow-Distance_Distance-Type_tag1@@": "<strong>Vaakasuuntainen</strong> – Virtausetäisyyslaskelmat kuvaavat virtausetäisyyden vaakasuuntaista komponenttia kustakin arvoalueen pikselistä sen virran pikseleihin, johon ne virtaavat.",
	"@@Flow-Distance_Distance-Type_tag3@@": "<strong>Pystysuuntainen</strong> – Virtausetäisyyslaskelmat kuvaavat virtausetäisyyden pystysuuntaista komponenttia kustakin arvoalueen pikselistä sen virran pikseleihin, johon ne virtaavat. Tämä on oletusarvo.",
	"@@Flow-Distance_Flow-Direction-Raster_tag0@@": "Lähtöaineiston rasteri, joka näyttää virtaussuunnan jokaisesta pikselistä.",
	"@@Flow-Distance_Flow-Direction-Raster_tag1@@": "Jos virtaussuuntarasteri on määritetty, laskevat suunnat rajoittuvat lähtöaineiston virtaussuunnissa määritettyihin suuntiin.",
	"@@Flow-Distance_Flow-Direction-Raster_tag2@@": "Virtaussuuntarasteri voidaan luoda käyttämällä Virtaussuunta-funktiota.",
	"@@Flow-Distance_Flow-Direction-Type_tag0@@": "Määrittää lähtöaineiston virtaussuuntarasterin tyypin.",
	"@@Flow-Distance_Flow-Direction-Type_tag1@@": "<strong>D8</strong> – Virtaussuuntarasterin tyyppi on D8. Tämä on oletusarvo.",
	"@@Flow-Distance_Flow-Direction-Type_tag3@@": "<strong>DINF</strong> – Lähtöaineiston virtaussuuntarasterin tyyppi on D-Infinity (DINF).",
	"@@Flow-Distance_Flow-Direction-Type_tag5@@": "<strong>MFD</strong> – Lähtöaineiston virtaussuuntarasterin tyyppi on Multi Flow Direction (MFD).",
	"@@Flow-Distance_Statistics-Type_tag0@@": "Määrittää tilastotyypin, jota käytetään virtausetäisyyden laskemiseen useiden virtausreittien läpi. Jos kustakin solusta on vain yksi virtausreitti soluun virrassa, kaikki tilastotyypit tuottavat saman tuloksen.",
	"@@Flow-Distance_Statistics-Type_tag1@@": "<strong>Minimi</strong> – Jos virtausreittejä on useita, lasketaan minimivirtausetäisyys. Tämä on oletusarvo.",
	"@@Flow-Distance_Statistics-Type_tag3@@": "<strong>Painotettu keskietäisyys</strong> – Jos virtausreittejä on useita, lasketaan virtausetäisyyden painotettu keskiarvo. Kun lasketaan painotettua keskiarvoa, painoarvoina käytetään virtaussuhdetta solusta sen myötävirran naapurisoluihin.",
	"@@Flow-Distance_Statistics-Type_tag5@@": "<strong>Maksimi</strong> – Jos virtausreittejä on useita, lasketaan maksimivirtausetäisyys.",
	"@@Flow-Distance_Stream-Raster_tag0@@": "Lähtöaineiston virtarasteri, joka kuvaa lineaarista virtaverkostoa.",
	"@@Flow-Distance_Surface-Raster_tag0@@": "Lähtöaineiston rasteri, joka kuvaa jatkuvaa korkeuspintaa.",
	"@@Flow-Length_Direction-of-Measurement_tag0@@": "Mittaussuunta virtausreitillä.",
	"@@Flow-Length_Direction-of-Measurement_tag1@@": "<strong>Alavirta</strong> – Laskee virtausreitillä myötäsuunnan etäisyyden kustakin solusta rasterin reunalla olevaan vajoamaan tai laskujoelle.",
	"@@Flow-Length_Direction-of-Measurement_tag3@@": "<strong>Ylävirta</strong> – Laskee virtausreitillä pisimmän vastasuunnan etäisyyden kustakin solusta vedenjakajan yläosaan.",
	"@@Flow-Length_Flow-Direction-Raster_tag0@@": "Lähtöaineiston rasteri, joka näyttää virtaussuunnan jokaisesta solusta.",
	"@@Flow-Length_Flow-Direction-Raster_tag1@@": "Virtaussuuntarasteri voidaan luoda suorittamalla <strong>Virtaussuunta</strong>-funktio.",
	"@@Flow-Length_Weight-Raster_tag0@@": "Valinnainen lähtöaineiston rasteri painoarvon käyttämiseen kussakin solussa.",
	"@@Flow-Length_Weight-Raster_tag1@@": "Jos painoarvorasteria ei ole määritetty, kussakin solussa käytetään oletuspainoarvoa 1.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag0@@": "Ilmaisee, ohittaako tilastollinen laskelma ${NoData}-arvot.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag1@@": "<strong>Valittu</strong> – Määrittää, että ${NoData}-arvo ohitetaan, jos naapurustossa on ${NoData}-arvo. Vain naapurisoluja, joilla on tietoarvot, käytetään tulosaineiston arvon määrittämiseen. Tämä on oletusarvo.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag3@@": "<strong>Ei valittu</strong> – Määrittää, että käsittelysolun tulosaineisto on ${NoData}, jos jonkin naapurisolun arvo on ${NoData}.",
	"@@Focal-Statistics_Neighborhood_tag0@@": "Alueen muoto jokaisen tilastotietojen laskennassa käytetyn solun ympärillä.",
	"@@Focal-Statistics_Neighborhood_tag1@@": "Jokaisella naapurustolla on lisäparametreja, joiden avulla muoto määritetään.",
	"@@Focal-Statistics_Neighborhood_tag2@@": "Rengas, sisäsäde, ulkosäde",
	"@@Focal-Statistics_Neighborhood_tag3@@": "Ympyrä, säde",
	"@@Focal-Statistics_Neighborhood_tag4@@": "Epäsäännöllinen, leveys, korkeus, naapuriarvot",
	"@@Focal-Statistics_Neighborhood_tag5@@": "Suorakaide, leveys, korkeus",
	"@@Focal-Statistics_Neighborhood_tag6@@": "Kiila, säde, alkukulma, loppukulma",
	"@@Focal-Statistics_Neighborhood_tag7@@": "Paino, leveys, korkeus, naapuriarvot",
	"@@Focal-Statistics_Neighborhood_tag8@@": "Epäsäännöllisen naapuruston avulla voit määrittää epäsäännöllisen muotoisen naapuruston käsittelysolun ympärille. Käytä Naapuriarvot-taulua naapuruston ytimen muodon määrittämiseen. Solusijainnin arvo 0 ilmaisee, että solu ei kuulu naapurustoon ja että solua ei käytetä käsittelyyn. Arvo 1 ilmaisee, että sen vastaava solu (ja arvo) kuuluvat naapurustoon.",
	"@@Focal-Statistics_Neighborhood_tag9@@": "Painoarvonaapurusto vastaa epäsäännöllistä naapurustoa siten, että painoarvonaapuruston avulla voit määrittää epäsäännöllisen naapuruston käsittelysolun ympärille, mutta lisäksi voit sen avulla käyttää painoarvoja lähtöaineiston arvoissa. Painoarvoytimen arvot määrittävät, mitkä solusijainnit tulee sisällyttää naapurustoon ja painoarvot, jolla ne kerrotaan. Käytä arvoa 0, jos haluat sulkea solun pois käsittelystä. Painoarvona voidaan käyttää positiivisia ja negatiivisia arvoja sekä desimaaliarvoja. Painoarvonaapurustossa tuettuja ovat vain Keskiarvo-, Keskihajonta- ja Summa-tilastotiedot.",
	"@@Focal-Statistics_Percentile-Value_tag0@@": "Ilmaisee, mikä prosenttipiste lasketaan, kun <strong>Prosenttipiste</strong> on valittuna tilastotyypiksi. Oletusarvo on 90, 90. prosenttipisteelle.",
	"@@Focal-Statistics_Percentile-Value_tag3@@": "Arvot voivat olla 0–100. 0. prosenttipiste vastaa periaatteessa Minimi-tilastotietoa, ja 100. prosenttipiste Maksimi-tilastotietoa sillä poikkeuksella, että tuloksena on liukuluku. Arvo 50 tuottaa saman tuloksen kuin Mediaani-tilastotieto.",
	"@@Focal-Statistics_Raster_tag0@@": "Pakollinen lähtöaineiston rasteri.",
	"@@Focal-Statistics_Statistics-Type_tag0@@": "Laskettava tilastotyyppi.",
	"@@Focal-Statistics_Statistics-Type_tag1@@": "<strong>Enemmistö</strong> – Laskee enemmistön naapuruston soluista (useimmiten esiintyvät arvot).",
	"@@Focal-Statistics_Statistics-Type_tag3@@": "<strong>Maksimi</strong> – Laskee naapuruston solujen maksimiarvon (suurimman arvon).",
	"@@Focal-Statistics_Statistics-Type_tag5@@": "<strong>Keskiarvo</strong> – Laskee naapuruston solujen keskiarvon.",
	"@@Focal-Statistics_Statistics-Type_tag7@@": "<strong>Mediaani</strong> – Laskee naapuruston solujen mediaanin.",
	"@@Focal-Statistics_Statistics-Type_tag9@@": "<strong>Minimi</strong> – Laskee naapuruston solujen minimiarvon (pienimmän arvon).",
	"@@Focal-Statistics_Statistics-Type_tag11@@": "<strong>Vähemmistö</strong> – Laskee vähemmistön naapuruston soluista (harvimmin esiintyvät arvot).",
	"@@Focal-Statistics_Statistics-Type_tag13@@": "<strong>Prosenttipiste</strong> – Laskee naapuruston solujen prosenttipisteen. Voit määrittää, mikä prosenttipiste lasketaan <strong>Prosenttiarvo</strong>-parametrin avulla.",
	"@@Focal-Statistics_Statistics-Type_tag17@@": "<strong>Vaihteluväli</strong> – Laskee naapuruston solujen vaihteluvälin (erotus suurimman ja pienimmän arvon välillä).",
	"@@Focal-Statistics_Statistics-Type_tag19@@": "<strong>Keskihajonta</strong> – Laskee naapuruston solujen keskihajonnan.",
	"@@Focal-Statistics_Statistics-Type_tag21@@": "<strong>Summa</strong> – Laskee naapuruston solujen summan (kaikkien arvojen kokonaissumman).",
	"@@Focal-Statistics_Statistics-Type_tag23@@": "<strong>Diversiteetti</strong> – Laskee naapuruston solujen diversiteetin (yksilöllisten arvojen määrän).",
	"@@Focal-Statistics_Statistics-Type_tag25@@": "Jos lähtöaineiston rasteri on liukuluku, vain seuraavat tyypit ovat käytettävissä: keskiarvo, maksimi, mediaani, minimi, prosenttipiste, vaihteluväli, keskihajonta ja summa.",
	"@@Focal-Statistics_Statistics-Type_tag26@@": "Kun tyyppinä on keskiarvo, mediaani, prosenttipiste tai keskihajonta, tuloksena on aina liukuluku.",
	"@@Focal-Statistics_Statistics-Type_tag27@@": "Keskiarvo on oletustilastotyyppi.",
	"@@Geometric_Constant-Z_tag0@@": "Määritä vakiokorkeustaso, jota käytetään geometrisessa funktiossa.",
	"@@Geometric_DEM_tag0@@": "Määritä DEM, jota käytetään geometrisessa funktiossa. Voit käyttää mosaiikkiaineistoryhmässä olevaan DEM:iä rasteriaineistoryhmänä tai mosaiikkiaineistoryhmänä, jonka tuloksena on DEM.",
	"@@Geometric_Geoid_tag0@@": "Useimmat korkeusaineistoryhmät, kuten USGS NED tai ArcGIS Online World Elevation, ovat ortometrisia korkeuksia, joten yhteensopivuutta varten satelliitin RPC:eiden kanssa tulee valita Geoid-korjaus, sillä RPC:t edellyttävät ellipsoidisia korkeuksia. Valitse <strong>Geoid</strong>-valintaruutu, jos haluat käyttää Geoid-korjausta (EGM96) z-arvoihin, ellei DEM:iin ole jo viitattu ellipsoidisina korkeuksina.",
	"@@Geometric_Method_tag0@@": "Valitse korkeusmenetelmä geometriselle funktiolle:",
	"@@Geometric_Method_tag1@@": "Käytä Z-vakiota – Määritä vakiokorkeus, jotta geometrinen funktio voidaan suorittaa.",
	"@@Geometric_Method_tag2@@": "Käytä Z-vakiota – Määritä vakiokorkeus, jotta geometrinen funktio voidaan suorittaa.",
	"@@Geometric_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Geometric_Z-Factor_tag0@@": "Satelliitin rationaaliset polynomikertoimet (RPC:t) skaalataan korkeusaineistoryhmiä varten pystysuuntaisten metrisyksikköjen avulla. Jos korkeus käyttää muita pystysuuntaisia yksiköitä, anna <strong>Z-kerroin</strong> metrien skaalaamiseksi uudelleen. Jos korkeusyksiköt ovat esimerkiksi jalkoina, voit muuttaa ne metreiksi arvon 0,3048 avulla.",
	"@@Geometric_Z-Offset_tag0@@": "Korkeusarvoon lisättävä perusarvo on DEM. Tätä voidaan käyttää sellaisten korkeusarvojen siirtämiseen, jotka eivät ala merenpinnan tasolta.",
	"@@Geometric_Tolerance_tag0@@": "Määritä suurin sallittava virhe geometrisessä funktiossa pikseleiden määränä. NITF (NCDRD) -rasterityypin oletusarvo on kaksi.",
	"@@Grayscale_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Grayscale_Conversion-Parameters_tag0@@": "Niiden kaistojen painoarvot, jotka muodostavat lähtöaineiston rasterin.",
	"@@Greater-Than_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Greater-Than_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Greater-Than_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Greater-Than_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Greater-Than_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Greater-Than_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Greater-Than_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Greater-Than_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Greater-Than_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Greater-Than_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Greater-Than_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Greater-Than_Raster_tag0@@": "Lähtöaineisto, jota testataan sen määrittämiseksi, onko kyseinen lähtöaineisto suurempi kuin toinen lähtöaineisto.",
	"@@Greater-Than_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Greater-Than_Raster2_tag0@@": "Lähtöaineisto, johon ensimmäistä lähtöaineistoa verrataan sen määrittämiseksi, onko ensimmäinen lähtöaineisto suurempi.",
	"@@Greater-Than_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Greater-Than-Equal_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Greater-Than-Equal_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Greater-Than-Equal_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Greater-Than-Equal_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Greater-Than-Equal_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Greater-Than-Equal_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Greater-Than-Equal_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Greater-Than-Equal_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Greater-Than-Equal_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Greater-Than-Equal_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Greater-Than-Equal_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Greater-Than-Equal_Raster_tag0@@": "Lähtöaineisto, jota testataan sen määrittämiseksi, onko kyseinen lähtöaineisto suurempi tai yhtä suuri kuin toinen lähtöaineisto.",
	"@@Greater-Than-Equal_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Greater-Than-Equal_Raster2_tag0@@": "Lähtöaineisto, johon ensimmäistä lähtöaineistoa verrataan sen määrittämiseksi, onko ensimmäinen lähtöaineisto suurempi tai yhtä suuri.",
	"@@Greater-Than-Equal_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Heat-Index_Heat-Index-Units_tag0@@": "Tulosaineiston rasteriin liittyvä mittayksikkö. Käytettävissä olevat tulosaineiston yksiköt ovat celsius, fahrenheit ja kelvin.",
	"@@Heat-Index_Relative-Humidity-Raster_tag0@@": "Yksikaistainen rasteri, jossa pikseliarvot kuvaavat suhteellista kosteutta prosenttiarvona 0–100.",
	"@@Heat-Index_Temperature-Raster_tag0@@": "Yksikaistainen rasteri, jossa pikseliarvot kuvaavat ympäristön lämpötilaa.",
	"@@Heat-Index_Temperature-Units_tag0@@": "Lähtöaineiston lämpötilarasteriin liittyvä mittayksikkö. Käytettävissä olevat lähtöaineiston yksiköt ovat celsius, fahrenheit ja kelvin.",
	"@@Hillshade_Altitude_tag0@@": "Korkeus on auringon korkeuskulma horisontin yläpuolella, ja sen arvo vaihtelee 0 ja 90 asteen välillä. 0 astetta ilmaisee, että aurinko on horisontissa eli samassa vaakatasossa kuin viitekehys. 90 astetta ilmaisee, että aurinko on suoraan yläpuolella.",
	"@@Hillshade_Altitude_tag1@@": "Tämä parametri on kelvollinen vain, jos <strong>Hillshade-tyyppi</strong> on <strong>Perinteinen</strong>. Oletusarvo on 45 astetta horisontin yläpuolella.",
	"@@Hillshade_Azimuth_tag0@@": "Atsimuutti on auringon suhteellinen sijainti pitkin horisonttia (asteina). Auringon kulma, joka mitataan pohjoisesta myötäpäivään, ilmaisee tämän sijainnin. 0 asteen atsimuutti ilmaisee pohjoisen, 90 asteen atsimuutti idän, 180 atsimuutti etelän ja 270 asteen atsimuutti lännen.",
	"@@Hillshade_Azimuth_tag1@@": "Tämä parametri on kelvollinen vain, jos <strong>Hillshade-tyyppi</strong> on <strong>Perinteinen</strong>. Oletusarvo on 315 astetta, joka on luoteesta.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag0@@": "Käyttämällä tätä vaihtoehtoa voit välttää uudelleenotanta-artefaktit, joita voi esiintyä rasterin reunoilla. Tulosaineiston pikselit rasterin reunalla tai NoData-pikselien vieressä täytetään NoData-arvoilla. Tämän vuoksi on suositeltavaa, että tätä parametria käytetään vain korkeuden mosaiikkiaineistoryhmissä, joissa on päällekkäisiä pikseleitä. Kun päällekkäisiä pikseleitä on saatavilla, NoData-alueet näyttävät tyhjien pikselien sijasta päällekkäisten pikselien arvot.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag1@@": "Ei valittu – Bilineaarista uudelleenotantaa käytetään yhtäläisesti uudelleenotannan suorittamiseksi vinovalovarjostukselle. Käytä tätä vaihtoehtoa, jos korkeusrasteriaineiston sisältävä mosaiikkiaineistoryhmä on puskuliitetty. Tämä on oletusarvo.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag2@@": "Valittu – Bilineaarista uudelleenotantaa käytetään vinovalovarjostukselle kaikkialla muualla paitsi rasterien reunoilla tai NoData-pikselien vieressä. Nämä pikselit täytetään NoData-arvoilla, ja ne näyttävät päällekkäiset pikseliarvot vähentäen täten terävien reunojen mahdollista esiintymistä. Käytä tätä vaihtoehtoa, jos korkeusrasteriaineiston sisältävä mosaiikkiaineistoryhmä muodostuu päällekkäisistä kohteista tai tiileistä.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag3@@": "Funktion tulokset voivat olla aineistosta riippuvaisia. Jos tulosaineistossa on tiilen raja-artefakteja, valitse valintaruudun vaihtoehtoinen ehto.",
	"@@Hillshade_Hillshade-Type_tag0@@": "Ohjaa vinovalovarjostuksen valaistuslähdettä:",
	"@@Hillshade_Hillshade-Type_tag1@@": "Perinteinen – Laskee vinovalovarjostuksen yhdestä valaistussuunnasta. Tämä on oletusarvo. Voit määrittää <strong>atsimuutin</strong> ja <strong>korkeuden</strong> ohjataksesi valonlähteen sijaintia.",
	"@@Hillshade_Hillshade-Type_tag6@@": "Monisuuntainen – Yhdistää valon useista lähteistä, jotta maaston esittämisessä voidaan käyttää kehittynyttä visualisointia.",
	"@@Hillshade_Pixel-Size-Factor_tag0@@": "Pikselikoon kerroin ottaa huomioon mittakaavan muutokset, kun katsoja lähentää tai loitontaa kohdetta karttanäkymässä. Se ohjaa nopeutta, jolla <strong>Z-kerroin</strong> muuttuu.",
	"@@Hillshade_Pixel-Size-Factor_tag3@@": "Tämä parametri on kelvollinen vain, jos <strong>Mittakaavojen</strong> tyyppi on <strong>Säädetty</strong>. Oletusarvo on 0,024.",
	"@@Hillshade_Pixel-Size-Power_tag0@@": "Pikselikoon kerroin ottaa huomioon korkeuden (tai mittakaavan) muutokset, kun katsoja lähentää tai loitontaa kohdetta karttanäkymässä. Se on sellaisessa pikselikoon yhtälössä käytettävä eksponentti, joka ohjaa nopeutta, jolla <strong>Z-kerroin</strong> muuttuu. Sen avulla voidaan välttää korkeuserojen merkittävät menetykset.",
	"@@Hillshade_Pixel-Size-Power_tag3@@": "Tämä parametri on kelvollinen vain, jos <strong>Mittakaavojen</strong> tyyppi on <strong>Säädetty</strong>. Oletusarvo on 0,664.",
	"@@Hillshade_Raster_tag0@@": "Lähtöaineiston korkeusaineistoryhmä.",
	"@@Hillshade_Scaling_tag0@@": "Varjostettu tulos skaalataan dynaamisesti säätämällä z-tekijää jollakin seuraavista vaihtoehdoista:",
	"@@Hillshade_Scaling_tag1@@": "Säädetty – Tämä koskee ei-lineaarista säätöä, jossa käytetään oletusarvoisia <strong>Pikselikoon potenssi</strong>- ja <strong>Pikselikoon kerroin</strong> -arvoja, jotka mukautuvat monenlaisiin korkeuden (mittakaavan) muutoksiin, kun katsoja lähentää tai loitontaa kohdetta. <strong>Säädetty</strong>-parametriasetusta suositellaan, jos käytät maailmanlaajuista aineistoryhmää.",
	"@@Hillshade_Scaling_tag8@@": "Ei mitään – Mittakaavaa ei käytetä. Tämä sopii hyvin yksittäiseen rasteriaineistoryhmään, joka kattaa paikallisen alueen. Tämän käyttöä ei suositella suuria korkeusvaihteluita sisältävissä maailmanlaajuisissa aineistoryhmissä tai useita mittakaavoja sisältävissä kartoissa, koska se tuottaa maaston korkeuseron, jossa on vain vähän vaihtelua pienessä mittakaavassa.",
	"@@Hillshade_Z-Factor_tag0@@": "Z-tekijä on skaalauskerroin, jota käytetään korkeusarvojen muuntamiseen seuraavissa tilanteissa:",
	"@@Hillshade_Z-Factor_tag1@@": "Korkeusyksiköt (kuten metrit tai jalat) halutaan muuttaa karttatason vaakakoordinaattiyksiköiksi, kuten jaloiksi, metreiksi tai asteiksi.",
	"@@Hillshade_Z-Factor_tag2@@": "Pystysuuntainen liioittelu halutaan lisätään visuaalisena tehosteena.",
	"@@Int_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Int_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Int_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Int_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Int_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Int_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Int_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Int_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Int_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Int_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Int_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Int_Raster_tag0@@": "Kokonaisluvuksi muutettava lähtöaineiston rasteri.",
	"@@Interpolate-Irregular-Data_Cellsize_tag0@@": "Tulosaineiston rasterin solukoko havaitaan automaattisesti, mutta voit kuitenkin muuttaa tätä. Vaikka solukokoa voidaan muuttaa, rasterin aineistoryhmän laajuus pysyy samana.",
	"@@Interpolate-Irregular-Data_Input-Samples_tag0@@": "Lähtöaineiston pisteaineisto.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag0@@": "Tälle funktiolle on neljä uudelleenotantamenetelmää:",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag1@@": "<strong>Painotettu käänteinen etäisyys</strong> – Määrittää soluarvot käyttämällä lineaarisesti painotettua otospisteiden tai -solujen yhdistelmää. Painokerroin on tunnettujen pisteiden tai solujen käänteisen etäisyyden funktio.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag3@@": "<strong>Lineaarinen tinning</strong> – Interpoloi pinnan käyttämällä kolmiomitattuja epäsäännöllisiä verkkoja epäsäännöllisen rasterin solujen keskipisteistä ja muuntaa sitten pinnan säännölliseksi rasteriksi.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag5@@": "<strong>Luonnolliset naapurit</strong> – Interpoloi arvon etsimällä kyselypisteen lähtöaineiston näytteiden lähimmän osajoukon ja käyttämällä tähän painoarvoja suhteellisten alueiden perusteella.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag7@@": "<strong>Lähin naapuri</strong> – Laskee pikseliarvon lähimmän pikselin avulla. Jos lähdepikseliä ei ole, uutta pikseliä ei voi luoda tulosaineistoon. Tämä on oletusarvo.",
	"@@Interpolate-Irregular-Data_Search-Radius_tag0@@": "Määrittää valittuun uudelleenotantamenetelmään sisällytettävien pikselien määrän. Oletusarvo on ${3} pikseliä.",
	"@@Interpolate-Irregular-Data_Value-Field_tag0@@": "Jos valitset pistekohdeluokan lähtöaineistoksi, sinun on etsittävä ominaisuustietotaulusta kenttä, joka sisältää pisteiden arvot",
	"@@Is-Null_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Is-Null_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Is-Null_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Is-Null_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Is-Null_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Is-Null_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Is-Null_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Is-Null_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Is-Null_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Is-Null_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Is-Null_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Is-Null_Raster_tag0@@": "Lähtöaineiston rasteri, jota testataan ${NoData} (tyhjäarvo) -solujen määrittämiseksi.",
	"@@Is-Null_Raster_tag1@@": "Lähtöaineiston tyyppi voi olla joko kokonaisluku tai liukuluku.",
	"@@Key-Metadata_Band-Names_tag0@@": "Tätä käytetään ohittamaan rasterin kaistojen nimet. Se on pilkuin eroteltu merkkijono, joka edustaa päivitettyjä kaistojen nimiä.",
	"@@Key-Metadata_Band-Names_tag1@@": "Tämä parametri on valinnainen.",
	"@@Key-Metadata_Metadata-JSON_tag0@@": "Keskeiset metatiedot, jotka lisätään avain-arvo-parien kokoelmaa edustavaan lähtevään rasteriin, joka on kuvattu JSON-merkkijonona. Seuraavassa on esimerkki JSON-merkkijonosta, jota voidaan käyttää tämän funktion lähtöaineistona. Kaikkien tämän parametrin lähtöaineistojen tulee olla samassa muodossa.",
	"@@Key-Metadata_Metadata-JSON_tag1@@": "Keskeisiä metatietoja kuvaava JSON-merkkijono",
	"@@Key-Metadata_Metadata-JSON_tag2@@": "{ \"CloudCover\": 4, \"BandProperties\":[ { \"BandName\": \"Blue\", \"WavelengthMin\": 445, \"WavelengthMax\": 516 }, { \"BandName\": \"Green\", \"WavelengthMin\": 506, \"WavelengthMax\": 595 }, ]}",
	"@@Key-Metadata_Property-Name_tag0@@": "Ohitettava aineistoryhmätason avainominaisuuden nimi.",
	"@@Key-Metadata_Raster_tag0@@": "Rasteri tai mosaiikkiaineistoryhmä, joka sisältää keskeiset lisättävät tai ohitettavat metatiedot.",
	"@@Key-Metadata_Value_tag0@@": "Aineistoryhmätason avainominaisuuden ohitusarvo, jonka haluat määrittää.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag0@@": "Tämä parametri simuloi lisääntyviä yrityksiä selvitä kustannuksista, kun kumulatiiviset kustannukset kasvavat. Sitä käytetään matkustajan uupumuksen mallintamiseen. Kasvavan kumulatiivisen kustannuksen saavuttamiseksi solu kerrotaan vastustustasolla ja lisätään seuraavaan soluun liikkuvaan kustannukseen.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag1@@": "Se on koronkorkoprosentin kaavan muokattu versio, jota käytetään solun kautta liikkuvan näennäiskustannuksen laskemiseen. Vastustustason arvon nouseminen lisää niiden solujen kustannuksia, joissa käydään myöhemmin. Mitä korkeampi on vastustustaso, sitä suurempi  on seuraavassa solussa saavutettava kustannus, joka on muodostettu kullekin seuraavalle liikkeelle. Koska vastustustaso vastaa koronkorkoprosenttia ja kumulatiivisten kustannusten arvot ovat yleensä erittäin suuria, suositellaan pieniä vastustustasoja (kuten arvoa 0,005 tai sitä pienempää) kumulatiivisten kustannusarvojen mukaan.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag2@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Least-Cost-Path_Capacity_tag0@@": "Määrittää matkustajan kustannuskapasiteetin lähteelle. Kustannuslaskentaa jatketaan kullekin lähteelle, kunnes määritetty kapasiteetti saavutetaan.",
	"@@Least-Cost-Path_Capacity_tag1@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Least-Cost-Path_Cost-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää kustannuksen tai impedanssin, joka liikkuu planimetrisesti jokaisen solun läpi. Kunkin solusijainnin arvo kuvaa sen kautta liikkuvan yksikkökohtaisen kustannuksen etäisyyttä. Kunkin solusijainnin arvo kerrotaan solun resoluutiolla, ja lisäksi arvo kompensoi diagonaalista liikettä, jotta saadaan selville solun läpikulun aiheuttamat kustannukset.",
	"@@Least-Cost-Path_Cost-Raster_tag1@@": "<strong>Kustannusrasterin</strong> arvo voi olla kokonaisluku tai liukuluku, mutta se ei voi olla negatiivinen eikä nolla.",
	"@@Least-Cost-Path_Destination-Field_tag0@@": "Tätä kenttää käytetään noutamaan kohdesijaintien arvot.",
	"@@Least-Cost-Path_Destination-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää pikselit, joista selvitetään pienemmin kustannuksen reitti edullisimpaan lähteeseen. Tämä lähtöaineisto koostuu pikseleistä, joilla on kelvolliset arvot, ja muiden pikselien arvoksi on määritettävä ${NoData}. 0 on kelvollinen arvo.",
	"@@Least-Cost-Path_Maximum-Distance_tag0@@": "Kynnysarvo, jota kumulatiiviset kustannusarvot eivät saa ylittää. Jos kumulatiivinen kustannusetäisyys ylittää tämän arvon, tulosaineiston arvo solusijainnille on ${NoData}. Enimmäisetäisyys määrittää laajuuden, jolle kumulatiiviset kustannusetäisyydet lasketaan. Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag0@@": "Tämän parametrin avulla voidaan hallita matkustustilaa tai magnitudia lähteessä. Mitä suurempi kerroin on, sitä suurempi on kunkin solun läpi liikkuva kustannus.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag1@@": "Arvojen on oltava suurempia kuin nolla. Oletusarvo on 1.",
	"@@Least-Cost-Path_Path-Type_tag0@@": "Avainsana, joka määrittää, miten lähtöaineiston kohdeaineiston arvoja ja vyöhykkeitä tulkitaan kustannusreittilaskelmissa:",
	"@@Least-Cost-Path_Path-Type_tag1@@": "<strong>Paras yksittäinen</strong> – Koskee lähtöaineiston kohdeaineiston kaikkia pikseleitä. Pienimmän kustannuksen reitti saadaan pikselistä, josta on kaikkein pienimmän kustannuksen reitit lähtösoluihin.",
	"@@Least-Cost-Path_Path-Type_tag3@@": "<strong>Kukin solu</strong> – Pienimmän kustannuksen reitti määritetään jokaiselle pikselille, jolla on kelvolliset arvot lähtöaineiston kohdeaineistossa, ja reitti tallennetaan tulosaineiston rasteriin. Jokaista lähtöaineiston kohdeaineiston solua käsitellään erikseen. Pienimmän kustannuksen reitti määritetään kussakin tapauksessa solun pohjalta.",
	"@@Least-Cost-Path_Path-Type_tag5@@": "<strong>Jokainen alue</strong> – Pienimmän kustannuksen reitti määritetään jokaiselle vyöhykkeelle lähtöaineiston kohdeaineistossa ja tallennetaan tulosaineiston rasteriin. Pienimmän kustannuksen reitti kullekin vyöhykkeelle alkaa pikselistä, jolla on vyöhykkeen alhaisin kustannus-etäisyys-painoarvo.",
	"@@Least-Cost-Path_Source-Raster_tag0@@": "Tämä on pakollinen lähtöaineiston rasteri, joka määrittää solut ja sijainnit, joista viimeisin kumulatiivinen kustannusetäisyys lasketaan jokaiselle tulosaineiston solusijainnille.",
	"@@Least-Cost-Path_Start-Cost_tag0@@": "Aloituskustannus, josta kustannuslaskenta aloitetaan. Tämän parametrin avulla kiinteän kustannuksen määritys voidaan liittää lähteeseen. 0-kustannuksesta aloittamisen sijasta kustannusalgoritmi aloittaa määritetyllä arvolla.",
	"@@Least-Cost-Path_Start-Cost_tag1@@": "Tämän arvon on oltava vähintään nolla. Oletusarvo on 0.",
	"@@Least-Cost-Path_Travel-Direction_tag0@@": "Määrittää matkustajan suunnan, kun käytetään lähdevastustustasoa ja lähdealoituskustannusta.",
	"@@Least-Cost-Path_Travel-Direction_tag1@@": "<strong>Lähteestä</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään lähtöaineiston lähteen alussa ja liikuttaessa pois muihin kuin lähdesoluihin. Tämä on oletusarvo.",
	"@@Least-Cost-Path_Travel-Direction_tag3@@": "<strong>Lähteeseen</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään muun kuin lähdesolun alussa ja liikuttaessa takaisin lähtöaineiston lähteeseen.",
	"@@Least-Cost-Path_Travel-Direction_tag5@@": "Määritä joko <strong>Lähteestä</strong>- tai <strong>Lähteeseen</strong>-avainsana, jota käytetään kaikkiin lähteisiin, tai määritä <strong>lähderasterin</strong> kenttä, joka sisältää avainsanat kunkin lähteen matkustussuunnan määrittämiseen. Kyseisen kentän on sisällettävä merkkijono ${FROM_SOURCE} tai ${TO_SOURCE}.",
	"@@Less-Than_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Less-Than_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Less-Than_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Less-Than_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Less-Than_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Less-Than_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Less-Than_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Less-Than_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Less-Than_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Less-Than_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Less-Than_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Less-Than_Raster_tag0@@": "Lähtöaineisto, jota testataan sen määrittämiseksi, onko kyseinen lähtöaineisto pienempi kuin toinen lähtöaineisto.",
	"@@Less-Than_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Less-Than_Raster2_tag0@@": "Lähtöaineisto, johon ensimmäistä lähtöaineistoa verrataan sen määrittämiseksi, onko ensimmäinen lähtöaineisto pienempi.",
	"@@Less-Than_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Less-Than-Equal_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Less-Than-Equal_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Less-Than-Equal_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Less-Than-Equal_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Less-Than-Equal_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Less-Than-Equal_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Less-Than-Equal_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Less-Than-Equal_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Less-Than-Equal_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Less-Than-Equal_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Less-Than-Equal_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Less-Than-Equal_Raster_tag0@@": "Lähtöaineisto, jota testataan sen määrittämiseksi, onko kyseinen lähtöaineisto pienempi tai yhtä suuri kuin toinen lähtöaineisto.",
	"@@Less-Than-Equal_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Less-Than-Equal_Raster2_tag0@@": "Lähtöaineisto, johon ensimmäistä lähtöaineistoa verrataan sen määrittämiseksi, onko ensimmäinen lähtöaineisto pienempi tai yhtä suuri.",
	"@@Less-Than-Equal_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Ln_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Ln_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Ln_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Ln_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Ln_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Ln_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Ln_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Ln_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Ln_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Ln_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Ln_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Ln_Raster_tag0@@": "Lähtöaineiston arvot, joille luonnollinen algoritmi (Ln) etsitään.",
	"@@Log10_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Log10_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Log10_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Log10_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Log10_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Log10_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Log10_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Log10_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Log10_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Log10_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Log10_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Log10_Raster_tag0@@": "Lähtöaineiston arvot, joille 10-kantainen logaritmi etsitään.",
	"@@Log2_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Log2_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Log2_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Log2_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Log2_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Log2_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Log2_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Log2_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Log2_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Log2_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Log2_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Log2_Raster_tag0@@": "Lähtöaineiston arvot, joille 2-kantainen logaritmi etsitään.",
	"@@Lookup_Field_tag0@@": "Kenttä, joka sisältää uuden rasterin halutut arvot.",
	"@@Lookup_Field_tag1@@": "Sen on oltava numero.",
	"@@Lookup_Raster_tag0@@": "Lähtöaineiston rasteri, joka sisältää kentän, josta uusi rasteri luodaan.",
	"@@Lookup_Raster_tag1@@": "Sen tyyppi voi olla joko kokonaisluku tai liukuluku.",
	"@@Mask_Included-Ranges_tag0@@": "Sisällytetyt arvoalueet voidaan määrittää kullekin kaistalle asettamalla minimi- ja maksimiarvo. Arvoalueen ulkopuoliset arvot palautetaan ${NoData}-arvoina. Pikseli sisällytetään, jos pikselin arvo kuuluu mihin tahansa määritettyyn arvoalueeseen. Jos siis kaistan 1 arvoalue on 5–10, kaistan 2 arvoalue on 15–20 ja kaistan 1 pikselin arvo on 8, kyseistä pikseliä ei maskata.",
	"@@Mask_NoData-Interpretation_tag0@@": "Tämä viittaa siihen, miten <strong>${NoData}-arvot</strong> vaikuttavat tulosaineiston kuvaan.",
	"@@Mask_NoData-Interpretation_tag3@@": "Voit valita kahdesta seuraavasta vaihtoehdoista:",
	"@@Mask_NoData-Interpretation_tag4@@": "<strong>Täsmäytä kaikki</strong> – Kullekin kaistalle määrittämiesi ${NoData}-arvojen on esiinnyttävä samassa tulosaineiston kuvan pikselissä, jotta ne sisältävät ${NoData}-pikselin.",
	"@@Mask_NoData-Interpretation_tag6@@": "<strong>Täsmäytä mikä tahansa</strong> – Jos määrittämäsi ${NoData}-arvo esiintyy määritetyn kaistan pikselissä, kyseinen pikseli on kyseisessä tulosaineiston kuvassa ${NoData}. Tämä on oletusarvo.",
	"@@Mask_NoData-Values_tag0@@": "NoData-arvot voidaan määrittää jokaiselle kaistalle. Voit määrittää useita arvoja lisäämällä välilyönnein erotellun luettelon.",
	"@@Mask_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Minus_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Minus_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Minus_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Minus_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Minus_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Minus_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Minus_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Minus_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Minus_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Minus_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Minus_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Minus_Raster_tag0@@": "Lähtöaineisto, josta toisen lähtöaineiston arvot vähennetään.",
	"@@Minus_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Minus_Raster2_tag0@@": "Lähtöaineiston arvot, jotka vähennetään ensimmäisen lähtöaineiston arvoista.",
	"@@Minus_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@ML-Classify_Raster_tag0@@": "Lähtöaineiston rasteri, joka luokitellaan käyttämällä suurimman todennäköisyyden luokituksen algoritmia.",
	"@@ML-Classify_Signature-File-or-URL_tag0@@": "${.gsg}-allekirjoitustiedosto.",
	"@@Mod_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan sama lopputulos.",
	"@@Mod_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Mod_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Mod_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Mod_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Mod_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Mod_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Mod_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Mod_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Mod_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Mod_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Mod_Raster_tag0@@": "Osittajan lähtöaineisto.",
	"@@Mod_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Mod_Raster2_tag0@@": "Nimittäjän lähtöaineisto.",
	"@@Mod_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Mosaic-Rasters_Operation_tag0@@": "Ratkaise ristiriidat, jos sinulla on osia vähintään kahdesta päällekkäisestä kuvasta. Vaihtoehdot ovat seuraavat:",
	"@@Mosaic-Rasters_Operation_tag1@@": "<strong>Sekoita</strong> – Laske ja näytä päällekkäisten pikselien keskiarvo antamalla enemmän painoarvoa lähempänä naapurikuvia oleville pikseleille, jotta tuloksena on tasaisempi kuva. Tämä on oletusarvo.",
	"@@Mosaic-Rasters_Operation_tag3@@": "<strong>Ensimmäinen</strong> – Näytä pikselit ensimmäisestä annetun alueen päällekkäisten kuvien luettelon kuvasta.",
	"@@Mosaic-Rasters_Operation_tag5@@": "<strong>Viimeinen</strong> – Näytä pikselit viimeisestä annetun alueen päällekkäisten kuvien luettelon kuvasta.",
	"@@Mosaic-Rasters_Operation_tag7@@": "<strong>Maksimiarvo</strong> – Näytä kaikkien päällekkäisten karttatasojen pikseli, jolla on suurin arvo. Jos käytät tätä vaihtoehtoa, et voi taata, että pikselit näytetään kaikkien potentiaalisen karttatasojen yhdistelmän sijasta vain yhdestä päällekkäisestä kuvasta.",
	"@@Mosaic-Rasters_Operation_tag9@@": "<strong>Keskiarvo</strong> – Laske ja näytä päällekkäisten pikselien keskiarvo.",
	"@@Mosaic-Rasters_Operation_tag11@@": "<strong>Minimiarvo</strong> – Näytä kaikkien päällekkäisten karttatasojen pikseli, jolla on pienin arvo. Jos käytät tätä vaihtoehtoa, et voi taata, että pikselit näytetään kaikkien potentiaalisen karttatasojen yhdistelmän sijasta vain yhdestä päällekkäisestä kuvasta.",
	"@@Mosaic-Rasters_Rasters_tag0@@": "Valitse haluamasi rasterit, joista haluat luoda mosaiikin yhden kuvan muodostamiseksi.",
	"@@NDVI_Infrared-Band-ID_tag0@@": "Määrittää kaistatunnuksen, joka kuvaa sähkömagneettisen spektrin lähi-infrapunaosaa.",
	"@@NDVI_Raster_tag0@@": "Lähtöaineiston monispektrinen rasteri.",
	"@@NDVI_Scientific-Output_tag0@@": "Lähtöaineiston arvot ovat 1,0–1,0, joita käytetään monissa tieteellisissä sovelluksissa.",
	"@@NDVI_Visible-Band-ID_tag0@@": "Määrittää kaistatunnuksen, joka kuvaa sähkömagneettisen spektrin punaista osaa.",
	"@@NDVI-Colorized_Color-Ramp_tag0@@": "Valitse avattavasta luettelosta ennalta määritetty värimalli:",
	"@@NDVI-Colorized_Color-Scheme-Type_tag0@@": "Valitse, millaista värimallia käytetään NDVI-tulosaineiston värittämiseen:",
	"@@NDVI-Colorized_Color-Scheme-Type_tag1@@": "Värimalli – Valitse avattavasta luettelosta ennalta määritetty värikartta: Voit vaihtoehtoisesti siirtyä värikarttatiedostoon.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag2@@": "Väriliukuma – Valitse avattavasta luettelosta ennalta määritetty värimalli.",
	"@@NDVI-Colorized_Colormap_tag0@@": "Valitse avattavasta luettelosta ennalta määritetty värikartta. Voit vaihtoehtoisesti siirtyä värikarttatiedostoon.",
	"@@NDVI-Colorized_Infrared-Band-ID_tag0@@": "Määrittää kaistatunnuksen, joka kuvaa sähkömagneettisen spektrin lähi-infrapunaosaa.",
	"@@NDVI-Colorized_Raster_tag0@@": "Lähtöaineiston monispektrinen rasteri.",
	"@@NDVI-Colorized_Scientific-Output_tag0@@": "Lähtöaineiston arvot ovat 1,0–1,0, joita käytetään monissa tieteellisissä sovelluksissa.",
	"@@NDVI-Colorized_Visible-Band-ID_tag0@@": "Määrittää kaistatunnuksen, joka kuvaa sähkömagneettisen spektrin punaista osaa.",
	"@@Negate_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Negate_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Negate_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Negate_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Negate_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Negate_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Negate_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Negate_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Negate_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Negate_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Negate_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Negate_Raster_tag0@@": "Lähtöaineiston rasteri, joka muunnetaan negatiiviseksi (kertomalla arvolla -1).",
	"@@Nibble_Mask-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, jota käytetään maskina.",
	"@@Nibble_Mask-Raster_tag1@@": "NoData-solut, koska niiden arvot annetaan lähtöaineiston <strong>rasterissa</strong>.",
	"@@Nibble_Mask-Raster_tag4@@": "Maskirasterin tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Nibble_Nibble-NoData-cells_tag0@@": "Määrittää, säilyvätkö lähtöaineiston rasterin NoData-solut NoData-soluina tulosaineiston rasterissa.",
	"@@Nibble_Nibble-NoData-cells_tag1@@": "<strong>Ei</strong> – Määrittää, että lähtöaineiston rasterin NoData-solut säilyvät NoData-soluina tulosaineiston rasterissa. Tämä on oletusarvo.",
	"@@Nibble_Nibble-NoData-cells_tag3@@": "<strong>Kyllä</strong> – Määrittää, että lähtöaineiston rasterin NoData-soluille, jotka ovat maskin alueella, voidaan määrittää lähimmän naapurin arvot, jotta niistä tulee kelvollisia tulosaineiston soluarvoja.",
	"@@Nibble_Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, jolle määritetään lähimmän naapurin arvot.",
	"@@Nibble_Raster_tag1@@": "Lähtöaineiston rasterin tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag0@@": "Määrittää, voidaanko lähtöaineiston rasterin ${NoData}-arvoille määrittää lähimmän naapurin arvot maskirasterin määrittämällä alueella.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag1@@": "<strong>Kyllä</strong> – Määrittää, että lähimmän naapurin arvoa käytetään riippumatta siitä, onko se ${NoData}-arvo tai jokin muu aineiston arvo lähtöaineiston rasterissa. Lähtöaineiston rasterin ${NoData}-arvot voivat vapaasti määrittää lähimmän naapurin arvoa maskissa määritetyillä alueilla. Tämä on oletusarvo.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag3@@": "<strong>Ei</strong> – Määrittää, että vain kelvollisia arvoja voidaan antaa lähimmän naapurin  maskirasterin määrittämällä alueella. Lähtöaineiston rasterin ${NoData}-arvot eivät voi määrittää lähimmän naapurin arvoa maskirasterin alueella.",
	"@@Nibble_Zone-Raster_tag0@@": "Lähtöaineiston vyöhykerasteri.",
	"@@Nibble_Zone-Raster_tag1@@": "Vyöhyke tarkoittaa rasterin kaikkia soluja, joilla on sama arvo riippumatta siitä, ovatko ne vierekkäisiä. Lähtöaineiston vyöhykkeen karttataso määrittää vyöhykkeiden muodon, arvot ja sijainnit. Vyöhykerasterin tyyppi voi olla joko kokonaisluku tai liukuluku.",
	"@@Not-Equal_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Not-Equal_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Not-Equal_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Not-Equal_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Not-Equal_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Not-Equal_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Not-Equal_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Not-Equal_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Not-Equal_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Not-Equal_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Not-Equal_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Not-Equal_Raster_tag0@@": "Lähtöaineisto, jota toinen lähtöaineisto käyttää eriarvoisuuden vertaamiseen.",
	"@@Not-Equal_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Not-Equal_Raster2_tag0@@": "Lähtöaineisto, jota verrataan ensimmäiseen lähtöaineistoon eriarvoisuuden määrittämiseksi.",
	"@@Not-Equal_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Pansharpening_Multispectral_tag0@@": "Monispektrinen rasteri, jota haluat terävöittää pankromaattisen taustan avulla.",
	"@@Pansharpening_Panchromatic_tag0@@": "Yksikaistainen korkean resoluution rasteri, jota käytetään alemman resoluution monispektrisen rasterin terävöittämiseen.",
	"@@Pansharpening_Pansharpening-Type_tag0@@": "Valitse käytettävä terävöittämisen algoritmi.",
	"@@Pansharpening_Pansharpening-Type_tag1@@": "Brovey – Käyttää Brovey-algoritmia aineiston yhdistämiseen spektrimallinnuksen perusteella.",
	"@@Pansharpening_Pansharpening-Type_tag2@@": "Esri – Käyttää Esri-algoritmia aineiston yhdistämiseen spektrimallinnuksen perusteella.",
	"@@Pansharpening_Pansharpening-Type_tag3@@": "Gram-Schmidt – Käyttää spektrin terävöittämiseen tarkoitettua Gram-Schmidt-algoritmia monispektrisen aineiston terävöittämiseen.",
	"@@Pansharpening_Pansharpening-Type_tag4@@": "IHS – Käyttää Intensiteetti-, Värisävy- ja Saturaatio-väritilaa aineiston yhdistämiseen.",
	"@@Pansharpening_Pansharpening-Type_tag5@@": "Keskiarvo – Käyttää punaisten, vihreiden ja sinisten arvojen sekä pankromaattisen pikseliarvon välistä keskiarvoa.",
	"@@Pansharpening_Weights_tag0@@": "Määritä punaisten, vihreiden ja  sinisten kaistojen sekä infrapunakaistojen painoarvot. Kaikkien arvojen tulee olla 0–1.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Tämä parametri simuloi lisääntyviä yrityksiä selvitä kustannuksista, kun kumulatiiviset kustannukset kasvavat. Sitä käytetään matkustajan uupumuksen mallintamiseen. Kasvavan kumulatiivisen kustannuksen saavuttamiseksi solu kerrotaan vastustustasolla ja lisätään seuraavaan soluun liikkuvaan kustannukseen.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "Se on koronkorkoprosentin kaavan muokattu versio, jota käytetään solun kautta liikkuvan näennäiskustannuksen laskemiseen. Vastustustason arvon nouseminen lisää niiden solujen kustannuksia, joissa käydään myöhemmin. Mitä korkeampi on vastustustaso, sitä suurempi  on seuraavassa solussa saavutettava kustannus, joka on muodostettu kullekin seuraavalle liikkeelle. Koska vastustustaso vastaa koronkorkoprosenttia ja kumulatiivisten kustannusten arvot ovat yleensä erittäin suuria, suositellaan pieniä vastustustasoja (kuten arvoa 0,005 tai sitä pienempää) kumulatiivisten kustannusarvojen mukaan.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Path-Distance_Capacity_tag0@@": "Määrittää matkustajan kustannuskapasiteetin lähteelle. Kustannuslaskentaa jatketaan kullekin lähteelle, kunnes määritetty kapasiteetti saavutetaan.",
	"@@Path-Distance_Capacity_tag1@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Path-Distance_Cost-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää kustannuksen tai impedanssin, joka liikkuu planimetrisesti jokaisen solun läpi. Kunkin solusijainnin arvo kuvaa sen kautta liikkuvan yksikkökohtaisen kustannuksen etäisyyttä. Kunkin solusijainnin arvo kerrotaan solun resoluutiolla, ja lisäksi arvo kompensoi diagonaalista liikettä, jotta saadaan selville solun läpikulun aiheuttamat kustannukset.",
	"@@Path-Distance_Cost-Raster_tag1@@": "<strong>Kustannusrasterin</strong> arvo voi olla kokonaisluku tai liukuluku, mutta se ei voi olla negatiivinen eikä nolla.",
	"@@Path-Distance_horizontalfactor_tag0@@": "<p>Määrittää vaakasuoran kustannustekijän ja vaakasuoran, suhteellisesti liikkuvan kulman välisen suhteen (HRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään HF- ja HRMA-akronyymeja. HF (Horizontal Factor) tarkoittaa vaakasuoraa tekijää, joka määrittää vaakasuuntaisen ongelman, joka esiintyy liikuttaessa solusta toiseen. HRMA (Horizontal Relative Moving Angle) tarkoittaa vaakasuuntaista suhteellisesti liikkuvaa kulmaa, joka määrittää lähtösolun vaakasuunnan ja liikkuvan suunnan välisen kulman.</p><p><strong>Vaakasuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – Ilmaisee, että HF:ksi määritetään nollatekijään liitetty arvo, jos HRMA on pienempi kuin leikkauskulma. Muutoin se on ääretön.</li><li><strong>Eteenpäin</strong> – Ilmaisee, että vain eteenpäin suuntautuva liike sallitaan. HRMA:n on oltava suurempi tai yhtä suuri kuin 0 ja pienempi kuin 90 astetta (0 &lt;= HRMA &lt; 90). Jos HRMA on suurempi kuin 0 ja pienempi kuin 45 astetta, solun HF:ksi määritetään nollatekijään liitetty arvo. Jos HRMA on suurempi tai yhtä suuri kuin 45 astetta, käytetään sivun arvon muokkaajan arvoa. Minkä tahansa HRMA-arvon, joka on suurempi tai yhtä suuri kuin 90 astetta, HF:ksi määritetään ääretön.</li><li><strong>Lineaarinen</strong> – määrittää, että HF on HRMA:n lineaarinen funktio.</li><li><strong>Käänteinen lineaarinen</strong> – määrittää, että HF on HRMA:n käänteinen lineaarinen funktio.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään HF:n määrittämiseen käytetty vaakasuuntaisen tekijän kaavio.</li></ul><p>Vaakasuoran tekijän muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – vaakasuora tekijä, jota käytetään, kun HRMA on nolla. Tämä tekijä määrittää, mihin vaakasuoran tekijän funktion y-leikkauspiste sijoitetaan.</li><li><strong>Leikkaa kulma</strong> – määrittää HRMA-kulman, jonka ylittyessä HF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – muodostaa sen suoran viivan kaltevuuden, jota käytetään vaakasuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Sivun arvo</strong> – määrittää HF:n, jos HRMA on suurempi tai yhtä suuri kuin 45 astetta ja pienempi kuin 90 astetta ja jos vaakasuoran tekijän<strong>Eteenpäin</strong>-avainsana on määritetty.</li><li><strong>Taulun nimi</strong> – määrittää HF:n määrittävän taulun nimen.</li></ul>",
	"@@Path-Distance_Horizontal-Raster_tag0@@": "Rasteri, joka määrittää vaakasuunnan kussakin solussa.",
	"@@Path-Distance_Horizontal-Raster_tag1@@": "Rasterin arvojen on oltava kokonaislukuja (0–360): 0 astetta on pohjoinen tai näkymän yläreuna ja arvot kasvavat myötäpäivään. Tasaisille alueille on annettava arvo -1. Kunkin sijainnin arvoja käytetään yhdessä <strong>vaakasuoran tekijän</strong> kanssa sen vaakasuuntaisen kustannuksen määrittämiseksi, joka syntyy liikuttaessa solusta sen naapureihin.",
	"@@Path-Distance_Maximum-Distance_tag0@@": "Kynnysarvo, jota kumulatiiviset kustannusarvot eivät saa ylittää. Jos kumulatiivinen kustannusetäisyys ylittää tämän arvon, tulosaineiston arvo solusijainnille on NoData. Enimmäisetäisyys määrittää laajuuden, jolle kumulatiiviset kustannusetäisyydet lasketaan. Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Kustannusarvoihin käytettävä kerroin.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Tämän parametrin avulla voidaan hallita matkustustilaa tai magnitudia lähteessä. Mitä suurempi kerroin on, sitä suurempi on kunkin solun läpi liikkuva kustannus.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Arvojen on oltava suurempia kuin nolla. Oletusarvo on 1.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Path-Distance_Source-Raster_tag0@@": "Lähdesijaintien pakollinen lähtöaineiston rasteri.",
	"@@Path-Distance_Source-Raster_tag1@@": "Tämä rasteri määrittää solut ja sijainnit, joista viimeisin kumulatiivinen kustannusetäisyys lasketaan jokaiselle tulosaineiston solusijainnille.",
	"@@Path-Distance_Source-Raster_tag2@@": "Sen tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Path-Distance_Start-Cost_tag0@@": "Aloituskustannus, josta kustannuslaskenta aloitetaan. Tämän parametrin avulla kiinteän kustannuksen määritys voidaan liittää lähteeseen. 0-kustannuksesta aloittamisen sijasta kustannusalgoritmi aloittaa määritetyllä arvolla.",
	"@@Path-Distance_Start-Cost_tag1@@": "Tämän arvon on oltava vähintään nolla. Oletusarvo on 0.",
	"@@Path-Distance_Surface-Raster_tag0@@": "Rasteri, joka määrittää korkeusarvot kussakin solusijainnissa.",
	"@@Path-Distance_Surface-Raster_tag1@@": "Arvojen avulla lasketaan todellinen pinnan etäisyys kuljettujen solujen välillä.",
	"@@Path-Distance_Travel-Direction_tag0@@": "Määrittää matkustajan suunnan, kun käytetään lähdevastustustasoa ja lähdealoituskustannusta.",
	"@@Path-Distance_Travel-Direction_tag1@@": "<strong>Lähteestä</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään lähtöaineiston lähteen alussa ja liikuttaessa pois muihin kuin lähdesoluihin. Tämä on oletusarvo.",
	"@@Path-Distance_Travel-Direction_tag3@@": "<strong>Lähteeseen</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään muun kuin lähdesolun alussa ja liikuttaessa takaisin lähtöaineiston lähteeseen.",
	"@@Path-Distance_Travel-Direction_tag5@@": "Määritä joko <strong>Lähteestä</strong>- tai <strong>Lähteeseen</strong>-avainsana, jota käytetään kaikkiin lähteisiin, tai määritä <strong>lähderasterin</strong> kenttä, joka sisältää avainsanat kunkin lähteen matkustussuunnan määrittämiseen. Kyseisen kentän on sisällettävä merkkijono ${FROM_SOURCE} tai ${TO_SOURCE}.",
	"@@Path-Distance_verticalfactor_tag0@@": "<p>Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen (VRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään VF- ja HRMA-akronyymeja. VF (Vertical Factor) tarkoittaa pystysuoraa tekijää, joka määrittää pystysuuntaisen vaikeuden, joka esiintyy liikuttaessa solusta toiseen. VRMA (Vertical Relative Moving Angle) tarkoittaa pystysuoraa, suhteellisesti liikkuvaa kulmaa, joka määrittää kaltevuuskulman lähtösolun (käsittelysolun) ja kohdesolun välillä.</p><p><strong>Pystysuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – määrittää, että VF:ksi määritetään nollatekijään liitetty arvo, jos VRMA on suurempi kuin matala leikkauskulma ja pienempi kuin korkea leikkauskulma. Muutoin se on ääretön.</li><li><strong>Lineaarinen</strong> – ilmaisee, että VF on VRMA:n lineaarinen funktio.</li><li><strong>Symmetrinen lineaarinen</strong> – määrittää, että VF on VRMA:n lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Käänteinen lineaarinen</strong> – ilmaisee, että VF on VRMA:n käänteinen lineaarinen funktio.</li><li><strong>Symmetrinen käänteinen lineaarinen</strong> – määrittää, että VF on VRMA:n käänteinen lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Cos</strong> – määrittää VF:n VRMA:n kosinipohjaiseksi funktioksi.</li><li><strong>Sec</strong> – määrittää VF:n VRMA:n sekanttipohjaiseksi funktioksi.</li><li><strong>Cos–Sec</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Sec–Cos</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään VF:n määrittämiseen käytetty pystysuuntaisen tekijän kaavio.</li></ul><p>Pystysuuntaisten avainsanojen muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – muodostaa pystysuoran tekijän, jota käytetään, kun VRMA on nolla. Tämä tekijä määrittää, mihin määritetyn funktion y-leikkauspiste sijoitetaan. Määritelmän mukaan nollatekijää ei voi käyttää trigonometrisissä pystysuuntaisissa funktioissa (COS, SEC, COS-SEC tai SEC-COS). Y-leikkauspiste määritetään näiden funktioiden avulla.</li><li><strong>Matala leikkauskulma</strong> – määrittää VRMA-kulman, jonka alittuessa VF:ksi määritetään ääretön.</li><li><strong>Korkea leikkauskulma</strong> – määrittää VRMA-kulman, jonka ylittyessä VF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – määrittää suoran viivan kaltevuuden, jota käytetään seuraavien pystysuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Taulun nimi</strong> – määrittää VF:n määrittävän taulun nimen.</li></ul>",
	"@@Path-Distance_Vertical-Raster_tag0@@": "Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen.",
	"@@Path-Distance_Vertical-Raster_tag1@@": "Arvojen avulla lasketaan kaltevuus, jota käytetään sen pystysuoran tekijän määrittämiseen, joka esiintyy liikuttaessa solusta toiseen.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Tämä parametri simuloi lisääntyviä yrityksiä selvitä kustannuksista, kun kumulatiiviset kustannukset kasvavat. Sitä käytetään matkustajan uupumuksen mallintamiseen. Kasvavan kumulatiivisen kustannuksen saavuttamiseksi solu kerrotaan vastustustasolla ja lisätään seuraavaan soluun liikkuvaan kustannukseen.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "Se on koronkorkoprosentin kaavan muokattu versio, jota käytetään solun kautta liikkuvan näennäiskustannuksen laskemiseen. Vastustustason arvon nouseminen lisää niiden solujen kustannuksia, joissa käydään myöhemmin. Mitä korkeampi on vastustustaso, sitä suurempi  on seuraavassa solussa saavutettava kustannus, joka on muodostettu kullekin seuraavalle liikkeelle. Koska vastustustaso vastaa koronkorkoprosenttia ja kumulatiivisten kustannusten arvot ovat yleensä erittäin suuria, suositellaan pieniä vastustustasoja (kuten arvoa 0,005 tai sitä pienempää) kumulatiivisten kustannusarvojen mukaan.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Path-Distance-Allocation_Capacity_tag0@@": "Määrittää matkustajan kustannuskapasiteetin lähteelle. Kustannuslaskentaa jatketaan kullekin lähteelle, kunnes määritetty kapasiteetti saavutetaan.",
	"@@Path-Distance-Allocation_Capacity_tag1@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Path-Distance-Allocation_Cost-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää kustannuksen tai impedanssin, joka liikkuu planimetrisesti jokaisen solun läpi. Kunkin solusijainnin arvo kuvaa sen kautta liikkuvan yksikkökohtaisen kustannuksen etäisyyttä. Kunkin solusijainnin arvo kerrotaan solun resoluutiolla, ja lisäksi arvo kompensoi diagonaalista liikettä, jotta saadaan selville solun läpikulun aiheuttamat kustannukset.",
	"@@Path-Distance-Allocation_Cost-Raster_tag1@@": "<strong>Kustannusrasterin</strong> arvo voi olla kokonaisluku tai liukuluku, mutta se ei voi olla negatiivinen eikä nolla.",
	"@@Path-Distance-Allocation_horizontalfactor_tag0@@": "<p>Määrittää vaakasuoran kustannustekijän ja vaakasuoran, suhteellisesti liikkuvan kulman välisen suhteen (HRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään HF- ja HRMA-akronyymeja. HF (Horizontal Factor) tarkoittaa vaakasuoraa tekijää, joka määrittää vaakasuuntaisen ongelman, joka esiintyy liikuttaessa solusta toiseen. HRMA (Horizontal Relative Moving Angle) tarkoittaa vaakasuuntaista suhteellisesti liikkuvaa kulmaa, joka määrittää lähtösolun vaakasuunnan ja liikkuvan suunnan välisen kulman.</p><p><strong>Vaakasuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – Ilmaisee, että HF:ksi määritetään nollatekijään liitetty arvo, jos HRMA on pienempi kuin leikkauskulma. Muutoin se on ääretön.</li><li><strong>Eteenpäin</strong> – Ilmaisee, että vain eteenpäin suuntautuva liike sallitaan. HRMA:n on oltava suurempi tai yhtä suuri kuin 0 ja pienempi kuin 90 astetta (0 &lt;= HRMA &lt; 90). Jos HRMA on suurempi kuin 0 ja pienempi kuin 45 astetta, solun HF:ksi määritetään nollatekijään liitetty arvo. Jos HRMA on suurempi tai yhtä suuri kuin 45 astetta, käytetään sivun arvon muokkaajan arvoa. Minkä tahansa HRMA-arvon, joka on suurempi tai yhtä suuri kuin 90 astetta, HF:ksi määritetään ääretön.</li><li><strong>Lineaarinen</strong> – määrittää, että HF on HRMA:n lineaarinen funktio.</li><li><strong>Käänteinen lineaarinen</strong> – määrittää, että HF on HRMA:n käänteinen lineaarinen funktio.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään HF:n määrittämiseen käytetty vaakasuuntaisen tekijän kaavio.</li></ul><p>Vaakasuoran tekijän muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – vaakasuora tekijä, jota käytetään, kun HRMA on nolla. Tämä tekijä määrittää, mihin vaakasuoran tekijän funktion y-leikkauspiste sijoitetaan.</li><li><strong>Leikkaa kulma</strong> – määrittää HRMA-kulman, jonka ylittyessä HF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – muodostaa sen suoran viivan kaltevuuden, jota käytetään vaakasuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Sivun arvo</strong> – määrittää HF:n, jos HRMA on suurempi tai yhtä suuri kuin 45 astetta ja pienempi kuin 90 astetta ja jos vaakasuoran tekijän<strong>Eteenpäin</strong>-avainsana on määritetty.</li><li><strong>Taulun nimi</strong> – määrittää HF:n määrittävän taulun nimen.</li></ul>",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag0@@": "Rasteri, joka määrittää vaakasuunnan kussakin solussa.",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag1@@": "Rasterin arvojen on oltava kokonaislukuja (0–360): 0 astetta on pohjoinen tai näkymän yläreuna ja arvot kasvavat myötäpäivään. Tasaisille alueille on annettava arvo -1. Kunkin sijainnin arvoja käytetään yhdessä <strong>vaakasuoran tekijän</strong> kanssa sen vaakasuuntaisen kustannuksen määrittämiseksi, joka syntyy liikuttaessa solusta sen naapureihin.",
	"@@Path-Distance-Allocation_Maximum-Distance_tag0@@": "Kynnysarvo, jota kumulatiiviset kustannusarvot eivät saa ylittää. Jos kumulatiivinen kustannusetäisyys ylittää tämän arvon, tulosaineiston arvo solusijainnille on NoData. Enimmäisetäisyys määrittää laajuuden, jolle kumulatiiviset kustannusetäisyydet lasketaan. Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Kustannusarvoihin käytettävä kerroin.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Tämän parametrin avulla voidaan hallita matkustustilaa tai magnitudia lähteessä. Mitä suurempi kerroin on, sitä suurempi on kunkin solun läpi liikkuva kustannus.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Arvojen on oltava suurempia kuin nolla. Oletusarvo on 1.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Path-Distance-Allocation_Source-Field_tag0@@": "Kenttää käytetään määrittämään arvot lähdesijainteihin. Sen tyypin on oltava kokonaisluku. Jos <strong>arvorasteri</strong> on määritetty, kyseisessä lähtöaineistossa olevat arvot ohittavat <strong>lähdekentän</strong> asetuksen.",
	"@@Path-Distance-Allocation_Source-Raster_tag0@@": "Lähdesijaintien pakollinen lähtöaineiston rasteri.",
	"@@Path-Distance-Allocation_Source-Raster_tag1@@": "Tämä rasteri määrittää solut ja sijainnit, joista viimeisin kumulatiivinen kustannusetäisyys lasketaan jokaiselle tulosaineiston solusijainnille.",
	"@@Path-Distance-Allocation_Source-Raster_tag2@@": "Sen tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Path-Distance-Allocation_Start-Cost_tag0@@": "Aloituskustannus, josta kustannuslaskenta aloitetaan. Tämän parametrin avulla kiinteän kustannuksen määritys voidaan liittää lähteeseen. 0-kustannuksesta aloittamisen sijasta kustannusalgoritmi aloittaa määritetyllä arvolla.",
	"@@Path-Distance-Allocation_Start-Cost_tag1@@": "Tämän arvon on oltava vähintään nolla. Oletusarvo on 0.",
	"@@Path-Distance-Allocation_Surface-Raster_tag0@@": "Rasteri, joka määrittää korkeusarvot kussakin solusijainnissa.",
	"@@Path-Distance-Allocation_Surface-Raster_tag1@@": "Arvojen avulla lasketaan todellinen pinnan etäisyys kuljettujen solujen välillä.",
	"@@Path-Distance-Allocation_Travel-Direction_tag0@@": "Määrittää matkustajan suunnan, kun käytetään lähdevastustustasoa ja lähdealoituskustannusta.",
	"@@Path-Distance-Allocation_Travel-Direction_tag1@@": "<strong>Lähteestä</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään lähtöaineiston lähteen alussa ja liikuttaessa pois muihin kuin lähdesoluihin. Tämä on oletusarvo.",
	"@@Path-Distance-Allocation_Travel-Direction_tag3@@": "<strong>Lähteeseen</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään muun kuin lähdesolun alussa ja liikuttaessa takaisin lähtöaineiston lähteeseen.",
	"@@Path-Distance-Allocation_Travel-Direction_tag5@@": "Määritä joko <strong>Lähteestä</strong>- tai <strong>Lähteeseen</strong>-avainsana, jota käytetään kaikkiin lähteisiin, tai määritä <strong>lähderasterin</strong> kenttä, joka sisältää avainsanat kunkin lähteen matkustussuunnan määrittämiseen. Kyseisen kentän on sisällettävä merkkijono ${FROM_SOURCE} tai ${TO_SOURCE}.",
	"@@Path-Distance-Allocation_Value-Raster_tag0@@": "Lähtöaineiston kokonaislukurasteri, joka määrittää kussakin lähtöaineiston lähdesijainnissa käytettävät vyöhykearvot. Kussakin lähdesijainnin solussa <strong>arvorasterin</strong> määrittämä arvo annetaan kaikille soluille, jotka on varattu lähdesijaintiin laskentaa varten. <strong>Arvorasteri</strong> ohittaa minkä tahansa <strong>lähdekentän</strong> asetuksen.",
	"@@Path-Distance-Allocation_verticalfactor_tag0@@": "<p>Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen (VRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään VF- ja HRMA-akronyymeja. VF (Vertical Factor) tarkoittaa pystysuoraa tekijää, joka määrittää pystysuuntaisen vaikeuden, joka esiintyy liikuttaessa solusta toiseen. VRMA (Vertical Relative Moving Angle) tarkoittaa pystysuoraa, suhteellisesti liikkuvaa kulmaa, joka määrittää kaltevuuskulman lähtösolun (käsittelysolun) ja kohdesolun välillä.</p><p><strong>Pystysuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – määrittää, että VF:ksi määritetään nollatekijään liitetty arvo, jos VRMA on suurempi kuin matala leikkauskulma ja pienempi kuin korkea leikkauskulma. Muutoin se on ääretön.</li><li><strong>Lineaarinen</strong> – ilmaisee, että VF on VRMA:n lineaarinen funktio.</li><li><strong>Symmetrinen lineaarinen</strong> – määrittää, että VF on VRMA:n lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Käänteinen lineaarinen</strong> – ilmaisee, että VF on VRMA:n käänteinen lineaarinen funktio.</li><li><strong>Symmetrinen käänteinen lineaarinen</strong> – määrittää, että VF on VRMA:n käänteinen lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Cos</strong> – määrittää VF:n VRMA:n kosinipohjaiseksi funktioksi.</li><li><strong>Sec</strong> – määrittää VF:n VRMA:n sekanttipohjaiseksi funktioksi.</li><li><strong>Cos–Sec</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Sec–Cos</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään VF:n määrittämiseen käytetty pystysuuntaisen tekijän kaavio.</li></ul><p>Pystysuuntaisten avainsanojen muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – muodostaa pystysuoran tekijän, jota käytetään, kun VRMA on nolla. Tämä tekijä määrittää, mihin määritetyn funktion y-leikkauspiste sijoitetaan. Määritelmän mukaan nollatekijää ei voi käyttää trigonometrisissä pystysuuntaisissa funktioissa (COS, SEC, COS-SEC tai SEC-COS). Y-leikkauspiste määritetään näiden funktioiden avulla.</li><li><strong>Matala leikkauskulma</strong> – määrittää VRMA-kulman, jonka alittuessa VF:ksi määritetään ääretön.</li><li><strong>Korkea leikkauskulma</strong> – määrittää VRMA-kulman, jonka ylittyessä VF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – määrittää suoran viivan kaltevuuden, jota käytetään seuraavien pystysuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Taulun nimi</strong> – määrittää VF:n määrittävän taulun nimen.</li></ul>",
	"@@Path-Distance-Allocation_Vertical-Raster_tag0@@": "Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen.",
	"@@Path-Distance-Allocation_Vertical-Raster_tag1@@": "Arvojen avulla lasketaan kaltevuus, jota käytetään sen pystysuoran tekijän määrittämiseen, joka esiintyy liikuttaessa solusta toiseen.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Tämä parametri simuloi lisääntyviä yrityksiä selvitä kustannuksista, kun kumulatiiviset kustannukset kasvavat. Sitä käytetään matkustajan uupumuksen mallintamiseen. Kasvavan kumulatiivisen kustannuksen saavuttamiseksi solu kerrotaan vastustustasolla ja lisätään seuraavaan soluun liikkuvaan kustannukseen.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "Se on koronkorkoprosentin kaavan muokattu versio, jota käytetään solun kautta liikkuvan näennäiskustannuksen laskemiseen. Vastustustason arvon nouseminen lisää niiden solujen kustannuksia, joissa käydään myöhemmin. Mitä korkeampi on vastustustaso, sitä suurempi  on seuraavassa solussa saavutettava kustannus, joka on muodostettu kullekin seuraavalle liikkeelle. Koska vastustustaso vastaa koronkorkoprosenttia ja kumulatiivisten kustannusten arvot ovat yleensä erittäin suuria, suositellaan pieniä vastustustasoja (kuten arvoa 0,005 tai sitä pienempää) kumulatiivisten kustannusarvojen mukaan.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Path-Distance-Back-Link_Capacity_tag0@@": "Määrittää matkustajan kustannuskapasiteetin lähteelle. Kustannuslaskentaa jatketaan kullekin lähteelle, kunnes määritetty kapasiteetti saavutetaan.",
	"@@Path-Distance-Back-Link_Capacity_tag1@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, joka määrittää kustannuksen tai impedanssin, joka liikkuu planimetrisesti jokaisen solun läpi. Kunkin solusijainnin arvo kuvaa sen kautta liikkuvan yksikkökohtaisen kustannuksen etäisyyttä. Kunkin solusijainnin arvo kerrotaan solun resoluutiolla, ja lisäksi arvo kompensoi diagonaalista liikettä, jotta saadaan selville solun läpikulun aiheuttamat kustannukset.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag1@@": "<strong>Kustannusrasterin</strong> arvo voi olla kokonaisluku tai liukuluku, mutta se ei voi olla negatiivinen eikä nolla.",
	"@@Path-Distance-Back-Link_horizontalfactor_tag0@@": "<p>Määrittää vaakasuoran kustannustekijän ja vaakasuoran, suhteellisesti liikkuvan kulman välisen suhteen (HRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään HF- ja HRMA-akronyymeja. HF (Horizontal Factor) tarkoittaa vaakasuoraa tekijää, joka määrittää vaakasuuntaisen ongelman, joka esiintyy liikuttaessa solusta toiseen. HRMA (Horizontal Relative Moving Angle) tarkoittaa vaakasuuntaista suhteellisesti liikkuvaa kulmaa, joka määrittää lähtösolun vaakasuunnan ja liikkuvan suunnan välisen kulman.</p><p><strong>Vaakasuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – Ilmaisee, että HF:ksi määritetään nollatekijään liitetty arvo, jos HRMA on pienempi kuin leikkauskulma. Muutoin se on ääretön.</li><li><strong>Eteenpäin</strong> – Ilmaisee, että vain eteenpäin suuntautuva liike sallitaan. HRMA:n on oltava suurempi tai yhtä suuri kuin 0 ja pienempi kuin 90 astetta (0 &lt;= HRMA &lt; 90). Jos HRMA on suurempi kuin 0 ja pienempi kuin 45 astetta, solun HF:ksi määritetään nollatekijään liitetty arvo. Jos HRMA on suurempi tai yhtä suuri kuin 45 astetta, käytetään sivun arvon muokkaajan arvoa. Minkä tahansa HRMA-arvon, joka on suurempi tai yhtä suuri kuin 90 astetta, HF:ksi määritetään ääretön.</li><li><strong>Lineaarinen</strong> – määrittää, että HF on HRMA:n lineaarinen funktio.</li><li><strong>Käänteinen lineaarinen</strong> – määrittää, että HF on HRMA:n käänteinen lineaarinen funktio.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään HF:n määrittämiseen käytetty vaakasuuntaisen tekijän kaavio.</li></ul><p>Vaakasuoran tekijän muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – vaakasuora tekijä, jota käytetään, kun HRMA on nolla. Tämä tekijä määrittää, mihin vaakasuoran tekijän funktion y-leikkauspiste sijoitetaan.</li><li><strong>Leikkaa kulma</strong> – määrittää HRMA-kulman, jonka ylittyessä HF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – muodostaa sen suoran viivan kaltevuuden, jota käytetään vaakasuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Sivun arvo</strong> – määrittää HF:n, jos HRMA on suurempi tai yhtä suuri kuin 45 astetta ja pienempi kuin 90 astetta ja jos vaakasuoran tekijän<strong>Eteenpäin</strong>-avainsana on määritetty.</li><li><strong>Taulun nimi</strong> – määrittää HF:n määrittävän taulun nimen.</li></ul>",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag0@@": "Rasteri, joka määrittää vaakasuunnan kussakin solussa.",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag1@@": "Rasterin arvojen on oltava kokonaislukuja (0–360): 0 astetta on pohjoinen tai näkymän yläreuna ja arvot kasvavat myötäpäivään. Tasaisille alueille on annettava arvo -1. Kunkin sijainnin arvoja käytetään yhdessä <strong>vaakasuoran tekijän</strong> kanssa sen vaakasuuntaisen kustannuksen määrittämiseksi, joka syntyy liikuttaessa solusta sen naapureihin.",
	"@@Path-Distance-Back-Link_Maximum-Distance_tag0@@": "Kynnysarvo, jota kumulatiiviset kustannusarvot eivät saa ylittää. Jos kumulatiivinen kustannusetäisyys ylittää tämän arvon, tulosaineiston arvo solusijainnille on NoData. Enimmäisetäisyys määrittää laajuuden, jolle kumulatiiviset kustannusetäisyydet lasketaan. Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Kustannusarvoihin käytettävä kerroin.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Tämän parametrin avulla voidaan hallita matkustustilaa tai magnitudia lähteessä. Mitä suurempi kerroin on, sitä suurempi on kunkin solun läpi liikkuva kustannus.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Arvojen on oltava suurempia kuin nolla. Oletusarvo on 1.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Path-Distance-Back-Link_Source-Raster_tag0@@": "Lähdesijaintien pakollinen lähtöaineiston rasteri.",
	"@@Path-Distance-Back-Link_Source-Raster_tag1@@": "Tämä rasteri määrittää solut ja sijainnit, joista viimeisin kumulatiivinen kustannusetäisyys lasketaan jokaiselle tulosaineiston solusijainnille.",
	"@@Path-Distance-Back-Link_Source-Raster_tag2@@": "Sen tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Path-Distance-Back-Link_Start-Cost_tag0@@": "Aloituskustannus, josta kustannuslaskenta aloitetaan. Tämän parametrin avulla kiinteän kustannuksen määritys voidaan liittää lähteeseen. 0-kustannuksesta aloittamisen sijasta kustannusalgoritmi aloittaa määritetyllä arvolla.",
	"@@Path-Distance-Back-Link_Start-Cost_tag1@@": "Tämän arvon on oltava vähintään nolla. Oletusarvo on 0.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag0@@": "Rasteri, joka määrittää korkeusarvot kussakin solusijainnissa.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag1@@": "Arvojen avulla lasketaan todellinen pinnan etäisyys kuljettujen solujen välillä.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag0@@": "Määrittää matkustajan suunnan, kun käytetään lähdevastustustasoa ja lähdealoituskustannusta.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag1@@": "<strong>Lähteestä</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään lähtöaineiston lähteen alussa ja liikuttaessa pois muihin kuin lähdesoluihin. Tämä on oletusarvo.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag3@@": "<strong>Lähteeseen</strong> – Lähdevastustustasoa ja lähdealoituskustannusta käytetään muun kuin lähdesolun alussa ja liikuttaessa takaisin lähtöaineiston lähteeseen.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag5@@": "Määritä joko <strong>Lähteestä</strong>- tai <strong>Lähteeseen</strong>-avainsana, jota käytetään kaikkiin lähteisiin, tai määritä <strong>lähderasterin</strong> kenttä, joka sisältää avainsanat kunkin lähteen matkustussuunnan määrittämiseen. Kyseisen kentän on sisällettävä merkkijono ${FROM_SOURCE} tai ${TO_SOURCE}.",
	"@@Path-Distance-Back-Link_verticalfactor_tag0@@": "<p>Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen (VRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään VF- ja HRMA-akronyymeja. VF (Vertical Factor) tarkoittaa pystysuoraa tekijää, joka määrittää pystysuuntaisen vaikeuden, joka esiintyy liikuttaessa solusta toiseen. VRMA (Vertical Relative Moving Angle) tarkoittaa pystysuoraa, suhteellisesti liikkuvaa kulmaa, joka määrittää kaltevuuskulman lähtösolun (käsittelysolun) ja kohdesolun välillä.</p><p><strong>Pystysuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – määrittää, että VF:ksi määritetään nollatekijään liitetty arvo, jos VRMA on suurempi kuin matala leikkauskulma ja pienempi kuin korkea leikkauskulma. Muutoin se on ääretön.</li><li><strong>Lineaarinen</strong> – ilmaisee, että VF on VRMA:n lineaarinen funktio.</li><li><strong>Symmetrinen lineaarinen</strong> – määrittää, että VF on VRMA:n lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Käänteinen lineaarinen</strong> – ilmaisee, että VF on VRMA:n käänteinen lineaarinen funktio.</li><li><strong>Symmetrinen käänteinen lineaarinen</strong> – määrittää, että VF on VRMA:n käänteinen lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Cos</strong> – määrittää VF:n VRMA:n kosinipohjaiseksi funktioksi.</li><li><strong>Sec</strong> – määrittää VF:n VRMA:n sekanttipohjaiseksi funktioksi.</li><li><strong>Cos–Sec</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Sec–Cos</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään VF:n määrittämiseen käytetty pystysuuntaisen tekijän kaavio.</li></ul><p>Pystysuuntaisten avainsanojen muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – muodostaa pystysuoran tekijän, jota käytetään, kun VRMA on nolla. Tämä tekijä määrittää, mihin määritetyn funktion y-leikkauspiste sijoitetaan. Määritelmän mukaan nollatekijää ei voi käyttää trigonometrisissä pystysuuntaisissa funktioissa (COS, SEC, COS-SEC tai SEC-COS). Y-leikkauspiste määritetään näiden funktioiden avulla.</li><li><strong>Matala leikkauskulma</strong> – määrittää VRMA-kulman, jonka alittuessa VF:ksi määritetään ääretön.</li><li><strong>Korkea leikkauskulma</strong> – määrittää VRMA-kulman, jonka ylittyessä VF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – määrittää suoran viivan kaltevuuden, jota käytetään seuraavien pystysuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Taulun nimi</strong> – määrittää VF:n määrittävän taulun nimen.</li></ul>",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag0@@": "Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen.",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag1@@": "Arvojen avulla lasketaan kaltevuus, jota käytetään sen pystysuoran tekijän määrittämiseen, joka esiintyy liikuttaessa solusta toiseen.",
	"@@Plus_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Plus_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Plus_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Plus_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Plus_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Plus_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Plus_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Plus_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Plus_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Plus_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Plus_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Plus_Raster_tag0@@": "Lähtöaineisto, jonka arvot lisätään.",
	"@@Plus_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Plus_Raster2_tag0@@": "Lähtöaineisto, jonka arvot lisätään ensimmäiseen lähtöaineistoon.",
	"@@Plus_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Local_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan sama lopputulos.",
	"@@Local_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Local_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Local_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Local_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Local_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Local_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Local_Extent-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston ensimmäisen rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Local_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Local_Extent-Type_tag3@@": "Viimeinen – Käytä lähtöaineiston viimeisen rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Local_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Local_Raster_tag0@@": "Lähtöaineisto, jonka arvot lisätään.",
	"@@Local_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Local_Raster2_tag0@@": "Lähtöaineisto, jonka arvot lisätään ensimmäiseen lähtöaineistoon.",
	"@@Local_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Local_False-Raster_tag0@@": "Lähtöaineisto, jonka arvoja käytetään tulosaineiston pikseliarvoina, jos ehto on epätosi. Se voi olla kokonaisluku, liukulukurasteri tai vakioarvo.",
	"@@Local_True-Raster_tag0@@": "Lähtöaineisto, jonka arvoja käytetään tulosaineiston pikseliarvoina, jos ehto on tosi. Se voi olla kokonaisluku, liukulukurasteri tai vakioarvo.",
	"@@Power_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Power_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Power_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Power_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Power_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Power_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Power_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Power_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Power_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Power_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Power_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Power_Raster_tag0@@": "Lähtöaineiston arvot, jotka korotetaan seuraavan määrittämään potenssiin: <strong>Raster2</strong>.",
	"@@Power_Raster_tag3@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Power_Raster2_tag0@@": "Lähtöaineisto, joka määrittää potenssin, johon <strong>rasteri</strong> korotetaan.",
	"@@Power_Raster2_tag3@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Radar-Calibration_Calibration-Type_tag0@@": "Suoritettavan kalibroinnin tyyppi.",
	"@@Radar-Calibration_Calibration-Type_tag1@@": "Beeta-nolla – Funktio palauttaa tutkan heijastuskyvyn yksikköaluetta kohden antennin ja kohteen välillä. Tämä on oletusarvoinen kalibrointityyppi.",
	"@@Radar-Calibration_Calibration-Type_tag2@@": "Sigma-nolla – Funktio palauttaa tutkan heijastuskyvyn yksikköaluetta kohden maaetäisyydellä. Tulokset ovat 32-bittisiä liukulukuarvoja, jotka ovat useimmiten 0,0–1,0. Aineiston leikkausta ei tehdä, jos tämä vaihtoehto on valittuna.",
	"@@Radar-Calibration_Calibration-Type_tag3@@": "Gamma – Funktio palauttaa tutkan heijastuskyvyn yksikköaluetta kohden pystytasolla mittaussuuntaan.",
	"@@Radar-Calibration_Calibration-Type_tag4@@": "Ei mitään",
	"@@Radar-Calibration_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@RasterInfo_Raster-Info_tag0@@": "Valitse mallina käytettävä rasteriaineistoryhmä",
	"@@RasterInfo_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Rasterize-Attributes_Attribute-Field-Names_tag0@@": "Kohteessa <strong>Vyöhykkeisten ominaisuustietojen taulukko</strong> olevien kenttien luettelo, jossa kentät on eroteltu toisistaan pilkulla. Kunkin kentän arvot esitetään tulosaineiston rasterin kaistana.",
	"@@Rasterize-Attributes_Background-Value_tag0@@": "Tulosaineiston kaistojen alkuperäinen pikseliarvo rasterissa ennen pikseliarvon täsmäyttämistä uudelleen.",
	"@@Rasterize-Attributes_Background-Value_tag1@@": "Jos pikseli ei ole vyöhykkeen sisällä, se pysyy taustan arvona.",
	"@@Rasterize-Attributes_Value-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri.",
	"@@Rasterize-Attributes_Value-Raster_tag1@@": "Lähtöaineiston tulee olla yksikaistainen rasteri. Jos käytössä on monikaistainen rasteri, vain ensimmäistä kaistaa käytetään.",
	"@@Rasterize-Attributes_Where-Clause_tag0@@": "Valinnainen lisäkysely, jota on käytetty kohteessa <strong>Vyöhykkeisten ominaisuustietojen taulukko</strong>.",
	"@@Rasterize-Attributes_Where-Clause_tag3@@": "Käytettäessä yllä olevaa taulua esimerkkinä kysely olisi ${Variable1 = 'bare earth'}.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag0@@": "Vyöhykkeiset ominaisuustiedot, jotka on määritetty polkuna paikalliseen kohdeluokkaan, polkuna tauluun, URL-osoitteena kohdepalvelun karttatasoon tai JSON-merkkijonona.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag1@@": "JSON-merkkijonossa sitä kuvataan yhdistämisen kokoelmana vyöhyketunnuksista kokonaislukujen matriisiin. ${{ zoneId:[f1,f2,...,fn], ... } }",
	"@@Rasterize-Attributes_Zone-Field_tag0@@": "Vyöhyketunnuksen arvot sisältävä kentän nimi.",
	"@@Rasterize-Attributes_Zone-Raster_tag0@@": "Valinnainen yksikaistainen rasteri, jossa jokainen pikseli sisältää sijaintiin liitetyn vyöhyketunnuksen. Vyöhyketunnusta käytetään rivien etsimiseen vyöhykkeisten ominaisuustietojen taulusta vyöhykekohtaista käyttöä varten.",
	"@@Rasterize-Attributes_Zone-Raster_tag1@@": "Älä määritä tätä parametria, jos haluat vain tuoda ominaisuustiedon.",
	"@@Rasterize-Features_Field_tag0@@": "Valitse kunkin kohteen määrittämiseen käytettävä kenttä.",
	"@@Rasterize-Features_Input-Features_tag0@@": "Valitse kohdeluokka, joka muutetaan rasterimuotoon.",
	"@@Rasterize-Features_Raster_tag0@@": "Valitse rasteri, jolle haluat määrittää solukoon ja kohdemuunnoksen laajuuden.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag0@@": "Määritä, miten päällekkäisiä kohteita hallitaan:",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag1@@": "<strong>Ensimmäinen</strong> – Päällekkäisille alueille määritetään arvo ensimmäisestä luettelossa olevasta aineistoryhmästä.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag3@@": "<strong>Viimeinen</strong> – Päällekkäisille alueille määritetään arvo viimeisestä luettelossa olevasta aineistoryhmästä.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag5@@": "<strong>Pienin</strong> – Päällekkäisille alueille määritetään arvo pienimmästä kohteesta.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag7@@": "<strong>Suurin</strong> – Päällekkäisille alueille määritetään arvo suurimmasta kohteesta.",
	"@@Recast_Overrides_tag0@@": "Muuttujan nimien ja käyttäjän määrittämien arvojen taulu, jota käytetään mosaiikkiaineistoryhmän muokkaamiseen.",
	"@@Recast_Raster_tag0@@": "Rasterituote, johon Uudelleenmuodostus-funktiota käytetään.",
	"@@Region-Group_Add-Link_tag0@@": "Määrittää, lisätäänkö linkkikenttä tulosaineiston tauluun.",
	"@@Region-Group_Add-Link_tag1@@": "<strong>Lisää linkki</strong> – Kohteen ${LINK} kohde lisätään tulosaineiston rasterin tauluun.",
	"@@Region-Group_Add-Link_tag3@@": "<strong>Ei linkkiä</strong> – Tulosaineiston rasterin ominaisuustietotaulu sisältää vain arvon ${Value} ja ${Count} kohdetta.",
	"@@Region-Group_Excluded-Value_tag0@@": "Määrittää arvon, jonka sisältyessä solusijaintiin ei arvioida sijaintien yhteyksiä naapurien määrän määritystavasta riippumatta (NELJÄ tai KAHDEKSAN).",
	"@@Region-Group_Excluded-Value_tag1@@": "Poissuljetun arvon sisältäviä soluja käsitellään NoData-soluina, ja ne jätetään pois laskelmista. Solusijainnit, jotka sisältävät poissuljetun arvon, saavat arvon 0 tulosaineiston rasterissa.",
	"@@Region-Group_Excluded-Value_tag2@@": "Poissuljettu arvo vastaa taustan arvoa tai sitä, että maskia on käytetty. Arvo on määritettävä tälle parametrille, jos <strong>${CROSS}</strong>-parametri on määritetty.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag0@@": "Niiden naapurisolujen määrä, joita käytetään solujen välisten yhteyksien arvioimiseen.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag1@@": "<strong>NELJÄ</strong> – Määrittää samanarvoisten solujen väliset yhteydet vain, jos solut ovat suoraan vasemmalle, oikealle, yläpuolelle tai alapuolelle kustakin neljästä lähimmästä naapurista. Tämä on oletusarvo.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag3@@": "<strong>KAHDEKSAN</strong> – Määrittää samanarvoisten solujen väliset yhteydet, jos ne ovat heti toistensa kahdeksassa naapurisolussa. Solut voivat olla toisistaan oikealle, vasemmalle, yläpuolelle tai diagonaalisesti.",
	"@@Region-Group_Zone-Connectivity_tag0@@": "Määrittää, mitkä soluarvot otetaan mukaan, kun yhteyksiä testataan.",
	"@@Region-Group_Zone-Connectivity_tag1@@": "<strong>VÄLILLÄ</strong> – Testaa yhteyksiä samojen lähtöaineiston arvojen välillä saman vyöhykkeen sisällä. Tämä on oletusarvo.",
	"@@Region-Group_Zone-Connectivity_tag3@@": "Ainoat solut, jotka voidaan ryhmitellä, ovat solut samasta vyöhykkeestä (arvo), joka vastaa seuraavan parametrin määrittämiä yhteyksien sijaintivaatimuksia: <strong>Naapureiden määrä</strong> (neljä tai kahdeksan).",
	"@@Region-Group_Zone-Connectivity_tag6@@": "<strong>CROSS</strong> – Testaa yhteyksiä naapurien määrä -parametrin määrittämien sijaintivaatimusten perusteella minkä tahansa arvoisten solujen välillä (lukuun ottamatta arvoa, joka suljetaan pois poissuljetun arvon parametrin avulla).",
	"@@Region-Group_Zone-Connectivity_tag8@@": "Kun tätä vaihtoehtoa käytetään, <strong>Poisjätetty arvo</strong> -parametrin arvo on määritettävä.",
	"@@Region-Group_Zone-Raster_tag0@@": "Pakollinen lähtöaineiston rasteri, jonka yksilöllisesti yhdistetyt alueet määritetään.",
	"@@Region-Group_Zone-Raster_tag1@@": "Sen tyypin on oltava kokonaisluku.",
	"@@Region-Grow_Fill-Value-Field_tag0@@": "Ominaisuustietotaulun kenttä, joka määrittää pikseliryhmän täyttöarvon. Monikaistaisessa kuvassa kaikille kastoille määritetään tämä arvo.",
	"@@Region-Grow_Max-Growth-Radius-Field_tag0@@": "Ominaisuustietotaulun kenttä, joka määrittää suurimman kasvusäteen (kuvan koordinaatistotietoyksiköinä).",
	"@@Region-Grow_Raster_tag0@@": "Rasteri, jolle haluat suorittaa tämän funktion.",
	"@@Region-Grow_Seed-Points_tag0@@": "Pistekohdeluokka, joka toimii algoritmin alkuperäisinä siemenarvoina. Jokainen siemenpiste vastaa yhtä ominaisuustietotaulun merkintää, johon sisältyy suurin kasvusäde, samankaltaisuuden kynnys ja täyttöarvotiedot.",
	"@@Region-Grow_Similarity-Threshold-Field_tag0@@": "Ominaisuustietotaulun kenttä, joka määrittää samankaltaisuuden kynnyksen euklidenisena etäisyytenä spektrisessä tilassa.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag0@@": "Uudelleenluokitustaulun puuttuvat arvot voivat säilyttää arvonsa, tai ne voidaan täsmäyttää uudelleen NoData-arvoiksi.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag1@@": "Ei valittu – lähtöaineiston rasterin pikseli, jota ei luokitella uudelleen uudelleentäsmäytystaulussa, säilyttää arvonsa, ja se määritetään samaan sijaintiin tulosaineiston rasterissa. Tämä on oletusarvo.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag2@@": "Valittu – sellaisen lähtöaineiston rasterin pikselin arvo, jota ei luokitella uudelleen uudelleentäsmäytystaulussa, määritetään NoData-arvoksi tulosaineiston rasterissa.",
	"@@Remap_Input-Field_tag0@@": "Valitse kenttä, joka määrittää uudelleen täsmäytettävän lähtöaineiston pikseliarvon.",
	"@@Remap_Input-Field_tag1@@": "Jos taululla on arvoalue, tämän on minimiarvon kenttä, ja myös parametri <strong>Lähtöaineiston maksimiarvon kenttä</strong> on määritettävä.",
	"@@Remap_Input-Max-Field_tag0@@": "Valitse maksimiarvon kenttä, jos taululla on arvoalue.",
	"@@Remap_List_tag0@@": "Määritä täsmäytysarvot ja minimi- ja maksimiarvoalue sekä uudet uudelleentäsmäytysarvot. Lisäksi arvoalueen voi määrittää NoData-pikseleinä.",
	"@@Remap_Output-Field_tag0@@": "Valitse kenttä, jota käytetään tulosaineiston uudelleentäsmäytettynä arvona.",
	"@@Remap_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Remap_Remap-Definition-Type_tag0@@": "Valitse vaihtoehto, jota haluat käyttää uudelleentäsmäytysarvojen määrittämiseen:",
	"@@Remap_Remap-Definition-Type_tag1@@": "Luettelo – Määritä niiden pikseliarvojen alue, jotka täsmäytetään tulosaineiston pikseliarvoon",
	"@@Remap_Remap-Table-Type_tag0@@": "Valitse sen taulun tyyppi, jota käytät lähtöaineiston rasterin täsmäyttämiseen uudelleen:",
	"@@Remap_Remap-Table-Type_tag1@@": "Yksinkertainen – Käyttää <strong>Uudelleentäsmäytystaulu</strong>-lähtöaineistoa <strong>Lähtöaineiston kenttä</strong> -pikseliarvojen täsmäyttämiseen uudelleen <strong>Tulosaineistokenttä</strong>-parametria vastaavaan arvoon. Tämä menetelmä tallentaa uudelleentäsmäytystaulun välimuistiin, jotta se voidaan suorittaa nopeammin.",
	"@@Remap_Remap-Table-Type_tag8@@": "Dynaaminen – Tämä menetelmä ei tallenna uudelleentäsmäytystaulua välimuistiin, ja se suorittaa kyselyn aina, kun pyyntö tehdään (panorointi, zoomaus tai päivitys). Jos taulu muuttuu, seuraava pyyntö voi dynaamisesti täsmäyttää arvot uudelleen.",
	"@@Remap_Remap-Table-Type_tag9@@": "Uudelleenmääritys – Uudelleenluokitteluun käytetty taulu, jonka kukin rivi täsmäytetään vain kunkin kohteen rajan perusteella.",
	"@@Remap_Remap-Table_tag0@@": "Selaa tauluun, jonka avulla voit määrittää uudelleentäsmäytysarvot.",
	"@@Reproject_Raster_tag0@@": "Rasterin aineistoryhmä, joka projisoidaan uudelleen tai jolle suoritetaan uudelleenotanta.",
	"@@Reproject_Spatial-Reference_tag0@@": "Aineiston uudelleenprojisointiin käytetty koordinaattijärjestelmä.",
	"@@Reproject_X-Cellsize_tag0@@": "X-ulottuvuus, johon aineiston uudelleenotanta suoritetaan. Tämä on valinnainen. Jos arvo on 0 tai sitä pienempi, tulosaineiston kuori (laajuus ja solukoot) lasketaan lähtöaineiston rasterista.",
	"@@Reproject_X-Registration-Point_tag0@@": "X-koordinaatti, jota käytetään aineistoryhmän vasemman yläkulman määrittämiseen. Tämä koordinaatti on määritettävä uuden koordinaatistotiedon yksiköinä. Jos sekä <strong>X-solukoko</strong>- että <strong>Y-solukoko</strong>-parametrit ovat suurempia kuin 0, niitä käytetään yhdessä parametrien <strong>X-rekisteröintipiste</strong>- ja <strong>Y-rekisteröintipiste</strong>-parametrien kanssa tulosaineiston kuoren määrittämiseen.",
	"@@Reproject_Y-Cellsize_tag0@@": "Y-ulottuvuus, johon aineiston uudelleenotanta suoritetaan. Tämä on valinnainen. Jos arvo on 0 tai sitä pienempi, tulosaineiston kuori (laajuus ja solukoot) lasketaan lähtöaineiston rasterista.",
	"@@Reproject_Y-Registration-Point_tag0@@": "Y-koordinaatti, jota käytetään aineistoryhmän vasemman yläkulman määrittämiseen. Tämä koordinaatti on määritettävä uuden koordinaatistotiedon yksiköinä. Jos sekä <strong>X-solukoko</strong>- että <strong>Y-solukoko</strong>-parametrit ovat suurempia kuin 0, niitä käytetään yhdessä parametrien <strong>X-rekisteröintipiste</strong>- ja <strong>Y-rekisteröintipiste</strong>-parametrien kanssa tulosaineiston kuoren määrittämiseen.",
	"@@Resample_Input-Cellsize_tag0@@": "Lähtöaineiston rasterin pikselin solukoko.",
	"@@Resample_Output-Cellsize_tag0@@": "Tulosaineiston rasterin pikselin solukoko. Solukokoa voidaan muuttaa, mutta rasterin aineistoryhmän laajuus pysyy samana. Uudelleenotanta käyttäjän määrittämästä solukoosta voi olla paljon hitaampaa kuin järjestelmän oletusarvo, koska järjestelmän oletusarvoinen uudelleenotanta käsittelee minimimäärän aineistoa lähimmästä mahdollisesta resoluutiosta.",
	"@@Resample_Raster_tag0@@": "Lähtöaineiston rasteri, jolle uudelleenotanta suoritetaan.",
	"@@Resample_Resampling-Type_tag0@@": "<strong>Lähin naapuri</strong> – Laskee tulosaineiston pikseliarvon lähimmän lähtöaineiston pikselin avulla. NoData-pikselit pysyvät samoina tulosaineiston rasteriaineistoryhmässä. Tämä on oletusarvo.",
	"@@Resample_Resampling-Type_tag2@@": "<strong>Bilineaarinen interpolointi</strong> – Laskee pikseliarvon käyttämällä neljän lähimmän pikselin etäisyyspainotettua arvoa. Tämä menetelmä on laskennallisesti tehokas.",
	"@@Resample_Resampling-Type_tag4@@": "<strong>Kuutiollinen konvoluutio</strong>– Määrittää pikselin uuden arvon sovittamalla tasaisen käyrän 16 lähimmän lähtöaineiston pikselin keskikohdan läpi.",
	"@@Resample_Resampling-Type_tag6@@": "<strong>Enemmistö</strong> – Laskee pikseliarvon käyttämällä 16 lähimmän pikselin arvoa, joka on enemmistönä. NoData-pikselit pysyvät samoina tulosaineiston rasteriaineistoryhmässä.",
	"@@Resample_Resampling-Type_tag8@@": "<strong>Bilineaarinen interpolointi (Plus)</strong> – Käyttää <strong>bilineaarista interpolointia</strong>, paitsi että reunoilla olevat pikselit määritetään NoData-pikseleiksi eikä niitä replikoida tai oteta huomioon laskelmassa. Käytä <strong>bilineaarista interpolointia (Plus)</strong> tiilitetylle aineistolle, koska reunat ovat sopivampia.",
	"@@Resample_Resampling-Type_tag14@@": "<strong>Gauss-sumennus</strong> – Käyttää Gaussin konvoluutiota lähderasteriin ja laskee pikseliarvon käyttämällä epäterävän rasterin neljän lähimmän pikselin painotetun etäisyyden arvoa. Se sopii hyvin kohinan poistamiseen aineistosta, jolle on suoritettu uudelleenotanta, ja tarkkuuden pienentämiseen suuremmaksi pikselikooksi.",
	"@@Resample_Resampling-Type_tag16@@": "<strong>Gauss-sumennus (Plus)</strong> – Käyttää samaa menetelmää kuin <strong>Gauss-sumennus</strong>, paitsi että reunoilla olevat pikselit määritetään NoData-pikseleiksi eikä niitä replikoida tai oteta huomioon laskelmassa. Käytä <strong>Gauss-sumennusta (Plus)</strong> tiilitetylle aineistolle, koska reunat ovat sopivampia.",
	"@@Resample_Resampling-Type_tag22@@": "<strong>Keskiarvo</strong> – Laskee pikseliarvot käyttämällä kaikkien päällekkäisten pikselien keskiarvoa kullekin kohdepikselille.",
	"@@Resample_Resampling-Type_tag24@@": "<strong>Minimi</strong> – Laskee pikseliarvon käyttämällä kaikkien päällekkäisten pikselien minimiarvoa. NoData-pikselit pysyvät samoina tulosaineiston rasteriaineistoryhmässä.",
	"@@Resample_Resampling-Type_tag26@@": "<strong>Maksimi</strong> – Sopii jatkuvalle aineistolle, sillä se tuottaa tasaisemman tulosaineiston kuvan kuin lähimmän naapurin interpolointimenetelmä.",
	"@@Resample_Resampling-Type_tag28@@": "<strong>Vektorin keskiarvo</strong> – Laskee magnitudi-suunnan vektorin keskiarvon käyttämällä kaikkia asiaan liittyviä pikseleitä. Tätä menetelmää voidaan käyttää vain kaksikaistaisissa rastereissa, jotka kuvaavat magnitudia ja suuntaa. Ensin se muuttaa magnitudi-suunnan U-V:ksi ja sitten se laskee aritmeettisen keskiarvon kaikista asiaan liittyvistä pikseleistä luodakseen kohdepikselin U-V:n, jonka se muuttaa takaisin magnitudi-suunnaksi.",
	"@@Round-Down_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Round-Down_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Round-Down_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Round-Down_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Round-Down_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Round-Down_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Round-Down_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Round-Down_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Round-Down_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Round-Down_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Round-Down_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Round-Down_Raster_tag0@@": "Lähtöaineiston arvot, jotka pyöristetään alaspäin.",
	"@@Round-Up_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Round-Up_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Round-Up_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Round-Up_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Round-Up_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Round-Up_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Round-Up_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Round-Up_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Round-Up_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Round-Up_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Round-Up_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Round-Up_Raster_tag0@@": "Lähtöaineiston arvot, jotka pyöristetään ylöspäin.",
	"@@Segment-Mean-Shift_Minimum-Segment-Size-in-Pixels_tag0@@": "Segmentin vähimmäiskoko pikseleinä mitattuna. Tämä arvo liittyy minimitäsmäytysyksikköön ja suodattaa pois pienet pikselilohkot. Kaikki määritettyä arvoa pienemmät segmentit yhdistetään parhaiten sopivan naapurisegmentin pieniin segmentteihin.",
	"@@Segment-Mean-Shift_Raster_tag0@@": "Segmentoitava lähtöaineiston rasteri.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag0@@": "Segmentin rajat piirretään mustana ääriviivana kunkin segmentin ympärille. Tästä on hyötyä, sillä voit erottaa toisistaan samanväriset vierekkäiset  segmentit.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag1@@": "Ei valittu – Segmentin rajoja ei näytetä. Tämä on oletusarvo.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag2@@": "Valittu – Segmentin rajat näytetään mustina ääriviivoina kunkin segmentin ympärillä.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag0@@": "Erottavien objektien suhteellinen tärkeys sijaintiominaisuuksien perusteella.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag1@@": "Kelvollisia kokonaislukuarvoja ovat 1–20. Pienemmät arvot tuottavat laajemmat luokat ja paremman tasoituksen. Suurempi arvo sopii pienten ja yhteen kasautuneiden kohteiden erottamiseen toisistaan. Kaupunkiympäristössä voit esimerkiksi luokitella yleisiä läpäisemättömiä pintakohteita käyttämällä pienempää sijaintiyksityiskohta-arvoa tai voit luokitella rakennuksia ja teitä erillisinä luokkina käyttämällä suurempaa sijaintiyksityiskohta-arvoa.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag0@@": "Erottavien objektien suhteellinen tärkeys väriominaisuuksien perusteella.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag1@@": "Kelvollisia liukulukuarvoja ovat 1,0–20,0. Pienemmät arvot tuottavat laajemmat luokat ja paremman tasoituksen. Suurempaa arvoa kannattaa käyttää silloin, kun haluat erottaa toisistaan kohteita, joilla on jokseenkin samankaltaisia spektrisiä ominaisuuksia. Käyttämällä esimerkiksi suurempaa spektriyksityiskohta-arvoa metsämaisemassa voit paremmin erottaa toisistaan eri puulajeja.",
	"@@Segment-Mean-Shift_maximumsegmentsizeinpixels_tag0@@": "<p>Segmentin sallittu enimmäiskoko. Segmentit, joiden koko ylittää enimmäiskoon, jaetaan. Tällä parametrilla voidaan estää suurista segmenteistä aiheutuvat tuloskarttatason artefaktit. Oletus on –1.</p>",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag0@@": "Valitse jokin neljästä kalibrointityypistä:",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag1@@": "<strong>Beeta-nolla</strong> – Tuottaa tulosaineiston, joka sisältää tutkan kirkkauskertoimen.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag3@@": "<strong>Sigma-nolla</strong> – Antenniin maanpinnan yksikköalueesta palautettu takaisinsironta (maaetäisyyteen liittyvä).",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag5@@": "<strong>Gamma</strong> – Säteillyn ja palautetun energian mittaus, josta on hyötyä antennikuvioiden määrittämisessä.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag7@@": "<strong>Ei mitään</strong> – Älä käytä korjausta. Tämä on oletusarvo.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag0@@": "Lähtöaineiston Sentinel-1 Level-1 GRD- tai SLC-rasteri, jota haluat käsitellä.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag1@@": "Funktio käyttää LUT-tiedostoa joko lämpökorjauksen käyttöön ottamiseen tai poistamiseen LUT-tiedoston sisällön mukaan.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag0@@": "Lähtöaineiston Sentinel-1-rasteri, jota haluat käsitellä.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag1@@": "Funktio käyttää LUT-tiedostoa joko lämpökorjauksen käyttöön ottamiseen tai poistamiseen LUT-tiedoston sisällön mukaan.",
	"@@Set-Null_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Set-Null_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Set-Null_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Set-Null_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Set-Null_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Set-Null_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Set-Null_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Set-Null_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Set-Null_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Set-Null_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Set-Null_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Set-Null_False-Raster_tag0@@": "Lähtöaineisto, jonka arvoja käytetään tulosaineiston pikseliarvoina, jos ehto on epätosi. Se voi olla kokonaisluku, liukulukurasteri tai vakioarvo.",
	"@@Set-Null_Raster_tag0@@": "Lähtöaineiston rasteri, joka kuvaa loogisen matemaattisen rasterifunktion totuusarvotulosta. Arvot ovat joko 1 (tosi) tai 0 (epätosi). Sen tyyppi voi olla kokonaisluku tai liukulukurasteri.",
	"@@Shaded-Relief_Altitude_tag0@@": "Korkeus on auringon korkeuskulma horisontin yläpuolella, ja sen arvo vaihtelee 0 ja 90 asteen välillä. 0 astetta ilmaisee, että aurinko on horisontissa eli samassa vaakatasossa kuin viitekehys. 90 astetta ilmaisee, että aurinko on suoraan yläpuolella. Oletusarvo on 45 astetta horisontin yläpuolella.",
	"@@Shaded-Relief_Azimuth_tag0@@": "Atsimuutti on auringon suhteellinen sijainti pitkin horisonttia (asteina). Auringon kulma, joka mitataan pohjoisesta myötäpäivään, ilmaisee tämän sijainnin. 0 asteen atsimuutti ilmaisee pohjoisen, 90 asteen atsimuutti idän, 180 atsimuutti etelän ja 270 asteen atsimuutti lännen.",
	"@@Shaded-Relief_Color-Scheme-Type_tag0@@": "Määritä, käytetäänkö väriliukumaa vai värikarttaa varjostetun harjanteen näyttämiseen.",
	"@@Shaded-Relief_Color-Scheme-Type_tag1@@": "<strong>Väriliukuma</strong> – Kun valitset <strong>Väriliukuma</strong>-vaihtoehdon, sinua pyydetään valitsemaan sopiva väriliukuma.",
	"@@Shaded-Relief_Color-Scheme-Type_tag5@@": "<strong>Värikartta</strong> – Kun valitset <strong>Värikartta</strong>-vaihtoehdon, sinua pyydetään määrittämään käytettävä värikarttatiedosto.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag0@@": "Määritä, poistetaanko oletusreunapikselin interpolointi käytöstä.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag1@@": "Bilineaarista uudelleenotantaa käytetään yhtäläisesti uudelleenotannan suorittamiseksi varjostetulle harjanteelle. Tämä on oletusarvo.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag2@@": "Bilineaarista uudelleenotantaa käytetään varjostetulle harjanteelle kaikkialla muualla paitsi rasterien reunoilla tai NoData-pikselien vieressä. Nämä pikselit täytetään NoData-arvoilla, koska tämä vähentää terävien reunojen mahdollista esiintymistä.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag3@@": "Käyttämällä tätä vaihtoehtoa voit välttää uudelleenotanta-artefaktit, joita voi esiintyä rasterin reunoilla. Tulosaineiston pikselit rasterin reunalla tai arvottomien pikselien vieressä täytetään NoData-arvoilla. Tämän vuoksi on suositeltavaa, että tätä vaihtoehtoa käytetään vain, kun saatavilla on muita päällekkäisiä pikseleitä sisältäviä rastereita. Kun päällekkäisiä pikseleitä on saatavilla, NoData-alueet näyttävät tyhjien pikselien sijasta päällekkäisten pikselien arvot.",
	"@@Shaded-Relief_Raster_tag0@@": "Lähtöaineiston korkeusrasteri.",
	"@@Shaded-Relief_Scaling_tag0@@": "Varjostettu tulos skaalataan dynaamisesti säätämällä z-tekijää jollakin seuraavista vaihtoehdoista:",
	"@@Shaded-Relief_Scaling_tag1@@": "<strong>Ei mitään</strong> – Mittakaavaa ei käytetä. Tämä sopii hyvin yksittäiseen rasteriaineistoryhmään, joka kattaa paikallisen alueen. Tämän käyttöä ei suositella suuria korkeusvaihteluita sisältävissä maailmanlaajuisissa aineistoryhmissä tai useita mittakaavoja sisältävissä kartoissa, koska se tuottaa maaston korkeuseron, jossa on vain vähän vaihtelua pienessä mittakaavassa.",
	"@@Shaded-Relief_Scaling_tag3@@": "<strong>Säädetty</strong> – Ei-lineaarista säätöä käytetään käyttämällä oletusarvoisia <strong>Pikselikoon potenssi</strong>- ja <strong>Pikselikoon kerroin</strong> -arvoja, jotka mukautuvat monenlaisiin korkeuden (mittakaavan) muutoksiin, kun katsoja lähentää tai loitontaa kohdetta. <strong>Säädetty</strong>-vaihtoehtoa suositellaan, jos käytät maailmanlaajuista aineistoryhmää.",
	"@@Shaded-Relief_Z-Factor_tag0@@": "Z-kerroin on skaalauskerroin, jota käytetään korkeusarvojen muuntamiseen seuraavissa tilanteissa:",
	"@@Shaded-Relief_Z-Factor_tag1@@": "jos haluat muuttaa korkeusyksiköt (kuten metrit tai jalat) aineistoryhmän vaakasuuntaisiksi koordinaattiyksiköiksi, jotka voivat olla jalkoja, metrejä tai asteita",
	"@@Shaded-Relief_Z-Factor_tag2@@": "jos haluat lisätä pystysuuntaisen liioittelun visuaalisena tehosteena.",
	"@@Shaded-Relief_Z-Factor_tag3@@": "Varjostettu tulos skaalataan dynaamisesti säätämällä z-tekijää jollakin seuraavista vaihtoehdoista:",
	"@@Shaded-Relief_Z-Factor_tag4@@": "<strong>Ei mitään</strong> – Mittakaavaa ei käytetä. Tämä sopii hyvin yksittäiseen rasteriaineistoryhmään, joka kattaa paikallisen alueen. Tämän käyttöä ei suositella suuria korkeusvaihteluita sisältävissä maailmanlaajuisissa aineistoryhmissä tai useita mittakaavoja sisältävissä kartoissa, koska se tuottaa maaston korkeuseron, jossa on vain vähän vaihtelua pienessä mittakaavassa.",
	"@@Shaded-Relief_Z-Factor_tag6@@": "<strong>Säädetty</strong> – Ei-lineaarista säätöä käytetään käyttämällä oletusarvoisia <strong>Pikselikoon potenssi</strong>- ja <strong>Pikselikoon kerroin</strong> -arvoja, jotka mukautuvat monenlaisiin korkeuden (mittakaavan) muutoksiin, kun katsoja lähentää tai loitontaa kohdetta. <strong>Säädetty</strong>-vaihtoehtoa suositellaan, jos käytät maailmanlaajuista aineistoryhmää.",
	"@@Shaded-Relief_hillshadetype_tag0@@": "Ohjaa vinovalovarjostuksen valaistuslähdettä.",
	"@@Shaded-Relief_hillshadetype_tag1@@": "<strong>Perinteinen</strong> – Laskee vinovalovarjostuksen yhdestä valaistussuunnasta. Voit määrittää <strong>atsimuutin</strong> ja <strong>korkeuden</strong> asetukset ohjataksesi valonlähteen sijaintia. Tämä on oletusarvo.",
	"@@Shaded-Relief_hillshadetype_tag2@@": "<strong>Monisuuntainen</strong> – Yhdistää valon useista lähteistä, jotta maaston esittämisessä voidaan käyttää kehittynyttä visualisointia.",
	"@@Shaded-Relief_PSPower_tag0@@": "<strong>Pikselikoon kerroin</strong> ottaa huomioon korkeuden (tai mittakaavan) muutokset, kun katsoja lähentää tai loitontaa kohdetta karttanäkymässä. Se on sellaisessa pikselikoon yhtälössä käytettävä eksponentti, joka ohjaa nopeutta, jolla <strong>Z-kerroin</strong> muuttuu. Sen avulla voidaan välttää korkeuserojen merkittävät menetykset.",
	"@@Shaded-Relief_PSPower_tag1@@": "Tämä parametri on kelvollinen vain, kun <strong>Mittakaavojen</strong> tyyppi on <strong>Säädetty</strong>. Oletusarvo on 0,664.",
	"@@Shaded-Relief_PSZFactor_tag0@@": "<strong>Pikselikoon kerroin</strong> ottaa huomioon mittakaavan muutokset, kun katsoja lähentää tai loitontaa kohdetta karttanäkymässä. Se ohjaa nopeutta, jolla <strong>Z-kerroin</strong> muuttuu.",
	"@@Shaded-Relief_PSZFactor_tag1@@": "Tämä parametri on kelvollinen vain, kun <strong>Mittakaavojen</strong> tyyppi on <strong>Säädetty</strong>. Oletusarvo on 0,024.",
	"@@Sin_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Sin_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Sin_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Sin_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Sin_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Sin_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Sin_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Sin_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Sin_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Sin_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Sin_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Sin_Raster_tag0@@": "Lähtöaineisto, jolle sinin arvot lasketaan.",
	"@@SinH_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@SinH_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@SinH_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@SinH_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@SinH_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@SinH_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@SinH_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@SinH_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@SinH_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@SinH_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@SinH_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@SinH_Raster_tag0@@": "Lähtöaineisto, jolle hyperbolisen sinin arvot lasketaan.",
	"@@Sink_Flow-Direction-Raster_tag0@@": "Lähtöaineiston rasteri, joka näyttää virtaussuunnan jokaisesta solusta.",
	"@@Sink_Flow-Direction-Raster_tag1@@": "Virtaussuuntarasteri voidaan luoda suorittamalla <strong>Virtaussuunta</strong>-funktio.",
	"@@Slope_DEM_tag0@@": "Lähtöaineiston korkeusrasteri.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag0@@": "Käyttämällä tätä vaihtoehtoa voit välttää uudelleenotanta-artefaktit, joita voi esiintyä rasterin reunoilla. Tulosaineiston pikselit rasterin reunalla tai arvottomien pikselien vieressä täytetään NoData-arvoilla. Tämän vuoksi on suositeltavaa, että tätä vaihtoehtoa käytetään vain, kun saatavilla on muita päällekkäisiä pikseleitä sisältäviä rastereita. Kun päällekkäisiä pikseleitä on saatavilla, NoData-alueet näyttävät tyhjien pikselien sijasta päällekkäisten pikselien arvot.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag1@@": "Ei valittu – Bilineaarista uudelleenotantaa käytetään yhtäläisesti uudelleenotannan suorittamiseksi kaltevuudelle. Tämä on oletusarvo.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag2@@": "Valittu – Bilineaarista uudelleenotantaa käytetään kaltevuudelle kaikkialla muualla paitsi rasterien reunoilla tai NoData-pikselien vieressä. Nämä pikselit täytetään NoData-arvoilla, koska tämä vähentää terävien reunojen mahdollista esiintymistä.",
	"@@Slope_Scaling_tag0@@": "Kaltevuusarvo voidaan määrittää joko asteina tai prosenttinousuna. Käytettävissä on kolme vaihtoehtoa kohteelle <strong>Skaalaus</strong>:",
	"@@Slope_Scaling_tag3@@": "<strong>Aste</strong> – Kaltevuus lasketaan asteina. Arvoalue on 0–90.",
	"@@Slope_Scaling_tag5@@": "<strong>Percent_Rise</strong> – Kaltevuus lasketaan prosenttiarvoina. Arvo voi olla nollasta äärettömyyteen. 0 prosentin nousu kuvaa tasaista pintaa ja 100 prosentin nousu 45 asteen pintaa. Mitä pystymmäksi pinta muuttuu, sitä suurempi on prosenttinousu.",
	"@@Slope_Scaling_tag7@@": "<strong>Skaalaus</strong> – Kaltevuus lasketaan samalla tavalla kuin ASTE, mutta z-tekijää säädetään mittakaavaa varten. Siinä käytetään <strong>Pikselikoon potenssi</strong>- ja <strong>Pikselikoon kerroin</strong> -arvoja, jotka ottavat huomioon resoluution muutokset (mittakaavassa), kun katsoja lähentää tai loitontaa kohdetta. Tätä suositellaan, jos käytät maailmanlaajuisia aineistoryhmiä, erityisesti jos käytät kaltevuutta visualisointipintana.",
	"@@Slope_Scaling_tag13@@": "Z-tekijää säädetään seuraavan yhtälön avulla:",
	"@@Slope_Scaling_tag14@@": "Säädetty Z-tekijä = (Z-tekijä) + (pikselikoko)",
	"@@Slope_Scaling_tag15@@": "× (Pikselikoon kerroin)",
	"@@Slope_Scaling_tag16@@": "Pikselikoon potenssi",
	"@@Slope_Z-Factor_tag0@@": "<strong>Z-kerroin</strong> on skaalauskerroin, jota käytetään korkeusarvojen muuntamiseen seuraavissa tilanteissa:",
	"@@Slope_Z-Factor_tag3@@": "jos haluat muuttaa korkeusyksiköt (kuten metrit tai jalat) aineistoryhmän vaakasuuntaisiksi koordinaattiyksiköiksi, jotka voivat olla jalkoja, metrejä tai asteita",
	"@@Slope_Z-Factor_tag4@@": "Lisätään pystysuuntainen liioittelu visuaalisena tehosteena.",
	"@@Slope_PSPower_tag0@@": "<strong>Pikselikoon kerroin</strong> ottaa huomioon korkeuden (tai mittakaavan) muutokset, kun katsoja lähentää tai loitontaa kohdetta karttanäkymässä. Se on sellaisessa pikselikoon yhtälössä käytettävä eksponentti, joka ohjaa nopeutta, jolla <strong>Z-kerroin</strong> muuttuu. Sen avulla voidaan välttää korkeuserojen merkittävät menetykset.",
	"@@Slope_PSPower_tag1@@": "Tämä parametri on kelvollinen vain, kun <strong>Mittakaavojen</strong> tyyppi on <strong>Skaalattu</strong>. Oletusarvo on 0,664.",
	"@@Slope_PSZFactor_tag0@@": "<strong>Pikselikoon kerroin</strong> ottaa huomioon mittakaavan muutokset, kun katsoja lähentää tai loitontaa kohdetta karttanäkymässä. Se ohjaa nopeutta, jolla <strong>Z-kerroin</strong> muuttuu.",
	"@@Slope_PSZFactor_tag1@@": "Tämä parametri on kelvollinen vain, kun <strong>Mittakaavojen</strong> tyyppi on <strong>Skaalattu</strong>. Oletusarvo on 0,024.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag0@@": "Lähtöaineiston virtauskertymärasterin karttataso.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag1@@": "Tämä voidaan tehdä <strong>Virtauskertymä</strong>-funktiolla.",
	"@@Snap-Pour-Point_Pour-Point-Field_tag0@@": "Kenttää käytetään määrittämään laskupistesijaintien arvot.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag0@@": "Lähtöaineiston laskupisteiden sijainnit, jotka kohdistetaan.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag1@@": "Lähtöaineiston rasterikarttatasossa kaikkia soluja, jotka eivät ole NoData-soluja (eli niillä on arvo), pidetään laskupisteinä, ja ne kohdistetaan.",
	"@@Snap-Pour-Point_Snap-Distance_tag0@@": "Enimmäisetäisyys (karttayksiköinä), jolta suuremman virtauskertymän solua etsitään.",
	"@@Speckle_Additive-Noise-Mean_tag0@@": "Määrittää lisäkohinan keskiarvon. Suurempi kohun keskiarvo tuottaa epätasaisemmat reunat, ja pienemmät arvot tuottavat tasaisemmat reunat.",
	"@@Speckle_Additive-Noise-Mean_tag1@@": "Tämä parametri on kelvollinen vain, jos <strong>Suodattimen tyyppi</strong> -arvo on <strong>Lee-suodatin</strong> ja <strong>Kohinamalli</strong>-arvo on <strong>Lisäkohina</strong> tai <strong>Lisä- ja kerrannaiskohina</strong>. Oletusarvo on 0.",
	"@@Speckle_Damping-Factor_tag0@@": "Määrittää eksponentiaalisen vaimennustehosteen laajuuden suodatuksessa. Suurempi vaimennusarvo säilyttää reunat parempina, mutta tasoittaa niitä vähemmän. Pienemmät arvot tuottavat tasaisemmat reunat. Arvo 0 tuottaa saman tulosaineiston kuin alipäästösuodatin.",
	"@@Speckle_Damping-Factor_tag1@@": "Tämä parametri on kelvollinen vain, jos <strong>Suodattimen tyyppi</strong> -arvo on <strong>Tehostettu Lee-suodatin</strong> tai <strong>Frost-suodatin</strong>. Oletusarvo on 1.",
	"@@Speckle_Filter-Size_tag0@@": "Määrittää kohinan suodattamiseen käytettävän pikseli-ikkunan koon:",
	"@@Speckle_Filter-Size_tag1@@": "3x3",
	"@@Speckle_Filter-Size_tag2@@": "5x5",
	"@@Speckle_Filter-Size_tag3@@": "7x7",
	"@@Speckle_Filter-Size_tag4@@": "9x9",
	"@@Speckle_Filter-Size_tag5@@": "11x11",
	"@@Speckle_Filter-Type_tag0@@": "Määrittää suodatintyypin, jota käytetään tasoittamisalgoritmissa  täplikkyyden poistamiseen:",
	"@@Speckle_Filter-Type_tag1@@": "<strong>Lee-suodatin</strong> – Vähentää täplikkyyttä käyttämällä jokaiseen kuvan pikseliin sijaintisuodatinta, joka suodattaa aineiston neliöikkunassa laskettujen paikallisten tilastotietojen perusteella. Tästä suodattimesta on hyötyä, jos haluat tasoittaa täplikästä aineistoa, jossa on lisä- tai kerrannaiskomponentti. Tämä on oletusarvo.",
	"@@Speckle_Filter-Type_tag3@@": "<strong>Tehostettu Lee-suodatin</strong> – – Lee-suodattimen muokattu versio, jossa on <strong>Vaimennustekijä</strong> ja <strong>Katselukertojen määrä</strong>. Tästä suodattimesta on hyötyä, jos haluat vähentää täplikkyyttä ja säilyttää samalla tekstuuritietoja.",
	"@@Speckle_Filter-Type_tag9@@": "<strong>Frost-suodatin</strong> – Vähentää täplikkyyttä käyttämällä eksponentiaalisesti vaimennettua, pyöreästi symmetristä suodatinta, joka hyödyntää yksittäisten suodatinikkunoiden paikallisia tilastotietoja. Tästä suodattimesta on hyötyä, jos haluat vähentää täplikkyyttä ja säilyttää samalla reunat tutkakuvissa.",
	"@@Speckle_Filter-Type_tag11@@": "<strong>Kuan-suodatin</strong> – Lee-suodattimen tavoin tämä suodatin käyttää jokaiseen kuvan pikseliin sijaintisuodatinta ja suodattaa aineiston neliöikkunassa laskettujen paikallisten tilastotietojen perusteella. Tästä suodattimesta on hyötyä, jos haluat vähentää täplikkyyttä ja säilyttää samalla reunat tutkakuvissa.",
	"@@Speckle_Multiplicative-Noise-Mean_tag0@@": "Määrittää kerrannaiskohinan keskiarvon. Suurempi kohun keskiarvo tuottaa epätasaisemmat reunat, ja pienemmät arvot tuottavat tasaisemmat reunat.",
	"@@Speckle_Multiplicative-Noise-Mean_tag1@@": "Tämä parametri on kelvollinen vain, jos <strong>Suodattimen tyyppi</strong> -arvo on <strong>Lee-suodatin</strong> ja <strong>Kohinamalli</strong>-arvo on <strong>Lisäkohina</strong> tai <strong>Lisä- ja kerrannaiskohina</strong>. Oletusarvo on 1.",
	"@@Speckle_Noise-Model_tag0@@": "Määrittää kohutyypin, joka heikentää tutkakuvan laatua:",
	"@@Speckle_Noise-Model_tag1@@": "<strong>Kerrannaiskohina</strong> – Satunnainen signaalikohina, joka on kerrottu merkitykselliseksi signaaliksi tallennuksen tai lähetyksen aikana",
	"@@Speckle_Noise-Model_tag3@@": "<strong>Lisäkohina</strong> – Satunnainen signaalikohina, joka on lisätty merkitykselliseksi signaaliksi tallennuksen tai lähetyksen aikana",
	"@@Speckle_Noise-Model_tag5@@": "<strong>Lisä- ja kerrannaiskohina</strong> – Molemmat kohinamallit",
	"@@Speckle_Noise-Variance_tag0@@": "Määrittää tutkakuvan kohinavarianssin.",
	"@@Speckle_Noise-Variance_tag1@@": "Tämä parametri on kelvollinen vain, jos <strong>Suodattimen tyyppi</strong> -arvo on <strong>Lee-suodatin</strong> ja <strong>Kohinamalli</strong>-arvo on <strong>Lisäkohina</strong> tai <strong>Lisä- ja kerrannaiskohina</strong>. Oletusarvo on 0,25.",
	"@@Speckle_Number-of-Looks_tag0@@": "Määrittää kuvan katselumäärän, joka ohjaa kuvan tasoittamista ja arvioi kohinavarianssia. Pienempi arvo tuottaa tasaisemman kuvan, ja suurempi arvo säilyttää enemmän kuvan ominaisuuksia.",
	"@@Speckle_Number-of-Looks_tag1@@": "Tämä parametri on kelvollinen vain, jos <strong>Suodattimen tyyppi</strong> -arvo on <strong>Lee-suodatin</strong> ja <strong>Kohinamalli</strong>-arvo on <strong>Kerrannaiskohina</strong>, tai kun <strong>Suodattimen tyyppi</strong> -arvo on <strong>Kuan-suodatin</strong>. Oletusarvo on 1.",
	"@@Speckle_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Spectral-Conversion_Conversion-Matrix_tag0@@": "Lähtöaineiston rasterin muuttamiseen käytetty matriisi.",
	"@@Spectral-Conversion_Conversion-Matrix_tag1@@": "Tämä muunnos suoritetaan seuraavan yhtälön avulla:",
	"@@Spectral-Conversion_Conversion-Matrix_tag2@@": "Output Band_R = Weight_P * Band_C",
	"@@Spectral-Conversion_Conversion-Matrix_tag3@@": "kohteessa:",
	"@@Spectral-Conversion_Conversion-Matrix_tag4@@": "Band_R on tulosaineiston kaista, jossa R on numero väliltä 1 ja tulosaineiston kaistojen määrä.",
	"@@Spectral-Conversion_Conversion-Matrix_tag5@@": "Weight_P on painojen pilkuin eroteltu luettelo (yksi jokaiselle lähtöaineiston kaistalle). Jokaisen kaistan painojen summan tulee olla 1.",
	"@@Spectral-Conversion_Conversion-Matrix_tag6@@": "Band_C on lähtöaineiston kuva, jossa C on numero väliltä 1 ja lähtöaineiston kuvan kaistojen määrä.",
	"@@Spectral-Conversion_Raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Spectral-Conversion_Raster_tag1@@": "Tämä voi olla rasteriaineistoryhmä, mosaiikkiaineistoryhmä tai kuvapalvelu.",
	"@@Spectral-Conversion_Size_tag0@@": "Rivien ja sarakkeiden määrä kohteessa <strong>Muuntomatriisi</strong>.",
	"@@Square_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Square_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Square_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Square_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Square_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Square_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Square_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Square_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Square_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Square_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Square_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Square_Raster_tag0@@": "Lähtöaineiston arvot, jotka neliöidään.",
	"@@Square-Root_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Square-Root_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Square-Root_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Square-Root_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Square-Root_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Square-Root_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Square-Root_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Square-Root_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Square-Root_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Square-Root_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Square-Root_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Square-Root_Raster_tag0@@": "Lähtöaineiston arvot, joita käytetään neliöjuuren etsimiseen.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag0@@": "Määritä tilastoarvot kaikille kaistoille.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag1@@": "${Histogram}-sarake on vain luku -kenttä, joka voidaan täyttää käyttämällä <strong>Tuo</strong>-parametria. Jos tuot histogrammitiedoston, ${Histogram}-sarakkeelle määritetään merkintä <strong>Määritetty</strong>.",
	"@@Statistics-and-Histogram_Import_tag0@@": "Tuo tilastotiedot ja histogrammitiedot nykyisestä rasterista tai XML-tiedostosta.",
	"@@Statistics-and-Histogram_Raster_tag0@@": "Lähtöaineiston rasteri, joka edellyttää tilasto- ja histogrammitietojen määrittämistä.",
	"@@Statistics-and-Histogram_Statistics_tag0@@": "Määritä tilastoarvot kaikille kaistoille.",
	"@@Stream-Link_Flow-Direction-Raster_tag0@@": "Lähtöaineiston rasteri, joka näyttää virtaussuunnan jokaisesta solusta.",
	"@@Stream-Link_Flow-Direction-Raster_tag1@@": "Virtaussuuntarasteri voidaan luoda suorittamalla <strong>Virtaussuunta</strong>-funktio.",
	"@@Stream-Link_Stream-Raster_tag0@@": "Lähtöaineiston rasteri, joka kuvaa lineaarista virtaverkostoa.",
	"@@Stream-Order_Flow-Direction-Raster_tag0@@": "Lähtöaineiston rasteri, joka näyttää virtaussuunnan jokaisesta solusta.",
	"@@Stream-Order_Flow-Direction-Raster_tag1@@": "Virtaussuuntarasteri voidaan luoda suorittamalla <strong>Virtaussuunta</strong>-funktio.",
	"@@Stream-Order_Order-Method_tag0@@": "Menetelmä, jota käytetään vesireitin tason määrittämiseen.",
	"@@Stream-Order_Order-Method_tag1@@": "<strong>STRAHLER</strong> – Strahlerin vuonna 1952 esittelemä vesireitin tasomenetelmä. Vesireitin taso nousee vain, kun saman tason virtaukset leikkaavat. Ensimmäisen tason ja toisen tason yhteyden risteyskohta säilyy toisen tason yhteytenä sen sijaan, että luotaisiin kolmannen tason yhteys. Tämä on oletusarvo.",
	"@@Stream-Order_Order-Method_tag3@@": "<strong>SHREVE</strong> – Shreven vuonna 1967 esittelemä vesireitin tasomenetelmä magnitudin mukaan. Kaikille yhteyksille, joissa ei ole sivujokia, määritetään yksi magnitudi. Magnitudit ovat lisämyötäsuuntia. Kun kaksi yhteyttä muodostavat risteyskohdan, niiden magnitudit lisätään ja määritetään myötäsuunnan yhteydelle.",
	"@@Stream-Order_Stream-Raster_tag0@@": "Lähtöaineiston virtarasteri, joka kuvaa lineaarista virtaverkostoa.",
	"@@Stretch_Auto-Gamma_tag0@@": "Käytä <strong>Automaattinen gamma</strong> -vaihtoehtoa gamman laskemiseen aineistoryhmän tilasto- ja histogrammitiedoista. Tilastotiedot voivat olla itse funktion arvioimia tilastotietoja, tai ne voivat olla ohjelmiston arvioimia tilastotietoja, jos olet valinnut karttatason.",
	"@@Stretch_Dynamic-Range-Adjustment_tag0@@": "Valitse <strong>Dynaamisen alueen säätö</strong> -valintaruutu, jos haluat, että tilastotiedot lasketaan vain näytöllä näkyvistä pikseleistä. Tätä vaihtoehtoa käytetään yleensä silloin, jos kuva julkaistaan ja sitä käytetään verkkosovelluksessa, joka ei voi suorittaa tämäntyyppistä venytystä.",
	"@@Stretch_Estimate-Statistics_tag0@@": "Valitse <strong>Arvioi tilastotiedot</strong> -valintaruutu, jos haluat arvioida tilastotiedot. Arvioidut tilastotiedot lasketaan 1 000 x 1 000 -otannasta rasterin keskikohdasta, ja niihin sovelletaan venytystä.",
	"@@Stretch_Estimate-Statistics_tag3@@": "Jos tämä vaihtoehto on valittuna ja rasterilla on tilastotietoja tai jos olet syöttänyt arvoja <strong>Tilastotiedot</strong>-tauluun, niitä käytetään arvioinnin sijasta, ellei venytys edellytä histogrammia. Jos venytys edellyttää histogrammia, jota ei ole, histogrammi arvioidaan.",
	"@@Stretch_Gamma_tag0@@": "Käytä liukusäädintä määrittääksesi <strong>Gamma</strong>-arvon manuaalisesti.",
	"@@Stretch_Number-Of-Standard-Deviations_tag0@@": "Määritä käytettävien keskihajontojen määrän n-arvo. Tätä menetelmää käytetään korostamaan sitä, miten paljon kohdearvot poikkeavat keskiarvosta. Yleensä menetelmää kannattaa käyttää hajautetulle aineistolle.",
	"@@Stretch_Output-Maximum_tag0@@": "Määritä histogrammin pikseliarvo.",
	"@@Stretch_Output-Maximum_tag1@@": "<strong>Tulosminimi</strong>- ja <strong>Tulosmaksimi</strong>-arvot määrittävät arvoalueen, johon kohdistetaan lineaarinen kontrastin venytys.",
	"@@Stretch_Output-Minimum_tag0@@": "Määritä histogrammin pienin pikseliarvo.",
	"@@Stretch_Output-Minimum_tag1@@": "<strong>Tulosminimi</strong>- ja <strong>Tulosmaksimi</strong>-arvot määrittävät arvoalueen, johon kohdistetaan lineaarinen kontrastin venytys.",
	"@@Stretch_Percent-Clip-Maximum_tag0@@": "Määritä niiden suurien arvojen prosenttiosuus, jotka suljetaan pois venytyksestä.",
	"@@Stretch_Percent-Clip-Maximum_tag1@@": "Kelvollisia arvoja ovat 0–99.",
	"@@Stretch_Percent-Clip-Minimum_tag0@@": "Määritä niiden pienien arvojen prosenttiosuus, jotka suljetaan pois venytyksestä.",
	"@@Stretch_Percent-Clip-Minimum_tag1@@": "Kelvollisia arvoja ovat 0–99.",
	"@@Stretch_Raster_tag0@@": "Lähtöaineiston rasteri, jolle tehdään kontrastin venytys.",
	"@@Stretch_Sigmoid-Strength-Level_tag0@@": "<strong>Vahvuustaso</strong> määrittää, miten paljon sigmoidisesta funktiosta käytetään venytykseen. Pieni arvo (kuten 1) käyttää vain käyrän keskiosuutta, jolloin tuloksena ovat tylsät ja laimeat värit. Suuri arvo (kuten 6) käyttää koko käyrää, jolloin tuloksena ovat voimakkaat ja terävät värit.",
	"@@Stretch_Statistics_tag0@@": "Voit antaa valintaikkunaan omat tilastotiedot. Oletusarvon mukaan tilastotiedot noudetaan aineistosta. Jos kuitenkin annat arvoja tähän parametriin, sen sijasta käytetään niitä.",
	"@@Stretch_Type_tag0@@": "Valitse venytystyyppimenetelmä:",
	"@@Stretch_Type_tag1@@": "Ei mitään – Ei kontrastin venytystä",
	"@@Stretch_Type_tag2@@": "StdDev – Keskihajonnan venytys",
	"@@Stretch_Type_tag3@@": "MinMax – minimi-maksimivenytys",
	"@@Stretch_Type_tag4@@": "PercentMinMax – Prosenttiosuuden leikkauksen venytys",
	"@@Stretch_Type_tag5@@": "Sigmoid – Sigmoid-venytys",
	"@@Stretch_Use-Gamma_tag0@@": "<strong>Käytä gammaa</strong> -valintaruutu, jos haluat käyttää gammavenytystä.",
	"@@Swath_Cellsize_tag0@@": "Tulosaineiston rasterin solukoko havaitaan automaattisesti, mutta voit kuitenkin muuttaa tätä halutessasi. Solukokoa voidaan muuttaa, mutta rasterin aineistoryhmän laajuus pysyy samana.",
	"@@Swath_Interpolation-Method_tag0@@": "Tälle funktiolle on neljä uudelleenotantamenetelmää:",
	"@@Swath_Interpolation-Method_tag1@@": "<strong>Lähin naapuri</strong> – Laskee pikseliarvon lähimmän pikselin avulla. Jos lähdepikseliä ei ole, uutta pikseliä ei voi luoda tulosaineistoon.",
	"@@Swath_Interpolation-Method_tag3@@": "<strong>Bilineaarinen</strong> – Laskee pikseliarvon käyttämällä neljän lähimmän pikselin etäisyyspainotettua arvoa.",
	"@@Swath_Interpolation-Method_tag5@@": "<strong>Lineaarinen tinning</strong> – Interpoloi pinnan käyttämällä kolmiomitattuja epäsäännöllisiä verkkoja epäsäännöllisen rasterin solujen keskipisteistä ja muuntaa sitten pinnan säännölliseksi rasteriksi.",
	"@@Swath_Interpolation-Method_tag7@@": "<strong>Luonnolliset naapurit</strong> – Menetelmä suorittaa lähimmän naapurin määrityksen ja on nopein interpoloinnin menetelmistä. Sitä käytetään ensisijaisesti erillisaineistolle, kuten maankäyttöluokitukselle, koska se ei muuta solujen arvoja. Suurin sijaintivirhe on puolet solukoosta.",
	"@@Swath_Raster_tag0@@": "Epäsäännöllisen ruudukon sisältävä rasteri, jolle uudelleenotanta suoritetaan.",
	"@@Tan_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Tan_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Tan_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Tan_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Tan_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Tan_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Tan_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Tan_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Tan_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Tan_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Tan_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Tan_Raster_tag0@@": "Lähtöaineisto, jolle tangentin arvot lasketaan.",
	"@@TanH_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@TanH_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@TanH_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@TanH_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@TanH_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@TanH_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@TanH_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@TanH_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@TanH_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@TanH_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@TanH_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@TanH_Raster_tag0@@": "Lähtöaineisto, jolle hyperbolisen tangentin arvot lasketaan.",
	"@@Tasseled-Cap_Raster_tag0@@": "Lähtöaineiston rasteri, jossa Tasseled Cap -muunnos suoritetaan.",
	"@@Times_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Times_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Times_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Times_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Times_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Times_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Times_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Times_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Times_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Times_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Times_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Times_Raster_tag0@@": "Lähtöaineisto, joka sisältää kerrottavat arvot.",
	"@@Times_Raster_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Times_Raster2_tag0@@": "Lähtöaineisto, joka sisältää arvot, joilla ensimmäinen lähtöaineisto kerrotaan.",
	"@@Times_Raster2_tag1@@": "Vakioarvoa voidaan käyttää tämän parametrin lähtöaineistona, jos rasteri on määritetty toiselle parametrille.",
	"@@Transpose-Bits_Bit-Pattern_tag0@@": "Valitse transponoinnin tyyppi, jos haluat transponoida tai määrittää mukautetun transponoinnin:",
	"@@Transpose-Bits_Bit-Pattern_tag1@@": "Landsat 8 - untuvapilvi",
	"@@Transpose-Bits_Bit-Pattern_tag2@@": "Landsat 8 - pilvi",
	"@@Transpose-Bits_Bit-Pattern_tag3@@": "Landsat 8 - pilvien varjo",
	"@@Transpose-Bits_Bit-Pattern_tag4@@": "Landsat 8 - määritetty täyttö",
	"@@Transpose-Bits_Bit-Pattern_tag5@@": "Landsat 8 - puuttuva kehys",
	"@@Transpose-Bits_Bit-Pattern_tag6@@": "Landsat 8 - lumi/jää",
	"@@Transpose-Bits_Bit-Pattern_tag7@@": "Landsat 8 - maaston katvealue",
	"@@Transpose-Bits_Bit-Pattern_tag8@@": "Landsat 8 - kasvillisuus",
	"@@Transpose-Bits_Bit-Pattern_tag9@@": "Landsat 8 - vesialue",
	"@@Transpose-Bits_Bit-Pattern_tag10@@": "Käyttäjän määrittämä",
	"@@Transpose-Bits_Constant-Value_tag0@@": "Valinnainen arvo, jota käytetään kaikkien niiden bittien täyttämiseen, jotka eivät ole mukana transponoinnissa. Tämä parametri on näkyvissä, jos parametrin <strong>Luo täyttörasteri vakiosta</strong> arvoksi on määritetty <strong>Kyllä</strong>.",
	"@@Transpose-Bits_Fill-Raster_tag0@@": "Määritä rasteriaineistoryhmä, jota käytetään kaikkien niiden bittien täyttämiseen, jotka eivät ole mukana transponoinnissa. Tämä parametri on näkyvissä, jos parametrin <strong>Luo täyttörasteri vakiosta</strong> arvoksi on määritetty <strong>Ei</strong>.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag0@@": "Luo täyttörasteri vakioarvon avulla:",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag1@@": "<strong>Kyllä</strong> – Rasteri luodaan vakioarvon avulla niiden bittien täyttämiseksi, jotka eivät ole mukana transponoinnissa. Tämä on oletusarvo.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag3@@": "<strong>Ei</strong> – Rasteri luodaan pikseliarvojen avulla nykyisestä rasteriaineistoryhmästä niiden bittien täyttämiseksi, jotka eivät ole mukana transponoinnissa.",
	"@@Transpose-Bits_Output-Bit-and-Input-Bit_tag0@@": "Vain luku -taulu, jossa näytetään tulosaineiston bitit ja lähtöaineistot, jotka ovat niiden paikalla.",
	"@@Transpose-Bits_Raster_tag0@@": "Lähtöaineiston rasteri, joka puretaan ja täsmäytetään uudelleen.",
	"@@Unit-Conversion_From-Unit_tag0@@": "Pikselien alkuperäinen yksikkötyyppi.",
	"@@Unit-Conversion_Raster_tag0@@": "Lähtöaineiston rasteri, joka sisältää muunnetut yksiköt.",
	"@@Unit-Conversion_To-Unit_tag0@@": "Pikselien muunnettu yksikkötyyppi.",
	"@@Vector-Field_Angle-Reference-System_tag0@@": "Määrittää suuntakomponentin mittaustavan.",
	"@@Vector-Field_Angle-Reference-System_tag1@@": "Maantieteellinen – 0° osoittaa pohjoissuunnan ja 90° osoittaa itäsuunnan",
	"@@Vector-Field_Angle-Reference-System_tag2@@": "Aritmeettinen – 0° osoittaa itäsuunnan ja 90° osoittaa pohjoissuunnan",
	"@@Vector-Field_Input-Data-Type_tag0@@": "Lähtöaineiston esittämän vektorikentän tyyppi.",
	"@@Vector-Field_Input-Data-Type_tag1@@": "Tuntematon – Ei tiedetä, kuvaavatko lähtöaineistot U-V:tä vai magnitudi-suuntaa.",
	"@@Vector-Field_Input-Data-Type_tag2@@": "U-V – Lähtöaineisto kuvaa U- ja V-komponentteja.",
	"@@Vector-Field_Input-Data-Type_tag3@@": "Magnitudi-suunta – Lähtöaineisto kuvaa magnitudia ja suuntaa.",
	"@@Vector-Field_Output-Data-Type_tag0@@": "Tulosaineiston esittämän vektorikentän tyyppi.",
	"@@Vector-Field_Output-Data-Type_tag1@@": "Magnitudi-suunta – Tulosaineisto kuvaa magnitudia ja suuntaa.",
	"@@Vector-Field_Output-Data-Type_tag2@@": "U-V – Tulosaineisto kuvaa U- ja V-komponentteja.",
	"@@Vector-Field_Raster1_tag0@@": "Ensimmäinen lähtöaineiston rasteri.",
	"@@Vector-Field_Raster1_tag1@@": "Tämä on joko U-arvo tai magnitudi.",
	"@@Vector-Field_Raster2_tag0@@": "Toinen lähtöaineiston rasteri.",
	"@@Vector-Field_Raster2_tag1@@": "Tämä on joko V-arvo tai suunta.",
	"@@Viewshed_Analysis-Method_tag0@@": "Valitse menetelmä, jonka avulla näkyvyys lasketaan. Tämän vaihtoehdon avulla voit tarkkuuden sijasta parantaa tehokkuutta.",
	"@@Viewshed_Analysis-Method_tag1@@": "Kaikki tähtäysviivat – Tähtäysviiva suoritetaan rasterin jokaisessa pikselissä näkyvien alueiden luomiseksi. Tämä on oletusmenetelmä.",
	"@@Viewshed_Analysis-Method_tag2@@": "Ympäryksen tähtäysviivat – Tähtäysviivat suoritetaan näkyvien alueiden ympäryksen pikseleissä näkyvyysalueiden luomiseksi. Tämä menetelmä on tehokkaampi kuin <strong>Kaikki tähtäysviivat</strong> -menetelmä, koska laskelmassa on vähemmän tähtäysviivoja.",
	"@@Viewshed_Analysis-Type_tag0@@": "Valitse suoritettavan näkyvyysanalyysin tyyppi joko määrittämällä, miten näkyvä kukin solu on tarkkailupisteelle, tai määrittämällä kukin pintasijainti, jolla tarkkailupisteet ovat näkyviä.",
	"@@Viewshed_Analysis-Type_tag1@@": "Taajuus – Niiden kertojen määrä, jolloin kukin lähtöaineiston pintarasterin pikselisijainti voi näkyä lähtöaineiston tarkkailupistesijainneissa (pisteinä tai moniviivan tarkkailupistekohteiden taitepisteinä). Tämä on oletusarvo.",
	"@@Viewshed_Analysis-Type_tag2@@": "Tarkkailupisteet – Lähtöaineisto määrittää tarkalleen, mitkä tarkkailupisteet näkyvät kustakin rasteripinnan sijainnista. Tällä analyysityypillä lähtöaineiston tarkkailupisteiden sallittu maksimäärä on 32.",
	"@@Viewshed_Horizontal-End-Angle_tag0@@": "Tämä arvo määrittää vaakasuuntaisen lukukulman loppukulman. Arvo määritetään asteina (0–360,0). 0 tarkoittaa pohjoissuuntaa. Oletusarvo on 360,0.",
	"@@Viewshed_Horizontal-End-Angle_tag1@@": "Se voi olla kenttä lähtöaineiston <strong>Tarkkailijakohteet</strong>-aineistoryhmässä tai numeroarvo. Jos tälle parametrille määritetään arvo, kyseistä arvoa käytetään kaikissa tarkkailupisteissä. Jos haluat määrittää eri arvot kullekin tarkkailupisteelle, määritä tämän parametrin arvoksi <strong>Tarkkailijakohteet</strong>-aineistoryhmän kenttä.",
	"@@Viewshed_Horizontal-Start-Angle_tag0@@": "Tämä arvo määrittää vaakasuuntaisen lukukulman alkukulman. Arvo määritetään asteina (0–360,0). 0 tarkoittaa pohjoissuuntaa. Oletusarvo on 0.",
	"@@Viewshed_Horizontal-Start-Angle_tag1@@": "Se voi olla kenttä lähtöaineiston <strong>Tarkkailijakohteet</strong>-aineistoryhmässä tai numeroarvo. Jos tälle parametrille määritetään arvo, kyseistä arvoa käytetään kaikissa tarkkailupisteissä. Jos haluat määrittää eri arvot kullekin tarkkailupisteelle, määritä tämän parametrin arvoksi <strong>Tarkkailijakohteet</strong>-aineistoryhmän kenttä.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag0@@": "Sisäsäteen parametrin etäisyyden tyyppi.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag1@@": "Ei valittu – <strong>Sisäsäde</strong> tulkitaan 2D-etäisyydeksi. Tämä on oletusarvo.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag4@@": "Valittu – <strong>Sisäsäde</strong> tulkitaan 3D-etäisyydeksi.",
	"@@Viewshed_Inner-Radius_tag0@@": "Tämä arvo määrittää (vähimmäis)aloitusetäisyyden siitä, mistä näkyvyys määritetään. Tätä etäisyyttä lähempänä olevat pikselit eivät ole näkyviä tulosaineistossa, mutta niiden pikselien näkyvyys voi kuitenkin estyä, jotka ovat <strong>Sisäsäde</strong>- ja <strong>Ulkosäde</strong>-arvojen välillä. Oletusarvo on 0.",
	"@@Viewshed_Inner-Radius_tag5@@": "Se voi olla kenttä lähtöaineiston <strong>Tarkkailijakohteet</strong>-aineistoryhmässä tai numeroarvo. Jos tälle parametrille määritetään arvo, kyseistä arvoa käytetään kaikissa tarkkailupisteissä. Jos haluat määrittää eri arvot kullekin tarkkailupisteelle, määritä tämän parametrin arvoksi <strong>Tarkkailijakohteet</strong>-aineistoryhmän kenttä.",
	"@@Viewshed_Observer-Elevation_tag0@@": "Tämän arvon avulla määritetään tarkkailupisteiden tai taitepisteiden pintakorkeudet.",
	"@@Viewshed_Observer-Elevation_tag1@@": "Se voi olla kenttä lähtöaineiston <strong>Tarkkailijakohteet</strong>-aineistoryhmässä tai numeroarvo. Jos tätä parametria ei määritetä, tarkkailukorkeus saadaan pintarasterista bilineaarisen interpoloinnin avulla. Jos tälle parametrille määritetään arvo, kyseistä arvoa käytetään kaikissa tarkkailupisteissä. Jos haluat määrittää eri arvot kullekin tarkkailupisteelle, määritä tämän parametrin arvoksi <strong>Tarkkailijakohteet</strong>-aineistoryhmän kenttä.",
	"@@Viewshed_Observer-Features_tag0@@": "Pakollinen lähtöaineiston kohdeluokka, joka määrittää tarkkailusijainnit. Se voi olla piste-, monipiste- tai moniviivakohde.",
	"@@Viewshed_Observer-Features_tag1@@": "Lähtöaineiston kohdeluokka muunnetaan geosentriseksi 3D-koordinaattijärjestelmäksi näkyvyyslaskennan aikana. Pintarasterin laajuuden ulkopuoliset tai NoData-soluissa olevat tarkkailupisteet ohitetaan laskennassa.",
	"@@Viewshed_Observer-Offset_tag0@@": "Tämä arvo ilmaisee pystyetäisyyden (pintayksiköinä), joka lisätään tarkkailukorkeuteen. Sen tyypin tulee olla kokonaisluku- tai liukulukuarvo.",
	"@@Viewshed_Observer-Offset_tag1@@": "Se voi olla kenttä lähtöaineiston <strong>Tarkkailijakohteet</strong>-aineistoryhmässä tai numeroarvo. Jos tälle parametrille määritetään arvo, kyseistä arvoa käytetään kaikissa tarkkailupisteissä. Jos haluat määrittää eri arvot kullekin tarkkailupisteelle, määritä tämän parametrin arvoksi <strong>Tarkkailijakohteet</strong>-aineistoryhmän kenttä.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag0@@": "Ulkosäteen parametrin etäisyyden tyyppi.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag1@@": "Ei valittu – <strong>Ulkosäde</strong> tulkitaan 2D-etäisyydeksi. Tämä on oletusarvo.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag4@@": "Valittu – <strong>Ulkosäde</strong> tulkitaan 3D-etäisyydeksi.",
	"@@Viewshed_Outer-Radius_tag0@@": "Tämä arvo määrittää enimmäisetäisyyden siitä, mistä näkyvyys määritetään. Tämän etäisyyden ulkopuoliset pikselit jätetään pois analyysista.",
	"@@Viewshed_Outer-Radius_tag1@@": "Se voi olla kenttä lähtöaineiston <strong>Tarkkailijakohteet</strong>-aineistoryhmässä tai numeroarvo. Jos tälle parametrille määritetään arvo, kyseistä arvoa käytetään kaikissa tarkkailupisteissä. Jos haluat määrittää eri arvot kullekin tarkkailupisteelle, määritä tämän parametrin arvoksi <strong>Tarkkailijakohteet</strong>-aineistoryhmän kenttä.",
	"@@Viewshed_Raster_tag0@@": "Pakollinen lähtöaineiston pintarasteri. Sen tyyppi voi olla kokonaisluku tai liukulukurasteri.",
	"@@Viewshed_Raster_tag1@@": "Lähtöaineisto muunnetaan geosentriseksi 3D-koordinaattijärjestelmäksi näkyvyyslaskennan aikana. Lähtöaineiston rasterin NoData-solut eivät estä näkyvyyden määritystä.",
	"@@Viewshed_Refractive-Coefficient_tag0@@": "Ilman näkyvän valon taittokyvyn kerroin.",
	"@@Viewshed_Refractive-Coefficient_tag1@@": "Oletusarvo on 0,13.",
	"@@Viewshed_Surface-Offset_tag0@@": "Tämä arvo ilmaisee pystyetäisyyden (pintayksiköinä), joka lisätään kunkin kohdepikselin z-arvoon, koska se otetaan huomioon näkyvyydessä. Sen tyypin tulee olla kokonaisluku- tai liukulukuarvo.",
	"@@Viewshed_Surface-Offset_tag1@@": "Se voi olla kenttä lähtöaineiston <strong>Tarkkailijakohteet</strong>-aineistoryhmässä tai numeroarvo. Jos tälle parametrille määritetään arvo, kyseistä arvoa käytetään kaikissa tarkkailupisteissä. Jos haluat määrittää eri arvot kullekin tarkkailupisteelle, määritä tämän parametrin arvoksi <strong>Tarkkailijakohteet</strong>-aineistoryhmän kenttä.",
	"@@Viewshed_Vertical-Error_tag0@@": "Epävarmuuden määrä pintakorkeuden arvoissa keskimääräisenä neliöjuuren virheenä (Root Mean Square Error, RMSE) mitattuna. Se on liukulukuarvo, joka kuvaa odotettua virhettä lähtöaineiston korkeusarvoissa. Kun tälle parametrille määritetään arvo, joka suurempi kuin 0, tulosaineiston näkyvyysrasteri on liukuluku. Tällöin tulosaineiston näkyvyysrasterin jokainen pikseliarvo kuvaa sen todennäköisyyttä, että solu näkyy mille tahansa tarkkailupisteelle.",
	"@@Viewshed_Vertical-Error_tag1@@": "Kun <strong>Analyysityyppi</strong> on <strong>Tarkkailijat</strong> tai <strong>Analyysimenetelmä</strong> on <strong>Ympäryksen tähtäysviivat</strong>, tämä parametri poistetaan käytöstä.",
	"@@Viewshed_Vertical-Lower-Angle_tag0@@": "Tämä arvo määrittää tarkistuksen pystysuuntaisen alakulman rajan vaakatason alapuolella. Arvo määritetään asteina (-90,0–0), ja se voi olla kokonaisluku tai liukuluku. Oletusarvo on -90,0.",
	"@@Viewshed_Vertical-Lower-Angle_tag1@@": "Se voi olla kenttä lähtöaineiston <strong>Tarkkailijakohteet</strong>-aineistoryhmässä tai numeroarvo. Jos tälle parametrille määritetään arvo, kyseistä arvoa käytetään kaikissa tarkkailupisteissä. Jos haluat määrittää eri arvot kullekin tarkkailupisteelle, määritä tämän parametrin arvoksi <strong>Tarkkailijakohteet</strong>-aineistoryhmän kenttä.",
	"@@Viewshed_Vertical-Upper-Angle_tag0@@": "Tämä arvo määrittää tarkistuksen pystysuuntaisen yläkulman rajan vaakatason yläpuolella. Arvo määritetään asteina (0–90,0), ja se voi olla kokonaisluku tai liukuluku. Oletusarvo on 90,0.",
	"@@Viewshed_Vertical-Upper-Angle_tag1@@": "Se voi olla kenttä lähtöaineiston <strong>Tarkkailijakohteet</strong>-aineistoryhmässä tai numeroarvo. Jos tälle parametrille määritetään arvo, kyseistä arvoa käytetään kaikissa tarkkailupisteissä. Jos haluat määrittää eri arvot kullekin tarkkailupisteelle, määritä tämän parametrin arvoksi <strong>Tarkkailijakohteet</strong>-aineistoryhmän kenttä.",
	"@@Watershed_Flow-Direction-Raster_tag0@@": "Lähtöaineiston rasteri, joka näyttää virtaussuunnan jokaisesta solusta.",
	"@@Watershed_Flow-Direction-Raster_tag1@@": "Virtaussuuntarasteri voidaan luoda suorittamalla <strong>Virtaussuunta</strong>-funktio.",
	"@@Watershed_Pour-Point(s)-Raster_tag0@@": "Lähtöaineiston laskupisteiden sijainnit",
	"@@Watershed_Pour-Point(s)-Raster_tag1@@": "Tämä rasteri kuvaa soluja, joiden yläpuolinen osallisuusalue tai vesistö määritetään. Kaikkia niitä soluja, jotka eivät ole NoData, käytetään lähdesoluina.",
	"@@Watershed_Pour-Point-Field_tag0@@": "Kenttää käytetään määrittämään laskupistesijaintien arvot.",
	"@@Watershed_Pour-Point-Field_tag1@@": "Rasterin laskupisteen aineistoryhmässä arvoa ${Value} käytetään oletusarvona.",
	"@@Weighted-Overlay_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Weighted-Overlay_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Weighted-Overlay_Cellsize-Type_tag2@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Weighted-Overlay_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Weighted-Overlay_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Weighted-Overlay_Cellsize-Type_tag5@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Weighted-Overlay_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Weighted-Overlay_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Weighted-Overlay_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Weighted-Overlay_Extent-Type_tag3@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Weighted-Overlay_Extent-Type_tag4@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Weighted-Overlay_Scales_tag0@@": "Niiden uusien arvojen alue, joiden mukaan vanhat arvot täsmäytetään uudelleen.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag0@@": "Painotetun päällekkäisyyden taulussa on neljä osaa:",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag1@@": "Karttataso – Kaikkien lähtöaineiston rasterien tyypin tulee olla kokonaisluku.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag2@@": "Vaikutus – Jokaista lähtöaineiston rasteria painotetaan sen tärkeyden tai vaikutuksen mukaan suhteellisena prosenttiosuutena. Prosenttivaikutuksen painotusarvojen summan on oltava 100, ja jokaisen painotusarvon tulee olla kokonaisluku.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag3@@": "Kenttä – Lähtöaineiston rasterin kokonaisluku- tai merkkijonokenttä, jota käytetään painottamisessa.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag4@@": "Uudelleentäsmäytystaulu – Lähtöaineiston rasterin jokaiselle arvolle määritetään uusi mittakaavan arvo uudelleentäsmäytystaulun perusteella. Mittakaavan arvo voi olla kelvollinen arvo tai NoData-arvo.",
	"@@Weighted-Sum_Cellsize-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan samat tulokset.",
	"@@Weighted-Sum_Cellsize-Type_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Weighted-Sum_Cellsize-Type_tag2@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Weighted-Sum_Cellsize-Type_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Weighted-Sum_Cellsize-Type_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Weighted-Sum_Cellsize-Type_tag5@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Weighted-Sum_Extent-Type_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Weighted-Sum_Extent-Type_tag1@@": "Ensimmäinen – Käytä ensimmäisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Weighted-Sum_Extent-Type_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Weighted-Sum_Extent-Type_tag3@@": "Viimeinen – Käytä viimeisen lähtöaineiston rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Weighted-Sum_Extent-Type_tag4@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag0@@": "Painotetun summan taulussa on kolme ominaisuutta:",
	"@@Weighted-Sum_Weighted-Sum-Table_tag1@@": "Karttataso – Rasteri, jota painotetaan.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag2@@": "Kenttä – Rasterin kenttä, jota käytetään painottamiseen.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag3@@": "Painoarvo – Painoarvo, jonka mukaan rasteri kerrotaan. Se voi olla positiivinen tai negatiivinen desimaaliarvo.",
	"@@Wind-Chill_Temperature-Raster_tag0@@": "Yksikaistainen rasteri, jossa pikseliarvot kuvaavat ympäristön lämpötilaa.",
	"@@Wind-Chill_Temperature-Units_tag0@@": "Lähtöaineiston lämpötilarasteriin liittyvä mittayksikkö. Käytettävissä olevat lähtöaineiston yksiköt ovat celsius, fahrenheit ja kelvin.",
	"@@Wind-Chill_Wind-Chill-Units_tag0@@": "Tulosaineiston rasteriin liittyvä mittayksikkö. Käytettävissä olevat tulosaineiston yksiköt ovat celsius, fahrenheit ja kelvin.",
	"@@Wind-Chill_Wind-Speed-Raster_tag0@@": "Yksikaistainen rasteri, jossa pikseliarvot kuvaavat tuulen nopeutta.",
	"@@Wind-Chill_Wind-Speed-Units_tag0@@": "Määrittää tuulennopeuden rasterin mittayksikön:",
	"@@Wind-Chill_Wind-Speed-Units_tag1@@": "Mailia tunnissa (mph)",
	"@@Wind-Chill_Wind-Speed-Units_tag2@@": "Kilometriä tunnissa (km/h)",
	"@@Wind-Chill_Wind-Speed-Units_tag3@@": "Metriä sekunnissa (m/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag4@@": "Jalkaa sekunnissa (ft/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag5@@": "Solmua (kn)",
	"@@Zonal-Remap_Background-Value_tag0@@": "Tulosaineiston rasterin alkuperäinen pikseliarvo ennen lähtöaineiston pikselien täsmäyttämistä uudelleen.",
	"@@Zonal-Remap_Default-Output-Value_tag0@@": "Arvo, joka määritetään pikselille, joka ei vastaa yhtäkään seuraavassa kohteessa määritettyä ehtoa: <strong>Vyöhykkeisten ominaisuustietojen taulukko</strong>.",
	"@@Zonal-Remap_Default-Output-Value_tag3@@": "Tämä on myös tulosaineiston pikselin arvo, jos joko <strong>Tulosaineistoarvokentän nimi</strong> -parametria ei ole määritetty tai vastaavan vyöhykkeisen raja-arvon tulosaineiston arvo on jätetty määrittämättä <strong>Vyöhykkeisten ominaisuustietojen taulukossa</strong>.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag0@@": "Sen kentän nimi, joka sisältää maksimiarvon, jonka alapuolelle lähtöaineiston pikseli täsmäytetään uudelleen.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag1@@": "Jos tätä ei määritetä tai jos kentän arvo on tyhjäarvo, pikseliarvoista ei testata maksimiarvoa.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag0@@": "Sen kentän nimi, joka sisältää minimiarvon, jonka yläpuolelle lähtöaineiston pikseli täsmäytetään uudelleen.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag1@@": "Jos tätä ei määritetä tai jos kentän arvo on tyhjäarvo, pikseliarvoista ei testata minimiarvoa.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag0@@": "Sen kentän nimi, joka sisältää kohdearvon, johon lähtöaineiston pikseli täsmäytetään uudelleen.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag1@@": "Jos tätä ei määritetä tai jos kentän arvo on tyhjäarvo, uudelleentäsmäytettyjen pikseliarvojen arvoiksi määritetään <strong>Tulosaineiston oletusarvo</strong>.",
	"@@Zonal-Remap_Value-Raster_tag0@@": "Pakollinen yksikaistaisen rasterin lähtöaineisto, joka sisältää uudelleentäsmäytettävät pikseliarvot.",
	"@@Zonal-Remap_Where-Clause_tag0@@": "Valinnainen kysely, jota on käytetty kohteessa <strong>Vyöhykkeisten ominaisuustietojen taulukko</strong>.",
	"@@Zonal-Remap_Where-Clause_tag3@@": "Käytettäessä yllä olevaa taulua esimerkkinä kysely olisi ${Variable1 = 'bare earth' AND Variable2 = 'California'}.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag0@@": "Pakollinen lähtöaineiston taulu, jossa on vähintään kolme kenttää. Siinä on oltava minimikynnysarvo, maksimikynnysarvo ja kohdearvo. Kohdearvo on kenttä, joka sisältää uudelleentäsmäytetyn arvon.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag1@@": "Tiedoston muoto voi olla kohdeluokka, kohdepalvelu tai mikä tahansa taulutyyppi, jota ArcGIS tukee.",
	"@@Zonal-Remap_Zone-Field_tag0@@": "Kentän nimi kohteessa <strong>Vyöhykkeisten ominaisuustietojen taulukko</strong>, joka sisältää vyöhyketunnusten arvot.",
	"@@Zonal-Remap_Zone-Field_tag3@@": "Vyöhyketunnusten arvot on sidottu suoraan vyöhykkeisen rasterin vyöhyketunnuksiin. Ne mahdollistavat toisen suodatuksen tason uudelleentäsmäytyksen aikana. Jos taulun tiettyyn tietueeseen ei ole liitetty vyöhyketunnusta, se ei osallistu uudelleentäsmäytykseen.",
	"@@Zonal-Remap_Zone-Raster_tag0@@": "Yksikaistainen rasteri, jossa kukin pikseli määrittää tiettyyn sijaintiin liitetyt vyöhykkeet. Vyöhyke määräytyy kaikkien niiden lähtöaineiston alueiden mukaan, joilla on sama arvo. Alueiden ei tarvitse olla vierekkäisiä.",
	"@@Predict-Using-Trend_dimensiondefinition_tag0@@": "Määrittää menetelmän, jota käytetään ennusteulottuvuuden arvojen määrittämiseen.",
	"@@Predict-Using-Trend_dimensiondefinition_tag1@@": "<strong>Arvon perusteella</strong> – Ennuste lasketaan yksittäiselle ulottuvuusarvolle. Jos haluat ennustaa vuosittaisen sademäärän vuosille 2050, 2100 ja 2150. Tämä on oletusarvo.",
	"@@Predict-Using-Trend_dimensiondefinition_tag2@@": "<strong>Arvovälin perusteella</strong> – Ennuste lasketaan aloitus- ja lopetusarvojen määrittämälle ulottuvuuden arvovälille. Haluat esimerkiksi ennustaa vuosittaisen sademäärän kullekin vuodelle välillä 2050–2150.",
	"@@Predict-Using-Trend_end_tag0@@": "Ennusteessa käytettävän ulottuvuuden arvovälin lopetuspäivämäärä, korkeus tai syvyys.",
	"@@Predict-Using-Trend_end_tag1@@": "Tämä parametri on pakollinen, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Arvovälin perusteella</strong>.",
	"@@Predict-Using-Trend_raster_tag0@@": "Lähtöaineiston moniulotteinen trendirasteri <strong>Luo trendi</strong> -funktiosta.",
	"@@Predict-Using-Trend_start_tag0@@": "Ennusteessa käytettävän ulottuvuuden arvovälin aloituspäivämäärä, korkeus tai syvyys.",
	"@@Predict-Using-Trend_start_tag1@@": "Tämä parametri on pakollinen, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Arvovälin perusteella</strong>.",
	"@@Predict-Using-Trend_unit_tag0@@": "Arvovälissä käytettävä yksikkö. Tätä parametria käytetään vain, kun analyysin ulottuvuus on aikaulottuvuus.",
	"@@Predict-Using-Trend_unit_tag1@@": "<strong>Tunnit</strong> – Ennuste lasketaan kullekin aikavälin tunnille parametrien <strong>Aloitus</strong>, <strong>Lopetus</strong> ja <strong>Arvoväli</strong> kuvaamalla tavalla.",
	"@@Predict-Using-Trend_unit_tag2@@": "<strong>Päivät</strong> – Ennuste lasketaan kullekin aikavälin päivälle parametrien <strong>Aloitus</strong>, <strong>Lopetus</strong> ja <strong>Arvoväli</strong> kuvaamalla tavalla.",
	"@@Predict-Using-Trend_unit_tag3@@": "<strong>Viikot</strong> – Ennuste lasketaan kullekin aikavälin viikolle parametrien <strong>Aloitus</strong>, <strong>Lopetus</strong> ja <strong>Arvoväli</strong> kuvaamalla tavalla.",
	"@@Predict-Using-Trend_unit_tag4@@": "<strong>Kuukaudet</strong> – Ennuste lasketaan kullekin aikavälin kuukaudelle parametrien <strong>Aloitus</strong>, <strong>Lopetus</strong> ja <strong>Arvoväli</strong> kuvaamalla tavalla.",
	"@@Predict-Using-Trend_unit_tag5@@": "<strong>Vuodet</strong> – Ennuste lasketaan kullekin aikavälin vuodelle parametrien <strong>Aloitus</strong>, <strong>Lopetus</strong> ja <strong>Arvoväli</strong> kuvaamalla tavalla.",
	"@@Predict-Using-Trend_valueinterval_tag0@@": "Ennusteeseen mukaan otettavien kahden ulottuvuusarvon välillä olevien vaiheiden määrä. Oletusarvo on 1.",
	"@@Predict-Using-Trend_valueinterval_tag1@@": "Tämä parametri on pakollinen, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Arvovälin perusteella</strong>.",
	"@@Predict-Using-Trend_values_tag0@@": "Ennusteessa käytettävä ulottuvuusarvo tai käytettävät ulottuvuusarvot.",
	"@@Predict-Using-Trend_values_tag1@@": "Aika-, syvyys- ja korkeusarvojen muodon on vastattava trendirasterin luonnissa käytettävien ulottuvuusarvojen muotoa. Jos trendirasteri on luotu StdTime-ulottuvuutta varten, muodon on oltava VVVV-KK-PPTHH:MM:SS, esimerkiksi 2050-01-01T00:00:00. Useita arvoja puolipisteellä eroteltuna.",
	"@@Process-Raster-Collection_aggregationfunction_tag0@@": "Määritä rasterifunktiomalli, jota käytetään useiden viipaleiden koostamiseen muutamiksi viipaleiksi tai yhdeksi viipaleeksi.",
	"@@Process-Raster-Collection_dimension_tag0@@": "Koosteulottuvuus. Tämä on ulottuvuus, jonka mukaan muuttujat koostetaan.",
	"@@Process-Raster-Collection_itemfunction_tag0@@": "Määritä rasterifunktiomalli, jota käytetään kunkin lähtöaineiston rasterikokoelman viipaleen tai kohteen käsittelyyn.",
	"@@Process-Raster-Collection_keywordinterval_tag0@@": "Määrittää avainsanavälin, jota käytetään koostettaessa ulottuvuuden mukaisesti. Tämä parametrin on pakollinen, kun <strong>tyypiksi</strong> on määritetty <strong>Avainsanaväli</strong> ja koostamisen on tapahduttava ajan kuluessa.",
	"@@Process-Raster-Collection_keywordinterval_tag1@@": "<strong>Tunneittain</strong> – Aineiston arvot koostetaan tunnin mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan tunnit.",
	"@@Process-Raster-Collection_keywordinterval_tag2@@": "<strong>Päivittäin</strong> – Aineiston arvot koostetaan päivän mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan päivät.",
	"@@Process-Raster-Collection_keywordinterval_tag3@@": "<strong>Viikoittain</strong> – Aineiston arvot koostetaan viikon mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan viikot.",
	"@@Process-Raster-Collection_keywordinterval_tag4@@": "<strong>Vuosikymmenittäin</strong> – Aineiston arvot koostetaan kolmeen 10 päivän mittaiseen jaksoon. Viimeinen jakso voi sisältää alle tai yli 10 päivää. Tulosaineisto sisältää kolme viipaletta kutakin kuukautta kohti.",
	"@@Process-Raster-Collection_keywordinterval_tag5@@": "<strong>Viisittäin</strong> – Aineiston arvot koostetaan kuuteen viiden päivän mittaiseen jaksoon. Viimeinen jakso voi sisältää alle tai yli viisi päivää. Tulosaineisto sisältää kuusi viipaletta kutakin kuukautta kohti.",
	"@@Process-Raster-Collection_keywordinterval_tag6@@": "<strong>Kuukausittain</strong> – Aineiston arvot koostetaan kuukauden mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan kuukaudet.",
	"@@Process-Raster-Collection_keywordinterval_tag7@@": "<strong>Neljännesvuosittain</strong> – Aineiston arvot koostetaan neljännesvuoden mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan vuosineljännekset.",
	"@@Process-Raster-Collection_keywordinterval_tag8@@": "<strong>Vuosittain</strong> – Aineiston arvot koostetaan vuoden mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan vuodet.",
	"@@Process-Raster-Collection_keywordinterval_tag9@@": "<strong>Toistuu päivittäin</strong> – Aineiston arvot koostetaan päivän mittaisiin aikaväleihin, ja tulos sisältää yhden koostetun arvon juliaanista päivää kohti. Tulosaineisto sisältää enimmillään 366 päivittäistä aikaviipaletta.",
	"@@Process-Raster-Collection_keywordinterval_tag10@@": "<strong>Toistuu viikoittain</strong> – Aineiston arvot koostetaan viikon mittaisiin aikaväleihin, ja tulos sisältää yhden koostetun arvon viikkoa kohti. Tulosaineisto sisältää enimmillään 53 viikoittaista aikaviipaletta.",
	"@@Process-Raster-Collection_keywordinterval_tag11@@": "<strong>Toistuu kuukausittain</strong> – Aineiston arvot koostetaan kuukaudet mittaisiin aikaväleihin, ja tulos sisältää yhden koostetun arvon kuukautta kohti. Tulosaineisto sisältää enimmillään 12 kuukausittaista aikaviipaletta.",
	"@@Process-Raster-Collection_keywordinterval_tag12@@": "<strong>Toistuu neljännesvuosittain</strong> – Aineiston arvot koostetaan vuosineljänneksen mittaisiin aikaväleihin, ja tulos sisältää yhden koostetun arvon vuosineljännestä kohti. Tulosaineisto sisältää enimmillään neljä neljännesvuosittaista aikaviipaletta.",
	"@@Process-Raster-Collection_maximumvalue_tag0@@": "Arvovälin enimmäisarvo.",
	"@@Process-Raster-Collection_maximumvalue_tag1@@": "Tämä parametri on pakollinen, kun <strong>Tyyppi</strong>-parametrin arvoksi on määritetty <strong>Arvovälin arvoalueet</strong>.",
	"@@Process-Raster-Collection_minimumvalue_tag0@@": "Arvovälin pienin arvo.",
	"@@Process-Raster-Collection_minimumvalue_tag1@@": "Tämä parametri on pakollinen, kun <strong>Tyyppi</strong>-parametrin arvoksi on määritetty <strong>Arvovälin arvoalueet</strong>.",
	"@@Process-Raster-Collection_processingfunction_tag0@@": "Määritä rasterifunktiomalli, jota käytetään käsitellyn rasterikarttatason näyttämiseen.",
	"@@Process-Raster-Collection_rastercollection_tag0@@": "Lähtöaineiston moniulotteinen rasteri, mosaiikkikarttataso tai mosaiikkiaineistoryhmä.",
	"@@Process-Raster-Collection_type_tag0@@": "Määrittää ulottuvuusvälin, jolle aineisto koostetaan.",
	"@@Process-Raster-Collection_type_tag1@@": "<strong>Kaikki</strong> – Aineiston arvot koostetaan kaikista viipaleista. Tämä on oletusarvo.",
	"@@Process-Raster-Collection_type_tag2@@": "<strong>Arvovälin avainsana</strong> – Muuttuja-aineisto koostetaan käyttämällä yleisesti tunnettua väliä.",
	"@@Process-Raster-Collection_type_tag3@@": "<strong>Arvovälin arvoalueet</strong> – Muuttuja-aineisto koostetaan käyttämällä määritettyjä arvo- tai päivämääräpareja.",
	"@@Process-Raster-Collection_type_tag4@@": "<strong>Arvovälin arvot</strong> – Muuttuja-aineisto koostetaan käyttämällä käyttäjän määrittämää väliä ja yksikköä.",
	"@@Process-Raster-Collection_unit_tag0@@": "Välin arvona käytettävä yksikkö. Tämä parametri on pakollinen, kun <strong>Ulottuvuus</strong> on aikakenttä ja <strong>Tyyppi</strong>-parametrin arvoksi on määritetty <strong>Arvovälin arvo</strong>.",
	"@@Process-Raster-Collection_unit_tag1@@": "Jos käytät koostamisperusteena jotain muuta kuin aikaa, tämä vaihtoehto ei ole käytettävissä ja välin arvon yksikkö vastaa lähtöaineiston moniulotteisen rasteriaineiston muuttujan yksikköä.",
	"@@Process-Raster-Collection_unit_tag2@@": "<strong>Tunneittain</strong> – Aineiston arvot koostetaan tunnin mittaisiin aikaviipaleisiin annetun välin mukaisesti.",
	"@@Process-Raster-Collection_unit_tag3@@": "<strong>Päivittäin</strong> – Aineiston arvot koostetaan päivän mittaisiin aikaviipaleisiin annetun välin mukaisesti.",
	"@@Process-Raster-Collection_unit_tag4@@": "<strong>Viikoittain</strong> – Aineiston arvot koostetaan viikon mittaisiin aikaviipaleisiin annetun välin mukaisesti.",
	"@@Process-Raster-Collection_unit_tag5@@": "<strong>Kuukausittain</strong> – Aineiston arvot koostetaan kuukauden mittaisiin aikaviipaleisiin annetun välin mukaisesti.",
	"@@Process-Raster-Collection_unit_tag6@@": "<strong>Vuosittain</strong> – Aineiston arvot koostetaan vuoden mittaisiin aikaviipaleisiin annetun välin mukaisesti.",
	"@@Process-Raster-Collection_valueinterval_tag0@@": "Sen välin koko, jota käytetään koostamisessa. Tämä parametri on pakollinen, kun <strong>Tyyppi</strong>-parametrin arvoksi on määritetty <strong>Arvovälin arvo</strong>.",
	"@@Process-Raster-Collection_valueinterval_tag1@@": "Jos haluat koostaa esimerkiksi kuukausittaista lämpötila-aineistoa 30 vuoden ajalta 5 vuoden lisäyksin, määritä <strong>arvoväliksi</strong> 5 ja määritä <strong>yksiköksi</strong> <strong>Vuodet</strong>.",
	"@@Linear-Spectral-Unmixing_non-negative_tag0@@": "Määrittää vaihtoehdot, joita käytetään tulosaineiston pikseliarvojen määrittämiseen.",
	"@@Linear-Spectral-Unmixing_non-negative_tag1@@": "Valittu – Negatiivisia tulosaineiston arvoja ei ole.",
	"@@Linear-Spectral-Unmixing_non-negative_tag2@@": "Ei valittu – Katkonaiselle maanpeitteelle voi olla negatiivisia arvoja.",
	"@@Linear-Spectral-Unmixing_raster_tag0@@": "Lähtöaineiston rasteri.",
	"@@Linear-Spectral-Unmixing_spectralprofile_tag0@@": "Lähtöaineiston spektriprofiilitiedosto.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag0@@": "Eri maanpeiteluokkien spektritiedot.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag1@@": "<strong>Spektriprofiili</strong> – Luokittelumääritystiedosto (${.ecd}), joka on luotu <strong><strong>Koulutuksen suurimman todennäköisyyden luokittelija</strong></strong> -työkalulla, tai JSON (JavaScript Object Notation) -tiedosto (${.json}), joka sisältä luokan spektriprofiilit.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag2@@": "<strong>Koulutuskohde</strong> – Aluekohteet tai koulutusnäytteen kohdeluokka, joka on luotu <strong>koulutusnäytteiden hallinnassa</strong>.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag0@@": "Määrittää vaihtoehdot, joita käytetään tulosaineiston pikseliarvojen määrittämiseen.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag1@@": "Valittu – Kunkin pikselin luokka-arvot on annettu desimaalimuodossa, jossa kaikkien luokkien summa on 1. Esimerkki: Class1 = 0,16; Class2 = 0,24; Class3 = 0,60.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag2@@": "Ei valittu – Kaikkien luokkien summa pikselissä saa olla suurempi kuin 1.",
	"@@Linear-Spectral-Unmixing_trainingfeature_tag0@@": "Lähtöaineiston koulutuskohdetiedosto.",
	"@@Aggregate_aggregationtechnique_tag0@@": "Koostamisessa käytetty menetelmä. Karkeampien tulosaineiston solujen kattamien lähtöaineiston solujen arvot koostetaan jollakin seuraavista tilastollisista menetelmistä:",
	"@@Aggregate_aggregationtechnique_tag1@@": "<strong>Summa</strong> – Lähtöaineiston solujen summa. Tämä on oletusarvo.",
	"@@Aggregate_aggregationtechnique_tag2@@": "<strong>Maksimi</strong> – Lähtöaineiston solujen suurin arvo.",
	"@@Aggregate_aggregationtechnique_tag3@@": "<strong>Keskiarvo</strong> – Lähtöaineiston solujen keskiarvo.",
	"@@Aggregate_aggregationtechnique_tag4@@": "<strong>Mediaani</strong> – Lähtöaineiston solujen mediaaniarvo.",
	"@@Aggregate_aggregationtechnique_tag5@@": "<strong>Minimi</strong> – Lähtöaineiston solujen pienin arvo.",
	"@@Aggregate_cellfactor_tag0@@": "Tekijä, jonka perusteella lähtöaineiston rasterin solukoko kerrotaan.",
	"@@Aggregate_cellfactor_tag1@@": "Esimerkiksi solukertoimen arvolla kolme tuloksena on tulosaineiston solukoko, joka on kolme kertaa suurempi kuin lähtöaineiston rasteri.",
	"@@Aggregate_expandextentifneeded_tag0@@": "Määrittää, miten lähtöaineiston rasterin rajat käsitellään, kun sen rivit tai sarakkeet eivät ole solukertoimen monikerta.",
	"@@Aggregate_expandextentifneeded_tag1@@": "Valittu – laajentaa lähtöaineiston rasterin ylärajat tai oikeanpuoleiset rajat, jotta solujen kokonaismäärä rivillä tai sarakkeessa on solukertoimen monikerta. Tämän vaihtoehdon avulla tulosaineiston rasteri voi kattaa laajemman sijaintilaajuuden kuin lähtöaineiston rasteri. Tämä on oletusarvo.",
	"@@Aggregate_expandextentifneeded_tag2@@": "Ei valittu – Pienentää rivien tai sarakkeiden määrää tulosaineiston rasterissa. Tämä toiminto katkaisee lähtöaineiston rasterin ylärajalla tai oikeanpuoleisella rajalla jäljelle jäävät solut muuttaen lähtöaineiston rasterin rivien tai sarakkeiden määrän solukertoimen monikerraksi. Tämän asetuksen avulla tulosaineiston rasteri voi kattaa pienemmän sijaintilaajuuden kuin lähtöaineiston rasteri.",
	"@@Aggregate_ignorenodataincalculations_tag0@@": "Ilmaisee, ohittaako koostelaskelma ${NoData}-arvot.",
	"@@Aggregate_ignorenodataincalculations_tag1@@": "Valittu – Määrittää sen, jos ${NoData}-arvoja on yhdessäkään solussa, joka osuu tulosrasterin suuremman solun sijaintilaajuuteen, ${NoData}-arvot ohitetaan määritettäessä tulosaineiston solusijaintien arvoa. Vain lähtöaineiston soluja, jotka ovat tietoarvoja sisältävien tulosaineiston solun laajuudessa, käytetään tulosaineiston soluarvon määrittämiseen. Tämä on oletusarvo.",
	"@@Aggregate_ignorenodataincalculations_tag2@@": "Ei valittu – Määrittää, että jos yksikään solu, joka osuu tulosrasterin suuremman solun sijaintilaajuuteen, on ${NoData}-arvo, kyseisen tulosaineiston solusijainnin arvo on ${NoData}. Kun tätä asetusta käytetään, se tarkoittaa, että kun koostetut solut sisältävät ${NoData}-arvon, tietoja ei ole riittävästi niiden määritettyjen laskentojen suorittamiseen, joita tarvitaan tulosaineiston arvon määrittämiseen.",
	"@@Aggregate_raster_tag0@@": "Koostettava lähtöaineiston rasteri.",
	"@@Expand_numberofcells_tag0@@": "Niiden solujen määrä, joiden perusteella laajennetaan.",
	"@@Expand_numberofcells_tag1@@": "Arvon on oltava kokonaisluku, ja se voi olla 1 tai suurempi.",
	"@@Expand_raster_tag0@@": "Lähtöaineiston rasteri, jonka tunnistetut vyöhykkeet laajennetaan.",
	"@@Expand_raster_tag1@@": "Sen tyypin on oltava kokonaisluku.",
	"@@Expand_zonevalues_tag0@@": "Laajennettavien vyöhykkeiden luettelo.",
	"@@Expand_zonevalues_tag1@@": "Vyöhykearvojen on oltava kokonaislukuja, ja ne voivat olla missä tahansa järjestyksessä.",
	"@@Expand_zonevalues_tag2@@": "Jos haluat määrittää useita vyöhykkeitä, erota vyöhykearvot välilyönnein.",
	"@@Multidimensional-Filter_dimension_tag0@@": "Ulottuvuus, josta muuttujat poimitaan.",
	"@@Multidimensional-Filter_dimensiondefinition_tag0@@": "Määrittää menetelmän, jota käytetään ulottuvuuden viipaloimiseen.",
	"@@Multidimensional-Filter_dimensiondefinition_tag1@@": "<strong>Kaikki</strong> – Kunkin ulottuvuuden koko arvoaluetta käytetään. Tämä on oletusarvo.",
	"@@Multidimensional-Filter_dimensiondefinition_tag2@@": "<strong>Arvojen mukaan</strong> – Ulottuvuus viipaloidaan käyttämällä ulottuvuusarvoa tai arvoluetteloa.",
	"@@Multidimensional-Filter_dimensiondefinition_tag3@@": "<strong>Arvovälien mukaan</strong> – Ulottuvuus viipaloidaan käyttämällä arvoväliä tai arvovälien luetteloa.",
	"@@Multidimensional-Filter_dimensiondefinition_tag4@@": "<strong>Iteroinnin mukaan</strong> – Ulottuvuus viipaloidaan määritetyn välin koon perusteella.",
	"@@Multidimensional-Filter_endoffirstiteration_tag0@@": "Ensimmäisen välin loppu. Tätä väliä käytetään koko aineistoryhmän iteroimiseen. Tätä parametria tarvitaan, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Iteroinnin mukaan</strong>.",
	"@@Multidimensional-Filter_maximumvalue_tag0@@": "Arvovälin enimmäisarvo. Tämä parametri on pakollinen, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Arvovälien mukaan</strong>.",
	"@@Multidimensional-Filter_minimumvalue_tag0@@": "Arvovälin vähimmäisarvo. Tämä parametri on pakollinen, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Arvovälien mukaan</strong>.",
	"@@Multidimensional-Filter_raster_tag0@@": "Lähtöaineiston moniulotteinen rasteri.",
	"@@Multidimensional-Filter_ranges_tag0@@": "<p>Taulussa määritettyjä arvovälin arvoalueita käytetään arvoryhmien koostamiseen. Minimi- ja maksimiarvot määrittävät sisällytettävän arvoalueen.</p><p>Tämä parametri on pakollinen, kun <strong>Tyyppi</strong>-parametrin arvona on <strong>Arvovälin arvoalueet</strong>.</p>",
	"@@Multidimensional-Filter_startoffirstiteration_tag0@@": "Ensimmäisen välin alku. Tätä väliä käytetään koko aineistoryhmän iteroimiseen. Tätä parametria tarvitaan, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Iteroinnin mukaan</strong>.",
	"@@Multidimensional-Filter_step_tag0@@": "Toistoväli, jonka perusteella aineisto viipaloidaan. Tätä parametria tarvitaan, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Iteroinnin mukaan</strong>. Oletusarvo on 3.",
	"@@Multidimensional-Filter_unit_tag0@@": "Määrittää iteraatioyksikön. Tätä parametria tarvitaan, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Iteroinnin mukaan</strong> ja <strong>Ulottuvuus</strong>-parametrin arvoksi on määritetty <strong>StdTime</strong>.",
	"@@Multidimensional-Filter_value_tag0@@": "Määritetyn ulottuvuuden arvo. Tämä parametri on pakollinen, kun <strong>Dimension määritelmä</strong> -parametrin arvoksi on määritetty <strong>Arvojen mukaan</strong>.",
	"@@Multidimensional-Filter_variables_tag0@@": "Muuttujat, jotka sisällytetään tulosaineiston moniulotteiseen rasterikarttatasoon. Jos yhtään muuttujaa ei ole määritetty, ensimmäistä muuttujaa käytetään.",
	"@@Multidimensional-Filter_dimensionless_tag0@@": "Määrittää, tulisiko karttatasossa olla ulottuvuusarvoja. Tämä asetus on käytettävissä vain, jos karttatason luonnissa valitaan yksi viipale.",
	"@@Multidimensional-Filter_dimensionless_tag1@@": "Valittu – Karttatasossa ei ole ulottuvuusarvoja.",
	"@@Multidimensional-Filter_dimensionless_tag2@@": "Ei valittu – Karttatasossa on ulottuvuusarvo. Tämä on oletusarvo.",
	"@@Multidimensional-Raster_interpolationcellsize_tag0@@": "Interpoloidun rasterin solukoko. Oletusarvo on ${1}.",
	"@@Multidimensional-Raster_interpolationmethod_tag0@@": "Interpolointimenetelmä, jota käytetään epäsäännöllisen aineiston interpolointiin.",
	"@@Multidimensional-Raster_interpolationmethod_tag1@@": "<strong>Lähin naapuri</strong> – Laskee tulosaineiston pikseliarvon lähimmän lähtöaineiston pikselin avulla. Jos lähdepikseliä ei ole, uutta pikseliä ei voi luoda tulosaineistoon. Tämä on oletusarvo.",
	"@@Multidimensional-Raster_interpolationmethod_tag2@@": "<strong>Lineaarinen tinning</strong> – Interpoloi pinnan käyttämällä kolmiomitattuja epäsäännöllisiä verkkoja epäsäännöllisen rasterin solujen keskipisteistä ja muuntaa sitten pinnan säännölliseksi rasteriksi.",
	"@@Multidimensional-Raster_interpolationmethod_tag3@@": "<strong>Luonnolliset naapurit</strong> – Interpoloi arvon etsimällä kyselypisteen lähtöaineiston näytteiden lähimmän osajoukon ja käyttämällä tähän painoarvoja suhteellisten alueiden perusteella.",
	"@@Multidimensional-Raster_interpolationmethod_tag4@@": "<strong>Painotettu käänteinen etäisyys</strong> – Määrittää pikseliarvot käyttämällä lineaarisesti painotettua otospisteiden tai -solujen yhdistelmää. Painokerroin on tunnettujen pisteiden tai pikseleiden käänteisen etäisyyden funktio.",
	"@@Multidimensional-Raster_raster_tag0@@": "Lähtöaineiston moniulotteinen rasteri.",
	"@@Multidimensional-Raster_variables_tag0@@": "Muuttuja tai muuttujat, jotka sisällytetään moniulotteiseen rasterikarttatasoon.",
	"@@Random_distribution_tag0@@": "Määritä käytettävä satunnaisarvon jakelumalli.",
	"@@Random_distribution_tag1@@": "<strong>Yhtenäinen</strong> (Minimi, Maksimi) – Yhtenäinen jakauma, jonka arvoalue on määritetty. Oletusarvot ovat 0 = minimi ja 1 = maksimi. Tämä on oletusarvo.",
	"@@Random_distribution_tag2@@": "<strong>Kokonaisluku</strong> (Minimi, Maksimi) – Kokonaislukujakauma, jonka arvoalue on määritetty. Oletusarvot ovat 1 = minimi ja 10 = maksimi.",
	"@@Random_distribution_tag3@@": "<strong>Normaali</strong> (Keskiarvo, Keskihajonta) – Normaalijakauma, jonka keskiarvo ja keskihajonta on määritetty. Oletusarvot ovat 0 = keskiarvo ja 1 = keskihajonta.",
	"@@Random_distribution_tag4@@": "<strong>Eksponentiaalinen</strong> (Keskiarvo) – Eksponentiaalinen jakauma, jonka keskiarvo on määritetty. Oletusarvo on 1.",
	"@@Random_distribution_tag5@@": "<strong>Poissonin jakauma</strong> (Keskiarvo) – Poissonin jakauma, jonka keskiarvo on määritetty. Oletusarvo on 1.",
	"@@Random_distribution_tag6@@": "<strong>Gamma-jakauma</strong> (Alfa, Beeta) – Gamma-jakauma, jonka Alfa- ja Beeta-arvot on määritetty. Oletusarvot ovat Alfa = 1 ja Beeta = 1.",
	"@@Random_distribution_tag7@@": "<strong>Binomijakauma</strong> (N, Todennäköisyys) – Binomijakauma, jonka N-arvo ja todennäköisyys on määritetty. Oletusarvot ovat N = 10 ja Todennäköisyys = 0,5.",
	"@@Random_distribution_tag8@@": "<strong>Geometrinen jakauma</strong> (Todennäköisyys) – Geometrinen jakauma, jonka todennäköisyys on määritetty. Oletusarvo on 0,5.",
	"@@Random_distribution_tag9@@": "<strong>Negatiivinen binomijakauma</strong> (r, Todennäköisyys) – Pascal-jakauma, jonka r-arvo ja todennäköisyys on määritetty. Oletusarvot ovat 10,0 = r ja 0,5 = Todennäköisyys.",
	"@@Random_randomnumbergenerator_tag0@@": "Määritä satunnaislukugeneraattorin algoritmi, joka tuottaa siemenarvon ja jakauman avulla satunnaisen numerosarjan. Käytettävissä olevat vaihtoehdot ovat seuraavat:",
	"@@Random_randomnumbergenerator_tag1@@": "Standard C -randi",
	"@@Random_randomnumbergenerator_tag2@@": "ACM-kerätty algoritmi 599",
	"@@Random_randomnumbergenerator_tag3@@": "Mersenne Twister",
	"@@Random_randomnumbergenerator_tag4@@": "Oletusarvo on Mersenne Twister.",
	"@@Random_rasterinfo_tag0@@": "Käytä <strong>Lataa mallirasteri</strong> -painiketta mallin lataamiseen hakemistosta tai portaalista.",
	"@@Random_seed_tag0@@": "Siemenarvo on kokonaisluku, ja sitä käytetään satunnaisnumeron generaattorin aloittamiseen. Oletusarvo on 1.",
	"@@Shrink_numberofcells_tag0@@": "Niiden solujen määrä, joiden perusteella kukin määritetty vyöhyke kutistetaan.",
	"@@Shrink_numberofcells_tag1@@": "Arvon on oltava kokonaisluku, ja se voi olla 1 tai suurempi.",
	"@@Shrink_raster_tag0@@": "Lähtöaineiston rasteri, jonka tunnistetut vyöhykkeet kutistetaan.",
	"@@Shrink_raster_tag1@@": "Sen tyypin on oltava kokonaisluku.",
	"@@Shrink_zonevalues_tag0@@": "Kutistettavien vyöhykkeiden luettelo.",
	"@@Shrink_zonevalues_tag1@@": "Vyöhykearvojen on oltava kokonaislukuja, ja ne voivat olla missä tahansa järjestyksessä.",
	"@@Shrink_zonevalues_tag2@@": "Jos haluat määrittää useita vyöhykkeitä, erota vyöhykearvot välilyönnein.",
	"@@Distance-Accumulation_costraster_tag0@@": "Rasteri, joka määrittää kustannuksen tai impedanssin, joka liikkuu planimetrisesti jokaisen solun läpi. Kunkin solusijainnin arvo kuvaa sen kautta liikkuvan yksikkökohtaisen kustannuksen etäisyyttä. Kunkin solusijainnin arvo kerrotaan solun resoluutiolla, ja lisäksi arvo kompensoi diagonaalista liikettä, jotta saadaan selville solun läpikulun aiheuttamat kustannukset.",
	"@@Distance-Accumulation_costraster_tag1@@": "<strong>Kustannusrasterin</strong> arvo voi olla kokonaisluku tai liukuluku, mutta se ei voi olla negatiivinen eikä nolla.",
	"@@Distance-Accumulation_distancemethod_tag0@@": "Määrittää, lasketaanko etäisyys planaarisen (litteä maa) tai geodeettisen (ellipsoidi) menetelmän avulla.",
	"@@Distance-Accumulation_distancemethod_tag1@@": "Planaarinen – Planaarisissa mittauksissa käytetään koordinaatistoon liittyvää 2D-matematiikkaa pituuden ja alueen laskemiseen. Vaihtoehto on käytettävissä vain silloin, kun mittaus suoritetaan projisoidussa koodinaattijärjestelmässä ja kyseisen koordinaattijärjestelmän 2D-tasoa käytetään mittausten pohjana.",
	"@@Distance-Accumulation_distancemethod_tag2@@": "Geodeettinen – Lyhyin viiva kahden pisteen välillä maanpinnalla sferoidissa (ellipsoidissa). Siksi tulokset eivät muutu lähtöaineiston tai tulosaineiston projisoinnista huolimatta.",
	"@@Distance-Accumulation_distancemethod_tag3@@": "<strong>Huomautus:</strong> geodeettista viivaa voidaan käyttää esimerkiksi lyhyimmän etäisyyden määrittämiseen kahden kaupungin välillä lentokoneen lentoreitillä. Tästä käytetään myös nimitystä isoympyrän viiva, jos se perustuu ellipsoidin sijasta palloon.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag0@@": "Määrittää, luodaanko vain etäisyyskertymärasteri vai monikaistainen rasteri, joka koostuu sekä etäisyyskertymärasterista että paluusuunnan rasterista.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag1@@": "Ei valittu – Tulos on etäisyyskertymärasteri. Tämä on yksikaistainen tulos. Tämä on oletusarvo.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag2@@": "Valittu – Monikaistainen tulos luodaan. Ensimmäinen kaista on etäisyyskertymärasteri ja toinen kaista on paluusuunnan rasteri.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag3@@": "Paluusuunnan rasteri laskee kullekin solulle asteina suunnan naapurisoluun lyhyintä polkua pitkin takaisin lähimpään lähteeseen välttäen esteitä.",
	"@@Distance-Accumulation_horizontalfactor_tag0@@": "<p>Määrittää vaakasuoran kustannustekijän ja vaakasuoran, suhteellisesti liikkuvan kulman välisen suhteen (HRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään HF- ja HRMA-akronyymeja. HF (Horizontal Factor) tarkoittaa vaakasuoraa tekijää, joka määrittää vaakasuuntaisen ongelman, joka esiintyy liikuttaessa solusta toiseen. HRMA (Horizontal Relative Moving Angle) tarkoittaa vaakasuuntaista suhteellisesti liikkuvaa kulmaa, joka määrittää lähtösolun vaakasuunnan ja liikkuvan suunnan välisen kulman.</p><p><strong>Vaakasuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – Ilmaisee, että HF:ksi määritetään nollatekijään liitetty arvo, jos HRMA on pienempi kuin leikkauskulma. Muutoin se on ääretön.</li><li><strong>Eteenpäin</strong> – Ilmaisee, että vain eteenpäin suuntautuva liike sallitaan. HRMA:n on oltava suurempi tai yhtä suuri kuin 0 ja pienempi kuin 90 astetta (0 &lt;= HRMA &lt; 90). Jos HRMA on suurempi kuin 0 ja pienempi kuin 45 astetta, solun HF:ksi määritetään nollatekijään liitetty arvo. Jos HRMA on suurempi tai yhtä suuri kuin 45 astetta, käytetään sivun arvon muokkaajan arvoa. Minkä tahansa HRMA-arvon, joka on suurempi tai yhtä suuri kuin 90 astetta, HF:ksi määritetään ääretön.</li><li><strong>Lineaarinen</strong> – määrittää, että HF on HRMA:n lineaarinen funktio.</li><li><strong>Käänteinen lineaarinen</strong> – määrittää, että HF on HRMA:n käänteinen lineaarinen funktio.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään HF:n määrittämiseen käytetty vaakasuuntaisen tekijän kaavio.</li></ul><p>Vaakasuoran tekijän muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – vaakasuora tekijä, jota käytetään, kun HRMA on nolla. Tämä tekijä määrittää, mihin vaakasuoran tekijän funktion y-leikkauspiste sijoitetaan.</li><li><strong>Leikkaa kulma</strong> – määrittää HRMA-kulman, jonka ylittyessä HF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – muodostaa sen suoran viivan kaltevuuden, jota käytetään vaakasuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Sivun arvo</strong> – määrittää HF:n, jos HRMA on suurempi tai yhtä suuri kuin 45 astetta ja pienempi kuin 90 astetta ja jos vaakasuoran tekijän<strong>Eteenpäin</strong>-avainsana on määritetty.</li><li><strong>Taulun nimi</strong> – määrittää HF:n määrittävän taulun nimen.</li></ul>",
	"@@Distance-Accumulation_horizontalraster_tag0@@": "Rasteri, joka määrittää vaakasuunnan kussakin solussa.",
	"@@Distance-Accumulation_horizontalraster_tag1@@": "Rasterin arvojen on oltava kokonaislukuja (0–360): 0 astetta on pohjoinen tai näkymän yläreuna ja arvot kasvavat myötäpäivään. Tasaisille alueille on annettava arvo -1. Kunkin sijainnin arvoja käytetään yhdessä <strong>vaakasuoran tekijän</strong> kanssa sen vaakasuuntaisen kustannuksen määrittämiseksi, joka syntyy liikuttaessa solusta sen naapureihin.",
	"@@Distance-Accumulation_initialaccumulation_tag0@@": "Alkuperäinen kumulatiivinen kustannus, jota käytetään kustannuslaskennan aloituksessa. Tämän parametrin avulla kiinteän kustannuksen määritys voidaan liittää lähteeseen. 0-kustannuksesta aloittamisen sijasta kustannusalgoritmi aloittaa määritetyllä arvolla.",
	"@@Distance-Accumulation_initialaccumulation_tag1@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Distance-Accumulation_initialaccumulation_tag2@@": "Tämän arvon on oltava vähintään nolla. Oletusarvo on 0.",
	"@@Distance-Accumulation_maximumaccumulation_tag0@@": "Määrittää matkustajan kumulatiivisen enimmäiskustannuksen lähteelle. Kustannuslaskentaa jatketaan kullekin lähteelle, kunnes määritetty kapasiteetti saavutetaan.",
	"@@Distance-Accumulation_maximumaccumulation_tag1@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Distance-Accumulation_maximumaccumulation_tag2@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag0@@": "Kustannusarvoihin käytettävä kerroin.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag1@@": "Tämän parametrin avulla voidaan hallita matkustustilaa tai magnitudia lähteessä. Mitä suurempi kerroin on, sitä suurempi on kunkin solun läpi liikkuva kustannus.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag2@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag3@@": "Arvojen on oltava suurempia kuin nolla. Oletusarvo on 1.",
	"@@Distance-Accumulation_rasterbarriers_tag0@@": "Rasteri, joka määrittää esteet.",
	"@@Distance-Accumulation_rasterbarriers_tag1@@": "Aineistoryhmän on sisällettävä NoData, jossa ei ole esteitä. Esteet esitetään kelvollisten arvojen, myös nollien, avulla.",
	"@@Distance-Accumulation_rasterbarriers_tag2@@": "Este voidaan määrittää kokonaisluku- tai liukulukurasterin avulla.",
	"@@Distance-Accumulation_sourceraster_tag0@@": "Lähtöaineiston lähdesijainnit.",
	"@@Distance-Accumulation_sourceraster_tag1@@": "Tämä rasterin aineistoryhmä määrittää solut ja sijainnit, joista pienin kumulatiivinen kustannusetäisyys lasketaan jokaiselle tulosaineiston solusijainnille.",
	"@@Distance-Accumulation_sourceraster_tag2@@": "Sen tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Distance-Accumulation_surfaceraster_tag0@@": "Rasteri, joka määrittää korkeusarvot kussakin solusijainnissa.",
	"@@Distance-Accumulation_surfaceraster_tag1@@": "Arvojen avulla lasketaan todellinen pinnan etäisyys kuljettujen solujen välillä.",
	"@@Distance-Accumulation_traveldirection_tag0@@": "Määrittää matkustajan suunnan, kun käytetään pystysuoraa tekijää, vaakasuoraa tekijää ja  lähdevastustustasoa.",
	"@@Distance-Accumulation_traveldirection_tag1@@": "<strong>Lähteestä</strong> – Pystysuoraa tekijää, vaakasuoraa tekijää ja lähdevastustustasoa käytetään aluksi lähtöaineiston lähteessä ja sen jälkeen liikuttaessa muihin kuin lähdesoluihin. Tämä on oletusarvo.",
	"@@Distance-Accumulation_traveldirection_tag2@@": "<strong>Lähteeseen</strong> – Pystysuoraa tekijää, vaakasuoraa tekijää ja lähdevastustustasoa käytetään aluksi kussakin muussa kuin lähdesolussa ja sen jälkeen liikuttaessa takaisin lähtöaineiston lähteeseen.",
	"@@Distance-Accumulation_traveldirection_tag3@@": "Määritä joko <strong>Lähteestä</strong>- tai <strong>Lähteeseen</strong>-avainsana, jota käytetään kaikkiin lähteisiin, tai määritä <strong>lähderasterin</strong> kenttä, joka sisältää avainsanat kunkin lähteen matkustussuunnan määrittämiseen. Kyseisen kentän on sisällettävä merkkijono ${FROM_SOURCE} tai ${TO_SOURCE}.",
	"@@Distance-Accumulation_verticalfactor_tag0@@": "<p>Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen (VRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään VF- ja HRMA-akronyymeja. VF (Vertical Factor) tarkoittaa pystysuoraa tekijää, joka määrittää pystysuuntaisen vaikeuden, joka esiintyy liikuttaessa solusta toiseen. VRMA (Vertical Relative Moving Angle) tarkoittaa pystysuoraa, suhteellisesti liikkuvaa kulmaa, joka määrittää kaltevuuskulman lähtösolun (käsittelysolun) ja kohdesolun välillä.</p><p><strong>Pystysuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – määrittää, että VF:ksi määritetään nollatekijään liitetty arvo, jos VRMA on suurempi kuin matala leikkauskulma ja pienempi kuin korkea leikkauskulma. Muutoin se on ääretön.</li><li><strong>Lineaarinen</strong> – ilmaisee, että VF on VRMA:n lineaarinen funktio.</li><li><strong>Symmetrinen lineaarinen</strong> – määrittää, että VF on VRMA:n lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Käänteinen lineaarinen</strong> – ilmaisee, että VF on VRMA:n käänteinen lineaarinen funktio.</li><li><strong>Symmetrinen käänteinen lineaarinen</strong> – määrittää, että VF on VRMA:n käänteinen lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Cos</strong> – määrittää VF:n VRMA:n kosinipohjaiseksi funktioksi.</li><li><strong>Sec</strong> – määrittää VF:n VRMA:n sekanttipohjaiseksi funktioksi.</li><li><strong>Cos–Sec</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Sec–Cos</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään VF:n määrittämiseen käytetty pystysuuntaisen tekijän kaavio.</li></ul><p>Pystysuuntaisten avainsanojen muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – muodostaa pystysuoran tekijän, jota käytetään, kun VRMA on nolla. Tämä tekijä määrittää, mihin määritetyn funktion y-leikkauspiste sijoitetaan. Määritelmän mukaan nollatekijää ei voi käyttää trigonometrisissä pystysuuntaisissa funktioissa (COS, SEC, COS-SEC tai SEC-COS). Y-leikkauspiste määritetään näiden funktioiden avulla.</li><li><strong>Matala leikkauskulma</strong> – määrittää VRMA-kulman, jonka alittuessa VF:ksi määritetään ääretön.</li><li><strong>Korkea leikkauskulma</strong> – määrittää VRMA-kulman, jonka ylittyessä VF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – määrittää suoran viivan kaltevuuden, jota käytetään seuraavien pystysuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Taulun nimi</strong> – määrittää VF:n määrittävän taulun nimen.</li></ul>",
	"@@Distance-Accumulation_verticalraster_tag0@@": "Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen.",
	"@@Distance-Accumulation_verticalraster_tag1@@": "Arvojen avulla lasketaan kaltevuus, jota käytetään sen pystysuoran tekijän määrittämiseen, joka esiintyy liikuttaessa solusta toiseen.",
	"@@Distance-Allocation_costraster_tag0@@": "Rasteri, joka määrittää kustannuksen tai impedanssin, joka liikkuu planimetrisesti jokaisen solun läpi. Kunkin solusijainnin arvo kuvaa sen kautta liikkuvan yksikkökohtaisen kustannuksen etäisyyttä. Kunkin solusijainnin arvo kerrotaan solun resoluutiolla, ja lisäksi arvo kompensoi diagonaalista liikettä, jotta saadaan selville solun läpikulun aiheuttamat kustannukset.",
	"@@Distance-Allocation_costraster_tag1@@": "<strong>Kustannusrasterin</strong> arvo voi olla kokonaisluku tai liukuluku, mutta se ei voi olla negatiivinen eikä nolla.",
	"@@Distance-Allocation_distancemethod_tag0@@": "Määrittää, lasketaanko etäisyys planaarisen (litteä maa) tai geodeettisen (ellipsoidi) menetelmän avulla.",
	"@@Distance-Allocation_distancemethod_tag1@@": "Planaarinen – Planaarisissa mittauksissa käytetään koordinaatistoon liittyvää 2D-matematiikkaa pituuden ja alueen laskemiseen. Vaihtoehto on käytettävissä vain silloin, kun mittaus suoritetaan projisoidussa koodinaattijärjestelmässä ja kyseisen koordinaattijärjestelmän 2D-tasoa käytetään mittausten pohjana.",
	"@@Distance-Allocation_distancemethod_tag2@@": "Geodeettinen – Lyhyin viiva kahden pisteen välillä maanpinnalla sferoidissa (ellipsoidissa). Siksi tulokset eivät muutu lähtöaineiston tai tulosaineiston projisoinnista huolimatta.",
	"@@Distance-Allocation_distancemethod_tag3@@": "<strong>Huomautus:</strong> geodeettista viivaa voidaan käyttää esimerkiksi lyhyimmän etäisyyden määrittämiseen kahden kaupungin välillä lentokoneen lentoreitillä. Tästä käytetään myös nimitystä isoympyrän viiva, jos se perustuu ellipsoidin sijasta palloon.",
	"@@Distance-Allocation_horizontalfactor_tag0@@": "<p>Määrittää vaakasuoran kustannustekijän ja vaakasuoran, suhteellisesti liikkuvan kulman välisen suhteen (HRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään HF- ja HRMA-akronyymeja. HF (Horizontal Factor) tarkoittaa vaakasuoraa tekijää, joka määrittää vaakasuuntaisen ongelman, joka esiintyy liikuttaessa solusta toiseen. HRMA (Horizontal Relative Moving Angle) tarkoittaa vaakasuuntaista suhteellisesti liikkuvaa kulmaa, joka määrittää lähtösolun vaakasuunnan ja liikkuvan suunnan välisen kulman.</p><p><strong>Vaakasuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – Ilmaisee, että HF:ksi määritetään nollatekijään liitetty arvo, jos HRMA on pienempi kuin leikkauskulma. Muutoin se on ääretön.</li><li><strong>Eteenpäin</strong> – Ilmaisee, että vain eteenpäin suuntautuva liike sallitaan. HRMA:n on oltava suurempi tai yhtä suuri kuin 0 ja pienempi kuin 90 astetta (0 &lt;= HRMA &lt; 90). Jos HRMA on suurempi kuin 0 ja pienempi kuin 45 astetta, solun HF:ksi määritetään nollatekijään liitetty arvo. Jos HRMA on suurempi tai yhtä suuri kuin 45 astetta, käytetään sivun arvon muokkaajan arvoa. Minkä tahansa HRMA-arvon, joka on suurempi tai yhtä suuri kuin 90 astetta, HF:ksi määritetään ääretön.</li><li><strong>Lineaarinen</strong> – määrittää, että HF on HRMA:n lineaarinen funktio.</li><li><strong>Käänteinen lineaarinen</strong> – määrittää, että HF on HRMA:n käänteinen lineaarinen funktio.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään HF:n määrittämiseen käytetty vaakasuuntaisen tekijän kaavio.</li></ul><p>Vaakasuoran tekijän muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – vaakasuora tekijä, jota käytetään, kun HRMA on nolla. Tämä tekijä määrittää, mihin vaakasuoran tekijän funktion y-leikkauspiste sijoitetaan.</li><li><strong>Leikkaa kulma</strong> – määrittää HRMA-kulman, jonka ylittyessä HF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – muodostaa sen suoran viivan kaltevuuden, jota käytetään vaakasuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Sivun arvo</strong> – määrittää HF:n, jos HRMA on suurempi tai yhtä suuri kuin 45 astetta ja pienempi kuin 90 astetta ja jos vaakasuoran tekijän<strong>Eteenpäin</strong>-avainsana on määritetty.</li><li><strong>Taulun nimi</strong> – määrittää HF:n määrittävän taulun nimen.</li></ul>",
	"@@Distance-Allocation_horizontalraster_tag0@@": "Rasteri, joka määrittää vaakasuunnan kussakin solussa.",
	"@@Distance-Allocation_horizontalraster_tag1@@": "Rasterin arvojen on oltava kokonaislukuja (0–360): 0 astetta on pohjoinen tai näkymän yläreuna ja arvot kasvavat myötäpäivään. Tasaisille alueille on annettava arvo -1. Kunkin sijainnin arvoja käytetään yhdessä <strong>vaakasuoran tekijän</strong> kanssa sen vaakasuuntaisen kustannuksen määrittämiseksi, joka syntyy liikuttaessa solusta sen naapureihin.",
	"@@Distance-Allocation_initialaccumulation_tag0@@": "Alkuperäinen kumulatiivinen kustannus, jota käytetään kustannuslaskennan aloituksessa. Tämän parametrin avulla kiinteän kustannuksen määritys voidaan liittää lähteeseen. 0-kustannuksesta aloittamisen sijasta kustannusalgoritmi aloittaa määritetyllä arvolla.",
	"@@Distance-Allocation_initialaccumulation_tag1@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Distance-Allocation_initialaccumulation_tag2@@": "Tämän arvon on oltava vähintään nolla. Oletusarvo on 0.",
	"@@Distance-Allocation_maximumaccumulation_tag0@@": "Määrittää matkustajan kumulatiivisen enimmäiskustannuksen lähteelle. Kustannuslaskentaa jatketaan kullekin lähteelle, kunnes määritetty kapasiteetti saavutetaan.",
	"@@Distance-Allocation_maximumaccumulation_tag1@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Distance-Allocation_maximumaccumulation_tag2@@": "Arvon on oltava suurempi kuin nolla. Oletuskapasiteetti on tulosaineiston rasterin reunaan.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag0@@": "Kustannusarvoihin käytettävä kerroin.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag1@@": "Tämän parametrin avulla voidaan hallita matkustustilaa tai magnitudia lähteessä. Mitä suurempi kerroin on, sitä suurempi on kunkin solun läpi liikkuva kustannus.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag2@@": "Arvojen on oltava suurempia kuin nolla. Oletusarvo on 1.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag3@@": "<strong>Lähderasterin</strong> numeerista liukulukuarvoa tai kenttää voidaan käyttää tälle parametrille.",
	"@@Distance-Allocation_rasterbarriers_tag0@@": "Rasteri, joka määrittää esteet.",
	"@@Distance-Allocation_rasterbarriers_tag1@@": "Aineistoryhmän on sisällettävä NoData, jossa ei ole esteitä. Esteet esitetään kelvollisten arvojen, myös nollien, avulla.",
	"@@Distance-Allocation_rasterbarriers_tag2@@": "Este voidaan määrittää kokonaisluku- tai liukulukurasterin avulla.",
	"@@Distance-Allocation_sourcefield_tag0@@": "Kenttää käytetään määrittämään arvot lähdesijainteihin. Sen tyypin on oltava kokonaisluku.",
	"@@Distance-Allocation_sourceraster_tag0@@": "Lähtöaineiston lähdesijainnit.",
	"@@Distance-Allocation_sourceraster_tag1@@": "Tämä rasterin aineistoryhmä määrittää solut ja sijainnit, joista pienin kumulatiivinen kustannusetäisyys lasketaan jokaiselle tulosaineiston solusijainnille.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag0@@": "Määrittää, luodaanko vain allokointirasteri vai luodaanko monikaistainen tulos.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag1@@": "Ei valittu – Tulos on etäisyysallokointirasteri. Tämä on yksikaistainen tulos. Tämä on oletusarvo.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag2@@": "Valittu – Monikaistainen rasteri luodaan. Ensimmäinen kaista on etäisyysallokointirasteri, toinen kaista sisältää rivi-indeksin ja kolmas kaista sisältää sarakeindeksin. Nämä indeksit määrittävät sen lähdesolun sijainnin, joka on pienimmän kumulatiivisen kustannusetäisyyden päässä.",
	"@@Distance-Allocation_surfaceraster_tag0@@": "Rasteri, joka määrittää korkeusarvot kussakin solusijainnissa.",
	"@@Distance-Allocation_surfaceraster_tag1@@": "Arvojen avulla lasketaan todellinen pinnan etäisyys kuljettujen solujen välillä.",
	"@@Distance-Allocation_traveldirection_tag0@@": "Määrittää matkustajan suunnan, kun käytetään pystysuoraa tekijää, vaakasuoraa tekijää ja  lähdevastustustasoa.",
	"@@Distance-Allocation_traveldirection_tag1@@": "<strong>Lähteestä</strong> – Pystysuoraa tekijää, vaakasuoraa tekijää ja lähdevastustustasoa käytetään aluksi lähtöaineiston lähteessä ja sen jälkeen liikuttaessa muihin kuin lähdesoluihin. Tämä on oletusarvo.",
	"@@Distance-Allocation_traveldirection_tag2@@": "<strong>Lähteeseen</strong> – Pystysuoraa tekijää, vaakasuoraa tekijää ja lähdevastustustasoa käytetään aluksi kussakin muussa kuin lähdesolussa ja sen jälkeen liikuttaessa takaisin lähtöaineiston lähteeseen.",
	"@@Distance-Allocation_traveldirection_tag3@@": "Määritä joko <strong>Lähteestä</strong>- tai <strong>Lähteeseen</strong>-avainsana, jota käytetään kaikkiin lähteisiin, tai määritä <strong>lähderasterin</strong> kenttä, joka sisältää avainsanat kunkin lähteen matkustussuunnan määrittämiseen. Kyseisen kentän on sisällettävä merkkijono ${FROM_SOURCE} tai ${TO_SOURCE}.",
	"@@Distance-Allocation_verticalfactor_tag0@@": "<p>Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen (VRMA).</p><p>Käytössä on useita tekijöitä ja muokkaajia, joilla määritetään annettu pystysuora tekijä. Lisäksi voit luoda mukautetun kaavion taulun avulla. Kaavioiden avulla määritetään pystysuora tekijä, jota käytetään naapurisoluun liikkuvien kokonaiskustannusten laskemiseen.</p><p>Seuraavissa selityksissä käytetään VF- ja HRMA-akronyymeja. VF (Vertical Factor) tarkoittaa pystysuoraa tekijää, joka määrittää pystysuuntaisen vaikeuden, joka esiintyy liikuttaessa solusta toiseen. VRMA (Vertical Relative Moving Angle) tarkoittaa pystysuoraa, suhteellisesti liikkuvaa kulmaa, joka määrittää kaltevuuskulman lähtösolun (käsittelysolun) ja kohdesolun välillä.</p><p><strong>Pystysuora tekijä</strong> -tyypit sisältävät seuraavat:</p><ul><li><strong>Binaarinen</strong> – määrittää, että VF:ksi määritetään nollatekijään liitetty arvo, jos VRMA on suurempi kuin matala leikkauskulma ja pienempi kuin korkea leikkauskulma. Muutoin se on ääretön.</li><li><strong>Lineaarinen</strong> – ilmaisee, että VF on VRMA:n lineaarinen funktio.</li><li><strong>Symmetrinen lineaarinen</strong> – määrittää, että VF on VRMA:n lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Käänteinen lineaarinen</strong> – ilmaisee, että VF on VRMA:n käänteinen lineaarinen funktio.</li><li><strong>Symmetrinen käänteinen lineaarinen</strong> – määrittää, että VF on VRMA:n käänteinen lineaarinen funktio VRMA:n joko negatiivisella tai positiivisella sivulla ja että molemmat lineaariset funktiot ovat symmetrisiä VF (y) -akseliin nähden.</li><li><strong>Cos</strong> – määrittää VF:n VRMA:n kosinipohjaiseksi funktioksi.</li><li><strong>Sec</strong> – määrittää VF:n VRMA:n sekanttipohjaiseksi funktioksi.</li><li><strong>Cos–Sec</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Sec–Cos</strong> – määrittää, että VF on VRMA:n sekanttipohjainen funktio, jos VRMA on negatiivinen, ja että VF on VRMA:n kosinipohjainen funktio, jos VRMA on muu kuin negatiivinen.</li><li><strong>Taulu</strong> – määrittää, että taulutiedoston avulla määritetään VF:n määrittämiseen käytetty pystysuuntaisen tekijän kaavio.</li></ul><p>Pystysuuntaisten avainsanojen muokkaajat sisältävät seuraavat vaihtoehdot:</p><ul><li><strong>Nollatekijä</strong> – muodostaa pystysuoran tekijän, jota käytetään, kun VRMA on nolla. Tämä tekijä määrittää, mihin määritetyn funktion y-leikkauspiste sijoitetaan. Määritelmän mukaan nollatekijää ei voi käyttää trigonometrisissä pystysuuntaisissa funktioissa (COS, SEC, COS-SEC tai SEC-COS). Y-leikkauspiste määritetään näiden funktioiden avulla.</li><li><strong>Matala leikkauskulma</strong> – määrittää VRMA-kulman, jonka alittuessa VF:ksi määritetään ääretön.</li><li><strong>Korkea leikkauskulma</strong> – määrittää VRMA-kulman, jonka ylittyessä VF:ksi määritetään ääretön.</li><li><strong>Kaltevuus</strong> – määrittää suoran viivan kaltevuuden, jota käytetään seuraavien pystysuoran tekijän avainsanojen kanssa:<strong>Lineaarinen</strong>ja<strong>Käänteinen lineaarinen</strong>. Kaltevuus määritetään asteen murto-osana (esimerkki: 45 prosentin kaltevuus on 1/45, joka vastaa syötettä 0.02222).</li><li><strong>Taulun nimi</strong> – määrittää VF:n määrittävän taulun nimen.</li></ul>",
	"@@Distance-Allocation_verticalraster_tag0@@": "Määrittää pystysuoran kustannustekijän ja pystysuoran, suhteellisesti liikkuvan kulman välisen suhteen.",
	"@@Distance-Allocation_verticalraster_tag1@@": "Arvojen avulla lasketaan kaltevuus, jota käytetään sen pystysuoran tekijän määrittämiseen, joka esiintyy liikuttaessa solusta toiseen.",
	"@@Euclidean-Back-Direction_cellsize_tag0@@": "Solukoko, jolla tulosaineiston rasteri luodaan.",
	"@@Euclidean-Back-Direction_cellsize_tag1@@": "Jos solukoko on määritetty eksplisiittisesti <strong>Ympäristöt</strong>-parametrissa, kyseistä solukokoa käytetään oletuksena. Jos sitä ei ole määritetty, tulosaineiston solukoko on sama kuin <strong>Lähderasteri</strong>.",
	"@@Euclidean-Back-Direction_distancemethod_tag0@@": "Määrittää, lasketaanko etäisyys planaarisen (litteä maa) tai geodeettisen (ellipsoidi) menetelmän avulla.",
	"@@Euclidean-Back-Direction_distancemethod_tag1@@": "Planaarinen – Planaarisissa mittauksissa käytetään koordinaatistoon liittyvää 2D-matematiikkaa pituuden ja alueen laskemiseen. Vaihtoehto on käytettävissä vain silloin, kun mittaus suoritetaan projisoidussa koodinaattijärjestelmässä ja kyseisen koordinaattijärjestelmän 2D-tasoa käytetään mittausten pohjana.",
	"@@Euclidean-Back-Direction_distancemethod_tag2@@": "Geodeettinen – Lyhyin viiva kahden pisteen välillä maanpinnalla sferoidissa (ellipsoidissa). Siksi tulokset eivät muutu lähtöaineiston tai tulosaineiston projisoinnista huolimatta.",
	"@@Euclidean-Back-Direction_distancemethod_tag3@@": "<strong>Huomautus:</strong> geodeettista viivaa voidaan käyttää esimerkiksi lyhyimmän etäisyyden määrittämiseen kahden kaupungin välillä lentokoneen lentoreitillä. Tästä käytetään myös nimitystä isoympyrän viiva, jos se perustuu ellipsoidin sijasta palloon.",
	"@@Euclidean-Back-Direction_maximumdistance_tag0@@": "Määrittää kynnysetäisyyden, jonka sisällä suunta lähimpään lähteeseen lasketaan. Jos etäisyys lähimpään lähteeseen ylittää kynnysetäisyyden, kyseisen solun tulosaineisto on NoData.",
	"@@Euclidean-Back-Direction_maximumdistance_tag1@@": "Oletusetäisyys on tulosaineiston rasterin laajuuteen.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag0@@": "Rasteri, joka määrittää esteet.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag1@@": "Aineistoryhmän on sisällettävä NoData, jossa ei ole esteitä. Esteet esitetään kelvollisten arvojen, myös nollien, avulla.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag2@@": "Este voidaan määrittää kokonaisluku- tai liukulukurasterin avulla.",
	"@@Euclidean-Back-Direction_sourceraster_tag0@@": "Rasteriaineistoryhmä, joka määrittää solut tai sijainnit, joihin jokaisen tulosaineiston solusijainnin euklidinen suunta lasketaan.",
	"@@Euclidean-Back-Direction_sourceraster_tag1@@": "Lähtöaineiston tyyppi voi olla kokonaisluku tai liukuluku.",
	"@@Cost-Path_costbacklinkraster_tag0@@": "Kustannusten paluulinkityksen rasterikarttatason nimi, jota käytetään lähteeseen palautettavan reitin määrittämiseen pienimmän kustannuksen reitin kautta.",
	"@@Cost-Path_costbacklinkraster_tag1@@": "Arvo määrittää kullekin paluulinkityksen rasterin solulle naapurin, joka on seuraava solu pienimmällä kumulatiivisen kustannuksen reitillä yhdestä solusta yksittäiseen lähdesoluun tai lähdesolujen joukkoon.",
	"@@Cost-Path_costdistanceraster_tag0@@": "Sen kustannusetäisyysrasterin nimi, jota käytetään määrittämään pienimmän kustannuksen reitti kohdesijainneista lähteeseen.",
	"@@Cost-Path_costdistanceraster_tag1@@": "Kustannusetäisyysrasteri luodaan yleensä Kustannusetäisyys-, Kustannusten kohdennus- tai Kustannusten paluulinkitys -funktion avulla. Kustannusetäisyysrasterin karttatasoon tallennetaan jokaiselle solulle pienin kumulatiivinen kustannusetäisyys kustakin solusta lähdesolujen joukkoon kustannuspinnan kautta.",
	"@@Cost-Path_destinationfield_tag0@@": "Tätä kenttää käytetään noutamaan kohdesijaintien arvot. Lähdeaineiston kohdeaineiston on sisällettävä vähintään yksi kelvollinen kenttä.",
	"@@Cost-Path_destinationraster_tag0@@": "Rasteriaineistoryhmän karttataso, joka määrittää solut, joista selvitetään pienemmin kustannuksen reitti edullisimpaan lähteeseen.",
	"@@Cost-Path_destinationraster_tag1@@": "Lähtöaineiston rasterikarttataso koostuu soluista, joilla on kelvolliset arvot (nolla on kelvollinen arvo), ja muiden solujen arvoksi on määritettävä NoData.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag0@@": "Pakottaa funktion käsittelemään lähtöaineiston paluulinkityksen rasteria virtaussuuntarasterina. Virtaussuuntarasterien kokonaislukuarvo voi olla 0–255.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag1@@": "Ei valittu – Jos määritetyn paluulinkityksen rasterin arvot ovat kokonaislukuja väliltä 0–8, aineistoryhmää kohdellaan kustannuspaluulinkin rasterina. Jos arvot ovat väliltä 0–255, lähtöaineistoa käsitellään virtaussuuntarasterina. Jos arvot ovat väliltä 0-360 ja liukulukuja, lähtöaineistoa käsitellään paluusuunnan rasterina.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag2@@": "Valittu – Paluusuunnan rasterille toimitettua rasteria käsitellään virtaussuuntarasterina. Jos käytät tätä virtaussuuntarasterin asetusta, sen enimmäisarvo on 8 tai vähemmän.",
	"@@Cost-Path_pathtype_tag0@@": "Avainsana, joka määrittää, miten lähtöaineiston kohdeaineiston arvoja ja vyöhykkeitä tulkitaan kustannusreittilaskelmissa. Asetukset ovat seuraavat:",
	"@@Cost-Path_pathtype_tag1@@": "<strong>Jokainen solu</strong> – Koskee kaikkia soluja, joilla on kelvolliset arvot lähtöaineiston kohdeaineistossa. Pienimmän kustannuksen reitti määritetään ja tallennetaan tulosaineiston rasteriin. Tässä vaihtoehdossa jokaista lähtöaineiston kohdeaineiston solua käsitellään erikseen. Pienimmän kustannuksen reitti määritetään jokaiselle solulle.",
	"@@Cost-Path_pathtype_tag2@@": "<strong>Jokainen alue</strong> – Koskee jokaista vyöhykettä lähtöaineiston kohdeaineistossa. Pienimmän kustannuksen reitti määritetään ja tallennetaan tulosaineiston rasteriin. Tässä vaihtoehdossa pienimmän kustannuksen reitti kullekin vyöhykkeelle alkaa solusta, jolla on vyöhykkeen alhaisin kustannus-etäisyys-painoarvo.",
	"@@Cost-Path_pathtype_tag3@@": "<strong>Paras yksittäinen</strong> – Koskee lähtöaineiston kohdeaineiston kaikkia soluja. Pienimmän kustannuksen reitti saadaan pikselistä, josta on kaikkein pienimmän kustannuksen reitit lähtösoluihin.",
	"@@Cell-Statistics_cellsizetype_tag0@@": "Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan sama lopputulos.",
	"@@Cell-Statistics_cellsizetype_tag1@@": "Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.",
	"@@Cell-Statistics_cellsizetype_tag2@@": "Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.",
	"@@Cell-Statistics_cellsizetype_tag3@@": "Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.",
	"@@Cell-Statistics_cellsizetype_tag4@@": "Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.",
	"@@Cell-Statistics_cellsizetype_tag5@@": "Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.",
	"@@Cell-Statistics_extenttype_tag0@@": "Valitse tulosaineiston rasterissa käytettävä laajuus:",
	"@@Cell-Statistics_extenttype_tag1@@": "Ensimmäinen – Käytä lähtöaineiston ensimmäisen rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Cell-Statistics_extenttype_tag2@@": "Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.",
	"@@Cell-Statistics_extenttype_tag3@@": "Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Cell-Statistics_extenttype_tag4@@": "Viimeinen – Käytä lähtöaineiston viimeisen rasterin laajuutta käsittelylaajuuden määrittämiseen.",
	"@@Cell-Statistics_processasmultiband_tag0@@": "Määrittää, miten lähtöaineiston rasterikaistat käsitellään.",
	"@@Cell-Statistics_processasmultiband_tag1@@": "Ei valittu – Kaikki monikaistaiset lähtöaineistot käsitellään yksikaistaisina. Tämä on oletusarvo.",
	"@@Cell-Statistics_processasmultiband_tag2@@": "Valittu – Kaikki monikaistaiset lähtöaineistot käsitellään monikaistaisina.",
	"@@Cell-Statistics_rasters_tag0@@": "Niiden rasterien luettelo, joista tilastotietoja lasketaan pikseli pikseliltä.",
	"@@Cell-Statistics_percentileinterpolationtype_tag0@@": "<p>Määrittää käytettävän interpolointimenetelmän, kun prosenttipistearvo sijaitsee kahden syötesoluarvon välissä.</p><ul><li><strong>Tunnista automaattisesti</strong> – jos lähtöaineiston rasterien tyyppi on kokonaislukupikseli, käyttöön otetaan<strong>Lähin</strong>-menetelmä. Jos lähtöaineiston rasterin pikselityyppi on liukuluku, käytetään <strong>Lineaarinen</strong>-menetelmää. Tämä on oletusarvo.</li><li><strong>Lähin</strong> – Käytetään haluttua prosenttipistettä lähimpänä olevaa käytettävissä olevaa arvoa. Tässä tapauksessa tulosaineiston pikselityyppi on sama kuin lähtöarvorasterin pikselityyppi.</li><li><strong>Lineaarinen</strong>– käytetään halutun prosenttipisteen kahden ympäröivän arvon painotettua keskiarvoa. Tässä tapauksessa tulosaineiston pikselityyppi on liukuluku.</li></ul><p>Tämä asetus on käytettävissä vain, jos<strong>Toiminto</strong>-tyypin parametrin asetus on<strong>Mediaani</strong>tai<strong>Prosenttipiste</strong>.</p>",
	"@@Cell-Statistics_percentilevalue_tag0@@": "<p>Laskettava prosenttipiste. Oletusarvo on 90, jos kyseessä on 90. prosenttipiste.</p><p>Arvo voi vaihdella välillä 0–100. 0. prosenttipiste vastaa periaatteessa Minimi-tilastotietoa, ja 100. prosenttipiste Maksimi-tilastotietoa. Arvo 50 tuottaa saman tuloksen kuin Mediaani-tilastotieto.</p><p>Tämä asetus on käytettävissä vain, jos<strong>Toiminto</strong>-parametrin asetus on<strong>Prosenttipiste</strong>.</p>",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag0@@": "Paluusuunnan rasteri sisältää lasketut suunnat asteina. Suunta tunnistaa seuraavan solun optimaalisella reitillä takaisin pienimmän kumulatiivisen kustannuksen lähteeseen esteitä välttäen.",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag1@@": "Arvoväli on 0–360 astetta, jossa 0 on varattu lähdesoluille. Itäsuunta (oikealle) on 90 astetta ja arvot kasvavat myötäpäivään (180 on etelä, 270 on länsi ja 360 on pohjoinen).",
	"@@Optimal-Path-As-Raster_destinationfield_tag0@@": "Tätä kenttää käytetään noutamaan kohdesijaintien arvot.",
	"@@Optimal-Path-As-Raster_destinationraster_tag0@@": "Rasteriaineistoryhmän karttataso, joka määrittää solut, joista selvitetään optimaalinen reitti edullisimpaan lähteeseen. Tämä tulosaineisto on pakollinen.",
	"@@Optimal-Path-As-Raster_destinationraster_tag1@@": "Lähtöaineiston rasterikarttataso koostuu soluista, joilla on kelvolliset arvot (nolla on kelvollinen arvo), ja muiden solujen arvoksi on määritettävä NoData.",
	"@@Optimal-Path-As-Raster_distanceaccumulationraster_tag0@@": "Etäisyyskertymärasteria käytetään optimaalisen reitin määrittämiseen määränpäistä lähteisiin. Etäisyyskertymärasteri luodaan yleensä <strong>Etäisyyskertymä</strong>-funktiolla. Kukin etäisyyskertymärasterin solu edustaa pienintä kumulatiivista kustannusetäisyyttä kustakin solusta lähdesolujen joukkoon pinnan kautta.",
	"@@Optimal-Path-As-Raster_pathtype_tag0@@": "Määrittää avainsanan, joka määrittää, miten lähtöaineiston kohdeaineiston arvoja ja vyöhykkeitä tulkitaan kustannusreittilaskelmissa.",
	"@@Optimal-Path-As-Raster_pathtype_tag1@@": "<strong>Jokainen alue</strong> – Koskee jokaista vyöhykettä lähtöaineiston kohdeaineistossa. Pienimmän kustannuksen reitti määritetään ja tallennetaan tulosaineiston rasteriin. Tässä vaihtoehdossa optimaalinen reitti kullekin vyöhykkeelle alkaa solusta, jolla on vyöhykkeen alhaisin kustannus-etäisyys-painoarvo.",
	"@@Optimal-Path-As-Raster_pathtype_tag2@@": "<strong>Paras yksittäinen</strong> – Koskee lähtöaineiston kohdeaineiston kaikkia soluja. Optimaalinen reitti saadaan pikselistä, josta on kaikkein pienimmän kustannuksen reitit lähtösoluihin.",
	"@@Optimal-Path-As-Raster_pathtype_tag3@@": "<strong>Jokainen solu</strong> – Koskee kaikkia soluja, joilla on kelvolliset arvot lähtöaineiston määränpääaineistossa. Optimaalinen reitti määritetään. Tässä vaihtoehdossa jokaista lähtöaineiston kohdeaineiston solua käsitellään erikseen. Optimaalinen reitti määritetään jokaiselle solulle.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag0@@": "Muutoksen tunnistuksessa käytettävät kaistatunnukset. Jos kaistatunnuksia ei määritetä, kaikkia lähtöaineiston rasteriaineistoryhmän kaistoja käytetään.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag1@@": "Tunnusten arvojen on oltava välilyönnein eroteltuja kokonaislukuja.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag0@@": "Vihreän kaistan ja SWIR-kaistan kaistatunnukset, joita käytetään pilven, pilven varjon ja lumen maskaamiseen. Jos kaistatunnuksia ei määritetä, maskausta ei tehdä.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag1@@": "Tunnusten arvojen on oltava välilyönnein eroteltuja kokonaislukuja.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag2@@": "Tämä parametri määrittää kaistat, joita käytetään pilven, pilven varjon ja lumen maskaamiseen. Koska pilven varjo ja lumi näkyvät hyvin tummana lyhytaaltoinfrapunakaistassa (SWIR), ja pilvet sekä lumi ovat hyvin kirkkaita vihreässä kaistassa, on suositeltavaa maskata SWIR-kaistojen ja vihreiden kaistojen kaistaindeksit.",
	"@@CCDC-Analysis_chi-squaredthresholdfordetectchange_tag0@@": "Muutoksen todennäköisyyden Khii-toiseen-kynnysarvo. Jos havainnon laskettu muutoksen todennäköisyys on yli tämän kynnysarvon, se merkitään poikkeamaksi, joka on mahdollinen muutostapahtuma. Oletusarvo on 0,99.",
	"@@CCDC-Analysis_minimumconsecutiveanomalyobservations_tag0@@": "Niiden peräkkäisten poikkeamahavaintojen vähimmäismäärä, joiden on ilmettävä, ennen kuin tapahtumaa pidetään muutoksena. Pikseli on merkittävä poikkeamaksi määritettyjen peräkkäisten aikaviipaleiden osalta, ennen kuin sitä pidetään todellisena muutoksena. Oletusarvo on 6.",
	"@@CCDC-Analysis_raster_tag0@@": "Lähtöaineiston moniulotteinen rasterikarttataso.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag0@@": "Toistoväli, joka määrittää, miten usein aikasarjamalli päivitetään uusilla havainnoilla. Oletusarvon mukaan malli päivitetään vuoden välein.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag1@@": "Tämä parametri määrittää, miten usein aikasarjamalli päivitetään uusilla havainnoilla. Mallin päivittäminen usein voi olla laskennan kannalta kallista ja etu voi olla vähäinen. Jos moniulotteisessa rasterissa on esimerkiksi 365 viipaletta tai selkeää havaintoa vuotta kohti, ja päivitysväli on jokaiselle havainnolle, käsittely on 365 kertaa kalliimpaa laskennallisesti kuin päivitys kerran vuodessa, mutta tarkkuus ei ole välttämättä ole parempi.",
	"@@Trend-To-RGB_modeltype_tag0@@": "RGB-muotoon muunnettavan mallin tietojen tyyppi.",
	"@@Trend-To-RGB_modeltype_tag1@@": "Lineaarinen – Lineaarisen trendin tiedot muunnetaan RGB-muotoon. Tämä on oletusarvo.",
	"@@Trend-To-RGB_modeltype_tag2@@": "Harmoninen – Harmonisen trendin tiedot muunnetaan RGB-muotoon.",
	"@@Trend-To-RGB_raster_tag0@@": "Lähtöaineiston trendirasteri.",
	"@@LandTrendr-Analysis_bestmodelproportion_tag0@@": "<p>Paras mallin suhdearvo. Työkalu laskee mallin valintaprosessin aikana kunkin mallin p-arvon ja valitsee mallin, jossa on eniten taitepisteitä, mutta säilyttää samalla pienimmän (merkittävimmän) p-arvon tämän suhdearvon perusteella. Arvo 1 tarkoittaa, että mallilla on pienin p-arvo, mutta sillä ei ehkä ole paljon taitepisteitä. Oletusarvo on 1,25.</p>",
	"@@LandTrendr-Analysis_maximumnumberofsegments_tag0@@": "<p>Kunkin pikselin aikasarjoihin sovitettavien segmenttien enimmäismäärä. Oletusarvo on 5.</p>",
	"@@LandTrendr-Analysis_minimumnumberofobservations_tag0@@": "<p>Niiden kelvollisten havaintojen vähimmäismäärä, jotka tarvitaan sovituksen suorittamiseen. Lähtöaineiston moniulotteisen aineistoryhmän vuosimäärän on oltava yhtä suuri tai suurempi kuin tämä arvo. Oletusarvo on 6.</p>",
	"@@LandTrendr-Analysis_outputotherbands_tag0@@": "<p>Määrittää, sisällytetäänkö muut kaistat tuloksiin</p><ul><li>Valittu – Muut kaistat sisällytetään tuloksiin. Segmentointi- ja taitepistetiedot, jotka saadaan<strong>Käsittelykaista</strong>-parametrissa määritetystä alkuperäisestä segmentointikaistasta, sovitetaan myös monikaistaisten kuvien muihin kaistoihin. Mallin tulokset sisältävät ensin segmentointikaistan, jonka jälkeen näkyvät muut kaistat.</li><li>Ei valittu – Muita kaistoja ei sisällytetä. Tämä on oletusarvo.</li></ul>",
	"@@LandTrendr-Analysis_preventoneyearrecovery_tag0@@": "<p>Määrittää, suljetaanko yhden vuoden palautumisen sisältävät segmentit pois.</p><ul><li>Valittu – Segmentit, jotka sisältävät yhden vuoden palautumisen, suljetaan pois. Tämä on oletusarvo.</li><li>Ei valittu – Segmenttejä, jotka sisältävät yhden vuoden palautumisen, ei suljeta pois.</li></ul>",
	"@@LandTrendr-Analysis_processingband_tag0@@": "<p>Kaista, jota käytetään pikseliarvotrajektorien segmentointiin ajan kuluessa. Valitse kaista, joka tallentaa tarkasteltavan kohteen muutokset parhaiten.</p>",
	"@@LandTrendr-Analysis_p-valuethreshold_tag0@@": "<p>Valittavan mallin p-arvon kynnysarvo. Kun taitepisteet on havaittu mallin sovituksen ensimmäisessä vaiheessa, työkalu sovittaa kaikki segmentit ja määrittää mallin merkitsevyyden laskemalla p-arvon. Seuraavassa iteroinnissa malli pienentää segmenttien määrää yhdellä ja laskee p-arvon uudelleen. Tämä jatkuu, ja jos p-arvo on pienempi kuin tässä parametrissa määritetty arvo, malli valitaan ja työkalu lopettaa paremman mallin hakemisen. Jos tällaista mallia ei valita, työkalu valitsee mallin, jonka p-arvo on pienempi kuin<strong>pienin p-arvo × paras mallin suhdearvo</strong>. Oletusarvo on 0,01.</p>",
	"@@LandTrendr-Analysis_raster_tag0@@": "<p>Lähtöaineiston moniulotteinen Landsat-rasterikarttataso.</p>",
	"@@LandTrendr-Analysis_recoveryhasincreasetrend_tag0@@": "<p>Määrittää, onko palautumisen trendi nouseva (positiivinen).</p><ul><li>Valittu – Palautumisen trendi on nouseva. Tämä on oletusarvo.</li><li>Ei valittu – Palautumisen trendi on laskeva.</li></ul>",
	"@@LandTrendr-Analysis_recoverythreshold_tag0@@": "<p>Palautumiskynnys vuosina. Jos segmentin palautumisnopeus on nopeampi kuin<strong>1/palautumiskynnys</strong>, segmentti hylätään eikä sitä sisällytetä aikasarjamalliin. Arvon on oltava välillä 0–1. Oletusarvo on 0,25.</p>",
	"@@LandTrendr-Analysis_snappingdate_tag0@@": "<p>Päivämäärä, jota käytetään viipaleen valitsemiseen kullekin vuodelle lähtöaineiston moniulotteisessa aineistoryhmässä. Lähimpänä kuvauspäivämäärää oleva viipale valitaan. Parametri on pakollinen, jos lähtöaineistoryhmä sisältää alavuositason tietoja.</p>",
	"@@LandTrendr-Analysis_spikethreshold_tag0@@": "<p>Kynnysarvo, jota käytetään heikentämään pikseliarvotrajektorin piikkejä tai poikkeamia. Arvon on oltava välillä 0–1, jossa 1 merkitsee ei heikennystä. Oletusarvo on 0,9.</p>",
	"@@LandTrendr-Analysis_vertexcountovershoot_tag0@@": "<p>Niiden lisätaitepisteiden määrä, jotka ylittävät<strong>max_num_segments + 1 -arvon,</strong>joita voidaan käyttää mallin sovittamiseen taitepisteiden tunnistamisen ensimmäisen vaiheen aikana. Myöhemmin mallinnusprosessissa lisätaitepisteiden määrä vähennetään<strong>max_num_segments + 1 -arvoon</strong>. Oletusarvo on 2.</p>",
	"@@Merge-Rasters_rasters_tag0@@": "<p>Yhdistettävät lähtörasteriaineistoryhmät tai moniulotteiset rasteriaineistoryhmät.</p>",
	"@@Merge-Rasters_resolveoverlapmethod_tag0@@": "<p>Määrittää menetelmän, jota käytetään yhdistettyjen aineistoryhmien päällekkäisten pikselien selvittämiseen.</p><ul><li><strong>Ensimmäinen</strong> – Päällekkäisten alueiden pikseliarvo on lähtöaineiston rastereiden luettelon ensimmäisen rasterin arvo. Tämä on oletusarvo.</li><li><strong>Viimeinen</strong> – Päällekkäisten alueiden pikseliarvo on lähtörasterien luettelossa olevan viimeisen rasterin arvo.</li><li><strong>Minimi</strong> – Päällekkäisten alueiden pikseliarvo on päällekkäisten pikselien pienin arvo.</li><li><strong>Maksimi</strong> – Päällekkäisten alueiden pikseliarvo on päällekkäisten pikselien suurin arvo.</li><li><strong>Keskiarvo</strong> – Päällekkäisten alueiden pikseliarvo on päällekkäisten pikselien keskiarvo.</li><li><strong>Summa</strong> – Päällekkäisten alueiden pikseliarvo on päällekkäisten pikselien summa.</li></ul>",
	"@@Generate-Trend_cycleunit_tag0@@": "<p>Määrittää aikayksikön, jota käytetään harmonisen syklin pituudessa.</p><ul><li><strong>Päivät</strong> – Harmonisen syklin pituuden yksikkö on päivä.</li><li><strong>Vuodet</strong> – Harmonisen syklin pituuden yksikkö on vuosi. Tämä on oletusarvo.</li></ul>",
	"@@Generate-Trend_dimensionname_tag0@@": "<p>Ulottuvuus, jota pitkin trendi poimitaan muuttujaa tai analyysissa valittuja muuttujia varten.</p>",
	"@@Generate-Trend_harmonicfrequency_tag0@@": "<p>Trendin sovituksessa käytettävä toistovälin numero. Tämä parametri määrittää syklien toistovälin vuodessa. Oletusarvo on 1 eli yksi harmoninen sykli vuodessa.</p><p>Tämä parametri sisältyy vain harmonisen regression trendianalyysiin.</p>",
	"@@Generate-Trend_ignorenodata_tag0@@": "<p>Määrittää, ohitetaanko NoData-arvot analyysissä.</p><ul><li>Valittu – Analyysi sisältää kaikki kelvolliset pikselit annetulla ulottuvuudella ja ohittaa kaikki NoData-pikselit. Tämä on oletusarvo.</li><li>Ei valittu – Analyysin tuloksena on NoData, jos pikselien arvoina on NoData-arvoja annetulla ulottuvuudella.</li></ul>",
	"@@Generate-Trend_lengthofcycle_tag0@@": "<p>Mallinnettavan jaksottaisen vaihtelun pituus. Yksikkö päivinä lähtöaineiston aikayksiköstä riippumatta. Esimerkiksi lehtien vihreys vaihtelee usein voimakkaasti kerran vuoden aikana, joten syklin pituus on 365,25, vaikka lähtöaineistossa olisi käytetty kuukausittaista vihreyttä. Päivittäisellä lämpötila-aineistolla on yksi voimakas vaihtelusykli yhden päivän aikana, joten syklin pituus on 1.</p><p>Oletuspituus on 365,25 päivää aineistolle, joka vaihtelee vuosisyklin mukaisesti.</p>",
	"@@Generate-Trend_p-valueofslopecoefficient_tag0@@": "<p>Määrittää, lasketaanko trendiviivan kaltevuuskertoimen p-arvon tilastotiedot.</p><ul><li>Valittu – P-arvo lasketaan ja näytetään tiedoissa, kun funktion suoritus on päättynyt.</li><li>Ei valittu – P-arvoa ei lasketa. Tämä on oletusarvo.</li></ul>",
	"@@Generate-Trend_polynomialorder_tag0@@": "<p>Trendin sovituksessa käytettävä polynomin asteluku. Tämä parametri määrittää polynomin asteluvun. Oletusarvo on 2 eli toisen asteen polynomi.</p><p>Tämä parametri sisältyy vain polynomin regression trendianalyysiin.</p>",
	"@@Generate-Trend_r-squared_tag0@@": "<p>Määrittää, lasketaanko R^2-luvun yhteensopivuusasteen tilastotiedot trendin sovitusviivalle.</p><ul><li>Valittu – R^2-luku lasketaan ja näytetään tiedoissa, kun toiminto on valmis.</li><li>Ei valittu – R^2-lukua ei lasketa. Tämä on oletusarvo.</li></ul>",
	"@@Generate-Trend_raster_tag0@@": "<p>Lähtöaineiston moniulotteinen rasteri.</p>",
	"@@Generate-Trend_rmse_tag0@@": "<p>Määrittää, luodaanko trendin sovitusviivan keskimääräisen neliöjuuren virhe (RMSE).</p><ul><li>Valittu – RMSE-arvo lasketaan ja näytetään tiedoissa, kun toiminto on valmis. Tämä on oletusarvo.</li><li>Ei valittu – RMSE-arvoa ei lasketa.</li></ul>",
	"@@Generate-Trend_seasonalperiod_tag0@@": "<p>Määrittää aikayksikön, jota käytetään kausijakson pituutena suoritettaessa Vuodenaika-Kendall-testiä.</p><ul><li>Päivät – Kausijakson pituuden aikayksikkönä käytetään päiviä. Tämä on oletusarvo.</li><li>Kuukaudet – Kausijakson pituuden aikayksikkönä käytetään kuukausia.</li></ul>",
	"@@Generate-Trend_trendtype_tag0@@": "<p>Määrittää sen viivan tyypin, jota käytetään pikseliarvojen sovittamiseen ulottuvuudelle.</p><ul><li><strong>Lineaarinen</strong> – Sovittaa muuttujan pikseliarvot lineaariselle trendiviivalle. Tämä on oletusarvo.</li><li><strong>Harmoninen</strong> – Sovittaa muuttujan pikseliarvot harmoniselle trendiviivalle.</li><li><strong>Polynomi</strong> – Sovittaa muuttujan pikseliarvot toisen asteen polynomin trendiviivalle.</li><li><strong>Mann-Kendall</strong> – Muuttujan pikseliarvot arvioidaan käyttämällä Mann-Kendall-trenditestiä.</li><li><strong>Vuodenaika-Kendall</strong> – Muuttujan pikseliarvot arvioidaan käyttämällä Vuodenaika-Kendall-trenditestiä.</li></ul>",
	"@@Compute-Change_cellsizetype_tag0@@": "<p>Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan sama lopputulos.</p><ul><li>Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.</li><li>Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.</li><li>Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.</li><li>Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.</li><li>Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.</li></ul>",
	"@@Compute-Change_computechangemethod_tag0@@": "<p>Laskennassa käytetty menetelmä.</p><ul><li><strong>Ero</strong> – Lähtöaineiston rasterien pikseliarvojen matemaattinen ero tai vähennys lasketaan. Tämä on oletusarvo.</li><li><strong>Suhteellinen ero</strong>– Pikseliarvojen ero, jossa huomioidaan verrattavien arvojen suuruus, lasketaan.</li><li><strong>Kategorinen ero</strong> – Kahden kategorisen tai temaattisen rasterin ero lasketaan. Lähtöaineisto sisältää kahden rasterin välillä esiintyneet luokkasiirtymät.</li><li><strong>Spektrinen euklidinen etäisyys</strong>– Kahden monikaistaisen rasterin pikseliarvojen välinen euklidinen etäisyys lasketaan.</li><li><strong>Spektrisen kulman ero</strong>–Kahden monikaistaisen rasterin kahden pikseliarvon välinen spektrikulma lasketaan. Tulosaineisto ilmoitetaan radiaaneina.</li><li><strong>Kaista, jossa suurin muutos</strong>– Kaista, joka aiheuttaa suurimman muutoksen jokaisessa pikselissä kahden monikaistaisen rasterin välillä, lasketaan.</li></ul><p>Jos<strong>Laske muutosmenetelmä</strong> -asetus on<strong>Kategorinen ero</strong> ja jokin lähtöaineistosta ei ole kategorinen, yksinkertainen ero lasketaan.</p>",
	"@@Compute-Change_definetransitioncolors_tag0@@": "<p>Määritä menetelmä, jota käytetään sellaisten pikselien esittämiseen, joiden luokkia on muutettu.</p><ul><li><strong>Värivälin keskiarvo</strong> – Pikselin väri on pikselin alkuperäisen luokan värin ja lopullisen luokan värin keskiarvo.</li><li><strong>Käytä väreistä</strong> – Pikselin väri on pikselin alkuperäisen luokan väri.</li><li><strong>Käytä väreihin</strong> – Pikselin väri on pikselin lopullisen luokan väri.</li></ul>",
	"@@Compute-Change_extenttype_tag0@@": "<p>Valitse tulosrasterissa käytettävä laajuus:</p><ul><li>Ensimmäinen – Käytä lähtöaineiston ensimmäisen rasterin laajuutta käsittelylaajuuden määrittämiseen.</li><li>Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.</li><li>Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.</li><li>Viimeinen – Käytä lähtöaineiston viimeisen rasterin laajuutta käsittelylaajuuden määrittämiseen.</li></ul>",
	"@@Compute-Change_filtermethod_tag0@@": "<p>Valitse kategorisen muutoksen suodatusmenetelmä.</p><ul><li><strong>Säilytä kaikki</strong> – Kaikki luokat sisällytetään tulosaineistoon, eikä niitä suodateta. Valitse tämä vaihtoehto, jos haluat nähdä muutoksen ja pysyvyyden yhdessä aineistoryhmässä.</li><li><strong>Säilytä vain muuttuneet pikselit</strong> – Vain luokat, jotka ovat muuttuneet yhdestä luokkatyypistä toiseen luokkatyyppiin, sisällytetään tulosaineistoon. Valitse tämä vaihtoehto, jos olet kiinnostunut vain muutoksista.</li><li><strong>Säilytä vain muuttumattomat pikselit</strong> – Vain luokat, jotka eivät ole muuttuneet, sisällytetään tulosaineistoon. Valitse tämä vaihtoehto, jos olet kiinnostunut vain pysyvyydestä.</li></ul>",
	"@@Compute-Change_fromclassvalues_tag0@@": "<p>Ne luokka-arvot<strong>rasterivälin alkurasterista</strong>, jotka sisällytetään laskentaan verrattaessa kahta kategorista rasteria. Tämä on välilyönnein erotettu kokonaislukuarvojen luettelo, joka vastaa<strong>ClassValue-kenttää</strong>lähtöaineiston rasteriaineistoryhmässä.</p>",
	"@@Compute-Change_fromraster_tag0@@": "<p>Laskennassa käytettävä ensimmäinen rasteri. Jos haluat arvioida muutosta ensimmäisestä kerrasta (aiemmin) toiseen kertaan (myöhemmin), syötä ensimmäisen kerran rasteri tähän.</p>",
	"@@Compute-Change_toclassvalues_tag0@@": "<p>Ne luokka-arvot<strong>rasterivälin loppurasterista</strong>, jotka sisällytetään laskentaan verrattaessa kahta kategorista rasteria. Tämä on välilyönnein erotettu kokonaislukuarvojen luettelo, joka vastaa<strong>ClassValue-kenttää</strong>lähtöaineiston rasteriaineistoryhmässä.</p>",
	"@@Compute-Change_toraster_tag0@@": "<p>Laskennassa käytettävä toinen rasteri. Jos haluat arvioida muutosta ensimmäisestä kerrasta (aiemmin) toiseen kertaan (myöhemmin), syötä toisen kerran rasteri.</p>",
	"@@Compute-Change_usecolormethod_tag0@@": "<p>Määritä menetelmä, jota käytetään sellaisten pikselien esittämiseen, joiden luokkia on muutettu.</p><ul><li><strong>Värivälin keskiarvo</strong> – Pikselin väri on pikselin alkuperäisen luokan värin ja lopullisen luokan värin keskiarvo.</li><li><strong>Käytä väreistä</strong> – Pikselin väri on pikselin alkuperäisen luokan väri.</li><li><strong>Käytä väreihin</strong> – Pikselin väri on pikselin lopullisen luokan väri.</li></ul>",
	"@@Compute-Change_fieldnameforclassnamesinfromraster_tag0@@": "<p>Kenttä, joka tallentaa luokkanimet<strong>Rasterista</strong>-lähtöaineistosta. Työkalu hakee automaattisesti käytettävää<strong>ClassName</strong>- tai<strong>Class_Name</strong>-kenttää.</p><p>Käytä tätä vaihtoehtoa, jos lähtöaineisto ei sisällä näitä standardikenttänimiä.</p>",
	"@@Compute-Change_fieldnameforclassnamesintoraster_tag0@@": "<p>Kenttä, joka tallentaa luokkanimet<strong>Rasteriin</strong>-lähtöaineistoon. Työkalu hakee automaattisesti käytettävää<strong>ClassName</strong>- tai<strong>Class_Name</strong>-kenttää.</p><p>Käytä tätä vaihtoehtoa, jos lähtöaineisto ei sisällä näitä standardikenttänimiä.</p>",
	"@@Statistics_numberofcolumns_tag0@@": "<p>Niiden pikselisarakkeiden määrä, joita käytetään keskeisessä naapuriulottuvuudessa.</p>",
	"@@Statistics_numberofrows_tag0@@": "<p>Niiden pikselirivien määrä, joita käytetään keskeisessä naapuriulottuvuudessa.</p>",
	"@@Statistics_onlyfillnodatapixels_tag0@@": "<p>Täyttää tulosaineiston NoData-välit. Tästä on hyötyä, jos kuva-aineistosta on katkennut viivoja.</p>",
	"@@Statistics_raster_tag0@@": "<p>Lähtöaineiston rasteri, jossa keskipistetilastoja lasketaan.</p>",
	"@@Statistics_statisticstype_tag0@@": "<p>Keskipistetilastotoimintojen seitsemän tyyppiä ovat seuraavat:</p><ul><li>Minimi – Laskee naapuruston pikselien vähimmäisarvon.</li><li>Maksimi – Laskee naapuruston pikselien enimmäisarvon.</li><li>Keskiarvo – Laskee naapuruston pikselien keskiarvon. Tämä on oletusarvo.</li><li>Keskihajonta – Laskee naapuruston pikselien keskihajonta-arvon.</li><li>Mediaani – Laskee naapuruston pikselien mediaaniarvon.</li><li>Enemmistö – Laskee naapuruston pikselien enemmistöarvon eli useimmin esiintyvän arvon.</li><li>Vähemmistö – Laskee naapuruston pikselien vähemmistöarvon eli harvimmin esiintyvän arvon.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changedirection_tag0@@": "<p>Määrittää analyysiin sisällytettävän muutossuunnan.</p><p>Tämä parametri on käytettävissä vain, kun lähtöaineiston muutosanalyysirasteri on LandTrendr-työkalujen tulos.</p><ul><li><strong>Kaikki suunnat</strong> – Kaikki muutossuunnat sisällytetään tulosaineistoon. Tämä on oletusarvo.</li><li><strong>Lisää</strong> – Tulos sisältää vain positiivisen tai kasvavan muutossuunnan.</li><li><strong>Vähentää</strong> – Tulos sisältää vain negatiivisen tai laskevan muutossuunnan.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changetype_tag0@@": "<p>Määrittää laskettavat muutostiedot.</p><ul><li><strong>Viimeisimmän muutoksen aika</strong> – Kukin pikseli sisältää kyseisen pikselin viimeisimmän muutoksen päivämäärän aikasarjassa. Tämä on oletusarvo.</li><li><strong>Aikaisimman muutoksen aika</strong> – Kukin pikseli sisältää kyseisen pikselin aikaisimman muutoksen päivämäärän aikasarjassa.</li><li><strong>Suurimman muutoksen aika</strong> – Kukin pikseli sisältää kyseisen pikselin suurimman muutoksen päivämäärän aikasarjassa.</li><li><strong>Muutosten määrä</strong> – Kukin pikseli sisältää kyseisen pikselin muutosten kokonaismäärän aikasarjassa.</li><li><strong>Pisimmän muutoksen aika</strong> – Kukin pikseli sisältää pisimmän siirtymäsegmentin lopun muutospäivämäärän aikasarjassa.</li><li><strong>Lyhimmän muutoksen aika</strong> – Kukin pikseli sisältää lyhimmän siirtymäsegmentin lopun muutospäivämäärän aikasarjassa.</li><li><strong>Nopeimman muutoksen aika</strong> – Kukin pikseli sisältää nopeimman siirtymän lopun muutospäivämäärän.</li><li><strong>Hitaimman muutoksen aika</strong> – Kukin pikseli sisältää hitaimman siirtymän lopun muutospäivämäärän.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_filterbyduration_tag0@@": "<p>Määrittää, suodatetaanko muutoksen keston mukaan.</p><p></p><ul><li>Valittu – Tulokset suodatetaan keston mukaan, jotta tulosaineistoon sisällytetään vain tietyn ajan kestäneet muutokset.</li><li>Ei valittu – Tuloksia ei suodateta keston mukaan. Tämä on oletusarvo.</li></ul><p>Tämä parametri on käytettävissä vain, kun lähtöaineiston muutosanalyysirasteri on LandTrendr-työkalujen tulos.</p><p>Jos tämä parametri on valittuna, on valittava suodatuksen<strong>Vähimmäiskesto-</strong>ja<strong>Enimmäiskesto-</strong>parametrit.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbymagnitude_tag0@@": "<p>Määrittää, suodatetaanko muutoksen suuruuden mukaan.</p><ul><li>Valittu – Tulokset suodatetaan suuruuden mukaan niin, että tulos sisältää vain tietyn suuruuden muutokset.</li><li>Ei valittu – Tuloksia ei suodateta suuruuden mukaan. Tämä on oletusarvo.</li></ul><p>Tämä parametri on käytettävissä vain, kun lähtöaineiston muutosanalyysirasteri on LandTrendr-työkalujen tulos.</p><p>Jos tämä parametri on valittuna, on valittava suodatuksen<strong>Vähimmäissuuruus-</strong>ja<strong>Enimmäissuuruus-</strong>parametrit.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyyear_tag0@@": "<p>Määrittää, rajoitetaanko tulosta vuosivälin mukaan.</p><ul><li>Valittu – Tulokset suodatetaan siten, että tulokseen sisällytetään vain tietyn vuosivälin aikana tapahtuneet muutokset.</li><li>Ei valittu – Tuloksia ei suodateta vuosivälin mukaan. Tämä on oletusarvo.</li></ul><p>Jos tämä parametri on valittu, on valittava suodatuksen<strong>Vähimmäisarvo-</strong>ja<strong>Enimmäisarvo-</strong>parametrit.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbystartvalue_tag0@@": "<p>Suodata tulokset alkuarvon mukaan, jotta vain annetun alkuarvon muutokset sisällytetään tulosaineistoon.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyendvalue_tag0@@": "<p>Suodata tulokset loppuarvon mukaan, jotta vain annetun loppuarvon muutokset sisällytetään tulosaineistoon.</p>",
	"@@Detect-Change-Using-Change-Analysis_maximumnumberofchanges_tag0@@": "<p>Laskettavien muutosten enimmäismäärä pikseliä kohti. Annettu määrä vastaa tulosaineiston rasterin kaistojen määrää. Oletusarvo on 1, jolloin vain yksi muutospäivämäärä lasketaan ja tulosaineistorasteri sisältää vain yhden kaistan.</p><p>Tämä parametri ei ole käytettävissä, kun<strong>Muutostyyppi</strong>-parametrin arvona on<strong>Muutosten määrä</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_raster_tag0@@": "<p>Lähtöaineiston muutosanalyysin rasteri.</p>",
	"@@Detect-Change-Using-Change-Analysis_segmentdate_tag0@@": "<p>Määrittää, poimitaanko päivämäärä muutossegmentin alusta vai lopusta.</p><p>Tämä parametri on käytettävissä vain, kun lähtöaineiston muutosanalyysirasteri on LandTrendr-työkalujen tulos.</p><ul><li><strong>Lohkon alku</strong> – Päivämäärä poimitaan muutossegmentin alusta. Tämä on oletusarvo.</li><li><strong>Lohkon loppu</strong> – Päivämäärä poimitaan muutossegmentin lopusta.</li></ul>",
	"@@Kernel-Density_areaunits_tag0@@": "<p>Tulosaineiston tiheysarvojen alueyksiköt.</p><ul><li>Neliökarttayksiköt – Tulosaineiston koordinaattijärjestelmän lineaaristen yksiköiden neliöille.</li><li>Neliömailit – Maileille (Yhdysvallat).</li><li>Neliökilometrit – Kilometreille</li><li>Eekkerit – Eekkereille (Yhdysvallat).</li><li>Hehtaarit – Hehtaareille.</li><li>Neliömetreille – Metreille.</li><li>Neliöjaardit – Jaardeille (Yhdysvallat).</li><li>Neliöjalat – Jaloille (Yhdysvallat).</li><li>Neliöjalat – Jaloille (Yhdysvallat).</li><li>Neliösenttimetrit – Senttimetreille.</li><li>Neliömillimetrit – Millimetreille.</li></ul>",
	"@@Kernel-Density_cellsize_tag0@@": "<p>Tulosaineiston rasteriaineistoryhmän pikselikoko. Jos<strong>Solukoko</strong>-arvo on määritetty geoprosessointiympäristöissä, se on oletusarvo.</p>",
	"@@Kernel-Density_inputbarriers_tag0@@": "<p>Aineistoryhmä, joka määrittää esteet.</p><p>Este voi olla taiteviiva- tai aluekohteiden kohdetaso.</p>",
	"@@Kernel-Density_inputfeatures_tag0@@": "<p>Lähtöaineiston piste- tai viivakohteet, joille tiheys lasketaan.</p>",
	"@@Kernel-Density_method_tag0@@": "<p>Määrittää, käytetäänkö sferoidin (geodeettinen) lyhintä polkua vai maatason (planaarinen) menetelmää.</p><ul><li><strong>Planaarinen</strong> – Käyttää planaarisia etäisyyksiä kohteiden välillä. Tämä on oletusarvo.</li><li><strong>Geodeettinen</strong> – Käyttää geodeettisia etäisyyksiä kohteiden välillä. Tämä menetelmä ottaa huomioon sferoidin kaarevuuden ja käsittelee napojen lähellä olevaa aineistoa ja kansainvälistä päivämäärärajaa oikein. </li></ul><p>On suositeltavaa käyttää<strong>Geodeettinen</strong>-menetelmää ja sellaiseen koordinaattijärjestelmään tallennettua aineistoa, joka ei sovellu etäisyyksien mittaamiseen ja laajoille maantieteellisille alueille ulottuviin analyyseihin. Esimerkiksi Web Mercatorin tai minkä tahansa maantieteellisen koordinaatiston tulisi käyttää<strong>Geodeettinen</strong>-menetelmää.</p>",
	"@@Kernel-Density_outputcellvalues_tag0@@": "<p>Määrittää, mitä tulosaineiston rasterin arvot kuvaavat.</p><ul><li><strong>Tiheydet</strong> – Tulosaineiston arvot kuvaavat ennustettua tiheysarvoa. Tämä on oletusarvo.</li><li><strong>Odotetut määrät</strong> – Tulosaineiston arvot kuvaavat ilmiön ennustettua määrää kussakin pikselissä. Koska pikseliarvo on linkitetty tiettyyn<strong>Solukoko</strong>-arvoon, tuloksena olevalle rasterille ei voi suorittaa uudelleenotantaa eri pikselikokoon ja säilyttää edelleen ilmiön määrä.</li></ul>",
	"@@Kernel-Density_populationfield_tag0@@": "<p>Kenttä, joka ilmaisee kunkin kohteen populaatioarvot. <strong>Populaatiokentän</strong>arvo edustaa koko maisemaan jaettavaa määrää jatkuvan pinnan luomista varten. <strong>Populaatiokentän</strong>arvot voivat olla kokonaislukuja tai liukulukuja.</p><p>Kentän vaihtoehdot ja oletustoiminta on lueteltu alla tärkeysjärjestyksessä.</p><ul><li>Valitse<strong>Ei mitään</strong>, jos kohdetta tai erikoisarvoa ei käytetä ja jokainen kohde lasketaan kerran.</li><li>Valitse<strong>Muoto</strong>, jos lähtöaineiston kohteet sisältävät Z-arvon.</li><li>Muussa tapauksessa oletuskenttä on<strong>POPULATION</strong>tai mikä tahansa sen hyväksyttävä johdannainen:<ul><li><strong>POPULATIONxxxx</strong>, jossa<strong>xxxx</strong>voi olla mikä tahansa kelvollinen merkki, kuten<strong>POPULATION6</strong>,<strong>POPULATION1974</strong>, tai<strong>POPULATIONROADTYPE</strong>.</li><li><strong>POP</strong>.</li><li><strong>POPxxxx</strong>.</li><li>Jos mikään edellisistä ei kelpaa, oletusarvo on<strong>Ei mitään</strong>.</li></ul></li></ul>",
	"@@Kernel-Density_searchradius_tag0@@": "<p>Etsintäsäde, jonka mukaan tiheys lasketaan. Yksiköt perustuvat projektion lineaariseen yksikköön.</p><p>Jos esimerkiksi yksiköt ovat metrejä ja haluat sisällyttää kaikki yhden mailin naapuruston sisällä olevat kohteet, määritä etsintäsäteeksi 1 609,344 (koska 1 maili on 1 609,344 metriä).</p>",
	"@@Zonal-Statistics_ignorenodataincalculations_tag0@@": "<p>Ilmaisee, vaikuttavatko<strong>NoData-</strong>arvot<strong>arvorasterissa</strong>sen vyöhykkeen tuloksiin, jonka sisään ne kuuluvat.</p><ul><li><strong>Kyllä</strong> – Missä tahansa vyöhykkeessä vain pikseleitä, joilla on arvo<strong>arvorasterissa</strong>, käytetään kyseisen vyöhykkeen tulosarvon määrittämiseen.<strong>NoData</strong>-pikselit, jotka sisältyvät<strong>arvorasteriin</strong>, ohitetaan tilastollisessa laskennassa. Tämä on oletusarvo.</li><li><strong>Ei</strong> – Jos yksikin<strong>NoData</strong>-pikseli sisältyy<strong>arvorasteriin</strong>missä tahansa tietyssä vyöhykkeessä, tietoja ei ole riittävästi tilastollisten laskentojen suorittamiseen kyseisen vyöhykkeen kaikille pikseleille. Sen vuoksi koko vyöhyke saa<strong>NoData</strong>-arvon tulosaineiston rasteriin.</li></ul>",
	"@@Zonal-Statistics_percentileinterpolationtype_tag0@@": "<p>Määrittää käytettävän prosenttipisteen interpolointimenetelmän, kun lähtörasterin laskettujen arvojen määrä on parillinen.</p><ul><li><strong>Tunnista automaattisesti</strong> – Jos lähtöarvorasterin pikselityyppinä on kokonaisluku, käytetään<strong>Lähin</strong>-menetelmää. Jos lähtöaineiston arvorasterin pikselityyppi on liukuluku, käytetään<strong>Lineaarinen</strong>-menetelmää. Tämä on oletusarvo.</li><li><strong>Lähin</strong> – Käytetään haluttua prosenttipistettä lähimpänä olevaa käytettävissä olevaa arvoa. Tässä tapauksessa tulosaineiston pikselityyppi on sama kuin lähtöarvorasterin pikselityyppi.</li><li><strong>Lineaarinen</strong> – Käytetään halutun prosenttipisteen kahden ympäröivän arvon painotettua keskiarvoa. Tässä tapauksessa tulosaineiston pikselityyppi on liukuluku.</li></ul>",
	"@@Zonal-Statistics_percentilevalue_tag0@@": "<p>Laskettava prosenttipiste. Oletusarvo on 90, jos kyseessä on 90. prosenttipiste.</p><p>Arvo voi vaihdella välillä 0–100. 0. prosenttipiste vastaa periaatteessa Minimi-tilastotietoa, ja 100. prosenttipiste vastaa Maksimi-tilastotietoa. Arvo 50 tuottaa saman tuloksen kuin Mediaani-tilastotieto.</p>",
	"@@Zonal-Statistics_processasmultidimensional_tag0@@": "<p>Määrittää, miten lähtöaineiston moniulotteinen arvorasteri käsitellään.</p><ul><li><strong>Nykyinen viipale</strong> – Tilastotiedot lasketaan moniulotteisen aineistoryhmän nykyisestä viipaleesta. Tämä on oletusarvo.</li><li><strong>Kaikki viipaleet</strong> – Tilastotiedot lasketaan kaikille moniulotteisen aineistoryhmän ulottuvuuksille (kuten aika- tai syvyysulottuvuuksille).</li></ul>",
	"@@Zonal-Statistics_statisticstype_tag0@@": "<p>Laskettavan tilastotiedon tyyppi.</p><ul><li><strong>Keskiarvo</strong> – Laskee kaikkien niiden pikselien keskiarvon<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li><li><strong>Enemmistö</strong> – Määrittää arvon, jota esiintyy eniten kaikista niistä pikseleistä<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li><li><strong>Maksimi</strong> – Määrittää kaikkien niiden pikselien suurimman arvon<strong>arvorasterissa</strong>jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li><li><strong>Mediaani</strong> – Määrittää kaikkien niiden pikselien mediaaniarvon<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li><li><strong>Minimi</strong> – Määrittää kaikkien niiden pikselien pienimmän arvon<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li><li><strong>Vähemmistö</strong> – Määrittää arvon, jota esiintyy vähiten kaikista niistä pikseleistä<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li><li><strong>Prosenttipiste</strong> – Laskee kaikkien niiden pikselien prosenttipisteen<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli. 90. prosenttipiste lasketaan oletusarvoisesti. Voit määrittää, mitkä prosenttipisteet lasketaan<strong>Prosenttiarvo</strong>-parametrin avulla.</li><li><strong>Vaihteluväli</strong> – Laskee eron kaikkien niiden pikselien suurimman ja pienimmän arvon välillä<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li><li><strong>Keskihajonta</strong> – Laskee kaikkien niiden pikselien keskihajonnan<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li><li><strong>Summa</strong> – Laskee kaikkien niiden pikselien kokonaisarvon<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li><li><strong>Diversiteetti</strong> – Laskee kaikkien niiden pikselien yksilöllisten arvojen määrän<strong>arvorasterissa</strong>, jotka kuuluvat samaan vyöhykkeeseen kuin tulosaineiston pikseli.</li></ul>",
	"@@Zonal-Statistics_valueraster_tag0@@": "<p>Rasteri, joka sisältää arvot, joista tilastotiedot lasketaan.</p>",
	"@@Zonal-Statistics_zonefield_tag0@@": "<p>Kenttä, joka sisältää kunkin vyöhykkeen määrittävät arvot. Se voi olla vyöhykerasterin kokonaisluku- tai merkkijonokenttä.</p>",
	"@@Zonal-Statistics_zoneraster_tag0@@": "<p>Aineistoryhmä, joka määrittää vyöhykkeet. Vyöhykkeet voidaan määrittää kokonaislukurasterin avulla.</p>",
	"@@Zonal-Statistics_calculatecircularstatistics_tag0@@": "<p>Määrittää, miten tilastotietotyyppi lasketaan.</p><ul><li><strong>Aritmeettinen</strong> – Laskee aritmeettiset tilastotiedot. Tämä on oletus.</li><li><strong>Ympyränmuotoinen</strong> – Laskee ympyränmuotoiset tilastotiedot, jotka sopivat kehämäisiin määriin, kuten kompassisuuntaan asteina, päiväaikoihin ja reaalinumeroiden murto-osiin.</li></ul>",
	"@@Zonal-Statistics_circularwrapvalue_tag0@@": "<p>Suurin mahdollinen arvo (yläraja) kehämäisessä aineistossa. Arvo on positiivinen luku, ja oletusarvo on 360. Tämä arvo myös kuvaa samaa määrää kuin pienin mahdollinen arvo (alaraja).</p><p>Tätä parametria voidaan käyttää vain, kun lasketaan ympyränmuotoisia tilastotietoja.</p>",
	"@@Boundary-Clean-function_inputraster_tag0@@": "<p>Lähtöaineiston rasteri, jonka vyöhykkeiden välinen raja tasoitetaan.</p><p>Sen on oltava kokonaislukutyyppiä.</p>",
	"@@Boundary-Clean-function_runexpansionandshrinkingtwice_tag0@@": "<p>Määrittää, kuinka monta kertaa tasoitusprosessi toteutuu, kahdesti tai kerran.</p><ul><li><p><strong>Valittu</strong> – Suorittaa laajennus- ja kutistustoiminnon kaksi kertaa. Toiminto suoritetaan ensimmäisellä kerralla määritetyn lajittelutyypin mukaisesti. Sen jälkeen suoritettavassa toisessa laajennus- ja kutistustoiminnossa prioriteetti on käänteinen. Tämä on oletusarvo.</p></li><li><p><strong>Ei valittu</strong> – Suorittaa laajennus- ja kutistustoiminnon kerran lajittelutyypin mukaan.</p></li></ul>",
	"@@Boundary-Clean-function_sorttype_tag0@@": "<p>Määrittää tasoitusprosessissa käytettävän lajittelutyypin. Lajittelu määrittää prioriteetin, jonka perusteella solut voivat laajentua naapureihinsa.</p><p>Lajittelu voidaan tehdä vyöhykkeen arvon tai vyöhykealueen perusteella.</p><ul><li><p><strong>Ei lajittelua</strong> – Vyöhykkeitä ei lajitella koon mukaan. Suurempiarvoiset vyöhykkeet ovat ensisijaisimpia laajentumaan vyöhykkeille, joilla on pienemmät arvot tasoitetussa tulosaineistossa. Tämä on oletusarvo.</p></li><li><p><strong>Laskeva</strong> – Lajittelee vyöhykkeet laskevaan järjestykseen koon mukaan. Vyöhykkeet, joilla on suuremmat kokonaisalueet, ovat ensisijaisimpia laajentumaan vyöhykkeille, joilla on pienemmät kokonaisalueet. Tämä vaihtoehto tarkoittaa yleensä sitä, että tasoitetun tulosaineiston pieniltä vyöhykkeiltä löytyvien solujen määrä vähenee tai soluja ei niillä ole.</p></li><li><p><strong>Nouseva</strong> – Lajittelee vyöhykkeet nousevaan järjestykseen koon mukaan. Vyöhykkeet, joilla on pienemmät kokonaisalueet, ovat ensisijaisimpia laajentumaan vyöhykkeille, joilla on suuremmat kokonaisalueet. Tämä vaihtoehto tarkoittaa yleensä sitä, että tasoitetun tulosaineiston pieniltä vyöhykkeiltä löytyvien solujen määrä säilyy tai kasvaa.</p></li></ul>",
	"@@Aggregate-Multidimensional_dimension_tag0@@": "<p>Koosteulottuvuus. Tämä on ulottuvuus, jonka mukaan muuttujat koostetaan.</p>",
	"@@Aggregate-Multidimensional_dimensiondefinition_tag0@@": "<p>Määrittää menetelmän, jota käytetään lähtöaineiston moniulotteisen aineiston suodattamiseen ennen koosteen suorittamista.</p><ul><li><strong>Kaikki</strong> – kunkin ulottuvuuden koko arvoaluetta käytetään. Tämä on oletusarvo.</li><li><strong>Arvojen mukaan</strong> – ulottuvuus viipaloidaan käyttämällä ulottuvuusarvoa tai arvoluetteloa.</li><li><strong>Alueiden mukaan</strong> – ulottuvuus viipaloidaan käyttämällä arvoväliä tai arvovälien luetteloa.</li><li><strong>Iteroinnin mukaan</strong> – ulottuvuus viipaloidaan määritetyn välin koon perusteella.</li></ul>",
	"@@Aggregate-Multidimensional_iterationdefinitionparameters_tag0@@": "<p>Iteroinnin määritelmän parametrit mahdollistavat sellaisten ulottuvuusarvojen määrittämisen, jotka sallivat lähtöaineiston moniulotteisen aineiston suodattamisen analyysia varten, kun <strong>Dimension määritelmä</strong> -parametrin arvona on <strong>Iteroinnin mukaan</strong>.</p><ul><li><strong>Ulottuvuus</strong> – suodatuksessa käytettävä ulottuvuus.</li><li><strong>Ensimmäisen iteroinnin alkuosa</strong> – ensimmäisen välin alku. Tätä väliä käytetään koko aineistoryhmän iteroimiseen.</li><li><strong>Ensimmäisen iteroinnin loppuosa</strong> – ensimmäisen välin loppu. Tätä väliä käytetään koko aineistoryhmän iteroimiseen.</li><li><strong>Vaihe</strong> – tiheys, jolla aineisto viipaloidaan.</li><li><strong>Yksikkö</strong> –iteroinnin yksikkö.</li></ul>",
	"@@Aggregate-Multidimensional_keywordinterval_tag0@@": "<p>Määrittää avainsanavälin, jota käytetään koostettaessa ulottuvuuden mukaisesti.</p><p>Tämä parametri on pakollinen, kun <strong>Tyyppi</strong>-parametrin arvona on <strong>Arvovälin avainsana</strong>.</p><ul><li><strong>Tunneittain</strong> – aineiston arvot koostetaan tunnin mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan tunnit. Tämä on oletusarvo.</li><li><strong>Päivittäin</strong> – aineiston arvot koostetaan päivän mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan päivät.</li><li><strong>Viikoittain</strong> – aineiston arvot koostetaan viikon mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan viikot.</li><li><strong>Kymmenpäivittäin</strong> – aineiston arvot koostetaan kolmeen 10 päivän mittaiseen jaksoon. Viimeinen jakso voi sisältää alle tai yli 10 päivää. Tulosaineisto sisältää kolme viipaletta kutakin kuukautta kohden.</li><li><strong>Viisittäin</strong> – aineiston arvot koostetaan kuuteen viiden päivän mittaiseen jaksoon. Viimeinen jakso voi sisältää alle tai yli viisi päivää. Tulosaineisto sisältää kuusi viipaletta kutakin kuukautta kohden.</li><li><strong>Kuukausittain</strong> – aineiston arvot koostetaan kuukauden mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan kuukaudet.</li><li><strong>Neljännesvuosittain</strong> – aineiston arvot koostetaan neljännesvuoden mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan vuosineljännekset.</li><li><strong>Vuosittain</strong> – aineiston arvot koostetaan vuoden mittaisiin aikaväleihin, ja tulos sisältää kaikki aikasarjan vuodet.</li><li><strong>Toistuu päivittäin</strong> – aineiston arvot koostetaan päivän mittaisiin aikaväleihin, ja tulos sisältää yhden koostetun arvon juliaanista päivää kohden. Tulosaineisto sisältää enimmillään 366 päivittäistä aikaviipaletta.</li><li><strong>Toistuu viikoittain</strong> – aineiston arvot koostetaan viikon mittaisiin aikaväleihin, ja tulos sisältää yhden koostetun arvon viikkoa kohden. Tulosaineisto sisältää enimmillään 53 viikoittaista aikaviipaletta.</li><li><strong>Toistuu kuukausittain</strong> – aineiston arvot koostetaan kuukauden mittaisiin aikaväleihin, ja tulos sisältää yhden koostetun arvon kuukautta kohden. Tulosaineisto sisältää enimmillään 12 kuukausittaista aikaviipaletta</li><li><strong>Toistuu neljännesvuosittain</strong> – aineiston arvot koostetaan neljännesvuoden mittaisiin aikaväleihin, ja tulos sisältää yhden koostetun arvon vuosineljännestä kohden. Tulosaineisto sisältää enimmillään neljä neljännesvuosittaista aikaviipaletta.</li></ul>",
	"@@Aggregate-Multidimensional_operation_tag0@@": "<p>Määrittää matemaattisen menetelmän, jota käytetään aikavälin koostettujen viipaleiden yhdistämiseen.</p><ul><li><strong>Enemmistö</strong> – laskee pikseliarvon, joka toistui useimmin välin kaikissa viipaleissa.</li><li><strong>Maksimi</strong> – laskee pikselin enimmäisarvon välin kaikista viipaleista.</li><li><strong>Keskiarvo</strong> – laskee pikseliarvojen keskiarvon välin kaikista viipaleista. Tämä on oletusarvo.</li><li><strong>Mediaani</strong> – laskee pikselin mediaaniarvon välin kaikista viipaleista.</li><li><strong>Minimi</strong> – laskee pikselin vähimmäisarvon välin kaikista viipaleista.</li><li><strong>Vähemmistö</strong> – laskee pikseliarvon, joka toistui harvimmin välin kaikissa viipaleissa.</li><li><strong>Vaihteluväli</strong> – laskee pikselin arvojen vaihteluvälin välin kaikista viipaleista.</li><li><strong>Keskihajonta</strong> – laskee pikselin arvojen keskihajonnan välin kaikista viipaleista.</li><li><strong>Summa</strong> – laskee pikselin arvojen summan välin kaikista viipaleista.</li><li><strong>Diversiteetti</strong> – laskee pikselin yksilöllisten arvojen määrän välin kaikista viipaleista.</li></ul><p>Kaikilla vaihtoehdoilla on myös vastaava Ohita NoData-arvo -vaihtoehto. Ne suorittavat matemaattisen laskutoimituksen kaikille ulottuvuuden kelvollisille pikseleille ja ohittavat kaikki NoData-pikselit.</p>",
	"@@Aggregate-Multidimensional_ranges_tag0@@": "<p>Taulussa määritettyjä arvovälin arvoalueita käytetään arvoryhmien koostamiseen. Minimi- ja maksimiarvot määrittävät sisällytettävän arvoalueen.</p><p>Tämä parametri on pakollinen, kun <strong>Tyyppi</strong>-parametrin arvona on <strong>Arvovälin arvoalueet</strong>.</p>",
	"@@Aggregate-Multidimensional_raster_tag0@@": "<p>Lähtöaineiston moniulotteinen rasteri.</p>",
	"@@Aggregate-Multidimensional_type_tag0@@": "<p>Määrittää ulottuvuusvälin, jolle aineisto koostetaan.</p><ul><li><strong>Kaikki</strong> – muuttuja-aineisto koostetaan kaikista viipaleista. Tämä on oletusarvo.</li><li><strong>Arvovälin avainsana</strong> – muuttuja-aineisto koostetaan käyttämällä yleisesti tunnettua väliä.</li><li><strong>Arvovälin arvo</strong> – muuttuja-aineisto koostetaan käyttämällä käyttäjän määrittämää väliä ja yksikköä.</li><li><strong>Arvovälin arvoalueet</strong> – muuttuja-aineisto koostetaan käyttämällä määritettyjä arvo- tai päivämääräpareja.</li></ul>",
	"@@Aggregate-Multidimensional_valueinterval_tag0@@": "<p>Koostamisessa käytettävän välin koko.</p><p>Tämä parametri on pakollinen, kun <strong>Tyyppi</strong>-parametrin arvona on <strong>Arvovälin arvo</strong>.</p>",
	"@@Aggregate-Multidimensional_values_tag0@@": "<p>Ulottuvuusarvot, joita käytetään lähtöaineiston moniulotteisen aineiston suodattamiseen analyysia varten. Tämä parametri on pakollinen, kun <strong>ulottuvuusmääritelmä</strong> -parametrin arvona on <strong>Arvojen mukaan</strong>.</p>",
	"@@Aggregate-Multidimensional_variables_tag0@@": "<p>Muuttuja tai muuttujat, jotka koostetaan annetun ulottuvuuden mukaan.</p>",
	"@@Predict-Using-Regression_inputdefinitionfile_tag0@@": "<p>Lähtöaineiston Esri-regressiomääritystiedosto (<strong>.ecd</strong>), joka sisältää tilastotiedot ja tietoja tiettyä aineistoryhmää, regressiomallia ja valittuja ominaisuustietoja varten.</p>",
	"@@Predict-Using-Regression_rasters_tag0@@": "<p>Rasteriaineistoryhmä tai -aineistoryhmät edustavat ennustemuuttujia. Se voi olla yksikaistainen rasteri, monikaistainen rasteri, moniulotteinen rasteri, mosaiikkiaineistoryhmä tai rasterikokoelma.</p>",
	"@@Cell-Statistics_operation_tag0@@": "<p>Suoritettavan tilastollisen laskennan tyyppi.</p><p>Käytettävissä olevat tilastot ovat <strong>Enemmistö</strong>,<strong>Enimmäis</strong>,<strong>Keskiarvo</strong>,<strong>Mediaani</strong>,<strong>Vähimmäis</strong>,<strong>Vähemmistö</strong>,<strong>Prosenttipiste</strong>,<strong>Arvoalue</strong>,<strong>Keskihajonta</strong>,<strong>Summa</strong> ja <strong>Diversiteetti</strong>.</p><p>Oletusvaihtoehto on<strong>Keskiarvo</strong>.</p>",
	"@@Colormap-To-RGB_randomlyassigncolortounmappedpixels_tag0@@": "<p>Värit määritetään satunnaisesti pikseleille, jotka eivät sisälly värikarttaan.</p><ul><li>Ei valituille ja kartoittamattomille pikseleille ei määritetä väriä. Tämä on oletusvalinta.</li><li>Valituille ja kartoittamattomille pikseleille määritetään väri.</li></ul>",
	"@@Pansharpen_sensor_tag0@@": "<p>Jos valitset Gram-Schmidt-algoritmin, voit myös määrittää anturin, joka kerää monikaistaisen rasterin lähtöaineiston. Asianmukaiset kaistojen painoarvot määritetään, kun anturityyppi valitaan.</p>",
	"@@Dimensional-Moving-Statistics_backwardwindow_tag0@@": "<p>Määritettyyn ikkunaan sisällytettävien edeltävien ja seuraavien viipaleiden määrä. Arvon on oltava positiivinen kokonaisluku väliltä 1–100. Oletusarvo on 1.</p><p>Tämän parametrin yksikkö on viipale.</p>",
	"@@Dimensional-Moving-Statistics_circularwrapvalue_tag0@@": "<p>Arvo, jota käytetään lineaarisen arvon pyöristämiseen määrätyn ympyrän keskiarvon arvoalueelle.</p><p>Arvon on oltava positiivinen. Oletusarvo on 360 astetta.</p>",
	"@@Dimensional-Moving-Statistics_dimension_tag0@@": "<p>Sen ulottuvuuden nimi, jota ikkuna siirtää.</p><p>Oletusarvo on ensimmäinen muu ulottuvuus kuin x,y, joka löydetään lähtöaineiston moniulotteisesta rasterista.</p>",
	"@@Dimensional-Moving-Statistics_forwardwindow_tag0@@": "<p>Määritettävään ikkunaan sisällytettävien seuraavien tai matalampien viipaleiden määrä. Arvon on oltava positiivinen kokonaisluku väliltä 1–100. Oletusarvo on 1.</p><p>Tämän parametrin yksikkö on viipale.</p>",
	"@@Dimensional-Moving-Statistics_inputraster_tag0@@": "<p>Lähtöaineiston rasteri voi olla ainoastaan moniulotteinen rasteri Pilvirasterimuodossa (<strong>.crf</strong>-tiedosto).</p>",
	"@@Dimensional-Moving-Statistics_nodatahandling_tag0@@": "<p>Määrittää kuinka NoData-arvoja käsitellään tilastolaskelmassa.</p><ul><li><strong>Lähtöaineiston arvojen aineisto</strong>- NoData-arvot jätetään huomioimatta ne sisältävän määritetyn ikkunan tuloksista. Tämä on oletusarvo.</li><li><strong>NoData</strong>- ja Tulosaineisto-arvojen tulos on NoData, jos määritetyn ikkunan lähtöaineistossa on NoData-arvoja.</li><li><strong>Täytä NoData</strong>- NoData -soluarvot korvataan käyttämällä valittua tilastoa määritetyssä ikkunassa.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentileinterpolationtype_tag0@@": "<p>Määrittää käytettävän interpolointimenetelmän, kun prosenttipistearvo sijaitsee kahden syötesoluarvon välissä.</p><ul><li><strong>Tunnista automaattisesti</strong> – jos lähtöaineiston rasterien tyyppi on kokonaislukupikseli, käytetään <strong>Lähin</strong>-menetelmää. Jos lähtöaineiston rasterin tyyppi on kelluva pikseli, käytetään <strong>Lineaarinen</strong>-menetelmää. Tämä on oletusarvo.</li><li><strong>Lähin</strong> – käytössä on prosenttipisteen lähin saatavilla oleva arvo. Tässä tapauksessa tulosaineiston pikselityyppi on sama kuin lähtöarvorasterin pikselityyppi.</li><li><strong>Lineaarinen</strong> – käytössä on kahden prosenttipistettä ympäröivän arvon painotettu keskiarvo. Tässä tapauksessa tulosaineiston pikselin tyyppi on liukuluku.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentilevalue_tag0@@": "<p>Laskettava prosenttipiste, kun tilastotyypiksi on valittu <strong>Prosenttipiste</strong>. Oletusarvo on 90, jos kyseessä on 90. prosenttipiste.</p><p>Arvo voi vaihdella välillä 0–100. 0. prosenttipiste vastaa periaatteessa Minimi-tilastotietoa, ja 100. prosenttipiste Maksimi-tilastotietoa sillä poikkeuksella, että tuloksena on liukuluku. Arvo 50 tuottaa saman tuloksen kuin Mediaani-tilastotieto.</p>",
	"@@Dimensional-Moving-Statistics_statisticstype_tag0@@": "<p>Määrittää laskettavan tilastotyypin.</p><p></p><ul><li><strong>Mediaani</strong> – Laskee määritetyn ikkunan solujen mediaanin (keskusluvun). Tämä on oletusarvo.</li><li><strong>Ympyrän keskiarvo</strong> – laskee määritetyn ikkunan solujen ympyrän keskiarvon. Kun tämä tilastotyyppi valitaan, <strong>Ympyränmuotoinen rivitysarvo</strong> -parametri ilmestyy näkyviin.</li><li><strong>Enemmistö</strong> – tunnistaa määritetyn ikkunan solujen enemmistön (useimmin esiintyvän arvon.</li><li><strong>Enimmäis</strong> – tunnistaa määritetyn ikkunan solujen enimmäisarvon (suurimman arvon).</li><li><strong>Mediaani</strong> – tunnistaa naapuruston solujen mediaanin.</li><li><strong>Vähimmäis</strong> – tunnistaa naapuruston solujen vähimmäisarvon (pienimmän arvon).</li><li><strong>Prosenttipiste</strong> – laskee naapuruston solujen prosenttipisteen. Kun tämä tilastotyyppi valitaan <strong>Prosenttiarvo</strong>- ja<strong>Prosenttipisteen interpolaatiotyyppi</strong> -parametrit ilmestyvät saataville. Käytä näitä uusia parametreja laskettavan prosenttipisteen määrittämiseen ja käytettävän interpolaatiotyypin valitsemiseen.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_dimension_tag0@@": "<p>Interpoloinnissa käytettävä ulottuvuus.</p><p>Tämä parametri vaaditaan, kun <strong>Ulottuvuuden määritelmä</strong> -parametrin arvona on <strong>Välin mukaan</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_dimensiondefinition_tag0@@": "<p>Määrittää menetelmän, jota käytetään lähtöaineiston moniulotteisen aineiston suodattamiseen ennen interpolointia.</p><ul><li><strong>Arvojen mukaan</strong> – ulottuvuus viipaloidaan käyttämällä ulottuvuusarvoa tai arvoluetteloa.</li><li><strong>Välin mukaan</strong> – ulottuvuus viipaloidaan käyttämällä vaihteluväliä tai vaihteluväliluetteloa.</li><li><strong>Kohderasterin mukaan</strong> – ulottuvuus viipaloidaan käyttämällä määrätyn kohdeaineiston moniulotteista rasteria.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_endofinterval_tag0@@": "<p>Koko aineistoryhmän iteroimiseen käytettävän välin loppupiste.</p><p>Tämä parametri on pakollinen, kun <strong>Ulottuvuuden määritelmä</strong> -parametrin arvoksi on määritetty <strong>Välin mukaan</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_ignorenodata_tag0@@": "<p>Määrittää, ohitetaanko NoData-arvot analyysissa.</p><ul><li>Ei valittu – Analyysin tuloksena on NoData, jos viereisissä viipaleissa on NoData-arvoja. Tämä on oletusarvo.</li><li>Valittu – Analyysi käyttää vain viipaleita, joissa on kelvollisia pikseleitä, ja ohittaa NoData-arvoja sisältävät viipaleet.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_interpolationmethod_tag0@@": "<p>Määrittää rasterin interpoloimisessa käytettävän menetelmän.</p><ul><li><strong>Lineaarinen</strong> – tulosaineisto interpoloidaan lineaarisesti käyttämällä viereisiä viipaleita. Tämä on oletusarvo.</li><li><strong>Lähin naapuri</strong> – tulosaineisto käyttää lähintä viereistä viipaletta.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_raster_tag0@@": "<p>Lähtöaineiston moniulotteinen rasteri.</p>",
	"@@Interpolate-Raster-By-Dimension_startofinterval_tag0@@": "<p>Koko aineistoryhmän iteroimiseen käytettävän välin alkupiste.</p><p>Tämä parametri on pakollinen, kun<strong>Ulottuvuuden määritelmä</strong> -parametrin arvoksi on määritetty <strong>Välin mukaan</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_step_tag0@@": "<p>Aineiston interpoloinnissa käytettävä ulottuuus.</p><p>Tämä parametri vaaditaan, kun<strong>Ulottuvuuden määritelmä</strong> -parametrin arvona on<strong>Välin mukaan</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_targetraster_tag0@@": "<p>Ulottuvuuden määritelmässä määritetty kohdeaineiston rasteri.</p><p>Tämä parametri on pakollinen, kun <strong>Ulottuvuuden määritelmä</strong> -parametrin arvoksi on määritetty <strong>Kohderasterin mukaan</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_unit_tag0@@": "<p>Välin yksikkö.</p><p>Tämä parametri on pakollinen, kun <strong>Ulottuvuuden määritelmä</strong> -parametrin arvoksi on määritetty <strong>Välin mukaan</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_values_tag0@@": "<p>Ulottuvuusarvot, joita käytetään lähtöaineiston moniulotteisen aineiston suodattamiseen analyysia varten.</p><p>Tämä parametri on pakollinen, kun<strong>Ulottuvuuden määritelmä</strong> -parametrin arvoksi on määritetty <strong>Arvon mukaan</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_variables_tag0@@": "<p>Muuttujat, jotka koostetaan ulottuvuuden määritelmän mukaan.</p>",
	"@@Terrain-Flatten_calibrationtype_tag0@@": "<p>Määrittää, onko tulosaineisto maastoa, joka on lististetty käyttämällä<strong>Sigma-nollaa</strong>tai<strong>Gamma-nollaa</strong>.</p><ul><li><strong>Gamma-nolla</strong>– Beeta-nolla-takaisinsironta normalisoidaan käyttämällä lentokoneen yksikköaluetta, joka sijaitsee paikallisesti tangentissa suhteessa digitaaliseen korkeusmalliin (DEM) ja joka tunnetaan yleisesti nimellä paikallisen tapauksen kulma. Tämä on oletusarvo.</li><li><strong>Sigma-nolla</strong>– Beeta-nolla-takaisinsironta normalisoidaan käyttämällä digitaalista korkeusmallia (DEM) alueen laskemista varten.</li></ul>",
	"@@Terrain-Flatten_dem_tag0@@": "<p>Lähtöaineiston DEM.</p><p>Digitaalista korkeusmallia (DEM) käytetään paikallisen valaistun alueen arviointiin.</p>",
	"@@Terrain-Flatten_geoid_tag0@@": "<p>Määrittää, muunnetaanko lähtöaineiston digitaalisen korkeusmallin (DEM) pystysuuntainen viitejärjestelmä ellipsoidikorkeudeksi. Useimmat korkeusaineistosarjat viittaavat merenpinnan ortometriseen korkeuteen, joten näissä tapauksissa tarvitaan korjausta, jotta muunto ellipsoidikorkeuteen voidaan tehdä.</p><ul><li>Valittu – Geoidikorjaus tehdään, jotta ortometrinen korkeus voidaan muuntaa ellipsoidikorkeudeksi (perustuu EGM96-geoidiin). Tämä on oletusarvo.</li><li>Ei valittu – Geoidikorjausta ei tehdä. Käytä tätä asetusta vain, jos DEM on ilmaistu ellipsoidikorkeudessa.</li></ul>",
	"@@Terrain-Flatten_raster_tag0@@": "<p>Lähtöaineiston tutka-aineisto.</p><p>Tämä rasteri on ensin kalibroitava radiometrisesti beeta-nollaan.</p>",
	"@@Create-Color-Composite_blueexpression_tag0@@": "<p>Kolmannelle kaistalle määritetty laskelma.</p><p>Kaistan nimi, kaistan tunnus tai kaistoja käyttävä algebralauseke.</p><p>Tuetut operaattorit ovat yksioperandisia: plus (+), miinus (-), kertaa (*) ja jako (/).</p>",
	"@@Create-Color-Composite_greenexpression_tag0@@": "<p>Toiselle kaistalle määritetty laskelma.</p><p>Kaistan nimi, kaistan tunnus tai kaistoja käyttävä algebralauseke.</p><p>Tuetut operaattorit ovat yksioperandisia: plus (+), miinus (-), kertaa (*) ja jako (/).</p>",
	"@@Create-Color-Composite_inputraster_tag0@@": "<p>Lähtöaineiston monikaistainen rasteriaineisto.</p>",
	"@@Create-Color-Composite_method_tag0@@": "<p>Määrittää menetelmän, jota käytetään kaistojen purkamiseen.</p><ul><li>Kaistojen nimet – Käytetään kaistan nimeä, joka edustaa aallonpituuden väliä sähkömagneettisessa spektrissä (kuten punainen, lähi-infrapuna ja lämpöinfrapuna) tai polarisaatiossa (kuten VH, VV, HH tai HV). Tämä on oletusarvo.</li><li>Kaistan tunnukset – Käytetään kaistan numeroa (kuten B1, B2 tai B3).</li></ul>",
	"@@Create-Color-Composite_redexpression_tag0@@": "<p>Ensimmäiselle kaistalle määritetty laskelma.</p><p>Kaistan nimi, kaistan tunnus tai kaistoja käyttävä algebralauseke.</p><p>Tuetut operaattorit ovat yksioperandisia: plus (+), miinus (-), kertaa (*) ja jako (/).</p>",
	"@@Surface-Parameters_localsurfacetype_tag0@@": "<p>Valitse sen pintatoiminnon tyyppi, joka sovitetaan kohdesolun ympärille.</p><ul><li>Kvadraattinen – Kvadraattinen pintatoiminto sovitetaan naapurisoluihin. Tämä on oletustyyppi.</li><li>Bikvadraattinen – Bikvadraattinen pintatoiminto sovitetaan naapurisoluihin.</li></ul>",
	"@@Surface-Parameters_neighborhooddistance_tag0@@": "<p>Tulosaineisto lasketaan tämän etäisyyden kautta kohdesolun keskipisteestä. Se määrittää naapuruston koon. Oletusarvo on tulosaineiston rasterin solukoko, jolloin tuloksena on 3 x 3 -naapurusto.</p>",
	"@@Surface-Parameters_outputslopemeasurement_tag0@@": "<p>Mittausyksiköt (asteet tai prosentit), joita käytetään tulosaineiston kalvetuussuuntarasterissa. Tämä parametri on aktiivinen vain, jos <strong>Parametrin tyyppi</strong> on <strong>Kaltevuus</strong>.</p><ul><li>Aste – Kaltevuus lasketaan asteina. Tämä on oletusarvo.</li><li>Prosenttinousu – Kaltevuus lasketaan prosenttinousuna eli prosentuaalisena kaltevuutena.</li></ul>",
	"@@Surface-Parameters_parametertype_tag0@@": "<p>Määrittää tulosaineiston pintaparametrin tyypin, joka lasketaan.</p><ul><li>Kaltevuus – Korkeusmuutoksen aste lasketaan. Tämä on oletus.</li><li>Kaltevuus – Kunkin solun muutoksen enimmäisasteen laskeva suunta lasketaan.</li><li>Keskikaarevuus – Pinnan kokonaiskaarevuus mitataan. Se lasketaan vähimmäis- ja enimmäiskaarevuuden keskiarvona. Tämä kaarevuus kuvaa pinnan luontaista kuperuutta tai koveruutta riippumatta suunnan tai painovoiman vaikutuksesta.</li><li>Tangentin suuntainen kaarevuus (normaali arvokäyrä) – Geometrinen normaali kaarevuus kohtisuorassa kaltevuusviivaan nähden. Korkeuskäyrän tangentti mitataan. Tätä kaarevuutta käytetään tavallisesti kuvaamaan virtauksen konvergenssia ja divergenssia koko pinnalla.</li><li>Profiilin (normaali kaltevuuslinja) kaarevuus – Geometrinen normaali kaarevuus kalvetuusviivalla mitataan. Tätä kaarevuutta käytetään tavallisesti kuvaamaan virtauksen nopeutumista ja hidastumista pintaan nähden alaspäin.</li><li>Suunniteltu (ennakoitu arvokäyrä) kaarevuus – Korkeuskäyrien kaarevuus mitataan.</li><li>Arvokäyrän geodeettinen kierto – Kaltevuuskulman muutoksen aste korkeuskäyrillä mitataan.</li><li>Gaussin kaarevuus – Pinnan kokonaiskaarevuus mitataan. Se lasketaan vähimmäis- ja enimmäiskaarevuuden tuloksena.</li><li>Casoratin kaarevuus – Pinnan yleinen kaarevuus mitataan. Se voi olla nolla tai mikä tahansa muu positiivinen luku.</li></ul>",
	"@@Surface-Parameters_projectgeodesicazimuths_tag0@@": "<p>Määrittää, projisoidaanko geodeettiset atsimuutit, jotta tulosaineiston koordinaatistotiedon aiheuttama kulmavääristymä voidaan korjata. Tämä parametri on aktiivisena vain, jos <strong>Parametrin tyyppi</strong> on <strong>Kaltevuussuunta</strong>.</p><ul><li>Ei valittu – Geodeettisia atsimuutteja ei projisoida. Tämä on oletus.</li><li>Valittu – Geodeettiset atsimuutit projisoidaan.</li></ul>",
	"@@Surface-Parameters_raster_tag0@@": "<p>Lähtöaineiston pintarasteri. Se voi olla kokonaisluku- tai liukulukurasteri.</p>",
	"@@Surface-Parameters_useadaptiveneighborhood_tag0@@": "<p>Määrittää, vaihteleeko naapuruston etäisyys maiseman muutosten perusteella (mukautuva). Naapuruston etäisyys määrittää enimmäisetäisyyden. Vähimmäisetäisyys on lähtöaineiston rasterin solukoko.</p><ul><li>Ei valittu – Yksittäistä (kiinteää) naapuruston etäisyyttä käytetään kaikissa sijainneissa. Tämä on oletus.</li><li>Valittu – Mukautuvaa naapuruston etäisyyttä käytetään kaikissa sijainneissa.</li></ul>",
	"@@Surface-Parameters_useequatorialaspect_tag0@@": "<p>Määrittää, mitataanko kaltevuussuunta päiväntasaajalla vai pohjoisnavalla olevasta pisteestä. Tämä parametri on aktiivinen vain, jos <strong>Parametrin tyyppi</strong> on <strong>Kaltevuussuunta</strong>.</p><ul><li>Ei valittu – Kaltevuussuunta mitataan pohjoisnavasta. Tämä on oletus.</li><li>Valittu – Kaltevuussuunta mitataan päiväntasaajalla olevasta pisteestä.</li></ul>",
	"@@Surface-Parameters_zunit_tag0@@": "<p>Pystysuuntaisten z-arvojen lineaarinen yksikkö.</p><p>Tämän yksikön määrittää pystykoordinaattijärjestelmä, jos se on olemassa. Jos pystykoordinaattijärjestelmää ei ole, z-yksikkö tulee määrittää yksikköluettelosta oikean geodeettisen laskennan varmistamiseksi.</p><ul><li>Tuuma – Lineaarinen yksikkö on tuuma.</li><li>Jalka – Lineaarinen yksikkö on jalka.</li><li>Jaardi – Lineaarinen yksikkö on jaardi.</li><li>Yhdysvaltain maili – Lineaarinen yksikkö on Yhdysvaltain maili.</li><li>Merimaili – Lineaarinen yksikkö on merimail.</li><li>Millimetri – Lineaarinen yksikkö on millimetri.</li><li>Senttimetri – Lineaarinen yksikkö on senttimetri.</li><li>Metri – Lineaarinen yksikkö on metri. Tämä on oletus.</li><li>Kilometri – Lineaarinen yksikkö on kilometri.</li><li>Desimetri – Lineaarinen yksikkö on desimetri.</li></ul>",
	"@@Surface-Parameters_analysismask_tag0@@": "<p>Rasteri, joka määrittää analyysin tapahtumasijainnit.</p><p>Rasteri voi olla kokonaisluku- tai liukulukutyyppinen.</p><p>Kaikki solut, joissa on kelvollinen arvo, mukaan lukien nolla, muodostavat maskin. Solut, joiden arvona on NoData maskin lähtöaineistossa, ovat NoData-soluja tulosaineistossa.</p>",
	"@@Geometric-Median_cellsizetype_tag0@@": "<p>Valitse tulosaineiston rasterissa käytettävä solukoko. Jos kaikki lähtöaineiston solukoot ovat samat, kaikilla vaihtoehdoilla saadaan sama lopputulos.</p><ul><li>Ensimmäinen – Käytä lähtöaineiston rastereiden ensimmäistä solukokoa.</li><li>Pienin – Käytä lähtöaineiston rastereiden pienintä solukokoa.</li><li>Suurin – Käytä lähtöaineiston rastereiden suurinta solukokoa. Tämä on oletusarvo.</li><li>Keskiarvo – Käytä lähtöaineiston rastereiden keskimääräistä solukokoa.</li><li>Viimeinen – Käytä lähtöaineiston rastereiden viimeistä solukokoa.</li></ul>",
	"@@Geometric-Median_epsilon_tag0@@": "<p>Määrittää konvergenssiarvon kahden peräkkäisen iteraation välillä. Kun epsilon on pienempi tai yhtä suuri kuin määritetty arvo, iteraatio pysähtyy ja käyttöön otetaan viimeisen iteraation tulos.</p>",
	"@@Geometric-Median_extenttype_tag0@@": "<p>Valitse tulosrasterissa käytettävä laajuus:</p><ul><li><p>Ensimmäinen – Käytä lähtöaineiston ensimmäisen rasterin laajuutta käsittelylaajuuden määrittämiseen.</p></li><li>Leikkaus – Käytä päällekkäisten pikselien laajuutta käsittelylaajuuden määrittämiseen. Tämä on oletusarvo.</li><li>Liitos – Käytä kaikkien rastereiden laajuutta käsittelylaajuuden määrittämiseen.</li><li>Viimeinen – Käytä lähtöaineiston viimeisen rasterin laajuutta käsittelylaajuuden määrittämiseen.</li></ul>",
	"@@Geometric-Median_maximumnumberofiterations_tag0@@": "<p>Määrittää suoritettavien iteraatioiden ensimmäismäärän. Laskenta päättyy, kun tämä arvo saavutetaan, <strong>Epsilon</strong>-asetuksesta huolimatta.</p>",
	"@@Geometric-Median_rasters_tag0@@": "<p>Lähtöaineiston monikaistarasterit.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster1_tag0@@": "<p>Lähtöaineiston rasteri, joka edustaa kumulatiivisen kustannuksen etäisyyttä ensimmäisestä lähteestä.</p><p>Sen tulisi olla kumuloituvan kustannuksen etäisyyden tulosaineisto<strong>Etäisyyskumulaatio</strong>- tai <strong>Etäisyyden allokointi</strong> -funktiosta.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster2_tag0@@": "<p>Lähtöaineiston rasteri, joka edustaa kumulatiivisen kustannuksen etäisyyttä toisesta lähteestä.</p><p>Sen tulisi olla kumuloituvan kustannuksen etäisyyden tulosaineisto <strong>Etäisyyskumulaatio</strong>- tai <strong>Etäisyyden allokointi</strong> -funktiosta.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster1_tag0@@": "<p>Lähtöaineiston paluusuuntarasteri ensimmäisestä lähteestä.</p><p>Tämä on rasteriaineistoryhmä, joka tunnistaa seuraavan solun suunnan pienimmän kustannuksen reittiä pitkin takaisin ensimmäiseen lähteeseen. Tämä on tulosaineisto<strong>Etäisyyskumulaatio</strong>- tai <strong>Etäisyyden allokointi</strong> -funktiosta.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster2_tag0@@": "<p>Lähtöaineiston paluusuuntarasteri toisesta lähteestä.</p><p>Tämä on rasteriaineistoryhmä, joka tunnistaa seuraavan solun suunnan pienimmän kustannuksen reittiä pitkin takaisin ensimmäiseen lähteeseen. Tämä on tulosaineisto<strong>Etäisyyskumulaatio</strong>- tai <strong>Etäisyyden allokointi</strong> -funktiosta.</p>",
	"@@Least-Cost-Corridor_threshold_tag0@@": "<p>Prosentti tai kumulatiivisen kustannuksen raja-arvo, joka määrittää, sisällytetäänkö tietty solu tulosaineiston käytävärasteriin.</p><p>Kun<strong>Raja-arvomenetelmä</strong>-parametrin asetus on<strong>Pienimmän kustannuksen prosenttiosuus</strong>, määritetty arvo ilmaisee käytettävää prosentuaalista kasvua yhteenlaskettujen kumulatiivisen kustannuksen etäisyysrasterien vähimmäisarvosta. Kun<strong>Raja-arvomenetelmä</strong>-parametrin asetus on<strong>Kumulatiivinen kustannus</strong>, arvo ilmaisee soluja, joiden yhteenlaskettu kumulatiivinen kustannus on yhtä suuri tai pienempi kuin käytävään sisällytettävä arvo.</p><p>Tämä parametri on käytössä vain, jos<strong>Raja-arvomenetelmä</strong>-parametrin asetus on<strong>Pienimmän kustannuksen prosenttiosuus</strong> tai <strong>Kumulatiivinen kustannus</strong>.</p>",
	"@@Least-Cost-Corridor_thresholdmethod_tag0@@": "<p>Määrittää raja-arvon määritystavan.</p><p></p><ul><li><strong>Ei raja-arvoa</strong> – raja-arvoa ei käytetä ja tuloksena saatava käytävä peittää lähtöaineiston rastereiden koko laajuuden. Tämä on oletusarvo.</li><li><strong>Pienimmän kustannuksen prosenttiosuus</strong> – raja-arvo määritetään prosentuaalisena osuutena yhteenlaskettujen kumulatiivisen kustannuksen etäisyysrastereiden vähimmäisarvosta.</li><li><strong>Kumulatiivinen kustannus</strong> – raja-arvo määritetään kumulatiivisen kustannuksen etäisyysyksiköissä.</li></ul>"
};
const helpTexts_fi = {
	rfxArgsHelpTexts: rfxArgsHelpTexts
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpTexts_fi);


//# sourceMappingURL=help-texts.fi-87f11009.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,