"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-items-s-762f96"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-items-summary_3.entry.js":
/*!*************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-items-summary_3.entry.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_items_summary: () => (/* binding */ ArcgisItemsSummary),
/* harmony export */   arcgis_items_summary_bucket: () => (/* binding */ ArcgisItemsSummaryBucket),
/* harmony export */   arcgis_items_summary_popover: () => (/* binding */ ArcgisItemsSummaryPopover)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


const arcgisItemsSummaryCss = ".summary-container{display:flex}.summary-icon{padding-inline-end:0.5rem}.disabled{cursor:default;-webkit-user-select:none;-moz-user-select:none;user-select:none;pointer-events:none;opacity:var(--calcite-opacity-disabled)}::slotted([slot=title]){font-weight:500}::slotted([slot=actions]){margin-top:0.75rem}";

const ArcgisItemsSummary = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.icon = undefined;
        this.disabled = false;
    }
    render() {
        const { icon, disabled } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "summary-container" }, !!icon && ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: {
                "summary-icon": true,
                disabled
            }, scale: "l", icon: icon })), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "summary-content" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `${this.disabled && "disabled"}` }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "title" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "description" }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "link" })), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: "actions" }))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisItemsSummary.style = arcgisItemsSummaryCss;

const arcgisItemsSummaryBucketCss = ":host{padding-inline-start:0.5rem}";

const ArcgisItemsSummaryBucket = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.arcgisDeleteItemsSummaryItemClick = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "arcgisDeleteItemsSummaryItemClick", 7);
        this.renderSingleItemLink = () => {
            const { item } = this.singleItem;
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-link", { onClick: () => {
                    /** TODO: Fire an event, or link to item details? Not all consumers may want to launch item details */
                } }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-item-type", { showText: false, item: item }), " ", item.title));
        };
        this.popoverId = undefined;
        this.label = undefined;
        this.summaryGroups = undefined;
    }
    async componentWillLoad() {
        var _a;
        this.singleItem =
            (_a = (this.summaryGroups.length === 1 &&
                this.summaryGroups[0].items.length === 1 &&
                this.summaryGroups[0].items[0])) !== null && _a !== void 0 ? _a : null;
    }
    render() {
        const { popoverId, label } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, this.singleItem ? (this.renderSingleItemLink()) : ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-items-summary-popover", { label: label, popoverId: popoverId, summaryGroups: this.summaryGroups }))));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisItemsSummaryBucket.style = arcgisItemsSummaryBucketCss;

const arcgisItemsSummaryPopoverCss = ".popover{max-height:250px;width:300px;max-width:100%;overflow:auto}.popover__item-type{padding-inline-start:1rem}";

const ArcgisItemsSummaryPopover = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.mapSummaryGroupsToList = () => {
            const renderList = (group) => ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-list", null, group.items.map((bucketItem) => {
                const { item } = bucketItem;
                const id = item.id;
                return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-list-item", { label: item.title, value: item.title, key: id, onCalciteListItemSelect: () => {
                        /** TODO: Fire an event, or link to item details? Not all consumers may want to launch item details */
                    } }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-item-type", { slot: "content-start", showText: false, item: item, class: "popover__item-type" })));
            })));
            const groups = this.summaryGroups.map((group) => {
                return group.heading ? ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-list-item-group", { heading: group.heading }, renderList(group))) : (renderList(group));
            });
            return groups;
        };
        this.popoverId = undefined;
        this.label = undefined;
        this.summaryGroups = undefined;
        this.disableLinks = undefined;
        this.totalItems = undefined;
    }
    async componentWillLoad() {
        this.totalItems = this.summaryGroups.reduce((total, summary) => total + summary.items.length, 0);
    }
    render() {
        const { popoverId, label, totalItems, mapSummaryGroupsToList } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-link", { id: popoverId }, totalItems), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-popover", { class: "popover", label: label, referenceElement: popoverId, placement: "bottom", overlayPositioning: "fixed", autoClose: true }, mapSummaryGroupsToList())));
    }
    get el() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisItemsSummaryPopover.style = arcgisItemsSummaryPopoverCss;



//# sourceMappingURL=arcgis-items-summary_3.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,