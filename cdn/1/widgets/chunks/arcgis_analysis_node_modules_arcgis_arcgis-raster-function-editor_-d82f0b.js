"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-d82f0b"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.sr-0786c170.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.sr-0786c170.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   rfxArgsHelpTexts: () => (/* binding */ rfxArgsHelpTexts)
/* harmony export */ });
const rfxArgsHelpTexts = {
	"@@Abs_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Abs_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Abs_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Abs_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Abs_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Abs_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Abs_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Abs_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Abs_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Abs_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Abs_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Abs_Raster_tag0@@": "Ulazni raster za koji se proračunavaju apsolutne vrednosti.",
	"@@ACos_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@ACos_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@ACos_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@ACos_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@ACos_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@ACos_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@ACos_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@ACos_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@ACos_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@ACos_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@ACos_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@ACos_Raster_tag0@@": "Unos za koji treba izračunati inverzne vrednosti za kosinus.",
	"@@ACosH_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@ACosH_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@ACosH_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@ACosH_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@ACosH_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@ACosH_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@ACosH_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@ACosH_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@ACosH_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@ACosH_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@ACosH_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@ACosH_Raster_tag0@@": "Izlaz za koji se računaju inverzne hiperbolične vrednosti kosinusa.",
	"@@Apparent-Reflectance_Albedo_tag0@@": "Rezultati za funkciju očigledne refleksije mogu se izraziti kao albedo, što predstavlja procenat dostupne energije reflektovane na površinu planete. Albedo podatke koriste aučnici za kompleksno modelovanje i tehničke aplikacije za daljinske senzore.",
	"@@Apparent-Reflectance_Albedo_tag1@@": "Neobeleženo--Funkcija daje očigledne vrednosti refleksije. Ovo je podrazumevano.",
	"@@Apparent-Reflectance_Albedo_tag2@@": "Obeleženo--Funkcija daje 32-bitne vrednosti sa pokretnim zarezom, koje se najčešće koriste u opsegu od 0,0 do 1,0. Skraćivanje podataka se ne obavlja ako se izabere ova opcija.",
	"@@Apparent-Reflectance_Albedo_tag3@@": "Pošto je tip izlaznih podataka za albedo pokretni zarez, morate eksplicitno da postavite željeni <strong>Tip odlaznog piksela</strong> na 32-bitni pokretni zarez ili 64-bitni dupli. Parametar <strong>Tip odlaznog piksela</strong> nalazi se u kartici <strong>Opšte</strong> u funkciji rastera <strong>Očigledna reflektansa</strong>. Ako <strong>TIp odlaznog piksela</strong> nije ispravno podešen za opciju <strong>Albedo</strong>, dobijene vrednosti biće pogrešne i imaće vrednost 0.",
	"@@Apparent-Reflectance_Offset_tag0@@": "Vaša skalirana albedo vrednost može da opcionalno ima vrednost za razmak:",
	"@@Apparent-Reflectance_Offset_tag1@@": "Za 16-bitne nedodeljene tipove podataka, podrazumevani razmak za skalu je 5.000.",
	"@@Apparent-Reflectance_Offset_tag2@@": "Za 8-bitne nedodeljene tipove podataka, podrazumevani razmak za skalu je 0.",
	"@@Apparent-Reflectance_Offset_tag3@@": "Kada je izlaz albedo ne primenjuje se skaliranje.",
	"@@Apparent-Reflectance_Radiance-Gains-and-Bias-Values-per-Band_tag0@@": "Možete ručno podesiti ili urediti ovu vrednost za svaki opseg. Odgovarajuće informacije mogu se pročitati iz meta podataka proizvoda ulaznog rastera.",
	"@@Apparent-Reflectance_Raster_tag0@@": "Proizvod rastera na koji se primenjuje očigledna refleksija.",
	"@@Apparent-Reflectance_Scale-Factor_tag0@@": "Vaša vrednost za očiglednu refleksiju može se izraziti kao integral. Faktor skaliranja množi se sa vrednošću za albedo da bi se konvertovale sve vrednosti za pokretne zareze u integralne vrednosti.",
	"@@Apparent-Reflectance_Scale-Factor_tag1@@": "Ako je faktor skaliranja ${0} ili nije naveden, podrazumevano skaliranje biće primenjeno u zavisnosti od tipa piksela ulaznih podataka:",
	"@@Apparent-Reflectance_Scale-Factor_tag2@@": "Za 16-bitne nedodeljene tipove podataka, podrazumevani faktor za skalu je 50.000.",
	"@@Apparent-Reflectance_Scale-Factor_tag3@@": "Za 8-bitne nedodeljene tipove podataka, podrazumevani faktor za skalu je 255.",
	"@@Apparent-Reflectance_Scale-Factor_tag4@@": "Faktor za skaliranje se uvek primenjuje kada je izlaz očigledna refleksija. Kada je izlaz albedo ne primenjuje se skaliranje.",
	"@@Apparent-Reflectance_Sun-Elevation_tag0@@": "Ovo je vrednost za visinu sunca, izražena u stepenima. Ovo će se popuniti od strane sistema ako odgovarajuće informacije mogu da se pročitaju iz metapodataka. Možete ručno podesiti ili urediti ovu vrednost.",
	"@@ArgStatistics_Max_tag0@@": "Maksimalna vrednost koju možete da postavite je najviša vrednost jednaka ili manja od završetka trajanja.",
	"@@ArgStatistics_Max_tag1@@": "Ovaj ulaz je samo dostupan kada je metod postavljen kao Trajanje.",
	"@@ArgStatistics_Method_tag0@@": "Izaberite statistički metod za izračunavanje:",
	"@@ArgStatistics_Method_tag1@@": "Arg maks--Argument maksimuma, koji daje ${Band index} za koji dati piksel zadržava svoju minimalnu vrednost iz svih opsega. Svi opsezi iz svakog ulaznog rastera imaju dodeljen indeks inkrementalnog opsega zasnovan na 0, koji prvo poziva indeks ulaznog rastera, a zatim poziv relativnog opsega sa svakim ulaznim rasterom.",
	"@@ArgStatistics_Method_tag2@@": "Arg srednje--Argument srednje vrednosti, koji daje ${Band index} za koji dati piksel zadržava svoju srednju vrednost za sve vrednosti iz svih opsega.",
	"@@ArgStatistics_Method_tag3@@": "Arg min--Argument minimuma, koji daje ${Band index} za koji dati piksel zadržava svoju minimalnu vrednost iz svih opsega.",
	"@@ArgStatistics_Method_tag4@@": "Trajanje--Metod Trajanja pronalazi najduže uzastopne metode u nizu, gde svaki element ima vrednost koja je veća ili jednaka sa <strong>Min.</strong> i manja ili jednaka sa <strong>Maks.</strong>, a zatim vraća svoju dužinu.",
	"@@ArgStatistics_Min_tag0@@": "Minimalna vrednost koju možete da postavite je najniža vrednost jednaka ili veća od završetka trajanja.",
	"@@ArgStatistics_Min_tag1@@": "Ovaj ulaz je samo dostupan kada je metod postavljen kao Trajanje.",
	"@@ArgStatistics_Rasters_tag0@@": "Ulazni raster koji ćete koristiti za različite statističke metode.",
	"@@ArgStatistics_Undefined-Class_tag0@@": "Konstantni ulaz koji će biti vraćen kada nema definitivnog maksimuma, minimuma ili dobijanja srednje vrednosti. Najčešći scenario je kada se maksimalna ili minimalna vrednost desi jednom između vrednosti iz svih opsega. Podrazumevana vrednost za nedefinisanu konstantu je 100.",
	"@@ArgStatistics_Undefined-Class_tag1@@": "Nedefinisana klasa je samo primenljiva kada je metod <strong>ArgMax</strong>, <strong>ArgMin</strong>, ili <strong>ArgMedian</strong>.",
	"@@ArgStatistics_ignorenodata_tag0@@": "Označava da li se vrednosti NoData zanemaruju u statističkom proračunu.",
	"@@ArgStatistics_ignorenodata_tag1@@": "Označeno--Analiza će uključiti sve važeće piksele u ulaznim rasterima i zanemariti sve NoData piksele.",
	"@@ArgStatistics_ignorenodata_tag2@@": "Neoznačeno--Analiza će rezultirati sa NoData ako postoje vrednosti NoData za piksele u ulaznim rasterima. Ovo je podrazumevano.",
	"@@Arithmetic_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Arithmetic_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Arithmetic_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Arithmetic_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Arithmetic_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Arithmetic_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Arithmetic_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Arithmetic_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Arithmetic_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Arithmetic_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Arithmetic_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Arithmetic_Operation_tag0@@": "Aritmetička operacija koja će se izvesti između dva ulazna rastera.",
	"@@Arithmetic_Operation_tag1@@": "Opcije su sledeće:",
	"@@Arithmetic_Operation_tag2@@": "<strong>Deljenje</strong>--Prikazuje deljivi rezultat između odgovarajuće vrenodsti piksela za svaki raster.",
	"@@Arithmetic_Operation_tag4@@": "<strong>Minus</strong>--Prikazuje razliku između odgovarajuće vrednosti piksela za svaki raster. Ovaj se može koristiti za proračun detekcije promene.",
	"@@Arithmetic_Operation_tag6@@": "<strong>Režim</strong>--Prikazuje vrednost piksela za sve preklapajuće piksele koji se najviše pojavljuju. Na primer, ako ima šest opsega u rasteru, biće šest preklopljenih piksela. Za vrednosti 4, 5, 6, 4, 7, 9, vrednost režima je 4.",
	"@@Arithmetic_Operation_tag8@@": "<strong>Množenje</strong>--Prikazuje proizvod odgovarajućih vrednosti piksela za svaki raster. Ovo se može koristiti za neke funkcije troškova.",
	"@@Arithmetic_Operation_tag10@@": "<strong>Plus</strong>--Prikazuje zbir svih odgovarajućih piksela za svaki raster.",
	"@@Arithmetic_Operation_tag12@@": "<strong>Snaga</strong>--Pokazuje proizvod odgovarajućih vrednosti piksela podignutih do snage ulaznog rastera ili skalara.",
	"@@Arithmetic_Raster_tag0@@": "Set podataka prvog ulaznog rastera.",
	"@@Arithmetic_Raster2_tag0@@": "Set podataka drugog ulaznog rastera.",
	"@@ASin_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@ASin_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@ASin_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@ASin_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@ASin_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@ASin_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@ASin_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@ASin_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@ASin_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@ASin_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@ASin_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@ASin_Raster_tag0@@": "Ulaz za koji se računaju inverzne hiperbolične vrednosti kosinusa.",
	"@@ASinH_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@ASinH_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@ASinH_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@ASinH_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@ASinH_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@ASinH_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@ASinH_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@ASinH_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@ASinH_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@ASinH_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@ASinH_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@ASinH_Raster_tag0@@": "Ulaz za koji se računaju inverzne hiperbolične vrednosti sinusa.",
	"@@Aspect_Raster_tag0@@": "Ulazni DEM koristi se za dobijanje aspekta seta podataka.",
	"@@Aspect-Slope_Raster_tag0@@": "Ulazni DEM.",
	"@@Aspect-Slope_Z-Factor_tag0@@": "Skalarni faktor za skaliranje koji se koristi za konvertovanje vrednosti elevacije u dve svrhe:",
	"@@Aspect-Slope_Z-Factor_tag1@@": "Konvertovanje jedinica elevacije (kao što su metri ili stope) u jedinice za horizontalne koordinate sloja, koje mogu biti stope, metri ili stepeni",
	"@@Aspect-Slope_Z-Factor_tag2@@": "Dodavanje vertikalnog preuveličavanja radi vizuelnog efekta",
	"@@ATan_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@ATan_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@ATan_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@ATan_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@ATan_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@ATan_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@ATan_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@ATan_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@ATan_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@ATan_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@ATan_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@ATan_Raster_tag0@@": "Ulaz za koji se računaju inverzne hiperbolične vrednosti tangensa.",
	"@@ATan2_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@ATan2_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@ATan2_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@ATan2_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@ATan2_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@ATan2_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@ATan2_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@ATan2_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@ATan2_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@ATan2_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@ATan2_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@ATan2_Raster_tag0@@": "Ulaz koji navodi numeratora, ili y vrednost, za upotrebu prilikom kalkulacije inverznog tangensa.",
	"@@ATan2_Raster2_tag0@@": "Ulaz koji navodi denumeratora, ili x vrednost, za upotrebu prilikom kalkulacije inverznog tangensa.",
	"@@ATanH_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@ATanH_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@ATanH_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@ATanH_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@ATanH_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@ATanH_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@ATanH_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@ATanH_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@ATanH_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@ATanH_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@ATanH_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@ATanH_Raster_tag0@@": "Ulaz za koji se računaju inverzne hiperbolične vrednosti tangensa.",
	"@@Attribute-Table_Raster_tag0@@": "Ulazni raster.",
	"@@Attribute-Table_Table-Type_tag0@@": "Tabela za unos atributa može da se popuni pomoću <strong>Ručnog</strong> tipa gde dodeljujete ime klase i boju za svaku vrednost , ili možete da date referencu za svaku tabelu koja dolazi iz ${.dbf} datoteke.",
	"@@Band-Arithmetic_Band-Indexes_tag0@@": "Definišite aritmetičku formulu za svoj opseg ako izaberete <strong>Definisano od strane korisnika</strong> za vaš <strong>Metod</strong>.",
	"@@Band-Arithmetic_Band-Indexes_tag5@@": "Ako izaberete predefinisani metod za vaš <strong>Metod</strong>, definišite pravilne opsege za vaš set podataka za ulazni raster koji odgovara indeksu.",
	"@@Band-Arithmetic_Method_tag0@@": "Tip opsega aritmetičkog algoritma koji želite da postavite. Možete a definišete svoj prilagođeni algoritam ili da izaberete predefinisani indeks.",
	"@@Band-Arithmetic_Method_tag1@@": "<strong>BAI</strong>--Indeks izgorele oblasti",
	"@@Band-Arithmetic_Method_tag2@@": "<strong>CIg</strong>--Indeks hlorofila - Zeleno",
	"@@Band-Arithmetic_Method_tag3@@": "<strong>CIre</strong>--Indeks hlorofila - Crvena ivica",
	"@@Band-Arithmetic_Method_tag4@@": "<strong>Clay Minerals</strong>--Odnos minerala gline",
	"@@Band-Arithmetic_Method_tag5@@": "<strong>EVI</strong>--Poboljšan indeks vegetacije",
	"@@Band-Arithmetic_Method_tag6@@": "<strong>Ferrous Minerals</strong>--Odnos minerala gvožđa",
	"@@Band-Arithmetic_Method_tag7@@": "<strong>GEMI</strong>--Globalni indeks nadgledanja životne sredine",
	"@@Band-Arithmetic_Method_tag8@@": "<strong>GNDVI</strong>--Indeks normalizovane razlike vegetacije",
	"@@Band-Arithmetic_Method_tag9@@": "<strong>GVI (Landsat TM)</strong>--Indeks zelene vegetacije Landsat TM",
	"@@Band-Arithmetic_Method_tag10@@": "<strong>Iron Oxide</strong>--Odnos oksida gvožđa",
	"@@Band-Arithmetic_Method_tag11@@": "<strong>MNDWI</strong>--Modifikovan indeks normalizovane razlike vode",
	"@@Band-Arithmetic_Method_tag12@@": "<strong>MTVI2</strong>--Modifikovan indeks trouglaste vegetacije (druga iteracija)",
	"@@Band-Arithmetic_Method_tag13@@": "<strong>Modified SAVI</strong>--Modifikovan indeks vegetacije prilagođene zemljištu",
	"@@Band-Arithmetic_Method_tag14@@": "<strong>NBR</strong>--Indeks normalizovanog odnosa izgorelosti",
	"@@Band-Arithmetic_Method_tag15@@": "<strong>NDBI</strong>--Indeks normalizovane razlike izgrađenih područja",
	"@@Band-Arithmetic_Method_tag16@@": "<strong>NDMI</strong>--Indeks normalizovane ralike vlažnosti",
	"@@Band-Arithmetic_Method_tag17@@": "<strong>NDSI</strong>--Indeks normalizovane razlike pokrivenosti snegom",
	"@@Band-Arithmetic_Method_tag18@@": "<strong>NDVI</strong>--Indeks normalizovane razlike vegetacije",
	"@@Band-Arithmetic_Method_tag19@@": "<strong>NDVIre</strong>--Indeks normalizovane razlike vegetacije - Crvena ivica",
	"@@Band-Arithmetic_Method_tag20@@": "<strong>NDWI</strong>--Modifikovan indeks normalizovane razlike vode",
	"@@Band-Arithmetic_Method_tag21@@": "<strong>PVI</strong>--Indeks vertikalne vegetacije",
	"@@Band-Arithmetic_Method_tag22@@": "<strong>RTVICore</strong>--Indeks trouglaste vegetacije - Crvena ivica",
	"@@Band-Arithmetic_Method_tag23@@": "<strong>SAVI</strong>--Indeks vegetacije prilagođene zemljištu",
	"@@Band-Arithmetic_Method_tag24@@": "<strong>SR</strong>--Prost odnos",
	"@@Band-Arithmetic_Method_tag25@@": "<strong>SRre</strong>--Prost odnos - Crvena ivica",
	"@@Band-Arithmetic_Method_tag26@@": "<strong>Sultan's Formula</strong>--Sultanova formula",
	"@@Band-Arithmetic_Method_tag27@@": "<strong>Transformed SAVI</strong>--Transformisan indeks vegetacije prilagođene zemljištu",
	"@@Band-Arithmetic_Method_tag28@@": "<strong>User Defined</strong>--Omogućava vam da definišete aritmetički izraz prilagođenog opsega.",
	"@@Band-Arithmetic_Method_tag29@@": "<strong>VARI</strong>--Vidljivi atmosferski otporan indeks",
	"@@Band-Arithmetic_Method_tag30@@": "<strong>WNDWI</strong>--Ponderisani indeks normalizovane razlike vode",
	"@@Band-Arithmetic_Raster_tag0@@": "Ulazni raster.",
	"@@Binary-Thresholding_Raster_tag0@@": "Ulazni raster.",
	"@@Bitwise-And_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Bitwise-And_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Bitwise-And_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Bitwise-And_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Bitwise-And_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Bitwise-And_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Bitwise-And_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Bitwise-And_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Bitwise-And_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Bitwise-And_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Bitwise-And_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Bitwise-And_Raster_tag0@@": "Prvi unos za upotrebu u ovoj operaciji iz delova.",
	"@@Bitwise-And_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Bitwise-And_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj operaciji iz delova.",
	"@@Bitwise-And_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Bitwise-Left-Shift_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Bitwise-Left-Shift_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Bitwise-Left-Shift_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Bitwise-Left-Shift_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Bitwise-Left-Shift_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Bitwise-Left-Shift_Raster_tag0@@": "Unos na kom treba izvršiti operaciju.",
	"@@Bitwise-Left-Shift_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Bitwise-Left-Shift_Raster2_tag0@@": "Unos koji definiše broj pozicija za pomeranje delova.",
	"@@Bitwise-Left-Shift_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Bitwise-Not_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Bitwise-Not_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Bitwise-Not_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Bitwise-Not_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Bitwise-Not_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Bitwise-Not_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Bitwise-Not_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Bitwise-Not_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Bitwise-Not_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Bitwise-Not_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Bitwise-Not_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Bitwise-Not_Raster_tag0@@": "Ulazni raster na kom se obavlja Bitwise Not (komplementarna) operacija.",
	"@@Bitwise-Or_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Bitwise-Or_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Bitwise-Or_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Bitwise-Or_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Bitwise-Or_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Bitwise-Or_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Bitwise-Or_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Bitwise-Or_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Bitwise-Or_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Bitwise-Or_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Bitwise-Or_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Bitwise-Or_Raster_tag0@@": "Prvi unos za upotrebu u ovoj operaciji iz delova.",
	"@@Bitwise-Or_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Bitwise-Or_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj operaciji iz delova.",
	"@@Bitwise-Or_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Bitwise-Right-Shift_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Bitwise-Right-Shift_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Bitwise-Right-Shift_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Bitwise-Right-Shift_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Bitwise-Right-Shift_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Bitwise-Right-Shift_Raster_tag0@@": "Unos na kom treba izvršiti operaciju.",
	"@@Bitwise-Right-Shift_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Bitwise-Right-Shift_Raster2_tag0@@": "Unos koji definiše broj pozicija za pomeranje delova.",
	"@@Bitwise-Right-Shift_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Bitwise-Xor_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Bitwise-Xor_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Bitwise-Xor_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Bitwise-Xor_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Bitwise-Xor_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Bitwise-Xor_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Bitwise-Xor_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Bitwise-Xor_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Bitwise-Xor_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Bitwise-Xor_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Bitwise-Xor_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Bitwise-Xor_Raster_tag0@@": "Prvi unos za upotrebu u ovoj operaciji iz delova.",
	"@@Bitwise-Xor_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Bitwise-Xor_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj operaciji iz delova.",
	"@@Bitwise-Xor_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Boolean-and_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Boolean-and_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Boolean-and_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Boolean-and_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Boolean-and_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Boolean-and_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Boolean-and_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Boolean-and_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Boolean-and_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Boolean-and_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Boolean-and_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Boolean-and_Raster_tag0@@": "Prvi unos za upotrebu u ovoj Boleanskoj operaciji.",
	"@@Boolean-and_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Boolean-and_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj Boleanskoj operaciji.",
	"@@Boolean-and_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Boolean-Not_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Boolean-Not_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Boolean-Not_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Boolean-Not_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Boolean-Not_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Boolean-Not_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Boolean-Not_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Boolean-Not_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Boolean-Not_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Boolean-Not_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Boolean-Not_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Boolean-Not_Raster_tag0@@": "Prvi unos za upotrebu u ovoj Boleanskoj operaciji.",
	"@@Boolean-Or_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Boolean-Or_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Boolean-Or_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Boolean-Or_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Boolean-Or_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Boolean-Or_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Boolean-Or_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Boolean-Or_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Boolean-Or_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Boolean-Or_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Boolean-Or_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Boolean-Or_Raster_tag0@@": "Prvi unos za upotrebu u ovoj Boleanskoj operaciji.",
	"@@Boolean-Or_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Boolean-Or_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj Boleanskoj operaciji.",
	"@@Boolean-Or_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Boolean-Xor_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Boolean-Xor_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Boolean-Xor_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Boolean-Xor_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Boolean-Xor_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Boolean-Xor_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Boolean-Xor_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Boolean-Xor_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Boolean-Xor_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Boolean-Xor_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Boolean-Xor_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Boolean-Xor_Raster_tag0@@": "Prvi unos za upotrebu u ovoj Boleanskoj operaciji.",
	"@@Boolean-Xor_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Boolean-Xor_Raster2_tag0@@": "Drugi unos za upotrebu u ovoj Boleanskoj operaciji.",
	"@@Boolean-Xor_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Buffered_Raster_tag0@@": "Ulazni raster koji će se čuvati u memoriji.",
	"@@Calculator_Cellsize-Type_tag0@@": "Veličina ćelije koja se koristi za kreiranje za izlazne rastere.",
	"@@Calculator_Cellsize-Type_tag1@@": "Možete izabrati veličinu izlazne ćelije iz sledećih opcija u padajućoj listi:",
	"@@Calculator_Cellsize-Type_tag2@@": "<strong>Prvi od</strong>--Veličina ćelije za promenljivu prvog rastera.",
	"@@Calculator_Cellsize-Type_tag4@@": "<strong>Min. od</strong>--Minimalna veličina ćelije za ulazne rastere.",
	"@@Calculator_Cellsize-Type_tag6@@": "<strong>Maks. od</strong>--Maksimalna veličina ćelije za ulazne rastere.",
	"@@Calculator_Cellsize-Type_tag8@@": "<strong>Srednje od</strong>--Prosečna veličina ćelije za ulazne rastere.",
	"@@Calculator_Cellsize-Type_tag10@@": "<strong>Poslednji od</strong>--Veličina ćelije za promenljivu poslednjeg rastera.",
	"@@Calculator_Cellsize-Type_tag12@@": "Podrazumevani odeljak je <strong>Maks. od</strong>.",
	"@@Calculator_Expression_tag0@@": "Napravljeno na algebarskom izrazu za obavljanje spatijalne analize na ulaznom rasteru.",
	"@@Calculator_Expression_tag1@@": "Sve postojeće matematičke funkcije mogu se upotrebiti za kreiranje izraza. Dostupni oerateri su navedeni u nastavku.",
	"@@Calculator_Expression_tag2@@": "Aritmetičke operacije",
	"@@Calculator_Expression_tag3@@": "Sabiranje: +",
	"@@Calculator_Expression_tag4@@": "Deljenje:",
	"@@Calculator_Expression_tag5@@": "Modulacija: %",
	"@@Calculator_Expression_tag6@@": "Množenje: *",
	"@@Calculator_Expression_tag7@@": "Power: **",
	"@@Calculator_Expression_tag8@@": "Oduzimanje: -",
	"@@Calculator_Expression_tag9@@": "Bulove operacije",
	"@@Calculator_Expression_tag10@@": "Logička konjukcija: &&",
	"@@Calculator_Expression_tag11@@": "Logička disjunkcija: ||",
	"@@Calculator_Expression_tag12@@": "Operacije sa relacijama",
	"@@Calculator_Expression_tag13@@": "Jednako: ==",
	"@@Calculator_Expression_tag14@@": "Veće od: >",
	"@@Calculator_Expression_tag15@@": "Veće ili jednako od: >=",
	"@@Calculator_Expression_tag16@@": "Manje od: <",
	"@@Calculator_Expression_tag17@@": "Manje ili jednako sa: <=",
	"@@Calculator_Expression_tag18@@": "Nije jednako sa: !=",
	"@@Calculator_Expression_tag19@@": "Dodatne operacije",
	"@@Calculator_Expression_tag20@@": "Minimalno dva rastera na osnovi po pikselima: min(a,b)",
	"@@Calculator_Expression_tag21@@": "Minimalno dva rastera na osnovi po pikselima: maks(a,b)",
	"@@Calculator_Expression_tag22@@": "Evo nekih primera izraza:",
	"@@Calculator_Expression_tag23@@": "Jednostavna kondicionalna izjava: u rasteru (denotifikovano od T) pronalazite povećane vrednosti iznad 4.000 stopa i dajete ovim oblastima vrednost od 1 a svim drugim oblastima vrednost 0.",
	"@@Calculator_Expression_tag24@@": "Kon(T > 4000, 1, 0)",
	"@@Calculator_Expression_tag25@@": "Usađena kondicionalna izjava: pronađite oblasti gde nagib (denotifikovan za b1)) ide ispod 10 stepeni i NDVI (denotifikovan za b2) isde ispod 0,5, i dajte ovim oblastima vrednost 1. Za sve ostale oblasti, dodelite vrednost 2 ako je nagib iznad 10 stepeni i elevacija (denotifikovana sa b3) iznosi iznad 2.500 stopa. Svim drugim oblastima dodeljena je vrednost 3.",
	"@@Calculator_Expression_tag26@@": "Con((b1 < 10 && b2 > .5, 1, Con(b1 > 10 && b3 > 2500, 2, 3)))",
	"@@Calculator_extenttype_tag0@@": "<p>Izaberite koji opseg treba da se koristi u odlaznom rasteru:</p><ul><li><p>Prvi od--Upotreba opsega prvog ulaznog rastera za određivanje progresivnog opsega.</p></li><li>Ukrštanje--Upotrebite opseg preklapajućih piksela da biste odredili opseg obrade. Ovo je podrazumevano.</li><li>Unija za--Upotreba opsega za sve rastere da bi se odredio opseg obrade.</li><li>Poslednji od--Upotreba opsega poslednjeg unosa rastera da bi se odredio opseg obrade.</li></ul>",
	"@@Calculator_Raster-Variables_tag0@@": "Naziv promenljive definisan od strane korisnika i ulaznog rastera.",
	"@@Classify_Input-Definition-File_tag0@@": "Datoteka za ulaznu Esri klasifikatorsku definiciju (${.ecd}) koja sadrži statistiku i druge informacije za klasifikaciju za određeni set podataka, klasifikator i izabrane atribute.",
	"@@Classify_Raster_tag0@@": "Rasterski skup podataka koji želite da klasifikujete.",
	"@@Classify_Raster2_tag0@@": "Opcionalni pomoćni rasterski set podataka koji se postavlja u klasifikator, kao što je segmentisani snimak, multispektralni snimak, ili elevacioni podaci, koji se koristeza kreiranje robusnije definicije klasifikacije za vaš set podataka. Rasterski set podataka za ovaj parametar mora da odgovara onom koji se koristi za unos datoteke za Esri klasifikaciju definicije.",
	"@@Clip_Clipping-Geometry-or-Raster_tag0@@": "Sledeće stave mogu se koristiti za navođenje isečenog dela:",
	"@@Clip_Clipping-Geometry-or-Raster_tag1@@": "<strong>Skraćeni raster</strong>--Opseg skraćenog rastera",
	"@@Clip_Clipping-Geometry-or-Raster_tag3@@": "<strong>Prilagođeni obuhvat</strong>--X i Y minimalne i maksimalne koordinate",
	"@@Clip_Clipping-Geometry-or-Raster_tag5@@": "<strong>Trenutni opseg mape</strong>--Opseg trenutnog prikaza mape",
	"@@Clip_Clipping-Raster_tag0@@": "Rasterski sloj za isecanje.",
	"@@Clip_Clipping-Type_tag0@@": "Navedite da li želite da zadržite oblast unutra ili van vaše isečene geometrije.",
	"@@Clip_Clipping-Type_tag1@@": "<strong>Unutrašnji isečak</strong>--Snimci unutar obuhvata isečka biće uklonjeni.",
	"@@Clip_Clipping-Type_tag3@@": "<strong>Spoljni isečak</strong>--Snimci van obuhvata isečka biće uklonjeni.",
	"@@Clip_Custom-Extent_tag0@@": "Navedite koordinate koje definišu opseg graničnog okvira koji se koristi za sečenje rastera.",
	"@@Clip_Output-Extent_tag0@@": "X i y koordinate trenutnog isečenog dela.",
	"@@Clip_Output-Extent_tag1@@": "Dugme <strong>Zabeleži trenutni obuhvat mape</strong> koristi obuhvat prikaza za aktivnu mapu.",
	"@@Clip_Raster_tag0@@": "Ulazni nivo rastera.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag0@@": "Kada se izaberu, podaci se seku u skladu sa geometrijom navedene klase funkcija.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag1@@": "Neobeleženo--Funkcija koristi isečenu geometriju navedenu od strane <strong>pravougaonika</strong>. Ovo je podrazumevano.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag4@@": "Obeleženo--Funkcija koristi isečenu geometriju definisanu prema klasi funkcije.",
	"@@Color-Model-Conversion_Conversion-Type_tag0@@": "Tip konverzije boje koju treba obaviti:",
	"@@Color-Model-Conversion_Conversion-Type_tag1@@": "HSV u RGB",
	"@@Color-Model-Conversion_Conversion-Type_tag2@@": "RGB u HSV",
	"@@Color-Model-Conversion_Raster_tag0@@": "Ulazni raster.",
	"@@Colormap_Color-Ramp_tag0@@": "Odaberite ranije kreiranu rampu za boje.",
	"@@Colormap_Color-Scheme-Type_tag0@@": "Izaberite tip šeme boje za renderovanje ulaznog rastera",
	"@@Colormap_Color-Scheme-Type_tag1@@": "Rampa za boje--Upotrebite rampu za boje.",
	"@@Colormap_Color-Scheme-Type_tag2@@": "Mapa za boje--Upotrebite ranije kreiranu mapu za boje.",
	"@@Colormap_Colormap_tag0@@": "Sledeće podrazumevane mape za boje dostupne su iz padajuće liste:",
	"@@Colormap_Colormap_tag1@@": "Elevacija--Mapa za boje koja se postepeno menja iz žute u ružičastu i u crnu.",
	"@@Colormap_Colormap_tag2@@": "Siva--Mapa za boje koja se postepeno menja iz crne u belu.",
	"@@Colormap_Colormap_tag7@@": "Hillshade--Mapa boja u nijansama sive za vizuelizaciju 3D prikaza površine terena, uz relativnu poziciju sunca koja se uzima u obzir prilikom senčenja snimka.",
	"@@Colormap_Colormap_tag3@@": "NDVI--Mapa za boje za vizuelizaciju vegetacije. Vrednosti blizu nule su plave. Niske vrednosti su braon. Zatim se boja postepeno menja iz crvene, u narandžastu, u žutu, u zelenu, i u crnu kako indeks vegetacije ide od niskog do visokog.",
	"@@Colormap_Colormap_tag4@@": "NDVI--Mapa za boje za vizuelizaciju vegetacije. Niske vrednosti kreću se od bele do zelene. Zatim se boja postepeno menja iz sive, u ljubičastu, u tamno plavu, i u crnu kako indeks vegetacije ide od niskog do visokog.",
	"@@Colormap_Colormap_tag5@@": "NDVI3--Mapa za boje za vizuelizaciju vegetacije. Vrednosti blizu nule su plave. Zatim se boja postepeno menja iz crvene, u narandžastu, i u zelenu kako indeks vegetacije ide od niskog do visokog.",
	"@@Colormap_Colormap_tag6@@": "Nasumično--Nasumična mapa za boju.",
	"@@Colormap_Raster_tag0@@": "Ulazni raster.",
	"@@Colormap-To-RGB_Raster_tag0@@": "Ulazni raster mape za boju.",
	"@@Complex_Raster_tag0@@": "Ulazni raster.",
	"@@Composite-Bands_Rasters_tag0@@": "Upotrebite padajuću listu ili dugme <strong>Pregled</strong> da biste izabrali unose za raster.",
	"@@Composite-Bands_cellsizetype_tag0@@": "<p>Izaberite koju veličinu ćelije ćete koristiti u izlaznom rasteru. Ako su sve veličine ulaznih ćelija iste, sve opcije će dati iste rezultate.</p><ul><li>Prvi od--Koristite prvu veličinu ćelije ulaznih rastera.</li><li>Minimum od--Koristite najmanju veličinu ćelije od svih ulaznih rastera.</li><li>Maksimalno od--Koristite najveću veličinu ćelije od svih ulaznih rastera. Ovo je podrazumevano.</li><li>Srednje od--Upotreba srednje vrednosti ćelije za ulazne rastere.</li><li>Poslednji od--Upotrebite poslednju veličinu ćelije za ulazne rastere.</li></ul>",
	"@@Con-function_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Con-function_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Con-function_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Con-function_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Con-function_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Con-function_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Con_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Con_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Con_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Con_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Con_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Con_False-Raster_tag0@@": "Unos čije vrednosti će se koristiti kao vrednosti za izlazni piksel ako je stanje neispravno. To može da bude integral, raster sa pokretnim zarezom, ili konstantna vrednost.",
	"@@Con_Raster_tag0@@": "Ulazni raster koji predstavlja Bulov rezultat za logičku matematičku funkciju rastera. Vrednosti će biti ili 1 (za tačno) ili 0 (za netačno). To može da bude integralni ili raster sa pokrentim zarezom.",
	"@@Con_True-Raster_tag0@@": "Unos čije vrednosti će se koristiti kao vrednosti za izlazni piksel ako je stanje ispravno. To može da bude integral, raster sa pokretnim zarezom, ili konstantna vrednost.",
	"@@Constant_Constant_tag0@@": "Vrednost konstante koja se dodaje na virtuelni raster.",
	"@@Constant_Raster-Info_tag0@@": "Upotrebite dugme <strong>Učitaj šablon rastera</strong> da biste učitali šablon iz fascikle ili sa portala.",
	"@@Contour_Adaptive-Smoothing_tag0@@": "Količina finog podešavanja za primenu na liniju konture. Podrazumevana vrednost je 2,5.",
	"@@Contour_Adaptive-Smoothing_tag1@@": "Niža vrednost dovodi do linije konture sa više granularnosti i manje umekšavanja dok viša vrednost dovodi do konturne linije sa više umekšavanja tako da deluje manje rasipano.",
	"@@Contour_Contour-Interval_tag0@@": "Razlika u visini između konturnih linija.",
	"@@Contour_Contour-Interval_tag1@@": "Mali interval konture koristi se u relativno ravnim delovima, dok se veći intervali konture koriste u varijabilnim ili planinskim terenima.",
	"@@Contour_Contour-Type_tag0@@": "Tip konture koji se kreira:",
	"@@Contour_Contour-Type_tag1@@": "<strong>Popuna konture</strong>--Popunjava oblast između svake linije konture sa kvantifikovanom vrednošću za elevaciju.",
	"@@Contour_Contour-Type_tag3@@": "<strong>Linije konture</strong>--Spaja tačke iste visine za kreiranje linije koja predstavlja konstantnu elevaciju.",
	"@@Contour_Contour-Type_tag5@@": "<strong>Samo meka površina</strong>--Omekšava ulazni elevacioni sloj ali ne kreira konture.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag0@@": "Indeksna kontura, koja je predstavljena punom linijom.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag1@@": "Podrazumevana vrednost je 5; pa se svaka 5. linija konture podebljava.",
	"@@Contour_Number-Of-Contours_tag0@@": "Broj kontrura koje treba da se prikažu na ekranu. Dinamički podešava interval konture u skladu sa terenom na ekranu dok održava standardne intervale kao što su 1, 5, 10, i slično.",
	"@@Contour_Raster_tag0@@": "Jedan set podataka za opseg elevacije rastera.",
	"@@Contour_Z-Base_tag0@@": "Osnovna vrednost konture. Konture se kreiraju iznad i ispod ove vrednosti po potrebi za pokriće celog opsega vrednosti u ulaznom rasteru. Podrazumevano je 0.",
	"@@Contour_Z-Base_tag1@@": "Vrednost 0 često predtstavlja srednji nivo mora, u zavisnosti od izvora seta podataka za elevaciju.",
	"@@Contour_Z-Factor_tag0@@": "Faktor za konverziju jedinice koristi se za generaciju kontura. Podrazumevana vrednost je 1.",
	"@@Contour_Z-Factor_tag1@@": "Linije konture kreirane su na osnovu z-vrednosti u ulaznom rasteru, koji se često meri jedinicama metra i stopa. Uz podrazumevanu vrednost od 1, konture će biti u istim jedinicama kao i z-vrednosti ulaznog rastera. Za kreiranje kontura u različitim jedinicama osim z-vrednosti, podesite odgovarajuće vrednosti za z-faktor. Imajte u vidu da nije neophodno da imate tačku x,y i površinske z-jedinice kao dosledne u ovom alatu.",
	"@@Contour_Z-Factor_tag2@@": "Na primer, ako su vrednosti elevacije u vašem ulaznom rasteru stope, ali vi želite da se konture kreiraju na osnovu metara, podesite z-faktor na 0,3048 (pošto je 1 stopa =0,3048 metara).",
	"@@Contrast-and-Brightness_Brightness-Offset_tag0@@": "Podesite osvetljenost sloja rastera.",
	"@@Contrast-and-Brightness_Brightness-Offset_tag1@@": "Možete upotrebiti klizač za modifikaciju raspona osvetljenosti, ili možete da unesete vrednost.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag0@@": "Podesite kontrast sloja rastera.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag1@@": "Možete upotrebiti klizač za modifikaciju raspona kontrasta, ili možete da unesete vrednost.",
	"@@Contrast-and-Brightness_Raster_tag0@@": "Za unos rastera za koji želite da uredite osvetljenost i kontrast.",
	"@@Convolution_kernel_tag0@@": "<p>Ova tabela pokazuje kako će svaki piksel biti ponderisan u procesu filtriranja. Ova tabela se može uređivati ako izaberete<strong>Definisano od strane korisnika</strong>kao <strong>Tip</strong>.</p>",
	"@@Convolution_Raster_tag0@@": "Set podataka ulaznog rastera.",
	"@@Convolution_Type_tag0@@": "Izaberite vrste filtriranja koje biste želeli da obavite. Postoje opcije za izoštravanje, zamućivanje i detekciju ivica, ili možete da definišete svoj lični kernel filter",
	"@@Corridor_Distance-Raster-1_tag0@@": "Prvi ulazni raster za udaljenost. To treba da bude akumulirana distanca troškova izlaza iz distance troškova ili distance putanje.",
	"@@Corridor_Distance-Raster-2_tag0@@": "Drugi ulazni raster za udaljenost. To treba da bude akumulirana distanca troškova izlaza iz distance troškova ili distance putanje.",
	"@@Cos_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Cos_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Cos_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Cos_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Cos_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Cos_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Cos_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Cos_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Cos_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Cos_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Cos_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Cos_Raster_tag0@@": "Ulaz za koji se računaju inverzne hiperbolične vrednosti kosinusa.",
	"@@CosH_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@CosH_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@CosH_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@CosH_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@CosH_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@CosH_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@CosH_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@CosH_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@CosH_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@CosH_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@CosH_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@CosH_Raster_tag0@@": "Izlaz za koji se računaju hiperbolične vrednosti kosinusa.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Ovaj parametar simulira povećanje u nastojanju za preovlađivanjetroškova kao akumulativna povećanja troškova. Koristi se za modeliranje zamora putnika. Rastući akumulativni trošak dostizanja ćelije množi se sa stopom otpora i dodaje se na trošak prelaska u narednu ćeliju.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "To je modifikovana verzija formule složene kamatne stope koja se koristi za izračunavanje prividnih troškova prelaska kroz ćeliju. Kako se vrednost stope otpornosti povećava, povećava se i cena ćelija koje se kasnije posete. Što je veća stopa otpora, veći su troškovi da se dođe do sledeće ćelije, koja se svodi na svako naredno kretanje. Pošto je stopa otpora slična složenoj stopi i obično su vrednosti akumulativnih troškova veoma velike, predlažu se male stope otpora, poput 0,005 ili čak i manje, u zavisnosti od akumulativnih vrednosti troškova.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Cost-Allocation_Capacity_tag0@@": "Definiše troškovnu sposobnost za putnika za izvor. Kalkulacije troškova nastavljaju se za svaki izvor sve dok se ne dostigne zadani kapacitet.",
	"@@Cost-Allocation_Capacity_tag1@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Cost-Allocation_Capacity_tag2@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Cost-Allocation_Cost-Raster_tag0@@": "Traženi ulazni raster koji definiše impedancu ili trošak za pomeranje planimetrije kroz svaku ćeliju. Vrednost na lokaciji svake ćelije predstavlja rastojanje trošak-po-jedinici za pomeranje kroz ćeliju. Svaka vrednost lokacije ćelije se množi sa rezolucijom ćelije dok se takođe kompenzuje dijagonalni pokret za zadržavanje ukupnog troška prolaska kroz ćeliju.",
	"@@Cost-Allocation_Cost-Raster_tag1@@": "Vrednosti za <strong>Raster troškova</strong> mogu da budu ceo broj ili plutajući zarez, ali ne mogu da budu negativni ili nula.",
	"@@Cost-Allocation_Maximum-Distance_tag0@@": "Granične vrednosti koje akumulativne vrednosti troškova ne mogu da pređu. Ako udaljenost akumulativnih troškova prelazi ovu vrednost, izlazna vrednost za lokaciju ćelija biće ${NoData}. Maksimalna udaljenost definiše stepen za koji se izračunavaju akumulativne udaljenosti troškova. Zadata udaljenost je u visini izlaznog rastera.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Množilac za primenu vrednosti troškova.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućava kontrolu načina putovanja ili veličine u izvoru. Što je veći množilac, to je veći trošak za prelazak kroz svaku ćeliju.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti moraju biti veće od nule. Podrazumevano je 1.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Cost-Allocation_Source-Field_tag0@@": "Polje koje se koristi za dodelu vrednosti na izvorne lokacije. Mora da bude integralnog tipa. Ako je <strong>Raster vrednosti</strong> postavljen, vrednosti u tom unosu imaće presedan u odnosu na bilo koje podešavanje za <strong>Polje izvora</strong>.",
	"@@Cost-Allocation_Source-Raster_tag0@@": "Traženi ulazni raster za izbvorne lokacije.",
	"@@Cost-Allocation_Source-Raster_tag1@@": "Ovo je raster koji identifikuje ćelije ili lokacije iz kojih se izračunava najmanje nakupljena udaljenost troškova za svaku lokaciju izlazne ćelije.",
	"@@Cost-Allocation_Source-Raster_tag2@@": "Ako je unos za <strong>Izvorni raster</strong> pokretni zarez, <strong>Raster vrednosti</strong> mora da se podesi, i mora da bude ceo broj. <strong>Raster vrednosti</strong> imaće presedan nad bilo kojim podešavanjem za <strong>Polje izvora</strong>.",
	"@@Cost-Allocation_Start-Cost_tag0@@": "Početni trošak od kog se započinje kalkulacija troškova. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih sa izvorom. Umesto da započne sa cenom 0, algoritam troškova počeće sa navedenom vrednostima.",
	"@@Cost-Allocation_Start-Cost_tag1@@": "Vrednost mora biti nula ili veća. Podrazumevano je 0.",
	"@@Cost-Allocation_Travel-Direction_tag0@@": "Definiše smer putnika prilikom primene stope otpora izvora i početne cene izvora.",
	"@@Cost-Allocation_Travel-Direction_tag1@@": "<strong>Od izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od ulaznog izvora i prelazeći na ćelije koje nisu izvor. Ovo je podrazumevano.",
	"@@Cost-Allocation_Travel-Direction_tag3@@": "<strong>Do izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od svake ćelije koja nije izvor i prebacujući se nazad ka ulaznom izvoru.",
	"@@Cost-Allocation_Travel-Direction_tag5@@": "Navedite ključnu reč za <strong>Od izvora</strong> ili <strong>Do izvora</strong>, koja će biti primenjena na sve izvore, ili navedite polje u <strong>Raster izvora</strong> koje sadrži ključne reči za identifikaciju smera putovanja za svaki izvor. To polje mora da sadrži niz ${FROM_SOURCE} ili ${TO_SOURCE}.",
	"@@Cost-Allocation_Value-Raster_tag0@@": "Razni ulazni brojevi koji identifikuju vrednosti zona koje se koriste za svaku lokaciju ulaznog izvora. Za svaku izvornu ćeliju lokacije, vrednost definisana preko <strong>Rastera vrednosti</strong> biće dodeljena svim ćelijama koje su prebačene na lokaciju izvora za proračun. <strong>Raster vrednosti</strong> imaće presedan nad bilo kojim podešavanjem za <strong>Polje izvora</strong>.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Ovaj parametar simulira povećanje u nastojanju za preovlađivanjetroškova kao akumulativna povećanja troškova. Koristi se za modeliranje zamora putnika. Rastući akumulativni trošak dostizanja ćelije množi se sa stopom otpora i dodaje se na trošak prelaska u narednu ćeliju.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "To je modifikovana verzija formule složene kamatne stope koja se koristi za izračunavanje prividnih troškova prelaska kroz ćeliju. Kako se vrednost stope otpornosti povećava, povećava se i cena ćelija koje se kasnije posete. Što je veća stopa otpora, veći su troškovi da se dođe do sledeće ćelije, koja se svodi na svako naredno kretanje. Pošto je stopa otpora slična složenoj stopi i obično su vrednosti akumulativnih troškova veoma velike, predlažu se male stope otpora, poput 0,005 ili čak i manje, u zavisnosti od akumulativnih vrednosti troškova.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Cost-Back-Link_Capacity_tag0@@": "Definiše troškovnu sposobnost za putnika za izvor. Kalkulacije troškova nastavljaju se za svaki izvor sve dok se ne dostigne zadani kapacitet.",
	"@@Cost-Back-Link_Capacity_tag1@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Cost-Back-Link_Capacity_tag2@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Cost-Back-Link_Cost-Raster_tag0@@": "Traženi ulazni raster koji definiše impedancu ili trošak za pomeranje planimetrije kroz svaku ćeliju. Vrednost na lokaciji svake ćelije predstavlja rastojanje trošak-po-jedinici za pomeranje kroz ćeliju. Svaka vrednost lokacije ćelije se množi sa rezolucijom ćelije dok se takođe kompenzuje dijagonalni pokret za zadržavanje ukupnog troška prolaska kroz ćeliju.",
	"@@Cost-Back-Link_Cost-Raster_tag1@@": "Vrednosti za <strong>Raster troškova</strong> mogu da budu ceo broj ili plutajući zarez, ali ne mogu da budu negativni ili nula.",
	"@@Cost-Back-Link_Maximum-Distance_tag0@@": "Granične vrednosti koje akumulativne vrednosti troškova ne mogu da pređu. Ako akumulativna udaljenost troškova premaši ovu vrednost, izlazna vrednost za lokaciju ćelije će biti NoData. Maksimalna udaljenost definiše stepen za koji se izračunavaju akumulativne udaljenosti troškova. Zadata udaljenost je u visini izlaznog rastera.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Množilac za primenu vrednosti troškova.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućava kontrolu načina putovanja ili veličine u izvoru. Što je veći množilac, to je veći trošak za prelazak kroz svaku ćeliju.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti moraju biti veće od nule. Podrazumevano je 1.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Cost-Back-Link_Source-Raster_tag0@@": "Traženi ulazni raster za izbvorne lokacije.",
	"@@Cost-Back-Link_Source-Raster_tag1@@": "Ovo je raster koji identifikuje ćelije ili lokacije iz kojih se izračunava najmanje nakupljena udaljenost troškova za svaku lokaciju izlazne ćelije.",
	"@@Cost-Back-Link_Start-Cost_tag0@@": "Početni trošak od kog se započinje kalkulacija troškova. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih sa izvorom. Umesto da započne sa cenom 0, algoritam troškova počeće sa navedenom vrednostima.",
	"@@Cost-Back-Link_Start-Cost_tag1@@": "Vrednost mora biti nula ili veća. Podrazumevano je 0.",
	"@@Cost-Back-Link_Travel-Direction_tag0@@": "Definiše smer putnika prilikom primene stope otpora izvora i početne cene izvora.",
	"@@Cost-Back-Link_Travel-Direction_tag1@@": "<strong>Od izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od ulaznog izvora i prelazeći na ćelije koje nisu izvor. Ovo je podrazumevano.",
	"@@Cost-Back-Link_Travel-Direction_tag3@@": "<strong>Do izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od svake ćelije koja nije izvor i prebacujući se nazad ka ulaznom izvoru.",
	"@@Cost-Back-Link_Travel-Direction_tag5@@": "Navedite ključnu reč za <strong>Od izvora</strong> ili <strong>Do izvora</strong>, koja će biti primenjena na sve izvore, ili navedite polje u <strong>Raster izvora</strong> koje sadrži ključne reči za identifikaciju smera putovanja za svaki izvor. To polje mora da sadrži niz ${FROM_SOURCE} ili ${TO_SOURCE}.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Ovaj parametar simulira povećanje u nastojanju za preovlađivanjetroškova kao akumulativna povećanja troškova. Koristi se za modeliranje zamora putnika. Rastući akumulativni trošak dostizanja ćelije množi se sa stopom otpora i dodaje se na trošak prelaska u narednu ćeliju.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "To je modifikovana verzija formule složene kamatne stope koja se koristi za izračunavanje prividnih troškova prelaska kroz ćeliju. Kako se vrednost stope otpornosti povećava, povećava se i cena ćelija koje se kasnije posete. Što je veća stopa otpora, veći su troškovi da se dođe do sledeće ćelije, koja se svodi na svako naredno kretanje. Pošto je stopa otpora slična složenoj stopi i obično su vrednosti akumulativnih troškova veoma velike, predlažu se male stope otpora, poput 0,005 ili čak i manje, u zavisnosti od akumulativnih vrednosti troškova.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Cost-Distance_Capacity_tag0@@": "Definiše troškovnu sposobnost za putnika za izvor. Kalkulacije troškova nastavljaju se za svaki izvor sve dok se ne dostigne zadani kapacitet.",
	"@@Cost-Distance_Capacity_tag1@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Cost-Distance_Capacity_tag2@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Cost-Distance_Cost-Raster_tag0@@": "Traženi ulazni raster koji definiše impedancu ili trošak za pomeranje planimetrije kroz svaku ćeliju. Vrednost na lokaciji svake ćelije predstavlja rastojanje trošak-po-jedinici za pomeranje kroz ćeliju. Svaka vrednost lokacije ćelije se množi sa rezolucijom ćelije dok se takođe kompenzuje dijagonalni pokret za zadržavanje ukupnog troška prolaska kroz ćeliju.",
	"@@Cost-Distance_Cost-Raster_tag1@@": "Vrednosti za <strong>Raster troškova</strong> mogu da budu ceo broj ili plutajući zarez, ali ne mogu da budu negativni ili nula.",
	"@@Cost-Distance_Maximum-Distance_tag0@@": "Granične vrednosti koje akumulativne vrednosti troškova ne mogu da pređu. Ako akumulativna udaljenost troškova premaši ovu vrednost, izlazna vrednost za lokaciju ćelije će biti NoData. Maksimalna udaljenost definiše stepen za koji se izračunavaju akumulativne udaljenosti troškova. Zadata udaljenost je u visini izlaznog rastera.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Množilac za primenu vrednosti troškova.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućava kontrolu načina putovanja ili veličine u izvoru. Što je veći množilac, to je veći trošak za prelazak kroz svaku ćeliju.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti moraju biti veće od nule. Podrazumevano je 1.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Cost-Distance_Source-Raster_tag0@@": "Traženi ulazni raster za izbvorne lokacije.",
	"@@Cost-Distance_Source-Raster_tag1@@": "Ovo je raster koji identifikuje ćelije ili lokacije iz kojih se izračunava najmanje nakupljena udaljenost troškova za svaku lokaciju izlazne ćelije.",
	"@@Cost-Distance_Start-Cost_tag0@@": "Početni trošak od kog se započinje kalkulacija troškova. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih sa izvorom. Umesto da započne sa cenom 0, algoritam troškova počeće sa navedenom vrednostima.",
	"@@Cost-Distance_Start-Cost_tag1@@": "Vrednost mora biti nula ili veća. Podrazumevano je 0.",
	"@@Cost-Distance_Travel-Direction_tag0@@": "Definiše smer putnika prilikom primene stope otpora izvora i početne cene izvora.",
	"@@Cost-Distance_Travel-Direction_tag1@@": "<strong>Od izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od ulaznog izvora i prelazeći na ćelije koje nisu izvor. Ovo je podrazumevano.",
	"@@Cost-Distance_Travel-Direction_tag3@@": "<strong>Do izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od svake ćelije koja nije izvor i prebacujući se nazad ka ulaznom izvoru.",
	"@@Cost-Distance_Travel-Direction_tag5@@": "Navedite ključnu reč za <strong>Od izvora</strong> ili <strong>Do izvora</strong>, koja će biti primenjena na sve izvore, ili navedite polje u <strong>Raster izvora</strong> koje sadrži ključne reči za identifikaciju smera putovanja za svaki izvor. To polje mora da sadrži niz ${FROM_SOURCE} ili ${TO_SOURCE}.",
	"@@Curvature_Curvature-Type_tag0@@": "Tip zakrivljenosti naglašava različite aspekte nagiba. Postoje tri opcije zakrivljenosti:",
	"@@Curvature_Curvature-Type_tag1@@": "Forma plana--Normalan je na pravac maksimalnog nagiba. Utiče na konvergenciju i divergenciju protoka kroz površinu.",
	"@@Curvature_Curvature-Type_tag2@@": "Profil--Je paralelan sa kosinom i označava pravac maksimalnog nagiba. Utiče na ubrzanje i usporavanje protoka kroz površinu.",
	"@@Curvature_Curvature-Type_tag3@@": "Standardno--Kombinuje krive za <strong>Profil</strong> i <strong>Planformu</strong>.",
	"@@Curvature_DEM_tag0@@": "Rasterski digitalni model elevacije (DEM).",
	"@@Curvature_Z-Factor_tag0@@": "Z-faktor prilagođava mere mere za z jedinice kada su one različite od x, y jedinica ulazne površine. Ako su jedinice x, y i z iste mere mere, z-faktor treba postaviti na 1. Z-vrednosti ulazne površine množe se z-faktorom prilikom izračunavanja konačne izlazne površine. Na primer, ako su vaše z jedinice stope, a vaše x, y jedinice su metri, upotrebili biste z-faktor 0,3048 da biste z jedinice iz stopa pretvorili u metre, budući da je 1 stopa = 0,3048 metara.",
	"@@Divide_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Divide_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Divide_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Divide_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Divide_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Divide_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Divide_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Divide_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Divide_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Divide_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Divide_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Divide_Raster_tag0@@": "Za unos vrednosti koja će biti podeljena drugim unosom.",
	"@@Divide_Raster_tag1@@": "Broj može da se koristi za unos za ovaj parametar, ako je raster naveden za ${Raster2}.",
	"@@Divide_Raster2_tag0@@": "Unos čija vrednost će prva biti podeljena sa unosom.",
	"@@Divide_Raster2_tag1@@": "Broj može da se upotrebi kao unos za ovaj parametar, ako je raster naveden za ${Raster}.",
	"@@Elevation-Void-Fill_DEM_tag0@@": "Ulazni DEM.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag0@@": "Maksimalna vrednost širine praznine koristi se za određivanje najveće veličine praznine koju želite popuniti. Ako je širina ili visina graničnog okvira oko praznine veća od maksimalne vrednosti širine praznine, praznina se ne popunjava. Jedinice ovog parametra iste su kao jedinice korišćene u prostornom referentnom sistemu vaših podataka.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag1@@": "Ako je ovaj parametar prazan ili ima vrednost ${0}, neće se koristiti maksimalna širina, a sve praznine biće popunjene. Vrednost ${-1} znači da neće doći do popunjavanja praznina.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag0@@": "Maksimalni radijus pretraživanja koji će se koristiti za popunjavanje praznina. Praznina koja je dalje od bilo kog važećeg piksela od ove vrednosti praga ostaće kao praznina. Jedinice ovog parametra iste su kao jedinice korišćene u prostornom referentnom sistemu vaših podataka.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag1@@": "Ako je vrednost ovog parametra prazna, ${0} ili ${-1} ovaj parametar se neće koristiti.",
	"@@Equal-to_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Equal-to_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Equal-to_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Equal-to_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Equal-to_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Equal-to_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Equal-to_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Equal-to_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Equal-to_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Equal-to_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Equal-to_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Equal-to_Raster_tag0@@": "Ulaz koji će se koristiti za poređenje za jednakost sa drugim ulazom.",
	"@@Equal-to_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Equal-to_Raster2_tag0@@": "Ulaz koji će se koristiti za poređenje za jednakost sa prvim ulazom.",
	"@@Equal-to_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Euclidean-Allocation_Cellsize_tag0@@": "Veličina ćelije na kojoj će se stvoriti izlazni raster.",
	"@@Euclidean-Allocation_Cellsize_tag1@@": "Ako je veličina ćelija eksplicitno postavljena u <strong>Okruženjima za analizu</strong> , to će biti podrazumevana veličina ćelije. Ako nije podešena, veličina izlazne ćelije biće ista kao <strong>Raster izvora</strong>.",
	"@@Euclidean-Allocation_Distance-Method_tag0@@": "Određuje da li rastojanje treba izračunati korišćenjem planarnog (ravna zemlja) ili geodetskog (elipsoid) metoda.",
	"@@Euclidean-Allocation_Distance-Method_tag1@@": "Geodezička - najkraća linija između dve tačke na zemljinoj površini na sferoidu (elipsoid). Stoga se, bez obzira na ulaznu ili izlaznu projekciju, rezultati ne menjaju. Jedna upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju aviona. To je takođe poznato kao velika linija kruga ako se zasniva na sferi, a ne na elipsoidu.",
	"@@Euclidean-Allocation_Distance-Method_tag2@@": "Ravan - Planarna merenja koriste 2D kartezijansku matematiku za izračunavanje dužine i površine. Opcija je dostupna samo kada se meri u projektovanom koordinatnom sistemu, a 2D ravnina tog koordinatnog sistema će se koristiti kao osnova za merenja.",
	"@@Euclidean-Allocation_Maximum-Distance_tag0@@": "Definiše prag udaljenosti unutar kojeg će se odrediti najbliži izvor. Ako udaljenost do najbližeg izvora prelazi ovo, izlaz za tu ćeliju će biti ${NoData}.",
	"@@Euclidean-Allocation_Maximum-Distance_tag1@@": "Zadata udaljenost je u visini izlaznog rastera.",
	"@@Euclidean-Allocation_Raster-Barriers_tag0@@": "Raster koji definiše barijere.",
	"@@Euclidean-Allocation_Raster-Barriers_tag1@@": "Skup podataka mora da sadrži ${NoData} tamo gde nema prepreka. Barijere su predstavljene važećim vrednostima uključujući nulu.",
	"@@Euclidean-Allocation_Raster-Barriers_tag2@@": "Barijere mogu da budu definisane kao integralni ili raster sa pokretnim zerezom.",
	"@@Euclidean-Allocation_Source-Field_tag0@@": "Polje koje se koristi za dodelu vrednosti na izvorne lokacije. Mora da bude integralnog tipa. Ako je <strong>Raster vrednosti</strong> postavljen, vrednosti u tom unosu imaće presedan u odnosu na bilo koje podešavanje za <strong>Polje izvora</strong>.",
	"@@Euclidean-Allocation_Source-Raster_tag0@@": "Potrebni ulazni raster koji identifikuje lokacije izvora. Na osnovu Euklidove udaljenosti, za svaku ćeliju u izlazu biće određen najbliži izlaz",
	"@@Euclidean-Allocation_Source-Raster_tag1@@": "Ulazni tip može biti celi broj ili tip sa pokretnim zarezom.",
	"@@Euclidean-Allocation_Value-Raster_tag0@@": "Razni ulazni brojevi koji identifikuju vrednosti zona koje se koriste za svaku lokaciju ulaznog izvora. Za svaku izvornu ćeliju lokacije, vrednost definisana preko <strong>Rastera vrednosti</strong> biće dodeljena svim ćelijama koje su prebačene na lokaciju izvora za proračun. <strong>Raster vrednosti</strong> imaće presedan nad bilo kojim podešavanjem za <strong>Polje izvora</strong>.",
	"@@Euclidean-Direction_Cellsize_tag0@@": "Veličina ćelije na kojoj će se stvoriti izlazni raster.",
	"@@Euclidean-Direction_Cellsize_tag1@@": "Ako je veličina ćelija eksplicitno postavljena u <strong>Okruženjima za analizu</strong> , to će biti podrazumevana veličina ćelije. Ako nije podešena, veličina izlazne ćelije biće ista kao <strong>Raster izvora</strong>.",
	"@@Euclidean-Direction_Distance-Method_tag0@@": "Određuje da li rastojanje treba izračunati korišćenjem planarnog (ravna zemlja) ili geodetskog (elipsoid) metoda.",
	"@@Euclidean-Direction_Distance-Method_tag1@@": "Geodezička - najkraća linija između dve tačke na zemljinoj površini na sferoidu (elipsoid). Stoga se, bez obzira na ulaznu ili izlaznu projekciju, rezultati ne menjaju. Jedna upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju aviona. To je takođe poznato kao velika linija kruga ako se zasniva na sferi, a ne na elipsoidu.",
	"@@Euclidean-Direction_Distance-Method_tag2@@": "Ravan - Planarna merenja koriste 2D kartezijansku matematiku za izračunavanje dužine i površine. Opcija je dostupna samo kada se meri u projektovanom koordinatnom sistemu, a 2D ravnina tog koordinatnog sistema će se koristiti kao osnova za merenja.",
	"@@Euclidean-Direction_Maximum-Distance_tag0@@": "Definiše prag udaljenosti unutar kojeg će se izračunati pravac do najbližeg izvora. Ako udaljenost do najbližeg izvora prelazi ovo, izlaz za tu ćeliju će biti ${NoData}.",
	"@@Euclidean-Direction_Maximum-Distance_tag1@@": "Zadata udaljenost je u visini izlaznog rastera.",
	"@@Euclidean-Direction_Raster-Barriers_tag0@@": "Raster koji definiše barijere.",
	"@@Euclidean-Direction_Raster-Barriers_tag1@@": "Set podataka mora da sadrži NoData tamo gde nema prepreka. Barijere su predstavljene važećim vrednostima uključujući nulu.",
	"@@Euclidean-Direction_Raster-Barriers_tag2@@": "Barijere mogu da budu definisane kao integralni ili raster sa pokretnim zarezom.",
	"@@Euclidean-Direction_Source-Raster_tag0@@": "Potreban ulazni raster koji identifikuje ćelije ili lokacije na koje se izračunava euklidski pravac za svaku lokaciju izlazne ćelije.",
	"@@Euclidean-Direction_Source-Raster_tag1@@": "Ulazni tip može biti celi broj ili tip sa pokretnim zarezom.",
	"@@Euclidean-Distance_Cellsize_tag0@@": "Veličina ćelije na kojoj će se stvoriti izlazni raster.",
	"@@Euclidean-Distance_Cellsize_tag1@@": "Ako je veličina ćelija eksplicitno postavljena u <strong>Okruženjima za analizu</strong> , to će biti podrazumevana veličina ćelije. Ako nije podešena, veličina izlazne ćelije biće ista kao <strong>Raster izvora</strong>.",
	"@@Euclidean-Distance_Distance-Method_tag0@@": "Određuje da li rastojanje treba izračunati korišćenjem planarnog (ravna zemlja) ili geodetskog (elipsoid) metoda.",
	"@@Euclidean-Distance_Distance-Method_tag1@@": "Geodezička - najkraća linija između dve tačke na zemljinoj površini na sferoidu (elipsoid). Stoga se, bez obzira na ulaznu ili izlaznu projekciju, rezultati ne menjaju. Jedna upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju aviona. To je takođe poznato kao velika linija kruga ako se zasniva na sferi, a ne na elipsoidu.",
	"@@Euclidean-Distance_Distance-Method_tag2@@": "Ravan - Planarna merenja koriste 2D kartezijansku matematiku za izračunavanje dužine i površine. Opcija je dostupna samo kada se meri u projektovanom koordinatnom sistemu, a 2D ravnina tog koordinatnog sistema će se koristiti kao osnova za merenja.",
	"@@Euclidean-Distance_Maximum-Distance_tag0@@": "Granične vrednosti koje akumulativne vrednosti distance ne mogu da pređu. Ako akumulativna udaljenost distance premaši ovu vrednost, izlazna vrednost za lokaciju ćelije će biti NoData.",
	"@@Euclidean-Distance_Maximum-Distance_tag1@@": "Zadata udaljenost je u visini izlaznog rastera.",
	"@@Euclidean-Distance_Raster-Barriers_tag0@@": "Raster koji definiše barijere.",
	"@@Euclidean-Distance_Raster-Barriers_tag1@@": "Skup podataka mora da sadrži ${NoData} tamo gde nema prepreka. Barijere su predstavljene važećim vrednostima uključujući nulu.",
	"@@Euclidean-Distance_Raster-Barriers_tag2@@": "Barijere mogu da budu definisane kao integralni ili raster sa pokretnim zarezom.",
	"@@Euclidean-Distance_Source-Raster_tag0@@": "Potreban ulazni raster koji identifikuje ćelije ili lokacije na koje se izračunava euklidski pravac za svaku lokaciju izlazne ćelije.",
	"@@Euclidean-Distance_Source-Raster_tag1@@": "Ulazni tip može biti celi broj ili tip sa pokretnim zarezom.",
	"@@Exp_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Exp_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Exp_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Exp_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Exp_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Exp_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Exp_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Exp_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Exp_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Exp_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Exp_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Exp_Raster_tag0@@": "Ulazne vrednosti za koje treba pronaći bazu eksponencijala.",
	"@@Exp10_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Exp10_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Exp10_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Exp10_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Exp10_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Exp10_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Exp10_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Exp10_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Exp10_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Exp10_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Exp10_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Exp10_Raster_tag0@@": "Ulazne vrednosti za koje se može naći eksponencijalna baza 10.",
	"@@Exp2_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Exp2_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Exp2_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Exp2_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Exp2_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Exp2_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Exp2_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Exp2_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Exp2_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Exp2_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Exp2_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Exp2_Raster_tag0@@": "Ulazne vrednosti za koje se može naći eksponencijalna baza 2.",
	"@@Extract-Bands_Band_tag0@@": "Izaberite opsege koje ćete ekstraktovati sa liste na osnovu opcije za parametar <strong>Metod</strong> koja je korišćena.",
	"@@Extract-Bands_Combination_tag0@@": "Kombinacija opsega ili redosled opsega. Lista za izvor zavisi od navedene opcije za <strong>Metod</strong>. Na primer, ako je <strong>Metod</strong> podešen kao <strong>Nazivi opsega</strong> , možete da izaberete plavu, zelenu i crvenu kombinaciju za ekstraktovanje prirodne boje slike.",
	"@@Extract-Bands_Method_tag0@@": "Izaberite jednu od sledećih metoda za ekstrakciju opsega:",
	"@@Extract-Bands_Method_tag1@@": "<strong>ID-ovi opsega</strong>--Oznaka ili broj opsega, koji je jedinstven za svaki senzor. Oni mogu da budu isti kao <strong>Nazivi opsega</strong>.",
	"@@Extract-Bands_Method_tag4@@": "<strong>Nazivi opsega</strong>--Koristi naziv opsega koji predstavlja interval talasne dužine na elektromagnetnom spektru (na primer crveni, blizu infracrveni, termički infracrveni). Ovo se takođe može označiti kao ID broja opsega.",
	"@@Extract-Bands_Method_tag6@@": "<strong>Talasne dužine opsega</strong>--Talasna dužina u elektromagnetnom spektru.",
	"@@Extract-Bands_Missing-Band-Action_tag0@@": "Navedite radnju koja će se dogoditi kada opseg sa liste ekstrakcije nije dostupan.",
	"@@Extract-Bands_Missing-Band-Action_tag1@@": "<strong>Najbolje poklapanje</strong>--Pronalazi najbolji raspoloživi opseg koji se koristi umesto opsega koji nedostaje na osnovu talasne dužine, tako da funkcija neće propasti",
	"@@Extract-Bands_Missing-Band-Action_tag3@@": "<strong>Neuspešno</strong>--Ako setu podataka za unos nedostaje bilo koji opseg naveden u parametru <strong>Opseg</strong>, funkcija će biti neuspešna.",
	"@@Extract-Bands_Raster_tag0@@": "Rasterski proizvod iz koga će se izdvojiti opseg ili trake.",
	"@@Fill_Raster_tag0@@": "Raster za povišenje u jednom pojasu.",
	"@@Fill_Z-Limit_tag0@@": "Maksimalna visinska razlika između odliva i mesta zalivanja koje treba napuniti.",
	"@@Fill_Z-Limit_tag1@@": "Ako nije navedena vrednost za ovaj parametar, svi odlivi će se napuniti, bez obzira na dubinu.",
	"@@Fill_Z-Limit_tag2@@": "Vrednost za <strong>Z ograničenje</strong> mora da bude veća od nule.",
	"@@Float_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Float_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Float_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Float_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Float_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Float_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Float_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Float_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Float_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Float_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Float_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Float_Raster_tag0@@": "Ulazni raster koji se pretvara u plutajuću tačku.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smer toka ka svakoj ćeliji.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag1@@": "Raster smera protoka može se kreirati pokretanjem funkcije <strong>Smer protoka</strong>.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag0@@": "Definiše vrstu rastera za smer ulaznog protoka.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Raster smera ulaznog protoka je tipa D8. Ovo je podrazumevano.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Raster smera ulaznog protoka je tipa D-Infinity (DINF).",
	"@@Flow-Accumulation_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Raster smera ulaznog protoka je tipa Multi Flow Direction (MFD).",
	"@@Flow-Accumulation_Output-Data-Type_tag0@@": "Zonski raster može biti integral ili pokretni zarez.",
	"@@Flow-Accumulation_Output-Data-Type_tag1@@": "<strong>Plutanje</strong>--Izlazni raster biće tipa pokretni zarez. Ovo je podrazumevano.",
	"@@Flow-Accumulation_Output-Data-Type_tag3@@": "<strong>Ceo broj</strong>--Izlazni raster biće tipa ceo broj.",
	"@@Flow-Accumulation_Weight-Raster_tag0@@": "Opcionalni ulazni raster za primenu težine na svaki piksel.",
	"@@Flow-Accumulation_Weight-Raster_tag1@@": "Ako nije određen nijedan raster težine, na svaki piksel primeniće se zadata težina od 1.",
	"@@Flow-Direction_Flow-Direction-Type_tag0@@": "Definiše vrstu rastera za smer ulaznog protoka.",
	"@@Flow-Direction_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Raster smera ulaznog protoka je tipa D8. Ovo je podrazumevano.",
	"@@Flow-Direction_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Raster smera ulaznog protoka je tipa D-Infinity (DINF).",
	"@@Flow-Direction_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Raster smera ulaznog protoka je tipa Multi Flow Direction (MFD).",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag0@@": "Određuje da li će ivice piksela uvek teći prema spolja ili slediti uobičajena pravila protoka.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag1@@": "<strong>No</strong>--Ako je maksimalni pad sa unutrašnje strane ivice piksela veći od nule, smer protoka će se odrediti kao i obično; u suprotnom, smer protoka će biti ka ivici. Pikseli koji treba da idu od ivice površinskog rastera prema unutra će to i učiniti. Ovo je podrazumevano.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag3@@": "<strong>Da</strong>--Svi pikseli na ivici površinskog rastera teći će suprotno od površinskog rastera.",
	"@@Flow-Direction_Raster_tag0@@": "Ulazni raster predstavlja neprekidnu površinu elevacije.",
	"@@Flow-Distance_Distance-Type_tag0@@": "Određuje da li se izračunava vertikalna ili horizontalna komponenta udaljenosti protoka.",
	"@@Flow-Distance_Distance-Type_tag1@@": "<strong>Horizontalno</strong>--Proračuni udaljenosti protoka predstavljaju horizontalnu komponentu udaljenosti protoka od svakog piksela u domenu do piksela(a) na toku u koji prolaze.",
	"@@Flow-Distance_Distance-Type_tag3@@": "<strong>Vertikalno</strong>--Proračuni udaljenosti protoka predstavljaju horizontalnu komponentu udaljenosti protoka od svakog piksela u domenu do piksela(a) na toku u koji prolaze. Ovo je podrazumevano.",
	"@@Flow-Distance_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smer toka ka svakom pikselu.",
	"@@Flow-Distance_Flow-Direction-Raster_tag1@@": "Kada je obezbeđen opcioni raster smera protoka, smer(ovi) protoka nizbrdo će biti ograničen(i) na one koji su definisani ulaznim smerom protoka.",
	"@@Flow-Distance_Flow-Direction-Raster_tag2@@": "Raster smera protoka može se kreirati pomoću funkcije usmerenja protoka.",
	"@@Flow-Distance_Flow-Direction-Type_tag0@@": "Definiše vrstu rastera za smer ulaznog protoka.",
	"@@Flow-Distance_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Raster smera ulaznog protoka je tipa D8. Ovo je podrazumevano.",
	"@@Flow-Distance_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Raster smera ulaznog protoka je tipa D-Infinity (DINF).",
	"@@Flow-Distance_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Raster smera ulaznog protoka je tipa Multi Flow Direction (MFD).",
	"@@Flow-Distance_Statistics-Type_tag0@@": "Određuje vrstu statistike koja se koristi za izračunavanje udaljenosti protoka kroz više putanja protoka. Ako postoji samo jedan put protoka od svake ćelije do ćelije u protoku, sve vrste statistika daju isti rezultat.",
	"@@Flow-Distance_Statistics-Type_tag1@@": "<strong>Minimum</strong>--Kada postoji više putnih protoka, izračunava se minimalna udaljenost protoka. Ovo je podrazumevano.",
	"@@Flow-Distance_Statistics-Type_tag3@@": "<strong>Ponderisana srednja vrednost</strong>--Tamo gde postoji više putanja protoka, izračunava se ponderisana srednja udaljenost protoka. Proporcija protoka od ćelije do susednih ćelija nizvodno se koristi kao težina za računanje ponderirane srednje vrednosti.",
	"@@Flow-Distance_Statistics-Type_tag5@@": "<strong>Maksimalno</strong>--Kada postoji više putanja protoka, izračunava se maksimalna udaljenost protoka.",
	"@@Flow-Distance_Stream-Raster_tag0@@": "Raster ulaznog protoka koji predstavlja linearnu mrežu protoka.",
	"@@Flow-Distance_Surface-Raster_tag0@@": "Ulazni raster predstavlja neprekidnu površinu elevacije.",
	"@@Flow-Length_Direction-of-Measurement_tag0@@": "Pravac merenja duž putanje protoka.",
	"@@Flow-Length_Direction-of-Measurement_tag1@@": "<strong>Donji tok</strong>--Izračunava pad spuštanja duž putanje protoka, od svake ćelije do odvoda ili otvora na ivici rastera.",
	"@@Flow-Length_Direction-of-Measurement_tag3@@": "<strong>Gornji tok</strong>--Izračunava najdužu udaljenost uzbrdice duž putanje protoka, od svake ćelije do vrha podele za drenažu.",
	"@@Flow-Length_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smer protoka ka svakoj ćeliji.",
	"@@Flow-Length_Flow-Direction-Raster_tag1@@": "Raster smera protoka može se kreirati pokretanjem funkcije <strong>Smer protoka</strong>.",
	"@@Flow-Length_Weight-Raster_tag0@@": "Opcionalni ulazni raster za primenu težine na svaku ćeliju.",
	"@@Flow-Length_Weight-Raster_tag1@@": "Ako nije određen nijedan raster težine, na svaku ćeliju primeniće se zadata težina od 1.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag0@@": "Označava da li se statističke kalkulacije zanemaruju vrednosti ${NoData}.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag1@@": "<strong>Provereno</strong>--Određuje da ako u kvartu postoji vrednost ${NoData}, vrednost ${NoData} bude zanemarena. Pri određivanju izlazne vrednosti koristiće se samo ćelije u okruženju koje imaju vrednosti podataka. Ovo je podrazumevano.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag3@@": "<strong>Neprovereno</strong>--Navodi da ako bilo koja ćelija u okolini ima vrednost ${NoData}, izlaz za ćeliju za obradu biće ${NoData}.",
	"@@Focal-Statistics_Neighborhood_tag0@@": "Oblik oblasti oko svake ćelije koristi se za izračunavanje statistike.",
	"@@Focal-Statistics_Neighborhood_tag1@@": "Svako okruženje ima dodatne parametre za definisanje oblika.",
	"@@Focal-Statistics_Neighborhood_tag2@@": "Anulus, Unutrašnji radijus, Spoljašnji radijus",
	"@@Focal-Statistics_Neighborhood_tag3@@": "Krug, radijus",
	"@@Focal-Statistics_Neighborhood_tag4@@": "Nepravilno, širina, visina, vrednosti okruženja",
	"@@Focal-Statistics_Neighborhood_tag5@@": "Pravougaonik, širina, visina",
	"@@Focal-Statistics_Neighborhood_tag6@@": "Klin, radijus, početni ugao, krajnji ugao",
	"@@Focal-Statistics_Neighborhood_tag7@@": "Težina, širina, visina, vrednosti okoline",
	"@@Focal-Statistics_Neighborhood_tag8@@": "Nepravilno okruženje omogućava vam da odredite oblast nepravilnog oblika oko ćelije za obradu. Upotrijebite tablicu vrednosti okruženja za definisanje oblika jezgra okruženja. Vrednost 0 za položaj ćelije ukazuje da ćelija nije deo okruženja i neće se koristiti za obradu. Vrednost 1 ukazuje da je njena odgovarajuća ćelija (i vrednost) član okruženja.",
	"@@Focal-Statistics_Neighborhood_tag9@@": "Težina okoline je slična vrsti nepravilne okoline po tome što vam omogućava da definišete nepravilnu okolinu oko ćelije za obradu, ali vam takođe omogućava da primenite težine na ulazne vrednosti. Vrednosti u jezgri težine određuju koji će se položaji ćelija uključiti u okruženje i težine pomoću kojih će se množiti. Koristite vrednost 0 da biste isključili ćeliju iz obrade. Pozitivne, negativne i decimalne vrednosti su sve validne opcije koje možete koristiti kao težinu. Za tip susedstva sa težinom podržane su samo statistike srednjeg, standardnog odstupanja ili zbira.",
	"@@Focal-Statistics_Percentile-Value_tag0@@": "Denotira procente za kalkulaciju kada se izabere <strong>Procenat</strong> kao statistički tip. Zadana vrednost je 90, za 90. procenat.",
	"@@Focal-Statistics_Percentile-Value_tag3@@": "Vrednosti mogu biti u rasponu od 0 do 100. 0-ti procenat je u suštini ekvivalentan Minimalnoj statistici, a 100-ti procenat je ekvivalent Maksimalnoj, s izuzetkom da će rezultat biti pokretni zarez. Vrednost 50 će u osnovi proizvesti isti rezultat kao i srednja statistika.",
	"@@Focal-Statistics_Raster_tag0@@": "Taženi ulazni raster.",
	"@@Focal-Statistics_Statistics-Type_tag0@@": "Tip statistike koji se izračunava.",
	"@@Focal-Statistics_Statistics-Type_tag1@@": "<strong>Većina</strong>--Izračunava većinu (vrednost koja se najčešće javlja) ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag3@@": "<strong>Maksimum</strong>--Izračunava maksimalnu (najveću vrednost) ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag5@@": "<strong>Srednja vrednost</strong>--Izračunava srednju (prosečnu vrednost) ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag7@@": "<strong>Sredina</strong>--Izračunava sredinu ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag9@@": "<strong>Minimum</strong>--Izračunava minimalnu (najmanju vrednost) ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag11@@": "<strong>Manjina</strong>--Izračunava manjinu (vrednost koja se najređe javlja) ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag13@@": "<strong>Procenat</strong>--Izračunava procenat ćelija u okruženju. Možete da odredite koji procenat da proračunate uz parametar <strong>Vrednost procenta</strong>.",
	"@@Focal-Statistics_Statistics-Type_tag17@@": "<strong>Raspon</strong>--Izračunava raspon (razlika između najveće i najmanje vrednosti) ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag19@@": "<strong>Standardna devijacija</strong>--Izračunava standardnu devijaciju ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag21@@": "<strong>Zbir</strong>--Izračunava zbir (ukupno svih vrednosti) ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag23@@": "<strong>Raznolikost</strong>--Izračunava raznolikost (broj jedinstvenih vrednosti) ćelija u okruženju.",
	"@@Focal-Statistics_Statistics-Type_tag25@@": "Ako je ulazni raster sa pokretnimzarezom, na raspolaganju su samo srednje, najveće, srednje, minimalno, procenat, raspon, standardno odstupanje i zbirna statistika.",
	"@@Focal-Statistics_Statistics-Type_tag26@@": "Za srednja, srednja, procentualna i standardna odstupanja, izlaz je uvek pokretni zarez.",
	"@@Focal-Statistics_Statistics-Type_tag27@@": "Podrazumevani statistički tip je Srednje.",
	"@@Geometric_Constant-Z_tag0@@": "Navedite konstantnu visinu koja će se koristiti za Geometrijsku funkciju.",
	"@@Geometric_DEM_tag0@@": "Navedite DEM koji će se koristiti za Geometrijsku funkciju. Možete koristiti DEM sadržan u skupu podataka o mozaicima kao rasterski skup podataka ili kao skup podataka mozaika čiji je izlaz DEM.",
	"@@Geometric_Geoid_tag0@@": "Većina elevacionih setova podataka, kao što su USGS NED ili ArcGIS Online World Elevation, su orometrijske visine, pa je potrebno odabrati Geoid korekciju za kompatibilnost sa satelitskim RPC-ovima, za koje su potrebne elipsoidne visine. Obeležite <strong>Geoid</strong> okvir za potvrdu u polju za primenu korekcije geoida (EGM96) na z-vrednosti, osim ako se vaš DEM već odnosi na elipsoidne visine.",
	"@@Geometric_Method_tag0@@": "Odaberite metodu visine za geometrijsku funkciju:",
	"@@Geometric_Method_tag1@@": "Koristite Constant Z - odredite konstantnu visinu za obavljanje Geometrijske funkcije.",
	"@@Geometric_Method_tag2@@": "Koristite DEM - odredite DEM za obavljanje funkcije geometrije.",
	"@@Geometric_Raster_tag0@@": "Ulazni raster.",
	"@@Geometric_Z-Factor_tag0@@": "Satelitski racionalni polinomski koeficijenti (RPC) skaliraju se za skupove podataka o nadmorskoj visini sa vertikalnim jedinicama u metrima. Ako vaša elevacija koristi druge vertikalne jedinice, unesite <strong>Z faktor</strong> za prebacivanje u metre. Na primer, ako su vaše nadmorske visine u stopama, koristili biste vrednost 0,3048 da biste jedinice nadmorske visine pretvorili iz stopa u metre.",
	"@@Geometric_Z-Offset_tag0@@": "Bazna vrednost koja se dodaje na vrednosti nadmorske visine u DEM-u. Ovo bi se moglo iskoristiti za kompenzaciju vrednosti nadmorske visine koje ne počinju na nivou mora.",
	"@@Geometric_Tolerance_tag0@@": "Navedite maksimalnu podnošljivu grešku u geometrijskoj funkciji, datu u broju piksela. Podrazumevano za NITF (NCDRD) tip rastera je dva.",
	"@@Grayscale_Raster_tag0@@": "Ulazni raster.",
	"@@Grayscale_Conversion-Parameters_tag0@@": "Težine za svaki opseg koji sadrži ulazni raster.",
	"@@Greater-Than_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Greater-Than_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Greater-Than_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Greater-Than_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Greater-Than_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Greater-Than_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Greater-Than_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Greater-Than_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Greater-Than_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Greater-Than_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Greater-Than_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Greater-Than_Raster_tag0@@": "Ulaz koji se testira utvrđuje da li je veći od drugog ulaza.",
	"@@Greater-Than_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Greater-Than_Raster2_tag0@@": "Ulaz u odnosu na koji se testira prvi ulaz mora biti veći od.",
	"@@Greater-Than_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Greater-Than-Equal_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Greater-Than-Equal_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Greater-Than-Equal_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Greater-Than-Equal_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Greater-Than-Equal_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Greater-Than-Equal_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Greater-Than-Equal_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Greater-Than-Equal_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Greater-Than-Equal_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Greater-Than-Equal_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Greater-Than-Equal_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Greater-Than-Equal_Raster_tag0@@": "Ulaz se testira da bi se utvrdilo da li je veći ili jednak sa drugim ulazom.",
	"@@Greater-Than-Equal_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Greater-Than-Equal_Raster2_tag0@@": "Ulaz na osnovu kojeg se testira prvi ulaz mora biti veći ili jednak.",
	"@@Greater-Than-Equal_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Heat-Index_Heat-Index-Units_tag0@@": "Merna jedinica povezana sa izlaznim rasterom. Dostupne izlazne jedinice su Celzijus, Farenhejt i Kelvin.",
	"@@Heat-Index_Relative-Humidity-Raster_tag0@@": "Jednopojasni raster gde vrednosti piksela predstavljaju relativnu vlažnost u procentima od 0 do 100.",
	"@@Heat-Index_Temperature-Raster_tag0@@": "Jednopojasni raster gde vrednosti piksela predstavljaju temperaturu spoljnog vazduha.",
	"@@Heat-Index_Temperature-Units_tag0@@": "Merna jedinica povezana sa rasterom ulazne temperature. Dostupne ulazne jedinice su Celzijus, Farenhejt i Kelvin.",
	"@@Hillshade_Altitude_tag0@@": "Nadmorska visina je sunčev ugao nadmorske visine iznad horizonta i kreće se od 0 do 90 stepeni. Vrednost od 0 stepeni ukazuje da je sunce na horizontu, odnosno na istoj vodoravnoj ravnini kao i referentni okvir. Vrednost od 90 stepeni ukazuje da je sunce direktno iznad.",
	"@@Hillshade_Altitude_tag1@@": "Ovaj parametar važi samo kada je <strong>Hillshade tip</strong> podešen kao <strong>Tradicionalni</strong> . Zadana vrednost je 45 stepeni iznad horizonta.",
	"@@Hillshade_Azimuth_tag0@@": "Azimut je relativan položaj sunca duž horizonta (u stepenima). Ovaj položaj je označen sa uglom sunca izmerenim u smeru kazaljke na satu od severa. Azimut od 0 stepeni označava sever, istok 90 stepeni, jug 180 stepeni, a zapad 270 stepeni.",
	"@@Hillshade_Azimuth_tag1@@": "Ovaj parametar važi samo kada je <strong>Hillshade tip</strong> podešen kao <strong>Tradicionalni</strong> . Zadana vrednost je 315 stepeni, što je sa severozapada.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag0@@": "Korišćenjem ove opcije izbegavate prekomerno formiranje artefakata koji se mogu pojaviti duž ivica rastera. Izlazni pikseli duž ivice rastera ili pored NoData piksela popunjavaće se sa NoData; stoga se preporučuje da se ovaj parametar koristi samo kod skupova podataka mozaika elevacije koji se preklapaju. Kada su dostupni pikseli koji se preklapaju, područja NoData prikazaće vrednosti preklapajućih piksela umesto praznih piksela.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag1@@": "Neoznačeno--Bilinearno preusmerivanje primenjivaće se ravnomerno da biste ponovo oblikovali svoje senčenje. Ovu opciju iskoristite kada se pridruži skupu podataka mozaika koji sadrži vaše rasterske podatke o nadmorskoj visini. Ovo je podrazumevano.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag2@@": "Označeno--Bilinearno preusmeravanje će se koristiti unutar senke, osim duž ivica rastera ili pored piksela NoData. Ovi pikseli će se popuniti sa NoData i prikazati vrednosti preklapajućih piksela, čime se smanjuju svi oštri rubni efekti koji se u protivnom mogu pojaviti. Koristite ovu opciju kada se podaci mozaika koji sadrže raterske podatke nadmorske visine sastoje od preklapajućih predmeta ili pločica.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag3@@": "Rezultati funkcije mogu zavisiti od podataka. Ako u svom izlazu posmatrate artefakte graničnih pločica, potvrdite alternativno stanje u polju za potvrdu.",
	"@@Hillshade_Hillshade-Type_tag0@@": "Kontroliše izvor osvetljenja za senku:",
	"@@Hillshade_Hillshade-Type_tag1@@": "Tradicionalno--izračunava senke iz jednog smera osvetljenja. Ovo je podrazumevano. Možete da podesite <strong>Azimut</strong> i <strong>Nadmorsku visinu</strong> da biste kontrolisali lokaciju izvora svetlosti.",
	"@@Hillshade_Hillshade-Type_tag6@@": "Višesmerno--Kombinuje svetlost iz više izvora da bi se pojačala vizualizacija terena.",
	"@@Hillshade_Pixel-Size-Factor_tag0@@": "Faktor veličine piksela računa na promene razmera dok gledalac uvećava i smanjuje prikaz na mapi. Kontroliše stopu pri kojoj se <strong>Z faktor</strong> menja.",
	"@@Hillshade_Pixel-Size-Factor_tag3@@": "Ovaj parametar važi samo kada je <strong>Skaliranje</strong> podešeno kao <strong>Podešeno</strong> . Podrazumevana vrednost je 0,024.",
	"@@Hillshade_Pixel-Size-Power_tag0@@": "Veličina piksela računa se na promenu visine (ili skale) dok gledalac uvećava i smanjuje prikaz na mapi. To je eksponencijalna vrednost primenjena na veličinu piksela u jednačini koja kontroliše stopu pri kojoj se <strong>Z faktor</strong> menja da bi se izbegao značajan gubitak reljefa.",
	"@@Hillshade_Pixel-Size-Power_tag3@@": "Ovaj parametar važi samo kada je <strong>Skaliranje</strong> podešeno kao <strong>Podešeno</strong> . Podrazumevana vrednost je 0,664.",
	"@@Hillshade_Raster_tag0@@": "Podaci unosa visine.",
	"@@Hillshade_Scaling_tag0@@": "Osenčeni rezultat se dinamički skalira prilagođavanjem z-faktora pomoću jedne od dve mogućnosti:",
	"@@Hillshade_Scaling_tag1@@": "Podešeno--Ovo se primenjuje na nelinearno podešavanje pomoću podrazumevanih vrednosti <strong>Snage veličine piksela</strong> i <strong>Faktora veličine piksela</strong>, koji sadrže veliki spektar raznovrsnih promena nadmorske visine (skala) dok pregledač smanjuje i povećava zumiranje. Podešavanje parametra <strong>Podešeno</strong> preporučuje se kada koristiti svetski skup podataka.",
	"@@Hillshade_Scaling_tag8@@": "Nijedan--Nije primenjeno skaliranje. Ovo je idealno za jedan rasterski niz podataka koji pokriva lokalno područje. Ovo se ne preporučuje za svetske skupove podataka sa velikim varijacijama mapa nadmorske visine ili višesmernih mapa jer će to stvoriti reljef terena s malim odstupanjima na malim merilima.",
	"@@Hillshade_Z-Factor_tag0@@": "Z-faktor je faktor za skaliranje koji se koristi za konvertovanje vrednosti elevacije u dve svrhe:",
	"@@Hillshade_Z-Factor_tag1@@": "Konvertovanje jedinica elevacije (kao što su metri ili stope) u jedinice za horizontalne koordinate sloja, koje mogu biti stope, metri ili stepeni",
	"@@Hillshade_Z-Factor_tag2@@": "Dodavanje vertikalnog preuveličavanja radi vizuelnog efekta",
	"@@Int_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Int_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Int_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Int_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Int_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Int_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Int_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Int_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Int_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Int_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Int_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Int_Raster_tag0@@": "Ulazni raster koji treba pretvoriti u celi broj.",
	"@@Interpolate-Irregular-Data_Cellsize_tag0@@": "Veličina ćelije za izlazni raster će se automatski detektovati; međutim, to možete promeniti. Iako se veličina ćelije može menjati, opseg rasterskih podataka ostaće isti.",
	"@@Interpolate-Irregular-Data_Input-Samples_tag0@@": "Podaci o ulaznim tačkama.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag0@@": "Postoje četiri načina ponovnog formiranja ove funkcije:",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag1@@": "<strong>Ponderisana inverzna udaljenost</strong>-- Određuje vrednosti ćelija koristeći linearno odmerenu kombinaciju skupa tačaka uzorka ili ćelija. Težina je funkcija obratne udaljenosti od poznatih tačaka ili ćelija.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag3@@": "<strong>Linearno tiniranje</strong>--Koristi trouglastu nepravilnu mrežu od središnjih tačaka svake ćelije na nepravilnom rasteru za interpoliranje površine koja se zatim pretvara u uobičajeni raster.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag5@@": "<strong>Prirodni sused</strong>--Pronalazi najbliži podskup ulaznih uzoraka na mestu upita i na njih primenjuje tegove na osnovu proporcionalnih područja kako bi se interpolirala vrednost.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag7@@": "<strong>Najbliži sused</strong>--Izračunava vrednost piksela korišćenjem najbližeg piksela. Ako ne postoji izvorni piksel, u izlazu se ne može kreirati novi piksel. Ovo je podrazumevano.",
	"@@Interpolate-Irregular-Data_Search-Radius_tag0@@": "Identifikuje broj piksela koji će se uključiti za odabrani način ponovnog oblikovanja. Zadata vrednost je ${3} piksela.",
	"@@Interpolate-Irregular-Data_Value-Field_tag0@@": "Ako kao ulaz izaberete klasu karakteristika tačke, moraćete da identifikujete polje u tabeli atributa sa vrednostima bodova",
	"@@Is-Null_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Is-Null_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Is-Null_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Is-Null_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Is-Null_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Is-Null_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Is-Null_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Is-Null_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Is-Null_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Is-Null_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Is-Null_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Is-Null_Raster_tag0@@": "Ulazni raster se testira da identifikuje ćelije koje su ${NoData} (nula).",
	"@@Is-Null_Raster_tag1@@": "Ulaz može biti tipa celog broja ili sa pomičnim zarezom.",
	"@@Key-Metadata_Band-Names_tag0@@": "Ovo se koristi za nadjačavanje imena rastera u rasteru. To je niz odvojen zarezom koji predstavlja ažurirana imena opsega.",
	"@@Key-Metadata_Band-Names_tag1@@": "Ovaj parametar je opcionalan.",
	"@@Key-Metadata_Metadata-JSON_tag0@@": "Metapodaci ključa koji se dodaju u izlazni raster opisan kao JSON niz koji predstavlja kolekciju parova ključ-vrednost. Sledi primer JSON niza koji se može koristiti kao ulaz u ovu funkciju. Svi unosi za ovaj parametar treba da slede isti format.",
	"@@Key-Metadata_Metadata-JSON_tag1@@": "JSON niz koji predstavlja ključne metapodatke",
	"@@Key-Metadata_Metadata-JSON_tag2@@": "{ \"CloudCover\": 4, \"BandProperties\":[ { \"BandName\": \"Blue\", \"WavelengthMin\": 445, \"WavelengthMax\": 516 }, { \"BandName\": \"Green\", \"WavelengthMin\": 506, \"WavelengthMax\": 595 }, ]}",
	"@@Key-Metadata_Property-Name_tag0@@": "Naziv ključa svojstva na nivou baze podataka koji treba nadjačati.",
	"@@Key-Metadata_Raster_tag0@@": "Rasterski ili mozaični skup podataka koji sadrži ključne metapodatke koje želite da umetnete ili prebrisete.",
	"@@Key-Metadata_Value_tag0@@": "Prevelika vrednost svojstva ključa na nivou skupa podataka koji želite da postavite.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag0@@": "Ovaj parametar simulira povećanje u nastojanju za preovlađivanjetroškova kao akumulativna povećanja troškova. Koristi se za modeliranje zamora putnika. Rastući akumulativni trošak dostizanja ćelije množi se sa stopom otpora i dodaje se na trošak prelaska u narednu ćeliju.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag1@@": "To je modifikovana verzija formule složene kamatne stope koja se koristi za izračunavanje prividnih troškova prelaska kroz ćeliju. Kako se vrednost stope otpornosti povećava, povećava se i cena ćelija koje se kasnije posete. Što je veća stopa otpora, veći su troškovi da se dođe do sledeće ćelije, koja se svodi na svako naredno kretanje. Pošto je stopa otpora slična složenoj stopi i obično su vrednosti akumulativnih troškova veoma velike, predlažu se male stope otpora, poput 0,005 ili čak i manje, u zavisnosti od akumulativnih vrednosti troškova.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Least-Cost-Path_Capacity_tag0@@": "Definiše troškovnu sposobnost za putnika za izvor. Kalkulacije troškova nastavljaju se za svaki izvor sve dok se ne dostigne zadani kapacitet.",
	"@@Least-Cost-Path_Capacity_tag1@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Least-Cost-Path_Cost-Raster_tag0@@": "Traženi ulazni raster koji definiše impedancu ili trošak za pomeranje planimetrije kroz svaku ćeliju. Vrednost na lokaciji svake ćelije predstavlja rastojanje trošak-po-jedinici za pomeranje kroz ćeliju. Svaka vrednost lokacije ćelije se množi sa rezolucijom ćelije dok se takođe kompenzuje dijagonalni pokret za zadržavanje ukupnog troška prolaska kroz ćeliju.",
	"@@Least-Cost-Path_Cost-Raster_tag1@@": "Vrednosti za <strong>Raster troškova</strong> mogu da budu ceo broj ili plutajući zarez, ali ne mogu da budu negativni ili nula.",
	"@@Least-Cost-Path_Destination-Field_tag0@@": "Polje koje se koristi za pribavljanje vrednosti za lokacije odredišta.",
	"@@Least-Cost-Path_Destination-Raster_tag0@@": "Potrebni ulazni raster koji identifikuje piksele iz kojih je put najmanje troškova utvrđen do najmanje skupog izvora. Ovaj ulaz se sastoji od piksela koji imaju validne vrednosti, a ostalim pikselima mora se dodeliti ${NoData}. Vrednosti od 0 su važeće.",
	"@@Least-Cost-Path_Maximum-Distance_tag0@@": "Granične vrednosti koje akumulativne vrednosti troškova ne mogu da pređu. Ako udaljenost akumulativnih troškova prelazi ovu vrednost, izlazna vrednost za lokaciju ćelija biće ${NoData}. Maksimalna udaljenost definiše stepen za koji se izračunavaju akumulativne udaljenosti troškova. Zadata udaljenost je u visini izlaznog rastera.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag0@@": "Ovaj parametar omogućava kontrolu načina putovanja ili veličine u izvoru. Što je veći množilac, to je veći trošak za prelazak kroz svaku ćeliju.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag1@@": "Vrednosti moraju biti veće od nule. Podrazumevano je 1.",
	"@@Least-Cost-Path_Path-Type_tag0@@": "Ključna reč koja definiše način na koji će se vrednosti i zone na ulaznim odredišnim podacima tumačiti u proračunima putanje troškova.",
	"@@Least-Cost-Path_Path-Type_tag1@@": "<strong>Najbolji pojedinačni</strong>--Za sve piksele na ulaznim odredišnim podacima, put sa najmanjim troškovima izvodi se iz piksela sa minimumom putanji najmanjeg troška do izvornih ćelija.",
	"@@Least-Cost-Path_Path-Type_tag3@@": "<strong>Svaka ćelija</strong>--Staza najmanjeg troška određuje se za svaki piksel sa važećim vrednostima na ulaznim odredišnim podacima i sprema se na izlazni raster. Svaka ćelija ulaznih odredišnih podataka tretira se zasebno, a za svaku ćeliju odrediće se put sa najmanje troškova.",
	"@@Least-Cost-Path_Path-Type_tag5@@": "<strong>Svaka zona</strong>--Staza najmanjeg troška određuje se za svaku zonu sa ulaznim odredišnim podacima i čuva se na izlaznom rasteru. Staza sa najmanje troškova za svaku zonu počinje od piksela sa najmanjim ponderiranim udaljenostima u zoni.",
	"@@Least-Cost-Path_Source-Raster_tag0@@": "Ovo je potreban ulazni raster koji identifikuje ćelije ili lokacije iz kojih se izračunava najmanje nakupljena udaljenost troškova za svaku lokaciju izlazne ćelije.",
	"@@Least-Cost-Path_Start-Cost_tag0@@": "Početni trošak od kog se započinje kalkulacija troškova. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih sa izvorom. Umesto da započne sa cenom 0, algoritam troškova počeće sa navedenom vrednostima.",
	"@@Least-Cost-Path_Start-Cost_tag1@@": "Vrednost mora biti nula ili veća. Podrazumevano je 0.",
	"@@Least-Cost-Path_Travel-Direction_tag0@@": "Definiše smer putnika prilikom primene stope otpora izvora i početne cene izvora.",
	"@@Least-Cost-Path_Travel-Direction_tag1@@": "<strong>Od izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od ulaznog izvora i prelazeći na ćelije koje nisu izvor. Ovo je podrazumevano.",
	"@@Least-Cost-Path_Travel-Direction_tag3@@": "<strong>Do izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od svake ćelije koja nije izvor i prebacujući se nazad ka ulaznom izvoru.",
	"@@Least-Cost-Path_Travel-Direction_tag5@@": "Navedite ključnu reč za <strong>Od izvora</strong> ili <strong>Do izvora</strong>, koja će biti primenjena na sve izvore, ili navedite polje u <strong>Raster izvora</strong> koje sadrži ključne reči za identifikaciju smera putovanja za svaki izvor. To polje mora da sadrži niz ${FROM_SOURCE} ili ${TO_SOURCE}.",
	"@@Less-Than_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Less-Than_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Less-Than_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Less-Than_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Less-Than_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Less-Than_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Less-Than_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Less-Than_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Less-Than_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Less-Than_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Less-Than_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Less-Than_Raster_tag0@@": "Ulaz se testira da bi se utvrdilo da li je manji od drugog ulaza.",
	"@@Less-Than_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Less-Than_Raster2_tag0@@": "Ulaz na osnovu koga se testira prvi ulaz je manji od.",
	"@@Less-Than_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Less-Than-Equal_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Less-Than-Equal_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Less-Than-Equal_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Less-Than-Equal_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Less-Than-Equal_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Less-Than-Equal_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Less-Than-Equal_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Less-Than-Equal_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Less-Than-Equal_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Less-Than-Equal_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Less-Than-Equal_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Less-Than-Equal_Raster_tag0@@": "Ulaz se testira da bi se utvrdilo da li je drugi ili manji od drugog ulaza.",
	"@@Less-Than-Equal_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Less-Than-Equal_Raster2_tag0@@": "Ulaz na opsnovu kog se testira prvi ulaz je manji ili jednak sa.",
	"@@Less-Than-Equal_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Ln_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Ln_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Ln_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Ln_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Ln_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Ln_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Ln_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Ln_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Ln_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Ln_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Ln_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Ln_Raster_tag0@@": "Unosne vrednosti za koje će se naći prirodni logaritam (Ln).",
	"@@Log10_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Log10_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Log10_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Log10_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Log10_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Log10_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Log10_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Log10_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Log10_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Log10_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Log10_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Log10_Raster_tag0@@": "Unosne vrednosti za koje se može naći logaritam osnovne 10.",
	"@@Log2_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Log2_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Log2_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Log2_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Log2_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Log2_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Log2_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Log2_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Log2_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Log2_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Log2_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Log2_Raster_tag0@@": "Unosne vrednosti za koje se može naći logaritam osnovne 2.",
	"@@Lookup_Field_tag0@@": "Polje koje sadrži željene vrednosti za novi raster.",
	"@@Lookup_Field_tag1@@": "Mora biti numerički tip.",
	"@@Lookup_Raster_tag0@@": "Ulazni raster koji sadrži polje iz kojeg se može kreirati novi raster.",
	"@@Lookup_Raster_tag1@@": "Može biti tip celog broja ili sa pokretnim zarezom.",
	"@@Mask_Included-Ranges_tag0@@": "Uključeni rasponi se mogu specificirati za svaki opseg određivanjem minimalne i maksimalne vrijednosti; bilo koje vrednosti izvan raspona vraćaju se u obliku ${NoData}. Piksel je uključen ako vrednost piksela padne u bilo kom od navedenih raspona. Zbog toga, ako opseg 1 ima raspon 5-10, a opseg 2 ima raspon 15-20, a vrednost piksela za opseg 1 je 8, taj piksel se neće maskirati.",
	"@@Mask_NoData-Interpretation_tag0@@": "Ovo se odnosi na to kako će <strong>${NoData} vrednosti</strong> uticati na izlaznu sliku.",
	"@@Mask_NoData-Interpretation_tag3@@": "Možete da izaberete jednu od sledeće dve opcije:",
	"@@Mask_NoData-Interpretation_tag4@@": "<strong>Uklopi sve</strong>--Vrednosti ${NoData} koje navedete za svaki opseg moraju se pojaviti u istom pikselu da bi izlazna slika sadržala ${NoData} piksel.",
	"@@Mask_NoData-Interpretation_tag6@@": "<strong>Uklopi bilo koji</strong>--Ako se vrednost ${NoData} koju navedete pojavi za piksel u određenom opsegu, taj piksel na izlaznoj slici će biti ${NoData}. Ovo je podrazumevano.",
	"@@Mask_NoData-Values_tag0@@": "Vrednosti NoData mogu se navesti za svaki opseg. Možete navesti više od jedne vrednosti unosom liste ograničenom razmakom.",
	"@@Mask_Raster_tag0@@": "Ulazni raster.",
	"@@Minus_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Minus_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Minus_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Minus_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Minus_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Minus_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Minus_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Minus_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Minus_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Minus_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Minus_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Minus_Raster_tag0@@": "Ulaz od kojeg se oduzimaju vrednosti drugog ulaza.",
	"@@Minus_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Minus_Raster2_tag0@@": "Ulazne vrednosti za oduzimanje od vrednosti za prvi unos.",
	"@@Minus_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@ML-Classify_Raster_tag0@@": "Vrednosti ulaza koje se oduzimaju od vrednosti prvog ulaza.",
	"@@ML-Classify_Signature-File-or-URL_tag0@@": "Datoteka za potpis ${.gsg}.",
	"@@Mod_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Mod_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Mod_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Mod_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Mod_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Mod_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Mod_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Mod_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Mod_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Mod_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Mod_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Mod_Raster_tag0@@": "Unos numeratora.",
	"@@Mod_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Mod_Raster2_tag0@@": "Unos denominatora.",
	"@@Mod_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Mosaic-Rasters_Operation_tag0@@": "Rešite bilo koji sukob kada imate delove dve ili više slika koje se preklapaju. Opcije uključuju sledeće:",
	"@@Mosaic-Rasters_Operation_tag1@@": "<strong>Uklapanje</strong>--Izračunajte i prikažite prosek piksela koji se preklapaju tako što ćete dati veću težinu pikselima koji su bliži susednim slikama tako da je rezultat glatkiji prikaz. Ovo je podrazumevano.",
	"@@Mosaic-Rasters_Operation_tag3@@": "<strong>Prvi</strong>--Prikažite piksele sa prve slike na listi slika koje se preklapaju sa datog područja.",
	"@@Mosaic-Rasters_Operation_tag5@@": "<strong>Poslednji</strong>--Prikažite piksele sa poslednje slike na listi slika koje se preklapaju sa datog područja.",
	"@@Mosaic-Rasters_Operation_tag7@@": "<strong>Maksimalno</strong>--Prikažite najvredniji piksel od svih slojeva koji se preklapaju. Ovom opcijom nemate garanciju za prikazivanje piksela samo jedne slike u preklapajućem području, već kombinaciju svih potencijalnih slojeva.",
	"@@Mosaic-Rasters_Operation_tag9@@": "<strong>Srednje</strong>--Izračunajte i prikažite prosek piksela koji se preklapaju.",
	"@@Mosaic-Rasters_Operation_tag11@@": "<strong>Min.</strong>--Prikažite piksel sa najmanjom vrednošću od svih slojeva koji se preklapaju. Ovom opcijom nemate garanciju za prikazivanje piksela samo jedne slike u preklapajućem području, već kombinaciju svih potencijalnih slojeva.",
	"@@Mosaic-Rasters_Rasters_tag0@@": "Izaberite rastere koje želite da mozaikujete zajedno da biste formirali jednu sliku.",
	"@@NDVI_Infrared-Band-ID_tag0@@": "Određuje ID opsega koji predstavlja bliski infracrveni deo elektromagnetnog spektra.",
	"@@NDVI_Raster_tag0@@": "Ulazni multispektralni raster.",
	"@@NDVI_Scientific-Output_tag0@@": "Izlazne vrednosti će se kretati od -1,0 do 1,0, što se koristi u mnogim naučnim primenama.",
	"@@NDVI_Visible-Band-ID_tag0@@": "Određuje ID opsega koji predstavlja crveni deo elektromagnetnog spektra.",
	"@@NDVI-Colorized_Color-Ramp_tag0@@": "Izaberite unapred definisanu šemu boja sa padajuće liste.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag0@@": "Izaberite vrstu boje u kojoj će se kolorizovati NDVI izlaz:",
	"@@NDVI-Colorized_Color-Scheme-Type_tag1@@": "Colormap - Izaberite unapred definisanu mapu boja sa padajuće liste. Alternativno, možete pregledati postojeću datoteku mape boja koja postoji.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag2@@": "Rampa boja - Izaberite unapred definisanu šemu boja sa padajuće liste.",
	"@@NDVI-Colorized_Colormap_tag0@@": "Izaberite unapred definisanu mapu boja sa padajuće liste. Takođe možete pregledati postojeću datoteku mape boja.",
	"@@NDVI-Colorized_Infrared-Band-ID_tag0@@": "Određuje ID opsega koji predstavlja bliski infracrveni deo elektromagnetnog spektra.",
	"@@NDVI-Colorized_Raster_tag0@@": "Ulazni multispektralni raster.",
	"@@NDVI-Colorized_Scientific-Output_tag0@@": "Izlazne vrednosti će se kretati od -1,0 do 1,0, što se koristi u mnogim naučnim primenama.",
	"@@NDVI-Colorized_Visible-Band-ID_tag0@@": "Određuje ID opsega koji predstavlja crveni deo elektromagnetnog spektra.",
	"@@Negate_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Negate_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Negate_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Negate_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Negate_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Negate_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Negate_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Negate_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Negate_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Negate_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Negate_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Negate_Raster_tag0@@": "Ulazni raster treba zanemariti (pomnoženo sa -1).",
	"@@Nibble_Mask-Raster_tag0@@": "Potreban ulazni raster koji se koristi kao maska.",
	"@@Nibble_Mask-Raster_tag1@@": "Ćelije sa NoData kao njihova vrednost bit će upisane na ulazu <strong>Raster</strong>.",
	"@@Nibble_Mask-Raster_tag4@@": "Raster maske može biti tip celog broja ili sa pokretnim zarezom.",
	"@@Nibble_Nibble-NoData-cells_tag0@@": "Definiše da li će ćelije NoData u ulaznom rasteru ostati NoData na izlaznom rasteru.",
	"@@Nibble_Nibble-NoData-cells_tag1@@": "<strong>Ne</strong>--Određuje da će NoData ćelije u ulaznom rasteru ostati NoData na izlazu. Ovo je podrazumevano.",
	"@@Nibble_Nibble-NoData-cells_tag3@@": "<strong>Da</strong>--Navodi da ćelije sa NoData u ulaznom rasteru i u okviru maske ne mogu da se ubace u validne izlazne vrednosti za ćeliju.",
	"@@Nibble_Raster_tag0@@": "Potreban ulazni raster koji će se skratiti.",
	"@@Nibble_Raster_tag1@@": "Ulazni raster može biti tip celog broja ili sa pokretnim zarezom.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag0@@": "Definiše da li je vrednost ${NoData} u ulaznom rasteru dozvoljeno da zađe u područje definisano rasterom maski.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag1@@": "<strong>Da</strong>--Određuje da će se vrednost najbližeg okružnja koristiti bez obzira da li je ${NoData} ili druga vrednost podataka u ulaznom rasteru. Vrednosti ${NoData} u ulaznom rasteru može da se upotrebi na područja koja su definisana u maski ako su najbliža okruženju. Ovo je podrazumevano.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag3@@": "<strong>Ne</strong>--Određuje da samo vrednosti podataka mogu da se nižu u područja definisana u rasteru maski. Vrednosti ${NoData} u ulaznom rasteru ne smeju da se nižu u područja koja su definirana u rasteru maski, čak i ako su najbliže okruženje.",
	"@@Nibble_Zone-Raster_tag0@@": "Raster ulazne zone.",
	"@@Nibble_Zone-Raster_tag1@@": "Zona predstavlja sve ćelije u rasteru koje imaju istu vrednost, bez obzira da li su povezane ili ne. Sloj ulazne zone definiše oblik, vrednosti i lokacije zona. Zonski raster može biti tipa celog broja ili s pomičnim zarezom.",
	"@@Not-Equal_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Not-Equal_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Not-Equal_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Not-Equal_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Not-Equal_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Not-Equal_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Not-Equal_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Not-Equal_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Not-Equal_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Not-Equal_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Not-Equal_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Not-Equal_Raster_tag0@@": "Ulaz koji će se drugim ulazom uporediti sa nejednakošću.",
	"@@Not-Equal_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Not-Equal_Raster2_tag0@@": "Unos koji će biti upoređen sa prvim ulaznim slojem.",
	"@@Not-Equal_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Pansharpening_Multispectral_tag0@@": "Multispektralni raster koji želite da oštrite pomoću panhromatskog pojasa.",
	"@@Pansharpening_Panchromatic_tag0@@": "Jednopojasni raster visoke rezolucije koji će se koristiti za pooštrenje multipektralnog rastera niže rezolucije.",
	"@@Pansharpening_Pansharpening-Type_tag0@@": "Izaberite algoritam oštrenja paniranja koji želite da koristite.",
	"@@Pansharpening_Pansharpening-Type_tag1@@": "Brovei--Koristi Brovei algoritam zasnovan na spektralnom modeliranju za fuziju podataka.",
	"@@Pansharpening_Pansharpening-Type_tag2@@": "Esri--Koristi Esri algoritam zasnovan na spektralnom modeliranju za fuziju podataka.",
	"@@Pansharpening_Pansharpening-Type_tag3@@": "Gram-Schmidt--Koristi Gram-Schmidt algoritam za spektralno oštrenja za izoštravanje multispektralnih podataka.",
	"@@Pansharpening_Pansharpening-Type_tag4@@": "IHS - Koristi prostor boja intenziteta, nijanse i zasićenosti za fuziju podataka.",
	"@@Pansharpening_Pansharpening-Type_tag5@@": "Srednja vrednost - koristi prosečnu vrednost između crvene, zelene i plave vrednosti i vrednosti panchromatic piksela.",
	"@@Pansharpening_Weights_tag0@@": "Navedite težinu crvenih, zelenih, plavih i infracrvenih opsega. Sve vrednosti bi trebale biti u opsegu od 0 do 1.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Ovaj parametar simulira povećanje u nastojanju za preovlađivanjetroškova kao akumulativna povećanja troškova. Koristi se za modeliranje zamora putnika. Rastući akumulativni trošak dostizanja ćelije množi se sa stopom otpora i dodaje se na trošak prelaska u narednu ćeliju.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "To je modifikovana verzija formule složene kamatne stope koja se koristi za izračunavanje prividnih troškova prelaska kroz ćeliju. Kako se vrednost stope otpornosti povećava, povećava se i cena ćelija koje se kasnije posete. Što je veća stopa otpora, veći su troškovi da se dođe do sledeće ćelije, koja se svodi na svako naredno kretanje. Pošto je stopa otpora slična složenoj stopi i obično su vrednosti akumulativnih troškova veoma velike, predlažu se male stope otpora, poput 0,005 ili čak i manje, u zavisnosti od akumulativnih vrednosti troškova.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Path-Distance_Capacity_tag0@@": "Definiše troškovnu sposobnost za putnika za izvor. Kalkulacije troškova nastavljaju se za svaki izvor sve dok se ne dostigne zadani kapacitet.",
	"@@Path-Distance_Capacity_tag1@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Path-Distance_Cost-Raster_tag0@@": "Traženi ulazni raster koji definiše impedancu ili trošak za pomeranje planimetrije kroz svaku ćeliju. Vrednost na lokaciji svake ćelije predstavlja rastojanje trošak-po-jedinici za pomeranje kroz ćeliju. Svaka vrednost lokacije ćelije se množi sa rezolucijom ćelije dok se takođe kompenzuje dijagonalni pokret za zadržavanje ukupnog troška prolaska kroz ćeliju.",
	"@@Path-Distance_Cost-Raster_tag1@@": "Vrednosti za <strong>Raster troškova</strong> mogu da budu ceo broj ili plutajući zarez, ali ne mogu da budu negativni ili nula.",
	"@@Path-Distance_horizontalfactor_tag0@@": "<p>Definiše odnos između horizontalnog faktora troškova i horizontalnog relativnog ugla kretanja (HRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani grafikon vertikalnog faktora. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: HF i HRMA. HF je skraćenica za horizontalni faktor, koji definiše horizontalnu poteškoću pri prelasku iz jedne ćelije u drugu. HRMA je skraćenica za horizontalni relativni ugao kretanja, koji identifikuje ugao između horizontalnog smera od ćelije i smera kretanja.</p><p><strong>Horizonalni tipovi faktora</strong>uključuju sledeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od ugla preseka, HF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom je vrednost beskonačno.</li><li><strong>Unapred</strong>--Utvrđuje da je dozvoljeno samo kretanje unapred. HRMA mora da bude veći od ili jednak 0 i manji od 90 stepeni (0 &lt;= HRMA &lt; 90). Ako je HRMA veći od 0 i manji od 45 stepeni, HF za ćeliju je podešen na vrednost povezanu sa nultim faktorom. Ako je HRMA veći od ili jednak 45 stepeni, koristi se vrednost modifikatora bočne vrednosti. HF za bilo koju HRMA vrednost jednaku ili veću od 90 stepeni podešena je na beskonačno.</li><li><strong>Linearno</strong>--Navodi da je HF linearna funkcija HRMA.</li><li><strong>Inverzno linearno</strong>--Navodi da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Identifikuje da će se datoteka tabele koristiti za definisanje horizontalnog grafika faktora koji se koristi za određivanje HF-ova.</li></ul><p>Modifikacije za horizontalne faktore uključuje sledeće:</p><ul><li><strong>Faktor nule</strong>--Horizontalni faktor koji će se koristiti kada je HRMA nula. Ovaj faktor pozicionira y presek za bilo koje horizontalne funkcije faktora.</li><li><strong>Ugao preseka</strong>--Definiše HRMA ugao iza kog se HF postavlja na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koji se koristi uz<strong>Linearne</strong>i<strong>Inverzne linearne</strong>ključne reči za horizontalni faktor. Nagib je naveden kao razlomak podizanja tokom kretanja (na primer, 45 procenata nagib je 1/45, što predstavlja unos od 0,02222).</li><li><strong>Bočna vrednost</strong>--Uspostavlja HF kada je HRMA veće od ili jednako vrednosti 45 stepeni i manje od 90 stepeni kada je<strong>Napred</strong>ključna reč za horizontalni faktor navedena.</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koji definiše HF.</li></ul>",
	"@@Path-Distance_Horizontal-Raster_tag0@@": "Raster koji definiše vodoravni smer u svakoj ćeliji.",
	"@@Path-Distance_Horizontal-Raster_tag1@@": "Vrednosti na rasteru moraju biti celi brojevi u rasponu od 0 do 360, sa 0 stepeni prema severu ili prema vrhu ekrana i povećavati se u smeru kazaljke na satu. Ravnim površinama treba dati vrednost -1. Vrednosti na svakoj lokaciji biće u skladu sa <strong>Horizontalnim faktorom</strong> za određivanje horizontalnog troška nastalog prilikom pomeranja od ćelije do njenih suseda.",
	"@@Path-Distance_Maximum-Distance_tag0@@": "Granične vrednosti koje akumulativne vrednosti troškova ne mogu da pređu. Ako akumulativna udaljenost troškova premaši ovu vrednost, izlazna vrednost za lokaciju ćelije će biti NoData. Maksimalna udaljenost definiše stepen za koji se izračunavaju akumulativne udaljenosti troškova. Zadata udaljenost je u visini izlaznog rastera.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Množilac za primenu vrednosti troškova.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućava kontrolu načina putovanja ili veličine u izvoru. Što je veći množilac, to je veći trošak za prelazak kroz svaku ćeliju.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti moraju biti veće od nule. Podrazumevano je 1.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Path-Distance_Source-Raster_tag0@@": "Traženi ulazni raster za izbvorne lokacije.",
	"@@Path-Distance_Source-Raster_tag1@@": "Ovo je raster koji identifikuje ćelije ili lokacije iz kojih se izračunava najmanje nakupljena udaljenost troškova za svaku lokaciju izlazne ćelije.",
	"@@Path-Distance_Source-Raster_tag2@@": "To može da bude ceo broj ili pokretni zarez.",
	"@@Path-Distance_Start-Cost_tag0@@": "Početni trošak od kog se započinje kalkulacija troškova. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih sa izvorom. Umesto da započne sa cenom 0, algoritam troškova počeće sa navedenom vrednostima.",
	"@@Path-Distance_Start-Cost_tag1@@": "Vrednost mora biti nula ili veća. Podrazumevano je 0.",
	"@@Path-Distance_Surface-Raster_tag0@@": "Raster koji definiše vrednosti za elevaciju u svakoj ćeliji.",
	"@@Path-Distance_Surface-Raster_tag1@@": "Vrednosti se koriste za izračunavanje stvarne površinske udaljenosti pređene prilikom prolaska između ćelija.",
	"@@Path-Distance_Travel-Direction_tag0@@": "Definiše smer putnika prilikom primene stope otpora izvora i početne cene izvora.",
	"@@Path-Distance_Travel-Direction_tag1@@": "<strong>Od izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od ulaznog izvora i prelazeći na ćelije koje nisu izvor. Ovo je podrazumevano.",
	"@@Path-Distance_Travel-Direction_tag3@@": "<strong>Do izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od svake ćelije koja nije izvor i prebacujući se nazad ka ulaznom izvoru.",
	"@@Path-Distance_Travel-Direction_tag5@@": "Navedite ključnu reč za <strong>Od izvora</strong> ili <strong>Do izvora</strong>, koja će biti primenjena na sve izvore, ili navedite polje u <strong>Raster izvora</strong> koje sadrži ključne reči za identifikaciju smera putovanja za svaki izvor. To polje mora da sadrži niz ${FROM_SOURCE} ili ${TO_SOURCE}.",
	"@@Path-Distance_verticalfactor_tag0@@": "<p>Definiše vezu između vertikalnog faktora troškova i vertikalnog relativnog ugla pomeranja (VRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani vertikalni faktor grafika. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: VF i VRMA. VF je skraćenica za vertikalni faktor, koji definiše vertikalnu poteškoću pri prelasku iz jedne ćelije u drugu. VRMA označava vertikalni relativni ugao pomeranja, koji identifikuje ugao između FROM, ili obrade, ćelije i TO ćelije.</p><p><strong>Vertikalni faktor</strong>tipovi uključuju sledeće:</p><ul><li><strong>Binarni</strong>--Navodi da ako je VRMA veće od niskog ugla preseka i manje od visokog ugla sečenja, VF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom, to je beskonačno.</li><li><strong>Linearno</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Navodi da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, a dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Inverzno linearno</strong>--Označava da je VF inverzivna linearna funkcija VRMA.</li><li><strong>Simetrično inverzno linearno</strong>--Navodi da je VF inverzivna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, i dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Kosinus</strong>--Identifikuje VF kao funkciju zasnovanu na kosinusu za VRMA.</li><li><strong>Sekans</strong>--Identifikuje VF kao funkciju zasnovanu na sekansu za VRMA.</li><li><strong>Kosinus-sekans</strong>--Navodi da je VF funkcija zasnovana na kosinusu za VRMA kada je VRMA negativan i funkcija VRMA zasnovana na sekansu kada VRMA nije negativan.</li><li><strong>Sekans-kosinus</strong>--Navodi da je VF funkcija zasnovana na sekansu za VRMA kada je VRMA negativan i funkcija zasnovana na kosinusu za VRMA kada VRMA nije negativan.</li><li><strong>Tabela</strong>--Identifikuje da će datoteka tabele koja će se koristiti za definisanje vertikalnog faktora grafika koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori za vertikalne ključne reči uključuju sledeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalne faktore koji se koriste kada je VRMA nula. Ovaj faktor pozicionira y-presek navedene funkcije. Prema definiciji, nulti faktor nije primenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presek je definisan preko ovih funkcija.</li><li><strong>Mali ugao preseka</strong>--Definiše VRMA ugao između kog će se VF podesiti na beskonačno.</li><li><strong>Veliki ugao preseka</strong>--Definiše ugao VRMA iznad kog će se VF postaviti na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koja se koristi uz<strong>Linearne</strong>i<strong>Inverzivne linearne</strong>ključne reči za vertikalni faktor. Nagib je naveden kao odnos uspona i rastojanja (na primer, nagib od 45 procenata je 1/45, a uneta vrednost je 0,02222).</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koja definiše VF.</li></ul>",
	"@@Path-Distance_Vertical-Raster_tag0@@": "Definiše odnos između vertikalnog faktora troškova i vertikalnog relativnog ugla pomicanja (VRMA).",
	"@@Path-Distance_Vertical-Raster_tag1@@": "Vrednosti se koriste za izračunavanje nagiba koji se koristi za identifikaciju vertikalnog faktora nastalog prilikom prelaska iz jedne ćelije u drugu.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Ovaj parametar simulira povećanje u nastojanju za preovlađivanje troškova kao akumulativna povećanja troškova. Koristi se za modeliranje zamora putnika. Rastući akumulativni trošak dostizanja ćelije množi se sa stopom otpora i dodaje se na trošak prelaska u narednu ćeliju.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "To je modifikovana verzija formule složene kamatne stope koja se koristi za izračunavanje prividnih troškova prelaska kroz ćeliju. Kako se vrednost stope otpornosti povećava, povećava se i cena ćelija koje se kasnije posete. Što je veća stopa otpora, veći su troškovi da se dođe do sledeće ćelije, koja se svodi na svako naredno kretanje. Pošto je stopa otpora slična složenoj stopi i obično su vrednosti akumulativnih troškova veoma velike, predlažu se male stope otpora, poput 0,005 ili čak i manje, u zavisnosti od akumulativnih vrednosti troškova.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Path-Distance-Allocation_Capacity_tag0@@": "Definiše troškovnu sposobnost za putnika za izvor. Kalkulacije troškova nastavljaju se za svaki izvor sve dok se ne dostigne zadani kapacitet.",
	"@@Path-Distance-Allocation_Capacity_tag1@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Path-Distance-Allocation_Cost-Raster_tag0@@": "Traženi ulazni raster koji definiše impedancu ili trošak za pomeranje planimetrije kroz svaku ćeliju. Vrednost na lokaciji svake ćelije predstavlja rastojanje trošak-po-jedinici za pomeranje kroz ćeliju. Svaka vrednost lokacije ćelije se množi sa rezolucijom ćelije dok se takođe kompenzuje dijagonalni pokret za zadržavanje ukupnog troška prolaska kroz ćeliju.",
	"@@Path-Distance-Allocation_Cost-Raster_tag1@@": "Vrednosti za <strong>Raster troškova</strong> mogu da budu ceo broj ili plutajući zarez, ali ne mogu da budu negativni ili nula.",
	"@@Path-Distance-Allocation_horizontalfactor_tag0@@": "<p>Definiše odnos između horizontalnog faktora troškova i horizontalnog relativnog ugla kretanja (HRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani grafikon vertikalnog faktora. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: HF i HRMA. HF je skraćenica za horizontalni faktor, koji definiše horizontalnu poteškoću pri prelasku iz jedne ćelije u drugu. HRMA je skraćenica za horizontalni relativni ugao kretanja, koji identifikuje ugao između horizontalnog smera od ćelije i smera kretanja.</p><p><strong>Horizonalni tipovi faktora</strong>uključuju sledeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od ugla preseka, HF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom je vrednost beskonačno.</li><li><strong>Unapred</strong>--Utvrđuje da je dozvoljeno samo kretanje unapred. HRMA mora da bude veći od ili jednak 0 i manji od 90 stepeni (0 &lt;= HRMA &lt; 90). Ako je HRMA veći od 0 i manji od 45 stepeni, HF za ćeliju je podešen na vrednost povezanu sa nultim faktorom. Ako je HRMA veći od ili jednak 45 stepeni, koristi se vrednost modifikatora bočne vrednosti. HF za bilo koju HRMA vrednost jednaku ili veću od 90 stepeni podešena je na beskonačno.</li><li><strong>Linearno</strong>--Navodi da je HF linearna funkcija HRMA.</li><li><strong>Inverzno linearno</strong>--Navodi da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Identifikuje da će se datoteka tabele koristiti za definisanje horizontalnog grafika faktora koji se koristi za određivanje HF-ova.</li></ul><p>Modifikacije za horizontalne faktore uključuje sledeće:</p><ul><li><strong>Faktor nule</strong>--Horizontalni faktor koji će se koristiti kada je HRMA nula. Ovaj faktor pozicionira y presek za bilo koje horizontalne funkcije faktora.</li><li><strong>Ugao preseka</strong>--Definiše HRMA ugao iza kog se HF postavlja na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koji se koristi uz<strong>Linearne</strong>i<strong>Inverzne linearne</strong>ključne reči za horizontalni faktor. Nagib je naveden kao razlomak podizanja tokom kretanja (na primer, 45 procenata nagib je 1/45, što predstavlja unos od 0,02222).</li><li><strong>Bočna vrednost</strong>--Uspostavlja HF kada je HRMA veće od ili jednako vrednosti 45 stepeni i manje od 90 stepeni kada je<strong>Napred</strong>ključna reč za horizontalni faktor navedena.</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koji definiše HF.</li></ul>",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag0@@": "Raster koji definiše vodoravni smer u svakoj ćeliji.",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag1@@": "Vrednosti na rasteru moraju biti celi brojevi u rasponu od 0 do 360, sa 0 stepeni prema severu ili prema vrhu ekrana i povećavati se u smeru kazaljke na satu. Ravnim površinama treba dati vrednost -1. Vrednosti na svakoj lokaciji biće u skladu sa <strong>Horizontalnim faktorom</strong> za određivanje horizontalnog troška nastalog prilikom pomeranja od ćelije do njenih suseda.",
	"@@Path-Distance-Allocation_Maximum-Distance_tag0@@": "Granične vrednosti koje akumulativne vrednosti troškova ne mogu da pređu. Ako akumulativna udaljenost troškova premaši ovu vrednost, izlazna vrednost za lokaciju ćelije će biti NoData. Maksimalna udaljenost definiše stepen za koji se izračunavaju akumulativne udaljenosti troškova. Zadata udaljenost je u visini izlaznog rastera.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Množilac za primenu vrednosti troškova.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućava kontrolu načina putovanja ili veličine u izvoru. Što je veći množilac, to je veći trošak za prelazak kroz svaku ćeliju.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti moraju biti veće od nule. Podrazumevano je 1.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Path-Distance-Allocation_Source-Field_tag0@@": "Polje koje se koristi za dodelu vrednosti na izvorne lokacije. Mora da bude integralnog tipa. Ako je <strong>Raster vrednosti</strong> postavljen, vrednosti u tom unosu imaće presedan u odnosu na bilo koje podešavanje za <strong>Polje izvora</strong>.",
	"@@Path-Distance-Allocation_Source-Raster_tag0@@": "Traženi ulazni raster za izbvorne lokacije.",
	"@@Path-Distance-Allocation_Source-Raster_tag1@@": "Ovo je raster koji identifikuje ćelije ili lokacije iz kojih se izračunava najmanje nakupljena udaljenost troškova za svaku lokaciju izlazne ćelije.",
	"@@Path-Distance-Allocation_Source-Raster_tag2@@": "To može da bude ceo broj ili pokretni zarez.",
	"@@Path-Distance-Allocation_Start-Cost_tag0@@": "Početni trošak od kog se započinje kalkulacija troškova. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih sa izvorom. Umesto da započne sa cenom 0, algoritam troškova počeće sa navedenom vrednostima.",
	"@@Path-Distance-Allocation_Start-Cost_tag1@@": "Vrednost mora biti nula ili veća. Podrazumevano je 0.",
	"@@Path-Distance-Allocation_Surface-Raster_tag0@@": "Raster koji definiše vrednosti za elevaciju za svaku lokaciju ćelije.",
	"@@Path-Distance-Allocation_Surface-Raster_tag1@@": "Vrednosti se koriste za izračunavanje stvarne površinske udaljenosti pređene prilikom prolaska između ćelija.",
	"@@Path-Distance-Allocation_Travel-Direction_tag0@@": "Definiše smer putnika prilikom primene stope otpora izvora i početne cene izvora.",
	"@@Path-Distance-Allocation_Travel-Direction_tag1@@": "<strong>Od izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od ulaznog izvora i prelazeći na ćelije koje nisu izvor. Ovo je podrazumevano.",
	"@@Path-Distance-Allocation_Travel-Direction_tag3@@": "<strong>Do izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od svake ćelije koja nije izvor i prebacujući se nazad ka ulaznom izvoru.",
	"@@Path-Distance-Allocation_Travel-Direction_tag5@@": "Navedite ključnu reč za <strong>Od izvora</strong> ili <strong>Do izvora</strong>, koja će biti primenjena na sve izvore, ili navedite polje u <strong>Raster izvora</strong> koje sadrži ključne reči za identifikaciju smera putovanja za svaki izvor. To polje mora da sadrži niz ${FROM_SOURCE} ili ${TO_SOURCE}.",
	"@@Path-Distance-Allocation_Value-Raster_tag0@@": "Razni ulazni brojevi koji identifikuju vrednosti zona koje se koriste za svaku lokaciju ulaznog izvora. Za svaku izvornu ćeliju lokacije, vrednost definisana preko <strong>Rastera vrednosti</strong> biće dodeljena svim ćelijama koje su prebačene na lokaciju izvora za proračun. <strong>Raster vrednosti</strong> imaće presedan nad bilo kojim podešavanjem za <strong>Polje izvora</strong>.",
	"@@Path-Distance-Allocation_verticalfactor_tag0@@": "<p>Definiše vezu između vertikalnog faktora troškova i vertikalnog relativnog ugla pomeranja (VRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani vertikalni faktor grafika. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: VF i VRMA. VF je skraćenica za vertikalni faktor, koji definiše vertikalnu poteškoću pri prelasku iz jedne ćelije u drugu. VRMA označava vertikalni relativni ugao pomeranja, koji identifikuje ugao između FROM, ili obrade, ćelije i TO ćelije.</p><p><strong>Vertikalni faktor</strong>tipovi uključuju sledeće:</p><ul><li><strong>Binarni</strong>--Navodi da ako je VRMA veće od niskog ugla preseka i manje od visokog ugla sečenja, VF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom, to je beskonačno.</li><li><strong>Linearno</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Navodi da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, a dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Inverzno linearno</strong>--Označava da je VF inverzivna linearna funkcija VRMA.</li><li><strong>Simetrično inverzno linearno</strong>--Navodi da je VF inverzivna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, i dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Kosinus</strong>--Identifikuje VF kao funkciju zasnovanu na kosinusu za VRMA.</li><li><strong>Sekans</strong>--Identifikuje VF kao funkciju zasnovanu na sekansu za VRMA.</li><li><strong>Kosinus-sekans</strong>--Navodi da je VF funkcija zasnovana na kosinusu za VRMA kada je VRMA negativan i funkcija VRMA zasnovana na sekansu kada VRMA nije negativan.</li><li><strong>Sekans-kosinus</strong>--Navodi da je VF funkcija zasnovana na sekansu za VRMA kada je VRMA negativan i funkcija zasnovana na kosinusu za VRMA kada VRMA nije negativan.</li><li><strong>Tabela</strong>--Identifikuje da će datoteka tabele koja će se koristiti za definisanje vertikalnog faktora grafika koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori za vertikalne ključne reči uključuju sledeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalne faktore koji se koriste kada je VRMA nula. Ovaj faktor pozicionira y-presek navedene funkcije. Prema definiciji, nulti faktor nije primenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presek je definisan preko ovih funkcija.</li><li><strong>Mali ugao preseka</strong>--Definiše VRMA ugao između kog će se VF podesiti na beskonačno.</li><li><strong>Veliki ugao preseka</strong>--Definiše ugao VRMA iznad kog će se VF postaviti na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koja se koristi uz<strong>Linearne</strong>i<strong>Inverzivne linearne</strong>ključne reči za vertikalni faktor. Nagib je naveden kao odnos uspona i rastojanja (na primer, nagib od 45 procenata je 1/45, a uneta vrednost je 0,02222).</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koja definiše VF.</li></ul>",
	"@@Path-Distance-Allocation_Vertical-Raster_tag0@@": "Definiše odnos između vertikalnog faktora troškova i vertikalnog relativnog ugla pomicanja (VRMA).",
	"@@Path-Distance-Allocation_Vertical-Raster_tag1@@": "Vrednosti se koriste za izračunavanje nagiba koji se koristi za identifikaciju vertikalnog faktora nastalog prilikom prelaska iz jedne ćelije u drugu.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Ovaj parametar simulira povećanje u nastojanju za preovlađivanjetroškova kao akumulativna povećanja troškova. Koristi se za modeliranje zamora putnika. Rastući akumulativni trošak dostizanja ćelije množi se sa stopom otpora i dodaje se na trošak prelaska u narednu ćeliju.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "To je modifikovana verzija formule složene kamatne stope koja se koristi za izračunavanje prividnih troškova prelaska kroz ćeliju. Kako se vrednost stope otpornosti povećava, povećava se i cena ćelija koje se kasnije posete. Što je veća stopa otpora, veći su troškovi da se dođe do sledeće ćelije, koja se svodi na svako naredno kretanje. Pošto je stopa otpora slična složenoj stopi i obično su vrednosti akumulativnih troškova veoma velike, predlažu se male stope otpora, poput 0,005 ili čak i manje, u zavisnosti od akumulativnih vrednosti troškova.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Path-Distance-Back-Link_Capacity_tag0@@": "Definiše troškovnu sposobnost za putnika za izvor. Kalkulacije troškova nastavljaju se za svaki izvor sve dok se ne dostigne zadani kapacitet.",
	"@@Path-Distance-Back-Link_Capacity_tag1@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag0@@": "Traženi ulazni raster koji definiše impedancu ili trošak za pomeranje planimetrije kroz svaku ćeliju. Vrednost na lokaciji svake ćelije predstavlja rastojanje trošak-po-jedinici za pomeranje kroz ćeliju. Svaka vrednost lokacije ćelije se množi sa rezolucijom ćelije dok se takođe kompenzuje dijagonalni pokret za zadržavanje ukupnog troška prolaska kroz ćeliju.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag1@@": "Vrednosti za <strong>Raster troškova</strong> mogu da budu ceo broj ili plutajući zarez, ali ne mogu da budu negativni ili nula.",
	"@@Path-Distance-Back-Link_horizontalfactor_tag0@@": "<p>Definiše odnos između horizontalnog faktora troškova i horizontalnog relativnog ugla kretanja (HRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani grafikon vertikalnog faktora. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: HF i HRMA. HF je skraćenica za horizontalni faktor, koji definiše horizontalnu poteškoću pri prelasku iz jedne ćelije u drugu. HRMA je skraćenica za horizontalni relativni ugao kretanja, koji identifikuje ugao između horizontalnog smera od ćelije i smera kretanja.</p><p><strong>Horizonalni tipovi faktora</strong>uključuju sledeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od ugla preseka, HF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom je vrednost beskonačno.</li><li><strong>Unapred</strong>--Utvrđuje da je dozvoljeno samo kretanje unapred. HRMA mora da bude veći od ili jednak 0 i manji od 90 stepeni (0 &lt;= HRMA &lt; 90). Ako je HRMA veći od 0 i manji od 45 stepeni, HF za ćeliju je podešen na vrednost povezanu sa nultim faktorom. Ako je HRMA veći od ili jednak 45 stepeni, koristi se vrednost modifikatora bočne vrednosti. HF za bilo koju HRMA vrednost jednaku ili veću od 90 stepeni podešena je na beskonačno.</li><li><strong>Linearno</strong>--Navodi da je HF linearna funkcija HRMA.</li><li><strong>Inverzno linearno</strong>--Navodi da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Identifikuje da će se datoteka tabele koristiti za definisanje horizontalnog grafika faktora koji se koristi za određivanje HF-ova.</li></ul><p>Modifikacije za horizontalne faktore uključuje sledeće:</p><ul><li><strong>Faktor nule</strong>--Horizontalni faktor koji će se koristiti kada je HRMA nula. Ovaj faktor pozicionira y presek za bilo koje horizontalne funkcije faktora.</li><li><strong>Ugao preseka</strong>--Definiše HRMA ugao iza kog se HF postavlja na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koji se koristi uz<strong>Linearne</strong>i<strong>Inverzne linearne</strong>ključne reči za horizontalni faktor. Nagib je naveden kao razlomak podizanja tokom kretanja (na primer, 45 procenata nagib je 1/45, što predstavlja unos od 0,02222).</li><li><strong>Bočna vrednost</strong>--Uspostavlja HF kada je HRMA veće od ili jednako vrednosti 45 stepeni i manje od 90 stepeni kada je<strong>Napred</strong>ključna reč za horizontalni faktor navedena.</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koji definiše HF.</li></ul>",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag0@@": "Raster koji definiše vodoravni smer u svakoj ćeliji.",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag1@@": "Vrednosti na rasteru moraju biti celi brojevi u rasponu od 0 do 360, sa 0 stepeni prema severu ili prema vrhu ekrana i povećavati se u smeru kazaljke na satu. Ravnim površinama treba dati vrednost -1. Vrednosti na svakoj lokaciji biće u skladu sa <strong>Horizontalnim faktorom</strong> za određivanje horizontalnog troška nastalog prilikom pomeranja od ćelije do njenih suseda.",
	"@@Path-Distance-Back-Link_Maximum-Distance_tag0@@": "Granične vrednosti koje akumulativne vrednosti troškova ne mogu da pređu. Ako akumulativna udaljenost troškova premaši ovu vrednost, izlazna vrednost za lokaciju ćelije će biti NoData. Maksimalna udaljenost definiše stepen za koji se izračunavaju akumulativne udaljenosti troškova. Zadata udaljenost je u visini izlaznog rastera.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Množilac za primenu vrednosti troškova.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Ovaj parametar omogućava kontrolu načina putovanja ili veličine u izvoru. Što je veći množilac, to je veći trošak za prelazak kroz svaku ćeliju.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Vrednosti moraju biti veće od nule. Podrazumevano je 1.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Path-Distance-Back-Link_Source-Raster_tag0@@": "Traženi ulazni raster za izbvorne lokacije.",
	"@@Path-Distance-Back-Link_Source-Raster_tag1@@": "Ovo je raster koji identifikuje ćelije ili lokacije iz kojih se izračunava najmanje nakupljena udaljenost troškova za svaku lokaciju izlazne ćelije.",
	"@@Path-Distance-Back-Link_Source-Raster_tag2@@": "To može da bude ceo broj ili pokretni zarez.",
	"@@Path-Distance-Back-Link_Start-Cost_tag0@@": "Početni trošak od kog se započinje kalkulacija troškova. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih sa izvorom. Umesto da započne sa cenom 0, algoritam troškova počeće sa navedenom vrednostima.",
	"@@Path-Distance-Back-Link_Start-Cost_tag1@@": "Vrednost mora biti nula ili veća. Podrazumevano je 0.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag0@@": "Raster koji definiše vrednosti elevacije na svakoj lokaciji ćelije.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag1@@": "Vrednosti se koriste za izračunavanje stvarne površinske udaljenosti pređene prilikom prolaska između ćelija.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag0@@": "Definiše smer putnika prilikom primene stope otpora izvora i početne cene izvora.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag1@@": "<strong>Od izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od ulaznog izvora i prelazeći na ćelije koje nisu izvor. Ovo je podrazumevano.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag3@@": "<strong>Do izvora</strong>--Stopa otpora izvora i početni trošak izvora biće primenjeni počevši od svake ćelije koja nije izvor i prebacujući se nazad ka ulaznom izvoru.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag5@@": "Navedite ključnu reč za <strong>Od izvora</strong> ili <strong>Do izvora</strong>, koja će biti primenjena na sve izvore, ili navedite polje u <strong>Raster izvora</strong> koje sadrži ključne reči za identifikaciju smera putovanja za svaki izvor. To polje mora da sadrži niz ${FROM_SOURCE} ili ${TO_SOURCE}.",
	"@@Path-Distance-Back-Link_verticalfactor_tag0@@": "<p>Definiše vezu između vertikalnog faktora troškova i vertikalnog relativnog ugla pomeranja (VRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani vertikalni faktor grafika. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: VF i VRMA. VF je skraćenica za vertikalni faktor, koji definiše vertikalnu poteškoću pri prelasku iz jedne ćelije u drugu. VRMA označava vertikalni relativni ugao pomeranja, koji identifikuje ugao između FROM, ili obrade, ćelije i TO ćelije.</p><p><strong>Vertikalni faktor</strong>tipovi uključuju sledeće:</p><ul><li><strong>Binarni</strong>--Navodi da ako je VRMA veće od niskog ugla preseka i manje od visokog ugla sečenja, VF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom, to je beskonačno.</li><li><strong>Linearno</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Navodi da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, a dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Inverzno linearno</strong>--Označava da je VF inverzivna linearna funkcija VRMA.</li><li><strong>Simetrično inverzno linearno</strong>--Navodi da je VF inverzivna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, i dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Kosinus</strong>--Identifikuje VF kao funkciju zasnovanu na kosinusu za VRMA.</li><li><strong>Sekans</strong>--Identifikuje VF kao funkciju zasnovanu na sekansu za VRMA.</li><li><strong>Kosinus-sekans</strong>--Navodi da je VF funkcija zasnovana na kosinusu za VRMA kada je VRMA negativan i funkcija VRMA zasnovana na sekansu kada VRMA nije negativan.</li><li><strong>Sekans-kosinus</strong>--Navodi da je VF funkcija zasnovana na sekansu za VRMA kada je VRMA negativan i funkcija zasnovana na kosinusu za VRMA kada VRMA nije negativan.</li><li><strong>Tabela</strong>--Identifikuje da će datoteka tabele koja će se koristiti za definisanje vertikalnog faktora grafika koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori za vertikalne ključne reči uključuju sledeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalne faktore koji se koriste kada je VRMA nula. Ovaj faktor pozicionira y-presek navedene funkcije. Prema definiciji, nulti faktor nije primenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presek je definisan preko ovih funkcija.</li><li><strong>Mali ugao preseka</strong>--Definiše VRMA ugao između kog će se VF podesiti na beskonačno.</li><li><strong>Veliki ugao preseka</strong>--Definiše ugao VRMA iznad kog će se VF postaviti na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koja se koristi uz<strong>Linearne</strong>i<strong>Inverzivne linearne</strong>ključne reči za vertikalni faktor. Nagib je naveden kao odnos uspona i rastojanja (na primer, nagib od 45 procenata je 1/45, a uneta vrednost je 0,02222).</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koja definiše VF.</li></ul>",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag0@@": "Definiše odnos između vertikalnog faktora troškova i vertikalnog relativnog ugla pomicanja (VRMA).",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag1@@": "Vrednosti se koriste za izračunavanje nagiba koji se koristi za identifikaciju vertikalnog faktora nastalog prilikom prelaska iz jedne ćelije u drugu.",
	"@@Plus_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Plus_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Plus_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Plus_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Plus_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Plus_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Plus_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Plus_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Plus_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Plus_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Plus_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Plus_Raster_tag0@@": "Unos čije će vrednosti biti dodate.",
	"@@Plus_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Plus_Raster2_tag0@@": "Unos čijevrednosti može da se dodaju u prvom unosu.",
	"@@Plus_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Local_Cellsize-Type_tag0@@": "Izaberite veličinu ćelije za upotrebu sa odlaznim rasterom. Ako su sve veličine ulaznih ćelija iste, sve opcije doneće iste rezultate.",
	"@@Local_Cellsize-Type_tag1@@": "Prva od--Upotrebite prvu veličinu ćelije ulaznih rastera.",
	"@@Local_Cellsize-Type_tag2@@": "Poslednja od--Upotrebite poslednju veličinu ćelije ulaznih rastera.",
	"@@Local_Cellsize-Type_tag3@@": "Maksimum od--Upotrebite najveću veličinu ćelije od svih ulaznih rastera. Ovo je podrazumevano.",
	"@@Local_Cellsize-Type_tag4@@": "Srednja od--Upotrebite srednju veličinu ćelije svih ulaznih rastera.",
	"@@Local_Cellsize-Type_tag5@@": "Minimum od--Upotrebite najmanju veličinu ćelije od svih ulaznih rastera.",
	"@@Local_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Local_Extent-Type_tag1@@": "Prvi od--Upotrebite opseg prvog ulaznog rastera da odredite opseg obrade.",
	"@@Local_Extent-Type_tag2@@": "Presek od--Upotrebite opseg piksela koji se preklapaju da biste odredili opseg obrade. Ovo je podrazumevano.",
	"@@Local_Extent-Type_tag3@@": "Poslednji od--Upotrebite opseg poslednjeg ulaznog rastera da biste odredili opseg obrade.",
	"@@Local_Extent-Type_tag4@@": "Unija od--Upotrebite opseg svih rastera da biste odredili opseg obrade.",
	"@@Local_Raster_tag0@@": "Ulaz čije vrednosti će biti dodate.",
	"@@Local_Raster_tag1@@": "Konstantna vrednost se može koristiti kao ulaz za ovaj parametar, pod uslovom da je za drugi parametar naveden raster.",
	"@@Local_Raster2_tag0@@": "Ulaz čije vrednosti će biti dodate prvom ulazu.",
	"@@Local_Raster2_tag1@@": "Konstantna vrednost se može koristiti kao ulaz za ovaj parametar, pod uslovom da je za drugi parametar naveden raster.",
	"@@Local_False-Raster_tag0@@": "Ulaz čije vrednosti će se koristiti kao izlazne vrednosti piksela ako je uslov netačan. Može biti ceo broj, raster sa pokretnim zarezom ili konstantna vrednost.",
	"@@Local_True-Raster_tag0@@": "Ulaz čije vrednosti će se koristiti kao izlazne vrednosti piksela ako je uslov tačan. Može biti ceo broj, raster sa pokretnim zarezom ili konstantna vrednost.",
	"@@Power_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Power_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Power_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Power_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Power_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Power_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Power_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Power_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Power_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Power_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Power_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Power_Raster_tag0@@": "Ulazne vrednosti treba da se podignu do definicije preko <strong>Rastera2</strong>.",
	"@@Power_Raster_tag3@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Power_Raster2_tag0@@": "Unos određuje snagu za koju će se vrednosti za <strong>Raster</strong> povećati.",
	"@@Power_Raster2_tag3@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Radar-Calibration_Calibration-Type_tag0@@": "Vrsta kalibracije koju treba izvesti.",
	"@@Radar-Calibration_Calibration-Type_tag1@@": "Beta-nought--Funkcija vraća radarsku reflektivnost po jedinici površine u nagibu. Ovo je podrazumevani tip kalibracije.",
	"@@Radar-Calibration_Calibration-Type_tag2@@": "Sigma-nought--Funkcija vraća radarsku refleksiju po jedinici površine u rasponu zemlje. Rezultati su 32-bitne vrednosti sa pomičnim zarezom obično u rasponu od 0,0 do 1,0. Skraćivanje podataka se ne obavlja ako se izabere ova opcija.",
	"@@Radar-Calibration_Calibration-Type_tag3@@": "Gama--Funkcija vraća radarsku reflektivnost po jedinici površine u ravni normalnoj na smer merenja.",
	"@@Radar-Calibration_Calibration-Type_tag4@@": "Ništa",
	"@@Radar-Calibration_Raster_tag0@@": "Ulazni raster.",
	"@@RasterInfo_Raster-Info_tag0@@": "Izaberite set podataka za upotrebu kao šablon",
	"@@RasterInfo_Raster_tag0@@": "Ulazni raster.",
	"@@Rasterize-Attributes_Attribute-Field-Names_tag0@@": "Lista polja u <strong>Tabeli zonskih atributa</strong> , gde je svako polje odvojeno zapetom. Vrednosti u svakom polju bit će predstavljene trakom u izlaznom rasteru.",
	"@@Rasterize-Attributes_Background-Value_tag0@@": "Početna vrednost piksela izlaznih opsega u rasteru, pre nego što se ponovo podeli.",
	"@@Rasterize-Attributes_Background-Value_tag1@@": "Ako piksel ne padne u neku zonu, ostaće kao pozadinska vrednost.",
	"@@Rasterize-Attributes_Value-Raster_tag0@@": "Taženi ulazni raster.",
	"@@Rasterize-Attributes_Value-Raster_tag1@@": "Ulaz treba da bude jednopojasni raster. Ako se koristi višepojasni raster, koristiće se samo prvi opseg.",
	"@@Rasterize-Attributes_Where-Clause_tag0@@": "Opcionalni dodatni upit prijavljen na <strong>Tabelu za zonske atribute</strong>.",
	"@@Rasterize-Attributes_Where-Clause_tag3@@": "Ako ste kao primer koristili gornju tabelu, upit će biti ${Variable1 = 'bare earth'}.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag0@@": "Zonski atributi navedeni kao putanja do lokalne klase funkcija, putanja do tabele, URL do sloja usluge funkcije ili JSON niza.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag1@@": "U JSON-u je opisano kao zbirka preslikavanja iz ID-a zona u niz celih brojeva. ${{ zoneId:[f1,f2,...,fn], ... }",
	"@@Rasterize-Attributes_Zone-Field_tag0@@": "Naziv polja koji sadrži vrednosti ID zone.",
	"@@Rasterize-Attributes_Zone-Raster_tag0@@": "Opcionalni jednopojasni raster gde svaki piksel sadrži ID zone koji je povezan sa lokacijom. ID zone koristi se za traženje redova u tabeli zonskih atributa za gutanje koje je specifično za zonu.",
	"@@Rasterize-Attributes_Zone-Raster_tag1@@": "Ostavite ovaj parametar neodređenim samo ako želite da uvezete atribut.",
	"@@Rasterize-Features_Field_tag0@@": "Izaberite polje koje ćete koristiti da biste identifikovali svaku od funkcija.",
	"@@Rasterize-Features_Input-Features_tag0@@": "Izaberite klasu značajki da biste pretvorili u rasterski format.",
	"@@Rasterize-Features_Raster_tag0@@": "Izaberite raster da biste definisali veličinu ćelije i obim konverzije značajki.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag0@@": "Odredite kako upravljati funkcijama koje se preklapaju:",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag1@@": "<strong>Prvi</strong>--Područjima koja se preklapaju biće dodeljena vrednost iz prvog popisa podataka.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag3@@": "<strong>Poslednji</strong>--Područjima koja se preklapaju biće dodeljena vrednost iz poslednjeg popisa podataka.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag5@@": "<strong>Najmanje</strong>--Područjima koja se preklapaju biće dodeljena vrednost od manjeg broja funkcija.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag7@@": "<strong>Najveće</strong>--Područjima koja se preklapaju biće dodeljena vrednost od većeg broja funkcija.",
	"@@Recast_Overrides_tag0@@": "Tabela promenljivih imena i vrednosti definisanih od strane korisnika koja se koristi za modifikaciju skupa podataka mozaika.",
	"@@Recast_Raster_tag0@@": "Rasterski proizvod na koji će se primeniti funkcija Recast.",
	"@@Region-Group_Add-Link_tag0@@": "Određuje da li je polje veze dodato u tabelu izlaza.",
	"@@Region-Group_Add-Link_tag1@@": "<strong>Dodavanje veze</strong>--Stavka ${LINK} biće dodata u tabelu izlaznog rastera.",
	"@@Region-Group_Add-Link_tag3@@": "<strong>Nema veze</strong>--Tabela atributa za izlazni raster sadrži samo stavke ${Value} i ${Count}.",
	"@@Region-Group_Excluded-Value_tag0@@": "Identifikuje vrednost tako da ako lokacija ćelije sadrži vrednost, neće se proceniti prostorna povezanost bez obzira na to kako je određen broj okruženja (ČETIRI ili OSAM).",
	"@@Region-Group_Excluded-Value_tag1@@": "Ćelije sa isključenom vrednošću tretiraće se kao NoData i eliminisaće se iz izračunavanja. Lokacije ćelija koje sadrže isključenu vrednost dobiće 0 na izlaznom rasteru.",
	"@@Region-Group_Excluded-Value_tag2@@": "Izuzeta vrednost slična je konceptu pozadinske vrednosti ili ako je primenjena maska. Za ovaj parametar mora se navesti vrednost ako je parametar <strong>${CROSS}</strong> naveden.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag0@@": "Broj susednih ćelija koje se koriste u proceni povezanosti između ćelija.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag1@@": "<strong>ČETIRI</strong>--Definiše povezivanje između ćelija iste vrednosti samo ako su ćelije direktno levo, desno, iznad ili ispod svakog od četiri najbliža suseda. Ovo je podrazumevano.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag3@@": "<strong>OSAM</strong>--Definiše povezanost između ćelija iste vrednosti ako se nalaze u neposrednom okruženju osam ćelija. Ovo uključuje sa desne, leve, gornje ili dijagonalne strane.",
	"@@Region-Group_Zone-Connectivity_tag0@@": "Definiše koje vrednosti ćelija treba uzeti u obzir prilikom testiranja povezanosti.",
	"@@Region-Group_Zone-Connectivity_tag1@@": "<strong>U OKVIRU</strong>--Testiranje povezanosti između ulaznih vrednosti koje su iste unutar iste zone. Ovo je podrazumevano.",
	"@@Region-Group_Zone-Connectivity_tag3@@": "Jedine ćelije koje se mogu grupisati su ćelije iz iste zone (vrednosti) koje ispunjavaju prostorne zahteve za povezanošću koje je odredio parametar <strong>Broj suseda</strong> (četiri ili osam smerova).",
	"@@Region-Group_Zone-Connectivity_tag6@@": "<strong>UNAKRSNO</strong>--Testiranje povezanosti prema prostornim zahtevima određenim brojem susedskih parametara između ćelija sa bilo kojim vrednostima, osim vrednosti identifikovane da bude isključen parametrom isključene vrednosti.",
	"@@Region-Group_Zone-Connectivity_tag8@@": "Kada se ova opcija koristi, vrednost za parametar <strong>Isključena vrednost</strong> mora da se navede.",
	"@@Region-Group_Zone-Raster_tag0@@": "Potrebni ulazni raster čija će jedinstvena povezana područija biti identifikovana.",
	"@@Region-Group_Zone-Raster_tag1@@": "Mora biti ceo broj.",
	"@@Region-Grow_Fill-Value-Field_tag0@@": "Polje u tabeli atributa koje definiše vrednost popunjavanja za grupu piksela. U višepojasnoj slici, svim opsezima će biti dodeljena ova vrednost.",
	"@@Region-Grow_Max-Growth-Radius-Field_tag0@@": "Polje u atributnoj tabeli koja definiše maksimalni radijus rasta u prostornim referentnim jedinicama slike.",
	"@@Region-Grow_Raster_tag0@@": "Raster na kojem želite da obavljate ovu funkciju.",
	"@@Region-Grow_Seed-Points_tag0@@": "Tačkasta klasa svojstava, koja služi kao početno seme algoritma. Svaka tačka semena odgovara jednom zapisu u tablici atributa, koji nosi maksimalni radijus rasta, prag sličnosti i podatke o vrednosti ispunjavanja.",
	"@@Region-Grow_Similarity-Threshold-Field_tag0@@": "Polje u atributnoj tabeli koja definiše prag sličnosti kao euklidsko rastojanje u spektralnom prostoru.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag0@@": "Nedostajuće vrednosti u tabeli ponovnog poništavanja mogu zadržati svoju vrednost ili se prebaciti na NoData.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag1@@": "Neobeleženo--Bilo koji piksel iz ulaznog ratsera koji se ne klasifikuje ponovo u tabeli za remapiranje zadržaće svoju vrednost i biće zapisan za svoju lokaciju u odlaznom rasteru. Ovo je podrazumevano.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag2@@": "Obeleženo--Bilo koji piksel iz ulaznog rastera koji se ne klasira ponovo u tabeli za ponovno mapiranje na NoData za svoju lokaciju u izlazom rasteru.",
	"@@Remap_Input-Field_tag0@@": "Odaberite polje koje navodi vrednost ulazne piksele koja će biti ponovo podešena.",
	"@@Remap_Input-Field_tag1@@": "Ako vaša tabela ima opseg vrednosti, ovo će biti polje sa minimalnom vrednošću, a parametar <strong>Unos maksimalnog polja</strong> treba takođe da se navede.",
	"@@Remap_Input-Max-Field_tag0@@": "Izaberite polje maksimalne vrednosti ako tabela određuje raspon vrednosti.",
	"@@Remap_List_tag0@@": "Navedite vrednosti karte i odredite raspon minimalne i maksimalne vrednosti i nove ponovne vrednosti. Pored toga, raspon vrednosti može se postaviti kao NoData pikseli.",
	"@@Remap_Output-Field_tag0@@": "Odaberite polje koje će se koristiti kao izlazna prerađena vrednost.",
	"@@Remap_Raster_tag0@@": "Ulazni raster.",
	"@@Remap_Remap-Definition-Type_tag0@@": "Izaberite opciju koju želite da koristite za podešavanje remap vrednosti:",
	"@@Remap_Remap-Definition-Type_tag1@@": "Lista - Navedite raspon vrednosti piksela za mapiranje na izlaznu vrednost piksela",
	"@@Remap_Remap-Table-Type_tag0@@": "Izaberite vrstu tabele koju ćete koristiti da prepravite ponovo unešeni raster:",
	"@@Remap_Remap-Table-Type_tag1@@": "Jednostavno--Koristi se unos <strong>Tabela za remapiranje</strong> za remapiranje <strong>Polja za unos</strong> za vrednosti piksela sa odgovarajućom vrednošću za parametar <strong>Odlazno polje</strong>. Ova metoda kešira se u predmemoriju tabele kako bi mogla brže da radi.",
	"@@Remap_Remap-Table-Type_tag8@@": "Dinamično--Ova metoda ne kešira tabelu za prepravljanje podataka i postavljaće upit svaki put kada se podnese zahtev (pomicanje, zumiranje ili osvežavanje). Ako se tabela promeni, sledeći zahtev može dinamički da izvrši ponovo podešavanje vrednosti u skladu sa tim.",
	"@@Remap_Remap-Table-Type_tag9@@": "Ponovno dodeljivanje--Posebna tabela koja se koristi za proces reklasifikacije, gde će svaki red u tabeli biti ponovo podešen na osnovu svake granice karakteristika.",
	"@@Remap_Remap-Table_tag0@@": "Potražite tabelu koja postavlja vaše prepravljene vrednosti.",
	"@@Reproject_Raster_tag0@@": "Rasterski niz koji se treba ponovo projektovati ili ponovo primeniti.",
	"@@Reproject_Spatial-Reference_tag0@@": "Koordinatni sistem koji se koristi za ponovno projektovanje podataka.",
	"@@Reproject_X-Cellsize_tag0@@": "X-dimenzija u koju se podaci trebaju ponovo uklapati. Ovo nije obavezno. Ako je vrednost 0 ili manja, izlazna koverta (opseg i veličine ćelije) se izračunava iz ulaznog rastera.",
	"@@Reproject_X-Registration-Point_tag0@@": "Koordinata x koja se koristi za definisanje gornjeg levog ugla skupa podataka. Ta koordinata mora biti definisana u jedinicama nove prostorne reference. Ako su oba parametra <strong>X veličina ćelije</strong> i <strong>Y veličina ćelije</strong> veća od 0, oni se koriste uz parametre <strong>X registraciona tačka</strong> i <strong>Y registraciona tačka</strong> za definiciju odlaznog pravougaonika.",
	"@@Reproject_Y-Cellsize_tag0@@": "Y-dimenzija kojoj se podaci trebaju ponovo dodeliti. Ovo nije obavezno. Ako je vrednost 0 ili manja, izlazna koverta (opseg i veličine ćelije) se izračunava iz ulaznog rastera.",
	"@@Reproject_Y-Registration-Point_tag0@@": "Y koordinata koja se koristi za definisanje gornjeg levog ugla skupa podataka. Ta koordinata mora biti definisana u jedinicama nove prostorne reference. Ako su oba parametra <strong>X veličina ćelije</strong> i <strong>Y veličina ćelije</strong> veća od 0, oni se koriste uz parametre <strong>X registraciona tačka</strong> i <strong>Y registraciona tačka</strong> za definiciju odlaznog pravougaonika.",
	"@@Resample_Input-Cellsize_tag0@@": "Veličina piksela ćelija ulaznog rastera.",
	"@@Resample_Output-Cellsize_tag0@@": "Veličina piksela ćelija izlaznog rastera. Veličina ćelije se može menjati, ali opseg rasterskih podataka ostaće isti. Preoblikovanje iz korisničke veličine ćelije može biti puno sporije od zadate postavke sistema, jer sistemsko zadato ponovno razmeštanje obrađuje minimalnu količinu podataka iz najbliže moguće rezolucije.",
	"@@Resample_Raster_tag0@@": "Ulaz rastera koji treba da se uzorkuje.",
	"@@Resample_Resampling-Type_tag0@@": "<strong>Najbliži sused</strong>--Izračunava vrednost odlaznog piksela korišćenjem najbližeg ulaznog piksela. NoData pikseli ostat će nepromijenjeni u izlaznom rasterskom skupu podataka. Ovo je podrazumevano.",
	"@@Resample_Resampling-Type_tag2@@": "<strong>Bilinearna interpolacija</strong>--Izračunava vrednost piksela koristeći udaljenost-ponderisanu vrednost četiri najbliža piksela. Ova metoda je računski efikasna za obradu.",
	"@@Resample_Resampling-Type_tag4@@": "<strong>Kubna konvolucija</strong>--Određuje novu vrednost piksela na osnovu postavljanja glatke krive kroz 16 najbližih ulaznih piksela.",
	"@@Resample_Resampling-Type_tag6@@": "<strong>Većina</strong>--Izračunava vrednost piksela koristeći većinu vrednosti piksela u 16 najbližih piksela. NoData pikseli ostat će nepromijenjeni u izlaznom rasterskom skupu podataka.",
	"@@Resample_Resampling-Type_tag8@@": "<strong>Bilinearna interpolacija plus</strong>--Koristi <strong>Bilinearnu interpolaciju</strong>, osim što su pikseli duž ivica definisani kao NoData i nisu kopirani ili uzeti u obzir u proračunu. Upotrebite <strong>Bilinearnu interpolaciju plus</strong> za podatke u pločicama jer će se bolje uklopiti sa ivicama.",
	"@@Resample_Resampling-Type_tag14@@": "<strong>Gausovo zamućenje</strong>--Primenjuje Gausovo savijanje na izvorni raster i izračunava vrednost piksela koristeći vrednost udaljenosti izmerenu od četiri najbliža piksela od zamagljenog rastera. Pogodna je za uklanjanje šuma u ponovo uzorkovanim podacima i za uzimanje uzoraka do većih veličina piksela.",
	"@@Resample_Resampling-Type_tag16@@": "<strong>Gausovom zamućenja plus</strong>--Koristi <strong>Gausovo zamućenje</strong>, osim što su pikseli duž ivica definisani kao NoData i nisu kopirani ili uzeti u obzir u proračunu. Upotrebite <strong>Gausovo zamućenje plus</strong> za podatke u pločicama jer će se bolje uklopiti sa ivicama.",
	"@@Resample_Resampling-Type_tag22@@": "<strong>Prosečno</strong>--Izračunava vrednosti piksela koristeći prosečnu vrednost svih piksela koji se preklapaju, za svaki ciljni piksel.",
	"@@Resample_Resampling-Type_tag24@@": "<strong>Minimum</strong>--Izračunava vrednost piksela koristeći minimalnu vrednost svih piksela koji se preklapaju. NoData pikseli ostat će nepromijenjeni u izlaznom rasterskom skupu podataka.",
	"@@Resample_Resampling-Type_tag26@@": "<strong>Maksimum</strong>--Podobno za kontinualne podatke, proizvodi finiju izlaznu sliku od metode ponovnog semplovanja najbliže oblasti.",
	"@@Resample_Resampling-Type_tag28@@": "<strong>Prosek za vektor</strong>--Izračunava prosečni vektor-smer vektora koristeći sve uključene piksele. Ova metoda je primenljiva samo za dva opsega koji predstavljaju veličinu i smer. Prvo pretvara smer magnitude u U-V, a zatim uzima aritmetički prosek za sve uključene piksele da bi se dobio U-V ciljanog piksela i pretvara ga nazad u smer veličine.",
	"@@Round-Down_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Round-Down_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Round-Down_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Round-Down_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Round-Down_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Round-Down_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Round-Down_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Round-Down_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Round-Down_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Round-Down_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Round-Down_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Round-Down_Raster_tag0@@": "Ulazna vrednost biće zaokružena.",
	"@@Round-Up_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Round-Up_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Round-Up_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Round-Up_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Round-Up_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Round-Up_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Round-Up_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Round-Up_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Round-Up_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Round-Up_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Round-Up_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Round-Up_Raster_tag0@@": "Ulazne vrednosti koje treba zaokružiti.",
	"@@Segment-Mean-Shift_Minimum-Segment-Size-in-Pixels_tag0@@": "Minimalna veličina segmenta, mereno u pikselima. Ova vrednost je povezana sa vašom jedinicom za minimalno mapiranje i filtriraće manje blokove piksela. Svi segmenti koji su manji od navedene vrednosti objediniće manje segmente sa njihovim najboljim susednim segmentom.",
	"@@Segment-Mean-Shift_Raster_tag0@@": "Ulazni raster koji treba segmentisati.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag0@@": "Granice segmenta crtaju se crnom konturnom linijom oko svakog segmenta. Ovo je korisno da biste mogli da razlikujete susedne segmente koji imaju slične boje.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag1@@": "Neoznačeno--Granice segmenta nisu prikazane. Ovo je podrazumevano.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag2@@": "Označeno--Granice segmenta su prikazane crnim konturnim linijama oko svakog segmenta.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag0@@": "Relativna važnost razdvajanja objekata na osnovu prostornih karakteristika.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag1@@": "Važeće celobrojne vrednosti se kreću od 1 do 20. Manje vrednosti rezultiraju širokim klasama i većim izglađivanjem. Viša vrednost je prikladna za razlikovanje karakteristika koje su prostorno male i sjedinjene zajedno. Na primer, u urbanom prizoru možete klasifikovati opšte nepropusne karakteristike površine koristeći manju vrednost prostornog detalja ili možete klasifikovati zgrade i puteve kao zasebne klase koristeći veću prostornu vrednost detalja.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag0@@": "Relativna važnost odvajanja objekata na osnovu karakteristika boje.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag1@@": "Važeće vrednosti s pomičnim zarezom se kreću od 1,0 do 20,0. Manje vrednosti rezultiraju širokim klasama i većim izglađivanjem. Viša vrednost je prikladna kada želite razlikovati karakteristike koje imaju nešto slične spektralne karakteristike. Na primer, korišćenje veće vrednosti spektralnih detalja u pošumljenom prizoru omogućava vam bolje razlikovanje različitih vrsta drveća.",
	"@@Segment-Mean-Shift_maximumsegmentsizeinpixels_tag0@@": "<p>Maksimalna veličina segmenta. Segmenti koji su veći od navedene veličine biće podeljeni. Upotrebite ovaj parametar za sprečavanje artefakata u izlaznom sloju od velikih segmenta. Podrazumevana vrednost je -1.</p>",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag0@@": "Izaberite jednu od četiri vrste kalibracije:",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag1@@": "<strong>Beta nula</strong>--proizvodi izlaz koji sadrži koeficijent radarske svetlosti.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag3@@": "<strong>Sigma nula</strong>--povratni uređaj javio se anteni sa jedinice na zemlji, koja je povezana sa dometom zemlje.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag5@@": "<strong>Gama</strong>--merenje emitovane i vraćene energije korisne za određivanje oblika antene.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag7@@": "<strong>Nijedan</strong>--ne primenjujte korekciju. Ovo je podrazumevano.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag0@@": "Ulazni raster Sentinel-1 Level-1 GRD ili SLC koji želite da obrađujete.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag1@@": "Funkcija će koristiti LUT datoteku ili za primenu termičke korekcije ili za uklanjanje korekcije, zavisno od sadržaja LUT-a.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag0@@": "Ulazni raster Sentinel-1 koji želite da obrađujete.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag1@@": "Funkcija će koristiti LUT datoteku ili za primenu termičke korekcije ili uklanjanje korekcije u zavisnosti od sadržaja LUT-a.",
	"@@Set-Null_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Set-Null_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Set-Null_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Set-Null_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Set-Null_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Set-Null_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Set-Null_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Set-Null_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Set-Null_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Set-Null_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Set-Null_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Set-Null_False-Raster_tag0@@": "Unos čije vrednosti će se koristiti kao vrednosti za izlazni piksel ako je stanje neispravno. To može da bude integral, raster sa pokretnim zarezom, ili konstantna vrednost.",
	"@@Set-Null_Raster_tag0@@": "Ulazni raster koji predstavlja Bulov rezultat za logičku matematičku funkciju rastera. Vrednosti će biti ili 1 (za tačno) ili 0 (za netačno). To može da bude integralni ili raster sa pokretnim zarezom.",
	"@@Shaded-Relief_Altitude_tag0@@": "Nadmorska visina je sunčev ugao nadmorske visine iznad horizonta i kreće se od 0 do 90 stepeni. Vrednost od 0 stepeni ukazuje da je sunce na horizontu, odnosno na istoj vodoravnoj ravnini kao i referentni okvir. Vrednost od 90 stepeni ukazuje da je sunce direktno iznad. Zadana vrednost je 45 stepeni iznad horizonta.",
	"@@Shaded-Relief_Azimuth_tag0@@": "Azimut je relativan položaj sunca duž horizonta (u stepenima). Ovaj položaj je označen sa uglom sunca izmerenim u smeru kazaljke na satu od severa. Azimut od 0 stepeni označava sever, istok 90 stepeni, jug 180 stepeni, a zapad 270 stepeni.",
	"@@Shaded-Relief_Color-Scheme-Type_tag0@@": "Navedite da li će se za prikaz osenčenog reljefa koristiti kolor rampa ili mapa boja.",
	"@@Shaded-Relief_Color-Scheme-Type_tag1@@": "<strong>Rampa za boju</strong>--Kada izaberete <strong>Rampu za boju</strong>, bićete upitani da izaberete odgovarajuću rampu za boju.",
	"@@Shaded-Relief_Color-Scheme-Type_tag5@@": "<strong>Mapa boja</strong>--Kada izaberete <strong>Mapu boja</strong> , dobićete obaveštenje da navedete datoteku za mapu za boju za upotrebu.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag0@@": "Navedite da li će biti onemogućena interpolacija zadatog ruba piksela.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag1@@": "Neoznačeno--Bilinearno preusmerivanje primenjivaće se ravnomerno da bi se ponovo oblikovalo osenčeno reljefno stanje. Ovo je podrazumevano.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag2@@": "Označeno--Bilinearno preusmerivanje koristiće se u senci reljefa, osim duž ivica rastera ili pored piksela NoData. Ti će se pikseli popunjavati programom NoData jer će umanjiti sve oštre efekte ivica koji se mogu javiti.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag3@@": "Korišćenjem ove opcije izbeći ćete prekomponovanje artefakata koji se mogu pojaviti uz ivice rastera. Izlazni pikseli duž ivice rastra ili pored piksela bez vrednosti popunjavaće se NoData; stoga se preporučuje da se ova opcija koristi samo ako su na raspolaganju drugi rasteri sa preklapajućim pikselima. Kada su dostupni pikseli koji se preklapaju, ove oblasti NoData će prikazati vrednosti preklapajućih piksela umesto da budu prazne.",
	"@@Shaded-Relief_Raster_tag0@@": "Raster ulazne visine.",
	"@@Shaded-Relief_Scaling_tag0@@": "Osenčeni rezultat se dinamički skalira prilagođavanjem z-faktora koristeći jednu od dve mogućnosti:",
	"@@Shaded-Relief_Scaling_tag1@@": "<strong>Nijedan</strong>--Nema primenjenog skaliranja. Ovo je idealno za jedan rasterski niz podataka koji pokriva lokalno područje. Ovo se ne preporučuje za svetske skupove podataka sa velikim varijacijama mapa nadmorske visine ili višesmernih mapa, jer će to stvoriti reljef terena s malim odstupanjima na malim razmerama.",
	"@@Shaded-Relief_Scaling_tag3@@": "<strong>Podešeno</strong>--Nelinearno podešavanje se primenjuje kada se koriste podrazumevane vrednosti za <strong>Snagu veličine piksela</strong> i <strong>Faktora veličine piksela</strong>, koji sadrže veliki spektar raznovrsnih promena nadmorske visine (skala) dok pregledač smanjuje i povećava zumiranje. Opcija <strong>Podešen</strong> preporučuje se kada koristiti svetski skup podataka.",
	"@@Shaded-Relief_Z-Factor_tag0@@": "Z-faktor je faktor za skaliranje koji se koristi za konvertovanje vrednosti elevacije u dve svrhe:",
	"@@Shaded-Relief_Z-Factor_tag1@@": "Za pretvaranje jedinica nadmorske visine (poput metra ili stopa) u horizontalne koordinatne jedinice skupa podataka, koje mogu biti stope, metri ili stepeni",
	"@@Shaded-Relief_Z-Factor_tag2@@": "Za dodavanje vertikalnog preuveličavanja radi vizuelnog efekta",
	"@@Shaded-Relief_Z-Factor_tag3@@": "Osenčeni rezultat se dinamički skalira prilagođavanjem z-faktora pomoću jedne od dve mogućnosti:",
	"@@Shaded-Relief_Z-Factor_tag4@@": "<strong>Nijedan</strong>--Nema primenjenog skaliranja. Ovo je idealno za jedan rasterski niz podataka koji pokriva lokalno područje. Ovo se ne preporučuje za svetske skupove podataka sa velikim varijacijama mapa nadmorske visine ili višesmernih mapa, jer će to stvoriti reljef terena s malim odstupanjima na malim razmerama.",
	"@@Shaded-Relief_Z-Factor_tag6@@": "<strong>Podešeno</strong>--Nelinearno podešavanje se primenjuje kada se koriste podrazumevane vrednosti za <strong>Snagu veličine piksela</strong> i <strong>Faktora veličine piksela</strong>, koji sadrže veliki spektar raznovrsnih promena nadmorske visine (skala) dok pregledač smanjuje i povećava zumiranje. Opcija <strong>Podešen</strong> preporučuje se kada koristiti svetski skup podataka.",
	"@@Shaded-Relief_hillshadetype_tag0@@": "Kontroliše izvor osvetljenja za senku brda.",
	"@@Shaded-Relief_hillshadetype_tag1@@": "<strong>Tradicionalno </strong> - Izračunava senku iz jednog smera osvetljenja. Možete da podesite opcije za <strong>Azimut</strong> i <strong>Nadmorsku visinu</strong> da biste kontrolisali lokaciju izvora svetlosti. Ovo je podrazumevano.",
	"@@Shaded-Relief_hillshadetype_tag2@@": "<strong>Višesmerno</strong>--Kombinuje svetlost iz više izvora da bi se pojačala vizualizacija terena.",
	"@@Shaded-Relief_PSPower_tag0@@": "<strong>Snaga veličine piksela</strong> uzima u obzir promene nadmorske visine (ili razmere) dok pregledač uvećava i umanjuje prikaz mape. Eksponent primenjen na izraz veličine piksela u jednačini kontroliše stopu kojom se <strong>Z faktor</strong> menja da bi se izbegao značajan gubitak kod reljefa.",
	"@@Shaded-Relief_PSPower_tag1@@": "Ovaj parametar važi samo kada je tip <strong>skaliranja</strong> <strong>podešen</strong>. Podrazumevana vrednost je 0,664.",
	"@@Shaded-Relief_PSZFactor_tag0@@": "<strong>Faktor veličine piksela</strong> uzima u obzir promene u razmeri dok pregledač uvećava i umanjuje prikaz mape. On kontroliše stopu kojom se <strong>Z faktor</strong> menja.",
	"@@Shaded-Relief_PSZFactor_tag1@@": "Ovaj parametar važi samo kada je tip <strong>skaliranja</strong> <strong>podešen</strong>. Podrazumevana vrednost je 0,024.",
	"@@Sin_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Sin_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Sin_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Sin_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Sin_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Sin_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Sin_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Sin_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Sin_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Sin_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Sin_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Sin_Raster_tag0@@": "Ulaz za izračunavanje sinusnih vrijednosti.",
	"@@SinH_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@SinH_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@SinH_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@SinH_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@SinH_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@SinH_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@SinH_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@SinH_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@SinH_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@SinH_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@SinH_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@SinH_Raster_tag0@@": "Ulaz za koji se računaju hiperbolične vrednosti sinusa.",
	"@@Sink_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smer toka ka svakoj ćeliji.",
	"@@Sink_Flow-Direction-Raster_tag1@@": "Raster smera protoka može se kreirati pokretanjem funkcije <strong>Smer protoka</strong>.",
	"@@Slope_DEM_tag0@@": "Raster ulazne visine.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag0@@": "Korišćenjem ove opcije izbeći ćete prekomponovanje artefakata koji se mogu pojaviti uz ivice rastera. Izlazni pikseli duž ivice rastra ili pored piksela bez vrednosti popunjavaće se NoData; stoga se preporučuje da se ova opcija koristi samo ako su na raspolaganju drugi rasteri sa preklapajućim pikselima. Kada su dostupni pikseli koji se preklapaju, ove oblasti NoData će prikazati vrednosti preklapajućih piksela umesto da budu prazne.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag1@@": "Neoznačeno--Bilinearno preusmerivanje primenjivaće se ravnomerno da bi izmenili vašu padinu. Ovo je podrazumevano.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag2@@": "Označeno--Bilinearno preusmeravanje će se koristiti unutar nagiba, osim duž ivica rastera ili pored piksela NoData. Ti će se pikseli popunjavati programom NoData jer će umanjiti sve oštre efekte ivica koji se mogu javiti.",
	"@@Slope_Scaling_tag0@@": "Inklinacija nagiba može se iskazati ili kao vrednost u stepenima ili kao procenat porasta. Postoje tri opcije za <strong>Skaliranje</strong>:",
	"@@Slope_Scaling_tag3@@": "<strong>Stepen</strong>--Inklinacija nagiba se uzračunava u stepenima. Vrednosti se kreću od 0 do 90.",
	"@@Slope_Scaling_tag5@@": "<strong>Povećanje procenta</strong>--Inklinacija nagiba se uzračunava kao vrednost u procentima. Vrednosti se kreću od 0 do beskonačno. Ravna površina je porast od 0 procenata, dok je površina od 45 stepeni porast od 100 procenata. Kako površina postaje vertikalnija, porast procenata postaje sve veći.",
	"@@Slope_Scaling_tag7@@": "<strong>Skalirano</strong>--Inklinacija nagiba izračunava se isto kao i STEPENI, ali z-faktor se prilagođava skali. Koriste se vrednosti <strong>Snaga veličine piksela</strong> i <strong>Faktor veličine piskela</strong>, koji se uzimaju za promene rezolucije (skala) dok gledalac zumira i smanjuje zum. Ovo se preporučuje kada se koriste svetski setovi podataka--posebno kada se koristi nagib kao površina za vizuelizaciju.",
	"@@Slope_Scaling_tag13@@": "Z-faktor se podešava pomoću sledeće jednačine:",
	"@@Slope_Scaling_tag14@@": "Podešeni Z faktor = (Z faktor) + (veličina piksela)",
	"@@Slope_Scaling_tag15@@": "× (Faktor veličine piksela)",
	"@@Slope_Scaling_tag16@@": "Stepen veličine piksela",
	"@@Slope_Z-Factor_tag0@@": "<strong>Z Factor</strong> e faktor za skaliranje koji se koristi za konvertovanje vrednosti elevacije u dve svrhe:",
	"@@Slope_Z-Factor_tag3@@": "Za pretvaranje jedinica nadmorske visine (poput metra ili stopa) u horizontalne koordinatne jedinice skupa podataka, koje mogu biti stope, metri ili stepeni",
	"@@Slope_Z-Factor_tag4@@": "Za dodavanje vertikalnog preuveličavanja radi vizuelnog efekta",
	"@@Slope_PSPower_tag0@@": "<strong>Snaga veličine piksela</strong> uzima u obzir promene nadmorske visine (ili razmere) dok pregledač uvećava i umanjuje prikaz mape. Eksponent primenjen na izraz veličine piksela u jednačini kontroliše stopu kojom se <strong>Z faktor</strong> menja da bi se izbegao značajan gubitak kod reljefa.",
	"@@Slope_PSPower_tag1@@": "Ovaj parametar važi samo kada tip <strong>skaliranja</strong> <strong>ima podešenu razmeru</strong>. Podrazumevana vrednost je 0,664.",
	"@@Slope_PSZFactor_tag0@@": "<strong>Faktor veličine piksela</strong> uzima u obzir promene u razmeri dok pregledač uvećava i umanjuje prikaz mape. On kontroliše stopu kojom se <strong>Z faktor</strong> menja.",
	"@@Slope_PSZFactor_tag1@@": "Ovaj parametar važi samo kada tip <strong>skaliranja</strong> <strong>ima podešenu razmeru</strong>. Podrazumevana vrednost je 0,024.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag0@@": "Akumulacija ulaznog protoka za nivo rastera.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag1@@": "Ovo može da se kreira uz funkciju <strong>Akumulacija protoka</strong>.",
	"@@Snap-Pour-Point_Pour-Point-Field_tag0@@": "Polje koje se koristi za dodeljivanje vrednosti lokacijama tačaka slivanja.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag0@@": "Lokacije ulazne tačke ulivanja koje treba preskočiti.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag1@@": "Za ulazni rasterski sloj, sve ćelije koje nisu NoData (to jest, imaju vrednost) smatraće se tačkama sipanja i biće pomerene.",
	"@@Snap-Pour-Point_Snap-Distance_tag0@@": "Maksimalna udaljenost u jedinicama mape za traženje ćelije većeg akumuliranog protoka.",
	"@@Speckle_Additive-Noise-Mean_tag0@@": "Određuje srednju vrednost aditivne buke. Veća srednja vrednost buke će proizvesti manje umekšavanja, dok manja vrednost dovodi do većeg umekšavanja.",
	"@@Speckle_Additive-Noise-Mean_tag1@@": "Ovaj parametar je validan samo kada je <strong>Tip filtera</strong> <strong>Lee filter</strong> a <strong>Model šuma</strong> <strong>Aditivni šum</strong> ili <strong>Aditivni i multiplikativni šum</strong>. Podrazumevana vrednost je 0.",
	"@@Speckle_Damping-Factor_tag0@@": "Navodi stepen eksponencijalnog efekta dampiranja na filter. Velika vrednost dampiranja bolje čuva ivice ali ih manje umekšava, dok manja vrednost obezbeđuje bolje umekšavanje. Vrednost od 0 dovodi do istog izlaza kao filter niskog opsega.",
	"@@Speckle_Damping-Factor_tag1@@": "Ovaj parametar je validan samo kada je <strong>Tip filtera</strong> <strong>Poboljšani Lee filter</strong> ili <strong>Filter za zamrzavanje</strong>. Podrazumevana vrednost je 1.",
	"@@Speckle_Filter-Size_tag0@@": "Navodi veličinu filtera na prozoru za piksele koji se koristi za filtriranje smetnji:",
	"@@Speckle_Filter-Size_tag1@@": "3x3",
	"@@Speckle_Filter-Size_tag2@@": "5x5",
	"@@Speckle_Filter-Size_tag3@@": "7x7",
	"@@Speckle_Filter-Size_tag4@@": "9x9",
	"@@Speckle_Filter-Size_tag5@@": "11x11",
	"@@Speckle_Filter-Type_tag0@@": "Određuje vrstu filtera koja će se koristiti u algoritmu izravnavanja za uklanjanje šiljastog šuma:",
	"@@Speckle_Filter-Type_tag1@@": "<strong>Lee filter</strong>--Smanjuje speklarne smetnje primenom prostornog filtera na svaki piksel na slici, koji filtrira podatke na osnovu lokalnih statistika izračunatih unutar kvadratnog prozora. Ovaj filter je koristan kada želite da obradite upečatljive podatke koji sadrže aditivnu ili multiplikativnu komponentu. Ovo je podrazumevano.",
	"@@Speckle_Filter-Type_tag3@@": "<strong>Poboljšani Lee filter</strong>--Prilagođena verzija Lee filtera koja uključuje <strong>Faktor odbacivanja</strong> i <strong>Broj pregleda</strong>. Ovaj filter je koristan kada želite da smanjite šare pri očuvanju informacija o teksturi.",
	"@@Speckle_Filter-Type_tag9@@": "<strong>Filter za zamrzavanje</strong>--Umanjuje spekulaciju buke sa eksponencijalno prigušenim kružno simetričnim filterom koji koristi lokalnu statistiku unutar pojedinačnih prozora filtera. Ovaj filter je koristan kada želite da smanjite šare pri očuvanju ivica na radarskim slikama.",
	"@@Speckle_Filter-Type_tag11@@": "<strong>Kuan filter</strong>--Slično kao kod Lee filtera, ovaj filter primenjuje prostorni filter na svaki piksel na slici i filtrira podatke na osnovu lokalnih statistika izračunatih unutar kvadratnog prozora. Ovaj filter je koristan kada želite da smanjite šare pri očuvanju ivica na radarskim slikama.",
	"@@Speckle_Multiplicative-Noise-Mean_tag0@@": "Određuje srednju vrednost multiplikativne buke. Veća srednja vrednost buke će proizvesti manje umekšavanja, dok manja vrednost dovodi do većeg umekšavanja.",
	"@@Speckle_Multiplicative-Noise-Mean_tag1@@": "Ovaj parametar je validan samo kada je <strong>Tip filtera</strong> <strong>Lee filter</strong> a <strong>Model šuma</strong> <strong>Aditivni šum</strong> ili <strong>Aditivni i multiplikativni šum</strong>. Podrazumevana vrednost je 1.",
	"@@Speckle_Noise-Model_tag0@@": "Određuje vrstu buke koja smanjuje kvalitet radarske slike:",
	"@@Speckle_Noise-Model_tag1@@": "<strong>Multiplikativni šum</strong>--Slučajni signalni šum koji se množi u relevantni signal tokom snimanja ili prenosa",
	"@@Speckle_Noise-Model_tag3@@": "<strong>Aditivni šum</strong>--Slučajni signalni šum koji se dodaje u relevantni signal tokom snimanja ili prenosa",
	"@@Speckle_Noise-Model_tag5@@": "<strong>Aditivni i multiplikativni šum</strong>--Oba modela šuma",
	"@@Speckle_Noise-Variance_tag0@@": "Određuje promenljivu buke radarske slike.",
	"@@Speckle_Noise-Variance_tag1@@": "Ovaj parametar je validan samo kada je <strong>Tip filtera</strong> <strong>Lee filter</strong> a <strong>Model šuma</strong> <strong>Aditivni šum</strong> ili <strong>Aditivni i multiplikativni šum</strong>. Podrazumevana vrednost je 0,25.",
	"@@Speckle_Number-of-Looks_tag0@@": "Određuje broj izgleda slike koji kontroliše izravnavanje slike i procenjuje odstupanje od šuma. Manja vrednost dovodi douglađivanja, dok veća vrednost zadržava više karakteristika slike.",
	"@@Speckle_Number-of-Looks_tag1@@": "Ovaj parametar je validan samo kada je <strong>Tip filtera</strong> <strong>Lee filter</strong> a <strong>Model šuma</strong> <strong>Multiplikativni šum</strong> , ili kada je <strong>Tip filtera</strong> <strong>Kuan filter</strong>. Podrazumevana vrednost je 1.",
	"@@Speckle_Raster_tag0@@": "Ulazni raster.",
	"@@Spectral-Conversion_Conversion-Matrix_tag0@@": "Matrica koja se koristi za pretvaranje ulaznog rastera.",
	"@@Spectral-Conversion_Conversion-Matrix_tag1@@": "Jednačina koja se koristi za izvršavanje ovog pretvaranja je:",
	"@@Spectral-Conversion_Conversion-Matrix_tag2@@": "Izlazni opseg_R = Težina_P * Opseg_C",
	"@@Spectral-Conversion_Conversion-Matrix_tag3@@": "gde je:",
	"@@Spectral-Conversion_Conversion-Matrix_tag4@@": "Opseg_R izlazni opseg, gde je R broj od 1 do broja izlaznih opsega.",
	"@@Spectral-Conversion_Conversion-Matrix_tag5@@": "Težina_P je lista tegova koja je ograničena zarezom, 1 za svaki ulazni opseg. Zbir težina za svaki opseg treba da bude jednak 1.",
	"@@Spectral-Conversion_Conversion-Matrix_tag6@@": "Opseg_C je ulazna slika, gde je C broj od 1 do broja opsega ulazne slike.",
	"@@Spectral-Conversion_Raster_tag0@@": "Ulazni raster.",
	"@@Spectral-Conversion_Raster_tag1@@": "To može biti rasterski skup podataka, skup mozaika ili usluga slike.",
	"@@Spectral-Conversion_Size_tag0@@": "Broj redova i kolona u <strong>Matrici za konverziju</strong>.",
	"@@Square_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Square_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Square_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Square_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Square_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Square_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Square_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Square_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Square_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Square_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Square_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Square_Raster_tag0@@": "Izlaznu vrednost treba kvadrirati.",
	"@@Square-Root_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Square-Root_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Square-Root_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Square-Root_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Square-Root_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Square-Root_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Square-Root_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Square-Root_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Square-Root_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Square-Root_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Square-Root_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Square-Root_Raster_tag0@@": "Ulazne vrednosti koje se koriste za pronalaženje kvadratnog korena.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag0@@": "Podesite vrednosti statistike za svaki opseg.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag1@@": "Kolona ${Histogram} je polje samo za čitanje koje se može popuniti korišćenjem parametra <strong>Uvoz</strong>. Ako uvezete datoteku histograma, kolona ${Histogram} će biti označena kao <strong>Definisana</strong>.",
	"@@Statistics-and-Histogram_Import_tag0@@": "Uvezite statističke podatke i podatke o histogramu iz postojeće rasterske ili KSML datoteke.",
	"@@Statistics-and-Histogram_Raster_tag0@@": "Ulazni raster za koji je potrebno podesiti statistiku i histogram.",
	"@@Statistics-and-Histogram_Statistics_tag0@@": "Podesite vrednosti statistike za svaki opseg.",
	"@@Stream-Link_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smer toka ka svakoj ćeliji.",
	"@@Stream-Link_Flow-Direction-Raster_tag1@@": "Raster smera protoka može se kreirati pokretanjem funkcije <strong>Smer protoka</strong>.",
	"@@Stream-Link_Stream-Raster_tag0@@": "Raster ulaznog protoka koji predstavlja linearnu mrežu protoka.",
	"@@Stream-Order_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smer toka ka svakoj ćeliji.",
	"@@Stream-Order_Flow-Direction-Raster_tag1@@": "Raster smera protoka može se kreirati pokretanjem funkcije <strong>Smer protoka</strong>.",
	"@@Stream-Order_Order-Method_tag0@@": "Metoda koja se koristi za dodeljivanje redosleda protoka.",
	"@@Stream-Order_Order-Method_tag1@@": "<strong>STRAHLER</strong>--Metoda naručivanja protoka koju je Strahler predložio 1952. Redosled strimova povećava se samo kada se tokovi istog reda presecaju. Presek veze prvog i drugog reda ostaće veza drugog reda, umesto stvaranja veze trećeg reda. Ovo je podrazumevano.",
	"@@Stream-Order_Order-Method_tag3@@": "<strong>ŠREVE</strong>--Metoda naručivanja tokova po veličini, koju je predložio Šreve 1967. godine. Svim vezama bez pritoka dodeljena je jednaka veličina (redosled). Veličine su aditivni pad. Kada se dve veze presecaju, njihove veličine se dodaju i dodeljuju vezi spuštanja.",
	"@@Stream-Order_Stream-Raster_tag0@@": "Raster ulaznog protoka koji predstavlja linearnu mrežu protoka.",
	"@@Stretch_Auto-Gamma_tag0@@": "Upotrebite <strong>Auto Gama</strong> za izračunavanje game iz statističkih podataka i histograma skupa podataka. Statistika može biti procenjena statistika po samoj funkciji, ili statistika može proceniti softver ako odaberete sloj.",
	"@@Stretch_Dynamic-Range-Adjustment_tag0@@": "Obeležite okvir za potvrdu <strong>Podešavanje dinamičkog opsega</strong> ako želite da proračunavate statistiku samo preko piksela prikazanih na vašem ekranu. Ova se opcija uopšteno primenjuje kada će slika biti objavljena i korištena u veb aplikaciji koja ne može da izvede ovu vrstu rastezanja.",
	"@@Stretch_Estimate-Statistics_tag0@@": "Obeležite <strong>Procena statistike</strong> ako želite da procenite svoju statistiku. Procenjena statistika izračunava se iz uzorka od 1000 po 1000 iz središta rastera i koristi ga uz rastezanje.",
	"@@Stretch_Estimate-Statistics_tag3@@": "Ako je ovo obeleženo i raster ima statistiku, ili ste uneli vrednosti u tabeli <strong>Statistika</strong>, one će se koristiti umesto procene, osim ako rastezanje zahteva histogram. Ako rastezanje zahteva histogram koji ne postoji, on će se proceniti.",
	"@@Stretch_Gamma_tag0@@": "Koristite klizač da biste ručno podesili vrednost <strong>Gama</strong>.",
	"@@Stretch_Number-Of-Standard-Deviations_tag0@@": "Navedite n vrednost za broj standardnih odstupanja koja treba koristiti. Ova metoda se koristi da se naglasi koliko vrednosti karakteristika variraju od srednje vrednosti; najbolje je kada se koristi na normalno distribuiranim podacima.",
	"@@Stretch_Output-Maximum_tag0@@": "Podesite najveću vrednost piksela za histogram.",
	"@@Stretch_Output-Maximum_tag1@@": "<strong>Minimalni izlaz</strong> i <strong>Maksimalni izlaz</strong> podesiće opseg vrednosti koje će zatim biti u linearnom razvlačenju kontrasta.",
	"@@Stretch_Output-Minimum_tag0@@": "Podesite najnižu vrednost piksela za histogram.",
	"@@Stretch_Output-Minimum_tag1@@": "<strong>Minimalni izlaz</strong> i <strong>Maksimalni izlaz</strong> podesiće opseg vrednosti koje će zatim biti u linearnom razvlačenju kontrasta.",
	"@@Stretch_Percent-Clip-Maximum_tag0@@": "Navedite procenat visokih vrednosti koje treba isključiti iz istezanja.",
	"@@Stretch_Percent-Clip-Maximum_tag1@@": "Važeće vrednosti se kreću od 0 do 99.",
	"@@Stretch_Percent-Clip-Minimum_tag0@@": "Navedite procenat niskih vrednosti koje treba isključiti iz istezanja.",
	"@@Stretch_Percent-Clip-Minimum_tag1@@": "Važeće vrednosti se kreću od 0 do 99.",
	"@@Stretch_Raster_tag0@@": "Ulazni raster koji treba segmentirati.",
	"@@Stretch_Sigmoid-Strength-Level_tag0@@": "<strong>Nivo snage</strong> određuje koliki će deo sigmoidne funkcije biti korišćen u natezanju. Niska vrednost, kao što je 1, koristiće samo srednji deo krivulje, koji ima tendenciju da stvara tamne i slabe boje. Visoka vrednost, kao što je 6, koristiće celokupnu krivu koja teži da proizvede smele i oštre boje.",
	"@@Stretch_Statistics_tag0@@": "U okviru za dijalog možete uneti svoje sopstvene statistike. Podrazumevano se statistika preuzima iz podataka; međutim, koristiće se sve vrednosti koje unesete u ovaj parametar.",
	"@@Stretch_Type_tag0@@": "Odaberite metodu tipa istezanja:",
	"@@Stretch_Type_tag1@@": "NIjedna--Nema razvlačenja kontrasta",
	"@@Stretch_Type_tag2@@": "StdDev - Standardna devijacija rastezanja",
	"@@Stretch_Type_tag3@@": "MinMaks - Minimalno-maksimalno rastezanje",
	"@@Stretch_Type_tag4@@": "ProcentMinMaks--Rastezanje klipa procenta",
	"@@Stretch_Type_tag5@@": "Sigmoid - Sigmoidni deo",
	"@@Stretch_Use-Gamma_tag0@@": "Obeležite okvir <strong>Upotrebi gama</strong> ako želite da primenite gama razvlačenje.",
	"@@Swath_Cellsize_tag0@@": "The cell size for the output raster will be automatically detected; however, you can change this if you want to. Veličina ćelije se može menjati, ali opseg rasterskih podataka ostaće isti.",
	"@@Swath_Interpolation-Method_tag0@@": "Postoje četiri načina ponovnog formiranja ove funkcije:",
	"@@Swath_Interpolation-Method_tag1@@": "<strong>Najbliži sused</strong>--Izračunava vrednost piksela korišćenjem najbližeg piksela. Ako ne postoji izvorni piksel, u izlazu se ne može kreirati novi piksel.",
	"@@Swath_Interpolation-Method_tag3@@": "<strong>Bilinearni</strong>--Izračunava vrednost piksela koristeći udaljenost-ponderisanu vrednost četiri najbliža piksela.",
	"@@Swath_Interpolation-Method_tag5@@": "<strong>Linearno tiniranje</strong>--Koristi triangualrnu nepravilnu mrežu od središnjih tačaka svake ćelije na nepravilnom rasteru za interpoliranje površine koja se zatim pretvara u uobičajeni raster.",
	"@@Swath_Interpolation-Method_tag7@@": "<strong>Prirodni sused</strong>--Obavlja zadatak najbližeg okruženja, najbrži je metod interpolacije. Koristi se prvenstveno za diskretne podatke, kao što je klasifikacija korišćenja zemljišta, jer neće promeniti vrednosti ćelija. Maksimalna prostorna greška biće polovina veličine ćelije.",
	"@@Swath_Raster_tag0@@": "Neregularno raspoređen raster biće ponovo uzorkovan.",
	"@@Tan_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Tan_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Tan_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Tan_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Tan_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Tan_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Tan_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Tan_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Tan_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Tan_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Tan_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Tan_Raster_tag0@@": "Unos za koji se računa vrednos tangensa.",
	"@@TanH_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@TanH_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@TanH_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@TanH_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@TanH_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@TanH_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@TanH_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@TanH_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@TanH_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@TanH_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@TanH_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@TanH_Raster_tag0@@": "Ulaz za koji se izračunavaju hiperboličke vrednosti tangente.",
	"@@Tasseled-Cap_Raster_tag0@@": "Ulazni raster za izvršavanje transformacije na Tasseled Cap.",
	"@@Times_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Times_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Times_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Times_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Times_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Times_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Times_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Times_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Times_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Times_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Times_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Times_Raster_tag0@@": "Ulaz koji sadrži vrednosti za množenje.",
	"@@Times_Raster_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Times_Raster2_tag0@@": "Unos koji sadrži vrednosti sa kojima će prvi unos biti pomnožen.",
	"@@Times_Raster2_tag1@@": "Konstantna vrednost može se koristiti kao unos za ovaj parametar, ako je raster naveden za drugi parametar.",
	"@@Transpose-Bits_Bit-Pattern_tag0@@": "Izaberite vrstu transponiranja za izvršenje ili odredite prilagođenu:",
	"@@Transpose-Bits_Bit-Pattern_tag1@@": "Landsat 8 Cirus",
	"@@Transpose-Bits_Bit-Pattern_tag2@@": "Landsat 8 Oblak",
	"@@Transpose-Bits_Bit-Pattern_tag3@@": "Landsat 8 Senka oblaka",
	"@@Transpose-Bits_Bit-Pattern_tag4@@": "Landsat 8 Navedena popuna",
	"@@Transpose-Bits_Bit-Pattern_tag5@@": "Landsat 8 Ispušten okvir",
	"@@Transpose-Bits_Bit-Pattern_tag6@@": "Landsat 8 Sneg/led",
	"@@Transpose-Bits_Bit-Pattern_tag7@@": "Landsat 8 Okluzija terena",
	"@@Transpose-Bits_Bit-Pattern_tag8@@": "Landsat 8 Vegetacija",
	"@@Transpose-Bits_Bit-Pattern_tag9@@": "Landsat 8 Voda",
	"@@Transpose-Bits_Bit-Pattern_tag10@@": "Korisnički definisane",
	"@@Transpose-Bits_Constant-Value_tag0@@": "Neobavezna vrednost koja će se koristiti za popunjavanje svih bitova koji nisu uključeni u transponiranje. Ovaj parametar je izložen kada je parametar <strong>Kreiranje popune rastera od konstante</strong> podešen na <strong>Da</strong>.",
	"@@Transpose-Bits_Fill-Raster_tag0@@": "Navedite rasterski skup podataka koji će se koristiti za popunjavanje svih bitova koji nisu uključeni u transponiranje. Ovaj parametar je izložen kada je parametar <strong>Kreiranje popune rastera od konstante</strong> podešen na <strong>Ne</strong>.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag0@@": "Kreiranje popune rastera pomoću konstantne vrednosti:",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag1@@": "<strong>Da</strong>--Kreira se raster upotrebomi konstantne vrednost za popunjavanje bitova koji nisu uključeni u transponiranje. Ovo je podrazumevano.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag3@@": "<strong>Ne</strong>--Raster će se generisati korišćenjem vrednosti piksela iz postojećeg rasterskog skupa podataka da bi se popunili bitovi koji nisu uključeni u transponiranje.",
	"@@Transpose-Bits_Output-Bit-and-Input-Bit_tag0@@": "Tabela samo za čitanje koja pokazuje izlazne bitove i ulaze koji će biti na njihovom mestu.",
	"@@Transpose-Bits_Raster_tag0@@": "Ulazni raster za otpakivanje i ponovno postavljanje.",
	"@@Unit-Conversion_From-Unit_tag0@@": "Izvorni tip jedinice piksela.",
	"@@Unit-Conversion_Raster_tag0@@": "Ulazni raster koji će sadržati pretvorene jedinice.",
	"@@Unit-Conversion_To-Unit_tag0@@": "Konvertovani tip jedinice piksela.",
	"@@Vector-Field_Angle-Reference-System_tag0@@": "Navodi kako se meri komponenta pravca.",
	"@@Vector-Field_Angle-Reference-System_tag1@@": "Geografski--0° pokazuje prema severu i 90° pokazuje prema istoku",
	"@@Vector-Field_Angle-Reference-System_tag2@@": "Aritmetički--0° pokazuje prema istoku i 90° pokazuje prema severu",
	"@@Vector-Field_Input-Data-Type_tag0@@": "Tip vektorskog polja koje predstavljaju vaši ulazi.",
	"@@Vector-Field_Input-Data-Type_tag1@@": "Nepoznato--Nije poznato da li ulazi predstavljaju U-V ili Magnitudu-smer.",
	"@@Vector-Field_Input-Data-Type_tag2@@": "U-V - Ulazni podaci predstavljaju U i V komponente.",
	"@@Vector-Field_Input-Data-Type_tag3@@": "Magnituda-smer--Ulazni podaci predstavljaju magnitudu i smer.",
	"@@Vector-Field_Output-Data-Type_tag0@@": "Određuje vrstu vektorskog polja koje će predstavljati vaš izlaz.",
	"@@Vector-Field_Output-Data-Type_tag1@@": "Magnituda-Smer--Izlazni podaci predstavljaju veličinu i pravac.",
	"@@Vector-Field_Output-Data-Type_tag2@@": "U-V--Izlazni podaci predstavljaju U i V komponente.",
	"@@Vector-Field_Raster1_tag0@@": "Podesite podatke prvog ulaznog rastera.",
	"@@Vector-Field_Raster1_tag1@@": "Ovo će biti ili U vrednost ili veličine.",
	"@@Vector-Field_Raster2_tag0@@": "Podesite podatke drugog ulaznog rastera.",
	"@@Vector-Field_Raster2_tag1@@": "Ovo će biti ili V vrednost ili pravac.",
	"@@Viewshed_Analysis-Method_tag0@@": "Izaberite sloj iz kog će biti izračunata odstupanja Ova opcija vam omogućava da trgujete nekom tačnošću za povećane performanse.",
	"@@Viewshed_Analysis-Method_tag1@@": "Sve vidne linije - Na svakom pikselu u rasteru izvodi se vidna linija sa ciljem uspostavljanja vidljivih područja. Ovo je podrazumevani metod.",
	"@@Viewshed_Analysis-Method_tag2@@": "Perimetarna inija vida - Linije vida se izvode samo do piksela na obodu vidljivih područja da bi se utvrdila područja vidljivosti. Ovaj metod ima bolje performanse od metoda <strong>Sve vidne linije</strong> pošto je manje vidnih linija u kalkulaciji.",
	"@@Viewshed_Analysis-Type_tag0@@": "Izaberite vrstu analize vidljivosti koju želite da izvršite, bilo da odredite koliko je svaka ćelija vidljiva posmatračima, ili odredite za svaku površinsku lokaciju koje posmatrače je vidljivo.",
	"@@Viewshed_Analysis-Type_tag1@@": "Učestalost--Broj pojavljivanja svakog piksela u rasteru na površini ulaza može se videti po lokacijama za posmatranje ulaza (kao tačke ili kao vrhovi za karakteristike posmatračkog polja). Ovo je podrazumevano.",
	"@@Viewshed_Analysis-Type_tag2@@": "Posmatrači - Izlaz identifikuje tačno koje su posmatračke tačke vidljive sa svake lokacije površine rastera. Dozvoljeni maksimalni broj ulaznih posmatrača je 32 sa ovom vrstom analize.",
	"@@Viewshed_Horizontal-End-Angle_tag0@@": "Ova vrednost definiše krajnji ugao horizontalnog opsega skeniranja. Vrednost treba da bude navedena u stepenima od 0 do 360.0, gde je 0 orijentisan ka severu. Podrazumevana vrednost je 360,0.",
	"@@Viewshed_Horizontal-End-Angle_tag1@@": "Može se popuniti u unosu seta podataka <strong>Funkcije posmatrača</strong> ili numeričkoj vrednosti. Ako je ovaj parametar postavljen na neku vrednost, ta vrednost će se primeniti na sve posmatrače. Da biste odredili različite vrednosti za svakog posmatrača, postavite ovaj parametar na polje u setu podataka <strong>Funkcije posmatrača</strong>.",
	"@@Viewshed_Horizontal-Start-Angle_tag0@@": "Ova vrednost definiše početni ugao horizontalnog opsega skeniranja. Vrednost treba da bude navedena u stepenima od 0 do 360.0, gde je 0 orijentisan ka severu. Podrazumevana vrednost je 0.",
	"@@Viewshed_Horizontal-Start-Angle_tag1@@": "Može se popuniti u unosu seta podataka <strong>Funkcije posmatrača</strong> ili numeričkoj vrednosti. Ako je ovaj parametar postavljen na neku vrednost, ta vrednost će se primeniti na sve posmatrače. Da biste odredili različite vrednosti za svakog posmatrača, postavite ovaj parametar na polje u setu podataka <strong>Funkcije posmatrača</strong>.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag0@@": "Vrsta rastojanja za parametar unutrašnjeg radijusa.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag1@@": "Neobeleženo--<strong>Unutrašnji prečnik</strong> treba da bude interpretiran kao 2D udaljenost. Ovo je podrazumevano.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag4@@": "Obeleženo--<strong>Unutrašnji prečnik</strong> treba da bude interpretiran kao 3D udaljenost.",
	"@@Viewshed_Inner-Radius_tag0@@": "Ova vrednost definiše početnu (minimalnu) udaljenost sa koje se utvrđuje vidljivost. Pikseli bliži toj udaljenosti smatraju se nevidljivima na izlazu, ali mogu i dalje blokirati vidljivost piksela između <strong>Unutrašnjeg prečnika</strong> i <strong>Spoljnog prečnika</strong>. Podrazumevana vrednost je 0.",
	"@@Viewshed_Inner-Radius_tag5@@": "Može se popuniti u unosu seta podataka <strong>Funkcije posmatrača</strong> ili numeričkoj vrednosti. Ako je ovaj parametar postavljen na neku vrednost, ta vrednost će se primeniti na sve posmatrače. Da biste odredili različite vrednosti za svakog posmatrača, postavite ovaj parametar na polje u setu podataka <strong>Funkcije posmatrača</strong>.",
	"@@Viewshed_Observer-Elevation_tag0@@": "Ova vrednost se koristi za definisanje nadmorske visine posmatračkih tačaka ili vrhova.",
	"@@Viewshed_Observer-Elevation_tag1@@": "Može se popuniti u unosu seta podataka <strong>Funkcije posmatrača</strong> ili numeričkoj vrednosti. Ako ovaj parametar nije naveden, posmatračka visina će se dobiti iz površinskog rastera pomoću bilinearne interpolacije. Ako je ovaj parametar postavljen na neku vrednost, ta vrednost će se primeniti na sve posmatrače. Da biste odredili različite vrednosti za svakog posmatrača, postavite ovaj parametar na polje u setu podataka <strong>Funkcije posmatrača</strong>.",
	"@@Viewshed_Observer-Features_tag0@@": "Potrebni ulazni rasteri koji identifikuju lokacije izvora. To mogu biti tačke, višeslojne ili poliline karakteristike.",
	"@@Viewshed_Observer-Features_tag1@@": "Klasa karakteristika ulaza transformiše se u 3D geocentrični koordinatni sistem tokom izračuna vidljivosti. Posmatrači izvan obima površinskog rastera ili koji se nalaze na NoData ćelijama biće zanemareni u proračunu.",
	"@@Viewshed_Observer-Offset_tag0@@": "Ova vrednost označava vertikalno rastojanje (u površinskim jedinicama) koje se dodaje posmatračkom visini. To bi trebao biti pozitivan celi broj ili vrednost sa pokretnim zarezom.",
	"@@Viewshed_Observer-Offset_tag1@@": "Može se popuniti u unosu seta podataka <strong>Funkcije posmatrača</strong> ili numeričkoj vrednosti. Ako je ovaj parametar postavljen na neku vrednost, ta vrednost će se primeniti na sve posmatrače. Da biste odredili različite vrednosti za svakog posmatrača, postavite ovaj parametar na polje u setu podataka <strong>Funkcije posmatrača</strong>.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag0@@": "Vrsta rastojanja za parametar spoljnog radijusa.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag1@@": "Neobeleženo--<strong>Spoljašnji prečnik</strong> treba da bude interpretiran kao 2D udaljenost. Ovo je podrazumevano.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag4@@": "Obeleženo--<strong>Spoljašnji prečnik</strong> treba da bude interpretiran kao 3D udaljenost.",
	"@@Viewshed_Outer-Radius_tag0@@": "Ova vrednost definiše maksimalno rastojanje sa kojeg se utvrđuje vidljivost. Pikseli izvan ove udaljenosti isključeni su iz analize.",
	"@@Viewshed_Outer-Radius_tag1@@": "Može se popuniti u unosu seta podataka <strong>Funkcije posmatrača</strong> ili numeričkoj vrednosti. Ako je ovaj parametar postavljen na neku vrednost, ta vrednost će se primeniti na sve posmatrače. Da biste odredili različite vrednosti za svakog posmatrača, postavite ovaj parametar na polje u setu podataka <strong>Funkcije posmatrača</strong>.",
	"@@Viewshed_Raster_tag0@@": "Potrebni ulazni raster. To može da bude integralni ili raster sa pokretnim zarezom.",
	"@@Viewshed_Raster_tag1@@": "Ulaz se transformiše u 3D geocentrični koordinatni sistem tokom izračuna vidljivosti. NoData ćelije na ulaznom rasteru ne blokiraju određivanje vidljivosti.",
	"@@Viewshed_Refractive-Coefficient_tag0@@": "Koeficijent refrakcije vidljive svetlosti u vazduhu.",
	"@@Viewshed_Refractive-Coefficient_tag1@@": "Podrazumevana vrednost je 0,13.",
	"@@Viewshed_Surface-Offset_tag0@@": "Ova vrednost ukazuje na vertikalnu udaljenost (u površinskim jedinicama) koja će se dodati z-vrednosti svakog ciljanog piksela jer se smatra za vidljivost. To bi trebao biti pozitivan celi broj ili vrednost sa pokretnim zarezom.",
	"@@Viewshed_Surface-Offset_tag1@@": "Može se popuniti u unosu seta podataka <strong>Funkcije posmatrača</strong> ili numeričkoj vrednosti. Ako je ovaj parametar postavljen na neku vrednost, ta vrednost će se primeniti na sve posmatrače. Da biste odredili različite vrednosti za svakog posmatrača, postavite ovaj parametar na polje u setu podataka <strong>Funkcije posmatrača</strong>.",
	"@@Viewshed_Vertical-Error_tag0@@": "Količina nesigurnosti, merena kao greška srednjeg kvadratnog korena (RMSE), u vrednostima površine elevacije. To je vrednost sa pokretnim zarezom koja predstavlja očekivanu grešku ulaznih vrednosti nadmorske visine. Kada se ovom parametru dodeli vrednost veća od 0, izlazni raster vidljivosti biće plutajuća tačka. U ovom slučaju, svaka vrednost piksela na izlaznom rasteru vidljivosti predstavlja zbir verovatnoće koje je ćelija vidljiva bilo kom posmatraču.",
	"@@Viewshed_Vertical-Error_tag1@@": "Kada je <strong>Tip analize</strong> <strong>Posmatrači</strong> ili <strong>Metod analize</strong> <strong>Linije vidokruga na obimu</strong>, ovaj parametar je isključen.",
	"@@Viewshed_Vertical-Lower-Angle_tag0@@": "Ova vrednost definiše donju granicu vertikalnog ugla skeniranja ispod horizontalne ravni. Vrednost treba biti navedena u stepenima od -90,0 do 0, što može biti celi broj ili plutajuća tačka. Podrazumevana vrednost je -90,0.",
	"@@Viewshed_Vertical-Lower-Angle_tag1@@": "Može se popuniti u unosu seta podataka <strong>Funkcije posmatrača</strong> ili numeričkoj vrednosti. Ako je ovaj parametar postavljen na neku vrednost, ta vrednost će se primeniti na sve posmatrače. Da biste odredili različite vrednosti za svakog posmatrača, postavite ovaj parametar na polje u setu podataka <strong>Funkcije posmatrača</strong>.",
	"@@Viewshed_Vertical-Upper-Angle_tag0@@": "Ova vrednost definiše gornju granicu vertikalnog ugla skeniranja iznad horizontalne ravni. Vrednost treba biti navedena u stepenima od 0 do 90,0, što može biti celi broj ili plutajuća tačka. Podrazumevana vrednost je 90,0.",
	"@@Viewshed_Vertical-Upper-Angle_tag1@@": "Može se popuniti u unosu seta podataka <strong>Funkcije posmatrača</strong> ili numeričkoj vrednosti. Ako je ovaj parametar postavljen na neku vrednost, ta vrednost će se primeniti na sve posmatrače. Da biste odredili različite vrednosti za svakog posmatrača, postavite ovaj parametar na polje u setu podataka <strong>Funkcije posmatrača</strong>.",
	"@@Watershed_Flow-Direction-Raster_tag0@@": "Ulazni raster koji pokazuje smer toka ka svakoj ćeliji.",
	"@@Watershed_Flow-Direction-Raster_tag1@@": "Raster smera protoka može se kreirati pokretanjem funkcije <strong>Smer protoka</strong>.",
	"@@Watershed_Pour-Point(s)-Raster_tag0@@": "Lokacije ulaznih tačaka slivanja.",
	"@@Watershed_Pour-Point(s)-Raster_tag1@@": "Za raster, ovo predstavlja ćelije iznad onoga što će biti drenažno područije, ili sliv, i to će biti utvrđeno. Sve ćelije koje nisu NoData će biti korišćene kao izvorne ćelije.",
	"@@Watershed_Pour-Point-Field_tag0@@": "Polje koje se koristi za dodeljivanje vrednosti lokacijama tačaka slivanja.",
	"@@Watershed_Pour-Point-Field_tag1@@": "Za skup podataka o rasterskoj tački, podrazumevano se koristi ${Value}.",
	"@@Weighted-Overlay_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Weighted-Overlay_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Weighted-Overlay_Cellsize-Type_tag2@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Weighted-Overlay_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Weighted-Overlay_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Weighted-Overlay_Cellsize-Type_tag5@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Weighted-Overlay_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Weighted-Overlay_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Weighted-Overlay_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Weighted-Overlay_Extent-Type_tag3@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Weighted-Overlay_Extent-Type_tag4@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Weighted-Overlay_Scales_tag0@@": "Raspon za nove vrednosti pomoću kojih se ponovo postavljaju stare vrednosti.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag0@@": "Ponderisana tablica prekrivača sastoji se od četiri dela:",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag1@@": "Sloj--Svi ulazni rasteri moraju biti tipa celog broja.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag2@@": "Uticaj--Svaki ulazni raster se ponderiše u skladu sa njegovom važnošću ili uticajem, kao relativni procenat. Zbir procenata težine uticaja mora biti jednak 100, a svaka težina mora biti određena brojevima.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag3@@": "Polje--Polje od celog broja ili niza na ulaznom rasteru koje se koristi za ponderisanje.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag4@@": "Remap Tabela--Svakoj vrednosti u ulaznom rasteru dodeljuje se nova skala na osnovu prepravljene tabele. Vrednost skale može biti validna ili NoData vrednost.",
	"@@Weighted-Sum_Cellsize-Type_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Weighted-Sum_Cellsize-Type_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Weighted-Sum_Cellsize-Type_tag2@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Weighted-Sum_Cellsize-Type_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Weighted-Sum_Cellsize-Type_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Weighted-Sum_Cellsize-Type_tag5@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Weighted-Sum_Extent-Type_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Weighted-Sum_Extent-Type_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Weighted-Sum_Extent-Type_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Weighted-Sum_Extent-Type_tag3@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Weighted-Sum_Extent-Type_tag4@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag0@@": "Ponderisana tabela sa zbirom je definisana sa tri svojstva:",
	"@@Weighted-Sum_Weighted-Sum-Table_tag1@@": "Sloj--Raster koji se ponderiše.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag2@@": "Polje--Polje rastera koje se koristi za ponderisanje.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag3@@": "Težina--Vrednost mase za umnožavanje rastera. To može biti bilo koja pozitivna ili negativna decimalna vrednost.",
	"@@Wind-Chill_Temperature-Raster_tag0@@": "Jednopojasni raster gde vrednosti piksela predstavljaju temperaturu spoljnog vazduha.",
	"@@Wind-Chill_Temperature-Units_tag0@@": "Merna jedinica povezana sa rasterom ulazne temperature. Dostupne ulazne jedinice su Celzijus, Farenhejt i Kelvin.",
	"@@Wind-Chill_Wind-Chill-Units_tag0@@": "Merna jedinica povezana sa izlaznim rasterom. Dostupne izlazne jedinice su Celzijus, Farenhejt i Kelvin.",
	"@@Wind-Chill_Wind-Speed-Raster_tag0@@": "Jednopojasni raster gde vrednosti piksela predstavljaju brzinu vetra.",
	"@@Wind-Chill_Wind-Speed-Units_tag0@@": "Definiše mernu jedinicu za rastere brzine vetra:",
	"@@Wind-Chill_Wind-Speed-Units_tag1@@": "Milja na sat (mph)",
	"@@Wind-Chill_Wind-Speed-Units_tag2@@": "Kilometra po satu (km/h)",
	"@@Wind-Chill_Wind-Speed-Units_tag3@@": "Metara po sekundi (ft/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag4@@": "Stopa po sekundi (ft/s)",
	"@@Wind-Chill_Wind-Speed-Units_tag5@@": "Čvorova (kn)",
	"@@Zonal-Remap_Background-Value_tag0@@": "Početna vrednost piksela izlaznog rastra, pre nego što se ponovo unesu pikseli.",
	"@@Zonal-Remap_Default-Output-Value_tag0@@": "Vrednost koja će biti dodeljena pikselu koja ne zadovoljava nijedan od uslova postavljenih u <strong>Tabeli zonskih atributa</strong>.",
	"@@Zonal-Remap_Default-Output-Value_tag3@@": "Ovo će takođe biti vrednost izlaznih piksela ako parametar <strong>Naziv polja za odlaznu vrednost</strong> bude ostavljen bez navoda ili se izlazna vrednost odgovarajuće zonske granične vrednosti ostavi nenavedena u <strong>Tabeli zonskih atributa</strong>.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag0@@": "Naziv polja koja sadrži maksimalnu vrednost ispod koje se ponovo podešava ulazni piksel.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag1@@": "Ako nije određeno, ili ako je vrednost polja nula, vrednosti piksela ne testiraju se maksimalno.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag0@@": "Naziv polja koja sadrži minimalnu vrednost iznad koje se ponovo podešava ulazni piksel.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag1@@": "Ako nije definisano ili je vrednost polja nula, vrednosti piksela se ne testiraju kao minimalne.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag0@@": "Naziv polja koji sadrži ciljnu vrednost kojoj je ulazni piksel ponovo dodeljen.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag1@@": "Ako nije određeno, ili ako je vrednost polja nula, podešavaju se ponovo podešene vrednosti piksela <strong>Podrazumevana izlazna vrednost</strong>.",
	"@@Zonal-Remap_Value-Raster_tag0@@": "Potreban jednopojasni rasterski unos koji sadrži vrednosti piksela za ponovno podešavanje.",
	"@@Zonal-Remap_Where-Clause_tag0@@": "Opcionalni upit prijavljen na <strong>Tabelu za zonske atribute</strong>.",
	"@@Zonal-Remap_Where-Clause_tag3@@": "Ako ste kao primer koristili gornju tabelu, upit će biti ${Variable1 = 'bare earth' AND Variable2 = 'California'}.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag0@@": "Obavezna ulazna tabela koja sadrži najmanje tri polja. Mora imati minimalnu vrednost praga, maksimalnu vrednost praga i ciljnu vrednost. Ciljna vrednost je polje koje će sadržavati prerađenu vrednost.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag1@@": "Format datoteke može biti klasa karakteristika, servis funkcija ili bilo koji tip tabele koji ArcGIS podržava.",
	"@@Zonal-Remap_Zone-Field_tag0@@": "Naziv polja u <strong>Tabeli zonskih atributa</strong> koji sadrži ID vrednosti zone.",
	"@@Zonal-Remap_Zone-Field_tag3@@": "Vrednosti ID-a zone direktno su vezane za ID-ove zone u vašem zonskom rasteru. Omogućavaju još jedan nivo filtriranja dok vrši ponovno podešavanje. Ako u tabeli ne postoji ID zone povezan sa određenim zapisom, neće učestvovati u prepravljanju podataka.",
	"@@Zonal-Remap_Zone-Raster_tag0@@": "Jednopojasni raster gde svaki piksel definiše zone povezane sa određenom lokacijom. Zona je definisana kao sve oblasti u ulazu koje imaju istu vrednost. Oblasti ne moraju da budu susedne.",
	"@@Predict-Using-Trend_dimensiondefinition_tag0@@": "Navodi metod koji se koristi za obezbeđivanje vrednosti za predikciju dimenzija.",
	"@@Predict-Using-Trend_dimensiondefinition_tag1@@": "<strong>Prema vrednosti</strong>--Predikcija se izračunava za jednu vrednost dimenzije. Na primer, ako želite da predvidite godišnju precipitaciju za godine 2050, 2100 i 2150. Ovo je podrazumevano.",
	"@@Predict-Using-Trend_dimensiondefinition_tag2@@": "<strong>Po intervalu</strong>--Predviđanje će se izračunati za interval dimenzije definisane početnom i završnom vrednošću. Na primer, ako želite da predvidite godišnju precipitaciju za svaku godinu između 2050 i 2150.",
	"@@Predict-Using-Trend_end_tag0@@": "Datum završetka, visina ili dubina intervala dimenzije biće upotrebljeni u predviđanju.",
	"@@Predict-Using-Trend_end_tag1@@": "Ovaj parametar je potreban kada je parametar <strong>Definicija dimenije</strong> podešen na <strong>Po intervalu</strong>.",
	"@@Predict-Using-Trend_raster_tag0@@": "Ulazni multidimenzijalni trend rastera iz funkcije <strong>Kreiranje trenda</strong>.",
	"@@Predict-Using-Trend_start_tag0@@": "Datum početka, visina ili dubina intervala dimenzije biće upotrebljeni u predviđanju.",
	"@@Predict-Using-Trend_start_tag1@@": "Ovaj parametar je potreban kada je parametar <strong>Definicija dimenije</strong> podešen na <strong>Po intervalu</strong>.",
	"@@Predict-Using-Trend_unit_tag0@@": "Jedinica će se koristiti za interval vrednost. Ovaj parametar primenjuje se samo kada je dimenzija analize vremenska dimenzija.",
	"@@Predict-Using-Trend_unit_tag1@@": "<strong>Sati</strong>--Predviđanje će se izračunati za svaki sat u opsegu vremena opisanog parametrima <strong>Početak</strong>, <strong>Kraj</strong> i <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_unit_tag2@@": "<strong>Dani</strong>--Predviđanje će se izračunati za svaki dan u opsegu vremena opisanog parametrima <strong>Početak</strong>, <strong>Kraj</strong> i <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_unit_tag3@@": "<strong>Nedelje</strong>--Predviđanje će se izračunati za svaku nedelju u opsegu vremena opisanog parametrima <strong>Početak</strong>, <strong>Kraj</strong> i <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_unit_tag4@@": "<strong>Meseci</strong>--Predviđanje će se izračunati za svaki mesec u opsegu vremena opisanog parametrima <strong>Početak</strong>, <strong>Kraj</strong> i <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_unit_tag5@@": "<strong>Godine</strong>--Predviđanje će se izračunati za svaku godinu u opsegu vremena opisanog parametrima <strong>Početak</strong>, <strong>Kraj</strong> i <strong>Interval vrednosti</strong>.",
	"@@Predict-Using-Trend_valueinterval_tag0@@": "Broj koraka između dve dimenzije vrednosti koji će biti uključen u predviđanje. Podrazumevana vrednost je 1.",
	"@@Predict-Using-Trend_valueinterval_tag1@@": "Ovaj parametar je potreban kada je parametar <strong>Definicija dimenije</strong> podešen na <strong>Po intervalu</strong>.",
	"@@Predict-Using-Trend_values_tag0@@": "Vrednost ili vrednosti dimenzije koje će se koristiti u predviđanju.",
	"@@Predict-Using-Trend_values_tag1@@": "Vrednosti za vremenski format, dubinu i visinu moraju da odgovaraju formatu dimenzije vrednosti koja se koristi za kreiranje rastera trenda. Ako je raster trenda kreiran preko dimenzije StdTime, format treba da bude GGGG-MM-DDTČČ:MM:SS, na primer, 2050-01-01T00:00:00. Višestruke vrednosti se odvajaju tačkom i zapetom.",
	"@@Process-Raster-Collection_aggregationfunction_tag0@@": "Navedite šablon za funkciju rastera koji se koristi za uklapanje više isečaka u manje isečaka ili jedan isečak.",
	"@@Process-Raster-Collection_dimension_tag0@@": "Dimenzija agregacije. Ovo je dimenzija duž koje će se varijable agregirati.",
	"@@Process-Raster-Collection_itemfunction_tag0@@": "Navedite šablon funkcije rastera koji se koristi za obradu svakog isečka ili stavke u kolekciji ulaznog rastera.",
	"@@Process-Raster-Collection_keywordinterval_tag0@@": "Određuje interval ključnih reči koji će se koristiti prilikom objedinjavanja duž dimenzije. Ovaj parametar je potreban kada se <strong>Tip</strong> podesi na <strong>Ključnu reč za interval</strong>, a agregacija mora da bude na vremenskoj osnovi.",
	"@@Process-Raster-Collection_keywordinterval_tag1@@": "<strong>Po satu</strong>--Vrednosti podataka objedinit će se uz satne vremenske korake, a rezultat će uključivati svaki sat u vremenskoj seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag2@@": "<strong>Po danu</strong>--Vrednosti podataka objedinit će se uz dnevne vremenske korake, a rezultat će uključivati svaki sat u vremenskoj seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag3@@": "<strong>Po nedelji</strong>--Vrednosti podataka objedinit će se uz nedeljne vremenske korake, a rezultat će uključivati svaki sat u vremenskoj seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag4@@": "<strong>Dekadno</strong>--Vrednosti podataka objedinit će se u tri perioda od po 10 dana. Poslednji period može da sadrži više ili manje od 10 dana. Rezultat će uključivati 3 kriške za svaki mesec.",
	"@@Process-Raster-Collection_keywordinterval_tag5@@": "<strong>Petodnevno</strong>--Vrednosti podataka objedinit će se u 6 perioda od po 5 dana. Poslednji period može da sadrži više ili manje od 5 dana. Rezultat će uključivati 6 kriške za svaki mesec.",
	"@@Process-Raster-Collection_keywordinterval_tag6@@": "<strong>Po mesecu</strong>--Vrednosti podataka objedinit će se uz mesečne vremenske korake, a rezultat će uključivati svaki sat u vremenskoj seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag7@@": "<strong>Po kvartalu</strong>--Vrednosti podataka objedinit će se uz kvartalne vremenske korake, a rezultat će uključivati svaki sat u vremenskoj seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag8@@": "<strong>Po godini</strong>--Vrednosti podataka objedinit će se uz godišnje vremenske korake, a rezultat će uključivati svaki sat u vremenskoj seriji.",
	"@@Process-Raster-Collection_keywordinterval_tag9@@": "<strong>Svakodnevno ponavljanje</strong>--Vrednosti podataka objediniće se u dnevne vremenske korake, a rezultat će uključivati jednu agregiranu vrijednost po Julianskom danu. Rezultat će obuhvatati najviše 366 dnevnih odseka vremena.",
	"@@Process-Raster-Collection_keywordinterval_tag10@@": "<strong>Ponavljanje</strong>--Vrednosti podataka objediniće se u vremenske nedeljne korake, a rezultat će uključivati jednu agregiranu vrijednost po nedelji. Rezultat će uključivati, najviše, 53 nedeljna odeljka vremena.",
	"@@Process-Raster-Collection_keywordinterval_tag11@@": "<strong>Ponavljanje mesečno</strong>--Vrednosti podataka objediniće se u vremenske mesečne korake, a rezultat će uključivati jednu agregiranu vrijednost po mesecu. Rezultat će uključivati najviše 12 mesečnih odseka vremena.",
	"@@Process-Raster-Collection_keywordinterval_tag12@@": "<strong>Ponavljanje kvartalno</strong>--Vrednosti podataka objediniće se u vremenske kvartalne korake, a rezultat će uključivati jednu agregiranu vrijednost po kvartalu. Rezultat će uključivati najviše 4 kvartalna odseka vremena.",
	"@@Process-Raster-Collection_maximumvalue_tag0@@": "Maksimalna vrednost za opseg.",
	"@@Process-Raster-Collection_maximumvalue_tag1@@": "Ovaj parametar je potreban kada je parametar <strong>Tip</strong> podešen na <strong>Opsezi intervala</strong>.",
	"@@Process-Raster-Collection_minimumvalue_tag0@@": "Minimalna vrednost za opseg.",
	"@@Process-Raster-Collection_minimumvalue_tag1@@": "Ovaj parametar je potreban kada je parametar <strong>Tip</strong> podešen na <strong>Opsezi intervala</strong>.",
	"@@Process-Raster-Collection_processingfunction_tag0@@": "Navedite šablon za funkciju rastera koji se koristi za prikaz obrađenog sloja rastera.",
	"@@Process-Raster-Collection_rastercollection_tag0@@": "Ulazni multidimenzionalni raster, mozaički sloj ili mozaički set podataka.",
	"@@Process-Raster-Collection_type_tag0@@": "Određuje interval dimenzija za koji će se podaci agregirati.",
	"@@Process-Raster-Collection_type_tag1@@": "<strong>Svi</strong>--Vrednosti podataka će se agregirati na svim isečcima. Ovo je podrazumevano.",
	"@@Process-Raster-Collection_type_tag2@@": "<strong>Ključna reč za interval</strong>--Promenljivi podaci će se objediniti koristeći opšte poznati interval.",
	"@@Process-Raster-Collection_type_tag3@@": "<strong>Interval opsega</strong>--Podaci promenljivih će se agregirati između određenih parova vrednosti ili datuma.",
	"@@Process-Raster-Collection_type_tag4@@": "<strong>Vrednosti intervala</strong>--Promenljivi podaci će se objediniti koristeći interval i jedinicu navedenu od strane korisnika.",
	"@@Process-Raster-Collection_unit_tag0@@": "Jedinica će se koristiti za internu vrednost. Ovaj parametar je potreban kada je <strong>Dimenzija</strong> vremensko polje a parametar <strong>Tip</strong> podešen na <strong>Vrednost intervala</strong>.",
	"@@Process-Raster-Collection_unit_tag1@@": "Ako agregirate preko bilo čega osim vremena, ova opcija neće biti dostupna, a jedinica za vrednost intervala će odgovarati promenljivoj jedinici ulaznih višedimenzionalnih rasterskih podataka.",
	"@@Process-Raster-Collection_unit_tag2@@": "<strong>Sati</strong>--Vrednosti podataka objedinit će se u satne isečke u navedenom intervalu.",
	"@@Process-Raster-Collection_unit_tag3@@": "<strong>Dani</strong>--Vrednosti podataka objedinit će se u dnevne isečke u navedenom intervalu.",
	"@@Process-Raster-Collection_unit_tag4@@": "<strong>Nedelje</strong>--Vrednosti podataka objedinit će se u nedeljne isečke u navedenom intervalu.",
	"@@Process-Raster-Collection_unit_tag5@@": "<strong>Meseci</strong>--Vrednosti podataka objedinit će se u mesečne isečke u navedenom intervalu.",
	"@@Process-Raster-Collection_unit_tag6@@": "<strong>Godine</strong>--Vrednosti podataka objedinit će se u godišnje isečke u navedenom intervalu.",
	"@@Process-Raster-Collection_valueinterval_tag0@@": "Veličina intervala koji će se koristiti za agregaciju. Ovaj parametar je potreban kada je parametar <strong>Tip</strong> podešen na <strong>Vrednosti intervala</strong>.",
	"@@Process-Raster-Collection_valueinterval_tag1@@": "Na primer, za dodavanje podataka za mesečne temperature za 30 godina u podeocima od 5-godina, unseite 5 kao <strong>Interval vrednosti</strong>, a navedite <strong>Jedinicu</strong> kao <strong>Godine</strong>.",
	"@@Linear-Spectral-Unmixing_non-negative_tag0@@": "Navodi opcije za definiciju vrednosti izlaznih piksela.",
	"@@Linear-Spectral-Unmixing_non-negative_tag1@@": "Obeleženo--Neće biti negativnih izlaznih vrednosti.",
	"@@Linear-Spectral-Unmixing_non-negative_tag2@@": "Neobeleženo--Mogu da postoje negativne vrednosti frakcionog zemljanog pokrivača.",
	"@@Linear-Spectral-Unmixing_raster_tag0@@": "Ulazni raster.",
	"@@Linear-Spectral-Unmixing_spectralprofile_tag0@@": "Datoteka za ulazni spektralni profil.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag0@@": "Spektralne informacije za različite klase zemljanih pokrivača.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag1@@": "<strong>Spektralni profil</strong>--Datoteka za definiciju klasifikatora (${.ecd}), kreirana iz alata <strong><strong>Train Maximum Likelihood Classifier</strong></strong>, ili JavaScript Object Notation datoteke (${.json}) koja sadrži klasu spektralnih profila.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag2@@": "<strong>Funkcija za obuku</strong>--Funkcija poligona ili uzorak klase poligonalnog geoobjekta za obuku, kreiran iz <strong>Training Samples Manager</strong>.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag0@@": "Navodi opcije za definiciju vrednosti izlaznih piksela.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag1@@": "Obeleženo--Klase vrednosti za svaki piksel obezbeđene su u decimalnom formatu tako da je zbir svih klasa jednak 1. Na primer, Class1 = 0,16; Class2 = 0,24; Class3 = 0,60.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag2@@": "Neobeleženo--Zbir svih klasa u pikselu može da bude veći od 1.",
	"@@Linear-Spectral-Unmixing_trainingfeature_tag0@@": "Datoteka za ulaznu funkciju za obuku.",
	"@@Aggregate_aggregationtechnique_tag0@@": "Metod koji se koristi za grupisanje. Vrednosti u ćelijama za ulaz obuhvaćene prostijim odlaznim ćelijama grupisane su prema jednoj od sledećih statistika:",
	"@@Aggregate_aggregationtechnique_tag1@@": "<strong>Zbir</strong>--Ukupan zbir ulaznih ćelija. Ovo je podrazumevano.",
	"@@Aggregate_aggregationtechnique_tag2@@": "<strong>Maksimum</strong>--Najveća vrednost za ulazne ćelije.",
	"@@Aggregate_aggregationtechnique_tag3@@": "<strong>Srednja vrednost</strong>--Srednja vrednost za ulazne ćelije.",
	"@@Aggregate_aggregationtechnique_tag4@@": "<strong>Medijana</strong>--Medijalna vrednost za ulazne ćelije.",
	"@@Aggregate_aggregationtechnique_tag5@@": "<strong>Minimum</strong>--Minimalna vrednost za ulazne ćelije.",
	"@@Aggregate_cellfactor_tag0@@": "Faktor kojim se množi veličina ćelije ulaznog rastera.",
	"@@Aggregate_cellfactor_tag1@@": "Na primer, faktor vrednosti ćelije od tri doneo bi rezultat u odlaznoj ćeliji tri puta veći od ulaznog rastera.",
	"@@Aggregate_expandextentifneeded_tag0@@": "Definiše kako da obradite granice ulaznog rastera kada njegovi redovi ili kolone nisu pomnoženi faktorom ćelija.",
	"@@Aggregate_expandextentifneeded_tag1@@": "Obeleženo--Proširuje gornje ili desne granice ulaznog rastera tako da ukupni broj ćelija u redu ili koloni bude proizvod faktora ćelije. Uz ovu opciju, odlazni raster može da pokrije veći prostorni opseg od ulaznog rastera. Ovo je podrazumevano.",
	"@@Aggregate_expandextentifneeded_tag2@@": "Neobeleženo--Smanjuje broj redova ili kolona odlaznog rastera. Ovo smanjuje preostale ćelije u gornjim ili desnim granicama ulaznog rastera, tako da broj redova ili kolona u ulaznom rasteru bude proizvod faktora ćelije. Uz ovu opciju, odlazni raster može da pokrije manji prostorni opseg od ulaznog rastera.",
	"@@Aggregate_ignorenodataincalculations_tag0@@": "Označava da li kalkulacije za grupisanje zanemaruju vrednosti ${NoData}.",
	"@@Aggregate_ignorenodataincalculations_tag1@@": "Obeleženo--Navodi se da ako ${NoData} vrednosti postoje za bilo koju ćeliju koja potpada u prostorni opseg veće ćelije na izlaznom rasteru, vrednosti ${NoData} biće ignorisane kada se određuje vrednost za lokacije izlazne ćelije. Samo ulazne ćelije sa opsegom odlazne ćelije koja ima vrednosti podataka biće upotrebljene za određivanje vrednosti odlazne ćelije. Ovo je podrazumevano.",
	"@@Aggregate_ignorenodataincalculations_tag2@@": "Neobeleženo--Navodi da ako bilo koja ćelija spada u prostorni opseg veće ćelije na odlaznom rasteru ima vrednost ${NoData}, vrednost za podatke za tu odlaznu lokaciju ćelija biće ${NoData}. Kada se ova opcija koristi, implicira se da kada ćelije u okviru grupacije sadrže ${NoData} vrednost, postoji nedovoljno informacija za obavljanje navedenih kalkulacija neophodnih za određivanje odlazne vrednosti.",
	"@@Aggregate_raster_tag0@@": "Ulazni raster koji treba grupisati.",
	"@@Expand_numberofcells_tag0@@": "Broj ćelija za proširenje.",
	"@@Expand_numberofcells_tag1@@": "Vrednost mora biti ceo broj, i može biti 1 ili veći.",
	"@@Expand_raster_tag0@@": "Ulazni raster za koji suidentifikovane zone koje treba proširiti.",
	"@@Expand_raster_tag1@@": "Mora biti ceo broj.",
	"@@Expand_zonevalues_tag0@@": "Lista zona za proširenje.",
	"@@Expand_zonevalues_tag1@@": "Vrednosti za zonu moraju biti ceo broj, i one mogu biti u bilo kom redosledu.",
	"@@Expand_zonevalues_tag2@@": "Da biste naveli više zona, upotrebite razmak za odvajanje zonskih vrednosti.",
	"@@Multidimensional-Filter_dimension_tag0@@": "Dimenzija iz koje se izvlače promenljive.",
	"@@Multidimensional-Filter_dimensiondefinition_tag0@@": "Određuje metod koji će se koristiti za kreiranje isečka dimenzije.",
	"@@Multidimensional-Filter_dimensiondefinition_tag1@@": "<strong>Sve</strong>--Kompletan opseg dimenzija koji će se koristiti. Ovo je podrazumevano.",
	"@@Multidimensional-Filter_dimensiondefinition_tag2@@": "<strong>Prema vrednostima</strong>--Dimenzija će biti podeljena na isečke pomoću vrednosti dimenzije ili liste vrednosti.",
	"@@Multidimensional-Filter_dimensiondefinition_tag3@@": "<strong>Prema opsezima</strong>--Dimenzija će biti podeljena na isečke pomoću opsega ili liste opsega.",
	"@@Multidimensional-Filter_dimensiondefinition_tag4@@": "<strong>Prema iteraciji</strong>--Dimenzija će biti podeljena na isečke prema navedenoj veličini intervala.",
	"@@Multidimensional-Filter_endoffirstiteration_tag0@@": "Kraj prvog intervala. Ovaj interval se koristi za iteraciju kroz set podataka. Ovaj parametar je potreban kada je parametar <strong>Definicija dimenije</strong> podešen na <strong>Prema iteraciji</strong>.",
	"@@Multidimensional-Filter_maximumvalue_tag0@@": "Maksimalna vrednost za opseg. Ovaj parametar je potreban kada je parametar <strong>Definicija dimenije</strong> podešen na <strong>Po opsezima</strong>.",
	"@@Multidimensional-Filter_minimumvalue_tag0@@": "Minimalna vrednost za opseg. Ovaj parametar je potreban kada je parametar <strong>Definicija dimenije</strong> podešen na <strong>Po opsezima</strong>.",
	"@@Multidimensional-Filter_raster_tag0@@": "Ulazni višedimenzionalni raster.",
	"@@Multidimensional-Filter_ranges_tag0@@": "<p>Interalni navedeni u tabeli se koriste za objedinjavanje grupa vrednosti. Minimalne i maksimalne vrednosti navode opseg koji će biti uključen.</p><p>Ovaj parametar je potreban kada je parametar<strong>Tip</strong>podešen na<strong>Opsezi intervala</strong>.</p>",
	"@@Multidimensional-Filter_startoffirstiteration_tag0@@": "Početak prvog intervala. Ovaj interval se koristi za iteraciju kroz set podataka. Ovaj parametar je potreban kada je parametar <strong>Definicija dimenije</strong> podešen na <strong>Prema iteraciji</strong>.",
	"@@Multidimensional-Filter_step_tag0@@": "Frekvencija za kreiranje isečaka za podatke. Ovaj parametar je potreban kada je parametar <strong>Definicija dimenije</strong> podešen na <strong>Prema iteraciji</strong>. Podrazumevano je 3.",
	"@@Multidimensional-Filter_unit_tag0@@": "Navodi jedinicu za iteraciju. Ovaj parametar je potreban kada je parametar <strong>Definicija dimenzija</strong> podešen na <strong>Po iteraciji</strong> a parametar <strong>Dimenzija</strong> podešen na <strong>StdTime</strong>.",
	"@@Multidimensional-Filter_value_tag0@@": "Vrednost za navedenu dimenziju. Ovaj parametar je potreban kada je parametar <strong>Definicija dimenije</strong> podešen na <strong>Po vrednosti</strong>.",
	"@@Multidimensional-Filter_variables_tag0@@": "Promenljive koje će biti uključene u sloju odlaznog višedimenzionalnog rastera. Ako promenljiva nije navedena, upotrebiće se prva promenljiva.",
	"@@Multidimensional-Filter_dimensionless_tag0@@": "Određuje da li sloj treba da ima vrednosti dimenzija. Ova je opcija dostupna samo ako je za kreiranje sloja odabran samo jedan isečak.",
	"@@Multidimensional-Filter_dimensionless_tag1@@": "Označeno--Sloj neće imati vrednosti dimenzija.",
	"@@Multidimensional-Filter_dimensionless_tag2@@": "Neoznačeno--Sloj će imati vrednost dimenzije. Ovo je podrazumevano.",
	"@@Multidimensional-Raster_interpolationcellsize_tag0@@": "Veličina ćelija interpoliranog rastera. Podrazumevana vrednost je ${1}.",
	"@@Multidimensional-Raster_interpolationmethod_tag0@@": "Metod za ponovno semplovanje koji se koristi za interpolaciju neregularnih podataka.",
	"@@Multidimensional-Raster_interpolationmethod_tag1@@": "<strong>Najbliži sused</strong>--Izračunava vrednost odlaznog piksela korišćenjem najbližeg ulaznog piksela. Ako ne postoji izvorni piksel, u izlazu se ne može kreirati novi piksel. Ovo je podrazumevano.",
	"@@Multidimensional-Raster_interpolationmethod_tag2@@": "<strong>Linearno tiniranje</strong>--Koristi triangualrnu nepravilnu mrežu od središnje tačake svakog piksela na nepravilnom rasteru za interpoliranje površine koja se zatim pretvara u uobičajeni raster.",
	"@@Multidimensional-Raster_interpolationmethod_tag3@@": "<strong>Prirodni sused</strong>--Pronalazi najbliži podskup ulaznih uzoraka na mestu upita i na njih primenjuje tegove na osnovu proporcionalnih područja kako bi se interpolirala vrednost.",
	"@@Multidimensional-Raster_interpolationmethod_tag4@@": "<strong>Ponderisana inverzna udaljenost</strong>-- Određuje vrednosti piksela koristeći linearno odmerenu kombinaciju skupa tačaka uzorka ili ćelija. Težina je funkcija obratne udaljenosti od poznatih tačaka ili piskela.",
	"@@Multidimensional-Raster_raster_tag0@@": "Ulazni višedimenzionalni raster.",
	"@@Multidimensional-Raster_variables_tag0@@": "Promenljiva ili promenljive koje će biti uključene u sloju odlaznog višedimenzionalnog rastera.",
	"@@Random_distribution_tag0@@": "Navedite nasumičnu metodu za distribuciju vrednosti za upotrebu.",
	"@@Random_distribution_tag1@@": "<strong>Ujednačeno</strong> (minimum, maksimum)--Ujednačena distribucija sa definisanim opsegom. Podrazumevane vrednosti su 0 za minimum i 1 za maksimum. Ovo je podrazumevano.",
	"@@Random_distribution_tag2@@": "<strong>Ceo broj</strong> (minimum, maksimum)--Distribucija celog broja sa definisanim opsegom. Podrazumevane vrednosti su 1 za minimum i 10 za maksimum.",
	"@@Random_distribution_tag3@@": "<strong>Normalno</strong> (srednja vrednost, standardna devijacija)--Normalna distribucija sa definisanom srednjom vrednošću i standardnom devijacijom. Podrazumevane vrednosti su 0 za srednju vrednost i 1 za standardnu devijaciju.",
	"@@Random_distribution_tag4@@": "<strong>Eskponencijalno</strong> (Srednja vrednost)--Ekspozicionalna distribucija sa definisanom srednjom vrednošću. Podrazumevana vrednost je 1.",
	"@@Random_distribution_tag5@@": "<strong>Poasonov</strong> (Srednja vrednost)--Poason distribucija sa definisanom srednjom vrednošću. Podrazumevana vrednost je 1.",
	"@@Random_distribution_tag6@@": "<strong>Gama</strong> (Alfa, Beta)--Gama distribucija sa definisanim alfa i beta. Podrazumevane vrednosti su 1 za alfa i 1 za beta.",
	"@@Random_distribution_tag7@@": "<strong>Binomni</strong> (N, verovatnoća)--Binomna distribucija sa definisanim vrednostima za N i verovatnoću. Podrazumevane vrednosti su 10 za N i 0,5 za verovatnoću.",
	"@@Random_distribution_tag8@@": "<strong>Geometrijski</strong> (N, verovatnoća)--Geometrijska distribucija sa definisanim vrednostima za N i verovatnoću. Podrazumevana vrednost je 0,5.",
	"@@Random_distribution_tag9@@": "<strong>Negativni binomni</strong> (r, verovatnoća)--Binomna distribucija sa definisanim vrednostima za r i verovatnoću. Podrazumevane vrednosti su 10,0 za r i 0,5 za verovatnoću.",
	"@@Random_randomnumbergenerator_tag0@@": "Navedite nasumični algoritam za generator koji koristi sejanje i distribuciju za kreiranje niza nasumičnih brojeva. Dostupne opcije su sledeće:",
	"@@Random_randomnumbergenerator_tag1@@": "Standardni C nasum.",
	"@@Random_randomnumbergenerator_tag2@@": "ACM prikupljeni algoritam 599",
	"@@Random_randomnumbergenerator_tag3@@": "Mersenin tvister",
	"@@Random_randomnumbergenerator_tag4@@": "Podrazumevana vrednost je Mersenne Twister.",
	"@@Random_rasterinfo_tag0@@": "Upotrebite dugme <strong>Učitaj šablon rastera</strong> da biste učitali šablon iz fascikle ili sa portala.",
	"@@Random_seed_tag0@@": "Sejanje je vrednost u obliku celog broja i koristi se za pokretanje generatora nasumičnog broja. Podrazumevana vrednost je 1.",
	"@@Shrink_numberofcells_tag0@@": "Broj ćelija za koji treba smanjiti navedene zone.",
	"@@Shrink_numberofcells_tag1@@": "Vrednost mora biti ceo broj, i može biti 1 ili veći.",
	"@@Shrink_raster_tag0@@": "Ulazni raster za koji suidentifikovane zone koje treba smanjiti.",
	"@@Shrink_raster_tag1@@": "Mora biti ceo broj.",
	"@@Shrink_zonevalues_tag0@@": "Lista zona za smanjenje.",
	"@@Shrink_zonevalues_tag1@@": "Vrednosti za zonu moraju biti ceo broj, i one mogu biti u bilo kom redosledu.",
	"@@Shrink_zonevalues_tag2@@": "Da biste naveli više zona, upotrebite razmak za odvajanje zonskih vrednosti.",
	"@@Distance-Accumulation_costraster_tag0@@": "Raster koji definiše trošak ili impedancu za pomeranje planimetrije kroz svaku ćeliju. Vrednost na lokaciji svake ćelije predstavlja rastojanje trošak-po-jedinici za pomeranje kroz ćeliju. Svaka vrednost lokacije ćelije se množi sa rezolucijom ćelije dok se takođe kompenzuje dijagonalni pokret za zadržavanje ukupnog troška prolaska kroz ćeliju.",
	"@@Distance-Accumulation_costraster_tag1@@": "Vrednosti za <strong>Raster troškova</strong> mogu da budu ceo broj ili plutajući zarez, ali ne mogu da budu negativni ili nula.",
	"@@Distance-Accumulation_distancemethod_tag0@@": "Određuje da li rastojanje treba izračunati korišćenjem planarnog (ravna zemlja) ili geodetskog (elipsoid) metoda.",
	"@@Distance-Accumulation_distancemethod_tag1@@": "Ravan - Planarna merenja koriste 2D kartezijansku matematiku za izračunavanje dužine i površine. Opcija je dostupna samo kada se meri u projektovanom koordinatnom sistemu, a 2D ravnina tog koordinatnog sistema će se koristiti kao osnova za merenja.",
	"@@Distance-Accumulation_distancemethod_tag2@@": "Geodezička - najkraća linija između dve tačke na zemljinoj površini na sferoidu (elipsoid). Stoga se, bez obzira na ulaznu ili izlaznu projekciju, rezultati ne menjaju.",
	"@@Distance-Accumulation_distancemethod_tag3@@": "<strong>Napomena:</strong> jedna upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju aviona. To je takođe poznato kao velika linija kruga ako se zasniva na sferi, a ne na elipsoidu.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag0@@": "Određuje da li se kreira samo raster za akumulaciju udaljenosti ili raster sa više opsega koji se sastoji od rastera za akumulaciju distance i kreira se raster za suprotni smer.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag1@@": "Neobeleženo--Rezultat je raster za akumulaciju udaljenosti. Ovo je rezultat jednog opsega. Ovo je podrazumevano.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag2@@": "Obeleženo--Kreira se raster sa više opsega. Prvi opseg je raster za akumulaciju udaljenosti a drugi opseg je raster suprotnog smera.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag3@@": "Raster suprotnog smera proračunava, za svaku ćeliju, smer, u stepenima, za susednu ćeliju uz najkraću putanju nazad do najbližeg izvora uz izbegavanje barijera.",
	"@@Distance-Accumulation_horizontalfactor_tag0@@": "<p>Definiše odnos između horizontalnog faktora troškova i horizontalnog relativnog ugla kretanja (HRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani grafikon vertikalnog faktora. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: HF i HRMA. HF je skraćenica za horizontalni faktor, koji definiše horizontalnu poteškoću pri prelasku iz jedne ćelije u drugu. HRMA je skraćenica za horizontalni relativni ugao kretanja, koji identifikuje ugao između horizontalnog smera od ćelije i smera kretanja.</p><p><strong>Horizonalni tipovi faktora</strong>uključuju sledeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od ugla preseka, HF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom je vrednost beskonačno.</li><li><strong>Unapred</strong>--Utvrđuje da je dozvoljeno samo kretanje unapred. HRMA mora da bude veći od ili jednak 0 i manji od 90 stepeni (0 &lt;= HRMA &lt; 90). Ako je HRMA veći od 0 i manji od 45 stepeni, HF za ćeliju je podešen na vrednost povezanu sa nultim faktorom. Ako je HRMA veći od ili jednak 45 stepeni, koristi se vrednost modifikatora bočne vrednosti. HF za bilo koju HRMA vrednost jednaku ili veću od 90 stepeni podešena je na beskonačno.</li><li><strong>Linearno</strong>--Navodi da je HF linearna funkcija HRMA.</li><li><strong>Inverzno linearno</strong>--Navodi da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Identifikuje da će se datoteka tabele koristiti za definisanje horizontalnog grafika faktora koji se koristi za određivanje HF-ova.</li></ul><p>Modifikacije za horizontalne faktore uključuje sledeće:</p><ul><li><strong>Faktor nule</strong>--Horizontalni faktor koji će se koristiti kada je HRMA nula. Ovaj faktor pozicionira y presek za bilo koje horizontalne funkcije faktora.</li><li><strong>Ugao preseka</strong>--Definiše HRMA ugao iza kog se HF postavlja na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koji se koristi uz<strong>Linearne</strong>i<strong>Inverzne linearne</strong>ključne reči za horizontalni faktor. Nagib je naveden kao razlomak podizanja tokom kretanja (na primer, 45 procenata nagib je 1/45, što predstavlja unos od 0,02222).</li><li><strong>Bočna vrednost</strong>--Uspostavlja HF kada je HRMA veće od ili jednako vrednosti 45 stepeni i manje od 90 stepeni kada je<strong>Napred</strong>ključna reč za horizontalni faktor navedena.</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koji definiše HF.</li></ul>",
	"@@Distance-Accumulation_horizontalraster_tag0@@": "Raster koji definiše vodoravni smer u svakoj ćeliji.",
	"@@Distance-Accumulation_horizontalraster_tag1@@": "Vrednosti na rasteru moraju biti celi brojevi u rasponu od 0 do 360, sa 0 stepeni prema severu ili prema vrhu ekrana i povećavati se u smeru kazaljke na satu. Ravnim površinama treba dati vrednost -1. Vrednosti na svakoj lokaciji biće u skladu sa <strong>Horizontalnim faktorom</strong> za određivanje horizontalnog troška nastalog prilikom pomeranja od ćelije do njenih suseda.",
	"@@Distance-Accumulation_initialaccumulation_tag0@@": "Početni akumulativni trošak za početak kalkulacije troškova. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih sa izvorom. Umesto da započne sa cenom 0, algoritam troškova počeće sa navedenom vrednostima.",
	"@@Distance-Accumulation_initialaccumulation_tag1@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Distance-Accumulation_initialaccumulation_tag2@@": "Vrednost mora biti nula ili veća. Podrazumevano je 0.",
	"@@Distance-Accumulation_maximumaccumulation_tag0@@": "Definiše maksimalnu akumulaciju troškova za putnika za izvor. Kalkulacije troškova nastavljaju se za svaki izvor sve dok se ne dostigne zadani kapacitet.",
	"@@Distance-Accumulation_maximumaccumulation_tag1@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Distance-Accumulation_maximumaccumulation_tag2@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag0@@": "Množilac za primenu vrednosti troškova.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag1@@": "Ovaj parametar omogućava kontrolu načina putovanja ili veličine u izvoru. Što je veći množilac, to je veći trošak za prelazak kroz svaku ćeliju.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag2@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag3@@": "Vrednosti moraju biti veće od nule. Podrazumevano je 1.",
	"@@Distance-Accumulation_rasterbarriers_tag0@@": "Raster koji definiše barijere.",
	"@@Distance-Accumulation_rasterbarriers_tag1@@": "Set podataka mora da sadrži NoData tamo gde nema prepreka. Barijere su predstavljene važećim vrednostima uključujući nulu.",
	"@@Distance-Accumulation_rasterbarriers_tag2@@": "Barijere mogu da budu definisane kao integralni ili raster sa pokretnim zarezom.",
	"@@Distance-Accumulation_sourceraster_tag0@@": "Lokacije ulaznog izvora.",
	"@@Distance-Accumulation_sourceraster_tag1@@": "Ovo je raster seta podataka koji identifikuje ćelije ili lokacije iz kojih se izračunava najmanje nakupljena udaljenost troškova za svaku lokaciju izlazne ćelije.",
	"@@Distance-Accumulation_sourceraster_tag2@@": "To može da bude ceo broj ili pokretni zarez.",
	"@@Distance-Accumulation_surfaceraster_tag0@@": "Raster koji definiše vrednosti za elevaciju u svakoj ćeliji.",
	"@@Distance-Accumulation_surfaceraster_tag1@@": "Vrednosti se koriste za izračunavanje stvarne površinske udaljenosti pređene prilikom prolaska između ćelija.",
	"@@Distance-Accumulation_traveldirection_tag0@@": "Definiše smer putnika prilikom primene vertikalnog faktora, horizontalnog faktora i stope otpora izvora.",
	"@@Distance-Accumulation_traveldirection_tag1@@": "<strong>Od izvora</strong>--Vertikalni faktor, horizontalni faktor i stopa otpora izvora biće primenjeni počevši od ulaznog izvora i prelazeći na ćelije koje nisu izvor. Ovo je podrazumevano.",
	"@@Distance-Accumulation_traveldirection_tag2@@": "<strong>Do izvora</strong>--Vertikalni faktor, horizontalni faktor i stopa otpora izvora biće primenjeni počevši od svake ćelije koja nije izvor i prebacujući se nazad ka ulaznom izvoru.",
	"@@Distance-Accumulation_traveldirection_tag3@@": "Navedite ključnu reč za <strong>Od izvora</strong> ili <strong>Do izvora</strong>, koja će biti primenjena na sve izvore, ili navedite polje u <strong>Raster izvora</strong> koje sadrži ključne reči za identifikaciju smera putovanja za svaki izvor. To polje mora da sadrži niz ${FROM_SOURCE} ili ${TO_SOURCE}.",
	"@@Distance-Accumulation_verticalfactor_tag0@@": "<p>Definiše vezu između vertikalnog faktora troškova i vertikalnog relativnog ugla pomeranja (VRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani vertikalni faktor grafika. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: VF i VRMA. VF je skraćenica za vertikalni faktor, koji definiše vertikalnu poteškoću pri prelasku iz jedne ćelije u drugu. VRMA označava vertikalni relativni ugao pomeranja, koji identifikuje ugao između FROM, ili obrade, ćelije i TO ćelije.</p><p><strong>Vertikalni faktor</strong>tipovi uključuju sledeće:</p><ul><li><strong>Binarni</strong>--Navodi da ako je VRMA veće od niskog ugla preseka i manje od visokog ugla sečenja, VF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom, to je beskonačno.</li><li><strong>Linearno</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Navodi da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, a dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Inverzno linearno</strong>--Označava da je VF inverzivna linearna funkcija VRMA.</li><li><strong>Simetrično inverzno linearno</strong>--Navodi da je VF inverzivna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, i dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Kosinus</strong>--Identifikuje VF kao funkciju zasnovanu na kosinusu za VRMA.</li><li><strong>Sekans</strong>--Identifikuje VF kao funkciju zasnovanu na sekansu za VRMA.</li><li><strong>Kosinus-sekans</strong>--Navodi da je VF funkcija zasnovana na kosinusu za VRMA kada je VRMA negativan i funkcija VRMA zasnovana na sekansu kada VRMA nije negativan.</li><li><strong>Sekans-kosinus</strong>--Navodi da je VF funkcija zasnovana na sekansu za VRMA kada je VRMA negativan i funkcija zasnovana na kosinusu za VRMA kada VRMA nije negativan.</li><li><strong>Tabela</strong>--Identifikuje da će datoteka tabele koja će se koristiti za definisanje vertikalnog faktora grafika koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori za vertikalne ključne reči uključuju sledeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalne faktore koji se koriste kada je VRMA nula. Ovaj faktor pozicionira y-presek navedene funkcije. Prema definiciji, nulti faktor nije primenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presek je definisan preko ovih funkcija.</li><li><strong>Mali ugao preseka</strong>--Definiše VRMA ugao između kog će se VF podesiti na beskonačno.</li><li><strong>Veliki ugao preseka</strong>--Definiše ugao VRMA iznad kog će se VF postaviti na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koja se koristi uz<strong>Linearne</strong>i<strong>Inverzivne linearne</strong>ključne reči za vertikalni faktor. Nagib je naveden kao odnos uspona i rastojanja (na primer, nagib od 45 procenata je 1/45, a uneta vrednost je 0,02222).</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koja definiše VF.</li></ul>",
	"@@Distance-Accumulation_verticalraster_tag0@@": "Definiše odnos između vertikalnog faktora troškova i vertikalnog relativnog ugla pomicanja (VRMA).",
	"@@Distance-Accumulation_verticalraster_tag1@@": "Vrednosti se koriste za izračunavanje nagiba koji se koristi za identifikaciju vertikalnog faktora nastalog prilikom prelaska iz jedne ćelije u drugu.",
	"@@Distance-Allocation_costraster_tag0@@": "Raster koji definiše trošak ili impedancu za pomeranje planimetrije kroz svaku ćeliju. Vrednost na lokaciji svake ćelije predstavlja rastojanje trošak-po-jedinici za pomeranje kroz ćeliju. Svaka vrednost lokacije ćelije se množi sa rezolucijom ćelije dok se takođe kompenzuje dijagonalni pokret za zadržavanje ukupnog troška prolaska kroz ćeliju.",
	"@@Distance-Allocation_costraster_tag1@@": "Vrednosti za <strong>Raster troškova</strong> mogu da budu ceo broj ili plutajući zarez, ali ne mogu da budu negativni ili nula.",
	"@@Distance-Allocation_distancemethod_tag0@@": "Određuje da li rastojanje treba izračunati korišćenjem planarnog (ravna zemlja) ili geodetskog (elipsoid) metoda.",
	"@@Distance-Allocation_distancemethod_tag1@@": "Ravan - Planarna merenja koriste 2D kartezijansku matematiku za izračunavanje dužine i površine. Opcija je dostupna samo kada se meri u projektovanom koordinatnom sistemu, a 2D ravnina tog koordinatnog sistema će se koristiti kao osnova za merenja.",
	"@@Distance-Allocation_distancemethod_tag2@@": "Geodezička - najkraća linija između dve tačke na zemljinoj površini na sferoidu (elipsoid). Stoga se, bez obzira na ulaznu ili izlaznu projekciju, rezultati ne menjaju.",
	"@@Distance-Allocation_distancemethod_tag3@@": "<strong>Napomena:</strong> jedna upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju aviona. To je takođe poznato kao velika linija kruga ako se zasniva na sferi, a ne na elipsoidu.",
	"@@Distance-Allocation_horizontalfactor_tag0@@": "<p>Definiše odnos između horizontalnog faktora troškova i horizontalnog relativnog ugla kretanja (HRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani grafikon vertikalnog faktora. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: HF i HRMA. HF je skraćenica za horizontalni faktor, koji definiše horizontalnu poteškoću pri prelasku iz jedne ćelije u drugu. HRMA je skraćenica za horizontalni relativni ugao kretanja, koji identifikuje ugao između horizontalnog smera od ćelije i smera kretanja.</p><p><strong>Horizonalni tipovi faktora</strong>uključuju sledeće:</p><ul><li><strong>Binarno</strong>--Označava da ako je HRMA manji od ugla preseka, HF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom je vrednost beskonačno.</li><li><strong>Unapred</strong>--Utvrđuje da je dozvoljeno samo kretanje unapred. HRMA mora da bude veći od ili jednak 0 i manji od 90 stepeni (0 &lt;= HRMA &lt; 90). Ako je HRMA veći od 0 i manji od 45 stepeni, HF za ćeliju je podešen na vrednost povezanu sa nultim faktorom. Ako je HRMA veći od ili jednak 45 stepeni, koristi se vrednost modifikatora bočne vrednosti. HF za bilo koju HRMA vrednost jednaku ili veću od 90 stepeni podešena je na beskonačno.</li><li><strong>Linearno</strong>--Navodi da je HF linearna funkcija HRMA.</li><li><strong>Inverzno linearno</strong>--Navodi da je HF inverzna linearna funkcija HRMA.</li><li><strong>Tabela</strong>--Identifikuje da će se datoteka tabele koristiti za definisanje horizontalnog grafika faktora koji se koristi za određivanje HF-ova.</li></ul><p>Modifikacije za horizontalne faktore uključuje sledeće:</p><ul><li><strong>Faktor nule</strong>--Horizontalni faktor koji će se koristiti kada je HRMA nula. Ovaj faktor pozicionira y presek za bilo koje horizontalne funkcije faktora.</li><li><strong>Ugao preseka</strong>--Definiše HRMA ugao iza kog se HF postavlja na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koji se koristi uz<strong>Linearne</strong>i<strong>Inverzne linearne</strong>ključne reči za horizontalni faktor. Nagib je naveden kao razlomak podizanja tokom kretanja (na primer, 45 procenata nagib je 1/45, što predstavlja unos od 0,02222).</li><li><strong>Bočna vrednost</strong>--Uspostavlja HF kada je HRMA veće od ili jednako vrednosti 45 stepeni i manje od 90 stepeni kada je<strong>Napred</strong>ključna reč za horizontalni faktor navedena.</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koji definiše HF.</li></ul>",
	"@@Distance-Allocation_horizontalraster_tag0@@": "Raster koji definiše vodoravni smer u svakoj ćeliji.",
	"@@Distance-Allocation_horizontalraster_tag1@@": "Vrednosti na rasteru moraju biti celi brojevi u rasponu od 0 do 360, sa 0 stepeni prema severu ili prema vrhu ekrana i povećavati se u smeru kazaljke na satu. Ravnim površinama treba dati vrednost -1. Vrednosti na svakoj lokaciji biće u skladu sa <strong>Horizontalnim faktorom</strong> za određivanje horizontalnog troška nastalog prilikom pomeranja od ćelije do njenih suseda.",
	"@@Distance-Allocation_initialaccumulation_tag0@@": "Početni akumulativni trošak za početak kalkulacije troškova. Ovaj parametar omogućava specifikaciju fiksnih troškova povezanih sa izvorom. Umesto da započne sa cenom 0, algoritam troškova počeće sa navedenom vrednostima.",
	"@@Distance-Allocation_initialaccumulation_tag1@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Distance-Allocation_initialaccumulation_tag2@@": "Vrednost mora biti nula ili veća. Podrazumevano je 0.",
	"@@Distance-Allocation_maximumaccumulation_tag0@@": "Definiše maksimalnu akumulaciju troškova za putnika za izvor. Kalkulacije troškova nastavljaju se za svaki izvor sve dok se ne dostigne zadani kapacitet.",
	"@@Distance-Allocation_maximumaccumulation_tag1@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Distance-Allocation_maximumaccumulation_tag2@@": "Vrednost mora da bude veća od nule. Zadani kapacitet je do ivice izlaznog rastera.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag0@@": "Množilac za primenu vrednosti troškova.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag1@@": "Ovaj parametar omogućava kontrolu načina putovanja ili veličine u izvoru. Što je veći množilac, to je veći trošak za prelazak kroz svaku ćeliju.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag2@@": "Vrednosti moraju biti veće od nule. Podrazumevano je 1.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag3@@": "Numerička (dupla) vrednost ili polje iz <strong>Izvornog rastera</strong> može se upotrebiti za ovaj parametar.",
	"@@Distance-Allocation_rasterbarriers_tag0@@": "Raster koji definiše barijere.",
	"@@Distance-Allocation_rasterbarriers_tag1@@": "Set podataka mora da sadrži NoData tamo gde nema prepreka. Barijere su predstavljene važećim vrednostima uključujući nulu.",
	"@@Distance-Allocation_rasterbarriers_tag2@@": "Barijere mogu da budu definisane kao integralni ili raster sa pokretnim zarezom.",
	"@@Distance-Allocation_sourcefield_tag0@@": "Polje koje se koristi za dodelu vrednosti na izvorne lokacije. Mora da bude integralnog tipa.",
	"@@Distance-Allocation_sourceraster_tag0@@": "Lokacije ulaznog izvora.",
	"@@Distance-Allocation_sourceraster_tag1@@": "Ovo je raster seta podataka koji identifikuje ćelije ili lokacije iz kojih se izračunava najmanje nakupljena udaljenost troškova za svaku lokaciju izlazne ćelije.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag0@@": "Određuje da li se kreira samo raster za alokaciju ili se kreiraju rezultati sa više opsega.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag1@@": "Neobeleženo--Rezultat je raster za alokaciju udaljenosti. Ovo je rezultat jednog opsega. Ovo je podrazumevano.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag2@@": "Obeleženo--Kreira se raster sa više opsega. Prvi opseg je raster za alokaciju udaljenosti, drugi opseg sadrži ideks reda a treći opseg sadrži indeks kolone. Ova indeksiranja identifikuju lokaciju izvorne ćelije koja je najmanje akumulirani trošak za odlaznu udaljenost.",
	"@@Distance-Allocation_surfaceraster_tag0@@": "Raster koji definiše vrednosti za elevaciju u svakoj ćeliji.",
	"@@Distance-Allocation_surfaceraster_tag1@@": "Vrednosti se koriste za izračunavanje stvarne površinske udaljenosti pređene prilikom prolaska između ćelija.",
	"@@Distance-Allocation_traveldirection_tag0@@": "Definiše smer putnika prilikom primene vertikalnog faktora, horizontalnog faktora i stope otpora izvora.",
	"@@Distance-Allocation_traveldirection_tag1@@": "<strong>Od izvora</strong>--Vertikalni faktor, horizontalni faktor i stopa otpora izvora biće primenjeni počevši od ulaznog izvora i prelazeći na ćelije koje nisu izvor. Ovo je podrazumevano.",
	"@@Distance-Allocation_traveldirection_tag2@@": "<strong>Do izvora</strong>--Vertikalni faktor, horizontalni faktor i stopa otpora izvora biće primenjeni počevši od svake ćelije koja nije izvor i prebacujući se nazad ka ulaznom izvoru.",
	"@@Distance-Allocation_traveldirection_tag3@@": "Navedite ključnu reč za <strong>Od izvora</strong> ili <strong>Do izvora</strong>, koja će biti primenjena na sve izvore, ili navedite polje u <strong>Raster izvora</strong> koje sadrži ključne reči za identifikaciju smera putovanja za svaki izvor. To polje mora da sadrži niz ${FROM_SOURCE} ili ${TO_SOURCE}.",
	"@@Distance-Allocation_verticalfactor_tag0@@": "<p>Definiše vezu između vertikalnog faktora troškova i vertikalnog relativnog ugla pomeranja (VRMA).</p><p>Postoji nekoliko faktora sa modifikatorima koji identifikuju definisani vertikalni faktor grafika. Osim toga, tabela se može koristiti za kreiranje prilagođenog grafikona. Grafikoni se koriste za utvrđivanje vertikalnog faktora koji se koristi za izračunavanje ukupnog troška za pomeranje u susednu ćeliju.</p><p>U objašnjenjima u nastavku korišćena su dva akronima: VF i VRMA. VF je skraćenica za vertikalni faktor, koji definiše vertikalnu poteškoću pri prelasku iz jedne ćelije u drugu. VRMA označava vertikalni relativni ugao pomeranja, koji identifikuje ugao između FROM, ili obrade, ćelije i TO ćelije.</p><p><strong>Vertikalni faktor</strong>tipovi uključuju sledeće:</p><ul><li><strong>Binarni</strong>--Navodi da ako je VRMA veće od niskog ugla preseka i manje od visokog ugla sečenja, VF se postavlja na vrednost povezanu sa nultim faktorom; u suprotnom, to je beskonačno.</li><li><strong>Linearno</strong>--Označava da je VF linearna funkcija VRMA.</li><li><strong>Simetrično linearno</strong>--Navodi da je VF linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, a dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Inverzno linearno</strong>--Označava da je VF inverzivna linearna funkcija VRMA.</li><li><strong>Simetrično inverzno linearno</strong>--Navodi da je VF inverzivna linearna funkcija VRMA na negativnoj ili pozitivnoj strani VRMA, u skladu sa tim, i dve linearne funkcije su simetrične u odnosu na VF (y) osu.</li><li><strong>Kosinus</strong>--Identifikuje VF kao funkciju zasnovanu na kosinusu za VRMA.</li><li><strong>Sekans</strong>--Identifikuje VF kao funkciju zasnovanu na sekansu za VRMA.</li><li><strong>Kosinus-sekans</strong>--Navodi da je VF funkcija zasnovana na kosinusu za VRMA kada je VRMA negativan i funkcija VRMA zasnovana na sekansu kada VRMA nije negativan.</li><li><strong>Sekans-kosinus</strong>--Navodi da je VF funkcija zasnovana na sekansu za VRMA kada je VRMA negativan i funkcija zasnovana na kosinusu za VRMA kada VRMA nije negativan.</li><li><strong>Tabela</strong>--Identifikuje da će datoteka tabele koja će se koristiti za definisanje vertikalnog faktora grafika koji se koristi za određivanje VF-ova.</li></ul><p>Modifikatori za vertikalne ključne reči uključuju sledeće:</p><ul><li><strong>Faktor nula</strong>--Uspostavlja vertikalne faktore koji se koriste kada je VRMA nula. Ovaj faktor pozicionira y-presek navedene funkcije. Prema definiciji, nulti faktor nije primenjiv ni na jednu trigonometrijsku vertikalnu funkciju (COS, SEC, COS-SEC ili SEC-COS). Y-presek je definisan preko ovih funkcija.</li><li><strong>Mali ugao preseka</strong>--Definiše VRMA ugao između kog će se VF podesiti na beskonačno.</li><li><strong>Veliki ugao preseka</strong>--Definiše ugao VRMA iznad kog će se VF postaviti na beskonačno.</li><li><strong>Nagib</strong>--Uspostavlja nagib prave linije koja se koristi uz<strong>Linearne</strong>i<strong>Inverzivne linearne</strong>ključne reči za vertikalni faktor. Nagib je naveden kao odnos uspona i rastojanja (na primer, nagib od 45 procenata je 1/45, a uneta vrednost je 0,02222).</li><li><strong>Naziv tabele</strong>--Identifikuje naziv tabele koja definiše VF.</li></ul>",
	"@@Distance-Allocation_verticalraster_tag0@@": "Definiše odnos između vertikalnog faktora troškova i vertikalnog relativnog ugla pomicanja (VRMA).",
	"@@Distance-Allocation_verticalraster_tag1@@": "Vrednosti se koriste za izračunavanje nagiba koji se koristi za identifikaciju vertikalnog faktora nastalog prilikom prelaska iz jedne ćelije u drugu.",
	"@@Euclidean-Back-Direction_cellsize_tag0@@": "Veličina ćelije na kojoj će se stvoriti izlazni raster.",
	"@@Euclidean-Back-Direction_cellsize_tag1@@": "Ako je veličina ćelija eksplicitno postavljena u <strong>Okruženjima</strong> , to će biti podrazumevana veličina ćelije. Ako nije podešena, veličina izlazne ćelije biće ista kao <strong>Raster izvora</strong>.",
	"@@Euclidean-Back-Direction_distancemethod_tag0@@": "Određuje da li rastojanje treba izračunati korišćenjem planarnog (ravna zemlja) ili geodetskog (elipsoid) metoda.",
	"@@Euclidean-Back-Direction_distancemethod_tag1@@": "Ravan - Planarna merenja koriste 2D kartezijansku matematiku za izračunavanje dužine i površine. Opcija je dostupna samo kada se meri u projektovanom koordinatnom sistemu, a 2D ravnina tog koordinatnog sistema će se koristiti kao osnova za merenja.",
	"@@Euclidean-Back-Direction_distancemethod_tag2@@": "Geodezička - najkraća linija između dve tačke na zemljinoj površini na sferoidu (elipsoid). Stoga se, bez obzira na ulaznu ili izlaznu projekciju, rezultati ne menjaju.",
	"@@Euclidean-Back-Direction_distancemethod_tag3@@": "<strong>Napomena:</strong> jedna upotreba za geodetsku liniju je kada želite odrediti najkraću udaljenost između dva grada za putanju aviona. To je takođe poznato kao velika linija kruga ako se zasniva na sferi, a ne na elipsoidu.",
	"@@Euclidean-Back-Direction_maximumdistance_tag0@@": "Definiše prag udaljenosti unutar kojeg će se izračunati pravac do najbližeg izvora. Ako udaljenost do najbližeg izvora prelazi ovo, izlaz za tu ćeliju će biti NoData.",
	"@@Euclidean-Back-Direction_maximumdistance_tag1@@": "Zadata udaljenost je u visini izlaznog rastera.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag0@@": "Raster koji definiše barijere.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag1@@": "Set podataka mora da sadrži NoData tamo gde nema prepreka. Barijere su predstavljene važećim vrednostima uključujući nulu.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag2@@": "Barijere mogu da budu definisane kao integralni ili raster sa pokretnim zarezom.",
	"@@Euclidean-Back-Direction_sourceraster_tag0@@": "Set podataka rastera koji identifikuje ćelije ili lokacije na koje se izračunava euklidski pravac za svaku lokaciju izlazne ćelije.",
	"@@Euclidean-Back-Direction_sourceraster_tag1@@": "Ulazni tip može biti celi broj ili tip sa pokretnim zarezom.",
	"@@Cost-Path_costbacklinkraster_tag0@@": "Naziv rasterskog sloja veze povratne cene koji se koristi za određivanje puta do povratka ka izvoru putem putanje najmanje troškova.",
	"@@Cost-Path_costbacklinkraster_tag1@@": "Za svaku ćeliju u rasteru zadnje veze, vrednost identifikuje suseda koji je sledeća ćelija na putu najmanje akumulativnog troška od ćelije do jedne izvorne ćelije ili skupa izvornih ćelija.",
	"@@Cost-Path_costdistanceraster_tag0@@": "Naziv rastera za troškovnu udaljenost koji će se koristiti za određivanje puta sa najmanje troškova od odredišnih lokacija do izvora.",
	"@@Cost-Path_costdistanceraster_tag1@@": "Raster troškovne udaljenosti obično se stvara funkcijom Cost Distance, Cost Allocation ili Cost Back Link. Raserskii sloj rastojanja troška čuva, za svaku ćeliju, minimalno zbirno rastojanje troškova preko površine troškova od svake ćelije do skupa ćelija izvora.",
	"@@Cost-Path_destinationfield_tag0@@": "Polje koje se koristi za pribavljanje vrednosti za lokacije odredišta. Podaci unosa moraju sadržati najmanje jedno važeće polje.",
	"@@Cost-Path_destinationraster_tag0@@": "Set podataka za rasterski sloj koji identifikuje one ćelije iz kojih se put najmanje troškova utvrđuje do najmanje skupog izvora.",
	"@@Cost-Path_destinationraster_tag1@@": "Ulazni rasterski sloj sastoji se od ćelija koje imaju validne vrednosti (nula je validna vrednost), a ostalim ćelijama mora se dodeliti NoData.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag0@@": "Prisiljava funkciju da tretira ulazni povratni link rastera kao raster smera protoka. Rasteri smera protoka mogu da imaju vrednosti celog broja od 0-255.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag1@@": "Neobeleženo--Ako su vrednosti navedenog rastera za povratnim linkom celi brojevi u opsegu 0-8, set podataka biće tretiran kao raster pozadinskog linka za troškove. Ako su vrednosti od 0-255, ulaz će biti tretiran kao raster smera protoka. Ako su vrednosti od 0-360 i pokretni zarez, ulaz će biti tretiran kao raster povratnog smera.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag2@@": "Obeleženo--Raster dostavljen za raster pozadinskog linka biće tretiran kao raster za smer toka. Upotrebite ovu opciju ako raster za smer toka ima maksimalnu vrednost od 8 ili manju.",
	"@@Cost-Path_pathtype_tag0@@": "Ključna reč koja definiše način na koji će se vrednosti i zone na ulaznim odredišnim podacima tumačiti u proračunima putanje troškova. Opcije su sledeće:",
	"@@Cost-Path_pathtype_tag1@@": "<strong>Svaka ćelija</strong>--Za svaku ćeliju sa validnim vrednostima na podacima ulaznih odredišta, putanja najnižih troškova se određuje i čuva na izlaznom servisu geoobjekata. Uz ovu opciju, svaka ćelija podataka ulaznih odredišta se posebno tretira i putanja sa najnižim troškovima se određuje za svaku ćeliju.",
	"@@Cost-Path_pathtype_tag2@@": "<strong>Svaka zona</strong>--Za svaku zonu na podacima ulaznih odredišta, putanja najnižih troškova se određuje i čuva na izlaznom servisu geoobjekata. Uz ovu opciju, putanja sa najnižim troškovima za svaku zonu počinje u ćeliji sa rastojanjem najnižeg troška ponderisanim u zoni.",
	"@@Cost-Path_pathtype_tag3@@": "<strong>Najbolji pojedinačni</strong>--Za sve ćelije na ulaznim odredišnim podacima, put sa najmanjim troškovima izvodi se iz ćelija sa minimumom putanji najmanjeg troška do izvornih ćelija.",
	"@@Cell-Statistics_cellsizetype_tag0@@": "Izaberite koju ćeliju da koristite u izlaznom rasteru. Ako su sve ulazne ćelije iste veličine, sve opcije donosiće iste rezultate.",
	"@@Cell-Statistics_cellsizetype_tag1@@": "Prva--upotreba ćelije prve veličine za ulazne rastere.",
	"@@Cell-Statistics_cellsizetype_tag2@@": "Minimalna--upotreba najmanje veličine ćelije za sve ulazne rastere.",
	"@@Cell-Statistics_cellsizetype_tag3@@": "Maksimalna--upotreba ćelije najveće veličine za ulazne rastere. Ovo je podrazumevano.",
	"@@Cell-Statistics_cellsizetype_tag4@@": "Srednja--upotreba srednje veličine ćelija za sve ulazne rastere.",
	"@@Cell-Statistics_cellsizetype_tag5@@": "Poslednja--upotreba ćelije poslednje veličine za ulazne rastere.",
	"@@Cell-Statistics_extenttype_tag0@@": "Izaberite koji opseg treba da se koristi u izlaznom rasteru:",
	"@@Cell-Statistics_extenttype_tag1@@": "Prva--upotreba prvog ulaznog rastera za određivanje stepena obrade.",
	"@@Cell-Statistics_extenttype_tag2@@": "Preklapanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade. Ovo je podrazumevano.",
	"@@Cell-Statistics_extenttype_tag3@@": "Spajanje--upotreba dodataka preklapajućih piksela za određivanje stepena obrade.",
	"@@Cell-Statistics_extenttype_tag4@@": "Poslednja--upotreba dodataka poslednjeg ulaznog rastera za određivanje obrade dodataka.",
	"@@Cell-Statistics_processasmultiband_tag0@@": "Određuje kako se opsezi ulaznog rastera obrađuju.",
	"@@Cell-Statistics_processasmultiband_tag1@@": "Neobeleženo--Svi unosi za više opsega biće obrađeni kao jedan opseg. Ovo je podrazumevano.",
	"@@Cell-Statistics_processasmultiband_tag2@@": "Obeleženo--Svi unosi za više opsega biće obrađeni kao više opsega.",
	"@@Cell-Statistics_rasters_tag0@@": "Lista rastera za proračunavanje statistike, na osnovama piksel po piksel.",
	"@@Cell-Statistics_percentileinterpolationtype_tag0@@": "<p>Navodi metod za interpolaciju koji će se koristiti kada se navedene vrednosti procenta nalaze između dve vrednosti ulaznih ćelija.</p><ul><li><strong>Automatska detekcija</strong>--Ako su ulazni rasteri tipa celog broja piksela, koristi se metoda <strong>Najbliži</strong>. Ako je ulazni raster vrednosti tip piksela plutajućeg zareza, koristi se metoda<strong>Linearno</strong>. Ovo je podrazumevano.</li><li><strong>Najbliži</strong>--Najbliža dostupna vrednost za željeni percentil se koristi. Uovom slučaju, tip odlaznog piksela je isti kao raster ulazne vrednosti.</li><li><strong>Linearno</strong>--Izmereni prosek dve okružujuće vrednosti iz željenog percentila se koristi. U ovom slučaju, tip odlaznog piksela je plutajuća tačka.</li></ul><p>Ova opcija je dostupna samo ako je parametar tipa<strong>Operacija</strong>postavljen an<strong>Srednja vrednost</strong>ili<strong>Procenat</strong>.</p>",
	"@@Cell-Statistics_percentilevalue_tag0@@": "<p>Percentil za kalkulaciju. Podrazumevano je 90, za 90-i percentil.</p><p>Vrednosti mogu da se kreću u opsegu od 0 do 100. Procenat 0 je suštinski ekvivalentan minimalnoj statistici, a procenat 100 je ekvivalent maksimumu. Vrednost od 50 doneće u suštini iste rezultate kao statistika srednje vrednosti.</p><p>Ova opcija dostupna je samo ako je parametar<strong>Operacija</strong>postavljen na<strong>Procenat</strong>.</p>",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag0@@": "Raster u zadnjem pravcu sadrži izračunate pravce u stepenima. Smer identifikuje sledeću ćeliju na optimalnoj putanji nazad do najmanje akumulativnog izvora troškova, izbegavajući barijere.",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag1@@": "Opseg vrednosti je od 0 do 360 stepeni, gde je 0 rezervisana za ćelije izvora. Granica istoka (desno) je 90, a vrednosti se povećavaju u smeru kazaljke na satu (180 je jug, 270 je zapad, a 360 sever).",
	"@@Optimal-Path-As-Raster_destinationfield_tag0@@": "Polje koje se koristi za pribavljanje vrednosti za lokacije odredišta.",
	"@@Optimal-Path-As-Raster_destinationraster_tag0@@": "Set podataka za rasterski sloj koji identifikuje one ćelije iz kojih se put optimalnih troškova utvrđuje do najmanje skupog izvora. Ovaj unos je obavezan.",
	"@@Optimal-Path-As-Raster_destinationraster_tag1@@": "Ulazni rasterski sloj sastoji se od ćelija koje imaju validne vrednosti (nula je validna vrednost), a ostalim ćelijama mora se dodeliti NoData.",
	"@@Optimal-Path-As-Raster_distanceaccumulationraster_tag0@@": "Rast akumulacije rastojanja koristi se za određivanje optimalne putanje od odredišta do izvora. Raster za akumulaciju rastojanja obično se stvara funkcijom <strong>Akumulacija udaljenosti</strong>. Svaka ćelija u rastojanju akumulacije udaljenosti predstavlja minimalni rastojanje troškova preko površine od svake ćelije do skupa izvornih ćelija.",
	"@@Optimal-Path-As-Raster_pathtype_tag0@@": "Navodi ključnu reč koja definiše način na koji će se vrednosti i zone na ulaznim odredišnim podacima tumačiti u proračunima putanje troškova.",
	"@@Optimal-Path-As-Raster_pathtype_tag1@@": "<strong>Svaka zona</strong>--Za svaku zonu na podacima ulaznih odredišta, putanja najnižih troškova se određuje i čuva na izlaznom servisu geoobjekata. Uz ovu opciju, putanja sa optimalnim troškovima za svaku zonu počinje u ćeliji sa rastojanjem najnižeg troška ponderisanim u zoni.",
	"@@Optimal-Path-As-Raster_pathtype_tag2@@": "<strong>Najbolji pojedinačni</strong>--Za sve ćelije na ulaznim odredišnim podacima, put sa optimalnim troškovima izvodi se iz ćelija sa minimumom putanji najmanjeg troška do izvornih ćelija.",
	"@@Optimal-Path-As-Raster_pathtype_tag3@@": "<strong>Svaka ćelija</strong>--Za svaku ćeliju sa validnim vrednostima na podacima ulaznih odredišta, putanja optimalnih troškova se određuje. Uz ovu opciju, svaka ćelija podataka ulaznih odredišta se posebno tretira i putanja sa optimalnim troškovima se određuje za svaku ćeliju.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag0@@": "ID opsega koji se koriste za otkrivanje promena. Ako nisu navedeni ID-ovi opsega, koristiće se svi pojasevi iz ulaznog rasterskog skupa podataka.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag1@@": "Vrednosti ID-a trebaju biti celi brojevi odvojeni razmacima.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag0@@": "ID-ovi zelenog pojasa i SVIR pojasa koji će se koristiti za maskiranje oblaka, senke oblaka i snega. Ako se ne daju ID-ovi opsega, maskiranje se neće pojaviti.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag1@@": "Vrednosti ID-a trebaju biti celi brojevi odvojeni razmacima.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag2@@": "Ovaj parametar određuje opsege koji će se koristiti za oblak, senku oblaka i maskiranje snega. Pošto se senka oblaka i sneg pojave vrlo mračno u infracrvenom opsegu kratkog talasa (SVIR), a oblaci i sneg su veoma svetli u zelenom pojasu, preporučuje se da se indeksi opsega za SVIR i zelene pojase maskiraju.",
	"@@CCDC-Analysis_chi-squaredthresholdfordetectchange_tag0@@": "Prag verovatnoće promene či-kvadrata. Ako opažanje ima izračunatu verovatnoću promene koja je iznad ovog praga, označena je kao anomalija, što je potencijalni događaj promene. Podrazumevana vrednost je 0,99.",
	"@@CCDC-Analysis_minimumconsecutiveanomalyobservations_tag0@@": "Minimalni broj uzastopnih opažanja anomalije koji se moraju dogoditi pre nekog događaja smatra se promenom. Piksel mora biti označen kao anomalija za određeni broj uzastopnih vremenskih odseka pre nego što se smatra istinskom promenom. Podrazumevano je 6.",
	"@@CCDC-Analysis_raster_tag0@@": "Ulazni višedimenzionalni rasterski sloj.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag0@@": "Učestalost kojom se ažurira model vremenske serije novim zapažanjima. Podrazumevano je da se model ažurira svake godine.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag1@@": "Ovaj parametar definiše koliko će se često vremenski niz ažurirati novim opažanjima. Ažuriranje modela često može biti računski skupo i korist može biti minimalna. Na primer, ako u višedimenzionalnom rasteru ima 365 preseka ili jasnih opažanja godišnje, a učestalost ažuriranja je za svako posmatranje, obrada će biti 365 puta veća i računski skuplja u odnosu na ažuriranje jednom godišnje, ali tačnost možda neće biti veća.",
	"@@Trend-To-RGB_modeltype_tag0@@": "Vrsta informacije o modelu za pretvaranje u RGB.",
	"@@Trend-To-RGB_modeltype_tag1@@": "Linearni--Podaci o linearnom trendu biće pretvoreni u RGB. Ovo je podrazumevano.",
	"@@Trend-To-RGB_modeltype_tag2@@": "Harmonični--Harmonične informacije o trendu biće pretvorene u RGB.",
	"@@Trend-To-RGB_raster_tag0@@": "Raster ulaznog trenda.",
	"@@LandTrendr-Analysis_bestmodelproportion_tag0@@": "<p>Najbolji model proporcije vrednosti. Tokom procesa biranja modela, alatka će izračunati p-vrednost za svaki model i odabrati model koji ima najviše temena dok održava najmanju(najznačajniju) p-vrednost na osnovu proporcionalne vrednosti. Vrednost 1 znači da model ima najmanju p-vrednost ali da možda nema visoki broj temena. Podrazumevano je 1.25.</p>",
	"@@LandTrendr-Analysis_maximumnumberofsegments_tag0@@": "<p>Maksimalni broj segmenata koji se uklapaju u vremensku seriju za svaki piksel. Podrazumevano je 5.</p>",
	"@@LandTrendr-Analysis_minimumnumberofobservations_tag0@@": "<p>Minimalni broj validnih zapažanja su potrebe za izvođenje uklapanja. Broj godina u ulaz multidimenzionalnim podacima mora biti jednaka ili veča od ove vrednosti. Podrazumevano je 6.</p>",
	"@@LandTrendr-Analysis_outputotherbands_tag0@@": "<p>Odredjuje da li ce drugi opsezi biti uključeni u rezultate.</p><ul><li>Označeno--Drugi opsezi že biti uključeni u rezultate. Informacije segmentacije i temena iz početne segmentacije opsega su navedene u<strong>Opseg za obradu</strong> parametar će takođe biti postavljen na preostale opsege na Rezultati modela će sadržati prvo segmentaciju opsega, zatim preostale opseg</li><li>Neoznačeno--Ostali opsezi neće biti uključeni. Ovo je podrazumevano.</li></ul>",
	"@@LandTrendr-Analysis_preventoneyearrecovery_tag0@@": "<p>Navodi da li će segmenti koji prikazuju jednogodipnji oporavak biti isključeni.</p><ul><li>Provereno--Segmenti koji prikazuju jednogodišnji oporavak koji će biti isključen. Ovo je podrazumevano.</li><li>Neoznačeno--Segmenti koji pokazuju jednogodišnji oporavak neće biti izostavljen.</li></ul>",
	"@@LandTrendr-Analysis_processingband_tag0@@": "<p>Opseg koji se koristi za segmentiranje putanje za vrednost piksela u vremenskom toku. Izaberite opseg koji će najbolje obuhvatiti promene koje želite da posmatrate u buduće.</p>",
	"@@LandTrendr-Analysis_p-valuethreshold_tag0@@": "<p>Prag p-vrednosti za model koji je selektovan. Nakon detekcije vertikala u početnoj fazi postavke modela, alat će se uskladiti sa svakim segmentom i proračunava p vrednost da bi se odredio značaj modela. Na sledećoj iteraciji, model će smanjiti broj segmenta za jedan i povo izraćunati p-vrednost. Ovo že se nastaviti i ako p-vrednost je manja nego navedena vrednost u ovom parametru, model će biti izabran i alatka će prestati da traži bolji model. Ako nije izabran takav model, alatka će odabrati model sa p-vrednosti manju nego<strong>najnižu p-vrednost × vrednost proporcije najboljeg modela</strong>. Podrazumevano 0.01.</p>",
	"@@LandTrendr-Analysis_raster_tag0@@": "<p>Ulazni Landsat multidimenzionalni sloj rastera</p>",
	"@@LandTrendr-Analysis_recoveryhasincreasetrend_tag0@@": "<p>Navodi da li oporavak ima rastući(pozitivan) trend.</p><ul><li>Označeno--Oporavak ima rastući trend. Ovo je podrazumevano.</li><li>Neoznačeno--Oporavak ima trend opadanja.</li></ul>",
	"@@LandTrendr-Analysis_recoverythreshold_tag0@@": "<p>Vrednost praga oporavka, u godinama. Ako segment ima stopu oporavka koja je brža od<strong>1/granične vrednosti segmenta</strong>, segment se odbacuje i nije uključen u model serije vremena. Vrednost mora da bude između 0 i 1. Podrazumevano 0.25.</p>",
	"@@LandTrendr-Analysis_snappingdate_tag0@@": "<p>Datum koji se koristio za odabir isečka za svaku godinu u ulaznom multidimenzionalnom skupu podataka. Isečak sa datumom koji je najbliži datumu prekida biće izabran. Ovaj parametar je potreban ako set ulaznih podataka sadrži dodatne pomoćne podatke.</p>",
	"@@LandTrendr-Analysis_spikethreshold_tag0@@": "<p>Granična vrednost za upotrebu amortizujućih vrhova ili anomalije u vrednosti trajektorije piksela. Vrednost mora da bude u opsegu 0 i 1, gde 1 znači da nema amortizacije. Podrazumevano 0.9.</p>",
	"@@LandTrendr-Analysis_vertexcountovershoot_tag0@@": "<p>Broj dodatnih vertikala iznad<strong>max_num_segments + 1</strong>koji može da se koristi za usklađivanje sa modelom tokom početne faze identifikovanih vertikala. Kasnije u postupku modeliranja, broj dodatnih vertikala biće smanjen na<strong>max_num_segments + 1</strong>. Podrazumevano 2.</p>",
	"@@Merge-Rasters_rasters_tag0@@": "<p>Ulazni rasterski skup podataka ili multidimenzionalni skupovi rasterskih podataka za spajanje.</p>",
	"@@Merge-Rasters_resolveoverlapmethod_tag0@@": "<p>Navodi metode za upotrebu za rešavanje preklapajućih oiksela u kombinovanim setovima podataka.</p><ul><li><strong>Prvo</strong>--Vrednost piksela u preklopljenim oblastima je vrednost iz prvog rastera na listi ulaznih rastera. Ovo je podrazumevano.</li><li><strong>Poslednji</strong>--Vrednost piksela u preklapajućim oblastima u formi vrednosti poslednjeg rastera na listi ulaznih rastera.</li><li><strong>Min.</strong>--Vrednost piksela u preklapajućim oblastima je minimalna vrednost za preklapajuće piksele.</li><li><strong>Maks.</strong>--Vrednost piksela za preklapajuće oblasti je maksimalna vrednost preklapajućih piksela.</li><li><strong>Srednje</strong>--Vrednost piksela u preklapajućim oblastima je prosečna vrednost preklapajućih piksela.</li><li><strong>Zbir</strong>--Vrednost piksela u preklapajućim oblastima je ukupan zbir preklapajućih piksela.</li></ul>",
	"@@Generate-Trend_cycleunit_tag0@@": "<p>Navodi vremensku jedinicu koja će se koristiti za dužinu harmonijskog ciklusa.</p><ul><li><strong>Dani</strong>--Jedinica za dužinu harmonskog ciklusa u danima.</li><li><strong>Godine</strong>--Jedinica za dužinu u harmonskom ciklusu u godinama. Ovo je podrazumevano.</li></ul>",
	"@@Generate-Trend_dimensionname_tag0@@": "<p>Dimenzije duž kojih će trend biti ekstraktovan za promenljivu ili promenljive izabrane u analizi.</p>",
	"@@Generate-Trend_harmonicfrequency_tag0@@": "<p>Broj frekvencije koji će se koristiti za uklapanje trenda. Ovaj parametar određuje učestalost ciklusta u godini Podrazumevana vrednost je 1, ili jedan harmonski ciklus po godini.</p><p>Ovaj parametar je samo uključen u analizi trenda za harmonsku regresiju.</p>",
	"@@Generate-Trend_ignorenodata_tag0@@": "<p>Navodi da li su NoData vrednosti ignorisane u analizi.</p><ul><li>Provereno--Analiza će uključivati sve validne piksele uz date dimenzije i ignorisanje bilo kojih NoData piksela. Ovo je podrazumevano.</li><li>Analiza će rezultirati sa NoData ako postoje bilo koje NoData vrednosti za piksele duž date dimenzije.</li></ul>",
	"@@Generate-Trend_lengthofcycle_tag0@@": "<p>Dužina periodične varijacije modela. Jedinica su dani, bez obzira na vremesku jedinicu ulaznih podataka. Na primer, zelinilo lista ima jak ciklus varijacija u jednoj godini, tako da dužina ciklusa je 365.25, čak i ako su ulazni podaci mesečnog zelenila. Podaci o temperaturi po satu ima jednu od jakih cikluka varijacija tokom jednog dana, tako da dužina ciklusa je 1.</p><p>Podrazumevana dužina je 265.25 dana za podatke koji variraju u godišnjem ciklusu.</p>",
	"@@Generate-Trend_p-valueofslopecoefficient_tag0@@": "<p>Navodi da li se proračunava statistika p-frednosti za koeficijent nagiba linije trenda.</p><ul><li>Obeleženo--P-vrednost biće proračunata i prikazana detaljno kada se funkcija završi.</li><li>Neobeleženo--P-vrednost neće biti proračunata. Ovo je podrazumevano.</li></ul>",
	"@@Generate-Trend_polynomialorder_tag0@@": "<p>Polinomski redni broj za upotrebu uklapanja trenda. Ovaj parametar određuje polinomski red. Podrazumevana vrednost je 2, ili drugi redni polinomski.</p><p>Ovaj parametar je samo uključen u analizu trenda za polinomijalnu regresiju.</p>",
	"@@Generate-Trend_r-squared_tag0@@": "<p>Navodi da li da proračunati R-koren pogodnost za prikladnu statistiku za pogodnost linije trenda.</p><ul><li>Obeleženo--R-koren biće proračunat i prikazan detaljno kada se funkcija obavi.</li><li>Neobeleženo--R-koren neće biti proračunat. Ovo je podrazumevano.</li></ul>",
	"@@Generate-Trend_raster_tag0@@": "<p>Ulazni multidimenzionalni raster.</p>",
	"@@Generate-Trend_rmse_tag0@@": "<p>Navodi da li se kreira greška srednje vrednosti kvadratnog korena (RMSE) za liniju pogodnosti trenda.</p><ul><li>Obeleženo--RMSE će se proračunati i prikazati detaljno kada se funkcija obavi. Ovo je podrazumevano.</li><li>Neobeleženo--RMSE se neće izračunavati.</li></ul>",
	"@@Generate-Trend_seasonalperiod_tag0@@": "<p>Navodi vremensku jedinicu koja će se koristiti za dužinu sezonskog perioda prilikom obavljanja Seasonal-Kendall testa.</p><ul><li>Dani--Jedinica za dužinu sezonskog perioda je u danima. Ovo je podrazumevano.</li><li>Meseci--Jedinica za dužinu za sezonski period je u mesecima.</li></ul>",
	"@@Generate-Trend_trendtype_tag0@@": "<p>Navodi tip linije koja se koristi za usklađivanje vrednosti piksela uz dimenziju.</p><ul><li><strong>Linearno</strong>--Odgovara vrednosti piksela za promenljive uz linearnu liniju trenda. Ovo je podrazumevano.</li><li><strong>Harmonski</strong>--Odgovara vrednostima piksela za promenljive uz harmonsku liniju trenda.</li><li><strong>Polinomijalni</strong>--Odgovara vrednostima piksela za promenljive uz drugu po redu polinomijalnu liniju trenda.</li><li><strong>Mann-Kendall</strong>--Promenljiva vrednost piksela biće procenjena korišćenjem Mann-Kendall testa za trend.</li><li><strong>Seasonal Kendall</strong>--Promenljiva vrednost piksela biće procenjena korišćenjem Seasonal-Kendall testa trenda.</li></ul>",
	"@@Compute-Change_cellsizetype_tag0@@": "<p>Izaberite veličinu ćelije za upotrebu sa odlaznim rasterom. Ako su sve veličine ulaznih ćelija iste, sve opcije doneće iste rezultate.</p><ul><li>Prvi od--Upotrebite veličinu prve ćelije za ulazne rastere.</li><li>Minimum od--Upotrebite najmanju veličinu ćelije za sve ulazne rastere.</li><li>Maksimum od--Upotrebite najveću veličinu ćelija za sve ulazne rastere. Ovo je podrazumevano.</li><li>Srednje od--Upotreba srednje vrednosti ćelije za ulazne rastere.</li><li>Poslednji od--Upotrebite poslednju veličinu ćelije za ulazne rastere.</li></ul>",
	"@@Compute-Change_computechangemethod_tag0@@": "<p>Metod koji se koristi kao proračun.</p><ul><li><strong>Razlika</strong>--Matematička razlika, ili sabiranje, između vrednosti piksela za ulazni raster biće proračunat. Ovo je podrazumevano.</li><li><strong>Relativna razlika</strong>--Razlika u vrednostima piksela, uzimajući u obzir magnitude vrednosti koje se porede, biće izračunata.</li><li><strong>Kategorijska razlika</strong>--Razlika između dva kategorijska ili tematska rastera biće izračunata, kada izlaz sadrži tranzicije klase do kojih je došlo između dva rastera.</li><li><strong>Spektralno euklidsko rastojanje</strong>--Euklidsko rastojanje između vrednosti piksela dva rastera sa vise opsega, biće izračunato.</li><li><strong>Spektralna razlika ugla</strong>--Spektralni ugao između vrednosti piksela dva rastera sa više opsega, biće izračunato. Izlaz je u radijanima.</li><li><strong>Opseg sa najviše promena</strong>--Opseg koji predstavlja najveću promenu u svakom pikselu između dva rastera sa više opsega, biće izračunat.</li></ul><p>Ako je<strong>Metod promene proračuna</strong>podešen na<strong>Kategorijsku razliku</strong>i jedan od ulaza nije kategoričan, izračunaće se jednostavna razlika.</p>",
	"@@Compute-Change_definetransitioncolors_tag0@@": "<p>Navedite metod za upotrebu za simbolizaciju piksela koji su promenili klase.</p><ul><li><strong>Prosečno za dolazne i odlazne boje</strong>--Boja piksela biće prosek boje svoje klase porekla i boje svoje finalne klase.</li><li><strong>Upotreba dolazne boje</strong>--Boja piksela biće boja svoje originalne klase.</li><li><strong>Upotreba dolaznih boja</strong>--Boja piksela biće boja njegove finalne klase.</li></ul>",
	"@@Compute-Change_extenttype_tag0@@": "<p>Izaberite koji opseg treba da se koristi u odlaznom rasteru:</p><ul><li>Prvi od--Upotreba opsega prvog ulaznog rastera za određivanje progresivnog opsega.</li><li>Ukrštanje--Upotrebite opseg preklapajućih piksela da biste odredili opseg obrade. Ovo je podrazumevano.</li><li>Unija za--Upotreba opsega za sve rastere da bi se odredio opseg obrade.</li><li>Poslednji od--Upotreba opsega poslednjeg unosa rastera da bi se odredio opseg obrade.</li></ul>",
	"@@Compute-Change_filtermethod_tag0@@": "<p>Izaberite metod filtriranja za proračun kategorijske promene.</p><ul><li><strong>Zadrži sve</strong>--Sve klase su uključene u izlazu, i neće doći do filtriranja. Izaberite opciju da biste videli promenu i doslednost u jednom setu podataka.</li><li><strong>Zadrži samo izmenjene piksele</strong>--Samo klase koje su promenjene iz jednog tipa klase u drugi tip klase su uključene u izlaz. Izaberite ovu opciju samo ako ste zainteresovani za promenu.</li><li><strong>Zadržisamo nepromenjene piksele</strong>--Samo klase koje nisu promenjene su uključene u izlaz. Izaberite ovu opciju ako ste samo zainteresovani u doslednost.</li></ul>",
	"@@Compute-Change_fromclassvalues_tag0@@": "<p>Vrednosti klase od<strong>Odlaznog rastera</strong>koje će biti uključene u proračun, ako upoređujete dva kategorijska rastera. Ovo je lista odvojena prostorima za integralne vrednosti koje odgovaraju polju<strong>Vrednosti kla</strong>seu vašem dolaznom rasteru seta podataka.</p>",
	"@@Compute-Change_fromraster_tag0@@": "<p>Prvi raster koji će se koristiti u proračunu. Za procenu promene od vremena 1 (ranije) do vremena 2 (kasnije), ovde unesite raster za vreme 1.</p>",
	"@@Compute-Change_toclassvalues_tag0@@": "<p>Vrednosti klase od<strong>Dolaznog rastera</strong>koje će biti uključene u proračun, ako se upoređuju dva kategorijska rastera. Ovo je lista odvojena prostorima za integralne vrednosti koje odgovaraju polju<strong>Vrednosti klase</strong>u vašem dolaznom rasteru seta podataka.</p>",
	"@@Compute-Change_toraster_tag0@@": "<p>Drugi raster koji će se koristiti za izračunavanje. Za procenu promene od vremena 1 (ranije) do vremena 2 (kasnije), ovde unesite raster za vreme 2.</p>",
	"@@Compute-Change_usecolormethod_tag0@@": "<p>Navedite metod za upotrebu za simbolizaciju piksela koji su promenili klase.</p><ul><li><strong>Prosečno za dolazne i odlazne boje</strong>--Boja piksela biće prosek boje svoje klase porekla i boje svoje finalne klase.</li><li><strong>Upotreba dolazne boje</strong>--Boja piksela biće boja svoje originalne klase.</li><li><strong>Upotreba dolaznih boja</strong>--Boja piksela biće boja njegove finalne klase.</li></ul>",
	"@@Compute-Change_fieldnameforclassnamesinfromraster_tag0@@": "<p>Polje koje čuva imena klasa u unosu<strong>Raster formulara</strong>. Alat automatski pretražuje polje<strong>Ime klase</strong>ili polje<strong>Class_Name</strong>za upotrebu.</p><p>Upotrebite ovu opciju ako unos ne sadrži ove standardne nazive polja.</p>",
	"@@Compute-Change_fieldnameforclassnamesintoraster_tag0@@": "<p>Polje koje čuva nazive klasa u unosu<strong>Do Rastera</strong>. Alat automatski pretražuje polje<strong>Ime klase</strong>ili polje<strong>Class_Name</strong>za upotrebu.</p><p>Upotrebite ovu opciju ako unos ne sadrži ove standardne nazive polja.</p>",
	"@@Statistics_numberofcolumns_tag0@@": "<p>Broj kolona piksela koji će se koriste u dimenziju žižnog susedstava. </p>",
	"@@Statistics_numberofrows_tag0@@": "<p>Broj redova piksela koji će se koriste u dimenziju žižnog susedstava.</p>",
	"@@Statistics_onlyfillnodatapixels_tag0@@": "<p>Popunjava NoData praznine u izlazu. Ovo je korisno kada vaše slike mogu da imaju padajuće linije.</p>",
	"@@Statistics_raster_tag0@@": "<p>Ulazni raster za obavljanje fokusnih statistika.</p>",
	"@@Statistics_statisticstype_tag0@@": "<p>U nastavku je sedam tipova fokusnih statističkih funkcija:</p><ul><li>Minimum--Proračunava minimalne vrednosti piksela u okviru komšiluka.</li><li>Maksimum--Proračunava maksimalnu vrednost piksela u okviru komšiluka.</li><li>Srednje--Proračunava prosečnu vrednost piksela u okviru komšiluka. Ovo je podrazumevano.</li><li>Standardna devijacija--Proračunava vrednost standardne devijacije vrednosti piksela u okviru komšiluka.</li><li>Srednje--Proračunava srednju vrednost piksela u komšiluku.</li><li>Većina--Proračunava vrednost za većinu, ili vrednost do koje dolazi najčešće, za piksele u okviru komšiluka.</li><li>Manjina--Proračunava vrednost za manjinu, ili vrednost do koje dolazi najmanje često, za piksele u okviru komšiluka.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changedirection_tag0@@": "<p>Navodi smer promene koji će biti uključen u analizu.</p><p>Ovaj parametar je dostupan samo kada ulazna promena analize rastera predstavlja izlaz iz LandTrendr alata.</p><ul><li><strong>Svismerovi</strong>--Sve promene pravaca uključene su u izlaz. Ovo je podrazumevano.</li><li><strong>Povećanje</strong>--Samo promena u pozitivnom ili povećanom smeru je uključena u izlaz.</li><li><strong>Smanjenje</strong>--Samo promena u negativnom ili opadajućem smeru uključeno je u izlaz.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changetype_tag0@@": "<p>Navodi promenu informacija za kalkulaciju.</p><ul><li><strong>Vreme poslednje promene</strong>--Svaki piksel sadrži datum najskorije promene za taj piksel u vremenskoj seriji. Ovo je podrazumevano.</li><li><strong>Vreme najranije promene</strong>--Svaki piksel sadrži datum najnovije promene za taj piksel u vremenskoj seriji.</li><li><strong>Vreme najveće promene</strong>--Svaki piksel sadrži datum najznačajnije promene za taj piksel u vremenskim serijama.</li><li><strong>Broj promena</strong>--Svaki piksel sadrži ukupan broj vremena piksela promena u vremenskim serijama.</li><li><strong>Vreme najduže promene</strong>--Svaki piksel sadrži datum promene na kraju najdužeg segmenta tranzicije u vremenskim serijama.</li><li><strong>Vreme najkraće promene</strong>--Svaki piksel sadrži na kraju najkraćeg tranzicionog segmenta u vremenskoj seriji.</li><li><strong>Vreme najbrže promene</strong>--Svaki piksel sadrži datum promene na završetku tranzicije do kog je došlo najbrže.</li><li><strong>Vreme najsporije promene</strong>--Svaki piksel sadrži datum promene na završetku tranzicije do koje je došlo najsporije.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_filterbyduration_tag0@@": "<p>Navdoi da li da filtrirate po promenjnom trajanju.</p><p></p><ul><li>Provereno--Filtriraju se rezultati prema trajanju tako da samo promene koje su trajale određeni vremenski period budu uključene u izlaz.</li><li>Neprovereno--Nema filtriranja rezultata po trajanju. Ovo je podrazumevano.</li></ul><p>Ovaj parametar je dostupan samo kada se analiza rastera ulazne promene dostavi iz LandTrendr alata.</p><p>Ako je ovaj parametar obeležen, morate da podesite<strong>Minimalno trajanje</strong>i<strong>Maksimalno trajanje</strong>parametara za filtriranje.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbymagnitude_tag0@@": "<p>Navodi da li da obavite filtriranje promenom magnitude.</p><ul><li>Obeleženo--Filtrra rezultate po magnitudi tako da samo promene date magnitude budu uključene u izlaz.</li><li>Neobeleženo--Ne filtrira rezultate po magnitudi. Ovo je podrazumevano.</li></ul><p>Ovaj parametar je dostupan samo kada se analiza rastera ulazne promene dostavi iz LandTrendr alata.</p><p>Ako se ovaj parametar obeleži, morate da podesite<strong>Minimalnu magnitudu</strong>i<strong>Maksimalnu magnitudu</strong>parametara za filtriranje.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyyear_tag0@@": "<p>Navodi da li da ograničite izlaz po opsegu godina.</p><ul><li>Obeleženo--Filtriranje rezultata tako da samo promene do kojih je došao u okviru određenog opsega godina uključene su u izlaz.</li><li>Neobeleženo--Ne filtrira rezultate po godini. Ovo je podrazumevano.</li></ul><p>Ako je ovaj parametar obeležen, morate da podesite<strong>Minimalnu vrednost</strong>i<strong>Maksimalnu vrednost</strong>parametara za filtriranje.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbystartvalue_tag0@@": "<p>Filtriranje rezultata prema početnoj vrednosti tako da samo promene date početne vrednosti budu uključene u izlaz.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyendvalue_tag0@@": "<p>Filtriranje rezultata prema krajnjoj vrednosti tako da samo promene date krajnje vrednosti budu uključene u izlaz.</p>",
	"@@Detect-Change-Using-Change-Analysis_maximumnumberofchanges_tag0@@": "<p>Maksimalni broj promena po pikselu za proračunavanje. Unešeni broj odgovara broju opsega u odlaznom rasteru. Podrazumevano je 1, što znači da se samo jedna promena datuma proračunava, i odlazni raster sadrži samo jedan opseg.</p><p>Ovaj parametar nije dostupan kada se parametar<strong>Promena tipa</strong>podesi na<strong>Broj promena</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_raster_tag0@@": "<p>Promena ulaza za analizu rastera.</p>",
	"@@Detect-Change-Using-Change-Analysis_segmentdate_tag0@@": "<p>Navodi da li da se ekstraktuje datum na početku promene segmenta, ili kraj.</p><p>Ovaj parametar je dostupan samo kada se analiza rastera ulazne promene postavlja kao izlaz iz LandTrendr alata.</p><ul><li><strong>Početak segmenta</strong>--Ekstraktujte datum na početku promene segmenta. Ovo je podrazumevano.</li><li><strong>Kraj segmenta</strong>--Ekstrakcija datuma na kraju završetka segmenta.</li></ul>",
	"@@Kernel-Density_areaunits_tag0@@": "<p>Oblast jedinica odlazne vrednosti gustine.</p><ul><li>Jedinice kvadratne mape--Za kvadrat lineranih jedinica za odlaznu spatijalnu referencu.</li><li>Kvadratne milje--Za (SAD) milje.</li><li>Kvadratni kilometri--Za kilometre.</li><li>Jutra--Za (SAD) jutra.</li><li>Hektari--Za hektare.</li><li>Kvadratni metri--Za metre.</li><li>Kvadratni jardi--Za (SAD) jarde.</li><li>Kvadratne stope--Za (SAD) stope.</li><li>Kvadratni inči--Za (SAD) inče.</li><li>Kvadratni centimetri--Za centimetre.</li><li>Kvadratni milimetri--Za milimetre.</li></ul>",
	"@@Kernel-Density_cellsize_tag0@@": "<p>Veličina piksela za set podataka odlaznog rastera. Ako vrednost<strong>Veličina ćelije</strong>bude podešena u okruženjima za geoobradu, to je podrazumevano.</p>",
	"@@Kernel-Density_inputbarriers_tag0@@": "<p>Set podataka koji definiše barijere.</p><p>Barijere mogu da budu sloj funkcije polilina ili poligonske funkcije.</p>",
	"@@Kernel-Density_inputfeatures_tag0@@": "<p>Ulazna tačka ili komponenta linije za koju se proračunava gustina.</p>",
	"@@Kernel-Density_method_tag0@@": "<p>Određuje da li da koristite najkraću putanju na sferoidnom (geodezijskom) ili ravnom (planarnom) metodu.</p><ul><li><strong>Planarno</strong>--Koristi planarne distance između komponenti. Ovo je podrazumevano.</li><li><strong>Geodezijski</strong>--Koristi geodezijske distance između komponenti. Ovaj metod uzima u obzir kurvaturu sfere i ispravno se bavi sa podacima blizu polova i međunarodnih linija datuma.</li></ul><p>Preporučujemo da koristite<strong>Geodezijski</strong>metod uz podatke sačuvane u koordinatnom sistemu koji nije odgovarajući za merenje distance i bilo koju analizu kojase širi u velikoj geografskoj oblasti. Na primer, Web Mercator ili bilo koji geografski koordinatni sistem treba da koristi<strong>Geodezijski</strong>metod.</p>",
	"@@Kernel-Density_outputcellvalues_tag0@@": "<p>Određuje koja vrednost se predstavlja u odaznom rasteru.</p><ul><li><strong>Gustine</strong>--Odlazne vrednosti predstavljaju predviđenu vrednost gustine. Ovo je podrazumevano.</li><li><strong>Očekivani brojevi</strong>--Odlazne vrednosti predstavljaju predviđeni iznos fenomena za svaki piksel. Pošto je vrednost piksela povezana sa navedenom vrednošću<strong>Veličine ćelije</strong>, dobijeni raster ne može da se ponovo uzorkuje za različitu veličinu piksela i dalje da predstavlja količinu fenomena.</li></ul>",
	"@@Kernel-Density_populationfield_tag0@@": "<p>Vrenodsti populacije za denotaciju polja za svaku komponentu. Vrednost<strong>Populaciono polje</strong>je broj ili količina koja se širi kroz pejzaž za kreiranje kontinualne površine. Vrednosti u<strong>Polju za populaciju</strong>mogu biti ceo broj ili putajuća zapeta.</p><p>Opcije i podrazumevana ponašanja za polje navedena su ispod kao redosled prioriteta.</p><ul><li>Upotrebite<strong>Nijedan</strong>ako nijedna stavka ili specijalna vrednost koji će biti korišćeni i svaka komponanta biće brojana jednom.</li><li>Upotrebite<strong>Oblik</strong>ako komponenta unosa sadrži Z.</li><li>U suprottnom, podrazumevano polje je<strong>POPULACIJA</strong>, ili bilo koji prihvatljivi derivat populacije:<ul><li><strong>POPULATIONxxxx</strong>gde<strong>xxxx</strong>može da bude bilo koji validni karakter, kao što je<strong>POPULATION6</strong>,<strong>POPULATION1974</strong>, ili<strong>POPULATIONROADTYPE</strong>.</li><li><strong>POP</strong>.</li><li><strong>POPxxxx</strong>.</li><li>Ako nijedna od gorenavedenih vrednosti ne važi, podrazumevano je<strong>Nijedan</strong>.</li></ul></li></ul>",
	"@@Kernel-Density_searchradius_tag0@@": "<p>Prečnik pretrage u okviru koga se proračunava gustina. Jedinice su zasnovane na linearnoj projekciji.</p><p>Na primer, ako su jedinice u metrima--da biste uključili sve komponente u komšiluku od jedne milje--podesite opseg pretrage koji je jednak sa 1609,344 (jer je 1 milja 1609,344 metara).</p>",
	"@@Zonal-Statistics_ignorenodataincalculations_tag0@@": "<p>Potvrđuje da li će vrednosti<strong>Nema podataka</strong>u<strong>Rasteru vrednosti</strong>uticati na rezultate zone u koje spadaju.</p><ul><li><strong>Da</strong>--U okviru bilo koje određene zone, samo pikseli koji imaju vrednost u<strong>Rasteru vrednosti</strong>biće korišćeni u određivanju izlaza za tu zonu.<strong>Nema podataka</strong>pikseli u<strong>Rasteru vrednosti</strong>biće ignorisani u statičkoj kalkulaciji. Ovo je podrazumevano.</li><li><strong>Ne</strong>--U okviru bilo koje određene zone, ako postoje<strong>NoData</strong>pikseli u<strong>Rasterskim vrednostima</strong>, smatra se da postoji nedovoljno informacija za obavljanje statističkih kalkulacija za sve piksele u toj zoni; zbog toga, cela zona će dobiti<strong>NoData</strong>vrednost za izlazni raster.</li></ul>",
	"@@Zonal-Statistics_percentileinterpolationtype_tag0@@": "<p>Određuje metod percentilne interpolacije koja će se koristiti kada broj vrednosti iz ulaznog rastera koja se proračunava bude parna.</p><ul><li><strong>Auto-detekcija</strong>--Ako je raster ulaznih vrednosti integral tipa piksela, koristi se metoda<strong>Najbliži</strong>. AKoje raster ulazne vrednosti tip piksela plutajućeg zareza, koristi se metoda<strong>Linearno</strong>. Ovo je podrazumevano.</li><li><strong>Najbliži</strong>--Najbliža dostupna vrednost za željeni percentil se koristi. Uovom slučaju, tip odlaznog piksela je isti kao raster ulazne vrednosti.</li><li><strong>Linearno</strong>--Izmereni prosek dve okružujuće vrednosti iz željenog percentila se koristi. U ovom slučaju, tip odlaznog piksela je plivajući zarez.</li></ul>",
	"@@Zonal-Statistics_percentilevalue_tag0@@": "<p>Percentil za kalkulaciju. Podrazumevano je 90, za 90-i percentil.</p><p>Vrednosti mogu da se kreću u opsegu od 0 do 100. Nulti percentilje osnovno ekvivalentan za minimalnu statistiku a stoti percentil je ekvivalent maksimumu. Vrednost od 50 doneće u osnovi isti rezultat kao statistika srednje vrednosti.</p>",
	"@@Zonal-Statistics_processasmultidimensional_tag0@@": "<p>Određuje kako se ulaz multidimenzionalne vrednosti rastera obrađuje.</p><ul><li><strong>Trenutni isečak</strong>--STatistika se proračunava od trenutnog isečka za višedimenzionalni set podataka. Ovo je podrazumevano.</li><li><strong>Svi isečci</strong>--Statistika će biti proračunata za sve dimenzije (kao što su vreme ili dubina) za višedimenzionalni set podataka.</li></ul>",
	"@@Zonal-Statistics_statisticstype_tag0@@": "<p>STatistički tip za kalkulaciju.</p><ul><li><strong>Srednje</strong>--Proračunava prosek za sve piksele u<strong>Raster vrednosti</strong>koji pripada istoj zoni kao odlazni piksel.</li><li><strong>Većina</strong>--Određuje vrednost koja se najčešće pojavljuje za sve piksele u<strong>Rasteru vrednosti</strong>koji pripadaju istoj zoni kao odlazni piksel.</li><li><strong>Maksimum</strong>--Određuje najveću vrednost za sve piksele u<strong>Rasteru vrednosti</strong>koji pripada istoj zoni kao odlazni piksel.</li><li><strong>Srednji</strong>--Određuje srednju vrednost za sve piksele u<strong>Rasteru vrednosti</strong>koje pripadaju istoj zoni kao odlazni piksel.</li><li><strong>Minimum</strong>--Određuje najmanju vrednost za sve piksele u<strong>Rasteru vrednosti</strong>koji pripadaju istoj zoni kao odlazni piksel.</li><li><strong>Manjina</strong>--Određuje vrednost koja se pojavljuje najređe za sve piksele u<strong>Rasteru vrednosti</strong>koji pripada istoj zoni kao odlazni piksel.</li><li><strong>Percentilni</strong>--Proračunava percentil za sve piksele u<strong>Rasteru vrednosti</strong>koji pripadaju istoj zoni kao odlazni piksel. Devedeseti procenat se proračunava podrazumevano. Možete da odredite koji procenat da proračunate u okviru parametra<strong>Vrednost percentila</strong>.</li><li><strong>Opseg</strong>--Proračunava razliku između najveće i najmanje vrednosti za sve piksele u<strong>Rasteru vrednosti</strong>koji pripadaju istoj zoni kao odlazni piksel.</li><li><strong>Standardna devijacija</strong>--Proračunava standardnu devijaciju za sve piksele u<strong>Raster vrednosti</strong>koji pripada istoj zoni kao odlazni piksel.</li><li><strong>Zbir</strong>--Proračunava ukupnu vrednost svih piksela u<strong>Raster vrednosti</strong>koji pripada istoj zoni kao odlazni piksel.</li><li><strong>Raznovrsnost</strong>--Proračunava broj jedinstvenih vrednosti za sve piksele u<strong>Rasteru vrednosti</strong>koji pripadaju istoj zoni kao odlazni piksel.</li></ul>",
	"@@Zonal-Statistics_valueraster_tag0@@": "<p>Raster koji sadrži vrednosti za koje se proračunava statistika.</p>",
	"@@Zonal-Statistics_zonefield_tag0@@": "<p>Polje koje sadrži vrednosti koje određuju svaku zonu. To može da bude ceo broj ili polje niza za zonu rastera.</p>",
	"@@Zonal-Statistics_zoneraster_tag0@@": "<p>Set podataka koji definiše zone. Zone mogu da se definišu kao raster celog broja.</p>",
	"@@Zonal-Statistics_calculatecircularstatistics_tag0@@": "<p>Određuje kako će se izračunati tip statistike.</p><ul><li><strong>Aritmetika</strong>--Izračunava aritmetičku statistiku. Ovo je podrazumevano.</li><li><strong>Kružno</strong>--Izračunava kružnu statistiku koja je prikladna za ciklične veličine, kao što je smer kompasa u stepenima, dan i razlomci realnih brojeva.</li></ul>",
	"@@Zonal-Statistics_circularwrapvalue_tag0@@": "<p>Najveća moguća vrednost (gornja granica) u cikličnim podacima. To je pozitivan broj, sa podrazumevanom vrednošću 360. Ova vrednost takođe predstavlja istu količinu kao najniža moguća vrednost (donja granica).</p><p>Ovaj parametar je primenljiv samo kada se izračunava kružna statistika.</p>",
	"@@Boundary-Clean-function_inputraster_tag0@@": "<p>Ulazni raster za koji će granica između zona biti ublažena.</p><p>To mora da bude tip celog broja.</p>",
	"@@Boundary-Clean-function_runexpansionandshrinkingtwice_tag0@@": "<p>Navodi broj puta za koji će se postupak ublažavanja dogoditi, dva puta ili jednom.</p><ul><li><p><strong>Obeleženo</strong>--Obavlja ekspanziju i postupak smanjivanja dva puta. Po prvi put, operacija se obavlja u skladu sa navedenim tipom sortiranja. Zatim se obavlja dodatna ekspanzija i smanjenje koja se obavlja uz obrnuti prioritet. Ovo je podrazumevano.</p></li><li><p><strong>Neobeleženo</strong>--Obavlja ekspanziju i operaciju smanjenja jednom u skladu sa tipom sortiranja.</p></li></ul>",
	"@@Boundary-Clean-function_sorttype_tag0@@": "<p>Navodi tip sortiranja za upotrebu u postupku ublažavanja. Sortiranje određuje prioritet po kome ćelije mogu da se prošire u svoje susedstvo.</p><p>Sortiranje može da se obavi po vrednosti zone ili oblasti zone.</p><ul><li><p><strong>Ne sortiraj</strong>--Zone nisu sortirane po veličini. Zone sa većim vrednostima imaju veći prioritet za širenje u zone sa manjim vrednostima u ublaženom izlazu. Ovo je podrazumevano.</p></li><li><p><strong>Opadanje</strong>--Sortira zone u opadajućem redosledu po veličini. Zone sa većim ukupnim oblastima imaju veći prioritet za širenje u zone sa manjim ukupnim oblastima. Ova opcija ima tendenciju da eliminiše ili umanji prevalentnost ćelija od manjih zona u ublaženom izlazu.</p></li><li><p><strong>Rast</strong>--Sortiranje zona u rastućem redosledu po veličini. Zone sa manjim ukupnim oblastima imaju viši prioritet za širenje u zonama sa većim ukupnim oblastima. Ova opcija ima tendenciju da očuva ili poveća prevalentnost ćelija od manjih zona u ublaženi izlaz.</p></li></ul>",
	"@@Aggregate-Multidimensional_dimension_tag0@@": "<p>Dimenzija agregacije. Ovo je dimenzija duž koje će se varijable agregirati.</p>",
	"@@Aggregate-Multidimensional_dimensiondefinition_tag0@@": "<p>Navodi metod za upotrebu filtera za unos višedimenzionalnih podataka pre obavljanja agregacije.</p><ul><li><strong>All</strong>--Kompletan opseg za svaku dienziju biće upotrebljen. Ovo je podrazumevano.</li><li><strong>Po vrednostima</strong>--Dimenzija će biti isečena korišćenjem vrednosti dimenzija ili liste vrednosti.</li><li><strong>Po opsezima</strong>--Dimenzija će biti isčena korišćenjem opsega ili liste opsega.</li><li><strong>Po iteraciji</strong>--Dimenzija će biti isečena prema navedenom intervalu veličine.</li></ul>",
	"@@Aggregate-Multidimensional_iterationdefinitionparameters_tag0@@": "<p>Parametri za iteraciju definicije dozvoljavaju vam da definišete dimenzije vrednosti da biste upotrebili za filtriranje ulaznih višedimenzionalnih podataka za analizu kada je parametar<strong>Definicija dimenzije</strong>podešen na<strong>Po iteraciji</strong>.</p><ul><li><strong>Dimenzija</strong>--Dimenzija za upotrebu za filtriranje.</li><li><strong>Početak prve iteracije</strong>--Početak prvog intervala. Ovaj interval se koristi za iteraciju kroz set podataka.</li><li><strong>Kraj prve iteracije</strong>--Kraj prvog intervala. Ovaj interval se koristi za iteraciju kroz set podataka.</li><li><strong>Korak</strong>--Učestalost uz koju će podaci biti isečeni.</li><li><strong>Jedinica</strong>--Iteraciona jedinica.</li></ul>",
	"@@Aggregate-Multidimensional_keywordinterval_tag0@@": "<p>Navodi interval ključnih reči koje će biti korišćene za agregaciju uz dimenziju.</p><p>Ovaj parametar je potreban kada je parametar<strong>Tip</strong>podešen na<strong>Interval ključne reči</strong>.</p><ul><li><strong>Satni</strong>--Vrednosti podataka se dodaju na satne vremenske korake, a rezultat uključuje svaki sat u vremenskim serijama. Ovo je podrazumevano.</li><li><strong>Dnevno</strong>--Ove vrednosti podataka se dodaju na dnevne vremenske korake, a rezultat uključuje svaki dan u vremenskoj seriji.</li><li><strong>Nedeljno</strong>--Vrednosti podataka se dodaju na nedeljne korake, a rezultat uključuje svaku nedelju u vremenskoj seriji.</li><li><strong>Dekadno</strong>--Vrednosti podataka se dodaju na 3 perioda od po 10 dana svaki. Poslednji period može da sadrži više ili manje od 10 dana. Izlaz uključuje 3 isečka za svaki mesec.</li><li><strong>Pentadno</strong>--Vrednosti podataka se dodaju u 6 perioda od po 5 dana svaki. Poslednji period može da sadrži više ili manje od 5 dana. Izlaz uključuje 6 isečaka za svaki mesec.</li><li><strong>Mesečno</strong>--Vrednosti podataka se dodaju na mesečne vremenske korake, a rezultat uključuje svaki mesec u vremenskoj seriji.</li><li><strong>Kvartalno</strong>--Vrednosti podataka se dodaju u kvartalnim vremenskim koracima, a rezultat uključuje svaki kvartal u vremenskoj seriji.</li><li><strong>Godišnje</strong>--Vrednosti podataka u godišnjim vremenskim koracima, a rezultat uključuje svaku godinu u vremenskoj seriji.</li><li><strong>Dnevno ponavljanje</strong>--Vrednosti podataka se dodaju u dnevne vremenske korake, a rezultat uključuje jednu dodatu vrednost po Julijanskom danu. Izlaz uključuje, najviše, 366 dnevnih vremenskih isečaka.</li><li><strong>Nedeljno ponavljanje</strong>--Vrednosti podataka se dodaju u nedeljne vremenske korake, a rezultat uključuje dodate vrednosti po nedelji. Izlaz uključuje, najviše, 53 nedelje za vremenske isečke.</li><li><strong>Mesečno ponavljanje</strong>--Vrednosti podataka se dodaju na mesečne vremenske korake, a rezultat uključuje jednu dodatu vrednost mesečno. Izlaz uključuje, najviše, 12 mesečnih vremenskih isečaka.</li><li><strong>Kvartalno ponavljanje</strong>--Vrednosti podataka se dodaju na kvartalne vremenske korake, a rezultat uključuje jednu agregatnu vrednost po kvartalu. Izlaz uključuje, najviše, 4 kvartalna vremenska isečka.</li></ul>",
	"@@Aggregate-Multidimensional_operation_tag0@@": "<p>Navodi matematički metod koji će se koristiti zakombinaciju dodatih isečaka u intervalu.</p><ul><li><strong>Većina</strong>--Vrednost piksela koja se najviše pojavljuje biće izračunata po svim isečcima u intervalu.</li><li><strong>Maksimum</strong>--Maksimalna vrednost za piksel biće proračunata u svim isečvcima u intervalu.</li><li><strong>Srednje</strong>--Srednja vrednost piksela biće izračunata za sve isečke u intervalu. Ovo je podrazumevano.</li><li><strong>Središnje</strong>--Središnja vrednost piksela biće izračunata za sve isečke u intervalu.</li><li><strong>Minimum</strong>--Minimalna vrednost piksela biće izračunata širom svih isečaka u intervalu.</li><li><strong>Manjina</strong>--Vrednost pikesla koja se dešava najmanje često biće izračunata širom svih isečaka u intervalu.</li><li><strong>Opseg</strong>--Opseg vrednosti za piksel biće izračunat za sve isečke u intervalu.</li><li><strong>Standardna devijacija</strong>--Standardna devijacija vrednosti piksela bićeizračunata širom svih isečaka u intervalu.</li><li><strong>Zbir</strong>--Zbir vrednosti piksela biće izračunat za sve isečke u intervalu.</li><li><strong>Raznovrsnost</strong>--Broj jedinstvenih vrednosti piksela biće izračunat za sve isečke u intervalu.</li></ul><p>Sve opcije takođe imaju ekvivalent za opciju Ignorisanje bez podataka. Ovo će obaviti matematičke operacije za sve validne piksele duž dimenzija i ignorisaće bilo koje NoData piksele.</p>",
	"@@Aggregate-Multidimensional_ranges_tag0@@": "<p>Interalni navedeni u tabeli se koriste za objedinjavanje grupa vrednosti. Minimalne i maksimalne vrednosti navode opseg koji će biti uključen.</p><p>Ovaj parametar je potreban kada je parametar<strong>Tip</strong>podešen na<strong>Opsezi intervala</strong>.</p>",
	"@@Aggregate-Multidimensional_raster_tag0@@": "<p>Ulazni multidimenzionalni raster.</p>",
	"@@Aggregate-Multidimensional_type_tag0@@": "<p>Određuje interval dimenzija za koji će se podaci agregirati.</p><ul><li><strong>Sve</strong>--Promenljivi podaci biće agregirani širom svih isečaka. Ovo je podrazumevano.</li><li><strong>Interval ključne reči</strong>--Promenljivi podaci biće agregirati korišćenjem često poznatog intervala.</li><li><strong>Vrednost intervala</strong>--Promenljivi podaci biće agregirani korišćenjem intervala navedenog od strane korisnika i jedinice.</li><li><strong>Opsezi intervala</strong>--Promenljivi podaci biće dodati između navedenih parova vrednosti ili datuma.</li></ul>",
	"@@Aggregate-Multidimensional_valueinterval_tag0@@": "<p>Veličina intervala koji se koristi za agregaciju.</p><p>Ovaj parametar je potreban kada je<strong>Tip</strong>parametra podešen na<strong>Vrednost intervala</strong>.</p>",
	"@@Aggregate-Multidimensional_values_tag0@@": "<p>Vrednosti dimenzije za upotrebu za filtriranje ulaznih višedimenzijalnih podataka za analizuS. Ovaj parametar je potreban kada je parametar<strong>Definicija dimenzije</strong>podešen na<strong>Po vrednostima</strong>.</p>",
	"@@Aggregate-Multidimensional_variables_tag0@@": "<p>Promenljiva ili promenljive biće agregirane duž date dimenzije.</p>",
	"@@Predict-Using-Regression_inputdefinitionfile_tag0@@": "<p>Ulaz Esri definicije za regresiju (<strong>.ecd</strong>) datoteke koja sadrži statistiku i informacije o specifičnom skupu podataka i izabrane atribute.</p>",
	"@@Predict-Using-Regression_rasters_tag0@@": "<p>Skup podataka rastera ili skup podataka predstavljaju promenljive za predviđanje. To može biti jednoopsežni, višeopsežni, multidimezionalni raster, mozaični skup podataka ili kolekcija rastera.</p>",
	"@@Cell-Statistics_operation_tag0@@": "<p>Tip statističkog proračuna koji želite da izvršite.</p><p>Statistike koje su na raspolaganju su<strong>većina</strong>,<strong>maksimum</strong>,<strong>prosek</strong>,<strong>medijana</strong>,<strong>minimum</strong>,<strong>manjina</strong>,<strong>percentil</strong>,<strong>opseg</strong>,<strong>standardna devijacija</strong>,<strong>zbir</strong> i<strong>raznovrsnost</strong>.</p><p>Podrazumevano je<strong>srednja vrednost</strong>.</p>",
	"@@Colormap-To-RGB_randomlyassigncolortounmappedpixels_tag0@@": "<p>Boje se nasumično dodeljuju pikselima koji nisu uključeni u mapu boja.</p><ul><li>Nije potvrđeno--Nemapiranim pikselima se ne dodeljuje boja. Ovo je podrazumevano.</li><li>Potvrđeno--Nemapiranim pikselima se dodeljuje boja.</li></ul>",
	"@@Pansharpen_sensor_tag0@@": "<p>Kada izaberete Gram-Šmitov algoritam, takođe možete da navedete senzor koji je prikupio višeopsežni rasterski ulaz. Izbor tipa senzora će postaviti odgovarajuća merenja opsega.</p>",
	"@@Dimensional-Moving-Statistics_backwardwindow_tag0@@": "<p>Vrednost koliko isečaka pre ili iznad treba da bude uključeno u definisani prozor. Vrednost mora da bude ceo broj od 1 do 100. Podrazumevana vrednost je 1.</p><p>Jedinica ovog parametra je isečak.</p>",
	"@@Dimensional-Moving-Statistics_circularwrapvalue_tag0@@": "<p>Vrednost koja će se koristiti za zaokruživanje linearne vrednosti na opseg date kružne srednje vrednosti.</p><p>Njena vrednost mora da bude pozitivna. Podrazumevana vrednost je 360 stepeni.</p>",
	"@@Dimensional-Moving-Statistics_dimension_tag0@@": "<p>Naziv dimenzije duž koje će se pomerati prozor.</p><p>Podrazumevana vrednost je prva dimenzija osim x,y koja se nalazi u ulaznom višedimenzionalnom rasteru.</p>",
	"@@Dimensional-Moving-Statistics_forwardwindow_tag0@@": "<p>Vrednost koliko isečaka posle ili ispod treba da bude uključeno u definisani prozor. Vrednost mora da bude ceo broj od 1 do 100. Podrazumevana vrednost je 1.</p><p>Jedinica ovog parametra je isečak.</p>",
	"@@Dimensional-Moving-Statistics_inputraster_tag0@@": "<p>Ulazni raster može da bude samo višedimenzionalni raster u formatu rastera oblaka (<strong>.crf</strong>datoteka).</p>",
	"@@Dimensional-Moving-Statistics_nodatahandling_tag0@@": "<p>Određuje kako će NoData vrednosti biti obrađene statističkim proračunom.</p><ul><li><strong>Podaci</strong>--NoData vrednosti u unosu vrednosti biće zanemarene u rezultatima definisanog prozora u koji spadaju. Ovo je podrazumevano.</li><li><strong>NoData</strong>--Izlazne vrednosti će biti NoData ako postoje bilo koje NoData vrednosti u ulazu u definisanom prozoru.</li><li><strong>Popuna NoData</strong>--NoData vrednosti ćelija će biti zamenjene pomoću selektovane statistike u definisanom prozoru.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentileinterpolationtype_tag0@@": "<p>Navodi metod za interpolaciju koji će se koristiti kada se navedene vrednosti percentila nalaze između dve vrednosti ćelija.</p><ul><li><strong>Automatska detekcija</strong>--Ako je ulazni raster tip celog broja piksela, koristi se metoda<strong>Najbliži</strong>. Ako je ulazni raster tip piksela sa pokretnim zarezom, koristiće se metod<strong>Linearno</strong>. Ovo je podrazumevano.</li><li><strong>Najbliži</strong>--Koristiće se najbliža dostupna vrednost za percentil. U ovom slučaju, tip izlaznog piksela biće isti kao raster ulazne vrednosti.</li><li><strong>Linearno</strong>--Koristiće se izmereni prosek dve okružujuće vrednosti iz percentila. U ovom slučaju, tip izlaznog piksela biće pokretni zarez.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentilevalue_tag0@@": "<p>Percentil koji će biti izračunat kada je<strong>Percenti</strong>selektovan kao tip statistike. Podrazumevano je 90, za 90-i percentil.</p><p>Vrednosti mogu da se kreću u opsegu od 0 do 100. Nulti percentil je suštinski ekvivalentan minimalnoj statistici, a stoti percentil je ekvivalent maksimalnoj statistici, sa izuzetkom da će rezultat biti pokretni zarez. Vrednost od 50 će dati isti rezultat kao statistika medijane.</p>",
	"@@Dimensional-Moving-Statistics_statisticstype_tag0@@": "<p>Navodi tip statistike koja će biti izračunata.</p><p></p><ul><li><strong>Srednja vrednost</strong>--Izračunaće se srednja (prosečna) vrednost ćelija u definisanom prozoru. Ovo je podrazumevano.</li><li><strong>Kružna srednja vrednost</strong>--Izračunaće se kružna srednja vrednost ćelija u definisanom prozoru. Kada je ovaj tip statistike selektovan, postaje dostupan parametar<strong>Kružna prelomna vrednost</strong>.</li><li><strong>Većina</strong>--Biće identifikovana većina (vrednost koja se najčešće javlja) ćelija u definisanom prozoru.</li><li><strong>Maksimum</strong>--Biće identifikovan maksimum (najveća vrednost) ćelija u definisanom prozoru</li><li><strong>Medijana</strong>--Biće identifikovana medijana ćelija u susedstvu.</li><li><strong>Minimum</strong>--Biće identifikovan minimum (najmanja vrednost) ćelija u susedstvu.</li><li><strong>Percentil</strong>--Biće izračunat percentil ćelija u susedstvu. Kada je selektovan ovaj tip statistike, postaju dostupni parametri<strong>Vrednost percentila</strong>i<strong>Tip procentualne interpolacije</strong>. Koristite ove nove parametre da biste odredili percentil za izračunavanje i odabrali tip interpolacije koji će se koristiti.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_dimension_tag0@@": "<p>Dimenzija koja će se koristiti za interpolaciju.</p><p>Ovaj parametar je obavezan kada je parametar<strong>Definicija dimenzije</strong>postavljen na<strong>Prema intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_dimensiondefinition_tag0@@": "<p>Određuje metod koji će se koristiti za filtriranje ulaznih višedimenzionalnih podataka pre obavljanja interpolacije.</p><ul><li><strong>Prema vrednostima</strong>--Dimenzija će biti isečena korišćenjem vrednosti dimenzije ili liste vrednosti.</li><li><strong>Prema intervalu</strong>--Dimenzija će biti isčena korišćenjem opsega ili liste opsega.</li><li><strong>Prema ciljnom rasteru</strong>--Dimenzija će biti isečena korišćenjem ciljnog višedimenzionalnog rastera.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_endofinterval_tag0@@": "<p>Kraj intervala koji se koristi za iteraciju kroz skup podataka.</p><p>Ovaj parametar je obavezan kada je parametar<strong>Definicija dimenzije</strong>postavljen na<strong>Prema intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_ignorenodata_tag0@@": "<p>Određuje da li će NoData vrednosti biti zanemarene u analizi.</p><ul><li>Nije potvrđeno--Rezultat analize biće NoData ako postoje NoData vrednosti u susednim isečcima. Ovo je podrazumevano.</li><li>Potvrđeno--Analiza će koristiti samo isečke koji imaju važeće piksele i zanemariće NoData isečke.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_interpolationmethod_tag0@@": "<p>Određuje metod koji će se koristiti za interpolaciju rastera.</p><ul><li><strong>Linearno</strong>--Izlaz će biti interpoliran linerano pomoću susednih isečaka. Ovo je podrazumevano.</li><li><strong>Najbliži sused</strong>--Izlaz će koristiti najbliži susedni isečak.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_raster_tag0@@": "<p>Ulazni multidimenzionalni raster.</p>",
	"@@Interpolate-Raster-By-Dimension_startofinterval_tag0@@": "<p>Početak intervala koji se koristi za iteraciju kroz skup podataka.</p><p>Ovaj parametar je obavezan kada je parametar<strong>Definicija dimenzije</strong>postavljen na<strong>Prema intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_step_tag0@@": "<p>Učestalost kojom će se podaci interpolirati.</p><p>Ovaj parametar je obavezan kada je parametar<strong>Definicija dimenzije</strong>postavljen na<strong>Prema intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_targetraster_tag0@@": "<p>Ciljni raster određen definicijom dimenzije.</p><p>Ovaj parametar je obavezan kada je parametar<strong>Definicija dimenzije</strong>postavljen na<strong>Prema ciljnom rasteru</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_unit_tag0@@": "<p>Jedinica intervala.</p><p>Ovaj parametar je obavezan kada je parametar<strong>Definicija dimenzije</strong>postavljen na<strong>Prema intervalu</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_values_tag0@@": "<p>Vrednosti dimenzija koje se koriste za filtriranje ulaznih višedimenzionalnih podataka za analizu.</p><p>Ovaj parametar je obavezan kada je parametar<strong>Definicija dimenzije</strong>postavljen na<strong>Prema vrednostima</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_variables_tag0@@": "<p>Promenljiva ili promenljive koje će biti interpolirane definicijom dimenzije.</p>",
	"@@Terrain-Flatten_calibrationtype_tag0@@": "<p>Određuje da li će izlaz biti zaravnjen teren uz upotrebu<strong>Sigma nule</strong>ili<strong>Gamma nule</strong>.</p><ul><li><strong>Gamma nula</strong>--Beta nula povratni signal biće normalizovan korišćenjem jedinice površine ravni koja je lokalno tangentna na DEM, opšte poznata kao lokalni upadni ugao. Ovo je podrazumevano.</li><li><strong>Sigma nula</strong>--Beta nula povratni signal biće normalizovan korišćenjem DEM za izračunavanje oblasti.</li></ul>",
	"@@Terrain-Flatten_dem_tag0@@": "<p>Unos DEM.</p><p>DEM se koristi za procenu lokalnog osvetljenja oblasti.</p>",
	"@@Terrain-Flatten_geoid_tag0@@": "<p>Navodi da li će vertikalni referentni sistem ulaznog DEM biti transformisan u elipsoidnu visinu. Većina skupova podataka elevacije se odnosi na ortometrijsku visinu nivoa mora, tako da je u ovim slučajevima potrebna korekcija da bi se pretvorila u elipsoidnu visinu.</p><ul><li>Provereno--Korekcija geoida će se izvršiti da se ortometrijska visina pretvori u elipsoidnu visinu (na osnovu geoida EGM96). Ovo je podrazumevano.</li><li>Neprovereno--Neće se vršiti korekcija geoida. Koristite ovu opciju samo ako je DEM izražen u elipsoidnoj visini.</li></ul>",
	"@@Terrain-Flatten_raster_tag0@@": "<p>Ulazni radarski podaci.</p><p>Ovaj raster se prvo mora radiometrijski kalibrisati na beta nulu.</p>",
	"@@Create-Color-Composite_blueexpression_tag0@@": "<p>Obračun je dodeljen trećem opsegu.</p><p>Naziv opsega, ID opsega ili algebarski izraz koji koristi opsege.</p><p>Podržani operatori su unarni: plus (+), minus (-), množenje (*) i deljenje (/).</p>",
	"@@Create-Color-Composite_greenexpression_tag0@@": "<p>Proračun je dodeljen drugom opsegu.</p><p>Naziv opsega, ID opsega ili algebarski izraz koji koristi opsege.</p><p>Podržani operatori su unarni: plus (+), minus (-), množenje (*) i deljenje (/).</p>",
	"@@Create-Color-Composite_inputraster_tag0@@": "<p>Ulazni rasterski podaci sa više opsega.</p>",
	"@@Create-Color-Composite_method_tag0@@": "<p>Navodi metod koji će se koristiti za izdvajanje opsega.</p><ul><li>Naziv opsega--Koristiće se naziv opsega koji predstavlja interval talasne dužine na elektromagnetnom spektru (kao što je crvena, skoro infracrvena ili termalna infracrvena) ili polarizacija (kao što su VH, VV, HH ili HV). Ovo je podrazumevano.</li><li>ID-ovi opsega--Koristiće se broj opsega (kao što je B1, B2 ili B3).</li></ul>",
	"@@Create-Color-Composite_redexpression_tag0@@": "<p>Obračun je dodeljen prvom opsegu.</p><p>Naziv opsega, ID opsega ili algebarski izraz koji koristi opsege.</p><p>Podržani operatori su unarni: plus (+), minus (-), množenje (*) i deljenje (/).</p>",
	"@@Surface-Parameters_localsurfacetype_tag0@@": "<p>Izaberite tip funkcije površine koja će biti postavljena oko ciljne ćelije.</p><ul><li>Kvadratno--Funkcija kvadratne površine biće postavljena na ćelije susedstva. Ovo je podrazumevani tip.</li><li>Bikvadratno--Bikvadratna površinska funkcija će biti ugrađena u ćelije susedstva.</li></ul>",
	"@@Surface-Parameters_neighborhooddistance_tag0@@": "<p>Izlaz će biti izračunat na ovoj udaljenosti od centra ciljne ćelije. Određuje veličinu susedstva. Podrazumevana vrednost je veličina ulazne rasterske ćelije, što rezultira susedstvom 3 sa 3.</p>",
	"@@Surface-Parameters_outputslopemeasurement_tag0@@": "<p>Merne jedinice (stepeni ili procenti) koje će se koristiti za izlazni raster nagiba. Ovaj parametar je samo aktivan kada je<strong>tip parametra</strong>is<strong>Nagib</strong>.</p><ul><li>Stepen--Inklinacija nagiba će se izračunati u stepenima. Ovo se postavlja podrazumevano.</li><li>Porast procenta--Inklinacija nagiba će se izračunati kao porast procenta, koji se takođe naziva i procentualni nagib.</li></ul>",
	"@@Surface-Parameters_parametertype_tag0@@": "<p>Određuje tip parametra izlazne površine koji će biti izračunat.</p><ul><li>Nagib--Stopa promene nadmorske visine će biti izračunata. Ovo je podrazumevano.</li><li>Aspekt--Izračunaće se smer nagiba maksimalne brzine promene za svaku ćeliju.</li><li>Srednja kriva--Izmeriće se ukupna zakrivljenost površine. Izračunava se kao prosek minimalne i maksimalne krive. Ova kriva opisuje unutrašnju konveksnost ili konkavnost površine, nezavisno od smera ili uticaja gravitacije. </li><li>Tangentna (normalna kontura) Kriva – Meri se geometrijska normalna krivina koja je normlna na liniju nagiba, tangenta na liniju konture. Ova zakrivljenost se obično primenjuje za karakterizaciju konvergencije ili divergencije toka preko površine.</li><li> Profil (normalna linija nagiba) Zakrivljenost – Meri se geometrijska normalna krivina duž linije nagiba. Ova kriva se obično primenjuje tako da karakteriše ubrzanje i usporavanje toka niz površinu.</li><li>Plan (projektovana kontura) Kriva--Biće merena kriva duž linija kontura.</li><li>Kontura geodetske torzije--Meri se brzina promene ugla nagiba duž konturnih linija.</li><li>Gausova zakrivljenost – Izmeriće se ukupna zakrivljenost površine. Izračunava se kao proizvod minimalne i maksimalne krive.</li><li>Kazoratijeva zakrivljenost – biće izmerena opšta kriva površine. Može biti nula ili bilo koji drugi pozitivan broj.</li></ul>",
	"@@Surface-Parameters_projectgeodesicazimuths_tag0@@": "<p>Određuje da li će geodetski azimuti biti projektovani da bi se ispravilo izobličenje ugla uzrokovano izlaznom prostornom referencom. Ovaj parametar je aktivan samo kada je<strong>tip parametra </strong><strong>Aspekt</strong>.</p><ul><li>Neobeleženo--Geodetski azimuti neće biti projektovani. Ovo je podrazumevano.</li><li>Obeleženo--Geodetski azimuti biće projektovani.</li></ul>",
	"@@Surface-Parameters_raster_tag0@@": "<p>Ulazni površinski raster. Može biti ceo broj ili raster sa pomičnim zarezom.</p>",
	"@@Surface-Parameters_useadaptiveneighborhood_tag0@@": "<p>Određuje da li će rastojanje susedstva varirati sa promenama pejzaža (prilagodljivo). Maksimalno rastojanje je određeno rastojanjem susedstva. Minimalna udaljenost je veličina ulazne rasterske ćelije.</p><ul><li>Neoznačeno--na svim lokacijama će se koristiti jedna (fiksna) udaljenost od susedstva. Ovo je podrazumevano.</li><li>Označeno--Na svim lokacijama će se koristiti prilagodljiva susedna udaljenost.</li></ul>",
	"@@Surface-Parameters_useequatorialaspect_tag0@@": "<p>Određuje da li će se aspekt meriti iz tačke na ekvatoru ili sa severnog pola. Ovaj parametar je aktivan samo kada je<strong>tip Parametar</strong><strong>Aspekt</strong>.</p><ul><li>Neoznačeno--aspekt će se meriti od severnog pola. Ovo je podrazumevano.</li><li>Označeno--Aspekt će se meriti od tačke na ekvatoru.</li></ul>",
	"@@Surface-Parameters_zunit_tag0@@": "<p>Linearna jedinica vertikalnih z-vrednosti.</p><p>Definisan je vertikalnim koordinatnim sistemom ako postoji. Ako vertikalni koordinatni sistem ne postoji, z-jedinicu treba definisati sa liste jedinica, kako bi se obezbedio tačan geodetski proračun.</p><ul><li>Inč--Linearna jedinica biće inč.</li><li>Stopa--Linearna jedinica biće stopa.</li><li>Jard--Linerana jedinica biće jard.</li><li>SAD milja--Linearna jedinica biće milja.</li><li>Nautička milja--Linearna jedinica biće nautička milja.</li><li>Milimetar--Linearna jedinica biće milimetar.</li><li>Centimetar--Linearna jedinica biće centimetar.</li><li>Metar--Linearna jedinica biće metar. Ovo je podrazumevano.</li><li>Kilometar--Linearna jedinica biće kilometar.</li><li>Decimetar--Linearna jedinica biće decimetar.</li></ul>",
	"@@Surface-Parameters_analysismask_tag0@@": "<p>Raster koji navodi lokacije na kojima će se izvršiti analiza.</p><p>Raster može biti celobrojni ili tipa sa pokretnim zarezom.</p><p>Sve ćelije sa važećom vrednošću, uključujući nulu, sastaviće masku. Ćelije koje su NoData na ulazu maske biće NoData na izlazu.</p>",
	"@@Geometric-Median_cellsizetype_tag0@@": "<p>Izaberite veličinu ćelije za upotrebu sa odlaznim rasterom. Ako su sve veličine ulaznih ćelija iste, sve opcije doneće iste rezultate.</p><ul><li>Prvi od--Upotrebite veličinu prve ćelije za ulazne rastere.</li><li>Minimum od--Upotrebite najmanju veličinu ćelije za sve ulazne rastere.</li><li>Maksimum od--Upotrebite najveću veličinu ćelija za sve ulazne rastere. Ovo je podrazumevano.</li><li>Srednje od--Upotreba srednje vrednosti ćelije za ulazne rastere.</li><li>Poslednji od--Upotrebite poslednju veličinu ćelije za ulazne rastere.</li></ul>",
	"@@Geometric-Median_epsilon_tag0@@": "<p>Određuje vrednost konvergencije između dve uzastopne iteracije. Kada je epsilon manji ili jednak navedenoj vrednosti, iteracija se zaustavlja i koristi se rezultat poslednje iteracije.</p>",
	"@@Geometric-Median_extenttype_tag0@@": "<p>Izaberite koji opseg treba da se koristi u odlaznom rasteru:</p><ul><li><p>Prvi od--Upotreba opsega prvog ulaznog rastera za određivanje progresivnog opsega.</p></li><li>Ukrštanje--Upotrebite opseg preklapajućih piksela da biste odredili opseg obrade. Ovo je podrazumevano.</li><li>Unija za--Upotreba opsega za sve rastere da bi se odredio opseg obrade.</li><li>Poslednji od--Upotreba opsega poslednjeg unosa rastera da bi se odredio opseg obrade.</li></ul>",
	"@@Geometric-Median_maximumnumberofiterations_tag0@@": "<p>Određuje maksimalan broj iteracija koje treba završiti. Proračun se završava kada se ova vrednost dostigne, bez obzira na<strong>Epsilon</strong>postavku.</p>",
	"@@Geometric-Median_rasters_tag0@@": "<p>Ulazni višepojasni rasteri.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster1_tag0@@": "<p>Ulazni raster koji predstavlja rastojanje akumuliranih troškova od prvog izvora.</p><p>To bi trebalo da bude akumulirani izlazni trošak udaljenosti iz funkcije<strong>Akumulacija rastojanja</strong>ili<strong>Alokacija rastojanja</strong>.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster2_tag0@@": "<p>Ulazni raster koji predstavlja rastojanje akumuliranih troškova od drugog izvora.</p><p>To bi trebalo da bude akumulirani izlazni trošak udaljenosti iz funkcije<strong>Akumulacija rastojanja</strong>ili<strong>Alokacija rastojanja</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster1_tag0@@": "<p>Raster ulaznog povratnog smera iz prvog izvora.</p><p>Ovo je rasterski skup podataka koji identifikuje pravac sledeće ćelije duž putanje sa najmanjim troškovima nazad do prvog izvora. Ovo je izlaz iz funkcije<strong>Akumulacija rastojanja</strong>ili<strong>Alokacija rastojanja</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster2_tag0@@": "<p>Raster ulaznog povratnog smera iz drugog izvora.</p><p>Ovo je rasterski skup podataka koji identifikuje pravac sledeće ćelije duž putanje sa najmanjim troškovima nazad do prvog izvora. Ovo je izlaz iz funkcije<strong>Akumulacija rastojanja</strong>ili<strong>Alokacija rastojanja</strong>.</p>",
	"@@Least-Cost-Corridor_threshold_tag0@@": "<p>Procenat ili akumulativni prag troškova koji će odrediti da li će data ćelija biti uključena u raster izlaznog koridora.</p><p>Kada je parametar<strong>Metode praga</strong>postavljen na<strong>Procenat najmanjeg troška</strong>, navedena vrednost ukazuje na procenat povećanja koji treba primeniti u odnosu na minimalnu vrednost zbirnih akumuliranih troškova rastra rastojanja. Kada je parametar<strong>Metode praga</strong>postavljen na<strong>Akumulirani trošak</strong>, vrednost ukazuje na ćelije koje imaju zbir akumulativnih troškova jednak ili ispod vrednosti koja će biti uključena u koridor.</p><p>Ovaj parametar je aktivan samo ako je parametar<strong>Metode praga</strong>postavljen na<strong>Procenat najmanjeg troška</strong>ili<strong>Akumulirani trošak</strong>.</p>",
	"@@Least-Cost-Corridor_thresholdmethod_tag0@@": "<p>Navodi kako će se definisati prag.</p><p></p><ul><li><strong>Nema praga</strong>--Neće biti primenjen nikakav prag, a rezultujući koridor će pokriti pun opseg ulaznih rastera. Ovo je podrazumevano.</li><li><strong>Procenat najmanjeg troška</strong>--Prag će biti definisan kao procenat minimalne vrednosti zbirnih akumuliranih troškova rastra rastojanja.</li><li><strong>Akumulirani trošak</strong>--Prag će biti definisan u akumulativnim jedinicama za rastojanje troškova.</li></ul>"
};
const helpTexts_sr = {
	rfxArgsHelpTexts: rfxArgsHelpTexts
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpTexts_sr);


//# sourceMappingURL=help-texts.sr-0786c170.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,