"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-b53d4d"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-detect-change-type-picker-0d78de04.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-detect-change-type-picker-0d78de04.js ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   R: () => (/* binding */ RfxCteDetectChangeTypePicker)
/* harmony export */ });
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _functions_f1f2dffd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions-f1f2dffd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/functions-f1f2dffd.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _rfx_args_helper_ab401543_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rfx-args-helper-ab401543.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-args-helper-ab401543.js");
/* harmony import */ var _layer_helper_3867eef7_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./layer-helper-3867eef7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/layer-helper-3867eef7.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sanitize-number-d84114f7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");















const HelpClickHandlerKeys = {
    changeTypeHelpClickHandler: "changeTypeHelpClickHandler"
};

const RfxCteDetectChangeTypePicker = class {
    constructor(hostRef) {
        (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.rfxArgumentChange = (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "rfxArgumentChange", 7);
        this.alteredStateEnum = [
            "0",
            "1",
            "2",
            "3" // numberOfChanges
        ];
        /**
         * Stores event handlers for help action click, stored in connected callback to avoid
         * fetching function on each render ( to avoid common bad practice )
         */
        this.helpActionClickEventHandlers = new Map();
        this.handleInputChange = (e) => {
            e.stopPropagation();
            const element = e.target;
            const value = (0,_sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_10__.p)(element.value);
            this.inputArg.value = value;
            this.value = value;
            this.rfxArgumentChange.emit({ value });
        };
        this.value = undefined;
        this.widgetArgs = undefined;
        this.store = [];
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    connectedCallback() {
        this.processWidgetArgs(this.widgetArgs);
    }
    async componentWillLoad() {
        await this.setupInitialState(this.widgetArgs);
    }
    componentDidLoad() {
        this.attachHelpClickEventHandlers();
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    /**
     * All validation logic of widgetArgs -> mainly the inputArgs and triggerAttributes
     * goes here
     */
    processWidgetArgs({ inputArgs, triggerArgs }) {
        const ChangeTypeArg = inputArgs.ChangeType;
        this.inputArg = ChangeTypeArg;
        ChangeTypeArg.input = this.hostElement;
        // Need to set values here, as it is used by getUpdatedRFTWithValues method in rfx-args-editor
        this.value = ChangeTypeArg.value;
        const rasterRfxArg = triggerArgs.Raster;
        this.rasterArg = rasterRfxArg;
        rasterRfxArg.input?.addEventListener("rfxArgumentChange", this.handleRasterChange.bind(this));
    }
    async setupInitialState({ rfxArgs, rasterFunctions, triggerArgs }) {
        this.value = this.inputArg.value;
        // Set initial store
        const widgetName = (0,_functions_f1f2dffd_js__WEBPACK_IMPORTED_MODULE_1__.e)(rfxArgs);
        const rasterFunction = rasterFunctions[widgetName];
        const rasterFunctionArguments = rasterFunction?.rasterFunctionArguments;
        const inputArgName = this.inputArg.name;
        this.value = this.inputArg.value;
        const inputArgDomain = rasterFunctionArguments?.[inputArgName]?.domain;
        if (inputArgDomain?.type === "list") {
            // const enumData = rfxUtils.coerceEnumDataForCurrentEnv(this.rfxArgs, inputArgDomain.enum, this.portalMode);
            const enumData = inputArgDomain.enum;
            this.store = (0,_rfx_args_helper_ab401543_js__WEBPACK_IMPORTED_MODULE_4__.j)(enumData);
        }
        else {
            console.error("Invalid inputArg! Check Schema");
        }
        this.store?.forEach((enumElement) => {
            enumElement.key = enumElement.key.toString();
        });
        this.initialStore = (0,_rfx_args_helper_ab401543_js__WEBPACK_IMPORTED_MODULE_4__.j)(this.store);
        if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(this.store)) {
            console.error("Domain list Enum not set! Check Schema");
        }
        const rasterRfxArg = triggerArgs.Raster;
        const rasterInput = rasterRfxArg?.input;
        const inputRasterLayer = await rasterInput?.getSelectedLayer?.();
        const isChangeAnalysisTypeCCDCBoolean = (0,_layer_helper_3867eef7_js__WEBPACK_IMPORTED_MODULE_5__.l)(inputRasterLayer);
        if (isChangeAnalysisTypeCCDCBoolean) {
            this.handleIsChangeAnalysisTypeCCDC();
        }
        else {
            this.handleIsChangeAnalysisTypeNotCCDC();
        }
        this.rfxArgumentChange.emit({ value: this.value });
    }
    attachHelpClickEventHandlers() {
        const changeTypeHelpClickHandler = this.widgetArgs.onHelpActionClick({
            heading: this.inputArg.displayName,
            referenceElement: this.widgetContainer,
            helpTextID: this.widgetArgs.helpTextIDs?.detectchange_changetype
        });
        this.helpActionClickEventHandlers.set(HelpClickHandlerKeys.changeTypeHelpClickHandler, changeTypeHelpClickHandler);
    }
    async handleRasterChange() {
        const rasterInput = this.rasterArg?.input;
        const layer = await rasterInput?.getSelectedLayer?.();
        const isChangeAnalysisTypeCCDCBoolean = (0,_layer_helper_3867eef7_js__WEBPACK_IMPORTED_MODULE_5__.l)(layer);
        if (isChangeAnalysisTypeCCDCBoolean) {
            this.handleIsChangeAnalysisTypeCCDC();
        }
        else {
            this.handleIsChangeAnalysisTypeNotCCDC();
        }
        this.rfxArgumentChange.emit({ value: this.value });
    }
    handleIsChangeAnalysisTypeCCDC() {
        this.widgetArgs.inputArgs.changeAnalysisType.value = "CCDC";
        this.applyFilterToStore(this.alteredStateEnum);
    }
    handleIsChangeAnalysisTypeNotCCDC() {
        this.widgetArgs.inputArgs.changeAnalysisType.value = "";
        this.resetStore();
    }
    applyFilterToStore(filterValue) {
        const getFilteredStore = (store, filterList) => {
            return store.filter((item) => filterList.some((listItem) => item.key === listItem));
        };
        const store = getFilteredStore(this.initialStore, filterValue);
        this.store = store;
    }
    resetStore() {
        this.store = this.initialStore;
    }
    render() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { alignment: "start", scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_2__.U.Scale, layout: "default", ref: (e) => {
                this.widgetContainer = e;
            } }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-label", { label: this.inputArg.displayName, onRfxLabelHelpActionClick: () => this.helpActionClickEventHandlers?.get(HelpClickHandlerKeys.changeTypeHelpClickHandler)() }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-dtex-common-select", { options: this.store, value: String(this.value), onRfxArgumentChange: this.handleInputChange }))));
    }
    get hostElement() { return (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.a)(this); }
};



//# sourceMappingURL=rfx-cte-detect-change-type-picker-0d78de04.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-detect-change-type-picker.entry.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-detect-change-type-picker.entry.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   rfx_cte_detect_change_type_picker: () => (/* reexport safe */ _rfx_cte_detect_change_type_picker_0d78de04_js__WEBPACK_IMPORTED_MODULE_0__.R)
/* harmony export */ });
/* harmony import */ var _rfx_cte_detect_change_type_picker_0d78de04_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rfx-cte-detect-change-type-picker-0d78de04.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-detect-change-type-picker-0d78de04.js");
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _functions_f1f2dffd_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./functions-f1f2dffd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/functions-f1f2dffd.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _resources_27c66f5c_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resources-27c66f5c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/resources-27c66f5c.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _getTag_96af029d_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_getTag-96af029d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/_getTag-96af029d.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _rfx_args_helper_ab401543_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./rfx-args-helper-ab401543.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-args-helper-ab401543.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _layer_helper_3867eef7_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./layer-helper-3867eef7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/layer-helper-3867eef7.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _common_fda1462e_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./common-fda1462e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-fda1462e.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _Uint8Array_68e1e3f9_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./_Uint8Array-68e1e3f9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/_Uint8Array-68e1e3f9.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _sanitize_number_d84114f7_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./sanitize-number-d84114f7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");




























//# sourceMappingURL=rfx-cte-detect-change-type-picker.entry.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js":
/*!************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/sanitize-number-d84114f7.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ formatNumberToLocale),
/* harmony export */   f: () => (/* binding */ formatNumber),
/* harmony export */   i: () => (/* binding */ isValidNumber),
/* harmony export */   p: () => (/* binding */ parseNumber),
/* harmony export */   s: () => (/* binding */ sanitizeNumber)
/* harmony export */ });
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");



/**
 * Indicates if a provided number value is valid.
 * An invalid value is: undefined | NaN | Infinite | -Infinite | null
 * See for more details:
 *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite
 *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN
 * @param {number | undefined | null} value value to check
 * @returns {boolean} if valid or not
 */
function isValidNumber(value) {
    return value !== undefined && value !== null && Number.isNaN(value) === false && Number.isFinite(value) === true;
}
/**
 * Returns a string representation of the provided number for use with calcite-input. It also
 * guards against invalid types following this logic:
 *   - If the value is valid (not NaN, finite), the value is returned as a string
 *   - If not and if a valid default value is provided, the default value is returned as a string
 *   - If not, an empty string is returned
 * @param value
 * @param defaultValue
 * @returns a sanitized string
 */
function sanitizeNumber(value, defaultValue) {
    let returnedValue;
    if (value !== null) {
        const testedValue = typeof value === "string" ? Number.parseFloat(value) : value;
        if (isValidNumber(testedValue))
            returnedValue = testedValue;
        else if (isValidNumber(defaultValue))
            returnedValue = defaultValue;
    }
    return returnedValue === undefined ? "" : `${returnedValue}`;
}
/**
 * Parses a value string to a number for use with calcite-input. If the string is empty, it will return undefined.
 * If the string is otherwise invalid, it will return NaN.
 * @param value calcite-input value
 * @returns {number | undefined} the parsed number
 */
function parseNumber(value) {
    if (value === "")
        return undefined;
    return Number.parseFloat(value);
}
/**
 * Formats a number to a specified number of decimal places.
 *
 * @param {number} value - The number to format.
 * @param {number} [fractionDigits=3] - The number of decimal places to include in the formatted number. Defaults to 3.
 * @returns {number|undefined} - The formatted number, or undefined if the input value is empty.
 */
function formatNumber(value, fractionDigits = 3) {
    if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__.i)(value))
        return undefined;
    return Number.parseFloat(value.toFixed(fractionDigits));
}
/**
 * Formats a number or string representing a number according to the locale, passing Intl number format options
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/ReferenceGlobal_Objects/Intl/NumberFormat/NumberFormat#options
 * @param {number | string | undefined} value to be formatted and localized
 * @param {Intl.NumberFormatOptions} formatOptions options object matching Intl.NumberFormat
 * @returns {string} localized / rounded string
 */
function formatNumberToLocale(value, formatOptions) {
    let formattedValue = "";
    if (!(0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_1__.i)(value) && !Number.isNaN(value)) {
        const localeCode = (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.g)().locale;
        formattedValue = Intl.NumberFormat(localeCode, formatOptions).format(Number(value));
    }
    return formattedValue;
}



//# sourceMappingURL=sanitize-number-d84114f7.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js":
/*!*****************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CalciteScale),
/* harmony export */   U: () => (/* binding */ UIDefaults),
/* harmony export */   a: () => (/* binding */ CalciteOverlayPositioning)
/* harmony export */ });
const UIDefaults = {
    Scale: "s",
    PopoverTimer: 60
};
const CalciteScale = {
    s: "s",
    m: "m"
};
const CalciteOverlayPositioning = {
    absolute: "absolute",
    fixed: "fixed"
};



//# sourceMappingURL=ui-utils-928a4096.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvYXJjZ2lzX2FuYWx5c2lzX25vZGVfbW9kdWxlc19hcmNnaXNfYXJjZ2lzLXJhc3Rlci1mdW5jdGlvbi1lZGl0b3JfLWI1M2Q0ZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBa0c7QUFDbkM7QUFDTjtBQUNRO0FBQ0g7QUFDYTtBQUNoQjtBQUNGO0FBQzFCO0FBQ087QUFDMkI7QUFDdEI7QUFDVjtBQUNVOztBQUUzQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVEscURBQWdCO0FBQ3hCLGlDQUFpQyxxREFBVztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGdFQUFXO0FBQ3JDO0FBQ0E7QUFDQSwwQ0FBMEMsT0FBTztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix3QkFBd0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHVDQUF1QztBQUNyRTtBQUNBO0FBQ0EsMkJBQTJCLHlEQUFlO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsK0RBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULDRCQUE0QiwrREFBUTtBQUNwQyxZQUFZLDJEQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsNERBQXdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxtQkFBbUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsNERBQXdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxtQkFBbUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxREFBQyxjQUFjLHFEQUFDLG9CQUFvQiwyQkFBMkIsb0RBQVU7QUFDekY7QUFDQSxlQUFlLEVBQUUscURBQUMsZ0JBQWdCLDhKQUE4SixHQUFHLHFEQUFDLDZCQUE2Qiw2RkFBNkY7QUFDOVQ7QUFDQSx3QkFBd0IsT0FBTyxxREFBVTtBQUN6Qzs7QUFFNkM7O0FBRTdDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ25LeUc7QUFDNUU7QUFDSTtBQUNFO0FBQ0Y7QUFDVTtBQUNSO0FBQ0o7QUFDQztBQUNPO0FBQ0w7QUFDRTtBQUNjO0FBQ1g7QUFDRDtBQUNPO0FBQ2tCO0FBQ2pDO0FBQ0c7QUFDRTtBQUN3QjtBQUNGO0FBQzFCO0FBQ087QUFDQztBQUNJO0FBQ0E7O0FBRTNDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQzVCdUU7QUFDTjs7QUFFakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyQkFBMkI7QUFDdEMsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsY0FBYztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvQkFBb0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0EsUUFBUSwyREFBZTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZCQUE2QjtBQUN4QyxXQUFXLDBCQUEwQjtBQUNyQyxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0EsU0FBUywyREFBZTtBQUN4QiwyQkFBMkIsbUVBQWE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRW1IOztBQUVuSDs7Ozs7Ozs7Ozs7Ozs7OztBQzdFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRThFOztBQUU5RSIsInNvdXJjZXMiOlsid2VicGFjazovL2V4Yi1jbGllbnQvLi9leHRlbnNpb25zL3dpZGdldHMvYXJjZ2lzL2FuYWx5c2lzL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2FyY2dpcy1yYXN0ZXItZnVuY3Rpb24tZWRpdG9yL2Rpc3QvZXNtL3JmeC1jdGUtZGV0ZWN0LWNoYW5nZS10eXBlLXBpY2tlci0wZDc4ZGUwNC5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL2FyY2dpcy9hbmFseXNpcy9ub2RlX21vZHVsZXMvQGFyY2dpcy9hcmNnaXMtcmFzdGVyLWZ1bmN0aW9uLWVkaXRvci9kaXN0L2VzbS9yZngtY3RlLWRldGVjdC1jaGFuZ2UtdHlwZS1waWNrZXIuZW50cnkuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL2V4dGVuc2lvbnMvd2lkZ2V0cy9hcmNnaXMvYW5hbHlzaXMvbm9kZV9tb2R1bGVzL0BhcmNnaXMvYXJjZ2lzLXJhc3Rlci1mdW5jdGlvbi1lZGl0b3IvZGlzdC9lc20vc2FuaXRpemUtbnVtYmVyLWQ4NDExNGY3LmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9leHRlbnNpb25zL3dpZGdldHMvYXJjZ2lzL2FuYWx5c2lzL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2FyY2dpcy1yYXN0ZXItZnVuY3Rpb24tZWRpdG9yL2Rpc3QvZXNtL3VpLXV0aWxzLTkyOGE0MDk2LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHIgYXMgcmVnaXN0ZXJJbnN0YW5jZSwgYyBhcyBjcmVhdGVFdmVudCwgaCwgYSBhcyBnZXRFbGVtZW50IH0gZnJvbSAnLi9pbmRleC1kYTFiNzEzOC5qcyc7XG5pbXBvcnQgeyBlIGFzIGdldEZ1bmN0aW9uTmFtZSB9IGZyb20gJy4vZnVuY3Rpb25zLWYxZjJkZmZkLmpzJztcbmltcG9ydCB7IFUgYXMgVUlEZWZhdWx0cyB9IGZyb20gJy4vdWktdXRpbHMtOTI4YTQwOTYuanMnO1xuaW1wb3J0IHsgaSBhcyBpc0VtcHR5RGF0YUl0ZW0gfSBmcm9tICcuL3R5cGUtZ2F1cmRzLTE4NDA3NDdmLmpzJztcbmltcG9ydCB7IGogYXMgY2xvbmVSRlQgfSBmcm9tICcuL3JmeC1hcmdzLWhlbHBlci1hYjQwMTU0My5qcyc7XG5pbXBvcnQgeyBsIGFzIGlzQ2hhbmdlQW5hbHlzaXNUeXBlQ0NEQyB9IGZyb20gJy4vbGF5ZXItaGVscGVyLTM4NjdlZWY3LmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL3Jlc3Qvc3VwcG9ydC9BbGdvcml0aG1pY0NvbG9yUmFtcC5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9yZXN0L3N1cHBvcnQvTXVsdGlwYXJ0Q29sb3JSYW1wLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL0NvbG9yLmpzJztcbmltcG9ydCAnLi9jb2xvclJhbXBVdGlscy04YmRkNDZjNS5qcyc7XG5pbXBvcnQgeyBwIGFzIHBhcnNlTnVtYmVyIH0gZnJvbSAnLi9zYW5pdGl6ZS1udW1iZXItZDg0MTE0ZjcuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvcmVzdC9nZW9wcm9jZXNzb3IuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvcmVxdWVzdC5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9wb3J0YWwvUG9ydGFsSXRlbS5qcyc7XG5cbmNvbnN0IEhlbHBDbGlja0hhbmRsZXJLZXlzID0ge1xuICAgIGNoYW5nZVR5cGVIZWxwQ2xpY2tIYW5kbGVyOiBcImNoYW5nZVR5cGVIZWxwQ2xpY2tIYW5kbGVyXCJcbn07XG5cbmNvbnN0IFJmeEN0ZURldGVjdENoYW5nZVR5cGVQaWNrZXIgPSBjbGFzcyB7XG4gICAgY29uc3RydWN0b3IoaG9zdFJlZikge1xuICAgICAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xuICAgICAgICB0aGlzLnJmeEFyZ3VtZW50Q2hhbmdlID0gY3JlYXRlRXZlbnQodGhpcywgXCJyZnhBcmd1bWVudENoYW5nZVwiLCA3KTtcbiAgICAgICAgdGhpcy5hbHRlcmVkU3RhdGVFbnVtID0gW1xuICAgICAgICAgICAgXCIwXCIsXG4gICAgICAgICAgICBcIjFcIixcbiAgICAgICAgICAgIFwiMlwiLFxuICAgICAgICAgICAgXCIzXCIgLy8gbnVtYmVyT2ZDaGFuZ2VzXG4gICAgICAgIF07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTdG9yZXMgZXZlbnQgaGFuZGxlcnMgZm9yIGhlbHAgYWN0aW9uIGNsaWNrLCBzdG9yZWQgaW4gY29ubmVjdGVkIGNhbGxiYWNrIHRvIGF2b2lkXG4gICAgICAgICAqIGZldGNoaW5nIGZ1bmN0aW9uIG9uIGVhY2ggcmVuZGVyICggdG8gYXZvaWQgY29tbW9uIGJhZCBwcmFjdGljZSApXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmhlbHBBY3Rpb25DbGlja0V2ZW50SGFuZGxlcnMgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuaGFuZGxlSW5wdXRDaGFuZ2UgPSAoZSkgPT4ge1xuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBlLnRhcmdldDtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gcGFyc2VOdW1iZXIoZWxlbWVudC52YWx1ZSk7XG4gICAgICAgICAgICB0aGlzLmlucHV0QXJnLnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLnJmeEFyZ3VtZW50Q2hhbmdlLmVtaXQoeyB2YWx1ZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy53aWRnZXRBcmdzID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnN0b3JlID0gW107XG4gICAgfVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvL1xuICAgIC8vICBMaWZlY3ljbGVcbiAgICAvL1xuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgICAgdGhpcy5wcm9jZXNzV2lkZ2V0QXJncyh0aGlzLndpZGdldEFyZ3MpO1xuICAgIH1cbiAgICBhc3luYyBjb21wb25lbnRXaWxsTG9hZCgpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5zZXR1cEluaXRpYWxTdGF0ZSh0aGlzLndpZGdldEFyZ3MpO1xuICAgIH1cbiAgICBjb21wb25lbnREaWRMb2FkKCkge1xuICAgICAgICB0aGlzLmF0dGFjaEhlbHBDbGlja0V2ZW50SGFuZGxlcnMoKTtcbiAgICB9XG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vXG4gICAgLy8gIFByaXZhdGUgTWV0aG9kc1xuICAgIC8vXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8qKlxuICAgICAqIEFsbCB2YWxpZGF0aW9uIGxvZ2ljIG9mIHdpZGdldEFyZ3MgLT4gbWFpbmx5IHRoZSBpbnB1dEFyZ3MgYW5kIHRyaWdnZXJBdHRyaWJ1dGVzXG4gICAgICogZ29lcyBoZXJlXG4gICAgICovXG4gICAgcHJvY2Vzc1dpZGdldEFyZ3MoeyBpbnB1dEFyZ3MsIHRyaWdnZXJBcmdzIH0pIHtcbiAgICAgICAgY29uc3QgQ2hhbmdlVHlwZUFyZyA9IGlucHV0QXJncy5DaGFuZ2VUeXBlO1xuICAgICAgICB0aGlzLmlucHV0QXJnID0gQ2hhbmdlVHlwZUFyZztcbiAgICAgICAgQ2hhbmdlVHlwZUFyZy5pbnB1dCA9IHRoaXMuaG9zdEVsZW1lbnQ7XG4gICAgICAgIC8vIE5lZWQgdG8gc2V0IHZhbHVlcyBoZXJlLCBhcyBpdCBpcyB1c2VkIGJ5IGdldFVwZGF0ZWRSRlRXaXRoVmFsdWVzIG1ldGhvZCBpbiByZngtYXJncy1lZGl0b3JcbiAgICAgICAgdGhpcy52YWx1ZSA9IENoYW5nZVR5cGVBcmcudmFsdWU7XG4gICAgICAgIGNvbnN0IHJhc3RlclJmeEFyZyA9IHRyaWdnZXJBcmdzLlJhc3RlcjtcbiAgICAgICAgdGhpcy5yYXN0ZXJBcmcgPSByYXN0ZXJSZnhBcmc7XG4gICAgICAgIHJhc3RlclJmeEFyZy5pbnB1dD8uYWRkRXZlbnRMaXN0ZW5lcihcInJmeEFyZ3VtZW50Q2hhbmdlXCIsIHRoaXMuaGFuZGxlUmFzdGVyQ2hhbmdlLmJpbmQodGhpcykpO1xuICAgIH1cbiAgICBhc3luYyBzZXR1cEluaXRpYWxTdGF0ZSh7IHJmeEFyZ3MsIHJhc3RlckZ1bmN0aW9ucywgdHJpZ2dlckFyZ3MgfSkge1xuICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5pbnB1dEFyZy52YWx1ZTtcbiAgICAgICAgLy8gU2V0IGluaXRpYWwgc3RvcmVcbiAgICAgICAgY29uc3Qgd2lkZ2V0TmFtZSA9IGdldEZ1bmN0aW9uTmFtZShyZnhBcmdzKTtcbiAgICAgICAgY29uc3QgcmFzdGVyRnVuY3Rpb24gPSByYXN0ZXJGdW5jdGlvbnNbd2lkZ2V0TmFtZV07XG4gICAgICAgIGNvbnN0IHJhc3RlckZ1bmN0aW9uQXJndW1lbnRzID0gcmFzdGVyRnVuY3Rpb24/LnJhc3RlckZ1bmN0aW9uQXJndW1lbnRzO1xuICAgICAgICBjb25zdCBpbnB1dEFyZ05hbWUgPSB0aGlzLmlucHV0QXJnLm5hbWU7XG4gICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLmlucHV0QXJnLnZhbHVlO1xuICAgICAgICBjb25zdCBpbnB1dEFyZ0RvbWFpbiA9IHJhc3RlckZ1bmN0aW9uQXJndW1lbnRzPy5baW5wdXRBcmdOYW1lXT8uZG9tYWluO1xuICAgICAgICBpZiAoaW5wdXRBcmdEb21haW4/LnR5cGUgPT09IFwibGlzdFwiKSB7XG4gICAgICAgICAgICAvLyBjb25zdCBlbnVtRGF0YSA9IHJmeFV0aWxzLmNvZXJjZUVudW1EYXRhRm9yQ3VycmVudEVudih0aGlzLnJmeEFyZ3MsIGlucHV0QXJnRG9tYWluLmVudW0sIHRoaXMucG9ydGFsTW9kZSk7XG4gICAgICAgICAgICBjb25zdCBlbnVtRGF0YSA9IGlucHV0QXJnRG9tYWluLmVudW07XG4gICAgICAgICAgICB0aGlzLnN0b3JlID0gY2xvbmVSRlQoZW51bURhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkludmFsaWQgaW5wdXRBcmchIENoZWNrIFNjaGVtYVwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0b3JlPy5mb3JFYWNoKChlbnVtRWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgZW51bUVsZW1lbnQua2V5ID0gZW51bUVsZW1lbnQua2V5LnRvU3RyaW5nKCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmluaXRpYWxTdG9yZSA9IGNsb25lUkZUKHRoaXMuc3RvcmUpO1xuICAgICAgICBpZiAoaXNFbXB0eURhdGFJdGVtKHRoaXMuc3RvcmUpKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRG9tYWluIGxpc3QgRW51bSBub3Qgc2V0ISBDaGVjayBTY2hlbWFcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmFzdGVyUmZ4QXJnID0gdHJpZ2dlckFyZ3MuUmFzdGVyO1xuICAgICAgICBjb25zdCByYXN0ZXJJbnB1dCA9IHJhc3RlclJmeEFyZz8uaW5wdXQ7XG4gICAgICAgIGNvbnN0IGlucHV0UmFzdGVyTGF5ZXIgPSBhd2FpdCByYXN0ZXJJbnB1dD8uZ2V0U2VsZWN0ZWRMYXllcj8uKCk7XG4gICAgICAgIGNvbnN0IGlzQ2hhbmdlQW5hbHlzaXNUeXBlQ0NEQ0Jvb2xlYW4gPSBpc0NoYW5nZUFuYWx5c2lzVHlwZUNDREMoaW5wdXRSYXN0ZXJMYXllcik7XG4gICAgICAgIGlmIChpc0NoYW5nZUFuYWx5c2lzVHlwZUNDRENCb29sZWFuKSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUlzQ2hhbmdlQW5hbHlzaXNUeXBlQ0NEQygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVJc0NoYW5nZUFuYWx5c2lzVHlwZU5vdENDREMoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJmeEFyZ3VtZW50Q2hhbmdlLmVtaXQoeyB2YWx1ZTogdGhpcy52YWx1ZSB9KTtcbiAgICB9XG4gICAgYXR0YWNoSGVscENsaWNrRXZlbnRIYW5kbGVycygpIHtcbiAgICAgICAgY29uc3QgY2hhbmdlVHlwZUhlbHBDbGlja0hhbmRsZXIgPSB0aGlzLndpZGdldEFyZ3Mub25IZWxwQWN0aW9uQ2xpY2soe1xuICAgICAgICAgICAgaGVhZGluZzogdGhpcy5pbnB1dEFyZy5kaXNwbGF5TmFtZSxcbiAgICAgICAgICAgIHJlZmVyZW5jZUVsZW1lbnQ6IHRoaXMud2lkZ2V0Q29udGFpbmVyLFxuICAgICAgICAgICAgaGVscFRleHRJRDogdGhpcy53aWRnZXRBcmdzLmhlbHBUZXh0SURzPy5kZXRlY3RjaGFuZ2VfY2hhbmdldHlwZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5oZWxwQWN0aW9uQ2xpY2tFdmVudEhhbmRsZXJzLnNldChIZWxwQ2xpY2tIYW5kbGVyS2V5cy5jaGFuZ2VUeXBlSGVscENsaWNrSGFuZGxlciwgY2hhbmdlVHlwZUhlbHBDbGlja0hhbmRsZXIpO1xuICAgIH1cbiAgICBhc3luYyBoYW5kbGVSYXN0ZXJDaGFuZ2UoKSB7XG4gICAgICAgIGNvbnN0IHJhc3RlcklucHV0ID0gdGhpcy5yYXN0ZXJBcmc/LmlucHV0O1xuICAgICAgICBjb25zdCBsYXllciA9IGF3YWl0IHJhc3RlcklucHV0Py5nZXRTZWxlY3RlZExheWVyPy4oKTtcbiAgICAgICAgY29uc3QgaXNDaGFuZ2VBbmFseXNpc1R5cGVDQ0RDQm9vbGVhbiA9IGlzQ2hhbmdlQW5hbHlzaXNUeXBlQ0NEQyhsYXllcik7XG4gICAgICAgIGlmIChpc0NoYW5nZUFuYWx5c2lzVHlwZUNDRENCb29sZWFuKSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUlzQ2hhbmdlQW5hbHlzaXNUeXBlQ0NEQygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVJc0NoYW5nZUFuYWx5c2lzVHlwZU5vdENDREMoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJmeEFyZ3VtZW50Q2hhbmdlLmVtaXQoeyB2YWx1ZTogdGhpcy52YWx1ZSB9KTtcbiAgICB9XG4gICAgaGFuZGxlSXNDaGFuZ2VBbmFseXNpc1R5cGVDQ0RDKCkge1xuICAgICAgICB0aGlzLndpZGdldEFyZ3MuaW5wdXRBcmdzLmNoYW5nZUFuYWx5c2lzVHlwZS52YWx1ZSA9IFwiQ0NEQ1wiO1xuICAgICAgICB0aGlzLmFwcGx5RmlsdGVyVG9TdG9yZSh0aGlzLmFsdGVyZWRTdGF0ZUVudW0pO1xuICAgIH1cbiAgICBoYW5kbGVJc0NoYW5nZUFuYWx5c2lzVHlwZU5vdENDREMoKSB7XG4gICAgICAgIHRoaXMud2lkZ2V0QXJncy5pbnB1dEFyZ3MuY2hhbmdlQW5hbHlzaXNUeXBlLnZhbHVlID0gXCJcIjtcbiAgICAgICAgdGhpcy5yZXNldFN0b3JlKCk7XG4gICAgfVxuICAgIGFwcGx5RmlsdGVyVG9TdG9yZShmaWx0ZXJWYWx1ZSkge1xuICAgICAgICBjb25zdCBnZXRGaWx0ZXJlZFN0b3JlID0gKHN0b3JlLCBmaWx0ZXJMaXN0KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gc3RvcmUuZmlsdGVyKChpdGVtKSA9PiBmaWx0ZXJMaXN0LnNvbWUoKGxpc3RJdGVtKSA9PiBpdGVtLmtleSA9PT0gbGlzdEl0ZW0pKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgc3RvcmUgPSBnZXRGaWx0ZXJlZFN0b3JlKHRoaXMuaW5pdGlhbFN0b3JlLCBmaWx0ZXJWYWx1ZSk7XG4gICAgICAgIHRoaXMuc3RvcmUgPSBzdG9yZTtcbiAgICB9XG4gICAgcmVzZXRTdG9yZSgpIHtcbiAgICAgICAgdGhpcy5zdG9yZSA9IHRoaXMuaW5pdGlhbFN0b3JlO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoaChcImRpdlwiLCBudWxsLCBoKFwiY2FsY2l0ZS1sYWJlbFwiLCB7IGFsaWdubWVudDogXCJzdGFydFwiLCBzY2FsZTogVUlEZWZhdWx0cy5TY2FsZSwgbGF5b3V0OiBcImRlZmF1bHRcIiwgcmVmOiAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMud2lkZ2V0Q29udGFpbmVyID0gZTtcbiAgICAgICAgICAgIH0gfSwgaChcInJmeC1sYWJlbFwiLCB7IGxhYmVsOiB0aGlzLmlucHV0QXJnLmRpc3BsYXlOYW1lLCBvblJmeExhYmVsSGVscEFjdGlvbkNsaWNrOiAoKSA9PiB0aGlzLmhlbHBBY3Rpb25DbGlja0V2ZW50SGFuZGxlcnM/LmdldChIZWxwQ2xpY2tIYW5kbGVyS2V5cy5jaGFuZ2VUeXBlSGVscENsaWNrSGFuZGxlcikoKSB9KSwgaChcInJmeC1kdGV4LWNvbW1vbi1zZWxlY3RcIiwgeyBvcHRpb25zOiB0aGlzLnN0b3JlLCB2YWx1ZTogU3RyaW5nKHRoaXMudmFsdWUpLCBvblJmeEFyZ3VtZW50Q2hhbmdlOiB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlIH0pKSkpO1xuICAgIH1cbiAgICBnZXQgaG9zdEVsZW1lbnQoKSB7IHJldHVybiBnZXRFbGVtZW50KHRoaXMpOyB9XG59O1xuXG5leHBvcnQgeyBSZnhDdGVEZXRlY3RDaGFuZ2VUeXBlUGlja2VyIGFzIFIgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmZ4LWN0ZS1kZXRlY3QtY2hhbmdlLXR5cGUtcGlja2VyLTBkNzhkZTA0LmpzLm1hcCIsImV4cG9ydCB7IFIgYXMgcmZ4X2N0ZV9kZXRlY3RfY2hhbmdlX3R5cGVfcGlja2VyIH0gZnJvbSAnLi9yZngtY3RlLWRldGVjdC1jaGFuZ2UtdHlwZS1waWNrZXItMGQ3OGRlMDQuanMnO1xuaW1wb3J0ICcuL2luZGV4LWRhMWI3MTM4LmpzJztcbmltcG9ydCAnLi9mdW5jdGlvbnMtZjFmMmRmZmQuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvY29yZS9sYW5nLmpzJztcbmltcG9ydCAnLi9yZXNvdXJjZXMtMjdjNjZmNWMuanMnO1xuaW1wb3J0ICcuL2xvY2FsaXphdGlvbi1oZWxwZXItNDgxOWI2N2QuanMnO1xuaW1wb3J0ICcuL3R5cGUtZ2F1cmRzLTE4NDA3NDdmLmpzJztcbmltcG9ydCAnLi9fZ2V0VGFnLTk2YWYwMjlkLmpzJztcbmltcG9ydCAnLi91aS11dGlscy05MjhhNDA5Ni5qcyc7XG5pbXBvcnQgJy4vcmZ4LWFyZ3MtaGVscGVyLWFiNDAxNTQzLmpzJztcbmltcG9ydCAnLi9pbnRlcmZhY2VzLWQwYzY4OTQ0LmpzJztcbmltcG9ydCAnLi9sYXllci1oZWxwZXItMzg2N2VlZjcuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvaWRlbnRpdHkvSWRlbnRpdHlNYW5hZ2VyLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL2NvcmUvdXJsVXRpbHMuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvbGF5ZXJzL0xheWVyLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL2xheWVycy9JbWFnZXJ5TGF5ZXIuanMnO1xuaW1wb3J0ICdAYXJjZ2lzL2NvcmUvc21hcnRNYXBwaW5nL3Jhc3Rlci9yZW5kZXJlcnMvc3RyZXRjaC5qcyc7XG5pbXBvcnQgJy4vY29tbW9uLWZkYTE0NjJlLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL3JlcXVlc3QuanMnO1xuaW1wb3J0ICcuL19VaW50OEFycmF5LTY4ZTFlM2Y5LmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL3Jlc3Qvc3VwcG9ydC9BbGdvcml0aG1pY0NvbG9yUmFtcC5qcyc7XG5pbXBvcnQgJ0BhcmNnaXMvY29yZS9yZXN0L3N1cHBvcnQvTXVsdGlwYXJ0Q29sb3JSYW1wLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL0NvbG9yLmpzJztcbmltcG9ydCAnLi9jb2xvclJhbXBVdGlscy04YmRkNDZjNS5qcyc7XG5pbXBvcnQgJy4vc2FuaXRpemUtbnVtYmVyLWQ4NDExNGY3LmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL3Jlc3QvZ2VvcHJvY2Vzc29yLmpzJztcbmltcG9ydCAnQGFyY2dpcy9jb3JlL3BvcnRhbC9Qb3J0YWxJdGVtLmpzJztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmZ4LWN0ZS1kZXRlY3QtY2hhbmdlLXR5cGUtcGlja2VyLmVudHJ5LmpzLm1hcCIsImltcG9ydCB7IGcgYXMgZ2V0TG9jYWxlSW5mbyB9IGZyb20gJy4vbG9jYWxpemF0aW9uLWhlbHBlci00ODE5YjY3ZC5qcyc7XG5pbXBvcnQgeyBpIGFzIGlzRW1wdHlEYXRhSXRlbSB9IGZyb20gJy4vdHlwZS1nYXVyZHMtMTg0MDc0N2YuanMnO1xuXG4vKipcbiAqIEluZGljYXRlcyBpZiBhIHByb3ZpZGVkIG51bWJlciB2YWx1ZSBpcyB2YWxpZC5cbiAqIEFuIGludmFsaWQgdmFsdWUgaXM6IHVuZGVmaW5lZCB8IE5hTiB8IEluZmluaXRlIHwgLUluZmluaXRlIHwgbnVsbFxuICogU2VlIGZvciBtb3JlIGRldGFpbHM6XG4gKiAgIC0gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvTnVtYmVyL2lzRmluaXRlXG4gKiAgIC0gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvTnVtYmVyL2lzTmFOXG4gKiBAcGFyYW0ge251bWJlciB8IHVuZGVmaW5lZCB8IG51bGx9IHZhbHVlIHZhbHVlIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gaWYgdmFsaWQgb3Igbm90XG4gKi9cbmZ1bmN0aW9uIGlzVmFsaWROdW1iZXIodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gbnVsbCAmJiBOdW1iZXIuaXNOYU4odmFsdWUpID09PSBmYWxzZSAmJiBOdW1iZXIuaXNGaW5pdGUodmFsdWUpID09PSB0cnVlO1xufVxuLyoqXG4gKiBSZXR1cm5zIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwcm92aWRlZCBudW1iZXIgZm9yIHVzZSB3aXRoIGNhbGNpdGUtaW5wdXQuIEl0IGFsc29cbiAqIGd1YXJkcyBhZ2FpbnN0IGludmFsaWQgdHlwZXMgZm9sbG93aW5nIHRoaXMgbG9naWM6XG4gKiAgIC0gSWYgdGhlIHZhbHVlIGlzIHZhbGlkIChub3QgTmFOLCBmaW5pdGUpLCB0aGUgdmFsdWUgaXMgcmV0dXJuZWQgYXMgYSBzdHJpbmdcbiAqICAgLSBJZiBub3QgYW5kIGlmIGEgdmFsaWQgZGVmYXVsdCB2YWx1ZSBpcyBwcm92aWRlZCwgdGhlIGRlZmF1bHQgdmFsdWUgaXMgcmV0dXJuZWQgYXMgYSBzdHJpbmdcbiAqICAgLSBJZiBub3QsIGFuIGVtcHR5IHN0cmluZyBpcyByZXR1cm5lZFxuICogQHBhcmFtIHZhbHVlXG4gKiBAcGFyYW0gZGVmYXVsdFZhbHVlXG4gKiBAcmV0dXJucyBhIHNhbml0aXplZCBzdHJpbmdcbiAqL1xuZnVuY3Rpb24gc2FuaXRpemVOdW1iZXIodmFsdWUsIGRlZmF1bHRWYWx1ZSkge1xuICAgIGxldCByZXR1cm5lZFZhbHVlO1xuICAgIGlmICh2YWx1ZSAhPT0gbnVsbCkge1xuICAgICAgICBjb25zdCB0ZXN0ZWRWYWx1ZSA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiA/IE51bWJlci5wYXJzZUZsb2F0KHZhbHVlKSA6IHZhbHVlO1xuICAgICAgICBpZiAoaXNWYWxpZE51bWJlcih0ZXN0ZWRWYWx1ZSkpXG4gICAgICAgICAgICByZXR1cm5lZFZhbHVlID0gdGVzdGVkVmFsdWU7XG4gICAgICAgIGVsc2UgaWYgKGlzVmFsaWROdW1iZXIoZGVmYXVsdFZhbHVlKSlcbiAgICAgICAgICAgIHJldHVybmVkVmFsdWUgPSBkZWZhdWx0VmFsdWU7XG4gICAgfVxuICAgIHJldHVybiByZXR1cm5lZFZhbHVlID09PSB1bmRlZmluZWQgPyBcIlwiIDogYCR7cmV0dXJuZWRWYWx1ZX1gO1xufVxuLyoqXG4gKiBQYXJzZXMgYSB2YWx1ZSBzdHJpbmcgdG8gYSBudW1iZXIgZm9yIHVzZSB3aXRoIGNhbGNpdGUtaW5wdXQuIElmIHRoZSBzdHJpbmcgaXMgZW1wdHksIGl0IHdpbGwgcmV0dXJuIHVuZGVmaW5lZC5cbiAqIElmIHRoZSBzdHJpbmcgaXMgb3RoZXJ3aXNlIGludmFsaWQsIGl0IHdpbGwgcmV0dXJuIE5hTi5cbiAqIEBwYXJhbSB2YWx1ZSBjYWxjaXRlLWlucHV0IHZhbHVlXG4gKiBAcmV0dXJucyB7bnVtYmVyIHwgdW5kZWZpbmVkfSB0aGUgcGFyc2VkIG51bWJlclxuICovXG5mdW5jdGlvbiBwYXJzZU51bWJlcih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gXCJcIilcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQodmFsdWUpO1xufVxuLyoqXG4gKiBGb3JtYXRzIGEgbnVtYmVyIHRvIGEgc3BlY2lmaWVkIG51bWJlciBvZiBkZWNpbWFsIHBsYWNlcy5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgLSBUaGUgbnVtYmVyIHRvIGZvcm1hdC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbZnJhY3Rpb25EaWdpdHM9M10gLSBUaGUgbnVtYmVyIG9mIGRlY2ltYWwgcGxhY2VzIHRvIGluY2x1ZGUgaW4gdGhlIGZvcm1hdHRlZCBudW1iZXIuIERlZmF1bHRzIHRvIDMuXG4gKiBAcmV0dXJucyB7bnVtYmVyfHVuZGVmaW5lZH0gLSBUaGUgZm9ybWF0dGVkIG51bWJlciwgb3IgdW5kZWZpbmVkIGlmIHRoZSBpbnB1dCB2YWx1ZSBpcyBlbXB0eS5cbiAqL1xuZnVuY3Rpb24gZm9ybWF0TnVtYmVyKHZhbHVlLCBmcmFjdGlvbkRpZ2l0cyA9IDMpIHtcbiAgICBpZiAoaXNFbXB0eURhdGFJdGVtKHZhbHVlKSlcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQodmFsdWUudG9GaXhlZChmcmFjdGlvbkRpZ2l0cykpO1xufVxuLyoqXG4gKiBGb3JtYXRzIGEgbnVtYmVyIG9yIHN0cmluZyByZXByZXNlbnRpbmcgYSBudW1iZXIgYWNjb3JkaW5nIHRvIHRoZSBsb2NhbGUsIHBhc3NpbmcgSW50bCBudW1iZXIgZm9ybWF0IG9wdGlvbnNcbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlR2xvYmFsX09iamVjdHMvSW50bC9OdW1iZXJGb3JtYXQvTnVtYmVyRm9ybWF0I29wdGlvbnNcbiAqIEBwYXJhbSB7bnVtYmVyIHwgc3RyaW5nIHwgdW5kZWZpbmVkfSB2YWx1ZSB0byBiZSBmb3JtYXR0ZWQgYW5kIGxvY2FsaXplZFxuICogQHBhcmFtIHtJbnRsLk51bWJlckZvcm1hdE9wdGlvbnN9IGZvcm1hdE9wdGlvbnMgb3B0aW9ucyBvYmplY3QgbWF0Y2hpbmcgSW50bC5OdW1iZXJGb3JtYXRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IGxvY2FsaXplZCAvIHJvdW5kZWQgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdE51bWJlclRvTG9jYWxlKHZhbHVlLCBmb3JtYXRPcHRpb25zKSB7XG4gICAgbGV0IGZvcm1hdHRlZFZhbHVlID0gXCJcIjtcbiAgICBpZiAoIWlzRW1wdHlEYXRhSXRlbSh2YWx1ZSkgJiYgIU51bWJlci5pc05hTih2YWx1ZSkpIHtcbiAgICAgICAgY29uc3QgbG9jYWxlQ29kZSA9IGdldExvY2FsZUluZm8oKS5sb2NhbGU7XG4gICAgICAgIGZvcm1hdHRlZFZhbHVlID0gSW50bC5OdW1iZXJGb3JtYXQobG9jYWxlQ29kZSwgZm9ybWF0T3B0aW9ucykuZm9ybWF0KE51bWJlcih2YWx1ZSkpO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybWF0dGVkVmFsdWU7XG59XG5cbmV4cG9ydCB7IGZvcm1hdE51bWJlclRvTG9jYWxlIGFzIGEsIGZvcm1hdE51bWJlciBhcyBmLCBpc1ZhbGlkTnVtYmVyIGFzIGksIHBhcnNlTnVtYmVyIGFzIHAsIHNhbml0aXplTnVtYmVyIGFzIHMgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2FuaXRpemUtbnVtYmVyLWQ4NDExNGY3LmpzLm1hcCIsImNvbnN0IFVJRGVmYXVsdHMgPSB7XG4gICAgU2NhbGU6IFwic1wiLFxuICAgIFBvcG92ZXJUaW1lcjogNjBcbn07XG5jb25zdCBDYWxjaXRlU2NhbGUgPSB7XG4gICAgczogXCJzXCIsXG4gICAgbTogXCJtXCJcbn07XG5jb25zdCBDYWxjaXRlT3ZlcmxheVBvc2l0aW9uaW5nID0ge1xuICAgIGFic29sdXRlOiBcImFic29sdXRlXCIsXG4gICAgZml4ZWQ6IFwiZml4ZWRcIlxufTtcblxuZXhwb3J0IHsgQ2FsY2l0ZVNjYWxlIGFzIEMsIFVJRGVmYXVsdHMgYXMgVSwgQ2FsY2l0ZU92ZXJsYXlQb3NpdGlvbmluZyBhcyBhIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpLXV0aWxzLTkyOGE0MDk2LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==