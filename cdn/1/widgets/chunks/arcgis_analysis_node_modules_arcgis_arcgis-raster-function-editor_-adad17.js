"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-adad17"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/resources-27c66f5c.js":
/*!******************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/resources-27c66f5c.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ domainTypes),
/* harmony export */   b: () => (/* binding */ getGlobalFunctions),
/* harmony export */   c: () => (/* binding */ fetchHelpStrings),
/* harmony export */   d: () => (/* binding */ dataTypes),
/* harmony export */   e: () => (/* binding */ getCategoryReference),
/* harmony export */   f: () => (/* binding */ fetchCommonStrings),
/* harmony export */   g: () => (/* binding */ getEnums),
/* harmony export */   h: () => (/* binding */ helpDoc),
/* harmony export */   k: () => (/* binding */ kernelTypesInfo),
/* harmony export */   t: () => (/* binding */ tranposeInputBitInfo)
/* harmony export */ });
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");


async function fetchCommonStrings(locale = (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.g)().locale) {
    let strings = (await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-9f2c5e").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.en-c610c1cd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.en-c610c1cd.js")));
    switch (locale) {
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Arabic:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-aeba51").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.ar-9d103687.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.ar-9d103687.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Bosnian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-978ace").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.bs-778fa490.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.bs-778fa490.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Bulgarian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-11396c").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.bg-5ec84459.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.bg-5ec84459.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Catalan:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-55f117").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.ca-ada3d60c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.ca-ada3d60c.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Czech:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-6a80c2").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.cs-3a59797b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.cs-3a59797b.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Danish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-3d24e5").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.da-55c733be.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.da-55c733be.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.German:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-c4c203").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.de-1454f434.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.de-1454f434.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Greek:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-a7d392").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.el-652cec43.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.el-652cec43.js"));
            break;
        // TODO: previously not supported by fn-editor
        // case SupportedLocales.EnglishUSA:
        //   strings = await import("./assets/common-strings.en-US.json");
        //   break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Spanish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-3fda50").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.es-c65ca642.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.es-c65ca642.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Estonian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-b51b2d").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.et-97fd9da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.et-97fd9da7.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.French:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-652b0b").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.fr-f066cbe6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.fr-f066cbe6.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Finnish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-41b04b").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.fi-ae5053e5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.fi-ae5053e5.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Hebrew:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-b7b537").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.he-270225ae.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.he-270225ae.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Croatian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-024fae").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.hr-8d833d8e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.hr-8d833d8e.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Hungarian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-c46b13").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.hu-6eebefc3.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.hu-6eebefc3.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Indonesian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-b5c014").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.id-8b048c90.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.id-8b048c90.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Italian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-71b7f6").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.it-efba6f9b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.it-efba6f9b.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Japanese:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-8e7fcf").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.ja-dd92333f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.ja-dd92333f.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Korean:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-3fdb44").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.ko-e811f568.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.ko-e811f568.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Lithuanian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-f7b86c").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.lt-ac57c68c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.lt-ac57c68c.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Latvian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-36f79c").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.lv-21212188.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.lv-21212188.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.NorwegianBokml:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-f35174").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.nb-5ec43a4b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.nb-5ec43a4b.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Dutch:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-80e72e").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.nl-bb99c2fc.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.nl-bb99c2fc.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Polish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-05b457").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.pl-693c2a24.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.pl-693c2a24.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.PortugueseBrazil:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-94f22c").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.pt-BR-13a658bd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.pt-BR-13a658bd.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.PortuguesePortugal:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-3cf368").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.pt-PT-8f1cba9a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.pt-PT-8f1cba9a.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Romanian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-d045b6").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.ro-db6b4694.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.ro-db6b4694.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Russian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-27e829").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.ru-395088d2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.ru-395088d2.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Serbian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-82cfee").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.sr-d6f475b9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.sr-d6f475b9.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Slovak:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-66feb0").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.sk-27eca00b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.sk-27eca00b.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Slovenian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-438397").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.sl-ea3a78e6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.sl-ea3a78e6.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Swedish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-e4ce1e").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.sv-9d23d938.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.sv-9d23d938.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Thai:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-69a34c").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.th-17e016f1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.th-17e016f1.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Turkish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-4539a3").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.tr-6f17e009.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.tr-6f17e009.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Ukrainian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-cbfe80").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.uk-3349f0e8.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.uk-3349f0e8.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Vietnamese:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-1e7559").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.vi-e466fb10.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.vi-e466fb10.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.ChineseChina:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-8602e8").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.zh-CN-e9561911.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.zh-CN-e9561911.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.ChineseHongKong:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-67d01a").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.zh-HK-35b40b2d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.zh-HK-35b40b2d.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.ChineseTaiwan:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-18e959").then(__webpack_require__.bind(__webpack_require__, /*! ./common-strings.zh-TW-7c44989c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/common-strings.zh-TW-7c44989c.js"));
            break;
    }
    return strings;
}
async function fetchHelpStrings(locale = (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.g)().locale) {
    let strings = (await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-95eb49").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.en-f9d07fbe.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.en-f9d07fbe.js")));
    switch (locale) {
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Arabic:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-018353").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.ar-10cf92fa.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.ar-10cf92fa.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Bosnian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-c1bc4e").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.bs-8f22fb93.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.bs-8f22fb93.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Bulgarian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-e1eac8").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.bg-d4b9b80f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.bg-d4b9b80f.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Catalan:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-fb102e").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.ca-1cfd3e53.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.ca-1cfd3e53.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Czech:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-a01280").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.cs-64cce62a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.cs-64cce62a.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Danish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-2b997e").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.da-2dc7d010.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.da-2dc7d010.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.German:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-7505ec").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.de-f549d45d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.de-f549d45d.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Greek:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-7258c0").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.el-af7b2a96.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.el-af7b2a96.js"));
            break;
        // TODO: previously not supported by fn-editor
        // case SupportedLocales.EnglishUSA:
        //   strings = await import("../../assets/t9n/help-texts.en-US.json");
        //   break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Spanish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-6e5199").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.es-c2958463.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.es-c2958463.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Estonian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-7f89f2").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.et-1f7a3991.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.et-1f7a3991.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.French:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-33a6ef").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.fr-7671a600.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.fr-7671a600.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Finnish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-8660c8").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.fi-87f11009.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.fi-87f11009.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Hebrew:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-72dfe2").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.he-95b9bde1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.he-95b9bde1.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Croatian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-db0a39").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.hr-a6e7746d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.hr-a6e7746d.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Hungarian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-0ad10c").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.hu-73a1ac5a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.hu-73a1ac5a.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Indonesian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-db71c7").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.id-a6c022ac.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.id-a6c022ac.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Italian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-21bb72").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.it-5c9f24f9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.it-5c9f24f9.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Japanese:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-c4592b").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.ja-5f3512a0.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.ja-5f3512a0.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Korean:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-337cd7").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.ko-8562f10a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.ko-8562f10a.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Lithuanian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-ea31e0").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.lt-8ce21b20.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.lt-8ce21b20.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Latvian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-f43516").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.lv-5affdc35.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.lv-5affdc35.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.NorwegianBokml:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-4736a7").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.nb-24786143.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.nb-24786143.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Dutch:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-1ee780").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.nl-63c7fa4f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.nl-63c7fa4f.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Polish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-b77bdb").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.pl-a6eab705.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.pl-a6eab705.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.PortugueseBrazil:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-6a9734").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.pt-BR-564f93b3.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.pt-BR-564f93b3.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.PortuguesePortugal:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-9ec3d1").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.pt-PT-1ddbad3e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.pt-PT-1ddbad3e.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Romanian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-bac55a").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.ro-3a5c4e11.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.ro-3a5c4e11.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Russian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-02b8a7").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.ru-8bd69cdf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.ru-8bd69cdf.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Serbian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-d82f0b").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.sr-0786c170.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.sr-0786c170.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Slovak:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-4d8e60").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.sk-ba28f3f7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.sk-ba28f3f7.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Slovenian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-589c5d").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.sl-42ea0832.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.sl-42ea0832.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Swedish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-f63a11").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.sv-56096940.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.sv-56096940.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Thai:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-151118").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.th-a9868e04.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.th-a9868e04.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Turkish:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-2ec2a9").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.tr-215d1c70.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.tr-215d1c70.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Ukrainian:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-d5d55f").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.uk-8cc019d8.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.uk-8cc019d8.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.Vietnamese:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-11a6d8").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.vi-1957a8c4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.vi-1957a8c4.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.ChineseChina:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-b6a5b7").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.zh-CN-46626ca0.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.zh-CN-46626ca0.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.ChineseHongKong:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-1937fb").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.zh-HK-85a0d76f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.zh-HK-85a0d76f.js"));
            break;
        case _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_0__.S.ChineseTaiwan:
            strings = await __webpack_require__.e(/*! import() */ "vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-4763ff").then(__webpack_require__.bind(__webpack_require__, /*! ./help-texts.zh-TW-817c5d68.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.zh-TW-817c5d68.js"));
            break;
    }
    return strings;
}

const dataTypes = {
    raster: "raster",
    long: "long",
    double: "double",
    string: "string",
    longArray: "longarray",
    stringArray: "stringarray",
    doubleArray: "doublearray",
    rasterArray: "rasterarray",
    colormap: "rastercolormap",
    colorRamp: "colorramp",
    boolean: "boolean",
    arrayOfRasterStatistics: "arrayofrasterstatistics",
    arrayOfRasterHistogram: "arrayofrasterhistogram",
    table: "table",
    rasterStatisticsArray: "rasterstatisticsarray",
    rasterHistogramArray: "rasterhistogramarray",
    featureClass: "featureclass",
    geometry: "geometry",
    extent: "extent",
    rasterInfo: "rasterinfo",
    cellSize: "cellsize",
    propertySet: "propertyset",
    spatialReference: "spatialReference",
    rfxtemplate: "rfxtemplate",
    file: "file"
};
const domainTypes = {
    list: "list",
    range: "range",
    fields: "fields",
    numList: "numlist",
    bandIndex: "bandIndex",
    bandName: "bandName",
    switchable: "switchable",
    linearUnit: "linearUnit",
    rasterDimensions: "rasterDimensions",
    rasterVariables: "rasterVariables",
    mdimdef: "mdimdef",
    aggregationdef: "aggregationdef"
};
async function getEnums(locale) {
    const functionStrings = await fetchCommonStrings(locale);
    const enums = {
        colorSchemeTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.clrSchemeTypeColormap
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.clrSchemeTypeColorRamp
            }
        ],
        colormapTypes: [
            {
                key: "Elevation",
                label: functionStrings.rasterFunctions.enumLabels.colormapTypeElevation
            },
            {
                key: "Gray",
                label: functionStrings.rasterFunctions.enumLabels.colormapTypeGray
            },
            {
                key: "NDVI",
                label: functionStrings.rasterFunctions.enumLabels.colormapTypeNDVI
            },
            {
                key: "NDVI2",
                label: functionStrings.rasterFunctions.enumLabels.colormapTypeNDVI2
            },
            {
                key: "NDVI3",
                label: functionStrings.rasterFunctions.enumLabels.colormapTypeNDVI3
            },
            {
                key: "Random",
                label: functionStrings.rasterFunctions.enumLabels.colormapTypeRandom
            },
            {
                key: "Hillshade",
                label: functionStrings.rasterFunctions.enumLabels.clrmapTypeHillshade
            }
        ],
        bandComboMethods: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.bandComboByNames
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.bandComboByWavelength
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.bandComboByIDs
            }
        ],
        esriMissingBandActions: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.missingBandActionBestMatch
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.missingBandActionFail
            }
        ],
        esriHillshadeTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.hillshadeTypeSimple
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.hillshadeTypeMultidirectional
            }
        ],
        esriSlopeTypes13: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.none
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.slopeTypeAdjusted
            }
        ],
        esriSlopeTypes: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.slopeTypeDegree
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.slopeTypePercentRise
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.slopeTypeScaled
            }
        ],
        esriUnitConversionFxUnitTypes: [
            {
                key: 200,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeCelsius
            },
            {
                key: 8,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeCentimeters
            },
            {
                key: 12,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeDecimeters
            },
            {
                key: 201,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeFahrenheit
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeFeet
            },
            {
                key: 103,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeFeetPerSec
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeInches
            },
            {
                key: 202,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeKelvin
            },
            {
                key: 10,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeKilometers
            },
            {
                key: 101,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeKmsPerHour
            },
            {
                key: 102,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeKnots
            },
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMeters
            },
            {
                key: 100,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMetersPerSec
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMiles
            },
            {
                key: 104,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMilesPerHour
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMillimeters
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeNauticalMiles
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.unitTypeYards
            }
        ],
        esriRasterStretchTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.none
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.stretchTypeStdDev
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.stretchTypeMinMax
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.stretchTypePercentMinMax
            },
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.stretchTypeSigmoid
            }
        ],
        esriCellsizeTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeFirst
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeMin
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeMax
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeMean
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeLast
            }
        ],
        esriExtentTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.extentTypeFirst
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.extentTypeIntersection
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.extentTypeUnion
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.extentTypeLast
            }
        ],
        esriNoDataInterpretationTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.noDataInterpretAny
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.noDataInterpretAll
            }
        ],
        esriCurvatureTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.curvatureTypeStandard
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.curvatureTypeProfile
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.curvatureTypePlanform
            }
        ],
        esriRasterFilterTypes: [
            {
                key: 255,
                label: functionStrings.rasterFunctions.enumLabels.none
            },
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeLineDetectionHorizontal
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeLineDetectionVertical
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeLineDetectionLeftDiagonal
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeLineDetectionRightDiagonal
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientNorth
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientWest
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientEast
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientSouth
            },
            {
                key: 8,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientNorthEast
            },
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientNorthWest
            },
            {
                key: 10,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeSmoothArithmeticMean
            },
            {
                key: 11,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeSmoothing3x3
            },
            {
                key: 12,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeSmoothing5x5
            },
            {
                key: 13,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeSharpening3x3
            },
            {
                key: 14,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeSharpening5x5
            },
            {
                key: 15,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeLaplacian3x3
            },
            {
                key: 16,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeLaplacian5x5
            },
            {
                key: 17,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeSobelHorizontal
            },
            {
                key: 18,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeSobelVertical
            },
            {
                key: 19,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeSharpen
            },
            {
                key: 20,
                label: functionStrings.rasterFunctions.enumLabels.filterTypeSharpen2
            },
            {
                key: 21,
                label: functionStrings.rasterFunctions.enumLabels.filterTypePointSpread
            },
            {
                key: -1,
                label: functionStrings.rasterFunctions.enumLabels.userDefined
            }
        ],
        esriContourTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.ContourTypeLines
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.ContourTypeFill
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.ContourTypeSmoothOnly
            }
        ],
        esriRasterizeResolveOverlapMethod: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.rasterizeFirst
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.rasterizeLast
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.rasterizeSmallest
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.rasterizeLargest
            }
        ],
        rstResamplingTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeNearest
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeBilinear
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeCubic
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeMajority
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeBilinearPlus
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeGauss
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeGaussPlus
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeAverage
            },
            {
                key: 8,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeMinimum
            },
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeMaximum
            },
            {
                key: 10,
                label: functionStrings.rasterFunctions.enumLabels.resamplingTypeVectorAvg
            }
        ],
        esriFocalStatisticTypes: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.minimum
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.maximum
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.mean
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.stdDeviation
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.median
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.majority
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.minority
            }
        ],
        uvMagDirUnkTypes: [
            {
                key: "Vector-UV",
                label: functionStrings.rasterFunctions.enumLabels.uvMagDirTypeUV
            },
            {
                key: "Vector-MagDir",
                label: functionStrings.rasterFunctions.enumLabels.uvMagDirTypeMagDir
            },
            {
                key: "Unknown",
                label: functionStrings.rasterFunctions.enumLabels.unknown
            }
        ],
        esriAngleReferenceSystemTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.angleRefSysGeographic
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.angleRefSysArithmetic
            }
        ],
        uvMagDirTypes: [
            {
                key: "Vector-UV",
                label: functionStrings.rasterFunctions.enumLabels.uvMagDirTypeUV
            },
            {
                key: "Vector-MagDir",
                label: functionStrings.rasterFunctions.enumLabels.uvMagDirTypeMagDir
            }
        ],
        esriInterpolateIrregularDataMethods: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataNearest
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningLinear
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningNaturalNeighbor
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningIDW
            }
        ],
        esriRasterThresholdTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeConstant
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeOtsu
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeTsai
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeKapur
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeKittler
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeRosin
            }
        ],
        esriArgStatisticsTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.argStatsTypeMax
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.argStatsTypeMin
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.argStatsTypeMedian
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.argStatsTypeDuration
            }
        ],
        esriRasterArithmeticOperations: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.arithmeticOpPlus
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.arithmeticOpMinus
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.arithmeticOpMultiply
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.arithmeticOpDivide
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.arithmeticOpPower
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.arithmeticOpMode
            }
        ],
        esriRasterClippingTypes: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.clipTypeOutside
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.clipTypeInside
            }
        ],
        gpsaIgnoreNoData: [
            {
                key: "DATA",
                label: functionStrings.rasterFunctions.enumLabels.yes
            },
            {
                key: "NODATA",
                label: functionStrings.rasterFunctions.enumLabels.no
            }
        ],
        gpsaKernelDensityAreaUnitTypes: [
            {
                key: "SQUARE_MAP_UNITS",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeSqMapUnits
            },
            {
                key: "SQUARE_MILES",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeSqMiles
            },
            {
                key: "SQUARE_KILOMETERS",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeSqKms
            },
            {
                key: "ACRES",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeAcres
            },
            {
                key: "HECTARES",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeHectares
            },
            {
                key: "SQUARE_YARDS",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeSqYards
            },
            {
                key: "SQUARE_FEET",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeSqFt
            },
            {
                key: "SQUARE_INCHES",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeSqInches
            },
            {
                key: "SQUARE_METERS",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeSqMts
            },
            {
                key: "SQUARE_CENTIMETERS",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeSqCms
            },
            {
                key: "SQUARE_MILLIMETERS",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeSqMms
            }
        ],
        gpsaKernelDensityOutValTypes: [
            {
                key: "DENSITIES",
                label: functionStrings.rasterFunctions.enumLabels.densities
            },
            {
                key: "EXPECTED_COUNTS",
                label: functionStrings.rasterFunctions.enumLabels.expectedCounts
            }
        ],
        gpsaKernelDensityMethods: [
            {
                key: "PLANAR",
                label: functionStrings.rasterFunctions.enumLabels.planar
            },
            {
                key: "GEODESIC",
                label: functionStrings.rasterFunctions.enumLabels.geodesic
            }
        ],
        gpsaLinearUnitTypes: [
            {
                key: "Kilometers",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeKilometers
            },
            {
                key: "Meters",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMeters
            },
            {
                key: "Decimeters",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeDecimeters
            },
            {
                key: "Centimeters",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeCentimeters
            },
            {
                key: "Millimeters",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMillimeters
            },
            {
                key: "NauticalMiles",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeNauticalMiles
            },
            {
                key: "Miles",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMiles
            },
            {
                key: "Yards",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeYards
            },
            {
                key: "Feet",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeFeet
            },
            {
                key: "Inches",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeInches
            },
            {
                key: "DecimalDegrees",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeDecimalDegrees
            },
            {
                key: "Points",
                label: functionStrings.rasterFunctions.enumLabels.unitTypePoints
            },
            {
                key: "Unknown",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeUnknown
            }
        ],
        gpsaLeastCostPathTypes: [
            {
                key: "EACH_CELL",
                label: functionStrings.rasterFunctions.enumLabels.eachCell
            },
            {
                key: "EACH_ZONE",
                label: functionStrings.rasterFunctions.enumLabels.eachZone
            },
            {
                key: "BEST_SINGLE",
                label: functionStrings.rasterFunctions.enumLabels.bestSingle
            }
        ],
        gpsaViewshedAnalysisMethods: [
            {
                key: "ALL_SIGHTLINES",
                label: functionStrings.rasterFunctions.enumLabels.allSightlines
            },
            {
                key: "PERIMETER_SIGHTLINES",
                label: functionStrings.rasterFunctions.enumLabels.perimeterSightlines
            }
        ],
        gpsaViewshedAnalysisTypes: [
            {
                key: "FREQUENCY",
                label: functionStrings.rasterFunctions.enumLabels.frequency
            },
            {
                key: "OBSERVERS",
                label: functionStrings.rasterFunctions.enumLabels.observers
            }
        ],
        gpsaZonalStatisticsTypes: [
            {
                key: "MEAN",
                label: functionStrings.rasterFunctions.enumLabels.mean
            },
            {
                key: "MAJORITY",
                label: functionStrings.rasterFunctions.enumLabels.majority
            },
            {
                key: "MAXIMUM",
                label: functionStrings.rasterFunctions.enumLabels.maximum
            },
            {
                key: "MEDIAN",
                label: functionStrings.rasterFunctions.enumLabels.median
            },
            {
                key: "MINIMUM",
                label: functionStrings.rasterFunctions.enumLabels.minimum
            },
            {
                key: "MINORITY",
                label: functionStrings.rasterFunctions.enumLabels.minority
            },
            {
                key: "PERCENTILE",
                label: functionStrings.rasterFunctions.enumLabels.percentile
            },
            {
                key: "RANGE",
                label: functionStrings.rasterFunctions.enumLabels.range
            },
            {
                key: "STD",
                label: functionStrings.rasterFunctions.enumLabels.stdDeviation
            },
            {
                key: "SUM",
                label: functionStrings.rasterFunctions.enumLabels.sum
            },
            {
                key: "VARIETY",
                label: functionStrings.rasterFunctions.enumLabels.variety
            }
        ],
        gpsaZonalPercentileInterpolationTypes: [
            {
                key: "AUTO_DETECT",
                label: functionStrings.rasterFunctions.enumLabels.autoDetect
            },
            {
                key: "NEAREST",
                label: functionStrings.rasterFunctions.enumLabels.nearest
            },
            {
                key: "LINEAR",
                label: functionStrings.rasterFunctions.enumLabels.linear
            }
        ],
        bandArithmeticMethods: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.userDefined
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.ndvi
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.savi
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.bandArithmeticMethodTSAVI
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.bandArithmeticMethodMSAVI
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.gemi
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.pvi
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.gvi
            },
            {
                key: 8,
                label: functionStrings.rasterFunctions.enumLabels.bandArithmeticMethodSultan
            },
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.vari
            },
            {
                key: 10,
                label: functionStrings.rasterFunctions.enumLabels.gndvi
            },
            {
                key: 11,
                label: functionStrings.rasterFunctions.enumLabels.sr
            },
            {
                key: 12,
                label: functionStrings.rasterFunctions.enumLabels.ndvire
            },
            {
                key: 13,
                label: functionStrings.rasterFunctions.enumLabels.srre
            },
            {
                key: 14,
                label: functionStrings.rasterFunctions.enumLabels.mtvi2
            },
            {
                key: 15,
                label: functionStrings.rasterFunctions.enumLabels.rtviCore
            },
            {
                key: 16,
                label: functionStrings.rasterFunctions.enumLabels.cire
            },
            {
                key: 17,
                label: functionStrings.rasterFunctions.enumLabels.cig
            },
            {
                key: 18,
                label: functionStrings.rasterFunctions.enumLabels.ndwi
            },
            {
                key: 19,
                label: functionStrings.rasterFunctions.enumLabels.evi
            },
            {
                key: 20,
                label: functionStrings.rasterFunctions.enumLabels.ironOxide
            },
            {
                key: 21,
                label: functionStrings.rasterFunctions.enumLabels.ferrousMinerals
            },
            {
                key: 22,
                label: functionStrings.rasterFunctions.enumLabels.clayMinerals
            },
            {
                key: 23,
                label: functionStrings.rasterFunctions.enumLabels.wndwi
            },
            {
                key: 24,
                label: functionStrings.rasterFunctions.enumLabels.bai
            },
            {
                key: 25,
                label: functionStrings.rasterFunctions.enumLabels.nbr
            },
            {
                key: 26,
                label: functionStrings.rasterFunctions.enumLabels.ndbi
            },
            {
                key: 27,
                label: functionStrings.rasterFunctions.enumLabels.ndmi
            },
            {
                key: 28,
                label: functionStrings.rasterFunctions.enumLabels.ndsi
            },
            {
                key: 29,
                label: functionStrings.rasterFunctions.enumLabels.mndwi
            }
        ],
        pyStdTemperatureUnitTypes: [
            {
                key: "Celsius",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeCelsius
            },
            {
                key: "Fahrenheit",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeFahrenheit
            },
            {
                key: "Kelvin",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeKelvin
            }
        ],
        pyStdWindspeedUnitTypes: [
            {
                key: "mph",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMilesPerHour
            },
            {
                key: "kph",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeKmsPerHour
            },
            {
                key: "m/s",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeMetersPerSec
            },
            {
                key: "ft/s",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeFeetPerSec
            },
            {
                key: "knots",
                label: functionStrings.rasterFunctions.enumLabels.unitTypeKnots
            }
        ],
        localFunctionOperations: [
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.localSquareRoot
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.localACos
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.localASin
            },
            {
                key: 8,
                label: functionStrings.rasterFunctions.enumLabels.localATan
            },
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.localATanH
            },
            {
                key: 10,
                label: functionStrings.rasterFunctions.enumLabels.localAbs
            },
            {
                key: 13,
                label: functionStrings.rasterFunctions.enumLabels.localBitwiseNot
            },
            {
                key: 18,
                label: functionStrings.rasterFunctions.enumLabels.localBooleanNot
            },
            {
                key: 21,
                label: functionStrings.rasterFunctions.enumLabels.localCos
            },
            {
                key: 22,
                label: functionStrings.rasterFunctions.enumLabels.localCosH
            },
            {
                key: 25,
                label: functionStrings.rasterFunctions.enumLabels.localExp
            },
            {
                key: 26,
                label: functionStrings.rasterFunctions.enumLabels.localExp10
            },
            {
                key: 27,
                label: functionStrings.rasterFunctions.enumLabels.localExp2
            },
            {
                key: 30,
                label: functionStrings.rasterFunctions.enumLabels.localInt
            },
            {
                key: 31,
                label: functionStrings.rasterFunctions.enumLabels.localIsNull
            },
            {
                key: 32,
                label: functionStrings.rasterFunctions.enumLabels.localFloat
            },
            {
                key: 35,
                label: functionStrings.rasterFunctions.enumLabels.localLn
            },
            {
                key: 36,
                label: functionStrings.rasterFunctions.enumLabels.localLog10
            },
            {
                key: 37,
                label: functionStrings.rasterFunctions.enumLabels.localLog2
            },
            {
                key: 45,
                label: functionStrings.rasterFunctions.enumLabels.localNegate
            },
            {
                key: 48,
                label: functionStrings.rasterFunctions.enumLabels.localRoundDown
            },
            {
                key: 49,
                label: functionStrings.rasterFunctions.enumLabels.localRoundUp
            },
            {
                key: 51,
                label: functionStrings.rasterFunctions.enumLabels.localSin
            },
            {
                key: 52,
                label: functionStrings.rasterFunctions.enumLabels.localSinH
            },
            {
                key: 53,
                label: functionStrings.rasterFunctions.enumLabels.localSquare
            },
            {
                key: 56,
                label: functionStrings.rasterFunctions.enumLabels.localTan
            },
            {
                key: 57,
                label: functionStrings.rasterFunctions.enumLabels.localTanH
            },
            {
                key: 59,
                label: functionStrings.rasterFunctions.enumLabels.localACosH
            },
            {
                key: 60,
                label: functionStrings.rasterFunctions.enumLabels.localASinH
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.localPlus
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.localMinus
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.localTimes
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.localPower
            },
            {
                key: 11,
                label: functionStrings.rasterFunctions.enumLabels.localBitwiseAnd
            },
            {
                key: 12,
                label: functionStrings.rasterFunctions.enumLabels.localBitwiseLeftShift
            },
            {
                key: 14,
                label: functionStrings.rasterFunctions.enumLabels.localBitwiseOr
            },
            {
                key: 15,
                label: functionStrings.rasterFunctions.enumLabels.localBitwiseRightShift
            },
            {
                key: 16,
                label: functionStrings.rasterFunctions.enumLabels.localBitwiseXor
            },
            {
                key: 17,
                label: functionStrings.rasterFunctions.enumLabels.localBooleanAnd
            },
            {
                key: 19,
                label: functionStrings.rasterFunctions.enumLabels.localBooleanOr
            },
            {
                key: 20,
                label: functionStrings.rasterFunctions.enumLabels.localBooleanXor
            },
            {
                key: 23,
                label: functionStrings.rasterFunctions.enumLabels.localDivide
            },
            {
                key: 24,
                label: functionStrings.rasterFunctions.enumLabels.localEqualTo
            },
            {
                key: 28,
                label: functionStrings.rasterFunctions.enumLabels.localGreaterThan
            },
            {
                key: 29,
                label: functionStrings.rasterFunctions.enumLabels.localGreaterThanEqual
            },
            {
                key: 33,
                label: functionStrings.rasterFunctions.enumLabels.localLessThan
            },
            {
                key: 34,
                label: functionStrings.rasterFunctions.enumLabels.localLessThanEqual
            },
            {
                key: 44,
                label: functionStrings.rasterFunctions.enumLabels.localMod
            },
            {
                key: 46,
                label: functionStrings.rasterFunctions.enumLabels.localNotEqual
            },
            {
                key: 61,
                label: functionStrings.rasterFunctions.enumLabels.localATan2
            },
            {
                key: 50,
                label: functionStrings.rasterFunctions.enumLabels.localSetNull
            }
        ],
        cellStatisticsTypes: [
            {
                key: 38,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMajority
            },
            {
                key: 39,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMax
            },
            {
                key: 40,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMean
            },
            {
                key: 41,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMedian
            },
            {
                key: 42,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMin
            },
            {
                key: 43,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMinority
            },
            {
                key: 47,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsRange
            },
            {
                key: 54,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsStdDev
            },
            {
                key: 55,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsSum
            },
            {
                key: 58,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsVariety
            },
            {
                key: 66,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMajorityIgnoreND
            },
            {
                key: 67,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMaxIgnoreND
            },
            {
                key: 68,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMeanIgnoreND
            },
            {
                key: 69,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMedianIgnoreND
            },
            {
                key: 70,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMinIgnoreND
            },
            {
                key: 71,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMinorityIgnoreND
            },
            {
                key: 72,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsRangeIgnoreND
            },
            {
                key: 73,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsStdDevIgnoreND
            },
            {
                key: 74,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsSumIgnoreND
            },
            {
                key: 75,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsVarietyIgnoreND
            },
            {
                key: 93,
                label: functionStrings.rasterFunctions.enumLabels.percentile
            },
            {
                key: 94,
                label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsTypePercentileIgnoreND
            }
        ],
        remapDefinitionTypes: [
            {
                key: false,
                label: functionStrings.rasterFunctions.enumLabels.remapDefTypeList
            }
        ],
        remapTableTypes: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.remapTableTypeSimple
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.remapTableTypeDynamic
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.remapTableTypeReassignment
            }
        ],
        gpsaDistanceMethods: [
            {
                key: "PLANAR",
                label: functionStrings.rasterFunctions.enumLabels.planar
            },
            {
                key: "GEODESIC",
                label: functionStrings.rasterFunctions.enumLabels.geodesic
            }
        ],
        geometricCorrectionMethods: [
            {
                key: false,
                label: functionStrings.rasterFunctions.enumLabels.geomCorrectionByConstZ
            },
            {
                key: true,
                label: functionStrings.rasterFunctions.enumLabels.geomCorrectionByDEM
            }
        ],
        esriRadarCalibrations: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.radarCalibBetaNought
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.radarCalibSigmaNought
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.radarCalibGammaNought
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.none
            }
        ],
        esriSpeckleFilterTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.speckleFilterTypeLee
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.speckleFilterTypeEnhancedLee
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.speckleFilterTypeFrost
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.speckleFilterTypeKuan
            }
        ],
        esriSpeckleFilterKernelTypes: [
            {
                key: 0,
                label: "3x3"
            },
            {
                key: 1,
                label: "5x5"
            },
            {
                key: 2,
                label: "7x7"
            },
            {
                key: 3,
                label: "9x9"
            },
            {
                key: 4,
                label: "11x11"
            }
        ],
        esriSpeckleNoiseModelTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.speckleNoiseModelMul
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.speckleNoiseModelAdd
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.speckleNoiseModelAddnMul
            }
        ],
        esriMosaicOperatorTypes: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeFirst
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeLast
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMin
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMax
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMean
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeBlend
            }
        ],
        gpsaNibbleValues: [
            {
                key: "ALL_VALUES",
                label: functionStrings.rasterFunctions.enumLabels.yes
            },
            {
                key: "DATA_ONLY",
                label: functionStrings.rasterFunctions.enumLabels.no
            }
        ],
        gpsaNibbleNoData: [
            {
                key: "PROCESS_NODATA",
                label: functionStrings.rasterFunctions.enumLabels.yes
            },
            {
                key: "PRESERVE_NODATA",
                label: functionStrings.rasterFunctions.enumLabels.no
            }
        ],
        esriSwathInterpolationMethods: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataNearest
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataBilinear
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningLinear
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningNaturalNeighbor
            }
        ],
        gpsaOutputDataType: [
            {
                key: "FLOAT",
                label: functionStrings.rasterFunctions.enumLabels.localFloat
            },
            {
                key: "INTEGER",
                label: functionStrings.rasterFunctions.enumLabels.integer
            }
        ],
        gpsaFlowDirectionType: [
            {
                key: "D8",
                label: functionStrings.rasterFunctions.enumLabels.rfxD8
            },
            {
                key: "MFD",
                label: functionStrings.rasterFunctions.enumLabels.rfxMFD
            },
            {
                key: "Dinf",
                label: functionStrings.rasterFunctions.enumLabels.dinf
            }
        ],
        gpsaForceFlow: [
            {
                key: "FORCE",
                label: functionStrings.rasterFunctions.enumLabels.yes
            },
            {
                key: "NORMAL",
                label: functionStrings.rasterFunctions.enumLabels.no
            }
        ],
        gpsaFlowDistanceType: [
            {
                key: "VERTICAL",
                label: functionStrings.rasterFunctions.enumLabels.vertical
            },
            {
                key: "HORIZONTAL",
                label: functionStrings.rasterFunctions.enumLabels.horizontal
            }
        ],
        gpsaTravelDirections: [
            {
                key: "FROM_SOURCE",
                label: functionStrings.rasterFunctions.enumLabels.fromSource
            },
            {
                key: "TO_SOURCE",
                label: functionStrings.rasterFunctions.enumLabels.toSource
            }
        ],
        colorspaceConversionTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.colorspaceConversionRgbToHsv
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.colorspaceConversionHsvToRgb
            }
        ],
        pansharpeningTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeIHS
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeBrovey
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeEsri
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeMean
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeGramSchmidt
            }
        ],
        esriGAFocalStatisticsTypes: [
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.mean
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.majority
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.maximum
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.median
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.minimum
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.minority
            },
            {
                key: 12,
                label: functionStrings.rasterFunctions.enumLabels.percentile
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.range
            },
            {
                key: 8,
                label: functionStrings.rasterFunctions.enumLabels.stdDeviation
            },
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.sum
            },
            {
                key: 10,
                label: functionStrings.rasterFunctions.enumLabels.variety
            }
        ],
        esriFocalNeighborhoodTypes: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.rectangleNeighborhood
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.circleNeighborhood
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.annulusNeighborhood
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.wedgeNeighborhood
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.irregularNeighborhood
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.weightNeighborhood
            }
        ],
        gpsaNumberNeighborCells: [
            {
                key: "FOUR",
                label: functionStrings.rasterFunctions.enumLabels.four
            },
            {
                key: "EIGHT",
                label: functionStrings.rasterFunctions.enumLabels.eight
            }
        ],
        gpsaZoneConnectivity: [
            {
                key: "WITHIN",
                label: functionStrings.rasterFunctions.enumLabels.within
            },
            {
                key: "CROSS",
                label: functionStrings.rasterFunctions.enumLabels.cross
            }
        ],
        gpsaAddLink: [
            {
                key: "ADD_LINK",
                label: functionStrings.rasterFunctions.enumLabels.addLink
            },
            {
                key: "NO_LINK",
                label: functionStrings.rasterFunctions.enumLabels.noLink
            }
        ],
        gpsaFlowDistanceStatsType: [
            {
                key: "MINIMUM",
                label: functionStrings.rasterFunctions.enumLabels.minimum
            },
            {
                key: "WEIGHTED_MEAN",
                label: functionStrings.rasterFunctions.enumLabels.weightedMean
            },
            {
                key: "MAXIMUM",
                label: functionStrings.rasterFunctions.enumLabels.maximum
            }
        ],
        boolean: [
            {
                key: "true",
                label: functionStrings.rasterFunctions.enumLabels.yes
            },
            {
                key: "false",
                label: functionStrings.rasterFunctions.enumLabels.no
            }
        ],
        esriTransposeBitPatterns: [
            {
                key: "ls8qcbp_Cirrus",
                label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternCirrus
            },
            {
                key: "ls8qcbp_Cloud",
                label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternCloud
            },
            {
                key: "ls8qcbp_CloudShadow",
                label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternCloudShadow
            },
            {
                key: "ls8qcbp_DesignatedFill",
                label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternDesignatedFill
            },
            {
                key: "ls8qcbp_DroppedFrame",
                label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternDroppedFrame
            },
            {
                key: "ls8qcbp_SnowIce",
                label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternSnowIce
            },
            {
                key: "ls8qcbp_TerrainOcclusion",
                label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternTerrainOcclusion
            },
            {
                key: "ls8qcbp_Vegetation",
                label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternVegetation
            },
            {
                key: "ls8qcbp_Water",
                label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternWater
            },
            {
                key: "qcbp_UserDefined",
                label: functionStrings.rasterFunctions.enumLabels.userDefined
            }
        ],
        gpsaDirectionMeasurementType: [
            {
                key: "DOWNSTREAM",
                label: functionStrings.rasterFunctions.enumLabels.downStream
            },
            {
                key: "UPSTREAM",
                label: functionStrings.rasterFunctions.enumLabels.upStream
            }
        ],
        gpsaOrderMethodType: [
            {
                key: "STRAHLER",
                label: functionStrings.rasterFunctions.enumLabels.strahler
            },
            {
                key: "SHREVE",
                label: functionStrings.rasterFunctions.enumLabels.shreve
            }
        ],
        gpsaProcessAsMultidimensionalOptions: [
            {
                key: "CURRENT_SLICE",
                label: functionStrings.rasterFunctions.enumLabels.currentSlice
            },
            {
                key: "ALL_SLICES",
                label: functionStrings.rasterFunctions.enumLabels.allSlices
            }
        ],
        gpsaExpandMethod: [
            {
                key: "DISTANCE",
                label: functionStrings.rasterFunctions.enumLabels.expandDistance
            },
            {
                key: "MORPHOLOGICAL",
                label: functionStrings.rasterFunctions.enumLabels.expandMorphological
            }
        ],
        gpsaSortType: [
            {
                key: "NO_SORT",
                label: functionStrings.rasterFunctions.enumLabels.noSort
            },
            {
                key: "DESCEND",
                label: functionStrings.rasterFunctions.enumLabels.descend
            },
            {
                key: "ASCEND",
                label: functionStrings.rasterFunctions.enumLabels.ascend
            }
        ],
        spectralProfileFileTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.spectralProfileFile
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.trainingFeatureFile
            }
        ],
        randomDistributionType: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeUniform
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeUniformInteger
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeNormal
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeExponential
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypePoisson
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeGamma
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeBinomial
            },
            {
                key: 8,
                label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeGeometric
            },
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeNegativeBinomial
            }
        ],
        randomGeneratorType: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.randomGeneratorTypeStandardCRand
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.randomGeneratorTypeAlgorithmACM599
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.randomGeneratorTypeMersenneTwister
            }
        ],
        gpsaAggregationTypes: [
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.sumName
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.maximum
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.mean
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.medainName
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.minimum
            }
        ],
        esriTrendAnalysisTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.trendLinear
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.trendHarmonic
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.trendPolynomial
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.trendMannKendall
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.trendSeasonalKendall
            }
        ],
        dimensionDefinitionTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.dimensionByValue
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.dimensionByInterval
            }
        ],
        esriMdimTimeIntervalUnits: [
            {
                key: "HOURS",
                label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsHours
            },
            {
                key: "DAYS",
                label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsDays
            },
            {
                key: "WEEKS",
                label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsWeeks
            },
            {
                key: "MONTHS",
                label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsMonths
            },
            {
                key: "YEARS",
                label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsYears
            }
        ],
        esriCycleUnits: [
            {
                key: "DAYS",
                label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsDays
            },
            {
                key: "YEARS",
                label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsYears
            }
        ],
        esriTrendSeasonlPeriod: [
            {
                key: "DAYS",
                label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsDays
            },
            {
                key: "MONTHS",
                label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsMonths
            }
        ],
        esriSegmentDate: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.segmentBeginning
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.segmentEnd
            }
        ],
        esriDetectChangeTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.latestChange
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.earliestChange
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.largestChange
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.numberOfChanges
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.longestChange
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.shortestChange
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.fastestChange
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.slowestChange
            }
        ],
        esriChangeDirection: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.allChanges
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.increaseChanges
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.decreaseChanges
            }
        ],
        esriRenderTrendTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.trendLinear
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.trendHarmonic
            }
        ],
        esriComputeChangeMethods: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodDifference
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodRelativeDifference
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodCategorical
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodMultispectralEuclideanDistance
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodMultispectralAngularDifference
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodMultispectralAxisWithBiggestChange
            }
        ],
        esriComputeChangeKeepMethods: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeKeepAll
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeKeepChangedOnly
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeKeepUnchangedOnly
            }
        ],
        esriComputeChangeUseColorMethods: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeUseColorAverage
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeUseColorFrom
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeUseColorTo
            }
        ],
        esriResolveOverlapMethods: [
            {
                key: "MT_FIRST",
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeFirst
            },
            {
                key: "MT_LAST",
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeLast
            },
            {
                key: "MT_MIN",
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMin
            },
            {
                key: "MT_MAX",
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMax
            },
            {
                key: "MT_MEAN",
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMean
            },
            {
                key: "MT_SUM",
                label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeSum
            }
        ],
        sensorTypes: [
            {
                key: "UNKNOWN",
                label: functionStrings.rasterFunctions.enumLabels.unknown
            }
        ],
        esriGANoDataHandling: [
            {
                key: -1,
                label: functionStrings.rasterFunctions.enumLabels.dimensionalMovingIgnoreNoData
            },
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.dimensionalMovingPropagateNoData
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.dimensionalMovingFillOnlyNoData
            }
        ],
        esriGADimensionalMovingStatisticsTypes: [
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.mean
            },
            {
                key: 13,
                label: functionStrings.rasterFunctions.enumLabels.circularMean
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.majority
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.maximum
            },
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.median
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.minimum
            },
            {
                key: 12,
                label: functionStrings.rasterFunctions.enumLabels.percentile
            }
        ],
        esriInterpolateByDimMethods: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.factorFunctionLinear
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataNearest
            }
        ],
        esriFlattenCalibrationTypes: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.radarCalibGammaNought
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.radarCalibSigmaNought
            }
        ],
        bandCompositeMethods: [
            {
                key: 0,
                label: functionStrings.rasterFunctions.enumLabels.bandComboByNames
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.bandComboByIDs
            }
        ],
        gpsaCircularCalculation: [
            {
                key: "ARITHMETIC",
                label: functionStrings.rasterFunctions.enumLabels.arithmeticName
            },
            {
                key: "CIRCULAR",
                label: functionStrings.rasterFunctions.enumLabels.circularName
            }
        ],
        esriSurfaceParameterType: [
            {
                key: 4,
                label: functionStrings.rasterFunctions.enumLabels.slopeName
            },
            {
                key: 5,
                label: functionStrings.rasterFunctions.enumLabels.aspectName
            },
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.meanCurvature
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.profileCurvature
            },
            {
                key: 3,
                label: functionStrings.rasterFunctions.enumLabels.tangentialCurvature
            },
            {
                key: 6,
                label: functionStrings.rasterFunctions.enumLabels.planCurvature
            },
            {
                key: 7,
                label: functionStrings.rasterFunctions.enumLabels.contourGeodesicTorsion
            },
            {
                key: 8,
                label: functionStrings.rasterFunctions.enumLabels.gaussianCurvature
            },
            {
                key: 9,
                label: functionStrings.rasterFunctions.enumLabels.casoratiCurvature
            }
        ],
        esriLocalSurfaceType: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.localSurfaceTypeQuadratic
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.localSurfaceTypeBiquadratic
            }
        ],
        outputSlopeType: [
            {
                key: 1,
                label: functionStrings.rasterFunctions.enumLabels.slopeTypeDegree
            },
            {
                key: 2,
                label: functionStrings.rasterFunctions.enumLabels.slopeTypePercentRise
            }
        ],
        esriLeastCostThresholdMethod: [
            {
                key: "NO_THRESHOLD",
                label: functionStrings.rasterFunctions.enumLabels.thresholdNoThreshold
            },
            {
                key: "PERCENT_OF_LEAST_COST",
                label: functionStrings.rasterFunctions.enumLabels.thresholdPercentLeastCost
            },
            {
                key: "ACCUMULATIVE_COST",
                label: functionStrings.rasterFunctions.enumLabels.thresholdAccumulativeCost
            }
        ]
    };
    return enums;
}
const tranposeInputBitInfo = {
    ls8qcbp_Cirrus: [12, 13],
    ls8qcbp_Cloud: [14, 15],
    ls8qcbp_CloudShadow: [6, 7],
    ls8qcbp_DesignatedFill: [0],
    ls8qcbp_DroppedFrame: [1],
    ls8qcbp_SnowIce: [10, 11],
    ls8qcbp_TerrainOcclusion: [2],
    ls8qcbp_Vegetation: [8, 9],
    ls8qcbp_Water: [4, 5]
};
const kernelTypesInfo = {
    255: {
        rows: 0,
        columns: 0
    },
    0: {
        rows: 3,
        columns: 3,
        value: [-1, -1, -1, 2, 2, 2, -1, -1, -1]
    },
    1: {
        rows: 3,
        columns: 3,
        value: [-1, 2, -1, -1, 2, -1, -1, 2, -1]
    },
    2: {
        rows: 3,
        columns: 3,
        value: [2, -1, -1, -1, 2, -1, -1, -1, 2]
    },
    3: {
        rows: 3,
        columns: 3,
        value: [-1, -1, 2, -1, 2, -1, 2, -1, -1]
    },
    4: {
        rows: 3,
        columns: 3,
        value: [-1, -2, -1, 0, 0, 0, 1, 2, 1]
    },
    5: {
        rows: 3,
        columns: 3,
        value: [-1, 0, 1, -2, 0, 2, -1, 0, 1]
    },
    6: {
        rows: 3,
        columns: 3,
        value: [1, 0, -1, 2, 0, -2, 1, 0, -1]
    },
    7: {
        rows: 3,
        columns: 3,
        value: [1, 2, 1, 0, 0, 0, -1, -2, -1]
    },
    8: {
        rows: 3,
        columns: 3,
        value: [0, -1, -2, 1, 0, -1, 2, 1, 0]
    },
    9: {
        rows: 3,
        columns: 3,
        value: [-2, -1, 0, -1, 0, 1, 0, 1, 2]
    },
    10: {
        rows: 3,
        columns: 3,
        value: [
            0.111111111111111, 0.111111111111111, 0.111111111111111, 0.111111111111111, 0.111111111111111, 0.111111111111111,
            0.111111111111111, 0.111111111111111, 0.111111111111111
        ]
    },
    11: {
        rows: 3,
        columns: 3,
        value: [1, 2, 1, 2, 4, 2, 1, 2, 1]
    },
    12: {
        rows: 5,
        columns: 5,
        value: [1, 1, 1, 1, 1, 1, 4, 4, 4, 1, 1, 4, 12, 4, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1]
    },
    13: {
        rows: 3,
        columns: 3,
        value: [-1, -1, -1, -1, 9, -1, -1, -1, -1]
    },
    14: {
        rows: 5,
        columns: 5,
        value: [-1, -3, -4, -3, -1, -3, 0, 6, 0, -3, -4, 6, 21, 6, -4, -3, 0, 6, 0, -3, -1, -3, -4, -3, -1]
    },
    15: {
        rows: 3,
        columns: 3,
        value: [0, -1, 0, -1, 4, -1, 0, -1, 0]
    },
    16: {
        rows: 5,
        columns: 5,
        value: [0, 0, -1, 0, 0, 0, -1, -2, -1, 0, -1, -2, 17, -2, -1, 0, -1, -2, -1, 0, 0, 0, -1, 0, 0]
    },
    17: {
        rows: 3,
        columns: 3,
        value: [-1, -2, -1, 0, 0, 0, 1, 2, 1]
    },
    18: {
        rows: 3,
        columns: 3,
        value: [-1, 0, 1, -2, 0, 2, -1, 0, 1]
    },
    19: {
        rows: 3,
        columns: 3,
        value: [0, -0.25, 0, -0.25, 2, -0.25, 0, -0.25, 0]
    },
    20: {
        rows: 3,
        columns: 3,
        value: [-0.25, -0.25, -0.25, -0.25, 3, -0.25, -0.25, -0.25, -0.25]
    },
    21: {
        rows: 3,
        columns: 3,
        value: [-0.627, 0.352, -0.627, 0.352, 2.923, 0.352, -0.627, 0.352, -0.627]
    }
};
async function getCategoryReference(locale) {
    const functionStrings = await fetchCommonStrings(locale);
    const categoryReference = {
        rfxArgCat_SourceCharacteristics: {
            title: functionStrings.rasterFunctions.categoryLabels.sourceCharacteristics,
            visible: false
        },
        rfxArgCat_NeighborhoodSettings: {
            title: functionStrings.rasterFunctions.categoryLabels.neighborhoodSettings,
            visible: true
        },
        rfxArgCat_FocalStatistics: {
            title: functionStrings.rasterFunctions.categoryLabels.statistics,
            visible: true
        },
        rfxArgCat_Statistics: {
            title: functionStrings.rasterFunctions.categoryLabels.statistics,
            visible: false
        },
        rfxArgCat_Gamma: {
            title: functionStrings.rasterFunctions.categoryLabels.gamma,
            visible: false
        },
        rfxArgCat_ViewshedParameters: {
            title: functionStrings.rasterFunctions.categoryLabels.viewshedParameters,
            visible: false
        },
        rfxArgCat_ObserverParameters: {
            title: functionStrings.rasterFunctions.categoryLabels.observerParameters,
            visible: false
        },
        rfxArgCat_IrregularDataInterpolation: {
            title: functionStrings.rasterFunctions.categoryLabels.irregularDataInterpolation,
            visible: false
        },
        rfxArgCat_ModelStatistics: {
            title: functionStrings.rasterFunctions.categoryLabels.modelStatistics,
            visible: true
        },
        rfxArgCat_AggregationDef: {
            title: functionStrings.rasterFunctions.categoryLabels.aggregationDef,
            visible: true
        },
        rfxArgCat_FilterByAttributes: {
            title: functionStrings.rasterFunctions.categoryLabels.filterByAttributes,
            visible: true
        },
        rfxArgCat_Percentile: {
            title: functionStrings.rasterFunctions.categoryLabels.percentileName,
            visible: true
        },
        rfxArgCat_RasterInfo: {
            title: functionStrings.rasterFunctions.categoryLabels.rasterInfo,
            visible: true
        },
        rfxArgCat_Extent: {
            title: functionStrings.rasterFunctions.categoryLabels.extent,
            visible: true
        },
        rfxArgCat_SpatialReference: {
            title: functionStrings.rasterFunctions.categoryLabels.spatialReference,
            visible: true
        }
    };
    return categoryReference;
}
const helpDoc = {
    rfxNameSpecialCases: [
        {
            key: "threshold",
            value: "BinaryThresholding"
        },
        {
            key: "contrastbrightness",
            value: "ContrastAndBrightness"
        },
        {
            key: "statisticshistogram",
            value: "StatisticsAndHistogram"
        },
        {
            key: "pansharpening",
            value: "Pansharpen"
        },
        {
            key: "colorspaceconversion",
            value: "ColorModelConversion"
        },
        {
            key: "rasterizefeatureclass",
            value: "RasterizeFeatures"
        },
        {
            key: "reflectance",
            value: "ApparentReflectance"
        },
        {
            key: "s1radiometriccalibration",
            value: "Sentinel-1RadiometricCalibration"
        },
        {
            key: "s1thermalnoiseremoval",
            value: "Sentinel-1ThermalNoiseRemoval"
        },
        {
            key: "table",
            value: "AttributeTable"
        },
        {
            key: "extractband",
            value: "ExtractBands"
        },
        {
            key: "bufferedraster",
            value: "Buffered"
        },
        {
            key: "compositeband",
            value: "CompositeBands"
        },
        {
            key: "shortestpath",
            value: "LeastCostPath"
        },
        {
            key: "eucdirection",
            value: "EuclideanDirection"
        },
        {
            key: "pathbacklink",
            value: "PathDistanceBackLink"
        },
        {
            key: "pathallocation",
            value: "PathDistanceAllocation"
        },
        {
            key: "eucdistance",
            value: "EuclideanDistance"
        },
        {
            key: "eucallocation",
            value: "EuclideanAllocation"
        },
        {
            key: "rastercalculator",
            value: "Calculator"
        },
        {
            key: "focal",
            value: "FocalStatistics"
        },
        {
            key: "viewshed2",
            value: "Viewshed"
        }
    ],
    localFunctionOperations: [
        {
            key: 4,
            label: "Square Root"
        },
        {
            key: 6,
            label: "ACos"
        },
        {
            key: 7,
            label: "ASin"
        },
        {
            key: 8,
            label: "ATan"
        },
        {
            key: 9,
            label: "ATanH"
        },
        {
            key: 10,
            label: "Abs"
        },
        {
            key: 13,
            label: "Bitwise Not"
        },
        {
            key: 18,
            label: "Boolean Not"
        },
        {
            key: 21,
            label: "Cos"
        },
        {
            key: 22,
            label: "CosH"
        },
        {
            key: 25,
            label: "Exp"
        },
        {
            key: 26,
            label: "Exp10"
        },
        {
            key: 27,
            label: "Exp2"
        },
        {
            key: 30,
            label: "Int"
        },
        {
            key: 31,
            label: "Is Null"
        },
        {
            key: 32,
            label: "Float"
        },
        {
            key: 35,
            label: "Ln"
        },
        {
            key: 36,
            label: "Log10"
        },
        {
            key: 37,
            label: "Log2"
        },
        {
            key: 45,
            label: "Negate"
        },
        {
            key: 48,
            label: "Round Down"
        },
        {
            key: 49,
            label: "Round Up"
        },
        {
            key: 51,
            label: "Sin"
        },
        {
            key: 52,
            label: "SinH"
        },
        {
            key: 53,
            label: "Square"
        },
        {
            key: 56,
            label: "Tan"
        },
        {
            key: 57,
            label: "TanH"
        },
        {
            key: 59,
            label: "ACosH"
        },
        {
            key: 60,
            label: "ASinH"
        },
        {
            key: 1,
            label: "Plus"
        },
        {
            key: 2,
            label: "Minus"
        },
        {
            key: 3,
            label: "Times"
        },
        {
            key: 5,
            label: "Power"
        },
        {
            key: 11,
            label: "Bitwise And"
        },
        {
            key: 12,
            label: "Bitwise Left Shift"
        },
        {
            key: 14,
            label: "Bitwise Or"
        },
        {
            key: 15,
            label: "Bitwise Right Shift"
        },
        {
            key: 16,
            label: "Bitwise Xor"
        },
        {
            key: 17,
            label: "Boolean And"
        },
        {
            key: 19,
            label: "Boolean Or"
        },
        {
            key: 20,
            label: "Boolean Xor"
        },
        {
            key: 23,
            label: "Divide"
        },
        {
            key: 24,
            label: "Equal To"
        },
        {
            key: 28,
            label: "Greater Than"
        },
        {
            key: 29,
            label: "Greater Than Equal"
        },
        {
            key: 33,
            label: "Less Than"
        },
        {
            key: 34,
            label: "Less Than Equal"
        },
        {
            key: 44,
            label: "Mod"
        },
        {
            key: 46,
            label: "Not Equal"
        },
        {
            key: 61,
            label: "ATan2"
        },
        {
            key: 50,
            label: "Set Null"
        },
        {
            key: 78,
            label: "Con"
        }
    ]
};
async function getGlobalFunctions(locale) {
    const functionStrings = await fetchCommonStrings(locale);
    const { rasterFunctions: { rfx } } = functionStrings;
    return [
        rfx.boundaryCleanName,
        rfx.corridorName,
        rfx.costAllocationName,
        rfx.costBackLinkName,
        rfx.costDistanceName,
        rfx.costPathName,
        rfx.distanceAccumulationName,
        rfx.distanceAllocationName,
        rfx.eucAllocationName,
        rfx.eucBackDirectionName,
        rfx.eucDistanceName,
        rfx.eucDirectionName,
        rfx.expandName,
        rfx.fillName,
        rfx.flowAccumulationName,
        rfx.flowDirectionName,
        rfx.flowDistanceName,
        rfx.flowLengthName,
        rfx.kernelDensityName,
        rfx.leastCostCorridorName,
        rfx.shortestPathName,
        rfx.nibbleName,
        rfx.optimalPathAsRasterName,
        rfx.pathDistanceName,
        rfx.pathBackLinkName,
        rfx.pathAllocationName,
        rfx.regionGroupName,
        rfx.shrinkName,
        rfx.sinkName,
        rfx.snapPourPointName,
        rfx.streamLinkName,
        rfx.streamOrderName,
        rfx.viewshed2Name,
        rfx.watershedName,
        rfx.zonalStatisticsName
    ];
}



//# sourceMappingURL=resources-27c66f5c.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,