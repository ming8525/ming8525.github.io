"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-db71c7"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.id-a6c022ac.js":
/*!**********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/help-texts.id-a6c022ac.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   rfxArgsHelpTexts: () => (/* binding */ rfxArgsHelpTexts)
/* harmony export */ });
const rfxArgsHelpTexts = {
	"@@Abs_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Abs_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Abs_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Abs_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Abs_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Abs_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Abs_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Abs_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Abs_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Abs_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Abs_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Abs_Raster_tag0@@": "Raster input yang digunakan untuk menghitung nilai absolut.",
	"@@ACos_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@ACos_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@ACos_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@ACos_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@ACos_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@ACos_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@ACos_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@ACos_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@ACos_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@ACos_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@ACos_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@ACos_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai kosinus inversi.",
	"@@ACosH_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@ACosH_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@ACosH_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@ACosH_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@ACosH_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@ACosH_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@ACosH_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@ACosH_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@ACosH_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@ACosH_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@ACosH_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@ACosH_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai kosinus hiperbolik inversi.",
	"@@Apparent-Reflectance_Albedo_tag0@@": "Hasil fungsi Pantulan yang Jelas juga dapat dinyatakan sebagai albedo, yang merupakan persentase dari energi yang tersedia, yang tercermin oleh permukaan planet. Data albedo digunakan oleh pengguna ilmiah untuk pemodelan kompleks dan aplikasi pengindraan jauh teknis.",
	"@@Apparent-Reflectance_Albedo_tag1@@": "Tidak dicentang--Fungsi mengembalikan nilai pantulan yang jelas. Ini adalah default.",
	"@@Apparent-Reflectance_Albedo_tag2@@": "Dicentang--Fungsi mengembalikan nilai titik mengambang 32-bit, yang paling umum berada dalam kisaran 0,0 hingga 1,0. Tidak ada pemotongan data yang dilakukan jika opsi ini dipilih.",
	"@@Apparent-Reflectance_Albedo_tag3@@": "Karena jenis data output untuk albedo adalah titik mengambang, Anda harus secara eksplisit mengatur opsi yang dipilih <strong>Jenis Piksel Output</strong> ke 32-bit float atau 64-bit double. Parameter <strong>Jenis Piksel Output</strong> ditemukan di tab <strong>Umum</strong> dalam fungsi raster <strong>Refleksi yang Nampak</strong>. Jika <strong>Jenis Piksel Output</strong> tidak disetel dengan benar untuk opsi <strong>Albedo</strong>, nilai yang dihasilkan akan menjadi tidak valid dan diberi nilai 0.",
	"@@Apparent-Reflectance_Offset_tag0@@": "Nilai albedo berskala secara opsional dapat memiliki nilai offset:",
	"@@Apparent-Reflectance_Offset_tag1@@": "Untuk jenis data tidak bertanda 16-bit, offset skala default adalah 5.000.",
	"@@Apparent-Reflectance_Offset_tag2@@": "Untuk jenis data tidak bertanda 8-bit, offset skala default adalah 0.",
	"@@Apparent-Reflectance_Offset_tag3@@": "Tidak ada penskalaan yang diterapkan bila output adalah albedo.",
	"@@Apparent-Reflectance_Radiance-Gains-and-Bias-Values-per-Band_tag0@@": "Anda dapat mengatur atau mengedit nilai ini untuk setiap band secara manual. Informasi yang sesuai dapat dibaca dari metadata produk raster input.",
	"@@Apparent-Reflectance_Raster_tag0@@": "Produk raster tempat pantulan yang jelas akan diterapkan.",
	"@@Apparent-Reflectance_Scale-Factor_tag0@@": "Nilai output pantulan Anda yang jelas dapat dinyatakan sebagai bilangan bulat. Faktor penskalaan dikalikan dengan albedo untuk mengubah semua nilai titik mengambang menjadi nilai bilangan bulat.",
	"@@Apparent-Reflectance_Scale-Factor_tag1@@": "Jika faktor skala adalah ${0} atau tidak ditentukan, penskalaan default akan diterapkan tergantung jenis piksel data input:",
	"@@Apparent-Reflectance_Scale-Factor_tag2@@": "Untuk jenis data tidak bertanda 16-bit, faktor skala default adalah 50.000.",
	"@@Apparent-Reflectance_Scale-Factor_tag3@@": "Untuk jenis data tidak bertanda 8-bit, faktor skala default adalah 255.",
	"@@Apparent-Reflectance_Scale-Factor_tag4@@": "Faktor penskalaan selalu diterapkan ketika output merupakan pantulan yang jelas. Tidak ada penskalaan yang diterapkan bila output adalah albedo.",
	"@@Apparent-Reflectance_Sun-Elevation_tag0@@": "Ini adalah nilai elevasi matahari, dinyatakan dalam derajat. Ini akan diisi oleh sistem jika informasi yang sesuai dapat dibaca dari metadata. Anda dapat mengatur atau mengedit nilai ini secara manual.",
	"@@ArgStatistics_Max_tag0@@": "Nilai maksimum yang Anda tetapkan adalah nilai tertinggi yang sama dengan atau kurang dari akhir durasi.",
	"@@ArgStatistics_Max_tag1@@": "Input ini hanya berlaku bila metode ini adalah Durasi.",
	"@@ArgStatistics_Method_tag0@@": "Pilih metode statistik untuk menghitung:",
	"@@ArgStatistics_Method_tag1@@": "Arg Maks--Argumen maksimum, yang mengembalikan ${Band index} dengan piksel yang diberikan mencapai nilai minimum dari semua band. Semua band raster dari setiap raster input diberi indeks band inkremental berbasis 0, yang pertama kali diurutkan sesuai dengan indeks raster input, kemudian sesuai urutan band relatif dalam setiap raster input.",
	"@@ArgStatistics_Method_tag2@@": "Arg Median--Argumen median, yang mengembalikan ${Band index} dengan piksel yang diberikan mencapai nilai median nilai dari semua band.",
	"@@ArgStatistics_Method_tag3@@": "Arg Min--Argumen minimum, yang mengembalikan ${Band index} dengan piksel yang diberikan mencapai nilai minimumnya dari semua band.",
	"@@ArgStatistics_Method_tag4@@": "Durasi--Metode Durasi menemukan elemen berurutan terpanjang dalam array, tempat setiap elemen memiliki nilai yang lebih besar dari atau sama dengan <strong>Min</strong> dan kurang atau sama dengan <strong>Maks</strong>, lalu mengembalikan panjangnya.",
	"@@ArgStatistics_Min_tag0@@": "Nilai minimum yang Anda tetapkan adalah nilai terendah yang sama dengan atau lebih besar dari awal durasi.",
	"@@ArgStatistics_Min_tag1@@": "Input ini hanya berlaku bila metode ini adalah Durasi.",
	"@@ArgStatistics_Rasters_tag0@@": "Raster input tempat Anda akan menjalankan berbagai metode statistik.",
	"@@ArgStatistics_Undefined-Class_tag0@@": "Input konstan yang akan dikembalikan saat tidak ada maksimum, minimum, atau median yang pasti dapat dicapai. Skenario yang paling umum adalah saat nilai maksimum atau minimum terjadi lebih dari satu kali di antara nilai-nilai dari semua band. Nilai default untuk konstanta yang belum ditentukan adalah 100.",
	"@@ArgStatistics_Undefined-Class_tag1@@": "Kelas yang tidak ditentukan hanya berlaku ketika metode ini <strong>Rata-rataMaks</strong>, <strong>Rata-rataMin</strong>, atau <strong>Rata-rataMedian</strong>.",
	"@@ArgStatistics_ignorenodata_tag0@@": "Menunjukkan apakah nilai NoData diabaikan di hitungan statistik.",
	"@@ArgStatistics_ignorenodata_tag1@@": "Dicentang--Analisis akan mencakup semua piksel yang valid di raster input dan mengabaikan piksel NoData apa pun.",
	"@@ArgStatistics_ignorenodata_tag2@@": "Tidak Dicentang--Analisis akan menghasilkan NoData jika ada nilai NoData pada piksel tersebut di raster input. Ini adalah default.",
	"@@Arithmetic_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Arithmetic_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Arithmetic_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Arithmetic_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Arithmetic_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Arithmetic_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Arithmetic_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Arithmetic_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Arithmetic_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Arithmetic_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Arithmetic_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Arithmetic_Operation_tag0@@": "Operasi aritmatika yang akan dilakukan antara dua raster input.",
	"@@Arithmetic_Operation_tag1@@": "Opsinya sebagai berikut:",
	"@@Arithmetic_Operation_tag2@@": "<strong>Bagi</strong>--Memberikan output hasil yang dapat dibagi antara nilai-nilai piksel yang sesuai untuk setiap raster.",
	"@@Arithmetic_Operation_tag4@@": "<strong>Minus</strong>--Memberikan output perbedaan antara nilai-nilai piksel yang sesuai untuk setiap raster. Ini dapat digunakan untuk menghitung deteksi perubahan.",
	"@@Arithmetic_Operation_tag6@@": "<strong>Mode</strong>--Memberikan output nilai piksel dari semua piksel yang bertumpang tindih yang paling sering terjadi. Misalnya, jika ada enam band dalam satu raster, akan ada enam piksel yang bertumpang tindih. Untuk nilai 4, 5, 6, 4, 7, 9, nilai mode adalah 4.",
	"@@Arithmetic_Operation_tag8@@": "<strong>Kali</strong>--Memberikan output produk nilai piksel yang sesuai untuk setiap raster. Ini dapat digunakan untuk melakukan beberapa fungsi biaya.",
	"@@Arithmetic_Operation_tag10@@": "<strong>Plus</strong>--Memberikan output jumlah semua nilai piksel yang sesuai untuk setiap raster.",
	"@@Arithmetic_Operation_tag12@@": "<strong>Kekuatan</strong>--Memberikan output produk dari nilai piksel yang sesuai dinaikkan ke kekuatan raster input atau skalar.",
	"@@Arithmetic_Raster_tag0@@": "Set data raster input pertama.",
	"@@Arithmetic_Raster2_tag0@@": "Set data raster input kedua.",
	"@@ASin_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@ASin_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@ASin_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@ASin_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@ASin_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@ASin_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@ASin_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@ASin_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@ASin_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@ASin_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@ASin_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@ASin_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai sinus inversi.",
	"@@ASinH_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@ASinH_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@ASinH_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@ASinH_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@ASinH_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@ASinH_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@ASinH_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@ASinH_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@ASinH_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@ASinH_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@ASinH_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@ASinH_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai sinus hiperbolik inversi.",
	"@@Aspect_Raster_tag0@@": "Input DEM digunakan untuk menurunkan set data aspek.",
	"@@Aspect-Slope_Raster_tag0@@": "Input DEM.",
	"@@Aspect-Slope_Z-Factor_tag0@@": "Faktor penskalaan digunakan untuk mengubah nilai elevasi untuk dua tujuan berikut:",
	"@@Aspect-Slope_Z-Factor_tag1@@": "Mengubah satuan elevasi (seperti meter atau kaki) menjadi satuan koordinasi horizontal dari set data, yang mungkin berupa kaki, meter, atau derajat.",
	"@@Aspect-Slope_Z-Factor_tag2@@": "Menambahkan pembesaran vertikal untuk efek visual.",
	"@@ATan_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@ATan_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@ATan_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@ATan_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@ATan_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@ATan_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@ATan_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@ATan_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@ATan_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@ATan_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@ATan_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@ATan_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai tangen inversi.",
	"@@ATan2_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@ATan2_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@ATan2_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@ATan2_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@ATan2_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@ATan2_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@ATan2_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@ATan2_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@ATan2_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@ATan2_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@ATan2_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@ATan2_Raster_tag0@@": "Input yang menentukan pembilang, atau nilai y, yang akan digunakan saat menghitung tangen inversi.",
	"@@ATan2_Raster2_tag0@@": "Input yang menentukan penyebut, atau nilai x, yang akan digunakan saat menghitung tangen inversi.",
	"@@ATanH_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@ATanH_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@ATanH_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@ATanH_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@ATanH_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@ATanH_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@ATanH_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@ATanH_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@ATanH_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@ATanH_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@ATanH_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@ATanH_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai tangen hiperbolik inversi.",
	"@@Attribute-Table_Raster_tag0@@": "Raster input.",
	"@@Attribute-Table_Table-Type_tag0@@": "Tabel atribut input bisa dimasukkan menggunakan jenis <strong>Manual</strong> tempat Anda menetapkan nama kelas dan warna untuk setiap nilai, atau Anda bisa mereferensikan tabel yang ada, yang berasal dari file ${.dbf}.",
	"@@Band-Arithmetic_Band-Indexes_tag0@@": "Tentukan rumus aritmatika band Anda jika Anda memilih <strong>Ditentukan Pengguna</strong> untuk <strong>Metode</strong> Anda.",
	"@@Band-Arithmetic_Band-Indexes_tag5@@": "Jika Anda memilih indeks yang telah ditentukan untuk <strong>Metode</strong> Anda, tentukan band yang tepat dari set data raster input Anda yang sesuai dengan indeks.",
	"@@Band-Arithmetic_Method_tag0@@": "Jenis algoritme aritmatika band yang ingin Anda gunakan. Anda dapat menentukan algoritme khusus, atau memilih indeks yang telah ditentukan sebelumnya.",
	"@@Band-Arithmetic_Method_tag1@@": "<strong>BAI</strong>--Indeks Area Bekas Terbakar",
	"@@Band-Arithmetic_Method_tag2@@": "<strong>CIg</strong>--Indeks Klorofil - Hijau",
	"@@Band-Arithmetic_Method_tag3@@": "<strong>CIre</strong>--Indeks Klorofil - Tepian Merah",
	"@@Band-Arithmetic_Method_tag4@@": "<strong>Mineral Lumpur</strong>--Rasio Mineral Lumpur",
	"@@Band-Arithmetic_Method_tag5@@": "<strong>EVI</strong>--Indeks Vegetasi yang Ditingkatkan",
	"@@Band-Arithmetic_Method_tag6@@": "<strong>Mineral Besi</strong>--Rasio Mineral Besi",
	"@@Band-Arithmetic_Method_tag7@@": "<strong>GEMI</strong>--Indeks Pemantauan Lingkungan Global",
	"@@Band-Arithmetic_Method_tag8@@": "<strong>GNDVI</strong>--Indeks Vegetasi Perbedaan Dinormalisasi Hijau",
	"@@Band-Arithmetic_Method_tag9@@": "<strong>GVI (Landsat TM)</strong>--TM Landsat Indeks Vegetasi Hijau",
	"@@Band-Arithmetic_Method_tag10@@": "<strong>Oksida Besi</strong>--Rasio Oksida Besi",
	"@@Band-Arithmetic_Method_tag11@@": "<strong>MNDWI</strong>--Indeks Air Perbedaan Dinormalisasi yang Disesuaikan",
	"@@Band-Arithmetic_Method_tag12@@": "<strong>MTVI2</strong>--Indeks Vegetasi Triangulasi yang Disesuaikan (iterasi kedua)",
	"@@Band-Arithmetic_Method_tag13@@": "<strong>SAVI yang Disesuaikan</strong>--Indeks Vegetasi Disesuaikan Tanah",
	"@@Band-Arithmetic_Method_tag14@@": "<strong>NBR</strong>--Indeks Rasio Terbakar yang Dinormalisasi",
	"@@Band-Arithmetic_Method_tag15@@": "<strong>NDBI</strong>--Indeks Peningkatan Perbedaan yang Dinormalisasi",
	"@@Band-Arithmetic_Method_tag16@@": "<strong>NDMI</strong>--Indeks Kelembapan Perbedaan yang Dinormalisasi",
	"@@Band-Arithmetic_Method_tag17@@": "<strong>NDSI</strong>--Indeks Salju Perbedaan yang Dinormalisasi",
	"@@Band-Arithmetic_Method_tag18@@": "<strong>NDVI</strong>--Indeks Vegetasi Perbedaan yang Dinormalisasi",
	"@@Band-Arithmetic_Method_tag19@@": "<strong>NDVIre</strong>--Indeks Vegetasi Perbedaan yang Dinormalisasi Tepian Merah",
	"@@Band-Arithmetic_Method_tag20@@": "<strong>NDWI</strong>--Indeks Air Perbedaan yang Dinormalisasi",
	"@@Band-Arithmetic_Method_tag21@@": "<strong>PVI</strong>--Indeks Vegetasi Tegak Lurus",
	"@@Band-Arithmetic_Method_tag22@@": "<strong>RTVICore</strong>--Indeks Vegetasi Triangulasi Tepian Merah",
	"@@Band-Arithmetic_Method_tag23@@": "<strong>SAVI</strong>--Indeks Vegetasi Disesuaikan Tanah",
	"@@Band-Arithmetic_Method_tag24@@": "<strong>SR</strong>--Rasio Sederhana",
	"@@Band-Arithmetic_Method_tag25@@": "<strong>SRre</strong>--Rasio Sederhana Tepian Merah",
	"@@Band-Arithmetic_Method_tag26@@": "<strong>Formula Sultan</strong>--Formula Sultan",
	"@@Band-Arithmetic_Method_tag27@@": "<strong>SAVI yang Ditransformasi</strong>--Indeks Vegetasi Disesuaikan Tanah yang Ditransformasi",
	"@@Band-Arithmetic_Method_tag28@@": "<strong>Ditentukan Pengguna</strong>--Memungkinkan Anda menentukan ekspresi aritmatika band kustom.",
	"@@Band-Arithmetic_Method_tag29@@": "<strong>VARI</strong>--Indeks Resisten yang Terlihat secara Atmosferik",
	"@@Band-Arithmetic_Method_tag30@@": "<strong>WNDWI</strong>--Indeks Air Perbedaan Dinormalisasi Berbobot",
	"@@Band-Arithmetic_Raster_tag0@@": "Raster input.",
	"@@Binary-Thresholding_Raster_tag0@@": "Raster input.",
	"@@Bitwise-And_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Bitwise-And_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Bitwise-And_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Bitwise-And_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Bitwise-And_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Bitwise-And_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Bitwise-And_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Bitwise-And_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-And_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Bitwise-And_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-And_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-And_Raster_tag0@@": "Input pertama yang akan digunakan dalam operasi bitwise ini.",
	"@@Bitwise-And_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Bitwise-And_Raster2_tag0@@": "Input kedua yang akan digunakan dalam operasi bitwise ini.",
	"@@Bitwise-And_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Bitwise-Left-Shift_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Bitwise-Left-Shift_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Bitwise-Left-Shift_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Left-Shift_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Bitwise-Left-Shift_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Left-Shift_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Left-Shift_Raster_tag0@@": "Input di mana pergeseran akan dilakukan.",
	"@@Bitwise-Left-Shift_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Bitwise-Left-Shift_Raster2_tag0@@": "Input yang mendefinisikan jumlah posisi untuk menggeser bit.",
	"@@Bitwise-Left-Shift_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Bitwise-Not_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Bitwise-Not_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Bitwise-Not_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Bitwise-Not_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Bitwise-Not_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Bitwise-Not_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Bitwise-Not_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Bitwise-Not_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Not_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Bitwise-Not_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Not_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Not_Raster_tag0@@": "Raster input di mana operasi Bitwise Not (pelengkap) akan dilakukan.",
	"@@Bitwise-Or_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Bitwise-Or_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Bitwise-Or_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Bitwise-Or_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Bitwise-Or_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Bitwise-Or_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Bitwise-Or_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Bitwise-Or_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Or_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Bitwise-Or_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Or_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Or_Raster_tag0@@": "Input pertama yang akan digunakan dalam operasi bitwise ini.",
	"@@Bitwise-Or_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Bitwise-Or_Raster2_tag0@@": "Input kedua yang akan digunakan dalam operasi bitwise ini.",
	"@@Bitwise-Or_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Bitwise-Right-Shift_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Bitwise-Right-Shift_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Bitwise-Right-Shift_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Right-Shift_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Bitwise-Right-Shift_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Right-Shift_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Right-Shift_Raster_tag0@@": "Input di mana pergeseran akan dilakukan.",
	"@@Bitwise-Right-Shift_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Bitwise-Right-Shift_Raster2_tag0@@": "Input yang mendefinisikan jumlah posisi untuk menggeser bit.",
	"@@Bitwise-Right-Shift_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Bitwise-Xor_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Bitwise-Xor_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Bitwise-Xor_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Bitwise-Xor_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Bitwise-Xor_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Bitwise-Xor_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Bitwise-Xor_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Bitwise-Xor_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Xor_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Bitwise-Xor_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Xor_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Bitwise-Xor_Raster_tag0@@": "Input pertama yang akan digunakan dalam operasi bitwise ini.",
	"@@Bitwise-Xor_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Bitwise-Xor_Raster2_tag0@@": "Input kedua yang akan digunakan dalam operasi bitwise ini.",
	"@@Bitwise-Xor_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Boolean-and_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Boolean-and_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Boolean-and_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Boolean-and_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Boolean-and_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Boolean-and_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Boolean-and_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Boolean-and_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-and_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Boolean-and_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-and_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-and_Raster_tag0@@": "Input pertama yang akan digunakan dalam operasi Boolean ini.",
	"@@Boolean-and_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Boolean-and_Raster2_tag0@@": "Input kedua yang akan digunakan dalam operasi Boolean ini.",
	"@@Boolean-and_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Boolean-Not_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Boolean-Not_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Boolean-Not_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Boolean-Not_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Boolean-Not_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Boolean-Not_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Boolean-Not_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Boolean-Not_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-Not_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Boolean-Not_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-Not_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-Not_Raster_tag0@@": "Input pertama yang akan digunakan dalam operasi Boolean ini.",
	"@@Boolean-Or_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Boolean-Or_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Boolean-Or_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Boolean-Or_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Boolean-Or_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Boolean-Or_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Boolean-Or_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Boolean-Or_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-Or_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Boolean-Or_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-Or_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-Or_Raster_tag0@@": "Input pertama yang akan digunakan dalam operasi Boolean ini.",
	"@@Boolean-Or_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Boolean-Or_Raster2_tag0@@": "Input kedua yang akan digunakan dalam operasi Boolean ini.",
	"@@Boolean-Or_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Boolean-Xor_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Boolean-Xor_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Boolean-Xor_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Boolean-Xor_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Boolean-Xor_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Boolean-Xor_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Boolean-Xor_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Boolean-Xor_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-Xor_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Boolean-Xor_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-Xor_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Boolean-Xor_Raster_tag0@@": "Input pertama yang akan digunakan dalam operasi Boolean ini.",
	"@@Boolean-Xor_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Boolean-Xor_Raster2_tag0@@": "Input kedua yang akan digunakan dalam operasi Boolean ini.",
	"@@Boolean-Xor_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Buffered_Raster_tag0@@": "Raster input yang akan disimpan dalam memori.",
	"@@Calculator_Cellsize-Type_tag0@@": "Ukuran sel yang digunakan untuk membuat raster output.",
	"@@Calculator_Cellsize-Type_tag1@@": "Anda dapat memilih ukuran sel output dari opsi berikut di daftar tarik-turun:",
	"@@Calculator_Cellsize-Type_tag2@@": "<strong>Pertama dari</strong>--Ukuran sel variabel raster pertama.",
	"@@Calculator_Cellsize-Type_tag4@@": "<strong>Min dari</strong>--Ukuran sel minimum raster input.",
	"@@Calculator_Cellsize-Type_tag6@@": "<strong>Maks dari</strong>--Ukuran sel maksimum raster input.",
	"@@Calculator_Cellsize-Type_tag8@@": "<strong>Rata-rata dari</strong>--Ukuran sel rata-rata raster input.",
	"@@Calculator_Cellsize-Type_tag10@@": "<strong>Terakhir dari</strong>--Ukuran sel variabel raster terakhir.",
	"@@Calculator_Cellsize-Type_tag12@@": "Pilihan defaultnya adalah <strong>Maks dari</strong>.",
	"@@Calculator_Expression_tag0@@": "Buat ekspresi aljabar untuk melakukan analisis spasial pada raster input.",
	"@@Calculator_Expression_tag1@@": "Semua fungsi matematika yang ada dapat dipanggil untuk membuat ekspresi. Operator yang tersedia tercantum di bawah ini.",
	"@@Calculator_Expression_tag2@@": "Operasi Aritmatika",
	"@@Calculator_Expression_tag3@@": "Tambahan: +",
	"@@Calculator_Expression_tag4@@": "Pembagian: /",
	"@@Calculator_Expression_tag5@@": "Modulo: %",
	"@@Calculator_Expression_tag6@@": "Perkalian: *",
	"@@Calculator_Expression_tag7@@": "Pangkat: **",
	"@@Calculator_Expression_tag8@@": "Pengurangan: -",
	"@@Calculator_Expression_tag9@@": "Operasi Boolean",
	"@@Calculator_Expression_tag10@@": "Boolean Dan: &&",
	"@@Calculator_Expression_tag11@@": "Boolean Atau: ||",
	"@@Calculator_Expression_tag12@@": "Operasi Relasi",
	"@@Calculator_Expression_tag13@@": "Sama dengan: ==",
	"@@Calculator_Expression_tag14@@": "Lebih dari: >",
	"@@Calculator_Expression_tag15@@": "Lebih dari atau Sama dengan: >=",
	"@@Calculator_Expression_tag16@@": "Kurang dari: <",
	"@@Calculator_Expression_tag17@@": "Kurang dari atau Sama dengan: <=",
	"@@Calculator_Expression_tag18@@": "Tidak Sama dengan: !=",
	"@@Calculator_Expression_tag19@@": "Operasi Tambahan",
	"@@Calculator_Expression_tag20@@": "Minimal dua raster berdasarkan per-piksel: min (a, b)",
	"@@Calculator_Expression_tag21@@": "Maksimal dua raster berdasarkan per-piksel: maks (a, b)",
	"@@Calculator_Expression_tag22@@": "Berikut ini beberapa contoh ekspresi:",
	"@@Calculator_Expression_tag23@@": "Pernyataan Bersyarat Sederhana: dalam sebuah raster (dilambangkan dengan T), temukan nilai elevasi di atas 4.000 kaki dan berikan nilai 1 pada area ini dan semua area lainnya nilai 0.",
	"@@Calculator_Expression_tag24@@": "Con (T> 4000, 1, 0)",
	"@@Calculator_Expression_tag25@@": "Pernyataan Bersyarat Bersarang: temukan area dengan kemiringan (dilambangkan dengan b1)) di bawah 10 derajat dan NDVI (dilambangkan dengan b2) di atas 0,5, dan beri nilai 1 pada area ini. Untuk semua area lainnya, tetapkan nilai 2 jika kemiringan di atas 10 derajat dan elevasi (dilambangkan oleh b3) lebih dari 2.500 kaki. Semua area lainnya diberi nilai 3.",
	"@@Calculator_Expression_tag26@@": "Con((b1 < 10 && b2 > .5, 1, Con(b1 > 10 && b3 > 2500, 2, 3)))",
	"@@Calculator_extenttype_tag0@@": "<p>Pilih jangkauan yang akan digunakan di raster output:</p><ul><li><p>Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.</p></li><li>Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah defaultnya.</li><li>Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.</li><li>Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.</li></ul>",
	"@@Calculator_Raster-Variables_tag0@@": "Nama variabel yang ditentukan pengguna dan raster input.",
	"@@Classify_Input-Definition-File_tag0@@": "File Definisi Pengklasifikasi Esri (${.ecd}) input yang berisi statistik dan informasi klasifikasi lainnya untuk set data tertentu, pengklasifikasi, dan atribut yang dipilih.",
	"@@Classify_Raster_tag0@@": "Set data raster yang ingin Anda klasifikasikan.",
	"@@Classify_Raster2_tag0@@": "Set data raster pendukung tambahan untuk dimasukkan ke dalam pengklasifikasi, seperti gambar tersegmentasi, gambar multispektral, atau data elevasi, yang digunakan untuk menghasilkan definisi klasifikasi yang lebih kuat untuk set data Anda. Set data raster untuk parameter ini harus cocok dengan yang digunakan untuk membuat file Definisi Pengklasifikasi Esri.",
	"@@Clip_Clipping-Geometry-or-Raster_tag0@@": "Berikut ini dapat digunakan untuk menentukan jangkauan pemotongan:",
	"@@Clip_Clipping-Geometry-or-Raster_tag1@@": "<strong>Raster Pemotongan</strong>--Jangkauan raster pemotongan",
	"@@Clip_Clipping-Geometry-or-Raster_tag3@@": "<strong>Jangkauan Kustom</strong>--Koordinat minimum dan maksimum X dan Y",
	"@@Clip_Clipping-Geometry-or-Raster_tag5@@": "<strong>Jangkauan Peta Saat Ini</strong>--Jangkauan tampilan peta saat ini",
	"@@Clip_Clipping-Raster_tag0@@": "Layer raster yang digunakan untuk memotong.",
	"@@Clip_Clipping-Type_tag0@@": "Tentukan apakah Anda ingin mempertahankan area di dalam atau di luar geometri potong Anda.",
	"@@Clip_Clipping-Type_tag1@@": "<strong>Potong di Dalam</strong>--Citra di dalam jangkauan potong akan dihapus.",
	"@@Clip_Clipping-Type_tag3@@": "<strong>Potong di Luar</strong>--Citra di luar jangkauan potong akan dihapus.",
	"@@Clip_Custom-Extent_tag0@@": "Tentukan empat koordinat yang menentukan jangkauan kotak batas yang digunakan untuk memotong raster.",
	"@@Clip_Output-Extent_tag0@@": "Koordinat x dan y dari jangkauan pemotongan saat ini.",
	"@@Clip_Output-Extent_tag1@@": "Tombol <strong>Rekam Jangkauan Peta Saat Ini</strong> menggunakan jangkauan tampilan untuk peta yang aktif.",
	"@@Clip_Raster_tag0@@": "Layer raster input.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag0@@": "Saat dipilih, data dipotong sesuai dengan geometri kelas fitur yang ditentukan.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag1@@": "Tidak dicentang--Fungsi ini menggunakan geometri potong yang ditentukan oleh <strong>Persegi Empat</strong>. Ini nilai defaultnya.",
	"@@Clip_Use-Input-Features-for-Clipping-Geometry_tag4@@": "Dicentang--Fungsi menggunakan geometri potong yang ditentukan oleh kelas fitur.",
	"@@Color-Model-Conversion_Conversion-Type_tag0@@": "Jenis konversi warna yang akan dilakukan:",
	"@@Color-Model-Conversion_Conversion-Type_tag1@@": "HSV ke RGB",
	"@@Color-Model-Conversion_Conversion-Type_tag2@@": "RGB ke HSV",
	"@@Color-Model-Conversion_Raster_tag0@@": "Raster input.",
	"@@Colormap_Color-Ramp_tag0@@": "Pilih rangkaian warna yang sudah ada sebelumnya.",
	"@@Colormap_Color-Scheme-Type_tag0@@": "Pilih jenis skema warna untuk merender raster input Anda",
	"@@Colormap_Color-Scheme-Type_tag1@@": "Rangkaian Warna--Gunakan rangkaian warna.",
	"@@Colormap_Color-Scheme-Type_tag2@@": "Peta Warna--Gunakan peta warna yang sudah ada sebelumnya.",
	"@@Colormap_Colormap_tag0@@": "Peta warna default berikut tersedia dari daftar tarik-turun:",
	"@@Colormap_Colormap_tag1@@": "Elevasi--Peta warna yang secara bertahap berubah dari cyan ke ungu ke hitam.",
	"@@Colormap_Colormap_tag2@@": "Abu-abu--Peta warna yang secara bertahap berubah dari hitam ke putih.",
	"@@Colormap_Colormap_tag7@@": "Bayangan Gunung--Peta warna skala abu-abu untuk menghasilkan representasi 3D permukaan medan, dengan posisi relatif matahari diperhitungkan untuk membuat shading pada gambar.",
	"@@Colormap_Colormap_tag3@@": "NDVI--Peta warna untuk memvisualisasikan vegetasi. Nilai yang mendekati nol berwarna biru. Nilai rendah berwarna cokelat. Kemudian warna secara bertahap berubah dari merah, ke oranye, ke kuning, ke hijau, dan ke hitam saat indeks vegetasi berubah dari rendah ke tinggi.",
	"@@Colormap_Colormap_tag4@@": "NDVI2--Peta warna untuk memvisualisasikan vegetasi. Nilai rendah bergeser dari putih ke hijau. Kemudian warnanya berubah dari abu-abu, ke ungu, ke lembayung, ke biru gelap, dan ke hitam saat indeks vegetasi berubah dari rendah ke tinggi.",
	"@@Colormap_Colormap_tag5@@": "NDVI3--Peta warna untuk memvisualisasikan vegetasi. Nilai yang mendekati nol berwarna biru. Kemudian warna secara bertahap berubah dari merah, ke oranye, dan ke hijau saat indeks vegetasi berubah dari rendah ke tinggi.",
	"@@Colormap_Colormap_tag6@@": "Acak--Peta warna acak.",
	"@@Colormap_Raster_tag0@@": "Raster input.",
	"@@Colormap-To-RGB_Raster_tag0@@": "Raster warna peta input.",
	"@@Complex_Raster_tag0@@": "Raster input.",
	"@@Composite-Bands_Rasters_tag0@@": "Gunakan daftar drop-down atau tombol <strong>Telusuri</strong> untuk memilih input raster.",
	"@@Composite-Bands_cellsizetype_tag0@@": "<p>Pilih ukuran sel mana yang akan digunakan di raster output.Jika semua sel input memilliki ukuran sama, maka semua opsi akan menghasilkan hasil yang sama.</p><ul><li>Pertama Dari--Gunakan ukuran sel pertama dari raster input.</li><li>Minimal Dari--Gunakan ukuran sel terkecil dari semua raster input.</li><li>Maksimal Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah defaultnya.</li><li>Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.</li><li>Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.</li></ul>",
	"@@Con-function_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Con-function_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Con-function_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Con-function_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Con-function_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Con-function_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Con_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Con_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Con_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Con_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Con_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Con_False-Raster_tag0@@": "Input yang nilainya akan digunakan sebagai nilai piksel output jika kondisinya salah. Ini bisa berupa bilangan bulat, raster titik mengambang, atau nilai konstan.",
	"@@Con_Raster_tag0@@": "Raster input yang merepresentasikan hasil Boolean dari fungsi raster matematika logis. Nilai akan berupa 1 (untuk benar) atau 0 (untuk salah). Ini bisa berupa integer atau raster titik mengambang.",
	"@@Con_True-Raster_tag0@@": "Input yang nilainya akan digunakan sebagai nilai piksel output jika kondisinya benar. Ini bisa berupa bilangan bulat, raster titik mengambang, atau nilai konstan.",
	"@@Constant_Constant_tag0@@": "Nilai konstanta yang akan ditambahkan ke raster virtual.",
	"@@Constant_Raster-Info_tag0@@": "Gunakan tombol <strong>Muat raster template</strong> untuk memuat template dari direktori atau portal.",
	"@@Contour_Adaptive-Smoothing_tag0@@": "Jumlah penghalusan yang akan diterapkan ke garis kontur. Nilai default adalah 2,5.",
	"@@Contour_Adaptive-Smoothing_tag1@@": "Nilai yang lebih rendah menghasilkan garis kontur dengan lebih banyak granular dan kurang halus, sedangkan nilai yang lebih tinggi menghasilkan garis kontur dengan lebih banyak penghalusan yang tampak kurang bergerigi.",
	"@@Contour_Contour-Interval_tag0@@": "Perbedaan ketinggian antara garis kontur.",
	"@@Contour_Contour-Interval_tag1@@": "Interval kontur kecil digunakan di daerah yang relatif datar, sementara interval kontur yang lebih besar digunakan di medan pegunungan atau variabel.",
	"@@Contour_Contour-Type_tag0@@": "Jenis kontur yang akan dibuat:",
	"@@Contour_Contour-Type_tag1@@": "<strong>Isian kontur</strong>--Mengisi area antara setiap garis kontur dengan nilai elevasi terkuantisasi.",
	"@@Contour_Contour-Type_tag3@@": "<strong>Garis kontur</strong>--Menggabungkan titik elevasi yang sama untuk membuat garis yang merepresentasikan elevasi konstan.",
	"@@Contour_Contour-Type_tag5@@": "<strong>Perhalus permukaan saja</strong>--Menghaluskan layer elevasi input tetapi tidak menghasilkan kontur.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag0@@": "Kontur indeks, yang direpresentasikan sebagai garis tebal.",
	"@@Contour_Nth-Contour-Line-In-Bold_tag1@@": "Nilai defaultnya adalah 5; dengan demikian, garis kontur ke-5 tebal.",
	"@@Contour_Number-Of-Contours_tag0@@": "Jumlah kontur yang akan dihasilkan pada layar. Ini secara dinamis menyesuaikan interval kontur agar sesuai dengan medan pada tampilan dengan tetap mempertahankan interval standar seperti 1, 5, 10, dan seterusnya.",
	"@@Contour_Raster_tag0@@": "Set data elevasi raster band tunggal.",
	"@@Contour_Z-Base_tag0@@": "Nilai kontur dasar. Kontur dihasilkan di atas dan di bawah nilai ini sesuai kebutuhan untuk mencakup seluruh rentang nilai raster input. Default adalah 0.",
	"@@Contour_Z-Base_tag1@@": "Nilai 0 seringkali merepresentasikan permukaan laut rata-rata, tergantung set data elevasi sumber.",
	"@@Contour_Z-Factor_tag0@@": "Faktor konversi satuan yang digunakan saat membuat kontur. Nilai default adalah 1.",
	"@@Contour_Z-Factor_tag1@@": "Garis kontur dihasilkan berdasarkan nilai-z dalam raster input, yang seringkali diukur dalam satuan meter atau kaki. Dengan nilai default sebesar 1, kontur akan berada di unit yang sama dengan nilai-z dari raster input. Untuk membuat kontur di unit yang berbeda dari nilai z, tetapkan nilai yang sesuai untuk faktor z. Perhatikan bahwa satuan tanah x, y dan z permukaan tidak perlu konsisten untuk alat ini.",
	"@@Contour_Z-Factor_tag2@@": "Misalnya, jika nilai elevasi di raster input Anda dalam kaki, tetapi Anda ingin kontur dihasilkan berdasarkan satuan meter, atur faktor z menjadi 0,3048 (karena 1 kaki = 0,3048 meter).",
	"@@Contrast-and-Brightness_Brightness-Offset_tag0@@": "Sesuaikan kecerahan layer raster.",
	"@@Contrast-and-Brightness_Brightness-Offset_tag1@@": "Anda dapat menggunakan panel geser untuk memodifikasi offset kecerahan, atau Anda dapat mengetikkan nilai.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag0@@": "Sesuaikan kontras layer raster.",
	"@@Contrast-and-Brightness_Contrast-Offset_tag1@@": "Anda dapat menggunakan bilah geser untuk memodifikasi offset kontras, atau Anda dapat mengetikkan nilai.",
	"@@Contrast-and-Brightness_Raster_tag0@@": "Raster input untuk mengedit kecerahan dan kontras.",
	"@@Convolution_kernel_tag0@@": "<p>Tabel ini menunjukkan cara setiap piksel akan ditimbang dalam proses penyaringan. Tabel ini dapat diedit jika Anda memilih<strong>Ditentukan Pengguna</strong>sebagai<strong>Jenis</strong>.</p>",
	"@@Convolution_Raster_tag0@@": "Set data raster input.",
	"@@Convolution_Type_tag0@@": "Pilih jenis pemfilteran yang ingin Anda lakukan. Ada beberapa opsi untuk mempertajam, mengaburkan, dan mendeteksi tepi, atau Anda dapat menentukan filter berbasis kernel sendiri",
	"@@Corridor_Distance-Raster-1_tag0@@": "Raster jarak input pertama. Ini harus berupa akumulasi jarak biaya output dari Jarak Biaya atau Jarak Jalur.",
	"@@Corridor_Distance-Raster-2_tag0@@": "Raster jarak input kedua. Ini harus berupa akumulasi jarak biaya output dari Jarak Biaya atau Jarak Jalur.",
	"@@Cos_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Cos_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Cos_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Cos_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Cos_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Cos_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Cos_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Cos_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Cos_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Cos_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Cos_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Cos_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai-nilai kosinus.",
	"@@CosH_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@CosH_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@CosH_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@CosH_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@CosH_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@CosH_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@CosH_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@CosH_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@CosH_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@CosH_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@CosH_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@CosH_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai-nilai kosinus hiperbolik.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Parameter ini mensimulasikan peningkatan upaya untuk mengatasi biaya seiring dengan meningkatnya biaya akumulatif. Ini digunakan untuk model kelelahan wisatawan. Biaya akumulatif yang tumbuh untuk mencapai sel dikalikan dengan tingkat resistansi dan ditambahkan ke biaya untuk pindah ke sel berikutnya.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "Ini versi modifikasi dari rumus suku bunga majemuk yang digunakan untuk menghitung biaya bergerak melalui sel yang jelas. Ketika nilai tingkat resistansi meningkat, ini meningkatkan biaya sel yang dikunjungi di masa mendatang. Semakin besar tingkat resistansi, semakin tinggi biaya untuk mencapai sel berikutnya, yang ditambah untuk setiap gerakan selanjutnya. Karena tingkat resistansi serupa dengan tingkat gabungan dan umumnya nilai-nilai biaya akumulatif sangat besar, tingkat resitansi yang kecil disarankan, seperti 0,005 atau bahkan lebih kecil, tergantung nilai-nilai biaya akumulatif.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Cost-Allocation_Accumulative-Cost-Resistance-Rate_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Cost-Allocation_Capacity_tag0@@": "Menentukan kapasitas biaya untuk wisatawan untuk suatu sumber. Perhitungan biaya berlanjut untuk setiap sumber hingga kapasitas yang ditentukan tercapai.",
	"@@Cost-Allocation_Capacity_tag1@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Cost-Allocation_Capacity_tag2@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Cost-Allocation_Cost-Raster_tag0@@": "Sebuah raster input yang diperlukan menentukan biaya atau impedansi untuk bergerak secara planimetri melalui setiap sel. Nilai di setiap lokasi sel merepresentasikan jarak biaya-per-unit untuk bergerak melalui sel. Setiap nilai lokasi sel dikalikan dengan resolusi sel, sementara juga mengkompensasi gerakan diagonal untuk mendapatkan biaya total melewati sel.",
	"@@Cost-Allocation_Cost-Raster_tag1@@": "Nilai <strong>Raster Biaya</strong> bisa berupa bilangan bulat atau titik mengambang, tetapi tidak bisa negatif atau nol.",
	"@@Cost-Allocation_Maximum-Distance_tag0@@": "Ambang batas yang tidak dapat dilampaui nilai biaya akumulatif. Jika jarak biaya akumulatif melebihi nilai ini, nilai output untuk lokasi sel adalah ${NoData}. Jarak maksimum menentukan jangkauan untuk jarak biaya akumulatif dihitung. Jarak default adalah untuk jangkauan raster output.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Pengganda yang akan diterapkan pada nilai biaya.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Parameter ini memungkinkan untuk mengontrol mode perjalanan atau besarannya pada sumber. Semakin besar pengganda, semakin besar biaya untuk bergerak melalui setiap sel.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Nilai harus lebih besar dari nol. Default adalah 1.",
	"@@Cost-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Cost-Allocation_Source-Field_tag0@@": "Kolom yang digunakan untuk menetapkan nilai ke lokasi sumber. Kolom tersebut harus berupa jenis bilangan bulat. Jika <strong>Raster Nilai</strong> telah ditetapkan, nilai dalam input tersebut akan diutamakan daripada pengaturan apa pun untuk <strong>Kolom Sumber</strong>.",
	"@@Cost-Allocation_Source-Raster_tag0@@": "Raster input yang diperlukan dari lokasi sumber.",
	"@@Cost-Allocation_Source-Raster_tag1@@": "Ini adalah raster yang mengidentifikasi sel atau lokasi tempat jarak biaya terakumulasi terendah untuk setiap lokasi sel output dihitung.",
	"@@Cost-Allocation_Source-Raster_tag2@@": "Jika input <strong>Raster Sumber</strong> adalah titik mengambang, <strong>Raster Nilai</strong> harus ditetapkan, dan itu harus bilangan bulat. <strong>Raster Nilai</strong> akan diutamakan daripada pengaturan apa pun untuk <strong>Kolom Sumber</strong>.",
	"@@Cost-Allocation_Start-Cost_tag0@@": "Biaya awal untuk memulai perhitungan biaya. Parameter ini memungkinkan untuk spesifikasi biaya tetap yang terkait dengan sumber. Alih-alih memulai dengan biaya 0, algoritme biaya akan dimulai dengan nilai yang ditentukan.",
	"@@Cost-Allocation_Start-Cost_tag1@@": "Nilai harus nol atau lebih besar. Default adalah 0.",
	"@@Cost-Allocation_Travel-Direction_tag0@@": "Menentukan arah wisatawan saat menerapkan tingkat resistansi sumber dan biaya awal sumber.",
	"@@Cost-Allocation_Travel-Direction_tag1@@": "<strong>Dari Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari sumber input dan pindah ke sel non-sumber. Ini nilai defaultnya.",
	"@@Cost-Allocation_Travel-Direction_tag3@@": "<strong>Ke Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari setiap sel non-sumber dan kembali ke sumber input.",
	"@@Cost-Allocation_Travel-Direction_tag5@@": "Tetapkan kata kunci <strong>Dari Sumber</strong> atau <strong>Ke Sumber</strong>, yang akan diterapkan ke semua sumber, atau tentukan kolom di <strong>Raster Sumber</strong> yang berisi kata kunci untuk mengidentifikasi arah perjalanan untuk setiap sumber. Kolom tersebut harus berisi string ${FROM_SOURCE} atau ${TO_SOURCE}.",
	"@@Cost-Allocation_Value-Raster_tag0@@": "Raster bilangan bulat input yang mengidentifikasi nilai zona yang akan digunakan untuk setiap lokasi sumber input. Untuk setiap sel lokasi sumber, nilai yang ditentukan oleh <strong>Raster Nilai</strong> akan ditetapkan ke semua sel yang dialokasikan ke lokasi sumber untuk komputasi. <strong>Raster Nilai</strong> akan diutamakan daripada pengaturan apa pun untuk <strong>Kolom Sumber</strong>.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Parameter ini mensimulasikan peningkatan upaya untuk mengatasi biaya seiring dengan meningkatnya biaya akumulatif. Ini digunakan untuk model kelelahan wisatawan. Biaya akumulatif yang tumbuh untuk mencapai sel dikalikan dengan tingkat resistansi dan ditambahkan ke biaya untuk pindah ke sel berikutnya.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "Ini versi modifikasi dari rumus suku bunga majemuk yang digunakan untuk menghitung biaya bergerak melalui sel yang jelas. Ketika nilai tingkat resistansi meningkat, ini meningkatkan biaya sel yang dikunjungi di masa mendatang. Semakin besar tingkat resistansi, semakin tinggi biaya untuk mencapai sel berikutnya, yang ditambah untuk setiap gerakan selanjutnya. Karena tingkat resistansi serupa dengan tingkat gabungan dan umumnya nilai-nilai biaya akumulatif sangat besar, tingkat resitansi yang kecil disarankan, seperti 0,005 atau bahkan lebih kecil, tergantung nilai-nilai biaya akumulatif.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Cost-Back-Link_Accumulative-Cost-Resistance-Rate_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Cost-Back-Link_Capacity_tag0@@": "Menentukan kapasitas biaya untuk wisatawan untuk suatu sumber. Perhitungan biaya berlanjut untuk setiap sumber hingga kapasitas yang ditentukan tercapai.",
	"@@Cost-Back-Link_Capacity_tag1@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Cost-Back-Link_Capacity_tag2@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Cost-Back-Link_Cost-Raster_tag0@@": "Sebuah raster input yang diperlukan menentukan biaya atau impedansi untuk bergerak secara planimetri melalui setiap sel. Nilai di setiap lokasi sel merepresentasikan jarak biaya-per-unit untuk bergerak melalui sel. Setiap nilai lokasi sel dikalikan dengan resolusi sel, sementara juga mengkompensasi gerakan diagonal untuk mendapatkan biaya total melewati sel.",
	"@@Cost-Back-Link_Cost-Raster_tag1@@": "Nilai <strong>Raster Biaya</strong> bisa berupa bilangan bulat atau titik mengambang, tetapi tidak bisa negatif atau nol.",
	"@@Cost-Back-Link_Maximum-Distance_tag0@@": "Ambang batas yang tidak dapat dilampaui nilai biaya akumulatif. Jika jarak biaya akumulatif melebihi nilai ini, nilai output untuk lokasi sel adalah NoData. Jarak maksimum menentukan jangkauan untuk jarak biaya akumulatif dihitung. Jarak default adalah untuk jangkauan raster output.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Pengganda yang akan diterapkan pada nilai biaya.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Parameter ini memungkinkan untuk mengontrol mode perjalanan atau besarannya pada sumber. Semakin besar pengganda, semakin besar biaya untuk bergerak melalui setiap sel.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Nilai harus lebih besar dari nol. Default adalah 1.",
	"@@Cost-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Cost-Back-Link_Source-Raster_tag0@@": "Raster input yang diperlukan dari lokasi sumber.",
	"@@Cost-Back-Link_Source-Raster_tag1@@": "Ini adalah raster yang mengidentifikasi sel atau lokasi tempat jarak biaya terakumulasi terendah untuk setiap lokasi sel output dihitung.",
	"@@Cost-Back-Link_Start-Cost_tag0@@": "Biaya awal untuk memulai perhitungan biaya. Parameter ini memungkinkan untuk spesifikasi biaya tetap yang terkait dengan sumber. Alih-alih memulai dengan biaya 0, algoritme biaya akan dimulai dengan nilai yang ditentukan.",
	"@@Cost-Back-Link_Start-Cost_tag1@@": "Nilai harus nol atau lebih besar. Default adalah 0.",
	"@@Cost-Back-Link_Travel-Direction_tag0@@": "Menentukan arah wisatawan saat menerapkan tingkat resistansi sumber dan biaya awal sumber.",
	"@@Cost-Back-Link_Travel-Direction_tag1@@": "<strong>Dari Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari sumber input dan pindah ke sel non-sumber. Ini nilai defaultnya.",
	"@@Cost-Back-Link_Travel-Direction_tag3@@": "<strong>Ke Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari setiap sel non-sumber dan kembali ke sumber input.",
	"@@Cost-Back-Link_Travel-Direction_tag5@@": "Tetapkan kata kunci <strong>Dari Sumber</strong> atau <strong>Ke Sumber</strong>, yang akan diterapkan ke semua sumber, atau tentukan kolom di <strong>Raster Sumber</strong> yang berisi kata kunci untuk mengidentifikasi arah perjalanan untuk setiap sumber. Kolom tersebut harus berisi string ${FROM_SOURCE} atau ${TO_SOURCE}.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Parameter ini mensimulasikan peningkatan upaya untuk mengatasi biaya seiring dengan meningkatnya biaya akumulatif. Ini digunakan untuk model kelelahan wisatawan. Biaya akumulatif yang tumbuh untuk mencapai sel dikalikan dengan tingkat resistansi dan ditambahkan ke biaya untuk pindah ke sel berikutnya.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "Ini versi modifikasi dari rumus suku bunga majemuk yang digunakan untuk menghitung biaya bergerak melalui sel yang jelas. Ketika nilai tingkat resistansi meningkat, ini meningkatkan biaya sel yang dikunjungi di masa mendatang. Semakin besar tingkat resistansi, semakin tinggi biaya untuk mencapai sel berikutnya, yang ditambah untuk setiap gerakan selanjutnya. Karena tingkat resistansi serupa dengan tingkat gabungan dan umumnya nilai-nilai biaya akumulatif sangat besar, tingkat resitansi yang kecil disarankan, seperti 0,005 atau bahkan lebih kecil, tergantung nilai-nilai biaya akumulatif.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Cost-Distance_Accumulative-Cost-Resistance-Rate_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Cost-Distance_Capacity_tag0@@": "Menentukan kapasitas biaya untuk wisatawan untuk suatu sumber. Perhitungan biaya berlanjut untuk setiap sumber hingga kapasitas yang ditentukan tercapai.",
	"@@Cost-Distance_Capacity_tag1@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Cost-Distance_Capacity_tag2@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Cost-Distance_Cost-Raster_tag0@@": "Sebuah raster input yang diperlukan menentukan biaya atau impedansi untuk bergerak secara planimetri melalui setiap sel. Nilai di setiap lokasi sel merepresentasikan jarak biaya-per-unit untuk bergerak melalui sel. Setiap nilai lokasi sel dikalikan dengan resolusi sel, sementara juga mengkompensasi gerakan diagonal untuk mendapatkan biaya total melewati sel.",
	"@@Cost-Distance_Cost-Raster_tag1@@": "Nilai <strong>Raster Biaya</strong> bisa berupa bilangan bulat atau titik mengambang, tetapi tidak bisa negatif atau nol.",
	"@@Cost-Distance_Maximum-Distance_tag0@@": "Ambang batas yang tidak dapat dilampaui nilai biaya akumulatif. Jika jarak biaya akumulatif melebihi nilai ini, nilai output untuk lokasi sel adalah NoData. Jarak maksimum menentukan jangkauan untuk jarak biaya akumulatif dihitung. Jarak default adalah untuk jangkauan raster output.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Pengganda yang akan diterapkan pada nilai biaya.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Parameter ini memungkinkan untuk mengontrol mode perjalanan atau besarannya pada sumber. Semakin besar pengganda, semakin besar biaya untuk bergerak melalui setiap sel.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Nilai harus lebih besar dari nol. Default adalah 1.",
	"@@Cost-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Cost-Distance_Source-Raster_tag0@@": "Raster input yang diperlukan dari lokasi sumber.",
	"@@Cost-Distance_Source-Raster_tag1@@": "Ini adalah raster yang mengidentifikasi sel atau lokasi tempat jarak biaya terakumulasi terendah untuk setiap lokasi sel output dihitung.",
	"@@Cost-Distance_Start-Cost_tag0@@": "Biaya awal untuk memulai perhitungan biaya. Parameter ini memungkinkan untuk spesifikasi biaya tetap yang terkait dengan sumber. Alih-alih memulai dengan biaya 0, algoritme biaya akan dimulai dengan nilai yang ditentukan.",
	"@@Cost-Distance_Start-Cost_tag1@@": "Nilai harus nol atau lebih besar. Default adalah 0.",
	"@@Cost-Distance_Travel-Direction_tag0@@": "Menentukan arah wisatawan saat menerapkan tingkat resistansi sumber dan biaya awal sumber.",
	"@@Cost-Distance_Travel-Direction_tag1@@": "<strong>Dari Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari sumber input dan pindah ke sel non-sumber. Ini nilai defaultnya.",
	"@@Cost-Distance_Travel-Direction_tag3@@": "<strong>Ke Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari setiap sel non-sumber dan kembali ke sumber input.",
	"@@Cost-Distance_Travel-Direction_tag5@@": "Tetapkan kata kunci <strong>Dari Sumber</strong> atau <strong>Ke Sumber</strong>, yang akan diterapkan ke semua sumber, atau tentukan kolom di <strong>Raster Sumber</strong> yang berisi kata kunci untuk mengidentifikasi arah perjalanan untuk setiap sumber. Kolom tersebut harus berisi string ${FROM_SOURCE} atau ${TO_SOURCE}.",
	"@@Curvature_Curvature-Type_tag0@@": "Jenis lengkungan menonjolkan berbagai aspek kemiringan. Ada tiga opsi lengkungan:",
	"@@Curvature_Curvature-Type_tag1@@": "Planform--Tegak lurus dengan arah kemiringan maksimum. Ini memengaruhi konvergensi dan divergensi aliran di seluruh permukaan.",
	"@@Curvature_Curvature-Type_tag2@@": "Profil--Paralel dengan kemiringan dan menunjukkan arah kemiringan maksimum. Ini memengaruhi percepatan dan perlambatan aliran di seluruh permukaan.",
	"@@Curvature_Curvature-Type_tag3@@": "Standar--Memadukan lengkungan <strong>Profil</strong> dan <strong>Planform</strong>.",
	"@@Curvature_DEM_tag0@@": "Raster model elevasi digital (DEM).",
	"@@Curvature_Z-Factor_tag0@@": "Faktor z menyesuaikan satuan ukuran untuk satuan z bila satuan tersebut berbeda dengan satuan x, y dari permukaan input. Jika satuan x, y dan z adalah satuan ukuran yang sama, faktor z harus ditetapkan menjadi 1. Nilai z dari permukaan input dikalikan dengan faktor z saat menghitung permukaan output akhir. Misalnya, jika satuan z Anda adalah kaki dan satuan x, y adalah meter, Anda akan menggunakan faktor z sebesar 0,3048 untuk mengkonversi unit z dari kaki ke meter, karena 1 kaki = 0,3048 meter.",
	"@@Divide_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Divide_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Divide_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Divide_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Divide_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Divide_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Divide_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Divide_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Divide_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Divide_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Divide_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Divide_Raster_tag0@@": "Input yang nilainya akan dibagi dengan input kedua.",
	"@@Divide_Raster_tag1@@": "Angka dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk ${Raster2}.",
	"@@Divide_Raster2_tag0@@": "Input yang nilainya akan dibagi dengan input pertama.",
	"@@Divide_Raster2_tag1@@": "Angka dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk ${Raster}.",
	"@@Elevation-Void-Fill_DEM_tag0@@": "Input DEM.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag0@@": "Nilai lebar kosong maksimum digunakan untuk menentukan ukuran kekosongan terbesar yang ingin Anda isi. Jika lebar atau tinggi kotak batas di sekitar kekosongan lebih besar dari nilai lebar kosong maksimum, kekosongan tidak terisi. Unit parameter ini sama dengan unit yang digunakan dalam sistem referensi spasial data Anda.",
	"@@Elevation-Void-Fill_Max-Void-Width_tag1@@": "Jika parameter ini kosong atau memiliki nilai ${0}, tidak ada lebar maksimum yang akan digunakan, dan semua kekosongan akan diisi. Nilai ${-1} berarti tidak ada pengisian kekosongan yang akan terjadi.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag0@@": "Radius pencarian maksimum yang akan digunakan untuk mengisi kekosongan. Kekosongan yang jauh, dari piksel yang valid, dari nilai ambang batas ini akan tetap sebagai kekosongan. Unit parameter ini sama dengan unit yang digunakan dalam sistem referensi spasial data Anda.",
	"@@Elevation-Void-Fill_Short-Range-IDW-Radius_tag1@@": "Jika nilai parameter ini kosong, ${0}, atau ${-1}, parameter ini tidak akan digunakan.",
	"@@Equal-to_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Equal-to_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Equal-to_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Equal-to_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Equal-to_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Equal-to_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Equal-to_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Equal-to_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Equal-to_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Equal-to_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Equal-to_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Equal-to_Raster_tag0@@": "Input yang akan digunakan untuk perbandingan kesetaraan oleh input kedua.",
	"@@Equal-to_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Equal-to_Raster2_tag0@@": "Input yang akan digunakan untuk perbandingan kesetaraan oleh input pertama.",
	"@@Equal-to_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Euclidean-Allocation_Cellsize_tag0@@": "Ukuran sel tempat raster output akan dibuat.",
	"@@Euclidean-Allocation_Cellsize_tag1@@": "Jika ukuran sel ditetapkan secara eksplisit di <strong>Lingkungan Analisis</strong>, yang akan menjadi ukuran sel default. Jika tidak diatur, ukuran sel output akan sama dengan <strong>Raster Sumber</strong>.",
	"@@Euclidean-Allocation_Distance-Method_tag0@@": "Menentukan apakah menghitung jarak menggunakan metode planar (bumi datar) atau geodesik (elipsoid).",
	"@@Euclidean-Allocation_Distance-Method_tag1@@": "Geodesik--Garis terpendek antara dua titik di permukaan bumi pada sebuah sferoid (ellipsoid). Maka dari itu, hasil tidak berubah terlepas dari proyeksi input atau output. Salah satu kegunaan garis geodesik adalah saat Anda ingin menentukan jarak terdekat antara dua kota untuk jalur penerbangan pesawat. Ini juga dikenal sebagai garis lingkaran besar jika didasarkan pada bola daripada ellipsoid.",
	"@@Euclidean-Allocation_Distance-Method_tag2@@": "Planar--Pengukuran Planar menggunakan matematika Kartesius 2D untuk menghitung panjang dan luas. Opsi ini hanya tersedia saat mengukur dalam sistem koordinat yang diproyeksikan dan pesawat 2D dari sistem koordinat tersebut akan digunakan sebagai dasar untuk pengukuran.",
	"@@Euclidean-Allocation_Maximum-Distance_tag0@@": "Menentukan jarak ambang batas tempat sumber terdekat akan ditentukan. Jika jarak ke sumber terdekat melebihi ini, output untuk sel itu adalah ${NoData}.",
	"@@Euclidean-Allocation_Maximum-Distance_tag1@@": "Jarak default adalah untuk jangkauan raster output.",
	"@@Euclidean-Allocation_Raster-Barriers_tag0@@": "Raster yang menentukan penghalang.",
	"@@Euclidean-Allocation_Raster-Barriers_tag1@@": "Set data harus berisi ${NoData} yang tidak memiliki penghalang. Penghalang direpresentasikan oleh nilai-nilai yang valid termasuk nol.",
	"@@Euclidean-Allocation_Raster-Barriers_tag2@@": "Penghalang dapat ditentukan oleh bilangan bulat atau raster titik mengambang.",
	"@@Euclidean-Allocation_Source-Field_tag0@@": "Kolom yang digunakan untuk menetapkan nilai ke lokasi sumber. Kolom tersebut harus berupa jenis bilangan bulat. Jika <strong>Raster Nilai</strong> telah ditetapkan, nilai dalam input tersebut akan diutamakan daripada pengaturan apa pun untuk <strong>Kolom Sumber</strong>.",
	"@@Euclidean-Allocation_Source-Raster_tag0@@": "Raster input yang diperlukan yang mengidentifikasi lokasi sumber. Berdasarkan jarak Euclidean, sumber terdekat akan ditentukan untuk setiap sel dalam output",
	"@@Euclidean-Allocation_Source-Raster_tag1@@": "Jenis input dapat berupa bilangan bulat atau jenis titik mengambang.",
	"@@Euclidean-Allocation_Value-Raster_tag0@@": "Raster bilangan bulat input yang mengidentifikasi nilai zona yang akan digunakan untuk setiap lokasi sumber input. Untuk setiap sel lokasi sumber, nilai yang ditentukan oleh <strong>Raster Nilai</strong> akan ditetapkan ke semua sel yang dialokasikan ke lokasi sumber untuk komputasi. <strong>Raster Nilai</strong> akan diutamakan daripada pengaturan apa pun untuk <strong>Kolom Sumber</strong>.",
	"@@Euclidean-Direction_Cellsize_tag0@@": "Ukuran sel tempat raster output akan dibuat.",
	"@@Euclidean-Direction_Cellsize_tag1@@": "Jika ukuran sel ditetapkan secara eksplisit di <strong>Lingkungan Analisis</strong>, yang akan menjadi ukuran sel default. Jika tidak diatur, ukuran sel output akan sama dengan <strong>Raster Sumber</strong>.",
	"@@Euclidean-Direction_Distance-Method_tag0@@": "Menentukan apakah menghitung jarak menggunakan metode planar (bumi datar) atau geodesik (elipsoid).",
	"@@Euclidean-Direction_Distance-Method_tag1@@": "Geodesik--Garis terpendek antara dua titik di permukaan bumi pada sebuah sferoid (ellipsoid). Maka dari itu, hasil tidak berubah terlepas dari proyeksi input atau output. Salah satu kegunaan garis geodesik adalah saat Anda ingin menentukan jarak terdekat antara dua kota untuk jalur penerbangan pesawat. Ini juga dikenal sebagai garis lingkaran besar jika didasarkan pada bola daripada ellipsoid.",
	"@@Euclidean-Direction_Distance-Method_tag2@@": "Planar--Pengukuran Planar menggunakan matematika Kartesius 2D untuk menghitung panjang dan luas. Opsi ini hanya tersedia saat mengukur dalam sistem koordinat yang diproyeksikan dan pesawat 2D dari sistem koordinat tersebut akan digunakan sebagai dasar untuk pengukuran.",
	"@@Euclidean-Direction_Maximum-Distance_tag0@@": "Menentukan jarak ambang batas di mana arah ke sumber terdekat akan dihitung. Jika jarak ke sumber terdekat melebihi ini, output untuk sel itu adalah ${NoData}.",
	"@@Euclidean-Direction_Maximum-Distance_tag1@@": "Jarak default adalah untuk jangkauan raster output.",
	"@@Euclidean-Direction_Raster-Barriers_tag0@@": "Raster yang menentukan penghalang.",
	"@@Euclidean-Direction_Raster-Barriers_tag1@@": "Set data harus berisi NoData yang tidak memiliki penghalang. Penghalang direpresentasikan oleh nilai-nilai yang valid termasuk nol.",
	"@@Euclidean-Direction_Raster-Barriers_tag2@@": "Penghalang dapat ditentukan oleh bilangan bulat atau raster titik mengambang.",
	"@@Euclidean-Direction_Source-Raster_tag0@@": "Raster input yang diperlukan yang mengidentifikasi sel atau lokasi tempat arah Euclidean untuk setiap lokasi sel output dihitung.",
	"@@Euclidean-Direction_Source-Raster_tag1@@": "Jenis input dapat berupa bilangan bulat atau jenis titik mengambang.",
	"@@Euclidean-Distance_Cellsize_tag0@@": "Ukuran sel tempat raster output akan dibuat.",
	"@@Euclidean-Distance_Cellsize_tag1@@": "Jika ukuran sel ditetapkan secara eksplisit di <strong>Lingkungan Analisis</strong>, yang akan menjadi ukuran sel default. Jika tidak diatur, ukuran sel output akan sama dengan <strong>Raster Sumber</strong>.",
	"@@Euclidean-Distance_Distance-Method_tag0@@": "Menentukan apakah menghitung jarak menggunakan metode planar (bumi datar) atau geodesik (elipsoid).",
	"@@Euclidean-Distance_Distance-Method_tag1@@": "Geodesik--Garis terpendek antara dua titik di permukaan bumi pada sebuah sferoid (ellipsoid). Maka dari itu, hasil tidak berubah terlepas dari proyeksi input atau output. Salah satu kegunaan garis geodesik adalah saat Anda ingin menentukan jarak terdekat antara dua kota untuk jalur penerbangan pesawat. Ini juga dikenal sebagai garis lingkaran besar jika didasarkan pada bola daripada ellipsoid.",
	"@@Euclidean-Distance_Distance-Method_tag2@@": "Planar--Pengukuran Planar menggunakan matematika Kartesius 2D untuk menghitung panjang dan luas. Opsi ini hanya tersedia saat mengukur dalam sistem koordinat yang diproyeksikan dan pesawat 2D dari sistem koordinat tersebut akan digunakan sebagai dasar untuk pengukuran.",
	"@@Euclidean-Distance_Maximum-Distance_tag0@@": "Ambang batas yang tidak dapat dilampaui nilai jarak akumulatif. Jika jarak Euclidean akumulatif melebihi nilai ini, nilai output untuk lokasi sel adalah NoData.",
	"@@Euclidean-Distance_Maximum-Distance_tag1@@": "Jarak default adalah untuk jangkauan raster output.",
	"@@Euclidean-Distance_Raster-Barriers_tag0@@": "Raster yang menentukan penghalang.",
	"@@Euclidean-Distance_Raster-Barriers_tag1@@": "Set data harus berisi ${NoData} yang tidak memiliki penghalang. Penghalang direpresentasikan oleh nilai-nilai yang valid termasuk nol.",
	"@@Euclidean-Distance_Raster-Barriers_tag2@@": "Penghalang dapat ditentukan oleh bilangan bulat atau raster titik mengambang.",
	"@@Euclidean-Distance_Source-Raster_tag0@@": "Raster input yang diperlukan yang mengidentifikasi sel atau lokasi tempat jarak Euclidean untuk setiap lokasi sel output dihitung.",
	"@@Euclidean-Distance_Source-Raster_tag1@@": "Jenis input dapat berupa bilangan bulat atau jenis titik mengambang.",
	"@@Exp_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Exp_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Exp_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Exp_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Exp_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Exp_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Exp_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Exp_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Exp_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Exp_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Exp_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Exp_Raster_tag0@@": "Nilai input yang digunakan untuk menemukan e eksponensial dasar.",
	"@@Exp10_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Exp10_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Exp10_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Exp10_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Exp10_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Exp10_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Exp10_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Exp10_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Exp10_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Exp10_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Exp10_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Exp10_Raster_tag0@@": "Nilai input yang digunakan untuk menemukan 10 eksponensial dasar.",
	"@@Exp2_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Exp2_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Exp2_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Exp2_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Exp2_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Exp2_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Exp2_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Exp2_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Exp2_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Exp2_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Exp2_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Exp2_Raster_tag0@@": "Nilai input yang digunakan untuk menemukan 2 eksponensial dasar.",
	"@@Extract-Bands_Band_tag0@@": "Pilih band yang akan diekstrak dari daftar berdasarkan opsi parameter <strong>Metode</strong> yang digunakan.",
	"@@Extract-Bands_Combination_tag0@@": "Kombinasi band atau urutan band. Daftar pilihan tergantung opsi <strong>Metode</strong> yang ditentukan. Sebagai contoh, jika <strong>Metode</strong>nya adalah <strong>Nama Band</strong>, Anda dapat memilih kombinasi Biru, Hijau, dan Merah untuk mengekstrak gambar warna alami.",
	"@@Extract-Bands_Method_tag0@@": "Pilih salah satu metode berikut untuk mengekstrak band:",
	"@@Extract-Bands_Method_tag1@@": "<strong>ID Band</strong>--Penentuan band atau angka, yang unik untuk setiap sensor. Ini bisa identik dengan <strong>Nama Band</strong>.",
	"@@Extract-Bands_Method_tag4@@": "<strong>Nama Band</strong>--Menggunakan nama band yang merepresentasikan interval panjang gelombang pada spektrum elektromagnetik (misalnya, Merah, Inframerah Dekat, Inframerah Termal). Ini juga dapat ditetapkan sebagai ID nomor band.",
	"@@Extract-Bands_Method_tag6@@": "<strong>Panjang Gelombang Band</strong>--Panjang gelombang pada spektrum elektromagnetik.",
	"@@Extract-Bands_Missing-Band-Action_tag0@@": "Tentukan tindakan yang akan terjadi saat band dalam daftar ekstrak band tidak tersedia.",
	"@@Extract-Bands_Missing-Band-Action_tag1@@": "<strong>Kecocokan Terbaik</strong>--Menemukan band terbaik yang tersedia untuk digunakan menggantikan band yang hilang berdasarkan panjang gelombang, sehingga fungsi tidak akan gagal.",
	"@@Extract-Bands_Missing-Band-Action_tag3@@": "<strong>Gagal</strong>--Jika set data input tidak memiliki band yang telah ditentukan dalam parameter <strong>Band</strong>, maka fungsinya akan gagal.",
	"@@Extract-Bands_Raster_tag0@@": "Produk raster tempat band akan diekstrak.",
	"@@Fill_Raster_tag0@@": "Raster elevasi band tunggal.",
	"@@Fill_Z-Limit_tag0@@": "Perbedaan elevasi maksimum antara muara dan titik tuangnya.",
	"@@Fill_Z-Limit_tag1@@": "Kecuali jika nilainya ditentukan untuk parameter ini, semua muara akan diisi, terlepas dari kedalamannya.",
	"@@Fill_Z-Limit_tag2@@": "Nilai untuk <strong>Batas Z</strong> harus lebih besar dari nol.",
	"@@Float_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Float_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Float_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Float_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Float_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Float_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Float_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Float_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Float_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Float_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Float_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Float_Raster_tag0@@": "Raster input yang hendak dikonversi menjadi titik mengambang.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag0@@": "Raster input yang menunjukkan arah aliran keluar dari setiap sel.",
	"@@Flow-Accumulation_Flow-Direction-Raster_tag1@@": "Arah aliran raster dapat dibuat dengan menjalankan fungsi <strong>Arah Aliran</strong>.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag0@@": "Menentukan jenis arah aliran raster.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Arah aliran input raster adalah jenis D8. Ini nilai defaultnya.",
	"@@Flow-Accumulation_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Raster arah aliran input adalah jenis D-Infinity (DINF).",
	"@@Flow-Accumulation_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Raster arah aliran input adalah jenis Arah Aliran Ganda (MFD).",
	"@@Flow-Accumulation_Output-Data-Type_tag0@@": "Raster akumulasi output dapat berupa jenis bilangan bulat atau titik mengambang.",
	"@@Flow-Accumulation_Output-Data-Type_tag1@@": "<strong>Mengambang</strong>--Raster output akan berupa jenis titik mengambang. Ini nilai defaultnya.",
	"@@Flow-Accumulation_Output-Data-Type_tag3@@": "<strong>Bilangan Bulat</strong>--Raster output akan berupa bilangan bulat.",
	"@@Flow-Accumulation_Weight-Raster_tag0@@": "Raster input opsional untuk menerapkan bobot ke setiap piksel.",
	"@@Flow-Accumulation_Weight-Raster_tag1@@": "Jika tidak ada raster bobot yang ditentukan, maka bobot default senilai 1 akan diterapkan ke setiap piksel.",
	"@@Flow-Direction_Flow-Direction-Type_tag0@@": "Menentukan jenis arah aliran raster.",
	"@@Flow-Direction_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Arah aliran input raster adalah jenis D8. Ini nilai defaultnya.",
	"@@Flow-Direction_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Raster arah aliran input adalah jenis D-Infinity (DINF).",
	"@@Flow-Direction_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Raster arah aliran input adalah jenis Arah Aliran Ganda (MFD).",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag0@@": "Menentukan apakah piksel tepi akan selalu mengalir ke luar atau mengalir sesuai dengan peraturan aliran normal.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag1@@": "<strong>Tidak</strong>--Jika tetesan maksimum di dalam piksel tepi berjumlah lebih dari nol, maka arah aliran akan ditentukan seperti biasa; jika tidak, maka arah aliran akan menuju ke tepi. Piksel yang seharusnya mengalir dari tepi raster permukaan ke dalam akan mengalir seperti itu. Ini nilai defaultnya.",
	"@@Flow-Direction_Force-all-edge-cells-to-flow-outward_tag3@@": "<strong>Ya</strong>--Semua piksel di tepi raster permukaan akan mengalir keluar dari permukaan raster.",
	"@@Flow-Direction_Raster_tag0@@": "Raster input merepresentasikan permukaan dengan permukaan elevasi berkelanjutan.",
	"@@Flow-Distance_Distance-Type_tag0@@": "Menentukan apakah komponen vertikal atau horizontal dari jarak aliran dihitung.",
	"@@Flow-Distance_Distance-Type_tag1@@": "<strong>Horizontal</strong>--Perhitungan jarak aliran yang merepresentasikan komponen horizontal jarak aliran dari setiap piksel di domain hingga piksel pada arus tempat alirannya.",
	"@@Flow-Distance_Distance-Type_tag3@@": "<strong>Vertikal</strong>--Perhitungan jarak aliran yang merepresentasikan komponen vertikal jarak aliran dari setiap piksel di domain hingga piksel pada arus tempat alirannya. Ini nilai defaultnya.",
	"@@Flow-Distance_Flow-Direction-Raster_tag0@@": "Raster input yang menunjukkan arah aliran keluar dari setiap piksel.",
	"@@Flow-Distance_Flow-Direction-Raster_tag1@@": "Jika raster arah aliran diberikan, maka arah kemiringan menurun akan dibatasi menjadi jumlah yang ditentukan oleh arah aliran input.",
	"@@Flow-Distance_Flow-Direction-Raster_tag2@@": "Raster arah aliran dapat dibuat dengan menggunakan fungsi Arah Aliran.",
	"@@Flow-Distance_Flow-Direction-Type_tag0@@": "Menentukan jenis arah aliran raster.",
	"@@Flow-Distance_Flow-Direction-Type_tag1@@": "<strong>D8</strong>--Arah aliran input raster adalah jenis D8. Ini nilai defaultnya.",
	"@@Flow-Distance_Flow-Direction-Type_tag3@@": "<strong>DINF</strong>--Raster arah aliran input adalah jenis D-Infinity (DINF).",
	"@@Flow-Distance_Flow-Direction-Type_tag5@@": "<strong>MFD</strong>--Raster arah aliran input adalah jenis Arah Aliran Ganda (MFD).",
	"@@Flow-Distance_Statistics-Type_tag0@@": "Menentukan jenis statistik yang digunakan untuk menghitung jarak aliran sepanjang beberapa jalur aliran. Jika hanya ada satu jalur aliran dari setiap sel ke sel di arus, maka semua jenis statistik akan menghasilkan hasil yang sama.",
	"@@Flow-Distance_Statistics-Type_tag1@@": "<strong>Minimum</strong>--Tempat keberadaan beberapa alur aliran, jarak aliran minimal yang dihitung. Ini nilai defaultnya.",
	"@@Flow-Distance_Statistics-Type_tag3@@": "<strong>Rata-rata dengan Pembobotan</strong>--Tempat keberadaan beberapa alur aliran, rata-rata dengan pembobotan dari jarak aliran yang dihitung. Proporsi aliran dari sel ke sel terdekat di hilirnya digunakan sebagai bobot untuk menghitung rata-rata dengan pembobotan.",
	"@@Flow-Distance_Statistics-Type_tag5@@": "<strong>Maksimum</strong>--Ketika ada banyak alur aliran, jarak aliran maksimum yang dihitung.",
	"@@Flow-Distance_Stream-Raster_tag0@@": "Raster arus input yang merepresentasikan jaringan aliran linear.",
	"@@Flow-Distance_Surface-Raster_tag0@@": "Raster input merepresentasikan permukaan dengan permukaan elevasi berkelanjutan.",
	"@@Flow-Length_Direction-of-Measurement_tag0@@": "Arah pengukuran di sepanjang alur aliran.",
	"@@Flow-Length_Direction-of-Measurement_tag1@@": "<strong>Hilir</strong>--Menghitung jarak lereng di sepanjang alur aliran, dari setiap sel ke muara atau tempat saluran keluar di tepi raster.",
	"@@Flow-Length_Direction-of-Measurement_tag3@@": "<strong>Hulu</strong>--Menghitung jarak lereng terpanjang di sepanjang alur aliran, dari setiap sel ke ujung awal pemisah aliran.",
	"@@Flow-Length_Flow-Direction-Raster_tag0@@": "Raster input yang menunjukkan arah aliran keluar dari setiap sel.",
	"@@Flow-Length_Flow-Direction-Raster_tag1@@": "Arah aliran raster dapat dibuat dengan menjalankan fungsi <strong>Arah Aliran</strong>.",
	"@@Flow-Length_Weight-Raster_tag0@@": "Raster input opsional untuk menerapkan bobot ke setiap sel.",
	"@@Flow-Length_Weight-Raster_tag1@@": "Jika tidak ada raster bobot yang ditentukan, maka bobot default senilai 1 akan diterapkan ke setiap sel.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag0@@": "Menunjukkan apakah nilai ${NoData} diabaikan oleh hitungan statistik.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag1@@": "<strong>Dicentang</strong>--Menetapkan bahwa jika nilai ${NoData} ada di dalam lingkungan, maka nilai ${NoData} akan diabaikan. Hanya sel di dalam lingkungan yang memiliki nilai data yang digunakan dalam menentukan nilai output. Ini nilai defaultnya.",
	"@@Focal-Statistics_Ignore-NoData-in-calculations_tag3@@": "<strong>Tidak Dicentang</strong>--Menentukan bahwa jika ada sel di lingkungan yang memiliki nilai ${NoData}, maka output untuk pemrosesan sel akan berupa ${NoData}.",
	"@@Focal-Statistics_Neighborhood_tag0@@": "Bentuk area di sekitar setiap sel yang digunakan untuk menghitung statistik.",
	"@@Focal-Statistics_Neighborhood_tag1@@": "Setiap lingkungan memiliki parameter tambahan yang digunakan untuk menentukan bentuk.",
	"@@Focal-Statistics_Neighborhood_tag2@@": "Anulus, Radius Dalam, Radius Luar",
	"@@Focal-Statistics_Neighborhood_tag3@@": "Lingkaran, Radius",
	"@@Focal-Statistics_Neighborhood_tag4@@": "Nilai Tak Beraturan, Lebar, Tinggi, Lingkungan",
	"@@Focal-Statistics_Neighborhood_tag5@@": "Persegi, Lebar, Tinggi",
	"@@Focal-Statistics_Neighborhood_tag6@@": "Baji, Radius, Sudut awal, Sudut akhir",
	"@@Focal-Statistics_Neighborhood_tag7@@": "Nilai Bobot, Lebar, Tinggi, Lingkungan",
	"@@Focal-Statistics_Neighborhood_tag8@@": "Lingkungan tak beraturan memungkinkan Anda untuk menentukan bentuk lingkungan yang tidak umum di sekitar sel pemrosesan. Gunakan tabel nilai Lingkungan untuk menentukan bentuk pusat lingkungan. Nilai 0 untuk posisi sel menunjukkan bahwa sel bukan bagian dari lingkungan, dan nantinya tidak akan diproses. Nilai 1 menunjukkan bahwa sel (dan nilai) yang berkaitan diikutsertakan di dalam lingkungan.",
	"@@Focal-Statistics_Neighborhood_tag9@@": "Lingkungan Bobot mirip dengan jenis lingkungan tak beraturan, yang dalam hal ini memungkinkan Anda untuk menentukan lingkungan tak beraturan di sekitar sel pemrosesan, serta memungkinkan Anda untuk menerapkan bobot pada nilai input. Nilai-nilai dalam kernel bobot menentukan posisi sel yang harus dimasukkan ke dalam lingkungan dan bobot yang akan dikalikan. Gunakan nilai 0 untuk mengecualikan sel dari pemrosesan. Nilai positif, negatif, dan desimal adalah semua opsi yang valid untuk digunakan sebagai bobot. Untuk jenis lingkungan Bobot, hanya statistik Rata-rata, Simpangan Baku, atau Jumlah yang didukung.",
	"@@Focal-Statistics_Percentile-Value_tag0@@": "Menunjukkan persentil yang dihitung ketika <strong>Persentil</strong> dipilih sebagai tipe statistik. Defaultnya adalah 90, untuk persentil ke-90.",
	"@@Focal-Statistics_Percentile-Value_tag3@@": "Nilai dapat berkisar antara 0 hingga 100. Persentil ke-0 pada dasarnya setara dengan statistik Minimal, dan persentil ke-100 setara dengan statistik Maksimal, dengan pengecualian bahwa hasilnya akan berupa titik mengambang. Nilai 50 pada dasarnya akan menghasilkan hasil yang sama dengan statistik Median.",
	"@@Focal-Statistics_Raster_tag0@@": "Raster input yang diperlukan.",
	"@@Focal-Statistics_Statistics-Type_tag0@@": "Jenis statistik yang akan dihitung.",
	"@@Focal-Statistics_Statistics-Type_tag1@@": "<strong>Mayoritas</strong>--Menghitung sebagian besar (nilai yang paling sering dihasilkan) sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag3@@": "<strong>Maksimum</strong>--Menghitung jumlah maksimum (nilai terbesar) sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag5@@": "<strong>Rata-rata</strong>--Menghitung rata-rata (nilai rata-rata) sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag7@@": "<strong>Median</strong>--Menghitung median sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag9@@": "<strong>Minimum</strong>--Menghitung jumlah minimum (nilai terkecil) sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag11@@": "<strong>Minoritas</strong>--Menghitung sebagian kecil (nilai yang paling jarang dihasilkan) sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag13@@": "<strong>Persentil</strong>--Menghitung persentil sel yang ada di lingkungan. Anda bisa menentukan persentil mana yang akan dihitung dengan parameter <strong>Nilai Persentil</strong>.",
	"@@Focal-Statistics_Statistics-Type_tag17@@": "<strong>Rentang</strong>--Menghitung rentang (selisih antara nilai terbesar dan nilai terkecil) sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag19@@": "<strong>Simpangan Baku</strong>--Menghitung simpangan baku sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag21@@": "<strong>Jumlah</strong>--Menghitung jumlah (total jumlah) sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag23@@": "<strong>Variasi</strong>--Menghitung variasi (jumlah nilai unik) sel yang ada di lingkungan.",
	"@@Focal-Statistics_Statistics-Type_tag25@@": "Jika raster input adalah titik mengambang, maka hanya jenis statistik Rata-rata, Maksimal, Median, Minimal, Persentil, Rentang, Simpangan Baku, dan Jumlah yang tersedia.",
	"@@Focal-Statistics_Statistics-Type_tag26@@": "Untuk Rata-rata, Median, Persentil, dan Simpangan Baku, output selalu berupa titik mengambang.",
	"@@Focal-Statistics_Statistics-Type_tag27@@": "Jenis statistik default adalah Rata-rata.",
	"@@Geometric_Constant-Z_tag0@@": "Tentukan elevasi konstan yang digunakan untuk fungsi Geometri.",
	"@@Geometric_DEM_tag0@@": "Tentukan DEM yang digunakan untuk fungsi Geometri. Anda dapat menggunakan DEM yang terdapat di set data mosaik sebagai set data raster atau set data mosaik yang menghasilkan output DEM.",
	"@@Geometric_Geoid_tag0@@": "Sebagian besar set data elevasi, seperti USGS NED atau ArcGIS Online World Elevation, adalah ketinggian ortometrik, sehingga perlu untuk memilih koreksi Geoid untuk kompatibilitas dengan RPC satelit yang memerlukan ketinggian elipsoid. Pilih kotak centang <strong>Geoid</strong> untuk menerapkan koreksi geoid (EGM96) ke nilai z, kecuali jika DEM Anda sudah ditetapkan untuk ketinggian elipsoid.",
	"@@Geometric_Method_tag0@@": "Pilih metode elevasi untuk fungsi geometri:",
	"@@Geometric_Method_tag1@@": "Gunakan Z Konstan--Tentukan elevasi konstan untuk melakukan fungsi Geometri.",
	"@@Geometric_Method_tag2@@": "Gunakan DEM--Tentukan DEM untuk melakukan fungsi Geometri.",
	"@@Geometric_Raster_tag0@@": "Raster input.",
	"@@Geometric_Z-Factor_tag0@@": "Koefisien polinomial rasional (RPCs) satelit diatur skalanya untuk set data elevasi dengan unit vertikal dalam satuan meter. Jika elevasi Anda menggunakan unit vertikal lainnya, masukkan <strong>Faktor Z</strong> untuk mengubah skala ke meter. Misalnya, jika satuan elevasi Anda adalah kaki, maka Anda perlu menggunakan nilai 0,3048 untuk mengubah satuan elevasi Anda dari kaki ke meter.",
	"@@Geometric_Z-Offset_tag0@@": "Nilai dasar yang akan ditambahkan ke nilai elevasi di DEM. Ini dapat digunakan untuk mengimbangi nilai elevasi yang tidak dimulai dari permukaan laut.",
	"@@Geometric_Tolerance_tag0@@": "Tentukan kesalahan maksimal yang dapat diterima dalam fungsi geometri, yang diberikan dalam bentuk jumlah piksel. Jenis raster NITF (NCDRD) default adalah dua.",
	"@@Grayscale_Raster_tag0@@": "Raster input.",
	"@@Grayscale_Conversion-Parameters_tag0@@": "Bobot untuk setiap band yang terdapat di input raster.",
	"@@Greater-Than_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Greater-Than_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Greater-Than_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Greater-Than_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Greater-Than_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Greater-Than_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Greater-Than_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Greater-Than_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Greater-Than_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Greater-Than_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Greater-Than_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Greater-Than_Raster_tag0@@": "Input sedang diuji untuk menentukan apakah input tersebut lebih besar daripada input kedua.",
	"@@Greater-Than_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Greater-Than_Raster2_tag0@@": "Input yang nantinya diuji dengan input pertama yang lebih besar.",
	"@@Greater-Than_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Greater-Than-Equal_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Greater-Than-Equal_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Greater-Than-Equal_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Greater-Than-Equal_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Greater-Than-Equal_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Greater-Than-Equal_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Greater-Than-Equal_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Greater-Than-Equal_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Greater-Than-Equal_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Greater-Than-Equal_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Greater-Than-Equal_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Greater-Than-Equal_Raster_tag0@@": "Input sedang diuji untuk menentukan apakah input tersebut lebih besar daripada atau setara dengan input kedua.",
	"@@Greater-Than-Equal_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Greater-Than-Equal_Raster2_tag0@@": "Input yang nantinya diuji dengan input pertama yang lebih besar atau setara.",
	"@@Greater-Than-Equal_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Heat-Index_Heat-Index-Units_tag0@@": "Satuan pengukuran yang berhubungan dengan output raster. Satuan output yang tersedia adalah Celsius, Fahrenheit, dan Kelvin.",
	"@@Heat-Index_Relative-Humidity-Raster_tag0@@": "Raster band tunggal dengan nilai piksel merepresentasikan kelembapan dengan nilai persentase antara 0 hingga 100.",
	"@@Heat-Index_Temperature-Raster_tag0@@": "Raster band tunggal dengan nilai piksel merepresentasikan suhu udara sekitar.",
	"@@Heat-Index_Temperature-Units_tag0@@": "Satuan pengukuran yang berhubungan dengan temperatur input raster. Satuan input yang tersedia adalah Celsius, Fahrenheit, dan Kelvin.",
	"@@Hillshade_Altitude_tag0@@": "Ketinggian adalah sudut elevasi matahari di atas cakrawala yang berkisar antara 0 hingga 90 derajat. Nilai 0 derajat menunjukkan bahwa matahari berada di cakrawala, yaitu pada bidang horizontal yang sama dengan kerangka acuan. Nilai 90 derajat menunjukkan bahwa matahari berada tepat di atas kepala.",
	"@@Hillshade_Altitude_tag1@@": "Parameter ini hanya valid ketika <strong>Jenis Bayangan Gunung</strong> bersifat <strong>Tradisional</strong>. Defaultnya adalah 45 derajat di atas cakrawala.",
	"@@Hillshade_Azimuth_tag0@@": "Azimut adalah posisi relatif matahari di sepanjang cakrawala (dalam derajat). Posisi ini ditunjukkan oleh sudut matahari yang diukur searah jarum jam dari arah utara. Azimut 0 derajat menandakan arah utara, arah timur adalah 90 derajat, selatan 180 derajat, dan barat 270 derajat.",
	"@@Hillshade_Azimuth_tag1@@": "Parameter ini hanya valid ketika <strong>Jenis Bayangan Gunung</strong> bersifat <strong>Tradisional</strong>. Defaultnya adalah 315 derajat, yang menandakan barat laut.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag0@@": "Penggunaan opsi ini mencegah adanya pengambilan ulang sampel artifak yang dapat terjadi di sepanjang tepi raster. Piksel output di sepanjang tepi raster atau di samping piksel NoData akan diisi dengan NoData; oleh karena itu, disarankan untuk hanya menggunakan parameter ini dengan set data mosaik elevasi yang bertumpang tindih. Saat piksel yang bertumpang tindih tersedia, area NoData akan menampilkan nilai piksel yang bertumpang tindih alih-alih piksel yang kosong.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag1@@": "Tidak dicentang--Pengambilan ulang sampel bilinear akan diterapkan secara seragam untuk mengambil sampel ulang bayangan gunung Anda. Gunakan opsi ini ketika set data mosaik yang memuat data elevasi raster Anda digabungkan dari ujung ke ujung. Ini adalah default.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag2@@": "Dicentang--Pengambilan ulang sampel bilinear akan digunakan di dalam bayangan gunung, kecuali untuk wilayah sepanjang tepi raster atau di samping piksel NoData. Piksel ini akan diisi dengan NoData dan menampilkan nilai piksel yang bertumpang tindih, sehingga mengurangi efek tepi tajam yang mungkin dapat terjadi. Gunakan opsi ini bila set data mosaik yang berisi data raster elevasi Anda memiliki item atau ubin yang bertumpang tindih.",
	"@@Hillshade_Disable-default-edge-pixel-interpolation_tag3@@": "Hasil dari fungsi ini dapat bergantung pada data. Jika Anda mengamati artefak batas ubin di output Anda, pilih kondisi alternatif dari kotak centang.",
	"@@Hillshade_Hillshade-Type_tag0@@": "Kontrol sumber penerangan untuk bayangan gunung:",
	"@@Hillshade_Hillshade-Type_tag1@@": "Tradisional--Menghitung bayangan gunung dari satu arah sumber cahaya. Ini nilai defaultnya. Anda dapat mengatur <strong>Azimuth</strong> dan <strong>Ketinggian</strong> untuk mengontrol lokasi sumber cahaya.",
	"@@Hillshade_Hillshade-Type_tag6@@": "Multi-arah--Memadukan cahaya dari sejumlah sumber untuk merepresentasikan visualisasi medan yang lebih detail.",
	"@@Hillshade_Pixel-Size-Factor_tag0@@": "Faktor Ukuran Piksel mempertimbangkan perubahan pada skala pada saat memperbesar dan memperkecil tampilan peta. Ini mengontrol sejauh mana perubahan <strong>Faktor Z</strong>.",
	"@@Hillshade_Pixel-Size-Factor_tag3@@": "Parameter ini hanya valid ketika jenis <strong>Penskalaan</strong> adalah <strong>Disesuaikan</strong>. Nilai defaultnya adalah 0,024.",
	"@@Hillshade_Pixel-Size-Power_tag0@@": "Daya Ukuran Piksel mempertimbangkan perubahan ketinggian (atau skala) pada saat memperbesar dan memperkecil tampilan peta. Ini adalah eksponen yang diterapkan pada ukuran piksel dalam persamaan yang mengontrol laju perubahan <strong>Faktor Z</strong> untuk menghindari hilangnya relief yang signifikan.",
	"@@Hillshade_Pixel-Size-Power_tag3@@": "Parameter ini hanya valid ketika jenis <strong>Penskalaan</strong> adalah <strong>Disesuaikan</strong>. Nilai defaultnya adalah 0,664.",
	"@@Hillshade_Raster_tag0@@": "Set data elevasi input.",
	"@@Hillshade_Scaling_tag0@@": "Hasil yang diarsir diskalakan secara dinamis dengan menyesuaikan faktor z menggunakan salah satu dari dua opsi berikut:",
	"@@Hillshade_Scaling_tag1@@": "Disesuaikan--Ini menerapkan penyesuaian nonlinier menggunakan nilai default <strong>Kekuatan Ukuran Piksel</strong> dan <strong>Faktor Ukuran Piksel</strong>, yang mengakomodasi berbagai perubahan ketinggian (skala) karena pemirsa memperbesar dan memperkecil tampilan. Pengaturan parameter <strong>Disesuaikan</strong> disarankan saat menggunakan set data seluruh dunia.",
	"@@Hillshade_Scaling_tag8@@": "Tidak ada--Tidak ada penskalaan yang diterapkan. Ini ideal untuk set data raster tunggal yang mencakup area lokal. Ini tidak direkomendasikan untuk set data di seluruh dunia dengan variasi besar dalam elevasi atau peta multiskala karena akan menghasilkan relief medan dengan sedikit variasi pada skala kecil.",
	"@@Hillshade_Z-Factor_tag0@@": "Faktor z adalah faktor penskalaan yang digunakan untuk mengubah nilai elevasi untuk dua tujuan:",
	"@@Hillshade_Z-Factor_tag1@@": "Mengubah satuan elevasi (seperti meter atau kaki) menjadi satuan koordinasi horizontal dari set data, yang mungkin berupa kaki, meter, atau derajat.",
	"@@Hillshade_Z-Factor_tag2@@": "Menambahkan pembesaran vertikal untuk efek visual.",
	"@@Int_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Int_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Int_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Int_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Int_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Int_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Int_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Int_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Int_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Int_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Int_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Int_Raster_tag0@@": "Raster input yang akan dikonversi menjadi bilangan bulat.",
	"@@Interpolate-Irregular-Data_Cellsize_tag0@@": "Ukuran sel untuk raster output keluaran akan terdeteksi secara otomatis; akan tetapi, Anda dapat mengubahnya. Meskipun ukuran sel dapat diubah, cakupan set data raster akan tetap sama.",
	"@@Interpolate-Irregular-Data_Input-Samples_tag0@@": "Data poin input.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag0@@": "Ada empat metode pengambilan ulang sampel yang ada untuk fungsi ini:",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag1@@": "<strong>Jarak Inversi dengan Pembobotan</strong>--Menentukan nilai sel dengan menggunakan perpaduan rangkaian poin atau sel sampel dengan pembobotan secara linear. Bobot adalah fungsi kebalikan dari jarak dari titik atau sel yang diketahui.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag3@@": "<strong>Tinning Linear</strong>--Menggunakan jaringan tidak beraturan triangulasi dari titik pusat setiap sel dalam raster tidak beraturan untuk menginterpolasi permukaan yang kemudian dikonversi menjadi raster biasa.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag5@@": "<strong>Lingkungan Natural</strong>--Menemukan bagian terdekat dari sampel input ke titik kueri dan menerapkan bobot ke bagian tersebut berdasarkan area proporsional untuk menghitung nilai.",
	"@@Interpolate-Irregular-Data_Interpolation-Method_tag7@@": "<strong>Lingkungan Terdekat</strong>--Menghitung nilai piksel dengan menggunakan piksel terdekat. Jika tidak ada piksel sumber, maka tidak akan ada piksel baru yang dapat dibuat dalam output. Ini nilai defaultnya.",
	"@@Interpolate-Irregular-Data_Search-Radius_tag0@@": "Mengidentifikasi jumlah piksel yang akan disertakan untuk metode pengambilan ulang sampel yang dipilih. Nilai defaultnya adalah ${3} piksel.",
	"@@Interpolate-Irregular-Data_Value-Field_tag0@@": "Jika Anda memilih kelas fitur titik sebagai input, Anda harus mengidentifikasi kolom dalam tabel atribut dengan nilai poin",
	"@@Is-Null_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Is-Null_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Is-Null_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Is-Null_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Is-Null_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Is-Null_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Is-Null_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Is-Null_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Is-Null_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Is-Null_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Is-Null_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Is-Null_Raster_tag0@@": "Raster input yang diuji untuk mengidentifikasi sel yang merupakan ${NoData} (nol).",
	"@@Is-Null_Raster_tag1@@": "Input dapat berupa jenis bilangan bulat atau titik mengambang.",
	"@@Key-Metadata_Band-Names_tag0@@": "Ini digunakan untuk mengganti nama band raster. Ini adalah string dengan koma pemisah yang merepresentasikan nama band yang diperbarui.",
	"@@Key-Metadata_Band-Names_tag1@@": "Parameter ini opsional.",
	"@@Key-Metadata_Metadata-JSON_tag0@@": "Metadata kunci yang akan dimasukkan ke dalam raster keluar yang digambarkan sebagai string JSON yang merepresentasikan sejumlah pasangan kunci-nilai. Berikut ini adalah contoh string JSON yang dapat digunakan sebagai input untuk fungsi ini. Semua input untuk parameter ini harus mengikuti format yang sama.",
	"@@Key-Metadata_Metadata-JSON_tag1@@": "String JSON merepresentasikan metadata kunci",
	"@@Key-Metadata_Metadata-JSON_tag2@@": "{ \"CloudCover \": 4, \"BandProperties\":[ { \"BandName\": \"Blue\", \"WavelengthMin\": 445, \"WavelengthMax\": 516 }, { \"BandName\": \"Green\", \"WavelengthMin\": 506, \"WavelengthMax\": 595 }, ]}",
	"@@Key-Metadata_Property-Name_tag0@@": "Nama properti kunci level set data yang hendak diganti.",
	"@@Key-Metadata_Raster_tag0@@": "Set data raster atau mosaik berisi metadata kunci yang ingin Anda masukkan atau ganti.",
	"@@Key-Metadata_Value_tag0@@": "Nilai properti kunci tingkat set data yang ingin Anda tetapkan.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag0@@": "Parameter ini mensimulasikan peningkatan upaya untuk mengatasi biaya seiring dengan meningkatnya biaya akumulatif. Ini digunakan untuk model kelelahan wisatawan. Biaya akumulatif yang tumbuh untuk mencapai sel dikalikan dengan tingkat resistansi dan ditambahkan ke biaya untuk pindah ke sel berikutnya.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag1@@": "Ini versi modifikasi dari rumus suku bunga majemuk yang digunakan untuk menghitung biaya bergerak melalui sel yang jelas. Ketika nilai tingkat resistansi meningkat, ini meningkatkan biaya sel yang dikunjungi di masa mendatang. Semakin besar tingkat resistansi, semakin tinggi biaya untuk mencapai sel berikutnya, yang ditambah untuk setiap gerakan selanjutnya. Karena tingkat resistansi serupa dengan tingkat gabungan dan umumnya nilai-nilai biaya akumulatif sangat besar, tingkat resitansi yang kecil disarankan, seperti 0,005 atau bahkan lebih kecil, tergantung nilai-nilai biaya akumulatif.",
	"@@Least-Cost-Path_Accumulative-Cost-Resistance-Rate_tag2@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Least-Cost-Path_Capacity_tag0@@": "Menentukan kapasitas biaya untuk wisatawan untuk suatu sumber. Perhitungan biaya berlanjut untuk setiap sumber hingga kapasitas yang ditentukan tercapai.",
	"@@Least-Cost-Path_Capacity_tag1@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Least-Cost-Path_Cost-Raster_tag0@@": "Sebuah raster input yang diperlukan menentukan biaya atau impedansi untuk bergerak secara planimetri melalui setiap sel. Nilai di setiap lokasi sel merepresentasikan jarak biaya-per-unit untuk bergerak melalui sel. Setiap nilai lokasi sel dikalikan dengan resolusi sel, sementara juga mengkompensasi gerakan diagonal untuk mendapatkan biaya total melewati sel.",
	"@@Least-Cost-Path_Cost-Raster_tag1@@": "Nilai <strong>Raster Biaya</strong> bisa berupa bilangan bulat atau titik mengambang, tetapi tidak bisa negatif atau nol.",
	"@@Least-Cost-Path_Destination-Field_tag0@@": "Kolom digunakan guna mendapatkan nilai untuk lokasi tujuan.",
	"@@Least-Cost-Path_Destination-Raster_tag0@@": "Raster input yang diperlukan untuk mengidentifikasi piksel penentuan jalur dengan biaya terkecil ke sumber yang paling murah. Input ini terdiri dari piksel yang memiliki nilai yang valid, dan piksel lainnya harus ditetapkan ${NoData}. Nilai 0 merupakan nilai yang valid.",
	"@@Least-Cost-Path_Maximum-Distance_tag0@@": "Ambang batas yang tidak dapat dilampaui nilai biaya akumulatif. Jika jarak biaya akumulatif melebihi nilai ini, nilai output untuk lokasi sel adalah ${NoData}. Jarak maksimum menentukan jangkauan untuk jarak biaya akumulatif dihitung. Jarak default adalah untuk jangkauan raster output.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag0@@": "Parameter ini memungkinkan untuk mengontrol mode perjalanan atau besarannya pada sumber. Semakin besar pengganda, semakin besar biaya untuk bergerak melalui setiap sel.",
	"@@Least-Cost-Path_Multiplier-to-Apply-to-Costs_tag1@@": "Nilai harus lebih besar dari nol. Default adalah 1.",
	"@@Least-Cost-Path_Path-Type_tag0@@": "Kata kunci yang menentukan cara penafsiran nilai dan zona pada data tujuan input dalam penghitungan biaya jalur:",
	"@@Least-Cost-Path_Path-Type_tag1@@": "<strong>Single Terbaik</strong>--Untuk semua piksel pada data tujuan input, jalur paling murah berasal dari piksel dengan jalur minimum dengan biaya terkecil ke sel sumber.",
	"@@Least-Cost-Path_Path-Type_tag3@@": "<strong>Setiap Sel</strong>--Jalur dengan biaya terkecil ditentukan untuk setiap piksel dengan nilai yang valid pada data tujuan input, dan disimpan pada raster output. Setiap sel dari data tujuan input ditangani secara terpisah, dan jalur dengan biaya terkecil ditentukan untuk masing-masing sel.",
	"@@Least-Cost-Path_Path-Type_tag5@@": "<strong>Setiap Zona</strong>--Jalur dengan biaya terkecil ditentukan untuk setiap zona pada data tujuan input dan disimpan di raster output. Jalur dengan biaya terkecil untuk setiap zona dimulai pada piksel dengan bobot jarak biaya terendah di zona tersebut.",
	"@@Least-Cost-Path_Source-Raster_tag0@@": "Ini adalah raster input yang diperlukan dalam mengidentifikasi sel atau lokasi yang menjadi tempat penghitungan akumulasi jarak biaya terkecil untuk setiap lokasi sel output.",
	"@@Least-Cost-Path_Start-Cost_tag0@@": "Biaya awal untuk memulai perhitungan biaya. Parameter ini memungkinkan untuk spesifikasi biaya tetap yang terkait dengan sumber. Alih-alih memulai dengan biaya 0, algoritme biaya akan dimulai dengan nilai yang ditentukan.",
	"@@Least-Cost-Path_Start-Cost_tag1@@": "Nilai harus nol atau lebih besar. Default adalah 0.",
	"@@Least-Cost-Path_Travel-Direction_tag0@@": "Menentukan arah wisatawan saat menerapkan tingkat resistansi sumber dan biaya awal sumber.",
	"@@Least-Cost-Path_Travel-Direction_tag1@@": "<strong>Dari Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari sumber input dan pindah ke sel non-sumber. Ini nilai defaultnya.",
	"@@Least-Cost-Path_Travel-Direction_tag3@@": "<strong>Ke Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari setiap sel non-sumber dan kembali ke sumber input.",
	"@@Least-Cost-Path_Travel-Direction_tag5@@": "Tetapkan kata kunci <strong>Dari Sumber</strong> atau <strong>Ke Sumber</strong>, yang akan diterapkan ke semua sumber, atau tentukan kolom di <strong>Raster Sumber</strong> yang berisi kata kunci untuk mengidentifikasi arah perjalanan untuk setiap sumber. Kolom tersebut harus berisi string ${FROM_SOURCE} atau ${TO_SOURCE}.",
	"@@Less-Than_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Less-Than_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Less-Than_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Less-Than_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Less-Than_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Less-Than_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Less-Than_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Less-Than_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Less-Than_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Less-Than_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Less-Than_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Less-Than_Raster_tag0@@": "Input sedang diuji untuk menentukan apakah input tersebut lebih kecil daripada input kedua.",
	"@@Less-Than_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Less-Than_Raster2_tag0@@": "Input yang nantinya diuji dengan input pertama yang lebih kecil.",
	"@@Less-Than_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Less-Than-Equal_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Less-Than-Equal_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Less-Than-Equal_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Less-Than-Equal_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Less-Than-Equal_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Less-Than-Equal_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Less-Than-Equal_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Less-Than-Equal_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Less-Than-Equal_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Less-Than-Equal_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Less-Than-Equal_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Less-Than-Equal_Raster_tag0@@": "Input sedang diuji untuk menentukan apakah input tersebut lebih kecil daripada atau setara dengan input kedua.",
	"@@Less-Than-Equal_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Less-Than-Equal_Raster2_tag0@@": "Input yang nantinya diuji dengan input pertama yang lebih kecil atau setara.",
	"@@Less-Than-Equal_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Ln_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Ln_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Ln_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Ln_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Ln_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Ln_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Ln_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Ln_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Ln_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Ln_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Ln_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Ln_Raster_tag0@@": "Nilai input yang digunakan untuk mencari logaritma natural (Ln).",
	"@@Log10_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Log10_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Log10_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Log10_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Log10_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Log10_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Log10_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Log10_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Log10_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Log10_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Log10_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Log10_Raster_tag0@@": "Nilai input yang digunakan untuk mencari basis 10 logaritma.",
	"@@Log2_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Log2_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Log2_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Log2_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Log2_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Log2_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Log2_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Log2_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Log2_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Log2_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Log2_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Log2_Raster_tag0@@": "Nilai input yang digunakan untuk mencari basis 2 logaritma.",
	"@@Lookup_Field_tag0@@": "Kolom berisi nilai yang diinginkan untuk raster baru.",
	"@@Lookup_Field_tag1@@": "Nilai harus berupa jenis numerik.",
	"@@Lookup_Raster_tag0@@": "Input raster yang berisi bidang yang digunakan untuk membuat raster baru.",
	"@@Lookup_Raster_tag1@@": "Ini dapat berupa jenis bilangan bulat atau titik ambang.",
	"@@Mask_Included-Ranges_tag0@@": "Rentang yang disertakan dapat ditentukan untuk setiap band dengan menentukan nilai minimal dan maksimal; nilai apa pun di luar rentang tersebut akan dikembalikan sebagai ${NoData}. Sebuah piksel akan disertakan jika nilai piksel berada di dalam rentang yang ditentukan. Oleh karena itu, jika band 1 memiliki rentang 5-10 dan band 2 memiliki rentang 15-20, dan nilai piksel untuk band 1 adalah 8, maka piksel ini tidak akan ditutup mask.",
	"@@Mask_NoData-Interpretation_tag0@@": "Ini merujuk pada bagaimana <strong>Nilai ${NoData}</strong> akan berdampak terhadap gambar output.",
	"@@Mask_NoData-Interpretation_tag3@@": "Anda dapat memilih dari dua opsi berikut:",
	"@@Mask_NoData-Interpretation_tag4@@": "<strong>Cocokkan dengan Semua</strong>--Nilai ${NoData} yang Anda tentukan untuk setiap band harus ada di piksel yang sama agar gambar output memuat piksel ${NoData}.",
	"@@Mask_NoData-Interpretation_tag6@@": "<strong>Cocok dengan Sebagian</strong>--Jika nilai ${NoData} yang Anda tentukan muncul untuk suatu piksel dalam band yang ditentukan, maka piksel dalam gambar output akan menjadi ${NoData}. Ini nilai defaultnya.",
	"@@Mask_NoData-Values_tag0@@": "Nilai-nilai NoData dapat ditentukan untuk setiap band. Anda dapat menentukan lebih dari satu nilai dengan memasukkan daftar yang dibatasi ruang.",
	"@@Mask_Raster_tag0@@": "Raster input.",
	"@@Minus_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Minus_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Minus_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Minus_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Minus_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Minus_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Minus_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Minus_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Minus_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Minus_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Minus_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Minus_Raster_tag0@@": "Input yang digunakan untuk mengurangi nilai input kedua.",
	"@@Minus_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Minus_Raster2_tag0@@": "Nilai input untuk mengurangi nilai input pertama.",
	"@@Minus_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@ML-Classify_Raster_tag0@@": "Raster input untuk diklasifikasi dengan menggunakan kemungkinan algoritme klasifikasi yang paling maksimal.",
	"@@ML-Classify_Signature-File-or-URL_tag0@@": "File tanda tangan ${.gsg}.",
	"@@Mod_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Mod_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Mod_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Mod_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Mod_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Mod_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Mod_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Mod_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Mod_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Mod_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Mod_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Mod_Raster_tag0@@": "Input pembilang.",
	"@@Mod_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Mod_Raster2_tag0@@": "Input penyebut.",
	"@@Mod_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Mosaic-Rasters_Operation_tag0@@": "Selesaikan setiap konflik saat bagian dari dua gambar atau lebih yang bertumpang tindih. Opsi meliputi:",
	"@@Mosaic-Rasters_Operation_tag1@@": "<strong>Campuran</strong>--Hitung dan tampilkan rata-rata piksel yang bertumpang tindih dengan memberi bobot lebih besar pada piksel yang lebih mendekati gambar sehingga output yang dihasilkan adalah gambar yang lebih halus. Ini nilai defaultnya.",
	"@@Mosaic-Rasters_Operation_tag3@@": "<strong>Pertama</strong>--Menampilkan piksel dari gambar pertama dalam daftar gambar yang bertumpang tindih dengan area tertentu.",
	"@@Mosaic-Rasters_Operation_tag5@@": "<strong>Terakhir</strong>--Menampilkan piksel dari gambar terakhir dalam daftar gambar yang bertumpang tindih dengan area tertentu.",
	"@@Mosaic-Rasters_Operation_tag7@@": "<strong>Maks</strong>--Menampilkan piksel bernilai tertinggi dari semua layer yang bertumpang tindih. Dengan opsi ini, Anda tidak memiliki jaminan menampilkan piksel hanya dari satu gambar di area yang bertumpang tindih, melainkan kombinasi dari semua layer yang memungkinkan.",
	"@@Mosaic-Rasters_Operation_tag9@@": "<strong>Rata-rata</strong>--Menghitung dan menampilkan rata-rata piksel yang bertumpang tindih.",
	"@@Mosaic-Rasters_Operation_tag11@@": "<strong>Min</strong>--Menampilkan piksel bernilai terendah dari semua layer yang bertumpang tindih. Dengan opsi ini, Anda tidak memiliki jaminan menampilkan piksel hanya dari satu gambar di area yang bertumpang tindih, melainkan kombinasi dari semua layer yang memungkinkan.",
	"@@Mosaic-Rasters_Rasters_tag0@@": "Pilih raster yang ingin Anda rangkai mosaiknya untuk membentuk satu gambar.",
	"@@NDVI_Infrared-Band-ID_tag0@@": "Menentukan ID band yang merepresentasikan bagian inframerah-dekat dari spektrum elektromagnetik.",
	"@@NDVI_Raster_tag0@@": "Raster multispektral input.",
	"@@NDVI_Scientific-Output_tag0@@": "Nilai output akan berkisar antara -1,0 hingga 1,0, yang nantinya dapat digunakan dalam banyak terapan ilmiah.",
	"@@NDVI_Visible-Band-ID_tag0@@": "Menentukan ID band yang merepresentasikan bagian merah dari spektrum elektromagnetik.",
	"@@NDVI-Colorized_Color-Ramp_tag0@@": "Pilih skema warna yang telah ditentukan dari daftar pilihan.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag0@@": "Pilih jenis skema warna yang mana untuk mewarnai output NDVI:",
	"@@NDVI-Colorized_Color-Scheme-Type_tag1@@": "Peta warna--Pilih peta warna yang telah ditentukan dari daftar pilihan. Anda juga dapat menjelajah file peta warna yang ada.",
	"@@NDVI-Colorized_Color-Scheme-Type_tag2@@": "Rangkaian Warna--Pilih skema warna yang telah ditentukan dari daftar pilihan.",
	"@@NDVI-Colorized_Colormap_tag0@@": "Pilih peta warna yang telah ditentukan dari daftar pilihan. Anda dapat menjelajah ke file peta warna yang ada.",
	"@@NDVI-Colorized_Infrared-Band-ID_tag0@@": "Menentukan ID band yang merepresentasikan bagian inframerah-dekat dari spektrum elektromagnetik.",
	"@@NDVI-Colorized_Raster_tag0@@": "Raster multispektral input.",
	"@@NDVI-Colorized_Scientific-Output_tag0@@": "Nilai output akan berkisar antara -1,0 hingga 1,0, yang nantinya dapat digunakan dalam banyak terapan ilmiah.",
	"@@NDVI-Colorized_Visible-Band-ID_tag0@@": "Menentukan ID band yang merepresentasikan bagian merah dari spektrum elektromagnetik.",
	"@@Negate_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Negate_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Negate_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Negate_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Negate_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Negate_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Negate_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Negate_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Negate_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Negate_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Negate_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Negate_Raster_tag0@@": "Raster input yang akan dinegasikan (dikalikan dengan -1).",
	"@@Nibble_Mask-Raster_tag0@@": "Raster input yang diperlukan untuk digunakan sebagai mask.",
	"@@Nibble_Mask-Raster_tag1@@": "Sel dengan nilai NoData akan dikikis di dalam input <strong>Raster</strong>.",
	"@@Nibble_Mask-Raster_tag4@@": "Raster mask dapat berupa jenis bilangan bulat atau titik mengambang.",
	"@@Nibble_Nibble-NoData-cells_tag0@@": "Menentukan apakah sel NoData di raster input akan tetap NoData di output raster.",
	"@@Nibble_Nibble-NoData-cells_tag1@@": "<strong>Tidak</strong>--Menentukan bahwa sel NoData di raster input akan tetap NoData di output. Ini nilai defaultnya.",
	"@@Nibble_Nibble-NoData-cells_tag3@@": "<strong>Ya</strong>--Menentukan bahwa sel NoData di raster input dan di dalam mask dapat dikikis menjadi nilai sel output yang valid.",
	"@@Nibble_Raster_tag0@@": "Raster input yang diperlukan yang akan dikikis.",
	"@@Nibble_Raster_tag1@@": "Input raster dapat berupa jenis bilangan bulat atau titik mengambang.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag0@@": "Menentukan apakah nilai ${NoData} di raster input diizinkan untuk mengikis area yang ditentukan oleh raster mask.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag1@@": "<strong>Ya</strong>--Menentukan bahwa nilai terdekat akan digunakan, baik itu merupakan ${NoData} atau nilai data lain di dalam raster input. Nilai ${NoData} di raster input bebas untuk mengikis area yang ditentukan di dalam mask jika nilanya mendekati. Ini nilai defaultnya.",
	"@@Nibble_Use-NoData-values-if-they-are-the-nearest-neighbor_tag3@@": "<strong>Tidak</strong>--Menentukan bahwa hanya nilai data yang bebas mengikis area yang ditentukan dalam raster mask. Nilai ${NoData} di raster input tidak diizinkan untuk mengikis area yang ditentukan di dalam raster mask sekalipun nilainya mendekati.",
	"@@Nibble_Zone-Raster_tag0@@": "Raster zona input.",
	"@@Nibble_Zone-Raster_tag1@@": "Zona adalah semua sel di dalam raster yang memiliki nilai yang sama, baik bersinggungan atau tidak. Layer zona input menentukan bentuk, nilai, dan lokasi zona. Raster zona dapat berupa jenis bilangan bulat atau titik mengambang.",
	"@@Not-Equal_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Not-Equal_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Not-Equal_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Not-Equal_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Not-Equal_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Not-Equal_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Not-Equal_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Not-Equal_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Not-Equal_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Not-Equal_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Not-Equal_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Not-Equal_Raster_tag0@@": "Input yang akan dibandingkan ketidaksetaraannya dengan input kedua.",
	"@@Not-Equal_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Not-Equal_Raster2_tag0@@": "Input yang akan dibandingkan ketidaksetaraannya dengan input pertama.",
	"@@Not-Equal_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Pansharpening_Multispectral_tag0@@": "Raster multispektral yang ingin Anda pertajam menggunakan band pankromatik.",
	"@@Pansharpening_Panchromatic_tag0@@": "Band raster tunggal beresolusi tinggi yang akan digunakan untuk menajamkan raster multispektral beresolusi rendah.",
	"@@Pansharpening_Pansharpening-Type_tag0@@": "Pilih algoritme penajaman yang ingin Anda gunakan.",
	"@@Pansharpening_Pansharpening-Type_tag1@@": "Brovey--Menggunakan algoritme Brovey berdasarkan pemodelan spektral untuk penggabungan data.",
	"@@Pansharpening_Pansharpening-Type_tag2@@": "Esri--Menggunakan algoritme Esri berdasarkan pemodelan spektral untuk penggabungan data.",
	"@@Pansharpening_Pansharpening-Type_tag3@@": "Gram-Schmidt--Menggunakan algoritme penajam spektral Gram-Schmidt untuk mempertajam data multispektral.",
	"@@Pansharpening_Pansharpening-Type_tag4@@": "IHS--Menggunakan ruang warna Intensitas, Rona, dan Saturasi untuk penggabungan data.",
	"@@Pansharpening_Pansharpening-Type_tag5@@": "Rata-rata--Menggunakan nilai rata-rata antara nilai warna merah, hijau, dan biru, serta nilai piksel pankromatik.",
	"@@Pansharpening_Weights_tag0@@": "Tentukan bobot untuk band merah, hijau, biru, dan inframerah. Semua nilai harus berada dalam kisaran 0 hingga 1.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag0@@": "Parameter ini mensimulasikan peningkatan upaya untuk mengatasi biaya seiring dengan meningkatnya biaya akumulatif. Ini digunakan untuk model kelelahan wisatawan. Biaya akumulatif yang tumbuh untuk mencapai sel dikalikan dengan tingkat resistansi dan ditambahkan ke biaya untuk pindah ke sel berikutnya.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag1@@": "Ini versi modifikasi dari rumus suku bunga majemuk yang digunakan untuk menghitung biaya bergerak melalui sel yang jelas. Ketika nilai tingkat resistansi meningkat, ini meningkatkan biaya sel yang dikunjungi di masa mendatang. Semakin besar tingkat resistansi, semakin tinggi biaya untuk mencapai sel berikutnya, yang ditambah untuk setiap gerakan selanjutnya. Karena tingkat resistansi serupa dengan tingkat gabungan dan umumnya nilai-nilai biaya akumulatif sangat besar, tingkat resitansi yang kecil disarankan, seperti 0,005 atau bahkan lebih kecil, tergantung nilai-nilai biaya akumulatif.",
	"@@Path-Distance_Accumulative-Cost-Resistance-Rate_tag2@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Path-Distance_Capacity_tag0@@": "Menentukan kapasitas biaya untuk wisatawan untuk suatu sumber. Perhitungan biaya berlanjut untuk setiap sumber hingga kapasitas yang ditentukan tercapai.",
	"@@Path-Distance_Capacity_tag1@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Path-Distance_Cost-Raster_tag0@@": "Sebuah raster input yang diperlukan menentukan biaya atau impedansi untuk bergerak secara planimetri melalui setiap sel. Nilai di setiap lokasi sel merepresentasikan jarak biaya-per-unit untuk bergerak melalui sel. Setiap nilai lokasi sel dikalikan dengan resolusi sel, sementara juga mengkompensasi gerakan diagonal untuk mendapatkan biaya total melewati sel.",
	"@@Path-Distance_Cost-Raster_tag1@@": "Nilai <strong>Raster Biaya</strong> bisa berupa bilangan bulat atau titik mengambang, tetapi tidak bisa negatif atau nol.",
	"@@Path-Distance_horizontalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya horizontal dan sudut gerak relatif horizontal (HRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: HF dan HRMA. HF adalah singkatan dari faktor horizontal (horizontal factor), yang menentukan tingkat kesulitan horizontal yang dihadapi ketika pindah dari satu sel ke sel lainnya. HRMA adalah singkatan dari sudut gerak relatif horizontal, yang mengidentifikasi sudut antara arah horizontal dari sel dan arah geraknya.</p><p>Jenis<strong>faktor horizontal</strong>meliputi berikut:</p><ul><li><strong>Biner</strong>--Menunjukkan bahwa jika HRMA kurang dari sudut potong, HF diatur ke nila yang terkait dengan faktor nol; jika tidak, HF diatur ke tak terbatas.</li><li><strong>Maju</strong>--Menentukan bahwa hanya gerakan maju yang diperbolehkan. HRMA harus lebih besar dari atau sama dengan 0 dan kurang dari 90 derajat (0 &lt;= HRMA &lt; 90). Jika HRMA lebih besar dari 0 dan kurang dari 45 derajat, maka HF untuk sel diatur ke nilai yang terkait dengan faktor nol. Jika HRMA lebih besar dari atau sama dengan 45 derajat, nilai pengubah nilai sisi yang digunakan. HF untuk nilai HRMA sama dengan atau lebih besar dari 90 derajat diatur ke tidak terbatas.</li><li><strong>Linear</strong>--Menentukan bahwa HF adalah fungsi linear HRMA.</li><li><strong>Linear Terbalik</strong>--Menentukan bahwa HF adalah fungsi linear terbalik HRMA.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan grafik faktor horizontal yang digunakan untuk menentukan HF.</li></ul><p>Pengubah faktor horizontal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Faktor horizontal yang akan digunakan jika HRMA nol. Faktor ini menempatkan titik potong y untuk fungsi faktor horizontal.</li><li><strong>Sudut potong</strong>--Menentukan sudut HRMA di luar dengan HF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor horizontal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan adalah 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nilai sisi</strong>--Menentukan HF jika HRMA lebih besar dari atau sama dengan 45 derajat dan kurang dari 90 derajat jika faktor horizontal<strong>Maju</strong>ditentukan.</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan HF.</li></ul>",
	"@@Path-Distance_Horizontal-Raster_tag0@@": "Raster yang mendefinisikan arah horizontal di setiap sel.",
	"@@Path-Distance_Horizontal-Raster_tag1@@": "Nilai pada raster harus berupa bilangan bulat yang berkisar dari 0 hingga 360, dengan posisi 0 derajat berada di utara, atau ke arah atas layar, dan selanjutnya bertambah searah jarum jam. Area datar harus diberi nilai -1. Nilai-nilai di setiap lokasi akan digunakan bersama dengan <strong>Faktor horizontal</strong> untuk menentukan biaya horizontal yang dikeluarkan saat berpindah dari sel ke tetangganya.",
	"@@Path-Distance_Maximum-Distance_tag0@@": "Ambang batas yang tidak dapat dilampaui nilai biaya akumulatif. Jika jarak biaya akumulatif melebihi nilai ini, nilai output untuk lokasi sel adalah NoData. Jarak maksimum menentukan jangkauan untuk jarak biaya akumulatif dihitung. Jarak default adalah untuk jangkauan raster output.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag0@@": "Pengganda yang akan diterapkan pada nilai biaya.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag1@@": "Parameter ini memungkinkan untuk mengontrol mode perjalanan atau besarannya pada sumber. Semakin besar pengganda, semakin besar biaya untuk bergerak melalui setiap sel.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag2@@": "Nilai harus lebih besar dari nol. Default adalah 1.",
	"@@Path-Distance_Multiplier-to-Apply-to-Costs_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Path-Distance_Source-Raster_tag0@@": "Raster input yang diperlukan dari lokasi sumber.",
	"@@Path-Distance_Source-Raster_tag1@@": "Ini adalah raster yang mengidentifikasi sel atau lokasi tempat jarak biaya terakumulasi terendah untuk setiap lokasi sel output dihitung.",
	"@@Path-Distance_Source-Raster_tag2@@": "Ini dapat berupa jenis bilangan bulat atau titik mengambang.",
	"@@Path-Distance_Start-Cost_tag0@@": "Biaya awal untuk memulai perhitungan biaya. Parameter ini memungkinkan untuk spesifikasi biaya tetap yang terkait dengan sumber. Alih-alih memulai dengan biaya 0, algoritme biaya akan dimulai dengan nilai yang ditentukan.",
	"@@Path-Distance_Start-Cost_tag1@@": "Nilai harus nol atau lebih besar. Default adalah 0.",
	"@@Path-Distance_Surface-Raster_tag0@@": "Raster yang mendefinisikan nilai elevasi di setiap lokasi sel.",
	"@@Path-Distance_Surface-Raster_tag1@@": "Nilai-nilai ini digunakan untuk menghitung jarak permukaan aktual yang tercakup saat berpindah antar sel.",
	"@@Path-Distance_Travel-Direction_tag0@@": "Menentukan arah wisatawan saat menerapkan tingkat resistansi sumber dan biaya awal sumber.",
	"@@Path-Distance_Travel-Direction_tag1@@": "<strong>Dari Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari sumber input dan pindah ke sel non-sumber. Ini nilai defaultnya.",
	"@@Path-Distance_Travel-Direction_tag3@@": "<strong>Ke Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari setiap sel non-sumber dan kembali ke sumber input.",
	"@@Path-Distance_Travel-Direction_tag5@@": "Tetapkan kata kunci <strong>Dari Sumber</strong> atau <strong>Ke Sumber</strong>, yang akan diterapkan ke semua sumber, atau tentukan kolom di <strong>Raster Sumber</strong> yang berisi kata kunci untuk mengidentifikasi arah perjalanan untuk setiap sumber. Kolom tersebut harus berisi string ${FROM_SOURCE} atau ${TO_SOURCE}.",
	"@@Path-Distance_verticalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya vertikal dan sudut gerak relatif vertikal (VRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: VF dan VRMA. VF adalah singkatan dari faktor vertikal, yang menentukan tingkat kesulitan vertikal yang dihadapi ketika bergerak dari satu sel ke sel lainnya. VRMA adalah singkatan dari sudut gerak relatif vertikal, yang mengidentifikasi sudut kemiringan antara FROM, atau pemrosesan, sel dan sel TO.</p><p>Jenis<strong>faktor vertikal</strong>meliputi hal berikut:</p><ul><li><strong>Biner</strong>--Menentukan bahwa jika VRMA lebih besar dari sudut potong rendah dan lebih kecil dari sudut potong tinggi, VF diatur ke nilai yang berkaitan dengan faktor nol; jika tidak, VF diatur ke tak terbatas.</li><li><strong>Linear</strong>--Menunjukkan bahwa VF adalah fungsi linear VRMA.</li><li><strong>Linear Simetris</strong>--Menentukan bahwa VF adalah fungsi linear VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Linear Terbalik</strong>--Menunjukkan bahwa VF adalah fungsi linear terbalik VRMA.</li><li><strong>Linear Terbalik Simetris</strong>--Menentukan bahwa VF adalah fungsi linear terbalik VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Cos</strong>--Mengidentifikasi VF sebagai fungsi berbasis kosinus VRMA.</li><li><strong>Sec</strong>--Mengidentifikasi VF sebagai fungsi berbasis garis potong VRMA.</li><li><strong>Cos-Sec</strong>--Menentukan bahwa VF adalah fungsi berbasis kosinus VRMA jika VRMA negatif dan fungsi berbasis garis potong VRMA jika VRMA tidak negatif.</li><li><strong>Sec-Cos</strong>--Menentukan bahwa VF adalah fungsi berbasis garis potong VRMA jika VRMA negatif dan fungsi berbasis kosinus VRMA jika VRMA tidak negatif.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan VF.</li></ul><p>Pengubah ke kata kunci vertikal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Menentukan faktor vertikal yang digunakan jika VRMA nol. Faktor ini menempatkan titik potong-y dari fungsi yang ditentukan. Berdasarkan definisinya, faktor nol tidak akan berlaku untuk fungsi vertikal trigonometri (COS, SEC, COS-SEC, atau SEC-COS). Titik potong y ditentukan oleh fungsi ini.</li><li><strong>Sudut Potong rendah</strong>--Menentukan sudut VRMA dibawah dengan VF akan diatur ke tak terbatas.</li><li><strong>Sudut Potong tinggi</strong>--Menentukan sudut VRMA di atas dengan VF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor vertikal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan VF.</li></ul>",
	"@@Path-Distance_Vertical-Raster_tag0@@": "Menentukan hubungan antara faktor biaya vertikal dan sudut pergerakan relatif vertikal (VRMA).",
	"@@Path-Distance_Vertical-Raster_tag1@@": "Nilai digunakan untuk menghitung kemiringan yang digunakan untuk mengidentifikasi faktor vertikal yang terjadi ketika berpindah dari satu sel ke sel lainnya.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag0@@": "Parameter ini mensimulasikan peningkatan upaya untuk mengatasi biaya seiring dengan meningkatnya biaya akumulatif. Ini digunakan untuk model kelelahan wisatawan. Biaya akumulatif yang tumbuh untuk mencapai sel dikalikan dengan tingkat resistansi dan ditambahkan ke biaya untuk pindah ke sel berikutnya.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag1@@": "Ini versi modifikasi dari rumus suku bunga majemuk yang digunakan untuk menghitung biaya bergerak melalui sel yang jelas. Ketika nilai tingkat resistansi meningkat, ini meningkatkan biaya sel yang dikunjungi di masa mendatang. Semakin besar tingkat resistansi, semakin tinggi biaya untuk mencapai sel berikutnya, yang ditambah untuk setiap gerakan selanjutnya. Karena tingkat resistansi serupa dengan tingkat gabungan dan umumnya nilai-nilai biaya akumulatif sangat besar, tingkat resitansi yang kecil disarankan, seperti 0,005 atau bahkan lebih kecil, tergantung nilai-nilai biaya akumulatif.",
	"@@Path-Distance-Allocation_Accumulative-Cost-Resistance-Rate_tag2@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Path-Distance-Allocation_Capacity_tag0@@": "Menentukan kapasitas biaya untuk wisatawan untuk suatu sumber. Perhitungan biaya berlanjut untuk setiap sumber hingga kapasitas yang ditentukan tercapai.",
	"@@Path-Distance-Allocation_Capacity_tag1@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Path-Distance-Allocation_Cost-Raster_tag0@@": "Sebuah raster input yang diperlukan menentukan biaya atau impedansi untuk bergerak secara planimetri melalui setiap sel. Nilai di setiap lokasi sel merepresentasikan jarak biaya-per-unit untuk bergerak melalui sel. Setiap nilai lokasi sel dikalikan dengan resolusi sel, sementara juga mengkompensasi gerakan diagonal untuk mendapatkan biaya total melewati sel.",
	"@@Path-Distance-Allocation_Cost-Raster_tag1@@": "Nilai <strong>Raster Biaya</strong> bisa berupa bilangan bulat atau titik mengambang, tetapi tidak bisa negatif atau nol.",
	"@@Path-Distance-Allocation_horizontalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya horizontal dan sudut gerak relatif horizontal (HRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: HF dan HRMA. HF adalah singkatan dari faktor horizontal (horizontal factor), yang menentukan tingkat kesulitan horizontal yang dihadapi ketika pindah dari satu sel ke sel lainnya. HRMA adalah singkatan dari sudut gerak relatif horizontal, yang mengidentifikasi sudut antara arah horizontal dari sel dan arah geraknya.</p><p>Jenis<strong>faktor horizontal</strong>meliputi berikut:</p><ul><li><strong>Biner</strong>--Menunjukkan bahwa jika HRMA kurang dari sudut potong, HF diatur ke nilai yang terkait dengan faktor nol; jika tidak, HF diatur ke tak terbatas.</li><li><strong>Maju</strong>--Menentukan bahwa hanya gerakan maju yang diperbolehkan. HRMA harus lebih besar dari atau sama dengan 0 dan kurang dari 90 derajat (0 &lt;= HRMA &lt; 90). Jika HRMA lebih besar dari 0 dan kurang dari 45 derajat, maka HF untuk sel diatur ke nilai yang terkait dengan faktor nol. Jika HRMA lebih besar dari atau sama dengan 45 derajat, nilai pengubah nilai sisi yang digunakan. HF untuk nilai HRMA sama dengan atau lebih besar dari 90 derajat diatur ke tidak terbatas.</li><li><strong>Linear</strong>--Menentukan bahwa HF adalah fungsi linear HRMA.</li><li><strong>Linear Terbalik</strong>--Menentukan bahwa HF adalah fungsi linear terbalik HRMA.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan grafik faktor horizontal yang digunakan untuk menentukan HF.</li></ul><p>Pengubah faktor horizontal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Faktor horizontal yang akan digunakan jika HRMA nol. Faktor ini menempatkan titik potong y untuk fungsi faktor horizontal.</li><li><strong>Sudut potong</strong>--Menentukan sudut HRMA di luar dengan HF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor horizontal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan adalah 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nilai sisi</strong>--Menentukan HF jika HRMA lebih besar dari atau sama dengan 45 derajat dan kurang dari 90 derajat jika faktor horizontal<strong>Maju</strong>ditentukan.</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan HF.</li></ul>",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag0@@": "Raster yang mendefinisikan arah horizontal di setiap sel.",
	"@@Path-Distance-Allocation_Horizontal-Raster_tag1@@": "Nilai pada raster harus berupa bilangan bulat yang berkisar dari 0 hingga 360, dengan posisi 0 derajat berada di utara, atau ke arah atas layar, dan selanjutnya bertambah searah jarum jam. Area datar harus diberi nilai -1. Nilai-nilai di setiap lokasi akan digunakan bersama dengan <strong>Faktor horizontal</strong> untuk menentukan biaya horizontal yang dikeluarkan saat berpindah dari sel ke tetangganya.",
	"@@Path-Distance-Allocation_Maximum-Distance_tag0@@": "Ambang batas yang tidak dapat dilampaui nilai biaya akumulatif. Jika jarak biaya akumulatif melebihi nilai ini, nilai output untuk lokasi sel adalah NoData. Jarak maksimum menentukan jangkauan untuk jarak biaya akumulatif dihitung. Jarak default adalah untuk jangkauan raster output.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag0@@": "Pengganda yang akan diterapkan pada nilai biaya.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag1@@": "Parameter ini memungkinkan untuk mengontrol mode perjalanan atau besarannya pada sumber. Semakin besar pengganda, semakin besar biaya untuk bergerak melalui setiap sel.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag2@@": "Nilai harus lebih besar dari nol. Default adalah 1.",
	"@@Path-Distance-Allocation_Multiplier-to-Apply-to-Costs_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Path-Distance-Allocation_Source-Field_tag0@@": "Kolom yang digunakan untuk menetapkan nilai ke lokasi sumber. Kolom tersebut harus berupa jenis bilangan bulat. Jika <strong>Raster Nilai</strong> telah ditetapkan, nilai dalam input tersebut akan diutamakan daripada pengaturan apa pun untuk <strong>Kolom Sumber</strong>.",
	"@@Path-Distance-Allocation_Source-Raster_tag0@@": "Raster input yang diperlukan dari lokasi sumber.",
	"@@Path-Distance-Allocation_Source-Raster_tag1@@": "Ini adalah raster yang mengidentifikasi sel atau lokasi tempat jarak biaya terakumulasi terendah untuk setiap lokasi sel output dihitung.",
	"@@Path-Distance-Allocation_Source-Raster_tag2@@": "Ini dapat berupa jenis bilangan bulat atau titik mengambang.",
	"@@Path-Distance-Allocation_Start-Cost_tag0@@": "Biaya awal untuk memulai perhitungan biaya. Parameter ini memungkinkan untuk spesifikasi biaya tetap yang terkait dengan sumber. Alih-alih memulai dengan biaya 0, algoritme biaya akan dimulai dengan nilai yang ditentukan.",
	"@@Path-Distance-Allocation_Start-Cost_tag1@@": "Nilai harus nol atau lebih besar. Default adalah 0.",
	"@@Path-Distance-Allocation_Surface-Raster_tag0@@": "Raster yang mendefinisikan nilai elevasi di setiap lokasi sel.",
	"@@Path-Distance-Allocation_Surface-Raster_tag1@@": "Nilai-nilai ini digunakan untuk menghitung jarak permukaan aktual yang tercakup saat berpindah antar sel.",
	"@@Path-Distance-Allocation_Travel-Direction_tag0@@": "Menentukan arah wisatawan saat menerapkan tingkat resistansi sumber dan biaya awal sumber.",
	"@@Path-Distance-Allocation_Travel-Direction_tag1@@": "<strong>Dari Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari sumber input dan pindah ke sel non-sumber. Ini nilai defaultnya.",
	"@@Path-Distance-Allocation_Travel-Direction_tag3@@": "<strong>Ke Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari setiap sel non-sumber dan kembali ke sumber input.",
	"@@Path-Distance-Allocation_Travel-Direction_tag5@@": "Tetapkan kata kunci <strong>Dari Sumber</strong> atau <strong>Ke Sumber</strong>, yang akan diterapkan ke semua sumber, atau tentukan kolom di <strong>Raster Sumber</strong> yang berisi kata kunci untuk mengidentifikasi arah perjalanan untuk setiap sumber. Kolom tersebut harus berisi string ${FROM_SOURCE} atau ${TO_SOURCE}.",
	"@@Path-Distance-Allocation_Value-Raster_tag0@@": "Raster bilangan bulat input yang mengidentifikasi nilai zona yang akan digunakan untuk setiap lokasi sumber input. Untuk setiap sel lokasi sumber, nilai yang ditentukan oleh <strong>Raster Nilai</strong> akan ditetapkan ke semua sel yang dialokasikan ke lokasi sumber untuk komputasi. <strong>Raster Nilai</strong> akan diutamakan daripada pengaturan apa pun untuk <strong>Kolom Sumber</strong>.",
	"@@Path-Distance-Allocation_verticalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya vertikal dan sudut gerak relatif vertikal (VRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: VF dan VRMA. VF adalah singkatan dari faktor vertikal, yang menentukan tingkat kesulitan vertikal yang dihadapi ketika bergerak dari satu sel ke sel lainnya. VRMA adalah singkatan dari sudut gerak relatif vertikal, yang mengidentifikasi sudut kemiringan antara FROM, atau pemrosesan, sel dan sel TO.</p><p>Jenis<strong>faktor vertikal</strong>meliputi hal berikut:</p><ul><li><strong>Biner</strong>--Menentukan bahwa jika VRMA lebih besar dari sudut potong rendah dan lebih kecil dari sudut potong tinggi, VF diatur ke nilai yang berkaitan dengan faktor nol; jika tidak, VF diatur ke tak terbatas.</li><li><strong>Linear</strong>--Menunjukkan bahwa VF adalah fungsi linear VRMA.</li><li><strong>Linear Simetris</strong>--Menentukan bahwa VF adalah fungsi linear VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Linear Terbalik</strong>--Menunjukkan bahwa VF adalah fungsi linear terbalik VRMA.</li><li><strong>Linear Terbalik Simetris</strong>--Menentukan bahwa VF adalah fungsi linear terbalik VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Cos</strong>--Mengidentifikasi VF sebagai fungsi berbasis kosinus VRMA.</li><li><strong>Sec</strong>--Mengidentifikasi VF sebagai fungsi berbasis garis potong VRMA.</li><li><strong>Cos-Sec</strong>--Menentukan bahwa VF adalah fungsi berbasis kosinus VRMA jika VRMA negatif dan fungsi berbasis garis potong VRMA jika VRMA tidak negatif.</li><li><strong>Sec-Cos</strong>--Menentukan bahwa VF adalah fungsi berbasis garis potong VRMA jika VRMA negatif dan fungsi berbasis kosinus VRMA jika VRMA tidak negatif.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan VF.</li></ul><p>Pengubah ke kata kunci vertikal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Menentukan faktor vertikal yang digunakan jika VRMA nol. Faktor ini menempatkan titik potong-y dari fungsi yang ditentukan. Berdasarkan definisinya, faktor nol tidak akan berlaku untuk fungsi vertikal trigonometri (COS, SEC, COS-SEC, atau SEC-COS). Titik potong y ditentukan oleh fungsi ini.</li><li><strong>Sudut Potong rendah</strong>--Menentukan sudut VRMA dibawah dengan VF akan diatur ke tak terbatas.</li><li><strong>Sudut Potong tinggi</strong>--Menentukan sudut VRMA di atas dengan VF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor vertikal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan VF.</li></ul>",
	"@@Path-Distance-Allocation_Vertical-Raster_tag0@@": "Menentukan hubungan antara faktor biaya vertikal dan sudut pergerakan relatif vertikal (VRMA).",
	"@@Path-Distance-Allocation_Vertical-Raster_tag1@@": "Nilai digunakan untuk menghitung kemiringan yang digunakan untuk mengidentifikasi faktor vertikal yang terjadi ketika berpindah dari satu sel ke sel lainnya.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag0@@": "Parameter ini mensimulasikan peningkatan upaya untuk mengatasi biaya seiring dengan meningkatnya biaya akumulatif. Ini digunakan untuk model kelelahan wisatawan. Biaya akumulatif yang tumbuh untuk mencapai sel dikalikan dengan tingkat resistansi dan ditambahkan ke biaya untuk pindah ke sel berikutnya.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag1@@": "Ini versi modifikasi dari rumus suku bunga majemuk yang digunakan untuk menghitung biaya bergerak melalui sel yang jelas. Ketika nilai tingkat resistansi meningkat, ini meningkatkan biaya sel yang dikunjungi di masa mendatang. Semakin besar tingkat resistansi, semakin tinggi biaya untuk mencapai sel berikutnya, yang ditambah untuk setiap gerakan selanjutnya. Karena tingkat resistansi serupa dengan tingkat gabungan dan umumnya nilai-nilai biaya akumulatif sangat besar, tingkat resitansi yang kecil disarankan, seperti 0,005 atau bahkan lebih kecil, tergantung nilai-nilai biaya akumulatif.",
	"@@Path-Distance-Back-Link_Accumulative-Cost-Resistance-Rate_tag2@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Path-Distance-Back-Link_Capacity_tag0@@": "Menentukan kapasitas biaya untuk wisatawan untuk suatu sumber. Perhitungan biaya berlanjut untuk setiap sumber hingga kapasitas yang ditentukan tercapai.",
	"@@Path-Distance-Back-Link_Capacity_tag1@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag0@@": "Sebuah raster input yang diperlukan menentukan biaya atau impedansi untuk bergerak secara planimetri melalui setiap sel. Nilai di setiap lokasi sel merepresentasikan jarak biaya-per-unit untuk bergerak melalui sel. Setiap nilai lokasi sel dikalikan dengan resolusi sel, sementara juga mengkompensasi gerakan diagonal untuk mendapatkan biaya total melewati sel.",
	"@@Path-Distance-Back-Link_Cost-Raster_tag1@@": "Nilai <strong>Raster Biaya</strong> bisa berupa bilangan bulat atau titik mengambang, tetapi tidak bisa negatif atau nol.",
	"@@Path-Distance-Back-Link_horizontalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya horizontal dan sudut gerak relatif horizontal (HRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: HF dan HRMA. HF adalah singkatan dari faktor horizontal (horizontal factor), yang menentukan tingkat kesulitan horizontal yang dihadapi ketika pindah dari satu sel ke sel lainnya. HRMA adalah singkatan dari sudut gerak relatif horizontal, yang mengidentifikasi sudut antara arah horizontal dari sel dan arah geraknya.</p><p>Jenis<strong>faktor horizontal</strong>meliputi berikut:</p><ul><li><strong>Biner</strong>--Menunjukkan bahwa jika HRMA kurang dari sudut potong, HF diatur ke nila yang terkait dengan faktor nol; jika tidak, HF diatur ke tak terbatas.</li><li><strong>Maju</strong>--Menentukan bahwa hanya gerakan maju yang diperbolehkan. HRMA harus lebih besar dari atau sama dengan 0 dan kurang dari 90 derajat (0 &lt;= HRMA &lt; 90). Jika HRMA lebih besar dari 0 dan kurang dari 45 derajat, maka HF untuk sel diatur ke nilai yang terkait dengan faktor nol. Jika HRMA lebih besar dari atau sama dengan 45 derajat, nilai pengubah nilai sisi yang digunakan. HF untuk nilai HRMA sama dengan atau lebih besar dari 90 derajat diatur ke tidak terbatas.</li><li><strong>Linear</strong>--Menentukan bahwa HF adalah fungsi linear HRMA.</li><li><strong>Linear Terbalik</strong>--Menentukan bahwa HF adalah fungsi linear terbalik HRMA.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan grafik faktor horizontal yang digunakan untuk menentukan HF.</li></ul><p>Pengubah faktor horizontal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Faktor horizontal yang akan digunakan jika HRMA nol. Faktor ini menempatkan titik potong y untuk fungsi faktor horizontal.</li><li><strong>Sudut potong</strong>--Menentukan sudut HRMA di luar dengan HF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor horizontal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan adalah 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nilai sisi</strong>--Menentukan HF jika HRMA lebih besar dari atau sama dengan 45 derajat dan kurang dari 90 derajat jika faktor horizontal<strong>Maju</strong>ditentukan.</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan HF.</li></ul>",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag0@@": "Raster yang mendefinisikan arah horizontal di setiap sel.",
	"@@Path-Distance-Back-Link_Horizontal-Raster_tag1@@": "Nilai pada raster harus berupa bilangan bulat yang berkisar dari 0 hingga 360, dengan posisi 0 derajat berada di utara, atau ke arah atas layar, dan selanjutnya bertambah searah jarum jam. Area datar harus diberi nilai -1. Nilai-nilai di setiap lokasi akan digunakan bersama dengan <strong>Faktor horizontal</strong> untuk menentukan biaya horizontal yang dikeluarkan saat berpindah dari sel ke tetangganya.",
	"@@Path-Distance-Back-Link_Maximum-Distance_tag0@@": "Ambang batas yang tidak dapat dilampaui nilai biaya akumulatif. Jika jarak biaya akumulatif melebihi nilai ini, nilai output untuk lokasi sel adalah NoData. Jarak maksimum menentukan jangkauan untuk jarak biaya akumulatif dihitung. Jarak default adalah untuk jangkauan raster output.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag0@@": "Pengganda yang akan diterapkan pada nilai biaya.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag1@@": "Parameter ini memungkinkan untuk mengontrol mode perjalanan atau besarannya pada sumber. Semakin besar pengganda, semakin besar biaya untuk bergerak melalui setiap sel.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag2@@": "Nilai harus lebih besar dari nol. Default adalah 1.",
	"@@Path-Distance-Back-Link_Multiplier-to-Apply-to-Costs_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Path-Distance-Back-Link_Source-Raster_tag0@@": "Raster input yang diperlukan dari lokasi sumber.",
	"@@Path-Distance-Back-Link_Source-Raster_tag1@@": "Ini adalah raster yang mengidentifikasi sel atau lokasi tempat jarak biaya terakumulasi terendah untuk setiap lokasi sel output dihitung.",
	"@@Path-Distance-Back-Link_Source-Raster_tag2@@": "Ini dapat berupa jenis bilangan bulat atau titik mengambang.",
	"@@Path-Distance-Back-Link_Start-Cost_tag0@@": "Biaya awal untuk memulai perhitungan biaya. Parameter ini memungkinkan untuk spesifikasi biaya tetap yang terkait dengan sumber. Alih-alih memulai dengan biaya 0, algoritme biaya akan dimulai dengan nilai yang ditentukan.",
	"@@Path-Distance-Back-Link_Start-Cost_tag1@@": "Nilai harus nol atau lebih besar. Default adalah 0.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag0@@": "Raster yang mendefinisikan nilai elevasi di setiap lokasi sel.",
	"@@Path-Distance-Back-Link_Surface-Raster_tag1@@": "Nilai-nilai ini digunakan untuk menghitung jarak permukaan aktual yang tercakup saat berpindah antar sel.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag0@@": "Menentukan arah wisatawan saat menerapkan tingkat resistansi sumber dan biaya awal sumber.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag1@@": "<strong>Dari Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari sumber input dan pindah ke sel non-sumber. Ini nilai defaultnya.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag3@@": "<strong>Ke Sumber</strong>--Rasio resistansi sumber dan biaya awal sumber akan diterapkan mulai dari setiap sel non-sumber dan kembali ke sumber input.",
	"@@Path-Distance-Back-Link_Travel-Direction_tag5@@": "Tetapkan kata kunci <strong>Dari Sumber</strong> atau <strong>Ke Sumber</strong>, yang akan diterapkan ke semua sumber, atau tentukan kolom di <strong>Raster Sumber</strong> yang berisi kata kunci untuk mengidentifikasi arah perjalanan untuk setiap sumber. Kolom tersebut harus berisi string ${FROM_SOURCE} atau ${TO_SOURCE}.",
	"@@Path-Distance-Back-Link_verticalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya vertikal dan sudut gerak relatif vertikal (VRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: VF dan VRMA. VF adalah singkatan dari faktor vertikal, yang menentukan tingkat kesulitan vertikal yang dihadapi ketika bergerak dari satu sel ke sel lainnya. VRMA adalah singkatan dari sudut gerak relatif vertikal, yang mengidentifikasi sudut kemiringan antara FROM, atau pemrosesan, sel dan sel TO.</p><p>Jenis<strong>faktor vertikal</strong>meliputi hal berikut:</p><ul><li><strong>Biner</strong>--Menentukan bahwa jika VRMA lebih besar dari sudut potong rendah dan lebih kecil dari sudut potong tinggi, VF diatur ke nilai yang berkaitan dengan faktor nol; jika tidak, VF diatur ke tak terbatas.</li><li><strong>Linear</strong>--Menunjukkan bahwa VF adalah fungsi linear VRMA.</li><li><strong>Linear Simetris</strong>--Menentukan bahwa VF adalah fungsi linear VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Linear Terbalik</strong>--Menunjukkan bahwa VF adalah fungsi linear terbalik VRMA.</li><li><strong>Linear Terbalik Simetris</strong>--Menentukan bahwa VF adalah fungsi linear terbalik VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Cos</strong>--Mengidentifikasi VF sebagai fungsi berbasis kosinus VRMA.</li><li><strong>Sec</strong>--Mengidentifikasi VF sebagai fungsi berbasis garis potong VRMA.</li><li><strong>Cos-Sec</strong>--Menentukan bahwa VF adalah fungsi berbasis kosinus VRMA jika VRMA negatif dan fungsi berbasis garis potong VRMA jika VRMA tidak negatif.</li><li><strong>Sec-Cos</strong>--Menentukan bahwa VF adalah fungsi berbasis garis potong VRMA jika VRMA negatif dan fungsi berbasis kosinus VRMA jika VRMA tidak negatif.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan VF.</li></ul><p>Pengubah ke kata kunci vertikal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Menentukan faktor vertikal yang digunakan jika VRMA nol. Faktor ini menempatkan titik potong-y dari fungsi yang ditentukan. Berdasarkan definisinya, faktor nol tidak akan berlaku untuk fungsi vertikal trigonometri (COS, SEC, COS-SEC, atau SEC-COS). Titik potong y ditentukan oleh fungsi ini.</li><li><strong>Sudut Potong rendah</strong>--Menentukan sudut VRMA dibawah dengan VF akan diatur ke tak terbatas.</li><li><strong>Sudut Potong tinggi</strong>--Menentukan sudut VRMA di atas dengan VF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor vertikal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan VF.</li></ul>",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag0@@": "Menentukan hubungan antara faktor biaya vertikal dan sudut pergerakan relatif vertikal (VRMA).",
	"@@Path-Distance-Back-Link_Vertical-Raster_tag1@@": "Nilai digunakan untuk menghitung kemiringan yang digunakan untuk mengidentifikasi faktor vertikal yang terjadi ketika berpindah dari satu sel ke sel lainnya.",
	"@@Plus_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Plus_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Plus_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Plus_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Plus_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Plus_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Plus_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Plus_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Plus_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Plus_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Plus_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Plus_Raster_tag0@@": "Input yang nilainya akan ditambahkan.",
	"@@Plus_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Plus_Raster2_tag0@@": "Input yang nilainya akan ditambahkan ke input pertama.",
	"@@Plus_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Local_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Local_Cellsize-Type_tag1@@": "Pertama dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Local_Cellsize-Type_tag2@@": "Terakhir dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Local_Cellsize-Type_tag3@@": "Maksimum dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Local_Cellsize-Type_tag4@@": "Rata-rata dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Local_Cellsize-Type_tag5@@": "Minimum dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Local_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Local_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Local_Extent-Type_tag2@@": "Perpotongan dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Local_Extent-Type_tag3@@": "Terakhir dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Local_Extent-Type_tag4@@": "Himpunan dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Local_Raster_tag0@@": "Input yang nilainya akan ditambahkan.",
	"@@Local_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Local_Raster2_tag0@@": "Input yang nilainya akan ditambahkan ke input pertama.",
	"@@Local_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Local_False-Raster_tag0@@": "Input yang nilainya akan digunakan sebagai nilai piksel output jika kondisinya salah. Ini bisa berupa bilangan bulat, raster titik mengambang, atau nilai konstan.",
	"@@Local_True-Raster_tag0@@": "Input yang nilainya akan digunakan sebagai nilai piksel output jika kondisinya benar. Ini bisa berupa bilangan bulat, raster titik mengambang, atau nilai konstan.",
	"@@Power_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Power_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Power_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Power_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Power_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Power_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Power_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Power_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Power_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Power_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Power_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Power_Raster_tag0@@": "Nilai input akan dinaikkan dengan kekuatan oleh <strong>Raster2</strong>.",
	"@@Power_Raster_tag3@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Power_Raster2_tag0@@": "Input yang menentukan kekuatan untuk nilai <strong>Raster</strong> mana yang akan dinaikkan.",
	"@@Power_Raster2_tag3@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Radar-Calibration_Calibration-Type_tag0@@": "Jenis kalibrasi yang akan dilakukan.",
	"@@Radar-Calibration_Calibration-Type_tag1@@": "Beta-nought--Fungsi mengembalikan reflektivitas radar per satuan luas dalam rentang miring. Ini adalah tipe kalibrasi standar.",
	"@@Radar-Calibration_Calibration-Type_tag2@@": "Sigma-nought--Fungsi mengembalikan reflektivitas radar per satuan luas dalam rentang dataran. Hasilnya adalah nilai titik mengambang 32 bit yang umumnya berada di rentang 0,0 hingga 1,0. Tidak ada pemotongan data yang dilakukan jika opsi ini dipilih.",
	"@@Radar-Calibration_Calibration-Type_tag3@@": "Gamma--Fungsi mengembalikan reflektivitas radar per satuan luas pada bidang yang tegak lurus dengan arah pengukuran.",
	"@@Radar-Calibration_Calibration-Type_tag4@@": "Tidak ada",
	"@@Radar-Calibration_Raster_tag0@@": "Raster input.",
	"@@RasterInfo_Raster-Info_tag0@@": "Pilih set data raster yang akan digunakan sebagai template",
	"@@RasterInfo_Raster_tag0@@": "Raster input.",
	"@@Rasterize-Attributes_Attribute-Field-Names_tag0@@": "Daftar kolom di <strong>Tabel Atribut Zonal</strong>, tempat setiap kolom dipisahkan oleh koma. Nilai di setiap kolom akan direpresentasikan oleh sebuah band di raster output.",
	"@@Rasterize-Attributes_Background-Value_tag0@@": "Nilai piksel awal pada band output di dalam raster sebelum dipetakan ulang.",
	"@@Rasterize-Attributes_Background-Value_tag1@@": "Jika suatu piksel tidak termasuk di dalam zona, maka piksel tersebut akan tetap ada sebagai nilai latar belakang.",
	"@@Rasterize-Attributes_Value-Raster_tag0@@": "Raster input yang diperlukan.",
	"@@Rasterize-Attributes_Value-Raster_tag1@@": "Input harus berupa raster band tunggal. Jika raster multiband digunakan, maka hanya band pertama yang akan digunakan.",
	"@@Rasterize-Attributes_Where-Clause_tag0@@": "Kueri tambahan opsional diterapkan pada <strong>Tabel Atribut Zonal</strong>.",
	"@@Rasterize-Attributes_Where-Clause_tag3@@": "Jika Anda menggunakan tabel di atas sebagai contoh, maka kueri adalah ${Variable1 = 'bare earth'}.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag0@@": "Atribut zona ditentukan sebagai jalur ke kelas fitur lokal, jalur ke tabel, URL ke feature service layer, atau string JSON.",
	"@@Rasterize-Attributes_Zonal-Attributes-Table_tag1@@": "Di JSON, ini digambarkan sebagai kumpulan pemetaan dari ID zona ke susunan bilangan bulat. ${{ zoneId:[f1,f2,...,fn], ... } }",
	"@@Rasterize-Attributes_Zone-Field_tag0@@": "Nama bidang yang berisi nilai ID zona.",
	"@@Rasterize-Attributes_Zone-Raster_tag0@@": "Raster band tunggal opsional tempat setiap piksel berisi ID zona yang terkait dengan lokasi. ID zona digunakan untuk mencari baris dalam tabel atribut zona untuk konsumsi spesifik zona.",
	"@@Rasterize-Attributes_Zone-Raster_tag1@@": "Biarkan parameter ini tidak ditentukan jika Anda hanya ingin mengimpor atribut.",
	"@@Rasterize-Features_Field_tag0@@": "Pilih bidang yang akan digunakan untuk mengidentifikasi setiap fitur.",
	"@@Rasterize-Features_Input-Features_tag0@@": "Pilih kelas fitur untuk dikonversi menjadi format raster.",
	"@@Rasterize-Features_Raster_tag0@@": "Pilih raster untuk menentukan ukuran dan jangkauan sel untuk konversi fitur.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag0@@": "Tentukan cara mengelola fitur yang bertumpang tindih:",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag1@@": "<strong>Pertama</strong>--Bidang yang bertumpang tindih akan diberi nilai dari set data pertama yang tercantum.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag3@@": "<strong>Terakhir</strong>--Bidang yang bertumpang tindih akan diberi nilai dari set data terakhir yang tercantum.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag5@@": "<strong>Terkecil</strong>--Bidang yang bertumpang tindih akan diberi nilai dari fitur yang lebih kecil.",
	"@@Rasterize-Features_Resolve-Overlap-Method_tag7@@": "<strong>Terbesar</strong>--Bidang yang bertumpang tindih akan diberi nilai dari fitur yang lebih besar.",
	"@@Recast_Overrides_tag0@@": "Tabel nama variabel dan nilai yang ditentukan pengguna yang digunakan untuk mengubah set data mosaik.",
	"@@Recast_Raster_tag0@@": "Produk raster tempat fungsi Susun Kembali akan diterapkan.",
	"@@Region-Group_Add-Link_tag0@@": "Menentukan apakah bidang tautan ditambahkan ke tabel output.",
	"@@Region-Group_Add-Link_tag1@@": "<strong>Tambahkan Tautan</strong>--Item ${LINK} item akan ditambahkan ke tabel raster output.",
	"@@Region-Group_Add-Link_tag3@@": "<strong>Tidak Ada Tautan</strong>--Tabel atribut untuk raster output hanya akan berisi item ${Value} dan ${Count}.",
	"@@Region-Group_Excluded-Value_tag0@@": "Mengidentifikasi nilai sedemikian rupa sehingga jika lokasi sel berisi nilai tersebut, tidak ada konektivitas spasial yang akan dievaluasi, tanpa memperhitungkan bagaimana jumlah sekitarnya ditentukan (EMPAT atau DELAPAN).",
	"@@Region-Group_Excluded-Value_tag1@@": "Sel dengan nilai yang dikecualikan akan diperlakukan sebagai NoData dan dihilangkan dari penghitungan. Lokasi sel yang berisi nilai yang dikecualikan akan menerima 0 pada raster output.",
	"@@Region-Group_Excluded-Value_tag2@@": "Nilai yang dikecualikan serupa dengan konsep nilai latar belakang, atau yang menggunakan mask. Nilai harus ditentukan untuk parameter ini jika parameter <strong>${CROSS}</strong> ditentukan.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag0@@": "Jumlah sel di sekitar yang digunakan dalam mengevaluasi konektivitas antar sel.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag1@@": "<strong>EMPAT</strong>--Menentukan konektivitas antar sel dengan nilai yang sama hanya jika sel langsung ke arah kiri, kanan, atas, atau di bawah keempat daerah sekitar terdekat. Ini nilai defaultnya.",
	"@@Region-Group_Number-of-Neighbor-Cells_tag3@@": "<strong>DELAPAN</strong>--Menentukan konektivitas antar sel-sel dengan nilai yang sama jika sel tersebut berada dalam lingkungan delapan sel langsung. Ini termasuk arah ke kanan, kiri, atas, atau diagonal.",
	"@@Region-Group_Zone-Connectivity_tag0@@": "Menentukan nilai sel mana yang harus dipertimbangkan saat menguji konektivitas.",
	"@@Region-Group_Zone-Connectivity_tag1@@": "<strong>DALAM</strong>--Menguji konektivitas antar nilai input yang sama dalam zona yang sama. Ini nilai defaultnya.",
	"@@Region-Group_Zone-Connectivity_tag3@@": "Satu-satunya sel yang dapat dikelompokkan adalah sel dari zona yang sama (nilai), yang memenuhi persyaratan spasial konektivitas yang ditentukan oleh parameter <strong>Jumlah lingkungan</strong> (empat arah atau delapan arah).",
	"@@Region-Group_Zone-Connectivity_tag6@@": "<strong>CROSS</strong>--Menguji konektivitas dengan persyaratan spasial yang ditentukan oleh jumlah parameter sekitar antar sel dengan nilai apa pun, kecuali untuk nilai yang diidentifikasi agar dikecualikan oleh parameter nilai yang dikecualikan.",
	"@@Region-Group_Zone-Connectivity_tag8@@": "Saat opsi ini digunakan, nilai untuk parameter <strong>Nilai yang dikecualikan</strong> harus ditentukan.",
	"@@Region-Group_Zone-Raster_tag0@@": "Raster input yang diperlukan yang memiliki wilayah terhubung unik akan diidentifikasi.",
	"@@Region-Group_Zone-Raster_tag1@@": "Input itu harus berjenis bilangan bulat.",
	"@@Region-Grow_Fill-Value-Field_tag0@@": "Bidang dalam tabel atribut yang menentukan nilai isian untuk kelompok piksel. Dalam gambar multiband, semua band akan diberi nilai ini.",
	"@@Region-Grow_Max-Growth-Radius-Field_tag0@@": "Bidang dalam tabel atribut yang menentukan radius pertumbuhan maksimum, dalam satuan referensi spasial gambar.",
	"@@Region-Grow_Raster_tag0@@": "Raster tempat Anda ingin menjalankan fungsi ini.",
	"@@Region-Grow_Seed-Points_tag0@@": "Titik yang menampilkan kelas, berfungsi sebagai sumber awal untuk algoritme. Setiap titik sumber sesuai dengan satu entri dalam tabel atribut, yang membawa radius pertumbuhan maksimum, ambang batas kesamaan, dan informasi nilai isian.",
	"@@Region-Grow_Similarity-Threshold-Field_tag0@@": "Bidang dalam tabel atribut yang menentukan ambang batas kesamaan, sebagai jarak Euclidean dalam ruang spektral.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag0@@": "Nilai yang hilang di tabel klasifikasi ulang dapat mempertahankan nilainya atau dipetakan ulang ke NoData.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag1@@": "Tidak dicentang--Setiap piksel dari raster input yang tidak diklasifikasi ulang dalam tabel pemetaan ulang akan mempertahankan nilainya dan ditulis untuk lokasinya ke raster output. Ini adalah default.",
	"@@Remap_Allow-Unmatched-Pixel-Values_tag2@@": "Dicentang--Setiap piksel dari raster input yang tidak diklasifikasi ulang dalam tabel pemetaan ulang, nilainya akan dipetakan ulang ke NoData untuk lokasinya ke raster output.",
	"@@Remap_Input-Field_tag0@@": "Pilih bidang yang menentukan nilai piksel input yang akan dipetakan ulang.",
	"@@Remap_Input-Field_tag1@@": "Jika tabel Anda memiliki rentang nilai, ini akan menjadi kolom nilai minimum, dan parameter <strong>Kolom Maks Input</strong> perlu ditentukan juga.",
	"@@Remap_Input-Max-Field_tag0@@": "Pilih bidang nilai maksimum jika tabel Anda menentukan rentang nilai.",
	"@@Remap_List_tag0@@": "Tentukan nilai peta dan tentukan rentang nilai minimum dan maksimum serta nilai pemetaan ulang yang baru. Selain itu, rentang nilai dapat ditetapkan sebagai piksel NoData.",
	"@@Remap_Output-Field_tag0@@": "Pilih bidang yang akan digunakan sebagai nilai output pemetaan ulang.",
	"@@Remap_Raster_tag0@@": "Raster input.",
	"@@Remap_Remap-Definition-Type_tag0@@": "Pilih opsi yang ingin Anda gunakan untuk mengatur nilai pemetaan ulang:",
	"@@Remap_Remap-Definition-Type_tag1@@": "Daftar--Menentukan rentang nilai piksel untuk dipetakan ke nilai piksel output",
	"@@Remap_Remap-Table-Type_tag0@@": "Pilih tipe tabel yang akan digunakan untuk memetakan ulang raster input Anda:",
	"@@Remap_Remap-Table-Type_tag1@@": "Sederhana - Menggunakan input <strong>Tabel Pemetaan Ulang</strong> untuk memetakan ulang nilai piksel <strong>Kolom Input</strong> ke nilai yang sesuai di parameter <strong>Kolom Output</strong>. Metode ini membuat cache tabel pemetaan ulang sehingga bisa berjalan lebih cepat.",
	"@@Remap_Remap-Table-Type_tag8@@": "Dinamis--Metode ini tidak membuat cache tabel pemetaan ulang dan akan membuat kueri setiap kali permintaan dibuat (geser, zoom, atau muat ulang). Jika tabel berubah, permintaan berikutnya dapat memetakan nilai secara dinamis.",
	"@@Remap_Remap-Table-Type_tag9@@": "Penetapan ulang--Tabel spesifik yang digunakan untuk proses klasifikasi ulang, di mana setiap baris dalam tabel hanya akan memetakan berdasarkan setiap batas fitur.",
	"@@Remap_Remap-Table_tag0@@": "Telusuri ke tabel yang menetapkan nilai pemetaan ulang Anda.",
	"@@Reproject_Raster_tag0@@": "Set data raster yang akan diproyeksi ulang atau disampling ulang.",
	"@@Reproject_Spatial-Reference_tag0@@": "Sistem koordinat yang digunakan untuk memproyeksi ulang data.",
	"@@Reproject_X-Cellsize_tag0@@": "Dimensi x tempat data yang sampelnya harus diambil ulang. Ini bersifat opsional. Jika nilainya 0 atau kurang, amplop output (jangkauan dan ukuran sel) dihitung dari raster input.",
	"@@Reproject_X-Registration-Point_tag0@@": "Koordinat-x yang digunakan untuk menentukan sudut kiri atas set data. Koordinat ini harus ditentukan dalam satuan referensi spasial baru. Jika parameter <strong>Ukuran Sel X</strong> dan <strong>Ukuran Sel Y</strong> lebih besar dari 0, parameter tersebut digunakan bersama dengan <strong>Poin Pendaftaran X</strong> dan <strong>Parameter Registrasi Y</strong> untuk menentukan amplop output.",
	"@@Reproject_Y-Cellsize_tag0@@": "Dimensi y tempat data harus disampling ulang. Ini bersifat opsional. Jika nilainya 0 atau kurang, amplop output (jangkauan dan ukuran sel) dihitung dari raster input.",
	"@@Reproject_Y-Registration-Point_tag0@@": "Koordinat-y yang digunakan untuk menentukan sudut kiri atas set data. Koordinat ini harus ditentukan dalam satuan referensi spasial baru. Jika parameter <strong>Ukuran Sel X</strong> dan <strong>Ukuran Sel Y</strong> lebih besar dari 0, parameter tersebut digunakan bersama dengan <strong>Poin Pendaftaran X</strong> dan <strong>Parameter Registrasi Y</strong> untuk menentukan amplop output.",
	"@@Resample_Input-Cellsize_tag0@@": "Ukuran sel piksel dari raster input.",
	"@@Resample_Output-Cellsize_tag0@@": "Ukuran sel piksel dari raster output. Ukuran sel dapat diubah, tetapi jangkauan set data raster akan tetap sama. Sampling ulang dari ukuran sel yang ditentukan pengguna bisa jauh lebih lambat daripada default sistem, karena sampling ulang default sistem memproses sejumlah minimum data dari resolusi terdekat yang mungkin diambil.",
	"@@Resample_Raster_tag0@@": "Raster input yang akan disampling ulang.",
	"@@Resample_Resampling-Type_tag0@@": "<strong>Lingkungan Terdekat</strong>--Menghitung nilai piksel output menggunakan piksel input terdekat. Piksel NoData akan tetap tidak berubah dalam set data raster output. Ini nilai defaultnya.",
	"@@Resample_Resampling-Type_tag2@@": "<strong>Interpolasi Bilinear</strong>--Menghitung nilai piksel menggunakan nilai jarak dengan pembobotan dari empat piksel terdekat. Metode ini efisien untuk diproses secara komputasi.",
	"@@Resample_Resampling-Type_tag4@@": "<strong>Konvolusi Kubik</strong>--Menentukan nilai baru suatu piksel berdasarkan pada penyesuaian kurva halus melalui 16 pusat piksel input terdekat.",
	"@@Resample_Resampling-Type_tag6@@": "<strong>Mayoritas</strong>--Menghitung nilai piksel menggunakan nilai piksel mayoritas dalam 16 piksel terdekat. Piksel NoData akan tetap tidak berubah dalam set data raster output.",
	"@@Resample_Resampling-Type_tag8@@": "<strong>Interpolasi Bilinear Plus</strong>--Menggunakan <strong>Interpolasi Bilinear</strong>, kecuali piksel di sepanjang tepi yang ditentukan sebagai NoData dan tidak direplikasi atau dipertimbangkan dalam penghitungan. Gunakan <strong>Interpolasi Bilinear Plus</strong> untuk data ubin karena tepinya akan lebih cocok.",
	"@@Resample_Resampling-Type_tag14@@": "<strong>Gauss Blur</strong>--Menerapkan konvolusi Gaussian ke raster sumber dan menghitung nilai piksel menggunakan nilai jarak dengan pembobotan empat piksel terdekat dari raster kabur. Sangat tepat untuk menghapus derau dalam data yang disampling ulang dan untuk pengambilan sampel dengan ukuran piksel yang lebih besar.",
	"@@Resample_Resampling-Type_tag16@@": "<strong>Gauss Blur Plus</strong>--Menggunakan metode yang sama dengan <strong>Gauss Blur</strong>, kecuali piksel di sepanjang tepi yang ditentukan sebagai NoData dan tidak direplikasi atau dipertimbangkan dalam penghitungan. Gunakan <strong>Gauss Blur Plus</strong> untuk data ubin karena tepinya akan lebih cocok.",
	"@@Resample_Resampling-Type_tag22@@": "<strong>Rata-rata</strong>--Menghitung nilai piksel menggunakan nilai rata-rata semua piksel yang bertumpang tindih, untuk setiap piksel target.",
	"@@Resample_Resampling-Type_tag24@@": "<strong>Minimum</strong>--Menghitung nilai piksel menggunakan nilai minimum semua piksel yang bertumpang tindih. Piksel NoData akan tetap tidak berubah dalam set data raster output.",
	"@@Resample_Resampling-Type_tag26@@": "<strong>Maksimum</strong>--Cocok untuk data berkelanjutan, nilai ini menghasilkan gambar output yang lebih halus daripada metode sampling ulang Lingkungan Terdekat.",
	"@@Resample_Resampling-Type_tag28@@": "<strong>Rata-rata Vektor</strong>--Menghitung vektor rata-rata dari besaran-arah menggunakan semua piksel yang terlibat. Metode ini hanya berlaku untuk raster dua band yang merepresentasikan besaran dan arah. Terlebih dahulu mengubah besaran-arah menjadi U-V, dan kemudian mengambil rata-rata aritmatika di semua piksel yang terlibat untuk mendapatkan U-V dari piksel target dan mengubahnya kembali ke besaran-arah.",
	"@@Round-Down_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Round-Down_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Round-Down_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Round-Down_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Round-Down_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Round-Down_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Round-Down_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Round-Down_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Round-Down_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Round-Down_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Round-Down_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Round-Down_Raster_tag0@@": "Nilai input yang akan dibulatkan ke bawah.",
	"@@Round-Up_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Round-Up_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Round-Up_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Round-Up_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Round-Up_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Round-Up_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Round-Up_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Round-Up_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Round-Up_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Round-Up_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Round-Up_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Round-Up_Raster_tag0@@": "Nilai input yang akan dibulatkan.",
	"@@Segment-Mean-Shift_Minimum-Segment-Size-in-Pixels_tag0@@": "Ukuran segmen minimum, diukur dalam piksel. Nilai ini terkait dengan satuan pemetaan minimum Anda, dan akan menyaring blok piksel yang lebih kecil. Semua segmen yang lebih kecil dari nilai yang ditentukan akan menggabungkan segmen yang lebih kecil dengan segmen sekitar yang paling sesuai.",
	"@@Segment-Mean-Shift_Raster_tag0@@": "Raster input yang akan disegmentasi.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag0@@": "Batas segmen digambar sebagai garis kontur hitam di sekitar setiap segmen. Ini sangat membantu sehingga Anda dapat membedakan segmen berdekatan yang memiliki warna serupa.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag1@@": "Tidak dicentang--Batas segmen tidak ditampilkan. Ini adalah default.",
	"@@Segment-Mean-Shift_Segment-boundaries-only_tag2@@": "Dicentang--Batas segmen ditampilkan dengan garis kontur hitam di sekitar setiap segmen.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag0@@": "Tingkat kepentingan relatif memisahkan objek berdasarkan karakteristik spasial.",
	"@@Segment-Mean-Shift_Spatial-Detail_tag1@@": "Nilai bilangan bulat yang valid berkisar dari 1 hingga 20. Nilai yang lebih kecil menghasilkan kelas yang luas dan lebih halus. Nilai yang lebih tinggi cocok untuk membedakan antar fitur yang kecil secara spasial dan terkluster bersamaan. Contohnya, dalam scene perkotaan, Anda dapat mengklasifikasikan fitur permukaan keras menggunakan nilai detail spasial yang lebih kecil, atau Anda dapat mengklasifikasikan gedung dan jalan sebagai kelas yang terpisah menggunakan detail spasial lebih tinggi.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag0@@": "Tingkat kepentingan relatif memisahkan objek berdasarkan karakteristik warna.",
	"@@Segment-Mean-Shift_Spectral-Detail_tag1@@": "Nilai titik mengambang berkisar dari 1,0 hingga 20,0. Nilai yang lebih kecil menghasilkan kelas yang luas dan lebih halus. Nilai yang lebih tinggi sesuai ketika Anda ingin membedakan antar fitur yang memiliki karakteristik spektral yang agak mirip. Misalnya, menggunakan nilai detail spektral yang lebih tinggi dalam scene hutan membuat Anda dapat membedakan spesies pohon yang berbeda dengan lebih baik.",
	"@@Segment-Mean-Shift_maximumsegmentsizeinpixels_tag0@@": "<p>Ukuran segmen maksimal. Segmen yang lebih besar dari ukuran yang ditentukan akan dibagi. Gunakan parameter ini untuk mencegah artefak dalam layer output agar tidak dihasilkan dari segmen yang lebih besar. Default adalah -1.</p>",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag0@@": "Pilih satu dari empat tipe kalibrasi:",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag1@@": "<strong>Beta nought</strong>--Menghasilkan output yang mengandung koefisien kecerahan radar.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag3@@": "<strong>Sigma nought</strong>--hambur balik ke antena dari luas satuan di tanah, terkait dengan rentang tanah.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag5@@": "<strong>Gamma</strong>--pengukuran energi yang dipancarkan dan dikembalikan yang berguna untuk menentukan pola antena.",
	"@@Sentinel-1-Radiometric-Calibration_Calibration-Type_tag7@@": "<strong>Tidak ada</strong>--jangan terapkan koreksi. Ini nilai defaultnya.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag0@@": "Raster input Sentinel-1 Level-1 GRD atau SLC yang ingin Anda proses.",
	"@@Sentinel-1-Radiometric-Calibration_Raster_tag1@@": "Fungsi tersebut akan menggunakan file LUT untuk menerapkan koreksi termal atau untuk menghapus koreksi, bergantung pada konten LUT.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag0@@": "Raster input Sentinel-1 yang ingin Anda proses.",
	"@@Sentinel-1-Thermal-Noise-Removal_Raster_tag1@@": "Fungsi tersebut akan menggunakan file LUT untuk menerapkan koreksi termal atau menghapus koreksi, bergantung pada konten LUT.",
	"@@Set-Null_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Set-Null_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Set-Null_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Set-Null_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Set-Null_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Set-Null_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Set-Null_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Set-Null_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Set-Null_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Set-Null_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Set-Null_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Set-Null_False-Raster_tag0@@": "Input yang nilainya akan digunakan sebagai nilai piksel output jika kondisinya salah. Ini bisa berupa bilangan bulat, raster titik mengambang, atau nilai konstan.",
	"@@Set-Null_Raster_tag0@@": "Raster input yang merepresentasikan hasil Boolean dari fungsi raster matematika logis. Nilai akan berupa 1 (untuk benar) atau 0 (untuk salah). Ini bisa berupa integer atau raster titik mengambang.",
	"@@Shaded-Relief_Altitude_tag0@@": "Ketinggian adalah sudut elevasi matahari di atas cakrawala yang berkisar antara 0 hingga 90 derajat. Nilai 0 derajat menunjukkan bahwa matahari berada di cakrawala, yaitu pada bidang horizontal yang sama dengan kerangka acuan. Nilai 90 derajat menunjukkan bahwa matahari berada tepat di atas kepala. Defaultnya adalah 45 derajat di atas cakrawala.",
	"@@Shaded-Relief_Azimuth_tag0@@": "Azimut adalah posisi relatif matahari di sepanjang cakrawala (dalam derajat). Posisi ini ditunjukkan oleh sudut matahari yang diukur searah jarum jam dari arah utara. Azimut 0 derajat menandakan arah utara, arah timur adalah 90 derajat, selatan 180 derajat, dan barat 270 derajat.",
	"@@Shaded-Relief_Color-Scheme-Type_tag0@@": "Menentukan apakah rangkaian warna atau peta warna akan digunakan untuk menampilkan relief berbayang.",
	"@@Shaded-Relief_Color-Scheme-Type_tag1@@": "<strong>Rampa Warna</strong>--Saat Anda memilih <strong>Rampa Warna</strong>, Anda akan diminta untuk memilih rangkaian warna yang sesuai.",
	"@@Shaded-Relief_Color-Scheme-Type_tag5@@": "<strong>Peta Warna</strong>--Saat Anda memilih <strong>Peta Warna</strong>, Anda akan diminta untuk menentukan file peta warna yang akan digunakan.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag0@@": "Menentukan apakah interpolasi piksel tepi default akan dinonaktifkan.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag1@@": "Tidak dicentang--Sampling ulang bilinear akan diterapkan secara seragam untuk melakukan sampling ulang relief berbayang. Ini adalah default.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag2@@": "Dicentang--Sampling ulang bilinear akan digunakan di dalam relief berbayang, kecuali di sepanjang tepi raster atau di samping piksel NoData. Piksel ini akan diisi dengan NoData, karena akan mengurangi efek tepi tajam yang mungkin terjadi.",
	"@@Shaded-Relief_Disable-default-edge-pixel-interpolation_tag3@@": "Dengan menggunakan opsi ini akan menghindari artefak sampling ulang yang mungkin terjadi di sepanjang tepi raster. Piksel output di sepanjang tepi raster atau di samping piksel tanpa nilai akan diisi dengan NoData; Oleh karena itu, direkomendasikan bahwa opsi ini hanya digunakan ketika tersedia raster lain dengan piksel yang bertumpang tindih. Ketika tersedia piksel yang bertumpang tindih, area NoData ini akan menampilkan nilai piksel yang bertumpang tindih dan bukan kosong.",
	"@@Shaded-Relief_Raster_tag0@@": "Raster elevasi input.",
	"@@Shaded-Relief_Scaling_tag0@@": "Hasil yang diarsir diskalakan secara dinamis dengan menyesuaikan faktor z menggunakan salah satu dari dua opsi berikut:",
	"@@Shaded-Relief_Scaling_tag1@@": "<strong>Tidak Ada</strong>--Tidak ada penskalaan yang diterapkan. Ini ideal untuk set data raster tunggal yang mencakup area lokal. Ini tidak direkomendasikan untuk set data di seluruh dunia yang memiliki variasi besar dalam elevasi atau peta berskala banyak karena akan menghasilkan relief medan dengan sedikit variasi pada skala kecil.",
	"@@Shaded-Relief_Scaling_tag3@@": "<strong>Disesuaikan</strong>--Penyesuaian nonlinear diterapkan menggunakan nilai default <strong>Kekuatan Ukuran Piksel</strong> dan <strong>Faktor Ukuran Piksel</strong>, yang mengakomodasi berbagai perubahan ketinggian (skala) karena pemirsa memperbesar dan memperkecil tampilan. Opsi <strong>Disesuaikan</strong> direkomendasikan saat menggunakan set data di seluruh dunia.",
	"@@Shaded-Relief_Z-Factor_tag0@@": "Faktor z adalah faktor penskalaan yang digunakan untuk mengubah nilai elevasi untuk dua tujuan:",
	"@@Shaded-Relief_Z-Factor_tag1@@": "Untuk mengubah satuan elevasi (seperti meter atau kaki) ke satuan koordinat horizontal dari set data, yang mungkin berupa kaki, meter, atau derajat",
	"@@Shaded-Relief_Z-Factor_tag2@@": "Untuk menambahkan pembesaran vertikal untuk efek visual",
	"@@Shaded-Relief_Z-Factor_tag3@@": "Hasil yang diarsir diskalakan secara dinamis dengan menyesuaikan faktor z menggunakan salah satu dari dua opsi berikut:",
	"@@Shaded-Relief_Z-Factor_tag4@@": "<strong>Tidak Ada</strong>--Tidak ada penskalaan yang diterapkan. Ini ideal untuk set data raster tunggal yang mencakup area lokal. Ini tidak direkomendasikan untuk set data di seluruh dunia yang memiliki variasi besar dalam elevasi atau peta berskala banyak karena akan menghasilkan relief medan dengan sedikit variasi pada skala kecil.",
	"@@Shaded-Relief_Z-Factor_tag6@@": "<strong>Disesuaikan</strong>--Penyesuaian nonlinear diterapkan menggunakan nilai default <strong>Kekuatan Ukuran Piksel</strong> dan <strong>Faktor Ukuran Piksel</strong>, yang mengakomodasi berbagai perubahan ketinggian (skala) karena pemirsa memperbesar dan memperkecil tampilan. Opsi <strong>Disesuaikan</strong> direkomendasikan saat menggunakan set data di seluruh dunia.",
	"@@Shaded-Relief_hillshadetype_tag0@@": "Mengontrol sumber pencahayaan untuk bayangan gunung.",
	"@@Shaded-Relief_hillshadetype_tag1@@": "<strong>Tradisional</strong>--Menghitung bayangan gunung dari satu arah penerangan. Anda dapat mengatur opsi <strong>Azimuth</strong> dan <strong>Ketinggian</strong> untuk mengontrol lokasi sumber cahaya. Ini adalah nilai defaultnya.",
	"@@Shaded-Relief_hillshadetype_tag2@@": "<strong>Multidireksional</strong>--Menggabungkan cahaya dari berbagai sumber untuk mewakili visualisasi medan yang ditingkatkan.",
	"@@Shaded-Relief_PSPower_tag0@@": "<strong>Daya Ukuran Piksel</strong> mempertimbangkan perubahan ketinggian (atau skala) pada saat memperbesar dan memperkecil tampilan peta. Ini adalah eksponen yang diterapkan pada ukuran piksel dalam persamaan yang mengontrol laju perubahan <strong>Z Factor</strong> untuk menghindari hilangnya relief yang signifikan.",
	"@@Shaded-Relief_PSPower_tag1@@": "Parameter ini hanya valid ketika jenis <strong>Penskalaan</strong> adalah <strong>Disesuaikan</strong>. Nilai default adalah 0,664.",
	"@@Shaded-Relief_PSZFactor_tag0@@": "<strong>Faktor Ukuran Piksel</strong> mempertimbangkan perubahan pada skala pada saat memperbesar dan memperkecil tampilan peta. Ini mengontrol sejauh mana perubahan <strong>Faktor Z</strong>.",
	"@@Shaded-Relief_PSZFactor_tag1@@": "Parameter ini hanya valid ketika jenis <strong>Penskalaan</strong> adalah <strong>Disesuaikan</strong>. Nilai default adalah 0,024.",
	"@@Sin_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Sin_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Sin_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Sin_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Sin_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Sin_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Sin_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Sin_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Sin_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Sin_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Sin_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Sin_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai sinus.",
	"@@SinH_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@SinH_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@SinH_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@SinH_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@SinH_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@SinH_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@SinH_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@SinH_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@SinH_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@SinH_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@SinH_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@SinH_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai sinus hiperbolik.",
	"@@Sink_Flow-Direction-Raster_tag0@@": "Raster input yang menunjukkan arah aliran keluar dari setiap sel.",
	"@@Sink_Flow-Direction-Raster_tag1@@": "Arah aliran raster dapat dibuat dengan menjalankan fungsi <strong>Arah Aliran</strong>.",
	"@@Slope_DEM_tag0@@": "Raster elevasi input.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag0@@": "Dengan menggunakan opsi ini akan menghindari artefak sampling ulang yang mungkin terjadi di sepanjang tepi raster. Piksel output di sepanjang tepi raster atau di samping piksel tanpa nilai akan diisi dengan NoData; Oleh karena itu, direkomendasikan bahwa opsi ini hanya digunakan ketika tersedia raster lain dengan piksel yang bertumpang tindih. Ketika tersedia piksel yang bertumpang tindih, area NoData ini akan menampilkan nilai piksel yang bertumpang tindih dan bukan kosong.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag1@@": "Tidak dicentang--Sampling ulang bilinear akan diterapkan secara seragam untuk melakukan sampling ulang kemiringan Anda. Ini adalah default.",
	"@@Slope_Disable-default-edge-pixel-interpolation_tag2@@": "Dicentang--Sampling ulang bilinear akan digunakan di dalam kemiringan, kecuali di sepanjang tepi raster atau di samping piksel NoData. Piksel ini akan diisi dengan NoData, karena akan mengurangi efek tepi tajam yang mungkin terjadi.",
	"@@Slope_Scaling_tag0@@": "Inklinasi kemiringan dapat berupa output dalam nilai derajat, atau kenaikan persen. Ada tiga opsi untuk <strong>Penskalaan</strong>:",
	"@@Slope_Scaling_tag3@@": "<strong>Derajat</strong>--Inklinasi kemiringan dihitung dalam derajat. Nilai berkisar dari 0 hingga 90.",
	"@@Slope_Scaling_tag5@@": "<strong>Percent_Rise</strong>--Inklinasi kemiringan dihitung sebagai nilai persentase. Nilai berkisar dari 0 hingga tak terbatas. Permukaan datar adalah kenaikan 0 persen, sedangkan permukaan 45 derajat adalah kenaikan 100 persen. Saat permukaan menjadi lebih vertikal, kenaikan persen menjadi semakin besar.",
	"@@Slope_Scaling_tag7@@": "<strong>Terskala</strong>--Inklinasi kemiringan dihitung sama seperti DERAJAT, tetapi faktor z disesuaikan untuk skala. Ini menggunakan nilai <strong>Kekuatan Ukuran Piksel</strong> dan <strong>Faktor Ukuran Piksel</strong>, yang menyebabkan perubahan resolusi (skala) saat pemirsa memperbesar dan memperkecil. Ini direkomendasikan saat menggunakan set data di seluruh dunia--khususnya ketika menggunakan kemiringan sebagai permukaan untuk visualisasi.",
	"@@Slope_Scaling_tag13@@": "Faktor z disesuaikan menggunakan persamaan berikut:",
	"@@Slope_Scaling_tag14@@": "Faktor Z Yang Disesuaikan = (Faktor Z) + (Ukuran Piksel)",
	"@@Slope_Scaling_tag15@@": "× (Faktor Ukuran Piksel)",
	"@@Slope_Scaling_tag16@@": "Daya Ukuran Piksel",
	"@@Slope_Z-Factor_tag0@@": "<strong>Faktor Z</strong> adalah faktor penskalaan yang digunakan untuk mengonversi nilai elevasi untuk dua tujuan:",
	"@@Slope_Z-Factor_tag3@@": "Untuk mengubah satuan elevasi (seperti meter atau kaki) ke satuan koordinat horizontal dari set data, yang mungkin berupa kaki, meter, atau derajat",
	"@@Slope_Z-Factor_tag4@@": "Untuk menambahkan pembesaran vertikal untuk efek visual",
	"@@Slope_PSPower_tag0@@": "<strong>Daya Ukuran Piksel</strong> mempertimbangkan perubahan ketinggian (atau skala) pada saat memperbesar dan memperkecil tampilan peta. Ini adalah eksponen yang diterapkan pada ukuran piksel dalam persamaan yang mengontrol laju perubahan <strong>Z Factor</strong> untuk menghindari hilangnya relief yang signifikan.",
	"@@Slope_PSPower_tag1@@": "Parameter ini hanya valid ketika jenis <strong>Penskalaan</strong> adalah <strong>Berskala</strong>. Nilai default adalah 0,664.",
	"@@Slope_PSZFactor_tag0@@": "<strong>Faktor Ukuran Piksel</strong> mempertimbangkan perubahan pada skala pada saat memperbesar dan memperkecil tampilan peta. Ini mengontrol sejauh mana perubahan <strong>Faktor Z</strong>.",
	"@@Slope_PSZFactor_tag1@@": "Parameter ini hanya valid ketika jenis <strong>Penskalaan</strong> adalah <strong>Berskala</strong>. Nilai default adalah 0,024.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag0@@": "Layer raster akumulasi aliran input.",
	"@@Snap-Pour-Point_Flow-Accumulation-Raster_tag1@@": "Ini dapat dibuat dengan fungsi <strong>Akumulasi Aliran</strong>.",
	"@@Snap-Pour-Point_Pour-Point-Field_tag0@@": "Bidang yang digunakan untuk menetapkan nilai ke lokasi titik tuang.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag0@@": "Lokasi titik tuang input yang akan diambil.",
	"@@Snap-Pour-Point_Pour-Point-Raster_tag1@@": "Untuk layer raster input, semua sel yang bukan NoData (yaitu yang memiliki nilai) akan dianggap sebagai titik tuang dan akan diambil.",
	"@@Snap-Pour-Point_Snap-Distance_tag0@@": "Jarak maksimum, dalam satuan peta, untuk mencari sel dengan akumulasi aliran yang lebih tinggi.",
	"@@Speckle_Additive-Noise-Mean_tag0@@": "Menentukan nilai rata-rata derau tambahan. Nilai rata-rata derau yang lebih besar akan menghasilkan penghalusan lebih sedikit, sementara nilai yang lebih kecil menghasilkan penghalusan lebih banyak.",
	"@@Speckle_Additive-Noise-Mean_tag1@@": "Parameter ini hanya valid ketika <strong>Jenis Filter</strong> adalah <strong>Filter Lee</strong> dan <strong>Model Derau</strong> adalah <strong>Derau Aditif</strong> atau <strong>Derau Aditif dan Multiplikatif</strong>. Nilai defaultnya adalah 0.",
	"@@Speckle_Damping-Factor_tag0@@": "Menentukan tingkat efek pengurangan eksponensial pada pemfilteran. Nilai pengurangan yang lebih besar mempertahankan tepi lebih baik tetapi kurang halus, sedangkan nilai yang lebih kecil menghasilkan penghalusan lebih banyak. Nilai 0 menghasilkan output yang sama seperti filter low-pass.",
	"@@Speckle_Damping-Factor_tag1@@": "Parameter ini hanya valid ketika <strong>Jenis Filter</strong>nya adalah <strong>Filter Lee yang Ditingkatkan</strong> atau <strong>Filter Frost</strong>. Nilai defaultnya adalah 1.",
	"@@Speckle_Filter-Size_tag0@@": "Menentukan ukuran jendela piksel yang digunakan untuk memfilter derau:",
	"@@Speckle_Filter-Size_tag1@@": "3x3",
	"@@Speckle_Filter-Size_tag2@@": "5x5",
	"@@Speckle_Filter-Size_tag3@@": "7x7",
	"@@Speckle_Filter-Size_tag4@@": "9x9",
	"@@Speckle_Filter-Size_tag5@@": "11x11",
	"@@Speckle_Filter-Type_tag0@@": "Menentukan jenis filter yang akan digunakan dalam algoritme penghalusan untuk menghapus derau bintik:",
	"@@Speckle_Filter-Type_tag1@@": "<strong>Filter Lee</strong>--Mengurangi derau bintik dengan menerapkan filter spasial untuk setiap piksel dalam gambar, yang memfilter data berdasarkan statistik lokal yang dihitung di dalam jendela kotak. Filter ini berguna ketika Anda ingin menghaluskan data berbintik yang memiliki komponen aditif atau multiplikatif. Ini nilai defaultnya.",
	"@@Speckle_Filter-Type_tag3@@": "<strong>Filter Lee yang Ditingkatkan</strong>--Versi adaptasi filter Lee yang mencakup <strong>Faktor Perendaman</strong> dan <strong>Jumlah Tampilan</strong>. Filter ini berguna ketika Anda ingin mengurangi bintik sambil mempertahankan informasi tekstur.",
	"@@Speckle_Filter-Type_tag9@@": "<strong>Filter Frost</strong>--Mengurangi derau bintik dengan filter simetris sirkuler teredam eksponensial yang menggunakan statistik lokal dalam masing-masing jendela filter. Filter ini berguna saat Anda ingin mengurangi bintik sambil mempertahankan tepian dalam gambar radar.",
	"@@Speckle_Filter-Type_tag11@@": "<strong>Filter Kuan</strong>--Mirip dengan filter Lee, filter ini menerapkan filter spasial untuk setiap piksel dalam gambar dan memfilter data berdasarkan statistik lokal yang dihitung dalam jendela kotak. Filter ini berguna saat Anda ingin mengurangi bintik sambil mempertahankan tepian dalam gambar radar.",
	"@@Speckle_Multiplicative-Noise-Mean_tag0@@": "Menentukan nilai rata-rata derau multiplikatif. Nilai rata-rata derau yang lebih besar akan menghasilkan penghalusan lebih sedikit, sementara nilai yang lebih kecil menghasilkan penghalusan lebih banyak.",
	"@@Speckle_Multiplicative-Noise-Mean_tag1@@": "Parameter ini hanya valid ketika <strong>Jenis Filter</strong> adalah <strong>Filter Lee</strong> dan <strong>Model Derau</strong> adalah <strong>Derau Aditif</strong> atau <strong>Derau Aditif dan Multiplikatif</strong>. Nilai defaultnya adalah 1.",
	"@@Speckle_Noise-Model_tag0@@": "Menentukan jenis derau yang mengurangi kualitas gambar radar:",
	"@@Speckle_Noise-Model_tag1@@": "<strong>Derau Multiplikatif</strong>--Derau sinyal acak yang dikalikan ke sinyal yang relevan selama pengambilan gambar atau transmisi",
	"@@Speckle_Noise-Model_tag3@@": "<strong>Derau Aditif</strong>--Derau sinyal acak yang ditambahkan ke sinyal yang relevan selama pengambilan gambar atau transmisi",
	"@@Speckle_Noise-Model_tag5@@": "<strong>Derau Aditif dan Multiplikatif</strong> --Kedua model derau",
	"@@Speckle_Noise-Variance_tag0@@": "Menentukan varian derau dari gambar radar.",
	"@@Speckle_Noise-Variance_tag1@@": "Parameter ini hanya valid ketika <strong>Jenis Filter</strong> adalah <strong>Filter Lee</strong> dan <strong>Model Derau</strong> adalah <strong>Derau Aditif</strong> atau <strong>Derau Aditif dan Multiplikatif</strong>. Nilai defaultnya adalah 0,25.",
	"@@Speckle_Number-of-Looks_tag0@@": "Menentukan jumlah tampilan gambar, yang mengontrol penghalusan gambar dan memperkirakan varian derau. Nilai yang lebih kecil menghasilkan lebih banyak penghalusan, sementara nilai yang lebih besar mempertahankan fitur gambar lebih banyak.",
	"@@Speckle_Number-of-Looks_tag1@@": "Parameter ini hanya valid ketika <strong>Jenis Filter</strong>nya adalah <strong>Filter Lee</strong> dan <strong>Model Derau</strong>-nya adalah <strong>Derau Multiplikatif</strong>, atau ketika <strong>Jenis Filter</strong> <strong>Filter Kuan</strong>. Nilai defaultnya adalah 1.",
	"@@Speckle_Raster_tag0@@": "Raster input.",
	"@@Spectral-Conversion_Conversion-Matrix_tag0@@": "Matriks yang digunakan untuk mengonversi raster input.",
	"@@Spectral-Conversion_Conversion-Matrix_tag1@@": "Persamaan yang digunakan untuk melakukan konversi ini adalah:",
	"@@Spectral-Conversion_Conversion-Matrix_tag2@@": "Output Band_R = Weight_P * Band_C",
	"@@Spectral-Conversion_Conversion-Matrix_tag3@@": "di mana:",
	"@@Spectral-Conversion_Conversion-Matrix_tag4@@": "Band_R adalah band output, dengan R adalah angka dari 1 hingga jumlah band output.",
	"@@Spectral-Conversion_Conversion-Matrix_tag5@@": "Weight_P adalah daftar bobot yang dibatasi koma, 1 untuk setiap band input. Jumlah bobot untuk masing-masing band harus sama dengan 1.",
	"@@Spectral-Conversion_Conversion-Matrix_tag6@@": "Band_C adalah gambar input, di mana C adalah angka dari 1 hingga jumlah band dari gambar input.",
	"@@Spectral-Conversion_Raster_tag0@@": "Raster input.",
	"@@Spectral-Conversion_Raster_tag1@@": "Ini bisa berupa set data raster, set data mosaik, atau layanan gambar.",
	"@@Spectral-Conversion_Size_tag0@@": "Jumlah baris dan kolom di <strong>Matriks Konversi</strong>.",
	"@@Square_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Square_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Square_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Square_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Square_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Square_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Square_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Square_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Square_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Square_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Square_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Square_Raster_tag0@@": "Nilai input yang akan dikuadratkan.",
	"@@Square-Root_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Square-Root_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Square-Root_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Square-Root_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Square-Root_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Square-Root_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Square-Root_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Square-Root_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Square-Root_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Square-Root_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Square-Root_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Square-Root_Raster_tag0@@": "Nilai input yang digunakan untuk menemukan akar kuadrat.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag0@@": "Menetapkan nilai statistik untuk setiap band.",
	"@@Statistics-and-Histogram_Define-Statistics-and-Histogram_tag1@@": "Kolom ${Histogram} adalah kolom baca-saja yang dapat diisi menggunakan parameter <strong>Impor</strong>. Jika Anda mengimpor file histogram, kolom ${Histogram} akan ditandai sebagai <strong>Ditentukan</strong>.",
	"@@Statistics-and-Histogram_Import_tag0@@": "Mengimpor informasi statistik dan histogram dari file raster atau XML yang sudah ada.",
	"@@Statistics-and-Histogram_Raster_tag0@@": "Raster input yang membutuhkan statistik dan histogram untuk ditetapkan.",
	"@@Statistics-and-Histogram_Statistics_tag0@@": "Menetapkan nilai statistik untuk setiap band.",
	"@@Stream-Link_Flow-Direction-Raster_tag0@@": "Raster input yang menunjukkan arah aliran keluar dari setiap sel.",
	"@@Stream-Link_Flow-Direction-Raster_tag1@@": "Arah aliran raster dapat dibuat dengan menjalankan fungsi <strong>Arah Aliran</strong>.",
	"@@Stream-Link_Stream-Raster_tag0@@": "Raster input yang merepresentasikan jaringan arus linear.",
	"@@Stream-Order_Flow-Direction-Raster_tag0@@": "Raster input yang menunjukkan arah aliran keluar dari setiap sel.",
	"@@Stream-Order_Flow-Direction-Raster_tag1@@": "Arah aliran raster dapat dibuat dengan menjalankan fungsi <strong>Arah Aliran</strong>.",
	"@@Stream-Order_Order-Method_tag0@@": "Metode yang digunakan untuk menetapkan urutan arus.",
	"@@Stream-Order_Order-Method_tag1@@": "<strong>STRAHLER</strong>--Metode pengurutan arus yang diajukan oleh Strahler pada tahun 1952. Urutan arus hanya meningkat saat arus dari urutan yang sama berpotongan. Perpotongan tautan urutan pertama dan urutan kedua akan tetap menjadi tautan urutan kedua, dan bukan membuat tautan urutan ketiga. Ini nilai defaultnya.",
	"@@Stream-Order_Order-Method_tag3@@": "<strong>SHREVE</strong>--Metode pengurutan arus berdasarkan besaran, yang diajukan oleh Shreve pada tahun 1967. Semua tautan tanpa cabang diberi besaran (urutan) satu. Besaran adalah kelerengan aditif. Ketika dua tautan berpotongan, besarannya ditambahkan dan ditetapkan ke tautan kelerengan.",
	"@@Stream-Order_Stream-Raster_tag0@@": "Raster arus input yang merepresentasikan jaringan aliran linear.",
	"@@Stretch_Auto-Gamma_tag0@@": "Use <strong>Gamma Otomatis</strong> untuk menghitung gamma dari statistik dan histogram set data. Statistik dapat berupa perkiraan statistik oleh fungsi itu sendiri, atau statistik tersebut dapat diperkirakan oleh perangkat lunak jika Anda memilih sebuah layer.",
	"@@Stretch_Dynamic-Range-Adjustment_tag0@@": "Centang kotak centang <strong>Penyesuaian Rentang Dinamik</strong> jika ingin statistik tersebut dihitung hanya dari piksel yang ditampilkan di layar Anda. Opsi ini umumnya diterapkan ketika gambar akan diterbitkan dan digunakan dalam aplikasi web yang tidak dapat melakukan jenis bentangan ini.",
	"@@Stretch_Estimate-Statistics_tag0@@": "Centang kotak centang <strong>Estimasi Statistik</strong> jika Anda ingin memperkirakan statistik. Perkiraan statistik dihitung dari 1000 oleh 1000 sampel dari pusat raster dan digunakan oleh bentangan.",
	"@@Stretch_Estimate-Statistics_tag3@@": "Jika ini dicentang dan raster memiliki statistik, atau Anda telah memasukkan nilai dalam tabel <strong>Statistik</strong>, maka akan digunakan alih-alih memperkirakan, kecuali peregangan memerlukan histogram. Jika bentangan memerlukan histogram yang tidak ada, nilainya akan diperkirakan.",
	"@@Stretch_Gamma_tag0@@": "Gunakan bilah geser untuk mengatur secara manual nilai <strong>Gamma</strong>",
	"@@Stretch_Number-Of-Standard-Deviations_tag0@@": "Tentukan nilai n untuk jumlah simpangan baku yang akan digunakan. Metode ini digunakan untuk menekankan seberapa besar perbedaan nilai fitur dari nilai rata-rata; yang terbaik bila digunakan pada data yang terdistribusi normal.",
	"@@Stretch_Output-Maximum_tag0@@": "Tetapkan nilai piksel tertinggi untuk histogram.",
	"@@Stretch_Output-Maximum_tag1@@": "<strong>Minimum Output</strong> dan <strong>Maksimum Output</strong> akan mengatur rentang nilai yang kemudian akan dibentangkan secara linear.",
	"@@Stretch_Output-Minimum_tag0@@": "Menetapkan nilai piksel terendah untuk histogram.",
	"@@Stretch_Output-Minimum_tag1@@": "<strong>Minimum Output</strong> dan <strong>Maksimum Output</strong> akan mengatur rentang nilai yang kemudian akan dibentangkan secara linear.",
	"@@Stretch_Percent-Clip-Maximum_tag0@@": "Menentukan persentase nilai tinggi yang akan dikecualikan dari bentangan.",
	"@@Stretch_Percent-Clip-Maximum_tag1@@": "Nilai rentang valid dari 0 ke 99.",
	"@@Stretch_Percent-Clip-Minimum_tag0@@": "Menentukan persentase nilai rendah yang akan dikecualikan dari bentangan.",
	"@@Stretch_Percent-Clip-Minimum_tag1@@": "Nilai rentang valid dari 0 ke 99.",
	"@@Stretch_Raster_tag0@@": "Raster input untuk mengontraskan bentangan.",
	"@@Stretch_Sigmoid-Strength-Level_tag0@@": "<strong>Level Kekuatan</strong> menentukan berapa banyak fungsi sigmoidal akan digunakan dalam bentangan. Nilai rendah seperti 1 hanya akan menggunakan bagian tengah kurva, yang cenderung menghasilkan warna kusam dan pudar. Nilai tinggi seperti 6 akan menggunakan keseluruhan kurva, yang cenderung menghasilkan warna tegas dan tajam.",
	"@@Stretch_Statistics_tag0@@": "Anda dapat memasukkan statistik sendiri di kotak dialog. Secara default, statistik diambil dari data; namun, nilai apa pun yang Anda masukkan dalam parameter ini akan digunakan.",
	"@@Stretch_Type_tag0@@": "Pilih metode tipe bentangan:",
	"@@Stretch_Type_tag1@@": "Tidak ada--Tidak ada pengontrasan bentangan",
	"@@Stretch_Type_tag2@@": "StdDev--Bentangan simpangan baku",
	"@@Stretch_Type_tag3@@": "MinMax--Bentangan Minimum-Maksimum",
	"@@Stretch_Type_tag4@@": "PercentMinMax--Bentangan pemotongan persen",
	"@@Stretch_Type_tag5@@": "Sigmoid--Bentangan Sigmoid",
	"@@Stretch_Use-Gamma_tag0@@": "Centang kotak centang <strong>Gunakan Gamma</strong> jika Anda ingin menerapkan bentangan gamma.",
	"@@Swath_Cellsize_tag0@@": "Ukuran sel untuk raster output akan terdeteksi secara otomatis; namun, Anda dapat mengubah ini jika menghendaki. Ukuran sel dapat diubah, tetapi jangkauan set data raster akan tetap sama.",
	"@@Swath_Interpolation-Method_tag0@@": "Ada empat metode pengambilan ulang sampel yang ada untuk fungsi ini:",
	"@@Swath_Interpolation-Method_tag1@@": "<strong>Lingkungan Terdekat</strong>--Menghitung nilai piksel dengan menggunakan piksel terdekat. Jika tidak ada piksel sumber, maka tidak akan ada piksel baru yang dapat dibuat dalam output.",
	"@@Swath_Interpolation-Method_tag3@@": "<strong>Bilinear</strong>--Menghitung nilai piksel menggunakan nilai jarak dengan pembobotan dari empat piksel terdekat.",
	"@@Swath_Interpolation-Method_tag5@@": "<strong>Tinning Linear</strong>--Menggunakan jaringan tidak beraturan triangulasi dari titik pusat setiap sel dalam raster tidak beraturan untuk menginterpolasi permukaan yang kemudian dikonversi menjadi raster biasa.",
	"@@Swath_Interpolation-Method_tag7@@": "<strong>Lingkungan Natural</strong>--Menjalankan penentuan lingkungan terdekat, adalah metode interpolasi yang tercepat. Metode ini digunakan terutama untuk data diskrit, seperti klasifikasi penggunaan lahan, karena tidak akan mengubah nilai sel. Kesalahan spasial maksimum akan menjadi setengah ukuran sel.",
	"@@Swath_Raster_tag0@@": "Raster dengan grid tidak teratur untuk disampling ulang.",
	"@@Tan_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Tan_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Tan_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Tan_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Tan_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Tan_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Tan_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Tan_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Tan_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Tan_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Tan_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Tan_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai tangen.",
	"@@TanH_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@TanH_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@TanH_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@TanH_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@TanH_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@TanH_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@TanH_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@TanH_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@TanH_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@TanH_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@TanH_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@TanH_Raster_tag0@@": "Input yang digunakan untuk menghitung nilai tangen hiperbolik.",
	"@@Tasseled-Cap_Raster_tag0@@": "Raster input untuk melakukan transformasi Tasseled Cap aktif.",
	"@@Times_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Times_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Times_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Times_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Times_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Times_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Times_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Times_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Times_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Times_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Times_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Times_Raster_tag0@@": "Input yang berisi nilai yang akan dikalikan.",
	"@@Times_Raster_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Times_Raster2_tag0@@": "Input yang berisi nilai-nilai yang input pertamanya akan dikalikan.",
	"@@Times_Raster2_tag1@@": "Nilai konstan dapat digunakan sebagai input untuk parameter ini, asalkan raster ditentukan untuk parameter lainnya.",
	"@@Transpose-Bits_Bit-Pattern_tag0@@": "Pilih jenis transpose untuk melakukan atau menentukan yang khusus:",
	"@@Transpose-Bits_Bit-Pattern_tag1@@": "Landsat 8 Awan Tipis",
	"@@Transpose-Bits_Bit-Pattern_tag2@@": "Landsat 8 Awan",
	"@@Transpose-Bits_Bit-Pattern_tag3@@": "Landsat 8 Bayangan Awan",
	"@@Transpose-Bits_Bit-Pattern_tag4@@": "Landsat 8 Isi yang Ditunjuk",
	"@@Transpose-Bits_Bit-Pattern_tag5@@": "Landsat 8 Frame yang Hilang",
	"@@Transpose-Bits_Bit-Pattern_tag6@@": "Landsat 8 Salju/Es",
	"@@Transpose-Bits_Bit-Pattern_tag7@@": "Landsat 8 Oklusi Dataran",
	"@@Transpose-Bits_Bit-Pattern_tag8@@": "Landsat 8 Vegetasi",
	"@@Transpose-Bits_Bit-Pattern_tag9@@": "Landsat 8 Air",
	"@@Transpose-Bits_Bit-Pattern_tag10@@": "Ditentukan Pengguna",
	"@@Transpose-Bits_Constant-Value_tag0@@": "Nilai opsional yang akan digunakan untuk mengisi semua bit yang tidak terlibat dalam transpose. Parameter ini diekspos saat parameter <strong>Buat Raster Isian dari Konstan</strong> diatur ke <strong>Ya</strong>.",
	"@@Transpose-Bits_Fill-Raster_tag0@@": "Menentukan set data raster yang akan digunakan untuk mengisi dalam semua bit yang tidak terlibat dalam transpose. Parameter ini diekspos saat parameter <strong>Buat Raster Isian dari Konstan</strong> diatur ke <strong>Tidak</strong>.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag0@@": "Menghasilkan raster isian menggunakan nilai konstan:",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag1@@": "<strong>Ya</strong>--Raster akan dihasilkan menggunakan nilai konstan untuk mengisi dalam bit yang tidak terlibat dalam transpose. Ini nilai defaultnya.",
	"@@Transpose-Bits_Generate-Fill-Raster-from-Constant_tag3@@": "<strong>Tidak</strong>--Raster akan dihasilkan menggunakan nilai piksel dari set data raster yang ada untuk mengisi dalam bit yang tidak terlibat dalam transpose.",
	"@@Transpose-Bits_Output-Bit-and-Input-Bit_tag0@@": "Tabel hanya baca yang menunjukkan bit output dan input yang akan berada di tempatnya.",
	"@@Transpose-Bits_Raster_tag0@@": "Raster input untuk membongkar paket dan memetakan ulang.",
	"@@Unit-Conversion_From-Unit_tag0@@": "Jenis satuan asli piksel.",
	"@@Unit-Conversion_Raster_tag0@@": "Raster input yang akan berisi unit yang dikonversi.",
	"@@Unit-Conversion_To-Unit_tag0@@": "Jenis satuan piksel yang dikonversi.",
	"@@Vector-Field_Angle-Reference-System_tag0@@": "Menentukan cara mengukur komponen arah.",
	"@@Vector-Field_Angle-Reference-System_tag1@@": "Geografis--0° titik ke utara, dan 90° titik ke timur",
	"@@Vector-Field_Angle-Reference-System_tag2@@": "Aritmatika--0° titik ke timur, dan 90° titik ke utara",
	"@@Vector-Field_Input-Data-Type_tag0@@": "Jenis bidang vektor yang direpresentasikan input Anda.",
	"@@Vector-Field_Input-Data-Type_tag1@@": "Tidak diketahui--Tidak diketahui apakah input merepresentasikan U-V atau Besaran-Arah.",
	"@@Vector-Field_Input-Data-Type_tag2@@": "U-V--Input data merepresentasikan komponen U dan V.",
	"@@Vector-Field_Input-Data-Type_tag3@@": "Besaran-Arah--Data input merepresentasikan besaran dan arah.",
	"@@Vector-Field_Output-Data-Type_tag0@@": "Menentukan jenis bidang vektor yang akan direpresentasikan oleh output Anda.",
	"@@Vector-Field_Output-Data-Type_tag1@@": "Besaran-Arah--Data output yang merepresentasikan besaran dan arah.",
	"@@Vector-Field_Output-Data-Type_tag2@@": "U-V--Data output yang merepresentasikan komponen U dan V.",
	"@@Vector-Field_Raster1_tag0@@": "Raster input pertama.",
	"@@Vector-Field_Raster1_tag1@@": "Ini akan menjadi nilai atau besaran U.",
	"@@Vector-Field_Raster2_tag0@@": "Raster input kedua.",
	"@@Vector-Field_Raster2_tag1@@": "Ini akan menjadi nilai atau arah V.",
	"@@Viewshed_Analysis-Method_tag0@@": "Pilih metode yang akan dihitung visibilitasnya. Dengan opsi ini Anda dapat menukar akurasi untuk peningkatan kinerja.",
	"@@Viewshed_Analysis-Method_tag1@@": "Semua Garis Pandangan--Garis pandangan dijalankan pada setiap piksel dalam raster untuk menetapkan area yang dapat dilihat. Ini adalah metode default.",
	"@@Viewshed_Analysis-Method_tag2@@": "Garis Pandangan Perimeter--Garis pandangan hanya dijalankan pada piksel di perimeter area yang dapat dilihat guna menetapkan area visibilitas. Metode ini memiliki kinerja yang lebih baik daripada metode <strong>Semua Garis Pandangan</strong> karena lebih sedikit garis pandangan dalam penghitungan.",
	"@@Viewshed_Analysis-Type_tag0@@": "Pilih jenis analisis visibilitas yang ingin Anda lakukan, baik menentukan seberapa dapat dilihat masing-masing sel bagi pengamat, atau mengidentifikasi setiap lokasi permukaan yang dapat dilihat pengamat.",
	"@@Viewshed_Analysis-Type_tag1@@": "Frekuensi--Frekuensi setiap lokasi piksel dalam raster permukaan input dapat dilihat oleh lokasi pengamatan input (sebagai titik atau sebagai titik puncak untuk fitur pengamat polyline). Ini adalah default.",
	"@@Viewshed_Analysis-Type_tag2@@": "Pengamat--Output yang mengidentifikasi secara tepat titik pengamat yang terlihat dari setiap lokasi permukaan raster. Jumlah maksimum pengamat input yang diizinkan dengan jenis analisis ini adalah 32.",
	"@@Viewshed_Horizontal-End-Angle_tag0@@": "Nilai ini menentukan ujung sudut rentang pemindaian horizontal. Nilai tersebut harus ditentukan dalam derajat dari 0 hingga 360,0, di mana 0 berorientasi ke utara. Nilai default adalah 360,0.",
	"@@Viewshed_Horizontal-End-Angle_tag1@@": "Ini bisa berupa kolom dalam input set data <strong>Fitur Pengamat</strong> atau nilai numerik. Jika parameter ini disetel ke nilai, nilai tersebut akan diterapkan ke semua pengamat. Untuk menentukan nilai yang berbeda bagi setiap pengamat, atur parameter ini ke kolom di set data <strong>Fitur Pengamat</strong>",
	"@@Viewshed_Horizontal-Start-Angle_tag0@@": "Nilai ini menentukan sudut mulai rentang pemindaian horizontal. Nilai tersebut harus ditentukan dalam derajat dari 0 hingga 360,0, di mana 0 berorientasi ke utara. Nilai default adalah 0.",
	"@@Viewshed_Horizontal-Start-Angle_tag1@@": "Ini bisa berupa kolom dalam input set data <strong>Fitur Pengamat</strong> atau nilai numerik. Jika parameter ini disetel ke nilai, nilai tersebut akan diterapkan ke semua pengamat. Untuk menentukan nilai yang berbeda bagi setiap pengamat, atur parameter ini ke kolom di set data <strong>Fitur Pengamat</strong>",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag0@@": "Jenis jarak untuk parameter jari-jari dalam.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag1@@": "Tidak dicentang--<strong>Radius Dalam</strong> diinterpretasikan sebagai jarak 2D. Ini nilai defaultnya.",
	"@@Viewshed_Inner-Radius-is-3D-Distance_tag4@@": "Dicentang--<strong>Radius Dalam</strong> diinterpretasikan sebagai jarak 3D.",
	"@@Viewshed_Inner-Radius_tag0@@": "Nilai ini menentukan jarak awal (minimum) dari tempat visibilitas ditentukan. Piksel yang lebih dekat dari jarak ini dianggap tidak dapat dilihat dalam output tetapi masih dapat menghalangi visibilitas piksel antara <strong>Radius Dalam</strong> dan <strong>Radius Luar</strong>. Nilai defaultnya adalah 0.",
	"@@Viewshed_Inner-Radius_tag5@@": "Ini bisa berupa kolom dalam input set data <strong>Fitur Pengamat</strong> atau nilai numerik. Jika parameter ini disetel ke nilai, nilai tersebut akan diterapkan ke semua pengamat. Untuk menentukan nilai yang berbeda bagi setiap pengamat, atur parameter ini ke kolom di set data <strong>Fitur Pengamat</strong>",
	"@@Viewshed_Observer-Elevation_tag0@@": "Nilai ini digunakan untuk menentukan elevasi permukaan titik atau titik puncak pengamat.",
	"@@Viewshed_Observer-Elevation_tag1@@": "Ini bisa berupa kolom dalam input set data <strong>Fitur Pengamat</strong> atau nilai numerik. Jika parameter ini tidak ditentukan, elevasi pengamat akan diperoleh dari raster permukaan menggunakan interpolasi bilinear. Jika parameter ini diatur ke nilai, maka nilai tersebut akan diterapkan ke semua pengamat. Untuk menentukan nilai yang berbeda bagi setiap pengamat, atur parameter ini ke kolom di set data <strong>Fitur Pengamat</strong>",
	"@@Viewshed_Observer-Features_tag0@@": "Kelas fitur input yang diperlukan, yang mengidentifikasi lokasi pengamat. Ini bisa berupa fitur titik, multipoint, atau polyline.",
	"@@Viewshed_Observer-Features_tag1@@": "Kelas fitur input diubah menjadi sistem koordinat geosentris 3D selama penghitungan visibilitas. Pengamat di luar jangkauan raster permukaan, atau yang terletak di sel NoData, akan diabaikan dalam penghitungan.",
	"@@Viewshed_Observer-Offset_tag0@@": "Nilai ini menunjukkan jarak vertikal (dalam satuan permukaan) yang akan ditambahkan ke elevasi pengamat. Nilai ini harus berupa bilangan bulat positif atau nilai titik mengambang.",
	"@@Viewshed_Observer-Offset_tag1@@": "Ini bisa berupa kolom dalam input set data <strong>Fitur Pengamat</strong> atau nilai numerik. Jika parameter ini disetel ke nilai, nilai tersebut akan diterapkan ke semua pengamat. Untuk menentukan nilai yang berbeda bagi setiap pengamat, atur parameter ini ke kolom di set data <strong>Fitur Pengamat</strong>",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag0@@": "Jenis jarak untuk parameter radius luar.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag1@@": "Tidak Dicentang--<strong>Radius Luar</strong> diinterpretasikan sebagai jarak 2D. Ini nilai defaultnya.",
	"@@Viewshed_Outer-Radius-is-3D-Distance_tag4@@": "Dicentang--<strong>Radius Luar</strong> diinterpretasikan sebagai jarak 3D.",
	"@@Viewshed_Outer-Radius_tag0@@": "Nilai ini menentukan jarak maksimum tempat ditentukannya visibilitas. Piksel di luar jarak ini dikecualikan dari analisis.",
	"@@Viewshed_Outer-Radius_tag1@@": "Ini bisa berupa kolom dalam input set data <strong>Fitur Pengamat</strong> atau nilai numerik. Jika parameter ini disetel ke nilai, nilai tersebut akan diterapkan ke semua pengamat. Untuk menentukan nilai yang berbeda bagi setiap pengamat, atur parameter ini ke kolom di set data <strong>Fitur Pengamat</strong>",
	"@@Viewshed_Raster_tag0@@": "Raster permukaan input yang diperlukan. Ini bisa berupa integer atau raster titik mengambang.",
	"@@Viewshed_Raster_tag1@@": "Input diubah menjadi sistem koordinat geosentris 3D selama penghitungan visibilitas. Sel NoData pada raster input tidak menghalangi penentuan visibilitas.",
	"@@Viewshed_Refractive-Coefficient_tag0@@": "Koefisien pembiasan cahaya tampak di udara.",
	"@@Viewshed_Refractive-Coefficient_tag1@@": "Nilai default adalah 0,13.",
	"@@Viewshed_Surface-Offset_tag0@@": "Nilai ini menunjukkan jarak vertikal (dalam satuan permukaan) yang akan ditambahkan ke nilai z setiap piksel target karena ini dianggap untuk visibilitas. Nilai ini harus berupa bilangan bulat positif atau nilai titik mengambang.",
	"@@Viewshed_Surface-Offset_tag1@@": "Ini bisa berupa kolom dalam input set data <strong>Fitur Pengamat</strong> atau nilai numerik. Jika parameter ini disetel ke nilai, nilai tersebut akan diterapkan ke semua pengamat. Untuk menentukan nilai yang berbeda bagi setiap pengamat, atur parameter ini ke kolom di set data <strong>Fitur Pengamat</strong>",
	"@@Viewshed_Vertical-Error_tag0@@": "Jumlah ketidakpastian, diukur sebagai kesalahan Akar Rata-rata Kuadrat (RMSE), pada nilai elevasi permukaan. Ini adalah nilai titik mengambang yang merepresentasikan kesalahan yang diharapkan dari nilai elevasi input. Ketika parameter ini diberi nilai lebih dari 0, raster visibilitas output akan menjadi titik mengambang. Dalam hal ini, setiap nilai piksel pada raster visibilitas output merepresentasikan jumlah probabilitas bahwa sel dapat dilihat oleh pengamat mana saja.",
	"@@Viewshed_Vertical-Error_tag1@@": "Ketika <strong>Jenis Analisis</strong> adalah <strong>Pengamat</strong> atau <strong>Metode Analisisnya</strong> adalah <strong>Garis Lingkar Perimeter</strong>, parameter ini dinonaktifkan.",
	"@@Viewshed_Vertical-Lower-Angle_tag0@@": "Nilai ini menentukan batas sudut vertikal bawah pemindaian di bawah penampang horizontal. Nilai harus ditentukan dalam derajat dari -90,0 hingga 0, yang bisa berupa bilangan bulat atau titik mengambang. Nilai default adalah -90,0.",
	"@@Viewshed_Vertical-Lower-Angle_tag1@@": "Ini bisa berupa kolom dalam input set data <strong>Fitur Pengamat</strong> atau nilai numerik. Jika parameter ini disetel ke nilai, nilai tersebut akan diterapkan ke semua pengamat. Untuk menentukan nilai yang berbeda bagi setiap pengamat, atur parameter ini ke kolom di set data <strong>Fitur Pengamat</strong>",
	"@@Viewshed_Vertical-Upper-Angle_tag0@@": "Nilai ini menentukan batas sudut vertikal atas pemindaian di atas penampang horizontal. Nilai harus ditentukan dalam derajat dari 0 hingga 90,0, yang bisa berupa bilangan bulat atau titik mengambang. Nilai default adalah 90,0.",
	"@@Viewshed_Vertical-Upper-Angle_tag1@@": "Ini bisa berupa kolom dalam input set data <strong>Fitur Pengamat</strong> atau nilai numerik. Jika parameter ini disetel ke nilai, nilai tersebut akan diterapkan ke semua pengamat. Untuk menentukan nilai yang berbeda bagi setiap pengamat, atur parameter ini ke kolom di set data <strong>Fitur Pengamat</strong>",
	"@@Watershed_Flow-Direction-Raster_tag0@@": "Raster input yang menunjukkan arah aliran keluar dari setiap sel.",
	"@@Watershed_Flow-Direction-Raster_tag1@@": "Arah aliran raster dapat dibuat dengan menjalankan fungsi <strong>Arah Aliran</strong>.",
	"@@Watershed_Pour-Point(s)-Raster_tag0@@": "Input lokasi titik tuang.",
	"@@Watershed_Pour-Point(s)-Raster_tag1@@": "Raster ini merepresentasikan sel di atas yang akan ditentukan area kontribusi atau tangkapannya. Semua sel yang bukan NoData akan digunakan sebagai sel sumber.",
	"@@Watershed_Pour-Point-Field_tag0@@": "Bidang yang digunakan untuk menetapkan nilai ke lokasi titik tuang.",
	"@@Watershed_Pour-Point-Field_tag1@@": "Untuk set data titik tuang raster, ${Value} digunakan secara default.",
	"@@Weighted-Overlay_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Weighted-Overlay_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Weighted-Overlay_Cellsize-Type_tag2@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Weighted-Overlay_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Weighted-Overlay_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Weighted-Overlay_Cellsize-Type_tag5@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Weighted-Overlay_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Weighted-Overlay_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Weighted-Overlay_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Weighted-Overlay_Extent-Type_tag3@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Weighted-Overlay_Extent-Type_tag4@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Weighted-Overlay_Scales_tag0@@": "Rentang untuk nilai baru yang digunakan untuk memetakan ulang nilai lama.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag0@@": "Tabel overlay dengan pembobotan terdiri dari empat bagian:",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag1@@": "Layer--Semua raster input harus berjenis bilangan bulat.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag2@@": "Pengaruh--Setiap raster input diberi bobot sesuai dengan kepentingannya, atau pengaruhnya, sebagai persentase relatif. Jumlah bobot pengaruh persentase harus sama dengan 100, dan setiap bobot harus ditentukan oleh nilai bilangan bulat.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag3@@": "Bidang--Bidang bilangan bulat atau string pada raster input yang akan digunakan untuk pembobotan.",
	"@@Weighted-Overlay_Weighted-Overlay-Table_tag4@@": "Tabel Pemetaan Ulang--Setiap nilai dalam raster input diberi nilai skala baru berdasarkan tabel pemetaan ulang. Nilai skala dapat berupa nilai valid atau nilai NoData.",
	"@@Weighted-Sum_Cellsize-Type_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Weighted-Sum_Cellsize-Type_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Weighted-Sum_Cellsize-Type_tag2@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Weighted-Sum_Cellsize-Type_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah default.",
	"@@Weighted-Sum_Cellsize-Type_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Weighted-Sum_Cellsize-Type_tag5@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Weighted-Sum_Extent-Type_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Weighted-Sum_Extent-Type_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Weighted-Sum_Extent-Type_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah default.",
	"@@Weighted-Sum_Extent-Type_tag3@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Weighted-Sum_Extent-Type_tag4@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag0@@": "Tabel jumlah berbobot didefinisikan oleh tiga properti:",
	"@@Weighted-Sum_Weighted-Sum-Table_tag1@@": "Layer--Raster yang diberi bobot.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag2@@": "Bidang--Bidang raster yang akan digunakan untuk pembobotan.",
	"@@Weighted-Sum_Weighted-Sum-Table_tag3@@": "Bobot--Nilai bobot yang digunakan untuk mengalikan raster. Nilai ini bisa berupa nilai desimal positif atau negatif.",
	"@@Wind-Chill_Temperature-Raster_tag0@@": "Raster band tunggal dengan nilai piksel merepresentasikan suhu udara sekitar.",
	"@@Wind-Chill_Temperature-Units_tag0@@": "Satuan pengukuran yang berhubungan dengan temperatur input raster. Satuan input yang tersedia adalah Celsius, Fahrenheit, dan Kelvin.",
	"@@Wind-Chill_Wind-Chill-Units_tag0@@": "Satuan pengukuran yang berhubungan dengan output raster. Satuan output yang tersedia adalah Celsius, Fahrenheit, dan Kelvin.",
	"@@Wind-Chill_Wind-Speed-Raster_tag0@@": "Raster band tunggal tempat nilai piksel merepresentasikan kecepatan angin.",
	"@@Wind-Chill_Wind-Speed-Units_tag0@@": "Menentukan satuan pengukuran untuk raster kecepatan angin:",
	"@@Wind-Chill_Wind-Speed-Units_tag1@@": "Mil Per Jam (mpj)",
	"@@Wind-Chill_Wind-Speed-Units_tag2@@": "Kilometer Per Jam (km/jam)",
	"@@Wind-Chill_Wind-Speed-Units_tag3@@": "Meter Per Detik (m/dtk)",
	"@@Wind-Chill_Wind-Speed-Units_tag4@@": "Kaki Per Detik (kaki/dtk)",
	"@@Wind-Chill_Wind-Speed-Units_tag5@@": "Knot (kn)",
	"@@Zonal-Remap_Background-Value_tag0@@": "Nilai piksel awal dari raster output, sebelum piksel input dipetakan ulang.",
	"@@Zonal-Remap_Default-Output-Value_tag0@@": "Nilai yang akan ditetapkan ke piksel yang tidak memenuhi salah satu ketentuan yang ditetapkan dalam <strong>Tabel Atribut Zonal</strong>.",
	"@@Zonal-Remap_Default-Output-Value_tag3@@": "Ini juga akan menjadi nilai piksel output jika parameter <strong>Nama Kolom Nilai Output</strong> tidak ditentukan atau nilai output ambang zona yang sesuai dibiarkan tidak ditentukan dalam <strong>Tabel Atribut Zonal</strong>.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag0@@": "Nama bidang yang berisi nilai maksimum di bawah tempat piksel input dipetakan ulang.",
	"@@Zonal-Remap_Maximum-Value-Field-Name_tag1@@": "Jika dibiarkan tidak ditentukan, atau jika nilai bidangnya nol, nilai piksel tidak diuji maksimum.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag0@@": "Nama bidang yang berisi nilai minimum di atas tempat piksel input dipetakan ulang.",
	"@@Zonal-Remap_Minimum-Value-Field-Name_tag1@@": "Jika dibiarkan tidak ditentukan, atau jika nilai bidangnya nol, nilai piksel tidak diuji minimum.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag0@@": "Nama bidang yang berisi nilai target tempat piksel input dipetakan ulang.",
	"@@Zonal-Remap_Output-Value-Field-Name_tag1@@": "Jika dibiarkan tidak ditentukan, atau jika nilai kolomnya nol, nilai piksel yang dipetakan ulang diatur ke <strong>Nilai Output Default</strong>.",
	"@@Zonal-Remap_Value-Raster_tag0@@": "Input raster band tunggal yang diperlukan, yang berisi nilai piksel untuk dipetakan ulang.",
	"@@Zonal-Remap_Where-Clause_tag0@@": "Kueri opsional diterapkan pada <strong>Tabel Atribut Zonal</strong>.",
	"@@Zonal-Remap_Where-Clause_tag3@@": "Jika Anda menggunakan tabel di atas sebagai contoh, kuerinya akan menjadi ${Variable1 = 'bare earth' AND Variable2 = 'California'}.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag0@@": "Tabel input yang diperlukan berisi minimal tiga bidang. Bidang ini harus memiliki nilai ambang batas minimum, nilai ambang batas maksimum, dan nilai target. Nilai target adalah bidang yang akan berisi nilai yang dipetakan ulang.",
	"@@Zonal-Remap_Zonal-Attributes-Table_tag1@@": "Format file dapat berupa kelas fitur,  feature service, atau jenis tabel apa pun yang didukung ArcGIS.",
	"@@Zonal-Remap_Zone-Field_tag0@@": "Nama kolom <strong>Tabel Atribut Zonal</strong> yang berisi nilai ID zona.",
	"@@Zonal-Remap_Zone-Field_tag3@@": "Nilai ID zona secara langsung terkait dengan ID zona di raster zona Anda. Nilai itu memberikan level pemfilteran lain sambil memetakan ulang. Jika tidak ada ID zona yang terkait dengan catatan tertentu dalam tabel, ID tersebut tidak akan ikut dalam pemetaan ulang.",
	"@@Zonal-Remap_Zone-Raster_tag0@@": "Raster band tunggal tempat setiap piksel menentukan zona yang terkait dengan lokasi tertentu. Zona ditentukan sebagai semua area dalam input yang memiliki nilai sama. Area tersebut tidak perlu berdampingan.",
	"@@Predict-Using-Trend_dimensiondefinition_tag0@@": "Menentukan metode yang digunakan untuk memberikan nilai dimensi prediksi.",
	"@@Predict-Using-Trend_dimensiondefinition_tag1@@": "<strong>Berdasarkan Nilai</strong>--Prediksi akan dihitung untuk nilai satu dimensi. Misalnya, Anda ingin memperkirakan curah hujan tahunan untuk tahun 2050, 2100, dan 2150. Ini nilai defaultnya.",
	"@@Predict-Using-Trend_dimensiondefinition_tag2@@": "<strong>Berdasarkan Interval</strong>--Prediksi akan dihitung untuk interval dimensi yang ditentukan oleh nilai awal dan akhir. Misalnya, Anda ingin memperkirakan curah hujan tahunan untuk tahun 2050 dan 2150.",
	"@@Predict-Using-Trend_end_tag0@@": "Tanggal akhir, ketinggian, atau kedalaman interval dimensi yang akan digunakan dalam prediksi.",
	"@@Predict-Using-Trend_end_tag1@@": "Parameter ini diperlukan saat parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Interval</strong>.",
	"@@Predict-Using-Trend_raster_tag0@@": "Masukan raster tren multidimensional input dari fungsi <strong>Buat Tren</strong>.",
	"@@Predict-Using-Trend_start_tag0@@": "Tanggal mulai, ketinggian, atau kedalaman interval dimensi yang akan digunakan dalam prediksi.",
	"@@Predict-Using-Trend_start_tag1@@": "Parameter ini diperlukan saat parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Interval</strong>.",
	"@@Predict-Using-Trend_unit_tag0@@": "Unit yang akan digunakan untuk interval nilai. Parameter ini hanya berlaku ketika dimensi analisisnya adalah dimensi waktu.",
	"@@Predict-Using-Trend_unit_tag1@@": "<strong>Jam</strong>--Prediksi akan dihitung untuk setiap jam dalam rentang waktu yang dijelaskan oleh parameter <strong>Mulai</strong>, <strong>Akhir</strong>, dan <strong>Interval Nilai</strong>.",
	"@@Predict-Using-Trend_unit_tag2@@": "<strong>Hari</strong>--Prediksi akan dihitung untuk setiap hari dalam rentang waktu yang dijelaskan oleh parameter <strong>Mulai</strong>, <strong>Akhir</strong>, dan <strong>Interval Nilai</strong>.",
	"@@Predict-Using-Trend_unit_tag3@@": "<strong>Minggu</strong>--Prediksi akan dihitung untuk setiap minggu dalam rentang waktu yang dijelaskan oleh parameter <strong>Mulai</strong>, <strong>Akhir</strong>, dan <strong>Interval Nilai</strong>.",
	"@@Predict-Using-Trend_unit_tag4@@": "<strong>Bulan</strong>--Prediksi akan dihitung untuk setiap bulan dalam rentang waktu yang dijelaskan oleh parameter <strong>Mulai</strong>, <strong>Akhir</strong>, dan <strong>Interval Nilai</strong>.",
	"@@Predict-Using-Trend_unit_tag5@@": "<strong>Tahun</strong>--Prediksi akan dihitung untuk setiap bulan dalam rentang waktu yang dijelaskan oleh parameter <strong>Mulai</strong>, <strong>Akhir</strong>, dan <strong>Interval Nilai</strong>.",
	"@@Predict-Using-Trend_valueinterval_tag0@@": "Jumlah langkah antara nilai dua dimensi yang akan dimasukkan dalam prediksi. Nilai defaultnya adalah 1.",
	"@@Predict-Using-Trend_valueinterval_tag1@@": "Parameter ini diperlukan saat parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Interval</strong>.",
	"@@Predict-Using-Trend_values_tag0@@": "Nilai dimensi yang akan digunakan dalam prediksi.",
	"@@Predict-Using-Trend_values_tag1@@": "Format nilai waktu, kedalaman, dan ketinggian harus cocok dengan format nilai dimensi yang digunakan untuk menghasilkan raster tren. Jika tren raster dihasilkan untuk dimensi WaktuStandar, formatnya harus TTTT-BB-HHTJJ:MM:DD, misalnya, 2050-01-01T00:00:00. Beberapa nilai dipisahkan dengan tanda titik koma.",
	"@@Process-Raster-Collection_aggregationfunction_tag0@@": "Tentukan template fungsi raster yang digunakan untuk menggabungkan beberapa irisan menjadi irisan yang lebih sedikit atau irisan tunggal.",
	"@@Process-Raster-Collection_dimension_tag0@@": "Dimensi agregasi. Ini adalah dimensi di mana kira-kira variabel tersebut akan diagregasi.",
	"@@Process-Raster-Collection_itemfunction_tag0@@": "Tentukan template fungsi raster yang digunakan untuk memproses setiap irisan atau item dalam koleksi raster input.",
	"@@Process-Raster-Collection_keywordinterval_tag0@@": "Menentukan interval kata kunci yang akan digunakan saat melakukan agregasi sepanjang dimensi. Parameter ini diperlukan ketika <strong>Jenis</strong> diatur ke <strong>Kata Kunci Interval</strong>, dan agregasi harus lintas waktu.",
	"@@Process-Raster-Collection_keywordinterval_tag1@@": "<strong>Per Jam</strong>--Nilai data akan diagregasi ke dalam langkah waktu per jam, dan hasilnya akan mencakup setiap jam dalam rangkaian waktu.",
	"@@Process-Raster-Collection_keywordinterval_tag2@@": "<strong>Harian</strong>--Nilai data akan diagregasi ke dalam langkah waktu harian, dan hasilnya akan mencakup setiap hari dalam rangkaian waktu.",
	"@@Process-Raster-Collection_keywordinterval_tag3@@": "<strong>Mingguan</strong>--Nilai data akan diagregasi ke dalam langkah waktu mingguan, dan hasilnya akan mencakup setiap minggu dalam rangkaian waktu.",
	"@@Process-Raster-Collection_keywordinterval_tag4@@": "<strong>Per 10 Hari</strong>--Nilai data akan diagregasi menjadi 3 periode masing-masing 10 hari. Periode terakhir mungkin memiliki lebih atau kurang dari 10 hari. Output-nya akan mencakup 3 irisan untuk setiap bulan.",
	"@@Process-Raster-Collection_keywordinterval_tag5@@": "<strong>Per 5 Hari</strong>--Nilai data akan diagregasi menjadi 6 periode masing-masing 5 hari. Periode terakhir mungkin memiliki lebih atau kurang dari 5 hari. Output-nya akan mencakup 6 irisan untuk setiap bulan.",
	"@@Process-Raster-Collection_keywordinterval_tag6@@": "<strong>Bulanan</strong>--Nilai data akan diagregasi ke dalam langkah waktu bulanan, dan hasilnya akan mencakup setiap bulan dalam rangkaian waktu.",
	"@@Process-Raster-Collection_keywordinterval_tag7@@": "<strong>Triwulanan</strong>--Nilai data akan diagregasi ke dalam langkah waktu triwulanan, dan hasilnya akan mencakup setiap triwulan dalam rangkaian waktu.",
	"@@Process-Raster-Collection_keywordinterval_tag8@@": "<strong>Tahunan</strong>--Nilai data akan diagregasi ke dalam langkah waktu tahunan, dan hasilnya akan mencakup setiap tahun dalam rangkaian waktu.",
	"@@Process-Raster-Collection_keywordinterval_tag9@@": "<strong>Berulang harian</strong>--Nilai data akan diagregasi ke dalam langkah waktu harian, dan hasilnya akan mencakup satu nilai agregat per hari Julian. Output-nya akan mencakup, paling banyak, 366 irisan waktu harian.",
	"@@Process-Raster-Collection_keywordinterval_tag10@@": "<strong>Berulang mingguan</strong>--Nilai data akan diagregasi ke dalam langkah waktu mingguan, dan hasilnya akan mencakup satu nilai agregat per minggu. Output-nya akan mencakup, paling banyak, 53 irisan waktu mingguan.",
	"@@Process-Raster-Collection_keywordinterval_tag11@@": "<strong>Berulang bulanan</strong>--Nilai data akan diagregasi ke dalam langkah waktu bulanan, dan hasilnya akan mencakup satu nilai agregat per bulan. Output-nya akan mencakup, paling banyak, 12 irisan waktu bulanan.",
	"@@Process-Raster-Collection_keywordinterval_tag12@@": "<strong>Berulang triwulanan</strong>--Nilai data akan diagregasi ke dalam langkah waktu triwulanan, dan hasilnya akan mencakup satu nilai agregat per triwulan. Output-nya akan mencakup, paling banyak, 4 irisan waktu triwulanan.",
	"@@Process-Raster-Collection_maximumvalue_tag0@@": "Nilai maksimum untuk rentang.",
	"@@Process-Raster-Collection_maximumvalue_tag1@@": "Parameter ini diperlukan jika parameter <strong>Jenis</strong> diatur ke <strong>Rentang Interval</strong>.",
	"@@Process-Raster-Collection_minimumvalue_tag0@@": "Nilai minimum untuk rentang.",
	"@@Process-Raster-Collection_minimumvalue_tag1@@": "Parameter ini diperlukan jika parameter <strong>Jenis</strong> diatur ke <strong>Rentang Interval</strong>.",
	"@@Process-Raster-Collection_processingfunction_tag0@@": "Tentukan template fungsi raster yang digunakan untuk menampilkan layer raster yang sudah diproses.",
	"@@Process-Raster-Collection_rastercollection_tag0@@": "Raster multidimensional input, layer mosaik, atau set data mosaik.",
	"@@Process-Raster-Collection_type_tag0@@": "Menentukan interval dimensi untuk data mana yang akan diagregasi.",
	"@@Process-Raster-Collection_type_tag1@@": "<strong>Semua</strong>--Nilai data akan diagregasi di semua irisan. Ini nilai defaultnya.",
	"@@Process-Raster-Collection_type_tag2@@": "<strong>Kata Kunci Interval</strong>--Data variabel akan diagregasi menggunakan interval yang umumnya diketahui.",
	"@@Process-Raster-Collection_type_tag3@@": "<strong>Rentang Interval</strong>--Data variabel akan diagregasi antara pasangan nilai atau tanggal yang ditentukan.",
	"@@Process-Raster-Collection_type_tag4@@": "<strong>Nilai Interval</strong>--Data variabel akan diagregasi menggunakan interval dan unit yang ditentukan pengguna.",
	"@@Process-Raster-Collection_unit_tag0@@": "Unit yang akan digunakan untuk nilai interval. Parameter ini diperlukan jika <strong>Dimensi</strong> merupakan kolom waktu dan parameter <strong>Jenis</strong> diatur ke <strong>Nilai Interval</strong>.",
	"@@Process-Raster-Collection_unit_tag1@@": "Jika Anda melakukan agregasi pada apa pun selain pada waktunya, opsi ini tidak akan tersedia dan unit nilai interval akan mencocokkan dengan unit variabel dari data raster multidimensional input.",
	"@@Process-Raster-Collection_unit_tag2@@": "<strong>Jam</strong>--Nilai data akan diagregasi ke dalam irisan waktu per jam pada interval yang disediakan.",
	"@@Process-Raster-Collection_unit_tag3@@": "<strong>Hari</strong>--Nilai data akan diagregasi ke dalam irisan waktu harian pada interval yang disediakan.",
	"@@Process-Raster-Collection_unit_tag4@@": "<strong>Minggu</strong>--Nilai data akan diagregasi ke dalam irisan waktu mingguan pada interval yang disediakan.",
	"@@Process-Raster-Collection_unit_tag5@@": "<strong>Bulan</strong>--Nilai data akan diagregasi ke dalam irisan waktu bulanan pada interval yang disediakan.",
	"@@Process-Raster-Collection_unit_tag6@@": "<strong>Tahun</strong>--Nilai data akan diagregasi ke dalam irisan waktu tahunan pada interval yang disediakan.",
	"@@Process-Raster-Collection_valueinterval_tag0@@": "Ukuran interval yang akan digunakan untuk agregasi. Parameter ini diperlukan jika parameter <strong>Jenis</strong> diatur ke <strong>Nilai Interval</strong>.",
	"@@Process-Raster-Collection_valueinterval_tag1@@": "Misalnya, untuk melakukan agregasi data suhu bulanan selama 30 tahun menjadi kenaikan 5 tahun, masukkan 5 sebagai <strong>Interval Nilai</strong>, dan tentukan <strong>Unit</strong> sebagai <strong>Tahun</strong>.",
	"@@Linear-Spectral-Unmixing_non-negative_tag0@@": "Menentukan opsi untuk menentukan nilai piksel output.",
	"@@Linear-Spectral-Unmixing_non-negative_tag1@@": "Dicentang--Tidak akan ada nilai output negatif.",
	"@@Linear-Spectral-Unmixing_non-negative_tag2@@": "Tidak dicentang --Mungkin ada nilai negatif dari penutup lahan fraksional.",
	"@@Linear-Spectral-Unmixing_raster_tag0@@": "Raster input.",
	"@@Linear-Spectral-Unmixing_spectralprofile_tag0@@": "File profil spektral input.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag0@@": "Informasi spektral untuk kelas penutup lahan yang berbeda.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag1@@": "<strong>Profil Spektrum</strong>--File penentuan pengelompokan (${.ecd}), dihasilkan dari alat <strong><strong>Latih Pengelompokkan Maksimum</strong></strong>, atau file Notasi Objek JavaScript (${.json}) yang berisi profil spektral kelas.",
	"@@Linear-Spectral-Unmixing_spectralprofiletype_tag2@@": "<strong>Fitur Pelatihan</strong>--Fitur Polygon atau kelas fitur sampel pelatihan, dihasilkan dari <strong>Pengelola Sampel Pelatihan</strong>.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag0@@": "Menentukan opsi untuk menentukan nilai piksel output.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag1@@": "Dicentang--Nilai kelas untuk setiap piksel disediakan dalam format desimal dengan jumlah semua kelas sama dengan 1. Misalnya, Class1 = 0,16; Class2 = 0,24; Class3 = 0,60.",
	"@@Linear-Spectral-Unmixing_sumtoone_tag2@@": "Tidak dicentang--Jumlah semua kelas dalam piksel dapat melebihi 1.",
	"@@Linear-Spectral-Unmixing_trainingfeature_tag0@@": "File fitur pelatihan input.",
	"@@Aggregate_aggregationtechnique_tag0@@": "Metode yang digunakan untuk agregasi. Nilai-nilai sel input yang dicakup oleh sel-sel output kasar dikumpulkan oleh salah satu statistik berikut:",
	"@@Aggregate_aggregationtechnique_tag1@@": "<strong>Jumlah</strong>--Total sel input. Ini nilai defaultnya.",
	"@@Aggregate_aggregationtechnique_tag2@@": "<strong>Maksimum</strong>--Nilai terbesar sel input.",
	"@@Aggregate_aggregationtechnique_tag3@@": "<strong>Rata-rata</strong>--Nilai rata-rata sel input.",
	"@@Aggregate_aggregationtechnique_tag4@@": "<strong>Median</strong>--Nilai median sel input.",
	"@@Aggregate_aggregationtechnique_tag5@@": "<strong>Minimum</strong>--Nilai terkecil sel input.",
	"@@Aggregate_cellfactor_tag0@@": "Faktor yang akan digunakan untuk mengalikan ukuran sel dari raster input.",
	"@@Aggregate_cellfactor_tag1@@": "Sebagai contoh, nilai tiga dari faktor sel akan menghasilkan ukuran sel output sebesar tiga kali lebih besar dari raster input.",
	"@@Aggregate_expandextentifneeded_tag0@@": "Menentukan cara menangani batas raster input saat baris atau kolomnya bukan kelipatan faktor sel.",
	"@@Aggregate_expandextentifneeded_tag1@@": "Dicentang--Memperluas batas atas atau kanan raster input sehingga jumlah total sel dalam baris atau kolom merupakan kelipatan faktor sel. Dengan opsi ini, raster output dapat mencakup jangkauan spasial yang lebih besar daripada raster inputnya. Ini nilai defaultnya.",
	"@@Aggregate_expandextentifneeded_tag2@@": "Tidak dicentang--Mengurangi jumlah baris atau kolom dalam raster output. Ini memotong sel-sel sisanya di batas atas atau kanan dari raster input, yang membuat jumlah baris atau kolom dalam raster input menjadi kelipatan faktor sel. Dengan opsi ini, raster output dapat mencakup jangkauan spasial yang lebih kecil daripada raster inputnya.",
	"@@Aggregate_ignorenodataincalculations_tag0@@": "Menunjukkan apakah nilai ${NoData} diabaikan oleh hitungan agregasinya.",
	"@@Aggregate_ignorenodataincalculations_tag1@@": "Dicentang--Menentukan bahwa jika nilai ${NoData} ada untuk setiap sel yang termasuk dalam jangkauan spasial sel yang lebih besar pada raster output, nilai ${NoData} akan diabaikan ketika menentukan nilai untuk sel output lokasi. Hanya sel input di dalam jangkauan sel output yang memiliki nilai data yang akan digunakan dalam menentukan nilai sel output. Ini nilai defaultnya.",
	"@@Aggregate_ignorenodataincalculations_tag2@@": "Tidak dicentang--Menentukan bahwa jika sel yang berada dalam jangkauan spasial sel yang lebih besar pada raster output memiliki nilai ${NoData}, nilai untuk lokasi sel output tersebut adalah ${NoData}. Ketika opsi ini digunakan, berarti ketika sel-sel dalam suatu agregasi berisi nilai ${NoData}, ada informasi yang tidak cukup untuk melakukan perhitungan yang ditentukan yang diperlukan untuk menentukan nilai output.",
	"@@Aggregate_raster_tag0@@": "Raster input akan diagregasi.",
	"@@Expand_numberofcells_tag0@@": "Jumlah sel yang akan diperluas.",
	"@@Expand_numberofcells_tag1@@": "Nilai harus berupa bilangan bulat, dan bisa 1 atau lebih besar.",
	"@@Expand_raster_tag0@@": "Raster input untuk zona yang diidentifikasi akan diperluas.",
	"@@Expand_raster_tag1@@": "Ini harus berupa jenis bilangan bulat.",
	"@@Expand_zonevalues_tag0@@": "Daftar zona yang akan diperluas.",
	"@@Expand_zonevalues_tag1@@": "Nilai zona harus berupa bilangan bulat, dan bisa dalam urutan apa pun.",
	"@@Expand_zonevalues_tag2@@": "Untuk menentukan beberapa zona, gunakan spasi untuk memisahkan nilai zona.",
	"@@Multidimensional-Filter_dimension_tag0@@": "Dimensi untuk mengekstraksi variabel.",
	"@@Multidimensional-Filter_dimensiondefinition_tag0@@": "Menentukan metode yang akan digunakan untuk mengiris dimensi.",
	"@@Multidimensional-Filter_dimensiondefinition_tag1@@": "<strong>Semua</strong>--Rentang penuh untuk setiap dimensi akan digunakan. Ini nilai defaultnya.",
	"@@Multidimensional-Filter_dimensiondefinition_tag2@@": "<strong>Berdasarkan Nilai</strong>--Dimensi akan diiris menggunakan nilai dimensi atau daftar nilai.",
	"@@Multidimensional-Filter_dimensiondefinition_tag3@@": "<strong>Berdasarkan Rentang</strong>--Dimensi akan diiris menggunakan rentang atau daftar rentang.",
	"@@Multidimensional-Filter_dimensiondefinition_tag4@@": "<strong>Berdasarkan Iterasi</strong>--Dimensi akan diiris di atas ukuran interval yang ditentukan.",
	"@@Multidimensional-Filter_endoffirstiteration_tag0@@": "Akhir dari interval pertama. Interval ini digunakan untuk beralih melalui set data. Parameter ini diperlukan ketika parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Iterasi</strong>.",
	"@@Multidimensional-Filter_maximumvalue_tag0@@": "Nilai maksimum untuk rentang. Parameter ini diperlukan saat parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Rentang</strong>.",
	"@@Multidimensional-Filter_minimumvalue_tag0@@": "Nilai minimum untuk rentang. Parameter ini diperlukan saat parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Rentang</strong>.",
	"@@Multidimensional-Filter_raster_tag0@@": "Raster multidimensional input.",
	"@@Multidimensional-Filter_ranges_tag0@@": "<p>Rentang interval yang ditentukan dalam tabel akan digunakan untuk melakukan agregasi kelompok nilai. Nilai minimum dan maksimum menentukan rentang yang akan diikutsertakan.</p><p>Parameter ini diperlukan ketika parameter<strong>Jenis</strong>diatur ke<strong>Rentang Interval</strong>.</p>",
	"@@Multidimensional-Filter_startoffirstiteration_tag0@@": "Awal dari interval pertama. Interval ini digunakan untuk beralih melalui set data. Parameter ini diperlukan ketika parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Iterasi</strong>.",
	"@@Multidimensional-Filter_step_tag0@@": "Frekuensi yang digunakan dalam pengirisan data.Parameter ini diperlukan saat parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Iterasi</strong>. Defaultnya adalah 3.",
	"@@Multidimensional-Filter_unit_tag0@@": "Menentukan unit iterasi. Parameter ini diperlukan saat parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Iterasi</strong> dan paramter <strong>Dimensi</strong> diatur ke <strong>WaktuStandar</strong>.",
	"@@Multidimensional-Filter_value_tag0@@": "Nilai untuk dimensi yang telah ditentukan. Parameter ini diperlukan saat parameter <strong>Penentuan Dimensi</strong> diatur ke <strong>Berdasarkan Nilai</strong>.",
	"@@Multidimensional-Filter_variables_tag0@@": "Variabel-variabel yang akan dimasukkan ke dalam layer raster output multidimensional. Jika tidak ada variabel yang ditentukan, maka variabel pertama yang akan digunakan.",
	"@@Multidimensional-Filter_dimensionless_tag0@@": "Menentukan apakah layer harus memiliki nilai dimensi atau tidak. Opsi ini hanya tersedia jika satu irisan dipilih untuk membuat layer.",
	"@@Multidimensional-Filter_dimensionless_tag1@@": "Dicentang--Layer tidak akan memiliki nilai dimensi.",
	"@@Multidimensional-Filter_dimensionless_tag2@@": "Tidak dicentang--Layer akan memiliki nilai dimensi. Ini adalah nilai defaultnya.",
	"@@Multidimensional-Raster_interpolationcellsize_tag0@@": "Ukuran sel piksel raster interpolasi. Nilai defaultnya adalah ${1}.",
	"@@Multidimensional-Raster_interpolationmethod_tag0@@": "Metode resampling yang digunakan untuk menginterpolasi data tidak beraturan.",
	"@@Multidimensional-Raster_interpolationmethod_tag1@@": "<strong>Lingkungan Terdekat</strong>--Menghitung nilai piksel output menggunakan piksel input terdekat. Jika tidak ada piksel sumber, maka tidak akan ada piksel baru yang dapat dibuat dalam output. Ini nilai defaultnya.",
	"@@Multidimensional-Raster_interpolationmethod_tag2@@": "<strong>Tinning Linear</strong>--Menggunakan jaringan tidak beraturan triangulasi dari titik pusat setiap piksel dalam raster tidak beraturan untuk menginterpolasi permukaan yang kemudian dikonversi menjadi raster biasa.",
	"@@Multidimensional-Raster_interpolationmethod_tag3@@": "<strong>Lingkungan Natural</strong>--Menemukan bagian terdekat dari sampel input ke titik kueri dan menerapkan bobot ke bagian tersebut berdasarkan area proporsional untuk menghitung nilai.",
	"@@Multidimensional-Raster_interpolationmethod_tag4@@": "<strong>Pembobotan Jarak Inversi</strong>--Menentukan nilai sel dengan menggunakan perpaduan rangkaian poin atau piksel dengan pembobotan secara linear. Bobot adalah fungsi kebalikan dari jarak dari titik atau piksel yang diketahui.",
	"@@Multidimensional-Raster_raster_tag0@@": "Raster multidimensional input.",
	"@@Multidimensional-Raster_variables_tag0@@": "Variabel yang akan dimasukkan dalam layer raster multidimensional.",
	"@@Random_distribution_tag0@@": "Tentukan metode distribusi nilai acak yang akan digunakan.",
	"@@Random_distribution_tag1@@": "<strong>Seragam</strong> (Minimum, Maksimum)--Distribusi seragam dengan rentang yang ditentukan. Nilai default adalah 0 untuk Minimum dan 1 untuk Maksimum. Ini nilai defaultnya.",
	"@@Random_distribution_tag2@@": "<strong>Bilangan Bulat</strong> (Minimum, Maksimum)--Distribusi bilangan bulat dengan rentang yang telah ditentukan. Nilai defaultnya adalah 1 untuk Minimum dan 10 untuk Maksimum.",
	"@@Random_distribution_tag3@@": "<strong>Normal</strong> (Rata-rata, Simpangan Baku)--Distribusi normal dengan mean dan simpangan baku yang telah ditentukan. Nilai default adalah 0 untuk Rata-rata dan 1 untuk Simpangan Baku.",
	"@@Random_distribution_tag4@@": "<strong>Eksponensial</strong> (Rata-rata)--Distribusi eksponensial dengan rata-rata yang telah ditentukan. Nilai defaultnya adalah 1.",
	"@@Random_distribution_tag5@@": "<strong>Poisson</strong> (Rata-rata)--Distribusi Poisson dengan rata-rata yang telah ditentukan. Nilai defaultnya adalah 1.",
	"@@Random_distribution_tag6@@": "<strong>Gamma</strong> (Alfa, Beta)--Distribusi gamma dengan alfa dan beta yang telah ditentukan. Nilai defaultnya adalah 1 untuk Alfa dan 1 untuk Beta.",
	"@@Random_distribution_tag7@@": "<strong>Binomial</strong> (N, Probabilitas)--Distribusi binomial dengan N dan probabilitas yang telah ditentukan. Nilai default adalah 10 untuk N dan 0,5 untuk Probabilitas.",
	"@@Random_distribution_tag8@@": "<strong>Geometrik</strong> (Probabilitas)--Distribusi geometris dengan probabilitas yang telah ditentukan. Nilai defaultnya adalah 0,5.",
	"@@Random_distribution_tag9@@": "<strong>Binomial Negatif</strong> (r, Probabilitas)--Distribusi Pascal dengan r dan probabilitas yang telah ditentukan. Nilai defaultnya adalah 10,0 untuk r dan 0,5 untuk Probabilitas.",
	"@@Random_randomnumbergenerator_tag0@@": "Tentukan algoritme generator acak yang menggunakan seed dan distribusi untuk menghasilkan urutan angka acak. Opsi yang tersedia adalah sebagai berikut:",
	"@@Random_randomnumbergenerator_tag1@@": "Rand C Standar",
	"@@Random_randomnumbergenerator_tag2@@": "Algoritme yang dikumpulkan ACM 599",
	"@@Random_randomnumbergenerator_tag3@@": "Mersenne Twister",
	"@@Random_randomnumbergenerator_tag4@@": "Nilai defaultnya adalah Mersenne Twister.",
	"@@Random_rasterinfo_tag0@@": "Gunakan tombol <strong>Muat raster template</strong> untuk memuat template dari direktori atau portal.",
	"@@Random_seed_tag0@@": "Seed adalah nilai bilangan bulat dan digunakan untuk memulai generator nomor acak. Nilai defaultnya adalah 1.",
	"@@Shrink_numberofcells_tag0@@": "Jumlah sel yang digunakan untuk mengecilkan setiap zona yang telah ditentukan.",
	"@@Shrink_numberofcells_tag1@@": "Nilai harus berupa bilangan bulat, dan bisa 1 atau lebih besar.",
	"@@Shrink_raster_tag0@@": "Raster input untuk zona yang diidentifikasi harus menyusut.",
	"@@Shrink_raster_tag1@@": "Ini harus berupa jenis bilangan bulat.",
	"@@Shrink_zonevalues_tag0@@": "Daftar zona untuk menyusut.",
	"@@Shrink_zonevalues_tag1@@": "Nilai zona harus berupa bilangan bulat, dan bisa dalam urutan apa pun.",
	"@@Shrink_zonevalues_tag2@@": "Untuk menentukan beberapa zona, gunakan spasi untuk memisahkan nilai zona.",
	"@@Distance-Accumulation_costraster_tag0@@": "Sebuah raster input yang menentukan biaya atau impedansi untuk bergerak secara planimetri melalui setiap sel. Nilai di setiap lokasi sel merepresentasikan jarak biaya-per-unit untuk bergerak melalui sel. Setiap nilai lokasi sel dikalikan dengan resolusi sel, sementara juga mengkompensasi gerakan diagonal untuk mendapatkan biaya total melewati sel.",
	"@@Distance-Accumulation_costraster_tag1@@": "Nilai <strong>Raster Biaya</strong> bisa berupa bilangan bulat atau titik mengambang, tetapi tidak bisa negatif atau nol.",
	"@@Distance-Accumulation_distancemethod_tag0@@": "Menentukan apakah menghitung jarak menggunakan metode planar (bumi datar) atau geodesik (elipsoid).",
	"@@Distance-Accumulation_distancemethod_tag1@@": "Planar--Pengukuran Planar menggunakan matematika Kartesius 2D untuk menghitung panjang dan luas. Opsi ini hanya tersedia saat mengukur dalam sistem koordinat yang diproyeksikan dan pesawat 2D dari sistem koordinat tersebut akan digunakan sebagai dasar untuk pengukuran.",
	"@@Distance-Accumulation_distancemethod_tag2@@": "Geodesik--Garis terpendek antara dua titik di permukaan bumi pada sebuah sferoid (elipsoid). Maka dari itu, hasil tidak berubah terlepas dari proyeksi input atau output.",
	"@@Distance-Accumulation_distancemethod_tag3@@": "<strong>Catatan:</strong> salah satu penggunaan garis geodesik adalah saat Anda ingin menentukan jarak terdekat antara dua kota untuk jalur penerbangan pesawat. Ini juga dikenal sebagai garis lingkaran besar jika didasarkan pada bola daripada elipsoid.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag0@@": "Menentukan apakah hanya raster akumulasi jarak yang dibuat atau raster multiband yang terdiri dari raster akumulasi jarak dan raster arah balik yang dibuat.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag1@@": "Tidak Dicentang--Hasilnya adalah akumulasi jarak raster. Ini adalah hasil single-band. Ini nilai defaultnya.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag2@@": "Dicentang--Hasil multiband dibuat. Band pertama adalah raster akumulasi jarak dan band kedua adalah raster arah balik.",
	"@@Distance-Accumulation_generatebackdirectionbandasadditionalbandinoutput_tag3@@": "Raster arah balik menghitung, untuk setiap sel, arah, dalam derajat, ke sel lingkungan di sepanjang jalur terpendek kembali ke sumber terdekat sambil menghindari penghalang.",
	"@@Distance-Accumulation_horizontalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya horizontal dan sudut gerak relatif horizontal (HRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: HF dan HRMA. HF adalah singkatan dari faktor horizontal (horizontal factor), yang menentukan tingkat kesulitan horizontal yang dihadapi ketika pindah dari satu sel ke sel lainnya. HRMA adalah singkatan dari sudut gerak relatif horizontal, yang mengidentifikasi sudut antara arah horizontal dari sel dan arah geraknya.</p><p>Jenis<strong>faktor horizontal</strong>meliputi berikut:</p><ul><li><strong>Biner</strong>--Menunjukkan bahwa jika HRMA kurang dari sudut potong, HF diatur ke nila yang terkait dengan faktor nol; jika tidak, HF diatur ke tak terbatas.</li><li><strong>Maju</strong>--Menentukan bahwa hanya gerakan maju yang diperbolehkan. HRMA harus lebih besar dari atau sama dengan 0 dan kurang dari 90 derajat (0 &lt;= HRMA &lt; 90). Jika HRMA lebih besar dari 0 dan kurang dari 45 derajat, maka HF untuk sel diatur ke nilai yang terkait dengan faktor nol. Jika HRMA lebih besar dari atau sama dengan 45 derajat, nilai pengubah nilai sisi yang digunakan. HF untuk nilai HRMA sama dengan atau lebih besar dari 90 derajat diatur ke tidak terbatas.</li><li><strong>Linear</strong>--Menentukan bahwa HF adalah fungsi linear HRMA.</li><li><strong>Linear Terbalik</strong>--Menentukan bahwa HF adalah fungsi linear terbalik HRMA.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan grafik faktor horizontal yang digunakan untuk menentukan HF.</li></ul><p>Pengubah faktor horizontal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Faktor horizontal yang akan digunakan jika HRMA nol. Faktor ini menempatkan titik potong y untuk fungsi faktor horizontal.</li><li><strong>Sudut potong</strong>--Menentukan sudut HRMA di luar dengan HF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor horizontal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan adalah 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nilai sisi</strong>--Menentukan HF jika HRMA lebih besar dari atau sama dengan 45 derajat dan kurang dari 90 derajat jika faktor horizontal<strong>Maju</strong>ditentukan.</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan HF.</li></ul>",
	"@@Distance-Accumulation_horizontalraster_tag0@@": "Raster yang menentukan arah horizontal di setiap sel.",
	"@@Distance-Accumulation_horizontalraster_tag1@@": "Nilai pada raster harus berupa bilangan bulat yang berkisar dari 0 hingga 360, dengan posisi 0 derajat berada di utara, atau ke arah atas layar, dan selanjutnya bertambah searah jarum jam. Area datar harus diberi nilai -1. Nilai-nilai di setiap lokasi akan digunakan bersama dengan <strong>Faktor horizontal</strong> untuk menentukan biaya horizontal yang dikeluarkan saat berpindah dari sel ke tetangganya.",
	"@@Distance-Accumulation_initialaccumulation_tag0@@": "Biaya akumulatif awal untuk memulai perhitungan biaya. Parameter ini memungkinkan untuk spesifikasi biaya tetap yang terkait dengan sumber. Alih-alih memulai dengan biaya 0, algoritme biaya akan dimulai dengan nilai yang ditentukan.",
	"@@Distance-Accumulation_initialaccumulation_tag1@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Distance-Accumulation_initialaccumulation_tag2@@": "Nilai harus nol atau lebih besar. Default adalah 0.",
	"@@Distance-Accumulation_maximumaccumulation_tag0@@": "Menentukan biaya akumulatif maksimum untuk orang yang bepergian untuk suatu sumber. Perhitungan biaya berlanjut untuk setiap sumber hingga kapasitas yang ditentukan tercapai.",
	"@@Distance-Accumulation_maximumaccumulation_tag1@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Distance-Accumulation_maximumaccumulation_tag2@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag0@@": "Pengganda yang akan diterapkan pada nilai biaya.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag1@@": "Parameter ini memungkinkan untuk mengontrol mode perjalanan atau besarannya pada sumber. Semakin besar pengganda, semakin besar biaya untuk bergerak melalui setiap sel.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag2@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Distance-Accumulation_multipliertoapplytocosts_tag3@@": "Nilai harus lebih besar dari nol. Default adalah 1.",
	"@@Distance-Accumulation_rasterbarriers_tag0@@": "Raster yang menentukan penghalang.",
	"@@Distance-Accumulation_rasterbarriers_tag1@@": "Set data harus berisi NoData yang tidak memiliki penghalang. Penghalang direpresentasikan oleh nilai-nilai yang valid termasuk nol.",
	"@@Distance-Accumulation_rasterbarriers_tag2@@": "Penghalang dapat ditentukan oleh bilangan bulat atau raster titik mengambang.",
	"@@Distance-Accumulation_sourceraster_tag0@@": "Lokasi sumber input.",
	"@@Distance-Accumulation_sourceraster_tag1@@": "Ini adalah set data raster yang mengidentifikasi sel atau lokasi tempat jarak biaya terakumulasi terendah untuk setiap lokasi sel output dihitung.",
	"@@Distance-Accumulation_sourceraster_tag2@@": "Ini dapat berupa jenis bilangan bulat atau titik mengambang.",
	"@@Distance-Accumulation_surfaceraster_tag0@@": "Raster yang menentukan nilai elevasi di setiap lokasi sel.",
	"@@Distance-Accumulation_surfaceraster_tag1@@": "Nilai-nilai ini digunakan untuk menghitung jarak permukaan aktual yang tercakup saat berpindah antar sel.",
	"@@Distance-Accumulation_traveldirection_tag0@@": "Menentukan arah orang yang bepergian ketika menerapkan faktor vertikal, faktor horizontal, dan rasio resistansi sumber.",
	"@@Distance-Accumulation_traveldirection_tag1@@": "<strong>Dari Sumber</strong>--Faktor vertikal, faktor horizontal, dan rasio resistansi sumber akan diterapkan pada sumber input dan pindah ke sel non-sumber. Ini nilai defaultnya.",
	"@@Distance-Accumulation_traveldirection_tag2@@": "<strong>Ke Sumber</strong>--Faktor vertikal, faktor horizontal, dan rasio resistansi sumber akan diterapkan pada awal di setiap sel non-sumber dan berpindah balik ke sumber input.",
	"@@Distance-Accumulation_traveldirection_tag3@@": "Tetapkan kata kunci <strong>Dari Sumber</strong> atau <strong>Ke Sumber</strong>, yang akan diterapkan ke semua sumber, atau tentukan kolom di <strong>Raster Sumber</strong> yang berisi kata kunci untuk mengidentifikasi arah perjalanan untuk setiap sumber. Kolom tersebut harus berisi string ${FROM_SOURCE} atau ${TO_SOURCE}.",
	"@@Distance-Accumulation_verticalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya vertikal dan sudut gerak relatif vertikal (VRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: VF dan VRMA. VF adalah singkatan dari faktor vertikal, yang menentukan tingkat kesulitan vertikal yang dihadapi ketika bergerak dari satu sel ke sel lainnya. VRMA adalah singkatan dari sudut gerak relatif vertikal, yang mengidentifikasi sudut kemiringan antara FROM, atau pemrosesan, sel dan sel TO.</p><p>Jenis<strong>faktor vertikal</strong>meliputi hal berikut:</p><ul><li><strong>Biner</strong>--Menentukan bahwa jika VRMA lebih besar dari sudut potong rendah dan lebih kecil dari sudut potong tinggi, VF diatur ke nilai yang berkaitan dengan faktor nol; jika tidak, VF diatur ke tak terbatas.</li><li><strong>Linear</strong>--Menunjukkan bahwa VF adalah fungsi linear VRMA.</li><li><strong>Linear Simetris</strong>--Menentukan bahwa VF adalah fungsi linear VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Linear Terbalik</strong>--Menunjukkan bahwa VF adalah fungsi linear terbalik VRMA.</li><li><strong>Linear Terbalik Simetris</strong>--Menentukan bahwa VF adalah fungsi linear terbalik VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Cos</strong>--Mengidentifikasi VF sebagai fungsi berbasis kosinus VRMA.</li><li><strong>Sec</strong>--Mengidentifikasi VF sebagai fungsi berbasis garis potong VRMA.</li><li><strong>Cos-Sec</strong>--Menentukan bahwa VF adalah fungsi berbasis kosinus VRMA jika VRMA negatif dan fungsi berbasis garis potong VRMA jika VRMA tidak negatif.</li><li><strong>Sec-Cos</strong>--Menentukan bahwa VF adalah fungsi berbasis garis potong VRMA jika VRMA negatif dan fungsi berbasis kosinus VRMA jika VRMA tidak negatif.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan VF.</li></ul><p>Pengubah ke kata kunci vertikal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Menentukan faktor vertikal yang digunakan jika VRMA nol. Faktor ini menempatkan titik potong-y dari fungsi yang ditentukan. Berdasarkan definisinya, faktor nol tidak akan berlaku untuk fungsi vertikal trigonometri (COS, SEC, COS-SEC, atau SEC-COS). Titik potong y ditentukan oleh fungsi ini.</li><li><strong>Sudut Potong rendah</strong>--Menentukan sudut VRMA dibawah dengan VF akan diatur ke tak terbatas.</li><li><strong>Sudut Potong tinggi</strong>--Menentukan sudut VRMA di atas dengan VF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor vertikal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan VF.</li></ul>",
	"@@Distance-Accumulation_verticalraster_tag0@@": "Menentukan hubungan antara faktor biaya vertikal dan sudut pergerakan relatif vertikal (VRMA).",
	"@@Distance-Accumulation_verticalraster_tag1@@": "Nilai digunakan untuk menghitung kemiringan yang digunakan untuk mengidentifikasi faktor vertikal yang terjadi ketika berpindah dari satu sel ke sel lainnya.",
	"@@Distance-Allocation_costraster_tag0@@": "Sebuah raster input yang menentukan biaya atau impedansi untuk bergerak secara planimetri melalui setiap sel. Nilai di setiap lokasi sel merepresentasikan jarak biaya-per-unit untuk bergerak melalui sel. Setiap nilai lokasi sel dikalikan dengan resolusi sel, sementara juga mengkompensasi gerakan diagonal untuk mendapatkan biaya total melewati sel.",
	"@@Distance-Allocation_costraster_tag1@@": "Nilai <strong>Raster Biaya</strong> bisa berupa bilangan bulat atau titik mengambang, tetapi tidak bisa negatif atau nol.",
	"@@Distance-Allocation_distancemethod_tag0@@": "Menentukan apakah menghitung jarak menggunakan metode planar (bumi datar) atau geodesik (elipsoid).",
	"@@Distance-Allocation_distancemethod_tag1@@": "Planar--Pengukuran Planar menggunakan matematika Kartesius 2D untuk menghitung panjang dan luas. Opsi ini hanya tersedia saat mengukur dalam sistem koordinat yang diproyeksikan dan pesawat 2D dari sistem koordinat tersebut akan digunakan sebagai dasar untuk pengukuran.",
	"@@Distance-Allocation_distancemethod_tag2@@": "Geodesik--Garis terpendek antara dua titik di permukaan bumi pada sebuah sferoid (elipsoid). Maka dari itu, hasil tidak berubah terlepas dari proyeksi input atau output.",
	"@@Distance-Allocation_distancemethod_tag3@@": "<strong>Catatan:</strong> salah satu penggunaan garis geodesik adalah saat Anda ingin menentukan jarak terdekat antara dua kota untuk jalur penerbangan pesawat. Ini juga dikenal sebagai garis lingkaran besar jika didasarkan pada bola daripada elipsoid.",
	"@@Distance-Allocation_horizontalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya horizontal dan sudut gerak relatif horizontal (HRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: HF dan HRMA. HF adalah singkatan dari faktor horizontal (horizontal factor), yang menentukan tingkat kesulitan horizontal yang dihadapi ketika pindah dari satu sel ke sel lainnya. HRMA adalah singkatan dari sudut gerak relatif horizontal, yang mengidentifikasi sudut antara arah horizontal dari sel dan arah geraknya.</p><p>Jenis<strong>faktor horizontal</strong>meliputi berikut:</p><ul><li><strong>Biner</strong>--Menunjukkan bahwa jika HRMA kurang dari sudut potong, HF diatur ke nila yang terkait dengan faktor nol; jika tidak, HF diatur ke tak terbatas.</li><li><strong>Maju</strong>--Menentukan bahwa hanya gerakan maju yang diperbolehkan. HRMA harus lebih besar dari atau sama dengan 0 dan kurang dari 90 derajat (0 &lt;= HRMA &lt; 90). Jika HRMA lebih besar dari 0 dan kurang dari 45 derajat, maka HF untuk sel diatur ke nilai yang terkait dengan faktor nol. Jika HRMA lebih besar dari atau sama dengan 45 derajat, nilai pengubah nilai sisi yang digunakan. HF untuk nilai HRMA sama dengan atau lebih besar dari 90 derajat diatur ke tidak terbatas.</li><li><strong>Linear</strong>--Menentukan bahwa HF adalah fungsi linear HRMA.</li><li><strong>Linear Terbalik</strong>--Menentukan bahwa HF adalah fungsi linear terbalik HRMA.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan grafik faktor horizontal yang digunakan untuk menentukan HF.</li></ul><p>Pengubah faktor horizontal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Faktor horizontal yang akan digunakan jika HRMA nol. Faktor ini menempatkan titik potong y untuk fungsi faktor horizontal.</li><li><strong>Sudut potong</strong>--Menentukan sudut HRMA di luar dengan HF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor horizontal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan adalah 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nilai sisi</strong>--Menentukan HF jika HRMA lebih besar dari atau sama dengan 45 derajat dan kurang dari 90 derajat jika faktor horizontal<strong>Maju</strong>ditentukan.</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan HF.</li></ul>",
	"@@Distance-Allocation_horizontalraster_tag0@@": "Raster yang menentukan arah horizontal di setiap sel.",
	"@@Distance-Allocation_horizontalraster_tag1@@": "Nilai pada raster harus berupa bilangan bulat yang berkisar dari 0 hingga 360, dengan posisi 0 derajat berada di utara, atau ke arah atas layar, dan selanjutnya bertambah searah jarum jam. Area datar harus diberi nilai -1. Nilai-nilai di setiap lokasi akan digunakan bersama dengan <strong>Faktor horizontal</strong> untuk menentukan biaya horizontal yang dikeluarkan saat berpindah dari sel ke tetangganya.",
	"@@Distance-Allocation_initialaccumulation_tag0@@": "Biaya akumulatif awal untuk memulai perhitungan biaya. Parameter ini memungkinkan untuk spesifikasi biaya tetap yang terkait dengan sumber. Alih-alih memulai dengan biaya 0, algoritme biaya akan dimulai dengan nilai yang ditentukan.",
	"@@Distance-Allocation_initialaccumulation_tag1@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Distance-Allocation_initialaccumulation_tag2@@": "Nilai harus nol atau lebih besar. Default adalah 0.",
	"@@Distance-Allocation_maximumaccumulation_tag0@@": "Menentukan biaya akumulatif maksimum untuk orang yang bepergian untuk suatu sumber. Perhitungan biaya berlanjut untuk setiap sumber hingga kapasitas yang ditentukan tercapai.",
	"@@Distance-Allocation_maximumaccumulation_tag1@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Distance-Allocation_maximumaccumulation_tag2@@": "Nilai harus lebih besar dari nol. Kapasitas default adalah ke tepi raster output.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag0@@": "Pengganda yang akan diterapkan pada nilai biaya.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag1@@": "Parameter ini memungkinkan untuk mengontrol mode perjalanan atau besarannya pada sumber. Semakin besar pengganda, semakin besar biaya untuk bergerak melalui setiap sel.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag2@@": "Nilai harus lebih besar dari nol. Default adalah 1.",
	"@@Distance-Allocation_multipliertoapplytocosts_tag3@@": "Nilai numerik (ganda) atau kolom dari <strong>Raster Sumber</strong> dapat digunakan untuk parameter ini.",
	"@@Distance-Allocation_rasterbarriers_tag0@@": "Raster yang menentukan penghalang.",
	"@@Distance-Allocation_rasterbarriers_tag1@@": "Set data harus berisi NoData yang tidak memiliki penghalang. Penghalang direpresentasikan oleh nilai-nilai yang valid termasuk nol.",
	"@@Distance-Allocation_rasterbarriers_tag2@@": "Penghalang dapat ditentukan oleh bilangan bulat atau raster titik mengambang.",
	"@@Distance-Allocation_sourcefield_tag0@@": "Kolom yang digunakan untuk menetapkan nilai ke lokasi sumber. Kolom tersebut harus berupa jenis bilangan bulat.",
	"@@Distance-Allocation_sourceraster_tag0@@": "Lokasi sumber input.",
	"@@Distance-Allocation_sourceraster_tag1@@": "Ini adalah set data raster yang mengidentifikasi sel atau lokasi tempat jarak biaya terakumulasi terendah untuk setiap lokasi sel output dihitung.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag0@@": "Menentukan apakah hanya raster alokasi yang dibuat atau apakah hasil multiband sudah dibuat.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag1@@": "Tidak dicentang--Hasilnya adalah raster alokasi jarak. Ini adalah hasil single-band. Ini nilai defaultnya.",
	"@@Distance-Allocation_sourcerowandcolumnbands_tag2@@": "Dicentang--Raster multiband dibuat. Band pertama adalah alokasi jarak raster, band kedua berisi indeks baris, dan band ketiga berisi indeks kolom. Indeks-indeks ini mengidentifikasi lokasi sel sumber yang merupakan jarak biaya terakumulasi paling sedikit.",
	"@@Distance-Allocation_surfaceraster_tag0@@": "Raster yang menentukan nilai elevasi di setiap lokasi sel.",
	"@@Distance-Allocation_surfaceraster_tag1@@": "Nilai-nilai ini digunakan untuk menghitung jarak permukaan aktual yang tercakup saat berpindah antar sel.",
	"@@Distance-Allocation_traveldirection_tag0@@": "Menentukan arah orang yang bepergian ketika menerapkan faktor vertikal, faktor horizontal, dan rasio resistansi sumber.",
	"@@Distance-Allocation_traveldirection_tag1@@": "<strong>Dari Sumber</strong>--Faktor vertikal, faktor horizontal, dan rasio resistansi sumber akan diterapkan pada sumber input dan pindah ke sel non-sumber. Ini nilai defaultnya.",
	"@@Distance-Allocation_traveldirection_tag2@@": "<strong>Ke Sumber</strong>--Faktor vertikal, faktor horizontal, dan rasio resistansi sumber akan diterapkan pada awal di setiap sel non-sumber dan berpindah balik ke sumber input.",
	"@@Distance-Allocation_traveldirection_tag3@@": "Tetapkan kata kunci <strong>Dari Sumber</strong> atau <strong>Ke Sumber</strong>, yang akan diterapkan ke semua sumber, atau tentukan kolom di <strong>Raster Sumber</strong> yang berisi kata kunci untuk mengidentifikasi arah perjalanan untuk setiap sumber. Kolom tersebut harus berisi string ${FROM_SOURCE} atau ${TO_SOURCE}.",
	"@@Distance-Allocation_verticalfactor_tag0@@": "<p>Menentukan hubungan antara faktor biaya vertikal dan sudut gerak relatif vertikal (VRMA).</p><p>Ada beberapa faktor dengan pengubah yang mengidentifikasi grafik faktor vertikal yang ditentukan. Selain itu, tabel dapat digunakan untuk membuat grafik khusus. Grafik digunakan untuk mengidentifikasi faktor vertikal yang digunakan dalam menghitung total biaya untuk pindah ke sel terdekat lain.</p><p>Dalam penjelasan berikut, dua akronim digunakan: VF dan VRMA. VF adalah singkatan dari faktor vertikal, yang menentukan tingkat kesulitan vertikal yang dihadapi ketika bergerak dari satu sel ke sel lainnya. VRMA adalah singkatan dari sudut gerak relatif vertikal, yang mengidentifikasi sudut kemiringan antara FROM, atau pemrosesan, sel dan sel TO.</p><p>Jenis<strong>faktor vertikal</strong>meliputi hal berikut:</p><ul><li><strong>Biner</strong>--Menentukan bahwa jika VRMA lebih besar dari sudut potong rendah dan lebih kecil dari sudut potong tinggi, VF diatur ke nilai yang berkaitan dengan faktor nol; jika tidak, VF diatur ke tak terbatas.</li><li><strong>Linear</strong>--Menunjukkan bahwa VF adalah fungsi linear VRMA.</li><li><strong>Linear Simetris</strong>--Menentukan bahwa VF adalah fungsi linear VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Linear Terbalik</strong>--Menunjukkan bahwa VF adalah fungsi linear terbalik VRMA.</li><li><strong>Linear Terbalik Simetris</strong>--Menentukan bahwa VF adalah fungsi linear terbalik VRMA baik di sisi negatif atau positif VRMA, masing-masing, dan dua fungsi linear bersifat simetris terhadap sumbu VF (y).</li><li><strong>Cos</strong>--Mengidentifikasi VF sebagai fungsi berbasis kosinus VRMA.</li><li><strong>Sec</strong>--Mengidentifikasi VF sebagai fungsi berbasis garis potong VRMA.</li><li><strong>Cos-Sec</strong>--Menentukan bahwa VF adalah fungsi berbasis kosinus VRMA jika VRMA negatif dan fungsi berbasis garis potong VRMA jika VRMA tidak negatif.</li><li><strong>Sec-Cos</strong>--Menentukan bahwa VF adalah fungsi berbasis garis potong VRMA jika VRMA negatif dan fungsi berbasis kosinus VRMA jika VRMA tidak negatif.</li><li><strong>Tabel</strong>--Mengidentifikasi bahwa file tabel akan digunakan untuk menentukan VF.</li></ul><p>Pengubah ke kata kunci vertikal meliputi hal berikut:</p><ul><li><strong>Faktor nol</strong>--Menentukan faktor vertikal yang digunakan jika VRMA nol. Faktor ini menempatkan titik potong-y dari fungsi yang ditentukan. Berdasarkan definisinya, faktor nol tidak akan berlaku untuk fungsi vertikal trigonometri (COS, SEC, COS-SEC, atau SEC-COS). Titik potong y ditentukan oleh fungsi ini.</li><li><strong>Sudut Potong rendah</strong>--Menentukan sudut VRMA dibawah dengan VF akan diatur ke tak terbatas.</li><li><strong>Sudut Potong tinggi</strong>--Menentukan sudut VRMA di atas dengan VF akan diatur ke tak terbatas.</li><li><strong>Kemiringan</strong>--Menentukan kemiringan garis lurus yang digunakan dengan kata kunci faktor vertikal<strong>Linear</strong>dan<strong>Linear Terbalik</strong>. Kemiringan ditentukan sebagai fraksi kenaikan seiring perjalanan (misalnya, 45 persen kemiringan 1/45, yang dimasukkan inputnya sebagai 0,02222).</li><li><strong>Nama tabel</strong>--Mengidentifikasi nama tabel yang menentukan VF.</li></ul>",
	"@@Distance-Allocation_verticalraster_tag0@@": "Menentukan hubungan antara faktor biaya vertikal dan sudut pergerakan relatif vertikal (VRMA).",
	"@@Distance-Allocation_verticalraster_tag1@@": "Nilai digunakan untuk menghitung kemiringan yang digunakan untuk mengidentifikasi faktor vertikal yang terjadi ketika berpindah dari satu sel ke sel lainnya.",
	"@@Euclidean-Back-Direction_cellsize_tag0@@": "Ukuran sel tempat raster output akan dibuat.",
	"@@Euclidean-Back-Direction_cellsize_tag1@@": "Jika ukuran sel ditetapkan secara eksplisit di <strong>Lingkungan</strong>, yang akan menjadi ukuran sel default. Jika tidak diatur, ukuran sel output akan sama dengan <strong>Raster Sumber</strong>.",
	"@@Euclidean-Back-Direction_distancemethod_tag0@@": "Menentukan apakah menghitung jarak menggunakan metode planar (bumi datar) atau geodesik (elipsoid).",
	"@@Euclidean-Back-Direction_distancemethod_tag1@@": "Planar--Pengukuran Planar menggunakan matematika Kartesius 2D untuk menghitung panjang dan luas. Opsi ini hanya tersedia saat mengukur dalam sistem koordinat yang diproyeksikan dan pesawat 2D dari sistem koordinat tersebut akan digunakan sebagai dasar untuk pengukuran.",
	"@@Euclidean-Back-Direction_distancemethod_tag2@@": "Geodesik--Garis terpendek antara dua titik di permukaan bumi pada sebuah sferoid (elipsoid). Maka dari itu, hasil tidak berubah terlepas dari proyeksi input atau output.",
	"@@Euclidean-Back-Direction_distancemethod_tag3@@": "<strong>Catatan:</strong> salah satu penggunaan garis geodesik adalah saat Anda ingin menentukan jarak terdekat antara dua kota untuk jalur penerbangan pesawat. Ini juga dikenal sebagai garis lingkaran besar jika didasarkan pada bola daripada elipsoid.",
	"@@Euclidean-Back-Direction_maximumdistance_tag0@@": "Menentukan jarak ambang batas di mana arah ke sumber terdekat akan dihitung. Jika jarak ke sumber terdekat melebihi ini, output untuk sel itu adalah NoData.",
	"@@Euclidean-Back-Direction_maximumdistance_tag1@@": "Jarak default adalah untuk jangkauan raster output.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag0@@": "Raster yang menentukan penghalang.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag1@@": "Set data harus berisi NoData yang tidak memiliki penghalang. Penghalang direpresentasikan oleh nilai-nilai yang valid termasuk nol.",
	"@@Euclidean-Back-Direction_rasterbarriers_tag2@@": "Penghalang dapat ditentukan oleh bilangan bulat atau raster titik mengambang.",
	"@@Euclidean-Back-Direction_sourceraster_tag0@@": "Set data raster yang menentukan sel atau lokasi tempat arah Euclidean untuk setiap lokasi sel output dihitung.",
	"@@Euclidean-Back-Direction_sourceraster_tag1@@": "Jenis input dapat berupa bilangan bulat atau jenis titik mengambang.",
	"@@Cost-Path_costbacklinkraster_tag0@@": "Nama layer raster tautan balik biaya yang digunakan untuk menentukan jalur untuk kembali ke sumber melalui jalur dengan biaya terkecil.",
	"@@Cost-Path_costbacklinkraster_tag1@@": "Untuk setiap sel di raster tautan balik, nilai mengidentifikasi lingkungan yang merupakan sel berikutnya pada jalur biaya akumulatif terkecil dari sel ke sel sumber tunggal atau rangkaian sel sumber.",
	"@@Cost-Path_costdistanceraster_tag0@@": "Nama raster jarak biaya yang akan digunakan untuk menentukan jalur dengan biaya terkecil dari lokasi tujuan ke sumber.",
	"@@Cost-Path_costdistanceraster_tag1@@": "Raster jarak biaya biasanya dibuat dengan fungsi Jarak Biaya, Alokasi Biaya, atau Tautan Balik Biaya. Layer raster jarak biaya menyimpan, untuk setiap sel, jarak biaya akumulatif minimum di atas permukaan biaya dari setiap sel ke serangkaian sel sumber.",
	"@@Cost-Path_destinationfield_tag0@@": "Kolom digunakan guna mendapatkan nilai untuk lokasi tujuan. Data fitur input harus berisi minimal satu kolom yang valid.",
	"@@Cost-Path_destinationraster_tag0@@": "Layer set data raster yang mengidentifikasi sel-sel yang jalur dengan biaya terkecilnya ditentukan ke sumber yang paling murah.",
	"@@Cost-Path_destinationraster_tag1@@": "Layer raster input terdiri dari sel yang memiliki nilai yang valid (nol adalah nilai yang valid), dan sel-sel yang tersisa harus diberi NoData.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag0@@": "Memaksa fungsi untuk memperlakukan raster tautan balik input sebagai aliran arah raster. Raster arah aliran dapat memiliki bilangan bulat dengan nilai 0-255.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag1@@": "Tidak dicentang--Jika nilai-nilai dari raster tautan balik yang ditentukan adalah bilangan bulat dalam kisaran 0-8, set data akan diperlakukan sebagai raster tautan balik biaya. Jika nilainya dari 0-255, input akan diperlakukan sebagai raster arah aliran. Jika nilainya dari 0-360 dan titik mengambang, input akan diperlakukan sebagai raster arah balik.",
	"@@Cost-Path_forceflowdirectionconventionforbacklinkraster_tag2@@": "Dicentang--Raster yang disediakan untuk raster tautan balik akan diperlakukan sebagai raster arah aliran. Gunakan opsi raster arah aliran yang memiliki nilai maksimum 8 atau kurang.",
	"@@Cost-Path_pathtype_tag0@@": "Kata kunci yang menentukan cara dengan nilai-nilai dan zona pada input tujuan data akan diinterpretasikan dalam perhitungan jalur biaya. Opsinya sebagai berikut:",
	"@@Cost-Path_pathtype_tag1@@": "<strong>Setiap Sel</strong>--Untuk setiap sel dengan nilai yang valid pada data tujuan input, jalur dengan biaya terkecil ditentukan dan disimpan di raster output. Dengan opsi ini, setiap sel dari data tujuan input diperlakukan secara terpisah, dan jalur dengan biaya terkecil ditentukan untuk masing-masing dari sel.",
	"@@Cost-Path_pathtype_tag2@@": "<strong>Setiap Zona</strong>--Untuk setiap zona pada data tujuan input, jalur dengan biaya terkecil ditentukan dan disimpan pada raster output. Dengan opsi ini, jalur dengan biaya terkecil untuk setiap zona dimulai di sel dengan pembobotan jarak biaya terendah di zona tersebut.",
	"@@Cost-Path_pathtype_tag3@@": "<strong>Single Terbaik</strong>--Untuk semua sel pada data tujuan input, jalur dengan biaya terkecil diturunkan dari sel dengan minimum jalur biaya terkecil ke sel sumber.",
	"@@Cell-Statistics_cellsizetype_tag0@@": "Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua ukuran sel input sama, semua opsi akan menghasilkan hasil yang sama.",
	"@@Cell-Statistics_cellsizetype_tag1@@": "Pertama Dari--Gunakan ukuran sel pertama dari raster input.",
	"@@Cell-Statistics_cellsizetype_tag2@@": "Minimum Dari--Gunakan ukuran sel terkecil dari semua raster input.",
	"@@Cell-Statistics_cellsizetype_tag3@@": "Maksimum Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini nilai defaultnya.",
	"@@Cell-Statistics_cellsizetype_tag4@@": "Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.",
	"@@Cell-Statistics_cellsizetype_tag5@@": "Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.",
	"@@Cell-Statistics_extenttype_tag0@@": "Pilih jangkauan yang harus digunakan dalam raster output:",
	"@@Cell-Statistics_extenttype_tag1@@": "Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.",
	"@@Cell-Statistics_extenttype_tag2@@": "Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini nilai defaultnya.",
	"@@Cell-Statistics_extenttype_tag3@@": "Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.",
	"@@Cell-Statistics_extenttype_tag4@@": "Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.",
	"@@Cell-Statistics_processasmultiband_tag0@@": "Menentukan bagaimana band raster input diproses.",
	"@@Cell-Statistics_processasmultiband_tag1@@": "Tidak dicentang--Semua input multiband akan diproses sebagai band tunggal. Ini nilai defaultnya.",
	"@@Cell-Statistics_processasmultiband_tag2@@": "Tidak dicentang--Semua input multiband akan diproses sebagai multiband.",
	"@@Cell-Statistics_rasters_tag0@@": "Daftar raster yang digunakan untuk menghitung statistik, berdasarkan piksel demi piksel.",
	"@@Cell-Statistics_percentileinterpolationtype_tag0@@": "<p>Menentukan metode interpolasi yang akan digunakan jika nilai persentil yang ditentukan berada antara dua nilai sel input.</p><ul><li><strong>Deteksi otomatis</strong>--Jika raster input merupakan jenis piksel bilangan bulat, maka metode<strong>Terdekat</strong>yang akan digunakan. Jika raster input merupakan jenis piksel titik mengambang, maka metode<strong>Linear</strong>yang akan digunakan. Ini adalah defaultnya.</li><li><strong>Terdekat</strong>--Nilai yang paling mendekati persentil yang diinginkan yang akan digunakan. Dalam hal ini, jenis piksel output sama seperti raster nilai input.</li><li><strong>Linear</strong>--Rata-rata dari dua nilai terdekat dari persentil yang diinginkan yang akan digunakan. Dalam hal ini, jenis piksel output merupakan titik mengambang.</li></ul><p>Opsi ini hanya tersedia jika parameter jenis<strong>Operasi</strong>diatur ke<strong>Median</strong>atau<strong>Persentil</strong>.</p>",
	"@@Cell-Statistics_percentilevalue_tag0@@": "<p>Persentil yang dihitung. Defaultnya adalah 90, untuk persentil ke-90.</p><p>Nilai dapat bervariasi, mulai dari 0 hingga 100. Persentil ke-0 pada dasarnya setara dengan statistik minimal, dan persentil ke-100 setara dengan statistik maksimal. Nilai 50 pada dasarnya akan menghasilkan nilai yang sama dengan statistik median.</p><p>Opsi ini hanya tersedia jika parameter<strong>Operasi</strong>diatur ke<strong>Persentil</strong>.</p>",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag0@@": "Raster arah balik berisi arah yang dihitung dalam derajat. Arah mengidentifikasikan sel berikutnya di sepanjang jalur optimal kembali ke sumber biaya paling akumulatif terkecil dengan menghindari pembatasan.",
	"@@Optimal-Path-As-Raster_backdirectionrasterorflowdirectionraster_tag1@@": "Rentang nilai adalah dari 0 derajat ke 360 derajat, dengan 0 dicadangkan untuk sel sumber. Karena timur (kanan) adalah 90 dan nilai meningkat searah jarum jam (180 adalah selatan, 270 adalah barat, dan 360 adalah utara).",
	"@@Optimal-Path-As-Raster_destinationfield_tag0@@": "Kolom digunakan guna mendapatkan nilai untuk lokasi tujuan.",
	"@@Optimal-Path-As-Raster_destinationraster_tag0@@": "Layer set data raster yang mengidentifikasi sel-sel dari mana jalur optimal ditentukan ke sumber yang paling murah. Input ini bersifat wajib.",
	"@@Optimal-Path-As-Raster_destinationraster_tag1@@": "Layer raster input terdiri dari sel yang memiliki nilai yang valid (nol adalah nilai yang valid), dan sel-sel yang tersisa harus diberi NoData.",
	"@@Optimal-Path-As-Raster_distanceaccumulationraster_tag0@@": "Raster akumulasi jarak digunakan untuk menentukan jalur optimal dari tujuan ke sumber. Raster akumulasi jarak biasanya dibuat dengan fungsi <strong>Akumulasi Jarak</strong>. Setiap sel dalam raster akumulasi jarak mewakili jarak biaya akumulatif minimum atas permukaan dari setiap sel ke satu set sel sumber.",
	"@@Optimal-Path-As-Raster_pathtype_tag0@@": "Menentukan kata kunci yang menetapkan cara dengan nilai-nilai dan zona pada input tujuan data akan diinterpretasikan dalam perhitungan jalur biaya.",
	"@@Optimal-Path-As-Raster_pathtype_tag1@@": "<strong>Setiap Zona</strong>--Untuk setiap zona pada data tujuan input, jalur dengan biaya terkecil ditentukan dan disimpan pada raster output. Dengan opsi ini, jalur optimal untuk setiap zona dimulai di sel dengan pembobotan jarak biaya terendah di zona tersebut.",
	"@@Optimal-Path-As-Raster_pathtype_tag2@@": "<strong>Tunggal Terbaik</strong>--Untuk semua sel pada data tujuan input, jalur optimal berasal dari sel dengan minimum jalur paling murah ke sel sumber.",
	"@@Optimal-Path-As-Raster_pathtype_tag3@@": "<strong>Setiap Sel</strong>--Untuk setiap sel dengan nilai yang valid pada data tujuan input, jalur optimal ditentukan. Dengan opsi ini, setiap sel dari data tujuan input diperlakukan secara terpisah, dan jalur optimal ditentukan untuk masing-masing dari sel.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag0@@": "ID band yang akan digunakan untuk deteksi perubahan. Jika tidak ada ID band yang disediakan, semua band dari set data raster input akan digunakan.",
	"@@CCDC-Analysis_bandsfordetectingchange_tag1@@": "Nilai ID harus bilangan bulat dipisahkan oleh spasi.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag0@@": "ID band dari band hijau dan band SWIR, yang akan digunakan untuk menutupi awan, bayangan awan, dan salju. Jika tidak ada ID band yang diberikan, masking tidak akan terjadi.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag1@@": "Nilai ID harus bilangan bulat dipisahkan oleh spasi.",
	"@@CCDC-Analysis_bandsfortemporalmasking_tag2@@": "Parameter ini menentukan band yang akan digunakan untuk awan, bayangan awan, dan masking salju. Karena bayangan awan dan salju muncul sangat gelap di band gelombang pendek infra merah (SWIR), dan awan dan salju sangat cerah di band hijau, disarankan agar indeks band untuk SWIR dan band hijau ditutup.",
	"@@CCDC-Analysis_chi-squaredthresholdfordetectchange_tag0@@": "Batas probabilitas perubahan chi-kuadrat. Jika suatu pengamatan memiliki probabilitas perubahan terhitung yang berada di atas ambang batas ini, maka ditandai sebagai anomali, yang merupakan peristiwa perubahan potensial. Nilai defaultnya adalah 0,99.",
	"@@CCDC-Analysis_minimumconsecutiveanomalyobservations_tag0@@": "Jumlah minimum pengamatan anomali berturut-turut yang harus terjadi sebelum suatu peristiwa dianggap sebagai perubahan. Piksel harus ditandai sebagai anomali untuk jumlah irisan waktu berurutan yang ditentukan sebelum dianggap sebagai perubahan yang sebenarnya. Nilai defaultnya adalah 6.",
	"@@CCDC-Analysis_raster_tag0@@": "Layer input raster multidimensional.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag0@@": "Frekuensi untuk memperbarui model rangkaian waktu dengan pengamatan baru. Nilai defaultnya akan diperbarui setiap 1 tahun.",
	"@@CCDC-Analysis_updatingfittingfrequency(inyears)_tag1@@": "Parameter ini menentukan seberapa sering model rangkaian waktu akan diperbarui dengan pengamatan baru. Memperbarui suatu model seringkali dapat menjadi mahal secara komputasi dan manfaatnya dapat minimal. Misalnya, jika ada 365 irisan atau pengamatan yang jelas per tahun dalam raster multidimensional, dan frekuensi pembaruan untuk setiap pengamatan, pemrosesan akan menjadi 365 kali lebih mahal secara komputasi dibandingkan dengan memperbarui satu kali setahun, tetapi akurasinya mungkin tidak lebih tinggi.",
	"@@Trend-To-RGB_modeltype_tag0@@": "Jenis informasi model yang akan dikonversi ke RGB.",
	"@@Trend-To-RGB_modeltype_tag1@@": "Linear - Informasi tren linier akan dikonversi ke RGB. Ini adalah nilai defaultnya.",
	"@@Trend-To-RGB_modeltype_tag2@@": "Harmonik--Informasi tren harmonik akan dikonversi ke RGB.",
	"@@Trend-To-RGB_raster_tag0@@": "Raster tren input.",
	"@@LandTrendr-Analysis_bestmodelproportion_tag0@@": "<p>Nilai proporsi model terbaik. Selama proses pemilihan model, alat akan menghitung nilai-p untuk setiap model dan memilih model yang memiliki simpul paling banyak sekaligus mempertahankan nilai-p terkecil (paling signifikan) berdasarkan nilai proporsi ini. Nilai 1 berarti model memiliki nilai-p paling rendah, tetapi mungkin tidak memiliki banyak simpul. Defaultnya adalah 1,25.</p>",
	"@@LandTrendr-Analysis_maximumnumberofsegments_tag0@@": "<p>Jumlah maksimal segmen yang akan disesuaikan dengan rangkaian waktu untuk setiap piksel. Defaultnya adalah 5.</p>",
	"@@LandTrendr-Analysis_minimumnumberofobservations_tag0@@": "<p>Jumlah minimal observasi yang diperlukan untuk melakukan penyesuaian. Jumlah tahun dalam set data multidimensional input harus sama dengan atau lebih besar dari nilai ini. Defaultnya adalah 6.</p>",
	"@@LandTrendr-Analysis_outputotherbands_tag0@@": "<p>Menentukan apakah band lain dalam hasil disertakan atau tidak.</p><ul><li>Dicentang--Band lain akan disertakan dalam hasil. Informasi segmentasi dan simpul dari band segmentasi awal yang ditentukan dalam parameter<strong>Band Pemrosesan</strong>juga akan dipasang ke band yang tersisa di gambar multiband. Hasil model akan menyertakan band segmentasi terlebih dahulu.</li><li>Tidak dicentang--Band lain tidak akan disertakan. Ini adalah defaultnya.</li></ul>",
	"@@LandTrendr-Analysis_preventoneyearrecovery_tag0@@": "<p>Menentukan apakah segmen yang menunjukkan pemulihan selama satu tahun dikecualikan atau tidak.</p><ul><li>Dicentang--Segmen yang menunjukkan pemulihan selama satu tahun akan dikecualikan. Ini adalah defaultnya.</li><li>Tidak dicentang--Segmen yang menunjukkan pemulihan selama satu tahun tidak akan dikecualikan.</li></ul>",
	"@@LandTrendr-Analysis_processingband_tag0@@": "<p>Band yang digunakan untuk mensegmentasi lintasan nilai piksel dari waktu ke waktu. Pilih band terbaik yang mampu menangkap perubahan dalam fitur yang ingin Anda amati.</p>",
	"@@LandTrendr-Analysis_p-valuethreshold_tag0@@": "<p>Ambang nilai-p untuk model yang akan dipilih. Setelah simpul terdeteksi di tahap awal pemasangan model, alat akan menyesuaikan setiap segmen dan menghitung nilai-p untuk menentukan signifikansi model. Pada iterasi berikutnya, model akan mengurangi jumlah satu segmen dan menghitung ulang nilai-p. Ini akan terus berlanjut, dan jika nilai-p lebih kecil dari nilai yang ditentukan di parameter ini, model akan dipilih dan alat akan berhenti mencari model yang lebih baik. Jika tidak ada model serupa yang dipilih, alat akan memilih model dengan nilai-p yang lebih kecil dari<strong>nilai-p paling rendah × nilai proporsi model terbaik</strong>. Defaultnya adalah 0,01.</p>",
	"@@LandTrendr-Analysis_raster_tag0@@": "<p>Input layer raster multidimensional Landsat.</p>",
	"@@LandTrendr-Analysis_recoveryhasincreasetrend_tag0@@": "<p>Menentukan apakah pemulihan memiliki tren yang meningkat (positif).</p><ul><li>Dicentang--Pemulihan memiliki tren yang meningkat. Ini adalah defaultnya.</li><li>Tidak dicentang--Pemulihan memiliki tren yang menurun.</li></ul>",
	"@@LandTrendr-Analysis_recoverythreshold_tag0@@": "<p>Nilai ambang pemulihan, dalam tahun. Jika segmen memiliki tingkat pemulihan yang lebih cepat dari<strong>1/ambang pemulihan</strong>, segmen tersebut akan dibuang dan tidak disertakan dalam model rangkaian waktu. Nilai harus berkisar antara 0 dan 1. Defaultnya adalah 0,25.</p>",
	"@@LandTrendr-Analysis_snappingdate_tag0@@": "<p>Tanggal yang digunakan untuk memilih irisan untuk setiap tahun dalam set data multidimensional input. Irisan dengan tanggal yang paling dekat dengan tanggal snapping akan dipilih. Parameter ini diperlukan jika set data input berisi data sub-tahunan.</p>",
	"@@LandTrendr-Analysis_spikethreshold_tag0@@": "<p>Ambang yang akan digunakan untuk meredam lonjakan atau anomali dalam lintasan nilai piksel. Nilainya harus berkisar antara 0 dan 1, dengan nilai 1 yang berarti tidak ada peredaman. Defaultnya adalah 0,9.</p>",
	"@@LandTrendr-Analysis_vertexcountovershoot_tag0@@": "<p>Jumlah simpul tambahan melebihi<strong>max_num_segments + 1</strong>yang dapat digunakan untuk memasang model selama tahap awal saat mengidentifikasi simpul. Nantinya pada proses pemodelan, jumlah simpul tambahan akan dikurangi menjadi<strong>max_num_segments + 1</strong>. Defaultnya adalah 2.</p>",
	"@@Merge-Rasters_rasters_tag0@@": "<p>Set data raster input atau set data raster multidimensional yang akan digabungkan.</p>",
	"@@Merge-Rasters_resolveoverlapmethod_tag0@@": "<p>Menentukan metode yang akan digunakan untuk menyelesaikan piksel yang tumpang tindih dalam set data yang digabungkan.</p><ul><li><strong>Pertama</strong>--Nilai piksel di area yang tumpang tindih adalah nilai dari raster pertama dalam daftar raster input. Ini adalah defaultnya.</li><li><strong>Terakhir</strong>--Nilai piksel di area yang tumpang tindih adalah nilai dari raster terakhir dalam daftar raster input.</li><li><strong>Min</strong>--Nilai piksel di area yang tumpang tindih adalah nilai minimal piksel yang tumpang tindih.</li><li><strong>Maks</strong>--Nilai piksel di area yang tumpang tindih adalah nilai maksimal piksel yang tumpang tindih.</li><li><strong>Rata-rata</strong>--Nilai piksel di area yang tumpang tindih adalah rata-rata piksel yang tumpang tindih.</li><li><strong>Jumlah</strong>--Nilai piksel di area yang tumpang tindih adalah jumlah total piksel yang tumpang tindih.</li></ul>",
	"@@Generate-Trend_cycleunit_tag0@@": "<p>Menentukan satuan waktu yang akan digunakan untuk panjang siklus harmonik.</p><ul><li><strong>Hari</strong>--Satuan untuk panjang siklus harmonik adalah hari.</li><li><strong>Tahun</strong>--Satuan untuk panjang siklus harmonik adalah tahun. Ini adalah defaultnya.</li></ul>",
	"@@Generate-Trend_dimensionname_tag0@@": "<p>Dimensi di sepanjang tren akan diekstrak untuk variabel atau variabel yang dipilih dalam analisis.</p>",
	"@@Generate-Trend_harmonicfrequency_tag0@@": "<p>Nomor frekuensi yang akan digunakan dalam penyesuaian tren. Parameter ini menentukan frekuensi siklus dalam setahun. Nilai defaultnya adalah 1, atau satu siklus harmonik per tahun.</p><p>Parameter ini hanya disertakan dalam analisis tren untuk regresi harmonik.</p>",
	"@@Generate-Trend_ignorenodata_tag0@@": "<p>Menentukan apakah nilai NoData dalam analisis diabaikan atau tidak.</p><ul><li>Dicentang--Analisis akan menyertakan semua piksel yang valid di sepanjang dimensi yang ditentukan dan mengabaikan piksel NoData apa pun. Ini adalah defaultnya.</li><li>Tidak dicentang--Analisis akan menghasilkan NoData jika ada nilai NoData untuk piksel di sepanjang dimensi yang ditentukan.</li></ul>",
	"@@Generate-Trend_lengthofcycle_tag0@@": "<p>Panjang variasi periodik ke model. Satuannya adalah hari, terlepas dari satuan waktu data input. Misalnya, kehijauan daun sering memiliki satu siklus variasi yang kuat dalan satu tahun, sehingga panjang siklusnya adalah 365,25. meskipun data inputnya adalah kehijauan bulanan. Data suhu setiap jam memiliki siklus variasi yang kuat sepanjang hari, sehingga panjang siklusnya adalah 1.</p><p>Panjang defaultnya adalah 365,25 hari untuk data yang bervariasi pada siklus tahunan.</p>",
	"@@Generate-Trend_p-valueofslopecoefficient_tag0@@": "<p>Menentukan apakah statistik nilai-p untuk koefisien kemiringan garis tren dihitung atau tidak.</p><ul><li>Dicentang--Nilai-p akan dihitung dan ditampilkan secara rinci saat fungsi selesai.</li><li>Tidak dicentang--Nilai-p tidak akan dihitung. Ini adalah defaultnya.</li></ul>",
	"@@Generate-Trend_polynomialorder_tag0@@": "<p>Nomor urutan polinomial yang digunakan dalam penyesuaian tren. Parameter ini menentukan urutan polinomial. Nilai defaultnya adalah 2, atau polinomial urutan kedua.</p><p>Parameter ini hanya disertakan di dalam analisis tren untuk regresi polinomial.</p>",
	"@@Generate-Trend_r-squared_tag0@@": "<p>Menentukan apakah statistik kebaikan fit R-kuadrat untuk garis fit tren dihitung atau tidak.</p><ul><li>Dicentang--R-kuadrat akan dihitung dan ditampilkan di rincian ketika fungsinya diselesaikan.</li><li>Tidak dicentang--R-kuadrat tidak akan dihitung. Ini adalah defaultnya.</li></ul>",
	"@@Generate-Trend_raster_tag0@@": "<p>Raster multidimensional input.</p>",
	"@@Generate-Trend_rmse_tag0@@": "<p>Menentukan apakah root mean square error (RMSE) garis fit tren dibuat atau tidak.</p><ul><li>Dicentang--RMSE akan dihitung dan ditampilkan di rincian ketika fungsinya diselesaikan. Ini adalah defaultnya.</li><li>Tidak dicentang--RMSE tidak akan dihitung.</li></ul>",
	"@@Generate-Trend_seasonalperiod_tag0@@": "<p>Menentukan satuan waktu yang akan digunakan untuk lama periode musiman ketika melakukan uji Seasonal-Kendall.</p><ul><li>Hari--Satuan untuk lama periode musiman adalah harian. Ini adalah defaultnya.</li><li>Bulan--Satuan untuk lama periode musiman adalah bulan.</li></ul>",
	"@@Generate-Trend_trendtype_tag0@@": "<p>Menentukan jenis garis yang akan digunakan agar sesuai dengan nilai piksel di sepanjang dimensi.</p><ul><li><strong>Linear</strong>--Menyesuaikan nilai piksel untuk variabel di sepanjang garis tren linear. Ini adalah defaultnya.</li><li><strong>Harmonik</strong>--Menyesuaikan nilai piksel untuk variabel di sepanjang garis tren harmonik.</li><li><strong>Polinomial</strong>--Menyesuaikan nilai piksel untuk variabel di sepanjang garis tren polinomial dua urutan.</li><li><strong>Mann-Kendall</strong>--Nilai piksel variabel akan dievaluasi menggunakan uji tren Mann-Kendall.</li><li><strong>Seasonal Kendall</strong>--Nilai piksel variabel akan dievaluasi menggunakan uji tren Seasonal-Kendall.</li></ul>",
	"@@Compute-Change_cellsizetype_tag0@@": "<p>Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua sel input memilliki ukuran sama, maka semua opsi akan menghasilkan hasil yang sama.</p><ul><li>Pertama Dari--Gunakan ukuran sel pertama dari raster input.</li><li>Minimal Dari--Gunakan ukuran sel terkecil dari semua raster input.</li><li>Maksimal Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah defaultnya.</li><li>Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.</li><li>Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.</li></ul>",
	"@@Compute-Change_computechangemethod_tag0@@": "<p>Metode yang digunakan untuk komputasi.</p><ul><li><strong>Selisih</strong>--Selisih matematis, atau pengurangan, di nilai piksel di raster input akan dihitung. Ini adalah defaultnya.</li><li><strong>Perbedaan Relatif</strong>--Perbedaan dalam nilai piksel, yang ikut mempertimbangkan besarnya nilai yang dibandingkan, akan dihitung.</li><li><strong>Perbedaan Kategoris</strong>--Perbedaan antara dua raster kategoris atau tematis akan dihitung, dengan outputnya memuat transisi kelas yang terjadi antara dua raster.</li><li><strong>Jarak Euclidean Spektral</strong>--Jarak Euclidean di antara nilai piksel dua raster multiband akan dihitung.</li><li><strong>Perbedaan Sudut Spektral</strong>--Sudut spektral di antara nilai piksel dua raster multiband akan dihitung. Outputnya berada dalam radian.</li><li><strong>Band Dengan Perubahan Paling Banyak</strong>--Band yang memiliki perubahan paling banyak dalam setiap piksel di antara dua raster multiband akan dihitung.</li></ul><p>Jika<strong>Hitung Metode Perubahan</strong>ditetapkan menjadi<strong>Perbedaan Kategoris</strong>dan salah satu input tidak bersifat kategoris, maka selisih sederhananya yang akan dihitung.</p>",
	"@@Compute-Change_definetransitioncolors_tag0@@": "<p>Tentukan metode yang akan digunakan untuk menandakan piksel yang kelasnya berubah.</p><ul><li><strong>Rata-rata Warna Dari Dan Hingga</strong>--Warna piksel akan menjadi rata-rata warna kelas aslinya dan warna kelas akhirnya.</li><li><strong>Gunakan Warna Dari</strong>--Warna piksel akan menjadi warna kelas aslinya.</li><li><strong>Gunakan Warna Hingga</strong>--Warna piksel akan menjadi warna kelas akhirnya.</li></ul>",
	"@@Compute-Change_extenttype_tag0@@": "<p>Pilih jangkauan yang akan digunakan di raster output:</p><ul><li>Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.</li><li>Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah defaultnya.</li><li>Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.</li><li>Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.</li></ul>",
	"@@Compute-Change_filtermethod_tag0@@": "<p>Pilih metode filter untuk komputasi perubahan kategori.</p><ul><li><strong>Pertahankan Semua</strong>--Semua kelas akan diikutsertakan ke dalam output, dan tidak akan ada pemfilteran. Pilih opsi ini untuk melihat perubahan dan konsistensi di set data tunggal.</li><li><strong>Hanya Pertahankan Piksel yang Berubah Saja</strong>--Hanya kelas yang berubah dari satu jenis kelas ke jenis kelas lainnya yang akan diikutsertakan di dalam output. Pilih opsi ini jika Anda hanya tertarik pada perubahan.</li><li><strong>Hanya Pertahankan Piksel yang Tidak Berubah Saja</strong>--Hanya kelas yang tidak berubah yang diikutsertakan di dalam output. Pilih opsi ini jika Anda hanya tertarik pada konsistensi.</li></ul>",
	"@@Compute-Change_fromclassvalues_tag0@@": "<p>Nilai kelas dari<strong>Dari Raster</strong>yang akan diikutsertakan di dalam komputasi, jika membandingkan dua raster kategoris. Ini adalah daftar nilai bilangan bulat yang dibatasi ruang dan berhubungan dengan kolom<strong>ClassValue</strong>di set data raster input Anda.</p>",
	"@@Compute-Change_fromraster_tag0@@": "<p>Raster pertama yang akan digunakan di dalam komputasi. Untuk mengevaluasi perubahan dari waktu 1 (sebelumnya) ke waktu 2 (sesudahnya), masukkan raster waktu 1 di sini.</p>",
	"@@Compute-Change_toclassvalues_tag0@@": "<p>Nilai kelas dari<strong>Hingga Raster</strong>yang akan diikutsertakan di dalam komputasi, jika membandingkan dua raster kategoris. Ini adalah daftar nilai bilangan bulat yang dibatasi ruang dan berhubungan dengan kolom<strong>ClassValue</strong>di set data raster input Anda.</p>",
	"@@Compute-Change_toraster_tag0@@": "<p>Raster kedua yang akan digunakan di dalam komputasi. Untuk mengevaluasi perubahan dari waktu 1 (sebelumnya) ke waktu 2 (sesudahnya), masukkan raster waktu 2.</p>",
	"@@Compute-Change_usecolormethod_tag0@@": "<p>Tentukan metode yang akan digunakan untuk menandakan piksel yang kelasnya berubah.</p><ul><li><strong>Rata-rata Warna Dari Dan Hingga</strong>--Warna piksel akan menjadi rata-rata warna kelas aslinya dan warna kelas akhirnya.</li><li><strong>Gunakan Warna Dari</strong>--Warna piksel akan menjadi warna kelas aslinya.</li><li><strong>Gunakan Warna Hingga</strong>--Warna piksel akan menjadi warna kelas akhirnya.</li></ul>",
	"@@Compute-Change_fieldnameforclassnamesinfromraster_tag0@@": "<p>Kolom yang menyimpan nama kelas dalam input<strong>Raster Dari</strong>. Alat ini akan otomatis mencari kolom<strong>ClassName</strong>atau kolom<strong>Class_Name</strong>yang akan digunakan.</p><p>Gunakan opsi ini jika input tidak berisi nama kolom standar ini.</p>",
	"@@Compute-Change_fieldnameforclassnamesintoraster_tag0@@": "<p>Kolom yang menyimpan nama kelas dalam input<strong>Raster Ke</strong>. Alat ini akan otomatis mencari kolom<strong>ClassName</strong>atau kolom<strong>Class_Name</strong>yang akan digunakan.</p><p>Gunakan opsi ini jika input tidak berisi nama kolom standar ini.</p>",
	"@@Statistics_numberofcolumns_tag0@@": "<p>Jumlah kolom piksel yang digunakan dalam dimensi lingkungan fokus.</p>",
	"@@Statistics_numberofrows_tag0@@": "<p>Jumlah baris piksel yang digunakan dalam dimensi lingkungan fokus.</p>",
	"@@Statistics_onlyfillnodatapixels_tag0@@": "<p>Mengisi kekosongan NoData di output. Ini berguna ketika kemungkinan ada garis jatuh di citra Anda.</p>",
	"@@Statistics_raster_tag0@@": "<p>Raster input untuk menjalankan statistik fokus.</p>",
	"@@Statistics_statisticstype_tag0@@": "<p>Berikut adalah tujuh jenis fungsi statistik fokus:</p><ul><li>Minimal--Menghitung nilai minimal piksel di dalam lingkungan.</li><li>Maksimal--Menghitung nilai maksimal piksel di dalam lingkungan.</li><li>Rata-rata--Menghitung nilai rata-rata piksel di dalam lingkungan. Ini adalah defaultnya.</li><li>Simpangan Baku--Menghitung nilai simpangan baku piksel di dalam lingkungan.</li><li>Median--Menghitung nilai median piksel di dalam lingkungan.</li><li>Mayoritas--Menghitung nilai mayoritas piksel, atau nilai yang paling sering ada di piksel, di dalam lingkungan.</li><li>Minoritas--Menghitung nilai minoritas piksel, atau nilai yang paling jarang ada di piksel, di dalam lingkungan.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changedirection_tag0@@": "<p>Menentukan arah perubahan yang akan disertakan di dalam analisis.</p><p>Parameter ini hanya tersedia ketika raster analisis perubahan input adalah output dari alat LandTrendr.</p><ul><li><strong>Segala arah</strong>--Semua arah perubahan akan disertakan di dalam output. Ini adalah defaultnya.</li><li><strong>Meningkat</strong>--Hanya perubahan arah positif atau meningkat yang disertakan di dalam output.</li><li><strong>Menurun</strong>--Hanya perubahan arah negatif atau menurun yang disertakan di dalam output.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_changetype_tag0@@": "<p>Menentukan informasi perubahan yang dihitung.</p><ul><li><strong>Waktu Perubahan Terakhir</strong>--Setiap piksel memuat tanggal perubahan terakhir untuk piksel tersebut di rangkaian waktunya. Ini adalah defaultnya.</li><li><strong>Waktu Perubahan Paling Awal</strong>--Setiap piksel memuat tanggal perubahan paling awal untuk piksel tersebut di rangkaian waktunya.</li><li><strong>Waktu Perubahan Terbesar</strong>--Setiap piksel memuat tanggal perubahan yang paling signifikan untuk piksel tersebut di rangkaian waktunya.</li><li><strong>Jumlah Perubahan</strong>--Setiap piksel memuat jumlah total perubahan piksel tersebut di rangkaian waktunya.</li><li><strong>Waktu Perubahan Terpanjang</strong>--Setiap piksel memuat tanggal perubahan pada akhir segmen transisi terpanjang di rangkaian waktunya.</li><li><strong>Waktu Perubahan Terpendek</strong>--Setiap piksel memuat tanggal perubahan pada akhir segmen transisi terpendek di rangkaian waktunya.</li><li><strong>Waktu Perubahan Tercepat</strong>--Setiap piksel memuat tanggal perubahan pada akhir transisi yang terjadi paling cepat.</li><li><strong>Waktu Perubahan Terlambat</strong>--Setiap piksel memuat tanggal perubahan pada akhir transisi yang terjadi paling lambat.</li></ul>",
	"@@Detect-Change-Using-Change-Analysis_filterbyduration_tag0@@": "<p>Menentukan filter menurut durasi perubahan.</p><p></p><ul><li>Dicentang--Filter hasil menurut durasi, sehingga hanya perubahan yang berlangsung hingga waktu tertentu yang disertakan di dalam output.</li><li>Tidak dicentang--Tidak memfilter hasil menurut durasi. Ini adalah defaultnya.</li></ul><p>Parameter ini hanya tersedia ketika raster analisis perubahan input adalah output dari alat LandTrendr.</p><p>Jika parameter ini dicentang, Anda harus menetapkan parameter<strong>Durasi Minimal</strong>dan<strong>Durasi Maksimal</strong>untuk pemfilteran.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbymagnitude_tag0@@": "<p>Menentukan filter menurut magnitudo perubahan.</p><ul><li>Dicentang--Filter hasil menurut magnitudo sehingga hanya perubahan magnitudo tertentu yang diikutsertakan di dalam output.</li><li>Tidak dicentang--Tidak memfilter hasil menurut magnitudo. Ini adalah defaultnya.</li></ul><p>Parameter ini hanya tersedia ketika raster analisis perubahan input adalah output dari alat LandTrendr.</p><p>Jika parameter ini dicentang, Anda harus menetapkan parameter<strong>Magnitudo Minimal</strong>dan<strong>Magnitudo Maksimal</strong>untuk pemfilteran.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyyear_tag0@@": "<p>Menentukan pembatasan output menurut rentang tahun.</p><ul><li>Dicentang--Filter hasil agar hanya perubahan yang terjadi dalam rentang tahun tertentu yang diikutsertakan di dalam output.</li><li>Tidak dicentang--Tidak memfilter hasil menurut tahun. In adalah defaultnya.</li></ul><p>Jika parameter ini dicentang, Anda harus menetapkan parameter<strong>Nilai Minimal</strong>dan<strong>Nilai Maksimal</strong>untuk pemfilteran.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbystartvalue_tag0@@": "<p>Filter hasil berdasarkan nilai awal sehingga hanya perubahan nilai awal yang ditentukan yang disertakan dalam output.</p>",
	"@@Detect-Change-Using-Change-Analysis_filterbyendvalue_tag0@@": "<p>Filter hasil berdasarkan nilai akhir sehingga hanya perubahan nilai akhir yang ditentukan yang disertakan dalam output.</p>",
	"@@Detect-Change-Using-Change-Analysis_maximumnumberofchanges_tag0@@": "<p>Jumlah maksimal perubahan per piksel yang akan dihitung. Jumlah yang dimasukkan sesuai dengan jumlah band di raster output. Defaultnya adalah 1, yang berarti hanya satu tanggal perubahan yang dihitung, dan raster output hanya berisi satu band.</p><p>Parameter ini tidak tersedia ketika parameter<strong>Jenis Perubahan</strong>diatur ke<strong>Jumlah perubahan</strong>.</p>",
	"@@Detect-Change-Using-Change-Analysis_raster_tag0@@": "<p>Raster analisis perubahan input.</p>",
	"@@Detect-Change-Using-Change-Analysis_segmentdate_tag0@@": "<p>Menentukan apakah ekstraksi tanggal dilakukan di awal segmen perubahan atau di akhir.</p><p>Parameter ini hanya tersedia ketika raster analisis perubahan input adalah output dari alat LandTrendr.</p><ul><li><strong>Awal segmen</strong>--Ekstrak tanggal di awal segmen perubahan. Ini adalah defaultnya.</li><li><strong>Akhir segmen</strong>--Ekstrak tanggal di akhir segmen perubahan.</li></ul>",
	"@@Kernel-Density_areaunits_tag0@@": "<p>Satuan area dari nilai kepadatan output.</p><ul><li>Satuan Peta Persegi--Untuk satuan linear persegi sebagai referensi spasial output.</li><li>Mil Persegi--Untuk mil (A.S).</li><li>Kilometer Persegi--Untuk kilometer.</li><li>Acre--Untuk acre (A.S.).</li><li>Hektar--Untuk hektar.</li><li>Meter Persegi--Untuk meter.</li><li>Yard Persegi--Untuk yard (A.S.).</li><li>Kaki Persegi--Untuk kaki (A.S.).</li><li>Inci Persegi--Untuk inci (A.S.).</li><li>Sentimeter Persegi--Untuk sentimeter.</li><li>Milimeter Persegi--Untuk millimeter.</li></ul>",
	"@@Kernel-Density_cellsize_tag0@@": "<p>Ukuran piksel untuk set data raster output. Jika nilai<strong>Ukuran sel</strong>telah ditetapkan di dalam lingkungan geoprocessing, maka nilai tersebut akan menjadi defaultnya.</p>",
	"@@Kernel-Density_inputbarriers_tag0@@": "<p>Set data yang menentukan penghalang.</p><p>Penghalang dapat menjadi fitur layer polyline atau fitur poligon.</p>",
	"@@Kernel-Density_inputfeatures_tag0@@": "<p>Titik input atau fitur garis yang digunakan untuk menghitung kepadatan.</p>",
	"@@Kernel-Density_method_tag0@@": "<p>Menentukan penggunaan jalur terpendek pada metode sferoid (geodesik) atau bumi datar (planar).</p><ul><li><strong>Planar</strong>--Menggunakan jarak planar di antara fitur. Ini adalah defaultnya.</li><li><strong>Geodesik</strong>--Menggunakan jarak geodesik di antara fitur. Metode ini mempertimbangkan lengkungan sferoid dan menangani data di dekat kutub dan garis waktu internasional.</li></ul><p>Anda disarankan menggunakan metode<strong>Geodesik</strong>untuk data yang disimpan di sistem koordinat yang tidak sesuai untuk pengukuran jarak dan analisis lain yang mencakup area geografis yang luas. Misalnya, Web Mercator atau sistem koordinat geografis sebaiknya menggunakan metode<strong>Geodesik</strong>.</p>",
	"@@Kernel-Density_outputcellvalues_tag0@@": "<p>Menentukan nilai yang direpresentasikan di dalam raster output.</p><ul><li><strong>Kepadatan</strong>--Nilai output merepresentasikan nilai kepadatan yang diprediksi. Ini adalah defaultnya.</li><li><strong>Jumlah yang Diharapkan</strong>--Nilai output merepresentasikan jumlah fenomena yang diprediksi dalam setiap piksel. Karena nilai piksel ditautkan ke nilai<strong>Ukuran sel</strong>yang ditentukan, raster yang dihasilkan tidak dapat diambil ulang sampelnya ke ukuran piksel yang berbeda dan masih merepresentasikan jumlah fenomena.</li></ul>",
	"@@Kernel-Density_populationfield_tag0@@": "<p>Kolom yang menunjukkan nilai populasi untuk setiap fitur. Nilai<strong>Kolom Populasi</strong>adalah jumlah atau kuantitas yang akan disebarkan di seluruh lanskap untuk menciptakan permukaan yang berkelanjutan. Nilai di<strong>Kolom Populasi</strong>dapat berupa bilangan bulat atau titik mengambang.</p><p>Opsi dan perilaku default untuk kolom tersebut dijelaskan di bawah berdasarkan urutan prioritasnya.</p><ul><li>Gunakan<strong>None</strong>jika tidak ada item atau nilai khusus yang akan digunakan dan setiap fitur akan dihitung sekali.</li><li>Gunakan<strong>Shape</strong>jika fitur input berisi Z.</li><li>Jika tidak, kolom defaultnya adalah<strong>POPULATION</strong>, atau turunan lain dar populasi yang dapat diterima:<ul><li><strong>POPULATIONxxxx</strong>dengan<strong>xxxx</strong>yang dapat berupa karakter valid, seperti<strong>POPULATION6</strong>,<strong>POPULATION1974</strong>, atau<strong>POPULATIONROADTYPE</strong>.</li><li><strong>POP</strong>.</li><li><strong>POPxxxx</strong>.</li><li>Jika tidak ada satu pun di atas yang berlaku, maka defaultnya adalah<strong>None</strong>.</li></ul></li></ul>",
	"@@Kernel-Density_searchradius_tag0@@": "<p>Radius pencarian untuk menghitung kepadatan. Satuan ditentukan berdasarkan satuan linear proyeksi.</p><p>Misalnya, jika satuannya berupa meter--untuk menyertakan semua fitur dalam lingkungan satu mil--tetapkan radius pencariannya setara dengan 1609,344 (karena 1 mil sama dengan 1609,344 meter).</p>",
	"@@Zonal-Statistics_ignorenodataincalculations_tag0@@": "<p>Menentukan apakah nilai<strong>NoData</strong>di<strong>Raster Nilai</strong>akan memengaruhi hasil zona yang ada.</p><ul><li><strong>Ya</strong>--Dalam zona tertentu, hanya piksel yang memiliki nilai di<strong>Raster Nilai</strong>yang akan digunakan untuk menentukan nilai output zona tersebut. Piksel<strong>NoData</strong>di<strong>Raster Nilai</strong>akan diabaikan di dalam penghitungan statistik. Ini adalah defaultnya.</li><li><strong>Tidak</strong>--Dalam zona tertentu, jika piksel<strong>NoData</strong>ada di<strong>Raster Nilai</strong>, maka nantinya akan dianggap bahwa informasinya tidak cukup untuk melakukan penghitungan statistik bagi semua piksel di zona tersebut. Oleh karenanya, seluruh zona akan menerima nilai<strong>NoData</strong>di raster output.</li></ul>",
	"@@Zonal-Statistics_percentileinterpolationtype_tag0@@": "<p>Menentukan metode interpolasi persentil yang akan digunakan ketika nilai dari raster input yang akan dihitung bersifat genap.</p><ul><li><strong>Deteksi otomatis</strong>--Jika raster nilai input merupakan jenis piksel bilangna bulat, maka metode<strong>Terdekat</strong>yang akan digunakan. Jika raster nilai input merupakan jenis piksel titik mengambang, maka metode<strong>Linear</strong>yang akan digunakan. Ini adalah defaultnya.</li><li><strong>Terdekat</strong>--Nilai yang paling mendekati persentil yang diinginkan yang akan digunakan. Dalam hal ini, jenis piksel output sama seperti raster nilai input.</li><li><strong>Linear</strong>--Rata-rata dari dua nilai terdekat dari persentil yang diinginkan yang akan digunakan. Dalam hal ini, jenis piksel output adalah titik mengambang.</li></ul>",
	"@@Zonal-Statistics_percentilevalue_tag0@@": "<p>Persentil yang dihitung. Defaultnya adalah 90, untuk persentil ke-90.</p><p>Nilai dapat bervariasi, mulai dari 0 hingga 100. Persentil ke-0 pada dasarnya setara dengan statistik Minimal, dan persentil ke-100 setara dengan statistik Maksimal. Nilai 50 pada dasarnya akan menghasilkan nilai yang sama dengan statistik Median.</p>",
	"@@Zonal-Statistics_processasmultidimensional_tag0@@": "<p>Menentukan cara pemrosesan raster nilai multidimensional.</p><ul><li><strong>Irisan Saat Ini</strong>--Statistik akan dihitung dari irisan set data multidimensional saat ini. Ini adalah defaultnya.</li><li><strong>Semua Irisan</strong>--Statistik akan dihitung untuk semua dimensi (misalnya waktu atau kedalaman) set data multidimensional.</li></ul>",
	"@@Zonal-Statistics_statisticstype_tag0@@": "<p>Jenis statistik yang akan dihitung.</p><ul><li><strong>Rata-rata</strong>--Menghitung rata-rata semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li><li><strong>Mayoritas</strong>--Menentukan nilai yang paling sering ada di semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li><li><strong>Maksimal</strong>--Menentukan nilai terbesar dari semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li><li><strong>Median</strong>--Menentukan nilai median semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li><li><strong>Minimal</strong>--Menentukan nilai terkecil dari semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li><li><strong>Minoritas</strong>--Menentukan nilai yang paling jarang ada di semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li><li><strong>Persentil</strong>--Menghitung persentil semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output. Persentil ke-90 dihitung secara default. Anda dapat menentukan persentil yang akan dihitung dengan parameter<strong>Nilai Persentil</strong>.</li><li><strong>Rentang</strong>--Menghitung selisih antara nilai terbesar dan terkecil dari semua piksel yang ada di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li><li><strong>Simpangan Baku</strong>--Menghitung simpangan baku semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li><li><strong>Jumlah</strong>--Menghitung total nilai semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li><li><strong>Variasi</strong>--Menghitung jumlah nilai unik dari semua piksel di<strong>Raster Nilai</strong>yang berada di zona yang sama seperti piksel output.</li></ul>",
	"@@Zonal-Statistics_valueraster_tag0@@": "<p>Raster yang berisi nilai untuk menghitung statistik.</p>",
	"@@Zonal-Statistics_zonefield_tag0@@": "<p>Kolom yang menyimpan nilai yang menentukan setiap zona. Ini bisa berupa bilangan bulat atau kolom string dari raster zona.</p>",
	"@@Zonal-Statistics_zoneraster_tag0@@": "<p>Set data yang menentukan zona. Zona dapat didefinisikan oleh raster bilangan bulat.</p>",
	"@@Zonal-Statistics_calculatecircularstatistics_tag0@@": "<p>Pilih cara penghitungan jenis statistik.</p><ul><li><strong>Aritmetik</strong>--Menghitung statistik aritmetik. Ini adalah defaultnya.</li><li><strong>Melingkar</strong>--Menghitung statistik melingkar yang sesuai untuk kuantitas berkaitan dengan putaran, seperti derajat arah kompas, waktu dalam hari, dan bagian pecahan bilangan asli.</li></ul>",
	"@@Zonal-Statistics_circularwrapvalue_tag0@@": "<p>Nilai kemungkinan tertinggi (batas atas) dalam data putaran. Secara default diatur ke angka positif, yaitu 360. Nilai ini juga menggambarkan kuantitas yang sama dengan nilai kemungkinan terendah (batas bawah).</p><p>Parameter ini hanya dapat diterapkan saat penghitungan statistik melingkar.</p>",
	"@@Boundary-Clean-function_inputraster_tag0@@": "<p>Raster input untuk batas antar zona yang akan dihaluskan.</p><p>Jenisnya harus berupa bilangan bulat.</p>",
	"@@Boundary-Clean-function_runexpansionandshrinkingtwice_tag0@@": "<p>Menentukan jumlah frekuensi penghalusan, apakah dua kali atau hanya satu kali.</p><ul><li><p><strong>Dicentang</strong>--Melakukan operasi perluasan dan penyusutan dua kali. Untuk pertama kalinya, operasinya dilakukan menurut jenis pengurutan yang ditentukan. Selanjutnya, operasi perluasan dan penyusutan tambahan akan dilakukan dengan prioritas yang dibalik. Ini adalah defaultnya.</p></li><li><p><strong>Tidak dicentang</strong>--Melakukan operasi perluasan dan penyusutan sebanyak satu kali menurut jenis pengurutannya.</p></li></ul>",
	"@@Boundary-Clean-function_sorttype_tag0@@": "<p>Menentukan jenis pengurutan yang digunakan dalam proses penghalusan. Pengurutannya menentukan priroritas perluasan sel ke dalam lingkungannya.</p><p>Pengurutannya dapat dilakukan berdasarkan nilai zona atau area zona.</p><ul><li><p><strong>Jangan urutkan</strong>--Zona tidak akan diurutkan menurut ukuran. Zona dengan nilai yang lebih besar akan memiliki prioritas yang lebih tinggi untuk diperluas ke zona dengan nilai yang lebih kecil dalam output yang diperhalus. Ini adalah defaultnya.</p></li><li><p><strong>Turun</strong>--Mengurutkan zona dalam urutan turun menurut ukurannya. Zona dengan total area yang lebih besar akan memiliki prioritas lebih tinggi untuk diperluas ke zona dengan total area yang lebih kecil. Opsi ini cenderung mengeliminasi atau mengurangi kemunculan sel dari zona yang lebih kecil dalam output yang sudah dihaluskan.</p></li><li><p><strong>Naik</strong>--Mengurutkan zona dalam urutan naik menurut ukurannya. Zona dengan total area yang lebih kecil akan memiliki prioritas lebih tinggi untuk diperluas ke zona dengan total area yang lebih besar. Opsi ini cenderung mempertahankan atau meningkatkan kemunculan sel dari zona yang lebih kecil dalam output yang sudah dihaluskan.</p></li></ul>",
	"@@Aggregate-Multidimensional_dimension_tag0@@": "<p>Dimensi agregasi. Ini adalah dimensi di mana kira-kira variabel akan diagregasi.</p>",
	"@@Aggregate-Multidimensional_dimensiondefinition_tag0@@": "<p>Menentukan metode yang digunakan untuk memfilter data multidimensional input sebelum melakukan agregasi.</p><ul><li><strong>Semua</strong>--Rentang penuh untuk setiap dimensi akan digunakan. Ini adalah defaultnya.</li><li><strong>Berdasarkan Nilai</strong>--Dimensi akan diiris menggunakan nilai dimensi atau daftar nilai.</li><li><strong>Berdasarkan Rentang</strong>--Dimensi akan diiris menggunakan rentang atau daftar rentang.</li><li><strong>Berdasarkan Iterasi</strong>--Dimensi akan diiris menurut ukuran interval tertentu.</li></ul>",
	"@@Aggregate-Multidimensional_iterationdefinitionparameters_tag0@@": "<p>Parameter Penentuan Iterasi memungkinkan Anda menentukan nilai dimensi yang akan digunakan untuk memfilter data multidimensional input untuk analisis ketika parameter<strong>Definisi Dimensi</strong>diatur ke<strong>Berdasarkan Iterasi</strong>.</p><ul><li><strong>Dimensi</strong>--Dimensi yang akan digunakan untuk memfilter.</li><li><strong>Awal iterasi pertama</strong>--Awal interval pertama. Interval ini digunakan untuk mengulang set data.</li><li><strong>Akhir iterasi pertama</strong>--Akhir interval pertama. Interval ini digunakan untuk mengulang set data.</li><li><strong>Langkah</strong>--Frekuensi untuk pengirisan data.</li><li><strong>Unit</strong>--Unit iterasi.</li></ul>",
	"@@Aggregate-Multidimensional_keywordinterval_tag0@@": "<p>Menentukan interval kata kunci yang akan digunakan ketika mengagregasi sepanjang dimensi.</p><p>Parameter ini diperlukan ketika parameter<strong>Jenis</strong>diatur ke<strong>Kata Kunci Interval</strong>.</p><ul><li><strong>Per Jam</strong>--Nilai data diagregasi ke dalam langkah waktu per jam, dan hasilnya akan mencakup setiap jam dalam rangkaian waktu. Ini adalah defaultnya.</li><li><strong>Harian</strong>--Nilai data diagregasi ke dalam langkah waktu harian, dan hasilnya akan mencakup setiap hari dalam rangkaian waktu.</li><li><strong>Mingguan</strong>--Nilai data diagregasi ke dalam langkah waktu mingguan, dan hasilnya akan mencakup setiap minggu dalam rangkaian waktu.</li><li><strong>Setiap 10 Hari</strong>--Nilai data akan diagregasi ke dalam 3 periode yang masing-masing lamanya 10 hari. Periode terakhir mungkin akan memiliki lebih atau kurang dari 10 hari. Hasilnya akan mencakup 3 irisan setiap bulan.</li><li><strong>Setiap 5 Hari</strong>--Nilai data akan diagregasi ke dalam 6 periode yang masing-masing lamanya 5 hari. Periode terakhir mungkin akan memiliki lebih atau kurang dari 5 hari. Hasilnya akan mencakup 6 irisan setiap bulan.</li><li><strong>Bulanan</strong>--Nilai data diagregasi ke dalam langkah waktu bulanan, dan hasilnya akan mencakup setiap bulan dalam rangkaian waktu.</li><li><strong>Triwulanan</strong>--Nilai data diagregasi ke dalam langkah waktu triwulanan, dan hasilnya akan mencakup setiap triwulan dalam rangkaian waktu.</li><li><strong>Tahunan</strong>--Nilai data diagregasi ke dalam langkah waktu tahunan, dan hasilnya akan mencakup setiap tahun dalam rangkaian waktu.</li><li><strong>Berulang setiap hari</strong>--Nilai data diagregasi ke dalam langkah waktu harian, dan hasilnya akan mencakup satu nilai agregat per hari Julian. Hasilnya akan mencakup, paling banyak, 366 irisan waktu harian.</li><li><strong>Berulang setiap minggu</strong>--Nilai data diagregasi ke dalam langkah waktu mingguan, dan hasilnya akan mencakup satu nilai agregat per minggu. Hasilnya akan mencakup, paling banyak, 53 irisan waktu mingguan.</li><li><strong>Berulang setiap bulan</strong>--Nilai data diagregasi ke dalam langkah waktu bulanan, dan hasilnya akan mencakup satu nilai agregat per bulan. Hasilnya akan mencakup, paling banyak, 12 irisan waktu bulanan.</li><li><strong>Berulang setiap triwulan</strong>--Nilai data diagregasi ke dalam langkah waktu triwulanan, dan hasilnya akan mencakup satu nilai agregat per triwulan. Hasilnya akan mencakup, paling banyak, 4 irisan waktu triwulanan.</li></ul>",
	"@@Aggregate-Multidimensional_operation_tag0@@": "<p>Menentukan metode matematika yang akan digunakan untuk memadukan irisan agregat dalam sebuah interval.</p><ul><li><strong>Mayoritas</strong>--Nilai piksel yang paling sering muncul akan dihitung di semua irisan dalam interval.</li><li><strong>Maksimum</strong>--Nilai maksimum piksel akan dihitung di semua irisan dalam interval.</li><li><strong>Rata-rata</strong>--Rata-rata nilai piksel akan dihitung di semua irisan dalam interval. Ini adalah defaultnya.</li><li><strong>Median</strong>--Nilai median piksel akan dihitung di semua irisan dalam interval.</li><li><strong>Minimum</strong>--Nilai minimum piksel akan dihitung di semua irisan dalam interval.</li><li><strong>Minoritas</strong>--Nilai piksel yang paling jarang muncul akan dihitung di semua irisan dalam interval.</li><li><strong>Rentang</strong>--Rentang nilai piksel akan dihitung di semua irisan dalam interval.</li><li><strong>Simpangan Baku</strong>--Simpangan baku nilai piksel akan dihitung di semua irisan dalam interval.</li><li><strong>Jumlah</strong>--Jumlah nilai piksel akan dihitung di semua irisan dalam interval.</li><li><strong>Keragaman</strong>--Jumlah nilai piksel yang unik akan dihitung di semua irisan dalam interval.</li></ul><p>Semua opsi juga memiliki ekuivalennya untuk opsi Abaikan NoData. Opsi tersebut akan melakukan operasi matematika terhadap semua piksel yang valid di sepanjang dimensi dan mengabaikan piksel NoData.</p>",
	"@@Aggregate-Multidimensional_ranges_tag0@@": "<p>Rentang interval yang ditentukan dalam tabel akan digunakan untuk melakukan agregasi kelompok nilai. Nilai minimum dan maksimum menentukan rentang yang akan diikutsertakan.</p><p>Parameter ini diperlukan ketika parameter<strong>Jenis</strong>diatur ke<strong>Rentang Interval</strong>.</p>",
	"@@Aggregate-Multidimensional_raster_tag0@@": "<p>Raster multidimensional input.</p>",
	"@@Aggregate-Multidimensional_type_tag0@@": "<p>Menentukan interval dimensi untuk data mana yang akan diagregasi.</p><ul><li><strong>Semua</strong>--Data variabel akan diagregasi di semua irisan. Ini adalah defaultnya.</li><li><strong>Kata Kunci Interval</strong>--The variable data will be aggregated using a commonly known interval.</li><li><strong>Interval Value</strong>--Data variabel akan diagregasi menggunakan interval dan unit yang ditentukan pengguna.</li><li><strong>Rentang Interval</strong>--Data variabel akan diagregasi antara pasangan nilai atau tanggal yang ditentukan.</li></ul>",
	"@@Aggregate-Multidimensional_valueinterval_tag0@@": "<p>Ukuran interval yang digunakan untuk agregasi.</p><p>Parameter ini diperlukan ketika parameter<strong>Jenis</strong>diatur ke<strong>Nilai Interval</strong>.</p>",
	"@@Aggregate-Multidimensional_values_tag0@@": "<p>Nilai dimensi yang akan digunakan untuk memfilter data multidimensional input untuk analisis. Parameter ini diperlukan ketika parameter<strong>Penentuan Dimensi</strong>diatur ke<strong>Berdasarkan Nilai</strong>.</p>",
	"@@Aggregate-Multidimensional_variables_tag0@@": "<p>Variabel yang akan diagregasi sepanjang dimensi yang ditentukan.</p>",
	"@@Predict-Using-Regression_inputdefinitionfile_tag0@@": "<p>File definisi regresi Esri (<strong>.ecd</strong>) input yang berisi statistik dan informasi untuk kumpulan data tertentu, model regresi, dan atribut yang dipilih.</p>",
	"@@Predict-Using-Regression_rasters_tag0@@": "<p>Kumpulan data raster atau kumpulan data yang merepresentasikan variabel prediktor. Ini bisa berupa raster single band, raster multiple-band, raster multidimensi, kumpulan data mosaik, atau kumpulan raster.</p>",
	"@@Cell-Statistics_operation_tag0@@": "<p>Jenis perhitungan statistik yang ingin Anda lakukan.</p><p>Statistik yang tersedia adalah<strong>Mayoritas</strong>,<strong>Maksimal</strong>,<strong>Rata-rata</strong>,<strong>Median</strong>,<strong>Minimal</strong>,<strong>Minoritas</strong>,<strong>Persentil</strong>,<strong>Rentang</strong>,<strong>Simpangan Baku</strong>,<strong>Jumlah</strong>, dan<strong>Varietas</strong>.</p><p>Nilai default-nya adalah<strong>Rata-rata</strong>.</p>",
	"@@Colormap-To-RGB_randomlyassigncolortounmappedpixels_tag0@@": "<p>Warna ditetapkan secara acak ke piksel yang tidak disertakan dalam peta warna.</p><ul><li>Piksel yang tidak dicentang--yang tidak dipetakan tidak diberi warna. Ini adalah nama default.</li><li>Piksel dicentang--yang tidak dipetakan diberi warna.</li></ul>",
	"@@Pansharpen_sensor_tag0@@": "<p>Ketika algoritme Gram-Schmidt dipilih, Anda juga dapat menentukan sensor yang mengumpulkan input raster multiband. Pemilihan jenis sensor akan mengatur bobot band yang sesuai.</p>",
	"@@Dimensional-Moving-Statistics_backwardwindow_tag0@@": "<p>Nilai berapa banyak irisan sebelum atau di atasnya untuk dimasukkan dalam jendela yang ditentukan. Nilai harus berupa bilangan bulat positif dari 1 hingga 100. Nilai default-nya adalah 1.</p><p>Satuan parameter ini adalah irisan.</p>",
	"@@Dimensional-Moving-Statistics_circularwrapvalue_tag0@@": "<p>Nilai yang akan digunakan untuk membulatkan nilai linear ke rentang rata-rata melingkar tertentu.</p><p>Nilainya harus positif.. Nilai default-nya adalah 360 derajat.</p>",
	"@@Dimensional-Moving-Statistics_dimension_tag0@@": "<p>Nama dimensi tempat jendela akan bergerak.</p><p>Nilai default adalah dimensi pertama selain x,y yang ditemukan di raster multidimensional input.</p>",
	"@@Dimensional-Moving-Statistics_forwardwindow_tag0@@": "<p>Nilai berapa banyak irisan setelah atau di bawah untuk disertakan dalam jendela yang ditentukan. Nilai harus berupa bilangan bulat positif dari 1 hingga 100. Nilai default-nya adalah 1.</p><p>Satuan parameter ini adalah irisan.</p>",
	"@@Dimensional-Moving-Statistics_inputraster_tag0@@": "<p>Raster input hanya dapat berupa raster multidimensional di Cloud Raster Format (file<strong>.crf</strong>).</p>",
	"@@Dimensional-Moving-Statistics_nodatahandling_tag0@@": "<p>Menentukan bagaimana nilai Tidak ada data akan ditangani oleh penghitungan statistik.</p><ul><li><strong>Data</strong>--Nilai Tidak ada data dalam input nilai akan diabaikan dalam hasil jendela yang ditentukan tempat nilai berada. Ini adalah nilai default.</li><li><strong>Tidak ada data</strong>--Nilai output akan menjadi Tidak ada data jika ada nilai Tidak ada data di input dalam jendela yang ditentukan.</li><li><strong>Isi Tidak ada data</strong>--Nilai sel Tidak ada data akan diganti menggunakan statistik yang dipilih dalam jendela yang ditentukan.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentileinterpolationtype_tag0@@": "<p>Menentukan metode interpolasi yang akan digunakan ketika nilai persentil berada di antara dua nilai sel.</p><ul><li><strong>Deteksi otomatis</strong>--Jika raster input adalah jenis piksel bilangan bulat, metode<strong>Terdekat</strong>akan digunakan. Jika raster input merupakan jenis piksel mengambang, metode<strong>Linear</strong>akan digunakan. Ini adalah nilai default.</li><li><strong>Terdekat</strong>--Nilai terdekat yang tersedia dengan persentil akan digunakan. Dalam hal ini, jenis piksel output akan sama dengan raster nilai input.</li><li><strong>Linear</strong>--Rata-rata tertimbang dari dua nilai terdekat dari persentil akan digunakan. Dalam hal ini, jenis pixel output akan menjadi titik mengambang.</li></ul>",
	"@@Dimensional-Moving-Statistics_percentilevalue_tag0@@": "<p>Persentil yang akan dihitung ketika<strong>Persentil</strong>dipilih sebagai jenis statistik. Defaultnya adalah 90, untuk persentil ke-90.</p><p>Nilai dapat bervariasi, mulai dari 0 hingga 100. Persentil ke-0 pada dasarnya setara dengan statistik minimal, dan persentil ke-100 setara dengan statistik maksimal, dengan pengecualian bahwa hasilnya akan berupa titik mengambang. Nilai 50 akan memberikan hasil yang sama dengan statistik median.</p>",
	"@@Dimensional-Moving-Statistics_statisticstype_tag0@@": "<p>Menentukan jenis statistik yang akan dihitung.</p><p></p><ul><li><strong>Rata-rata</strong>--Rata-rata (nilai rata-rata) sel di jendela yang ditentukan akan dihitung. Ini adalah nilai default.</li><li><strong>Rata-rata Melingkar</strong>--Rata-rata melingkar dari sel di jendela yang ditentukan akan dihitung. Jika tipe statistik ini dipilih, parameter<strong>Nilai Bentuk Sirkular</strong>akan tersedia.</li><li><strong>Mayoritas</strong>--Mayoritas (nilai yang muncul paling sering) dari sel dalam jendela yang ditentukan akan diidentifikasi.</li><li><strong>Maksimum</strong>--Maksimum (nilai terbesar) dari sel dalam jendela yang ditentukan akan diidentifikasi.</li><li><strong>Median</strong>--Median sel di sekitar akan diidentifikasi.</li><li><strong>Minimum</strong>--The minimum (nilai paling kecil) dari sel di sekitar akan diidentifikasi.</li><li><strong>Persentil</strong>--Persentil sel di sekitar akan dihitung. Jika tipe statistik dipilih, parameter <strong>Nilai Persentil</strong>dan<strong>Tipe Interpolasi Persentil</strong>akan tersedia. Gunakan parameter baru ini untuk menentukan persentil guna menghitung dan memilih masing-masing tipe interpolasi yang akan digunakan.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_dimension_tag0@@": "<p>Dimensi yang akan digunakan untuk interpolasi.</p><p>Parameter ini diperlukan jika parameter<strong>Penentuan Dimensi</strong>diatur ke<strong>Berdasarkan Interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_dimensiondefinition_tag0@@": "<p>Menentukan metode yang akan digunakan untuk memfilter data multidimensi input sebelum melakukan interpolasi.</p><ul><li><strong>Berdasarkan Nilai</strong>--Dimensi akan diiris menggunakan nilai atau daftar nilai dimensi.</li><li><strong>Berdasarkan Interval</strong>--Dimensi akan diiris menggunakan rentang atau daftar rentang.</li><li><strong>Berdasarkan Raster Target</strong>--Dimensi akan diiris menggunakan raster multidimensi target khusus.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_endofinterval_tag0@@": "<p>Akhir interval, yang mana digunakan untuk mengulang sepanjang set data.</p><p>Parameter ini diperlukan jika parameter<strong>Penentuan Dimensi</strong>diatur ke<strong>Berdasarkan Interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_ignorenodata_tag0@@": "<p>Menentukan apakah nilai NoData akan diabaikan dalam analisis.</p><ul><li>Tidak dicentang--Analisis akan menghasilkan NoData jika ada nilai NoData dalam irisan yang berdekatan. Ini adalah default.</li><li>Dicentang--Analisis hanya akan menggunakan irisan yang memiliki piksel valid dan akan mengabaikan irisan NoData.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_interpolationmethod_tag0@@": "<p>Menentukan metode yang akan digunakan untuk melakukan interpolasi raster.</p><ul><li><strong>Linear</strong>--Output akan diinterpolasi secara linear menggunakan irisan yang berdekatan. Ini merupakan default.</li><li><strong>Lingkungan Terdekat</strong>--Output akan menggunakan irisan lingkungan terdekat.</li></ul>",
	"@@Interpolate-Raster-By-Dimension_raster_tag0@@": "<p>Raster multidimensional input.</p>",
	"@@Interpolate-Raster-By-Dimension_startofinterval_tag0@@": "<p>Awal interval, yang digunakan untuk mengulang seluruh set data.</p><p>Parameter ini diperlukan jika parameter<strong>Penentuan Dimensi</strong>diatur ke<strong>Berdasarkan Interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_step_tag0@@": "<p>Frekuensi yang datanya akan diinterpolasi.</p><p>Parameter ini diperlukan jika parameter<strong>Penentuan Dimensi</strong>diatur ke<strong>Berdasarkan Interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_targetraster_tag0@@": "<p>Raster target ditentukan oleh penentuan dimensi.</p><p>Parameter ini diperlukan jika parameter<strong>Penentuan Dimensi</strong>diatur ke<strong>Berdasarkan Raster Target</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_unit_tag0@@": "<p>Unit interval.</p><p>Parameter ini diperlukan jika parameter<strong>Penentuan Dimensi</strong>diatur ke<strong>Berdasarkan Interval</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_values_tag0@@": "<p>Nilai dimensi yang akan digunakan untuk memfilter data multidimensi input untuk analisis.</p><p>Parameter ini diperlukan jika parameter<strong>Penentuan Dimensi</strong>diatur ke<strong>Berdasarkan Nilai</strong>.</p>",
	"@@Interpolate-Raster-By-Dimension_variables_tag0@@": "<p>Variabel atau beberapa variabel yang akan diinterpolasi oleh penentuan dimensi.</p>",
	"@@Terrain-Flatten_calibrationtype_tag0@@": "<p>Menentukan apakah output akan diratakan medannya menggunakan<strong>Sigma nol</strong>atau<strong>Gamma nol</strong>.</p><ul><li><strong>Gamma nol</strong>--Hamburan balik beta nol akan dinormalkan menggunakan area dataran unit yang bersinggungan secara lokal dengan DEM, umumnya disebut sudut insidensi lokal. Ini adalah defaultnya.</li><li><strong>Sigma nol</strong>--Hamburan balik beta nol akan dinormalkan menggunakan DEM untuk menghitung area.</li></ul>",
	"@@Terrain-Flatten_dem_tag0@@": "<p>DEM input.</p><p>DEM digunakan untuk membuat estimasi area lokal yang diterangi.</p>",
	"@@Terrain-Flatten_geoid_tag0@@": "<p>Menentukan apakah sistem referensi vertikal DEM input akan ditransformasikan ke ketinggian ellipsoid. Sebagian besar kumpulan data ketinggian mengacu ke ketinggian ortometrik permukaan laut, sehingga diperlukan koreksi untuk mengonversi ke ketinggian ellipsoid.</p><ul><li>Dicentang--Koreksi geoid akan dibuat untuk mengonversi ketinggian ortometrik ke ketinggian ellipsoid (berdasarkan geoid EGM96). Ini adalah defaultnya.</li><li>Tidak dicentang--Tidak akan ada koreksi geoid yang dibuat. Hanya gunakan opsi ini jika DEM diekspresikan dalam ketinggian ellipsoid.</li></ul>",
	"@@Terrain-Flatten_raster_tag0@@": "<p>Data radar input.</p><p>Raster ini harus dikalibrasikan secara radiometri terlebih dahulu ke beta nol.</p>",
	"@@Create-Color-Composite_blueexpression_tag0@@": "<p>Kalkulasi yang ditetapkan ke band ketiga.</p><p>Nama band, ID band, atau ekspresi aljabar yang menggunakan band.</p><p>Operator yang didukung adalah unary: jumlah (+), kurangi (-), kali (*), dan bagi (/).</p>",
	"@@Create-Color-Composite_greenexpression_tag0@@": "<p>Kalkulasi yang ditetapkan ke band kedua.</p><p>Nama band, ID band, atau ekspresi aljabar yang menggunakan band.</p><p>Operator yang didukung adalah unary: jumlah (+), kurangi (-), kali (*), dan bagi (/).</p>",
	"@@Create-Color-Composite_inputraster_tag0@@": "<p>Data raster multiband input.</p>",
	"@@Create-Color-Composite_method_tag0@@": "<p>Menentukan themethod yang akan digunakan untuk mengekstrak band.</p><ul><li>Nama Band--Nama band melambangkan wavelengthinterval di spektrum elektromagnetik (seperti Merah, Hampir Inframerah, atau Inframerah Termal) atau polarisasi (seperti VH, VV, HH, atau HV) yang akan digunakan. Ini adalah defaultnya.</li><li>ID Band--Nomor band (seperti B1, B2, atau B3) akan digunakan.</li></ul>",
	"@@Create-Color-Composite_redexpression_tag0@@": "<p>Kalkulasi yang ditetapkan ke band pertama.</p><p>Nama band, ID band, atau ekspresi aljabar yang menggunakan band.</p><p>Operator yang didukung adalah unary: jumlah (+), kurangi (-), kali (*), dan bagi (/).</p>",
	"@@Surface-Parameters_localsurfacetype_tag0@@": "<p>Pilih jenis fungsi permukaan yang akan disesuaikan disekitar sel sasaran.</p><ul><li>Kuadrat--fungsi permukaan kuadrat akan disesuakan ke sel lingkungan. Ini adalah jenis defaultnya.</li><li>Bikuadrat--fungsi permukaan biquadrat akan disesuaikan ke sel lingkungan.</li></ul>",
	"@@Surface-Parameters_neighborhooddistance_tag0@@": "<p>Output akan dihitung ke jarak ini dari pusat sel sasaran. Ini menentukan ukuran lingkungan. Nilai defaultnya adalah ukuran sel raster input, yang dihasilkan dalam lingkungan 3 kali 3.</p>",
	"@@Surface-Parameters_outputslopemeasurement_tag0@@": "<p>Unit pengukuran (derajat atau persentase) yang akan digunakan untuk raster kemiringan output. Parameter ini hanya aktif saat<strong>jenis Parameternya</strong>adalah<strong>Kemiringan</strong>.</p><ul><li>Derajat--Inklinasi kemiringan dihitung dalam derajat. Ini adalah defaultnya.</li><li>Kenaikan persen--Inklinasi kemiringan akan dihitung dalam kenaikan persen, yang juga dikenal sebagai kemiringan persen.</li></ul>",
	"@@Surface-Parameters_parametertype_tag0@@": "<p>Tentukan jenis parameter permukaan output yang akan dihitung.</p><ul><li>Kemiringan--Laju perubahan elevasi akan dihitung. Ini adalah defaultnya.</li><li>Aspek--arah kemiringan bawah dari laju perubahan maksimum di setiap sel akan dihitung.</li><li>Lengkungan rata-rata--Lengkungan keseluruhan dari permukaan akan diukur. Ini dihitung sebagai rata-rata dari lengkungan minimal dan maksimal. Lengkungan ini mendeskripsikan cembung atau cekungnya permukaan tersebut, terpisah dari arah dan pengaruh gravitasi.</li><li>Tangensial (kontur normal) Lengkungan--Lengkungan normal geometrik yang tegak lurus dengan garis kemiringan, singgungan dengan garis kontur akan diukur. Lengkungan ini biasanya diterapkan untuk mengkarakteristikkan cembung atau cekungnya suatu aliran diatas permukaan.</li><li>Profil (garis kemiringan normal) Lengkungan--lengkungan normal geometrik di sepanjang garis kemiringan akan diukur. Lengkungan ini biasanya diterapkan untuk mengkarakteristikkan percepatan dan perlambatan dari aliran yang menuruni permukaan.</li><li>Rencana (kontur terproyeksi) Lengkungan--Lengkungan di sepanjang garis kontur akan diukur.</li><li>Torsi Geodesik Kontur--Laju perubahan angle kemiringan di sepanjang garis kontur akan diukur.</li><li>Lengkungan Gaussian--Lengkungan permukaan keseluruhan akan diukur. Ini dihitung sebagai hasil dari lengkungan minimal dan maksimal.</li><li>Lengkungan Casorati--Lengkungan umum permukaan akan diukur. Hasilnya bisa jadi nol atau angka positif lain.</li></ul>",
	"@@Surface-Parameters_projectgeodesicazimuths_tag0@@": "<p>Tentukan azimut geodesik akan diproyeksikan untuk membenarkan distorsi angle yang disebabkan oleh referensi spasial output atau tidak.Parameter ini hanya aktif saat<strong>Jenis parameternya</strong>adalah<strong>Aspek</strong>.</p><ul><li>Tidak Diperiksa--Azimut geodesik tidak akan diproyeksikan. Ini adalah defaultnya.</li><li>Diperiksa--Azimut geodesik akan diproyeksikan.</li></ul>",
	"@@Surface-Parameters_raster_tag0@@": "<p>Raster permukaan input. Hasilnya bisa jadi raster bilangan bulat atau titik mengambang.</p>",
	"@@Surface-Parameters_useadaptiveneighborhood_tag0@@": "<p>Tentukan jarak lingkungan akan berberda dengan perubahan lanskap atau tidak (adaptif). Jarak maksumal ditentukan oleh jarak lingkungan. Jarak minimal adalah ukuran sel raster input.</p><ul><li>Tidak diperiksa--Jarak lingkungan tunggal (tetap) akan digunakan di semua lokasi. Ini adalah defaultnya.</li><li>Diperiksa--Jarak lingkungan adaptif akan digunakan di semua lokasi.</li></ul>",
	"@@Surface-Parameters_useequatorialaspect_tag0@@": "<p>Tentukan aspek akan diukur dari titik di khatulistiwa atau dari kutub utara.Parameter ini hanya aktif saat<strong>Jenis parameternya</strong>adalah<strong>Aspek</strong>.</p><ul><li>Tidak diperiksa--Aspek akan diukur dari kutub utara. Ini adalah defaultnya.</li><li>Diperiksa--Aspek akan diukur dari titik di khatulistiwa.</li></ul>",
	"@@Surface-Parameters_zunit_tag0@@": "<p>Unit linear dari nilai z vertikal.</p><p>Ini ditentukan oleh sistem koordinat vertikal jika ada. Jika sistem koordinat vertikal tidak ada, unit z harus ditentukan dari daftar unit, untuk memastikan perhitungan geodesik yang benar.</p><ul><li>Inci--Unit linear akan diatur ke inci.</li><li>Kaki--Unit linear akan diatur ke kaki.</li><li>Yard--Unit linear akan diatur ke yard.</li><li>Mil--Unit linear akan diatur ke Mil.</li><li>Mil nautik--Unit linear akan diatur ke mil nautik.</li><li>Milimeter--Unit linear akan diatur ke milimeter.</li><li>Sentimeter--Unit linear akan diatur ke sentimeter.</li><li>Meter--Unit linear akan diatur ke meter. Ini adalah defaultnya.</li><li>Kilometer--Unit linear akan diatur ke kilometer.</li><li>Desimeter--Unit linear akan diatur ke desimeter.</li></ul>",
	"@@Surface-Parameters_analysismask_tag0@@": "<p>Raster yang menentukan lokasi tempat analisis akan dilakukan.</p><p>Raster dapat berupa jenis bilangan bulat atau titik mengambang.</p><p>Semua sel dengan nilai yang valid, termasuk nol, akan menyusun selubung. Sel berupa NoData di input selubung akan berupa NoData di output.</p>",
	"@@Geometric-Median_cellsizetype_tag0@@": "<p>Pilih ukuran sel yang akan digunakan dalam raster output. Jika semua sel input memilliki ukuran sama, maka semua opsi akan menghasilkan hasil yang sama.</p><ul><li>Pertama Dari--Gunakan ukuran sel pertama dari raster input.</li><li>Minimal Dari--Gunakan ukuran sel terkecil dari semua raster input.</li><li>Maksimal Dari--Gunakan ukuran sel terbesar dari semua raster input. Ini adalah defaultnya.</li><li>Rata-rata Dari--Gunakan ukuran sel rata-rata dari semua raster input.</li><li>Terakhir Dari--Gunakan ukuran sel terakhir dari raster input.</li></ul>",
	"@@Geometric-Median_epsilon_tag0@@": "<p>Menentukan nilai konvergensi di antara dua iterasi yang berurutan. Ketika epsilon kurang dari atau sama dengan nilai yang ditentukan, iterasi akan berhenti, dan hasil dari iterasi terakhir akan digunakan.</p>",
	"@@Geometric-Median_extenttype_tag0@@": "<p>Pilih jangkauan yang akan digunakan di raster output:</p><ul><li><p>Pertama Dari--Gunakan jangkauan raster input pertama untuk menentukan jangkauan pemrosesan.</p></li><li>Perpotongan Dari--Gunakan jangkauan piksel yang bertumpang tindih untuk menentukan jangkauan pemrosesan. Ini adalah defaultnya.</li><li>Perhimpunan Dari--Gunakan jangkauan semua raster untuk menentukan jangkauan pemrosesan.</li><li>Terakhir Dari--Gunakan jangkauan raster input terakhir untuk menentukan jangkauan pemrosesan.</li></ul>",
	"@@Geometric-Median_maximumnumberofiterations_tag0@@": "<p>Menentukan jumlah iterasi maksimal yang diselesaikan. Perhitungan berakhir ketika nilai tercapai, terlepas dari pengaturan<strong>Epsilon</strong>-nya.</p>",
	"@@Geometric-Median_rasters_tag0@@": "<p>Raster multiband input.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster1_tag0@@": "<p>Raster input merepresentasikan jarak biaya akumulatif dari sumber pertama.</p><p>Raster ini harus berupa output jarak nilai terakumulasi dari fungsi<strong>Akumulasi Jarak</strong>atau<strong>Alokasi Jarak</strong>.</p>",
	"@@Least-Cost-Corridor_inputaccumulativecostdistanceraster2_tag0@@": "<p>Raster input merepresentasikan jarak biaya akumulatif dari sumber kedua.</p><p>Raster ini harus berupa output jarak nilai terakumulasi dari fungsi<strong>Akumulasi Jarak</strong>atau<strong>Alokasi Jarak</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster1_tag0@@": "<p>Raster arah balik input dari sumber pertama.</p><p>Raster ini merupakan set data raster yang menemukan arah sel selanjutnya di sepanjang jalur termurah yang kembali ke sumber pertama. Raster ini merupakan output dari fungsi<strong>Akumulasi Jarak</strong>atau<strong>Alokasi Jarak</strong>.</p>",
	"@@Least-Cost-Corridor_inputbackdirectionraster2_tag0@@": "<p>Raster arah balik input dari sumber kedua.</p><p>Raster ini merupakan set data raster yang menemukan arah sel selanjutnya di sepanjang jalur termurah yang kembali ke sumber pertama. Raster ini merupakan output dari fungsi<strong>Akumulasi Jarak</strong>atau<strong>Alokasi Jarak</strong>.</p>",
	"@@Least-Cost-Corridor_threshold_tag0@@": "<p>Ambang batas biaya akumulasi persen atau akumulasi yang akan menentukan apakah sel yang ditentukan akan disertakan dalam raster koridor output.</p><p>Saat parameter<strong>metode Ambang Batas</strong>ditetapkan ke<strong>Persentase dari biaya minimal</strong>, nilai yang ditentukan menandakan peningkatan persentase yang diterapkan dari jumlah nilai raster jarak biaya akumulatif minimal. Saat parameter<strong>metode Ambang</strong> Batas ditetapkan ke<strong>Biaya akumulatif</strong>, nilai mendandakan sel yang memiliki jumlah biaya akumulatif sama dengan atau kurang dari nilai yang akan disertakan di koridor.</p><p>Parameter ini hanya aktif jika parameter<strong>metode Ambang Batas</strong>ditetapkan ke<strong>Persentase biaya minimal</strong>atau<strong>Biaya akumulatif</strong>.</p>",
	"@@Least-Cost-Corridor_thresholdmethod_tag0@@": "<p>Menentukan bagaimana ambang batas akan ditetapkan.</p><p></p><ul><li><strong>Tidak Ada Ambang Batas</strong>--Tidak ada ambang batas yang akan diterapkan, dan membuat koridor mencakupi jangkauan penuh raster input. Ini merupakan default.</li><li><strong>Persentase Biaya Minimal</strong>--Ambang batas akan ditetapkan sesuai persentase nilai minimal jumlah raster jarak biaya akumulatif.</li><li><strong>Biaya Akumulatif.</strong>--Ambang batas akan ditetapkan di unit jarak biaya akumulatif.</li></ul>"
};
const helpTexts_id = {
	rfxArgsHelpTexts: rfxArgsHelpTexts
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpTexts_id);


//# sourceMappingURL=help-texts.id-a6c022ac.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,