"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-20cc51"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-data-store-select-server-list.entry.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-data-store-select-server-list.entry.js ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_new_item_pages_data_store_select_server_list: () => (/* binding */ ArcgisNewItemPagesDataStoreSelectServerList)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-store-e2ae6a67.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-e2ae6a67.js");
/* harmony import */ var _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-item-dbbe2f57.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-dbbe2f57.js");
/* harmony import */ var _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui-bca7bcd1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-bca7bcd1.js");
/* harmony import */ var _data_store_8e83fb7a_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data-store-8e83fb7a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-8e83fb7a.js");
/* harmony import */ var _portal_d518b571_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./portal-d518b571.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-d518b571.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _config_75adf962_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./config-75adf962.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-75adf962.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _url_4c3ae54c_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./url-4c3ae54c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-4c3ae54c.js");
/* harmony import */ var _functional_44de8fcf_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./functional-44de8fcf.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-44de8fcf.js");
/* harmony import */ var _service_8c2c4241_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./service-8c2c4241.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/service-8c2c4241.js");
/* harmony import */ var _feature_layer_573bb473_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./feature-layer-573bb473.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-573bb473.js");
/* harmony import */ var _item_properties_10491b2e_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./item-properties-10491b2e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-10491b2e.js");
/* harmony import */ var _feature_layer_79fb302c_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./feature-layer-79fb302c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-79fb302c.js");
/* harmony import */ var _guid_aeaed84d_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./guid-aeaed84d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-aeaed84d.js");
/* harmony import */ var _thumbnail_bcb89e69_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./thumbnail-bcb89e69.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/thumbnail-bcb89e69.js");
/* harmony import */ var _user_3ea69c3a_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./user-3ea69c3a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-3ea69c3a.js");
/* harmony import */ var _query_d62660d4_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./query-d62660d4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-d62660d4.js");
/* harmony import */ var _api_2e3a136f_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./api-2e3a136f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/api-2e3a136f.js");
/* harmony import */ var _string_58a5fef3_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./string-58a5fef3.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/string-58a5fef3.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _item_c58ffced_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./item-c58ffced.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-c58ffced.js");
/* harmony import */ var _server_item_8d384796_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./server-item-8d384796.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-8d384796.js");
/* harmony import */ var _item_3535552d_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./item-3535552d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-3535552d.js");
/* harmony import */ var _functional_81373f6d_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./functional-81373f6d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-81373f6d.js");
/* harmony import */ var _item_types_2029b06b_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./item-types-2029b06b.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-2029b06b.js");
/* harmony import */ var _feature_layer_17b64946_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./feature-layer-17b64946.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-17b64946.js");
/* harmony import */ var _ags_eb458a03_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./ags-eb458a03.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ags-eb458a03.js");
/* harmony import */ var _url_35875a10_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./url-35875a10.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-35875a10.js");
/* harmony import */ var _storage_0353a769_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./storage-0353a769.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/storage-0353a769.js");
/* harmony import */ var _file_bf8ab90f_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./file-bf8ab90f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-bf8ab90f.js");
/* harmony import */ var _store_6a88e6c5_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./store-6a88e6c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/store-6a88e6c5.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */


































const arcgisNewItemPagesDataStoreSelectServerListCss = ".sub-heading{font-weight:400;color:var(--calcite-color-text-3)}.row-wrapper{margin-top:0.5rem;margin-bottom:0.5rem;display:flex;width:100%;padding-top:0.75rem}.row-divider{box-shadow:0 -1px 0 #eaeaea}.title{gap:0.5rem}.status-wrapper{display:flex;gap:0.5rem;line-height:1rem}.success{--calcite-ui-icon-color:var(--calcite-color-status-success)}.failure{--calcite-ui-icon-color:var(--calcite-color-status-danger)}.error{--calcite-ui-icon-color:var(--calcite-color-status-danger)}.validating{--calcite-ui-icon-color:var(--calcite-color-status-info)}.half-row{width:50%;padding-left:0.5rem;padding-right:0.5rem}.requireRestartModal{--calcite-modal-width:500px;--calcite-modal-height:400px}";

const ArcgisNewItemPagesDataStoreSelectServerList = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.newItemUpdatePage = (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
        this.loading = true;
        this.noValidServers = true;
        this.serverTypes = [];
        this.item = {
            bdfsType: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.bdfsType,
            allowServicesRestart: false,
            publisherFolderPath: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.publisherFolderPath,
            publisherFolderPathHostname: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.publisherFolderPathHostname,
            serverFolderPath: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.serverFolderPath,
            newServerFolderPath: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.newServerFolderPath,
            nfsSharePath: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.nfsSharePath,
            nfsHostName: _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.nfsHostName
        };
        this.serverStatusIcons = {
            success: "check-circle-f",
            failure: "exclamation-mark-circle-f",
            error: "exclamation-mark-triangle-f",
            validating: "information"
        };
        this.selectedServers = [];
        this.serverList = [];
        this.allBoxesSelected = false;
        this.error = null;
        this.requireRestart = false;
        this.openRequireRestartModal = false;
    }
    async componentWillLoad() {
        this.i18n = _ui_bca7bcd1_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.serverSelection;
        this.dataStoreType = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.addDataStoreType;
        this.serverList = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.dataStoreSelectServerList || [];
        this.serverList = this.filterServers(false, false, false, false);
    }
    async componentDidLoad() {
        //TODO: catch unhandled errors
        const validatedServers = await (0,_data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_1__.c)(_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a, this.serverList, this.dataStoreType);
        this.serverList = [...validatedServers];
        const result = await (0,_data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_1__.d)(this.serverList);
        this.openRequireRestartModal = validatedServers.some((server) => (server === null || server === void 0 ? void 0 : server.error) === "RequiresServicesRestart");
        this.serverList = [...result.servers];
        this.serverTypes = [...result.serverTypes];
        this.renderTable();
        this.appendServerTypes();
        this.loading = false;
    }
    filterServers(isBigDataFileShare, isNoSQL, isHostingServerOnlyForDatabase, isNFS) {
        return (this.serverList || []).filter((server) => {
            const serverRole = (server.serverRole || "").toUpperCase();
            const excludedServerRoles = [
                "ARCGIS_NOTEBOOK_SERVER",
                "ARCGIS_MISSION_SERVER",
                "ARCGIS_VIDEO_SERVER"
            ];
            const serverFunctions = (server.serverFunction && server.serverFunction.replace(/\s+/g, "").split(",")) || [];
            const excludedServerFunctions = [
                "NOTEBOOKSERVER",
                "WORKFLOWMANAGER",
                "MISSIONSERVER",
                "VIDEOSERVER"
            ];
            let isHostingServer = serverRole === "HOSTING_SERVER";
            // only display GeoAnalytics server for BDFS
            if (isBigDataFileShare && serverFunctions.indexOf("GeoAnalytics") === -1) {
                excludedServerRoles.push(serverRole);
                isHostingServer = false;
            }
            if (isNoSQL && serverFunctions.indexOf("KnowledgeServer") === -1) {
                excludedServerRoles.push(serverRole);
                isHostingServer = false;
            }
            if (isNFS && (0,_data_store_8e83fb7a_js__WEBPACK_IMPORTED_MODULE_4__.i)()) {
                isHostingServer = true;
            }
            let allowedServerRole = excludedServerRoles.indexOf(serverRole) === -1;
            // only display hosting servers for Database when client type is bigquery, snowflake or redshift
            if (isHostingServerOnlyForDatabase) {
                allowedServerRole = false;
            }
            return (isHostingServer ||
                (allowedServerRole &&
                    (!serverFunctions.length ||
                        serverFunctions.some(function (func) {
                            return excludedServerFunctions.indexOf(func.toUpperCase()) === -1;
                        }))));
        });
    }
    renderTable() {
        const dataStoreType = this.dataStoreType;
        const isBigDataFileShare = dataStoreType === "bdfs";
        const isNoSQL = dataStoreType === "nosql";
        const isNFS = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.serverFolderPath === "nfsHostAndPath" && dataStoreType === "folder";
        // filter servers and only display hosting servers for database: bigquery, snowflake or redshift
        const isHostingServerOnlyForDatabase = this.checkDatabaseClient();
        // filter servers for bdfs
        this.serverList = this.filterServers(isBigDataFileShare, isNoSQL, isHostingServerOnlyForDatabase, isNFS);
        // filter servers by users input server path - only for folder & file share
        if (!isNFS) {
            if (["folder", "fileshare"].includes(dataStoreType)) {
                this.serverList = this.filterServersByServerPath();
            }
        }
    }
    checkDatabaseClient() {
        const dataStoreType = this.dataStoreType;
        const publisherConnectionString = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.publisherConnectionString;
        let isHostingServerOnly = false;
        if (dataStoreType === "database" && publisherConnectionString) {
            const dbConnectionStringArray = publisherConnectionString.split(";");
            dbConnectionStringArray.forEach(function (keyword) {
                // "DBCLIENT=bigquery"
                if (keyword.indexOf("DBCLIENT") > -1 &&
                    ["bigquery", "snowflake", "redshift"].indexOf(keyword.split("=")[1]) > -1) {
                    isHostingServerOnly = true;
                }
            });
        }
        return isHostingServerOnly;
    }
    filterServersByServerPath() {
        const dataStoreType = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.addDataStoreType;
        const serverPath = dataStoreType === "folder"
            ? _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.newServerFolderPath || _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.publisherFolderPath
            : _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.publisherFileShareFolderPath;
        const serverPathType = serverPath[0].indexOf("/") > -1 ? "Linux" : "Windows";
        const isNFS = _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.serverFolderPath === "nfsHostAndPath" && dataStoreType === "folder";
        return this.serverList.filter((federatedServer) => {
            return !!this.serverTypes.find((serverItem) => {
                return ((serverItem.name === federatedServer.adminUrl ||
                    serverItem.name === `${federatedServer.adminUrl}/admin`) &&
                    (isNFS ? federatedServer.isHosted : serverItem.type === serverPathType));
            });
        });
    }
    appendServerTypes() {
        const { serverList, i18n } = this;
        serverList.map((server) => {
            const serverFunction = (server.serverFunction && server.serverFunction.replace(/\s+/g, "").split(",")) || [];
            let serverType = "";
            if (server.serverRole === "HOSTING_SERVER") {
                serverType += i18n.types.hostedSetting;
            }
            if (serverFunction.indexOf("NotebookServer") > -1) {
                serverType += (serverType && ", ") + i18n.types.notebookServerSetting;
            }
            if (serverFunction.indexOf("GeoAnalytics") > -1) {
                serverType += (serverType && ", ") + i18n.types.geoAnalyticsServerSetting;
            }
            if (serverFunction.indexOf("RasterAnalytics") > -1) {
                serverType += (serverType && ", ") + i18n.types.rasterAnalysisSetting;
            }
            if (serverFunction.indexOf("ImageHosting") > -1) {
                serverType += (serverType && ", ") + i18n.types.imageHostingSetting;
            }
            if (serverFunction.indexOf("MissionServer") > -1) {
                serverType += (serverType && ", ") + i18n.types.missionServerSetting;
            }
            server.serverType = serverType;
        });
    }
    convertStatusDisplayText(server) {
        const i18n = this.i18n;
        const status = server.serverStatus;
        const displayTable = {
            success: i18n.status.success,
            failure: i18n.status.failure,
            error: i18n.status.error,
            validating: i18n.status.validating
        };
        return displayTable[status];
    }
    closeModal() {
        this.openRequireRestartModal = false;
        this.newItemUpdatePage.emit("dataStoreSelectFolder");
    }
    async acceptRequireRestart() {
        this.loading = true;
        this.openRequireRestartModal = false;
        this.item.allowServicesRestart = true;
        this.requireRestart = true;
        const validatedServers = await (0,_data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.item, this.serverList, this.dataStoreType);
        this.serverList = [...validatedServers];
        const result = await (0,_data_store_e2ae6a67_js__WEBPACK_IMPORTED_MODULE_1__.d)(this.serverList);
        this.serverList = [...result.servers];
        this.serverTypes = [...result.serverTypes];
        this.renderTable();
        this.appendServerTypes();
        this.loading = false;
    }
    checkValidServers() {
        this.noValidServers = !this.serverList.some((server) => {
            return server.serverStatus === "success";
        });
    }
    checkAllBoxes() {
        this.selectedServers = [...[]];
        if (!this.allBoxesSelected) {
            this.serverList.forEach((server) => {
                this.selectedServers = [...this.selectedServers, server.id];
            });
        }
        this.allBoxesSelected = !this.allBoxesSelected;
    }
    handleNext() {
        const selectedServers = this.selectedServers || [];
        if (selectedServers.length === 0) {
            this.error = "noServerSelected";
            return;
        }
        if (this.requireRestart) {
            _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.allowServicesRestart = true;
        }
        _add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.dataStoreSelectedServers = selectedServers;
        this.newItemUpdatePage.emit("itemProperties");
    }
    render() {
        const { i18n, error, serverList, dataStoreType, loading, allBoxesSelected, noValidServers } = this;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-description", { header: dataStoreType === "bdfs" && ["fileshare", "cloud"].includes(_add_item_dbbe2f57_js__WEBPACK_IMPORTED_MODULE_2__.a.bdfsType)
                ? i18n.dataStoreServerSelect.bdfsHeading
                : i18n.dataStoreServerSelect.heading }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "sub-heading" }, i18n.dataStoreServerSelect.subHeading), loading ? ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-loader", { label: "server-loader", text: i18n.loader.validating })) : ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "row-wrapper" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "half-row" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { disabled: noValidServers, checked: allBoxesSelected, onCalciteCheckboxChange: () => {
                this.checkAllBoxes();
            } }), i18n.list.title)), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "half-row" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline" }, i18n.list.status))), serverList.map((server) => {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "row-wrapper row-divider" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "half-row" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline", class: "server-wrapper" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { disabled: server.serverStatus !== "success", value: server.id, onCalciteCheckboxChange: (e) => {
                    const serverId = e.target.value;
                    if (this.selectedServers.indexOf(serverId) === -1) {
                        this.selectedServers = [...this.selectedServers, serverId];
                    }
                    else {
                        this.selectedServers = this.selectedServers.filter((server) => {
                            return server !== serverId;
                        });
                    }
                }, checked: this.selectedServers.includes(server.id) }), server.url + (server.serverType && ` (${server.serverType})`))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "half-row" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "status-wrapper", title: server.errorMsg || server.serverStatus }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: {
                    success: server.serverStatus === "success",
                    failure: server.serverStatus === "failure",
                    error: server.serverStatus === "error",
                    validating: server.serverStatus === "validating"
                }, scale: "s", icon: this.serverStatusIcons[server.serverStatus] }), this.convertStatusDisplayText(server)))));
        }), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: i18n.dataStoreServerSelect.noServerSelected.heading, description: i18n.dataStoreServerSelect.noServerSelected.description, active: error !== null && !loading, onAlertDismiss: () => {
                this.error = null;
            } }))), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-modal", { open: this.openRequireRestartModal, class: "requireRestartModal", onCalciteModalClose: (e) => e.stopPropagation() }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "content" }, "You are registering a folder data store that uses a new path and host that has not been registered with ArcGIS Enterprise. This will cause several of your system and utility services to restart. To avoid disruption, consider registering during off-peak hours.", (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("br", null), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("br", null), "Are you sure you want to proceed"), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { slot: "secondary", appearance: "outline", onClick: () => this.closeModal() }, "Cancel"), (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { slot: "primary", onClick: () => this.acceptRequireRestart() }, "OK"))));
    }
    static get watchers() { return {
        "serverList": ["checkValidServers"]
    }; }
};
ArcgisNewItemPagesDataStoreSelectServerList.style = arcgisNewItemPagesDataStoreSelectServerListCss;



//# sourceMappingURL=arcgis-new-item-pages-data-store-select-server-list.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,