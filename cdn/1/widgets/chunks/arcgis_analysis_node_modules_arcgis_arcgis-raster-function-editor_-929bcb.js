"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_arcgis-raster-function-editor_-929bcb"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-attribute-table-6ba69305.js":
/*!********************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-attribute-table-6ba69305.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   R: () => (/* binding */ RfxCteAttributeTable)
/* harmony export */ });
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _rfx_args_helper_ab401543_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rfx-args-helper-ab401543.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-args-helper-ab401543.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _color_ramp_8935ed29_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./color-ramp-8935ed29.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/color-ramp-8935ed29.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");

















const HelpClickHandlerKeys = {
    rasterHelpClickHandler: "rasterHelpClickHandler"
};
const component = "rfx-cte-attribute-table";
const HTMLClasses = {
    generateTable: `${component}__generate-table`,
    generateTableContainer: `${component}__generate-table-container`,
    generateTableSection: `${component}__generate-table-section`,
    generateTableComponent: `${component}__generate-table-component`
};

const rfxCteAttributeTableCss = ":root{--calcite-color-brand:#007ac2;--calcite-color-brand-hover:#00619b;--calcite-color-brand-press:#004874;--calcite-color-status-info:#00619b;--calcite-color-status-success:#35ac46;--calcite-color-status-warning:#edd317;--calcite-color-status-danger:#d83020;--calcite-color-status-danger-hover:#a82b1e;--calcite-color-status-danger-press:#7c1d13;--calcite-color-background:#f8f8f8;--calcite-color-foreground-1:#ffffff;--calcite-color-foreground-2:#f3f3f3;--calcite-color-foreground-3:#eaeaea;--calcite-color-text-1:#151515;--calcite-color-text-2:#4a4a4a;--calcite-color-text-3:#6a6a6a;--calcite-color-text-inverse:#ffffff;--calcite-color-text-link:#00619b;--calcite-color-border-1:#cacaca;--calcite-color-border-2:#d4d4d4;--calcite-color-border-3:#dfdfdf;--calcite-color-border-input:#949494;--rfx-quarter-spacing:0.25rem;--rfx-half-spacing:0.5rem;--rfx-three-quarter-spacing:0.75rem;--rfx-full-spacing:1rem;--rfx-component-default-width:100%;--rfx-ui-border-input:var(--calcite-color-border-2);--rfx-popover-content-min-height:30vh;--rfx-popover-content-max-height:60vh;--rfx-popover-content-height:45vh;--rfx-widget-content-height:30vh}.rfx-cte-attribute-table__generate-table{width:100%}.rfx-cte-attribute-table__generate-table-container{padding-top:var(--rfx-full-spacing)}.rfx-cte-attribute-table__generate-table-section{padding-bottom:var(--rfx-half-spacing)}.rfx-cte-attribute-table__generate-table-component{padding-top:var(--rfx-half-spacing)}";

const RfxCteAttributeTable = class {
    constructor(hostRef) {
        (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.rfxArgumentChange = (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "rfxArgumentChange", 7);
        /**
         * Object with details for creating custom grid
         */
        this.customGridDetails = {};
        /**
         * field values to add to rfx args
         */
        this.defaultFields = [
            {
                name: "ObjectID",
                type: "esriFieldTypeOID",
                alias: "OID"
            },
            {
                name: "Value",
                type: "esriFieldTypeInteger",
                alias: "Value"
            },
            {
                name: "ClassName",
                type: "esriFieldTypeString",
                alias: "ClassName",
                length: 256
            },
            {
                name: "Red",
                type: "esriFieldTypeInteger",
                alias: "Red"
            },
            {
                name: "Green",
                type: "esriFieldTypeInteger",
                alias: "Green"
            },
            {
                name: "Blue",
                type: "esriFieldTypeInteger",
                alias: "Blue"
            },
            {
                name: "Alpha",
                type: "esriFieldTypeInteger",
                alias: "Alpha"
            }
        ];
        /**
         * details of grid columns
         */
        this.gridDefaultFields = {
            Value: _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_6__.G.textInput,
            ClassName: _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_6__.G.textInput,
            Color: _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_6__.G.color
        };
        /**
         * if true, the raster argument is and RFT and layer select should be hidden
         */
        this.isRasterArgRFT = false;
        /**
         * defaults for min max fields
         */
        this.minMaxDefaults = {
            min: "1",
            max: "7"
        };
        /**
         * Stores event handlers for help action click, stored in connected callback to avoid
         * fetching function on each render ( to avoid common bad practice )
         */
        this.helpActionClickEventHandlers = new Map();
        /**
         * Used to made the value based on grid change
         * @param event
         */
        this.updateValue = (event) => {
            const value = [];
            const { detail: { gridOptions = this.gridOptions } } = event ?? { detail: {} };
            gridOptions.forEach((data, id) => {
                if (id === gridOptions.length - 1) {
                    return; // last is a placeholder
                }
                const attributes = {
                    attributes: {
                        ObjectID: id,
                        Value: data.Value ? parseInt(data.Value, 10) : null,
                        ClassName: data.ClassName,
                        Red: data.Color?.[0] ?? 0,
                        Green: data.Color?.[1] ?? 0,
                        Blue: data.Color?.[2] ?? 0,
                        Alpha: data.Color?.[3] ?? 255
                    }
                };
                value.push(attributes);
            });
            const recordSetArg = this.widgetArgs.inputArgs.AttributeTableAsRecordSet;
            if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(recordSetArg.fields)) {
                recordSetArg.fields = this.defaultFields;
            }
            recordSetArg.features = value;
            this.rfxArgumentChange.emit({ value });
        };
        /**
         * called on raster value change
         * @param event
         */
        this.updateRasterInputArg = (event) => {
            const layer = event.detail.value;
            this.widgetArgs.inputArgs.Raster.value = layer;
        };
        /**
         * called on generate table click. Create grid option based on custom grid details
         */
        this.createCustomGridOptions = () => {
            const { min, max, className, colorRamp } = this.customGridDetails;
            const nclasses = max - min + 1, symbolData = [];
            const colormap = (0,_color_ramp_8935ed29_js__WEBPACK_IMPORTED_MODULE_13__.e)(colorRamp, nclasses).reverse();
            for (let i = min, j = 0; i <= max; i++, j++) {
                symbolData.push({
                    id: i + 1,
                    Value: i,
                    ClassName: `${className}${i}`,
                    Color: [colormap[j][1], colormap[j][2], colormap[j][3], 255]
                });
            }
            symbolData.push(this.getDefaultValueObject());
            this.gridOptions = symbolData;
            this.updateValue();
        };
        this.gridOptions = undefined;
        this.widgetArgs = undefined;
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    connectedCallback() {
        this.processWidgetArgs();
    }
    async componentWillLoad() {
        ({ strings: this.strings } = await (0,_localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.hostElement, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.g)(".")));
        this.setupInitialState();
    }
    componentDidLoad() {
        this.attachHelpClickEventHandlers();
    }
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    /**
     * All validation logic of widgetArgs -> mainly the inputArgs and triggerAttributes
     * goes here
     */
    processWidgetArgs() {
        if ((0,_type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_3__.i)(this.widgetArgs?.inputArgs)) {
            return;
        }
        if ((0,_rfx_args_helper_ab401543_js__WEBPACK_IMPORTED_MODULE_5__.b)(this.widgetArgs.inputArgs?.Raster)) {
            this.isRasterArgRFT = true;
        }
        const hasAttributeTableRecordSet = Object.keys(this.widgetArgs.inputArgs).some(function (arg) {
            if (arg === "AttributeTableAsRecordSet") {
                return true;
            }
        });
        if (!hasAttributeTableRecordSet) {
            //add the argument to rfxargs and inputArgs
            const AttributeTableAsRecordSet = {
                name: "AttributeTableAsRecordSet",
                isPublic: false,
                type: "RecordSet"
            };
            this.widgetArgs.rfxArgs.AttributeTableAsRecordSet = AttributeTableAsRecordSet;
            this.widgetArgs.inputArgs.AttributeTableAsRecordSet = AttributeTableAsRecordSet;
        }
    }
    /**
     * used to intialize the grid on opening
     */
    setupInitialState() {
        this.createGridLayout();
        this.createGridOptions();
    }
    attachHelpClickEventHandlers() {
        const rasterHelpClickHandler = this.widgetArgs.onHelpActionClick({
            heading: this.strings.raster,
            referenceElement: this.rasterLabelContainer,
            helpTextID: this.widgetArgs.helpTextIDs?.attributetable_raster
        });
        this.helpActionClickEventHandlers.set(HelpClickHandlerKeys.rasterHelpClickHandler, rasterHelpClickHandler);
    }
    /**
     * use to create the grid layout
     */
    createGridLayout() {
        this.gridLayout = {};
        Object.keys(this.gridDefaultFields).forEach((columnName) => {
            this.gridLayout[columnName] = {
                label: this.strings[columnName.toLowerCase()],
                uiType: this.gridDefaultFields[columnName]
            };
        });
    }
    getDefaultValueObject() {
        return {
            id: 0,
            Value: 0,
            ClassName: "",
            Color: [0, 0, 0, 255]
        };
    }
    /**
     * create gridoption from the value
     */
    createGridOptions() {
        const gridOptions = [];
        const recordSetArg = this.widgetArgs?.inputArgs.AttributeTableAsRecordSet;
        if (recordSetArg?.features?.length > 0) {
            const features = recordSetArg.features;
            features.forEach((feature, index) => {
                const attributes = feature.attributes;
                if (attributes.Alpha != null && attributes.Alpha <= 1) {
                    // convert Alpha of attributes from scale [0,1] to [0,255] to avoid transparent result layer
                    attributes.Alpha = Math.round(attributes.Alpha * 255);
                }
                const valObj = {
                    id: index + 1,
                    Value: attributes.Value,
                    ClassName: attributes.ClassName,
                    Color: [attributes.Red, attributes.Green, attributes.Blue, attributes.Alpha]
                };
                gridOptions.push(valObj);
            });
        }
        //add a blank value
        if (gridOptions.length === 0) {
            gridOptions.push(this.getDefaultValueObject());
        }
        this.gridOptions = gridOptions;
    }
    /**
     * render generate table block
     * @returns VNode
     */
    renderGenerateTable() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-block", { class: HTMLClasses.generateTableContainer, heading: this.strings.generate, collapsible: true }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: HTMLClasses.generateTable }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: HTMLClasses.generateTableSection }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-label", { label: this.strings.minValue, hideHelp: true }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: HTMLClasses.generateTableComponent }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-number", { scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__.U.Scale, value: this.minMaxDefaults.min, ref: (element) => (this.customGridDetails.min = Number.parseInt(element.value, 10)), onCalciteInputNumberChange: (event) => (this.customGridDetails.min = Number.parseInt(event.target.value, 10)) }))), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: HTMLClasses.generateTableSection }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-label", { label: this.strings.maxValue, hideHelp: true }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: HTMLClasses.generateTableComponent }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-number", { scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__.U.Scale, value: this.minMaxDefaults.max, ref: (element) => (this.customGridDetails.max = Number.parseInt(element.value, 10)), onCalciteInputNumberChange: (event) => (this.customGridDetails.max = Number.parseInt(event.target.value, 10)) }))), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: HTMLClasses.generateTableSection }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-label", { label: this.strings.classBaseName, hideHelp: true }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: HTMLClasses.generateTableComponent }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-text", { scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__.U.Scale, value: this.strings.defaultClassName, ref: (element) => (this.customGridDetails.className = element.value), onCalciteInputTextChange: (event) => (this.customGridDetails.className = event.target.value) }))), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: HTMLClasses.generateTableSection }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-label", { label: this.strings.colorscheme, hideHelp: true }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: HTMLClasses.generateTableComponent }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-dte-color-ramp-selector", { ref: (element) => (this.customGridDetails.colorRamp = element.value), onRfxArgumentChange: (event) => (this.customGridDetails.colorRamp = event.target.value) })))), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__.U.Scale, onClick: this.createCustomGridOptions }, this.strings.generate)));
    }
    /**
     * render raster select
     */
    renderRasterSelect() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { alignment: "start", scale: _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_4__.U.Scale, layout: "default", ref: (e) => {
                this.rasterLabelContainer = e;
            } }, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-label", { label: this.strings.raster, onRfxLabelHelpActionClick: () => this.helpActionClickEventHandlers?.get(HelpClickHandlerKeys.rasterHelpClickHandler)() }), (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-dte-raster-input", { inputLayers: this.widgetArgs.inputLayers, allowScalar: this.widgetArgs.allowScalar, rfxVariable: this.widgetArgs.inputArgs.Raster, onRfxArgumentChange: this.updateRasterInputArg, rfxBrowseLayerClick: this.widgetArgs.onRfxBrowseLayerClick })));
    }
    /**
     * Public method
     * @returns Vnode
     */
    render() {
        return ((0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, this.isRasterArgRFT !== true ? this.renderRasterSelect() : null, (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.h)("rfx-grid", { hasHeader: true, canAdd: true, canRemove: true, hasIdColumn: true, gridLayout: this.gridLayout, gridOptions: this.gridOptions, hasBorder: true, onRfxGridOptionChange: this.updateValue }), this.renderGenerateTable()));
    }
    static get assetsDirs() { return ["t9n"]; }
    get hostElement() { return (0,_index_da1b7138_js__WEBPACK_IMPORTED_MODULE_0__.a)(this); }
};
RfxCteAttributeTable.style = rfxCteAttributeTableCss;



//# sourceMappingURL=rfx-cte-attribute-table-6ba69305.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-attribute-table.entry.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-attribute-table.entry.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   rfx_cte_attribute_table: () => (/* reexport safe */ _rfx_cte_attribute_table_6ba69305_js__WEBPACK_IMPORTED_MODULE_0__.R)
/* harmony export */ });
/* harmony import */ var _rfx_cte_attribute_table_6ba69305_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rfx-cte-attribute-table-6ba69305.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-cte-attribute-table-6ba69305.js");
/* harmony import */ var _index_da1b7138_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-da1b7138.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/index-da1b7138.js");
/* harmony import */ var _localization_helper_4819b67d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./localization-helper-4819b67d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/localization-helper-4819b67d.js");
/* harmony import */ var _arcgis_core_core_lang_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @arcgis/core/core/lang.js */ "@arcgis/core/core/lang.js");
/* harmony import */ var _type_gaurds_1840747f_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./type-gaurds-1840747f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/type-gaurds-1840747f.js");
/* harmony import */ var _getTag_96af029d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_getTag-96af029d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/_getTag-96af029d.js");
/* harmony import */ var _ui_utils_928a4096_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ui-utils-928a4096.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/ui-utils-928a4096.js");
/* harmony import */ var _rfx_args_helper_ab401543_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rfx-args-helper-ab401543.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/rfx-args-helper-ab401543.js");
/* harmony import */ var _resources_27c66f5c_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./resources-27c66f5c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/resources-27c66f5c.js");
/* harmony import */ var _functions_f1f2dffd_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./functions-f1f2dffd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/functions-f1f2dffd.js");
/* harmony import */ var _interfaces_d0c68944_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./interfaces-d0c68944.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/interfaces-d0c68944.js");
/* harmony import */ var _arcgis_core_identity_IdentityManager_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @arcgis/core/identity/IdentityManager.js */ "@arcgis/core/identity/IdentityManager.js");
/* harmony import */ var _arcgis_core_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @arcgis/core/core/urlUtils.js */ "@arcgis/core/core/urlUtils.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_layers_ImageryLayer_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @arcgis/core/layers/ImageryLayer.js */ "@arcgis/core/layers/ImageryLayer.js");
/* harmony import */ var _arcgis_core_smartMapping_raster_renderers_stretch_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @arcgis/core/smartMapping/raster/renderers/stretch.js */ "@arcgis/core/smartMapping/raster/renderers/stretch.js");
/* harmony import */ var _arcgis_core_request_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @arcgis/core/request.js */ "@arcgis/core/request.js");
/* harmony import */ var _color_ramp_8935ed29_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./color-ramp-8935ed29.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/color-ramp-8935ed29.js");
/* harmony import */ var _arcgis_core_rest_support_AlgorithmicColorRamp_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @arcgis/core/rest/support/AlgorithmicColorRamp.js */ "@arcgis/core/rest/support/AlgorithmicColorRamp.js");
/* harmony import */ var _arcgis_core_rest_support_MultipartColorRamp_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @arcgis/core/rest/support/MultipartColorRamp.js */ "@arcgis/core/rest/support/MultipartColorRamp.js");
/* harmony import */ var _arcgis_core_Color_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @arcgis/core/Color.js */ "@arcgis/core/Color.js");
/* harmony import */ var _colorRampUtils_8bdd46c5_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./colorRampUtils-8bdd46c5.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/colorRampUtils-8bdd46c5.js");
/* harmony import */ var _arcgis_core_rest_geoprocessor_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @arcgis/core/rest/geoprocessor.js */ "@arcgis/core/rest/geoprocessor.js");
/* harmony import */ var _arcgis_core_portal_PortalItem_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @arcgis/core/portal/PortalItem.js */ "@arcgis/core/portal/PortalItem.js");

























//# sourceMappingURL=rfx-cte-attribute-table.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,