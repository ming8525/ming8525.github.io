/*! For license information please see arcgis_analysis_node_modules_arcgis_app-components_dist_esm_data-s-651684.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_data-s-651684"],{15953:(e,t,r)=>{r.d(t,{a:()=>p,b:()=>y,c:()=>u,d:()=>d,e:()=>n,f:()=>s,g:()=>h,h:()=>l,i:()=>b,j:()=>f,k:()=>w,l:()=>i,m:()=>c});var a=r(20164),o=r(49853);function n(e,t){const r={type:"folder",path:`/fileShares/${t}`,info:{datastoreConnectionType:"shared",path:e.publisherFolderPath,hostName:e.publisherFolderPathHostname}};return"newPath"===e.serverFolderPath?(r.clientPath=e.publisherFolderPath,r.info.path=e.newServerFolderPath,r.info.datastoreConnectionType="replicated"):"nfsHostAndPath"===e.serverFolderPath&&(r.clientPath=e.publisherFolderPath,r.provider="UserManaged",r.info.datastoreConnectionType="replicated",r.info.fileServerPath=e.nfsSharePath,r.info.fileServerHost=e.nfsHostName,r.info.fileServerType="nfs"),r}function s(e,t){const r={type:"egdb",path:"/enterpriseDatabases/"+t,info:{dataStoreConnectionType:"shared"}};return"newConnection"===e.serverDatabaseOption?(r.info.connectionString=e.serverConnectionString,r.info.clientConnectionString=e.publisherConnectionString,r.info.dataStoreConnectionType="replicated"):"bigQuery"===e.databaseProvider||"snowflake"===e.databaseProvider?r.info.JDBCConnection=e.jdbcConnection:r.info.connectionString=e.publisherConnectionString,r}const i=async(e,t,r,a)=>{let o,n;if((null==r?void 0:r.length)>0){try{n=JSON.parse(r)}catch(e){return{error:{code:"invalidJSON"}}}o=function(e,t){const{type:r,project_id:a,private_key_id:o,private_key:n,client_email:s,client_id:i,auth_uri:c,token_uri:l,auth_provider_x509_cert_url:d,client_x509_cert_url:u}=t;return{oAuthType:0,projectId:e,url:"jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443",oAuthPvtKeyFile:{type:r,project_id:a,private_key_id:o,private_key:n,client_email:s,client_id:i,auth_uri:c,token_uri:l,auth_provider_x509_cert_url:d,client_x509_cert_url:u}}}(e,n)}else(null==a?void 0:a.length)>0&&(o=function(e,t,r){return{name:"BigqueryArcgisPlatform_RefreshToken",className:"com.esri.sds.bigquery.jdbc.GBQDataSource",oAuthType:2,projectId:e,defaultDataset:t,url:"jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443",oAuthRefreshToken:r}}(e,t,a));return{result:{type:"egdb",path:"/enterpriseDatabases/bigQuerySvrDevDataJdbc",id:null,clientPath:null,info:{JDBCConnection:o}}}};function c(e){const{user:t,password:r,database:a,role:o,server:n,warehouse:s,schema:i}=e;return{path:"/enterpriseDatabases/snowflakeJdbc",type:"egdb",info:{JDBCConnection:{user:t,password:r,database:a,role:o,connectionUrl:`jdbc:snowflake://${n}`,warehouse:s,schema:i}}}}function l(e,t){if("Arango"===e.noSqlProvider){const t={type:"nosql",path:"/nosqlDatabases/Arango_enterprise",info:{systemManaged:!1,dsFeature:"graphStore",isManagedData:!1,category:"database",factory:"nosql",provider:"ArangoDB",implementation:"ArangoDB",purposes:["knowledge-graph"],connectionProperties:{hosts:[],useSsl:e.useSsl,username:e.username,password:e.password,database:e.database}}};return""!==e.hosts?t.info.connectionProperties.hosts=e.hosts.split(","):delete t.info.connectionProperties.hosts,t}const r={type:"nosql",path:`/nosqlDatabases/${t}`,info:{provider:"Neo4J",isManaged:!1,dsFeature:"graphStore",factory:"nosql",implementation:"Neo4j",category:"database",systemManaged:!1,isManagedData:!1,purposes:["knowledge-graph"],connectionProperties:{connectionUri:e.connectionUri,username:e.username,password:e.password,database:e.database,fallbackServerAddresses:[]}}};return""!==e.fallBackServers?r.info.connectionProperties.fallbackServerAddresses.push(e.fallBackServers.split(",")):delete r.info.connectionProperties.fallbackServerAddresses,r}function d(e,t){const r="bdfs"===e.addDataStoreType?e.bdfsCloudProvider:e.provider,a={info:{}},o={credentialType:"accesskey"};return"amazon"===r&&("accessKey"===e.credentialType?(o.accessKeyId=e.accessKey,o.secretAccessKey=e.secretKey):o.credentialType=e.credentialType,"custom"===e.selectedRegion.id?o.regionEndpointUrl=e.storageURL:(o.regionEndpointUrl=g(e.regions,e.selectedRegion),o.region=e.selectedRegion.id),a.info.objectStore=e.bucketName,a.provider="amazon"),"google"===r&&(o.accessKeyId=e.accessKey,o.secretAccessKey=e.secretKey,o.regionEndpointUrl="https://storage.googleapis.com",a.info.objectStore=e.bucketName,a.provider="Google"),"azure"===r&&("sharedKey"===e.azureAuthenticationType?(o.credentialType="accessKey",o.accountKey=e.accountKey):"activeDirectory"===e.azureAuthenticationType?(o.credentialType=e.azureIdentityType,"servicePrincipal"===e.azureIdentityType?(o.tenantId=e.tenantId,o.clientId=e.clientId,o.clientSecret=e.clientSecret):"userAssignedIdentity"===e.azureIdentityType&&(o.managedIdentityClientId=e.clientId)):"sasToken"===e.azureAuthenticationType?(o.credentialType=e.azureAuthenticationType,o.sasToken=e.token):"anonymous"===e.azureAuthenticationType&&(o.credentialType=e.azureAuthenticationType),"other"===e.environment.id||"anonymous"===e.azureAuthenticationType?o.regionEndpointUrl=e.endpoint:o.accountEndpoint=g(e.regions,e.environment),o.accountName=e.accountName,a.info.objectStore=e.containerName,a.provider="azure"),"azuredatalakegen2store"===r&&("other"===e.environment.id?o.regionEndpointUrl=e.endpoint:o.accountEndpoint=g(e.regions,e.environment),o.credentialType="accessKey",o.accountKey=e.accountKey,a.info.folder=e.cloudFolder?`${e.containerName}/${e.cloudFolder}`:e.containerName,o.accountName=e.accountName,a.provider="azureDataLakeStore"),"alibaba"===r&&(o.accessKeyId=e.accessKey,o.secretAccessKey=e.secretKey,a.info.objectStore=e.bucketName,a.provider="Alibaba",o.regionEndpointUrl="custom"===e.selectedRegion.id?e.storageURL:g(e.regions,e.selectedRegion)),o.defaultEndpointsProtocol="https",e.cloudFolder&&"azuredatalakegen2store"!==r&&(a.info.objectStore=a.info.objectStore+"/"+e.cloudFolder),a.type="cloudStore",a.path="/cloudStores/"+t,a.info.connectionString=JSON.stringify(o),a}function u(e,t){return{type:"bigDataFileShare",path:`/bigDataFileShares/${t}`,info:{connectionString:JSON.stringify({path:e.bdfsFilesharePath}),connectionType:"fileShare"}}}function p(e,t){return{type:"bigDataFileShare",path:`/bigDataFileShares/${t}`,info:{connectionString:JSON.stringify({path:e.bdfsHdfsPath,username:e.bdfsHdfsUsername}),connectionType:"hdfs"}}}function y(e,t){const r={type:"bigDataFileShare",path:"/bigDataFileShares/"+t,info:{connectionString:"",connectionType:"hive"}},a=e.useNonDefaultDatabase;return r.info.connectionString=JSON.stringify({metaStoreUris:e.metastoreUris,database:a&&e.nonDefaultDatabaseName||"default"}),r}function f(e,t){return JSON.stringify({info:{connectionString:JSON.stringify({path:t}),connectionType:"dataStore"},path:`/bigDataFileShares/${e}`,type:"bigDataFileShare"})}function g(e,t){let r;return e.forEach((function(e){e.id===t.id&&(r=e.blobStoreEndpoint||e.storageEndpointSuffix)})),r}const h=async(e,t)=>{const r=e.results.out_connectionString.paramUrl,o=`${t}/Get%20Database%20Connection%20String/jobs/${e.jobId}/${r}`,n=await(0,a.r)(o);return m(n)},m=e=>{const t=e.value;return{connectionStringProps:v(t),connectionString:t}},v=e=>{let t=[];return e&&e.split(";").forEach((e=>{const r=e.split("=");2!==r.length||S(t,r[0])||t.push({key:r[0],value:r[1]})})),t},S=(e,t)=>e.some((e=>e.key===t)),b=()=>{var e;const t=o.c.portal,r=t.portalDeploymentType||(null===(e=t.sourceJSON)||void 0===e?void 0:e.portalDeploymentType);return t.isPortal&&"ArcGISEnterpriseOnKubernetes"===r},w=e=>e?`${e}/rest/services/System/PublishingTools/GPServer`:""},6161:(e,t,r)=>{r.d(t,{a:()=>P,b:()=>D,c:()=>v,d:()=>b,e:()=>y,f:()=>h,g:()=>p,h:()=>f,p:()=>u,r:()=>T,v:()=>m});var a=r(20164),o=r(88780),n=r(49853),s=r(36238),i=r(15953),c=r(62824),l=r(82102);const d=async(e,t)=>{var r,o;const s=n.c.portal,i=`${null!==(r=s.restUrl)&&void 0!==r?r:s.portalUrl}portals/${s.id}/jobs/${encodeURIComponent(e)}/?key=${encodeURIComponent(t)}`;try{return{result:await(0,a.p)(i,{pendingStatuses:["processing","submitted"],successStatuses:["succeeded"]},"post")}}catch(e){console.error(e);const t=null===(o=e.messages)||void 0===o?void 0:o[0];return(null==t?void 0:t.includes("ERROR 000623"))?{error:{code:"invalidDataStorePublishType"}}:{error:{code:"unhandledError",message:JSON.stringify(e)}}}},u=async(e,t,r)=>{var o;try{const{folder:n,type:s,cacheStoreId:i,serviceName:p,pathInCachedStore:y,description:f,serverId:g,tags:h}=e;let m;switch(s){case"i3sRestCache":case"extractedScenePackage":m="SceneServer";break;case"vectorCacheDataset":m="VectorTileServer";break;case"cacheDataset":m=r?"ImageServer":"MapServer"}const v={serviceConfiguration:JSON.stringify({type:m,serviceName:p,properties:{pathInCachedStore:y,cacheStoreId:i}}),serverId:g,tags:h,f:"json"},S=`${(0,a.g)()}portals/self/datastores/publish`,{jobId:b,key:w}=await(0,a.r)(S,v,{},"post"),{error:D,result:T}=await d(b,w);if("invalidDataStorePublishType"===(null==D?void 0:D.code))return"cacheDataset"===e.type?u(e,t,!0):{error:{code:"invalidDataStorePublishType",message:JSON.stringify(D.message)}};if(D)return{error:{code:"failToPublishFromDataStore",message:JSON.stringify(D.message)}};const N=null===(o=null==T?void 0:T.result)||void 0===o?void 0:o.services[0];(0,c.t)(n)||await(0,l.m)(N.serviceItemId,n.id);const _={snippet:f,f:"json"};return await(0,l.u)(N.serviceItemId,_),{result:N}}catch(e){return console.error(e),{error:{code:"failToPublishFromDataStore",message:JSON.stringify(e)}}}},p=async(e,t,r,o)=>{var s;const i=n.c.portal,c=`${null!==(s=i.restUrl)&&void 0!==s?s:i.portalUrl}portals/${i.id}/datastores/describe`,l={datastoreId:e,serverId:o,path:t,type:r,f:"json"};try{const{jobId:e,key:t}=await(0,a.r)(c,l,{},"post"),{result:r}=await d(e,t);return{result:r.result}}catch(e){return console.error(e),{error:{code:"failToListDataStoreContents",message:JSON.stringify(e)}}}},y=async(e,t)=>{var r;const o=n.c.portal,s=`${null!==(r=o.restUrl)&&void 0!==r?r:o.portalUrl}portals/${o.id}/datastores/validate`,i={datastoreId:t,serverId:e.id,f:"json"};try{const{status:e}=await(0,a.r)(s,i,{},"post");return{result:e}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},f=async(e,t,r)=>{let o;try{const{result:n}=await(0,a.d)(e,t,{},"post").then((e=>{if("success"===e.status)return o=e.item.itemName,g(e.item,r)}));return{result:Object.assign(Object.assign({},n),{itemName:o})}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},g=async(e,t)=>{const r=(0,i.k)(t),o=`${r}/Get%20Database%20Connection%20String/submitJob`,n={in_inputData:e.itemID,in_connDataType:"UPLOADED_CONNECTION_FILE_ID"};try{const{jobId:e,jobStatus:t}=await(0,a.r)(o,n,{},"post");if("esriJobSubmitted"===(t||"")){const o=`${r}/Get%20Database%20Connection%20String/jobs/${e}`,n=await(0,a.p)(o,{requestParams:{jobId:e,jobStatus:t},pendingStatuses:["esriJobNew","esriJobSubmitted","esriJobWaiting","esriJobExecuting"],successStatuses:["esriJobSucceeded"]});return{result:await(0,i.g)(n,r)}}return{result:null}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},h=async e=>{try{const t=await(0,a.r)("https://esriresources.s3.amazonaws.com/1120/regionsforcloudstorage.dat");let r;return"amazon"===e?r=t.Amazon.regions:"azure"===e||"azuredatalakegen2store"===e?r=t.environments:"alibaba"===e?r=t.Alibaba.regions:"google"===e&&(r=t.Google.regions),{result:r}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},m=async(e,t,r)=>{var a;const n=`${t.helperServices.datastoreManagement.url}/${e}/data/validateDataItem`,s=JSON.stringify(r);try{return{result:await(0,o.r)(n,t,{body:{item:s,f:"json"},usePost:!0})}}catch(e){console.error("Data Store validation error",e);const t=[["incorrect username or password","invalidUsernameOrPassword"]];let r=(null===(a=JSON.stringify(e))||void 0===a?void 0:a.toLowerCase())||"";for(const[e,a]of t)if(r.includes(e))return{error:{code:a}};return{error:{code:"unhandledError"}}}},v=async(e,t,r)=>{const a=await Promise.all(t.map((t=>S(e,t,r))));return t.map(((e,t)=>{var r,o,n,s,i,c;const l=a[t],d=null===(r=null==l?void 0:l.machines)||void 0===r?void 0:r[0],u=null===(o=null==d?void 0:d.dataItems)||void 0===o?void 0:o[0];return!(null==l?void 0:l.status)||"success"!==(null==l?void 0:l.status)&&(null==d?void 0:d.machine.toLowerCase())!==e.name.toLowerCase().split(":")[0]?Object.assign(Object.assign({},e),{serverStatus:"error",errorMsg:(null===(c=null==l?void 0:l.error)||void 0===c?void 0:c.message)&&JSON.parse(l.error.message).message||(null==u?void 0:u.message),error:null==u?void 0:u.error}):Object.assign(Object.assign({},e),{serverStatus:(null==l?void 0:l.status)||(null===(n=null==l?void 0:l.machines[0])||void 0===n?void 0:n.status),errorMsg:"error"===(null==d?void 0:d.status)&&(null===(s=null==l?void 0:l.error)||void 0===s?void 0:s.message)&&JSON.parse(null===(i=null==l?void 0:l.error)||void 0===i?void 0:i.message).message||(null==u?void 0:u.message),error:null==u?void 0:u.error})}))},S=async(e,t,r)=>{var o;let s;const c=e.bdfsType;let l=null;"bdfs"===r?"fileshare"===c?s=(0,i.c)(e):"hdfs"===c?s=(0,i.a)(e):"hive"===c?s=(0,i.b)(e):"cloud"===c&&("new"===e.bdfsCloudType?(s=(0,i.d)(e),s.info.isManaged=!1):l={serverId:t.id,datastoreId:e.bdfsExistingDatastore.id,f:"json"}):("folder"===r?s=(0,i.e)(e):"database"===r?s=(0,i.f)(e):"cloud"===r?s=(0,i.d)(e):"nosql"===r&&(s=(0,i.h)(e)),s.info.isManaged=!1);const d=n.c.portal,u=`${null!==(o=d.restUrl)&&void 0!==o?o:d.portalUrl}portals/${d.id}/datastores/validate`;l=!l&&e.allowServicesRestart?{datastore:JSON.stringify(s),serverId:t.id,options:JSON.stringify({allowServicesRestart:!0}),f:"json"}:{datastore:JSON.stringify(s),serverId:t.id,f:"json"};try{const{status:e,machines:t}=await(0,a.r)(u,l,{},"post");return{status:e,machines:t}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},b=async e=>{let t=[],r=e;if((0,i.i)()){const e=[];r.forEach((r=>{if(r.isHosted){const e={name:r.adminUrl,type:"Linux"};t.push(e)}else"FEDERATED_SERVER"===r.serverRole&&e.push(r)}));const o=await Promise.allSettled(e.map((e=>{const t=`${e.adminUrl}/admin/machines?f=json`;return(0,a.r)(t,{},{},"post")})));await Promise.allSettled(o.map((e=>{var a;return N(null===(a=null==e?void 0:e.value)||void 0===a?void 0:a.machines,r).then((e=>{t=[...t,...e]}))})))}else{const e=await Promise.allSettled(r.map((e=>{const t=`${e.adminUrl}/admin/machines?f=json`;return(0,a.r)(t,{},{},"post")})));await Promise.allSettled(e.map((e=>{var a;return w(null===(a=null==e?void 0:e.value)||void 0===a?void 0:a.machines,r).then((e=>{r=[...e.serverList],t=e.serverTypes}))})))}return{servers:r,serverTypes:t}},w=async(e,t)=>{let r=[];t.map(((t,r)=>{(null==e?void 0:e[r])?t.shouldFilter=!1:t.shouldFilter=!0})),t.filter((e=>!e.shouldFilter));for(let o=0;o<t.length;o++){const n=e[0].machineName,s=`${e[0].adminURL}/machines/${n}?f=json`;await(0,a.r)(s,{},{},"post").then((e=>{if(e){const a={name:t[o].adminUrl,type:e.platform.indexOf("Windows")>-1?"Windows":"Linux"};r.push(a)}}))}return{serverTypes:r,serverList:t}},D=async()=>{const e={q:`orgid:${n.c.user.orgId} type:"Data Store"`,num:1e4},t=`${(0,a.g)()}search`,r=["cloudStore_amazon","cloudStore_azure","cloudStore_azuredatalakegen2store","cloudStore_azureDataLakeStore"];try{const o=[],{results:n}=await(0,a.r)(t,e);return null==n||n.forEach((({id:e,title:t,type:a,typeKeywords:n})=>{!n.includes("bigDataFileShare")&&n.some((e=>r.includes(e)))&&o.push({id:e,title:t,type:a,typeKeywords:n})})),{result:o}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},T=async e=>{const t=`${(0,a.g)()}content/items/${e}/data`;try{const{id:e,path:r,provider:o}=await(0,a.r)(t);return{id:e,path:r,provider:o}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},N=async(e,t)=>{let r=[];return await Promise.all(t.map(((o,n)=>{if(!o.isHosted){const o=e[0].machineName,s=`${e[0].adminURL}/machines/${o}?f=json`;return(0,a.r)(s,{},{},"post").then((e=>{if(!e.isHosted){const a={name:t[n].adminUrl,type:e.platform.indexOf("Windows")>-1?"Windows":"Linux"};r.push(a)}}))}}))),r},_=async(e,t,r,o,c,l)=>{var d;const{portal:u}=n.c,p=`${null!==(d=u.restUrl)&&void 0!==d?d:u.portalUrl}portals/${u.id}`,y=t.dataStoreSelectedServers,f=await Promise.all(y.map((r=>{const o={serverId:r,datastoreId:e.id};(0,i.i)()&&"folder"===t.addDataStoreType&&t.allowServicesRestart&&(o.options=JSON.stringify({allowServicesRestart:!0}));const n=`${p}/datastores/addToServer`;return(0,a.r)(n,o,{},"post")})));let g={success:!1,id:null,folder:null};for(const n of f)if(n.success){if("bdfs"===t.addDataStoreType&&"cloud"===t.bdfsType&&"new"===t.bdfsCloudType)return g=await I(t,r,o,c,l,e.id),g;if(["folder","database","nosql","cloud"].includes(t.addDataStoreType))g={success:!0,id:e.id,folder:e.id};else{const t=async()=>{const r=`${(0,a.g)()}content/items/${e.id}/relatedItems`,o=await(0,a.r)(r,{relationshipType:"BDFSDataStore2BDFSCatalogService",direction:"forward"});return o.total?(g={success:!0,id:o.relatedItems[0].id,folder:e.id},g):(await(0,s.t)(1e4),t())};g=t()}}return g},I=async(e,t,r,o,s,l,d)=>{const u=`${(0,a.g)()}content/items/${l}/data`,p=await(0,a.r)(u),y=d||p.path,f=y.split("/")[2].split("_")[0],g={type:"Data Store",title:t||f,tags:r,categories:o,snippet:s,text:""};g.text=(0,i.j)(g.title,y),e.addDataStoreType="bdfsDataStore";let h=await(0,c.u)(g,null);return h.success&&n.c.portal.isPortal&&(h=await _(h,e)),h},P=async(e,t,r,a,o)=>{const s=e.addDataStoreType,l={type:"Data Store",title:t,tags:r,categories:a,snippet:o,text:"",typeKeywords:e.typeKeywords};let d;const u=e.bdfsType;if("bdfs"===s){if("fileshare"===u)d=(0,i.c)(e,t);else if("hdfs"===u)d=(0,i.a)(e,t);else if("hive"===u)d=(0,i.b)(e,t);else if("cloud"===u){if("new"!==e.bdfsCloudType)return await I(e,t,r,a,o,e.bdfsExistingDatastore.id,e.bdfsExistingDatastore.path);d=(0,i.d)(e,t),d.info.isManaged=!1}}else"folder"===s?d=(0,i.e)(e,t):"database"===s?d=(0,i.f)(e,t):"cloud"===s?d=(0,i.d)(e,t):"nosql"===s&&(d=(0,i.h)(e,t)),d.info.isManaged=!1;l.text=JSON.stringify(d);let p=await(0,c.u)(l,null);return p.success&&n.c.portal.isPortal&&(p=await _(p,e,t,r,a,o)),p}}}]);