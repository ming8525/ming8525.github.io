"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_ba-infographic_node_modules_arcgis_business-analyst-components_dis-2cd253"],{

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/ba-accordion_4.entry.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/ba-accordion_4.entry.js ***!
  \*****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ba_accordion: () => (/* binding */ BaAccordion),
/* harmony export */   calcite_dropdown: () => (/* binding */ Dropdown),
/* harmony export */   calcite_dropdown_group: () => (/* binding */ DropdownGroup),
/* harmony export */   calcite_dropdown_item: () => (/* binding */ DropdownItem)
/* harmony export */ });
/* harmony import */ var _index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-4e647411.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/index-4e647411.js");
/* harmony import */ var _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ElementIds-f7d257e8.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/ElementIds-f7d257e8.js");
/* harmony import */ var _dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dom-1997bfaf.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/dom-1997bfaf.js");
/* harmony import */ var _floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./floating-ui-0f98fc53.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/floating-ui-0f98fc53.js");
/* harmony import */ var _guid_88a3729f_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guid-88a3729f.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/guid-88a3729f.js");
/* harmony import */ var _interactive_29995522_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./interactive-29995522.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/interactive-29995522.js");
/* harmony import */ var _key_b75491c4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./key-b75491c4.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/key-b75491c4.js");
/* harmony import */ var _observers_56740e99_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observers-56740e99.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/observers-56740e99.js");
/* harmony import */ var _openCloseComponent_7d58834c_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./openCloseComponent-7d58834c.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/openCloseComponent-7d58834c.js");
/* harmony import */ var _loadable_cc14d728_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./loadable-cc14d728.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/loadable-cc14d728.js");














const baAccordionCss = "calcite-list-item{margin-block-end:unset !important;--tw-shadow:unset !important;--tw-shadow-colored:unset !important;box-shadow:unset !important}";

const BaAccordion = class {
  constructor(hostRef) {
    (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.accordionOpened = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "accordionOpened", 7);
    this.accordionWillOpen = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "accordionWillOpen", 7);
    this.accordionItemClicked = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "accordionItemClicked", 7);
    this.accordionItemsChecked = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "accordionItemsChecked", 7);
    this.defaultReportSelected = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "defaultReportSelected", 7);
    // debug data
    this.debugContent = [];
    this.ignoreClick = 0;
    this._idPrefix = 'ba-accordion-';
    this._idItemPrefix = 'ba-item-';
    this._idIconPrefix = 'ba-accordion-icon-';
    this._idContentPrefix = 'ba-content-';
    this._isReport = false;
    this._dbg = false;
    /* Props */
    // @Prop() checkboxAlignRight: boolean = false;  // shows checkboxes on the right side of each item
    this.hideOnEmpty = 'true'; // hides accordion when empty
    this.displayCount = true; // shows a count of accordion content items
    this.contentInline = 'true'; // displays accordion content inline or absolute positioned over other elements
    this.stSourceCountry = 'US';
    this.stShowDefault = false;
    this.toggleCheckState = (data, id) => {
      if (data && data.length > 0 && id) {
        for (let i = 0; i < data.length; i++) {
          if (data[i].id === id) {
            const checked = data[i].isChecked;
            data[i].isChecked = !checked;
            return !checked;
          }
        }
      }
      return false;
    };
    this.onCheckAllChanged = (ev) => {
      const self = this;
      const elemChecked = ev.srcElement?.checked;
      const checkState = !elemChecked;
      const _delay = function () {
        self.notifyCheckedItems(checkState);
      };
      setTimeout(_delay, 0);
    };
    this.langCode = 'en-us';
    this.sourceCountry = 'US';
  }
  /* Watches */
  onSourceCountryChanged() {
    this.stSourceCountry = this.sourceCountry;
  }
  onshowDefaultChanged() {
    this.stShowDefault = this.showDefault == 'true';
  }
  onDefaultReportChanged() {
    this.stDefaultReportId = this.defaultReportId;
  }
  onSugliteChanged() {
    this.stSuglite = false;
    if (typeof this.suglite !== undefined && (this.suglite === 'true')) {
      this.stSuglite = true;
    }
  }
  onContentChanged() {
    try {
      if (this.content && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.hasText(this.content))
        this.stContent = JSON.parse(this.content);
    }
    catch (ex) {
      _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.a.Error('ba-accordion content error', ex);
    }
  }
  onAccordionTextChanged() {
    this.stDisplayName = this.displayname;
  }
  onSelectedIdChanged() {
    this.stSelectedId = this.selectedId;
  }
  onGroupIdChanged() {
    this.stGroupId = this.groupid;
  }
  onContentInlineChanged() {
    this.stContentInline = (this.contentInline == 'true');
  }
  accordionCheckboxChanged() {
    this.stShowCheckboxes = this.showCheckboxes;
  }
  // Update the Infographic Report when the arcgis-report-list changes
  accordionOpenedEventHandler(event) {
    let groupId = event.detail.groupid;
    let emitId = event.detail.instanceId;
    if (emitId != null && emitId != this._instanceId) {
      if (groupId != null) {
        if (!this.stGroupId && this.groupid)
          this.stGroupId = this.groupid;
        if (this.stGroupId && this.stGroupId == groupId) {
          // received a signal that another accordion just opened,
          // that means we should close this one.
          this.closeAccordion(null);
        }
      }
    }
  }
  // @Method()
  async openAccordion() {
  }
  // @Method()
  async setSelectedId(id) {
    this.selectedId = id;
    this.stSelectedId = id;
  }
  // @Method()
  async setShowCheckbox(flag) {
    this.stShowCheckboxes = flag;
  }
  // @Method()
  async setShowDefault(flag, defaultId) {
    this.stShowDefault = flag;
    this.stDefaultReportId = defaultId;
  }
  async setColorTheme(name) {
    if (name && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.hasText(name) && this.el) {
      this.stColorTheme = name.trim().toLowerCase();
      const n = name.trim().toLowerCase();
      if (n === 'light') {
        this.el.style.setProperty('--calcite-ui-brand', '#007ac2');
        this.el.style.setProperty('--calcite-ui-brand-hover', '#00619b');
        this.el.style.setProperty('--calcite-ui-brand-press', '#004874');
        this.el.style.setProperty('--calcite-ui-background', '#f8f8f8');
        this.el.style.setProperty('--calcite-ui-foreground-1', '#ffffff');
        this.el.style.setProperty('--calcite-ui-foreground-2', '#f3f3f3');
        this.el.style.setProperty('--calcite-ui-foreground-3', '#eaeaea');
        this.el.style.setProperty('--calcite-ui-text-1', '#151515');
        this.el.style.setProperty('--calcite-ui-text-2', '#4a4a4a');
        this.el.style.setProperty('--calcite-ui-text-3', '#6a6a6a');
        this.el.style.setProperty('--calcite-ui-text-inverse', '#ffffff');
        this.el.style.setProperty('--calcite-ui-text-link', '#00619b');
        this.el.style.setProperty('--calcite-ui-border-1', '#cacaca');
        this.el.style.setProperty('--calcite-ui-border-2', '#d4d4d4');
        this.el.style.setProperty('--calcite-ui-border-3', '#dfdfdf');
        this.el.style.setProperty('--calcite-ui-border-input', '#949494');
        this.el.style.setProperty('--calcite-ui-info', '#00619b');
        this.el.style.setProperty('--calcite-ui-success', '#35ac46');
      }
      else if (n === 'dark') {
        this.el.style.setProperty('--calcite-ui-brand', '#009af2');
        this.el.style.setProperty('--calcite-ui-brand-hover', '#007ac2');
        this.el.style.setProperty('--calcite-ui-brand-press', '#00619b');
        this.el.style.setProperty('--calcite-ui-background', '#353535');
        this.el.style.setProperty('--calcite-ui-foreground-1', '#2b2b2b');
        this.el.style.setProperty('--calcite-ui-foreground-2', '#202020');
        this.el.style.setProperty('--calcite-ui-foreground-3', '#151515');
        this.el.style.setProperty('--calcite-ui-text-1', '#ffffff');
        this.el.style.setProperty('--calcite-ui-text-2', '#bfbfbf');
        this.el.style.setProperty('--calcite-ui-text-3', '#9f9f9f');
        this.el.style.setProperty('--calcite-ui-text-inverse', '#151515');
        this.el.style.setProperty('--calcite-ui-text-link', '#00a0ff');
        this.el.style.setProperty('--calcite-ui-border-1', '#555555');
        this.el.style.setProperty('--calcite-ui-border-2', '#4a4a4a');
        this.el.style.setProperty('--calcite-ui-border-3', '#404040');
        this.el.style.setProperty('--calcite-ui-border-input', '#757575');
        this.el.style.setProperty('--calcite-ui-info', '#00a0ff');
        this.el.style.setProperty('--calcite-ui-success', '#36da43');
      }
    }
  }
  componentWillLoad() {
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.a.Log('ACCORDION: will load');
    this.stLangCode = this.langCode;
    this.stSourceCountry = this.sourceCountry;
    this.stShowCheckboxes = this.showCheckboxes;
    this.stShowDefault = this.showDefault == 'true';
    this.stDefaultReportId = this.defaultReportId;
    if (!this._instanceId)
      this._instanceId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.E.generateId(this._idPrefix).id;
    if (!this._instanceContentId)
      this._instanceContentId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.E.generateId(this._idContentPrefix).id;
    if (!this._instanceIconId)
      this._instanceIconId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.E.generateId(this._idIconPrefix).id;
    this.stSuglite = false;
    if (typeof this.suglite !== undefined && (this.suglite === 'true')) {
      this.stSuglite = true;
    }
    // const self = this;
    if (!this.stDisplayName || this.stDisplayName.length <= 0) {
      if (this.displayname && this.displayname.length > 0)
        this.stDisplayName = this.displayname;
      else {
        this.stDisplayName = '?';
      }
    }
    if (!this.stGroupId && this.groupid)
      this.stGroupId = this.groupid;
    if (!this.stContentInline && this.contentInline)
      this.stContentInline = (this.contentInline == 'true');
    if (!this.stContent && this.content && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.hasText(this.content)) {
      try {
        this.stContent = JSON.parse(this.content);
      }
      catch (error) {
        this.stContent = {};
      }
    }
    this.stSelectedId = this.selectedId;
  }
  componentDidLoad() {
    const self = this;
    if (this.el) {
      this.el.addEventListener('click', (ev) => {
        self.onClickAccordion.call(self, ev);
      });
    }
    self.applyStyles();
    // const makeDefs = ACLUtils.queryElementAll.call(this, 'calcite-list-item.ba-report-item')
    // if (makeDefs) {
    //   for (let ii = 0; ii < makeDefs.length; ii++) {
    //     const icon = makeDefs[ii]
    //     icon.addEventListener('click', (ev) => {
    //       self.onClickListItemAction.call(self, ev)
    //     })
    //   }
    // }
  }
  componentDidRender() {
    const self = this;
    setTimeout(() => {
      self.applyStyles();
    }, 10);
  }
  applyStyles() {
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.a.Log('ACCORDION applyStyles');
    // styling in case we are showing checkboxes
    if (this.stShowCheckboxes) {
      // apply size to calcite-checkbox div inside the shadow dom
      const calciteAcc = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElement.call(this, 'calcite-accordion');
      if (calciteAcc) {
        const calciteAccItem = calciteAcc.querySelector('calcite-accordion-item');
        if (calciteAccItem) {
          const aiShadow = calciteAccItem.shadowRoot;
          if (aiShadow) {
            // adjust accordion main label
            const headerContent = aiShadow.querySelector('div.header-content');
            if (headerContent) {
              headerContent.style.position = 'relative';
              headerContent.style.top = '2px';
              headerContent.style.left = '1px';
              headerContent.style.padding = '8px 12px 10px 12px';
            }
          }
          // adjust accordion main checkbox
          const check = calciteAccItem.querySelector('calcite-checkbox');
          if (check) {
            const boxDiv = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElement.call(check, 'div.toggle');
            if (boxDiv) {
              boxDiv.style.position = 'relative';
              boxDiv.style.left = '-3px';
              boxDiv.style.width = '16px';
              boxDiv.style.height = '14px';
              boxDiv.style.border = 'solid 1px var(--calcite-ui-border-2)';
            }
          }
          // for all list items
          const list = calciteAcc.querySelector('calcite-list');
          if (list) {
            const listItems = list.querySelectorAll('calcite-list-item');
            if (listItems && listItems.length > 0) {
              for (let ii = 0; ii < listItems.length; ii++) {
                const item = listItems[ii];
                // accordion label
                const labelElem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElement.call(item, 'div.label');
                if (labelElem) {
                  labelElem.style.position = 'relative';
                  labelElem.style.left = '1px';
                  labelElem.style.padding = '0';
                }
                // accordion list item checkbox
                const check = item.querySelector('calcite-checkbox');
                if (check) {
                  const boxDiv = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElement.call(check, 'div.toggle');
                  if (boxDiv) {
                    boxDiv.style.position = 'relative';
                    boxDiv.style.left = '5px';
                    boxDiv.style.width = '15px';
                    boxDiv.style.height = '13px';
                    boxDiv.style.border = 'solid 1px var(--calcite-ui-border-2)';
                  }
                }
              }
            }
          }
          const divActionStart = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElement.call(calciteAccItem, 'div.actions-start');
          if (divActionStart) {
            divActionStart.style.width = '24px';
          }
        }
      }
    }
  }
  onCheckboxChanged(id) {
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.a.Log('ACCORDION: onCheckboxChanged');
    const reportId = id;
    const isChecked = this.toggleCheckState(this.stContent, reportId);
    this.notifyCheckedItems(isChecked, reportId);
    this.updateCheckboxes();
    return false;
  }
  /*
   * closeAccordion
   *
   *    context - internal use only, set to null otherwise
   */
  closeAccordion(context) {
    let accordion = context ? context.elem : _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElementById.call(this, this._instanceId);
    let content = context ? context.content : _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElementById.call(this, this._instanceContentId);
    let icon = context ? context.icon : _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElementById.call(this, this._instanceIconId);
    accordion.classList.remove('accordion__active');
    content.style.maxHeight = null;
    icon.setAttribute('icon-end', 'caret-down');
    // hide content to prevent tab actions
    this.hideContent(content);
  }
  // shows the accordion content div containing all the row items
  showContent(content) {
    if (!content)
      content = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElementById.call(this, this._instanceContentId);
    if (content.classList.contains('ba-content-hidden')) {
      content.classList.remove('ba-content-hidden');
    }
  }
  hideContent(content) {
    if (!content)
      content = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElementById.call(this, this._instanceContentId);
    if (!content.classList.contains('ba-content-hidden')) {
      content.classList.add('ba-content-hidden');
    }
  }
  onClickAccordionItem(e, context, data) {
    if (!data.usesCheckbox) {
      // data = { id:<reportid>, name:<reportName> }
      this.accordionItemClicked.emit({ context: context, item: data });
    }
    e.stopPropagation();
    e.preventDefault();
    return false;
  }
  onClickMakeDefaultAction(ev, reportId) {
    const name = this._getContentItem(reportId).name;
    const isDefault = reportId == this.stDefaultReportId;
    if (isDefault) {
      this.stDefaultReportId = '';
    }
    else {
      // notify listeners of default change
      this.stDefaultReportId = reportId;
      this.defaultReportSelected.emit({ reportId: reportId, name: name });
    }
    // close the menu popover
    const popoverId = reportId + '-pop';
    const popoverElem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElementById.call(this, _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.fixId(popoverId));
    if (popoverElem) {
      popoverElem.setAttribute('open', 'false');
    }
  }
  onClickAccordion(ev) {
    if (ev.target.classList.contains('ba-target-check'))
      return false;
    if (this.ignoreClick > 0) {
      this.ignoreClick--;
      return false;
    }
    // const acc = ACLUtils.queryElementById.call (this, this._instanceId)
    const acc = ev.currentTarget;
    const content = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElementById.call(this, this._instanceContentId);
    const icon = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElementById.call(this, this._instanceIconId);
    if (content) {
      if (content.style.maxHeight) {
        // accordion is currently open
        this.closeAccordion({ elem: acc, content: content, icon: icon });
      }
      else {
        // accordion is closed - open it
        acc.classList.add('accordion__active');
        content.style.maxHeight = '100%'; //content.scrollHeight + 'px';
        // icon.innerText = '-';
        icon.setAttribute('icon-end', 'caret-up');
        this.showContent(content);
        // notify other accordions in our group that this accordion just opened
        this.accordionOpened.emit({ accordion: this, groupid: this.stGroupId, instanceId: this._instanceId });
        function _afterAnimation() {
          content.style.overflow = 'auto';
        }
        setTimeout(_afterAnimation, 500);
      }
    }
    return true;
  }
  _getContent() {
    // Note: stContent is an object, content is a string
    if (!this.stContent) {
      if (this.content) {
        this.stContent = JSON.parse(this.content);
      }
      else {
        if (!this.showDebug) {
          let accElem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.queryElementById.call(this, this._instanceId);
          if (accElem) {
            let c = accElem.getAttribute('content');
            if (c && c.length > 0) {
              this.content = c;
              this.stContent = JSON.parse(this.content);
            }
          }
        }
      }
    }
    return this.stContent;
  }
  _getContentItem(id) {
    for (let ii = 0; ii < this.stContent.length; ii++) {
      let item = this.stContent[ii];
      if (item.id == id) {
        return item;
      }
    }
    return null;
  }
  _setContentItem(id, prop, val) {
    for (let ii = 0; ii < this.stContent.length; ii++) {
      let item = this.stContent.stContenttent[ii];
      if (item.id == id) {
        this.stContent[ii][prop] = val;
        break;
      }
    }
  }
  _toggleContentItem(id, prop) {
    let item = this._getContentItem(id);
    if (item) {
      const newValue = item[prop] ? false : true;
      this._setContentItem(id, prop, newValue);
    }
  }
  updateCheckboxes() {
    this.stTimestamp = new Date().getTime();
  }
  // emits notification when any/all checkbox changes
  //   list = array of reportIds to set, or (null or empty) to set all
  //   newState = new forced state to notify
  //
  notifyCheckedItems(newState, id) {
    const applyToAll = (!id || !_ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.hasText(id));
    const checkboxes = this.el.shadowRoot?.querySelectorAll('calcite-checkbox[data-group]');
    if (checkboxes) {
      const reports = [];
      for (let ii = 0; ii < checkboxes.length; ii++) {
        const box = checkboxes[ii];
        let flag = box.checked;
        const reportId = box.getAttribute('guid');
        if (reportId && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.A.hasText(reportId)) {
          if (applyToAll || id == reportId) {
            flag = newState;
          }
          const report = { id: reportId, isChecked: flag };
          reports.push(report);
        }
      }
      if (reports.length > 0) {
        // Notify other components
        this.accordionItemsChecked.emit({ accordion: this, reports: reports });
      }
    }
  }
  renderMakeDefaultUI(reportId) {
    const actionStyle = {
      'padding': '4px',
      'position': 'relative',
      'left': '12px'
    };
    // const listItemStyle = {
    //   'min-width': '160px',
    //   'display': 'flex'
    // }
    // const listItemIconStyle = {
    //   'display': 'flex',
    //   'flex': '0 0 auto',
    //   'width': '28px',
    //   'height': '28px',
    //   'transform': 'scale(0.7)'
    // }
    // const listItemTextStyle = {
    //   'display': 'flex',
    //   'flex': '1 1 auto',
    //   'justify-content': 'left',
    //   'text-align': 'left',
    //   'align-items': 'center',
    //   'padding-right': '5px',
    //   'max-width': '200px',
    //   'cursor': 'pointer'
    // }
    // const popoverListItemStyle = {
    //   'display': 'flex',
    //   'align-items': 'center'
    // }
    // Only renders the ellipsis and popup menu if 'showDefault' is true
    if (this.stShowDefault) {
      const makeDefText = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.B.i18n('make-default');
      const removeDefText = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.B.i18n('remove-default');
      const actionId = reportId + '-action';
      const popoverId = reportId + '-pop';
      const isDefault = reportId == this.stDefaultReportId;
      const popoverIconName = (isDefault) ? 'x' : 'check';
      const defText = (isDefault) ? removeDefText : makeDefText;
      const popoverActionId = reportId + '-popitem';
      return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "actions-end", style: actionStyle }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-action", { id: actionId, icon: "ellipsis", "aria-expanded": "true", alignment: "center", appearance: "transparent", scale: "s" }), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-popover", { id: popoverId, "aria-hidden": "false", "aria-live": "polite", role: "dialog", "auto-close": "", "pointer-disabled": "", "offset-distance": "6", "offset-skidding": "0", "overlay-positioning": "fixed", placement: "left-end", scale: "m", "data-placement": "right-start", "reference-element": actionId, open: "" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-action", { id: popoverActionId, text: defText, icon: popoverIconName, onClick: (e) => this.onClickMakeDefaultAction(e, reportId), "text-enabled": "true" }))));
    }
    else {
      return ('');
    }
  }
  getAccordion() {
    try {
      const self = this;
      let content = self._getContent();
      _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.a.Log('getAccordion', content, self.stShowDefault);
      const sName = self.stDisplayName;
      const iconName = self.calciteicon || '';
      const listItemTextUnderlined = {
        'text-decoration': 'underline'
      };
      if (self.stShowCheckboxes) {
        let anyChecked = [];
        if (self.stContent?.length > 0) {
          anyChecked = self.stContent.some((obj) => obj.isChecked);
        }
        const mainCheckStyle = {
          'margin': '-2px -4px 0px 5px',
          'width': '16px',
          'height': '16px',
          'position': 'relative',
          'left': '5px',
          'top': '2px'
        };
        const listCheckStyle = {
          'margin': '-4px 0px 0px -4px',
          'width': '15px',
          'height': '13px'
        };
        return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-accordion", { appearance: "solid", "icon-position": "end" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-accordion-item", { scale: "s", heading: sName }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { slot: "actions-start", style: mainCheckStyle, name: 'Select All', value: "all", checked: anyChecked, onClick: self.onCheckAllChanged }), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-list", null, content
          ? content.map(({ id, name, subText }) => {
            const accListItemId = id + '-acc-item';
            const isDefault = id == this.stDefaultReportId;
            const defStyle = (isDefault) ? listItemTextUnderlined : '';
            return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-list-item", { id: accListItemId, label: name, data: id, description: subText || '', style: defStyle }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { style: listCheckStyle, name: name, "data-group": self.reportsGroupId, value: id, id: id, slot: "actions-start", checked: self.stContent && self.stContent.some((obj) => obj.id === id && obj.isChecked), onClick: (e) => self.onCheckboxChanged(e.target.value) }), self.renderMakeDefaultUI(id)));
          })
          : ''))));
      }
      else {
        return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-accordion", { appearance: "solid", "icon-position": "end" }, content ?
          (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-accordion-item", { "icon-start": iconName, scale: "s", heading: sName, expanded: content.some((obj) => obj['id'] === self.stSelectedId) ? true : false }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tree", null, content
            ? content.map(({ id, name }) => ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tree-item", { style: {
                padding: '8px 0',
                whiteSpace: 'wrap',
                overflowX: 'hidden',
                lineHeight: '1.25rem',
              }, data: id, label: name, selected: id === self.stSelectedId ? true : false, onclick: (e) => self.onClickAccordionItem(e, self, { id: id, name: name }) }, name, self.renderMakeDefaultUI(id))))
            : ''))
          : ''));
      }
    }
    catch (error) {
      _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_1__.a.Error('ba-accordion', error);
    }
  }
  render() {
    const self = this;
    let content = self._getContent();
    if (!content) {
      return;
    }
    this._isReport = self.el.classList.contains('reportList');
    return (this.getAccordion());
  }
  get el() { return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "sourceCountry": ["onSourceCountryChanged"],
    "showDefault": ["onshowDefaultChanged"],
    "defaultReportId": ["onDefaultReportChanged"],
    "suglite": ["onSugliteChanged"],
    "content": ["onContentChanged"],
    "displayname": ["onAccordionTextChanged"],
    "selectedId": ["onSelectedIdChanged"],
    "groupid": ["onGroupIdChanged"],
    "contentInline": ["onContentInlineChanged"],
    "showCheckboxes": ["accordionCheckboxChanged"]
  }; }
};
BaAccordion.style = baAccordionCss;

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
const SLOTS = {
  dropdownTrigger: "trigger"
};

const dropdownCss = "@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing);--calcite-floating-ui-z-index:600}:host([hidden]){display:none}:host([disabled]){pointer-events:none;cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host{display:inline-flex;flex:0 1 auto}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}:host .calcite-dropdown-wrapper{--calcite-floating-ui-z-index:600;display:block;position:absolute;z-index:var(--calcite-floating-ui-z-index);visibility:hidden}.calcite-dropdown-wrapper .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:transform, visibility, opacity;opacity:0;box-shadow:0 0 16px 0 rgba(0, 0, 0, 0.16);z-index:1;border-radius:0.25rem}.calcite-dropdown-wrapper[data-placement^=bottom] .calcite-floating-ui-anim{transform:translateY(-5px)}.calcite-dropdown-wrapper[data-placement^=top] .calcite-floating-ui-anim{transform:translateY(5px)}.calcite-dropdown-wrapper[data-placement^=left] .calcite-floating-ui-anim{transform:translateX(5px)}.calcite-dropdown-wrapper[data-placement^=right] .calcite-floating-ui-anim{transform:translateX(-5px)}.calcite-dropdown-wrapper[data-placement] .calcite-floating-ui-anim--active{opacity:1;transform:translate(0)}:host([open]) .calcite-dropdown-wrapper{visibility:visible}:host .calcite-dropdown-content{max-block-size:45vh;inline-size:auto;overflow-y:auto;overflow-x:hidden;background-color:var(--calcite-ui-foreground-1);inline-size:var(--calcite-dropdown-width)}.calcite-trigger-container{position:relative;display:flex;flex:1 1 auto}@media (forced-colors: active){:host([open]) .calcite-dropdown-wrapper{border:1px solid canvasText}}:host([width=s]){--calcite-dropdown-width:12rem}:host([width=m]){--calcite-dropdown-width:14rem}:host([width=l]){--calcite-dropdown-width:16rem}";

const Dropdown = class {
  constructor(hostRef) {
    (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteDropdownSelect = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteDropdownSelect", 6);
    this.calciteDropdownBeforeClose = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteDropdownBeforeClose", 6);
    this.calciteDropdownClose = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteDropdownClose", 6);
    this.calciteDropdownBeforeOpen = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteDropdownBeforeOpen", 6);
    this.calciteDropdownOpen = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteDropdownOpen", 6);
    this.items = [];
    this.groups = [];
    this.mutationObserver = (0,_observers_56740e99_js__WEBPACK_IMPORTED_MODULE_2__.c)("mutation", () => this.updateItems());
    this.resizeObserver = (0,_observers_56740e99_js__WEBPACK_IMPORTED_MODULE_2__.c)("resize", (entries) => this.resizeObserverCallback(entries));
    this.openTransitionProp = "opacity";
    this.guid = `calcite-dropdown-${(0,_guid_88a3729f_js__WEBPACK_IMPORTED_MODULE_3__.g)()}`;
    this.defaultAssignedElements = [];
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.slotChangeHandler = (event) => {
      this.defaultAssignedElements = event.target.assignedElements({
        flatten: true
      });
      this.updateItems();
    };
    this.setFilteredPlacements = () => {
      const { el, flipPlacements } = this;
      this.filteredFlipPlacements = flipPlacements
        ? (0,_floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.f)(flipPlacements, el)
        : null;
    };
    this.updateTriggers = (event) => {
      this.triggers = event.target.assignedElements({
        flatten: true
      });
      this.reposition(true);
    };
    this.updateItems = () => {
      this.items = this.groups
        .map((group) => Array.from(group?.querySelectorAll("calcite-dropdown-item")))
        .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);
      this.updateSelectedItems();
      this.reposition(true);
    };
    this.updateGroups = (event) => {
      const groups = event.target
        .assignedElements({ flatten: true })
        .filter((el) => el?.matches("calcite-dropdown-group"));
      this.groups = groups;
      this.updateItems();
    };
    this.resizeObserverCallback = (entries) => {
      entries.forEach((entry) => {
        const { target } = entry;
        if (target === this.referenceEl) {
          this.setDropdownWidth();
        }
        else if (target === this.scrollerEl) {
          this.setMaxScrollerHeight();
        }
      });
    };
    this.setDropdownWidth = () => {
      const { referenceEl, scrollerEl } = this;
      const referenceElWidth = referenceEl?.clientWidth;
      if (!referenceElWidth || !scrollerEl) {
        return;
      }
      scrollerEl.style.minWidth = `${referenceElWidth}px`;
    };
    this.setMaxScrollerHeight = () => {
      const { scrollerEl } = this;
      if (!scrollerEl) {
        return;
      }
      this.reposition(true);
      const maxScrollerHeight = this.getMaxScrollerHeight();
      scrollerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : "";
      this.reposition(true);
    };
    this.setScrollerAndTransitionEl = (el) => {
      this.resizeObserver.observe(el);
      this.scrollerEl = el;
      this.transitionEl = el;
      (0,_openCloseComponent_7d58834c_js__WEBPACK_IMPORTED_MODULE_5__.c)(this);
    };
    this.setReferenceEl = (el) => {
      this.referenceEl = el;
      (0,_floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.c)(this, this.referenceEl, this.floatingEl);
      this.resizeObserver.observe(el);
    };
    this.setFloatingEl = (el) => {
      this.floatingEl = el;
      (0,_floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.c)(this, this.referenceEl, this.floatingEl);
    };
    this.keyDownHandler = (event) => {
      const target = event.target;
      if (target !== this.referenceEl) {
        return;
      }
      const { defaultPrevented, key } = event;
      if (defaultPrevented) {
        return;
      }
      if (this.open) {
        if (key === "Escape") {
          this.closeCalciteDropdown();
          event.preventDefault();
          return;
        }
        else if (event.shiftKey && key === "Tab") {
          this.closeCalciteDropdown();
          event.preventDefault();
          return;
        }
      }
      if ((0,_key_b75491c4_js__WEBPACK_IMPORTED_MODULE_6__.i)(key)) {
        this.openCalciteDropdown();
        event.preventDefault();
      }
      else if (key === "Escape") {
        this.closeCalciteDropdown();
        event.preventDefault();
      }
    };
    this.focusOnFirstActiveOrFirstItem = () => {
      this.getFocusableElement(this.items.find((item) => item.selected) || this.items[0]);
    };
    this.toggleOpenEnd = () => {
      this.focusOnFirstActiveOrFirstItem();
      this.el.removeEventListener("calciteDropdownOpen", this.toggleOpenEnd);
    };
    this.openCalciteDropdown = () => {
      this.open = !this.open;
      if (this.open) {
        this.el.addEventListener("calciteDropdownOpen", this.toggleOpenEnd);
      }
    };
    this.open = false;
    this.closeOnSelectDisabled = false;
    this.disabled = false;
    this.flipPlacements = undefined;
    this.maxItems = 0;
    this.overlayPositioning = "absolute";
    this.placement = _floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.d;
    this.scale = "m";
    this.selectedItems = [];
    this.type = "click";
    this.width = undefined;
  }
  openHandler(value) {
    if (!this.disabled) {
      if (value) {
        this.reposition(true);
      }
      else {
        (0,_floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.u)(this.floatingEl);
      }
      return;
    }
    if (!value) {
      (0,_floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.u)(this.floatingEl);
    }
    this.open = false;
  }
  handleDisabledChange(value) {
    if (!value) {
      this.open = false;
    }
  }
  flipPlacementsHandler() {
    this.setFilteredPlacements();
    this.reposition(true);
  }
  maxItemsHandler() {
    this.setMaxScrollerHeight();
  }
  overlayPositioningHandler() {
    this.reposition(true);
  }
  placementHandler() {
    this.reposition(true);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });
    this.setFilteredPlacements();
    this.reposition(true);
    if (this.open) {
      this.openHandler(this.open);
    }
    (0,_openCloseComponent_7d58834c_js__WEBPACK_IMPORTED_MODULE_5__.c)(this);
  }
  componentDidLoad() {
    this.reposition(true);
  }
  componentDidRender() {
    (0,_interactive_29995522_js__WEBPACK_IMPORTED_MODULE_7__.u)(this);
  }
  disconnectedCallback() {
    this.mutationObserver?.disconnect();
    (0,_floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.a)(this, this.referenceEl, this.floatingEl);
    this.resizeObserver?.disconnect();
    (0,_openCloseComponent_7d58834c_js__WEBPACK_IMPORTED_MODULE_5__.d)(this);
  }
  render() {
    const { open, guid } = this;
    return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "calcite-trigger-container", id: `${guid}-menubutton`, onClick: this.openCalciteDropdown, onKeyDown: this.keyDownHandler, ref: this.setReferenceEl }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { "aria-controls": `${guid}-menu`, "aria-expanded": (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.t)(open), "aria-haspopup": "menu", name: SLOTS.dropdownTrigger, onSlotchange: this.updateTriggers })), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { "aria-hidden": (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.t)(!open), class: "calcite-dropdown-wrapper", ref: this.setFloatingEl }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { "aria-labelledby": `${guid}-menubutton`, class: {
        ["calcite-dropdown-content"]: true,
        [_floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.F.animation]: true,
        [_floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.F.animationActive]: open
      }, id: `${guid}-menu`, ref: this.setScrollerAndTransitionEl, role: "menu" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { onSlotchange: this.updateGroups })))));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Updates the position of the component.
   *
   * @param delayed
   */
  async reposition(delayed = false) {
    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;
    return (0,_floating_ui_0f98fc53_js__WEBPACK_IMPORTED_MODULE_4__.r)(this, {
      floatingEl,
      referenceEl,
      overlayPositioning,
      placement,
      flipPlacements: filteredFlipPlacements,
      type: "menu"
    }, delayed);
  }
  closeCalciteDropdownOnClick(event) {
    if (!(0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.i)(event) || !this.open || event.composedPath().includes(this.el)) {
      return;
    }
    this.closeCalciteDropdown(false);
  }
  closeCalciteDropdownOnEvent(event) {
    this.closeCalciteDropdown();
    event.stopPropagation();
  }
  closeCalciteDropdownOnOpenEvent(event) {
    if (event.composedPath().includes(this.el)) {
      return;
    }
    this.open = false;
  }
  mouseEnterHandler() {
    if (this.type === "hover") {
      this.openCalciteDropdown();
    }
  }
  mouseLeaveHandler() {
    if (this.type === "hover") {
      this.closeCalciteDropdown();
    }
  }
  calciteInternalDropdownItemKeyEvent(event) {
    const { keyboardEvent } = event.detail;
    const target = keyboardEvent.target;
    switch (keyboardEvent.key) {
      case "Tab":
        if (this.items.indexOf(target) === this.items.length - 1 && !keyboardEvent.shiftKey) {
          this.closeCalciteDropdown();
        }
        else if (this.items.indexOf(target) === 0 && keyboardEvent.shiftKey) {
          this.closeCalciteDropdown();
        }
        break;
      case "ArrowDown":
        (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.p)(this.items, target, "next");
        break;
      case "ArrowUp":
        (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.p)(this.items, target, "previous");
        break;
      case "Home":
        (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.p)(this.items, target, "first");
        break;
      case "End":
        (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.p)(this.items, target, "last");
        break;
    }
    event.stopPropagation();
  }
  handleItemSelect(event) {
    this.updateSelectedItems();
    event.stopPropagation();
    this.calciteDropdownSelect.emit();
    if (!this.closeOnSelectDisabled ||
      event.detail.requestedDropdownGroup.selectionMode === "none") {
      this.closeCalciteDropdown();
    }
    event.stopPropagation();
  }
  onBeforeOpen() {
    this.calciteDropdownBeforeOpen.emit();
  }
  onOpen() {
    this.calciteDropdownOpen.emit();
  }
  onBeforeClose() {
    this.calciteDropdownBeforeClose.emit();
  }
  onClose() {
    this.calciteDropdownClose.emit();
  }
  updateSelectedItems() {
    this.selectedItems = this.items.filter((item) => item.selected);
  }
  getMaxScrollerHeight() {
    const { maxItems, items } = this;
    let itemsToProcess = 0;
    let maxScrollerHeight = 0;
    let groupHeaderHeight;
    this.groups.forEach((group) => {
      if (maxItems > 0 && itemsToProcess < maxItems) {
        Array.from(group.children).forEach((item, index) => {
          if (index === 0) {
            if (isNaN(groupHeaderHeight)) {
              groupHeaderHeight = item.offsetTop;
            }
            maxScrollerHeight += groupHeaderHeight;
          }
          if (itemsToProcess < maxItems) {
            maxScrollerHeight += item.offsetHeight;
            itemsToProcess += 1;
          }
        });
      }
    });
    return items.length > maxItems ? maxScrollerHeight : 0;
  }
  closeCalciteDropdown(focusTrigger = true) {
    this.open = false;
    if (focusTrigger) {
      (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.h)(this.triggers[0]);
    }
  }
  getFocusableElement(item) {
    if (!item) {
      return;
    }
    const target = item.attributes.isLink
      ? item.shadowRoot.querySelector("a")
      : item;
    (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.h)(target);
  }
  static get delegatesFocus() { return true; }
  get el() { return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "open": ["openHandler"],
    "disabled": ["handleDisabledChange"],
    "flipPlacements": ["flipPlacementsHandler"],
    "maxItems": ["maxItemsHandler"],
    "overlayPositioning": ["overlayPositioningHandler"],
    "placement": ["placementHandler"]
  }; }
};
Dropdown.style = dropdownCss;

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
const CSS$1 = {
  containerSmall: "container--s",
  containerMedium: "container--m",
  containerLarge: "container--l"
};

const dropdownGroupCss = "@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing);--calcite-floating-ui-z-index:600}:host([hidden]){display:none}:host{position:relative;display:block}.container{text-align:start}.container--s{font-size:var(--calcite-font-size--2);line-height:1rem}.container--s .dropdown-title{padding:0.5rem}.container--m{font-size:var(--calcite-font-size--1);line-height:1rem}.container--m .dropdown-title{padding:0.75rem}.container--l{font-size:var(--calcite-font-size-0);line-height:1.25rem}.container--l .dropdown-title{padding:1rem}.dropdown-title{margin-block-end:-1px;display:block;cursor:default;overflow-wrap:break-word;border-width:0px;border-block-end-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-2)}.dropdown-separator{display:block;block-size:1px;background-color:var(--calcite-ui-border-3)}";

const DropdownGroup = class {
  constructor(hostRef) {
    (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteInternalDropdownItemChange = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDropdownItemChange", 6);
    this.groupTitle = undefined;
    this.selectionMode = "single";
    this.scale = undefined;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.groupPosition = this.getGroupPosition();
  }
  render() {
    const scale = this.scale || (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.f)(this.el, "scale", "m");
    const groupTitle = this.groupTitle ? ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { "aria-hidden": "true", class: "dropdown-title" }, this.groupTitle)) : null;
    const dropdownSeparator = this.groupPosition > 0 ? (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "dropdown-separator", role: "separator" }) : null;
    return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.H, { "aria-label": this.groupTitle, role: "group" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
        container: true,
        [CSS$1.containerSmall]: scale === "s",
        [CSS$1.containerMedium]: scale === "m",
        [CSS$1.containerLarge]: scale === "l"
      }, title: this.groupTitle }, dropdownSeparator, groupTitle, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null))));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  updateActiveItemOnChange(event) {
    this.requestedDropdownGroup = event.detail.requestedDropdownGroup;
    this.requestedDropdownItem = event.detail.requestedDropdownItem;
    this.calciteInternalDropdownItemChange.emit({
      requestedDropdownGroup: this.requestedDropdownGroup,
      requestedDropdownItem: this.requestedDropdownItem
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  getGroupPosition() {
    return Array.prototype.indexOf.call(this.el.parentElement.querySelectorAll("calcite-dropdown-group"), this.el);
  }
  static get delegatesFocus() { return true; }
  get el() { return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
DropdownGroup.style = dropdownGroupCss;

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
const CSS = {
  containerLink: "container--link",
  containerSmall: "container--s",
  containerMedium: "container--m",
  containerLarge: "container--l",
  containerMulti: "container--multi-selection",
  containerSingle: "container--single-selection",
  containerNone: "container--none-selection",
  icon: "dropdown-item-icon",
  iconEnd: "dropdown-item-icon-end",
  iconStart: "dropdown-item-icon-start",
  itemContent: "dropdown-item-content",
  link: "dropdown-link"
};

const dropdownItemCss = "@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing);--calcite-floating-ui-z-index:600}:host([hidden]){display:none}.container--s{padding-block:0.25rem;font-size:var(--calcite-font-size--2);line-height:1rem;padding-inline-end:0.5rem;padding-inline-start:1.5rem}.container--m{padding-block:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem;padding-inline-end:0.75rem;padding-inline-start:2rem}.container--l{padding-block:0.625rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;padding-inline-end:1rem;padding-inline-start:2.5rem}.container--s.container--none-selection{padding-inline-start:0.25rem}.container--s.container--none-selection .dropdown-link{padding-inline-start:0px}.container--m.container--none-selection{padding-inline-start:0.5rem}.container--m.container--none-selection .dropdown-link{padding-inline-start:0px}.container--l.container--none-selection{padding-inline-start:0.75rem}.container--l.container--none-selection .dropdown-link{padding-inline-start:0px}:host{position:relative;display:flex;flex-grow:1;align-items:center}.container{position:relative;display:flex;flex-grow:1;cursor:pointer;align-items:center;color:var(--calcite-ui-text-3);text-decoration-line:none;transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);text-align:start}.dropdown-item-content{flex:1 1 auto;padding-block:0.125rem;padding-inline-end:auto;padding-inline-start:0.25rem}:host,.container--link a{outline-color:transparent}:host(:focus){outline:2px solid transparent;outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}.container--link{padding:0px}.container--link a{position:relative;display:flex;flex-grow:1;cursor:pointer;align-items:center;color:var(--calcite-ui-text-3);text-decoration-line:none;transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.container--s .dropdown-link{padding-block:0.25rem;font-size:var(--calcite-font-size--2);line-height:1rem;padding-inline-end:0.5rem;padding-inline-start:1.5rem}.container--m .dropdown-link{padding-block:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem;padding-inline-end:0.75rem;padding-inline-start:2rem}.container--l .dropdown-link{padding-block:0.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;padding-inline-end:1rem;padding-inline-start:2.5rem}:host(:hover) .container,:host(:active) .container{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1);text-decoration-line:none}:host(:hover) .container--link .dropdown-link,:host(:active) .container--link .dropdown-link{color:var(--calcite-ui-text-1)}:host(:focus) .container{color:var(--calcite-ui-text-1);text-decoration-line:none}:host(:active) .container{background-color:var(--calcite-ui-foreground-3)}:host(:hover) .container:before,:host(:active) .container:before,:host(:focus) .container:before{opacity:1}:host([selected]) .container:not(.container--none-selection),:host([selected]) .container--link .dropdown-link{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}:host([selected]) .container:not(.container--none-selection):before,:host([selected]) .container--link .dropdown-link:before{opacity:1;color:var(--calcite-ui-brand)}:host([selected]) .container:not(.container--none-selection) calcite-icon,:host([selected]) .container--link .dropdown-link calcite-icon{color:var(--calcite-ui-brand)}.container--multi-selection:before,.container--none-selection:before{display:none}.container--s:before{inset-inline-start:0.5rem}.container--m:before{inset-inline-start:0.75rem}.container--l:before{inset-inline-start:1rem}.dropdown-item-icon{position:absolute;opacity:0;transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:scale(0.9)}.container--s .dropdown-item-icon{inset-inline-start:0.25rem}.container--m .dropdown-item-icon{inset-inline-start:0.5rem}.container--l .dropdown-item-icon{inset-inline-start:0.75rem}:host(:hover) .dropdown-item-icon{color:var(--calcite-ui-border-1);opacity:1}:host([selected]) .dropdown-item-icon{color:var(--calcite-ui-brand);opacity:1}.container--s .dropdown-item-icon-start{margin-inline-end:0.5rem;margin-inline-start:0.25rem}.container--s .dropdown-item-icon-end{margin-inline-start:0.5rem}.container--m .dropdown-item-icon-start{margin-inline-end:0.75rem;margin-inline-start:0.25rem}.container--m .dropdown-item-icon-end{margin-inline-start:0.75rem}.container--l .dropdown-item-icon-start{margin-inline-end:1rem;margin-inline-start:0.25rem}.container--l .dropdown-item-icon-end{margin-inline-start:1rem}";

const DropdownItem = class {
  constructor(hostRef) {
    (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteDropdownItemSelect = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteDropdownItemSelect", 6);
    this.calciteInternalDropdownItemSelect = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDropdownItemSelect", 6);
    this.calciteInternalDropdownItemKeyEvent = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDropdownItemKeyEvent", 6);
    this.calciteInternalDropdownCloseRequest = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDropdownCloseRequest", 6);
    /** Specifies the scale of dropdown-item controlled by the parent, defaults to m */
    this.scale = "m";
    this.selected = false;
    this.iconFlipRtl = undefined;
    this.iconStart = undefined;
    this.iconEnd = undefined;
    this.href = undefined;
    this.label = undefined;
    this.rel = undefined;
    this.target = undefined;
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    await (0,_loadable_cc14d728_js__WEBPACK_IMPORTED_MODULE_9__.c)(this);
    this.el?.focus();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    (0,_loadable_cc14d728_js__WEBPACK_IMPORTED_MODULE_9__.a)(this);
    this.initialize();
  }
  componentDidLoad() {
    (0,_loadable_cc14d728_js__WEBPACK_IMPORTED_MODULE_9__.s)(this);
  }
  connectedCallback() {
    this.initialize();
  }
  render() {
    const scale = (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.f)(this.el, "scale", this.scale);
    const iconStartEl = ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: CSS.iconStart, flipRtl: this.iconFlipRtl === "start" || this.iconFlipRtl === "both", icon: this.iconStart, scale: scale === "l" ? "m" : "s" }));
    const contentNode = ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: CSS.itemContent }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
    const iconEndEl = ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: CSS.iconEnd, flipRtl: this.iconFlipRtl === "end" || this.iconFlipRtl === "both", icon: this.iconEnd, scale: scale === "l" ? "m" : "s" }));
    const slottedContent = this.iconStart && this.iconEnd
      ? [iconStartEl, contentNode, iconEndEl]
      : this.iconStart
        ? [iconStartEl, contentNode]
        : this.iconEnd
          ? [contentNode, iconEndEl]
          : contentNode;
    const contentEl = !this.href ? (slottedContent) : ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("a", { "aria-label": this.label, class: CSS.link, href: this.href, ref: (el) => (this.childLink = el), rel: this.rel, tabIndex: -1, target: this.target }, slottedContent));
    const itemRole = this.href
      ? null
      : this.selectionMode === "single"
        ? "menuitemradio"
        : this.selectionMode === "multiple"
          ? "menuitemcheckbox"
          : "menuitem";
    const itemAria = this.selectionMode !== "none" ? (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.t)(this.selected) : null;
    return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.H, { "aria-checked": itemAria, role: itemRole, tabindex: "0" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
        container: true,
        [CSS.containerLink]: !!this.href,
        [CSS.containerSmall]: scale === "s",
        [CSS.containerMedium]: scale === "m",
        [CSS.containerLarge]: scale === "l",
        [CSS.containerMulti]: this.selectionMode === "multiple",
        [CSS.containerSingle]: this.selectionMode === "single",
        [CSS.containerNone]: this.selectionMode === "none"
      } }, this.selectionMode !== "none" ? ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: CSS.icon, icon: this.selectionMode === "multiple" ? "check" : "bullet-point", scale: scale === "l" ? "m" : "s" })) : null, contentEl)));
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  onClick() {
    this.emitRequestedItem();
  }
  keyDownHandler(event) {
    switch (event.key) {
      case " ":
      case "Enter":
        this.emitRequestedItem();
        if (this.href) {
          this.childLink.click();
        }
        event.preventDefault();
        break;
      case "Escape":
        this.calciteInternalDropdownCloseRequest.emit();
        event.preventDefault();
        break;
      case "Tab":
        this.calciteInternalDropdownItemKeyEvent.emit({ keyboardEvent: event });
        break;
      case "ArrowUp":
      case "ArrowDown":
      case "Home":
      case "End":
        event.preventDefault();
        this.calciteInternalDropdownItemKeyEvent.emit({ keyboardEvent: event });
        break;
    }
  }
  updateActiveItemOnChange(event) {
    const parentEmittedChange = event.composedPath().includes(this.parentDropdownGroupEl);
    if (parentEmittedChange) {
      this.requestedDropdownGroup = event.detail.requestedDropdownGroup;
      this.requestedDropdownItem = event.detail.requestedDropdownItem;
      this.determineActiveItem();
    }
    event.stopPropagation();
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  initialize() {
    this.selectionMode = (0,_dom_1997bfaf_js__WEBPACK_IMPORTED_MODULE_8__.f)(this.el, "selection-mode", "single");
    this.parentDropdownGroupEl = this.el.closest("calcite-dropdown-group");
    if (this.selectionMode === "none") {
      this.selected = false;
    }
  }
  determineActiveItem() {
    switch (this.selectionMode) {
      case "multiple":
        if (this.el === this.requestedDropdownItem) {
          this.selected = !this.selected;
        }
        break;
      case "single":
        if (this.el === this.requestedDropdownItem) {
          this.selected = true;
        }
        else if (this.requestedDropdownGroup === this.parentDropdownGroupEl) {
          this.selected = false;
        }
        break;
      case "none":
        this.selected = false;
        break;
    }
  }
  emitRequestedItem() {
    this.calciteDropdownItemSelect.emit();
    this.calciteInternalDropdownItemSelect.emit({
      requestedDropdownItem: this.el,
      requestedDropdownGroup: this.parentDropdownGroupEl
    });
  }
  get el() { return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
DropdownItem.style = dropdownItemCss;



//# sourceMappingURL=ba-accordion_4.entry.js.map

/***/ }),

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/interactive-29995522.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/interactive-29995522.js ***!
  \*****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   u: () => (/* binding */ updateHostInteraction)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
function noopClick() {
  /** noop */
}
/**
 * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.
 *
 * This should be used in the `componentDidRender` lifecycle hook.
 *
 * **Notes**
 *
 * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.
 * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error
 *
 * @param component
 * @param hostIsTabbable
 */
function updateHostInteraction(component, hostIsTabbable = false) {
  if (component.disabled) {
    component.el.setAttribute("tabindex", "-1");
    component.el.setAttribute("aria-disabled", "true");
    if (component.el.contains(document.activeElement)) {
      document.activeElement.blur();
    }
    component.el.click = noopClick;
    return;
  }
  component.el.click = HTMLElement.prototype.click;
  if (typeof hostIsTabbable === "function") {
    component.el.setAttribute("tabindex", hostIsTabbable.call(component) ? "0" : "-1");
  }
  else if (hostIsTabbable === true) {
    component.el.setAttribute("tabindex", "0");
  }
  else if (hostIsTabbable === false) {
    component.el.removeAttribute("tabindex");
  }
  else ;
  component.el.removeAttribute("aria-disabled");
}



//# sourceMappingURL=interactive-29995522.js.map

/***/ }),

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/key-b75491c4.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/key-b75491c4.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   i: () => (/* binding */ isActivationKey),
/* harmony export */   n: () => (/* binding */ numberKeys)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
function isActivationKey(key) {
  return key === "Enter" || key === " ";
}
const numberKeys = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];



//# sourceMappingURL=key-b75491c4.js.map

/***/ }),

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/loadable-cc14d728.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/loadable-cc14d728.js ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ setUpLoadableComponent),
/* harmony export */   c: () => (/* binding */ componentLoaded),
/* harmony export */   s: () => (/* binding */ setComponentLoaded)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
const resolveMap = new WeakMap();
const promiseMap = new WeakMap();
/**
 * This helper util sets up the component for the ability to know when the component has been loaded.
 *
 * This should be used in the `componentWillLoad` lifecycle hook.
 *
 * ```
 * componentWillLoad(): void {
 *   setUpLoadableComponent(this);
 * }
 * ```
 *
 * @param component
 */
function setUpLoadableComponent(component) {
  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));
}
/**
 * This helper util lets the loadable component know that it is now loaded.
 *
 * This should be used in the `componentDidLoad` lifecycle hook.
 *
 * ```
 * componentDidLoad(): void {
 *   setComponentLoaded(this);
 * }
 * ```
 *
 * @param component
 */
function setComponentLoaded(component) {
  resolveMap.get(component)();
}
/**
 * This helper util can be used to ensure a component has been loaded (The "componentDidLoad" stencil lifecycle method has been called).
 *
 * Requires "setUpLoadableComponent" and "setComponentLoaded" to be called first.
 *
 * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.
 *
 * ```
 * async setFocus(): Promise<void> {
 *   await componentLoaded(this);
 * }
 * ```
 *
 * @param component
 * @returns Promise<void>
 */
function componentLoaded(component) {
  return promiseMap.get(component);
}



//# sourceMappingURL=loadable-cc14d728.js.map

/***/ }),

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/observers-56740e99.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/observers-56740e99.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ createObserver)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
/**
 * This utility ensures observers are created only for browser contexts.
 *
 * @param type - the type of observer to create
 * @param callback - the observer callback
 * @param options - the observer options
 */
function createObserver(type, callback, options) {
  const Observer = getObserver(type);
  return new Observer(callback, options);
}
function getObserver(type) {
  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948
  class ExtendedMutationObserver extends window.MutationObserver {
    constructor(callback) {
      super(callback);
      this.observedEntry = [];
      this.callback = callback;
    }
    observe(target, options) {
      this.observedEntry.push({ target, options });
      return super.observe(target, options);
    }
    unobserve(target) {
      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);
      this.observedEntry = [];
      this.callback(super.takeRecords(), this);
      this.disconnect();
      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));
    }
  }
  return (function () {
    return (type === "intersection"
      ? window.IntersectionObserver
      : type === "mutation"
        ? ExtendedMutationObserver
        : window.ResizeObserver);
  })();
}



//# sourceMappingURL=observers-56740e99.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,