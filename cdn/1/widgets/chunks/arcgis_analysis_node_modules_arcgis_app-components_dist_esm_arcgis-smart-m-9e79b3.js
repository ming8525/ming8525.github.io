"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-smart-m-9e79b3"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-smart-mapping-heatmap-slider.entry.js":
/*!**************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-smart-mapping-heatmap-slider.entry.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_smart_mapping_heatmap_slider: () => (/* binding */ ArcgisSmartMappingHeatmapSlider)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./raster-unique-value-0976ec7f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/raster-unique-value-0976ec7f.js");
/* harmony import */ var _loadModules_b4ac1247_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loadModules-b4ac1247.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-b4ac1247.js");
/* harmony import */ var _commonEnums_fcf13661_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commonEnums-fcf13661.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/commonEnums-fcf13661.js");
/* harmony import */ var _languageUtil_ef0e54b2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./languageUtil-ef0e54b2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-ef0e54b2.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/* harmony import */ var _locale_050b6db9_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./locale-050b6db9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-050b6db9.js");
/* harmony import */ var _index_05956cab_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./index-05956cab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-05956cab.js");
/* harmony import */ var _commonFunctions_b0830e9e_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commonFunctions-b0830e9e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/commonFunctions-b0830e9e.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */










const arcgisSmartMappingHeatmapSliderCss = ".slider-box{height:255px}.slider-box .esri-heatmap-slider__ramp{width:30px}.slider-box .esri-heatmap-slider .esri-slider .esri-slider__content{height:175px}.slider-box .esri-heatmap-slider{min-width:200px}";

const ArcgisSmartMappingHeatmapSlider = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.styleSheetStatus = "not-loaded";
    }
    // -------------------------------------------------------------------
    //
    //  Render Methods
    //
    // -------------------------------------------------------------------
    render() {
        const { config } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.s;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("link", { rel: "stylesheet", href: `${config.jsapiUrl}/themes/light/main.css`, onLoad: () => {
                this.styleSheetStatus = "loaded";
                (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.f)(this.hostElement);
            }, onError: () => {
                this.styleSheetStatus = "failed";
                (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.f)(this.hostElement);
            } }), this.styleSheetStatus === "loaded"
            ? this.renderHeatmapSlider()
            : this.styleSheetStatus === "not-loaded"
                ? this.renderHeatmapSliderLoading()
                : null));
    }
    renderHeatmapSlider() {
        const ok = this.prepareHeatmapSlider();
        if (ok || this.heatmapSlider) {
            return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "slider-box" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { ref: (node) => {
                    if (node) {
                        this.afterHeatmapSliderCreate(node);
                    }
                } })));
        }
        else {
            return this.renderHeatmapSliderLoading();
        }
    }
    renderHeatmapSliderLoading() {
        const { strings } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.s;
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "slider-box" }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-loader", { label: strings.loading })));
    }
    // -------------------------------------------------------------------
    //
    //  Private methods
    //
    // -------------------------------------------------------------------
    prepareHeatmapSlider() {
        var _a;
        const { layer, modules } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.s;
        const renderer = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.h)(layer);
        if (!this.heatmapSlider) {
            const colorStops = renderer.colorStops.map((stop) => new modules.HeatmapColorStop({
                color: new modules.esriColor(stop.color.toRgba()),
                ratio: stop.ratio
            }));
            const config = {
                stops: colorStops.splice(3, colorStops.length - 3)
            };
            this.heatmapSlider = new modules.HeatmapSlider(config);
            this.createHeatmapSliderChangeEvents();
        }
        else {
            const slider = this.heatmapSlider;
            if (((_a = slider.slider) === null || _a === void 0 ? void 0 : _a.state) === "dragging") {
                return true;
            }
            const colorStops = renderer.colorStops.map((stop) => new modules.HeatmapColorStop({
                color: new modules.esriColor(stop.color.toRgba()),
                ratio: stop.ratio
            }));
            const config = {
                stops: colorStops.splice(3, colorStops.length - 3)
            };
            this.heatmapSlider.set(config);
        }
        return (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.ac)(this.heatmapSlider);
    }
    afterHeatmapSliderCreate(node) {
        if (!this.heatmapSlider.container) {
            const divNode = document.createElement("div");
            node.append(divNode);
            this.heatmapSlider.container = divNode;
        }
    }
    createHeatmapSliderChangeEvents() {
        if (!this.heatmapSlider) {
            return;
        }
        this.heatmapSlider.on("thumb-change", () => {
            this.handleHeatmapSliderEvent();
        });
        this.heatmapSlider.on("thumb-drag", () => {
            this.handleHeatmapSliderEvent();
        });
    }
    handleHeatmapSliderEvent() {
        const { layer, modules } = _raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.s;
        const renderer = (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.h)(layer);
        const firstThumb = this.heatmapSlider.values[0];
        const secondThumb = this.heatmapSlider.values[1];
        if (firstThumb === secondThumb) {
            // don't allow handles at same spot; causes issues with slider on ramp change
            if (firstThumb + 0.001 <= 1) {
                this.heatmapSlider.viewModel.setValue(1, firstThumb + 0.001);
            }
            else {
                this.heatmapSlider.viewModel.setValue(0, secondThumb - 0.001);
            }
        }
        const deletedStops = renderer.colorStops
            .filter((_, idx) => idx < 3)
            .map((stop) => new modules.HeatmapColorStop({
            color: new modules.esriColor(stop.color.toRgba()),
            ratio: stop.ratio
        }));
        const firstRatio = deletedStops[deletedStops.length - 1].ratio;
        if (firstThumb < firstRatio) {
            this.heatmapSlider.viewModel.setValue(0, firstRatio);
        }
        const newStops = deletedStops.concat(this.heatmapSlider.stops.slice());
        renderer.colorStops = newStops;
        (0,_raster_unique_value_0976ec7f_js__WEBPACK_IMPORTED_MODULE_1__.ab)();
    }
    get hostElement() { return (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisSmartMappingHeatmapSlider.style = arcgisSmartMappingHeatmapSliderCss;



//# sourceMappingURL=arcgis-smart-mapping-heatmap-slider.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,