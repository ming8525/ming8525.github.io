"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-tunnel_-91d5c9"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-tunnel.entry.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-tunnel.entry.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_tunnel: () => (/* binding */ TunnelComponent)
/* harmony export */ });
/* harmony import */ var _index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-e3bf7da7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-e3bf7da7.js");
/* harmony import */ var _dom_4d367677_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-4d367677.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-4d367677.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v4.0.58
 */



const observerState = {
    elements: new Map()
};
function handleMutations(records) {
    const hasRemoval = records.find((record) => { var _a; return ((_a = record.removedNodes) === null || _a === void 0 ? void 0 : _a.length) && record.type === "childList"; });
    if (hasRemoval) {
        for (const element of observerState.elements.keys()) {
            if (!element.parentNode || !(0,_dom_4d367677_js__WEBPACK_IMPORTED_MODULE_1__.i)(element)) {
                const callbacks = observerState.elements.get(element);
                callbacks === null || callbacks === void 0 ? void 0 : callbacks.forEach(callback => callback());
                observerState.elements.delete(element);
            }
        }
    }
}
function observeElementRemoval(element, callback) {
    var _a;
    if (!element || !callback) {
        return;
    }
    if (!observerState.observer) {
        observerState.observer = new MutationObserver(handleMutations);
        observerState.observer.observe(document.querySelector("body"), { childList: true, subtree: true });
    }
    observerState.elements.set(element, [...((_a = observerState.elements.get(element)) !== null && _a !== void 0 ? _a : []), callback]);
    return observerState.observer;
}

const TunnelComponent = class {
    constructor(hostRef) {
        (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
        this.moved = false;
        this.cleanUp = () => {
            var _a;
            (_a = this.tunnel) === null || _a === void 0 ? void 0 : _a.remove();
        };
        this.reference = undefined;
        this.destination = document.body;
    }
    createTunnel() {
        this.tunnel = document.createElement("div");
        this.destination.append(this.tunnel);
        this.tunnel.appendChild(this.element);
        observeElementRemoval(this.reference, this.cleanUp);
    }
    componentDidLoad() {
        this.createTunnel();
    }
    disconnectedCallback() {
        this.moved ? this.tunnel.remove() : (this.moved = true);
    }
    render() {
        return ((0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.H, { ref: (el) => (this.element = el) }, (0,_index_e3bf7da7_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
    }
};



//# sourceMappingURL=arcgis-tunnel.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvYXJjZ2lzX2FuYWx5c2lzX25vZGVfbW9kdWxlc19hcmNnaXNfYXBwLWNvbXBvbmVudHNfZGlzdF9lc21fYXJjZ2lzLXR1bm5lbF8tOTFkNWM5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQzBFO0FBQ3BCOztBQUV0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxRQUFRLG9IQUFvSDtBQUM5SztBQUNBO0FBQ0Esd0NBQXdDLG1EQUFZO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsZ0NBQWdDO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRLHFEQUFnQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQUMsQ0FBQyxpREFBSSxJQUFJLGtDQUFrQyxFQUFFLHFEQUFDO0FBQy9EO0FBQ0E7O0FBRTRDOztBQUU1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2V4Yi1jbGllbnQvLi9leHRlbnNpb25zL3dpZGdldHMvYXJjZ2lzL2FuYWx5c2lzL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2FwcC1jb21wb25lbnRzL2Rpc3QvZXNtL2FyY2dpcy10dW5uZWwuZW50cnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogdjQuMC41OFxuICovXG5pbXBvcnQgeyByIGFzIHJlZ2lzdGVySW5zdGFuY2UsIGgsIEggYXMgSG9zdCB9IGZyb20gJy4vaW5kZXgtZTNiZjdkYTcuanMnO1xuaW1wb3J0IHsgaSBhcyBpc0luRG9jdW1lbnQgfSBmcm9tICcuL2RvbS00ZDM2NzY3Ny5qcyc7XG5cbmNvbnN0IG9ic2VydmVyU3RhdGUgPSB7XG4gICAgZWxlbWVudHM6IG5ldyBNYXAoKVxufTtcbmZ1bmN0aW9uIGhhbmRsZU11dGF0aW9ucyhyZWNvcmRzKSB7XG4gICAgY29uc3QgaGFzUmVtb3ZhbCA9IHJlY29yZHMuZmluZCgocmVjb3JkKSA9PiB7IHZhciBfYTsgcmV0dXJuICgoX2EgPSByZWNvcmQucmVtb3ZlZE5vZGVzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSAmJiByZWNvcmQudHlwZSA9PT0gXCJjaGlsZExpc3RcIjsgfSk7XG4gICAgaWYgKGhhc1JlbW92YWwpIHtcbiAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIG9ic2VydmVyU3RhdGUuZWxlbWVudHMua2V5cygpKSB7XG4gICAgICAgICAgICBpZiAoIWVsZW1lbnQucGFyZW50Tm9kZSB8fCAhaXNJbkRvY3VtZW50KGVsZW1lbnQpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FsbGJhY2tzID0gb2JzZXJ2ZXJTdGF0ZS5lbGVtZW50cy5nZXQoZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzID09PSBudWxsIHx8IGNhbGxiYWNrcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2FsbGJhY2tzLmZvckVhY2goY2FsbGJhY2sgPT4gY2FsbGJhY2soKSk7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXJTdGF0ZS5lbGVtZW50cy5kZWxldGUoZWxlbWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5mdW5jdGlvbiBvYnNlcnZlRWxlbWVudFJlbW92YWwoZWxlbWVudCwgY2FsbGJhY2spIHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKCFlbGVtZW50IHx8ICFjYWxsYmFjaykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghb2JzZXJ2ZXJTdGF0ZS5vYnNlcnZlcikge1xuICAgICAgICBvYnNlcnZlclN0YXRlLm9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoaGFuZGxlTXV0YXRpb25zKTtcbiAgICAgICAgb2JzZXJ2ZXJTdGF0ZS5vYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpLCB7IGNoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZSB9KTtcbiAgICB9XG4gICAgb2JzZXJ2ZXJTdGF0ZS5lbGVtZW50cy5zZXQoZWxlbWVudCwgWy4uLigoX2EgPSBvYnNlcnZlclN0YXRlLmVsZW1lbnRzLmdldChlbGVtZW50KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW10pLCBjYWxsYmFja10pO1xuICAgIHJldHVybiBvYnNlcnZlclN0YXRlLm9ic2VydmVyO1xufVxuXG5jb25zdCBUdW5uZWxDb21wb25lbnQgPSBjbGFzcyB7XG4gICAgY29uc3RydWN0b3IoaG9zdFJlZikge1xuICAgICAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xuICAgICAgICB0aGlzLm1vdmVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY2xlYW5VcCA9ICgpID0+IHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIChfYSA9IHRoaXMudHVubmVsKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmVtb3ZlKCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucmVmZXJlbmNlID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmRlc3RpbmF0aW9uID0gZG9jdW1lbnQuYm9keTtcbiAgICB9XG4gICAgY3JlYXRlVHVubmVsKCkge1xuICAgICAgICB0aGlzLnR1bm5lbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHRoaXMuZGVzdGluYXRpb24uYXBwZW5kKHRoaXMudHVubmVsKTtcbiAgICAgICAgdGhpcy50dW5uZWwuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTtcbiAgICAgICAgb2JzZXJ2ZUVsZW1lbnRSZW1vdmFsKHRoaXMucmVmZXJlbmNlLCB0aGlzLmNsZWFuVXApO1xuICAgIH1cbiAgICBjb21wb25lbnREaWRMb2FkKCkge1xuICAgICAgICB0aGlzLmNyZWF0ZVR1bm5lbCgpO1xuICAgIH1cbiAgICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgICAgdGhpcy5tb3ZlZCA/IHRoaXMudHVubmVsLnJlbW92ZSgpIDogKHRoaXMubW92ZWQgPSB0cnVlKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKGgoSG9zdCwgeyByZWY6IChlbCkgPT4gKHRoaXMuZWxlbWVudCA9IGVsKSB9LCBoKFwic2xvdFwiLCBudWxsKSkpO1xuICAgIH1cbn07XG5cbmV4cG9ydCB7IFR1bm5lbENvbXBvbmVudCBhcyBhcmNnaXNfdHVubmVsIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFyY2dpcy10dW5uZWwuZW50cnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9