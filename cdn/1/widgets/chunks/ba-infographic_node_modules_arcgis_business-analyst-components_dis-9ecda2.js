"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_ba-infographic_node_modules_arcgis_business-analyst-components_dis-9ecda2"],{

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search-2aa2705a.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search-2aa2705a.js ***!
  \**********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ ArcgisBaSearch),
/* harmony export */   e: () => (/* binding */ e$B),
/* harmony export */   s: () => (/* binding */ s$v)
/* harmony export */ });
/* harmony import */ var _index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-4e647411.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/index-4e647411.js");
/* harmony import */ var _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GEClient-1a83a657.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/GEClient-1a83a657.js");
/* harmony import */ var _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ElementIds-f7d257e8.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/ElementIds-f7d257e8.js");
/* harmony import */ var _focus_trap_esm_fa2a8f7f_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./focus-trap.esm-fa2a8f7f.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/focus-trap.esm-fa2a8f7f.js");





/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let e$C;function has(a){return "function"==typeof e$C[a]?e$C[a]=e$C[a](globalThis):e$C[a]}e$C=globalThis.dojoConfig?.has||globalThis.esriConfig?.has?{...globalThis.dojoConfig?.has,...globalThis.esriConfig?.has}:{},has.add=(a,o,d,r)=>((r||void 0===e$C[a])&&(e$C[a]=o),d&&has(a)),has.cache=e$C,has.add("esri-deprecation-warnings",!0),(()=>{has.add("host-webworker",void 0!==globalThis.WorkerGlobalScope&&self instanceof globalThis.WorkerGlobalScope);const e="undefined"!=typeof window&&"undefined"!=typeof location&&"undefined"!=typeof document&&window.location===location&&window.document===document;if(has.add("host-browser",e),has.add("host-node","object"==typeof globalThis.process&&globalThis.process.versions?.node&&globalThis.process.versions.v8),has.add("dom",e),has("host-browser")){const e=navigator,a=e.userAgent,o=e.appVersion,d=parseFloat(o);if(has.add("wp",parseFloat(a.split("Windows Phone")[1])||void 0),has.add("msapp",parseFloat(a.split("MSAppHost/")[1])||void 0),has.add("khtml",o.includes("Konqueror")?d:void 0),has.add("edge",parseFloat(a.split("Edge/")[1])||void 0),has.add("opr",parseFloat(a.split("OPR/")[1])||void 0),has.add("webkit",!has("wp")&&!has("edge")&&parseFloat(a.split("WebKit/")[1])||void 0),has.add("chrome",!has("edge")&&!has("opr")&&parseFloat(a.split("Chrome/")[1])||void 0),has.add("android",!has("wp")&&parseFloat(a.split("Android ")[1])||void 0),has.add("safari",!o.includes("Safari")||has("wp")||has("chrome")||has("android")||has("edge")||has("opr")?void 0:parseFloat(o.split("Version/")[1])),has.add("mac",o.includes("Macintosh")),!has("wp")&&a.match(/(iPhone|iPod|iPad)/)){const e=RegExp.$1.replace(/P/,"p"),o=a.match(/OS ([\d_]+)/)?RegExp.$1:"1",d=parseFloat(o.replace(/_/,".").replace(/_/g,""));has.add(e,d),has.add("ios",d);}has("webkit")||(!a.includes("Gecko")||has("wp")||has("khtml")||has("edge")||has.add("mozilla",d),has("mozilla")&&has.add("ff",parseFloat(a.split("Firefox/")[1]||a.split("Minefield/")[1])||void 0));}})(),(()=>{if(globalThis.navigator){const e=navigator.userAgent,a=/Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini|IEMobile/i.test(e),o=/iPhone/i.test(e);a&&has.add("esri-mobile",a),o&&has.add("esri-iPhone",o),has.add("esri-geolocation",!!navigator.geolocation);}has.add("esri-wasm","WebAssembly"in globalThis),has.add("esri-shared-array-buffer",(()=>{const e="SharedArrayBuffer"in globalThis,a=!1===globalThis.crossOriginIsolated;return e&&!a})),has.add("wasm-simd",(()=>{const e=[0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11];return WebAssembly.validate(new Uint8Array(e))})),has.add("esri-atomics","Atomics"in globalThis),has.add("esri-workers","Worker"in globalThis),has.add("web-feat:cache","caches"in globalThis),has.add("esri-workers-arraybuffer-transfer",!has("safari")||Number(has("safari"))>=12),has.add("featurelayer-simplify-thresholds",[.5,.5,.5,.5]),has.add("featurelayer-simplify-payload-size-factors",[1,1,4]),has.add("featurelayer-snapshot-enabled",!0),has.add("featurelayer-snapshot-point-min-threshold",8e4),has.add("featurelayer-snapshot-point-max-threshold",4e5),has.add("featurelayer-snapshot-point-coverage",.1),has.add("featurelayer-advanced-symbols",!1),has.add("featurelayer-pbf",!0),has.add("featurelayer-pbf-statistics",!1),has.add("feature-layers-workers",!0),has.add("feature-polyline-generalization-factor",1),has.add("mapview-transitions-duration",200),has.add("mapview-srswitch-adjust-rotation-scale-threshold",24e6),has.add("mapserver-pbf-version-support",10.81),has.add("mapservice-popup-identify-max-tolerance",20),has.add("heatmap-allow-raster-fallback",!0),has.add("heatmap-force-raster",!1),has("host-webworker")||has("host-browser")&&(has.add("esri-csp-restrictions",(()=>{try{new Function;}catch{return !0}return !1})),has.add("esri-image-decode",(()=>{if("decode"in new Image){const e=new Image;return e.src='data:image/svg+xml;charset=UTF-8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg"></svg>',void e.decode().then((()=>{has.add("esri-image-decode",!0,!0,!0);})).catch((()=>{has.add("esri-image-decode",!1,!0,!0);}))}return !1})),has.add("esri-url-encodes-apostrophe",(()=>{const e=window.document.createElement("a");return e.href="?'",e.href.includes("?%27")})));})();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function r$r(n){return null!=n}function t$x(n){return null==n}function e$B(n){return n}function l$m(n,t){return r$r(n)?n:"function"==typeof t?t():t}function a$t(n){return r$r(n)&&n.destroy(),null}function p$m(n){return r$r(n)&&n.remove(),null}function v$c(n){return null}function N$3(n){return n}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function i$w(n,e,r){if(t$x(n)&&t$x(e))return !0;if(t$x(n)||t$x(e)||n.length!==e.length)return !1;if(r){for(let t=0;t<n.length;t++)if(!r(n[t],e[t]))return !1}else for(let t=0;t<n.length;t++)if(n[t]!==e[t])return !1;return !0}class x$a{constructor(){this.last=0;}}const y$f=new x$a;function b$a(t,n,e,r){r=r||y$f;const o=Math.max(0,r.last-10);for(let f=o;f<e;++f)if(t[f]===n)return r.last=f,f;const l=Math.min(o,e);for(let f=0;f<l;++f)if(t[f]===n)return r.last=f,f;return -1}const A$6=new Set;function j$c(t,n,e=t.length,r=n.length,o,l){if(0===r||0===e)return e;A$6.clear();for(let u=0;u<r;++u)A$6.add(n[u]);o=o||y$f;const f=Math.max(0,o.last-10);for(let u=f;u<e;++u)if(A$6.has(t[u])&&(l&&l.push(t[u]),A$6.delete(t[u]),t[u]=t[e-1],--e,--u,0===A$6.size||0===e))return A$6.clear(),e;for(let u=0;u<f;++u)if(A$6.has(t[u])&&(l&&l.push(t[u]),A$6.delete(t[u]),t[u]=t[e-1],--e,--u,0===A$6.size||0===e))return A$6.clear(),e;return A$6.clear(),e}function F$3(t,n){const e=t.indexOf(n);return -1!==e?(t.splice(e,1),n):null}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function n$r(r){return r&&r.constructor&&"Int8Array"===r.constructor.name}function o$w(r){return r&&r.constructor&&"Uint8Array"===r.constructor.name}function c$w(r){return r&&r.constructor&&"Uint8ClampedArray"===r.constructor.name}function u$r(r){return r&&r.constructor&&"Int16Array"===r.constructor.name}function e$A(r){return r&&r.constructor&&"Uint16Array"===r.constructor.name}function a$s(r){return r&&r.constructor&&"Int32Array"===r.constructor.name}function s$y(r){return r&&r.constructor&&"Uint32Array"===r.constructor.name}function f$q(r){return r&&r.constructor&&"Float32Array"===r.constructor.name}function i$v(r){return r&&r.constructor&&"Float64Array"===r.constructor.name}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function l$l(t,n){let e;if(n)for(e in t)t.hasOwnProperty(e)&&(void 0===t[e]?delete t[e]:t[e]instanceof Object&&l$l(t[e],!0));else for(e in t)t.hasOwnProperty(e)&&void 0===t[e]&&delete t[e];return t}function p$l(t){if(!t||"object"!=typeof t||"function"==typeof t)return t;const e=j$b(t);if(r$r(e))return e;if(m$l(t))return t.clone();if(b$9(t))return t.map(p$l);if(g$c(t))return t.clone();const r={};for(const n of Object.getOwnPropertyNames(t))r[n]=p$l(t[n]);return r}function m$l(t){return "function"==typeof t.clone}function b$9(t){return "function"==typeof t.map&&"function"==typeof t.forEach}function g$c(t){return "function"==typeof t.notifyChange&&"function"==typeof t.watch}function O$4(t){if("[object Object]"!==Object.prototype.toString.call(t))return !1;const n=Object.getPrototypeOf(t);return null===n||n===Object.prototype}function j$b(t){if(n$r(t)||o$w(t)||c$w(t)||u$r(t)||e$A(t)||a$s(t)||s$y(t)||f$q(t)||i$v(t))return t.slice();if(t instanceof Date)return new Date(t.getTime());if(t instanceof ArrayBuffer){return t.slice(0,t.byteLength)}if(t instanceof Map){const n=new Map;for(const[e,r]of t)n.set(e,p$l(r));return n}if(t instanceof Set){const n=new Set;for(const e of t)n.add(p$l(e));return n}return null}function h$n(t,n){return t===n||"number"==typeof t&&isNaN(t)&&"number"==typeof n&&isNaN(n)||"function"==typeof(t||{}).getTime&&"function"==typeof(n||{}).getTime&&t.getTime()===n.getTime()||!1}function w$8(n,e){return n===e||(null==n||"string"==typeof n?n===e:"number"==typeof n?n===e||"number"==typeof e&&isNaN(n)&&isNaN(e):n instanceof Date?e instanceof Date&&n.getTime()===e.getTime():Array.isArray(n)?Array.isArray(e)&&i$w(n,e):n instanceof Set?e instanceof Set&&T$3(n,e):n instanceof Map?e instanceof Map&&d$m(n,e):!!O$4(n)&&(O$4(e)&&N$2(n,e)))}function N$2(t,n){if(null===t||null===n)return !1;const e=Object.keys(t);if(null===n||Object.keys(n).length!==e.length)return !1;for(const r of e)if(t[r]!==n[r]||!Object.prototype.hasOwnProperty.call(n,r))return !1;return !0}function T$3(t,n){if(t.size!==n.size)return !1;for(const e of t)if(!n.has(e))return !1;return !0}function d$m(t,n){if(t.size!==n.size)return !1;for(const[e,r]of t){const t=n.get(e);if(t!==r||void 0===t&&!n.has(e))return !1}return !0}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function n$q(r,n,t=!1){return i$u(r,n,t)}function t$w(r,n){if(null!=n)return n[r]||e$z(r.split("."),!1,n)}function o$v(r,n,t){const o=r.split("."),i=o.pop(),u=e$z(o,!0,t);u&&i&&(u[i]=n);}function e$z(r,n,t){let o=t;for(const e of r){if(null==o)return;if(!(e in o)){if(!n)return;o[e]={};}o=o[e];}return o}function i$u(n,t,o){return t?Object.keys(t).reduce(((n,e)=>{let u=n[e],c=t[e];return u===c?n:void 0===u?(n[e]=p$l(c),n):(Array.isArray(c)||Array.isArray(n)?(u=u?Array.isArray(u)?n[e]=u.concat():n[e]=[u]:n[e]=[],c&&(Array.isArray(c)||(c=[c]),o?c.forEach((r=>{u.includes(r)||u.push(r);})):n[e]=c.concat())):c&&"object"==typeof c?n[e]=i$u(u,c,o):n.hasOwnProperty(e)&&!t.hasOwnProperty(e)||(n[e]=c),n)}),n||{}):n}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const s$x={analysisTheme:{accentColor:[255,128,0],textColor:"white"},apiKey:void 0,applicationUrl:globalThis.location?.href,assetsPath:"",fontsUrl:"https://static.arcgis.com/fonts",geometryServiceUrl:"https://utility.arcgisonline.com/arcgis/rest/services/Geometry/GeometryServer",geoRSSServiceUrl:"https://utility.arcgis.com/sharing/rss",kmlServiceUrl:"https://utility.arcgis.com/sharing/kml",userPrivilegesApplied:!1,portalUrl:"https://www.arcgis.com",routeServiceUrl:"https://route-api.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World",workers:{loaderConfig:{has:{},paths:{},map:{},packages:[]}},request:{crossOriginNoCorsDomains:null,httpsDomains:["arcgis.com","arcgisonline.com","esrikr.com","premiumservices.blackbridge.com","esripremium.accuweather.com","gbm.digitalglobe.com","firstlook.digitalglobe.com","msi.digitalglobe.com"],interceptors:[],maxUrlLength:2e3,priority:"high",proxyRules:[],proxyUrl:null,timeout:6e4,trustedServers:[],useIdentity:!0},log:{interceptors:[],level:null}};if(globalThis.esriConfig&&(n$q(s$x,globalThis.esriConfig,!0),delete s$x.has),!s$x.assetsPath){{const e="4.26.5";s$x.assetsPath=`https://js.arcgis.com/${e.slice(0,-2)}/@arcgis/core/assets`;}s$x.defaultAssetsPath=s$x.assetsPath;}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const e$y=/\{([^\}]+)\}/g;function n$p(t){return t??""}function r$q(r,o){return r.replace(e$y,"object"==typeof o?(e,r)=>n$p(t$w(r,o)):(t,e)=>n$p(o(e)))}function c$v(t){let e=0;for(let n=0;n<t.length;n++)e=(e<<5)-e+t.charCodeAt(n),e|=0;return e}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const o$u={info:0,warn:1,error:2,none:3};class s$w{constructor(e){this.level=null,this._module="",this._parent=null,this.writer=null,this._loggedMessages={error:new Map,warn:new Map,info:new Map},null!=e.level&&(this.level=e.level),null!=e.writer&&(this.writer=e.writer),this._module=e.module,s$w._loggers[this.module]=this;const t=this.module.lastIndexOf(".");-1!==t&&(this._parent=s$w.getLogger(this.module.slice(0,t)));}get module(){return this._module}get parent(){return this._parent}error(...e){this._log("error","always",...e);}warn(...e){this._log("warn","always",...e);}info(...e){this._log("info","always",...e);}errorOnce(...e){this._log("error","once",...e);}warnOnce(...e){this._log("warn","once",...e);}infoOnce(...e){this._log("info","once",...e);}errorOncePerTick(...e){this._log("error","oncePerTick",...e);}warnOncePerTick(...e){this._log("warn","oncePerTick",...e);}infoOncePerTick(...e){this._log("info","oncePerTick",...e);}get test(){const e=this;return {loggedMessages:e._loggedMessages,clearLoggedWarnings:()=>e._loggedMessages.warn.clear()}}static get testSingleton(){return {resetLoggers(e={}){const t=s$w._loggers;return s$w._loggers=e,t},set throttlingDisabled(e){s$w._throttlingDisabled=e;}}}static getLogger(e){let t=s$w._loggers[e];return t||(t=new s$w({module:e})),t}_log(t,r,...o){if(!this._matchLevel(t))return;if("always"!==r&&!s$w._throttlingDisabled){const e=this._argsToKey(o),n=this._loggedMessages[t].get(e);if("once"===r&&null!=n||"oncePerTick"===r&&n&&n>=s$w._tickCounter)return;this._loggedMessages[t].set(e,s$w._tickCounter),s$w._scheduleTickCounterIncrement();}for(const s of s$x.log.interceptors)if(s(t,this.module,...o))return;this._inheritedWriter()(t,this.module,...o);}_parentWithMember(e,r){let o=this;for(;r$r(o);){const r=o[e];if(r$r(r))return r;o=o.parent;}return r}_inheritedWriter(){return this._parentWithMember("writer",this._consoleWriter)}_consoleWriter(e,t,...r){console[e](`[${t}]`,...r);}_matchLevel(t){const r=s$x.log.level?s$x.log.level:"warn";return o$u[this._parentWithMember("level",r)]<=o$u[t]}_argsToKey(...e){const t=(e,t)=>"object"!=typeof t||Array.isArray(t)?t:"[Object]";return c$v(JSON.stringify(e,t))}static _scheduleTickCounterIncrement(){s$w._tickCounterScheduled||(s$w._tickCounterScheduled=!0,Promise.resolve().then((()=>{s$w._tickCounter++,s$w._tickCounterScheduled=!1;})));}}s$w._loggers={},s$w._tickCounter=0,s$w._tickCounterScheduled=!1,s$w._throttlingDisabled=!1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$x(e,r){return e.replace(/\$\{([^\s\:\}]*)(?:\:([^\s\:\}]+))?\}/g,((e,s)=>{if(""===s)return "$";const n=t$w(s,r),i=n??"";if(void 0===i)throw new Error(`could not find key "${s}" in template`);return i.toString()}))}class r$p{constructor(t,s,n){this.name=t,this.details=n,this instanceof r$p&&(this.message=(s&&e$x(s,n))??"");}toString(){return "["+this.name+"]: "+this.message}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class s$v extends r$p{constructor(e,t,r){if(super(e,t,r),!(this instanceof s$v))return new s$v(e,t,r)}toJSON(){if(null!=this.details)try{return {name:this.name,message:this.message,details:JSON.parse(JSON.stringify(this.details,((t,r)=>{if(r&&"object"==typeof r&&"function"==typeof r.toJSON)return r;try{return p$l(r)}catch(s){return "[object]"}})))}}catch(r){throw s$w.getLogger("esri.core.Error").error(r),r}return {name:this.name,message:this.message,details:this.details}}static fromJSON(e){return new s$v(e.name,e.message,e.details)}}s$v.prototype.type="error";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function t$v(e){return /\/(sharing|usrsvcs)\/(appservices|servers)\//i.test(e)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const u$q=s$w.getLogger("esri.core.urlUtils"),l$k=s$x.request,c$u="esri/config: esriConfig.request.proxyUrl is not set.",f$p=/^\s*[a-z][a-z0-9-+.]*:(?![0-9])/i,a$r=/^\s*http:/i,p$k=/^\s*https:/i,h$m=/^\s*file:/i,d$l=/:\d+$/,m$k=/^https?:\/\/[^/]+\.arcgis.com\/sharing(\/|$)/i,g$b=new RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$"),y$e=new RegExp("^((([^\\[:]+):)?([^@]+)@)?(\\[([^\\]]+)\\]|([^\\[:]*))(:([0-9]+))?$");class $$5{constructor(t=""){this.uri=t,this.scheme=null,this.authority=null,this.path=null,this.query=null,this.fragment=null,this.user=null,this.password=null,this.host=null,this.port=null;let n=N$3(this.uri.match(g$b));this.scheme=n[2]||(n[1]?"":null),this.authority=n[4]||(n[3]?"":null),this.path=n[5],this.query=n[7]||(n[6]?"":null),this.fragment=n[9]||(n[8]?"":null),null!=this.authority&&(n=N$3(this.authority.match(y$e)),this.user=n[3]||null,this.password=n[4]||null,this.host=n[6]||n[7],this.port=n[9]||null);}toString(){return this.uri}}const x$9={},w$7=new $$5(s$x.applicationUrl);let O$3=w$7;const U$4=R$4();let b$8=U$4;const C$5=()=>O$3;function R$4(){const t=N$3(O$3.path),n=t.substring(0,t.lastIndexOf(t.split("/")[t.split("/").length-1]));return `${`${O$3.scheme}://${O$3.host}${null!=O$3.port?`:${O$3.port}`:""}`}${n}`}function L$3(t){if(!t)return null;const n={path:null,query:null},e=new $$5(t),r=t.indexOf("?");return null===e.query?n.path=t:(n.path=t.substring(0,r),n.query=v$b(e.query)),e.fragment&&(n.hash=e.fragment,null===e.query&&(n.path=n.path.substring(0,n.path.length-(e.fragment.length+1)))),n}function v$b(t){const n=t.split("&"),e={};for(const r of n){if(!r)continue;const t=r.indexOf("=");let n,o;t<0?(n=decodeURIComponent(r),o=""):(n=decodeURIComponent(r.slice(0,t)),o=decodeURIComponent(r.slice(t+1)));let i=e[n];"string"==typeof i&&(i=e[n]=[i]),Array.isArray(i)?i.push(o):e[n]=o;}return e}function I$4(t){return t&&"object"==typeof t&&"toJSON"in t&&"function"==typeof t.toJSON}function A$5(t,n){return t?n&&"function"==typeof n?Object.keys(t).map((e=>encodeURIComponent(e)+"="+encodeURIComponent(n(e,t[e])))).join("&"):Object.keys(t).map((e=>{const r=t[e];if(null==r)return "";const o=encodeURIComponent(e)+"=",i=n&&n[e];return i?o+encodeURIComponent(i(r)):Array.isArray(r)?r.map((t=>I$4(t)?o+encodeURIComponent(JSON.stringify(t)):o+encodeURIComponent(t))).join("&"):I$4(r)?o+encodeURIComponent(JSON.stringify(r)):o+encodeURIComponent(r)})).filter((t=>t)).join("&"):""}function S$5(t=!1){let e,r=l$k.proxyUrl;if("string"==typeof t){e=mt(t);const n=J$1(t);n&&(r=n.proxyUrl);}else e=!!t;if(!r)throw u$q.warn(c$u),new s$v("urlutils:proxy-not-set",c$u);e&&Ot()&&(r=xt(r));return L$3(r)}const P$2={path:"",query:""};function k$8(t){const n=t.indexOf("?");return -1!==n?(P$2.path=t.slice(0,n),P$2.query=t.slice(n+1)):(P$2.path=t,P$2.query=null),P$2}function E$4(t){return t=(t=Ut(t=Rt(t=k$8(t).path),!0)).toLowerCase()}function H$1(t){const n={proxyUrl:t.proxyUrl,urlPrefix:E$4(t.urlPrefix)},e=l$k.proxyRules,r=n.urlPrefix;let o=e.length;for(let i=0;i<e.length;i++){const t=e[i].urlPrefix;if(0===r.indexOf(t)){if(r.length===t.length)return -1;o=i;break}0===t.indexOf(r)&&(o=i+1);}return e.splice(o,0,n),o}function J$1(t){const n=l$k.proxyRules,e=E$4(t);for(let r=0;r<n.length;r++)if(0===e.indexOf(n[r].urlPrefix))return n[r]}function D$8(t){const n=n=>null==n||n instanceof RegExp&&n.test(t)||"string"==typeof n&&t.startsWith(n),e=l$k.interceptors;if(e)for(const r of e)if(Array.isArray(r.urls)){if(r.urls.some(n))return r}else if(n(r.urls))return r;return null}function M$6(t,n,e=!1){if(!t||!n)return !1;const r=St(t),o=St(n);return !(!e&&r.scheme!==o.scheme)&&(null!=r.host&&null!=o.host&&(r.host.toLowerCase()===o.host.toLowerCase()&&r.port===o.port))}function Q$2(t){if("string"==typeof t){if(!Y$1(t))return !0;t=St(t);}if(M$6(t,O$3))return !0;const n=l$k.trustedServers||[];for(let e=0;e<n.length;e++){const r=_$b(n[e]);for(let n=0;n<r.length;n++)if(M$6(t,r[n]))return !0}return !1}function _$b(t){return x$9[t]||(dt(t)||ht(t)?x$9[t]=[new $$5(F$2(t))]:x$9[t]=[new $$5(`http://${t}`),new $$5(`https://${t}`)]),x$9[t]}function F$2(t,n=b$8,e){return ht(t)?e&&e.preserveProtocolRelative?t:"http"===O$3.scheme&&O$3.authority===X$2(t).slice(2)?`http:${t}`:`https:${t}`:dt(t)?t:N$3(V$3("/"===t[0]?bt(n):n,t))}function K$1(t){return t=It(t=vt(t=Lt(t=F$2(t=t.trim()))))}function V$3(...t){const n=t.filter(r$r);if(!n||!n.length)return;const e=[];if(Y$1(n[0])){const t=n[0],r=t.indexOf("//");-1!==r&&(e.push(t.slice(0,r+1)),yt(n[0])&&(e[0]+="/"),n[0]=t.slice(r+2));}else "/"===n[0][0]&&e.push("");const r=n.reduce(((t,n)=>n?t.concat(n.split("/")):t),[]);for(let o=0;o<r.length;o++){const t=r[o];".."===t&&e.length>0&&".."!==e[e.length-1]?e.pop():(!t&&o===r.length-1||t&&("."!==t||0===e.length))&&e.push(t);}return e.join("/")}function X$2(t,n=!1){if(null==t||Z$1(t)||tt(t))return null;let e=t.indexOf("://");if(-1===e&&ht(t))e=2;else {if(-1===e)return null;e+=3;}const r=t.indexOf("/",e);return -1!==r&&(t=t.slice(0,r)),n&&(t=Ut(t,!0)),t}function Y$1(t){return ht(t)||dt(t)}function Z$1(t){return null!=t&&"blob:"===t.slice(0,5)}function tt(t){return null!=t&&"data:"===t.slice(0,5)}function et(t){return btoa(String.fromCharCode.apply(null,t)).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function ht(t){return null!=t&&"/"===t[0]&&"/"===t[1]}function dt(t){return null!=t&&f$p.test(t)}function mt(t){return null!=t&&p$k.test(t)||"https"===O$3.scheme&&ht(t)}function gt(t){return null!=t&&a$r.test(t)||"http"===O$3.scheme&&ht(t)}function yt(t){return null!=t&&h$m.test(t)}function xt(t){return ht(t)?`https:${t}`:t.replace(a$r,"https:")}function wt(){return "http"===O$3.scheme}function Ot(){return "https"===O$3.scheme}function Ut(t,n=!1){return ht(t)?t.slice(2):(t=t.replace(f$p,""),n&&t.length>1&&"/"===t[0]&&"/"===t[1]&&(t=t.slice(2)),t)}function bt(t){const n=t.indexOf("//"),e=t.indexOf("/",n+2);return -1===e?t:t.slice(0,e)}function Rt(t){return t&&"/"===t[t.length-1]?t:`${t}/`}function Lt(t){if(/^https?:\/\//i.test(t)){const n=k$8(t);t=(t=n.path.replace(/\/{2,}/g,"/")).replace("/","//"),n.query&&(t+=`?${n.query}`);}return t}function vt(t){return t.replace(/^(https?:\/\/)(arcgis\.com)/i,"$1www.$2")}function It(t){const n=l$k.httpsDomains;if(!gt(t))return t;const e=t.indexOf("/",7);let r;if(r=-1===e?t:t.slice(0,e),r=r.toLowerCase().slice(7),d$l.test(r)){if(!r.endsWith(":80"))return t;r=r.slice(0,-3),t=t.replace(":80","");}return wt()&&r===O$3.authority&&!m$k.test(t)||(Ot()&&r===O$3.authority||n&&n.some((t=>r===t||r.endsWith(`.${t}`)))||Ot()&&!J$1(t))&&(t=xt(t)),t}function St(t){return "string"==typeof t?new $$5(F$2(t)):(t.scheme||(t.scheme=O$3.scheme),t)}function kt(t,n,e){const r=L$3(t),o=r.query||{};return o[n]=String(e),`${r.path}?${A$5(o)}`}function Et(t,n){const e=L$3(t),r=e.query||{};for(const i in n)r[i]=n[i];const o=A$5(r);return o?`${e.path}?${o}`:e.path}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let r$o;function n$o(t){r$o=t;}has("host-webworker");

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$w(e){return {setTimeout:(t,o)=>{const r=e.setTimeout(t,o);return {remove:()=>e.clearTimeout(r)}}}}const t$u=e$w(globalThis);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$v(e){return e&&("function"==typeof e.on||"function"==typeof e.addEventListener)}function r$n(r,t,n){if(!e$v(r))throw new TypeError("target is not a Evented or EventTarget object");if("on"in r)return r.on(t,n);if(Array.isArray(t)){const e=t.slice();for(const t of e)r.addEventListener(t,n);return {remove(){for(const t of e)r.removeEventListener(t,n);}}}return r.addEventListener(t,n),{remove(){r.removeEventListener(t,n);}}}function t$t(t,n,o){if(!e$v(t))throw new TypeError("target is not a Evented or EventTarget object");if("once"in t)return t.once(n,o);const i=r$n(t,n,(e=>{i.remove(),o.call(t,e);}));return {remove(){i.remove();}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function a$q(t="Aborted"){return new s$v("AbortError",t)}function h$l(t){return r$r(t)?"aborted"in t?t:t.signal:t}function p$j(t){const e=h$l(t);return r$r(e)&&e.aborted}function b$7(t){if(!j$a(t))throw t}function v$a(t,e){const r=h$l(t);if(!t$x(r)){if(!r.aborted)return t$t(r,"abort",(()=>e()));e();}}function j$a(t){return "AbortError"===t?.name}function A$4(){let t=null;const e=new Promise(((e,r)=>{t={promise:void 0,resolve:e,reject:r};}));return t.promise=e,t}async function E$3(t){if(!t)return;if("function"!=typeof t.forEach){const e=Object.keys(t),r=e.map((e=>t[e])),n=await E$3(r),o={};return e.map(((t,e)=>o[t]=n[e])),o}const e=t;return new Promise((t=>{const r=[];let n=e.length;0===n&&t(r),e.forEach((e=>{const o={promise:e||Promise.resolve(e)};r.push(o),o.promise.then((t=>{o.value=t;})).catch((t=>{o.error=t;})).then((()=>{--n,0===n&&t(r);}));}));}))}function U$3(t,e,r){const n=new AbortController;return v$a(r,(()=>n.abort())),new Promise(((r,o)=>{let i=setTimeout((()=>{i=0,r(e);}),t);v$a(n,(()=>{i&&(clearTimeout(i),o(a$q()));}));}))}function C$4(t){return t&&"function"==typeof t.then}function $$4(t){return C$4(t)?t:Promise.resolve(t)}function x$8(t,e=-1){let r,n,o,i,s=null;const c=(...l)=>{if(r){n=l,i&&i.reject(a$q()),i=A$4();const t=N$3(i.promise);if(s){const t=s;s=null,t.abort();}return t}if(o=i||A$4(),i=null,e>0){const n=new AbortController;r=$$4(t(...l,n.signal));const o=r;U$3(e).then((()=>{r===o&&(i?n.abort():s=n);}));}else r=1,r=$$4(t(...l));const m=()=>{const t=n;n=o=r=s=null,null!=t&&c(...t);},f=r,h=o;return f.then(m,m),f.then(h.resolve,h.reject),N$3(h.promise)};return c}function D$7(){let e,r;const n=new Promise(((t,n)=>{e=t,r=n;})),o=t=>{e(t);};return o.resolve=t=>e(t),o.reject=t=>r(t),o.timeout=(e,r)=>t$u.setTimeout((()=>o.reject(r)),e),o.promise=n,o}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const t$s=["elevation3d.arcgis.com","js.arcgis.com","jsdev.arcgis.com","jsqa.arcgis.com","static.arcgis.com"];function r$m(c){const r=X$2(c,!0);return !!r&&(r.endsWith(".arcgis.com")&&!t$s.includes(r)&&!c.endsWith("/sharing/rest/generateToken"))}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function c$t(r,t,n=!1,s){return new Promise(((i,c)=>{if(p$j(s))return void c(a$p());let m=()=>{f(),c(new Error(`Unable to load ${t}`));},u=()=>{const e=r;f(),i(e);},d=()=>{if(!r)return;const e=r;f(),e.src="",c(a$p());};const f=()=>{has("esri-image-decode")||(r.removeEventListener("error",m),r.removeEventListener("load",u)),m=null,u=null,r=null,r$r(s)&&s.removeEventListener("abort",d),d=null,n&&URL.revokeObjectURL(t);};r$r(s)&&s.addEventListener("abort",d),has("esri-image-decode")?r.decode().then(u,m):(r.addEventListener("error",m),r.addEventListener("load",u));}))}function a$p(){try{return new DOMException("Aborted","AbortError")}catch{const r=new Error;return r.name="AbortError",r}}function m$j(e){s$x.request.crossOriginNoCorsDomains||(s$x.request.crossOriginNoCorsDomains={});const o=s$x.request.crossOriginNoCorsDomains;for(let r of e)r=r.toLowerCase(),/^https?:\/\//.test(r)?o[X$2(r)??""]=0:(o[X$2("http://"+r)??""]=0,o[X$2("https://"+r)??""]=0);}function u$p(e){const o=s$x.request.crossOriginNoCorsDomains;if(o){let r=X$2(e);if(r)return r=r.toLowerCase(),!M$6(r,C$5())&&o[r]<Date.now()-36e5}return !1}async function d$k(e){const o=s$x.request.crossOriginNoCorsDomains,n=X$2(e);o&&n&&(o[n.toLowerCase()]=Date.now());const s=L$3(e);e=s.path,"json"===s.query?.f&&(e+="?f=json");try{await fetch(e,{mode:"no-cors",credentials:"include"});}catch{}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
async function U$2(e,t){const r=tt(e),s=Z$1(e);s||r||(e=K$1(e));const n={url:e,requestOptions:{...e$B(t)}};let i=D$8(e);if(i){const e=await G$3(i,n);if(null!=e)return {data:e,getHeader:M$5,httpStatus:200,requestOptions:n.requestOptions,url:n.url};i.after||i.error||(i=null);}if(e=n.url,"image"===(t=n.requestOptions).responseType){if(has("host-webworker")||has("host-node"))throw N$1("request:invalid-parameters",new Error("responseType 'image' is not supported in Web Workers or Node environment"),n)}else if(r)throw N$1("request:invalid-parameters",new Error("Data URLs are not supported for responseType = "+t.responseType),n);if("head"===t.method){if(t.body)throw N$1("request:invalid-parameters",new Error("body parameter cannot be set when method is 'head'"),n);if(r||s)throw N$1("request:invalid-parameters",new Error("data and blob URLs are not supported for method 'head'"),n)}if(await B$3(),j$9)return j$9.execute(e,t);const l=new AbortController;v$a(t,(()=>l.abort()));const m={controller:l,credential:void 0,credentialToken:void 0,fetchOptions:void 0,hasToken:!1,interceptor:i,params:n,redoRequest:!1,useIdentity:P$1.useIdentity,useProxy:!1,useSSL:!1,withCredentials:!1},h=await Q$1(m);return i?.after?.(h),h}let j$9;const P$1=s$x.request,D$6="FormData"in globalThis,_$a=[499,498,403,401],F$1=["COM_0056","COM_0057","SB_0008"],I$3=[/\/arcgis\/tokens/i,/\/sharing(\/rest)?\/generatetoken/i,/\/rest\/info/i],M$5=()=>null,R$3=Symbol();function A$3(e){const t=X$2(e);t&&!U$2._corsServers.includes(t)&&U$2._corsServers.push(t);}function H(e){const t=X$2(e);return !t||t.endsWith(".arcgis.com")||U$2._corsServers.includes(t)||Q$2(t)}function N$1(e,t,o,a){let l="Error";const u={url:o.url,requestOptions:o.requestOptions,getHeader:M$5,ssl:!1};if(t instanceof s$v)return t.details?(t.details=p$l(t.details),t.details.url=o.url,t.details.requestOptions=o.requestOptions):t.details=u,t;if(t){const e=a&&(e=>a.headers.get(e)),r=a&&a.status,s=t.message;s&&(l=s),e&&(u.getHeader=e),u.httpStatus=(null!=t.httpCode?t.httpCode:t.code)||r||0,u.subCode=t.subcode,u.messageCode=t.messageCode,"string"==typeof t.details?u.messages=[t.details]:u.messages=t.details,u.raw=R$3 in t?t[R$3]:t;}return j$a(t)?a$q():new s$v(e,l,u)}async function B$3(){has("host-webworker")?j$9||(j$9=await __webpack_require__.e(/*! import() */ "extensions_widgets_ba-infographic_node_modules_arcgis_business-analyst-components_dist_stenci-1227ac").then(__webpack_require__.bind(__webpack_require__, /*! ./request-1d6af922.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/request-1d6af922.js"))):U$2._abortableFetch||(U$2._abortableFetch=globalThis.fetch.bind(globalThis));}async function $$3(){r$o||await Promise.resolve().then(function () { return IdentityManager; });}async function z$4(r){const s=r.params.url,o=r.params.requestOptions,a=r.controller.signal,n=o.body;let i=null,u=null;if(D$6&&"HTMLFormElement"in globalThis&&(n instanceof FormData?i=n:n instanceof HTMLFormElement&&(i=new FormData(n))),"string"==typeof n&&(u=n),r.fetchOptions={cache:o.cacheBust&&!U$2._abortableFetch.polyfill?"no-cache":"default",credentials:"same-origin",headers:o.headers||{},method:"head"===o.method?"HEAD":"GET",mode:"cors",priority:P$1.priority,redirect:"follow",signal:a},(i||u)&&(r.fetchOptions.body=i||u),"anonymous"===o.authMode&&(r.useIdentity=!1),r.hasToken=!!(/token=/i.test(s)||o.query?.token||i?.get("token")),!r.hasToken&&s$x.apiKey&&r$m(s)&&(o.query||(o.query={}),o.query.token=s$x.apiKey,r.hasToken=!0),r.useIdentity&&!r.hasToken&&!r.credentialToken&&!K(s)&&!p$j(a)){let e;"immediate"===o.authMode?(await $$3(),e=await r$o.getCredential(s,{signal:a}),r.credential=e):"no-prompt"===o.authMode?(await $$3(),e=await r$o.getCredential(s,{prompt:!1,signal:a}).catch((()=>{})),r.credential=e):r$o&&(e=r$o.findCredential(s)),e&&(r.credentialToken=e.token,r.useSSL=!!e.ssl);}}function K(e){return I$3.some((t=>t.test(e)))}async function W$1(e){let r=e.params.url;const s=e.params.requestOptions,o=e.fetchOptions??{},a=Z$1(r)||tt(r),n=s.responseType||"json",l=a?0:null!=s.timeout?s.timeout:P$1.timeout;let d=!1;if(!a){e.useSSL&&(r=xt(r)),s.cacheBust&&"default"===o.cache&&(r=kt(r,"request.preventCache",Date.now()));let a={...s.query};e.credentialToken&&(a.token=e.credentialToken);let n=A$5(a);has("esri-url-encodes-apostrophe")&&(n=n.replace(/'/g,"%27"));const i=r.length+1+n.length;let l;d="delete"===s.method||"post"===s.method||"put"===s.method||!!s.body||i>P$1.maxUrlLength;const u=s.useProxy||!!J$1(r);if(u){const e=S$5(r);l=e.path,!d&&l.length+1+i>P$1.maxUrlLength&&(d=!0),e.query&&(a={...e.query,...a});}if("HEAD"===o.method&&(d||u)){if(d){if(i>P$1.maxUrlLength)throw N$1("request:invalid-parameters",new Error("URL exceeds maximum length"),e.params);throw N$1("request:invalid-parameters",new Error("cannot use POST request when method is 'head'"),e.params)}if(u)throw N$1("request:invalid-parameters",new Error("cannot use proxy when method is 'head'"),e.params)}if(d?(o.method="delete"===s.method?"DELETE":"put"===s.method?"PUT":"POST",s.body?r=Et(r,a):(o.body=A$5(a),o.headers||(o.headers={}),o.headers["Content-Type"]="application/x-www-form-urlencoded")):r=Et(r,a),u&&(e.useProxy=!0,r=`${l}?${r}`),a.token&&D$6&&o.body instanceof FormData&&!t$v(r)&&o.body.set("token",a.token),s.hasOwnProperty("withCredentials"))e.withCredentials=s.withCredentials;else if(!M$6(r,C$5()))if(Q$2(r))e.withCredentials=!0;else if(r$o){const s=r$o.findServerInfo(r);s&&s.webTierAuth&&(e.withCredentials=!0);}e.withCredentials&&(o.credentials="include",u$p(r)&&await d$k(d?Et(r,a):r));}let p,v,C=0,L=!1;l>0&&(C=setTimeout((()=>{L=!0,e.controller.abort();}),l));try{if("native-request-init"===s.responseType)v=o,v.url=r;else if("image"!==s.responseType||"default"!==o.cache||"GET"!==o.method||d||J(s.headers)||!a&&!e.useProxy&&P$1.proxyUrl&&!H(r)){if(p=await U$2._abortableFetch(r,o),e.useProxy||A$3(r),"native"===s.responseType)v=p;else if("HEAD"!==o.method)if(p.ok){switch(n){case"array-buffer":v=await p.arrayBuffer();break;case"blob":case"image":v=await p.blob();break;default:v=await p.text();}if(C&&(clearTimeout(C),C=0),"json"===n||"xml"===n||"document"===n)if(v)switch(n){case"json":v=JSON.parse(v);break;case"xml":v=X$1(v,"application/xml");break;case"document":v=X$1(v,"text/html");}else v=null;if(v){if("array-buffer"===n||"blob"===n){const e=p.headers.get("Content-Type");if(e&&/application\/json|text\/plain/i.test(e)&&v["blob"===n?"size":"byteLength"]<=750)try{const e=await new Response(v).json();e.error&&(v=e);}catch{}}"image"===n&&v instanceof Blob&&(v=await Y(URL.createObjectURL(v),e,!0));}}else v=await p.text();}else v=await Y(r,e);}catch(j){if("AbortError"===j.name){if(L)throw new Error("Timeout exceeded");throw a$q("Request canceled")}if(!(!p&&j instanceof TypeError&&P$1.proxyUrl)||s.body||"delete"===s.method||"head"===s.method||"post"===s.method||"put"===s.method||e.useProxy||H(r))throw j;e.redoRequest=!0,H$1({proxyUrl:P$1.proxyUrl,urlPrefix:X$2(r)??""});}finally{C&&clearTimeout(C);}return [p,v]}async function G$3(e,t){if(null!=e.responseData)return e.responseData;if(e.headers&&(t.requestOptions.headers={...t.requestOptions.headers,...e.headers}),e.query&&(t.requestOptions.query={...t.requestOptions.query,...e.query}),e.before){let o,a;try{a=await e.before(t);}catch(s){o=N$1("request:interceptor",s,t);}if((a instanceof Error||a instanceof s$v)&&(o=N$1("request:interceptor",a,t)),o)throw e.error&&e.error(o),o;return a}}function J(e){if(e)for(const t of Object.getOwnPropertyNames(e))if(e[t])return !0;return !1}function X$1(e,t){let r;try{r=(new DOMParser).parseFromString(e,t);}catch{}if(!r||r.getElementsByTagName("parsererror").length)throw new SyntaxError("XML Parse error");return r}async function Q$1(e){let r,s;await z$4(e);try{do{[r,s]=await W$1(e);}while(!await V$2(e,r,s))}catch(n){const t=N$1("request:server",n,e.params,r);throw t.details.ssl=e.useSSL,e.interceptor&&e.interceptor.error&&e.interceptor.error(t),t}const o=e.params.url;if(s&&/\/sharing\/rest\/(accounts|portals)\/self/i.test(o)){if(!e.hasToken&&!e.credentialToken&&s.user?.username&&!Q$2(o)){const e=X$2(o,!0);e&&P$1.trustedServers.push(e);}Array.isArray(s.authorizedCrossOriginNoCorsDomains)&&m$j(s.authorizedCrossOriginNoCorsDomains);}const a=e.credential;if(a&&r$o){const e=r$o.findServerInfo(a.server);let r=e&&e.owningSystemUrl;if(r){r=r.replace(/\/?$/,"/sharing");const e=r$o.findCredential(r,a.userId);e&&-1===r$o._getIdenticalSvcIdx(r,e)&&e.resources.unshift(r);}}return {data:s,getHeader:r?e=>r?.headers.get(e):M$5,httpStatus:r?.status??200,requestOptions:e.params.requestOptions,ssl:e.useSSL,url:e.params.url}}async function V$2(e,r,s){if(e.redoRequest)return e.redoRequest=!1,!1;const o=e.params.requestOptions;if(!r||"native"===o.responseType||"native-request-init"===o.responseType)return !0;let a,n;if(!r.ok)throw a=new Error(`Unable to load ${r.url} status: ${r.status}`),a[R$3]=s,a;s&&(s.error?a=s.error:"error"===s.status&&Array.isArray(s.messages)&&(a={...s},a[R$3]=s,a.details=s.messages));let i,l=null;a&&(n=Number(a.code),l=a.hasOwnProperty("subcode")?Number(a.subcode):null,i=a.messageCode,i=i&&i.toUpperCase());const u=o.authMode;if(403===n&&(4===l||a.message&&a.message.toLowerCase().includes("ssl")&&!a.message.toLowerCase().includes("permission"))){if(!e.useSSL)return e.useSSL=!0,!1}else if(!e.hasToken&&e.useIdentity&&("no-prompt"!==u||498===n)&&void 0!==n&&_$a.includes(n)&&!K(e.params.url)&&(403!==n||i&&!F$1.includes(i)&&(null==l||2===l&&e.credentialToken))){await $$3();try{const r=await r$o.getCredential(e.params.url,{error:N$1("request:server",a,e.params),prompt:"no-prompt"!==u,signal:e.controller.signal,token:e.credentialToken});return e.credential=r,e.credentialToken=r.token,e.useSSL=e.useSSL||r.ssl,!1}catch(c){if("no-prompt"===u)return e.credential=void 0,e.credentialToken=void 0,!1;a=c;}}if(a)throw a;return !0}function Y(e,t,r=!1){const s=t.controller.signal,o=new Image;return t.withCredentials?o.crossOrigin="use-credentials":o.crossOrigin="anonymous",o.alt="",o.fetchPriority=P$1.priority,o.src=e,c$t(o,e,r,s)}U$2._abortableFetch=null,U$2._corsServers=["https://server.arcgisonline.com","https://services.arcgisonline.com"];

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function i$t(r,t){return t?{...t,query:{...r??{},...t.query}}:{query:r}}function f$o(r){return "string"==typeof r?L$3(r):p$l(r)}function s$u(r,t,o){const e={};for(const n in r){if("declaredClass"===n)continue;const i=r[n];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){e[n]=[];for(let r=0;r<i.length;r++)e[n][r]=s$u(i[r]);}else if("object"==typeof i)if(i.toJSON){const r=i.toJSON(o&&o[n]);e[n]=t?r:JSON.stringify(r);}else e[n]=t?i:JSON.stringify(i);else e[n]=i;}return e}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$u(e,t,r,o){var c,f=arguments.length,n=f<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,r,o);else for(var l=e.length-1;l>=0;l--)(c=e[l])&&(n=(f<3?c(n):f>3?c(t,r,n):c(t,r))||n);return f>3&&n&&Object.defineProperty(t,r,n),n}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function t$r(n){return null!=n&&"function"==typeof n[Symbol.iterator]}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class t$q{constructor(){this._groups=new Map;}destroy(){this.removeAll();}get size(){let r=0;return this._groups.forEach((e=>{r+=e.length;})),r}add(e,t){if(t$r(e)){const r=this._getOrCreateGroup(t);for(const t of e)this._isHandle(t)&&r.push(t);}else if(this._isHandle(e)){this._getOrCreateGroup(t).push(e);}return this}forEach(r,e){if("function"==typeof r)this._groups.forEach((e=>e.forEach(r)));else {const t=this._getGroup(r);t&&e&&t.forEach(e);}}has(r){return this._groups.has(this._ensureGroupKey(r))}remove(e){if("string"!=typeof e&&t$r(e)){for(const r of e)this.remove(r);return this}return this.has(e)?(this._removeAllFromGroup(this._getGroup(e)),this._groups.delete(this._ensureGroupKey(e)),this):this}removeAll(){return this._groups.forEach((r=>this._removeAllFromGroup(r))),this._groups.clear(),this}_isHandle(r){return r&&!!r.remove}_getOrCreateGroup(r){if(this.has(r))return this._getGroup(r);const e=[];return this._groups.set(this._ensureGroupKey(r),e),e}_getGroup(r){return N$3(this._groups.get(this._ensureGroupKey(r)))}_ensureGroupKey(r){return r||"_default_"}_removeAllFromGroup(r){r.forEach((r=>r.remove()));}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const o$t=Symbol("Accessor-beforeDestroy");

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function r$l(r){return n$n((()=>r.forEach((r=>r$r(r)&&r.remove()))))}function n$n(e){return {remove:()=>{e&&(e(),e=void 0);}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$t(r){return r?r.__accessor__?r.__accessor__:r.propertyInvalidated?r:null:null}function i$s(r,n){return null!=r&&r.metadatas&&null!=r.metadatas[n]}function o$s(r,n,t){if(t){return a$o(r,n,{policy:t,path:""})}return a$o(r,n,null)}function a$o(r,e,i){return e?Object.keys(e).reduce(((r,u)=>{let o=null,l="merge";if(i&&(o=i.path?`${i.path}.${u}`:u,l=i.policy(o)),"replace"===l)return r[u]=e[u],r;if("replace-arrays"===l&&Array.isArray(r[u]))return r[u]=e[u],r;if(void 0===r[u])return r[u]=p$l(e[u]),r;let s=r[u],c=e[u];if(s===c)return r;if(Array.isArray(c)||Array.isArray(r))s=s?Array.isArray(s)?r[u]=s.concat():r[u]=[s]:r[u]=[],c&&(Array.isArray(c)||(c=[c]),c.forEach((r=>{s.includes(r)||s.push(r);})));else if(c&&"object"==typeof c)if(i){const n=i.path;i.path=N$3(o),r[u]=a$o(s,c,i),i.path=n;}else r[u]=a$o(s,c,null);else r.hasOwnProperty(u)&&!e.hasOwnProperty(u)||(r[u]=c);return r}),r||{}):r}function s$t(r){return Array.isArray(r)?r:r.split(".")}function c$s(r){return r.includes(",")?r.split(",").map((r=>r.trim())):[r.trim()]}function f$n(r){if(Array.isArray(r)){const n=[];for(const t of r)n.push(...c$s(t));return n}return c$s(r)}function y$d(n,t,e,i){const u=f$n(t);if(1!==u.length){const t=u.map((r=>i(n,r,e)));return r$l(t)}return i(n,u[0],e)}function h$k(r){let n=!1;return ()=>{n||(n=!0,r());}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$s(t,e){const i="?"===t[t.length-1]?t.slice(0,-1):t;if(null!=e.getItemAt||Array.isArray(e)){const t=parseInt(i,10);if(!isNaN(t))return Array.isArray(e)?e[t]:e.getItemAt(t)}const u=e$t(e);return i$s(u,i)?u.get(i):e[i]}function i$r(t,n,r){if(null==t)return t;const u=e$s(n[r],t);return !u&&r<n.length-1?void 0:r===n.length-1?u:i$r(u,n,r+1)}function u$o(n,r,u=0){return "string"!=typeof r||r.includes(".")?i$r(n,s$t(r),u):e$s(r,n)}function o$r(t,n){return u$o(t,n)}function s$s(t,n){return void 0!==u$o(n,t)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function o$q(r){let o=r.constructor.__accessorMetadata__;const c=Object.prototype.hasOwnProperty.call(r.constructor,"__accessorMetadata__");if(o){if(!c){o=Object.create(o);for(const e in o)o[e]=p$l(o[e]);Object.defineProperty(r.constructor,"__accessorMetadata__",{value:o,enumerable:!1,configurable:!0,writable:!0});}}else o={},Object.defineProperty(r.constructor,"__accessorMetadata__",{value:o,enumerable:!1,configurable:!0,writable:!0});return N$3(r.constructor.__accessorMetadata__)}function c$r(t,e){const r=o$q(t);let c=r[e];return c||(c=r[e]={}),c}function n$m(t,e){return o$s(t,e,u$n)}const s$r=/^(?:[^.]+\.)?(?:value|type|(?:json\.type|json\.origins\.[^.]\.type))$/;function u$n(t){return s$r.test(t)?"replace":"merge"}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function t$p(t){return t&&t.release&&"function"==typeof t.release}function i$q(t){return t&&t.acquire&&"function"==typeof t.acquire}class e$r{constructor(t,i,e,o=1,s=0){if(this._ctor=t,this._acquireFunction=i,this._releaseFunction=e,this.allocationSize=o,this._pool=new Array(s),this._initialSize=s,this._ctor)for(let n=0;n<s;n++)this._pool[n]=new this._ctor;this.allocationSize=Math.max(o,1);}destroy(){this.prune(0);}acquire(...t){let o;if(e$r.test.disabled)o=new this._ctor;else {if(0===this._pool.length){const t=this.allocationSize;for(let i=0;i<t;i++)this._pool[i]=new this._ctor;}o=this._pool.pop();}return this._acquireFunction?this._acquireFunction(o,...t):i$q(o)&&o.acquire(...t),o}release(i){i&&!e$r.test.disabled&&(this._releaseFunction?this._releaseFunction(i):t$p(i)&&i.release(),this._pool.push(i));}prune(t=this._initialSize){if(!(t>=this._pool.length)){for(let i=t;i<this._pool.length;++i){const t=this._pool[i];this._dispose(t);}this._pool.length=t;}}_dispose(t){t.dispose&&"function"==typeof t.dispose&&t.dispose();}}e$r.test={disabled:!1};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var I$2;!function(I){I[I.INITIALIZING=0]="INITIALIZING",I[I.CONSTRUCTING=1]="CONSTRUCTING",I[I.CONSTRUCTED=2]="CONSTRUCTED";}(I$2||(I$2={}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class s$q{constructor(r,s){this._observers=r,this._observer=s;}remove(){F$3(this._observers,this._observer);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class s$p{constructor(){this._observers=null,this.destroyed=!1;}observe(s){if(this.destroyed||s.destroyed)return r$k;null==this._observers&&(this._observers=[]);const t=this._observers;let o=!1,n=!1;const i=t.length;for(let e=0;e<i;++e){const r=t[e];if(r.destroyed)n=!0;else if(r===s){o=!0;break}}return o||(t.push(s),n&&this._removeDestroyedObservers()),new s$q(t,s)}_removeDestroyedObservers(){const e=this._observers;if(!e||0===e.length)return;const s=e.length;let r=0;for(let t=0;t<s;++t){for(;t+r<s;){if(!e[t+r].destroyed)break;++r;}if(r>0){if(!(t+r<s))break;e[t]=e[t+r];}}e.length=s-r;}destroy(){if(this.destroyed)return;this.destroyed=!0;const e=this._observers;if(null!=e){for(const s of e)s.onCommitted();this._observers=null;}}}const r$k={remove:()=>{}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var r$j;!function(e){e[e.DEFAULTS=0]="DEFAULTS",e[e.COMPUTED=1]="COMPUTED",e[e.SERVICE=2]="SERVICE",e[e.PORTAL_ITEM=3]="PORTAL_ITEM",e[e.WEB_SCENE=4]="WEB_SCENE",e[e.WEB_MAP=5]="WEB_MAP",e[e.USER=6]="USER";}(r$j||(r$j={}));function t$o(e){switch(e){case"defaults":return r$j.DEFAULTS;case"service":return r$j.SERVICE;case"portal-item":return r$j.PORTAL_ITEM;case"web-scene":return r$j.WEB_SCENE;case"web-map":return r$j.WEB_MAP;case"user":return r$j.USER;default:return null}}function n$l(E){switch(E){case r$j.DEFAULTS:return "defaults";case r$j.SERVICE:return "service";case r$j.PORTAL_ITEM:return "portal-item";case r$j.WEB_SCENE:return "web-scene";case r$j.WEB_MAP:return "web-map";case r$j.USER:return "user"}return N$3(void 0)}function c$q(e){return n$l(e)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var i$p;!function(i){i[i.Dirty=1]="Dirty",i[i.Overriden=2]="Overriden",i[i.Computing=4]="Computing",i[i.NonNullable=8]="NonNullable",i[i.HasDefaultValue=16]="HasDefaultValue",i[i.DepTrackingInitialized=32]="DepTrackingInitialized",i[i.AutoTracked=64]="AutoTracked",i[i.ExplicitlyTracking=128]="ExplicitlyTracking";}(i$p||(i$p={}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const o$p={onObservableAccessed:()=>{},onTrackingEnd:()=>{}},c$p=[];let s$o=o$p;function i$o(t){s$o.onObservableAccessed(t);}let l$j=!1,a$n=!1;function f$m(t,n,e){if(l$j)return u$m(t,n,e);p$i(t);const r=n.call(e);return d$j(),r}function g$a(t,n){return f$m(o$p,t,n)}function u$m(n,e,r){const o=l$j;l$j=!0,p$i(n);let c=null;try{c=e.call(r);}catch(s){a$n&&s$w.getLogger("esri.core.accessorSupport.tracking").error(s);}return d$j(),l$j=o,c}function p$i(t){s$o=t,c$p.push(t);}function d$j(){const t=c$p.length;if(t>1){const n=c$p.pop();s$o=c$p[t-2],n.onTrackingEnd();}else if(1===t){const t=c$p.pop();s$o=o$p,t.onTrackingEnd();}else s$o=o$p;}function b$6(t,n){const e=n.observerObject;if(e.flags&i$p.DepTrackingInitialized)return;const o=a$n;a$n=!1,e.flags&i$p.AutoTracked?u$m(n,n.metadata.get,t):k$7(t,n),a$n=o;}const m$i=[];function k$7(t,e){const o=e.observerObject;o.flags&i$p.ExplicitlyTracking||(o.flags|=i$p.ExplicitlyTracking,u$m(e,(()=>{const r=e.metadata.dependsOn||m$i;for(const e of r)if("string"!=typeof e||e.includes(".")){const r=s$t(e);for(let n=0,e=t;n<r.length&&null!=e&&"object"==typeof e;++n)e=y$c(e,r[n],n!==r.length-1);}else y$c(t,e,!1);})),o.flags&=~i$p.ExplicitlyTracking);}function y$c(t,n,r){const o="?"===n[n.length-1]?n.slice(0,-1):n;if(null!=t.getItemAt||Array.isArray(t)){const n=parseInt(o,10);if(!isNaN(n))return Array.isArray(t)?t[n]:t.getItemAt(n)}const c=e$t(t)?.properties.get(o);return c&&(i$o(c.observerObject),b$6(t,c)),r?t[o]:void 0}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class a$m{constructor(t,e,s){this.properties=t,this.propertyName=e,this.metadata=s,this.observerObject=new l$i,this._accessed=null,this._handles=null,this.observerObject.flags=i$p.Dirty|(s.nonNullable?i$p.NonNullable:0)|(s.hasOwnProperty("value")?i$p.HasDefaultValue:0)|(void 0===s.get?i$p.DepTrackingInitialized:0)|(void 0===s.dependsOn?i$p.AutoTracked:0),c$o.register(this,this.observerObject);}destroy(){this.observerObject.destroy(),this._accessed=null,this._clearObservationHandles(),c$o.unregister(this);}getComputed(){const t=this.observerObject;i$o(t);const a=this.properties.store,l=this.propertyName,c=t.flags,h=a.get(l);if(c&i$p.Computing)return h;if(~c&i$p.Dirty&&a.has(l))return h;t.flags|=i$p.Computing;const d=this.properties.host;let g;c&i$p.AutoTracked?g=f$m(this,this.metadata.get,d):(k$7(d,this),g=this.metadata.get.call(d)),a.set(l,g,r$j.COMPUTED);const b=a.get(l);return b===h?t.flags&=~i$p.Dirty:g$a(this.commit,this),t.flags&=~i$p.Computing,b}onObservableAccessed(t){t!==this.observerObject&&(null===this._accessed&&(this._accessed=[]),this._accessed.includes(t)||this._accessed.push(t));}onTrackingEnd(){this._clearObservationHandles();const t=this.observerObject;t.flags|=i$p.DepTrackingInitialized;const e=this._accessed;if(null===e)return;let s=this._handles;null===s&&(s=this._handles=[]);for(let i=0;i<e.length;++i)s.push(e[i].observe(t));e.length=0;}notifyChange(){const t=this.observerObject;t.onInvalidated(),t.onCommitted();}invalidate(){this.observerObject.onInvalidated();}commit(){const t=this.observerObject;t.flags&=~i$p.Dirty,t.onCommitted();}_clearObservationHandles(){const t=this._handles;if(null!==t){for(let e=0;e<t.length;++e)t[e].remove();t.length=0;}}}class l$i extends s$p{constructor(){super(...arguments),this.flags=0;}onInvalidated(){~this.flags&i$p.Overriden&&(this.flags|=i$p.Dirty);const t=this._observers;if(t&&t.length>0)for(const e of t)e.onInvalidated();}onCommitted(){const t=this._observers;if(t&&t.length>0){const e=t.slice();for(const t of e)t.onCommitted();}}destroy(){this.flags&i$p.Dirty&&this.onCommitted(),super.destroy();}}const c$o=new FinalizationRegistry((t=>{t.destroy();}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class t$n{constructor(){this._values=new Map,this.multipleOriginsSupported=!1;}clone(s){const r=new t$n;return this._values.forEach(((t,i)=>{s&&s.has(i)||r.set(i,p$l(t));})),r}get(e){return this._values.get(e)}originOf(){return r$j.USER}keys(){return [...this._values.keys()]}set(e,s){this._values.set(e,s);}delete(e){this._values.delete(e);}has(e){return this._values.has(e)}forEach(e){this._values.forEach(e);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function d$i(t,e,s){return void 0!==t}function m$h(t,e,s,r){return void 0!==t&&(!(null==s&&t.observerObject.flags&i$p.NonNullable)||(!1))}function v$9(t){return t&&"function"==typeof t.destroy}s$w.getLogger("esri.core.accessorSupport.Properties");class O$2{constructor(t){this.host=t,this.properties=new Map,this.ctorArgs=null,this.destroyed=!1,this.lifecycle=I$2.INITIALIZING,this.store=new t$n,this._origin=r$j.USER;const e=N$3(this.host.constructor.__accessorMetadata__);for(const s in e){const t=new a$m(this,s,e[s]);this.properties.set(s,t);}this.metadatas=e;}initialize(){this.lifecycle=I$2.CONSTRUCTING;}constructed(){this.lifecycle=I$2.CONSTRUCTED;}destroy(){this.destroyed=!0;for(const[t,e]of this.properties){if(e.metadata.autoDestroy){const s=this.internalGet(t);s&&v$9(s)&&(s.destroy(),~e.observerObject.flags&i$p.NonNullable&&this._internalSet(e,null));}e.destroy();}}get initialized(){return this.lifecycle!==I$2.INITIALIZING}get(t){const e=this.properties.get(t);if(e.metadata.get)return e.getComputed();i$o(e.observerObject);const s=this.store;return s.has(t)?s.get(t):e.metadata.value}originOf(t){const e=this.store.originOf(t);if(void 0===e){const e=this.properties.get(t);if(void 0!==e&&e.observerObject.flags&i$p.HasDefaultValue)return "defaults"}return n$l(e)}has(t){return !!this.properties.has(t)&&this.store.has(t)}keys(){return [...this.properties.keys()]}internalGet(t){const e=this.properties.get(t);if(d$i(e))return this.store.has(t)?this.store.get(t):e.metadata.value}internalSet(t,e){const s=this.properties.get(t);d$i(s)&&this._internalSet(s,e);}getDependsInfo(t,e,s){const r=this.properties.get(e);if(!d$i(r))return "";const i=new Set,n=f$m({onObservableAccessed:t=>i.add(t),onTrackingEnd:()=>{}},(()=>r.metadata.get?.call(t)));let a=`${s}${t.declaredClass.split(".").pop()}.${e}: ${n}\n`;if(0===i.size)return a;s+="  ";for(const c of i){if(!(c instanceof a$m))continue;const t=c.properties.host,e=c.propertyName,r=e$t(t);a+=r?r.getDependsInfo(t,e,s):`${s}${e}: undefined\n`;}return a}setAtOrigin(t,e,s){const r=this.properties.get(t);if(d$i(r))return this._setAtOrigin(r,e,s)}isOverridden(t){const e=this.properties.get(t);return void 0!==e&&!!(e.observerObject.flags&i$p.Overriden)}clearOverride(t){const e=this.properties.get(t),s=e?.observerObject;s&&s.flags&i$p.Overriden&&(s.flags&=~i$p.Overriden,e.notifyChange());}override(t,e){const s=this.properties.get(t);if(!m$h(s,t,e))return;const r=s.metadata.cast;if(r){const t=this._cast(r,e),{valid:s,value:i}=t;if(I$1.release(t),!s)return;e=i;}s.observerObject.flags|=i$p.Overriden,this._internalSet(s,e);}set(t,e){const s=this.properties.get(t);if(!m$h(s,t,e))return;const r=s.metadata.cast;if(r){const t=this._cast(r,e),{valid:s,value:i}=t;if(I$1.release(t),!s)return;e=i;}const i=s.metadata.set;i?i.call(this.host,e):this._internalSet(s,e);}setDefaultOrigin(t){this._origin=t$o(t);}getDefaultOrigin(){return n$l(this._origin)}notifyChange(t){const e=this.properties.get(t);void 0!==e&&e.notifyChange();}invalidate(t){const e=this.properties.get(t);void 0!==e&&e.invalidate();}commit(t){const e=this.properties.get(t);void 0!==e&&e.commit();}_internalSet(t,e){const s=this.lifecycle!==I$2.INITIALIZING?this._origin:r$j.DEFAULTS;this._setAtOrigin(t,e,s);}_setAtOrigin(e,s,r){const i=this.store,o=e.propertyName;i.has(o,r)&&h$n(s,i.get(o))&&~e.observerObject.flags&i$p.Overriden&&r===i.originOf(o)||(e.invalidate(),i.set(o,s,r),e.commit(),b$6(this.host,e));}_cast(t,e){const s=I$1.acquire();return s.valid=!0,s.value=e,t&&(s.value=t.call(this.host,e,s)),s}}class y$b{constructor(){this.value=null,this.valid=!0;}acquire(){this.valid=!0;}release(){this.value=null;}}const I$1=new e$r(y$b);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function t$m(o,e,s){if(o&&e)if("object"==typeof e)for(const r of Object.getOwnPropertyNames(e))t$m(o,r,e[r]);else {if(e.includes(".")){const n=e.split("."),i=n.splice(n.length-1,1)[0];return void t$m(o$r(o,n),i,s)}const i=o.__accessor__;null!=i&&n$k(e,i),o[e]=s;}}function n$k(r,t){if(has("esri-unknown-property-errors")&&!e$q(r,t))throw new s$v("set:unknown-property",s$n(r,t))}function e$q(o,r){return null!=r.metadatas[o]}function s$n(o,r){return "setting unknown property '"+o+"' on instance of "+r.host.declaredClass}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function r$i(e){e.length=0;}class t$l{constructor(t=50,o=50){this._pool=new e$r(Array,void 0,r$i,o,t);}acquire(){return this._pool.acquire()}release(e){this._pool.release(e);}prune(){this._pool.prune(0);}static acquire(){return o$o.acquire()}static release(e){return o$o.release(e)}static prune(){o$o.prune();}}const o$o=new t$l(100);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class t$k extends e$r{constructor(){super(...arguments),this._set=new Set;}destroy(){super.destroy(),this._set=v$c();}acquire(...e){const s=super.acquire(...e);return this._set.delete(s),s}release(e){e&&!this._set.has(e)&&(super.release(e),this._set.add(e));}_dispose(e){this._set.delete(e),super._dispose(e);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const o$n=[];function t$j(t){o$n.push(t),1===o$n.length&&queueMicrotask((()=>{const t=o$n.slice();o$n.length=0;for(const o of t)o();}));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class e$p{constructor(s,e=30){this.name=s,this._counter=0,this._samples=new Array(e);}record(e){r$r(e)&&(this._samples[++this._counter%this._samples.length]=e);}get median(){return this._samples.slice().sort(((s,e)=>s-e))[Math.floor(this._samples.length/2)]}get average(){return this._samples.reduce(((s,e)=>s+e),0)/this._samples.length}get last(){return this._samples[this._counter%this._samples.length]}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var o$m;!function(o){const t=(o,t,n,e)=>{let i=t,c=t;const l=n>>>1,r=o[i-1];for(;c<=l;){c=i<<1,c<n&&e(o[c-1],o[c])<0&&++c;const t=o[c-1];if(e(t,r)<=0)break;o[i-1]=t,i=c;}o[i-1]=r;},n=(o,t)=>o<t?-1:o>t?1:0;function e(o,e,i,c){void 0===e&&(e=0),void 0===i&&(i=o.length),void 0===c&&(c=n);for(let n=i>>>1;n>e;n--)t(o,n,i,c);const l=e+1;for(let n=i-1;n>e;n--){const i=o[e];o[e]=o[n],o[n]=i,t(o,l,n,c);}}function*i(o,e,i,c){void 0===e&&(e=0),void 0===i&&(i=o.length),void 0===c&&(c=n);for(let n=i>>>1;n>e;n--)t(o,n,i,c),yield;const l=e+1;for(let n=i-1;n>e;n--){const i=o[e];o[e]=o[n],o[n]=i,t(o,l,n,c),yield;}}o.sort=e,o.iterableSort=i;}(o$m||(o$m={}));const t$i=o$m;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const a$l=1.5,e$o=1.1;class l$h{constructor(h){this.data=[],this._length=0,this._allocator=void 0,this._deallocator=()=>null,this._shrink=()=>{},this._hint=new x$a,h&&(h.initialSize&&(this.data=new Array(h.initialSize)),h.allocator&&(this._allocator=h.allocator),void 0!==h.deallocator&&(this._deallocator=h.deallocator),h.shrink&&(this._shrink=()=>n$j(this)));}toArray(){return this.data.slice(0,this.length)}filter(t){const h=new Array;for(let i=0;i<this._length;i++){const s=this.data[i];t(s)&&h.push(s);}return h}getItemAt(t){if(!(t<0||t>=this._length))return this.data[t]}includes(t,h){const i=this.data.indexOf(t,h);return -1!==i&&i<this.length}get length(){return this._length}set length(t){if(t>this._length){if(this._allocator){for(;this._length<t;)this.data[this._length++]=this._allocator(this.data[this._length]);return}this._length=t;}else {if(this._deallocator)for(let h=t;h<this._length;++h)this.data[h]=this._deallocator(this.data[h]);this._length=t,this._shrink();}}clear(){this.length=0;}prune(){this.clear(),this.data=[];}push(t){this.data[this._length++]=t;}pushArray(t,h=t.length){for(let i=0;i<h;i++)this.data[this._length++]=t[i];}fill(t,h){for(let i=0;i<h;i++)this.data[this._length++]=t;}pushNew(){this._allocator&&(this.data[this.length]=this._allocator(this.data[this.length]));const t=this.data[this._length];return ++this._length,t}unshift(t){this.data.unshift(t),this._length++,n$j(this);}pop(){if(0===this.length)return;const t=this.data[this.length-1];return this.length=this.length-1,this._shrink(),t}remove(t){const i=b$a(this.data,t,this.length,this._hint);if(-1!==i)return this.data.splice(i,1),this.length=this.length-1,t}removeUnordered(t){return this.removeUnorderedIndex(b$a(this.data,t,this.length,this._hint))}removeUnorderedIndex(t){if(!(t>=this.length||t<0))return this.swapElements(t,this.length-1),this.pop()}removeUnorderedMany(t,h=t.length,s){this.length=j$c(this.data,t,this.length,h,this._hint,s),this._shrink();}front(){if(0!==this.length)return this.data[0]}back(){if(0!==this.length)return this.data[this.length-1]}swapElements(t,h){if(t>=this.length||h>=this.length||t===h)return;const i=this.data[t];this.data[t]=this.data[h],this.data[h]=i;}sort(t){t$i.sort(this.data,0,this.length,t);}iterableSort(t){return t$i.iterableSort(this.data,0,this.length,t)}some(t,h){for(let i=0;i<this.length;++i)if(t.call(h,this.data[i],i,this.data))return !0;return !1}find(t,h){for(let i=0;i<this.length;++i){const s=this.data[i];if(t.call(h,s,i))return s}}filterInPlace(t,h){let i=0;for(let s=0;s<this._length;++s){const a=this.data[s];t.call(h,a,s,this.data)&&(this.data[s]=this.data[i],this.data[i]=a,i++);}if(this._deallocator)for(let s=i;s<this._length;s++)this.data[s]=this._deallocator(this.data[s]);return this._length=i,this._shrink(),this}forAll(t,h){const i=this.length,s=this.data;for(let a=0;a<i;++a)t.call(h,s[a],a,s);}forEach(t,h){for(let i=0;i<this.length;++i)t.call(h,this.data[i],i,this.data);}map(t,h){const i=new Array(this.length);for(let s=0;s<this.length;++s)i[s]=t.call(h,this.data[s],s,this.data);return i}reduce(t,h){let i=h;for(let s=0;s<this.length;++s)i=t(i,this.data[s],s,this.data);return i}has(t){const h=this.length,i=this.data;for(let s=0;s<h;++s)if(i[s]===t)return !0;return !1}}function n$j(t){t.data.length>a$l*t.length&&(t.data.length=Math.floor(t.length*e$o));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function n$i(n){return n}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class m$g{constructor(e){this.callback=e,this.isActive=!0;}remove(){this.isActive=!1;}}let l$g=0;const u$l={time:n$i(0),deltaTime:n$i(0),elapsedFrameTime:n$i(0),frameDuration:n$i(0)},f$l=["prepare","preRender","render","postRender","update","finish"],h$j=[],d$h=new l$h;const k$6={frameTasks:d$h,willDispatch:!1,clearFrameTasks:j$8,dispatch:b$5,executeFrameTasks:D$5};function v$8(e){const r=new m$g(e);return h$j.push(r),k$6.willDispatch||(k$6.willDispatch=!0,t$j(b$5)),r}function j$8(e=!1){d$h.forAll((e=>{e.removed=!0;})),e&&_$9();}function D$5(e){const t=n$i(e-l$g);l$g=e;const r=1e3/60,s=Math.max(0,t-r);u$l.time=e,u$l.frameDuration=n$i(r-s);for(let o=0;o<f$l.length;o++){const r=performance.now(),s=f$l[o];d$h.forAll((r=>{if(r.paused||r.removed)return;0===o&&r.ticks++;r.phases[s]&&(u$l.elapsedFrameTime=n$i(performance.now()-e),u$l.deltaTime=0===r.ticks?n$i(0):t,r.phases[s]?.call(r,u$l));})),R$2[o].record(performance.now()-r);}_$9(),q$3.record(performance.now()-e);}const g$9=new l$h;function _$9(){d$h.forAll((e=>{e.removed&&g$9.push(e);})),d$h.removeUnorderedMany(g$9.data,g$9.length),g$9.clear();}function b$5(){for(;h$j.length;){const t=N$3(h$j.shift());t.isActive&&t.callback();}k$6.willDispatch=!1;}const R$2=f$l.map((e=>new e$p(e))),q$3=new e$p("total");

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let t$h=0;function e$n(){return ++t$h}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class t$g{constructor(t){this._notify=t,this._accessed=[],this._handles=[],this._observerObject=new s$m(this._notify),e$m.register(this,this._observerObject);}destroy(){this._accessed.length=0,this._observerObject?.destroy(),this.clear(),e$m.unregister(this);}onObservableAccessed(t){const s=this._accessed;s.includes(t)||s.push(t);}onTrackingEnd(){const t=this._handles,s=this._accessed,e=this._observerObject;for(let i=0;i<s.length;++i)t.push(s[i].observe(e));s.length=0;}clear(){const t=this._handles;for(let s=0;s<t.length;++s)t[s].remove();t.length=0;}}class s$m{constructor(t){this._notify=t,this._invalidCount=0,this.destroyed=!1;}onInvalidated(){this._invalidCount++;}onCommitted(){if(this.destroyed)return;const t=this._invalidCount;if(1===t)return this._invalidCount=0,void this._notify();this._invalidCount=t>0?t-1:0;}destroy(){this.destroyed=!0,this._notify=i$n;}}const e$m=new FinalizationRegistry((t=>{t.destroy();}));function i$n(){}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let r$h=!1;const e$l=[];function o$l(e,o){let u=new t$g(s),l=null,f=!1;function s(){if(!u||f)return;if(r$h)return void i$m(s);const t=l;u.clear(),r$h=!0,f=!0,l=f$m(u,e),f=!1,r$h=!1,o(l,t),c$n();}function m(){u&&(u.destroy(),u=null,l=null);}return f=!0,l=f$m(u,e),f=!1,{remove:m}}function u$k(r,e){let o=new t$g(l),u=null;function l(){e(u,c);}function i(){o&&(o.destroy(),o=null),u=null;}function c(){return o?(o.clear(),u=f$m(o,r),u):null}return c(),{remove:i}}function i$m(n){e$l.includes(n)||e$l.unshift(n);}function c$n(){for(;e$l.length;)e$l.pop()();}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var h$i;!function(e){e[e.Untracked=0]="Untracked",e[e.Tracked=1]="Tracked";}(h$i||(h$i={}));class f$k{constructor(){this.uid=e$n(),this.removed=!1,this.type=null,this.oldValue=null,this.callback=null,this.getValue=null,this.target=null,this.path=null,this.equals=null;}static acquireUntracked(e,r,o,l,n){return this.pool.acquire(h$i.Untracked,e,r,o,l,n,h$n)}static acquireTracked(e,t,r,o){return this.pool.acquire(h$i.Tracked,e,t,r,null,null,o)}notify(e,t){this.type===h$i.Untracked?this.callback.call(this.target,e,t,this.path,this.target):this.callback.call(null,e,t);}acquire(e,t,r,o,l,n,s){this.uid=e$n(),this.removed=!1,this.type=e,this.oldValue=t,this.callback=r,this.getValue=o,this.target=l,this.path=n,this.equals=s;}release(){this.target=this.path=this.oldValue=this.callback=this.getValue=null,this.uid=e$n(),this.removed=!0;}}f$k.pool=new t$k(f$k);const m$f=new t$l,p$h=new Set;let v$7;function k$5(e){p$h.delete(e),p$h.add(e),v$7||(v$7=v$8(q$2));}function _$8(e){if(e.removed)return;const t=e.oldValue,r=e.getValue();e.equals(t,r)||(e.oldValue=r,e.notify(r,t));}function g$8(e){for(const t of p$h.values())t.target===e&&(t.removed=!0);}function q$2(){let e=10;for(;v$7&&e--;){v$7=null;const e=j$7(),t=m$f.acquire();for(const r of e){const e=r.uid;_$8(r),e===r.uid&&r.removed&&t.push(r);}for(const r of p$h)r.removed&&(t.push(r),p$h.delete(r));for(const r of t)f$k.pool.release(r);m$f.release(t),m$f.release(e),V$1.forEach((e=>e()));}}function j$7(){const e=m$f.acquire();e.length=p$h.size;let t=0;for(const r of p$h)e[t]=r,++t;return p$h.clear(),e}const V$1=new Set;function U$1(e,t,r){let o=y$d(e,t,r,((e,t,r)=>{let l,n,i=u$k((()=>u$o(e,t)),((i,s)=>{e.__accessor__.destroyed||l&&l.uid!==n?o.remove():(l||(l=f$k.acquireUntracked(i,r,s,e,t),n=l.uid),k$5(l));}));return {remove:h$k((()=>{i.remove(),l&&(l.uid!==n||l.removed||(l.removed=!0,k$5(l)),l=null),o=i=null;}))}}));return o}function b$4(e,r,o){const l=y$d(e,r,o,((e,r,o)=>{let n=!1;return o$l((()=>u$o(e,r)),((i,s)=>{e.__accessor__.destroyed?l.remove():n||(n=!0,h$n(s,i)||o.call(e,i,s,r,e),n=!1);}))}));return l}function T$2(e,t,r,o=!1){return !e.__accessor__||e.__accessor__.destroyed?{remove(){}}:o?b$4(e,t,r):U$1(e,t,r)}function w$6(e,t,r){let o,l,n=u$k(e,((e,i)=>{o&&o.uid!==l?n.remove():(o||(o=f$k.acquireTracked(e,t,i,r),l=o.uid),k$5(o));}));return {remove:h$k((()=>{n.remove(),o&&(o.uid!==l||o.removed||(o.removed=!0,k$5(o)),o=null),n=null;}))}}function S$4(e,t,r){let o=!1;return o$l(e,((e,l)=>{o||(o=!0,r(l,e)||t(e,l),o=!1);}))}function P(e,t,o=!1,l=w$8){return o?S$4(e,t,l):w$6(e,t,l)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function r$g(n,t,r){const o=n.get(t);if(void 0!==o)return o;const u=r();return n.set(t,u),u}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const r$f=s$w.getLogger("esri.core.accessorSupport.ensureTypes");function t$f(e){return null==e?e:new Date(e)}function o$k(e){return null==e?e:!!e}function u$j(e){return null==e?e:e.toString()}function a$k(e){return null==e?e:(e=parseFloat(e),isNaN(e)?0:e)}function s$l(e){return null==e?e:Math.round(parseFloat(e))}function i$l(e){return e&&e.constructor&&void 0!==e.constructor.__accessorMetadata__}function l$f(e,n){return null!=n&&e&&!(n instanceof e)}function c$m(e){return e&&"isCollection"in e}function f$j(e){return e&&e.Type?"function"==typeof e.Type?e.Type:e.Type.base:null}function p$g(e,n){if(!n||!n.constructor||!c$m(n.constructor))return y$a(e,n)?n:new e(n);const r=f$j(e.prototype.itemType),t=f$j(n.constructor.prototype.itemType);return r?t?r===t?n:r.prototype.isPrototypeOf(t.prototype)?new e(n):(y$a(e,n),n):new e(n):n}function y$a(e,n){return !!i$l(n)&&(r$f.error("Accessor#set","Assigning an instance of '"+(n.declaredClass||"unknown")+"' which is not a subclass of '"+g$7(e)+"'"),!0)}function v$6(e,n){return null==n?n:c$m(e)?p$g(e,n):l$f(e,n)?y$a(e,n)?n:new e(n):n}function g$7(e){return e&&e.prototype&&e.prototype.declaredClass||"unknown"}const d$g=new WeakMap;function h$h(e){switch(e){case Number:return a$k;case T$1:return s$l;case Boolean:return o$k;case String:return u$j;case Date:return t$f;default:return r$g(d$g,e,(()=>v$6.bind(null,e)))}}function b$3(e,n){const r=h$h(e);return 1===arguments.length?r:r(n)}function m$e(e,n,r){return 1===arguments.length?m$e.bind(null,e):n?Array.isArray(n)?n.map((n=>e(n,r))):[e(n,r)]:n}function w$5(e,n){return 1===arguments.length?m$e(b$3.bind(null,e)):m$e(b$3.bind(null,e),n)}function A$2(e,n,r){return 0!==n&&Array.isArray(r)?r.map((r=>A$2(e,n-1,r))):e(r)}function $$2(e,n,r){if(2===arguments.length)return $$2.bind(null,e,n);if(!r)return r;let t=n,o=r=A$2(e,n,r);for(;t>0&&Array.isArray(o);)t--,o=o[0];if(void 0!==o)for(let u=0;u<t;u++)r=[r];return r}function j$6(e,n,r){return 2===arguments.length?$$2(b$3.bind(null,e),n):$$2(b$3.bind(null,e),n,r)}function k$4(e){return !!Array.isArray(e)&&!e.some((n=>{const r=typeof n;return !("string"===r||"number"===r||"function"===r&&e.length>1)}))}function M$4(e,n){if(2===arguments.length)return M$4(e).call(null,n);const t=new Set,o=e.filter((e=>"function"!=typeof e)),u=e.filter((e=>"function"==typeof e));for(const r of e)"string"!=typeof r&&"number"!=typeof r||t.add(r);let a=null,s=null;return (e,n)=>{if(null==e)return e;const i=typeof e,c="string"===i||"number"===i;return c&&(t.has(e)||u.some((e=>"string"===i&&e===String||"number"===i&&e===Number)))||"object"===i&&u.some((n=>!l$f(e,n)))?e:(c&&o.length?(a||(a=o.map((e=>"string"==typeof e?`'${e}'`:`${e}`)).join(", ")),r$f.error("Accessor#set",`'${e}' is not a valid value for this property, only the following values are valid: ${a}`)):"object"==typeof e&&u.length?(s||(s=u.map((e=>g$7(e))).join(", ")),r$f.error("Accessor#set",`'${e}' is not a valid value for this property, value must be one of ${s}`)):r$f.error("Accessor#set",`'${e}' is not a valid value for this property`),n&&(n.valid=!1),null)}}function S$3(e,n){if(2===arguments.length)return S$3(e).call(null,n);const t={},o=[],u=[];for(const r in e.typeMap){const n=e.typeMap[r];t[r]=b$3(n),o.push(g$7(n)),u.push(r);}const a=()=>`'${o.join("', '")}'`,s=()=>`'${u.join("', '")}'`,c="string"==typeof e.key?n=>n[e.key]:e.key;return n=>{if(e.base&&!l$f(e.base,n))return n;if(null==n)return n;const o=c(n)||e.defaultKeyValue,u=t[o];if(!u)return r$f.error("Accessor#set",`Invalid property value, value needs to be one of ${a()}, or a plain object that can autocast (having .type = ${s()})`),null;if(!l$f(e.typeMap[o],n))return n;if("string"==typeof e.key&&!i$l(n)){const r={};for(const t in n)t!==e.key&&(r[t]=n[t]);return u(r)}return u(n)}}class T$1{}function _$7(e){if(!e||!("type"in e))return !1;switch(e.type){case"native":case"array":case"one-of":return !0}return !1}function B$2(e){switch(e.type){case"native":return b$3(e.value);case"array":return m$e(B$2(e.value));case"one-of":return C$3(e);default:return null}}function C$3(e){let n=null;return (t,o)=>F(t,e)?t:(null==n&&(n=D$4(e)),r$f.error("Accessor#set",`Invalid property value, value needs to be of type ${n}`),o&&(o.valid=!1),null)}function D$4(e){switch(e.type){case"native":switch(e.value){case Number:return "number";case String:return "string";case Boolean:return "boolean";case T$1:return "integer";case Date:return "date";default:return g$7(e.value)}case"array":return `array of ${D$4(e.value)}`;case"one-of":{const n=e.values.map((e=>D$4(e)));return `one of ${n.slice(0,n.length-1)} or ${n[n.length-1]}`}}return "unknown"}function F(e,n){if(null==e)return !0;switch(n.type){case"native":switch(n.value){case Number:case T$1:return "number"==typeof e;case Boolean:return "boolean"==typeof e;case String:return "string"==typeof e}return e instanceof n.value;case"array":return !!Array.isArray(e)&&!e.some((e=>!F(e,n.value)));case"one-of":return n.values.some((n=>F(e,n)))}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function y$9(n={}){return (o,s)=>{if(o===Function.prototype)throw new Error(`Inappropriate use of @property() on a static field: ${o.name}.${s}. Accessor does not support static properties.`);const i=Object.getOwnPropertyDescriptor(o,s),a=c$r(o,s);i&&(i.get||i.set?(a.get=i.get||a.get,a.set=i.set||a.set):"value"in i&&("value"in n&&s$w.getLogger("esri.core.accessorSupport.decorators.property").warn(`@property() will redefine the value of "${s}" on "${o.constructor.name}" already defined in the metadata`,n),a.value=n.value=i.value)),null!=n.readOnly&&(a.readOnly=n.readOnly);const p=n.aliasOf;if(p){const t="string"==typeof p?p:p.source,e="string"==typeof p?null:!0===p.overridable;let r;a.dependsOn=[t],a.get=function(){let e=o$r(this,t);if("function"==typeof e){r||(r=t.split(".").slice(0,-1).join("."));const n=o$r(this,r);n&&(e=e.bind(n));}return e},a.readOnly||(a.set=e?function(t){this._override(s,t);}:function(e){t$m(this,t,e);});}const u=n.type,c=n.types;a.cast||(u?a.cast=h$g(u):c&&(Array.isArray(c)?a.cast=m$e(S$3(c[0])):a.cast=S$3(c))),n$m(a,n),n.range&&(a.cast=j$5(a.cast,n.range));}}function d$f(t,e,r){const n=c$r(t,r);n.json||(n.json={});let o=n.json;return void 0!==e&&(o.origins||(o.origins={}),o.origins[e]||(o.origins[e]={}),o=o.origins[e]),o}function h$g(t){let e=0,r=t;if(_$7(t))return B$2(t);for(;Array.isArray(r)&&1===r.length&&"string"!=typeof r[0]&&"number"!=typeof r[0];)r=r[0],e++;const f=r;if(k$4(f))return 0===e?M$4(f):$$2(M$4(f),e);if(1===e)return w$5(f);if(e>1)return j$6(f,e);const l=t;return l.from?l.from:b$3(l)}function j$5(t,e){return r=>{let n=+t(r);return null!=e.step&&(n=Math.round(n/e.step)*e.step),null!=e.min&&(n=Math.max(e.min,n)),null!=e.max&&(n=Math.min(e.max,n)),n}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function n$h(n){if(n.json&&n.json.origins){const o=n.json.origins,e={"web-document":["web-scene","web-map"]};for(const n in e)if(o[n]){const s=o[n];e[n].forEach((n=>{o[n]=s;})),delete o[n];}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class t$e extends r$p{constructor(e,s,r){if(super(e,s,r),!(this instanceof t$e))return new t$e(e,s,r)}}t$e.prototype.type="warning";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$k(e){return !!e&&e.prototype&&e.prototype.declaredClass&&0===e.prototype.declaredClass.indexOf("esri.core.Collection")}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const i$k=s$w.getLogger("esri.core.accessorSupport.extensions.serializableProperty.reader");function p$f(t,r,n){t&&(!n&&!r.read||r.read?.reader||!1===r.read?.enabled||l$e(t)&&o$v("read.reader",u$i(t),r));}function u$i(t){const e=t.ndimArray??0;if(e>1)return c$l(t);if(1===e)return a$j(t);if("type"in t&&d$e(t.type)){const e=t.type.prototype?.itemType?.Type,r=a$j("function"==typeof e?{type:e}:{types:e});return (e,n,o)=>{const i=r(e,n,o);return i?new t.type(i):i}}return s$k(t)}function s$k(t){return "type"in t?y$8(t.type):g$6(t.types)}function y$8(t){return t.prototype.read?(e,r,n)=>{if(null==e)return e;const o=typeof e;if("object"!==o)return void i$k.error(`Expected JSON value of type 'object' to deserialize type '${t.prototype.declaredClass}', but got '${o}'`);const p=new t;return p.read(e,n),p}:t.fromJSON}function f$i(t,e,r,n){return 0!==n&&Array.isArray(e)?e.map((e=>f$i(t,e,r,n-1))):t(e,void 0,r)}function c$l(t){const e=s$k(t),r=f$i.bind(null,e),n=t.ndimArray??0;return (t,e,o)=>{if(null==t)return t;t=r(t,o,n);let i=n,p=t;for(;i>0&&Array.isArray(p);)i--,p=p[0];if(void 0!==p)for(let r=0;r<i;r++)t=[t];return t}}function a$j(t){const e=s$k(t);return (t,r,n)=>{if(null==t)return t;if(Array.isArray(t)){const r=[];for(const o of t){const t=e(o,void 0,n);void 0!==t&&r.push(t);}return r}const o=e(t,void 0,n);return void 0!==o?[o]:void 0}}function d$e(t){if(!e$k(t))return !1;const e=t.prototype.itemType;return !(!e||!e.Type)&&("function"==typeof e.Type?m$d(e.Type):j$4(e.Type))}function l$e(t){return "types"in t?j$4(t.types):m$d(t.type)}function m$d(t){return !Array.isArray(t)&&(!!t&&t.prototype&&("read"in t.prototype||"fromJSON"in t||d$e(t)))}function j$4(t){for(const e in t.typeMap){if(!m$d(t.typeMap[e]))return !1}return !0}function g$6(t){let e=null;const n=t.errorContext??"type";return (o,p,u)=>{if(null==o)return o;const s=typeof o;if("object"!==s)return void i$k.error(`Expected JSON value of type 'object' to deserialize, but got '${s}'`);e||(e=v$5(t));const y=t.key;if("string"!=typeof y)return;const f=o[y],c=f?e[f]:t.defaultKeyValue?t.typeMap[t.defaultKeyValue]:void 0;if(!c){const t=`Type '${f||"unknown"}' is not supported`;return u&&u.messages&&o&&u.messages.push(new t$e(`${n}:unsupported`,t,{definition:o,context:u})),void i$k.error(t)}const a=new c;return a.read(o,u),a}}function v$5(t){const e={};for(const r in t.typeMap){const o=t.typeMap[r],i=o$q(o.prototype);if("function"==typeof t.key)continue;const p=i[t.key];if(!p)continue;p.json?.type&&Array.isArray(p.json.type)&&1===p.json.type.length&&"string"==typeof p.json.type[0]&&(e[p.json.type[0]]=o);const u=p.json?.write;if(!u||!u.writer){e[r]=o;continue}const s=u.target,y="string"==typeof s?s:t.key,f={};u.writer(r,f,y),f[y]&&(e[f[y]]=o);}return e}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$j(e){if(e.json||(e.json={}),o$j(e.json),n$g(e.json),r$e(e.json),e.json.origins)for(const t in e.json.origins)o$j(e.json.origins[t]),n$g(e.json.origins[t]),r$e(e.json.origins[t]);return !0}function r$e(e){e.name&&(e.read&&"object"==typeof e.read?void 0===e.read.source&&(e.read.source=e.name):e.read={source:e.name},e.write&&"object"==typeof e.write?void 0===e.write.target&&(e.write.target=e.name):e.write={target:e.name});}function o$j(e){"boolean"==typeof e.read?e.read={enabled:e.read}:"function"==typeof e.read?e.read={enabled:!0,reader:e.read}:e.read&&"object"==typeof e.read&&void 0===e.read.enabled&&(e.read.enabled=!0);}function n$g(e){"boolean"==typeof e.write?e.write={enabled:e.write}:"function"==typeof e.write?e.write={enabled:!0,writer:e.write}:e.write&&"object"==typeof e.write&&void 0===e.write.enabled&&(e.write.enabled=!0);}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function i$j(r,e){if(!e.write||e.write.writer||!1===e.write.enabled&&!e.write.overridePolicy)return;const t=r?.ndimArray??0;r&&(1===t||"type"in r&&e$k(r.type))?e.write.writer=a$i:t>1?e.write.writer=l$d(t):e.types?Array.isArray(e.types)?e.write.writer=f$h(e.types[0]):e.write.writer=o$i(e.types):e.write.writer=s$j;}function o$i(r){return (e,t,n,i)=>e?u$h(e,r,i)?s$j(e,t,n,i):void 0:s$j(e,t,n,i)}function u$h(t,n,i){for(const r in n.typeMap)if(t instanceof n.typeMap[r])return !0;if(i?.messages){const o=n.errorContext??"type",u=`Values of type '${("function"!=typeof n.key?t[n.key]:t.declaredClass)??"Unknown"}' cannot be written`;i&&i.messages&&t&&i.messages.push(new s$v(`${o}:unsupported`,u,{definition:t,context:i})),s$w.getLogger("esri.core.accessorSupport.extensions.serializableProperty.writer").error(u);}return !1}function f$h(r){return (e,t,n,i)=>{if(!e||!Array.isArray(e))return s$j(e,t,n,i);return s$j(e.filter((e=>u$h(e,r,i))),t,n,i)}}function s$j(r,e,n,i){o$v(n,p$e(r,i),e);}function p$e(r,e){return r&&"function"==typeof r.write?r.write({},e):r&&"function"==typeof r.toJSON?r.toJSON():"number"==typeof r?y$7(r):r}function y$7(r){return r===-1/0?-Number.MAX_VALUE:r===1/0?Number.MAX_VALUE:isNaN(r)?null:r}function a$i(r,e,n,i){let o;null===r?o=null:r&&"function"==typeof r.map?(o=r.map((r=>p$e(r,i))),"function"==typeof o.toArray&&(o=o.toArray())):o=[p$e(r,i)],o$v(n,o,e);}function c$k(r,e,t){return 0!==t&&Array.isArray(r)?r.map((r=>c$k(r,e,t-1))):p$e(r,e)}function l$d(r){return (e,n,i,o)=>{let u;if(null===e)u=null;else {u=c$k(e,o,r);let t=r,n=u;for(;t>0&&Array.isArray(n);)t--,n=n[0];if(void 0!==n)for(let r=0;r<t;r++)u=[u];}o$v(i,u,n);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function t$d(r,n){return a$h(r,"read",n)}function s$i(r,n){return a$h(r,"write",n)}function a$h(r,n,i){let e=r&&r.json;if(r&&r.json&&r.json.origins&&i){const o=i.origin&&r.json.origins[i.origin];o&&("any"===n||n in o)&&(e=o);}return e}function p$d(r){const n=y$6(r);if(r.json.origins)for(const e in r.json.origins){const t=r.json.origins[e],s=t.types?f$g(t):n;p$f(s,t,!1),t.types&&!t.write&&r.json.write&&r.json.write.enabled&&(t.write={...r.json.write}),i$j(s,t);}p$f(n,r.json,!0),i$j(n,r.json);}function y$6(r){return r.json.types?u$g(r.json):r.type?j$3(r):u$g(r)}function f$g(r){return r.type?j$3(r):u$g(r)}function j$3(n){if(!n.type)return;let i=0,e=n.type;for(;Array.isArray(e)&&!k$4(e);)e=e[0],i++;return {type:e,ndimArray:i}}function u$g(r){if(!r.types)return;let n=0,i=r.types;for(;Array.isArray(i);)i=i[0],n++;return {types:i,ndimArray:n}}function c$j(r){e$j(r)&&(n$h(r),p$d(r));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const i$i=new Set,n$f=new Set;function a$g(t){return o=>{o.prototype.declaredClass=t,l$c(o);const s=[],a=[];let c=o.prototype;for(;c;)c.hasOwnProperty("initialize")&&!i$i.has(c.initialize)&&(i$i.add(c.initialize),s.push(c.initialize)),c.hasOwnProperty("destroy")&&!n$f.has(c.destroy)&&(n$f.add(c.destroy),a.push(c.destroy)),c=Object.getPrototypeOf(c);i$i.clear(),n$f.clear();class p extends o{constructor(...t){if(super(...t),this.constructor===p&&"function"==typeof this.postscript){if(s.length&&Object.defineProperty(this,"initialize",{enumerable:!1,configurable:!0,value(){for(let e=s.length-1;e>=0;e--)s[e].call(this);}}),a.length){let t=!1;const r=this[o$t];Object.defineProperty(this,"destroy",{enumerable:!1,configurable:!0,value(){if(!t){t=!0,r.call(this);for(let e=0;e<a.length;e++)a[e].call(this);}}});}this.postscript(...t);}}}return p.__accessorMetadata__=o$q(o.prototype),p.prototype.declaredClass=t,p}}function c$i(e,t){return null==t.get?function(){const t=this.__accessor__.properties.get(e);if(void 0===t)return;i$o(t.observerObject);const r=this.__accessor__.store;return r.has(e)?r.get(e):t.metadata.value}:function(){const t=this.__accessor__.properties.get(e);if(void 0!==t)return t.getComputed()}}function l$c(e){const o=e.prototype,i=o$q(o),n={};for(const r of Object.getOwnPropertyNames(i)){const e=i[r];c$j(e),n[r]={enumerable:!0,configurable:!0,get:c$i(r,e),set(o){const s=this.__accessor__;if(void 0!==s){if(!Object.isFrozen(this)){if(s.initialized&&e.readOnly)throw new TypeError(`[accessor] cannot assign to read-only property '${r}' of ${this.declaredClass}`);if(s.lifecycle===I$2.CONSTRUCTED&&e.constructOnly)throw new TypeError(`[accessor] cannot assign to construct-only property '${r}' of ${this.declaredClass}`);s.set(r,o);}}else Object.defineProperty(this,r,{enumerable:!0,configurable:!0,writable:!0,value:o});}};}Object.defineProperties(e.prototype,n);}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var p$c,d$d;function y$5(t){if(null==t)return {value:t};if(Array.isArray(t))return {type:[t[0]],value:null};switch(typeof t){case"object":return t.constructor?.__accessorMetadata__||t instanceof Date?{type:t.constructor,value:t}:t;case"boolean":return {type:Boolean,value:t};case"string":return {type:String,value:t};case"number":return {type:Number,value:t};case"function":return {type:t,value:null};default:return}}const f$f=Symbol("Accessor-Handles"),m$c=Symbol("Accessor-Initialized");class v$4{static createSubclass(t={}){if(Array.isArray(t))throw new Error("Multi-inheritance unsupported since 4.16");const{properties:r,declaredClass:e,constructor:s}=t;delete t.declaredClass,delete t.properties,delete t.constructor;const o=this;class i extends o{constructor(...t){super(...t),this.inherited=null,s&&s.apply(this,t);}}o$q(i.prototype);for(const c in t){const r=t[c];i.prototype[c]="function"==typeof r?function(...t){const e=this.inherited;let s;this.inherited=function(...t){if(o.prototype[c])return o.prototype[c].apply(this,t)};try{s=r.apply(this,t);}catch(i){throw this.inherited=e,i}return this.inherited=e,s}:t[c];}for(const c in r){const t=y$5(r[c]);y$9(t)(i.prototype,c);}return a$g(e)(i)}constructor(...t){if(this[p$c]=null,this[d$d]=!1,this.constructor===v$4)throw new Error("[accessor] cannot instantiate Accessor. This can be fixed by creating a subclass of Accessor");Object.defineProperty(this,"__accessor__",{enumerable:!1,value:new O$2(this)}),t.length>0&&this.normalizeCtorArgs&&(this.__accessor__.ctorArgs=this.normalizeCtorArgs.apply(this,t));}postscript(t){const r=this.__accessor__,e=r.ctorArgs||t;r.initialize(),e&&(this.set(e),r.ctorArgs=null),r.constructed(),this.initialize(),this[m$c]=!0;}initialize(){}[o$t](){this[f$f]=a$t(this[f$f]);}destroy(){this.destroyed||(g$8(this),this.__accessor__.destroy());}get constructed(){return this.__accessor__&&this.__accessor__.initialized||!1}get initialized(){return this[m$c]}get destroyed(){return this.__accessor__&&this.__accessor__.destroyed||!1}commitProperty(t){this.get(t);}get(t){return o$r(this,t)}hasOwnProperty(t){return this.__accessor__?this.__accessor__.has(t):Object.prototype.hasOwnProperty.call(this,t)}keys(){return this.__accessor__?this.__accessor__.keys():[]}set(t,r){return t$m(this,t,r),this}watch(t,r,e){return T$2(this,t,r,e)}own(t){this.addHandles(t);}addHandles(r,s){let o=this[f$f];t$x(o)&&(o=this[f$f]=new t$q),o.add(r,s);}removeHandles(t){const r=this[f$f];t$x(r)||r.remove(t);}hasHandles(t){const r=this[f$f];return !!r$r(r)&&r.has(t)}_override(t,r){void 0===r?this.__accessor__.clearOverride(t):this.__accessor__.override(t,r);}_clearOverride(t){return this.__accessor__.clearOverride(t)}_overrideIfSome(t,r){null==r?this.__accessor__.clearOverride(t):this.__accessor__.override(t,r);}_isOverridden(t){return this.__accessor__.isOverridden(t)}notifyChange(t){this.__accessor__.notifyChange(t);}_get(t){return this.__accessor__.internalGet(t)}_set(t,r){return this.__accessor__.internalSet(t,r),this}}p$c=f$f,d$d=m$c;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class s$h{constructor(){this._values=new Map,this.multipleOriginsSupported=!1;}clone(e){const t=new s$h;return this._values.forEach(((s,r)=>{e&&e.has(r)||t.set(r,p$l(s.value),s.origin);})),t}get(i,e){e=this._normalizeOrigin(e);const s=this._values.get(i);return null==e||s?.origin===e?s?.value:void 0}originOf(i){return this._values.get(i)?.origin??r$j.USER}keys(i){i=this._normalizeOrigin(i);const e=[...this._values.keys()];return null==i?e:e.filter((e=>this._values.get(e)?.origin===i))}set(i,s,r){if((r=this._normalizeOrigin(r))===r$j.DEFAULTS){const e=this._values.get(i);if(e&&null!=e.origin&&e.origin>r)return}this._values.set(i,new t$c(s,r));}delete(i,e){null!=(e=this._normalizeOrigin(e))&&this._values.get(i)?.origin!==e||this._values.delete(i);}has(i,e){return null!=(e=this._normalizeOrigin(e))?this._values.get(i)?.origin===e:this._values.has(i)}forEach(i){this._values.forEach((({value:e},s)=>i(e,s)));}_normalizeOrigin(i){if(null!=i)return i===r$j.DEFAULTS?i:r$j.USER}}class t$c{constructor(i,e){this.value=i,this.origin=e;}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$i(e,r,n){r.keys().forEach((e=>{n.set(e,r.get(e),r$j.DEFAULTS);}));const o=e.metadatas;Object.keys(o).forEach((r=>{e.internalGet(r)&&n.set(r,e.internalGet(r),r$j.DEFAULTS);}));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function s$g(e,r,n){if(!e||!e.read||!1===e.read.enabled||!e.read.source)return !1;const o=e.read.source;if("string"==typeof o){if(o===r)return !0;if(o.includes(".")&&0===o.indexOf(r)&&s$s(o,n))return !0}else for(const s of o){if(s===r)return !0;if(s.includes(".")&&0===s.indexOf(r)&&s$s(s,n))return !0}return !1}function i$h(e){return e&&(!e.read||!1!==e.read.enabled&&!e.read.source)}function a$f(e,t,r,o,a){let f=t$d(t[r],a);i$h(f)&&(e[r]=!0);for(const i of Object.getOwnPropertyNames(t))f=t$d(t[i],a),s$g(f,r,o)&&(e[i]=!0);}function f$e(e,t,r,n){const s=r.metadatas,i=a$h(s[t],"any",n),a=i&&i.default;if(void 0===a)return;const f="function"==typeof a?a.call(e,t,n):a;void 0!==f&&r.set(t,f);}const c$h={origin:"service"};function u$f(t,o,s=c$h){if(!o||"object"!=typeof o)return;const i=e$t(t),u=i.metadatas,d={};for(const e of Object.getOwnPropertyNames(o))a$f(d,u,e,o,s);i.setDefaultOrigin(s.origin);for(const r of Object.getOwnPropertyNames(d)){const a=t$d(u[r],s).read,f=a&&a.source;let c;c=f&&"string"==typeof f?u$o(o,f):o[r],a&&a.reader&&(c=a.reader.call(t,c,o,s)),void 0!==c&&i.set(r,c);}if(!s||!s.ignoreDefaults){i.setDefaultOrigin("defaults");for(const e of Object.getOwnPropertyNames(u))d[e]||f$e(t,e,i,s);}i.setDefaultOrigin("user");}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function a$e(r,e,t,i,o){const n={};return e.write?.writer?.call(r,i,n,t,o),n}function f$d(r,i,s,u,l,a){if(!u||!u.write)return !1;const f=r.get(s);if(!l&&u.write.overridePolicy){const e=u.write.overridePolicy.call(r,f,s,a);void 0!==e&&(l=e);}if(l||(l=u.write),!l||!1===l.enabled)return !1;if((null===f&&!l.allowNull&&!l.writerEnsuresNonNull||void 0===f)&&l.isRequired){const i=new s$v("web-document-write:property-required",`Missing value for required property '${s}' on '${r.declaredClass}'`,{propertyName:s,target:r});return i&&a&&a.messages?a.messages.push(i):i&&!a&&s$w.getLogger("esri.core.accessorSupport.write").error(i.name,i.message),!1}if(void 0===f)return !1;if(null===f&&!l.allowNull&&!l.writerEnsuresNonNull)return !1;if((!i.store.multipleOriginsSupported||i.store.originOf(s)===r$j.DEFAULTS)&&p$b(r,s,a,u,f))return !1;if(!l.ignoreOrigin&&a&&a.origin&&i.store.multipleOriginsSupported){if(i.store.originOf(s)<t$o(a.origin))return !1}return !0}function p$b(e,t,i,o,n){const s=o.default;if(void 0===s)return !1;if(null!=o.defaultEquals)return o.defaultEquals(n);if("function"==typeof s){if(Array.isArray(n)){const o=s.call(e,t,i);return i$w(o,n)}return !1}return s===n}function g$5(r,e,t){if(r&&"function"==typeof r.toJSON&&(!r.toJSON.isDefaultToJSON||!r.write))return o$s(e,r.toJSON(t));const o=e$t(r),n=o.metadatas;for(const s in n){const p=s$i(n[s],t);if(!f$d(r,o,s,p,void 0,t))continue;const c=r.get(s),g=a$e(r,p,p.write&&"string"==typeof p.write.target?p.write.target:s,c,t);Object.keys(g).length>0&&(e=o$s(e,g),t?.resources?.pendingOperations?.length&&t.resources.pendingOperations.push(Promise.all(t.resources.pendingOperations).then((()=>o$s(e,g,(()=>"replace-arrays"))))),t&&t.writtenProperties&&t.writtenProperties.push({target:r,propName:s,oldOrigin:c$q(o.store.originOf(s)),newOrigin:t.origin}));}return e}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const u$e=t=>{let u=class extends t{constructor(...r){super(...r);const t=N$3(e$t(this)),i=t.store,p=new s$h;t.store=p,e$i(t,i,p);}read(r,t){u$f(this,r,t);}write(r={},t){return g$5(this,r,t)}toJSON(r){return this.write({},r)}static fromJSON(r,t){return n$e.call(this,r,t)}};return u=e$u([a$g("esri.core.JSONSupport")],u),u.prototype.toJSON.isDefaultToJSON=!0,u};function n$e(r,t){if(!r)return null;if(r.declaredClass)throw new Error("JSON object is already hydrated");const s=new this;return s.read(r,t),s}let l$b=class extends(u$e(v$4)){};l$b=e$u([a$g("esri.core.JSONSupport")],l$b);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function o$h(o,e,t){let a,c;return void 0===e||Array.isArray(e)?(c=o,t=e,a=[void 0]):(c=e,a=Array.isArray(o)?o:[o]),(o,e)=>{const d=o.constructor.prototype;a.forEach((a=>{const s=d$f(o,a,c);s.read&&"object"==typeof s.read||(s.read={}),s.read.reader=d[e],t&&(s.read.source=(s.read.source||[]).concat(t));}));}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class s$f{constructor(s,o={ignoreUnknown:!1,useNumericKeys:!1}){this._jsonToAPI=s,this._options=o,this.apiValues=[],this.jsonValues=[],this._apiToJSON=this._invertMap(s),this.apiValues=this._getKeysSorted(this._apiToJSON),this.jsonValues=this._getKeysSorted(this._jsonToAPI),this.read=t=>this.fromJSON(t),this.write=(s,o,i)=>{const n=this.toJSON(s);void 0!==n&&o$v(i,n,o);},this.write.isJSONMapWriter=!0;}toJSON(t){if(null==t)return null;if(this._apiToJSON.hasOwnProperty(t)){const s=this._apiToJSON[t];return this._options.useNumericKeys?+s:s}return this._options.ignoreUnknown?void 0:t}fromJSON(t){return null!=t&&this._jsonToAPI.hasOwnProperty(t)?this._jsonToAPI[t]:this._options.ignoreUnknown?void 0:t}_invertMap(t){const s={};for(const o in t)s[t[o]]=o;return s}_getKeysSorted(t){const s=[];for(const o in t)s.push(o);return s.sort(),s}}function o$g(){return function(t,o){return new s$f(t,{ignoreUnknown:!0,...o})}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class i$g{constructor(i,s,t,e){this.semiMajorAxis=i,this.flattening=s,this.outerAtmosphereRimWidth=t;const h=1-this.flattening;this.semiMinorAxis=this.semiMajorAxis*h,this.halfSemiMajorAxis=this.semiMajorAxis/2,this.halfCircumference=Math.PI*this.semiMajorAxis,this.metersPerDegree=this.halfCircumference/180,this.inverseFlattening=1/(1-this.flattening)-1,this.eccentricitySquared=e||2*this.flattening-this.flattening*this.flattening,this.meanRadiusSemiAxes=(2*this.semiMajorAxis+this.semiMinorAxis)/3;}get radius(){return this.semiMajorAxis}}const s$e=new i$g(6378137,1/298.257223563,3e5,.006694379990137799),t$b=new i$g(3396190,1/169.8944472236118,23e4),e$h=new i$g(1737400,0,0);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var S$2;!function(S){S[S.CGCS2000=4490]="CGCS2000",S[S.GCSMARS2000=104971]="GCSMARS2000",S[S.GCSMARS2000_SPHERE=104905]="GCSMARS2000_SPHERE",S[S.GCSMOON2000=104903]="GCSMOON2000";}(S$2||(S$2={}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let o$f;const r$d={values:[1,.3048,.3048006096012192,.3047972654,.9143917962,.201166195164,.9143984146160287,.3047994715386762,20.11676512155263,20.11678249437587,.9143985307444408,.91439523,.3047997101815088,20.1168,20.116756,5e4,15e4],units:["Meter","Foot","Foot_US","Foot_Clarke","Yard_Clarke","Link_Clarke","Yard_Sears","Foot_Sears","Chain_Sears","Chain_Benoit_1895_B","Yard_Indian","Yard_Indian_1937","Foot_Gold_Coast","Chain","Chain_Sears_1922_Truncated","50_Kilometers","150_Kilometers"],2066:5,2136:12,2155:2,2157:0,2158:0,2159:12,2160:12,2204:2,2219:0,2220:0,2254:2,2255:2,2256:1,2265:1,2266:1,2267:2,2268:2,2269:1,2270:1,2271:2,2272:2,2273:1,2294:0,2295:0,2314:3,2899:2,2900:2,2901:1,2909:1,2910:1,2911:2,2912:2,2913:1,2914:1,2992:1,2993:0,2994:1,3080:1,3089:2,3090:0,3091:2,3102:2,3141:0,3142:0,3167:14,3359:2,3360:0,3361:1,3362:0,3363:2,3364:0,3365:2,3366:3,3404:2,3405:0,3406:0,3407:3,3439:0,3440:0,3479:1,3480:0,3481:1,3482:0,3483:1,3484:0,3485:2,3486:0,3487:2,3488:0,3489:0,3490:2,3491:0,3492:2,3493:0,3494:2,3495:0,3496:2,3497:0,3498:2,3499:0,3500:2,3501:0,3502:2,3503:0,3504:2,3505:0,3506:2,3507:0,3508:2,3509:0,3510:2,3511:0,3512:2,3513:0,3514:0,3515:2,3516:0,3517:2,3518:0,3519:2,3520:0,3521:2,3522:0,3523:2,3524:0,3525:2,3526:0,3527:2,3528:0,3529:2,3530:0,3531:2,3532:0,3533:2,3534:0,3535:2,3536:0,3537:2,3538:0,3539:2,3540:0,3541:2,3542:0,3543:2,3544:0,3545:2,3546:0,3547:2,3548:0,3549:2,3550:0,3551:2,3552:0,3553:2,3582:2,3583:0,3584:2,3585:0,3586:2,3587:0,3588:1,3589:0,3590:1,3591:0,3592:0,3593:1,3598:2,3599:0,3600:2,3605:1,3606:0,3607:0,3608:2,3609:0,3610:2,3611:0,3612:2,3613:0,3614:2,3615:0,3616:2,3617:0,3618:2,3619:0,3620:2,3621:0,3622:2,3623:0,3624:2,3625:0,3626:2,3627:0,3628:2,3629:0,3630:2,3631:0,3632:2,3633:0,3634:1,3635:0,3636:1,3640:2,3641:0,3642:2,3643:0,3644:1,3645:0,3646:1,3647:0,3648:1,3649:0,3650:2,3651:0,3652:2,3653:0,3654:2,3655:0,3656:1,3657:0,3658:2,3659:0,3660:2,3661:0,3662:2,3663:0,3664:2,3668:2,3669:0,3670:2,3671:0,3672:2,3673:0,3674:2,3675:0,3676:1,3677:2,3678:0,3679:1,3680:2,3681:0,3682:1,3683:2,3684:0,3685:0,3686:2,3687:0,3688:2,3689:0,3690:2,3691:0,3692:2,3696:2,3697:0,3698:2,3699:0,3700:2,3793:0,3794:0,3812:0,3854:0,3857:0,3920:0,3978:0,3979:0,3991:2,3992:2,4026:0,4037:0,4038:0,4071:0,4082:0,4083:0,4087:0,4088:0,4217:2,4414:0,4415:0,4417:0,4434:0,4437:0,4438:2,4439:2,4462:0,4467:0,4471:0,4474:0,4559:0,4647:0,4822:0,4826:0,4839:0,5018:0,5041:0,5042:0,5048:0,5167:0,5168:0,5221:0,5223:0,5234:0,5235:0,5243:0,5247:0,5266:0,5316:0,5320:0,5321:0,5325:0,5337:0,5361:0,5362:0,5367:0,5382:0,5383:0,5396:0,5456:0,5457:0,5469:0,5472:4,5490:0,5513:0,5514:0,5523:0,5559:0,5588:1,5589:3,5596:0,5627:0,5629:0,5641:0,5643:0,5644:0,5646:2,5654:2,5655:2,5659:0,5700:0,5825:0,5836:0,5837:0,5839:0,5842:0,5844:0,5858:0,5879:0,5880:0,5887:0,5890:0,6128:1,6129:1,6141:1,6204:0,6210:0,6211:0,6307:0,6312:0,6316:0,6362:0,6391:1,6405:1,6406:0,6407:1,6408:0,6409:1,6410:0,6411:2,6412:0,6413:2,6414:0,6415:0,6416:2,6417:0,6418:2,6419:0,6420:2,6421:0,6422:2,6423:0,6424:2,6425:0,6426:2,6427:0,6428:2,6429:0,6430:2,6431:0,6432:2,6433:0,6434:2,6435:0,6436:2,6437:0,6438:2,6439:0,6440:0,6441:2,6442:0,6443:2,6444:0,6445:2,6446:0,6447:2,6448:0,6449:2,6450:0,6451:2,6452:0,6453:2,6454:0,6455:2,6456:0,6457:2,6458:0,6459:2,6460:0,6461:2,6462:0,6463:2,6464:0,6465:2,6466:0,6467:2,6468:0,6469:2,6470:0,6471:2,6472:0,6473:2,6474:0,6475:2,6476:0,6477:2,6478:0,6479:2,6484:2,6485:0,6486:2,6487:0,6488:2,6489:0,6490:2,6491:0,6492:2,6493:0,6494:1,6495:0,6496:1,6497:0,6498:0,6499:1,6500:0,6501:2,6502:0,6503:2,6504:0,6505:2,6506:0,6507:2,6508:0,6509:0,6510:2,6515:1,6516:0,6518:0,6519:2,6520:0,6521:2,6522:0,6523:2,6524:0,6525:2,6526:0,6527:2,6528:0,6529:2,6530:0,6531:2,6532:0,6533:2,6534:0,6535:2,6536:0,6537:2,6538:0,6539:2,6540:0,6541:2,6542:0,6543:2,6544:0,6545:1,6546:0,6547:1,6548:0,6549:2,6550:0,6551:2,6552:0,6553:2,6554:0,6555:2,6556:0,6557:1,6558:0,6559:1,6560:0,6561:1,6562:0,6563:2,6564:0,6565:2,6566:0,6567:0,6568:2,6569:0,6570:1,6571:0,6572:2,6573:0,6574:2,6575:0,6576:2,6577:0,6578:2,6582:2,6583:0,6584:2,6585:0,6586:2,6587:0,6588:2,6589:0,6590:2,6591:0,6592:0,6593:2,6594:0,6595:2,6596:0,6597:2,6598:0,6599:2,6600:0,6601:2,6602:0,6603:2,6605:2,6606:0,6607:2,6608:0,6609:2,6610:0,6611:0,6612:2,6613:0,6614:2,6615:0,6616:2,6617:0,6618:2,6633:2,6646:0,6703:0,6784:0,6785:1,6786:0,6787:1,6788:0,6789:1,6790:0,6791:1,6792:0,6793:1,6794:0,6795:1,6796:0,6797:1,6798:0,6799:1,6800:0,6801:1,6802:0,6803:1,6804:0,6805:1,6806:0,6807:1,6808:0,6809:1,6810:0,6811:1,6812:0,6813:1,6814:0,6815:1,6816:0,6817:1,6818:0,6819:1,6820:0,6821:1,6822:0,6823:1,6824:0,6825:1,6826:0,6827:1,6828:0,6829:1,6830:0,6831:1,6832:0,6833:1,6834:0,6835:1,6836:0,6837:1,6838:0,6839:1,6840:0,6841:1,6842:0,6843:1,6844:0,6845:1,6846:0,6847:1,6848:0,6849:1,6850:0,6851:1,6852:0,6853:1,6854:0,6855:1,6856:0,6857:1,6858:0,6859:1,6860:0,6861:1,6862:0,6863:1,6867:0,6868:1,6870:0,6875:0,6876:0,6879:0,6880:2,6884:0,6885:1,6886:0,6887:1,6915:0,6922:0,6923:2,6924:0,6925:2,6962:0,6984:0,6991:0,7128:2,7131:0,7132:2,7142:0,7257:0,7258:2,7259:0,7260:2,7261:0,7262:2,7263:0,7264:2,7265:0,7266:2,7267:0,7268:2,7269:0,7270:2,7271:0,7272:2,7273:0,7274:2,7275:0,7276:2,7277:0,7278:2,7279:0,7280:2,7281:0,7282:2,7283:0,7284:2,7285:0,7286:2,7287:0,7288:2,7289:0,7290:2,7291:0,7292:2,7293:0,7294:2,7295:0,7296:2,7297:0,7298:2,7299:0,7300:2,7301:0,7302:2,7303:0,7304:2,7305:0,7306:2,7307:0,7308:2,7309:0,7310:2,7311:0,7312:2,7313:0,7314:2,7315:0,7316:2,7317:0,7318:2,7319:0,7320:2,7321:0,7322:2,7323:0,7324:2,7325:0,7326:2,7327:0,7328:2,7329:0,7330:2,7331:0,7332:2,7333:0,7334:2,7335:0,7336:2,7337:0,7338:2,7339:0,7340:2,7341:0,7342:2,7343:0,7344:2,7345:0,7346:2,7347:0,7348:2,7349:0,7350:2,7351:0,7352:2,7353:0,7354:2,7355:0,7356:2,7357:0,7358:2,7359:0,7360:2,7361:0,7362:2,7363:0,7364:2,7365:0,7366:2,7367:0,7368:2,7369:0,7370:2,7877:0,7878:0,7882:0,7883:0,7887:0,7899:0,7991:0,7992:0,8035:2,8036:2,8058:0,8059:0,8082:0,8083:0,8088:0,8090:0,8091:2,8092:0,8093:2,8095:0,8096:2,8097:0,8098:2,8099:0,8100:2,8101:0,8102:2,8103:0,8104:2,8105:0,8106:2,8107:0,8108:2,8109:0,8110:2,8111:0,8112:2,8113:0,8114:2,8115:0,8116:2,8117:0,8118:2,8119:0,8120:2,8121:0,8122:2,8123:0,8124:2,8125:0,8126:2,8127:0,8128:2,8129:0,8130:2,8131:0,8132:2,8133:0,8134:2,8135:0,8136:2,8137:0,8138:2,8139:0,8140:2,8141:0,8142:2,8143:0,8144:2,8145:0,8146:2,8147:0,8148:2,8149:0,8150:2,8151:0,8152:2,8153:0,8154:2,8155:0,8156:2,8157:0,8158:2,8159:0,8160:2,8161:0,8162:2,8163:0,8164:2,8165:0,8166:2,8167:0,8168:2,8169:0,8170:2,8171:0,8172:2,8173:0,8177:2,8179:0,8180:2,8181:0,8182:2,8184:0,8185:2,8187:0,8189:2,8191:0,8193:2,8196:0,8197:2,8198:0,8200:2,8201:0,8202:2,8203:0,8204:2,8205:0,8206:2,8207:0,8208:2,8209:0,8210:2,8212:0,8213:2,8214:0,8216:2,8218:0,8220:2,8222:0,8224:2,8225:0,8226:2,8311:0,8312:1,8313:0,8314:1,8315:0,8316:1,8317:0,8318:1,8319:0,8320:1,8321:0,8322:1,8323:0,8324:1,8325:0,8326:1,8327:0,8328:1,8329:0,8330:1,8331:0,8332:1,8333:0,8334:1,8335:0,8336:1,8337:0,8338:1,8339:0,8340:1,8341:0,8342:1,8343:0,8344:1,8345:0,8346:1,8347:0,8348:1,8352:0,8353:0,8379:0,8380:2,8381:0,8382:2,8383:0,8384:2,8385:0,8387:2,8391:0,8395:0,8433:0,8441:0,8455:0,8456:0,8531:2,8682:0,8686:0,8687:0,8692:0,8693:0,8826:0,8903:0,8950:0,8951:0,9039:0,9040:0,9141:0,9149:0,9150:0,9191:0,9221:0,9222:0,9249:0,9250:0,9252:0,9254:0,9265:0,9284:0,9285:0,9300:0,9354:0,9367:0,9373:0,9377:0,9387:0,9391:0,9456:0,9473:0,9498:0,9674:0,9678:0,9680:0,9709:0,9712:0,9713:0,9716:0,9741:0,9748:2,9749:2,9761:0,9766:0,9793:0,9794:0,9869:0,9874:0,9875:0,9880:0,9943:0,9945:0,9947:0,9967:0,9972:0,9977:0,20042:0,20050:1,20499:0,20538:0,20539:0,20790:0,20791:0,21291:0,21292:0,21500:0,21817:0,21818:0,22032:0,22033:0,22091:0,22092:0,22239:0,22240:0,22332:0,22337:0,22338:0,22391:0,22392:0,22639:0,22700:0,22739:0,22770:0,22780:0,22832:0,23090:0,23095:0,23239:0,23240:0,23433:0,23700:0,24047:0,24048:0,24100:3,24200:0,24305:0,24306:0,24382:10,24383:0,24500:0,24547:0,24548:0,24571:9,24600:0,25e3:0,25231:0,25884:0,25932:0,26237:0,26331:0,26332:0,26432:0,26591:0,26592:0,26632:0,26692:0,27120:0,27200:0,27291:6,27292:6,27429:0,27492:0,27493:0,27500:0,27700:0,28232:0,28600:0,28991:0,28992:0,29100:0,29101:0,29220:0,29221:0,29333:0,29635:0,29636:0,29701:0,29738:0,29739:0,29849:0,29850:0,29871:8,29872:7,29873:0,29874:0,30200:5,30339:0,30340:0,30591:0,30592:0,30791:0,30792:0,30800:0,31028:0,31121:0,31154:0,31170:0,31171:0,31370:0,31528:0,31529:0,31600:0,31700:0,31838:0,31839:0,31900:0,31901:0,32061:0,32062:0,32098:0,32099:2,32100:0,32104:0,32161:0,32766:0,53048:0,53049:0,54090:0,54091:0,65061:2,65062:2,65161:0,65163:0,102041:2,102064:11,102068:15,102069:16,102118:2,102119:1,102120:2,102121:2,102217:2,102218:0,102219:2,102220:2,102378:1,102379:1,102380:0,102381:1,102589:2,102599:2,102600:2,102604:2,102647:0,102704:2,102705:2,102706:0,102731:0,102732:0,102759:1,102760:1,102761:2,102762:0,102763:2,102764:0,102765:0,102766:2,102970:1,102974:2,102993:0,102994:0,102995:2,102996:2,103015:0,103016:2,103017:0,103018:2,103025:0,103026:0,103027:2,103028:2,103035:0,103036:0,103037:2,103038:2,103039:0,103040:0,103041:2,103042:2,103043:0,103044:0,103045:2,103046:2,103047:0,103048:0,103049:2,103050:2,103051:0,103052:2,103053:0,103054:2,103055:0,103056:2,103057:0,103058:0,103059:2,103060:2,103061:0,103062:0,103063:2,103064:2,103069:2,103070:0,103071:0,103072:2,103073:2,103086:0,103087:0,103088:2,103089:2,103094:1,103095:0,103096:2,103103:0,103104:2,103105:0,103106:2,103121:0,103122:2,103123:0,103124:0,103125:1,103126:1,103127:0,103128:0,103129:2,103130:2,103131:0,103132:0,103133:2,103134:2,103135:0,103136:0,103137:1,103138:1,103139:0,103140:2,103141:0,103142:2,103143:0,103144:2,103145:0,103146:1,103147:0,103148:0,103149:2,103150:2,103151:0,103152:2,103172:0,103173:2,103174:0,103175:0,103176:2,103177:2,103178:0,103179:0,103180:2,103181:2,103182:0,103183:0,103184:2,103185:2,103228:0,103229:0,103230:2,103231:2,103250:0,103251:2,103252:0,103253:2,103260:0,103261:0,103262:2,103263:2,103270:0,103271:0,103272:2,103273:2,103274:0,103275:0,103276:2,103277:2,103278:0,103279:0,103280:2,103281:2,103282:0,103283:0,103284:2,103285:2,103286:0,103287:2,103288:0,103289:2,103290:0,103291:2,103292:0,103293:0,103294:2,103295:2,103296:0,103297:0,103298:2,103299:2,103376:2,103377:0,103378:0,103379:2,103380:2,103393:0,103394:0,103395:2,103396:2,103472:0,103473:1,103474:0,103475:2,103482:0,103483:2,103484:0,103485:2,103500:0,103501:2,103502:0,103503:0,103504:1,103505:1,103506:0,103507:0,103508:2,103509:2,103510:0,103511:0,103512:2,103513:2,103514:0,103515:2,103516:0,103517:2,103518:0,103519:2,103520:0,103521:1,103522:0,103523:0,103524:2,103525:2,103526:0,103527:2,103561:2,103562:2,103563:0,103564:0,103565:2,103566:2,103567:0,103568:0,103569:2,103570:2,103584:0,103585:2,103586:0,103587:2,103588:1,103589:0,103590:2,103591:1,103592:0,103593:2,103594:1,103695:2};for(o$f=2e3;o$f<=2045;o$f++)r$d[o$f]=0;for(o$f=2056;o$f<=2065;o$f++)r$d[o$f]=0;for(o$f=2067;o$f<=2135;o$f++)r$d[o$f]=0;for(o$f=2137;o$f<=2154;o$f++)r$d[o$f]=0;for(o$f=2161;o$f<=2170;o$f++)r$d[o$f]=0;for(o$f=2172;o$f<=2193;o$f++)r$d[o$f]=0;for(o$f=2195;o$f<=2198;o$f++)r$d[o$f]=0;for(o$f=2200;o$f<=2203;o$f++)r$d[o$f]=0;for(o$f=2205;o$f<=2217;o$f++)r$d[o$f]=0;for(o$f=2222;o$f<=2224;o$f++)r$d[o$f]=1;for(o$f=2225;o$f<=2250;o$f++)r$d[o$f]=2;for(o$f=2251;o$f<=2253;o$f++)r$d[o$f]=1;for(o$f=2257;o$f<=2264;o$f++)r$d[o$f]=2;for(o$f=2274;o$f<=2279;o$f++)r$d[o$f]=2;for(o$f=2280;o$f<=2282;o$f++)r$d[o$f]=1;for(o$f=2283;o$f<=2289;o$f++)r$d[o$f]=2;for(o$f=2290;o$f<=2292;o$f++)r$d[o$f]=0;for(o$f=2308;o$f<=2313;o$f++)r$d[o$f]=0;for(o$f=2315;o$f<=2491;o$f++)r$d[o$f]=0;for(o$f=2494;o$f<=2866;o$f++)r$d[o$f]=0;for(o$f=2867;o$f<=2869;o$f++)r$d[o$f]=1;for(o$f=2870;o$f<=2888;o$f++)r$d[o$f]=2;for(o$f=2891;o$f<=2895;o$f++)r$d[o$f]=2;for(o$f=2896;o$f<=2898;o$f++)r$d[o$f]=1;for(o$f=2902;o$f<=2908;o$f++)r$d[o$f]=2;for(o$f=2915;o$f<=2920;o$f++)r$d[o$f]=2;for(o$f=2921;o$f<=2923;o$f++)r$d[o$f]=1;for(o$f=2924;o$f<=2930;o$f++)r$d[o$f]=2;for(o$f=2931;o$f<=2962;o$f++)r$d[o$f]=0;for(o$f=2964;o$f<=2968;o$f++)r$d[o$f]=2;for(o$f=2969;o$f<=2973;o$f++)r$d[o$f]=0;for(o$f=2975;o$f<=2991;o$f++)r$d[o$f]=0;for(o$f=2995;o$f<=3051;o$f++)r$d[o$f]=0;for(o$f=3054;o$f<=3079;o$f++)r$d[o$f]=0;for(o$f=3081;o$f<=3088;o$f++)r$d[o$f]=0;for(o$f=3092;o$f<=3101;o$f++)r$d[o$f]=0;for(o$f=3106;o$f<=3138;o$f++)r$d[o$f]=0;for(o$f=3146;o$f<=3151;o$f++)r$d[o$f]=0;for(o$f=3153;o$f<=3166;o$f++)r$d[o$f]=0;for(o$f=3168;o$f<=3172;o$f++)r$d[o$f]=0;for(o$f=3174;o$f<=3203;o$f++)r$d[o$f]=0;for(o$f=3294;o$f<=3358;o$f++)r$d[o$f]=0;for(o$f=3367;o$f<=3403;o$f++)r$d[o$f]=0;for(o$f=3408;o$f<=3416;o$f++)r$d[o$f]=0;for(o$f=3417;o$f<=3438;o$f++)r$d[o$f]=2;for(o$f=3441;o$f<=3446;o$f++)r$d[o$f]=2;for(o$f=3447;o$f<=3450;o$f++)r$d[o$f]=0;for(o$f=3451;o$f<=3459;o$f++)r$d[o$f]=2;for(o$f=3460;o$f<=3478;o$f++)r$d[o$f]=0;for(o$f=3554;o$f<=3559;o$f++)r$d[o$f]=0;for(o$f=3560;o$f<=3570;o$f++)r$d[o$f]=2;for(o$f=3571;o$f<=3581;o$f++)r$d[o$f]=0;for(o$f=3594;o$f<=3597;o$f++)r$d[o$f]=0;for(o$f=3601;o$f<=3604;o$f++)r$d[o$f]=0;for(o$f=3637;o$f<=3639;o$f++)r$d[o$f]=0;for(o$f=3665;o$f<=3667;o$f++)r$d[o$f]=0;for(o$f=3693;o$f<=3695;o$f++)r$d[o$f]=0;for(o$f=3701;o$f<=3727;o$f++)r$d[o$f]=0;for(o$f=3728;o$f<=3739;o$f++)r$d[o$f]=2;for(o$f=3740;o$f<=3751;o$f++)r$d[o$f]=0;for(o$f=3753;o$f<=3760;o$f++)r$d[o$f]=2;for(o$f=3761;o$f<=3773;o$f++)r$d[o$f]=0;for(o$f=3775;o$f<=3777;o$f++)r$d[o$f]=0;for(o$f=3779;o$f<=3781;o$f++)r$d[o$f]=0;for(o$f=3783;o$f<=3785;o$f++)r$d[o$f]=0;for(o$f=3788;o$f<=3791;o$f++)r$d[o$f]=0;for(o$f=3797;o$f<=3802;o$f++)r$d[o$f]=0;for(o$f=3814;o$f<=3816;o$f++)r$d[o$f]=0;for(o$f=3825;o$f<=3829;o$f++)r$d[o$f]=0;for(o$f=3832;o$f<=3841;o$f++)r$d[o$f]=0;for(o$f=3844;o$f<=3852;o$f++)r$d[o$f]=0;for(o$f=3873;o$f<=3885;o$f++)r$d[o$f]=0;for(o$f=3890;o$f<=3893;o$f++)r$d[o$f]=0;for(o$f=3907;o$f<=3912;o$f++)r$d[o$f]=0;for(o$f=3942;o$f<=3950;o$f++)r$d[o$f]=0;for(o$f=3968;o$f<=3970;o$f++)r$d[o$f]=0;for(o$f=3973;o$f<=3976;o$f++)r$d[o$f]=0;for(o$f=3986;o$f<=3989;o$f++)r$d[o$f]=0;for(o$f=3994;o$f<=3997;o$f++)r$d[o$f]=0;for(o$f=4048;o$f<=4051;o$f++)r$d[o$f]=0;for(o$f=4056;o$f<=4063;o$f++)r$d[o$f]=0;for(o$f=4093;o$f<=4096;o$f++)r$d[o$f]=0;for(o$f=4390;o$f<=4398;o$f++)r$d[o$f]=0;for(o$f=4399;o$f<=4413;o$f++)r$d[o$f]=2;for(o$f=4418;o$f<=4433;o$f++)r$d[o$f]=2;for(o$f=4455;o$f<=4457;o$f++)r$d[o$f]=2;for(o$f=4484;o$f<=4489;o$f++)r$d[o$f]=0;for(o$f=4491;o$f<=4554;o$f++)r$d[o$f]=0;for(o$f=4568;o$f<=4589;o$f++)r$d[o$f]=0;for(o$f=4652;o$f<=4656;o$f++)r$d[o$f]=0;for(o$f=4766;o$f<=4800;o$f++)r$d[o$f]=0;for(o$f=5014;o$f<=5016;o$f++)r$d[o$f]=0;for(o$f=5069;o$f<=5072;o$f++)r$d[o$f]=0;for(o$f=5105;o$f<=5130;o$f++)r$d[o$f]=0;for(o$f=5173;o$f<=5188;o$f++)r$d[o$f]=0;for(o$f=5253;o$f<=5259;o$f++)r$d[o$f]=0;for(o$f=5269;o$f<=5275;o$f++)r$d[o$f]=0;for(o$f=5292;o$f<=5311;o$f++)r$d[o$f]=0;for(o$f=5329;o$f<=5331;o$f++)r$d[o$f]=0;for(o$f=5343;o$f<=5349;o$f++)r$d[o$f]=0;for(o$f=5355;o$f<=5357;o$f++)r$d[o$f]=0;for(o$f=5387;o$f<=5389;o$f++)r$d[o$f]=0;for(o$f=5459;o$f<=5463;o$f++)r$d[o$f]=0;for(o$f=5479;o$f<=5482;o$f++)r$d[o$f]=0;for(o$f=5518;o$f<=5520;o$f++)r$d[o$f]=0;for(o$f=5530;o$f<=5539;o$f++)r$d[o$f]=0;for(o$f=5550;o$f<=5552;o$f++)r$d[o$f]=0;for(o$f=5562;o$f<=5583;o$f++)r$d[o$f]=0;for(o$f=5623;o$f<=5625;o$f++)r$d[o$f]=2;for(o$f=5631;o$f<=5639;o$f++)r$d[o$f]=0;for(o$f=5649;o$f<=5653;o$f++)r$d[o$f]=0;for(o$f=5663;o$f<=5680;o$f++)r$d[o$f]=0;for(o$f=5682;o$f<=5685;o$f++)r$d[o$f]=0;for(o$f=5875;o$f<=5877;o$f++)r$d[o$f]=0;for(o$f=5896;o$f<=5899;o$f++)r$d[o$f]=0;for(o$f=5921;o$f<=5940;o$f++)r$d[o$f]=0;for(o$f=6050;o$f<=6125;o$f++)r$d[o$f]=0;for(o$f=6244;o$f<=6275;o$f++)r$d[o$f]=0;for(o$f=6328;o$f<=6348;o$f++)r$d[o$f]=0;for(o$f=6350;o$f<=6356;o$f++)r$d[o$f]=0;for(o$f=6366;o$f<=6372;o$f++)r$d[o$f]=0;for(o$f=6381;o$f<=6387;o$f++)r$d[o$f]=0;for(o$f=6393;o$f<=6404;o$f++)r$d[o$f]=0;for(o$f=6480;o$f<=6483;o$f++)r$d[o$f]=0;for(o$f=6511;o$f<=6514;o$f++)r$d[o$f]=0;for(o$f=6579;o$f<=6581;o$f++)r$d[o$f]=0;for(o$f=6619;o$f<=6624;o$f++)r$d[o$f]=0;for(o$f=6625;o$f<=6627;o$f++)r$d[o$f]=2;for(o$f=6628;o$f<=6632;o$f++)r$d[o$f]=0;for(o$f=6634;o$f<=6637;o$f++)r$d[o$f]=0;for(o$f=6669;o$f<=6692;o$f++)r$d[o$f]=0;for(o$f=6707;o$f<=6709;o$f++)r$d[o$f]=0;for(o$f=6720;o$f<=6723;o$f++)r$d[o$f]=0;for(o$f=6732;o$f<=6738;o$f++)r$d[o$f]=0;for(o$f=6931;o$f<=6933;o$f++)r$d[o$f]=0;for(o$f=6956;o$f<=6959;o$f++)r$d[o$f]=0;for(o$f=7005;o$f<=7007;o$f++)r$d[o$f]=0;for(o$f=7057;o$f<=7070;o$f++)r$d[o$f]=2;for(o$f=7074;o$f<=7082;o$f++)r$d[o$f]=0;for(o$f=7109;o$f<=7118;o$f++)r$d[o$f]=0;for(o$f=7119;o$f<=7127;o$f++)r$d[o$f]=1;for(o$f=7374;o$f<=7376;o$f++)r$d[o$f]=0;for(o$f=7528;o$f<=7586;o$f++)r$d[o$f]=0;for(o$f=7587;o$f<=7645;o$f++)r$d[o$f]=2;for(o$f=7692;o$f<=7696;o$f++)r$d[o$f]=0;for(o$f=7755;o$f<=7787;o$f++)r$d[o$f]=0;for(o$f=7791;o$f<=7795;o$f++)r$d[o$f]=0;for(o$f=7799;o$f<=7801;o$f++)r$d[o$f]=0;for(o$f=7803;o$f<=7805;o$f++)r$d[o$f]=0;for(o$f=7825;o$f<=7831;o$f++)r$d[o$f]=0;for(o$f=7845;o$f<=7859;o$f++)r$d[o$f]=0;for(o$f=8013;o$f<=8032;o$f++)r$d[o$f]=0;for(o$f=8065;o$f<=8068;o$f++)r$d[o$f]=1;for(o$f=8518;o$f<=8529;o$f++)r$d[o$f]=2;for(o$f=8533;o$f<=8536;o$f++)r$d[o$f]=2;for(o$f=8538;o$f<=8540;o$f++)r$d[o$f]=2;for(o$f=8677;o$f<=8679;o$f++)r$d[o$f]=0;for(o$f=8836;o$f<=8840;o$f++)r$d[o$f]=0;for(o$f=8857;o$f<=8859;o$f++)r$d[o$f]=0;for(o$f=8908;o$f<=8910;o$f++)r$d[o$f]=0;for(o$f=9154;o$f<=9159;o$f++)r$d[o$f]=0;for(o$f=9205;o$f<=9218;o$f++)r$d[o$f]=0;for(o$f=9271;o$f<=9273;o$f++)r$d[o$f]=0;for(o$f=9295;o$f<=9297;o$f++)r$d[o$f]=0;for(o$f=9356;o$f<=9360;o$f++)r$d[o$f]=0;for(o$f=9404;o$f<=9407;o$f++)r$d[o$f]=0;for(o$f=9476;o$f<=9482;o$f++)r$d[o$f]=0;for(o$f=9487;o$f<=9494;o$f++)r$d[o$f]=0;for(o$f=9697;o$f<=9699;o$f++)r$d[o$f]=0;for(o$f=9821;o$f<=9865;o$f++)r$d[o$f]=0;for(o$f=20002;o$f<=20032;o$f++)r$d[o$f]=0;for(o$f=20047;o$f<=20049;o$f++)r$d[o$f]=0;for(o$f=20062;o$f<=20092;o$f++)r$d[o$f]=0;for(o$f=20135;o$f<=20138;o$f++)r$d[o$f]=0;for(o$f=20248;o$f<=20258;o$f++)r$d[o$f]=0;for(o$f=20348;o$f<=20358;o$f++)r$d[o$f]=0;for(o$f=20436;o$f<=20440;o$f++)r$d[o$f]=0;for(o$f=20822;o$f<=20824;o$f++)r$d[o$f]=0;for(o$f=20904;o$f<=20932;o$f++)r$d[o$f]=0;for(o$f=20934;o$f<=20936;o$f++)r$d[o$f]=0;for(o$f=21004;o$f<=21032;o$f++)r$d[o$f]=0;for(o$f=21035;o$f<=21037;o$f++)r$d[o$f]=0;for(o$f=21095;o$f<=21097;o$f++)r$d[o$f]=0;for(o$f=21148;o$f<=21150;o$f++)r$d[o$f]=0;for(o$f=21207;o$f<=21264;o$f++)r$d[o$f]=0;for(o$f=21307;o$f<=21364;o$f++)r$d[o$f]=0;for(o$f=21413;o$f<=21423;o$f++)r$d[o$f]=0;for(o$f=21453;o$f<=21463;o$f++)r$d[o$f]=0;for(o$f=21473;o$f<=21483;o$f++)r$d[o$f]=0;for(o$f=21780;o$f<=21782;o$f++)r$d[o$f]=0;for(o$f=21891;o$f<=21894;o$f++)r$d[o$f]=0;for(o$f=21896;o$f<=21899;o$f++)r$d[o$f]=0;for(o$f=22171;o$f<=22177;o$f++)r$d[o$f]=0;for(o$f=22181;o$f<=22187;o$f++)r$d[o$f]=0;for(o$f=22191;o$f<=22197;o$f++)r$d[o$f]=0;for(o$f=22207;o$f<=22222;o$f++)r$d[o$f]=0;for(o$f=22234;o$f<=22236;o$f++)r$d[o$f]=0;for(o$f=22243;o$f<=22250;o$f++)r$d[o$f]=0;for(o$f=22262;o$f<=22265;o$f++)r$d[o$f]=0;for(o$f=22307;o$f<=22322;o$f++)r$d[o$f]=0;for(o$f=22348;o$f<=22357;o$f++)r$d[o$f]=0;for(o$f=22407;o$f<=22422;o$f++)r$d[o$f]=0;for(o$f=22462;o$f<=22465;o$f++)r$d[o$f]=0;for(o$f=22521;o$f<=22525;o$f++)r$d[o$f]=0;for(o$f=22607;o$f<=22622;o$f++)r$d[o$f]=0;for(o$f=22641;o$f<=22646;o$f++)r$d[o$f]=0;for(o$f=22648;o$f<=22657;o$f++)r$d[o$f]=0;for(o$f=22707;o$f<=22722;o$f++)r$d[o$f]=0;for(o$f=22762;o$f<=22765;o$f++)r$d[o$f]=0;for(o$f=22991;o$f<=22994;o$f++)r$d[o$f]=0;for(o$f=23028;o$f<=23038;o$f++)r$d[o$f]=0;for(o$f=23830;o$f<=23853;o$f++)r$d[o$f]=0;for(o$f=23866;o$f<=23872;o$f++)r$d[o$f]=0;for(o$f=23877;o$f<=23884;o$f++)r$d[o$f]=0;for(o$f=23886;o$f<=23894;o$f++)r$d[o$f]=0;for(o$f=23946;o$f<=23948;o$f++)r$d[o$f]=0;for(o$f=24311;o$f<=24313;o$f++)r$d[o$f]=0;for(o$f=24342;o$f<=24347;o$f++)r$d[o$f]=0;for(o$f=24370;o$f<=24374;o$f++)r$d[o$f]=10;for(o$f=24375;o$f<=24381;o$f++)r$d[o$f]=0;for(o$f=24718;o$f<=24721;o$f++)r$d[o$f]=0;for(o$f=24817;o$f<=24821;o$f++)r$d[o$f]=0;for(o$f=24877;o$f<=24882;o$f++)r$d[o$f]=0;for(o$f=24891;o$f<=24893;o$f++)r$d[o$f]=0;for(o$f=25391;o$f<=25395;o$f++)r$d[o$f]=0;for(o$f=25828;o$f<=25838;o$f++)r$d[o$f]=0;for(o$f=26191;o$f<=26195;o$f++)r$d[o$f]=0;for(o$f=26391;o$f<=26393;o$f++)r$d[o$f]=0;for(o$f=26701;o$f<=26722;o$f++)r$d[o$f]=0;for(o$f=26729;o$f<=26799;o$f++)r$d[o$f]=2;for(o$f=26801;o$f<=26803;o$f++)r$d[o$f]=2;for(o$f=26811;o$f<=26813;o$f++)r$d[o$f]=2;for(o$f=26847;o$f<=26870;o$f++)r$d[o$f]=2;for(o$f=26891;o$f<=26899;o$f++)r$d[o$f]=0;for(o$f=26901;o$f<=26923;o$f++)r$d[o$f]=0;for(o$f=26929;o$f<=26946;o$f++)r$d[o$f]=0;for(o$f=26948;o$f<=26998;o$f++)r$d[o$f]=0;for(o$f=27037;o$f<=27040;o$f++)r$d[o$f]=0;for(o$f=27205;o$f<=27232;o$f++)r$d[o$f]=0;for(o$f=27258;o$f<=27260;o$f++)r$d[o$f]=0;for(o$f=27391;o$f<=27398;o$f++)r$d[o$f]=0;for(o$f=27561;o$f<=27564;o$f++)r$d[o$f]=0;for(o$f=27571;o$f<=27574;o$f++)r$d[o$f]=0;for(o$f=27581;o$f<=27584;o$f++)r$d[o$f]=0;for(o$f=27591;o$f<=27594;o$f++)r$d[o$f]=0;for(o$f=28191;o$f<=28193;o$f++)r$d[o$f]=0;for(o$f=28348;o$f<=28358;o$f++)r$d[o$f]=0;for(o$f=28402;o$f<=28432;o$f++)r$d[o$f]=0;for(o$f=28462;o$f<=28492;o$f++)r$d[o$f]=0;for(o$f=29118;o$f<=29122;o$f++)r$d[o$f]=0;for(o$f=29168;o$f<=29172;o$f++)r$d[o$f]=0;for(o$f=29177;o$f<=29185;o$f++)r$d[o$f]=0;for(o$f=29187;o$f<=29195;o$f++)r$d[o$f]=0;for(o$f=29900;o$f<=29903;o$f++)r$d[o$f]=0;for(o$f=30161;o$f<=30179;o$f++)r$d[o$f]=0;for(o$f=30491;o$f<=30494;o$f++)r$d[o$f]=0;for(o$f=30729;o$f<=30732;o$f++)r$d[o$f]=0;for(o$f=31251;o$f<=31259;o$f++)r$d[o$f]=0;for(o$f=31265;o$f<=31268;o$f++)r$d[o$f]=0;for(o$f=31275;o$f<=31279;o$f++)r$d[o$f]=0;for(o$f=31281;o$f<=31297;o$f++)r$d[o$f]=0;for(o$f=31461;o$f<=31469;o$f++)r$d[o$f]=0;for(o$f=31491;o$f<=31495;o$f++)r$d[o$f]=0;for(o$f=31917;o$f<=31922;o$f++)r$d[o$f]=0;for(o$f=31965;o$f<=32e3;o$f++)r$d[o$f]=0;for(o$f=32001;o$f<=32003;o$f++)r$d[o$f]=2;for(o$f=32005;o$f<=32031;o$f++)r$d[o$f]=2;for(o$f=32033;o$f<=32060;o$f++)r$d[o$f]=2;for(o$f=32064;o$f<=32067;o$f++)r$d[o$f]=2;for(o$f=32074;o$f<=32077;o$f++)r$d[o$f]=2;for(o$f=32081;o$f<=32086;o$f++)r$d[o$f]=0;for(o$f=32107;o$f<=32130;o$f++)r$d[o$f]=0;for(o$f=32133;o$f<=32159;o$f++)r$d[o$f]=0;for(o$f=32164;o$f<=32167;o$f++)r$d[o$f]=2;for(o$f=32180;o$f<=32199;o$f++)r$d[o$f]=0;for(o$f=32201;o$f<=32260;o$f++)r$d[o$f]=0;for(o$f=32301;o$f<=32360;o$f++)r$d[o$f]=0;for(o$f=32601;o$f<=32662;o$f++)r$d[o$f]=0;for(o$f=32664;o$f<=32667;o$f++)r$d[o$f]=2;for(o$f=32701;o$f<=32761;o$f++)r$d[o$f]=0;for(o$f=53001;o$f<=53004;o$f++)r$d[o$f]=0;for(o$f=53008;o$f<=53019;o$f++)r$d[o$f]=0;for(o$f=53021;o$f<=53032;o$f++)r$d[o$f]=0;for(o$f=53034;o$f<=53037;o$f++)r$d[o$f]=0;for(o$f=53042;o$f<=53046;o$f++)r$d[o$f]=0;for(o$f=53074;o$f<=53080;o$f++)r$d[o$f]=0;for(o$f=54001;o$f<=54004;o$f++)r$d[o$f]=0;for(o$f=54008;o$f<=54019;o$f++)r$d[o$f]=0;for(o$f=54021;o$f<=54032;o$f++)r$d[o$f]=0;for(o$f=54034;o$f<=54037;o$f++)r$d[o$f]=0;for(o$f=54042;o$f<=54046;o$f++)r$d[o$f]=0;for(o$f=54048;o$f<=54053;o$f++)r$d[o$f]=0;for(o$f=54074;o$f<=54080;o$f++)r$d[o$f]=0;for(o$f=54098;o$f<=54101;o$f++)r$d[o$f]=0;for(o$f=102001;o$f<=102040;o$f++)r$d[o$f]=0;for(o$f=102042;o$f<=102063;o$f++)r$d[o$f]=0;for(o$f=102065;o$f<=102067;o$f++)r$d[o$f]=0;for(o$f=102070;o$f<=102117;o$f++)r$d[o$f]=0;for(o$f=102122;o$f<=102216;o$f++)r$d[o$f]=0;for(o$f=102221;o$f<=102377;o$f++)r$d[o$f]=0;for(o$f=102382;o$f<=102388;o$f++)r$d[o$f]=0;for(o$f=102389;o$f<=102398;o$f++)r$d[o$f]=2;for(o$f=102399;o$f<=102444;o$f++)r$d[o$f]=0;for(o$f=102445;o$f<=102447;o$f++)r$d[o$f]=2;for(o$f=102448;o$f<=102458;o$f++)r$d[o$f]=0;for(o$f=102459;o$f<=102468;o$f++)r$d[o$f]=2;for(o$f=102469;o$f<=102499;o$f++)r$d[o$f]=0;for(o$f=102500;o$f<=102519;o$f++)r$d[o$f]=1;for(o$f=102520;o$f<=102524;o$f++)r$d[o$f]=0;for(o$f=102525;o$f<=102529;o$f++)r$d[o$f]=2;for(o$f=102530;o$f<=102588;o$f++)r$d[o$f]=0;for(o$f=102590;o$f<=102598;o$f++)r$d[o$f]=0;for(o$f=102601;o$f<=102603;o$f++)r$d[o$f]=0;for(o$f=102605;o$f<=102628;o$f++)r$d[o$f]=0;for(o$f=102629;o$f<=102646;o$f++)r$d[o$f]=2;for(o$f=102648;o$f<=102700;o$f++)r$d[o$f]=2;for(o$f=102701;o$f<=102703;o$f++)r$d[o$f]=0;for(o$f=102707;o$f<=102730;o$f++)r$d[o$f]=2;for(o$f=102733;o$f<=102758;o$f++)r$d[o$f]=2;for(o$f=102767;o$f<=102900;o$f++)r$d[o$f]=0;for(o$f=102901;o$f<=102933;o$f++)r$d[o$f]=2;for(o$f=102934;o$f<=102950;o$f++)r$d[o$f]=13;for(o$f=102951;o$f<=102955;o$f++)r$d[o$f]=0;for(o$f=102961;o$f<=102963;o$f++)r$d[o$f]=0;for(o$f=102965;o$f<=102969;o$f++)r$d[o$f]=0;for(o$f=102971;o$f<=102973;o$f++)r$d[o$f]=0;for(o$f=102975;o$f<=102989;o$f++)r$d[o$f]=0;for(o$f=102990;o$f<=102992;o$f++)r$d[o$f]=1;for(o$f=102997;o$f<=103002;o$f++)r$d[o$f]=0;for(o$f=103003;o$f<=103008;o$f++)r$d[o$f]=2;for(o$f=103009;o$f<=103011;o$f++)r$d[o$f]=0;for(o$f=103012;o$f<=103014;o$f++)r$d[o$f]=2;for(o$f=103019;o$f<=103021;o$f++)r$d[o$f]=0;for(o$f=103022;o$f<=103024;o$f++)r$d[o$f]=2;for(o$f=103029;o$f<=103031;o$f++)r$d[o$f]=0;for(o$f=103032;o$f<=103034;o$f++)r$d[o$f]=2;for(o$f=103065;o$f<=103068;o$f++)r$d[o$f]=0;for(o$f=103074;o$f<=103076;o$f++)r$d[o$f]=0;for(o$f=103077;o$f<=103079;o$f++)r$d[o$f]=1;for(o$f=103080;o$f<=103082;o$f++)r$d[o$f]=0;for(o$f=103083;o$f<=103085;o$f++)r$d[o$f]=2;for(o$f=103090;o$f<=103093;o$f++)r$d[o$f]=0;for(o$f=103097;o$f<=103099;o$f++)r$d[o$f]=0;for(o$f=103100;o$f<=103102;o$f++)r$d[o$f]=2;for(o$f=103107;o$f<=103109;o$f++)r$d[o$f]=0;for(o$f=103110;o$f<=103112;o$f++)r$d[o$f]=2;for(o$f=103113;o$f<=103116;o$f++)r$d[o$f]=0;for(o$f=103117;o$f<=103120;o$f++)r$d[o$f]=2;for(o$f=103153;o$f<=103157;o$f++)r$d[o$f]=0;for(o$f=103158;o$f<=103162;o$f++)r$d[o$f]=2;for(o$f=103163;o$f<=103165;o$f++)r$d[o$f]=0;for(o$f=103166;o$f<=103168;o$f++)r$d[o$f]=1;for(o$f=103169;o$f<=103171;o$f++)r$d[o$f]=2;for(o$f=103186;o$f<=103188;o$f++)r$d[o$f]=0;for(o$f=103189;o$f<=103191;o$f++)r$d[o$f]=2;for(o$f=103192;o$f<=103195;o$f++)r$d[o$f]=0;for(o$f=103196;o$f<=103199;o$f++)r$d[o$f]=2;for(o$f=103200;o$f<=103224;o$f++)r$d[o$f]=0;for(o$f=103225;o$f<=103227;o$f++)r$d[o$f]=1;for(o$f=103232;o$f<=103237;o$f++)r$d[o$f]=0;for(o$f=103238;o$f<=103243;o$f++)r$d[o$f]=2;for(o$f=103244;o$f<=103246;o$f++)r$d[o$f]=0;for(o$f=103247;o$f<=103249;o$f++)r$d[o$f]=2;for(o$f=103254;o$f<=103256;o$f++)r$d[o$f]=0;for(o$f=103257;o$f<=103259;o$f++)r$d[o$f]=2;for(o$f=103264;o$f<=103266;o$f++)r$d[o$f]=0;for(o$f=103267;o$f<=103269;o$f++)r$d[o$f]=2;for(o$f=103300;o$f<=103375;o$f++)r$d[o$f]=0;for(o$f=103381;o$f<=103383;o$f++)r$d[o$f]=0;for(o$f=103384;o$f<=103386;o$f++)r$d[o$f]=1;for(o$f=103387;o$f<=103389;o$f++)r$d[o$f]=0;for(o$f=103390;o$f<=103392;o$f++)r$d[o$f]=2;for(o$f=103397;o$f<=103399;o$f++)r$d[o$f]=0;for(o$f=103400;o$f<=103471;o$f++)r$d[o$f]=2;for(o$f=103476;o$f<=103478;o$f++)r$d[o$f]=0;for(o$f=103479;o$f<=103481;o$f++)r$d[o$f]=2;for(o$f=103486;o$f<=103488;o$f++)r$d[o$f]=0;for(o$f=103489;o$f<=103491;o$f++)r$d[o$f]=2;for(o$f=103492;o$f<=103495;o$f++)r$d[o$f]=0;for(o$f=103496;o$f<=103499;o$f++)r$d[o$f]=2;for(o$f=103528;o$f<=103543;o$f++)r$d[o$f]=0;for(o$f=103544;o$f<=103548;o$f++)r$d[o$f]=2;for(o$f=103549;o$f<=103551;o$f++)r$d[o$f]=0;for(o$f=103552;o$f<=103554;o$f++)r$d[o$f]=1;for(o$f=103555;o$f<=103557;o$f++)r$d[o$f]=2;for(o$f=103558;o$f<=103560;o$f++)r$d[o$f]=0;for(o$f=103571;o$f<=103573;o$f++)r$d[o$f]=0;for(o$f=103574;o$f<=103576;o$f++)r$d[o$f]=2;for(o$f=103577;o$f<=103580;o$f++)r$d[o$f]=0;for(o$f=103581;o$f<=103583;o$f++)r$d[o$f]=2;for(o$f=103595;o$f<=103694;o$f++)r$d[o$f]=0;for(o$f=103696;o$f<=103699;o$f++)r$d[o$f]=0;for(o$f=103700;o$f<=103793;o$f++)r$d[o$f]=2;for(o$f=103794;o$f<=103890;o$f++)r$d[o$f]=0;for(o$f=103891;o$f<=103896;o$f++)r$d[o$f]=2;for(o$f=103900;o$f<=103971;o$f++)r$d[o$f]=2;for(o$f=103972;o$f<=103977;o$f++)r$d[o$f]=0;for(o$f=112e3;o$f<=112101;o$f++)r$d[o$f]=0;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const t$a={102113:!0,102100:!0,3857:!0,3785:!0},_$6={4326:!0,3785:!0,3857:!0,102113:!0,102100:!0,104905:!0,104971:!0},l$a='PROJCS["WGS_1984_Web_Mercator_Auxiliary_Sphere",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Mercator_Auxiliary_Sphere"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",{Central_Meridian}],PARAMETER["Standard_Parallel_1",0.0],PARAMETER["Auxiliary_Sphere_Type",0.0],UNIT["Meter",1.0]]',M$3=[-20037508.342788905,20037508.342788905],S$1=[-20037508.342787,20037508.342787],d$c={102113:{wkTemplate:'PROJCS["WGS_1984_Web_Mercator",GEOGCS["GCS_WGS_1984_Major_Auxiliary_Sphere",DATUM["D_WGS_1984_Major_Auxiliary_Sphere",SPHEROID["WGS_1984_Major_Auxiliary_Sphere",6378137.0,0.0]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Mercator"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",{Central_Meridian}],PARAMETER["Standard_Parallel_1",0.0],UNIT["Meter",1.0]]',valid:M$3,origin:S$1,dx:1e-5},102100:{wkTemplate:l$a,valid:M$3,origin:S$1,dx:1e-5},3785:{wkTemplate:'PROJCS["WGS_1984_Web_Mercator",GEOGCS["GCS_WGS_1984_Major_Auxiliary_Sphere",DATUM["D_WGS_1984_Major_Auxiliary_Sphere",SPHEROID["WGS_1984_Major_Auxiliary_Sphere",6378137.0,0.0]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Mercator"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",{Central_Meridian}],PARAMETER["Standard_Parallel_1",0.0],UNIT["Meter",1.0]]',valid:M$3,origin:S$1,dx:1e-5},3857:{wkTemplate:l$a,valid:M$3,origin:S$1,dx:1e-5},4326:{wkTemplate:'GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",{Central_Meridian}],UNIT["Degree",0.0174532925199433]]',altTemplate:'PROJCS["WGS_1984_Plate_Carree",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Plate_Carree"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",{Central_Meridian}],UNIT["Degrees",111319.491]]',valid:[-180,180],origin:[-180,90],dx:1e-5},104971:{wkTemplate:'GEOGCS["Mars_2000_(Sphere)",DATUM["Mars_2000_(Sphere)",SPHEROID["Mars_2000_(Sphere)",3396190.0,0.0]],PRIMEM["Reference_Meridian",0.0],UNIT["Degree",0.0174532925199433]]',valid:[-180,180],origin:[-180,90],dx:1e-5},104905:{wkTemplate:'GEOGCS["GCS_Mars_2000",DATUM["D_Mars_2000",SPHEROID["Mars_2000_IAU_IAG",3396190.0,169.8944472236118]],PRIMEM["Reference_Meridian",0.0],UNIT["Degree",0.0174532925199433]]',valid:[-180,180],origin:[-180,90],dx:1e-5}};function E$2(r,i){return r===i||!t$x(r)&&!t$x(i)&&(null!=r.wkid||null!=i.wkid?r.wkid===i.wkid||k$3(r)&&k$3(i)||null!=i.latestWkid&&r.wkid===i.latestWkid||null!=r.latestWkid&&i.wkid===r.latestWkid:!(!r.wkt||!i.wkt)&&r.wkt.toUpperCase()===i.wkt.toUpperCase())}function R$1(e){return I(e)&&e.wkid&&d$c[e.wkid]||null}function o$e(e){return !!I(e)&&(e.wkid?null==r$d[e.wkid]:!!e.wkt&&!!/^\s*GEOGCS/i.test(e.wkt))}function G$2(e){return I(e)&&4326===e.wkid}function k$3(e){return I(e)&&null!=e.wkid&&!0===t$a[e.wkid]}function w$4(e){return e===S$2.GCSMARS2000||e===S$2.GCSMARS2000_SPHERE}function C$2(e){return e===S$2.GCSMOON2000}function p$a(e){return I(e)&&null!=e.wkid&&!0===_$6[e.wkid]}function I(e){return r$r(e)&&(null!=e.wkid&&e.wkid>=2e3||null!=e.wkt)}const c$g={wkid:4326,wkt:r$q(d$c[4326].wkTemplate,{Central_Meridian:"0.0"})},D$3={wkid:102100,latestWkid:3857},O$1={wkid:32662};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const d$b=s$e.radius*Math.PI/200,U=/UNIT\[([^\]]+)\]\]$/i,q$1=r$d,h$f=/UNIT\[([^\]]+)\]/i,B$1=new Set([4261,4305,4807,4810,4811,4812,4816,4819,4821,4901,4902,37225,104139,104140]),k$2=o$g()({meter:"meters",foot:"feet",foot_us:"us-feet",foot_clarke:"clarke-feet",yard_clarke:"clarke-yards",link_clarke:"clarke-links",yard_sears:"sears-yards",foot_sears:"sears-feet",chain_sears:"sears-chains",chain_benoit_1895_b:"benoit-1895-b-chains",yard_indian:"indian-yards",yard_indian_1937:"indian-1937-yards",foot_gold_coast:"gold-coast-feet",chain_sears_1922_truncated:"sears-1922-truncated-chains","50_kilometers":"50-kilometers","150_kilometers":"150-kilometers"});function G$1(e){return k$2.fromJSON(e.toLowerCase())||null}function $$1(e,s=s$e.metersPerDegree){return l$m(z$3(e,!0),s)}function z$3(e,t=!1){const r=r$r(e)?e.wkid:null,i=r$r(e)?e.wkt:null;let n=null;if(r){if(w$4(r))return t$b.metersPerDegree;if(C$2(r))return e$h.metersPerDegree;n=q$1.values[q$1[r]],!n&&t&&B$1.has(r)&&(n=d$b);}else i&&(re(i)?n=Q(U.exec(i),n):te(i)&&(n=Q(h$f.exec(i),n)));return n}function Q(e,s){return e&&e[1]?V(e[1]):s}function V(e){return parseFloat(e.split(",")[1])}function X(e){const t=r$r(e)?e.wkid:null,r=r$r(e)?e.wkt:null;let i=null;if(t)i=q$1.units[q$1[t]];else if(r){const e=re(r)?U:te(r)?h$f:null;if(e){const s=e.exec(r);s&&s[1]&&(i=ne(s[1]));}}return r$r(i)?G$1(i):null}function te(e){return /^GEOCCS/i.test(e)}function re(e){return /^PROJCS/i.test(e)}const ie=1e-7;function ne(e){const s=/[\\"\\']{1}([^\\"\\']+)/.exec(e);let t=s&&s[1];if(!t||!q$1.units.includes(t)){const s=V(e);t=null;const r=q$1.values;for(let e=0;e<r.length;++e)if(Math.abs(s-r[e])<ie){t=q$1.units[e];break}}return t}const ue={esriAcres:"acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-feet",esriSquareInches:"square-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-miles",esriSquareMillimeters:"square-millimeters",esriSquareUsFeet:"square-us-feet",esriSquareYards:"square-yards"},ce={esriCentimeters:"centimeters",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriYards:"yards"},oe={esriDUDecimalDegrees:"degrees",esriDURadians:"radians"};o$g()(ue);o$g()(ce);o$g()(oe);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function r$c(r,o,e){let i,n;return void 0===o?(n=r,i=[void 0]):"string"!=typeof o?(n=r,i=[void 0],e=o):(n=o,i=Array.isArray(r)?r:[r]),(r,o)=>{const p=r.constructor.prototype;for(const c of i){const i=d$f(r,c,n);i.write&&"object"==typeof i.write||(i.write={}),e&&(i.write.target=e),i.write.writer=p[o];}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var h$e;let k$1=h$e=class extends l$b{static fromJSON(e){if(!e)return null;if(e.wkid){if(102100===e.wkid)return h$e.WebMercator;if(4326===e.wkid)return h$e.WGS84}const t=new h$e;return t.read(e),t}constructor(e){super(e),this.latestWkid=null,this.wkid=null,this.wkt=null,this.vcsWkid=null,this.latestVcsWkid=null,this.imageCoordinateSystem=null;}normalizeCtorArgs(e){if(e&&"object"==typeof e)return e;return {["string"==typeof e?"wkt":"wkid"]:e}}get isWGS84(){return G$2(this)}get isWebMercator(){return k$3(this)}get isGeographic(){return o$e(this)}get isWrappable(){return p$a(this)}get metersPerUnit(){return $$1(this)}get unit(){return X(this)||(this.isGeographic?"degrees":null)}writeWkt(e,t){this.wkid||(t.wkt=e);}clone(){if(this===h$e.WGS84)return h$e.WGS84;if(this===h$e.WebMercator)return h$e.WebMercator;const e=new h$e;return null!=this.wkid?(e.wkid=this.wkid,null!=this.latestWkid&&(e.latestWkid=this.latestWkid),null!=this.vcsWkid&&(e.vcsWkid=this.vcsWkid),null!=this.latestVcsWkid&&(e.latestVcsWkid=this.latestVcsWkid)):null!=this.wkt&&(e.wkt=this.wkt),this.imageCoordinateSystem&&(e.imageCoordinateSystem=p$l(this.imageCoordinateSystem)),e}equals(e){if(null==e)return !1;if(this.imageCoordinateSystem||e.imageCoordinateSystem){if(null==this.imageCoordinateSystem||null==e.imageCoordinateSystem)return !1;const{id:t,referenceServiceName:r}=e.imageCoordinateSystem,{geodataXform:i}=e.imageCoordinateSystem,o=this.imageCoordinateSystem;return null==t||i?JSON.stringify(o)===JSON.stringify(e.imageCoordinateSystem):r?o.id===t&&o.referenceServiceName===r:o.id===t}return E$2(this,e)}toJSON(e){return this.write(void 0,e)}};k$1.GCS_NAD_1927=null,k$1.WGS84=null,k$1.WebMercator=null,k$1.PlateCarree=null,e$u([y$9({readOnly:!0})],k$1.prototype,"isWGS84",null),e$u([y$9({readOnly:!0})],k$1.prototype,"isWebMercator",null),e$u([y$9({readOnly:!0})],k$1.prototype,"isGeographic",null),e$u([y$9({readOnly:!0})],k$1.prototype,"isWrappable",null),e$u([y$9({type:T$1,json:{write:!0}})],k$1.prototype,"latestWkid",void 0),e$u([y$9({readOnly:!0})],k$1.prototype,"metersPerUnit",null),e$u([y$9({readOnly:!0})],k$1.prototype,"unit",null),e$u([y$9({type:T$1,json:{write:!0,origins:{"web-scene":{write:{overridePolicy(){return {isRequired:null===this.wkt}}}}}}})],k$1.prototype,"wkid",void 0),e$u([y$9({type:String,json:{origins:{"web-scene":{write:{overridePolicy(){return {isRequired:null===this.wkid}}}}}}})],k$1.prototype,"wkt",void 0),e$u([r$c("wkt"),r$c("web-scene","wkt")],k$1.prototype,"writeWkt",null),e$u([y$9({type:T$1,json:{write:!0}})],k$1.prototype,"vcsWkid",void 0),e$u([y$9({type:T$1,json:{write:!0}})],k$1.prototype,"latestVcsWkid",void 0),e$u([y$9()],k$1.prototype,"imageCoordinateSystem",void 0),k$1=h$e=e$u([a$g("esri.geometry.SpatialReference")],k$1),k$1.prototype.toJSON.isDefaultToJSON=!0,k$1.GCS_NAD_1927=new k$1({wkid:4267,wkt:'GEOGCS["GCS_North_American_1927",DATUM["D_North_American_1927",SPHEROID["Clarke_1866",6378206.4,294.9786982]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]]'}),k$1.WGS84=new k$1(c$g),k$1.WebMercator=new k$1(D$3),k$1.PlateCarree=new k$1(O$1),Object.freeze&&(Object.freeze(k$1.GCS_NAD_1927),Object.freeze(k$1.WGS84),Object.freeze(k$1.WebMercator));const f$c=k$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let c$f=class extends l$b{constructor(...e){super(...e),this.type=null,this.hasM=!1,this.hasZ=!1,this.spatialReference=f$c.WGS84;}get cache(){return this.commitProperty("spatialReference"),{}}get extent(){return null}readSpatialReference(e,r){if(e instanceof f$c)return e;if(null!=e){const t=new f$c;return t.read(e,r),t}return e}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}clearCache(){this.notifyChange("cache");}getCacheValue(e){return this.cache[e]}setCacheValue(e,r){this.cache[e]=r;}};e$u([y$9()],c$f.prototype,"type",void 0),e$u([y$9({readOnly:!0})],c$f.prototype,"cache",null),e$u([y$9({readOnly:!0})],c$f.prototype,"extent",null),e$u([y$9({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],c$f.prototype,"hasM",void 0),e$u([y$9({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],c$f.prototype,"hasZ",void 0),e$u([y$9({type:f$c,json:{write:!0},value:f$c.WGS84})],c$f.prototype,"spatialReference",void 0),e$u([o$h("spatialReference")],c$f.prototype,"readSpatialReference",null),c$f=e$u([a$g("esri.geometry.Geometry")],c$f);const p$9=c$f;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const r$b=Object.prototype.toString;function o$d(n){const r="__accessorMetadata__"in n?b$3(n):n;return function(...t){if(t.push(r),"number"==typeof t[2])throw new Error("Using @cast has parameter decorator is not supported since 4.16");return e$g.apply(this,t)}}function e$g(t,r,o,e){c$r(t,r).cast=e;}function i$f(t){return (r,o)=>{c$r(r,t).cast=r[o];}}function s$d(...t){if(3!==t.length||"string"!=typeof t[1])return 1===t.length&&"[object Function]"===r$b.call(t[0])?o$d(t[0]):1===t.length&&"string"==typeof t[0]?i$f(t[0]):void 0}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function t$9(t,n){const s=t.x-n.x,r=t.y-n.y,a=t.hasZ&&n.hasZ?t.z-n.z:0;return Math.sqrt(s*s+r*r+a*a)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const o$c=57.29577951308232,u$d=.017453292519943;function l$9(n){return n*o$c}function p$8(n){return n*u$d}function h$d(n){return null!=n.wkid||null!=n.wkt}const m$b=[0,0];function x$7(n,t,e,i,r){const s=n,a=r;if(a.spatialReference=e,"x"in s&&"x"in a)[a.x,a.y]=t(s.x,s.y,m$b,i);else if("xmin"in s&&"xmin"in a)[a.xmin,a.ymin]=t(s.xmin,s.ymin,m$b,i),[a.xmax,a.ymax]=t(s.xmax,s.ymax,m$b,i);else if("paths"in s&&"paths"in a||"rings"in s&&"rings"in a){const n="paths"in s?s.paths:s.rings,e=[];let r;for(let s=0;s<n.length;s++){const a=n[s];r=[],e.push(r);for(let n=0;n<a.length;n++)r.push(t(a[n][0],a[n][1],[0,0],i)),a[n].length>2&&r[n].push(a[n][2]),a[n].length>3&&r[n].push(a[n][3]);}"paths"in a?a.paths=e:a.rings=e;}else if("points"in s&&"points"in a){const n=s.points,e=[];for(let r=0;r<n.length;r++)e[r]=t(n[r][0],n[r][1],[0,0],i),n[r].length>2&&e[r].push(n[r][2]),n[r].length>3&&e[r].push(n[r][3]);a.points=e;}return r}function g$4(n,t){const e=n&&(h$d(n)?n:n.spatialReference),i=t&&(h$d(t)?t:t.spatialReference);return !(n&&"type"in n&&"mesh"===n.type||t&&"type"in t&&"mesh"===t.type||!e||!i)&&(!!E$2(i,e)||(k$3(i)&&G$2(e)||k$3(e)&&G$2(i)))}function M$2(i,o){if(t$x(i))return null;const u=i.spatialReference,l=o&&(h$d(o)?o:o.spatialReference);return g$4(u,l)?E$2(u,l)?p$l(i):k$3(l)?x$7(i,y$4,f$c.WebMercator,!1,p$l(i)):G$2(l)?x$7(i,d$a,f$c.WGS84,!1,p$l(i)):null:null}function y$4(n,t,e=[0,0]){t>89.99999?t=89.99999:t<-89.99999&&(t=-89.99999);const r=p$8(t);return e[0]=p$8(n)*s$e.radius,e[1]=s$e.halfSemiMajorAxis*Math.log((1+Math.sin(r))/(1-Math.sin(r))),e}function d$a(n,t,e=[0,0],r=!1){const s=l$9(n/s$e.radius);return e[0]=r?s:s-360*Math.floor((s+180)/360),e[1]=l$9(Math.PI/2-2*Math.atan(Math.exp(-t/s$e.radius))),e}function R(t,i=!1,r=p$l(t)){return x$7(t,y$4,f$c.WebMercator,i,r)}function j$2(t,i=!1,r=p$l(t)){return x$7(t,d$a,f$c.WGS84,i,r)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var m$a;const f$b=[0,0];function g$3(e){return e&&("esri.geometry.SpatialReference"===e.declaredClass||null!=e.wkid)}let x$6=m$a=class extends p$9{static copy(e,t){t._set("x",e._get("x")),t._set("y",e._get("y")),t._set("z",e._get("z")),t._set("m",e._get("m"));const r=e._get("spatialReference");t._set("spatialReference",Object.isFrozen(r)?r:r.clone());}constructor(...e){super(...e),this.x=0,this.y=0,this.z=void 0,this.m=void 0,this.type="point";}normalizeCtorArgs(e,r,s,i,o){let a;if(Array.isArray(e))a=e,o=r,e=a[0],r=a[1],s=a[2],i=a[3];else if(e&&"object"==typeof e){if(a=e,e=null!=a.x?a.x:a.longitude,r=null!=a.y?a.y:a.latitude,s=a.z,i=a.m,(o=a.spatialReference)&&"esri.geometry.SpatialReference"!==o.declaredClass&&(o=new f$c(o)),null!=a.longitude||null!=a.latitude)if(null==a.longitude)s$w.getLogger(this.declaredClass).warn(".longitude=","Latitude was defined without longitude");else if(null==a.latitude)s$w.getLogger(this.declaredClass).warn(".latitude=","Longitude was defined without latitude");else if(!a.declaredClass&&o&&o.isWebMercator){const t=y$4(a.longitude,a.latitude,f$b);e=t[0],r=t[1];}}else g$3(s)?(o=s,s=null):g$3(i)&&(o=i,i=null);const l={x:e,y:r};return null==l.x&&null!=l.y?s$w.getLogger(this.declaredClass).warn(".y=","Y coordinate was defined without an X coordinate"):null==l.y&&null!=l.x&&s$w.getLogger(this.declaredClass).warn(".x=","X coordinate was defined without a Y coordinate"),null!=o&&(l.spatialReference=o),null!=s&&(l.z=s),null!=i&&(l.m=i),l}get cache(){return this.commitProperty("x"),this.commitProperty("y"),this.commitProperty("z"),this.commitProperty("m"),this.commitProperty("spatialReference"),{}}get hasM(){return void 0!==this.m}set hasM(e){e!==(void 0!==this._get("m"))&&(this._set("m",e?0:void 0),this._set("hasM",e));}get hasZ(){return void 0!==this.z}set hasZ(e){e!==(void 0!==this._get("z"))&&(this._set("z",e?0:void 0),this._set("hasZ",e));}get latitude(){const{spatialReference:e,x:t,y:r}=this;if(e){if(e.isWebMercator)return d$a(t,r,f$b)[1];if(e.isGeographic)return r}return null}set latitude(e){const{spatialReference:t,x:r}=this;null!=e&&t&&(t.isWebMercator?this._set("y",y$4(r,e,f$b)[1]):t.isGeographic&&this._set("y",e),this._set("latitude",e));}get longitude(){const{x:e,y:t,spatialReference:r}=this;if(r){if(r.isWebMercator)return d$a(e,t,f$b)[0];if(r.isGeographic)return e}return null}set longitude(e){const{y:t,spatialReference:r}=this;null!=e&&r&&(r.isWebMercator?this._set("x",y$4(e,t,f$b)[0]):r.isGeographic&&this._set("x",e),this._set("longitude",e));}writeX(e,t,r){t[r]=isNaN(e)?"NaN":e;}readX(e){return "string"==typeof e?NaN:e}clone(){const e=new m$a;return e.x=this.x,e.y=this.y,e.z=this.z,e.m=this.m,e.spatialReference=this.spatialReference,e}copy(e){return m$a.copy(e,this),this}equals(e){if(t$x(e))return !1;const{x:t,y:s,z:i,m:o,spatialReference:a}=this,{z:l,m:n}=e;let{x:c,y:u,spatialReference:p}=e;if(!a.equals(p))if(a.isWebMercator&&p.isWGS84)[c,u]=y$4(c,u),p=a;else {if(!a.isWGS84||!p.isWebMercator)return !1;[c,u]=d$a(c,u),p=a;}return t===c&&s===u&&i===l&&o===n&&a.wkid===p.wkid}offset(e,t,r){return this.x+=e,this.y+=t,null!=r&&(this.z=(this.z??0)+r),this}normalize(){if(!this.spatialReference)return this;const e=R$1(this.spatialReference);if(!e)return this;let t=this.x;const[r,s]=e.valid,i=2*s;let o;return t>s?(o=Math.ceil(Math.abs(t-s)/i),t-=o*i):t<r&&(o=Math.ceil(Math.abs(t-r)/i),t+=o*i),this._set("x",t),this}distance(e){return t$9(this,e)}toArray(){const e=this.hasZ,t=this.hasM;return e&&t?[this.x,this.y,this.z,this.m]:e?[this.x,this.y,this.z]:t?[this.x,this.y,this.m]:[this.x,this.y]}toJSON(e){return this.write({},e)}};e$u([y$9({readOnly:!0})],x$6.prototype,"cache",null),e$u([y$9({type:Boolean,json:{read:!1,write:{enabled:!1,overridePolicy:null}}})],x$6.prototype,"hasM",null),e$u([y$9({type:Boolean,json:{read:!1,write:{enabled:!1,overridePolicy:null}}})],x$6.prototype,"hasZ",null),e$u([y$9({type:Number})],x$6.prototype,"latitude",null),e$u([y$9({type:Number})],x$6.prototype,"longitude",null),e$u([y$9({type:Number,json:{type:[Number,String],write:{isRequired:!0,allowNull:!0}}}),s$d((e=>isNaN(e)?e:a$k(e)))],x$6.prototype,"x",void 0),e$u([r$c("x")],x$6.prototype,"writeX",null),e$u([o$h("x")],x$6.prototype,"readX",null),e$u([y$9({type:Number,json:{write:!0}})],x$6.prototype,"y",void 0),e$u([y$9({type:Number,json:{write:{overridePolicy(){return {enabled:this.hasZ}}}}})],x$6.prototype,"z",void 0),e$u([y$9({type:Number,json:{write:{overridePolicy(){return {enabled:this.hasM}}}}})],x$6.prototype,"m",void 0),x$6=m$a=e$u([a$g("esri.geometry.Point")],x$6),x$6.prototype.toJSON.isDefaultToJSON=!0;const w$3=x$6;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const t$8=[0,0];function r$a(t,r){return !!r$r(r)&&f$a(t,r.x,r.y,r.z)}function o$b(n,t){const{xmin:r,ymin:i,zmin:o,xmax:u,ymax:e,zmax:c}=t;return n.hasZ&&t.hasZ?f$a(n,r,i,o)&&f$a(n,r,e,o)&&f$a(n,u,e,o)&&f$a(n,u,i,o)&&f$a(n,r,i,c)&&f$a(n,r,e,c)&&f$a(n,u,e,c)&&f$a(n,u,i,c):f$a(n,r,i)&&f$a(n,r,e)&&f$a(n,u,e)&&f$a(n,u,i)}function u$c(n,t){return f$a(n,t[0],t[1])}function e$f(n,t){return f$a(n,t[0],t[1],t[2])}function f$a(n,t,r,i){return t>=n.xmin&&t<=n.xmax&&r>=n.ymin&&r<=n.ymax&&(null==i||!n.hasZ||i>=n.zmin&&i<=n.zmax)}function c$e(n,r){return t$8[1]=r.y,t$8[0]=r.x,m$9(n,t$8)}function m$9(n,t){return s$c(n.rings,t)}function s$c(n,t){if(!n)return !1;if(x$5(n))return a$d(!1,n,t);let r=!1;for(let i=0,o=n.length;i<o;i++)r=a$d(r,n[i],t);return r}function x$5(n){return !Array.isArray(n[0][0])}function a$d(n,t,r){const[i,o]=r;let u=n,e=0;for(let f=0,c=t.length;f<c;f++){e++,e===c&&(e=0);const[n,r]=t[f],[m,s]=t[e];(r<o&&s>=o||s<o&&r>=o)&&n+(o-r)/(s-r)*(m-n)<i&&(u=!u);}return u}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function i$e(t,e){return r$a(t,e)}function o$a(n,t){const e=n.hasZ&&t.hasZ;let r,i,o;if(n.xmin<=t.xmin){if(r=t.xmin,n.xmax<r)return !1}else if(r=n.xmin,t.xmax<r)return !1;if(n.ymin<=t.ymin){if(i=t.ymin,n.ymax<i)return !1}else if(i=n.ymin,t.ymax<i)return !1;if(e&&t.hasZ)if(n.zmin<=t.zmin){if(o=t.zmin,n.zmax<o)return !1}else if(o=n.zmin,t.zmax<o)return !1;return !0}function f$9(n,t){const{points:i,hasZ:o}=t,f=o?e$f:u$c;for(const e of i)if(f(n,e))return !0;return !1}const s$b=[0,0],u$b=[0,0],c$d=[0,0],m$8=[0,0],l$8=[s$b,u$b,c$d,m$8],a$c=[[c$d,s$b],[s$b,u$b],[u$b,m$8],[m$8,c$d]];function x$4(n,t){return y$3(n,t.rings)}function y$3(n,r){s$b[0]=n.xmin,s$b[1]=n.ymax,u$b[0]=n.xmax,u$b[1]=n.ymax,c$d[0]=n.xmin,c$d[1]=n.ymin,m$8[0]=n.xmax,m$8[1]=n.ymin;for(const e of l$8)if(s$c(r,e))return !0;for(const t of r){if(!t.length)continue;let r=t[0];if(u$c(n,r))return !0;for(let i=1;i<t.length;i++){const o=t[i];if(u$c(n,o)||z$2(r,o,a$c))return !0;r=o;}}return !1}function h$c(n,t){s$b[0]=n.xmin,s$b[1]=n.ymax,u$b[0]=n.xmax,u$b[1]=n.ymax,c$d[0]=n.xmin,c$d[1]=n.ymin,m$8[0]=n.xmax,m$8[1]=n.ymin;const r=t.paths;for(const i of r){if(!r.length)continue;let t=i[0];if(u$c(n,t))return !0;for(let r=1;r<i.length;r++){const o=i[r];if(u$c(n,o)||z$2(t,o,a$c))return !0;t=o;}}return !1}const g$2=[0,0];function p$7(n){for(let t=0;t<n.length;t++){const e=n[t];for(let i=0;i<e.length-1;i++){const r=e[i],o=e[i+1];for(let e=t+1;e<n.length;e++)for(let t=0;t<n[e].length-1;t++){const i=n[e][t],f=n[e][t+1];if(G(r,o,i,f,g$2)&&!(g$2[0]===r[0]&&g$2[1]===r[1]||g$2[0]===i[0]&&g$2[1]===i[1]||g$2[0]===o[0]&&g$2[1]===o[1]||g$2[0]===f[0]&&g$2[1]===f[1]))return !0}}const r=e.length;if(!(r<=4))for(let n=0;n<r-3;n++){let t=r-1;0===n&&(t=r-2);const i=e[n],o=e[n+1];for(let r=n+2;r<t;r++){const n=e[r],t=e[r+1];if(G(i,o,n,t,g$2)&&!(g$2[0]===i[0]&&g$2[1]===i[1]||g$2[0]===n[0]&&g$2[1]===n[1]||g$2[0]===o[0]&&g$2[1]===o[1]||g$2[0]===t[0]&&g$2[1]===t[1]))return !0}}}return !1}function z$2(n,t,e){for(let r=0;r<e.length;r++)if(G(n,t,e[r][0],e[r][1]))return !0;return !1}function G(n,t,e,r,i){const[o,f]=n,[s,u]=t,[c,m]=e,[l,a]=r,x=l-c,y=o-c,h=s-o,g=a-m,p=f-m,z=u-f,G=g*h-x*z;if(0===G)return !1;const Z=(x*p-g*y)/G,P=(h*p-z*y)/G;return Z>=0&&Z<=1&&P>=0&&P<=1&&(i&&(i[0]=o+Z*(s-o),i[1]=f+Z*(u-f)),!0)}function Z(n){switch(n){case"esriGeometryEnvelope":case"extent":return o$a;case"esriGeometryMultipoint":case"multipoint":return f$9;case"esriGeometryPoint":case"point":return i$e;case"esriGeometryPolygon":case"polygon":return x$4;case"esriGeometryPolyline":case"polyline":return h$c}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var f$8;function d$9(t){return t&&("esri.geometry.SpatialReference"===t.declaredClass||null!=t.wkid)}function z$1(t,i,e){return null==i?e:null==e?i:t(i,e)}let M$1=f$8=class extends p$9{constructor(...t){super(...t),this.type="extent",this.xmin=0,this.ymin=0,this.mmin=void 0,this.zmin=void 0,this.xmax=0,this.ymax=0,this.mmax=void 0,this.zmax=void 0;}normalizeCtorArgs(t,i,e,s,n){return d$9(t)?{spatialReference:t,xmin:0,ymin:0,xmax:0,ymax:0}:"object"==typeof t?(t.spatialReference=null==t.spatialReference?f$c.WGS84:t.spatialReference,t):{xmin:t,ymin:i,xmax:e,ymax:s,spatialReference:n??f$c.WGS84}}static fromBounds(t,i){return new f$8({xmin:t[0],ymin:t[1],xmax:t[2],ymax:t[3],spatialReference:i})}static fromPoint(t){return new f$8({xmin:t.x,ymin:t.y,zmin:t.z,xmax:t.x,ymax:t.y,zmax:t.z,spatialReference:t.spatialReference})}get cache(){return this.commitProperty("xmin"),this.commitProperty("ymin"),this.commitProperty("zmin"),this.commitProperty("mmin"),this.commitProperty("xmax"),this.commitProperty("ymax"),this.commitProperty("zmax"),this.commitProperty("mmax"),this.commitProperty("spatialReference"),{}}get center(){const t=new w$3({x:.5*(this.xmin+this.xmax),y:.5*(this.ymin+this.ymax),spatialReference:this.spatialReference});return this.hasZ&&(t.z=.5*(this.zmin+this.zmax)),this.hasM&&(t.m=.5*(this.mmin+this.mmax)),t}get extent(){return this.clone()}get hasM(){return null!=this.mmin&&null!=this.mmax}get hasZ(){return null!=this.zmin&&null!=this.zmax}get height(){return Math.abs(this.ymax-this.ymin)}get width(){return Math.abs(this.xmax-this.xmin)}centerAt(t){const i=this.center;return null!=t.z&&this.hasZ?this.offset(t.x-i.x,t.y-i.y,t.z-i.z):this.offset(t.x-i.x,t.y-i.y)}clone(){const t=new f$8;return t.xmin=this.xmin,t.ymin=this.ymin,t.xmax=this.xmax,t.ymax=this.ymax,t.spatialReference=this.spatialReference,null!=this.zmin&&(t.zmin=this.zmin,t.zmax=this.zmax),null!=this.mmin&&(t.mmin=this.mmin,t.mmax=this.mmax),t}contains(t){if(!t)return !1;const i=this.spatialReference,e=t.spatialReference;return i&&e&&!i.equals(e)&&g$4(i,e)&&(t=i.isWebMercator?R(t):j$2(t,!0)),"point"===t.type?r$a(this,t):"extent"===t.type&&o$b(this,t)}equals(t){if(this===t)return !0;if(t$x(t))return !1;const e=this.spatialReference,s=t.spatialReference;return e&&s&&!e.equals(s)&&g$4(e,s)&&(t=e.isWebMercator?R(t):j$2(t,!0)),this.xmin===t.xmin&&this.ymin===t.ymin&&this.zmin===t.zmin&&this.mmin===t.mmin&&this.xmax===t.xmax&&this.ymax===t.ymax&&this.zmax===t.zmax&&this.mmax===t.mmax}expand(t){const i=.5*(1-t),e=this.width*i,s=this.height*i;if(this.xmin+=e,this.ymin+=s,this.xmax-=e,this.ymax-=s,this.hasZ){const t=(this.zmax-this.zmin)*i;this.zmin+=t,this.zmax-=t;}if(this.hasM){const t=(this.mmax-this.mmin)*i;this.mmin+=t,this.mmax-=t;}return this}intersects(t){if(t$x(t))return !1;"mesh"===t.type&&(t=t.extent);const e=this.spatialReference,s=t.spatialReference;e&&s&&!E$2(e,s)&&g$4(e,s)&&(t=e.isWebMercator?R(t):j$2(t,!0));return Z(t.type)(this,t)}normalize(){const t=this._normalize(!1,!0);return Array.isArray(t)?t:[t]}offset(t,i,e){return this.xmin+=t,this.ymin+=i,this.xmax+=t,this.ymax+=i,null!=e&&(this.zmin+=e,this.zmax+=e),this}shiftCentralMeridian(){return this._normalize(!0)}union(t){return this===t||(this.xmin=Math.min(this.xmin,t.xmin),this.ymin=Math.min(this.ymin,t.ymin),this.xmax=Math.max(this.xmax,t.xmax),this.ymax=Math.max(this.ymax,t.ymax),(this.hasZ||t.hasZ)&&(this.zmin=z$1(Math.min,this.zmin,t.zmin),this.zmax=z$1(Math.max,this.zmax,t.zmax)),(this.hasM||t.hasM)&&(this.mmin=z$1(Math.min,this.mmin,t.mmin),this.mmax=z$1(Math.max,this.mmax,t.mmax))),this}intersection(t){return this===t?this:t$x(t)||!this.intersects(t)?null:(this.xmin=Math.max(this.xmin,t.xmin),this.ymin=Math.max(this.ymin,t.ymin),this.xmax=Math.min(this.xmax,t.xmax),this.ymax=Math.min(this.ymax,t.ymax),(this.hasZ||t.hasZ)&&(this.zmin=z$1(Math.max,this.zmin,t.zmin),this.zmax=z$1(Math.min,this.zmax,t.zmax)),(this.hasM||t.hasM)&&(this.mmin=z$1(Math.max,this.mmin,t.mmin),this.mmax=z$1(Math.min,this.mmax,t.mmax)),this)}toJSON(t){return this.write({},t)}_shiftCM(t=R$1(this.spatialReference)){if(!t||!this.spatialReference)return this;const i=this.spatialReference,s=this._getCM(t);if(s){const n=i.isWebMercator?j$2(s):s;this.xmin-=s.x,this.xmax-=s.x,i.isWebMercator||(n.x=this._normalizeX(n.x,t).x),this.spatialReference=new f$c(r$q((i.isWGS84?t.altTemplate:null)??t.wkTemplate,{Central_Meridian:n.x}));}return this}_getCM(t){let i=null;const[e,s]=t.valid,n=this.xmin,m=this.xmax;return n>=e&&n<=s&&(m>=e&&m<=s)||(i=this.center),i}_normalize(t,i,e){const s=this.spatialReference;if(!s)return this;const n=e??R$1(s);if(null==n)return this;const m=this._getParts(n).map((t=>t.extent));if(m.length<2)return m[0]||this;if(m.length>2)return t?this._shiftCM(n):this.set({xmin:n.valid[0],xmax:n.valid[1]});if(t)return this._shiftCM(n);if(i)return m;let r=!0,a=!0;return m.forEach((t=>{t.hasZ||(r=!1),t.hasM||(a=!1);})),{rings:m.map((t=>{const i=[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]];if(r){const e=(t.zmax-t.zmin)/2;for(let t=0;t<i.length;t++)i[t].push(e);}if(a){const e=(t.mmax-t.mmin)/2;for(let t=0;t<i.length;t++)i[t].push(e);}return i})),hasZ:r,hasM:a,spatialReference:s}}_getParts(t){let i=this.cache._parts;if(!i){i=[];const{ymin:e,ymax:s,spatialReference:n}=this,m=this.width,r=this.xmin,a=this.xmax;let h;t=t||R$1(n);const[o,x]=t.valid;h=this._normalizeX(this.xmin,t);const l=h.x,c=h.frameId;h=this._normalizeX(this.xmax,t);const y=h.x,u=h.frameId,d=l===y&&m>0;if(m>2*x){const t=new f$8(r<a?l:y,e,x,s,n),m=new f$8(o,e,r<a?y:l,s,n),h=new f$8(0,e,x,s,n),p=new f$8(o,e,0,s,n),d=[],z=[];t.contains(h)&&d.push(c),t.contains(p)&&z.push(c),m.contains(h)&&d.push(u),m.contains(p)&&z.push(u);for(let i=c+1;i<u;i++)d.push(i),z.push(i);i.push({extent:t,frameIds:[c]},{extent:m,frameIds:[u]},{extent:h,frameIds:d},{extent:p,frameIds:z});}else l>y||d?i.push({extent:new f$8(l,e,x,s,n),frameIds:[c]},{extent:new f$8(o,e,y,s,n),frameIds:[u]}):i.push({extent:new f$8(l,e,y,s,n),frameIds:[c]});this.cache._parts=i;}const e=this.hasZ,s=this.hasM;if(e||s){const t={};e&&(t.zmin=this.zmin,t.zmax=this.zmax),s&&(t.mmin=this.mmin,t.mmax=this.mmax);for(let e=0;e<i.length;e++)i[e].extent.set(t);}return i}_normalizeX(t,i){const[e,s]=i.valid,n=2*s;let m,r=0;return t>s?(m=Math.ceil(Math.abs(t-s)/n),t-=m*n,r=m):t<e&&(m=Math.ceil(Math.abs(t-e)/n),t+=m*n,r=-m),{x:t,frameId:r}}};e$u([y$9({readOnly:!0})],M$1.prototype,"cache",null),e$u([y$9({readOnly:!0})],M$1.prototype,"center",null),e$u([y$9({readOnly:!0})],M$1.prototype,"extent",null),e$u([y$9({readOnly:!0,json:{write:{enabled:!1,overridePolicy:null}}})],M$1.prototype,"hasM",null),e$u([y$9({readOnly:!0,json:{write:{enabled:!1,overridePolicy:null}}})],M$1.prototype,"hasZ",null),e$u([y$9({readOnly:!0})],M$1.prototype,"height",null),e$u([y$9({readOnly:!0})],M$1.prototype,"width",null),e$u([y$9({type:Number,json:{type:[Number,String],write:{enabled:!0,allowNull:!0}}})],M$1.prototype,"xmin",void 0),e$u([y$9({type:Number,json:{write:!0}})],M$1.prototype,"ymin",void 0),e$u([y$9({type:Number,json:{origins:{"web-scene":{write:!1}},write:{overridePolicy(){return {enabled:this.hasM}}}}})],M$1.prototype,"mmin",void 0),e$u([y$9({type:Number,json:{origins:{"web-scene":{write:!1}},write:{overridePolicy(){return {enabled:this.hasZ}}}}})],M$1.prototype,"zmin",void 0),e$u([y$9({type:Number,json:{write:!0}})],M$1.prototype,"xmax",void 0),e$u([y$9({type:Number,json:{write:!0}})],M$1.prototype,"ymax",void 0),e$u([y$9({type:Number,json:{origins:{"web-scene":{write:!1}},write:{overridePolicy(){return {enabled:this.hasM}}}}})],M$1.prototype,"mmax",void 0),e$u([y$9({type:Number,json:{origins:{"web-scene":{write:!1}},write:{overridePolicy(){return {enabled:this.hasZ}}}}})],M$1.prototype,"zmax",void 0),M$1=f$8=e$u([a$g("esri.geometry.Extent")],M$1),M$1.prototype.toJSON.isDefaultToJSON=!0;const w$2=M$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let i$d=class extends l$b{constructor(t){super(t),this.address=null,this.attributes=null,this.extent=null,this.location=null,this.score=null;}};e$u([y$9({type:String,json:{write:!0}})],i$d.prototype,"address",void 0),e$u([y$9({type:Object,json:{write:!0}})],i$d.prototype,"attributes",void 0),e$u([y$9({type:w$2,json:{write:!0}})],i$d.prototype,"extent",void 0),e$u([y$9({type:w$3,json:{write:!0}})],i$d.prototype,"location",void 0),e$u([y$9({type:Number,json:{write:!0}})],i$d.prototype,"score",void 0),i$d=e$u([a$g("esri.rest.support.AddressCandidate")],i$d);const c$c=i$d;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function h$b(h,a,s=!1){let{hasM:t,hasZ:e}=h;Array.isArray(a)?4!==a.length||t||e?3===a.length&&s&&!t?(e=!0,t=!1):3===a.length&&t&&e&&(t=!1,e=!1):(t=!0,e=!0):(e=!e&&a.hasZ&&(!t||a.hasM),t=!t&&a.hasM&&(!e||a.hasZ)),h.hasZ=e,h.hasM=t;}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var h$a;function l$7(t){return (s,e)=>null==s?e:null==e?s:t(s,e)}function c$b(t){return t&&("esri.geometry.SpatialReference"===t.declaredClass||null!=t.wkid)}let m$7=h$a=class extends p$9{constructor(...t){super(...t),this.points=[],this.type="multipoint";}normalizeCtorArgs(t,s){if(!t&&!s)return {};const e={};Array.isArray(t)?(e.points=t,e.spatialReference=s):c$b(t)?e.spatialReference=t:(t.points&&(e.points=t.points),t.spatialReference&&(e.spatialReference=t.spatialReference),t.hasZ&&(e.hasZ=t.hasZ),t.hasM&&(e.hasM=t.hasM));const i=e.points&&e.points[0];return i&&(void 0===e.hasZ&&void 0===e.hasM?(e.hasZ=i.length>2,e.hasM=!1):void 0===e.hasZ?e.hasZ=i.length>3:void 0===e.hasM&&(e.hasM=i.length>3)),e}get cache(){return this.commitProperty("points"),this.commitProperty("hasZ"),this.commitProperty("hasM"),this.commitProperty("spatialReference"),{}}get extent(){const t=this.points;if(!t.length)return null;const s=new w$2,e=this.hasZ,i=this.hasM,r=e?3:2,n=t[0],a=l$7(Math.min),p=l$7(Math.max);let h,c,m,u,[f,y]=n,[d,g]=n;for(let o=0,l=t.length;o<l;o++){const s=t[o],[n,l]=s;if(f=a(f,n),y=a(y,l),d=p(d,n),g=p(g,l),e&&s.length>2){const t=s[2];h=a(h,t),m=p(m,t);}if(i&&s.length>r){const t=s[r];c=a(c,t),u=p(u,t);}}return s.xmin=f,s.ymin=y,s.xmax=d,s.ymax=g,s.spatialReference=this.spatialReference,e?(s.zmin=h,s.zmax=m):(s.zmin=void 0,s.zmax=void 0),i?(s.mmin=c,s.mmax=u):(s.mmin=void 0,s.mmax=void 0),s}writePoints(t,e){e.points=p$l(this.points);}addPoint(t){return h$b(this,t),Array.isArray(t)?this.points.push(t):this.points.push(t.toArray()),this.notifyChange("points"),this}clone(){const t={points:p$l(this.points),spatialReference:this.spatialReference};return this.hasZ&&(t.hasZ=!0),this.hasM&&(t.hasM=!0),new h$a(t)}getPoint(t){if(!this._validateInputs(t))return null;const s=this.points[t],e={x:s[0],y:s[1],spatialReference:this.spatialReference};let i=2;return this.hasZ&&(e.z=s[2],i=3),this.hasM&&(e.m=s[i]),new w$3(e)}removePoint(t){if(!this._validateInputs(t))return null;const s=new w$3(this.points.splice(t,1)[0],this.spatialReference);return this.notifyChange("points"),s}setPoint(t,s){return this._validateInputs(t)?(h$b(this,s),Array.isArray(s)||(s=s.toArray()),this.points[t]=s,this.notifyChange("points"),this):this}toJSON(t){return this.write({},t)}_validateInputs(t){return null!=t&&t>=0&&t<this.points.length}};e$u([y$9({readOnly:!0})],m$7.prototype,"cache",null),e$u([y$9()],m$7.prototype,"extent",null),e$u([y$9({type:[[Number]],json:{write:{isRequired:!0}}})],m$7.prototype,"points",void 0),e$u([r$c("points")],m$7.prototype,"writePoints",null),m$7=h$a=e$u([a$g("esri.geometry.Multipoint")],m$7),m$7.prototype.toJSON.isDefaultToJSON=!0;const u$a=m$7;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function r$9(t,n){const e=n[0]-t[0],r=n[1]-t[1];if(t.length>2&&n.length>2){const i=t[2]-n[2];return Math.sqrt(e*e+r*r+i*i)}return Math.sqrt(e*e+r*r)}function i$c(t,n,e){const r=t[0]+e*(n[0]-t[0]),i=t[1]+e*(n[1]-t[1]);return t.length>2&&n.length>2?[r,i,t[2]+e*(n[2]-t[2])]:[r,i]}function f$7(t,n){return i$c(t,n,.5)}function h$9(t,n,e){const r=t.length;let i=0,o=0,s=0;for(let l=0;l<r;l++){const f=t[l],u=t[(l+1)%r];let c=2;i+=f[0]*u[1]-u[0]*f[1],f.length>2&&u.length>2&&e&&(o+=f[0]*u[2]-u[0]*f[2],c=3),f.length>c&&u.length>c&&n&&(s+=f[0]*u[c]-u[0]*f[c]);}return i<=0&&o<=0&&s<=0}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function r$8(n){return n?o$9(n.rings,n.hasZ??!1):null}function o$9(n,t){if(!n||!n.length)return null;const l=[],e=[],r=t?[1/0,-1/0,1/0,-1/0,1/0,-1/0]:[1/0,-1/0,1/0,-1/0];for(let o=0,i=n.length;o<i;o++){const l=u$9(n[o],t,r);l&&e.push(l);}if(e.sort(((n,l)=>{let e=n[2]-l[2];return 0===e&&t&&(e=n[4]-l[4]),e})),e.length&&(l[0]=e[0][0],l[1]=e[0][1],t&&(l[2]=e[0][3]),(l[0]<r[0]||l[0]>r[1]||l[1]<r[2]||l[1]>r[3]||t&&(l[2]<r[4]||l[2]>r[5]))&&(l.length=0)),!l.length){const e=n[0]&&n[0].length?i$b(n[0],t):null;if(!e)return null;l[0]=e[0],l[1]=e[1],t&&e.length>2&&(l[2]=e[2]);}return l}function u$9(n,t,l){let e=0,r=0,o=0,u=0,i=0;const s=n.length?n[0][0]:0,g=n.length?n[0][1]:0,h=n.length&&t?n[0][2]:0;for(let f=0;f<n.length;f++){const c=n[f],m=n[(f+1)%n.length],[x,a,y]=c,p=x-s,z=a-g,[Z,d,j]=m,U=Z-s,b=d-g,k=p*b-U*z;if(u+=k,e+=(p+U)*k,r+=(z+b)*k,t&&c.length>2&&m.length>2){const n=y-h,t=j-h,l=p*t-U*n;o+=(n+t)*l,i+=l;}x<l[0]&&(l[0]=x),x>l[1]&&(l[1]=x),a<l[2]&&(l[2]=a),a>l[3]&&(l[3]=a),t&&(y<l[4]&&(l[4]=y),y>l[5]&&(l[5]=y));}if(u>0&&(u*=-1),i>0&&(i*=-1),!u)return null;u*=.5,i*=.5;const c=[e/(6*u)+s,r/(6*u)+g,u];return t&&(l[4]===l[5]||0===i?(c[3]=(l[4]+l[5])/2,c[4]=0):(c[3]=o/(6*i)+h,c[4]=i)),c}function i$b(l,e){const r=e?[0,0,0]:[0,0],o=e?[0,0,0]:[0,0];let u=0,i=0,s=0,g=0;for(let h=0,c=l.length;h<c-1;h++){const c=l[h],f=l[h+1];if(c&&f){r[0]=c[0],r[1]=c[1],o[0]=f[0],o[1]=f[1],e&&c.length>2&&f.length>2&&(r[2]=c[2],o[2]=f[2]);const l=r$9(r,o);if(l){u+=l;const n=f$7(c,f);i+=l*n[0],s+=l*n[1],e&&n.length>2&&(g+=l*n[2]);}}}return u>0?e?[i/u,s/u,g/u]:[i/u,s/u]:l.length?l[0]:null}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function r$7(n){function t(t,i){return null==t?i:null==i?t:n(t,i)}return t}const u$8=r$7(Math.min),l$6=r$7(Math.max);function h$8(n,t,i,o){const e=i?3:2;if(!t.length||!t[0].length)return null;let r,c,f,h,[s,g]=t[0][0],[x,m]=t[0][0];for(let a=0;a<t.length;a++){const n=t[a];for(let t=0;t<n.length;t++){const a=n[t],[d,v]=a;if(s=u$8(s,d),g=u$8(g,v),x=l$6(x,d),m=l$6(m,v),i&&a.length>2){const n=a[2];r=u$8(r,n),c=l$6(c,n);}if(o&&a.length>e){const n=a[e];f=u$8(r,n),h=l$6(c,n);}}}return i?o?(n[0]=s,n[1]=g,n[2]=r,n[3]=f,n[4]=x,n[5]=m,n[6]=c,n[7]=h,n.length=8,n):(n[0]=s,n[1]=g,n[2]=r,n[3]=x,n[4]=m,n[5]=c,n.length=6,n):o?(n[0]=s,n[1]=g,n[2]=f,n[3]=x,n[4]=m,n[5]=h,n.length=6,n):(n[0]=s,n[1]=g,n[2]=x,n[3]=m,n.length=4,n)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const x$3=[];function a$b(n,i,t,u){return {xmin:n,ymin:i,xmax:t,ymax:u}}function c$a(n,i,t,u,m,o){return {xmin:n,ymin:i,zmin:t,xmax:u,ymax:m,zmax:o}}function s$a(n,i,t,u,m,o){return {xmin:n,ymin:i,mmin:t,xmax:u,ymax:m,mmax:o}}function e$e(n,i,t,u,m,o,r,x){return {xmin:n,ymin:i,zmin:t,mmin:u,xmax:m,ymax:o,zmax:r,mmax:x}}function f$6(n,i=!1,t=!1){return i?t?e$e(n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7]):c$a(n[0],n[1],n[2],n[3],n[4],n[5]):t?s$a(n[0],n[1],n[2],n[3],n[4],n[5]):a$b(n[0],n[1],n[2],n[3])}function v$3(n){const{hasZ:t,hasM:u,rings:m}=n,o=h$8(x$3,m,t??!1,u??!1);return o?f$6(o,t,u):null}function h$7(n){const{hasZ:t,hasM:u,paths:m}=n,o=h$8(x$3,m,t??!1,u??!1);return o?f$6(o,t,u):null}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var x$2;function j$1(t){return !Array.isArray(t[0])}let w$1=x$2=class extends p$9{static fromExtent(t){const r=t.clone().normalize(),e=t.spatialReference;let s=!1,i=!1;for(const o of r)o.hasZ&&(s=!0),o.hasM&&(i=!0);const n={rings:r.map((t=>{const r=[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]];if(s&&t.hasZ){const e=t.zmin+.5*(t.zmax-t.zmin);for(let t=0;t<r.length;t++)r[t].push(e);}if(i&&t.hasM){const e=t.mmin+.5*(t.mmax-t.mmin);for(let t=0;t<r.length;t++)r[t].push(e);}return r})),spatialReference:e};return s&&(n.hasZ=!0),i&&(n.hasM=!0),new x$2(n)}constructor(...t){super(...t),this.rings=[],this.type="polygon";}normalizeCtorArgs(t,r){let e,s,i=null,n=null;return t&&!Array.isArray(t)?(i=t.rings?t.rings:null,r||(t.spatialReference?r=t.spatialReference:t.rings||(r=t)),e=t.hasZ,s=t.hasM):i=t,i=i||[],r=r||f$c.WGS84,i.length&&i[0]&&null!=i[0][0]&&"number"==typeof i[0][0]&&(i=[i]),n=i[0]&&i[0][0],n&&(void 0===e&&void 0===s?(e=n.length>2,s=n.length>3):void 0===e?e=s?n.length>3:n.length>2:void 0===s&&(s=e?n.length>3:n.length>2)),{rings:i,spatialReference:r,hasZ:e,hasM:s}}get cache(){return this.commitProperty("rings"),this.commitProperty("hasZ"),this.commitProperty("hasM"),this.commitProperty("spatialReference"),{}}get centroid(){const t=r$8(this);if(!t||isNaN(t[0])||isNaN(t[1])||this.hasZ&&isNaN(t[2]))return null;const r=new w$3;return r.x=t[0],r.y=t[1],r.spatialReference=this.spatialReference,this.hasZ&&(r.z=t[2]),r}get extent(){const{spatialReference:t}=this,r=v$3(this);if(!r)return null;const e=new w$2(r);return e.spatialReference=t,e}get isSelfIntersecting(){return p$7(this.rings)}writeRings(t,r){r.rings=p$l(this.rings);}addRing(t){if(!t)return;const r=this.rings,e=r.length;if(j$1(t)){const s=[];for(let r=0,e=t.length;r<e;r++)s[r]=t[r].toArray();r[e]=s;}else r[e]=t.concat();return this.notifyChange("rings"),this}clone(){const t=new x$2;return t.spatialReference=this.spatialReference,t.rings=p$l(this.rings),t.hasZ=this.hasZ,t.hasM=this.hasM,t}equals(t){if(this===t)return !0;if(t$x(t))return !1;const e=this.spatialReference,n=t.spatialReference;if(r$r(e)!==r$r(n))return !1;if(r$r(e)&&r$r(n)&&!e.equals(n))return !1;if(this.rings.length!==t.rings.length)return !1;const o=([t,r,e,s],[i,n,o,a])=>t===i&&r===n&&(null==e&&null==o||e===o)&&(null==s&&null==a||s===a);for(let s=0;s<this.rings.length;s++){const e=this.rings[s],i=t.rings[s];if(!i$w(e,i,o))return !1}return !0}contains(t){if(!t)return !1;const r=M$2(t,this.spatialReference);return c$e(this,r$r(r)?r:t)}isClockwise(t){let r;return r=j$1(t)?t.map((t=>this.hasZ?this.hasM?[t.x,t.y,t.z,t.m]:[t.x,t.y,t.z]:[t.x,t.y])):t,h$9(r,this.hasM,this.hasZ)}getPoint(t,r){if(!this._validateInputs(t,r))return null;const e=this.rings[t][r],s=this.hasZ,i=this.hasM;return s&&!i?new w$3(e[0],e[1],e[2],void 0,this.spatialReference):i&&!s?new w$3(e[0],e[1],void 0,e[2],this.spatialReference):s&&i?new w$3(e[0],e[1],e[2],e[3],this.spatialReference):new w$3(e[0],e[1],this.spatialReference)}insertPoint(t,r,e){return this._validateInputs(t,r,!0)?(h$b(this,e),Array.isArray(e)||(e=e.toArray()),this.rings[t].splice(r,0,e),this.notifyChange("rings"),this):this}removePoint(t,r){if(!this._validateInputs(t,r))return null;const e=new w$3(this.rings[t].splice(r,1)[0],this.spatialReference);return this.notifyChange("rings"),e}removeRing(t){if(!this._validateInputs(t,null))return null;const r=this.rings.splice(t,1)[0],e=this.spatialReference,s=r.map((t=>new w$3(t,e)));return this.notifyChange("rings"),s}setPoint(t,r,e){return this._validateInputs(t,r)?(h$b(this,e),Array.isArray(e)||(e=e.toArray()),this.rings[t][r]=e,this.notifyChange("rings"),this):this}_validateInputs(t,r,e=!1){if(null==t||t<0||t>=this.rings.length)return !1;if(null!=r){const s=this.rings[t];if(e&&(r<0||r>s.length))return !1;if(!e&&(r<0||r>=s.length))return !1}return !0}toJSON(t){return this.write({},t)}};e$u([y$9({readOnly:!0})],w$1.prototype,"cache",null),e$u([y$9({readOnly:!0})],w$1.prototype,"centroid",null),e$u([y$9({readOnly:!0})],w$1.prototype,"extent",null),e$u([y$9({readOnly:!0})],w$1.prototype,"isSelfIntersecting",null),e$u([y$9({type:[[[Number]]],json:{write:{isRequired:!0}}})],w$1.prototype,"rings",void 0),e$u([r$c("rings")],w$1.prototype,"writeRings",null),w$1=x$2=e$u([a$g("esri.geometry.Polygon")],w$1),w$1.prototype.toJSON.isDefaultToJSON=!0;const v$2=w$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var c$9;function u$7(t){return !Array.isArray(t[0])}let f$5=c$9=class extends p$9{constructor(...t){super(...t),this.paths=[],this.type="polyline";}normalizeCtorArgs(t,e){let s,r,i=null,a=null;return t&&!Array.isArray(t)?(i=t.paths?t.paths:null,e||(t.spatialReference?e=t.spatialReference:t.paths||(e=t)),s=t.hasZ,r=t.hasM):i=t,i=i||[],e=e||f$c.WGS84,i.length&&i[0]&&null!=i[0][0]&&"number"==typeof i[0][0]&&(i=[i]),a=i[0]&&i[0][0],a&&(void 0===s&&void 0===r?(s=a.length>2,r=!1):void 0===s?s=!r&&a.length>3:void 0===r&&(r=!s&&a.length>3)),{paths:i,spatialReference:e,hasZ:s,hasM:r}}get cache(){return this.commitProperty("paths"),this.commitProperty("hasZ"),this.commitProperty("hasM"),this.commitProperty("spatialReference"),{}}get extent(){const{spatialReference:t}=this,e=h$7(this);if(!e)return null;const s=new w$2(e);return s.spatialReference=t,s}writePaths(t,s){s.paths=p$l(this.paths);}addPath(t){if(!t)return;const e=this.paths,s=e.length;if(u$7(t)){const r=[];for(let e=0,s=t.length;e<s;e++)r[e]=t[e].toArray();e[s]=r;}else e[s]=t.concat();return this.notifyChange("paths"),this}clone(){const t=new c$9;return t.spatialReference=this.spatialReference,t.paths=p$l(this.paths),t.hasZ=this.hasZ,t.hasM=this.hasM,t}getPoint(t,e){if(!this._validateInputs(t,e))return null;const s=this.paths[t][e],r=this.hasZ,i=this.hasM;return r&&!i?new w$3(s[0],s[1],s[2],void 0,this.spatialReference):i&&!r?new w$3(s[0],s[1],void 0,s[2],this.spatialReference):r&&i?new w$3(s[0],s[1],s[2],s[3],this.spatialReference):new w$3(s[0],s[1],this.spatialReference)}insertPoint(t,e,s){return this._validateInputs(t,e,!0)?(h$b(this,s),Array.isArray(s)||(s=s.toArray()),this.paths[t].splice(e,0,s),this.notifyChange("paths"),this):this}removePath(t){if(!this._validateInputs(t,null))return null;const e=this.paths.splice(t,1)[0],s=this.spatialReference,r=e.map((t=>new w$3(t,s)));return this.notifyChange("paths"),r}removePoint(t,e){if(!this._validateInputs(t,e))return null;const s=new w$3(this.paths[t].splice(e,1)[0],this.spatialReference);return this.notifyChange("paths"),s}setPoint(t,e,s){return this._validateInputs(t,e)?(h$b(this,s),Array.isArray(s)||(s=s.toArray()),this.paths[t][e]=s,this.notifyChange("paths"),this):this}_validateInputs(t,e,s=!1){if(null==t||t<0||t>=this.paths.length)return !1;if(null!=e){const r=this.paths[t];if(s&&(e<0||e>r.length))return !1;if(!s&&(e<0||e>=r.length))return !1}return !0}toJSON(t){return this.write({},t)}};e$u([y$9({readOnly:!0})],f$5.prototype,"cache",null),e$u([y$9({readOnly:!0})],f$5.prototype,"extent",null),e$u([y$9({type:[[[Number]]],json:{write:{isRequired:!0}}})],f$5.prototype,"paths",void 0),e$u([r$c("paths")],f$5.prototype,"writePaths",null),f$5=c$9=e$u([a$g("esri.geometry.Polyline")],f$5),f$5.prototype.toJSON.isDefaultToJSON=!0;const m$6=f$5;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
o$g()({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon"});o$g()({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh"});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const n$d={base:p$9,key:"type",typeMap:{extent:w$2,multipoint:u$a,point:w$3,polyline:m$6,polygon:v$2}};S$3(n$d);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const t$7={type:String,json:{read:{source:"token"},write:{target:"token"}}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let a$a=class extends l$b{constructor(t){super(t),this.address=null,this.apiKey=null,this.categories=null,this.countryCode=null,this.forStorage=null,this.location=null,this.locationType=null,this.magicKey=null,this.maxLocations=null,this.outFields=null,this.outSpatialReference=null,this.searchExtent=null;}};e$u([y$9({type:Object,json:{write:!0}})],a$a.prototype,"address",void 0),e$u([y$9(t$7)],a$a.prototype,"apiKey",void 0),e$u([y$9({type:[String],json:{read:{source:"category",reader:t=>t?t.split(","):null},write:{target:"category",writer:(t,o)=>{o.category=t?t.join(","):null;}}}})],a$a.prototype,"categories",void 0),e$u([y$9({type:String,json:{write:!0}})],a$a.prototype,"countryCode",void 0),e$u([y$9({type:Boolean,json:{write:!0}})],a$a.prototype,"forStorage",void 0),e$u([y$9({type:w$3,json:{write:{writer:(t,o)=>{o.location=t?t.clone().normalize():null;}}}})],a$a.prototype,"location",void 0),e$u([y$9({type:String,json:{write:!0}})],a$a.prototype,"locationType",void 0),e$u([y$9({type:String,json:{write:!0}})],a$a.prototype,"magicKey",void 0),e$u([y$9({type:Number,json:{write:!0}})],a$a.prototype,"maxLocations",void 0),e$u([y$9({type:[String],json:{write:{writer:(t,o)=>{o.outFields=t?t.join(","):null;}}}})],a$a.prototype,"outFields",void 0),e$u([y$9({type:f$c,json:{read:{source:"outSR"},write:{target:"outSR"}}})],a$a.prototype,"outSpatialReference",void 0),e$u([y$9({type:w$2,json:{write:{writer:(t,o)=>{const e=t?t.shiftCentralMeridian():null;o.searchExtent=e;}}}})],a$a.prototype,"searchExtent",void 0),a$a=e$u([a$g("esri.rest.support.AddressToLocationsParameters")],a$a),a$a.from=b$3(a$a);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let p$6=class extends l$b{constructor(r){super(r),this.addresses=null,this.categories=null,this.countryCode=null,this.locationType=null,this.outSpatialReference=null;}};e$u([y$9({type:[Object],json:{read:{reader:r=>r&&r.records?r.records.map((r=>r.attributes)):null},write:{writer:(r,e)=>{const t=[];Array.isArray(r)&&r.forEach((r=>{t.push({attributes:r});})),e.addresses={records:t};}}}})],p$6.prototype,"addresses",void 0),e$u([y$9({type:[String],json:{read:{source:"category",reader:r=>r?r.split(","):null},write:{target:"category",writer:(r,e)=>{e.category=r?r.join(","):null;}}}})],p$6.prototype,"categories",void 0),e$u([y$9({type:String,json:{read:{source:"sourceCountry"},write:{target:"sourceCountry"}}})],p$6.prototype,"countryCode",void 0),e$u([y$9({type:String,json:{write:!0}})],p$6.prototype,"locationType",void 0),e$u([y$9({type:f$c,json:{read:{source:"outSR"},write:{target:"outSR"}}})],p$6.prototype,"outSpatialReference",void 0),p$6=e$u([a$g("esri.rest.support.AddressesToLocationsParameters")],p$6),p$6.from=b$3(p$6);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let a$9=class extends l$b{constructor(o){super(o),this.apiKey=null,this.location=null,this.locationType=null,this.outSpatialReference=null;}};e$u([y$9(t$7)],a$9.prototype,"apiKey",void 0),e$u([y$9({type:w$3,json:{write:{writer:(o,r)=>{const t=o?o.clone().normalize():null,e=void 0!==t;r.location=e?t:null;}}}})],a$9.prototype,"location",void 0),e$u([y$9({type:String,json:{write:!0}})],a$9.prototype,"locationType",void 0),e$u([y$9({type:f$c,json:{read:{source:"outSR"},write:{target:"outSR"}}})],a$9.prototype,"outSpatialReference",void 0),a$9=e$u([a$g("esri.rest.support.LocationToAddressParameters")],a$9),a$9.from=b$3(a$9);const n$c=a$9;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
async function n$b(e,n,i){n=n$c.from(n);const c=f$o(e),m={...n.toJSON(),f:"json"},u=s$u({...c.query,...m}),f=i$t(u,i),p=`${c.path}/reverseGeocode`;return U$2(p,f).then(d$8)}function d$8({data:r}){if(!r)return;const{address:o,location:t}=r,s=o&&o.Match_addr||"";return c$c.fromJSON({address:s,attributes:o||{},location:t,score:100})}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let e$d=class extends l$b{constructor(o){super(o),this.isCollection=null,this.magicKey=null,this.text=null;}};e$u([y$9({type:Boolean,json:{write:!0}})],e$d.prototype,"isCollection",void 0),e$u([y$9({type:String,json:{write:!0}})],e$d.prototype,"magicKey",void 0),e$u([y$9({type:String,json:{write:!0}})],e$d.prototype,"text",void 0),e$d=e$u([a$g("esri.rest.support.SuggestionCandidate")],e$d);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let c$8=class extends l$b{constructor(t){super(t),this.apiKey=null,this.categories=null,this.countryCode=null,this.location=null,this.maxSuggestions=null,this.outSpatialReference=null,this.searchExtent=null,this.text=null;}};e$u([y$9(t$7)],c$8.prototype,"apiKey",void 0),e$u([y$9({type:[String],json:{read:{source:"category",reader:t=>t?t.split(","):null},write:{target:"category",writer:(t,o)=>{o.category=t?t.join(","):null;}}}})],c$8.prototype,"categories",void 0),e$u([y$9({type:String,json:{write:!0}})],c$8.prototype,"countryCode",void 0),e$u([y$9({type:w$3,json:{write:{writer:(t,o)=>{o.location=t?t.clone().normalize():null;}}}})],c$8.prototype,"location",void 0),e$u([y$9({type:Number,json:{write:!0}})],c$8.prototype,"maxSuggestions",void 0),e$u([y$9({type:f$c,json:{read:{source:"outSR"},write:{target:"outSR"}}})],c$8.prototype,"outSpatialReference",void 0),e$u([y$9({type:w$2,json:{write:{writer:(t,o)=>{const e=t?t.shiftCentralMeridian():null;o.searchExtent=JSON.stringify(e);}}}})],c$8.prototype,"searchExtent",void 0),e$u([y$9({type:String,json:{write:!0}})],c$8.prototype,"text",void 0),c$8=e$u([a$g("esri.rest.support.SuggestLocationsParameters")],c$8),c$8.from=b$3(c$8);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class i$a{constructor(){this._emitter=new i$a.EventEmitter(this);}emit(t,e){return this._emitter.emit(t,e)}on(t,e){return this._emitter.on(t,e)}once(t,e){return this._emitter.once(t,e)}hasEventListener(t){return this._emitter.hasEventListener(t)}}!function(n){class o{constructor(t=null){this._target=t,this._listenersMap=null;}clear(){this._listenersMap&&this._listenersMap.clear(),this._listenersMap=null;}emit(t,e){const s=this._listenersMap&&this._listenersMap.get(t);if(!s)return !1;const r=this._target||this;return [...s].forEach((t=>{t.call(r,e);})),s.length>0}on(t,e){if(Array.isArray(t)){const r=t.map((t=>this.on(t,e)));return r$l(r)}if(t.includes(","))throw new TypeError("Evented.on() with a comma delimited string of event types is not supported");this._listenersMap||(this._listenersMap=new Map);const r=this._listenersMap.get(t)||[];return r.push(e),this._listenersMap.set(t,r),{remove:()=>{const s=this._listenersMap&&this._listenersMap.get(t)||[],r=s.indexOf(e);r>=0&&s.splice(r,1);}}}once(t,e){const s=this.on(t,(t=>{s.remove(),e.call(null,t);}));return s}hasEventListener(t){const e=this._listenersMap&&this._listenersMap.get(t);return null!=e&&e.length>0}}n.EventEmitter=o,n.EventedMixin=e=>{let s=class extends e{constructor(){super(...arguments),this._emitter=new o;}destroy(){this._emitter.clear();}emit(t,e){return this._emitter.emit(t,e)}on(t,e){return this._emitter.on(t,e)}once(t,e){return this._emitter.once(t,e)}hasEventListener(t){return this._emitter.hasEventListener(t)}};return s=e$u([a$g("esri.core.Evented")],s),s};let h=class extends v$4{constructor(){super(...arguments),this._emitter=new i$a.EventEmitter(this);}destroy(){this._emitter.clear();}emit(t,e){return this._emitter.emit(t,e)}on(t,e){return this._emitter.on(t,e)}once(t,e){return this._emitter.once(t,e)}hasEventListener(t){return this._emitter.hasEventListener(t)}};h=e$u([a$g("esri.core.Evented")],h),n.EventedAccessor=h;}(i$a||(i$a={}));const n$a=i$a;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function l$5(n,t,r={}){return m$5(n,t,r,y$2)}function f$4(n,t,r={}){return m$5(n,t,r,d$7)}function m$5(n,t,r={},e){let i=null;const u=r.once?(n,r)=>{e(n)&&(p$m(i),t(n,r));}:(n,r)=>{e(n)&&t(n,r);};if(i=P(n,u,r.sync,r.equals),r.initial){const t=n();u(t,t);}return i}function y$2(n){return !0}function d$7(n){return !!n}const h$6={initial:!0};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let o$8;const e$c=globalThis.esriConfig?.locale??globalThis.dojoConfig?.locale;function t$6(){return e$c??globalThis.navigator?.language??"en"}function l$4(){return void 0===o$8&&(o$8=t$6()),o$8}const u$6=[];function s$9(n){return u$6.push(n),{remove(){u$6.splice(u$6.indexOf(n),1);}}}const f$3=[];function g$1(n){return f$3.push(n),{remove(){u$6.splice(f$3.indexOf(n),1);}}}function h$5(){const e=t$6();o$8!==e&&(o$8=e,[...f$3].forEach((n=>{n.call(null,e);})),[...u$6].forEach((n=>{n.call(null,e);})));}globalThis.addEventListener?.("languagechange",h$5);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const r$6={year:"numeric",month:"numeric",day:"numeric"},n$9={year:"numeric",month:"long",day:"numeric"},a$8={year:"numeric",month:"short",day:"numeric"},h$4={year:"numeric",month:"long",weekday:"long",day:"numeric"},m$4={hour:"numeric",minute:"numeric"},i$9={...m$4,second:"numeric"},s$8={"short-date":r$6,"short-date-short-time":{...r$6,...m$4},"short-date-short-time-24":{...r$6,...m$4,hour12:!1},"short-date-long-time":{...r$6,...i$9},"short-date-long-time-24":{...r$6,...i$9,hour12:!1},"short-date-le":r$6,"short-date-le-short-time":{...r$6,...m$4},"short-date-le-short-time-24":{...r$6,...m$4,hour12:!1},"short-date-le-long-time":{...r$6,...i$9},"short-date-le-long-time-24":{...r$6,...i$9,hour12:!1},"long-month-day-year":n$9,"long-month-day-year-short-time":{...n$9,...m$4},"long-month-day-year-short-time-24":{...n$9,...m$4,hour12:!1},"long-month-day-year-long-time":{...n$9,...i$9},"long-month-day-year-long-time-24":{...n$9,...i$9,hour12:!1},"day-short-month-year":a$8,"day-short-month-year-short-time":{...a$8,...m$4},"day-short-month-year-short-time-24":{...a$8,...m$4,hour12:!1},"day-short-month-year-long-time":{...a$8,...i$9},"day-short-month-year-long-time-24":{...a$8,...i$9,hour12:!1},"long-date":h$4,"long-date-short-time":{...h$4,...m$4},"long-date-short-time-24":{...h$4,...m$4,hour12:!1},"long-date-long-time":{...h$4,...i$9},"long-date-long-time-24":{...h$4,...i$9,hour12:!1},"long-month-year":{month:"long",year:"numeric"},"short-month-year":{month:"short",year:"numeric"},year:{year:"numeric"},"short-time":m$4,"long-time":i$9},l$3=o$g()({shortDate:"short-date",shortDateShortTime:"short-date-short-time",shortDateShortTime24:"short-date-short-time-24",shortDateLongTime:"short-date-long-time",shortDateLongTime24:"short-date-long-time-24",shortDateLE:"short-date-le",shortDateLEShortTime:"short-date-le-short-time",shortDateLEShortTime24:"short-date-le-short-time-24",shortDateLELongTime:"short-date-le-long-time",shortDateLELongTime24:"short-date-le-long-time-24",longMonthDayYear:"long-month-day-year",longMonthDayYearShortTime:"long-month-day-year-short-time",longMonthDayYearShortTime24:"long-month-day-year-short-time-24",longMonthDayYearLongTime:"long-month-day-year-long-time",longMonthDayYearLongTime24:"long-month-day-year-long-time-24",dayShortMonthYear:"day-short-month-year",dayShortMonthYearShortTime:"day-short-month-year-short-time",dayShortMonthYearShortTime24:"day-short-month-year-short-time-24",dayShortMonthYearLongTime:"day-short-month-year-long-time",dayShortMonthYearLongTime24:"day-short-month-year-long-time-24",longDate:"long-date",longDateShortTime:"long-date-short-time",longDateShortTime24:"long-date-short-time-24",longDateLongTime:"long-date-long-time",longDateLongTime24:"long-date-long-time-24",longMonthYear:"long-month-year",shortMonthYear:"short-month-year",year:"year"});l$3.toJSON.bind(l$3);l$3.fromJSON.bind(l$3);const u$5={ar:"ar-u-nu-latn-ca-gregory"};let c$7=new WeakMap,D$2=s$8["short-date-short-time"];function T(t){const o=t||D$2;let r=c$7.get(o);if(!r){const t=l$4(),n=u$5[l$4()]||t;r=new Intl.DateTimeFormat(n,o),c$7.set(o,r);}return r}function L$2(t,o){return T(o).format(t)}g$1((()=>{c$7=new WeakMap,D$2=s$8["short-date-short-time"];}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const a$7={ar:"ar-u-nu-latn"};let e$b=new WeakMap,o$7={};function i$8(n){const i=n||o$7;if(!e$b.has(i)){const t=l$4(),o=a$7[l$4()]||t;e$b.set(i,new Intl.NumberFormat(o,n));}return N$3(e$b.get(i))}function m$3(t,n){return -0===t&&(t=0),i$8(n).format(t)}g$1((()=>{e$b=new WeakMap,o$7={};}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const i$7=s$w.getLogger("esri.intl.substitute");function s$7(t,r,n={}){const{format:o={}}=n;return r$q(t,(t=>u$4(t,r,o)))}function u$4(t,e,n){let o,i;const s=t.indexOf(":");if(-1===s?o=t.trim():(o=t.slice(0,s).trim(),i=t.slice(s+1).trim()),!o)return "";const u=t$w(o,e);if(null==u)return "";const m=(i?n?.[i]:null)??n?.[o];return m?c$6(u,m):i?a$6(u,i):f$2(u)}function c$6(t,r){switch(r.type){case"date":return L$2(t,r.intlOptions);case"number":return m$3(t,r.intlOptions);default:return i$7.warn("missing format descriptor for key {key}"),f$2(t)}}function a$6(t,r){switch(r.toLowerCase()){case"dateformat":return L$2(t);case"numberformat":return m$3(t);default:return i$7.warn(`inline format is unsupported since 4.12: ${r}`),/^(dateformat|datestring)/i.test(r)?L$2(t):/^numberformat/i.test(r)?m$3(t):f$2(t)}}function f$2(t){switch(typeof t){case"string":return t;case"number":return m$3(t);case"boolean":return ""+t;default:return t instanceof Date?L$2(t):""}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const r$5=/^([a-z]{2})(?:[-_]([A-Za-z]{2}))?$/,o$6={ar:!0,bg:!0,bs:!0,ca:!0,cs:!0,da:!0,de:!0,el:!0,en:!0,es:!0,et:!0,fi:!0,fr:!0,he:!0,hr:!0,hu:!0,id:!0,it:!0,ja:!0,ko:!0,lt:!0,lv:!0,nb:!0,nl:!0,pl:!0,"pt-BR":!0,"pt-PT":!0,ro:!0,ru:!0,sk:!0,sl:!0,sr:!0,sv:!0,th:!0,tr:!0,uk:!0,vi:!0,"zh-CN":!0,"zh-HK":!0,"zh-TW":!0};function i$6(t){return o$6[t]??!1}const a$5=[],c$5=new Map;function d$6(t){for(const e of c$5.keys())_$5(t.pattern,e)&&c$5.delete(e);}function l$2(t){return a$5.includes(t)||(d$6(t),a$5.unshift(t)),{remove(){const e=a$5.indexOf(t);e>-1&&(a$5.splice(e,1),d$6(t));}}}async function u$3(t){const e=l$4();c$5.has(t)||c$5.set(t,f$1(t,e));const n=c$5.get(t);return n&&await m$2.add(n),n}function h$3(t){if(!r$5.test(t))return null;const e=r$5.exec(t);if(null===e)return null;const[,n,s]=e,o=n+(s?"-"+s.toUpperCase():"");return i$6(o)?o:i$6(n)?n:null}async function f$1(e,n){const s=[];for(const t of a$5)if(_$5(t.pattern,e))try{return await t.fetchMessageBundle(e,n)}catch(r){s.push(r);}if(s.length)throw new s$v("intl:message-bundle-error",`Errors occurred while loading "${e}"`,{errors:s});throw new s$v("intl:no-message-bundle-loader",`No loader found for message bundle "${e}"`)}function _$5(t,e){return "string"==typeof t?e.startsWith(t):t.test(e)}g$1((()=>{c$5.clear();}));const m$2=new class{constructor(){this._numLoading=0,this._dfd=null;}async waitForAll(){this._dfd&&await this._dfd.promise;}add(t){return this._increase(),t.then((()=>this._decrease()),(()=>this._decrease())),this.waitForAll()}_increase(){this._numLoading++,this._dfd||(this._dfd=A$4());}_decrease(){this._numLoading=Math.max(this._numLoading-1,0),this._dfd&&0===this._numLoading&&(this._dfd.resolve(),this._dfd=null);}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
async function o$5(e,n,o,i){const a=n.exec(o);if(!a)throw new s$v("esri-intl:invalid-bundle",`Bundle id "${o}" is not compatible with the pattern "${n}"`);const c=a[1]?`${a[1]}/`:"",l=a[2],w=h$3(i),h=`${c}${l}.json`,u=w?`${c}${l}_${w}.json`:h;let f;try{f=await s$6(e(u));}catch(d){if(u===h)throw new s$v("intl:unknown-bundle",`Bundle "${o}" cannot be loaded`,{error:d});try{f=await s$6(e(h));}catch(d){throw new s$v("intl:unknown-bundle",`Bundle "${o}" cannot be loaded`,{error:d})}}return f}async function s$6(t){if(r$r(c$4.fetchBundleAsset))return c$4.fetchBundleAsset(t);const r=await U$2(t,{responseType:"text"});return JSON.parse(r.data)}class i$5{constructor({base:e="",pattern:t,location:n=new URL(window.location.href)}){let r;r="string"==typeof n?e=>new URL(e,new URL(n,window.location.href)).href:n instanceof URL?e=>new URL(e,n).href:n,this.pattern="string"==typeof t?new RegExp(`^${t}`):t,this.getAssetUrl=r,e=e?e.endsWith("/")?e:e+"/":"",this.matcher=new RegExp(`^${e}(?:(.*)/)?(.*)$`);}fetchMessageBundle(e,t){return o$5(this.getAssetUrl,this.matcher,e,t)}}function a$4(e){return new i$5(e)}const c$4={};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const i$4=s$w.getLogger("esri.assets");function a$3(t){if(!s$x.assetsPath)throw i$4.errorOnce("The API assets location needs to be set using config.assetsPath. More information: https://arcg.is/1OzLe50"),new s$v("assets:path-not-set","config.assetsPath is not set");return V$3(s$x.assetsPath,t)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
l$2(a$4({pattern:"esri/",location:a$3}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$a(e){return "string"==typeof e?document.getElementById(e):e??null}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var h$2;!function(s){s[s.PENDING=0]="PENDING",s[s.RESOLVED=1]="RESOLVED",s[s.REJECTED=2]="REJECTED";}(h$2||(h$2={}));class n$8{constructor(s){this.instance=s,this._resolver=A$4(),this._status=h$2.PENDING,this._resolvingPromises=[],this._resolver.promise.then((()=>{this._status=h$2.RESOLVED,this._cleanUp();}),(()=>{this._status=h$2.REJECTED,this._cleanUp();}));}addResolvingPromise(s){this._resolvingPromises.push(s),this._tryResolve();}isResolved(){return this._status===h$2.RESOLVED}isRejected(){return this._status===h$2.REJECTED}isFulfilled(){return this._status!==h$2.PENDING}abort(){this._resolver.reject(a$q());}when(s,e){return this._resolver.promise.then(s,e)}_cleanUp(){this._allPromise=this._resolvingPromises=this._allPromise=null;}_tryResolve(){if(this.isFulfilled())return;const s=A$4(),e=[...this._resolvingPromises,N$3(s.promise)],t=this._allPromise=Promise.all(e);t.then((()=>{this.isFulfilled()||this._allPromise!==t||this._resolver.resolve(this.instance);}),(s=>{this.isFulfilled()||this._allPromise!==t||j$a(s)||this._resolver.reject(s);})),s.resolve();}}const m$1=e=>{let i=class extends e{constructor(...s){super(...s),this._promiseProps=new n$8(this),this.addResolvingPromise(Promise.resolve());}isResolved(){return this._promiseProps.isResolved()}isRejected(){return this._promiseProps.isRejected()}isFulfilled(){return this._promiseProps.isFulfilled()}when(s,e){return new Promise(((s,e)=>{this._promiseProps.when(s,e);})).then(s,e)}catch(s){return this.when(null,s)}addResolvingPromise(s){s&&!this._promiseProps.isFulfilled()&&this._promiseProps.addResolvingPromise("_promiseProps"in s?s.when():s);}};return i=e$u([a$g("esri.core.Promise")],i),i};let _$4=class extends(m$1(v$4)){};_$4=e$u([a$g("esri.core.Promise")],_$4);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const t$5="randomUUID"in crypto;function n$7(){if(t$5)return crypto.randomUUID();const n=crypto.getRandomValues(new Uint16Array(8));n[3]=4095&n[3]|16384,n[4]=16383&n[4]|32768;const r=t=>n[t].toString(16).padStart(4,"0");return r(0)+r(1)+"-"+r(2)+"-"+r(3)+"-"+r(4)+"-"+r(5)+r(6)+r(7)}

/*!
 * @esri/arcgis-html-sanitizer - v3.0.1 - Tue Nov 15 2022 09:46:54 GMT-0800 (Pacific Standard Time)
 * Copyright (c) 2022 - Environmental Systems Research Institute, Inc.
 * Apache-2.0
 * 
 * js-xss
 * Copyright (c) 2012-2018 Zongmin Lei(雷宗民) <leizongmin@gmail.com>
 * http://ucdok.com
 * MIT License, see https://github.com/leizongmin/js-xss/blob/master/LICENSE for details
 */
/**
 * Determine if the value is a plain object.
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 */
var isPlainObject = function (value) {
    if (typeof value !== "object" || value === null) {
        return false;
    }
    if (Object.prototype.toString.call(value) !== "[object Object]") {
        return false;
    }
    var proto = Object.getPrototypeOf(value);
    if (proto === null) {
        return true;
    }
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(value) === proto;
};

var lib$1 = {exports: {}};

var _default$1 = {};

var lib = {exports: {}};

var _default = {};

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

function getDefaultWhiteList$1 () {
  // 白名单值说明：
  // true: 允许该属性
  // Function: function (val) { } 返回true表示允许该属性，其他值均表示不允许
  // RegExp: regexp.test(val) 返回true表示允许该属性，其他值均表示不允许
  // 除上面列出的值外均表示不允许
  var whiteList = {};

  whiteList['align-content'] = false; // default: auto
  whiteList['align-items'] = false; // default: auto
  whiteList['align-self'] = false; // default: auto
  whiteList['alignment-adjust'] = false; // default: auto
  whiteList['alignment-baseline'] = false; // default: baseline
  whiteList['all'] = false; // default: depending on individual properties
  whiteList['anchor-point'] = false; // default: none
  whiteList['animation'] = false; // default: depending on individual properties
  whiteList['animation-delay'] = false; // default: 0
  whiteList['animation-direction'] = false; // default: normal
  whiteList['animation-duration'] = false; // default: 0
  whiteList['animation-fill-mode'] = false; // default: none
  whiteList['animation-iteration-count'] = false; // default: 1
  whiteList['animation-name'] = false; // default: none
  whiteList['animation-play-state'] = false; // default: running
  whiteList['animation-timing-function'] = false; // default: ease
  whiteList['azimuth'] = false; // default: center
  whiteList['backface-visibility'] = false; // default: visible
  whiteList['background'] = true; // default: depending on individual properties
  whiteList['background-attachment'] = true; // default: scroll
  whiteList['background-clip'] = true; // default: border-box
  whiteList['background-color'] = true; // default: transparent
  whiteList['background-image'] = true; // default: none
  whiteList['background-origin'] = true; // default: padding-box
  whiteList['background-position'] = true; // default: 0% 0%
  whiteList['background-repeat'] = true; // default: repeat
  whiteList['background-size'] = true; // default: auto
  whiteList['baseline-shift'] = false; // default: baseline
  whiteList['binding'] = false; // default: none
  whiteList['bleed'] = false; // default: 6pt
  whiteList['bookmark-label'] = false; // default: content()
  whiteList['bookmark-level'] = false; // default: none
  whiteList['bookmark-state'] = false; // default: open
  whiteList['border'] = true; // default: depending on individual properties
  whiteList['border-bottom'] = true; // default: depending on individual properties
  whiteList['border-bottom-color'] = true; // default: current color
  whiteList['border-bottom-left-radius'] = true; // default: 0
  whiteList['border-bottom-right-radius'] = true; // default: 0
  whiteList['border-bottom-style'] = true; // default: none
  whiteList['border-bottom-width'] = true; // default: medium
  whiteList['border-collapse'] = true; // default: separate
  whiteList['border-color'] = true; // default: depending on individual properties
  whiteList['border-image'] = true; // default: none
  whiteList['border-image-outset'] = true; // default: 0
  whiteList['border-image-repeat'] = true; // default: stretch
  whiteList['border-image-slice'] = true; // default: 100%
  whiteList['border-image-source'] = true; // default: none
  whiteList['border-image-width'] = true; // default: 1
  whiteList['border-left'] = true; // default: depending on individual properties
  whiteList['border-left-color'] = true; // default: current color
  whiteList['border-left-style'] = true; // default: none
  whiteList['border-left-width'] = true; // default: medium
  whiteList['border-radius'] = true; // default: 0
  whiteList['border-right'] = true; // default: depending on individual properties
  whiteList['border-right-color'] = true; // default: current color
  whiteList['border-right-style'] = true; // default: none
  whiteList['border-right-width'] = true; // default: medium
  whiteList['border-spacing'] = true; // default: 0
  whiteList['border-style'] = true; // default: depending on individual properties
  whiteList['border-top'] = true; // default: depending on individual properties
  whiteList['border-top-color'] = true; // default: current color
  whiteList['border-top-left-radius'] = true; // default: 0
  whiteList['border-top-right-radius'] = true; // default: 0
  whiteList['border-top-style'] = true; // default: none
  whiteList['border-top-width'] = true; // default: medium
  whiteList['border-width'] = true; // default: depending on individual properties
  whiteList['bottom'] = false; // default: auto
  whiteList['box-decoration-break'] = true; // default: slice
  whiteList['box-shadow'] = true; // default: none
  whiteList['box-sizing'] = true; // default: content-box
  whiteList['box-snap'] = true; // default: none
  whiteList['box-suppress'] = true; // default: show
  whiteList['break-after'] = true; // default: auto
  whiteList['break-before'] = true; // default: auto
  whiteList['break-inside'] = true; // default: auto
  whiteList['caption-side'] = false; // default: top
  whiteList['chains'] = false; // default: none
  whiteList['clear'] = true; // default: none
  whiteList['clip'] = false; // default: auto
  whiteList['clip-path'] = false; // default: none
  whiteList['clip-rule'] = false; // default: nonzero
  whiteList['color'] = true; // default: implementation dependent
  whiteList['color-interpolation-filters'] = true; // default: auto
  whiteList['column-count'] = false; // default: auto
  whiteList['column-fill'] = false; // default: balance
  whiteList['column-gap'] = false; // default: normal
  whiteList['column-rule'] = false; // default: depending on individual properties
  whiteList['column-rule-color'] = false; // default: current color
  whiteList['column-rule-style'] = false; // default: medium
  whiteList['column-rule-width'] = false; // default: medium
  whiteList['column-span'] = false; // default: none
  whiteList['column-width'] = false; // default: auto
  whiteList['columns'] = false; // default: depending on individual properties
  whiteList['contain'] = false; // default: none
  whiteList['content'] = false; // default: normal
  whiteList['counter-increment'] = false; // default: none
  whiteList['counter-reset'] = false; // default: none
  whiteList['counter-set'] = false; // default: none
  whiteList['crop'] = false; // default: auto
  whiteList['cue'] = false; // default: depending on individual properties
  whiteList['cue-after'] = false; // default: none
  whiteList['cue-before'] = false; // default: none
  whiteList['cursor'] = false; // default: auto
  whiteList['direction'] = false; // default: ltr
  whiteList['display'] = true; // default: depending on individual properties
  whiteList['display-inside'] = true; // default: auto
  whiteList['display-list'] = true; // default: none
  whiteList['display-outside'] = true; // default: inline-level
  whiteList['dominant-baseline'] = false; // default: auto
  whiteList['elevation'] = false; // default: level
  whiteList['empty-cells'] = false; // default: show
  whiteList['filter'] = false; // default: none
  whiteList['flex'] = false; // default: depending on individual properties
  whiteList['flex-basis'] = false; // default: auto
  whiteList['flex-direction'] = false; // default: row
  whiteList['flex-flow'] = false; // default: depending on individual properties
  whiteList['flex-grow'] = false; // default: 0
  whiteList['flex-shrink'] = false; // default: 1
  whiteList['flex-wrap'] = false; // default: nowrap
  whiteList['float'] = false; // default: none
  whiteList['float-offset'] = false; // default: 0 0
  whiteList['flood-color'] = false; // default: black
  whiteList['flood-opacity'] = false; // default: 1
  whiteList['flow-from'] = false; // default: none
  whiteList['flow-into'] = false; // default: none
  whiteList['font'] = true; // default: depending on individual properties
  whiteList['font-family'] = true; // default: implementation dependent
  whiteList['font-feature-settings'] = true; // default: normal
  whiteList['font-kerning'] = true; // default: auto
  whiteList['font-language-override'] = true; // default: normal
  whiteList['font-size'] = true; // default: medium
  whiteList['font-size-adjust'] = true; // default: none
  whiteList['font-stretch'] = true; // default: normal
  whiteList['font-style'] = true; // default: normal
  whiteList['font-synthesis'] = true; // default: weight style
  whiteList['font-variant'] = true; // default: normal
  whiteList['font-variant-alternates'] = true; // default: normal
  whiteList['font-variant-caps'] = true; // default: normal
  whiteList['font-variant-east-asian'] = true; // default: normal
  whiteList['font-variant-ligatures'] = true; // default: normal
  whiteList['font-variant-numeric'] = true; // default: normal
  whiteList['font-variant-position'] = true; // default: normal
  whiteList['font-weight'] = true; // default: normal
  whiteList['grid'] = false; // default: depending on individual properties
  whiteList['grid-area'] = false; // default: depending on individual properties
  whiteList['grid-auto-columns'] = false; // default: auto
  whiteList['grid-auto-flow'] = false; // default: none
  whiteList['grid-auto-rows'] = false; // default: auto
  whiteList['grid-column'] = false; // default: depending on individual properties
  whiteList['grid-column-end'] = false; // default: auto
  whiteList['grid-column-start'] = false; // default: auto
  whiteList['grid-row'] = false; // default: depending on individual properties
  whiteList['grid-row-end'] = false; // default: auto
  whiteList['grid-row-start'] = false; // default: auto
  whiteList['grid-template'] = false; // default: depending on individual properties
  whiteList['grid-template-areas'] = false; // default: none
  whiteList['grid-template-columns'] = false; // default: none
  whiteList['grid-template-rows'] = false; // default: none
  whiteList['hanging-punctuation'] = false; // default: none
  whiteList['height'] = true; // default: auto
  whiteList['hyphens'] = false; // default: manual
  whiteList['icon'] = false; // default: auto
  whiteList['image-orientation'] = false; // default: auto
  whiteList['image-resolution'] = false; // default: normal
  whiteList['ime-mode'] = false; // default: auto
  whiteList['initial-letters'] = false; // default: normal
  whiteList['inline-box-align'] = false; // default: last
  whiteList['justify-content'] = false; // default: auto
  whiteList['justify-items'] = false; // default: auto
  whiteList['justify-self'] = false; // default: auto
  whiteList['left'] = false; // default: auto
  whiteList['letter-spacing'] = true; // default: normal
  whiteList['lighting-color'] = true; // default: white
  whiteList['line-box-contain'] = false; // default: block inline replaced
  whiteList['line-break'] = false; // default: auto
  whiteList['line-grid'] = false; // default: match-parent
  whiteList['line-height'] = false; // default: normal
  whiteList['line-snap'] = false; // default: none
  whiteList['line-stacking'] = false; // default: depending on individual properties
  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby
  whiteList['line-stacking-shift'] = false; // default: consider-shifts
  whiteList['line-stacking-strategy'] = false; // default: inline-line-height
  whiteList['list-style'] = true; // default: depending on individual properties
  whiteList['list-style-image'] = true; // default: none
  whiteList['list-style-position'] = true; // default: outside
  whiteList['list-style-type'] = true; // default: disc
  whiteList['margin'] = true; // default: depending on individual properties
  whiteList['margin-bottom'] = true; // default: 0
  whiteList['margin-left'] = true; // default: 0
  whiteList['margin-right'] = true; // default: 0
  whiteList['margin-top'] = true; // default: 0
  whiteList['marker-offset'] = false; // default: auto
  whiteList['marker-side'] = false; // default: list-item
  whiteList['marks'] = false; // default: none
  whiteList['mask'] = false; // default: border-box
  whiteList['mask-box'] = false; // default: see individual properties
  whiteList['mask-box-outset'] = false; // default: 0
  whiteList['mask-box-repeat'] = false; // default: stretch
  whiteList['mask-box-slice'] = false; // default: 0 fill
  whiteList['mask-box-source'] = false; // default: none
  whiteList['mask-box-width'] = false; // default: auto
  whiteList['mask-clip'] = false; // default: border-box
  whiteList['mask-image'] = false; // default: none
  whiteList['mask-origin'] = false; // default: border-box
  whiteList['mask-position'] = false; // default: center
  whiteList['mask-repeat'] = false; // default: no-repeat
  whiteList['mask-size'] = false; // default: border-box
  whiteList['mask-source-type'] = false; // default: auto
  whiteList['mask-type'] = false; // default: luminance
  whiteList['max-height'] = true; // default: none
  whiteList['max-lines'] = false; // default: none
  whiteList['max-width'] = true; // default: none
  whiteList['min-height'] = true; // default: 0
  whiteList['min-width'] = true; // default: 0
  whiteList['move-to'] = false; // default: normal
  whiteList['nav-down'] = false; // default: auto
  whiteList['nav-index'] = false; // default: auto
  whiteList['nav-left'] = false; // default: auto
  whiteList['nav-right'] = false; // default: auto
  whiteList['nav-up'] = false; // default: auto
  whiteList['object-fit'] = false; // default: fill
  whiteList['object-position'] = false; // default: 50% 50%
  whiteList['opacity'] = false; // default: 1
  whiteList['order'] = false; // default: 0
  whiteList['orphans'] = false; // default: 2
  whiteList['outline'] = false; // default: depending on individual properties
  whiteList['outline-color'] = false; // default: invert
  whiteList['outline-offset'] = false; // default: 0
  whiteList['outline-style'] = false; // default: none
  whiteList['outline-width'] = false; // default: medium
  whiteList['overflow'] = false; // default: depending on individual properties
  whiteList['overflow-wrap'] = false; // default: normal
  whiteList['overflow-x'] = false; // default: visible
  whiteList['overflow-y'] = false; // default: visible
  whiteList['padding'] = true; // default: depending on individual properties
  whiteList['padding-bottom'] = true; // default: 0
  whiteList['padding-left'] = true; // default: 0
  whiteList['padding-right'] = true; // default: 0
  whiteList['padding-top'] = true; // default: 0
  whiteList['page'] = false; // default: auto
  whiteList['page-break-after'] = false; // default: auto
  whiteList['page-break-before'] = false; // default: auto
  whiteList['page-break-inside'] = false; // default: auto
  whiteList['page-policy'] = false; // default: start
  whiteList['pause'] = false; // default: implementation dependent
  whiteList['pause-after'] = false; // default: implementation dependent
  whiteList['pause-before'] = false; // default: implementation dependent
  whiteList['perspective'] = false; // default: none
  whiteList['perspective-origin'] = false; // default: 50% 50%
  whiteList['pitch'] = false; // default: medium
  whiteList['pitch-range'] = false; // default: 50
  whiteList['play-during'] = false; // default: auto
  whiteList['position'] = false; // default: static
  whiteList['presentation-level'] = false; // default: 0
  whiteList['quotes'] = false; // default: text
  whiteList['region-fragment'] = false; // default: auto
  whiteList['resize'] = false; // default: none
  whiteList['rest'] = false; // default: depending on individual properties
  whiteList['rest-after'] = false; // default: none
  whiteList['rest-before'] = false; // default: none
  whiteList['richness'] = false; // default: 50
  whiteList['right'] = false; // default: auto
  whiteList['rotation'] = false; // default: 0
  whiteList['rotation-point'] = false; // default: 50% 50%
  whiteList['ruby-align'] = false; // default: auto
  whiteList['ruby-merge'] = false; // default: separate
  whiteList['ruby-position'] = false; // default: before
  whiteList['shape-image-threshold'] = false; // default: 0.0
  whiteList['shape-outside'] = false; // default: none
  whiteList['shape-margin'] = false; // default: 0
  whiteList['size'] = false; // default: auto
  whiteList['speak'] = false; // default: auto
  whiteList['speak-as'] = false; // default: normal
  whiteList['speak-header'] = false; // default: once
  whiteList['speak-numeral'] = false; // default: continuous
  whiteList['speak-punctuation'] = false; // default: none
  whiteList['speech-rate'] = false; // default: medium
  whiteList['stress'] = false; // default: 50
  whiteList['string-set'] = false; // default: none
  whiteList['tab-size'] = false; // default: 8
  whiteList['table-layout'] = false; // default: auto
  whiteList['text-align'] = true; // default: start
  whiteList['text-align-last'] = true; // default: auto
  whiteList['text-combine-upright'] = true; // default: none
  whiteList['text-decoration'] = true; // default: none
  whiteList['text-decoration-color'] = true; // default: currentColor
  whiteList['text-decoration-line'] = true; // default: none
  whiteList['text-decoration-skip'] = true; // default: objects
  whiteList['text-decoration-style'] = true; // default: solid
  whiteList['text-emphasis'] = true; // default: depending on individual properties
  whiteList['text-emphasis-color'] = true; // default: currentColor
  whiteList['text-emphasis-position'] = true; // default: over right
  whiteList['text-emphasis-style'] = true; // default: none
  whiteList['text-height'] = true; // default: auto
  whiteList['text-indent'] = true; // default: 0
  whiteList['text-justify'] = true; // default: auto
  whiteList['text-orientation'] = true; // default: mixed
  whiteList['text-overflow'] = true; // default: clip
  whiteList['text-shadow'] = true; // default: none
  whiteList['text-space-collapse'] = true; // default: collapse
  whiteList['text-transform'] = true; // default: none
  whiteList['text-underline-position'] = true; // default: auto
  whiteList['text-wrap'] = true; // default: normal
  whiteList['top'] = false; // default: auto
  whiteList['transform'] = false; // default: none
  whiteList['transform-origin'] = false; // default: 50% 50% 0
  whiteList['transform-style'] = false; // default: flat
  whiteList['transition'] = false; // default: depending on individual properties
  whiteList['transition-delay'] = false; // default: 0s
  whiteList['transition-duration'] = false; // default: 0s
  whiteList['transition-property'] = false; // default: all
  whiteList['transition-timing-function'] = false; // default: ease
  whiteList['unicode-bidi'] = false; // default: normal
  whiteList['vertical-align'] = false; // default: baseline
  whiteList['visibility'] = false; // default: visible
  whiteList['voice-balance'] = false; // default: center
  whiteList['voice-duration'] = false; // default: auto
  whiteList['voice-family'] = false; // default: implementation dependent
  whiteList['voice-pitch'] = false; // default: medium
  whiteList['voice-range'] = false; // default: medium
  whiteList['voice-rate'] = false; // default: normal
  whiteList['voice-stress'] = false; // default: normal
  whiteList['voice-volume'] = false; // default: medium
  whiteList['volume'] = false; // default: medium
  whiteList['white-space'] = false; // default: normal
  whiteList['widows'] = false; // default: 2
  whiteList['width'] = true; // default: auto
  whiteList['will-change'] = false; // default: auto
  whiteList['word-break'] = true; // default: normal
  whiteList['word-spacing'] = true; // default: normal
  whiteList['word-wrap'] = true; // default: normal
  whiteList['wrap-flow'] = false; // default: auto
  whiteList['wrap-through'] = false; // default: wrap
  whiteList['writing-mode'] = false; // default: horizontal-tb
  whiteList['z-index'] = false; // default: auto

  return whiteList;
}


/**
 * 匹配到白名单上的一个属性时
 *
 * @param {String} name
 * @param {String} value
 * @param {Object} options
 * @return {String}
 */
function onAttr (name, value, options) {
  // do nothing
}

/**
 * 匹配到不在白名单上的一个属性时
 *
 * @param {String} name
 * @param {String} value
 * @param {Object} options
 * @return {String}
 */
function onIgnoreAttr (name, value, options) {
  // do nothing
}

var REGEXP_URL_JAVASCRIPT = /javascript\s*\:/img;

/**
 * 过滤属性值
 *
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function safeAttrValue$1(name, value) {
  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';
  return value;
}


_default.whiteList = getDefaultWhiteList$1();
_default.getDefaultWhiteList = getDefaultWhiteList$1;
_default.onAttr = onAttr;
_default.onIgnoreAttr = onIgnoreAttr;
_default.safeAttrValue = safeAttrValue$1;

var util$1 = {
  indexOf: function (arr, item) {
    var i, j;
    if (Array.prototype.indexOf) {
      return arr.indexOf(item);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      if (arr[i] === item) {
        return i;
      }
    }
    return -1;
  },
  forEach: function (arr, fn, scope) {
    var i, j;
    if (Array.prototype.forEach) {
      return arr.forEach(fn, scope);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      fn.call(scope, arr[i], i, arr);
    }
  },
  trim: function (str) {
    if (String.prototype.trim) {
      return str.trim();
    }
    return str.replace(/(^\s*)|(\s*$)/g, '');
  },
  trimRight: function (str) {
    if (String.prototype.trimRight) {
      return str.trimRight();
    }
    return str.replace(/(\s*$)/g, '');
  }
};

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

var _$3 = util$1;


/**
 * 解析style
 *
 * @param {String} css
 * @param {Function} onAttr 处理属性的函数
 *   参数格式： function (sourcePosition, position, name, value, source)
 * @return {String}
 */
function parseStyle$1 (css, onAttr) {
  css = _$3.trimRight(css);
  if (css[css.length - 1] !== ';') css += ';';
  var cssLength = css.length;
  var isParenthesisOpen = false;
  var lastPos = 0;
  var i = 0;
  var retCSS = '';

  function addNewAttr () {
    // 如果没有正常的闭合圆括号，则直接忽略当前属性
    if (!isParenthesisOpen) {
      var source = _$3.trim(css.slice(lastPos, i));
      var j = source.indexOf(':');
      if (j !== -1) {
        var name = _$3.trim(source.slice(0, j));
        var value = _$3.trim(source.slice(j + 1));
        // 必须有属性名称
        if (name) {
          var ret = onAttr(lastPos, retCSS.length, name, value, source);
          if (ret) retCSS += ret + '; ';
        }
      }
    }
    lastPos = i + 1;
  }

  for (; i < cssLength; i++) {
    var c = css[i];
    if (c === '/' && css[i + 1] === '*') {
      // 备注开始
      var j = css.indexOf('*/', i + 2);
      // 如果没有正常的备注结束，则后面的部分全部跳过
      if (j === -1) break;
      // 直接将当前位置调到备注结尾，并且初始化状态
      i = j + 1;
      lastPos = i + 1;
      isParenthesisOpen = false;
    } else if (c === '(') {
      isParenthesisOpen = true;
    } else if (c === ')') {
      isParenthesisOpen = false;
    } else if (c === ';') {
      if (isParenthesisOpen) ; else {
        addNewAttr();
      }
    } else if (c === '\n') {
      addNewAttr();
    }
  }

  return _$3.trim(retCSS);
}

var parser$2 = parseStyle$1;

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

var DEFAULT$1 = _default;
var parseStyle = parser$2;


/**
 * 返回值是否为空
 *
 * @param {Object} obj
 * @return {Boolean}
 */
function isNull$1 (obj) {
  return (obj === undefined || obj === null);
}

/**
 * 浅拷贝对象
 *
 * @param {Object} obj
 * @return {Object}
 */
function shallowCopyObject$1 (obj) {
  var ret = {};
  for (var i in obj) {
    ret[i] = obj[i];
  }
  return ret;
}

/**
 * 创建CSS过滤器
 *
 * @param {Object} options
 *   - {Object} whiteList
 *   - {Function} onAttr
 *   - {Function} onIgnoreAttr
 *   - {Function} safeAttrValue
 */
function FilterCSS$2 (options) {
  options = shallowCopyObject$1(options || {});
  options.whiteList = options.whiteList || DEFAULT$1.whiteList;
  options.onAttr = options.onAttr || DEFAULT$1.onAttr;
  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT$1.onIgnoreAttr;
  options.safeAttrValue = options.safeAttrValue || DEFAULT$1.safeAttrValue;
  this.options = options;
}

FilterCSS$2.prototype.process = function (css) {
  // 兼容各种奇葩输入
  css = css || '';
  css = css.toString();
  if (!css) return '';

  var me = this;
  var options = me.options;
  var whiteList = options.whiteList;
  var onAttr = options.onAttr;
  var onIgnoreAttr = options.onIgnoreAttr;
  var safeAttrValue = options.safeAttrValue;

  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {

    var check = whiteList[name];
    var isWhite = false;
    if (check === true) isWhite = check;
    else if (typeof check === 'function') isWhite = check(value);
    else if (check instanceof RegExp) isWhite = check.test(value);
    if (isWhite !== true) isWhite = false;

    // 如果过滤后 value 为空则直接忽略
    value = safeAttrValue(name, value);
    if (!value) return;

    var opts = {
      position: position,
      sourcePosition: sourcePosition,
      source: source,
      isWhite: isWhite
    };

    if (isWhite) {

      var ret = onAttr(name, value, opts);
      if (isNull$1(ret)) {
        return name + ':' + value;
      } else {
        return ret;
      }

    } else {

      var ret = onIgnoreAttr(name, value, opts);
      if (!isNull$1(ret)) {
        return ret;
      }

    }
  });

  return retCSS;
};


var css = FilterCSS$2;

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

(function (module, exports) {
	var DEFAULT = _default;
	var FilterCSS = css;


	/**
	 * XSS过滤
	 *
	 * @param {String} css 要过滤的CSS代码
	 * @param {Object} options 选项：whiteList, onAttr, onIgnoreAttr
	 * @return {String}
	 */
	function filterCSS (html, options) {
	  var xss = new FilterCSS(options);
	  return xss.process(html);
	}


	// 输出
	exports = module.exports = filterCSS;
	exports.FilterCSS = FilterCSS;
	for (var i in DEFAULT) exports[i] = DEFAULT[i];
} (lib, lib.exports));

var util = {
  indexOf: function (arr, item) {
    var i, j;
    if (Array.prototype.indexOf) {
      return arr.indexOf(item);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      if (arr[i] === item) {
        return i;
      }
    }
    return -1;
  },
  forEach: function (arr, fn, scope) {
    var i, j;
    if (Array.prototype.forEach) {
      return arr.forEach(fn, scope);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      fn.call(scope, arr[i], i, arr);
    }
  },
  trim: function (str) {
    if (String.prototype.trim) {
      return str.trim();
    }
    return str.replace(/(^\s*)|(\s*$)/g, "");
  },
  spaceIndex: function (str) {
    var reg = /\s|\n|\t/;
    var match = reg.exec(str);
    return match ? match.index : -1;
  },
};

/**
 * default settings
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var FilterCSS$1 = lib.exports.FilterCSS;
var getDefaultCSSWhiteList = lib.exports.getDefaultWhiteList;
var _$2 = util;

function getDefaultWhiteList() {
  return {
    a: ["target", "href", "title"],
    abbr: ["title"],
    address: [],
    area: ["shape", "coords", "href", "alt"],
    article: [],
    aside: [],
    audio: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "preload",
      "src",
    ],
    b: [],
    bdi: ["dir"],
    bdo: ["dir"],
    big: [],
    blockquote: ["cite"],
    br: [],
    caption: [],
    center: [],
    cite: [],
    code: [],
    col: ["align", "valign", "span", "width"],
    colgroup: ["align", "valign", "span", "width"],
    dd: [],
    del: ["datetime"],
    details: ["open"],
    div: [],
    dl: [],
    dt: [],
    em: [],
    figcaption: [],
    figure: [],
    font: ["color", "size", "face"],
    footer: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    header: [],
    hr: [],
    i: [],
    img: ["src", "alt", "title", "width", "height"],
    ins: ["datetime"],
    li: [],
    mark: [],
    nav: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    section: [],
    small: [],
    span: [],
    sub: [],
    summary: [],
    sup: [],
    strong: [],
    strike: [],
    table: ["width", "border", "align", "valign"],
    tbody: ["align", "valign"],
    td: ["width", "rowspan", "colspan", "align", "valign"],
    tfoot: ["align", "valign"],
    th: ["width", "rowspan", "colspan", "align", "valign"],
    thead: ["align", "valign"],
    tr: ["rowspan", "align", "valign"],
    tt: [],
    u: [],
    ul: [],
    video: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "playsinline",
      "poster",
      "preload",
      "src",
      "height",
      "width",
    ],
  };
}

var defaultCSSFilter = new FilterCSS$1();

/**
 * default onTag function
 *
 * @param {String} tag
 * @param {String} html
 * @param {Object} options
 * @return {String}
 */
function onTag(tag, html, options) {
  // do nothing
}

/**
 * default onIgnoreTag function
 *
 * @param {String} tag
 * @param {String} html
 * @param {Object} options
 * @return {String}
 */
function onIgnoreTag(tag, html, options) {
  // do nothing
}

/**
 * default onTagAttr function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function onTagAttr(tag, name, value) {
  // do nothing
}

/**
 * default onIgnoreTagAttr function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function onIgnoreTagAttr(tag, name, value) {
  // do nothing
}

/**
 * default escapeHtml function
 *
 * @param {String} html
 */
function escapeHtml(html) {
  return html.replace(REGEXP_LT, "&lt;").replace(REGEXP_GT, "&gt;");
}

/**
 * default safeAttrValue function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @param {Object} cssFilter
 * @return {String}
 */
function safeAttrValue(tag, name, value, cssFilter) {
  // unescape attribute value firstly
  value = friendlyAttrValue(value);

  if (name === "href" || name === "src") {
    // filter `href` and `src` attribute
    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`
    value = _$2.trim(value);
    if (value === "#") return "#";
    if (
      !(
        value.substr(0, 7) === "http://" ||
        value.substr(0, 8) === "https://" ||
        value.substr(0, 7) === "mailto:" ||
        value.substr(0, 4) === "tel:" ||
        value.substr(0, 11) === "data:image/" ||
        value.substr(0, 6) === "ftp://" ||
        value.substr(0, 2) === "./" ||
        value.substr(0, 3) === "../" ||
        value[0] === "#" ||
        value[0] === "/"
      )
    ) {
      return "";
    }
  } else if (name === "background") {
    // filter `background` attribute (maybe no use)
    // `javascript:`
    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {
      return "";
    }
  } else if (name === "style") {
    // `expression()`
    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {
      return "";
    }
    // `url()`
    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {
      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;
      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {
        return "";
      }
    }
    if (cssFilter !== false) {
      cssFilter = cssFilter || defaultCSSFilter;
      value = cssFilter.process(value);
    }
  }

  // escape `<>"` before returns
  value = escapeAttrValue(value);
  return value;
}

// RegExp list
var REGEXP_LT = /</g;
var REGEXP_GT = />/g;
var REGEXP_QUOTE = /"/g;
var REGEXP_QUOTE_2 = /&quot;/g;
var REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;
var REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;
var REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;
// var REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\/\*|\*\//gm;
var REGEXP_DEFAULT_ON_TAG_ATTR_4 =
  /((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a):/gi;
// var REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\s"'`]*(d\s*a\s*t\s*a\s*)\:/gi;
// var REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\s"'`]*(d\s*a\s*t\s*a\s*)\:\s*image\//gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_7 =
  /e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\s*r\s*l\s*\(.*/gi;

/**
 * escape double quote
 *
 * @param {String} str
 * @return {String} str
 */
function escapeQuote(str) {
  return str.replace(REGEXP_QUOTE, "&quot;");
}

/**
 * unescape double quote
 *
 * @param {String} str
 * @return {String} str
 */
function unescapeQuote(str) {
  return str.replace(REGEXP_QUOTE_2, '"');
}

/**
 * escape html entities
 *
 * @param {String} str
 * @return {String}
 */
function escapeHtmlEntities(str) {
  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {
    return code[0] === "x" || code[0] === "X"
      ? String.fromCharCode(parseInt(code.substr(1), 16))
      : String.fromCharCode(parseInt(code, 10));
  });
}

/**
 * escape html5 new danger entities
 *
 * @param {String} str
 * @return {String}
 */
function escapeDangerHtml5Entities(str) {
  return str
    .replace(REGEXP_ATTR_VALUE_COLON, ":")
    .replace(REGEXP_ATTR_VALUE_NEWLINE, " ");
}

/**
 * clear nonprintable characters
 *
 * @param {String} str
 * @return {String}
 */
function clearNonPrintableCharacter(str) {
  var str2 = "";
  for (var i = 0, len = str.length; i < len; i++) {
    str2 += str.charCodeAt(i) < 32 ? " " : str.charAt(i);
  }
  return _$2.trim(str2);
}

/**
 * get friendly attribute value
 *
 * @param {String} str
 * @return {String}
 */
function friendlyAttrValue(str) {
  str = unescapeQuote(str);
  str = escapeHtmlEntities(str);
  str = escapeDangerHtml5Entities(str);
  str = clearNonPrintableCharacter(str);
  return str;
}

/**
 * unescape attribute value
 *
 * @param {String} str
 * @return {String}
 */
function escapeAttrValue(str) {
  str = escapeQuote(str);
  str = escapeHtml(str);
  return str;
}

/**
 * `onIgnoreTag` function for removing all the tags that are not in whitelist
 */
function onIgnoreTagStripAll() {
  return "";
}

/**
 * remove tag body
 * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)
 *
 * @param {array} tags
 * @param {function} next
 */
function StripTagBody(tags, next) {
  if (typeof next !== "function") {
    next = function () {};
  }

  var isRemoveAllTag = !Array.isArray(tags);
  function isRemoveTag(tag) {
    if (isRemoveAllTag) return true;
    return _$2.indexOf(tags, tag) !== -1;
  }

  var removeList = [];
  var posStart = false;

  return {
    onIgnoreTag: function (tag, html, options) {
      if (isRemoveTag(tag)) {
        if (options.isClosing) {
          var ret = "[/removed]";
          var end = options.position + ret.length;
          removeList.push([
            posStart !== false ? posStart : options.position,
            end,
          ]);
          posStart = false;
          return ret;
        } else {
          if (!posStart) {
            posStart = options.position;
          }
          return "[removed]";
        }
      } else {
        return next(tag, html, options);
      }
    },
    remove: function (html) {
      var rethtml = "";
      var lastPos = 0;
      _$2.forEach(removeList, function (pos) {
        rethtml += html.slice(lastPos, pos[0]);
        lastPos = pos[1];
      });
      rethtml += html.slice(lastPos);
      return rethtml;
    },
  };
}

/**
 * remove html comments
 *
 * @param {String} html
 * @return {String}
 */
function stripCommentTag(html) {
  var retHtml = "";
  var lastPos = 0;
  while (lastPos < html.length) {
    var i = html.indexOf("<!--", lastPos);
    if (i === -1) {
      retHtml += html.slice(lastPos);
      break;
    }
    retHtml += html.slice(lastPos, i);
    var j = html.indexOf("-->", i);
    if (j === -1) {
      break;
    }
    lastPos = j + 3;
  }
  return retHtml;
}

/**
 * remove invisible characters
 *
 * @param {String} html
 * @return {String}
 */
function stripBlankChar(html) {
  var chars = html.split("");
  chars = chars.filter(function (char) {
    var c = char.charCodeAt(0);
    if (c === 127) return false;
    if (c <= 31) {
      if (c === 10 || c === 13) return true;
      return false;
    }
    return true;
  });
  return chars.join("");
}

_default$1.whiteList = getDefaultWhiteList();
_default$1.getDefaultWhiteList = getDefaultWhiteList;
_default$1.onTag = onTag;
_default$1.onIgnoreTag = onIgnoreTag;
_default$1.onTagAttr = onTagAttr;
_default$1.onIgnoreTagAttr = onIgnoreTagAttr;
_default$1.safeAttrValue = safeAttrValue;
_default$1.escapeHtml = escapeHtml;
_default$1.escapeQuote = escapeQuote;
_default$1.unescapeQuote = unescapeQuote;
_default$1.escapeHtmlEntities = escapeHtmlEntities;
_default$1.escapeDangerHtml5Entities = escapeDangerHtml5Entities;
_default$1.clearNonPrintableCharacter = clearNonPrintableCharacter;
_default$1.friendlyAttrValue = friendlyAttrValue;
_default$1.escapeAttrValue = escapeAttrValue;
_default$1.onIgnoreTagStripAll = onIgnoreTagStripAll;
_default$1.StripTagBody = StripTagBody;
_default$1.stripCommentTag = stripCommentTag;
_default$1.stripBlankChar = stripBlankChar;
_default$1.cssFilter = defaultCSSFilter;
_default$1.getDefaultCSSWhiteList = getDefaultCSSWhiteList;

var parser$1 = {};

/**
 * Simple HTML Parser
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var _$1 = util;

/**
 * get tag name
 *
 * @param {String} html e.g. '<a hef="#">'
 * @return {String}
 */
function getTagName(html) {
  var i = _$1.spaceIndex(html);
  var tagName;
  if (i === -1) {
    tagName = html.slice(1, -1);
  } else {
    tagName = html.slice(1, i + 1);
  }
  tagName = _$1.trim(tagName).toLowerCase();
  if (tagName.slice(0, 1) === "/") tagName = tagName.slice(1);
  if (tagName.slice(-1) === "/") tagName = tagName.slice(0, -1);
  return tagName;
}

/**
 * is close tag?
 *
 * @param {String} html 如：'<a hef="#">'
 * @return {Boolean}
 */
function isClosing(html) {
  return html.slice(0, 2) === "</";
}

/**
 * parse input html and returns processed html
 *
 * @param {String} html
 * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)
 * @param {Function} escapeHtml
 * @return {String}
 */
function parseTag$1(html, onTag, escapeHtml) {

  var rethtml = "";
  var lastPos = 0;
  var tagStart = false;
  var quoteStart = false;
  var currentPos = 0;
  var len = html.length;
  var currentTagName = "";
  var currentHtml = "";

  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {
    var c = html.charAt(currentPos);
    if (tagStart === false) {
      if (c === "<") {
        tagStart = currentPos;
        continue;
      }
    } else {
      if (quoteStart === false) {
        if (c === "<") {
          rethtml += escapeHtml(html.slice(lastPos, currentPos));
          tagStart = currentPos;
          lastPos = currentPos;
          continue;
        }
        if (c === ">") {
          rethtml += escapeHtml(html.slice(lastPos, tagStart));
          currentHtml = html.slice(tagStart, currentPos + 1);
          currentTagName = getTagName(currentHtml);
          rethtml += onTag(
            tagStart,
            rethtml.length,
            currentTagName,
            currentHtml,
            isClosing(currentHtml)
          );
          lastPos = currentPos + 1;
          tagStart = false;
          continue;
        }
        if (c === '"' || c === "'") {
          var i = 1;
          var ic = html.charAt(currentPos - i);

          while (ic.trim() === "" || ic === "=") {
            if (ic === "=") {
              quoteStart = c;
              continue chariterator;
            }
            ic = html.charAt(currentPos - ++i);
          }
        }
      } else {
        if (c === quoteStart) {
          quoteStart = false;
          continue;
        }
      }
    }
  }
  if (lastPos < html.length) {
    rethtml += escapeHtml(html.substr(lastPos));
  }

  return rethtml;
}

var REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9\\_:.-]/gim;

/**
 * parse input attributes and returns processed attributes
 *
 * @param {String} html e.g. `href="#" target="_blank"`
 * @param {Function} onAttr e.g. `function (name, value)`
 * @return {String}
 */
function parseAttr$1(html, onAttr) {

  var lastPos = 0;
  var lastMarkPos = 0;
  var retAttrs = [];
  var tmpName = false;
  var len = html.length;

  function addAttr(name, value) {
    name = _$1.trim(name);
    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, "").toLowerCase();
    if (name.length < 1) return;
    var ret = onAttr(name, value || "");
    if (ret) retAttrs.push(ret);
  }

  // 逐个分析字符
  for (var i = 0; i < len; i++) {
    var c = html.charAt(i);
    var v, j;
    if (tmpName === false && c === "=") {
      tmpName = html.slice(lastPos, i);
      lastPos = i + 1;
      lastMarkPos = html.charAt(lastPos) === '"' || html.charAt(lastPos) === "'" ? lastPos : findNextQuotationMark(html, i + 1);
      continue;
    }
    if (tmpName !== false) {
      if (
        i === lastMarkPos
      ) {
        j = html.indexOf(c, i + 1);
        if (j === -1) {
          break;
        } else {
          v = _$1.trim(html.slice(lastMarkPos + 1, j));
          addAttr(tmpName, v);
          tmpName = false;
          i = j;
          lastPos = i + 1;
          continue;
        }
      }
    }
    if (/\s|\n|\t/.test(c)) {
      html = html.replace(/\s|\n|\t/g, " ");
      if (tmpName === false) {
        j = findNextEqual(html, i);
        if (j === -1) {
          v = _$1.trim(html.slice(lastPos, i));
          addAttr(v);
          tmpName = false;
          lastPos = i + 1;
          continue;
        } else {
          i = j - 1;
          continue;
        }
      } else {
        j = findBeforeEqual(html, i - 1);
        if (j === -1) {
          v = _$1.trim(html.slice(lastPos, i));
          v = stripQuoteWrap(v);
          addAttr(tmpName, v);
          tmpName = false;
          lastPos = i + 1;
          continue;
        } else {
          continue;
        }
      }
    }
  }

  if (lastPos < html.length) {
    if (tmpName === false) {
      addAttr(html.slice(lastPos));
    } else {
      addAttr(tmpName, stripQuoteWrap(_$1.trim(html.slice(lastPos))));
    }
  }

  return _$1.trim(retAttrs.join(" "));
}

function findNextEqual(str, i) {
  for (; i < str.length; i++) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "=") return i;
    return -1;
  }
}

function findNextQuotationMark(str, i) {
  for (; i < str.length; i++) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "'" || c === '"') return i;
    return -1;
  }
}

function findBeforeEqual(str, i) {
  for (; i > 0; i--) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "=") return i;
    return -1;
  }
}

function isQuoteWrapString(text) {
  if (
    (text[0] === '"' && text[text.length - 1] === '"') ||
    (text[0] === "'" && text[text.length - 1] === "'")
  ) {
    return true;
  } else {
    return false;
  }
}

function stripQuoteWrap(text) {
  if (isQuoteWrapString(text)) {
    return text.substr(1, text.length - 2);
  } else {
    return text;
  }
}

parser$1.parseTag = parseTag$1;
parser$1.parseAttr = parseAttr$1;

/**
 * filter xss
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var FilterCSS = lib.exports.FilterCSS;
var DEFAULT = _default$1;
var parser = parser$1;
var parseTag = parser.parseTag;
var parseAttr = parser.parseAttr;
var _ = util;

/**
 * returns `true` if the input value is `undefined` or `null`
 *
 * @param {Object} obj
 * @return {Boolean}
 */
function isNull(obj) {
  return obj === undefined || obj === null;
}

/**
 * get attributes for a tag
 *
 * @param {String} html
 * @return {Object}
 *   - {String} html
 *   - {Boolean} closing
 */
function getAttrs(html) {
  var i = _.spaceIndex(html);
  if (i === -1) {
    return {
      html: "",
      closing: html[html.length - 2] === "/",
    };
  }
  html = _.trim(html.slice(i + 1, -1));
  var isClosing = html[html.length - 1] === "/";
  if (isClosing) html = _.trim(html.slice(0, -1));
  return {
    html: html,
    closing: isClosing,
  };
}

/**
 * shallow copy
 *
 * @param {Object} obj
 * @return {Object}
 */
function shallowCopyObject(obj) {
  var ret = {};
  for (var i in obj) {
    ret[i] = obj[i];
  }
  return ret;
}

function keysToLowerCase(obj) {
  var ret = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      ret[i.toLowerCase()] = obj[i].map(function (item) {
        return item.toLowerCase();
      });
    } else {
      ret[i.toLowerCase()] = obj[i];
    }
  }
  return ret;
}

/**
 * FilterXSS class
 *
 * @param {Object} options
 *        whiteList (or allowList), onTag, onTagAttr, onIgnoreTag,
 *        onIgnoreTagAttr, safeAttrValue, escapeHtml
 *        stripIgnoreTagBody, allowCommentTag, stripBlankChar
 *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`
 */
function FilterXSS(options) {
  options = shallowCopyObject(options || {});

  if (options.stripIgnoreTag) {
    if (options.onIgnoreTag) {
      console.error(
        'Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time'
      );
    }
    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;
  }
  if (options.whiteList || options.allowList) {
    options.whiteList = keysToLowerCase(options.whiteList || options.allowList);
  } else {
    options.whiteList = DEFAULT.whiteList;
  }

  options.onTag = options.onTag || DEFAULT.onTag;
  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;
  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;
  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;
  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;
  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;
  this.options = options;

  if (options.css === false) {
    this.cssFilter = false;
  } else {
    options.css = options.css || {};
    this.cssFilter = new FilterCSS(options.css);
  }
}

/**
 * start process and returns result
 *
 * @param {String} html
 * @return {String}
 */
FilterXSS.prototype.process = function (html) {
  // compatible with the input
  html = html || "";
  html = html.toString();
  if (!html) return "";

  var me = this;
  var options = me.options;
  var whiteList = options.whiteList;
  var onTag = options.onTag;
  var onIgnoreTag = options.onIgnoreTag;
  var onTagAttr = options.onTagAttr;
  var onIgnoreTagAttr = options.onIgnoreTagAttr;
  var safeAttrValue = options.safeAttrValue;
  var escapeHtml = options.escapeHtml;
  var cssFilter = me.cssFilter;

  // remove invisible characters
  if (options.stripBlankChar) {
    html = DEFAULT.stripBlankChar(html);
  }

  // remove html comments
  if (!options.allowCommentTag) {
    html = DEFAULT.stripCommentTag(html);
  }

  // if enable stripIgnoreTagBody
  var stripIgnoreTagBody = false;
  if (options.stripIgnoreTagBody) {
    stripIgnoreTagBody = DEFAULT.StripTagBody(
      options.stripIgnoreTagBody,
      onIgnoreTag
    );
    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;
  }

  var retHtml = parseTag(
    html,
    function (sourcePosition, position, tag, html, isClosing) {
      var info = {
        sourcePosition: sourcePosition,
        position: position,
        isClosing: isClosing,
        isWhite: Object.prototype.hasOwnProperty.call(whiteList, tag),
      };

      // call `onTag()`
      var ret = onTag(tag, html, info);
      if (!isNull(ret)) return ret;

      if (info.isWhite) {
        if (info.isClosing) {
          return "</" + tag + ">";
        }

        var attrs = getAttrs(html);
        var whiteAttrList = whiteList[tag];
        var attrsHtml = parseAttr(attrs.html, function (name, value) {
          // call `onTagAttr()`
          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;
          var ret = onTagAttr(tag, name, value, isWhiteAttr);
          if (!isNull(ret)) return ret;

          if (isWhiteAttr) {
            // call `safeAttrValue()`
            value = safeAttrValue(tag, name, value, cssFilter);
            if (value) {
              return name + '="' + value + '"';
            } else {
              return name;
            }
          } else {
            // call `onIgnoreTagAttr()`
            ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);
            if (!isNull(ret)) return ret;
            return;
          }
        });

        // build new tag html
        html = "<" + tag;
        if (attrsHtml) html += " " + attrsHtml;
        if (attrs.closing) html += " /";
        html += ">";
        return html;
      } else {
        // call `onIgnoreTag()`
        ret = onIgnoreTag(tag, html, info);
        if (!isNull(ret)) return ret;
        return escapeHtml(html);
      }
    },
    escapeHtml
  );

  // if enable stripIgnoreTagBody
  if (stripIgnoreTagBody) {
    retHtml = stripIgnoreTagBody.remove(retHtml);
  }

  return retHtml;
};

var xss = FilterXSS;

/**
 * xss
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

(function (module, exports) {
	var DEFAULT = _default$1;
	var parser = parser$1;
	var FilterXSS = xss;

	/**
	 * filter xss function
	 *
	 * @param {String} html
	 * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }
	 * @return {String}
	 */
	function filterXSS(html, options) {
	  var xss = new FilterXSS(options);
	  return xss.process(html);
	}

	exports = module.exports = filterXSS;
	exports.filterXSS = filterXSS;
	exports.FilterXSS = FilterXSS;

	(function () {
	  for (var i in DEFAULT) {
	    exports[i] = DEFAULT[i];
	  }
	  for (var j in parser) {
	    exports[j] = parser[j];
	  }
	})();

	// using `xss` on the WebWorker, output `filterXSS` to the globals
	function isWorkerEnv() {
	  return (
	    typeof self !== "undefined" &&
	    typeof DedicatedWorkerGlobalScope !== "undefined" &&
	    self instanceof DedicatedWorkerGlobalScope
	  );
	}
	if (isWorkerEnv()) {
	  self.filterXSS = module.exports;
	}
} (lib$1, lib$1.exports));

/* Copyright (c) 2020 Environmental Systems Research Institute, Inc.
 * Apache-2.0
 *
 * js-xss
 * Copyright (c) 2012-2018 Zongmin Lei(雷宗民) <leizongmin@gmail.com>
 * http://ucdok.com
 * The MIT License, see
 * https://github.com/leizongmin/js-xss/blob/master/LICENSE for details
 * */
/**
 * The Sanitizer Class
 *
 * @export
 * @class Sanitizer
 */
var Sanitizer = /** @class */ (function () {
    function Sanitizer(filterOptions, extendDefaults) {
        var _this = this;
        // Supported HTML Spec: https://doc.arcgis.com/en/arcgis-online/reference/supported-html.htm
        this.arcgisWhiteList = {
            a: ["href", "style", "target"],
            abbr: ["title"],
            audio: ["autoplay", "controls", "loop", "muted", "preload"],
            b: [],
            br: [],
            dd: ["style"],
            div: ["align", "style"],
            dl: ["style"],
            dt: ["style"],
            em: [],
            figcaption: ["style"],
            figure: ["style"],
            font: ["color", "face", "size", "style"],
            h1: ["style"],
            h2: ["style"],
            h3: ["style"],
            h4: ["style"],
            h5: ["style"],
            h6: ["style"],
            hr: [],
            i: [],
            img: ["alt", "border", "height", "src", "style", "width"],
            li: [],
            ol: [],
            p: ["style"],
            source: ["media", "src", "type"],
            span: ["style"],
            strong: [],
            sub: ["style"],
            sup: ["style"],
            table: ["border", "cellpadding", "cellspacing", "height", "style", "width"],
            tbody: [],
            tr: ["align", "height", "style", "valign"],
            td: [
                "align",
                "colspan",
                "height",
                "nowrap",
                "rowspan",
                "style",
                "valign",
                "width",
            ],
            th: [
                "align",
                "colspan",
                "height",
                "nowrap",
                "rowspan",
                "style",
                "valign",
                "width",
            ],
            u: [],
            ul: [],
            video: [
                "autoplay",
                "controls",
                "height",
                "loop",
                "muted",
                "poster",
                "preload",
                "width",
            ],
        };
        this.allowedProtocols = [
            "http",
            "https",
            "mailto",
            "iform",
            "tel",
            "flow",
            "lfmobile",
            "arcgis-navigator",
            "arcgis-appstudio-player",
            "arcgis-survey123",
            "arcgis-collector",
            "arcgis-workforce",
            "arcgis-explorer",
            "arcgis-trek2there",
            "arcgis-quickcapture",
            "mspbi",
            "comgooglemaps",
            "pdfefile",
            "pdfehttp",
            "pdfehttps",
            "boxapp",
            "boxemm",
            "awb",
            "awbs",
            "gropen",
            "radarscope",
        ];
        this.arcgisFilterOptions = {
            allowCommentTag: true,
            safeAttrValue: function (tag, name, value, cssFilter) {
                // Take over safe attribute filtering for `a` `href`, `img` `src`,
                // and `source` `src` attributes, otherwise pass onto the
                // default `XSS.safeAttrValue` method.
                if ((tag === "a" && name === "href") ||
                    ((tag === "img" || tag === "source") && name === "src")) {
                    return _this.sanitizeUrl(value);
                }
                return lib$1.exports.safeAttrValue(tag, name, value, cssFilter);
            },
        };
        this._entityMap = {
            "&": "&#x38;",
            "<": "&#x3C;",
            ">": "&#x3E;",
            '"': "&#x22;",
            "'": "&#x27;",
            "/": "&#x2F;",
        };
        var xssFilterOptions;
        if (filterOptions && !extendDefaults) {
            // Override the defaults
            xssFilterOptions = filterOptions;
        }
        else if (filterOptions && extendDefaults) {
            // Extend the defaults
            xssFilterOptions = Object.create(this.arcgisFilterOptions);
            Object.keys(filterOptions).forEach(function (key) {
                if (key === "whiteList") {
                    // Extend the whitelist by concatenating arrays
                    xssFilterOptions.whiteList = _this._extendObjectOfArrays([
                        _this.arcgisWhiteList,
                        filterOptions.whiteList || {},
                    ]);
                }
                else {
                    xssFilterOptions[key] = filterOptions[key];
                }
            });
        }
        else {
            // Only use the defaults
            xssFilterOptions = Object.create(this.arcgisFilterOptions);
            xssFilterOptions.whiteList = this.arcgisWhiteList;
        }
        this.xssFilterOptions = xssFilterOptions;
        // Make this readable to tests
        this._xssFilter = new lib$1.exports.FilterXSS(xssFilterOptions);
    }
    /**
     * Sanitizes value to remove invalid HTML tags.
     *
     * Note: If the value passed does not contain a valid JSON data type (String,
     * Number, JSON Object, Array, Boolean, or null), the value will be nullified.
     *
     * @param {any} value The value to sanitize.
     * @returns {any} The sanitized value.
     * @memberof Sanitizer
     */
    Sanitizer.prototype.sanitize = function (value, options) {
        if (options === void 0) { options = {}; }
        switch (typeof value) {
            case "number":
                if (isNaN(value) || !isFinite(value)) {
                    return null;
                }
                return value;
            case "boolean":
                return value;
            case "string":
                return this._xssFilter.process(value);
            case "object":
                return this._iterateOverObject(value, options);
            default:
                if (options.allowUndefined && typeof value === "undefined") {
                    return;
                }
                return null;
        }
    };
    /**
     * Sanitizes a URL string following the allowed protocols and sanitization rules.
     *
     * @param {string} value The URL to sanitize.
     * @param {{ isProtocolRequired: boolean }} options Configuration options for URL checking.
     * @returns {string} The sanitized URL if it's valid, or an empty string if the URL is invalid.
     */
    Sanitizer.prototype.sanitizeUrl = function (value, options) {
        var _a = (options !== null && options !== void 0 ? options : {}).isProtocolRequired, isProtocolRequired = _a === void 0 ? true : _a;
        var protocol = this._trim(value.substring(0, value.indexOf(":")));
        var isRootUrl = value === '/';
        var isUrlFragment = /^#/.test(value);
        var isValidProtocol = protocol && this.allowedProtocols.indexOf(protocol.toLowerCase()) > -1;
        if (isRootUrl || isUrlFragment || isValidProtocol) {
            return lib$1.exports.escapeAttrValue(value);
        }
        if (!protocol && !isProtocolRequired) {
            return lib$1.exports.escapeAttrValue("https://".concat(value));
        }
        return "";
    };
    /**
     * Sanitizes an HTML attribute value.
     *
     * @param {string} tag The tagname of the HTML element.
     * @param {string} attribute The attribute name of the HTML element.
     * @param {string} value The raw value to be used for the HTML attribute value.
     * @param {XSS.ICSSFilter} [cssFilter] The CSS filter to be used.
     * @returns {string} The sanitized attribute value.
     * @memberof Sanitizer
     */
    Sanitizer.prototype.sanitizeHTMLAttribute = function (tag, attribute, value, cssFilter) {
        // use the custom safeAttrValue function if provided
        if (typeof this.xssFilterOptions.safeAttrValue === "function") {
            return this.xssFilterOptions.safeAttrValue(tag, attribute, value, 
            // @ts-expect-error safeAttrValue does handle undefined cssFilter
            cssFilter);
        }
        // otherwise use the default
        // @ts-ignore safeAttrValue does handle undefined cssFilter
        return lib$1.exports.safeAttrValue(tag, attribute, value, cssFilter);
    };
    /**
     * Checks if a value only contains valid HTML.
     *
     * @param {any} value The value to validate.
     * @returns {boolean}
     * @memberof Sanitizer
     */
    Sanitizer.prototype.validate = function (value, options) {
        if (options === void 0) { options = {}; }
        var sanitized = this.sanitize(value, options);
        return {
            isValid: value === sanitized,
            sanitized: sanitized,
        };
    };
    /**
     * Encodes the following characters, `& < > \" ' /` to their hexadecimal HTML entity code.
     * Example: "&middot;" => "&#x38;middot;"
     *
     * @param {string} value The value to encode.
     * @returns {string} The encoded string value.
     * @memberof Sanitizer
     */
    Sanitizer.prototype.encodeHTML = function (value) {
        var _this = this;
        return String(value).replace(/[&<>"'\/]/g, function (s) {
            return _this._entityMap[s];
        });
    };
    /**
     * Encodes all non-alphanumeric ASCII characters to their hexadecimal HTML entity codes.
     * Example: "alert(document.cookie)" => "alert&#x28;document&#x2e;cookie&#x29;"
     *
     * @param {string} value The value to encode.
     * @returns {string} The encoded string value.
     * @memberof Sanitizer
     */
    Sanitizer.prototype.encodeAttrValue = function (value) {
        var alphanumericRE = /^[a-zA-Z0-9]$/;
        return String(value).replace(/[\x00-\xFF]/g, function (c, idx) {
            return !alphanumericRE.test(c)
                ? "&#x".concat(Number(value.charCodeAt(idx)).toString(16), ";")
                : c;
        });
    };
    /**
     * Extends an object of arrays by by concatenating arrays of the same object
     * keys. If the if the previous key's value is not an array, the next key's
     * value will replace the previous key. This method is used for extending the
     * whiteList in the XSS filter options.
     *
     * @private
     * @param {Array<{}>} objects An array of objects.
     * @returns {{}} The extended object.
     * @memberof Sanitizer
     */
    Sanitizer.prototype._extendObjectOfArrays = function (objects) {
        var finalObj = {};
        objects.forEach(function (obj) {
            Object.keys(obj).forEach(function (key) {
                if (Array.isArray(obj[key]) && Array.isArray(finalObj[key])) {
                    finalObj[key] = finalObj[key].concat(obj[key]);
                }
                else {
                    finalObj[key] = obj[key];
                }
            });
        });
        return finalObj;
    };
    /**
     * Iterate over a plain object or array to deeply sanitize each value.
     *
     * @private
     * @param {object} obj The object to iterate over.
     * @returns {(object | null)} The sanitized object.
     * @memberof Sanitizer
     */
    Sanitizer.prototype._iterateOverObject = function (obj, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        try {
            var hasChanged_1 = false;
            var changedObj = void 0;
            if (Array.isArray(obj)) {
                changedObj = obj.reduce(function (prev, value) {
                    var validation = _this.validate(value, options);
                    if (validation.isValid) {
                        return prev.concat([value]);
                    }
                    else {
                        hasChanged_1 = true;
                        return prev.concat([validation.sanitized]);
                    }
                }, []);
            }
            else if (!isPlainObject(obj)) {
                if (options.allowUndefined && typeof obj === "undefined") {
                    return;
                }
                return null;
            }
            else {
                var keys = Object.keys(obj);
                changedObj = keys.reduce(function (prev, key) {
                    var value = obj[key];
                    var validation = _this.validate(value, options);
                    if (validation.isValid) {
                        prev[key] = value;
                    }
                    else {
                        hasChanged_1 = true;
                        prev[key] = validation.sanitized;
                    }
                    return prev;
                }, {});
            }
            if (hasChanged_1) {
                return changedObj;
            }
            return obj;
        }
        catch (err) {
            return null;
        }
    };
    /**
     * Trim whitespace from the start and ends of a string.
     * @param {string} val The string to trim.
     * @returns {string} The trimmed string.
     */
    Sanitizer.prototype._trim = function (val) {
        // @ts-ignore This is used by Jest,
        // but TypeScript errors since it assumes `trim` is always available.
        return String.prototype.trim
            ? val.trim()
            : val.replace(/(^\s*)|(\s*$)/g, "");
    };
    return Sanitizer;
}());

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const n$6=new Map;function t$4(){n$6.clear();}function e$9(t){return n$6.get(t)}function c$3(t,e){n$6.set(t,e);}function o$4(t){n$6.delete(t);}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const u$2=s$w.getLogger("esri.widgets.support.widgetUtils");function p$5(e){const n=t$l.acquire();for(let t=0;t<arguments.length;t++){const e=arguments[t],r=typeof e;if("string"===r)n.push(e);else if(Array.isArray(e))n.push.apply(n,e);else if("object"===r)for(const t in e)e[t]&&n.push(t);}const r=n.join(" ");return t$l.release(n),r}(()=>{const e=new Map,t=new ResizeObserver((t=>{t$4();for(const n of t)e.get(n.target)?.(n);}));return (r,i,o)=>(e.has(r)&&u$2.error("Already observing element",r),e.set(r,i),t.observe(r,o),n$n((()=>{t.unobserve(r),e.delete(r);})))})();function v$1(e){const t="data-node-ref";this[e.getAttribute(t)]=e;}const L$1=["dd","dl","dt","h1","h2","h3","h4","h5","h6","sub","sup",...["animate","animatetransform","circle","clippath","defs","ellipse","g","image","line","lineargradient","marker","mask","path","pattern","polygon","polyline","radialgradient","rect","stop","svg","switch","symbol","text","textpath","tspan","use"]],b$2=L$1.reduce(((e,t)=>(e[t]=[],e)),{}),y$1=["align","alink","alt","bgcolor","border","cellpadding","cellspacing","class","color","cols","colspan","coords","d","dir","face","height","hspace","ismap","lang","marginheight","marginwidth","multiple","nohref","noresize","noshade","nowrap","ref","rel","rev","rows","rowspan","scrolling","shape","span","summary","tabindex","title","usemap","valign","value","vlink","vspace","width"],E$1=new Sanitizer({whiteList:b$2,onTagAttr:(e,t,n)=>{const r=`${t}="${n}"`;if(y$1.includes(t))return r},stripIgnoreTag:!0,stripIgnoreTagBody:["script","style"]},!0);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const t$3="http://www.w3.org/",r$4=`${t$3}2000/svg`,o$3=`${t$3}1999/xlink`;let i$3=[],n$5=(e,t)=>{let r={};return Object.keys(e).forEach((t=>{r[t]=e[t];})),t&&Object.keys(t).forEach((e=>{r[e]=t[e];})),r},s$5=(e,t)=>e.vnodeSelector===t.vnodeSelector&&(e.properties&&t.properties?e.properties.key===t.properties.key&&e.properties.bind===t.properties.bind:!e.properties&&!t.properties),l$1=e=>{if("string"!=typeof e)throw new Error("Style values must be strings")},p$4=(e,t,r)=>{if(""!==t.vnodeSelector)for(let o=r;o<e.length;o++)if(s$5(e[o],t))return o;return -1},d$5=(e,t,r,o)=>{let i=e[t];if(""===i.vnodeSelector)return;let n=i.properties;if(!(n?void 0===n.key?n.bind:n.key:void 0))for(let l=0;l<e.length;l++)if(l!==t){let t=e[l];if(s$5(t,i))throw new Error(`${r.vnodeSelector} had a ${i.vnodeSelector} child ${"added"===o?o:"removed"}, but there is now more than one. You must add unique key properties to make them distinguishable.`)}},a$2=e=>{if(e.properties){let t=e.properties.enterAnimation;t&&t(e.domNode,e.properties);}},f=[],c$2=!1,u$1=e=>{(e.children||[]).forEach(u$1),e.properties&&e.properties.afterRemoved&&e.properties.afterRemoved.apply(e.properties.bind||e.properties,[e.domNode]);},m=()=>{c$2=!1,f.forEach(u$1),f.length=0;},h$1=e=>{f.push(e),c$2||(c$2=!0,"undefined"!=typeof window&&"requestIdleCallback"in window?window.requestIdleCallback(m,{timeout:16}):setTimeout(m,16));},v=e=>{let t=e.domNode;if(e.properties){let r=e.properties.exitAnimation;if(r){t.style.pointerEvents="none";let o=()=>{t.parentNode&&(t.parentNode.removeChild(t),h$1(e));};return void r(t,o,e.properties)}}t.parentNode&&(t.parentNode.removeChild(t),h$1(e));},y=(t,i,n)=>{if(!i)return;let s=n.eventHandlerInterceptor,p=Object.keys(i),d=p.length;for(let a=0;a<d;a++){let d=p[a],f=i[d];if("className"===d)throw new Error('Property "className" is not supported, use "class".');if("class"===d)k(t,f,!0);else if("classes"===d){let e=Object.keys(f),r=e.length;for(let o=0;o<r;o++){let r=e[o];f[r]&&t.classList.add(r);}}else if("styles"===d){let e=Object.keys(f),r=e.length;for(let o=0;o<r;o++){let r=e[o],i=f[r];i&&(l$1(i),n.styleApplyer(t,r,i));}}else if("key"!==d&&null!=f){let l=typeof f;"function"===l?(0===d.lastIndexOf("on",0)&&(s&&(f=s(d,f,t,i)),"oninput"===d&&function(){let e=f;f=function(t){e.apply(this,[t]),t.target["oninput-value"]=t.target.value;};}()),t[d]=f):n.namespace===r$4?"href"===d?t.setAttributeNS(o$3,d,f):t.setAttribute(d,f):"string"===l&&"value"!==d?"innerHTML"===d?t[d]=E$1.sanitize(f):g(t)&&d in t?t[d]=f:t.setAttribute(d,f):t[d]=f;}}};function g(e){if(!(e instanceof Element&&e.tagName.includes("-")))return !1;const t=window.customElements.get(e.tagName.toLowerCase());return !!t&&e instanceof t}let N,b$1=(e,t,r)=>{if(t)for(let o of t)x$1(o,e,void 0,r);},w=(e,t,r)=>{b$1(e,t.children,r),t.text&&(e.textContent=t.text),y(e,t.properties,r),t.properties&&t.properties.afterCreate&&t.properties.afterCreate.apply(t.properties.bind||t.properties,[e,r,t.vnodeSelector,t.properties,t.children]);},x$1=(e,t,o,i)=>{let s,l=0,p=e.vnodeSelector,d=t.ownerDocument;if(""===p)s=e.domNode=d.createTextNode(e.text),void 0!==o?t.insertBefore(s,o):t.appendChild(s);else {for(let a=0;a<=p.length;++a){let f=p.charAt(a);if(a===p.length||"."===f||"#"===f){let f=p.charAt(l-1),c=p.slice(l,a);"."===f?s.classList.add(c):"#"===f?s.id=c:("svg"===c&&(i=n$5(i,{namespace:r$4})),void 0!==i.namespace?s=e.domNode=d.createElementNS(i.namespace,c):(s=e.domNode=e.domNode||d.createElement(c),"input"===c&&e.properties&&void 0!==e.properties.type&&s.setAttribute("type",e.properties.type)),void 0!==o?t.insertBefore(s,o):s.parentNode!==t&&t.appendChild(s)),l=a+1;}}w(s,e,i);}},k=(e,t,r)=>{t&&t.split(" ").forEach((t=>{t&&e.classList.toggle(t,r);}));},A$1=(t,i,n,s)=>{if(!n)return;let p=!1,d=Object.keys(n),a=d.length;for(let f=0;f<a;f++){let a=d[f],c=n[a],u=i[a];if("class"===a)u!==c&&(k(t,u,!1),k(t,c,!0));else if("classes"===a){let e=t.classList,r=Object.keys(c),o=r.length;for(let t=0;t<o;t++){let o=r[t],i=!!c[o];i!==!!u[o]&&(p=!0,i?e.add(o):e.remove(o));}}else if("styles"===a){let e=Object.keys(c),r=e.length;for(let o=0;o<r;o++){let r=e[o],i=c[r];i!==u[r]&&(p=!0,i?(l$1(i),s.styleApplyer(t,r,i)):s.styleApplyer(t,r,""));}}else if(c||"string"!=typeof u||(c=""),"value"===a){let e=t[a];e!==c&&(t["oninput-value"]?e===t["oninput-value"]:c!==u)&&(t[a]=c,t["oninput-value"]=void 0),c!==u&&(p=!0);}else if(c!==u){let i=typeof c;"function"===i&&s.eventHandlerInterceptor||(s.namespace===r$4?"href"===a?t.setAttributeNS(o$3,a,c):t.setAttribute(a,c):"string"===i?"innerHTML"===a?t[a]=E$1.sanitize(c):"role"===a&&""===c?t.removeAttribute(a):g(t)&&a in t?t[a]=c:t.setAttribute(a,c):t[a]!==c&&(t[a]=c),p=!0);}}return p},S=(e,t,r,o,n)=>{if(r===o)return !1;o=o||i$3;let l,f=(r=r||i$3).length,c=o.length,u=0,m=0,h=!1;for(;m<c;){let i=u<f?r[u]:void 0,c=o[m];if(void 0!==i&&s$5(i,c))h=N(i,c,n)||h,u++;else {let i=p$4(r,c,u+1);if(i>=0){for(l=u;l<i;l++)v(r[l]),d$5(r,l,e,"removed");h=N(r[i],c,n)||h,u=i+1;}else x$1(c,t,u<f?r[u].domNode:void 0,n),a$2(c),d$5(o,m,e,"added");}m++;}if(f>u)for(l=u;l<f;l++)v(r[l]),d$5(r,l,e,"removed");return h};N=(e,t,o)=>{let i=e.domNode,s=!1;if(e===t)return !1;let l=!1;if(""===t.vnodeSelector){if(t.text!==e.text){let e=i.ownerDocument.createTextNode(t.text);return i.parentNode.replaceChild(e,i),t.domNode=e,s=!0,s}t.domNode=i;}else 0===t.vnodeSelector.lastIndexOf("svg",0)&&(o=n$5(o,{namespace:r$4})),e.text!==t.text&&(l=!0,void 0===t.text?i.removeChild(i.firstChild):i.textContent=t.text),t.domNode=i,l=S(t,i,e.children,t.children,o)||l,l=A$1(i,e.properties,t.properties,o)||l,t.properties&&t.properties.afterUpdate&&t.properties.afterUpdate.apply(t.properties.bind||t.properties,[i,o,t.vnodeSelector,t.properties,t.children]);return l&&t.properties&&t.properties.updateAnimation&&t.properties.updateAnimation(i,t.properties,e.properties),s};let C$1=(e,t)=>({getLastRender:()=>e,update:r=>{if(e.vnodeSelector!==r.vnodeSelector)throw new Error("The selector for the root VNode may not be changed. (consider using dom.merge and add one extra level to the virtual DOM)");let o=e;e=r,N(o,r,t);},domNode:e.domNode});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const p$3={namespace:void 0,performanceLogger:()=>{},eventHandlerInterceptor:void 0,styleApplyer:(e,r,o)=>{"-"===r.charAt(0)?e.style.setProperty(r,o):e.style[r]=o;}};let d$4=r=>n$5(p$3,r),n$4={create:(e,t)=>(t=d$4(t),x$1(e,document.createElement("div"),void 0,t),C$1(e,t)),append:(e,t,p)=>(p=d$4(p),x$1(t,e,void 0,p),C$1(t,p)),insertBefore:(e,t,p)=>(p=d$4(p),x$1(t,e.parentNode,e,p),C$1(t,p)),merge:(e,r,p)=>(p=d$4(p),r.domNode=e,w(e,r,p),C$1(r,p)),replace:(e,t,p)=>(p=d$4(p),x$1(t,e.parentNode,e,p),e.parentNode.removeChild(e),C$1(t,p))};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const e$8={handleInterceptedEvent:(e,p,t,n)=>(e.scheduleRender(),p.properties[`on${n.type}`].apply(p.properties.bind||t,[n]))};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const e$7={namespace:void 0,performanceLogger:()=>{},eventHandlerInterceptor:void 0,styleApplyer:(e,r,o)=>{e.style[r]=o;}},r$3=r=>({...e$7,...r});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const o$2=(e,t)=>{const r=[];for(;e&&e!==t;)r.push(e),e=e.parentNode;return r},n$3=(e,t)=>e.find(t),d$3=(e,t,r=!1)=>{let o=e;return t.forEach(((e,d)=>{const s=o?.children?n$3(o.children,(t=>t.domNode===e)):void 0;r&&!s&&d!==t.length-1||(o=s);})),o},s$4=n=>{let s;const i={...e$8,...n},c=r$3(i),a=c.performanceLogger;let m,p=!0,l=!1;const f=[],u=[],h=(e,t,r)=>{let n;c.eventHandlerInterceptor=(e,t,r,c)=>function(e){let t;a("domEvent",e);const r=o$2(e.currentTarget,n.domNode),c=r.some((e=>customElements.get(e?.tagName?.toLowerCase())));if(e.eventPhase===Event.CAPTURING_PHASE||!c)r.reverse(),t=d$3(n.getLastRender(),r);else {const r=e.composedPath(),o=r.slice(r.indexOf(e.currentTarget),r.indexOf(n.domNode)).filter((e=>e.getRootNode()===e.ownerDocument)).reverse();t=d$3(n.getLastRender(),o,!0);}let m;return t&&(m=i.handleInterceptedEvent(s,t,this,e)),a("domEventProcessed",e),m},i.postProcessProjectionOptions?.(c);const m=r();n=e(t,m,c),f.push(n),u.push(r),i.afterFirstVNodeRendered&&i.afterFirstVNodeRendered(n,m);};let v=()=>{if(m=void 0,p){p=!1,a("renderStart",void 0);for(let e=0;e<f.length;e++){const t=u[e]();a("rendered",void 0),f[e].update(t),a("patched",void 0);}a("renderDone",void 0),p=!0;}};return i.modifyDoRenderImplementation&&(v=i.modifyDoRenderImplementation(v,f,u)),s={renderNow:v,scheduleRender:()=>{m||l||(m=requestAnimationFrame(v));},stop:()=>{m&&(cancelAnimationFrame(m),m=void 0),l=!0;},resume:()=>{l=!1,p=!0,s.scheduleRender();},append:(t,r)=>{h(n$4.append,t,r);},insertBefore:(t,r)=>{h(n$4.insertBefore,t,r);},merge:(t,r)=>{h(n$4.merge,t,r);},replace:(t,r)=>{h(n$4.replace,t,r);},detach:e=>{for(let t=0;t<u.length;t++)if(u[t]===e)return u.splice(t,1),f.splice(t,1)[0];throw new Error("renderFunction was not found")}},s};

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/snabbdom/snabbdom/blob/master/LICENSE
 *
 * Modified for Stencil's renderer and slot projection
 */
const setAssetPath = (path) => (path);

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.8-next.4
 */

const autoMode = "calcite-mode-auto";
const darkMode = "calcite-mode-dark";

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.8-next.4
 */

/**
 * Emits when the mode is dynamically toggled between light and dark on <body> or in OS preferences.
 */
function initModeChangeEvent() {
  const { classList } = document.body;
  const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
  const getMode = () => classList.contains(darkMode) || (classList.contains(autoMode) && prefersDark) ? "dark" : "light";
  const emitModeChange = (mode) => document.body.dispatchEvent(new CustomEvent("calciteModeChange", { bubbles: true, detail: { mode } }));
  const modeChangeHandler = (newMode) => {
    currentMode !== newMode && emitModeChange(newMode);
    currentMode = newMode;
  };
  let currentMode = getMode();
  // emits event on page load
  emitModeChange(currentMode);
  // emits event when changing OS mode preferences
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (event) => modeChangeHandler(event.matches ? "dark" : "light"));
  // emits event when toggling between mode classes on <body>
  new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {
    attributes: true,
    attributeFilter: ["class"]
  });
}

/**
 * This file is imported in Stencil's `globalScript` config option.
 *
 * @see {@link https://stenciljs.com/docs/config#globalscript}
 */
function appGlobalScript () {
  const isBrowser = typeof window !== "undefined" &&
    typeof location !== "undefined" &&
    typeof document !== "undefined" &&
    window.location === location &&
    window.document === document;
  if (isBrowser) {
    if (document.readyState === "interactive") {
      initModeChangeEvent();
    }
    else {
      document.addEventListener("DOMContentLoaded", () => initModeChangeEvent(), { once: true });
    }
  }
}

const globalScripts = appGlobalScript;

globalScripts();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let e$6;function r$2(){setAssetPath(F$2(a$3(e$6)));}e$6="components/assets";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const t$2=Symbol("widget"),e$5=Symbol("widget-test-data");

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const r$1=[],o$1={},n$2=new WeakMap;function i$2(e,t){let n=t.children;if(n&&n.length)for(let r=0;r<n.length;++r)n[r]=i$2(e,n[r]);else n=r$1;const f=t.vnodeSelector;if(a$1(f)){const r=t.properties||o$1,i=r.key||f;return {vnodeSelector:"div",properties:{key:i,afterCreate:d$2,afterUpdate:s$3,afterRemoved:c$1,parentWidget:e,widgetConstructor:f,widgetProperties:{...r,key:i,children:n}},children:void 0,text:void 0,domNode:null}}return t}function d$2(t,r,o,{parentWidget:i,widgetConstructor:d,widgetProperties:s}){const a=new d(s);a.container=t,n$2.set(t,a),a.afterCreate?.(a,t),i._internalHandles.add(n$n((()=>c$1(t))));}function s$3(e,t,r,{widgetProperties:o}){const i=n$2.get(e);i&&(i.set(o),i.afterUpdate?.(i,e));}function c$1(e){const t=n$2.get(e);t&&(t.afterRemoved?.(t,e),t.destroy(),n$2.delete(e));}function a$1(e){return "function"==typeof e&&e[t$2]}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const e$4=new Set;function n$1(n){e$4.add(n),n.finally((()=>e$4.delete(n)));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var $;const x="esri.widgets.Widget";let z=0;const A={widgetIcon:"esri-icon-checkbox-unchecked"};function B(e,t){for(const r in t)null!=e[r]&&("object"==typeof e[r]&&"object"==typeof t[r]?B(e[r],t?.[r]):e[r]=t[r]);return e}const D$1=s$4({postProcessProjectionOptions(e){const t=e.eventHandlerInterceptor,r=/capture$/i;e.eventHandlerInterceptor=(e,s,o,i)=>{const n=t?.(e,s,o,i),a=r.test(e);if(!((e=e.replace(r,"")).toLowerCase()in o)||a){const t=e[2].toLowerCase()+e.slice(3),r=e=>n?.call(o,e);o.addEventListener(t,r,a);const s=()=>o.removeEventListener(t,r,a),c=i.afterRemoved;i.afterRemoved=e=>{c?.(e),s();};}return n};},handleInterceptedEvent(e,t,r,s){const{eventPhase:o,type:i}=s,n=o===Event.CAPTURING_PHASE;let a=`on${i}${n?"capture":""}`;const c=t.properties;(c&&a in c||(a=`on${i[0].toUpperCase()}${i.slice(1)}${n?"Capture":""}`,c&&a in c))&&(t$4(),e.scheduleRender(),c[a].call(c.bind||r,s));}});let M=!1,O=class extends(m$1(n$a.EventedAccessor)){constructor(e,t){super(e,t),this._attached=!1,this._internalHandles=new t$q,this._projector=D$1,this._readyForTrueRender=!1,this.iconClass=A.widgetIcon,this.key=this,this._loadLocale=x$8((async()=>{if(this._messageBundleProps&&this._messageBundleProps.length){const e=await E$3(this._messageBundleProps.map((async({bundlePath:e,propertyName:t})=>{let r=await u$3(e);this.uiStrings&&Object.keys(this.uiStrings)&&(r=B(p$l(r),this.uiStrings)),this[t]=r;})));for(const t of e)t.error&&s$w.getLogger(this.declaredClass).error("widget-intl:locale-error",this.declaredClass,t.error);}await this.loadLocale();})),r$2();const r="esri-widget-uid-"+n$7(),s=this.render.bind(this);this._trackingTarget=new t$g((()=>this.scheduleRender()));const o=()=>{if(!this._readyForTrueRender||this.destroyed)return null;if(!this.visible)return {vnodeSelector:"div",properties:{key:r,class:"",styles:{display:"none"}},domNode:null,children:void 0,text:void 0};const e=s();let{properties:t}=e;t||(e.properties=t={});let{key:o,styles:i}=t;o||(t.key=r),i||(t.styles=i={}),i.display||(i.display="");let n=0;return e.children?.forEach((e=>{if(a$1(e.vnodeSelector))return;let{properties:t}=e;t||(e.properties=t={}),t.key||(t.key=`${this.id}--${n++}`);})),i$2(this,e)};this.render=()=>{if(M)return o();let e=e$9(this)??null;if(e)return e;this._trackingTarget.clear(),M=!0;try{e=f$m(this._trackingTarget,o);}catch(t){throw console.error(t),t}finally{M=!1;}return e&&c$3(this,e),e},this.addResolvingPromise(this._resourcesFetch=this.beforeFirstRender().then((()=>{this._readyForTrueRender=!0,this._postInitialize();}))),n$1(this._resourcesFetch);}normalizeCtorArgs(e,t){const r={...e};return t&&(r.container=t),r}postInitialize(){}beforeFirstRender(){return Promise.all([this.loadDependencies(),this._loadLocale()]).then((()=>{})).catch(b$7)}async loadDependencies(){}async loadLocale(){}destroy(){this.destroyed||(a$t(this._trackingTarget),a$t(this.viewModel),this._detach(this.container),this._set("container",null),this._internalHandles.destroy(),this._emitter.clear(),this.render=()=>null,this._projector=null,o$4(this));}set container(e){this._get("container")||this._set("container",e);}castContainer(e){return e$a(e)}get domNode(){return this.container}set domNode(e){this.container=e;}get id(){return this._get("id")||this.get("container.id")||Date.now().toString(16)+"-widget-"+z++}set id(e){e&&this._set("id",e);}get label(){return this.declaredClass.split(".").pop()}set label(e){this._overrideIfSome("label",e);}get renderable(){return this._resourcesFetch}get visible(){return this._get("visible")}set visible(e){this._set("visible",e);}get[($=t$2,e$5)](){return {projector:this._projector}}render(){throw new Error("not implemented")}scheduleRender(){this.destroyed||(o$4(this),this._projector.scheduleRender());}classes(...e){return p$5.apply(this,e)}renderNow(){o$4(this),this._projector.renderNow();}_postInitialize(){if(this.destroyed)return;this.scheduleRender(),this._delegatedEventNames?.length&&this._internalHandles.add(l$5((()=>this.viewModel),((e,t)=>{t&&this._internalHandles.remove("delegated-events"),e&&e$v(e)&&this._internalHandles.add(this._delegatedEventNames.map((t=>r$n(e,t,(e=>{this.emit(t,e);})))),"delegated-events");}),h$6)),this.postInitialize();const e=async()=>{await this._loadLocale().catch(b$7),this.scheduleRender();};this._internalHandles.add([s$9(e),l$5((()=>this.uiStrings),e),f$4((()=>this.container),(e=>{this.destroyed||this._attach(e);}),{initial:!0,once:!0})]);}_attach(e){e&&(this._projector.merge(e,this.render),this._attached=!0);}_detach(e){this._attached&&(this._projector.detach(this.render),this._attached=!1),e?.parentNode?.removeChild(e);}};O[$]=!0,e$u([y$9()],O.prototype,"_readyForTrueRender",void 0),e$u([y$9({value:null})],O.prototype,"container",null),e$u([s$d("container")],O.prototype,"castContainer",null),e$u([y$9()],O.prototype,"iconClass",void 0),e$u([y$9()],O.prototype,"id",null),e$u([y$9()],O.prototype,"label",null),e$u([y$9()],O.prototype,"renderable",null),e$u([y$9()],O.prototype,"uiStrings",void 0),e$u([y$9()],O.prototype,"viewModel",void 0),e$u([y$9({value:!0})],O.prototype,"visible",null),e$u([y$9()],O.prototype,"key",void 0),e$u([y$9()],O.prototype,"children",void 0),e$u([y$9()],O.prototype,"afterCreate",void 0),e$u([y$9()],O.prototype,"afterUpdate",void 0),e$u([y$9()],O.prototype,"afterRemoved",void 0),O=e$u([a$g(x)],O);const W=O;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$3(e){return (s,r)=>{s.hasOwnProperty("_messageBundleProps")||(s._messageBundleProps=s._messageBundleProps?s._messageBundleProps.slice():[]);s._messageBundleProps.push({bundlePath:e,propertyName:r});}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var e$2=function(r){return {vnodeSelector:"",properties:void 0,children:void 0,text:r.toString(),domNode:null}},o=function(r,t){for(var n=0,i=r.length;n<i;n++){var d=r[n];Array.isArray(d)?o(d,t):null!=d&&!1!==d&&(d.hasOwnProperty("vnodeSelector")||(d=e$2(d)),t.push(d));}},t$1=function(r,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];if(1===t.length&&"string"==typeof t[0])return {vnodeSelector:r,properties:e||void 0,children:void 0,text:t[0],domNode:null};var i=[];return o(t,i),{vnodeSelector:r,properties:e||void 0,children:i,text:void 0,domNode:null}};function n(e,o,...n){return "function"!=typeof e||a$1(e)?t$1(e,o,...n):e(o,...n)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const a="esri-identity-form",l={base:a,group:`${a}__group`,label:`${a}__label`,footer:`${a}__footer`,esriInput:"esri-input",esriButton:"esri-button",esriButtonSecondary:"esri-button--secondary"},p$2="ArcGIS Online";let d$1=class extends W{constructor(s,e){super(s,e),this._usernameInputNode=null,this._passwordInputNode=null,this.signingIn=!1,this.server=null,this.resource=null,this.error=null,this.oAuthPrompt=!1;}render(){const{error:s,server:e,resource:t,signingIn:o,oAuthPrompt:n$1,messages:a}=this,d=n("div",{class:l.group},s$7(n$1?a.oAuthInfo:a.info,{server:e&&/\.arcgis\.com/i.test(e)?p$2:e,resource:`(${t||a.lblItem})`})),c=n$1?null:n("div",{class:l.group,key:"username"},n("label",{class:l.label},a.lblUser,n("input",{value:"",required:!0,autocomplete:"off",spellcheck:!1,type:"text",bind:this,afterCreate:v$1,"data-node-ref":"_usernameInputNode",class:l.esriInput}))),m=n$1?null:n("div",{class:l.group,key:"password"},n("label",{class:l.label},a.lblPwd,n("input",{value:"",required:!0,type:"password",bind:this,afterCreate:v$1,"data-node-ref":"_passwordInputNode",class:l.esriInput}))),h=n("div",{class:this.classes(l.group,l.footer)},n("input",{type:"submit",disabled:!!o,value:o?a.lblSigning:a.lblOk,class:l.esriButton}),n("input",{type:"button",value:a.lblCancel,bind:this,onclick:this._cancel,class:this.classes(l.esriButton,l.esriButtonSecondary)})),b=s?n("div",null,s.details&&s.details.httpStatus?a.invalidUser:a.noAuthService):null;return n("form",{class:l.base,bind:this,onsubmit:this._submit},d,b,c,m,h)}_cancel(){this._set("signingIn",!1),this._usernameInputNode&&(this._usernameInputNode.value=""),this._passwordInputNode&&(this._passwordInputNode.value=""),this.emit("cancel");}_submit(s){s.preventDefault(),this._set("signingIn",!0);const e=this.oAuthPrompt?{}:{username:this._usernameInputNode&&this._usernameInputNode.value,password:this._passwordInputNode&&this._passwordInputNode.value};this.emit("submit",e);}};e$u([y$9(),e$3("esri/identity/t9n/identity")],d$1.prototype,"messages",void 0),e$u([y$9()],d$1.prototype,"signingIn",void 0),e$u([y$9()],d$1.prototype,"server",void 0),e$u([y$9()],d$1.prototype,"resource",void 0),e$u([y$9()],d$1.prototype,"error",void 0),e$u([y$9()],d$1.prototype,"oAuthPrompt",void 0),d$1=e$u([a$g("esri.identity.IdentityForm")],d$1);const c=d$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
function e$1(e){return e&&"function"==typeof e.render}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const d="esri-identity-modal",p$1={base:d,open:`${d}--open`,closed:`${d}--closed`,title:`${d}__title`,dialog:`${d}__dialog`,content:`${d}__content`,closeButton:`${d}__close-button`,iconClose:"esri-icon-close"};let u=class extends W{constructor(t,e){super(t,e),this.container=document.createElement("div"),this.content=null,this.open=!1,this._focusTrap=null,this._close=()=>{this.open=!1;},document.body.appendChild(this.container),this.addHandles(l$5((()=>this.open),(()=>this._toggleFocusTrap())));}destroy(){this._destroyFocusTrap();}get title(){return this.messages?.auth.signIn}render(){const t=this.id,{open:e,content:o,title:s,messages:i}=this,r=e&&!!o,n$1={[p$1.open]:r,[p$1.closed]:!r},a=n("button",{class:p$1.closeButton,"aria-label":i.close,title:i.close,bind:this,onclick:this._close,type:"button"},n("span",{"aria-hidden":"true",class:p$1.iconClose})),l=`${t}_title`,d=`${t}_content`,u=s?n("h1",{id:l,class:p$1.title},s):null,h=r?n("div",{bind:this,class:p$1.dialog,role:"dialog","aria-labelledby":l,"aria-describedby":d,afterCreate:this._createFocusTrap},a,u,this._renderContent(d)):null;return n("div",{tabIndex:-1,class:this.classes(p$1.base,n$1)},h)}_destroyFocusTrap(){this._focusTrap?.deactivate({onDeactivate:()=>{}}),this._focusTrap=null;}_toggleFocusTrap(){const{_focusTrap:t,open:e}=this;t&&(e?t.activate():t.deactivate());}_createFocusTrap(t){this._destroyFocusTrap();const o=requestAnimationFrame((()=>{this._focusTrap=(0,_focus_trap_esm_fa2a8f7f_js__WEBPACK_IMPORTED_MODULE_0__.c)(t,{initialFocus:"input",onDeactivate:this._close}),this._toggleFocusTrap();}));this.addHandles(n$n((()=>cancelAnimationFrame(o))));}_renderContent(t){const e=this.content;return "string"==typeof e?n("div",{class:p$1.content,id:t,innerHTML:e}):e$1(e)?n("div",{class:p$1.content,id:t},e.render()):e instanceof HTMLElement?n("div",{class:p$1.content,id:t,bind:e,afterCreate:this._attachToNode}):null}_attachToNode(t){const e=this;t.appendChild(e);}};e$u([y$9({readOnly:!0})],u.prototype,"container",void 0),e$u([y$9()],u.prototype,"content",void 0),e$u([y$9()],u.prototype,"open",void 0),e$u([y$9(),e$3("esri/t9n/common")],u.prototype,"messages",void 0),e$u([y$9()],u.prototype,"title",null),u=e$u([a$g("esri.identity.IdentityModal")],u);const h=u;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const t="esriJSAPIOAuth";class e{constructor(t,e){this.oAuthInfo=null,this.storage=null,this.appId=null,this.codeVerifier=null,this.expires=null,this.refreshToken=null,this.ssl=null,this.stateUID=null,this.token=null,this.userId=null,this.oAuthInfo=t,this.storage=e,this._init();}isValid(){let t=!1;if(this.oAuthInfo&&this.userId&&(this.refreshToken||this.token))if(null==this.expires&&this.refreshToken)t=!0;else if(this.expires){const e=Date.now();if(this.expires>e){(this.expires-e)/1e3>60*this.oAuthInfo.minTimeUntilExpiration&&(t=!0);}}return t}save(){if(!this.storage)return !1;const e=this._load(),s=this.oAuthInfo;if(s&&s.authNamespace&&s.portalUrl){let r=e[s.authNamespace];r||(r=e[s.authNamespace]={}),this.appId||(this.appId=s.appId),r[s.portalUrl]={appId:this.appId,codeVerifier:this.codeVerifier,expires:this.expires,refreshToken:this.refreshToken,ssl:this.ssl,stateUID:this.stateUID,token:this.token,userId:this.userId};try{this.storage.setItem(t,JSON.stringify(e));}catch(i){return console.warn(i),!1}return !0}return !1}destroy(){const e=this._load(),s=this.oAuthInfo;if(s&&s.appId&&s.portalUrl&&(null==this.expires||this.expires>Date.now())&&(this.refreshToken||this.token)){const t=s.portalUrl.replace(/^http:/i,"https:")+"/sharing/rest/oauth2/revokeToken",e=new FormData;if(e.append("f","json"),e.append("auth_token",this.refreshToken||this.token),e.append("client_id",s.appId),e.append("token_type_hint",this.refreshToken?"refresh_token":"access_token"),"function"==typeof navigator.sendBeacon)navigator.sendBeacon(t,e);else {const s=new XMLHttpRequest;s.open("POST",t),s.send(e);}}if(s&&s.authNamespace&&s.portalUrl&&this.storage){const r=e[s.authNamespace];if(r){delete r[s.portalUrl];try{this.storage.setItem(t,JSON.stringify(e));}catch(i){console.log(i);}}}s&&(s._oAuthCred=null,this.oAuthInfo=null);}_init(){const t=this._load(),e=this.oAuthInfo;if(e&&e.authNamespace&&e.portalUrl){let s=t[e.authNamespace];s&&(s=s[e.portalUrl],s&&(this.appId=s.appId,this.codeVerifier=s.codeVerifier,this.expires=s.expires,this.refreshToken=s.refreshToken,this.ssl=s.ssl,this.stateUID=s.stateUID,this.token=s.token,this.userId=s.userId));}}_load(){let e={};if(this.storage){const i=this.storage.getItem(t);if(i)try{e=JSON.parse(i);}catch(s){console.warn(s);}}return e}}e.prototype.declaredClass="esri.identity.OAuthCredential";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
var p;let s$2=p=class extends l$b{constructor(o){super(o),this._oAuthCred=null,this.appId=null,this.authNamespace="/",this.expiration=20160,this.flowType="auto",this.forceLogin=!1,this.forceUserId=!1,this.locale=null,this.minTimeUntilExpiration=30,this.popup=!1,this.popupCallbackUrl="oauth-callback.html",this.popupWindowFeatures="height=490,width=800,resizable,scrollbars,status",this.portalUrl="https://www.arcgis.com",this.preserveUrlHash=!1,this.userId=null;}clone(){return p.fromJSON(this.toJSON())}};e$u([y$9({json:{write:!0}})],s$2.prototype,"appId",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"authNamespace",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"expiration",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"flowType",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"forceLogin",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"forceUserId",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"locale",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"minTimeUntilExpiration",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"popup",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"popupCallbackUrl",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"popupWindowFeatures",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"portalUrl",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"preserveUrlHash",void 0),e$u([y$9({json:{write:!0}})],s$2.prototype,"userId",void 0),s$2=p=e$u([a$g("esri.identity.OAuthInfo")],s$2);const i$1=s$2;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
let s$1=class extends l$b{constructor(o){super(o),this.adminTokenServiceUrl=null,this.currentVersion=null,this.hasPortal=null,this.hasServer=null,this.owningSystemUrl=null,this.owningTenant=null,this.server=null,this.shortLivedTokenValidity=null,this.tokenServiceUrl=null,this.webTierAuth=null;}};e$u([y$9({json:{write:!0}})],s$1.prototype,"adminTokenServiceUrl",void 0),e$u([y$9({json:{write:!0}})],s$1.prototype,"currentVersion",void 0),e$u([y$9({json:{write:!0}})],s$1.prototype,"hasPortal",void 0),e$u([y$9({json:{write:!0}})],s$1.prototype,"hasServer",void 0),e$u([y$9({json:{write:!0}})],s$1.prototype,"owningSystemUrl",void 0),e$u([y$9({json:{write:!0}})],s$1.prototype,"owningTenant",void 0),e$u([y$9({json:{write:!0}})],s$1.prototype,"server",void 0),e$u([y$9({json:{write:!0}})],s$1.prototype,"shortLivedTokenValidity",void 0),e$u([y$9({json:{write:!0}})],s$1.prototype,"tokenServiceUrl",void 0),e$u([y$9({json:{write:!0}})],s$1.prototype,"webTierAuth",void 0),s$1=e$u([a$g("esri.identity.ServerInfo")],s$1);const i=s$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const C={},b=e=>{const t=new $$5(e.owningSystemUrl).host,r=new $$5(e.server).host,s=/.+\.arcgis\.com$/i;return s.test(t)&&s.test(r)},D=(e,t)=>!!(b(e)&&t&&t.some((t=>t.test(e.server))));let q=null,j=null;try{q=window.localStorage,j=window.sessionStorage;}catch{}class E extends n$a{constructor(){super(),this._portalConfig=globalThis.esriGeowConfig,this.serverInfos=[],this.oAuthInfos=[],this.credentials=[],this._soReqs=[],this._xoReqs=[],this._portals=[],this._defaultOAuthInfo=null,this._defaultTokenValidity=60,this.dialog=null,this.formConstructor=c,this.tokenValidity=null,this.normalizeWebTierAuth=!1,this._appOrigin="null"!==window.origin?window.origin:window.location.origin,this._appUrlObj=L$3(window.location.href),this._busy=null,this._rejectOnPersistedPageShow=!1,this._oAuthLocationParams=null,this._gwTokenUrl="/sharing/rest/generateToken",this._agsRest="/rest/services",this._agsPortal=/\/sharing(\/|$)/i,this._agsAdmin=/(https?:\/\/[^\/]+\/[^\/]+)\/admin\/?(\/.*)?$/i,this._adminSvcs=/\/rest\/admin\/services(\/|$)/i,this._gwDomains=[{regex:/^https?:\/\/www\.arcgis\.com/i,customBaseUrl:"maps.arcgis.com",tokenServiceUrl:"https://www.arcgis.com/sharing/rest/generateToken"},{regex:/^https?:\/\/(?:dev|[a-z\d-]+\.mapsdev)\.arcgis\.com/i,customBaseUrl:"mapsdev.arcgis.com",tokenServiceUrl:"https://dev.arcgis.com/sharing/rest/generateToken"},{regex:/^https?:\/\/(?:devext|[a-z\d-]+\.mapsdevext)\.arcgis\.com/i,customBaseUrl:"mapsdevext.arcgis.com",tokenServiceUrl:"https://devext.arcgis.com/sharing/rest/generateToken"},{regex:/^https?:\/\/(?:qaext|[a-z\d-]+\.mapsqa)\.arcgis\.com/i,customBaseUrl:"mapsqa.arcgis.com",tokenServiceUrl:"https://qaext.arcgis.com/sharing/rest/generateToken"},{regex:/^https?:\/\/[a-z\d-]+\.maps\.arcgis\.com/i,customBaseUrl:"maps.arcgis.com",tokenServiceUrl:"https://www.arcgis.com/sharing/rest/generateToken"}],this._legacyFed=[],this._regexSDirUrl=/http.+\/rest\/services\/?/gi,this._regexServerType=/(\/(FeatureServer|GPServer|GeoDataServer|GeocodeServer|GeoenrichmentServer|GeometryServer|GlobeServer|ImageServer|KnowledgeGraphServer|MapServer|MissionServer|MobileServer|NAServer|NetworkDiagramServer|OGCFeatureServer|ParcelFabricServer|RelationalCatalogServer|SceneServer|StreamServer|UtilityNetworkServer|ValidationServer|VectorTileServer|VersionManagementServer|VideoServer)).*/gi,this._gwUser=/http.+\/users\/([^\/]+)\/?.*/i,this._gwItem=/http.+\/items\/([^\/]+)\/?.*/i,this._gwGroup=/http.+\/groups\/([^\/]+)\/?.*/i,this._rePortalTokenSvc=/\/sharing(\/rest)?\/generatetoken/i,this._createDefaultOAuthInfo=!0,this._hasTestedIfAppIsOnPortal=!1,this._getOAuthLocationParams(),window.addEventListener("pageshow",(e=>{this._pageShowHandler(e);}));}registerServers(e){const t=this.serverInfos;t?(e=e.filter((e=>!this.findServerInfo(e.server))),this.serverInfos=t.concat(e)):this.serverInfos=e,e.forEach((e=>{e.owningSystemUrl&&this._portals.push(e.owningSystemUrl),e.hasPortal&&this._portals.push(e.server);}));}registerOAuthInfos(e){const t=this.oAuthInfos;if(t){for(const r of e){const e=this.findOAuthInfo(r.portalUrl);e&&t.splice(t.indexOf(e),1);}this.oAuthInfos=t.concat(e);}else this.oAuthInfos=e;}registerToken(e){e={...e};const t=this._sanitizeUrl(e.server),r=this._isServerRsrc(t);let s,i$1=this.findServerInfo(t),o=!0;i$1||(i$1=new i,i$1.server=this._getServerInstanceRoot(t),r?i$1.hasServer=!0:(i$1.tokenServiceUrl=this._getTokenSvcUrl(t),i$1.hasPortal=!0),this.registerServers([i$1])),s=this._findCredential(t),s?(delete e.server,Object.assign(s,e),o=!1):(s=new L({userId:e.userId,server:i$1.server,token:e.token,expires:e.expires,ssl:e.ssl,scope:r?"server":"portal"}),s.resources=[t],this.credentials.push(s)),s.emitTokenChange(!1),o||s.refreshServerTokens();}toJSON(){return l$l({serverInfos:this.serverInfos.map((e=>e.toJSON())),oAuthInfos:this.oAuthInfos.map((e=>e.toJSON())),credentials:this.credentials.map((e=>e.toJSON()))})}initialize(e){if(!e)return;"string"==typeof e&&(e=JSON.parse(e));const t=e.serverInfos,r=e.oAuthInfos,s=e.credentials;if(t){const e=[];t.forEach((t=>{t.server&&t.tokenServiceUrl&&e.push(t.declaredClass?t:new i(t));})),e.length&&this.registerServers(e);}if(r){const e=[];r.forEach((t=>{t.appId&&e.push(t.declaredClass?t:new i$1(t));})),e.length&&this.registerOAuthInfos(e);}s&&s.forEach((e=>{e.server&&e.token&&e.expires&&e.expires>Date.now()&&((e=e.declaredClass?e:new L(e)).emitTokenChange(),this.credentials.push(e));}));}findServerInfo(e){let t;e=this._sanitizeUrl(e);for(const r of this.serverInfos)if(this._hasSameServerInstance(r.server,e)){t=r;break}return t}findOAuthInfo(e){let t;e=this._sanitizeUrl(e);for(const r of this.oAuthInfos)if(this._hasSameServerInstance(r.portalUrl,e)){t=r;break}return t}findCredential(e,t){if(!e)return;let r;e=this._sanitizeUrl(e);const s=this._isServerRsrc(e)?"server":"portal";if(t){for(const i of this.credentials)if(this._hasSameServerInstance(i.server,e)&&t===i.userId&&i.scope===s){r=i;break}}else for(const i of this.credentials)if(this._hasSameServerInstance(i.server,e)&&-1!==this._getIdenticalSvcIdx(e,i)&&i.scope===s){r=i;break}return r}getCredential(e,t){let r,s,o=!0;t&&(r=!!t.token,s=t.error,o=!1!==t.prompt),t={...t},e=this._sanitizeUrl(e);const n=new AbortController,a=D$7();if(t.signal&&v$a(t.signal,(()=>{n.abort();})),v$a(n,(()=>{a.reject(new s$v("identity-manager:user-aborted","ABORTED"));})),p$j(n))return a.promise;t.signal=n.signal;const h=this._isAdminResource(e),u=r?this.findCredential(e):null;let p;if(u&&s&&s.details&&498===s.details.httpStatus)u.destroy();else if(u)return p=new s$v("identity-manager:not-authorized","You are currently signed in as: '"+u.userId+"'. You do not have access to this resource: "+e,{error:s}),a.reject(p),a.promise;const f=this._findCredential(e,t);if(f)return a.resolve(f),a.promise;let g=this.findServerInfo(e);if(g)!g.hasServer&&this._isServerRsrc(e)&&(g._restInfoPms=this._getTokenSvcUrl(e),g.hasServer=!0);else {const t=this._getTokenSvcUrl(e);if(!t)return p=new s$v("identity-manager:unknown-resource","Unknown resource - could not find token service endpoint."),a.reject(p),a.promise;g=new i,g.server=this._getServerInstanceRoot(e),"string"==typeof t?(g.tokenServiceUrl=t,g.hasPortal=!0):(g._restInfoPms=t,g.hasServer=!0),this.registerServers([g]);}return g.hasPortal&&void 0===g._selfReq&&(o||M$6(g.tokenServiceUrl,this._appOrigin)||this._gwDomains.some((e=>e.tokenServiceUrl===g.tokenServiceUrl)))&&(g._selfReq={owningTenant:t&&t.owningTenant,selfDfd:this._getPortalSelf(g.tokenServiceUrl.replace(this._rePortalTokenSvc,"/sharing/rest/portals/self"),e)}),this._enqueue(e,g,t,a,h)}getResourceName(e){return this._isRESTService(e)?e.replace(this._regexSDirUrl,"").replace(this._regexServerType,"")||"":this._gwUser.test(e)&&e.replace(this._gwUser,"$1")||this._gwItem.test(e)&&e.replace(this._gwItem,"$1")||this._gwGroup.test(e)&&e.replace(this._gwGroup,"$1")||""}generateToken(e,t,r){const o=this._rePortalTokenSvc.test(e.tokenServiceUrl),n=new $$5(this._appOrigin),a=e.shortLivedTokenValidity;let h,l,c,d,u,p,g,m;t&&(m=this.tokenValidity||a||this._defaultTokenValidity,m>a&&a>0&&(m=a)),r&&(h=r.isAdmin,l=r.serverUrl,c=r.token,p=r.signal,g=r.ssl,e.customParameters=r.customParameters),h?d=e.adminTokenServiceUrl:(d=e.tokenServiceUrl,u=new $$5(d.toLowerCase()),e.webTierAuth&&r?.serverUrl&&!g&&"http"===n.scheme&&(M$6(n.uri,d,!0)||"https"===u.scheme&&n.host===u.host&&"7080"===n.port&&"7443"===u.port)&&(d=d.replace(/^https:/i,"http:").replace(/:7443/i,":7080")));const v={query:{request:"getToken",username:t?.username,password:t?.password,serverUrl:l,token:c,expiration:m,referer:h||o?this._appOrigin:null,client:h?"referer":null,f:"json",...e.customParameters},method:"post",authMode:"anonymous",useProxy:this._useProxy(e,r),signal:p,...r?.ioArgs};o||(v.withCredentials=!1);return U$2(d,v).then((r=>{const s=r.data;if(!s||!s.token)return new s$v("identity-manager:authentication-failed","Unable to generate token");const o=e.server;return C[o]||(C[o]={}),t&&(C[o][t.username]=t.password),s.validity=m,s}))}isBusy(){return !!this._busy}checkSignInStatus(e){return this.checkAppAccess(e,"").then((e=>e.credential))}checkAppAccess(e,t,r){let o=!1;return this.getCredential(e,{prompt:!1}).then((n=>{let a;const h={f:"json"};if("portal"===n.scope)if(t&&(this._doPortalSignIn(e)||r&&r.force))a=n.server+"/sharing/rest/oauth2/validateAppAccess",h.client_id=t;else {if(!n.token)return {credential:n};a=n.server+"/sharing/rest";}else {if(!n.token)return {credential:n};a=n.server+"/rest/services";}return n.token&&(h.token=n.token),U$2(a,{query:h,authMode:"anonymous"}).then((e=>{if(!1===e.data.valid)throw new s$v("identity-manager:not-authorized",`You are currently signed in as: '${n.userId}'.`,e.data);return o=!!e.data.viewOnlyUserTypeApp,{credential:n}})).catch((e=>{if("identity-manager:not-authorized"===e.name)throw e;const t=e.details&&e.details.httpStatus;if(498===t)throw n.destroy(),new s$v("identity-manager:not-authenticated","User is not signed in.");if(400===t)throw new s$v("identity-manager:invalid-request");return {credential:n}}))})).then((e=>({credential:e.credential,viewOnly:o})))}setOAuthResponseHash(e){e&&("#"===e.charAt(0)&&(e=e.substring(1)),this._processOAuthPopupParams(v$b(e)));}setOAuthRedirectionHandler(e){this._oAuthRedirectFunc=e;}setProtocolErrorHandler(e){this._protocolFunc=e;}signIn(e,t,r={}){const s=D$7(),o=()=>{h$1?.remove(),d?.remove(),p?.remove(),a?.destroy(),this.dialog?.destroy(),this.dialog=a=h$1=d=p=null;},n=()=>{o(),this._oAuthDfd=null,s.reject(new s$v("identity-manager:user-aborted","ABORTED"));};r.signal&&v$a(r.signal,(()=>{n();}));let a=new this.formConstructor;a.resource=this.getResourceName(e),a.server=t.server,this.dialog=new h,this.dialog.content=a,this.dialog.open=!0,this.emit("dialog-create");let h$1=a.on("cancel",n),d=l$5((()=>this.dialog.open),n),p=a.on("submit",(e=>{this.generateToken(t,e,{isAdmin:r.isAdmin,signal:r.signal}).then((i=>{o();const n=new L({userId:e.username,server:t.server,token:i.token,expires:null!=i.expires?Number(i.expires):null,ssl:!!i.ssl,isAdmin:r.isAdmin,validity:i.validity});s.resolve(n);})).catch((e=>{a.error=e,a.signingIn=!1;}));}));return s.promise}oAuthSignIn(e,t,r,s){this._oAuthDfd=D$7();const o=this._oAuthDfd;let n;s?.signal&&v$a(s.signal,(()=>{const e=this._oAuthDfd&&this._oAuthDfd.oAuthWin_;e&&!e.closed?e.close():this.dialog&&f();})),o.resUrl_=e,o.sinfo_=t,o.oinfo_=r;const a=r._oAuthCred;if(a.storage&&("authorization-code"===r.flowType||"auto"===r.flowType&&!r.popup&&t.currentVersion>=8.4)){let e=crypto.getRandomValues(new Uint8Array(32));n=et(e),a.codeVerifier=n,e=crypto.getRandomValues(new Uint8Array(32)),a.stateUID=et(e),a.save()||(a.codeVerifier=n=null);}else a.codeVerifier=null;let h$1,d,p,_;this._getCodeChallenge(n).then((i=>{const o=!s||!1!==s.oAuthPopupConfirmation;r.popup&&o?(h$1=new this.formConstructor,h$1.oAuthPrompt=!0,h$1.server=t.server,this.dialog=new h,this.dialog.content=h$1,this.dialog.open=!0,this.emit("dialog-create"),d=h$1.on("cancel",f),p=l$5((()=>this.dialog.open),f),_=h$1.on("submit",(()=>{g(),this._doOAuthSignIn(e,t,r,i);}))):this._doOAuthSignIn(e,t,r,i);}));const f=()=>{g(),this._oAuthDfd=null,o.reject(new s$v("identity-manager:user-aborted","ABORTED"));},g=()=>{d?.remove(),p?.remove(),_?.remove(),h$1?.destroy(),this.dialog?.destroy(),this.dialog=null;};return o.promise}destroyCredentials(){if(this.credentials){this.credentials.slice().forEach((e=>{e.destroy();}));}this.emit("credentials-destroy");}enablePostMessageAuth(e="https://www.arcgis.com/sharing/rest"){this._postMessageAuthHandle&&this._postMessageAuthHandle.remove(),this._postMessageAuthHandle=r$n(window,"message",(t=>{if((t.origin===this._appOrigin||t.origin.endsWith(".arcgis.com"))&&"arcgis:auth:requestCredential"===t.data?.type){const r=t.source;this.getCredential(e).then((e=>{r.postMessage({type:"arcgis:auth:credential",credential:{expires:e.expires,server:e.server,ssl:e.ssl,token:e.token,userId:e.userId}},t.origin);})).catch((e=>{r.postMessage({type:"arcgis:auth:error",error:{name:e.name,message:e.message}},t.origin);}));}}));}disablePostMessageAuth(){this._postMessageAuthHandle&&(this._postMessageAuthHandle.remove(),this._postMessageAuthHandle=null);}_getOAuthLocationParams(){let e=window.location.hash;if(e){"#"===e.charAt(0)&&(e=e.substring(1));const t=v$b(e);let r=!1;if(t.access_token&&t.expires_in&&t.state&&t.hasOwnProperty("username"))try{t.state=JSON.parse(t.state),t.state.portalUrl&&(this._oAuthLocationParams=t,r=!0);}catch{}else if(t.error&&t.error_description&&(console.log("IdentityManager OAuth Error: ",t.error," - ",t.error_description),"access_denied"===t.error&&(r=!0,t.state)))try{t.state=JSON.parse(t.state);}catch{}r&&(window.location.hash=t.state?.hash||"");}let t=window.location.search;if(t){"?"===t.charAt(0)&&(t=t.substring(1));const e=v$b(t);let r=!1;if(e.code&&e.state)try{e.state=JSON.parse(e.state),e.state.portalUrl&&e.state.uid&&(this._oAuthLocationParams=e,r=!0);}catch{}else if(e.error&&e.error_description&&(console.log("IdentityManager OAuth Error: ",e.error," - ",e.error_description),"access_denied"===e.error&&(r=!0,e.state)))try{e.state=JSON.parse(e.state);}catch{}if(r){const t={...e};["code","error","error_description","message_code","persist","state"].forEach((e=>{delete t[e];}));const r=A$5(t),s=window.location.pathname+(r?`?${r}`:"")+(e.state?.hash||"");window.history.replaceState(window.history.state,"",s);}}}_getOAuthToken(e,t,r,i,o){return e=e.replace(/^http:/i,"https:"),U$2(`${e}/sharing/rest/oauth2/token`,{authMode:"anonymous",method:"post",query:i&&o?{grant_type:"authorization_code",code:t,redirect_uri:i,client_id:r,code_verifier:o}:{grant_type:"refresh_token",refresh_token:t,client_id:r}}).then((e=>e.data))}_getCodeChallenge(e){if(e&&globalThis.isSecureContext){const t=(new TextEncoder).encode(e);return crypto.subtle.digest("SHA-256",t).then((e=>et(new Uint8Array(e))))}return Promise.resolve(null)}_pageShowHandler(e){if(e.persisted&&this.isBusy()&&this._rejectOnPersistedPageShow){const e=new s$v("identity-manager:user-aborted","ABORTED");this._errbackFunc(e);}}_findCredential(e,t){let r,s,i,o,n=-1;const a=t&&t.token,h=t&&t.resource,l=this._isServerRsrc(e)?"server":"portal",c=this.credentials.filter((t=>this._hasSameServerInstance(t.server,e)&&t.scope===l));if(e=h||e,c.length)if(1===c.length){if(r=c[0],i=this.findServerInfo(r.server),s=i&&i.owningSystemUrl,o=s?this.findCredential(s,r.userId):void 0,n=this._getIdenticalSvcIdx(e,r),!a)return -1===n&&r.resources.push(e),this._addResource(e,o),r;-1!==n&&(r.resources.splice(n,1),this._removeResource(e,o));}else {let t,r;if(c.some((a=>(r=this._getIdenticalSvcIdx(e,a),-1!==r&&(t=a,i=this.findServerInfo(t.server),s=i&&i.owningSystemUrl,o=s?this.findCredential(s,t.userId):void 0,n=r,!0)))),a)t&&(t.resources.splice(n,1),this._removeResource(e,o));else if(t)return this._addResource(e,o),t}}_findOAuthInfo(e){let t=this.findOAuthInfo(e);if(!t)for(const r of this.oAuthInfos)if(this._isIdProvider(r.portalUrl,e)){t=r;break}return t}_addResource(e,t){t&&-1===this._getIdenticalSvcIdx(e,t)&&t.resources.push(e);}_removeResource(e,t){let r=-1;t&&(r=this._getIdenticalSvcIdx(e,t),r>-1&&t.resources.splice(r,1));}_useProxy(e,t){return t&&t.isAdmin&&!M$6(e.adminTokenServiceUrl,this._appOrigin)||!this._isPortalDomain(e.tokenServiceUrl)&&"10.1"===String(e.currentVersion)&&!M$6(e.tokenServiceUrl,this._appOrigin)}_getOrigin(e){const t=new $$5(e);return t.scheme+"://"+t.host+(null!=t.port?":"+t.port:"")}_getServerInstanceRoot(e){const t=e.toLowerCase();let r=t.indexOf(this._agsRest);return -1===r&&this._isAdminResource(e)&&(r=this._agsAdmin.test(e)?e.replace(this._agsAdmin,"$1").length:e.search(this._adminSvcs)),-1!==r||t$v(t)||(r=t.indexOf("/sharing")),-1===r&&"/"===t.substr(-1)&&(r=t.length-1),r>-1?e.substring(0,r):e}_hasSameServerInstance(e,t){return "/"===e.substr(-1)&&(e=e.slice(0,-1)),e=e.toLowerCase(),t=this._getServerInstanceRoot(t).toLowerCase(),e=this._normalizeAGOLorgDomain(e),t=this._normalizeAGOLorgDomain(t),(e=e.substr(e.indexOf(":")))===(t=t.substr(t.indexOf(":")))}_normalizeAGOLorgDomain(e){const t=/^https?:\/\/(?:cdn|[a-z\d-]+\.maps)\.arcgis\.com/i,r=/^https?:\/\/(?:cdndev|[a-z\d-]+\.mapsdevext)\.arcgis\.com/i,s=/^https?:\/\/(?:cdnqa|[a-z\d-]+\.mapsqa)\.arcgis\.com/i;return t.test(e)?e=e.replace(t,"https://www.arcgis.com"):r.test(e)?e=e.replace(r,"https://devext.arcgis.com"):s.test(e)&&(e=e.replace(s,"https://qaext.arcgis.com")),e}_sanitizeUrl(e){const r=(s$x.request.proxyUrl||"").toLowerCase(),s=r?e.toLowerCase().indexOf(r+"?"):-1;return -1!==s&&(e=e.substring(s+r.length+1)),e=K$1(e),L$3(e).path}_isRESTService(e){return e.includes(this._agsRest)}_isAdminResource(e){return this._agsAdmin.test(e)||this._adminSvcs.test(e)}_isServerRsrc(e){return this._isRESTService(e)||this._isAdminResource(e)}_isIdenticalService(e,t){let r=!1;if(this._isRESTService(e)&&this._isRESTService(t)){const s=this._getSuffix(e).toLowerCase(),i=this._getSuffix(t).toLowerCase();if(r=s===i,!r){const e=/(.*)\/(MapServer|FeatureServer|UtilityNetworkServer).*/gi;r=s.replace(e,"$1")===i.replace(e,"$1");}}else this._isAdminResource(e)&&this._isAdminResource(t)?r=!0:this._isServerRsrc(e)||this._isServerRsrc(t)||!this._isPortalDomain(e)||(r=!0);return r}_isPortalDomain(e){const r=new $$5(e.toLowerCase()),s=this._portalConfig;let i=this._gwDomains.some((e=>e.regex.test(r.uri)));return !i&&s&&(i=this._hasSameServerInstance(this._getServerInstanceRoot(s.restBaseUrl),r.uri)),i||s$x.portalUrl&&(i=M$6(r,s$x.portalUrl,!0)),i||(i=this._portals.some((e=>this._hasSameServerInstance(e,r.uri)))),i=i||this._agsPortal.test(r.path),i}_isIdProvider(e,t){let r=-1,s=-1;this._gwDomains.forEach(((i,o)=>{-1===r&&i.regex.test(e)&&(r=o),-1===s&&i.regex.test(t)&&(s=o);}));let i=!1;if(r>-1&&s>-1&&(0===r||4===r?0!==s&&4!==s||(i=!0):1===r?1!==s&&2!==s||(i=!0):2===r?2===s&&(i=!0):3===r&&3===s&&(i=!0)),!i){const r=this.findServerInfo(t),s=r&&r.owningSystemUrl;s&&b(r)&&this._isPortalDomain(s)&&this._isIdProvider(e,s)&&(i=!0);}return i}_getIdenticalSvcIdx(e,t){let r=-1;for(let s=0;s<t.resources.length;s++){const i=t.resources[s];if(this._isIdenticalService(e,i)){r=s;break}}return r}_getSuffix(e){return e.replace(this._regexSDirUrl,"").replace(this._regexServerType,"$1")}_getTokenSvcUrl(e){let t,r,i;if(this._isRESTService(e)||this._isAdminResource(e)){const i=this._getServerInstanceRoot(e);return t=i+"/admin/generateToken",r=U$2(e=i+"/rest/info",{query:{f:"json"}}).then((e=>e.data)),{adminUrl:t,promise:r}}if(this._isPortalDomain(e)){let t="";if(this._gwDomains.some((r=>(r.regex.test(e)&&(t=r.tokenServiceUrl),!!t))),t||this._portals.some((r=>(this._hasSameServerInstance(r,e)&&(t=r+this._gwTokenUrl),!!t))),t||(i=e.toLowerCase().indexOf("/sharing"),-1!==i&&(t=e.substring(0,i)+this._gwTokenUrl)),t||(t=this._getOrigin(e)+this._gwTokenUrl),t){const r=new $$5(e).port;/^http:\/\//i.test(e)&&"7080"===r&&(t=t.replace(/:7080/i,":7443")),t=t.replace(/http:/i,"https:");}return t}if(e.toLowerCase().includes("premium.arcgisonline.com"))return "https://premium.arcgisonline.com/server/tokens"}_processOAuthResponseParams(e,t,r){const s=t._oAuthCred;if(e.code){const i=s.codeVerifier;return s.codeVerifier=null,s.stateUID=null,s.save(),this._getOAuthToken(r.server,e.code,t.appId,this._getRedirectURI(t,!0),i).then((i=>{const o=new L({userId:i.username,server:r.server,token:i.access_token,expires:Date.now()+1e3*i.expires_in,ssl:i.ssl,oAuthState:e.state,_oAuthCred:s});return t.userId=o.userId,s.storage=i.persist?q:j,s.refreshToken=i.refresh_token,s.token=null,s.expires=i.refresh_token_expires_in?Date.now()+1e3*i.refresh_token_expires_in:null,s.userId=o.userId,s.ssl=o.ssl,s.save(),o}))}const i=new L({userId:e.username,server:r.server,token:e.access_token,expires:Date.now()+1e3*Number(e.expires_in),ssl:"true"===e.ssl,oAuthState:e.state,_oAuthCred:s});return t.userId=i.userId,s.storage=e.persist?q:j,s.refreshToken=null,s.token=i.token,s.expires=i.expires,s.userId=i.userId,s.ssl=i.ssl,s.save(),Promise.resolve(i)}_processOAuthPopupParams(e){const t=this._oAuthDfd;if(this._oAuthDfd=null,t)if(clearInterval(this._oAuthIntervalId),this._oAuthOnPopupHandle?.remove(),e.error){const r="access_denied"===e.error,s=new s$v(r?"identity-manager:user-aborted":"identity-manager:authentication-failed",r?"ABORTED":"OAuth: "+e.error+" - "+e.error_description);t.reject(s);}else this._processOAuthResponseParams(e,t.oinfo_,t.sinfo_).then((e=>{t.resolve(e);})).catch((e=>{t.reject(e);}));}_setOAuthResponseQueryString(e){e&&("?"===e.charAt(0)&&(e=e.substring(1)),this._processOAuthPopupParams(v$b(e)));}_exchangeToken(e,t,r){return U$2(`${e}/sharing/rest/oauth2/exchangeToken`,{authMode:"anonymous",method:"post",query:{f:"json",client_id:t,token:r}}).then((e=>e.data.token))}_getPlatformSelf(e,t){return e=e.replace(/^http:/i,"https:"),U$2(`${e}/sharing/rest/oauth2/platformSelf`,{authMode:"anonymous",headers:{"X-Esri-Auth-Client-Id":t,"X-Esri-Auth-Redirect-Uri":window.location.href.replace(/#.*$/,"")},method:"post",query:{f:"json",expiration:30},withCredentials:!0}).then((e=>e.data))}_getPortalSelf(e,t){let r;if(this._gwDomains.some((t=>(t.regex.test(e)&&(r=t.customBaseUrl),!!r))),r)return Promise.resolve({allSSL:!0,currentVersion:"8.4",customBaseUrl:r,portalMode:"multitenant",supportsOAuth:!0});this._appOrigin.startsWith("https:")?e=e.replace(/^http:/i,"https:").replace(/:7080/i,":7443"):/^http:/i.test(t)&&(e=e.replace(/^https:/i,"http:").replace(/:7443/i,":7080"));return U$2(e,{query:{f:"json"},authMode:"anonymous",withCredentials:!0}).then((e=>e.data))}_doPortalSignIn(e){const t=this._portalConfig,r=window.location.href,s=this.findServerInfo(e);return !(!t&&!this._isPortalDomain(r)||!(s?s.hasPortal||s.owningSystemUrl&&this._isPortalDomain(s.owningSystemUrl):this._isPortalDomain(e))||!(this._isIdProvider(r,e)||t&&(this._hasSameServerInstance(this._getServerInstanceRoot(t.restBaseUrl),e)||this._isIdProvider(t.restBaseUrl,e))||M$6(r,e,!0)))}_checkProtocol(e,t,r,s){let o=!0;const n=s?t.adminTokenServiceUrl:t.tokenServiceUrl;if(n.trim().toLowerCase().startsWith("https:")&&!this._appOrigin.startsWith("https:")&&J$1(n)&&(o=!!this._protocolFunc&&!!this._protocolFunc({resourceUrl:e,serverInfo:t}),!o)){r(new s$v("identity-manager:aborted","Aborted the Sign-In process to avoid sending password over insecure connection."));}return o}_enqueue(e,t,r,s,i,o){return s||(s=D$7()),s.resUrl_=e,s.sinfo_=t,s.options_=r,s.admin_=i,s.refresh_=o,this._busy?this._hasSameServerInstance(this._getServerInstanceRoot(e),this._busy.resUrl_)?(this._oAuthDfd&&this._oAuthDfd.oAuthWin_&&this._oAuthDfd.oAuthWin_.focus(),this._soReqs.push(s)):this._xoReqs.push(s):this._doSignIn(s),s.promise}_doSignIn(e$1){this._busy=e$1,this._rejectOnPersistedPageShow=!1;const t=t=>{const r=e$1.options_&&e$1.options_.resource,s=e$1.resUrl_,i=e$1.refresh_;let o=!1;this.credentials.includes(t)||(i&&this.credentials.includes(i)?(i.userId=t.userId,i.token=t.token,i.expires=t.expires,i.validity=t.validity,i.ssl=t.ssl,i.creationTime=t.creationTime,o=!0,t=i):this.credentials.push(t)),t.resources||(t.resources=[]),t.resources.includes(r||s)||t.resources.push(r||s),t.scope=this._isServerRsrc(s)?"server":"portal",t.emitTokenChange();const n=this._soReqs,a={};this._soReqs=[],n.forEach((e=>{if(!this._isIdenticalService(s,e.resUrl_)){const r=this._getSuffix(e.resUrl_);a[r]||(a[r]=!0,t.resources.push(e.resUrl_));}})),e$1.resolve(t),n.forEach((e=>{this._hasSameServerInstance(this._getServerInstanceRoot(s),e.resUrl_)?e.resolve(t):this._soReqs.push(e);})),this._busy=e$1.resUrl_=e$1.sinfo_=e$1.refresh_=null,o||this.emit("credential-create",{credential:t}),this._soReqs.length?this._doSignIn(this._soReqs.shift()):this._xoReqs.length&&this._doSignIn(this._xoReqs.shift());},r=t=>{e$1.reject(t),this._busy=e$1.resUrl_=e$1.sinfo_=e$1.refresh_=null,this._soReqs.length?this._doSignIn(this._soReqs.shift()):this._xoReqs.length&&this._doSignIn(this._xoReqs.shift());},s=(o,a,h,l)=>{const d=e$1.sinfo_,u=!e$1.options_||!1!==e$1.options_.prompt,p=d.hasPortal&&this._findOAuthInfo(e$1.resUrl_);let f,g;if(o)t(new L({userId:o,server:d.server,token:h||null,expires:null!=l?Number(l):null,ssl:!!a}));else if(window!==window.parent&&this._appUrlObj.query?.["arcgis-auth-origin"]&&this._appUrlObj.query?.["arcgis-auth-portal"]&&this._hasSameServerInstance(this._getServerInstanceRoot(this._appUrlObj.query["arcgis-auth-portal"]),e$1.resUrl_)){window.parent.postMessage({type:"arcgis:auth:requestCredential"},this._appUrlObj.query["arcgis-auth-origin"]);const s=r$n(window,"message",(e=>{e.source===window.parent&&e.data&&("arcgis:auth:credential"===e.data.type?(s.remove(),e.data.credential.expires<Date.now()?r(new s$v("identity-manager:credential-request-failed","Parent application's token has expired.")):t(new L(e.data.credential))):"arcgis:auth:error"===e.data.type&&(s.remove(),"tokenExpiredError"===e.data.error.name?r(new s$v("identity-manager:credential-request-failed","Parent application's token has expired.")):r(s$v.fromJSON(e.data.error))));}));v$a(e$1.options_?.signal,(()=>{s.remove();}));}else if(p){let o=p._oAuthCred;if(!o){const e$1=new e(p,q),t=new e(p,j);e$1.isValid()&&t.isValid()?e$1.expires>t.expires?(o=e$1,t.destroy()):(o=t,e$1.destroy()):o=e$1.isValid()?e$1:t,p._oAuthCred=o;}if(o.isValid()){f=new L({userId:o.userId,server:d.server,token:o.token,expires:o.expires,ssl:o.ssl,_oAuthCred:o});const r=p.appId!==o.appId&&this._doPortalSignIn(e$1.resUrl_);r||o.refreshToken?(e$1._pendingDfd=o.refreshToken?this._getOAuthToken(d.server,o.refreshToken,o.appId).then((e=>(f.expires=Date.now()+1e3*e.expires_in,f.token=e.access_token,f))):Promise.resolve(f),e$1._pendingDfd.then((e=>r?this._exchangeToken(e.server,p.appId,e.token).then((t=>(e.token=t,e))).catch((()=>e)):e)).then((e=>{t(e);})).catch((()=>{o?.destroy(),s();}))):t(f);}else if(this._oAuthLocationParams&&this._hasSameServerInstance(p.portalUrl,this._oAuthLocationParams.state.portalUrl)&&(this._oAuthLocationParams.access_token||this._oAuthLocationParams.code&&this._oAuthLocationParams.state.uid===o.stateUID&&o.codeVerifier)){const s=this._oAuthLocationParams;this._oAuthLocationParams=null,e$1._pendingDfd=this._processOAuthResponseParams(s,p,d).then((e=>{t(e);})).catch(r);}else {const s=()=>{u?e$1._pendingDfd=this.oAuthSignIn(e$1.resUrl_,d,p,e$1.options_).then(t,r):(g=new s$v("identity-manager:not-authenticated","User is not signed in."),r(g));};this._doPortalSignIn(e$1.resUrl_)?e$1._pendingDfd=this._getPlatformSelf(d.server,p.appId).then((e=>{M$6(e.portalUrl,this._appOrigin,!0)?(f=new L({userId:e.username,server:d.server,expires:Date.now()+1e3*e.expires_in,token:e.token}),t(f)):s();})).catch(s):s();}}else if(u){if(this._checkProtocol(e$1.resUrl_,d,r,e$1.admin_)){let s=e$1.options_;e$1.admin_&&(s=s||{},s.isAdmin=!0),e$1._pendingDfd=this.signIn(e$1.resUrl_,d,s).then(t,r);}}else g=new s$v("identity-manager:not-authenticated","User is not signed in."),r(g);},o=()=>{const s=e$1.sinfo_,i=s.owningSystemUrl,o=e$1.options_;let n,a,h,l;if(o&&(n=o.token,a=o.error,h=o.prompt),l=this._findCredential(i,{token:n,resource:e$1.resUrl_}),!l)for(const e of this.credentials)if(this._isIdProvider(i,e.server)){l=e;break}if(l){const i=this.findCredential(e$1.resUrl_,l.userId);if(i)t(i);else if(D(s,this._legacyFed)){const e=l.toJSON();e.server=s.server,e.resources=null,t(new L(e));}else {(e$1._pendingDfd=this.generateToken(this.findServerInfo(l.server),null,{serverUrl:e$1.resUrl_,token:l.token,signal:e$1.options_.signal,ssl:l.ssl})).then((r=>{t(new L({userId:l?.userId,server:s.server,token:r.token,expires:null!=r.expires?Number(r.expires):null,ssl:!!r.ssl,isAdmin:e$1.admin_,validity:r.validity}));}),r);}}else {this._busy=null,n&&(e$1.options_.token=null);(e$1._pendingDfd=this.getCredential(i.replace(/\/?$/,"/sharing"),{resource:e$1.resUrl_,owningTenant:s.owningTenant,signal:e$1.options_.signal,token:n,error:a,prompt:h})).then((()=>{this._enqueue(e$1.resUrl_,e$1.sinfo_,e$1.options_,e$1,e$1.admin_);}),(t=>{e$1.resUrl_=e$1.sinfo_=e$1.refresh_=null,e$1.reject(t);}));}};this._errbackFunc=r;const a=e$1.sinfo_.owningSystemUrl,l=this._isServerRsrc(e$1.resUrl_),d=e$1.sinfo_._restInfoPms;d?d.promise.then((t=>{const r=e$1.sinfo_;if(r._restInfoPms){r.adminTokenServiceUrl=r._restInfoPms.adminUrl,r._restInfoPms=null,r.tokenServiceUrl=(t$w("authInfo.tokenServicesUrl",t)||t$w("authInfo.tokenServiceUrl",t)||t$w("tokenServiceUrl",t))??null,r.shortLivedTokenValidity=t$w("authInfo.shortLivedTokenValidity",t)??null,r.currentVersion=t.currentVersion,r.owningTenant=t.owningTenant;const e=r.owningSystemUrl=t.owningSystemUrl;e&&this._portals.push(e);}l&&r.owningSystemUrl?o():s();}),(()=>{e$1.sinfo_._restInfoPms=null;const t=new s$v("identity-manager:server-identification-failed","Unknown resource - could not find token service endpoint.");r(t);})):l&&a?o():e$1.sinfo_._selfReq?e$1.sinfo_._selfReq.selfDfd.then((t=>{const r={};let s,i,o,n;return t&&(s=t.user&&t.user.username,r.username=s,r.allSSL=t.allSSL,i=t.supportsOAuth,n=parseFloat(t.currentVersion),"multitenant"===t.portalMode&&(o=t.customBaseUrl),e$1.sinfo_.currentVersion=n),e$1.sinfo_.webTierAuth=!!s,s&&this.normalizeWebTierAuth?this.generateToken(e$1.sinfo_,null,{ssl:r.allSSL}).catch((()=>null)).then((e=>(r.portalToken=e&&e.token,r.tokenExpiration=e&&e.expires,r))):!s&&i&&n>=4.4&&!this._findOAuthInfo(e$1.resUrl_)?this._generateOAuthInfo({portalUrl:e$1.sinfo_.server,customBaseUrl:o,owningTenant:e$1.sinfo_._selfReq.owningTenant}).catch((()=>null)).then((()=>r)):r})).catch((()=>null)).then((t=>{e$1.sinfo_._selfReq=null,t?s(t.username,t.allSSL,t.portalToken,t.tokenExpiration):s();})):s();}_generateOAuthInfo(e){let t,r=null,i=e.portalUrl;const o=e.customBaseUrl,n=e.owningTenant,a=!this._defaultOAuthInfo&&this._createDefaultOAuthInfo&&!this._hasTestedIfAppIsOnPortal;if(a){r=window.location.href;let e=r.indexOf("?");e>-1&&(r=r.slice(0,e)),e=r.search(/\/(apps|home)\//),r=e>-1?r.slice(0,e):null;}return a&&r?(this._hasTestedIfAppIsOnPortal=!0,t=U$2(r+"/sharing/rest",{query:{f:"json"}}).then((()=>{this._defaultOAuthInfo=new i$1({appId:"arcgisonline",popupCallbackUrl:r+"/home/oauth-callback.html"});}))):t=Promise.resolve(),t.then((()=>{if(this._defaultOAuthInfo)return i=i.replace(/^http:/i,"https:"),U$2(i+"/sharing/rest/oauth2/validateRedirectUri",{query:{accountId:n,client_id:this._defaultOAuthInfo.appId,redirect_uri:F$2(this._defaultOAuthInfo.popupCallbackUrl),f:"json"}}).then((e=>{if(e.data.valid){const t=this._defaultOAuthInfo.clone();e.data.urlKey&&o?t.portalUrl="https://"+e.data.urlKey.toLowerCase()+"."+o:t.portalUrl=i,t.popup=window!==window.top||!(M$6(i,this._appOrigin)||this._gwDomains.some((e=>e.regex.test(i)&&e.regex.test(this._appOrigin)))),this.oAuthInfos.push(t);}}))}))}_doOAuthSignIn(e,t,r,s){const o=r._oAuthCred,a={portalUrl:r.portalUrl};!r.popup&&r.preserveUrlHash&&window.location.hash&&(a.hash=window.location.hash),o.stateUID&&(a.uid=o.stateUID);const h={client_id:r.appId,response_type:o.codeVerifier?"code":"token",state:JSON.stringify(a),expiration:r.expiration,locale:r.locale,redirect_uri:this._getRedirectURI(r,!!o.codeVerifier)};r.forceLogin&&(h.force_login=!0),r.forceUserId&&r.userId&&(h.prepopulatedusername=r.userId),!r.popup&&this._doPortalSignIn(e)&&(h.redirectToUserOrgUrl=!0),o.codeVerifier&&(h.code_challenge=s||o.codeVerifier,h.code_challenge_method=s?"S256":"plain");const l=r.portalUrl.replace(/^http:/i,"https:")+"/sharing/oauth2/authorize",c=l+"?"+A$5(h);if(r.popup){const e=window.open(c,"esriJSAPIOAuth",r.popupWindowFeatures);if(e)e.focus(),this._oAuthDfd.oAuthWin_=e,this._oAuthIntervalId=setInterval((()=>{if(e.closed){clearInterval(this._oAuthIntervalId),this._oAuthOnPopupHandle.remove();const e=this._oAuthDfd;if(e){const t=new s$v("identity-manager:user-aborted","ABORTED");e.reject(t);}}}),500),this._oAuthOnPopupHandle=r$n(window,["arcgis:auth:hash","arcgis:auth:location:search"],(e=>{"arcgis:auth:hash"===e.type?this.setOAuthResponseHash(e.detail):this._setOAuthResponseQueryString(e.detail);}));else {const e=new s$v("identity-manager:popup-blocked","ABORTED");this._oAuthDfd.reject(e);}}else this._rejectOnPersistedPageShow=!0,this._oAuthRedirectFunc?this._oAuthRedirectFunc({authorizeParams:h,authorizeUrl:l,resourceUrl:e,serverInfo:t,oAuthInfo:r}):window.location.href=c;}_getRedirectURI(e,t){const r=window.location.href.replace(/#.*$/,"");if(e.popup)return F$2(e.popupCallbackUrl);if(t){const e=L$3(r);return e.query&&["code","error","error_description","message_code","persist","state"].forEach((t=>{delete e.query[t];})),Et(e.path,e.query)}return r}}E.prototype.declaredClass="esri.identity.IdentityManagerBase";let L=class extends n$a.EventedAccessor{constructor(e){super(e),this._oAuthCred=null,this.tokenRefreshBuffer=2,e&&e._oAuthCred&&(this._oAuthCred=e._oAuthCred);}initialize(){this.resources=this.resources||[],null==this.creationTime&&(this.creationTime=Date.now());}refreshToken(){const e=r$o.findServerInfo(this.server),t=e&&e.owningSystemUrl,s=!!t&&"server"===this.scope,i=s&&D(e,r$o._legacyFed),o=e.webTierAuth,n=o&&r$o.normalizeWebTierAuth,a=C[this.server],h=a&&a[this.userId];let l,c=this.resources&&this.resources[0],d=s?r$o.findServerInfo(t):null,u={username:this.userId,password:h};if(o&&!n)return;s&&!d&&r$o.serverInfos.some((e=>(r$o._isIdProvider(t,e.server)&&(d=e),!!d)));const p=d?r$o.findCredential(d.server,this.userId):null;if(!s||p){if(!i){if(s)l={serverUrl:c,token:p&&p.token,ssl:p&&p.ssl};else if(n)u=null,l={ssl:this.ssl};else {if(!h){let t;return c&&(c=r$o._sanitizeUrl(c),this._enqueued=1,t=r$o._enqueue(c,e,null,null,this.isAdmin,this),t.then((()=>{this._enqueued=0,this.refreshServerTokens();})).catch((()=>{this._enqueued=0;}))),t}this.isAdmin&&(l={isAdmin:!0});}return r$o.generateToken(s?d:e,s?null:u,l).then((e=>{this.token=e.token,this.expires=null!=e.expires?Number(e.expires):null,this.creationTime=Date.now(),this.validity=e.validity,this.emitTokenChange(),this.refreshServerTokens();})).catch((()=>{}))}p?.refreshToken();}}refreshServerTokens(){"portal"===this.scope&&r$o.credentials.forEach((e=>{const t=r$o.findServerInfo(e.server),s=t&&t.owningSystemUrl;e!==this&&e.userId===this.userId&&s&&"server"===e.scope&&(r$o._hasSameServerInstance(this.server,s)||r$o._isIdProvider(s,this.server))&&(D(t,r$o._legacyFed)?(e.token=this.token,e.expires=this.expires,e.creationTime=this.creationTime,e.validity=this.validity,e.emitTokenChange()):e.refreshToken());}));}emitTokenChange(e){clearTimeout(this._refreshTimer);const t=this.server&&r$o.findServerInfo(this.server),s=t&&t.owningSystemUrl,i=s&&r$o.findServerInfo(s);!1===e||s&&"portal"!==this.scope&&(!i||!i.webTierAuth||r$o.normalizeWebTierAuth)||null==this.expires&&null==this.validity||this._startRefreshTimer(),this.emit("token-change");}destroy(){this.userId=this.server=this.token=this.expires=this.validity=this.resources=this.creationTime=null,this._oAuthCred&&(this._oAuthCred.destroy(),this._oAuthCred=null);const e=r$o.credentials.indexOf(this);e>-1&&r$o.credentials.splice(e,1),this.emitTokenChange(),this.emit("destroy");}toJSON(){const e=l$l({userId:this.userId,server:this.server,token:this.token,expires:this.expires,validity:this.validity,ssl:this.ssl,isAdmin:this.isAdmin,creationTime:this.creationTime,scope:this.scope}),t=this.resources;return t&&t.length>0&&(e.resources=t.slice()),e}_startRefreshTimer(){clearTimeout(this._refreshTimer);const e=6e4*this.tokenRefreshBuffer,t=2**31-1;let r=(this.validity?this.creationTime+6e4*this.validity:this.expires)-Date.now();r<0?r=0:r>t&&(r=t),this._refreshTimer=setTimeout(this.refreshToken.bind(this),r>e?r-e:r);}};e$u([y$9()],L.prototype,"creationTime",void 0),e$u([y$9()],L.prototype,"expires",void 0),e$u([y$9()],L.prototype,"isAdmin",void 0),e$u([y$9()],L.prototype,"oAuthState",void 0),e$u([y$9()],L.prototype,"resources",void 0),e$u([y$9()],L.prototype,"scope",void 0),e$u([y$9()],L.prototype,"server",void 0),e$u([y$9()],L.prototype,"ssl",void 0),e$u([y$9()],L.prototype,"token",void 0),e$u([y$9()],L.prototype,"tokenRefreshBuffer",void 0),e$u([y$9()],L.prototype,"userId",void 0),e$u([y$9()],L.prototype,"validity",void 0),L=e$u([a$g("esri.identity.Credential")],L);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class r extends E{}r.prototype.declaredClass="esri.identity.IdentityManager";const s=new r;n$o(s);

const IdentityManager = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': s
});

class GeocoderClient {
  constructor(token, geocoderUrl) {
    this.token = token;
    this.geocoderUrl = geocoderUrl || _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.E.getUrl('geocode');
    if (!this.geocoderUrl.endsWith('/'))
      this.geocoderUrl += '/';
    s$x.apiKey = token;
  }
  /**
   * Provides quick search suggestions by single-line text and optional parameters.
   * See https://developers.arcgis.com/rest/geocode/api-reference/geocoding-suggest.htm
   *
   * @param text
   * @param options Optional parameters:
   *    location - origin point used to prefer geocoding candidates; string in format "x,y" (e.g., "-117.196,34.056")
   *    sourceCountry - sourceCountry to be used for search
   *    langCode - locale for search
   */
  suggest(text, options) {
    return new Promise((resolve, reject) => {
      if (!text || !text.length) {
        resolve([]);
        return;
      }
      let suggestParams = new URLSearchParams({
        text: text
      });
      options?.location && suggestParams.set('location', options.location);
      options?.sourceCountry && suggestParams.set('sourceCountry', options.sourceCountry);
      options?.langCode && suggestParams.set('langCode', options.langCode);
      this._request(this.geocoderUrl + 'suggest', suggestParams)
        .then(result => {
        resolve(result.suggestions);
      }).catch(error => {
        reject(error);
      });
    });
  }
  /**
   * Geocodes location by single-line address and optional parameters.
   * See https://developers.arcgis.com/rest/geocode/api-reference/geocoding-find-address-candidates.htm
   *
   * @param text Location to be geocoded
   * @param options Optional parameters:
   *    location - origin point used to prefer geocoding candidates; string in format "x,y" (e.g., "-117.196,34.056")
   *    magicKey - key returned from 'suggest' operation for 'text' input; string
   *    maxLocations - maximum number of locations to be returned; number, default is 10
   *    outFields - list of fields to be returned as attributes; string (e.g., "Region,City,Phone")
   */
  geocode(text, options) {
    return new Promise((resolve, reject) => {
      if (!text || !text.length) {
        resolve([]);
        return;
      }
      let geocodeParams = new URLSearchParams({
        maxLocations: options?.maxLocations || 10,
        singleLine: text
      });
      options?.location && geocodeParams.set('location', options.location);
      options?.outFields && geocodeParams.set('outFields', options.outFields);
      options?.magicKey && geocodeParams.set('magicKey', options.magicKey);
      // For the online geocoder service, we want to bypass sending the token, it is not required and causes an issue for Enterprise implementations
      this._request(this.geocoderUrl + 'findAddressCandidates', geocodeParams, _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.E.isOnlineGeocoder(this.geocoderUrl))
        .then(result => {
        resolve(result);
      }).catch(error => {
        reject(error);
      });
    });
  }
  geocodeUsingApi(lat, lon) {
    return new Promise((resolve, reject) => {
      const pt = new w$3({ latitude: lat, longitude: lon });
      const serviceUrl = this.geocoderUrl;
      const params = {
        location: pt
      };
      // Register token if we are NOT using the online Geocoder Service
      if (!_GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.E.isOnlineGeocoder(serviceUrl)) {
        s.registerToken({
          server: serviceUrl,
          token: this.token
        });
      }
      // Else if we are using the online Geocoder Service, unset the token as it's not required
      else {
        s$x.apiKey = "";
      }
      n$b(serviceUrl, params)
        .then(result => {
        const data = {
          address: result.address,
          shortAddressType: result.attributes.Addr_type,
          shortAddress: result.attributes.Address,
          city: result.attributes.City,
          countryCode: result.attributes.CountryCode,
          postal: result.attributes.Postal,
          label: result.attributes.LongLabel,
          matchAddr: result.attributes.Match_addr
        };
        resolve(data);
      }).catch(error => {
        reject(error);
      });
    });
  }
  _request(url, params, bypassToken) {
    return new Promise((resolve, reject) => {
      if (!bypassToken) {
        params.set('token', this.token);
      }
      params.set('f', 'json');
      let requestUrl = url + '?' + params.toString();
      fetch(requestUrl, {
        method: 'GET'
      }).then(response => {
        if (!response.ok)
          throw new Error(_ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('network-response-error'));
        return response.json();
      }).then(result => {
        result.error ? reject(result.error) : resolve(result);
      }).catch(error => {
        reject(error);
      });
    });
  }
}

const arcgisBaSearchCss = ":host{display:block}arcgis-ba-search{width:50%;height:36px}.ba-calcite-dropdown-group{display:block;min-width:240px}.arcgisBaSearchIconButton{width:30px;height:30px;}.arcgisBaSearchInputNoGeog{position:relative;left:0;width:100%;z-index:1}.arcgisBASearchOuter{position:relative}.baSearchElement{position:absolute;top:0;left:0;width:32px;height:32px;font-family:arial;font-size:13pt;z-index:1}.baSearchMagGlass{position:absolute;top:0;right:-7px;height:calc(100% - 2px);width:32px;background-image:url(\"data:image/svg+xml,%3Csvg xmlns:svg='http://www.w3.org/2000/svg' xmlns='http://www.w3.org/2000/svg' version='1.1' x='0px' y='0px' width='28px' height='28px' viewBox='0 0 28 28' enable-background='new 0 0 28 28' xml:space='preserve'%3E%3Cpath d='M29.974,53.745c-0.034-0.165-0.307-0.782-0.402-0.923c-0.096-0.137-1.078-0.882-1.232-0.942 c-0.158-0.06-0.851-0.03-1.041-0.03l-14.906,0.033l2.392-2.447c0.085-0.086,0.173-0.184,0.259-0.27 c0.087-0.086,0.173-0.173,0.261-0.26c0.086-0.086,0.168-0.172,0.247-0.26c0.077-0.086,0.149-0.172,0.22-0.259 c0.139-0.12,0.258-0.251,0.352-0.39c0.096-0.139,0.176-0.281,0.247-0.428c0.07-0.148,0.12-0.303,0.156-0.469 c0.035-0.166,0.051-0.342,0.051-0.533c0-0.087-0.005-0.168-0.014-0.247c-0.008-0.078-0.021-0.155-0.038-0.233 c-0.018-0.077-0.039-0.156-0.065-0.234c-0.025-0.077-0.057-0.16-0.091-0.246c-0.035-0.086-0.074-0.169-0.117-0.246 c-0.043-0.078-0.092-0.156-0.143-0.234c-0.051-0.077-0.108-0.151-0.168-0.221c-0.061-0.07-0.126-0.138-0.195-0.207 c-0.139-0.121-0.281-0.225-0.429-0.312s-0.3-0.158-0.455-0.22c-0.156-0.061-0.321-0.102-0.494-0.127 c-0.172-0.025-0.354-0.035-0.546-0.035c-0.19,0-0.372,0.025-0.545,0.051c-0.173,0.025-0.337,0.092-0.494,0.152 c-0.156,0.061-0.307,0.178-0.455,0.264c-0.146,0.086-0.29,0.279-0.429,0.4L2,54.301l9.95,9.646c0.138,0.139,0.281,0.08,0.429,0.174 c0.147,0.096,0.298,0.18,0.454,0.248c0.156,0.07,0.321,0.121,0.494,0.154c0.173,0.035,0.355,0.053,0.546,0.053 c0.19,0,0.372-0.018,0.545-0.053c0.174-0.033,0.339-0.084,0.493-0.154c0.155-0.068,0.308-0.152,0.454-0.248 c0.148-0.094,0.29-0.211,0.43-0.35c0.139-0.121,0.257-0.252,0.351-0.391c0.096-0.139,0.178-0.285,0.248-0.441 c0.068-0.156,0.121-0.318,0.156-0.482c0.034-0.164,0.051-0.34,0.051-0.531c0-0.07-0.004-0.143-0.014-0.221 c-0.009-0.078-0.021-0.156-0.038-0.234c-0.018-0.076-0.04-0.154-0.064-0.232c-0.026-0.078-0.058-0.162-0.092-0.248 c-0.035-0.088-0.075-0.168-0.117-0.246c-0.043-0.078-0.091-0.15-0.143-0.223c-0.051-0.068-0.107-0.139-0.168-0.205 c-0.061-0.072-0.127-0.141-0.195-0.211c-0.07-0.084-0.143-0.174-0.221-0.258c-0.078-0.088-0.16-0.176-0.247-0.262 c-0.088-0.086-0.173-0.176-0.261-0.262c-0.085-0.088-0.172-0.18-0.259-0.266l-2.391-2.352l14.906-0.031 c0.19,0,0.883-0.059,1.041-0.121c0.154-0.061,0.742-0.436,0.882-0.559c0.139-0.121,0.528-0.676,0.598-0.832 c0.068-0.156,0.121-0.217,0.155-0.379C30.009,54.619,30.009,53.91,29.974,53.745z' style='fill:%23555;fill-opacity:1'/%3E%3Cg id='g2988' style='fill:%23555;fill-opacity:1'%3E%3Cpath d='M0.1,10.535c0-1.45,0.271-2.808,0.815-4.076c0.543-1.268,1.286-2.374,2.229-3.315c0.941-0.942,2.047-1.685,3.315-2.229 C7.727,0.372,9.085,0.1,10.535,0.1s2.808,0.271,4.076,0.815c1.269,0.543,2.374,1.286,3.315,2.229 c0.94,0.941,1.685,2.047,2.229,3.315c0.543,1.268,0.814,2.626,0.814,4.076c0,0.508-0.035,1.01-0.109,1.509 c-0.071,0.498-0.177,0.982-0.311,1.453c-0.138,0.47-0.306,0.924-0.504,1.358c-0.198,0.434-0.428,0.851-0.681,1.25l7.88,7.853 c0.221,0.219,0.381,0.471,0.491,0.762c0.108,0.291,0.163,0.586,0.163,0.883c0,0.298-0.055,0.595-0.163,0.884 c-0.11,0.291-0.271,0.543-0.491,0.76c-0.106,0.109-0.227,0.206-0.351,0.287c-0.127,0.08-0.26,0.149-0.395,0.204 c-0.137,0.054-0.275,0.095-0.422,0.124c-0.145,0.025-0.29,0.039-0.435,0.039s-0.291-0.014-0.436-0.039 c-0.146-0.029-0.291-0.07-0.434-0.124c-0.146-0.055-0.281-0.124-0.408-0.204c-0.127-0.081-0.244-0.178-0.354-0.287l-7.853-7.881 c-0.398,0.255-0.816,0.483-1.25,0.681c-0.435,0.2-0.888,0.367-1.359,0.505c-0.471,0.136-0.956,0.238-1.454,0.312 c-0.499,0.072-1,0.107-1.509,0.107c-1.448,0-2.807-0.271-4.076-0.814c-1.268-0.543-2.373-1.288-3.314-2.229 c-0.943-0.942-1.685-2.048-2.229-3.315c-0.543-1.268-0.815-2.626-0.815-4.076H0.1z M3.579,10.535c0,0.961,0.182,1.862,0.544,2.704 c0.362,0.844,0.86,1.581,1.494,2.215c0.634,0.635,1.372,1.131,2.215,1.493c0.841,0.363,1.742,0.545,2.703,0.545 s1.862-0.182,2.704-0.545c0.844-0.362,1.581-0.858,2.214-1.493c0.635-0.634,1.132-1.372,1.494-2.215 c0.363-0.841,0.545-1.743,0.545-2.704s-0.182-1.862-0.545-2.703c-0.362-0.843-0.859-1.582-1.494-2.215 c-0.633-0.634-1.371-1.132-2.214-1.494c-0.841-0.362-1.743-0.544-2.704-0.544S8.673,3.76,7.832,4.123 C6.989,4.485,6.25,4.983,5.617,5.617S4.485,6.989,4.123,7.832C3.76,8.673,3.579,9.574,3.579,10.535z' id='path2990' style='fill:%23555;fill-opacity:1'/%3E%3C/g%3E%3C/svg%3E\");background-size:18px;background-position:2px 6px;background-repeat:no-repeat;border:none}.baSearchInput{position:absolute;top:0;left:32px;height:28px;width:100%;border:none;font-size:12pt}.htmlSearchBounds{position:relative;top:0;left:40px;width:50%}.baSearchToggle{position:absolute;top:0;left:0;width:32px;height:32px;background-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 1000' enable-background='new 0 0 1000 1000' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M18.1,232.2l452.4,581.9c15.1,19.5,44.5,19.5,59.7,0L982,232.2c19.3-24.8,1.5-60.9-29.9-60.9H47.9C16.4,171.2-1.3,207.4,18.1,232.2z'/%3E%3C/g%3E%3C/svg%3E%0A\");background-size:12px;background-position:12px;background-repeat:no-repeat;border:none}.baSearchInput:focus{outline:none}.baSearchDropdownTarget{position:absolute;top:-10px;left:-10px;width:42px;height:42px;z-index:3}.baSearchDropdownText{position:absolute;top:8px;left:37px}.baSearchDropdownImgLoc{position:absolute;top:6px;left:4px;width:24px;height:26px;background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E%3Cpath fill='%236F6F6F' d='M7.4688 0C5.3586 0 3 .8459 3 3.0469V12l4.5 4 4.5-4V3.047C12 .8459 9.5797 0 7.4687 0zM11 11.5508L7.5 14.662 4 11.5508v-8.504C4 1.0577 7.1138 1 7.4688 1 8.7803 1 11 1.4312 11 3.0469v8.5039zM7.5 3C6.1193 3 5 4.1193 5 5.5S6.1193 8 7.5 8 10 6.8807 10 5.5 8.8807 3 7.5 3zm0 4.125c-.896 0-1.625-.729-1.625-1.625 0-.8961.729-1.625 1.625-1.625s1.625.7289 1.625 1.625c0 .896-.729 1.625-1.625 1.625z'/%3E%3C/svg%3E\");background-size:24px;background-repeat:no-repeat}.baSearchDropdownImgBdy{position:absolute;top:6px;left:4px;width:24px;height:24px;background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E%3Cpath fill='%236F6F6F' d='M2 16H1V1h1v15zM15 .5h-1v7h1v-7zm0 .5V0H1v1h14zm-5 6.4928V8h5V7h-4.5432M3.445 15.8799V15H1v1h2.2299m8.5968-8.9816h-.9945l-.112.1134c-.1064.1133-.375.4022-.4073.4598-.1172.21-.1445.5303-.1787 1.0361-.0117.168-.0628.9791-.1039 1.0621-.2607.3682-.1006.8613.0166 1.2237a1.806 1.806 0 0 1 .0264.078c-.0977.0157-.1816.047-.252.0929l-.0605-.0127c-.0068-.002-.7373-.1768-1.3828-.1768-.4082 0-.6934.0674-.876.21-.3232.2548-.501.3945-.5195.6513-.0166.2373.1289.3887.2558.5205l.0899.0957c.2217.2412.33.545.2617.7393-.0791.2275-.417.3135-.6113.3437a1.6306 1.6306 0 0 1-.2725.0235c-.3242 0-.5664-.1084-.8525-.2354-.3399-.1513-.9566-.3222-1.5338-.3398-.3095 0-.9385.25-1.0361.7265-.043.2042-.0918.5948.0596.8975.0039.0381.2027.2861-.7915 1.3555L2.4448 16h1.0748c.5275-.638.8057-1.2883.5453-1.815-.0214-.044-.04-.1885-.0127-.3555.0342-.042.2041-.124.255-.125.4072.0127.9077.1308 1.2241.2705.3193.1426.6807.3027 1.1748.3027.123 0 .2549-.0098.3975-.0312.8203-.13 1.128-.546 1.2422-.873.168-.4815.0029-1.0724-.4297-1.544l-.0176-.0186c.0322-.0254.0664-.0517.0996-.0781.001 0 .0664-.039.3408-.039.3545 0 .8496.0624 1.2334.1552.1338.0322.2373.0527.336.0527.162 0 .288-.0556.3379-.121l.1445.0038c.1816 0 .3262-.0683.4297-.203.2011-.2589.0976-.5772-.0127-.917-.0957-.291-.1358-.4678-.126-.5108.1611-.2246.2103-.8912.2513-1.484.0127-.1826.043-.6093.0752-.6826a.309.309 0 0 1 .0303-.039h2.8057v-.8008l-2.0175-.129z'/%3E%3C/svg%3E\");background-size:24px;background-repeat:no-repeat}.baSearchDropdownMenu{position:absolute;top:27px;left:6px;min-width:260px;margin:0;list-style:none;padding-left:0;z-index:4;display:none}.baSearchDropdownMenu.baSearchMenuIsVisible{display:block}.baSearchDropdownMenu li{padding:5px 10px}ul.baSearchDropdownMenu li{position:relative;height:30px;padding-top:9px;padding-bottom:0;z-index:4}.lightSuggestionOuter,.baSearchSuggestionsOuter{position:absolute;top:30px;left:0px;min-width:210px;height:auto;min-height:41px;overflow-y:none;max-height:0px;transition-property:all;transition-duration:.5s;transition-timing-function:cubic-bezier(0, 1, 0.5, 1);font-family:arial;font-size:10pt;z-index:4;overflow:none;display:none}.baSearchSuggestionsOuter{width:210px;max-width:210px;}.lightSuggestionOuter{width:100%;max-width:100%;}ul.baSearchSuggestionsUl{padding-inline-start:12px;margin-block-start:8px;margin-block-end:6px;width:calc(100% - 14px)}ul.baSearchSuggestionsUl li{position:relative;display:flex;flex-direction:row;align-items:center;padding-top:4px;padding-left:1px;padding-bottom:4px;font-size:9.5pt;list-style:none;z-index:4}.baSearchSuggestionNoSub{font-size:11.5pt;}.baSearchStdGeographyInfo{font-size:8.5pt;padding-top:4px;}.baSearchStdGeographyName{font-size:11.5pt}calcite-input::part(badarkinput)::placeholder{opacity:1;}calcite-input::part(badarkinput):-ms-input-placeholder{}calcite-input::part(badarkinput)::-ms-input-placeholder{}.baSearchOuter{position:relative;width:100%;height:32px;display:flex;justify-content:left;align-items:center;}.arcgisBaSearchDropdownChooser{position:relative;width:30px;height:32px;z-index:5}.arcgisBaSearchInput{flex-grow:1;height:32px;z-index:1;}.arcgisBaSearchInput>input{left:1px}.arcgisBaSearchNoDropdown{display:none}";

const ArcgisBaSearch = class {
  //
  // _localeSettings: LocaleSettings = {
  //   language: 'en-US',
  //   country: 'US',
  //   location: '-117.196,34.056',
  //   geocodeOutFields: 'Subregion,Region,PlaceName,Match_addr,Country,Addr_type,City,Place_addr,Phone,URL'
  // }
  constructor(hostRef) {
    (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.r)(this, hostRef);
    this.searchResults = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.c)(this, "searchResults", 6);
    this.searchCleared = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.c)(this, "searchCleared", 7);
    this.geocoderClient = GeocoderClient;
    this.baSearchKeyTimer = null;
    this.suggestionTimer = null;
    this._lastInputValue = '';
    this._openFirst = false;
    this._hasSetEnv = false;
    this._verboseLogging = true;
    this._searchTypeConv = ['all', 'address', 'boundary'];
    this._idPrefix = 'arcgis-ba-search-';
    this._idPrefixInput = 'ba-search-input-';
    this._idPrefixDropDown = 'ba-search-drop-';
    this._idPrefixDropLoc = 'ba-search-drop-loc-';
    this._idPrefixDropAll = 'ba-search-drop-all-';
    this._idPrefixDropBdy = 'ba-search-drop-bdy-';
    this._idPrefixDropGroup = 'ba-search-drop-group-';
    this._idPrefixSuggest = 'ba-search-suggest-';
    this._geographyActiveLevels = [];
    this._dbg = false;
    this._searchScopeDropDownSelected = false;
    this.stSearchScope = 'all';
    this.searchQuery = null;
    this.suggestionResults = { location: [], boundary: [] }; // contains location, STD GEO suggestion, or both query results
    this.baseConfig = new _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a('search', this, this.onUpdateUI);
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.announceVersion();
    this.stSearchScope = 'all';
    this._onChangeQueue = {};
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Log('SEARCH constructor');
    // // Use passed in langCode if set
    // if (this.langCode) {
    //   this._base._localeSettings.language = this.langCode;
    // }
    this.langCode = this.langCode || 'en-us';
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B._initialize(this.langCode);
    this.setLocaleStrings();
    this.sourceCountry = this.sourceCountry || 'US';
    this.stSearchScope = 'all';
    this.baseConfig.updateLocaleSettings({ language: this.langCode, country: this.sourceCountry });
    if (this.config) {
      const cfg = JSON.parse(this.config);
      this.baseConfig.updateConfig(cfg, null);
      if (cfg?.selectedGeographyLevels && cfg?.selectedGeographyLevels.length > 0) {
        this.setActiveLevels(cfg.selectedGeographyLevels, true);
      }
    }
    this._onChangeQueue = {};
  }
  //
  // Update Props/States and base config when the component config changes
  onConfigChange(newConfig) {
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Log('SEARCH configChange');
    if (this.baseConfig) {
      if (newConfig && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(newConfig)) {
        const newCfg = JSON.parse(newConfig);
        _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Log('SEARCH config changed=', newCfg);
        //
        // COLORS:
        // define a temp color object so that we update the 'colors' Prop one time
        this.baseConfig.updateConfig(newCfg, null);
        if (this.baseConfig?.config?.selectedGeographyLevels && this.baseConfig?.config?.selectedGeographyLevels.length > 0) {
          this.setActiveLevels(this.baseConfig.config.selectedGeographyLevels);
        }
        this.syncSearchScopeFromConfig(true);
      }
    }
  }
  onLocaleSettingsChanged() {
    this.getFilteredGeographyLevels();
  }
  parseGeographyFlag(flag) {
    return (typeof flag != undefined && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(flag) && flag.trim().toLowerCase() == 'true');
  }
  onNoGeographyChanged() {
    this.stNoGeography = this.parseGeographyFlag(this.nogeography);
    if (this.stNoGeography === false) {
      this.stSearchScope = 'all'; // default restored
    }
  }
  onMaxSuggestionHeightChanged() {
    this.stMaxSuggestionHeight = (typeof this.maxsuggestionheight != undefined && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.maxsuggestionheight)) ? parseInt(this.maxsuggestionheight) : 300;
  }
  // @@@@@@
  // @Watch('theme') onThemeChanged() {
  //   if (typeof this.theme != undefined && ACLUtils.hasText(this.theme)) {
  //     const t = this.theme.trim().toLowerCase()
  //     this.stColorTheme = (t == 'dark') ? 'dark' : 'light'
  //     this.nogeography = this.stNoGeography.toString()
  //   } else { this.stColorTheme = 'light' }
  // }
  onEnvChanged() {
    this.stEnv = this.env;
    _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.E.setEnvironment(this.env);
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ env: this.env }, null);
    }
  }
  onTokenChanged() {
    this.stToken = this.token;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ token: this.token }, null);
    }
  }
  onUsernameChanged() {
    this.stUsername = this.username;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ username: this.username }, null);
    }
  }
  onLangCodeChanged() {
    this.stLangCode = this.langCode;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ langCode: this.langCode }, null);
    }
  }
  onGeoenrichmentUrlChanged() {
    this.stGeoenrichmentUrl = this.geoenrichmentUrl;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ geoenrichmentUrl: this.geoenrichmentUrl }, null);
    }
  }
  onThemeChanged() {
    this.stTheme = this.theme;
    if (this.baseConfig) {
      this.baseConfig.setTheme(this.theme);
    }
  }
  onCountryChanged() {
    this.stSourceCountry = this.sourceCountry;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ sourceCountry: this.sourceCountry }, null);
    }
  }
  onSearchTextChanged() {
    this.hideDropdown();
    this.hideSuggestions(null);
    const inp = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    if (inp && this.currentSearchText) { // @ts-ignore
      inp.value = this.currentSearchText;
    }
  }
  onModeChanged() {
    this.stMode = this.mode;
  }
  onSugliteChanged() {
    this.stSuglite = false;
    if (typeof this.suglite !== undefined && (this.suglite === 'true')) {
      this.stSuglite = true;
    }
  }
  onActiveLevelsChanged() {
    // should be an array of strings
    this.stActiveLevels = JSON.parse(this.activeLevels);
  }
  onStandardGeographyItemSelected(event) {
    this._onSelectedGeographyItem(event.detail.item);
    this.hideSuggestions(null);
    this._clearSearchText();
    this.focusInput();
  }
  onStandardGeographyItemChecked(event) {
    if (event.detail.itemsType == 'other') {
      this.hideSuggestions(null);
      this._clearSearchText();
      this.focusInput();
    }
  }
  async searchIsEmpty() {
    const searchInput = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    if (!searchInput) {
      return false;
    }
    const inputElem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'input', searchInput);
    if (!inputElem) {
      return false;
    }
    const str = inputElem.value;
    return !(str && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(str));
  }
  /**
   * getSearchResults
   *    Returns the latest selected suggestion info and related geometry
   */
  async getSearchResults() {
    return this._searchResponseItemData;
  }
  async getConfig() {
    const myCfg = this.baseConfig;
    return myCfg;
  }
  async setLocale(options) {
    if (!options)
      return;
    if (typeof options.language != undefined)
      this.baseConfig.updateLocaleSettings({ language: options.language });
    if (typeof options.country != undefined)
      this.baseConfig.updateLocaleSettings({ country: options.country });
    if (typeof options.location != undefined)
      this.baseConfig.updateLocaleSettings({ location: options.location });
    if (typeof options.geocodeOutFields != undefined)
      this.baseConfig.updateLocaleSettings({ geocodeOutFields: options.geocodeOutFields });
    this.onLocaleSettingsChanged();
  }
  /**
   * getGeographyLevels
   *    Returns the geography level names for the country
   */
  async getGeographyLevels() {
    let list = [];
    let arr = await this.getFilteredGeographyLevels();
    if (arr && arr.length > 0) {
      arr.forEach((item) => {
        list.push(item.name);
      });
    }
    return list;
  }
  /**
   * setActiveLevels
   *    Sets the geography levels that will be requested/displayed
   *    This accepts geography level 'names' but then tracks the
   *    level using the level 'id' internally
   *
   *    Passing 'names' with empty array will enable all levels
   *    Example: ['US.States','US.ZIP5', 'US.Places']
   *    The example array will only show those 3 levels
   */
  async setActiveLevels(names, skipUI = false) {
    if (!skipUI)
      this.resetUI(true, false);
    if (names) {
      if (names.length > 0) {
        this.stActiveLevels = [...names];
        this._geographyActiveLevels = [];
        for (let ii = 0; ii < names.length; ii++) {
          let id = await this.levelNameIsValid(names[ii]);
          if (id) {
            this._geographyActiveLevels.push(id);
          }
        }
        // display updated results using new levels
        if (!skipUI)
          this.populateSuggestions();
      }
      else {
        this._geographyActiveLevels = [];
      }
    }
  }
  async setMapView(mapView) {
  }
  async setColors(colors) {
    this.colors = colors;
    this.baseConfig.syncConfigFromProps();
  }
  async setTheme(theme) {
    this.baseConfig.setTheme(theme);
  }
  /**
   * Sets host callback for property change notifications
   * @param callback  - function supplied by host after component is instantiated
   * @param context   - object reference that is returned in the callback (to the host)
   *
   * Callback data format:
   *    {
   *      <property name>: <value>,
   *      <other prop name: value,
   *      ...
   *    }
   */
  async onPropChange(callback, context) {
    this._onChangeCallback = { fn: callback, ctx: context };
  }
  // BaseUtil config-changed render callback
  onUpdateUI() {
    this.applyStyles();
  }
  applyStyles() {
    if (this.baseConfig?.config?.colors && Object.keys(this.baseConfig.config.colors).length > 0) {
      const c = this.baseConfig.config.colors;
      const searchOuter = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(this, 'div.baSearchOuter');
      if (searchOuter && 'style' in searchOuter) {
        searchOuter.style.setProperty("--calcite-ui-border-input", 'unset');
        searchOuter.style.setProperty("--calcite-ui-foreground-1", c.foreground);
        searchOuter.style.setProperty("--calcite-ui-brand", c.brand);
      }
      if (searchOuter) {
        const dropdown = searchOuter.querySelectorAll("calcite-dropdown");
        if (dropdown && 'style' in dropdown) {
          dropdown.style.setProperty("height", '32px');
        }
        searchOuter.querySelectorAll("calcite-button").forEach(node => {
          if (node.shadowRoot) {
            let button = node.shadowRoot.querySelector("button");
            if (button && 'style' in button) {
              button.style.setProperty("height", '32px');
              // (button as HTMLElement).style.setProperty("--calcite-ui-foreground-3", c.brand);
              // (button as HTMLElement).style.setProperty("--calcite-ui-foreground-2", c.brandHover);
              // (button as HTMLElement).style.setProperty("--calcite-ui-foreground-1", c.brandPress);
            }
          }
        });
        // searchOuter.querySelectorAll("calcite-input").forEach(node => {
        //   if (node.shadowRoot) {
        //       let input = node.shadowRoot.querySelector("input");
        //       // console.log(input)
        //       if (input && 'style' in input) {
        //         (input as HTMLElement).style.setProperty("--calcite-ui-border-input", 'unset');
        //         (input as HTMLElement).style.setProperty("--calcite-ui-foreground-1", c.foreground);
        //         (input as HTMLElement).style.setProperty("--calcite-ui-brand", c.brand);
        //       }
        //   }
        // })
        // searchOuter.querySelectorAll("calcite-input").forEach(node => {
        //   if (node.shadowRoot) {
        //       let input = node.shadowRoot.querySelector("input");
        //       // console.log(input)
        //       if (input && 'style' in input) {
        //         (input as HTMLElement).style.setProperty("--calcite-ui-border-input", 'unset');
        //         (input as HTMLElement).style.setProperty("--calcite-ui-foreground-1", c.foreground);
        //         (input as HTMLElement).style.setProperty("--calcite-ui-brand", c.brand);
        //       }
        //   }
        // })
        // calcite-list
      }
    }
  }
  syncSearchScopeFromConfig(allowReset) {
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Log('SEARCH syncSearchScope', this.baseConfig.config);
    // Check for search type and apply
    let changed = false;
    const searchType = this.baseConfig.config.baSearchType;
    if (searchType) {
      if (searchType == 1) {
        changed = this.stSearchScope != 'address';
        this.stSearchScope = 'address';
      }
      else if (searchType == 2) {
        changed = this.stSearchScope != 'boundary';
        this.stSearchScope = 'boundary';
      }
      else {
        changed = this.stSearchScope != 'all';
        this.stSearchScope = 'all';
      }
      _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Log('SEARCH searchScope is now:', this.stSearchScope);
    }
    if (changed && allowReset) {
      this.hideSuggestions(null);
      this._clearSearchText();
      this.focusInput();
    }
  }
  _debug(...items) {
    if (!this._verboseLogging) {
      return;
    }
    if (items)
      return; // remove this
  }
  /**
   * Filters out multiple rapid events of the same type.  The callback
   * function will be called if no new events have happened during the
   * 'wait' time.
   * @param callback - your function to call when the events have settled
   * @param wait     - milliseconds delay (ex: 250)
   */
  _debounce2(callback, wait) {
    const self = this;
    const delayedCall = function () {
      self._debounceTimer = null;
      callback.apply(self);
    };
    // everytime _debounce2 is called we kill the previous timer
    if (self._debounceTimer)
      clearTimeout(self._debounceTimer);
    self._debounceTimer = setTimeout(delayedCall, wait);
  }
  _onFilteredPropChanged() {
    if (this._onChangeCallback)
      this._onChangeCallback.fn(this._onChangeCallback.ctx, this._onChangeQueue);
    // clear queue
    this._onChangeQueue = {};
  }
  // ***********************************************************************
  // Set locale string
  // **********************************************************************
  setLocaleStrings() {
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B._initialize(this.langCode);
    this.labels = {
      dropdownLocation: _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('address-location-or-place'),
      dropdownBoundary: _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('boundary-name'),
      dropdownAll: _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('dropdown-all'),
      watermarkAll: _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('all-placeholder'),
      watermarkLocation: _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('enter-address-loc-or-place'),
      watermarkBoundary: _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('enter-boundary-name')
    };
    this.showSearch = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('show-search');
    this.searchPlaceholder = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-placeholder');
    this.searchLabel = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-label');
    this.searchAll = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('dropdown-all');
    this.searchAllPlaceholder = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('all-placeholder');
    this.searchPlaceholderShort = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-placeholder-short');
    this.searchEnterBoundary = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-enter-boundary');
    this.searchBoundary = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-boundary');
  }
  /**
   * Function called by this component internally when a Prop changes
   * @param name  - of Prop
   * @param value - value after change
   */
  _onPropChanged(name, value) {
    const self = this;
    // Add name/value to queue
    // Subsequent calls with the same name/value just updates
    // the value until the callback clears the queue
    this._onChangeQueue[name] = value;
    this._debounce2(() => { self._onFilteredPropChanged.call(self); }, 250);
  }
  _clearSearchText() {
    const inp = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    inp.value = '';
    //this._onPropChanged('searchCleared', '')
  }
  async onClickLocationSuggestionItem(item) {
    const self = this;
    await this.geocoderClient.geocode(item.text, {
      magicKey: item.magicKey,
      outFields: this.baseConfig._localeSettings.geocodeOutFields
    }).then((results) => {
      if (results) {
        self._searchResponseItemData = {
          context: self,
          type: 'location',
          mode: self.stMode,
          name: results.candidates[0].attributes.PlaceName,
          address: results.candidates[0].attributes.Place_addr,
          location: { lon: results.candidates[0].location.x, lat: results.candidates[0].location.y }
        };
        self.searchResults.emit(self._searchResponseItemData);
        this._onPropChanged('searchResults', self._searchResponseItemData);
        self.resetUI(false);
      }
    })
      .catch((ex) => {
      _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('arcgis-ba-search Error:', ex);
    });
    this.hideSuggestions(null);
    this._clearSearchText();
    this.focusInput();
  }
  _findGeographyLevel(id) {
    let level;
    if (this._geographyLevels) {
      for (let ii = 0; ii < this._geographyLevels.length; ii++) {
        const l = this._geographyLevels[ii];
        if (l.id === id) {
          level = l;
          break;
        }
      }
    }
    return level;
  }
  _onSelectedGeographyItem(item) {
    const self = this;
    const id = item.id;
    const fullname = item.name;
    if (!this.suggestionResults?.boundary)
      return;
    // Find the search result item using ObjectId
    for (let ii = 0; ii < this.suggestionResults.boundary.length; ii++) {
      let rec = this.suggestionResults.boundary[ii];
      if (rec.attributes && rec.attributes.ObjectId == id) {
        let a = rec.attributes;
        let currentlevel = self._findGeographyLevel(a.DataLayerID);
        const defGen = (currentlevel) ? currentlevel.defaultGeneralization : 0;
        // Get boundary geometry from server
        _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.G.requestStdGeography(a.DataLayerID, a.AreaID, {
          generalizationLevel: defGen,
          returnGeometry: true,
          sourceCountry: self.stSourceCountry || 'US',
          langCode: self.langCode,
          token: self.token
        }).then((result) => {
          if (result && result.length > 0) {
            let geoFeature = result[0];
            self._searchResponseItemData = {
              context: self,
              type: 'geography',
              areaName: rec.attributes.AreaName,
              areaId: rec.attributes.AreaID,
              geometry: geoFeature.geometry.rings,
              mode: self.stMode,
              attributes: a,
              title: fullname
            };
            self.searchResults.emit(self._searchResponseItemData);
            this._onPropChanged('searchResults', self._searchResponseItemData);
            self.resetUI(false);
          }
        }, (err) => {
          _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('arcgis-ba-search Error ', err);
          if (err)
            throw err;
        });
        break;
      }
    }
  }
  // accepts a level name
  // return:  level id if valid (or undefined)
  async levelNameIsValid(name) {
    if (!name || !_ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(name))
      return undefined;
    let arr = await this.getFilteredGeographyLevels();
    for (let ii = 0; ii < arr.length; ii++) {
      if (arr[ii].name == name)
        return arr[ii].id;
    }
    return undefined;
  }
  focusInput() {
    const calInputElem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(this, 'input', calInputElem).focus();
  }
  _loadInstances() {
    if (!this._instanceId)
      this._instanceId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefix).id;
    if (!this._inputId)
      this._inputId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixInput).id;
    if (!this._dropLocId)
      this._dropLocId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropLoc).id;
    if (!this._dropAllid)
      this._dropAllid = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropAll).id;
    if (!this._dropBdyId)
      this._dropBdyId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropBdy).id;
    if (!this._dropGroupId)
      this._dropGroupId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropGroup).id;
    if (!this._suggestId)
      this._suggestId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixSuggest).id;
    if (!this._dropdownId)
      this._dropdownId = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropDown).id;
  }
  getCountry() {
    return this.stSourceCountry || this.baseConfig._localeSettings.country;
  }
  /*
   * Geography level are normally displayed using their 'names' in the UI.  Requests use
   * the level IDs.  Therefore stActiveLevels is an array of level names, and
   */
  async getFilteredGeographyLevels() {
    let self = this;
    let hasActiveList = (self.stActiveLevels && self.stActiveLevels.length > 0);
    // look for cached values - if we have active level names from the user, always fetch levels and match to those
    if (hasActiveList || !self._geographyLevels || self._geographyLevels.length <= 0 || self._geographyLevelsSource != self.getCountry()) {
      // Request new levels for this country
      let response = await _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.G.getStandardGeographyLevels(self.getCountry(), self.langCode);
      if (response) {
        if (response && response.levels && response.levels.length > 0) {
          // create our level objects list - filtered by user (if applies)
          self._geographyLevels = [];
          for (let ii = 0; ii < response.levels.length; ii++) {
            let lev = response.levels[ii];
            // if the user passed us a list of level names, filter by those
            let active = !hasActiveList || (self.stActiveLevels && self.stActiveLevels.length > 0 && self.stActiveLevels.includes(lev.name));
            if (active && lev && lev.id && lev.name && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(lev.id) && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(lev.name)) {
              self._geographyLevels.push({ id: lev.id, name: lev.name, show: true, defaultGeneralization: lev.defaultGeneralizationLevel });
            }
          }
          self._geographyLevelsSource = self.getCountry();
        }
      }
    }
    return self._geographyLevels;
  }
  // Stencil lifecycle - called once after component is first connected to the DOM
  async componentWillLoad() {
    this.stNoGeography = this.parseGeographyFlag(this.nogeography);
    this.stMaxSuggestionHeight = (typeof this.maxsuggestionheight != undefined && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.maxsuggestionheight)) ? parseInt(this.maxsuggestionheight) : 300;
    // if (typeof this.theme != undefined && ACLUtils.hasText(this.theme)) {
    //   const t = this.theme.trim().toLowerCase()
    //   this.stColorTheme = (t == 'dark') ? 'dark' : 'light'
    //   this.nogeography = this.stNoGeography.toString()
    // }
    // if (typeof this.theme != undefined && ACLUtils.hasText(this.theme)) {
    //   const t = this.theme.trim().toLowerCase()
    //   this.stColorTheme = (t == 'dark') ? 'dark' : 'light'
    //   this.nogeography = this.stNoGeography.toString()
    // } else { this.stColorTheme = 'light' }
    if (this.activeLevels && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.activeLevels)) {
      this.stActiveLevels = JSON.parse(this.activeLevels);
    }
    if (this.sourceCountry && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.sourceCountry)) {
      this.stSourceCountry = this.sourceCountry;
    }
    // Set Environment BEFORE Geocoder is instantiated to ensure correct geocode URL is used
    if (!this._hasSetEnv && this.env) {
      this._hasSetEnv = true;
      this.stEnv = this.env;
      _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.E.setEnvironment(this.env);
    }
    // Set if GeoenrichmentUrl was optionally passed in
    if (this.geoenrichmentUrl) {
      _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.E.setGeoenrichmentUrl(this.geoenrichmentUrl);
    }
    // Set if GeocodeUrl was optionally passed in
    if (this.geocodeUrl) {
      _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.E.setGeocodeUrl(this.geocodeUrl);
    }
    if (this.theme) {
      this.baseConfig.setTheme(this.theme);
    }
    else {
      this.baseConfig.setTheme('light');
    }
    this.nogeography = this.stNoGeography.toString();
    this.geocoderClient = new GeocoderClient(this.token);
    this._loadInstances();
    this.stMode = this.mode;
    this.stSuglite = false;
    if (typeof this.suglite !== undefined && (this.suglite === 'true')) {
      this.stSuglite = true;
    }
    await this.getFilteredGeographyLevels();
  }
  resetUI(keepValue, keepDropdown) {
    if (!keepDropdown)
      this.hideDropdown();
    this.hideSuggestions(null);
    if (!keepValue) {
      const inp = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
      inp.value = '';
    }
  }
  // Stencil lifecycle - called once after component is fully loaded and 1st render occurred
  componentDidLoad() {
    const self = this;
    self._loadInstances();
    self.applyCssAndThemeTo_Search();
    _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.T.setToken(self.username, self.token);
    if (!self.baseConfig._localeSettings.language || self.baseConfig._localeSettings.language.length <= 0 || (self.baseConfig._localeSettings.language !== this.langCode && this.langCode)) {
      self.baseConfig._localeSettings.language = this.langCode || 'en-us'; // reset to default
      _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.B._initialize(self.baseConfig._localeSettings.language);
      self.setLocaleStrings();
    }
    const searchInput = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._inputId);
    const inputElem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'input', searchInput);
    const ddItemAll = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._dropAllid);
    if (ddItemAll)
      ddItemAll.innerText = self.labels.dropdownAll;
    const ddItemLoc = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._dropLocId);
    if (ddItemLoc)
      ddItemLoc.innerText = self.labels.dropdownLocation;
    const ddItemBdy = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._dropBdyId);
    if (ddItemBdy)
      ddItemBdy.innerText = self.labels.dropdownBoundary;
    // Event handlers
    if (searchInput) {
      let label = 'all';
      switch (this.stSearchScope) {
        case ('all'): {
          label = self.labels.watermarkAll;
          break;
        }
        case ('address'): {
          label = self.labels.watermarkLocation;
          break;
        }
        case ('boundary'): {
          label = self.labels.watermarkBoundary;
          break;
        }
      }
      searchInput.setAttribute('placeholder', label);
    }
    function _keyDelay() {
      self.baSearchKeyTimer = null;
      const elem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._inputId);
      self._lastInputValue = elem.value;
      self.populateSuggestions();
      // open top accordion
      let acc = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'ba-accordion');
      if (acc) { // @ts-ignore
        acc.openAccordion();
      }
    }
    function _resetInputTimer() {
      const timeout = 1200;
      if (self.baSearchKeyTimer) {
        let t = self.baSearchKeyTimer;
        self.baSearchKeyTimer = null;
        clearTimeout(t);
      }
      self.baSearchKeyTimer = setTimeout(_keyDelay, timeout);
    }
    if (inputElem) {
      inputElem.addEventListener('focusin', () => { self.hideSuggestions(null); });
      inputElem.onchange = () => {
        const inp = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
        const v = inp.value;
        if (this._lastInputValue != v) {
          self.toggleSuggestions();
        }
        this._lastInputValue = v;
      };
      inputElem.onkeydown = (e) => {
        // DO NOT DELETE - Fix for Calcite Issue
        function _ui() {
          if (e.key === 'Backspace' || e.key === 'Delete') {
            e.preventDefault();
            e.stopPropagation();
            const target = e.target;
            if (target?.value && target.value.length > 0 && target.selectionStart != null && target.selectionEnd != null) {
              const start = target.selectionStart;
              const end = target.selectionEnd;
              const newVal = start === end
                ? target.value.slice(0, start - 1) + target.value.slice(start)
                : target.value.slice(0, start) + target.value.slice(end);
              target.value = newVal;
              target.focus();
              if (start === end)
                target.setSelectionRange(start - 1, start - 1);
              else
                target.setSelectionRange(start + 1, start);
            }
            _resetInputTimer();
          }
        }
        setTimeout(_ui, 0);
      };
      inputElem.onkeyup = () => {
        function _ui() {
          self.hideDropdown();
          _resetInputTimer();
        }
        setTimeout(_ui, 0);
      };
    }
    function onOpenDropdown() {
      self.resetUI(false, true);
      // self.showDropdown()
    }
    let elem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._dropdownId);
    if (elem)
      elem.addEventListener('calciteDropdownOpen', onOpenDropdown);
    if (self.baseConfig) {
      self.baseConfig.onComponentHasRendered();
    }
    setTimeout(() => {
      self.applyCssAndThemeTo_Suggestions();
    }, 0);
  }
  componentWillRender() {
    const self = this;
    try {
      const cfgType = self.baseConfig.config.baSearchType;
      if (cfgType) {
        const cfgScope = self._searchTypeConv[cfgType];
        if (cfgScope != self.stSearchScope && !self._searchScopeDropDownSelected) {
          const allowReset = true;
          self.syncSearchScopeFromConfig(allowReset);
        }
      }
    }
    catch (ex) {
      _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('error: search has invalid config baSearchType', ex);
    }
  }
  // Stencil lifecycle - called just after component updates, but not called during first render()
  componentDidUpdate() {
    const self = this;
    if (self.baseConfig) {
      self.baseConfig.onComponentHasRendered();
    }
    /*
    try {
      const cfgType = self.baseConfig.config.baSearchType
      if (cfgType) {
        const cfgScope = self._searchTypeConv[cfgType as number]
        if (cfgScope != self.stSearchScope) {
          const allowReset = true
          self.syncSearchScopeFromConfig(allowReset)
        }
      }
    } catch (ex) {
      console.log('error: search has invalid config baSearchType', ex)
    }*/
  }
  handleSearchScopeSelection(scope) {
    this.stSearchScope = scope;
    this._searchScopeDropDownSelected = true;
    this.suggestionResults = { location: [], boundary: [] };
    this.focusInput();
  }
  handleLocationSelection(e, data) {
    data.context.onClickLocationSuggestionItem(data.item);
    e.preventDefault();
    e.stopPropagation();
    return false;
  }
  renderLocationSuggestions() {
    const self = this;
    const iconStyle = {
      'padding-right': '0',
      'padding-left': '5px'
    };
    if ((self.stSearchScope == 'address' || self.stSearchScope == 'all') && self.suggestionResults?.location && self.suggestionResults.location.length > 0) {
      return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-list", null, this.suggestionResults.location.map(item => (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-list-item", { value: item.magicKey, label: item.text, onclick: (e) => self.handleLocationSelection(e, { context: self, item: item }) }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-icon", { style: iconStyle, icon: "pin", scale: "s", slot: "content-start" })))));
    }
    else {
      return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("ul", { class: 'baSearchSuggestionsUl' }));
    }
  }
  renderBoundarySuggestions() {
    const self = this;
    /*  ba-accordion format
     export interface AccordionItem {
     id: string;
     inlineSvgIcon?: string;
     name: string;
     subText?: string;
     usesPin?: boolean;
     isPinned?: boolean;
     usesCheckbox?: boolean;
     isChecked?: boolean;
     }
     */
    if ((self.stSearchScope == 'boundary' || self.stSearchScope == 'all')
      && self.suggestionResults?.boundary
      && self.suggestionResults.boundary.length > 0
      && self.suggestionResults.boundary[0].attributes
      && self.suggestionResults.boundary[0].attributes.DataLayerID) {
      let levels = {};
      // Build the data for the accordion lists
      // Start by capturing all the levels/accordions
      /*
       * levels => index of DataLayer types by name
       *  Each level is an array of records that form the
       *  content of the particular accordion
       */
      let record, levelName;
      // Categorize the results by DataLayerID
      /*
       * level = {
       *    aveScore:<average score for all records in level>,
       *    records: <search result records for the level>
       *  }
       */
      for (let ii = 0; ii < self.suggestionResults.boundary.length; ii++) {
        try {
          record = self.suggestionResults.boundary[ii];
          levelName = record.attributes.DataLayerID;
          if (_ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(levelName)) {
            // create lvl if needed
            if (!levels[levelName]) {
              levels[levelName] = { aveScore: null, records: [] };
            }
            let score = '   Score:' + record.attributes.Score.toString();
            let sub = record.attributes.CountryAbbr + '/' + record.attributes.MajorSubdivisionName + '/' + record.attributes.AreaID + score;
            // add search result record to the level using the ba-accordion's AccordionItem interface
            // once all the records are added to each DataLayerID level, we pass the data to the ba-accordion component
            // that will render the list.
            let rec = {
              id: record.attributes.ObjectId,
              areaId: record.attributes.AreaID,
              name: record.attributes.AreaName,
              major: record.attributes.MajorSubdivisionAbbr,
              subText: sub,
              score: record.attributes.Score,
              isZipcode: record.attributes.DataLayerID.toLowerCase().includes('zip')
            };
            levels[levelName].records.push(rec);
          }
        }
        catch (ex) {
          _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('arcgis-ba-search error', ex);
        }
      }
      // All the accordions for these results are assigned to a unique group id
      // for toggling open/close behavior
      let groupId = new Date().getTime();
      return self.renderStdGeographyLevelLists(levels, groupId);
    }
  }
  _getAccordionTitle(displayName) {
    let title = displayName;
    if (this._geographyLevelData) {
      for (let ii = 0; ii < this._geographyLevelData.length; ii++) {
        const item = this._geographyLevelData[ii];
        const levelId = item.id;
        if (displayName == levelId && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(item.name)) {
          title = item.name;
          break;
        }
      }
    }
    return title;
  }
  renderStdGeographyLevelAccordion(displayName, level, groupId) {
    const self = this;
    if (level.records && level.records.length > 0) {
      // sort this level records by score (descending)
      let sortedRecords = level.records.sort(function (a, b) {
        if (a.score == null)
          return 0;
        if (b.score == null)
          return 1;
        return b.score - a.score;
      });
      // limit level records to a fixed maximum count
      const accordionRecordLimit = 100;
      const limitedRecords = sortedRecords.slice(0, accordionRecordLimit);
      // Build the accordion content
      //
      // export interface AccordionItem {
      //   id: string;
      //   inlineSvgIcon?: string;
      //   name: string;
      //   subText?: string;
      //   usesPin?: boolean;
      //   isPinned?: boolean;
      //   usesCheckbox?: boolean;
      //   isChecked?: boolean;
      // }
      let arr = [];
      limitedRecords.forEach(function (item) {
        const suffix = ', ' + item.major;
        const hasMajor = (item.name.includes(suffix));
        const strMajor = (hasMajor) ? '' : suffix;
        const specialNaming = (item.isZipcode && (self.sourceCountry == 'US' || self.sourceCountry === 'PR'));
        const isNonUS = !(self.sourceCountry == 'US' || self.sourceCountry === 'PR');
        // For US/PR zip codes AND rest of world we do "ID (name)", else for US/PR (non zipcode) we do "name, major"
        const name = (specialNaming || isNonUS) ? item.areaId + ' (' + item.name + ')' : item.name + strMajor;
        arr.push({
          id: item.id,
          name: name,
          subText: (item.subText) || '',
          score: item.score,
          icon: 'polygon-area'
        });
      });
      const content = JSON.stringify(arr);
      const suggestLite = (typeof this.stSuglite !== undefined && this.stSuglite !== false) ? 'true' : 'false';
      const title = this._getAccordionTitle(displayName);
      // create an accordion for this level with all records
      return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("ba-accordion", { suglite: suggestLite, groupid: groupId, calciteicon: 'polygon-area', displayname: title, content: content }));
    }
  }
  calculateLevelAverageScores(levels) {
    // This will assign an 'aveScore' value for every Hierarchy Level.
    // Levels that are empty will be assigned a 'null' score.
    let keys = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.getKeys(levels);
    for (let ii = 0; ii < keys.length; ii++) {
      let lvl = levels[keys[ii]];
      if (!lvl.records || lvl.records.length <= 0) {
        lvl.aveScore = null;
      }
      else {
        let total = 0;
        let count = 0;
        lvl.records.forEach(function (record) {
          total += record.score;
          count++;
        });
        lvl.aveScore = total / count;
      }
    }
  }
  renderStdGeographyLevelLists(levels, groupId) {
    let accordions = [];
    let keys = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.getKeys(levels);
    if (keys.length > 0) {
      this.calculateLevelAverageScores(levels);
      // sort levels by content overall record score averages.
      // Account for the possibility of null aveScore
      let sKeys = keys.sort(function (a, b) {
        if (levels[a].aveScore == null)
          return 0;
        if (levels[b].aveScore == null)
          return 1;
        return levels[b].aveScore - levels[a].aveScore;
      });
      // Generate Accordions for each boundary type
      for (let ii = 0; ii < sKeys.length; ii++) {
        let lvl = levels[sKeys[ii]];
        if (lvl.aveScore != null) {
          accordions.push(this.renderStdGeographyLevelAccordion(sKeys[ii], lvl, groupId));
        }
      }
      if (accordions && accordions.length > 0) {
        return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", { class: 'ba-search-boundary-types' }, accordions));
      }
      else {
        return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", null));
      }
    }
  }
  //  Hide all dropdown menus
  hideDropdown() {
    let elem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._dropdownId);
    if (elem) {
      elem.setAttribute('open', 'false');
    }
  }
  //  Hide all dropdown menus
  showDropdown() {
    let elem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._dropdownId);
    if (elem) {
      elem.setAttribute('open', 'true');
    }
  }
  // ***********************************************************************
  // Initiate dropdown
  // **********************************************************************
  toggleDropdown() {
    let elem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._dropdownId);
    if (!elem) {
      this._debug('arcgis-ba-search: missing dropdown...', this._dropdownId);
    }
    else {
      const isVisible = elem.getAttribute('open') == 'true';
      if (isVisible) {
        this.hideDropdown();
      }
      else {
        this.hideSuggestions(null);
        elem.setAttribute('open', 'true');
      }
    }
    const inp = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    inp.value = '';
  }
  toggleSuggestions() {
    const elem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._suggestId);
    if (elem) {
      if (elem.style.maxHeight == '0')
        this.showSuggestions(elem);
      else
        this.hideSuggestions(elem);
    }
  }
  applyCssAndThemeTo_Suggestions() {
    let self = this;
    // ACLUtils.applyCss.call(self, [['background-color', '#282828'], ['color', '#f4f3f3']], { selector: 'div.baSearchSuggestionsOuter' })
    let items = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementAll.call(self, 'calcite-dropdown-item');
    if (items && items.length > 0) {
      items.forEach(function (i) {
        let elem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'div.container', i);
        elem.style.paddingLeft = '4px';
      });
    }
  }
  applyCssAndThemeTo_Search() {
    const self = this;
    // sync the config for the 1st time this component renders.  After that
    // it uses the @watch function
    if (this.config && _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.config) && !this.baseConfig.config) {
      // initialize our config object
      this.onConfigChange(this.config);
    }
    // CSS adjustments to shadow dom element styles
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.applyCss.call(self, [['paddingLeft', '4px']], {
      id: _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.fixId(self._dropLocId),
      subSelector: 'div.container'
    });
    // ACLUtils.applyCss.call(self, [['paddingLeft', '4px']], {
    //   id: ACLUtils.fixId(self._dropBdyId),
    //   subSelector: 'div.container'
    // })
    // const bgColor: string = this.colors?.background as string | 'transparent';
    // ACLUtils.applyCss.call(self, [['margin-top', '1px']], {
    //   selector: 'calcite-input',
    //   subSelector: 'button'
    // })
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.applyCss.call(self, [['fontSize', '9pt']], {
      selector: 'calcite-dropdown-item',
      subSelector: 'div.container'
    });
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.applyCss.call(self, [['minWidth', '212px']], { selector: 'calcite-dropdown-group' });
  }
  showSuggestions(elem) {
    let self = this;
    elem = elem || _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._suggestId);
    if (elem) {
      const suggestHeight = (typeof self.stMaxSuggestionHeight !== undefined) ? self.stMaxSuggestionHeight : 300;
      const suggestStr = suggestHeight + 'px';
      elem.style.maxHeight = suggestStr;
      elem.style.display = 'block';
      // change the background style of calcite 'clear' button
      let input = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.fixId(self._inputId));
      let btn = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'button.calcite-input__clear-button', input);
      if (btn) {
        btn.style.border = 'none';
        btn.style.backgroundColor = 'transparent';
      }
      // TODO: change suggestion width to full search width for all themes
      // (the following is experience builder customization)
      // if (self.stColorTheme == 'light') {
      //   function _after() {
      //     // full width suggestions
      //   }
      //   setTimeout(_after, 0)
      // }
    }
  }
  hideSuggestions(elem) {
    if (!elem)
      elem = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._suggestId);
    if (elem && elem.style.maxHeight != '0') {
      elem.style.maxHeight = '0';
      elem.style.display = 'none';
    }
  }
  async populateSuggestions() {
    const self = this;
    self.suggestionResults = { location: [], boundary: [] };
    const suggestions = { location: [], boundary: [] };
    if (!self.token || !self.username) {
      _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('arcgis-ba-search Error: no token set for suggestions search request');
      return;
    }
    self.showSuggestions(null);
    const inp = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._inputId);
    // capture search string for query of suggestions
    self.searchQuery = inp.value;
    if (self.searchQuery && self.searchQuery.length > 0) {
      // ---------------------------------------------
      if (self.stSearchScope === 'address' || self.stSearchScope === 'all') {
        // Address, location, or place
        try {
          // query using search string using specified location
          const results = await self.geocoderClient.suggest(self.searchQuery, {
            sourceCountry: self.sourceCountry,
            langCode: self.langCode
          });
          if (results && results.length > 0) {
            results.forEach((i) => {
              if (!i.isCollection)
                // @ts-ignore
                suggestions.location.push(i);
            });
          }
          else if (self.stSearchScope === 'address') {
            this._debug('arcgis-ba-search: no locations found ');
            self.hideSuggestions(null);
          }
        }
        catch (error) {
          self.suggestionResults = { location: [], boundary: [] };
          _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('arcgis-ba-search error ', error);
          if (self.stSearchScope === 'address') {
            self.hideSuggestions(null);
          }
        }
      }
      // ---------------------------------------------
      if (self.stSearchScope === 'boundary' || self.stSearchScope === 'all') {
        self._geographyLevelData = await self.getFilteredGeographyLevels();
        if (self._geographyLevelData && self._geographyLevelData.length > 0) {
          const token = await _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.T.getToken();
          if (!token || !_ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(token.toString())) {
            _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('arcgis-ba-search ERROR: Invalid or expired token.  Must update.');
            self.hideSuggestions(null);
          }
          else {
            const levelIdStrings = self._geographyLevelData.map(lev => lev.id.toString());
            let geoFeatures;
            try {
              // Request the list of Boundaries to suggest
              geoFeatures = await _GEClient_1a83a657_js__WEBPACK_IMPORTED_MODULE_1__.G.searchStdGeography(self.searchQuery, {
                featureLimit: 1000,
                geographyLayers: levelIdStrings,
                useFuzzySearch: true,
                langCode: self.langCode,
                sourceCountry: self.stSourceCountry,
                token
              });
            }
            catch (error) {
              self.suggestionResults = { location: [], boundary: [] };
              if (error.message.indexOf('token') != -1) {
                _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('search: invalid token', error);
              }
              else {
                _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('arcgis-ba-search error ', error);
              }
            }
            if (!geoFeatures?.length) {
              _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Warn('arcgis-ba-search Warning: No STD GEO search results');
              if (self.stSearchScope === 'boundary') {
                self.hideSuggestions(null);
              }
            }
            else {
              self._openFirst = true;
              suggestions.boundary = geoFeatures;
            }
          }
        }
        else {
          _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Error('arcgis-ba-search searchStdGeography error: no geography levels selected');
          self.hideSuggestions(null);
        }
      }
      self.suggestionResults = suggestions;
    }
    else {
      self.hideSuggestions(null);
    }
  }
  render() {
    const self = this;
    _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.a.Log('SEARCH render', this.baseConfig.config, this.stSearchScope);
    if (self._openFirst) {
      self._openFirst = false;
      function _open() {
        // open first accordion
        let first = _ElementIds_f7d257e8_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'ba-accordion');
        // @ts-ignore
        if (first)
          first.openAccordion();
      }
      setTimeout(_open, 100);
    }
    //const btnColor = this.colors ? this.colors.brand : ''
    // in case our scope doesn't match the nogeography attribute
    if (self.stNoGeography != undefined && self.stNoGeography === true) {
      self.stSearchScope = 'address';
    }
    // searchElem=document.getElementById('mySearch')
    // userInput=document.getElementById('inputUsername')
    // tokenInput=document.getElementById('inputToken')
    // geographyLevels=document.getElementById('mySearchLevels')
    //const suggestionClass = (this.stColorTheme === 'light') ? 'lightSuggestionOuter' : 'baSearchSuggestionsOuter'
    const suggestionClass = 'lightSuggestionOuter';
    const dropdownClass = (typeof (this.baseConfig.config?.baSearchType) !== 'undefined' && this.baseConfig.config?.baSearchType !== "0") ? 'arcgisBaSearchNoDropdown' : 'arcgisBaSearchDropdownChooser';
    // const dropdownClass2 = 'arcgisBaSearchDropdownChooser2'
    const inputClass = 'arcgisBaSearchInput'; //(this.stNoGeography) ? 'arcgisBaSearchInputNoGeog' : 'arcgisBaSearchInput'
    const dropdownButtonStyle = {
      'position': 'absolute',
      'width': '30px',
      'height': '32px',
      'overflow': 'hidden'
    };
    return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", null, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", { class: "baSearchOuter" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown", { class: dropdownClass }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-button", { slot: "trigger", style: dropdownButtonStyle, kind: "neutral", "icon-start": "chevron-down" }), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown-group", { "selection-mode": "single" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown-item", { "icon-start": 'analysis', tabIndex: '0', onClick: () => this.handleSearchScopeSelection('all') }, this.searchAll), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown-item", { "icon-start": 'pin', tabIndex: '0', onClick: () => this.handleSearchScopeSelection('address') }, this.searchPlaceholderShort), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown-item", { "icon-start": 'polygon', tabIndex: '0', onClick: () => this.handleSearchScopeSelection('boundary') }, this.searchBoundary, " "))), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-input", { id: this._inputId, class: inputClass, clearable: "true", placeholder: this.stSearchScope === 'address' ? this.searchPlaceholder : (this.stSearchScope === 'all') ? this.searchAllPlaceholder : this.searchEnterBoundary }), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", { id: this._suggestId, class: suggestionClass }, (this.stSearchScope === 'address' || this.stSearchScope === 'all') && this.renderLocationSuggestions(), (this.stSearchScope === 'boundary' || this.stSearchScope === 'all') && this.renderBoundarySuggestions()))));
  }
  get el() { return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.g)(this); }
  static get watchers() { return {
    "config": ["onConfigChange"],
    "nogeography": ["onNoGeographyChanged"],
    "maxsuggestionheight": ["onMaxSuggestionHeightChanged"],
    "env": ["onEnvChanged"],
    "token": ["onTokenChanged"],
    "username": ["onUsernameChanged"],
    "langCode": ["onLangCodeChanged"],
    "geoenrichmentUrl": ["onGeoenrichmentUrlChanged"],
    "theme": ["onThemeChanged"],
    "sourceCountry": ["onCountryChanged"],
    "currentSearchText": ["onSearchTextChanged"],
    "mode": ["onModeChanged"],
    "suglite": ["onSugliteChanged"],
    "activeLevels": ["onActiveLevelsChanged"]
  }; }
};
ArcgisBaSearch.style = arcgisBaSearchCss;



//# sourceMappingURL=arcgis-ba-search-2aa2705a.js.map

/***/ }),

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search.entry.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search.entry.js ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_ba_search: () => (/* reexport safe */ _arcgis_ba_search_2aa2705a_js__WEBPACK_IMPORTED_MODULE_0__.A)
/* harmony export */ });
/* harmony import */ var _arcgis_ba_search_2aa2705a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arcgis-ba-search-2aa2705a.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search-2aa2705a.js");







//# sourceMappingURL=arcgis-ba-search.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,