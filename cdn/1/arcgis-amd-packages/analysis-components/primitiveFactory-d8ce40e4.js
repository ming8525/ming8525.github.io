define(["exports","./index-ef555910","./index2-588b02d9","./utils-793221d4"],(function(exports,index,index2,utils){"use strict";const AnalysisToolParamDataType={GPBoolean:"GPBoolean",GPComposite:"GPComposite",GPDataFile:"GPDataFile",GPDate:"GPDate",GPDouble:"GPDouble",GPFeatureRecordSetLayer:"GPFeatureRecordSetLayer",GPField:"Field",GPLinearUnit:"GPLinearUnit",GPLong:"GPLong",GPMultiValueBoolean:"GPMultiValue:GPBoolean",GPMultiValueComposite:"GPMultiValue:GPComposite",GPMultiValueDataFile:"GPMultiValue:GPDataFile",GPMultiValueDate:"GPMultiValue:GPDate",GPMultiValueDouble:"GPMultiValue:GPDouble",GPMultiValueFeatureRecordSetLayer:"GPMultiValue:GPFeatureRecordSetLayer",GPMultiValueField:"GPMultiValue:Field",GPMultiValueLinearUnit:"GPMultiValue:GPLinearUnit",GPMultiValueLong:"GPMultiValue:GPLong",GPMultiValueRasterDataLayer:"GPMultiValue:GPRasterDataLayer",GPMultiValueRecordSet:"GPMultiValue:GPRecordSet",GPMultiValueString:"GPMultiValue:GPString",GPMultiValueValueTable:"GPMultiValue:GPValueTable",GPRasterDataLayer:"GPRasterDataLayer",GPRecordSet:"GPRecordSet",GPString:"GPString",GPValueTable:"GPValueTable"};const StringInput=({key,onSetRef,onValueChange,onHelpClick,dataType,label,value,required,choiceList,choiceListLabels,choiceListIcons,placeholderText,...extraProps})=>index.h("analysis-string-input",{key,ref:onSetRef,label,value,required,choiceList,selectionMode:dataType===AnalysisToolParamDataType.GPMultiValueString?"multi":"single",choiceListIcons,choiceListLabels,onAnalysisStringInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,placeholderText,...extraProps});const BooleanInput=({name,onSetRef,onValueChange,onHelpClick,label,value,...extraProps})=>{const{dataType,...rest}=extraProps;return index.h("analysis-boolean-input",{key:name,ref:onSetRef,label,value,onAnalysisBooleanInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,...rest})};const NumberInput=({name,onSetRef,onValueChange,onHelpClick,dataType,label,value,required,choiceList,placeholderText,...extraProps})=>{const numberChoiceList=choiceList?.map(parseFloat).filter(isFinite);const numberType=dataType===AnalysisToolParamDataType.GPLong?"integer":"float";const selectionMode=dataType===AnalysisToolParamDataType.GPMultiValueDouble?"multi":"single";return index.h("analysis-number-input",{key:name,ref:onSetRef,"number-type":numberType,label,value,selectionMode,choiceList:numberChoiceList,required,onAnalysisNumberInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,placeholderText,...extraProps})};const DateInput=({name,onSetRef,onValueChange,onHelpClick,label,value,...extraProps})=>index.h("analysis-date-input",{key:name,ref:onSetRef,label,value,onAnalysisHelpClick:onHelpClick,onAnalysisDateInputChange:onValueChange,...extraProps});const LinearUnitInput=({name,onSetRef,onValueChange,onHelpClick,label,value,required,choiceList,placeholderText,...extraProps})=>{const{dataType,...rest}=extraProps;return index.h("analysis-linear-unit-input",{key:name,ref:onSetRef,label,value,required,unitChoiceList:choiceList,onAnalysisLinearUnitInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,placeholderText,...rest})};const LayerInput=({name,onSetRef,onValueChange,onHelpClick,dataType,label,value,required,user,portalHelpMap,mapLayers,selectedLayers,...extraProps})=>{const isMulti=dataType===AnalysisToolParamDataType.GPMultiValueFeatureRecordSetLayer||dataType===AnalysisToolParamDataType.GPMultiValueRecordSet;const allowTables=dataType===AnalysisToolParamDataType.GPRecordSet||dataType===AnalysisToolParamDataType.GPMultiValueRecordSet;const featureOnly=dataType===AnalysisToolParamDataType.GPFeatureRecordSetLayer||dataType===AnalysisToolParamDataType.GPMultiValueFeatureRecordSetLayer;if(allowTables){const{layerFilterType}=extraProps;let modifiedFilterType;if(Array.isArray(layerFilterType)){modifiedFilterType=layerFilterType.concat([utils.LayerFilterType.Feature_Table])}else{modifiedFilterType=layerFilterType!==undefined?[layerFilterType,utils.LayerFilterType.Feature_Table]:[utils.LayerFilterType.Feature_Table,utils.LayerFilterType.Feature_All]}extraProps.layerFilterType=modifiedFilterType}else{if(index2.isEmptyDataItem(extraProps.layerFilterType)&&featureOnly){extraProps.layerFilterType=utils.LayerFilterType.Feature_All}}return index.h("analysis-layer-input",{key:name,ref:onSetRef,label,value,required,user,portalHelpMap,mapLayers,selectionMode:isMulti?"multi":"single",selectedLayers,onAnalysisLayerInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,...extraProps})};const FieldInput=({name,onSetRef,onValueChange,onHelpClick,dataType,label,value,required,layer,analysisDataset,placeholderText,...extraProps})=>index.h("analysis-field-input",{key:name,ref:onSetRef,label,value,required,selectionMode:dataType===AnalysisToolParamDataType.GPMultiValueField?"multi":"single",mapLayer:layer,analysisDataset,onAnalysisFieldInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,placeholderText,...extraProps});const TrafficTimeInput=({name,toolData,onSetRef,onValueChange,onHelpClick,label,...extraProps})=>{const{value,resetTimeZoneValue,...rest}=extraProps;const timeOfDay=value===null?undefined:value;const timeZoneForTimeOfDay=toolData?.timeZoneForTimeOfDay===null||resetTimeZoneValue===true?undefined:toolData?.timeZoneForTimeOfDay;if(resetTimeZoneValue===true&&toolData!==undefined){toolData.timeZoneForTimeOfDay=undefined}return index.h("analysis-traffic-time-input",{value:{timeOfDay,timeZoneForTimeOfDay},resetTimeZoneValue,key:name,ref:onSetRef,label,onAnalysisTrafficTimeInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,...rest})};const DatasetInput=({name,onSetRef,onValueChange,onHelpClick,label,value,required,analysisDatasets,...extraProps})=>index.h("analysis-dataset-input",{key:name,ref:onSetRef,label,value,required,analysisDatasets,onAnalysisDatasetInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,...extraProps});const SummaryFieldsInput=({name,onSetRef,onValueChange,onHelpClick,label,layer,required,...extraProps})=>{const{value,...rest}=extraProps;return index.h("analysis-summary-fields",{key:name,ref:onSetRef,label,required,layer,value,onAnalysisSummaryFieldsChange:onValueChange,onAnalysisHelpClick:onHelpClick,...rest})};const ItemInput=({name,onSetRef,onValueChange,onHelpClick,label,value,portal,user,required,...extraProps})=>{if(portal==undefined||user===undefined){throw new Error("Portal and user required for item input")}return index.h("analysis-item-input",{key:name,ref:onSetRef,label,value,onAnalysisItemInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,portal,user,required,...extraProps})};const QueryInput=({name,onSetRef,onValueChange,mapLayers,value,toolData,onHelpClick,label,required,...extraProps})=>{let adaptedValue=value;const{expressions,inputLayers}=toolData??{};if(extraProps.mode!=="sql"&&expressions!==undefined&&inputLayers!==undefined){adaptedValue={expressions,inputLayers}}return index.h("analysis-query-input",{key:name,label,ref:onSetRef,onAnalysisQueryInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,value:adaptedValue,mapLayers,required,...extraProps})};const GeoenrichmentInput=({name,toolData,onSetRef,onValueChange,onHelpClick,label,portal,required,...extraProps})=>{const{value:analysisVariables,...rest}=extraProps;const value={analysisVariables:analysisVariables??undefined,country:toolData?.country??undefined,hierarchy:toolData?.hierarchy??undefined,labels:toolData?.labels??undefined};return index.h("analysis-geoenrichment-input",{key:name,ref:onSetRef,label,value,portal,onAnalysisGeoenrichmentInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,required,...rest})};const FolderInput=({name,user,label,value,onValueChange,onHelpClick,onSetRef,...extraProps})=>{if(user===undefined){throw new Error("User required for output folder input")}return index.h("analysis-folder-input",{key:name,user,value,ref:onSetRef,onAnalysisFolderInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,label,...extraProps})};const SpatialReferenceInput=({name,onSetRef,onValueChange,onHelpClick,label,value,required,...extraProps})=>index.h("analysis-spatial-reference-input",{key:name,ref:onSetRef,label,value,required,onAnalysisSpatialReferenceInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,...extraProps});const WorkflowSelect=({name,onSetRef,onHelpClick,onValueChange,label,value,required,...extraProps})=>index.h("analysis-workflow-select",{key:name,ref:onSetRef,label,required,value,onAnalysisWorkflowSelectChange:onValueChange,onAnalysisHelpClick:onHelpClick,...extraProps});const DataFileInput=({name,onSetRef,onValueChange,onHelpClick,label,value,portal,required,...extraProps})=>{const{supportsUpload,serviceUrl}=extraProps;return index.h("analysis-data-file-input",{key:name,ref:onSetRef,label,value,onAnalysisDataFileInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,portal,required,hideUpload:supportsUpload===false||serviceUrl===undefined,...extraProps})};const Slot=props=>index.h("slot",{name:props.slotName,ref:props.onSetRef});const NotFoundInput=({name,label,user,portalHelpMap,required,onHelpClick,onSetRef,...extraProps})=>index.h("analysis-unsupported-input",{key:name,label,ref:onSetRef,user,portalHelpMap,required,onAnalysisHelpClick:onHelpClick,...extraProps});const primitiveComponentByType={[AnalysisToolParamDataType.GPString]:StringInput,[AnalysisToolParamDataType.GPMultiValueString]:StringInput,[AnalysisToolParamDataType.GPBoolean]:BooleanInput,[AnalysisToolParamDataType.GPDouble]:NumberInput,[AnalysisToolParamDataType.GPMultiValueDouble]:NumberInput,[AnalysisToolParamDataType.GPLong]:NumberInput,[AnalysisToolParamDataType.GPMultiValueLong]:NumberInput,[AnalysisToolParamDataType.GPDate]:DateInput,[AnalysisToolParamDataType.GPLinearUnit]:LinearUnitInput,[AnalysisToolParamDataType.GPFeatureRecordSetLayer]:LayerInput,[AnalysisToolParamDataType.GPRecordSet]:LayerInput,[AnalysisToolParamDataType.GPMultiValueFeatureRecordSetLayer]:LayerInput,[AnalysisToolParamDataType.GPMultiValueRecordSet]:LayerInput,[AnalysisToolParamDataType.GPField]:FieldInput,[AnalysisToolParamDataType.GPMultiValueField]:FieldInput,[AnalysisToolParamDataType.GPDataFile]:DataFileInput,[AnalysisToolParamDataType.GPRasterDataLayer]:NotFoundInput,[AnalysisToolParamDataType.GPMultiValueRasterDataLayer]:NotFoundInput};const primitiveComponentByName={"analysis-string-input":StringInput,"analysis-date-input":DateInput,"analysis-boolean-input":BooleanInput,"analysis-number-input":NumberInput,"analysis-field-input":FieldInput,"analysis-traffic-time-input":TrafficTimeInput,"analysis-linear-unit-input":LinearUnitInput,"analysis-layer-input":LayerInput,"analysis-dataset-input":DatasetInput,"analysis-summary-fields":SummaryFieldsInput,"analysis-item-input":ItemInput,"analysis-folder-input":FolderInput,"analysis-spatial-reference-input":SpatialReferenceInput,"analysis-slot":Slot,"analysis-geoenrichment-input":GeoenrichmentInput,"analysis-query-input":QueryInput,"analysis-workflow-select":WorkflowSelect,"analysis-data-file-input":DataFileInput};const standardizeInputProperties=({required,parameterType,label,displayName,name,filter,...rest})=>{const{direction,componentName,defaultValue,...keptProps}=rest;return{required:required??parameterType==="esriGPParameterTypeRequired",label:label??displayName??name,...utils.convertParameterFilter(filter),...keptProps}};const AnalysisPrimitiveParameter=props=>{let Component=undefined;if(props.componentName!==undefined){Component=primitiveComponentByName[props.componentName]}else if(props.dataType!==undefined){Component=primitiveComponentByType[props.dataType]}Component=Component??NotFoundInput;return index.h(Component,{...standardizeInputProperties(props)})};exports.AnalysisPrimitiveParameter=AnalysisPrimitiveParameter;exports.AnalysisToolParamDataType=AnalysisToolParamDataType;exports.NotFoundInput=NotFoundInput;exports.primitiveComponentByName=primitiveComponentByName;exports.primitiveComponentByType=primitiveComponentByType;exports.standardizeInputProperties=standardizeInputProperties}));
