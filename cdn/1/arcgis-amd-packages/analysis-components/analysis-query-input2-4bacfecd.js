define(["exports","./index-ef555910","./index2-588b02d9","./analysis-expression-group2-ce4cdcfd","./utils-793221d4","./analysis-attribute-expression2-a90d2a8c","./analysis-label2-f17c360a","./analysis-query-builder2-59ad1897","./analysis-query-entry2-a97f8d18","./analysis-query-modal2-5e925cce","./analysis-query-target-select2-1308b9a9","./analysis-spatial-expression2-5e7137a9"],(function(exports,index,index2,analysisExpressionGroup2,utils,analysisAttributeExpression2,analysisLabel2,analysisQueryBuilder2,analysisQueryEntry2,analysisQueryModal2,analysisQueryTargetSelect2,analysisSpatialExpression2){"use strict";const HTMLClasses={border:"border",mbHalf:"mb-half"};const analysisQueryInputCss=":root{--analysis-quarter-spacing:0.25rem;--analysis-half-spacing:0.5rem;--analysis-three-quarter-spacing:0.75rem;--analysis-full-spacing:1rem;--analysis-component-default-width:100%;--analysis-ui-border-input:#d4d4d4;--analysis-label-font-size:var(--calcite-font-size--2);--analysis-popover-content-min-height-s:7.5rem;--analysis-popover-content-min-height-m:8.75rem;--analysis-popover-content-max-height:60vh;--analysis-popover-content-height:45vh}.border{border:1px solid var(--calcite-color-border-input)}.mb-half{margin-bottom:var(--analysis-half-spacing)}";const AnalysisQueryInput=index.proxyCustomElement(class AnalysisQueryInput extends index.H{constructor(){super();this.__registerHost();this.analysisQueryInputChange=index.createEvent(this,"analysisQueryInputChange",7);this.analysisHelpClick=index.createEvent(this,"analysisHelpClick",7);this.openModal=()=>{this.queryModal=document.createElement("analysis-query-modal");this.queryModal.target=this.layer??this.expressionGroup?.layer??this.combinedLayers[0];this.queryModal.expressionGroup=this.expressionGroup;this.queryModal.layers=this.combinedLayers;this.queryModal.recordsTerm=this.recordsTerm;this.queryModal.mode=this.mode;this.queryModal.open=true;this.queryModal.options=this.options;if(this.hasValue&&this.value!==undefined){this.queryModal.value=this.value}this.queryModal.addEventListener("analysisQueryModalAdd",this.onQueryModalAddClick);this.queryModal.addEventListener("analysisQueryModalError",this.onQueryModalError);this.queryModal.addEventListener("analysisQueryModalDismissed",this.onQueryModalDismissed);document.body.appendChild(this.queryModal)};this.closeModal=()=>{this.queryModal?.removeEventListener("analysisQueryModalAdd",this.onQueryModalAddClick);this.queryModal?.removeEventListener("analysisQueryModalError",this.onQueryModalError);this.queryModal?.removeEventListener("analysisQueryModalDismissed",this.onQueryModalDismissed);this.queryModal?.remove()};this.onQueryModalError=event=>{this.errorMessage=event.detail};this.onQueryModalAddClick=event=>{const newExpressionGroup=event.detail;this.value=this.serializeExpressionGroup(newExpressionGroup);this.analysisQueryInputChange.emit(this.value);this.validate()};this.serializeExpressionGroup=expressionGroup=>{let value;if(this.mode==="sql"){value=expressionGroup?.toSQL(this.options)}else{const serializedValue=expressionGroup?.toJSON(this.combinedLayers,this.mapView);if(serializedValue?.expressions!==undefined&&serializedValue?.inputLayers!==undefined){value={expressions:serializedValue?.expressions,inputLayers:serializedValue?.inputLayers}}}return value};this.onQueryModalDismissed=()=>{this.closeModal();this.validate()};this.onDeleteQuery=()=>{this.value=undefined;this.analysisQueryInputChange.emit(undefined);this.validate()};this.combinedLayers=undefined;this.valueLabel=undefined;this.errorMessage=undefined;this.loading=true;this.expressionGroup=undefined;this.label=undefined;this.required=false;this.mode="analysis";this.value=undefined;this.mapLayers=[];this.recordsTerm="features";this.disabledTooltip=undefined;this.options=undefined;this.mapView=undefined;this.layer=undefined}async valueChange(){if(this.mode==="analysis"){this.combinedLayers=this.reorderInputAndMapLayers()}this.expressionGroup=await this.parseValue();await this.setValueLabel()}reorderInputAndMapLayers(){const loadedMapLayers=this.filteredMapLayers?.filter((layer=>layer.loaded));let layers=[...loadedMapLayers??[],...this.inputLayersNotInMapLayers??[]];if(this.value!==undefined&&typeof this.value!=="string"){const uniqueLayerIds=new Map;layers.forEach((layer=>{uniqueLayerIds.set(utils.formatLayerUrlAndId(layer),layer)}));const reorderedLayers=[];this.value.inputLayers?.forEach((inputLayer=>{if(uniqueLayerIds.has(inputLayer.url)){reorderedLayers.push(uniqueLayerIds.get(inputLayer.url));uniqueLayerIds.delete(inputLayer.url)}}));layers.forEach((layer=>{const formattedUrlId=utils.formatLayerUrlAndId(layer);if(uniqueLayerIds.has(formattedUrlId)){reorderedLayers.push(layer);uniqueLayerIds.delete(formattedUrlId)}}));layers=reorderedLayers}return layers}async setValueLabel(){const valueHeaderTemplate=this.recordsTerm==="features"?this.strings.featureValueHeader:this.strings.recordsValueHeader;const targetLayer=this.expressionGroup?.layer;if(targetLayer!==undefined){if(targetLayer.title===undefined){await targetLayer.load()}this.valueLabel=index2.formatMessage(valueHeaderTemplate,{layer:targetLayer.title})}else{this.valueLabel=index2.formatMessage(valueHeaderTemplate,{layer:""})}}async mapLayersChange(newValue){if(index2.isEmptyDataItem(newValue)===false){let filteredLayers=newValue?.filter((layer=>index2.isUrlFeatureLayer(layer)));filteredLayers=filteredLayers.filter((layer=>!layer.isTable));await Promise.allSettled(filteredLayers.map((layer=>layer.load())));const loadedLayers=filteredLayers.filter((layer=>layer.loaded));if(loadedLayers.length!==filteredLayers.length){this.errorMessage=this.strings.layersLoadError}this.filteredMapLayers=loadedLayers}else{this.filteredMapLayers=[]}this.combinedLayers=this.reorderInputAndMapLayers()}async targetLayerChange(newLayer,oldLayer){if(newLayer!==undefined&&newLayer!==oldLayer){try{await this.layer.load();this.parseValue()}catch(err){if(this.mode==="sql"){this.errorMessage=this.strings.targetDatasetLoadError}else{this.errorMessage=this.strings.layersLoadError}}}}get hasError(){return index2.isEmptyDataItem(this.errorMessage)===false}get hasValue(){let hasValue;if(typeof this.value==="string"){hasValue=this.value!==""}else if(this.value!==undefined){const{expressions,inputLayers}=this.value;hasValue=expressions!==undefined&&expressions.length>0&&inputLayers!==undefined&&inputLayers.length>0}else{hasValue=false}return hasValue}get canCreateQuery(){const missingLayer=this.layer===undefined;const missingMapLayers=this.filteredMapLayers===undefined||this.filteredMapLayers.length<1;const missingValue=index2.isEmptyDataItem(this.value);return!(missingLayer&&missingMapLayers&&missingValue)}async componentWillLoad(){({strings:this.strings}=await index2.fetchComponentLocaleStrings(this.hostElement,index.getAssetPath(`.`)));this.loading=true;this.loadInitialState().finally((()=>this.loading=false))}async loadInitialState(){await this.mapLayersChange(this.mapLayers);if(this.layer!==undefined){try{await this.layer.load()}catch(err){if(this.mode==="sql"){this.errorMessage=this.strings.targetDatasetLoadError}else{this.errorMessage=this.strings.layersLoadError}}}this.combinedLayers=this.filteredMapLayers;if(this.value!==undefined){this.inputLayersNotInMapLayers=await this.loadInputLayersNotInMapLayers(this.value);await this.valueChange()}if(this.expressionGroup!==undefined&&this.errorMessage===undefined){this.value=this.serializeExpressionGroup(this.expressionGroup);this.analysisQueryInputChange.emit(this.value)}}async loadInputLayersNotInMapLayers(newValue){let inputLayersNotInMapLayers=[];if(typeof newValue!=="string"&&Array.isArray(newValue?.expressions)){this.errorMessage=undefined;try{const newInputLayers=newValue?.inputLayers??[];const combinedLayersUrlIds=this.combinedLayers.map((layer=>utils.formatLayerUrlAndId(layer)));const filteredInputLayers=newInputLayers.filter((inputLayerObject=>!combinedLayersUrlIds.includes(inputLayerObject.url)));inputLayersNotInMapLayers=await index2.loadFeatureLayers(filteredInputLayers)}catch{this.value=undefined;this.analysisQueryInputChange.emit();this.errorMessage=this.strings.layersLoadError}}return inputLayersNotInMapLayers}async parseValue(){let group,errorKey;if(this.mode==="analysis"&&typeof this.value==="object"){({group,errorKey}=await analysisExpressionGroup2.ExpressionGroup.fromJSON(this.value.expressions,this.combinedLayers))}else if(this.mode==="sql"&&typeof this.value==="string"){({group,errorKey}=await analysisExpressionGroup2.ExpressionGroup.fromSQL(this.value,this.layer,this.options))}if(errorKey!==undefined){this.errorMessage=this.strings[errorKey]}return group}componentDidRender(){if(this.tooltipRef!==undefined&&this.tooltipRef!==null&&this.addButtonRef!==undefined){this.tooltipRef.referenceElement=this.addButtonRef}}disconnectedCallback(){this.closeModal()}async checkValidity(){return Promise.resolve(this.validate())}render(){if(this.loading===true){return this.renderLoadingState()}else if(this.hasValue){return this.renderValueState()}else{return this.renderInitialState()}}renderLoadingState(){return index.h(index.Host,null,index.h("calcite-label",{scale:utils.UIDefaults.Scale},this.label!==undefined&&this.label!==""?index.h("analysis-label",{label:this.label,required:this.required,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}):null,index.h("calcite-button",{appearance:"outline",kind:"neutral",round:true,"icon-start":"plus",width:"full",scale:utils.UIDefaults.Scale,onClick:()=>{},loading:true},this.strings.createQuery)))}renderInitialState(){return index.h(index.Host,null,index.h("calcite-label",{scale:utils.UIDefaults.Scale},this.label!==undefined&&this.label!==""?index.h("analysis-label",{label:this.label,required:this.required,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}):null,index.h("calcite-button",{appearance:"outline",kind:"neutral",round:true,"icon-start":"plus",width:"full",scale:utils.UIDefaults.Scale,onClick:()=>{if(this.canCreateQuery){this.openModal()}},disabled:this.canCreateQuery===false,ref:element=>this.addButtonRef=element},this.strings.createQuery),this.canCreateQuery===false&&index.h("calcite-tooltip",{label:this.disabledTooltip??this.strings.disabledTooltip,referenceElement:this.addButtonRef,ref:element=>this.tooltipRef=element,overlayPositioning:"fixed"},this.disabledTooltip??this.strings.disabledTooltip)),index.h("calcite-input-message",{class:HTMLClasses.mbHalf,hidden:!this.hasError,icon:"exclamationMarkTriangle",status:index2.UIInputStatus.INVALID,scale:utils.UIDefaults.Scale},this.hasError===false?this.strings.isRequired:this.errorMessage))}renderValueState(){return index.h(index.Host,null,index.h("calcite-label",{scale:utils.UIDefaults.Scale},this.label!==undefined&&this.label!==""?index.h("analysis-label",{label:this.label,required:this.required,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}):null,index.h("calcite-list",{onClick:()=>this.openModal(),class:`${HTMLClasses.border} ${HTMLClasses.mbHalf}`},index.h("calcite-list-item",{value:"query",label:this.valueLabel,description:this.strings.editDescription},index.h("calcite-action",{slot:"actions-end",icon:"pencil",text:this.strings.editAction})))),index.h("calcite-button",{class:HTMLClasses.mbHalf,appearance:"outline",kind:"neutral","icon-start":"trash",width:"full",scale:utils.UIDefaults.Scale,onClick:this.onDeleteQuery},this.strings.deleteQuery),index.h("calcite-input-message",{class:HTMLClasses.mbHalf,status:"invalid",scale:utils.UIDefaults.Scale,hidden:!this.hasError,icon:"exclamationMarkTriangle"},this.errorMessage))}validate(){let isValid;if(!this.hasValue&&this.required){isValid=false;this.errorMessage=this.strings.isRequired}else{isValid=true;this.errorMessage=undefined}return isValid}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get watchers(){return{value:["valueChange"],mapLayers:["mapLayersChange"],layer:["targetLayerChange"]}}static get style(){return analysisQueryInputCss}},[0,"analysis-query-input",{label:[513],required:[516],mode:[513],value:[1025],mapLayers:[16],recordsTerm:[513,"records-term"],disabledTooltip:[1,"disabled-tooltip"],options:[16],mapView:[16],layer:[16],combinedLayers:[32],valueLabel:[32],errorMessage:[32],loading:[32],expressionGroup:[32],checkValidity:[64]},undefined,{value:["valueChange"],mapLayers:["mapLayersChange"],layer:["targetLayerChange"]}]);function defineCustomElement(){if(typeof customElements==="undefined"){return}const components=["analysis-query-input","analysis-attribute-expression","analysis-expression-group","analysis-label","analysis-query-builder","analysis-query-entry","analysis-query-modal","analysis-query-target-select","analysis-spatial-expression"];components.forEach((tagName=>{switch(tagName){case"analysis-query-input":if(!customElements.get(tagName)){customElements.define(tagName,AnalysisQueryInput)}break;case"analysis-attribute-expression":if(!customElements.get(tagName)){analysisAttributeExpression2.defineCustomElement()}break;case"analysis-expression-group":if(!customElements.get(tagName)){analysisExpressionGroup2.defineCustomElement()}break;case"analysis-label":if(!customElements.get(tagName)){analysisLabel2.defineCustomElement()}break;case"analysis-query-builder":if(!customElements.get(tagName)){analysisQueryBuilder2.defineCustomElement()}break;case"analysis-query-entry":if(!customElements.get(tagName)){analysisQueryEntry2.defineCustomElement()}break;case"analysis-query-modal":if(!customElements.get(tagName)){analysisQueryModal2.defineCustomElement()}break;case"analysis-query-target-select":if(!customElements.get(tagName)){analysisQueryTargetSelect2.defineCustomElement()}break;case"analysis-spatial-expression":if(!customElements.get(tagName)){analysisSpatialExpression2.defineCustomElement()}break}}))}defineCustomElement();exports.AnalysisQueryInput=AnalysisQueryInput;exports.defineCustomElement=defineCustomElement}));
