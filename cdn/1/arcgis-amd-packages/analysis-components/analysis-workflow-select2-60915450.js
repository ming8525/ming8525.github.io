define(["exports","./index-ef555910","./index2-588b02d9","./utils-793221d4","./analysis-label2-f17c360a","./analysis-workflow-select-popover2-a6a5c39c","./isEqual-7dac7fee"],(function(exports,index,index2,utils,analysisLabel2,analysisWorkflowSelectPopover2,isEqual){"use strict";const HTMLClasses={container:"container",border:"border"};const analysisWorkflowSelectCss=":root{--analysis-quarter-spacing:0.25rem;--analysis-half-spacing:0.5rem;--analysis-three-quarter-spacing:0.75rem;--analysis-full-spacing:1rem;--analysis-component-default-width:100%;--analysis-ui-border-input:#d4d4d4;--analysis-label-font-size:var(--calcite-font-size--2);--analysis-popover-content-min-height-s:7.5rem;--analysis-popover-content-min-height-m:8.75rem;--analysis-popover-content-max-height:60vh;--analysis-popover-content-height:45vh}:host{width:var(--analysis-component-default-width)}.container{margin-bottom:var(--analysis-half-spacing)}.border{border:1px solid var(--calcite-color-border-input)}";const AnalysisWorkflowSelect=index.proxyCustomElement(class AnalysisWorkflowSelect extends index.H{constructor(){super();this.__registerHost();this.__attachShadow();this.analysisWorkflowSelectChange=index.createEvent(this,"analysisWorkflowSelectChange",7);this.analysisHelpClick=index.createEvent(this,"analysisHelpClick",7);this.workflowOptions={};this.hideElements=()=>{this.toolSettingsElement=this.parentAppContainer?.shadowRoot?.querySelector("analysis-tool-settings");this.toolFooterElement=this.parentAppContainer?.shadowRoot?.querySelector("div[slot=footer]");if(this.toolSettingsElement){this.toolSettingsElement.hidden=true}if(this.toolFooterElement){this.toolFooterElement.hidden=true}};this.showElements=()=>{if(this.toolSettingsElement?.hidden===true){this.toolSettingsElement.hidden=false}if(this.toolFooterElement?.hidden===true){this.toolFooterElement.hidden=false}};this.onSelectionChange=newSelectedWorkflow=>{if(newSelectedWorkflow!==this.value){this.value=newSelectedWorkflow;this.updateSelectedUIParameters();this.validate()}this.showElements()};this.replaceWorkflow=event=>{this.removeWorkflowReplacePopover();this.workflowSelectPopover=this.createWorkflowSelectPopoverElement(event.target);utils.addOpenableDomElement(document,this.workflowSelectPopover)};this.removeWorkflowReplacePopover=()=>{utils.removeOpenableDomElement(this.workflowSelectPopover)};this.createWorkflowSelectPopoverElement=referenceElement=>{const popover=document.createElement("analysis-workflow-select-popover");const popoverProps={autoClose:true,closable:true,focusTrapDisabled:true,heading:this.strings.popoverHeader,label:this.strings.popoverHeader,placement:"auto",referenceElement};popover.popoverOptions=popoverProps;popover.renderPopoverContent=()=>this.renderWorkflowOptions(true);popover.addEventListener("calcitePopoverClose",(()=>{this.removeWorkflowReplacePopover()}));return popover};this.isValid=true;this.label=undefined;this.value=undefined;this.choiceListLabels=undefined;this.required=undefined;this.validationParams=undefined;this.UIparameterInfos=undefined;this.selectUIparameterInfos=undefined}onUIparameterInfosChange(newValue){this.processUIparameterInfos(newValue)}async componentWillLoad(){({strings:this.strings,dir:this.dir}=await index2.fetchComponentLocaleStrings(this.hostElement,index.getAssetPath(`.`)));if(this.value===undefined){this.parentAppContainer=index2.getClosestElement("analysis-tool-app-container",this.hostElement)}if(this.UIparameterInfos!==undefined){this.processUIparameterInfos(this.UIparameterInfos)}this.updateSelectedUIParameters()}componentDidLoad(){if(this.value===undefined){this.hideElements()}}disconnectedCallback(){this.removeWorkflowReplacePopover();this.showElements()}async checkValidity(){return this.validate()}validate(){let newValidity=true;if(this.required===true&&this.value===undefined){newValidity=false}this.isValid=newValidity;return Promise.resolve(this.isValid)}processUIparameterInfos(UIparameterInfos){const newWorkflowOptions={};const newChoiceListLabels={};for(const parameterInfo of UIparameterInfos??[]){const paramName=parameterInfo?.name;if(paramName===undefined){throw new Error("UIparameterInfo goal must have a name property")}newWorkflowOptions[paramName]=parameterInfo;newChoiceListLabels[paramName]=parameterInfo.label??paramName}this.workflowOptions=newWorkflowOptions;this.choiceListLabels=newChoiceListLabels;this.resetValueIfInvalid()}updateSelectedUIParameters(){const newSelectUIparameterInfos=this.value===undefined?undefined:[this.workflowOptions[this.value]];if(isEqual.isEqual(newSelectUIparameterInfos,this.selectUIparameterInfos)===false){this.selectUIparameterInfos=newSelectUIparameterInfos;this.analysisWorkflowSelectChange.emit()}}resetValueIfInvalid(){if(this.value!==undefined&&this.workflowOptions[this.value]===undefined){this.onSelectionChange(undefined)}}renderReplaceTooltip(){const{replaceWorkflow}=this.strings;return index.h("calcite-tooltip",{closeOnClick:true,dir:this.dir,label:replaceWorkflow,placement:"bottom",onClick:event=>event.stopPropagation(),ref:el=>this.selectedWorkflowTooltip=el},replaceWorkflow)}renderWorkflowOptions(isPopoverView=false){const displayAllWorkflows=isPopoverView||this.value===undefined;const onClickCallback=displayAllWorkflows?this.removeWorkflowReplacePopover:this.replaceWorkflow;const workflowListElement=displayAllWorkflows?Object.keys(this.workflowOptions).map((key=>this.renderListItem(this.workflowOptions[key],false))):this.renderListItem(this.workflowOptions[this.value],true);return index.h("calcite-list",{dir:this.dir,onClick:onClickCallback,class:HTMLClasses.border,selectionMode:isPopoverView?"single-persist":"none",selectionAppearance:"icon"},this.renderReplaceTooltip(),workflowListElement)}renderWorkflowHelpAction(param){const{workflowHelp}=this.strings;return index.h("calcite-action",{label:workflowHelp,text:workflowHelp,onClick:event=>{event.stopPropagation();const target=event.target;const parent=target.parentElement;const paramLabel=param.label??param.name;this.analysisHelpClick.emit({paramName:param.name,paramLabel,refElement:parent??target})},icon:"information",slot:"actions-end"})}renderListItem(param,shouldAttachTooltip){const{name,label}=param;const onListItemClickCallback=shouldAttachTooltip?()=>{}:()=>this.onSelectionChange(param.name);const setTooltipRef=el=>{if(shouldAttachTooltip===true&&this.selectedWorkflowTooltip!==undefined&&this.value!==undefined&&el!==null){this.selectedWorkflowTooltip.referenceElement=el}};return index.h("calcite-list-item",{key:name,id:name,value:name,label:label??name,selected:name===this.value,onClick:onListItemClickCallback,ref:setTooltipRef},this.renderWorkflowHelpAction(param))}renderLabel(){const labelExists=this.label!==undefined&&this.label!=="";return labelExists?index.h("analysis-label",{label:this.label,required:this.required,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}):undefined}renderErrorMessage(){const errorMessage=this.validationParams?.requiredMessage??index2.formatMessage(this.strings.isRequired,{label:this.label});const shouldRenderError=this.isValid===false&&errorMessage!=="";return shouldRenderError?index.h("calcite-input-message",{status:index2.UIInputStatus.INVALID,scale:index2.UIDefaults.Scale,icon:"exclamationMarkTriangle",hidden:this.isValid},errorMessage):undefined}render(){return index.h(index.Host,null,index.h("calcite-section",{class:HTMLClasses.container},index.h("calcite-label",{scale:index2.UIDefaults.Scale},this.renderLabel(),this.renderWorkflowOptions(),this.renderErrorMessage())))}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get watchers(){return{UIparameterInfos:["onUIparameterInfosChange"]}}static get style(){return analysisWorkflowSelectCss}},[1,"analysis-workflow-select",{label:[513],value:[1025],choiceListLabels:[1040],required:[516],validationParams:[16],UIparameterInfos:[1040],selectUIparameterInfos:[1040],isValid:[32],checkValidity:[64]},undefined,{UIparameterInfos:["onUIparameterInfosChange"]}]);function defineCustomElement(){if(typeof customElements==="undefined"){return}const components=["analysis-workflow-select","analysis-label","analysis-workflow-select-popover"];components.forEach((tagName=>{switch(tagName){case"analysis-workflow-select":if(!customElements.get(tagName)){customElements.define(tagName,AnalysisWorkflowSelect)}break;case"analysis-label":if(!customElements.get(tagName)){analysisLabel2.defineCustomElement()}break;case"analysis-workflow-select-popover":if(!customElements.get(tagName)){analysisWorkflowSelectPopover2.defineCustomElement()}break}}))}defineCustomElement();exports.AnalysisWorkflowSelect=AnalysisWorkflowSelect;exports.defineCustomElement=defineCustomElement}));
