define(["exports","./index-ef555910","./index2-588b02d9","./utils-793221d4","./helpmap-fb1ea8ef","./analysis-item-browser2-508c9cf3","./analysis-label2-f17c360a","./analysis-layer-input-popover2-13f7974d","./isEqual-7dac7fee"],(function(exports,index,index2,utils,helpmap,analysisItemBrowser2,analysisLabel2,analysisLayerInputPopover2,isEqual){"use strict";const HTMLClasses={flexContainer:"flex-container",primaryButton:"primary-button",secondaryButton:"secondary-button",text:"text",border:"border",warningMessage:"warning-message"};const analysisLayerInputCss=":root{--analysis-quarter-spacing:0.25rem;--analysis-half-spacing:0.5rem;--analysis-three-quarter-spacing:0.75rem;--analysis-full-spacing:1rem;--analysis-component-default-width:100%;--analysis-ui-border-input:#d4d4d4;--analysis-label-font-size:var(--calcite-font-size--2);--analysis-popover-content-min-height-s:7.5rem;--analysis-popover-content-min-height-m:8.75rem;--analysis-popover-content-max-height:60vh;--analysis-popover-content-height:45vh}:host{display:flex;flex-direction:column;width:var(--analysis-component-default-width);margin-bottom:var(--analysis-half-spacing);--calcite-label-margin-bottom:0}.flex-container{display:flex;width:var(--analysis-component-default-width);column-gap:3%}.primary-button{flex:1 1 auto}.secondary-button{flex:auto 1 auto}.text{padding-bottom:var(--analysis-quarter-spacing);margin-block-start:0;margin-block-end:0}.border{border:1px solid var(--calcite-color-border-input);margin-bottom:var(--analysis-half-spacing)}.warning-message{word-wrap:break-word;overflow-wrap:anywhere}";const AnalysisLayerInput=index.proxyCustomElement(class AnalysisLayerInput extends index.H{constructor(){super();this.__registerHost();this.__attachShadow();this.analysisLayerInputChange=index.createEvent(this,"analysisLayerInputChange",7);this.analysisLayerInputClose=index.createEvent(this,"analysisLayerInputClose",7);this.analysisHelpClick=index.createEvent(this,"analysisHelpClick",7);this.replaceId=null;this.filteredMapLayers=[];this.showNoticeMessage=false;this.noticeMessage=[];this.warningMessageForPopover=[];this.filterFeatureLayers=layers=>layers.filter((layer=>layer!==undefined&&index2.isFeatureLayer(layer)&&layer.loaded));this.updateWarningMessage=(availableSelectedLayerIds,allSelectedLayerIds)=>{const numLayersRemoved=allSelectedLayerIds.length-availableSelectedLayerIds.length;this.warningMessage=undefined;if(numLayersRemoved>0){const allMapLayersById=new Map(this.mapLayers.map((layer=>[layer.id,layer])));const removedLayerId=allSelectedLayerIds.find((id=>!availableSelectedLayerIds.includes(id)))??"";const removedLayerTitle=allMapLayersById.get(removedLayerId)?.title??"";const warningMessageTemplate=numLayersRemoved===1?this.strings.layerNotAvailable:this.strings.multipleLayersNotAvailable;this.warningMessage=index2.formatMessage(warningMessageTemplate,{layerName:removedLayerTitle})}};this.filterInternalLayers=async layers=>{const proxyPromises=layers.map((layer=>index2.getProxyServiceInfo(layer,this.user?.portal?.url)));let proxyAllowedLayerIds=await Promise.all(proxyPromises);proxyAllowedLayerIds=proxyAllowedLayerIds.filter((layerId=>layerId!==undefined));return layers.filter((layer=>proxyAllowedLayerIds.includes(layer.id)))};this.syncValueWithIds=async()=>{const combinedLayers=[...this.browsedLayers,...this.mapLayers];const tempValues=[];const tempLayers=[];const isSingle=this.selectionMode!=="multi";for(const layerId of this.selectedLayerIds??[]){const selectedLayer=combinedLayers.find((layer=>layerId===layer.id));if(selectedLayer!==undefined){tempLayers.push(selectedLayer);let gpLayerValue;if(index2.isFeatureLayer(selectedLayer)){gpLayerValue=index2.getGPFeatureRecordSetLayerValue(selectedLayer,this.mapView)}else if(index2.isImageryLayer(selectedLayer)||index2.isImageryTileLayer(selectedLayer)){gpLayerValue=index2.getImageryLayerValue(selectedLayer)}else if(index2.isTileLayer(selectedLayer)){gpLayerValue=index2.getTileLayerValue(selectedLayer)}if(gpLayerValue!==undefined){tempValues.push(gpLayerValue)}}}this.value=isSingle?tempValues[0]:tempValues;this.selectedLayers=isSingle?tempLayers[0]:tempLayers;this.processedLayerProperties={};if(isSingle||Array.isArray(this.selectedLayers)&&this.selectedLayers.length===1){const layer=tempLayers[0];if(layer!==undefined&&(index2.isImageryLayer(layer)||index2.isImageryTileLayer(layer))){this.processedLayerProperties=await index2.processImageryLayer(layer)}else if(layer!==undefined&&index2.isFeatureLayer(layer)){const fields=layer.fields;const fieldNames=fields?.map((field=>field.name));this.processedLayerProperties.fieldNames=fieldNames}}this.analysisLayerInputChange.emit()};this.renderInitialMode=()=>{this.removeTooltip();return index.h("section",null,this.label!==undefined&&this.label!==""?index.h("analysis-label",{label:this.label,required:this.required,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}):null,this.renderButton())};this.renderErrorMessage=()=>{const hasError=index2.isEmptyDataItem(this.validationParams?.message)===false||this.errorMessage!==undefined;const validationParamsMessage=index2.formatValidationParamsMessage(index2.getValidationParamsMessageFromErrorKey(this.strings,this.validationParams));return index.h("calcite-input-message",{status:index2.UIInputStatus.INVALID,hidden:!hasError,scale:utils.UIDefaults.Scale,icon:"exclamationMarkTriangle"},validationParamsMessage??this.errorMessage)};this.renderWarningMessage=()=>this.warningMessage!==undefined?index.h("calcite-input-message",{icon:"exclamationMarkTriangle",scale:utils.UIDefaults.Scale},index.h("div",{class:HTMLClasses.warningMessage},this.warningMessage)):null;this.renderButton=()=>index.h("div",{class:HTMLClasses.flexContainer},index.h("calcite-button",{class:HTMLClasses.primaryButton,appearance:"outline",kind:"neutral",scale:utils.UIDefaults.Scale,iconStart:"add-layer",onClick:this.primaryButtonClicked},this.strings.layer));this.renderListMode=()=>{const iterableSelectedLayers=Array.isArray(this.selectedLayers)?this.selectedLayers:[this.selectedLayers];return index.h("section",null,index.h("calcite-label",null,this.label!==undefined&&this.label!==""?index.h("analysis-label",{label:this.label,required:this.required,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}):null,index.h("calcite-list",{class:HTMLClasses.border,selectionMode:"none",onClick:this.replaceLayer,onMouseOver:this.mouseOver,onMouseOut:this.mouseOut},iterableSelectedLayers.map((layer=>this.renderListModeItem(layer))))),this.selectionMode==="multi"?this.renderButton():null)};this.renderListModeItem=layer=>{let layerDesc="";if(index2.isFeatureLayer(layer)&&this.descriptionDisplay==="featureCount"){layerDesc=index2.formatMessage(this.strings.numberFeatures,{featureCount:this.featureCounts.get(layer.id)??this.strings.numberFeaturesLoading})}else if(this.descriptionDisplay==="spatialReference"){const wkid=layer.fullExtent.spatialReference.latestWkid;layerDesc=this.wkidMap.get(wkid)??""}const actionLabel=index2.formatMessage(this.strings.layerAction,{layerName:layer.title});return index.h("calcite-list-item",{key:layer.id,value:layer.id,label:index2.getLayerLabel(layer),description:layerDesc},this.selectedLayerIcon!==undefined&&index.h("calcite-icon",{icon:this.selectedLayerIcon,slot:"content-start"}),index.h("calcite-action",{"data-layerId":layer.id,text:actionLabel,slot:"actions-end",label:actionLabel,appearance:"transparent",icon:"x",onClick:this.actionClicked}))};this.layerSelectionChange=async e=>{if(this.selectionMode!=="multi"){utils.removeOpenableDomElement(this.layerInputPopover);this.layerInputPopover=undefined}const popoverSelectedLayerIds=Array.from(e.detail.selectedLayers.keys());if(this.replaceId===null){const selectedBrowseLayerIds=(this.selectedLayerIds??[]).filter((layerId=>this.browsedLayers.some((browsedLayer=>browsedLayer.id===layerId))));this.selectedLayerIds=[...popoverSelectedLayerIds,...selectedBrowseLayerIds]}else{this.browsedLayers=this.browsedLayers.map((browsedLayer=>this.replaceId===browsedLayer.id?e.detail[0]:browsedLayer)).filter((layer=>layer!==undefined));this.selectedLayerIds=this.selectedLayerIds?.map((id=>id===this.replaceId?popoverSelectedLayerIds[0]:id));this.replaceId=null}await this.syncValueWithIds();this.validate()};this.handleLayerBrowsed=e=>{if(this.selectionMode!=="multi"){this.browsedLayers=e.detail;this.selectedLayers=this.browsedLayers}else{if(this.replaceId===null){this.browsedLayers=[...this.browsedLayers,...e.detail];this.selectedLayers=[...this.selectedLayers??[],...this.browsedLayers]}else{this.browsedLayers=this.browsedLayers.map((browsedLayer=>this.replaceId===browsedLayer.id?e.detail[0]:browsedLayer));this.selectedLayers=this.selectedLayers?.map((selectedLayer=>this.replaceId===selectedLayer.id?e.detail[0]:selectedLayer));this.replaceId=null}}this.validate();this.updateFeatureCounts(this.browsedLayers)};this.primaryButtonClicked=e=>{this.createLayerPopover(e.target)};this.replaceLayer=e=>{const targetElement=e.target;if(targetElement?.localName==="calcite-list-item"){this.replaceId=targetElement.value;this.createLayerPopover(targetElement);if(this.layerInputPopover!==undefined&&this.replaceId!==null){this.layerInputPopover.selectedLayerIds=[this.replaceId]}}};this.actionClicked=async e=>{const actionLayerId=e.target?.getAttribute("data-layerId");this.selectedLayerIds=this.selectedLayerIds?.filter((layerId=>layerId!==actionLayerId));this.browsedLayers=this.browsedLayers.filter((layer=>layer.id!==actionLayerId));this.analysisLayerInputClose.emit();await this.syncValueWithIds();this.validate()};this.mouseOver=e=>{const targetElement=e.target;if(targetElement?.localName==="calcite-list-item"){if(this.replaceTooltip===undefined){this.replaceTooltip=document.createElement("calcite-tooltip");this.replaceTooltip.placement="bottom";this.replaceTooltip.innerText=this.strings.replaceLayer}this.replaceTooltip.referenceElement=targetElement;utils.addOpenableDomElement(document,this.replaceTooltip)}};this.mouseOut=()=>{this.removeTooltip()};this.layerPopoverClose=()=>{this.replaceId=null;utils.removeOpenableDomElement(this.layerInputPopover);this.layerInputPopover=undefined;this.validate()};this.validate=()=>{this.warningMessage=undefined;this.errorMessage=undefined;const validationParamsMessage=index2.formatValidationParamsMessage(index2.getValidationParamsMessageFromErrorKey(this.strings,this.validationParams));const validByRequirement=this.required?this.selectedLayers!==undefined&&(Array.isArray(this.selectedLayers)?this.selectedLayers.length>0:true):true;if(validByRequirement===false){this.errorMessage=this.validationParams?.message!==undefined?validationParamsMessage:index2.formatMessage(this.strings.isRequired,{label:this.label??this.strings.layer});return}if(this.selectedLayerFeatureCount!==undefined){if(this.minimumFeatureCount!==undefined&&this.selectedLayerFeatureCount<this.minimumFeatureCount){this.errorMessage=this.validationParams?.message!==undefined?validationParamsMessage:index2.formatMessage(this.strings.featureCountBelowMinimum,{label:this.label,minimum:this.minimumFeatureCount.toString()})}if(this.maximumFeatureCount!==undefined&&this.selectedLayerFeatureCount>this.maximumFeatureCount){this.errorMessage=this.validationParams?.message!==undefined?validationParamsMessage:index2.formatMessage(this.strings.featureCountAboveMaximum,{label:this.label,maximum:this.maximumFeatureCount.toString()})}}};this.removeTooltip=()=>{utils.removeOpenableDomElement(this.replaceTooltip)};this.updateFeatureCounts=newLayers=>{const{mapView}=this;const featureCountPromises=this.filterFeatureLayers(newLayers).map((async layer=>{let count;try{count=(await index2.queryCount(layer,mapView)).toString()}catch{}return[layer.id,count]}));return Promise.all(featureCountPromises).then((resFeatureCounts=>{const validFeatureCounts=resFeatureCounts.filter((([,count])=>count!==undefined));const newFeatureCounts=validFeatureCounts;const oldFeatureCountsInUse=[...this.featureCounts].filter((([key])=>this.selectedLayerIds?.includes(key)));this.featureCounts=new Map([...oldFeatureCountsInUse,...newFeatureCounts])})).catch((()=>{}))};this.value=undefined;this.label=undefined;this.required=false;this.validationParams=undefined;this.user=undefined;this.portalHelpMap=undefined;this.mapLayers=[];this.mapView=undefined;this.selectionMode=undefined;this.selectedLayers=undefined;this.selectedLayerIds=undefined;this.selectedLayerFeatureCount=undefined;this.minimumFeatureCount=undefined;this.maximumFeatureCount=undefined;this.processedLayerProperties={};this.layerFilterType=undefined;this.descriptionDisplay="featureCount";this.hideBrowseButton=false;this.selectedLayerIcon=undefined;this.featureCounts=new Map;this.browsedLayers=[];this.errorMessage=undefined}async mapLayersChange(newValue){let proxyAllowedLayers=newValue;if(index2.isEmptyDataItem(this.user?.portal)===false&&this.user?.portal.isPortal===false){proxyAllowedLayers=await this.filterInternalLayers(newValue)}const{validLayers:filteredLayersByType}=await utils.filterLayersByType({layers:proxyAllowedLayers,layerFilterTypes:this.layerFilterType,user:this.user});const filteredLayersAllowAnalysis=index2.filterLayersAllowAnalysis(filteredLayersByType);if(filteredLayersAllowAnalysis.length<newValue.length){this.noticeMessage=[];const showProxyReason=proxyAllowedLayers.length<newValue.length;const showAnalysisReason=filteredLayersAllowAnalysis.length<filteredLayersByType.length;if(showProxyReason){this.warningMessageForPopover.push("proxyReason")}if(showAnalysisReason){this.warningMessageForPopover.push("allowAnalysisReason")}}this.showNoticeMessage=this.warningMessageForPopover.length>0;this.filteredMapLayers=filteredLayersAllowAnalysis.filter((filteredLayer=>filteredLayer.loaded));if(this.layerInputPopover!==undefined){this.layerInputPopover.mapLayers=this.filteredMapLayers}if(this.descriptionDisplay==="featureCount")this.updateFeatureCounts(newValue)}async selectedLayersChange(newValue,oldValue){if(newValue!==undefined&&!isEqual.isEqual(newValue,oldValue)){let selectedLayersList=Array.isArray(newValue)?newValue:[newValue];const selectedLayersListIds=selectedLayersList.map((layer=>layer.id));const selectedLayersLoadRes=await Promise.allSettled(selectedLayersList.map((layer=>layer.loaded?Promise.resolve(layer):layer.load())));selectedLayersList=selectedLayersLoadRes.filter((loadResults=>loadResults.status==="fulfilled")).map((fulfilledResults=>fulfilledResults.value));const filteredSelectedLayerIds=selectedLayersList.filter((layer=>layer.loaded)).map((layer=>layer.id));this.updateWarningMessage(filteredSelectedLayerIds,selectedLayersListIds);this.selectedLayerIds=Array.from(new Set(filteredSelectedLayerIds));const singleFeatureCount=this.featureCounts.get(this.selectedLayerIds?.[0]??"");if(singleFeatureCount!==undefined&&this.selectionMode!=="multi"){this.selectedLayerFeatureCount=parseInt(singleFeatureCount)}await this.syncValueWithIds();if(this.warningMessage===undefined){this.validate()}}}layerFilterTypeChange(newValue){this.layerFilterType=newValue;this.mapLayersChange(this.mapLayers)}onFeatureCountChange(){if(this.selectedLayerIds!==undefined&&this.selectedLayerIds.length>0&&this.selectionMode!=="multi"){const singleFeatureCount=this.featureCounts.get(this.selectedLayerIds[0]);if(singleFeatureCount!==undefined&&this.selectedLayerFeatureCount!==parseInt(singleFeatureCount)){this.selectedLayerFeatureCount=parseInt(singleFeatureCount);this.analysisLayerInputChange.emit()}}}async checkValidity(){this.validate();const isValid=this.errorMessage===undefined&&(this.validationParams?.message===undefined||this.validationParams.type==="informative");return Promise.resolve(isValid)}disconnectedCallback(){utils.removeOpenableDomElement(this.layerInputPopover);utils.removeOpenableDomElement(this.replaceTooltip)}async componentWillLoad(){({strings:this.strings,dir:this.dir}=await index2.fetchComponentLocaleStrings(this.hostElement,index.getAssetPath(`.`)));this.wkidMap=index2.getWkidMap();if(this.mapLayers!==undefined){this.mapLayersChange(this.mapLayers)}await this.selectedLayersChange(this.selectedLayers,undefined)}get isInitialMode(){return this.selectedLayerIds===undefined||this.selectedLayerIds.length===0}render(){return index.h(index.Host,null,this.isInitialMode?this.renderInitialMode():this.renderListMode(),this.renderErrorMessage(),this.renderWarningMessage())}createLayerPopover(clickTargetElement){if(this.layerInputPopover===undefined){this.layerInputPopover=document.createElement("analysis-layer-input-popover");this.layerInputPopover.addEventListener("analysisLayerInputPopoverClose",this.layerPopoverClose);this.layerInputPopover.addEventListener("analysisLayerInputPopoverSelectionChange",this.layerSelectionChange);this.layerInputPopover.addEventListener("analysisLayerInputPopoverLayerBrowsed",this.handleLayerBrowsed)}if(this.isInitialMode===true||clickTargetElement.localName==="calcite-button"){this.layerInputPopover.selectionMode=this.selectionMode;if(this.selectedLayerIds!==undefined)this.layerInputPopover.selectedLayerIds=[...this.selectedLayerIds]}else{this.layerInputPopover.selectionMode="single"}this.layerInputPopover.mapLayers=this.filteredMapLayers;this.layerInputPopover.itemBrowserFilter=utils.makePortalSearchFilterByType(this.layerFilterType);this.layerInputPopover.itemBrowserQ=utils.makePortalSearchQByType(this.layerFilterType,this.user?.orgId);this.layerInputPopover.itemBrowserAllowedGeometries=utils.makeAllowedGeometriesByType(this.layerFilterType);this.layerInputPopover.layerFilterType=this.layerFilterType;this.layerInputPopover.showNoticeMessage=this.showNoticeMessage;const helpTopic=this.user?.portal?.isPortal===true&&this.portalHelpMap!==undefined?this.portalHelpMap?.m[helpmap.helpMap.map.OtherHelpLinks.supportedData]:helpmap.helpMap.map.OtherHelpLinks.supportedData;const docLink=index2.formatLearnMoreHelpUrl({url:helpTopic,basePath:index2.getHelpBaseUrl(this.user?.portal),portalUrl:this.user?.portal?.restUrl});const filterMessages=this.warningMessageForPopover.map((messageKey=>index2.formatMessage(this.strings[messageKey],{docLink})));this.layerInputPopover.noticeMessage=[...this.noticeMessage,...filterMessages];this.layerInputPopover.placement="leading";this.layerInputPopover.dir=this.dir;this.layerInputPopover.hideBrowseButton=this.hideBrowseButton;this.layerInputPopover.referenceElement=clickTargetElement.parentElement??clickTargetElement;this.layerInputPopover.popoverWidth=clickTargetElement.parentElement?.offsetWidth;this.layerInputPopover.mapView=this.mapView;if(this.user!==undefined){this.layerInputPopover.user=this.user;this.layerInputPopover.portal=this.user?.portal}utils.addOpenableDomElement(document,this.layerInputPopover)}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get watchers(){return{mapLayers:["mapLayersChange"],selectedLayers:["selectedLayersChange"],layerFilterType:["layerFilterTypeChange"],featureCounts:["onFeatureCountChange"]}}static get style(){return analysisLayerInputCss}},[1,"analysis-layer-input",{value:[1040],label:[513],required:[516],validationParams:[16],user:[16],portalHelpMap:[16],mapLayers:[16],mapView:[16],selectionMode:[513,"selection-mode"],selectedLayers:[1040],selectedLayerIds:[1040],selectedLayerFeatureCount:[1026,"selected-layer-feature-count"],minimumFeatureCount:[2,"minimum-feature-count"],maximumFeatureCount:[2,"maximum-feature-count"],processedLayerProperties:[1040],layerFilterType:[1,"layer-filter-type"],descriptionDisplay:[513,"description-display"],hideBrowseButton:[516,"hide-browse-button"],selectedLayerIcon:[513,"selected-layer-icon"],featureCounts:[32],browsedLayers:[32],errorMessage:[32],checkValidity:[64]},undefined,{mapLayers:["mapLayersChange"],selectedLayers:["selectedLayersChange"],layerFilterType:["layerFilterTypeChange"],featureCounts:["onFeatureCountChange"]}]);function defineCustomElement(){if(typeof customElements==="undefined"){return}const components=["analysis-layer-input","analysis-item-browser","analysis-label","analysis-layer-input-popover"];components.forEach((tagName=>{switch(tagName){case"analysis-layer-input":if(!customElements.get(tagName)){customElements.define(tagName,AnalysisLayerInput)}break;case"analysis-item-browser":if(!customElements.get(tagName)){analysisItemBrowser2.defineCustomElement()}break;case"analysis-label":if(!customElements.get(tagName)){analysisLabel2.defineCustomElement()}break;case"analysis-layer-input-popover":if(!customElements.get(tagName)){analysisLayerInputPopover2.defineCustomElement()}break}}))}defineCustomElement();exports.AnalysisLayerInput=AnalysisLayerInput;exports.defineCustomElement=defineCustomElement}));
