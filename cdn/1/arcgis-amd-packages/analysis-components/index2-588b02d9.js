define(["require","exports","esri/request","esri/rest/support/ParameterValue","esri/core/urlUtils","esri/geometry/Point","esri/geometry/Polyline","esri/geometry/Polygon","esri/identity/IdentityManager","esri/core/reactiveUtils","esri/rest/support/Query","esri/core/promiseUtils","esri/portal/PortalItemResource","esri/layers/FeatureLayer","esri/geometry/support/jsonUtils","esri/layers/Layer","esri/portal/PortalItem","esri/layers/support/Field","esri/renderers/Renderer","esri/rest/support/FeatureSet","esri/config","esri/smartMapping/statistics/uniqueValues","esri/rest/support/JobInfo","esri/rest/geoprocessor","esri/core/sql"],(function(require,exports,esriRequest,ParameterValue,urlUtils,Point,Polyline,Polygon,esriId,reactiveUtils,Query,promiseUtils,PortalItemResource,FeatureLayer,geometryJsonUtils,Layer,PortalItem,Field,Renderer,FeatureSet,esriConfig,uniqueValues,JobInfo,geoprocessor,sql){"use strict";function _interopDefaultLegacy(e){return e&&typeof e==="object"&&"default"in e?e:{default:e}}function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);if(e){Object.keys(e).forEach((function(k){if(k!=="default"){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:function(){return e[k]}})}}))}n["default"]=e;return Object.freeze(n)}var esriRequest__default=_interopDefaultLegacy(esriRequest);var urlUtils__namespace=_interopNamespace(urlUtils);var Point__default=_interopDefaultLegacy(Point);var Polyline__default=_interopDefaultLegacy(Polyline);var Polygon__default=_interopDefaultLegacy(Polygon);var esriId__default=_interopDefaultLegacy(esriId);var reactiveUtils__namespace=_interopNamespace(reactiveUtils);var Query__default=_interopDefaultLegacy(Query);var promiseUtils__namespace=_interopNamespace(promiseUtils);var FeatureLayer__default=_interopDefaultLegacy(FeatureLayer);var geometryJsonUtils__namespace=_interopNamespace(geometryJsonUtils);var Layer__default=_interopDefaultLegacy(Layer);var PortalItem__default=_interopDefaultLegacy(PortalItem);var Field__default=_interopDefaultLegacy(Field);var Renderer__default=_interopDefaultLegacy(Renderer);var FeatureSet__default=_interopDefaultLegacy(FeatureSet);var esriConfig__default=_interopDefaultLegacy(esriConfig);var uniqueValues__default=_interopDefaultLegacy(uniqueValues);var geoprocessor__namespace=_interopNamespace(geoprocessor);var freeGlobal=typeof global=="object"&&global&&global.Object===Object&&global;var freeGlobal$1=freeGlobal;var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self;var root=freeGlobal$1||freeSelf||Function("return this")();var root$1=root;var Symbol$1=root$1.Symbol;var Symbol$2=Symbol$1;var objectProto$j=Object.prototype;var hasOwnProperty$h=objectProto$j.hasOwnProperty;var nativeObjectToString$1=objectProto$j.toString;var symToStringTag$1=Symbol$2?Symbol$2.toStringTag:undefined;function getRawTag(value){var isOwn=hasOwnProperty$h.call(value,symToStringTag$1),tag=value[symToStringTag$1];try{value[symToStringTag$1]=undefined;var unmasked=true}catch(e){}var result=nativeObjectToString$1.call(value);if(unmasked){if(isOwn){value[symToStringTag$1]=tag}else{delete value[symToStringTag$1]}}return result}var objectProto$i=Object.prototype;var nativeObjectToString=objectProto$i.toString;function objectToString(value){return nativeObjectToString.call(value)}var nullTag="[object Null]",undefinedTag="[object Undefined]";var symToStringTag=Symbol$2?Symbol$2.toStringTag:undefined;function baseGetTag(value){if(value==null){return value===undefined?undefinedTag:nullTag}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}function isObjectLike(value){return value!=null&&typeof value=="object"}var symbolTag$3="[object Symbol]";function isSymbol$2(value){return typeof value=="symbol"||isObjectLike(value)&&baseGetTag(value)==symbolTag$3}function arrayMap(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array)}return result}var isArray=Array.isArray;var isArray$1=isArray;var INFINITY$2=1/0;var symbolProto$2=Symbol$2?Symbol$2.prototype:undefined,symbolToString=symbolProto$2?symbolProto$2.toString:undefined;function baseToString(value){if(typeof value=="string"){return value}if(isArray$1(value)){return arrayMap(value,baseToString)+""}if(isSymbol$2(value)){return symbolToString?symbolToString.call(value):""}var result=value+"";return result=="0"&&1/value==-INFINITY$2?"-0":result}function isObject$1(value){var type=typeof value;return value!=null&&(type=="object"||type=="function")}function identity(value){return value}var asyncTag="[object AsyncFunction]",funcTag$2="[object Function]",genTag$1="[object GeneratorFunction]",proxyTag="[object Proxy]";function isFunction$1(value){if(!isObject$1(value)){return false}var tag=baseGetTag(value);return tag==funcTag$2||tag==genTag$1||tag==asyncTag||tag==proxyTag}var coreJsData=root$1["__core-js_shared__"];var coreJsData$1=coreJsData;var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData$1&&coreJsData$1.keys&&coreJsData$1.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:""}();function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}var funcProto$2=Function.prototype;var funcToString$2=funcProto$2.toString;function toSource(func){if(func!=null){try{return funcToString$2.call(func)}catch(e){}try{return func+""}catch(e){}}return""}var reRegExpChar=/[\\^$.*+?()[\]{}|]/g;var reIsHostCtor=/^\[object .+?Constructor\]$/;var funcProto$1=Function.prototype,objectProto$h=Object.prototype;var funcToString$1=funcProto$1.toString;var hasOwnProperty$g=objectProto$h.hasOwnProperty;var reIsNative=RegExp("^"+funcToString$1.call(hasOwnProperty$g).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative(value){if(!isObject$1(value)||isMasked(value)){return false}var pattern=isFunction$1(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value))}function getValue$1(object,key){return object==null?undefined:object[key]}function getNative(object,key){var value=getValue$1(object,key);return baseIsNative(value)?value:undefined}var WeakMap=getNative(root$1,"WeakMap");var WeakMap$1=WeakMap;var objectCreate=Object.create;var baseCreate=function(){function object(){}return function(proto){if(!isObject$1(proto)){return{}}if(objectCreate){return objectCreate(proto)}object.prototype=proto;var result=new object;object.prototype=undefined;return result}}();var baseCreate$1=baseCreate;function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2])}return func.apply(thisArg,args)}function noop$1(){}function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index]}return array}var HOT_COUNT=800,HOT_SPAN=16;var nativeNow=Date.now;function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0]}}else{count=0}return func.apply(undefined,arguments)}}function constant(value){return function(){return value}}var defineProperty$2=function(){try{var func=getNative(Object,"defineProperty");func({},"",{});return func}catch(e){}}();var defineProperty$3=defineProperty$2;var baseSetToString=!defineProperty$3?identity:function(func,string){return defineProperty$3(func,"toString",{configurable:true,enumerable:false,value:constant(string),writable:true})};var baseSetToString$1=baseSetToString;var setToString=shortOut(baseSetToString$1);var setToString$1=setToString;function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break}}return array}function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index}}return-1}function baseIsNaN(value){return value!==value}function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index}}return-1}function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex)}function arrayIncludes(array,value){var length=array==null?0:array.length;return!!length&&baseIndexOf(array,value,0)>-1}var MAX_SAFE_INTEGER$1=9007199254740991;var reIsUint=/^(?:0|[1-9]\d*)$/;function isIndex(value,length){var type=typeof value;length=length==null?MAX_SAFE_INTEGER$1:length;return!!length&&(type=="number"||type!="symbol"&&reIsUint.test(value))&&(value>-1&&value%1==0&&value<length)}function baseAssignValue(object,key,value){if(key=="__proto__"&&defineProperty$3){defineProperty$3(object,key,{configurable:true,enumerable:true,value,writable:true})}else{object[key]=value}}function eq(value,other){return value===other||value!==value&&other!==other}var objectProto$g=Object.prototype;var hasOwnProperty$f=objectProto$g.hasOwnProperty;function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty$f.call(object,key)&&eq(objValue,value))||value===undefined&&!(key in object)){baseAssignValue(object,key,value)}}function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];var newValue=customizer?customizer(object[key],source[key],key,object,source):undefined;if(newValue===undefined){newValue=source[key]}if(isNew){baseAssignValue(object,key,newValue)}else{assignValue(object,key,newValue)}}return object}var nativeMax=Math.max;function overRest(func,start,transform){start=nativeMax(start===undefined?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index]}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index]}otherArgs[start]=transform(array);return apply(func,this,otherArgs)}}function baseRest(func,start){return setToString$1(overRest(func,start,identity),func+"")}var MAX_SAFE_INTEGER=9007199254740991;function isLength(value){return typeof value=="number"&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER}function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction$1(value)}function isIterateeCall(value,index,object){if(!isObject$1(object)){return false}var type=typeof index;if(type=="number"?isArrayLike(object)&&isIndex(index,object.length):type=="string"&&index in object){return eq(object[index],value)}return false}function createAssigner(assigner){return baseRest((function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:undefined,guard=length>2?sources[2]:undefined;customizer=assigner.length>3&&typeof customizer=="function"?(length--,customizer):undefined;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=length<3?undefined:customizer;length=1}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer)}}return object}))}var objectProto$f=Object.prototype;function isPrototype$1(value){var Ctor=value&&value.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto$f;return value===proto}function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index)}return result}var argsTag$3="[object Arguments]";function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag$3}var objectProto$e=Object.prototype;var hasOwnProperty$e=objectProto$e.hasOwnProperty;var propertyIsEnumerable$1=objectProto$e.propertyIsEnumerable;var isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty$e.call(value,"callee")&&!propertyIsEnumerable$1.call(value,"callee")};var isArguments$1=isArguments;function stubFalse(){return false}var freeExports$2=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule$2=freeExports$2&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports$2=freeModule$2&&freeModule$2.exports===freeExports$2;var Buffer$1=moduleExports$2?root$1.Buffer:undefined;var nativeIsBuffer=Buffer$1?Buffer$1.isBuffer:undefined;var isBuffer=nativeIsBuffer||stubFalse;var isBuffer$1=isBuffer;var argsTag$2="[object Arguments]",arrayTag$2="[object Array]",boolTag$3="[object Boolean]",dateTag$3="[object Date]",errorTag$3="[object Error]",funcTag$1="[object Function]",mapTag$6="[object Map]",numberTag$3="[object Number]",objectTag$4="[object Object]",regexpTag$3="[object RegExp]",setTag$6="[object Set]",stringTag$3="[object String]",weakMapTag$2="[object WeakMap]";var arrayBufferTag$3="[object ArrayBuffer]",dataViewTag$4="[object DataView]",float32Tag$2="[object Float32Array]",float64Tag$2="[object Float64Array]",int8Tag$2="[object Int8Array]",int16Tag$2="[object Int16Array]",int32Tag$2="[object Int32Array]",uint8Tag$2="[object Uint8Array]",uint8ClampedTag$2="[object Uint8ClampedArray]",uint16Tag$2="[object Uint16Array]",uint32Tag$2="[object Uint32Array]";var typedArrayTags={};typedArrayTags[float32Tag$2]=typedArrayTags[float64Tag$2]=typedArrayTags[int8Tag$2]=typedArrayTags[int16Tag$2]=typedArrayTags[int32Tag$2]=typedArrayTags[uint8Tag$2]=typedArrayTags[uint8ClampedTag$2]=typedArrayTags[uint16Tag$2]=typedArrayTags[uint32Tag$2]=true;typedArrayTags[argsTag$2]=typedArrayTags[arrayTag$2]=typedArrayTags[arrayBufferTag$3]=typedArrayTags[boolTag$3]=typedArrayTags[dataViewTag$4]=typedArrayTags[dateTag$3]=typedArrayTags[errorTag$3]=typedArrayTags[funcTag$1]=typedArrayTags[mapTag$6]=typedArrayTags[numberTag$3]=typedArrayTags[objectTag$4]=typedArrayTags[regexpTag$3]=typedArrayTags[setTag$6]=typedArrayTags[stringTag$3]=typedArrayTags[weakMapTag$2]=false;function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)]}function baseUnary(func){return function(value){return func(value)}}var freeExports$1=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule$1=freeExports$1&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports$1=freeModule$1&&freeModule$1.exports===freeExports$1;var freeProcess=moduleExports$1&&freeGlobal$1.process;var nodeUtil=function(){try{var types=freeModule$1&&freeModule$1.require&&freeModule$1.require("util").types;if(types){return types}return freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}();var nodeUtil$1=nodeUtil;var nodeIsTypedArray=nodeUtil$1&&nodeUtil$1.isTypedArray;var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;var isTypedArray$1=isTypedArray;var objectProto$d=Object.prototype;var hasOwnProperty$d=objectProto$d.hasOwnProperty;function arrayLikeKeys(value,inherited){var isArr=isArray$1(value),isArg=!isArr&&isArguments$1(value),isBuff=!isArr&&!isArg&&isBuffer$1(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray$1(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty$d.call(value,key))&&!(skipIndexes&&(key=="length"||isBuff&&(key=="offset"||key=="parent")||isType&&(key=="buffer"||key=="byteLength"||key=="byteOffset")||isIndex(key,length)))){result.push(key)}}return result}function overArg(func,transform){return function(arg){return func(transform(arg))}}var nativeKeys=overArg(Object.keys,Object);var nativeKeys$1=nativeKeys;var objectProto$c=Object.prototype;var hasOwnProperty$c=objectProto$c.hasOwnProperty;function baseKeys(object){if(!isPrototype$1(object)){return nativeKeys$1(object)}var result=[];for(var key in Object(object)){if(hasOwnProperty$c.call(object,key)&&key!="constructor"){result.push(key)}}return result}function keys$3(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object)}var objectProto$b=Object.prototype;var hasOwnProperty$b=objectProto$b.hasOwnProperty;createAssigner((function(object,source){if(isPrototype$1(source)||isArrayLike(source)){copyObject(source,keys$3(source),object);return}for(var key in source){if(hasOwnProperty$b.call(source,key)){assignValue(object,key,source[key])}}}));function nativeKeysIn(object){var result=[];if(object!=null){for(var key in Object(object)){result.push(key)}}return result}var objectProto$a=Object.prototype;var hasOwnProperty$a=objectProto$a.hasOwnProperty;function baseKeysIn(object){if(!isObject$1(object)){return nativeKeysIn(object)}var isProto=isPrototype$1(object),result=[];for(var key in object){if(!(key=="constructor"&&(isProto||!hasOwnProperty$a.call(object,key)))){result.push(key)}}return result}function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,true):baseKeysIn(object)}var assignInWith=createAssigner((function(object,source,srcIndex,customizer){copyObject(source,keysIn(source),object,customizer)}));var extendWith=assignInWith;var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/;function isKey(value,object){if(isArray$1(value)){return false}var type=typeof value;if(type=="number"||type=="symbol"||type=="boolean"||value==null||isSymbol$2(value)){return true}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object)}var nativeCreate=getNative(Object,"create");var nativeCreate$1=nativeCreate;function hashClear(){this.__data__=nativeCreate$1?nativeCreate$1(null):{};this.size=0}function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result}var HASH_UNDEFINED$2="__lodash_hash_undefined__";var objectProto$9=Object.prototype;var hasOwnProperty$9=objectProto$9.hasOwnProperty;function hashGet(key){var data=this.__data__;if(nativeCreate$1){var result=data[key];return result===HASH_UNDEFINED$2?undefined:result}return hasOwnProperty$9.call(data,key)?data[key]:undefined}var objectProto$8=Object.prototype;var hasOwnProperty$8=objectProto$8.hasOwnProperty;function hashHas(key){var data=this.__data__;return nativeCreate$1?data[key]!==undefined:hasOwnProperty$8.call(data,key)}var HASH_UNDEFINED$1="__lodash_hash_undefined__";function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate$1&&value===undefined?HASH_UNDEFINED$1:value;return this}function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;function listCacheClear(){this.__data__=[];this.size=0}function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length}}return-1}var arrayProto=Array.prototype;var splice=arrayProto.splice;function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false}var lastIndex=data.length-1;if(index==lastIndex){data.pop()}else{splice.call(data,index,1)}--this.size;return true}function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1]}function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1}function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value])}else{data[index][1]=value}return this}function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;var Map$1=getNative(root$1,"Map");var Map$2=Map$1;function mapCacheClear(){this.size=0;this.__data__={hash:new Hash,map:new(Map$2||ListCache),string:new Hash}}function isKeyable(value){var type=typeof value;return type=="string"||type=="number"||type=="symbol"||type=="boolean"?value!=="__proto__":value===null}function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=="string"?"string":"hash"]:data.map}function mapCacheDelete(key){var result=getMapData(this,key)["delete"](key);this.size-=result?1:0;return result}function mapCacheGet(key){return getMapData(this,key).get(key)}function mapCacheHas(key){return getMapData(this,key).has(key)}function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this}function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;var FUNC_ERROR_TEXT$1="Expected a function";function memoize$2(func,resolver){if(typeof func!="function"||resolver!=null&&typeof resolver!="function"){throw new TypeError(FUNC_ERROR_TEXT$1)}var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key)}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result};memoized.cache=new(memoize$2.Cache||MapCache);return memoized}memoize$2.Cache=MapCache;var MAX_MEMOIZE_SIZE=500;function memoizeCapped(func){var result=memoize$2(func,(function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear()}return key}));var cache=result.cache;return result}var rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var reEscapeChar=/\\(\\)?/g;var stringToPath=memoizeCapped((function(string){var result=[];if(string.charCodeAt(0)===46){result.push("")}string.replace(rePropName,(function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,"$1"):number||match)}));return result}));var stringToPath$1=stringToPath;function toString(value){return value==null?"":baseToString(value)}function castPath(value,object){if(isArray$1(value)){return value}return isKey(value,object)?[value]:stringToPath$1(toString(value))}var INFINITY$1=1/0;function toKey(value){if(typeof value=="string"||isSymbol$2(value)){return value}var result=value+"";return result=="0"&&1/value==-INFINITY$1?"-0":result}function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])]}return index&&index==length?object:undefined}function get(object,path,defaultValue){var result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result}function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index]}return array}var spreadableSymbol=Symbol$2?Symbol$2.isConcatSpreadable:undefined;function isFlattenable(value){return isArray$1(value)||isArguments$1(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol])}function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){baseFlatten(value,depth-1,predicate,isStrict,result)}else{arrayPush(result,value)}}else if(!isStrict){result[result.length]=value}}return result}function flatten(array){var length=array==null?0:array.length;return length?baseFlatten(array,1):[]}function flatRest(func){return setToString$1(overRest(func,undefined,flatten),func+"")}var getPrototype=overArg(Object.getPrototypeOf,Object);var getPrototype$1=getPrototype;var objectTag$3="[object Object]";var funcProto=Function.prototype,objectProto$7=Object.prototype;var funcToString=funcProto.toString;var hasOwnProperty$7=objectProto$7.hasOwnProperty;var objectCtorString=funcToString.call(Object);function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!=objectTag$3){return false}var proto=getPrototype$1(value);if(proto===null){return true}var Ctor=hasOwnProperty$7.call(proto,"constructor")&&proto.constructor;return typeof Ctor=="function"&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString}var domExcTag="[object DOMException]",errorTag$2="[object Error]";function isError(value){if(!isObjectLike(value)){return false}var tag=baseGetTag(value);return tag==errorTag$2||tag==domExcTag||typeof value.message=="string"&&typeof value.name=="string"&&!isPlainObject(value)}var attempt=baseRest((function(func,args){try{return apply(func,undefined,args)}catch(e){return isError(e)?e:new Error(e)}}));var attempt$1=attempt;function baseSlice(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start}end=end>length?length:end;if(end<0){end+=length}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start]}return result}function basePropertyOf(object){return function(key){return object==null?undefined:object[key]}}function stackClear(){this.__data__=new ListCache;this.size=0}function stackDelete(key){var data=this.__data__,result=data["delete"](key);this.size=data.size;return result}function stackGet(key){return this.__data__.get(key)}function stackHas(key){return this.__data__.has(key)}var LARGE_ARRAY_SIZE$1=200;function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map$2||pairs.length<LARGE_ARRAY_SIZE$1-1){pairs.push([key,value]);this.size=++data.size;return this}data=this.__data__=new MapCache(pairs)}data.set(key,value);this.size=data.size;return this}function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size}Stack.prototype.clear=stackClear;Stack.prototype["delete"]=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;function baseAssign(object,source){return object&&copyObject(source,keys$3(source),object)}function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object)}var freeExports=typeof exports=="object"&&exports&&!exports.nodeType&&exports;var freeModule=freeExports&&typeof module=="object"&&module&&!module.nodeType&&module;var moduleExports=freeModule&&freeModule.exports===freeExports;var Buffer=moduleExports?root$1.Buffer:undefined,allocUnsafe=Buffer?Buffer.allocUnsafe:undefined;function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice()}var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result}function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value}}return result}function stubArray(){return[]}var objectProto$6=Object.prototype;var propertyIsEnumerable=objectProto$6.propertyIsEnumerable;var nativeGetSymbols$1=Object.getOwnPropertySymbols;var getSymbols=!nativeGetSymbols$1?stubArray:function(object){if(object==null){return[]}object=Object(object);return arrayFilter(nativeGetSymbols$1(object),(function(symbol){return propertyIsEnumerable.call(object,symbol)}))};var getSymbols$1=getSymbols;function copySymbols(source,object){return copyObject(source,getSymbols$1(source),object)}var nativeGetSymbols=Object.getOwnPropertySymbols;var getSymbolsIn=!nativeGetSymbols?stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols$1(object));object=getPrototype$1(object)}return result};var getSymbolsIn$1=getSymbolsIn;function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn$1(source),object)}function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray$1(object)?result:arrayPush(result,symbolsFunc(object))}function getAllKeys(object){return baseGetAllKeys(object,keys$3,getSymbols$1)}function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn$1)}var DataView=getNative(root$1,"DataView");var DataView$1=DataView;var Promise$1=getNative(root$1,"Promise");var Promise$2=Promise$1;var Set$1=getNative(root$1,"Set");var Set$2=Set$1;var mapTag$5="[object Map]",objectTag$2="[object Object]",promiseTag="[object Promise]",setTag$5="[object Set]",weakMapTag$1="[object WeakMap]";var dataViewTag$3="[object DataView]";var dataViewCtorString=toSource(DataView$1),mapCtorString=toSource(Map$2),promiseCtorString=toSource(Promise$2),setCtorString=toSource(Set$2),weakMapCtorString=toSource(WeakMap$1);var getTag=baseGetTag;if(DataView$1&&getTag(new DataView$1(new ArrayBuffer(1)))!=dataViewTag$3||Map$2&&getTag(new Map$2)!=mapTag$5||Promise$2&&getTag(Promise$2.resolve())!=promiseTag||Set$2&&getTag(new Set$2)!=setTag$5||WeakMap$1&&getTag(new WeakMap$1)!=weakMapTag$1){getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag$2?value.constructor:undefined,ctorString=Ctor?toSource(Ctor):"";if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag$3;case mapCtorString:return mapTag$5;case promiseCtorString:return promiseTag;case setCtorString:return setTag$5;case weakMapCtorString:return weakMapTag$1}}return result}}var getTag$1=getTag;var objectProto$5=Object.prototype;var hasOwnProperty$6=objectProto$5.hasOwnProperty;function initCloneArray(array){var length=array.length,result=new array.constructor(length);if(length&&typeof array[0]=="string"&&hasOwnProperty$6.call(array,"index")){result.index=array.index;result.input=array.input}return result}var Uint8Array=root$1.Uint8Array;var Uint8Array$1=Uint8Array;function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array$1(result).set(new Uint8Array$1(arrayBuffer));return result}function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength)}var reFlags=/\w*$/;function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result}var symbolProto$1=Symbol$2?Symbol$2.prototype:undefined,symbolValueOf$1=symbolProto$1?symbolProto$1.valueOf:undefined;function cloneSymbol(symbol){return symbolValueOf$1?Object(symbolValueOf$1.call(symbol)):{}}function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length)}var boolTag$2="[object Boolean]",dateTag$2="[object Date]",mapTag$4="[object Map]",numberTag$2="[object Number]",regexpTag$2="[object RegExp]",setTag$4="[object Set]",stringTag$2="[object String]",symbolTag$2="[object Symbol]";var arrayBufferTag$2="[object ArrayBuffer]",dataViewTag$2="[object DataView]",float32Tag$1="[object Float32Array]",float64Tag$1="[object Float64Array]",int8Tag$1="[object Int8Array]",int16Tag$1="[object Int16Array]",int32Tag$1="[object Int32Array]",uint8Tag$1="[object Uint8Array]",uint8ClampedTag$1="[object Uint8ClampedArray]",uint16Tag$1="[object Uint16Array]",uint32Tag$1="[object Uint32Array]";function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag$2:return cloneArrayBuffer(object);case boolTag$2:case dateTag$2:return new Ctor(+object);case dataViewTag$2:return cloneDataView(object,isDeep);case float32Tag$1:case float64Tag$1:case int8Tag$1:case int16Tag$1:case int32Tag$1:case uint8Tag$1:case uint8ClampedTag$1:case uint16Tag$1:case uint32Tag$1:return cloneTypedArray(object,isDeep);case mapTag$4:return new Ctor;case numberTag$2:case stringTag$2:return new Ctor(object);case regexpTag$2:return cloneRegExp(object);case setTag$4:return new Ctor;case symbolTag$2:return cloneSymbol(object)}}function initCloneObject(object){return typeof object.constructor=="function"&&!isPrototype$1(object)?baseCreate$1(getPrototype$1(object)):{}}var mapTag$3="[object Map]";function baseIsMap(value){return isObjectLike(value)&&getTag$1(value)==mapTag$3}var nodeIsMap=nodeUtil$1&&nodeUtil$1.isMap;var isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;var isMap$1=isMap;var setTag$3="[object Set]";function baseIsSet(value){return isObjectLike(value)&&getTag$1(value)==setTag$3}var nodeIsSet=nodeUtil$1&&nodeUtil$1.isSet;var isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;var isSet$1=isSet;var CLONE_DEEP_FLAG$2=1,CLONE_FLAT_FLAG$1=2,CLONE_SYMBOLS_FLAG$2=4;var argsTag$1="[object Arguments]",arrayTag$1="[object Array]",boolTag$1="[object Boolean]",dateTag$1="[object Date]",errorTag$1="[object Error]",funcTag="[object Function]",genTag="[object GeneratorFunction]",mapTag$2="[object Map]",numberTag$1="[object Number]",objectTag$1="[object Object]",regexpTag$1="[object RegExp]",setTag$2="[object Set]",stringTag$1="[object String]",symbolTag$1="[object Symbol]",weakMapTag="[object WeakMap]";var arrayBufferTag$1="[object ArrayBuffer]",dataViewTag$1="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]";var cloneableTags={};cloneableTags[argsTag$1]=cloneableTags[arrayTag$1]=cloneableTags[arrayBufferTag$1]=cloneableTags[dataViewTag$1]=cloneableTags[boolTag$1]=cloneableTags[dateTag$1]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag$2]=cloneableTags[numberTag$1]=cloneableTags[objectTag$1]=cloneableTags[regexpTag$1]=cloneableTags[setTag$2]=cloneableTags[stringTag$1]=cloneableTags[symbolTag$1]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag$1]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false;function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG$2,isFlat=bitmask&CLONE_FLAT_FLAG$1,isFull=bitmask&CLONE_SYMBOLS_FLAG$2;if(customizer){result=object?customizer(value,key,object,stack):customizer(value)}if(result!==undefined){return result}if(!isObject$1(value)){return value}var isArr=isArray$1(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result)}}else{var tag=getTag$1(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer$1(value)){return cloneBuffer(value,isDeep)}if(tag==objectTag$1||tag==argsTag$1||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep){return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value))}}else{if(!cloneableTags[tag]){return object?value:{}}result=initCloneByTag(value,tag,isDeep)}}stack||(stack=new Stack);var stacked=stack.get(value);if(stacked){return stacked}stack.set(value,result);if(isSet$1(value)){value.forEach((function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack))}))}else if(isMap$1(value)){value.forEach((function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack))}))}var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys$3;var props=isArr?undefined:keysFunc(value);arrayEach(props||value,(function(subValue,key){if(props){key=subValue;subValue=value[key]}assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack))}));return result}var CLONE_DEEP_FLAG$1=1,CLONE_SYMBOLS_FLAG$1=4;function cloneDeep(value){return baseClone(value,CLONE_DEEP_FLAG$1|CLONE_SYMBOLS_FLAG$1)}var HASH_UNDEFINED="__lodash_hash_undefined__";function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this}function setCacheHas(value){return this.__data__.has(value)}function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache;while(++index<length){this.add(values[index])}}SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true}}return false}function cacheHas(cache,key){return cache.has(key)}var COMPARE_PARTIAL_FLAG$5=1,COMPARE_UNORDERED_FLAG$3=2;function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$5,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false}var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array}var index=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG$3?new SetCache:undefined;stack.set(array,other);stack.set(other,array);while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack)}if(compared!==undefined){if(compared){continue}result=false;break}if(seen){if(!arraySome(other,(function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex)}}))){result=false;break}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break}}stack["delete"](array);stack["delete"](other);return result}function mapToArray(map){var index=-1,result=Array(map.size);map.forEach((function(value,key){result[++index]=[key,value]}));return result}function setToArray(set){var index=-1,result=Array(set.size);set.forEach((function(value){result[++index]=value}));return result}var COMPARE_PARTIAL_FLAG$4=1,COMPARE_UNORDERED_FLAG$2=2;var boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",mapTag$1="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag$1="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]";var arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]";var symbolProto=Symbol$2?Symbol$2.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined;function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array$1(object),new Uint8Array$1(other))){return false}return true;case boolTag:case dateTag:case numberTag:return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:return object==other+"";case mapTag$1:var convert=mapToArray;case setTag$1:var isPartial=bitmask&COMPARE_PARTIAL_FLAG$4;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false}var stacked=stack.get(object);if(stacked){return stacked==other}bitmask|=COMPARE_UNORDERED_FLAG$2;stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack["delete"](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other)}}return false}var COMPARE_PARTIAL_FLAG$3=1;var objectProto$4=Object.prototype;var hasOwnProperty$5=objectProto$4.hasOwnProperty;function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG$3,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty$5.call(other,key))){return false}}var objStacked=stack.get(object);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack)}if(!(compared===undefined?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break}skipCtor||(skipCtor=key=="constructor")}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;if(objCtor!=othCtor&&("constructor"in object&&"constructor"in other)&&!(typeof objCtor=="function"&&objCtor instanceof objCtor&&typeof othCtor=="function"&&othCtor instanceof othCtor)){result=false}}stack["delete"](object);stack["delete"](other);return result}var COMPARE_PARTIAL_FLAG$2=1;var argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]";var objectProto$3=Object.prototype;var hasOwnProperty$4=objectProto$3.hasOwnProperty;function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray$1(object),othIsArr=isArray$1(other),objTag=objIsArr?arrayTag:getTag$1(object),othTag=othIsArr?arrayTag:getTag$1(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer$1(object)){if(!isBuffer$1(other)){return false}objIsArr=true;objIsObj=false}if(isSameTag&&!objIsObj){stack||(stack=new Stack);return objIsArr||isTypedArray$1(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack)}if(!(bitmask&COMPARE_PARTIAL_FLAG$2)){var objIsWrapped=objIsObj&&hasOwnProperty$4.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty$4.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack);return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack)}}if(!isSameTag){return false}stack||(stack=new Stack);return equalObjects(object,other,bitmask,customizer,equalFunc,stack)}function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack)}var COMPARE_PARTIAL_FLAG$1=1,COMPARE_UNORDERED_FLAG$1=2;function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return!length}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined&&!(key in object)){return false}}else{var stack=new Stack;if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack)}if(!(result===undefined?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG$1|COMPARE_UNORDERED_FLAG$1,customizer,stack):result)){return false}}}return true}function isStrictComparable(value){return value===value&&!isObject$1(value)}function getMatchData(object){var result=keys$3(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)]}return result}function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false}return object[key]===srcValue&&(srcValue!==undefined||key in Object(object))}}function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1])}return function(object){return object===source||baseIsMatch(object,source,matchData)}}function baseHasIn(object,key){return object!=null&&key in Object(object)}function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break}object=object[key]}if(result||++index!=length){return result}length=object==null?0:object.length;return!!length&&isLength(length)&&isIndex(key,length)&&(isArray$1(object)||isArguments$1(object))}function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn)}var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue)}return function(object){var objValue=get(object,path);return objValue===undefined&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG)}}function baseProperty(key){return function(object){return object==null?undefined:object[key]}}function basePropertyDeep(path){return function(object){return baseGet(object,path)}}function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path)}function baseIteratee(value){if(typeof value=="function"){return value}if(value==null){return identity}if(typeof value=="object"){return isArray$1(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value)}return property(value)}function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value)}function arrayIncludesWith(array,value,comparator){var index=-1,length=array==null?0:array.length;while(++index<length){if(comparator(value,array[index])){return true}}return false}function last(array){var length=array==null?0:array.length;return length?array[length-1]:undefined}var htmlEscapes={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};var escapeHtmlChar=basePropertyOf(htmlEscapes);var escapeHtmlChar$1=escapeHtmlChar;var reUnescapedHtml=/[&<>"']/g,reHasUnescapedHtml=RegExp(reUnescapedHtml.source);function escape(string){string=toString(string);return string&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar$1):string}function baseValues(object,props){return arrayMap(props,(function(key){return object[key]}))}var nativeMin=Math.min;function baseIntersection(arrays,iteratee,comparator){var includes=comparator?arrayIncludesWith:arrayIncludes,length=arrays[0].length,othLength=arrays.length,othIndex=othLength,caches=Array(othLength),maxLength=Infinity,result=[];while(othIndex--){var array=arrays[othIndex];if(othIndex&&iteratee){array=arrayMap(array,baseUnary(iteratee))}maxLength=nativeMin(array.length,maxLength);caches[othIndex]=!comparator&&(iteratee||length>=120&&array.length>=120)?new SetCache(othIndex&&array):undefined}array=arrays[0];var index=-1,seen=caches[0];outer:while(++index<length&&result.length<maxLength){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(!(seen?cacheHas(seen,computed):includes(result,computed,comparator))){othIndex=othLength;while(--othIndex){var cache=caches[othIndex];if(!(cache?cacheHas(cache,computed):includes(arrays[othIndex],computed,comparator))){continue outer}}if(seen){seen.push(computed)}result.push(value)}}return result}function castArrayLikeObject(value){return isArrayLikeObject(value)?value:[]}var intersectionBy=baseRest((function(arrays){var iteratee=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(iteratee===last(mapped)){iteratee=undefined}else{mapped.pop()}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,baseIteratee(iteratee)):[]}));var intersectionBy$1=intersectionBy;function parent(object,path){return path.length<2?object:baseGet(object,baseSlice(path,0,-1))}var mapTag="[object Map]",setTag="[object Set]";var objectProto$2=Object.prototype;var hasOwnProperty$3=objectProto$2.hasOwnProperty;function isEmpty(value){if(value==null){return true}if(isArrayLike(value)&&(isArray$1(value)||typeof value=="string"||typeof value.splice=="function"||isBuffer$1(value)||isTypedArray$1(value)||isArguments$1(value))){return!value.length}var tag=getTag$1(value);if(tag==mapTag||tag==setTag){return!value.size}if(isPrototype$1(value)){return!baseKeys(value).length}for(var key in value){if(hasOwnProperty$3.call(value,key)){return false}}return true}function baseUnset(object,path){path=castPath(path,object);object=parent(object,path);return object==null||delete object[toKey(last(path))]}function customOmitClone(value){return isPlainObject(value)?undefined:value}var CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4;var omit=flatRest((function(object,paths){var result={};if(object==null){return result}var isDeep=false;paths=arrayMap(paths,(function(path){path=castPath(path,object);isDeep||(isDeep=path.length>1);return path}));copyObject(object,getAllKeysIn(object),result);if(isDeep){result=baseClone(result,CLONE_DEEP_FLAG|CLONE_FLAT_FLAG|CLONE_SYMBOLS_FLAG,customOmitClone)}var length=paths.length;while(length--){baseUnset(result,paths[length])}return result}));var omit$1=omit;function baseSet(object,path,value,customizer){if(!isObject$1(object)){return object}path=castPath(path,object);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(nested!=null&&++index<length){var key=toKey(path[index]),newValue=value;if(key==="__proto__"||key==="constructor"||key==="prototype"){return object}if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):undefined;if(newValue===undefined){newValue=isObject$1(objValue)?objValue:isIndex(path[index+1])?[]:{}}}assignValue(nested,key,newValue);nested=nested[key]}return object}function basePickBy(object,paths,predicate){var index=-1,length=paths.length,result={};while(++index<length){var path=paths[index],value=baseGet(object,path);if(predicate(value,path)){baseSet(result,castPath(path,object),value)}}return result}function basePick(object,paths){return basePickBy(object,paths,(function(value,path){return hasIn(object,path)}))}flatRest((function(object,paths){return object==null?{}:basePick(object,paths)}));var objectProto$1=Object.prototype;var hasOwnProperty$2=objectProto$1.hasOwnProperty;function customDefaultsAssignIn(objValue,srcValue,key,object){if(objValue===undefined||eq(objValue,objectProto$1[key])&&!hasOwnProperty$2.call(object,key)){return srcValue}return objValue}var stringEscapes={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"};function escapeStringChar(chr){return"\\"+stringEscapes[chr]}var reInterpolate=/<%=([\s\S]+?)%>/g;var reInterpolate$1=reInterpolate;var reEscape=/<%-([\s\S]+?)%>/g;var reEscape$1=reEscape;var reEvaluate=/<%([\s\S]+?)%>/g;var reEvaluate$1=reEvaluate;var templateSettings={escape:reEscape$1,evaluate:reEvaluate$1,interpolate:reInterpolate$1,variable:"",imports:{_:{escape}}};var templateSettings$1=templateSettings;var INVALID_TEMPL_VAR_ERROR_TEXT="Invalid `variable` option passed into `_.template`";var reEmptyStringLeading=/\b__p \+= '';/g,reEmptyStringMiddle=/\b(__p \+=) '' \+/g,reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;var reForbiddenIdentifierChars=/[()=,{}\[\]\/\s]/;var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;var reNoMatch=/($^)/;var reUnescapedString=/['\n\r\u2028\u2029\\]/g;var objectProto=Object.prototype;var hasOwnProperty$1=objectProto.hasOwnProperty;function template(string,options,guard){var settings=templateSettings$1.imports._.templateSettings||templateSettings$1;if(guard&&isIterateeCall(string,options,guard)){options=undefined}string=toString(string);options=extendWith({},options,settings,customDefaultsAssignIn);var imports=extendWith({},options.imports,settings.imports,customDefaultsAssignIn),importsKeys=keys$3(imports),importsValues=baseValues(imports,importsKeys);var isEscaping,isEvaluating,index=0,interpolate=options.interpolate||reNoMatch,source="__p += '";var reDelimiters=RegExp((options.escape||reNoMatch).source+"|"+interpolate.source+"|"+(interpolate===reInterpolate$1?reEsTemplate:reNoMatch).source+"|"+(options.evaluate||reNoMatch).source+"|$","g");var sourceURL=hasOwnProperty$1.call(options,"sourceURL")?"//# sourceURL="+(options.sourceURL+"").replace(/\s/g," ")+"\n":"";string.replace(reDelimiters,(function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue||(interpolateValue=esTemplateValue);source+=string.slice(index,offset).replace(reUnescapedString,escapeStringChar);if(escapeValue){isEscaping=true;source+="' +\n__e("+escapeValue+") +\n'"}if(evaluateValue){isEvaluating=true;source+="';\n"+evaluateValue+";\n__p += '"}if(interpolateValue){source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'"}index=offset+match.length;return match}));source+="';\n";var variable=hasOwnProperty$1.call(options,"variable")&&options.variable;if(!variable){source="with (obj) {\n"+source+"\n}\n"}else if(reForbiddenIdentifierChars.test(variable)){throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT)}source=(isEvaluating?source.replace(reEmptyStringLeading,""):source).replace(reEmptyStringMiddle,"$1").replace(reEmptyStringTrailing,"$1;");source="function("+(variable||"obj")+") {\n"+(variable?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(isEscaping?", __e = _.escape":"")+(isEvaluating?", __j = Array.prototype.join;\n"+"function print() { __p += __j.call(arguments, '') }\n":";\n")+source+"return __p\n}";var result=attempt$1((function(){return Function(importsKeys,sourceURL+"return "+source).apply(undefined,importsValues)}));result.source=source;if(isError(result)){throw result}return result}function toPath(value){if(isArray$1(value)){return arrayMap(value,toKey)}return isSymbol$2(value)?[value]:copyArray(stringToPath$1(toString(value)))}var INFINITY=1/0;var createSet=!(Set$2&&1/setToArray(new Set$2([,-0]))[1]==INFINITY)?noop$1:function(values){return new Set$2(values)};var createSet$1=createSet;var LARGE_ARRAY_SIZE=200;function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet$1(array);if(set){return setToArray(set)}isCommon=false;includes=cacheHas;seen=new SetCache}else{seen=iteratee?[]:result}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer}}if(iteratee){seen.push(computed)}result.push(value)}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed)}result.push(value)}}return result}var unionBy=baseRest((function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),baseIteratee(iteratee))}));var unionBy$1=unionBy;const UIInputStatus={IDLE:"idle",VALID:"valid",INVALID:"invalid"};function isValidNumber(value){return value!==undefined&&value!==null&&Number.isNaN(value)===false&&Number.isFinite(value)===true}function zip(array1,array2){return array1.map(((a,index)=>[a,array2[index]]))}function areThereDuplicates(arr){return new Set(arr).size!==arr.length}function isEveryPropertyEmpty(value){let isAllPropsEmpty=true;if(typeof value==="object"&&isArray$1(value)===false){for(const prop in value){const propValue=value?.[prop];if(value.hasOwnProperty(prop)===true&&propValue!==undefined&&propValue!==null&&propValue!==""){isAllPropsEmpty=false;break}}}return isAllPropsEmpty}function isEmptyDataItem(value){return value===undefined||value===null||typeof value==="string"&&value===""||isPlainObject(value)&&isEmpty(value)||Array.isArray(value)&&value.length<1||typeof value==="object"&&isArray$1(value)===false&&isEveryPropertyEmpty(value)}async function request(url,options){return esriRequest__default["default"](url,options)}const flattenObject=obj=>{const flattened={};Object.keys(obj).forEach((key=>{const value=obj[key];if(typeof value==="object"){Object.assign(flattened,flattenObject(value))}else{flattened[key]=value}}));return flattened};function setImmutableValue(obj,path,value){const pathArray=Array.isArray(path)?path:toPath(path);const newObj={...obj};let current=newObj;for(let i=0;i<pathArray.length-1;i++){const key=pathArray[i];const nextKeyIsNumber=isValidNumber(Number(pathArray[i+1]));const shouldResetValue=Array.isArray(current[key])!==nextKeyIsNumber;if(current[key]===undefined||shouldResetValue){current[key]=nextKeyIsNumber?[]:{}}current[key]=nextKeyIsNumber?[...current[key]]:{...current[key]};current=current[key]}current[pathArray[pathArray.length-1]]=value;return newObj}function getRegExFromString(regexString){let regexLiteral;const regexParts=/^\/(.*?)\/([a-z]*)$/.exec(regexString);const pattern=regexParts?.[1];const flags=regexParts?.[2];if(!isEmptyDataItem(pattern)){regexLiteral=new RegExp(pattern,flags)}return regexLiteral}function formatValidationParamsMessage(validationParams){const{message,variables}=validationParams??{};const validationParamsMessage=message!==undefined?formatMessage(message,variables??{}):undefined;return validationParamsMessage}function getValidationParamsMessageFromErrorKey(errorMessages,validationParams){const{key,message:originalMessage,...rest}=validationParams??{};const errorKey=key??"";const message=errorMessages[errorKey]??validationParams?.[errorKey]??originalMessage;return{...rest,message}}function getUIInputStatusFromMessageType(messageType){const status=messageType==="informative"?UIInputStatus.IDLE:UIInputStatus.INVALID;return status}const SupportedLocales={Arabic:"ar",Bosnian:"bs",Bulgarian:"bg",Catalan:"ca",Czech:"cs",Danish:"da",German:"de",Greek:"el",English:"en",EnglishUSA:"en-US",Spanish:"es",Estonian:"et",Finnish:"fi",French:"fr",Hebrew:"he",Croatian:"hr",Hungarian:"hu",Indonesian:"id",Italian:"it",Japanese:"ja",Korean:"ko",Lithuanian:"lt",Latvian:"lv",NorwegianBokml:"nb",Dutch:"nl",Polish:"pl",PortugueseBrazil:"pt-BR",PortuguesePortugal:"pt-PT",Romanian:"ro",Russian:"ru",Serbian:"sr",Slovenian:"sl",Slovak:"sk",Swedish:"sv",Thai:"th",Turkish:"tr",Ukrainian:"uk",Vietnamese:"vi",ChineseChina:"zh-CN",ChineseHongKong:"zh-HK",ChineseTaiwan:"zh-TW"};const SupportedLocalesForFormats=[...Object.values(SupportedLocales),"ar-u-nu-latn","en-AU","en-GB","es-ES","es-MX","de-AT","de-CH","de-DE","it-CH","it-IT"];const RTLLocales=[SupportedLocales.Arabic,SupportedLocales.Hebrew];const SupportedOnlineHelpLocales=["ar","de","es","fr","it","ja","ko","ru","pl","pt-br","zh-cn"];function formatMessage(statement,parameters){const templateFn=template(statement);return templateFn(parameters)}function extractLanguageTag(locale){const localeCodeRegex=/^([a-z]{2})-([A-Z]{1,2})$/;const match=locale?.match(localeCodeRegex);let output=SupportedLocales.English;if(match!==null&&match!==undefined&&match?.length>1){output=match[1]}else if(locale?.length===2&&locale.toLowerCase()===locale){output=locale}return output}function convertToSupportedLocale(locale){let output=SupportedLocales.English;if(locale!==undefined){const supportedLocales=Object.values(SupportedLocales);const hyphenatedSupportedLocales=supportedLocales.filter((ele=>ele.indexOf("-")!==-1));if(locale.indexOf("-")!==-1){const[lang,region]=locale.split("-");locale=`${lang}-${region.toUpperCase()}`}if(hyphenatedSupportedLocales.includes(locale)===true){output=locale}else{const languageTag=extractLanguageTag(locale);if(supportedLocales.includes(languageTag)===true){output=languageTag}}}return output}function convertToSupportedFormatLocale(locale){let formatLocale=SupportedLocalesForFormats.find((item=>item===locale));if(formatLocale===undefined){formatLocale=locale}if(formatLocale!==undefined&&formatLocale.indexOf("-")!==-1){const[lang,region]=formatLocale.split("-");formatLocale=`${lang}-${region.toUpperCase()}`}if(formatLocale==="ar"){formatLocale="ar-u-nu-latn"}return formatLocale}function getClosestElement(selector,base){function closestFrom(el){let element;if(el===undefined||el===document||el===window)element=null;else{const found=el.closest(selector);element=found||closestFrom(el.getRootNode().host)}return element}return closestFrom(base)}function getLocaleInfo(element=document.documentElement){const closestElement=getClosestElement("[lang]",element);const locale=closestElement?.lang??window.navigator.language;const convertedLocale=convertToSupportedLocale(locale);const formatLocale=convertToSupportedFormatLocale(locale);return{locale:convertedLocale,rtl:RTLLocales.includes(convertedLocale),formatLocale}}async function fetchLocaleStrings(props){const{path,locale,baseURL}=props;let localeData={};try{const response=await fetch(`${baseURL}t9n/${path}.t9n.${locale}.json`);localeData=await response.json()}catch(e){const defaultResponse=await fetch(`${baseURL}t9n/${path}.t9n.${SupportedLocales.English}.json`);localeData=await defaultResponse.json()}return localeData}async function fetchComponentLocaleStrings(element,baseURL){const componentName=element.tagName.toLowerCase();const{locale,rtl}=getLocaleInfo(element);const strings=await fetchLocaleStrings({path:componentName,locale,baseURL});return{strings,dir:rtl===true?"rtl":"ltr",locale}}function fetchLanguageDirection(element){const{rtl}=getLocaleInfo(element);return rtl===true?"rtl":"ltr"}function fixUrlForDemoApp(learnMoreUrl,portalUrl){const absoluteURLPattern=/^(?:[a-z]+:)?\/\//i;if(absoluteURLPattern.test(learnMoreUrl)===false){const currentUrl=window.location.href;const currentOrigin=new URL(currentUrl).origin;const portalOrigin=new URL(portalUrl).origin;if(currentOrigin!==portalOrigin){learnMoreUrl=`${portalOrigin}${learnMoreUrl}`}}return learnMoreUrl}function formatLearnMoreHelpUrl(params){const{locale="en",portalUrl,url}=params;let{basePath}=params;if(locale==="en-US"){basePath=basePath.replace("/en-US/","/en/")}const localeInLowerCase=locale.toLocaleLowerCase();if(SupportedOnlineHelpLocales.includes(localeInLowerCase)===true){basePath=basePath.replace(/^https?:\/\/[^/]+\/en/,(match=>match.replace("en",localeInLowerCase)))}return portalUrl!==undefined?fixUrlForDemoApp(`${basePath}${url}`,portalUrl):`${basePath}${url}`}function formatNumberToLocale(value,formatOptions){let formattedValue="";if(!isEmptyDataItem(value)&&!Number.isNaN(value)){const localeCode=getLocaleInfo().formatLocale;formattedValue=Intl.NumberFormat(localeCode,formatOptions).format(Number(value))}return formattedValue}class ArcgisWebAnalysisError extends Error{constructor(name,message,details,cause){super(message);this.name=name;this.details=details;this.cause=cause}}function wasAborted(error){return error instanceof Error&&error.name==="AbortError"}const DEFAULT_ERROR_KEY="default";const ErrorKeywords={Default:"defaultError",CannotReopenTool:"cannotReopenTool",CannotReopenWebTool:"cannotReopenWebTool",CreditEstimationError:"creditEstimationError",CreditThresholdExceededError:"creditThresholdExceededError",CreditEstimationExecutionFailure:"failedToExecuteEstimate",InsufficientCreditsError:"InsufficientCreditsError",KeyPropertiesError:"keyPropertiesError",LayerLoadFailure:"layerLoadFailure",LayerUnavailable:"layerUnavailable",NetworkError:"networkError",PortalLoadError:"portalLoadError",QueryFeaturesError:"queryFeaturesError",ServiceNameExistsError:"serviceNameExistsError",SpecialCharactersInServiceNameError:"specialCharactersInServiceNameError",ToolValidationError:"toolValidationError",WebToolFailedFetch:"webToolFailedFetch",WebToolJSONChanged:"webToolJSONChanged",WebToolPermissionsError:"missingPermissionForWebTool"};function sanitizeNumber(value,defaultValue){let returnedValue;if(value!==null){const testedValue=typeof value==="string"?Number.parseFloat(value):value;if(isValidNumber(testedValue))returnedValue=testedValue;else if(isValidNumber(defaultValue))returnedValue=defaultValue}return returnedValue===undefined?"":`${returnedValue}`}function parseNumber(value){if(value==="")return undefined;return Number.parseFloat(value)}var isImplemented$4=function(){if(typeof globalThis!=="object")return false;if(!globalThis)return false;return globalThis.Array===Array};var naiveFallback=function(){if(typeof self==="object"&&self)return self;if(typeof window==="object"&&window)return window;throw new Error("Unable to resolve global `this`")};var implementation=function(){if(this)return this;try{Object.defineProperty(Object.prototype,"__global__",{get:function(){return this},configurable:true})}catch(error){return naiveFallback()}try{if(!__global__)return naiveFallback();return __global__}finally{delete Object.prototype.__global__}}();var globalThis_1=isImplemented$4()?globalThis:implementation;var global$1=globalThis_1,validTypes={object:true,symbol:true};var isImplemented$3=function(){var Symbol=global$1.Symbol;if(typeof Symbol!=="function")return false;Symbol("test symbol");if(!validTypes[typeof Symbol.iterator])return false;if(!validTypes[typeof Symbol.toPrimitive])return false;if(!validTypes[typeof Symbol.toStringTag])return false;return true};var d$5={exports:{}};var _undefined$1=void 0;var is$4=function(value){return value!==_undefined$1&&value!==null};var isValue$5=is$4;var possibleTypes={object:true,function:true,undefined:true};var is$3=function(value){if(!isValue$5(value))return false;return hasOwnProperty.call(possibleTypes,typeof value)};var isObject=is$3;var is$2=function(value){if(!isObject(value))return false;try{if(!value.constructor)return false;return value.constructor.prototype===value}catch(error){return false}};var isPrototype=is$2;var is$1=function(value){if(typeof value!=="function")return false;if(!hasOwnProperty.call(value,"length"))return false;try{if(typeof value.length!=="number")return false;if(typeof value.call!=="function")return false;if(typeof value.apply!=="function")return false}catch(error){return false}return!isPrototype(value)};var isFunction=is$1;var classRe=/^\s*class[\s{/}]/,functionToString=Function.prototype.toString;var is=function(value){if(!isFunction(value))return false;if(classRe.test(functionToString.call(value)))return false;return true};var isImplemented$2=function(){var assign=Object.assign,obj;if(typeof assign!=="function")return false;obj={foo:"raz"};assign(obj,{bar:"dwa"},{trzy:"trzy"});return obj.foo+obj.bar+obj.trzy==="razdwatrzy"};var isImplemented$1=function(){try{return true}catch(e){return false}};var noop=function(){};var _undefined=noop();var isValue$4=function(val){return val!==_undefined&&val!==null};var isValue$3=isValue$4;var keys$2=Object.keys;var shim$2=function(object){return keys$2(isValue$3(object)?Object(object):object)};var keys$1=isImplemented$1()?Object.keys:shim$2;var isValue$2=isValue$4;var validValue=function(value){if(!isValue$2(value))throw new TypeError("Cannot use null or undefined");return value};var keys=keys$1,value=validValue,max=Math.max;var shim$1=function(dest,src){var error,i,length=max(arguments.length,2),assign;dest=Object(value(dest));assign=function(key){try{dest[key]=src[key]}catch(e){if(!error)error=e}};for(i=1;i<length;++i){src=arguments[i];keys(src).forEach(assign)}if(error!==undefined)throw error;return dest};var assign$1=isImplemented$2()?Object.assign:shim$1;var isValue$1=isValue$4;var forEach=Array.prototype.forEach,create$2=Object.create;var process=function(src,obj){var key;for(key in src)obj[key]=src[key]};var normalizeOptions=function(opts1){var result=create$2(null);forEach.call(arguments,(function(options){if(!isValue$1(options))return;process(Object(options),result)}));return result};var str="razdwatrzy";var isImplemented=function(){if(typeof str.contains!=="function")return false;return str.contains("dwa")===true&&str.contains("foo")===false};var indexOf=String.prototype.indexOf;var shim=function(searchString){return indexOf.call(this,searchString,arguments[1])>-1};var contains$1=isImplemented()?String.prototype.contains:shim;var isValue=is$4,isPlainFunction=is,assign=assign$1,normalizeOpts=normalizeOptions,contains=contains$1;var d$4=d$5.exports=function(dscr,value){var c,e,w,options,desc;if(arguments.length<2||typeof dscr!=="string"){options=value;value=dscr;dscr=null}else{options=arguments[2]}if(isValue(dscr)){c=contains.call(dscr,"c");e=contains.call(dscr,"e");w=contains.call(dscr,"w")}else{c=w=true;e=false}desc={value,configurable:c,enumerable:e,writable:w};return!options?desc:assign(normalizeOpts(options),desc)};d$4.gs=function(dscr,get,set){var c,e,options,desc;if(typeof dscr!=="string"){options=set;set=get;get=dscr;dscr=null}else{options=arguments[3]}if(!isValue(get)){get=undefined}else if(!isPlainFunction(get)){options=get;get=set=undefined}else if(!isValue(set)){set=undefined}else if(!isPlainFunction(set)){options=set;set=undefined}if(isValue(dscr)){c=contains.call(dscr,"c");e=contains.call(dscr,"e")}else{c=true;e=false}desc={get,set,configurable:c,enumerable:e};return!options?desc:assign(normalizeOpts(options),desc)};var isSymbol$1=function(value){if(!value)return false;if(typeof value==="symbol")return true;if(!value.constructor)return false;if(value.constructor.name!=="Symbol")return false;return value[value.constructor.toStringTag]==="Symbol"};var isSymbol=isSymbol$1;var validateSymbol$2=function(value){if(!isSymbol(value))throw new TypeError(value+" is not a symbol");return value};var d$3=d$5.exports;var create$1=Object.create,defineProperty$1=Object.defineProperty,objPrototype=Object.prototype;var created=create$1(null);var generateName$1=function(desc){var postfix=0,name,ie11BugWorkaround;while(created[desc+(postfix||"")])++postfix;desc+=postfix||"";created[desc]=true;name="@@"+desc;defineProperty$1(objPrototype,name,d$3.gs(null,(function(value){if(ie11BugWorkaround)return;ie11BugWorkaround=true;defineProperty$1(this,name,d$3(value));ie11BugWorkaround=false})));return name};var d$2=d$5.exports,NativeSymbol$1=globalThis_1.Symbol;var standardSymbols=function(SymbolPolyfill){return Object.defineProperties(SymbolPolyfill,{hasInstance:d$2("",NativeSymbol$1&&NativeSymbol$1.hasInstance||SymbolPolyfill("hasInstance")),isConcatSpreadable:d$2("",NativeSymbol$1&&NativeSymbol$1.isConcatSpreadable||SymbolPolyfill("isConcatSpreadable")),iterator:d$2("",NativeSymbol$1&&NativeSymbol$1.iterator||SymbolPolyfill("iterator")),match:d$2("",NativeSymbol$1&&NativeSymbol$1.match||SymbolPolyfill("match")),replace:d$2("",NativeSymbol$1&&NativeSymbol$1.replace||SymbolPolyfill("replace")),search:d$2("",NativeSymbol$1&&NativeSymbol$1.search||SymbolPolyfill("search")),species:d$2("",NativeSymbol$1&&NativeSymbol$1.species||SymbolPolyfill("species")),split:d$2("",NativeSymbol$1&&NativeSymbol$1.split||SymbolPolyfill("split")),toPrimitive:d$2("",NativeSymbol$1&&NativeSymbol$1.toPrimitive||SymbolPolyfill("toPrimitive")),toStringTag:d$2("",NativeSymbol$1&&NativeSymbol$1.toStringTag||SymbolPolyfill("toStringTag")),unscopables:d$2("",NativeSymbol$1&&NativeSymbol$1.unscopables||SymbolPolyfill("unscopables"))})};var d$1=d$5.exports,validateSymbol$1=validateSymbol$2;var registry=Object.create(null);var symbolRegistry=function(SymbolPolyfill){return Object.defineProperties(SymbolPolyfill,{for:d$1((function(key){if(registry[key])return registry[key];return registry[key]=SymbolPolyfill(String(key))})),keyFor:d$1((function(symbol){var key;validateSymbol$1(symbol);for(key in registry){if(registry[key]===symbol)return key}return undefined}))})};var d=d$5.exports,validateSymbol=validateSymbol$2,NativeSymbol=globalThis_1.Symbol,generateName=generateName$1,setupStandardSymbols=standardSymbols,setupSymbolRegistry=symbolRegistry;var create=Object.create,defineProperties=Object.defineProperties,defineProperty=Object.defineProperty;var SymbolPolyfill,HiddenSymbol,isNativeSafe;if(typeof NativeSymbol==="function"){try{String(NativeSymbol());isNativeSafe=true}catch(ignore){}}else{NativeSymbol=null}HiddenSymbol=function Symbol(description){if(this instanceof HiddenSymbol)throw new TypeError("Symbol is not a constructor");return SymbolPolyfill(description)};var polyfill=SymbolPolyfill=function Symbol(description){var symbol;if(this instanceof Symbol)throw new TypeError("Symbol is not a constructor");if(isNativeSafe)return NativeSymbol(description);symbol=create(HiddenSymbol.prototype);description=description===undefined?"":String(description);return defineProperties(symbol,{__description__:d("",description),__name__:d("",generateName(description))})};setupStandardSymbols(SymbolPolyfill);setupSymbolRegistry(SymbolPolyfill);defineProperties(HiddenSymbol.prototype,{constructor:d(SymbolPolyfill),toString:d("",(function(){return this.__name__}))});defineProperties(SymbolPolyfill.prototype,{toString:d((function(){return"Symbol ("+validateSymbol(this).__description__+")"})),valueOf:d((function(){return validateSymbol(this)}))});defineProperty(SymbolPolyfill.prototype,SymbolPolyfill.toPrimitive,d("",(function(){var symbol=validateSymbol(this);if(typeof symbol==="symbol")return symbol;return symbol.toString()})));defineProperty(SymbolPolyfill.prototype,SymbolPolyfill.toStringTag,d("c","Symbol"));defineProperty(HiddenSymbol.prototype,SymbolPolyfill.toStringTag,d("c",SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));defineProperty(HiddenSymbol.prototype,SymbolPolyfill.toPrimitive,d("c",SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));var es6Symbol=isImplemented$3()?globalThis_1.Symbol:polyfill;const MODE_NONE="modeNone";const MODE_DEFAULT="modeDefault";const MODE_MATCH="modeMatch";const sortTokenizableSubstrings=(a,b)=>{if(a.length>b.length){return-1}if(a.length<b.length){return 1}return 0};const endsWith=(str,suffix)=>str.indexOf(suffix,str.length-suffix.length)!==-1;class Tokenizer{constructor(factory,str,forEachToken){this.factory=factory;this.str=str;this.forEachToken=forEachToken;this.previousChr="";this.toMatch="";this.currentToken="";this.modeStack=[MODE_NONE];this.currentIndex=0}getCurrentMode(){return this.modeStack[this.modeStack.length-1]}setCurrentMode(mode){return this.modeStack.push(mode)}completeCurrentMode(){const currentMode=this.getCurrentMode();if(currentMode===MODE_DEFAULT){this.pushDefaultModeTokenizables()}if(currentMode===MODE_MATCH&&this.currentToken===""||this.currentToken!==""){this.push(this.currentToken)}this.currentToken="";return this.modeStack.pop()}push(token){let surroundedBy="";if(this.factory.convertLiterals&&this.getCurrentMode()!==MODE_MATCH){switch(token.toLowerCase()){case"null":token=null;break;case"true":token=true;break;case"false":token=false;break;default:if(isFinite(token)){token=Number(token)}break}}else{surroundedBy=this.toMatch}if(this.forEachToken){this.forEachToken(token,surroundedBy,this.currentIndex)}}tokenize(){let index=0;while(index<this.str.length){this.currentIndex=index;this.consume(this.str.charAt(index++))}while(this.getCurrentMode()!==MODE_NONE){this.completeCurrentMode()}}consume(chr){this[this.getCurrentMode()](chr);this.previousChr=chr}[MODE_NONE](chr){if(!this.factory.matchMap[chr]){this.setCurrentMode(MODE_DEFAULT);return this.consume(chr)}this.setCurrentMode(MODE_MATCH);this.toMatch=chr}[MODE_DEFAULT](chr){if(this.factory.delimiterMap[chr]){return this.completeCurrentMode()}if(this.factory.matchMap[chr]){let tokenizeIndex=0;while(tokenizeIndex<this.factory.tokenizeList.length){if(endsWith(this.currentToken,this.factory.tokenizeList[tokenizeIndex++])){this.completeCurrentMode();return this.consume(chr)}}}this.currentToken+=chr;return this.currentToken}pushDefaultModeTokenizables(){let tokenizeIndex=0;let lowestIndexOfTokenize=Infinity;let toTokenize=null;while(this.currentToken&&tokenizeIndex<this.factory.tokenizeList.length){const tokenize=this.factory.tokenizeList[tokenizeIndex++];const indexOfTokenize=this.currentToken.indexOf(tokenize);if(indexOfTokenize!==-1&&indexOfTokenize<lowestIndexOfTokenize){lowestIndexOfTokenize=indexOfTokenize;toTokenize=tokenize}}if(!toTokenize){return}if(lowestIndexOfTokenize>0){this.push(this.currentToken.substring(0,lowestIndexOfTokenize))}if(lowestIndexOfTokenize!==-1){this.push(toTokenize);this.currentToken=this.currentToken.substring(lowestIndexOfTokenize+toTokenize.length);return this.pushDefaultModeTokenizables()}}[MODE_MATCH](chr){if(chr===this.toMatch){if(this.previousChr!==this.factory.escapeCharacter){return this.completeCurrentMode()}this.currentToken=this.currentToken.substring(0,this.currentToken.length-1)}this.currentToken+=chr;return this.currentToken}}class TokenizeThis$1{constructor(config){if(!config){config={}}config=Object.assign({},this.constructor.defaultConfig,config);this.convertLiterals=config.convertLiterals;this.escapeCharacter=config.escapeCharacter;this.tokenizeList=[];this.tokenizeMap={};this.matchList=[];this.matchMap={};this.delimiterList=[];this.delimiterMap={};config.shouldTokenize.sort(sortTokenizableSubstrings).forEach((token=>{if(!this.tokenizeMap[token]){this.tokenizeList.push(token);this.tokenizeMap[token]=token}}));config.shouldMatch.forEach((match=>{if(!this.matchMap[match]){this.matchList.push(match);this.matchMap[match]=match}}));config.shouldDelimitBy.forEach((delimiter=>{if(!this.delimiterMap[delimiter]){this.delimiterList.push(delimiter);this.delimiterMap[delimiter]=delimiter}}))}tokenize(str,forEachToken){const tokenizerInstance=new Tokenizer(this,str,forEachToken);return tokenizerInstance.tokenize()}static get defaultConfig(){return{shouldTokenize:["(",")",",","*","/","%","+","-","=","!=","!","<",">","<=",">=","^"],shouldMatch:['"',"'","`"],shouldDelimitBy:[" ","\n","\r","\t"],convertLiterals:true,escapeCharacter:"\\"}}}var TokenizeThis_1=TokenizeThis$1;const Symbol=es6Symbol;const TokenizeThis=TokenizeThis_1;const OPERATOR_UNARY_MINUS=Symbol("-");const OPERATOR_TYPE_UNARY=1;const OPERATOR_TYPE_BINARY=2;const OPERATOR_TYPE_TERNARY=3;const unaryMinusDefinition={[OPERATOR_UNARY_MINUS]:OPERATOR_TYPE_UNARY};class Operator{constructor(value,type,precedence){this.value=value;this.type=type;this.precedence=precedence}toJSON(){return this.value}toString(){return`${this.value}`}}class SqlWhereParser{constructor(config){if(!config){config={}}config=Object.assign({},this.constructor.defaultConfig,config);this.tokenizer=new TokenizeThis(config.tokenizer);this.operators={};config.operators.forEach(((operators,precedence)=>{Object.keys(operators).concat(Object.getOwnPropertySymbols(operators)).forEach((operator=>{this.operators[operator]=new Operator(operator,operators[operator],precedence)}))}))}parse(sql,evaluator){const operatorStack=[];const outputStream=[];let lastOperator=undefined;let tokenCount=0;let lastTokenWasOperatorOrLeftParenthesis=false;if(!evaluator){evaluator=this.defaultEvaluator}this.tokenizer.tokenize(`(${sql})`,((token,surroundedBy)=>{tokenCount++;if(typeof token==="string"&&!surroundedBy){let normalizedToken=token.toUpperCase();if(this.operators[normalizedToken]){if(lastOperator==="BETWEEN"&&normalizedToken==="AND"){lastOperator="AND";return}if(normalizedToken==="-"&&(tokenCount===1||lastTokenWasOperatorOrLeftParenthesis)){normalizedToken=OPERATOR_UNARY_MINUS}while(operatorStack[operatorStack.length-1]&&operatorStack[operatorStack.length-1]!=="("&&this.operatorPrecedenceFromValues(normalizedToken,operatorStack[operatorStack.length-1])){const operator=this.operators[operatorStack.pop()];const operands=[];let numOperands=operator.type;while(numOperands--){operands.unshift(outputStream.pop())}outputStream.push(evaluator(operator.value,operands))}operatorStack.push(normalizedToken);lastOperator=normalizedToken;lastTokenWasOperatorOrLeftParenthesis=true}else if(token==="("){operatorStack.push(token);lastTokenWasOperatorOrLeftParenthesis=true}else if(token===")"){while(operatorStack.length&&operatorStack[operatorStack.length-1]!=="("){const operator=this.operators[operatorStack.pop()];const operands=[];let numOperands=operator.type;while(numOperands--){operands.unshift(outputStream.pop())}outputStream.push(evaluator(operator.value,operands))}if(!operatorStack.length){throw new SyntaxError("Unmatched parenthesis.")}operatorStack.pop();lastTokenWasOperatorOrLeftParenthesis=false}else{outputStream.push(token);lastTokenWasOperatorOrLeftParenthesis=false}}else{outputStream.push(token);lastTokenWasOperatorOrLeftParenthesis=false}}));while(operatorStack.length){const operatorValue=operatorStack.pop();if(operatorValue==="("){throw new SyntaxError("Unmatched parenthesis.")}const operator=this.operators[operatorValue];const operands=[];let numOperands=operator.type;while(numOperands--){operands.unshift(outputStream.pop())}outputStream.push(evaluator(operator.value,operands))}if(outputStream.length>1){throw new SyntaxError("Could not reduce to a single expression.")}return outputStream[0]}toArray(sql){let expression=[];let tokenCount=0;let lastToken=undefined;const expressionParentheses=[];this.tokenizer.tokenize(`(${sql})`,((token,surroundedBy)=>{tokenCount++;switch(token){case"(":expressionParentheses.push(expression.length);break;case")":const precedenceParenthesisIndex=expressionParentheses.pop();let expressionTokens=expression.splice(precedenceParenthesisIndex,expression.length);while(expressionTokens&&expressionTokens.constructor===Array&&expressionTokens.length===1){expressionTokens=expressionTokens[0]}expression.push(expressionTokens);break;case"":break;case",":break;default:let operator=null;if(!surroundedBy){operator=this.getOperator(token);if(token==="-"&&(tokenCount===1||(lastToken==="("||lastToken&&lastToken.constructor===Operator))){operator=this.getOperator(OPERATOR_UNARY_MINUS)}}expression.push(operator?operator:token);break}lastToken=token}));while(expression&&expression.constructor===Array&&expression.length===1){expression=expression[0]}return expression}operatorPrecedenceFromValues(operatorValue1,operatorValue2){return this.operators[operatorValue2].precedence<=this.operators[operatorValue1].precedence}getOperator(operatorValue){if(typeof operatorValue==="string"){return this.operators[operatorValue.toUpperCase()]}if(typeof operatorValue==="symbol"){return this.operators[operatorValue]}return null}defaultEvaluator(operatorValue,operands){if(operatorValue===OPERATOR_UNARY_MINUS){operatorValue="-"}if(operatorValue===","){return[].concat(operands[0],operands[1])}return{[operatorValue]:operands}}static get defaultConfig(){return{operators:[{"!":OPERATOR_TYPE_UNARY},unaryMinusDefinition,{"^":OPERATOR_TYPE_BINARY},{"*":OPERATOR_TYPE_BINARY,"/":OPERATOR_TYPE_BINARY,"%":OPERATOR_TYPE_BINARY},{"+":OPERATOR_TYPE_BINARY,"-":OPERATOR_TYPE_BINARY},{"=":OPERATOR_TYPE_BINARY,"<":OPERATOR_TYPE_BINARY,">":OPERATOR_TYPE_BINARY,"<=":OPERATOR_TYPE_BINARY,">=":OPERATOR_TYPE_BINARY,"!=":OPERATOR_TYPE_BINARY},{",":OPERATOR_TYPE_BINARY},{NOT:OPERATOR_TYPE_UNARY},{BETWEEN:OPERATOR_TYPE_TERNARY,IN:OPERATOR_TYPE_BINARY,IS:OPERATOR_TYPE_BINARY,LIKE:OPERATOR_TYPE_BINARY},{AND:OPERATOR_TYPE_BINARY},{OR:OPERATOR_TYPE_BINARY}],tokenizer:{shouldTokenize:["(",")",",","*","/","%","+","-","=","!=","!","<",">","<=",">=","^"],shouldMatch:['"',"'","`"],shouldDelimitBy:[" ","\n","\r","\t"]}}}static get Operator(){return Operator}static get OPERATOR_UNARY_MINUS(){return OPERATOR_UNARY_MINUS}}var SqlWhereParser_1=SqlWhereParser;const AnalysisEngine={Standard:"standard",GeoAnalytics:"geoanalytics",Raster:"raster",Pipelines:"pipelines",Session:"session"};const AnalysisOperator={And:"AND",Or:"OR",Not:"NOT",In:"IN",NotIn:"NOT IN",Equals:"=",GreaterThan:">",LessThan:"<",GreaterThanOrEquals:">=",LessThanOrEquals:"<=",Like:"LIKE",NotLike:"NOT LIKE"};const SelectedLayersKey="_SelectedLayers";const ParamGroupDataTypeKey="_ParamGroupDataType";const ServerEditionName={Advanced:"svradvanced",Basic:"svrbasic",Standard:"svrstandard"};const PortalDeploymentType={Enterprise:"ArcGISEnterprise",Kubernetes:"ArcGISEnterpriseOnKubernetes"};function getValue(object,key){return get(object,key)}const transformFns=["map","mapkv","filter"];const isValidTransform=t=>transformFns.includes(t);const arrayConcat=(acc,curr)=>[...acc,curr];const toObject=(acc,curr)=>({...acc,...curr});const compose=(...fs)=>fs.reduceRight(((g,f)=>x=>g(f(x))));const map=transform=>reducer=>(acc,curr)=>reducer(acc,transform(curr));const filter=predicate=>reducer=>(acc,curr)=>predicate(curr)?reducer(acc,curr):acc;const DATA_PREFIX="$[Data].";const COMPONENT_PREFIX="$[Component].";const CURRENT_TOOL_PREFIX="$[Component].currentTool.";const TRANSFORM_SUFFIX=/(^.+)(?:\$\{)((?:\s*\w+(?:\s*\w+)+)(?:\s*;\s*\w+(?:\s*\w+)+)*\s*)(?:\}$)/;function parseValue(props){const{data,renderedParams}=props;const currentTool=props.currentTool??{};let value=props.value;let parsedValue;if(typeof value==="string"){let transforms=null;const match=value.match(TRANSFORM_SUFFIX);if(match!==null){transforms=match[2];value=match[1]}if(value.includes(CURRENT_TOOL_PREFIX)){parsedValue=getValue(currentTool,value.split(CURRENT_TOOL_PREFIX)[1]);parsedValue=isEmptyDataItem(parsedValue)?undefined:parsedValue}else if(value.includes(COMPONENT_PREFIX)){parsedValue=getValue(renderedParams,value.split(COMPONENT_PREFIX)[1]);parsedValue=isEmptyDataItem(parsedValue)?undefined:parsedValue}else if(value.includes(DATA_PREFIX)){parsedValue=getValue(data,value.split(DATA_PREFIX)[1]);parsedValue=isEmptyDataItem(parsedValue)?undefined:parsedValue}else{parsedValue=value}if(transforms!==null){let toArray=true;const fns=[];transforms.split(";").forEach((t=>{const[transform,...args]=t.trim().split(/\s+/);if(isValidTransform(transform)){if(transform==="map"){let fn;if(args.length===1){fn=i=>i[args[0]]}else{fn=i=>{const result={};args.forEach((arg=>result[arg]=i[arg]));return result}}fns.unshift(map(fn))}else if(transform==="mapkv"){toArray=false;const[key,val]=args;fns.unshift(map((i=>({[i[key]]:i[val]}))))}else if(transform==="filter"){const[attr,expr]=args;if(expr);else{fns.unshift(filter((i=>i[attr])))}}}else{throw new Error(`Unknown transformation:${transform}`)}}));if(toArray){parsedValue=parsedValue.reduce(compose(...fns)(arrayConcat),[])}else{parsedValue=parsedValue.reduce(compose(...fns)(toObject),{})}parsedValue=isEmptyDataItem(parsedValue)?undefined:parsedValue}}else if(value===null){parsedValue=undefined}else{parsedValue=value}return parsedValue}function parseEffectParams(effectParams,data,renderedParams,currentTool){const isEffectParamsArray=Array.isArray(effectParams);const updatedEffectParams=isEffectParamsArray?[]:{};let hasValueChanged=false;for(const[key,value]of Object.entries(effectParams??{})){if(typeof value==="object"){updatedEffectParams[key]=parseEffectParams(value,data,renderedParams,currentTool);if(updatedEffectParams[key]!==value)hasValueChanged=true}else{const parsedValue=parseValue({value,data,renderedParams,currentTool});const shouldMutateOriginal=isEffectParamsArray===true&&parsedValue!==value;if(shouldMutateOriginal){effectParams[key]=parsedValue}else{updatedEffectParams[key]=parsedValue}if(shouldMutateOriginal===false&&parsedValue!==value)hasValueChanged=true}}return hasValueChanged?updatedEffectParams:effectParams??undefined}function evaluateExpression(a,b,operator){let result=false;const bothBooleans=typeof a==="boolean"&&typeof b==="boolean";const canPerformNumericComparisons=a!==undefined&&b!==undefined&&a!==null&&b!==null;const canPatternMatch=typeof a==="string"&&typeof b==="string";switch(operator?.value.toUpperCase()){case AnalysisOperator.And:result=bothBooleans&&a&&b;break;case AnalysisOperator.Or:result=bothBooleans&&(a||b);break;case AnalysisOperator.Equals:result=a===b;break;case AnalysisOperator.Not:result=a!==b;break;case AnalysisOperator.GreaterThan:result=canPerformNumericComparisons&&a>b;break;case AnalysisOperator.LessThan:result=canPerformNumericComparisons&&a<b;break;case AnalysisOperator.GreaterThanOrEquals:result=canPerformNumericComparisons&&a>=b;break;case AnalysisOperator.LessThanOrEquals:result=canPerformNumericComparisons&&a<=b;break;case AnalysisOperator.In:result=Array.isArray(b)&&b.map((val=>String(val))).includes(String(a));break;case AnalysisOperator.NotIn:result=Array.isArray(b)&&!b.map((val=>String(val))).includes(String(a));break;case AnalysisOperator.Like:result=canPatternMatch&&!!a.match(new RegExp(`^${b.replaceAll(/%+/g,".*")}$`));break;case AnalysisOperator.NotLike:result=canPatternMatch&&!a.match(new RegExp(`^${b.replaceAll(/%+/g,".*")}$`));break;default:throw new Error(`Unknown operator:${operator}`)}return result}function evaluate(props){const{expressions,data,renderedParams,currentTool}=props;if(expressions!==null){const operator=expressions[1];let operandA=expressions[0];if(Array.isArray(operandA)){operandA=evaluate({expressions:operandA,data,renderedParams,currentTool})}let operandB=expressions[2];if(get(operandB,"value")==="LIKE"&&operator.value===AnalysisOperator.Not&&expressions[3]!==null){operator.value="NOT LIKE";operandB=expressions[3]}else if(get(operandB,"value")==="IN"&&operator.value===AnalysisOperator.Not&&expressions[3]!==null){operator.value="NOT IN";operandB=expressions[3]}else if(Array.isArray(operandB)&&operator.value!==AnalysisOperator.In&&operator.value!==AnalysisOperator.NotIn){operandB=evaluate({expressions:operandB,data,renderedParams,currentTool})}return evaluateExpression(parseValue({value:operandA,data,renderedParams,currentTool}),parseValue({value:operandB,data,renderedParams,currentTool}),operator)}else{return false}}function processRule(props){const{rule,data,renderedParams,currentTool}=props;let effectParams;switch(rule.ruleType){case"equals":{const{valueA,valueB}=rule;const parsedValueA=parseValue({value:valueA,data,renderedParams,currentTool});const parsedValueB=parseValue({value:valueB,data,renderedParams,currentTool});if(parsedValueA===parsedValueB){effectParams=parseEffectParams(rule.effectParams,data,renderedParams,currentTool)}break}case"set":{const parsedValue=parseValue({value:rule.value,data,renderedParams,currentTool});if(typeof rule.property!=="string"){throw new Error("`set` rule must have a string `property`")}effectParams={[rule.property]:parsedValue};break}case"expression":{const parser=new SqlWhereParser_1;const sqlArray=parser.toArray(rule.expression);const result=evaluate({expressions:sqlArray,data,renderedParams,currentTool});if(result===true){effectParams=parseEffectParams(rule.effectParams,data,renderedParams,currentTool)}break}}return effectParams}function processValidationRule(props){const{rule,data,renderedParams,currentTool}=props;const parser=new SqlWhereParser_1;const sqlArray=parser.toArray(rule.expression);const result=evaluate({expressions:sqlArray,data,renderedParams,currentTool});return result}function generateSelectedLayersKey(paramName){return`${paramName}${SelectedLayersKey}`}function generateParamGroupDataTypeKey(paramName){return`${paramName}${ParamGroupDataTypeKey}`}function hasNAPrivilege(user){const privilegesArray=user?.sourceJSON.privileges;return privilegesArray!==undefined&&privilegesArray.includes("premium:user:networkanalysis")}function hasGeoEnrichmentPrivilege(user){const privilegesArray=user?.sourceJSON.privileges;return privilegesArray!==undefined&&privilegesArray.includes("premium:user:geoenrichment")}var src={exports:{}};function memoize(fn,options){var cache=options&&options.cache?options.cache:cacheDefault;var serializer=options&&options.serializer?options.serializer:serializerDefault;var strategy=options&&options.strategy?options.strategy:strategyDefault;return strategy(fn,{cache,serializer})}function isPrimitive(value){return value==null||typeof value==="number"||typeof value==="boolean"}function monadic(fn,cache,serializer,arg){var cacheKey=isPrimitive(arg)?arg:serializer(arg);var computedValue=cache.get(cacheKey);if(typeof computedValue==="undefined"){computedValue=fn.call(this,arg);cache.set(cacheKey,computedValue)}return computedValue}function variadic(fn,cache,serializer){var args=Array.prototype.slice.call(arguments,3);var cacheKey=serializer(args);var computedValue=cache.get(cacheKey);if(typeof computedValue==="undefined"){computedValue=fn.apply(this,args);cache.set(cacheKey,computedValue)}return computedValue}function assemble(fn,context,strategy,cache,serialize){return strategy.bind(context,fn,cache,serialize)}function strategyDefault(fn,options){var strategy=fn.length===1?monadic:variadic;return assemble(fn,this,strategy,options.cache.create(),options.serializer)}function strategyVariadic(fn,options){var strategy=variadic;return assemble(fn,this,strategy,options.cache.create(),options.serializer)}function strategyMonadic(fn,options){var strategy=monadic;return assemble(fn,this,strategy,options.cache.create(),options.serializer)}function serializerDefault(){return JSON.stringify(arguments)}function ObjectWithoutPrototypeCache(){this.cache=Object.create(null)}ObjectWithoutPrototypeCache.prototype.has=function(key){return key in this.cache};ObjectWithoutPrototypeCache.prototype.get=function(key){return this.cache[key]};ObjectWithoutPrototypeCache.prototype.set=function(key,value){this.cache[key]=value};var cacheDefault={create:function create(){return new ObjectWithoutPrototypeCache}};src.exports=memoize;src.exports.strategies={variadic:strategyVariadic,monadic:strategyMonadic};var memoize$1=src.exports;const addressFields=["SingleLine","Address","Address2","Address3","Neighborhood","City","Subregion","Region","Postal","PostalExt","CountryCode"];const countrySerializerFn=args=>{const{geocodeServiceURL}=args;return geocodeServiceURL??"EMPTY_KEY"};const addressFieldsSerializerFn=args=>{const{geocodeServiceURL,inputFileItem,inputTable}=args;const itemid=inputFileItem?.itemid;const url=inputTable?.url;return!isEmptyDataItem(geocodeServiceURL)&&(!isEmptyDataItem(itemid)||!isEmptyDataItem(url))?`${geocodeServiceURL}${itemid}${url}`:"EMPTY_KEY"};const getToolUIJsonWithSourceCountryRule=memoize$1((async params=>{const{geocodeServiceURL,locale}=params;let countryRule;if(isEmptyDataItem(geocodeServiceURL)){countryRule={ruleType:"expression",expression:"$[Data].geocodeServiceURL = NULL",destination:"sourceCountry",effectParams:{visible:false}}}else{let countries;let detailedCountries;try{({data:{countries,detailedCountries}}=await request(`${geocodeServiceURL}?f=json`,{responseType:"json"}))}catch(err){console.error("Failed to get Locator info");throw err}const labels={};detailedCountries.forEach((country=>{const localizedNames=country.localizedNames;const fourLetterLocale=locale.length>2&&locale;let localizedName;if(typeof fourLetterLocale!=="boolean"){localizedName=localizedNames[fourLetterLocale]}if(localizedName===undefined){const twoLetterLocale=locale.length===2?locale.slice(0,2):locale;localizedName=localizedNames[twoLetterLocale];if(localizedName===undefined){const lang=Object.keys(localizedNames).find((key=>key.startsWith(twoLetterLocale)));if(lang!==undefined){localizedName=localizedNames[lang]}}}if(localizedName===null||localizedName===undefined||localizedName===""){localizedName=localizedNames[SupportedLocales.English]??localizedNames[SupportedLocales.EnglishUSA]}labels[country.name]=localizedName}));countryRule={ruleType:"expression",expression:"$[Data].geocodeServiceURL NOT null",destination:"sourceCountry",effectParams:{visible:true,choiceList:countries,choiceListLabels:labels}}}return countryRule}),{serializer:countrySerializerFn});const getAddressFieldMappingRules=memoize$1((async params=>{const{geocodeServiceURL,inputFileItem,inputTable}=params;let addressFieldsRule;let geocodeParameters;if(!isEmptyDataItem(geocodeServiceURL)&&(!isEmptyDataItem(inputFileItem)||!isEmptyDataItem(inputTable))){let fieldInfo;let fieldMapping;geocodeParameters=await analyzeGeocodeInput(params);try{fieldInfo=JSON.parse(geocodeParameters.field_info);fieldMapping=JSON.parse(geocodeParameters.field_mapping)}catch(err){console.error("Failed to parse result of AnalyzeGeocodeInput");throw err}const choiceList=fieldInfo.map((field=>field[0]));const choiceListLabels=choiceList.reduce(((acc,curr)=>({...acc,[curr]:curr})),{});addressFieldsRule={ruleType:"expression",expression:"($[Data].geocodeServiceURL NOT null) AND (($[Data].inputTable NOT null) OR ($[Data].inputFileItem NOT null))",destination:`geocodeUIParameters`,effectParams:addressFields.reduce(((acc,curr,i)=>{const value=fieldMapping.find((mapping=>mapping[1]===curr))?.[0];return{...acc,[`UIparameterInfos[${i}].choiceList`]:choiceList,[`UIparameterInfos[${i}].choiceListLabels`]:choiceListLabels,[`UIparameterInfos[${i}].defaultValue`]:value}}),{})}}return{addressFieldsRule,geocodeParameters}}),{serializer:addressFieldsSerializerFn});function getServiceType(url){let serviceType="";if(url!==undefined&&url!==""){const urlParts=url.split("/");const services=urlParts.filter((part=>new RegExp("[A-Z]{1}[a-z]+Server").test(part)===true));serviceType=services[services.length-1]}return serviceType}function sanitizeUrl(url){return urlUtils__namespace.urlToObject(url).path}const CLIENT_THROWN_ERROR="analysis_ui";async function fetchErrorsStrings(locale=getLocaleInfo().locale){let strings=await new Promise((function(resolve,reject){require(["./errors.t9n.en-6cb15d51-ec6687ba"],resolve,reject)}));switch(locale){case SupportedLocales.Arabic:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.ar-1b9d7225-eec60ef0"],resolve,reject)}));break;case SupportedLocales.Bosnian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.bs-377a5410-36feae22"],resolve,reject)}));break;case SupportedLocales.Bulgarian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.bg-89d094b5-f3a42236"],resolve,reject)}));break;case SupportedLocales.Catalan:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.ca-b4c83c33-77badc85"],resolve,reject)}));break;case SupportedLocales.Czech:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.cs-96fcf27d-5a68866c"],resolve,reject)}));break;case SupportedLocales.Danish:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.da-cefe0c47-400ac533"],resolve,reject)}));break;case SupportedLocales.German:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.de-a1b0ae17-75bd70bd"],resolve,reject)}));break;case SupportedLocales.Greek:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.el-0a20e1cc-f205fa3c"],resolve,reject)}));break;case SupportedLocales.EnglishUSA:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.en-US-c9f50f19-bfc18c90"],resolve,reject)}));break;case SupportedLocales.Spanish:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.es-0dd138a7-685bae6d"],resolve,reject)}));break;case SupportedLocales.Estonian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.et-57cc3980-71d1d3cc"],resolve,reject)}));break;case SupportedLocales.Finnish:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.fi-7d2525cb-ee1341ef"],resolve,reject)}));break;case SupportedLocales.French:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.fr-b2186e48-039cdd3b"],resolve,reject)}));break;case SupportedLocales.Hebrew:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.he-f487411b-ce3790da"],resolve,reject)}));break;case SupportedLocales.Croatian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.hr-61ca76d9-0ded7300"],resolve,reject)}));break;case SupportedLocales.Hungarian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.hu-7fa01d3c-3e46d3ff"],resolve,reject)}));break;case SupportedLocales.Indonesian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.id-6801fef5-12a6065a"],resolve,reject)}));break;case SupportedLocales.Italian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.it-568c2b04-f569a426"],resolve,reject)}));break;case SupportedLocales.Japanese:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.ja-6042d3af-c4353778"],resolve,reject)}));break;case SupportedLocales.Korean:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.ko-4d01f228-4249027d"],resolve,reject)}));break;case SupportedLocales.Lithuanian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.lt-7f94cd9d-e8c5451e"],resolve,reject)}));break;case SupportedLocales.Latvian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.lv-0223c6ae-bc578f6e"],resolve,reject)}));break;case SupportedLocales.NorwegianBokml:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.nb-1f800b8b-d80f86f9"],resolve,reject)}));break;case SupportedLocales.Dutch:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.nl-dd20c6e1-7e8305ea"],resolve,reject)}));break;case SupportedLocales.Polish:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.pl-e71d8c8e-90143aa3"],resolve,reject)}));break;case SupportedLocales.PortugueseBrazil:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.pt-BR-6cdb50a3-a30b4c73"],resolve,reject)}));break;case SupportedLocales.PortuguesePortugal:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.pt-PT-6b3866f5-f900ebb9"],resolve,reject)}));break;case SupportedLocales.Romanian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.ro-86e7cba9-e05751a7"],resolve,reject)}));break;case SupportedLocales.Russian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.ru-23cdd703-b9a3b092"],resolve,reject)}));break;case SupportedLocales.Serbian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.sr-fad84a78-ef8ae32c"],resolve,reject)}));break;case SupportedLocales.Slovak:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.sk-3b14f765-561c1ed2"],resolve,reject)}));break;case SupportedLocales.Slovenian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.sl-e900baaf-ade630c3"],resolve,reject)}));break;case SupportedLocales.Swedish:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.sv-4613eae2-7ca6eb35"],resolve,reject)}));break;case SupportedLocales.Thai:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.th-5732c8a4-354229a2"],resolve,reject)}));break;case SupportedLocales.Turkish:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.tr-ccd64dcc-7c34546a"],resolve,reject)}));break;case SupportedLocales.Ukrainian:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.uk-e6c5f2f4-65cbc527"],resolve,reject)}));break;case SupportedLocales.Vietnamese:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.vi-3f1e30b4-7047265c"],resolve,reject)}));break;case SupportedLocales.ChineseChina:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.zh-CN-8e563d8f-1457d2df"],resolve,reject)}));break;case SupportedLocales.ChineseHongKong:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.zh-HK-23eb2505-8285427c"],resolve,reject)}));break;case SupportedLocales.ChineseTaiwan:strings=await new Promise((function(resolve,reject){require(["./errors.t9n.zh-TW-4017c011-811e3724"],resolve,reject)}));break}return strings}async function throwError(errorKey,cause){const errorStrings=await fetchErrorsStrings();const errorMessage=errorStrings[errorKey];throw new ArcgisWebAnalysisError(errorKey,errorMessage??errorStrings.defaultError,{type:CLIENT_THROWN_ERROR},cause)}const queryCount=async(layer,view)=>{const props={cacheHint:true,where:isEmptyDataItem(layer.definitionExpression)===false?layer.definitionExpression:"1=1"};if(isEmptyDataItem(layer.timeInfo)===false){if(layer.useViewTime===true&&isEmptyDataItem(view?.timeExtent)===false){props.timeExtent=view.timeExtent}else{props.timeExtent=layer.timeExtent}}const query=new Query__default["default"](props);const count=await layer.queryFeatureCount(query);return count};const abortControllerMap=new Map;async function queryFeatures(props){const{layer,query,returnUniqueIdsOnly,abortKey}=props;let graphics=[];if(layer!==undefined){try{if(returnUniqueIdsOnly===true){graphics=await layer.queryObjectIds(query)}else{const featuresSet=await layer.queryFeatures(query,{signal:abortKey!==undefined?abortControllerMap.get(abortKey)?.signal:undefined});graphics=featuresSet.features}}catch(e){if(promiseUtils__namespace.isAbortError(e)===false){throwError(ErrorKeywords.QueryFeaturesError)}}}return graphics}function abortPendingQueries(key){if(key!==undefined){const currentAbortController=abortControllerMap.get(key);if(currentAbortController!==undefined)currentAbortController.abort();abortControllerMap.set(key,new AbortController)}}const cache={};const requestCache={};async function fromCache(requester,key,id){const cachedValue=cache[key]?.[id];if(cachedValue!==undefined){return cachedValue}const requestedCacheId=requestCache[key];if(requestedCacheId===undefined||requestedCacheId===null){requestCache[key]={}}const requestedCacheValue=requestCache[key][id];if(requestedCacheValue===undefined||requestedCacheValue===null){requestCache[key][id]=requester()}const cachedId=cache[key];if(cachedId===undefined||cachedId===null){cache[key]={}}let result;try{result=await requestCache[key][id];cache[key][id]=result}catch(error){throw new ArcgisWebAnalysisError("CacheFetchError",error)}return result}function inCache(key,id){return cache?.[key]?.[id]}function getCenter(geometry){const extent=geometry.extent;return new Point__default["default"]({x:(extent.xmin+extent.xmax)/2,y:(extent.ymin+extent.ymax)/2,spatialReference:extent.spatialReference})}function getGeometryCenter(geometry){let center;switch(geometry.type){case"point":center=geometry;break;case"polyline":const path=geometry.paths[0];const polyline=new Polyline__default["default"]({spatialReference:geometry.spatialReference});polyline.addPath(path);center=getCenter(polyline);break;case"polygon":if(isEmptyDataItem(geometry.centroid)===false){center=getGeometryCenter(geometry.centroid)}else{const ring=geometry.rings[0];const polygon=new Polygon__default["default"]({spatialReference:geometry.spatialReference});polygon.addRing(ring);center=getCenter(polygon)}break}return center}async function getCenterPointUsingServerQuery(inputLayer){let point=undefined;const query=new Query__default["default"];query.returnGeometry=true;query.where="1=1";query.num=5;query.maxAllowableOffset=.25;query.outFields=["*"];query.cacheHint=true;query.returnCentroid=inputLayer?.geometryType==="polygon";abortPendingQueries(inputLayer.id);const features=await queryFeatures({layer:inputLayer,query,abortKey:inputLayer.id});const featureIndex=Math.round(features.length/2);const sampleFeature=features?.[featureIndex]?.geometry??undefined;if(sampleFeature!==undefined){point=getGeometryCenter(sampleFeature)}else{point=getGeometryCenter(inputLayer.fullExtent.center)}return point}async function getCenterPoint(params){const{inputLayer,mapView}=params;let point=undefined;if(inputLayer!==undefined&&mapView!==undefined){let layerView;let sampleFeature;let featureIndex=0;let query;try{layerView=await mapView.whenLayerView(inputLayer);if(layerView!==undefined){await reactiveUtils__namespace.whenOnce((()=>layerView?.updating===false));query=layerView.createQuery();const resultFeatureSet=await layerView.queryFeatures(query);featureIndex=Math.floor(resultFeatureSet.features?.length/2)??0;sampleFeature=resultFeatureSet.features?.[featureIndex]?.geometry??undefined}if(sampleFeature===undefined){point=await getCenterPointUsingServerQuery(inputLayer)}else{point=getGeometryCenter(sampleFeature)}}catch(e){point=await getCenterPointUsingServerQuery(inputLayer)}}return point}const CountryNotFound="NOT_FOUND";async function fetchEnrichmentCountry({params}){const{geoenrichmentUrl,inputLayer}=params;let country=CountryNotFound;const centerPoint=await getCenterPoint(params);if(centerPoint!==undefined&&inputLayer!==undefined){const url=`${geoenrichmentUrl}/Geoenrichment/Enrich?f=json`;const credential=esriId__default["default"].findCredential(url);let token;if(credential!==undefined){token=credential.token}try{const options={query:{token,f:"json",studyAreas:JSON.stringify([{geometry:centerPoint.toJSON()}]),analysisVariables:JSON.stringify(["GlobalIntersect.*"]),inSr:JSON.stringify(inputLayer.spatialReference.toJSON())}};const response=await request(`${geoenrichmentUrl}/Geoenrichment/Enrich`,options);const enrichResult=response.data.results[0].value;const features=enrichResult.FeatureSet?.[0]?.features??[];const countriesList=features.map((feature=>feature.attributes.sourceCountry));const countries=Array.from(new Set(countriesList));country=countries?.[0]??CountryNotFound}catch(err){console.error("Failed to get enrich info",err)}}return country}async function getCountry(params){let country;const{inputLayer}=params;if(inputLayer!==undefined){country=inCache("enrichmentCountry",inputLayer?.id);if(country===undefined){country=await fromCache((()=>fetchEnrichmentCountry({params})),"enrichmentCountry",inputLayer?.id)}}if(country===CountryNotFound){country=undefined}return country}async function fetchLayerFieldsInfo(layer,usePopupTemplateFieldsInfo){await layer.load();let fieldsInfo=[];if(layer.type==="imagery-tile"||layer.type==="imagery"){fieldsInfo=layer.type==="imagery-tile"?layer.rasterInfo?.attributeTable?.fields:layer.serviceRasterInfo?.attributeTable?.fields;if(usePopupTemplateFieldsInfo===true&&layer.rasterFields!==undefined){const rasterFields=layer.rasterFields.map((field=>{field.name=field.name.replace(/^.*\.(.*)$/,"$1");return field}));const valueField=rasterFields.find((field=>field.name==="Raw"));const valueFieldInfo=fieldsInfo.find((field=>field.name.toLowerCase()==="value"));if(valueField!==undefined&&valueFieldInfo!==undefined){valueField.name=valueFieldInfo.name;valueField.alias=valueFieldInfo.alias;valueField.description=valueFieldInfo.description;valueField.type=valueFieldInfo.type}fieldsInfo=intersectionBy$1(rasterFields,fieldsInfo,"name")}}else{fieldsInfo=[...layer.fields];if(usePopupTemplateFieldsInfo===true&&layer?.popupTemplate?.fieldInfos!==undefined){const popupFieldsInfo=layer?.popupTemplate?.fieldInfos.filter((field=>layer.fieldsIndex.get(field.fieldName))).map((field=>{const newField=layer.fieldsIndex.get(field.fieldName);newField.alias=field.label;return newField}));fieldsInfo=unionBy$1(popupFieldsInfo,fieldsInfo,"name")}}return fieldsInfo}function isNumericField(fieldType){const validNumericFields=["small-integer","integer","big-integer","single","double","long"];return validNumericFields.includes(fieldType)}function filterFields(params){const{fields,allowDateType,allowStringType,allowOidType,allowNumericType,allowGeometryFields,layer}=params;return fields.filter((field=>{let allowField=false;if(allowOidType===true&&field.type==="oid"){allowField=true}else if(allowNumericType===true&&isNumericField(field.type)===true&&(field.type!=="big-integer"||params.allowBigIntType===true)){if([layer?.geometryFieldsInfo?.shapeAreaField,layer?.geometryFieldsInfo?.shapeLengthField].includes(field.name)){allowField=allowGeometryFields}else{allowField=true}}else if(allowDateType===true&&field.type==="date"){allowField=true}else if(allowStringType===true&&field.type==="string"){allowField=true}return allowField}))}function getLayerLabel(layer){const groupSubLayer=layer;const serviceTitle=groupSubLayer.parent?.title??undefined;return serviceTitle!==undefined?`${serviceTitle} - ${layer.title}`:layer.title}async function getUniqueValues(props){const{layer,fieldName}=props;if(layer.type==="feature"&&!layer.url){layer.outFields=["*"]}try{const result=await uniqueValues__default["default"]({layer,field:fieldName});return result}catch(err){throw new ArcgisWebAnalysisError("UniqueValuesRetrievalError",err)}}function isFeatureLayer(layer){return layer.type==="feature"}function isUrlFeatureLayer(layer){let isLayerFeature=false;if(layer.type==="feature"){isLayerFeature=isEmptyDataItem(layer.url)===false}return isLayerFeature}function isTileLayer(layer){return layer.type==="tile"}function isImageryLayer(layer){return layer.type==="imagery"}function isImageryTileLayer(layer){return layer.type==="imagery-tile"}function isTableLayer(layer){return isFeatureLayer(layer)&&layer.isTable}function isGroupLayer(layer){return layer.type==="group"}function isFeatureCollectionJSON(layer){return"featureSet"in layer}async function canExtractLayer(layer,user){let canExtract=false;let isAdmin=false;let isOwner=false;const hasExtractCapability=layer.sourceJSON?.capabilities?.toLowerCase().includes("extract")??false;if(user!==undefined){const{serviceItemId:id}=layer?.sourceJSON??{};if(id!==undefined){const portalItem=new PortalItem__default["default"]({id});if(portalItem.loaded===false){await portalItem.load()}isOwner=portalItem.isOrgItem&&portalItem.owner===user.username;isAdmin=portalItem.isOrgItem&&user.role==="org_admin"}}canExtract=(isFeatureLayer(layer)||isTableLayer(layer))&&(isAdmin||isOwner||hasExtractCapability);return canExtract}memoize$2((featColl=>{const inputArgument={};let layerDefinition;if(featColl.featureSet!==undefined){inputArgument.source=FeatureSet__default["default"].fromJSON(featColl.featureSet).features;layerDefinition=featColl.layerDefinition;if(layerDefinition.fields!==undefined){inputArgument.fields=layerDefinition.fields.map((field=>Field__default["default"].fromJSON(field)))}if(layerDefinition.objectIdField!==undefined)inputArgument.objectIdField=layerDefinition.objectIdField;if(layerDefinition.geometryType!==undefined){let type="point";switch(layerDefinition.geometryType){case"esriGeometryMultipoint":type="multipoint";break;case"esriGeometryPoint":type="point";break;case"esriGeometryPolygon":type="polygon";break;case"esriGeometryPolyline":type="polyline";break}inputArgument.geometryType=type}if(layerDefinition.spatialReference!==undefined)inputArgument.spatialReference=layerDefinition.spatialReference;if(layerDefinition.drawingInfo?.renderer!==undefined)inputArgument.renderer=Renderer__default["default"].fromJSON(layerDefinition.drawingInfo.renderer)}return new FeatureLayer__default["default"](inputArgument)}));function getServerUrlFromLayer(layer){let serverUrl;if("url"in layer&&isEmptyDataItem(layer.url)===false){const serviceType=getServiceType(layer.url);serverUrl=`${layer.url.split(serviceType)[0]}${serviceType}`}return serverUrl}const getProxyServiceInfoHelper=memoize$2((async(serverUrl,portalUrl)=>{let status=false;const url=window.location.href;if(url.includes("://localhost:")===true||portalUrl===undefined){status=true}else{const serviceUrl=`${serverUrl}${serverUrl.indexOf("?")>-1?"&":"?"}f=json`;esriConfig__default["default"].request.proxyUrl=`${portalUrl}/sharing/proxy`;try{const response=await request(serviceUrl,{useProxy:true});status=isEmptyDataItem(response.data)===false}catch(exception){status=false}}return status===true?serverUrl:undefined}));const getProxyServiceInfo=async(layer,portalUrl)=>{let status;const serverUrl=getServerUrlFromLayer(layer);if(serverUrl!==undefined){status=await getProxyServiceInfoHelper(serverUrl,portalUrl)}else{status=layer.id}return status!==undefined?layer.id:undefined};function getFeatureCollectionJSON(value){const sourceArray=value.source.toArray();const features=sourceArray.map((graphic=>graphic.toJSON()));const geometry=sourceArray[0].geometry;const gpValue={layerDefinition:{id:value.id,drawingInfo:{renderer:value.renderer.toJSON()},name:value.title},featureSet:{features},nextObjectId:sourceArray.length,showLegend:true};if(!isEmptyDataItem(value.objectIdField)){gpValue.layerDefinition.objectIdField=value.objectIdField}if(!isEmptyDataItem(geometry)){gpValue.layerDefinition.geometryType=geometryJsonUtils__namespace.getJsonType(geometry)}if(!isEmptyDataItem(value.spatialReference)){gpValue.layerDefinition.spatialReference=value.spatialReference.toJSON()}if(!isEmptyDataItem(value.fields)){gpValue.layerDefinition.fields=value?.fields.map((field=>{const fieldJson=field.toJSON();if(fieldJson.type==="esriFieldTypeOID"&&fieldJson.length===-1){delete fieldJson.length}if(fieldJson.type==="esriFieldTypeString"&&fieldJson.length===-1){fieldJson.length=255}return fieldJson}))}if(!isEmptyDataItem(value.types)){gpValue.layerDefinition.types=value.types.map((type=>type.toJSON()))}if(!isEmptyDataItem(value.typeIdField)){gpValue.layerDefinition.typeIdField=value.typeIdField}if(!isEmptyDataItem(value.popupTemplate)){gpValue.popupInfo=value.popupTemplate.toJSON()}return gpValue}function getGPFeatureRecordSetLayerValue(value,mapView){let gpValue;if(isEmptyDataItem(value.url)===false){const credential=esriId__default["default"].findCredential(value.url);gpValue={url:`${value.url}/${value.layerId??0}`};if(credential!==undefined){gpValue.serviceToken=credential.token}if(isEmptyDataItem(value.definitionExpression)===false){gpValue.filter=value.definitionExpression}if(isEmptyDataItem(value.sourceJSON?.serviceItemId)===false){gpValue.itemId=value.sourceJSON?.serviceItemId}if(isEmptyDataItem(value.timeInfo)===false&&value.useViewTime===true&&isEmptyDataItem(mapView?.timeExtent)===false){let timeFilter="";if(mapView?.timeExtent.start!==undefined){timeFilter+=mapView?.timeExtent.start.getTime();if(mapView?.timeExtent.end!==undefined){timeFilter+=`, ${mapView?.timeExtent.end.getTime()}`}}else if(mapView?.timeExtent.end!==undefined){timeFilter+=mapView?.timeExtent.end.getTime()}if(timeFilter.length>0){gpValue.time=timeFilter}}}else if(value.source!==undefined){gpValue=getFeatureCollectionJSON(value)}return gpValue}async function loadFeatureLayers(layers){const featureLayers=layers?.map((layer=>new FeatureLayer__default["default"]({url:layer.url}).load()));return Promise.all(featureLayers)}function getImageryLayerValue(value){let gpValue;if(isEmptyDataItem(value.url)===false){let url=value.url;if(url&&url.indexOf("?token=")>0){url=url.slice(0,url.indexOf("?token="))}const credential=esriId__default["default"].findCredential(value.url);gpValue={url:`${url}`};if(credential!==undefined){gpValue={url:`${url}?token=${credential.token}`}}if(isImageryLayer(value)&&value.renderingRule!==undefined&&value.renderingRule!==null){gpValue.renderingRule=value.renderingRule.toJSON()}if(isImageryLayer(value)&&value.definitionExpression!==undefined&&value.definitionExpression!==null){let mosaicRule=value.mosaicRule??__esri.MosaicRule.fromJSON(value.sourceJSON);if(mosaicRule!==undefined&&mosaicRule!==null){mosaicRule=mosaicRule.clone();mosaicRule.where=value.definitionExpression;gpValue.mosaicRule=mosaicRule.toJSON()}}else if(isImageryLayer(value)&&value.mosaicRule!==undefined&&value.mosaicRule!==null){gpValue.mosaicRule=value.mosaicRule.toJSON()}}return gpValue}function getTileLayerValue(value){let gpValue;if(isEmptyDataItem(value.url)===false){gpValue={url:`${value.url}`}}return gpValue}async function getLayerObjectFromUrl(url){let layer=undefined;try{layer=await Layer__default["default"].fromArcGISServerUrl({url:sanitizeUrl(url)})}catch(error){await throwError(ErrorKeywords.LayerUnavailable,error)}return layer}async function getLayerObjectFromItemId(itemId){let layer=undefined;try{layer=await Layer__default["default"].fromPortalItem({portalItem:new PortalItem__default["default"]({id:itemId})})}catch(error){await throwError(ErrorKeywords.LayerUnavailable,error)}return layer}async function loadLayer(layer){let loadedLayer=undefined;try{loadedLayer=await(isGroupLayer(layer)===true?layer.loadAll():layer.load())}catch(error){await throwError(ErrorKeywords.LayerLoadFailure,error)}return loadedLayer}async function getLayerObject(gpResultValue){let layer=undefined;if(typeof gpResultValue==="object"&&"itemId"in gpResultValue&&isEmptyDataItem(gpResultValue.itemId)===false){layer=await getLayerObjectFromItemId(gpResultValue.itemId)}else if(typeof gpResultValue==="object"&&"url"in gpResultValue&&isEmptyDataItem(gpResultValue.url)===false){layer=await getLayerObjectFromUrl(gpResultValue.url)}if(layer!==undefined){layer=await loadLayer(layer)}return layer}async function getInputLayerObject(gpInputValue){let layer=undefined;const errors=[];const{url,itemId}=gpInputValue;if(isEmptyDataItem(url)===false){try{layer=await getLayerObjectFromUrl(url)}catch(error){errors.push(error)}}if(isEmptyDataItem(itemId)===false&&isEmptyDataItem(layer)===true){try{layer=await getLayerObjectFromItemId(itemId)}catch(error){errors.push(error)}}if(isFeatureCollectionJSON(gpInputValue)){layer=new FeatureLayer__default["default"]({title:gpInputValue?.layerDefinition.name??""})}if(isEmptyDataItem(layer)===true&&errors.length>0){await throwError(ErrorKeywords.LayerUnavailable,errors)}return layer}async function convertJobLayersToMapLayers(jobLayers,availableMapLayers){const layersToAdd=[];const existingLoadedLayers=[];const layerErrors=[];jobLayers.forEach((gpLayer=>{let foundLayer;if("url"in gpLayer){const findCb=availableLayer=>{const hasLayerId="layerId"in availableLayer;const urlId=hasLayerId?`/${availableLayer.layerId??0}`:"";const compareUrl=`${availableLayer.url}${urlId}`;return sanitizeUrl(gpLayer.url)===compareUrl};foundLayer=availableMapLayers.find((availableLayer=>findCb(availableLayer)))}else if("itemId"in gpLayer){foundLayer=availableMapLayers.find((availableLayer=>gpLayer.itemId===availableLayer.portalItem?.id))}else if(isFeatureCollectionJSON(gpLayer)&&gpLayer?.layerDefinition.name!==undefined){foundLayer=availableMapLayers.find((availableLayer=>gpLayer?.layerDefinition.name===availableLayer.title))}if(foundLayer===undefined){layersToAdd.push(gpLayer)}else{existingLoadedLayers.push(foundLayer)}}));const unloadedLayersToAdd=layersToAdd.map((async layer=>{let loadedLayer;try{loadedLayer=await getInputLayerObject(layer)}catch(error){layerErrors.push(new ArcgisWebAnalysisError(error.name,error.message,{...error.details,layer},error.cause))}try{loadedLayer=await loadLayer(loadedLayer)}catch(error){layerErrors.push(new ArcgisWebAnalysisError(error.name,error.message,{...error.details,layer},error.cause))}return loadedLayer}));let loadedLayersToAdd=await Promise.all(unloadedLayersToAdd);loadedLayersToAdd=loadedLayersToAdd.filter((layer=>layer!==undefined))??[];return{existingLayers:existingLoadedLayers,layersToAdd:loadedLayersToAdd,errors:layerErrors}}const CalculatedParameterValueKeys={CurrentTime:"CALCULATE_CURRENT_TIME"};function getUIParamsByName(uiParameters){const paramsByName={};for(const uiParameter of uiParameters){if(uiParameter.UIparameters!==undefined){Object.assign(paramsByName,getUIParamsByName(uiParameter.UIparameters))}else if(uiParameter.name!==undefined){if(uiParameter.name!==undefined){paramsByName[uiParameter.name]=uiParameter}}}return paramsByName}const toCamelToolName=toolName=>`${toolName.charAt(0).toLowerCase()}${toolName.slice(1)}`;function formatAnalysisEngineSuffix(analysisEngine){analysisEngine??(analysisEngine=AnalysisEngine.Standard);let analysisEngineSuffix="";switch(analysisEngine){case AnalysisEngine.Raster:analysisEngineSuffix="_ra";break;default:case AnalysisEngine.GeoAnalytics:case AnalysisEngine.Standard:analysisEngineSuffix="";break}return analysisEngineSuffix}memoize$2((async path=>{const{locale,name,assetPrefix,analysisEngine,memoizedHelper}=path;const lowercaseToolName=`${name.toLowerCase()}${formatAnalysisEngineSuffix(analysisEngine)}`;let toolUIJson;let toolT9n;let commonT9n;let toolJson;const toolPath=`${assetPrefix}/tool-ui-json/${lowercaseToolName}.tool.ui.json`;const toolJSONPath=`${assetPrefix}/tool-json/${lowercaseToolName}.tool.json`;const t9nPath=`${assetPrefix}/t9n/${lowercaseToolName}/${lowercaseToolName}.t9n.${locale}.json`;const commonT9nPath=`${assetPrefix}/t9n/common.t9n.${locale}.json`;let helpLocale=locale;if(locale===SupportedLocales.English||locale===SupportedLocales.EnglishUSA){helpLocale=""}else if(helpLocale===SupportedLocales.NorwegianBokml){helpLocale="no"}const toolHelpFilePath=`${assetPrefix}/help/${helpLocale!==""?helpLocale+"/":""}${name}${formatAnalysisEngineSuffix(analysisEngine)}.html`;try{toolJson=await memoizedHelper(toolJSONPath);toolUIJson=await memoizedHelper(toolPath);toolT9n=await memoizedHelper(t9nPath);commonT9n=await memoizedHelper(commonT9nPath);toolT9n={...commonT9n,...toolT9n}}catch{toolUIJson=undefined}return{toolJson,toolUIJson,toolT9n,toolHelpFilePath}}));function isTravelModeUsedByTool(toolName){const supportedToolNames=["ChooseBestFacilities","ConnectOriginsToDestinations","CreateDriveTimeAreas","EnrichLayer","FindNearest","PlanRoutes","SummarizeNearby"];return supportedToolNames.includes(toolName)}const StraightLineParameterValue="StraightLine";function isTravelModeParameter(paramName,toolName){const knownTravelModeParameters=["travelMode","nearType","measurementType","bufferType"];let isTravelModeParam=isTravelModeUsedByTool(toolName)&&knownTravelModeParameters.includes(paramName);switch(toolName){case"SummarizeNearby":isTravelModeParam=isTravelModeParam&&paramName==="nearType";break;case"EnrichLayer":isTravelModeParam=isTravelModeParam&&paramName==="bufferType";break;case"ConnectOriginsToDestinations":case"FindNearest":case"FindClosest":isTravelModeParam=isTravelModeParam&&paramName==="measurementType";break;case"PlanRoutes":case"CreateDriveTimeAreas":case"ChooseBestFacilities":isTravelModeParam=isTravelModeParam&&paramName==="travelMode";break;default:isTravelModeParam=false;break}return isTravelModeParam}function checkLayerAllowAnalysis(layer){let allowedAnalysis=true;if(isImageryLayer(layer)||isImageryTileLayer(layer)){if(layer.sourceJSON?.allowAnalysis===false){allowedAnalysis=false}const isLayerHosted=layer.portalItem?.typeKeywords?.includes("Hosted Service")??false;if(isLayerHosted){allowedAnalysis=layer.portalItem.isOrgItem??false?true:allowedAnalysis}}return allowedAnalysis}function filterLayersAllowAnalysis(layers){return layers.filter((layer=>checkLayerAllowAnalysis(layer)))}async function getFederatedServers(portal){const{id,isPortal,restUrl,user}=portal;let federatedServers=[];if(isPortal&&!isEmptyDataItem(id)&&!isEmptyDataItem(restUrl)&&!isEmptyDataItem(user)){const url=restUrl+"/portals/"+id+"/servers";const credential=esriId__default["default"].findCredential(url);let token;if(credential!==undefined){token=credential.token}const options={query:{token,f:"json"}};try{const response=await request(url,options);federatedServers=response?.data?.servers??[]}catch(e){await throwError(ErrorKeywords.NetworkError)}}return federatedServers}memoize$1((async portal=>{const{url:portalUrl}=portal;const url=`${portalUrl}/sharing/rest/community/self`;const credential=esriId__default["default"].findCredential(url);let token;if(credential!==undefined){token=credential.token}const options={query:{returnUserLicensedItems:true,token,f:"json"}};try{const{data:{userLicensedItems}}=await request(url,options);return[...userLicensedItems.map((({entitlements})=>entitlements))].flat()}catch(e){await throwError(ErrorKeywords.NetworkError)}return[]}),{serializer:args=>`${args.user.username}`});function getDeepLearningQueryUrl(portal){const{helperServices}=portal;return`${helperServices.rasterAnalytics.url}/QueryDeepLearningModelInfo`}async function isStandardAnalysisServerAdvanced(portal){let hasAdvancedLevelLicense=false;const{id,restUrl}=portal;try{const federatedServers=await getFederatedServers(portal);const hostingServers=federatedServers.filter((server=>server.serverRole==="HOSTING_SERVER"));const hostingServer=hostingServers?.[0]??undefined;if(hostingServer!==undefined){const url=`${restUrl}/portals/${id}/servers/${hostingServer.id}`;const credential=esriId__default["default"].findCredential(url);let token;if(credential!==undefined){token=credential.token}const options={query:{token,f:"json"}};const serverResponse=await request(url,options);const serverInfo=serverResponse?.data;const defaultLicenseLevel=isEmptyDataItem(serverInfo?.edition)&&isEmptyDataItem(serverInfo?.level)?ServerEditionName.Advanced:null;const licenseLevel=serverInfo?.edition?.name??defaultLicenseLevel;hasAdvancedLevelLicense=licenseLevel===ServerEditionName.Advanced}}catch(e){}return hasAdvancedLevelLicense}const processImageryLayer=memoize$1((async layer=>{let processedProperties={isMultidimensional:false};const mutlidimensionalInfo=layer.type==="imagery-tile"?layer.rasterInfo.multidimensionalInfo:layer.multidimensionalInfo;const multidimensionalSubset=layer.multidimensionalSubset;if(mutlidimensionalInfo!==undefined&&mutlidimensionalInfo!==null){const variables=multidimensionalSubset!==null&&multidimensionalSubset!==undefined?layer.getMultidimensionalSubsetVariables():mutlidimensionalInfo.variables;if(variables!==undefined&&variables.length>0){const dimensions=[];const variableFields=[];const dimensionVariables={};const dimensionValues={};const dimensionVariableDatasets={};const dimensionMinValues={};const dimensionMaxValues={};const dimensionMinValuesWithLabels={};const dimensionMaxValuesWithLabels={};variables.forEach(((variable,vidx)=>{let dimensionsDescription="";const variableName=variable.name;variable.dimensions.forEach(((dimension,index)=>{const dimensionName=dimension.name;if(dimensions.indexOf(dimensionName)===-1){dimensions.push(dimensionName)}const dimensionDescription=index>0?`,${dimensionName}=${dimension.values?.length}`:`${dimensionName}=${dimension.values?.length}`;dimensionsDescription=dimensionsDescription.concat(dimensionDescription);if(index===0){dimensionValues[variableName]={}}if(dimensionVariables[dimensionName]===undefined){dimensionVariables[dimensionName]=[]}dimensionValues[variableName][dimensionName]=dimension.values;if(vidx===0){const values=dimension.values;if(values!==undefined){if(dimensionName==="StdTime"&&(dimension.unit===undefined||dimension.unit==="ISO8601")){const dimMinValues=[];const dimMaxValues=[];const dimMinValuesWithLabels={};const dimMaxValuesWithLabels={};values.forEach((value=>{if(typeof value==="number"){const date=new Date(value);const label=date.toLocaleString();const val=date.toISOString();dimMinValues.push(val);dimMaxValues.push(val);dimMinValuesWithLabels[val]=label;dimMaxValuesWithLabels[val]=label}else if(Array.isArray(value)){const d1=new Date(value[0]);const d2=new Date(value[1]);const val1=d1.toISOString();const val2=d2.toISOString();dimMinValues.push(val1);dimMaxValues.push(val2);dimMinValuesWithLabels[val1]=d1.toLocaleString();dimMaxValuesWithLabels[val2]=d2.toLocaleString()}}));dimensionMinValues[dimensionName]=dimMinValues;dimensionMaxValues[dimensionName]=dimMaxValues;dimensionMinValuesWithLabels[dimensionName]=dimMinValuesWithLabels;dimensionMaxValuesWithLabels[dimensionName]=dimMaxValuesWithLabels}else{if(Array.isArray(values)&&typeof values[0]==="number"){dimensionMinValues[dimensionName]=dimensionMaxValues[dimensionName]=values.map(String)}else if(Array.isArray(values[0])&&Array.isArray(values[1])){dimensionMinValues[dimensionName]=values[0].map(String);dimensionMaxValues[dimensionName]=values[1].map(String)}}}}dimensionVariables[dimensionName].push(variableName)}));variableFields.push({name:variableName,alias:`${variableName}[${dimensionsDescription}](${variable.description})`,type:"string"})}));for(const key in dimensionVariables){const filteredFields=variableFields.filter((variableKey=>dimensionVariables[key].indexOf(variableKey.name)>-1));dimensionVariableDatasets[key]={id:"1",name:key,description:"DimensionVariables",getFields:()=>Promise.resolve(filteredFields)}}const variablesDataset={id:"1",name:"Variables",description:"Variables",getFields:()=>Promise.resolve(variableFields)};processedProperties={isMultidimensional:true,dimensions,dimensionVariableDatasets,dimensionValues,variablesDataset,dimensionMinValues,dimensionMaxValues,dimensionMinValuesWithLabels,dimensionMaxValuesWithLabels}}}const rasterInfo=layer.type==="imagery"?await layer.generateRasterInfo(layer.renderingRule):layer.rasterInfo;processedProperties.rasterInfo=rasterInfo;return processedProperties}));async function processDeepLearningModelItem(item,portal,signal){const dataTypeMap={string:"GPString",numeric:"GPDouble"};let parameterInfos=[];const value={};let modelType;let modelInfo;if(item.sourceJSON?.properties!==undefined&&item.sourceJSON?.properties!==null){modelInfo=cloneDeep(item.sourceJSON.properties)}else{try{const gpjob=await geoprocessor__namespace.submitJob(getDeepLearningQueryUrl(portal),{model:{itemId:item.id}},undefined,signal);const jobInfo=await gpjob.waitForJobCompletion(signal);const result=await jobInfo.fetchResultData("outModelInfo",undefined,signal);modelInfo=result?.value;item.update()}catch(err){console.error("fetching model item failed");if(signal?.signal.aborted===true){throw new ArcgisWebAnalysisError("AbortError")}throw err}}if(modelInfo!==undefined&&modelInfo!==null){const modelParamInfo=modelInfo.modelInfo?.ParameterInfo;modelType=modelInfo.modelInfo?.ModelType;const paramsToAvoid=["raster","rasters","model","device"];const params=modelParamInfo?.filter((param=>Object.keys(dataTypeMap).includes(param.dataType)&&param.required==="0"&&paramsToAvoid.indexOf(param.name.toLowerCase())<0));parameterInfos=params?.map((param=>{param.dataType=dataTypeMap[param.dataType];param.required=false;return param}));if(parameterInfos!==undefined&&parameterInfos?.length>0){parameterInfos.forEach((param=>{const pname=param.name;value[pname]=param.value}))}}return{parameterInfos,value,modelType}}const analyzeGeocodeInput=async params=>{const{asyncGeocodeUrl}=params;const jobInfo=await geoprocessor__namespace.submitJob(`${asyncGeocodeUrl}/AnalyzeGeocodeInput`,{...omit$1(params,"asyncGeocodeUrl"),f:"json"});try{await jobInfo.waitForJobCompletion();const result=await jobInfo.fetchResultData("geocodeParameters");return result.value}catch(err){console.error("AnalyzeGeocodeInput failed");throw err}};const srCategories={"Geographic Coordinate Systems":{Africa:{4143:"Abidjan 1987",4168:"Accra",4201:"Adindan",4205:"Afgooye",4206:"Agadez",4204:"Ain el Abd 1970",4209:"Arc 1950",4210:"Arc 1960",4713:"Ayabelle Lighthouse",4213:"Beduaram",6883:"Bioko",4165:"Bissau",4220:"Camacupa",8694:"Camacupa_2015",4222:"Cape",4223:"Carthage",4816:"Carthage (Paris)",37225:"Carthage (grads)",4315:"Conakry 1905",4226:"Cote d'Ivoire",4155:"Dabola 1981",4228:"Douala",4192:"Douala 1948",4229:"Egypt 1907",4199:"Egypt 1930",4706:"Egypt Gulf of Suez S-650 TL",4230:"European Datum 1950",4159:"European Libyan Datum 1979",6894:"Gambia",4197:"Garoua",4148:"Hartebeesthoek 1994",4697:"IGC 1962 Arc of the 6th Parallel South",4701:"IGCB 1955",4700:"IGN Astro 1960",4679:"Jouik 1961",4696:"Kasai 1953",4695:"Katanga 1955",4198:"Kousseri",4246:"Kuwait Oil Company",4319:"Kuwait Utility",4754:"LGD2006",4699:"Le Pouce 1934",4250:"Leigon",4251:"Liberia 1964",4142:"Locodjo 1965",4252:"Lome",4266:"M'poraloko",4128:"Madzansua",4256:"Mahe 1971",4259:"Malongo 1987",4260:"Manoca",4193:"Manoca 1962",4262:"Massawa",4702:"Mauritania 1999",4261:"Merchich",104261:"Merchich (degrees)",4705:"Mhast (Offshore)",4704:"Mhast (Onshore)",4703:"Mhast 1951",4263:"Minna",4130:"Moznet",4270:"Nahrwan 1967",4318:"National Geodetic Network (Kuwait)",4307:"Nord Sahara 1959",4680:"Nouakchott 1965",4129:"Observatario",4281:"Palestine 1923",4620:"Point 58",4282:"Pointe Noire",4286:"Qatar 1948",4285:"Qatar 1974",4046:"RGRDC 2005",8699:"RSAO13",4293:"Schwarzeck",4174:"Sierra Leone 1924",104103:"Sierra Leone 1960",4175:"Sierra Leone 1968",4164:"South Yemen",4296:"Sudan",4297:"Tananarive 1925",4810:"Tananarive 1925 (Paris)",4127:"Tete",4303:"Trucial Coast 1948",4304:"Voirol 1875",4811:"Voirol 1875 (Paris)",104139:"Voirol 1875 (grads)",4821:"Voirol 1879 (Paris)",4671:"Voirol 1879 (degrees)",104140:"Voirol 1879 (grads)",4163:"Yemen NGN 1996",4310:"Yoff"},Antarctica:{4176:"Australian Antarctic 1998",4715:"Camp Area Astro",4736:"Deception Island",4636:"Petrels 1972",4637:"Pointe Geologie Perroud 1950",7073:"RGTAAF07",7133:"RGTAAF07 (lon-lat)",4764:"RSRGD2000"},Asia:{6881:"Aden 1925",4204:"Ain el Abd 1970",4211:"Batavia",4813:"Batavia (Jakarta)",4214:"Beijing 1954",6882:"Bekaa Valley 1920",4219:"Bukit Rimpah",4490:"China Geodetic Coordinate System 2000",4755:"DGN 1995",5264:"DRUKREF 03",4227:"Deir ez Zor",4154:"European 1950 (ED77)",4230:"European Datum 1950",37202:"Everest - Bangladesh",37203:"Everest - India and Nepal",4132:"FD 1958",4232:"Fahud",5246:"GDBD2009",4742:"GDM 2000",104022:"GGD",4682:"Gulshan 303",4613:"Gunung Segara",4820:"Gunung Segara (Jakarta)",4147:"Hanoi 1972",4255:"Herat North",4738:"Hong Kong 1963",4739:"Hong Kong 1963 (67)",4611:"Hong Kong 1980",8427:"Hong Kong Geodetic CS",4236:"Hu Tzu Shan",6983:"IG05 Intermediate CRS",6990:"IG05(2012) Intermediate CRS",7136:"IGD05",7139:"IGD05(2012)",4670:"IGM 1995",3889:"IGRS",4667:"IKBD 1992",4239:"Indian 1954",4131:"Indian 1960",4240:"Indian 1975",4238:"Indonesian Datum 1974",4141:"Israel",4612:"JGD 2000",6668:"JGD 2011",104130:"Jordan",9333:"KSA-GRF17",4243:"Kalianpur 1880",4144:"Kalianpur 1937",4145:"Kalianpur 1962",4146:"Kalianpur 1975",4244:"Kandawala",4743:"Karbala 1979 Polservice",4245:"Kertau",4751:"Kertau (RSO)",4737:"Korea Geodetic Datum 2000",4162:"Korean Datum 1985",4166:"Korean Datum 1995",4246:"Kuwait Oil Company",4319:"Kuwait Utility",104009:"Kyrg-06",4677:"Lao 1993",4678:"Lao 1997",4253:"Luzon 1911",104134:"MONREF 1997",104135:"MSK 1942",8818:"MTRF-2000",8428:"Macao 1920",8431:"Macao 2008",4257:"Makassar",4804:"Makassar (Jakarta)",4744:"Nahrwan 1934",4270:"Nahrwan 1967",4693:"Nakhl-e Ghanem",4318:"National Geodetic Network (Kuwait)",6207:"Nepal Nagarkot",4555:"New Beijing",7373:"ONGD14",9294:"ONGD17",104126:"Observatorio Meteorologico 1965",37206:"Oman",4134:"PDO 1993",5546:"PNG94",4683:"PRS 1992",4280:"Padang 1884",4808:"Padang 1884 (Jakarta)",4281:"Palestine 1923",4284:"Pulkovo 1942",4200:"Pulkovo 1995",4614:"QND 1995",4286:"Qatar 1948",4285:"Qatar 1974",4153:"Rassadiran",5233:"SLD99",9470:"SRGI2013",4757:"SVY21",4294:"Segora",4295:"Serindung",37207:"South Asia Singapore",3821:"Taiwan 1967",3824:"Taiwan 1997",4298:"Timbalai 1948",4301:"Tokyo",4303:"Trucial Coast 1948",4756:"VN 2000",4676:"Vientiane 1982",4610:"Xian 1980"},"Atlantic Ocean":{4712:"Ascension Island 1958",4710:"Astro DOS 71-4",4183:"Azores Central 1948",4665:"Azores Central 1995",4182:"Azores Occidental 1939",4184:"Azores Oriental 1940",4664:"Azores Oriental 1995",4216:"Bermuda 1957",4762:"Bermuda 2000",37241:"Graciosa Base SW 1948",4658:"Hjorsey 1955",4722:"ISTS 061 Astro 1968",4185:"Madeira 1936",37245:"Observ. Meteorologico 1939",9403:"PN68",5013:"PTRA08",4728:"Pico de Las Nieves",4615:"Porto Santo 1936",4663:"Porto Santo 1995",4824:"Principe",4081:"REGCAN95",4463:"RGSPM06",7035:"RGSPM06 (lon-lat)",7886:"SHGD2015",37249:"Sao Braz",4823:"Sao Tome",4292:"Sapper Hill 1943",4616:"Selvagem Grande 1938",7881:"St. Helena Tritan",4734:"Tristan Astro 1968"},"Australia and New Zealand":{9309:"ATRF2014",4202:"Australian Geodetic Datum 1966",4203:"Australian Geodetic Datum 1984",4673:"Chatham Islands 1979",7844:"GDA2020",4283:"Geocentric Datum of Australia 1994",4167:"NZGD2000",4272:"New Zealand Geodetic Datum 1949"},Caribbean:{4600:"Anguilla 1957",4601:"Antigua 1943",4212:"Barbados 1938",6135:"CIGD11",4602:"Dominica 1945",4625:"Fort Desaix",4621:"Fort Marigot",37240:"Fort Thomas 1955",4723:"Grand Cayman 1959",4603:"Grenada 1953",4758:"JAD 2001",4241:"Jamaica 1875",4242:"Jamaica 1969",37243:"L.C. 5 Astro 1961",4726:"Little Cayman 1961",4604:"Montserrat 1958",4139:"Puerto Rico",7086:"RGAF09 (lon-lat)",4558:"RRAF 1991",4622:"Sainte Anne",4605:"St. Kitts 1955",4606:"St. Lucia 1955",4607:"St. Vincent 1945"},"Central America":{8907:"CR-SIRGAS",5365:"CR05",5371:"MARCARIO SOLIS",5451:"Ocotepeque 1935",5467:"Panama-Colon 1911",8972:"SIRGAS-CON DGF00P01",8973:"SIRGAS-CON DGF01P01",8974:"SIRGAS-CON DGF01P02",8975:"SIRGAS-CON DGF02P01",8976:"SIRGAS-CON DGF04P01",8977:"SIRGAS-CON DGF05P01",8978:"SIRGAS-CON DGF06P01",8979:"SIRGAS-CON DGF07P01",8980:"SIRGAS-CON DGF08P01",8981:"SIRGAS-CON SIR09P01",8982:"SIRGAS-CON SIR10P01",8983:"SIRGAS-CON SIR11P01",8984:"SIRGAS-CON SIR13P01",8985:"SIRGAS-CON SIR14P01",8986:"SIRGAS-CON SIR15P01",8987:"SIRGAS-CON SIR17P01",5393:"SIRGAS_ES2007.8",5464:"Sibun Gorge 1922"},"County Systems":{Minnesota:{104700:"NAD 1983 HARN Adj MN Anoka",104701:"NAD 1983 HARN Adj MN Becker",104702:"NAD 1983 HARN Adj MN Beltrami North",104703:"NAD 1983 HARN Adj MN Beltrami South",104704:"NAD 1983 HARN Adj MN Benton",104705:"NAD 1983 HARN Adj MN Big Stone",104706:"NAD 1983 HARN Adj MN Blue Earth",104707:"NAD 1983 HARN Adj MN Brown",104708:"NAD 1983 HARN Adj MN Carlton",104709:"NAD 1983 HARN Adj MN Carver",104710:"NAD 1983 HARN Adj MN Cass North",104711:"NAD 1983 HARN Adj MN Cass South",104712:"NAD 1983 HARN Adj MN Chippewa",104713:"NAD 1983 HARN Adj MN Chisago",104714:"NAD 1983 HARN Adj MN Cook North",104715:"NAD 1983 HARN Adj MN Cook South",104716:"NAD 1983 HARN Adj MN Cottonwood",104717:"NAD 1983 HARN Adj MN Crow Wing",104718:"NAD 1983 HARN Adj MN Dakota",104719:"NAD 1983 HARN Adj MN Dodge",104720:"NAD 1983 HARN Adj MN Douglas",104721:"NAD 1983 HARN Adj MN Faribault",104722:"NAD 1983 HARN Adj MN Fillmore",104723:"NAD 1983 HARN Adj MN Freeborn",104724:"NAD 1983 HARN Adj MN Goodhue",104725:"NAD 1983 HARN Adj MN Grant",104726:"NAD 1983 HARN Adj MN Hennepin",104727:"NAD 1983 HARN Adj MN Houston",104728:"NAD 1983 HARN Adj MN Isanti",104729:"NAD 1983 HARN Adj MN Itasca North",104730:"NAD 1983 HARN Adj MN Itasca South",104731:"NAD 1983 HARN Adj MN Jackson",104732:"NAD 1983 HARN Adj MN Kanabec",104733:"NAD 1983 HARN Adj MN Kandiyohi",104734:"NAD 1983 HARN Adj MN Kittson",104735:"NAD 1983 HARN Adj MN Koochiching",104736:"NAD 1983 HARN Adj MN Lac Qui Parle",104737:"NAD 1983 HARN Adj MN Lake of the Woods North",104738:"NAD 1983 HARN Adj MN Lake of the Woods South",104739:"NAD 1983 HARN Adj MN Le Sueur",104740:"NAD 1983 HARN Adj MN Lincoln",104741:"NAD 1983 HARN Adj MN Lyon",104743:"NAD 1983 HARN Adj MN Mahnomen",104744:"NAD 1983 HARN Adj MN Marshall",104745:"NAD 1983 HARN Adj MN Martin",104742:"NAD 1983 HARN Adj MN McLeod",104746:"NAD 1983 HARN Adj MN Meeker",104747:"NAD 1983 HARN Adj MN Morrison",104748:"NAD 1983 HARN Adj MN Mower",104749:"NAD 1983 HARN Adj MN Murray",104750:"NAD 1983 HARN Adj MN Nicollet",104751:"NAD 1983 HARN Adj MN Nobles",104752:"NAD 1983 HARN Adj MN Norman",104753:"NAD 1983 HARN Adj MN Olmsted",104754:"NAD 1983 HARN Adj MN Ottertail",104755:"NAD 1983 HARN Adj MN Pennington",104756:"NAD 1983 HARN Adj MN Pine",104757:"NAD 1983 HARN Adj MN Pipestone",104758:"NAD 1983 HARN Adj MN Polk",104759:"NAD 1983 HARN Adj MN Pope",104760:"NAD 1983 HARN Adj MN Ramsey",104761:"NAD 1983 HARN Adj MN Red Lake",104762:"NAD 1983 HARN Adj MN Redwood",104763:"NAD 1983 HARN Adj MN Renville",104764:"NAD 1983 HARN Adj MN Rice",104765:"NAD 1983 HARN Adj MN Rock",104766:"NAD 1983 HARN Adj MN Roseau",104770:"NAD 1983 HARN Adj MN Scott",104771:"NAD 1983 HARN Adj MN Sherburne",104772:"NAD 1983 HARN Adj MN Sibley",104786:"NAD 1983 HARN Adj MN St Louis",104768:"NAD 1983 HARN Adj MN St Louis Central",104767:"NAD 1983 HARN Adj MN St Louis North",104769:"NAD 1983 HARN Adj MN St Louis South",104773:"NAD 1983 HARN Adj MN Stearns",104774:"NAD 1983 HARN Adj MN Steele",104775:"NAD 1983 HARN Adj MN Stevens",104776:"NAD 1983 HARN Adj MN Swift",104777:"NAD 1983 HARN Adj MN Todd",104778:"NAD 1983 HARN Adj MN Traverse",104779:"NAD 1983 HARN Adj MN Wabasha",104780:"NAD 1983 HARN Adj MN Wadena",104781:"NAD 1983 HARN Adj MN Waseca",104782:"NAD 1983 HARN Adj MN Watonwan",104783:"NAD 1983 HARN Adj MN Winona",104784:"NAD 1983 HARN Adj MN Wright",104785:"NAD 1983 HARN Adj MN Yellow Medicine"},Wisconsin:{104808:"NAD 1983 HARN Adj. Wisconsin Chippewa WCCS"}},Europe:{4901:"ATF (Paris)",9384:"AbInvA96_2020-IRF",4191:"Albanian 1987",4289:"Amersfoort",7798:"BGS2005",4809:"Belge 1950 (Brussels)",4313:"Belge 1972",4801:"Bern 1898 (Bern)",4306:"Bern 1938",6311:"CGRS 1993",4149:"CH1903",4150:"CH1903+",104131:"D48",5681:"DB_REF",4274:"Datum 73",104105:"Datum Lisboa Bessel",104106:"Datum Lisboa Hayford",4316:"Dealul Piscului 1933 (Romania)",4317:"Dealul Piscului 1970 (Romania)",4314:"Deutsches Hauptdreiecksnetz",9758:"ECML14_NB-IRF",9739:"EOS21-IRF",9059:"ETRF 1989",9067:"ETRF2000",9702:"ETRF2000-PL",9068:"ETRF2005",9069:"ETRF2014",9060:"ETRF90",9061:"ETRF91",9062:"ETRF92",9063:"ETRF93",9064:"ETRF94",9065:"ETRF96",9066:"ETRF97",4258:"ETRS 1989",104129:"EUREF FIN",9763:"EWR2-IRF",104101:"Estonia 1937",4133:"Estonia 1992",4180:"Estonia 1997",4668:"European 1979",4230:"European Datum 1950",4231:"European Datum 1987",4741:"FD 1954",5593:"FEH2010",9453:"GBK19-IRF",4121:"GGRS 1987",7683:"GSK-2011",4120:"Greek",4815:"Greek (Athens)",8042:"Gusterberg (Ferro)",3819:"HD1909",9299:"HS2-IRF",4761:"HTRS96",104102:"Hermannskogel",4658:"Hjorsey 1955",4237:"Hungarian Datum 1972",4173:"IRENET95",4659:"ISN 1993",5324:"ISN 2004",8086:"ISN2016",9140:"KOSOVAREF01",4123:"Kartastokoordinaattijarjestelma",4661:"LKS 1992",4669:"LKS 1994",9547:"LTF2004(G)",4207:"Lisbon",4803:"Lisbon (Lisbon)",4666:"Lisbon 1890",4904:"Lisbon 1890 (Lisbon)",4181:"Luxembourg 1930",4805:"MGI (Ferro)",3906:"MGI 1901",9372:"MML07-IRF",4023:"MOLDREF99",4903:"Madrid 1870 (Madrid)",4312:"Militar-Geographische Institut",4265:"Monte Mario",4806:"Monte Mario (Rome)",4273:"NGO 1948",4817:"NGO 1948 (Oslo)",4807:"NTF (Paris)",4902:"Nord de Guerre (Paris)",4275:"Nouvelle Triangulation Francaise",4279:"OS (SN) 1980",4277:"OSGB 1936",4278:"OSGB 1970 (SN)",4188:"OSNI 1952",4746:"PD 83",4740:"PZ 1990",104017:"PZ-90.02",104018:"PZ-90.11",4284:"Pulkovo 1942",4179:"Pulkovo 1942 Adj 1958",4178:"Pulkovo 1942 Adj 1983",4200:"Pulkovo 1995",4745:"RD 83",6706:"RDN2008",4171:"RGF 1993",7084:"RGF 1993 (lon-lat)",4124:"RT 1990",4308:"RT38",4814:"RT38 (Stockholm)",4215:"Reseau National Belge 1950",4657:"Reykjavik 1900",104127:"Roma 1940",37257:"S-42 Hungary",4156:"S-JTSK",4818:"S-JTSK (Ferro)",8351:"S-JTSK [JTSK03]",5228:"S-JTSK-05",5229:"S-JTSK-05 (Ferro)",8685:"SRB_ETRS89",4075:"SREF98",4619:"SWEREF99",4765:"Slovenia 1996",8043:"St. Stephen (Ferro)",4151:"Swiss TRF 1995",4299:"TM65",4300:"TM75",9364:"TPEN11-IRF",5252:"TUREF",5561:"Ukraine 2000",104050:"Xrail84",4753:"fk89"},"Indian Ocean":{4708:"Anna 1 Astro 1965",4475:"Cadastre 1997",4632:"Combani 1950",104028:"GDM2008",4684:"Gan 1970",4646:"Grand Comoros",4724:"ISTS 073 Astro 1969",4698:"Kerguelen Island 1949",4256:"Mahe 1971",4470:"RGM04",7039:"RGM04 (lon-lat)",4627:"RGR 1992",7037:"RGR 1992 (lon-lat)",7073:"RGTAAF07",7133:"RGTAAF07 (lon-lat)",4626:"Reunion 1947",6892:"South East Island 1943"},"North America":{4196:"Ammassalik 1958",4212:"Barbados 1938",4216:"Bermuda 1957",4762:"Bermuda 2000",4747:"Greenland 1996",4660:"Helle 1954",4483:"Mexican Datum of 1993",6365:"Mexico ITRF2008",4194:"Qornoq 1927",5489:"RGAF09",4638:"Saint Pierre et Miquelon 1950",4195:"Scoresbysund 1952",Canada:{4122:"Average Terrestrial System 1977",4267:"NAD 1927",4609:"NAD 1927 (CGQ77)",4608:"NAD 1927 (Definition 1976)",4269:"NAD 1983",4617:"NAD 1983 (CSRS)",8237:"NAD 1983 (CSRS) v2",8240:"NAD 1983 (CSRS) v3",8246:"NAD 1983 (CSRS) v4",8249:"NAD 1983 (CSRS) v5",8252:"NAD 1983 (CSRS) v6",8255:"NAD 1983 (CSRS) v7",8232:"NAD 1983 (CSRS96)"},"USA and territories":{37260:"Alaskan Islands",4169:"American Samoa 1962",104024:"California SRS Epoch 2017.50 (NAD83)",4717:"Cape Canaveral",4675:"Guam 1963",4267:"NAD 1927",4269:"NAD 1983",6318:"NAD 1983 (2011)",6783:"NAD 1983 (CORS96)",8860:"NAD 1983 (FBN)",8545:"NAD 1983 (HARN Corrected)",4759:"NAD 1983 (NSRS2007)",4152:"NAD 1983 HARN",4135:"Old Hawaiian",104138:"Old Hawaiian Intl 1924",4139:"Puerto Rico",4138:"St. George Island",4136:"St. Lawrence Island",4137:"St. Paul Island"}},Oceans:{"Pacific Ocean":{8900:"RGWF96",8902:"RGWF96 (lon-lat)"}},"Pacific Ocean":{37260:"Alaskan Islands",4169:"American Samoa 1962",4709:"Astro Beacon E 1945",4711:"Astronomical Station 1952",104112:"Bab South",4714:"Bellevue IGN",4716:"Canton Astro 1966",4672:"Chatham Island Astro 1971",37218:"DOS 1968",4719:"Easter Island 1967",4688:"Fatu Iva 1972",4721:"Fiji 1956",4720:"Fiji 1986",37221:"GUX 1 Astro",4675:"Guam 1963",4641:"IGN53 Mare",4633:"IGN56 Lifou",4689:"IGN63 Hiva Oa",4662:"IGN72 Grande Terre",4630:"IGN72 Nuku Hiva",4725:"Johnston Island 1961",4735:"Kusaie Astro 1951",4639:"MOP78",104113:"Majuro",4692:"Maupiti 1983",4727:"Midway Astro 1961",4691:"Moorea 1987",6325:"NAD 1983 (MA11)",6322:"NAD 1983 (PA11)",9072:"NAD 1983 MARP00",9075:"NAD 1983 PACP00",4644:"NEA74 Noumea",4135:"Old Hawaiian",104138:"Old Hawaiian Intl 1924",4763:"Pitcairn 2006",4729:"Pitcairn Astro 1967",104109:"Pohnpei",4645:"RGNC 1991",4749:"RGNC 1991-93",4687:"RGPF",4643:"ST71 Belep",4642:"ST84 Ile des Pins",4750:"ST87 Ouvea",4730:"Santo DOS 1965",4718:"Solomon 1968",5886:"TGD2005",4629:"Tahaa 1954",4628:"Tahiti",4690:"Tahiti 1979",4707:"Tern Island Astro 1961",4748:"Vanua Levu 1915",4752:"Viti Levu 1912",4731:"Viti Levu 1916",4733:"Wake Island Astro 1952",4732:"Wake-Eniwetok 1960"},"Solar System":{104975:"Sun 2015","Asteroid Belt":{104972:"1 Ceres 2015",104973:"4 Vesta 2015"},Earth:{104903:"Moon 2000"},Jupiter:{104909:"Adrastea 2000",104910:"Amalthea 2000",104911:"Ananke 2000",104912:"Callisto 2000",104913:"Carme 2000",104914:"Elara 2000",104915:"Europa 2000",104916:"Ganymede 2000",104917:"Himalia 2000",104918:"Io 2000",104908:"Jupiter 2000",104919:"Leda 2000",104920:"Lysithea 2000",104921:"Metis 2000",104922:"Pasiphae 2000",104923:"Sinope 2000",104924:"Thebe 2000"},Mars:{104906:"Deimos 2000",104904:"Mars 1979",104905:"Mars 2000",104971:"Mars 2000 (Sphere)",104907:"Phobos 2000"},Mercury:{104900:"Mercury 2000",104974:"Mercury 2015"},Neptune:{104961:"Despina 2000",104962:"Galatea 2000",104963:"Larissa 2000",104964:"Naiad 2000",104960:"Neptune 2000",104965:"Nereid 2000",104966:"Proteus 2000",104967:"Thalassa 2000",104968:"Triton 2000"},Pluto:{104970:"Charon 2000",104969:"Pluto 2000"},Saturn:{104926:"Atlas 2000",104927:"Calypso 2000",104928:"Dione 2000",104929:"Enceladus 2000",104930:"Epimetheus 2000",104931:"Helene 2000",104932:"Hyperion 2000",104933:"Iapetus 2000",104934:"Janus 2000",104935:"Mimas 2000",104936:"Pan 2000",104937:"Pandora 2000",104938:"Phoebe 2000",104939:"Prometheus 2000",104940:"Rhea 2000",104925:"Saturn 2000",104941:"Telesto 2000",104942:"Tethys 2000",104943:"Titan 2000"},Uranus:{104945:"Ariel 2000",104946:"Belinda 2000",104947:"Bianca 2000",104948:"Cordelia 2000",104949:"Cressida 2000",104950:"Desdemona 2000",104951:"Juliet 2000",104952:"Miranda 2000",104953:"Oberon 2000",104954:"Ophelia 2000",104955:"Portia 2000",104956:"Puck 2000",104957:"Rosalind 2000",104958:"Titania 2000",104959:"Umbriel 2000",104944:"Uranus 2000"},Venus:{104901:"Venus 1985",104902:"Venus 2000"}},"South America":{4208:"Aratu",4218:"Bogota",4802:"Bogota (Bogota)",4623:"CSG 1967",4221:"Campo Inchauspe",4160:"Chos Malal 1914",4224:"Chua",4225:"Corrego Alegre",5524:"Corrego Alegre 1961",4235:"Guyane Francaise",4254:"Hito XVIII 1963",4247:"La Canoa",4249:"Lake",4288:"Loma Quintana",4686:"MAGNA",5354:"MARGEN",9251:"MMN",9253:"MMS",4157:"Mount Dillon",4158:"Naparima 1955",4271:"Naparima 1972",4172:"POSGAR",4694:"POSGAR 1994",4190:"POSGAR 1998",5340:"POSGAR 2007",4161:"Pampa del Castillo",5373:"Peru96",4248:"Provisional South American Datum 1956",9696:"REDGEOMIN",4189:"REGVEN",4624:"RGFG 1995",7041:"RGFG95 (lon-lat)",5527:"SAD 1969 (96)",4170:"SIRGAS",4674:"SIRGAS 2000",8972:"SIRGAS-CON DGF00P01",8973:"SIRGAS-CON DGF01P01",8974:"SIRGAS-CON DGF01P02",8975:"SIRGAS-CON DGF02P01",8976:"SIRGAS-CON DGF04P01",8977:"SIRGAS-CON DGF05P01",8978:"SIRGAS-CON DGF06P01",8979:"SIRGAS-CON DGF07P01",8980:"SIRGAS-CON DGF08P01",8981:"SIRGAS-CON SIR09P01",8982:"SIRGAS-CON SIR10P01",8983:"SIRGAS-CON SIR11P01",8984:"SIRGAS-CON SIR13P01",8985:"SIRGAS-CON SIR14P01",8986:"SIRGAS-CON SIR15P01",8987:"SIRGAS-CON SIR17P01",9184:"SIRGAS-Chile",8949:"SIRGAS-Chile 2010",9148:"SIRGAS-Chile 2013",9153:"SIRGAS-Chile 2016",5381:"SIRGAS-ROU98",4292:"Sapper Hill 1943",4618:"South American Datum 1969",9248:"Tapi Aike",4302:"Trinidad 1903",4309:"Yacare",4311:"Zanderij"},"Spheroid-based":{4001:"Airy 1830",4002:"Airy modified",4003:"Australian National",4035:"Authalic sphere",37008:"Authalic sphere (ARCINFO)",4122:"Average Terrestrial System 1977",4004:"Bessel 1841",4006:"Bessel Namibia",4005:"Bessel modified",4007:"Clarke 1858",4008:"Clarke 1866",4052:"Clarke 1866 Authalic Sphere",4009:"Clarke 1866 Michigan",4034:"Clarke 1880",4013:"Clarke 1880 (Arc)",4010:"Clarke 1880 (Benoit)",4011:"Clarke 1880 (IGN)",4012:"Clarke 1880 (RGS)",4014:"Clarke 1880 (SGA)",4015:"Everest (definition 1937)",4044:"Everest (definition 1962)",4016:"Everest (definition 1967)",4045:"Everest (definition 1975)",4042:"Everest 1830",4018:"Everest Modified",37006:"Everest modified 1969",37002:"Fischer 1960",37003:"Fischer 1968",37004:"Fischer modified",4031:"GEM gravity potential model",4036:"GRS 1967",4019:"GRS 1980",4047:"GRS 1980 Authalic Sphere",104047:"GRS 1980 Mean Radius Sphere",4020:"Helmert 1906",37005:"Hough 1960",4054:"Hughes 1980",4021:"Indonesian National",4022:"International 1924",4053:"International 1924 Authalic Sphere",4024:"Krasovsky 1940",4032:"OSU 1986 geoidal model",4033:"OSU 1991 geoidal model",4027:"Plessis 1817",104128:"Sphere EMEP",4028:"Struve 1860",4025:"Transit precise ephemeris",4760:"WGS 1966",37007:"Walbeck",4029:"War Office"},World:{9006:"IGS00",9012:"IGS05",9014:"IGS08",9019:"IGS14",9003:"IGS97",9009:"IGb00",9017:"IGb08",9380:"IGb14",8988:"ITRF 1988",8989:"ITRF 1989",8990:"ITRF 1990",8991:"ITRF 1991",8992:"ITRF 1992",8993:"ITRF 1993",8994:"ITRF 1994",8995:"ITRF 1996",8996:"ITRF 1997",8997:"ITRF 2000",8998:"ITRF 2005",8999:"ITRF 2008",9e3:"ITRF 2014",4276:"NSWC 9Z-2",104017:"PZ-90.02",104018:"PZ-90.11",4760:"WGS 1966",4322:"WGS 1972",4324:"WGS 1972 TBE",4326:"WGS 1984",9055:"WGS 1984 (G1150)",9056:"WGS 1984 (G1674)",9057:"WGS 1984 (G1762)",9053:"WGS 1984 (G730)",9054:"WGS 1984 (G873)",8888:"WGS 1984 (Transit)"}},"Projected Coordinate Systems":{"ARC (equal arc-second)":{102421:"WGS84 ARC System Zone 01",102422:"WGS84 ARC System Zone 02",102423:"WGS84 ARC System Zone 03",102424:"WGS84 ARC System Zone 04",102425:"WGS84 ARC System Zone 05",102426:"WGS84 ARC System Zone 06",102427:"WGS84 ARC System Zone 07",102428:"WGS84 ARC System Zone 08",102429:"WGS84 ARC System Zone 09",102430:"WGS84 ARC System Zone 10",102431:"WGS84 ARC System Zone 11",102432:"WGS84 ARC System Zone 12",102433:"WGS84 ARC System Zone 13",102434:"WGS84 ARC System Zone 14",102435:"WGS84 ARC System Zone 15",102436:"WGS84 ARC System Zone 16",102437:"WGS84 ARC System Zone 17",102438:"WGS84 ARC System Zone 18"},Continental:{Africa:{102022:"Africa Albers Equal Area Conic",102023:"Africa Equidistant Conic",102024:"Africa Lambert Conformal Conic",102011:"Africa Sinusoidal"},Asia:{102012:"Asia Lambert Conformal Conic",102025:"Asia North Albers Equal Area Conic",102026:"Asia North Equidistant Conic",102027:"Asia North Lambert Conformal Conic",102028:"Asia South Albers Equal Area Conic",102029:"Asia South Equidistant Conic",102030:"Asia South Lambert Conformal Conic"},Europe:{5643:"ED 1950 SPBA LCC",102069:"EMEP 150 Kilometer Grid",102068:"EMEP 50 Kilometer Grid",3035:"ETRS 1989 LAEA",3034:"ETRS 1989 LCC",102013:"Europe Albers Equal Area Conic",102031:"Europe Equidistant Conic",102014:"Europe Lambert Conformal Conic"},"North America":{3338:"Alaska Albers Equal Area Conic",102001:"Canada Albers Equal Area Conic",102002:"Canada Lambert Conformal Conic",102007:"Hawaii Albers Equal Area Conic",5069:"NAD 1927 Contiguous USA Albers",6350:"NAD 1983 (2011) Contiguous USA Albers",3979:"NAD 1983 CSRS Canada Atlas Lambert",3978:"NAD 1983 Canada Atlas Lambert",5070:"NAD 1983 Contiguous USA Albers",3174:"NAD 1983 Great Lakes Basin Albers",3175:"NAD 1983 Great Lakes and St. Lawrence Albers",5071:"NAD 1983 HARN Contiguous USA Albers",5072:"NAD 1983 NSRS2007 Contiguous USA Albers",102008:"North America Albers Equal Area Conic",102010:"North America Equidistant Conic",102009:"North America Lambert Conformal Conic",102589:"Panhandle Energy Albers",2163:"US National Atlas Equal Area",102003:"USA Contiguous Albers Equal Area Conic",102039:"USA Contiguous Albers Equal Area Conic USGS",102005:"USA Contiguous Equidistant Conic",102004:"USA Contiguous Lambert Conformal Conic",102215:"WGS 1984 Canada Atlas LCC"},"South America":{102033:"South America Albers Equal Area Conic",102032:"South America Equidistant Conic",102015:"South America Lambert Conformal Conic"}},"County Systems":{102460:"HJAIA_AirportGrid_09March2010",102391:"NAD 1983 (2011) Fargo Ground Coordinate System (US Feet)",8065:"NAD 1983 (2011) PCCS zone 1 (Feet)",8066:"NAD 1983 (2011) PCCS zone 2 (Feet)",8067:"NAD 1983 (2011) PCCS zone 3 (Feet)",8068:"NAD 1983 (2011) PCCS zone 4 (Feet)",7131:"NAD 1983 (2011) San Francisco CS13 (Meters)",7132:"NAD 1983 (2011) San Francisco CS13 (US Feet)",102389:"NAD 1983 Fargo Ground Coordinate System (US Feet)",102390:"NAD 1983 HARN Fargo Ground Coordinate System (US Feet)",102459:"NAD 1983 Idaho - Ada County",102705:"NAD 1983 Nebraska - Lancaster County (US Feet)",Illinois:{102901:"NAD 1983 (2011) ICS Aurora (US Feet)",102929:"NAD 1983 (2011) ICS Belleville (US Feet)",102914:"NAD 1983 (2011) ICS Bloomington (US Feet)",102932:"NAD 1983 (2011) ICS Carbondale (US Feet)",102925:"NAD 1983 (2011) ICS Carlinville (US Feet)",102916:"NAD 1983 (2011) ICS Champaign (US Feet)",102924:"NAD 1983 (2011) ICS Charleston (US Feet)",102903:"NAD 1983 (2011) ICS Chicago (US Feet)",102917:"NAD 1983 (2011) ICS Decatur (US Feet)",102928:"NAD 1983 (2011) ICS Effingham (US Feet)",102909:"NAD 1983 (2011) ICS Eureka (US Feet)",102902:"NAD 1983 (2011) ICS Freeport (US Feet)",102915:"NAD 1983 (2011) ICS Galesburg (US Feet)",102922:"NAD 1983 (2011) ICS Jacksonville (US Feet)",102927:"NAD 1983 (2011) ICS Jerseyville (US Feet)",102908:"NAD 1983 (2011) ICS Joliet (US Feet)",102919:"NAD 1983 (2011) ICS Lincoln (US Feet)",102920:"NAD 1983 (2011) ICS Macomb (US Feet)",102933:"NAD 1983 (2011) ICS Metropolis (US Feet)",102905:"NAD 1983 (2011) ICS Moline (US Feet)",102911:"NAD 1983 (2011) ICS Monmouth (US Feet)",102931:"NAD 1983 (2011) ICS Mount Vernon (US Feet)",102930:"NAD 1983 (2011) ICS Olney (US Feet)",102906:"NAD 1983 (2011) ICS Ottawa (US Feet)",102913:"NAD 1983 (2011) ICS Peoria (US Feet)",102910:"NAD 1983 (2011) ICS Pontiac (US Feet)",102918:"NAD 1983 (2011) ICS Quincy (US Feet)",102926:"NAD 1983 (2011) ICS Robinson (US Feet)",102904:"NAD 1983 (2011) ICS Rockford (US Feet)",102921:"NAD 1983 (2011) ICS Springfield (US Feet)",102907:"NAD 1983 (2011) ICS Sterling (US Feet)",102923:"NAD 1983 (2011) ICS Taylorville (US Feet)",102912:"NAD 1983 (2011) ICS Watseka (US Feet)"},Indiana:{Meters:{7257:"NAD 1983 (2011) InGCS Adams (m)",7259:"NAD 1983 (2011) InGCS Allen (m)",7261:"NAD 1983 (2011) InGCS Bartholomew (m)",7263:"NAD 1983 (2011) InGCS Benton (m)",7265:"NAD 1983 (2011) InGCS Blackford-Delaware (m)",7267:"NAD 1983 (2011) InGCS Boone-Hendricks (m)",7269:"NAD 1983 (2011) InGCS Brown (m)",7271:"NAD 1983 (2011) InGCS Carroll (m)",7273:"NAD 1983 (2011) InGCS Cass (m)",7275:"NAD 1983 (2011) InGCS Clark-Floyd-Scott (m)",7277:"NAD 1983 (2011) InGCS Clay (m)",7279:"NAD 1983 (2011) InGCS Clinton (m)",7281:"NAD 1983 (2011) InGCS Crawford-Lawrence-Orange (m)",7283:"NAD 1983 (2011) InGCS Daviess-Greene (m)",7289:"NAD 1983 (2011) InGCS DeKalb (m)",7285:"NAD 1983 (2011) InGCS Dearborn-Ohio-Switzerland (m)",7287:"NAD 1983 (2011) InGCS Decatur-Rush (m)",7291:"NAD 1983 (2011) InGCS Dubois-Martin (m)",7293:"NAD 1983 (2011) InGCS Elkhart-Kosciusko-Wabash (m)",7295:"NAD 1983 (2011) InGCS Fayette-Franklin-Union (m)",7297:"NAD 1983 (2011) InGCS Fountain-Warren (m)",7299:"NAD 1983 (2011) InGCS Fulton-Marshall-St. Joseph (m)",7301:"NAD 1983 (2011) InGCS Gibson (m)",7303:"NAD 1983 (2011) InGCS Grant (m)",7305:"NAD 1983 (2011) InGCS Hamilton-Tipton (m)",7307:"NAD 1983 (2011) InGCS Hancock-Madison (m)",7309:"NAD 1983 (2011) InGCS Harrison-Washington (m)",7311:"NAD 1983 (2011) InGCS Henry (m)",7313:"NAD 1983 (2011) InGCS Howard-Miami (m)",7315:"NAD 1983 (2011) InGCS Huntington-Whitley (m)",7317:"NAD 1983 (2011) InGCS Jackson (m)",7319:"NAD 1983 (2011) InGCS Jasper-Porter (m)",7321:"NAD 1983 (2011) InGCS Jay (m)",7323:"NAD 1983 (2011) InGCS Jefferson (m)",7325:"NAD 1983 (2011) InGCS Jennings (m)",7327:"NAD 1983 (2011) InGCS Johnson-Marion (m)",7329:"NAD 1983 (2011) InGCS Knox (m)",7331:"NAD 1983 (2011) InGCS LaGrange-Noble (m)",7335:"NAD 1983 (2011) InGCS LaPorte-Pulaski-Starke (m)",7333:"NAD 1983 (2011) InGCS Lake-Newton (m)",7337:"NAD 1983 (2011) InGCS Monroe-Morgan (m)",7339:"NAD 1983 (2011) InGCS Montgomery-Putnam (m)",7341:"NAD 1983 (2011) InGCS Owen (m)",7343:"NAD 1983 (2011) InGCS Parke-Vermillion (m)",7345:"NAD 1983 (2011) InGCS Perry (m)",7347:"NAD 1983 (2011) InGCS Pike-Warrick (m)",7349:"NAD 1983 (2011) InGCS Posey (m)",7351:"NAD 1983 (2011) InGCS Randolph-Wayne (m)",7353:"NAD 1983 (2011) InGCS Ripley (m)",7355:"NAD 1983 (2011) InGCS Shelby (m)",7357:"NAD 1983 (2011) InGCS Spencer (m)",7359:"NAD 1983 (2011) InGCS Steuben (m)",7361:"NAD 1983 (2011) InGCS Sullivan (m)",7363:"NAD 1983 (2011) InGCS Tippecanoe-White (m)",7365:"NAD 1983 (2011) InGCS Vanderburgh (m)",7367:"NAD 1983 (2011) InGCS Vigo (m)",7369:"NAD 1983 (2011) InGCS Wells (m)"},"US Feet":{7258:"NAD 1983 (2011) InGCS Adams (ftUS)",7260:"NAD 1983 (2011) InGCS Allen (ftUS)",7262:"NAD 1983 (2011) InGCS Bartholomew (ftUS)",7264:"NAD 1983 (2011) InGCS Benton (ftUS)",7266:"NAD 1983 (2011) InGCS Blackford-Delaware (ftUS)",7268:"NAD 1983 (2011) InGCS Boone-Hendricks (ftUS)",7270:"NAD 1983 (2011) InGCS Brown (ftUS)",7272:"NAD 1983 (2011) InGCS Carroll (ftUS)",7274:"NAD 1983 (2011) InGCS Cass (ftUS)",7276:"NAD 1983 (2011) InGCS Clark-Floyd-Scott (ftUS)",7278:"NAD 1983 (2011) InGCS Clay (ftUS)",7280:"NAD 1983 (2011) InGCS Clinton (ftUS)",7282:"NAD 1983 (2011) InGCS Crawford-Lawrence-Orange (ftUS)",7284:"NAD 1983 (2011) InGCS Daviess-Greene (ftUS)",7290:"NAD 1983 (2011) InGCS DeKalb (ftUS)",7286:"NAD 1983 (2011) InGCS Dearborn-Ohio-Switzerland (ftUS)",7288:"NAD 1983 (2011) InGCS Decatur-Rush (ftUS)",7292:"NAD 1983 (2011) InGCS Dubois-Martin (ftUS)",7294:"NAD 1983 (2011) InGCS Elkhart-Kosciusko-Wabash (ftUS)",7296:"NAD 1983 (2011) InGCS Fayette-Franklin-Union (ftUS)",7298:"NAD 1983 (2011) InGCS Fountain-Warren (ftUS)",7300:"NAD 1983 (2011) InGCS Fulton-Marshall-St. Joseph (ftUS)",7302:"NAD 1983 (2011) InGCS Gibson (ftUS)",7304:"NAD 1983 (2011) InGCS Grant (ftUS)",7306:"NAD 1983 (2011) InGCS Hamilton-Tipton (ftUS)",7308:"NAD 1983 (2011) InGCS Hancock-Madison (ftUS)",7310:"NAD 1983 (2011) InGCS Harrison-Washington (ftUS)",7312:"NAD 1983 (2011) InGCS Henry (ftUS)",7314:"NAD 1983 (2011) InGCS Howard-Miami (ftUS)",7316:"NAD 1983 (2011) InGCS Huntington-Whitley (ftUS)",7318:"NAD 1983 (2011) InGCS Jackson (ftUS)",7320:"NAD 1983 (2011) InGCS Jasper-Porter (ftUS)",7322:"NAD 1983 (2011) InGCS Jay (ftUS)",7324:"NAD 1983 (2011) InGCS Jefferson (ftUS)",7326:"NAD 1983 (2011) InGCS Jennings (ftUS)",7328:"NAD 1983 (2011) InGCS Johnson-Marion (ftUS)",7330:"NAD 1983 (2011) InGCS Knox (ftUS)",7332:"NAD 1983 (2011) InGCS LaGrange-Noble (ftUS)",7336:"NAD 1983 (2011) InGCS LaPorte-Pulaski-Starke (ftUS)",7334:"NAD 1983 (2011) InGCS Lake-Newton (ftUS)",7338:"NAD 1983 (2011) InGCS Monroe-Morgan (ftUS)",7340:"NAD 1983 (2011) InGCS Montgomery-Putnam (ftUS)",7342:"NAD 1983 (2011) InGCS Owen (ftUS)",7344:"NAD 1983 (2011) InGCS Parke-Vermillion (ftUS)",7346:"NAD 1983 (2011) InGCS Perry (ftUS)",7348:"NAD 1983 (2011) InGCS Pike-Warrick (ftUS)",7350:"NAD 1983 (2011) InGCS Posey (ftUS)",7352:"NAD 1983 (2011) InGCS Randolph-Wayne (ftUS)",7354:"NAD 1983 (2011) InGCS Ripley (ftUS)",7356:"NAD 1983 (2011) InGCS Shelby (ftUS)",7358:"NAD 1983 (2011) InGCS Spencer (ftUS)",7360:"NAD 1983 (2011) InGCS Steuben (ftUS)",7362:"NAD 1983 (2011) InGCS Sullivan (ftUS)",7364:"NAD 1983 (2011) InGCS Tippecanoe-White (ftUS)",7366:"NAD 1983 (2011) InGCS Vanderburgh (ftUS)",7368:"NAD 1983 (2011) InGCS Vigo (ftUS)",7370:"NAD 1983 (2011) InGCS Wells (ftUS)"}},Iowa:{7057:"NAD 1983 (2011) IaRCS zone 1",7066:"NAD 1983 (2011) IaRCS zone 10",7067:"NAD 1983 (2011) IaRCS zone 11",7068:"NAD 1983 (2011) IaRCS zone 12",7069:"NAD 1983 (2011) IaRCS zone 13",7070:"NAD 1983 (2011) IaRCS zone 14",7058:"NAD 1983 (2011) IaRCS zone 2",7059:"NAD 1983 (2011) IaRCS zone 3",7060:"NAD 1983 (2011) IaRCS zone 4",7061:"NAD 1983 (2011) IaRCS zone 5",7062:"NAD 1983 (2011) IaRCS zone 6",7063:"NAD 1983 (2011) IaRCS zone 7",7064:"NAD 1983 (2011) IaRCS zone 8",7065:"NAD 1983 (2011) IaRCS zone 9"},Kansas:{8518:"NAD 1983 (2011) KS RCS Zone 1",8527:"NAD 1983 (2011) KS RCS Zone 10",8528:"NAD 1983 (2011) KS RCS Zone 11",8529:"NAD 1983 (2011) KS RCS Zone 12",8531:"NAD 1983 (2011) KS RCS Zone 13",8533:"NAD 1983 (2011) KS RCS Zone 14",8534:"NAD 1983 (2011) KS RCS Zone 15",8535:"NAD 1983 (2011) KS RCS Zone 16",8536:"NAD 1983 (2011) KS RCS Zone 17",8538:"NAD 1983 (2011) KS RCS Zone 18",8539:"NAD 1983 (2011) KS RCS Zone 19",8519:"NAD 1983 (2011) KS RCS Zone 2",8540:"NAD 1983 (2011) KS RCS Zone 20",8520:"NAD 1983 (2011) KS RCS Zone 3",8521:"NAD 1983 (2011) KS RCS Zone 4",8522:"NAD 1983 (2011) KS RCS Zone 5",8523:"NAD 1983 (2011) KS RCS Zone 6",8524:"NAD 1983 (2011) KS RCS Zone 7",8525:"NAD 1983 (2011) KS RCS Zone 8",8526:"NAD 1983 (2011) KS RCS Zone 9"},"Las Vegas":{8383:"NAD 1983 (2011) NCRS Las Vegas (Meters)",8384:"NAD 1983 (2011) NCRS Las Vegas (US Feet)",8385:"NAD 1983 (2011) NCRS Las Vegas high (Meters)",8387:"NAD 1983 (2011) NCRS Las Vegas high (US Feet)",8379:"NAD 1983 NCRS Las Vegas (Meters)",8380:"NAD 1983 NCRS Las Vegas (US Feet)",8381:"NAD 1983 NCRS Las Vegas high (Meters)",8382:"NAD 1983 NCRS Las Vegas high (US Feet)"},Minnesota:{Meters:{103600:"NAD 1983 HARN Adj MN Aitkin (Meters)",103608:"NAD 1983 HARN Adj MN Anoka (Meters)",103609:"NAD 1983 HARN Adj MN Becker (Meters)",103610:"NAD 1983 HARN Adj MN Beltrami North (Meters)",103611:"NAD 1983 HARN Adj MN Beltrami South (Meters)",103612:"NAD 1983 HARN Adj MN Benton (Meters)",103613:"NAD 1983 HARN Adj MN Big Stone (Meters)",103614:"NAD 1983 HARN Adj MN Blue Earth (Meters)",103615:"NAD 1983 HARN Adj MN Brown (Meters)",103616:"NAD 1983 HARN Adj MN Carlton (Meters)",103617:"NAD 1983 HARN Adj MN Carver (Meters)",103618:"NAD 1983 HARN Adj MN Cass North (Meters)",103619:"NAD 1983 HARN Adj MN Cass South (Meters)",103620:"NAD 1983 HARN Adj MN Chippewa (Meters)",103621:"NAD 1983 HARN Adj MN Chisago (Meters)",103601:"NAD 1983 HARN Adj MN Clay (Meters)",103602:"NAD 1983 HARN Adj MN Clearwater (Meters)",103622:"NAD 1983 HARN Adj MN Cook North (Meters)",103623:"NAD 1983 HARN Adj MN Cook South (Meters)",103624:"NAD 1983 HARN Adj MN Cottonwood (Meters)",103625:"NAD 1983 HARN Adj MN Crow Wing (Meters)",103626:"NAD 1983 HARN Adj MN Dakota (Meters)",103627:"NAD 1983 HARN Adj MN Dodge (Meters)",103628:"NAD 1983 HARN Adj MN Douglas (Meters)",103629:"NAD 1983 HARN Adj MN Faribault (Meters)",103630:"NAD 1983 HARN Adj MN Fillmore (Meters)",103631:"NAD 1983 HARN Adj MN Freeborn (Meters)",103632:"NAD 1983 HARN Adj MN Goodhue (Meters)",103633:"NAD 1983 HARN Adj MN Grant (Meters)",103634:"NAD 1983 HARN Adj MN Hennepin (Meters)",103635:"NAD 1983 HARN Adj MN Houston (Meters)",103603:"NAD 1983 HARN Adj MN Hubbard (Meters)",103636:"NAD 1983 HARN Adj MN Isanti (Meters)",103637:"NAD 1983 HARN Adj MN Itasca North (Meters)",103638:"NAD 1983 HARN Adj MN Itasca South (Meters)",103639:"NAD 1983 HARN Adj MN Jackson (Meters)",103640:"NAD 1983 HARN Adj MN Kanabec (Meters)",103641:"NAD 1983 HARN Adj MN Kandiyohi (Meters)",103642:"NAD 1983 HARN Adj MN Kittson (Meters)",103643:"NAD 1983 HARN Adj MN Koochiching (Meters)",103644:"NAD 1983 HARN Adj MN Lac Qui Parle (Meters)",103604:"NAD 1983 HARN Adj MN Lake (Meters)",103645:"NAD 1983 HARN Adj MN Lake of the Woods North (Meters)",103646:"NAD 1983 HARN Adj MN Lake of the Woods South (Meters)",103647:"NAD 1983 HARN Adj MN Le Sueur (Meters)",103648:"NAD 1983 HARN Adj MN Lincoln (Meters)",103649:"NAD 1983 HARN Adj MN Lyon (Meters)",103651:"NAD 1983 HARN Adj MN Mahnomen (Meters)",103652:"NAD 1983 HARN Adj MN Marshall (Meters)",103653:"NAD 1983 HARN Adj MN Martin (Meters)",103650:"NAD 1983 HARN Adj MN McLeod (Meters)",103654:"NAD 1983 HARN Adj MN Meeker (Meters)",103605:"NAD 1983 HARN Adj MN Mille Lacs (Meters)",103655:"NAD 1983 HARN Adj MN Morrison (Meters)",103656:"NAD 1983 HARN Adj MN Mower (Meters)",103657:"NAD 1983 HARN Adj MN Murray (Meters)",103658:"NAD 1983 HARN Adj MN Nicollet (Meters)",103659:"NAD 1983 HARN Adj MN Nobles (Meters)",103660:"NAD 1983 HARN Adj MN Norman (Meters)",103661:"NAD 1983 HARN Adj MN Olmsted (Meters)",103662:"NAD 1983 HARN Adj MN Ottertail (Meters)",103663:"NAD 1983 HARN Adj MN Pennington (Meters)",103664:"NAD 1983 HARN Adj MN Pine (Meters)",103665:"NAD 1983 HARN Adj MN Pipestone (Meters)",103666:"NAD 1983 HARN Adj MN Polk (Meters)",103667:"NAD 1983 HARN Adj MN Pope (Meters)",103668:"NAD 1983 HARN Adj MN Ramsey (Meters)",103669:"NAD 1983 HARN Adj MN Red Lake (Meters)",103670:"NAD 1983 HARN Adj MN Redwood (Meters)",103671:"NAD 1983 HARN Adj MN Renville (Meters)",103672:"NAD 1983 HARN Adj MN Rice (Meters)",103673:"NAD 1983 HARN Adj MN Rock (Meters)",103674:"NAD 1983 HARN Adj MN Roseau (Meters)",103678:"NAD 1983 HARN Adj MN Scott (Meters)",103679:"NAD 1983 HARN Adj MN Sherburne (Meters)",103680:"NAD 1983 HARN Adj MN Sibley (Meters)",103694:"NAD 1983 HARN Adj MN St. Louis (Meters)",103676:"NAD 1983 HARN Adj MN St. Louis Central (Meters)",103675:"NAD 1983 HARN Adj MN St. Louis North (Meters)",103677:"NAD 1983 HARN Adj MN St. Louis South (Meters)",103681:"NAD 1983 HARN Adj MN Stearns (Meters)",103682:"NAD 1983 HARN Adj MN Steele (Meters)",103683:"NAD 1983 HARN Adj MN Stevens (Meters)",103684:"NAD 1983 HARN Adj MN Swift (Meters)",103685:"NAD 1983 HARN Adj MN Todd (Meters)",103686:"NAD 1983 HARN Adj MN Traverse (Meters)",103687:"NAD 1983 HARN Adj MN Wabasha (Meters)",103688:"NAD 1983 HARN Adj MN Wadena (Meters)",103689:"NAD 1983 HARN Adj MN Waseca (Meters)",103606:"NAD 1983 HARN Adj MN Washington (Meters)",103690:"NAD 1983 HARN Adj MN Watonwan (Meters)",103607:"NAD 1983 HARN Adj MN Wilkin (Meters)",103691:"NAD 1983 HARN Adj MN Winona (Meters)",103692:"NAD 1983 HARN Adj MN Wright (Meters)",103693:"NAD 1983 HARN Adj MN Yellow Medicine (Meters)"},"US Feet":{103700:"NAD 1983 HARN Adj MN Aitkin (US Feet)",103708:"NAD 1983 HARN Adj MN Anoka (US Feet)",103709:"NAD 1983 HARN Adj MN Becker (US Feet)",103710:"NAD 1983 HARN Adj MN Beltrami North (US Feet)",103711:"NAD 1983 HARN Adj MN Beltrami South (US Feet)",103712:"NAD 1983 HARN Adj MN Benton (US Feet)",103713:"NAD 1983 HARN Adj MN Big Stone (US Feet)",103714:"NAD 1983 HARN Adj MN Blue Earth (US Feet)",103715:"NAD 1983 HARN Adj MN Brown (US Feet)",103716:"NAD 1983 HARN Adj MN Carlton (US Feet)",103717:"NAD 1983 HARN Adj MN Carver (US Feet)",103718:"NAD 1983 HARN Adj MN Cass North (US Feet)",103719:"NAD 1983 HARN Adj MN Cass South (US Feet)",103720:"NAD 1983 HARN Adj MN Chippewa (US Feet)",103721:"NAD 1983 HARN Adj MN Chisago (US Feet)",103701:"NAD 1983 HARN Adj MN Clay (US Feet)",103702:"NAD 1983 HARN Adj MN Clearwater (US Feet)",103722:"NAD 1983 HARN Adj MN Cook North (US Feet)",103723:"NAD 1983 HARN Adj MN Cook South (US Feet)",103724:"NAD 1983 HARN Adj MN Cottonwood (US Feet)",103725:"NAD 1983 HARN Adj MN Crow Wing (US Feet)",103726:"NAD 1983 HARN Adj MN Dakota (US Feet)",103727:"NAD 1983 HARN Adj MN Dodge (US Feet)",103728:"NAD 1983 HARN Adj MN Douglas (US Feet)",103729:"NAD 1983 HARN Adj MN Faribault (US Feet)",103730:"NAD 1983 HARN Adj MN Fillmore (US Feet)",103731:"NAD 1983 HARN Adj MN Freeborn (US Feet)",103732:"NAD 1983 HARN Adj MN Goodhue (US Feet)",103733:"NAD 1983 HARN Adj MN Grant (US Feet)",103734:"NAD 1983 HARN Adj MN Hennepin (US Feet)",103735:"NAD 1983 HARN Adj MN Houston (US Feet)",103703:"NAD 1983 HARN Adj MN Hubbard (US Feet)",103736:"NAD 1983 HARN Adj MN Isanti (US Feet)",103737:"NAD 1983 HARN Adj MN Itasca North (US Feet)",103738:"NAD 1983 HARN Adj MN Itasca South (US Feet)",103739:"NAD 1983 HARN Adj MN Jackson (US Feet)",103740:"NAD 1983 HARN Adj MN Kanabec (US Feet)",103741:"NAD 1983 HARN Adj MN Kandiyohi (US Feet)",103742:"NAD 1983 HARN Adj MN Kittson (US Feet)",103743:"NAD 1983 HARN Adj MN Koochiching (US Feet)",103744:"NAD 1983 HARN Adj MN Lac Qui Parle (US Feet)",103704:"NAD 1983 HARN Adj MN Lake (US Feet)",103745:"NAD 1983 HARN Adj MN Lake of the Woods North (US Feet)",103746:"NAD 1983 HARN Adj MN Lake of the Woods South (US Feet)",103747:"NAD 1983 HARN Adj MN Le Sueur (US Feet)",103748:"NAD 1983 HARN Adj MN Lincoln (US Feet)",103749:"NAD 1983 HARN Adj MN Lyon (US Feet)",103751:"NAD 1983 HARN Adj MN Mahnomen (US Feet)",103752:"NAD 1983 HARN Adj MN Marshall (US Feet)",103753:"NAD 1983 HARN Adj MN Martin (US Feet)",103750:"NAD 1983 HARN Adj MN McLeod (US Feet)",103754:"NAD 1983 HARN Adj MN Meeker (US Feet)",103705:"NAD 1983 HARN Adj MN Mille Lacs (US Feet)",103755:"NAD 1983 HARN Adj MN Morrison (US Feet)",103756:"NAD 1983 HARN Adj MN Mower (US Feet)",103757:"NAD 1983 HARN Adj MN Murray (US Feet)",103758:"NAD 1983 HARN Adj MN Nicollet (US Feet)",103759:"NAD 1983 HARN Adj MN Nobles (US Feet)",103760:"NAD 1983 HARN Adj MN Norman (US Feet)",103761:"NAD 1983 HARN Adj MN Olmsted (US Feet)",103762:"NAD 1983 HARN Adj MN Ottertail (US Feet)",103763:"NAD 1983 HARN Adj MN Pennington (US Feet)",103764:"NAD 1983 HARN Adj MN Pine (US Feet)",103765:"NAD 1983 HARN Adj MN Pipestone (US Feet)",103766:"NAD 1983 HARN Adj MN Polk (US Feet)",103767:"NAD 1983 HARN Adj MN Pope (US Feet)",103768:"NAD 1983 HARN Adj MN Ramsey (US Feet)",103769:"NAD 1983 HARN Adj MN Red Lake (US Feet)",103770:"NAD 1983 HARN Adj MN Redwood (US Feet)",103771:"NAD 1983 HARN Adj MN Renville (US Feet)",103772:"NAD 1983 HARN Adj MN Rice (US Feet)",103773:"NAD 1983 HARN Adj MN Rock (US Feet)",103774:"NAD 1983 HARN Adj MN Roseau (US Feet)",103778:"NAD 1983 HARN Adj MN Scott (US Feet)",103779:"NAD 1983 HARN Adj MN Sherburne (US Feet)",103780:"NAD 1983 HARN Adj MN Sibley (US Feet)",103695:"NAD 1983 HARN Adj MN St. Louis (US Feet)",103776:"NAD 1983 HARN Adj MN St. Louis Central (US Feet)",103775:"NAD 1983 HARN Adj MN St. Louis North (US Feet)",103777:"NAD 1983 HARN Adj MN St. Louis South (US Feet)",103781:"NAD 1983 HARN Adj MN Stearns (US Feet)",103782:"NAD 1983 HARN Adj MN Steele (US Feet)",103783:"NAD 1983 HARN Adj MN Stevens (US Feet)",103784:"NAD 1983 HARN Adj MN Swift (US Feet)",103785:"NAD 1983 HARN Adj MN Todd (US Feet)",103786:"NAD 1983 HARN Adj MN Traverse (US Feet)",103787:"NAD 1983 HARN Adj MN Wabasha (US Feet)",103788:"NAD 1983 HARN Adj MN Wadena (US Feet)",103789:"NAD 1983 HARN Adj MN Waseca (US Feet)",103706:"NAD 1983 HARN Adj MN Washington (US Feet)",103790:"NAD 1983 HARN Adj MN Watonwan (US Feet)",103707:"NAD 1983 HARN Adj MN Wilkin (US Feet)",103791:"NAD 1983 HARN Adj MN Winona (US Feet)",103792:"NAD 1983 HARN Adj MN Wright (US Feet)",103793:"NAD 1983 HARN Adj MN Yellow Medicine (US Feet)"}},Wisconsin:{103946:"NAD 1983 HARN Adj. Wisconsin Chippewa WCCS (US foot)",103846:"NAD 1983 HARN Adj. Wisconsin Chippewa WCCS (meters)"},"Wisconsin CRS":{Meters:{103300:"NAD 1983 HARN Wisconsin CRS Adams (Meters)",8225:"NAD 1983 HARN Wisconsin CRS Adams and Juneau (Meters)",8222:"NAD 1983 HARN Wisconsin CRS Ashland (Meters)",8218:"NAD 1983 HARN Wisconsin CRS Barron (Meters)",8214:"NAD 1983 HARN Wisconsin CRS Bayfield (Meters)",8212:"NAD 1983 HARN Wisconsin CRS Brown (Meters)",8209:"NAD 1983 HARN Wisconsin CRS Buffalo (Meters)",8207:"NAD 1983 HARN Wisconsin CRS Burnett (Meters)",103307:"NAD 1983 HARN Wisconsin CRS Calumet (Meters)",8205:"NAD 1983 HARN Wisconsin CRS Calumet, Fond du Lac, Outagamie and Winnebago (m)",8203:"NAD 1983 HARN Wisconsin CRS Chippewa (Meters)",8201:"NAD 1983 HARN Wisconsin CRS Clark (Meters)",8198:"NAD 1983 HARN Wisconsin CRS Columbia (Meters)",8196:"NAD 1983 HARN Wisconsin CRS Crawford (Meters)",8191:"NAD 1983 HARN Wisconsin CRS Dane (Meters)",103313:"NAD 1983 HARN Wisconsin CRS Dodge (Meters)",8187:"NAD 1983 HARN Wisconsin CRS Dodge and Jefferson (Meters)",8184:"NAD 1983 HARN Wisconsin CRS Door (Meters)",8181:"NAD 1983 HARN Wisconsin CRS Douglas (Meters)",8179:"NAD 1983 HARN Wisconsin CRS Dunn (Meters)",8092:"NAD 1983 HARN Wisconsin CRS Eau Claire (Meters)",8090:"NAD 1983 HARN Wisconsin CRS Florence (Meters)",103319:"NAD 1983 HARN Wisconsin CRS Fond du Lac (Meters)",8173:"NAD 1983 HARN Wisconsin CRS Forest (Meters)",8171:"NAD 1983 HARN Wisconsin CRS Grant (Meters)",103322:"NAD 1983 HARN Wisconsin CRS Green (Meters)",103323:"NAD 1983 HARN Wisconsin CRS Green Lake (Meters)",8167:"NAD 1983 HARN Wisconsin CRS Green Lake and Marquette (Meters)",8169:"NAD 1983 HARN Wisconsin CRS Green and Lafayette (Meters)",8165:"NAD 1983 HARN Wisconsin CRS Iowa (Meters)",8163:"NAD 1983 HARN Wisconsin CRS Iron (Meters)",8161:"NAD 1983 HARN Wisconsin CRS Jackson (Meters)",103327:"NAD 1983 HARN Wisconsin CRS Jefferson (Meters)",103328:"NAD 1983 HARN Wisconsin CRS Juneau (Meters)",103329:"NAD 1983 HARN Wisconsin CRS Kenosha (Meters)",8159:"NAD 1983 HARN Wisconsin CRS Kenosha, Milwaukee, Ozaukee and Racine (Meters)",103330:"NAD 1983 HARN Wisconsin CRS Kewaunee (Meters)",8157:"NAD 1983 HARN Wisconsin CRS Kewaunee, Manitowoc and Sheboygan (Meters)",8155:"NAD 1983 HARN Wisconsin CRS La Crosse (Meters)",103332:"NAD 1983 HARN Wisconsin CRS Lafayette (Meters)",8153:"NAD 1983 HARN Wisconsin CRS Langlade (Meters)",8151:"NAD 1983 HARN Wisconsin CRS Lincoln (Meters)",103335:"NAD 1983 HARN Wisconsin CRS Manitowoc (Meters)",8149:"NAD 1983 HARN Wisconsin CRS Marathon (Meters)",8147:"NAD 1983 HARN Wisconsin CRS Marinette (Meters)",103338:"NAD 1983 HARN Wisconsin CRS Marquette (Meters)",8145:"NAD 1983 HARN Wisconsin CRS Menominee (Meters)",103340:"NAD 1983 HARN Wisconsin CRS Milwaukee (Meters)",8143:"NAD 1983 HARN Wisconsin CRS Monroe (Meters)",8141:"NAD 1983 HARN Wisconsin CRS Oconto (Meters)",8139:"NAD 1983 HARN Wisconsin CRS Oneida (Meters)",103344:"NAD 1983 HARN Wisconsin CRS Outagamie (Meters)",103345:"NAD 1983 HARN Wisconsin CRS Ozaukee (Meters)",103346:"NAD 1983 HARN Wisconsin CRS Pepin (Meters)",8137:"NAD 1983 HARN Wisconsin CRS Pepin and Pierce (Meters)",103347:"NAD 1983 HARN Wisconsin CRS Pierce (Meters)",8135:"NAD 1983 HARN Wisconsin CRS Polk (Meters)",8133:"NAD 1983 HARN Wisconsin CRS Portage (Meters)",8131:"NAD 1983 HARN Wisconsin CRS Price (Meters)",103351:"NAD 1983 HARN Wisconsin CRS Racine (Meters)",8129:"NAD 1983 HARN Wisconsin CRS Richland (Meters)",8127:"NAD 1983 HARN Wisconsin CRS Rock (Meters)",8125:"NAD 1983 HARN Wisconsin CRS Rusk (Meters)",8123:"NAD 1983 HARN Wisconsin CRS Sauk (Meters)",8121:"NAD 1983 HARN Wisconsin CRS Sawyer (Meters)",8119:"NAD 1983 HARN Wisconsin CRS Shawano (Meters)",103358:"NAD 1983 HARN Wisconsin CRS Sheboygan (Meters)",8117:"NAD 1983 HARN Wisconsin CRS St. Croix (Meters)",8115:"NAD 1983 HARN Wisconsin CRS Taylor (Meters)",8113:"NAD 1983 HARN Wisconsin CRS Trempealeau (Meters)",8111:"NAD 1983 HARN Wisconsin CRS Vernon (Meters)",8109:"NAD 1983 HARN Wisconsin CRS Vilas (Meters)",8107:"NAD 1983 HARN Wisconsin CRS Walworth (Meters)",8105:"NAD 1983 HARN Wisconsin CRS Washburn (Meters)",8103:"NAD 1983 HARN Wisconsin CRS Washington (Meters)",8101:"NAD 1983 HARN Wisconsin CRS Waukesha (Meters)",8099:"NAD 1983 HARN Wisconsin CRS Waupaca (Meters)",8097:"NAD 1983 HARN Wisconsin CRS Waushara (Meters)",103370:"NAD 1983 HARN Wisconsin CRS Winnebago (Meters)",8095:"NAD 1983 HARN Wisconsin CRS Wood (Meters)"},"NAD 1983 (2011)":{Meters:{7528:"NAD 1983 (2011) WISCRS Adams and Juneau (Meters)",7529:"NAD 1983 (2011) WISCRS Ashland (Meters)",7530:"NAD 1983 (2011) WISCRS Barron (Meters)",7531:"NAD 1983 (2011) WISCRS Bayfield (Meters)",7532:"NAD 1983 (2011) WISCRS Brown (Meters)",7533:"NAD 1983 (2011) WISCRS Buffalo (Meters)",7534:"NAD 1983 (2011) WISCRS Burnett (Meters)",7535:"NAD 1983 (2011) WISCRS Calumet, Fond du Lac, Outagamie, Winnebago (Meters)",7536:"NAD 1983 (2011) WISCRS Chippewa (Meters)",7537:"NAD 1983 (2011) WISCRS Clark (Meters)",7538:"NAD 1983 (2011) WISCRS Columbia (Meters)",7539:"NAD 1983 (2011) WISCRS Crawford (Meters)",7540:"NAD 1983 (2011) WISCRS Dane (Meters)",7541:"NAD 1983 (2011) WISCRS Dodge and Jefferson (Meters)",7542:"NAD 1983 (2011) WISCRS Door (Meters)",7543:"NAD 1983 (2011) WISCRS Douglas (Meters)",7544:"NAD 1983 (2011) WISCRS Dunn (Meters)",7545:"NAD 1983 (2011) WISCRS Eau Claire (Meters)",7546:"NAD 1983 (2011) WISCRS Florence (Meters)",7547:"NAD 1983 (2011) WISCRS Forest (Meters)",7548:"NAD 1983 (2011) WISCRS Grant (Meters)",7550:"NAD 1983 (2011) WISCRS Green Lake and Marquette (Meters)",7549:"NAD 1983 (2011) WISCRS Green and Lafayette (Meters)",7551:"NAD 1983 (2011) WISCRS Iowa (Meters)",7552:"NAD 1983 (2011) WISCRS Iron (Meters)",7553:"NAD 1983 (2011) WISCRS Jackson (Meters)",7554:"NAD 1983 (2011) WISCRS Kenosha, Milwaukee, Ozaukee, Racine (Meters)",7555:"NAD 1983 (2011) WISCRS Kewaunee, Manitowoc, Sheboygan (Meters)",7556:"NAD 1983 (2011) WISCRS La Crosse (Meters)",7557:"NAD 1983 (2011) WISCRS Langlade (Meters)",7558:"NAD 1983 (2011) WISCRS Lincoln (Meters)",7559:"NAD 1983 (2011) WISCRS Marathon (Meters)",7560:"NAD 1983 (2011) WISCRS Marinette (Meters)",7561:"NAD 1983 (2011) WISCRS Menominee (Meters)",7562:"NAD 1983 (2011) WISCRS Monroe (Meters)",7563:"NAD 1983 (2011) WISCRS Oconto (Meters)",7564:"NAD 1983 (2011) WISCRS Oneida (Meters)",7565:"NAD 1983 (2011) WISCRS Pepin and Pierce (Meters)",7566:"NAD 1983 (2011) WISCRS Polk (Meters)",7567:"NAD 1983 (2011) WISCRS Portage (Meters)",7568:"NAD 1983 (2011) WISCRS Price (Meters)",7569:"NAD 1983 (2011) WISCRS Richland (Meters)",7570:"NAD 1983 (2011) WISCRS Rock (Meters)",7571:"NAD 1983 (2011) WISCRS Rusk (Meters)",7572:"NAD 1983 (2011) WISCRS Sauk (Meters)",7573:"NAD 1983 (2011) WISCRS Sawyer (Meters)",7574:"NAD 1983 (2011) WISCRS Shawano (Meters)",7575:"NAD 1983 (2011) WISCRS St. Croix (Meters)",7576:"NAD 1983 (2011) WISCRS Taylor (Meters)",7577:"NAD 1983 (2011) WISCRS Trempealeau (Meters)",7578:"NAD 1983 (2011) WISCRS Vernon (Meters)",7579:"NAD 1983 (2011) WISCRS Vilas (Meters)",7580:"NAD 1983 (2011) WISCRS Walworth (Meters)",7581:"NAD 1983 (2011) WISCRS Washburn (Meters)",7582:"NAD 1983 (2011) WISCRS Washington (Meters)",7583:"NAD 1983 (2011) WISCRS Waukesha (Meters)",7584:"NAD 1983 (2011) WISCRS Waupaca (Meters)",7585:"NAD 1983 (2011) WISCRS Waushara (Meters)",7586:"NAD 1983 (2011) WISCRS Wood (Meters)"},"US Feet":{7587:"NAD 1983 (2011) WISCRS Adams and Juneau (US Feet)",7588:"NAD 1983 (2011) WISCRS Ashland (US Feet)",7589:"NAD 1983 (2011) WISCRS Barron (US Feet)",7590:"NAD 1983 (2011) WISCRS Bayfield (US Feet)",7591:"NAD 1983 (2011) WISCRS Brown (US Feet)",7592:"NAD 1983 (2011) WISCRS Buffalo (US Feet)",7593:"NAD 1983 (2011) WISCRS Burnett (US Feet)",7594:"NAD 1983 (2011) WISCRS Calumet, Fond du Lac, Outagamie, Winnebago (US Feet)",7595:"NAD 1983 (2011) WISCRS Chippewa (US Feet)",7596:"NAD 1983 (2011) WISCRS Clark (US Feet)",7597:"NAD 1983 (2011) WISCRS Columbia (US Feet)",7598:"NAD 1983 (2011) WISCRS Crawford (US Feet)",7599:"NAD 1983 (2011) WISCRS Dane (US Feet)",7600:"NAD 1983 (2011) WISCRS Dodge and Jefferson (US Feet)",7601:"NAD 1983 (2011) WISCRS Door (US Feet)",7602:"NAD 1983 (2011) WISCRS Douglas (US Feet)",7603:"NAD 1983 (2011) WISCRS Dunn (US Feet)",7604:"NAD 1983 (2011) WISCRS Eau Claire (US Feet)",7605:"NAD 1983 (2011) WISCRS Florence (US Feet)",7606:"NAD 1983 (2011) WISCRS Forest (US Feet)",7607:"NAD 1983 (2011) WISCRS Grant (US Feet)",7609:"NAD 1983 (2011) WISCRS Green Lake and Marquette (US Feet)",7608:"NAD 1983 (2011) WISCRS Green and Lafayette (US Feet)",7610:"NAD 1983 (2011) WISCRS Iowa (US Feet)",7611:"NAD 1983 (2011) WISCRS Iron (US Feet)",7612:"NAD 1983 (2011) WISCRS Jackson (US Feet)",7613:"NAD 1983 (2011) WISCRS Kenosha, Milwaukee, Ozaukee, Racine (US Feet)",7614:"NAD 1983 (2011) WISCRS Kewaunee, Manitowoc, Sheboygan (US Feet)",7615:"NAD 1983 (2011) WISCRS La Crosse (US Feet)",7616:"NAD 1983 (2011) WISCRS Langlade (US Feet)",7617:"NAD 1983 (2011) WISCRS Lincoln (US Feet)",7618:"NAD 1983 (2011) WISCRS Marathon (US Feet)",7619:"NAD 1983 (2011) WISCRS Marinette (US Feet)",7620:"NAD 1983 (2011) WISCRS Menominee (US Feet)",7621:"NAD 1983 (2011) WISCRS Monroe (US Feet)",7622:"NAD 1983 (2011) WISCRS Oconto (US Feet)",7623:"NAD 1983 (2011) WISCRS Oneida (US Feet)",7624:"NAD 1983 (2011) WISCRS Pepin and Pierce (US Feet)",7625:"NAD 1983 (2011) WISCRS Polk (US Feet)",7626:"NAD 1983 (2011) WISCRS Portage (US Feet)",7627:"NAD 1983 (2011) WISCRS Price (US Feet)",7628:"NAD 1983 (2011) WISCRS Richland (US Feet)",7629:"NAD 1983 (2011) WISCRS Rock (US Feet)",7630:"NAD 1983 (2011) WISCRS Rusk (US Feet)",7631:"NAD 1983 (2011) WISCRS Sauk (US Feet)",7632:"NAD 1983 (2011) WISCRS Sawyer (US Feet)",7633:"NAD 1983 (2011) WISCRS Shawano (US Feet)",7634:"NAD 1983 (2011) WISCRS St. Croix (US Feet)",7635:"NAD 1983 (2011) WISCRS Taylor (US Feet)",7636:"NAD 1983 (2011) WISCRS Trempealeau (US Feet)",7637:"NAD 1983 (2011) WISCRS Vernon (US Feet)",7638:"NAD 1983 (2011) WISCRS Vilas (US Feet)",7639:"NAD 1983 (2011) WISCRS Walworth (US Feet)",7640:"NAD 1983 (2011) WISCRS Washburn (US Feet)",7641:"NAD 1983 (2011) WISCRS Washington (US Feet)",7642:"NAD 1983 (2011) WISCRS Waukesha (US Feet)",7643:"NAD 1983 (2011) WISCRS Waupaca (US Feet)",7644:"NAD 1983 (2011) WISCRS Waushara (US Feet)",7645:"NAD 1983 (2011) WISCRS Wood (US Feet)"}},"US Feet":{103400:"NAD 1983 HARN Wisconsin CRS Adams (US Feet)",8226:"NAD 1983 HARN Wisconsin CRS Adams and Juneau (US Feet)",8224:"NAD 1983 HARN Wisconsin CRS Ashland (US Feet)",8220:"NAD 1983 HARN Wisconsin CRS Barron (US Feet)",8216:"NAD 1983 HARN Wisconsin CRS Bayfield (US Feet)",8213:"NAD 1983 HARN Wisconsin CRS Brown (US Feet)",8210:"NAD 1983 HARN Wisconsin CRS Buffalo (US Feet)",8208:"NAD 1983 HARN Wisconsin CRS Burnett (US Feet)",103407:"NAD 1983 HARN Wisconsin CRS Calumet (US Feet)",8206:"NAD 1983 HARN Wisconsin CRS Calumet, Fond du Lac, Outagamie and Winnebago (ft)",8204:"NAD 1983 HARN Wisconsin CRS Chippewa (US Feet)",8202:"NAD 1983 HARN Wisconsin CRS Clark (US Feet)",8200:"NAD 1983 HARN Wisconsin CRS Columbia (US Feet)",8197:"NAD 1983 HARN Wisconsin CRS Crawford (US Feet)",8193:"NAD 1983 HARN Wisconsin CRS Dane (US Feet)",103413:"NAD 1983 HARN Wisconsin CRS Dodge (US Feet)",8189:"NAD 1983 HARN Wisconsin CRS Dodge and Jefferson (US Feet)",8185:"NAD 1983 HARN Wisconsin CRS Door (US Feet)",8182:"NAD 1983 HARN Wisconsin CRS Douglas (US Feet)",8180:"NAD 1983 HARN Wisconsin CRS Dunn (US Feet)",8093:"NAD 1983 HARN Wisconsin CRS Eau Claire (US Feet)",8091:"NAD 1983 HARN Wisconsin CRS Florence (US Feet)",103419:"NAD 1983 HARN Wisconsin CRS Fond du Lac (US Feet)",8177:"NAD 1983 HARN Wisconsin CRS Forest (US Feet)",8172:"NAD 1983 HARN Wisconsin CRS Grant (US Feet)",103422:"NAD 1983 HARN Wisconsin CRS Green (US Feet)",103423:"NAD 1983 HARN Wisconsin CRS Green Lake (US Feet)",8168:"NAD 1983 HARN Wisconsin CRS Green Lake and Marquette (US Feet)",8170:"NAD 1983 HARN Wisconsin CRS Green and Lafayette (US Feet)",8166:"NAD 1983 HARN Wisconsin CRS Iowa (US Feet)",8164:"NAD 1983 HARN Wisconsin CRS Iron (US Feet)",8162:"NAD 1983 HARN Wisconsin CRS Jackson (US Feet)",103427:"NAD 1983 HARN Wisconsin CRS Jefferson (US Feet)",103428:"NAD 1983 HARN Wisconsin CRS Juneau (US Feet)",103429:"NAD 1983 HARN Wisconsin CRS Kenosha (US Feet)",8160:"NAD 1983 HARN Wisconsin CRS Kenosha, Milwaukee, Ozaukee and Racine (US Feet)",103430:"NAD 1983 HARN Wisconsin CRS Kewaunee (US Feet)",8158:"NAD 1983 HARN Wisconsin CRS Kewaunee, Manitowoc and Sheboygan (US Feet)",8156:"NAD 1983 HARN Wisconsin CRS La Crosse (US Feet)",103432:"NAD 1983 HARN Wisconsin CRS Lafayette (US Feet)",8154:"NAD 1983 HARN Wisconsin CRS Langlade (US Feet)",8152:"NAD 1983 HARN Wisconsin CRS Lincoln (US Feet)",103435:"NAD 1983 HARN Wisconsin CRS Manitowoc (US Feet)",8150:"NAD 1983 HARN Wisconsin CRS Marathon (US Feet)",8148:"NAD 1983 HARN Wisconsin CRS Marinette (US Feet)",103438:"NAD 1983 HARN Wisconsin CRS Marquette (US Feet)",8146:"NAD 1983 HARN Wisconsin CRS Menominee (US Feet)",103440:"NAD 1983 HARN Wisconsin CRS Milwaukee (US Feet)",8144:"NAD 1983 HARN Wisconsin CRS Monroe (US Feet)",8142:"NAD 1983 HARN Wisconsin CRS Oconto (US Feet)",8140:"NAD 1983 HARN Wisconsin CRS Oneida (US Feet)",103444:"NAD 1983 HARN Wisconsin CRS Outagamie (US Feet)",103445:"NAD 1983 HARN Wisconsin CRS Ozaukee (US Feet)",103446:"NAD 1983 HARN Wisconsin CRS Pepin (US Feet)",8138:"NAD 1983 HARN Wisconsin CRS Pepin and Pierce (US Feet)",103447:"NAD 1983 HARN Wisconsin CRS Pierce (US Feet)",8136:"NAD 1983 HARN Wisconsin CRS Polk (US Feet)",8134:"NAD 1983 HARN Wisconsin CRS Portage (US Feet)",8132:"NAD 1983 HARN Wisconsin CRS Price (US Feet)",103451:"NAD 1983 HARN Wisconsin CRS Racine (US Feet)",8130:"NAD 1983 HARN Wisconsin CRS Richland (US Feet)",8128:"NAD 1983 HARN Wisconsin CRS Rock (US Feet)",8126:"NAD 1983 HARN Wisconsin CRS Rusk (US Feet)",8124:"NAD 1983 HARN Wisconsin CRS Sauk (US Feet)",8122:"NAD 1983 HARN Wisconsin CRS Sawyer (US Feet)",8120:"NAD 1983 HARN Wisconsin CRS Shawano (US Feet)",103458:"NAD 1983 HARN Wisconsin CRS Sheboygan (US Feet)",8118:"NAD 1983 HARN Wisconsin CRS St. Croix (US Feet)",8116:"NAD 1983 HARN Wisconsin CRS Taylor (US Feet)",8114:"NAD 1983 HARN Wisconsin CRS Trempealeau (US Feet)",8112:"NAD 1983 HARN Wisconsin CRS Vernon (US Feet)",8110:"NAD 1983 HARN Wisconsin CRS Vilas (US Feet)",8108:"NAD 1983 HARN Wisconsin CRS Walworth (US Feet)",8106:"NAD 1983 HARN Wisconsin CRS Washburn (US Feet)",8104:"NAD 1983 HARN Wisconsin CRS Washington (US Feet)",8102:"NAD 1983 HARN Wisconsin CRS Waukesha (US Feet)",8100:"NAD 1983 HARN Wisconsin CRS Waupaca (US Feet)",8098:"NAD 1983 HARN Wisconsin CRS Waushara (US Feet)",103470:"NAD 1983 HARN Wisconsin CRS Winnebago (US Feet)",8096:"NAD 1983 HARN Wisconsin CRS Wood (US Feet)"}}},"Gauss Kruger":{Asia:{2044:"Hanoi 1972 GK Zone 18",2045:"Hanoi 1972 GK Zone 19",2395:"South Yemen GK Zone 8",2396:"South Yemen GK Zone 9"},"Beijing 1954":{2431:"Beijing 1954 3 Degree GK CM 102E",2432:"Beijing 1954 3 Degree GK CM 105E",2433:"Beijing 1954 3 Degree GK CM 108E",2434:"Beijing 1954 3 Degree GK CM 111E",2435:"Beijing 1954 3 Degree GK CM 114E",2436:"Beijing 1954 3 Degree GK CM 117E",2437:"Beijing 1954 3 Degree GK CM 120E",2438:"Beijing 1954 3 Degree GK CM 123E",2439:"Beijing 1954 3 Degree GK CM 126E",2440:"Beijing 1954 3 Degree GK CM 129E",2441:"Beijing 1954 3 Degree GK CM 132E",2442:"Beijing 1954 3 Degree GK CM 135E",2422:"Beijing 1954 3 Degree GK CM 75E",2423:"Beijing 1954 3 Degree GK CM 78E",2424:"Beijing 1954 3 Degree GK CM 81E",2425:"Beijing 1954 3 Degree GK CM 84E",2426:"Beijing 1954 3 Degree GK CM 87E",2427:"Beijing 1954 3 Degree GK CM 90E",2428:"Beijing 1954 3 Degree GK CM 93E",2429:"Beijing 1954 3 Degree GK CM 96E",2430:"Beijing 1954 3 Degree GK CM 99E",2401:"Beijing 1954 3 Degree GK Zone 25",2402:"Beijing 1954 3 Degree GK Zone 26",2403:"Beijing 1954 3 Degree GK Zone 27",2404:"Beijing 1954 3 Degree GK Zone 28",2405:"Beijing 1954 3 Degree GK Zone 29",2406:"Beijing 1954 3 Degree GK Zone 30",2407:"Beijing 1954 3 Degree GK Zone 31",2408:"Beijing 1954 3 Degree GK Zone 32",2409:"Beijing 1954 3 Degree GK Zone 33",2410:"Beijing 1954 3 Degree GK Zone 34",2411:"Beijing 1954 3 Degree GK Zone 35",2412:"Beijing 1954 3 Degree GK Zone 36",2413:"Beijing 1954 3 Degree GK Zone 37",2414:"Beijing 1954 3 Degree GK Zone 38",2415:"Beijing 1954 3 Degree GK Zone 39",2416:"Beijing 1954 3 Degree GK Zone 40",2417:"Beijing 1954 3 Degree GK Zone 41",2418:"Beijing 1954 3 Degree GK Zone 42",2419:"Beijing 1954 3 Degree GK Zone 43",2420:"Beijing 1954 3 Degree GK Zone 44",2421:"Beijing 1954 3 Degree GK Zone 45",21458:"Beijing 1954 GK CM 105E",21459:"Beijing 1954 GK CM 111E",21460:"Beijing 1954 GK CM 117E",21461:"Beijing 1954 GK CM 123E",21462:"Beijing 1954 GK CM 129E",21463:"Beijing 1954 GK CM 135E",21453:"Beijing 1954 GK CM 75E",21454:"Beijing 1954 GK CM 81E",21455:"Beijing 1954 GK CM 87E",21456:"Beijing 1954 GK CM 93E",21457:"Beijing 1954 GK CM 99E",21413:"Beijing 1954 GK Zone 13",21473:"Beijing 1954 GK Zone 13N",21414:"Beijing 1954 GK Zone 14",21474:"Beijing 1954 GK Zone 14N",21415:"Beijing 1954 GK Zone 15",21475:"Beijing 1954 GK Zone 15N",21416:"Beijing 1954 GK Zone 16",21476:"Beijing 1954 GK Zone 16N",21417:"Beijing 1954 GK Zone 17",21477:"Beijing 1954 GK Zone 17N",21418:"Beijing 1954 GK Zone 18",21478:"Beijing 1954 GK Zone 18N",21419:"Beijing 1954 GK Zone 19",21479:"Beijing 1954 GK Zone 19N",21420:"Beijing 1954 GK Zone 20",21480:"Beijing 1954 GK Zone 20N",21421:"Beijing 1954 GK Zone 21",21481:"Beijing 1954 GK Zone 21N",21422:"Beijing 1954 GK Zone 22",21482:"Beijing 1954 GK Zone 22N",21423:"Beijing 1954 GK Zone 23",21483:"Beijing 1954 GK Zone 23N"},CGCS2000:{4543:"CGCS2000 3 Degree GK CM 102E",4544:"CGCS2000 3 Degree GK CM 105E",4545:"CGCS2000 3 Degree GK CM 108E",4546:"CGCS2000 3 Degree GK CM 111E",4547:"CGCS2000 3 Degree GK CM 114E",4548:"CGCS2000 3 Degree GK CM 117E",4549:"CGCS2000 3 Degree GK CM 120E",4550:"CGCS2000 3 Degree GK CM 123E",4551:"CGCS2000 3 Degree GK CM 126E",4552:"CGCS2000 3 Degree GK CM 129E",4553:"CGCS2000 3 Degree GK CM 132E",4554:"CGCS2000 3 Degree GK CM 135E",4534:"CGCS2000 3 Degree GK CM 75E",4535:"CGCS2000 3 Degree GK CM 78E",4536:"CGCS2000 3 Degree GK CM 81E",4537:"CGCS2000 3 Degree GK CM 84E",4538:"CGCS2000 3 Degree GK CM 87E",4539:"CGCS2000 3 Degree GK CM 90E",4540:"CGCS2000 3 Degree GK CM 93E",4541:"CGCS2000 3 Degree GK CM 96E",4542:"CGCS2000 3 Degree GK CM 99E",4513:"CGCS2000 3 Degree GK Zone 25",4514:"CGCS2000 3 Degree GK Zone 26",4515:"CGCS2000 3 Degree GK Zone 27",4516:"CGCS2000 3 Degree GK Zone 28",4517:"CGCS2000 3 Degree GK Zone 29",4518:"CGCS2000 3 Degree GK Zone 30",4519:"CGCS2000 3 Degree GK Zone 31",4520:"CGCS2000 3 Degree GK Zone 32",4521:"CGCS2000 3 Degree GK Zone 33",4522:"CGCS2000 3 Degree GK Zone 34",4523:"CGCS2000 3 Degree GK Zone 35",4524:"CGCS2000 3 Degree GK Zone 36",4525:"CGCS2000 3 Degree GK Zone 37",4526:"CGCS2000 3 Degree GK Zone 38",4527:"CGCS2000 3 Degree GK Zone 39",4528:"CGCS2000 3 Degree GK Zone 40",4529:"CGCS2000 3 Degree GK Zone 41",4530:"CGCS2000 3 Degree GK Zone 42",4531:"CGCS2000 3 Degree GK Zone 43",4532:"CGCS2000 3 Degree GK Zone 44",4533:"CGCS2000 3 Degree GK Zone 45",4507:"CGCS2000 GK CM 105E",4508:"CGCS2000 GK CM 111E",4509:"CGCS2000 GK CM 117E",4510:"CGCS2000 GK CM 123E",4511:"CGCS2000 GK CM 129E",4512:"CGCS2000 GK CM 135E",4502:"CGCS2000 GK CM 75E",4503:"CGCS2000 GK CM 81E",4504:"CGCS2000 GK CM 87E",4505:"CGCS2000 GK CM 93E",4506:"CGCS2000 GK CM 99E",4491:"CGCS2000 GK Zone 13",4492:"CGCS2000 GK Zone 14",4493:"CGCS2000 GK Zone 15",4494:"CGCS2000 GK Zone 16",4495:"CGCS2000 GK Zone 17",4496:"CGCS2000 GK Zone 18",4497:"CGCS2000 GK Zone 19",4498:"CGCS2000 GK Zone 20",4499:"CGCS2000 GK Zone 21",4500:"CGCS2000 GK Zone 22",4501:"CGCS2000 GK Zone 23"},Europe:{2462:"Albanian 1987 GK Zone 4",8395:"ETRS 1989 GK CM 9E",3396:"PD 83 GK Zone 3",3397:"PD 83 GK Zone 4",3840:"Pulkovo 1942 Adj 1958 3 Degree GK Zone 10",3837:"Pulkovo 1942 Adj 1958 3 Degree GK Zone 3",3838:"Pulkovo 1942 Adj 1958 3 Degree GK Zone 4",3329:"Pulkovo 1942 Adj 1958 3 Degree GK Zone 5",3330:"Pulkovo 1942 Adj 1958 3 Degree GK Zone 6",3332:"Pulkovo 1942 Adj 1958 3 Degree GK Zone 8",3839:"Pulkovo 1942 Adj 1958 3 Degree GK Zone 9",5670:"Pulkovo 1942 Adj 1958 3-Degree GK Zone 3 (E-N)",5671:"Pulkovo 1942 Adj 1958 3-Degree GK Zone 4 (E-N)",5672:"Pulkovo 1942 Adj 1958 3-Degree GK Zone 5 (E-N)",3331:"Pulkovo 1942 Adj 1958 3-Degree GK Zone 7",3833:"Pulkovo 1942 Adj 1958 GK Zone 2",5631:"Pulkovo 1942 Adj 1958 GK Zone 2 (E-N)",3333:"Pulkovo 1942 Adj 1958 GK Zone 3",5663:"Pulkovo 1942 Adj 1958 GK Zone 3 (E-N)",3334:"Pulkovo 1942 Adj 1958 GK Zone 4",3335:"Pulkovo 1942 Adj 1958 GK Zone 5",2397:"Pulkovo 1942 Adj 1983 3 Degree GK Zone 3",2398:"Pulkovo 1942 Adj 1983 3 Degree GK Zone 4",2399:"Pulkovo 1942 Adj 1983 3 Degree GK Zone 5",3841:"Pulkovo 1942 Adj 1983 3 Degree GK Zone 6",4434:"Pulkovo 1942 Adj 1983 3 Degree GK Zone 8",5673:"Pulkovo 1942 Adj 1983 3-Degree GK Zone 3 (E-N)",5674:"Pulkovo 1942 Adj 1983 3-Degree GK Zone 4 (E-N)",5675:"Pulkovo 1942 Adj 1983 3-Degree GK Zone 5 (E-N)",4417:"Pulkovo 1942 Adj 1983 3-Degree GK Zone 7",3834:"Pulkovo 1942 Adj 1983 GK Zone 2",5664:"Pulkovo 1942 Adj 1983 GK Zone 2 (E-N)",3835:"Pulkovo 1942 Adj 1983 GK Zone 3",5665:"Pulkovo 1942 Adj 1983 GK Zone 3 (E-N)",3836:"Pulkovo 1942 Adj 1983 GK Zone 4",5668:"RD 83 3 Degree GK Zone 4 (E-N)",5669:"RD 83 3 Degree GK Zone 5 (E-N)",3398:"RD 83 GK Zone 4",3399:"RD 83 GK Zone 5"},"GSK 2011":{21334:"GSK-2011 GSK 3GK CM 102E",21335:"GSK-2011 GSK 3GK CM 105E",21336:"GSK-2011 GSK 3GK CM 108E",21337:"GSK-2011 GSK 3GK CM 111E",21338:"GSK-2011 GSK 3GK CM 114E",21339:"GSK-2011 GSK 3GK CM 117E",21340:"GSK-2011 GSK 3GK CM 120E",21341:"GSK-2011 GSK 3GK CM 123E",21342:"GSK-2011 GSK 3GK CM 126E",21343:"GSK-2011 GSK 3GK CM 129E",21344:"GSK-2011 GSK 3GK CM 132E",21345:"GSK-2011 GSK 3GK CM 135E",21346:"GSK-2011 GSK 3GK CM 138E",21347:"GSK-2011 GSK 3GK CM 141E",21348:"GSK-2011 GSK 3GK CM 144E",21349:"GSK-2011 GSK 3GK CM 147E",21350:"GSK-2011 GSK 3GK CM 150E",21351:"GSK-2011 GSK 3GK CM 153E",21352:"GSK-2011 GSK 3GK CM 156E",21353:"GSK-2011 GSK 3GK CM 159E",21354:"GSK-2011 GSK 3GK CM 162E",21355:"GSK-2011 GSK 3GK CM 165E",21356:"GSK-2011 GSK 3GK CM 168E",21364:"GSK-2011 GSK 3GK CM 168W",21357:"GSK-2011 GSK 3GK CM 171E",21363:"GSK-2011 GSK 3GK CM 171W",21358:"GSK-2011 GSK 3GK CM 174E",21362:"GSK-2011 GSK 3GK CM 174W",21359:"GSK-2011 GSK 3GK CM 177E",21361:"GSK-2011 GSK 3GK CM 177W",21360:"GSK-2011 GSK 3GK CM 180E",21307:"GSK-2011 GSK 3GK CM 21E",21308:"GSK-2011 GSK 3GK CM 24E",21309:"GSK-2011 GSK 3GK CM 27E",21310:"GSK-2011 GSK 3GK CM 30E",21311:"GSK-2011 GSK 3GK CM 33E",21312:"GSK-2011 GSK 3GK CM 36E",21313:"GSK-2011 GSK 3GK CM 39E",21314:"GSK-2011 GSK 3GK CM 42E",21315:"GSK-2011 GSK 3GK CM 45E",21316:"GSK-2011 GSK 3GK CM 48E",21317:"GSK-2011 GSK 3GK CM 51E",21318:"GSK-2011 GSK 3GK CM 54E",21319:"GSK-2011 GSK 3GK CM 57E",21320:"GSK-2011 GSK 3GK CM 60E",21321:"GSK-2011 GSK 3GK CM 63E",21322:"GSK-2011 GSK 3GK CM 66E",21323:"GSK-2011 GSK 3GK CM 69E",21324:"GSK-2011 GSK 3GK CM 72E",21325:"GSK-2011 GSK 3GK CM 75E",21326:"GSK-2011 GSK 3GK CM 78E",21327:"GSK-2011 GSK 3GK CM 81E",21328:"GSK-2011 GSK 3GK CM 84E",21329:"GSK-2011 GSK 3GK CM 87E",21330:"GSK-2011 GSK 3GK CM 90E",21331:"GSK-2011 GSK 3GK CM 93E",21332:"GSK-2011 GSK 3GK CM 96E",21333:"GSK-2011 GSK 3GK CM 99E",21210:"GSK-2011 GSK 3GK zone 10",21211:"GSK-2011 GSK 3GK zone 11",21212:"GSK-2011 GSK 3GK zone 12",21213:"GSK-2011 GSK 3GK zone 13",21214:"GSK-2011 GSK 3GK zone 14",21215:"GSK-2011 GSK 3GK zone 15",21216:"GSK-2011 GSK 3GK zone 16",21217:"GSK-2011 GSK 3GK zone 17",21218:"GSK-2011 GSK 3GK zone 18",21219:"GSK-2011 GSK 3GK zone 19",21220:"GSK-2011 GSK 3GK zone 20",21221:"GSK-2011 GSK 3GK zone 21",21222:"GSK-2011 GSK 3GK zone 22",21223:"GSK-2011 GSK 3GK zone 23",21224:"GSK-2011 GSK 3GK zone 24",21225:"GSK-2011 GSK 3GK zone 25",21226:"GSK-2011 GSK 3GK zone 26",21227:"GSK-2011 GSK 3GK zone 27",21228:"GSK-2011 GSK 3GK zone 28",21229:"GSK-2011 GSK 3GK zone 29",21230:"GSK-2011 GSK 3GK zone 30",21231:"GSK-2011 GSK 3GK zone 31",21232:"GSK-2011 GSK 3GK zone 32",21233:"GSK-2011 GSK 3GK zone 33",21234:"GSK-2011 GSK 3GK zone 34",21235:"GSK-2011 GSK 3GK zone 35",21236:"GSK-2011 GSK 3GK zone 36",21237:"GSK-2011 GSK 3GK zone 37",21238:"GSK-2011 GSK 3GK zone 38",21239:"GSK-2011 GSK 3GK zone 39",21240:"GSK-2011 GSK 3GK zone 40",21241:"GSK-2011 GSK 3GK zone 41",21242:"GSK-2011 GSK 3GK zone 42",21243:"GSK-2011 GSK 3GK zone 43",21244:"GSK-2011 GSK 3GK zone 44",21245:"GSK-2011 GSK 3GK zone 45",21246:"GSK-2011 GSK 3GK zone 46",21247:"GSK-2011 GSK 3GK zone 47",21248:"GSK-2011 GSK 3GK zone 48",21249:"GSK-2011 GSK 3GK zone 49",21250:"GSK-2011 GSK 3GK zone 50",21251:"GSK-2011 GSK 3GK zone 51",21252:"GSK-2011 GSK 3GK zone 52",21253:"GSK-2011 GSK 3GK zone 53",21254:"GSK-2011 GSK 3GK zone 54",21255:"GSK-2011 GSK 3GK zone 55",21256:"GSK-2011 GSK 3GK zone 56",21257:"GSK-2011 GSK 3GK zone 57",21258:"GSK-2011 GSK 3GK zone 58",21259:"GSK-2011 GSK 3GK zone 59",21260:"GSK-2011 GSK 3GK zone 60",21261:"GSK-2011 GSK 3GK zone 61",21262:"GSK-2011 GSK 3GK zone 62",21263:"GSK-2011 GSK 3GK zone 63",21264:"GSK-2011 GSK 3GK zone 64",21207:"GSK-2011 GSK 3GK zone 7",21208:"GSK-2011 GSK 3GK zone 8",21209:"GSK-2011 GSK 3GK zone 9",21018:"GSK-2011 Gauss-Kruger CM 105E",21019:"GSK-2011 Gauss-Kruger CM 111E",21020:"GSK-2011 Gauss-Kruger CM 117E",21021:"GSK-2011 Gauss-Kruger CM 123E",21022:"GSK-2011 Gauss-Kruger CM 129E",21023:"GSK-2011 Gauss-Kruger CM 135E",21024:"GSK-2011 Gauss-Kruger CM 141E",21025:"GSK-2011 Gauss-Kruger CM 147E",21026:"GSK-2011 Gauss-Kruger CM 153E",21027:"GSK-2011 Gauss-Kruger CM 159E",21028:"GSK-2011 Gauss-Kruger CM 165E",21029:"GSK-2011 Gauss-Kruger CM 171E",21032:"GSK-2011 Gauss-Kruger CM 171W",21030:"GSK-2011 Gauss-Kruger CM 177E",21031:"GSK-2011 Gauss-Kruger CM 177W",21004:"GSK-2011 Gauss-Kruger CM 21E",21005:"GSK-2011 Gauss-Kruger CM 27E",21006:"GSK-2011 Gauss-Kruger CM 33E",21007:"GSK-2011 Gauss-Kruger CM 39E",21008:"GSK-2011 Gauss-Kruger CM 45E",21009:"GSK-2011 Gauss-Kruger CM 51E",21010:"GSK-2011 Gauss-Kruger CM 57E",21011:"GSK-2011 Gauss-Kruger CM 63E",21012:"GSK-2011 Gauss-Kruger CM 69E",21013:"GSK-2011 Gauss-Kruger CM 75E",21014:"GSK-2011 Gauss-Kruger CM 81E",21015:"GSK-2011 Gauss-Kruger CM 87E",21016:"GSK-2011 Gauss-Kruger CM 93E",21017:"GSK-2011 Gauss-Kruger CM 99E",20910:"GSK-2011 Gauss-Kruger zone 10",20911:"GSK-2011 Gauss-Kruger zone 11",20912:"GSK-2011 Gauss-Kruger zone 12",20913:"GSK-2011 Gauss-Kruger zone 13",20914:"GSK-2011 Gauss-Kruger zone 14",20915:"GSK-2011 Gauss-Kruger zone 15",20916:"GSK-2011 Gauss-Kruger zone 16",20917:"GSK-2011 Gauss-Kruger zone 17",20918:"GSK-2011 Gauss-Kruger zone 18",20919:"GSK-2011 Gauss-Kruger zone 19",20920:"GSK-2011 Gauss-Kruger zone 20",20921:"GSK-2011 Gauss-Kruger zone 21",20922:"GSK-2011 Gauss-Kruger zone 22",20923:"GSK-2011 Gauss-Kruger zone 23",20924:"GSK-2011 Gauss-Kruger zone 24",20925:"GSK-2011 Gauss-Kruger zone 25",20926:"GSK-2011 Gauss-Kruger zone 26",20927:"GSK-2011 Gauss-Kruger zone 27",20928:"GSK-2011 Gauss-Kruger zone 28",20929:"GSK-2011 Gauss-Kruger zone 29",20930:"GSK-2011 Gauss-Kruger zone 30",20931:"GSK-2011 Gauss-Kruger zone 31",20932:"GSK-2011 Gauss-Kruger zone 32",20904:"GSK-2011 Gauss-Kruger zone 4",20905:"GSK-2011 Gauss-Kruger zone 5",20906:"GSK-2011 Gauss-Kruger zone 6",20907:"GSK-2011 Gauss-Kruger zone 7",20908:"GSK-2011 Gauss-Kruger zone 8",20909:"GSK-2011 Gauss-Kruger zone 9"},"New Beijing":{4791:"New Beijing Gauss-Kruger 3 Degree CM 102E",4792:"New Beijing Gauss-Kruger 3 Degree CM 105E",4793:"New Beijing Gauss-Kruger 3 Degree CM 108E",4794:"New Beijing Gauss-Kruger 3 Degree CM 111E",4795:"New Beijing Gauss-Kruger 3 Degree CM 114E",4796:"New Beijing Gauss-Kruger 3 Degree CM 117E",4797:"New Beijing Gauss-Kruger 3 Degree CM 120E",4798:"New Beijing Gauss-Kruger 3 Degree CM 123E",4799:"New Beijing Gauss-Kruger 3 Degree CM 126E",4800:"New Beijing Gauss-Kruger 3 Degree CM 129E",102569:"New Beijing Gauss-Kruger 3 Degree CM 132E",4822:"New Beijing Gauss-Kruger 3 Degree CM 135E",4782:"New Beijing Gauss-Kruger 3 Degree CM 75E",4783:"New Beijing Gauss-Kruger 3 Degree CM 78E",4784:"New Beijing Gauss-Kruger 3 Degree CM 81E",4785:"New Beijing Gauss-Kruger 3 Degree CM 84E",4786:"New Beijing Gauss-Kruger 3 Degree CM 87E",4787:"New Beijing Gauss-Kruger 3 Degree CM 90E",4788:"New Beijing Gauss-Kruger 3 Degree CM 93E",4789:"New Beijing Gauss-Kruger 3 Degree CM 96E",4790:"New Beijing Gauss-Kruger 3 Degree CM 99E",4652:"New Beijing Gauss-Kruger 3 Degree Zone 25",4653:"New Beijing Gauss-Kruger 3 Degree Zone 26",4654:"New Beijing Gauss-Kruger 3 Degree Zone 27",4655:"New Beijing Gauss-Kruger 3 Degree Zone 28",4656:"New Beijing Gauss-Kruger 3 Degree Zone 29",4766:"New Beijing Gauss-Kruger 3 Degree Zone 30",4767:"New Beijing Gauss-Kruger 3 Degree Zone 31",4768:"New Beijing Gauss-Kruger 3 Degree Zone 32",4769:"New Beijing Gauss-Kruger 3 Degree Zone 33",4770:"New Beijing Gauss-Kruger 3 Degree Zone 34",4771:"New Beijing Gauss-Kruger 3 Degree Zone 35",4772:"New Beijing Gauss-Kruger 3 Degree Zone 36",4773:"New Beijing Gauss-Kruger 3 Degree Zone 37",4774:"New Beijing Gauss-Kruger 3 Degree Zone 38",4775:"New Beijing Gauss-Kruger 3 Degree Zone 39",4776:"New Beijing Gauss-Kruger 3 Degree Zone 40",4777:"New Beijing Gauss-Kruger 3 Degree Zone 41",4778:"New Beijing Gauss-Kruger 3 Degree Zone 42",4779:"New Beijing Gauss-Kruger 3 Degree Zone 43",4780:"New Beijing Gauss-Kruger 3 Degree Zone 44",4781:"New Beijing Gauss-Kruger 3 Degree Zone 45",4584:"New Beijing Gauss-Kruger CM 105E",4585:"New Beijing Gauss-Kruger CM 111E",4586:"New Beijing Gauss-Kruger CM 117E",4587:"New Beijing Gauss-Kruger CM 123E",4588:"New Beijing Gauss-Kruger CM 129E",4589:"New Beijing Gauss-Kruger CM 135E",4579:"New Beijing Gauss-Kruger CM 75E",4580:"New Beijing Gauss-Kruger CM 81E",4581:"New Beijing Gauss-Kruger CM 87E",4582:"New Beijing Gauss-Kruger CM 93E",4583:"New Beijing Gauss-Kruger CM 99E",4568:"New Beijing Gauss-Kruger Zone 13",4569:"New Beijing Gauss-Kruger Zone 14",4570:"New Beijing Gauss-Kruger Zone 15",4571:"New Beijing Gauss-Kruger Zone 16",4572:"New Beijing Gauss-Kruger Zone 17",4573:"New Beijing Gauss-Kruger Zone 18",4574:"New Beijing Gauss-Kruger Zone 19",4575:"New Beijing Gauss-Kruger Zone 20",4576:"New Beijing Gauss-Kruger Zone 21",4577:"New Beijing Gauss-Kruger Zone 22",4578:"New Beijing Gauss-Kruger Zone 23"},"Pulkovo 1942":{2610:"Pulkovo 1942 3 Degree GK CM 102E",2611:"Pulkovo 1942 3 Degree GK CM 105E",2612:"Pulkovo 1942 3 Degree GK CM 108E",2613:"Pulkovo 1942 3 Degree GK CM 111E",2614:"Pulkovo 1942 3 Degree GK CM 114E",2615:"Pulkovo 1942 3 Degree GK CM 117E",2616:"Pulkovo 1942 3 Degree GK CM 120E",2617:"Pulkovo 1942 3 Degree GK CM 123E",2618:"Pulkovo 1942 3 Degree GK CM 126E",2619:"Pulkovo 1942 3 Degree GK CM 129E",2620:"Pulkovo 1942 3 Degree GK CM 132E",2621:"Pulkovo 1942 3 Degree GK CM 135E",2622:"Pulkovo 1942 3 Degree GK CM 138E",2623:"Pulkovo 1942 3 Degree GK CM 141E",2624:"Pulkovo 1942 3 Degree GK CM 144E",2625:"Pulkovo 1942 3 Degree GK CM 147E",2626:"Pulkovo 1942 3 Degree GK CM 150E",2627:"Pulkovo 1942 3 Degree GK CM 153E",2628:"Pulkovo 1942 3 Degree GK CM 156E",2629:"Pulkovo 1942 3 Degree GK CM 159E",2630:"Pulkovo 1942 3 Degree GK CM 162E",2631:"Pulkovo 1942 3 Degree GK CM 165E",2632:"Pulkovo 1942 3 Degree GK CM 168E",2640:"Pulkovo 1942 3 Degree GK CM 168W",2633:"Pulkovo 1942 3 Degree GK CM 171E",2639:"Pulkovo 1942 3 Degree GK CM 171W",2634:"Pulkovo 1942 3 Degree GK CM 174E",2638:"Pulkovo 1942 3 Degree GK CM 174W",2635:"Pulkovo 1942 3 Degree GK CM 177E",2637:"Pulkovo 1942 3 Degree GK CM 177W",2636:"Pulkovo 1942 3 Degree GK CM 180E",3147:"Pulkovo 1942 3 Degree GK CM 18E",2582:"Pulkovo 1942 3 Degree GK CM 21E",2583:"Pulkovo 1942 3 Degree GK CM 24E",2584:"Pulkovo 1942 3 Degree GK CM 27E",2585:"Pulkovo 1942 3 Degree GK CM 30E",2586:"Pulkovo 1942 3 Degree GK CM 33E",2587:"Pulkovo 1942 3 Degree GK CM 36E",2588:"Pulkovo 1942 3 Degree GK CM 39E",2589:"Pulkovo 1942 3 Degree GK CM 42E",2590:"Pulkovo 1942 3 Degree GK CM 45E",2591:"Pulkovo 1942 3 Degree GK CM 48E",2592:"Pulkovo 1942 3 Degree GK CM 51E",2593:"Pulkovo 1942 3 Degree GK CM 54E",2594:"Pulkovo 1942 3 Degree GK CM 57E",3146:"Pulkovo 1942 3 Degree GK CM 6",3389:"Pulkovo 1942 3 Degree GK CM 60",2595:"Pulkovo 1942 3 Degree GK CM 60E",2596:"Pulkovo 1942 3 Degree GK CM 63E",2597:"Pulkovo 1942 3 Degree GK CM 66E",2598:"Pulkovo 1942 3 Degree GK CM 69E",2599:"Pulkovo 1942 3 Degree GK CM 72E",2601:"Pulkovo 1942 3 Degree GK CM 75E",2602:"Pulkovo 1942 3 Degree GK CM 78E",2603:"Pulkovo 1942 3 Degree GK CM 81E",2604:"Pulkovo 1942 3 Degree GK CM 84E",2605:"Pulkovo 1942 3 Degree GK CM 87E",2606:"Pulkovo 1942 3 Degree GK CM 90E",2607:"Pulkovo 1942 3 Degree GK CM 93E",2608:"Pulkovo 1942 3 Degree GK CM 96E",2609:"Pulkovo 1942 3 Degree GK CM 99E",2526:"Pulkovo 1942 3 Degree GK Zone 10",2527:"Pulkovo 1942 3 Degree GK Zone 11",2528:"Pulkovo 1942 3 Degree GK Zone 12",2529:"Pulkovo 1942 3 Degree GK Zone 13",2530:"Pulkovo 1942 3 Degree GK Zone 14",2531:"Pulkovo 1942 3 Degree GK Zone 15",2532:"Pulkovo 1942 3 Degree GK Zone 16",2533:"Pulkovo 1942 3 Degree GK Zone 17",2534:"Pulkovo 1942 3 Degree GK Zone 18",2535:"Pulkovo 1942 3 Degree GK Zone 19",2536:"Pulkovo 1942 3 Degree GK Zone 20",2537:"Pulkovo 1942 3 Degree GK Zone 21",2538:"Pulkovo 1942 3 Degree GK Zone 22",2539:"Pulkovo 1942 3 Degree GK Zone 23",2540:"Pulkovo 1942 3 Degree GK Zone 24",2541:"Pulkovo 1942 3 Degree GK Zone 25",2542:"Pulkovo 1942 3 Degree GK Zone 26",2543:"Pulkovo 1942 3 Degree GK Zone 27",2544:"Pulkovo 1942 3 Degree GK Zone 28",2545:"Pulkovo 1942 3 Degree GK Zone 29",2546:"Pulkovo 1942 3 Degree GK Zone 30",2547:"Pulkovo 1942 3 Degree GK Zone 31",2548:"Pulkovo 1942 3 Degree GK Zone 32",2549:"Pulkovo 1942 3 Degree GK Zone 33",2551:"Pulkovo 1942 3 Degree GK Zone 34",2552:"Pulkovo 1942 3 Degree GK Zone 35",2553:"Pulkovo 1942 3 Degree GK Zone 36",2554:"Pulkovo 1942 3 Degree GK Zone 37",2555:"Pulkovo 1942 3 Degree GK Zone 38",2556:"Pulkovo 1942 3 Degree GK Zone 39",2557:"Pulkovo 1942 3 Degree GK Zone 40",2558:"Pulkovo 1942 3 Degree GK Zone 41",2559:"Pulkovo 1942 3 Degree GK Zone 42",2560:"Pulkovo 1942 3 Degree GK Zone 43",2561:"Pulkovo 1942 3 Degree GK Zone 44",2562:"Pulkovo 1942 3 Degree GK Zone 45",2563:"Pulkovo 1942 3 Degree GK Zone 46",2564:"Pulkovo 1942 3 Degree GK Zone 47",2565:"Pulkovo 1942 3 Degree GK Zone 48",2566:"Pulkovo 1942 3 Degree GK Zone 49",2567:"Pulkovo 1942 3 Degree GK Zone 50",2568:"Pulkovo 1942 3 Degree GK Zone 51",2569:"Pulkovo 1942 3 Degree GK Zone 52",2570:"Pulkovo 1942 3 Degree GK Zone 53",2571:"Pulkovo 1942 3 Degree GK Zone 54",2572:"Pulkovo 1942 3 Degree GK Zone 55",2573:"Pulkovo 1942 3 Degree GK Zone 56",2574:"Pulkovo 1942 3 Degree GK Zone 57",2575:"Pulkovo 1942 3 Degree GK Zone 58",2576:"Pulkovo 1942 3 Degree GK Zone 59",2578:"Pulkovo 1942 3 Degree GK Zone 61",2579:"Pulkovo 1942 3 Degree GK Zone 62",2580:"Pulkovo 1942 3 Degree GK Zone 63",2581:"Pulkovo 1942 3 Degree GK Zone 64",2523:"Pulkovo 1942 3 Degree GK Zone 7",2524:"Pulkovo 1942 3 Degree GK Zone 8",2525:"Pulkovo 1942 3 Degree GK Zone 9",2935:"Pulkovo 1942 CS63 Zone A1",2936:"Pulkovo 1942 CS63 Zone A2",2937:"Pulkovo 1942 CS63 Zone A3",2938:"Pulkovo 1942 CS63 Zone A4",3350:"Pulkovo 1942 CS63 Zone C0",3351:"Pulkovo 1942 CS63 Zone C1",3352:"Pulkovo 1942 CS63 Zone C2",2939:"Pulkovo 1942 CS63 Zone K2",2940:"Pulkovo 1942 CS63 Zone K3",2941:"Pulkovo 1942 CS63 Zone K4",28410:"Pulkovo 1942 GK Zone 10",28470:"Pulkovo 1942 GK Zone 10N",28411:"Pulkovo 1942 GK Zone 11",28471:"Pulkovo 1942 GK Zone 11N",28412:"Pulkovo 1942 GK Zone 12",28472:"Pulkovo 1942 GK Zone 12N",28413:"Pulkovo 1942 GK Zone 13",28473:"Pulkovo 1942 GK Zone 13N",28414:"Pulkovo 1942 GK Zone 14",28474:"Pulkovo 1942 GK Zone 14N",28415:"Pulkovo 1942 GK Zone 15",28475:"Pulkovo 1942 GK Zone 15N",28416:"Pulkovo 1942 GK Zone 16",28476:"Pulkovo 1942 GK Zone 16N",28417:"Pulkovo 1942 GK Zone 17",28477:"Pulkovo 1942 GK Zone 17N",28418:"Pulkovo 1942 GK Zone 18",28478:"Pulkovo 1942 GK Zone 18N",28419:"Pulkovo 1942 GK Zone 19",28479:"Pulkovo 1942 GK Zone 19N",28402:"Pulkovo 1942 GK Zone 2",28420:"Pulkovo 1942 GK Zone 20",28480:"Pulkovo 1942 GK Zone 20N",28421:"Pulkovo 1942 GK Zone 21",28481:"Pulkovo 1942 GK Zone 21N",28422:"Pulkovo 1942 GK Zone 22",28482:"Pulkovo 1942 GK Zone 22N",28423:"Pulkovo 1942 GK Zone 23",28483:"Pulkovo 1942 GK Zone 23N",28424:"Pulkovo 1942 GK Zone 24",28484:"Pulkovo 1942 GK Zone 24N",28425:"Pulkovo 1942 GK Zone 25",28485:"Pulkovo 1942 GK Zone 25N",28426:"Pulkovo 1942 GK Zone 26",28486:"Pulkovo 1942 GK Zone 26N",28427:"Pulkovo 1942 GK Zone 27",28487:"Pulkovo 1942 GK Zone 27N",28428:"Pulkovo 1942 GK Zone 28",28488:"Pulkovo 1942 GK Zone 28N",28429:"Pulkovo 1942 GK Zone 29",28489:"Pulkovo 1942 GK Zone 29N",28462:"Pulkovo 1942 GK Zone 2N",28403:"Pulkovo 1942 GK Zone 3",28430:"Pulkovo 1942 GK Zone 30",28490:"Pulkovo 1942 GK Zone 30N",28431:"Pulkovo 1942 GK Zone 31",28491:"Pulkovo 1942 GK Zone 31N",28432:"Pulkovo 1942 GK Zone 32",28492:"Pulkovo 1942 GK Zone 32N",28463:"Pulkovo 1942 GK Zone 3N",28404:"Pulkovo 1942 GK Zone 4",28464:"Pulkovo 1942 GK Zone 4N",28405:"Pulkovo 1942 GK Zone 5",28465:"Pulkovo 1942 GK Zone 5N",28406:"Pulkovo 1942 GK Zone 6",28466:"Pulkovo 1942 GK Zone 6N",28407:"Pulkovo 1942 GK Zone 7",28467:"Pulkovo 1942 GK Zone 7N",28408:"Pulkovo 1942 GK Zone 8",28468:"Pulkovo 1942 GK Zone 8N",28409:"Pulkovo 1942 GK Zone 9",28469:"Pulkovo 1942 GK Zone 9N",2508:"Pulkovo 1942 Gauss-Kruger CM 105E",2509:"Pulkovo 1942 Gauss-Kruger CM 111E",2510:"Pulkovo 1942 Gauss-Kruger CM 117E",2511:"Pulkovo 1942 Gauss-Kruger CM 123E",2512:"Pulkovo 1942 Gauss-Kruger CM 129E",2513:"Pulkovo 1942 Gauss-Kruger CM 135E",2514:"Pulkovo 1942 Gauss-Kruger CM 141E",2515:"Pulkovo 1942 Gauss-Kruger CM 147E",2516:"Pulkovo 1942 Gauss-Kruger CM 153E",2517:"Pulkovo 1942 Gauss-Kruger CM 159E",2518:"Pulkovo 1942 Gauss-Kruger CM 165E",2519:"Pulkovo 1942 Gauss-Kruger CM 171E",2522:"Pulkovo 1942 Gauss-Kruger CM 171W",2520:"Pulkovo 1942 Gauss-Kruger CM 177E",2521:"Pulkovo 1942 Gauss-Kruger CM 177W",2494:"Pulkovo 1942 Gauss-Kruger CM 21E",2495:"Pulkovo 1942 Gauss-Kruger CM 27E",2496:"Pulkovo 1942 Gauss-Kruger CM 33E",2497:"Pulkovo 1942 Gauss-Kruger CM 39E",2499:"Pulkovo 1942 Gauss-Kruger CM 51E",2500:"Pulkovo 1942 Gauss-Kruger CM 57E",2501:"Pulkovo 1942 Gauss-Kruger CM 63E",2503:"Pulkovo 1942 Gauss-Kruger CM 75E",2504:"Pulkovo 1942 Gauss-Kruger CM 81E",2505:"Pulkovo 1942 Gauss-Kruger CM 87E",2506:"Pulkovo 1942 Gauss-Kruger CM 93E",2507:"Pulkovo 1942 Gauss-Kruger CM 99E",2498:"Pulkovo 1942 Gauss-Krugerr CM 45E",2502:"Pulkovo 1942 Gauss-Krugerr CM 69E"},"Pulkovo 1995":{2726:"Pulkovo 1995 3 Degree GK CM 102E",2727:"Pulkovo 1995 3 Degree GK CM 105E",2728:"Pulkovo 1995 3 Degree GK CM 108E",2729:"Pulkovo 1995 3 Degree GK CM 111E",2730:"Pulkovo 1995 3 Degree GK CM 114E",2731:"Pulkovo 1995 3 Degree GK CM 117E",2732:"Pulkovo 1995 3 Degree GK CM 120E",2733:"Pulkovo 1995 3 Degree GK CM 123E",2734:"Pulkovo 1995 3 Degree GK CM 126E",2735:"Pulkovo 1995 3 Degree GK CM 129E",2738:"Pulkovo 1995 3 Degree GK CM 132E",2739:"Pulkovo 1995 3 Degree GK CM 135E",2740:"Pulkovo 1995 3 Degree GK CM 138E",2741:"Pulkovo 1995 3 Degree GK CM 141E",2742:"Pulkovo 1995 3 Degree GK CM 144E",2743:"Pulkovo 1995 3 Degree GK CM 147E",2744:"Pulkovo 1995 3 Degree GK CM 150E",2745:"Pulkovo 1995 3 Degree GK CM 153E",2746:"Pulkovo 1995 3 Degree GK CM 156E",2747:"Pulkovo 1995 3 Degree GK CM 159E",2748:"Pulkovo 1995 3 Degree GK CM 162E",2749:"Pulkovo 1995 3 Degree GK CM 165E",2750:"Pulkovo 1995 3 Degree GK CM 168E",2758:"Pulkovo 1995 3 Degree GK CM 168W",2751:"Pulkovo 1995 3 Degree GK CM 171E",2757:"Pulkovo 1995 3 Degree GK CM 171W",2752:"Pulkovo 1995 3 Degree GK CM 174E",2756:"Pulkovo 1995 3 Degree GK CM 174W",2753:"Pulkovo 1995 3 Degree GK CM 177E",2755:"Pulkovo 1995 3 Degree GK CM 177W",2754:"Pulkovo 1995 3 Degree GK CM 180E",3151:"Pulkovo 1995 3 Degree GK CM 18E",2699:"Pulkovo 1995 3 Degree GK CM 21E",2700:"Pulkovo 1995 3 Degree GK CM 24E",2701:"Pulkovo 1995 3 Degree GK CM 27E",2702:"Pulkovo 1995 3 Degree GK CM 30E",2703:"Pulkovo 1995 3 Degree GK CM 33E",2704:"Pulkovo 1995 3 Degree GK CM 36E",2705:"Pulkovo 1995 3 Degree GK CM 39E",2706:"Pulkovo 1995 3 Degree GK CM 42E",2707:"Pulkovo 1995 3 Degree GK CM 45E",2708:"Pulkovo 1995 3 Degree GK CM 48E",2709:"Pulkovo 1995 3 Degree GK CM 51E",2710:"Pulkovo 1995 3 Degree GK CM 54E",2711:"Pulkovo 1995 3 Degree GK CM 57E",3150:"Pulkovo 1995 3 Degree GK CM 6",3390:"Pulkovo 1995 3 Degree GK CM 60",2712:"Pulkovo 1995 3 Degree GK CM 60E",2713:"Pulkovo 1995 3 Degree GK CM 63E",2714:"Pulkovo 1995 3 Degree GK CM 66E",2715:"Pulkovo 1995 3 Degree GK CM 69E",2716:"Pulkovo 1995 3 Degree GK CM 72E",2717:"Pulkovo 1995 3 Degree GK CM 75E",2718:"Pulkovo 1995 3 Degree GK CM 78E",2719:"Pulkovo 1995 3 Degree GK CM 81E",2720:"Pulkovo 1995 3 Degree GK CM 84E",2721:"Pulkovo 1995 3 Degree GK CM 87E",2722:"Pulkovo 1995 3 Degree GK CM 90E",2723:"Pulkovo 1995 3 Degree GK CM 93E",2724:"Pulkovo 1995 3 Degree GK CM 96E",2725:"Pulkovo 1995 3 Degree GK CM 99E",2644:"Pulkovo 1995 3 Degree GK Zone 10",2645:"Pulkovo 1995 3 Degree GK Zone 11",2646:"Pulkovo 1995 3 Degree GK Zone 12",2647:"Pulkovo 1995 3 Degree GK Zone 13",2648:"Pulkovo 1995 3 Degree GK Zone 14",2649:"Pulkovo 1995 3 Degree GK Zone 15",2650:"Pulkovo 1995 3 Degree GK Zone 16",2651:"Pulkovo 1995 3 Degree GK Zone 17",2652:"Pulkovo 1995 3 Degree GK Zone 18",2653:"Pulkovo 1995 3 Degree GK Zone 19",2654:"Pulkovo 1995 3 Degree GK Zone 20",2655:"Pulkovo 1995 3 Degree GK Zone 21",2656:"Pulkovo 1995 3 Degree GK Zone 22",2657:"Pulkovo 1995 3 Degree GK Zone 23",2658:"Pulkovo 1995 3 Degree GK Zone 24",2659:"Pulkovo 1995 3 Degree GK Zone 25",2660:"Pulkovo 1995 3 Degree GK Zone 26",2661:"Pulkovo 1995 3 Degree GK Zone 27",2662:"Pulkovo 1995 3 Degree GK Zone 28",2663:"Pulkovo 1995 3 Degree GK Zone 29",2664:"Pulkovo 1995 3 Degree GK Zone 30",2665:"Pulkovo 1995 3 Degree GK Zone 31",2666:"Pulkovo 1995 3 Degree GK Zone 32",2667:"Pulkovo 1995 3 Degree GK Zone 33",2668:"Pulkovo 1995 3 Degree GK Zone 34",2669:"Pulkovo 1995 3 Degree GK Zone 35",2670:"Pulkovo 1995 3 Degree GK Zone 36",2671:"Pulkovo 1995 3 Degree GK Zone 37",2672:"Pulkovo 1995 3 Degree GK Zone 38",2673:"Pulkovo 1995 3 Degree GK Zone 39",2674:"Pulkovo 1995 3 Degree GK Zone 40",2675:"Pulkovo 1995 3 Degree GK Zone 41",2676:"Pulkovo 1995 3 Degree GK Zone 42",2677:"Pulkovo 1995 3 Degree GK Zone 43",2678:"Pulkovo 1995 3 Degree GK Zone 44",2679:"Pulkovo 1995 3 Degree GK Zone 45",2680:"Pulkovo 1995 3 Degree GK Zone 46",2681:"Pulkovo 1995 3 Degree GK Zone 47",2682:"Pulkovo 1995 3 Degree GK Zone 48",2683:"Pulkovo 1995 3 Degree GK Zone 49",2684:"Pulkovo 1995 3 Degree GK Zone 50",2685:"Pulkovo 1995 3 Degree GK Zone 51",2686:"Pulkovo 1995 3 Degree GK Zone 52",2687:"Pulkovo 1995 3 Degree GK Zone 53",2688:"Pulkovo 1995 3 Degree GK Zone 54",2689:"Pulkovo 1995 3 Degree GK Zone 55",2690:"Pulkovo 1995 3 Degree GK Zone 56",2691:"Pulkovo 1995 3 Degree GK Zone 57",2692:"Pulkovo 1995 3 Degree GK Zone 58",2693:"Pulkovo 1995 3 Degree GK Zone 59",2695:"Pulkovo 1995 3 Degree GK Zone 61",2696:"Pulkovo 1995 3 Degree GK Zone 62",2697:"Pulkovo 1995 3 Degree GK Zone 63",2698:"Pulkovo 1995 3 Degree GK Zone 64",2641:"Pulkovo 1995 3 Degree GK Zone 7",2642:"Pulkovo 1995 3 Degree GK Zone 8",2643:"Pulkovo 1995 3 Degree GK Zone 9",20010:"Pulkovo 1995 GK Zone 10",20070:"Pulkovo 1995 GK Zone 10N",20011:"Pulkovo 1995 GK Zone 11",20071:"Pulkovo 1995 GK Zone 11N",20012:"Pulkovo 1995 GK Zone 12",20072:"Pulkovo 1995 GK Zone 12N",20013:"Pulkovo 1995 GK Zone 13",20073:"Pulkovo 1995 GK Zone 13N",20014:"Pulkovo 1995 GK Zone 14",20074:"Pulkovo 1995 GK Zone 14N",20015:"Pulkovo 1995 GK Zone 15",20075:"Pulkovo 1995 GK Zone 15N",20016:"Pulkovo 1995 GK Zone 16",20076:"Pulkovo 1995 GK Zone 16N",20017:"Pulkovo 1995 GK Zone 17",20077:"Pulkovo 1995 GK Zone 17N",20018:"Pulkovo 1995 GK Zone 18",20078:"Pulkovo 1995 GK Zone 18N",20019:"Pulkovo 1995 GK Zone 19",20079:"Pulkovo 1995 GK Zone 19N",20002:"Pulkovo 1995 GK Zone 2",20020:"Pulkovo 1995 GK Zone 20",20080:"Pulkovo 1995 GK Zone 20N",20021:"Pulkovo 1995 GK Zone 21",20081:"Pulkovo 1995 GK Zone 21N",20022:"Pulkovo 1995 GK Zone 22",20082:"Pulkovo 1995 GK Zone 22N",20023:"Pulkovo 1995 GK Zone 23",20083:"Pulkovo 1995 GK Zone 23N",20024:"Pulkovo 1995 GK Zone 24",20084:"Pulkovo 1995 GK Zone 24N",20025:"Pulkovo 1995 GK Zone 25",20085:"Pulkovo 1995 GK Zone 25N",20026:"Pulkovo 1995 GK Zone 26",20086:"Pulkovo 1995 GK Zone 26N",20027:"Pulkovo 1995 GK Zone 27",20087:"Pulkovo 1995 GK Zone 27N",20028:"Pulkovo 1995 GK Zone 28",20088:"Pulkovo 1995 GK Zone 28N",20029:"Pulkovo 1995 GK Zone 29",20089:"Pulkovo 1995 GK Zone 29N",20062:"Pulkovo 1995 GK Zone 2N",20003:"Pulkovo 1995 GK Zone 3",20030:"Pulkovo 1995 GK Zone 30",20090:"Pulkovo 1995 GK Zone 30N",20031:"Pulkovo 1995 GK Zone 31",20091:"Pulkovo 1995 GK Zone 31N",20032:"Pulkovo 1995 GK Zone 32",20092:"Pulkovo 1995 GK Zone 32N",20063:"Pulkovo 1995 GK Zone 3N",20004:"Pulkovo 1995 GK Zone 4",20064:"Pulkovo 1995 GK Zone 4N",20005:"Pulkovo 1995 GK Zone 5",20065:"Pulkovo 1995 GK Zone 5N",20006:"Pulkovo 1995 GK Zone 6",20066:"Pulkovo 1995 GK Zone 6N",20007:"Pulkovo 1995 GK Zone 7",20067:"Pulkovo 1995 GK Zone 7N",20008:"Pulkovo 1995 GK Zone 8",20068:"Pulkovo 1995 GK Zone 8N",20009:"Pulkovo 1995 GK Zone 9",20069:"Pulkovo 1995 GK Zone 9N",2477:"Pulkovo 1995 Gauss-Kruger CM 105E",2478:"Pulkovo 1995 Gauss-Kruger CM 111E",2479:"Pulkovo 1995 Gauss-Kruger CM 117E",2480:"Pulkovo 1995 Gauss-Kruger CM 123E",2481:"Pulkovo 1995 Gauss-Kruger CM 129E",2482:"Pulkovo 1995 Gauss-Kruger CM 135E",2483:"Pulkovo 1995 Gauss-Kruger CM 141E",2484:"Pulkovo 1995 Gauss-Kruger CM 147E",2485:"Pulkovo 1995 Gauss-Kruger CM 153E",2486:"Pulkovo 1995 Gauss-Kruger CM 159E",2487:"Pulkovo 1995 Gauss-Kruger CM 165E",2488:"Pulkovo 1995 Gauss-Kruger CM 171E",2491:"Pulkovo 1995 Gauss-Kruger CM 171W",2489:"Pulkovo 1995 Gauss-Kruger CM 177E",2490:"Pulkovo 1995 Gauss-Kruger CM 177W",2463:"Pulkovo 1995 Gauss-Kruger CM 21E",2464:"Pulkovo 1995 Gauss-Kruger CM 27E",2465:"Pulkovo 1995 Gauss-Kruger CM 33E",2466:"Pulkovo 1995 Gauss-Kruger CM 39E",2467:"Pulkovo 1995 Gauss-Kruger CM 45E",2468:"Pulkovo 1995 Gauss-Kruger CM 51E",2469:"Pulkovo 1995 Gauss-Kruger CM 57E",2470:"Pulkovo 1995 Gauss-Kruger CM 63E",2471:"Pulkovo 1995 Gauss-Kruger CM 69E",2472:"Pulkovo 1995 Gauss-Kruger CM 75E",2473:"Pulkovo 1995 Gauss-Kruger CM 81E",2474:"Pulkovo 1995 Gauss-Kruger CM 87E",2475:"Pulkovo 1995 Gauss-Kruger CM 93E",2476:"Pulkovo 1995 Gauss-Kruger CM 99E"},Turkey:{2207:"ED 1950 3 Degree GK Zone 10",2208:"ED 1950 3 Degree GK Zone 11",2209:"ED 1950 3 Degree GK Zone 12",2210:"ED 1950 3 Degree GK Zone 13",2211:"ED 1950 3 Degree GK Zone 14",2212:"ED 1950 3 Degree GK Zone 15",2206:"ED 1950 3 Degree GK Zone 9"},"Xian 1980":{2379:"Xian 1980 3 Degree GK CM 102E",2380:"Xian 1980 3 Degree GK CM 105E",2381:"Xian 1980 3 Degree GK CM 108E",2382:"Xian 1980 3 Degree GK CM 111E",2383:"Xian 1980 3 Degree GK CM 114E",2384:"Xian 1980 3 Degree GK CM 117E",2385:"Xian 1980 3 Degree GK CM 120E",2386:"Xian 1980 3 Degree GK CM 123E",2387:"Xian 1980 3 Degree GK CM 126E",2388:"Xian 1980 3 Degree GK CM 129E",2389:"Xian 1980 3 Degree GK CM 132E",2390:"Xian 1980 3 Degree GK CM 135E",2370:"Xian 1980 3 Degree GK CM 75E",2371:"Xian 1980 3 Degree GK CM 78E",2372:"Xian 1980 3 Degree GK CM 81E",2373:"Xian 1980 3 Degree GK CM 84E",2374:"Xian 1980 3 Degree GK CM 87E",2375:"Xian 1980 3 Degree GK CM 90E",2376:"Xian 1980 3 Degree GK CM 93E",2377:"Xian 1980 3 Degree GK CM 96E",2378:"Xian 1980 3 Degree GK CM 99E",2349:"Xian 1980 3 Degree GK Zone 25",2350:"Xian 1980 3 Degree GK Zone 26",2351:"Xian 1980 3 Degree GK Zone 27",2352:"Xian 1980 3 Degree GK Zone 28",2353:"Xian 1980 3 Degree GK Zone 29",2354:"Xian 1980 3 Degree GK Zone 30",2355:"Xian 1980 3 Degree GK Zone 31",2356:"Xian 1980 3 Degree GK Zone 32",2357:"Xian 1980 3 Degree GK Zone 33",2358:"Xian 1980 3 Degree GK Zone 34",2359:"Xian 1980 3 Degree GK Zone 35",2360:"Xian 1980 3 Degree GK Zone 36",2361:"Xian 1980 3 Degree GK Zone 37",2362:"Xian 1980 3 Degree GK Zone 38",2363:"Xian 1980 3 Degree GK Zone 39",2364:"Xian 1980 3 Degree GK Zone 40",2365:"Xian 1980 3 Degree GK Zone 41",2366:"Xian 1980 3 Degree GK Zone 42",2367:"Xian 1980 3 Degree GK Zone 43",2368:"Xian 1980 3 Degree GK Zone 44",2369:"Xian 1980 3 Degree GK Zone 45",2343:"Xian 1980 GK CM 105E",2344:"Xian 1980 GK CM 111E",2345:"Xian 1980 GK CM 117E",2346:"Xian 1980 GK CM 123E",2347:"Xian 1980 GK CM 129E",2348:"Xian 1980 GK CM 135E",2338:"Xian 1980 GK CM 75E",2339:"Xian 1980 GK CM 81E",2340:"Xian 1980 GK CM 87E",2341:"Xian 1980 GK CM 93E",2342:"Xian 1980 GK CM 99E",2327:"Xian 1980 GK Zone 13",2328:"Xian 1980 GK Zone 14",2329:"Xian 1980 GK Zone 15",2330:"Xian 1980 GK Zone 16",2331:"Xian 1980 GK Zone 17",2332:"Xian 1980 GK Zone 18",2333:"Xian 1980 GK Zone 19",2334:"Xian 1980 GK Zone 20",2335:"Xian 1980 GK Zone 21",2336:"Xian 1980 GK Zone 22",2337:"Xian 1980 GK Zone 23"}},"National Grids":{Africa:{2165:"Abidjan 1987 TM 5 NW",2136:"Accra Ghana Grid",2137:"Accra TM 1 NW",2931:"Beduaram TM 13 NE",22091:"Camacupa TM 11 30 SE",22092:"Camacupa TM 12 SE",2088:"Carthage TM 11 NE",3119:"Douala 1948 AOF West",22991:"Egypt Blue Belt",22994:"Egypt Extended Purple Belt",3355:"Egypt Gulf of Suez S-650 TL Red Belt",22993:"Egypt Purple Belt",22992:"Egypt Red Belt",25e3:"Ghana Metre Grid",3986:"Katanga 1955 Katanga Gauss A",3987:"Katanga 1955 Katanga Gauss B",3988:"Katanga 1955 Katanga Gauss C",3989:"Katanga 1955 Katanga Gauss D",4415:"Katanga 1955 Katanga Lambert",3315:"Katanga 1955 Katanga TM",2164:"Locodjo 1965 TM 5 NW",26194:"Merchich Sahara Nord",26195:"Merchich Sahara Sud",26393:"Nigeria East Belt",26392:"Nigeria Mid Belt",26391:"Nigeria West Belt",102491:"Nord Algerie Ancienne (degrees)",30491:"Nord Algerie ancienne",26191:"Nord Maroc",102191:"Nord Maroc (degrees)",30791:"Nord Sahara 1959 Voirol Unifie Nord",30792:"Nord Sahara 1959 Voirol Unifie Sud",22391:"Nord Tunisie",5844:"RGRDC 2005 Congo TM Zone 30",9159:"RSAO13 TM 12 SE",9156:"RSAO13 UTM zone 32S",9157:"RSAO13 UTM zone 33S",9158:"RSAO13 UTM zone 34S",26193:"Sahara",102193:"Sahara (degrees)",2159:"Sierra Leone 1924 New Colony Grid",2160:"Sierra Leone 1924 New War Office Grid",30492:"Sud Algerie Ancienne",102492:"Sud Algerie Ancienne Degree",26192:"Sud Maroc",102192:"Sud Maroc (degrees)",22392:"Sud Tunisie",29701:"Tananarive 1925 (Paris) Laborde Grid",8441:"Tananarive 1925 Laborde Grid",30493:"Voirol 1879 Nord Algerie Ancienne",30494:"Voirol 1879 Sud Algerie Ancienne",5223:"WGS 1984 Gabon TM",5523:"WGS 1984 Gabon TM 2011",5842:"WGS 1984 TM 12 SE",32766:"WGS 1984 TM 36 SE",2311:"WGS 1984 TM 6 NE"},Argentina:{22191:"Argentina Zone 1",22192:"Argentina Zone 2",22193:"Argentina Zone 3",22194:"Argentina Zone 4",22195:"Argentina Zone 5",22196:"Argentina Zone 6",22197:"Argentina Zone 7",2081:"Chos Malal 1914 Argentina 2",2083:"Hito XVIII 1963 Argentina 2",9252:"MMN Argentina 2",9254:"MMS Argentina 2",22181:"POSGAR 1994 Argentina Zone 1",22182:"POSGAR 1994 Argentina Zone 2",22183:"POSGAR 1994 Argentina Zone 3",22184:"POSGAR 1994 Argentina Zone 4",22185:"POSGAR 1994 Argentina Zone 5",22186:"POSGAR 1994 Argentina Zone 6",22187:"POSGAR 1994 Argentina Zone 7",22171:"POSGAR 1998 Argentina Zone 1",22172:"POSGAR 1998 Argentina Zone 2",22173:"POSGAR 1998 Argentina Zone 3",22174:"POSGAR 1998 Argentina Zone 4",22175:"POSGAR 1998 Argentina Zone 5",22176:"POSGAR 1998 Argentina Zone 6",22177:"POSGAR 1998 Argentina Zone 7",5343:"POSGAR 2007 Argentina Zone 1",5344:"POSGAR 2007 Argentina Zone 2",5345:"POSGAR 2007 Argentina Zone 3",5346:"POSGAR 2007 Argentina Zone 4",5347:"POSGAR 2007 Argentina Zone 5",5348:"POSGAR 2007 Argentina Zone 6",5349:"POSGAR 2007 Argentina Zone 7",9498:"POSGAR 2007 CABA 2019",9284:"Pampa del Castillo Argentina 1",2082:"Pampa del Castillo Argentina 2",9285:"Pampa del Castillo Argentina 3",9249:"Tapi Aike Argentina 1",9250:"Tapi Aike Argentina 2"},Asia:{102204:"Ain el Abd 1970 Aramco Lambert 2",2318:"Ain el Abd Aramco Lambert",20499:"Bahrain State Grid",5266:"DRUKREF 03 Bhutan National Grid",22780:"Deir ez Zor Levant Stereographic",22700:"Deir ez Zor Levant Zone",22770:"Deir ez Zor Syria Lambert",3893:"ED 1950 Iraq National Grid",3066:"ED 1950 Jordan TM",102061:"Everest Modified 1969 RSO Malaya (Meters)",3200:"FD 1958 Iraq",2093:"Hanoi 1972 GK 106 NE",3407:"Hong Kong 1963 Grid System",2326:"Hong Kong 1980 Grid",3176:"Indian 1960 TM 106NE",2039:"Israel TM Grid",6984:"Israeli Grid 05",6991:"Israeli Grid 05-12",102158:"Jordan JTM",31901:"KUDAMS KTM",102064:"Kandawala Ceylon Belt (Indian Yards 1937)",102063:"Kandawala Ceylon Belt (Meters)",5234:"Kandawala Sri Lanka Grid",6646:"Karbala 1979 Iraq National Grid",24600:"Kuwait Oil Co - Lambert",7692:"Kyrg-06 TM Zone 1",7693:"Kyrg-06 TM Zone 2",7694:"Kyrg-06 TM Zone 3",7695:"Kyrg-06 TM Zone 4",7696:"Kyrg-06 TM Zone 5",8433:"Macao 1920 Macao Grid",102448:"Macao 2008 Macao Grid",3394:"Nahrwan 1934 Iraq Zone",102306:"Nepal Nagarkot TM",102159:"Observatorio Meteorologico 1965 Macau Grid",5550:"PNG94 PNGMG94 Zone 54",5551:"PNG94 PNGMG94 Zone 55",5552:"PNG94 PNGMG94 Zone 56",3121:"PRS 1992 Philippines Zone I",3122:"PRS 1992 Philippines Zone II",3123:"PRS 1992 Philippines Zone III",3124:"PRS 1992 Philippines Zone IV",3125:"PRS 1992 Philippines Zone V",28193:"Palestine 1923 Israel CS Grid",28192:"Palestine 1923 Palestine Belt",28191:"Palestine 1923 Palestine Grid",7142:"Palestine 1923 Palestine Grid TM",103699:"Palestine Grid 1923 Modified TM",25391:"Philippines Zone I",25392:"Philippines Zone II",25393:"Philippines Zone III",25394:"Philippines Zone IV",25395:"Philippines Zone V",3388:"Pulkovo 1942 Caspian Sea Mercator",2932:"QND 1995 Qatar National Grid",2099:"Qatar 1948 Qatar Grid",28600:"Qatar National Grid",2057:"Rassadiran Nakhl e Taqi",5235:"SLD99 Sri Lanka Grid 1999",3827:"TWD 1967 TM Penghu",3828:"TWD 1967 TM Taiwan",3825:"TWD 1997 TM Penghu",3826:"TWD 1997 TM Taiwan",3415:"WGS 1972 BE South China Sea Lambert",2094:"WGS 1972 TM 106 NE",3997:"WGS 1984 Dubai Local TM"},Australia:{102071:"AGD 1966 ACT Grid AGC Zone",5825:"AGD 1966 ACT Standard Grid",20248:"AGD 1966 AMG Zone 48",20249:"AGD 1966 AMG Zone 49",20250:"AGD 1966 AMG Zone 50",20251:"AGD 1966 AMG Zone 51",20252:"AGD 1966 AMG Zone 52",20253:"AGD 1966 AMG Zone 53",20254:"AGD 1966 AMG Zone 54",20255:"AGD 1966 AMG Zone 55",20256:"AGD 1966 AMG Zone 56",20257:"AGD 1966 AMG Zone 57",20258:"AGD 1966 AMG Zone 58",102072:"AGD 1966 ISG 54 2",102073:"AGD 1966 ISG 54 3",102074:"AGD 1966 ISG 55 1",102075:"AGD 1966 ISG 55 2",102076:"AGD 1966 ISG 55 3",102077:"AGD 1966 ISG 56 1",102078:"AGD 1966 ISG 56 2",102079:"AGD 1966 ISG 56 3",3110:"AGD 1966 VICGRID",20348:"AGD 1984 AMG Zone 48",20349:"AGD 1984 AMG Zone 49",20350:"AGD 1984 AMG Zone 50",20351:"AGD 1984 AMG Zone 51",20352:"AGD 1984 AMG Zone 52",20353:"AGD 1984 AMG Zone 53",20354:"AGD 1984 AMG Zone 54",20355:"AGD 1984 AMG Zone 55",20356:"AGD 1984 AMG Zone 56",20357:"AGD 1984 AMG Zone 57",20358:"AGD 1984 AMG Zone 58",3577:"GDA 1994 Australia Albers",3113:"GDA 1994 BCSG02",6721:"GDA 1994 CIG94",6723:"GDA 1994 CKIG94",3112:"GDA 1994 Geoscience Australia Lambert",6732:"GDA 1994 MGA Zone 41",6733:"GDA 1994 MGA Zone 42",6734:"GDA 1994 MGA Zone 43",6735:"GDA 1994 MGA Zone 44",6736:"GDA 1994 MGA Zone 46",6737:"GDA 1994 MGA Zone 47",28348:"GDA 1994 MGA Zone 48",28349:"GDA 1994 MGA Zone 49",28350:"GDA 1994 MGA Zone 50",28351:"GDA 1994 MGA Zone 51",28352:"GDA 1994 MGA Zone 52",28353:"GDA 1994 MGA Zone 53",28354:"GDA 1994 MGA Zone 54",28355:"GDA 1994 MGA Zone 55",28356:"GDA 1994 MGA Zone 56",28357:"GDA 1994 MGA Zone 57",28358:"GDA 1994 MGA Zone 58",6738:"GDA 1994 MGA Zone 59",3308:"GDA 1994 New South Wales Lambert",102216:"GDA 1994 PCG94",3107:"GDA 1994 South Australia Lambert",3111:"GDA 1994 VICGRID94",8391:"GDA 1994 WEIPA94",8013:"GDA2020 ALB2020",9473:"GDA2020 Australian Albers",8016:"GDA2020 BCG2020",8014:"GDA2020 BIO2020",8015:"GDA2020 BRO2020",8017:"GDA2020 CARN2020",8018:"GDA2020 CIG2020",8019:"GDA2020 CKIG2020",8020:"GDA2020 COL2020",8021:"GDA2020 ESP2020",8022:"GDA2020 EXM2020",7845:"GDA2020 GA LCC",8023:"GDA2020 GCG2020",8024:"GDA2020 GOLD2020",8025:"GDA2020 JCG2020",8026:"GDA2020 KALB2020",8027:"GDA2020 KAR2020",8028:"GDA2020 KUN2020",8029:"GDA2020 LCG2020",7846:"GDA2020 MGA Zone 46",7847:"GDA2020 MGA Zone 47",7848:"GDA2020 MGA Zone 48",7849:"GDA2020 MGA Zone 49",7850:"GDA2020 MGA Zone 50",7851:"GDA2020 MGA Zone 51",7852:"GDA2020 MGA Zone 52",7853:"GDA2020 MGA Zone 53",7854:"GDA2020 MGA Zone 54",7855:"GDA2020 MGA Zone 55",7856:"GDA2020 MGA Zone 56",7857:"GDA2020 MGA Zone 57",7858:"GDA2020 MGA Zone 58",7859:"GDA2020 MGA Zone 59",8030:"GDA2020 MRCG2020",8058:"GDA2020 New South Wales Lambert",8031:"GDA2020 PCG2020",8032:"GDA2020 PHG2020",8059:"GDA2020 South Australia Lambert",7899:"GDA2020 Vicgrid",4462:"WGS 1984 Austalian Centre for Remote Sensing Lambert",6720:"WGS 1984 CIG92",6722:"WGS 1984 CKIG92"},Austria:{31282:"Austria (Ferro) Central Zone",31283:"Austria (Ferro) East Zone",31281:"Austria (Ferro) West Zone",3416:"ETRS 1989 Austria Lambert",31252:"MGI (Ferro) Austria GK Central",31253:"MGI (Ferro) Austria GK East",31251:"MGI (Ferro) Austria GK West",31288:"MGI (Ferro) M28",31289:"MGI (Ferro) M31",31290:"MGI (Ferro) M34",9272:"MGI (Greenwich) Austria Central",9273:"MGI (Greenwich) Austria East",9271:"MGI (Greenwich) Austria West",31255:"MGI Austria GK Central",31256:"MGI Austria GK East",31257:"MGI Austria GK M28",31258:"MGI Austria GK M31",31259:"MGI Austria GK M34",31254:"MGI Austria GK West",31287:"MGI Austria Lambert",31284:"MGI M28",31285:"MGI M31",31286:"MGI M34"},Bangladesh:{102954:"BUTM2010",102934:"Cassini Bangladesh Zone 01 Dinajpur",102935:"Cassini Bangladesh Zone 02 Rangpur",102936:"Cassini Bangladesh Zone 03 Rajshahi",102937:"Cassini Bangladesh Zone 04 Bogura",102938:"Cassini Bangladesh Zone 05 Pabna",102939:"Cassini Bangladesh Zone 06 Mymensingh",102940:"Cassini Bangladesh Zone 07 Dhaka",102941:"Cassini Bangladesh Zone 08 Faridpur",102942:"Cassini Bangladesh Zone 09 Sylhet",102943:"Cassini Bangladesh Zone 10 Kushtia",102944:"Cassini Bangladesh Zone 11 Joshore",102945:"Cassini Bangladesh Zone 12 Khulna",102946:"Cassini Bangladesh Zone 13 Barishal",102947:"Cassini Bangladesh Zone 14 Cumilla",102948:"Cassini Bangladesh Zone 15 Noakhali",102949:"Cassini Bangladesh Zone 16 Chottogram",102950:"Cassini Bangladesh Zone 17 CHT",3106:"Gulshan 303 Bangladesh TM 90 NE",9678:"Gulshan 303 Bangladesh Transverse Mercator",24305:"Kalianpur 1937 UTM Zone 45N",24306:"Kalianpur 1937 UTM Zone 46N",102951:"LCC Bangladesh",102952:"LCC Gulshan",102953:"UTM Bangladesh (BTM)",102955:"UTM Gulshan",9680:"WGS 84 TM 90 NE"},Bhutan:{5292:"DRUKREF 03 Bumthang TM",5293:"DRUKREF 03 Chhukha TM",5294:"DRUKREF 03 Dagana TM",5295:"DRUKREF 03 Gasa TM",5296:"DRUKREF 03 Ha TM",5297:"DRUKREF 03 Lhuentse TM",5298:"DRUKREF 03 Mongar TM",5299:"DRUKREF 03 Paro TM",5300:"DRUKREF 03 Pemagatshel TM",5301:"DRUKREF 03 Punakha TM",5302:"DRUKREF 03 Samdrup Jongkhar TM",5303:"DRUKREF 03 Samtse TM",5304:"DRUKREF 03 Sarpang TM",5305:"DRUKREF 03 Thimphu TM",5306:"DRUKREF 03 Trashigang TM",5307:"DRUKREF 03 Trongsa TM",5308:"DRUKREF 03 Tsirang TM",5309:"DRUKREF 03 Wangdue Phodrang TM",5310:"DRUKREF 03 Yangtse TM",5311:"DRUKREF 03 Zhemgang TM"},Canada:{2294:"ATS 1977 MTM 4 Nova Scotia",2295:"ATS 1977 MTM 5 Nova Scotia",2200:"ATS 1977 New Brunswick Stereographic",102178:"NAD 1927 10TM AEP Forest",102179:"NAD 1927 10TM AEP Resource",3771:"NAD 1927 3TM 111",3772:"NAD 1927 3TM 114",3773:"NAD 1927 3TM 117",3800:"NAD 1927 3TM 120",2016:"NAD 1927 CGQ77 MTM 10 SCoPQ",2008:"NAD 1927 CGQ77 MTM 2 SCoPQ",2009:"NAD 1927 CGQ77 MTM 3 SCoPQ",2010:"NAD 1927 CGQ77 MTM 4 SCoPQ",2011:"NAD 1927 CGQ77 MTM 5 SCoPQ",2012:"NAD 1927 CGQ77 MTM 6 SCoPQ",2013:"NAD 1927 CGQ77 MTM 7 SCoPQ",2014:"NAD 1927 CGQ77 MTM 8 SCoPQ",2015:"NAD 1927 CGQ77 MTM 9 SCoPQ",2138:"NAD 1927 CGQ77 Quebec Lambert",2031:"NAD 1927 CGQ77 UTM Zone 17N",2032:"NAD 1927 CGQ77 UTM Zone 18N",2033:"NAD 1927 CGQ77 UTM Zone 19N",2034:"NAD 1927 CGQ77 UTM Zone 20N",2035:"NAD 1927 CGQ77 UTM Zone 21N",2019:"NAD 1927 DEF 1976 MTM 10",2020:"NAD 1927 DEF 1976 MTM 11",2021:"NAD 1927 DEF 1976 MTM 12",2022:"NAD 1927 DEF 1976 MTM 13",2023:"NAD 1927 DEF 1976 MTM 14",2024:"NAD 1927 DEF 1976 MTM 15",2025:"NAD 1927 DEF 1976 MTM 16",2026:"NAD 1927 DEF 1976 MTM 17",2017:"NAD 1927 DEF 1976 MTM 8",2018:"NAD 1927 DEF 1976 MTM 9",2027:"NAD 1927 DEF 1976 UTM Zone 15N",2028:"NAD 1927 DEF 1976 UTM Zone 16N",2029:"NAD 1927 DEF 1976 UTM Zone 17N",2030:"NAD 1927 DEF 1976 UTM Zone 18N",32081:"NAD 1927 MTM 1",32082:"NAD 1927 MTM 2",32083:"NAD 1927 MTM 3",32084:"NAD 1927 MTM 4",32085:"NAD 1927 MTM 5",32086:"NAD 1927 MTM 6",7991:"NAD 1927 MTM zone 10",3797:"NAD 1927 MTQ Lambert",5588:"NAD 1927 New Brunswick Stereographic",32098:"NAD 1927 Quebec Lambert",8082:"NAD 1983 (2011) CSRS v6 MTM Nova Scotia zone 4",8083:"NAD 1983 (2011) CSRS v6 MTM Nova Scotia zone 5",103696:"NAD 1983 (CSRS) v6 UTM Zone 19N",103697:"NAD 1983 (CSRS) v6 UTM Zone 20N",103698:"NAD 1983 (CSRS) v6 UTM Zone 21N",3400:"NAD 1983 10TM AEP Forest",3401:"NAD 1983 10TM AEP Resource",3775:"NAD 1983 3TM 111",3776:"NAD 1983 3TM 114",3777:"NAD 1983 3TM 117",3801:"NAD 1983 3TM 120",3005:"NAD 1983 BC Environment Albers",3402:"NAD 1983 CSRS 10TM AEP Forest",3403:"NAD 1983 CSRS 10TM AEP Resource",3779:"NAD 1983 CSRS 3TM 111",3780:"NAD 1983 CSRS 3TM 114",3781:"NAD 1983 CSRS 3TM 117",3802:"NAD 1983 CSRS 3TM 120",3153:"NAD 1983 CSRS BC Environment Albers",26898:"NAD 1983 CSRS MTM  1",26899:"NAD 1983 CSRS MTM  2",2944:"NAD 1983 CSRS MTM  2 SCoPQ",2945:"NAD 1983 CSRS MTM  3",2946:"NAD 1983 CSRS MTM  4",2947:"NAD 1983 CSRS MTM  5",2948:"NAD 1983 CSRS MTM  6",2949:"NAD 1983 CSRS MTM  7",2950:"NAD 1983 CSRS MTM  8",2951:"NAD 1983 CSRS MTM  9",2952:"NAD 1983 CSRS MTM 10",26891:"NAD 1983 CSRS MTM 11",26892:"NAD 1983 CSRS MTM 12",26893:"NAD 1983 CSRS MTM 13",26894:"NAD 1983 CSRS MTM 14",26895:"NAD 1983 CSRS MTM 15",26896:"NAD 1983 CSRS MTM 16",26897:"NAD 1983 CSRS MTM 17",3799:"NAD 1983 CSRS MTQ Lambert",2953:"NAD 1983 CSRS New Brunswick Stereographic",3581:"NAD 1983 CSRS Northwest Territories Lambert",3162:"NAD 1983 CSRS Ontario MNR Lambert",2954:"NAD 1983 CSRS Prince Edward Island",6624:"NAD 1983 CSRS Quebec Albers",6622:"NAD 1983 CSRS Quebec Lambert",3348:"NAD 1983 CSRS Statistics Canada Lambert",5321:"NAD 1983 CSRS Teranet Ontario Lambert",3157:"NAD 1983 CSRS UTM Zone 10N",2955:"NAD 1983 CSRS UTM Zone 11N",2956:"NAD 1983 CSRS UTM Zone 12N",2957:"NAD 1983 CSRS UTM Zone 13N",3158:"NAD 1983 CSRS UTM Zone 14N",3159:"NAD 1983 CSRS UTM Zone 15N",3160:"NAD 1983 CSRS UTM Zone 16N",2958:"NAD 1983 CSRS UTM Zone 17N",2959:"NAD 1983 CSRS UTM Zone 18N",2960:"NAD 1983 CSRS UTM Zone 19N",2961:"NAD 1983 CSRS UTM Zone 20N",2962:"NAD 1983 CSRS UTM Zone 21N",3761:"NAD 1983 CSRS UTM Zone 22N",9709:"NAD 1983 CSRS UTM Zone 23N",9713:"NAD 1983 CSRS UTM Zone 24N",3154:"NAD 1983 CSRS UTM Zone 7N",3155:"NAD 1983 CSRS UTM Zone 8N",3156:"NAD 1983 CSRS UTM Zone 9N",3579:"NAD 1983 CSRS Yukon Albers",32181:"NAD 1983 MTM  1",32182:"NAD 1983 MTM  2",32180:"NAD 1983 MTM  2 SCoPQ",32183:"NAD 1983 MTM  3",32184:"NAD 1983 MTM  4",32185:"NAD 1983 MTM  5",32186:"NAD 1983 MTM  6",32187:"NAD 1983 MTM  7",32188:"NAD 1983 MTM  8",32189:"NAD 1983 MTM  9",32190:"NAD 1983 MTM 10",32191:"NAD 1983 MTM 11",32192:"NAD 1983 MTM 12",32193:"NAD 1983 MTM 13",32194:"NAD 1983 MTM 14",32195:"NAD 1983 MTM 15",32196:"NAD 1983 MTM 16",32197:"NAD 1983 MTM 17",3798:"NAD 1983 MTQ Lambert",3580:"NAD 1983 Northwest Territories Lambert",3161:"NAD 1983 Ontario MNR Lambert",6623:"NAD 1983 Quebec Albers",32198:"NAD 1983 Quebec Lambert",3347:"NAD 1983 Statistics Canada Lambert",5320:"NAD 1983 Teranet Ontario Lambert",9712:"NAD 1983 UTM Zone 24N",3578:"NAD 1983 Yukon Albers",2290:"Prince Edward Island Stereographic"},"Central and North America":{8908:"CR-SIRGAS CRTM05",8909:"CR-SIRGAS UTM Zone 16N",8910:"CR-SIRGAS UTM Zone 17N",5367:"CRTM05",103598:"GTM",4484:"Mexican Datum 1993 UTM Zone 11N",4485:"Mexican Datum 1993 UTM Zone 12N",4486:"Mexican Datum 1993 UTM Zone 13N",4487:"Mexican Datum 1993 UTM Zone 14N",4488:"Mexican Datum 1993 UTM Zone 15N",4489:"Mexican Datum 1993 UTM Zone 16N",6372:"Mexico ITRF2008 LCC",6362:"Mexico ITRF92 LCC",32061:"NAD 1927 Guatemala Norte",32062:"NAD 1927 Guatemala Sur",102221:"Ocotepeque 1935 Costa Rica Lambert Norte",102222:"Ocotepeque 1935 Costa Rica Lambert Sur",5456:"Ocotepeque 1935 Costa Rica Norte",5457:"Ocotepeque 1935 Costa Rica Sur",5460:"Ocotepeque 1935 El Salvador Lambert",5559:"Ocotepeque 1935 Guatemala Norte",5459:"Ocotepeque 1935 Guatemala Sur",5461:"Ocotepeque 1935 Nicaragua Norte",5462:"Ocotepeque 1935 Nicaragua Sur",5469:"Panama-Colon 1911 Panama Lambert",5472:"Panama-Colon 1911 Panama Polyconic",5589:"Sibun Gorge 1922 Colony Grid",102223:"WGS 1984 Costa Rica TM 90"},"Democratic Republic of the Congo":{3318:"IGC 1962 Congo TM Zone 12",3319:"IGC 1962 Congo TM Zone 14",3320:"IGC 1962 Congo TM Zone 16",3321:"IGC 1962 Congo TM Zone 18",3322:"IGC 1962 Congo TM Zone 20",3323:"IGC 1962 Congo TM Zone 22",3324:"IGC 1962 Congo TM Zone 24",3325:"IGC 1962 Congo TM Zone 26",3326:"IGC 1962 Congo TM Zone 28",3327:"IGC 1962 Congo TM Zone 30",3339:"IGCB 1955 Congo TM Zone 12",3340:"IGCB 1955 Congo TM Zone 14",3341:"IGCB 1955 Congo TM Zone 16",3316:"Kasai 1953 Congo TM Zone 22",3317:"Kasai 1953 Congo TM Zone 24",4048:"RGRDC 2005 Congo TM Zone 12",4049:"RGRDC 2005 Congo TM Zone 14",4050:"RGRDC 2005 Congo TM Zone 16",4051:"RGRDC 2005 Congo TM Zone 18",4056:"RGRDC 2005 Congo TM Zone 20",4057:"RGRDC 2005 Congo TM Zone 22",4058:"RGRDC 2005 Congo TM Zone 24",4059:"RGRDC 2005 Congo TM Zone 26",4060:"RGRDC 2005 Congo TM Zone 28"},Europe:{9387:"AbInvA96 2020 Grid",7801:"BGS2005 - CCS2005",21500:"Belge Lambert 1950",31370:"Belge Lambert 1972",102499:"Belge Lambert 1972 (Bad false easting and northing)",3447:"Belge Lambert 2005",3812:"Belge Lambert 2008",27700:"British National Grid",6312:"CGRS 1993 Cyprus Local Transverse Mercator",102319:"CGRS 1993 LTM",102060:"D48 Slovenia TM",102160:"Datum 73 Hayford Gauss IGeoE",102161:"Datum 73 Hayford Gauss IPCC",27493:"Datum 73 Modified Portuguese Grid",9761:"ECML14_NB Grid",23090:"ED 1950 TM 0 N",23095:"ED 1950 TM 5 NE",5627:"ED 1950 TM 6 NE",9741:"EOS21 Grid",6870:"ETRS 1989 Albania 2010",6962:"ETRS 1989 Albania LCC 2010",4093:"ETRS 1989 DKTM1",4094:"ETRS 1989 DKTM2",4095:"ETRS 1989 DKTM3",4096:"ETRS 1989 DKTM4",5316:"ETRS 1989 Faroe TM",3108:"ETRS 1989 Guernsey Grid",3109:"ETRS 1989 Jersey TM",102157:"ETRS 1989 Kosovo Grid",2198:"ETRS 1989 Kp2000 Bornholm",2196:"ETRS 1989 Kp2000 Jutland",2197:"ETRS 1989 Kp2000 Zealand",2176:"ETRS 1989 Poland CS2000 Zone 5",2177:"ETRS 1989 Poland CS2000 Zone 6",2178:"ETRS 1989 Poland CS2000 Zone 7",2179:"ETRS 1989 Poland CS2000 Zone 8",2180:"ETRS 1989 Poland CS92",3763:"ETRS 1989 Portugal TM06",102109:"ETRS 1989 Slovenia TM",2213:"ETRS 1989 TM 30 NE",25884:"ETRS 1989 TM Baltic 1993",102173:"ETRS 1989 UWPP 1992",102174:"ETRS 1989 UWPP 2000 PAS 5",102175:"ETRS 1989 UWPP 2000 PAS 6",102176:"ETRS 1989 UWPP 2000 PAS 7",102177:"ETRS 1989 UWPP 2000 PAS 8",9766:"EWR2 Grid",3301:"Estonia 1997 Estonia National Grid",3300:"Estonian Coordinate System of 1992",5596:"FEH2010 Fehmarnbelt TM",9456:"GBK19 Grid",2100:"Greek Grid",102070:"Guernsey Grid",23700:"HD 1972 EOV",102960:"HD 1972 EOV (shifted)",9300:"HS2 Survey Grid",3766:"HTRS96 Croatia LCC",3765:"HTRS96 Croatia TM",3058:"Helle 1954 Jan Mayen Grid",2157:"IRENET95 Irish Tranverse Mercator",3057:"ISN 1993 Lambert 1993",5638:"ISN 2004 LAEA Europe",5639:"ISN 2004 LCC Europe",5325:"ISN 2004 Lambert 2004",9039:"ISN2016 LAEA Europe",9040:"ISN2016 LCC Europe",8088:"ISN2016 Lambert 2016",29902:"Irish National Grid",9141:"KOSOVAREF01 Balkans Zone 7",3059:"LKS 1992 Latvia TM",102440:"LKS 1992 Latvia TM (FN = 0)",3346:"LKS 1994 Lithuania TM",102163:"Lisboa Bessel Bonne",102164:"Lisboa Hayford Gauss IGeoE",102165:"Lisboa Hayford Gauss IPCC",5018:"Lisbon (Greenwich) Portuguese Grid New",20791:"Lisbon (Lisbon) Portuguese Grid",20790:"Lisbon (Lisbon) Portuguese National Grid",102400:"London Survey Grid",2169:"Luxembourg 1930 Gauss",8677:"MGI 1901 Balkans zone 5",8678:"MGI 1901 Balkans zone 6",6316:"MGI 1901 Balkans zone 7",8679:"MGI 1901 Balkans zone 8",3912:"MGI 1901 Slovene National Grid",8686:"MGI 1901 Slovenia Grid",31265:"MGI 3 Degree Gauss Zone 5",31266:"MGI 3 Degree Gauss Zone 6",31267:"MGI 3 Degree Gauss Zone 7",31268:"MGI 3 Degree Gauss Zone 8",31275:"MGI Balkans 5",31276:"MGI Balkans 6",31277:"MGI Balkans 7",31279:"MGI Balkans 8",2170:"MGI Slovenia Grid",9373:"MML07 Grid",4026:"MOLDREF99 Moldova TM",6204:"Macedonian State Coordinate System",2062:"Madrid 1870 Madrid Spain",29901:"OSNI 1952 Irish National Grid",5633:"PTRA08 LAEA Europe",5632:"PTRA08 LCC Europe",3120:"Pulkovo 1942 Adj 1958 Poland Zone I",2172:"Pulkovo 1942 Adj 1958 Poland Zone II",2173:"Pulkovo 1942 Adj 1958 Poland Zone III",2174:"Pulkovo 1942 Adj 1958 Poland Zone IV",2175:"Pulkovo 1942 Adj 1958 Poland Zone V",3844:"Pulkovo 1942 Adj 1958 Stereo 1970",3328:"Pulkovo 1942(58) GUGiK-80",28992:"RD New",28991:"RD Old",5635:"REGCAN95 LAEA Europe",5634:"REGCAN95 LCC Europe",2400:"RT90 2.5 gon West",2065:"S-JTSK (Ferro) Krovak",5221:"S-JTSK (Ferro) Krovak EastNorth",5513:"S-JTSK Krovak",5514:"S-JTSK Krovak EastNorth",8352:"S-JTSK [JTSK03] Krovak",8353:"S-JTSK [JTSK03] Krovak EastNorth",8682:"SRB_ETRS89 UTM zone 34N",3794:"Slovenia 1996 Slovene National Grid",8687:"Slovenia 1996 UTM Zone 33N",31600:"Stereo 1933",31700:"Stereo 1970",29903:"TM75 Irish Grid",9367:"TPEN11 Grid",102194:"UWPP 1992",102195:"UWPP 2000 pas 5",102196:"UWPP 2000 pas 6",102197:"UWPP 2000 pas 7",102198:"UWPP 2000 pas 8",4037:"WGS 1984 TMzn35N (N,E)",4038:"WGS 1984 TMzn36N (N,E)","Highways England":{102814:"OSGB36 Highways England A10H1",102815:"OSGB36 Highways England A10H2",102816:"OSGB36 Highways England A11H1",102817:"OSGB36 Highways England A11H2",102818:"OSGB36 Highways England A11H3",102819:"OSGB36 Highways England A12H1",102820:"OSGB36 Highways England A12H2",102821:"OSGB36 Highways England A12H3",102822:"OSGB36 Highways England A13H1",102823:"OSGB36 Highways England A13H2",102824:"OSGB36 Highways England A14H1",102825:"OSGB36 Highways England A14H2",102826:"OSGB36 Highways England A15H1",102827:"OSGB36 Highways England A15H2",102828:"OSGB36 Highways England A16H1",102829:"OSGB36 Highways England A16H2",102830:"OSGB36 Highways England A17H1",102831:"OSGB36 Highways England A17H2",102832:"OSGB36 Highways England A18H1",102833:"OSGB36 Highways England A18H2",102834:"OSGB36 Highways England A19H1",102835:"OSGB36 Highways England A19H2",102799:"OSGB36 Highways England A1H1",102836:"OSGB36 Highways England A20H1",102837:"OSGB36 Highways England A20H2",102838:"OSGB36 Highways England A21H1",102839:"OSGB36 Highways England A21H2",102840:"OSGB36 Highways England A22H1",102841:"OSGB36 Highways England A22H2",102842:"OSGB36 Highways England A23H1",102843:"OSGB36 Highways England A23H2",102844:"OSGB36 Highways England A24H1",102845:"OSGB36 Highways England A24H2",102846:"OSGB36 Highways England A25H1",102847:"OSGB36 Highways England A25H2",102848:"OSGB36 Highways England A26H1",102849:"OSGB36 Highways England A26H2",102850:"OSGB36 Highways England A27H1",102851:"OSGB36 Highways England A27H2",102852:"OSGB36 Highways England A28H1",102853:"OSGB36 Highways England A28H2",102854:"OSGB36 Highways England A29H1",102800:"OSGB36 Highways England A2H1",102855:"OSGB36 Highways England A30H1",102801:"OSGB36 Highways England A3H1",102802:"OSGB36 Highways England A3H2",102803:"OSGB36 Highways England A4H1",102804:"OSGB36 Highways England A5H1",102805:"OSGB36 Highways England A5H2",102806:"OSGB36 Highways England A6H1",102807:"OSGB36 Highways England A6H2",102808:"OSGB36 Highways England A7H1",102809:"OSGB36 Highways England A7H2",102810:"OSGB36 Highways England A8H1",102811:"OSGB36 Highways England A8H2",102812:"OSGB36 Highways England A9H1",102813:"OSGB36 Highways England A9H2",102856:"OSGB36 Highways England B15H1",102857:"OSGB36 Highways England B15H2",102858:"OSGB36 Highways England B15H3",102859:"OSGB36 Highways England B16H1",102860:"OSGB36 Highways England B16H2",102861:"OSGB36 Highways England B16H3",102862:"OSGB36 Highways England B16H4",102863:"OSGB36 Highways England B17H1",102864:"OSGB36 Highways England B17H2",102865:"OSGB36 Highways England B18H1",102866:"OSGB36 Highways England B18H2",102867:"OSGB36 Highways England B19H1",102868:"OSGB36 Highways England B20H1",102869:"OSGB36 Highways England B21H1",102870:"OSGB36 Highways England B22H1",102871:"OSGB36 Highways England B23H1",102872:"OSGB36 Highways England B24H1",102873:"OSGB36 Highways England B25H1",102874:"OSGB36 Highways England B26H1",102875:"OSGB36 Highways England B27H1",102876:"OSGB36 Highways England B28H1",102877:"OSGB36 Highways England B29H1",102878:"OSGB36 Highways England B30H1",102879:"OSGB36 Highways England B31H1",102880:"OSGB36 Highways England B32H1",102881:"OSGB36 Highways England C13H1",102882:"OSGB36 Highways England C14H1",102883:"OSGB36 Highways England C14H2",102884:"OSGB36 Highways England C14H3",102885:"OSGB36 Highways England C14H4",102886:"OSGB36 Highways England C15H1",102887:"OSGB36 Highways England C15H2",102888:"OSGB36 Highways England C15H3",102889:"OSGB36 Highways England C15H4",102890:"OSGB36 Highways England C15H5",102891:"OSGB36 Highways England C16H1",102892:"OSGB36 Highways England C16H2",102893:"OSGB36 Highways England C16H3",102894:"OSGB36 Highways England C16H4",102895:"OSGB36 Highways England C17H1",102896:"OSGB36 Highways England C17H2",102897:"OSGB36 Highways England C18H1",102898:"OSGB36 Highways England C18H2",102899:"OSGB36 Highways England C19H1",102900:"OSGB36 Highways England C19H2"}},Finland:{3873:"ETRS 1989 GK19FIN",3874:"ETRS 1989 GK20FIN",3875:"ETRS 1989 GK21FIN",3876:"ETRS 1989 GK22FIN",3877:"ETRS 1989 GK23FIN",3878:"ETRS 1989 GK24FIN",3879:"ETRS 1989 GK25FIN",3880:"ETRS 1989 GK26FIN",3881:"ETRS 1989 GK27FIN",3882:"ETRS 1989 GK28FIN",3883:"ETRS 1989 GK29FIN",3884:"ETRS 1989 GK30FIN",3885:"ETRS 1989 GK31FIN",5048:"ETRS 1989 TM35FIN (North,East)",3067:"EUREF FIN TM35FIN",2391:"Finland Zone 1",2392:"Finland Zone 2",2393:"Finland Zone 3",2394:"Finland Zone 4",3386:"KKJ Finland Zone 0",3387:"KKJ Finland Zone 5",Replaced:{3126:"ETRS 1989 ETRS-GK19FIN",3127:"ETRS 1989 ETRS-GK20FIN",3128:"ETRS 1989 ETRS-GK21FIN",3129:"ETRS 1989 ETRS-GK22FIN",3130:"ETRS 1989 ETRS-GK23FIN",3131:"ETRS 1989 ETRS-GK24FIN",3132:"ETRS 1989 ETRS-GK25FIN",3133:"ETRS 1989 ETRS-GK26FIN",3134:"ETRS 1989 ETRS-GK27FIN",3135:"ETRS 1989 ETRS-GK28FIN",3136:"ETRS 1989 ETRS-GK29FIN",3137:"ETRS 1989 ETRS-GK30FIN",3138:"ETRS 1989 ETRS-GK31FIN"}},France:{2192:"ED 1950 France EuroLambert",27581:"France I",27582:"France II",27583:"France III",27584:"France IV",27592:"NTF (Paris) Centre France",27594:"NTF (Paris) Corse",27562:"NTF (Paris) Lambert Centre France",27564:"NTF (Paris) Lambert Corse",27561:"NTF (Paris) Lambert Nord France",27563:"NTF (Paris) Lambert Sud France",27571:"NTF (Paris) Lambert Zone I",27572:"NTF (Paris) Lambert Zone II",27573:"NTF (Paris) Lambert Zone III",27574:"NTF (Paris) Lambert Zone IV",27591:"NTF (Paris) Nord France",27593:"NTF (Paris) Sud France",102581:"NTF France I (degrees)",102582:"NTF France II (degrees)",102583:"NTF France III (degrees)",102584:"NTF France IV (degrees)",102585:"NTF Lambert Zone I",102586:"NTF Lambert Zone II",102587:"NTF Lambert Zone III",102588:"NTF Lambert Zone IV",27500:"Nord de Guerre",3942:"RGF 1993 CC42",3943:"RGF 1993 CC43",3944:"RGF 1993 CC44",3945:"RGF 1993 CC45",3946:"RGF 1993 CC46",3947:"RGF 1993 CC47",3948:"RGF 1993 CC48",3949:"RGF 1993 CC49",3950:"RGF 1993 CC50",2154:"RGF 1993 Lambert-93"},Germany:{5682:"DB_REF 3-Degree GK Zone 2 (E-N)",5683:"DB_REF 3-Degree GK Zone 3 (E-N)",5684:"DB_REF 3-Degree GK Zone 4 (E-N)",5685:"DB_REF 3-Degree GK Zone 5 (E-N)",5680:"DHDN 3-Degree GK Zone 1 (E-N)",5676:"DHDN 3-Degree GK Zone 2 (E-N)",5677:"DHDN 3-Degree GK Zone 3 (E-N)",5678:"DHDN 3-Degree GK Zone 4 (E-N)",5679:"DHDN 3-Degree GK Zone 5 (E-N)",5520:"DHDN 3-Degree Gauss Zone 1",31466:"DHDN 3-Degree Gauss Zone 2",31467:"DHDN 3-Degree Gauss Zone 3",31468:"DHDN 3-Degree Gauss Zone 4",31469:"DHDN 3-Degree Gauss Zone 5",3068:"DHDN Soldner Berlin",8395:"ETRS 1989 GK CM 9E",5243:"ETRS 1989 LCC Germany (E-N)",4839:"ETRS 1989 LCC Germany (N-E)",5651:"ETRS 1989 UTM Zone 31N (N-zE)",5649:"ETRS 1989 UTM Zone 31N (zE-N)",5652:"ETRS 1989 UTM Zone 32N (N-zE)",102328:"ETRS 1989 UTM Zone 32N 7stellen",102329:"ETRS 1989 UTM Zone 32N 8stellen",5653:"ETRS 1989 UTM Zone 33N (N-zE)",5650:"ETRS 1989 UTM Zone 33N (zE-N)",102359:"ETRS 1989 UTM Zone 33N 7stellen",102360:"ETRS 1989 UTM Zone 33N 8stellen",4647:"ETRS 1989 UTM Zone N32",31491:"Germany Zone 1",31492:"Germany Zone 2",31493:"Germany Zone 3",31494:"Germany Zone 4",31495:"Germany Zone 5",3396:"PD 83 3-Degree GK Zone 3 (N-E)",3397:"PD 83 3-Degree GK Zone 4 (N-E)",5666:"PD 83 GK Zone 3 (E-N)",5667:"PD 83 GK Zone 4 (E-N)",3398:"RD 83 3-Degree GK Zone 4",5668:"RD 83 3-Degree GK Zone 4 (E-N)",3399:"RD 83 3-Degree GK Zone 5",5669:"RD 83 3-Degree GK Zone 5 (E-N)"},"Indian Subcontinent":{24370:"Kalianpur 1880 India Zone 0",24371:"Kalianpur 1880 India Zone I",24373:"Kalianpur 1880 India Zone III",24372:"Kalianpur 1880 India Zone IIa",24382:"Kalianpur 1880 India Zone IIb",24374:"Kalianpur 1880 India Zone IV",24375:"Kalianpur 1937 India Zone IIb",24305:"Kalianpur 1937 UTM Zone 45N",24306:"Kalianpur 1937 UTM Zone 46N",24376:"Kalianpur 1962 India Zone I",24377:"Kalianpur 1962 India Zone IIa",24311:"Kalianpur 1962 UTM Zone 41N",24312:"Kalianpur 1962 UTM Zone 42N",24313:"Kalianpur 1962 UTM Zone 43N",24378:"Kalianpur 1975 India Zone I",24381:"Kalianpur 1975 India Zone III",24379:"Kalianpur 1975 India Zone IIa",24380:"Kalianpur 1975 India Zone IIb",24383:"Kalianpur 1975 India Zone IV",24342:"Kalianpur 1975 UTM Zone 42N",24343:"Kalianpur 1975 UTM Zone 43N",24344:"Kalianpur 1975 UTM Zone 44N",24345:"Kalianpur 1975 UTM Zone 45N",24346:"Kalianpur 1975 UTM Zone 46N",24347:"Kalianpur 1975 UTM Zone 47N",7777:"WGS 1984 Andaman and Nicobar Islands",7756:"WGS 1984 Andhra Pradesh",7757:"WGS 1984 Arunachal Pradesh",7758:"WGS 1984 Assam",7759:"WGS 1984 Bihar",7778:"WGS 1984 Chhattisgarh",7760:"WGS 1984 Delhi",7779:"WGS 1984 Goa",7761:"WGS 1984 Gujarat",7762:"WGS 1984 Haryana",7763:"WGS 1984 Himachal Pradesh",7755:"WGS 1984 India NSF LCC",7771:"WGS 1984 India Northeast",7764:"WGS 1984 Jammu and Kashmir",7765:"WGS 1984 Jharkhand",7780:"WGS 1984 Karnataka",7781:"WGS 1984 Kerala",7782:"WGS 1984 Lakshadweep",7766:"WGS 1984 Madhya Pradesh",7767:"WGS 1984 Maharashtra",7768:"WGS 1984 Manipur",7769:"WGS 1984 Meghalaya",7783:"WGS 1984 Mizoram",7770:"WGS 1984 Nagaland",7772:"WGS 1984 Orissa",7773:"WGS 1984 Punjab",7774:"WGS 1984 Rajasthan",7784:"WGS 1984 Sikkim",7785:"WGS 1984 Tamil Nadu",7786:"WGS 1984 Tripura",7775:"WGS 1984 Uttar Pradesh",7776:"WGS 1984 Uttaranchal",7787:"WGS 1984 West Bengal"},Indonesia:{5330:"Batavia (Jakarta) NEIEZ",3001:"Batavia NEIEZ",2308:"Batavia TM 109 SE",23830:"DGN 1995 Indonesia TM-3 Zone 46 2",23831:"DGN 1995 Indonesia TM-3 Zone 47 1",23832:"DGN 1995 Indonesia TM-3 Zone 47 2",23833:"DGN 1995 Indonesia TM-3 Zone 48 1",23834:"DGN 1995 Indonesia TM-3 Zone 48 2",23835:"DGN 1995 Indonesia TM-3 Zone 49 1",23836:"DGN 1995 Indonesia TM-3 Zone 49 2",23837:"DGN 1995 Indonesia TM-3 Zone 50 1",23838:"DGN 1995 Indonesia TM-3 Zone 50 2",23839:"DGN 1995 Indonesia TM-3 Zone 51 1",23840:"DGN 1995 Indonesia TM-3 Zone 51 2",23841:"DGN 1995 Indonesia TM-3 Zone 52 1",23842:"DGN 1995 Indonesia TM-3 Zone 52 2",23843:"DGN 1995 Indonesia TM-3 Zone 53 1",23844:"DGN 1995 Indonesia TM-3 Zone 53 2",23845:"DGN 1995 Indonesia TM-3 Zone 54 1",3e3:"Gunung Segara NEIEZ",5331:"Makassar (Jakarta) NEIEZ",3002:"Makassar NEIEZ",9476:"SRGI2013 UTM zone 46N",9477:"SRGI2013 UTM zone 47N",9487:"SRGI2013 UTM zone 47S",9478:"SRGI2013 UTM zone 48N",9488:"SRGI2013 UTM zone 48S",9479:"SRGI2013 UTM zone 49N",9489:"SRGI2013 UTM zone 49S",9480:"SRGI2013 UTM zone 50N",9490:"SRGI2013 UTM zone 50S",9481:"SRGI2013 UTM zone 51N",9491:"SRGI2013 UTM zone 51S",9482:"SRGI2013 UTM zone 52N",9492:"SRGI2013 UTM zone 52S",9493:"SRGI2013 UTM zone 53S",9494:"SRGI2013 UTM zone 54S",5329:"Segara (Jakarta) NEIEZ",2309:"WGS 1984 TM 116 SE",2310:"WGS 1984 TM 132 SE"},Italy:{9716:"IGM95 UTM Zone 34N",26591:"Monte Mario (Rome) Italy 1",26592:"Monte Mario (Rome) Italy 2",3003:"Monte Mario Italy 1",3004:"Monte Mario Italy 2",5659:"Monte Mario TM Emilia-Romagna",6875:"RDN2008 Italy zone",7794:"RDN2008 Italy zone (E-N)",7795:"RDN2008 Italy zone 12 (E-N)",6707:"RDN2008 TM32",6708:"RDN2008 TM33",6709:"RDN2008 TM34",7791:"RDN2008 UTM zone 32N",7792:"RDN2008 UTM zone 33N",7793:"RDN2008 UTM zone 34N",6876:"RDN2008 Zone 12",102093:"Roma 1940 Gauss Boaga Est",102094:"Roma 1940 Gauss Boaga Ovest"},Japan:{2443:"JGD 2000 Japan Zone  1",2444:"JGD 2000 Japan Zone  2",2445:"JGD 2000 Japan Zone  3",2446:"JGD 2000 Japan Zone  4",2447:"JGD 2000 Japan Zone  5",2448:"JGD 2000 Japan Zone  6",2449:"JGD 2000 Japan Zone  7",2450:"JGD 2000 Japan Zone  8",2451:"JGD 2000 Japan Zone  9",2452:"JGD 2000 Japan Zone 10",2453:"JGD 2000 Japan Zone 11",2454:"JGD 2000 Japan Zone 12",2455:"JGD 2000 Japan Zone 13",2456:"JGD 2000 Japan Zone 14",2457:"JGD 2000 Japan Zone 15",2458:"JGD 2000 Japan Zone 16",2459:"JGD 2000 Japan Zone 17",2460:"JGD 2000 Japan Zone 18",2461:"JGD 2000 Japan Zone 19",6669:"JGD 2011 Japan Zone  1",6670:"JGD 2011 Japan Zone  2",6671:"JGD 2011 Japan Zone  3",6672:"JGD 2011 Japan Zone  4",6673:"JGD 2011 Japan Zone  5",6674:"JGD 2011 Japan Zone  6",6675:"JGD 2011 Japan Zone  7",6676:"JGD 2011 Japan Zone  8",6677:"JGD 2011 Japan Zone  9",6678:"JGD 2011 Japan Zone 10",6679:"JGD 2011 Japan Zone 11",6680:"JGD 2011 Japan Zone 12",6681:"JGD 2011 Japan Zone 13",6682:"JGD 2011 Japan Zone 14",6683:"JGD 2011 Japan Zone 15",6684:"JGD 2011 Japan Zone 16",6685:"JGD 2011 Japan Zone 17",6686:"JGD 2011 Japan Zone 18",6687:"JGD 2011 Japan Zone 19",30161:"Japan Zone  1",30162:"Japan Zone  2",30163:"Japan Zone  3",30164:"Japan Zone  4",30165:"Japan Zone  5",30166:"Japan Zone  6",30167:"Japan Zone  7",30168:"Japan Zone  8",30169:"Japan Zone  9",30170:"Japan Zone 10",30171:"Japan Zone 11",30172:"Japan Zone 12",30173:"Japan Zone 13",30174:"Japan Zone 14",30175:"Japan Zone 15",30176:"Japan Zone 16",30177:"Japan Zone 17",30178:"Japan Zone 18",30179:"Japan Zone 19"},Libya:{2068:"ELD 1979 Libya  5",2069:"ELD 1979 Libya  6",2070:"ELD 1979 Libya  7",2071:"ELD 1979 Libya  8",2072:"ELD 1979 Libya  9",2073:"ELD 1979 Libya 10",2074:"ELD 1979 Libya 11",2075:"ELD 1979 Libya 12",2076:"ELD 1979 Libya 13",2087:"ELD 1979 TM 12 NE",3177:"LGD2006 Libya TM",3190:"LGD2006 Libya TM Zone  5",3191:"LGD2006 Libya TM Zone  6",3192:"LGD2006 Libya TM Zone  7",3193:"LGD2006 Libya TM Zone  8",3194:"LGD2006 Libya TM Zone  9",3195:"LGD2006 Libya TM Zone 10",3196:"LGD2006 Libya TM Zone 11",3197:"LGD2006 Libya TM Zone 12",3198:"LGD2006 Libya TM Zone 13"},"Malaysia and Singapore":{5247:"GDBD2009 GEORSO",3376:"GDM 2000 BRSO",3377:"GDM 2000 Johor",3383:"GDM 2000 Kedah and Perlis",3385:"GDM 2000 Kelantan",3375:"GDM 2000 MRSO",3378:"GDM 2000 Negeri Sembilan and Melaka",3379:"GDM 2000 Pahang",3384:"GDM 2000 Perak",3382:"GDM 2000 Pulau Pinang and Seberang Perai",3380:"GDM 2000 Selangor",3381:"GDM 2000 Terengganu",3167:"Kertau (RSO) RSO Malaya (Chains 1922 Truncated)",3168:"Kertau (RSO) RSO Malaya (Meters)",4390:"Kertau 1968 Johor Grid",4396:"Kertau 1968 Kedah and Perlis Grid",4398:"Kertau 1968 Kelantan Grid",4392:"Kertau 1968 Pahang Grid",4397:"Kertau 1968 Perak Revised Grid",4395:"Kertau 1968 Pinang Grid",4393:"Kertau 1968 Selangor Grid",4391:"Kertau 1968 Sembilan and Melaka Grid",4394:"Kertau 1968 Terengganu Grid",24571:"Kertau RSO Malaya (Benoit Chains 1895 B)",102062:"Kertau RSO Malaya (Meters)",24500:"Kertau Singapore Grid",3414:"SVY21 Singapore TM",29873:"Timbalai 1948 RSO Borneo (Meters)",29871:"Timbalai 1948 RSO Borneo (Sears Chains)",29872:"Timbalai 1948 RSO Borneo (Sears Feet)",29874:"Timbalai 1948 RSO Sarawak LSD (Meters)"},"New Zealand":{5518:"Chatham Island 1971 Map Grid",5519:"Chatham Islands 1979 Map Grid",27219:"NZGD 1949 Amuri Circuit",27206:"NZGD 1949 Bay of Plenty Circuit",27232:"NZGD 1949 Bluff Circuit",27217:"NZGD 1949 Buller Circuit",27214:"NZGD 1949 Collingwood Circuit",27225:"NZGD 1949 Gawler Circuit",27218:"NZGD 1949 Grey Circuit",27208:"NZGD 1949 Hawkes Bay Circuit",27221:"NZGD 1949 Hokitika Circuit",27223:"NZGD 1949 Jacksons Bay Circuit",27216:"NZGD 1949 Karamea Circuit",27227:"NZGD 1949 Lindis Peak Circuit",27220:"NZGD 1949 Marlborough Circuit",27205:"NZGD 1949 Mount Eden Circuit",27228:"NZGD 1949 Mount Nicholas Circuit",27224:"NZGD 1949 Mount Pleasant Circuit",27229:"NZGD 1949 Mount York Circuit",27215:"NZGD 1949 Nelson Circuit",27231:"NZGD 1949 North Taieri Circuit",27230:"NZGD 1949 Observation Point Circuit",27222:"NZGD 1949 Okarito Circuit",27207:"NZGD 1949 Poverty Bay Circuit",27209:"NZGD 1949 Taranaki Circuit",27226:"NZGD 1949 Timaru Circuit",27210:"NZGD 1949 Tuhirangi Circuit",27258:"NZGD 1949 UTM Zone 58S",27259:"NZGD 1949 UTM Zone 59S",27260:"NZGD 1949 UTM Zone 60S",27212:"NZGD 1949 Wairarapa Circuit",27211:"NZGD 1949 Wanganui Circuit",27213:"NZGD 1949 Wellington Circuit",2119:"NZGD 2000 Amuri Circuit",3790:"NZGD 2000 Antipodes Islands TM 2000",3788:"NZGD 2000 Auckland Islands TM 2000",2106:"NZGD 2000 Bay of Plenty Circuit",2132:"NZGD 2000 Bluff Circuit",2117:"NZGD 2000 Buller Circuit",3789:"NZGD 2000 Campbell Island TM 2000",3764:"NZGD 2000 Chatham Island Circuit",3793:"NZGD 2000 Chatham Islands TM 2000",2114:"NZGD 2000 Collingwood Circuit",2125:"NZGD 2000 Gawler Circuit",2118:"NZGD 2000 Grey Circuit",2108:"NZGD 2000 Hawkes Bay Circuit",2121:"NZGD 2000 Hokitika Circuit",2123:"NZGD 2000 Jacksons Bay Circuit",2116:"NZGD 2000 Karamea Circuit",2127:"NZGD 2000 Lindis Peak Circuit",2120:"NZGD 2000 Marlborough Circuit",2105:"NZGD 2000 Mount Eden Circuit",2128:"NZGD 2000 Mount Nicholas Circuit",2124:"NZGD 2000 Mount Pleasant Circuit",2129:"NZGD 2000 Mount York Circuit",3851:"NZGD 2000 NZ Continental Shelf 2000",2115:"NZGD 2000 Nelson Circuit",2193:"NZGD 2000 New Zealand Transverse Mercator",2131:"NZGD 2000 North Taieri Circuit",2130:"NZGD 2000 Observation Point Circuit",2122:"NZGD 2000 Okarito Circuit",2107:"NZGD 2000 Poverty Bay Circuit",3791:"NZGD 2000 Raoul Island TM 2000",2109:"NZGD 2000 Taranaki Circuit",2126:"NZGD 2000 Timaru Circuit",2110:"NZGD 2000 Tuhirangi Circuit",5700:"NZGD 2000 UTM Zone 1S",2133:"NZGD 2000 UTM Zone 58S",2134:"NZGD 2000 UTM Zone 59S",2135:"NZGD 2000 UTM Zone 60S",2112:"NZGD 2000 Wairarapa Circuit",2111:"NZGD 2000 Wanganui Circuit",2113:"NZGD 2000 Wellington Circuit",27200:"New Zealand Map Grid",27291:"New Zealand North Island",27292:"New Zealand South Island",3994:"WGS 1984 Mercator 41",9191:"WGS 1984 NIWA Albers"},Norway:{5110:"ETRS 1989 NTM Zone 10",5111:"ETRS 1989 NTM Zone 11",5112:"ETRS 1989 NTM Zone 12",5113:"ETRS 1989 NTM Zone 13",5114:"ETRS 1989 NTM Zone 14",5115:"ETRS 1989 NTM Zone 15",5116:"ETRS 1989 NTM Zone 16",5117:"ETRS 1989 NTM Zone 17",5118:"ETRS 1989 NTM Zone 18",5119:"ETRS 1989 NTM Zone 19",5120:"ETRS 1989 NTM Zone 20",5121:"ETRS 1989 NTM Zone 21",5122:"ETRS 1989 NTM Zone 22",5123:"ETRS 1989 NTM Zone 23",5124:"ETRS 1989 NTM Zone 24",5125:"ETRS 1989 NTM Zone 25",5126:"ETRS 1989 NTM Zone 26",5127:"ETRS 1989 NTM Zone 27",5128:"ETRS 1989 NTM Zone 28",5129:"ETRS 1989 NTM Zone 29",5130:"ETRS 1989 NTM Zone 30",5105:"ETRS 1989 NTM Zone 5",5106:"ETRS 1989 NTM Zone 6",5107:"ETRS 1989 NTM Zone 7",5108:"ETRS 1989 NTM Zone 8",5109:"ETRS 1989 NTM Zone 9",102450:"NGO 1948 (Oslo) Baerum Kommune",102451:"NGO 1948 (Oslo) Bergenhalvoen",102452:"NGO 1948 (Oslo) Oslo Kommune",27391:"NGO 1948 Oslo Norway Zone 1",27392:"NGO 1948 Oslo Norway Zone 2",27393:"NGO 1948 Oslo Norway Zone 3",27394:"NGO 1948 Oslo Norway Zone 4",27395:"NGO 1948 Oslo Norway Zone 5",27396:"NGO 1948 Oslo Norway Zone 6",27397:"NGO 1948 Oslo Norway Zone 7",27398:"NGO 1948 Oslo Norway Zone 8","Greenwich-based":{102136:"NGO 1948 Baerum Kommune",102137:"NGO 1948 Bergenhalvoen",102101:"NGO 1948 Norway Zone 1",102102:"NGO 1948 Norway Zone 2",102103:"NGO 1948 Norway Zone 3",102104:"NGO 1948 Norway Zone 4",102105:"NGO 1948 Norway Zone 5",102106:"NGO 1948 Norway Zone 6",102107:"NGO 1948 Norway Zone 7",102108:"NGO 1948 Norway Zone 8",102138:"NGO 1948 Oslo Kommune"}},Oceans:{"Atlantic Ocean":{7877:"Astro DOS 71_4 SHLG71",7878:"Astro DOS 71_4 UTM zone 30S",3770:"Bermuda 2000 National Grid",2003:"Grenada 1953 British West Indies Grid",7887:"SHMG2015",7882:"St. Helena Tritan SHLG(Tritan)",7883:"St. Helena Tritan UTM zone 30S",4826:"WGS 1984 Cape Verde Grid",3762:"WGS 1984 South Georgia Lambert",6703:"WGS 1984 TM 60 SW"},Caribbean:{2e3:"Anguilla 1957 British West Indies Grid",2001:"Antigua 1943 British West Indies Grid",21292:"Barbados 1938 Barbados Grid",21291:"Barbados 1938 British West Indies Grid",6391:"Cayman Islands National Grid 2011",2002:"Dominica 1945 British West Indies Grid",6128:"Grand Cayman National Grid 1959",3448:"JAD 2001 Jamaica Grid",24100:"Jamaica 1875 Old Grid",24200:"Jamaica Grid",2004:"Montserrat 1958 British West Indies Grid",2066:"Mount Dillon Tobago Grid",2085:"NAD 1927 Cuba Norte",2086:"NAD 1927 Cuba Sur",6129:"Sister Islands National Grid 1961",2005:"St. Kitts 1955 British West Indies Grid",2006:"St. Lucia 1955 British West Indies Grid",2007:"St. Vincent 1945 British West Indies Grid",2314:"Trinidad 1903 Trinidad Grid (Clarke Feet)",30200:"Trinidad 1903 Trinidad Grid (Links Clarke)"},"Indian Ocean":{6721:"GDA 1994 CIG94",6723:"GDA 1994 CKIG94",103872:"GDM2008 LGM2012",3337:"Le Pouce 1934 Mauritius Grid",3727:"Reunion 1947 TM Reunion",6720:"WGS 1984 CIG92",6722:"WGS 1984 CKIG92"},"Pacific Ocean":{3102:"American Samoa 1962 Samoa Lambert",102096:"Bab South Palau Azimuthal Equidistant",3460:"Fiji 1986 Fiji Map Grid",3295:"Guam 1963 Yap Islands",3165:"NEA74 Noumea Lambert",3166:"NEA74 Noumea Lambert 2",3783:"Pitcairn 2006 Pitcairn TM 2006",102237:"Pohnpei Az Eq 1971",2984:"RGNC 1991 Lambert New Caledonia",3163:"RGNC 1991-93 Lambert New Caledonia",102238:"Saipan Az Eq 1969",5887:"TGD2005 Tonga Map Grid"}},"South Africa":{102470:"Cape Lo15",102471:"Cape Lo17",102472:"Cape Lo19",102473:"Cape Lo21",102474:"Cape Lo23",102475:"Cape Lo25",102476:"Cape Lo27",102477:"Cape Lo29",102478:"Cape Lo31",102479:"Cape Lo33",102480:"Hartebeesthoek94 Lo15",102481:"Hartebeesthoek94 Lo17",102482:"Hartebeesthoek94 Lo19",102562:"Hartebeesthoek94 Lo19 (E-N)",102483:"Hartebeesthoek94 Lo21",102563:"Hartebeesthoek94 Lo21 (E-N)",102484:"Hartebeesthoek94 Lo23",102564:"Hartebeesthoek94 Lo23 (E-N)",102485:"Hartebeesthoek94 Lo25",102565:"Hartebeesthoek94 Lo25 (E-N)",102486:"Hartebeesthoek94 Lo27",102566:"Hartebeesthoek94 Lo27 (E-N)",102487:"Hartebeesthoek94 Lo29",102567:"Hartebeesthoek94 Lo29 (E-N)",102488:"Hartebeesthoek94 Lo31",102568:"Hartebeesthoek94 Lo31 (E-N)",102489:"Hartebeesthoek94 Lo33",9221:"Hartebeesthoek94 ZAF BSU Albers 25E",9222:"Hartebeesthoek94 ZAF BSU Albers 44E"},"South America":{2102:"Lake Maracaibo Grid",2101:"Lake Maracaibo Grid M1",2103:"Lake Maracaibo Grid M3",2104:"Lake Maracaibo La Rosa Grid",24892:"Peru Central Zone",24893:"Peru East Zone",24891:"Peru West Zone",2317:"Provisional South American Datum 1956 ICN Regional",5530:"SAD 1969 (96) Brazil Polyconic",29101:"SAD 1969 Brazil Polyconic",5641:"SIRGAS 2000 Brazil Mercator",5880:"SIRGAS 2000 Brazil Polyconic",2314:"Trinidad 1903 Trinidad Grid (Clarke Feet)",30200:"Trinidad 1903 Trinidad Grid (Links Clarke)",6703:"WGS 1984 TM 60 SW",31170:"Zanderij Suriname Old TM",31171:"Zanderij Suriname TM",31154:"Zanderij TM 54 NW",Colombia:{102232:"Bogota Ciudad Bogota",21897:"Colombia Bogota Zone",21898:"Colombia E Central Zone",21899:"Colombia East Zone",102231:"Colombia West West Zone",21896:"Colombia West Zone",6244:"MAGNA Arauca 2007",6245:"MAGNA Armenia Quindio 2006",6246:"MAGNA Barranquilla Atlantico 1997",6247:"MAGNA Bogota DC 2005",6248:"MAGNA Bucaramanga Santander 2008",6249:"MAGNA Cali Valle del Cauca 2009",6250:"MAGNA Cartagena Bolivar 2005",102233:"MAGNA Ciudad Bogota",3116:"MAGNA Colombia Bogota",3117:"MAGNA Colombia Este",3118:"MAGNA Colombia Este Este",3115:"MAGNA Colombia Oeste",3114:"MAGNA Colombia Oeste Oeste",6251:"MAGNA Cucuta Norte de Santander 2011",6252:"MAGNA Florencia Caqueta 2007",6253:"MAGNA Ibague Tolima 2007",6254:"MAGNA Inirida Guainia 2008",6255:"MAGNA Leticia Amazonas 1994",6256:"MAGNA Manizales Caldas 2011",6257:"MAGNA Medellin Antioquia 2010",6258:"MAGNA Mitu Vaupes 2011",6259:"MAGNA Mocoa Putumayo 2011",6260:"MAGNA Monteria Cordoba 2006",6261:"MAGNA Neiva Huila 2006",6262:"MAGNA Pasto Narino 2008",6263:"MAGNA Pereira Risaralda 2007",6264:"MAGNA Popayan Cauca 2006",6265:"MAGNA Puerto Carreno Vichada 2011",6266:"MAGNA Quibdo Choco 2011",6267:"MAGNA Riohacha La Guajira 2006",6268:"MAGNA San Andres 2007",6269:"MAGNA San Jose del Guaviare 2011",6270:"MAGNA Santa Marta Magdalena 2007",6271:"MAGNA Sucre 2006",6272:"MAGNA Tunja Boyaca 1997",6273:"MAGNA Valledupar Cesar 2011",6274:"MAGNA Villavicencio Meta 2011",6275:"MAGNA Yopal Casanare 2006",103599:"MAGNA-SIRGAS CMT12",9377:"MAGNA-SIRGAS Origen-Nacional"}},"South Korea":{5181:"Korea 2000 Korea Central Belt",5186:"Korea 2000 Korea Central Belt 2010",5182:"Korea 2000 Korea Central Belt Jeju",5183:"Korea 2000 Korea East Belt",5187:"Korea 2000 Korea East Belt 2010",5184:"Korea 2000 Korea East Sea Belt",5188:"Korea 2000 Korea East Sea Belt 2010",5179:"Korea 2000 Korea Unified Coordinate System",5180:"Korea 2000 Korea West Belt",5185:"Korea 2000 Korea West Belt 2010",2097:"Korean 1985 Korea Central Belt",5168:"Korean 1985 Korea Central Belt Jeju",2096:"Korean 1985 Korea East Belt",5167:"Korean 1985 Korea East Sea Belt",5178:"Korean 1985 Korea Unified Coordinate System",2098:"Korean 1985 Korea West Belt",5174:"Korean 1985 Modified Korea Central Belt",5175:"Korean 1985 Modified Korea Central Belt Jeju",5176:"Korean 1985 Modified Korea East Belt",5177:"Korean 1985 Modified Korea East Sea Belt",5173:"Korean 1985 Modified Korea West Belt"},Sweden:{3028:"RT38 0 gon",3029:"RT38 25 gon O",3027:"RT38 25 gon V",3030:"RT38 5 gon O",3026:"RT38 5 gon V",3025:"RT38 75 gon V",3022:"RT90 0 gon",3023:"RT90 25 gon O",3021:"RT90 25 gon V",3024:"RT90 5 gon O",3020:"RT90 5 gon V",3019:"RT90 75 gon V",3848:"SWEREF99 0 gon emulation",3007:"SWEREF99 12 00",3008:"SWEREF99 13 30",3012:"SWEREF99 14 15",3009:"SWEREF99 15 00",3013:"SWEREF99 15 45",3010:"SWEREF99 16 30",3014:"SWEREF99 17 15",3011:"SWEREF99 18 00",3015:"SWEREF99 18 45",3849:"SWEREF99 2.5 gon O emulation",3847:"SWEREF99 2.5 gon V emulation",3016:"SWEREF99 20 15",3017:"SWEREF99 21 45",3018:"SWEREF99 23 15",3850:"SWEREF99 5 gon O emulation",3846:"SWEREF99 5 gon V emulation",3845:"SWEREF99 7.5 gon V emulation",3854:"SWEREF99 County ST74",3006:"SWEREF99 TM"},"Switzerland and Liechtenstein":{21780:"Bern 1898 Bern LV03C",102956:"Bern 1898 Bern LV03C (shifted)",21781:"CH1903 LV03",102957:"CH1903 LV03 (shifted)",21782:"CH1903 LV03C-G",102958:"CH1903 LV03C-G (shifted)",2056:"CH1903+ LV95",102959:"CH1903+ LV95 (shifted)"},Turkey:{2319:"ED 1950 TM27",2320:"ED 1950 TM30",2321:"ED 1950 TM33",2322:"ED 1950 TM36",2323:"ED 1950 TM39",2324:"ED 1950 TM42",2325:"ED 1950 TM45",102551:"ED 1950 Turkey 10",102552:"ED 1950 Turkey 11",102553:"ED 1950 Turkey 12",102554:"ED 1950 Turkey 13",102555:"ED 1950 Turkey 14",102556:"ED 1950 Turkey 15",102550:"ED 1950 Turkey 9",5270:"TUREF 3 Degree GK Zone 10",5271:"TUREF 3 Degree GK Zone 11",5272:"TUREF 3 Degree GK Zone 12",5273:"TUREF 3 Degree GK Zone 13",5274:"TUREF 3 Degree GK Zone 14",5275:"TUREF 3 Degree GK Zone 15",5269:"TUREF 3 Degree GK Zone 9",5636:"TUREF LAEA Europe",5637:"TUREF LCC Europe",5253:"TUREF TM27",5254:"TUREF TM30",5255:"TUREF TM33",5256:"TUREF TM36",5257:"TUREF TM39",5258:"TUREF TM42",5259:"TUREF TM45"},Ukraine:{7825:"Pulkovo 1942 CS63 zone X1",7826:"Pulkovo 1942 CS63 zone X2",7827:"Pulkovo 1942 CS63 zone X3",7828:"Pulkovo 1942 CS63 zone X4",7829:"Pulkovo 1942 CS63 zone X5",7830:"Pulkovo 1942 CS63 zone X6",7831:"Pulkovo 1942 CS63 zone X7",5577:"Ukraine 2000 3 Degree GK CM 21E",5578:"Ukraine 2000 3 Degree GK CM 24E",5579:"Ukraine 2000 3 Degree GK CM 27E",5580:"Ukraine 2000 3 Degree GK CM 30E",5581:"Ukraine 2000 3 Degree GK CM 33E",5582:"Ukraine 2000 3 Degree GK CM 36E",5583:"Ukraine 2000 3 Degree GK CM 39E",5573:"Ukraine 2000 3-Degree GK Zone 10",5574:"Ukraine 2000 3-Degree GK Zone 11",5575:"Ukraine 2000 3-Degree GK Zone 12",5576:"Ukraine 2000 3-Degree GK Zone 13",5570:"Ukraine 2000 3-Degree GK Zone 7",5571:"Ukraine 2000 3-Degree GK Zone 8",5572:"Ukraine 2000 3-Degree GK Zone 9",5566:"Ukraine 2000 GK CM 21E",5567:"Ukraine 2000 GK CM 27E",5568:"Ukraine 2000 GK CM 33E",5569:"Ukraine 2000 GK CM 39E",5562:"Ukraine 2000 GK Zone 4",5563:"Ukraine 2000 GK Zone 5",5564:"Ukraine 2000 GK Zone 6",5565:"Ukraine 2000 GK Zone 7",6384:"Ukraine 2000 TM Zone 10",6385:"Ukraine 2000 TM Zone 11",6386:"Ukraine 2000 TM Zone 12",6387:"Ukraine 2000 TM Zone 13",6381:"Ukraine 2000 TM Zone 7",6382:"Ukraine 2000 TM Zone 8",6383:"Ukraine 2000 TM Zone 9"},Vietnam:{9205:"VN-2000 TM-3 103-00",9206:"VN-2000 TM-3 104-00",9207:"VN-2000 TM-3 104-30",9208:"VN-2000 TM-3 104-45",9209:"VN-2000 TM-3 105-30",9210:"VN-2000 TM-3 105-45",9211:"VN-2000 TM-3 106-00",9212:"VN-2000 TM-3 106-15",9213:"VN-2000 TM-3 106-30",9214:"VN-2000 TM-3 107-00",9215:"VN-2000 TM-3 107-15",9216:"VN-2000 TM-3 107-30",5899:"VN-2000 TM-3 107-45",9217:"VN-2000 TM-3 108-15",9218:"VN-2000 TM-3 108-30",5896:"VN-2000 TM-3 zone 481",5897:"VN-2000 TM-3 zone 482",5898:"VN-2000 TM-3 zone 491"}},Oceans:{Caribbean:{8035:"WGS 1984 TM Zone 20N (US Feet)",8036:"WGS 1984 TM Zone 21N (US Feet)"}},Polar:{5890:"JAXA Snow Depth Polar Stereographic North",3410:"NSIDC EASE Grid Global",3408:"NSIDC EASE Grid North",3409:"NSIDC EASE Grid South",3411:"NSIDC Sea Ice Polar Stereographic North",3412:"NSIDC Sea Ice Polar Stereographic South",102016:"North Pole Azimuthal Equidistant",102034:"North Pole Gnomonic",102017:"North Pole Lambert Azimuthal Equal Area",102035:"North Pole Orthographic",102018:"North Pole Stereographic",2986:"Perroud 1950 Terre Adelie Polar Stereographic",2985:"Petrels 1972 Terre Adelie Polar Stereographic",7082:"RGTAAF07 Terre Adelie Polar Stereographic",8455:"RGTAAF07 UTM Zone 53S",8456:"RGTAAF07 UTM Zone 54S",5480:"RSRGD2000 Borchgrevink Coast LC2000",3852:"RSRGD2000 Darwin Glacier LC2000",5479:"RSRGD2000 McMurdo Sound LC2000",5481:"RSRGD2000 Pennell Coast LC2000",5482:"RSRGD2000 Ross Ice Shelf PS2000",102019:"South Pole Azimuthal Equidistant",102036:"South Pole Gnomonic",102020:"South Pole Lambert Azimuthal Equal Area",102037:"South Pole Orthographic",102021:"South Pole Stereographic",32661:"UPS North",32761:"UPS South",3031:"WGS 1984 Antarctic Polar Stereographic",3995:"WGS 1984 Arctic Polar Stereographic",3033:"WGS 1984 Australian Antarctic Lambert",3032:"WGS 1984 Australian Antarctic Polar Stereographic",3973:"WGS 1984 EASE Grid North",3974:"WGS 1984 EASE Grid South",3996:"WGS 1984 IBCAO Polar Stereographic",9354:"WGS 1984 IBCSO Polar Stereographic",6931:"WGS 1984 NSIDC EASE-Grid 2.0 North",6932:"WGS 1984 NSIDC EASE-Grid 2.0 South",3413:"WGS 1984 NSIDC Sea Ice Polar Stereographic North",3976:"WGS 1984 NSIDC Sea Ice Polar Stereographic South",3572:"WGS 1984 North Pole LAEA Alaska",3574:"WGS 1984 North Pole LAEA Atlantic",3571:"WGS 1984 North Pole LAEA Bering Sea",3573:"WGS 1984 North Pole LAEA Canada",3575:"WGS 1984 North Pole LAEA Europe",3576:"WGS 1984 North Pole LAEA Russia",3294:"WGS 1984 USGS Transantarctic Mountains","EPSG Arctic":{6069:"ETRS 1989 EPSG Arctic zone 2-22",6070:"ETRS 1989 EPSG Arctic zone 3-11",6071:"ETRS 1989 EPSG Arctic zone 4-26",6072:"ETRS 1989 EPSG Arctic zone 4-28",6073:"ETRS 1989 EPSG Arctic zone 5-11",6074:"ETRS 1989 EPSG Arctic zone 5-13",6125:"ETRS 1989 EPSG Arctic zone 5-47",6050:"GR96 EPSG Arctic zone 1-25",6051:"GR96 EPSG Arctic zone 2-18",6052:"GR96 EPSG Arctic zone 2-20",6053:"GR96 EPSG Arctic zone 3-29",6054:"GR96 EPSG Arctic zone 3-31",6055:"GR96 EPSG Arctic zone 3-33",6056:"GR96 EPSG Arctic zone 4-20",6057:"GR96 EPSG Arctic zone 4-22",6058:"GR96 EPSG Arctic zone 4-24",6059:"GR96 EPSG Arctic zone 5-41",6060:"GR96 EPSG Arctic zone 5-43",6061:"GR96 EPSG Arctic zone 5-45",6062:"GR96 EPSG Arctic zone 6-26",6063:"GR96 EPSG Arctic zone 6-28",6064:"GR96 EPSG Arctic zone 6-30",6065:"GR96 EPSG Arctic zone 7-11",6066:"GR96 EPSG Arctic zone 7-13",6067:"GR96 EPSG Arctic zone 8-20",6068:"GR96 EPSG Arctic zone 8-22",6351:"NAD 1983 2011 EPSG Arctic zone 5-29",6352:"NAD 1983 2011 EPSG Arctic zone 5-31",6353:"NAD 1983 2011 EPSG Arctic zone 6-14",6354:"NAD 1983 2011 EPSG Arctic zone 6-16",6098:"NAD 1983 CSRS EPSG Arctic zone 1-23",6099:"NAD 1983 CSRS EPSG Arctic zone 2-14",6100:"NAD 1983 CSRS EPSG Arctic zone 2-16",6101:"NAD 1983 CSRS EPSG Arctic zone 3-25",6102:"NAD 1983 CSRS EPSG Arctic zone 3-27",6103:"NAD 1983 CSRS EPSG Arctic zone 3-29",6104:"NAD 1983 CSRS EPSG Arctic zone 4-14",6105:"NAD 1983 CSRS EPSG Arctic zone 4-16",6106:"NAD 1983 CSRS EPSG Arctic zone 4-18",6107:"NAD 1983 CSRS EPSG Arctic zone 5-33",6108:"NAD 1983 CSRS EPSG Arctic zone 5-35",6109:"NAD 1983 CSRS EPSG Arctic zone 5-37",6110:"NAD 1983 CSRS EPSG Arctic zone 5-39",6111:"NAD 1983 CSRS EPSG Arctic zone 6-18",6112:"NAD 1983 CSRS EPSG Arctic zone 6-20",6113:"NAD 1983 CSRS EPSG Arctic zone 6-22",6114:"NAD 1983 CSRS EPSG Arctic zone 6-24",6094:"NAD 1983 NSRS2007 EPSG Arctic zone 5-29",6095:"NAD 1983 NSRS2007 EPSG Arctic zone 5-31",6096:"NAD 1983 NSRS2007 EPSG Arctic zone 6-14",6097:"NAD 1983 NSRS2007 EPSG Arctic zone 6-16v",5936:"WGS 1984 EPSG Alaska Polar Stereographic",5921:"WGS 1984 EPSG Arctic Regional zone A1",5922:"WGS 1984 EPSG Arctic Regional zone A2",5923:"WGS 1984 EPSG Arctic Regional zone A3",5924:"WGS 1984 EPSG Arctic Regional zone A4",5925:"WGS 1984 EPSG Arctic Regional zone A5",5926:"WGS 1984 EPSG Arctic Regional zone B1",5927:"WGS 1984 EPSG Arctic Regional zone B2",5928:"WGS 1984 EPSG Arctic Regional zone B3",5929:"WGS 1984 EPSG Arctic Regional zone B4",5930:"WGS 1984 EPSG Arctic Regional zone B5",5931:"WGS 1984 EPSG Arctic Regional zone C1",5932:"WGS 1984 EPSG Arctic Regional zone C2",5933:"WGS 1984 EPSG Arctic Regional zone C3",5934:"WGS 1984 EPSG Arctic Regional zone C4",5935:"WGS 1984 EPSG Arctic Regional zone C5",6118:"WGS 1984 EPSG Arctic zone 1-21",6115:"WGS 1984 EPSG Arctic zone 1-27",6116:"WGS 1984 EPSG Arctic zone 1-29",6117:"WGS 1984 EPSG Arctic zone 1-31",6120:"WGS 1984 EPSG Arctic zone 2-10",6121:"WGS 1984 EPSG Arctic zone 2-12",6075:"WGS 1984 EPSG Arctic zone 2-24",6076:"WGS 1984 EPSG Arctic zone 2-26",6119:"WGS 1984 EPSG Arctic zone 2-28",6077:"WGS 1984 EPSG Arctic zone 3-13",6078:"WGS 1984 EPSG Arctic zone 3-15",6079:"WGS 1984 EPSG Arctic zone 3-17",6080:"WGS 1984 EPSG Arctic zone 3-19",6122:"WGS 1984 EPSG Arctic zone 3-21",6123:"WGS 1984 EPSG Arctic zone 3-23",6124:"WGS 1984 EPSG Arctic zone 4-12",6081:"WGS 1984 EPSG Arctic zone 4-30",6082:"WGS 1984 EPSG Arctic zone 4-32",6083:"WGS 1984 EPSG Arctic zone 4-34",6084:"WGS 1984 EPSG Arctic zone 4-36",6085:"WGS 1984 EPSG Arctic zone 4-38",6086:"WGS 1984 EPSG Arctic zone 4-40",6087:"WGS 1984 EPSG Arctic zone 5-15",6088:"WGS 1984 EPSG Arctic zone 5-17",6089:"WGS 1984 EPSG Arctic zone 5-19",6090:"WGS 1984 EPSG Arctic zone 5-21",6091:"WGS 1984 EPSG Arctic zone 5-23",6092:"WGS 1984 EPSG Arctic zone 5-25",6093:"WGS 1984 EPSG Arctic zone 5-27",5937:"WGS 1984 EPSG Canada Polar Stereographic",5938:"WGS 1984 EPSG Greenland Polar Stereographic",5939:"WGS 1984 EPSG Norway Polar Stereographic",5940:"WGS 1984 EPSG Russia Polar Stereographic"}},"State Plane":{"NAD 1927 (US Feet)":{26729:"NAD 1927 StatePlane Alabama East FIPS 0101",26730:"NAD 1927 StatePlane Alabama West FIPS 0102",26731:"NAD 1927 StatePlane Alaska  1 FIPS 5001",26732:"NAD 1927 StatePlane Alaska  2 FIPS 5002",26733:"NAD 1927 StatePlane Alaska  3 FIPS 5003",26734:"NAD 1927 StatePlane Alaska  4 FIPS 5004",26735:"NAD 1927 StatePlane Alaska  5 FIPS 5005",26736:"NAD 1927 StatePlane Alaska  6 FIPS 5006",26737:"NAD 1927 StatePlane Alaska  7 FIPS 5007",26738:"NAD 1927 StatePlane Alaska  8 FIPS 5008",26739:"NAD 1927 StatePlane Alaska  9 FIPS 5009",26740:"NAD 1927 StatePlane Alaska 10 FIPS 5010",26749:"NAD 1927 StatePlane Arizona Central FIPS 0202",26748:"NAD 1927 StatePlane Arizona East FIPS 0201",26750:"NAD 1927 StatePlane Arizona West FIPS 0203",26751:"NAD 1927 StatePlane Arkansas North FIPS 0301",26752:"NAD 1927 StatePlane Arkansas South FIPS 0302",26741:"NAD 1927 StatePlane California I FIPS 0401",26742:"NAD 1927 StatePlane California II FIPS 0402",26743:"NAD 1927 StatePlane California III FIPS 0403",26744:"NAD 1927 StatePlane California IV FIPS 0404",26745:"NAD 1927 StatePlane California V FIPS 0405",102699:"NAD 1927 StatePlane California V Ventura",26746:"NAD 1927 StatePlane California VI FIPS 0406",26799:"NAD 1927 StatePlane California VII FIPS 0407",26754:"NAD 1927 StatePlane Colorado Central FIPS 0502",26753:"NAD 1927 StatePlane Colorado North FIPS 0501",26755:"NAD 1927 StatePlane Colorado South FIPS 0503",26756:"NAD 1927 StatePlane Connecticut FIPS 0600",26757:"NAD 1927 StatePlane Delaware FIPS 0700",26758:"NAD 1927 StatePlane Florida East FIPS 0901",26760:"NAD 1927 StatePlane Florida North FIPS 0903",26759:"NAD 1927 StatePlane Florida West FIPS 0902",26766:"NAD 1927 StatePlane Georgia East FIPS 1001",26767:"NAD 1927 StatePlane Georgia West FIPS 1002",65061:"NAD 1927 StatePlane Guam FIPS 5400",26769:"NAD 1927 StatePlane Idaho Central FIPS 1102",26768:"NAD 1927 StatePlane Idaho East FIPS 1101",26770:"NAD 1927 StatePlane Idaho West FIPS 1103",26771:"NAD 1927 StatePlane Illinois East FIPS 1201",26772:"NAD 1927 StatePlane Illinois West FIPS 1202",26773:"NAD 1927 StatePlane Indiana East FIPS 1301",26774:"NAD 1927 StatePlane Indiana West FIPS 1302",26775:"NAD 1927 StatePlane Iowa North FIPS 1401",26776:"NAD 1927 StatePlane Iowa South FIPS 1402",26777:"NAD 1927 StatePlane Kansas North FIPS 1501",26778:"NAD 1927 StatePlane Kansas South FIPS 1502",26779:"NAD 1927 StatePlane Kentucky North FIPS 1601",26780:"NAD 1927 StatePlane Kentucky South FIPS 1602",26781:"NAD 1927 StatePlane Louisiana North FIPS 1701",32099:"NAD 1927 StatePlane Louisiana Offshore FIPS 1703",26782:"NAD 1927 StatePlane Louisiana South FIPS 1702",26783:"NAD 1927 StatePlane Maine East FIPS 1801",26784:"NAD 1927 StatePlane Maine West FIPS 1802",26785:"NAD 1927 StatePlane Maryland FIPS 1900",26786:"NAD 1927 StatePlane Massachusetts FIPS 2001",26787:"NAD 1927 StatePlane Massachusetts Isl FIPS 2002",26789:"NAD 1927 StatePlane Michigan Central FIPS 2112",5624:"NAD 1927 StatePlane Michigan Central Old",5623:"NAD 1927 StatePlane Michigan East Old",26788:"NAD 1927 StatePlane Michigan North FIPS 2111",26790:"NAD 1927 StatePlane Michigan South FIPS 2113",5625:"NAD 1927 StatePlane Michigan West Old",26792:"NAD 1927 StatePlane Minnesota Central FIPS 2202",26791:"NAD 1927 StatePlane Minnesota North FIPS 2201",26793:"NAD 1927 StatePlane Minnesota South FIPS 2203",26794:"NAD 1927 StatePlane Mississippi East FIPS 2301",26795:"NAD 1927 StatePlane Mississippi West FIPS 2302",26797:"NAD 1927 StatePlane Missouri Central FIPS 2402",26796:"NAD 1927 StatePlane Missouri East FIPS 2401",26798:"NAD 1927 StatePlane Missouri West FIPS 2403",32002:"NAD 1927 StatePlane Montana Central FIPS 2502",32001:"NAD 1927 StatePlane Montana North FIPS 2501",32003:"NAD 1927 StatePlane Montana South FIPS 2503",32005:"NAD 1927 StatePlane Nebraska North FIPS 2601",32006:"NAD 1927 StatePlane Nebraska South FIPS 2602",32008:"NAD 1927 StatePlane Nevada Central FIPS 2702",32007:"NAD 1927 StatePlane Nevada East FIPS 2701",32009:"NAD 1927 StatePlane Nevada West FIPS 2703",32010:"NAD 1927 StatePlane New Hampshire FIPS 2800",32011:"NAD 1927 StatePlane New Jersey FIPS 2900",32013:"NAD 1927 StatePlane New Mexico Central FIPS 3002",32012:"NAD 1927 StatePlane New Mexico East FIPS 3001",32014:"NAD 1927 StatePlane New Mexico West FIPS 3003",32016:"NAD 1927 StatePlane New York Central FIPS 3102",32015:"NAD 1927 StatePlane New York East FIPS 3101",4456:"NAD 1927 StatePlane New York Long Isl FIPS 3104",32017:"NAD 1927 StatePlane New York West FIPS 3103",32019:"NAD 1927 StatePlane North Carolina FIPS 3200",32020:"NAD 1927 StatePlane North Dakota N FIPS 3301",32021:"NAD 1927 StatePlane North Dakota S FIPS 3302",32022:"NAD 1927 StatePlane Ohio North FIPS 3401",32023:"NAD 1927 StatePlane Ohio South FIPS 3402",32024:"NAD 1927 StatePlane Oklahoma North FIPS 3501",32025:"NAD 1927 StatePlane Oklahoma South FIPS 3502",32026:"NAD 1927 StatePlane Oregon North FIPS 3601",32027:"NAD 1927 StatePlane Oregon South FIPS 3602",32028:"NAD 1927 StatePlane Pennsylvania North FIPS 3701",4455:"NAD 1927 StatePlane Pennsylvania South FIPS 3702",32059:"NAD 1927 StatePlane Puerto Rico FIPS 5201",32030:"NAD 1927 StatePlane Rhode Island FIPS 3800",32031:"NAD 1927 StatePlane South Carolina N FIPS 3901",32033:"NAD 1927 StatePlane South Carolina S FIPS 3902",32034:"NAD 1927 StatePlane South Dakota N FIPS 4001",32035:"NAD 1927 StatePlane South Dakota S FIPS 4002",2204:"NAD 1927 StatePlane Tennessee FIPS 4100",32039:"NAD 1927 StatePlane Texas Central FIPS 4203",32038:"NAD 1927 StatePlane Texas N Central FIPS 4202",32037:"NAD 1927 StatePlane Texas North FIPS 4201",32040:"NAD 1927 StatePlane Texas S Central FIPS 4204",32041:"NAD 1927 StatePlane Texas South FIPS 4205",32043:"NAD 1927 StatePlane Utah Central FIPS 4302",32042:"NAD 1927 StatePlane Utah North FIPS 4301",32044:"NAD 1927 StatePlane Utah South FIPS 4303",32045:"NAD 1927 StatePlane Vermont FIPS 3400",32060:"NAD 1927 StatePlane Virgin Isl St.Croix FIPS 5202",32046:"NAD 1927 StatePlane Virginia North FIPS 4501",32047:"NAD 1927 StatePlane Virginia South FIPS 4502",32048:"NAD 1927 StatePlane Washington North FIPS 4601",32049:"NAD 1927 StatePlane Washington South FIPS 4602",32050:"NAD 1927 StatePlane West Virginia N FIPS 4701",32051:"NAD 1927 StatePlane West Virginia S FIPS 4702",32053:"NAD 1927 StatePlane Wisconsin Central FIPS 4802",32052:"NAD 1927 StatePlane Wisconsin North FIPS 4801",32054:"NAD 1927 StatePlane Wisconsin South FIPS 4803",32056:"NAD 1927 StatePlane Wyoming E Central FIPS 4902",32055:"NAD 1927 StatePlane Wyoming East FIPS 4901",32057:"NAD 1927 StatePlane Wyoming W Central FIPS 4903",32058:"NAD 1927 StatePlane Wyoming West FIPS 4904"},"NAD 1983 (2011) (Intl Feet)":{6405:"NAD 1983 (2011) StatePlane Arizona Central FIPS 0202 (Intl Feet)",6407:"NAD 1983 (2011) StatePlane Arizona East FIPS 0201 (Intl Feet)",6409:"NAD 1983 (2011) StatePlane Arizona West FIPS 0203 (Intl Feet)",6494:"NAD 1983 (2011) StatePlane Michigan Central FIPS 2112 (Intl Feet)",6496:"NAD 1983 (2011) StatePlane Michigan North FIPS 2111 (Intl Feet)",6499:"NAD 1983 (2011) StatePlane Michigan South FIPS 2113 (Intl Feet)",6515:"NAD 1983 (2011) StatePlane Montana FIPS 2500 (Intl Feet)",6545:"NAD 1983 (2011) StatePlane North Dakota N FIPS 3301 (Intl Feet)",6547:"NAD 1983 (2011) StatePlane North Dakota S FIPS 3302 (Intl Feet)",6559:"NAD 1983 (2011) StatePlane Oregon North FIPS 3601 (Intl Feet)",6561:"NAD 1983 (2011) StatePlane Oregon South FIPS 3602 (Intl Feet)",6570:"NAD 1983 (2011) StatePlane South Carolina FIPS 3900 (Intl Feet)",103167:"NAD 1983 (2011) StatePlane Utah Central FIPS 4302 (Intl Feet)",103166:"NAD 1983 (2011) StatePlane Utah North FIPS 4301 (Intl Feet)",103168:"NAD 1983 (2011) StatePlane Utah South FIPS 4303 (Intl Feet)"},"NAD 1983 (2011) (Meters)":{6480:"NAD 1983 (2011) Maine 2000 Central Zone (Meters)",6481:"NAD 1983 (2011) Maine 2000 East Zone (Meters)",6482:"NAD 1983 (2011) Maine 2000 West Zone (Meters)",6355:"NAD 1983 (2011) StatePlane Alabama East FIPS 0101 (Meters)",6356:"NAD 1983 (2011) StatePlane Alabama West FIPS 0102 (Meters)",6394:"NAD 1983 (2011) StatePlane Alaska  1 FIPS 5001 (Meters)",6395:"NAD 1983 (2011) StatePlane Alaska  2 FIPS 5002 (Meters)",6396:"NAD 1983 (2011) StatePlane Alaska  3 FIPS 5003 (Meters)",6397:"NAD 1983 (2011) StatePlane Alaska  4 FIPS 5004 (Meters)",6398:"NAD 1983 (2011) StatePlane Alaska  5 FIPS 5005 (Meters)",6399:"NAD 1983 (2011) StatePlane Alaska  6 FIPS 5006 (Meters)",6400:"NAD 1983 (2011) StatePlane Alaska  7 FIPS 5007 (Meters)",6401:"NAD 1983 (2011) StatePlane Alaska  8 FIPS 5008 (Meters)",6402:"NAD 1983 (2011) StatePlane Alaska  9 FIPS 5009 (Meters)",6403:"NAD 1983 (2011) StatePlane Alaska 10 FIPS 5010 (Meters)",6404:"NAD 1983 (2011) StatePlane Arizona Central FIPS 0202 (Meters)",6406:"NAD 1983 (2011) StatePlane Arizona East FIPS 0201 (Meters)",6408:"NAD 1983 (2011) StatePlane Arizona West FIPS 0203 (Meters)",6410:"NAD 1983 (2011) StatePlane Arkansas North FIPS 0301 (Meters)",6412:"NAD 1983 (2011) StatePlane Arkansas South FIPS 0302 (Meters)",6415:"NAD 1983 (2011) StatePlane California I FIPS 0401 (Meters)",6417:"NAD 1983 (2011) StatePlane California II FIPS 0402 (Meters)",6419:"NAD 1983 (2011) StatePlane California III FIPS 0403 (Meters)",6421:"NAD 1983 (2011) StatePlane California IV FIPS 0404 (Meters)",6423:"NAD 1983 (2011) StatePlane California V FIPS 0405 (Meters)",6425:"NAD 1983 (2011) StatePlane California VI FIPS 0406 (Meters)",6427:"NAD 1983 (2011) StatePlane Colorado Central FIPS 0502 (Meter)",6429:"NAD 1983 (2011) StatePlane Colorado North FIPS 0501 (Meters)",6431:"NAD 1983 (2011) StatePlane Colorado South FIPS 0503 (Meters)",6433:"NAD 1983 (2011) StatePlane Connecticut FIPS 0600 (Meters)",6435:"NAD 1983 (2011) StatePlane Delaware FIPS 0700 (Meters)",6437:"NAD 1983 (2011) StatePlane Florida East FIPS 0901 (Meters)",6440:"NAD 1983 (2011) StatePlane Florida North FIPS 0903 (Meters)",6442:"NAD 1983 (2011) StatePlane Florida West FIPS 0902 (Meters)",6444:"NAD 1983 (2011) StatePlane Georgia East FIPS 1001 (Meters)",6446:"NAD 1983 (2011) StatePlane Georgia West FIPS 1002 (Meters)",6448:"NAD 1983 (2011) StatePlane Idaho Central FIPS 1102 (Meters)",6450:"NAD 1983 (2011) StatePlane Idaho East FIPS 1101 (Meters)",6452:"NAD 1983 (2011) StatePlane Idaho West FIPS 1103 (Meters)",6454:"NAD 1983 (2011) StatePlane Illinois East FIPS 1201 (Meters)",6456:"NAD 1983 (2011) StatePlane Illinois West FIPS 1202 (Meters)",6458:"NAD 1983 (2011) StatePlane Indiana East FIPS 1301 (Meters)",6460:"NAD 1983 (2011) StatePlane Indiana West FIPS 1302 (Meters)",6462:"NAD 1983 (2011) StatePlane Iowa North FIPS 1401 (Meters)",6464:"NAD 1983 (2011) StatePlane Iowa South FIPS 1402 (Meters)",6466:"NAD 1983 (2011) StatePlane Kansas North FIPS 1501 (Meters)",6468:"NAD 1983 (2011) StatePlane Kansas South FIPS 1502 (Meters)",6472:"NAD 1983 (2011) StatePlane Kentucky FIPS 1600 (Meters)",6470:"NAD 1983 (2011) StatePlane Kentucky North FIPS 1601 (Meters)",6474:"NAD 1983 (2011) StatePlane Kentucky South FIPS 1602 (Meters)",6476:"NAD 1983 (2011) StatePlane Louisiana North FIPS 1701 (Meters)",6478:"NAD 1983 (2011) StatePlane Louisiana South FIPS 1702 (Meters)",6483:"NAD 1983 (2011) StatePlane Maine East FIPS 1801 (Meters)",6485:"NAD 1983 (2011) StatePlane Maine West FIPS 1802 (Meters)",6487:"NAD 1983 (2011) StatePlane Maryland FIPS 1900 (Meters)",6491:"NAD 1983 (2011) StatePlane Massachusetts FIPS 2001 (Meters)",6489:"NAD 1983 (2011) StatePlane Massachusetts Isl FIPS 2002 (Meters)",6493:"NAD 1983 (2011) StatePlane Michigan Central FIPS 2112 (Meters)",6495:"NAD 1983 (2011) StatePlane Michigan North FIPS 2111 (Meters)",6498:"NAD 1983 (2011) StatePlane Michigan South FIPS 2113 (Meters)",6500:"NAD 1983 (2011) StatePlane Minnesota Central FIPS 2202 (Meters)",6502:"NAD 1983 (2011) StatePlane Minnesota North FIPS 2201 (Meters)",6504:"NAD 1983 (2011) StatePlane Minnesota South FIPS 2203 (Meters)",6506:"NAD 1983 (2011) StatePlane Mississippi East FIPS 2301 (Meters)",6509:"NAD 1983 (2011) StatePlane Mississippi West FIPS 2302 (Meters)",6511:"NAD 1983 (2011) StatePlane Missouri Central FIPS 2402 (Meters)",6512:"NAD 1983 (2011) StatePlane Missouri East FIPS 2401 (Meters)",6513:"NAD 1983 (2011) StatePlane Missouri West FIPS 2403 (Meters)",6514:"NAD 1983 (2011) StatePlane Montana FIPS 2500 (Meters)",6516:"NAD 1983 (2011) StatePlane Nebraska FIPS 2600 (Meters)",6518:"NAD 1983 (2011) StatePlane Nevada Central FIPS 2702 (Meters)",6520:"NAD 1983 (2011) StatePlane Nevada East FIPS 2701 (Meters)",6522:"NAD 1983 (2011) StatePlane Nevada West FIPS 2703 (Meters)",6524:"NAD 1983 (2011) StatePlane New Hampshire FIPS 2800 (Meters)",6526:"NAD 1983 (2011) StatePlane New Jersey FIPS 2900 (Meters)",6528:"NAD 1983 (2011) StatePlane New Mexico Central FIPS 3002 (Meters)",6530:"NAD 1983 (2011) StatePlane New Mexico East FIPS 3001 (Meters)",6532:"NAD 1983 (2011) StatePlane New Mexico West FIPS 3003 (Meters)",6534:"NAD 1983 (2011) StatePlane New York Central FIPS 3102 (Meters)",6536:"NAD 1983 (2011) StatePlane New York East FIPS 3101 (Meters)",6538:"NAD 1983 (2011) StatePlane New York Long Isl FIPS 3104 (Meters)",6540:"NAD 1983 (2011) StatePlane New York West FIPS 3103 (Meters)",6542:"NAD 1983 (2011) StatePlane North Carolina FIPS 3200 (Meters)",6544:"NAD 1983 (2011) StatePlane North Dakota N FIPS 3301 (Meters)",6546:"NAD 1983 (2011) StatePlane North Dakota S FIPS 3302 (Meters)",6548:"NAD 1983 (2011) StatePlane Ohio North FIPS 3401 (Meters)",6550:"NAD 1983 (2011) StatePlane Ohio South FIPS 3402 (Meters)",6552:"NAD 1983 (2011) StatePlane Oklahoma North FIPS 3501 (Meters)",6554:"NAD 1983 (2011) StatePlane Oklahoma South FIPS 3502 (Meters)",6558:"NAD 1983 (2011) StatePlane Oregon North FIPS 3601 (Meters)",6560:"NAD 1983 (2011) StatePlane Oregon South FIPS 3602 (Meters)",6566:"NAD 1983 (2011) StatePlane PR & VI FIPS 5200 (Meters)",6562:"NAD 1983 (2011) StatePlane Pennsylvania North FIPS 3701 (Meters)",6564:"NAD 1983 (2011) StatePlane Pennsylvania South FIPS 3702 (Meters)",6567:"NAD 1983 (2011) StatePlane Rhode Island FIPS 3800 (Meters)",6569:"NAD 1983 (2011) StatePlane South Carolina FIPS 3900 (Meters)",6571:"NAD 1983 (2011) StatePlane South Dakota N FIPS 4001 (Meters)",6573:"NAD 1983 (2011) StatePlane South Dakota S FIPS 4002 (Meters)",6575:"NAD 1983 (2011) StatePlane Tennessee FIPS 4100 (Meters)",6577:"NAD 1983 (2011) StatePlane Texas Central FIPS 4203 (Meters)",6583:"NAD 1983 (2011) StatePlane Texas N Central FIPS 4202 (Meters)",6581:"NAD 1983 (2011) StatePlane Texas North FIPS 4201 (Meters)",6587:"NAD 1983 (2011) StatePlane Texas S Central FIPS 4204 (Meters)",6585:"NAD 1983 (2011) StatePlane Texas South FIPS 4205 (Meters)",6619:"NAD 1983 (2011) StatePlane Utah Central FIPS 4302 (Meters)",6620:"NAD 1983 (2011) StatePlane Utah North FIPS 4301 (Meters)",6621:"NAD 1983 (2011) StatePlane Utah South FIPS 4303 (Meters)",6589:"NAD 1983 (2011) StatePlane Vermont FIPS 4400 (Meters)",6592:"NAD 1983 (2011) StatePlane Virginia North FIPS 4501 (Meters)",6594:"NAD 1983 (2011) StatePlane Virginia South FIPS 4502 (Meters)",6596:"NAD 1983 (2011) StatePlane Washington North FIPS 4601 (Meters)",6598:"NAD 1983 (2011) StatePlane Washington South FIPS 4602 (Meters)",6600:"NAD 1983 (2011) StatePlane West Virginia N FIPS 4701 (Meters)",6602:"NAD 1983 (2011) StatePlane West Virginia S FIPS 4702 (Meters)",6879:"NAD 1983 (2011) StatePlane Wisconsin Central FIPS 4802 (Meters)",6606:"NAD 1983 (2011) StatePlane Wisconsin North FIPS 4801 (Meters)",6608:"NAD 1983 (2011) StatePlane Wisconsin South FIPS 4803 (Meters)",6613:"NAD 1983 (2011) StatePlane Wyoming E Central FIPS 4902 (Meters)",6611:"NAD 1983 (2011) StatePlane Wyoming East FIPS 4901 (Meters)",6617:"NAD 1983 (2011) StatePlane Wyoming W Central FIPS 4903 (Meters)",6615:"NAD 1983 (2011) StatePlane Wyoming West FIPS 4904 (Meters)"},"NAD 1983 (2011) (US Feet)":{9748:"NAD 1983 (2011) StatePlane Alabama East (US Feet)",9749:"NAD 1983 (2011) StatePlane Alabama West (US Feet)",102445:"NAD 1983 (2011) StatePlane Alaska  1 FIPS 5001 (US Feet)",102446:"NAD 1983 (2011) StatePlane Alaska  2 FIPS 5002 (US Feet)",102447:"NAD 1983 (2011) StatePlane Alaska  3 FIPS 5003 (US Feet)",102392:"NAD 1983 (2011) StatePlane Alaska  4 FIPS 5004 (US Feet)",102393:"NAD 1983 (2011) StatePlane Alaska  5 FIPS 5005 (US Feet)",102394:"NAD 1983 (2011) StatePlane Alaska  6 FIPS 5006 (US Feet)",102395:"NAD 1983 (2011) StatePlane Alaska  7 FIPS 5007 (US Feet)",102396:"NAD 1983 (2011) StatePlane Alaska  8 FIPS 5008 (US Feet)",102397:"NAD 1983 (2011) StatePlane Alaska  9 FIPS 5009 (US Feet)",102398:"NAD 1983 (2011) StatePlane Alaska 10 FIPS 5010 (US Feet)",6411:"NAD 1983 (2011) StatePlane Arkansas North FIPS 0301 (US Feet)",6413:"NAD 1983 (2011) StatePlane Arkansas South FIPS 0302 (US Feet)",6416:"NAD 1983 (2011) StatePlane California I FIPS 0401 (US Feet)",6418:"NAD 1983 (2011) StatePlane California II FIPS 0402 (US Feet)",6420:"NAD 1983 (2011) StatePlane California III FIPS 0403 (US Feet)",6422:"NAD 1983 (2011) StatePlane California IV FIPS 0404 (US Feet)",6424:"NAD 1983 (2011) StatePlane California V FIPS 0405 (US Feet)",6426:"NAD 1983 (2011) StatePlane California VI FIPS 0406 (US Feet)",6428:"NAD 1983 (2011) StatePlane Colorado Central FIPS 0502 (US Feet)",6430:"NAD 1983 (2011) StatePlane Colorado North FIPS 0501 (US Feet)",6432:"NAD 1983 (2011) StatePlane Colorado South FIPS 0503 (US Feet)",6434:"NAD 1983 (2011) StatePlane Connecticut FIPS 0600 (US Feet)",6436:"NAD 1983 (2011) StatePlane Delaware FIPS 0700 (US Feet)",6438:"NAD 1983 (2011) StatePlane Florida East FIPS 0901 (US Feet)",6441:"NAD 1983 (2011) StatePlane Florida North FIPS 0903 (US Feet)",6443:"NAD 1983 (2011) StatePlane Florida West FIPS 0902 (US Feet)",6445:"NAD 1983 (2011) StatePlane Georgia East FIPS 1001 (US Feet)",6447:"NAD 1983 (2011) StatePlane Georgia West FIPS 1002 (US Feet)",6449:"NAD 1983 (2011) StatePlane Idaho Central FIPS 1102 (US Feet)",6451:"NAD 1983 (2011) StatePlane Idaho East FIPS 1101 (US Feet)",6453:"NAD 1983 (2011) StatePlane Idaho West FIPS 1103 (US Feet)",6455:"NAD 1983 (2011) StatePlane Illinois East FIPS 1201 (US Feet)",6457:"NAD 1983 (2011) StatePlane Illinois West FIPS 1202 (US Feet)",6459:"NAD 1983 (2011) StatePlane Indiana East FIPS 1301 (US Feet)",6461:"NAD 1983 (2011) StatePlane Indiana West FIPS 1302 (US Feet)",6463:"NAD 1983 (2011) StatePlane Iowa North FIPS 1401 (US Feet)",6465:"NAD 1983 (2011) StatePlane Iowa South FIPS 1402 (US Feet)",6467:"NAD 1983 (2011) StatePlane Kansas North FIPS 1501 (US Feet)",6469:"NAD 1983 (2011) StatePlane Kansas South FIPS 1502 (US Feet)",6473:"NAD 1983 (2011) StatePlane Kentucky FIPS 1600 (US Feet)",6471:"NAD 1983 (2011) StatePlane Kentucky North FIPS 1601 (US Feet)",6475:"NAD 1983 (2011) StatePlane Kentucky South FIPS 1602 (US Feet)",6477:"NAD 1983 (2011) StatePlane Louisiana North FIPS 1701 (US Feet)",6479:"NAD 1983 (2011) StatePlane Louisiana South FIPS 1702 (US Feet)",6484:"NAD 1983 (2011) StatePlane Maine East FIPS 1801 (US Feet)",6486:"NAD 1983 (2011) StatePlane Maine West FIPS 1802 (US Feet)",6488:"NAD 1983 (2011) StatePlane Maryland FIPS 1900 (US Feet)",6492:"NAD 1983 (2011) StatePlane Massachusetts FIPS 2001 (US Feet)",6490:"NAD 1983 (2011) StatePlane Massachusetts Isl FIPS 2002 (US Feet)",6501:"NAD 1983 (2011) StatePlane Minnesota Central FIPS 2202 (US Feet)",6503:"NAD 1983 (2011) StatePlane Minnesota North FIPS 2201 (US Feet)",6505:"NAD 1983 (2011) StatePlane Minnesota South FIPS 2203 (US Feet)",6507:"NAD 1983 (2011) StatePlane Mississippi East FIPS 2301 (US Feet)",6510:"NAD 1983 (2011) StatePlane Mississippi West FIPS 2302 (US Feet)",6880:"NAD 1983 (2011) StatePlane Nebraska FIPS 2600 (US Feet)",6519:"NAD 1983 (2011) StatePlane Nevada Central FIPS 2702 (US Feet)",6521:"NAD 1983 (2011) StatePlane Nevada East FIPS 2701 (US Feet)",6523:"NAD 1983 (2011) StatePlane Nevada West FIPS 2703 (US Feet)",6525:"NAD 1983 (2011) StatePlane New Hampshire FIPS 2800 (US Feet)",6527:"NAD 1983 (2011) StatePlane New Jersey FIPS 2900 (US Feet)",6529:"NAD 1983 (2011) StatePlane New Mexico Central FIPS3002 (US Feet)",6531:"NAD 1983 (2011) StatePlane New Mexico East FIPS 3001 (US Feet)",6533:"NAD 1983 (2011) StatePlane New Mexico West FIPS 3003 (US Feet)",6535:"NAD 1983 (2011) StatePlane New York Central FIPS 3102 (US Feet)",6537:"NAD 1983 (2011) StatePlane New York East FIPS 3101 (US Feet)",6539:"NAD 1983 (2011) StatePlane New York Long Isl FIPS 3104 (US Feet)",6541:"NAD 1983 (2011) StatePlane New York West FIPS 3103 (US Feet)",6543:"NAD 1983 (2011) StatePlane North Carolina FIPS 3200 (US Feet)",6549:"NAD 1983 (2011) StatePlane Ohio North FIPS 3401 (US Feet)",6551:"NAD 1983 (2011) StatePlane Ohio South FIPS 3402 (US Feet)",6553:"NAD 1983 (2011) StatePlane Oklahoma North FIPS 3501 (US Feet)",6555:"NAD 1983 (2011) StatePlane Oklahoma South FIPS 3502 (US Feet)",6563:"NAD 1983 (2011) StatePlane Pennsylvania North FIPS3701 (US Feet)",6565:"NAD 1983 (2011) StatePlane Pennsylvania South FIPS3702 (US Feet)",6568:"NAD 1983 (2011) StatePlane Rhode Island FIPS 3800 (US Feet)",6572:"NAD 1983 (2011) StatePlane South Dakota N FIPS 4001 (US Feet)",6574:"NAD 1983 (2011) StatePlane South Dakota S FIPS 4002 (US Feet)",6576:"NAD 1983 (2011) StatePlane Tennessee FIPS 4100 (US Feet)",6578:"NAD 1983 (2011) StatePlane Texas Central FIPS 4203 (US Feet)",6584:"NAD 1983 (2011) StatePlane Texas N Central FIPS 4202 (US Feet)",6582:"NAD 1983 (2011) StatePlane Texas North FIPS 4201 (US Feet)",6588:"NAD 1983 (2011) StatePlane Texas S Central FIPS 4204 (US Feet)",6586:"NAD 1983 (2011) StatePlane Texas South FIPS 4205 (US Feet)",6625:"NAD 1983 (2011) StatePlane Utah Central FIPS 4302 (US Feet)",6626:"NAD 1983 (2011) StatePlane Utah North FIPS 4301 (US Feet)",6627:"NAD 1983 (2011) StatePlane Utah South FIPS 4303 (US Feet)",6590:"NAD 1983 (2011) StatePlane Vermont FIPS 4400 (US Feet)",6593:"NAD 1983 (2011) StatePlane Virginia North FIPS 4501 (US Feet)",6595:"NAD 1983 (2011) StatePlane Virginia South FIPS 4502 (US Feet)",6597:"NAD 1983 (2011) StatePlane Washington North FIPS 4601 (US Feet)",6599:"NAD 1983 (2011) StatePlane Washington South FIPS 4602 (US Feet)",6601:"NAD 1983 (2011) StatePlane West Virginia N FIPS 4701 (US Feet)",6603:"NAD 1983 (2011) StatePlane West Virginia S FIPS 4702 (US Feet)",6605:"NAD 1983 (2011) StatePlane Wisconsin Central FIPS 4802 (US Feet)",6607:"NAD 1983 (2011) StatePlane Wisconsin North FIPS 4801 (US Feet)",6609:"NAD 1983 (2011) StatePlane Wisconsin South FIPS 4803 (US Feet)",6614:"NAD 1983 (2011) StatePlane Wyoming E Central FIPS 4902 (US Feet)",6612:"NAD 1983 (2011) StatePlane Wyoming East FIPS 4901 (US Feet)",6618:"NAD 1983 (2011) StatePlane Wyoming W Central FIPS 4903 (US Feet)",6616:"NAD 1983 (2011) StatePlane Wyoming West FIPS 4904 (US Feet)"},"NAD 1983 (CORS96) (Intl Feet)":{103226:"NAD 1983 (CORS96) StatePlane Arizona Central FIPS 0202 (Intl Feet)",103225:"NAD 1983 (CORS96) StatePlane Arizona East FIPS 0201 (Intl Feet)",103227:"NAD 1983 (CORS96) StatePlane Arizona West FIPS 0203 (Intl Feet)",103385:"NAD 1983 (CORS96) StatePlane Michigan Central FIPS 2112 (Intl Feet)",103384:"NAD 1983 (CORS96) StatePlane Michigan North FIPS 2111 (Intl Feet)",103386:"NAD 1983 (CORS96) StatePlane Michigan South FIPS 2113 (Intl Feet)",103473:"NAD 1983 (CORS96) StatePlane Montana FIPS 2500 (Intl Feet)",103504:"NAD 1983 (CORS96) StatePlane North Dakota N FIPS 3301 (Intl Feet)",103505:"NAD 1983 (CORS96) StatePlane North Dakota S FIPS 3302 (Intl Feet)",6885:"NAD 1983 (CORS96) StatePlane Oregon North FIPS 3601 (Intl Feet)",6887:"NAD 1983 (CORS96) StatePlane Oregon South FIPS 3602 (Intl Feet)",103521:"NAD 1983 (CORS96) StatePlane South Carolina FIPS 3900 (Intl Feet)",103553:"NAD 1983 (CORS96) StatePlane Utah Central FIPS 4302 (Intl Feet)",103552:"NAD 1983 (CORS96) StatePlane Utah North FIPS 4301 (Intl Feet)",103554:"NAD 1983 (CORS96) StatePlane Utah South FIPS 4303 (Intl Feet)"},"NAD 1983 (CORS96) (Meters)":{103373:"NAD 1983 (CORS96) Maine 2000 Central Zone (Meters)",103372:"NAD 1983 (CORS96) Maine 2000 East Zone (Meters)",103374:"NAD 1983 (CORS96) Maine 2000 West Zone (Meters)",103220:"NAD 1983 (CORS96) StatePlane Alabama East FIPS 0101 (Meters)",103221:"NAD 1983 (CORS96) StatePlane Alabama West FIPS 0102 (Meters)",102366:"NAD 1983 (CORS96) StatePlane Alaska  1 FIPS 5001 (Meters)",102367:"NAD 1983 (CORS96) StatePlane Alaska  2 FIPS 5002 (Meters)",102368:"NAD 1983 (CORS96) StatePlane Alaska  3 FIPS 5003 (Meters)",102369:"NAD 1983 (CORS96) StatePlane Alaska  4 FIPS 5004 (Meters)",102370:"NAD 1983 (CORS96) StatePlane Alaska  5 FIPS 5005 (Meters)",102371:"NAD 1983 (CORS96) StatePlane Alaska  6 FIPS 5006 (Meters)",102372:"NAD 1983 (CORS96) StatePlane Alaska  7 FIPS 5007 (Meters)",102373:"NAD 1983 (CORS96) StatePlane Alaska  8 FIPS 5008 (Meters)",102374:"NAD 1983 (CORS96) StatePlane Alaska  9 FIPS 5009 (Meters)",102375:"NAD 1983 (CORS96) StatePlane Alaska 10 FIPS 5010 (Meters)",103223:"NAD 1983 (CORS96) StatePlane Arizona Central FIPS 0202 (Meters)",103222:"NAD 1983 (CORS96) StatePlane Arizona East FIPS 0201 (Meters)",103224:"NAD 1983 (CORS96) StatePlane Arizona West FIPS 0203 (Meters)",103228:"NAD 1983 (CORS96) StatePlane Arkansas North FIPS 0301 (Meters)",103229:"NAD 1983 (CORS96) StatePlane Arkansas South FIPS 0302 (Meters)",103232:"NAD 1983 (CORS96) StatePlane California I FIPS 0401 (Meters)",103233:"NAD 1983 (CORS96) StatePlane California II FIPS 0402 (Meters)",103234:"NAD 1983 (CORS96) StatePlane California III FIPS 0403 (Meters)",103235:"NAD 1983 (CORS96) StatePlane California IV FIPS 0404 (Meters)",103236:"NAD 1983 (CORS96) StatePlane California V FIPS 0405 (Meters)",103237:"NAD 1983 (CORS96) StatePlane California VI FIPS 0406 (Meters)",103245:"NAD 1983 (CORS96) StatePlane Colorado Central FIPS 0502 (Meter)",103244:"NAD 1983 (CORS96) StatePlane Colorado North FIPS 0501 (Meters)",103246:"NAD 1983 (CORS96) StatePlane Colorado South FIPS 0503 (Meters)",103250:"NAD 1983 (CORS96) StatePlane Connecticut FIPS 0600 (Meters)",103252:"NAD 1983 (CORS96) StatePlane Delaware FIPS 0700 (Meters)",103254:"NAD 1983 (CORS96) StatePlane Florida East FIPS 0901 (Meters)",103256:"NAD 1983 (CORS96) StatePlane Florida North FIPS 0903 (Meters)",103255:"NAD 1983 (CORS96) StatePlane Florida West FIPS 0902 (Meters)",103260:"NAD 1983 (CORS96) StatePlane Georgia East FIPS 1001 (Meters)",103261:"NAD 1983 (CORS96) StatePlane Georgia West FIPS 1002 (Meters)",103265:"NAD 1983 (CORS96) StatePlane Idaho Central FIPS 1102 (Meters)",103264:"NAD 1983 (CORS96) StatePlane Idaho East FIPS 1101 (Meters)",103266:"NAD 1983 (CORS96) StatePlane Idaho West FIPS 1103 (Meters)",103270:"NAD 1983 (CORS96) StatePlane Illinois East FIPS 1201 (Meters)",103271:"NAD 1983 (CORS96) StatePlane Illinois West FIPS 1202 (Meters)",103274:"NAD 1983 (CORS96) StatePlane Indiana East FIPS 1301 (Meters)",103275:"NAD 1983 (CORS96) StatePlane Indiana West FIPS 1302 (Meters)",103278:"NAD 1983 (CORS96) StatePlane Iowa North FIPS 1401 (Meters)",103279:"NAD 1983 (CORS96) StatePlane Iowa South FIPS 1402 (Meters)",103282:"NAD 1983 (CORS96) StatePlane Kansas North FIPS 1501 (Meters)",103283:"NAD 1983 (CORS96) StatePlane Kansas South FIPS 1502 (Meters)",103288:"NAD 1983 (CORS96) StatePlane Kentucky FIPS 1600 (Meters)",103286:"NAD 1983 (CORS96) StatePlane Kentucky North FIPS 1601 (Meters)",103290:"NAD 1983 (CORS96) StatePlane Kentucky South FIPS 1602 (Meters)",103292:"NAD 1983 (CORS96) StatePlane Louisiana North FIPS 1701 (Meters)",103293:"NAD 1983 (CORS96) StatePlane Louisiana South FIPS 1702 (Meters)",103296:"NAD 1983 (CORS96) StatePlane Maine East FIPS 1801 (Meters)",103297:"NAD 1983 (CORS96) StatePlane Maine West FIPS 1802 (Meters)",103375:"NAD 1983 (CORS96) StatePlane Maryland FIPS 1900 (Meters)",103377:"NAD 1983 (CORS96) StatePlane Massachusetts FIPS 2001 (Meters)",103378:"NAD 1983 (CORS96) StatePlane Massachusetts Isl FIPS 2002 (Meters)",103382:"NAD 1983 (CORS96) StatePlane Michigan Central FIPS 2112 (Meters)",103381:"NAD 1983 (CORS96) StatePlane Michigan North FIPS 2111 (Meters)",103383:"NAD 1983 (CORS96) StatePlane Michigan South FIPS 2113 (Meters)",103388:"NAD 1983 (CORS96) StatePlane Minnesota Central FIPS 2202 (Meters)",103387:"NAD 1983 (CORS96) StatePlane Minnesota North FIPS 2201 (Meters)",103389:"NAD 1983 (CORS96) StatePlane Minnesota South FIPS 2203 (Meters)",103393:"NAD 1983 (CORS96) StatePlane Mississippi East FIPS 2301 (Meters)",103394:"NAD 1983 (CORS96) StatePlane Mississippi West FIPS 2302 (Meters)",103398:"NAD 1983 (CORS96) StatePlane Missouri Central FIPS 2402 (Meters)",103397:"NAD 1983 (CORS96) StatePlane Missouri East FIPS 2401 (Meters)",103399:"NAD 1983 (CORS96) StatePlane Missouri West FIPS 2403 (Meters)",103472:"NAD 1983 (CORS96) StatePlane Montana FIPS 2500 (Meters)",103474:"NAD 1983 (CORS96) StatePlane Nebraska FIPS 2600 (Meters)",103477:"NAD 1983 (CORS96) StatePlane Nevada Central FIPS 2702 (Meters)",103476:"NAD 1983 (CORS96) StatePlane Nevada East FIPS 2701 (Meters)",103478:"NAD 1983 (CORS96) StatePlane Nevada West FIPS 2703 (Meters)",103482:"NAD 1983 (CORS96) StatePlane New Hampshire FIPS 2800 (Meters)",103484:"NAD 1983 (CORS96) StatePlane New Jersey FIPS 2900 (Meters)",103487:"NAD 1983 (CORS96) StatePlane New Mexico Central FIPS 3002 (Meters)",103486:"NAD 1983 (CORS96) StatePlane New Mexico East FIPS 3001 (Meters)",103488:"NAD 1983 (CORS96) StatePlane New Mexico West FIPS 3003 (Meters)",103493:"NAD 1983 (CORS96) StatePlane New York Central FIPS 3102 (Meters)",103492:"NAD 1983 (CORS96) StatePlane New York East FIPS 3101 (Meters)",103495:"NAD 1983 (CORS96) StatePlane New York Long Isl FIPS 3104 (Meters)",103494:"NAD 1983 (CORS96) StatePlane New York West FIPS 3103 (Meters)",103500:"NAD 1983 (CORS96) StatePlane North Carolina FIPS 3200 (Meters)",103502:"NAD 1983 (CORS96) StatePlane North Dakota N FIPS 3301 (Meters)",103503:"NAD 1983 (CORS96) StatePlane North Dakota S FIPS 3302 (Meters)",103506:"NAD 1983 (CORS96) StatePlane Ohio North FIPS 3401 (Meters)",103507:"NAD 1983 (CORS96) StatePlane Ohio South FIPS 3402 (Meters)",103510:"NAD 1983 (CORS96) StatePlane Oklahoma North FIPS 3501 (Meters)",103511:"NAD 1983 (CORS96) StatePlane Oklahoma South FIPS 3502 (Meters)",6884:"NAD 1983 (CORS96) StatePlane Oregon North FIPS 3601 (Meters)",6886:"NAD 1983 (CORS96) StatePlane Oregon South FIPS 3602 (Meters)",103514:"NAD 1983 (CORS96) StatePlane Pennsylvania North FIPS 3701 (Meters)",103516:"NAD 1983 (CORS96) StatePlane Pennsylvania South FIPS 3702 (Meters)",6307:"NAD 1983 (CORS96) StatePlane Puerto Rico and Virgin Islands (Meters)",103518:"NAD 1983 (CORS96) StatePlane Rhode Island FIPS 3800 (Meters)",103520:"NAD 1983 (CORS96) StatePlane South Carolina FIPS 3900 (Meters)",103522:"NAD 1983 (CORS96) StatePlane South Dakota N FIPS 4001 (Meters)",103523:"NAD 1983 (CORS96) StatePlane South Dakota S FIPS 4002 (Meters)",103526:"NAD 1983 (CORS96) StatePlane Tennessee FIPS 4100 (Meters)",103541:"NAD 1983 (CORS96) StatePlane Texas Central FIPS 4203 (Meters)",103540:"NAD 1983 (CORS96) StatePlane Texas N Central FIPS 4202 (Meters)",103539:"NAD 1983 (CORS96) StatePlane Texas North FIPS 4201 (Meters)",103542:"NAD 1983 (CORS96) StatePlane Texas S Central FIPS 4204 (Meters)",103543:"NAD 1983 (CORS96) StatePlane Texas South FIPS 4205 (Meters)",103550:"NAD 1983 (CORS96) StatePlane Utah Central FIPS 4302 (Meters)",103549:"NAD 1983 (CORS96) StatePlane Utah North FIPS 4301 (Meters)",103551:"NAD 1983 (CORS96) StatePlane Utah South FIPS 4303 (Meters)",103558:"NAD 1983 (CORS96) StatePlane Vermont FIPS 4400 (Meters)",103559:"NAD 1983 (CORS96) StatePlane Virginia North FIPS 4501 (Meters)",103560:"NAD 1983 (CORS96) StatePlane Virginia South FIPS 4502 (Meters)",103563:"NAD 1983 (CORS96) StatePlane Washington North FIPS 4601 (Meters)",103564:"NAD 1983 (CORS96) StatePlane Washington South FIPS 4602 (Meters)",103567:"NAD 1983 (CORS96) StatePlane West Virginia N FIPS 4701 (Meters)",103568:"NAD 1983 (CORS96) StatePlane West Virginia S FIPS 4702 (Meters)",103572:"NAD 1983 (CORS96) StatePlane Wisconsin Central FIPS 4802 (Meters)",103571:"NAD 1983 (CORS96) StatePlane Wisconsin North FIPS 4801 (Meters)",103573:"NAD 1983 (CORS96) StatePlane Wisconsin South FIPS 4803 (Meters)",103578:"NAD 1983 (CORS96) StatePlane Wyoming E Central FIPS 4902 (Meters)",103577:"NAD 1983 (CORS96) StatePlane Wyoming East FIPS 4901 (Meters)",103579:"NAD 1983 (CORS96) StatePlane Wyoming W Central FIPS 4903 (Meters)",103580:"NAD 1983 (CORS96) StatePlane Wyoming West FIPS 4904 (Meters)"},"NAD 1983 (CORS96) (US Feet)":{103230:"NAD 1983 (CORS96) StatePlane Arkansas North FIPS 0301 (US Feet)",103231:"NAD 1983 (CORS96) StatePlane Arkansas South FIPS 0302 (US Feet)",103238:"NAD 1983 (CORS96) StatePlane California I FIPS 0401 (US Feet)",103239:"NAD 1983 (CORS96) StatePlane California II FIPS 0402 (US Feet)",103240:"NAD 1983 (CORS96) StatePlane California III FIPS 0403 (US Feet)",103241:"NAD 1983 (CORS96) StatePlane California IV FIPS 0404 (US Feet)",103242:"NAD 1983 (CORS96) StatePlane California V FIPS 0405 (US Feet)",103243:"NAD 1983 (CORS96) StatePlane California VI FIPS 0406 (US Feet)",103248:"NAD 1983 (CORS96) StatePlane Colorado Central FIPS 0502 (US Feet)",103247:"NAD 1983 (CORS96) StatePlane Colorado North FIPS 0501 (US Feet)",103249:"NAD 1983 (CORS96) StatePlane Colorado South FIPS 0503 (US Feet)",103251:"NAD 1983 (CORS96) StatePlane Connecticut FIPS 0600 (US Feet)",103253:"NAD 1983 (CORS96) StatePlane Delaware FIPS 0700 (US Feet)",103257:"NAD 1983 (CORS96) StatePlane Florida East FIPS 0901 (US Feet)",103259:"NAD 1983 (CORS96) StatePlane Florida North FIPS 0903 (US Feet)",103258:"NAD 1983 (CORS96) StatePlane Florida West FIPS 0902 (US Feet)",103262:"NAD 1983 (CORS96) StatePlane Georgia East FIPS 1001 (US Feet)",103263:"NAD 1983 (CORS96) StatePlane Georgia West FIPS 1002 (US Feet)",103268:"NAD 1983 (CORS96) StatePlane Idaho Central FIPS 1102 (US Feet)",103267:"NAD 1983 (CORS96) StatePlane Idaho East FIPS 1101 (US Feet)",103269:"NAD 1983 (CORS96) StatePlane Idaho West FIPS 1103 (US Feet)",103272:"NAD 1983 (CORS96) StatePlane Illinois East FIPS 1201 (US Feet)",103273:"NAD 1983 (CORS96) StatePlane Illinois West FIPS 1202 (US Feet)",103276:"NAD 1983 (CORS96) StatePlane Indiana East FIPS 1301 (US Feet)",103277:"NAD 1983 (CORS96) StatePlane Indiana West FIPS 1302 (US Feet)",103280:"NAD 1983 (CORS96) StatePlane Iowa North FIPS 1401 (US Feet)",103281:"NAD 1983 (CORS96) StatePlane Iowa South FIPS 1402 (US Feet)",103284:"NAD 1983 (CORS96) StatePlane Kansas North FIPS 1501 (US Feet)",103285:"NAD 1983 (CORS96) StatePlane Kansas South FIPS 1502 (US Feet)",103289:"NAD 1983 (CORS96) StatePlane Kentucky FIPS 1600 (US Feet)",103287:"NAD 1983 (CORS96) StatePlane Kentucky North FIPS 1601 (US Feet)",103291:"NAD 1983 (CORS96) StatePlane Kentucky South FIPS 1602 (US Feet)",103294:"NAD 1983 (CORS96) StatePlane Louisiana North FIPS 1701 (US Feet)",103295:"NAD 1983 (CORS96) StatePlane Louisiana South FIPS 1702 (US Feet)",103298:"NAD 1983 (CORS96) StatePlane Maine East FIPS 1801 (US Feet)",103299:"NAD 1983 (CORS96) StatePlane Maine West FIPS 1802 (US Feet)",103376:"NAD 1983 (CORS96) StatePlane Maryland FIPS 1900 (US Feet)",103379:"NAD 1983 (CORS96) StatePlane Massachusetts FIPS 2001 (US Feet)",103380:"NAD 1983 (CORS96) StatePlane Massachusetts Isl FIPS 2002 (US Feet)",103391:"NAD 1983 (CORS96) StatePlane Minnesota Central FIPS 2202 (US Feet)",103390:"NAD 1983 (CORS96) StatePlane Minnesota North FIPS 2201 (US Feet)",103392:"NAD 1983 (CORS96) StatePlane Minnesota South FIPS 2203 (US Feet)",103395:"NAD 1983 (CORS96) StatePlane Mississippi East FIPS 2301 (US Feet)",103396:"NAD 1983 (CORS96) StatePlane Mississippi West FIPS 2302 (US Feet)",103475:"NAD 1983 (CORS96) StatePlane Nebraska FIPS 2600 (US Feet)",103480:"NAD 1983 (CORS96) StatePlane Nevada Central FIPS 2702 (US Feet)",103479:"NAD 1983 (CORS96) StatePlane Nevada East FIPS 2701 (US Feet)",103481:"NAD 1983 (CORS96) StatePlane Nevada West FIPS 2703 (US Feet)",103483:"NAD 1983 (CORS96) StatePlane New Hampshire FIPS 2800 (US Feet)",103485:"NAD 1983 (CORS96) StatePlane New Jersey FIPS 2900 (US Feet)",103490:"NAD 1983 (CORS96) StatePlane New Mexico Central FIPS3002 (US Feet)",103489:"NAD 1983 (CORS96) StatePlane New Mexico East FIPS 3001 (US Feet)",103491:"NAD 1983 (CORS96) StatePlane New Mexico West FIPS 3003 (US Feet)",103497:"NAD 1983 (CORS96) StatePlane New York Central FIPS 3102 (US Feet)",103496:"NAD 1983 (CORS96) StatePlane New York East FIPS 3101 (US Feet)",103499:"NAD 1983 (CORS96) StatePlane New York Long Isl FIPS 3104 (US Feet)",103498:"NAD 1983 (CORS96) StatePlane New York West FIPS 3103 (US Feet)",103501:"NAD 1983 (CORS96) StatePlane North Carolina FIPS 3200 (US Feet)",103508:"NAD 1983 (CORS96) StatePlane Ohio North FIPS 3401 (US Feet)",103509:"NAD 1983 (CORS96) StatePlane Ohio South FIPS 3402 (US Feet)",103512:"NAD 1983 (CORS96) StatePlane Oklahoma North FIPS 3501 (US Feet)",103513:"NAD 1983 (CORS96) StatePlane Oklahoma South FIPS 3502 (US Feet)",103515:"NAD 1983 (CORS96) StatePlane Pennsylvania North FIPS3701 (US Feet)",103517:"NAD 1983 (CORS96) StatePlane Pennsylvania South FIPS3702 (US Feet)",103519:"NAD 1983 (CORS96) StatePlane Rhode Island FIPS 3800 (US Feet)",103524:"NAD 1983 (CORS96) StatePlane South Dakota N FIPS 4001 (US Feet)",103525:"NAD 1983 (CORS96) StatePlane South Dakota S FIPS 4002 (US Feet)",103527:"NAD 1983 (CORS96) StatePlane Tennessee FIPS 4100 (US Feet)",103546:"NAD 1983 (CORS96) StatePlane Texas Central FIPS 4203 (US Feet)",103545:"NAD 1983 (CORS96) StatePlane Texas N Central FIPS 4202 (US Feet)",103544:"NAD 1983 (CORS96) StatePlane Texas North FIPS 4201 (US Feet)",103547:"NAD 1983 (CORS96) StatePlane Texas S Central FIPS 4204 (US Feet)",103548:"NAD 1983 (CORS96) StatePlane Texas South FIPS 4205 (US Feet)",103556:"NAD 1983 (CORS96) StatePlane Utah Central FIPS 4302 (US Feet)",103555:"NAD 1983 (CORS96) StatePlane Utah North FIPS 4301 (US Feet)",103557:"NAD 1983 (CORS96) StatePlane Utah South FIPS 4303 (US Feet)",103561:"NAD 1983 (CORS96) StatePlane Virginia North FIPS 4501 (US Feet)",103562:"NAD 1983 (CORS96) StatePlane Virginia South FIPS 4502 (US Feet)",103565:"NAD 1983 (CORS96) StatePlane Washington North FIPS 4601 (US Feet)",103566:"NAD 1983 (CORS96) StatePlane Washington South FIPS 4602 (US Feet)",103569:"NAD 1983 (CORS96) StatePlane West Virginia N FIPS 4701 (US Feet)",103570:"NAD 1983 (CORS96) StatePlane West Virginia S FIPS 4702 (US Feet)",103575:"NAD 1983 (CORS96) StatePlane Wisconsin Central FIPS 4802 (US Feet)",103574:"NAD 1983 (CORS96) StatePlane Wisconsin North FIPS 4801 (US Feet)",103576:"NAD 1983 (CORS96) StatePlane Wisconsin South FIPS 4803 (US Feet)",103582:"NAD 1983 (CORS96) StatePlane Wyoming E Central FIPS 4902 (US Feet)",103581:"NAD 1983 (CORS96) StatePlane Wyoming East FIPS 4901 (US Feet)",103583:"NAD 1983 (CORS96) StatePlane Wyoming W Central FIPS 4903 (US Feet)",103585:"NAD 1983 (CORS96) StatePlane Wyoming West FIPS 4904 (US Feet)"},"NAD 1983 (Intl Feet)":{2223:"NAD 1983 StatePlane Arizona Central FIPS 0202 (Intl Feet)",2222:"NAD 1983 StatePlane Arizona East FIPS 0201 (Intl Feet)",2224:"NAD 1983 StatePlane Arizona West FIPS 0203 (Intl Feet)",2252:"NAD 1983 StatePlane Michigan Central FIPS 2112 (Intl Feet)",2251:"NAD 1983 StatePlane Michigan North FIPS 2111 (Intl Feet)",2253:"NAD 1983 StatePlane Michigan South FIPS 2113 (Intl Feet)",2256:"NAD 1983 StatePlane Montana FIPS 2500 (Intl Feet)",2265:"NAD 1983 StatePlane North Dakota N FIPS 3301 (Intl Feet)",2266:"NAD 1983 StatePlane North Dakota S FIPS 3302 (Intl Feet)",2269:"NAD 1983 StatePlane Oregon North FIPS 3601 (Intl Feet)",2270:"NAD 1983 StatePlane Oregon South FIPS 3602 (Intl Feet)",2273:"NAD 1983 StatePlane South Carolina FIPS 3900 (Intl Feet)",2281:"NAD 1983 StatePlane Utah Central FIPS 4302 (Intl Feet)",2280:"NAD 1983 StatePlane Utah North FIPS 4301 (Intl Feet)",2282:"NAD 1983 StatePlane Utah South FIPS 4303 (Intl Feet)"},"NAD 1983 (Meters)":{3463:"NAD 1983 Maine 2000 Central Zone (Meters)",3072:"NAD 1983 Maine 2000 East Zone (Meters)",3074:"NAD 1983 Maine 2000 West Zone (Meters)",26929:"NAD 1983 StatePlane Alabama East FIPS 0101 (Meters)",26930:"NAD 1983 StatePlane Alabama West FIPS 0102 (Meters)",26931:"NAD 1983 StatePlane Alaska  1 FIPS 5001 (Meters)",26932:"NAD 1983 StatePlane Alaska  2 FIPS 5002 (Meters)",26933:"NAD 1983 StatePlane Alaska  3 FIPS 5003 (Meters)",26934:"NAD 1983 StatePlane Alaska  4 FIPS 5004 (Meters)",26935:"NAD 1983 StatePlane Alaska  5 FIPS 5005 (Meters)",26936:"NAD 1983 StatePlane Alaska  6 FIPS 5006 (Meters)",26937:"NAD 1983 StatePlane Alaska  7 FIPS 5007 (Meters)",26938:"NAD 1983 StatePlane Alaska  8 FIPS 5008 (Meters)",26939:"NAD 1983 StatePlane Alaska  9 FIPS 5009 (Meters)",26940:"NAD 1983 StatePlane Alaska 10 FIPS 5010 (Meters)",26949:"NAD 1983 StatePlane Arizona Central FIPS 0202 (Meters)",26948:"NAD 1983 StatePlane Arizona East FIPS 0201 (Meters)",26950:"NAD 1983 StatePlane Arizona West FIPS 0203 (Meters)",26951:"NAD 1983 StatePlane Arkansas North FIPS 0301 (Meters)",26952:"NAD 1983 StatePlane Arkansas South FIPS 0302 (Meters)",26941:"NAD 1983 StatePlane California I FIPS 0401 (Meters)",26942:"NAD 1983 StatePlane California II FIPS 0402 (Meters)",26943:"NAD 1983 StatePlane California III FIPS 0403 (Meters)",26944:"NAD 1983 StatePlane California IV FIPS 0404 (Meters)",26945:"NAD 1983 StatePlane California V FIPS 0405 (Meters)",26946:"NAD 1983 StatePlane California VI FIPS 0406 (Meters)",26954:"NAD 1983 StatePlane Colorado Central FIPS 0502 (Meters)",26953:"NAD 1983 StatePlane Colorado North FIPS 0501 (Meters)",26955:"NAD 1983 StatePlane Colorado South FIPS 0503 (Meters)",26956:"NAD 1983 StatePlane Connecticut FIPS 0600 (Meters)",26957:"NAD 1983 StatePlane Delaware FIPS 0700 (Meters)",26958:"NAD 1983 StatePlane Florida East FIPS 0901 (Meters)",26960:"NAD 1983 StatePlane Florida North FIPS 0903 (Meters)",26959:"NAD 1983 StatePlane Florida West FIPS 0902 (Meters)",26966:"NAD 1983 StatePlane Georgia East FIPS 1001 (Meters)",26967:"NAD 1983 StatePlane Georgia West FIPS 1002 (Meters)",65161:"NAD 1983 StatePlane Guam FIPS 5400 (Meters)",26961:"NAD 1983 StatePlane Hawaii 1 FIPS 5101 (Meters)",26962:"NAD 1983 StatePlane Hawaii 2 FIPS 5102 (Meters)",26963:"NAD 1983 StatePlane Hawaii 3 FIPS 5103 (Meters)",26964:"NAD 1983 StatePlane Hawaii 4 FIPS 5104 (Meters)",26965:"NAD 1983 StatePlane Hawaii 5 FIPS 5105 (Meters)",26969:"NAD 1983 StatePlane Idaho Central FIPS 1102 (Meters)",26968:"NAD 1983 StatePlane Idaho East FIPS 1101 (Meters)",26970:"NAD 1983 StatePlane Idaho West FIPS 1103 (Meters)",26971:"NAD 1983 StatePlane Illinois East FIPS 1201 (Meters)",26972:"NAD 1983 StatePlane Illinois West FIPS 1202 (Meters)",26973:"NAD 1983 StatePlane Indiana East FIPS 1301 (Meters)",26974:"NAD 1983 StatePlane Indiana West FIPS 1302 (Meters)",26975:"NAD 1983 StatePlane Iowa North FIPS 1401 (Meters)",26976:"NAD 1983 StatePlane Iowa South FIPS 1402 (Meters)",26977:"NAD 1983 StatePlane Kansas North FIPS 1501 (Meters)",26978:"NAD 1983 StatePlane Kansas South FIPS 1502 (Meters)",3088:"NAD 1983 StatePlane Kentucky FIPS 1600 (Meters)",2205:"NAD 1983 StatePlane Kentucky North FIPS 1601 (Meters)",26980:"NAD 1983 StatePlane Kentucky South FIPS 1602 (Meters)",26981:"NAD 1983 StatePlane Louisiana North FIPS 1701 (Meters)",32199:"NAD 1983 StatePlane Louisiana Offshore FIPS 1703 (Meters)",26982:"NAD 1983 StatePlane Louisiana South FIPS 1702 (Meters)",26983:"NAD 1983 StatePlane Maine East FIPS 1801 (Meters)",26984:"NAD 1983 StatePlane Maine West FIPS 1802 (Meters)",26985:"NAD 1983 StatePlane Maryland FIPS 1900 (Meters)",26986:"NAD 1983 StatePlane Massachusetts FIPS 2001 (Meters)",26987:"NAD 1983 StatePlane Massachusetts Isl FIPS 2002 (Meters)",26989:"NAD 1983 StatePlane Michigan Central FIPS 2112 (Meters)",26988:"NAD 1983 StatePlane Michigan North FIPS 2111 (Meters)",26990:"NAD 1983 StatePlane Michigan South FIPS 2113 (Meters)",26992:"NAD 1983 StatePlane Minnesota Central FIPS 2202 (Meters)",26991:"NAD 1983 StatePlane Minnesota North FIPS 2201 (Meters)",26993:"NAD 1983 StatePlane Minnesota South FIPS 2203 (Meters)",26994:"NAD 1983 StatePlane Mississippi East FIPS 2301 (Meters)",26995:"NAD 1983 StatePlane Mississippi West FIPS 2302 (Meters)",26997:"NAD 1983 StatePlane Missouri Central FIPS 2402 (Meters)",26996:"NAD 1983 StatePlane Missouri East FIPS 2401 (Meters)",26998:"NAD 1983 StatePlane Missouri West FIPS 2403 (Meters)",32100:"NAD 1983 StatePlane Montana FIPS 2500 (Meters)",32104:"NAD 1983 StatePlane Nebraska FIPS 2600 (Meters)",32108:"NAD 1983 StatePlane Nevada Central FIPS 2702 (Meters)",32107:"NAD 1983 StatePlane Nevada East FIPS 2701 (Meters)",32109:"NAD 1983 StatePlane Nevada West FIPS 2703 (Meters)",32110:"NAD 1983 StatePlane New Hampshire FIPS 2800 (Meters)",32111:"NAD 1983 StatePlane New Jersey FIPS 2900 (Meters)",32113:"NAD 1983 StatePlane New Mexico Central FIPS 3002 (Meters)",32112:"NAD 1983 StatePlane New Mexico East FIPS 3001 (Meters)",32114:"NAD 1983 StatePlane New Mexico West FIPS 3003 (Meters)",32116:"NAD 1983 StatePlane New York Central FIPS 3102 (Meters)",32115:"NAD 1983 StatePlane New York East FIPS 3101 (Meters)",32118:"NAD 1983 StatePlane New York Long Isl FIPS 3104 (Meters)",32117:"NAD 1983 StatePlane New York West FIPS 3103 (Meters)",32119:"NAD 1983 StatePlane North Carolina FIPS 3200 (Meters)",32120:"NAD 1983 StatePlane North Dakota N FIPS 3301 (Meters)",32121:"NAD 1983 StatePlane North Dakota S FIPS 3302 (Meters)",32122:"NAD 1983 StatePlane Ohio North FIPS 3401 (Meters)",32123:"NAD 1983 StatePlane Ohio South FIPS 3402 (Meters)",32124:"NAD 1983 StatePlane Oklahoma North FIPS 3501 (Meters)",32125:"NAD 1983 StatePlane Oklahoma South FIPS 3502 (Meters)",32126:"NAD 1983 StatePlane Oregon North FIPS 3601 (Meters)",32127:"NAD 1983 StatePlane Oregon South FIPS 3602 (Meters)",32128:"NAD 1983 StatePlane Pennsylvania North FIPS 3701 (Meters)",32129:"NAD 1983 StatePlane Pennsylvania South FIPS 3702 (Meters)",32161:"NAD 1983 StatePlane Puerto Rico Virgin Isl FIPS 5200 (Meters)",32130:"NAD 1983 StatePlane Rhode Island FIPS 3800 (Meters)",32133:"NAD 1983 StatePlane South Carolina FIPS 3900 (Meters)",32134:"NAD 1983 StatePlane South Dakota N FIPS 4001 (Meters)",32135:"NAD 1983 StatePlane South Dakota S FIPS 4002 (Meters)",32136:"NAD 1983 StatePlane Tennessee FIPS 4100 (Meters)",32139:"NAD 1983 StatePlane Texas Central FIPS 4203 (Meters)",32138:"NAD 1983 StatePlane Texas N Central FIPS 4202 (Meters)",32137:"NAD 1983 StatePlane Texas North FIPS 4201 (Meters)",32140:"NAD 1983 StatePlane Texas S Central FIPS 4204 (Meters)",32141:"NAD 1983 StatePlane Texas South FIPS 4205 (Meters)",32143:"NAD 1983 StatePlane Utah Central FIPS 4302 (Meters)",32142:"NAD 1983 StatePlane Utah North FIPS 4301 (Meters)",32144:"NAD 1983 StatePlane Utah South FIPS 4303 (Meters)",32145:"NAD 1983 StatePlane Vermont FIPS 4400 (Meters)",32146:"NAD 1983 StatePlane Virginia North FIPS 4501 (Meters)",32147:"NAD 1983 StatePlane Virginia South FIPS 4502 (Meters)",32148:"NAD 1983 StatePlane Washington North FIPS 4601 (Meters)",32149:"NAD 1983 StatePlane Washington South FIPS 4602 (Meters)",32150:"NAD 1983 StatePlane West Virginia N FIPS 4701 (Meters)",32151:"NAD 1983 StatePlane West Virginia S FIPS 4702 (Meters)",32153:"NAD 1983 StatePlane Wisconsin Central FIPS 4802 (Meters)",32152:"NAD 1983 StatePlane Wisconsin North FIPS 4801 (Meters)",32154:"NAD 1983 StatePlane Wisconsin South FIPS 4803 (Meters)",32156:"NAD 1983 StatePlane Wyoming E Central FIPS 4902 (Meters)",32155:"NAD 1983 StatePlane Wyoming East FIPS 4901 (Meters)",32157:"NAD 1983 StatePlane Wyoming W Central FIPS 4903 (Meters)",32158:"NAD 1983 StatePlane Wyoming West FIPS 4904 (Meters)"},"NAD 1983 (PA11) (Meters)":{6628:"NAD 1983 (PA11) StatePlane Hawaii 1 FIPS 5101 (Meters)",6629:"NAD 1983 (PA11) StatePlane Hawaii 2 FIPS 5102 (Meters)",6630:"NAD 1983 (PA11) StatePlane Hawaii 3 FIPS 5103 (Meters)",6631:"NAD 1983 (PA11) StatePlane Hawaii 4 FIPS 5104 (Meters)",6632:"NAD 1983 (PA11) StatePlane Hawaii 5 FIPS 5105 (Meters)"},"NAD 1983 (PA11) (US Feet)":{102525:"NAD 1983 (PA11) StatePlane Hawaii 1 FIPS 5101 (US Feet)",102526:"NAD 1983 (PA11) StatePlane Hawaii 2 FIPS 5102 (US Feet)",6633:"NAD 1983 (PA11) StatePlane Hawaii 3 FIPS 5103 (US Feet)",102528:"NAD 1983 (PA11) StatePlane Hawaii 4 FIPS 5104 (US Feet)",102529:"NAD 1983 (PA11) StatePlane Hawaii 5 FIPS 5105 (US Feet)"},"NAD 1983 (US Feet)":{102629:"NAD 1983 StatePlane Alabama East FIPS 0101 (US Feet)",102630:"NAD 1983 StatePlane Alabama West FIPS 0102 (US Feet)",102631:"NAD 1983 StatePlane Alaska  1 FIPS 5001 (US Feet)",102632:"NAD 1983 StatePlane Alaska  2 FIPS 5002 (US Feet)",102633:"NAD 1983 StatePlane Alaska  3 FIPS 5003 (US Feet)",102634:"NAD 1983 StatePlane Alaska  4 FIPS 5004 (US Feet)",102635:"NAD 1983 StatePlane Alaska  5 FIPS 5005 (US Feet)",102636:"NAD 1983 StatePlane Alaska  6 FIPS 5006 (US Feet)",102637:"NAD 1983 StatePlane Alaska  7 FIPS 5007 (US Feet)",102638:"NAD 1983 StatePlane Alaska  8 FIPS 5008 (US Feet)",102639:"NAD 1983 StatePlane Alaska  9 FIPS 5009 (US Feet)",102640:"NAD 1983 StatePlane Alaska 10 FIPS 5010 (US Feet)",102649:"NAD 1983 StatePlane Arizona Central FIPS 0202 (US Feet)",102648:"NAD 1983 StatePlane Arizona East FIPS 0201 (US Feet)",102650:"NAD 1983 StatePlane Arizona West FIPS 0203 (US Feet)",3433:"NAD 1983 StatePlane Arkansas North FIPS 0301 (US Feet)",3434:"NAD 1983 StatePlane Arkansas South FIPS 0302 (US Feet)",2225:"NAD 1983 StatePlane California I FIPS 0401 (US Feet)",2226:"NAD 1983 StatePlane California II FIPS 0402 (US Feet)",2227:"NAD 1983 StatePlane California III FIPS 0403 (US Feet)",2228:"NAD 1983 StatePlane California IV FIPS 0404 (US Feet)",2229:"NAD 1983 StatePlane California V FIPS 0405 (US Feet)",2230:"NAD 1983 StatePlane California VI FIPS 0406 (US Feet)",2232:"NAD 1983 StatePlane Colorado Central FIPS 0502 (US Feet)",2231:"NAD 1983 StatePlane Colorado North FIPS 0501 (US Feet)",2233:"NAD 1983 StatePlane Colorado South FIPS 0503 (US Feet)",2234:"NAD 1983 StatePlane Connecticut FIPS 0600 (US Feet)",2235:"NAD 1983 StatePlane Delaware FIPS 0700 (US Feet)",2236:"NAD 1983 StatePlane Florida East FIPS 0901 (US Feet)",2238:"NAD 1983 StatePlane Florida North FIPS 0903 (US Feet)",2237:"NAD 1983 StatePlane Florida West FIPS 0902 (US Feet)",2239:"NAD 1983 StatePlane Georgia East FIPS 1001 (US Feet)",2240:"NAD 1983 StatePlane Georgia West FIPS 1002 (US Feet)",102766:"NAD 1983 StatePlane Guam FIPS 5400 (US Feet)",102661:"NAD 1983 StatePlane Hawaii 1 FIPS 5101 (US Feet)",102662:"NAD 1983 StatePlane Hawaii 2 FIPS 5102 (US Feet)",3759:"NAD 1983 StatePlane Hawaii 3 FIPS 5103 (US Feet)",102664:"NAD 1983 StatePlane Hawaii 4 FIPS 5104 (US Feet)",102665:"NAD 1983 StatePlane Hawaii 5 FIPS 5105 (US Feet)",2242:"NAD 1983 StatePlane Idaho Central FIPS 1102 (US Feet)",2241:"NAD 1983 StatePlane Idaho East FIPS 1101 (US Feet)",2243:"NAD 1983 StatePlane Idaho West FIPS 1103 (US Feet)",3435:"NAD 1983 StatePlane Illinois East FIPS 1201 (US Feet)",3436:"NAD 1983 StatePlane Illinois West FIPS 1202 (US Feet)",2965:"NAD 1983 StatePlane Indiana East FIPS 1301 (US Feet)",2966:"NAD 1983 StatePlane Indiana West FIPS 1302 (US Feet)",3417:"NAD 1983 StatePlane Iowa North FIPS 1401 (US Feet)",3418:"NAD 1983 StatePlane Iowa South FIPS 1402 (US Feet)",3419:"NAD 1983 StatePlane Kansas North FIPS 1501 (US Feet)",3420:"NAD 1983 StatePlane Kansas South FIPS 1502 (US Feet)",3089:"NAD 1983 StatePlane Kentucky FIPS 1600 (US Feet)",2246:"NAD 1983 StatePlane Kentucky North FIPS 1601 (US Feet)",2247:"NAD 1983 StatePlane Kentucky South FIPS 1602 (US Feet)",3451:"NAD 1983 StatePlane Louisiana North FIPS 1701 (US Feet)",3453:"NAD 1983 StatePlane Louisiana Offshore FIPS 1703 (US Feet)",3452:"NAD 1983 StatePlane Louisiana South FIPS 1702 (US Feet)",26847:"NAD 1983 StatePlane Maine East FIPS 1801 (US Feet)",26848:"NAD 1983 StatePlane Maine West FIPS 1802 (US Feet)",2248:"NAD 1983 StatePlane Maryland FIPS 1900 (US Feet)",2249:"NAD 1983 StatePlane Massachusetts FIPS 2001 (US Feet)",2250:"NAD 1983 StatePlane Massachusetts Isl FIPS 2002 (US Feet)",102689:"NAD 1983 StatePlane Michigan Central FIPS 2112 (US Feet)",102688:"NAD 1983 StatePlane Michigan North FIPS 2111 (US Feet)",102690:"NAD 1983 StatePlane Michigan South FIPS 2113 (US Feet)",26850:"NAD 1983 StatePlane Minnesota Central FIPS 2202 (US Feet)",26849:"NAD 1983 StatePlane Minnesota North FIPS 2201 (US Feet)",26851:"NAD 1983 StatePlane Minnesota South FIPS 2203 (US Feet)",2254:"NAD 1983 StatePlane Mississippi East FIPS 2301 (US Feet)",2255:"NAD 1983 StatePlane Mississippi West FIPS 2302 (US Feet)",102697:"NAD 1983 StatePlane Missouri Central FIPS 2402 (US Feet)",102696:"NAD 1983 StatePlane Missouri East FIPS 2401 (US Feet)",102698:"NAD 1983 StatePlane Missouri West FIPS 2403 (US Feet)",102700:"NAD 1983 StatePlane Montana FIPS 2500 (US Feet)",26852:"NAD 1983 StatePlane Nebraska FIPS 2600 (US Feet)",3422:"NAD 1983 StatePlane Nevada Central FIPS 2702 (US Feet)",3421:"NAD 1983 StatePlane Nevada East FIPS 2701 (US Feet)",3423:"NAD 1983 StatePlane Nevada West FIPS 2703 (US Feet)",3437:"NAD 1983 StatePlane New Hampshire FIPS 2800 (US Feet)",3424:"NAD 1983 StatePlane New Jersey FIPS 2900 (US Feet)",2258:"NAD 1983 StatePlane New Mexico Central FIPS 3002 (US Feet)",2257:"NAD 1983 StatePlane New Mexico East FIPS 3001 (US Feet)",2259:"NAD 1983 StatePlane New Mexico West FIPS 3003 (US Feet)",2261:"NAD 1983 StatePlane New York Central FIPS 3102 (US Feet)",2260:"NAD 1983 StatePlane New York East FIPS 3101 (US Feet)",2263:"NAD 1983 StatePlane New York Long Isl FIPS 3104 (US Feet)",2262:"NAD 1983 StatePlane New York West FIPS 3103 (US Feet)",2264:"NAD 1983 StatePlane North Carolina FIPS 3200 (US Feet)",102720:"NAD 1983 StatePlane North Dakota N FIPS 3301 (US Feet)",102721:"NAD 1983 StatePlane North Dakota S FIPS 3302 (US Feet)",3734:"NAD 1983 StatePlane Ohio North FIPS 3401 (US Feet)",3735:"NAD 1983 StatePlane Ohio South FIPS 3402 (US Feet)",2267:"NAD 1983 StatePlane Oklahoma North FIPS 3501 (US Feet)",2268:"NAD 1983 StatePlane Oklahoma South FIPS 3502 (US Feet)",102726:"NAD 1983 StatePlane Oregon North FIPS 3601 (US Feet)",102727:"NAD 1983 StatePlane Oregon South FIPS 3602 (US Feet)",2271:"NAD 1983 StatePlane Pennsylvania North FIPS 3701 (US Feet)",2272:"NAD 1983 StatePlane Pennsylvania South FIPS 3702 (US Feet)",102761:"NAD 1983 StatePlane Puerto Rico Virgin Isl FIPS 5200 (US Feet)",3438:"NAD 1983 StatePlane Rhode Island FIPS 3800 (US Feet)",102733:"NAD 1983 StatePlane South Carolina FIPS 3900 (US Feet)",4457:"NAD 1983 StatePlane South Dakota N FIPS 4001 (US Feet)",3455:"NAD 1983 StatePlane South Dakota S FIPS 4002 (US Feet)",2274:"NAD 1983 StatePlane Tennessee FIPS 4100 (US Feet)",2277:"NAD 1983 StatePlane Texas Central FIPS 4203 (US Feet)",2276:"NAD 1983 StatePlane Texas N Central FIPS 4202 (US Feet)",2275:"NAD 1983 StatePlane Texas North FIPS 4201 (US Feet)",2278:"NAD 1983 StatePlane Texas S Central FIPS 4204 (US Feet)",2279:"NAD 1983 StatePlane Texas South FIPS 4205 (US Feet)",3566:"NAD 1983 StatePlane Utah Central FIPS 4302 (US Feet)",3560:"NAD 1983 StatePlane Utah North FIPS 4301 (US Feet)",3567:"NAD 1983 StatePlane Utah South FIPS 4303 (US Feet)",5646:"NAD 1983 StatePlane Vermont FIPS 4400 (US Feet)",2283:"NAD 1983 StatePlane Virginia North FIPS 4501 (US Feet)",2284:"NAD 1983 StatePlane Virginia South FIPS 4502 (US Feet)",2285:"NAD 1983 StatePlane Washington North FIPS 4601 (US Feet)",2286:"NAD 1983 StatePlane Washington South FIPS 4602 (US Feet)",26853:"NAD 1983 StatePlane West Virginia N FIPS 4701 (US Feet)",26854:"NAD 1983 StatePlane West Virginia S FIPS 4702 (US Feet)",2288:"NAD 1983 StatePlane Wisconsin Central FIPS 4802 (US Feet)",2287:"NAD 1983 StatePlane Wisconsin North FIPS 4801 (US Feet)",2289:"NAD 1983 StatePlane Wisconsin South FIPS 4803 (US Feet)",3737:"NAD 1983 StatePlane Wyoming E Central FIPS 4902 (US Feet)",3736:"NAD 1983 StatePlane Wyoming East FIPS 4901 (US Feet)",3738:"NAD 1983 StatePlane Wyoming W Central FIPS 4903 (US Feet)",3739:"NAD 1983 StatePlane Wyoming West FIPS 4904 (US Feet)"},"NAD 1983 HARN (Intl Feet)":{2868:"NAD 1983 HARN StatePlane Arizona Central FIPS 0202 (Intl Feet)",2867:"NAD 1983 HARN StatePlane Arizona East FIPS 0201 (Intl Feet)",2869:"NAD 1983 HARN StatePlane Arizona West FIPS 0203 (Intl Feet)",2897:"NAD 1983 HARN StatePlane Michigan Central FIPS 2112 (Intl Feet)",2896:"NAD 1983 HARN StatePlane Michigan North FIPS 2111 (Intl Feet)",2898:"NAD 1983 HARN StatePlane Michigan South FIPS 2113 (Intl Feet)",2901:"NAD 1983 HARN StatePlane Montana FIPS 2500 (Intl Feet)",2909:"NAD 1983 HARN StatePlane North Dakota N FIPS 3301 (Intl Feet)",2910:"NAD 1983 HARN StatePlane North Dakota S FIPS 3302 (Intl Feet)",2913:"NAD 1983 HARN StatePlane Oregon North FIPS 3601 (Intl Feet)",2914:"NAD 1983 HARN StatePlane Oregon South FIPS 3602 (Intl Feet)",3361:"NAD 1983 HARN StatePlane South Carolina FIPS 3900 (Intl Feet)",2922:"NAD 1983 HARN StatePlane Utah Central FIPS 4302 (Intl Feet)",2921:"NAD 1983 HARN StatePlane Utah North FIPS 4301 (Intl Feet)",2923:"NAD 1983 HARN StatePlane Utah South FIPS 4303 (Intl Feet)"},"NAD 1983 HARN (Meters)":{3464:"NAD 1983 HARN Maine 2000 Central Zone (Meters)",3075:"NAD 1983 HARN Maine 2000 East Zone (Meters)",3077:"NAD 1983 HARN Maine 2000 West Zone (Meters)",2759:"NAD 1983 HARN StatePlane Alabama East FIPS 0101 (Meters)",2760:"NAD 1983 HARN StatePlane Alabama West FIPS 0102 (Meters)",2762:"NAD 1983 HARN StatePlane Arizona Central FIPS 0202 (Meters)",2761:"NAD 1983 HARN StatePlane Arizona East FIPS 0201 (Meters)",2763:"NAD 1983 HARN StatePlane Arizona West FIPS 0203 (Meters)",2764:"NAD 1983 HARN StatePlane Arkansas North FIPS 0301 (Meters)",2765:"NAD 1983 HARN StatePlane Arkansas South FIPS 0302 (Meters)",2766:"NAD 1983 HARN StatePlane California I FIPS 0401 (Meters)",2767:"NAD 1983 HARN StatePlane California II FIPS 0402 (Meters)",2768:"NAD 1983 HARN StatePlane California III FIPS 0403 (Meters)",2769:"NAD 1983 HARN StatePlane California IV FIPS 0404 (Meters)",2770:"NAD 1983 HARN StatePlane California V FIPS 0405 (Meters)",2771:"NAD 1983 HARN StatePlane California VI FIPS 0406 (Meters)",2773:"NAD 1983 HARN StatePlane Colorado Central FIPS 0502 (Meters)",2772:"NAD 1983 HARN StatePlane Colorado North FIPS 0501 (Meters)",2774:"NAD 1983 HARN StatePlane Colorado South FIPS 0503 (Meters)",2775:"NAD 1983 HARN StatePlane Connecticut FIPS 0600 (Meters)",2776:"NAD 1983 HARN StatePlane Delaware FIPS 0700 (Meters)",2777:"NAD 1983 HARN StatePlane Florida East FIPS 0901 (Meters)",2779:"NAD 1983 HARN StatePlane Florida North FIPS 0903 (Meters)",2778:"NAD 1983 HARN StatePlane Florida West FIPS 0902 (Meters)",2780:"NAD 1983 HARN StatePlane Georgia East FIPS 1001 (Meters)",2781:"NAD 1983 HARN StatePlane Georgia West FIPS 1002 (Meters)",2782:"NAD 1983 HARN StatePlane Hawaii 1 FIPS 5101 (Meters)",2783:"NAD 1983 HARN StatePlane Hawaii 2 FIPS 5102 (Meters)",2784:"NAD 1983 HARN StatePlane Hawaii 3 FIPS 5103 (Meters)",2785:"NAD 1983 HARN StatePlane Hawaii 4 FIPS 5104 (Meters)",2786:"NAD 1983 HARN StatePlane Hawaii 5 FIPS 5105 (Meters)",2788:"NAD 1983 HARN StatePlane Idaho Central FIPS 1102 (Meters)",2787:"NAD 1983 HARN StatePlane Idaho East FIPS 1101 (Meters)",2789:"NAD 1983 HARN StatePlane Idaho West FIPS 1103 (Meters)",2790:"NAD 1983 HARN StatePlane Illinois East FIPS 1201 (Meters)",2791:"NAD 1983 HARN StatePlane Illinois West FIPS 1202 (Meters)",2792:"NAD 1983 HARN StatePlane Indiana East FIPS 1301 (Meters)",2793:"NAD 1983 HARN StatePlane Indiana West FIPS 1302 (Meters)",2794:"NAD 1983 HARN StatePlane Iowa North FIPS 1401 (Meters)",2795:"NAD 1983 HARN StatePlane Iowa South FIPS 1402 (Meters)",2796:"NAD 1983 HARN StatePlane Kansas North FIPS 1501 (Meters)",2797:"NAD 1983 HARN StatePlane Kansas South FIPS 1502 (Meters)",3090:"NAD 1983 HARN StatePlane Kentucky FIPS 1600 (Meters)",2798:"NAD 1983 HARN StatePlane Kentucky North FIPS 1601 (Meters)",2799:"NAD 1983 HARN StatePlane Kentucky South FIPS 1602 (Meters)",2800:"NAD 1983 HARN StatePlane Louisiana North FIPS 1701 (Meters)",2801:"NAD 1983 HARN StatePlane Louisiana South FIPS 1702 (Meters)",2802:"NAD 1983 HARN StatePlane Maine East FIPS 1801 (Meters)",2803:"NAD 1983 HARN StatePlane Maine West FIPS 1802 (Meters)",2804:"NAD 1983 HARN StatePlane Maryland FIPS 1900 (Meters)",2805:"NAD 1983 HARN StatePlane Massachusetts FIPS 2001 (Meters)",2806:"NAD 1983 HARN StatePlane Massachusetts Isl FIPS 2002 (Meters)",2808:"NAD 1983 HARN StatePlane Michigan Central FIPS 2112 (Meters)",2807:"NAD 1983 HARN StatePlane Michigan North FIPS 2111 (Meters)",2809:"NAD 1983 HARN StatePlane Michigan South FIPS 2113 (Meters)",2811:"NAD 1983 HARN StatePlane Minnesota Central FIPS 2202 (Meters)",2810:"NAD 1983 HARN StatePlane Minnesota North FIPS 2201 (Meters)",2812:"NAD 1983 HARN StatePlane Minnesota South FIPS 2203 (Meters)",2813:"NAD 1983 HARN StatePlane Mississippi East FIPS 2301 (Meters)",2814:"NAD 1983 HARN StatePlane Mississippi West FIPS 2302 (Meters)",2816:"NAD 1983 HARN StatePlane Missouri Central FIPS 2402 (Meters)",2815:"NAD 1983 HARN StatePlane Missouri East FIPS 2401 (Meters)",2817:"NAD 1983 HARN StatePlane Missouri West FIPS 2403 (Meters)",2818:"NAD 1983 HARN StatePlane Montana FIPS 2500 (Meters)",2819:"NAD 1983 HARN StatePlane Nebraska FIPS 2600 (Meters)",2821:"NAD 1983 HARN StatePlane Nevada Central FIPS 2702 (Meters)",2820:"NAD 1983 HARN StatePlane Nevada East FIPS 2701 (Meters)",2822:"NAD 1983 HARN StatePlane Nevada West FIPS 2703 (Meters)",2823:"NAD 1983 HARN StatePlane New Hampshire FIPS 2800 (Meters)",2824:"NAD 1983 HARN StatePlane New Jersey FIPS 2900 (Meters)",2826:"NAD 1983 HARN StatePlane New Mexico Central FIPS 3002 (Meters)",2825:"NAD 1983 HARN StatePlane New Mexico East FIPS 3001 (Meters)",2827:"NAD 1983 HARN StatePlane New Mexico West FIPS 3003 (Meters)",2829:"NAD 1983 HARN StatePlane New York Central FIPS 3102 (Meters)",2828:"NAD 1983 HARN StatePlane New York East FIPS 3101 (Meters)",2831:"NAD 1983 HARN StatePlane New York Long Isl FIPS 3104 (Meters)",2830:"NAD 1983 HARN StatePlane New York West FIPS 3103 (Meters)",3358:"NAD 1983 HARN StatePlane North Carolina FIPS 3200 (Meters)",2832:"NAD 1983 HARN StatePlane North Dakota N FIPS 3301 (Meters)",2833:"NAD 1983 HARN StatePlane North Dakota S FIPS 3302 (Meters)",2834:"NAD 1983 HARN StatePlane Ohio North FIPS 3401 (Meters)",2835:"NAD 1983 HARN StatePlane Ohio South FIPS 3402 (Meters)",2836:"NAD 1983 HARN StatePlane Oklahoma North FIPS 3501 (Meters)",2837:"NAD 1983 HARN StatePlane Oklahoma South FIPS 3502 (Meters)",2838:"NAD 1983 HARN StatePlane Oregon North FIPS 3601 (Meters)",2839:"NAD 1983 HARN StatePlane Oregon South FIPS 3602 (Meters)",2866:"NAD 1983 HARN StatePlane PR VI FIPS 5200 (Meters)",3362:"NAD 1983 HARN StatePlane Pennsylvania North FIPS 3701 (Meters)",3364:"NAD 1983 HARN StatePlane Pennsylvania South FIPS 3702 (Meters)",2840:"NAD 1983 HARN StatePlane Rhode Island FIPS 3800 (Meters)",3360:"NAD 1983 HARN StatePlane South Carolina FIPS 3900 (Meters)",2841:"NAD 1983 HARN StatePlane South Dakota N FIPS 4001 (Meters)",2842:"NAD 1983 HARN StatePlane South Dakota S FIPS 4002 (Meters)",2843:"NAD 1983 HARN StatePlane Tennessee FIPS 4100 (Meters)",2846:"NAD 1983 HARN StatePlane Texas Central FIPS 4203 (Meters)",2845:"NAD 1983 HARN StatePlane Texas N Central FIPS 4202 (Meters)",2844:"NAD 1983 HARN StatePlane Texas North FIPS 4201 (Meters)",2847:"NAD 1983 HARN StatePlane Texas S Central FIPS 4204 (Meters)",2848:"NAD 1983 HARN StatePlane Texas South FIPS 4205 (Meters)",2850:"NAD 1983 HARN StatePlane Utah Central FIPS 4302 (Meters)",2849:"NAD 1983 HARN StatePlane Utah North FIPS 4301 (Meters)",2851:"NAD 1983 HARN StatePlane Utah South FIPS 4303 (Meters)",2852:"NAD 1983 HARN StatePlane Vermont FIPS 4400 (Meters)",2853:"NAD 1983 HARN StatePlane Virginia North FIPS 4501 (Meters)",2854:"NAD 1983 HARN StatePlane Virginia South FIPS 4502 (Meters)",2855:"NAD 1983 HARN StatePlane Washington North FIPS 4601 (Meters)",2856:"NAD 1983 HARN StatePlane Washington South FIPS 4602 (Meters)",2857:"NAD 1983 HARN StatePlane West Virginia N FIPS 4701 (Meters)",2858:"NAD 1983 HARN StatePlane West Virginia S FIPS 4702 (Meters)",2860:"NAD 1983 HARN StatePlane Wisconsin Central FIPS 4802 (Meters)",2859:"NAD 1983 HARN StatePlane Wisconsin North FIPS 4801 (Meters)",2861:"NAD 1983 HARN StatePlane Wisconsin South FIPS 4803 (Meters)",2863:"NAD 1983 HARN StatePlane Wyoming E Central FIPS 4902 (Meters)",2862:"NAD 1983 HARN StatePlane Wyoming East FIPS 4901 (Meters)",2864:"NAD 1983 HARN StatePlane Wyoming W Central FIPS 4903 (Meters)",2865:"NAD 1983 HARN StatePlane Wyoming West FIPS 4904 (Meters)"},"NAD 1983 HARN (US Feet)":{102041:"City Of Bellevue NAD83 2007",3441:"NAD 1983 HARN StatePlane Arkansas North FIPS 0301 (US Feet)",3442:"NAD 1983 HARN StatePlane Arkansas South FIPS 0302 (US Feet)",2870:"NAD 1983 HARN StatePlane California I FIPS 0401 (US Feet)",2871:"NAD 1983 HARN StatePlane California II FIPS 0402 (US Feet)",2872:"NAD 1983 HARN StatePlane California III FIPS 0403 (US Feet)",2873:"NAD 1983 HARN StatePlane California IV FIPS 0404 (US Feet)",2874:"NAD 1983 HARN StatePlane California V FIPS 0405 (US Feet)",2875:"NAD 1983 HARN StatePlane California VI FIPS 0406 (US Feet)",2877:"NAD 1983 HARN StatePlane Colorado Central FIPS 0502 (US Feet)",2876:"NAD 1983 HARN StatePlane Colorado North FIPS 0501 (US Feet)",2878:"NAD 1983 HARN StatePlane Colorado South FIPS 0503 (US Feet)",2879:"NAD 1983 HARN StatePlane Connecticut FIPS 0600 (US Feet)",2880:"NAD 1983 HARN StatePlane Delaware FIPS 0700 (US Feet)",2881:"NAD 1983 HARN StatePlane Florida East FIPS 0901 (US Feet)",2883:"NAD 1983 HARN StatePlane Florida North FIPS 0903 (US Feet)",2882:"NAD 1983 HARN StatePlane Florida West FIPS 0902 (US Feet)",2884:"NAD 1983 HARN StatePlane Georgia East FIPS 1001 (US Feet)",2885:"NAD 1983 HARN StatePlane Georgia West FIPS 1002 (US Feet)",102461:"NAD 1983 HARN StatePlane Hawaii 1 FIPS 5101 (US Feet)",102462:"NAD 1983 HARN StatePlane Hawaii 2 FIPS 5102 (US Feet)",3760:"NAD 1983 HARN StatePlane Hawaii 3 FIPS 5103 (US Feet)",102464:"NAD 1983 HARN StatePlane Hawaii 4 FIPS 5104 (US Feet)",102465:"NAD 1983 HARN StatePlane Hawaii 5 FIPS 5105 (US Feet)",2887:"NAD 1983 HARN StatePlane Idaho Central FIPS 1102 (US Feet)",2886:"NAD 1983 HARN StatePlane Idaho East FIPS 1101 (US Feet)",2888:"NAD 1983 HARN StatePlane Idaho West FIPS 1103 (US Feet)",3443:"NAD 1983 HARN StatePlane Illinois East FIPS 1201 (US Feet)",3444:"NAD 1983 HARN StatePlane Illinois West FIPS 1202 (US Feet)",2967:"NAD 1983 HARN StatePlane Indiana East FIPS 1301 (US Feet)",2968:"NAD 1983 HARN StatePlane Indiana West FIPS 1302 (US Feet)",3425:"NAD 1983 HARN StatePlane Iowa North FIPS 1401 (US Feet)",3426:"NAD 1983 HARN StatePlane Iowa South FIPS 1402 (US Feet)",3427:"NAD 1983 HARN StatePlane Kansas North FIPS 1501 (US Feet)",3428:"NAD 1983 HARN StatePlane Kansas South FIPS 1502 (US Feet)",3091:"NAD 1983 HARN StatePlane Kentucky FIPS 1600 (US Feet)",2891:"NAD 1983 HARN StatePlane Kentucky North FIPS 1601 (US Feet)",2892:"NAD 1983 HARN StatePlane Kentucky South FIPS 1602 (US Feet)",3456:"NAD 1983 HARN StatePlane Louisiana North FIPS 1701 (US Feet)",3457:"NAD 1983 HARN StatePlane Louisiana South FIPS 1702 (US Feet)",26855:"NAD 1983 HARN StatePlane Maine East FIPS 1801 (US Feet)",26856:"NAD 1983 HARN StatePlane Maine West FIPS 1802 (US Feet)",2893:"NAD 1983 HARN StatePlane Maryland FIPS 1900 (US Feet)",2894:"NAD 1983 HARN StatePlane Massachusetts FIPS 2001 (US Feet)",2895:"NAD 1983 HARN StatePlane Massachusetts Isl FIPS 2002 (US Feet)",26858:"NAD 1983 HARN StatePlane Minnesota Central FIPS 2202 (US Feet)",26857:"NAD 1983 HARN StatePlane Minnesota North FIPS 2201 (US Feet)",26859:"NAD 1983 HARN StatePlane Minnesota South FIPS 2203 (US Feet)",2899:"NAD 1983 HARN StatePlane Mississippi East FIPS 2301 (US Feet)",2900:"NAD 1983 HARN StatePlane Mississippi West FIPS 2302 (US Feet)",26860:"NAD 1983 HARN StatePlane Nebraska FIPS 2600 (US Feet)",3430:"NAD 1983 HARN StatePlane Nevada Central FIPS 2702 (US Feet)",3429:"NAD 1983 HARN StatePlane Nevada East FIPS 2701 (US Feet)",3431:"NAD 1983 HARN StatePlane Nevada West FIPS 2703 (US Feet)",3445:"NAD 1983 HARN StatePlane New Hampshire FIPS 2800 (US Feet)",3432:"NAD 1983 HARN StatePlane New Jersey FIPS 2900 (US Feet)",2903:"NAD 1983 HARN StatePlane New Mexico Central FIPS 3002 (US Feet)",2902:"NAD 1983 HARN StatePlane New Mexico East FIPS 3001 (US Feet)",2904:"NAD 1983 HARN StatePlane New Mexico West FIPS 3003 (US Feet)",2906:"NAD 1983 HARN StatePlane New York Central FIPS 3102 (US Feet)",2905:"NAD 1983 HARN StatePlane New York East FIPS 3101 (US Feet)",2908:"NAD 1983 HARN StatePlane New York Long Isl FIPS 3104 (US Feet)",2907:"NAD 1983 HARN StatePlane New York West FIPS 3103 (US Feet)",3404:"NAD 1983 HARN StatePlane North Carolina FIPS 3200 (US Feet)",3753:"NAD 1983 HARN StatePlane Ohio North FIPS 3401 (US Feet)",3754:"NAD 1983 HARN StatePlane Ohio South FIPS 3402 (US Feet)",2911:"NAD 1983 HARN StatePlane Oklahoma North FIPS 3501 (US Feet)",2912:"NAD 1983 HARN StatePlane Oklahoma South FIPS 3502 (US Feet)",3363:"NAD 1983 HARN StatePlane Pennsylvania North FIPS 3701 (US Feet)",3365:"NAD 1983 HARN StatePlane Pennsylvania South FIPS 3702 (US Feet)",3446:"NAD 1983 HARN StatePlane Rhode Island FIPS 3800 (US Feet)",3458:"NAD 1983 HARN StatePlane South Dakota N FIPS 4001 (US Feet)",3459:"NAD 1983 HARN StatePlane South Dakota S FIPS 4002 (US Feet)",2915:"NAD 1983 HARN StatePlane Tennessee FIPS 4100 (US Feet)",2918:"NAD 1983 HARN StatePlane Texas Central FIPS 4203 (US Feet)",2917:"NAD 1983 HARN StatePlane Texas N Central FIPS 4202 (US Feet)",2916:"NAD 1983 HARN StatePlane Texas North FIPS 4201 (US Feet)",2919:"NAD 1983 HARN StatePlane Texas S Central FIPS 4204 (US Feet)",2920:"NAD 1983 HARN StatePlane Texas South FIPS 4205 (US Feet)",3569:"NAD 1983 HARN StatePlane Utah Central FIPS 4302 (US Feet)",3568:"NAD 1983 HARN StatePlane Utah North FIPS 4301 (US Feet)",3570:"NAD 1983 HARN StatePlane Utah South FIPS 4303 (US Feet)",5654:"NAD 1983 HARN StatePlane Vermont FIPS 4400 (US Feet)",2924:"NAD 1983 HARN StatePlane Virginia North FIPS 4501 (US Feet)",2925:"NAD 1983 HARN StatePlane Virginia South FIPS 4502 (US Feet)",2926:"NAD 1983 HARN StatePlane Washington North FIPS 4601 (US Feet)",2927:"NAD 1983 HARN StatePlane Washington South FIPS 4602 (US Feet)",26861:"NAD 1983 HARN StatePlane West Virginia N FIPS 4701 (US Feet)",26862:"NAD 1983 HARN StatePlane West Virginia S FIPS 4702 (US Feet)",2929:"NAD 1983 HARN StatePlane Wisconsin Central FIPS 4802 (US Feet)",2928:"NAD 1983 HARN StatePlane Wisconsin North FIPS 4801 (US Feet)",2930:"NAD 1983 HARN StatePlane Wisconsin South FIPS 4803 (US Feet)",3756:"NAD 1983 HARN StatePlane Wyoming E Central FIPS 4902 (US Feet)",3755:"NAD 1983 HARN StatePlane Wyoming East FIPS 4901 (US Feet)",3757:"NAD 1983 HARN StatePlane Wyoming W Central FIPS 4903 (US Feet)",3758:"NAD 1983 HARN StatePlane Wyoming West FIPS 4904 (US Feet)"},"NAD 1983 NSRS2007 (Intl Feet)":{3479:"NAD 1983 NSRS2007 StatePlane Arizona Central FIPS 0202 (Intl Feet)",3481:"NAD 1983 NSRS2007 StatePlane Arizona East FIPS 0201 (Intl Feet)",3483:"NAD 1983 NSRS2007 StatePlane Arizona West FIPS 0203 (Intl Feet)",3588:"NAD 1983 NSRS2007 StatePlane Michigan Central FIPS 2112 (Intl Feet)",3590:"NAD 1983 NSRS2007 StatePlane Michigan North FIPS 2111 (Intl Feet)",3593:"NAD 1983 NSRS2007 StatePlane Michigan South FIPS 2113 (Intl Feet)",3605:"NAD 1983 NSRS2007 StatePlane Montana FIPS 2500 (Intl Feet)",3634:"NAD 1983 NSRS2007 StatePlane North Dakota N FIPS 3301 (Intl Feet)",3636:"NAD 1983 NSRS2007 StatePlane North Dakota S FIPS 3302 (Intl Feet)",3646:"NAD 1983 NSRS2007 StatePlane Oregon North FIPS 3601 (Intl Feet)",3648:"NAD 1983 NSRS2007 StatePlane Oregon South FIPS 3602 (Intl Feet)",3656:"NAD 1983 NSRS2007 StatePlane South Carolina FIPS 3900 (Intl Feet)",3676:"NAD 1983 NSRS2007 StatePlane Utah Central FIPS 4302 (Intl Feet)",3679:"NAD 1983 NSRS2007 StatePlane Utah North FIPS 4301 (Intl Feet)",3682:"NAD 1983 NSRS2007 StatePlane Utah South FIPS 4303 (Intl Feet)"},"NAD 1983 NSRS2007 (Meters)":{3554:"NAD 1983 NSRS2007 Maine 2000 Central Zone (Meters)",3555:"NAD 1983 NSRS2007 Maine 2000 East Zone (Meters)",3556:"NAD 1983 NSRS2007 Maine 2000 West Zone (Meters)",3465:"NAD 1983 NSRS2007 StatePlane Alabama East FIPS 0101 (Meters)",3466:"NAD 1983 NSRS2007 StatePlane Alabama West FIPS 0102 (Meters)",3468:"NAD 1983 NSRS2007 StatePlane Alaska  1 FIPS 5001 (Meters)",3469:"NAD 1983 NSRS2007 StatePlane Alaska  2 FIPS 5002 (Meters)",3470:"NAD 1983 NSRS2007 StatePlane Alaska  3 FIPS 5003 (Meters)",3471:"NAD 1983 NSRS2007 StatePlane Alaska  4 FIPS 5004 (Meters)",3472:"NAD 1983 NSRS2007 StatePlane Alaska  5 FIPS 5005 (Meters)",3473:"NAD 1983 NSRS2007 StatePlane Alaska  6 FIPS 5006 (Meters)",3474:"NAD 1983 NSRS2007 StatePlane Alaska  7 FIPS 5007 (Meters)",3475:"NAD 1983 NSRS2007 StatePlane Alaska  8 FIPS 5008 (Meters)",3476:"NAD 1983 NSRS2007 StatePlane Alaska  9 FIPS 5009 (Meters)",3477:"NAD 1983 NSRS2007 StatePlane Alaska 10 FIPS 5010 (Meters)",3478:"NAD 1983 NSRS2007 StatePlane Arizona Central FIPS 0202 (Meters)",3480:"NAD 1983 NSRS2007 StatePlane Arizona East FIPS 0201 (Meters)",3482:"NAD 1983 NSRS2007 StatePlane Arizona West FIPS 0203 (Meters)",3484:"NAD 1983 NSRS2007 StatePlane Arkansas North FIPS 0301 (Meters)",3486:"NAD 1983 NSRS2007 StatePlane Arkansas South FIPS 0302 (Meters)",3489:"NAD 1983 NSRS2007 StatePlane California I FIPS 0401 (Meters)",3491:"NAD 1983 NSRS2007 StatePlane California II FIPS 0402 (Meters)",3493:"NAD 1983 NSRS2007 StatePlane California III FIPS 0403 (Meters)",3495:"NAD 1983 NSRS2007 StatePlane California IV FIPS 0404 (Meters)",3497:"NAD 1983 NSRS2007 StatePlane California V FIPS 0405 (Meters)",3499:"NAD 1983 NSRS2007 StatePlane California VI FIPS 0406 (Meters)",3501:"NAD 1983 NSRS2007 StatePlane Colorado Central FIPS 0502 (Meter)",3503:"NAD 1983 NSRS2007 StatePlane Colorado North FIPS 0501 (Meters)",3505:"NAD 1983 NSRS2007 StatePlane Colorado South FIPS 0503 (Meters)",3507:"NAD 1983 NSRS2007 StatePlane Connecticut FIPS 0600 (Meters)",3509:"NAD 1983 NSRS2007 StatePlane Delaware FIPS 0700 (Meters)",3511:"NAD 1983 NSRS2007 StatePlane Florida East FIPS 0901 (Meters)",3514:"NAD 1983 NSRS2007 StatePlane Florida North FIPS 0903 (Meters)",3516:"NAD 1983 NSRS2007 StatePlane Florida West FIPS 0902 (Meters)",3518:"NAD 1983 NSRS2007 StatePlane Georgia East FIPS 1001 (Meters)",3520:"NAD 1983 NSRS2007 StatePlane Georgia West FIPS 1002 (Meters)",3522:"NAD 1983 NSRS2007 StatePlane Idaho Central FIPS 1102 (Meters)",3524:"NAD 1983 NSRS2007 StatePlane Idaho East FIPS 1101 (Meters)",3526:"NAD 1983 NSRS2007 StatePlane Idaho West FIPS 1103 (Meters)",3528:"NAD 1983 NSRS2007 StatePlane Illinois East FIPS 1201 (Meters)",3530:"NAD 1983 NSRS2007 StatePlane Illinois West FIPS 1202 (Meters)",3532:"NAD 1983 NSRS2007 StatePlane Indiana East FIPS 1301 (Meters)",3534:"NAD 1983 NSRS2007 StatePlane Indiana West FIPS 1302 (Meters)",3536:"NAD 1983 NSRS2007 StatePlane Iowa North FIPS 1401 (Meters)",3538:"NAD 1983 NSRS2007 StatePlane Iowa South FIPS 1402 (Meters)",3540:"NAD 1983 NSRS2007 StatePlane Kansas North FIPS 1501 (Meters)",3542:"NAD 1983 NSRS2007 StatePlane Kansas South FIPS 1502 (Meters)",3546:"NAD 1983 NSRS2007 StatePlane Kentucky FIPS 1600 (Meters)",3544:"NAD 1983 NSRS2007 StatePlane Kentucky North FIPS 1601 (Meters)",3548:"NAD 1983 NSRS2007 StatePlane Kentucky South FIPS 1602 (Meters)",3550:"NAD 1983 NSRS2007 StatePlane Louisiana North FIPS 1701 (Meters)",3552:"NAD 1983 NSRS2007 StatePlane Louisiana South FIPS 1702 (Meters)",3557:"NAD 1983 NSRS2007 StatePlane Maine East FIPS 1801 (Meters)",3558:"NAD 1983 NSRS2007 StatePlane Maine West FIPS 1802 (Meters)",3559:"NAD 1983 NSRS2007 StatePlane Maryland FIPS 1900 (Meters)",3585:"NAD 1983 NSRS2007 StatePlane Massachusetts FIPS 2001 (Meters)",3583:"NAD 1983 NSRS2007 StatePlane Massachusetts Isl FIPS 2002 (Meters)",3587:"NAD 1983 NSRS2007 StatePlane Michigan Central FIPS 2112 (Meters)",3589:"NAD 1983 NSRS2007 StatePlane Michigan North FIPS 2111 (Meters)",3592:"NAD 1983 NSRS2007 StatePlane Michigan South FIPS 2113 (Meters)",3594:"NAD 1983 NSRS2007 StatePlane Minnesota Central FIPS 2202 (Meters)",3595:"NAD 1983 NSRS2007 StatePlane Minnesota North FIPS 2201 (Meters)",3596:"NAD 1983 NSRS2007 StatePlane Minnesota South FIPS 2203 (Meters)",3597:"NAD 1983 NSRS2007 StatePlane Mississippi East FIPS 2301 (Meters)",3599:"NAD 1983 NSRS2007 StatePlane Mississippi West FIPS 2302 (Meters)",3601:"NAD 1983 NSRS2007 StatePlane Missouri Central FIPS 2402 (Meters)",3602:"NAD 1983 NSRS2007 StatePlane Missouri East FIPS 2401 (Meters)",3603:"NAD 1983 NSRS2007 StatePlane Missouri West FIPS 2403 (Meters)",3604:"NAD 1983 NSRS2007 StatePlane Montana FIPS 2500 (Meters)",3606:"NAD 1983 NSRS2007 StatePlane Nebraska FIPS 2600 (Meters)",3607:"NAD 1983 NSRS2007 StatePlane Nevada Central FIPS 2702 (Meters)",3609:"NAD 1983 NSRS2007 StatePlane Nevada East FIPS 2701 (Meters)",3611:"NAD 1983 NSRS2007 StatePlane Nevada West FIPS 2703 (Meters)",3613:"NAD 1983 NSRS2007 StatePlane New Hampshire FIPS 2800 (Meters)",3615:"NAD 1983 NSRS2007 StatePlane New Jersey FIPS 2900 (Meters)",3617:"NAD 1983 NSRS2007 StatePlane New Mexico Central FIPS 3002 (Meters)",3619:"NAD 1983 NSRS2007 StatePlane New Mexico East FIPS 3001 (Meters)",3621:"NAD 1983 NSRS2007 StatePlane New Mexico West FIPS 3003 (Meters)",3623:"NAD 1983 NSRS2007 StatePlane New York Central FIPS 3102 (Meters)",3625:"NAD 1983 NSRS2007 StatePlane New York East FIPS 3101 (Meters)",3627:"NAD 1983 NSRS2007 StatePlane New York Long Isl FIPS 3104 (Meters)",3629:"NAD 1983 NSRS2007 StatePlane New York West FIPS 3103 (Meters)",3631:"NAD 1983 NSRS2007 StatePlane North Carolina FIPS 3200 (Meters)",3633:"NAD 1983 NSRS2007 StatePlane North Dakota N FIPS 3301 (Meters)",3635:"NAD 1983 NSRS2007 StatePlane North Dakota S FIPS 3302 (Meters)",3637:"NAD 1983 NSRS2007 StatePlane Ohio North FIPS 3401 (Meters)",3638:"NAD 1983 NSRS2007 StatePlane Ohio South FIPS 3402 (Meters)",3639:"NAD 1983 NSRS2007 StatePlane Oklahoma North FIPS 3501 (Meters)",3641:"NAD 1983 NSRS2007 StatePlane Oklahoma South FIPS 3502 (Meters)",3645:"NAD 1983 NSRS2007 StatePlane Oregon North FIPS 3601 (Meters)",3647:"NAD 1983 NSRS2007 StatePlane Oregon South FIPS 3602 (Meters)",4437:"NAD 1983 NSRS2007 StatePlane PR & VI FIPS 5200 (Meters)",3649:"NAD 1983 NSRS2007 StatePlane Pennsylvania North FIPS 3701 (Meters)",3651:"NAD 1983 NSRS2007 StatePlane Pennsylvania South FIPS 3702 (Meters)",3653:"NAD 1983 NSRS2007 StatePlane Rhode Island FIPS 3800 (Meters)",3655:"NAD 1983 NSRS2007 StatePlane South Carolina FIPS 3900 (Meters)",3657:"NAD 1983 NSRS2007 StatePlane South Dakota N FIPS 4001 (Meters)",3659:"NAD 1983 NSRS2007 StatePlane South Dakota S FIPS 4002 (Meters)",3661:"NAD 1983 NSRS2007 StatePlane Tennessee FIPS 4100 (Meters)",3663:"NAD 1983 NSRS2007 StatePlane Texas Central FIPS 4203 (Meters)",3669:"NAD 1983 NSRS2007 StatePlane Texas N Central FIPS 4202 (Meters)",3667:"NAD 1983 NSRS2007 StatePlane Texas North FIPS 4201 (Meters)",3673:"NAD 1983 NSRS2007 StatePlane Texas S Central FIPS 4204 (Meters)",3671:"NAD 1983 NSRS2007 StatePlane Texas South FIPS 4205 (Meters)",3675:"NAD 1983 NSRS2007 StatePlane Utah Central FIPS 4302 (Meters)",3678:"NAD 1983 NSRS2007 StatePlane Utah North FIPS 4301 (Meters)",3681:"NAD 1983 NSRS2007 StatePlane Utah South FIPS 4303 (Meters)",3684:"NAD 1983 NSRS2007 StatePlane Vermont FIPS 4400 (Meters)",3685:"NAD 1983 NSRS2007 StatePlane Virginia North FIPS 4501 (Meters)",3687:"NAD 1983 NSRS2007 StatePlane Virginia South FIPS 4502 (Meters)",3689:"NAD 1983 NSRS2007 StatePlane Washington North FIPS 4601 (Meters)",3691:"NAD 1983 NSRS2007 StatePlane Washington South FIPS 4602 (Meters)",3693:"NAD 1983 NSRS2007 StatePlane West Virginia N FIPS 4701 (Meters)",3694:"NAD 1983 NSRS2007 StatePlane West Virginia S FIPS 4702 (Meters)",3695:"NAD 1983 NSRS2007 StatePlane Wisconsin Central FIPS 4802 (Meters)",3697:"NAD 1983 NSRS2007 StatePlane Wisconsin North FIPS 4801 (Meters)",3699:"NAD 1983 NSRS2007 StatePlane Wisconsin South FIPS 4803 (Meters)",3703:"NAD 1983 NSRS2007 StatePlane Wyoming E Central FIPS 4902 (Meters)",3702:"NAD 1983 NSRS2007 StatePlane Wyoming East FIPS 4901 (Meters)",3704:"NAD 1983 NSRS2007 StatePlane Wyoming W Central FIPS 4903 (Meters)",3705:"NAD 1983 NSRS2007 StatePlane Wyoming West FIPS 4904 (Meters)"},"NAD 1983 NSRS2007 (US Feet)":{3485:"NAD 1983 NSRS2007 StatePlane Arkansas North FIPS 0301 (US Feet)",3487:"NAD 1983 NSRS2007 StatePlane Arkansas South FIPS 0302 (US Feet)",3490:"NAD 1983 NSRS2007 StatePlane California I FIPS 0401 (US Feet)",3492:"NAD 1983 NSRS2007 StatePlane California II FIPS 0402 (US Feet)",3494:"NAD 1983 NSRS2007 StatePlane California III FIPS 0403 (US Feet)",3496:"NAD 1983 NSRS2007 StatePlane California IV FIPS 0404 (US Feet)",3498:"NAD 1983 NSRS2007 StatePlane California V FIPS 0405 (US Feet)",3500:"NAD 1983 NSRS2007 StatePlane California VI FIPS 0406 (US Feet)",3502:"NAD 1983 NSRS2007 StatePlane Colorado Central FIPS 0502 (US Feet)",3504:"NAD 1983 NSRS2007 StatePlane Colorado North FIPS 0501 (US Feet)",3506:"NAD 1983 NSRS2007 StatePlane Colorado South FIPS 0503 (US Feet)",3508:"NAD 1983 NSRS2007 StatePlane Connecticut FIPS 0600 (US Feet)",3510:"NAD 1983 NSRS2007 StatePlane Delaware FIPS 0700 (US Feet)",3512:"NAD 1983 NSRS2007 StatePlane Florida East FIPS 0901 (US Feet)",3515:"NAD 1983 NSRS2007 StatePlane Florida North FIPS 0903 (US Feet)",3517:"NAD 1983 NSRS2007 StatePlane Florida West FIPS 0902 (US Feet)",3519:"NAD 1983 NSRS2007 StatePlane Georgia East FIPS 1001 (US Feet)",3521:"NAD 1983 NSRS2007 StatePlane Georgia West FIPS 1002 (US Feet)",3523:"NAD 1983 NSRS2007 StatePlane Idaho Central FIPS 1102 (US Feet)",3525:"NAD 1983 NSRS2007 StatePlane Idaho East FIPS 1101 (US Feet)",3527:"NAD 1983 NSRS2007 StatePlane Idaho West FIPS 1103 (US Feet)",3529:"NAD 1983 NSRS2007 StatePlane Illinois East FIPS 1201 (US Feet)",3531:"NAD 1983 NSRS2007 StatePlane Illinois West FIPS 1202 (US Feet)",3533:"NAD 1983 NSRS2007 StatePlane Indiana East FIPS 1301 (US Feet)",3535:"NAD 1983 NSRS2007 StatePlane Indiana West FIPS 1302 (US Feet)",3537:"NAD 1983 NSRS2007 StatePlane Iowa North FIPS 1401 (US Feet)",3539:"NAD 1983 NSRS2007 StatePlane Iowa South FIPS 1402 (US Feet)",3541:"NAD 1983 NSRS2007 StatePlane Kansas North FIPS 1501 (US Feet)",3543:"NAD 1983 NSRS2007 StatePlane Kansas South FIPS 1502 (US Feet)",3547:"NAD 1983 NSRS2007 StatePlane Kentucky FIPS 1600 (US Feet)",3545:"NAD 1983 NSRS2007 StatePlane Kentucky North FIPS 1601 (US Feet)",3549:"NAD 1983 NSRS2007 StatePlane Kentucky South FIPS 1602 (US Feet)",3551:"NAD 1983 NSRS2007 StatePlane Louisiana North FIPS 1701 (US Feet)",3553:"NAD 1983 NSRS2007 StatePlane Louisiana South FIPS 1702 (US Feet)",26863:"NAD 1983 NSRS2007 StatePlane Maine East FIPS 1801 (US Feet)",26864:"NAD 1983 NSRS2007 StatePlane Maine West FIPS 1802 (US Feet)",3582:"NAD 1983 NSRS2007 StatePlane Maryland FIPS 1900 (US Feet)",3586:"NAD 1983 NSRS2007 StatePlane Massachusetts FIPS 2001 (US Feet)",3584:"NAD 1983 NSRS2007 StatePlane Massachusetts Isl FIPS 2002 (US Feet)",26866:"NAD 1983 NSRS2007 StatePlane Minnesota Central FIPS 2202 (US Feet)",26865:"NAD 1983 NSRS2007 StatePlane Minnesota North FIPS 2201 (US Feet)",26867:"NAD 1983 NSRS2007 StatePlane Minnesota South FIPS 2203 (US Feet)",3598:"NAD 1983 NSRS2007 StatePlane Mississippi East FIPS 2301 (US Feet)",3600:"NAD 1983 NSRS2007 StatePlane Mississippi West FIPS 2302 (US Feet)",26868:"NAD 1983 NSRS2007 StatePlane Nebraska FIPS 2600 (US Feet)",3608:"NAD 1983 NSRS2007 StatePlane Nevada Central FIPS 2702 (US Feet)",3610:"NAD 1983 NSRS2007 StatePlane Nevada East FIPS 2701 (US Feet)",3612:"NAD 1983 NSRS2007 StatePlane Nevada West FIPS 2703 (US Feet)",3614:"NAD 1983 NSRS2007 StatePlane New Hampshire FIPS 2800 (US Feet)",3616:"NAD 1983 NSRS2007 StatePlane New Jersey FIPS 2900 (US Feet)",3618:"NAD 1983 NSRS2007 StatePlane New Mexico Central FIPS3002 (US Feet)",3620:"NAD 1983 NSRS2007 StatePlane New Mexico East FIPS 3001 (US Feet)",3622:"NAD 1983 NSRS2007 StatePlane New Mexico West FIPS 3003 (US Feet)",3624:"NAD 1983 NSRS2007 StatePlane New York Central FIPS 3102 (US Feet)",3626:"NAD 1983 NSRS2007 StatePlane New York East FIPS 3101 (US Feet)",3628:"NAD 1983 NSRS2007 StatePlane New York Long Isl FIPS 3104 (US Feet)",3630:"NAD 1983 NSRS2007 StatePlane New York West FIPS 3103 (US Feet)",3632:"NAD 1983 NSRS2007 StatePlane North Carolina FIPS 3200 (US Feet)",3728:"NAD 1983 NSRS2007 StatePlane Ohio North FIPS 3401 (US Feet)",3729:"NAD 1983 NSRS2007 StatePlane Ohio South FIPS 3402 (US Feet)",3640:"NAD 1983 NSRS2007 StatePlane Oklahoma North FIPS 3501 (US Feet)",3642:"NAD 1983 NSRS2007 StatePlane Oklahoma South FIPS 3502 (US Feet)",3650:"NAD 1983 NSRS2007 StatePlane Pennsylvania North FIPS3701 (US Feet)",3652:"NAD 1983 NSRS2007 StatePlane Pennsylvania South FIPS3702 (US Feet)",3654:"NAD 1983 NSRS2007 StatePlane Rhode Island FIPS 3800 (US Feet)",3658:"NAD 1983 NSRS2007 StatePlane South Dakota N FIPS 4001 (US Feet)",3660:"NAD 1983 NSRS2007 StatePlane South Dakota S FIPS 4002 (US Feet)",3662:"NAD 1983 NSRS2007 StatePlane Tennessee FIPS 4100 (US Feet)",3664:"NAD 1983 NSRS2007 StatePlane Texas Central FIPS 4203 (US Feet)",3670:"NAD 1983 NSRS2007 StatePlane Texas N Central FIPS 4202 (US Feet)",3668:"NAD 1983 NSRS2007 StatePlane Texas North FIPS 4201 (US Feet)",3674:"NAD 1983 NSRS2007 StatePlane Texas S Central FIPS 4204 (US Feet)",3672:"NAD 1983 NSRS2007 StatePlane Texas South FIPS 4205 (US Feet)",3677:"NAD 1983 NSRS2007 StatePlane Utah Central FIPS 4302 (US Feet)",3680:"NAD 1983 NSRS2007 StatePlane Utah North FIPS 4301 (US Feet)",3683:"NAD 1983 NSRS2007 StatePlane Utah South FIPS 4303 (US Feet)",5655:"NAD 1983 NSRS2007 StatePlane Vermont FIPS 4400 (US Feet)",3686:"NAD 1983 NSRS2007 StatePlane Virginia North FIPS 4501 (US Feet)",3688:"NAD 1983 NSRS2007 StatePlane Virginia South FIPS 4502 (US Feet)",3690:"NAD 1983 NSRS2007 StatePlane Washington North FIPS 4601 (US Feet)",3692:"NAD 1983 NSRS2007 StatePlane Washington South FIPS 4602 (US Feet)",26869:"NAD 1983 NSRS2007 StatePlane West Virginia N FIPS 4701 (US Feet)",26870:"NAD 1983 NSRS2007 StatePlane West Virginia S FIPS 4702 (US Feet)",3696:"NAD 1983 NSRS2007 StatePlane Wisconsin Central FIPS 4802 (US Feet)",3698:"NAD 1983 NSRS2007 StatePlane Wisconsin North FIPS 4801 (US Feet)",3700:"NAD 1983 NSRS2007 StatePlane Wisconsin South FIPS 4803 (US Feet)",3731:"NAD 1983 NSRS2007 StatePlane Wyoming E Central FIPS 4902 (US Feet)",3730:"NAD 1983 NSRS2007 StatePlane Wyoming East FIPS 4901 (US Feet)",3732:"NAD 1983 NSRS2007 StatePlane Wyoming W Central FIPS 4903 (US Feet)",3733:"NAD 1983 NSRS2007 StatePlane Wyoming West FIPS 4904 (US Feet)"},"Other GCS":{65062:"American Samoa 1962 StatePlane Amer. Samoa FIPS 5300 (US Feet)",102240:"Guam Geodetic Network 1993 (Meters)",102239:"Guam Geodetic Triangulation Network 1963 (Meters)",4414:"NAD 1983 HARN Guam Map Grid (Meters)",6637:"NAD 1983 MA11 Guam Map Grid (Meters)",3561:"Old Hawaiian StatePlane Hawaii 1 FIPS 5101 (US Feet)",3562:"Old Hawaiian StatePlane Hawaii 2 FIPS 5102 (US Feet)",3563:"Old Hawaiian StatePlane Hawaii 3 FIPS 5103 (US Feet)",3564:"Old Hawaiian StatePlane Hawaii 4 FIPS 5104 (US Feet)",3565:"Old Hawaiian StatePlane Hawaii 5 FIPS 5105 (US Feet)",3991:"Puerto Rico StatePlane Puerto Rico FIPS 5201 (US Feet)",3992:"Puerto Rico StatePlane Virgin Isl St.Croix FIPS 5202 (US Feet)"}},"State Systems":{102117:"NAD 1927 Alaska Albers (Meters)",2964:"NAD 1927 Alaska Albers (US Feet)",3309:"NAD 1927 California (Teale) Albers (Meters)",102118:"NAD 1927 Georgia Statewide Albers (US Feet)",102122:"NAD 1927 Michigan GeoRef (Meters)",102120:"NAD 1927 Michigan GeoRef (US Feet)",3069:"NAD 1927 Wisconsin TM (Meters)",6393:"NAD 1983 (2011) Alaska Albers (Meters)",6414:"NAD 1983 (2011) California (Teale) Albers (Meters)",6439:"NAD 1983 (2011) Florida GDL Albers (Meters)",6924:"NAD 1983 (2011) Kansas LCC",6925:"NAD 1983 (2011) Kansas LCC ftUS",6497:"NAD 1983 (2011) Michigan GeoRef (Meters)",6508:"NAD 1983 (2011) Mississippi TM (Meters)",6591:"NAD 1983 (2011) Virginia Lambert (Meters)",6610:"NAD 1983 (2011) Wisconsin TM (Meters)",102974:"NAD 1983 (2011) Wisconsin TM (US Feet)",102247:"NAD 1983 (CORS96) Alaska Albers (Meters)",102399:"NAD 1983 Albers BLM Montana, North Dakota, South Dakota",102760:"NAD 1983 California (Teale) Albers (Intl Feet)",3310:"NAD 1983 California (Teale) Albers (Meters)",102600:"NAD 1983 California (Teale) Albers (US Feet)",3086:"NAD 1983 Florida GDL Albers (Meters)",102604:"NAD 1983 Georgia Statewide Lambert (US Feet)",3311:"NAD 1983 HARN California (Teale) Albers (Meters)",3087:"NAD 1983 HARN Florida GDL Albers (Meters)",3079:"NAD 1983 HARN Michigan GeoRef (Meters)",3815:"NAD 1983 HARN Mississippi TM (Meters)",3969:"NAD 1983 HARN Virginia Lambert (Meters)",3071:"NAD 1983 HARN Wisconsin TM (Meters)",102220:"NAD 1983 HARN Wisconsin TM (US Feet)",8826:"NAD 1983 Idaho TM (Meters)",6922:"NAD 1983 Kansas LCC",6923:"NAD 1983 Kansas LCC ftUS",3078:"NAD 1983 Michigan GeoRef (Meters)",102121:"NAD 1983 Michigan GeoRef (US Feet)",3814:"NAD 1983 Mississippi TM (Meters)",3467:"NAD 1983 NSRS2007 Alaska Albers (Meters)",3488:"NAD 1983 NSRS2007 California (Teale) Albers (Meters)",3513:"NAD 1983 NSRS2007 Florida GDL Albers (Meters)",3591:"NAD 1983 NSRS2007 Michigan GeoRef (Meters)",3816:"NAD 1983 NSRS2007 Mississippi TM (Meters)",3970:"NAD 1983 NSRS2007 Virginia Lambert (Meters)",3701:"NAD 1983 NSRS2007 Wisconsin TM (Meters)",102217:"NAD 1983 NSRS2007 Wisconsin TM (US Feet)",9674:"NAD 1983 USFS R6 Albers (Meters)",102042:"NAD 1983 USFS R9 Albers (Meters)",3968:"NAD 1983 Virginia Lambert (Meters)",3070:"NAD 1983 Wisconsin TM (Meters)",102219:"NAD 1983 Wisconsin TM (US Feet)",102212:"NAD 1983 WyLam (Meters)",102759:"WGS 1984 California (Teale) Albers (Intl Feet)",102599:"WGS 1984 California (Teale) Albers (US Feet)",Oregon:{6557:"NAD 1983 (2011) Oregon Statewide Lambert (Intl Feet)",6556:"NAD 1983 (2011) Oregon Statewide Lambert (Meters)",6868:"NAD 1983 (CORS96) Oregon Statewide Lambert (Intl Feet)",6867:"NAD 1983 (CORS96) Oregon Statewide Lambert (Meters)",2994:"NAD 1983 HARN Oregon Statewide Lambert (Intl Feet)",2993:"NAD 1983 HARN Oregon Statewide Lambert (Meters)",3644:"NAD 1983 NSRS2007 Oregon Statewide Lambert (Intl Feet)",3643:"NAD 1983 NSRS2007 Oregon Statewide Lambert (Meters)",2992:"NAD 1983 Oregon Statewide Lambert (Intl Feet)",2991:"NAD 1983 Oregon Statewide Lambert (Meters)",6787:"OCRS Baker NAD 1983 2011 TM (Feet Intl)",6786:"OCRS Baker NAD 1983 2011 TM (Meters)",6785:"OCRS Baker NAD 1983 CORS96 TM (Feet Intl)",6784:"OCRS Baker NAD 1983 CORS96 TM (Meters)",6799:"OCRS Bend-Burns NAD 1983 2011 LCC (Feet Intl)",6798:"OCRS Bend-Burns NAD 1983 2011 LCC (Meters)",6797:"OCRS Bend-Burns NAD 1983 CORS96 LCC (Feet Intl)",6796:"OCRS Bend-Burns NAD 1983 CORS96 LCC (Meters)",6791:"OCRS Bend-Klamath Falls NAD 1983 2011 TM (Feet Intl)",6790:"OCRS Bend-Klamath Falls NAD 1983 2011 TM (Meters)",6789:"OCRS Bend-Klamath Falls NAD 1983 CORS96 TM (Feet Intl)",6788:"OCRS Bend-Klamath Falls NAD 1983 CORS96 TM (Meters)",6795:"OCRS Bend-Redmond-Prineville NAD 1983 2011 LCC (Feet Intl)",6794:"OCRS Bend-Redmond-Prineville NAD 1983 2011 LCC (Meters)",6793:"OCRS Bend-Redmond-Prineville NAD 1983 CORS96 LCC (Feet Intl)",6792:"OCRS Bend-Redmond-Prineville NAD 1983 CORS96 LCC (Meters)",8312:"OCRS Burns-Harper NAD 1983 2011 TM (Feet Intl)",8311:"OCRS Burns-Harper NAD 1983 2011 TM (Meters)",8314:"OCRS Canyon City-Burns NAD 1983 2011 TM (Feet Intl)",8313:"OCRS Canyon City-Burns NAD 1983 2011 TM (Meters)",6803:"OCRS Canyonville-Grants Pass NAD 1983 2011 TM (Feet Intl)",6802:"OCRS Canyonville-Grants Pass NAD 1983 2011 TM (Meters)",6801:"OCRS Canyonville-Grants Pass NAD 1983 CORS96 TM (Feet Intl)",6800:"OCRS Canyonville-Grants Pass NAD 1983 CORS96 TM (Meters)",8316:"OCRS Coast Range North NAD 1983 2011 LCC (Feet Intl)",8315:"OCRS Coast Range North NAD 1983 2011 LCC (Meters)",6807:"OCRS Columbia River East NAD 1983 2011 LCC (Feet Intl)",6806:"OCRS Columbia River East NAD 1983 2011 LCC (Meters)",6805:"OCRS Columbia River East NAD 1983 CORS96 LCC (Feet Intl)",6804:"OCRS Columbia River East NAD 1983 CORS96 LCC (Meters)",6811:"OCRS Columbia River West NAD 1983 2011 OM (Feet Intl)",6810:"OCRS Columbia River West NAD 1983 2011 OM (Meters)",6809:"OCRS Columbia River West NAD 1983 CORS96 OM (Feet Intl)",6808:"OCRS Columbia River West NAD 1983 CORS96 OM (Meters)",6815:"OCRS Cottage Grove-Canyonville NAD 1983 2011 TM (Feet Intl)",6814:"OCRS Cottage Grove-Canyonville NAD 1983 2011 TM (Meters)",6813:"OCRS Cottage Grove-Canyonville NAD 1983 CORS96 TM (Feet Intl)",6812:"OCRS Cottage Grove-Canyonville NAD 1983 CORS96 TM (Meters)",8318:"OCRS Dayville-Prairie City NAD 1983 2011 TM (Feet Intl)",8317:"OCRS Dayville-Prairie City NAD 1983 2011 TM (Meters)",8320:"OCRS Denio-Burns NAD 1983 2011 TM (Feet Intl)",8319:"OCRS Denio-Burns NAD 1983 2011 TM (Meters)",6819:"OCRS Dufur-Madras NAD 1983 2011 TM (Feet Intl)",6818:"OCRS Dufur-Madras NAD 1983 2011 TM (Meters)",6817:"OCRS Dufur-Madras NAD 1983 CORS96 TM (Feet Intl)",6816:"OCRS Dufur-Madras NAD 1983 CORS96 TM (Meters)",6823:"OCRS Eugene NAD 1983 2011 TM (Feet Intl)",6822:"OCRS Eugene NAD 1983 2011 TM (Meters)",6821:"OCRS Eugene NAD 1983 CORS96 TM (Feet Intl)",6820:"OCRS Eugene NAD 1983 CORS96 TM (Meters)",6827:"OCRS Grants Pass-Ashland NAD 1983 2011 TM (Feet Intl)",6826:"OCRS Grants Pass-Ashland NAD 1983 2011 TM (Meters)",6825:"OCRS Grants Pass-Ashland NAD 1983 CORS96 TM (Feet Intl)",6824:"OCRS Grants Pass-Ashland NAD 1983 CORS96 TM (Meters)",6831:"OCRS Gresham-Warm Springs NAD 1983 2011 TM (Feet Intl)",6830:"OCRS Gresham-Warm Springs NAD 1983 2011 TM (Meters)",6829:"OCRS Gresham-Warm Springs NAD 1983 CORS96 TM (Feet Intl)",6828:"OCRS Gresham-Warm Springs NAD 1983 CORS96 TM (Meters)",8322:"OCRS Halfway NAD 1983 2011 LCC (Feet Intl)",8321:"OCRS Halfway NAD 1983 2011 LCC (Meters)",6835:"OCRS La Grande NAD 1983 2011 TM (Feet Intl)",6834:"OCRS La Grande NAD 1983 2011 TM (Meters)",6833:"OCRS La Grande NAD 1983 CORS96 TM (Feet Intl)",6832:"OCRS La Grande NAD 1983 CORS96 TM (Meters)",8324:"OCRS Medford-Diamond Lake NAD 1983 2011 LCC (Feet Intl)",8323:"OCRS Medford-Diamond Lake NAD 1983 2011 LCC (Meters)",8326:"OCRS Mitchell NAD 1983 2011 LCC (Feet Intl)",8325:"OCRS Mitchell NAD 1983 2011 LCC (Meters)",8328:"OCRS North Central NAD 1983 2011 LCC (Feet Intl)",8327:"OCRS North Central NAD 1983 2011 LCC (Meters)",8330:"OCRS Ochoco Summit NAD 1983 2011 LCC (Feet Intl)",8329:"OCRS Ochoco Summit NAD 1983 2011 LCC (Meters)",6839:"OCRS Ontario NAD 1983 2011 TM (Feet Intl)",6838:"OCRS Ontario NAD 1983 2011 TM (Meters)",6837:"OCRS Ontario NAD 1983 CORS96 TM (Feet Intl)",6836:"OCRS Ontario NAD 1983 CORS96 TM (Meters)",6843:"OCRS Oregon Coast NAD 1983 2011 OM (Feet Intl)",6842:"OCRS Oregon Coast NAD 1983 2011 OM (Meters)",6841:"OCRS Oregon Coast NAD 1983 CORS96 OM (Feet Intl)",6840:"OCRS Oregon Coast NAD 1983 CORS96 OM (Meters)",8332:"OCRS Owyhee NAD 1983 2011 TM (Feet Intl)",8331:"OCRS Owyhee NAD 1983 2011 TM (Meters)",6847:"OCRS Pendleton NAD 1983 2011 TM (Feet Intl)",6846:"OCRS Pendleton NAD 1983 2011 TM (Meters)",6845:"OCRS Pendleton NAD 1983 CORS96 TM (Feet Intl)",6844:"OCRS Pendleton NAD 1983 CORS96 TM (Meters)",6851:"OCRS Pendleton-La Grande NAD 1983 2011 TM (Feet Intl)",6850:"OCRS Pendleton-La Grande NAD 1983 2011 TM (Meters)",6849:"OCRS Pendleton-La Grande NAD 1983 CORS96 TM (Feet Intl)",6848:"OCRS Pendleton-La Grande NAD 1983 CORS96 TM (Meters)",8334:"OCRS Pilot Rock-Ukiah NAD 1983 2011 LCC (Feet Intl)",8333:"OCRS Pilot Rock-Ukiah NAD 1983 2011 LCC (Meters)",6855:"OCRS Portland NAD 1983 2011 LCC (Feet Intl)",6854:"OCRS Portland NAD 1983 2011 LCC (Meters)",6853:"OCRS Portland NAD 1983 CORS96 LCC (Feet Intl)",6852:"OCRS Portland NAD 1983 CORS96 LCC (Meters)",8336:"OCRS Prairie City-Brogan NAD 1983 2011 LCC (Feet Intl)",8335:"OCRS Prairie City-Brogan NAD 1983 2011 LCC (Meters)",8338:"OCRS Riley-Lakeview NAD 1983 2011 TM (Feet Intl)",8337:"OCRS Riley-Lakeview NAD 1983 2011 TM (Meters)",6859:"OCRS Salem NAD 1983 2011 TM (Feet Intl)",6858:"OCRS Salem NAD 1983 2011 TM (Meters)",6857:"OCRS Salem NAD 1983 CORS96 TM (Feet Intl)",6856:"OCRS Salem NAD 1983 CORS96 TM (Meters)",6863:"OCRS Santiam Pass NAD 1983 2011 TM (Feet Intl)",6862:"OCRS Santiam Pass NAD 1983 2011 TM (Meters)",6861:"OCRS Santiam Pass NAD 1983 CORS96 TM (Feet Intl)",6860:"OCRS Santiam Pass NAD 1983 CORS96 TM (Meters)",8340:"OCRS Siskiyou Pass NAD 1983 2011 LCC (Feet Intl)",8339:"OCRS Siskiyou Pass NAD 1983 2011 LCC (Meters)",8342:"OCRS Ukiah-Fox NAD 1983 2011 LCC (Feet Intl)",8341:"OCRS Ukiah-Fox NAD 1983 2011 LCC (Meters)",8344:"OCRS Wallowa NAD 1983 2011 TM (Feet Intl)",8343:"OCRS Wallowa NAD 1983 2011 TM (Meters)",8346:"OCRS Warner Highway NAD 1983 2011 LCC (Feet Intl)",8345:"OCRS Warner Highway NAD 1983 2011 LCC (Meters)",8348:"OCRS Willamette Pass NAD 1983 2011 TM (Feet Intl)",8347:"OCRS Willamette Pass NAD 1983 2011 TM (Meters)"},Texas:{3080:"NAD 1927 Texas Statewide Mapping System (Intl Feet)",6579:"NAD 1983 (2011) Texas Centric Mapping System Albers (Meters)",6580:"NAD 1983 (2011) Texas Centric Mapping System Lambert (Meters)",3085:"NAD 1983 HARN Texas Centric Mapping System Albers (Meters)",3084:"NAD 1983 HARN Texas Centric Mapping System Lambert (Meters)",3665:"NAD 1983 NSRS2007 Texas Centric Mapping System Albers (Meters)",3666:"NAD 1983 NSRS2007 Texas Centric Mapping System Lambert (Meters)",3083:"NAD 1983 Texas Centric Mapping System Albers (Meters)",3082:"NAD 1983 Texas Centric Mapping System Lambert (Meters)",3081:"NAD 1983 Texas Statewide Mapping System (Meters)"}},Tribal:{Montana:{7127:"NAD 1983 (2011) RMTCRS Billings (Intl Feet)",7117:"NAD 1983 (2011) RMTCRS Billings (Meters)",7120:"NAD 1983 (2011) RMTCRS Blackfeet (Intl Feet)",7110:"NAD 1983 (2011) RMTCRS Blackfeet (Meters)",7126:"NAD 1983 (2011) RMTCRS Bobcat (Intl Feet)",7116:"NAD 1983 (2011) RMTCRS Bobcat (Meters)",7125:"NAD 1983 (2011) RMTCRS Crow (Intl Feet)",7115:"NAD 1983 (2011) RMTCRS Crow (Meters)",7122:"NAD 1983 (2011) RMTCRS Fort Belknap (Intl Feet)",7112:"NAD 1983 (2011) RMTCRS Fort Belknap (Meters)",7123:"NAD 1983 (2011) RMTCRS Fort Peck Assiniboine (Intl Feet)",7113:"NAD 1983 (2011) RMTCRS Fort Peck Assiniboine (Meters)",7124:"NAD 1983 (2011) RMTCRS Fort Peck Sioux (Intl Feet)",7114:"NAD 1983 (2011) RMTCRS Fort Peck Sioux (Meters)",7121:"NAD 1983 (2011) RMTCRS Milk River (Intl Feet)",7111:"NAD 1983 (2011) RMTCRS Milk River (Meters)",7119:"NAD 1983 (2011) RMTCRS St Mary (Intl Feet)",7109:"NAD 1983 (2011) RMTCRS St Mary (Meters)"},Navajo:{103594:"NAD 1983 (2011) Navajo Nation Coordinate System (Intl Feet)",103592:"NAD 1983 (2011) Navajo Nation Coordinate System (Meters)",103593:"NAD 1983 (2011) Navajo Nation Coordinate System (US Feet)",103588:"NAD 1983 HARN Navajo Nation Coordinate System (Intl Feet)",103586:"NAD 1983 HARN Navajo Nation Coordinate System (Meters)",103587:"NAD 1983 HARN Navajo Nation Coordinate System (US Feet)",103591:"NAD 1983 NSRS2007 Navajo Nation Coordinate System (Intl Feet)",103589:"NAD 1983 NSRS2007 Navajo Nation Coordinate System (Meters)",103590:"NAD 1983 NSRS2007 Navajo Nation Coordinate System (US Feet)"},Wyoming:{7118:"NAD 1983 (2011) RMTCRS Wind River (Meters)",7128:"NAD 1983 (2011) RMTCRS Wind River (US Feet)"}},UTM:{Africa:{2043:"Abidjan 1987 UTM Zone 29N",2041:"Abidjan 1987 UTM Zone 30N",20135:"Adindan UTM Zone 35N",20136:"Adindan UTM Zone 36N",20137:"Adindan UTM Zone 37N",20138:"Adindan UTM Zone 38N",20934:"Arc 1950 UTM Zone 34S",20935:"Arc 1950 UTM Zone 35S",20936:"Arc 1950 UTM Zone 36S",21095:"Arc 1960 UTM Zone 35N",21035:"Arc 1960 UTM Zone 35S",21096:"Arc 1960 UTM Zone 36N",21036:"Arc 1960 UTM Zone 36S",21097:"Arc 1960 UTM Zone 37N",21037:"Arc 1960 UTM Zone 37S",2095:"Bissau UTM Zone 28N",22032:"Camacupa UTM Zone 32S",22033:"Camacupa UTM Zone 33S",22234:"Cape UTM Zone 34S",22235:"Cape UTM Zone 35S",22236:"Cape UTM Zone 36S",22332:"Carthage UTM Zone 32N",31528:"Conakry 1905 UTM Zone 28N",31529:"Conakry 1905 UTM Zone 29N",22832:"Douala UTM Zone 32N",2312:"Garoua UTM Zone 33N",3342:"IGCB 1955 Congo UTM Zone 33S",3367:"IGN Astro 1960 UTM Zone 28N",3368:"IGN Astro 1960 UTM Zone 29N",3369:"IGN Astro 1960 UTM Zone 30N",2313:"Kousseri UTM Zone 33N",3199:"LGD2006 UTM Zone 32N",3201:"LGD2006 UTM Zone 33N",3202:"LGD2006 UTM Zone 34N",3203:"LGD2006 UTM Zone 35N",2042:"Locodjo 1965 UTM Zone 29N",2040:"Locodjo 1965 UTM Zone 30N",25231:"Lome UTM Zone 31N",26632:"M'poraloko UTM Zone 32N",26692:"M'poraloko UTM Zone 32S",25932:"Malongo 1987 UTM Zone 32S",7992:"Malongo 1987 UTM zone 33S",2215:"Manoca 1962 UTM Zone 32N",26237:"Massawa UTM Zone 37N",3343:"Mauritania 1999 UTM Zone 28N",3344:"Mauritania 1999 UTM Zone 29N",3345:"Mauritania 1999 UTM Zone 30N",102144:"Merchich (degrees) UTM Zone 28N",3354:"Mhast (offshore) UTM Zone 32S",3353:"Mhast (onshore) UTM Zone 32S",26331:"Minna UTM Zone 31N",26332:"Minna UTM Zone 32N",3036:"Moznet UTM Zone 36S",3037:"Moznet UTM Zone 37S",5629:"Moznet UTM Zone 38S",31838:"NGN UTM Zone 38N",31839:"NGN UTM Zone 39N",30729:"Nord Sahara 1959 UTM Zone 29N",30730:"Nord Sahara 1959 UTM Zone 30N",30731:"Nord Sahara 1959 UTM Zone 31N",30732:"Nord Sahara 1959 UTM Zone 32N",28232:"Pointe Noire UTM Zone 32S",4061:"RGRDC 2005 UTM Zone 33S",4062:"RGRDC 2005 UTM Zone 34S",4063:"RGRDC 2005 UTM Zone 35S",29333:"Schwarzeck UTM Zone 33S",2161:"Sierra Leone 1968 UTM Zone 28N",2162:"Sierra Leone 1968 UTM Zone 29N",29635:"Sudan UTM Zone 35N",29636:"Sudan UTM Zone 36N",29738:"Tananarive 1925 UTM Zone 38S",29739:"Tananarive 1925 UTM Zone 39S",2736:"Tete UTM Zone 36S",2737:"Tete UTM Zone 37S",31028:"Yoff 1972 UTM Zone 28N"},Asia:{20538:"Afgooye UTM Zone 38N",20539:"Afgooye UTM Zone 39N",20436:"Ain el Abd 1970 UTM Zone 36N",20437:"Ain el Abd 1970 UTM Zone 37N",20438:"Ain el Abd 1970 UTM Zone 38N",20439:"Ain el Abd 1970 UTM Zone 39N",20440:"Ain el Abd 1970 UTM Zone 40N",3461:"Dabola 1981 UTM Zone 28N",3462:"Dabola 1981 UTM Zone 29N",23239:"Fahud UTM Zone 39N",23240:"Fahud UTM Zone 40N",102141:"Hong Kong 1980 UTM Zone 49N",102142:"Hong Kong 1980 UTM Zone 50N",3829:"Hu Tzu Shan UTM Zone 51N",3064:"IGM 1995 UTM Zone 32N",3065:"IGM 1995 UTM Zone 33N",3890:"IGRS UTM Zone 37N",3891:"IGRS UTM Zone 38N",3892:"IGRS UTM Zone 39N",23946:"Indian 1954 UTM Zone 46N",23947:"Indian 1954 UTM Zone 47N",23948:"Indian 1954 UTM Zone 48N",3148:"Indian 1960 UTM Zone 48N",3149:"Indian 1960 UTM Zone 49N",24047:"Indian 1975 UTM Zone 47N",24048:"Indian 1975 UTM Zone 48N",3097:"JGD 2000 UTM Zone 51N",3098:"JGD 2000 UTM Zone 52N",3099:"JGD 2000 UTM Zone 53N",3100:"JGD 2000 UTM Zone 54N",3101:"JGD 2000 UTM Zone 55N",102150:"JGD 2000 UTM Zone 56N",6688:"JGD 2011 UTM Zone 51N",6689:"JGD 2011 UTM Zone 52N",6690:"JGD 2011 UTM Zone 53N",6691:"JGD 2011 UTM Zone 54N",6692:"JGD 2011 UTM Zone 55N",102598:"JGD 2011 UTM Zone 56N",9356:"KSA-GRF17 UTM zone 36N",9357:"KSA-GRF17 UTM zone 37N",9358:"KSA-GRF17 UTM zone 38N",9359:"KSA-GRF17 UTM zone 39N",9360:"KSA-GRF17 UTM zone 40N",3391:"Karbala 1979 Polservice UTM Zone 37N",3392:"Karbala 1979 Polservice UTM Zone 38N",3393:"Karbala 1979 Polservice UTM Zone 39N",102453:"Luzon 1911 UTM Zone 50N",102454:"Luzon 1911 UTM Zone 51N",102455:"Luzon 1911 UTM Zone 52N",102224:"MONREF 1997 UTM Zone 46 N",102225:"MONREF 1997 UTM Zone 47 N",102226:"MONREF 1997 UTM Zone 48 N",102227:"MONREF 1997 UTM Zone 49 N",102228:"MONREF 1997 UTM Zone 50 N",8836:"MTRF 2000 UTM zone 36N",8837:"MTRF 2000 UTM zone 37N",8838:"MTRF 2000 UTM zone 38N",8839:"MTRF 2000 UTM zone 39N",8840:"MTRF 2000 UTM zone 40N",7005:"Nahrwan 1934 UTM zone 37N",7006:"Nahrwan 1934 UTM zone 38N",7007:"Nahrwan 1934 UTM zone 39N",27037:"Nahrwan 1967 UTM Zone 37N",27038:"Nahrwan 1967 UTM Zone 38N",27039:"Nahrwan 1967 UTM Zone 39N",27040:"Nahrwan 1967 UTM Zone 40N",3307:"Nakhl-e Ghanem UTM Zone 39N",7374:"ONGD14 UTM Zone 39N",7375:"ONGD14 UTM Zone 40N",7376:"ONGD14 UTM Zone 41N",9295:"ONGD17 UTM Zone 39N",9296:"ONGD17 UTM Zone 40N",9297:"ONGD17 UTM Zone 41N",3439:"PDO 1993 UTM Zone 39N",3440:"PDO 1993 UTM Zone 40N",102456:"PRS 1992 UTM Zone 50N",102457:"PRS 1992 UTM Zone 51N",102458:"PRS 1992 UTM Zone 52N",102143:"QND 1995 UTM Zone 39N",2550:"Samboja UTM Zone 50S",3092:"Tokyo UTM Zone 51N",3093:"Tokyo UTM Zone 52N",3094:"Tokyo UTM Zone 53N",3095:"Tokyo UTM Zone 54N",3096:"Tokyo UTM Zone 55N",102156:"Tokyo UTM Zone 56N",30339:"Trucial Coast 1948 UTM Zone 39N",30340:"Trucial Coast 1948 UTM Zone 40N",3405:"VN 2000 UTM Zone 48N",3406:"VN 2000 UTM Zone 49N",5836:"Yemen NGN 1996 UTM Zone 37N",2089:"Yemen NGN 1996 UTM Zone 38N",2090:"Yemen NGN 1996 UTM Zone 39N",5837:"Yemen NGN 1996 UTM Zone 40N"},"BLM (US Feet)":{4401:"NAD 1927 BLM Zone  1N (US Feet)",4402:"NAD 1927 BLM Zone  2N (US Feet)",4403:"NAD 1927 BLM Zone  3N (US Feet)",4404:"NAD 1927 BLM Zone  4N (US Feet)",4405:"NAD 1927 BLM Zone  5N (US Feet)",4406:"NAD 1927 BLM Zone  6N (US Feet)",4407:"NAD 1927 BLM Zone  7N (US Feet)",4408:"NAD 1927 BLM Zone  8N (US Feet)",4409:"NAD 1927 BLM Zone  9N (US Feet)",4410:"NAD 1927 BLM Zone 10N (US Feet)",4411:"NAD 1927 BLM Zone 11N (US Feet)",4412:"NAD 1927 BLM Zone 12N (US Feet)",4413:"NAD 1927 BLM Zone 13N (US Feet)",32064:"NAD 1927 BLM Zone 14N (US Feet)",32065:"NAD 1927 BLM Zone 15N (US Feet)",32066:"NAD 1927 BLM Zone 16N (US Feet)",32067:"NAD 1927 BLM Zone 17N (US Feet)",4418:"NAD 1927 BLM Zone 18N (US Feet)",4419:"NAD 1927 BLM Zone 19N (US Feet)",4399:"NAD 1927 BLM Zone 59N (US Feet)",4400:"NAD 1927 BLM Zone 60N (US Feet)",4421:"NAD 1983 BLM Zone  1N (US Feet)",4422:"NAD 1983 BLM Zone  2N (US Feet)",4423:"NAD 1983 BLM Zone  3N (US Feet)",4424:"NAD 1983 BLM Zone  4N (US Feet)",4425:"NAD 1983 BLM Zone  5N (US Feet)",4426:"NAD 1983 BLM Zone  6N (US Feet)",4427:"NAD 1983 BLM Zone  7N (US Feet)",4428:"NAD 1983 BLM Zone  8N (US Feet)",4429:"NAD 1983 BLM Zone  9N (US Feet)",4430:"NAD 1983 BLM Zone 10N (US Feet)",4431:"NAD 1983 BLM Zone 11N (US Feet)",4432:"NAD 1983 BLM Zone 12N (US Feet)",4433:"NAD 1983 BLM Zone 13N (US Feet)",32164:"NAD 1983 BLM Zone 14N (US Feet)",32165:"NAD 1983 BLM Zone 15N (US Feet)",32166:"NAD 1983 BLM Zone 16N (US Feet)",32167:"NAD 1983 BLM Zone 17N (US Feet)",4438:"NAD 1983 BLM Zone 18N (US Feet)",4439:"NAD 1983 BLM Zone 19N (US Feet)",4217:"NAD 1983 BLM Zone 59N (US Feet)",4420:"NAD 1983 BLM Zone 60N (US Feet)",32664:"WGS 1984 BLM Zone 14N (US Feet)",32665:"WGS 1984 BLM Zone 15N (US Feet)",32666:"WGS 1984 BLM Zone 16N (US Feet)",32667:"WGS 1984 BLM Zone 17N (US Feet)"},Europe:{7803:"BGS2005 UTM zone 34N",7799:"BGS2005 UTM zone 34N (N-E)",9391:"BGS2005 UTM zone 35N",7800:"BGS2005 UTM zone 35N (N-E)",7805:"BGS2005 UTM zone 36N",27429:"Datum 73 UTM Zone 29N",2058:"ED 1950 ED77 UTM Zone 38N",2059:"ED 1950 ED77 UTM Zone 39N",2060:"ED 1950 ED77 UTM Zone 40N",2061:"ED 1950 ED77 UTM Zone 41N",2077:"ELD 1979 UTM Zone 32N",2078:"ELD 1979 UTM Zone 33N",2079:"ELD 1979 UTM Zone 34N",2080:"ELD 1979 UTM Zone 35N",3038:"ETRS 1989 ETRS-TM26",3039:"ETRS 1989 ETRS-TM27",3040:"ETRS 1989 ETRS-TM28",3041:"ETRS 1989 ETRS-TM29",3042:"ETRS 1989 ETRS-TM30",3043:"ETRS 1989 ETRS-TM31",3044:"ETRS 1989 ETRS-TM32",3045:"ETRS 1989 ETRS-TM33",3046:"ETRS 1989 ETRS-TM34",3047:"ETRS 1989 ETRS-TM35",3048:"ETRS 1989 ETRS-TM36",3049:"ETRS 1989 ETRS-TM37",3050:"ETRS 1989 ETRS-TM38",3051:"ETRS 1989 ETRS-TM39",102097:"ETRS 1989 UTM Zone 26N",102098:"ETRS 1989 UTM Zone 27N",25828:"ETRS 1989 UTM Zone 28N",25829:"ETRS 1989 UTM Zone 29N",25830:"ETRS 1989 UTM Zone 30N",25831:"ETRS 1989 UTM Zone 31N",25832:"ETRS 1989 UTM Zone 32N",25833:"ETRS 1989 UTM Zone 33N",25834:"ETRS 1989 UTM Zone 34N",25835:"ETRS 1989 UTM Zone 35N",25836:"ETRS 1989 UTM Zone 36N",25837:"ETRS 1989 UTM Zone 37N",25838:"ETRS 1989 UTM Zone 38N",102099:"ETRS 1989 UTM Zone 39N",23028:"European Datum 1950 UTM Zone 28N",23029:"European Datum 1950 UTM Zone 29N",23030:"European Datum 1950 UTM Zone 30N",23031:"European Datum 1950 UTM Zone 31N",23032:"European Datum 1950 UTM Zone 32N",23033:"European Datum 1950 UTM Zone 33N",23034:"European Datum 1950 UTM Zone 34N",23035:"European Datum 1950 UTM Zone 35N",23036:"European Datum 1950 UTM Zone 36N",23037:"European Datum 1950 UTM Zone 37N",23038:"European Datum 1950 UTM Zone 38N",3374:"FD 1954 UTM Zone 29N",3767:"HTRS96 UTM Zone 33N",3768:"HTRS96 UTM Zone 34N",3054:"Hjorsey 1955 UTM Zone 26N",3055:"Hjorsey 1955 UTM Zone 27N",3056:"Hjorsey 1955 UTM Zone 28N",2158:"IRENET95 UTM Zone 29N",102132:"NGO 1948 UTM Zone 32N",102133:"NGO 1948 UTM Zone 33N",102134:"NGO 1948 UTM Zone 34N",102135:"NGO 1948 UTM Zone 35N",9404:"PN68 UTM zone 27N",9405:"PN68 UTM zone 28N",9406:"PN84 UTM zone 27N",9407:"PN84 UTM zone 28N",2216:"Qornoq 1927 UTM Zone 22N",2217:"Qornoq 1927 UTM Zone 23N",7791:"RDN2008 UTM zone 32N",7792:"RDN2008 UTM zone 33N",7793:"RDN2008 UTM zone 34N",4082:"REGCAN95 UTM Zone 27N",4083:"REGCAN95 UTM Zone 28N"},Indonesia:{21148:"Batavia UTM Zone 48S",21149:"Batavia UTM Zone 49S",21150:"Batavia UTM Zone 50S",23866:"DGN 1995 UTM Zone 46N",23867:"DGN 1995 UTM Zone 47N",23877:"DGN 1995 UTM Zone 47S",23868:"DGN 1995 UTM Zone 48N",23878:"DGN 1995 UTM Zone 48S",23869:"DGN 1995 UTM Zone 49N",23879:"DGN 1995 UTM Zone 49S",23870:"DGN 1995 UTM Zone 50N",23880:"DGN 1995 UTM Zone 50S",23871:"DGN 1995 UTM Zone 51N",23881:"DGN 1995 UTM Zone 51S",23872:"DGN 1995 UTM Zone 52N",23882:"DGN 1995 UTM Zone 52S",23883:"DGN 1995 UTM Zone 53S",23884:"DGN 1995 UTM Zone 54S",2933:"Gunung Segara UTM Zone 50S",23846:"Indonesia 1974 UTM Zone 46N",23886:"Indonesia 1974 UTM Zone 46S",23847:"Indonesia 1974 UTM Zone 47N",23887:"Indonesia 1974 UTM Zone 47S",23848:"Indonesia 1974 UTM Zone 48N",23888:"Indonesia 1974 UTM Zone 48S",23849:"Indonesia 1974 UTM Zone 49N",23889:"Indonesia 1974 UTM Zone 49S",23850:"Indonesia 1974 UTM Zone 50N",23890:"Indonesia 1974 UTM Zone 50S",23851:"Indonesia 1974 UTM Zone 51N",23891:"Indonesia 1974 UTM Zone 51S",23852:"Indonesia 1974 UTM Zone 52N",23892:"Indonesia 1974 UTM Zone 52S",23853:"Indonesia 1974 UTM Zone 53N",23893:"Indonesia 1974 UTM Zone 53S",23894:"Indonesia 1974 UTM Zone 54S"},Malaysia:{24547:"Kertau UTM Zone 47N",24548:"Kertau UTM Zone 48N",29849:"Timbalai 1948 UTM Zone 49N",29850:"Timbalai 1948 UTM Zone 50N"},"NAD 1927":{26701:"NAD 1927 UTM Zone  1N",26702:"NAD 1927 UTM Zone  2N",26703:"NAD 1927 UTM Zone  3N",26704:"NAD 1927 UTM Zone  4N",26705:"NAD 1927 UTM Zone  5N",26706:"NAD 1927 UTM Zone  6N",26707:"NAD 1927 UTM Zone  7N",26708:"NAD 1927 UTM Zone  8N",26709:"NAD 1927 UTM Zone  9N",26710:"NAD 1927 UTM Zone 10N",26711:"NAD 1927 UTM Zone 11N",26712:"NAD 1927 UTM Zone 12N",26713:"NAD 1927 UTM Zone 13N",26714:"NAD 1927 UTM Zone 14N",26715:"NAD 1927 UTM Zone 15N",26716:"NAD 1927 UTM Zone 16N",26717:"NAD 1927 UTM Zone 17N",26718:"NAD 1927 UTM Zone 18N",26719:"NAD 1927 UTM Zone 19N",26720:"NAD 1927 UTM Zone 20N",26721:"NAD 1927 UTM Zone 21N",26722:"NAD 1927 UTM Zone 22N",3370:"NAD 1927 UTM Zone 59N",3371:"NAD 1927 UTM Zone 60N"},"NAD 1983":{26901:"NAD 1983 UTM Zone  1N",26902:"NAD 1983 UTM Zone  2N",26903:"NAD 1983 UTM Zone  3N",26904:"NAD 1983 UTM Zone  4N",26905:"NAD 1983 UTM Zone  5N",26906:"NAD 1983 UTM Zone  6N",26907:"NAD 1983 UTM Zone  7N",26908:"NAD 1983 UTM Zone  8N",26909:"NAD 1983 UTM Zone  9N",26910:"NAD 1983 UTM Zone 10N",26911:"NAD 1983 UTM Zone 11N",26912:"NAD 1983 UTM Zone 12N",26913:"NAD 1983 UTM Zone 13N",26914:"NAD 1983 UTM Zone 14N",26915:"NAD 1983 UTM Zone 15N",26916:"NAD 1983 UTM Zone 16N",26917:"NAD 1983 UTM Zone 17N",26918:"NAD 1983 UTM Zone 18N",26919:"NAD 1983 UTM Zone 19N",26920:"NAD 1983 UTM Zone 20N",26921:"NAD 1983 UTM Zone 21N",26922:"NAD 1983 UTM Zone 22N",26923:"NAD 1983 UTM Zone 23N",102213:"NAD 1983 UTM Zone 58N",3372:"NAD 1983 UTM Zone 59N",3373:"NAD 1983 UTM Zone 60N"},"New Zealand":{27258:"NZGD 1949 UTM Zone 58S",27259:"NZGD 1949 UTM Zone 59S",27260:"NZGD 1949 UTM Zone 60S",2133:"NZGD 2000 UTM Zone 58S",2134:"NZGD 2000 UTM Zone 59S",2135:"NZGD 2000 UTM Zone 60S"},"North America":{2219:"ATS 1977 UTM Zone 19N",2220:"ATS 1977 UTM Zone 20N",3356:"Grand Cayman 1959 UTM Zone 17N",3178:"Greenland 1996 UTM Zone 18N",3179:"Greenland 1996 UTM Zone 19N",3180:"Greenland 1996 UTM Zone 20N",3181:"Greenland 1996 UTM Zone 21N",3182:"Greenland 1996 UTM Zone 22N",3183:"Greenland 1996 UTM Zone 23N",3184:"Greenland 1996 UTM Zone 24N",3185:"Greenland 1996 UTM Zone 25N",3186:"Greenland 1996 UTM Zone 26N",3187:"Greenland 1996 UTM Zone 27N",3188:"Greenland 1996 UTM Zone 28N",3189:"Greenland 1996 UTM Zone 29N",3449:"JAD 2001 UTM Zone 17N",3450:"JAD 2001 UTM Zone 18N",3357:"Little Cayman 1961 UTM Zone 17N",6366:"Mexico ITRF2008 UTM Zone 11N",6367:"Mexico ITRF2008 UTM Zone 12N",6368:"Mexico ITRF2008 UTM Zone 13N",6369:"Mexico ITRF2008 UTM Zone 14N",6370:"Mexico ITRF2008 UTM Zone 15N",6371:"Mexico ITRF2008 UTM Zone 16N",6330:"NAD 1983 (2011) UTM Zone  1N",6331:"NAD 1983 (2011) UTM Zone  2N",6332:"NAD 1983 (2011) UTM Zone  3N",6333:"NAD 1983 (2011) UTM Zone  4N",6334:"NAD 1983 (2011) UTM Zone  5N",6335:"NAD 1983 (2011) UTM Zone  6N",6336:"NAD 1983 (2011) UTM Zone  7N",6337:"NAD 1983 (2011) UTM Zone  8N",6338:"NAD 1983 (2011) UTM Zone  9N",6339:"NAD 1983 (2011) UTM Zone 10N",6340:"NAD 1983 (2011) UTM Zone 11N",6341:"NAD 1983 (2011) UTM Zone 12N",6342:"NAD 1983 (2011) UTM Zone 13N",6343:"NAD 1983 (2011) UTM Zone 14N",6344:"NAD 1983 (2011) UTM Zone 15N",6345:"NAD 1983 (2011) UTM Zone 16N",6346:"NAD 1983 (2011) UTM Zone 17N",6347:"NAD 1983 (2011) UTM Zone 18N",6348:"NAD 1983 (2011) UTM Zone 19N",102045:"NAD 1983 (2011) UTM Zone 20N",6328:"NAD 1983 (2011) UTM Zone 59N",6329:"NAD 1983 (2011) UTM Zone 60N",102401:"NAD 1983 (CORS96) UTM Zone  1N",102402:"NAD 1983 (CORS96) UTM Zone  2N",102403:"NAD 1983 (CORS96) UTM Zone  3N",102404:"NAD 1983 (CORS96) UTM Zone  4N",102405:"NAD 1983 (CORS96) UTM Zone  5N",102406:"NAD 1983 (CORS96) UTM Zone  6N",102407:"NAD 1983 (CORS96) UTM Zone  7N",102408:"NAD 1983 (CORS96) UTM Zone  8N",102409:"NAD 1983 (CORS96) UTM Zone  9N",102410:"NAD 1983 (CORS96) UTM Zone 10N",102411:"NAD 1983 (CORS96) UTM Zone 11N",102412:"NAD 1983 (CORS96) UTM Zone 12N",102413:"NAD 1983 (CORS96) UTM Zone 13N",102414:"NAD 1983 (CORS96) UTM Zone 14N",102415:"NAD 1983 (CORS96) UTM Zone 15N",102416:"NAD 1983 (CORS96) UTM Zone 16N",102417:"NAD 1983 (CORS96) UTM Zone 17N",102418:"NAD 1983 (CORS96) UTM Zone 18N",102419:"NAD 1983 (CORS96) UTM Zone 19N",102043:"NAD 1983 (CORS96) UTM Zone 20N",102364:"NAD 1983 (CORS96) UTM Zone 59N",102365:"NAD 1983 (CORS96) UTM Zone 60N",8692:"NAD 1983 (MA11) UTM Zone 54N",8693:"NAD 1983 (MA11) UTM Zone 55N",3708:"NAD 1983 (NSRS2007) UTM Zone  1N",3709:"NAD 1983 (NSRS2007) UTM Zone  2N",3710:"NAD 1983 (NSRS2007) UTM Zone  3N",3711:"NAD 1983 (NSRS2007) UTM Zone  4N",3712:"NAD 1983 (NSRS2007) UTM Zone  5N",3713:"NAD 1983 (NSRS2007) UTM Zone  6N",3714:"NAD 1983 (NSRS2007) UTM Zone  7N",3715:"NAD 1983 (NSRS2007) UTM Zone  8N",3716:"NAD 1983 (NSRS2007) UTM Zone  9N",3717:"NAD 1983 (NSRS2007) UTM Zone 10N",3718:"NAD 1983 (NSRS2007) UTM Zone 11N",3719:"NAD 1983 (NSRS2007) UTM Zone 12N",3720:"NAD 1983 (NSRS2007) UTM Zone 13N",3721:"NAD 1983 (NSRS2007) UTM Zone 14N",3722:"NAD 1983 (NSRS2007) UTM Zone 15N",3723:"NAD 1983 (NSRS2007) UTM Zone 16N",3724:"NAD 1983 (NSRS2007) UTM Zone 17N",3725:"NAD 1983 (NSRS2007) UTM Zone 18N",3726:"NAD 1983 (NSRS2007) UTM Zone 19N",102044:"NAD 1983 (NSRS2007) UTM Zone 20N",3706:"NAD 1983 (NSRS2007) UTM Zone 59N",3707:"NAD 1983 (NSRS2007) UTM Zone 60N",6636:"NAD 1983 (PA11) UTM Zone 2S",6634:"NAD 1983 (PA11) UTM Zone 4N",6635:"NAD 1983 (PA11) UTM Zone 5N",3740:"NAD 1983 HARN UTM Zone 10N",3741:"NAD 1983 HARN UTM Zone 11N",3742:"NAD 1983 HARN UTM Zone 12N",3743:"NAD 1983 HARN UTM Zone 13N",3744:"NAD 1983 HARN UTM Zone 14N",3745:"NAD 1983 HARN UTM Zone 15N",3746:"NAD 1983 HARN UTM Zone 16N",3747:"NAD 1983 HARN UTM Zone 17N",3748:"NAD 1983 HARN UTM Zone 18N",3749:"NAD 1983 HARN UTM Zone 19N",2195:"NAD 1983 HARN UTM Zone 2S",3750:"NAD 1983 HARN UTM Zone 4N",3751:"NAD 1983 HARN UTM Zone 5N",102703:"NAD 1983 PACP00 UTM Zone 2S",102701:"NAD 1983 PACP00 UTM Zone 4N",102702:"NAD 1983 PACP00 UTM Zone 5N",3920:"Puerto Rico UTM Zone 20N",2216:"Qornoq 1927 UTM Zone 22N",2217:"Qornoq 1927 UTM Zone 23N",2987:"Saint Pierre et Miquelon 1950 UTM Zone 21N"},Oceans:{"Atlantic Ocean":{7878:"Astro DOS 71_4 UTM zone 30S",2189:"Azores Central 1948 UTM Zone 26N",3063:"Azores Central 1995 UTM Zone 26N",2188:"Azores Occidental 1939 UTM Zone 25N",2190:"Azores Oriental 1940 UTM Zone 26N",3062:"Azores Oriental 1995 UTM Zone 26N",3769:"Bermuda 1957 UTM Zone 20N",102162:"Graciosa Base SW 1948 UTM Zone 26N",3054:"Hjorsey 1955 UTM Zone 26N",3055:"Hjorsey 1955 UTM Zone 27N",3056:"Hjorsey 1955 UTM Zone 28N",2191:"Madeira 1936 UTM Zone 28N",5014:"PTRA08 UTM Zone 25N",5015:"PTRA08 UTM Zone 26N",5016:"PTRA08 UTM Zone 28N",2942:"Porto Santo 1936 UTM Zone 28N",3061:"Porto Santo 1995 UTM Zone 28N",4467:"RGSPM 2006 UTM Zone 21N",102168:"Sao Braz UTM Zone 26N",29220:"Sapper Hill 1943 UTM Zone 20S",29221:"Sapper Hill 1943 UTM Zone 21S",2943:"Selvagem Grande 1938 UTM Zone 28N",7883:"St. Helena Tritan UTM zone 30S"},Caribbean:{2973:"Fort Desaix UTM Zone 20N",2969:"Fort Marigot UTM Zone 20N",3449:"JAD 2001 UTM Zone 17N",3450:"JAD 2001 UTM Zone 18N",3920:"Puerto Rico UTM Zone 20N",5490:"RGAF09 UTM Zone 20N",4559:"RRAF 1991 UTM Zone 20N",2970:"Sainte Anne UTM Zone 20N"},"Indian Ocean":{5879:"Cadastre 1997 UTM Zone 38S",2980:"Combani 1950 UTM Zone 38S",2999:"Grand Comoros UTM Zone 38S",3336:"Kerguelen Island 1949 UTM Zone 42S",4471:"RGM 2004 UTM Zone 38S",5644:"RGR 1992 UTM Zone 39S",2975:"RGR 1992 UTM Zone 40S",7074:"RGTAAF07 UTM zone 37S",7075:"RGTAAF07 UTM zone 38S",7076:"RGTAAF07 UTM zone 39S",7077:"RGTAAF07 UTM zone 40S",7078:"RGTAAF07 UTM zone 41S",7079:"RGTAAF07 UTM zone 42S",7080:"RGTAAF07 UTM zone 43S",7081:"RGTAAF07 UTM zone 44S",6915:"South East Island 1943 UTM Zone 40N"},"Pacific Ocean":{102116:"American Samoa 1962 UTM Zone 2S",3303:"Fatu Iva 1972 UTM Zone 7S",3142:"Fiji 1956 UTM Zone 1S",3141:"Fiji 1956 UTM Zone 60S",2995:"IGN53 Mare UTM Zone 58S",3172:"IGN53 Mare UTM Zone 59S",2981:"IGN56 Lifou UTM Zone 58S",3302:"IGN63 Hiva Oa UTM Zone 7S",3060:"IGN72 Grande Terre UTM Zone 58S",2978:"IGN72 Nuku Hiva UTM Zone 7S",2988:"MOP78 UTM Zone 1S",3306:"Maupiti 1983 UTM Zone 5S",3305:"Moorea 1987 UTM Zone 6S",8692:"NAD 1983 (MA11) UTM Zone 54N",8693:"NAD 1983 (MA11) UTM Zone 55N",2998:"NEA74 Noumea UTM Zone 58S",102166:"Observ Meteorologico 1939 UTM Zone 25N",102114:"Old Hawaiian UTM Zone 4N",102115:"Old Hawaiian UTM Zone 5N",3784:"Pitcairn 1967 UTM Zone 9S",3169:"RGNC 1991-93 UTM Zone 57S",3170:"RGNC 1991-93 UTM Zone 58S",3171:"RGNC 1991-93 UTM Zone 59S",3296:"RGPF UTM Zone 5S",3297:"RGPF UTM Zone 6S",3298:"RGPF UTM Zone 7S",3299:"RGPF UTM Zone 8S",8903:"RGWF96 UTM Zone 1S",2997:"ST71 Belep UTM Zone 58S",2996:"ST84 Ile des Pins UTM Zone 58S",3164:"ST87 Ouvea UTM Zone 58S",2977:"Tahaa UTM Zone 5S",3304:"Tahiti 1979 UTM Zone 6S",2976:"Tahiti UTM Zone 6S"}},"South America":{20822:"Aratu UTM Zone 22S",20823:"Aratu UTM Zone 23S",20824:"Aratu UTM Zone 24S",5337:"Aratu UTM Zone 25S",21817:"Bogota UTM Zone 17N",21818:"Bogota UTM Zone 18N",3312:"CSG 1967 UTM Zone 21N",2971:"CSG 1967 UTM Zone 22N",2315:"Campo Inchauspe UTM 19S",2316:"Campo Inchauspe UTM 20S",4071:"Chua UTM Zone 23S",5536:"Corrego Alegre 1961 UTM Zone 21S",5537:"Corrego Alegre 1961 UTM Zone 22S",5538:"Corrego Alegre 1961 UTM Zone 23S",5539:"Corrego Alegre 1961 UTM Zone 24S",22521:"Corrego Alegre UTM Zone 21S",22522:"Corrego Alegre UTM Zone 22S",22523:"Corrego Alegre UTM Zone 23S",22524:"Corrego Alegre UTM Zone 24S",22525:"Corrego Alegre UTM Zone 25S",2084:"Hito XVIII 1963 UTM Zone 19S",24718:"La Canoa UTM Zone 18N",24719:"La Canoa UTM Zone 19N",24720:"La Canoa UTM Zone 20N",24721:"La Canoa UTM Zone 21N",5356:"MARGEN UTM Zone 19S",5355:"MARGEN UTM Zone 20S",5357:"MARGEN UTM Zone 21S",2067:"Naparima 1955 UTM Zone 20N",27120:"Naparima 1972 UTM Zone 20N",9265:"POSGAR 2007 UTM Zone 19S",24817:"PSAD 1956 UTM Zone 17N",24877:"PSAD 1956 UTM Zone 17S",24818:"PSAD 1956 UTM Zone 18N",24878:"PSAD 1956 UTM Zone 18S",24819:"PSAD 1956 UTM Zone 19N",24879:"PSAD 1956 UTM Zone 19S",24820:"PSAD 1956 UTM Zone 20N",24880:"PSAD 1956 UTM Zone 20S",24821:"PSAD 1956 UTM Zone 21N",24881:"PSAD 1956 UTM Zone 21S",24882:"PSAD 1956 UTM Zone 22S",5839:"Peru96 UTM Zone 17S",5387:"Peru96 UTM Zone 18S",5389:"Peru96 UTM Zone 19S",9697:"REDGEOMIN UTM zone 12S",9698:"REDGEOMIN UTM zone 18S",9699:"REDGEOMIN UTM zone 19S",2201:"REGVEN UTM Zone 18N",2202:"REGVEN UTM Zone 19N",2203:"REGVEN UTM Zone 20N",3313:"RGFG 1995 UTM Zone 21N",2972:"RGFG 1995 UTM Zone 22N",8950:"SIRGAS-Chile 2010 UTM zone 18S",8951:"SIRGAS-Chile 2010 UTM zone 19S",9149:"SIRGAS-Chile 2013 UTM zone 18S",9150:"SIRGAS-Chile 2013 UTM zone 19S",9154:"SIRGAS-Chile 2016 UTM zone 18S",9155:"SIRGAS-Chile 2016 UTM zone 19S",5362:"SIRGAS-Chile UTM Zone 18S",5361:"SIRGAS-Chile UTM Zone 19S",5382:"SIRGAS-ROU98 UTM Zone 21S",5383:"SIRGAS-ROU98 UTM Zone 22S",29220:"Sapper Hill 1943 UTM Zone 20S",29221:"Sapper Hill 1943 UTM Zone 21S",5875:"South American 1969 (96) UTM Zone 18S",5876:"South American 1969 (96) UTM Zone 19S",5877:"South American 1969 (96) UTM Zone 20S",5531:"South American 1969 (96) UTM Zone 21S",5858:"South American 1969 (96) UTM Zone 22S",5533:"South American 1969 (96) UTM Zone 23S",5534:"South American 1969 (96) UTM Zone 24S",5535:"South American 1969 (96) UTM Zone 25S",31121:"Zanderij 1972 UTM Zone 21N","SAD 1969":{5463:"South American 1969 UTM Zone 17N",29187:"South American 1969 UTM Zone 17S",29168:"South American 1969 UTM Zone 18N",29188:"South American 1969 UTM Zone 18S",29169:"South American 1969 UTM Zone 19N",29189:"South American 1969 UTM Zone 19S",29170:"South American 1969 UTM Zone 20N",29190:"South American 1969 UTM Zone 20S",29171:"South American 1969 UTM Zone 21N",29191:"South American 1969 UTM Zone 21S",29172:"South American 1969 UTM Zone 22N",29192:"South American 1969 UTM Zone 22S",29193:"South American 1969 UTM Zone 23S",29194:"South American 1969 UTM Zone 24S",29195:"South American 1969 UTM Zone 25S"},SIRGAS:{31986:"SIRGAS UTM Zone 17N",31992:"SIRGAS UTM Zone 17S",31987:"SIRGAS UTM Zone 18N",31993:"SIRGAS UTM Zone 18S",31988:"SIRGAS UTM Zone 19N",31994:"SIRGAS UTM Zone 19S",31989:"SIRGAS UTM Zone 20N",31995:"SIRGAS UTM Zone 20S",31990:"SIRGAS UTM Zone 21N",31996:"SIRGAS UTM Zone 21S",31991:"SIRGAS UTM Zone 22N",31997:"SIRGAS UTM Zone 22S",31998:"SIRGAS UTM Zone 23S",31999:"SIRGAS UTM Zone 24S",32e3:"SIRGAS UTM Zone 25S"},"SIRGAS 2000":{31965:"SIRGAS 2000 UTM Zone 11N",31966:"SIRGAS 2000 UTM Zone 12N",31967:"SIRGAS 2000 UTM Zone 13N",31968:"SIRGAS 2000 UTM Zone 14N",31969:"SIRGAS 2000 UTM Zone 15N",31970:"SIRGAS 2000 UTM Zone 16N",31971:"SIRGAS 2000 UTM Zone 17N",31977:"SIRGAS 2000 UTM Zone 17S",31972:"SIRGAS 2000 UTM Zone 18N",31978:"SIRGAS 2000 UTM Zone 18S",31973:"SIRGAS 2000 UTM Zone 19N",31979:"SIRGAS 2000 UTM Zone 19S",31974:"SIRGAS 2000 UTM Zone 20N",31980:"SIRGAS 2000 UTM Zone 20S",31975:"SIRGAS 2000 UTM Zone 21N",31981:"SIRGAS 2000 UTM Zone 21S",31976:"SIRGAS 2000 UTM Zone 22N",31982:"SIRGAS 2000 UTM Zone 22S",6210:"SIRGAS 2000 UTM Zone 23N",31983:"SIRGAS 2000 UTM Zone 23S",6211:"SIRGAS 2000 UTM Zone 24N",31984:"SIRGAS 2000 UTM Zone 24S",31985:"SIRGAS 2000 UTM Zone 25S",5396:"SIRGAS 2000 UTM Zone 26S"}},"WGS 1972":{"Northern Hemisphere":{32201:"WGS 1972 UTM Zone  1N",32202:"WGS 1972 UTM Zone  2N",32203:"WGS 1972 UTM Zone  3N",32204:"WGS 1972 UTM Zone  4N",32205:"WGS 1972 UTM Zone  5N",32206:"WGS 1972 UTM Zone  6N",32207:"WGS 1972 UTM Zone  7N",32208:"WGS 1972 UTM Zone  8N",32209:"WGS 1972 UTM Zone  9N",32210:"WGS 1972 UTM Zone 10N",32211:"WGS 1972 UTM Zone 11N",32212:"WGS 1972 UTM Zone 12N",32213:"WGS 1972 UTM Zone 13N",32214:"WGS 1972 UTM Zone 14N",32215:"WGS 1972 UTM Zone 15N",32216:"WGS 1972 UTM Zone 16N",32217:"WGS 1972 UTM Zone 17N",32218:"WGS 1972 UTM Zone 18N",32219:"WGS 1972 UTM Zone 19N",32220:"WGS 1972 UTM Zone 20N",32221:"WGS 1972 UTM Zone 21N",32222:"WGS 1972 UTM Zone 22N",32223:"WGS 1972 UTM Zone 23N",32224:"WGS 1972 UTM Zone 24N",32225:"WGS 1972 UTM Zone 25N",32226:"WGS 1972 UTM Zone 26N",32227:"WGS 1972 UTM Zone 27N",32228:"WGS 1972 UTM Zone 28N",32229:"WGS 1972 UTM Zone 29N",32230:"WGS 1972 UTM Zone 30N",32231:"WGS 1972 UTM Zone 31N",32232:"WGS 1972 UTM Zone 32N",32233:"WGS 1972 UTM Zone 33N",32234:"WGS 1972 UTM Zone 34N",32235:"WGS 1972 UTM Zone 35N",32236:"WGS 1972 UTM Zone 36N",32237:"WGS 1972 UTM Zone 37N",32238:"WGS 1972 UTM Zone 38N",32239:"WGS 1972 UTM Zone 39N",32240:"WGS 1972 UTM Zone 40N",32241:"WGS 1972 UTM Zone 41N",32242:"WGS 1972 UTM Zone 42N",32243:"WGS 1972 UTM Zone 43N",32244:"WGS 1972 UTM Zone 44N",32245:"WGS 1972 UTM Zone 45N",32246:"WGS 1972 UTM Zone 46N",32247:"WGS 1972 UTM Zone 47N",32248:"WGS 1972 UTM Zone 48N",32249:"WGS 1972 UTM Zone 49N",32250:"WGS 1972 UTM Zone 50N",32251:"WGS 1972 UTM Zone 51N",32252:"WGS 1972 UTM Zone 52N",32253:"WGS 1972 UTM Zone 53N",32254:"WGS 1972 UTM Zone 54N",32255:"WGS 1972 UTM Zone 55N",32256:"WGS 1972 UTM Zone 56N",32257:"WGS 1972 UTM Zone 57N",32258:"WGS 1972 UTM Zone 58N",32259:"WGS 1972 UTM Zone 59N",32260:"WGS 1972 UTM Zone 60N"},"Southern Hemisphere":{32301:"WGS 1972 UTM Zone  1S",32302:"WGS 1972 UTM Zone  2S",32303:"WGS 1972 UTM Zone  3S",32304:"WGS 1972 UTM Zone  4S",32305:"WGS 1972 UTM Zone  5S",32306:"WGS 1972 UTM Zone  6S",32307:"WGS 1972 UTM Zone  7S",32308:"WGS 1972 UTM Zone  8S",32309:"WGS 1972 UTM Zone  9S",32310:"WGS 1972 UTM Zone 10S",32311:"WGS 1972 UTM Zone 11S",32312:"WGS 1972 UTM Zone 12S",32313:"WGS 1972 UTM Zone 13S",32314:"WGS 1972 UTM Zone 14S",32315:"WGS 1972 UTM Zone 15S",32316:"WGS 1972 UTM Zone 16S",32317:"WGS 1972 UTM Zone 17S",32318:"WGS 1972 UTM Zone 18S",32319:"WGS 1972 UTM Zone 19S",32320:"WGS 1972 UTM Zone 20S",32321:"WGS 1972 UTM Zone 21S",32322:"WGS 1972 UTM Zone 22S",32323:"WGS 1972 UTM Zone 23S",32324:"WGS 1972 UTM Zone 24S",32325:"WGS 1972 UTM Zone 25S",32326:"WGS 1972 UTM Zone 26S",32327:"WGS 1972 UTM Zone 27S",32328:"WGS 1972 UTM Zone 28S",32329:"WGS 1972 UTM Zone 29S",32330:"WGS 1972 UTM Zone 30S",32331:"WGS 1972 UTM Zone 31S",32332:"WGS 1972 UTM Zone 32S",32333:"WGS 1972 UTM Zone 33S",32334:"WGS 1972 UTM Zone 34S",32335:"WGS 1972 UTM Zone 35S",32336:"WGS 1972 UTM Zone 36S",32337:"WGS 1972 UTM Zone 37S",32338:"WGS 1972 UTM Zone 38S",32339:"WGS 1972 UTM Zone 39S",32340:"WGS 1972 UTM Zone 40S",32341:"WGS 1972 UTM Zone 41S",32342:"WGS 1972 UTM Zone 42S",32343:"WGS 1972 UTM Zone 43S",32344:"WGS 1972 UTM Zone 44S",32345:"WGS 1972 UTM Zone 45S",32346:"WGS 1972 UTM Zone 46S",32347:"WGS 1972 UTM Zone 47S",32348:"WGS 1972 UTM Zone 48S",32349:"WGS 1972 UTM Zone 49S",32350:"WGS 1972 UTM Zone 50S",32351:"WGS 1972 UTM Zone 51S",32352:"WGS 1972 UTM Zone 52S",32353:"WGS 1972 UTM Zone 53S",32354:"WGS 1972 UTM Zone 54S",32355:"WGS 1972 UTM Zone 55S",32356:"WGS 1972 UTM Zone 56S",32357:"WGS 1972 UTM Zone 57S",32358:"WGS 1972 UTM Zone 58S",32359:"WGS 1972 UTM Zone 59S",32360:"WGS 1972 UTM Zone 60S"}},"WGS 1984":{"Northern Hemisphere":{102570:"WGS 1984 Complex UTM Zone 20N",102571:"WGS 1984 Complex UTM Zone 21N",102572:"WGS 1984 Complex UTM Zone 22N",102573:"WGS 1984 Complex UTM Zone 23N",102574:"WGS 1984 Complex UTM Zone 24N",102575:"WGS 1984 Complex UTM Zone 25N",102576:"WGS 1984 Complex UTM Zone 26N",102577:"WGS 1984 Complex UTM Zone 27N",102578:"WGS 1984 Complex UTM Zone 28N",102579:"WGS 1984 Complex UTM Zone 29N",102580:"WGS 1984 Complex UTM Zone 30N",32601:"WGS 1984 UTM Zone  1N",32602:"WGS 1984 UTM Zone  2N",32603:"WGS 1984 UTM Zone  3N",32604:"WGS 1984 UTM Zone  4N",32605:"WGS 1984 UTM Zone  5N",32606:"WGS 1984 UTM Zone  6N",32607:"WGS 1984 UTM Zone  7N",32608:"WGS 1984 UTM Zone  8N",32609:"WGS 1984 UTM Zone  9N",32610:"WGS 1984 UTM Zone 10N",32611:"WGS 1984 UTM Zone 11N",32612:"WGS 1984 UTM Zone 12N",32613:"WGS 1984 UTM Zone 13N",32614:"WGS 1984 UTM Zone 14N",32615:"WGS 1984 UTM Zone 15N",32616:"WGS 1984 UTM Zone 16N",32617:"WGS 1984 UTM Zone 17N",32618:"WGS 1984 UTM Zone 18N",32619:"WGS 1984 UTM Zone 19N",32620:"WGS 1984 UTM Zone 20N",32621:"WGS 1984 UTM Zone 21N",32622:"WGS 1984 UTM Zone 22N",32623:"WGS 1984 UTM Zone 23N",32624:"WGS 1984 UTM Zone 24N",32625:"WGS 1984 UTM Zone 25N",32626:"WGS 1984 UTM Zone 26N",32627:"WGS 1984 UTM Zone 27N",32628:"WGS 1984 UTM Zone 28N",32629:"WGS 1984 UTM Zone 29N",32630:"WGS 1984 UTM Zone 30N",32631:"WGS 1984 UTM Zone 31N",32632:"WGS 1984 UTM Zone 32N",32633:"WGS 1984 UTM Zone 33N",32634:"WGS 1984 UTM Zone 34N",32635:"WGS 1984 UTM Zone 35N",32636:"WGS 1984 UTM Zone 36N",32637:"WGS 1984 UTM Zone 37N",32638:"WGS 1984 UTM Zone 38N",32639:"WGS 1984 UTM Zone 39N",32640:"WGS 1984 UTM Zone 40N",32641:"WGS 1984 UTM Zone 41N",32642:"WGS 1984 UTM Zone 42N",32643:"WGS 1984 UTM Zone 43N",32644:"WGS 1984 UTM Zone 44N",32645:"WGS 1984 UTM Zone 45N",32646:"WGS 1984 UTM Zone 46N",32647:"WGS 1984 UTM Zone 47N",32648:"WGS 1984 UTM Zone 48N",32649:"WGS 1984 UTM Zone 49N",32650:"WGS 1984 UTM Zone 50N",32651:"WGS 1984 UTM Zone 51N",32652:"WGS 1984 UTM Zone 52N",32653:"WGS 1984 UTM Zone 53N",32654:"WGS 1984 UTM Zone 54N",32655:"WGS 1984 UTM Zone 55N",32656:"WGS 1984 UTM Zone 56N",32657:"WGS 1984 UTM Zone 57N",32658:"WGS 1984 UTM Zone 58N",32659:"WGS 1984 UTM Zone 59N",32660:"WGS 1984 UTM Zone 60N"},"Southern Hemisphere":{32701:"WGS 1984 UTM Zone  1S",32702:"WGS 1984 UTM Zone  2S",32703:"WGS 1984 UTM Zone  3S",32704:"WGS 1984 UTM Zone  4S",32705:"WGS 1984 UTM Zone  5S",32706:"WGS 1984 UTM Zone  6S",32707:"WGS 1984 UTM Zone  7S",32708:"WGS 1984 UTM Zone  8S",32709:"WGS 1984 UTM Zone  9S",32710:"WGS 1984 UTM Zone 10S",32711:"WGS 1984 UTM Zone 11S",32712:"WGS 1984 UTM Zone 12S",32713:"WGS 1984 UTM Zone 13S",32714:"WGS 1984 UTM Zone 14S",32715:"WGS 1984 UTM Zone 15S",32716:"WGS 1984 UTM Zone 16S",32717:"WGS 1984 UTM Zone 17S",32718:"WGS 1984 UTM Zone 18S",32719:"WGS 1984 UTM Zone 19S",32720:"WGS 1984 UTM Zone 20S",32721:"WGS 1984 UTM Zone 21S",32722:"WGS 1984 UTM Zone 22S",32723:"WGS 1984 UTM Zone 23S",32724:"WGS 1984 UTM Zone 24S",32725:"WGS 1984 UTM Zone 25S",32726:"WGS 1984 UTM Zone 26S",32727:"WGS 1984 UTM Zone 27S",32728:"WGS 1984 UTM Zone 28S",32729:"WGS 1984 UTM Zone 29S",32730:"WGS 1984 UTM Zone 30S",32731:"WGS 1984 UTM Zone 31S",32732:"WGS 1984 UTM Zone 32S",32733:"WGS 1984 UTM Zone 33S",32734:"WGS 1984 UTM Zone 34S",32735:"WGS 1984 UTM Zone 35S",32736:"WGS 1984 UTM Zone 36S",32737:"WGS 1984 UTM Zone 37S",32738:"WGS 1984 UTM Zone 38S",32739:"WGS 1984 UTM Zone 39S",32740:"WGS 1984 UTM Zone 40S",32741:"WGS 1984 UTM Zone 41S",32742:"WGS 1984 UTM Zone 42S",32743:"WGS 1984 UTM Zone 43S",32744:"WGS 1984 UTM Zone 44S",32745:"WGS 1984 UTM Zone 45S",32746:"WGS 1984 UTM Zone 46S",32747:"WGS 1984 UTM Zone 47S",32748:"WGS 1984 UTM Zone 48S",32749:"WGS 1984 UTM Zone 49S",32750:"WGS 1984 UTM Zone 50S",32751:"WGS 1984 UTM Zone 51S",32752:"WGS 1984 UTM Zone 52S",32753:"WGS 1984 UTM Zone 53S",32754:"WGS 1984 UTM Zone 54S",32755:"WGS 1984 UTM Zone 55S",32756:"WGS 1984 UTM Zone 56S",32757:"WGS 1984 UTM Zone 57S",32758:"WGS 1984 UTM Zone 58S",32759:"WGS 1984 UTM Zone 59S",32760:"WGS 1984 UTM Zone 60S"}}},World:{54098:"Adams Square II (world)",54043:"Aitoff (world)",54032:"Azimuthal Equidistant (world)",54017:"Behrmann (world)",102299:"Berghaus Star AAG",54024:"Bonne (world)",54028:"Cassini (world)",54080:"Compact Miller (world)",54046:"Craster Parabolic (world)",54051:"Cube (world)",54034:"Cylindrical Equal Area (world)",54015:"Eckert I (world)",54014:"Eckert II (world)",54013:"Eckert III (world)",54012:"Eckert IV (world)",54011:"Eckert V (world)",54010:"Eckert VI (world)",8857:"Equal Earth (world)",8858:"Equal Earth (world) Americas",8859:"Equal Earth (world) Asia-Pacific",54027:"Equidistant Conic (world)",54002:"Equidistant Cylindrical (world)",54045:"Flat Polar Quartic (world)",54050:"Fuller (world)",102498:"GOES-16 East ABI Fixed Grid ITRF2008",54016:"Gall Stereographic (world)",54052:"Goode Homolosine (Land)",54053:"Goode Homolosine (Ocean)",54044:"Hammer-Aitoff (world)",54025:"Hotine (world)",54023:"Loximuthal (world)",54004:"Mercator (world)",54003:"Miller Cylindrical (world)",54009:"Mollweide (world)",3410:"NSIDC EASE Grid Global",54077:"Natural Earth (world)",54078:"Natural Earth II (world)",54079:"Patterson (world)",54091:"Peirce quincuncial North Pole in a diamond (world)",54090:"Peirce quincuncial North Pole in a square (world)",54001:"Plate Carree (world)",54021:"Polyconic (world)",54022:"Quartic Authalic (world)",54030:"Robinson (world)",54008:"Sinusoidal (world)",54099:"Spilhaus Ocean Map in Square",54026:"Stereographic (world)",102038:"The World from Space",54048:"Times (world)",54100:"Tobler Cylindrical I (world)",54101:"Tobler Cylindrical II (world)",54031:"Two Point Equidistant (world)",54029:"Van der Grinten I (world)",54049:"Vertical Perspective (world)",3975:"WGS 1984 EASE Grid Global",6933:"WGS 1984 NSIDC EASE-Grid 2.0 Global",3832:"WGS 1984 PDC Mercator",32662:"WGS 1984 Plate Carree",3857:"WGS 1984 Web Mercator (auxiliary sphere)",4087:"WGS 1984 World Equidistant Cylindrical (std parallel = 0)",3395:"WGS 1984 World Mercator",54074:"Wagner IV (world)",54075:"Wagner V (world)",54076:"Wagner VII (world)",54018:"Winkel I (world)",54019:"Winkel II (world)",54042:"Winkel Tripel (NGS - world)"},"World (Sphere-based)":{53043:"Aitoff (sphere)",53032:"Azimuthal Equidistant (sphere)",53017:"Behrmann (sphere)",53024:"Bonne (sphere)",53028:"Cassini (sphere)",53080:"Compact Miller (sphere)",53046:"Craster Parabolic (sphere)",53034:"Cylindrical Equal Area (sphere)",53015:"Eckert I (sphere)",53014:"Eckert II (sphere)",53013:"Eckert III (sphere)",53012:"Eckert IV (sphere)",53011:"Eckert V (sphere)",53010:"Eckert VI (sphere)",53035:"Equal Earth (sphere)",53036:"Equal Earth (sphere) Americas",53037:"Equal Earth (sphere) Asia-Pacific",53027:"Equidistant Conic (sphere)",53002:"Equidistant Cylindrical (sphere)",53045:"Flat Polar Quartic (sphere)",53016:"Gall Stereographic (sphere)",53044:"Hammer-Aitoff (sphere)",53025:"Hotine (sphere)",53023:"Loximuthal (sphere)",53004:"Mercator (sphere)",53003:"Miller Cylindrical (sphere)",53009:"Mollweide (sphere)",53077:"Natural Earth (sphere)",53078:"Natural Earth II (sphere)",53079:"Patterson (sphere)",53001:"Plate Carree (sphere)",53021:"Polyconic (sphere)",53022:"Quartic Authalic (sphere)",53030:"Robinson (sphere)",53008:"Sinusoidal (sphere)",53026:"Stereographic (sphere)",53048:"Times (sphere)",53031:"Two Point Equidistant (sphere)",53029:"Van der Grinten I (sphere)",53049:"Vertical Perspective (sphere)",53074:"Wagner IV (sphere)",53075:"Wagner V (sphere)",53076:"Wagner VII (sphere)",53018:"Winkel I (sphere)",53019:"Winkel II (sphere)",53042:"Winkel Tripel (NGS - sphere)",4088:"World Equidistant Cylindrical (Sphere) (GRS80 authalic) (std parallel = 0)"}},"Vertical Coordinate Systems":{"Ellipsoidal-based":{Africa:{115719:"Hartebeesthoek94",115744:"LGD2006",115754:"Moznet",115785:"RGRDC 2005"},Asia:{115705:"China Geodetic Coordinate System 2000",115710:"DGN 1995",115711:"DRUKREF 03",115716:"GDBD2009",115717:"GDM 2000",115845:"GGD",115839:"Hong Kong Geodetic CS",115721:"IG05 Intermediate CRS",115723:"IG05(2012) Intermediate CRS",115720:"IGD05",115722:"IGD05(2012)",115724:"IGM 1995",115725:"IGRS",115740:"JGD 2000",115741:"JGD 2011",115742:"Korea 2000",115743:"Lao 1997",115747:"MACAO 2008",115753:"MONREF 1997",115843:"MTRF-2000",115764:"Nepal Nagarkot",115846:"ONGD14",115847:"ONGD17",115767:"PNG94",115771:"PRS 1992",115793:"SLD99",115800:"TWD 1997",115802:"Yemen NGN 1996"},"Australia and New Zealand":{115715:"GDA 1994",115805:"GDA2020",115765:"NZGD 2000"},"Central America":{115849:"CR-SIRGAS",115708:"CR05",115749:"MARCARIO SOLIS",115851:"SIRGAS Continuously Operating Network DGF00P01",115852:"SIRGAS Continuously Operating Network DGF01P01",115853:"SIRGAS Continuously Operating Network DGF01P02",115854:"SIRGAS Continuously Operating Network DGF02P01",115855:"SIRGAS Continuously Operating Network DGF04P01",115856:"SIRGAS Continuously Operating Network DGF05P01",115857:"SIRGAS Continuously Operating Network DGF06P01",115858:"SIRGAS Continuously Operating Network DGF07P01",115859:"SIRGAS Continuously Operating Network DGF08P01",115860:"SIRGAS Continuously Operating Network SIR09P01",115861:"SIRGAS Continuously Operating Network SIR10P01",115862:"SIRGAS Continuously Operating Network SIR11P01",115863:"SIRGAS Continuously Operating Network SIR13P01",115864:"SIRGAS Continuously Operating Network SIR14P01",115865:"SIRGAS Continuously Operating Network SIR15P01",115866:"SIRGAS Continuously Operating Network SIR17P01"},Europe:{115806:"BGS2005",115709:"DB-REF",115873:"ETRF 2005",115874:"ETRF 2014",115829:"ETRF2000",115822:"ETRF90",115823:"ETRF91",115824:"ETRF92",115825:"ETRF93",115826:"ETRF94",115827:"ETRF96",115828:"ETRF97",115701:"ETRS 1989",115713:"EUREF-FIN",115712:"Estonia 1997",115714:"FEH2010",115813:"GSK-2011",115726:"IRENET95",115727:"ISN 1993",115728:"ISN 2004",115838:"ISN2016",115872:"KOSOVAREF01",115745:"LKS 1992",115746:"LKS 1994",115752:"MOLDREF99",115773:"PZ 1990",115815:"PZ-90.02",115814:"PZ-90.11",115774:"RDN2008",115778:"RGF 1993",115848:"S-JTSK [JTSK03]",115796:"S-JTSK-05",115797:"S-JTSK-05 (Ferro)",115842:"SRB ETRS89",115795:"SREF98",115798:"SWEREF99",115794:"Slovenia 1996",115706:"Swiss TRF 1995",115804:"TUREF",115801:"Ukraine 2000"},"North America":{115844:"California SRS Epoch 2017.50 (NAD83)",115718:"Greenland 1996",115751:"Mexico ITRF2008",115702:"NAD 1983",115755:"NAD 1983 (2011)",115757:"NAD 1983 (CSRS)",115840:"NAD 1983 (FBN)",115841:"NAD 1983 (HARN Corrected)",115761:"NAD 1983 (NSRS2007)",115756:"NAD 1983 CORS96",115758:"NAD 1983 HARN",115831:"NAD83(CSRS)v2",115832:"NAD83(CSRS)v3",115833:"NAD83(CSRS)v4",115834:"NAD83(CSRS)v5",115835:"NAD83(CSRS)v6",115836:"NAD83(CSRS)v7",115830:"NAD83(CSRS96)"},Oceans:{115707:"CIGD11",115704:"Cadastre 1997",115739:"JAD 2001",115760:"NAD 1983 (MARP00)",115762:"NAD 1983 (PA11)",115763:"NAD 1983 (PACP00)",115759:"NAD_1983 (MA11)",115772:"PTRA08",115775:"REGCAN95",115777:"RGAF09",115779:"RGFG 1995",115780:"RGM 2004",115781:"RGNC 1991",115782:"RGNC 1991-93",115783:"RGPF",115784:"RGR 1992",115786:"RGSPM 2006",115850:"RGWF96",115787:"RRAF 1991",115811:"SHGD2015",115812:"St. Helena Tritan",115799:"TGD2005"},Polar:{115703:"Australian Antarctic 1998",115788:"RSRGD2000"},"South America":{115748:"MAGNA",115750:"MARGEN",115768:"POSGAR",115769:"POSGAR 1994",115770:"POSGAR 1998",115766:"Peru96",115776:"REGVEN",115789:"SIRGAS 2000",115851:"SIRGAS Continuously Operating Network DGF00P01",115852:"SIRGAS Continuously Operating Network DGF01P01",115853:"SIRGAS Continuously Operating Network DGF01P02",115854:"SIRGAS Continuously Operating Network DGF02P01",115855:"SIRGAS Continuously Operating Network DGF04P01",115856:"SIRGAS Continuously Operating Network DGF05P01",115857:"SIRGAS Continuously Operating Network DGF06P01",115858:"SIRGAS Continuously Operating Network DGF07P01",115859:"SIRGAS Continuously Operating Network DGF08P01",115860:"SIRGAS Continuously Operating Network SIR09P01",115861:"SIRGAS Continuously Operating Network SIR10P01",115862:"SIRGAS Continuously Operating Network SIR11P01",115863:"SIRGAS Continuously Operating Network SIR13P01",115864:"SIRGAS Continuously Operating Network SIR14P01",115865:"SIRGAS Continuously Operating Network SIR15P01",115866:"SIRGAS Continuously Operating Network SIR17P01",115791:"SIRGAS ES2007.8",115790:"SIRGAS-Chile",115792:"SIRGAS-ROU98"},World:{115868:"IGS00",115870:"IGS05",115837:"IGS14",115867:"IGS97",115869:"IGb00",115871:"IGb08",115729:"ITRF 1988",115730:"ITRF 1989",115731:"ITRF 1990",115732:"ITRF 1991",115733:"ITRF 1992",115734:"ITRF 1993",115735:"ITRF 1996",115736:"ITRF 1997",115737:"ITRF 2000",115738:"ITRF 2005",115803:"ITRF 2008",115810:"ITRF 2014",115700:"WGS 1984",115819:"WGS 1984 (G1150)",115818:"WGS 1984 (G1674)",115817:"WGS 1984 (G1762)",115821:"WGS 1984 (G730)",115820:"WGS 1984 (G873)",115816:"WGS 1984 (Transit)"}},"Gravity-related":{Africa:{9402:"Ceuta 2 height",5796:"Lagos 1955",5722:"Maputo",9279:"SA LLD height"},Asia:{5734:"AIOC95 (Depth)",5797:"AIOC95 (Height)",5752:"Bandar Abbas",5706:"Caspian",5611:"Caspian height",5725:"Fahud Height Datum 1993",5751:"Fao",3886:"Fao 1979",7976:"HKPD depth",5726:"Ha Tien 1960",5727:"Hon Dau 1992",5739:"Hong Kong Chart Datum",5738:"Hong Kong Principal Datum",9471:"INAGeoid2020 height",5193:"Incheon (Height)",6693:"JSLD72 height",6694:"Japanese Geodetic Datum 2000 (vertical) height",6695:"Japanese Geodetic Datum 2011 (vertical) height",5723:"Japanese Standard Levelling Datum 1969",5790:"KOC Construction Datum",7979:"KOC WD height",5789:"KOC Well Datum",5614:"KOC Well Datum (depth in IFt)",9335:"KSA-VRF14 height",5788:"Kuwait PWD",8841:"MVGC height",8434:"Macao height",9681:"NVD 1992 height",5724:"PDO Height Datum 1993",5843:"Ras Ghumays (Height)",6916:"SHD height",5237:"SLVD (Height)",8904:"TWVD 2001 height",5736:"Yellow Sea 1956",5737:"Yellow Sea 1985"},"Australia and New Zealand":{5711:"AHD",5712:"AHD (Tasmania)",9458:"AVWS height",5759:"Auckland",5760:"Bluff",5771:"Chatham Island",5761:"Dunedin",4458:"Dunedin Bluff 1960 height",5762:"Gisborne",5763:"Lyttelton",5764:"Moturiki",4440:"NZVD2009 height",7839:"NZVD2016 height",5765:"Napier",5766:"Nelson",5767:"One Tree Point",5772:"Stewart Island",5769:"Taranaki",5768:"Tararu",5770:"Wellington"},"Central America":{8911:"DACR52 height"},Europe:{5782:"Alicante",5775:"Antalya",9669:"BGS2005 height",5705:"Baltic",8358:"Baltic 1957 depth",8357:"Baltic 1957 height",5786:"Baltic 1982",9650:"Baltic 1986 height",5612:"Baltic depth",5735:"Black Sea",5336:"Black Sea (Depth)",9672:"CD Norway depth",9722:"Cagliari 1956 height",9721:"Catania 1965 height",5781:"Constanta",7699:"DHHN12 height",7837:"DHHN2016 height",5784:"DHHN85",5783:"DHHN92",5799:"DVR90",5733:"Dansk Normal Nul",5777:"Durres",9663:"EH2000 height",5787:"EOMA 1980",5621:"EVRF 2007",9389:"EVRF 2019 height",9390:"EVRF 2019 mean-tide height",9274:"EVRF2000 Austria height",9651:"EVRF2007-PL height",5730:"EVRS 2000",5597:"FCSVR10 (Height)",5317:"FVR09 (Height)",7446:"Famagusta 1960 height",5778:"GHA",5214:"Genoa (Height)",5610:"HVRS71",8089:"ISN2004 height",9394:"Ibiza height",9666:"LAS07 height",9287:"LAT NL depth",5729:"LHN95",5728:"LN 1902",7700:"Latvia 2000 height",9288:"MSL NL depth",9392:"Mallorca height",9393:"Menorca height",3900:"N2000 height",8675:"N43 height",5717:"N60",5709:"NAP",5774:"NG-L",5791:"NGC 1948",5720:"NGF IGN69",5721:"NGF IGN78",5719:"NGF Lallemand",5941:"NN2000 height",5776:"NN54",5710:"Oostende",5716:"Piraeus",105603:"REDNAP height",5615:"RH1900",5613:"RH2000",5718:"RH70",5785:"SNN76",8691:"SRB_VRS12 height",5779:"SVS2000",8690:"SVS2010",5195:"Trieste (Height)",8881:"Vienna height"},"Ireland and United Kingdom":{5732:"Belfast",9451:"British Isles height (ensemble)",5750:"Douglas",5741:"Fair Isle",5748:"Flannan Isles",5743:"Foula",9303:"HS2-VRF height",5742:"Lerwick",5731:"Malin Head",5701:"Newlyn",5740:"Newlyn (Orkney Isles)",5745:"North Rona",7707:"ODN (Offshore) height",5754:"Poolbeg",7962:"Poolbeg height (m)",5747:"St Kilda",5749:"St Marys",5746:"Stornoway",5744:"Sule Skerry"},"North America":{5713:"CGVD 1928",9245:"CGVD2013 (CGG2013a) height",6647:"CGVD2013 height",8266:"GVR2000 height",8267:"GVR2016 height",5608:"IGLD 1955",5609:"IGLD 1985",8053:"MSL depth (ftUS)",8052:"MSL height (ftUS)",6358:"NAVD88 depth (ftUS)",6357:"NAVD88 depth (m)",8228:"NAVD88 height (ftIntl)",6360:"NAVD88 height (ftUS)",5703:"NAVD88 height (m)",6359:"NGVD29 depth (ftUS)",5702:"NGVD29 height (ftUS)",7968:"NGVD29 height (m)"},Oceans:{"Atlantic Ocean":{5792:"Danger 1950",9401:"El Hierro height",9396:"Fuerteventura height",9397:"Gran Canaria height",7888:"Jamestown 1971 height",9399:"La Gomera height",9400:"La Palma height",9395:"Lanzarote height",7890:"SHVD2015 height",7889:"St. Helena Tritan 2011 height",9398:"Tenerife height"},"Caribbean Sea":{6132:"CBVD61 height",6130:"GCVD54 height",5795:"Guadeloupe 1951",5756:"IGN 1987",5757:"IGN 1988",9130:"IGN 2008 LD height",6131:"LCVD61 height",5794:"Martinique 1950",6641:"PRVD02 height",6642:"VIVD09 height"},"Indian Ocean":{5758:"IGN 1989",5793:"Mayotte 1950"},"Pacific Ocean":{6643:"ASVD02 height",5607:"Bora Bora SAU 2001",6644:"GUVD04 height",6639:"Guam 1963 height",5605:"Huahine SAU 2001",5601:"IGN 1966",5616:"IGN 1988 Les Saintes",5617:"IGN 1988 Marie-Galante",5619:"IGN 1988 St Barthelemy",5620:"IGN 1988 St Martin",5618:"IGN 1992 La Desirade",7652:"Kiunga height",7651:"Kumul 34 height",5604:"Maupiti SAU 2001",5602:"Moorea SAU 1981",5753:"NGNC",9351:"NGNC08 height",5600:"NGPF",6640:"NMVD03 height",7447:"PNG08 height",7841:"POM08 height",7832:"POM96 height",9675:"Pago Pago 2020 height",5603:"Raiatea SAU 2001",5606:"Tahaa SAU 2001",6638:"Tutuila 1962 height"}},Portugal:{6184:"Cais da Figueirinha - Angra do Heroismo height",6182:"Cais da Madalena height",6178:"Cais da Pontinha - Funchal height",6179:"Cais da Vila - Porto Santo height",6186:"Cais da Vila do Porto height",6180:"Cais das Velas height",5780:"Cascais",6181:"Horta height",6187:"Ponta Delgada height",6183:"Santa Cruz da Graciosa height",6185:"Santa Cruz das Flores height"},"South America":{5755:"NGG 1977",9255:"SRVN16 height"},World:{3855:"EGM2008 Geoid",5798:"EGM84 Geoid",5773:"EGM96 Geoid",5872:"HAT (Height)",5871:"HHWLT (Height)",5874:"HW (Height)",5863:"ISLW (Depth)",5831:"Instantaneous Water Level (Depth)",5829:"Instantaneous Water Level (Height)",5861:"LAT (Depth)",5862:"LLWLT (Depth)",5873:"LW (Depth)",5869:"MHHW (Height)",5868:"MHW (Height)",5870:"MHWS (Height)",5866:"MLLW (Depth)",5864:"MLLWS (Depth)",5867:"MLW (Depth)",5865:"MLWS (Depth)",5715:"MSL (Depth)",5714:"MSL (Height)",8051:"MSL depth (ft)",8050:"MSL height (ft)",105700:"WGS 1984 Geoid"}},"Unknown Height Systems":{115808:"Unknown height system (US survey feet)",115809:"Unknown height system (international feet)",115807:"Unknown height system (meters)"}}};let wkidMap=undefined;function getWkidMap(){if(wkidMap===undefined){wkidMap=new Map;const flatWkids=flattenObject(srCategories);Object.keys(flatWkids).forEach((key=>{wkidMap?.set(Number(key),flatWkids[key])}))}return wkidMap}function getSpatialReferenceDescription(wkid){if(wkidMap===undefined)wkidMap=getWkidMap();return wkidMap.get(wkid)}function filterSpatialReferences(searchString){if(wkidMap===undefined)wkidMap=getWkidMap();const specialCharacters=/[\!\#\$\%\^\&\*\)\(\+\=\.\<\>\{\}\[\]\:\;\'\"\|\~\`\_\-]/g;const regexString=searchString.replace(specialCharacters,"\\$&");const regexPattern=new RegExp(regexString,"igu");const matches={};wkidMap.forEach(((value,key)=>{regexPattern.lastIndex=0;if(regexPattern.test(value)||regexPattern.test(key.toString())){matches[String(key)]=value}}));return matches}const getPortalItemMemo=memoize$1(((itemId,portal)=>new PortalItem__default["default"]({id:itemId,portal})),{serializer:args=>`${args[0]}-${args[1]?.url}`});function getHelpBaseUrl(portal){return portal?.sourceJSON.helpBase??""}const getPortalHelpMap=memoize$1((async portal=>{const{restUrl}=portal;const url=`${restUrl}/portals/helpmap`;let helpMap;try{const fetchPortalHelpMap=await esriRequest__default["default"](url,{query:{f:"json"},responseType:"json",method:"auto"});helpMap=await(fetchPortalHelpMap.data?.helpMap)??undefined}catch(e){helpMap=undefined}return helpMap}),{serializer:args=>`${args[0]}-${args[1]?.url}`});const UIDefaults={DebounceTimer:400,HelpDebounceTimer:1500,PopoverTimer:60,Scale:"s"};function parseWhereClause(clause,fields){return sql.parseWhereClause(clause,fields)}exports.ArcgisWebAnalysisError=ArcgisWebAnalysisError;exports.CalculatedParameterValueKeys=CalculatedParameterValueKeys;exports.DEFAULT_ERROR_KEY=DEFAULT_ERROR_KEY;exports.ErrorKeywords=ErrorKeywords;exports.PortalDeploymentType=PortalDeploymentType;exports.StraightLineParameterValue=StraightLineParameterValue;exports.SupportedLocales=SupportedLocales;exports.SupportedOnlineHelpLocales=SupportedOnlineHelpLocales;exports.UIDefaults=UIDefaults;exports.UIInputStatus=UIInputStatus;exports.areThereDuplicates=areThereDuplicates;exports.canExtractLayer=canExtractLayer;exports.checkLayerAllowAnalysis=checkLayerAllowAnalysis;exports.convertJobLayersToMapLayers=convertJobLayersToMapLayers;exports.fetchComponentLocaleStrings=fetchComponentLocaleStrings;exports.fetchErrorsStrings=fetchErrorsStrings;exports.fetchLanguageDirection=fetchLanguageDirection;exports.fetchLayerFieldsInfo=fetchLayerFieldsInfo;exports.filterFields=filterFields;exports.filterLayersAllowAnalysis=filterLayersAllowAnalysis;exports.filterSpatialReferences=filterSpatialReferences;exports.fixUrlForDemoApp=fixUrlForDemoApp;exports.formatAnalysisEngineSuffix=formatAnalysisEngineSuffix;exports.formatLearnMoreHelpUrl=formatLearnMoreHelpUrl;exports.formatMessage=formatMessage;exports.formatNumberToLocale=formatNumberToLocale;exports.formatValidationParamsMessage=formatValidationParamsMessage;exports.fromCache=fromCache;exports.generateParamGroupDataTypeKey=generateParamGroupDataTypeKey;exports.generateSelectedLayersKey=generateSelectedLayersKey;exports.getAddressFieldMappingRules=getAddressFieldMappingRules;exports.getClosestElement=getClosestElement;exports.getCountry=getCountry;exports.getGPFeatureRecordSetLayerValue=getGPFeatureRecordSetLayerValue;exports.getHelpBaseUrl=getHelpBaseUrl;exports.getImageryLayerValue=getImageryLayerValue;exports.getLayerLabel=getLayerLabel;exports.getLayerObject=getLayerObject;exports.getLocaleInfo=getLocaleInfo;exports.getPortalHelpMap=getPortalHelpMap;exports.getPortalItemMemo=getPortalItemMemo;exports.getProxyServiceInfo=getProxyServiceInfo;exports.getRegExFromString=getRegExFromString;exports.getSpatialReferenceDescription=getSpatialReferenceDescription;exports.getTileLayerValue=getTileLayerValue;exports.getToolUIJsonWithSourceCountryRule=getToolUIJsonWithSourceCountryRule;exports.getUIInputStatusFromMessageType=getUIInputStatusFromMessageType;exports.getUIParamsByName=getUIParamsByName;exports.getUniqueValues=getUniqueValues;exports.getValidationParamsMessageFromErrorKey=getValidationParamsMessageFromErrorKey;exports.getWkidMap=getWkidMap;exports.hasGeoEnrichmentPrivilege=hasGeoEnrichmentPrivilege;exports.hasNAPrivilege=hasNAPrivilege;exports.inCache=inCache;exports.isEmptyDataItem=isEmptyDataItem;exports.isFeatureLayer=isFeatureLayer;exports.isImageryLayer=isImageryLayer;exports.isImageryTileLayer=isImageryTileLayer;exports.isNumericField=isNumericField;exports.isStandardAnalysisServerAdvanced=isStandardAnalysisServerAdvanced;exports.isTableLayer=isTableLayer;exports.isTileLayer=isTileLayer;exports.isTravelModeParameter=isTravelModeParameter;exports.isUrlFeatureLayer=isUrlFeatureLayer;exports.isValidNumber=isValidNumber;exports.loadFeatureLayers=loadFeatureLayers;exports.parseNumber=parseNumber;exports.parseWhereClause=parseWhereClause;exports.processDeepLearningModelItem=processDeepLearningModelItem;exports.processImageryLayer=processImageryLayer;exports.processRule=processRule;exports.processValidationRule=processValidationRule;exports.queryCount=queryCount;exports.request=request;exports.sanitizeNumber=sanitizeNumber;exports.setImmutableValue=setImmutableValue;exports.srCategories=srCategories;exports.throwError=throwError;exports.toCamelToolName=toCamelToolName;exports.wasAborted=wasAborted;exports.zip=zip}));
