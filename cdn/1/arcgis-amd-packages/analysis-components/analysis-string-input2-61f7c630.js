define(["exports","./index-ef555910","./index2-588b02d9","./utils-793221d4","./analysis-label2-f17c360a","./isEqual-7dac7fee"],(function(exports,index,index2,utils,analysisLabel2,isEqual){"use strict";const analysisStringInputCss=":root{--analysis-quarter-spacing:0.25rem;--analysis-half-spacing:0.5rem;--analysis-three-quarter-spacing:0.75rem;--analysis-full-spacing:1rem;--analysis-component-default-width:100%;--analysis-ui-border-input:#d4d4d4;--analysis-label-font-size:var(--calcite-font-size--2);--analysis-popover-content-min-height-s:7.5rem;--analysis-popover-content-min-height-m:8.75rem;--analysis-popover-content-max-height:60vh;--analysis-popover-content-height:45vh}:host{display:flex;width:var(--analysis-component-default-width);--calcite-color-border-input:var(--analysis-ui-border-input)}.label{width:var(--analysis-component-default-width)}.segmented-control:not([layout]){visibility:hidden;position:absolute}";const AnalysisStringInput=index.proxyCustomElement(class AnalysisStringInput extends index.H{constructor(){super();this.__registerHost();this.__attachShadow();this.analysisStringInputChange=index.createEvent(this,"analysisStringInputChange",7);this.analysisHelpClick=index.createEvent(this,"analysisHelpClick",7);this.layoutUpdating=false;this.setErrorMessage=message=>{this.isValid=message===undefined;this.errorMessage=message};this.validateSingleInput=inputValue=>{let errorMessage=undefined;if(this.required===true&&inputValue===""){errorMessage=index2.formatMessage(this.strings.requiredError,{label:this.label})}if(inputValue.length<(this.minLength??-1)&&inputValue!==""){errorMessage=index2.formatMessage(this.strings.minLengthError,{label:this.label,minLength:index2.formatNumberToLocale(this.minLength??-1)})}if(inputValue.length>=(this.maxLength??Number.MAX_SAFE_INTEGER)){errorMessage=index2.formatMessage(this.strings.maxLengthError,{label:this.label,maxLength:index2.formatNumberToLocale(this.maxLength??Number.MAX_SAFE_INTEGER)})}if(this.invalidCharactersRegex!==undefined){const regexLiteral=index2.getRegExFromString(this.invalidCharactersRegex);if(regexLiteral!==undefined&&regexLiteral.test(inputValue)===true){errorMessage=index2.formatMessage(this.strings.invalidCharacterError,{label:this.label})}}this.setErrorMessage(errorMessage);return errorMessage===undefined};this.validateInput=()=>{let errorMessage=undefined;if(this.required||this.maxLength!==undefined||this.invalidCharactersRegex!==undefined||this.minLength!==undefined){if(this.selectionMode!=="multi"){const inputValue=this.value??"";this.validateSingleInput(inputValue)}else{const inputValues=this.value??[];if(inputValues.length===0){errorMessage=index2.formatMessage(this.strings.requiredError,{label:this.label});this.setErrorMessage(errorMessage)}else{let isChoiceListValid=true;for(let i=0;i<inputValues.length;i+=1){const isCurrentValueValid=this.validateSingleInput(inputValues[i]??"");if(!isCurrentValueValid){isChoiceListValid=false}}this.isValid=isChoiceListValid;if(isChoiceListValid===false){errorMessage=index2.formatMessage(this.strings.choiceListBadInput,{label:this.label});this.setErrorMessage(errorMessage)}}}}};this.adjustLayout=()=>{this.layout=this.segmentedControl&&this.segmentedControl.clientWidth<this.hostElement.clientWidth?"horizontal":"vertical"};this.renderInput=()=>index.h("calcite-input",{scale:utils.UIDefaults.Scale,type:this.showAsTextArea?"textarea":"text",readOnly:this.readOnly,value:this.value,status:this.isValid?index2.UIInputStatus.VALID:index2.UIInputStatus.INVALID,placeholder:this.placeholderText??this.strings.inputPlaceholderText,onCalciteInputInput:this.inputChanged});this.renderCombobox=()=>{const isMultiSelectNoChoiceList=this.selectionMode==="multi"&&this.choiceList===undefined;const allowCustomValues=isMultiSelectNoChoiceList||this.allowCustomValues===true;const comboboxEntriesList=[];if(Array.isArray(this.choiceList)){comboboxEntriesList.push(...this.choiceList)}if(allowCustomValues&&this.initialValues!==undefined){const listSet=new Set(comboboxEntriesList);const initialValuesArray=this.selectionMode==="multi"?this.initialValues:[this.initialValues];for(const initialValue of initialValuesArray){if(!listSet.has(initialValue)){comboboxEntriesList.push(initialValue)}}}return index.h("calcite-combobox",{scale:utils.UIDefaults.Scale,label:this.strings.choiceList,disabled:this.readOnly,maxItems:this.maxItems,selectionMode:this.selectionMode!=="multi"?"single":"multiple",placeholder:this.placeholderText??this.strings.comboboxPlaceholderText,placeholderIcon:this.placeholderIcon,allowCustomValues,onCalciteComboboxChange:this.comboboxChanged,clearDisabled:this.selectionMode!=="multi"},comboboxEntriesList.map((choice=>this.buildComboBoxItem(choice))))};this.buildComboBoxItem=choice=>{let isSelected=false;if(this.selectionMode!=="multi"){isSelected=this.value===choice}else{isSelected=this.value!==undefined&&this.value.includes(choice)}let textLabel;if(this.choiceListLabels===undefined){textLabel=choice}else{textLabel=this.allowCustomValues?this.choiceListLabels[choice]??choice:this.choiceListLabels[choice]}return index.h("calcite-combobox-item",{key:choice,value:choice,textLabel,icon:this.choiceListIcons!==undefined?this.choiceListIcons[choice]:undefined,selected:isSelected,scale:utils.UIDefaults.Scale})};this.renderRadioGroup=()=>{const list=this.choiceList;return index.h("calcite-segmented-control",{class:"segmented-control",scale:utils.UIDefaults.Scale,onCalciteSegmentedControlChange:this.segmentedControlChange,ref:el=>this.segmentedControl=el,layout:this.layout},list?.map((choice=>this.buildRadioGroupItem(choice))))};this.buildRadioGroupItem=choice=>{const textLabel=this.choiceListLabels!==undefined?this.choiceListLabels[choice]:choice;return index.h("calcite-segmented-control-item",{value:choice,checked:choice===this.value},textLabel)};this.renderRadioButtonGroup=()=>{const list=this.choiceList;return index.h("calcite-radio-button-group",{name:this.label,scale:utils.UIDefaults.Scale,layout:"vertical",onCalciteRadioButtonGroupChange:this.radioButtonGroupChange},list?.map((choice=>this.buildRadioButton(choice))))};this.buildRadioButton=choice=>{const textLabel=this.choiceListLabels!==undefined?this.choiceListLabels[choice]:choice;return index.h("calcite-label",{layout:"inline",scale:utils.UIDefaults.Scale},index.h("calcite-radio-button",{value:choice,checked:choice===this.value}),textLabel)};this.renderCheckList=()=>index.h(index.Fragment,null,this.showSelectAllForCheckList?this.renderCheckBox(true,this.strings.selectAll):null,this.choiceList?.filter((checkBoxOption=>checkBoxOption!==undefined))?.map((checkBoxOption=>this.renderCheckBox(false,checkBoxOption))));this.toggleCheckListSelectAll=event=>{const target=event.target;const isChecked=target.checked;const newCheckListSelections=isChecked?[...this.choiceList??[]]:[];this.checkListChange(newCheckListSelections)};this.toggleCheckBoxSingleSelection=(currentCheckListSelections,checkboxSelection)=>{let newCheckListSelections=currentCheckListSelections;if(currentCheckListSelections.includes(checkboxSelection)){newCheckListSelections=newCheckListSelections.filter((selection=>selection!==checkboxSelection))}else{newCheckListSelections=[...newCheckListSelections,checkboxSelection]}this.checkListChange(newCheckListSelections)};this.renderCheckBox=(renderSelectAll,checkBoxOption)=>{const checkBoxLabel=renderSelectAll?this.strings.selectAll:this.choiceListLabels?.[checkBoxOption]??checkBoxOption;const currentCheckListSelections=Array.isArray(this.value)?[...this.value]:[];const checkBoxIsChecked=renderSelectAll?currentCheckListSelections.length===this.choiceList?.length:currentCheckListSelections.includes(checkBoxOption);const displayAsIndeterminate=renderSelectAll&&!checkBoxIsChecked&&currentCheckListSelections.length>0;return index.h("calcite-label",{layout:"inline",scale:utils.UIDefaults.Scale},index.h("calcite-checkbox",{scale:utils.UIDefaults.Scale,value:checkBoxLabel,checked:checkBoxIsChecked,indeterminate:displayAsIndeterminate,onCalciteCheckboxChange:event=>{if(renderSelectAll){this.toggleCheckListSelectAll(event)}else{this.toggleCheckBoxSingleSelection(currentCheckListSelections,checkBoxOption)}}}),checkBoxLabel)};this.inputChanged=event=>{if(event.target!==null){this.value=event.target.value;this.validateInput();this.analysisStringInputChange.emit()}};this.comboboxChanged=event=>{const comboboxEl=event.target;if(comboboxEl!==null){if(this.selectionMode==="multi"){this.value=comboboxEl.selectedItems.filter((item=>item?.value!==undefined)).map((item=>item.value))}else{const[item]=comboboxEl.selectedItems;this.value=item?.value}this.validateInput();this.analysisStringInputChange.emit()}};this.segmentedControlChange=event=>{const segmentedControlEl=event.target;if(segmentedControlEl!==null){this.value=segmentedControlEl.value??"";this.validateInput();this.analysisStringInputChange.emit()}};this.radioButtonGroupChange=event=>{if(event?.target!==null){this.value=event.target.selectedItem.value;this.validateInput();this.analysisStringInputChange.emit()}};this.checkListChange=currentCheckListSelections=>{this.value=currentCheckListSelections;this.validateInput();this.analysisStringInputChange.emit()};this.value=undefined;this.label=undefined;this.validationParams=undefined;this.required=undefined;this.maxLength=undefined;this.minLength=undefined;this.invalidCharactersRegex=undefined;this.selectionMode=undefined;this.readOnly=false;this.choiceList=undefined;this.choiceListIcons=undefined;this.choiceListLabels=undefined;this.placeholderText=undefined;this.placeholderIcon=undefined;this.showAsRadioGroup=false;this.showAsRadioButtonGroup=false;this.showAsCheckList=false;this.showSelectAllForCheckList=false;this.showAsTextArea=false;this.useDefaultOnReset=false;this.allowCustomValues=false;this.maxItems=10;this.isValid=true;this.errorMessage=undefined;this.layout=undefined}updatedSelectionMode(){this.initialValues=this.value}updatedChoiceList(newValue,oldValue){if(!isEqual.isEqual(oldValue,newValue)){let updatedValue=this.value;const validValues=(Array.isArray(updatedValue)?updatedValue:updatedValue!==undefined?[updatedValue]:[]).filter((choice=>newValue?.includes(choice)));updatedValue=this.selectionMode==="multi"?validValues:validValues[0];if(this.useDefaultOnReset&&validValues.length===0){if(newValue!==undefined){updatedValue=this.selectionMode==="multi"?[newValue[0]]:newValue[0]}else{updatedValue=undefined}}if(!isEqual.isEqual(updatedValue,this.value)){this.value=updatedValue;this.analysisStringInputChange.emit()}}}async componentWillLoad(){({strings:this.strings}=await index2.fetchComponentLocaleStrings(this.hostElement,index.getAssetPath(`.`)));if(this.value===undefined)this.updatedChoiceList(this.choiceList,undefined);this.initialValues=this.value}async checkValidity(){this.validateInput();return Promise.resolve(this.isValid)}componentDidLoad(){if(this.segmentedControl!==undefined){this.resizeObserver=new ResizeObserver((()=>{if(this.hostElement.clientWidth===0){this.layout="horizontal";return}if(this.layoutUpdating){this.layoutUpdating=false;return}this.layoutUpdating=true;this.adjustLayout()}));this.resizeObserver.observe(this.hostElement)}}disconnectedCallback(){this.resizeObserver?.disconnect()}render(){let stringInputElement;if(this.choiceList===undefined){if(this.selectionMode!=="multi"){stringInputElement=this.renderInput()}else{stringInputElement=this.renderCombobox()}}else{if(this.showAsCheckList===true){stringInputElement=this.renderCheckList()}else if(this.selectionMode!=="multi"&&this.showAsRadioGroup===true){stringInputElement=this.renderRadioGroup()}else if(this.selectionMode!="multi"&&this.showAsRadioButtonGroup===true){stringInputElement=this.renderRadioButtonGroup()}else{stringInputElement=this.renderCombobox()}}const hasError=this.isValid===false;const validationParamsMessage=index2.formatValidationParamsMessage(index2.getValidationParamsMessageFromErrorKey(this.strings,this.validationParams));const showInputMessage=index2.isEmptyDataItem(validationParamsMessage)===false||hasError===true;const uiInputStatus=this.errorMessage!==undefined?index2.UIInputStatus.INVALID:index2.getUIInputStatusFromMessageType(this.validationParams?.type);return index.h(index.Host,null,index.h("calcite-label",{class:"label",scale:utils.UIDefaults.Scale},this.label!==""?index.h("analysis-label",{label:this.label,required:this.required,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}):null,stringInputElement,index.h("calcite-input-message",{status:uiInputStatus,hidden:!showInputMessage,scale:utils.UIDefaults.Scale,icon:"exclamationMarkTriangle"},this.errorMessage??validationParamsMessage)))}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get watchers(){return{selectionMode:["updatedSelectionMode"],choiceList:["updatedChoiceList"]}}static get style(){return analysisStringInputCss}},[1,"analysis-string-input",{value:[1537],label:[513],validationParams:[16],required:[516],maxLength:[514,"max-length"],minLength:[514,"min-length"],invalidCharactersRegex:[513,"invalid-characters-regex"],selectionMode:[513,"selection-mode"],readOnly:[516,"read-only"],choiceList:[16],choiceListIcons:[16],choiceListLabels:[16],placeholderText:[513,"placeholder-text"],placeholderIcon:[513,"placeholder-icon"],showAsRadioGroup:[516,"show-as-radio-group"],showAsRadioButtonGroup:[516,"show-as-radio-button-group"],showAsCheckList:[516,"show-as-check-list"],showSelectAllForCheckList:[516,"show-select-all-for-check-list"],showAsTextArea:[516,"show-as-text-area"],useDefaultOnReset:[516,"use-default-on-reset"],allowCustomValues:[516,"allow-custom-values"],maxItems:[514,"max-items"],isValid:[32],errorMessage:[32],layout:[32],checkValidity:[64]},undefined,{selectionMode:["updatedSelectionMode"],choiceList:["updatedChoiceList"]}]);function defineCustomElement(){if(typeof customElements==="undefined"){return}const components=["analysis-string-input","analysis-label"];components.forEach((tagName=>{switch(tagName){case"analysis-string-input":if(!customElements.get(tagName)){customElements.define(tagName,AnalysisStringInput)}break;case"analysis-label":if(!customElements.get(tagName)){analysisLabel2.defineCustomElement()}break}}))}defineCustomElement();exports.AnalysisStringInput=AnalysisStringInput;exports.defineCustomElement=defineCustomElement}));
