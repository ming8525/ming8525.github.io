define(["exports","./index-ef555910","./index2-588b02d9","./utils-793221d4","./analysis-chip-group2-097fb4b1","./analysis-label2-f17c360a","./analysis-summary-fields-popover2-3708aecb"],(function(exports,index,index2,utils,analysisChipGroup2,analysisLabel2,analysisSummaryFieldsPopover2){"use strict";const HTMLClasses={label:"label",calciteChip:"calcite-chip",calciteListItem:"calcite-list-item",calciteSwitch:"calcite-switch"};const analysisSummaryFieldsCss=":root{--analysis-quarter-spacing:0.25rem;--analysis-half-spacing:0.5rem;--analysis-three-quarter-spacing:0.75rem;--analysis-full-spacing:1rem;--analysis-component-default-width:100%;--analysis-ui-border-input:#d4d4d4;--analysis-label-font-size:var(--calcite-font-size--2);--analysis-popover-content-min-height-s:7.5rem;--analysis-popover-content-min-height-m:8.75rem;--analysis-popover-content-max-height:60vh;--analysis-popover-content-height:45vh}:host{display:flex;flex-direction:column;margin-bottom:var(--analysis-half-spacing)}.label{margin-top:0}.calcite-chip{margin:var(--analysis-quarter-spacing)}.calcite-list-item{border:2px solid var(--calcite-color-border-1);margin-bottom:var(--analysis-quarter-spacing);margin-top:var(--analysis-quarter-spacing);border-radius:var(--analysis-quarter-spacing);overflow:hidden}.calcite-switch{border:2px solid var(--calcite-color-border-1);margin-bottom:var(--analysis-quarter-spacing);margin-top:var(--analysis-quarter-spacing);padding:var(--analysis-quarter-spacing);padding-top:var(--analysis-three-quarter-spacing);border-radius:var(--analysis-quarter-spacing);overflow:hidden}";const AnalysisSummaryFields=index.proxyCustomElement(class AnalysisSummaryFields extends index.H{constructor(){super();this.__registerHost();this.__attachShadow();this.analysisSummaryFieldsChange=index.createEvent(this,"analysisSummaryFieldsChange",7);this.analysisHelpClick=index.createEvent(this,"analysisHelpClick",7);this.valueMap=new Map;this.useInitialSelectedStatistics=false;this.selection=new Set;this.updateValueMap=(onStatisticField,statisticType)=>{if(this.valueMap.has(onStatisticField)===false){this.valueMap.set(onStatisticField,[statisticType])}else{const statistics=this.valueMap.get(onStatisticField)??[];if(statistics.includes(statisticType)===false){statistics.push(statisticType);this.valueMap.set(onStatisticField,statistics)}}};this.popoverAction=()=>{this.fieldPopoverOpen=true;if(this.fieldPopoverOpen===true){this.createSummaryFieldsPopover()}else if(this.summaryFieldsPopover!==undefined){this.summaryFieldsPopover.open=false;this.validate()}};this.createSummaryFieldsPopover=()=>{if(this.summaryFieldsPopover===undefined){this.summaryFieldsPopover=document.createElement("analysis-summary-fields-popover");this.summaryFieldsPopover.addEventListener("analysisSummaryFieldSelectionDone",this.onAnalysisSummaryFieldSelectionDone);this.summaryFieldsPopover.addEventListener("analysisSummaryFieldPopoverClose",this.closePopover)}if(document.body.contains(this.summaryFieldsPopover)===false){document.body.appendChild(this.summaryFieldsPopover);this.summaryFieldsPopover.open=true}this.summaryFieldsPopover.referenceElement=this.fieldButton;this.summaryFieldsPopover.open=true;this.summaryFieldsPopover.layer=this.layer;this.summaryFieldsPopover.usePopupTemplatesInfo=this.usePopupTemplatesInfo;this.summaryFieldsPopover.selection=new Set(this.selection.keys());this.summaryFieldsPopover.allowDateType=this.allowDateType;this.summaryFieldsPopover.allowStringType=this.allowStringType;this.summaryFieldsPopover.layerInputLocalizedLabel=this.layerInputLocalizedLabel;this.summaryFieldsPopover.noFieldsText=this.noFieldsText;this.summaryFieldsPopover.noLayersText=this.noLayersText;this.summaryFieldsPopover.showFieldDescription=this.showFieldDescription};this.closePopover=()=>{if(this.summaryFieldsPopover!==undefined&&document.body.contains(this.summaryFieldsPopover)===true){document.body.removeChild(this.summaryFieldsPopover);this.summaryFieldsPopover?.remove();this.summaryFieldsPopover=undefined;this.fieldPopoverOpen=false}};this.onAnalysisSummaryFieldSelectionDone=event=>{this.selection=event.detail;this.fieldPopoverOpen=false;if(this.selection.size===0){this.valueMap=new Map;this.value=undefined}else{Array.from(this.valueMap.keys()).map((key=>{if(this.selection.has(key)===false){this.removeFromValueMap(key)}}));Array.from(this.selection).map((key=>{const currentField=this.layer.fieldsIndex.get(key);const{statistics}=this.updateStatisticTypes(currentField.type);this.useInitialSelectedStatistics=true;if(this.valueMap.has(key)===false){this.updateValueMap(currentField.name,statistics[0])}}));this.updateValue()}this.analysisSummaryFieldsChange.emit();this.validate()};this.onAnalysisChipGroupSelectionChange=event=>{const target=event.target;const selectedStatistics=target.selectedChips;const summaryFieldElement=target.parentElement;const onStatisticField=summaryFieldElement.description??summaryFieldElement.id;if(this.useInitialSelectedStatistics===true){this.useInitialSelectedStatistics=false}this.valueMap.set(onStatisticField,selectedStatistics);this.updateValue();this.analysisSummaryFieldsChange.emit()};this.closeField=event=>{const fieldName=event.target.parentElement.id;this.selection.delete(fieldName);this.removeFromValueMap(fieldName);if(this.value!==undefined){let filteredValues;if(this.valueFormat==="string"){filteredValues=this.value.filter((summaryField=>summaryField.split(" ")[0]!==fieldName))}else{filteredValues=this.value.filter((summaryField=>summaryField.onStatisticField!==fieldName))}this.value=[...filteredValues];this.analysisSummaryFieldsChange.emit()}this.validate()};this.validate=()=>{this.errorMessage=undefined;const fieldSelectionValidity=this.required?this.valueMap.size>0:true;const selectedStatisticsValidity=Array.from(this.valueMap.values()).every((statistics=>statistics.length>0));if(!fieldSelectionValidity||!selectedStatisticsValidity){this.errorMessage=this.validationParams?.requiredMessage??this.strings.isRequired}};this.renderErrorMessage=()=>this.errorMessage!==undefined?index.h("calcite-input-message",{status:index2.UIInputStatus.INVALID,scale:utils.UIDefaults.Scale,icon:"exclamationMarkTriangle"},this.errorMessage):null;this.renderFields=()=>{const fieldValidationParams={badInputMessage:this.strings.statisticNotSelected,...this.validationParams};return index.h("calcite-list",null,[...this.valueMap.keys()].map((key=>{const currentField=this.layer.fieldsIndex.get(key);const alias=currentField?.alias??key;const selectedStatistics=this.valueMap.get(key);const{statistics,labels}=this.updateStatisticTypes(currentField?.type??"integer");return index.h("calcite-list-item",{class:HTMLClasses.calciteListItem,label:alias,key,id:key,description:currentField?.name},index.h("analysis-chip-group",{onAnalysisChipGroupSelectionChange:this.onAnalysisChipGroupSelectionChange,required:true,scale:"s",class:HTMLClasses.calciteChip,chipLabel:labels,value:statistics,label:this.strings.statistic,selectionMode:"multi",selectAllEnabled:true,initialChipSelection:this.useInitialSelectedStatistics?selectedStatistics:[],selectedChips:selectedStatistics,validationParams:fieldValidationParams}),index.h("calcite-action",{text:"",slot:"actions-end",icon:"trash",onClick:this.closeField}))})))};this.layer=undefined;this.label=undefined;this.valueFormat=undefined;this.value=undefined;this.required=false;this.usePopupTemplatesInfo=true;this.allowDateType=false;this.allowStringType=false;this.showFirstLastStatistics=false;this.validationParams=undefined;this.layerInputLocalizedLabel=undefined;this.noFieldsText=undefined;this.noLayersText=undefined;this.showFieldDescription=false;this.fieldPopoverOpen=false;this.errorMessage=undefined}valueChange(){this.valueFormat=this.value!==undefined&&this.value.length>0&&typeof this.value[0]==="object"?"object":this.valueFormat??"string";if(this.value!==undefined&&this.valueMap.size===0&&this.valueFormat!==undefined){this.selection=new Set;this.value.forEach((value=>{let onStatisticField;let statisticType;if(this.valueFormat==="string"){const valueArr=value.split(" ");onStatisticField=valueArr[0];statisticType=valueArr[1]}else{onStatisticField=value.onStatisticField;statisticType=value.statisticType}this.updateValueMap(onStatisticField,statisticType);this.selection.add(onStatisticField)}))}}async layerChange(newLayer,oldLayer){if(newLayer!==undefined&&oldLayer===undefined&&this.useInitialSelectedStatistics===false&&this.value!==undefined){this.valueChange();this.useInitialSelectedStatistics=true}else{this.valueMap=new Map;this.selection=new Set;if(oldLayer!==undefined){this.value=undefined;this.analysisSummaryFieldsChange.emit()}}if(newLayer?.loaded===false){this.abortController?.abort();try{this.abortController=new AbortController;await(newLayer?.load(this.abortController.signal))}catch(err){if(!index2.wasAborted(err)){this.errorMessage=this.strings.fieldLoadingErrorText}}}this.closePopover()}disconnectedCallback(){this.closePopover()}async componentWillLoad(){({strings:this.strings}=await index2.fetchComponentLocaleStrings(this.hostElement,index.getAssetPath(`.`)));if(this.layer!==undefined||this.usePopupTemplatesInfo!==undefined){await this.layerChange(this.layer)}if(this.layer!==undefined&&this.value!==undefined){this.valueChange();this.useInitialSelectedStatistics=true}}async checkValidity(){this.validate();return Promise.resolve(this.errorMessage===undefined)}updateValue(){const selectedSummaryFields=[];this.valueMap.forEach(((value,key)=>{value.forEach((statisticType=>{let summaryField;if(this.valueFormat==="string"){summaryField=`${key} ${statisticType}`;selectedSummaryFields.push(summaryField)}else{summaryField={onStatisticField:key,statisticType};selectedSummaryFields.push(summaryField)}}))}));this.value=[...selectedSummaryFields]}removeFromValueMap(fieldName){const newValueMap=this.valueMap;newValueMap.delete(fieldName);this.valueMap=new Map(newValueMap)}updateStatisticTypes(fieldType){let statistics=[];let labels=[];if(index2.isNumericField(fieldType)===true){statistics=[utils.StatisticType.Sum,utils.StatisticType.Minimum,utils.StatisticType.Maximum,utils.StatisticType.Mean,utils.StatisticType.StdDev];labels=[this.strings.sum,this.strings.min,this.strings.max,this.strings.mean,this.strings.standardDeviation]}else if(fieldType==="date"&&this.allowDateType===true){statistics=[utils.StatisticType.Minimum,utils.StatisticType.Maximum];labels=[this.strings.min,this.strings.max]}else if(fieldType==="string"&&this.allowStringType===true){statistics=[utils.StatisticType.Any,utils.StatisticType.Count];labels=[this.strings.any,this.strings.count]}if(this.showFirstLastStatistics===true){statistics=[...statistics,utils.StatisticType.First,utils.StatisticType.Last];labels=[...labels,this.strings.first,this.strings.last]}return{statistics,labels}}render(){return index.h(index.Host,null,this.label!==undefined&&this.label!==""?index.h("analysis-label",{label:this.label,required:this.required,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}):null,this.valueMap!==undefined&&this.valueMap.size>0&&this.renderFields(),index.h("calcite-button",{appearance:"outline",kind:"neutral","icon-start":"plus",round:true,width:"full",scale:utils.UIDefaults.Scale,ref:el=>{this.fieldButton=el},onClick:this.popoverAction},this.strings.field),this.renderErrorMessage())}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get watchers(){return{value:["valueChange"],layer:["layerChange"],usePopupTemplatesInfo:["layerChange"]}}static get style(){return analysisSummaryFieldsCss}},[1,"analysis-summary-fields",{layer:[16],label:[513],valueFormat:[1537,"value-format"],value:[1040],required:[516],usePopupTemplatesInfo:[516,"use-popup-templates-info"],allowDateType:[516,"allow-date-type"],allowStringType:[516,"allow-string-type"],showFirstLastStatistics:[516,"show-first-last-statistics"],validationParams:[16],layerInputLocalizedLabel:[1,"layer-input-localized-label"],noFieldsText:[1,"no-fields-text"],noLayersText:[1,"no-layers-text"],showFieldDescription:[4,"show-field-description"],fieldPopoverOpen:[32],errorMessage:[32],checkValidity:[64]},undefined,{value:["valueChange"],layer:["layerChange"],usePopupTemplatesInfo:["layerChange"]}]);function defineCustomElement(){if(typeof customElements==="undefined"){return}const components=["analysis-summary-fields","analysis-chip-group","analysis-label","analysis-summary-fields-popover"];components.forEach((tagName=>{switch(tagName){case"analysis-summary-fields":if(!customElements.get(tagName)){customElements.define(tagName,AnalysisSummaryFields)}break;case"analysis-chip-group":if(!customElements.get(tagName)){analysisChipGroup2.defineCustomElement()}break;case"analysis-label":if(!customElements.get(tagName)){analysisLabel2.defineCustomElement()}break;case"analysis-summary-fields-popover":if(!customElements.get(tagName)){analysisSummaryFieldsPopover2.defineCustomElement()}break}}))}defineCustomElement();exports.AnalysisSummaryFields=AnalysisSummaryFields;exports.defineCustomElement=defineCustomElement}));
