define(["exports"],(function(exports){"use strict";var freeGlobal=typeof global=="object"&&global&&global.Object===Object&&global;var freeSelf=typeof self=="object"&&self&&self.Object===Object&&self;var root=freeGlobal||freeSelf||Function("return this")();var Symbol=root.Symbol;var objectProto$1=Object.prototype;var hasOwnProperty=objectProto$1.hasOwnProperty;var nativeObjectToString$1=objectProto$1.toString;var symToStringTag$1=Symbol?Symbol.toStringTag:undefined;function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag$1),tag=value[symToStringTag$1];try{value[symToStringTag$1]=undefined;var unmasked=true}catch(e){}var result=nativeObjectToString$1.call(value);if(unmasked){if(isOwn){value[symToStringTag$1]=tag}else{delete value[symToStringTag$1]}}return result}var objectProto=Object.prototype;var nativeObjectToString=objectProto.toString;function objectToString(value){return nativeObjectToString.call(value)}var nullTag="[object Null]",undefinedTag="[object Undefined]";var symToStringTag=Symbol?Symbol.toStringTag:undefined;function baseGetTag(value){if(value==null){return value===undefined?undefinedTag:nullTag}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}function isObjectLike(value){return value!=null&&typeof value=="object"}function isObject(value){var type=typeof value;return value!=null&&(type=="object"||type=="function")}exports.Symbol=Symbol;exports.baseGetTag=baseGetTag;exports.freeGlobal=freeGlobal;exports.isObject=isObject;exports.isObjectLike=isObjectLike;exports.root=root}));
