define(["exports","./index-ef555910","./index2-588b02d9","./primitiveFactory-d8ce40e4","./utils-793221d4","./analysis-value-table2-082c3916","./analysis-attribute-expression2-a90d2a8c","./analysis-block2-c341637a","./analysis-boolean-input2-096997f6","./analysis-chip-group2-097fb4b1","./analysis-data-file-input2-34f8bb3a","./analysis-dataset-input2-9534a23f","./analysis-dataset-input-popover2-b6dcb32a","./analysis-date-input2-1f634ecb","./analysis-expression-group2-ce4cdcfd","./analysis-field-input2-e1115e33","./analysis-field-select2-eb77dd22","./analysis-folder-input2-5bb22688","./analysis-geoenrichment-databrowser2-6a737015","./analysis-geoenrichment-input2-4eb9195c","./analysis-help-popover2-8993bf43","./analysis-item-browser2-508c9cf3","./analysis-item-input2-3709ada5","./analysis-key-value2-f3e8961f","./analysis-label2-f17c360a","./analysis-layer-input2-f52c4db0","./analysis-layer-input-popover2-13f7974d","./analysis-linear-unit-input2-62802ce9","./analysis-multiple-input2-31e7ea23","./analysis-number-input2-ee81e720","./analysis-parameter-group2-affdb973","./analysis-query-builder2-59ad1897","./analysis-query-entry2-a97f8d18","./analysis-query-input2-4bacfecd","./analysis-query-modal2-5e925cce","./analysis-query-target-select2-1308b9a9","./analysis-section2-c985ef6b","./analysis-spatial-expression2-5e7137a9","./analysis-spatial-reference-input2-68aa634b","./analysis-spatial-reference-selector2-197bdd55","./analysis-string-input2-61f7c630","./analysis-summary-fields2-732adae8","./analysis-summary-fields-popover2-3708aecb","./analysis-traffic-time-input2-944df8cc","./analysis-tree2-21de4d9f","./analysis-unsupported-input2-606583a1","./analysis-workflow-select2-60915450","./analysis-workflow-select-popover2-a6a5c39c","./isEqual-7dac7fee","./get-4ace6219"],(function(exports,index,index2,primitiveFactory,utils,analysisValueTable2,analysisAttributeExpression2,analysisBlock2,analysisBooleanInput2,analysisChipGroup2,analysisDataFileInput2,analysisDatasetInput2,analysisDatasetInputPopover2,analysisDateInput2,analysisExpressionGroup2,analysisFieldInput2,analysisFieldSelect2,analysisFolderInput2,analysisGeoenrichmentDatabrowser2,analysisGeoenrichmentInput2,analysisHelpPopover2,analysisItemBrowser2,analysisItemInput2,analysisKeyValue2,analysisLabel2,analysisLayerInput2,analysisLayerInputPopover2,analysisLinearUnitInput2,analysisMultipleInput2,analysisNumberInput2,analysisParameterGroup2,analysisQueryBuilder2,analysisQueryEntry2,analysisQueryInput2,analysisQueryModal2,analysisQueryTargetSelect2,analysisSection2,analysisSpatialExpression2,analysisSpatialReferenceInput2,analysisSpatialReferenceSelector2,analysisStringInput2,analysisSummaryFields2,analysisSummaryFieldsPopover2,analysisTrafficTimeInput2,analysisTree2,analysisUnsupportedInput2,analysisWorkflowSelect2,analysisWorkflowSelectPopover2,isEqual,get){"use strict";const AnalysisToolParamDirection={Input:"esriGPParameterDirectionInput",Output:"esriGPParameterDirectionOutput"};const ParamViewModelKey="parameterViewModel";const UIParamModelKeys=["choiceListLabels","label","visible","componentName","serializationType","serializationParameterName","serializationKeys","uiParameterInfoSubSet","submissionName"];const ToolParamModelKeys=["dataType","choiceList","parameterType"];const ParameterGroupInput=({name,value,onSetRef,onValueChange,onHelpClick,label,required,UIparameterInfos,dataType,paramGroupDataType,...extraProps})=>{const initialDataType=paramGroupDataType??dataType;return index.h("analysis-parameter-group",{key:name,groupLabel:label,required,value,UIparameterInfos,dataType:initialDataType,ref:onSetRef,onAnalysisParameterGroupInputChange:onValueChange,onAnalysisHelpClick:onHelpClick,...extraProps})};const ValueTable=({name,onSetRef,onValueChange,onHelpClick,label,value,...extraProps})=>index.h("analysis-value-table",{key:name,ref:onSetRef,onAnalysisValueTableChange:onValueChange,label,value,onAnalysisHelpClick:onHelpClick,...extraProps});const KeyValue=({value,layout,parameterInfos,onSetRef,onValueChange,onHelpClick,UIparameterInfos,label,...extraProps})=>index.h("analysis-key-value",{value,layout,parameterInfos,UIparameterInfos,label,ref:onSetRef,onAnalysisKeyValueChange:onValueChange,onAnalysisHelpClick:onHelpClick,...extraProps});const GenericMultiValue=({name,onSetRef,onValueChange,onHelpClick,label,value,required,...extraProps})=>{const parameterInfos=!index2.isEmptyDataItem(extraProps.parameterInfos)?extraProps.parameterInfos:[{name:"",dataType:extraProps.dataType?.split(":")[1]}];console.log(extraProps);return index.h("analysis-value-table",{description:extraProps.description,key:name,label,required,value,valueWithoutKey:true,parameterInfos,UIparameterInfos:extraProps?.UIparameterInfos,onAnalysisHelpClick:onHelpClick,onAnalysisValueTableChange:onValueChange,ref:onSetRef})};const Block=({label,summaryText,...extraProps},children)=>index.h("analysis-block",{label,summaryText,...extraProps},children);const Section=({label,open},children)=>index.h("analysis-section",{label,open},children);const DefaultContainer=(_,children)=>children;const complexComponentByType={[primitiveFactory.AnalysisToolParamDataType.GPValueTable]:ValueTable,[primitiveFactory.AnalysisToolParamDataType.GPMultiValueDate]:GenericMultiValue,[primitiveFactory.AnalysisToolParamDataType.GPMultiValueLinearUnit]:GenericMultiValue};const componentByType={...primitiveFactory.primitiveComponentByType,...complexComponentByType};const complexComponentByName={"analysis-parameter-group":ParameterGroupInput,"analysis-value-table":ValueTable,"analysis-key-value":KeyValue};const componentByName={...primitiveFactory.primitiveComponentByName,...complexComponentByName};const containerComponentByName={"analysis-block":Block,"analysis-section":Section};const AnalysisParameter=props=>{let Component=undefined;if(props.componentName!==undefined){Component=componentByName[props.componentName]}else if(props.dataType!==undefined){Component=componentByType[props.dataType]}Component=Component??primitiveFactory.NotFoundInput;return index.h(Component,{...primitiveFactory.standardizeInputProperties(props)})};const createComponent=AnalysisParameter;const AnalysisParameterContainer=(allProps,children)=>{let Container;if(allProps.componentName!==undefined){Container=containerComponentByName[allProps.componentName]}const{componentName,...keptProps}=allProps;Container=Container??DefaultContainer;return index.h(Container,{...keptProps},children)};function createHelpPopover(params){const{helpUrl,helpId,heading,referenceElement,isHelpFileExternalAsset,portalHelpMap,portal,helpFileName,learnMoreBaseUrl,learnMoreUrl,analysisEngine,placement,offsetDistance,offsetSkidding,externalHelpMap}=params;const popover=document.createElement("analysis-help-popover");popover.helpUrl=helpUrl;popover.helpId=helpId;popover.heading=heading;popover.referenceElement=referenceElement;popover.placement=placement??"leading-start";popover.isHelpFileExternalAsset=isHelpFileExternalAsset;popover.portalHelpMap=portalHelpMap;popover.portal=portal;popover.helpFileName=helpFileName;popover.analysisEngine=analysisEngine;popover.learnMoreBaseUrl=learnMoreBaseUrl;popover.learnMoreUrl=learnMoreUrl;if(offsetDistance!==undefined){popover.offsetDistance=offsetDistance}if(offsetSkidding!==undefined){popover.offsetSkidding=offsetSkidding}popover.externalHelpMap=externalHelpMap;return popover}function showHelp(toolHelpPopover,params){const{helpUrl,helpId,heading,referenceElement,isHelpFileExternalAsset,portalHelpMap,portal,helpFileName,learnMoreBaseUrl,learnMoreUrl,analysisEngine,offsetDistance,offsetSkidding,externalHelpMap}=params;if(toolHelpPopover!==undefined){utils.removeOpenableDomElement(toolHelpPopover);toolHelpPopover=undefined}toolHelpPopover=createHelpPopover({helpUrl,helpId,heading,referenceElement,isHelpFileExternalAsset,portalHelpMap,portal,helpFileName,analysisEngine,learnMoreBaseUrl,learnMoreUrl,offsetDistance,offsetSkidding,externalHelpMap});utils.addOpenableDomElement(document,toolHelpPopover);return toolHelpPopover}const localizeLabel=(label,toolUIStrings)=>{let localizedLabel=label;if(toolUIStrings!==undefined&&label!==undefined&&label.startsWith("$")){localizedLabel=toolUIStrings[label.replace("$","")]}return localizedLabel};const localizeChoiceListLabels=(choiceListLabels,toolUIStrings)=>{const localizedChoiceListLabels={};if(choiceListLabels!==undefined){Object.entries(choiceListLabels).forEach((([key,value])=>{const localizedLabel=localizeLabel(value,toolUIStrings);if(localizedLabel!==undefined){localizedChoiceListLabels[key]=localizedLabel}}))}return localizedChoiceListLabels};const localizeValidationParams=(validationParams,toolUIStrings)=>{const localizedValidationParams={};if(validationParams!==undefined){Object.entries(validationParams).forEach((([key,value])=>{if(typeof value==="object"){localizedValidationParams.variables=value}else{const localizedLabel=localizeLabel(value,toolUIStrings);if(localizedLabel!==undefined){localizedValidationParams[key]=localizedLabel}}}))}return localizedValidationParams};function localizeParameter({label,placeholderText,heading,filterPlaceholderText,selectButtonLabel,replaceTooltipText,choiceListLabels,UIparameterInfos,validationParams,parameterGroupDataTypeLabel,disabledTooltip,noFieldsText,noLayersText,...rest},toolUIStrings){const localChoiceListLabels=choiceListLabels!==undefined?localizeChoiceListLabels(choiceListLabels,toolUIStrings):undefined;const localParameterInfos=UIparameterInfos!==undefined?UIparameterInfos.map((info=>localizeParameter(info,toolUIStrings))):undefined;const localValidationParams=validationParams!==undefined?localizeValidationParams(validationParams,toolUIStrings):undefined;return{label:localizeLabel(label,toolUIStrings),placeholderText:localizeLabel(placeholderText,toolUIStrings),heading:localizeLabel(heading,toolUIStrings),filterPlaceholderText:localizeLabel(filterPlaceholderText,toolUIStrings),selectButtonLabel:localizeLabel(selectButtonLabel,toolUIStrings),replaceTooltipText:localizeLabel(replaceTooltipText,toolUIStrings),choiceListLabels:localChoiceListLabels,UIparameterInfos:localParameterInfos,validationParams:localValidationParams,parameterGroupDataTypeLabel:localizeLabel(parameterGroupDataTypeLabel,toolUIStrings),disabledTooltip:localizeLabel(disabledTooltip,toolUIStrings),noFieldsText:localizeLabel(noFieldsText,toolUIStrings),noLayersText:localizeLabel(noLayersText,toolUIStrings),...rest}}const HTMLClasses={parametersContainer:"parameters-container",horizontal:"horizontal",vertical:"vertical"};const analysisToolCss=":root{--analysis-quarter-spacing:0.25rem;--analysis-half-spacing:0.5rem;--analysis-three-quarter-spacing:0.75rem;--analysis-full-spacing:1rem;--analysis-component-default-width:100%;--analysis-ui-border-input:#d4d4d4;--analysis-label-font-size:var(--calcite-font-size--2);--analysis-popover-content-min-height-s:7.5rem;--analysis-popover-content-min-height-m:8.75rem;--analysis-popover-content-max-height:60vh;--analysis-popover-content-height:45vh}.parameters-container{display:flex;justify-content:space-between;column-gap:5%;width:var(--analysis-parameter-default-width)}.horizontal{flex-direction:row;align-items:center}.vertical{flex-direction:column}";const AnalysisTool=index.proxyCustomElement(class AnalysisTool extends index.H{constructor(){super();this.__registerHost();this.__attachShadow();this.analysisToolDataChange=index.createEvent(this,"analysisToolDataChange",7);this.analysisToolHelpPopoverChange=index.createEvent(this,"analysisToolHelpPopoverChange",7);this.analysisToolLoaded=index.createEvent(this,"analysisToolLoaded",7);this.locale=index2.SupportedLocales.EnglishUSA;this.parameterViewModel={};this.renderParameter=param=>{const value=param?.value??this.toolData[param?.name];const name=param?.name??param?.displayName;const parameterValidationParams=this.parameterNotificationState?.[param.name]?.errors?.[0]??param?.validationParams;const selectedLayersKey=index2.generateSelectedLayersKey(param?.name);const selectedLayers=this.toolData[selectedLayersKey];let formattedSelectedLayers=selectedLayers;if(selectedLayers?.length===0){formattedSelectedLayers=undefined}else if(selectedLayers?.length===1){formattedSelectedLayers=selectedLayers[0]}const dataTypeKey=index2.generateParamGroupDataTypeKey(param?.name);const dataType=this.toolData[dataTypeKey];const layers=[...this.mapLayers??[],...selectedLayers??[]];const uniqueLayerIds=new Set(layers.map((layer=>layer.id)));const mapLayers=Array.from(uniqueLayerIds).map((id=>{const matchingLayer=layers.find((layer=>layer.id===id));return matchingLayer}));return index.h(AnalysisParameter,{...param,key:name,name,value,validationParams:parameterValidationParams,mapLayers,analysisDatasets:this.analysisDatasets,mapView:this.mapView,selectedLayers:formattedSelectedLayers,paramGroupDataType:dataType,portal:this.portal,user:this.user,portalHelpMap:this.portalHelpMap,supportsUpload:this.supportsUpload,serviceUrl:this.serviceUrl,toolData:this.toolData,onSetRef:ref=>this.handleOnSetRef(param.name,ref),onValueChange:event=>this.parameterChanged(param.name,event),onHelpClick:event=>{const{paramName=param.name,paramLabel=param.label??paramName,refElement=this.renderedParameters[paramName]}=event.detail??{};this.toolHelpPopover=showHelp(this.toolHelpPopover,{analysisEngine:this.analysisEngine,helpUrl:this.toolHelpFilePath,helpId:paramName,helpFileName:this.toolJson?.name,heading:paramLabel,referenceElement:refElement,isHelpFileExternalAsset:this.isHelpFileExternalAsset,portal:this.portal??this.user?.portal,portalHelpMap:this.portalHelpMap,learnMoreBaseUrl:this.portal?.sourceJSON.helpBase??undefined})},onClick:()=>{utils.removeOpenableDomElement(this.toolHelpPopover)}})};this.renderParameterContainer=(param,children)=>{const summaryText=param?.summaryText;const classContainer=HTMLClasses.parametersContainer;const direction=analysisKeyValue2.AnalysisToolUILayout.Vertical;return index.h(AnalysisParameterContainer,{...param,componentName:param.componentName,label:param.label,summaryText:localizeLabel(summaryText,this.toolUIStrings??this.internalToolUIStrings)},index.h("div",{class:`${classContainer} ${direction}`},children))};this.handleOnSetRef=(paramName,ref)=>{if(ref!==null){this.renderedParameters[paramName]=ref}else{delete this.renderedParameters[paramName];delete this.toolData[paramName]}};this.parameterChanged=(paramName,event)=>{const newData={...this.toolData};const{travelModeInfo}=this.toolUIJson??{};if(event.target!==null&&paramName!==undefined){const controlElement=event.target;if(this.toolJson!==undefined&&controlElement.value!==index2.StraightLineParameterValue&&index2.isTravelModeParameter(paramName,this.toolJson.name)===true){if(travelModeInfo?.travelModes!==undefined){const matchingTravelMode=travelModeInfo?.travelModes.filter((travelMode=>travelMode.id===controlElement.value))[0];newData[paramName]={...matchingTravelMode}}}else if(paramName==="timeOfDay"){const trafficTimeControlValue=controlElement.value;newData[paramName]=trafficTimeControlValue?.timeOfDay;newData.timeZoneForTimeOfDay=trafficTimeControlValue?.timeZoneForTimeOfDay}else if(paramName==="analysisVariables"){const{analysisVariables,country,hierarchy,labels,countryAlias,hierarchyAlias}=controlElement.value??{};newData[paramName]=analysisVariables;newData.labels=labels;if(country!==undefined){newData.country=country}if(hierarchy!==undefined){newData.hierarchy=hierarchy}if(countryAlias!==undefined){newData.countryAlias=countryAlias}if(hierarchyAlias!==undefined){newData.hierarchyAlias=hierarchyAlias}}else if(paramName==="queryBuilder"){const{expressions,inputLayers}=controlElement.value??{};newData.expressions=expressions;newData.inputLayers=inputLayers}else{let value;switch(controlElement.nodeName){case"ANALYSIS-PARAMETER-GROUP":value=controlElement.value;newData[paramName]=value;const dataTypeKey=index2.generateParamGroupDataTypeKey(paramName);const dataType=controlElement.dataType;newData[dataTypeKey]=dataType;break;default:value=controlElement.value;newData[paramName]=value;break}}newData[ParamViewModelKey]=this[ParamViewModelKey];this.toolData=newData;this.analysisToolDataChange.emit({toolData:newData,parameterName:paramName})}};this.toolUIJson=undefined;this.toolHelpFilePath=undefined;this.isHelpFileExternalAsset=false;this.analysisEngine=analysisHelpPopover2.AnalysisEngine.Standard;this.usePanel=true;this.closable=true;this.toolUIStrings=undefined;this.toolJson=undefined;this.toolData={};this.mapLayers=undefined;this.mapView=undefined;this.analysisDatasets=undefined;this.learnMoreUrl=undefined;this.externalHelpMap=undefined;this.user=undefined;this.portal=undefined;this.portalHelpMap=undefined;this.toolHelpPopover=undefined;this.environmentSettings=undefined;this.parameterNotificationState={};this.supportsUpload=false;this.serviceUrl=undefined;this.renderedParameters={};this.internalToolUIStrings=undefined}toolUIJsonChange(newValue,oldValue){if(isEqual.isEqual(newValue?.t9n,oldValue?.t9n)===false){this.internalToolUIStrings={...newValue?.t9n}}}async toolDataChange(newValue,oldValue){const asyncGeocodeUrl=this.portal?.helperServices.asyncGeocode?.url;const geoenrichmentUrl=this.portal?.helperServices.geoenrichment?.url;if(!index2.isEmptyDataItem(asyncGeocodeUrl)&&this.toolJson?.name==="BatchGeocode"&&this.toolUIJson!==undefined){const geocodeServiceURL=newValue?.geocodeServiceURL;const allOtherStaticRules=this.toolUIJson.rules?.filter((rule=>rule.destination!=="sourceCountry"&&rule.destination!=="geocodeUIParameters"));const countryRule=await index2.getToolUIJsonWithSourceCountryRule({geocodeServiceURL,locale:this.locale});let analyzeGeocodeParams={asyncGeocodeUrl,geocodeServiceURL,locale:this.locale};const inputFile=get.get(this.renderedParameters,"inputFileItem.selectedItem");const inputTable=newValue?.inputTable;if(!index2.isEmptyDataItem(inputFile?.id)){const fileType=inputFile.type==="CSV"?"csv":"xlsx";analyzeGeocodeParams={...analyzeGeocodeParams,inputFileItem:{itemid:inputFile.id},inputFileParameters:{fileType,headerRowExists:"true",columnDelimiter:"",textQualifier:""}}}else if(!index2.isEmptyDataItem(inputTable?.url)){analyzeGeocodeParams={...analyzeGeocodeParams,inputTable:{url:inputTable.url,serviceToken:inputTable.serviceToken}}}const{addressFieldsRule,geocodeParameters}=await index2.getAddressFieldMappingRules(analyzeGeocodeParams);this.toolData.geocodeParameters=geocodeParameters;if(allOtherStaticRules!==undefined){allOtherStaticRules.push(countryRule);if(addressFieldsRule){allOtherStaticRules.push(addressFieldsRule)}this.toolUIJson.rules=allOtherStaticRules;this.toolUIJson={...this.toolUIJson}}}else if(!index2.isEmptyDataItem(geoenrichmentUrl)&&this.toolJson?.name==="EnrichLayer"&&this.toolUIJson!==undefined&&!isEqual.isEqual(analysisExpressionGroup2.omit(newValue?.inputLayer,"serviceToken"),analysisExpressionGroup2.omit(oldValue?.inputLayer,"serviceToken"))){let country;if(newValue!==undefined&&!index2.isEmptyDataItem(newValue?.inputLayer)){country=await index2.getCountry({inputLayer:this.renderedParameters.inputLayer.selectedLayers,mapView:this.mapView,geoenrichmentUrl});newValue.country=country}if(newValue!==undefined){newValue.analysisVariables=undefined;newValue.hierarchy=undefined}this.toolData={...this.toolData,...analysisKeyValue2.pick(newValue,"inputLayer","analysisVariables","hierarchy","country")}}}async onUserChange(){let hasAdvancedLicense=false;if(this.portal!==undefined){hasAdvancedLicense=await index2.isStandardAnalysisServerAdvanced(this.portal)}this.toolData={...this.toolData,...{userSettings:{unitSystem:this.user?.units,hasNAPrivilege:index2.hasNAPrivilege(this.user),hasGEPrivilege:index2.hasGeoEnrichmentPrivilege(this.user),hasAdvancedLicense}}};this.analysisToolDataChange.emit({toolData:this.toolData,parameterName:undefined})}toolHelpPopoverChange(){this.analysisToolHelpPopoverChange.emit()}disconnectedCallback(){utils.removeOpenableDomElement(this.toolHelpPopover)}async componentWillLoad(){const{rtl,locale}=index2.getLocaleInfo(this.hostElement);this.locale=locale;this.dir=rtl===true?"rtl":"ltr";let hasAdvancedLicense=false;if(this.user!==undefined){hasAdvancedLicense=await index2.isStandardAnalysisServerAdvanced(this.user?.portal)}if(this.toolUIJson!==undefined){this.toolUIJsonChange(this.toolUIJson)}if(this.toolUIStrings!==undefined){this.internalToolUIStrings={...this.toolUIStrings};if(this.toolUIJson!==undefined&&this.toolUIJson?.t9n===undefined){this.toolUIJson.t9n=this.toolUIStrings}}if(index2.isEmptyDataItem(this.toolData)===true&&this.toolJson?.parameters!==undefined){this.toolData=await this.getDefaultValues(hasAdvancedLicense,this.toolJson.parameters,this.toolUIJson?.UIparameters);if(!index2.isEmptyDataItem(this.toolData)){this.analysisToolDataChange.emit({toolData:this.toolData,parameterName:undefined})}}}componentDidLoad(){this.analysisToolLoaded.emit()}async validateTool(){const toolValidityErrorKey=await this.checkToolValidity();const toolValidatityRuleErrorKeys=this.checkToolValidationRules();const combinedErrors=toolValidatityRuleErrorKeys;if(toolValidityErrorKey!==undefined)combinedErrors.push(toolValidityErrorKey);return{valid:combinedErrors.length===0,errorKeys:combinedErrors}}render(){const toolParameters=this.toolUIJson!==undefined?this.renderWithUIParameters(this.toolUIJson.UIparameters):this.renderWithoutUIParameters();let toolTitle;if(this.toolJson!==undefined&&this.internalToolUIStrings?.toolInfo!==undefined){const toolTitleT9NKey=`${index2.toCamelToolName(this.toolJson?.name)}${index2.formatAnalysisEngineSuffix(this.analysisEngine)}`;toolTitle=this.internalToolUIStrings.toolInfo?.[toolTitleT9NKey]}toolTitle=toolTitle??this.toolUIJson?.toolName??this.toolJson?.displayName;return index.h(index.Host,null,this.usePanel===true?index.h("calcite-panel",{dir:this.dir,heading:toolTitle,closable:this.closable,ref:el=>{this.panelElement=el}},index.h("calcite-action",{label:"",text:"",icon:"information",slot:"header-actions-end",onClick:()=>{if(this.toolHelpFilePath!==undefined){this.toolHelpPopover=showHelp(this.toolHelpPopover,{helpUrl:this.toolHelpFilePath,helpId:"toolDescription",heading:toolTitle,referenceElement:this.panelElement,isHelpFileExternalAsset:true,portal:this.portal??this.user?.portal,portalHelpMap:this.portalHelpMap,helpFileName:this.toolJson?.name,analysisEngine:this.analysisEngine,learnMoreBaseUrl:this.portal?.sourceJSON.helpBase,learnMoreUrl:this.learnMoreUrl,offsetDistance:15,externalHelpMap:this.externalHelpMap})}}}),toolParameters):toolParameters)}renderWithUIParameters(UIparameters){const{rules,travelModeInfo}=this.toolUIJson??{};const rulesByDestination=analysisValueTable2.getRulesByDestination(rules??[]);const combinedParams=analysisValueTable2.joinParams(UIparameters??[],this.toolJson?.parameters??[]);const modifiedParams=[];for(let modifiedParam of combinedParams){const paramName=modifiedParam.name;if(paramName===undefined){modifiedParams.push(modifiedParam);continue}let modifiedData=this.toolData;if(this.toolJson!==undefined&&index2.isTravelModeParameter(paramName,this.toolJson.name)===true){[modifiedParam,modifiedData]=analysisValueTable2.adaptForTravelModes({param:modifiedParam,data:modifiedData,travelModeInfo,straightLineLabel:this.internalToolUIStrings?.straightLineLabel??undefined})}else{modifiedData[paramName]??(modifiedData[paramName]=modifiedParam.value);modifiedParam.value=modifiedData[paramName]}const relevantRules=rulesByDestination.get(paramName);if(relevantRules!==undefined){[modifiedParam,modifiedData]=analysisValueTable2.applyRules({param:modifiedParam,data:modifiedData,rules:relevantRules,renderedParameters:this.renderedParameters,currentTool:this.hostElement})}[modifiedParam,modifiedData]=analysisValueTable2.applyVisibilityRules({param:modifiedParam,data:modifiedData,renderedParameters:this.renderedParameters});modifiedParams.push(modifiedParam);if(modifiedParam.name!==undefined&&modifiedParam.UIparameters===undefined){const paramModelObj=analysisKeyValue2.pick(modifiedParam,[...UIParamModelKeys,...ToolParamModelKeys]);if("UIparameterInfos"in modifiedParam){const uiParameterInfoSubSet={};modifiedParam.UIparameterInfos?.forEach((param=>{if(param.name!==undefined){uiParameterInfoSubSet[param.name]=analysisKeyValue2.pick(param,UIParamModelKeys)}}));paramModelObj.uiParameterInfoSubSet=uiParameterInfoSubSet}this[ParamViewModelKey][modifiedParam.name]=paramModelObj}}return modifiedParams.filter((param=>param.visible!==false)).map((param=>localizeParameter(param,this.toolUIStrings??this.internalToolUIStrings))).map((param=>{if(param.UIparameters!==undefined){const children=this.renderWithUIParameters(param.UIparameters);return this.renderParameterContainer(param,children)}else{const toolParam=param;return this.renderParameter(toolParam)}}))}renderWithoutUIParameters(){const parameters=this.toolJson?.parameters??[];return parameters?.filter((param=>param.direction===AnalysisToolParamDirection.Input)).map(this.renderParameter)}async getDefaultValues(hasAdvancedLicense,toolJsonParameters,toolUIJsonParameters){let defaultValues={};const{travelModeInfo,rules}=this.toolUIJson??{};const{name}=this.toolJson??{};const toolUIJsonParametersByName=index2.getUIParamsByName(toolUIJsonParameters??[]);defaultValues=analysisValueTable2.applyUserSettings({defaultValues,user:this.user,hasAdvancedLicense});defaultValues=analysisValueTable2.applyToolUIJsonParameterDefaults({defaultValues,toolName:name,toolUIJsonParametersByName,travelModeInfo});defaultValues=analysisValueTable2.applyToolParameterDefaults({defaultValues,toolJsonParameters,toolUIJsonParametersByName});defaultValues=analysisValueTable2.applyUserSettingsRules({defaultValues,toolUIJsonParametersByName,rules});const defaultLayerValues=await this.getDefaultLayerValues(toolJsonParameters);defaultValues={...defaultValues,...defaultLayerValues};return defaultValues}async getDefaultLayerValues(parameters){const defaultLayerValues={};for(const param of parameters){if(param.defaultValue!==undefined&&param.defaultValue!==null&&typeof param.defaultValue==="object"&&(param.dataType==="GPFeatureRecordSetLayer"||param.dataType==="GPRecordSet")&&"url"in param.defaultValue){const{existingLayers,layersToAdd}=await index2.convertJobLayersToMapLayers([param.defaultValue],this.mapLayers??[]);const selectedLayersKey=index2.generateSelectedLayersKey(param?.name);defaultLayerValues[selectedLayersKey]=[...existingLayers,...layersToAdd]}}return defaultLayerValues}async checkToolValidity(){const componentValidationResults=Object.values(this.renderedParameters).filter((component=>"checkValidity"in component&&typeof component.checkValidity==="function")).map((component=>component.checkValidity()));const allValid=await Promise.all(componentValidationResults).then((results=>results.every((result=>result===true))));return allValid===true?undefined:index2.DEFAULT_ERROR_KEY}checkToolValidationRules(){const{validationRules}=this.toolUIJson||{};const errorKeys=[];validationRules?.forEach((rule=>{const ruleResult=index2.processValidationRule({rule,data:this.toolData,renderedParams:this.renderedParameters,currentTool:this.hostElement});if(ruleResult===true)errorKeys.push(rule.errorKey)}));return errorKeys}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get watchers(){return{toolUIJson:["toolUIJsonChange"],toolData:["toolDataChange"],user:["onUserChange"],toolHelpPopover:["toolHelpPopoverChange"]}}static get style(){return analysisToolCss}},[1,"analysis-tool",{toolUIJson:[16],toolHelpFilePath:[513,"tool-help-file-path"],isHelpFileExternalAsset:[516,"is-help-file-external-asset"],analysisEngine:[513,"analysis-engine"],usePanel:[516,"use-panel"],closable:[516],toolUIStrings:[16],toolJson:[16],toolData:[1040],mapLayers:[16],mapView:[16],analysisDatasets:[16],learnMoreUrl:[513,"learn-more-url"],externalHelpMap:[16],user:[16],portal:[16],portalHelpMap:[16],toolHelpPopover:[1040],environmentSettings:[16],parameterNotificationState:[16],supportsUpload:[4,"supports-upload"],serviceUrl:[1,"service-url"],renderedParameters:[32],internalToolUIStrings:[32],validateTool:[64]},undefined,{toolUIJson:["toolUIJsonChange"],toolData:["toolDataChange"],user:["onUserChange"],toolHelpPopover:["toolHelpPopoverChange"]}]);function defineCustomElement(){if(typeof customElements==="undefined"){return}const components=["analysis-tool","analysis-attribute-expression","analysis-block","analysis-boolean-input","analysis-chip-group","analysis-data-file-input","analysis-dataset-input","analysis-dataset-input-popover","analysis-date-input","analysis-expression-group","analysis-field-input","analysis-field-select","analysis-folder-input","analysis-geoenrichment-databrowser","analysis-geoenrichment-input","analysis-help-popover","analysis-item-browser","analysis-item-input","analysis-key-value","analysis-label","analysis-layer-input","analysis-layer-input-popover","analysis-linear-unit-input","analysis-multiple-input","analysis-number-input","analysis-parameter-group","analysis-query-builder","analysis-query-entry","analysis-query-input","analysis-query-modal","analysis-query-target-select","analysis-section","analysis-spatial-expression","analysis-spatial-reference-input","analysis-spatial-reference-selector","analysis-string-input","analysis-summary-fields","analysis-summary-fields-popover","analysis-traffic-time-input","analysis-tree","analysis-unsupported-input","analysis-value-table","analysis-workflow-select","analysis-workflow-select-popover"];components.forEach((tagName=>{switch(tagName){case"analysis-tool":if(!customElements.get(tagName)){customElements.define(tagName,AnalysisTool)}break;case"analysis-attribute-expression":if(!customElements.get(tagName)){analysisAttributeExpression2.defineCustomElement()}break;case"analysis-block":if(!customElements.get(tagName)){analysisBlock2.defineCustomElement()}break;case"analysis-boolean-input":if(!customElements.get(tagName)){analysisBooleanInput2.defineCustomElement()}break;case"analysis-chip-group":if(!customElements.get(tagName)){analysisChipGroup2.defineCustomElement()}break;case"analysis-data-file-input":if(!customElements.get(tagName)){analysisDataFileInput2.defineCustomElement()}break;case"analysis-dataset-input":if(!customElements.get(tagName)){analysisDatasetInput2.defineCustomElement()}break;case"analysis-dataset-input-popover":if(!customElements.get(tagName)){analysisDatasetInputPopover2.defineCustomElement()}break;case"analysis-date-input":if(!customElements.get(tagName)){analysisDateInput2.defineCustomElement()}break;case"analysis-expression-group":if(!customElements.get(tagName)){analysisExpressionGroup2.defineCustomElement()}break;case"analysis-field-input":if(!customElements.get(tagName)){analysisFieldInput2.defineCustomElement()}break;case"analysis-field-select":if(!customElements.get(tagName)){analysisFieldSelect2.defineCustomElement()}break;case"analysis-folder-input":if(!customElements.get(tagName)){analysisFolderInput2.defineCustomElement()}break;case"analysis-geoenrichment-databrowser":if(!customElements.get(tagName)){analysisGeoenrichmentDatabrowser2.defineCustomElement()}break;case"analysis-geoenrichment-input":if(!customElements.get(tagName)){analysisGeoenrichmentInput2.defineCustomElement()}break;case"analysis-help-popover":if(!customElements.get(tagName)){analysisHelpPopover2.defineCustomElement()}break;case"analysis-item-browser":if(!customElements.get(tagName)){analysisItemBrowser2.defineCustomElement()}break;case"analysis-item-input":if(!customElements.get(tagName)){analysisItemInput2.defineCustomElement()}break;case"analysis-key-value":if(!customElements.get(tagName)){analysisKeyValue2.defineCustomElement()}break;case"analysis-label":if(!customElements.get(tagName)){analysisLabel2.defineCustomElement()}break;case"analysis-layer-input":if(!customElements.get(tagName)){analysisLayerInput2.defineCustomElement()}break;case"analysis-layer-input-popover":if(!customElements.get(tagName)){analysisLayerInputPopover2.defineCustomElement()}break;case"analysis-linear-unit-input":if(!customElements.get(tagName)){analysisLinearUnitInput2.defineCustomElement()}break;case"analysis-multiple-input":if(!customElements.get(tagName)){analysisMultipleInput2.defineCustomElement()}break;case"analysis-number-input":if(!customElements.get(tagName)){analysisNumberInput2.defineCustomElement()}break;case"analysis-parameter-group":if(!customElements.get(tagName)){analysisParameterGroup2.defineCustomElement()}break;case"analysis-query-builder":if(!customElements.get(tagName)){analysisQueryBuilder2.defineCustomElement()}break;case"analysis-query-entry":if(!customElements.get(tagName)){analysisQueryEntry2.defineCustomElement()}break;case"analysis-query-input":if(!customElements.get(tagName)){analysisQueryInput2.defineCustomElement()}break;case"analysis-query-modal":if(!customElements.get(tagName)){analysisQueryModal2.defineCustomElement()}break;case"analysis-query-target-select":if(!customElements.get(tagName)){analysisQueryTargetSelect2.defineCustomElement()}break;case"analysis-section":if(!customElements.get(tagName)){analysisSection2.defineCustomElement()}break;case"analysis-spatial-expression":if(!customElements.get(tagName)){analysisSpatialExpression2.defineCustomElement()}break;case"analysis-spatial-reference-input":if(!customElements.get(tagName)){analysisSpatialReferenceInput2.defineCustomElement()}break;case"analysis-spatial-reference-selector":if(!customElements.get(tagName)){analysisSpatialReferenceSelector2.defineCustomElement()}break;case"analysis-string-input":if(!customElements.get(tagName)){analysisStringInput2.defineCustomElement()}break;case"analysis-summary-fields":if(!customElements.get(tagName)){analysisSummaryFields2.defineCustomElement()}break;case"analysis-summary-fields-popover":if(!customElements.get(tagName)){analysisSummaryFieldsPopover2.defineCustomElement()}break;case"analysis-traffic-time-input":if(!customElements.get(tagName)){analysisTrafficTimeInput2.defineCustomElement()}break;case"analysis-tree":if(!customElements.get(tagName)){analysisTree2.defineCustomElement()}break;case"analysis-unsupported-input":if(!customElements.get(tagName)){analysisUnsupportedInput2.defineCustomElement()}break;case"analysis-value-table":if(!customElements.get(tagName)){analysisValueTable2.defineCustomElement()}break;case"analysis-workflow-select":if(!customElements.get(tagName)){analysisWorkflowSelect2.defineCustomElement()}break;case"analysis-workflow-select-popover":if(!customElements.get(tagName)){analysisWorkflowSelectPopover2.defineCustomElement()}break}}))}defineCustomElement();exports.AnalysisParameter=AnalysisParameter;exports.AnalysisParameterContainer=AnalysisParameterContainer;exports.AnalysisTool=AnalysisTool;exports.createComponent=createComponent;exports.defineCustomElement=defineCustomElement;exports.showHelp=showHelp}));
