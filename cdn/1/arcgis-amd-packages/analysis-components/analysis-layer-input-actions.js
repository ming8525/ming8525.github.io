define(["exports","./index-ef555910","./index2-588b02d9","./utils-793221d4","esri/request","esri/rest/support/ParameterValue","esri/core/urlUtils","esri/geometry/Point","esri/geometry/Polyline","esri/geometry/Polygon","esri/identity/IdentityManager","esri/core/reactiveUtils","esri/rest/support/Query","esri/core/promiseUtils","esri/portal/PortalItemResource","esri/layers/FeatureLayer","esri/geometry/support/jsonUtils","esri/layers/Layer","esri/portal/PortalItem","esri/layers/support/Field","esri/renderers/Renderer","esri/rest/support/FeatureSet","esri/config","esri/smartMapping/statistics/uniqueValues","esri/rest/support/JobInfo","esri/rest/geoprocessor","esri/core/sql"],(function(exports,index,index2,utils,esriRequest,ParameterValue,urlUtils,Point,Polyline,Polygon,esriId,reactiveUtils,Query,promiseUtils,PortalItemResource,FeatureLayer,geometryJsonUtils,Layer,PortalItem,Field,Renderer,FeatureSet,esriConfig,uniqueValues,JobInfo,geoprocessor,sql){"use strict";const analysisLayerInputActionsCss=":root{--analysis-quarter-spacing:0.25rem;--analysis-half-spacing:0.5rem;--analysis-three-quarter-spacing:0.75rem;--analysis-full-spacing:1rem;--analysis-component-default-width:100%;--analysis-ui-border-input:#d4d4d4;--analysis-label-font-size:var(--calcite-font-size--2);--analysis-popover-content-min-height-s:7.5rem;--analysis-popover-content-min-height-m:8.75rem;--analysis-popover-content-max-height:60vh;--analysis-popover-content-height:45vh}:host{display:block}";const AnalysisLayerInputActions$1=index.proxyCustomElement(class AnalysisLayerInputActions extends index.H{constructor(){super();this.__registerHost();this.__attachShadow();this.analysisLayerInputActionsClick=index.createEvent(this,"analysisLayerInputActionsClick",7);this.analysisLayerInputActionsClose=index.createEvent(this,"analysisLayerInputActionsClose",7);this.referenceElement=undefined;this.placement="auto";this.open=undefined;this.showSelectFeaturesAction=undefined;this.showFilterFeaturesAction=undefined;this.showResetAction=undefined}async componentWillLoad(){({strings:this.strings}=await index2.fetchComponentLocaleStrings(this.hostElement,index.getAssetPath(`.`)))}emitLayerInputAction(action,referenceElement){this.analysisLayerInputActionsClick.emit({action,referenceElement})}render(){return index.h(index.Host,null,index.h("calcite-popover",{autoClose:true,referenceElement:this.referenceElement,placement:this.placement??"auto",open:this.open,pointerDisabled:true,focusTrapDisabled:true,label:""},this.showSelectFeaturesAction===true?index.h("calcite-action",{key:utils.LayerInputActions.Select,textEnabled:true,text:this.strings.selectFeaturesText,icon:"cursor-marquee",onClick:()=>this.emitLayerInputAction(utils.LayerInputActions.Select,this.referenceElement)}):null,this.showFilterFeaturesAction===true?index.h("calcite-action",{key:utils.LayerInputActions.Filter,textEnabled:true,text:this.strings.filterLayerText,icon:"filter",onClick:()=>this.emitLayerInputAction(utils.LayerInputActions.Filter,this.referenceElement)}):null,this.showResetAction===true?index.h("calcite-action",{key:utils.LayerInputActions.Reset,textEnabled:true,text:this.strings.resetText,icon:"reset",onClick:()=>this.emitLayerInputAction(utils.LayerInputActions.Reset,this.referenceElement)}):null,index.h("calcite-action",{key:utils.LayerInputActions.Remove,textEnabled:true,text:this.strings.removeLayerText,icon:"x-circle",onClick:()=>this.emitLayerInputAction(utils.LayerInputActions.Remove,this.referenceElement)})))}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get style(){return analysisLayerInputActionsCss}},[1,"analysis-layer-input-actions",{referenceElement:[16],placement:[513],open:[1540],showSelectFeaturesAction:[516,"show-select-features-action"],showFilterFeaturesAction:[516,"show-filter-features-action"],showResetAction:[516,"show-reset-action"]}]);function defineCustomElement$1(){if(typeof customElements==="undefined"){return}const components=["analysis-layer-input-actions"];components.forEach((tagName=>{switch(tagName){case"analysis-layer-input-actions":if(!customElements.get(tagName)){customElements.define(tagName,AnalysisLayerInputActions$1)}break}}))}defineCustomElement$1();const AnalysisLayerInputActions=AnalysisLayerInputActions$1;const defineCustomElement=defineCustomElement$1;exports.AnalysisLayerInputActions=AnalysisLayerInputActions;exports.defineCustomElement=defineCustomElement;Object.defineProperty(exports,"__esModule",{value:true})}));
