define(["exports","./index2-0f07feca","./shared-components-e09cc192","./store-f16d23c6","./analysis-tool-context-b1931181"],(function(exports,index2,sharedComponents,store,analysisToolContext){"use strict";const analysisToolRasterSettingsCss=":root{display:flex}.control-spacing{margin-bottom:var(--analysis-three-quarter-spacing)}.label-container{display:flex;margin-bottom:var(--analysis-quarter-spacing);gap:var(--analysis-quarter-spacing)}.analysis-border{border:1px solid var(--analysis-ui-border-input)}:host{display:flex;flex-direction:column;--calcite-color-border-input:var(--analysis-ui-border-input)}";const AnalysisToolRasterSettings=index2.proxyCustomElement(class AnalysisToolRasterSettings extends index2.H{constructor(){super();this.__registerHost();this.__attachShadow();this.analysisToolRasterSettingsHelpClick=index2.createEvent(this,"analysisToolRasterSettingsHelpClick",7);this.loadedLayerObjects={};this.inferUIState=async()=>{const{cellSize,snapRaster,mask,resamplingMethod,parallelProcessingFactor,processorType}=store.state.context;if(typeof cellSize==="object"&&!index2.isEmptyDataItem(cellSize)&&"url"in cellSize){this.selectedCellSizeOption=sharedComponents.CellSizeOptions.Layer;const cellSizeLayer=await store.getEnvSettingsLayer({url:this.removeLayerToken(cellSize.url)});if(cellSizeLayer!==undefined){this.loadedLayerObjects.cellSize=cellSizeLayer;if(cellSizeLayer!==undefined&&this.isNotAnExistingLayer(cellSizeLayer)){this.browsedLayers.push(cellSizeLayer)}}}else if(typeof cellSize==="number"){this.selectedCellSizeOption=sharedComponents.CellSizeOptions.Value}else{this.selectedCellSizeOption=cellSize===sharedComponents.CellSizeOptions.MinOf?sharedComponents.CellSizeOptions.MinOf:sharedComponents.CellSizeOptions.MaxOf}if(snapRaster!==undefined){const snapRasterLayer=await store.getEnvSettingsLayer({url:this.removeLayerToken(snapRaster.url)});if(snapRasterLayer!==undefined){this.loadedLayerObjects.snapRaster=snapRasterLayer;if(snapRasterLayer!==undefined&&this.isNotAnExistingLayer(snapRasterLayer)){this.browsedLayers.push(snapRasterLayer)}}}let maskLayer;if(this.incomingLayerObjects.maskLayer!==undefined){maskLayer=await store.getEnvSettingsLayer(this.incomingLayerObjects.maskLayer)}else if(mask!==undefined){const maskCopy={...mask};if("url"in mask&&mask.url!==undefined){maskCopy.url=this.removeLayerToken(maskCopy.url)}maskLayer=await store.getEnvSettingsLayer(maskCopy)}if(maskLayer!==undefined){this.loadedLayerObjects.mask=maskLayer;if(maskLayer!==undefined){this.browsedLayers.push(maskLayer)}}if(resamplingMethod!==undefined){this.selectedResamplingMethodOption=resamplingMethod}if(parallelProcessingFactor!==undefined){this.parallelProcessingFactorValue=parallelProcessingFactor}if(processorType!==undefined){this.selectedProcessorTypeOption=processorType}};this.isNotAnExistingLayer=layer=>{let layerUrl=layer.url;if("layerId"in layer){layerUrl+=`/${layer.layerId??0}`}layerUrl=this.removeLayerToken(layerUrl);return store.findExistingLayer(layerUrl)===undefined};this.removeLayerToken=layerUrl=>layerUrl?.indexOf("?token=")>0?layerUrl.slice(0,layerUrl.indexOf("?token=")):layerUrl;this.renderSnapRasterParameter=()=>{const{strings,loadedLayerObjects}=this;return index2.h("div",null,index2.h("analysis-label",{label:strings.snapRaster,onAnalysisLabelHelpActionClick:event=>this.analysisToolRasterSettingsHelpClick.emit({key:analysisToolContext.AnalysisToolContextKeys.SnapRaster,parameterName:strings.snapRaster,refElement:event.target})}),index2.h("analysis-layer-input",{layerFilterType:analysisToolContext.LayerFilterType.Imagery_All,mapLayers:[...store.state.mapLayers,...this.browsedLayers],selectedLayers:loadedLayerObjects?.snapRaster,user:store.state.portal?.user,mapView:store.state.mapView,onAnalysisLayerInputChange:e=>this.handleAnalysisLayerInputChange(e,analysisToolContext.AnalysisToolContextKeys.SnapRaster)}))};this.renderCellSizeParameter=()=>{const{strings,loadedLayerObjects,selectedCellSizeOption}=this;return index2.h("div",null,index2.h("analysis-label",{label:strings.cellSize,onAnalysisLabelHelpActionClick:event=>this.analysisToolRasterSettingsHelpClick.emit({key:analysisToolContext.AnalysisToolContextKeys.CellSize,parameterName:strings.cellSize,refElement:event.target})}),index2.h("calcite-select",{scale:sharedComponents.UIDefaults.Scale,class:sharedComponents.SharedHTMLClasses.controlSpacing,label:strings.cellSize,value:selectedCellSizeOption,onCalciteSelectChange:e=>this.handleCalciteSelectChange(e)},index2.h("calcite-option",{value:sharedComponents.CellSizeOptions.MaxOf,selected:selectedCellSizeOption===sharedComponents.CellSizeOptions.MaxOf},strings.maxOf),index2.h("calcite-option",{value:sharedComponents.CellSizeOptions.MinOf,selected:selectedCellSizeOption===sharedComponents.CellSizeOptions.MinOf},strings.minOf),index2.h("calcite-option",{value:sharedComponents.CellSizeOptions.Value,selected:selectedCellSizeOption===sharedComponents.CellSizeOptions.Value},strings.asSpecified),index2.h("calcite-option",{value:sharedComponents.CellSizeOptions.Layer,selected:selectedCellSizeOption===sharedComponents.CellSizeOptions.Layer},strings.fromLayer)),selectedCellSizeOption===sharedComponents.CellSizeOptions.Value&&index2.h("analysis-number-input",{ref:el=>{this.numberInputElement=el},required:true,value:store.state.context.cellSize,scale:sharedComponents.UIDefaults.Scale,label:"",min:0,excludeMinValue:true,numberType:"float",onAnalysisNumberInputChange:e=>store.state.context.cellSize=Number(e.target.value)}),selectedCellSizeOption===sharedComponents.CellSizeOptions.Layer&&index2.h("analysis-layer-input",{ref:el=>{this.layerInputElement=el},required:true,layerFilterType:analysisToolContext.LayerFilterType.Imagery_All,mapLayers:[...store.state.mapLayers,...this.browsedLayers],selectedLayers:loadedLayerObjects?.cellSize,user:store.state.portal?.user,mapView:store.state.mapView,onAnalysisLayerInputChange:e=>this.handleAnalysisLayerInputChange(e,analysisToolContext.AnalysisToolContextKeys.CellSize)}))};this.renderMaskParameter=()=>{const{strings,loadedLayerObjects}=this;return index2.h("div",null,index2.h("analysis-label",{label:strings.mask,onAnalysisLabelHelpActionClick:event=>this.analysisToolRasterSettingsHelpClick.emit({key:analysisToolContext.AnalysisToolContextKeys.Mask,parameterName:strings.mask,refElement:event.target})}),index2.h("analysis-layer-input",{mapLayers:[...store.state.mapLayers,...this.browsedLayers],selectedLayers:loadedLayerObjects?.mask,layerFilterType:[analysisToolContext.LayerFilterType.Imagery_All,analysisToolContext.LayerFilterType.Feature_All],user:store.state.portal?.user,mapView:store.state.mapView,onAnalysisLayerInputChange:e=>this.handleAnalysisLayerInputChange(e,analysisToolContext.AnalysisToolContextKeys.Mask)}))};this.renderResamplingMethodParameter=()=>{const{strings,selectedResamplingMethodOption}=this;return index2.h("div",null,index2.h("analysis-label",{label:strings.resamplingMethod,onAnalysisLabelHelpActionClick:event=>this.analysisToolRasterSettingsHelpClick.emit({key:analysisToolContext.AnalysisToolContextKeys.ResamplingMethod,parameterName:strings.resamplingMethod,refElement:event.target})}),index2.h("calcite-select",{scale:sharedComponents.UIDefaults.Scale,class:sharedComponents.SharedHTMLClasses.controlSpacing,label:strings.resamplingMethod,value:selectedResamplingMethodOption,onCalciteSelectChange:e=>this.handleResamplingMethodSelectChange(e)},index2.h("calcite-option",{value:sharedComponents.ResamplingMethodOptions.Nearest,selected:selectedResamplingMethodOption===sharedComponents.ResamplingMethodOptions.Nearest},strings.nearest),index2.h("calcite-option",{value:sharedComponents.ResamplingMethodOptions.Bilinear,selected:selectedResamplingMethodOption===sharedComponents.ResamplingMethodOptions.Bilinear},strings.bilinear),index2.h("calcite-option",{value:sharedComponents.ResamplingMethodOptions.Cubic,selected:selectedResamplingMethodOption===sharedComponents.ResamplingMethodOptions.Cubic},strings.cubic)))};this.renderParallelProcessingFactorParameter=()=>{const{strings,parallelProcessingFactorValue}=this;return index2.h("analysis-string-input",{value:parallelProcessingFactorValue,label:strings.parallelProcessingFactor,required:false,selectionMode:"single",placeholderText:strings.parallelProcessingFactorPlaceholderText,onAnalysisStringInputChange:e=>this.handleParallelProcessingFactorInputChange(e),onAnalysisHelpClick:event=>this.analysisToolRasterSettingsHelpClick.emit({key:analysisToolContext.AnalysisToolContextKeys.ParallelProcessingFactor,parameterName:strings.parallelProcessingFactor,refElement:event.target})})};this.renderProcessorTypeParameter=()=>{const{strings,selectedProcessorTypeOption}=this;return index2.h("div",null,index2.h("analysis-label",{label:strings.processorType,onAnalysisLabelHelpActionClick:event=>this.analysisToolRasterSettingsHelpClick.emit({key:analysisToolContext.AnalysisToolContextKeys.ProcessorType,parameterName:strings.processorType,refElement:event.target})}),index2.h("calcite-select",{scale:sharedComponents.UIDefaults.Scale,class:sharedComponents.SharedHTMLClasses.controlSpacing,label:strings.processorType,value:selectedProcessorTypeOption,onCalciteSelectChange:e=>this.handleProcessorTypeSelectChange(e)},index2.h("calcite-option",{value:sharedComponents.ProcessorTypeOptions.Empty,selected:selectedProcessorTypeOption===sharedComponents.ProcessorTypeOptions.Empty},strings.automatic),index2.h("calcite-option",{value:sharedComponents.ProcessorTypeOptions.CPU,selected:selectedProcessorTypeOption===sharedComponents.ProcessorTypeOptions.CPU},strings.CPU),index2.h("calcite-option",{value:sharedComponents.ProcessorTypeOptions.GPU,selected:selectedProcessorTypeOption===sharedComponents.ProcessorTypeOptions.GPU},strings.GPU)))};this.handleCalciteSelectChange=e=>{this.selectedCellSizeOption=e.target?.selectedOption.value;if(this.selectedCellSizeOption===sharedComponents.CellSizeOptions.MaxOf||this.selectedCellSizeOption===sharedComponents.CellSizeOptions.MinOf){store.state.context.cellSize=this.selectedCellSizeOption}};this.handleResamplingMethodSelectChange=e=>{this.selectedResamplingMethodOption=e.target?.selectedOption.value;store.state.context.resamplingMethod=this.selectedResamplingMethodOption};this.handleAnalysisLayerInputChange=(e,key)=>{const selectedLayer=e.target?.selectedLayers;if(selectedLayer!==undefined){let gpLayerValue;if(index2.isFeatureLayer(selectedLayer)){gpLayerValue=index2.getGPFeatureRecordSetLayerValue(selectedLayer,store.state.mapView)}else if(index2.isImageryLayer(selectedLayer)||index2.isImageryTileLayer(selectedLayer)){gpLayerValue=index2.getImageryLayerValue(selectedLayer)}store.state.context[key]=gpLayerValue}else{delete store.state.context[key]}};this.handleParallelProcessingFactorInputChange=e=>{this.parallelProcessingFactorValue=e.target?.value;store.state.context.parallelProcessingFactor=this.parallelProcessingFactorValue};this.handleProcessorTypeSelectChange=e=>{this.selectedProcessorTypeOption=e.target?.selectedOption.value;store.state.context.processorType=this.selectedProcessorTypeOption===sharedComponents.ProcessorTypeOptions.Empty?undefined:this.selectedProcessorTypeOption};this.browsedLayers=[];this.selectedCellSizeOption=sharedComponents.CellSizeOptions.MaxOf;this.selectedResamplingMethodOption=sharedComponents.ResamplingMethodOptions.Nearest;this.parallelProcessingFactorValue="";this.selectedProcessorTypeOption=sharedComponents.ProcessorTypeOptions.Empty;this.incomingLayerObjects={};this.hideCellSize=false;this.hideResamplingMethod=false;this.hideMask=false;this.hideSnapRaster=false;this.hideParallelProcessingFactor=false;this.hideProcessorType=false}async validateRasterSettings(){let cellSizeValidity=true;switch(this.selectedCellSizeOption){case sharedComponents.CellSizeOptions.Layer:const layerInputRef=this.layerInputElement;if(layerInputRef!==null&&layerInputRef!==undefined){cellSizeValidity=await layerInputRef.checkValidity()}break;case sharedComponents.CellSizeOptions.Value:const numberInputRef=this.numberInputElement;if(numberInputRef!==null&&numberInputRef!==undefined){cellSizeValidity=await numberInputRef.checkValidity()}break}return cellSizeValidity}resetUI(){this.loadedLayerObjects={};this.selectedCellSizeOption=sharedComponents.CellSizeOptions.MaxOf;this.selectedResamplingMethodOption=sharedComponents.ResamplingMethodOptions.Nearest;this.parallelProcessingFactorValue="";this.selectedProcessorTypeOption=sharedComponents.ProcessorTypeOptions.Empty;const layerInputs=this.hostElement.shadowRoot?.querySelectorAll("analysis-layer-input");layerInputs?.forEach((input=>input.selectedLayerIds=[]));return Promise.resolve()}async componentWillLoad(){({strings:this.strings}=await index2.fetchComponentLocaleStrings(this.hostElement,index2.getAssetPath(`.`)));const incomingLayers={};if(store.state.mapLevelContext.maskLayer!==undefined){incomingLayers.maskLayer=store.state.mapLevelContext.maskLayer}this.incomingLayerObjects=incomingLayers;await this.inferUIState()}render(){const{hideCellSize,hideSnapRaster,hideMask,hideResamplingMethod,hideParallelProcessingFactor,hideProcessorType}=this;return index2.h(index2.Host,null,hideSnapRaster===false?this.renderSnapRasterParameter():null,hideCellSize===false?this.renderCellSizeParameter():null,hideMask===false?this.renderMaskParameter():null,hideResamplingMethod===false?this.renderResamplingMethodParameter():null,hideParallelProcessingFactor===false?this.renderParallelProcessingFactorParameter():null,hideProcessorType===false?this.renderProcessorTypeParameter():null)}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get style(){return analysisToolRasterSettingsCss}},[1,"analysis-tool-raster-settings",{hideCellSize:[516,"hide-cell-size"],hideResamplingMethod:[516,"hide-resampling-method"],hideMask:[516,"hide-mask"],hideSnapRaster:[516,"hide-snap-raster"],hideParallelProcessingFactor:[516,"hide-parallel-processing-factor"],hideProcessorType:[516,"hide-processor-type"],browsedLayers:[32],selectedCellSizeOption:[32],selectedResamplingMethodOption:[32],parallelProcessingFactorValue:[32],selectedProcessorTypeOption:[32],incomingLayerObjects:[32],validateRasterSettings:[64],resetUI:[64]}]);function defineCustomElement(){if(typeof customElements==="undefined"){return}const components=["analysis-tool-raster-settings"];components.forEach((tagName=>{switch(tagName){case"analysis-tool-raster-settings":if(!customElements.get(tagName)){customElements.define(tagName,AnalysisToolRasterSettings)}break}}))}defineCustomElement();exports.AnalysisToolRasterSettings=AnalysisToolRasterSettings;exports.defineCustomElement=defineCustomElement}));
