{"version":3,"file":"index.js","sources":["../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/support/localization/localization-helper.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/support/localization/t9n-mapping.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/support/resources.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_freeGlobal.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_root.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_Symbol.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_getRawTag.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_objectToString.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseGetTag.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isObjectLike.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isArray.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isObject.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isFunction.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_coreJsData.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_isMasked.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_toSource.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseIsNative.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_getNative.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_getValue.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_WeakMap.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isLength.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isArrayLike.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_isPrototype.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseIsArguments.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isArguments.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isBuffer.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/stubFalse.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseIsTypedArray.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_nodeUtil.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseUnary.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isTypedArray.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_overArg.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_nativeKeys.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseKeys.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_Map.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_getPrototype.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isPlainObject.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_DataView.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_Promise.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_Set.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_getTag.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isEmpty.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/type-gaurds.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/support/schema/schema.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/support/schema/localFunctions.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/support/appConfig.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/functions.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/rfx-args-helper.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/help-text.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_defineProperty.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_isIndex.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseAssignValue.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/eq.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_assignValue.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_arrayLikeKeys.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseTimes.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseKeysIn.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_nativeKeysIn.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_nativeCreate.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_hashGet.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_hashHas.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_Hash.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_assocIndexOf.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_hashClear.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_hashDelete.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_hashSet.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_listCacheDelete.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_ListCache.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_getMapData.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_isKeyable.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_MapCache.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_listCacheClear.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_listCacheGet.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_listCacheHas.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_listCacheSet.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_mapCacheClear.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_mapCacheDelete.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_mapCacheGet.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_mapCacheHas.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_mapCacheSet.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_Uint8Array.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseToString.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/identity.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_apply.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_shortOut.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseSetToString.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_createAssigner.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/constant.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_setToString.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_overRest.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_baseRest.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/assignInWith.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_copyObject.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/keysIn.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_isIterateeCall.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/attempt.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isError.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_equalByTag.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/memoize.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_stringToPath.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/layer-helper.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_memoizeCapped.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/colorRampUtils.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/@stencil/core/internal/client/index.js?app-data=conditional","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/rft-item.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_cloneBuffer.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/_cloneSymbol.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/history.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isMap.js","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/node_modules/lodash-es/isSet.js","../../src/rf-utils/index.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/preview.ts","../../../../node_modules/@arcgis/arcgis-raster-function-editor/dist/esm/src/components/utils/common.ts"],"sourcesContent":["/**\n * Locale list reference [JSAPI](https://devtopia.esri.com/WebGIS/arcgis-js-api/tree/master/esri/nls)\n * also has Hindi: \"hi\"\n */\nexport const SupportedLocales = {\n  Arabic: \"ar\",\n  Bosnian: \"bs\",\n  Bulgarian: \"bg\",\n  Catalan: \"ca\",\n  Czech: \"cs\",\n  Danish: \"da\",\n  German: \"de\",\n  Greek: \"el\",\n  English: \"en\",\n  EnglishUSA: \"en-US\",\n  Spanish: \"es\",\n  Estonian: \"et\",\n  Finnish: \"fi\",\n  French: \"fr\",\n  Hebrew: \"he\",\n  Hindi: \"hi\",\n  Croatian: \"hr\",\n  Hungarian: \"hu\",\n  Indonesian: \"id\",\n  Italian: \"it\",\n  Japanese: \"ja\",\n  Korean: \"ko\",\n  Lithuanian: \"lt\",\n  Latvian: \"lv\",\n  NorwegianBokml: \"nb\",\n  Dutch: \"nl\",\n  Polish: \"pl\",\n  PortugueseBrazil: \"pt-BR\",\n  PortuguesePortugal: \"pt-PT\",\n  Romanian: \"ro\",\n  Russian: \"ru\",\n  Serbian: \"sr\",\n  Slovenian: \"sl\",\n  Slovak: \"sk\",\n  Swedish: \"sv\",\n  Thai: \"th\",\n  Turkish: \"tr\",\n  Ukrainian: \"uk\",\n  Vietnamese: \"vi\",\n  ChineseChina: \"zh-CN\",\n  ChineseHongKong: \"zh-HK\",\n  ChineseTaiwan: \"zh-TW\"\n} as const;\nexport type SupportedLocales = (typeof SupportedLocales)[keyof typeof SupportedLocales];\n\nexport const SupportedOnlineHelpLocales = [\"ar\", \"de\", \"es\", \"fr\", \"it\", \"ja\", \"ko\", \"ru\", \"pl\", \"pt-br\", \"zh-cn\"];\n\nconst LocaleMap = {\n  \"en-AU\": \"en\",\n  \"en-CA\": \"en\",\n  \"en-GB\": \"en\",\n  \"en-US\": \"en\",\n  \"es-ES\": \"es\",\n  \"es-MX\": \"es\",\n  \"de-CH\": \"de\",\n  \"de-AT\": \"de\",\n  \"de-DE\": \"de\",\n  \"fr-CH\": \"fr\",\n  \"fr-FR\": \"fr\",\n  \"it-CH\": \"it\",\n  \"it-IT\": \"it\",\n  ind: \"id\",\n  ukr: \"uk\"\n};\n\nexport interface LocaleItem {\n  [key: string]: string | LocaleItem;\n}\n\nexport interface ComponentLocaleItem<T extends LocaleItem> {\n  strings: T;\n  dir: \"ltr\" | \"rtl\";\n  locale: SupportedLocales;\n}\n/**\n * List of supported locales that are RTL\n * reference: https://devtopia.esri.com/WebGIS/arcgis-js-api/blob/4master/esri/intl/locale.ts\n */\nexport const RTLLocales: SupportedLocales[] = [SupportedLocales.Arabic, SupportedLocales.Hebrew];\n\nexport const DefaultLocale = SupportedLocales.English;\n\n/**\n * Utility to centralize logic, and return \"rtl\" or \"rtl\" depending on rtl boolean\n * @param {boolean} rtl whether locale is in Right to Left direction\n * @returns {\"ltr\" | \"rtl\"} codes that can be passed to \"dir\" prop of a component.\n */\nexport function getDirectionBasedOnRTL(rtl: boolean): \"rtl\" | \"ltr\" {\n  return rtl === true ? \"rtl\" : \"ltr\";\n}\n\n/**\n * Helper function to find the closest element crossing multiple (parent) shadowDOM boundaries.\n * The implementation is based on [this](https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd) solution.\n *\n * @param {string} selector\n * @param {Element} base\n */\nfunction getClosestElement(selector: string, base: Element): Element | null {\n  function closestFrom(el?: Element | Window | Document): Element | null {\n    let element;\n    if (el === undefined || el === document || el === window) element = null;\n    else {\n      const found = (el as Element).closest(selector);\n      element = found || closestFrom(((el as Element).getRootNode() as ShadowRoot).host);\n    }\n    return element;\n  }\n  return closestFrom(base);\n}\n\n/**\n * Converts the given locale to a supported locale using the provided locale map.\n *\n * @param {string | undefined} locale - The locale to be converted.\n * @param {object} localeMap - A map of locales to supported locales.\n * @returns {string} - The supported locale.\n */\nfunction convertToSupportedLocale(locale: string | undefined, localeMap): string {\n  const defaultLocale = DefaultLocale;\n  let localeSanitized = locale?.toLowerCase();\n\n  if (localeSanitized !== undefined && localeSanitized.indexOf(\"-\") !== -1) {\n    const [lang, region] = localeSanitized.split(\"-\");\n    localeSanitized = `${lang}-${region.toUpperCase()}`;\n  }\n\n  if (!localeSanitized) {\n    return defaultLocale;\n  }\n  const localeMapKeys = Object.keys(LocaleMap);\n  if (localeMapKeys.includes(localeSanitized) === true) {\n    return localeMap[localeSanitized];\n  }\n  return localeSanitized;\n}\n\n/**\n * Retrieves locale information; In the case of Regional codes (en-au) it is converted to a supported locale (en).\n *\n * @param {Element} [element=document.documentElement] - The element to search for locale information.\n * @returns {Object} An object containing the locale information.\n * @property {string} locale - The locale code.\n * @property {boolean} rtl - A flag indicating whether the locale is right-to-left.\n */\nexport function getLocaleInfo(element: Element = document.documentElement as Element): {\n  locale: SupportedLocales;\n  rtl: boolean;\n} {\n  // Gets the closest element with a lang attribute and falls back to navigator.language if not found\n  const closestElement = getClosestElement(\"[lang]\", element);\n  const locale = (closestElement as HTMLElement)?.lang ?? window.navigator.language;\n\n  const supportedLocales = Object.values(SupportedLocales);\n  const defaultLocale = DefaultLocale;\n\n  const convertedLocale = convertToSupportedLocale(locale, LocaleMap) as SupportedLocales;\n  const isSupportedLocale = supportedLocales.includes(convertedLocale);\n\n  return {\n    locale: isSupportedLocale ? convertedLocale : defaultLocale,\n    rtl: RTLLocales.includes(locale as SupportedLocales)\n  };\n}\n\nexport async function getFunctionInfoStrings(locale: string = getLocaleInfo().locale) {\n  const defaultLocale = \"en\";\n  const fileName = \"common-strings\";\n  const baseURL = `/t9n/${fileName}`;\n  let strings;\n  try {\n    const response = await fetch(`${baseURL}.${locale}.json`);\n    strings = await response.json();\n  } catch (e) {\n    const defaultResponse = await fetch(`${baseURL}.${defaultLocale}.json`);\n    strings = await defaultResponse.json();\n  }\n  return strings;\n}\n\n/**\n * Fetches the locale file of the given component; defaults to `\"en\"` locale\n * @param componentName\n * @param props\n * @param locale\n * @param resourcesUrl\n * @param props.path\n * @param props.locale\n * @param props.baseURL\n */\nexport async function fetchLocaleStrings<T extends LocaleItem>(props: {\n  path: string;\n  locale: string;\n  baseURL: string;\n}): Promise<T> {\n  const { path, locale, baseURL } = props;\n  // Using the getPublicPath method that leverages `data-resources-url` currently this is not working.\n  // const rUrl = getPublicPath(componentName) || resourcesUrl;\n  let localeData = {} as T;\n  try {\n    const response = await fetch(`${baseURL}t9n/${path}.t9n.${locale}.json`);\n    localeData = await response.json();\n  } catch (e) {\n    const defaultResponse = await fetch(`${baseURL}t9n/${path}.t9n.${DefaultLocale}.json`);\n    localeData = await defaultResponse.json();\n  }\n  return localeData;\n}\n\nexport async function fetchComponentLocaleStrings<T extends LocaleItem>(\n  element: Element,\n  baseURL: string\n): Promise<ComponentLocaleItem<T>> {\n  const componentName = element.tagName.toLowerCase();\n  const { locale, rtl } = getLocaleInfo(element);\n  const strings = await fetchLocaleStrings<T>({ path: componentName, locale, baseURL });\n  return { strings, dir: getDirectionBasedOnRTL(rtl), locale: locale };\n}\n\n/**\n * Formats a URL to link to\n * @param {string} url the url string from after the locale\n * @param {string} basePath the base path from the signed in portal object.\n * @param {string} locale the locale abbreviation for the browser.\n * @returns {string} the formatted url.\n */\nexport function formatLocalizedHelpUrl(url: string, basePath: string, locale = \"en\"): string {\n  let localeSanitized = locale;\n  const localeMapKeys = Object.keys(LocaleMap);\n  if (localeMapKeys.includes(locale) === true) {\n    localeSanitized = LocaleMap[locale];\n  }\n\n  const localeInLowerCase = localeSanitized.toLocaleLowerCase();\n  if (SupportedOnlineHelpLocales.includes(localeInLowerCase) === true) {\n    // following regex tests /en/ is present in url and replaces it with the locale\n    // https://docdev.arcgis.com/en/arcgis-online/analyze/aggregate-points-mv.htm\n    // self Response only provides with `en` locale not as per the user locale or current app locale\n    // so we need this replace call.\n    basePath = basePath.replace(/^https?:\\/\\/[^/]+\\/en/, (match) => match.replace(\"en\", localeInLowerCase));\n  }\n  const learnMoreUrl = `${basePath}analyze/${url}`;\n  return learnMoreUrl;\n}\n","import { SupportedLocales, getLocaleInfo } from \"./localization-helper\";\n\nexport async function fetchCommonStrings(\n  locale: string = getLocaleInfo().locale\n): Promise<typeof import(\"../../assets/t9n/common-strings.en.json\")> {\n  let strings = (await import(\"../../assets/t9n/common-strings.en.json\")) as any;\n  switch (locale) {\n    case SupportedLocales.Arabic:\n      strings = await import(\"../../assets/t9n/common-strings.ar.json\");\n      break;\n    case SupportedLocales.Bosnian:\n      strings = await import(\"../../assets/t9n/common-strings.bs.json\");\n      break;\n    case SupportedLocales.Bulgarian:\n      strings = await import(\"../../assets/t9n/common-strings.bg.json\");\n      break;\n    case SupportedLocales.Catalan:\n      strings = await import(\"../../assets/t9n/common-strings.ca.json\");\n      break;\n    case SupportedLocales.Czech:\n      strings = await import(\"../../assets/t9n/common-strings.cs.json\");\n      break;\n    case SupportedLocales.Danish:\n      strings = await import(\"../../assets/t9n/common-strings.da.json\");\n      break;\n    case SupportedLocales.German:\n      strings = await import(\"../../assets/t9n/common-strings.de.json\");\n      break;\n    case SupportedLocales.Greek:\n      strings = await import(\"../../assets/t9n/common-strings.el.json\");\n      break;\n    // TODO: previously not supported by fn-editor\n    // case SupportedLocales.EnglishUSA:\n    //   strings = await import(\"./assets/common-strings.en-US.json\");\n    //   break;\n    case SupportedLocales.Spanish:\n      strings = await import(\"../../assets/t9n/common-strings.es.json\");\n      break;\n    case SupportedLocales.Estonian:\n      strings = await import(\"../../assets/t9n/common-strings.et.json\");\n      break;\n    case SupportedLocales.French:\n      strings = await import(\"../../assets/t9n/common-strings.fr.json\");\n      break;\n    case SupportedLocales.Finnish:\n      strings = await import(\"../../assets/t9n/common-strings.fi.json\");\n      break;\n    case SupportedLocales.Hebrew:\n      strings = await import(\"../../assets/t9n/common-strings.he.json\");\n      break;\n    case SupportedLocales.Croatian:\n      strings = await import(\"../../assets/t9n/common-strings.hr.json\");\n      break;\n    case SupportedLocales.Hungarian:\n      strings = await import(\"../../assets/t9n/common-strings.hu.json\");\n      break;\n    case SupportedLocales.Indonesian:\n      strings = await import(\"../../assets/t9n/common-strings.id.json\");\n      break;\n    case SupportedLocales.Italian:\n      strings = await import(\"../../assets/t9n/common-strings.it.json\");\n      break;\n    case SupportedLocales.Japanese:\n      strings = await import(\"../../assets/t9n/common-strings.ja.json\");\n      break;\n    case SupportedLocales.Korean:\n      strings = await import(\"../../assets/t9n/common-strings.ko.json\");\n      break;\n    case SupportedLocales.Lithuanian:\n      strings = await import(\"../../assets/t9n/common-strings.lt.json\");\n      break;\n    case SupportedLocales.Latvian:\n      strings = await import(\"../../assets/t9n/common-strings.lv.json\");\n      break;\n    case SupportedLocales.NorwegianBokml:\n      strings = await import(\"../../assets/t9n/common-strings.nb.json\");\n      break;\n    case SupportedLocales.Dutch:\n      strings = await import(\"../../assets/t9n/common-strings.nl.json\");\n      break;\n    case SupportedLocales.Polish:\n      strings = await import(\"../../assets/t9n/common-strings.pl.json\");\n      break;\n    case SupportedLocales.PortugueseBrazil:\n      strings = await import(\"../../assets/t9n/common-strings.pt-BR.json\");\n      break;\n    case SupportedLocales.PortuguesePortugal:\n      strings = await import(\"../../assets/t9n/common-strings.pt-PT.json\");\n      break;\n    case SupportedLocales.Romanian:\n      strings = await import(\"../../assets/t9n/common-strings.ro.json\");\n      break;\n    case SupportedLocales.Russian:\n      strings = await import(\"../../assets/t9n/common-strings.ru.json\");\n      break;\n    case SupportedLocales.Serbian:\n      strings = await import(\"../../assets/t9n/common-strings.sr.json\");\n      break;\n    case SupportedLocales.Slovak:\n      strings = await import(\"../../assets/t9n/common-strings.sk.json\");\n      break;\n    case SupportedLocales.Slovenian:\n      strings = await import(\"../../assets/t9n/common-strings.sl.json\");\n      break;\n    case SupportedLocales.Swedish:\n      strings = await import(\"../../assets/t9n/common-strings.sv.json\");\n      break;\n    case SupportedLocales.Thai:\n      strings = await import(\"../../assets/t9n/common-strings.th.json\");\n      break;\n    case SupportedLocales.Turkish:\n      strings = await import(\"../../assets/t9n/common-strings.tr.json\");\n      break;\n    case SupportedLocales.Ukrainian:\n      strings = await import(\"../../assets/t9n/common-strings.uk.json\");\n      break;\n    case SupportedLocales.Vietnamese:\n      strings = await import(\"../../assets/t9n/common-strings.vi.json\");\n      break;\n    case SupportedLocales.ChineseChina:\n      strings = await import(\"../../assets/t9n/common-strings.zh-CN.json\");\n      break;\n    case SupportedLocales.ChineseHongKong:\n      strings = await import(\"../../assets/t9n/common-strings.zh-HK.json\");\n      break;\n    case SupportedLocales.ChineseTaiwan:\n      strings = await import(\"../../assets/t9n/common-strings.zh-TW.json\");\n      break;\n    case SupportedLocales.English:\n    default:\n      break;\n  }\n  return strings;\n}\n\nexport async function fetchHelpStrings(\n  locale: string = getLocaleInfo().locale\n): Promise<typeof import(\"../../assets/t9n/help-texts.en.json\")> {\n  let strings = (await import(\"../../assets/t9n/help-texts.en.json\")) as any;\n  switch (locale) {\n    case SupportedLocales.Arabic:\n      strings = await import(\"../../assets/t9n/help-texts.ar.json\");\n      break;\n    case SupportedLocales.Bosnian:\n      strings = await import(\"../../assets/t9n/help-texts.bs.json\");\n      break;\n    case SupportedLocales.Bulgarian:\n      strings = await import(\"../../assets/t9n/help-texts.bg.json\");\n      break;\n    case SupportedLocales.Catalan:\n      strings = await import(\"../../assets/t9n/help-texts.ca.json\");\n      break;\n    case SupportedLocales.Czech:\n      strings = await import(\"../../assets/t9n/help-texts.cs.json\");\n      break;\n    case SupportedLocales.Danish:\n      strings = await import(\"../../assets/t9n/help-texts.da.json\");\n      break;\n    case SupportedLocales.German:\n      strings = await import(\"../../assets/t9n/help-texts.de.json\");\n      break;\n    case SupportedLocales.Greek:\n      strings = await import(\"../../assets/t9n/help-texts.el.json\");\n      break;\n    // TODO: previously not supported by fn-editor\n    // case SupportedLocales.EnglishUSA:\n    //   strings = await import(\"../../assets/t9n/help-texts.en-US.json\");\n    //   break;\n    case SupportedLocales.Spanish:\n      strings = await import(\"../../assets/t9n/help-texts.es.json\");\n      break;\n    case SupportedLocales.Estonian:\n      strings = await import(\"../../assets/t9n/help-texts.et.json\");\n      break;\n    case SupportedLocales.French:\n      strings = await import(\"../../assets/t9n/help-texts.fr.json\");\n      break;\n    case SupportedLocales.Finnish:\n      strings = await import(\"../../assets/t9n/help-texts.fi.json\");\n      break;\n    case SupportedLocales.Hebrew:\n      strings = await import(\"../../assets/t9n/help-texts.he.json\");\n      break;\n    case SupportedLocales.Croatian:\n      strings = await import(\"../../assets/t9n/help-texts.hr.json\");\n      break;\n    case SupportedLocales.Hungarian:\n      strings = await import(\"../../assets/t9n/help-texts.hu.json\");\n      break;\n    case SupportedLocales.Indonesian:\n      strings = await import(\"../../assets/t9n/help-texts.id.json\");\n      break;\n    case SupportedLocales.Italian:\n      strings = await import(\"../../assets/t9n/help-texts.it.json\");\n      break;\n    case SupportedLocales.Japanese:\n      strings = await import(\"../../assets/t9n/help-texts.ja.json\");\n      break;\n    case SupportedLocales.Korean:\n      strings = await import(\"../../assets/t9n/help-texts.ko.json\");\n      break;\n    case SupportedLocales.Lithuanian:\n      strings = await import(\"../../assets/t9n/help-texts.lt.json\");\n      break;\n    case SupportedLocales.Latvian:\n      strings = await import(\"../../assets/t9n/help-texts.lv.json\");\n      break;\n    case SupportedLocales.NorwegianBokml:\n      strings = await import(\"../../assets/t9n/help-texts.nb.json\");\n      break;\n    case SupportedLocales.Dutch:\n      strings = await import(\"../../assets/t9n/help-texts.nl.json\");\n      break;\n    case SupportedLocales.Polish:\n      strings = await import(\"../../assets/t9n/help-texts.pl.json\");\n      break;\n    case SupportedLocales.PortugueseBrazil:\n      strings = await import(\"../../assets/t9n/help-texts.pt-BR.json\");\n      break;\n    case SupportedLocales.PortuguesePortugal:\n      strings = await import(\"../../assets/t9n/help-texts.pt-PT.json\");\n      break;\n    case SupportedLocales.Romanian:\n      strings = await import(\"../../assets/t9n/help-texts.ro.json\");\n      break;\n    case SupportedLocales.Russian:\n      strings = await import(\"../../assets/t9n/help-texts.ru.json\");\n      break;\n    case SupportedLocales.Serbian:\n      strings = await import(\"../../assets/t9n/help-texts.sr.json\");\n      break;\n    case SupportedLocales.Slovak:\n      strings = await import(\"../../assets/t9n/help-texts.sk.json\");\n      break;\n    case SupportedLocales.Slovenian:\n      strings = await import(\"../../assets/t9n/help-texts.sl.json\");\n      break;\n    case SupportedLocales.Swedish:\n      strings = await import(\"../../assets/t9n/help-texts.sv.json\");\n      break;\n    case SupportedLocales.Thai:\n      strings = await import(\"../../assets/t9n/help-texts.th.json\");\n      break;\n    case SupportedLocales.Turkish:\n      strings = await import(\"../../assets/t9n/help-texts.tr.json\");\n      break;\n    case SupportedLocales.Ukrainian:\n      strings = await import(\"../../assets/t9n/help-texts.uk.json\");\n      break;\n    case SupportedLocales.Vietnamese:\n      strings = await import(\"../../assets/t9n/help-texts.vi.json\");\n      break;\n    case SupportedLocales.ChineseChina:\n      strings = await import(\"../../assets/t9n/help-texts.zh-CN.json\");\n      break;\n    case SupportedLocales.ChineseHongKong:\n      strings = await import(\"../../assets/t9n/help-texts.zh-HK.json\");\n      break;\n    case SupportedLocales.ChineseTaiwan:\n      strings = await import(\"../../assets/t9n/help-texts.zh-TW.json\");\n      break;\n    case SupportedLocales.English:\n    default:\n      break;\n  }\n\n  return strings;\n}\n","// const { rasterFunctions } = i18n;\nimport { EnumLabels } from \"./interfaces\";\nimport { SupportedLocales, fetchCommonStrings } from \"./localization\";\n\nexport const dataTypes = {\n  raster: \"raster\",\n  long: \"long\",\n  double: \"double\",\n  string: \"string\",\n  longArray: \"longarray\",\n  stringArray: \"stringarray\",\n  doubleArray: \"doublearray\",\n  rasterArray: \"rasterarray\",\n  colormap: \"rastercolormap\",\n  colorRamp: \"colorramp\",\n  boolean: \"boolean\",\n  arrayOfRasterStatistics: \"arrayofrasterstatistics\",\n  arrayOfRasterHistogram: \"arrayofrasterhistogram\",\n  table: \"table\",\n  rasterStatisticsArray: \"rasterstatisticsarray\",\n  rasterHistogramArray: \"rasterhistogramarray\",\n  featureClass: \"featureclass\",\n  geometry: \"geometry\",\n  extent: \"extent\",\n  rasterInfo: \"rasterinfo\",\n  cellSize: \"cellsize\",\n  propertySet: \"propertyset\",\n  spatialReference: \"spatialReference\",\n  rfxtemplate: \"rfxtemplate\",\n  file: \"file\"\n};\n\nexport const domainTypes = {\n  list: <const>\"list\",\n  range: <const>\"range\",\n  fields: <const>\"fields\",\n  numList: <const>\"numlist\",\n  bandIndex: <const>\"bandIndex\",\n  bandName: <const>\"bandName\",\n  switchable: <const>\"switchable\",\n  linearUnit: <const>\"linearUnit\",\n  rasterDimensions: <const>\"rasterDimensions\",\n  rasterVariables: <const>\"rasterVariables\",\n  mdimdef: <const>\"mdimdef\",\n  aggregationdef: <const>\"aggregationdef\"\n};\n\nexport const geometryTypes = {\n  polygon: \"esriGeometryPolygon\",\n  line: \"esriGeometryPolyline\",\n  point: \"esriGeometryPoint\",\n  multiPoint: \"esriGeometryMultipoint\"\n};\n\nexport async function getEnums(locale?: SupportedLocales) {\n  const functionStrings: typeof import(\"../assets/t9n/common-strings.en.json\") = await fetchCommonStrings(locale);\n\n  const enums: EnumLabels = {\n    colorSchemeTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.clrSchemeTypeColormap\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.clrSchemeTypeColorRamp\n      }\n    ],\n    colormapTypes: [\n      {\n        key: \"Elevation\",\n        label: functionStrings.rasterFunctions.enumLabels.colormapTypeElevation\n      },\n      {\n        key: \"Gray\",\n        label: functionStrings.rasterFunctions.enumLabels.colormapTypeGray\n      },\n      {\n        key: \"NDVI\",\n        label: functionStrings.rasterFunctions.enumLabels.colormapTypeNDVI\n      },\n      {\n        key: \"NDVI2\",\n        label: functionStrings.rasterFunctions.enumLabels.colormapTypeNDVI2\n      },\n      {\n        key: \"NDVI3\",\n        label: functionStrings.rasterFunctions.enumLabels.colormapTypeNDVI3\n      },\n      {\n        key: \"Random\",\n        label: functionStrings.rasterFunctions.enumLabels.colormapTypeRandom\n      },\n      {\n        key: \"Hillshade\",\n        label: functionStrings.rasterFunctions.enumLabels.clrmapTypeHillshade\n      }\n    ],\n    bandComboMethods: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.bandComboByNames\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.bandComboByWavelength\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.bandComboByIDs\n      }\n    ],\n    esriMissingBandActions: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.missingBandActionBestMatch\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.missingBandActionFail\n      }\n    ],\n    esriHillshadeTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.hillshadeTypeSimple\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.hillshadeTypeMultidirectional\n      }\n    ],\n    esriSlopeTypes13: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.none\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.slopeTypeAdjusted\n      }\n    ],\n    esriSlopeTypes: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.slopeTypeDegree\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.slopeTypePercentRise\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.slopeTypeScaled\n      }\n    ],\n    esriUnitConversionFxUnitTypes: [\n      {\n        key: 200,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeCelsius\n      },\n      {\n        key: 8,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeCentimeters\n      },\n      {\n        key: 12,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeDecimeters\n      },\n      {\n        key: 201,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeFahrenheit\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeFeet\n      },\n      {\n        key: 103,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeFeetPerSec\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeInches\n      },\n      {\n        key: 202,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeKelvin\n      },\n      {\n        key: 10,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeKilometers\n      },\n      {\n        key: 101,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeKmsPerHour\n      },\n      {\n        key: 102,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeKnots\n      },\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMeters\n      },\n      {\n        key: 100,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMetersPerSec\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMiles\n      },\n      {\n        key: 104,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMilesPerHour\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMillimeters\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeNauticalMiles\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeYards\n      }\n    ],\n    esriRasterStretchTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.none\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.stretchTypeStdDev\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.stretchTypeMinMax\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.stretchTypePercentMinMax\n      },\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.stretchTypeSigmoid\n      }\n    ],\n    esriCellsizeTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeFirst\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeMin\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeMax\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeMean\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.cellsizeTypeLast\n      }\n    ],\n    esriExtentTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.extentTypeFirst\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.extentTypeIntersection\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.extentTypeUnion\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.extentTypeLast\n      }\n    ],\n    esriNoDataInterpretationTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.noDataInterpretAny\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.noDataInterpretAll\n      }\n    ],\n    esriCurvatureTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.curvatureTypeStandard\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.curvatureTypeProfile\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.curvatureTypePlanform\n      }\n    ],\n    esriRasterFilterTypes: [\n      {\n        key: 255,\n        label: functionStrings.rasterFunctions.enumLabels.none\n      },\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeLineDetectionHorizontal\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeLineDetectionVertical\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeLineDetectionLeftDiagonal\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeLineDetectionRightDiagonal\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientNorth\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientWest\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientEast\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientSouth\n      },\n      {\n        key: 8,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientNorthEast\n      },\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeGradientNorthWest\n      },\n      {\n        key: 10,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeSmoothArithmeticMean\n      },\n      {\n        key: 11,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeSmoothing3x3\n      },\n      {\n        key: 12,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeSmoothing5x5\n      },\n      {\n        key: 13,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeSharpening3x3\n      },\n      {\n        key: 14,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeSharpening5x5\n      },\n      {\n        key: 15,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeLaplacian3x3\n      },\n      {\n        key: 16,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeLaplacian5x5\n      },\n      {\n        key: 17,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeSobelHorizontal\n      },\n      {\n        key: 18,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeSobelVertical\n      },\n      {\n        key: 19,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeSharpen\n      },\n      {\n        key: 20,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypeSharpen2\n      },\n      {\n        key: 21,\n        label: functionStrings.rasterFunctions.enumLabels.filterTypePointSpread\n      },\n      {\n        key: -1,\n        label: functionStrings.rasterFunctions.enumLabels.userDefined\n      }\n    ],\n    esriContourTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.ContourTypeLines\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.ContourTypeFill\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.ContourTypeSmoothOnly\n      }\n    ],\n    esriRasterizeResolveOverlapMethod: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.rasterizeFirst\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.rasterizeLast\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.rasterizeSmallest\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.rasterizeLargest\n      }\n    ],\n    rstResamplingTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeNearest\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeBilinear\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeCubic\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeMajority\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeBilinearPlus\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeGauss\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeGaussPlus\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeAverage\n      },\n      {\n        key: 8,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeMinimum\n      },\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeMaximum\n      },\n      {\n        key: 10,\n        label: functionStrings.rasterFunctions.enumLabels.resamplingTypeVectorAvg\n      }\n    ],\n    esriFocalStatisticTypes: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.minimum\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.maximum\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.mean\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.stdDeviation\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.median\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.majority\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.minority\n      }\n    ],\n    uvMagDirUnkTypes: [\n      {\n        key: \"Vector-UV\",\n        label: functionStrings.rasterFunctions.enumLabels.uvMagDirTypeUV\n      },\n      {\n        key: \"Vector-MagDir\",\n        label: functionStrings.rasterFunctions.enumLabels.uvMagDirTypeMagDir\n      },\n      {\n        key: \"Unknown\",\n        label: functionStrings.rasterFunctions.enumLabels.unknown\n      }\n    ],\n    esriAngleReferenceSystemTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.angleRefSysGeographic\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.angleRefSysArithmetic\n      }\n    ],\n    uvMagDirTypes: [\n      {\n        key: \"Vector-UV\",\n        label: functionStrings.rasterFunctions.enumLabels.uvMagDirTypeUV\n      },\n      {\n        key: \"Vector-MagDir\",\n        label: functionStrings.rasterFunctions.enumLabels.uvMagDirTypeMagDir\n      }\n    ],\n    esriInterpolateIrregularDataMethods: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataNearest\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningLinear\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningNaturalNeighbor\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningIDW\n      }\n    ],\n    esriRasterThresholdTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeConstant\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeOtsu\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeTsai\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeKapur\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeKittler\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.esriRasterThresholdTypeRosin\n      }\n    ],\n    esriArgStatisticsTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.argStatsTypeMax\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.argStatsTypeMin\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.argStatsTypeMedian\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.argStatsTypeDuration\n      }\n    ],\n    esriRasterArithmeticOperations: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.arithmeticOpPlus\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.arithmeticOpMinus\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.arithmeticOpMultiply\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.arithmeticOpDivide\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.arithmeticOpPower\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.arithmeticOpMode\n      }\n    ],\n    esriRasterClippingTypes: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.clipTypeOutside\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.clipTypeInside\n      }\n    ],\n    gpsaIgnoreNoData: [\n      {\n        key: \"DATA\",\n        label: functionStrings.rasterFunctions.enumLabels.yes\n      },\n      {\n        key: \"NODATA\",\n        label: functionStrings.rasterFunctions.enumLabels.no\n      }\n    ],\n    gpsaKernelDensityAreaUnitTypes: [\n      {\n        key: \"SQUARE_MAP_UNITS\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeSqMapUnits\n      },\n      {\n        key: \"SQUARE_MILES\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeSqMiles\n      },\n      {\n        key: \"SQUARE_KILOMETERS\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeSqKms\n      },\n      {\n        key: \"ACRES\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeAcres\n      },\n      {\n        key: \"HECTARES\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeHectares\n      },\n      {\n        key: \"SQUARE_YARDS\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeSqYards\n      },\n      {\n        key: \"SQUARE_FEET\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeSqFt\n      },\n      {\n        key: \"SQUARE_INCHES\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeSqInches\n      },\n      {\n        key: \"SQUARE_METERS\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeSqMts\n      },\n      {\n        key: \"SQUARE_CENTIMETERS\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeSqCms\n      },\n      {\n        key: \"SQUARE_MILLIMETERS\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeSqMms\n      }\n    ],\n    gpsaKernelDensityOutValTypes: [\n      {\n        key: \"DENSITIES\",\n        label: functionStrings.rasterFunctions.enumLabels.densities\n      },\n      {\n        key: \"EXPECTED_COUNTS\",\n        label: functionStrings.rasterFunctions.enumLabels.expectedCounts\n      }\n    ],\n    gpsaKernelDensityMethods: [\n      {\n        key: \"PLANAR\",\n        label: functionStrings.rasterFunctions.enumLabels.planar\n      },\n      {\n        key: \"GEODESIC\",\n        label: functionStrings.rasterFunctions.enumLabels.geodesic\n      }\n    ],\n    gpsaLinearUnitTypes: [\n      {\n        key: \"Kilometers\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeKilometers\n      },\n      {\n        key: \"Meters\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMeters\n      },\n      {\n        key: \"Decimeters\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeDecimeters\n      },\n      {\n        key: \"Centimeters\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeCentimeters\n      },\n      {\n        key: \"Millimeters\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMillimeters\n      },\n      {\n        key: \"NauticalMiles\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeNauticalMiles\n      },\n      {\n        key: \"Miles\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMiles\n      },\n      {\n        key: \"Yards\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeYards\n      },\n      {\n        key: \"Feet\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeFeet\n      },\n      {\n        key: \"Inches\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeInches\n      },\n      {\n        key: \"DecimalDegrees\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeDecimalDegrees\n      },\n      {\n        key: \"Points\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypePoints\n      },\n      {\n        key: \"Unknown\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeUnknown\n      }\n    ],\n    gpsaLeastCostPathTypes: [\n      {\n        key: \"EACH_CELL\",\n        label: functionStrings.rasterFunctions.enumLabels.eachCell\n      },\n      {\n        key: \"EACH_ZONE\",\n        label: functionStrings.rasterFunctions.enumLabels.eachZone\n      },\n      {\n        key: \"BEST_SINGLE\",\n        label: functionStrings.rasterFunctions.enumLabels.bestSingle\n      }\n    ],\n    gpsaViewshedAnalysisMethods: [\n      {\n        key: \"ALL_SIGHTLINES\",\n        label: functionStrings.rasterFunctions.enumLabels.allSightlines\n      },\n      {\n        key: \"PERIMETER_SIGHTLINES\",\n        label: functionStrings.rasterFunctions.enumLabels.perimeterSightlines\n      }\n    ],\n    gpsaViewshedAnalysisTypes: [\n      {\n        key: \"FREQUENCY\",\n        label: functionStrings.rasterFunctions.enumLabels.frequency\n      },\n      {\n        key: \"OBSERVERS\",\n        label: functionStrings.rasterFunctions.enumLabels.observers\n      }\n    ],\n    gpsaZonalStatisticsTypes: [\n      {\n        key: \"MEAN\",\n        label: functionStrings.rasterFunctions.enumLabels.mean\n      },\n      {\n        key: \"MAJORITY\",\n        label: functionStrings.rasterFunctions.enumLabels.majority\n      },\n      {\n        key: \"MAXIMUM\",\n        label: functionStrings.rasterFunctions.enumLabels.maximum\n      },\n      {\n        key: \"MEDIAN\",\n        label: functionStrings.rasterFunctions.enumLabels.median\n      },\n      {\n        key: \"MINIMUM\",\n        label: functionStrings.rasterFunctions.enumLabels.minimum\n      },\n      {\n        key: \"MINORITY\",\n        label: functionStrings.rasterFunctions.enumLabels.minority\n      },\n      {\n        key: \"PERCENTILE\",\n        label: functionStrings.rasterFunctions.enumLabels.percentile\n      },\n      {\n        key: \"RANGE\",\n        label: functionStrings.rasterFunctions.enumLabels.range\n      },\n      {\n        key: \"STD\",\n        label: functionStrings.rasterFunctions.enumLabels.stdDeviation\n      },\n      {\n        key: \"SUM\",\n        label: functionStrings.rasterFunctions.enumLabels.sum\n      },\n      {\n        key: \"VARIETY\",\n        label: functionStrings.rasterFunctions.enumLabels.variety\n      }\n    ],\n    gpsaZonalPercentileInterpolationTypes: [\n      {\n        key: \"AUTO_DETECT\",\n        label: functionStrings.rasterFunctions.enumLabels.autoDetect\n      },\n      {\n        key: \"NEAREST\",\n        label: functionStrings.rasterFunctions.enumLabels.nearest\n      },\n      {\n        key: \"LINEAR\",\n        label: functionStrings.rasterFunctions.enumLabels.linear\n      }\n    ],\n    bandArithmeticMethods: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.userDefined\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.ndvi\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.savi\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.bandArithmeticMethodTSAVI\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.bandArithmeticMethodMSAVI\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.gemi\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.pvi\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.gvi\n      },\n      {\n        key: 8,\n        label: functionStrings.rasterFunctions.enumLabels.bandArithmeticMethodSultan\n      },\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.vari\n      },\n      {\n        key: 10,\n        label: functionStrings.rasterFunctions.enumLabels.gndvi\n      },\n      {\n        key: 11,\n        label: functionStrings.rasterFunctions.enumLabels.sr\n      },\n      {\n        key: 12,\n        label: functionStrings.rasterFunctions.enumLabels.ndvire\n      },\n      {\n        key: 13,\n        label: functionStrings.rasterFunctions.enumLabels.srre\n      },\n      {\n        key: 14,\n        label: functionStrings.rasterFunctions.enumLabels.mtvi2\n      },\n      {\n        key: 15,\n        label: functionStrings.rasterFunctions.enumLabels.rtviCore\n      },\n      {\n        key: 16,\n        label: functionStrings.rasterFunctions.enumLabels.cire\n      },\n      {\n        key: 17,\n        label: functionStrings.rasterFunctions.enumLabels.cig\n      },\n      {\n        key: 18,\n        label: functionStrings.rasterFunctions.enumLabels.ndwi\n      },\n      {\n        key: 19,\n        label: functionStrings.rasterFunctions.enumLabels.evi\n      },\n      {\n        key: 20,\n        label: functionStrings.rasterFunctions.enumLabels.ironOxide\n      },\n      {\n        key: 21,\n        label: functionStrings.rasterFunctions.enumLabels.ferrousMinerals\n      },\n      {\n        key: 22,\n        label: functionStrings.rasterFunctions.enumLabels.clayMinerals\n      },\n      {\n        key: 23,\n        label: functionStrings.rasterFunctions.enumLabels.wndwi\n      },\n      {\n        key: 24,\n        label: functionStrings.rasterFunctions.enumLabels.bai\n      },\n      {\n        key: 25,\n        label: functionStrings.rasterFunctions.enumLabels.nbr\n      },\n      {\n        key: 26,\n        label: functionStrings.rasterFunctions.enumLabels.ndbi\n      },\n      {\n        key: 27,\n        label: functionStrings.rasterFunctions.enumLabels.ndmi\n      },\n      {\n        key: 28,\n        label: functionStrings.rasterFunctions.enumLabels.ndsi\n      },\n      {\n        key: 29,\n        label: functionStrings.rasterFunctions.enumLabels.mndwi\n      }\n    ],\n    pyStdTemperatureUnitTypes: [\n      {\n        key: \"Celsius\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeCelsius\n      },\n      {\n        key: \"Fahrenheit\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeFahrenheit\n      },\n      {\n        key: \"Kelvin\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeKelvin\n      }\n    ],\n    pyStdWindspeedUnitTypes: [\n      {\n        key: \"mph\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMilesPerHour\n      },\n      {\n        key: \"kph\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeKmsPerHour\n      },\n      {\n        key: \"m/s\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeMetersPerSec\n      },\n      {\n        key: \"ft/s\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeFeetPerSec\n      },\n      {\n        key: \"knots\",\n        label: functionStrings.rasterFunctions.enumLabels.unitTypeKnots\n      }\n    ],\n    localFunctionOperations: [\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.localSquareRoot\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.localACos\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.localASin\n      },\n      {\n        key: 8,\n        label: functionStrings.rasterFunctions.enumLabels.localATan\n      },\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.localATanH\n      },\n      {\n        key: 10,\n        label: functionStrings.rasterFunctions.enumLabels.localAbs\n      },\n      {\n        key: 13,\n        label: functionStrings.rasterFunctions.enumLabels.localBitwiseNot\n      },\n      {\n        key: 18,\n        label: functionStrings.rasterFunctions.enumLabels.localBooleanNot\n      },\n      {\n        key: 21,\n        label: functionStrings.rasterFunctions.enumLabels.localCos\n      },\n      {\n        key: 22,\n        label: functionStrings.rasterFunctions.enumLabels.localCosH\n      },\n      {\n        key: 25,\n        label: functionStrings.rasterFunctions.enumLabels.localExp\n      },\n      {\n        key: 26,\n        label: functionStrings.rasterFunctions.enumLabels.localExp10\n      },\n      {\n        key: 27,\n        label: functionStrings.rasterFunctions.enumLabels.localExp2\n      },\n      {\n        key: 30,\n        label: functionStrings.rasterFunctions.enumLabels.localInt\n      },\n      {\n        key: 31,\n        label: functionStrings.rasterFunctions.enumLabels.localIsNull\n      },\n      {\n        key: 32,\n        label: functionStrings.rasterFunctions.enumLabels.localFloat\n      },\n      {\n        key: 35,\n        label: functionStrings.rasterFunctions.enumLabels.localLn\n      },\n      {\n        key: 36,\n        label: functionStrings.rasterFunctions.enumLabels.localLog10\n      },\n      {\n        key: 37,\n        label: functionStrings.rasterFunctions.enumLabels.localLog2\n      },\n      {\n        key: 45,\n        label: functionStrings.rasterFunctions.enumLabels.localNegate\n      },\n      {\n        key: 48,\n        label: functionStrings.rasterFunctions.enumLabels.localRoundDown\n      },\n      {\n        key: 49,\n        label: functionStrings.rasterFunctions.enumLabels.localRoundUp\n      },\n      {\n        key: 51,\n        label: functionStrings.rasterFunctions.enumLabels.localSin\n      },\n      {\n        key: 52,\n        label: functionStrings.rasterFunctions.enumLabels.localSinH\n      },\n      {\n        key: 53,\n        label: functionStrings.rasterFunctions.enumLabels.localSquare\n      },\n      {\n        key: 56,\n        label: functionStrings.rasterFunctions.enumLabels.localTan\n      },\n      {\n        key: 57,\n        label: functionStrings.rasterFunctions.enumLabels.localTanH\n      },\n      {\n        key: 59,\n        label: functionStrings.rasterFunctions.enumLabels.localACosH\n      },\n      {\n        key: 60,\n        label: functionStrings.rasterFunctions.enumLabels.localASinH\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.localPlus\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.localMinus\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.localTimes\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.localPower\n      },\n      {\n        key: 11,\n        label: functionStrings.rasterFunctions.enumLabels.localBitwiseAnd\n      },\n      {\n        key: 12,\n        label: functionStrings.rasterFunctions.enumLabels.localBitwiseLeftShift\n      },\n      {\n        key: 14,\n        label: functionStrings.rasterFunctions.enumLabels.localBitwiseOr\n      },\n      {\n        key: 15,\n        label: functionStrings.rasterFunctions.enumLabels.localBitwiseRightShift\n      },\n      {\n        key: 16,\n        label: functionStrings.rasterFunctions.enumLabels.localBitwiseXor\n      },\n      {\n        key: 17,\n        label: functionStrings.rasterFunctions.enumLabels.localBooleanAnd\n      },\n      {\n        key: 19,\n        label: functionStrings.rasterFunctions.enumLabels.localBooleanOr\n      },\n      {\n        key: 20,\n        label: functionStrings.rasterFunctions.enumLabels.localBooleanXor\n      },\n      {\n        key: 23,\n        label: functionStrings.rasterFunctions.enumLabels.localDivide\n      },\n      {\n        key: 24,\n        label: functionStrings.rasterFunctions.enumLabels.localEqualTo\n      },\n      {\n        key: 28,\n        label: functionStrings.rasterFunctions.enumLabels.localGreaterThan\n      },\n      {\n        key: 29,\n        label: functionStrings.rasterFunctions.enumLabels.localGreaterThanEqual\n      },\n      {\n        key: 33,\n        label: functionStrings.rasterFunctions.enumLabels.localLessThan\n      },\n      {\n        key: 34,\n        label: functionStrings.rasterFunctions.enumLabels.localLessThanEqual\n      },\n      {\n        key: 44,\n        label: functionStrings.rasterFunctions.enumLabels.localMod\n      },\n      {\n        key: 46,\n        label: functionStrings.rasterFunctions.enumLabels.localNotEqual\n      },\n      {\n        key: 61,\n        label: functionStrings.rasterFunctions.enumLabels.localATan2\n      },\n      {\n        key: 50,\n        label: functionStrings.rasterFunctions.enumLabels.localSetNull\n      }\n    ],\n\n    cellStatisticsTypes: [\n      {\n        key: 38,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMajority\n      },\n      {\n        key: 39,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMax\n      },\n      {\n        key: 40,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMean\n      },\n      {\n        key: 41,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMedian\n      },\n      {\n        key: 42,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMin\n      },\n      {\n        key: 43,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMinority\n      },\n      {\n        key: 47,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsRange\n      },\n      {\n        key: 54,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsStdDev\n      },\n      {\n        key: 55,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsSum\n      },\n      {\n        key: 58,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsVariety\n      },\n      {\n        key: 66,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMajorityIgnoreND\n      },\n      {\n        key: 67,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMaxIgnoreND\n      },\n      {\n        key: 68,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMeanIgnoreND\n      },\n      {\n        key: 69,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMedianIgnoreND\n      },\n      {\n        key: 70,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMinIgnoreND\n      },\n      {\n        key: 71,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsMinorityIgnoreND\n      },\n      {\n        key: 72,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsRangeIgnoreND\n      },\n      {\n        key: 73,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsStdDevIgnoreND\n      },\n      {\n        key: 74,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsSumIgnoreND\n      },\n      {\n        key: 75,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsVarietyIgnoreND\n      },\n      {\n        key: 93,\n        label: functionStrings.rasterFunctions.enumLabels.percentile\n      },\n      {\n        key: 94,\n        label: functionStrings.rasterFunctions.enumLabels.localCellStatisticsTypePercentileIgnoreND\n      }\n    ],\n\n    remapDefinitionTypes: [\n      {\n        key: false,\n        label: functionStrings.rasterFunctions.enumLabels.remapDefTypeList\n      }\n    ],\n\n    remapTableTypes: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.remapTableTypeSimple\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.remapTableTypeDynamic\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.remapTableTypeReassignment\n      }\n    ],\n\n    gpsaDistanceMethods: [\n      {\n        key: \"PLANAR\",\n        label: functionStrings.rasterFunctions.enumLabels.planar\n      },\n      {\n        key: \"GEODESIC\",\n        label: functionStrings.rasterFunctions.enumLabels.geodesic\n      }\n    ],\n\n    geometricCorrectionMethods: [\n      {\n        key: false,\n        label: functionStrings.rasterFunctions.enumLabels.geomCorrectionByConstZ\n      },\n      {\n        key: true,\n        label: functionStrings.rasterFunctions.enumLabels.geomCorrectionByDEM\n      }\n    ],\n\n    esriRadarCalibrations: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.radarCalibBetaNought\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.radarCalibSigmaNought\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.radarCalibGammaNought\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.none\n      }\n    ],\n\n    esriSpeckleFilterTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.speckleFilterTypeLee\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.speckleFilterTypeEnhancedLee\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.speckleFilterTypeFrost\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.speckleFilterTypeKuan\n      }\n    ],\n\n    esriSpeckleFilterKernelTypes: [\n      {\n        key: 0,\n        label: \"3x3\"\n      },\n      {\n        key: 1,\n        label: \"5x5\"\n      },\n      {\n        key: 2,\n        label: \"7x7\"\n      },\n      {\n        key: 3,\n        label: \"9x9\"\n      },\n      {\n        key: 4,\n        label: \"11x11\"\n      }\n    ],\n\n    esriSpeckleNoiseModelTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.speckleNoiseModelMul\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.speckleNoiseModelAdd\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.speckleNoiseModelAddnMul\n      }\n    ],\n\n    esriMosaicOperatorTypes: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeFirst\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeLast\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMin\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMax\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMean\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeBlend\n      }\n    ],\n\n    gpsaNibbleValues: [\n      {\n        key: \"ALL_VALUES\",\n        label: functionStrings.rasterFunctions.enumLabels.yes\n      },\n      {\n        key: \"DATA_ONLY\",\n        label: functionStrings.rasterFunctions.enumLabels.no\n      }\n    ],\n\n    gpsaNibbleNoData: [\n      {\n        key: \"PROCESS_NODATA\",\n        label: functionStrings.rasterFunctions.enumLabels.yes\n      },\n      {\n        key: \"PRESERVE_NODATA\",\n        label: functionStrings.rasterFunctions.enumLabels.no\n      }\n    ],\n\n    esriSwathInterpolationMethods: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataNearest\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataBilinear\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningLinear\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataTinningNaturalNeighbor\n      }\n    ],\n\n    gpsaOutputDataType: [\n      {\n        key: \"FLOAT\",\n        label: functionStrings.rasterFunctions.enumLabels.localFloat\n      },\n      {\n        key: \"INTEGER\",\n        label: functionStrings.rasterFunctions.enumLabels.integer\n      }\n    ],\n\n    gpsaFlowDirectionType: [\n      {\n        key: \"D8\",\n        label: functionStrings.rasterFunctions.enumLabels.rfxD8\n      },\n      {\n        key: \"MFD\",\n        label: functionStrings.rasterFunctions.enumLabels.rfxMFD\n      },\n      {\n        key: \"Dinf\",\n        label: functionStrings.rasterFunctions.enumLabels.dinf\n      }\n    ],\n\n    gpsaForceFlow: [\n      {\n        key: \"FORCE\",\n        label: functionStrings.rasterFunctions.enumLabels.yes\n      },\n      {\n        key: \"NORMAL\",\n        label: functionStrings.rasterFunctions.enumLabels.no\n      }\n    ],\n\n    gpsaFlowDistanceType: [\n      {\n        key: \"VERTICAL\",\n        label: functionStrings.rasterFunctions.enumLabels.vertical\n      },\n      {\n        key: \"HORIZONTAL\",\n        label: functionStrings.rasterFunctions.enumLabels.horizontal\n      }\n    ],\n\n    gpsaTravelDirections: [\n      {\n        key: \"FROM_SOURCE\",\n        label: functionStrings.rasterFunctions.enumLabels.fromSource\n      },\n      {\n        key: \"TO_SOURCE\",\n        label: functionStrings.rasterFunctions.enumLabels.toSource\n      }\n    ],\n\n    colorspaceConversionTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.colorspaceConversionRgbToHsv\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.colorspaceConversionHsvToRgb\n      }\n    ],\n\n    pansharpeningTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeIHS\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeBrovey\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeEsri\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeMean\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.pansharpenTypeGramSchmidt\n      }\n    ],\n\n    esriGAFocalStatisticsTypes: [\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.mean\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.majority\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.maximum\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.median\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.minimum\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.minority\n      },\n      {\n        key: 12,\n        label: functionStrings.rasterFunctions.enumLabels.percentile\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.range\n      },\n      {\n        key: 8,\n        label: functionStrings.rasterFunctions.enumLabels.stdDeviation\n      },\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.sum\n      },\n      {\n        key: 10,\n        label: functionStrings.rasterFunctions.enumLabels.variety\n      }\n    ],\n\n    esriFocalNeighborhoodTypes: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.rectangleNeighborhood\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.circleNeighborhood\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.annulusNeighborhood\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.wedgeNeighborhood\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.irregularNeighborhood\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.weightNeighborhood\n      }\n    ],\n\n    gpsaNumberNeighborCells: [\n      {\n        key: \"FOUR\",\n        label: functionStrings.rasterFunctions.enumLabels.four\n      },\n      {\n        key: \"EIGHT\",\n        label: functionStrings.rasterFunctions.enumLabels.eight\n      }\n    ],\n    gpsaZoneConnectivity: [\n      {\n        key: \"WITHIN\",\n        label: functionStrings.rasterFunctions.enumLabels.within\n      },\n      {\n        key: \"CROSS\",\n        label: functionStrings.rasterFunctions.enumLabels.cross\n      }\n    ],\n    gpsaAddLink: [\n      {\n        key: \"ADD_LINK\",\n        label: functionStrings.rasterFunctions.enumLabels.addLink\n      },\n      {\n        key: \"NO_LINK\",\n        label: functionStrings.rasterFunctions.enumLabels.noLink\n      }\n    ],\n    gpsaFlowDistanceStatsType: [\n      {\n        key: \"MINIMUM\",\n        label: functionStrings.rasterFunctions.enumLabels.minimum\n      },\n      {\n        key: \"WEIGHTED_MEAN\",\n        label: functionStrings.rasterFunctions.enumLabels.weightedMean\n      },\n      {\n        key: \"MAXIMUM\",\n        label: functionStrings.rasterFunctions.enumLabels.maximum\n      }\n    ],\n    boolean: [\n      {\n        key: \"true\",\n        label: functionStrings.rasterFunctions.enumLabels.yes\n      },\n      {\n        key: \"false\",\n        label: functionStrings.rasterFunctions.enumLabels.no\n      }\n    ],\n    esriTransposeBitPatterns: [\n      {\n        key: \"ls8qcbp_Cirrus\",\n        label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternCirrus\n      },\n      {\n        key: \"ls8qcbp_Cloud\",\n        label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternCloud\n      },\n      {\n        key: \"ls8qcbp_CloudShadow\",\n        label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternCloudShadow\n      },\n      {\n        key: \"ls8qcbp_DesignatedFill\",\n        label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternDesignatedFill\n      },\n      {\n        key: \"ls8qcbp_DroppedFrame\",\n        label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternDroppedFrame\n      },\n      {\n        key: \"ls8qcbp_SnowIce\",\n        label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternSnowIce\n      },\n      {\n        key: \"ls8qcbp_TerrainOcclusion\",\n        label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternTerrainOcclusion\n      },\n      {\n        key: \"ls8qcbp_Vegetation\",\n        label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternVegetation\n      },\n      {\n        key: \"ls8qcbp_Water\",\n        label: functionStrings.rasterFunctions.enumLabels.ls8QCBitPatternWater\n      },\n      {\n        key: \"qcbp_UserDefined\",\n        label: functionStrings.rasterFunctions.enumLabels.userDefined\n      }\n    ],\n    gpsaDirectionMeasurementType: [\n      {\n        key: \"DOWNSTREAM\",\n        label: functionStrings.rasterFunctions.enumLabels.downStream\n      },\n      {\n        key: \"UPSTREAM\",\n        label: functionStrings.rasterFunctions.enumLabels.upStream\n      }\n    ],\n    gpsaOrderMethodType: [\n      {\n        key: \"STRAHLER\",\n        label: functionStrings.rasterFunctions.enumLabels.strahler\n      },\n      {\n        key: \"SHREVE\",\n        label: functionStrings.rasterFunctions.enumLabels.shreve\n      }\n    ],\n    gpsaProcessAsMultidimensionalOptions: [\n      {\n        key: \"CURRENT_SLICE\",\n        label: functionStrings.rasterFunctions.enumLabels.currentSlice\n      },\n      {\n        key: \"ALL_SLICES\",\n        label: functionStrings.rasterFunctions.enumLabels.allSlices\n      }\n    ],\n    gpsaExpandMethod: [\n      {\n        key: \"DISTANCE\",\n        label: functionStrings.rasterFunctions.enumLabels.expandDistance\n      },\n      {\n        key: \"MORPHOLOGICAL\",\n        label: functionStrings.rasterFunctions.enumLabels.expandMorphological\n      }\n    ],\n    gpsaSortType: [\n      {\n        key: \"NO_SORT\",\n        label: functionStrings.rasterFunctions.enumLabels.noSort\n      },\n      {\n        key: \"DESCEND\",\n        label: functionStrings.rasterFunctions.enumLabels.descend\n      },\n      {\n        key: \"ASCEND\",\n        label: functionStrings.rasterFunctions.enumLabels.ascend\n      }\n    ],\n    spectralProfileFileTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.spectralProfileFile\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.trainingFeatureFile\n      }\n    ],\n    randomDistributionType: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeUniform\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeUniformInteger\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeNormal\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeExponential\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypePoisson\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeGamma\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeBinomial\n      },\n      {\n        key: 8,\n        label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeGeometric\n      },\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.randomDistributionTypeNegativeBinomial\n      }\n    ],\n    randomGeneratorType: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.randomGeneratorTypeStandardCRand\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.randomGeneratorTypeAlgorithmACM599\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.randomGeneratorTypeMersenneTwister\n      }\n    ],\n    gpsaAggregationTypes: [\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.sumName\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.maximum\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.mean\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.medainName\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.minimum\n      }\n    ],\n    esriTrendAnalysisTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.trendLinear\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.trendHarmonic\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.trendPolynomial\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.trendMannKendall\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.trendSeasonalKendall\n      }\n    ],\n    dimensionDefinitionTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.dimensionByValue\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.dimensionByInterval\n      }\n    ],\n    esriMdimTimeIntervalUnits: [\n      {\n        key: \"HOURS\",\n        label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsHours\n      },\n      {\n        key: \"DAYS\",\n        label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsDays\n      },\n      {\n        key: \"WEEKS\",\n        label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsWeeks\n      },\n      {\n        key: \"MONTHS\",\n        label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsMonths\n      },\n      {\n        key: \"YEARS\",\n        label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsYears\n      }\n    ],\n    esriCycleUnits: [\n      {\n        key: \"DAYS\",\n        label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsDays\n      },\n      {\n        key: \"YEARS\",\n        label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsYears\n      }\n    ],\n    esriTrendSeasonlPeriod: [\n      {\n        key: \"DAYS\",\n        label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsDays\n      },\n      {\n        key: \"MONTHS\",\n        label: functionStrings.rasterFunctions.enumLabels.esriTimeUnitsMonths\n      }\n    ],\n    esriSegmentDate: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.segmentBeginning\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.segmentEnd\n      }\n    ],\n    esriDetectChangeTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.latestChange\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.earliestChange\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.largestChange\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.numberOfChanges\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.longestChange\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.shortestChange\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.fastestChange\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.slowestChange\n      }\n    ],\n    esriChangeDirection: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.allChanges\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.increaseChanges\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.decreaseChanges\n      }\n    ],\n    esriRenderTrendTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.trendLinear\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.trendHarmonic\n      }\n    ],\n    esriComputeChangeMethods: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodDifference\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodRelativeDifference\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodCategorical\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodMultispectralEuclideanDistance\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodMultispectralAngularDifference\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeMethodMultispectralAxisWithBiggestChange\n      }\n    ],\n    esriComputeChangeKeepMethods: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeKeepAll\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeKeepChangedOnly\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeKeepUnchangedOnly\n      }\n    ],\n    esriComputeChangeUseColorMethods: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeUseColorAverage\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeUseColorFrom\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.esriComputeChangeUseColorTo\n      }\n    ],\n    esriResolveOverlapMethods: [\n      {\n        key: \"MT_FIRST\",\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeFirst\n      },\n      {\n        key: \"MT_LAST\",\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeLast\n      },\n      {\n        key: \"MT_MIN\",\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMin\n      },\n      {\n        key: \"MT_MAX\",\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMax\n      },\n      {\n        key: \"MT_MEAN\",\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeMean\n      },\n      {\n        key: \"MT_SUM\",\n        label: functionStrings.rasterFunctions.enumLabels.mosaicOpTypeSum\n      }\n    ],\n    sensorTypes: [\n      {\n        key: \"UNKNOWN\",\n        label: functionStrings.rasterFunctions.enumLabels.unknown\n      }\n    ],\n    esriGANoDataHandling: [\n      {\n        key: -1,\n        label: functionStrings.rasterFunctions.enumLabels.dimensionalMovingIgnoreNoData\n      },\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.dimensionalMovingPropagateNoData\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.dimensionalMovingFillOnlyNoData\n      }\n    ],\n    esriGADimensionalMovingStatisticsTypes: [\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.mean\n      },\n      {\n        key: 13,\n        label: functionStrings.rasterFunctions.enumLabels.circularMean\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.majority\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.maximum\n      },\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.median\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.minimum\n      },\n      {\n        key: 12,\n        label: functionStrings.rasterFunctions.enumLabels.percentile\n      }\n    ],\n    esriInterpolateByDimMethods: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.factorFunctionLinear\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.interpolateIrregularDataNearest\n      }\n    ],\n\n    esriFlattenCalibrationTypes: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.radarCalibGammaNought\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.radarCalibSigmaNought\n      }\n    ],\n\n    bandCompositeMethods: [\n      {\n        key: 0,\n        label: functionStrings.rasterFunctions.enumLabels.bandComboByNames\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.bandComboByIDs\n      }\n    ],\n\n    gpsaCircularCalculation: [\n      {\n        key: \"ARITHMETIC\",\n        label: functionStrings.rasterFunctions.enumLabels.arithmeticName\n      },\n      {\n        key: \"CIRCULAR\",\n        label: functionStrings.rasterFunctions.enumLabels.circularName\n      }\n    ],\n    esriSurfaceParameterType: [\n      {\n        key: 4,\n        label: functionStrings.rasterFunctions.enumLabels.slopeName\n      },\n      {\n        key: 5,\n        label: functionStrings.rasterFunctions.enumLabels.aspectName\n      },\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.meanCurvature\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.profileCurvature\n      },\n      {\n        key: 3,\n        label: functionStrings.rasterFunctions.enumLabels.tangentialCurvature\n      },\n      {\n        key: 6,\n        label: functionStrings.rasterFunctions.enumLabels.planCurvature\n      },\n      {\n        key: 7,\n        label: functionStrings.rasterFunctions.enumLabels.contourGeodesicTorsion\n      },\n      {\n        key: 8,\n        label: functionStrings.rasterFunctions.enumLabels.gaussianCurvature\n      },\n      {\n        key: 9,\n        label: functionStrings.rasterFunctions.enumLabels.casoratiCurvature\n      }\n    ],\n    esriLocalSurfaceType: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.localSurfaceTypeQuadratic\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.localSurfaceTypeBiquadratic\n      }\n    ],\n    outputSlopeType: [\n      {\n        key: 1,\n        label: functionStrings.rasterFunctions.enumLabels.slopeTypeDegree\n      },\n      {\n        key: 2,\n        label: functionStrings.rasterFunctions.enumLabels.slopeTypePercentRise\n      }\n    ],\n    esriLeastCostThresholdMethod: [\n      {\n        key: \"NO_THRESHOLD\",\n        label: functionStrings.rasterFunctions.enumLabels.thresholdNoThreshold\n      },\n      {\n        key: \"PERCENT_OF_LEAST_COST\",\n        label: functionStrings.rasterFunctions.enumLabels.thresholdPercentLeastCost\n      },\n      {\n        key: \"ACCUMULATIVE_COST\",\n        label: functionStrings.rasterFunctions.enumLabels.thresholdAccumulativeCost\n      }\n    ]\n  };\n\n  return enums;\n}\n\nexport const tranposeInputBitInfo = {\n  ls8qcbp_Cirrus: [12, 13],\n  ls8qcbp_Cloud: [14, 15],\n  ls8qcbp_CloudShadow: [6, 7],\n  ls8qcbp_DesignatedFill: [0],\n  ls8qcbp_DroppedFrame: [1],\n  ls8qcbp_SnowIce: [10, 11],\n  ls8qcbp_TerrainOcclusion: [2],\n  ls8qcbp_Vegetation: [8, 9],\n  ls8qcbp_Water: [4, 5]\n};\n\nexport const kernelTypesInfo = {\n  255: {\n    rows: 0,\n    columns: 0\n  },\n  0: {\n    rows: 3,\n    columns: 3,\n    value: [-1, -1, -1, 2, 2, 2, -1, -1, -1]\n  },\n  1: {\n    rows: 3,\n    columns: 3,\n    value: [-1, 2, -1, -1, 2, -1, -1, 2, -1]\n  },\n  2: {\n    rows: 3,\n    columns: 3,\n    value: [2, -1, -1, -1, 2, -1, -1, -1, 2]\n  },\n  3: {\n    rows: 3,\n    columns: 3,\n    value: [-1, -1, 2, -1, 2, -1, 2, -1, -1]\n  },\n  4: {\n    rows: 3,\n    columns: 3,\n    value: [-1, -2, -1, 0, 0, 0, 1, 2, 1]\n  },\n  5: {\n    rows: 3,\n    columns: 3,\n    value: [-1, 0, 1, -2, 0, 2, -1, 0, 1]\n  },\n  6: {\n    rows: 3,\n    columns: 3,\n    value: [1, 0, -1, 2, 0, -2, 1, 0, -1]\n  },\n  7: {\n    rows: 3,\n    columns: 3,\n    value: [1, 2, 1, 0, 0, 0, -1, -2, -1]\n  },\n  8: {\n    rows: 3,\n    columns: 3,\n    value: [0, -1, -2, 1, 0, -1, 2, 1, 0]\n  },\n  9: {\n    rows: 3,\n    columns: 3,\n    value: [-2, -1, 0, -1, 0, 1, 0, 1, 2]\n  },\n  10: {\n    rows: 3,\n    columns: 3,\n    value: [\n      0.111111111111111, 0.111111111111111, 0.111111111111111, 0.111111111111111, 0.111111111111111, 0.111111111111111,\n      0.111111111111111, 0.111111111111111, 0.111111111111111\n    ]\n  },\n  11: {\n    rows: 3,\n    columns: 3,\n    value: [1, 2, 1, 2, 4, 2, 1, 2, 1]\n  },\n  12: {\n    rows: 5,\n    columns: 5,\n    value: [1, 1, 1, 1, 1, 1, 4, 4, 4, 1, 1, 4, 12, 4, 1, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1]\n  },\n  13: {\n    rows: 3,\n    columns: 3,\n    value: [-1, -1, -1, -1, 9, -1, -1, -1, -1]\n  },\n  14: {\n    rows: 5,\n    columns: 5,\n    value: [-1, -3, -4, -3, -1, -3, 0, 6, 0, -3, -4, 6, 21, 6, -4, -3, 0, 6, 0, -3, -1, -3, -4, -3, -1]\n  },\n  15: {\n    rows: 3,\n    columns: 3,\n    value: [0, -1, 0, -1, 4, -1, 0, -1, 0]\n  },\n  16: {\n    rows: 5,\n    columns: 5,\n    value: [0, 0, -1, 0, 0, 0, -1, -2, -1, 0, -1, -2, 17, -2, -1, 0, -1, -2, -1, 0, 0, 0, -1, 0, 0]\n  },\n  17: {\n    rows: 3,\n    columns: 3,\n    value: [-1, -2, -1, 0, 0, 0, 1, 2, 1]\n  },\n  18: {\n    rows: 3,\n    columns: 3,\n    value: [-1, 0, 1, -2, 0, 2, -1, 0, 1]\n  },\n  19: {\n    rows: 3,\n    columns: 3,\n    value: [0, -0.25, 0, -0.25, 2, -0.25, 0, -0.25, 0]\n  },\n  20: {\n    rows: 3,\n    columns: 3,\n    value: [-0.25, -0.25, -0.25, -0.25, 3, -0.25, -0.25, -0.25, -0.25]\n  },\n  21: {\n    rows: 3,\n    columns: 3,\n    value: [-0.627, 0.352, -0.627, 0.352, 2.923, 0.352, -0.627, 0.352, -0.627]\n  }\n};\n\nexport async function getCategoryReference(locale?: SupportedLocales) {\n  const functionStrings: typeof import(\"../assets/t9n/common-strings.en.json\") = await fetchCommonStrings(locale);\n\n  const categoryReference = {\n    rfxArgCat_SourceCharacteristics: {\n      title: functionStrings.rasterFunctions.categoryLabels.sourceCharacteristics,\n      visible: false\n    },\n    rfxArgCat_NeighborhoodSettings: {\n      title: functionStrings.rasterFunctions.categoryLabels.neighborhoodSettings,\n      visible: true\n    },\n    rfxArgCat_FocalStatistics: {\n      title: functionStrings.rasterFunctions.categoryLabels.statistics,\n      visible: true\n    },\n    rfxArgCat_Statistics: {\n      title: functionStrings.rasterFunctions.categoryLabels.statistics,\n      visible: false\n    },\n    rfxArgCat_Gamma: {\n      title: functionStrings.rasterFunctions.categoryLabels.gamma,\n      visible: false\n    },\n    rfxArgCat_ViewshedParameters: {\n      title: functionStrings.rasterFunctions.categoryLabels.viewshedParameters,\n      visible: false\n    },\n    rfxArgCat_ObserverParameters: {\n      title: functionStrings.rasterFunctions.categoryLabels.observerParameters,\n      visible: false\n    },\n    rfxArgCat_IrregularDataInterpolation: {\n      title: functionStrings.rasterFunctions.categoryLabels.irregularDataInterpolation,\n      visible: false\n    },\n    rfxArgCat_ModelStatistics: {\n      title: functionStrings.rasterFunctions.categoryLabels.modelStatistics,\n      visible: true\n    },\n    rfxArgCat_AggregationDef: {\n      title: functionStrings.rasterFunctions.categoryLabels.aggregationDef,\n      visible: true\n    },\n    rfxArgCat_FilterByAttributes: {\n      title: functionStrings.rasterFunctions.categoryLabels.filterByAttributes,\n      visible: true\n    },\n    rfxArgCat_Percentile: {\n      title: functionStrings.rasterFunctions.categoryLabels.percentileName,\n      visible: true\n    },\n    rfxArgCat_RasterInfo: {\n      title: functionStrings.rasterFunctions.categoryLabels.rasterInfo,\n      visible: true\n    },\n    rfxArgCat_Extent: {\n      title: functionStrings.rasterFunctions.categoryLabels.extent,\n      visible: true\n    },\n    rfxArgCat_SpatialReference: {\n      title: functionStrings.rasterFunctions.categoryLabels.spatialReference,\n      visible: true\n    }\n  };\n  return categoryReference;\n}\n\nexport const helpDoc = {\n  rfxNameSpecialCases: [\n    {\n      key: \"threshold\",\n      value: \"BinaryThresholding\"\n    },\n    {\n      key: \"contrastbrightness\",\n      value: \"ContrastAndBrightness\"\n    },\n    {\n      key: \"statisticshistogram\",\n      value: \"StatisticsAndHistogram\"\n    },\n    {\n      key: \"pansharpening\",\n      value: \"Pansharpen\"\n    },\n    {\n      key: \"colorspaceconversion\",\n      value: \"ColorModelConversion\"\n    },\n    {\n      key: \"rasterizefeatureclass\",\n      value: \"RasterizeFeatures\"\n    },\n    {\n      key: \"reflectance\",\n      value: \"ApparentReflectance\"\n    },\n    {\n      key: \"s1radiometriccalibration\",\n      value: \"Sentinel-1RadiometricCalibration\"\n    },\n    {\n      key: \"s1thermalnoiseremoval\",\n      value: \"Sentinel-1ThermalNoiseRemoval\"\n    },\n    {\n      key: \"table\",\n      value: \"AttributeTable\"\n    },\n    {\n      key: \"extractband\",\n      value: \"ExtractBands\"\n    },\n    {\n      key: \"bufferedraster\",\n      value: \"Buffered\"\n    },\n    {\n      key: \"compositeband\",\n      value: \"CompositeBands\"\n    },\n    {\n      key: \"shortestpath\",\n      value: \"LeastCostPath\"\n    },\n    {\n      key: \"eucdirection\",\n      value: \"EuclideanDirection\"\n    },\n    {\n      key: \"pathbacklink\",\n      value: \"PathDistanceBackLink\"\n    },\n    {\n      key: \"pathallocation\",\n      value: \"PathDistanceAllocation\"\n    },\n    {\n      key: \"eucdistance\",\n      value: \"EuclideanDistance\"\n    },\n    {\n      key: \"eucallocation\",\n      value: \"EuclideanAllocation\"\n    },\n    {\n      key: \"rastercalculator\",\n      value: \"Calculator\"\n    },\n    {\n      key: \"focal\",\n      value: \"FocalStatistics\"\n    },\n    {\n      key: \"viewshed2\",\n      value: \"Viewshed\"\n    }\n  ],\n\n  localFunctionOperations: [\n    {\n      key: 4,\n      label: \"Square Root\"\n    },\n    {\n      key: 6,\n      label: \"ACos\"\n    },\n    {\n      key: 7,\n      label: \"ASin\"\n    },\n    {\n      key: 8,\n      label: \"ATan\"\n    },\n    {\n      key: 9,\n      label: \"ATanH\"\n    },\n    {\n      key: 10,\n      label: \"Abs\"\n    },\n    {\n      key: 13,\n      label: \"Bitwise Not\"\n    },\n    {\n      key: 18,\n      label: \"Boolean Not\"\n    },\n    {\n      key: 21,\n      label: \"Cos\"\n    },\n    {\n      key: 22,\n      label: \"CosH\"\n    },\n    {\n      key: 25,\n      label: \"Exp\"\n    },\n    {\n      key: 26,\n      label: \"Exp10\"\n    },\n    {\n      key: 27,\n      label: \"Exp2\"\n    },\n    {\n      key: 30,\n      label: \"Int\"\n    },\n    {\n      key: 31,\n      label: \"Is Null\"\n    },\n    {\n      key: 32,\n      label: \"Float\"\n    },\n    {\n      key: 35,\n      label: \"Ln\"\n    },\n    {\n      key: 36,\n      label: \"Log10\"\n    },\n    {\n      key: 37,\n      label: \"Log2\"\n    },\n    {\n      key: 45,\n      label: \"Negate\"\n    },\n    {\n      key: 48,\n      label: \"Round Down\"\n    },\n    {\n      key: 49,\n      label: \"Round Up\"\n    },\n    {\n      key: 51,\n      label: \"Sin\"\n    },\n    {\n      key: 52,\n      label: \"SinH\"\n    },\n    {\n      key: 53,\n      label: \"Square\"\n    },\n    {\n      key: 56,\n      label: \"Tan\"\n    },\n    {\n      key: 57,\n      label: \"TanH\"\n    },\n    {\n      key: 59,\n      label: \"ACosH\"\n    },\n    {\n      key: 60,\n      label: \"ASinH\"\n    },\n    {\n      key: 1,\n      label: \"Plus\"\n    },\n    {\n      key: 2,\n      label: \"Minus\"\n    },\n    {\n      key: 3,\n      label: \"Times\"\n    },\n    {\n      key: 5,\n      label: \"Power\"\n    },\n    {\n      key: 11,\n      label: \"Bitwise And\"\n    },\n    {\n      key: 12,\n      label: \"Bitwise Left Shift\"\n    },\n    {\n      key: 14,\n      label: \"Bitwise Or\"\n    },\n    {\n      key: 15,\n      label: \"Bitwise Right Shift\"\n    },\n    {\n      key: 16,\n      label: \"Bitwise Xor\"\n    },\n    {\n      key: 17,\n      label: \"Boolean And\"\n    },\n    {\n      key: 19,\n      label: \"Boolean Or\"\n    },\n    {\n      key: 20,\n      label: \"Boolean Xor\"\n    },\n    {\n      key: 23,\n      label: \"Divide\"\n    },\n    {\n      key: 24,\n      label: \"Equal To\"\n    },\n    {\n      key: 28,\n      label: \"Greater Than\"\n    },\n    {\n      key: 29,\n      label: \"Greater Than Equal\"\n    },\n    {\n      key: 33,\n      label: \"Less Than\"\n    },\n    {\n      key: 34,\n      label: \"Less Than Equal\"\n    },\n    {\n      key: 44,\n      label: \"Mod\"\n    },\n    {\n      key: 46,\n      label: \"Not Equal\"\n    },\n    {\n      key: 61,\n      label: \"ATan2\"\n    },\n    {\n      key: 50,\n      label: \"Set Null\"\n    },\n    {\n      key: 78,\n      label: \"Con\"\n    }\n  ]\n};\n\nexport async function getGlobalFunctions(locale?: SupportedLocales) {\n  const functionStrings: typeof import(\"../assets/t9n/common-strings.en.json\") = await fetchCommonStrings(locale);\n  const {\n    rasterFunctions: { rfx }\n  } = functionStrings;\n  return [\n    rfx.boundaryCleanName,\n    rfx.corridorName,\n    rfx.costAllocationName,\n    rfx.costBackLinkName,\n    rfx.costDistanceName,\n    rfx.costPathName,\n    rfx.distanceAccumulationName,\n    rfx.distanceAllocationName,\n    rfx.eucAllocationName,\n    rfx.eucBackDirectionName,\n    rfx.eucDistanceName,\n    rfx.eucDirectionName,\n    rfx.expandName,\n    rfx.fillName,\n    rfx.flowAccumulationName,\n    rfx.flowDirectionName,\n    rfx.flowDistanceName,\n    rfx.flowLengthName,\n    rfx.kernelDensityName,\n    rfx.leastCostCorridorName,\n    rfx.shortestPathName,\n    rfx.nibbleName,\n    rfx.optimalPathAsRasterName,\n    rfx.pathDistanceName,\n    rfx.pathBackLinkName,\n    rfx.pathAllocationName,\n    rfx.regionGroupName,\n    rfx.shrinkName,\n    rfx.sinkName,\n    rfx.snapPourPointName,\n    rfx.streamLinkName,\n    rfx.streamOrderName,\n    rfx.viewshed2Name,\n    rfx.watershedName,\n    rfx.zonalStatisticsName\n  ];\n}\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n","import { isArray, isEmpty, isPlainObject } from \"lodash-es\";\n\nexport const RFT_TYPE = \"RasterFunctionTemplate\";\nexport const TYPE_KEYWORD = \"type\";\nexport const RFV_TYPE = \"RasterFunctionVariable\";\nexport const ARGS_KEYWORD = \"arguments\";\nexport const FUNCTION_KEYWORD = \"function\";\n\nexport function isReferencedObject(obj: any): boolean {\n  if (!obj) {\n    return false;\n  }\n  if (obj._object_ref_id != null) {\n    return true;\n  }\n  return false;\n}\n\nexport function isNumber(x: any): boolean {\n  x = String(x).trim();\n  if (x === \"\") {\n    return false;\n  }\n  return /^[+-]?(\\d+)?(\\.\\d+)?$/.test(x);\n}\n\nexport function isWidgetValueBoolean(x: any): boolean {\n  x = String(x).trim();\n  return [\"true\", \"false\"].indexOf(x) >= 0;\n}\n\nexport function isColorRamp(rfxArg: any): boolean {\n  if (!rfxArg) {\n    return false;\n  }\n  if (rfxArg.type && rfxArg.type.toLowerCase().indexOf(\"colorramp\") >= 0) {\n    return true;\n  }\n  if (rfxArg.value && rfxArg.value.type && rfxArg.value.type.toLowerCase().indexOf(\"colorramp\") >= 0) {\n    return true;\n  }\n  return false;\n}\n\nexport function isRecordSet(rfxArg: any): boolean {\n  return rfxArg.type && rfxArg.type.toLowerCase().indexOf(\"recordset\") >= 0;\n}\n\n/**\n * Determines whether the given RFT element is an RFx argument.\n *\n * @param {any} rftElement - The RFT element to check.\n * @returns {boolean} `true` if the given element is RasterFunctionTemplate,\n * RasterFunctionVariable, isColorRamp, isRecordSet; `false` otherwise.\n */\nexport function isRFxArg(rftElement: any): boolean {\n  if (!rftElement) {\n    return false;\n  }\n  const type = rftElement.type;\n  return [RFT_TYPE, RFV_TYPE].indexOf(type) >= 0 || isColorRamp(rftElement) || isRecordSet(rftElement);\n}\n\n/**\n * Determines if the input is a FeatureLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.FeatureLayer} layer is a FeatureLayer\n */\nexport function isFeatureLayer(layer: __esri.Layer): layer is __esri.FeatureLayer {\n  return layer.type === \"feature\";\n}\n\n/**\n * Determines if the input is a TileLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.TileLayer} layer is a TileLayer\n */\nexport function isTileLayer(layer: __esri.Layer): layer is __esri.TileLayer {\n  return layer.type === \"tile\";\n}\n\n/**\n * Determines if the input is a ImageryTileLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.ImageryLayer} layer is a ImageryLayer\n */\nexport function isDynamicImageryLayer(layer: __esri.Layer): layer is __esri.ImageryLayer {\n  return (\n    layer.type === \"imagery-tile\" &&\n    (layer as __esri.ImageryTileLayer).sourceJSON.capabilities.toLowerCase().indexOf(\"tilesonly\") < 0\n  );\n}\n\n/**\n * Determines if the input is a ImageryLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.ImageryLayer} layer is a ImageryLayer\n */\nexport function isImageryLayer(layer: __esri.Layer): layer is __esri.ImageryLayer {\n  return layer.type === \"imagery\" || isDynamicImageryLayer(layer);\n}\n\n/**\n * Determines if the input is a ImageryTileLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.ImageryTileLayer} layer is a ImageryTileLayer\n */\nexport function isImageryTileLayer(layer: __esri.Layer): layer is __esri.ImageryTileLayer {\n  return layer.type === \"imagery-tile\" && !isDynamicImageryLayer(layer);\n}\n\nfunction isEveryPropertyEmpty<T>(value: T): boolean {\n  let isAllPropsEmpty = true;\n  if (typeof value === \"object\" && isArray(value) === false) {\n    // using for-in as it will work with objects with properties that set via accessors as well\n    for (const prop in value) {\n      // This will tell the TypeScript compiler that the obj object has a string index signature,\n      // and will allow to access its properties using a string index without getting the \"Element implicitly has an 'any' type\" error.\n      const propValue = (value as { [key: string]: T })?.[prop];\n      if (value.hasOwnProperty(prop) === true && propValue !== undefined && propValue !== null && propValue !== \"\") {\n        isAllPropsEmpty = false;\n        break;\n      }\n    }\n  }\n  return isAllPropsEmpty;\n}\n\n/**\n * Check for an empty value for data items like GPString and Field.\n * @param value data item value.\n * @returns whether the value is considered empty.\n */\nexport function isEmptyDataItem<T>(value: T): boolean {\n  return (\n    value === undefined ||\n    value === null ||\n    // single-select, \"\" is a special case for strings\n    (typeof value === \"string\" && value === \"\") ||\n    // single-select, empty objects are a special case for nested values\n    (isPlainObject(value) && isEmpty(value)) ||\n    // multi-select\n    (Array.isArray(value) && value.length < 1) ||\n    // only testing objects which are not arrays\n    // TODO: combine isEveryPropertyEmpty and isEmptyDataItem to single function\n    (typeof value === \"object\" && isArray(value) === false && isEveryPropertyEmpty(value))\n  );\n}\n","import { SupportedLocales, fetchCommonStrings } from \"../localization\";\nimport { dataTypes, domainTypes, getEnums } from \"../resources\";\nimport { RFxSchema } from \"../schemaInterfaces\";\n\nexport async function getSchema(locale?: SupportedLocales) {\n  const functionStrings: typeof import(\"../../assets/t9n/common-strings.en.json\") = await fetchCommonStrings(locale);\n  const enums = await getEnums();\n\n  const schema: HashMap<RFxSchema> = {\n    HillshadeFunction: {\n      name: functionStrings.rasterFunctions.rfx.hillshadeName,\n      snippet: functionStrings.rasterFunctions.rfx.hillshadeSnip,\n      description: functionStrings.rasterFunctions.rfx.hillshadeDesc,\n      category: \"surface\",\n      icon: \"hillshade.png\",\n      helpID: \"hillshade-function.htm\",\n      rasterFunctionArguments: {\n        DEM: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"hillshade_dem\"\n        },\n        HillshadeType: {\n          required: false,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.hillshadeTypeName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriHillshadeTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [1],\n                inactive: [\"Azimuth\", \"Altitude\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"hillshade_hillshadetype\"\n        },\n        Azimuth: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.azimuthName,\n          hidden: false,\n          defaultValue: 315,\n          helpTextID: \"hillshade_azimuth\"\n        },\n        Altitude: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.altitudeName,\n          hidden: false,\n          defaultValue: 45,\n          helpTextID: \"hillshade_altitude\"\n        },\n        SlopeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.slopeTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriSlopeTypes13\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [3],\n                active: [\"PSPower\", \"PSZFactor\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"hillshade_slopetype\"\n        },\n        ZFactor: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zFactorName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"hillshade_zfactor\"\n        },\n        PSPower: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.PSPowerName,\n          hidden: false,\n          defaultValue: 0.664,\n          helpTextID: \"hillshade_pspower\"\n        },\n        PSZFactor: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.PSZFactorName,\n          hidden: false,\n          defaultValue: 0.024,\n          helpTextID: \"hillshade_pszfactor\"\n        },\n        RemoveEdgeEffect: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.removeEdgeEffectName,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"hillshade_removeedgeeffect\"\n        }\n      }\n    },\n    AspectFunction: {\n      name: functionStrings.rasterFunctions.rfx.aspectName,\n      snippet: functionStrings.rasterFunctions.rfx.aspectSnip,\n      description: functionStrings.rasterFunctions.rfx.aspectDesc,\n      category: \"surface\",\n      icon: \"aspect.png\",\n      helpID: \"aspect-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"aspect_raster\"\n        }\n      }\n    },\n    ColormapFunction: {\n      name: functionStrings.rasterFunctions.rfx.colormapName,\n      snippet: functionStrings.rasterFunctions.rfx.colormapSnip,\n      description: functionStrings.rasterFunctions.rfx.colormapDesc,\n      category: \"conversion\",\n      icon: \"colormap.png\",\n      helpID: \"colormap-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"colormap_raster\"\n        },\n        ColorSchemeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.colorSchemeTypeName,\n          defaultValue: 0,\n          hidden: false,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.colorSchemeTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0],\n                active: [\"ColormapName\"],\n                inactive: [\"ColorRamp\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"colormap_colorschemetype\"\n        },\n        Colormap: {\n          required: true,\n          displayName: functionStrings.rasterFunctions.rfxArgs.colormapName,\n          dataType: dataTypes.colormap,\n          hidden: true\n        },\n        ColormapName: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.colormapName,\n          hidden: false,\n          defaultValue: \"Gray\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.colormapTypes\n          },\n          helpTextID: \"colormap_colormapname\"\n        },\n        ColorRamp: {\n          required: true,\n          displayName: functionStrings.rasterFunctions.rfxArgs.colorRampName,\n          dataType: dataTypes.colorRamp,\n          hidden: false,\n          helpTextID: \"colormap_colorramp\"\n        }\n      }\n    },\n    ContrastBrightnessFunction: {\n      name: functionStrings.rasterFunctions.rfx.contrastBrightnessName,\n      snippet: functionStrings.rasterFunctions.rfx.contrastBrightnessSnip,\n      description: functionStrings.rasterFunctions.rfx.contrastBrightnessDesc,\n      category: \"appearance\",\n      icon: \"contrastBrightness.png\",\n      helpID: \"contrast-and-brightness-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"contrastandbrightness_raster\"\n        },\n        ContrastOffset: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.contrastOffsetName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.range,\n            min: -100,\n            max: 100\n          },\n          helpTextID: \"contrastandbrightness_contrastoffset\"\n        },\n        BrightnessOffset: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.brightnessOffsetName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.range,\n            min: -100,\n            max: 100\n          },\n          helpTextID: \"contrastandbrightness_brightnessoffset\"\n        }\n      }\n    },\n    ExtractBandFunction: {\n      name: functionStrings.rasterFunctions.rfx.extractBandName,\n      snippet: functionStrings.rasterFunctions.rfx.extractBandSnip,\n      description: functionStrings.rasterFunctions.rfx.extractBandDesc,\n      category: \"dataManagement\",\n      icon: \"extractBand.png\",\n      helpID: \"extract-bands-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"extractbands_raster\"\n        },\n        Method: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.methodName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.bandComboMethods\n          },\n          editorStateTrigger: {\n            active: false,\n            triggers: [\n              {\n                values: [0],\n                active: [\"BandNames\"],\n                inactive: [\"BandWavelengths\", \"BandIds\"]\n              },\n              {\n                values: [1],\n                active: [\"BandWavelengths\"],\n                inactive: [\"BandNames\", \"BandIds\"]\n              },\n              {\n                values: [2],\n                active: [\"BandIds\"],\n                inactive: [\"BandNames\", \"BandWavelengths\"]\n              }\n            ]\n          },\n          helpTextID: \"extractbands_method\"\n        },\n        BandNames: {\n          required: true,\n          dataType: dataTypes.stringArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.bandNamesName,\n          hidden: false,\n          defaultValue: [\"Red\", \"Green\", \"Blue\"]\n        },\n        BandWavelengths: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.bandWavelengthsName,\n          hidden: false,\n          defaultValue: [600, 400, 200]\n        },\n        BandIds: {\n          required: true,\n          dataType: dataTypes.longArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.bandIdsName,\n          hidden: false,\n          defaultValue: [0, 1, 2]\n        },\n        MissingBandAction: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.missingBandActionName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriMissingBandActions\n          },\n          helpTextID: \"extractbands_missingbandaction\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"Method\", \"BandNames\", \"BandWavelengths\", \"BandIds\"],\n            widget: {\n              path: \"rfx-cte-band-combination-editor\"\n            },\n            helpTextIDs: {\n              extractbands_band: \"extractbands_band\",\n              extractbands_combination: \"extractbands_combination\",\n              extractbands_method: \"extractbands_method\"\n            }\n          }\n        ]\n      }\n    },\n    GrayscaleFunction: {\n      name: functionStrings.rasterFunctions.rfx.grayscaleName,\n      snippet: functionStrings.rasterFunctions.rfx.grayscaleSnip,\n      description: functionStrings.rasterFunctions.rfx.grayscaleDesc,\n      category: \"conversion\",\n      icon: \"grayscale.png\",\n      helpID: \"grayscale-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"grayscale_raster\"\n        },\n        ConversionParameters: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          dataTypeAttributes: {\n            type: \"bandmatrix\",\n            nBands: \"Raster\",\n            cols: 1,\n            displayNames: [functionStrings.rasterFunctions.rfxArgs.weightName]\n          },\n          displayName: functionStrings.rasterFunctions.rfxArgs.conversionParametersName,\n          hidden: false,\n          defaultValue: [0.299, 0.587, 0.114],\n          helpTextID: \"grayscale_conversionparameters\"\n        }\n      }\n    },\n    ShadedReliefFunction: {\n      name: functionStrings.rasterFunctions.rfx.shadedReliefName,\n      snippet: functionStrings.rasterFunctions.rfx.shadedReliefSnip,\n      description: functionStrings.rasterFunctions.rfx.shadedReliefDesc,\n      category: \"surface\",\n      icon: \"shadedRelief.png\",\n      helpID: \"shaded-relief-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"shadedrelief_raster\"\n        },\n        ColorSchemeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.colorSchemeTypeName,\n          hidden: true,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.colorSchemeTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [1],\n                active: [\"ColorRamp\"],\n                inactive: [\"Colormap\"],\n                autoRevert: true\n              }\n            ]\n          }\n        },\n        ColorRamp: {\n          required: true,\n          dataType: dataTypes.colorRamp,\n          displayName: functionStrings.rasterFunctions.rfxArgs.colorRampName,\n          hidden: false,\n          helpTextID: \"shadedrelief_colorramp\"\n        },\n        HillshadeType: {\n          required: false,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.hillshadeTypeName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriHillshadeTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [1],\n                inactive: [\"Azimuth\", \"Altitude\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"shadedrelief_hillshadetype\"\n        },\n        Colormap: {\n          required: true,\n          dataType: dataTypes.colormap,\n          displayName: functionStrings.rasterFunctions.rfxArgs.colormapName,\n          hidden: true\n        },\n        Azimuth: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.azimuthName,\n          hidden: false,\n          defaultValue: 315,\n          helpTextID: \"shadedrelief_azimuth\"\n        },\n        Altitude: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.altitudeName,\n          hidden: false,\n          defaultValue: 45,\n          helpTextID: \"shadedrelief_altitude\"\n        },\n        SlopeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.slopeTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriSlopeTypes13\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [3],\n                active: [\"PSPower\", \"PSZFactor\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"shadedrelief_slopetype\"\n        },\n        ZFactor: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zFactorName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"shadedrelief_zfactor\"\n        },\n        PSPower: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.PSPowerName,\n          hidden: false,\n          defaultValue: 0.664,\n          helpTextID: \"shadedrelief_pspower\"\n        },\n        PSZFactor: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.PSZFactorName,\n          hidden: false,\n          defaultValue: 0.024,\n          helpTextID: \"shadedrelief_pszfactor\"\n        },\n        RemoveEdgeEffect: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.removeEdgeEffectName,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"shadedrelief_removeedgeeffect\"\n        }\n      }\n    },\n    SlopeFunction: {\n      name: functionStrings.rasterFunctions.rfx.slopeName,\n      snippet: functionStrings.rasterFunctions.rfx.slopeSnip,\n      description: functionStrings.rasterFunctions.rfx.slopeDesc,\n      category: \"surface\",\n      icon: \"slope.png\",\n      helpID: \"slope-function.htm\",\n      rasterFunctionArguments: {\n        DEM: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.DEMName,\n          hidden: false,\n          helpTextID: \"slope_dem\"\n        },\n        SlopeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.slopeTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriSlopeTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [3],\n                active: [\"PSPower\", \"PSZFactor\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"slope_slopetype\"\n        },\n        Zfactor: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zFactorName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"slope_zfactor\"\n        },\n        PSPower: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.PSPowerName,\n          hidden: false,\n          defaultValue: 0.664,\n          helpTextID: \"slope_pspower\"\n        },\n        PSZFactor: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.PSZFactorName,\n          hidden: false,\n          defaultValue: 0.024,\n          helpTextID: \"slope_pszfactor\"\n        },\n        RemoveEdgeEffect: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.removeEdgeEffectName,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"slope_removeedgeeffect\"\n        }\n      }\n    },\n    UnitConversionFunction: {\n      name: functionStrings.rasterFunctions.rfx.unitConversionName,\n      snippet: functionStrings.rasterFunctions.rfx.unitConversionSnip,\n      description: functionStrings.rasterFunctions.rfx.unitConversionDesc,\n      category: \"conversion\",\n      icon: \"unitConversion.png\",\n      helpID: \"unit-conversion-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"unitconversion_raster\"\n        },\n        FromUnit: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fromUnitName,\n          hidden: false,\n          defaultValue: 3,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriUnitConversionFxUnitTypes\n          },\n          helpTextID: \"unitconversion_fromunit\"\n        },\n        ToUnit: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.toUnitName,\n          hidden: false,\n          defaultValue: 10,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriUnitConversionFxUnitTypes\n          },\n          helpTextID: \"unitconversion_tounit\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"FromUnit\", \"ToUnit\"],\n            widget: {\n              path: \"rfx-cte-unit-picker\"\n            }\n          }\n        ]\n      }\n    },\n    StretchFunction: {\n      name: functionStrings.rasterFunctions.rfx.stretchName,\n      snippet: functionStrings.rasterFunctions.rfx.stretchSnip,\n      description: functionStrings.rasterFunctions.rfx.stretchDesc,\n      category: \"appearance\",\n      icon: \"stretch.png\",\n      helpID: \"stretch-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"stretch_raster\"\n        },\n        StretchType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterTypeName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriRasterStretchTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0, 5],\n                inactive: [\"MinPercent\", \"MaxPercent\", \"NumberOfStandardDeviation\", \"SigmoidStrengthLevel\"]\n              },\n              {\n                values: [3],\n                active: [\"NumberOfStandardDeviation\"],\n                inactive: [\"MinPercent\", \"MaxPercent\", \"SigmoidStrengthLevel\"]\n              },\n              {\n                values: [6],\n                active: [\"MinPercent\", \"MaxPercent\"],\n                inactive: [\"NumberOfStandardDeviation\", \"SigmoidStrengthLevel\"]\n              },\n              {\n                values: [9],\n                active: [\"SigmoidStrengthLevel\"],\n                inactive: [\"MinPercent\", \"MaxPercent\", \"NumberOfStandardDeviation\"]\n              }\n            ]\n          },\n          helpTextID: \"stretch_stretchtype\"\n        },\n        Min: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"stretch_min\"\n        },\n        Max: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxName,\n          hidden: false,\n          defaultValue: 255,\n          helpTextID: \"stretch_max\"\n        },\n        MinPercent: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minPercentName,\n          hidden: false,\n          defaultValue: 0.25,\n          helpTextID: \"stretch_minpercent\"\n        },\n        MaxPercent: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxPercentName,\n          hidden: false,\n          defaultValue: 0.5,\n          helpTextID: \"stretch_maxpercent\"\n        },\n        NumberOfStandardDeviation: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.numberOfStandardDeviationName,\n          hidden: false,\n          defaultValue: 2,\n          helpTextID: \"stretch_numberofstandarddeviation\"\n        },\n        SigmoidStrengthLevel: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sigmoidStrengthLevelName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.numList,\n            start: 1,\n            count: 6,\n            inc: 1,\n            asc: true\n          },\n          helpTextID: \"stretch_sigmoidstrengthlevel\"\n        },\n        EstimateStatsHistogram: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.estimateStatsHistogramName,\n          hidden: false,\n          defaultValue: false,\n          categoryRefId: \"rfxArgCat_Statistics\",\n          helpTextID: \"stretch_estimatestatshistogram\"\n        },\n        DRA: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.DRAName,\n          hidden: false,\n          defaultValue: false,\n          categoryRefId: \"rfxArgCat_Statistics\",\n          helpTextID: \"stretch_dra\"\n        },\n        Statistics: {\n          required: true,\n          dataType: dataTypes.arrayOfRasterStatistics,\n          displayName: functionStrings.rasterFunctions.rfxArgs.statisticsName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_Statistics\",\n          helpTextID: \"stretch_statistics\"\n        },\n        Histograms: {\n          required: true,\n          dataType: dataTypes.arrayOfRasterHistogram,\n          displayName: functionStrings.rasterFunctions.rfxArgs.histogramsName,\n          hidden: true,\n          categoryRefId: \"rfxArgCat_Statistics\"\n        },\n        ComputeGamma: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.computeGammaName,\n          hidden: false,\n          defaultValue: false,\n          categoryRefId: \"rfxArgCat_Gamma\",\n          helpTextID: \"stretch_computegamma\"\n        },\n        UseGamma: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.useGammaName,\n          hidden: false,\n          defaultValue: false,\n          categoryRefId: \"rfxArgCat_Gamma\",\n          helpTextID: \"stretch_usegamma\"\n        },\n        Gamma: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.gammaName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_Gamma\",\n          helpTextID: \"stretch_gamma\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"Gamma\"],\n            triggerArguments: [\"Raster\"],\n            widget: {\n              path: \"rfx-cte-gamma-editor\"\n            }\n          }\n        ]\n      }\n    },\n    RasterCalculatorFunction: {\n      name: functionStrings.rasterFunctions.rfx.rasterCalculatorName,\n      snippet: functionStrings.rasterFunctions.rfx.rasterCalculatorSnip,\n      description: functionStrings.rasterFunctions.rfx.rasterCalculatorDesc,\n      category: \"math\",\n      icon: \"rasterCalculator.png\",\n      helpID: \"calculator-function.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          hidden: false,\n          allowScalar: true\n        },\n        InputNames: {\n          required: true,\n          dataType: dataTypes.stringArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputNamesName,\n          hidden: false\n        },\n        Expression: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.expressionName,\n          hidden: false,\n          helpTextID: \"calculator_expression\"\n        },\n        CellsizeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellsizeTypeName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCellsizeTypes\n          },\n          helpTextID: \"calculator_cellsizetype\"\n        },\n        ExtentType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriExtentTypes\n          },\n          helpTextID: \"calculator_extenttype\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"Rasters\", \"InputNames\"],\n            widget: {\n              path: \"rfx-cte-named-raster-editor\"\n            },\n            helpTextIDs: {\n              calculator_rastervariables: \"calculator_rastervariables\"\n            }\n          }\n        ]\n      }\n    },\n    ClassifyFunction: {\n      name: functionStrings.rasterFunctions.rfx.classifyName,\n      snippet: functionStrings.rasterFunctions.rfx.classifySnip,\n      description: functionStrings.rasterFunctions.rfx.classifyDesc,\n      category: \"classification\",\n      icon: \"classify.png\",\n      helpID: \"classify-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"classify_raster\"\n        },\n        ClassifierDefinitionFile: {\n          required: true,\n          dataType: dataTypes.file,\n          fileExtSupported: [\"ecd\"],\n          displayName: functionStrings.rasterFunctions.rfxArgs.classifierDefinitionFileName,\n          hidden: false,\n          helpTextID: \"classify_classifierdefinitionfile\"\n        },\n        Raster2: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.raster2Name,\n          hidden: false,\n          helpTextID: \"classify_raster2\"\n        }\n      }\n    },\n    MaskFunction: {\n      name: functionStrings.rasterFunctions.rfx.maskName,\n      snippet: functionStrings.rasterFunctions.rfx.maskSnip,\n      description: functionStrings.rasterFunctions.rfx.maskDesc,\n      category: \"dataManagement\",\n      icon: \"mask.png\",\n      helpID: \"mask-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"mask_raster\"\n        },\n        NoDataInterpretation: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.noDataInterpretationName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriNoDataInterpretationTypes\n          },\n          helpTextID: \"mask_nodatainterpretation\"\n        },\n        NoDataValues: {\n          required: true,\n          dataType: dataTypes.stringArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.noDataValuesName,\n          hidden: false,\n          dataTypeAttributes: {\n            type: \"bandmatrix\",\n            nBands: \"Raster\",\n            cols: 1,\n            defaultValue: null,\n            displayNames: [functionStrings.rasterFunctions.rfxArgs.noDataValuesName]\n          },\n          helpTextID: \"mask_nodatavalues\"\n        },\n        IncludedRanges: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.includedRangesName,\n          hidden: false,\n          defaultValue: [0, 0],\n          dataTypeAttributes: {\n            type: \"bandmatrix\",\n            nBands: \"Raster\",\n            cols: 2,\n            displayNames: [\n              functionStrings.rasterFunctions.rfxArgs.minimumName,\n              functionStrings.rasterFunctions.rfxArgs.maximumName\n            ]\n          },\n          helpTextID: \"mask_includedranges\"\n        },\n        Invert: {\n          required: true,\n          dataType: dataTypes.boolean,\n          hidden: true,\n          defaultValue: false\n        }\n      }\n    },\n    ColormapToRGBFunction: {\n      name: functionStrings.rasterFunctions.rfx.colormapToRGBName,\n      snippet: functionStrings.rasterFunctions.rfx.colormapToRGBSnip,\n      description: functionStrings.rasterFunctions.rfx.colormapToRGBDesc,\n      category: \"conversion\",\n      icon: \"colormapToRGB.png\",\n      helpID: \"colormap-to-rgb-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"colormaptorgb_raster\"\n        },\n        UnmappedAsRandomColor: {\n          required: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.unmappedAsRandomColorName,\n          dataType: dataTypes.boolean,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"colormaptorgb_unmappedasrandomcolor\"\n        }\n      }\n    },\n    CurvatureFunction: {\n      name: functionStrings.rasterFunctions.rfx.curvatureName,\n      snippet: functionStrings.rasterFunctions.rfx.curvatureSnip,\n      description: functionStrings.rasterFunctions.rfx.curvatureDesc,\n      category: \"surface\",\n      icon: \"curvature.png\",\n      helpID: \"curvature-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.DEMName,\n          hidden: false,\n          helpTextID: \"curvature_raster\"\n        },\n        CurvatureType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.curvatureTypeName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCurvatureTypes\n          },\n          helpTextID: \"curvature_curvaturetype\"\n        },\n        ZFactor: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zFactorName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"curvature_zfactor\"\n        }\n      }\n    },\n    CompositeBandFunction: {\n      name: functionStrings.rasterFunctions.rfx.compositeBandName,\n      snippet: functionStrings.rasterFunctions.rfx.compositeBandSnip,\n      description: functionStrings.rasterFunctions.rfx.compositeBandDesc,\n      category: \"dataManagement\",\n      icon: \"compositeBand.png\",\n      helpID: \"composite-bands-function.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          hidden: false,\n          helpTextID: \"compositebands_rasters\"\n        },\n        CellsizeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellsizeTypeName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCellsizeTypes\n          },\n          helpTextID: \"compositebands_cellsizetype\"\n        }\n      }\n    },\n    TableFunction: {\n      name: functionStrings.rasterFunctions.rfx.tableName,\n      snippet: functionStrings.rasterFunctions.rfx.tableSnip,\n      description: functionStrings.rasterFunctions.rfx.tableDesc,\n      category: \"dataManagement\",\n      icon: \"table.png\",\n      helpID: \"attribute-table-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"attributetable_raster\"\n        },\n        AttributeTableAsRecordSet: {\n          required: true,\n          dataType: dataTypes.table,\n          displayName: functionStrings.rasterFunctions.rfxArgs.attributeTableName,\n          hidden: false\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"Raster\", \"AttributeTableAsRecordSet\"],\n            widget: {\n              path: \"rfx-cte-attribute-table\"\n            },\n            helpTextIDs: {\n              attributetable_raster: \"attributetable_raster\"\n            }\n          }\n        ]\n      }\n    },\n    ConvolutionFunction: {\n      name: functionStrings.rasterFunctions.rfx.convolutionName,\n      snippet: functionStrings.rasterFunctions.rfx.convolutionSnip,\n      description: functionStrings.rasterFunctions.rfx.convolutionDesc,\n      category: \"appearance\",\n      icon: \"convolution.png\",\n      helpID: \"convolution-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"convolution_raster\"\n        },\n        ConvolutionType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterTypeName,\n          hidden: false,\n          defaultValue: 19,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriRasterFilterTypes\n          }\n        },\n        Rows: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rowsName,\n          hidden: false,\n          defaultValue: 3,\n          domain: {\n            type: domainTypes.numList,\n            start: 1,\n            count: 100,\n            inc: 1,\n            asc: true\n          }\n        },\n        Columns: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.columnsName,\n          hidden: false,\n          defaultValue: 3,\n          domain: {\n            type: domainTypes.numList,\n            start: 1,\n            count: 100,\n            inc: 1,\n            asc: true\n          }\n        },\n        Kernel: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.kernelName,\n          hidden: false,\n          helpTextID: \"convolution_kernel\"\n        },\n        MirrorEdges: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.mirrorEdgesName,\n          hidden: true,\n          defaultValue: false\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"ConvolutionType\", \"Rows\", \"Columns\", \"Kernel\"],\n            widget: {\n              path: \"rfx-cte-kernel-selector\"\n            },\n            helpTextIDs: {\n              convolution_type: \"convolution_type\",\n              convolution_kernel: \"convolution_kernel\"\n            }\n          }\n        ]\n      }\n    },\n    StatisticsHistogramFunction: {\n      name: functionStrings.rasterFunctions.rfx.statisticsHistogramName,\n      snippet: functionStrings.rasterFunctions.rfx.statisticsHistogramSnip,\n      description: functionStrings.rasterFunctions.rfx.statisticsHistogramDesc,\n      category: \"appearance\",\n      icon: \"statisticsHistogram.png\",\n      helpID: \"statistics-and-histogram-function.htm\",\n      hidden: false,\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"statisticsandhistogram_raster\"\n        },\n        Statistics: {\n          required: true,\n          dataType: dataTypes.rasterStatisticsArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.statisticsHistogramName,\n          hidden: false,\n          helpTextID: \"statisticsandhistogram_statistics\"\n        },\n        Histograms: {\n          required: true,\n          dataType: dataTypes.rasterHistogramArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.histogramsName,\n          hidden: true\n        }\n      }\n    },\n    WeightedOverlayFunction: {\n      name: functionStrings.rasterFunctions.rfx.weightedOverlayName,\n      snippet: functionStrings.rasterFunctions.rfx.weightedOverlaySnip,\n      description: functionStrings.rasterFunctions.rfx.weightedOverlayDesc,\n      category: \"analysis\",\n      icon: \"weightedOverlay.png\",\n      hidden: false,\n      helpID: \"weighted-overlay-function.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          hidden: false\n        },\n        Influences: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.influencesName,\n          hidden: false\n        },\n        Fields: {\n          required: true,\n          dataType: dataTypes.stringArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fieldsName,\n          hidden: false\n        },\n        Remaps: {\n          required: true,\n          dataType: dataTypes.stringArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.remapsName,\n          hidden: false\n        },\n        EvalFrom: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.evalFromName,\n          hidden: false,\n          defaultValue: 1\n        },\n        EvalTo: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.evalToName,\n          hidden: false,\n          defaultValue: 9\n        },\n        CellsizeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellsizeTypeName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCellsizeTypes\n          },\n          helpTextID: \"weightedoverlay_cellsizetype\"\n        },\n        ExtentType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriExtentTypes\n          },\n          helpTextID: \"weightedoverlay_extenttype\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"Rasters\", \"Influences\", \"Fields\", \"Remaps\", \"EvalFrom\", \"EvalTo\"],\n            widget: {\n              path: \"rfx-cte-weighted-overlay-table-editor\"\n            },\n            helpTextIDs: {\n              weightedoverlay_weightedoverlaytable: \"weightedoverlay_weightedoverlaytable\",\n              weightedoverlay_remaptable: \"weightedoverlay_remaptable\",\n              weightedoverlay_scales: \"weightedoverlay_scales\"\n            }\n          }\n        ]\n      }\n    },\n\n    WeightedSumFunction: {\n      name: functionStrings.rasterFunctions.rfx.weightedSumName,\n      snippet: functionStrings.rasterFunctions.rfx.weightedSumSnip,\n      description: functionStrings.rasterFunctions.rfx.weightedSumDesc,\n      category: \"analysis\",\n      icon: \"weightedSum.png\",\n      helpID: \"weighted-sum-function.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          hidden: false\n        },\n        Fields: {\n          required: true,\n          dataType: dataTypes.stringArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fieldsName,\n          hidden: false\n        },\n        Weights: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.weightsName,\n          hidden: false\n        },\n        CellsizeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellsizeTypeName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCellsizeTypes\n          },\n          helpTextID: \"weightedsum_cellsizetype\"\n        },\n        ExtentType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriExtentTypes\n          },\n          helpTextID: \"weightedsum_extenttype\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"Rasters\", \"Fields\", \"Weights\"],\n            widget: {\n              path: \"rfx-cte-weighted-sum-table-editor\"\n            },\n            helpTextIDs: {\n              weightedsum_weightedsumtable: \"weightedsum_weightedsumtable\"\n            }\n          }\n        ]\n      }\n    },\n    ElevationVoidFillFunction: {\n      name: functionStrings.rasterFunctions.rfx.elevationVoidFillName,\n      snippet: functionStrings.rasterFunctions.rfx.elevationVoidFillSnip,\n      description: functionStrings.rasterFunctions.rfx.elevationVoidFillDesc,\n      category: \"surface\",\n      icon: \"elevationVoidFill.png\",\n      helpID: \"elevation-void-fill-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.DEMName,\n          hidden: false,\n          helpTextID: \"elevationvoidfill_raster\"\n        },\n        ShortRangeIDWRadius: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.shortRangeIDWRadiusName,\n          hidden: false,\n          defaultValue: -1,\n          helpTextID: \"elevationvoidfill_shortrangeidwradius\"\n        },\n        MaxVoidWidth: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxVoidWidthName,\n          hidden: false,\n          defaultValue: -1,\n          helpTextID: \"elevationvoidfill_maxvoidwidth\"\n        }\n      }\n    },\n    ContourFunction: {\n      name: functionStrings.rasterFunctions.rfx.contourName,\n      snippet: functionStrings.rasterFunctions.rfx.contourSnip,\n      description: functionStrings.rasterFunctions.rfx.contourDesc,\n      category: \"surface\",\n      icon: \"contour.png\",\n      helpID: \"contour-function.htm\",\n      rasterFunctionArguments: {\n        DEM: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"contour_dem\"\n        },\n        SigmaGaussian: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sigmaGaussianName,\n          hidden: false,\n          defaultValue: 2.5,\n          helpTextID: \"contour_sigmagaussian\"\n        },\n        ContourType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.contourTypeName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriContourTypes\n          },\n          helpTextID: \"contour_contourtype\"\n        },\n        ZBase: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zBaseName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"contour_zbase\"\n        },\n        NumberOfContours: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.numberOfContoursName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"contour_numberofcontours\"\n        },\n        ContourInterval: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.contourIntervalName,\n          hidden: false,\n          defaultValue: 100,\n          helpTextID: \"contour_contourinterval\"\n        },\n        NthContourLineInBold: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.nthContourLineInBoldName,\n          hidden: false,\n          defaultValue: 5,\n          helpTextID: \"contour_nthcontourlineinbold\"\n        },\n        ZFactor: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zFactorName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"contour_zfactor\"\n        }\n      }\n    },\n    RasterizeFeatureClassFunction: {\n      name: functionStrings.rasterFunctions.rfx.rasterizeFeatureClassName,\n      snippet: functionStrings.rasterFunctions.rfx.rasterizeFeatureClassSnip,\n      description: functionStrings.rasterFunctions.rfx.rasterizeFeatureClassDesc,\n      category: \"conversion\",\n      icon: \"rasterizeFeatureClass.png\",\n      helpID: \"rasterize-features-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"rasterizefeatures_raster\"\n        },\n        FeatureClass: {\n          required: true,\n          dataType: dataTypes.featureClass,\n          displayName: functionStrings.rasterFunctions.rfxArgs.featureClassName,\n          hidden: false,\n          helpTextID: \"rasterizefeatures_featureclass\"\n        },\n        ClassIndexField: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.classIndexFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"FeatureClass\"\n          },\n          helpTextID: \"rasterizefeatures_classindexfield\"\n        },\n        ResolveOverlapMethod: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.resolveOverlapMethodName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriRasterizeResolveOverlapMethod\n          },\n          helpTextID: \"rasterizefeatures_resolveoverlapmethod\"\n        }\n      }\n    },\n    ResampleFunction: {\n      name: functionStrings.rasterFunctions.rfx.resampleName,\n      snippet: functionStrings.rasterFunctions.rfx.resampleSnip,\n      description: functionStrings.rasterFunctions.rfx.resampleDesc,\n      category: \"dataManagement\",\n      icon: \"resample.png\",\n      helpID: \"resample-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"resample_raster\"\n        },\n        ResamplingType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.resamplingTypeName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.rstResamplingTypes\n          },\n          helpTextID: \"resample_resamplingtype\"\n        },\n        InputCellsize: {\n          required: true,\n          dataType: dataTypes.cellSize,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputCellsizeName,\n          hidden: false,\n          helpTextID: \"resample_inputcellsize\"\n        },\n        OutputCellsize: {\n          required: true,\n          dataType: dataTypes.cellSize,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outputCellsizeName,\n          hidden: false,\n          helpTextID: \"resample_outputcellsize\"\n        }\n      }\n    },\n    RegionGrowFunction: {\n      name: functionStrings.rasterFunctions.rfx.regionGrowName,\n      snippet: functionStrings.rasterFunctions.rfx.regionGrowSnip,\n      description: functionStrings.rasterFunctions.rfx.regionGrowDesc,\n      category: \"classification\",\n      icon: \"regionGrow.png\",\n      helpID: \"region-grow-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"regiongrow_raster\"\n        },\n        PointFeatureClass: {\n          required: true,\n          dataType: dataTypes.featureClass,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pointFeatureClassName,\n          hidden: false,\n          helpTextID: \"regiongrow_pointfeatureclass\"\n        },\n        MaxGrowthRadiusField: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxGrowthRadiusFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"PointFeatureClass\"\n          },\n          helpTextID: \"regiongrow_maxgrowthradiusfield\"\n        },\n        SimilarityThresholdField: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.similarityThresholdFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"PointFeatureClass\"\n          },\n          helpTextID: \"regiongrow_similaritythresholdfield\"\n        },\n        FillValueField: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fillValueFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"PointFeatureClass\"\n          },\n          helpTextID: \"regiongrow_fillvaluefield\"\n        }\n      }\n    },\n    SegmentMeanShiftFunction: {\n      name: functionStrings.rasterFunctions.rfx.segmentMeanShiftName,\n      snippet: functionStrings.rasterFunctions.rfx.segmentMeanShiftSnip,\n      description: functionStrings.rasterFunctions.rfx.segmentMeanShiftDesc,\n      category: \"classification\",\n      icon: \"segmentMeanShift.png\",\n      helpID: \"segment-mean-shift-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"segmentmeanshift_raster\"\n        },\n        SpectralDetail: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.spectralDetailName,\n          hidden: false,\n          defaultValue: 15.5,\n          helpTextID: \"segmentmeanshift_spectraldetail\"\n        },\n        SpatialDetail: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.spatialDetailName,\n          hidden: false,\n          defaultValue: 15,\n          helpTextID: \"segmentmeanshift_spatialdetail\"\n        },\n        MinNumPixelsPerSegment: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minNumPixelsPerSegmentName,\n          hidden: false,\n          defaultValue: 20,\n          helpTextID: \"segmentmeanshift_minnumpixelspersegment\"\n        },\n        BoundariesOnly: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.boundariesOnlyName,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"segmentmeanshift_boundariesonly\"\n        },\n        MaxNumPixelsPerSegment: {\n          required: false,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxNumPixelsPerSegment,\n          hidden: false,\n          defaultValue: -1,\n          helpTextID: \"segmentmeanshift_maxnumpixelspersegment\"\n        }\n      }\n    },\n    StatisticsFunction: {\n      name: functionStrings.rasterFunctions.rfx.statisticsName,\n      snippet: functionStrings.rasterFunctions.rfx.statisticsSnip,\n      description: functionStrings.rasterFunctions.rfx.statisticsDesc,\n      category: \"statistical\",\n      icon: \"statistics.png\",\n      helpID: \"statistics-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"statistics_raster\"\n        },\n        StatisticsType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.statisticsTypeName,\n          hidden: false,\n          defaultValue: 3,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriFocalStatisticTypes\n          },\n          helpTextID: \"statistics_statisticstype\"\n        },\n        Rows: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rowsName,\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\",\n          hidden: false,\n          defaultValue: 3,\n          helpTextID: \"statistics_rows\"\n        },\n        Columns: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.columnsName,\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\",\n          hidden: false,\n          defaultValue: 3,\n          helpTextID: \"statistics_columns\"\n        },\n        FillNoDataOnly: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fillNoDataOnlyName,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"statistics_fillnodataonly\"\n        }\n      }\n    },\n    VectorFieldFunction: {\n      name: functionStrings.rasterFunctions.rfx.vectorFieldName,\n      snippet: functionStrings.rasterFunctions.rfx.vectorFieldSnip,\n      description: functionStrings.rasterFunctions.rfx.vectorFieldDesc,\n      category: \"conversion\",\n      icon: \"vectorField.png\",\n      helpID: \"vector-field-function.htm\",\n      rasterFunctionArguments: {\n        Raster1: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.raster1Name,\n          hidden: false,\n          helpTextID: \"vectorfield_raster1\"\n        },\n        Raster2: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.raster2Name,\n          hidden: false,\n          helpTextID: \"vectorfield_raster2\"\n        },\n        InputDataType: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputDataTypeName,\n          hidden: false,\n          defaultValue: \"Unknown\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.uvMagDirUnkTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [\"Vector-MagDir\"],\n                active: [\"AngleReferenceSystem\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"vectorfield_inputdatatype\"\n        },\n        AngleReferenceSystem: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.angleReferenceSystemName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriAngleReferenceSystemTypes\n          },\n          helpTextID: \"vectorfield_anglereferencesystem\"\n        },\n        OutputDataType: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outputDataTypeName,\n          hidden: false,\n          defaultValue: \"Vector-MagDir\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.uvMagDirTypes\n          },\n          helpTextID: \"vectorfield_outputdatatype\"\n        }\n      }\n    },\n    InterpolateIrregularDataFunction: {\n      name: functionStrings.rasterFunctions.rfx.interpolateIrregularDataName,\n      snippet: functionStrings.rasterFunctions.rfx.interpolateIrregularDataSnip,\n      description: functionStrings.rasterFunctions.rfx.interpolateIrregularDataDesc,\n      category: \"dataManagement\",\n      icon: \"interpolateIrregularData.png\",\n      helpID: \"interpolate-irregular-data.htm\",\n      rasterFunctionArguments: {\n        PointFeatureClass: {\n          required: true,\n          dataType: dataTypes.featureClass,\n          dataTypeAttributes: {\n            type: \"point\",\n            hasZ: true\n          },\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputSamplePointFeatureClassName,\n          hidden: false,\n          helpTextID: \"interpolateirregulardata_pointfeatureclass\"\n        },\n        ValueField: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.valueFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"PointFeatureClass\"\n          },\n          helpTextID: \"interpolateirregulardata_valuefield\"\n        },\n        RasterInfo: {\n          required: true,\n          dataType: dataTypes.rasterInfo,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellSizeName,\n          hidden: false,\n          helpTextID: \"interpolateirregulardata_cellsize\"\n        },\n        InterpolationMethod: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.interpolationMethodName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriInterpolateIrregularDataMethods\n          },\n          editorValueTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0],\n                changedArgs: [\n                  {\n                    Radius: 3\n                  }\n                ]\n              },\n              {\n                values: [2, 3],\n                changedArgs: [\n                  {\n                    Radius: 0.5\n                  }\n                ]\n              },\n              {\n                values: [4],\n                changedArgs: [\n                  {\n                    Radius: 9\n                  }\n                ]\n              }\n            ]\n          },\n          helpTextID: \"interpolateirregulardata_interpolationmethod\"\n        },\n        Radius: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.radiusName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"interpolateirregulardata_radius\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"RasterInfo\"],\n            widget: {\n              path: \"rfx-cte-raster-info-cell-size-editor\"\n            }\n          }\n        ]\n      }\n    },\n    ReflectanceFunction: {\n      name: functionStrings.rasterFunctions.rfx.reflectanceName,\n      snippet: functionStrings.rasterFunctions.rfx.reflectanceSnip,\n      description: functionStrings.rasterFunctions.rfx.reflectanceDesc,\n      category: \"correction\",\n      icon: \"reflectance.png\",\n      helpID: \"apparent-reflectance-function.htm\",\n      hidden: false,\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"apparentreflectance_raster\"\n        },\n        RadianceGainValues: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.radianceGainValuesName,\n          hidden: false,\n          helpTextID: \"apparentreflectance_radiancegainvalues\"\n        },\n        RadianceBiasValues: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.radianceBiasValuesName,\n          hidden: false,\n          helpTextID: \"apparentreflectance_radiancebiasvalues\"\n        },\n        ReflectanceGainValues: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.reflectedGainValuesName,\n          hidden: false,\n          helpTextID: \"apparentreflectance_reflectancegainvalues\"\n        },\n        ReflectanceBiasValues: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.reflectedBiasValuesName,\n          hidden: false,\n          helpTextID: \"apparentreflectance_reflectancebiasvalues\"\n        },\n        SunElevation: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sunElevationName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"apparentreflectance_sunelevation\"\n        },\n        Albedo: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.albedoName,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"apparentreflectance_albedo\"\n        },\n        ScaleFactor: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.scaleFactorName,\n          hidden: false,\n          defaultValue: 2147483647,\n          helpTextID: \"apparentreflectance_scalefactor\"\n        },\n        Offset: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.offsetName,\n          hidden: false,\n          defaultValue: 2147483647,\n          helpTextID: \"apparentreflectance_offset\"\n        }\n      }\n    },\n    ThresholdFunction: {\n      name: functionStrings.rasterFunctions.rfx.thresholdName,\n      snippet: functionStrings.rasterFunctions.rfx.thresholdSnip,\n      description: functionStrings.rasterFunctions.rfx.thresholdDesc,\n      category: \"analysis\",\n      icon: \"threshold.png\",\n      helpID: \"binary-thresholding-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"binarythresholding_raster\"\n        },\n        ThresholdType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.thresholdTypeName,\n          hidden: true,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriRasterThresholdTypes\n          }\n        },\n        Thresholds: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.thresholdsName,\n          hidden: true\n        }\n      }\n    },\n    ArgStatisticsFunction: {\n      name: functionStrings.rasterFunctions.rfx.argStatisticsName,\n      snippet: functionStrings.rasterFunctions.rfx.argStatisticsSnip,\n      description: functionStrings.rasterFunctions.rfx.argStatisticsDesc,\n      category: \"statistical\",\n      icon: \"argStatistics.png\",\n      helpID: \"argstatistics-function.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          hidden: false,\n          helpTextID: \"argstatistics_rasters\"\n        },\n        ArgStatisticsType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.methodName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriArgStatisticsTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0],\n                active: [\"UndefinedClass\"],\n                inactive: [\"MinValue\", \"MaxValue\"]\n              },\n              {\n                values: [1],\n                active: [\"UndefinedClass\"],\n                inactive: [\"MinValue\", \"MaxValue\"]\n              },\n              {\n                values: [2],\n                active: [\"\"],\n                inactive: [\"UndefinedClass\", \"MinValue\", \"MaxValue\"]\n              },\n              {\n                values: [3],\n                active: [\"MinValue\", \"MaxValue\"],\n                inactive: [\"UndefinedClass\"]\n              }\n            ]\n          },\n          helpTextID: \"argstatistics_argstatisticstype\"\n        },\n        UndefinedClass: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.undefinedClassName,\n          hidden: false,\n          defaultValue: 100,\n          helpTextID: \"argstatistics_undefinedclass\"\n        },\n        MinValue: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minValueName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"argstatistics_minvalue\"\n        },\n        MaxValue: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxValueName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"argstatistics_maxvalue\"\n        },\n        IgnoreNoData: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.ignoreNoDataName,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"argstatistics_ignorenodata\"\n        }\n      }\n    },\n    ArithmeticFunction: {\n      name: functionStrings.rasterFunctions.rfx.arithmeticName,\n      snippet: functionStrings.rasterFunctions.rfx.arithmeticSnip,\n      description: functionStrings.rasterFunctions.rfx.arithmeticDesc,\n      category: \"math\",\n      icon: \"arithmetic.png\",\n      helpID: \"arithmetic-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          allowScalar: true,\n          helpTextID: \"arithmetic_raster\"\n        },\n        Raster2: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.raster2Name,\n          hidden: false,\n          allowScalar: true,\n          helpTextID: \"arithmetic_raster2\"\n        },\n        Operation: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.operationName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriRasterArithmeticOperations\n          },\n          helpTextID: \"arithmetic_operation\"\n        },\n        CellsizeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellsizeTypeName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCellsizeTypes\n          },\n          helpTextID: \"arithmetic_cellsizetype\"\n        },\n        ExtentType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriExtentTypes\n          },\n          helpTextID: \"arithmetic_extenttype\"\n        }\n      }\n    },\n    ClipFunction: {\n      name: functionStrings.rasterFunctions.rfx.clipName,\n      snippet: functionStrings.rasterFunctions.rfx.clipSnip,\n      description: functionStrings.rasterFunctions.rfx.clipDesc,\n      category: \"dataManagement\",\n      icon: \"clip.png\",\n      helpID: \"clip-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"clip_raster\"\n        },\n        ClippingType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.clippingTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriRasterClippingTypes\n          },\n          helpTextID: \"clip_clippingtype\"\n        },\n        ClippingRaster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.clippingGeometryName,\n          hidden: false,\n          helpTextID: \"clip_clippingraster\"\n        },\n        ClippingGeometry: {\n          required: true,\n          dataType: dataTypes.geometry,\n          displayName: functionStrings.rasterFunctions.rfxArgs.clippingGeometryName,\n          hidden: false\n        },\n        Extent: {\n          required: true,\n          dataType: dataTypes.extent,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentName,\n          hidden: false\n        },\n        UseInputFeatureGeometry: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.useInputFeatureGeometryName,\n          hidden: true\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"ClippingRaster\", \"ClippingGeometry\", \"Extent\"],\n            triggerArguments: [\"Raster\", \"ClippingType\", \"UseInputFeatureGeometry\"],\n            widget: {\n              path: \"rfx-cte-clipping-geometry\"\n            },\n            helpTextIDs: {\n              clip_clippinggeometryorraster: \"clip_clippinggeometryorraster\",\n              clip_useinputfeaturesforclippinggeometry: \"clip_useinputfeaturesforclippinggeometry\",\n              clip_outputextent: \"clip_outputextent\"\n            }\n          }\n        ]\n      }\n    },\n    RemapFunction: {\n      name: functionStrings.rasterFunctions.rfx.remapName,\n      snippet: functionStrings.rasterFunctions.rfx.remapSnip,\n      description: functionStrings.rasterFunctions.rfx.remapDesc,\n      category: \"reclass\",\n      icon: \"remap.png\",\n      helpID: \"remap-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"remap_raster\"\n        },\n        UseTable: {\n          required: true,\n          dataType: dataTypes.boolean,\n          hidden: true,\n          displayName: functionStrings.rasterFunctions.rfxArgs.remapDefinitionTypeName,\n          defaultValue: false,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.remapDefinitionTypes\n          }\n        },\n        InputRanges: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputRangeName,\n          hidden: false\n        },\n        OutputValues: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outputValuesName,\n          hidden: false\n        },\n        NoDataRanges: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.noDataRangeName,\n          hidden: false\n        },\n        Table: {\n          required: true,\n          dataType: dataTypes.table,\n          displayName: functionStrings.rasterFunctions.rfxArgs.remapsName,\n          hidden: true\n        },\n        InputField: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputFieldName,\n          hidden: true\n        },\n        OutputField: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outputFieldName,\n          hidden: true\n        },\n        InputMaxField: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputMaxFieldName,\n          hidden: true\n        },\n        RemapTableType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.remapTableTypeName,\n          hidden: true,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.remapTableTypes\n          }\n        },\n        AllowUnmatched: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.changeMissingValuesToNoDataName,\n          reverseDisplayValue: true,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"remap_allowunmatched\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"InputRanges\", \"OutputValues\", \"NoDataRanges\"],\n            widget: {\n              path: \"rfx-cte-remap-grid\"\n            }\n          }\n        ]\n      }\n    },\n    NDVIFunction: {\n      name: functionStrings.rasterFunctions.rfx.ndviName,\n      snippet: functionStrings.rasterFunctions.rfx.ndviSnip,\n      description: functionStrings.rasterFunctions.rfx.ndviDesc,\n      category: \"analysis\",\n      icon: \"ndvi.png\",\n      helpID: \"ndvi-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"ndvi_raster\"\n        },\n        VisibleBandID: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.visibleBandIDName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.bandIndex,\n            argumentName: \"Raster\"\n          },\n          helpTextID: \"ndvi_visiblebandid\"\n        },\n        InfraredBandID: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.infraredBandIDName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.bandIndex,\n            argumentName: \"Raster\"\n          },\n          helpTextID: \"ndvi_infraredbandid\"\n        },\n        ScientificOutput: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.scientificOutputName,\n          hidden: false,\n          helpTextID: \"ndvi_scientificoutput\"\n        }\n      }\n    },\n    BandArithmeticFunction: {\n      name: functionStrings.rasterFunctions.rfx.bandArithmeticName,\n      snippet: functionStrings.rasterFunctions.rfx.bandArithmeticSnip,\n      description: functionStrings.rasterFunctions.rfx.bandArithmeticDesc,\n      category: \"math\",\n      icon: \"bandArithmetic.png\",\n      helpID: \"band-arithmetic-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"bandarithmetic_raster\"\n        },\n        Method: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.methodName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.bandArithmeticMethods\n          },\n          helpTextID: \"bandarithmetic_method\"\n        },\n        BandIndexes: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.bandIndexesName,\n          hidden: false,\n          helpTextID: \"bandarithmetic_bandindexes\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"BandIndexes\"],\n            triggerArguments: [\"Method\"],\n            widget: {\n              path: \"rfx-cte-band-arithmetic-band-indexes-editor\"\n            },\n            helpTextIDs: {\n              bandarithmetic_bandindexes: \"bandarithmetic_bandindexes\"\n            }\n          }\n        ]\n      }\n    },\n    ConstantFunction: {\n      name: functionStrings.rasterFunctions.rfx.constantName,\n      snippet: functionStrings.rasterFunctions.rfx.constantSnip,\n      description: functionStrings.rasterFunctions.rfx.constantDesc,\n      category: \"dataManagement\",\n      icon: \"constant.png\",\n      helpID: \"\",\n      rasterFunctionArguments: {\n        Constant: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.constantName,\n          hidden: false,\n          defaultValue: [1],\n          helpTextID: \"constant_constant\"\n        },\n        RasterInfo: {\n          required: true,\n          dataType: dataTypes.rasterInfo,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterInfoName,\n          hidden: false,\n          helpTextID: \"constant_rasterinfo\"\n        },\n        Statistics: {\n          required: false,\n          dataType: dataTypes.rasterStatisticsArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.statisticsName,\n          hidden: true\n        }\n      }\n    },\n    CostAllocation: {\n      name: functionStrings.rasterFunctions.rfx.costAllocationName,\n      snippet: functionStrings.rasterFunctions.rfx.costAllocationSnip,\n      description: functionStrings.rasterFunctions.rfx.costAllocationDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"costAllocation.png\",\n      helpID: \"cost-allocation-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"CostAllocation_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_allocation_raster\"\n        },\n        in_source_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"costallocation_insourcedata\"\n        },\n        source_field: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_source_data\"\n          },\n          helpTextID: \"costallocation_sourcefield\"\n        },\n        in_cost_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costRasterName,\n          hidden: false,\n          helpTextID: \"costallocation_incostraster\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"costallocation_maximumdistance\"\n        },\n        in_value_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.valueRasterName,\n          hidden: false,\n          helpTextID: \"costallocation_invalueraster\"\n        },\n        source_cost_multiplier: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costMultiplierName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costallocation_sourcecostmultiplier\"\n        },\n        source_start_cost: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.startCostName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costallocation_sourcestartcost\"\n        },\n        source_resistance_rate: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.accumCostResistanceRateName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costallocation_sourceresistancerate\"\n        },\n        source_capacity: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.capacityName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costallocation_sourcecapacity\"\n        },\n        source_direction: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.travelDirectionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.list,\n                enum: enums.gpsaTravelDirections,\n                defaultValue: \"FROM_SOURCE\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costallocation_sourcedirection\"\n        }\n      }\n    },\n    CostBackLink: {\n      name: functionStrings.rasterFunctions.rfx.costBackLinkName,\n      snippet: functionStrings.rasterFunctions.rfx.costBackLinkSnip,\n      description: functionStrings.rasterFunctions.rfx.costBackLinkDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"costBackLink.png\",\n      helpID: \"cost-back-link-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"CostBackLink_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_backlink_raster\"\n        },\n        in_source_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"costbacklink_insourcedata\"\n        },\n        in_cost_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costRasterName,\n          hidden: false,\n          helpTextID: \"costbacklink_incostraster\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"costbacklink_maximumdistance\"\n        },\n        source_cost_multiplier: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costMultiplierName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costbacklink_sourcecostmultiplier\"\n        },\n        source_start_cost: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.startCostName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costbacklink_sourcestartcost\"\n        },\n        source_resistance_rate: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.accumCostResistanceRateName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costbacklink_sourceresistancerate\"\n        },\n        source_capacity: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.capacityName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costbacklink_sourcecapacity\"\n        },\n        source_direction: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.travelDirectionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.list,\n                enum: enums.gpsaTravelDirections,\n                defaultValue: \"FROM_SOURCE\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costbacklink_sourcedirection\"\n        }\n      }\n    },\n    CostDistance: {\n      name: functionStrings.rasterFunctions.rfx.costDistanceName,\n      snippet: functionStrings.rasterFunctions.rfx.costDistanceSnip,\n      description: functionStrings.rasterFunctions.rfx.costDistanceDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"costDistance.png\",\n      helpID: \"cost-distance-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"CostDistance_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_distance_raster\"\n        },\n        in_source_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"costdistance_insourcedata\"\n        },\n        in_cost_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costRasterName,\n          hidden: false,\n          helpTextID: \"costdistance_incostraster\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"costdistance_maximumdistance\"\n        },\n        source_cost_multiplier: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costMultiplierName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costdistance_sourcecostmultiplier\"\n        },\n        source_start_cost: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.startCostName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costdistance_sourcestartcost\"\n        },\n        source_resistance_rate: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.accumCostResistanceRateName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costdistance_sourceresistancerate\"\n        },\n        source_capacity: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.capacityName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costdistance_sourcecapacity\"\n        },\n        source_direction: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.travelDirectionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.list,\n                enum: enums.gpsaTravelDirections,\n                defaultValue: \"FROM_SOURCE\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"costdistance_sourcedirection\"\n        }\n      }\n    },\n    CostPath: {\n      name: functionStrings.rasterFunctions.rfx.costPathName,\n      snippet: functionStrings.rasterFunctions.rfx.costPathSnip,\n      description: functionStrings.rasterFunctions.rfx.costPathDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"costPath.png\",\n      helpID: \"cost-path-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"CostPath_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_destination_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_destination_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.destinationDataName,\n          hidden: false,\n          helpTextID: \"costpath_indestinationdata\"\n        },\n        destination_field: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.destinationFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_destination_data\"\n          },\n          helpTextID: \"costpath_destinationfield\"\n        },\n        in_cost_distance_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costDistanceRaster,\n          hidden: false,\n          helpTextID: \"costpath_incostdistanceraster\"\n        },\n        in_cost_backlink_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costBacklinkRaster,\n          hidden: false,\n          helpTextID: \"costpath_incostbacklinkraster\"\n        },\n        path_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pathTypeName,\n          hidden: false,\n          defaultValue: \"EACH_CELL\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaLeastCostPathTypes\n          },\n          helpTextID: \"costpath_pathtype\"\n        },\n        force_flow_direction_convention: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.forceFlowDirectionConvention,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"costpath_forceflowdirectionconvention\"\n        }\n      }\n    },\n    EucAllocation: {\n      name: functionStrings.rasterFunctions.rfx.eucAllocationName,\n      snippet: functionStrings.rasterFunctions.rfx.eucAllocationSnip,\n      description: functionStrings.rasterFunctions.rfx.eucAllocationDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"eucAllocation.png\",\n      helpID: \"euclidean-allocation-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"EucAllocation_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_allocation_raster\"\n        },\n        in_source_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"euclideanallocation_insourcedata\"\n        },\n        source_field: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_source_data\"\n          },\n          helpTextID: \"euclideanallocation_sourcefield\"\n        },\n        in_barrier_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.barrierDataName,\n          hidden: false,\n          helpTextID: \"euclideanallocation_inbarrierdata\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"euclideanallocation_maximumdistance\"\n        },\n        in_value_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.valueRasterName,\n          hidden: false,\n          helpTextID: \"euclideanallocation_invalueraster\"\n        },\n        cell_size: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellSizeName,\n          hidden: false,\n          helpTextID: \"euclideanallocation_cellsize\"\n        },\n        distance_method: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceMethodName,\n          hidden: false,\n          defaultValue: \"PLANAR\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaDistanceMethods\n          },\n          helpTextID: \"euclideanallocation_distancemethod\"\n        }\n      }\n    },\n    EucDistance: {\n      name: functionStrings.rasterFunctions.rfx.eucDistanceName,\n      snippet: functionStrings.rasterFunctions.rfx.eucDistanceSnip,\n      description: functionStrings.rasterFunctions.rfx.eucDistanceDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"eucDistance.png\",\n      helpID: \"euclidean-distance-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"EucDistance_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_distance_raster\"\n        },\n        in_source_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"euclideandistance_insourcedata\"\n        },\n        in_barrier_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.barrierDataName,\n          hidden: false,\n          helpTextID: \"euclideandistance_inbarrierdata\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"euclideandistance_maximumdistance\"\n        },\n        cell_size: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellSizeName,\n          hidden: false,\n          helpTextID: \"euclideandistance_cellsize\"\n        },\n        distance_method: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceMethodName,\n          hidden: false,\n          defaultValue: \"PLANAR\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaDistanceMethods\n          },\n          helpTextID: \"euclideandistance_distancemethod\"\n        }\n      }\n    },\n    EucDirection: {\n      name: functionStrings.rasterFunctions.rfx.eucDirectionName,\n      snippet: functionStrings.rasterFunctions.rfx.eucDirectionSnip,\n      description: functionStrings.rasterFunctions.rfx.eucDirectionDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"eucDirection.png\",\n      helpID: \"euclidean-direction-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"EucDirection_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_direction_raster\"\n        },\n        in_source_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"euclideandirection_insourcedata\"\n        },\n        in_barrier_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.barrierDataName,\n          hidden: false,\n          helpTextID: \"euclideandirection_inbarrierdata\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"euclideandirection_maximumdistance\"\n        },\n        cell_size: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellSizeName,\n          hidden: false,\n          helpTextID: \"euclideandirection_cellsize\"\n        },\n        distance_method: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceMethodName,\n          hidden: false,\n          defaultValue: \"PLANAR\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaDistanceMethods\n          },\n          helpTextID: \"euclideandirection_distancemethod\"\n        }\n      }\n    },\n    KernelDensity: {\n      name: functionStrings.rasterFunctions.rfx.kernelDensityName,\n      snippet: functionStrings.rasterFunctions.rfx.kernelDensitySnip,\n      description: functionStrings.rasterFunctions.rfx.kernelDensityDesc,\n      category: \"analysis\",\n      icon: \"kernelDensity.png\",\n      helpID: \"kernel-density-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"KernelDensity_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_features\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        RasterInfo: {\n          required: true,\n          dataType: dataTypes.rasterInfo,\n          hidden: true,\n          defaultValue: {\n            pixelType: 9,\n            bandCount: 1\n          }\n        },\n        in_features: {\n          required: true,\n          dataType: dataTypes.featureClass,\n          displayName: functionStrings.rasterFunctions.rfxArgs.featureClassName,\n          hidden: false,\n          helpTextID: \"kerneldensity_infeatures\"\n        },\n        population_field: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.populationFieldName,\n          defaultValue: \"NONE\",\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_features\",\n            otherOptions: {\n              NONE: functionStrings.rasterFunctions.enumLabels.none\n            }\n          },\n          helpTextID: \"kerneldensity_populationfield\"\n        },\n        cell_size: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellSizeName,\n          hidden: false,\n          helpTextID: \"kerneldensity_cellsize\"\n        },\n        search_radius: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.radiusName,\n          hidden: false,\n          helpTextID: \"kerneldensity_searchradius\"\n        },\n        area_unit_scale_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.areaUnitsName,\n          hidden: false,\n          defaultValue: \"SQUARE_MAP_UNITS\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaKernelDensityAreaUnitTypes\n          },\n          helpTextID: \"kerneldensity_areaunitscalefactor\"\n        },\n        out_cell_values: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outputValueTypeName,\n          hidden: false,\n          defaultValue: \"DENSITIES\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaKernelDensityOutValTypes\n          },\n          helpTextID: \"kerneldensity_outcellvalues\"\n        },\n        method: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.methodName,\n          hidden: false,\n          defaultValue: \"PLANAR\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaKernelDensityMethods\n          },\n          helpTextID: \"kerneldensity_method\"\n        },\n        in_barriers: {\n          required: false,\n          dataType: dataTypes.featureClass,\n          dataTypeAttributes: {\n            type: [\"polygon\", \"line\"]\n          },\n          displayName: functionStrings.rasterFunctions.rfxArgs.barriersName,\n          hidden: false,\n          helpTextID: \"kerneldensity_inbarriers\"\n        }\n      }\n    },\n    ShortestPath: {\n      name: functionStrings.rasterFunctions.rfx.shortestPathName,\n      snippet: functionStrings.rasterFunctions.rfx.shortestPathSnip,\n      description: functionStrings.rasterFunctions.rfx.shortestPathDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"shortestPath.png\",\n      helpID: \"\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"ShortestPath\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_path_raster\"\n        },\n        in_source_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"leastcostpath_insourcedata\"\n        },\n        in_destination_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.destinationDataName,\n          hidden: false,\n          helpTextID: \"leastcostpath_indestinationdata\"\n        },\n        destination_field: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.destinationFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_destination_data\"\n          },\n          helpTextID: \"leastcostpath_destinationfield\"\n        },\n        in_cost_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costRasterName,\n          hidden: false,\n          helpTextID: \"leastcostpath_incostraster\"\n        },\n        path_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pathTypeName,\n          hidden: false,\n          defaultValue: \"EACH_CELL\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaLeastCostPathTypes\n          },\n          helpTextID: \"leastcostpath_pathtype\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"leastcostpath_maximumdistance\"\n        },\n        source_cost_multiplier: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costMultiplierName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"leastcostpath_sourcecostmultiplier\"\n        },\n        source_start_cost: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.startCostName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"leastcostpath_sourcestartcost\"\n        },\n        source_resistance_rate: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.accumCostResistanceRateName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"leastcostpath_sourceresistancerate\"\n        },\n        source_capacity: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.capacityName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"leastcostpath_sourcecapacity\"\n        },\n        source_direction: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.travelDirectionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.list,\n                enum: enums.gpsaTravelDirections,\n                defaultValue: \"FROM_SOURCE\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"leastcostpath_sourcedirection\"\n        }\n      }\n    },\n    PathDistance: {\n      name: functionStrings.rasterFunctions.rfx.pathDistanceName,\n      snippet: functionStrings.rasterFunctions.rfx.pathDistanceSnip,\n      description: functionStrings.rasterFunctions.rfx.pathDistanceDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"pathDistance.png\",\n      helpID: \"path-distance-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"PathDistance_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_distance_raster\"\n        },\n        in_source_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"pathdistance_insourcedata\"\n        },\n        in_cost_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costRasterName,\n          hidden: false,\n          helpTextID: \"pathdistance_incostraster\"\n        },\n        in_surface_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.surfaceRasterName,\n          hidden: false,\n          helpTextID: \"pathdistance_insurfaceraster\"\n        },\n        in_horizontal_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"horizontal_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"pathdistance_inhorizontalraster\"\n        },\n        horizontal_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalFactor,\n          hidden: false,\n          helpTextID: \"pathdistance_horizontalfactor\"\n        },\n        in_vertical_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"vertical_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"pathdistance_inverticalraster\"\n        },\n        vertical_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalFactor,\n          hidden: false,\n          helpTextID: \"pathdistance_verticalfactor\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"pathdistance_maximumdistance\"\n        },\n        source_cost_multiplier: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costMultiplierName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistance_sourcecostmultiplier\"\n        },\n        source_start_cost: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.startCostName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistance_sourcestartcost\"\n        },\n        source_resistance_rate: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.accumCostResistanceRateName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistance_sourceresistancerate\"\n        },\n        source_capacity: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.capacityName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistance_sourcecapacity\"\n        },\n        source_direction: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.travelDirectionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.list,\n                enum: enums.gpsaTravelDirections,\n                defaultValue: \"FROM_SOURCE\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistance_sourcedirection\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"horizontal_factor\"],\n            triggerArguments: [\"in_horizontal_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          },\n          {\n            argumentNames: [\"vertical_factor\"],\n            triggerArguments: [\"in_vertical_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          }\n        ]\n      }\n    },\n    PathBackLink: {\n      name: functionStrings.rasterFunctions.rfx.pathBackLinkName,\n      snippet: functionStrings.rasterFunctions.rfx.pathBackLinkSnip,\n      description: functionStrings.rasterFunctions.rfx.pathBackLinkDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"pathBackLink.png\",\n      helpID: \"path-distance-backlink-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"PathBackLink_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_backlink_raster\"\n        },\n        in_source_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"pathdistancebacklink_insourcedata\"\n        },\n        in_cost_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costRasterName,\n          hidden: false,\n          helpTextID: \"pathdistancebacklink_incostraster\"\n        },\n        in_surface_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.surfaceRasterName,\n          hidden: false,\n          helpTextID: \"pathdistancebacklink_insurfaceraster\"\n        },\n        in_horizontal_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"horizontal_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"pathdistancebacklink_inhorizontalraster\"\n        },\n        horizontal_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalFactor,\n          hidden: false,\n          helpTextID: \"pathdistancebacklink_horizontalfactor\"\n        },\n        in_vertical_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"vertical_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"pathdistancebacklink_inverticalraster\"\n        },\n        vertical_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalFactor,\n          hidden: false,\n          helpTextID: \"pathdistancebacklink_verticalfactor\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"pathdistancebacklink_maximumdistance\"\n        },\n        source_cost_multiplier: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costMultiplierName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistancebacklink_sourcecostmultiplier\"\n        },\n        source_start_cost: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.startCostName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistancebacklink_sourcestartcost\"\n        },\n        source_resistance_rate: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.accumCostResistanceRateName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistancebacklink_sourceresistancerate\"\n        },\n        source_capacity: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.capacityName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistancebacklink_sourcecapacity\"\n        },\n        source_direction: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.travelDirectionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.list,\n                enum: enums.gpsaTravelDirections,\n                defaultValue: \"FROM_SOURCE\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistancebacklink_sourcedirection\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"horizontal_factor\"],\n            triggerArguments: [\"in_horizontal_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          },\n          {\n            argumentNames: [\"vertical_factor\"],\n            triggerArguments: [\"in_vertical_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          }\n        ]\n      }\n    },\n    PathAllocation: {\n      name: functionStrings.rasterFunctions.rfx.pathAllocationName,\n      snippet: functionStrings.rasterFunctions.rfx.pathAllocationSnip,\n      description: functionStrings.rasterFunctions.rfx.pathAllocationDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"pathAllocation.png\",\n      helpID: \"path-distance-allocation-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"PathAllocation_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_distance_raster\"\n        },\n        in_source_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"pathdistanceallocation_insourcedata\"\n        },\n        in_cost_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costRasterName,\n          hidden: false,\n          helpTextID: \"pathdistanceallocation_incostraster\"\n        },\n        in_surface_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.surfaceRasterName,\n          hidden: false,\n          helpTextID: \"pathdistanceallocation_insurfaceraster\"\n        },\n        in_horizontal_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"horizontal_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"pathdistanceallocation_inhorizontalraster\"\n        },\n        horizontal_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalFactor,\n          hidden: false,\n          helpTextID: \"pathdistanceallocation_horizontalfactor\"\n        },\n        in_vertical_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"vertical_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"pathdistanceallocation_inverticalraster\"\n        },\n        vertical_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalFactor,\n          hidden: false,\n          helpTextID: \"pathdistanceallocation_verticalfactor\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          hidden: false,\n          helpTextID: \"pathdistanceallocation_maximumdistance\"\n        },\n        in_value_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.valueRasterName,\n          hidden: false,\n          helpTextID: \"pathdistanceallocation_invalueraster\"\n        },\n        source_field: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_source_data\"\n          },\n          helpTextID: \"pathdistanceallocation_sourcefield\"\n        },\n        source_cost_multiplier: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costMultiplierName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistanceallocation_sourcecostmultiplier\"\n        },\n        source_start_cost: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.startCostName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistanceallocation_sourcestartcost\"\n        },\n        source_resistance_rate: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.accumCostResistanceRateName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistanceallocation_sourceresistancerate\"\n        },\n        source_capacity: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.capacityName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistanceallocation_sourcecapacity\"\n        },\n        source_direction: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.travelDirectionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.list,\n                enum: enums.gpsaTravelDirections,\n                defaultValue: \"FROM_SOURCE\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"pathdistanceallocation_sourcedirection\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"horizontal_factor\"],\n            triggerArguments: [\"in_horizontal_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          },\n          {\n            argumentNames: [\"vertical_factor\"],\n            triggerArguments: [\"in_vertical_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          }\n        ]\n      }\n    },\n    Viewshed2: {\n      name: functionStrings.rasterFunctions.rfx.viewshed2Name,\n      snippet: functionStrings.rasterFunctions.rfx.viewshed2Snip,\n      description: functionStrings.rasterFunctions.rfx.viewshed2Desc,\n      category: \"surface\",\n      icon: \"viewshed2.png\",\n      helpID: \"viewshed-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"Viewshed2_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"viewshed_inraster\"\n        },\n        in_observer_features: {\n          required: true,\n          dataType: dataTypes.featureClass,\n          displayName: functionStrings.rasterFunctions.rfxArgs.observerFeaturesName,\n          hidden: false,\n          helpTextID: \"viewshed_inobserverfeatures\"\n        },\n        analysis_method: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.analysisMethodName,\n          hidden: false,\n          defaultValue: \"ALL_SIGHTLINES\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaViewshedAnalysisMethods\n          },\n          categoryRefId: \"rfxArgCat_ViewshedParameters\",\n          helpTextID: \"viewshed_analysismethod\"\n        },\n        analysis_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.analysisTypeName,\n          hidden: false,\n          defaultValue: \"FREQUENCY\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaViewshedAnalysisTypes\n          },\n          categoryRefId: \"rfxArgCat_ViewshedParameters\",\n          helpTextID: \"viewshed_analysistype\"\n        },\n        vertical_error: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalErrorName,\n          hidden: false,\n          defaultValue: \"0 Meters\",\n          domain: {\n            type: domainTypes.linearUnit,\n            enum: enums.gpsaLinearUnitTypes\n          },\n          categoryRefId: \"rfxArgCat_ViewshedParameters\",\n          helpTextID: \"viewshed_verticalerror\"\n        },\n        refractivity_coefficient: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.refractivityCoefficientName,\n          hidden: false,\n          defaultValue: 0.13,\n          categoryRefId: \"rfxArgCat_ViewshedParameters\",\n          helpTextID: \"viewshed_refractivitycoefficient\"\n        },\n        surface_offset: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.surfaceOffsetName,\n          hidden: false,\n          defaultValue: \"0 Meters\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.linearUnit,\n                enum: enums.gpsaLinearUnitTypes\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_observer_features\"\n              }\n            ]\n          },\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_surfaceoffset\"\n        },\n        observer_elevation: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.observerElevationName,\n          hidden: false,\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.linearUnit,\n                enum: enums.gpsaLinearUnitTypes\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_observer_features\"\n              }\n            ]\n          },\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_observerelevation\"\n        },\n        observer_offset: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.observerOffsetName,\n          hidden: false,\n          defaultValue: \"1 Meters\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.linearUnit,\n                enum: enums.gpsaLinearUnitTypes\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_observer_features\"\n              }\n            ]\n          },\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_observeroffset\"\n        },\n        inner_radius: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.innerRadiusName,\n          hidden: false,\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.linearUnit,\n                enum: enums.gpsaLinearUnitTypes\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_observer_features\"\n              }\n            ]\n          },\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_innerradius\"\n        },\n        inner_radius_is_3d: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.innerRadiusIs3DDistanceName,\n          hidden: false,\n          defaultValue: false,\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_innerradiusis3d\"\n        },\n        outer_radius: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outerRadiusName,\n          hidden: false,\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.linearUnit,\n                enum: enums.gpsaLinearUnitTypes\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_observer_features\"\n              }\n            ]\n          },\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_outerradius\"\n        },\n        outer_radius_is_3d: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outerRadiusIs3DDistanceName,\n          hidden: false,\n          defaultValue: false,\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_outerradiusis3d\"\n        },\n        horizontal_start_angle: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalStartAngleName,\n          hidden: false,\n          defaultValue: \"0\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_observer_features\"\n              }\n            ]\n          },\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_horizontalstartangle\"\n        },\n        horizontal_end_angle: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalEndAngleName,\n          hidden: false,\n          defaultValue: \"360\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_observer_features\"\n              }\n            ]\n          },\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_horizontalendangle\"\n        },\n        vertical_upper_angle: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalUpperAngleName,\n          hidden: false,\n          defaultValue: \"90\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_observer_features\"\n              }\n            ]\n          },\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_verticalupperangle\"\n        },\n        vertical_lower_angle: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalLowerAngleName,\n          hidden: false,\n          defaultValue: \"-90\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_observer_features\"\n              }\n            ]\n          },\n          categoryRefId: \"rfxArgCat_ObserverParameters\",\n          helpTextID: \"viewshed_verticallowerangle\"\n        }\n      }\n    },\n    ZonalStatistics: {\n      name: functionStrings.rasterFunctions.rfx.zonalStatisticsName,\n      snippet: functionStrings.rasterFunctions.rfx.zonalStatisticsSnip,\n      description: functionStrings.rasterFunctions.rfx.zonalStatisticsDesc,\n      category: \"statistical\",\n      icon: \"zonalStatistics.png\",\n      helpID: \"zonal-statistics-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"ZonalStatistics_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_value_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_zone_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneDataName,\n          hidden: false,\n          helpTextID: \"zonalstatistics_inzonedata\"\n        },\n        zone_field: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_zone_data\"\n          },\n          helpTextID: \"zonalstatistics_zonefield\"\n        },\n        in_value_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.valueRasterName,\n          hidden: false,\n          helpTextID: \"zonalstatistics_invalueraster\"\n        },\n        statistics_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.statisticsTypeName,\n          hidden: false,\n          defaultValue: \"MEAN\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaZonalStatisticsTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [\"PERCENTILE\"],\n                active: [\"percentile_value\"],\n                inactive: [],\n                autoRevert: true\n              },\n              {\n                values: [\"PERCENTILE\", \"MEDIAN\"],\n                active: [\"percentile_interpolation_type\"],\n                inactive: [],\n                autoRevert: true\n              },\n              {\n                values: [\"MAXIMUM\", \"MINIMUM\", \"RANGE\", \"PERCENTILE\", \"MEDIAN\", \"SUM\"],\n                active: [],\n                inactive: [\"circular_calculation\", \"circular_wrap_value\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"zonalstatistics_statisticstype\"\n        },\n        percentile_value: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.percentileValue,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_Percentile\",\n          defaultValue: 90,\n          helpTextID: \"zonalstatistics_percentilevalue\"\n        },\n        percentile_interpolation_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.percentileInterpolationType,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_Percentile\",\n          defaultValue: \"AUTO_DETECT\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaZonalPercentileInterpolationTypes\n          },\n          helpTextID: \"zonalstatistics_percentileinterpolationtype\"\n        },\n        circular_calculation: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.circularCalculation,\n          hidden: false,\n          defaultValue: \"ARITHMETIC\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaCircularCalculation\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [\"ARITHMETIC\"],\n                active: [],\n                inactive: [\"circular_wrap_value\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"zonalstatistics_circularcalculation\"\n        },\n        circular_wrap_value: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.circularWrapValue,\n          hidden: false,\n          defaultValue: 360,\n          helpTextID: \"zonalstatistics_circularwrapvalue\"\n        },\n        ignore_nodata: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.ignoreNoDataName,\n          hidden: false,\n          defaultValue: \"DATA\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaIgnoreNoData\n          },\n          helpTextID: \"zonalstatistics_ignorenodata\"\n        },\n        process_as_multidimensional: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.processMultidimensional,\n          hidden: false,\n          defaultValue: \"CURRENT_SLICE\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaProcessAsMultidimensionalOptions\n          },\n          helpTextID: \"zonalstatistics_processasmultidimensional\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"statistics_type\"],\n            triggerArguments: [\"in_value_raster\"],\n            triggerAttributes: \"pixelType:in_value_raster,float,MEAN|MAXIMUM|MINIMUM|RANGE|STD|SUM\",\n            widget: {\n              path: \"rfx-cte-filtered-argument-editor\"\n            }\n          },\n          {\n            argumentNames: [\"percentile_value\"],\n            triggerAttributes: \"minValue:0;maxValue:100\",\n            widget: {\n              path: \"rfx-cte-ranged-value-editor\"\n            }\n          }\n        ]\n      }\n    },\n    HeatIndex: {\n      name: functionStrings.rasterFunctions.rfx.heatIndexName,\n      snippet: functionStrings.rasterFunctions.rfx.heatIndexSnip,\n      description: functionStrings.rasterFunctions.rfx.heatIndexDesc,\n      category: \"analysis\",\n      icon: \"heatIndex.png\",\n      helpID: \"heat-index.htm\",\n      rasterFunctionArguments: {\n        PythonModule: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"[functions]System\\\\HeatIndex.py\"\n        },\n        ClassName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"HeatIndex\"\n        },\n        temperature: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.temperatureRasterName,\n          hidden: false,\n          helpTextID: \"heatindex_temperature\"\n        },\n        units: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inTemperatureUnitsName,\n          hidden: false,\n          defaultValue: \"Fahrenheit\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.pyStdTemperatureUnitTypes\n          },\n          helpTextID: \"heatindex_units\"\n        },\n        rh: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.relativeHumidityRasterName,\n          hidden: false,\n          helpTextID: \"heatindex_rh\"\n        },\n        outunits: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outHeatIndexTemperatureUnitsName,\n          hidden: false,\n          defaultValue: \"Fahrenheit\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.pyStdTemperatureUnitTypes\n          },\n          helpTextID: \"heatindex_outunits\"\n        }\n      }\n    },\n    Windchill: {\n      name: functionStrings.rasterFunctions.rfx.windchillName,\n      snippet: functionStrings.rasterFunctions.rfx.windchillSnip,\n      description: functionStrings.rasterFunctions.rfx.windchillDesc,\n      category: \"analysis\",\n      icon: \"windchill.png\",\n      helpID: \"wind-chill-function.htm\",\n      rasterFunctionArguments: {\n        PythonModule: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"[functions]System\\\\Windchill.py\"\n        },\n        ClassName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"Windchill\"\n        },\n        temperature: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.temperatureRasterName,\n          hidden: false,\n          helpTextID: \"windchill_temperature\"\n        },\n        tunits: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inTemperatureUnitsName,\n          hidden: false,\n          defaultValue: \"Fahrenheit\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.pyStdTemperatureUnitTypes\n          },\n          helpTextID: \"windchill_tunits\"\n        },\n        ws: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.windSpeedRasterName,\n          hidden: false,\n          helpTextID: \"windchill_ws\"\n        },\n        wunits: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inWindSpeedUnitsName,\n          hidden: false,\n          defaultValue: \"mph\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.pyStdWindspeedUnitTypes\n          },\n          helpTextID: \"windchill_wunits\"\n        },\n        ounits: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outWindChillTemperatureUnitsName,\n          hidden: false,\n          defaultValue: \"Fahrenheit\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.pyStdTemperatureUnitTypes\n          },\n          helpTextID: \"windchill_ounits\"\n        }\n      }\n    },\n    KeyMetadata: {\n      name: functionStrings.rasterFunctions.rfx.keyMetadataName,\n      snippet: functionStrings.rasterFunctions.rfx.keyMetadataSnip,\n      description: functionStrings.rasterFunctions.rfx.keyMetadataDesc,\n      category: \"dataManagement\",\n      icon: \"keyMetadata.png\",\n      helpID: \"key-metadata-function.htm\",\n      rasterFunctionArguments: {\n        PythonModule: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"[functions]System\\\\KeyMetadata.py\"\n        },\n        ClassName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"KeyMetadata\"\n        },\n        raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"keymetadata_raster\"\n        },\n        property: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.propertyName,\n          hidden: false,\n          helpTextID: \"keymetadata_property\"\n        },\n        value: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.valueName,\n          hidden: false,\n          helpTextID: \"keymetadata_value\"\n        },\n        bands: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.bandNamesName,\n          hidden: false,\n          helpTextID: \"keymetadata_bands\"\n        },\n        json: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.jsonName,\n          hidden: false,\n          helpTextID: \"keymetadata_json\"\n        }\n      }\n    },\n    RasterizeAttributes: {\n      name: functionStrings.rasterFunctions.rfx.rasterizeAttributesName,\n      snippet: functionStrings.rasterFunctions.rfx.rasterizeAttributesSnip,\n      description: functionStrings.rasterFunctions.rfx.rasterizeAttributesDesc,\n      category: \"conversion\",\n      icon: \"rasterizeAttributes.png\",\n      helpID: \"rasterize-attributes-function.htm\",\n      rasterFunctionArguments: {\n        PythonModule: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"[functions]System\\\\RasterizeAttributes.py\"\n        },\n        ClassName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"RasterizeAttributes\"\n        },\n        vraster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.valueRasterName,\n          hidden: false,\n          helpTextID: \"rasterizeattributes_vraster\"\n        },\n        zraster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneDataName,\n          hidden: false,\n          helpTextID: \"rasterizeattributes_zraster\"\n        },\n        ztable: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneTableName,\n          hidden: false,\n          helpTextID: \"rasterizeattributes_ztable\"\n        },\n        zid: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneFieldName,\n          hidden: false,\n          helpTextID: \"rasterizeattributes_zid\"\n        },\n        attribs: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.attributeFieldNames,\n          hidden: false,\n          helpTextID: \"rasterizeattributes_attribs\"\n        },\n        background: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.backgroundName,\n          hidden: false,\n          helpTextID: \"rasterizeattributes_background\"\n        },\n        where: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.whereClauseName,\n          hidden: false,\n          helpTextID: \"rasterizeattributes_where\"\n        }\n      }\n    },\n    ZonalRemap: {\n      name: functionStrings.rasterFunctions.rfx.zonalRemapName,\n      snippet: functionStrings.rasterFunctions.rfx.zonalRemapSnip,\n      description: functionStrings.rasterFunctions.rfx.zonalRemapDesc,\n      category: \"reclass\",\n      icon: \"zonalRemap.png\",\n      helpID: \"zonal-remap-function.htm\",\n      rasterFunctionArguments: {\n        PythonModule: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"[functions]System\\\\ZonalRemap.py\"\n        },\n        ClassName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"ZonalRemap\"\n        },\n        vraster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.valueRasterName,\n          hidden: false,\n          helpTextID: \"zonalremap_vraster\"\n        },\n        zraster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneDataName,\n          hidden: false,\n          helpTextID: \"zonalremap_zraster\"\n        },\n        ztable: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneTableName,\n          hidden: false,\n          helpTextID: \"zonalremap_ztable\"\n        },\n        zid: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneFieldName,\n          hidden: false,\n          defaultValue: \"ZoneID\",\n          helpTextID: \"zonalremap_zid\"\n        },\n        zmin: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minimumValueFieldName,\n          hidden: false,\n          defaultValue: \"ZoneMin\",\n          helpTextID: \"zonalremap_zmin\"\n        },\n        zmax: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumValueFieldName,\n          hidden: false,\n          defaultValue: \"ZoneMax\",\n          helpTextID: \"zonalremap_zmax\"\n        },\n        zval: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outValueFieldName,\n          hidden: false,\n          defaultValue: \"ZoneValue\",\n          helpTextID: \"zonalremap_zval\"\n        },\n        background: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.backgroundName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"zonalremap_background\"\n        },\n        defzval: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.defaultValueName,\n          hidden: false,\n          defaultValue: 255,\n          helpTextID: \"zonalremap_defzval\"\n        },\n        where: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.whereClauseName,\n          hidden: false,\n          helpTextID: \"zonalremap_where\"\n        }\n      }\n    },\n    AspectSlope: {\n      name: functionStrings.rasterFunctions.rfx.aspectSlopeName,\n      snippet: functionStrings.rasterFunctions.rfx.aspectSlopeSnip,\n      description: functionStrings.rasterFunctions.rfx.aspectSlopeDesc,\n      category: \"surface\",\n      icon: \"aspectSlope.png\",\n      helpID: \"aspect-slope-function.htm\",\n      rasterFunctionArguments: {\n        PythonModule: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"[functions]System\\\\AspectSlope.py\"\n        },\n        ClassName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"AspectSlope\"\n        },\n        raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"aspectslope_raster\"\n        },\n        zf: {\n          required: true,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zFactorName,\n          hidden: false,\n          dataType: dataTypes.double,\n          defaultValue: 1,\n          helpTextID: \"aspectslope_zf\"\n        }\n      }\n    },\n    LocalFunction: {\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          hidden: false,\n          allowScalar: true,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          nElementsArgument: \"Operation\",\n          elementInfos: [\n            {\n              values: [78],\n              inputArgs: [\n                {\n                  required: true,\n                  displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n                  hidden: false,\n                  allowScalar: true,\n                  helpTextID: \"local_raster\"\n                },\n                {\n                  required: true,\n                  displayName: functionStrings.rasterFunctions.rfxArgs.trueRasterName,\n                  hidden: false,\n                  allowScalar: true,\n                  helpTextID: \"local_inraster2\"\n                },\n                {\n                  required: true,\n                  displayName: functionStrings.rasterFunctions.rfxArgs.falseRasterName,\n                  hidden: false,\n                  allowScalar: true,\n                  helpTextID: \"local_inraster3\"\n                }\n              ]\n            },\n            {\n              values: [1, 2, 3, 5, 11, 12, 14, 15, 16, 17, 19, 20, 23, 24, 28, 29, 33, 34, 44, 46, 61],\n              inputArgs: [\n                {\n                  required: true,\n                  displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n                  hidden: false,\n                  allowScalar: true,\n                  helpTextID: \"local_raster\"\n                },\n                {\n                  required: true,\n                  displayName: functionStrings.rasterFunctions.rfxArgs.raster2Name,\n                  hidden: false,\n                  allowScalar: true,\n                  helpTextID: \"local_inraster2\"\n                }\n              ]\n            },\n            {\n              values: [50],\n              inputArgs: [\n                {\n                  required: true,\n                  displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n                  hidden: false,\n                  allowScalar: true,\n                  helpTextID: \"local_raster\"\n                },\n                {\n                  required: true,\n                  displayName: functionStrings.rasterFunctions.rfxArgs.falseRasterName,\n                  hidden: false,\n                  allowScalar: true,\n                  helpTextID: \"local_inraster2\"\n                }\n              ]\n            },\n            {\n              values: [\n                4, 6, 7, 8, 9, 10, 13, 18, 21, 22, 25, 26, 27, 30, 31, 32, 35, 36, 37, 45, 48, 49, 51, 52, 53, 56, 57,\n                59, 60\n              ],\n              inputArgs: [\n                {\n                  required: true,\n                  displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n                  hidden: false,\n                  //dont allow to add a scalar value if the function is having only one input\n                  allowScalar: false,\n                  helpTextID: \"local_raster\"\n                }\n              ]\n            }\n          ]\n        },\n        Operation: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: true,\n          displayName: functionStrings.rasterFunctions.rfxArgs.operationName,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.localFunctionOperations\n          },\n          helpTextID: \"local_operation\"\n        },\n        CellsizeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellsizeTypeName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCellsizeTypes\n          },\n          helpTextID: \"local_cellsizetype\"\n        },\n        ExtentType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriExtentTypes\n          },\n          helpTextID: \"local_extenttype\"\n        }\n      }\n    },\n    CellStatisticsFunction: {\n      name: functionStrings.rasterFunctions.rfx.cellStatisticsName,\n      snippet: functionStrings.rasterFunctions.rfx.cellStatisticsSnip,\n      description: functionStrings.rasterFunctions.rfx.cellStatisticsDesc,\n      category: \"statistical\",\n      icon: \"cellStatistics.png\",\n      helpID: \"cell-statistics-function.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          hidden: false,\n          allowScalar: true,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          helpTextID: \"cellstatistics_rasters\"\n        },\n        Operation: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          defaultValue: 40,\n          displayName: functionStrings.rasterFunctions.rfxArgs.operationName,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.cellStatisticsTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [93, 94],\n                active: [\"PercentileValue\"],\n                inactive: [],\n                autoRevert: true\n              },\n              {\n                values: [93, 94, 41, 69],\n                active: [\"PercentileInterpolationType\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"cellstatistics_operation\"\n        },\n        ProcessAsMultiband: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.processAsMultiband,\n          hidden: false,\n          helpTextID: \"cellstatistics_processasmultiband\"\n        },\n        PercentileValue: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.percentileValue,\n          hidden: false,\n          defaultValue: 90,\n          helpTextID: \"cellstatistics_percentilevalue\"\n        },\n        PercentileInterpolationType: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.percentileInterpolationType,\n          hidden: false,\n          defaultValue: \"AUTO_DETECT\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaZonalPercentileInterpolationTypes\n          },\n          helpTextID: \"cellstatistics_percentileinterpolationtype\"\n        },\n        CellsizeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellsizeTypeName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCellsizeTypes\n          },\n          helpTextID: \"cellstatistics_cellsizetype\"\n        },\n        ExtentType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriExtentTypes\n          },\n          helpTextID: \"cellstatistics_extenttype\"\n        }\n      }\n    },\n    SpectralConversionFunction: {\n      name: functionStrings.rasterFunctions.rfx.spectralConversionName,\n      snippet: functionStrings.rasterFunctions.rfx.spectralConversionSnip,\n      description: functionStrings.rasterFunctions.rfx.spectralConversionDesc,\n      category: \"conversion\",\n      icon: \"spectralConversion.png\",\n      helpID: \"spectral-conversion-function.htm\",\n      hidden: false,\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"spectralconversion_raster\"\n        },\n        ConversionMatrix: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.conversionMatrixName,\n          hidden: false,\n          helpTextID: \"spectralconversion_conversionmatrix\"\n        },\n        IsPseudoColorOutput: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.IsPseudoColorOutputName,\n          hidden: true\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"ConversionMatrix\"],\n            triggerArguments: [\"Raster\"],\n            widget: {\n              path: \"rfx-cte-conversion-grid\"\n            },\n            helpTextIDs: {\n              spectralconversion_size: \"spectralconversion_size\"\n            }\n          }\n        ]\n      }\n    },\n    Watershed: {\n      name: functionStrings.rasterFunctions.rfx.watershedName,\n      snippet: functionStrings.rasterFunctions.rfx.watershedSnip,\n      description: functionStrings.rasterFunctions.rfx.watershedDesc,\n      category: \"hydrology\",\n      icon: \"watershed.png\",\n      helpID: \"watershed-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"Watershed_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_flow_direction_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_flow_direction_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirRasterName,\n          helpTextID: \"watershed_inflowdirectionraster\"\n        },\n        in_pour_point_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pourPointName,\n          helpTextID: \"watershed_inpourpointdata\"\n        },\n        pour_point_field: {\n          required: false,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pourPointFieldName,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_pour_point_data\"\n          },\n          helpTextID: \"watershed_pourpointfield\"\n        }\n      }\n    },\n    GeometricFunction: {\n      name: functionStrings.rasterFunctions.rfx.geometricName,\n      snippet: functionStrings.rasterFunctions.rfx.geometricSnip,\n      description: functionStrings.rasterFunctions.rfx.geometricDesc,\n      category: \"correction\",\n      icon: \"geometric.png\",\n      helpID: \"geometric-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"geometric_raster\"\n        },\n        UseDEM: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.methodName,\n          hidden: false,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.geometricCorrectionMethods\n          },\n          defaultValue: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [true],\n                active: [\"DEM\", \"ZFactor\", \"ZOffset\", \"CorrectGeoid\"],\n                inactive: [\"ConstantZ\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"geometric_usedem\"\n        },\n        ConstantZ: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.constantZName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"geometric_constantz\"\n        },\n        DEM: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.DEMName,\n          hidden: false,\n          helpTextID: \"geometric_dem\"\n        },\n        ZFactor: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zFactorName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"geometric_zfactor\"\n        },\n        ZOffset: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zOffsetName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"geometric_zoffset\"\n        },\n        CorrectGeoid: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.geoIdName,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"geometric_correctgeoid\"\n        },\n        Tolerance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: \"Tolerance (Pixels)\",\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"geometric_tolerance\"\n        }\n      }\n    },\n    RadarCalibrationFunction: {\n      name: functionStrings.rasterFunctions.rfx.radarCalibrationName,\n      snippet: functionStrings.rasterFunctions.rfx.radarCalibrationSnip,\n      description: functionStrings.rasterFunctions.rfx.radarCalibrationDesc,\n      category: \"correction\",\n      icon: \"radarCalibration.png\",\n      helpID: \"radar-calibration-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"radarcalibration_raster\"\n        },\n        CalibrationType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.calibrationTypeName,\n          hidden: false,\n          defaultValue: 3,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriRadarCalibrations\n          },\n          helpTextID: \"radarcalibration_calibrationtype\"\n        }\n      }\n    },\n    S1RadiometricCalibrationFunction: {\n      name: functionStrings.rasterFunctions.rfx.s1RadiometricCalibrationName,\n      snippet: functionStrings.rasterFunctions.rfx.s1RadiometricCalibrationSnip,\n      description: functionStrings.rasterFunctions.rfx.s1RadiometricCalibrationDesc,\n      category: \"correction\",\n      icon: \"s1RadiometricCalibration.png\",\n      helpID: \"sentinel-1-radiometric-calibration.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"sentinel1radiometriccalibration_raster\"\n        },\n        CalibrationType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.calibrationTypeName,\n          hidden: false,\n          defaultValue: 3,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriRadarCalibrations\n          },\n          helpTextID: \"sentinel1radiometriccalibration_calibrationtype\"\n        }\n      }\n    },\n    SpeckleFunction: {\n      name: functionStrings.rasterFunctions.rfx.speckleName,\n      snippet: functionStrings.rasterFunctions.rfx.speckleSnip,\n      description: functionStrings.rasterFunctions.rfx.speckleDesc,\n      category: \"correction\",\n      icon: \"speckle.png\",\n      helpID: \"speckle-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"speckle_raster\"\n        },\n        FilterType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.filterTypeName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriSpeckleFilterTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0],\n                active: [\"NoiseModel\"],\n                inactive: [\"DampFactor\"],\n                autoRevert: true\n              },\n              {\n                values: [1],\n                active: [\"NLooks\", \"DampFactor\"],\n                inactive: [\"NoiseVar\", \"AdditiveNoiseMean\", \"MultiplicativeNoiseMean\"],\n                autoRevert: false\n              },\n              {\n                values: [2],\n                active: [\"DampFactor\"],\n                inactive: [\"NoiseVar\", \"AdditiveNoiseMean\", \"MultiplicativeNoiseMean\", \"NLooks\"],\n                autoRevert: false\n              },\n              {\n                values: [3],\n                active: [\"NLooks\"],\n                inactive: [\"NoiseVar\", \"AdditiveNoiseMean\", \"MultiplicativeNoiseMean\", \"DampFactor\"],\n                autoRevert: false\n              }\n            ]\n          },\n          helpTextID: \"speckle_filtertype\"\n        },\n        FilterSize: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.filterSizeName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriSpeckleFilterKernelTypes\n          },\n          helpTextID: \"speckle_filtersize\"\n        },\n        NoiseModel: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.noiseModelName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriSpeckleNoiseModelTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0],\n                active: [\"MultiplicativeNoiseMean\", \"NLooks\"],\n                inactive: [\"NoiseVar\", \"AdditiveNoiseMean\"],\n                autoRevert: false\n              },\n              {\n                values: [1],\n                active: [\"NoiseVar\"],\n                inactive: [\"AdditiveNoiseMean\", \"MultiplicativeNoiseMean\", \"NLooks\"],\n                autoRevert: false\n              },\n              {\n                values: [2],\n                active: [\"NoiseVar\", \"AdditiveNoiseMean\", \"MultiplicativeNoiseMean\"],\n                inactive: [\"NLooks\"],\n                autoRevert: false\n              }\n            ]\n          },\n          helpTextID: \"speckle_noisemodel\"\n        },\n        NoiseVar: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.noiseVarianceName,\n          hidden: false,\n          defaultValue: 0.25,\n          helpTextID: \"speckle_noisevar\"\n        },\n        AdditiveNoiseMean: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.additiveNoiseMeanName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"speckle_additivenoisemean\"\n        },\n        MultiplicativeNoiseMean: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.multiplicativeNoiseMeanName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"speckle_multiplicativenoisemean\"\n        },\n        NLooks: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.numberofLooksName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"speckle_nlooks\"\n        },\n        DampFactor: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.dampingFactorName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"speckle_dampfactor\"\n        }\n      }\n    },\n    MosaicRastersFunction: {\n      name: functionStrings.rasterFunctions.rfx.mosaicRastersName,\n      snippet: functionStrings.rasterFunctions.rfx.mosaicRastersSnip,\n      description: functionStrings.rasterFunctions.rfx.mosaicRastersDesc,\n      category: \"dataManagement\",\n      icon: \"mosaicRasters.png\",\n      helpID: \"mosaic-rasters.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          hidden: false,\n          helpTextID: \"mosaicrasters_rasters\"\n        },\n        MosaicType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.operationName,\n          hidden: false,\n          defaultValue: 6,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriMosaicOperatorTypes\n          },\n          helpTextID: \"mosaicrasters_mosaictype\"\n        }\n      }\n    },\n    Nibble: {\n      name: functionStrings.rasterFunctions.rfx.nibbleName,\n      snippet: functionStrings.rasterFunctions.rfx.nibbleSnip,\n      description: functionStrings.rasterFunctions.rfx.nibbleDesc,\n      category: \"dataManagement\",\n      icon: \"nibble.png\",\n      helpID: \"nibble-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"Nibble_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"nibble_inraster\"\n        },\n        in_mask_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maskRasterName,\n          hidden: false,\n          helpTextID: \"nibble_inmaskraster\"\n        },\n        nibble_values: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.nibbleValuesName,\n          hidden: false,\n          defaultValue: \"ALL_VALUES\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaNibbleValues\n          },\n          helpTextID: \"nibble_nibblevalues\"\n        },\n        nibble_nodata: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.nibbleNoDataName,\n          hidden: false,\n          defaultValue: \"PRESERVE_NODATA\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaNibbleNoData\n          },\n          helpTextID: \"nibble_nibblenodata\"\n        },\n        in_zone_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneDataName,\n          hidden: false,\n          helpTextID: \"nibble_inzoneraster\"\n        }\n      }\n    },\n    SwathFunction: {\n      name: functionStrings.rasterFunctions.rfx.swathName,\n      snippet: functionStrings.rasterFunctions.rfx.swathSnip,\n      description: functionStrings.rasterFunctions.rfx.swathDesc,\n      category: \"dataManagement\",\n      icon: \"swath.png\",\n      helpID: \"swath.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"swath_raster\"\n        },\n        InterpolationMethod: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.interpolationMethodName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriSwathInterpolationMethods\n          },\n          helpTextID: \"swath_interpolationmethod\"\n        },\n        RasterInfo: {\n          required: true,\n          dataType: dataTypes.rasterInfo,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellSizeName,\n          hidden: false,\n          helpTextID: \"swath_cellsize\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"RasterInfo\"],\n            widget: {\n              path: \"rfx-cte-raster-info-cell-size-editor\"\n            }\n          }\n        ]\n      }\n    },\n    Fill: {\n      name: functionStrings.rasterFunctions.rfx.fillName,\n      snippet: functionStrings.rasterFunctions.rfx.fillSnip,\n      description: functionStrings.rasterFunctions.rfx.fillDesc,\n      category: \"hydrology\",\n      icon: \"fill.png\",\n      helpID: \"fill-raster-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"Fill_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_surface_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_surface_raster\"\n        },\n        in_surface_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"fill_insurfaceraster\"\n        },\n        z_limit: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zLimitName,\n          hidden: false,\n          helpTextID: \"fill_zlimit\"\n        }\n      }\n    },\n    FlowAccumulation: {\n      name: functionStrings.rasterFunctions.rfx.flowAccumulationName,\n      snippet: functionStrings.rasterFunctions.rfx.flowAccumulationSnip,\n      description: functionStrings.rasterFunctions.rfx.flowAccumulationDesc,\n      category: \"hydrology\",\n      icon: \"flowAccumulation.png\",\n      helpID: \"flow-accumulation-raster-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"FlowAccumulation_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_flow_direction_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_accumulation_raster\"\n        },\n        in_flow_direction_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirRasterName,\n          hidden: false,\n          helpTextID: \"flowaccumulation_inflowdirectionraster\"\n        },\n        in_weight_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.weightRasterName,\n          hidden: false,\n          helpTextID: \"flowaccumulation_inweightraster\"\n        },\n        data_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outputDataTypeName,\n          hidden: false,\n          defaultValue: \"FLOAT\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaOutputDataType\n          },\n          helpTextID: \"flowaccumulation_datatype\"\n        },\n        flow_direction_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirectionTypeName,\n          hidden: false,\n          defaultValue: \"D8\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaFlowDirectionType\n          },\n          helpTextID: \"flowaccumulation_flowdirectiontype\"\n        }\n      }\n    },\n    FlowDirection: {\n      name: functionStrings.rasterFunctions.rfx.flowDirectionName,\n      snippet: functionStrings.rasterFunctions.rfx.flowDirectionSnip,\n      description: functionStrings.rasterFunctions.rfx.flowDirectionDesc,\n      category: \"hydrology\",\n      icon: \"flowDirection.png\",\n      helpID: \"flow-direction-raster-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"FlowDirection_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_surface_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_flow_direction_raster\"\n        },\n        in_surface_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"flowdirection_insurfaceraster\"\n        },\n        force_flow: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.forceEdgeName,\n          hidden: false,\n          defaultValue: \"NORMAL\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaForceFlow\n          },\n          helpTextID: \"flowdirection_forceflow\"\n        },\n        flow_direction_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirectionTypeName,\n          hidden: false,\n          defaultValue: \"D8\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaFlowDirectionType\n          },\n          helpTextID: \"flowdirection_flowdirectiontype\"\n        }\n      }\n    },\n    FlowDistance: {\n      name: functionStrings.rasterFunctions.rfx.flowDistanceName,\n      snippet: functionStrings.rasterFunctions.rfx.flowDistanceSnip,\n      description: functionStrings.rasterFunctions.rfx.flowDistanceDesc,\n      category: \"hydrology\",\n      icon: \"flowDistance.png\",\n      helpID: \"flow-distance-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"FlowDistance_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_stream_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_stream_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.streamRasterName,\n          hidden: false,\n          helpTextID: \"flowdistance_instreamraster\"\n        },\n        in_surface_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.surfaceRasterName,\n          hidden: false,\n          helpTextID: \"flowdistance_insurfaceraster\"\n        },\n        in_flow_direction_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirRasterName,\n          helpTextID: \"flowdistance_inflowdirectionraster\"\n        },\n        distance_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceTypeName,\n          hidden: false,\n          defaultValue: \"VERTICAL\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaFlowDistanceType\n          },\n          helpTextID: \"flowdistance_distancetype\"\n        },\n        flow_direction_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirectionTypeName,\n          hidden: false,\n          defaultValue: \"D8\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaFlowDirectionType\n          },\n          helpTextID: \"flowdistance_flowdirectiontype\"\n        },\n        statistics_type: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.statisticsTypeName,\n          hidden: false,\n          defaultValue: \"MINIMUM\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaFlowDistanceStatsType\n          },\n          helpTextID: \"flowdistance_statisticstype\"\n        }\n      }\n    },\n    FlowLength: {\n      name: functionStrings.rasterFunctions.rfx.flowLengthName,\n      snippet: functionStrings.rasterFunctions.rfx.flowLengthSnip,\n      description: functionStrings.rasterFunctions.rfx.flowLengthDesc,\n      category: \"hydrology\",\n      icon: \"flowLength.png\",\n      helpID: \"flow-length-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"FlowLength_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_flow_direction_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_flow_direction_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirRaster,\n          hidden: false,\n          helpTextID: \"flowlength_inflowdirectionraster\"\n        },\n        direction_measurement: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.directionMeasurementName,\n          hidden: false,\n          defaultValue: \"DOWNSTREAM\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaDirectionMeasurementType\n          },\n          helpTextID: \"flowlength_directionmeasurement\"\n        },\n        in_weight_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.weightRasterName,\n          hidden: false,\n          helpTextID: \"flowlength_inweightraster\"\n        },\n        MatchVariable: {\n          required: false,\n          dataType: dataTypes.boolean,\n          hidden: true\n        },\n        UnionDimension: {\n          required: false,\n          dataType: dataTypes.boolean,\n          hidden: true\n        }\n      }\n    },\n    Corridor: {\n      name: functionStrings.rasterFunctions.rfx.corridorName,\n      snippet: functionStrings.rasterFunctions.rfx.corridorSnip,\n      description: functionStrings.rasterFunctions.rfx.corridorDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"corridor.png\",\n      helpID: \"corridor-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"Corridor_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_distance_raster1\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_distance_raster1: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceRaster1,\n          hidden: false,\n          helpTextID: \"corridor_indistanceraster1\"\n        },\n        in_distance_raster2: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceRaster2,\n          hidden: false,\n          helpTextID: \"corridor_indistanceraster2\"\n        }\n      }\n    },\n    StreamLink: {\n      name: functionStrings.rasterFunctions.rfx.streamLinkName,\n      snippet: functionStrings.rasterFunctions.rfx.streamLinkSnip,\n      description: functionStrings.rasterFunctions.rfx.streamLinkDesc,\n      category: \"hydrology\",\n      icon: \"streamLink.png\",\n      helpID: \"stream-link-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"StreamLink_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_stream_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_stream_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.streamRaster,\n          hidden: false,\n          helpTextID: \"streamlink_instreamraster\"\n        },\n        in_flow_direction_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirRaster,\n          hidden: false,\n          helpTextID: \"streamlink_inflowdirectionraster\"\n        }\n      }\n    },\n    StreamOrder: {\n      name: functionStrings.rasterFunctions.rfx.streamOrderName,\n      snippet: functionStrings.rasterFunctions.rfx.streamOrderSnip,\n      description: functionStrings.rasterFunctions.rfx.streamOrderDesc,\n      category: \"hydrology\",\n      icon: \"streamOrder.png\",\n      helpID: \"stream-order-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"StreamOrder_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_stream_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_stream_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.streamRaster,\n          hidden: false,\n          helpTextID: \"streamorder_instreamraster\"\n        },\n        in_flow_direction_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirRaster,\n          hidden: false,\n          helpTextID: \"streamorder_inflowdirectionraster\"\n        },\n        order_method: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.orderMethodName,\n          hidden: false,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaOrderMethodType\n          },\n          defaultValue: \"STRAHLER\",\n          helpTextID: \"streamorder_ordermethod\"\n        },\n        MatchVariable: {\n          required: false,\n          dataType: dataTypes.boolean,\n          hidden: true\n        },\n        UnionDimension: {\n          required: false,\n          dataType: dataTypes.boolean,\n          hidden: true\n        }\n      }\n    },\n    RegionGroup: {\n      name: functionStrings.rasterFunctions.rfx.regionGroupName,\n      snippet: functionStrings.rasterFunctions.rfx.regionGroupSnip,\n      description: functionStrings.rasterFunctions.rfx.regionGroupDesc,\n      category: \"dataManagement\",\n      icon: \"regionGroup.png\",\n      helpID: \"region-group-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"RegionGroup_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneDataName,\n          hidden: false,\n          helpTextID: \"regiongroup_inraster\"\n        },\n        number_neighbors: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.numberNeighborCells,\n          hidden: false,\n          defaultValue: \"FOUR\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaNumberNeighborCells\n          },\n          helpTextID: \"regiongroup_numberneighbors\"\n        },\n        zone_connectivity: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneConnectivity,\n          hidden: false,\n          defaultValue: \"WITHIN\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaZoneConnectivity\n          },\n          helpTextID: \"regiongroup_zoneconnectivity\"\n        },\n        add_link: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.addLinkBehavior,\n          hidden: false,\n          defaultValue: \"ADD_LINK\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaAddLink\n          },\n          helpTextID: \"regiongroup_addlink\"\n        },\n        excluded_value: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.excludedValue,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"regiongroup_excludedvalue\"\n        }\n      }\n    },\n    BufferedRasterFunction: {\n      name: functionStrings.rasterFunctions.rfx.bufferedRasterName,\n      snippet: functionStrings.rasterFunctions.rfx.bufferedRasterSnip,\n      description: functionStrings.rasterFunctions.rfx.bufferedRasterDesc,\n      category: \"dataManagement\",\n      icon: \"bufferedRaster.png\",\n      helpID: \"buffered-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"buffered_raster\"\n        }\n      },\n      // Unless this is mentioned for single argument RFTs,\n      // it is assumed that there is no wrapper arguments object\n      hasArgumentsObject: true\n    },\n    ColorspaceConversionFunction: {\n      name: functionStrings.rasterFunctions.rfx.colorspaceConversionName,\n      snippet: functionStrings.rasterFunctions.rfx.colorspaceConversionSnip,\n      description: functionStrings.rasterFunctions.rfx.colorspaceConversionDesc,\n      category: \"conversion\",\n      icon: \"colorspaceConversion.png\",\n      helpID: \"colorspaceconversion.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"colormodelconversion_raster\"\n        },\n        ConversionType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.conversionType,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.colorspaceConversionTypes\n          },\n          helpTextID: \"colormodelconversion_conversiontype\"\n        }\n      }\n    },\n    ComplexFunction: {\n      name: functionStrings.rasterFunctions.rfx.complexName,\n      snippet: functionStrings.rasterFunctions.rfx.complexSnip,\n      description: functionStrings.rasterFunctions.rfx.complexDesc,\n      category: \"conversion\",\n      icon: \"complex.png\",\n      helpID: \"complex-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"complex_raster\"\n        }\n      }\n    },\n    TasseledCapFunction: {\n      name: functionStrings.rasterFunctions.rfx.tasseledCapName,\n      snippet: functionStrings.rasterFunctions.rfx.tasseledCapSnip,\n      description: functionStrings.rasterFunctions.rfx.tasseledCapDesc,\n      category: \"analysis\",\n      icon: \"tasseledCap.png\",\n      helpID: \"tasseled-cap-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"tasseledcap_raster\"\n        }\n      }\n    },\n    RasterInfoFunction: {\n      name: functionStrings.rasterFunctions.rfx.rasterInfoName,\n      snippet: functionStrings.rasterFunctions.rfx.rasterInfoSnip,\n      description: functionStrings.rasterFunctions.rfx.rasterInfoDesc,\n      category: \"dataManagement\",\n      icon: \"rasterInfo.png\",\n      helpID: \"raster-info-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"rasterinfo_raster\"\n        },\n        RasterInfo: {\n          required: true,\n          dataType: dataTypes.rasterInfo,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterInfoName,\n          hidden: false,\n          helpTextID: \"rasterinfo_rasterinfo\"\n        },\n        Statistics: {\n          required: false,\n          dataType: dataTypes.rasterStatisticsArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.statisticsName,\n          hidden: true\n        },\n        Overwrite: {\n          required: true,\n          dataType: dataTypes.boolean,\n          hidden: true\n        }\n      }\n    },\n    RecastFunction: {\n      name: functionStrings.rasterFunctions.rfx.recastName,\n      snippet: functionStrings.rasterFunctions.rfx.recastSnip,\n      description: functionStrings.rasterFunctions.rfx.recastDesc,\n      category: \"dataManagement\",\n      icon: \"recast.png\",\n      helpID: \"recast-function.htm\",\n      hidden: false,\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"recast_raster\"\n        },\n        Arguments: {\n          required: true,\n          dataType: dataTypes.propertySet,\n          displayName: functionStrings.rasterFunctions.rfxArgs.overridesName,\n          hidden: false,\n          helpTextID: \"recast_arguments\"\n        }\n      }\n    },\n    LookupFunction: {\n      name: functionStrings.rasterFunctions.rfx.lookupName,\n      snippet: functionStrings.rasterFunctions.rfx.lookupSnip,\n      description: functionStrings.rasterFunctions.rfx.lookupDesc,\n      category: \"reclass\",\n      icon: \"lookup.png\",\n      helpID: \"lookup-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"lookup_raster\"\n        },\n        Field: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"Raster\"\n          },\n          helpTextID: \"lookup_field\"\n        }\n      }\n    },\n    MLClassifyFunction: {\n      name: functionStrings.rasterFunctions.rfx.mlClassifyName,\n      snippet: functionStrings.rasterFunctions.rfx.mlClassifySnip,\n      description: functionStrings.rasterFunctions.rfx.mlClassifyDesc,\n      category: \"classification\",\n      icon: \"mlClassify.png\",\n      helpID: \"ml-classify-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"mlclassify_raster\"\n        },\n        SignatureFile: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.signatureFileOrUrl,\n          hidden: false,\n          helpTextID: \"mlclassify_signaturefile\"\n        }\n      }\n    },\n    PansharpeningFunction: {\n      name: functionStrings.rasterFunctions.rfx.pansharpeningName,\n      snippet: functionStrings.rasterFunctions.rfx.pansharpeningSnip,\n      description: functionStrings.rasterFunctions.rfx.pansharpeningDesc,\n      category: \"appearance\",\n      icon: \"pansharpening.png\",\n      helpID: \"pansharpening-function.htm\",\n      rasterFunctionArguments: {\n        MSImage: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.multispectralName,\n          hidden: false,\n          helpTextID: \"pansharpen_msimage\"\n        },\n        PanImage: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.panchromaticName,\n          hidden: false,\n          helpTextID: \"pansharpen_panimage\"\n        },\n        PansharpeningType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pansharpeningType,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.pansharpeningTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [4],\n                active: [\"Sensor\"],\n                inactive: [],\n                autoRevert: true\n              },\n              {\n                values: [3],\n                active: [],\n                inactive: [\"Weights\"],\n                autoRevert: true\n              }\n            ]\n          },\n          editorValueTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0, 1],\n                changedArgs: [\n                  {\n                    Weights: [0.334, 0.333, 0.333, 0]\n                  }\n                ]\n              },\n              {\n                values: [2],\n                changedArgs: [\n                  {\n                    Weights: [0.166, 0.167, 0.167, 0.5]\n                  }\n                ]\n              }\n            ]\n          },\n          helpTextID: \"pansharpen_pansharpeningtype\"\n        },\n        Sensor: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sensorName,\n          hidden: false,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.sensorTypes\n          },\n          helpTextID: \"pansharpen_sensor\"\n        },\n        Weights: {\n          displayName: functionStrings.rasterFunctions.rfxArgs.weightsName,\n          required: true,\n          dataType: dataTypes.doubleArray,\n          hidden: false,\n          defaultValue: [0.166, 0.167, 0.167, 0.5],\n          dataTypeAttributes: {\n            type: \"bandmatrix\",\n            cols: 4,\n            hasIdColumn: false,\n            isExtensible: false,\n            displayNames: [\n              functionStrings.rasterFunctions.rfxArgs.redName,\n              functionStrings.rasterFunctions.rfxArgs.greenName,\n              functionStrings.rasterFunctions.rfxArgs.blueName,\n              functionStrings.rasterFunctions.rfxArgs.infraredName\n            ]\n          },\n          helpTextID: \"pansharpen_weights\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"Sensor\"],\n            triggerArguments: [\"Weights\"],\n            widget: {\n              path: \"rfx-cte-pansharpen-sensor-picker\"\n            }\n          }\n        ]\n      }\n    },\n    ReprojectFunction: {\n      name: functionStrings.rasterFunctions.rfx.reprojectName,\n      snippet: functionStrings.rasterFunctions.rfx.reprojectSnip,\n      description: functionStrings.rasterFunctions.rfx.reprojectDesc,\n      category: \"dataManagement\",\n      icon: \"reproject.png\",\n      helpID: \"reproject-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"reproject_raster\"\n        },\n        SpatialReference: {\n          required: true,\n          dataType: dataTypes.spatialReference,\n          displayName: functionStrings.rasterFunctions.rfxArgs.spatialReferenceName,\n          hidden: false,\n          helpTextID: \"reproject_spatialreference\"\n        },\n        XCellsize: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.xCellsizeName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"reproject_xcellsize\"\n        },\n        YCellsize: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.yCellsizeName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"reproject_ycellsize\"\n        },\n        XOrigin: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.xOriginName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"reproject_xorigin\"\n        },\n        YOrigin: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.yOriginName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"reproject_yorigin\"\n        }\n      }\n    },\n    S1ThermalNoiseRemovalFunction: {\n      name: functionStrings.rasterFunctions.rfx.s1ThermalNoiseRemovalName,\n      snippet: functionStrings.rasterFunctions.rfx.s1ThermalNoiseRemovalSnip,\n      description: functionStrings.rasterFunctions.rfx.s1ThermalNoiseRemovalDesc,\n      category: \"correction\",\n      icon: \"s1ThermalNoiseRemoval.png\",\n      helpID: \"sentinel-1-thermal-noise-removal.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"sentinel1thermalnoiseremoval_raster\"\n        }\n      }\n    },\n    FocalFunction: {\n      name: functionStrings.rasterFunctions.rfx.focalName,\n      snippet: functionStrings.rasterFunctions.rfx.focalSnip,\n      description: functionStrings.rasterFunctions.rfx.focalDesc,\n      category: \"statistical\",\n      icon: \"focal.png\",\n      helpID: \"focal-statistics-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"focalstatistics_raster\"\n        },\n        NeighborhoodType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.neighborhoodType,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriFocalNeighborhoodTypes\n          },\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\",\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [1],\n                active: [\"Width\", \"Height\"],\n                inactive: [\"Radius\", \"InnerRadius\", \"OuterRadius\", \"StartAngle\", \"EndAngle\", \"NeighborhoodValues\"]\n              },\n              {\n                values: [2],\n                active: [\"Radius\"],\n                inactive: [\n                  \"Width\",\n                  \"Height\",\n                  \"InnerRadius\",\n                  \"OuterRadius\",\n                  \"StartAngle\",\n                  \"EndAngle\",\n                  \"NeighborhoodValues\"\n                ]\n              },\n              {\n                values: [3],\n                active: [\"InnerRadius\", \"OuterRadius\"],\n                inactive: [\"Width\", \"Height\", \"Radius\", \"StartAngle\", \"EndAngle\", \"NeighborhoodValues\"]\n              },\n              {\n                values: [4],\n                active: [\"Radius\", \"StartAngle\", \"EndAngle\"],\n                inactive: [\"Width\", \"Height\", \"InnerRadius\", \"OuterRadius\", \"NeighborhoodValues\"]\n              },\n              {\n                values: [5, 6],\n                active: [\"Width\", \"Height\", \"NeighborhoodValues\"],\n                inactive: [\"Radius\", \"InnerRadius\", \"OuterRadius\", \"StartAngle\", \"EndAngle\"]\n              }\n            ]\n          },\n          helpTextID: \"focalstatistics_neighborhoodtype\"\n        },\n        Width: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.widthName,\n          hidden: false,\n          defaultValue: 3,\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\"\n        },\n        Height: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.heightName,\n          hidden: false,\n          defaultValue: 3,\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\"\n        },\n        InnerRadius: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.innerRadiusName,\n          hidden: false,\n          defaultValue: 1,\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\"\n        },\n        OuterRadius: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outerRadiusName,\n          hidden: false,\n          defaultValue: 3,\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\"\n        },\n        Radius: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.radiusName,\n          hidden: false,\n          defaultValue: 3,\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\"\n        },\n        StartAngle: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.startAngleName,\n          hidden: false,\n          defaultValue: 0,\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\"\n        },\n        EndAngle: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.endAngleName,\n          hidden: false,\n          defaultValue: 90,\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\"\n        },\n        NeighborhoodValues: {\n          required: true,\n          dataType: dataTypes.doubleArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.neighborhoodValues,\n          hidden: false,\n          defaultValue: [0, 1, 0, 1, 1, 1, 0, 1, 0],\n          categoryRefId: \"rfxArgCat_NeighborhoodSettings\"\n        },\n        StatisticType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.statisticsTypeName,\n          hidden: false,\n          defaultValue: 3,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriGAFocalStatisticsTypes\n          },\n          categoryRefId: \"rfxArgCat_FocalStatistics\",\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [12],\n                active: [\"Percentile\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"focalstatistics_statistictype\"\n        },\n        Percentile: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.percentileName,\n          hidden: false,\n          defaultValue: 90,\n          categoryRefId: \"rfxArgCat_FocalStatistics\",\n          helpTextID: \"focalstatistics_percentile\"\n        },\n        NoDataPolicy: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.ignoreNoDataName,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"focalstatistics_nodatapolicy\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"StatisticType\"],\n            triggerArguments: [\"Raster\", \"NeighborhoodType\"],\n            triggerAttributes: \"pixelType:Raster,float,3|2|4|5|12|7|8|9;value:NeighborhoodType,6,3|8|9\",\n            widget: {\n              path: \"rfx-cte-filtered-argument-editor\"\n            }\n          },\n          {\n            argumentNames: [\"NeighborhoodType\"],\n            triggerArguments: [\"StatisticType\"],\n            triggerAttributes: \"value:StatisticType,1|2|4|5|6|7|10,1|2|3|4|5\",\n            widget: {\n              path: \"rfx-cte-filtered-argument-editor\"\n            }\n          },\n          {\n            argumentNames: [\"NeighborhoodValues\"],\n            triggerArguments: [\"Width\", \"Height\", \"NeighborhoodType\"],\n            widget: {\n              path: \"rfx-cte-neighborhood-values\"\n            }\n          },\n          {\n            argumentNames: [\"Width\"],\n            triggerAttributes: \"minValue:1\",\n            widget: {\n              path: \"rfx-cte-ranged-value-editor\"\n            }\n          },\n          {\n            argumentNames: [\"Height\"],\n            triggerAttributes: \"minValue:1\",\n            widget: {\n              path: \"rfx-cte-ranged-value-editor\"\n            }\n          },\n          {\n            argumentNames: [\"Radius\"],\n            triggerAttributes: \"minValue:1\",\n            widget: {\n              path: \"rfx-cte-ranged-value-editor\"\n            }\n          },\n          {\n            argumentNames: [\"InnerRadius\"],\n            triggerAttributes: \"minValue:1;lessThan:OuterRadius\",\n            triggerArguments: [\"OuterRadius\"],\n            widget: {\n              path: \"rfx-cte-ranged-value-editor\"\n            }\n          },\n          {\n            argumentNames: [\"OuterRadius\"],\n            triggerAttributes: \"minValue:2;greaterThan:InnerRadius\",\n            triggerArguments: [\"InnerRadius\"],\n            widget: {\n              path: \"rfx-cte-ranged-value-editor\"\n            }\n          },\n          {\n            argumentNames: [\"Percentile\"],\n            triggerAttributes: \"minValue:0;maxValue:100\",\n            widget: {\n              path: \"rfx-cte-ranged-value-editor\"\n            }\n          }\n        ]\n      }\n    },\n    TransposeBitsFunction: {\n      name: functionStrings.rasterFunctions.rfx.transposeBitsName,\n      snippet: functionStrings.rasterFunctions.rfx.transposeBitsSnip,\n      description: functionStrings.rasterFunctions.rfx.transposeBitsDesc,\n      category: \"dataManagement\",\n      icon: \"transposeBits.png\",\n      helpID: \"transpose-bits-function.htm\",\n      hidden: false,\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"transposebits_raster\"\n        },\n        ConstantFillCheck: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.constantFillCheck,\n          hidden: false,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.boolean\n          },\n          defaultValue: true,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [true],\n                active: [\"ConstantFillValue\"],\n                inactive: [\"FillRaster\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"transposebits_constantfillcheck\"\n        },\n        FillRaster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fillRaster,\n          hidden: false,\n          helpTextID: \"transposebits_fillraster\"\n        },\n        ConstantFillValue: {\n          required: true,\n          dataType: dataTypes.long,\n          defaultValue: 0,\n          displayName: functionStrings.rasterFunctions.rfxArgs.constantFillValue,\n          hidden: false,\n          helpTextID: \"transposebits_constantfillvalue\"\n        },\n        InputBitPositions: {\n          required: true,\n          dataType: dataTypes.longArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputBitPositions,\n          hidden: false\n        },\n        OutputBitPositions: {\n          required: true,\n          dataType: dataTypes.longArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outputBitPositions,\n          hidden: false\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"InputBitPositions\", \"OutputBitPositions\"],\n            widget: {\n              path: \"rfx-cte-transpose-bit\"\n            },\n            helpTextIDs: {\n              transposebits_bitpattern: \"transposebits_bitpattern\"\n            }\n          }\n        ]\n      }\n    },\n    Sink: {\n      name: functionStrings.rasterFunctions.rfx.sinkName,\n      snippet: functionStrings.rasterFunctions.rfx.sinkSnip,\n      description: functionStrings.rasterFunctions.rfx.sinkDesc,\n      category: \"hydrology\",\n      icon: \"sink.png\",\n      helpID: \"sink-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"Sink_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_flow_direction_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_flow_direction_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.flowDirRaster,\n          hidden: false,\n          helpTextID: \"sink_inflowdirectionraster\"\n        },\n        MatchVariable: {\n          required: false,\n          dataType: dataTypes.boolean,\n          hidden: true\n        },\n        UnionDimension: {\n          required: false,\n          dataType: dataTypes.boolean,\n          hidden: true\n        }\n      }\n    },\n    SnapPourPoint: {\n      name: functionStrings.rasterFunctions.rfx.snapPourPointName,\n      snippet: functionStrings.rasterFunctions.rfx.snapPourPointSnip,\n      description: functionStrings.rasterFunctions.rfx.snapPourPointDesc,\n      category: \"hydrology\",\n      icon: \"snapPourPoint.png\",\n      helpID: \"snap-pour-point-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"SnapPourPoint_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_pour_point_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_pour_point_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pourPointDataName,\n          hidden: false,\n          helpTextID: \"snappourpoint_inpourpointdata\"\n        },\n        in_accumulation_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.accumulationRasterName,\n          hidden: false,\n          helpTextID: \"snappourpoint_inaccumulationraster\"\n        },\n        snap_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.snapDistanceName,\n          hidden: false,\n          defaultValue: 0,\n          helpTextID: \"snappourpoint_snapdistance\"\n        },\n        pour_point_field: {\n          required: false,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pourPointFieldName,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_pour_point_data\"\n          },\n          helpTextID: \"snappourpoint_pourpointfield\"\n        },\n        MatchVariable: {\n          required: false,\n          dataType: dataTypes.boolean,\n          hidden: true\n        },\n        UnionDimension: {\n          required: false,\n          dataType: dataTypes.boolean,\n          hidden: true\n        }\n      }\n    },\n    EucBackDirection: {\n      name: functionStrings.rasterFunctions.rfx.eucBackDirectionName,\n      snippet: functionStrings.rasterFunctions.rfx.eucBackDirectionSnip,\n      description: functionStrings.rasterFunctions.rfx.eucBackDirectionDesc,\n      hidden: true,\n      category: \"distanceLegacy\",\n      icon: \"eucBackDirection.png\",\n      helpID: \"euclidean-back-direction-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"EucBackDirection_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_back_direction_raster\"\n        },\n        in_source_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"eucbackdirection_insourcedata\"\n        },\n        in_barrier_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.barrierDataName,\n          hidden: false,\n          helpTextID: \"eucbackdirection_inbarrierdata\"\n        },\n        maximum_distance: {\n          required: false,\n          dataType: dataTypes.double,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxDistanceName,\n          helpTextID: \"eucbackdirection_maximumdistance\"\n        },\n        cell_size: {\n          required: false,\n          dataType: dataTypes.double,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellSizeName,\n          helpTextID: \"eucbackdirection_cellsize\"\n        },\n        distance_method: {\n          required: false,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceMethodName,\n          defaultValue: \"PLANAR\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaDistanceMethods\n          },\n          helpTextID: \"eucbackdirection_distancemethod\"\n        }\n      }\n    },\n    DistanceAllocation: {\n      name: functionStrings.rasterFunctions.rfx.distanceAllocationName,\n      snippet: functionStrings.rasterFunctions.rfx.distanceAllocationSnip,\n      description: functionStrings.rasterFunctions.rfx.distanceAllocationDesc,\n      category: \"distance\",\n      icon: \"distanceAllocation.png\",\n      helpID: \"distance-allocation-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"DistanceAllocation_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_distance_allocation_raster\"\n        },\n        in_source_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"distanceallocation_insourcedata\"\n        },\n        source_field: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_source_data\"\n          },\n          helpTextID: \"distanceallocation_sourcefield\"\n        },\n        in_barrier_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.barrierDataName,\n          hidden: false,\n          helpTextID: \"distanceallocation_inbarrierdata\"\n        },\n        in_surface_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.surfaceRasterName,\n          hidden: false,\n          helpTextID: \"distanceallocation_insurfaceraster\"\n        },\n        in_cost_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costRasterName,\n          hidden: false,\n          helpTextID: \"distanceallocation_incostraster\"\n        },\n        in_vertical_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"vertical_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"distanceallocation_inverticalraster\"\n        },\n        vertical_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalFactor,\n          hidden: false,\n          helpTextID: \"distanceallocation_verticalfactor\"\n        },\n        in_horizontal_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"horizontal_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"distanceallocation_inhorizontalraster\"\n        },\n        horizontal_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalFactor,\n          hidden: false,\n          helpTextID: \"distanceallocation_horizontalfactor\"\n        },\n        generate_source_location_bands: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceLocationBands,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"distanceallocation_generatesourcelocationbands\"\n        },\n        distance_method: {\n          required: false,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceMethodName,\n          defaultValue: \"PLANAR\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaDistanceMethods\n          },\n          helpTextID: \"distanceallocation_distancemethod\"\n        },\n        source_initial_accumulation: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.initialAccumulation,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"distanceallocation_sourceinitialaccumulation\"\n        },\n        source_maximum_accumulation: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumAccumulation,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"distanceallocation_sourcemaximumaccumulation\"\n        },\n        source_cost_multiplier: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costMultiplierName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"distanceallocation_sourcecostmultiplier\"\n        },\n        source_direction: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.travelDirectionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.list,\n                enum: enums.gpsaTravelDirections,\n                defaultValue: \"FROM_SOURCE\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"distanceallocation_sourcedirection\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"horizontal_factor\"],\n            triggerArguments: [\"in_horizontal_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          },\n          {\n            argumentNames: [\"vertical_factor\"],\n            triggerArguments: [\"in_vertical_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          }\n        ]\n      }\n    },\n    DistanceAccumulation: {\n      name: functionStrings.rasterFunctions.rfx.distanceAccumulationName,\n      snippet: functionStrings.rasterFunctions.rfx.distanceAccumulationSnip,\n      description: functionStrings.rasterFunctions.rfx.distanceAccumulationDesc,\n      category: \"distance\",\n      icon: \"distanceAccumulation.png\",\n      helpID: \"distance-accumulation-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"DistanceAccumulation_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_source_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_distance_accumulation_raster\"\n        },\n        in_source_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sourceDataName,\n          hidden: false,\n          helpTextID: \"distanceaccumulation_insourcedata\"\n        },\n        in_barrier_data: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.barrierDataName,\n          hidden: false,\n          helpTextID: \"distanceaccumulation_inbarrierdata\"\n        },\n        in_surface_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.surfaceRasterName,\n          hidden: false,\n          helpTextID: \"distanceaccumulation_insurfaceraster\"\n        },\n        in_cost_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costRasterName,\n          hidden: false,\n          helpTextID: \"distanceaccumulation_incostraster\"\n        },\n        in_vertical_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"vertical_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"distanceaccumulation_inverticalraster\"\n        },\n        vertical_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.verticalFactor,\n          hidden: false,\n          helpTextID: \"distanceaccumulation_verticalfactor\"\n        },\n        in_horizontal_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalRaster,\n          hidden: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [],\n                checkValuePresent: true,\n                active: [\"horizontal_factor\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"distanceaccumulation_inhorizontalraster\"\n        },\n        horizontal_factor: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.horizontalFactor,\n          hidden: false,\n          helpTextID: \"distanceaccumulation_horizontalfactor\"\n        },\n        generate_back_direction_band: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.backDirectionBand,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"distanceaccumulation_generatebackdirectionband\"\n        },\n        distance_method: {\n          required: false,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceMethodName,\n          defaultValue: \"PLANAR\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaDistanceMethods\n          },\n          helpTextID: \"distanceaccumulation_distancemethod\"\n        },\n        source_initial_accumulation: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.initialAccumulation,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"distanceaccumulation_sourceinitialaccumulation\"\n        },\n        source_maximum_accumulation: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumAccumulation,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"distanceaccumulation_sourcemaximumaccumulation\"\n        },\n        source_cost_multiplier: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costMultiplierName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: \"number\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"distanceaccumulation_sourcecostmultiplier\"\n        },\n        source_direction: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.travelDirectionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_SourceCharacteristics\",\n          domain: {\n            type: domainTypes.switchable,\n            attributes: [\n              {\n                type: domainTypes.list,\n                enum: enums.gpsaTravelDirections,\n                defaultValue: \"FROM_SOURCE\"\n              },\n              {\n                type: \"field\",\n                argumentName: \"in_source_data\"\n              }\n            ]\n          },\n          helpTextID: \"distanceaccumulation_sourcedirection\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"horizontal_factor\"],\n            triggerArguments: [\"in_horizontal_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          },\n          {\n            argumentNames: [\"vertical_factor\"],\n            triggerArguments: [\"in_vertical_raster\"],\n            widget: {\n              path: \"rfx-cte-factor-function-editor\"\n            }\n          }\n        ]\n      }\n    },\n    Shrink: {\n      name: functionStrings.rasterFunctions.rfx.shrinkName,\n      snippet: functionStrings.rasterFunctions.rfx.shrinkSnip,\n      description: functionStrings.rasterFunctions.rfx.shrinkDesc,\n      category: \"dataManagement\",\n      icon: \"shrink.png\",\n      helpID: \"shrink-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"Shrink_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"shrink_inraster\"\n        },\n        number_cells: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.numberOfCells,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"shrink_numbercells\"\n        },\n        zone_values: {\n          required: true,\n          dataType: dataTypes.longArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneValues,\n          hidden: false,\n          helpTextID: \"shrink_zonevalues\"\n        },\n        shrink_method: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.shrinkMethod,\n          hidden: true,\n          defaultValue: \"DISTANCE\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaExpandMethod\n          }\n        }\n      }\n    },\n    BoundaryClean: {\n      name: functionStrings.rasterFunctions.rfx.boundaryCleanName,\n      snippet: functionStrings.rasterFunctions.rfx.boundaryCleanSnip,\n      description: functionStrings.rasterFunctions.rfx.boundaryCleanDesc,\n      category: \"dataManagement\",\n      icon: \"boundaryClean.png\",\n      helpID: \"boundary-clean-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"BoundaryClean_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"boundaryclean_inraster\"\n        },\n        sort_type: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sortType,\n          hidden: false,\n          defaultValue: \"NO_SORT\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaSortType\n          },\n          helpTextID: \"boundaryclean_sorttype\"\n        },\n        number_of_runs: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.numberOfRuns,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"boundaryclean_numberofruns\"\n        }\n      }\n    },\n    Expand: {\n      name: functionStrings.rasterFunctions.rfx.expandName,\n      snippet: functionStrings.rasterFunctions.rfx.expandSnip,\n      description: functionStrings.rasterFunctions.rfx.expandDesc,\n      category: \"dataManagement\",\n      icon: \"expand.png\",\n      helpID: \"expand-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"Expand_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_raster\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_raster: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"expand_inraster\"\n        },\n        number_cells: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.numberOfCells,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"expand_numbercells\"\n        },\n        zone_values: {\n          required: true,\n          dataType: dataTypes.longArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zoneValues,\n          hidden: false,\n          helpTextID: \"expand_zonevalues\"\n        },\n        expand_method: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.expandMethod,\n          hidden: true,\n          defaultValue: \"DISTANCE\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaExpandMethod\n          }\n        }\n      }\n    },\n    SpectralUnmixingFunction: {\n      name: functionStrings.rasterFunctions.rfx.spectralUnmixingName,\n      snippet: functionStrings.rasterFunctions.rfx.spectralUnmixingSnip,\n      description: functionStrings.rasterFunctions.rfx.spectralUnmixingDesc,\n      category: \"classification\",\n      icon: \"spectralUnmixing.png\",\n      helpID: \"linear-spectral-unmixing.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"spectralunmixing_raster\"\n        },\n        SpectralProfileType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputSpectralProfileType,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.spectralProfileFileTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0],\n                active: [\"SpectralProfileFile\"],\n                inactive: [\"TrainingFeature\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"spectralunmixing_spectralprofiletype\"\n        },\n        SpectralProfileFile: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.spectralProfileFileName,\n          hidden: false,\n          helpTextID: \"spectralunmixing_spectralprofilefile\"\n        },\n        TrainingFeature: {\n          required: true,\n          dataType: dataTypes.featureClass,\n          displayName: functionStrings.rasterFunctions.rfxArgs.trainingFeatureFileName,\n          hidden: false,\n          helpTextID: \"spectralunmixing_trainingfeature\"\n        },\n        NonNegative: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.nonNegative,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"spectralunmixing_nonnegative\"\n        },\n        SumToOne: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.sumToOne,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"spectralunmixing_sumtoone\"\n        }\n      }\n    },\n    RandomFunction: {\n      name: functionStrings.rasterFunctions.rfx.randomName,\n      snippet: functionStrings.rasterFunctions.rfx.randomSnip,\n      description: functionStrings.rasterFunctions.rfx.randomDesc,\n      category: \"dataManagement\",\n      icon: \"random.png\",\n      helpID: \"random-function.htm\",\n      rasterFunctionArguments: {\n        Distribution: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.randomDistribution,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.randomDistributionType\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [1],\n                active: [\"MinimumUniform\", \"MaximumUniform\"],\n                inactive: [\n                  \"MinimumInteger\",\n                  \"MaximumInteger\",\n                  \"NormalMean\",\n                  \"ExponentialMean\",\n                  \"StandardDeviation\",\n                  \"Alpha\",\n                  \"Beta\",\n                  \"N\",\n                  \"Probability\",\n                  \"r\"\n                ]\n              },\n              {\n                values: [2],\n                active: [\"MinimumInteger\", \"MaximumInteger\"],\n                inactive: [\n                  \"MinimumUniform\",\n                  \"MaximumUniform\",\n                  \"NormalMean\",\n                  \"ExponentialMean\",\n                  \"StandardDeviation\",\n                  \"Alpha\",\n                  \"Beta\",\n                  \"N\",\n                  \"Probability\",\n                  \"r\"\n                ]\n              },\n              {\n                values: [3],\n                active: [\"NormalMean\", \"StandardDeviation\"],\n                inactive: [\n                  \"MinimumUniform\",\n                  \"MaximumUniform\",\n                  \"MinimumInteger\",\n                  \"MaximumInteger\",\n                  \"ExponentialMean\",\n                  \"Alpha\",\n                  \"Beta\",\n                  \"N\",\n                  \"Probability\",\n                  \"r\"\n                ]\n              },\n              {\n                values: [4],\n                active: [\"ExponentialMean\"],\n                inactive: [\n                  \"MinimumUniform\",\n                  \"MaximumUniform\",\n                  \"MinimumInteger\",\n                  \"MaximumInteger\",\n                  \"NormalMean\",\n                  \"StandardDeviation\",\n                  \"Alpha\",\n                  \"Beta\",\n                  \"N\",\n                  \"Probability\",\n                  \"r\"\n                ]\n              },\n              {\n                values: [5],\n                active: [\"ExponentialMean\"],\n                inactive: [\n                  \"MinimumUniform\",\n                  \"MaximumUniform\",\n                  \"MinimumInteger\",\n                  \"MaximumInteger\",\n                  \"NormalMean\",\n                  \"StandardDeviation\",\n                  \"Alpha\",\n                  \"Beta\",\n                  \"N\",\n                  \"Probability\",\n                  \"r\"\n                ]\n              },\n              {\n                values: [6],\n                active: [\"Alpha\", \"Beta\"],\n                inactive: [\n                  \"MinimumUniform\",\n                  \"MaximumUniform\",\n                  \"MinimumInteger\",\n                  \"MaximumInteger\",\n                  \"NormalMean\",\n                  \"StandardDeviation\",\n                  \"ExponentialMean\",\n                  \"N\",\n                  \"Probability\",\n                  \"r\"\n                ]\n              },\n              {\n                values: [7],\n                active: [\"N\", \"Probability\"],\n                inactive: [\n                  \"MinimumUniform\",\n                  \"MaximumUniform\",\n                  \"MinimumInteger\",\n                  \"MaximumInteger\",\n                  \"NormalMean\",\n                  \"StandardDeviation\",\n                  \"ExponentialMean\",\n                  \"Alpha\",\n                  \"Beta\",\n                  \"r\"\n                ]\n              },\n              {\n                values: [8],\n                active: [\"Probability\"],\n                inactive: [\n                  \"MinimumUniform\",\n                  \"MaximumUniform\",\n                  \"MinimumInteger\",\n                  \"MaximumInteger\",\n                  \"NormalMean\",\n                  \"StandardDeviation\",\n                  \"ExponentialMean\",\n                  \"Alpha\",\n                  \"Beta\",\n                  \"N\",\n                  \"r\"\n                ]\n              },\n              {\n                values: [9],\n                active: [\"r\", \"Probability\"],\n                inactive: [\n                  \"MinimumUniform\",\n                  \"MaximumUniform\",\n                  \"MinimumInteger\",\n                  \"MaximumInteger\",\n                  \"NormalMean\",\n                  \"StandardDeviation\",\n                  \"ExponentialMean\",\n                  \"Alpha\",\n                  \"Beta\",\n                  \"N\"\n                ]\n              }\n            ]\n          },\n          helpTextID: \"random_distribution\"\n        },\n        MinimumUniform: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minimumName,\n          hidden: false,\n          defaultValue: 0\n        },\n        MaximumUniform: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumName,\n          hidden: false,\n          defaultValue: 1\n        },\n        MinimumInteger: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minimumName,\n          hidden: false,\n          defaultValue: 1\n        },\n        MaximumInteger: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumName,\n          hidden: false,\n          defaultValue: 10\n        },\n        NormalMean: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.meanName,\n          hidden: false,\n          defaultValue: 0.0\n        },\n        StandardDeviation: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.stdDeviation,\n          hidden: false,\n          defaultValue: 1.0\n        },\n        ExponentialMean: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.meanName,\n          hidden: false,\n          defaultValue: 1.0\n        },\n        Alpha: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.alphaName,\n          hidden: false,\n          defaultValue: 1.0\n        },\n        Beta: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.betaName,\n          hidden: false,\n          defaultValue: 1.0\n        },\n        N: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.nName,\n          hidden: false,\n          defaultValue: 10\n        },\n        r: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rName,\n          hidden: false,\n          defaultValue: 10.0\n        },\n        Probability: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.probabilityName,\n          hidden: false,\n          defaultValue: 0.5\n        },\n        Seed: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.seed,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"random_seed\"\n        },\n        GeneratorType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.randomNumberGenerator,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.randomGeneratorType\n          },\n          helpTextID: \"random_generatortype\"\n        },\n        RasterInfo: {\n          required: true,\n          dataType: dataTypes.rasterInfo,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterInfoName,\n          hidden: false,\n          helpTextID: \"random_rasterinfo\"\n        }\n      }\n    },\n    AggregateFunction: {\n      name: functionStrings.rasterFunctions.rfx.aggregateName,\n      snippet: functionStrings.rasterFunctions.rfx.aggregateSnip,\n      description: functionStrings.rasterFunctions.rfx.aggregateDesc,\n      category: \"dataManagement\",\n      icon: \"aggregate.png\",\n      helpID: \"aggregate-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"aggregate_raster\"\n        },\n        CellFactor: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellFactor,\n          hidden: false,\n          defaultValue: 2,\n          helpTextID: \"aggregate_cellfactor\"\n        },\n        AggregationType: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.aggregationType,\n          hidden: false,\n          defaultValue: 9,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaAggregationTypes\n          },\n          helpTextID: \"aggregate_aggregationtype\"\n        },\n        ExpandHandling: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentHandling,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"aggregate_expandhandling\"\n        },\n        IgnoreNoData: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.ignoreNoDataName,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"aggregate_ignorenodata\"\n        }\n      }\n    },\n    TrendAnalysisFunction: {\n      name: functionStrings.rasterFunctions.rfx.trendAnalysisName,\n      snippet: functionStrings.rasterFunctions.rfx.trendAnalysisSnip,\n      description: functionStrings.rasterFunctions.rfx.trendAnalysisDesc,\n      category: \"analysis\",\n      icon: \"trendAnalysis.png\",\n      helpID: \"generate-trend.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"trendanalysis_raster\"\n        },\n        DimensionName: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.trendAnalysisDimensionName,\n          hidden: false,\n          domain: {\n            type: domainTypes.rasterDimensions,\n            argumentName: \"Raster\"\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [\"StdTime\"],\n                active: [\"CycleUnit\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"trendanalysis_dimensionname\"\n        },\n        RegressionType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.trendAnalysisType,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriTrendAnalysisTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0],\n                active: [\"SlopePValue\", \"RMSE\", \"R2\"],\n                inactive: [\"Frequency\", \"Order\", \"CycleLength\", \"CycleUnit\", \"SeasonalPeriod\"]\n              },\n              {\n                values: [1],\n                active: [\"Frequency\", \"SlopePValue\", \"RMSE\", \"R2\", \"CycleLength\", \"CycleUnit\"],\n                inactive: [\"Order\", \"SeasonalPeriod\"]\n              },\n              {\n                values: [2],\n                active: [\"Order\", \"RMSE\", \"R2\"],\n                inactive: [\"Frequency\", \"SlopePValue\", \"CycleLength\", \"CycleUnit\", \"SeasonalPeriod\"]\n              },\n              {\n                values: [3] /* Mann-Kendall */,\n                active: [],\n                inactive: [\n                  \"Frequency\",\n                  \"Order\",\n                  \"SlopePValue\",\n                  \"CycleLength\",\n                  \"CycleUnit\",\n                  \"SeasonalPeriod\",\n                  \"RMSE\",\n                  \"R2\"\n                ]\n              },\n              {\n                values: [4],\n                active: [\"SeasonalPeriod\"],\n                inactive: [\"Order\", \"Frequency\", \"SlopePValue\", \"CycleLength\", \"CycleUnit\", \"RMSE\", \"R2\"]\n              }\n            ]\n          },\n          helpTextID: \"trendanalysis_regressiontype\"\n        },\n        CycleLength: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cycleLengthName,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"trendanalysis_cyclelength\"\n        },\n        CycleUnit: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cycleUnitName,\n          hidden: false,\n          defaultValue: \"YEARS\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCycleUnits\n          },\n          helpTextID: \"trendanalysis_cycleunit\"\n        },\n        Frequency: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.harmonicFrequency,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"trendanalysis_frequency\"\n        },\n        Order: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.polynomialOrder,\n          hidden: false,\n          defaultValue: 2,\n          helpTextID: \"trendanalysis_order\"\n        },\n        IgnoreNoData: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.ignoreNoDataName,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"trendanalysis_ignorenodata\"\n        },\n        RMSE: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.trendAnalysisRMSE,\n          categoryRefId: \"rfxArgCat_ModelStatistics\",\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"trendanalysis_rmse\"\n        },\n        R2: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.trendAnalysisR2,\n          categoryRefId: \"rfxArgCat_ModelStatistics\",\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"trendanalysis_r2\"\n        },\n        SlopePValue: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.trendAnalysisSlopePValue,\n          categoryRefId: \"rfxArgCat_ModelStatistics\",\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"trendanalysis_slopepvalue\"\n        },\n        SeasonalPeriod: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.trendAnalysisSeasonalPeriod,\n          hidden: false,\n          defaultValue: \"DAYS\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriTrendSeasonlPeriod\n          },\n          helpTextID: \"trendanalysis_seasonalperiod\"\n        }\n      }\n    },\n    TrendFunction: {\n      name: functionStrings.rasterFunctions.rfx.trendName,\n      snippet: functionStrings.rasterFunctions.rfx.trendSnip,\n      description: functionStrings.rasterFunctions.rfx.trendDesc,\n      category: \"analysis\",\n      icon: \"trend.png\",\n      helpID: \"predict-using-trend.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"trend_raster\"\n        },\n        DimensionDefinitionType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.dimensionDefinitionType,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.dimensionDefinitionTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [0],\n                active: [\"DimensionValues\"],\n                inactive: [\"DimensionStart\", \"DimensionEnd\", \"DimensionInterval\", \"DimensionUnit\"]\n              },\n              {\n                values: [1],\n                active: [\"DimensionStart\", \"DimensionEnd\", \"DimensionInterval\", \"DimensionUnit\"],\n                inactive: [\"DimensionValues\"]\n              }\n            ]\n          },\n          helpTextID: \"trend_dimensiondefinitiontype\"\n        },\n        DimensionValues: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.predictDimensionValues,\n          hidden: false,\n          helpTextID: \"trend_dimensionvalues\"\n        },\n        DimensionStart: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.predictDimensionStart,\n          hidden: false,\n          helpTextID: \"trend_dimensionstart\"\n        },\n        DimensionEnd: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.predictDimensionEnd,\n          hidden: false,\n          helpTextID: \"trend_dimensionend\"\n        },\n        DimensionInterval: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.predictDimensionInterval,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"trend_dimensioninterval\"\n        },\n        DimensionUnit: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.dimensionUnit,\n          hidden: false,\n          defaultValue: \"HOURS\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriMdimTimeIntervalUnits\n          },\n          helpTextID: \"trend_dimensionunit\"\n        }\n      }\n    },\n    MultidimensionalRasterFunction: {\n      name: functionStrings.rasterFunctions.rfx.multidimensionalRasterName,\n      snippet: functionStrings.rasterFunctions.rfx.multidimensionalRasterSnip,\n      description: functionStrings.rasterFunctions.rfx.multidimensionalRasterDesc,\n      category: \"dataManagement\",\n      icon: \"multidimensionalRaster.png\",\n      helpID: \"multidimensional-raster.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"multidimensionalraster_raster\"\n        },\n        Variables: {\n          required: true,\n          dataType: dataTypes.stringArray,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.variableName,\n          domain: {\n            type: domainTypes.rasterVariables,\n            argumentName: \"Raster\"\n          },\n          helpTextID: \"multidimensionalraster_variables\"\n        },\n        InterpolationMethod: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.interpolationMethodName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_IrregularDataInterpolation\",\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriInterpolateIrregularDataMethods\n          },\n          helpTextID: \"multidimensionalraster_interpolationmethod\"\n        },\n        InterpolationCellsize: {\n          required: true,\n          displayName: functionStrings.rasterFunctions.rfxArgs.interpolationCellsizeName,\n          dataType: dataTypes.double,\n          hidden: false,\n          defaultValue: 1,\n          categoryRefId: \"rfxArgCat_IrregularDataInterpolation\",\n          helpTextID: \"multidimensionalraster_interpolationcellsize\"\n        }\n      }\n    },\n    MultidimensionalFilterFunction: {\n      name: functionStrings.rasterFunctions.rfx.multidimensionalFilterName,\n      snippet: functionStrings.rasterFunctions.rfx.multidimensionalFilterSnip,\n      description: functionStrings.rasterFunctions.rfx.multidimensionalFilterDesc,\n      category: \"dataManagement\",\n      icon: \"multidimensionalFilter.png\",\n      helpID: \"multidimensional-filter.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"multidimensionalfilter_raster\"\n        },\n        Filter: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.variableName,\n          domain: {\n            type: domainTypes.mdimdef,\n            argumentName: \"Raster\",\n            helpTextIDs: {\n              variables: \"multidimensionalfilter_variables\",\n              dimension: \"multidimensionalfilter_dimension\",\n              dimensiondefinition: \"multidimensionalfilter_dimensiondefinition\",\n              values: \"multidimensionalfilter_values\",\n              ranges: \"multidimensionalfilter_ranges\",\n              maximumvalue: \"multidimensionalfilter_maximumvalue\",\n              minimumvalue: \"Multidimensional-Filter_minimumvalue\",\n              startof: \"multidimensionalfilter_startoffirstiteration\",\n              endof: \"multidimensionalfilter_endoffirstiteration\",\n              step: \"multidimensionalfilter_step\",\n              unit: \"multidimensionalfilter_unit\"\n            }\n          },\n          helpTextID: \"multidimensionalfilter_filter\"\n        },\n        Dimensionless: {\n          required: true,\n          dataType: dataTypes.boolean,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.dimensionlessName,\n          defaultValue: false,\n          helpTextID: \"multidimensionalfilter_dimensionless\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"Dimensionless\"],\n            triggerArguments: [\"Raster\", \"Filter\"],\n            widget: {\n              path: \"rfx-cte-dimensionless-editor\"\n            }\n          }\n        ]\n      }\n    },\n    DetectChangeFunction: {\n      name: functionStrings.rasterFunctions.rfx.detectChangeName,\n      snippet: functionStrings.rasterFunctions.rfx.detectChangeSnip,\n      description: functionStrings.rasterFunctions.rfx.detectChangeDesc,\n      category: \"analysis\",\n      icon: \"detectChange.png\",\n      helpID: \"detect-change-using-change-analysis-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.changeAnalysisRasterName,\n          hidden: false,\n          helpTextID: \"detectchange_raster\"\n        },\n        SegmentDate: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.segmentDate,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriSegmentDate\n          },\n          helpTextID: \"detectchange_segmentdate\"\n        },\n        ChangeDirection: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.changeDirectionName,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriChangeDirection\n          },\n          helpTextID: \"detectchange_changedirection\"\n        },\n        ChangeType: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.changeTypeName,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriDetectChangeTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [3],\n                active: [],\n                inactive: [\"MaxNumberChanges\", \"SegmentDate\"],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"detectchange_changetype\"\n        },\n        MaxNumberChanges: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxNumChangesName,\n          defaultValue: 1,\n          helpTextID: \"detectchange_maxnumberchanges\"\n        },\n        FilterByYear: {\n          required: true,\n          dataType: dataTypes.boolean,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.filterByYear,\n          defaultValue: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [true],\n                active: [\"MinimumYear\", \"MaximumYear\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"detectchange_filterbyyear\"\n        },\n        MinimumYear: {\n          required: true,\n          dataType: dataTypes.long,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          defaultValue: 0,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minimumYear\n        },\n        MaximumYear: {\n          required: true,\n          dataType: dataTypes.long,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          defaultValue: 0,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumYear\n        },\n        FilterByDuration: {\n          required: true,\n          dataType: dataTypes.boolean,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.filterByDuration,\n          defaultValue: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [true],\n                active: [\"MinimumDuration\", \"MaximumDuration\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"detectchange_filterbyduration\"\n        },\n        MinimumDuration: {\n          required: true,\n          dataType: dataTypes.double,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minimumDuration\n        },\n        MaximumDuration: {\n          required: true,\n          dataType: dataTypes.double,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumDuration\n        },\n        FilterByMagnitude: {\n          required: true,\n          dataType: dataTypes.boolean,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.filterByMagnitude,\n          defaultValue: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [true],\n                active: [\"MinimumMagnitude\", \"MaximumMagnitude\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"detectchange_filterbymagnitude\"\n        },\n        MinimumMagnitude: {\n          required: true,\n          dataType: dataTypes.double,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minimumMagnitude\n        },\n        MaximumMagnitude: {\n          required: true,\n          dataType: dataTypes.double,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumMagnitude\n        },\n        FilterByStartValue: {\n          required: true,\n          dataType: dataTypes.boolean,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.filterByStartValue,\n          defaultValue: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [true],\n                active: [\"MinimumStartValue\", \"MaximumStartValue\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"detectchange_filterbystartvalue\"\n        },\n        MinimumStartValue: {\n          required: true,\n          dataType: dataTypes.double,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minimumStartValue\n        },\n        MaximumStartValue: {\n          required: true,\n          dataType: dataTypes.double,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumStartValue\n        },\n        FilterByEndValue: {\n          required: true,\n          dataType: dataTypes.boolean,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.filterByEndValue,\n          defaultValue: false,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [true],\n                active: [\"MinimumEndValue\", \"MaximumEndValue\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"detectchange_filterbyendvalue\"\n        },\n        MinimumEndValue: {\n          required: true,\n          dataType: dataTypes.double,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minimumEndValue\n        },\n        MaximumEndValue: {\n          required: true,\n          dataType: dataTypes.double,\n          categoryRefId: \"rfxArgCat_FilterByAttributes\",\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maximumEndValue\n        },\n        changeAnalysisType: {\n          required: false,\n          hidden: true,\n          isPseudoArg: true,\n          dataType: dataTypes.string,\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                inactive: [\n                  \"SegmentDate\",\n                  \"ChangeDirection\",\n                  \"FilterByDuration\",\n                  \"MinimumDuration\",\n                  \"MaximumDuration\",\n                  \"FilterByMagnitude\",\n                  \"MinimumMagnitude\",\n                  \"MaximumMagnitude\",\n                  \"FilterByStartValue\",\n                  \"MinimumStartValue\",\n                  \"MaximumStartValue\",\n                  \"FilterByEndValue\",\n                  \"MinimumEndValue\",\n                  \"MaximumEndValue\"\n                ],\n                autoRevert: true,\n                values: [\"CCDC\"]\n              }\n            ]\n          }\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"ChangeType\", \"changeAnalysisType\"],\n            triggerArguments: [\"Raster\"],\n            widget: {\n              path: \"rfx-cte-detect-change-type-picker\"\n            },\n            helpTextIDs: {\n              detectchange_changetype: \"detectchange_changetype\"\n            }\n          }\n        ]\n      }\n    },\n    TrendToRGBFunction: {\n      name: functionStrings.rasterFunctions.rfx.trendToRGBName,\n      snippet: functionStrings.rasterFunctions.rfx.trendToRGBSnip,\n      description: functionStrings.rasterFunctions.rfx.trendToRGBDesc,\n      category: \"conversion\",\n      icon: \"trendToRGB.png\",\n      helpID: \"trend-to-rgb-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"trendtorgb_raster\"\n        },\n        ModelType: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.modelTypeName,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriRenderTrendTypes\n          },\n          helpTextID: \"trendtorgb_modeltype\"\n        }\n      }\n    },\n    ComputeChangeFunction: {\n      name: functionStrings.rasterFunctions.rfx.computeChangeName,\n      snippet: functionStrings.rasterFunctions.rfx.computeChangeSnip,\n      description: functionStrings.rasterFunctions.rfx.computeChangeDesc,\n      category: \"analysis\",\n      icon: \"computeChange.png\",\n      helpID: \"compute-change-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fromRasterName,\n          hidden: false,\n          helpTextID: \"computechange_raster\"\n        },\n        Raster2: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.toRasterName,\n          hidden: false,\n          helpTextID: \"computechange_raster2\"\n        },\n        Method: {\n          required: false,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.computeChangeMethod,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriComputeChangeMethods\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [2],\n                active: [\n                  \"FromClassValues\",\n                  \"ToClassValues\",\n                  \"FromClassNameFieldName\",\n                  \"ToClassNameFieldName\",\n                  \"KeepMethod\",\n                  \"UseColorMethod\"\n                ],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"computechange_method\"\n        },\n        FromClassValues: {\n          required: false,\n          dataType: dataTypes.longArray,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fromClassValues,\n          helpTextID: \"computechange_fromclassvalues\"\n        },\n        ToClassValues: {\n          required: false,\n          dataType: dataTypes.longArray,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.toClassValues,\n          helpTextID: \"computechange_toclassvalues\"\n        },\n        FromClassNameFieldName: {\n          required: false,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.fromClassNameFieldName,\n          helpTextID: \"computechange_fromclassnamefieldname\"\n        },\n        ToClassNameFieldName: {\n          required: false,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.toClassNameFieldName,\n          helpTextID: \"computechange_toclassnamefieldname\"\n        },\n        KeepMethod: {\n          required: false,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.keepMethod,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriComputeChangeKeepMethods\n          },\n          helpTextID: \"computechange_keepmethod\"\n        },\n        UseColorMethod: {\n          required: false,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.useColorMethod,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriComputeChangeUseColorMethods\n          },\n          helpTextID: \"computechange_usecolormethod\"\n        },\n        CellsizeType: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellsizeTypeName,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCellsizeTypes\n          },\n          helpTextID: \"computechange_cellsizetype\"\n        },\n        ExtentType: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentTypeName,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriExtentTypes\n          },\n          helpTextID: \"computechange_extenttype\"\n        }\n      }\n    },\n    CCDCFunction: {\n      name: functionStrings.rasterFunctions.rfx.ccdcName,\n      snippet: functionStrings.rasterFunctions.rfx.ccdcSnip,\n      description: functionStrings.rasterFunctions.rfx.ccdcDesc,\n      category: \"analysis\",\n      icon: \"ccdc.png\",\n      helpID: \"ccdc-analysis-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"ccdc_raster\"\n        },\n        BandIDs: {\n          required: true,\n          dataType: dataTypes.longArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.detectChangeBands,\n          hidden: false,\n          helpTextID: \"ccdc_bandids\"\n        },\n        TmaskBandIDs: {\n          required: true,\n          dataType: dataTypes.longArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.tmaskBands,\n          hidden: false,\n          helpTextID: \"ccdc_tmaskbandids\"\n        },\n        ChiSquareProb: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.chiSquaredThreshold,\n          hidden: false,\n          defaultValue: 0.99,\n          helpTextID: \"ccdc_chisquareprob\"\n        },\n        MinNumberAnomaly: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minAnomaly,\n          hidden: false,\n          defaultValue: 6,\n          helpTextID: \"ccdc_minnumberanomaly\"\n        },\n        UpdatingFrequency: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.updatingFrequency,\n          hidden: false,\n          defaultValue: 1,\n          helpTextID: \"ccdc_updatingfrequency\"\n        }\n      }\n    },\n    OptimalPathAsRaster: {\n      name: functionStrings.rasterFunctions.rfx.optimalPathAsRasterName,\n      snippet: functionStrings.rasterFunctions.rfx.optimalPathAsRasterSnip,\n      description: functionStrings.rasterFunctions.rfx.optimalPathAsRasterDesc,\n      category: \"distance\",\n      icon: \"optimalPathAsRaster.png\",\n      helpID: \"optimal-path-as-raster.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"OptimalPathAsRaster_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_destination_data\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_path_accumulation_raster\"\n        },\n        in_destination_data: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.destinationDataName,\n          hidden: false,\n          helpTextID: \"optimalpathasraster_indestinationdata\"\n        },\n        destination_field: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.destinationFieldName,\n          hidden: false,\n          domain: {\n            type: domainTypes.fields,\n            argumentName: \"in_destination_data\"\n          },\n          helpTextID: \"optimalpathasraster_destinationfield\"\n        },\n        in_distance_accumulation_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.distanceAccumulationRasterName,\n          hidden: false,\n          helpTextID: \"optimalpathasraster_indistanceaccumulationraster\"\n        },\n        in_back_direction_raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costBackdirectionRasterName,\n          hidden: false,\n          helpTextID: \"optimalpathasraster_inbackdirectionraster\"\n        },\n        path_type: {\n          required: false,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pathTypeName,\n          defaultValue: \"EACH_ZONE\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaLeastCostPathTypes\n          },\n          helpTextID: \"optimalpathasraster_pathtype\"\n        }\n      }\n    },\n    RasterCollectionFunction: {\n      name: functionStrings.rasterFunctions.rfx.rasterCollectionName,\n      snippet: functionStrings.rasterFunctions.rfx.rasterCollectionSnip,\n      description: functionStrings.rasterFunctions.rfx.rasterCollectionDesc,\n      category: \"analysis\",\n      icon: \"rasterCollection.png\",\n      helpID: \"process-raster-collection.htm\",\n      // hidden: true,\n      rasterFunctionArguments: {\n        RasterCollection: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"rastercollection_rastercollection\"\n        },\n        ItemFunction: {\n          required: false,\n          dataType: dataTypes.rfxtemplate,\n          displayName: functionStrings.rasterFunctions.rfxArgs.itemFunctionName,\n          hidden: false,\n          helpTextID: \"rastercollection_itemfunction\"\n        },\n        AggregationFunction: {\n          required: false,\n          dataType: dataTypes.rfxtemplate,\n          displayName: functionStrings.rasterFunctions.rfxArgs.aggregationFunctionName,\n          hidden: false,\n          helpTextID: \"rastercollection_aggregationfunction\"\n        },\n        ProcessingFunction: {\n          required: false,\n          dataType: dataTypes.rfxtemplate,\n          displayName: functionStrings.rasterFunctions.rfxArgs.processingFunctionName,\n          hidden: false,\n          helpTextID: \"rastercollection_processingfunction\"\n        },\n        WhereClause: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.whereClauseName,\n          hidden: true\n        },\n        AggregationDefinition: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.dimensionName,\n          hidden: false,\n          categoryRefId: \"rfxArgCat_AggregationDef\",\n          helpTextID: \"rastercollection_dimension\",\n          domain: {\n            type: domainTypes.aggregationdef,\n            argumentName: \"RasterCollection\",\n            helpTextIDs: {\n              maximumvalue: \"rastercollection_maximumvalue\",\n              minimumvalue: \"rastercollection_minimumvalue\",\n              keywordinterval: \"rastercollection_keywordinterval\",\n              type: \"rastercollection_type\",\n              unit: \"rastercollection_unit\",\n              valueinterval: \"rastercollection_valueinterval\",\n              dimension: \"rastercollection_dimension\"\n            }\n          }\n        },\n        QueryGeometry: {\n          required: false,\n          dataType: dataTypes.geometry,\n          displayName: functionStrings.rasterFunctions.rfxArgs.queryGeometryName,\n          hidden: true\n        }\n      }\n    },\n    LandTrendrFunction: {\n      name: functionStrings.rasterFunctions.rfx.landTrendrName,\n      snippet: functionStrings.rasterFunctions.rfx.landTrendrSnip,\n      description: functionStrings.rasterFunctions.rfx.landTrendrDesc,\n      category: \"analysis\",\n      icon: \"landTrendr.png\",\n      helpID: \"landtrendr-analysis.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"landtrendr_raster\"\n        },\n        ProcessingBand: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.processingBandName,\n          hidden: false,\n          defaultValue: \"Band_1\",\n          domain: {\n            type: domainTypes.bandName,\n            argumentName: \"Raster\"\n          },\n          helpTextID: \"landtrendr_processingband\"\n        },\n        SnappingDate: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.snappingDate,\n          hidden: false,\n          defaultValue: \"06-30\",\n          helpTextID: \"landtrendr_snappingdate\"\n        },\n        MaxSegments: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxNumSegments,\n          hidden: false,\n          defaultValue: 5,\n          helpTextID: \"landtrendr_maxsegments\"\n        },\n        VertexCountOvershoot: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.vertexCountOvershoot,\n          hidden: false,\n          defaultValue: 2,\n          helpTextID: \"landtrendr_vertexcountovershoot\"\n        },\n        SpikeThreshold: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.spikeThreshold,\n          hidden: false,\n          defaultValue: 0.9,\n          helpTextID: \"landtrendr_spikethreshold\"\n        },\n        RecoveryThreshold: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.recoveryThreshold,\n          hidden: false,\n          defaultValue: 0.25,\n          helpTextID: \"landtrendr_recoverythreshold\"\n        },\n        MinObs: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.minNumObs,\n          hidden: false,\n          defaultValue: 6,\n          helpTextID: \"landtrendr_minobs\"\n        },\n        PValueThreshold: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.pValueThreshold,\n          hidden: false,\n          defaultValue: 0.01,\n          helpTextID: \"landtrendr_pvaluethreshold\"\n        },\n        BestModelProportion: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.bestModelProportion,\n          hidden: false,\n          defaultValue: 1.25,\n          helpTextID: \"landtrendr_bestmodelproportion\"\n        },\n        PreventOneYearRecovery: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.preventOneYearRecovery,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"landtrendr_preventoneyearrecovery\"\n        },\n        RecoveryIncreaseTrend: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.recoveryIncreaseTrend,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"landtrendr_recoveryincreasetrend\"\n        },\n        OutputOtherBands: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outputOtherBands,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"landtrendr_outputotherbands\"\n        }\n      }\n    },\n    MergeRastersFunction: {\n      name: functionStrings.rasterFunctions.rfx.mergeRastersName,\n      snippet: functionStrings.rasterFunctions.rfx.mergeRastersSnip,\n      description: functionStrings.rasterFunctions.rfx.mergeRastersDesc,\n      category: \"dataManagement\",\n      icon: \"mergeRasters.png\",\n      helpID: \"merge-raster-function.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          hidden: false,\n          helpTextID: \"mergerasters_rasters\"\n        },\n        mosaicOperator: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.resolveOverlapMethodName,\n          hidden: false,\n          defaultValue: \"MT_FIRST\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriResolveOverlapMethods\n          },\n          helpTextID: \"mergerasters_mosaicoperator\"\n        }\n      }\n    },\n    PredictUsingRegressionFunction: {\n      name: functionStrings.rasterFunctions.rfx.predictUsingRegressionName,\n      snippet: functionStrings.rasterFunctions.rfx.predictUsingRegressionSnip,\n      description: functionStrings.rasterFunctions.rfx.predictUsingRegressionDesc,\n      category: \"classification\",\n      icon: \"predictUsingRegression.png\",\n      helpID: \"predict-using-regression.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          hidden: false,\n          helpTextID: \"predictusingregression_rasters\"\n        },\n        RegressionDefinitionFile: {\n          required: true,\n          dataType: dataTypes.file,\n          fileExtSupported: [\"ecd\"],\n          displayName: functionStrings.rasterFunctions.rfxArgs.inputDefinitionFileName,\n          hidden: false,\n          helpTextID: \"predictusingregression_regressiondefinitionfile\"\n        }\n      }\n    },\n    DimensionalMovingStatisticsFunction: {\n      name: functionStrings.rasterFunctions.rfx.dimensionalMovingStatisticsName,\n      snippet: functionStrings.rasterFunctions.rfx.dimensionalMovingStatisticsSnip,\n      description: functionStrings.rasterFunctions.rfx.dimensionalMovingStatisticsDesc,\n      category: \"statistical\",\n      icon: \"dimensionalMovingStatistics.png\",\n      helpID: \"dimensional-moving-statistics.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"dimensionalmovingstatistics_raster\"\n        },\n        Dimension: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.dimensionName,\n          hidden: false,\n          domain: {\n            type: domainTypes.rasterDimensions,\n            argumentName: \"Raster\"\n          },\n          helpTextID: \"dimensionalmovingstatistics_dimension\"\n        },\n        BackwardWindow: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.backwardWindowName,\n          defaultValue: 1,\n          hidden: false,\n          helpTextID: \"dimensionalmovingstatistics_backwardwindow\"\n        },\n        ForwardWindow: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.forwardWindowName,\n          defaultValue: 1,\n          hidden: false,\n          helpTextID: \"dimensionalmovingstatistics_forwardwindow\"\n        },\n        NoDataHandling: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.noDataHandlingName,\n          defaultValue: -1,\n          hidden: false,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriGANoDataHandling\n          },\n          helpTextID: \"dimensionalmovingstatistics_nodatahandling\"\n        },\n        StatisticsType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.statisticsTypeName,\n          defaultValue: 3,\n          hidden: false,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriGADimensionalMovingStatisticsTypes\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [12],\n                active: [\"PercentileValue\"],\n                inactive: [],\n                autoRevert: true\n              },\n              {\n                values: [4, 12],\n                active: [\"PercentileInterpolationType\"],\n                inactive: [],\n                autoRevert: true\n              },\n              {\n                values: [13],\n                active: [\"CircularWrapValue\"],\n                inactive: [],\n                autoRevert: true\n              }\n            ]\n          },\n          helpTextID: \"dimensionalmovingstatistics_statisticstype\"\n        },\n        PercentileValue: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.percentileValue,\n          hidden: false,\n          defaultValue: 90,\n          helpTextID: \"dimensionalmovingstatistics_percentilevalue\"\n        },\n        PercentileInterpolationType: {\n          required: false,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.percentileInterpolationType,\n          hidden: false,\n          defaultValue: \"AUTO_DETECT\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaZonalPercentileInterpolationTypes\n          },\n          helpTextID: \"dimensionalmovingstatistics_percentileinterpolationtype\"\n        },\n        CircularWrapValue: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.circularWrapValueName,\n          defaultValue: 360,\n          hidden: false,\n          helpTextID: \"dimensionalmovingstatistics_circularwrapvalue\"\n        }\n      },\n      editorArgumentOverride: {\n        active: true,\n        overrides: [\n          {\n            argumentNames: [\"PercentileValue\"],\n            triggerAttributes: \"minValue:0;maxValue:100\",\n            widget: {\n              path: \"rfx-cte-ranged-value-editor\"\n            }\n          }\n        ]\n      }\n    },\n    InterpolateRasterByDimensionFunction: {\n      name: functionStrings.rasterFunctions.rfx.interpolateRasterByDimensionFunctionName,\n      snippet: functionStrings.rasterFunctions.rfx.interpolateRasterByDimensionFunctionSnip,\n      description: functionStrings.rasterFunctions.rfx.interpolateRasterByDimensionFunctionDesc,\n      category: \"dataManagement\",\n      icon: \"interpolateRasterByDimensionFunction.png\",\n      helpID: \"interpolate-raster-by-dimension.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"interpolaterasterbydimension_raster\"\n        },\n        DimensionDefinition: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.variableName,\n          domain: {\n            type: domainTypes.mdimdef,\n            attributes: \"interpolateByDim\",\n            argumentName: \"Raster\",\n            helpTextIDs: {\n              variables: \"interpolaterasterbydimension_variables\",\n              dimension: \"interpolaterasterbydimension_dimension\",\n              dimensiondefinition: \"interpolaterasterbydimension_dimensiondefinition\",\n              values: \"interpolaterasterbydimension_values\",\n              startof: \"interpolaterasterbydimension_startofinterval\",\n              endof: \"interpolaterasterbydimension_endofinterval\",\n              step: \"interpolaterasterbydimension_step\",\n              unit: \"interpolaterasterbydimension_unit\",\n              targetraster: \"interpolaterasterbydimension_targetraster\"\n            }\n          },\n          helpTextID: \"interpolaterasterbydimension_variables\"\n        },\n        InterpolationMethod: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.interpolationMethodName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriInterpolateByDimMethods\n          },\n          helpTextID: \"interpolaterasterbydimension_interpolationmethod\"\n        },\n        IgnoreNoData: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.ignoreNoDataName,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"interpolaterasterbydimension_ignorenodata\"\n        }\n      }\n    },\n    TerrainFlattenFunction: {\n      name: functionStrings.rasterFunctions.rfx.terrainFlattenFunctionName,\n      snippet: functionStrings.rasterFunctions.rfx.terrainFlattenFunctionSnip,\n      description: functionStrings.rasterFunctions.rfx.terrainFlattenFunctionDesc,\n      category: \"SAR\",\n      icon: \"terrainFlatten.png\",\n      helpID: \"terrain-flatten-function.htm\",\n      hidden: true,\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"terrainflatten_raster\"\n        },\n        DEM: {\n          required: true,\n          dataType: dataTypes.raster,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.DEMName,\n          helpTextID: \"terrainflatten_dem\"\n        },\n        CorrectGeoid: {\n          required: false,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.geoIdName,\n          hidden: false,\n          defaultValue: true,\n          helpTextID: \"terrainflatten_correctgeoid\"\n        },\n        CalibrationType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.calibrationTypeName,\n          hidden: false,\n          defaultValue: 0,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriFlattenCalibrationTypes\n          },\n          helpTextID: \"terrainflatten_calibrationtype\"\n        }\n      }\n    },\n    CreateColorCompositeFunction: {\n      name: functionStrings.rasterFunctions.rfx.createColorCompositeFunctionName,\n      snippet: functionStrings.rasterFunctions.rfx.createColorCompositeFunctionSnip,\n      description: functionStrings.rasterFunctions.rfx.createColorCompositeFunctionDesc,\n      category: \"dataManagement\",\n      icon: \"createColorComposite.png\",\n      helpID: \"create-color-composite-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"createcolorcomposite_raster\"\n        },\n        Method: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.methodName,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.bandCompositeMethods\n          },\n          helpTextID: \"createcolorcomposite_method\"\n        },\n        BandIndexesR: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.bandIndexesR,\n          hidden: false,\n          helpTextID: \"createcolorcomposite_bandindexesr\"\n        },\n        BandIndexesG: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.bandIndexesG,\n          hidden: false,\n          helpTextID: \"createcolorcomposite_bandindexesg\"\n        },\n        BandIndexesB: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.bandIndexesB,\n          hidden: false,\n          helpTextID: \"createcolorcomposite_bandindexesb\"\n        }\n      }\n    },\n    SurfaceParamFunction: {\n      name: functionStrings.rasterFunctions.rfx.surfaceParametersName,\n      snippet: functionStrings.rasterFunctions.rfx.surfaceParametersSnip,\n      description: functionStrings.rasterFunctions.rfx.surfaceParametersDesc,\n      category: \"surface\",\n      icon: \"surfaceParameters.png\",\n      helpID: \"surface-parameters-function.htm\",\n      rasterFunctionArguments: {\n        Raster: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rasterName,\n          hidden: false,\n          helpTextID: \"surfaceparam_raster\"\n        },\n        SurfaceCalculation: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.surfaceParameterType,\n          defaultValue: 4,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriSurfaceParameterType\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [4],\n                active: [\"SlopeType\"],\n                inactive: [\"ProjectAzimuths\", \"UseEquatorialAspect\"],\n                autoRevert: false\n              },\n              {\n                values: [5],\n                active: [\"ProjectAzimuths\", \"UseEquatorialAspect\"],\n                inactive: [\"SlopeType\"],\n                autoRevert: false\n              },\n              {\n                values: [1],\n                inactive: [\"SlopeType\", \"ProjectAzimuths\", \"UseEquatorialAspect\"]\n              },\n              {\n                values: [2],\n                inactive: [\"SlopeType\", \"ProjectAzimuths\", \"UseEquatorialAspect\"],\n                autoRevert: false\n              },\n              {\n                values: [3],\n                inactive: [\"SlopeType\", \"ProjectAzimuths\", \"UseEquatorialAspect\"],\n                autoRevert: false\n              },\n              {\n                values: [6],\n                inactive: [\"SlopeType\", \"ProjectAzimuths\", \"UseEquatorialAspect\"],\n                autoRevert: false\n              },\n              {\n                values: [7],\n                inactive: [\"SlopeType\", \"ProjectAzimuths\", \"UseEquatorialAspect\"],\n                autoRevert: false\n              },\n              {\n                values: [8],\n                inactive: [\"SlopeType\", \"ProjectAzimuths\", \"UseEquatorialAspect\"],\n                autoRevert: false\n              },\n              {\n                values: [9],\n                inactive: [\"SlopeType\", \"ProjectAzimuths\", \"UseEquatorialAspect\"],\n                autoRevert: false\n              }\n            ]\n          },\n          helpTextID: \"surfaceparam_surfacecalculation\"\n        },\n        LocalSurface: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.localSurfaceType,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriLocalSurfaceType\n          },\n          helpTextID: \"surfaceparam_localsurface\"\n        },\n        AnalysisScaleWithUnits: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.neighborhoodDistance,\n          hidden: false,\n          domain: {\n            type: domainTypes.linearUnit,\n            enum: enums.gpsaLinearUnitTypes\n          },\n          defaultValue: \"1 Meters\",\n          helpTextID: \"surfaceparam_analysisscalewithunits\"\n        },\n        UseAdaptiveScale: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.useAdaptiveNeighborhood,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"surfaceparam_useadaptivescale\"\n        },\n        ZUnit: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.zUnit,\n          defaultValue: \"Meters\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.gpsaLinearUnitTypes\n          },\n          helpTextID: \"surfaceparam_zunit\"\n        },\n        SlopeType: {\n          required: true,\n          dataType: dataTypes.long,\n          hidden: false,\n          displayName: functionStrings.rasterFunctions.rfxArgs.outputSlopeType,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.outputSlopeType\n          },\n          helpTextID: \"surfaceparam_slopetype\"\n        },\n        ProjectAzimuths: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.projectAzimuths,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"surfaceparam_projectazimuths\"\n        },\n        UseEquatorialAspect: {\n          required: true,\n          dataType: dataTypes.boolean,\n          displayName: functionStrings.rasterFunctions.rfxArgs.useEquatorialAspect,\n          hidden: false,\n          defaultValue: false,\n          helpTextID: \"surfaceparam_useequatorialaspect\"\n        },\n        AnalysisMask: {\n          required: false,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.analysisMask,\n          hidden: false,\n          helpTextID: \"surfaceparam_analysismask\"\n        }\n      }\n    },\n\n    LeastCostCorridor: {\n      name: functionStrings.rasterFunctions.rfx.leastCostCorridorName,\n      snippet: functionStrings.rasterFunctions.rfx.leastCostCorridorSnip,\n      description: functionStrings.rasterFunctions.rfx.leastCostCorridorDesc,\n      category: \"distance\",\n      icon: \"leastCostCorridor.png\",\n      helpID: \"least-cost-corridor-global-function.htm\",\n      rasterFunctionArguments: {\n        ToolName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"LeastCostCorridor_sa\"\n        },\n        PrimaryInputParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"in_accumulative_cost_distance_raster1\"\n        },\n        OutputRasterParameterName: {\n          required: true,\n          dataType: dataTypes.string,\n          hidden: true,\n          defaultValue: \"out_raster\"\n        },\n        in_accumulative_cost_distance_raster1: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costDistanceRaster1,\n          hidden: false,\n          helpTextID: \"leastcostcorridor_inaccumulativecostdistanceraster1\"\n        },\n        in_back_direction_raster1: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.directionRaster1,\n          hidden: false,\n          helpTextID: \"leastcostcorridor_inbackdirectionraster1\"\n        },\n        in_accumulative_cost_distance_raster2: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.costDistanceRaster2,\n          hidden: false,\n          helpTextID: \"leastcostcorridor_inaccumulativecostdistanceraster2\"\n        },\n        in_back_direction_raster2: {\n          required: true,\n          dataType: dataTypes.raster,\n          displayName: functionStrings.rasterFunctions.rfxArgs.directionRaster2,\n          hidden: false,\n          helpTextID: \"leastcostcorridor_inbackdirectionraster2\"\n        },\n        threshold_method: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.thresholdMethod,\n          hidden: false,\n          defaultValue: \"NO_THRESHOLD\",\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriLeastCostThresholdMethod\n          },\n          editorStateTrigger: {\n            active: true,\n            triggers: [\n              {\n                values: [\"NO_THRESHOLD\"],\n                active: [],\n                inactive: [\"threshold\"],\n                autoRevert: false\n              },\n              {\n                values: [\"PERCENT_OF_LEAST_COST\"],\n                active: [\"threshold\"],\n                inactive: [],\n                autoRevert: false\n              },\n              {\n                values: [\"ACCUMULATIVE_COST\"],\n                active: [\"threshold\"],\n                inactive: [],\n                autoRevert: false\n              }\n            ]\n          },\n          helpTextID: \"leastcostcorridor_thresholdmethod\"\n        },\n        threshold: {\n          required: false,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.threshold,\n          hidden: false,\n          helpTextID: \"leastcostcorridor_threshold\"\n        }\n      }\n    },\n\n    GeometricMedianFunction: {\n      name: functionStrings.rasterFunctions.rfx.geometricMedianName,\n      snippet: functionStrings.rasterFunctions.rfx.geometricMedianSnip,\n      description: functionStrings.rasterFunctions.rfx.geometricMedianDesc,\n      category: \"dataManagement\",\n      icon: \"geometricMedian.png\",\n      helpID: \"geometric-median-function.htm\",\n      rasterFunctionArguments: {\n        Rasters: {\n          required: true,\n          dataType: dataTypes.rasterArray,\n          displayName: functionStrings.rasterFunctions.rfxArgs.rastersName,\n          hidden: false,\n          allowScalar: false,\n          helpTextID: \"geometricmedian_rasters\"\n        },\n        Epsilon: {\n          required: true,\n          dataType: dataTypes.double,\n          displayName: functionStrings.rasterFunctions.rfxArgs.epsilon,\n          hidden: false,\n          defaultValue: 0.001,\n          helpTextID: \"geometricmedian_epsilon\"\n        },\n        MaxIteration: {\n          required: true,\n          dataType: dataTypes.string,\n          displayName: functionStrings.rasterFunctions.rfxArgs.maxIterations,\n          hidden: false,\n          defaultValue: 10,\n          helpTextID: \"geometricmedian_maxiteration\"\n        },\n        CellsizeType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.cellsizeTypeName,\n          hidden: false,\n          defaultValue: 2,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriCellsizeTypes\n          },\n          helpTextID: \"geometricmedian_cellsizetype\"\n        },\n        ExtentType: {\n          required: true,\n          dataType: dataTypes.long,\n          displayName: functionStrings.rasterFunctions.rfxArgs.extentTypeName,\n          hidden: false,\n          defaultValue: 1,\n          domain: {\n            type: domainTypes.list,\n            enum: enums.esriExtentTypes\n          },\n          helpTextID: \"geometricmedian_extenttype\"\n        }\n      }\n    }\n  };\n  return schema;\n}\n","// per operator info lookup for Local fx...\nexport const LOCAL_RFX_OP_INFO_LUT = {\n  1: { opName: \"plus\", category: \"math\", icon: \"plus.png\", helpID: \"plus-function.htm\" },\n  2: { opName: \"minus\", category: \"math\", icon: \"minus.png\", helpID: \"minus.htm\" },\n  3: { opName: \"times\", category: \"math\", icon: \"times.png\", helpID: \"times-function.htm\" },\n  4: { opName: \"squareRoot\", category: \"math\", icon: \"squareRoot.png\", helpID: \"square-root-function.htm\" },\n  5: { opName: \"power\", category: \"math\", icon: \"power.png\", helpID: \"power-function.htm\" },\n  6: { opName: \"aCos\", category: \"mathTrigonometric\", icon: \"aCos.png\", helpID: \"acos-function.htm\" },\n  7: { opName: \"aSin\", category: \"mathTrigonometric\", icon: \"aSin.png\", helpID: \"asin-function.htm\" },\n  8: { opName: \"aTan\", category: \"mathTrigonometric\", icon: \"aTan.png\", helpID: \"atan-function.htm\" },\n  9: { opName: \"aTanH\", category: \"mathTrigonometric\", icon: \"aTanH.png\", helpID: \"atanh-function.htm\" },\n  10: { opName: \"abs\", category: \"math\", icon: \"abs.png\", helpID: \"abs-function.htm\" },\n  11: { opName: \"bitwiseAnd\", category: \"mathLogical\", icon: \"bitwiseAnd.png\", helpID: \"bitwise-and-function.htm\" },\n  12: {\n    opName: \"bitwiseLeftShift\",\n    category: \"mathLogical\",\n    icon: \"bitwiseLeftShift.png\",\n    helpID: \"bitwise-left-shift-function.htm\"\n  },\n  13: { opName: \"bitwiseNot\", category: \"mathLogical\", icon: \"bitwiseNot.png\", helpID: \"bitwise-not-function.htm\" },\n  14: { opName: \"bitwiseOr\", category: \"mathLogical\", icon: \"bitwiseOr.png\", helpID: \"bitwise-or-function.htm\" },\n  15: {\n    opName: \"bitwiseRightShift\",\n    category: \"mathLogical\",\n    icon: \"bitwiseRightShift.png\",\n    helpID: \"bitwise-right-shift-function.htm\"\n  },\n  16: { opName: \"bitwiseXor\", category: \"mathLogical\", icon: \"bitwiseXor.png\", helpID: \"bitwise-xor-function.htm\" },\n  17: { opName: \"booleanAnd\", category: \"mathLogical\", icon: \"booleanAnd.png\", helpID: \"boolean-and-function.htm\" },\n  18: { opName: \"booleanNot\", category: \"mathLogical\", icon: \"booleanNot.png\", helpID: \"boolean-not-function.htm\" },\n  19: { opName: \"booleanOr\", category: \"mathLogical\", icon: \"booleanOr.png\", helpID: \"boolean-or-function.htm\" },\n  20: { opName: \"booleanXor\", category: \"mathLogical\", icon: \"booleanXor.png\", helpID: \"boolean-xor-function.htm\" },\n  21: { opName: \"cos\", category: \"mathTrigonometric\", icon: \"cos.png\", helpID: \"cos-function.htm\" },\n  22: { opName: \"cosH\", category: \"mathTrigonometric\", icon: \"cosH.png\", helpID: \"cosh-function.htm\" },\n  23: { opName: \"divide\", category: \"math\", icon: \"divide.png\", helpID: \"divide-function.htm\" },\n  24: { opName: \"equalTo\", category: \"mathLogical\", icon: \"equalTo.png\", helpID: \"equal-to-function.htm\" },\n  25: { opName: \"exp\", category: \"math\", icon: \"exp.png\", helpID: \"exp-function.htm\" },\n  26: { opName: \"exp10\", category: \"math\", icon: \"exp10.png\", helpID: \"exp10-function.htm\" },\n  27: { opName: \"exp2\", category: \"math\", icon: \"exp2.png\", helpID: \"exp2-function.htm\" },\n  28: { opName: \"greaterThan\", category: \"mathLogical\", icon: \"greaterThan.png\", helpID: \"greater-than-function.htm\" },\n  29: {\n    opName: \"greaterThanEqual\",\n    category: \"mathLogical\",\n    icon: \"greaterThanEqual.png\",\n    helpID: \"greater-than-equal-function.htm\"\n  },\n  30: { opName: \"int\", category: \"math\", icon: \"int.png\", helpID: \"int-function.htm\" },\n  31: { opName: \"isNull\", category: \"mathLogical\", icon: \"isNull.png\", helpID: \"is-null-function.htm\" },\n  32: { opName: \"float\", category: \"math\", icon: \"float.png\", helpID: \"float-function.htm\" },\n  33: { opName: \"lessThan\", category: \"mathLogical\", icon: \"lessThan.png\", helpID: \"less-than-function.htm\" },\n  34: {\n    opName: \"lessThanEqual\",\n    category: \"mathLogical\",\n    icon: \"lessThanEqual.png\",\n    helpID: \"less-than-equal-function.htm\"\n  },\n  35: { opName: \"ln\", category: \"math\", icon: \"ln.png\", helpID: \"ln-function.htm\" },\n  36: { opName: \"log10\", category: \"math\", icon: \"log10.png\", helpID: \"log10-function.htm\" },\n  37: { opName: \"log2\", category: \"math\", icon: \"log2.png\", helpID: \"log2-function.htm\" },\n  44: { opName: \"mod\", category: \"math\", icon: \"mod.png\", helpID: \"mod-function.htm\" },\n  45: { opName: \"negate\", category: \"math\", icon: \"negate.png\", helpID: \"negate-function.htm\" },\n  46: { opName: \"notEqual\", category: \"mathLogical\", icon: \"notEqual.png\", helpID: \"not-equal-function.htm\" },\n  48: { opName: \"roundDown\", category: \"math\", icon: \"roundDown.png\", helpID: \"round-down-function.htm\" },\n  49: { opName: \"roundUp\", category: \"math\", icon: \"roundUp.png\", helpID: \"round-up-function.htm\" },\n  50: { opName: \"setNull\", category: \"mathConditional\", icon: \"setNull.png\", helpID: \"set-null-function.htm\" },\n  51: { opName: \"sin\", category: \"mathTrigonometric\", icon: \"sin.png\", helpID: \"sin-function.htm\" },\n  52: { opName: \"sinH\", category: \"mathTrigonometric\", icon: \"sinH.png\", helpID: \"sinh-function.htm\" },\n  53: { opName: \"square\", category: \"math\", icon: \"square.png\", helpID: \"square-function.htm\" },\n  56: { opName: \"tan\", category: \"mathTrigonometric\", icon: \"tan.png\", helpID: \"tan-function.htm\" },\n  57: { opName: \"tanH\", category: \"mathTrigonometric\", icon: \"tanH.png\", helpID: \"tanh-function.htm\" },\n  59: { opName: \"aCosH\", category: \"mathTrigonometric\", icon: \"aCosH.png\", helpID: \"acosh-function.htm\" },\n  60: { opName: \"aSinH\", category: \"mathTrigonometric\", icon: \"aSinH.png\", helpID: \"asinh-function.htm\" },\n  61: { opName: \"aTan2\", category: \"mathTrigonometric\", icon: \"aTan2.png\", helpID: \"atan2-function.htm\" },\n  78: { opName: \"con\", category: \"mathConditional\", icon: \"con1.png\", helpID: \"con-function.htm\" }\n};\n","export const appConfig = {\n  learnMoreDocDefaultURL: \"https://docuat.arcgis.com/en/arcgis-online/analyze/raster-function-template-mv-ra.htm\",\n  learnMoreDocBaseURL: \"https://docuat.arcgis.com/en/arcgis-online/\",\n  learnMoreDocDefaultHelpID: \"raster-function-template-mv-ra.htm\",\n  learnMoreDocPreviewHelpID: \"#ESRI_STEP_90347DF1F2C440BDB7B4D10AABAE178B\"\n} as const;\n","import { clone } from \"@arcgis/core/core/lang.js\";\n\nimport { RFTDefinition, RFTFunction, RFxArguments, RFxTemplate } from \"../../support/interfaces\";\nimport { LOCAL_RFX_OP_INFO_LUT, getSchema } from \"../../support/schema\";\nimport { RFxSchema } from \"../../support/schemaInterfaces\";\nimport { SupportedLocales, fetchCommonStrings } from \"../../support/localization\";\nimport { getGlobalFunctions, helpDoc } from \"../../support/resources\";\nimport { appConfig } from \"../../support/appConfig\";\n\nimport { isEmptyDataItem } from \"./type-gaurds\";\n\nexport const functionTypes = {\n  local: \"LocalFunction\",\n  gpAdapter: \"GPAdapterFunction\",\n  pythonAdapter: \"PythonAdapterFunction\"\n};\n\nexport const cellStatsOperations = [\n  38, 39, 40, 41, 42, 43, 47, 54, 55, 58, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 93, 94\n];\n\nconst defaultIconBasePath = \"./css/images/rfx/\";\n\ntype CommonStrings = typeof import(\"../../assets/t9n/common-strings.en.json\");\nlet commonStrings: CommonStrings = null;\n\nexport const getRFxDefinitionProperties = {\n  getPrefix: (rfxSchema: RFxSchema, key: string) => {\n    return key.indexOf(\"LocalFunction\") > -1\n      ? rfxSchema.name\n      : (key.charAt(0).toLowerCase() + key.slice(1)).replace(\"Function\", \"\");\n  },\n\n  getTitle: (rfxSchema: RFxSchema, prefix: string): string => {\n    return commonStrings.rasterFunctions.rfx[prefix + \"Name\"] || rfxSchema.name || prefix;\n  },\n\n  getCategoryAndTitle: (\n    rfxSchema: RFxSchema\n  ): {\n    category: string;\n    categoryTitle: string;\n  } => {\n    const category = rfxSchema.category || \"analysis\";\n    return {\n      category,\n      categoryTitle: commonStrings.categoryNames[category]\n    };\n  },\n\n  getName: (key: string): string => {\n    return key;\n  },\n\n  getSnippet: (rfxSchema: RFxSchema, prefix: string): string => {\n    return commonStrings.rasterFunctions.rfx[prefix + \"Snip\"] || rfxSchema.snippet || \"?...?!\";\n  },\n\n  getDescription: (rfxSchema: RFxSchema, prefix: string): string => {\n    return (\n      commonStrings.rasterFunctions.rfx[prefix + \"Desc\"] || rfxSchema.description || \"?...?!<div><br/>?...?!</div>\"\n    );\n  },\n\n  getIcon: (rfxSchema: RFxSchema, prefix: string): string => {\n    return defaultIconBasePath + (rfxSchema.icon || prefix + \".png\");\n  }\n};\n\n/**\n * Creates a RFT definition based on a RFx schema.\n *\n * @function createRFxDefinition\n * @param {RFxSchema} rfxSchema - The RFx schema object.\n * @param {string} key - The key for the RFx.\n * @param {string} [type] - The type of RFx template.\n * @param {RFxTemplate} [rftData] - The RFx template data.\n * @returns {RFTDefinition} A RFT definition object.\n */\n\nfunction createRFxDefinition({\n  rfxSchema,\n  key,\n  type\n}: {\n  rfxSchema: RFxSchema;\n  key: string;\n  type?: string;\n}): RFTDefinition {\n  const prefix = getRFxDefinitionProperties.getPrefix(rfxSchema, key);\n\n  const rfxDef = {\n    type: type || \"RasterFunctionTemplate\",\n    title: getRFxDefinitionProperties.getTitle(rfxSchema, prefix),\n    category: getRFxDefinitionProperties.getCategoryAndTitle(rfxSchema).category,\n    categoryTitle: getRFxDefinitionProperties.getCategoryAndTitle(rfxSchema).categoryTitle,\n    name: getRFxDefinitionProperties.getName(key),\n    snippet: getRFxDefinitionProperties.getSnippet(rfxSchema, prefix),\n    description: getRFxDefinitionProperties.getDescription(rfxSchema, prefix),\n    icon: getRFxDefinitionProperties.getIcon(rfxSchema, prefix),\n    helpID: rfxSchema.helpID || appConfig.learnMoreDocDefaultHelpID\n  };\n  return rfxDef;\n}\n\n/**\n * gets the function type from the function schema.\n *\n * @function getFunctionType\n * @param {RFxSchema} rfxSchema - The RFx schema object.\n * @param {string} functionName - The key for the RFx..\n * @returns {string} function type.\n */\nfunction getFunctionType(rfxSchema, functionName): string {\n  const rfxArgs = rfxSchema.rasterFunctionArguments;\n  let type = functionName;\n  if (type === \"CellStatisticsFunction\") {\n    type = \"LocalFunction\";\n  } else if (rfxArgs) {\n    if (rfxArgs.PythonModule && rfxArgs.ClassName) {\n      type = \"PythonAdapterFunction\";\n    } else if (rfxArgs.ToolName && rfxArgs.PrimaryInputParameterName && rfxArgs.OutputRasterParameterName) {\n      type = \"GPAdapterFunction\";\n    }\n  }\n  return type;\n}\n\n/**\n * Creates list of all supported functions and their definition.\n *\n * @function getFunctionsAndCategories\n * @public\n * @returns {Promise<{RFTDefinition[], string[]}>} A promise that resolves with the list of RFT definitions.\n */\n\nexport async function getFunctionsAndCategories(): Promise<{ rfxFunctions: RFTDefinition[]; rfxCategories: string[] }> {\n  const sysRFxDefs: RFTDefinition[] = [];\n  const sysRFxCategories = new Set<string>();\n  commonStrings = await fetchCommonStrings();\n  const schema = await getSchema();\n\n  for (const key in schema) {\n    if (key === \"LocalFunction\") {\n      const rfxSchemaCpy = clone(schema[key]);\n\n      const elmInfos = rfxSchemaCpy.rasterFunctionArguments.Rasters.elementInfos;\n      delete rfxSchemaCpy.rasterFunctionArguments.Rasters.elementInfos;\n\n      elmInfos.forEach((elmInfo) => {\n        elmInfo.values.forEach((opCode: number) => {\n          const info = LOCAL_RFX_OP_INFO_LUT[opCode];\n          if (info) {\n            rfxSchemaCpy.name = info.opName;\n            rfxSchemaCpy.icon = `${info.opName}${\".png\"}`;\n            rfxSchemaCpy.category = info.category || \"math\";\n            rfxSchemaCpy.helpID = info.helpID;\n          } else {\n            rfxSchemaCpy.category = \"math\";\n            rfxSchemaCpy.name = \"\";\n          }\n\n          sysRFxDefs.push(createRFxDefinition({ rfxSchema: rfxSchemaCpy, key: `${key}${\"__\"}${opCode}`, type: key }));\n          sysRFxCategories.add(rfxSchemaCpy.category);\n        });\n      });\n    } else if (schema[key].hidden !== true) {\n      const type = getFunctionType(schema[key], key);\n      const rfxDefinition = createRFxDefinition({ rfxSchema: schema[key], key, type });\n      sysRFxDefs.push(rfxDefinition);\n      sysRFxCategories.add(rfxDefinition.category);\n    }\n  }\n\n  // add NDVI-colorized\n  sysRFxDefs.push(\n    createRFxDefinition({\n      rfxSchema: { name: \"ndvi colorized\", category: \"analysis\", helpID: \"ndvi-colorized-function.htm\" },\n      key: \"ndviColorizedFunction\"\n    })\n  );\n\n  /** commenting this for the current release as its hidden */\n  // add Aggregate Multidimensional Function\n  // sysRFxDefs.push(\n  //   createRFxDefinition({\n  //     rfxSchema: { name: \"aggregate multidimensional\", category: \"dataManagement\", helpID: \"aggregate-multidimensional-function.htm\" },\n  //     key: \"aggregateMultidimensionalFunction\"\n  //   })\n  // );\n\n  return {\n    rfxFunctions: sysRFxDefs.sort((a, b) => a.title.localeCompare(b.title)),\n    rfxCategories: [...sysRFxCategories].sort()\n  };\n}\n\n/**\n * Creates a Raster Function Variable based on the given name and argument information.\n * @param {string} name - The name of the Raster Function Variable.\n * @param {object} argInfo - Information about the argument of the Raster Function Variable.\n * @returns {object} A Raster Function Variable with the following properties:\n *  name: string - The name of the Raster Function Variable.\n *  isPublic: boolean - Whether or not the variable is public.\n *  isDataset: boolean - Whether or not the variable is a dataset.\n *  value: any - The value of the variable.\n *  type: string - The type of the variable.\n */\nfunction createRasterFunctionVariable({ name, argInfo }: { name: string; argInfo: any }) {\n  const rfv = {\n    name: name,\n    isPublic: false,\n    isDataset: argInfo.dataType === \"raster\",\n    value: argInfo.defaultValue, // || undefined,\n    displayName: argInfo.displayName,\n    type: \"RasterFunctionVariable\"\n  };\n  if (argInfo.dataType === \"rasterarray\") {\n    rfv.value = { elements: [], type: \"ArgumentArray\" };\n  } else if (rfv.value && argInfo.dataType === \"rasterinfo\") {\n    rfv.value.type = \"RasterInfo\";\n  }\n  return rfv;\n}\n\n/**\n * Builds a raster function template (RFT) from a raster function schema (RFxSchema).\n * @param {string} type - The type of RFT to create (e.g. \"LocalFunction\").\n * @param {RFxSchema} rfxSchema - The RFxSchema to use for building the RFT.\n * @returns {RFxTemplate} The resulting RFT.\n */\nfunction buildRFTFromRFxSchema({ type, rfxSchema }: { type: string; rfxSchema: RFxSchema }): RFxTemplate {\n  const rfx: RFTFunction = {\n    type: type,\n    pixelType: \"Unknown\",\n    name: rfxSchema.name || type,\n    description: rfxSchema.snippet || \"\"\n  };\n\n  const rfxArgs: RFxArguments = {};\n  let rfxArg: any;\n  const args = rfxSchema.rasterFunctionArguments;\n  for (const key in args) {\n    rfxArg = createRasterFunctionVariable({ name: key, argInfo: args[key] });\n    rfxArgs[key] = rfxArg;\n  }\n\n  if (type === \"LocalFunction\" && rfxSchema.NRasters) {\n    const argInfo = { dataType: \"raster\" };\n    const rastersArg = rfxArgs.Rasters;\n    rastersArg.name = \"_Rasters\";\n    for (let i = 0; i < rfxSchema.NRasters; ++i) {\n      rastersArg.value.elements.push(\n        createRasterFunctionVariable({ name: i == 0 ? \"Raster\" : i == 1 ? \"InRaster2\" : \"InRaster3\", argInfo })\n      );\n    }\n  }\n\n  if (Object.keys(rfxArgs).length > 1 || rfxSchema.hasArgumentsObject) {\n    rfxArgs.type = type + \"Arguments\";\n  }\n\n  if (type === \"TableFunction\" && rfxArgs && rfxArgs.AttributeTableAsRecordSet) {\n    delete rfxArgs.AttributeTableAsRecordSet;\n  }\n\n  return {\n    name: rfx.name,\n    description: rfx.description,\n    function: rfx,\n    arguments: rfxArgs.type ? rfxArgs : rfxArg,\n    functionType: 0,\n    thumbnail: \"\",\n    thumbnailEx: \"\",\n    help: \"\"\n  };\n}\n\n/**\n * @private\n * Retrieves a function schema of the local function with the operatinal code.\n * @param {string} functionName - The name of the function to get the template for.\n * @param {HashMap<RFxSchema>} schema - the entire schema of the functions\n * @returns {RFxSchema} schema of a particular local function\n */\n\nfunction getLocalFunctionSchema(functionName: string, schema: HashMap<RFxSchema>): RFxSchema {\n  const opCode = Number.parseInt(functionName.split(\"__\")[1], 10);\n  const rfxSchema = schema.LocalFunction;\n  rfxSchema.NRasters = rfxSchema.rasterFunctionArguments.Rasters.elementInfos.find(\n    (elemInfo) => elemInfo.values.indexOf(opCode) > -1\n  )?.inputArgs.length;\n  rfxSchema.rasterFunctionArguments.Operation.defaultValue = opCode;\n  return rfxSchema;\n}\n\n/**\n * @private\n * Create the RFT for AggregateMultidimensional function\n * @param {HashMap<RFxSchema>} schema - the entire schema of the functions\n * @returns {RFxTemplate} Template data of aggregate multidimensional function\n */\nfunction buildAggregateMultidimensionalRFT(schema: HashMap<RFxSchema>, strings: CommonStrings): RFxTemplate {\n  // Raster -> Mdimdef\n  // Aggregation def -> cell stats\n  const cellStats = buildRFTFromRFxSchema({ type: \"CellStatisticsFunction\", rfxSchema: schema.CellStatisticsFunction });\n  for (const key in cellStats.arguments) {\n    const arg = cellStats.arguments[key];\n    if (key === \"Operation\") {\n      arg.isPublic = true;\n      arg.value = 40;\n    } else if (key === \"PercentileValue\") {\n      arg.isPublic = true;\n    } else if (key === \"PercentileInterpolationType\") {\n      arg.isPublic = true;\n    }\n  }\n  cellStats.type = \"RasterFunctionTemplate\";\n  cellStats.name = cellStats.description = \"Raster Function Template\";\n  cellStats.customFunction = \"aggregatemultidimensional\";\n  cellStats.function.customFunction = true;\n  cellStats.function.type = \"LocalFunction\";\n  cellStats.arguments.type = \"LocalFunctionArguments\";\n\n  const mdimfilter = buildRFTFromRFxSchema({\n    type: \"MultidimensionalFilterFunction\",\n    rfxSchema: schema.MultidimensionalFilterFunction\n  });\n  for (const key in mdimfilter.arguments) {\n    const arg = mdimfilter.arguments[key];\n    if (key === \"Raster\") {\n      arg.isPublic = true;\n    } else if (key === \"Filter\") {\n      arg.isPublic = true;\n    }\n  }\n  mdimfilter.type = \"RasterFunctionTemplate\";\n  mdimfilter.name = mdimfilter.description = \"Raster Function Template\";\n  mdimfilter.function.customFunction = true;\n  mdimfilter.customFunction = \"aggregatemultidimensional\";\n\n  const aggrMdim = buildRFTFromRFxSchema({\n    type: \"RasterCollectionFunction\",\n    rfxSchema: schema.RasterCollectionFunction\n  });\n  for (const key in aggrMdim.arguments) {\n    const arg = aggrMdim.arguments[key];\n    if (key === \"RasterCollection\") {\n      aggrMdim.arguments[key] = mdimfilter; // replace RFV with RFT\n    } else if (key === \"AggregationFunction\") {\n      aggrMdim.arguments[key] = cellStats; // replace RFV with RFT\n    } else if (key === \"AggregationDefinition\") {\n      arg.isPublic = true;\n    }\n  }\n  aggrMdim.name = strings.rasterFunctions.rfx.aggregateMultidimensionalName;\n  aggrMdim.description = strings.rasterFunctions.rfx.aggregateMultidimensionalSnip;\n  aggrMdim.function.name = strings.rasterFunctions.rfx.aggregateMultidimensionalName;\n  aggrMdim.function.description = strings.rasterFunctions.rfx.aggregateMultidimensionalSnip;\n  aggrMdim.function.customFunction = true;\n  aggrMdim.customFunction = \"aggregatemultidimensional\";\n\n  return aggrMdim;\n}\n\n/**\n * @private\n * Create the RFT for NDVI colorized function\n * @param {HashMap<RFxSchema>} schema - the entire schema of the functions\n * @returns {RFxTemplate} Template data of NVDI colorized function\n */\nfunction buildNDVIColorizedFunction(schema: HashMap<RFxSchema>, strings: CommonStrings) {\n  const ndvi = buildRFTFromRFxSchema({ type: \"NDVIFunction\", rfxSchema: schema.NDVIFunction });\n  for (const key in ndvi.arguments) {\n    const arg = ndvi.arguments[key];\n    if (key === \"Raster\") {\n      arg.isPublic = true;\n    } else if (key === \"VisibleBandID\" || key === \"InfraredBandID\") {\n      arg.value = 0;\n      arg.isPublic = true;\n    }\n  }\n  ndvi.type = \"RasterFunctionTemplate\";\n  ndvi.name = \"Raster Function Template \";\n  ndvi.description = \"Raster Function Template\";\n  ndvi.customFunction = \"ndvicolorized\";\n\n  const ndviClrzd = buildRFTFromRFxSchema({ type: \"ColormapFunction\", rfxSchema: schema.ColormapFunction });\n  for (const key in ndviClrzd.arguments) {\n    const arg = ndviClrzd.arguments[key];\n    if (key === \"Raster\") {\n      ndviClrzd.arguments[key] = ndvi; // replace RFV with RFT\n    } else if (key === \"ColormapName\") {\n      arg.value = \"NDVI3\";\n      arg.isPublic = true;\n    } else if (key === \"ColorSchemeType\" || key === \"ColorRamp\") {\n      arg.isPublic = true;\n    }\n  }\n  ndviClrzd.name = strings.rasterFunctions.rfx.ndviColorizedName;\n  ndviClrzd.description = strings.rasterFunctions.rfx.ndviColorizedSnip;\n  ndviClrzd.customFunction = \"ndvicolorized\";\n  return ndviClrzd;\n}\n\n/**\n * Retrieves a function template for a given function name.\n * @param {string} functionName - The name of the function to get the template for.\n *\n */\nexport async function getFunctionTemplate(functionName: string) {\n  const schema = await getSchema();\n  commonStrings = await fetchCommonStrings();\n  let rfxSchema: RFxSchema, type;\n  if (functionName === \"aggregateMultidimensionalFunction\") {\n    return buildAggregateMultidimensionalRFT(schema, commonStrings);\n  }\n  if (functionName === \"ndviColorizedFunction\") {\n    return buildNDVIColorizedFunction(schema, commonStrings);\n  }\n  if (functionName.indexOf(\"LocalFunction\") > -1) {\n    rfxSchema = getLocalFunctionSchema(functionName, schema);\n    type = \"LocalFunction\";\n  } else {\n    rfxSchema = schema[functionName];\n    type = getFunctionType(rfxSchema, functionName);\n  }\n  return buildRFTFromRFxSchema({ type, rfxSchema });\n}\n\n/**\n * Primarly used to function with getFunctionSchema function\n * function takes an RFxArguments object as input and returns the name of the corresponding function,\n * based on the function type specified in the arguments.\n * @param rfxArgs\n * @returns string\n */\nexport function getFunctionName(rfxArgs: any): string {\n  let widgetName;\n  const functionType = rfxArgs.type.replace(\"Arguments\", \"\");\n  const localFunctionOperations = helpDoc.localFunctionOperations;\n\n  if (functionType.toLowerCase() === functionTypes.local.toLowerCase()) {\n    const operation = rfxArgs.Operation,\n      operationValue = operation && operation.value;\n    const localOp = localFunctionOperations.find((op) => op.key === operationValue);\n    if (!isEmptyDataItem(localOp)) {\n      return localOp.label;\n    }\n    if (cellStatsOperations.indexOf(operationValue) >= 0) {\n      widgetName = \"CellStatisticsFunction\";\n    }\n  }\n\n  if (functionType.toLowerCase() === functionTypes.gpAdapter.toLowerCase()) {\n    const toolNameArg = rfxArgs.ToolName;\n    widgetName = toolNameArg && toolNameArg.value && toolNameArg.value.replace(\"_sa\", \"\");\n  }\n\n  if (functionType.toLowerCase() === functionTypes.pythonAdapter.toLowerCase()) {\n    let classname = rfxArgs.ClassName;\n    if (classname && classname.value) {\n      classname = classname.value;\n    }\n    widgetName = classname;\n  }\n\n  return widgetName || functionType;\n}\n\n/**\n * TODO: combine \"getFunctionName\" into this.\n * Gets the name of the RFxTemplate.\n * @param rfxTemplate The RFxTemplate object to get the name from.\n * @returns The name of the RFxTemplate.\n */\nexport function getRFTFunctionIdentifier(rfxTemplate: RFxTemplate): string {\n  const functionType = rfxTemplate?.function?.type;\n  const functionArguments = rfxTemplate?.arguments;\n  const specialCaseMap = helpDoc.rfxNameSpecialCases;\n  const localFunctionOperations = helpDoc.localFunctionOperations;\n\n  switch (functionType) {\n    case functionTypes.local:\n      const operationValue = functionArguments?.Operation?.value;\n      const localOp = localFunctionOperations.find((op) => op.key === operationValue);\n      if (!isEmptyDataItem(localOp)) {\n        return `${functionType}${\"__\"}${localOp.key}`;\n      } else if (cellStatsOperations.indexOf(operationValue) >= 0) {\n        return \"CellStatisticsFunction\";\n      }\n      break;\n    case functionTypes.pythonAdapter: {\n      const pyClassName = functionArguments?.ClassName?.value;\n      return pyClassName || null;\n    }\n    case functionTypes.gpAdapter: {\n      const toolNameValue = functionArguments?.ToolName?.value?.replace(\"_sa\", \"\");\n      return toolNameValue || null;\n    }\n    default: {\n      const specialCase = specialCaseMap.find((sc) => sc.key === functionType);\n      return specialCase?.value || functionType || null;\n    }\n  }\n  return null;\n}\n\nexport async function hasGlobalFunction(rft: RFxTemplate, locale: SupportedLocales): Promise<boolean> {\n  // Get global functions for english locale even if its not the current locale\n  const globalFunctions = await getGlobalFunctions(\"en\");\n  if (locale !== \"en\") {\n    const localizedGlobalFunctions = await getGlobalFunctions(locale);\n    globalFunctions.push(...localizedGlobalFunctions);\n  }\n\n  const stack = [rft];\n  while (stack.length > 0) {\n    const currentRft = stack.shift();\n\n    for (const rftKeys in currentRft) {\n      if (rftKeys === \"function\" && globalFunctions.indexOf(currentRft[rftKeys].name) > -1) {\n        return true; // Found a global function\n      } else if (currentRft[rftKeys] && typeof currentRft[rftKeys] === \"object\") {\n        stack.push(currentRft[rftKeys]);\n      }\n    }\n  }\n\n  return false; // No global function found\n}\n","import * as esriLang from \"@arcgis/core/core/lang.js\";\n\nimport { RFxArguments, RFxTemplate, RFxVariable } from \"../../support/interfaces\";\nimport { dataTypes, domainTypes, getEnums, helpDoc } from \"../../support/resources\";\nimport {\n  ElementInfoInputArg,\n  RFxArgumentEnum,\n  RFxArgumentEnumElement,\n  RFxArgumentSchema,\n  RFxSchema\n} from \"../../support/schemaInterfaces\";\n\nimport { ARGS_KEYWORD, RFT_TYPE, RFV_TYPE, TYPE_KEYWORD, isEmptyDataItem, isRFxArg } from \"./type-gaurds\";\nimport { getFunctionName } from \"./functions\";\nimport { JSON_TYPES, MULTIDIMENSIONAL_RULES } from \"./interfaces\";\n\nexport const SwitchableTypes = {\n  List: \"list\",\n  Unit: \"linearUnit\",\n  Number: \"number\",\n  Field: \"field\"\n} as const;\n\nexport type SwitchableTypes = (typeof SwitchableTypes)[keyof typeof SwitchableTypes];\n\nexport function isSingleArgumentFunction(rfxArgs: RFxArguments): boolean {\n  const isDatasetDefined = !isEmptyDataItem(rfxArgs?.isDataset);\n  const isRFV = rfxArgs?.type === RFV_TYPE;\n  return isDatasetDefined && isRFV;\n}\n\n/**\n * Deep clone an object or an array, excluding specified properties.\n * Used to avoid circular dependency error.\n *\n * @param src The source object or array to clone.\n * @param excludeProps An array of property names to exclude from the cloned object.\n * @returns A deep copy of the input object or array.\n */\nexport function cloneRFT(src: any, excludeProps?: string[]): any {\n  if (isEmptyDataItem(excludeProps)) {\n    return esriLang.clone(src);\n  }\n  // Create a new object to hold the cloned properties\n  const dest = {};\n\n  // If the input is an object and not an array, clone each of its properties\n  if (typeof src === \"object\" && src !== null && !Array.isArray(src)) {\n    for (const propName in src) {\n      if (src.hasOwnProperty(propName) && excludeProps.indexOf(propName) < 0) {\n        dest[propName] = cloneRFT(src[propName], excludeProps);\n      }\n    }\n    return dest;\n  }\n\n  // If the input is an array, clone each of its elements\n  if (Array.isArray(src)) {\n    return src.map((element) => {\n      return cloneRFT(element, excludeProps);\n    });\n  }\n\n  // If the input is a primitive type, use esriLang.clone to create a copy\n  return esriLang.clone(src);\n}\n\n/**\n * Get the value of an argument with case-insensitive name matching.\n * @param argName - The name of the argument to retrieve.\n * @param args - The object containing the arguments to search.\n * @returns The value of the argument with the given name, or undefined if not found.\n */\nexport function getCaseInsensitiveArg<T>(argName: string, args: Record<string, T>): T | undefined {\n  if (isEmptyDataItem(argName) || isEmptyDataItem(args)) {\n    return undefined;\n  }\n\n  const argKey = Object.keys(args).find((key) => key.toLowerCase() === argName.toLowerCase());\n\n  return argKey ? args[argKey] : undefined;\n}\n\n/**\n * Finds the schema key that matches the given RFx argument key in a case-insensitive manner.\n *\n * @param {RFxSchema} functionSchemaArgs - The schema to search for the argument key.\n * @param {string} rfxArgKey - The RFx argument key to find a matching schema key for.\n * @returns {string} - The matching schema key.\n */\nexport function getSchemaArgKey(functionSchemaArgs: RFxSchema, rfxArgKey: string): string {\n  if (!functionSchemaArgs) {\n    return \"\";\n  }\n\n  const schemaKeys = Object.keys(functionSchemaArgs);\n\n  if (rfxArgKey === undefined && schemaKeys.length === 1) {\n    // If the rfxArg doesn't have a key, and the schema only has 1 argument defined,\n    // return it\n    return schemaKeys[0];\n  }\n\n  const matchingSchemaKey = schemaKeys.find((key) => key.toLowerCase() === rfxArgKey?.toLowerCase());\n\n  return matchingSchemaKey ?? \"\";\n}\n\n/**\n * Gets the name of the RFxTemplate.\n * @param rfxTemplate The RFxTemplate object to get the name from.\n * @returns The name of the RFxTemplate.\n */\nexport async function getRFTName(rfxTemplate: RFxTemplate): Promise<string> {\n  const functionType = rfxTemplate?.function?.type?.toLowerCase()?.replace(\"function\", \"\");\n  const functionArguments = rfxTemplate?.arguments;\n  const specialCaseMap = helpDoc.rfxNameSpecialCases;\n  const localFunctionOperations = helpDoc.localFunctionOperations;\n  const enums = await getEnums();\n\n  switch (functionType) {\n    case \"local\":\n      const operationValue = functionArguments?.Operation?.value;\n      const localOp = localFunctionOperations.find((op) => op.key === operationValue);\n      if (!isEmptyDataItem(localOp)) {\n        return localOp.label;\n      } else if (enums.cellStatisticsTypes.some((op) => op.key === operationValue)) {\n        return \"CellStatistics\";\n      }\n      break;\n    case \"pythonadapter\": {\n      const pyClassName = functionArguments?.ClassName?.value;\n      return pyClassName || null;\n    }\n    case \"gpadapter\": {\n      const toolNameValue = functionArguments?.ToolName?.value?.toLowerCase()?.replace(\"_sa\", \"\");\n      const specialCase = specialCaseMap.find((sc) => sc.key === toolNameValue);\n      return specialCase?.value || toolNameValue || null;\n    }\n    default: {\n      const specialCase = specialCaseMap.find((sc) => sc.key === functionType);\n      return specialCase?.value || functionType || null;\n    }\n  }\n  return null;\n}\n\nexport function getArgRFT(rfxArg) {\n  if (!rfxArg) {\n    return;\n  }\n  if (rfxArg.type === RFT_TYPE) {\n    return rfxArg;\n  } else if (rfxArg.value && rfxArg.value.type === RFT_TYPE) {\n    return rfxArg.value;\n  }\n}\n\n/**\n * This function takes a schema object and an RFxTemplate object as input and returns\n * the schema for the corresponding function, based on the function type and name\n * determined by getFunctionName.\n * @param param\n * @returns\n */\nexport function getFunctionSchema({\n  schema,\n  rfxTemplate\n}: {\n  schema: HashMap<RFxSchema>;\n  rfxTemplate: RFxTemplate;\n}): RFxSchema | undefined {\n  if (isEmptyDataItem(rfxTemplate?.function?.type)) {\n    return;\n  }\n  const functionType = rfxTemplate.function.type;\n  const rfxArgs = rfxTemplate?.arguments;\n  let functionName = getFunctionName(rfxArgs);\n  // The following handles case of \"LocalFunction\"\n  if (!functionName || (!schema.hasOwnProperty(functionName) && schema.hasOwnProperty(functionType))) {\n    functionName = functionType;\n  }\n\n  return schema[functionName];\n}\n\nexport function hasRasterElements(rfxArg: any): boolean {\n  // Check if an argument has raster elements in it\n  // Can be { value: { elements[] } }, in which case we check in the elements\n  // Else check value itself\n  // Assumption: the array will only have raster/RFT elements, so checking only first element\n  if (!rfxArg || !rfxArg.value) {\n    return false;\n  }\n  const elements = rfxArg.value.elements ? rfxArg.value.elements : rfxArg.value;\n  const element = elements[0];\n  return element && (element.isDataset || element.type === RFT_TYPE);\n}\n\n/**\n * Determines if the given RFxTemplate should honor the \"isPublic\" flag.\n * If the RFxTemplate has any aliases defined, the \"isPublic\" flag is honored.\n * Otherwise, the \"isPublic\" flag is ignored.\n * Additionally, if any argument in the RFxTemplate has \"isPublic\" set to true,\n * the method returns true.\n * @param {RFxTemplate} rfxTemplate - The RFxTemplate to check.\n * @returns {boolean} - True if the RFxTemplate should honor the \"isPublic\" flag, false otherwise.\n */\nexport function shouldHonorIsPublic(rfxTemplate: RFxTemplate): boolean {\n  if (!rfxTemplate || !rfxTemplate[ARGS_KEYWORD]) {\n    return false;\n  }\n\n  // If RFT has aliases, honor isPublic\n  if (rfxTemplate.aliases) {\n    return true;\n  }\n\n  const checkRFxArg = (rfxArg: any): boolean => {\n    if (!rfxArg) {\n      return false;\n    }\n\n    // If rfxArg is public, return true\n    if (rfxArg.isPublic) {\n      return true;\n    }\n\n    // If rfxArg contains raster elements, check if any of the elements are public\n    if (hasRasterElements(rfxArg)) {\n      const elements = rfxArg.value && rfxArg.value.elements ? rfxArg.value.elements : rfxArg.value;\n      if (elements && Array.isArray(elements)) {\n        return elements.some((element) => checkRFxArg(element));\n      }\n    }\n\n    // Recursively check the rfxArg's RFT if it exists\n    const rfxArgRFT = getArgRFT(rfxArg);\n    return rfxArgRFT ? shouldHonorIsPublic(rfxArgRFT) : false;\n  };\n\n  const rfxArgs = rfxTemplate[ARGS_KEYWORD];\n  if (isRFxArg(rfxArgs)) {\n    return checkRFxArg(rfxArgs);\n  }\n\n  return Object.keys(rfxArgs).some((rfxArgName) => {\n    const rfxArg = rfxArgs[rfxArgName];\n    if (isRFxArg(rfxArg)) {\n      return checkRFxArg(rfxArg);\n    }\n  });\n}\n\n/**\n * Determines whether to use an RFx argument widget for the given argument schema.\n * @param argSchema - The argument schema to evaluate.\n * @returns True if an RFx argument widget should be used for the given schema, false otherwise.\n */\nexport function useRFxArgWidget(argSchema: RFxArgumentSchema): boolean {\n  if (!argSchema) {\n    return false;\n  }\n  const isRasterArray = argSchema.dataType === dataTypes.rasterArray;\n  const hasElementInfos = Boolean(argSchema.elementInfos);\n  const isTable = argSchema.dataType === dataTypes.table;\n  return (isRasterArray && hasElementInfos) || isTable;\n}\n\n/**\n * Check if an argument name is contained in an array of argument names.\n *\n * @param {string[]} argNameArr - Array of argument names.\n * @param {string} argName - Name of the argument to check.\n * @returns {boolean} - `true` if the argument name is contained in the array, `false` otherwise.\n */\nexport function containsArgName(argNameArr: string[], argName: string): boolean {\n  return Array.isArray(argNameArr) && argNameArr.some((activeArg) => activeArg.toLowerCase() === argName.toLowerCase());\n}\n\n/**\n * Checks whether an argument has RFT elements in it.\n * Can be { value: { elements[] } }, in which case we check in the elements, else check value itself\n * @param {any} rfxArg - The RFx argument to check for RFT elements.\n * @returns {boolean} True if the argument has RFT elements, false otherwise.\n */\nexport function hasRFTElements(rfxArg: any): boolean {\n  if (!rfxArg || !rfxArg.value) {\n    return false;\n  }\n  const elements = rfxArg.value.elements ? rfxArg.value.elements : rfxArg.value;\n\n  if (Array.isArray(elements)) {\n    return elements.some(function (element) {\n      return element && element.type === RFT_TYPE;\n    });\n  }\n\n  return false;\n}\n\nexport function getEnumData(enumData: RFxArgumentEnum): RFxArgumentEnum {\n  enumData?.forEach((enumElement: RFxArgumentEnumElement) => {\n    enumElement.key = enumElement.key.toString();\n  });\n  return enumData;\n\n  // dont remove this snippet. Can be used when we have to hide parameter options\n  // function _removeOptionsToHide(): RFxArgumentEnum {\n  //   const optionsToHide = {\n  //     StatisticsType: [5, 6, 7], //[median, majority, minority]\n  //     RegressionType: [3, 4], // [trendMannKendall, trendSeasonalKendall]\n  //     ChangeType: [4, 5, 6, 7] //[longestChange, shortestChange, fastestChange, slowestChange]\n  //   };\n  //   if (portalMode === \"multitenant\" && optionsToHide[enumName]) {\n  //     enumData = enumData.filter((rfxArgenum) => rfxArgenum && optionsToHide[enumName].indexOf(rfxArgenum.key) < 0);\n  //   }\n  //   return enumData;\n  // }\n}\n\n//@resh TODO: remove this function, came with porting, can be done without this.\nexport function parseSwitchableDomainArguments(attributes, rfxArgs) {\n  attributes.forEach((attribute) => {\n    if (attribute.type === \"field\") {\n      const argument = getCaseInsensitiveArg<{ name: string }>(attribute.argumentName, rfxArgs);\n      attribute.argumentName = argument.name;\n      attribute.layerArgument = argument;\n    } else if (attribute.type === domainTypes.list || attribute.type === domainTypes.linearUnit) {\n      attribute.enumStore = getEnumData[attribute.enum];\n    }\n  });\n  return attributes;\n}\n\ninterface RFxArgumentSchemaWithIndex extends RFxArgumentSchema {\n  [key: string]: unknown;\n}\n\nexport function getRasterArrayInputArgs(argSchema: RFxArgumentSchema, rfxArgs: RFxArgumentSchemaWithIndex) {\n  let inputArgs;\n  const nElementsArgument: any = getCaseInsensitiveArg(argSchema.nElementsArgument, rfxArgs);\n  const nElementsArgumentValue = nElementsArgument?.value;\n  const elementInfos = argSchema.elementInfos;\n\n  if ((nElementsArgument === undefined || nElementsArgumentValue === undefined) && elementInfos.length === 1) {\n    // For the simple case where the element infos is static, not dependent on another argument\n    return elementInfos[0].inputArgs;\n  }\n  if (Array.isArray(elementInfos)) {\n    elementInfos.some((elementInfo) => {\n      const values = elementInfo.values;\n      if (Array.isArray(values) && values.indexOf(nElementsArgumentValue) > -1) {\n        inputArgs = elementInfo.inputArgs;\n        return true;\n      }\n    });\n  }\n\n  return inputArgs;\n}\n\n/**\n * To check if the given Arg contains any RFT\n * @param rfxArg\n * @returns\n */\nexport function canBuildArgRFTUI(rfxArg: any): boolean {\n  if (!rfxArg) return false;\n\n  const argRFT = getArgRFT(rfxArg);\n  if (argRFT) {\n    return true;\n  } else if (hasRFTElements(rfxArg)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * To check if a template is a chain or has only one function\n * @param {RFxTemplate} rfxTemplate\n * @returns {boolean} true if template is a function chain or false otherwis\n */\nexport function isFunctionChain(rfxTemplate: RFxTemplate) {\n  let isFnChain = false;\n  const rfxArgs = rfxTemplate[ARGS_KEYWORD];\n  if (isRFxArg(rfxArgs)) {\n    // checks if the arguments are of type Raster function template. Then exit with true\n    return true;\n  }\n  // if arguments are not RFT_TYPE , then chances of the rfxTemplate being a chain is ,\n  // any of the argument value is an array of RFTs\n  for (const rfxTemplateArgName in rfxArgs) {\n    if (rfxTemplateArgName === TYPE_KEYWORD) {\n      continue;\n    }\n    const rfxTemplateArg = rfxArgs[rfxTemplateArgName];\n    if (canBuildArgRFTUI(rfxTemplateArg)) {\n      // checks each argument and if it as RFT elements\n      isFnChain = true;\n      return isFnChain;\n    }\n  }\n  return isFnChain;\n}\n\n/**\n * Get system raster function definition key from input RFT\n * @param {RFxTemplate} rfxTemplate to get the system raster function definition key from\n * @returns {string | undefined} the system RFx definition key or undefined for custom function cases\n */\nexport function getRFxDefKeyFromRFT(rfxTemplate: RFxTemplate): string | undefined {\n  let functionDefKey = rfxTemplate?.function?.type;\n  if (functionDefKey === \"LocalFunction\") {\n    // for local funcitons, return rfx def key as `LocalFunction__${localOp}`\n    // for example, return \"LocalFunction__1\" for Plus function\n    const localOp = rfxTemplate.arguments?.Operation?.value?.toString();\n    if (localOp !== undefined) {\n      functionDefKey += `__${localOp}`;\n    }\n  }\n  return functionDefKey;\n}\n\nfunction isSingleArgRFx({\n  functionSchema,\n  rfxTemplate\n}: {\n  functionSchema: RFxSchema;\n  rfxTemplate: RFxTemplate;\n}): boolean {\n  // Single argument RFTs by design store the Raster Function Variable as the value of arguments property\n\n  const schema = functionSchema;\n\n  let schemaArgs: RFxArguments;\n\n  if (schema) {\n    schemaArgs = schema.rasterFunctionArguments;\n    if (Object.keys(schemaArgs).length === 1 && !schema.hasArgumentsObject) {\n      return true;\n    }\n  }\n  const rfxArgs = rfxTemplate.arguments,\n    argsType = rfxArgs && rfxArgs.type;\n\n  if (\n    argsType &&\n    (argsType === JSON_TYPES.RASTER_FUNCTION_TEMPLATE || argsType === JSON_TYPES.RASTER_FUNCTION_VARIABLE)\n  ) {\n    return true;\n  }\n}\n\nexport function getArguments({\n  functionSchema,\n  rfxTemplate\n}: {\n  functionSchema: RFxSchema;\n  rfxTemplate: RFxTemplate;\n}): any[] {\n  if (!rfxTemplate) {\n    return;\n  }\n  const args: any[] = [],\n    rfxArgs = rfxTemplate.arguments,\n    argsType = rfxArgs && rfxArgs.type;\n\n  if (isSingleArgRFx({ functionSchema, rfxTemplate })) {\n    const arg: RFxArguments = esriLang.clone(rfxArgs);\n    let argKey: string;\n    if (argsType === JSON_TYPES.RASTER_FUNCTION_TEMPLATE || arg.isDataset) {\n      // Aspect or similar raster function with a single raster argument\n      argKey = \"Raster\";\n    } else {\n      // CompositeBand or similar\n      argKey = \"Rasters\";\n    }\n    args.push({ ...arg, key: argKey });\n    return args;\n  }\n\n  Object.keys(rfxArgs).forEach((rfxArgKey) => {\n    if (rfxArgKey === MULTIDIMENSIONAL_RULES.MATCH_VARIABLE || rfxArgKey === MULTIDIMENSIONAL_RULES.UNION_DIMENSION) {\n      return;\n    }\n    const rfxArg = esriLang.clone(rfxArgs[rfxArgKey]);\n    if (isRFxArg(rfxArg)) {\n      args.push({ ...rfxArg, key: rfxArgKey });\n    }\n  });\n\n  return args;\n}\n\nexport function getInputArgsFromElementInfos(\n  elementInfos: RFxArgumentSchema[\"elementInfos\"],\n  nElementsArgument: RFxVariable\n): ElementInfoInputArg[] {\n  const nElementsArgumentValue = nElementsArgument && nElementsArgument.value;\n  if (nElementsArgumentValue == null) {\n    return;\n  }\n  let inputArgs: ElementInfoInputArg[];\n  elementInfos.some((elementInfo) => {\n    if (elementInfo.values && elementInfo.values.indexOf(nElementsArgumentValue) > -1) {\n      inputArgs = elementInfo.inputArgs;\n      return true;\n    }\n  });\n  return inputArgs;\n}\n","import styles from \"../../support/help-templates/css/help-templates.css\";\nimport { helpTemplates } from \"../../support/helpTemplates\";\nimport { RFxArguments, RFxTemplate } from \"../../support/interfaces\";\nimport {\n  DefaultLocale,\n  SupportedLocales,\n  fetchCommonStrings,\n  fetchHelpStrings,\n  formatLocalizedHelpUrl,\n  getDirectionBasedOnRTL,\n  getLocaleInfo\n} from \"../../support/localization\";\nimport { helpDoc } from \"../../support/resources\";\nimport { appConfig } from \"../../support/appConfig\";\n\nimport { getFunctionName, getFunctionsAndCategories, getRFTFunctionIdentifier } from \"./functions\";\nimport { isEmptyDataItem } from \"./type-gaurds\";\nimport { getRFTName, isSingleArgumentFunction } from \"./rfx-args-helper\";\n\nfunction createHelpTemplate({\n  content,\n  locale = DefaultLocale,\n  dir = \"ltr\"\n}: {\n  content: string;\n  locale?: SupportedLocales;\n  dir?: string;\n}) {\n  // create the HTML string using template literals\n  const html = `\n      <html lang=\"${locale}\" dir=\"${dir}\">\n        <head><style>${styles}</style></head>\n        <body>\n          ${content}\n        </body>\n      </html>\n    `;\n  return html;\n}\n\nasync function getRfxFunctionByName(rfxName: string) {\n  const { rfxFunctions } = await getFunctionsAndCategories();\n  return rfxFunctions.find((rfx) => rfx.name === rfxName);\n}\n\n/**\n * Replaces the parameter keys in a response text (HTML) with localized help strings and formats the help HTML.\n * @param {string} responseText - The original response text/HTML containing parameter keys.\n * @param {object} localizedHelpText - An object containing localized help text strings for the parameter keys.\n * @returns {string} The response text/HTML with parameter keys replaced with localized help strings and formatted help text.\n */\nfunction replaceHelpTextKeys(responseText: string, localizedHelpText): string {\n  // use regex to replace all parameter keys with localized strings\n  const keyRegex = /@@(.*?)@@/gm;\n  const responseTextHTML = responseText.replace(keyRegex, function (match) {\n    const helpText = localizedHelpText[match];\n    // replace \"--\" with \" — \"\n    const helpContent = helpText.replace(/--/gm, \" — \");\n    // replace all user text in ${(.*?)} pattern with the text inside\n    const textRegex = /\\${(.*?)}/gm;\n    return helpContent.replace(textRegex, \"$1\");\n  });\n\n  // add blank space around text in between <strong></strong>\n  const strongRegex = /<strong>(.*?)<\\/strong>/gm;\n  const helpTextHTML = responseTextHTML.replace(strongRegex, \" <strong>$1</strong> \");\n\n  return helpTextHTML;\n}\n\nexport async function getHelpText(helpTextID: string) {\n  if (isEmptyDataItem(helpTextID)) {\n    return;\n  }\n\n  try {\n    const nlsHelpTextKey = helpTextID;\n\n    // // fetch template html content for parameter help tooltip\n    const helpTemplate = helpTemplates?.[nlsHelpTextKey];\n\n    // return helpTemplate && nlsHelpTextKey;\n    if (isEmptyDataItem(helpTemplate)) {\n      throw Error(\"No helpTemplate found\");\n    }\n\n    const { locale, rtl } = getLocaleInfo();\n    const dir = getDirectionBasedOnRTL(rtl);\n    const helpStrings = await fetchHelpStrings(locale);\n    const localizedHelpText = helpStrings.rfxArgsHelpTexts;\n    const helpTextHTML = replaceHelpTextKeys(helpTemplate, localizedHelpText).replace(\n      \"<html>\",\n      `<html lang=\"${locale}\" dir=\"${dir}\">`\n    );\n    return helpTextHTML;\n  } catch (e) {\n    return createHelpTemplate({ content: \"\" });\n  }\n}\n\n/**\n * TODO: remove and combine with getHelpText\n * Fetches help text for a given parameter of a function of type LocalFunction.\n * @async\n * @param {string} paramKey - The key of the parameter to get help text for.\n * @param {RFxArguments} rfxArgs - The rfxArgs to identify which function it is, to get help text from.\n * @param {RFxTemplate} rfxTemplate - The raster function template to get help text from.\n * @returns {Promise<string>} The help text HTML for the parameter, or undefined if not found.\n */\nexport async function getHelpTextForLocalFunctions(\n  paramKey: string,\n  rfxArgs?: RFxArguments,\n  rfxTemplate?: RFxTemplate\n) {\n  if (isEmptyDataItem(paramKey) || isEmptyDataItem(rfxArgs.type)) {\n    return;\n  }\n\n  try {\n    // parse paramKey to paramName for help doc lookup\n    let paramName = paramKey\n      .trim()\n      .toLowerCase()\n      .replace(/_|-|\\s/gm, \"\");\n\n    // There is no way to identify RFT type of single argument functions using rfxArgs.\n    // use rfxTemplate for these.\n    let fnName =\n      (isSingleArgumentFunction(rfxArgs)\n        ? await getRFTName(rfxTemplate)\n        : getFunctionName(rfxArgs).toLowerCase()?.replace(\"function\", \"\")) ?? \"\";\n    const specialCaseMap = helpDoc.rfxNameSpecialCases;\n\n    const specialCase = specialCaseMap.find((sc) => sc.key === fnName.toLowerCase());\n    fnName = specialCase?.value || fnName;\n\n    // console.log(`${fnName.trim().toLowerCase().replace(/-|\\s/gm, \"\")}_${paramName}`)\n\n    // handle special case of interpolaterasterbydimension - variables\n    if (fnName === \"interpolaterasterbydimension\" && paramKey === \"DimensionDefinition\") {\n      paramName = \"variables\";\n    }\n\n    // Handle NDVI Colorized\n    if ((fnName === \"colormap\" || fnName === \"ndvi\") && isEmptyDataItem(rfxArgs.customFunction) !== true) {\n      fnName = rfxArgs.customFunction;\n    }\n\n    // Handle AggMdim\n    if (\n      (fnName === \"rastercollection\" || fnName === \"multidimensionalfilter\" || fnName === \"cellstatistics\") &&\n      isEmptyDataItem(rfxArgs.customFunction) !== true\n    ) {\n      fnName = rfxArgs.customFunction;\n    }\n\n    const nlsHelpTextKey = `${fnName.trim().toLowerCase().replace(/-|\\s/gm, \"\")}_${paramName}`;\n\n    // fetch template html content for parameter help tooltip\n    const helpTemplate = helpTemplates?.[nlsHelpTextKey];\n\n    if (isEmptyDataItem(helpTemplate)) {\n      throw Error(\"No helpTemplate found\");\n    }\n\n    const { locale, rtl } = getLocaleInfo();\n    const dir = getDirectionBasedOnRTL(rtl);\n    const helpStrings = await fetchHelpStrings(locale);\n    const localizedHelpText = helpStrings.rfxArgsHelpTexts;\n    const helpTextHTML = replaceHelpTextKeys(helpTemplate, localizedHelpText).replace(\n      \"<html>\",\n      `<html lang=\"${locale}\" dir=\"${dir}\">`\n    );\n    return helpTextHTML;\n  } catch (e) {\n    return createHelpTemplate({ content: \"\" });\n  }\n}\n\nexport async function getFunctionDescriptionHelpTemplate({\n  rfxName,\n  rfxTemplate,\n  portal\n}: {\n  rfxName: string;\n  rfxTemplate: RFxTemplate;\n  portal: __esri.Portal;\n}) {\n  let helpTemplate,\n    learnMoreUrl,\n    functionIdentifier = rfxName;\n\n  const { locale, rtl } = getLocaleInfo();\n  const dir = getDirectionBasedOnRTL(rtl);\n\n  const helpBase = portal?.sourceJSON?.helpBase || appConfig.learnMoreDocBaseURL;\n\n  try {\n    const isRFT = !isEmptyDataItem(rfxTemplate);\n\n    // RFTs have a valid \"sourceItemId\" while history items don't.\n    const isHistoryItem = isRFT && isEmptyDataItem(rfxTemplate?.sourceItemId);\n    if (isHistoryItem) {\n      functionIdentifier = getRFTFunctionIdentifier(rfxTemplate);\n    }\n\n    if (isRFT && !isHistoryItem) {\n      const functionDescription = rfxTemplate.description || \"\";\n      // done to bypass type-error.\n      // eslint-disable-next-line @typescript-eslint/dot-notation\n      const portalItemURL = `${portal?.[\"itemPageUrl\"]}?id=${rfxTemplate.sourceItemId}`;\n\n      helpTemplate = createHelpTemplate({ content: functionDescription, locale, dir });\n      learnMoreUrl = portalItemURL;\n    } else {\n      const rfxFunction = await getRfxFunctionByName(functionIdentifier);\n\n      const functionDescription = rfxFunction?.description || \"\";\n      const functionHelpID = rfxFunction?.helpID ?? appConfig.learnMoreDocDefaultHelpID;\n\n      helpTemplate = createHelpTemplate({ content: functionDescription, locale, dir });\n      learnMoreUrl = formatLocalizedHelpUrl(functionHelpID, helpBase, locale);\n    }\n  } catch (e) {\n    learnMoreUrl = formatLocalizedHelpUrl(appConfig.learnMoreDocDefaultHelpID, helpBase, locale);\n    helpTemplate = createHelpTemplate({ content: \"\", locale, dir });\n  }\n\n  return { helpTemplate, learnMoreUrl };\n}\n\nexport async function getOutputRasterHelpTemplate(helpId: string) {\n  const { locale, rtl } = getLocaleInfo();\n  const dir = getDirectionBasedOnRTL(rtl);\n  const helpStrings = await fetchCommonStrings(locale);\n  const localizedHelpText = helpStrings.rasterFunctions.outputRasterHelpTexts;\n  const helpTextHTML = localizedHelpText[helpId];\n\n  const helpTemplate = createHelpTemplate({ content: helpTextHTML, locale, dir });\n  return helpTemplate;\n}\n\nexport function getHelpTemplateForInfoMessage(info: string) {\n  const { locale, rtl } = getLocaleInfo();\n  const dir = getDirectionBasedOnRTL(rtl);\n  const helpTextHTML = `<p>${info}</p>`;\n  const helpTemplate = createHelpTemplate({ content: helpTextHTML, locale, dir });\n  return helpTemplate;\n}\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n\nexport default assignInWith;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import apply from './_apply.js';\nimport baseRest from './_baseRest.js';\nimport isError from './isError.js';\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Function} func The function to attempt.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = baseRest(function(func, args) {\n  try {\n    return apply(func, undefined, args);\n  } catch (e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nexport default attempt;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/** `Object#toString` result references. */\nvar domExcTag = '[object DOMException]',\n    errorTag = '[object Error]';\n\n/**\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n * `SyntaxError`, `TypeError`, or `URIError` object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n * @example\n *\n * _.isError(new Error);\n * // => true\n *\n * _.isError(Error);\n * // => false\n */\nfunction isError(value) {\n  if (!isObjectLike(value)) {\n    return false;\n  }\n  var tag = baseGetTag(value);\n  return tag == errorTag || tag == domExcTag ||\n    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n}\n\nexport default isError;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import esriId from \"@arcgis/core/identity/IdentityManager.js\";\nimport * as esriLang from \"@arcgis/core/core/lang.js\";\nimport * as urlUtils from \"@arcgis/core/core/urlUtils.js\";\nimport Layer from \"@arcgis/core/layers/Layer.js\";\nimport ImageryLayer from \"@arcgis/core/layers/ImageryLayer.js\";\nimport * as rasterStretchCreator from \"@arcgis/core/smartMapping/raster/renderers/stretch.js\";\n\nimport { set } from \"lodash-es\";\n\nimport {\n  FeatureJSON,\n  RFxTemplate,\n  RFxVariable,\n  RasterJSON,\n  SupportedImageryLayerTypes,\n  SupportedLayerTypes\n} from \"../../support/interfaces\";\n\nimport { toBinary } from \"./common\";\nimport { isEmptyDataItem } from \"./type-gaurds\";\nimport { defaultRasterNodeProps } from \"./interfaces\";\n\n/**\n * Clone a RasterJSON obj.\n * @param {RasterJSON} rasterJSON to be cloned.\n * @returns A cloned copy of RasterJSON obj.\n */\nexport function cloneRasterJSON(rasterJSON: RasterJSON): RasterJSON {\n  return esriLang.clone(rasterJSON);\n}\n\n/**\n * Create a new Raster RFxVariable with default props.\n * @returns A default Raster RFxVariable.\n */\nexport function createDefaultRasterRFxVariable(): RFxVariable {\n  return esriLang.clone(defaultRasterNodeProps);\n}\n\n/**\n * Helper function for sanitizeTokensFromJobParams - splits the url into parts and removes the ?token\n * @param {string} url url to be sanitized\n * @returns {string} sanitized string\n */\nexport function sanitizeUrl(url: string): string {\n  return urlUtils.urlToObject(url).path;\n}\n\n/**\n * gives a url without token.\n * @param url layer url.\n * @returns url without token.\n */\nexport function getLayerUrlWithoutToken(url: string): string {\n  if (url?.indexOf(\"?token=\") > 0) {\n    url = url.slice(0, url.indexOf(\"?token=\"));\n  }\n  return url;\n}\n\nexport function getLayerUrl(inputLayer: SupportedLayerTypes): string {\n  let inputURL = getLayerUrlWithoutToken(inputLayer?.url);\n  if (inputLayer.type === \"feature\") {\n    inputURL = `${inputURL}/${inputLayer.layerId ?? 0}`;\n  }\n  const credential = esriId.findCredential(inputLayer.url);\n  // Add credentials for secured services\n  if (credential !== undefined) {\n    inputURL = `${inputURL}${\"?token=\"}${credential.token}`;\n  }\n  return inputURL;\n}\n\n/**\n * Converts an input layer to a RasterJSON object.\n * @param inputLayer The input layer to convert.\n * @returns The RasterJSON object.\n */\nexport function getRasterJsonFromLayer(inputLayer): RasterJSON {\n  const rURL = getLayerUrl(inputLayer);\n  const rasterObj: RasterJSON = { url: rURL, name: inputLayer.title };\n  if (!isEmptyDataItem(inputLayer.renderingRule)) {\n    rasterObj.renderingRule = inputLayer.renderingRule.toJSON();\n  }\n  if (!isEmptyDataItem(inputLayer.definitionExpression)) {\n    let mosaicRule = inputLayer.mosaicRule;\n    if (!isEmptyDataItem(mosaicRule)) {\n      mosaicRule = mosaicRule.clone();\n      mosaicRule.where = inputLayer.definitionExpression;\n      rasterObj.mosaicRule = mosaicRule.toJSON();\n    }\n  } else if (!isEmptyDataItem(inputLayer.mosaicRule)) {\n    rasterObj.mosaicRule = inputLayer.mosaicRule.toJSON?.();\n  }\n\n  return rasterObj;\n}\n\nexport function getLayerIdfromRasterValue(rasterArgValue: RasterJSON, layers: SupportedImageryLayerTypes[]): string {\n  if (isEmptyDataItem(rasterArgValue?.url) || isEmptyDataItem(layers)) {\n    return;\n  }\n  const url = sanitizeUrl(rasterArgValue.url);\n  const selectedLayerId = layers.find((layer) => layer.url === url)?.id;\n  return selectedLayerId;\n}\n\nfunction getImageServiceTitle(url) {\n  const urlParts = url.split(\"/\"),\n    title = urlParts[urlParts.length - 2];\n  return title;\n}\n\n/**\n * Helper function to create an ArcGISImageServiceLayer Object.\n * if input item has mosaicRule property we create it as a mosaicRule Object\n * if input item has renderingRule property we create it as a RasterFunction Object\n *\n * Used in RfxRasterArrayEditor and RfxRasterInput\n *\n * @param {*} item - object with layer name, url with optional mosaicRule\n * and renderingRule property.\n * @returns - ArcGISImageServiceLayer Object\n */\nexport async function getImageServiceLayerItem(item: RasterJSON): Promise<SupportedImageryLayerTypes> {\n  if (isEmptyDataItem(item?.url)) {\n    return;\n  }\n  const layerItem = esriLang.clone(item);\n  let layer: Layer | undefined = undefined;\n  if (!layerItem.name) {\n    layerItem.name = getImageServiceTitle(layerItem.url);\n  }\n\n  try {\n    layer = await Layer.fromArcGISServerUrl({\n      url: sanitizeUrl(item.url),\n      properties: {\n        renderingRule: item.renderingRule,\n        mosaicRule: item.mosaicRule\n      }\n    });\n    (layer as any).name = item.name;\n  } catch (error) {\n    // console.log(\"Cant load the layer\");\n  }\n\n  return layer as SupportedImageryLayerTypes;\n}\n\n/**\n * Helper function to create a FeatureLayer Object from FeatureJSON.\n *\n * Used in RFxFeatureSelect\n *\n * @param {FeatureJSON} featureJSON - feature JSON which contains layer name and url\n * @returns {Promise<__esri.FeatureLayer>} promise of feature layer object\n */\nexport async function getFeatureLayerObject(featureJSON: FeatureJSON): Promise<__esri.FeatureLayer> {\n  const featureUrl = featureJSON?.url,\n    featureName = featureJSON?.name;\n  if (isEmptyDataItem(featureUrl)) {\n    return;\n  }\n\n  let layer: Layer | undefined = undefined;\n\n  try {\n    layer = await Layer.fromArcGISServerUrl({\n      url: sanitizeUrl(featureUrl)\n    });\n    (layer as any).name = featureName;\n  } catch (error) {\n    console.error(\"Failed to load feature layer from RFT JSON.\");\n  }\n\n  return layer as __esri.FeatureLayer;\n}\n\nexport function isRasterTypeFloat(pixelType) {\n  // should give true for f32 and f64\n  return pixelType?.toLocaleLowerCase().indexOf(\"f\") >= 0;\n}\n\nexport function getLayerExtent(layer) {\n  const extent = layer && (layer.extent || layer.fullExtent);\n  if (isEmptyDataItem(extent)) {\n    return undefined;\n  }\n  const { xmin, ymin, xmax, ymax, spatialReference } = extent;\n  const { wkid, latestWkid, wkt } = spatialReference;\n\n  const newExtent = {\n    xmin,\n    ymin,\n    xmax,\n    ymax\n  };\n\n  if (!isEmptyDataItem(wkid)) {\n    set(newExtent, \"spatialReference.wkid\", wkid);\n  }\n  if (!isEmptyDataItem(latestWkid)) {\n    set(newExtent, \"spatialReference.latestWkid\", latestWkid);\n  }\n  if (!isEmptyDataItem(wkt)) {\n    set(newExtent, \"spatialReference.wkt\", wkt);\n  }\n  return newExtent;\n}\n\n// TODO ama10117 - implement function\n// export function projectGeometrySpatialReference(geometry, outSR) {\n//   const geometryService = new GeometryService(esriConfig.defaults.geometryService.url);\n//   return geometryService.project(geometry, outSR);\n// }\n\n/**\n * Utility function to query geometries from a feature layer\n * @param featureLayer\n * @returns\n */\nexport async function getGeometry(featureLayer: __esri.FeatureLayer): Promise<__esri.Geometry[] | undefined> {\n  if (isEmptyDataItem(featureLayer)) {\n    return Promise.resolve(undefined);\n  }\n\n  // const query = new Query();\n  const query = {\n    returnGeometry: true,\n    where: \"1 = 1\"\n  };\n\n  const features = await featureLayer.queryFeatures(query);\n\n  if (isEmptyDataItem(features)) {\n    return Promise.resolve(undefined);\n  }\n  const geoms = features.features?.map((feature) => feature?.geometry);\n\n  return geoms;\n}\n\nexport function isChangeAnalysisTypeCCDC(layer: SupportedImageryLayerTypes): boolean {\n  const ChangeAnalysisParameters = layer?.rasterInfo?.keyProperties?.ChangeAnalysisParameters;\n  const ChangeAnalysisType = ChangeAnalysisParameters?.AnalysisType;\n  return ChangeAnalysisType === \"CCDC\";\n}\n\n/**\n * This function checks whether a layer is allowed for analysis\n * @param {SupportedImageryLayerTypes} layer mapLayer to be checked\n * @returns {boolean} true if layer is allowed for analysis and false otherwise\n */\nexport function checkLayerAllowAnalysis(layer: SupportedImageryLayerTypes): boolean {\n  let allowedAnalysis = true;\n\n  // check allowAnalysis flag from sourceJSON\n  if (layer.sourceJSON?.allowAnalysis === false) {\n    allowedAnalysis = false;\n  }\n\n  const isLayerHosted = layer.portalItem?.typeKeywords?.includes(\"Hosted Service\") ?? false;\n  if (isLayerHosted) {\n    // if the hosted imagery layer is within the same org as user,\n    // then it is considered as collocated service which analysis tool could directly access the source data.\n    allowedAnalysis = layer.portalItem.isOrgItem ?? false ? true : allowedAnalysis;\n  }\n\n  return allowedAnalysis;\n}\n\n/**\n * This function filters a list of layers by checking allow analysis property and returns list of layers allowed for analysis\n * @param {SupportedImageryLayerTypes[]} layers mapLayers to be filtered\n * @returns {SupportedImageryLayerTypes[]} list of layers filtered allow for analysis\n */\nexport function filterLayersAllowAnalysis(layers: SupportedImageryLayerTypes[]): SupportedImageryLayerTypes[] {\n  return layers.filter((layer) => checkLayerAllowAnalysis(layer));\n}\n\nexport function createRasterRenderingLayer(url: string, raster: RFxTemplate): __esri.ImageryLayer {\n  const rasterString = JSON.stringify(raster);\n  //this is the best we can do with window.btoa(). Otherwise we should consider using a different library.\n  // btoa() only support characters from String.fromCodePoint(0) up to String.fromCodePoint(255).\n  // For Base64 characters with a code point 256 or higher you need to encode/decode these before and after.\n  // const base64Value = window.btoa(unescape(encodeURIComponent(rasterString)));\n  return new ImageryLayer({ url, raster: btoa(toBinary(rasterString)) });\n}\n\nexport function createStrecthRenderer(layer: __esri.ImageryLayer) {\n  return rasterStretchCreator.createRenderer({\n    layer,\n    stretchType: \"min-max\",\n    dynamicRangeAdjustment: true,\n    useGamma: false\n  });\n}\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst e$9 = {\n  transparent: [0, 0, 0, 0],\n  black: [0, 0, 0, 1],\n  silver: [192, 192, 192, 1],\n  gray: [128, 128, 128, 1],\n  white: [255, 255, 255, 1],\n  maroon: [128, 0, 0, 1],\n  red: [255, 0, 0, 1],\n  purple: [128, 0, 128, 1],\n  fuchsia: [255, 0, 255, 1],\n  green: [0, 128, 0, 1],\n  lime: [0, 255, 0, 1],\n  olive: [128, 128, 0, 1],\n  yellow: [255, 255, 0, 1],\n  navy: [0, 0, 128, 1],\n  blue: [0, 0, 255, 1],\n  teal: [0, 128, 128, 1],\n  aqua: [0, 255, 255, 1],\n  aliceblue: [240, 248, 255, 1],\n  antiquewhite: [250, 235, 215, 1],\n  aquamarine: [127, 255, 212, 1],\n  azure: [240, 255, 255, 1],\n  beige: [245, 245, 220, 1],\n  bisque: [255, 228, 196, 1],\n  blanchedalmond: [255, 235, 205, 1],\n  blueviolet: [138, 43, 226, 1],\n  brown: [165, 42, 42, 1],\n  burlywood: [222, 184, 135, 1],\n  cadetblue: [95, 158, 160, 1],\n  chartreuse: [127, 255, 0, 1],\n  chocolate: [210, 105, 30, 1],\n  coral: [255, 127, 80, 1],\n  cornflowerblue: [100, 149, 237, 1],\n  cornsilk: [255, 248, 220, 1],\n  crimson: [220, 20, 60, 1],\n  cyan: [0, 255, 255, 1],\n  darkblue: [0, 0, 139, 1],\n  darkcyan: [0, 139, 139, 1],\n  darkgoldenrod: [184, 134, 11, 1],\n  darkgray: [169, 169, 169, 1],\n  darkgreen: [0, 100, 0, 1],\n  darkgrey: [169, 169, 169, 1],\n  darkkhaki: [189, 183, 107, 1],\n  darkmagenta: [139, 0, 139, 1],\n  darkolivegreen: [85, 107, 47, 1],\n  darkorange: [255, 140, 0, 1],\n  darkorchid: [153, 50, 204, 1],\n  darkred: [139, 0, 0, 1],\n  darksalmon: [233, 150, 122, 1],\n  darkseagreen: [143, 188, 143, 1],\n  darkslateblue: [72, 61, 139, 1],\n  darkslategray: [47, 79, 79, 1],\n  darkslategrey: [47, 79, 79, 1],\n  darkturquoise: [0, 206, 209, 1],\n  darkviolet: [148, 0, 211, 1],\n  deeppink: [255, 20, 147, 1],\n  deepskyblue: [0, 191, 255, 1],\n  dimgray: [105, 105, 105, 1],\n  dimgrey: [105, 105, 105, 1],\n  dodgerblue: [30, 144, 255, 1],\n  firebrick: [178, 34, 34, 1],\n  floralwhite: [255, 250, 240, 1],\n  forestgreen: [34, 139, 34, 1],\n  gainsboro: [220, 220, 220, 1],\n  ghostwhite: [248, 248, 255, 1],\n  gold: [255, 215, 0, 1],\n  goldenrod: [218, 165, 32, 1],\n  greenyellow: [173, 255, 47, 1],\n  grey: [128, 128, 128, 1],\n  honeydew: [240, 255, 240, 1],\n  hotpink: [255, 105, 180, 1],\n  indianred: [205, 92, 92, 1],\n  indigo: [75, 0, 130, 1],\n  ivory: [255, 255, 240, 1],\n  khaki: [240, 230, 140, 1],\n  lavender: [230, 230, 250, 1],\n  lavenderblush: [255, 240, 245, 1],\n  lawngreen: [124, 252, 0, 1],\n  lemonchiffon: [255, 250, 205, 1],\n  lightblue: [173, 216, 230, 1],\n  lightcoral: [240, 128, 128, 1],\n  lightcyan: [224, 255, 255, 1],\n  lightgoldenrodyellow: [250, 250, 210, 1],\n  lightgray: [211, 211, 211, 1],\n  lightgreen: [144, 238, 144, 1],\n  lightgrey: [211, 211, 211, 1],\n  lightpink: [255, 182, 193, 1],\n  lightsalmon: [255, 160, 122, 1],\n  lightseagreen: [32, 178, 170, 1],\n  lightskyblue: [135, 206, 250, 1],\n  lightslategray: [119, 136, 153, 1],\n  lightslategrey: [119, 136, 153, 1],\n  lightsteelblue: [176, 196, 222, 1],\n  lightyellow: [255, 255, 224, 1],\n  limegreen: [50, 205, 50, 1],\n  linen: [250, 240, 230, 1],\n  magenta: [255, 0, 255, 1],\n  mediumaquamarine: [102, 205, 170, 1],\n  mediumblue: [0, 0, 205, 1],\n  mediumorchid: [186, 85, 211, 1],\n  mediumpurple: [147, 112, 219, 1],\n  mediumseagreen: [60, 179, 113, 1],\n  mediumslateblue: [123, 104, 238, 1],\n  mediumspringgreen: [0, 250, 154, 1],\n  mediumturquoise: [72, 209, 204, 1],\n  mediumvioletred: [199, 21, 133, 1],\n  midnightblue: [25, 25, 112, 1],\n  mintcream: [245, 255, 250, 1],\n  mistyrose: [255, 228, 225, 1],\n  moccasin: [255, 228, 181, 1],\n  navajowhite: [255, 222, 173, 1],\n  oldlace: [253, 245, 230, 1],\n  olivedrab: [107, 142, 35, 1],\n  orange: [255, 165, 0, 1],\n  orangered: [255, 69, 0, 1],\n  orchid: [218, 112, 214, 1],\n  palegoldenrod: [238, 232, 170, 1],\n  palegreen: [152, 251, 152, 1],\n  paleturquoise: [175, 238, 238, 1],\n  palevioletred: [219, 112, 147, 1],\n  papayawhip: [255, 239, 213, 1],\n  peachpuff: [255, 218, 185, 1],\n  peru: [205, 133, 63, 1],\n  pink: [255, 192, 203, 1],\n  plum: [221, 160, 221, 1],\n  powderblue: [176, 224, 230, 1],\n  rebeccapurple: [102, 51, 153, 1],\n  rosybrown: [188, 143, 143, 1],\n  royalblue: [65, 105, 225, 1],\n  saddlebrown: [139, 69, 19, 1],\n  salmon: [250, 128, 114, 1],\n  sandybrown: [244, 164, 96, 1],\n  seagreen: [46, 139, 87, 1],\n  seashell: [255, 245, 238, 1],\n  sienna: [160, 82, 45, 1],\n  skyblue: [135, 206, 235, 1],\n  slateblue: [106, 90, 205, 1],\n  slategray: [112, 128, 144, 1],\n  slategrey: [112, 128, 144, 1],\n  snow: [255, 250, 250, 1],\n  springgreen: [0, 255, 127, 1],\n  steelblue: [70, 130, 180, 1],\n  tan: [210, 180, 140, 1],\n  thistle: [216, 191, 216, 1],\n  tomato: [255, 99, 71, 1],\n  turquoise: [64, 224, 208, 1],\n  violet: [238, 130, 238, 1],\n  wheat: [245, 222, 179, 1],\n  whitesmoke: [245, 245, 245, 1],\n  yellowgreen: [154, 205, 50, 1]\n};\nfunction r$8(r) {\n  return !!e$9[r] || !!e$9[r.toLowerCase()];\n}\nfunction l$4(r) {\n  return e$9[r] ?? e$9[r.toLowerCase()];\n}\nfunction n$4(e, r, l) {\n  l < 0 && ++l, l > 1 && --l;\n  const a = 6 * l;\n  return a < 1 ? e + (r - e) * a : 2 * l < 1 ? r : 3 * l < 2 ? e + (r - e) * (2 / 3 - l) * 6 : e;\n}\nfunction o$8(e, r, l, a = 1) {\n  const o = (((e % 360) + 360) % 360) / 360,\n    i = l <= 0.5 ? l * (r + 1) : l + r - l * r,\n    t = 2 * l - i;\n  return [\n    Math.round(255 * n$4(t, i, o + 1 / 3)),\n    Math.round(255 * n$4(t, i, o)),\n    Math.round(255 * n$4(t, i, o - 1 / 3)),\n    a\n  ];\n}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction n$3() {\n  return [0, 0, 0];\n}\nfunction t$3(n) {\n  return [n[0], n[1], n[2]];\n}\nfunction r$7(n, t, r) {\n  return [n, t, r];\n}\nfunction e$8(t) {\n  const r = n$3(),\n    e = Math.min(3, t.length);\n  for (let n = 0; n < e; ++n) r[n] = t[n];\n  return r;\n}\nfunction u$6(n, t) {\n  return new Float64Array(n, t, 3);\n}\nfunction o$7() {\n  return n$3();\n}\nfunction a$6() {\n  return r$7(1, 1, 1);\n}\nfunction s$7() {\n  return r$7(1, 0, 0);\n}\nfunction c$7() {\n  return r$7(0, 1, 0);\n}\nfunction i$6() {\n  return r$7(0, 0, 1);\n}\nconst f$4 = o$7(),\n  l$3 = a$6(),\n  _$2 = s$7(),\n  O$3 = c$7(),\n  b$4 = i$6();\nObject.freeze(\n  Object.defineProperty(\n    {\n      __proto__: null,\n      ONES: l$3,\n      UNIT_X: _$2,\n      UNIT_Y: O$3,\n      UNIT_Z: b$4,\n      ZEROS: f$4,\n      clone: t$3,\n      create: n$3,\n      createView: u$6,\n      fromArray: e$8,\n      fromValues: r$7,\n      ones: a$6,\n      unitX: s$7,\n      unitY: c$7,\n      unitZ: i$6,\n      zeros: o$7\n    },\n    Symbol.toStringTag,\n    { value: \"Module\" }\n  )\n);\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet t$2 = 1e-6;\nfunction a$5() {\n  return t$2;\n}\nfunction e$7(a) {\n  t$2 = a;\n}\nconst n$2 = Math.random,\n  o$6 = Math.PI / 180,\n  s$6 = 180 / Math.PI;\nfunction r$6(t) {\n  return t * o$6;\n}\nfunction u$5(t) {\n  return t * s$6;\n}\nfunction c$6(a, e) {\n  return Math.abs(a - e) <= t$2 * Math.max(1, Math.abs(a), Math.abs(e));\n}\nObject.freeze(\n  Object.defineProperty(\n    { __proto__: null, RANDOM: n$2, equals: c$6, getEpsilon: a$5, setEpsilon: e$7, toDegree: u$5, toRadian: r$6 },\n    Symbol.toStringTag,\n    { value: \"Module\" }\n  )\n);\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction s$5(t) {\n  const n = t[0],\n    a = t[1],\n    s = t[2];\n  return Math.sqrt(n * n + a * a + s * s);\n}\nfunction r$5(t, n) {\n  return (t[0] = n[0]), (t[1] = n[1]), (t[2] = n[2]), t;\n}\nfunction o$5(t, n, a, s) {\n  return (t[0] = n), (t[1] = a), (t[2] = s), t;\n}\nfunction u$4(t, n, a) {\n  return (t[0] = n[0] + a[0]), (t[1] = n[1] + a[1]), (t[2] = n[2] + a[2]), t;\n}\nfunction e$6(t, n, a) {\n  return (t[0] = n[0] - a[0]), (t[1] = n[1] - a[1]), (t[2] = n[2] - a[2]), t;\n}\nfunction c$5(t, n, a) {\n  return (t[0] = n[0] * a[0]), (t[1] = n[1] * a[1]), (t[2] = n[2] * a[2]), t;\n}\nfunction i$5(t, n, a) {\n  return (t[0] = n[0] / a[0]), (t[1] = n[1] / a[1]), (t[2] = n[2] / a[2]), t;\n}\nfunction h$3(t, n) {\n  return (t[0] = Math.ceil(n[0])), (t[1] = Math.ceil(n[1])), (t[2] = Math.ceil(n[2])), t;\n}\nfunction M$2(t, n) {\n  return (t[0] = Math.floor(n[0])), (t[1] = Math.floor(n[1])), (t[2] = Math.floor(n[2])), t;\n}\nfunction f$3(t, n) {\n  return (t[0] = Math.abs(n[0])), (t[1] = Math.abs(n[1])), (t[2] = Math.abs(n[2])), t;\n}\nfunction l$2(t, n) {\n  return (t[0] = Math.sign(n[0])), (t[1] = Math.sign(n[1])), (t[2] = Math.sign(n[2])), t;\n}\nfunction m$3(t, n, a) {\n  return (t[0] = Math.min(n[0], a[0])), (t[1] = Math.min(n[1], a[1])), (t[2] = Math.min(n[2], a[2])), t;\n}\nfunction d$2(t, n, a) {\n  return (t[0] = Math.max(n[0], a[0])), (t[1] = Math.max(n[1], a[1])), (t[2] = Math.max(n[2], a[2])), t;\n}\nfunction b$3(t, n) {\n  return (t[0] = Math.round(n[0])), (t[1] = Math.round(n[1])), (t[2] = Math.round(n[2])), t;\n}\nfunction g$3(t, n, a) {\n  return (t[0] = n[0] * a), (t[1] = n[1] * a), (t[2] = n[2] * a), t;\n}\nfunction q$1(t, n, a, s) {\n  return (t[0] = n[0] + a[0] * s), (t[1] = n[1] + a[1] * s), (t[2] = n[2] + a[2] * s), t;\n}\nfunction x$3(t, n) {\n  const a = n[0] - t[0],\n    s = n[1] - t[1],\n    r = n[2] - t[2];\n  return Math.sqrt(a * a + s * s + r * r);\n}\nfunction p$2(t, n) {\n  const a = n[0] - t[0],\n    s = n[1] - t[1],\n    r = n[2] - t[2];\n  return a * a + s * s + r * r;\n}\nfunction v$2(t) {\n  const n = t[0],\n    a = t[1],\n    s = t[2];\n  return n * n + a * a + s * s;\n}\nfunction j$1(t, n) {\n  return (t[0] = -n[0]), (t[1] = -n[1]), (t[2] = -n[2]), t;\n}\nfunction y$3(t, n) {\n  return (t[0] = 1 / n[0]), (t[1] = 1 / n[1]), (t[2] = 1 / n[2]), t;\n}\nfunction z$2(t, n) {\n  const a = n[0],\n    s = n[1],\n    r = n[2];\n  let o = a * a + s * s + r * r;\n  return o > 0 && ((o = 1 / Math.sqrt(o)), (t[0] = n[0] * o), (t[1] = n[1] * o), (t[2] = n[2] * o)), t;\n}\nfunction P$1(t, n) {\n  return t[0] * n[0] + t[1] * n[1] + t[2] * n[2];\n}\nfunction _$1(t, n, a) {\n  const s = n[0],\n    r = n[1],\n    o = n[2],\n    u = a[0],\n    e = a[1],\n    c = a[2];\n  return (t[0] = r * c - o * e), (t[1] = o * u - s * c), (t[2] = s * e - r * u), t;\n}\nfunction A$1(t, n, a, s) {\n  const r = n[0],\n    o = n[1],\n    u = n[2];\n  return (t[0] = r + s * (a[0] - r)), (t[1] = o + s * (a[1] - o)), (t[2] = u + s * (a[2] - u)), t;\n}\nfunction D$1(t, n, a, s, r, o) {\n  const u = o * o,\n    e = u * (2 * o - 3) + 1,\n    c = u * (o - 2) + o,\n    i = u * (o - 1),\n    h = u * (3 - 2 * o);\n  return (\n    (t[0] = n[0] * e + a[0] * c + s[0] * i + r[0] * h),\n    (t[1] = n[1] * e + a[1] * c + s[1] * i + r[1] * h),\n    (t[2] = n[2] * e + a[2] * c + s[2] * i + r[2] * h),\n    t\n  );\n}\nfunction I$1(t, n, a, s, r, o) {\n  const u = 1 - o,\n    e = u * u,\n    c = o * o,\n    i = e * u,\n    h = 3 * o * e,\n    M = 3 * c * u,\n    f = c * o;\n  return (\n    (t[0] = n[0] * i + a[0] * h + s[0] * M + r[0] * f),\n    (t[1] = n[1] * i + a[1] * h + s[1] * M + r[1] * f),\n    (t[2] = n[2] * i + a[2] * h + s[2] * M + r[2] * f),\n    t\n  );\n}\nfunction L$1(t, n) {\n  n = n || 1;\n  const s = n$2,\n    r = 2 * s() * Math.PI,\n    o = 2 * s() - 1,\n    u = Math.sqrt(1 - o * o) * n;\n  return (t[0] = Math.cos(r) * u), (t[1] = Math.sin(r) * u), (t[2] = o * n), t;\n}\nfunction O$2(t, n, a) {\n  const s = n[0],\n    r = n[1],\n    o = n[2];\n  return (\n    (t[0] = a[0] * s + a[4] * r + a[8] * o + a[12]),\n    (t[1] = a[1] * s + a[5] * r + a[9] * o + a[13]),\n    (t[2] = a[2] * s + a[6] * r + a[10] * o + a[14]),\n    t\n  );\n}\nfunction S$1(t, n, a) {\n  const s = n[0],\n    r = n[1],\n    o = n[2];\n  return (\n    (t[0] = s * a[0] + r * a[3] + o * a[6]),\n    (t[1] = s * a[1] + r * a[4] + o * a[7]),\n    (t[2] = s * a[2] + r * a[5] + o * a[8]),\n    t\n  );\n}\nfunction E$2(t, n, a) {\n  const s = a[0],\n    r = a[1],\n    o = a[2],\n    u = a[3],\n    e = n[0],\n    c = n[1],\n    i = n[2];\n  let h = r * i - o * c,\n    M = o * e - s * i,\n    f = s * c - r * e,\n    l = r * f - o * M,\n    m = o * h - s * f,\n    d = s * M - r * h;\n  const b = 2 * u;\n  return (\n    (h *= b),\n    (M *= b),\n    (f *= b),\n    (l *= 2),\n    (m *= 2),\n    (d *= 2),\n    (t[0] = e + h + l),\n    (t[1] = c + M + m),\n    (t[2] = i + f + d),\n    t\n  );\n}\nfunction Q(t, n, a, s) {\n  const r = [],\n    o = [];\n  return (\n    (r[0] = n[0] - a[0]),\n    (r[1] = n[1] - a[1]),\n    (r[2] = n[2] - a[2]),\n    (o[0] = r[0]),\n    (o[1] = r[1] * Math.cos(s) - r[2] * Math.sin(s)),\n    (o[2] = r[1] * Math.sin(s) + r[2] * Math.cos(s)),\n    (t[0] = o[0] + a[0]),\n    (t[1] = o[1] + a[1]),\n    (t[2] = o[2] + a[2]),\n    t\n  );\n}\nfunction R(t, n, a, s) {\n  const r = [],\n    o = [];\n  return (\n    (r[0] = n[0] - a[0]),\n    (r[1] = n[1] - a[1]),\n    (r[2] = n[2] - a[2]),\n    (o[0] = r[2] * Math.sin(s) + r[0] * Math.cos(s)),\n    (o[1] = r[1]),\n    (o[2] = r[2] * Math.cos(s) - r[0] * Math.sin(s)),\n    (t[0] = o[0] + a[0]),\n    (t[1] = o[1] + a[1]),\n    (t[2] = o[2] + a[2]),\n    t\n  );\n}\nfunction T(t, n, a, s) {\n  const r = [],\n    o = [];\n  return (\n    (r[0] = n[0] - a[0]),\n    (r[1] = n[1] - a[1]),\n    (r[2] = n[2] - a[2]),\n    (o[0] = r[0] * Math.cos(s) - r[1] * Math.sin(s)),\n    (o[1] = r[0] * Math.sin(s) + r[1] * Math.cos(s)),\n    (o[2] = r[2]),\n    (t[0] = o[0] + a[0]),\n    (t[1] = o[1] + a[1]),\n    (t[2] = o[2] + a[2]),\n    t\n  );\n}\nfunction k$2(t, n) {\n  r$5(w$1, t), r$5(B$2, n), z$2(w$1, w$1), z$2(B$2, B$2);\n  const a = P$1(w$1, B$2);\n  return a > 1 ? 0 : a < -1 ? Math.PI : Math.acos(a);\n}\nconst w$1 = n$3(),\n  B$2 = n$3();\nfunction C$1(t) {\n  return \"vec3(\" + t[0] + \", \" + t[1] + \", \" + t[2] + \")\";\n}\nfunction F$1(t, n) {\n  return t[0] === n[0] && t[1] === n[1] && t[2] === n[2];\n}\nfunction G(t, a) {\n  if (t === a) return !0;\n  const s = t[0],\n    r = t[1],\n    o = t[2],\n    u = a[0],\n    e = a[1],\n    c = a[2],\n    i = a$5();\n  return (\n    Math.abs(s - u) <= i * Math.max(1, Math.abs(s), Math.abs(u)) &&\n    Math.abs(r - e) <= i * Math.max(1, Math.abs(r), Math.abs(e)) &&\n    Math.abs(o - c) <= i * Math.max(1, Math.abs(o), Math.abs(c))\n  );\n}\nfunction H(t, n, a) {\n  const s = a[0] - n[0],\n    r = a[1] - n[1],\n    o = a[2] - n[2];\n  let u = s * s + r * r + o * o;\n  return u > 0\n    ? ((u = 1 / Math.sqrt(u)), (t[0] = s * u), (t[1] = r * u), (t[2] = o * u), t)\n    : ((t[0] = 0), (t[1] = 0), (t[2] = 0), t);\n}\nconst J = e$6,\n  K = c$5,\n  N = i$5,\n  U = x$3,\n  X = p$2,\n  Y = s$5,\n  Z = v$2;\nObject.freeze(\n  Object.defineProperty(\n    {\n      __proto__: null,\n      abs: f$3,\n      add: u$4,\n      angle: k$2,\n      bezier: I$1,\n      ceil: h$3,\n      copy: r$5,\n      cross: _$1,\n      direction: H,\n      dist: U,\n      distance: x$3,\n      div: N,\n      divide: i$5,\n      dot: P$1,\n      equals: G,\n      exactEquals: F$1,\n      floor: M$2,\n      hermite: D$1,\n      inverse: y$3,\n      len: Y,\n      length: s$5,\n      lerp: A$1,\n      max: d$2,\n      min: m$3,\n      mul: K,\n      multiply: c$5,\n      negate: j$1,\n      normalize: z$2,\n      random: L$1,\n      rotateX: Q,\n      rotateY: R,\n      rotateZ: T,\n      round: b$3,\n      scale: g$3,\n      scaleAndAdd: q$1,\n      set: o$5,\n      sign: l$2,\n      sqrDist: X,\n      sqrLen: Z,\n      squaredDistance: p$2,\n      squaredLength: v$2,\n      str: C$1,\n      sub: J,\n      subtract: e$6,\n      transformMat3: S$1,\n      transformMat4: O$2,\n      transformQuat: E$2\n    },\n    Symbol.toStringTag,\n    { value: \"Module\" }\n  )\n);\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction a$4(t, n) {\n  return (t[0] = n[0]), (t[1] = n[1]), (t[2] = n[2]), (t[3] = n[3]), t;\n}\nfunction r$4(t, n, a, r, s) {\n  return (t[0] = n), (t[1] = a), (t[2] = r), (t[3] = s), t;\n}\nfunction s$4(t, n, a) {\n  return (t[0] = n[0] + a[0]), (t[1] = n[1] + a[1]), (t[2] = n[2] + a[2]), (t[3] = n[3] + a[3]), t;\n}\nfunction o$4(t, n, a) {\n  return (t[0] = n[0] - a[0]), (t[1] = n[1] - a[1]), (t[2] = n[2] - a[2]), (t[3] = n[3] - a[3]), t;\n}\nfunction u$3(t, n, a) {\n  return (t[0] = n[0] * a[0]), (t[1] = n[1] * a[1]), (t[2] = n[2] * a[2]), (t[3] = n[3] * a[3]), t;\n}\nfunction e$5(t, n, a) {\n  return (t[0] = n[0] / a[0]), (t[1] = n[1] / a[1]), (t[2] = n[2] / a[2]), (t[3] = n[3] / a[3]), t;\n}\nfunction c$4(t, n) {\n  return (t[0] = Math.ceil(n[0])), (t[1] = Math.ceil(n[1])), (t[2] = Math.ceil(n[2])), (t[3] = Math.ceil(n[3])), t;\n}\nfunction i$4(t, n) {\n  return (t[0] = Math.floor(n[0])), (t[1] = Math.floor(n[1])), (t[2] = Math.floor(n[2])), (t[3] = Math.floor(n[3])), t;\n}\nfunction h$2(t, n, a) {\n  return (\n    (t[0] = Math.min(n[0], a[0])),\n    (t[1] = Math.min(n[1], a[1])),\n    (t[2] = Math.min(n[2], a[2])),\n    (t[3] = Math.min(n[3], a[3])),\n    t\n  );\n}\nfunction M$1(t, n, a) {\n  return (\n    (t[0] = Math.max(n[0], a[0])),\n    (t[1] = Math.max(n[1], a[1])),\n    (t[2] = Math.max(n[2], a[2])),\n    (t[3] = Math.max(n[3], a[3])),\n    t\n  );\n}\nfunction f$2(t, n) {\n  return (t[0] = Math.round(n[0])), (t[1] = Math.round(n[1])), (t[2] = Math.round(n[2])), (t[3] = Math.round(n[3])), t;\n}\nfunction l$1(t, n, a) {\n  return (t[0] = n[0] * a), (t[1] = n[1] * a), (t[2] = n[2] * a), (t[3] = n[3] * a), t;\n}\nfunction m$2(t, n, a, r) {\n  return (t[0] = n[0] + a[0] * r), (t[1] = n[1] + a[1] * r), (t[2] = n[2] + a[2] * r), (t[3] = n[3] + a[3] * r), t;\n}\nfunction d$1(t, n) {\n  const a = n[0] - t[0],\n    r = n[1] - t[1],\n    s = n[2] - t[2],\n    o = n[3] - t[3];\n  return Math.sqrt(a * a + r * r + s * s + o * o);\n}\nfunction b$2(t, n) {\n  const a = n[0] - t[0],\n    r = n[1] - t[1],\n    s = n[2] - t[2],\n    o = n[3] - t[3];\n  return a * a + r * r + s * s + o * o;\n}\nfunction x$2(t) {\n  const n = t[0],\n    a = t[1],\n    r = t[2],\n    s = t[3];\n  return Math.sqrt(n * n + a * a + r * r + s * s);\n}\nfunction q(t) {\n  const n = t[0],\n    a = t[1],\n    r = t[2],\n    s = t[3];\n  return n * n + a * a + r * r + s * s;\n}\nfunction p$1(t, n) {\n  return (t[0] = -n[0]), (t[1] = -n[1]), (t[2] = -n[2]), (t[3] = -n[3]), t;\n}\nfunction g$2(t, n) {\n  return (t[0] = 1 / n[0]), (t[1] = 1 / n[1]), (t[2] = 1 / n[2]), (t[3] = 1 / n[3]), t;\n}\nfunction v$1(t, n) {\n  const a = n[0],\n    r = n[1],\n    s = n[2],\n    o = n[3];\n  let u = a * a + r * r + s * s + o * o;\n  return u > 0 && ((u = 1 / Math.sqrt(u)), (t[0] = a * u), (t[1] = r * u), (t[2] = s * u), (t[3] = o * u)), t;\n}\nfunction y$2(t, n) {\n  return t[0] * n[0] + t[1] * n[1] + t[2] * n[2] + t[3] * n[3];\n}\nfunction j(t, n, a, r) {\n  const s = n[0],\n    o = n[1],\n    u = n[2],\n    e = n[3];\n  return (\n    (t[0] = s + r * (a[0] - s)),\n    (t[1] = o + r * (a[1] - o)),\n    (t[2] = u + r * (a[2] - u)),\n    (t[3] = e + r * (a[3] - e)),\n    t\n  );\n}\nfunction _(t, a) {\n  const r = n$2;\n  let s, o, u, e, c, i;\n  a = a || 1;\n  do {\n    (s = 2 * r() - 1), (o = 2 * r() - 1), (c = s * s + o * o);\n  } while (c >= 1);\n  do {\n    (u = 2 * r() - 1), (e = 2 * r() - 1), (i = u * u + e * e);\n  } while (i >= 1);\n  const h = Math.sqrt((1 - c) / i);\n  return (t[0] = a * s), (t[1] = a * o), (t[2] = a * u * h), (t[3] = a * e * h), t;\n}\nfunction w(t, n, a) {\n  const r = n[0],\n    s = n[1],\n    o = n[2],\n    u = n[3];\n  return (\n    (t[0] = a[0] * r + a[4] * s + a[8] * o + a[12] * u),\n    (t[1] = a[1] * r + a[5] * s + a[9] * o + a[13] * u),\n    (t[2] = a[2] * r + a[6] * s + a[10] * o + a[14] * u),\n    (t[3] = a[3] * r + a[7] * s + a[11] * o + a[15] * u),\n    t\n  );\n}\nfunction z$1(t, n, a) {\n  const r = n[0],\n    s = n[1],\n    o = n[2],\n    u = a[0],\n    e = a[1],\n    c = a[2],\n    i = a[3],\n    h = i * r + e * o - c * s,\n    M = i * s + c * r - u * o,\n    f = i * o + u * s - e * r,\n    l = -u * r - e * s - c * o;\n  return (\n    (t[0] = h * i + l * -u + M * -c - f * -e),\n    (t[1] = M * i + l * -e + f * -u - h * -c),\n    (t[2] = f * i + l * -c + h * -e - M * -u),\n    (t[3] = n[3]),\n    t\n  );\n}\nfunction A(t) {\n  return \"vec4(\" + t[0] + \", \" + t[1] + \", \" + t[2] + \", \" + t[3] + \")\";\n}\nfunction D(t, n) {\n  return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] && t[3] === n[3];\n}\nfunction E$1(n, a) {\n  const r = n[0],\n    s = n[1],\n    o = n[2],\n    u = n[3],\n    e = a[0],\n    c = a[1],\n    i = a[2],\n    h = a[3],\n    M = a$5();\n  return (\n    Math.abs(r - e) <= M * Math.max(1, Math.abs(r), Math.abs(e)) &&\n    Math.abs(s - c) <= M * Math.max(1, Math.abs(s), Math.abs(c)) &&\n    Math.abs(o - i) <= M * Math.max(1, Math.abs(o), Math.abs(i)) &&\n    Math.abs(u - h) <= M * Math.max(1, Math.abs(u), Math.abs(h))\n  );\n}\nconst L = o$4,\n  O$1 = u$3,\n  S = e$5,\n  k$1 = d$1,\n  B$1 = b$2,\n  C = x$2,\n  F = q;\nObject.freeze(\n  Object.defineProperty(\n    {\n      __proto__: null,\n      add: s$4,\n      ceil: c$4,\n      copy: a$4,\n      dist: k$1,\n      distance: d$1,\n      div: S,\n      divide: e$5,\n      dot: y$2,\n      equals: E$1,\n      exactEquals: D,\n      floor: i$4,\n      inverse: g$2,\n      len: C,\n      length: x$2,\n      lerp: j,\n      max: M$1,\n      min: h$2,\n      mul: O$1,\n      multiply: u$3,\n      negate: p$1,\n      normalize: v$1,\n      random: _,\n      round: f$2,\n      scale: l$1,\n      scaleAndAdd: m$2,\n      set: r$4,\n      sqrDist: B$1,\n      sqrLen: F,\n      squaredDistance: b$2,\n      squaredLength: q,\n      str: A,\n      sub: L,\n      subtract: o$4,\n      transformMat4: w,\n      transformQuat: z$1\n    },\n    Symbol.toStringTag,\n    { value: \"Module\" }\n  )\n);\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst u$2 = new Float32Array(1);\nfunction i$3(t, n, r) {\n  return Math.min(Math.max(t, n), r);\n}\nconst g$1 = new DataView(new ArrayBuffer(Float64Array.BYTES_PER_ELEMENT));\nfunction E(t) {\n  return g$1.setFloat64(0, t), g$1.getBigInt64(0);\n}\nfunction B(t) {\n  return g$1.setBigInt64(0, t), g$1.getFloat64(0);\n}\nconst I = BigInt(\"1000000\");\nx$1(1);\nfunction x$1(t) {\n  const n = E((t = Math.abs(t))),\n    r = B(n <= I ? I : n - I);\n  return Math.abs(t - r);\n}\nfunction P(t) {\n  return (u$2[0] = t), u$2[0];\n}\nP(34028234663852886e22);\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet e$4;\nfunction has(a) {\n  return \"function\" == typeof e$4[a] ? (e$4[a] = e$4[a](globalThis)) : e$4[a];\n}\n(e$4 =\n  globalThis.dojoConfig?.has || globalThis.esriConfig?.has\n    ? { ...globalThis.dojoConfig?.has, ...globalThis.esriConfig?.has }\n    : {}),\n  (has.add = (a, o, d, r) => ((r || void 0 === e$4[a]) && (e$4[a] = o), d && has(a))),\n  (has.cache = e$4),\n  has.add(\"esri-deprecation-warnings\", !0),\n  has.add(\"esri-force-fullscreen-debug\", !1),\n  (() => {\n    has.add(\"host-webworker\", void 0 !== globalThis.WorkerGlobalScope && self instanceof globalThis.WorkerGlobalScope);\n    const e =\n      \"undefined\" != typeof window &&\n      \"undefined\" != typeof location &&\n      \"undefined\" != typeof document &&\n      window.location === location &&\n      window.document === document;\n    if (\n      (has.add(\"host-browser\", e),\n      has.add(\n        \"host-node\",\n        \"object\" == typeof globalThis.process && globalThis.process.versions?.node && globalThis.process.versions.v8\n      ),\n      has.add(\"dom\", e),\n      has(\"host-browser\"))\n    ) {\n      const e = navigator,\n        a = e.userAgent,\n        o = e.appVersion,\n        d = parseFloat(o);\n      if (\n        (has.add(\"wp\", parseFloat(a.split(\"Windows Phone\")[1]) || void 0),\n        has.add(\"msapp\", parseFloat(a.split(\"MSAppHost/\")[1]) || void 0),\n        has.add(\"khtml\", o.includes(\"Konqueror\") ? d : void 0),\n        has.add(\"edge\", parseFloat(a.split(\"Edge/\")[1]) || void 0),\n        has.add(\"opr\", parseFloat(a.split(\"OPR/\")[1]) || void 0),\n        has.add(\"webkit\", (!has(\"wp\") && !has(\"edge\") && parseFloat(a.split(\"WebKit/\")[1])) || void 0),\n        has.add(\"chrome\", (!has(\"edge\") && !has(\"opr\") && parseFloat(a.split(\"Chrome/\")[1])) || void 0),\n        has.add(\"android\", (!has(\"wp\") && parseFloat(a.split(\"Android \")[1])) || void 0),\n        has.add(\n          \"safari\",\n          !o.includes(\"Safari\") || has(\"wp\") || has(\"chrome\") || has(\"android\") || has(\"edge\") || has(\"opr\")\n            ? void 0\n            : parseFloat(o.split(\"Version/\")[1])\n        ),\n        has.add(\"mac\", o.includes(\"Macintosh\")),\n        !has(\"wp\") && /(iPhone|iPod|iPad)/.test(a))\n      ) {\n        const e = RegExp.$1.replace(/P/, \"p\"),\n          o = /OS ([\\d_]+)/.test(a) ? RegExp.$1 : \"1\",\n          d = parseFloat(o.replace(/_/, \".\").replaceAll(\"_\", \"\"));\n        has.add(e, d), has.add(\"ios\", d);\n      }\n      has(\"webkit\") ||\n        (!a.includes(\"Gecko\") || has(\"wp\") || has(\"khtml\") || has(\"edge\") || has.add(\"mozilla\", d),\n        has(\"mozilla\") && has.add(\"ff\", parseFloat(a.split(\"Firefox/\")[1] || a.split(\"Minefield/\")[1]) || void 0));\n    }\n  })(),\n  (() => {\n    if (globalThis.navigator) {\n      const e = navigator.userAgent,\n        a = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini|IEMobile/i.test(e),\n        o = /iPhone/i.test(e);\n      a && has.add(\"esri-mobile\", a),\n        o && has.add(\"esri-iPhone\", o),\n        has.add(\"esri-geolocation\", !!navigator.geolocation);\n    }\n    has.add(\"esri-wasm\", \"WebAssembly\" in globalThis),\n      has.add(\"esri-shared-array-buffer\", () => {\n        const e = \"SharedArrayBuffer\" in globalThis,\n          a = !1 === globalThis.crossOriginIsolated;\n        return e && !a;\n      }),\n      has.add(\"wasm-simd\", () => {\n        const e = [\n          0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10, 1, 8, 0, 65, 0, 253, 15, 253, 98, 11\n        ];\n        return WebAssembly.validate(new Uint8Array(e));\n      }),\n      has.add(\"esri-atomics\", \"Atomics\" in globalThis),\n      has.add(\"esri-workers\", \"Worker\" in globalThis),\n      has.add(\"web-feat:cache\", \"caches\" in globalThis),\n      has.add(\"esri-workers-arraybuffer-transfer\", !has(\"safari\") || Number(has(\"safari\")) >= 12),\n      has.add(\"workers-pool-size\", 8),\n      has.add(\"featurelayer-simplify-thresholds\", [0.5, 0.5, 0.5, 0.5]),\n      has.add(\"featurelayer-simplify-payload-size-factors\", [1, 1, 4]),\n      has.add(\"featurelayer-animation-enabled\", !0),\n      has.add(\"featurelayer-snapshot-enabled\", !0),\n      has.add(\"featurelayer-snapshot-point-min-threshold\", 8e4),\n      has.add(\"featurelayer-snapshot-point-max-threshold\", 4e5),\n      has.add(\"featurelayer-snapshot-point-coverage\", 0.1),\n      has.add(\"featurelayer-advanced-symbols\", !1),\n      has.add(\"featurelayer-pbf\", !0),\n      has.add(\"featurelayer-pbf-statistics\", !1),\n      has.add(\"feature-layers-workers\", !0),\n      has.add(\"feature-polyline-generalization-factor\", 1),\n      has.add(\"mapview-transitions-duration\", 200),\n      has.add(\"mapview-srswitch-adjust-rotation-scale-threshold\", 24e6),\n      has.add(\"mapserver-pbf-version-support\", 10.81),\n      has.add(\"mapservice-popup-identify-max-tolerance\", 20),\n      has.add(\"heatmap-allow-raster-fallback\", !1),\n      has.add(\"heatmap-force-raster\", !1),\n      has(\"host-webworker\") ||\n        (has(\"host-browser\") &&\n          (has.add(\"esri-csp-restrictions\", () => {\n            try {\n              new Function();\n            } catch {\n              return !0;\n            }\n            return !1;\n          }),\n          has.add(\"esri-image-decode\", () => {\n            if (\"decode\" in new Image()) {\n              const e = new Image();\n              return (\n                (e.src =\n                  'data:image/svg+xml;charset=UTF-8,<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"></svg>'),\n                void e\n                  .decode()\n                  .then(() => {\n                    has.add(\"esri-image-decode\", !0, !0, !0);\n                  })\n                  .catch(() => {\n                    has.add(\"esri-image-decode\", !1, !0, !0);\n                  })\n              );\n            }\n            return !1;\n          }),\n          has.add(\"esri-url-encodes-apostrophe\", () => {\n            const e = window.document.createElement(\"a\");\n            return (e.href = \"?'\"), e.href.includes(\"?%27\");\n          })));\n  })();\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction r$3(n) {\n  return \"Int8Array\" === n?.constructor?.name;\n}\nfunction t$1(n) {\n  return \"Uint8Array\" === n?.constructor?.name;\n}\nfunction u$1(n) {\n  return \"Uint8ClampedArray\" === n?.constructor?.name;\n}\nfunction o$3(n) {\n  return \"Int16Array\" === n?.constructor?.name;\n}\nfunction c$3(n) {\n  return \"Uint16Array\" === n?.constructor?.name;\n}\nfunction e$3(n) {\n  return \"Int32Array\" === n?.constructor?.name;\n}\nfunction a$3(n) {\n  return \"Uint32Array\" === n?.constructor?.name;\n}\nfunction i$2(n) {\n  return \"Float32Array\" === n?.constructor?.name;\n}\nfunction f$1(n) {\n  return \"Float64Array\" === n?.constructor?.name;\n}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction a$2(t) {\n  if (!t || \"object\" != typeof t || \"function\" == typeof t) return t;\n  const n = O(t);\n  if (null != n) return n;\n  if (y$1(t)) return t.clone();\n  if (m$1(t)) return t.map(a$2);\n  if (b$1(t)) return t.clone();\n  const e = {};\n  for (const r of Object.getOwnPropertyNames(t)) e[r] = a$2(t[r]);\n  return e;\n}\nfunction y$1(t) {\n  return \"function\" == typeof t.clone;\n}\nfunction m$1(t) {\n  return \"function\" == typeof t.map && \"function\" == typeof t.forEach;\n}\nfunction b$1(t) {\n  return \"function\" == typeof t.notifyChange && \"function\" == typeof t.watch;\n}\nfunction O(t) {\n  if (r$3(t) || t$1(t) || u$1(t) || o$3(t) || c$3(t) || e$3(t) || a$3(t) || i$2(t) || f$1(t)) return t.slice();\n  if (t instanceof Date) return new Date(t.getTime());\n  if (t instanceof ArrayBuffer) {\n    return t.slice(0, t.byteLength);\n  }\n  if (t instanceof Map) {\n    const n = new Map();\n    for (const [e, r] of t) n.set(e, a$2(r));\n    return n;\n  }\n  if (t instanceof Set) {\n    const n = new Set();\n    for (const e of t) n.add(a$2(e));\n    return n;\n  }\n  return null;\n}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction n$1(r, n, t = !1) {\n  return i$1(r, n, t);\n}\nfunction o$2(r, n, t) {\n  const o = r.split(\".\"),\n    i = o.pop(),\n    u = e$2(o, !0, t);\n  u && i && (u[i] = n);\n}\nfunction e$2(r, n, t) {\n  let o = t;\n  for (const e of r) {\n    if (null == o) return;\n    if (!(e in o)) {\n      if (!n) return;\n      o[e] = {};\n    }\n    o = o[e];\n  }\n  return o;\n}\nfunction i$1(n, t, o) {\n  return t\n    ? Object.keys(t).reduce((n, e) => {\n        let u = n[e],\n          c = t[e];\n        return u === c\n          ? n\n          : void 0 === u\n          ? ((n[e] = a$2(c)), n)\n          : (Array.isArray(c) || Array.isArray(n)\n              ? ((u = u ? (Array.isArray(u) ? (n[e] = u.concat()) : (n[e] = [u])) : (n[e] = [])),\n                c &&\n                  (Array.isArray(c) || (c = [c]),\n                  o\n                    ? c.forEach((r) => {\n                        u.includes(r) || u.push(r);\n                      })\n                    : (n[e] = c.concat())))\n              : c && \"object\" == typeof c\n              ? (n[e] = i$1(u, c, o))\n              : (n.hasOwnProperty(e) && !t.hasOwnProperty(e)) || (n[e] = c),\n            n);\n      }, n || {})\n    : n;\n}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst c$2 = \"20230526\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst r$2 = {\n  analysisTheme: { accentColor: [255, 127, 0], textColor: \"white\" },\n  apiKey: void 0,\n  applicationName: \"\",\n  applicationUrl: globalThis.location?.href,\n  assetsPath: \"\",\n  fontsUrl: \"https://static.arcgis.com/fonts\",\n  geometryServiceUrl: \"https://utility.arcgisonline.com/arcgis/rest/services/Geometry/GeometryServer\",\n  geoRSSServiceUrl: \"https://utility.arcgis.com/sharing/rss\",\n  kmlServiceUrl: \"https://utility.arcgis.com/sharing/kml\",\n  userPrivilegesApplied: !1,\n  portalUrl: \"https://www.arcgis.com\",\n  routeServiceUrl: \"https://route-api.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World\",\n  workers: { loaderConfig: { has: {}, paths: {}, map: {}, packages: [] } },\n  request: {\n    crossOriginNoCorsDomains: null,\n    httpsDomains: [\n      \"arcgis.com\",\n      \"arcgisonline.com\",\n      \"esrikr.com\",\n      \"premiumservices.blackbridge.com\",\n      \"esripremium.accuweather.com\",\n      \"gbm.digitalglobe.com\",\n      \"firstlook.digitalglobe.com\",\n      \"msi.digitalglobe.com\"\n    ],\n    interceptors: [],\n    maxUrlLength: 2e3,\n    priority: \"high\",\n    proxyRules: [],\n    proxyUrl: null,\n    timeout: 6e4,\n    trustedServers: [],\n    useIdentity: !0\n  },\n  log: { interceptors: [], level: null }\n};\nif ((globalThis.esriConfig && (n$1(r$2, globalThis.esriConfig, !0), delete r$2.has), !r$2.assetsPath)) {\n  {\n    const e = \"4.27.0\";\n    r$2.assetsPath = `https://cdn.jsdelivr.net/npm/@arcgis/core@${e}-next.${c$2}/assets`;\n  }\n  r$2.defaultAssetsPath = r$2.assetsPath;\n}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction c$1(t) {\n  let e = 0;\n  for (let n = 0; n < t.length; n++) (e = (e << 5) - e + t.charCodeAt(n)), (e |= 0);\n  return e;\n}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst r$1 = { info: 0, warn: 1, error: 2, none: 3 };\nclass s$3 {\n  constructor(e) {\n    (this.level = null),\n      (this._module = \"\"),\n      (this._parent = null),\n      (this.writer = null),\n      (this._loggedMessages = { error: new Map(), warn: new Map(), info: new Map() }),\n      null != e.level && (this.level = e.level),\n      null != e.writer && (this.writer = e.writer),\n      (this._module = e.module),\n      s$3._loggers.set(this.module, this);\n    const t = this.module.lastIndexOf(\".\");\n    -1 !== t && (this._parent = s$3.getLogger(this.module.slice(0, t)));\n  }\n  get module() {\n    return this._module;\n  }\n  get parent() {\n    return this._parent;\n  }\n  error(...e) {\n    this._log(\"error\", \"always\", ...e);\n  }\n  warn(...e) {\n    this._log(\"warn\", \"always\", ...e);\n  }\n  info(...e) {\n    this._log(\"info\", \"always\", ...e);\n  }\n  errorOnce(...e) {\n    this._log(\"error\", \"once\", ...e);\n  }\n  warnOnce(...e) {\n    this._log(\"warn\", \"once\", ...e);\n  }\n  infoOnce(...e) {\n    this._log(\"info\", \"once\", ...e);\n  }\n  errorOncePerTick(...e) {\n    this._log(\"error\", \"oncePerTick\", ...e);\n  }\n  warnOncePerTick(...e) {\n    this._log(\"warn\", \"oncePerTick\", ...e);\n  }\n  infoOncePerTick(...e) {\n    this._log(\"info\", \"oncePerTick\", ...e);\n  }\n  get test() {\n    const e = this;\n    return { loggedMessages: e._loggedMessages, clearLoggedWarnings: () => e._loggedMessages.warn.clear() };\n  }\n  static get test() {\n    return {\n      resetLoggers(e = new Map()) {\n        const t = s$3._loggers;\n        return (s$3._loggers = e), t;\n      },\n      set throttlingDisabled(e) {\n        s$3._throttlingDisabled = e;\n      }\n    };\n  }\n  static getLogger(e) {\n    return (e = \"string\" != typeof e ? e.declaredClass : e), s$3._loggers.get(e) || new s$3({ module: e });\n  }\n  _log(t, r, ...n) {\n    if (!this._matchLevel(t)) return;\n    if (\"always\" !== r && !s$3._throttlingDisabled) {\n      const e = this._argsToKey(n),\n        o = this._loggedMessages[t].get(e);\n      if ((\"once\" === r && null != o) || (\"oncePerTick\" === r && o && o >= s$3._tickCounter)) return;\n      this._loggedMessages[t].set(e, s$3._tickCounter), s$3._scheduleTickCounterIncrement();\n    }\n    for (const s of r$2.log.interceptors) if (s(t, this.module, ...n)) return;\n    this._inheritedWriter()(t, this.module, ...n);\n  }\n  _parentWithMember(e, t) {\n    let r = this;\n    for (; null != r; ) {\n      const t = r[e];\n      if (null != t) return t;\n      r = r.parent;\n    }\n    return t;\n  }\n  _inheritedWriter() {\n    return this._parentWithMember(\"writer\", this._consoleWriter);\n  }\n  _consoleWriter(e, t, ...r) {\n    console[e](`[${t}]`, ...r);\n  }\n  _matchLevel(t) {\n    const s = r$2.log.level || \"warn\";\n    return r$1[this._parentWithMember(\"level\", s)] <= r$1[t];\n  }\n  _argsToKey(...e) {\n    const r = (e, t) => (\"object\" != typeof t || Array.isArray(t) ? t : \"[Object]\");\n    return c$1(JSON.stringify(e, r));\n  }\n  static _scheduleTickCounterIncrement() {\n    s$3._tickCounterScheduled ||\n      ((s$3._tickCounterScheduled = !0),\n      Promise.resolve().then(() => {\n        s$3._tickCounter++, (s$3._tickCounterScheduled = !1);\n      }));\n  }\n}\n(s$3._loggers = new Map()), (s$3._tickCounter = 0), (s$3._tickCounterScheduled = !1), (s$3._throttlingDisabled = !1);\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\ns$3.getLogger(\"esri.core.accessorSupport.ensureTypes\");\nfunction s$2(e) {\n  return null == e ? e : Math.round(parseFloat(e));\n}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction a$1(t) {\n  return i$3(s$2(t), 0, 255);\n}\nfunction e$1(t, r, s) {\n  return (t = Number(t)), isNaN(t) ? s : t < r ? r : t > s ? s : t;\n}\nclass o$1 {\n  static blendColors(t, r, s, i = new o$1()) {\n    return (\n      (i.r = Math.round(t.r + (r.r - t.r) * s)),\n      (i.g = Math.round(t.g + (r.g - t.g) * s)),\n      (i.b = Math.round(t.b + (r.b - t.b) * s)),\n      (i.a = t.a + (r.a - t.a) * s),\n      i._sanitize()\n    );\n  }\n  static fromRgb(r, s) {\n    const i = r.toLowerCase().match(/^(rgba?|hsla?)\\(([\\s\\.\\-,%0-9]+)\\)/);\n    if (i) {\n      const r = i[2].split(/\\s*,\\s*/),\n        n = i[1];\n      if ((\"rgb\" === n && 3 === r.length) || (\"rgba\" === n && 4 === r.length)) {\n        const t = r[0];\n        if (\"%\" === t.charAt(t.length - 1)) {\n          const t = r.map((t) => 2.56 * parseFloat(t));\n          return 4 === r.length && (t[3] = parseFloat(r[3])), o$1.fromArray(t, s);\n        }\n        return o$1.fromArray(\n          r.map((t) => parseFloat(t)),\n          s\n        );\n      }\n      if ((\"hsl\" === n && 3 === r.length) || (\"hsla\" === n && 4 === r.length))\n        return o$1.fromArray(\n          o$8(parseFloat(r[0]), parseFloat(r[1]) / 100, parseFloat(r[2]) / 100, parseFloat(r[3])),\n          s\n        );\n    }\n    return null;\n  }\n  static fromHex(t, r = new o$1()) {\n    if ((4 !== t.length && 7 !== t.length) || \"#\" !== t[0]) return null;\n    const s = 4 === t.length ? 4 : 8,\n      i = (1 << s) - 1;\n    let n = Number(\"0x\" + t.substr(1));\n    return isNaN(n)\n      ? null\n      : ([\"b\", \"g\", \"r\"].forEach((t) => {\n          const a = n & i;\n          (n >>= s), (r[t] = 4 === s ? 17 * a : a);\n        }),\n        (r.a = 1),\n        r);\n  }\n  static fromArray(t, r = new o$1()) {\n    return r._set(Number(t[0]), Number(t[1]), Number(t[2]), Number(t[3])), isNaN(r.a) && (r.a = 1), r._sanitize();\n  }\n  static fromString(t, i) {\n    const n = r$8(t) ? l$4(t) : null;\n    return (n && o$1.fromArray(n, i)) || o$1.fromRgb(t, i) || o$1.fromHex(t, i);\n  }\n  static fromJSON(t) {\n    return t && new o$1([t[0], t[1], t[2], t[3] / 255]);\n  }\n  static toUnitRGB(t) {\n    return null != t ? [t.r / 255, t.g / 255, t.b / 255] : null;\n  }\n  static toUnitRGBA(t) {\n    return null != t ? [t.r / 255, t.g / 255, t.b / 255, null != t.a ? t.a : 1] : null;\n  }\n  constructor(t) {\n    (this.r = 255), (this.g = 255), (this.b = 255), (this.a = 1), t && this.setColor(t);\n  }\n  get isBright() {\n    return 0.299 * this.r + 0.587 * this.g + 0.114 * this.b >= 127;\n  }\n  setColor(t) {\n    return (\n      \"string\" == typeof t\n        ? o$1.fromString(t, this)\n        : Array.isArray(t)\n        ? o$1.fromArray(t, this)\n        : (this._set(t.r ?? 0, t.g ?? 0, t.b ?? 0, t.a ?? 1), t instanceof o$1 || this._sanitize()),\n      this\n    );\n  }\n  toRgb() {\n    return [this.r, this.g, this.b];\n  }\n  toRgba() {\n    return [this.r, this.g, this.b, this.a];\n  }\n  toHex() {\n    const t = this.r.toString(16),\n      r = this.g.toString(16),\n      s = this.b.toString(16);\n    return `#${t.length < 2 ? \"0\" + t : t}${r.length < 2 ? \"0\" + r : r}${s.length < 2 ? \"0\" + s : s}`;\n  }\n  toCss(t = !1) {\n    const r = this.r + \", \" + this.g + \", \" + this.b;\n    return t ? `rgba(${r}, ${this.a})` : `rgb(${r})`;\n  }\n  toString() {\n    return this.toCss(!0);\n  }\n  toJSON() {\n    return this.toArray();\n  }\n  toArray(t = o$1.AlphaMode.ALWAYS) {\n    const r = a$1(this.r),\n      s = a$1(this.g),\n      i = a$1(this.b);\n    return t === o$1.AlphaMode.ALWAYS || 1 !== this.a ? [r, s, i, a$1(255 * this.a)] : [r, s, i];\n  }\n  clone() {\n    return new o$1(this.toRgba());\n  }\n  hash() {\n    return (this.r << 24) | (this.g << 16) | (this.b << 8) | (255 * this.a);\n  }\n  equals(t) {\n    return null != t && t.r === this.r && t.g === this.g && t.b === this.b && t.a === this.a;\n  }\n  _sanitize() {\n    return (\n      (this.r = Math.round(e$1(this.r, 0, 255))),\n      (this.g = Math.round(e$1(this.g, 0, 255))),\n      (this.b = Math.round(e$1(this.b, 0, 255))),\n      (this.a = e$1(this.a, 0, 1)),\n      this\n    );\n  }\n  _set(t, r, s, i) {\n    (this.r = t), (this.g = r), (this.b = s), (this.a = i);\n  }\n}\n(o$1.prototype.declaredClass = \"esri.Color\"),\n  (function (t) {\n    var r;\n    ((r = t.AlphaMode || (t.AlphaMode = {}))[(r.ALWAYS = 0)] = \"ALWAYS\"), (r[(r.UNLESS_OPAQUE = 1)] = \"UNLESS_OPAQUE\");\n  })(o$1 || (o$1 = {}));\nconst h$1 = o$1;\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction n(n) {\n  return \"r\" in n && \"g\" in n && \"b\" in n;\n}\nfunction t(n) {\n  return \"h\" in n && \"s\" in n && \"v\" in n;\n}\nfunction r(n) {\n  return \"l\" in n && \"a\" in n && \"b\" in n;\n}\nfunction u(n) {\n  return \"l\" in n && \"c\" in n && \"h\" in n;\n}\nfunction o(n) {\n  return \"x\" in n && \"y\" in n && \"z\" in n;\n}\nconst e = [\n    [0.4124, 0.3576, 0.1805],\n    [0.2126, 0.7152, 0.0722],\n    [0.0193, 0.1192, 0.9505]\n  ],\n  c = [\n    [3.2406, -1.5372, -0.4986],\n    [-0.9689, 1.8758, 0.0415],\n    [0.0557, -0.204, 1.057]\n  ];\nfunction a(n, t) {\n  const r = [];\n  let u, o;\n  if (n[0].length !== t.length) throw new Error(\"dimensions do not match\");\n  const e = n.length,\n    c = n[0].length;\n  let a = 0;\n  for (u = 0; u < e; u++) {\n    for (a = 0, o = 0; o < c; o++) a += n[u][o] * t[o];\n    r.push(a);\n  }\n  return r;\n}\nfunction i(n) {\n  const t = [n.r / 255, n.g / 255, n.b / 255].map((n) => (n <= 0.04045 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)),\n    r = a(e, t);\n  return { x: 100 * r[0], y: 100 * r[1], z: 100 * r[2] };\n}\nfunction h(n) {\n  const t = a(c, [n.x / 100, n.y / 100, n.z / 100]).map((n) => {\n    const t = n <= 0.0031308 ? 12.92 * n : 1.055 * n ** (1 / 2.4) - 0.055;\n    return Math.min(1, Math.max(t, 0));\n  });\n  return { r: Math.round(255 * t[0]), g: Math.round(255 * t[1]), b: Math.round(255 * t[2]) };\n}\nfunction s$1(n) {\n  const t = [n.x / 95.047, n.y / 100, n.z / 108.883].map((n) =>\n    n > (6 / 29) ** 3 ? n ** (1 / 3) : (1 / 3) * (29 / 6) ** 2 * n + 4 / 29\n  );\n  return { l: 116 * t[1] - 16, a: 500 * (t[0] - t[1]), b: 200 * (t[1] - t[2]) };\n}\nfunction f(n) {\n  const t = n.l,\n    r = [(t + 16) / 116 + n.a / 500, (t + 16) / 116, (t + 16) / 116 - n.b / 200].map((n) =>\n      n > 6 / 29 ? n ** 3 : 3 * (6 / 29) ** 2 * (n - 4 / 29)\n    );\n  return { x: 95.047 * r[0], y: 100 * r[1], z: 108.883 * r[2] };\n}\nfunction b(n) {\n  const t = n.l,\n    r = n.a,\n    u = n.b,\n    o = Math.sqrt(r * r + u * u);\n  let e = Math.atan2(u, r);\n  return (e = e > 0 ? e : e + 2 * Math.PI), { l: t, c: o, h: e };\n}\nfunction l(n) {\n  const t = n.l,\n    r = n.c,\n    u = n.h;\n  return { l: t, a: r * Math.cos(u), b: r * Math.sin(u) };\n}\nfunction g(n) {\n  return s$1(i(n));\n}\nfunction M(n) {\n  return h(f(n));\n}\nfunction m(n) {\n  return b(s$1(i(n)));\n}\nfunction d(n) {\n  return h(f(l(n)));\n}\nfunction x(n) {\n  const t = n.r,\n    r = n.g,\n    u = n.b,\n    o = Math.max(t, r, u),\n    e = o - Math.min(t, r, u);\n  let c = o,\n    a = 0 === e ? 0 : o === t ? ((r - u) / e) % 6 : o === r ? (u - t) / e + 2 : (t - r) / e + 4,\n    i = 0 === e ? 0 : e / c;\n  return a < 0 && (a += 6), (a *= 60), (i *= 100), (c *= 100 / 255), { h: a, s: i, v: c };\n}\nfunction k(n) {\n  const t = ((n.h + 360) % 360) / 60,\n    r = n.s / 100,\n    u = (n.v / 100) * 255,\n    o = u * r,\n    e = o * (1 - Math.abs((t % 2) - 1));\n  let c;\n  switch (Math.floor(t)) {\n    case 0:\n      c = { r: o, g: e, b: 0 };\n      break;\n    case 1:\n      c = { r: e, g: o, b: 0 };\n      break;\n    case 2:\n      c = { r: 0, g: o, b: e };\n      break;\n    case 3:\n      c = { r: 0, g: e, b: o };\n      break;\n    case 4:\n      c = { r: e, g: 0, b: o };\n      break;\n    case 5:\n    case 6:\n      c = { r: o, g: 0, b: e };\n      break;\n    default:\n      c = { r: 0, g: 0, b: 0 };\n  }\n  return (c.r = Math.round(c.r + u - o)), (c.g = Math.round(c.g + u - o)), (c.b = Math.round(c.b + u - o)), c;\n}\nfunction p(e) {\n  return n(e) ? e : u(e) ? d(e) : r(e) ? M(e) : o(e) ? h(e) : t(e) ? k(e) : e;\n}\nfunction y(n) {\n  if (t(n)) return n;\n  return x(p(n));\n}\nfunction z(n) {\n  return r(n) ? n : g(p(n));\n}\nfunction v(n) {\n  return u(n) ? n : m(p(n));\n}\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nclass s {\n  constructor(s, o = { ignoreUnknown: !1, useNumericKeys: !1 }) {\n    (this._jsonToAPI = s),\n      (this._options = o),\n      (this.apiValues = []),\n      (this.jsonValues = []),\n      (this._apiToJSON = this._invertMap(s)),\n      (this.apiValues = this._getKeysSorted(this._apiToJSON)),\n      (this.jsonValues = this._getKeysSorted(this._jsonToAPI)),\n      (this.read = (t) => this.fromJSON(t)),\n      (this.write = (s, o, i) => {\n        const n = this.toJSON(s);\n        void 0 !== n && o$2(i, n, o);\n      }),\n      (this.write.isJSONMapWriter = !0);\n  }\n  toJSON(t) {\n    if (null == t) return null;\n    if (this._apiToJSON.hasOwnProperty(t)) {\n      const s = this._apiToJSON[t];\n      return this._options.useNumericKeys ? +s : s;\n    }\n    return this._options.ignoreUnknown ? void 0 : t;\n  }\n  fromJSON(t) {\n    return null != t && this._jsonToAPI.hasOwnProperty(t)\n      ? this._jsonToAPI[t]\n      : this._options.ignoreUnknown\n      ? void 0\n      : t;\n  }\n  _invertMap(t) {\n    const s = {};\n    for (const o in t) s[t[o]] = o;\n    return s;\n  }\n  _getKeysSorted(t) {\n    const s = [];\n    for (const o in t) s.push(o);\n    return s.sort(), s;\n  }\n}\n\n// esri\nconst PREDEFINED_JSON_COLOR_RAMPS = [\n  {\n    id: \"aspect\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [190, 190, 190], toColor: [255, 45, 8] },\n      { fromColor: [255, 45, 8], toColor: [255, 181, 61] },\n      { fromColor: [255, 181, 61], toColor: [255, 254, 52] },\n      { fromColor: [255, 254, 52], toColor: [0, 251, 50] },\n      { fromColor: [0, 251, 50], toColor: [255, 254, 52] },\n      { fromColor: [0, 253, 255], toColor: [0, 181, 255] },\n      { fromColor: [0, 181, 255], toColor: [26, 35, 253] },\n      { fromColor: [26, 35, 253], toColor: [255, 57, 251] },\n      { fromColor: [255, 57, 251], toColor: [255, 45, 8] }\n    ]\n  },\n  { id: \"black-to-white\", fromColor: [0, 0, 0], toColor: [255, 255, 255] },\n  { id: \"blue-bright\", fromColor: [204, 204, 255], toColor: [0, 0, 224] },\n  { id: \"blue-light-to-dark\", fromColor: [211, 229, 232], toColor: [46, 100, 140] },\n  { id: \"blue-green-bright\", fromColor: [203, 245, 234], toColor: [48, 207, 146] },\n  { id: \"blue-green-light-to-dark\", fromColor: [216, 242, 237], toColor: [21, 79, 74] },\n  { id: \"brown-light-to-dark\", fromColor: [240, 236, 170], toColor: [102, 72, 48] },\n  {\n    id: \"brown-to-blue-green-diverging-right\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [156, 85, 31], toColor: [255, 255, 191] },\n      { fromColor: [255, 255, 191], toColor: [33, 130, 145] }\n    ]\n  },\n  {\n    id: \"brown-to-blue-green-diverging-dark\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [110, 70, 45], toColor: [204, 204, 102] },\n      { fromColor: [204, 204, 102], toColor: [48, 100, 102] }\n    ]\n  },\n  { id: \"coefficient-bias\", fromColor: [214, 214, 255], toColor: [0, 57, 148] },\n  {\n    id: \"cold-to-hot-diverging\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [69, 117, 181], toColor: [255, 255, 191] },\n      { fromColor: [255, 255, 191], toColor: [214, 47, 39] }\n    ]\n  },\n  {\n    id: \"condition-number\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [0, 97, 0], toColor: [255, 255, 0] },\n      { fromColor: [255, 255, 0], toColor: [255, 34, 0] }\n    ]\n  },\n  {\n    id: \"cyan-to-purple\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [0, 245, 245], toColor: [0, 0, 245] },\n      { fromColor: [0, 0, 245], toColor: [245, 0, 245] }\n    ]\n  },\n  {\n    id: \"cyan-light-to-blue-dark\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [182, 237, 240], toColor: [31, 131, 224] },\n      { fromColor: [31, 131, 224], toColor: [9, 9, 145] }\n    ]\n  },\n  { id: \"distance\", fromColor: [255, 200, 0], toColor: [0, 0, 255] },\n  {\n    id: \"elevation1\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [175, 240, 233], toColor: [255, 255, 179] },\n      { fromColor: [255, 255, 179], toColor: [0, 128, 64] },\n      { fromColor: [0, 128, 64], toColor: [252, 186, 3] },\n      { fromColor: [252, 186, 3], toColor: [128, 0, 0] },\n      { fromColor: [120, 0, 0], toColor: [105, 48, 13] },\n      { fromColor: [105, 48, 13], toColor: [171, 171, 171] },\n      { fromColor: [171, 171, 171], toColor: [255, 252, 255] }\n    ]\n  },\n  {\n    id: \"elevation2\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [118, 219, 211], toColor: [255, 255, 199] },\n      { fromColor: [255, 255, 199], toColor: [255, 255, 128] },\n      { fromColor: [255, 255, 128], toColor: [217, 194, 121] },\n      { fromColor: [217, 194, 121], toColor: [135, 96, 38] },\n      { fromColor: [135, 96, 38], toColor: [150, 150, 181] },\n      { fromColor: [150, 150, 181], toColor: [181, 150, 181] },\n      { fromColor: [181, 150, 181], toColor: [255, 252, 255] }\n    ]\n  },\n  { id: \"errors\", fromColor: [255, 235, 214], toColor: [196, 10, 10] },\n  { id: \"gray-light-to-dark\", fromColor: [219, 219, 219], toColor: [69, 69, 69] },\n  { id: \"green-bright\", fromColor: [204, 255, 204], toColor: [14, 204, 14] },\n  { id: \"green-light-to-dark\", fromColor: [220, 245, 233], toColor: [34, 102, 51] },\n  {\n    id: \"green-to-blue\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [32, 204, 16], toColor: [0, 242, 242] },\n      { fromColor: [0, 242, 242], toColor: [2, 33, 227] }\n    ]\n  },\n  { id: \"orange-bright\", fromColor: [255, 235, 204], toColor: [240, 118, 5] },\n  { id: \"orange-light-to-dark\", fromColor: [250, 233, 212], toColor: [171, 65, 36] },\n  {\n    id: \"partial-spectrum\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [242, 241, 162], toColor: [255, 255, 0] },\n      { fromColor: [255, 255, 0], toColor: [255, 0, 0] },\n      { fromColor: [252, 3, 69], toColor: [176, 7, 237] },\n      { fromColor: [176, 7, 237], toColor: [2, 29, 173] }\n    ]\n  },\n  {\n    id: \"partial-spectrum-1-diverging\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [135, 38, 38], toColor: [240, 149, 12] },\n      { fromColor: [240, 149, 12], toColor: [255, 255, 191] },\n      { fromColor: [255, 255, 191], toColor: [74, 80, 181] },\n      { fromColor: [74, 80, 181], toColor: [39, 32, 122] }\n    ]\n  },\n  {\n    id: \"partial-spectrum-2-diverging\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [115, 77, 42], toColor: [201, 137, 52] },\n      { fromColor: [201, 137, 52], toColor: [255, 255, 191] },\n      { fromColor: [255, 255, 191], toColor: [91, 63, 176] },\n      { fromColor: [91, 63, 176], toColor: [81, 13, 97] }\n    ]\n  },\n  {\n    id: \"pink-to-yellow-green-diverging-bright\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [158, 30, 113], toColor: [255, 255, 191] },\n      { fromColor: [255, 255, 191], toColor: [99, 110, 45] }\n    ]\n  },\n  {\n    id: \"pink-to-yellow-green-diverging-dark\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [97, 47, 73], toColor: [204, 204, 102] },\n      { fromColor: [204, 204, 102], toColor: [22, 59, 15] }\n    ]\n  },\n  {\n    id: \"precipitation\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [194, 82, 60], toColor: [237, 161, 19] },\n      { fromColor: [237, 161, 19], toColor: [255, 255, 0] },\n      { fromColor: [255, 255, 0], toColor: [0, 219, 0] },\n      { fromColor: [0, 219, 0], toColor: [32, 153, 143] },\n      { fromColor: [32, 153, 143], toColor: [11, 44, 122] }\n    ]\n  },\n  {\n    id: \"prediction\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [40, 146, 199], toColor: [250, 250, 100] },\n      { fromColor: [250, 250, 100], toColor: [232, 16, 20] }\n    ]\n  },\n  { id: \"purple-bright\", fromColor: [255, 204, 255], toColor: [199, 0, 199] },\n  {\n    id: \"purple-to-green-diverging-bright\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [77, 32, 150], toColor: [255, 255, 191] },\n      { fromColor: [255, 255, 191], toColor: [20, 122, 11] }\n    ]\n  },\n  {\n    id: \"purple-to-green-diverging-dark\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [67, 14, 89], toColor: [204, 204, 102] },\n      { fromColor: [204, 204, 102], toColor: [24, 79, 15] }\n    ]\n  },\n  { id: \"purple-blue-bright\", fromColor: [223, 184, 230], toColor: [112, 12, 242] },\n  { id: \"purple-blue-light-to-dark\", fromColor: [229, 213, 242], toColor: [93, 44, 112] },\n  { id: \"purple-red-bright\", fromColor: [255, 204, 225], toColor: [199, 0, 99] },\n  { id: \"purple-red-light-to-dark\", fromColor: [250, 215, 246], toColor: [143, 17, 57] },\n  { id: \"red-bright\", fromColor: [255, 204, 204], toColor: [219, 0, 0] },\n  { id: \"red-light-to-dark\", fromColor: [255, 224, 224], toColor: [143, 10, 10] },\n  {\n    id: \"red-to-blue-diverging-bright\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [196, 69, 57], toColor: [255, 255, 191] },\n      { fromColor: [255, 255, 191], toColor: [48, 95, 207] }\n    ]\n  },\n  {\n    id: \"red-to-blue-diverging-dark\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [107, 13, 13], toColor: [204, 204, 102] },\n      { fromColor: [204, 204, 102], toColor: [13, 53, 97] }\n    ]\n  },\n  {\n    id: \"red-to-green\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [245, 0, 0], toColor: [245, 245, 0] },\n      { fromColor: [245, 245, 0], toColor: [0, 245, 0] }\n    ]\n  },\n  {\n    id: \"red-to-green-diverging-bright\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [186, 20, 20], toColor: [255, 255, 191] },\n      { fromColor: [255, 255, 191], toColor: [54, 145, 33] }\n    ]\n  },\n  {\n    id: \"red-to-green-diverging-dark\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [97, 21, 13], toColor: [204, 204, 102] },\n      { fromColor: [204, 204, 102], toColor: [16, 69, 16] }\n    ]\n  },\n  {\n    id: \"slope\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [56, 168, 0], toColor: [255, 255, 0] },\n      { fromColor: [255, 255, 0], toColor: [255, 0, 0] }\n    ]\n  },\n  {\n    id: \"spectrum-full-bright\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [255, 0, 0], toColor: [255, 255, 0] },\n      { fromColor: [255, 255, 0], toColor: [0, 255, 255] },\n      { fromColor: [0, 255, 255], toColor: [0, 0, 255] }\n    ]\n  },\n  {\n    id: \"spectrum-full-dark\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [153, 0, 0], toColor: [153, 153, 0] },\n      { fromColor: [153, 153, 0], toColor: [0, 153, 153] },\n      { fromColor: [0, 153, 153], toColor: [0, 0, 153] }\n    ]\n  },\n  {\n    id: \"spectrum-full-light\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [255, 153, 153], toColor: [255, 255, 153] },\n      { fromColor: [255, 255, 153], toColor: [153, 255, 255] },\n      { fromColor: [153, 255, 255], toColor: [153, 153, 255] }\n    ]\n  },\n  {\n    id: \"surface\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [112, 153, 89], toColor: [242, 238, 162] },\n      { fromColor: [242, 238, 162], toColor: [242, 206, 133] },\n      { fromColor: [242, 206, 133], toColor: [194, 140, 124] },\n      { fromColor: [194, 140, 124], toColor: [255, 242, 255] }\n    ]\n  },\n  {\n    id: \"temperature\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [255, 252, 255], toColor: [255, 0, 255] },\n      { fromColor: [255, 0, 255], toColor: [0, 0, 255] },\n      { fromColor: [0, 0, 255], toColor: [0, 255, 255] },\n      { fromColor: [0, 255, 255], toColor: [0, 255, 0] },\n      { fromColor: [0, 255, 0], toColor: [255, 255, 0] },\n      { fromColor: [255, 255, 0], toColor: [255, 128, 0] },\n      { fromColor: [255, 128, 0], toColor: [128, 0, 0] }\n    ]\n  },\n  { id: \"white-to-black\", fromColor: [255, 255, 255], toColor: [0, 0, 0] },\n  {\n    id: \"yellow-to-dark-red\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [255, 255, 128], toColor: [242, 167, 46] },\n      { fromColor: [242, 167, 46], toColor: [107, 0, 0] }\n    ]\n  },\n  {\n    id: \"yellow-to-green-to-dark-blue\",\n    type: \"multipart\",\n    colorRamps: [\n      { fromColor: [255, 255, 128], toColor: [56, 224, 9] },\n      { fromColor: [56, 224, 9], toColor: [26, 147, 171] },\n      { fromColor: [26, 147, 171], toColor: [12, 16, 120] }\n    ]\n  },\n  { id: \"yellow-to-red\", fromColor: [245, 245, 0], toColor: [255, 0, 0] },\n  { id: \"yellow-green-bright\", fromColor: [236, 252, 204], toColor: [157, 204, 16] },\n  { id: \"yellow-green-light-to-dark\", fromColor: [215, 240, 175], toColor: [96, 107, 45] }\n];\nconst colorRampDict = new s({\n  Aspect: \"aspect\",\n  \"Black to White\": \"black-to-white\",\n  \"Blue Bright\": \"blue-bright\",\n  \"Blue Light to Dark\": \"blue-light-to-dark\",\n  \"Blue-Green Bright\": \"blue-green-bright\",\n  \"Blue-Green Light to Dark\": \"blue-green-light-to-dark\",\n  \"Brown Light to Dark\": \"brown-light-to-dark\",\n  \"Brown to Blue Green Diverging, Bright\": \"brown-to-blue-green-diverging-right\",\n  \"Brown to Blue Green Diverging, Dark\": \"brown-to-blue-green-diverging-dark\",\n  \"Coefficient Bias\": \"coefficient-bias\",\n  \"Cold to Hot Diverging\": \"cold-to-hot-diverging\",\n  \"Condition Number\": \"condition-number\",\n  \"Cyan to Purple\": \"cyan-to-purple\",\n  \"Cyan-Light to Blue-Dark\": \"cyan-light-to-blue-dark\",\n  Distance: \"distance\",\n  \"Elevation #1\": \"elevation1\",\n  \"Elevation #2\": \"elevation2\",\n  Errors: \"errors\",\n  \"Gray Light to Dark\": \"gray-light-to-dark\",\n  \"Green Bright\": \"green-bright\",\n  \"Green Light to Dark\": \"green-light-to-dark\",\n  \"Green to Blue\": \"green-to-blue\",\n  \"Orange Bright\": \"orange-bright\",\n  \"Orange Light to Dark\": \"orange-light-to-dark\",\n  \"Partial Spectrum\": \"partial-spectrum\",\n  \"Partial Spectrum 1 Diverging\": \"partial-spectrum-1-diverging\",\n  \"Partial Spectrum 2 Diverging\": \"partial-spectrum-2-diverging\",\n  \"Pink to YellowGreen Diverging, Bright\": \"pink-to-yellow-green-diverging-bright\",\n  \"Pink to YellowGreen Diverging, Dark\": \"pink-to-yellow-green-diverging-dark\",\n  Precipitation: \"precipitation\",\n  Prediction: \"prediction\",\n  \"Purple Bright\": \"purple-bright\",\n  \"Purple to Green Diverging, Bright\": \"purple-to-green-diverging-bright\",\n  \"Purple to Green Diverging, Dark\": \"purple-to-green-diverging-dark\",\n  \"Purple-Blue Bright\": \"purple-blue-bright\",\n  \"Purple-Blue Light to Dark\": \"purple-blue-light-to-dark\",\n  \"Purple-Red Bright\": \"purple-red-bright\",\n  \"Purple-Red Light to Dark\": \"purple-red-light-to-dark\",\n  \"Red Bright\": \"red-bright\",\n  \"Red Light to Dark\": \"red-light-to-dark\",\n  \"Red to Blue Diverging, Bright\": \"red-to-blue-diverging-bright\",\n  \"Red to Blue Diverging, Dark\": \"red-to-blue-diverging-dark\",\n  \"Red to Green\": \"red-to-green\",\n  \"Red to Green Diverging, Bright\": \"red-to-green-diverging-bright\",\n  \"Red to Green Diverging, Dark\": \"red-to-green-diverging-dark\",\n  Slope: \"slope\",\n  \"Spectrum-Full Bright\": \"spectrum-full-bright\",\n  \"Spectrum-Full Dark\": \"spectrum-full-dark\",\n  \"Spectrum-Full Light\": \"spectrum-full-light\",\n  Surface: \"surface\",\n  Temperature: \"temperature\",\n  \"White to Black\": \"white-to-black\",\n  \"Yellow to Dark Red\": \"yellow-to-dark-red\",\n  \"Yellow to Green to Dark Blue\": \"yellow-to-green-to-dark-blue\",\n  \"Yellow to Red\": \"yellow-to-red\",\n  \"Yellow-Green Bright\": \"yellow-green-bright\",\n  \"Yellow-Green Light to Dark\": \"yellow-green-light-to-dark\"\n});\n//--------------------------------------------------------------------------\n//\n//  Private Methods\n//\n//--------------------------------------------------------------------------\nfunction _colorsEqual(color1, color2) {\n  if (!color1 || !color2 || color1.length !== color2.length) {\n    return false;\n  }\n  for (let i = 0; i < color1.length; i++) {\n    if (color1[i] > color2[i] + 2 || color1[i] < color2[i] - 2) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction _invertAlgorithmicColorRamp(colorRamp) {\n  const newColorRamp = colorRamp.clone();\n  newColorRamp.fromColor = colorRamp.toColor;\n  newColorRamp.toColor = colorRamp.fromColor;\n  newColorRamp.algorithm = colorRamp.algorithm;\n  return newColorRamp;\n}\nfunction _invertColorRamp(colorRamp) {\n  if (colorRamp.type === \"multipart\") {\n    const newColorRamp = colorRamp.clone();\n    if (!newColorRamp.colorRamps?.length) {\n      return newColorRamp;\n    }\n    newColorRamp.colorRamps = newColorRamp.colorRamps.reverse().map((ramp) => _invertAlgorithmicColorRamp(ramp));\n    return newColorRamp;\n  }\n  return _invertAlgorithmicColorRamp(colorRamp);\n}\nfunction _getColorRampId(colorRamp, lookUpColorRamps) {\n  if (!colorRamp) {\n    return undefined;\n  }\n  const colorRamps = lookUpColorRamps ?? PREDEFINED_JSON_COLOR_RAMPS;\n  let selectedColorRampId = null;\n  // types are defined as algorithmic and multipart in colorRamp\n  if (colorRamp.type === \"algorithmic\") {\n    colorRamps.some((storeColorRamp) => {\n      if (\n        _colorsEqual(colorRamp.fromColor.toRgb(), storeColorRamp.fromColor) &&\n        _colorsEqual(colorRamp.toColor.toRgb(), storeColorRamp.toColor)\n      ) {\n        selectedColorRampId = storeColorRamp.id;\n        return true;\n      }\n      return undefined;\n    });\n  } else if (colorRamp.type === \"multipart\") {\n    colorRamps.some((storeColorRamp) => {\n      const colorRampParts = colorRamp.colorRamps;\n      const storeColorRampParts = storeColorRamp.colorRamps;\n      //lengths equal\n      if (colorRampParts && storeColorRampParts && colorRampParts.length === storeColorRampParts.length) {\n        if (\n          !storeColorRampParts.some((storeColorRampPart, idx) => {\n            if (\n              !_colorsEqual(colorRampParts[idx].fromColor.toRgb(), new h$1(storeColorRampPart.fromColor).toRgb()) ||\n              !_colorsEqual(colorRampParts[idx].toColor.toRgb(), new h$1(storeColorRampPart.toColor).toRgb())\n            ) {\n              return true;\n            }\n            return undefined;\n          })\n        ) {\n          if (selectedColorRampId) {\n            return true;\n          }\n          selectedColorRampId = storeColorRamp.id;\n        }\n      }\n      return undefined;\n    });\n  }\n  return selectedColorRampId;\n}\n//--------------------------------------------------------------------------\n//\n//  Public Methods\n//\n//--------------------------------------------------------------------------\nfunction getColorRampId(colorRamp, lookUpColorRamps) {\n  if (!colorRamp) {\n    return undefined;\n  }\n  let selectedColorRampId = _getColorRampId(colorRamp, lookUpColorRamps);\n  if (selectedColorRampId == null) {\n    colorRamp = _invertColorRamp(colorRamp);\n    selectedColorRampId = _getColorRampId(colorRamp, lookUpColorRamps);\n  }\n  return selectedColorRampId;\n}\nfunction getColorRampName(colorRampOrId) {\n  const selectedColorRampId = typeof colorRampOrId === \"string\" ? colorRampOrId : getColorRampId(colorRampOrId);\n  if (selectedColorRampId) {\n    return colorRampDict.toJSON(selectedColorRampId);\n  }\n  return null;\n}\nfunction processColorrampOptions(options) {\n  options = options || {};\n  const numColors = options.numColors || 256;\n  const distanceOffset = options.distanceOffset || 0;\n  const isCustomInterval =\n    options.isCustomInterval != null\n      ? options.isCustomInterval\n      : options.distanceInterval !== null && options.distanceInterval !== 1 / (numColors - 1);\n  const distanceInterval = options.distanceInterval || 1 / (numColors - 1);\n  return {\n    ...options,\n    numColors,\n    distanceOffset,\n    interpolateAlpha: !!options.interpolateAlpha,\n    distanceInterval,\n    isCustomInterval,\n    weights: options.weights\n  };\n}\nfunction createHsvAlgorithmicColorRamp(fromHSV, toHSV, options) {\n  // ported from 3.x colorRampGenerator, which was based on AlgorithmicColorRamp in ArcObjects\n  const { numColors, distanceOffset, distanceInterval: interval, isCustomInterval } = options;\n  const fromGrey = fromHSV.s === 0;\n  const toGrey = toHSV.s === 0;\n  let fromHue = fromHSV.h;\n  let toHue = toHSV.h;\n  //favor the hue from somewhat saturated color\n  if (fromGrey && !toGrey) {\n    fromHue = toHue;\n  } else if (toGrey && !fromGrey) {\n    toHSV = { ...toHSV, h: fromHue };\n    toHue = fromHue;\n  }\n  let hueDiff = Math.abs(toHue - fromHue);\n  let hi;\n  const MAX_HUE = 360;\n  if (hueDiff < MAX_HUE / 2) {\n    hi = (toHue - fromHue) * interval;\n  } else {\n    hueDiff = MAX_HUE - hueDiff;\n    if (fromHue > toHue) {\n      hi = hueDiff * interval;\n    } else {\n      hi = -hueDiff * interval;\n    }\n  }\n  const si = (toHSV.s - fromHSV.s) * interval;\n  const vi = (toHSV.v - fromHSV.v) * interval;\n  let { s, v } = fromHSV;\n  let h = fromHue;\n  if (distanceOffset) {\n    const offsetIntervalCount = distanceOffset / interval;\n    h = (h + offsetIntervalCount * hi + MAX_HUE) % MAX_HUE;\n    s += offsetIntervalCount * si;\n    v += offsetIntervalCount * vi;\n  }\n  const colors = [];\n  for (let i = 0; i < numColors - 1; i++) {\n    colors.push({ h, s, v });\n    h = (h + hi + MAX_HUE) % MAX_HUE;\n    s += si;\n    v += vi;\n  }\n  colors.push(isCustomInterval ? { h, s, v } : toHSV);\n  return colors;\n}\nfunction createCIELabAlgorithmicColorRamp(fromLAB, toLAB, options) {\n  // ported from 3.x colorRampGenerator, which was based on AlgorithmicColorRamp in ArcObjects\n  const { numColors, distanceOffset, distanceInterval: interval, isCustomInterval } = options;\n  let { l, a, b } = fromLAB;\n  const li = (toLAB.l - l) * interval;\n  const ai = (toLAB.a - a) * interval;\n  const bi = (toLAB.b - b) * interval;\n  const colors = [];\n  if (distanceOffset) {\n    const offsetIntervalCount = distanceOffset / interval;\n    l += offsetIntervalCount * li;\n    a += offsetIntervalCount * ai;\n    b += offsetIntervalCount * bi;\n  }\n  for (let i = 0; i < numColors - 1; i++) {\n    colors.push({ l, a, b });\n    l += li;\n    a += ai;\n    b += bi;\n  }\n  colors.push(isCustomInterval ? { l, a, b } : toLAB);\n  return colors;\n}\nfunction createLabLchAlgorithmicColorRamp(fromLCH, toLCH, options) {\n  // ported from 3.x colorRampGenerator, which was based on AlgorithmicColorRamp in ArcObjects\n  const { numColors, distanceOffset, distanceInterval: interval, isCustomInterval } = options;\n  const fromAngle = fromLCH.h;\n  const toAngle = toLCH.h;\n  const MAX_H = 2 * Math.PI;\n  // determine the increments for angle and carthesic distance\n  // Take the shortest distance between fromAngle and toAngle (clockwise/counterclockwise)\n  let angleD;\n  if (fromAngle <= toAngle) {\n    const dLeft = toAngle - fromAngle;\n    const dRight = toAngle - fromAngle - MAX_H;\n    angleD = Math.abs(dRight) < Math.abs(dLeft) ? dRight : dLeft;\n  } else {\n    const dLeft = toAngle + MAX_H - fromAngle;\n    const dRight = toAngle - fromAngle;\n    angleD = Math.abs(dRight) < Math.abs(dLeft) ? dRight : dLeft;\n  }\n  const angleI = angleD * interval;\n  const li = (toLCH.l - fromLCH.l) * interval;\n  const ci = (toLCH.c - fromLCH.c) * interval;\n  let { l, c, h } = fromLCH;\n  if (distanceOffset) {\n    const offsetIntervalCount = distanceOffset / interval;\n    l += offsetIntervalCount * li;\n    c += offsetIntervalCount * ci;\n    h = (h + offsetIntervalCount * angleI + MAX_H) % MAX_H;\n  }\n  const colors = [];\n  for (let i = 0; i < numColors - 1; i++) {\n    colors.push({ l, c, h });\n    l += li;\n    c += ci;\n    h = (h + angleI + MAX_H) % MAX_H;\n  }\n  colors.push(isCustomInterval ? { l, c, h } : toLCH);\n  return colors;\n}\nfunction createAlgorithmicColorRamp(algorithmicColorRamp, options) {\n  // ported from 3.x colorRampGenerator, which was based on AlgorithmicColorRamp in ArcObjects\n  // standardize from/to colors\n  let { fromColor, toColor } = algorithmicColorRamp;\n  fromColor = [...fromColor];\n  toColor = [...toColor];\n  if (fromColor.length === 3) {\n    fromColor = fromColor.concat([255]);\n  }\n  if (toColor.length === 3) {\n    toColor = toColor.concat([255]);\n  }\n  // process optional parameters\n  const algorithm = algorithmicColorRamp.algorithm || \"esriCIELabAlgorithm\";\n  const processedOptions = processColorrampOptions(options);\n  const { numColors, distanceOffset, isCustomInterval, interpolateAlpha } = processedOptions;\n  // simple case\n  if (numColors === 1 && distanceOffset === 0) {\n    return [fromColor];\n  }\n  if (numColors === 2 && distanceOffset === 0 && !isCustomInterval) {\n    return [fromColor, toColor];\n  }\n  // ramp\n  const fromColorRGB = { r: fromColor[0], g: fromColor[1], b: fromColor[2] };\n  const toColorRGB = { r: toColor[0], g: toColor[1], b: toColor[2] };\n  const colors =\n    algorithm === \"esriCIELabAlgorithm\"\n      ? createCIELabAlgorithmicColorRamp(z(fromColorRGB), z(toColorRGB), processedOptions)\n      : algorithm === \"esriHSVAlgorithm\"\n      ? createHsvAlgorithmicColorRamp(y(fromColorRGB), y(toColorRGB), processedOptions)\n      : createLabLchAlgorithmicColorRamp(v(fromColorRGB), v(toColorRGB), processedOptions);\n  // convert to rgba color\n  const rgbaColors = [];\n  const fromAlpha = fromColor[3] ?? 255;\n  const toAlpha = toColor[3] ?? 255;\n  const alphaI = (toAlpha - fromAlpha) / (numColors - 1);\n  for (let i = 0; i < numColors; i++) {\n    const { r, g, b } = p(colors[i]);\n    const a = interpolateAlpha ? Math.round(fromAlpha + alphaI * i) : 255;\n    rgbaColors.push([r, g, b, a]);\n  }\n  return rgbaColors;\n}\nfunction createMultiPartColorRamp(multiPartColorRamp, options) {\n  const { numColors, interpolateAlpha } = processColorrampOptions(options);\n  let weights = options?.weights;\n  const { colorRamps } = multiPartColorRamp;\n  if (weights) {\n    const sum = weights.reduce((a, b) => a + b);\n    weights = weights.map((weight) => weight / sum);\n  } else {\n    // TODO: weights can be calculated from start/stop when AlgorithmicColorramp is updated https://developers.arcgis.com/documentation/common-data-types/color-ramp-objects.htm\n    weights = [];\n    for (let i = 0; i < colorRamps.length; i++) {\n      weights[i] = 1 / colorRamps.length;\n    }\n  }\n  const rgbaColors = [];\n  let count = 0,\n    weightSum = 0;\n  const distanceInterval = 1 / (numColors - 1);\n  let aligned = false;\n  for (let i = 0; i < colorRamps.length; i++) {\n    let distanceOffset = aligned ? 0 : count * distanceInterval - weightSum;\n    let segmentColorCount =\n      i === colorRamps.length - 1 ? numColors - 1 - count : (weights[i] - distanceOffset) / distanceInterval;\n    aligned = Math.ceil(segmentColorCount) === segmentColorCount;\n    segmentColorCount = Math.ceil(segmentColorCount);\n    if (segmentColorCount === 0) {\n      continue;\n    }\n    distanceOffset /= weights[i];\n    const colors = createAlgorithmicColorRamp(colorRamps[i], {\n      numColors: segmentColorCount,\n      interpolateAlpha,\n      distanceOffset,\n      distanceInterval: distanceInterval / weights[i]\n    });\n    count += colors.length;\n    rgbaColors.push(...colors);\n    weightSum += weights[i];\n  }\n  const toColor = [...colorRamps[colorRamps.length - 1].toColor];\n  if (toColor.length === 3) {\n    toColor.push(255);\n  }\n  rgbaColors.push(toColor);\n  return rgbaColors;\n}\n/**\n * convert a ColorRamp object/json to a list of rgba colors. Default number of colors is 256.\n * @method convertColorRampToColors\n * @since 4.27\n * @instance\n * @todo doc\n * @ignore\n *\n * @param {module:esri/rest/support/AlgorithmicColorRamp | module:esri/rest/support/MultipartColorRamp} colorRamp - the input colorRamp\n * @param {object} [options] - Additional options that can be used to control the output\n * @param {number} [options.numColors=256] - Number of colors.\n * @param {number} [options.interpolateAlpha] - When true, alpha is interpolated.\n *\n * @return {number[]} A 4-component array of rgba colors.\n */\nfunction convertColorRampToColors(colorRamp, options) {\n  const colorRampJSON = \"toJSON\" in colorRamp ? colorRamp.toJSON() : colorRamp;\n  const rgbaColors =\n    colorRampJSON.type === \"multipart\"\n      ? createMultiPartColorRamp(colorRampJSON, options)\n      : createAlgorithmicColorRamp(colorRampJSON, options);\n  return rgbaColors;\n}\n/**\n * convert a ColorRamp object/json to a raster colormap. Default number of colors is 256.\n * @method convertColorRampToColormap\n * @since 4.27\n * @instance\n * @todo doc\n * @ignore\n *\n * @param {module:esri/rest/support/AlgorithmicColorRamp | module:esri/rest/support/MultipartColorRamp} colorRamp - the input colorRamp\n * @param {object} [options] - Additional options that can be used to control the output\n * @param {number} [options.numColors=256] - Number of colors.\n * @param {number} [options.interpolateAlpha] - When true, alpha is interpolated.\n *\n * @return {number[]} Raster colormap represented in a 4-component or 5-component array: [value, r, g, b][] or [value, r, g, b, a][]\n */\nfunction convertColorRampToColormap(colorRamp, options) {\n  const rgbaColors = convertColorRampToColors(colorRamp, options);\n  const interpolateAlpha = options?.interpolateAlpha;\n  rgbaColors.forEach((value, index) => {\n    value.unshift(index);\n    // classical raster colormap skips alpha, especially when used on server side\n    if (!interpolateAlpha) {\n      value.pop();\n    }\n  });\n  return rgbaColors;\n}\nfunction getHsvColor(color) {\n  const colorHsv = y(color);\n  return {\n    type: \"HsvColor\",\n    Hue: colorHsv.h,\n    Saturation: colorHsv.s,\n    Value: colorHsv.v,\n    AlphaValue: 255\n  };\n}\nfunction getRFxArgAlgorithmicColorRamp(colorRamp) {\n  const jsonColorRamp = colorRamp.toJSON();\n  return {\n    Algorithm: jsonColorRamp?.Algorithm || \"esriHSVAlgorithm\",\n    type: \"AlgorithmicColorRamp\",\n    FromColor: getHsvColor(colorRamp.fromColor),\n    ToColor: getHsvColor(colorRamp.toColor)\n  };\n}\nfunction getRFxArgColorRampValue(colorRamp) {\n  //convert colorRamp object to color ramp format readable as part of RFTs\n  const name = getColorRampName(colorRamp);\n  if (!name) {\n    return null;\n  }\n  if (colorRamp.type === \"algorithmic\") {\n    return { ...getRFxArgAlgorithmicColorRamp(colorRamp), Name: name };\n  }\n  if (colorRamp.colorRamps) {\n    const arrayOfColorRamps = colorRamp.colorRamps.map(getRFxArgAlgorithmicColorRamp);\n    return {\n      type: \"MultiPartColorRamp\",\n      NumColorRamps: arrayOfColorRamps.length,\n      ArrayOfColorRamp: arrayOfColorRamps,\n      Name: name\n    };\n  }\n  return null;\n}\n\nexport {\n  PREDEFINED_JSON_COLOR_RAMPS as P,\n  colorRampDict as a,\n  convertColorRampToColormap as c,\n  getRFxArgColorRampValue as g\n};\n\n//# sourceMappingURL=colorRampUtils.js.map\n","/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/snabbdom/snabbdom/blob/master/LICENSE\n *\n * Modified for Stencil's renderer and slot projection\n */\nlet scopeId;\nlet contentRef;\nlet hostTagName;\nlet customError;\nlet i = 0;\nlet useNativeShadowDom = false;\nlet checkSlotFallbackVisibility = false;\nlet checkSlotRelocate = false;\nlet isSvgMode = false;\nlet renderingRef = null;\nlet queueCongestion = 0;\nlet queuePending = false;\n/*\n Stencil Client Platform v4.8.1 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nconst Build = {\n    isDev: BUILD.isDev ? true : false,\n    isBrowser: true,\n    isServer: false,\n    isTesting: BUILD.isTesting ? true : false,\n};\nconst getAssetPath = (path) => {\n    const assetUrl = new URL(path, plt.$resourcesUrl$);\n    return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nconst setAssetPath = (path) => (plt.$resourcesUrl$ = path);\nconst createTime = (fnName, tagName = '') => {\n    if (BUILD.profile && performance.mark) {\n        const key = `st:${fnName}:${tagName}:${i++}`;\n        // Start\n        performance.mark(key);\n        // End\n        return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n    }\n    else {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    if (BUILD.profile && performance.mark) {\n        if (performance.getEntriesByName(key, 'mark').length === 0) {\n            performance.mark(key);\n        }\n        return () => {\n            if (performance.getEntriesByName(measureText, 'measure').length === 0) {\n                performance.measure(measureText, key);\n            }\n        };\n    }\n    else {\n        return () => {\n            return;\n        };\n    }\n};\nconst inspect = (ref) => {\n    const hostRef = getHostRef(ref);\n    if (!hostRef) {\n        return undefined;\n    }\n    const flags = hostRef.$flags$;\n    const hostElement = hostRef.$hostElement$;\n    return {\n        renderCount: hostRef.$renderCount$,\n        flags: {\n            hasRendered: !!(flags & 2 /* HOST_FLAGS.hasRendered */),\n            hasConnected: !!(flags & 1 /* HOST_FLAGS.hasConnected */),\n            isWaitingForChildren: !!(flags & 4 /* HOST_FLAGS.isWaitingForChildren */),\n            isConstructingInstance: !!(flags & 8 /* HOST_FLAGS.isConstructingInstance */),\n            isQueuedForUpdate: !!(flags & 16 /* HOST_FLAGS.isQueuedForUpdate */),\n            hasInitializedComponent: !!(flags & 32 /* HOST_FLAGS.hasInitializedComponent */),\n            hasLoadedComponent: !!(flags & 64 /* HOST_FLAGS.hasLoadedComponent */),\n            isWatchReady: !!(flags & 128 /* HOST_FLAGS.isWatchReady */),\n            isListenReady: !!(flags & 256 /* HOST_FLAGS.isListenReady */),\n            needsRerender: !!(flags & 512 /* HOST_FLAGS.needsRerender */),\n        },\n        instanceValues: hostRef.$instanceValues$,\n        ancestorComponent: hostRef.$ancestorComponent$,\n        hostElement,\n        lazyInstance: hostRef.$lazyInstance$,\n        vnode: hostRef.$vnode$,\n        modeName: hostRef.$modeName$,\n        onReadyPromise: hostRef.$onReadyPromise$,\n        onReadyResolve: hostRef.$onReadyResolve$,\n        onInstancePromise: hostRef.$onInstancePromise$,\n        onInstanceResolve: hostRef.$onInstanceResolve$,\n        onRenderResolve: hostRef.$onRenderResolve$,\n        queuedListeners: hostRef.$queuedListeners$,\n        rmListeners: hostRef.$rmListeners$,\n        ['s-id']: hostElement['s-id'],\n        ['s-cr']: hostElement['s-cr'],\n        ['s-lr']: hostElement['s-lr'],\n        ['s-p']: hostElement['s-p'],\n        ['s-rc']: hostElement['s-rc'],\n        ['s-sc']: hostElement['s-sc'],\n    };\n};\nconst installDevTools = () => {\n    if (BUILD.devTools) {\n        const stencil = (win.stencil = win.stencil || {});\n        const originalInspect = stencil.inspect;\n        stencil.inspect = (ref) => {\n            let result = inspect(ref);\n            if (!result && typeof originalInspect === 'function') {\n                result = originalInspect(ref);\n            }\n            return result;\n        };\n    }\n};\nconst CONTENT_REF_ID = 'r';\nconst ORG_LOCATION_ID = 'o';\nconst SLOT_NODE_ID = 's';\nconst TEXT_NODE_ID = 't';\nconst HYDRATE_ID = 's-id';\nconst HYDRATED_STYLE_ID = 'sty-id';\nconst HYDRATE_CHILD_ID = 'c-id';\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\n/**\n * Constant for styles to be globally applied to `slot-fb` elements for pseudo-slot behavior.\n *\n * Two cascading rules must be used instead of a `:not()` selector due to Stencil browser\n * support as of Stencil v4.\n */\nconst SLOT_FB_CSS = 'slot-fb{display:contents}slot-fb[hidden]{display:none}';\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\nconst FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n    'formAssociatedCallback',\n    'formResetCallback',\n    'formDisabledCallback',\n    'formStateRestoreCallback',\n];\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst HTML_NS = 'http://www.w3.org/1999/xhtml';\nconst isDef = (v) => v != null;\n/**\n * Check whether a value is a 'complex type', defined here as an object or a\n * function.\n *\n * @param o the value to check\n * @returns whether it's a complex type or not\n */\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Helper method for querying a `meta` tag that contains a nonce value\n * out of a DOM's head.\n *\n * @param doc The DOM containing the `head` to query against\n * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag\n * exists or the tag has no content.\n */\nfunction queryNonceMetaTagContent(doc) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;\n}\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let key = null;\n    let slotName = null;\n    let simple = false;\n    let lastSimple = false;\n    const vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                else if (BUILD.isDev && typeof nodeName !== 'function' && child.$flags$ === undefined) {\n                    consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        if (BUILD.isDev && nodeName === 'input') {\n            validateInputProperties(vnodeData);\n        }\n        if (BUILD.vdomKey && vnodeData.key) {\n            key = vnodeData.key;\n        }\n        if (BUILD.slotRelocation && vnodeData.name) {\n            slotName = vnodeData.name;\n        }\n        // normalize class / className attributes\n        if (BUILD.vdomClass) {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter((k) => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    if (BUILD.isDev && vNodeChildren.some(isHost)) {\n        consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n    }\n    if (BUILD.vdomFunctional && typeof nodeName === 'function') {\n        // nodeName is a functional component\n        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    if (BUILD.vdomKey) {\n        vnode.$key$ = key;\n    }\n    if (BUILD.slotRelocation) {\n        vnode.$name$ = slotName;\n    }\n    return vnode;\n};\n/**\n * A utility function for creating a virtual DOM node from a tag and some\n * possible text content.\n *\n * @param tag the tag for this element\n * @param text possible text content for the node\n * @returns a newly-minted virtual DOM node\n */\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    if (BUILD.vdomAttribute) {\n        vnode.$attrs$ = null;\n    }\n    if (BUILD.vdomKey) {\n        vnode.$key$ = null;\n    }\n    if (BUILD.slotRelocation) {\n        vnode.$name$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\n/**\n * Check whether a given node is a Host node or not\n *\n * @param node the virtual DOM node to check\n * @returns whether it's a Host node or not\n */\nconst isHost = (node) => node && node.$tag$ === Host;\n/**\n * Implementation of {@link d.FunctionalUtilities} for Stencil's VDom.\n *\n * Note that these functions convert from {@link d.VNode} to\n * {@link d.ChildNode} to give functional component developers a friendly\n * interface.\n */\nconst vdomFnUtils = {\n    forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n    map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),\n};\n/**\n * Convert a {@link d.VNode} to a {@link d.ChildNode} in order to present a\n * friendlier public interface (hence, 'convertToPublic').\n *\n * @param node the virtual DOM node to convert\n * @returns a converted child node\n */\nconst convertToPublic = (node) => ({\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$,\n});\n/**\n * Convert a {@link d.ChildNode} back to an equivalent {@link d.VNode} in\n * order to use the resulting object in the virtual DOM. The initial object was\n * likely created as part of presenting a public API, so converting it back\n * involved making it 'private' again (hence, `convertToPrivate`).\n *\n * @param node the child node to convert\n * @returns a converted virtual DOM node\n */\nconst convertToPrivate = (node) => {\n    if (typeof node.vtag === 'function') {\n        const vnodeData = Object.assign({}, node.vattrs);\n        if (node.vkey) {\n            vnodeData.key = node.vkey;\n        }\n        if (node.vname) {\n            vnodeData.name = node.vname;\n        }\n        return h(node.vtag, vnodeData, ...(node.vchildren || []));\n    }\n    const vnode = newVNode(node.vtag, node.vtext);\n    vnode.$attrs$ = node.vattrs;\n    vnode.$children$ = node.vchildren;\n    vnode.$key$ = node.vkey;\n    vnode.$name$ = node.vname;\n    return vnode;\n};\n/**\n * Validates the ordering of attributes on an input element\n *\n * @param inputElm the element to validate\n */\nconst validateInputProperties = (inputElm) => {\n    const props = Object.keys(inputElm);\n    const value = props.indexOf('value');\n    if (value === -1) {\n        return;\n    }\n    const typeIndex = props.indexOf('type');\n    const minIndex = props.indexOf('min');\n    const maxIndex = props.indexOf('max');\n    const stepIndex = props.indexOf('step');\n    if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n        consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n    }\n};\n/**\n * Entrypoint of the client-side hydration process. Facilitates calls to hydrate the\n * document and all its nodes.\n *\n * This process will also reconstruct the shadow root and slot DOM nodes for components using shadow DOM.\n *\n * @param hostElm The element to hydrate.\n * @param tagName The element's tag name.\n * @param hostId The host ID assigned to the element by the server.\n * @param hostRef The host reference for the element.\n */\nconst initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n    const endHydrate = createTime('hydrateClient', tagName);\n    const shadowRoot = hostElm.shadowRoot;\n    const childRenderNodes = [];\n    const slotNodes = [];\n    const shadowRootNodes = BUILD.shadowDom && shadowRoot ? [] : null;\n    const vnode = (hostRef.$vnode$ = newVNode(tagName, null));\n    if (!plt.$orgLocNodes$) {\n        initializeDocumentHydrate(doc.body, (plt.$orgLocNodes$ = new Map()));\n    }\n    hostElm[HYDRATE_ID] = hostId;\n    hostElm.removeAttribute(HYDRATE_ID);\n    clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n    childRenderNodes.map((c) => {\n        const orgLocationId = c.$hostId$ + '.' + c.$nodeId$;\n        const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n        const node = c.$elm$;\n        // Put the node back in its original location since the native Shadow DOM\n        // can handle rendering it its correct location now\n        if (orgLocationNode && supportsShadow && orgLocationNode['s-en'] === '') {\n            orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n        }\n        if (!shadowRoot) {\n            node['s-hn'] = tagName;\n            if (orgLocationNode) {\n                node['s-ol'] = orgLocationNode;\n                node['s-ol']['s-nr'] = node;\n            }\n        }\n        plt.$orgLocNodes$.delete(orgLocationId);\n    });\n    if (BUILD.shadowDom && shadowRoot) {\n        shadowRootNodes.map((shadowRootNode) => {\n            if (shadowRootNode) {\n                shadowRoot.appendChild(shadowRootNode);\n            }\n        });\n    }\n    endHydrate();\n};\n/**\n * Recursively constructs the virtual node tree for a host element and its children.\n * The tree is constructed by parsing the annotations set on the nodes by the server.\n *\n * In addition to constructing the vNode tree, we also track information about the node's\n * descendants like which are slots, which should exist in the shadow root, and which\n * are nodes that should be rendered as children of the parent node.\n *\n * @param parentVNode The vNode representing the parent node.\n * @param childRenderNodes An array of all child nodes in the parent's node tree.\n * @param slotNodes An array of all slot nodes in the parent's node tree.\n * @param shadowRootNodes An array all nodes that should be rendered in the shadow root in the parent's node tree.\n * @param hostElm The parent element.\n * @param node The node to construct the vNode tree for.\n * @param hostId The host ID assigned to the element by the server.\n */\nconst clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {\n    let childNodeType;\n    let childIdSplt;\n    let childVNode;\n    let i;\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n        if (childNodeType) {\n            // got the node data from the element's attribute\n            // `${hostId}.${nodeId}.${depth}.${index}`\n            childIdSplt = childNodeType.split('.');\n            if (childIdSplt[0] === hostId || childIdSplt[0] === '0') {\n                childVNode = {\n                    $flags$: 0,\n                    $hostId$: childIdSplt[0],\n                    $nodeId$: childIdSplt[1],\n                    $depth$: childIdSplt[2],\n                    $index$: childIdSplt[3],\n                    $tag$: node.tagName.toLowerCase(),\n                    $elm$: node,\n                    $attrs$: null,\n                    $children$: null,\n                    $key$: null,\n                    $name$: null,\n                    $text$: null,\n                };\n                childRenderNodes.push(childVNode);\n                node.removeAttribute(HYDRATE_CHILD_ID);\n                // this is a new child vnode\n                // so ensure its parent vnode has the vchildren array\n                if (!parentVNode.$children$) {\n                    parentVNode.$children$ = [];\n                }\n                // add our child vnode to a specific index of the vnode's children\n                parentVNode.$children$[childVNode.$index$] = childVNode;\n                // this is now the new parent vnode for all the next child checks\n                parentVNode = childVNode;\n                if (shadowRootNodes && childVNode.$depth$ === '0') {\n                    shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                }\n            }\n        }\n        // recursively drill down, end to start so we can remove nodes\n        for (i = node.childNodes.length - 1; i >= 0; i--) {\n            clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.childNodes[i], hostId);\n        }\n        if (node.shadowRoot) {\n            // keep drilling down through the shadow root nodes\n            for (i = node.shadowRoot.childNodes.length - 1; i >= 0; i--) {\n                clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.shadowRoot.childNodes[i], hostId);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        // `${COMMENT_TYPE}.${hostId}.${nodeId}.${depth}.${index}`\n        childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[1] === hostId || childIdSplt[1] === '0') {\n            // comment node for either the host id or a 0 host id\n            childNodeType = childIdSplt[0];\n            childVNode = {\n                $flags$: 0,\n                $hostId$: childIdSplt[1],\n                $nodeId$: childIdSplt[2],\n                $depth$: childIdSplt[3],\n                $index$: childIdSplt[4],\n                $elm$: node,\n                $attrs$: null,\n                $children$: null,\n                $key$: null,\n                $name$: null,\n                $tag$: null,\n                $text$: null,\n            };\n            if (childNodeType === TEXT_NODE_ID) {\n                childVNode.$elm$ = node.nextSibling;\n                if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* NODE_TYPE.TextNode */) {\n                    childVNode.$text$ = childVNode.$elm$.textContent;\n                    childRenderNodes.push(childVNode);\n                    // remove the text comment since it's no longer needed\n                    node.remove();\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                    if (shadowRootNodes && childVNode.$depth$ === '0') {\n                        shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                    }\n                }\n            }\n            else if (childVNode.$hostId$ === hostId) {\n                // this comment node is specifically for this host id\n                if (childNodeType === SLOT_NODE_ID) {\n                    // `${SLOT_NODE_ID}.${hostId}.${nodeId}.${depth}.${index}.${slotName}`;\n                    childVNode.$tag$ = 'slot';\n                    if (childIdSplt[5]) {\n                        node['s-sn'] = childVNode.$name$ = childIdSplt[5];\n                    }\n                    else {\n                        node['s-sn'] = '';\n                    }\n                    node['s-sr'] = true;\n                    if (BUILD.shadowDom && shadowRootNodes) {\n                        // browser support shadowRoot and this is a shadow dom component\n                        // create an actual slot element\n                        childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n                        if (childVNode.$name$) {\n                            // add the slot name attribute\n                            childVNode.$elm$.setAttribute('name', childVNode.$name$);\n                        }\n                        // insert the new slot element before the slot comment\n                        node.parentNode.insertBefore(childVNode.$elm$, node);\n                        // remove the slot comment since it's not needed for shadow\n                        node.remove();\n                        if (childVNode.$depth$ === '0') {\n                            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                        }\n                    }\n                    slotNodes.push(childVNode);\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                }\n                else if (childNodeType === CONTENT_REF_ID) {\n                    // `${CONTENT_REF_ID}.${hostId}`;\n                    if (BUILD.shadowDom && shadowRootNodes) {\n                        // remove the content ref comment since it's not needed for shadow\n                        node.remove();\n                    }\n                    else if (BUILD.slotRelocation) {\n                        hostElm['s-cr'] = node;\n                        node['s-cn'] = true;\n                    }\n                }\n            }\n        }\n    }\n    else if (parentVNode && parentVNode.$tag$ === 'style') {\n        const vnode = newVNode(null, node.textContent);\n        vnode.$elm$ = node;\n        vnode.$index$ = '0';\n        parentVNode.$children$ = [vnode];\n    }\n};\n/**\n * Recursively locate any comments representing an original location for a node in a node's\n * children or shadowRoot children.\n *\n * @param node The node to search.\n * @param orgLocNodes A map of the original location annotation and the current node being searched.\n */\nconst initializeDocumentHydrate = (node, orgLocNodes) => {\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        let i = 0;\n        for (; i < node.childNodes.length; i++) {\n            initializeDocumentHydrate(node.childNodes[i], orgLocNodes);\n        }\n        if (node.shadowRoot) {\n            for (i = 0; i < node.shadowRoot.childNodes.length; i++) {\n                initializeDocumentHydrate(node.shadowRoot.childNodes[i], orgLocNodes);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        const childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[0] === ORG_LOCATION_ID) {\n            orgLocNodes.set(childIdSplt[1] + '.' + childIdSplt[2], node);\n            node.nodeValue = '';\n            // useful to know if the original location is\n            // the root light-dom of a shadow dom component\n            node['s-en'] = childIdSplt[3];\n        }\n    }\n};\n// Private\nconst computeMode = (elm) => modeResolutionChain.map((h) => h(elm)).find((m) => !!m);\n// Public\nconst setMode = (handler) => modeResolutionChain.push(handler);\nconst getMode = (ref) => getHostRef(ref).$modeName$;\n/**\n * Parse a new property value for a given property type.\n *\n * While the prop value can reasonably be expected to be of `any` type as far as TypeScript's type checker is concerned,\n * it is not safe to assume that the string returned by evaluating `typeof propValue` matches:\n *   1. `any`, the type given to `propValue` in the function signature\n *   2. the type stored from `propType`.\n *\n * This function provides the capability to parse/coerce a property's value to potentially any other JavaScript type.\n *\n * Property values represented in TSX preserve their type information. In the example below, the number 0 is passed to\n * a component. This `propValue` will preserve its type information (`typeof propValue === 'number'`). Note that is\n * based on the type of the value being passed in, not the type declared of the class member decorated with `@Prop`.\n * ```tsx\n * <my-cmp prop-val={0}></my-cmp>\n * ```\n *\n * HTML prop values on the other hand, will always a string\n *\n * @param propValue the new value to coerce to some type\n * @param propType the type of the prop, expressed as a binary number\n * @returns the parsed/coerced value\n */\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (BUILD.propBoolean && propType & 4 /* MEMBER_FLAGS.Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (BUILD.propNumber && propType & 2 /* MEMBER_FLAGS.Number */) {\n            // force it to be a number\n            return parseFloat(propValue);\n        }\n        if (BUILD.propString && propType & 1 /* MEMBER_FLAGS.String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getElement = (ref) => (BUILD.lazyLoad ? getHostRef(ref).$hostElement$ : ref);\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            if (BUILD.isDev && !elm.isConnected) {\n                consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n            }\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* EVENT_FLAGS.Bubbles */),\n                composed: !!(flags & 2 /* EVENT_FLAGS.Composed */),\n                cancelable: !!(flags & 1 /* EVENT_FLAGS.Cancellable */),\n                detail,\n            });\n        },\n    };\n};\n/**\n * Helper function to create & dispatch a custom Event on a provided target\n * @param elm the target of the Event\n * @param name the name to give the custom Event\n * @param opts options for configuring a custom Event\n * @returns the custom Event\n */\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst rootAppliedStyles = /*@__PURE__*/ new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructableStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        if (typeof style === 'string') {\n            style = cssText;\n        }\n        else {\n            style.replaceSync(cssText);\n        }\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode) => {\n    var _a;\n    const scopeId = getScopeId(cmpMeta, mode);\n    const style = styles.get(scopeId);\n    if (!BUILD.attachStyles) {\n        return scopeId;\n    }\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* NODE_TYPE.DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                if (BUILD.hydrateClientSide &&\n                    styleContainerNode.host &&\n                    (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId}\"]`))) {\n                    // This is only happening on native shadow-dom, do not needs CSS var shim\n                    styleElm.innerHTML = style;\n                }\n                else {\n                    styleElm = doc.createElement('style');\n                    styleElm.innerHTML = style;\n                    // Apply CSP nonce to the style tag if it exists\n                    const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n                    if (nonce != null) {\n                        styleElm.setAttribute('nonce', nonce);\n                    }\n                    if (BUILD.hydrateServerSide || BUILD.hotModuleReplacement) {\n                        styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId);\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                // Add styles for `slot-fb` elements if we're using slots outside the Shadow DOM\n                if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {\n                    styleElm.innerHTML += SLOT_FB_CSS;\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (BUILD.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(BUILD.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$);\n    if ((BUILD.shadowDom || BUILD.scoped) && BUILD.cssAnnotations && flags & 10 /* CMP_FLAGS.needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n        if (BUILD.scoped && flags & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n            elm.classList.add(scopeId + '-s');\n        }\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + (BUILD.mode && mode && cmp.$flags$ & 32 /* CMP_FLAGS.hasMode */ ? cmp.$tagName$ + '-' + mode : cmp.$tagName$);\nconst convertScopedToShadow = (css) => css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, '$1{');\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n/**\n * When running a VDom render set properties present on a VDom node onto the\n * corresponding HTML element.\n *\n * Note that this function has special functionality for the `class`,\n * `style`, `key`, and `ref` attributes, as well as event handlers (like\n * `onClick`, etc). All others are just passed through as-is.\n *\n * @param elm the HTMLElement onto which attributes should be set\n * @param memberName the name of the attribute to set\n * @param oldValue the old value for the attribute\n * @param newValue the new value for the attribute\n * @param isSvg whether we're in an svg context or not\n * @param flags bitflags for Vdom variables\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if (BUILD.vdomClass && memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n        }\n        else if (BUILD.vdomStyle && memberName === 'style') {\n            // update style attribute, css properties and values\n            if (BUILD.updatable) {\n                for (const prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (!BUILD.hydrateServerSide && prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (const prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (!BUILD.hydrateServerSide && prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if (BUILD.vdomKey && memberName === 'key')\n            ;\n        else if (BUILD.vdomRef && memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if (BUILD.vdomListener &&\n            (BUILD.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) &&\n            memberName[0] === 'o' &&\n            memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue || newValue) {\n                // Need to account for \"capture\" events.\n                // If the event name ends with \"Capture\", we'll update the name to remove\n                // the \"Capture\" suffix and make sure the event listener is setup to handle the capture event.\n                const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n                // Make sure we only replace the last instance of \"Capture\"\n                memberName = memberName.replace(CAPTURE_EVENT_REGEX, '');\n                if (oldValue) {\n                    plt.rel(elm, memberName, oldValue, capture);\n                }\n                if (newValue) {\n                    plt.ael(elm, memberName, newValue, capture);\n                }\n            }\n        }\n        else if (BUILD.vdomPropOrAttr) {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        const n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) {\n                    /**\n                     * in case someone tries to set a read-only property, e.g. \"namespaceURI\", we just ignore it\n                     */\n                }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            let xlink = false;\n            if (BUILD.vdomXlink) {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    if (BUILD.vdomXlink && xlink) {\n                        elm.removeAttributeNS(XLINK_NS, memberName);\n                    }\n                    else {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* VNODE_FLAGS.isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (BUILD.vdomXlink && xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\n/**\n * Parsed a string of classnames into an array\n * @param value className string, e.g. \"foo bar baz\"\n * @returns list of classes, e.g. [\"foo\", \"bar\", \"baz\"]\n */\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst CAPTURE_EVENT_SUFFIX = 'Capture';\nconst CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + '$');\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* NODE_TYPE.DocumentFragment */ && newVnode.$elm$.host\n        ? newVnode.$elm$.host\n        : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    if (BUILD.updatable) {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\n/**\n * Create a DOM Node corresponding to one of the children of a given VNode.\n *\n * @param oldParentVNode the parent VNode from the previous render\n * @param newParentVNode the parent VNode from the current render\n * @param childIndex the index of the VNode, in the _new_ parent node's\n * children, for which we will create a new DOM node\n * @param parentElm the parent DOM node which our new node will be a child of\n * @returns the newly created node\n */\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    var _a;\n    // tslint:disable-next-line: prefer-const\n    const newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    let oldVNode;\n    if (BUILD.slotRelocation && !useNativeShadowDom) {\n        // remember for later we need to check to relocate nodes\n        checkSlotRelocate = true;\n        if (newVNode.$tag$ === 'slot') {\n            if (scopeId) {\n                // scoped css needs to add its scoped id to the parent element\n                parentElm.classList.add(scopeId + '-s');\n            }\n            newVNode.$flags$ |= newVNode.$children$\n                ? // slot element has fallback content\n                    2 /* VNODE_FLAGS.isSlotFallback */\n                : // slot element does not have fallback content\n                    1 /* VNODE_FLAGS.isSlotReference */;\n        }\n    }\n    if (BUILD.isDev && newVNode.$elm$) {\n        consoleDevError(`The JSX ${newVNode.$text$ !== null ? `\"${newVNode.$text$}\" text` : `\"${newVNode.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`);\n    }\n    if (BUILD.vdomText && newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else if (BUILD.slotRelocation && newVNode.$flags$ & 1 /* VNODE_FLAGS.isSlotReference */) {\n        // create a slot reference node\n        elm = newVNode.$elm$ =\n            BUILD.isDebug || BUILD.hydrateServerSide ? slotReferenceDebugNode(newVNode) : doc.createTextNode('');\n    }\n    else {\n        if (BUILD.svg && !isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = (BUILD.svg\n            ? doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */\n                ? 'slot-fb'\n                : newVNode.$tag$)\n            : doc.createElement(BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */\n                ? 'slot-fb'\n                : newVNode.$tag$));\n        if (BUILD.svg && isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        if (BUILD.vdomAttribute) {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if ((BUILD.shadowDom || BUILD.scoped) && isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i, elm);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        if (BUILD.svg) {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    if (BUILD.slotRelocation) {\n        elm['s-hn'] = hostTagName;\n        if (newVNode.$flags$ & (2 /* VNODE_FLAGS.isSlotFallback */ | 1 /* VNODE_FLAGS.isSlotReference */)) {\n            // remember the content reference comment\n            elm['s-sr'] = true;\n            // Persist the name of the slot that this slot was going to be projected into.\n            elm['s-fs'] = (_a = newVNode.$attrs$) === null || _a === void 0 ? void 0 : _a.slot;\n            // remember the content reference comment\n            elm['s-cr'] = contentRef;\n            // remember the slot name, or empty string for default slot\n            elm['s-sn'] = newVNode.$name$ || '';\n            // check if we've got an old vnode for this slot\n            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n                // we've got an old slot vnode and the wrapper is being replaced\n                // so let's move the old slot content back to it's original location\n                putBackInOriginalLocation(oldParentVNode.$elm$, false);\n            }\n        }\n    }\n    return elm;\n};\nconst putBackInOriginalLocation = (parentElm, recursive) => {\n    var _a;\n    plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n    const oldSlotChildNodes = parentElm.childNodes;\n    for (let i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n        const childNode = oldSlotChildNodes[i];\n        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n            // // this child node in the old element is from another component\n            // // remove this node from the old slot's parent\n            // childNode.remove();\n            // and relocate it back to it's original location\n            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n            // remove the old original location comment entirely\n            // later on the patch function will know what to do\n            // and move this to the correct spot if need be\n            childNode['s-ol'].remove();\n            childNode['s-ol'] = undefined;\n            // Reset so we can correctly move the node around again.\n            childNode['s-sh'] = undefined;\n            // When putting an element node back in its original location,\n            // we need to reset the `slot` attribute back to the value it originally had\n            // so we can correctly relocate it again in the future\n            if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                childNode.setAttribute('slot', (_a = childNode['s-sn']) !== null && _a !== void 0 ? _a : '');\n            }\n            checkSlotRelocate = true;\n        }\n        if (recursive) {\n            putBackInOriginalLocation(childNode, recursive);\n        }\n    }\n    plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n};\n/**\n * Create DOM nodes corresponding to a list of {@link d.Vnode} objects and\n * add them to the DOM in the appropriate place.\n *\n * @param parentElm the DOM node which should be used as a parent for the new\n * DOM nodes\n * @param before a child of the `parentElm` which the new children should be\n * inserted before (optional)\n * @param parentVNode the parent virtual DOM node\n * @param vnodes the new child virtual DOM nodes to produce DOM nodes for\n * @param startIdx the index in the child virtual DOM nodes at which to start\n * creating DOM nodes (inclusive)\n * @param endIdx the index in the child virtual DOM nodes at which to stop\n * creating DOM nodes (inclusive)\n */\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = ((BUILD.slotRelocation && parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);\n    let childNode;\n    if (BUILD.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx, parentElm);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, BUILD.slotRelocation ? referenceNode(before) : before);\n            }\n        }\n    }\n};\n/**\n * Remove the DOM elements corresponding to a list of {@link d.VNode} objects.\n * This can be used to, for instance, clean up after a list of children which\n * should no longer be shown.\n *\n * This function also handles some of Stencil's slot relocation logic.\n *\n * @param vnodes a list of virtual DOM nodes to remove\n * @param startIdx the index at which to start removing nodes (inclusive)\n * @param endIdx the index at which to stop removing nodes (inclusive)\n */\nconst removeVnodes = (vnodes, startIdx, endIdx) => {\n    for (let index = startIdx; index <= endIdx; ++index) {\n        const vnode = vnodes[index];\n        if (vnode) {\n            const elm = vnode.$elm$;\n            nullifyVNodeRefs(vnode);\n            if (elm) {\n                if (BUILD.slotRelocation) {\n                    // we're removing this element\n                    // so it's possible we need to show slot fallback content now\n                    checkSlotFallbackVisibility = true;\n                    if (elm['s-ol']) {\n                        // remove the original location comment\n                        elm['s-ol'].remove();\n                    }\n                    else {\n                        // it's possible that child nodes of the node\n                        // that's being removed are slot nodes\n                        putBackInOriginalLocation(elm, true);\n                    }\n                }\n                // remove the vnode's element from the dom\n                elm.remove();\n            }\n        }\n    }\n};\n/**\n * Reconcile the children of a new VNode with the children of an old VNode by\n * traversing the two collections of children, identifying nodes that are\n * conserved or changed, calling out to `patch` to make any necessary\n * updates to the DOM, and rearranging DOM nodes as needed.\n *\n * The algorithm for reconciling children works by analyzing two 'windows' onto\n * the two arrays of children (`oldCh` and `newCh`). We keep track of the\n * 'windows' by storing start and end indices and references to the\n * corresponding array entries. Initially the two 'windows' are basically equal\n * to the entire array, but we progressively narrow the windows until there are\n * no children left to update by doing the following:\n *\n * 1. Skip any `null` entries at the beginning or end of the two arrays, so\n *    that if we have an initial array like the following we'll end up dealing\n *    only with a window bounded by the highlighted elements:\n *\n *    [null, null, VNode1 , ... , VNode2, null, null]\n *                 ^^^^^^         ^^^^^^\n *\n * 2. Check to see if the elements at the head and tail positions are equal\n *    across the windows. This will basically detect elements which haven't\n *    been added, removed, or changed position, i.e. if you had the following\n *    VNode elements (represented as HTML):\n *\n *    oldVNode: `<div><p><span>HEY</span></p></div>`\n *    newVNode: `<div><p><span>THERE</span></p></div>`\n *\n *    Then when comparing the children of the `<div>` tag we check the equality\n *    of the VNodes corresponding to the `<p>` tags and, since they are the\n *    same tag in the same position, we'd be able to avoid completely\n *    re-rendering the subtree under them with a new DOM element and would just\n *    call out to `patch` to handle reconciling their children and so on.\n *\n * 3. Check, for both windows, to see if the element at the beginning of the\n *    window corresponds to the element at the end of the other window. This is\n *    a heuristic which will let us identify _some_ situations in which\n *    elements have changed position, for instance it _should_ detect that the\n *    children nodes themselves have not changed but merely moved in the\n *    following example:\n *\n *    oldVNode: `<div><element-one /><element-two /></div>`\n *    newVNode: `<div><element-two /><element-one /></div>`\n *\n *    If we find cases like this then we also need to move the concrete DOM\n *    elements corresponding to the moved children to write the re-order to the\n *    DOM.\n *\n * 4. Finally, if VNodes have the `key` attribute set on them we check for any\n *    nodes in the old children which have the same key as the first element in\n *    our window on the new children. If we find such a node we handle calling\n *    out to `patch`, moving relevant DOM nodes, and so on, in accordance with\n *    what we find.\n *\n * Finally, once we've narrowed our 'windows' to the point that either of them\n * collapse (i.e. they have length 0) we then handle any remaining VNode\n * insertion or deletion that needs to happen to get a DOM state that correctly\n * reflects the new child VNodes. If, for instance, after our window on the old\n * children has collapsed we still have more nodes on the new children that\n * we haven't dealt with yet then we need to add them, or if the new children\n * collapse but we still have unhandled _old_ children then we need to make\n * sure the corresponding DOM nodes are removed.\n *\n * @param parentElm the node into which the parent VNode is rendered\n * @param oldCh the old children of the parent node\n * @param newVNode the new VNode which will replace the parent\n * @param newCh the new children of the parent node\n */\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let idxInOld = 0;\n    let i = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    let elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // VNode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            // if the start nodes are the same then we should patch the new VNode\n            // onto the old one, and increment our `newStartIdx` and `oldStartIdx`\n            // indices to reflect that. We don't need to move any DOM Nodes around\n            // since things are matched up in order.\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            // likewise, if the end nodes are the same we patch new onto old and\n            // decrement our end indices, and also likewise in this case we don't\n            // need to move any DOM Nodes.\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            // case: \"Vnode moved right\"\n            //\n            // We've found that the last node in our window on the new children is\n            // the same VNode as the _first_ node in our window on the old children\n            // we're dealing with now. Visually, this is the layout of these two\n            // nodes:\n            //\n            // newCh: [..., newStartVnode , ... , newEndVnode , ...]\n            //                                    ^^^^^^^^^^^\n            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]\n            //              ^^^^^^^^^^^^^\n            //\n            // In this situation we need to patch `newEndVnode` onto `oldStartVnode`\n            // and move the DOM element for `oldStartVnode`.\n            if (BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n            }\n            patch(oldStartVnode, newEndVnode);\n            // We need to move the element for `oldStartVnode` into a position which\n            // will be appropriate for `newEndVnode`. For this we can use\n            // `.insertBefore` and `oldEndVnode.$elm$.nextSibling`. If there is a\n            // sibling for `oldEndVnode.$elm$` then we want to move the DOM node for\n            // `oldStartVnode` between `oldEndVnode` and it's sibling, like so:\n            //\n            // <old-start-node />\n            // <some-intervening-node />\n            // <old-end-node />\n            // <!-- ->              <-- `oldStartVnode.$elm$` should be inserted here\n            // <next-sibling />\n            //\n            // If instead `oldEndVnode.$elm$` has no sibling then we just want to put\n            // the node for `oldStartVnode` at the end of the children of\n            // `parentElm`. Luckily, `Node.nextSibling` will return `null` if there\n            // aren't any siblings, and passing `null` to `Node.insertBefore` will\n            // append it to the children of the parent element.\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            // case: \"Vnode moved left\"\n            //\n            // We've found that the first node in our window on the new children is\n            // the same VNode as the _last_ node in our window on the old children.\n            // Visually, this is the layout of these two nodes:\n            //\n            // newCh: [..., newStartVnode , ... , newEndVnode , ...]\n            //              ^^^^^^^^^^^^^\n            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]\n            //                                    ^^^^^^^^^^^\n            //\n            // In this situation we need to patch `newStartVnode` onto `oldEndVnode`\n            // (which will handle updating any changed attributes, reconciling their\n            // children etc) but we also need to move the DOM node to which\n            // `oldEndVnode` corresponds.\n            if (BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n            }\n            patch(oldEndVnode, newStartVnode);\n            // We've already checked above if `oldStartVnode` and `newStartVnode` are\n            // the same node, so since we're here we know that they are not. Thus we\n            // can move the element for `oldEndVnode` _before_ the element for\n            // `oldStartVnode`, leaving `oldStartVnode` to be reconciled in the\n            // future.\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // Here we do some checks to match up old and new nodes based on the\n            // `$key$` attribute, which is set by putting a `key=\"my-key\"` attribute\n            // in the JSX for a DOM element in the implementation of a Stencil\n            // component.\n            //\n            // First we check to see if there are any nodes in the array of old\n            // children which have the same key as the first node in the new\n            // children.\n            idxInOld = -1;\n            if (BUILD.vdomKey) {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if (BUILD.vdomKey && idxInOld >= 0) {\n                // We found a node in the old children which matches up with the first\n                // node in the new children! So let's deal with that\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    // the tag doesn't match so we'll need a new DOM element\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n                }\n                else {\n                    patch(elmToMove, newStartVnode);\n                    // invalidate the matching old node so that we won't try to update it\n                    // again later on\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // We either didn't find an element in the old children that matches\n                // the key of the first new child OR the build is not using `key`\n                // attributes at all. In either case we need to create a new element\n                // for the new node.\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                // if we created a new node then handle inserting it to the DOM\n                if (BUILD.slotRelocation) {\n                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n                }\n                else {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        // we have some more new nodes to add which don't match up with old nodes\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (BUILD.updatable && newStartIdx > newEndIdx) {\n        // there are nodes in the `oldCh` array which no longer correspond to nodes\n        // in the new array, so lets remove them (which entails cleaning up the\n        // relevant DOM nodes)\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\n/**\n * Compare two VNodes to determine if they are the same\n *\n * **NB**: This function is an equality _heuristic_ based on the available\n * information set on the two VNodes and can be misleading under certain\n * circumstances. In particular, if the two nodes do not have `key` attrs\n * (available under `$key$` on VNodes) then the function falls back on merely\n * checking that they have the same tag.\n *\n * So, in other words, if `key` attrs are not set on VNodes which may be\n * changing order within a `children` array or something along those lines then\n * we could obtain a false negative and then have to do needless re-rendering\n * (i.e. we'd say two VNodes aren't equal when in fact they should be).\n *\n * @param leftVNode the first VNode to check\n * @param rightVNode the second VNode to check\n * @returns whether they're equal or not\n */\nconst isSameVnode = (leftVNode, rightVNode) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (leftVNode.$tag$ === rightVNode.$tag$) {\n        if (BUILD.slotRelocation && leftVNode.$tag$ === 'slot') {\n            return leftVNode.$name$ === rightVNode.$name$;\n        }\n        // this will be set if components in the build have `key` attrs set on them\n        if (BUILD.vdomKey) {\n            return leftVNode.$key$ === rightVNode.$key$;\n        }\n        return true;\n    }\n    return false;\n};\nconst referenceNode = (node) => {\n    // this node was relocated to a new location in the dom\n    // because of some other component's slot\n    // but we still have an html comment in place of where\n    // it's original location was according to it's original vdom\n    return (node && node['s-ol']) || node;\n};\nconst parentReferenceNode = (node) => (node['s-ol'] ? node['s-ol'] : node).parentNode;\n/**\n * Handle reconciling an outdated VNode with a new one which corresponds to\n * it. This function handles flushing updates to the DOM and reconciling the\n * children of the two nodes (if any).\n *\n * @param oldVNode an old VNode whose DOM element and children we want to update\n * @param newVNode a new VNode representing an updated version of the old one\n */\nconst patch = (oldVNode, newVNode) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    let defaultHolder;\n    if (!BUILD.vdomText || text === null) {\n        if (BUILD.svg) {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n        }\n        if (BUILD.vdomAttribute || BUILD.reflect) {\n            if (BUILD.slot && tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (BUILD.updatable && oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            // so we need to call `updateChildren` to reconcile them\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (BUILD.updatable && BUILD.vdomText && oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (BUILD.updatable && oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if (BUILD.svg && isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if (BUILD.vdomText && BUILD.slotRelocation && (defaultHolder = elm['s-cr'])) {\n        // this element has slotted content\n        defaultHolder.parentNode.textContent = text;\n    }\n    else if (BUILD.vdomText && oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\n/**\n * Adjust the `.hidden` property as-needed on any nodes in a DOM subtree which\n * are slot fallbacks nodes.\n *\n * A slot fallback node should be visible by default. Then, it should be\n * conditionally hidden if:\n *\n * - it has a sibling with a `slot` property set to its slot name or if\n * - it is a default fallback slot node, in which case we hide if it has any\n *   content\n *\n * @param elm the element of interest\n */\nconst updateFallbackSlotVisibility = (elm) => {\n    const childNodes = elm.childNodes;\n    for (const childNode of childNodes) {\n        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n            if (childNode['s-sr']) {\n                // this is a slot fallback node\n                // get the slot name for this slot reference node\n                const slotName = childNode['s-sn'];\n                // by default always show a fallback slot node\n                // then hide it if there are other slots in the light dom\n                childNode.hidden = false;\n                // we need to check all of its sibling nodes in order to see if\n                // `childNode` should be hidden\n                for (const siblingNode of childNodes) {\n                    // Don't check the node against itself\n                    if (siblingNode !== childNode) {\n                        if (siblingNode['s-hn'] !== childNode['s-hn'] || slotName !== '') {\n                            // this sibling node is from a different component OR is a named\n                            // fallback slot node\n                            if (siblingNode.nodeType === 1 /* NODE_TYPE.ElementNode */ &&\n                                (slotName === siblingNode.getAttribute('slot') || slotName === siblingNode['s-sn'])) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                        else {\n                            // this is a default fallback slot node\n                            // any element or text node (with content)\n                            // should hide the default fallback slot node\n                            if (siblingNode.nodeType === 1 /* NODE_TYPE.ElementNode */ ||\n                                (siblingNode.nodeType === 3 /* NODE_TYPE.TextNode */ && siblingNode.textContent.trim() !== '')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            // keep drilling down\n            updateFallbackSlotVisibility(childNode);\n        }\n    }\n};\n/**\n * Component-global information about nodes which are either currently being\n * relocated or will be shortly.\n */\nconst relocateNodes = [];\n/**\n * Mark the contents of a slot for relocation via adding references to them to\n * the {@link relocateNodes} data structure. The actual work of relocating them\n * will then be handled in {@link renderVdom}.\n *\n * @param elm a render node whose child nodes need to be relocated\n */\nconst markSlotContentForRelocation = (elm) => {\n    // tslint:disable-next-line: prefer-const\n    let node;\n    let hostContentNodes;\n    let j;\n    for (const childNode of elm.childNodes) {\n        // we need to find child nodes which are slot references so we can then try\n        // to match them up with nodes that need to be relocated\n        if (childNode['s-sr'] && (node = childNode['s-cr']) && node.parentNode) {\n            // first get the content reference comment node ('s-cr'), then we get\n            // its parent, which is where all the host content is now\n            hostContentNodes = node.parentNode.childNodes;\n            const slotName = childNode['s-sn'];\n            // iterate through all the nodes under the location where the host was\n            // originally rendered\n            for (j = hostContentNodes.length - 1; j >= 0; j--) {\n                node = hostContentNodes[j];\n                // check that the node is not a content reference node or a node\n                // reference and then check that the host name does not match that of\n                // childNode.\n                // In addition, check that the slot either has not already been relocated, or\n                // that its current location's host is not childNode's host. This is essentially\n                // a check so that we don't try to relocate (and then hide) a node that is already\n                // where it should be.\n                if (!node['s-cn'] &&\n                    !node['s-nr'] &&\n                    node['s-hn'] !== childNode['s-hn'] &&\n                    (!BUILD.experimentalSlotFixes || !node['s-sh'] || node['s-sh'] !== childNode['s-hn'])) {\n                    // if `node` is located in the slot that `childNode` refers to (via the\n                    // `'s-sn'` property) then we need to relocate it from it's current spot\n                    // (under the host element parent) to the right slot location\n                    if (isNodeLocatedInSlot(node, slotName)) {\n                        // it's possible we've already decided to relocate this node\n                        let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                        // made some changes to slots\n                        // let's make sure we also double check\n                        // fallbacks are correctly hidden or shown\n                        checkSlotFallbackVisibility = true;\n                        // ensure that the slot-name attr is correct\n                        node['s-sn'] = node['s-sn'] || slotName;\n                        if (relocateNodeData) {\n                            relocateNodeData.$nodeToRelocate$['s-sh'] = childNode['s-hn'];\n                            // we marked this node for relocation previously but didn't find\n                            // out the slot reference node to which it needs to be relocated\n                            // so write it down now!\n                            relocateNodeData.$slotRefNode$ = childNode;\n                        }\n                        else {\n                            node['s-sh'] = childNode['s-hn'];\n                            // add to our list of nodes to relocate\n                            relocateNodes.push({\n                                $slotRefNode$: childNode,\n                                $nodeToRelocate$: node,\n                            });\n                        }\n                        if (node['s-sr']) {\n                            relocateNodes.map((relocateNode) => {\n                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                                    relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n                        // the node is not found within the slot (`childNode`) that we're\n                        // currently looking at, so we stick it into `relocateNodes` to\n                        // handle later. If we never find a home for this element then\n                        // we'll need to hide it\n                        relocateNodes.push({\n                            $nodeToRelocate$: node,\n                        });\n                    }\n                }\n            }\n        }\n        // if we're dealing with any type of element (capable of itself being a\n        // slot reference or containing one) then we recur\n        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n            markSlotContentForRelocation(childNode);\n        }\n    }\n};\n/**\n * Check whether a node is located in a given named slot.\n *\n * @param nodeToRelocate the node of interest\n * @param slotName the slot name to check\n * @returns whether the node is located in the slot or not\n */\nconst isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        if (nodeToRelocate.getAttribute('slot') === null && slotName === '') {\n            // if the node doesn't have a slot attribute, and the slot we're checking\n            // is not a named slot, then we assume the node should be within the slot\n            return true;\n        }\n        if (nodeToRelocate.getAttribute('slot') === slotName) {\n            return true;\n        }\n        return false;\n    }\n    if (nodeToRelocate['s-sn'] === slotName) {\n        return true;\n    }\n    return slotName === '';\n};\n/**\n * 'Nullify' any VDom `ref` callbacks on a VDom node or its children by calling\n * them with `null`. This signals that the DOM element corresponding to the VDom\n * node has been removed from the DOM.\n *\n * @param vNode a virtual DOM node\n */\nconst nullifyVNodeRefs = (vNode) => {\n    if (BUILD.vdomRef) {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n    }\n};\n/**\n * The main entry point for Stencil's virtual DOM-based rendering engine\n *\n * Given a {@link d.HostRef} container and some virtual DOM nodes, this\n * function will handle creating a virtual DOM tree with a single root, patching\n * the current virtual DOM tree onto an old one (if any), dealing with slot\n * relocation, and reflecting attributes.\n *\n * @param hostRef data needed to root and render the virtual DOM tree, such as\n * the DOM node into which it should be rendered.\n * @param renderFnResults the virtual DOM nodes to be rendered\n * @param isInitialLoad whether or not this is the first call after page load\n */\nconst renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n    var _a, _b;\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    // if `renderFnResults` is a Host node then we can use it directly. If not,\n    // we need to call `h` again to wrap the children of our component in a\n    // 'dummy' Host node (well, an empty vnode) since `renderVdom` assumes\n    // implicitly that the top-level vdom node is 1) an only child and 2)\n    // contains attrs that need to be set on the host element.\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    // <Host> runtime check\n    if (BUILD.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n        throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n    }\n    if (BUILD.reflect && cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));\n    }\n    // On the first render and *only* on the first render we want to check for\n    // any attributes set on the host element which are also set on the vdom\n    // node. If we find them, we override the value on the VDom node attrs with\n    // the value from the host element, which allows developers building apps\n    // with Stencil components to override e.g. the `role` attribute on a\n    // component even if it's already set on the `Host`.\n    if (isInitialLoad && rootVnode.$attrs$) {\n        for (const key of Object.keys(rootVnode.$attrs$)) {\n            // We have a special implementation in `setAccessor` for `style` and\n            // `class` which reconciles values coming from the VDom with values\n            // already present on the DOM element, so we don't want to override those\n            // attributes on the VDom tree with values from the host element if they\n            // are present.\n            //\n            // Likewise, `ref` and `key` are special internal values for the Stencil\n            // runtime and we don't want to override those either.\n            if (hostElm.hasAttribute(key) && !['key', 'ref', 'style', 'class'].includes(key)) {\n                rootVnode.$attrs$[key] = hostElm[key];\n            }\n        }\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* VNODE_FLAGS.isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (BUILD.shadowDom ? hostElm.shadowRoot || hostElm : hostElm);\n    if (BUILD.scoped || BUILD.shadowDom) {\n        scopeId = hostElm['s-sc'];\n    }\n    if (BUILD.slotRelocation) {\n        contentRef = hostElm['s-cr'];\n        useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) !== 0;\n        // always reset\n        checkSlotFallbackVisibility = false;\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n    if (BUILD.slotRelocation) {\n        // while we're moving nodes around existing nodes, temporarily disable\n        // the disconnectCallback from working\n        plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n        if (checkSlotRelocate) {\n            markSlotContentForRelocation(rootVnode.$elm$);\n            for (const relocateData of relocateNodes) {\n                const nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (!nodeToRelocate['s-ol']) {\n                    // add a reference node marking this node's original location\n                    // keep a reference to this node for later lookups\n                    const orgLocationNode = BUILD.isDebug || BUILD.hydrateServerSide\n                        ? originalLocationDebugNode(nodeToRelocate)\n                        : doc.createTextNode('');\n                    orgLocationNode['s-nr'] = nodeToRelocate;\n                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);\n                }\n            }\n            for (const relocateData of relocateNodes) {\n                const nodeToRelocate = relocateData.$nodeToRelocate$;\n                const slotRefNode = relocateData.$slotRefNode$;\n                if (slotRefNode) {\n                    const parentNodeRef = slotRefNode.parentNode;\n                    // When determining where to insert content, the most simple case would be\n                    // to relocate the node immediately following the slot reference node. We do this\n                    // by getting a reference to the node immediately following the slot reference node\n                    // since we will use `insertBefore` to manipulate the DOM.\n                    //\n                    // If there is no node immediately following the slot reference node, then we will just\n                    // end up appending the node as the last child of the parent.\n                    let insertBeforeNode = slotRefNode.nextSibling;\n                    // If the node we're currently planning on inserting the new node before is an element,\n                    // we need to do some additional checks to make sure we're inserting the node in the correct order.\n                    // The use case here would be that we have multiple nodes being relocated to the same slot. So, we want\n                    // to make sure they get inserted into their new how in the same order they were declared in their original location.\n                    //\n                    // TODO(STENCIL-914): Remove `experimentalSlotFixes` check\n                    if (!BUILD.experimentalSlotFixes ||\n                        (insertBeforeNode && insertBeforeNode.nodeType === 1 /* NODE_TYPE.ElementNode */)) {\n                        let orgLocationNode = (_a = nodeToRelocate['s-ol']) === null || _a === void 0 ? void 0 : _a.previousSibling;\n                        while (orgLocationNode) {\n                            let refNode = (_b = orgLocationNode['s-nr']) !== null && _b !== void 0 ? _b : null;\n                            if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n                                refNode = refNode.nextSibling;\n                                if (!refNode || !refNode['s-nr']) {\n                                    insertBeforeNode = refNode;\n                                    break;\n                                }\n                            }\n                            orgLocationNode = orgLocationNode.previousSibling;\n                        }\n                    }\n                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) ||\n                        nodeToRelocate.nextSibling !== insertBeforeNode) {\n                        // we've checked that it's worth while to relocate\n                        // since that the node to relocate\n                        // has a different next sibling or parent relocated\n                        if (nodeToRelocate !== insertBeforeNode) {\n                            if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                                // probably a component in the index.html that doesn't have its hostname set\n                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n                            }\n                            // Handle a use-case where we relocate a slot where\n                            // the slot name changes along the way (for instance, a default to a named slot).\n                            // In this case, we need to update the relocated node's slot attribute to match\n                            // the slot name it is being relocated into.\n                            //\n                            // There is a very niche use case where we may be relocating a text node. For now,\n                            // we ignore anything that is not an element node since non-element nodes cannot have\n                            // attributes to specify the slot. We'll deal with this if it becomes a problem... but super edge-case-y\n                            if (BUILD.experimentalSlotFixes &&\n                                nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */ &&\n                                slotRefNode['s-fs'] !== nodeToRelocate.getAttribute('slot')) {\n                                if (!slotRefNode['s-fs']) {\n                                    nodeToRelocate.removeAttribute('slot');\n                                }\n                                else {\n                                    nodeToRelocate.setAttribute('slot', slotRefNode['s-fs']);\n                                }\n                            }\n                            // Add it back to the dom but in its new home\n                            // If we get to this point and `insertBeforeNode` is `null`, that means\n                            // we're just going to append the node as the last child of the parent. Passing\n                            // `null` as the second arg here will trigger that behavior.\n                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n                        }\n                    }\n                }\n                else {\n                    // this node doesn't have a slot home to go to, so let's hide it\n                    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                        nodeToRelocate.hidden = true;\n                    }\n                }\n            }\n        }\n        if (checkSlotFallbackVisibility) {\n            updateFallbackSlotVisibility(rootVnode.$elm$);\n        }\n        // done moving nodes around\n        // allow the disconnect callback to work again\n        plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n        // always reset\n        relocateNodes.length = 0;\n    }\n};\n// slot comment debug nodes only created with the `--debug` flag\n// otherwise these nodes are text nodes w/out content\nconst slotReferenceDebugNode = (slotVNode) => doc.createComment(`<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : ''}> (host=${hostTagName.toLowerCase()})`);\nconst originalLocationDebugNode = (nodeToRelocate) => doc.createComment(`org-location for ` +\n    (nodeToRelocate.localName\n        ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate['s-hn']})`\n        : `[${nodeToRelocate.textContent}]`));\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if (BUILD.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    if (BUILD.taskQueue && BUILD.updatable) {\n        hostRef.$flags$ |= 16 /* HOST_FLAGS.isQueuedForUpdate */;\n    }\n    if (BUILD.asyncLoading && hostRef.$flags$ & 4 /* HOST_FLAGS.isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* HOST_FLAGS.needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return BUILD.taskQueue ? writeTask(dispatch) : dispatch();\n};\n/**\n * Dispatch initial-render and update lifecycle hooks, enqueuing calls to\n * component lifecycle methods like `componentWillLoad` as well as\n * {@link updateComponent}, which will kick off the virtual DOM re-render.\n *\n * @param hostRef a reference to a host DOM node\n * @param isInitialLoad whether we're on the initial load or not\n * @returns an empty Promise which is used to enqueue a series of operations for\n * the component\n */\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const elm = hostRef.$hostElement$;\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    // We're going to use this variable together with `enqueue` to implement a\n    // little promise-based queue. We start out with it `undefined`. When we add\n    // the first function to the queue we'll set this variable to be that\n    // function's return value. When we attempt to add subsequent values to the\n    // queue we'll check that value and, if it was a `Promise`, we'll then chain\n    // the new function off of that `Promise` using `.then()`. This will give our\n    // queue two nice properties:\n    //\n    // 1. If all functions added to the queue are synchronous they'll be called\n    //    synchronously right away.\n    // 2. If all functions added to the queue are asynchronous they'll all be\n    //    called in order after `dispatchHooks` exits.\n    let maybePromise;\n    if (isInitialLoad) {\n        if (BUILD.lazyLoad && BUILD.hostListener) {\n            hostRef.$flags$ |= 256 /* HOST_FLAGS.isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n                hostRef.$queuedListeners$ = undefined;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentWillLoad');\n        if (BUILD.cmpWillLoad) {\n            // If `componentWillLoad` returns a `Promise` then we want to wait on\n            // whatever's going on in that `Promise` before we launch into\n            // rendering the component, doing other lifecycle stuff, etc. So\n            // in that case we assign the returned promise to the variable we\n            // declared above to hold a possible 'queueing' Promise\n            maybePromise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    else {\n        emitLifecycleEvent(elm, 'componentWillUpdate');\n        if (BUILD.cmpWillUpdate) {\n            // Like `componentWillLoad` above, we allow Stencil component\n            // authors to return a `Promise` from this lifecycle callback, and\n            // we specify that our runtime will wait for that `Promise` to\n            // resolve before the component re-renders. So if the method\n            // returns a `Promise` we need to keep it around!\n            maybePromise = safeCall(instance, 'componentWillUpdate');\n        }\n    }\n    emitLifecycleEvent(elm, 'componentWillRender');\n    if (BUILD.cmpWillRender) {\n        maybePromise = enqueue(maybePromise, () => safeCall(instance, 'componentWillRender'));\n    }\n    endSchedule();\n    return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\n/**\n * This function uses a Promise to implement a simple first-in, first-out queue\n * of functions to be called.\n *\n * The queue is ordered on the basis of the first argument. If it's\n * `undefined`, then nothing is on the queue yet, so the provided function can\n * be called synchronously (although note that this function may return a\n * `Promise`). The idea is that then the return value of that enqueueing\n * operation is kept around, so that if it was a `Promise` then subsequent\n * functions can be enqueued by calling this function again with that `Promise`\n * as the first argument.\n *\n * @param maybePromise either a `Promise` which should resolve before the next function is called or an 'empty' sentinel\n * @param fn a function to enqueue\n * @returns either a `Promise` or the return value of the provided function\n */\nconst enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn) : fn();\n/**\n * Check that a value is a `Promise`. To check, we first see if the value is an\n * instance of the `Promise` global. In a few circumstances, in particular if\n * the global has been overwritten, this is could be misleading, so we also do\n * a little 'duck typing' check to see if the `.then` property of the value is\n * defined and a function.\n *\n * @param maybePromise it might be a promise!\n * @returns whether it is or not\n */\nconst isPromisey = (maybePromise) => maybePromise instanceof Promise ||\n    (maybePromise && maybePromise.then && typeof maybePromise.then === 'function');\n/**\n * Update a component given reference to its host elements and so on.\n *\n * @param hostRef an object containing references to the element's host node,\n * VDom nodes, and other metadata\n * @param instance a reference to the underlying host element where it will be\n * rendered\n * @param isInitialLoad whether or not this function is being called as part of\n * the first render cycle\n */\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    var _a;\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if (BUILD.style && isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    if (BUILD.isDev) {\n        hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n    }\n    if (BUILD.hydrateServerSide) {\n        await callRender(hostRef, instance, elm, isInitialLoad);\n    }\n    else {\n        callRender(hostRef, instance, elm, isInitialLoad);\n    }\n    if (BUILD.isDev) {\n        hostRef.$renderCount$ = hostRef.$renderCount$ === undefined ? 1 : hostRef.$renderCount$ + 1;\n        hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n    }\n    if (BUILD.hydrateServerSide) {\n        try {\n            // manually connected child components during server-side hydrate\n            serverSideConnected(elm);\n            if (isInitialLoad) {\n                // using only during server-side hydrate\n                if (hostRef.$cmpMeta$.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                    elm['s-en'] = '';\n                }\n                else if (hostRef.$cmpMeta$.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n                    elm['s-en'] = 'c';\n                }\n            }\n        }\n        catch (e) {\n            consoleError(e, elm);\n        }\n    }\n    if (BUILD.asyncLoading && rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map((cb) => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    if (BUILD.asyncLoading) {\n        const childrenPromises = (_a = elm['s-p']) !== null && _a !== void 0 ? _a : [];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* HOST_FLAGS.isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n    else {\n        postUpdateComponent(hostRef);\n    }\n};\n/**\n * Handle making the call to the VDom renderer with the proper context given\n * various build variables\n *\n * @param hostRef an object containing references to the element's host node,\n * VDom nodes, and other metadata\n * @param instance a reference to the underlying host element where it will be\n * rendered\n * @param elm the Host element for the component\n * @param isInitialLoad whether or not this function is being called as part of\n * @returns an empty promise\n */\nconst callRender = (hostRef, instance, elm, isInitialLoad) => {\n    // in order for bundlers to correctly tree-shake the BUILD object\n    // we need to ensure BUILD is not deoptimized within a try/catch\n    // https://rollupjs.org/guide/en/#treeshake tryCatchDeoptimization\n    const allRenderFn = BUILD.allRenderFn ? true : false;\n    const lazyLoad = BUILD.lazyLoad ? true : false;\n    const taskQueue = BUILD.taskQueue ? true : false;\n    const updatable = BUILD.updatable ? true : false;\n    try {\n        renderingRef = instance;\n        /**\n         * minification optimization: `allRenderFn` is `true` if all components have a `render`\n         * method, so we can call the method immediately. If not, check before calling it.\n         */\n        instance = allRenderFn ? instance.render() : instance.render && instance.render();\n        if (updatable && taskQueue) {\n            hostRef.$flags$ &= ~16 /* HOST_FLAGS.isQueuedForUpdate */;\n        }\n        if (updatable || lazyLoad) {\n            hostRef.$flags$ |= 2 /* HOST_FLAGS.hasRendered */;\n        }\n        if (BUILD.hasRenderFn || BUILD.reflect) {\n            if (BUILD.vdomRender || BUILD.reflect) {\n                // looks like we've got child nodes to render into this host element\n                // or we need to update the css class/attrs on the host element\n                // DOM WRITE!\n                if (BUILD.hydrateServerSide) {\n                    return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n                }\n                else {\n                    renderVdom(hostRef, instance, isInitialLoad);\n                }\n            }\n            else {\n                const shadowRoot = elm.shadowRoot;\n                if (hostRef.$cmpMeta$.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                    shadowRoot.textContent = instance;\n                }\n                else {\n                    elm.textContent = instance;\n                }\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e, hostRef.$hostElement$);\n    }\n    renderingRef = null;\n    return null;\n};\nconst getRenderingRef = () => renderingRef;\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (BUILD.cmpDidRender) {\n        if (BUILD.isDev) {\n            hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n        }\n        safeCall(instance, 'componentDidRender');\n        if (BUILD.isDev) {\n            hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n        }\n    }\n    emitLifecycleEvent(elm, 'componentDidRender');\n    if (!(hostRef.$flags$ & 64 /* HOST_FLAGS.hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* HOST_FLAGS.hasLoadedComponent */;\n        if (BUILD.asyncLoading && BUILD.cssAnnotations) {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        if (BUILD.cmpDidLoad) {\n            if (BUILD.isDev) {\n                hostRef.$flags$ |= 2048 /* HOST_FLAGS.devOnDidLoad */;\n            }\n            safeCall(instance, 'componentDidLoad');\n            if (BUILD.isDev) {\n                hostRef.$flags$ &= ~2048 /* HOST_FLAGS.devOnDidLoad */;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentDidLoad');\n        endPostUpdate();\n        if (BUILD.asyncLoading) {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad(tagName);\n            }\n        }\n    }\n    else {\n        if (BUILD.cmpDidUpdate) {\n            // we've already loaded this component\n            // fire off the user's componentDidUpdate method (if one was provided)\n            // componentDidUpdate runs AFTER render() has been called\n            // and all child components have finished updating\n            if (BUILD.isDev) {\n                hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n            }\n            safeCall(instance, 'componentDidUpdate');\n            if (BUILD.isDev) {\n                hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentDidUpdate');\n        endPostUpdate();\n    }\n    if (BUILD.method && BUILD.lazyLoad) {\n        hostRef.$onInstanceResolve$(elm);\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    if (BUILD.asyncLoading) {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* HOST_FLAGS.needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* HOST_FLAGS.isWaitingForChildren */ | 512 /* HOST_FLAGS.needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst forceUpdate = (ref) => {\n    if (BUILD.updatable && (Build.isBrowser || Build.isTesting)) {\n        const hostRef = getHostRef(ref);\n        const isConnected = hostRef.$hostElement$.isConnected;\n        if (isConnected &&\n            (hostRef.$flags$ & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {\n            scheduleUpdate(hostRef, false);\n        }\n        // Returns \"true\" when the forced update was successfully scheduled\n        return isConnected;\n    }\n    return false;\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    if (BUILD.cssAnnotations) {\n        addHydratedFlag(doc.documentElement);\n    }\n    if (BUILD.asyncQueue) {\n        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n    if (BUILD.profile && performance.measure) {\n        performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, 'st:app:start');\n    }\n};\n/**\n * Allows to safely call a method, e.g. `componentDidLoad`, on an instance,\n * e.g. custom element node. If a build figures out that e.g. no component\n * has a `componentDidLoad` method, the instance method gets removed from the\n * output bundle and this function returns `undefined`.\n * @param instance any object that may or may not contain methods\n * @param method method name\n * @param arg single arbitrary argument\n * @returns result of method call if it exists, otherwise `undefined`\n */\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\n/**\n * For debugging purposes as `BUILD.lifecycleDOMEvents` is `false` by default and will\n * get removed by the compiler. Used for timing events to see how long they take.\n * @param elm the target of the Event\n * @param lifecycleName name of the event\n */\nconst emitLifecycleEvent = (elm, lifecycleName) => {\n    if (BUILD.lifecycleDOMEvents) {\n        emitEvent(elm, 'stencil_' + lifecycleName, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                namespace: NAMESPACE,\n            },\n        });\n    }\n};\nconst addHydratedFlag = (elm) => BUILD.hydratedClass\n    ? elm.classList.add('hydrated')\n    : BUILD.hydratedAttribute\n        ? elm.setAttribute('hydrated', '')\n        : undefined;\nconst serverSideConnected = (elm) => {\n    const children = elm.children;\n    if (children != null) {\n        for (let i = 0, ii = children.length; i < ii; i++) {\n            const childElm = children[i];\n            if (typeof childElm.connectedCallback === 'function') {\n                childElm.connectedCallback();\n            }\n            serverSideConnected(childElm);\n        }\n    }\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const elm = BUILD.lazyLoad ? hostRef.$hostElement$ : ref;\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    // explicitly check for NaN on both sides, as `NaN === NaN` is always false\n    const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n    const didValueChange = newVal !== oldVal && !areBothNaN;\n    if ((!BUILD.lazyLoad || !(flags & 8 /* HOST_FLAGS.isConstructingInstance */) || oldVal === undefined) && didValueChange) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (BUILD.isDev) {\n            if (hostRef.$flags$ & 1024 /* HOST_FLAGS.devOnRender */) {\n                consoleDevWarn(`The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`, '\\nElement', elm, '\\nNew value', newVal, '\\nOld value', oldVal);\n            }\n            else if (hostRef.$flags$ & 2048 /* HOST_FLAGS.devOnDidLoad */) {\n                consoleDevWarn(`The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`, '\\nElement', elm, '\\nNew value', newVal, '\\nOld value', oldVal);\n            }\n        }\n        if (!BUILD.lazyLoad || instance) {\n            // get an array of method names of watch functions to call\n            if (BUILD.watchCallback && cmpMeta.$watchers$ && flags & 128 /* HOST_FLAGS.isWatchReady */) {\n                const watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map((watchMethodName) => {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e, elm);\n                        }\n                    });\n                }\n            }\n            if (BUILD.updatable &&\n                (flags & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {\n                if (BUILD.cmpShouldUpdate && instance.componentShouldUpdate) {\n                    if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n                        return;\n                    }\n                }\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\n/**\n * Attach a series of runtime constructs to a compiled Stencil component\n * constructor, including getters and setters for the `@Prop` and `@State`\n * decorators, callbacks for when attributes change, and so on.\n *\n * @param Cstr the constructor for a component that we need to process\n * @param cmpMeta metadata collected previously about the component\n * @param flags a number used to store a series of bit flags\n * @returns a reference to the same constructor passed in (but now mutated)\n */\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    var _a;\n    const prototype = Cstr.prototype;\n    /**\n     * proxy form associated custom element lifecycle callbacks\n     * @ref https://web.dev/articles/more-capable-form-controls#lifecycle_callbacks\n     */\n    if (BUILD.formAssociated && cmpMeta.$flags$ & 64 /* CMP_FLAGS.formAssociated */ && flags & 1 /* PROXY_FLAGS.isElementConstructor */) {\n        FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach((cbName) => Object.defineProperty(prototype, cbName, {\n            value(...args) {\n                const hostRef = getHostRef(this);\n                const elm = BUILD.lazyLoad ? hostRef.$hostElement$ : this;\n                const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n                if (!instance) {\n                    hostRef.$onReadyPromise$.then((instance) => {\n                        const cb = instance[cbName];\n                        typeof cb === 'function' && cb.call(instance, ...args);\n                    });\n                }\n                else {\n                    const cb = instance[cbName];\n                    typeof cb === 'function' && cb.call(instance, ...args);\n                }\n            },\n        }));\n    }\n    if (BUILD.member && cmpMeta.$members$) {\n        if (BUILD.watchCallback && Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        members.map(([memberName, [memberFlags]]) => {\n            if ((BUILD.prop || BUILD.state) &&\n                (memberFlags & 31 /* MEMBER_FLAGS.Prop */ ||\n                    ((!BUILD.lazyLoad || flags & 2 /* PROXY_FLAGS.proxyState */) && memberFlags & 32 /* MEMBER_FLAGS.State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // only during dev time\n                        if (BUILD.isDev) {\n                            const ref = getHostRef(this);\n                            if (\n                            // we are proxying the instance (not element)\n                            (flags & 1 /* PROXY_FLAGS.isElementConstructor */) === 0 &&\n                                // the element is not constructing\n                                (ref && ref.$flags$ & 8 /* HOST_FLAGS.isConstructingInstance */) === 0 &&\n                                // the member is a prop\n                                (memberFlags & 31 /* MEMBER_FLAGS.Prop */) !== 0 &&\n                                // the member is not mutable\n                                (memberFlags & 1024 /* MEMBER_FLAGS.Mutable */) === 0) {\n                                consoleDevWarn(`@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\\nMore information: https://stenciljs.com/docs/properties#prop-mutability`);\n                            }\n                        }\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n            else if (BUILD.lazyLoad &&\n                BUILD.method &&\n                flags & 1 /* PROXY_FLAGS.isElementConstructor */ &&\n                memberFlags & 64 /* MEMBER_FLAGS.Method */) {\n                // proxyComponent - method\n                Object.defineProperty(prototype, memberName, {\n                    value(...args) {\n                        var _a;\n                        const ref = getHostRef(this);\n                        return (_a = ref === null || ref === void 0 ? void 0 : ref.$onInstancePromise$) === null || _a === void 0 ? void 0 : _a.then(() => { var _a; return (_a = ref.$lazyInstance$) === null || _a === void 0 ? void 0 : _a[memberName](...args); });\n                    },\n                });\n            }\n        });\n        if (BUILD.observeAttribute && (!BUILD.lazyLoad || flags & 1 /* PROXY_FLAGS.isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, oldValue, newValue) {\n                plt.jmp(() => {\n                    var _a;\n                    const propName = attrNameToPropName.get(attrName);\n                    //  In a web component lifecycle the attributeChangedCallback runs prior to connectedCallback\n                    //  in the case where an attribute was set inline.\n                    //  ```html\n                    //    <my-component some-attribute=\"some-value\"></my-component>\n                    //  ```\n                    //\n                    //  There is an edge case where a developer sets the attribute inline on a custom element and then\n                    //  programmatically changes it before it has been upgraded as shown below:\n                    //\n                    //  ```html\n                    //    <!-- this component has _not_ been upgraded yet -->\n                    //    <my-component id=\"test\" some-attribute=\"some-value\"></my-component>\n                    //    <script>\n                    //      // grab non-upgraded component\n                    //      el = document.querySelector(\"#test\");\n                    //      el.someAttribute = \"another-value\";\n                    //      // upgrade component\n                    //      customElements.define('my-component', MyComponent);\n                    //    </script>\n                    //  ```\n                    //  In this case if we do not un-shadow here and use the value of the shadowing property, attributeChangedCallback\n                    //  will be called with `newValue = \"some-value\"` and will set the shadowed property (this.someAttribute = \"another-value\")\n                    //  to the value that was set inline i.e. \"some-value\" from above example. When\n                    //  the connectedCallback attempts to un-shadow it will use \"some-value\" as the initial value rather than \"another-value\"\n                    //\n                    //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/un-shadowed\n                    //  by connectedCallback as this attributeChangedCallback will not fire.\n                    //\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n                    //\n                    //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to\n                    //  properties here given that this goes against best practices outlined here\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n                    if (this.hasOwnProperty(propName)) {\n                        newValue = this[propName];\n                        delete this[propName];\n                    }\n                    else if (prototype.hasOwnProperty(propName) &&\n                        typeof this[propName] === 'number' &&\n                        this[propName] == newValue) {\n                        // if the propName exists on the prototype of `Cstr`, this update may be a result of Stencil using native\n                        // APIs to reflect props as attributes. Calls to `setAttribute(someElement, propName)` will result in\n                        // `propName` to be converted to a `DOMString`, which may not be what we want for other primitive props.\n                        return;\n                    }\n                    else if (propName == null) {\n                        // At this point we should know this is not a \"member\", so we can treat it like watching an attribute\n                        // on a vanilla web component\n                        const hostRef = getHostRef(this);\n                        const flags = hostRef === null || hostRef === void 0 ? void 0 : hostRef.$flags$;\n                        // We only want to trigger the callback(s) if:\n                        // 1. The instance is ready\n                        // 2. The watchers are ready\n                        // 3. The value has changed\n                        if (flags &&\n                            !(flags & 8 /* HOST_FLAGS.isConstructingInstance */) &&\n                            flags & 128 /* HOST_FLAGS.isWatchReady */ &&\n                            newValue !== oldValue) {\n                            const elm = BUILD.lazyLoad ? hostRef.$hostElement$ : this;\n                            const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n                            const entry = (_a = cmpMeta.$watchers$) === null || _a === void 0 ? void 0 : _a[attrName];\n                            entry === null || entry === void 0 ? void 0 : entry.forEach((callbackName) => {\n                                if (instance[callbackName] != null) {\n                                    instance[callbackName].call(instance, newValue, oldValue, attrName);\n                                }\n                            });\n                        }\n                        return;\n                    }\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // Create an array of attributes to observe\n            // This list in comprised of all strings used within a `@Watch()` decorator\n            // on a component as well as any Stencil-specific \"members\" (`@Prop()`s and `@State()`s).\n            // As such, there is no way to guarantee type-safety here that a user hasn't entered\n            // an invalid attribute.\n            Cstr.observedAttributes = Array.from(new Set([\n                ...Object.keys((_a = cmpMeta.$watchers$) !== null && _a !== void 0 ? _a : {}),\n                ...members\n                    .filter(([_, m]) => m[0] & 15 /* MEMBER_FLAGS.HasAttribute */)\n                    .map(([propName, m]) => {\n                    var _a;\n                    const attrName = m[1] || propName;\n                    attrNameToPropName.set(attrName, propName);\n                    if (BUILD.reflect && m[0] & 512 /* MEMBER_FLAGS.ReflectAttr */) {\n                        (_a = cmpMeta.$attrsToReflect$) === null || _a === void 0 ? void 0 : _a.push([propName, attrName]);\n                    }\n                    return attrName;\n                }),\n            ]));\n        }\n    }\n    return Cstr;\n};\n/**\n * Initialize a Stencil component given a reference to its host element, its\n * runtime bookkeeping data structure, runtime metadata about the component,\n * and (optionally) an HMR version ID.\n *\n * @param elm a host element\n * @param hostRef the element's runtime bookkeeping object\n * @param cmpMeta runtime metadata for the Stencil component\n * @param hmrVersionId an (optional) HMR version ID\n */\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n    let Cstr;\n    // initializeComponent\n    if ((hostRef.$flags$ & 32 /* HOST_FLAGS.hasInitializedComponent */) === 0) {\n        // Let the runtime know that the component has been initialized\n        hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;\n        if (BUILD.lazyLoad || BUILD.hydrateClientSide) {\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta, hostRef, hmrVersionId);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime(`st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`, `[Stencil] Load module for <${cmpMeta.$tagName$}>`);\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if ((BUILD.isDev || BUILD.isDebug) && !Cstr) {\n                throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n            }\n            if (BUILD.member && !Cstr.isProxied) {\n                // we've never proxied this Constructor before\n                // let's add the getters/setters to its prototype before\n                // the first time we create an instance of the implementation\n                if (BUILD.watchCallback) {\n                    cmpMeta.$watchers$ = Cstr.watchers;\n                }\n                proxyComponent(Cstr, cmpMeta, 2 /* PROXY_FLAGS.proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            if (BUILD.member) {\n                hostRef.$flags$ |= 8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            if (BUILD.member) {\n                hostRef.$flags$ &= ~8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            if (BUILD.watchCallback) {\n                hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */;\n            }\n            endNewInstance();\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        else {\n            // sync constructor component\n            Cstr = elm.constructor;\n            // wait for the CustomElementRegistry to mark the component as ready before setting `isWatchReady`. Otherwise,\n            // watchers may fire prematurely if `customElements.get()`/`customElements.whenDefined()` resolves _before_\n            // Stencil has completed instantiating the component.\n            customElements.whenDefined(cmpMeta.$tagName$).then(() => (hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */));\n        }\n        if (BUILD.style && Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            if (BUILD.mode && typeof style !== 'string') {\n                style = style[(hostRef.$modeName$ = computeMode(elm))];\n                if (BUILD.hydrateServerSide && hostRef.$modeName$) {\n                    elm.setAttribute('s-mode', hostRef.$modeName$);\n                }\n            }\n            const scopeId = getScopeId(cmpMeta, hostRef.$modeName$);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                if (!BUILD.hydrateServerSide &&\n                    BUILD.shadowDom &&\n                    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n                    BUILD.shadowDomShim &&\n                    cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {\n                    style = await import('./shadow-css.js').then((m) => m.scopeCss(style, scopeId, false));\n                }\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if (BUILD.asyncLoading && ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the initial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst fireConnectedCallback = (instance) => {\n    if (BUILD.lazyLoad && BUILD.connectedCallback) {\n        safeCall(instance, 'connectedCallback');\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (BUILD.hostListenerTargetParent) {\n            // only run if we have listeners being attached to a parent\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n        }\n        if (!(hostRef.$flags$ & 1 /* HOST_FLAGS.hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* HOST_FLAGS.hasConnected */;\n            let hostId;\n            if (BUILD.hydrateClientSide) {\n                hostId = elm.getAttribute(HYDRATE_ID);\n                if (hostId) {\n                    if (BUILD.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        const scopeId = BUILD.mode\n                            ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute('s-mode'))\n                            : addStyle(elm.shadowRoot, cmpMeta);\n                        elm.classList.remove(scopeId + '-h', scopeId + '-s');\n                    }\n                    initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n                }\n            }\n            if (BUILD.slotRelocation && !hostId) {\n                // initUpdate\n                // if the slot polyfill is required we'll need to put some nodes\n                // in here to act as original content anchors as we move nodes around\n                // host element has been connected to the DOM\n                if (BUILD.hydrateServerSide ||\n                    ((BUILD.slot || BUILD.shadowDom) &&\n                        // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n                        cmpMeta.$flags$ & (4 /* CMP_FLAGS.hasSlotRelocation */ | 8 /* CMP_FLAGS.needsShadowDomShim */))) {\n                    setContentReference(elm);\n                }\n            }\n            if (BUILD.asyncLoading) {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if ((BUILD.hydrateClientSide &&\n                        ancestorComponent.nodeType === 1 /* NODE_TYPE.ElementNode */ &&\n                        ancestorComponent.hasAttribute('s-id') &&\n                        ancestorComponent['s-p']) ||\n                        ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (BUILD.prop && !BUILD.hydrateServerSide && cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* MEMBER_FLAGS.Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            if (BUILD.initializeNextTick) {\n                // connectedCallback, taskQueue, initialLoad\n                // angular sets attribute AFTER connectCallback\n                // https://github.com/angular/angular/issues/18909\n                // https://github.com/angular/angular/issues/19940\n                nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n            }\n            else {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n            // fire off connectedCallback() on component instance\n            if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) {\n                fireConnectedCallback(hostRef.$lazyInstance$);\n            }\n            else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {\n                hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));\n            }\n        }\n        endConnected();\n    }\n};\nconst setContentReference = (elm) => {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    const contentRefElm = (elm['s-cr'] = doc.createComment(BUILD.isDebug ? `content-ref (host=${elm.localName})` : ''));\n    contentRefElm['s-cn'] = true;\n    elm.insertBefore(contentRefElm, elm.firstChild);\n};\nconst disconnectInstance = (instance) => {\n    if (BUILD.lazyLoad && BUILD.disconnectedCallback) {\n        safeCall(instance, 'disconnectedCallback');\n    }\n    if (BUILD.cmpDidUnload) {\n        safeCall(instance, 'componentDidUnload');\n    }\n};\nconst disconnectedCallback = async (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        if (BUILD.hostListener) {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map((rmListener) => rmListener());\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        if (!BUILD.lazyLoad) {\n            disconnectInstance(elm);\n        }\n        else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) {\n            disconnectInstance(hostRef.$lazyInstance$);\n        }\n        else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {\n            hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));\n        }\n    }\n};\nconst patchPseudoShadowDom = (hostElementPrototype, descriptorPrototype) => {\n    patchCloneNode(hostElementPrototype);\n    patchSlotAppendChild(hostElementPrototype);\n    patchSlotAppend(hostElementPrototype);\n    patchSlotPrepend(hostElementPrototype);\n    patchSlotInsertAdjacentElement(hostElementPrototype);\n    patchSlotInsertAdjacentHTML(hostElementPrototype);\n    patchSlotInsertAdjacentText(hostElementPrototype);\n    patchTextContent(hostElementPrototype, descriptorPrototype);\n    patchChildSlotNodes(hostElementPrototype, descriptorPrototype);\n};\nconst patchCloneNode = (HostElementPrototype) => {\n    const orgCloneNode = HostElementPrototype.cloneNode;\n    HostElementPrototype.cloneNode = function (deep) {\n        const srcNode = this;\n        const isShadowDom = BUILD.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n        const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n        if (BUILD.slot && !isShadowDom && deep) {\n            let i = 0;\n            let slotted, nonStencilNode;\n            const stencilPrivates = [\n                's-id',\n                's-cr',\n                's-lr',\n                's-rc',\n                's-sc',\n                's-p',\n                's-cn',\n                's-sr',\n                's-sn',\n                's-hn',\n                's-ol',\n                's-nr',\n                's-si',\n            ];\n            for (; i < srcNode.childNodes.length; i++) {\n                slotted = srcNode.childNodes[i]['s-nr'];\n                nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i][privateField]);\n                if (slotted) {\n                    if (BUILD.appendChildSlotFix && clonedNode.__appendChild) {\n                        clonedNode.__appendChild(slotted.cloneNode(true));\n                    }\n                    else {\n                        clonedNode.appendChild(slotted.cloneNode(true));\n                    }\n                }\n                if (nonStencilNode) {\n                    clonedNode.appendChild(srcNode.childNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nconst patchSlotAppendChild = (HostElementPrototype) => {\n    HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n    HostElementPrototype.appendChild = function (newChild) {\n        const slotName = (newChild['s-sn'] = getSlotName(newChild));\n        const slotNode = getHostSlotNode(this.childNodes, slotName);\n        if (slotNode) {\n            const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n            const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n            return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n        }\n        return this.__appendChild(newChild);\n    };\n};\n/**\n * Patches the `prepend` method for a slotted node inside a scoped component.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotPrepend = (HostElementPrototype) => {\n    const originalPrepend = HostElementPrototype.prepend;\n    HostElementPrototype.prepend = function (...newChildren) {\n        newChildren.forEach((newChild) => {\n            if (typeof newChild === 'string') {\n                newChild = this.ownerDocument.createTextNode(newChild);\n            }\n            const slotName = (newChild['s-sn'] = getSlotName(newChild));\n            const slotNode = getHostSlotNode(this.childNodes, slotName);\n            if (slotNode) {\n                const slotPlaceholder = document.createTextNode('');\n                slotPlaceholder['s-nr'] = newChild;\n                slotNode['s-cr'].parentNode.__appendChild(slotPlaceholder);\n                newChild['s-ol'] = slotPlaceholder;\n                const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n                const appendAfter = slotChildNodes[0];\n                return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n            }\n            if (newChild.nodeType === 1 && !!newChild.getAttribute('slot')) {\n                newChild.hidden = true;\n            }\n            return originalPrepend.call(this, newChild);\n        });\n    };\n};\n/**\n * Patches the `append` method for a slotted node inside a scoped component. The patched method uses\n * `appendChild` under-the-hood while creating text nodes for any new children that passed as bare strings.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotAppend = (HostElementPrototype) => {\n    HostElementPrototype.append = function (...newChildren) {\n        newChildren.forEach((newChild) => {\n            if (typeof newChild === 'string') {\n                newChild = this.ownerDocument.createTextNode(newChild);\n            }\n            this.appendChild(newChild);\n        });\n    };\n};\n/**\n * Patches the `insertAdjacentHTML` method for a slotted node inside a scoped component. Specifically,\n * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the element\n * gets inserted into the DOM in the correct location.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n    const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n    HostElementPrototype.insertAdjacentHTML = function (position, text) {\n        if (position !== 'afterbegin' && position !== 'beforeend') {\n            return originalInsertAdjacentHtml.call(this, position, text);\n        }\n        const container = this.ownerDocument.createElement('_');\n        let node;\n        container.innerHTML = text;\n        if (position === 'afterbegin') {\n            while ((node = container.firstChild)) {\n                this.prepend(node);\n            }\n        }\n        else if (position === 'beforeend') {\n            while ((node = container.firstChild)) {\n                this.append(node);\n            }\n        }\n    };\n};\n/**\n * Patches the `insertAdjacentText` method for a slotted node inside a scoped component. Specifically,\n * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the text node\n * gets inserted into the DOM in the correct location.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotInsertAdjacentText = (HostElementPrototype) => {\n    HostElementPrototype.insertAdjacentText = function (position, text) {\n        this.insertAdjacentHTML(position, text);\n    };\n};\n/**\n * Patches the `insertAdjacentElement` method for a slotted node inside a scoped component. Specifically,\n * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the element\n * gets inserted into the DOM in the correct location.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n    const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n    HostElementPrototype.insertAdjacentElement = function (position, element) {\n        if (position !== 'afterbegin' && position !== 'beforeend') {\n            return originalInsertAdjacentElement.call(this, position, element);\n        }\n        if (position === 'afterbegin') {\n            this.prepend(element);\n            return element;\n        }\n        else if (position === 'beforeend') {\n            this.append(element);\n            return element;\n        }\n        return element;\n    };\n};\n/**\n * Patches the text content of an unnamed slotted node inside a scoped component\n * @param hostElementPrototype the `Element` to be patched\n * @param cmpMeta component runtime metadata used to determine if the component should be patched or not\n */\nconst patchTextContent = (hostElementPrototype, cmpMeta) => {\n    if (BUILD.scoped && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n        const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, 'textContent');\n        Object.defineProperty(hostElementPrototype, '__textContent', descriptor);\n        Object.defineProperty(hostElementPrototype, 'textContent', {\n            get() {\n                var _a;\n                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is\n                // the empty string\n                const slotNode = getHostSlotNode(this.childNodes, '');\n                // when a slot node is found, the textContent _may_ be found in the next sibling (text) node, depending on how\n                // nodes were reordered during the vdom render. first try to get the text content from the sibling.\n                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {\n                    return slotNode.nextSibling.textContent;\n                }\n                else if (slotNode) {\n                    return slotNode.textContent;\n                }\n                else {\n                    // fallback to the original implementation\n                    return this.__textContent;\n                }\n            },\n            set(value) {\n                var _a;\n                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is\n                // the empty string\n                const slotNode = getHostSlotNode(this.childNodes, '');\n                // when a slot node is found, the textContent _may_ need to be placed in the next sibling (text) node,\n                // depending on how nodes were reordered during the vdom render. first try to set the text content on the\n                // sibling.\n                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {\n                    slotNode.nextSibling.textContent = value;\n                }\n                else if (slotNode) {\n                    slotNode.textContent = value;\n                }\n                else {\n                    // we couldn't find a slot, but that doesn't mean that there isn't one. if this check ran before the DOM\n                    // loaded, we could have missed it. check for a content reference element on the scoped component and insert\n                    // it there\n                    this.__textContent = value;\n                    const contentRefElm = this['s-cr'];\n                    if (contentRefElm) {\n                        this.insertBefore(contentRefElm, this.firstChild);\n                    }\n                }\n            },\n        });\n    }\n};\nconst patchChildSlotNodes = (elm, cmpMeta) => {\n    class FakeNodeList extends Array {\n        item(n) {\n            return this[n];\n        }\n    }\n    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n    if (cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {\n        const childNodesFn = elm.__lookupGetter__('childNodes');\n        Object.defineProperty(elm, 'children', {\n            get() {\n                return this.childNodes.map((n) => n.nodeType === 1);\n            },\n        });\n        Object.defineProperty(elm, 'childElementCount', {\n            get() {\n                return elm.children.length;\n            },\n        });\n        Object.defineProperty(elm, 'childNodes', {\n            get() {\n                const childNodes = childNodesFn.call(this);\n                if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0 &&\n                    getHostRef(this).$flags$ & 2 /* HOST_FLAGS.hasRendered */) {\n                    const result = new FakeNodeList();\n                    for (let i = 0; i < childNodes.length; i++) {\n                        const slot = childNodes[i]['s-nr'];\n                        if (slot) {\n                            result.push(slot);\n                        }\n                    }\n                    return result;\n                }\n                return FakeNodeList.from(childNodes);\n            },\n        });\n    }\n};\nconst getSlotName = (node) => node['s-sn'] || (node.nodeType === 1 && node.getAttribute('slot')) || '';\n/**\n * Recursively searches a series of child nodes for a slot with the provided name.\n * @param childNodes the nodes to search for a slot with a specific name.\n * @param slotName the name of the slot to match on.\n * @returns a reference to the slot node that matches the provided name, `null` otherwise\n */\nconst getHostSlotNode = (childNodes, slotName) => {\n    let i = 0;\n    let childNode;\n    for (; i < childNodes.length; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && childNode['s-sn'] === slotName) {\n            return childNode;\n        }\n        childNode = getHostSlotNode(childNode.childNodes, slotName);\n        if (childNode) {\n            return childNode;\n        }\n    }\n    return null;\n};\nconst getHostSlotChildNodes = (n, slotName) => {\n    const childNodes = [n];\n    while ((n = n.nextSibling) && n['s-sn'] === slotName) {\n        childNodes.push(n);\n    }\n    return childNodes;\n};\nconst defineCustomElement = (Cstr, compactMeta) => {\n    customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nconst proxyCustomElement = (Cstr, compactMeta) => {\n    const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n    };\n    if (BUILD.member) {\n        cmpMeta.$members$ = compactMeta[2];\n    }\n    if (BUILD.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n    }\n    if (BUILD.watchCallback) {\n        cmpMeta.$watchers$ = Cstr.$watchers$;\n    }\n    if (BUILD.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n    }\n    if (BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n        // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;\n    }\n    // TODO(STENCIL-914): this check and `else` block can go away and be replaced by just `BUILD.scoped` once we\n    // default our pseudo-slot behavior\n    if (BUILD.experimentalSlotFixes && BUILD.scoped) {\n        patchPseudoShadowDom(Cstr.prototype, cmpMeta);\n    }\n    else {\n        if (BUILD.slotChildNodesFix) {\n            patchChildSlotNodes(Cstr.prototype, cmpMeta);\n        }\n        if (BUILD.cloneNodeFix) {\n            patchCloneNode(Cstr.prototype);\n        }\n        if (BUILD.appendChildSlotFix) {\n            patchSlotAppendChild(Cstr.prototype);\n        }\n        if (BUILD.scopedSlotTextContentFix) {\n            patchTextContent(Cstr.prototype, cmpMeta);\n        }\n    }\n    const originalConnectedCallback = Cstr.prototype.connectedCallback;\n    const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n    Object.assign(Cstr.prototype, {\n        __registerHost() {\n            registerHost(this, cmpMeta);\n        },\n        connectedCallback() {\n            connectedCallback(this);\n            if (BUILD.connectedCallback && originalConnectedCallback) {\n                originalConnectedCallback.call(this);\n            }\n        },\n        disconnectedCallback() {\n            disconnectedCallback(this);\n            if (BUILD.disconnectedCallback && originalDisconnectedCallback) {\n                originalDisconnectedCallback.call(this);\n            }\n        },\n        __attachShadow() {\n            if (supportsShadow) {\n                if (BUILD.shadowDelegatesFocus) {\n                    this.attachShadow({\n                        mode: 'open',\n                        delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),\n                    });\n                }\n                else {\n                    this.attachShadow({ mode: 'open' });\n                }\n            }\n            else {\n                this.shadowRoot = this;\n            }\n        },\n    });\n    Cstr.is = cmpMeta.$tagName$;\n    return proxyComponent(Cstr, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */ | 2 /* PROXY_FLAGS.proxyState */);\n};\nconst forceModeUpdate = (elm) => {\n    if (BUILD.style && BUILD.mode && !BUILD.lazyLoad) {\n        const mode = computeMode(elm);\n        const hostRef = getHostRef(elm);\n        if (hostRef.$modeName$ !== mode) {\n            const cmpMeta = hostRef.$cmpMeta$;\n            const oldScopeId = elm['s-sc'];\n            const scopeId = getScopeId(cmpMeta, mode);\n            const style = elm.constructor.style[mode];\n            const flags = cmpMeta.$flags$;\n            if (style) {\n                if (!styles.has(scopeId)) {\n                    registerStyle(scopeId, style, !!(flags & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                }\n                hostRef.$modeName$ = mode;\n                elm.classList.remove(oldScopeId + '-h', oldScopeId + '-s');\n                attachStyles(hostRef);\n                forceUpdate(elm);\n            }\n        }\n    }\n};\n/**\n * Kick off hot-module-replacement for a component. In order to replace the\n * component in-place we:\n *\n * 1. get a reference to the {@link d.HostRef} for the element\n * 2. reset the element's runtime flags\n * 3. re-run the initialization logic for the element (via\n *    {@link initializeComponent})\n *\n * @param hostElement the host element for the component which we want to start\n * doing HMR\n * @param cmpMeta runtime metadata for the component\n * @param hmrVersionId the current HMR version ID\n */\nconst hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n    // ¯\\_(ツ)_/¯\n    const hostRef = getHostRef(hostElement);\n    // reset state flags to only have been connected\n    hostRef.$flags$ = 1 /* HOST_FLAGS.hasConnected */;\n    // TODO\n    // detach any event listeners that may have been added\n    // because we're not passing an exact event name it'll\n    // remove all of this element's event, which is good\n    // re-initialize the component\n    initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    var _a;\n    if (BUILD.profile && performance.mark) {\n        performance.mark('st:app:start');\n    }\n    installDevTools();\n    const endBootstrap = createTime('bootstrapLazy');\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const dataStyles = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    const styles = /*@__PURE__*/ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);\n    let appLoadFallback;\n    let isBootstrapping = true;\n    let i = 0;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    if (BUILD.asyncQueue) {\n        if (options.syncQueue) {\n            plt.$flags$ |= 4 /* PLATFORM_FLAGS.queueSync */;\n        }\n    }\n    if (BUILD.hydrateClientSide) {\n        // If the app is already hydrated there is not point to disable the\n        // async queue. This will improve the first input delay\n        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;\n    }\n    if (BUILD.hydrateClientSide && BUILD.shadowDom) {\n        for (; i < styles.length; i++) {\n            registerStyle(styles[i].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles[i].innerHTML), true);\n        }\n    }\n    let hasSlotRelocation = false;\n    lazyBundles.map((lazyBundle) => {\n        lazyBundle[1].map((compactMeta) => {\n            var _a;\n            const cmpMeta = {\n                $flags$: compactMeta[0],\n                $tagName$: compactMeta[1],\n                $members$: compactMeta[2],\n                $listeners$: compactMeta[3],\n            };\n            // Check if we are using slots outside the shadow DOM in this component.\n            // We'll use this information later to add styles for `slot-fb` elements\n            if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {\n                hasSlotRelocation = true;\n            }\n            if (BUILD.member) {\n                cmpMeta.$members$ = compactMeta[2];\n            }\n            if (BUILD.hostListener) {\n                cmpMeta.$listeners$ = compactMeta[3];\n            }\n            if (BUILD.reflect) {\n                cmpMeta.$attrsToReflect$ = [];\n            }\n            if (BUILD.watchCallback) {\n                cmpMeta.$watchers$ = (_a = compactMeta[4]) !== null && _a !== void 0 ? _a : {};\n            }\n            if (BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n                cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;\n            }\n            const tagName = BUILD.transformTagName && options.transformTagName\n                ? options.transformTagName(cmpMeta.$tagName$)\n                : cmpMeta.$tagName$;\n            const HostElement = class extends HTMLElement {\n                // StencilLazyHost\n                constructor(self) {\n                    // @ts-ignore\n                    super(self);\n                    self = this;\n                    registerHost(self, cmpMeta);\n                    if (BUILD.shadowDom && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        // this component is using shadow dom\n                        // and this browser supports shadow dom\n                        // add the read-only property \"shadowRoot\" to the host element\n                        // adding the shadow root build conditionals to minimize runtime\n                        if (supportsShadow) {\n                            if (BUILD.shadowDelegatesFocus) {\n                                self.attachShadow({\n                                    mode: 'open',\n                                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),\n                                });\n                            }\n                            else {\n                                self.attachShadow({ mode: 'open' });\n                            }\n                        }\n                        else if (!BUILD.hydrateServerSide && !('shadowRoot' in self)) {\n                            self.shadowRoot = self;\n                        }\n                    }\n                }\n                connectedCallback() {\n                    if (appLoadFallback) {\n                        clearTimeout(appLoadFallback);\n                        appLoadFallback = null;\n                    }\n                    if (isBootstrapping) {\n                        // connectedCallback will be processed once all components have been registered\n                        deferredConnectedCallbacks.push(this);\n                    }\n                    else {\n                        plt.jmp(() => connectedCallback(this));\n                    }\n                }\n                disconnectedCallback() {\n                    plt.jmp(() => disconnectedCallback(this));\n                }\n                componentOnReady() {\n                    return getHostRef(this).$onReadyPromise$;\n                }\n            };\n            // TODO(STENCIL-914): this check and `else` block can go away and be replaced by just `BUILD.scoped` once we\n            // default our pseudo-slot behavior\n            if (BUILD.experimentalSlotFixes && BUILD.scoped) {\n                patchPseudoShadowDom(HostElement.prototype, cmpMeta);\n            }\n            else {\n                if (BUILD.slotChildNodesFix) {\n                    patchChildSlotNodes(HostElement.prototype, cmpMeta);\n                }\n                if (BUILD.cloneNodeFix) {\n                    patchCloneNode(HostElement.prototype);\n                }\n                if (BUILD.appendChildSlotFix) {\n                    patchSlotAppendChild(HostElement.prototype);\n                }\n                if (BUILD.scopedSlotTextContentFix) {\n                    patchTextContent(HostElement.prototype, cmpMeta);\n                }\n            }\n            // if the component is formAssociated we need to set that on the host\n            // element so that it will be ready for `attachInternals` to be called on\n            // it later on\n            if (BUILD.formAssociated && cmpMeta.$flags$ & 64 /* CMP_FLAGS.formAssociated */) {\n                HostElement.formAssociated = true;\n            }\n            if (BUILD.hotModuleReplacement) {\n                // if we're in an HMR dev build then we need to set up the callback\n                // which will carry out the work of actually replacing the module for\n                // this particular component\n                HostElement.prototype['s-hmr'] = function (hmrVersionId) {\n                    hmrStart(this, cmpMeta, hmrVersionId);\n                };\n            }\n            cmpMeta.$lazyBundleId$ = lazyBundle[0];\n            if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n                cmpTags.push(tagName);\n                customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */));\n            }\n        });\n    });\n    // Add styles for `slot-fb` elements if any of our components are using slots outside the Shadow DOM\n    if (hasSlotRelocation) {\n        dataStyles.innerHTML += SLOT_FB_CSS;\n    }\n    // Add hydration styles\n    if (BUILD.invisiblePrehydration && (BUILD.hydratedClass || BUILD.hydratedAttribute)) {\n        dataStyles.innerHTML += cmpTags + HYDRATED_CSS;\n    }\n    // If we have styles, add them to the DOM\n    if (dataStyles.innerHTML.length) {\n        dataStyles.setAttribute('data-styles', '');\n        // Apply CSP nonce to the style tag if it exists\n        const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n        if (nonce != null) {\n            dataStyles.setAttribute('nonce', nonce);\n        }\n        // Insert the styles into the document head\n        // NOTE: this _needs_ to happen last so we can ensure the nonce (and other attributes) are applied\n        head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map((host) => host.connectedCallback());\n    }\n    else {\n        if (BUILD.profile) {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30, 'timeout')));\n        }\n        else {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst Fragment = (_, children) => children;\nconst addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n    if (BUILD.hostListener && listeners) {\n        // this is called immediately within the element's constructor\n        // initialize our event listeners on the host element\n        // we do this now so that we can listen to events that may\n        // have fired even before the instance is ready\n        if (BUILD.hostListenerTargetParent) {\n            // this component may have event listeners that should be attached to the parent\n            if (attachParentListeners) {\n                // this is being ran from within the connectedCallback\n                // which is important so that we know the host element actually has a parent element\n                // filter out the listeners to only have the ones that ARE being attached to the parent\n                listeners = listeners.filter(([flags]) => flags & 32 /* LISTENER_FLAGS.TargetParent */);\n            }\n            else {\n                // this is being ran from within the component constructor\n                // everything BUT the parent element listeners should be attached at this time\n                // filter out the listeners that are NOT being attached to the parent\n                listeners = listeners.filter(([flags]) => !(flags & 32 /* LISTENER_FLAGS.TargetParent */));\n            }\n        }\n        listeners.map(([flags, name, method]) => {\n            const target = BUILD.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n            const handler = hostListenerProxy(hostRef, method);\n            const opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n        });\n    }\n};\nconst hostListenerProxy = (hostRef, methodName) => (ev) => {\n    try {\n        if (BUILD.lazyLoad) {\n            if (hostRef.$flags$ & 256 /* HOST_FLAGS.isListenReady */) {\n                // instance is ready, let's call it's member method for this event\n                hostRef.$lazyInstance$[methodName](ev);\n            }\n            else {\n                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n            }\n        }\n        else {\n            hostRef.$hostElement$[methodName](ev);\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n};\nconst getHostListenerTarget = (elm, flags) => {\n    if (BUILD.hostListenerTargetDocument && flags & 4 /* LISTENER_FLAGS.TargetDocument */)\n        return doc;\n    if (BUILD.hostListenerTargetWindow && flags & 8 /* LISTENER_FLAGS.TargetWindow */)\n        return win;\n    if (BUILD.hostListenerTargetBody && flags & 16 /* LISTENER_FLAGS.TargetBody */)\n        return doc.body;\n    if (BUILD.hostListenerTargetParent && flags & 32 /* LISTENER_FLAGS.TargetParent */)\n        return elm.parentElement;\n    return elm;\n};\n// prettier-ignore\nconst hostListenerOpts = (flags) => supportsListenerOptions\n    ? ({\n        passive: (flags & 1 /* LISTENER_FLAGS.Passive */) !== 0,\n        capture: (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0,\n    })\n    : (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0;\n/**\n * Assigns the given value to the nonce property on the runtime platform object.\n * During runtime, this value is used to set the nonce attribute on all dynamically created script and style tags.\n * @param nonce The value to be assigned to the platform nonce property.\n * @returns void\n */\nconst setNonce = (nonce) => (plt.$nonce$ = nonce);\nconst setPlatformOptions = (opts) => Object.assign(plt, opts);\n/**\n * Updates the DOM generated on the server with annotations such as node attributes and\n * comment nodes to facilitate future client-side hydration. These annotations are used for things\n * like moving elements back to their original hosts if using Shadow DOM on the client, and for quickly\n * reconstructing the vNode representations of the DOM.\n *\n * @param doc The DOM generated by the server.\n * @param staticComponents Any components that should be considered static and do not need client-side hydration.\n */\nconst insertVdomAnnotations = (doc, staticComponents) => {\n    if (doc != null) {\n        const docData = {\n            hostIds: 0,\n            rootLevelIds: 0,\n            staticComponents: new Set(staticComponents),\n        };\n        const orgLocationNodes = [];\n        parseVNodeAnnotations(doc, doc.body, docData, orgLocationNodes);\n        orgLocationNodes.forEach((orgLocationNode) => {\n            if (orgLocationNode != null) {\n                const nodeRef = orgLocationNode['s-nr'];\n                let hostId = nodeRef['s-host-id'];\n                let nodeId = nodeRef['s-node-id'];\n                let childId = `${hostId}.${nodeId}`;\n                if (hostId == null) {\n                    hostId = 0;\n                    docData.rootLevelIds++;\n                    nodeId = docData.rootLevelIds;\n                    childId = `${hostId}.${nodeId}`;\n                    if (nodeRef.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                        nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n                    }\n                    else if (nodeRef.nodeType === 3 /* NODE_TYPE.TextNode */) {\n                        if (hostId === 0) {\n                            const textContent = nodeRef.nodeValue.trim();\n                            if (textContent === '') {\n                                // useless whitespace node at the document root\n                                orgLocationNode.remove();\n                                return;\n                            }\n                        }\n                        const commentBeforeTextNode = doc.createComment(childId);\n                        commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n                        nodeRef.parentNode.insertBefore(commentBeforeTextNode, nodeRef);\n                    }\n                }\n                let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n                const orgLocationParentNode = orgLocationNode.parentElement;\n                if (orgLocationParentNode) {\n                    if (orgLocationParentNode['s-en'] === '') {\n                        // ending with a \".\" means that the parent element\n                        // of this node's original location is a SHADOW dom element\n                        // and this node is apart of the root level light dom\n                        orgLocationNodeId += `.`;\n                    }\n                    else if (orgLocationParentNode['s-en'] === 'c') {\n                        // ending with a \".c\" means that the parent element\n                        // of this node's original location is a SCOPED element\n                        // and this node is apart of the root level light dom\n                        orgLocationNodeId += `.c`;\n                    }\n                }\n                orgLocationNode.nodeValue = orgLocationNodeId;\n            }\n        });\n    }\n};\n/**\n * Recursively parses a node generated by the server and its children to set host and child id\n * attributes read during client-side hydration. This function also tracks whether each node is\n * an original location reference node meaning that a node has been moved via slot relocation.\n *\n * @param doc The DOM generated by the server.\n * @param node The node to parse.\n * @param docData An object containing metadata about the document.\n * @param orgLocationNodes An array of nodes that have been moved via slot relocation.\n */\nconst parseVNodeAnnotations = (doc, node, docData, orgLocationNodes) => {\n    if (node == null) {\n        return;\n    }\n    if (node['s-nr'] != null) {\n        orgLocationNodes.push(node);\n    }\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        node.childNodes.forEach((childNode) => {\n            const hostRef = getHostRef(childNode);\n            if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n                const cmpData = {\n                    nodeIds: 0,\n                };\n                insertVNodeAnnotations(doc, childNode, hostRef.$vnode$, docData, cmpData);\n            }\n            parseVNodeAnnotations(doc, childNode, docData, orgLocationNodes);\n        });\n    }\n};\n/**\n * Insert attribute annotations on an element for its host ID and, potentially, its child ID.\n * Also makes calls to insert annotations on the element's children, keeping track of the depth of\n * the component tree.\n *\n * @param doc The DOM generated by the server.\n * @param hostElm The element to insert annotations for.\n * @param vnode The vNode representation of the element.\n * @param docData An object containing metadata about the document.\n * @param cmpData An object containing metadata about the component.\n */\nconst insertVNodeAnnotations = (doc, hostElm, vnode, docData, cmpData) => {\n    if (vnode != null) {\n        const hostId = ++docData.hostIds;\n        hostElm.setAttribute(HYDRATE_ID, hostId);\n        if (hostElm['s-cr'] != null) {\n            hostElm['s-cr'].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n        }\n        if (vnode.$children$ != null) {\n            const depth = 0;\n            vnode.$children$.forEach((vnodeChild, index) => {\n                insertChildVNodeAnnotations(doc, vnodeChild, cmpData, hostId, depth, index);\n            });\n        }\n        // If this element does not already have a child ID and has a sibling comment node\n        // representing a slot, we use the content of the comment to set the child ID attribute\n        // on the host element.\n        if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n            const parent = hostElm.parentElement;\n            if (parent && parent.childNodes) {\n                const parentChildNodes = Array.from(parent.childNodes);\n                const comment = parentChildNodes.find((node) => node.nodeType === 8 /* NODE_TYPE.CommentNode */ && node['s-sr']);\n                if (comment) {\n                    const index = parentChildNodes.indexOf(hostElm) - 1;\n                    vnode.$elm$.setAttribute(HYDRATE_CHILD_ID, `${comment['s-host-id']}.${comment['s-node-id']}.0.${index}`);\n                }\n            }\n        }\n    }\n};\n/**\n * Recursively analyzes the type of a child vNode and inserts annotations on the vNodes's element based on its type.\n * Element nodes receive a child ID attribute, text nodes have a comment with the child ID inserted before them,\n * and comment nodes representing a slot have their node value set to a slot node ID containing the child ID.\n *\n * @param doc The DOM generated by the server.\n * @param vnodeChild The vNode to insert annotations for.\n * @param cmpData An object containing metadata about the component.\n * @param hostId The host ID of this element's parent.\n * @param depth How deep this element sits in the component tree relative to its parent.\n * @param index The index of this element in its parent's children array.\n */\nconst insertChildVNodeAnnotations = (doc, vnodeChild, cmpData, hostId, depth, index) => {\n    const childElm = vnodeChild.$elm$;\n    if (childElm == null) {\n        return;\n    }\n    const nodeId = cmpData.nodeIds++;\n    const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n    childElm['s-host-id'] = hostId;\n    childElm['s-node-id'] = nodeId;\n    if (childElm.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n    }\n    else if (childElm.nodeType === 3 /* NODE_TYPE.TextNode */) {\n        const parentNode = childElm.parentNode;\n        const nodeName = parentNode.nodeName;\n        if (nodeName !== 'STYLE' && nodeName !== 'SCRIPT') {\n            const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n            const commentBeforeTextNode = doc.createComment(textNodeId);\n            parentNode.insertBefore(commentBeforeTextNode, childElm);\n        }\n    }\n    else if (childElm.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        if (childElm['s-sr']) {\n            const slotName = childElm['s-sn'] || '';\n            const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n            childElm.nodeValue = slotNodeId;\n        }\n    }\n    if (vnodeChild.$children$ != null) {\n        // Increment depth each time we recur deeper into the tree\n        const childDepth = depth + 1;\n        vnodeChild.$children$.forEach((vnode, index) => {\n            insertChildVNodeAnnotations(doc, vnode, cmpData, hostId, childDepth, index);\n        });\n    }\n};\n/**\n * A WeakMap mapping runtime component references to their corresponding host reference\n * instances.\n */\nconst hostRefs = /*@__PURE__*/ new WeakMap();\n/**\n * Given a {@link d.RuntimeRef} retrieve the corresponding {@link d.HostRef}\n *\n * @param ref the runtime ref of interest\n * @returns the Host reference (if found) or undefined\n */\nconst getHostRef = (ref) => hostRefs.get(ref);\n/**\n * Register a lazy instance with the {@link hostRefs} object so it's\n * corresponding {@link d.HostRef} can be retrieved later.\n *\n * @param lazyInstance the lazy instance of interest\n * @param hostRef that instances `HostRef` object\n * @returns a reference to the host ref WeakMap\n */\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\n/**\n * Register a host element for a Stencil component, setting up various metadata\n * and callbacks based on {@link BUILD} flags as well as the component's runtime\n * metadata.\n *\n * @param hostElement the host element to register\n * @param cmpMeta runtime metadata for that component\n * @returns a reference to the host ref WeakMap\n */\nconst registerHost = (hostElement, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: hostElement,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    if (BUILD.isDev) {\n        hostRef.$renderCount$ = 0;\n    }\n    if (BUILD.method && BUILD.lazyLoad) {\n        hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));\n    }\n    if (BUILD.asyncLoading) {\n        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));\n        hostElement['s-p'] = [];\n        hostElement['s-rc'] = [];\n    }\n    addHostEventListeners(hostElement, hostRef, cmpMeta.$listeners$, false);\n    return hostRefs.set(hostElement, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e, el) => (customError || console.error)(e, el);\nconst STENCIL_DEV_MODE = BUILD.isTesting\n    ? ['STENCIL:'] // E2E testing\n    : [\n        '%cstencil',\n        'color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px',\n    ];\nconst consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nconst consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nconst consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nconst setErrorHandler = (handler) => (customError = handler);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if (BUILD.isDev && typeof bundleId !== 'string') {\n        consoleDevError(`Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`);\n        return undefined;\n    }\n    const module = !BUILD.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n    if (module) {\n        return module[exportName];\n    }\n    /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n    return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD.hotModuleReplacement && hmrVersionId ? '?s-hmr=' + hmrVersionId : ''}`).then((importedModule) => {\n        if (!BUILD.hotModuleReplacement) {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = /*@__PURE__*/ new Map();\nconst modeResolutionChain = [];\nconst win = typeof window !== 'undefined' ? window : {};\nconst doc = win.document || { head: {} };\nconst H = (win.HTMLElement || class {\n});\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: (h) => h(),\n    raf: (h) => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst setPlatformHelpers = (helpers) => {\n    Object.assign(plt, helpers);\n};\nconst supportsShadow = \n// TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\nBUILD.shadowDomShim && BUILD.shadowDom\n    ? /*@__PURE__*/ (() => (doc.head.attachShadow + '').indexOf('[native') > -1)()\n    : true;\nconst supportsListenerOptions = /*@__PURE__*/ (() => {\n    let supportsListenerOptions = false;\n    try {\n        doc.addEventListener('e', null, Object.defineProperty({}, 'passive', {\n            get() {\n                supportsListenerOptions = true;\n            },\n        }));\n    }\n    catch (e) { }\n    return supportsListenerOptions;\n})();\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructableStylesheets = BUILD.constructableCSS\n    ? /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return typeof new CSSStyleSheet().replaceSync === 'function';\n        }\n        catch (e) { }\n        return false;\n    })()\n    : false;\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueDomWritesLow = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* PLATFORM_FLAGS.queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst consumeTimeout = (queue, timeout) => {\n    let i = 0;\n    let ts = 0;\n    while (i < queue.length && (ts = performance.now()) < timeout) {\n        try {\n            queue[i++](ts);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    if (i === queue.length) {\n        queue.length = 0;\n    }\n    else if (i !== 0) {\n        queue.splice(0, i);\n    }\n};\nconst flush = () => {\n    if (BUILD.asyncQueue) {\n        queueCongestion++;\n    }\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    if (BUILD.asyncQueue) {\n        const timeout = (plt.$flags$ & 6 /* PLATFORM_FLAGS.queueMask */) === 2 /* PLATFORM_FLAGS.appLoaded */\n            ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0))\n            : Infinity;\n        consumeTimeout(queueDomWrites, timeout);\n        consumeTimeout(queueDomWritesLow, timeout);\n        if (queueDomWrites.length > 0) {\n            queueDomWritesLow.push(...queueDomWrites);\n            queueDomWrites.length = 0;\n        }\n        if ((queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n        else {\n            queueCongestion = 0;\n        }\n    }\n    else {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = (cb) => promiseResolve().then(cb);\nconst readTask = /*@__PURE__*/ queueTask(queueDomReads, false);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\nexport { BUILD, Env, NAMESPACE } from '@stencil/core/internal/app-data';\nexport { Build, Fragment, H, H as HTMLElement, Host, STENCIL_DEV_MODE, addHostEventListeners, bootstrapLazy, cmpModules, connectedCallback, consoleDevError, consoleDevInfo, consoleDevWarn, consoleError, createEvent, defineCustomElement, disconnectedCallback, doc, forceModeUpdate, forceUpdate, getAssetPath, getElement, getHostRef, getMode, getRenderingRef, getValue, h, insertVdomAnnotations, isMemberInElement, loadModule, modeResolutionChain, nextTick, parsePropertyValue, plt, postUpdateComponent, promiseResolve, proxyComponent, proxyCustomElement, readTask, registerHost, registerInstance, renderVdom, setAssetPath, setErrorHandler, setMode, setNonce, setPlatformHelpers, setPlatformOptions, setValue, styles, supportsConstructableStylesheets, supportsListenerOptions, supportsShadow, win, writeTask };\n","import * as geoprocessor from \"@arcgis/core/rest/geoprocessor.js\";\nimport esriRequest from \"@arcgis/core/request.js\";\nimport PortalItem from \"@arcgis/core/portal/PortalItem.js\";\n\nimport { RFxTemplate } from \"../../support/interfaces\";\n\nimport { isEmptyDataItem } from \"./type-gaurds\";\n\nconst convertRFTToolName = \"ConvertRasterFunctionTemplate\";\n\nconst rasterUtilitiesHelperService =\n  \"https://rasteranalysisdev.arcgis.com/arcgis/rest/services/Utilities/RasterUtilities/GPServer\";\n\nfunction isXMLTemplateItem(item) {\n  const name = item.name,\n    format = name && name.slice(-8),\n    isXML = format && format.toLowerCase() === \".rft.xml\";\n  return isXML;\n}\n\nasync function getRFTJson(url): Promise<RFxTemplate> {\n  try {\n    const result = await esriRequest(url, {\n      query: { f: \"json\" }\n    });\n    return result.data as RFxTemplate;\n  } catch {\n    Promise.reject(\"fetching rft data from url failed\");\n  }\n}\n\nfunction getConvertRFTHelperService(portal) {\n  const helperServices = portal.helperServices,\n    rasterUtilitiesHelperServiceFromPortal = helperServices && helperServices.rasterUtilities;\n  return `${\n    rasterUtilitiesHelperServiceFromPortal ? rasterUtilitiesHelperServiceFromPortal.url : rasterUtilitiesHelperService\n  }`;\n}\n\nasync function getConvertRFTToJson(rftItem): Promise<RFxTemplate> {\n  const convertRFTParams = {\n    format: \"json\",\n    inputRasterFunction: JSON.stringify({\n      itemId: rftItem.id\n    })\n  };\n  const rasterUtilitiesServer = getConvertRFTHelperService(rftItem.portal);\n  if (isEmptyDataItem(rasterUtilitiesServer)) {\n    Promise.reject(\"rasterUtilities server missing\");\n  }\n  let url;\n  try {\n    const jobInfo = await geoprocessor.submitJob(`${rasterUtilitiesServer}/${convertRFTToolName}`, convertRFTParams);\n    const options = {\n      interval: 1500,\n      statusCallback: (j) => {\n        console.log(\"status: \", j.jobStatus);\n      }\n    };\n    await jobInfo.waitForJobCompletion(options);\n    const parameterValue = await jobInfo.fetchResultData(\"outputRasterFunction\");\n    const dataFile = parameterValue.value;\n    ({ url } = dataFile as __esri.DataFile);\n  } catch {\n    Promise.reject(\"json conversion failed\");\n  }\n  return getRFTJson(url);\n}\n\nexport async function getRFTJsonFromPortalItem(rftId: string, portal: __esri.Portal): Promise<RFxTemplate> {\n  let rfxTemplate;\n  const portalItem = new PortalItem({\n    id: rftId ?? \"b57c3ced6108427faabed74d8b567f96\",\n    portal: portal\n  });\n  await portalItem.load();\n  const { title: name, snippet, id: sourceItemId } = portalItem;\n  const isXML = isXMLTemplateItem(portalItem);\n  if (!isXML) {\n    const itemDataUrl = `${portalItem.itemUrl}/data`;\n    rfxTemplate = await getRFTJson(itemDataUrl);\n  } else {\n    rfxTemplate = await getConvertRFTToJson(portalItem);\n  }\n  // updating the JSON with item details\n  const updatedRFTJSON = { ...rfxTemplate, name, description: snippet ?? rfxTemplate.description, sourceItemId };\n  return updatedRFTJSON;\n}\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import { OutputName, RFxTemplate } from \"../../support/interfaces\";\nimport { SupportedLocales, fetchCommonStrings } from \"../../support/localization\";\nimport { dataTypes as DATA_TYPES, domainTypes as DOMAIN_TYPES } from \"../../support/resources\";\nimport { getSchema } from \"../../support/schema\";\nimport { RFxArgumentSchema, RFxSchema } from \"../../support/schemaInterfaces\";\n\nimport { ARGS_KEYWORD, RFT_TYPE, RFV_TYPE, TYPE_KEYWORD, isEmptyDataItem, isRFxArg } from \"./type-gaurds\";\nimport {\n  canBuildArgRFTUI,\n  containsArgName,\n  getArgRFT,\n  getCaseInsensitiveArg,\n  getEnumData,\n  getFunctionSchema,\n  getRFTName,\n  hasRasterElements,\n  shouldHonorIsPublic\n} from \"./rfx-args-helper\";\nimport { getLayerUrlWithoutToken } from \"./layer-helper\";\nimport { getFunctionsAndCategories } from \"./functions\";\n/**\n * Get a flat list of all parameters from RFT.\n * @param {RFxTemplate} rfxTemplate The RFT to be parsed.\n * @returns {any[]} The flat list containing all parameters in RFT.\n */\nfunction getRFTParamList(rfxTemplate: RFxTemplate): any[] {\n  const paramList = [];\n  const rfxArgs = rfxTemplate[ARGS_KEYWORD];\n\n  if (!isEmptyDataItem(rfxArgs)) {\n    if (isRFxArg(rfxArgs)) {\n      // for functions with only one raster param, rfxArgs is the single raster arg\n      paramList.push(rfxArgs);\n    } else {\n      Object.keys(rfxArgs).forEach((rfxTemplateArgKey) => {\n        if (rfxTemplateArgKey !== TYPE_KEYWORD) {\n          const rfxTemplateArg = rfxArgs[rfxTemplateArgKey];\n          if (isRFxArg(rfxTemplateArg)) {\n            paramList.push(rfxTemplateArg);\n          }\n        }\n      });\n    }\n  }\n  return paramList;\n}\n\n/**\n * Get the list of parameters with active state.\n * @param {any[]} paramList The input paramList to be processed.\n * @param {HashMap<RFxArgumentSchema>} functionSchemaArgs The args from function schema.\n * @returns {any[]} The flat list containing all parameters in RFT.\n */\nfunction getActiveStateParamList(paramList: any[], functionSchemaArgs: HashMap<RFxArgumentSchema>): any[] {\n  const paramsToHide = [];\n\n  // same logic to handle active state triggers from schema\n  paramList.forEach((param) => {\n    const schemaArg = getCaseInsensitiveArg(param.name, functionSchemaArgs);\n    if (isEmptyDataItem(schemaArg?.editorStateTrigger)) {\n      return;\n    }\n\n    let argValue = param.value;\n    if (schemaArg.dataType !== DATA_TYPES.boolean && !isNaN(argValue)) {\n      // convert number strings to numbers\n      argValue = Number(argValue);\n    }\n    const isStateTriggerAcive = schemaArg.editorStateTrigger.active;\n    if (isEmptyDataItem(isStateTriggerAcive) || !isStateTriggerAcive) {\n      return;\n    }\n\n    schemaArg.editorStateTrigger.triggers?.forEach((trigger: any) => {\n      let isActive, isInactive, hideParam;\n\n      // checkValuePresent flag: checks if a value is present in field,\n      // if true and value is present set `isTriggerValue` as true. (used in `Switchable` Domain type)\n      const autoRevert = trigger.autoRevert || false;\n      const isInTriggerValue = trigger.checkValuePresent\n        ? !isEmptyDataItem(argValue)\n        : Array.isArray(trigger.values) && trigger.values.indexOf(argValue) >= 0;\n\n      // display is only modified when either `isInTriggerValue`: true or `autoRevert`: true\n      // if both are false then no need to iterate over each param as display wont be affected\n      if (!isInTriggerValue && !autoRevert) {\n        // skip to the next trigger\n        return;\n      }\n\n      paramList.forEach((_param) => {\n        if (param.name === _param.name) {\n          return;\n        }\n        isActive = containsArgName(trigger.active, _param.name);\n        isInactive = containsArgName(trigger.inactive, _param.name);\n        hideParam = (isInactive && isInTriggerValue) || (isActive && !isInTriggerValue && autoRevert);\n        if (hideParam) {\n          paramsToHide.push(_param.name);\n        }\n      });\n    });\n  });\n\n  return paramList.filter((param) => paramsToHide.indexOf(param.name) < 0);\n}\n\n/**\n * Filter and return parameters which are set as isPublic.\n * @param {boolean} honorIsPublic Whether to hornor isPublic flags in RFT params.\n * @param {any[]} rftParamList The parameter list from RFT to be filtered.\n * @returns {any[]} The filtered flat list containing all isPublic parameters.\n */\nfunction getPublicParamList(honorIsPublic: boolean, rftParamList: any[]): any[] {\n  return honorIsPublic ? rftParamList.filter((param) => param.isPublic === true) : rftParamList;\n}\n\n/**\n * Get the display name from rfx param.\n * @param param to get display value from.\n * @param {any} schemaArg arg schema info.\n * @returns the localized param display name.\n */\nfunction getRFxParamDisplayName(param: any, schemaArg: any): string {\n  // TODO: handle override widgets case\n  return schemaArg?.displayName ?? param.displayName ?? param.name;\n}\n\n/**\n * Get the display name of raster param in local function rasters.\n * @param {any} param The local raster param to get display name from.\n * @param {number} index The index of raster within rasters array.\n * @param {any} schemaArg arg schema info.\n * @param {number} localOperationValue The operation value of local function.\n * @returns {string} The display name of local raster param.\n */\nfunction getLocalRasterParamDisplayName(\n  param: any,\n  index: number,\n  schemaArg: any,\n  localOperationValue: number\n): string {\n  const { elementInfos } = schemaArg;\n  let paramDisplayName = param.name;\n  if (!isEmptyDataItem(elementInfos)) {\n    const inputArgs = elementInfos.find(\n      (elementInfo) => elementInfo.values.indexOf(localOperationValue) > -1\n    )?.inputArgs;\n    if (!isEmptyDataItem(inputArgs)) {\n      paramDisplayName = inputArgs[index]?.displayName;\n    }\n  }\n  return paramDisplayName;\n}\n\n/**\n * Get the display value of raster param.\n * @param {any} param The raster param to get display value from.\n * @param {any} rfxArgsStrings The strings used for translation.\n * @returns {any} The display value of raster param.\n */\nfunction getRasterParamDisplayValue(param: any, rfxArgsStrings: any): any {\n  const paramValue = param?.value;\n  let paramDisplayValue = paramValue;\n  if (param?.type === RFV_TYPE) {\n    if (paramValue?.type === \"Scalar\") {\n      paramDisplayValue = paramValue?.value ?? \"0\";\n    } else if (!isEmptyDataItem(paramValue)) {\n      const { name, url } = paramValue;\n      const sanitizedUrl = getLayerUrlWithoutToken(url);\n      paramDisplayValue = { name: name, url: sanitizedUrl };\n    }\n  } else if (param?.type === RFT_TYPE) {\n    // handle nested RFT chain case in raster param\n    const functionName = param?.function?.name ?? param?.name ?? \"\";\n    paramDisplayValue = `<${functionName}.${rfxArgsStrings.outputRaster}>`;\n  }\n  return paramDisplayValue;\n}\n\n/**\n * Get the display value of raster array param.\n * @param {any} param The raster array param to get display value from.\n * @param {any} rfxArgsStrings The strings used for translation.\n * @returns {any} The display value of raster array param.\n */\nfunction getRasterArrayParamDisplayValue(param: any, rfxArgsStrings: any): any {\n  const paramValue = param?.value;\n  const elements = !isEmptyDataItem(paramValue)\n    ? paramValue?.elements ?? (Array.isArray(paramValue) ? paramValue : [paramValue])\n    : [];\n  const paramDisplayValue = Array.from(elements).map((element) => getRasterParamDisplayValue(element, rfxArgsStrings));\n  return paramDisplayValue;\n}\n\n/**\n * Get the display value of feature class param.\n * @param {any} param The feature class param to get display value from.\n * @returns {any} The display value of feature class param.\n */\nfunction getFeatureClassParamDisplayValue(param: any): any {\n  const paramValue = param?.value;\n  let paramDisplayValue = paramValue;\n  if (!isEmptyDataItem(paramValue)) {\n    const { name, url } = paramValue;\n    const sanitizedUrl = getLayerUrlWithoutToken(url);\n    paramDisplayValue = { name: name, url: sanitizedUrl };\n  }\n\n  return paramDisplayValue;\n}\n\n/**\n * Get the display value of color ramp datatype param.\n * @param {any} param The color ramp param to get display value from.\n * @returns {any} The display value of color ramp param.\n */\nfunction getColorRampParamDisplayValue(param: any, rfxArgsStrings: any): any {\n  const paramValue = param?.value;\n  // for R02 release, only show name of colorramp, or \"Custom\" if no name\n  const colorRampName = paramValue?.Name ?? paramValue?.name ?? undefined;\n  const paramDisplayValue = !isEmptyDataItem(colorRampName) ? colorRampName : rfxArgsStrings.custom;\n  return paramDisplayValue;\n}\n\n/**\n * Get the display value from rfx param.\n * @param param to get display value from.\n * @param {RFxArgumentSchema} schemaArg arg schema info.\n * @param {any} rfxArgsStrings strings used for translation.\n * @returns the localized param display value.\n */\nfunction getRFxParamDisplayValue(param: any, schemaArg: RFxArgumentSchema, rfxArgsStrings: any): any {\n  const paramValue = param?.value;\n  let paramDisplayValue = paramValue;\n\n  if (schemaArg !== undefined && schemaArg !== null) {\n    switch (schemaArg.dataType) {\n      case DATA_TYPES.boolean:\n        // show localized string of \"True\" or \"False\" for boolean dataType\n        paramDisplayValue = paramValue ? rfxArgsStrings.true : rfxArgsStrings.false;\n        break;\n      case DATA_TYPES.colorRamp:\n        paramDisplayValue = getColorRampParamDisplayValue(param, rfxArgsStrings);\n        break;\n      case DATA_TYPES.featureClass:\n        paramDisplayValue = getFeatureClassParamDisplayValue(param);\n        break;\n      case DATA_TYPES.raster:\n        paramDisplayValue = getRasterParamDisplayValue(param, rfxArgsStrings);\n        break;\n      case DATA_TYPES.rasterArray:\n        paramDisplayValue = getRasterArrayParamDisplayValue(param, rfxArgsStrings);\n        break;\n      default:\n        break;\n    }\n\n    if (!isEmptyDataItem((schemaArg.domain as any)?.enum)) {\n      // return corresponding enum label for enum domain type params value.\n      const rfxArgEnum = getEnumData((schemaArg.domain as any)?.enum);\n      paramDisplayValue = rfxArgEnum?.find((enumOption) => enumOption.key === paramValue?.toString())?.label;\n    }\n\n    if (!isEmptyDataItem(schemaArg.domain?.type) && schemaArg.domain?.type === DOMAIN_TYPES.bandIndex) {\n      // make bandIndex domain type param values consistent with UI, add 1 as it is not 0-based.\n      paramDisplayValue = !isEmptyDataItem(paramValue) ? (paramValue as number) + 1 : paramValue;\n    }\n  } else {\n    // for param with modified names and does not have a matched schemaArg\n    if (hasRasterElements(param)) {\n      paramDisplayValue = getRasterArrayParamDisplayValue(param, rfxArgsStrings);\n    } else {\n      paramDisplayValue = getRasterParamDisplayValue(param, rfxArgsStrings);\n    }\n  }\n\n  return paramDisplayValue ?? paramValue;\n}\n\n/**\n * Process the param list from rft and return localized json format results for history display.\n * @param {boolean} honorIsPublic Whether to hornor isPublic flags in RFT params.\n * @param {RFxTemplate} rfxTemplate The raster function template to be processed.\n * @param {HashMap<RFxSchema>} rasterFunctions The HashMap containing all RFx Schema info.\n * @param {any} rfxArgsStrings strings used for translation.\n * @returns The localized result json objs to be displayed on history details.\n */\nfunction getLocalizedRFTParamListJSON(\n  honorIsPublic: boolean,\n  rfxTemplate: RFxTemplate,\n  rasterFunctions: HashMap<RFxSchema>,\n  rfxArgsStrings: any\n): {\n  translatedKeys: Record<string, string>;\n  translatedJobParams: Record<string, any>;\n} {\n  let translatedKeys: Record<string, string> = {},\n    translatedJobParams: Record<string, any> = {};\n\n  const paramList = getRFTParamList(rfxTemplate);\n\n  const indexesToSplice: number[] = [];\n\n  paramList?.forEach((rfxArg, index) => {\n    if (canBuildArgRFTUI(rfxArg)) {\n      //handle custom RFT with nested function chain case\n      let argRFT = getArgRFT(rfxArg);\n      if (argRFT) {\n        const { translatedKeys: translatedArgRFTKeys, translatedJobParams: translatedArgRFTJobParams } =\n          getLocalizedRFTParamListJSON(honorIsPublic, argRFT, rasterFunctions, rfxArgsStrings);\n        translatedKeys = { ...translatedKeys, ...translatedArgRFTKeys };\n        translatedJobParams = { ...translatedJobParams, ...translatedArgRFTJobParams };\n\n        // after the rfxArg with nested function chain has been parsed, mark index to remove it from the paramList\n        indexesToSplice.push(index);\n      } else if (hasRasterElements(rfxArg)) {\n        const elements = rfxArg.value.elements ?? [rfxArg.value];\n        Array.from(elements).forEach((element) => {\n          argRFT = getArgRFT(element);\n          if (argRFT) {\n            const { translatedKeys: translatedArgRFTKeys, translatedJobParams: translatedArgRFTJobParams } =\n              getLocalizedRFTParamListJSON(honorIsPublic, argRFT, rasterFunctions, rfxArgsStrings);\n            translatedKeys = { ...translatedKeys, ...translatedArgRFTKeys };\n            translatedJobParams = { ...translatedJobParams, ...translatedArgRFTJobParams };\n          }\n        });\n      }\n    }\n  });\n\n  if (indexesToSplice.length > 0) {\n    indexesToSplice.sort(function (a, b) {\n      return b - a;\n    });\n    // remove element(s) from paramList by indexes in descending order\n    indexesToSplice.forEach((spliceIndex) => {\n      paramList.splice(spliceIndex, 1);\n    });\n  }\n\n  const functionSchema = getFunctionSchema({\n    schema: rasterFunctions,\n    rfxTemplate\n  });\n\n  const functionSchemaArgs = functionSchema?.rasterFunctionArguments;\n  // TODO: handle schema editor overrides\n  // const schemaEditorOverrides = functionSchema?.editorArgumentOverride?.active\n  //   ? functionSchema.editorArgumentOverride.overrides\n  //   : null;\n\n  const activeStateParamList = getActiveStateParamList(paramList, functionSchemaArgs);\n  const publicParamList = getPublicParamList(honorIsPublic, activeStateParamList);\n\n  // return results of jobParams in a display-friendly format.\n  publicParamList?.forEach((param) => {\n    let paramName = param.name;\n    let isLocalFunctionRasters = false;\n    let localOperationValue;\n\n    if (rfxTemplate?.function?.type === \"LocalFunction\" && paramName === \"_Rasters\") {\n      // for local functions rasters input, use \"Rasters\" to get schemaArg\n      paramName = \"Rasters\";\n      isLocalFunctionRasters = true;\n      localOperationValue = rfxTemplate.arguments?.Operation?.value;\n    }\n\n    const schemaArg = getCaseInsensitiveArg(paramName, functionSchemaArgs);\n    if (schemaArg?.hidden !== true) {\n      if (isLocalFunctionRasters) {\n        param.value?.elements?.forEach((element, index) => {\n          translatedKeys[element.name] = getLocalRasterParamDisplayName(element, index, schemaArg, localOperationValue);\n          translatedJobParams[element.name] = getRasterParamDisplayValue(element, rfxArgsStrings);\n        });\n      } else {\n        translatedKeys[paramName] = getRFxParamDisplayName(param, schemaArg);\n        translatedJobParams[paramName] = getRFxParamDisplayValue(param, schemaArg, rfxArgsStrings);\n      }\n    }\n  });\n  return { translatedKeys, translatedJobParams };\n}\n\n/**\n * Parse the outputName JSON from jobParams and return localized json format results for history display.\n * @param {string} outputName The outputName JSON to be parsed.\n * @param {any} mainGenStrings The mainGenStrings for localization.\n * @returns The localized result json objs to be displayed on history details.\n */\nfunction getTranslatedOutputName(\n  outputName: string,\n  mainGenStrings: any\n): {\n  translatedOutputNameKeys: Record<string, string>;\n  translatedOutputNameJobParams: Record<string, any>;\n} {\n  const translatedOutputNameKeys: Record<string, string> = {},\n    translatedOutputNameJobParams: Record<string, any> = {};\n\n  const outputNameObj: OutputName = JSON.parse(outputName);\n\n  translatedOutputNameKeys.outputName = mainGenStrings.outputName;\n  translatedOutputNameJobParams.outputName =\n    outputNameObj?.serviceProperties?.name ?? outputNameObj.itemProperties?.title ?? undefined;\n\n  translatedOutputNameKeys.outputType = mainGenStrings.outputLayerType;\n  translatedOutputNameJobParams.outputType =\n    outputNameObj?.serviceProperties?.capabilities === \"Image\"\n      ? mainGenStrings.dynamicImageryLayer\n      : mainGenStrings.tiledImageryLayer;\n\n  translatedOutputNameKeys.saveInFolder = mainGenStrings.saveInFolder;\n  translatedOutputNameJobParams.saveInFolder = outputNameObj?.itemProperties?.folderId;\n\n  return { translatedOutputNameKeys, translatedOutputNameJobParams };\n}\n\n/**\n * Format the RFT parameters and return a translated json format result for history display.\n * @param {RFxTemplate} rfxTemplate The RFT to be formatted.\n * @param {SupportedLocales} locale The locale used for translation.\n * @returns The promise of result json objs to be displayed on history details.\n */\nexport async function getTranslatedRFTParameters(\n  rfxTemplate: RFxTemplate,\n  outputName: string,\n  locale?: SupportedLocales\n): Promise<{\n  translatedKeys: Record<string, string>;\n  translatedJobParams: Record<string, any>;\n}> {\n  if (isEmptyDataItem(rfxTemplate) || isEmptyDataItem(locale)) {\n    return { translatedKeys: {}, translatedJobParams: {} };\n  }\n\n  const commonStrings = await fetchCommonStrings(locale);\n  let rfxArgsStrings = commonStrings.rasterFunctions.rfxArgs;\n  const rfxArgsEditorStrings = commonStrings.rasterFunctionEditor.rfxArgsEditor;\n  const mainGenStrings = commonStrings.rasterFunctions.mainGenStrings;\n  rfxArgsStrings = { ...rfxArgsStrings, ...rfxArgsEditorStrings };\n  rfxArgsStrings = { ...rfxArgsStrings, ...mainGenStrings };\n\n  const rasterFunctions: HashMap<RFxSchema> = await getSchema(locale);\n\n  const honorIsPublic = shouldHonorIsPublic(rfxTemplate);\n\n  let { translatedKeys, translatedJobParams } = getLocalizedRFTParamListJSON(\n    honorIsPublic,\n    rfxTemplate,\n    rasterFunctions,\n    rfxArgsStrings\n  );\n\n  if (!isEmptyDataItem(outputName)) {\n    const { translatedOutputNameKeys, translatedOutputNameJobParams } = getTranslatedOutputName(\n      outputName,\n      mainGenStrings\n    );\n    translatedKeys = { ...translatedKeys, ...translatedOutputNameKeys };\n    translatedJobParams = { ...translatedJobParams, ...translatedOutputNameJobParams };\n  }\n\n  return { translatedKeys, translatedJobParams };\n}\n\n/**\n * Get translated rft name from rfxTemplate.\n * @param {RFxTemplate} rfxTemplate to get the name from.\n * @param {SupportedLocales} locale The locale used for translation.\n * @returns The promise of translated rft name.\n */\nexport async function getTranslatedRFTName(rfxTemplate: RFxTemplate, locale?: SupportedLocales): Promise<string> {\n  if (isEmptyDataItem(rfxTemplate) || isEmptyDataItem(locale)) {\n    return;\n  }\n\n  const commonStrings = await fetchCommonStrings(locale);\n  const rfxStrings = commonStrings.rasterFunctions.rfx;\n\n  const rasterFunctions = await getSchema(locale);\n  const functionSchema = getFunctionSchema({\n    schema: rasterFunctions,\n    rfxTemplate: rfxTemplate\n  });\n\n  const rfxTemplateName = rfxTemplate.name;\n  let translatedRFTName = rfxTemplateName;\n  let translatedFunctionName = functionSchema.name;\n\n  if (rfxTemplateName.toLowerCase() === rfxTemplate.function?.name?.toLowerCase()) {\n    // return translated name for system function case; skip for custom RFTs\n    if (isEmptyDataItem(translatedFunctionName)) {\n      // for case like local functions, match function name in common strings\n      const functionName = await getRFTName(rfxTemplate);\n      translatedFunctionName =\n        rfxStrings[Object.keys(rfxStrings).find((key) => key.toLowerCase() === functionName?.toLowerCase() + \"name\")];\n    }\n\n    if (!isEmptyDataItem(translatedFunctionName)) {\n      translatedRFTName = translatedFunctionName;\n    }\n  }\n  return translatedRFTName;\n}\n\n/**\n * Get translated system function names map from RFTDefinition.\n * @returns {Promise<Map<string, string>>} The promise of translated system function names map.\n */\nexport async function getTranslatedRFTNamesMap(): Promise<Map<string, string>> {\n  const translatedRFTNamesMap: Map<string, string> = new Map();\n  const { rfxFunctions } = await getFunctionsAndCategories();\n  for (const rfxFunction of rfxFunctions) {\n    if (!isEmptyDataItem(rfxFunction)) {\n      translatedRFTNamesMap.set(rfxFunction.name, rfxFunction.title);\n    }\n  }\n  return translatedRFTNamesMap;\n}\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import {\n  getFunctionDescriptionHelpTemplate,\n  getFunctionsAndCategories,\n  getOutputRasterHelpTemplate,\n  getRFTJsonFromPortalItem,\n  getTranslatedRFTNamesMap,\n  getTranslatedRFTParameters,\n  isChangedMapLayerAPreview\n} from \"@arcgis/arcgis-raster-function-editor\";\n\nexport interface RFTDefinition {\n  name: string;\n  type: string;\n  title: string;\n  category: string;\n  categoryTitle: string;\n  snippet: string;\n  description: string;\n  icon: string;\n  helpID: string;\n}\n\n// Please rename the util methods imported from raster-function-editor package when exporting in analysis\n// to avoid AMD build errors in MV\nexport {\n  getFunctionsAndCategories as getRFxFunctionsAndCategories,\n  getFunctionDescriptionHelpTemplate as getRFxFunctionDescriptionHelpTemplate,\n  getOutputRasterHelpTemplate as getRFxOutputRasterHelpTemplate,\n  getRFTJsonFromPortalItem as getRFxRFTJsonFromPortalItem,\n  getTranslatedRFTNamesMap as getRFxTranslatedRFTNamesMap,\n  getTranslatedRFTParameters as getRFxTranslatedRFTParameters,\n  isChangedMapLayerAPreview as isChangedMapLayerAPreview\n};\n\nexport const RESULT_TYPE: {\n  [key: string]: \"TILED_IMAGERY_LAYER\" | \"DYNAMIC_IMAGERY_LAYER\";\n} = {\n  TILED: \"TILED_IMAGERY_LAYER\",\n  DYNAMIC: \"DYNAMIC_IMAGERY_LAYER\"\n  } as const;\n","import { SupportedLayerTypes } from \"../../support/interfaces\";\n\nimport { arrayDifference } from \"./common\";\n\n/**\n * Check if the layer is a preview layer\n * @param layer supported layer type\n * @returns boolean\n */\nexport function isPreviewLayer(layer): boolean {\n  return !!(layer.raster && layer.url?.toLowerCase().includes(\"/rasterrendering/imageserver\"));\n}\n\n/**\n * check if the changed map layer is a preview layer\n * @param newMapLayers array of supported layer types\n * @param oldMapLayers array of supported layer types\n * @returns boolean\n */\nexport function isChangedMapLayerAPreview(\n  newMapLayers: SupportedLayerTypes[],\n  oldMapLayers: SupportedLayerTypes\n): boolean {\n  const changedMapLayer = arrayDifference(newMapLayers, oldMapLayers, \"id\");\n  return changedMapLayer?.length === 1 && isPreviewLayer(changedMapLayer[0]);\n}\n","import esriRequest from \"@arcgis/core/request\";\n\nimport { isEqual, template, uniqueId } from \"lodash-es\";\n\nimport { LocaleItem } from \"../../support/localization\";\n\n/**\n * Generates and returns a message with the keys in the input statement replaced with new values.\n * @param message\n * @param statement\n * @param parameters\n */\nexport function formatMessage(statement: Readonly<string>, parameters: Readonly<LocaleItem>): string {\n  const templateFn = template(statement);\n  return templateFn(parameters);\n}\n\nexport function getUniqueId(prefix?: string): string {\n  return uniqueId(prefix);\n}\n\nexport function isObjectEqual(val1, val2) {\n  return isEqual(val1, val2);\n}\n\nexport function filterUniqueObjects(arr, property) {\n  const uniqueValues = new Set();\n  return arr.filter((item) => {\n    if (!uniqueValues.has(item[property])) {\n      uniqueValues.add(item[property]);\n      return true;\n    }\n    return false;\n  });\n}\n\n/**\n * Wrapper for the esriRequest\n * @param url the url\n * @param options the response type and other options\n * @returns RequestResponse\n */\nexport async function request(url: string, options: __esri.RequestOptions): Promise<__esri.RequestResponse> {\n  return esriRequest(url, options);\n}\n\n/**\n * Get the difference between two arrays of objects\n * @param array1 object array\n * @param array2 object array\n * @param value property to compare\n * @returns object array\n */\nexport function arrayDifference(array1, array2, value): object[] {\n  //Find values that are in result1 but not in result2\n  const uniqueResultOne = array1.filter((obj) => !array2.some((obj2) => obj[value] == obj2[value]));\n\n  //Find values that are in result2 but not in result1\n  const uniqueResultTwo = array2.filter((obj) => !array1.some((obj2) => obj[value] == obj2[value]));\n\n  //Combine the two arrays of unique entries\n  return uniqueResultOne.concat(uniqueResultTwo);\n}\n\n// https://stackoverflow.com/questions/23223718/failed-to-execute-btoa-on-window-the-string-to-be-encoded-contains-characte\n// solution for browser without using unescape:\nexport function toBinary(str) {\n  let result = \"\";\n\n  str = encodeURIComponent(str);\n\n  for (let i = 0; i < str.length; i++)\n    if (str[i] == \"%\") {\n      result += String.fromCharCode(parseInt(str.substring(i + 1, i + 3), 16));\n      i += 2;\n    } else result += str[i];\n\n  return result;\n}\n"],"names":["SupportedLocales","Arabic","Bosnian","Bulgarian","Catalan","Czech","Danish","German","Greek","English","EnglishUSA","Spanish","Estonian","Finnish","French","Hebrew","Hindi","Croatian","Hungarian","Indonesian","Italian","Japanese","Korean","Lithuanian","Latvian","NorwegianBokml","Dutch","Polish","PortugueseBrazil","PortuguesePortugal","Romanian","Russian","Serbian","Slovenian","Slovak","Swedish","Thai","Turkish","Ukrainian","Vietnamese","ChineseChina","ChineseHongKong","ChineseTaiwan","SupportedOnlineHelpLocales","LocaleMap","ind","ukr","RTLLocales","DefaultLocale","getDirectionBasedOnRTL","rtl","getLocaleInfo","element","document","documentElement","closestElement","selector","closestFrom","el","undefined","window","closest","getRootNode","host","locale","lang","navigator","language","supportedLocales","Object","values","defaultLocale","convertedLocale","localeMap","localeSanitized","toLowerCase","indexOf","region","split","toUpperCase","keys","includes","convertToSupportedLocale","formatLocalizedHelpUrl","url","basePath","localeInLowerCase","toLocaleLowerCase","replace","match","async","fetchCommonStrings","strings","resolve","reject","Promise","require","dataTypes","domainTypes","helpDoc","key","value","label","global$1","global","self","freeGlobal","freeSelf","root","Function","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","baseGetTag","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","isArray","Array","isObject","type","isFunction","uid","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","toSource","func","reIsHostCtor","funcProto","reIsNative","RegExp","baseIsNative","test","getNative","object","getValue","WeakMap","isLength","isArrayLike","length","isPrototype","Ctor","constructor","baseIsArguments","propertyIsEnumerable","isArguments","arguments","freeExports","exports","nodeType","freeModule","module","Buffer","isBuffer","typedArrayTags","freeProcess","process","nodeUtil","types","binding","nodeIsTypedArray","isTypedArray","overArg","transform","arg","nativeKeys","Map","getPrototype","getPrototypeOf","objectCtorString","isPlainObject","proto","DataView","Set","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","ctorString","getTag$1","isEmpty","splice","size","push","baseKeys","RFT_TYPE","RFV_TYPE","isRFxArg","rftElement","rfxArg","isRecordSet","isEmptyDataItem","isAllPropsEmpty","prop","propValue","isEveryPropertyEmpty","getSchema","functionStrings","enums","colorSchemeTypes","rasterFunctions","enumLabels","clrSchemeTypeColormap","clrSchemeTypeColorRamp","colormapTypes","colormapTypeElevation","colormapTypeGray","colormapTypeNDVI","colormapTypeNDVI2","colormapTypeNDVI3","colormapTypeRandom","clrmapTypeHillshade","bandComboMethods","bandComboByNames","bandComboByWavelength","bandComboByIDs","esriMissingBandActions","missingBandActionBestMatch","missingBandActionFail","esriHillshadeTypes","hillshadeTypeSimple","hillshadeTypeMultidirectional","esriSlopeTypes13","none","slopeTypeAdjusted","esriSlopeTypes","slopeTypeDegree","slopeTypePercentRise","slopeTypeScaled","esriUnitConversionFxUnitTypes","unitTypeCelsius","unitTypeCentimeters","unitTypeDecimeters","unitTypeFahrenheit","unitTypeFeet","unitTypeFeetPerSec","unitTypeInches","unitTypeKelvin","unitTypeKilometers","unitTypeKmsPerHour","unitTypeKnots","unitTypeMeters","unitTypeMetersPerSec","unitTypeMiles","unitTypeMilesPerHour","unitTypeMillimeters","unitTypeNauticalMiles","unitTypeYards","esriRasterStretchTypes","stretchTypeStdDev","stretchTypeMinMax","stretchTypePercentMinMax","stretchTypeSigmoid","esriCellsizeTypes","cellsizeTypeFirst","cellsizeTypeMin","cellsizeTypeMax","cellsizeTypeMean","cellsizeTypeLast","esriExtentTypes","extentTypeFirst","extentTypeIntersection","extentTypeUnion","extentTypeLast","esriNoDataInterpretationTypes","noDataInterpretAny","noDataInterpretAll","esriCurvatureTypes","curvatureTypeStandard","curvatureTypeProfile","curvatureTypePlanform","esriRasterFilterTypes","filterTypeLineDetectionHorizontal","filterTypeLineDetectionVertical","filterTypeLineDetectionLeftDiagonal","filterTypeLineDetectionRightDiagonal","filterTypeGradientNorth","filterTypeGradientWest","filterTypeGradientEast","filterTypeGradientSouth","filterTypeGradientNorthEast","filterTypeGradientNorthWest","filterTypeSmoothArithmeticMean","filterTypeSmoothing3x3","filterTypeSmoothing5x5","filterTypeSharpening3x3","filterTypeSharpening5x5","filterTypeLaplacian3x3","filterTypeLaplacian5x5","filterTypeSobelHorizontal","filterTypeSobelVertical","filterTypeSharpen","filterTypeSharpen2","filterTypePointSpread","userDefined","esriContourTypes","ContourTypeLines","ContourTypeFill","ContourTypeSmoothOnly","esriRasterizeResolveOverlapMethod","rasterizeFirst","rasterizeLast","rasterizeSmallest","rasterizeLargest","rstResamplingTypes","resamplingTypeNearest","resamplingTypeBilinear","resamplingTypeCubic","resamplingTypeMajority","resamplingTypeBilinearPlus","resamplingTypeGauss","resamplingTypeGaussPlus","resamplingTypeAverage","resamplingTypeMinimum","resamplingTypeMaximum","resamplingTypeVectorAvg","esriFocalStatisticTypes","minimum","maximum","mean","stdDeviation","median","majority","minority","uvMagDirUnkTypes","uvMagDirTypeUV","uvMagDirTypeMagDir","unknown","esriAngleReferenceSystemTypes","angleRefSysGeographic","angleRefSysArithmetic","uvMagDirTypes","esriInterpolateIrregularDataMethods","interpolateIrregularDataNearest","interpolateIrregularDataTinningLinear","interpolateIrregularDataTinningNaturalNeighbor","interpolateIrregularDataTinningIDW","esriRasterThresholdTypes","esriRasterThresholdTypeConstant","esriRasterThresholdTypeOtsu","esriRasterThresholdTypeTsai","esriRasterThresholdTypeKapur","esriRasterThresholdTypeKittler","esriRasterThresholdTypeRosin","esriArgStatisticsTypes","argStatsTypeMax","argStatsTypeMin","argStatsTypeMedian","argStatsTypeDuration","esriRasterArithmeticOperations","arithmeticOpPlus","arithmeticOpMinus","arithmeticOpMultiply","arithmeticOpDivide","arithmeticOpPower","arithmeticOpMode","esriRasterClippingTypes","clipTypeOutside","clipTypeInside","gpsaIgnoreNoData","yes","no","gpsaKernelDensityAreaUnitTypes","unitTypeSqMapUnits","unitTypeSqMiles","unitTypeSqKms","unitTypeAcres","unitTypeHectares","unitTypeSqYards","unitTypeSqFt","unitTypeSqInches","unitTypeSqMts","unitTypeSqCms","unitTypeSqMms","gpsaKernelDensityOutValTypes","densities","expectedCounts","gpsaKernelDensityMethods","planar","geodesic","gpsaLinearUnitTypes","unitTypeDecimalDegrees","unitTypePoints","unitTypeUnknown","gpsaLeastCostPathTypes","eachCell","eachZone","bestSingle","gpsaViewshedAnalysisMethods","allSightlines","perimeterSightlines","gpsaViewshedAnalysisTypes","frequency","observers","gpsaZonalStatisticsTypes","percentile","range","sum","variety","gpsaZonalPercentileInterpolationTypes","autoDetect","nearest","linear","bandArithmeticMethods","ndvi","savi","bandArithmeticMethodTSAVI","bandArithmeticMethodMSAVI","gemi","pvi","gvi","bandArithmeticMethodSultan","vari","gndvi","sr","ndvire","srre","mtvi2","rtviCore","cire","cig","ndwi","evi","ironOxide","ferrousMinerals","clayMinerals","wndwi","bai","nbr","ndbi","ndmi","ndsi","mndwi","pyStdTemperatureUnitTypes","pyStdWindspeedUnitTypes","localFunctionOperations","localSquareRoot","localACos","localASin","localATan","localATanH","localAbs","localBitwiseNot","localBooleanNot","localCos","localCosH","localExp","localExp10","localExp2","localInt","localIsNull","localFloat","localLn","localLog10","localLog2","localNegate","localRoundDown","localRoundUp","localSin","localSinH","localSquare","localTan","localTanH","localACosH","localASinH","localPlus","localMinus","localTimes","localPower","localBitwiseAnd","localBitwiseLeftShift","localBitwiseOr","localBitwiseRightShift","localBitwiseXor","localBooleanAnd","localBooleanOr","localBooleanXor","localDivide","localEqualTo","localGreaterThan","localGreaterThanEqual","localLessThan","localLessThanEqual","localMod","localNotEqual","localATan2","localSetNull","cellStatisticsTypes","localCellStatisticsMajority","localCellStatisticsMax","localCellStatisticsMean","localCellStatisticsMedian","localCellStatisticsMin","localCellStatisticsMinority","localCellStatisticsRange","localCellStatisticsStdDev","localCellStatisticsSum","localCellStatisticsVariety","localCellStatisticsMajorityIgnoreND","localCellStatisticsMaxIgnoreND","localCellStatisticsMeanIgnoreND","localCellStatisticsMedianIgnoreND","localCellStatisticsMinIgnoreND","localCellStatisticsMinorityIgnoreND","localCellStatisticsRangeIgnoreND","localCellStatisticsStdDevIgnoreND","localCellStatisticsSumIgnoreND","localCellStatisticsVarietyIgnoreND","localCellStatisticsTypePercentileIgnoreND","remapDefinitionTypes","remapDefTypeList","remapTableTypes","remapTableTypeSimple","remapTableTypeDynamic","remapTableTypeReassignment","gpsaDistanceMethods","geometricCorrectionMethods","geomCorrectionByConstZ","geomCorrectionByDEM","esriRadarCalibrations","radarCalibBetaNought","radarCalibSigmaNought","radarCalibGammaNought","esriSpeckleFilterTypes","speckleFilterTypeLee","speckleFilterTypeEnhancedLee","speckleFilterTypeFrost","speckleFilterTypeKuan","esriSpeckleFilterKernelTypes","esriSpeckleNoiseModelTypes","speckleNoiseModelMul","speckleNoiseModelAdd","speckleNoiseModelAddnMul","esriMosaicOperatorTypes","mosaicOpTypeFirst","mosaicOpTypeLast","mosaicOpTypeMin","mosaicOpTypeMax","mosaicOpTypeMean","mosaicOpTypeBlend","gpsaNibbleValues","gpsaNibbleNoData","esriSwathInterpolationMethods","interpolateIrregularDataBilinear","gpsaOutputDataType","integer","gpsaFlowDirectionType","rfxD8","rfxMFD","dinf","gpsaForceFlow","gpsaFlowDistanceType","vertical","horizontal","gpsaTravelDirections","fromSource","colorspaceConversionTypes","colorspaceConversionRgbToHsv","colorspaceConversionHsvToRgb","pansharpeningTypes","pansharpenTypeIHS","pansharpenTypeBrovey","pansharpenTypeEsri","pansharpenTypeMean","pansharpenTypeGramSchmidt","esriGAFocalStatisticsTypes","esriFocalNeighborhoodTypes","rectangleNeighborhood","circleNeighborhood","annulusNeighborhood","wedgeNeighborhood","irregularNeighborhood","weightNeighborhood","gpsaNumberNeighborCells","four","eight","gpsaZoneConnectivity","within","cross","gpsaAddLink","addLink","noLink","gpsaFlowDistanceStatsType","weightedMean","boolean","esriTransposeBitPatterns","ls8QCBitPatternCirrus","ls8QCBitPatternCloud","ls8QCBitPatternCloudShadow","ls8QCBitPatternDesignatedFill","ls8QCBitPatternDroppedFrame","ls8QCBitPatternSnowIce","ls8QCBitPatternTerrainOcclusion","ls8QCBitPatternVegetation","ls8QCBitPatternWater","gpsaDirectionMeasurementType","downStream","upStream","gpsaOrderMethodType","strahler","shreve","gpsaProcessAsMultidimensionalOptions","currentSlice","allSlices","gpsaExpandMethod","expandDistance","expandMorphological","gpsaSortType","noSort","descend","ascend","spectralProfileFileTypes","spectralProfileFile","trainingFeatureFile","randomDistributionType","randomDistributionTypeUniform","randomDistributionTypeUniformInteger","randomDistributionTypeNormal","randomDistributionTypeExponential","randomDistributionTypePoisson","randomDistributionTypeGamma","randomDistributionTypeBinomial","randomDistributionTypeGeometric","randomDistributionTypeNegativeBinomial","randomGeneratorType","randomGeneratorTypeStandardCRand","randomGeneratorTypeAlgorithmACM599","randomGeneratorTypeMersenneTwister","gpsaAggregationTypes","sumName","medainName","esriTrendAnalysisTypes","trendLinear","trendHarmonic","trendPolynomial","trendMannKendall","trendSeasonalKendall","dimensionDefinitionTypes","dimensionByValue","dimensionByInterval","esriMdimTimeIntervalUnits","esriTimeUnitsHours","esriTimeUnitsDays","esriTimeUnitsWeeks","esriTimeUnitsMonths","esriTimeUnitsYears","esriCycleUnits","esriTrendSeasonlPeriod","esriSegmentDate","segmentBeginning","segmentEnd","esriDetectChangeTypes","latestChange","earliestChange","largestChange","numberOfChanges","longestChange","shortestChange","fastestChange","slowestChange","esriChangeDirection","allChanges","increaseChanges","decreaseChanges","esriRenderTrendTypes","esriComputeChangeMethods","esriComputeChangeMethodDifference","esriComputeChangeMethodRelativeDifference","esriComputeChangeMethodCategorical","esriComputeChangeMethodMultispectralEuclideanDistance","esriComputeChangeMethodMultispectralAngularDifference","esriComputeChangeMethodMultispectralAxisWithBiggestChange","esriComputeChangeKeepMethods","esriComputeChangeKeepAll","esriComputeChangeKeepChangedOnly","esriComputeChangeKeepUnchangedOnly","esriComputeChangeUseColorMethods","esriComputeChangeUseColorAverage","esriComputeChangeUseColorFrom","esriComputeChangeUseColorTo","esriResolveOverlapMethods","mosaicOpTypeSum","sensorTypes","esriGANoDataHandling","dimensionalMovingIgnoreNoData","dimensionalMovingPropagateNoData","dimensionalMovingFillOnlyNoData","esriGADimensionalMovingStatisticsTypes","circularMean","esriInterpolateByDimMethods","factorFunctionLinear","esriFlattenCalibrationTypes","bandCompositeMethods","gpsaCircularCalculation","arithmeticName","circularName","esriSurfaceParameterType","slopeName","aspectName","meanCurvature","profileCurvature","tangentialCurvature","planCurvature","contourGeodesicTorsion","gaussianCurvature","casoratiCurvature","esriLocalSurfaceType","localSurfaceTypeQuadratic","localSurfaceTypeBiquadratic","outputSlopeType","esriLeastCostThresholdMethod","thresholdNoThreshold","thresholdPercentLeastCost","thresholdAccumulativeCost","getEnums","HillshadeFunction","name","rfx","hillshadeName","snippet","hillshadeSnip","description","hillshadeDesc","category","icon","helpID","rasterFunctionArguments","DEM","required","dataType","displayName","rfxArgs","rasterName","hidden","helpTextID","HillshadeType","hillshadeTypeName","defaultValue","domain","enum","editorStateTrigger","active","triggers","inactive","autoRevert","Azimuth","azimuthName","Altitude","altitudeName","SlopeType","slopeTypeName","ZFactor","zFactorName","PSPower","PSPowerName","PSZFactor","PSZFactorName","RemoveEdgeEffect","removeEdgeEffectName","AspectFunction","aspectSnip","aspectDesc","Raster","ColormapFunction","colormapName","colormapSnip","colormapDesc","ColorSchemeType","colorSchemeTypeName","Colormap","ColormapName","ColorRamp","colorRampName","ContrastBrightnessFunction","contrastBrightnessName","contrastBrightnessSnip","contrastBrightnessDesc","ContrastOffset","contrastOffsetName","min","max","BrightnessOffset","brightnessOffsetName","ExtractBandFunction","extractBandName","extractBandSnip","extractBandDesc","Method","methodName","BandNames","bandNamesName","BandWavelengths","bandWavelengthsName","BandIds","bandIdsName","MissingBandAction","missingBandActionName","editorArgumentOverride","overrides","argumentNames","widget","path","helpTextIDs","extractbands_band","extractbands_combination","extractbands_method","GrayscaleFunction","grayscaleName","grayscaleSnip","grayscaleDesc","ConversionParameters","dataTypeAttributes","nBands","cols","displayNames","weightName","conversionParametersName","ShadedReliefFunction","shadedReliefName","shadedReliefSnip","shadedReliefDesc","SlopeFunction","slopeSnip","slopeDesc","DEMName","Zfactor","UnitConversionFunction","unitConversionName","unitConversionSnip","unitConversionDesc","FromUnit","fromUnitName","ToUnit","toUnitName","StretchFunction","stretchName","stretchSnip","stretchDesc","StretchType","rasterTypeName","Min","minName","Max","maxName","MinPercent","minPercentName","MaxPercent","maxPercentName","NumberOfStandardDeviation","numberOfStandardDeviationName","SigmoidStrengthLevel","sigmoidStrengthLevelName","start","count","inc","asc","EstimateStatsHistogram","estimateStatsHistogramName","categoryRefId","DRA","DRAName","Statistics","statisticsName","Histograms","histogramsName","ComputeGamma","computeGammaName","UseGamma","useGammaName","Gamma","gammaName","triggerArguments","RasterCalculatorFunction","rasterCalculatorName","rasterCalculatorSnip","rasterCalculatorDesc","Rasters","rastersName","allowScalar","InputNames","inputNamesName","Expression","expressionName","CellsizeType","cellsizeTypeName","ExtentType","extentTypeName","calculator_rastervariables","ClassifyFunction","classifyName","classifySnip","classifyDesc","ClassifierDefinitionFile","fileExtSupported","classifierDefinitionFileName","Raster2","raster2Name","MaskFunction","maskName","maskSnip","maskDesc","NoDataInterpretation","noDataInterpretationName","NoDataValues","noDataValuesName","IncludedRanges","includedRangesName","minimumName","maximumName","Invert","ColormapToRGBFunction","colormapToRGBName","colormapToRGBSnip","colormapToRGBDesc","UnmappedAsRandomColor","unmappedAsRandomColorName","CurvatureFunction","curvatureName","curvatureSnip","curvatureDesc","CurvatureType","curvatureTypeName","CompositeBandFunction","compositeBandName","compositeBandSnip","compositeBandDesc","TableFunction","tableName","tableSnip","tableDesc","AttributeTableAsRecordSet","attributeTableName","attributetable_raster","ConvolutionFunction","convolutionName","convolutionSnip","convolutionDesc","ConvolutionType","Rows","rowsName","Columns","columnsName","Kernel","kernelName","MirrorEdges","mirrorEdgesName","convolution_type","convolution_kernel","StatisticsHistogramFunction","statisticsHistogramName","statisticsHistogramSnip","statisticsHistogramDesc","WeightedOverlayFunction","weightedOverlayName","weightedOverlaySnip","weightedOverlayDesc","Influences","influencesName","Fields","fieldsName","Remaps","remapsName","EvalFrom","evalFromName","EvalTo","evalToName","weightedoverlay_weightedoverlaytable","weightedoverlay_remaptable","weightedoverlay_scales","WeightedSumFunction","weightedSumName","weightedSumSnip","weightedSumDesc","Weights","weightsName","weightedsum_weightedsumtable","ElevationVoidFillFunction","elevationVoidFillName","elevationVoidFillSnip","elevationVoidFillDesc","ShortRangeIDWRadius","shortRangeIDWRadiusName","MaxVoidWidth","maxVoidWidthName","ContourFunction","contourName","contourSnip","contourDesc","SigmaGaussian","sigmaGaussianName","ContourType","contourTypeName","ZBase","zBaseName","NumberOfContours","numberOfContoursName","ContourInterval","contourIntervalName","NthContourLineInBold","nthContourLineInBoldName","RasterizeFeatureClassFunction","rasterizeFeatureClassName","rasterizeFeatureClassSnip","rasterizeFeatureClassDesc","FeatureClass","featureClassName","ClassIndexField","classIndexFieldName","argumentName","ResolveOverlapMethod","resolveOverlapMethodName","ResampleFunction","resampleName","resampleSnip","resampleDesc","ResamplingType","resamplingTypeName","InputCellsize","inputCellsizeName","OutputCellsize","outputCellsizeName","RegionGrowFunction","regionGrowName","regionGrowSnip","regionGrowDesc","PointFeatureClass","pointFeatureClassName","MaxGrowthRadiusField","maxGrowthRadiusFieldName","SimilarityThresholdField","similarityThresholdFieldName","FillValueField","fillValueFieldName","SegmentMeanShiftFunction","segmentMeanShiftName","segmentMeanShiftSnip","segmentMeanShiftDesc","SpectralDetail","spectralDetailName","SpatialDetail","spatialDetailName","MinNumPixelsPerSegment","minNumPixelsPerSegmentName","BoundariesOnly","boundariesOnlyName","MaxNumPixelsPerSegment","maxNumPixelsPerSegment","StatisticsFunction","statisticsSnip","statisticsDesc","StatisticsType","statisticsTypeName","FillNoDataOnly","fillNoDataOnlyName","VectorFieldFunction","vectorFieldName","vectorFieldSnip","vectorFieldDesc","Raster1","raster1Name","InputDataType","inputDataTypeName","AngleReferenceSystem","angleReferenceSystemName","OutputDataType","outputDataTypeName","InterpolateIrregularDataFunction","interpolateIrregularDataName","interpolateIrregularDataSnip","interpolateIrregularDataDesc","hasZ","inputSamplePointFeatureClassName","ValueField","valueFieldName","RasterInfo","cellSizeName","InterpolationMethod","interpolationMethodName","editorValueTrigger","changedArgs","Radius","radiusName","ReflectanceFunction","reflectanceName","reflectanceSnip","reflectanceDesc","RadianceGainValues","radianceGainValuesName","RadianceBiasValues","radianceBiasValuesName","ReflectanceGainValues","reflectedGainValuesName","ReflectanceBiasValues","reflectedBiasValuesName","SunElevation","sunElevationName","Albedo","albedoName","ScaleFactor","scaleFactorName","Offset","offsetName","ThresholdFunction","thresholdName","thresholdSnip","thresholdDesc","ThresholdType","thresholdTypeName","Thresholds","thresholdsName","ArgStatisticsFunction","argStatisticsName","argStatisticsSnip","argStatisticsDesc","ArgStatisticsType","UndefinedClass","undefinedClassName","MinValue","minValueName","MaxValue","maxValueName","IgnoreNoData","ignoreNoDataName","ArithmeticFunction","arithmeticSnip","arithmeticDesc","Operation","operationName","ClipFunction","clipName","clipSnip","clipDesc","ClippingType","clippingTypeName","ClippingRaster","clippingGeometryName","ClippingGeometry","Extent","extentName","UseInputFeatureGeometry","useInputFeatureGeometryName","clip_clippinggeometryorraster","clip_useinputfeaturesforclippinggeometry","clip_outputextent","RemapFunction","remapName","remapSnip","remapDesc","UseTable","remapDefinitionTypeName","InputRanges","inputRangeName","OutputValues","outputValuesName","NoDataRanges","noDataRangeName","Table","InputField","inputFieldName","OutputField","outputFieldName","InputMaxField","inputMaxFieldName","RemapTableType","remapTableTypeName","AllowUnmatched","changeMissingValuesToNoDataName","reverseDisplayValue","NDVIFunction","ndviName","ndviSnip","ndviDesc","VisibleBandID","visibleBandIDName","InfraredBandID","infraredBandIDName","ScientificOutput","scientificOutputName","BandArithmeticFunction","bandArithmeticName","bandArithmeticSnip","bandArithmeticDesc","BandIndexes","bandIndexesName","bandarithmetic_bandindexes","ConstantFunction","constantName","constantSnip","constantDesc","Constant","rasterInfoName","CostAllocation","costAllocationName","costAllocationSnip","costAllocationDesc","ToolName","PrimaryInputParameterName","OutputRasterParameterName","in_source_data","sourceDataName","source_field","sourceFieldName","in_cost_raster","costRasterName","maximum_distance","maxDistanceName","in_value_raster","valueRasterName","source_cost_multiplier","costMultiplierName","attributes","source_start_cost","startCostName","source_resistance_rate","accumCostResistanceRateName","source_capacity","capacityName","source_direction","travelDirectionName","CostBackLink","costBackLinkName","costBackLinkSnip","costBackLinkDesc","CostDistance","costDistanceName","costDistanceSnip","costDistanceDesc","CostPath","costPathName","costPathSnip","costPathDesc","in_destination_data","destinationDataName","destination_field","destinationFieldName","in_cost_distance_raster","costDistanceRaster","in_cost_backlink_raster","costBacklinkRaster","path_type","pathTypeName","force_flow_direction_convention","forceFlowDirectionConvention","EucAllocation","eucAllocationName","eucAllocationSnip","eucAllocationDesc","in_barrier_data","barrierDataName","cell_size","distance_method","distanceMethodName","EucDistance","eucDistanceName","eucDistanceSnip","eucDistanceDesc","EucDirection","eucDirectionName","eucDirectionSnip","eucDirectionDesc","KernelDensity","kernelDensityName","kernelDensitySnip","kernelDensityDesc","pixelType","bandCount","in_features","population_field","populationFieldName","otherOptions","NONE","search_radius","area_unit_scale_factor","areaUnitsName","out_cell_values","outputValueTypeName","method","in_barriers","barriersName","ShortestPath","shortestPathName","shortestPathSnip","shortestPathDesc","PathDistance","pathDistanceName","pathDistanceSnip","pathDistanceDesc","in_surface_raster","surfaceRasterName","in_horizontal_raster","horizontalRaster","checkValuePresent","horizontal_factor","horizontalFactor","in_vertical_raster","verticalRaster","vertical_factor","verticalFactor","PathBackLink","pathBackLinkName","pathBackLinkSnip","pathBackLinkDesc","PathAllocation","pathAllocationName","pathAllocationSnip","pathAllocationDesc","Viewshed2","viewshed2Name","viewshed2Snip","viewshed2Desc","in_raster","in_observer_features","observerFeaturesName","analysis_method","analysisMethodName","analysis_type","analysisTypeName","vertical_error","verticalErrorName","refractivity_coefficient","refractivityCoefficientName","surface_offset","surfaceOffsetName","observer_elevation","observerElevationName","observer_offset","observerOffsetName","inner_radius","innerRadiusName","inner_radius_is_3d","innerRadiusIs3DDistanceName","outer_radius","outerRadiusName","outer_radius_is_3d","outerRadiusIs3DDistanceName","horizontal_start_angle","horizontalStartAngleName","horizontal_end_angle","horizontalEndAngleName","vertical_upper_angle","verticalUpperAngleName","vertical_lower_angle","verticalLowerAngleName","ZonalStatistics","zonalStatisticsName","zonalStatisticsSnip","zonalStatisticsDesc","in_zone_data","zoneDataName","zone_field","zoneFieldName","statistics_type","percentile_value","percentileValue","percentile_interpolation_type","percentileInterpolationType","circular_calculation","circularCalculation","circular_wrap_value","circularWrapValue","ignore_nodata","process_as_multidimensional","processMultidimensional","triggerAttributes","HeatIndex","heatIndexName","heatIndexSnip","heatIndexDesc","PythonModule","ClassName","temperature","temperatureRasterName","units","inTemperatureUnitsName","rh","relativeHumidityRasterName","outunits","outHeatIndexTemperatureUnitsName","Windchill","windchillName","windchillSnip","windchillDesc","tunits","ws","windSpeedRasterName","wunits","inWindSpeedUnitsName","ounits","outWindChillTemperatureUnitsName","KeyMetadata","keyMetadataName","keyMetadataSnip","keyMetadataDesc","raster","property","propertyName","valueName","bands","json","jsonName","RasterizeAttributes","rasterizeAttributesName","rasterizeAttributesSnip","rasterizeAttributesDesc","vraster","zraster","ztable","zoneTableName","zid","attribs","attributeFieldNames","background","backgroundName","where","whereClauseName","ZonalRemap","zonalRemapName","zonalRemapSnip","zonalRemapDesc","zmin","minimumValueFieldName","zmax","maximumValueFieldName","zval","outValueFieldName","defzval","defaultValueName","AspectSlope","aspectSlopeName","aspectSlopeSnip","aspectSlopeDesc","zf","LocalFunction","nElementsArgument","elementInfos","inputArgs","trueRasterName","falseRasterName","CellStatisticsFunction","cellStatisticsName","cellStatisticsSnip","cellStatisticsDesc","ProcessAsMultiband","processAsMultiband","PercentileValue","PercentileInterpolationType","SpectralConversionFunction","spectralConversionName","spectralConversionSnip","spectralConversionDesc","ConversionMatrix","conversionMatrixName","IsPseudoColorOutput","IsPseudoColorOutputName","spectralconversion_size","Watershed","watershedName","watershedSnip","watershedDesc","in_flow_direction_raster","flowDirRasterName","in_pour_point_data","pourPointName","pour_point_field","pourPointFieldName","GeometricFunction","geometricName","geometricSnip","geometricDesc","UseDEM","ConstantZ","constantZName","ZOffset","zOffsetName","CorrectGeoid","geoIdName","Tolerance","RadarCalibrationFunction","radarCalibrationName","radarCalibrationSnip","radarCalibrationDesc","CalibrationType","calibrationTypeName","S1RadiometricCalibrationFunction","s1RadiometricCalibrationName","s1RadiometricCalibrationSnip","s1RadiometricCalibrationDesc","SpeckleFunction","speckleName","speckleSnip","speckleDesc","FilterType","filterTypeName","FilterSize","filterSizeName","NoiseModel","noiseModelName","NoiseVar","noiseVarianceName","AdditiveNoiseMean","additiveNoiseMeanName","MultiplicativeNoiseMean","multiplicativeNoiseMeanName","NLooks","numberofLooksName","DampFactor","dampingFactorName","MosaicRastersFunction","mosaicRastersName","mosaicRastersSnip","mosaicRastersDesc","MosaicType","Nibble","nibbleName","nibbleSnip","nibbleDesc","in_mask_raster","maskRasterName","nibble_values","nibbleValuesName","nibble_nodata","nibbleNoDataName","in_zone_raster","SwathFunction","swathName","swathSnip","swathDesc","Fill","fillName","fillSnip","fillDesc","z_limit","zLimitName","FlowAccumulation","flowAccumulationName","flowAccumulationSnip","flowAccumulationDesc","in_weight_raster","weightRasterName","data_type","flow_direction_type","flowDirectionTypeName","FlowDirection","flowDirectionName","flowDirectionSnip","flowDirectionDesc","force_flow","forceEdgeName","FlowDistance","flowDistanceName","flowDistanceSnip","flowDistanceDesc","in_stream_raster","streamRasterName","distance_type","distanceTypeName","FlowLength","flowLengthName","flowLengthSnip","flowLengthDesc","flowDirRaster","direction_measurement","directionMeasurementName","MatchVariable","UnionDimension","Corridor","corridorName","corridorSnip","corridorDesc","in_distance_raster1","distanceRaster1","in_distance_raster2","distanceRaster2","StreamLink","streamLinkName","streamLinkSnip","streamLinkDesc","streamRaster","StreamOrder","streamOrderName","streamOrderSnip","streamOrderDesc","order_method","orderMethodName","RegionGroup","regionGroupName","regionGroupSnip","regionGroupDesc","number_neighbors","numberNeighborCells","zone_connectivity","zoneConnectivity","add_link","addLinkBehavior","excluded_value","excludedValue","BufferedRasterFunction","bufferedRasterName","bufferedRasterSnip","bufferedRasterDesc","hasArgumentsObject","ColorspaceConversionFunction","colorspaceConversionName","colorspaceConversionSnip","colorspaceConversionDesc","ConversionType","conversionType","ComplexFunction","complexName","complexSnip","complexDesc","TasseledCapFunction","tasseledCapName","tasseledCapSnip","tasseledCapDesc","RasterInfoFunction","rasterInfoSnip","rasterInfoDesc","Overwrite","RecastFunction","recastName","recastSnip","recastDesc","Arguments","overridesName","LookupFunction","lookupName","lookupSnip","lookupDesc","Field","fieldName","MLClassifyFunction","mlClassifyName","mlClassifySnip","mlClassifyDesc","SignatureFile","signatureFileOrUrl","PansharpeningFunction","pansharpeningName","pansharpeningSnip","pansharpeningDesc","MSImage","multispectralName","PanImage","panchromaticName","PansharpeningType","pansharpeningType","Sensor","sensorName","hasIdColumn","isExtensible","redName","greenName","blueName","infraredName","ReprojectFunction","reprojectName","reprojectSnip","reprojectDesc","SpatialReference","spatialReferenceName","XCellsize","xCellsizeName","YCellsize","yCellsizeName","XOrigin","xOriginName","YOrigin","yOriginName","S1ThermalNoiseRemovalFunction","s1ThermalNoiseRemovalName","s1ThermalNoiseRemovalSnip","s1ThermalNoiseRemovalDesc","FocalFunction","focalName","focalSnip","focalDesc","NeighborhoodType","neighborhoodType","Width","widthName","Height","heightName","InnerRadius","OuterRadius","StartAngle","startAngleName","EndAngle","endAngleName","NeighborhoodValues","neighborhoodValues","StatisticType","Percentile","percentileName","NoDataPolicy","TransposeBitsFunction","transposeBitsName","transposeBitsSnip","transposeBitsDesc","ConstantFillCheck","constantFillCheck","FillRaster","fillRaster","ConstantFillValue","constantFillValue","InputBitPositions","inputBitPositions","OutputBitPositions","outputBitPositions","transposebits_bitpattern","Sink","sinkName","sinkSnip","sinkDesc","SnapPourPoint","snapPourPointName","snapPourPointSnip","snapPourPointDesc","pourPointDataName","in_accumulation_raster","accumulationRasterName","snap_distance","snapDistanceName","EucBackDirection","eucBackDirectionName","eucBackDirectionSnip","eucBackDirectionDesc","DistanceAllocation","distanceAllocationName","distanceAllocationSnip","distanceAllocationDesc","generate_source_location_bands","sourceLocationBands","source_initial_accumulation","initialAccumulation","source_maximum_accumulation","maximumAccumulation","DistanceAccumulation","distanceAccumulationName","distanceAccumulationSnip","distanceAccumulationDesc","generate_back_direction_band","backDirectionBand","Shrink","shrinkName","shrinkSnip","shrinkDesc","number_cells","numberOfCells","zone_values","zoneValues","shrink_method","shrinkMethod","BoundaryClean","boundaryCleanName","boundaryCleanSnip","boundaryCleanDesc","sort_type","sortType","number_of_runs","numberOfRuns","Expand","expandName","expandSnip","expandDesc","expand_method","expandMethod","SpectralUnmixingFunction","spectralUnmixingName","spectralUnmixingSnip","spectralUnmixingDesc","SpectralProfileType","inputSpectralProfileType","SpectralProfileFile","spectralProfileFileName","TrainingFeature","trainingFeatureFileName","NonNegative","nonNegative","SumToOne","sumToOne","RandomFunction","randomName","randomSnip","randomDesc","Distribution","randomDistribution","MinimumUniform","MaximumUniform","MinimumInteger","MaximumInteger","NormalMean","meanName","StandardDeviation","ExponentialMean","Alpha","alphaName","Beta","betaName","N","nName","r","rName","Probability","probabilityName","Seed","seed","GeneratorType","randomNumberGenerator","AggregateFunction","aggregateName","aggregateSnip","aggregateDesc","CellFactor","cellFactor","AggregationType","aggregationType","ExpandHandling","extentHandling","TrendAnalysisFunction","trendAnalysisName","trendAnalysisSnip","trendAnalysisDesc","DimensionName","trendAnalysisDimensionName","RegressionType","trendAnalysisType","CycleLength","cycleLengthName","CycleUnit","cycleUnitName","Frequency","harmonicFrequency","Order","polynomialOrder","RMSE","trendAnalysisRMSE","R2","trendAnalysisR2","SlopePValue","trendAnalysisSlopePValue","SeasonalPeriod","trendAnalysisSeasonalPeriod","TrendFunction","trendName","trendSnip","trendDesc","DimensionDefinitionType","dimensionDefinitionType","DimensionValues","predictDimensionValues","DimensionStart","predictDimensionStart","DimensionEnd","predictDimensionEnd","DimensionInterval","predictDimensionInterval","DimensionUnit","dimensionUnit","MultidimensionalRasterFunction","multidimensionalRasterName","multidimensionalRasterSnip","multidimensionalRasterDesc","Variables","variableName","InterpolationCellsize","interpolationCellsizeName","MultidimensionalFilterFunction","multidimensionalFilterName","multidimensionalFilterSnip","multidimensionalFilterDesc","Filter","variables","dimension","dimensiondefinition","ranges","maximumvalue","minimumvalue","startof","endof","step","unit","Dimensionless","dimensionlessName","DetectChangeFunction","detectChangeName","detectChangeSnip","detectChangeDesc","changeAnalysisRasterName","SegmentDate","segmentDate","ChangeDirection","changeDirectionName","ChangeType","changeTypeName","MaxNumberChanges","maxNumChangesName","FilterByYear","filterByYear","MinimumYear","minimumYear","MaximumYear","maximumYear","FilterByDuration","filterByDuration","MinimumDuration","minimumDuration","MaximumDuration","maximumDuration","FilterByMagnitude","filterByMagnitude","MinimumMagnitude","minimumMagnitude","MaximumMagnitude","maximumMagnitude","FilterByStartValue","filterByStartValue","MinimumStartValue","minimumStartValue","MaximumStartValue","maximumStartValue","FilterByEndValue","filterByEndValue","MinimumEndValue","minimumEndValue","MaximumEndValue","maximumEndValue","changeAnalysisType","isPseudoArg","detectchange_changetype","TrendToRGBFunction","trendToRGBName","trendToRGBSnip","trendToRGBDesc","ModelType","modelTypeName","ComputeChangeFunction","computeChangeName","computeChangeSnip","computeChangeDesc","fromRasterName","toRasterName","computeChangeMethod","FromClassValues","fromClassValues","ToClassValues","toClassValues","FromClassNameFieldName","fromClassNameFieldName","ToClassNameFieldName","toClassNameFieldName","KeepMethod","keepMethod","UseColorMethod","useColorMethod","CCDCFunction","ccdcName","ccdcSnip","ccdcDesc","BandIDs","detectChangeBands","TmaskBandIDs","tmaskBands","ChiSquareProb","chiSquaredThreshold","MinNumberAnomaly","minAnomaly","UpdatingFrequency","updatingFrequency","OptimalPathAsRaster","optimalPathAsRasterName","optimalPathAsRasterSnip","optimalPathAsRasterDesc","in_distance_accumulation_raster","distanceAccumulationRasterName","in_back_direction_raster","costBackdirectionRasterName","RasterCollectionFunction","rasterCollectionName","rasterCollectionSnip","rasterCollectionDesc","RasterCollection","ItemFunction","itemFunctionName","AggregationFunction","aggregationFunctionName","ProcessingFunction","processingFunctionName","WhereClause","AggregationDefinition","dimensionName","keywordinterval","valueinterval","QueryGeometry","queryGeometryName","LandTrendrFunction","landTrendrName","landTrendrSnip","landTrendrDesc","ProcessingBand","processingBandName","SnappingDate","snappingDate","MaxSegments","maxNumSegments","VertexCountOvershoot","vertexCountOvershoot","SpikeThreshold","spikeThreshold","RecoveryThreshold","recoveryThreshold","MinObs","minNumObs","PValueThreshold","pValueThreshold","BestModelProportion","bestModelProportion","PreventOneYearRecovery","preventOneYearRecovery","RecoveryIncreaseTrend","recoveryIncreaseTrend","OutputOtherBands","outputOtherBands","MergeRastersFunction","mergeRastersName","mergeRastersSnip","mergeRastersDesc","mosaicOperator","PredictUsingRegressionFunction","predictUsingRegressionName","predictUsingRegressionSnip","predictUsingRegressionDesc","RegressionDefinitionFile","inputDefinitionFileName","DimensionalMovingStatisticsFunction","dimensionalMovingStatisticsName","dimensionalMovingStatisticsSnip","dimensionalMovingStatisticsDesc","Dimension","BackwardWindow","backwardWindowName","ForwardWindow","forwardWindowName","NoDataHandling","noDataHandlingName","CircularWrapValue","circularWrapValueName","InterpolateRasterByDimensionFunction","interpolateRasterByDimensionFunctionName","interpolateRasterByDimensionFunctionSnip","interpolateRasterByDimensionFunctionDesc","DimensionDefinition","targetraster","TerrainFlattenFunction","terrainFlattenFunctionName","terrainFlattenFunctionSnip","terrainFlattenFunctionDesc","CreateColorCompositeFunction","createColorCompositeFunctionName","createColorCompositeFunctionSnip","createColorCompositeFunctionDesc","BandIndexesR","bandIndexesR","BandIndexesG","bandIndexesG","BandIndexesB","bandIndexesB","SurfaceParamFunction","surfaceParametersName","surfaceParametersSnip","surfaceParametersDesc","SurfaceCalculation","surfaceParameterType","LocalSurface","localSurfaceType","AnalysisScaleWithUnits","neighborhoodDistance","UseAdaptiveScale","useAdaptiveNeighborhood","ZUnit","zUnit","ProjectAzimuths","projectAzimuths","UseEquatorialAspect","useEquatorialAspect","AnalysisMask","analysisMask","LeastCostCorridor","leastCostCorridorName","leastCostCorridorSnip","leastCostCorridorDesc","in_accumulative_cost_distance_raster1","costDistanceRaster1","in_back_direction_raster1","directionRaster1","in_accumulative_cost_distance_raster2","costDistanceRaster2","in_back_direction_raster2","directionRaster2","threshold_method","thresholdMethod","threshold","GeometricMedianFunction","geometricMedianName","geometricMedianSnip","geometricMedianDesc","Epsilon","epsilon","MaxIteration","maxIterations","LOCAL_RFX_OP_INFO_LUT","opName","appConfig","functionTypes","local","gpAdapter","pythonAdapter","cellStatsOperations","commonStrings","getRFxDefinitionProperties","rfxSchema","charAt","slice","prefix","categoryTitle","categoryNames","createRFxDefinition","title","getFunctionType","functionName","getFunctionsAndCategories","sysRFxDefs","sysRFxCategories","schema","rfxSchemaCpy","clone","elmInfos","forEach","elmInfo","opCode","info","add","rfxDefinition","rfxFunctions","sort","a","b","localeCompare","rfxCategories","getCaseInsensitiveArg","argName","args","argKey","find","getArgRFT","getFunctionSchema","rfxTemplate","function","functionType","widgetName","operation","operationValue","localOp","op","toolNameArg","classname","getFunctionName","hasRasterElements","elements","isDataset","shouldHonorIsPublic","aliases","checkRFxArg","isPublic","some","rfxArgRFT","rfxArgName","containsArgName","argNameArr","activeArg","canBuildArgRFTUI","hasRFTElements","createHelpTemplate","content","dir","defineProperty","reIsUint","isIndex","baseAssignValue","configurable","enumerable","writable","eq","other","assignValue","objValue","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","n","iteratee","index","baseTimes","String","baseKeysIn","nativeKeysIn","isProto","nativeCreate","Hash","entries","this","clear","entry","set","assocIndexOf","array","__data__","has","get","data","ListCache","getMapData","map","MapCache","pop","hash","string","Uint8Array","symbolProto","identity","apply","thisArg","nativeNow","Date","now","assigner","baseSetToString","setToString","lastCalled","stamp","remaining","shortOut","nativeMax","Math","baseRest","otherArgs","overRest","source","srcIndex","customizer","props","isNew","newValue","copyObject","keysIn","sources","guard","isIterateeCall","message","isError","Error","valueOf","memoize","resolver","TypeError","memoized","cache","Cache","rePropName","reEscapeChar","getLayerUrlWithoutToken","memoizeCapped","charCodeAt","number","quote","subString","e$9","transparent","black","silver","gray","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","aliceblue","antiquewhite","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","limegreen","linen","magenta","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","oldlace","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","n$4","l","n$3","r$7","t","o$7","a$6","s$7","c$7","i$6","f$4","l$3","_$2","O$3","b$4","freeze","__proto__","ONES","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","create","createView","Float64Array","fromArray","fromValues","ones","unitX","unitY","unitZ","zeros","t$2","a$5","n$2","random","o$6","PI","s$6","s$5","s","sqrt","r$5","e$6","c$5","i$5","x$3","p$2","v$2","z$2","o","P$1","RANDOM","equals","abs","getEpsilon","setEpsilon","toDegree","toRadian","w$1","B$2","J","K","U","X","Y","Z","o$4","u$3","e$5","d$1","b$2","x$2","q","angle","acos","bezier","u","c","i","h","M","f","ceil","copy","direction","dist","distance","div","divide","dot","exactEquals","floor","hermite","inverse","len","lerp","mul","multiply","negate","normalize","cos","sin","rotateX","rotateY","rotateZ","round","scale","scaleAndAdd","sign","sqrDist","sqrLen","squaredDistance","squaredLength","str","sub","subtract","transformMat3","transformMat4","transformQuat","m","d","L","O$1","S","k$1","B$1","C","F","u$2","Float32Array","g$1","BYTES_PER_ELEMENT","I","BigInt","e$4","globalThis","a$2","r$3","t$1","u$1","o$3","c$3","e$3","a$3","i$2","f$1","getTime","byteLength","O","y$1","m$1","notifyChange","watch","b$1","getOwnPropertyNames","i$1","reduce","concat","setFloat64","getBigInt64","E","setBigInt64","getFloat64","B","x$1","dojoConfig","esriConfig","WorkerGlobalScope","location","versions","node","v8","userAgent","appVersion","parseFloat","$1","replaceAll","geolocation","crossOriginIsolated","WebAssembly","validate","Number","Image","src","decode","then","catch","createElement","href","r$2","analysisTheme","accentColor","textColor","apiKey","applicationName","applicationUrl","assetsPath","fontsUrl","geometryServiceUrl","geoRSSServiceUrl","kmlServiceUrl","userPrivilegesApplied","portalUrl","routeServiceUrl","workers","loaderConfig","paths","packages","request","crossOriginNoCorsDomains","httpsDomains","interceptors","maxUrlLength","priority","proxyRules","proxyUrl","timeout","trustedServers","useIdentity","log","level","n$1","defaultAssetsPath","r$1","warn","error","s$3","_module","_parent","writer","_loggedMessages","_loggers","lastIndexOf","getLogger","parent","_log","errorOnce","warnOnce","infoOnce","errorOncePerTick","warnOncePerTick","infoOncePerTick","loggedMessages","clearLoggedWarnings","resetLoggers","throttlingDisabled","_throttlingDisabled","static","declaredClass","_matchLevel","_argsToKey","_tickCounter","_scheduleTickCounterIncrement","_inheritedWriter","_parentWithMember","_consoleWriter","console","c$1","JSON","stringify","_tickCounterScheduled","a$1","i$3","e$1","isNaN","o$1","g","_sanitize","o$8","substr","_set","l$4","fromRgb","fromHex","setColor","isBright","fromString","toRgb","toRgba","toHex","toCss","toJSON","toArray","AlphaMode","ALWAYS","UNLESS_OPAQUE","ignoreUnknown","useNumericKeys","_jsonToAPI","_options","apiValues","jsonValues","_apiToJSON","_invertMap","_getKeysSorted","read","fromJSON","write","e$2","o$2","isJSONMapWriter","Aspect","Distance","Errors","Precipitation","Prediction","Slope","Surface","Temperature","getRFTJson","esriRequest","query","allocUnsafe","getRasterParamDisplayValue","param","rfxArgsStrings","paramValue","paramDisplayValue","outputRaster","getRasterArrayParamDisplayValue","from","getRFxParamDisplayValue","schemaArg","DATA_TYPES","true","false","Name","custom","getColorRampParamDisplayValue","getFeatureClassParamDisplayValue","enumData","enumElement","enumOption","DOMAIN_TYPES","getLocalizedRFTParamListJSON","honorIsPublic","translatedKeys","translatedJobParams","paramList","rfxTemplateArgKey","rfxTemplateArg","getRFTParamList","indexesToSplice","argRFT","translatedArgRFTKeys","translatedArgRFTJobParams","spliceIndex","functionSchemaArgs","activeStateParamList","paramsToHide","argValue","isStateTriggerAcive","trigger","isActive","isInactive","hideParam","isInTriggerValue","_param","filter","getActiveStateParamList","publicParamList","rftParamList","getPublicParamList","localOperationValue","paramName","isLocalFunctionRasters","paramDisplayName","elementInfo","getLocalRasterParamDisplayName","getRFxParamDisplayName","isMap","isSet","TILED","DYNAMIC","rfxName","portal","helpTemplate","learnMoreUrl","functionIdentifier","helpBase","sourceJSON","isRFT","isHistoryItem","sourceItemId","functionArguments","specialCaseMap","pyClassName","toolNameValue","sc","getRFTFunctionIdentifier","functionDescription","portalItemURL","rfxFunction","getRfxFunctionByName","functionHelpID","helpId","outputRasterHelpTexts","rftId","portalItem","PortalItem","id","load","isXML","item","format","isXMLTemplateItem","rftItem","convertRFTParams","inputRasterFunction","itemId","rasterUtilitiesServer","helperServices","rasterUtilitiesHelperServiceFromPortal","rasterUtilities","getConvertRFTHelperService","jobInfo","geoprocessor","submitJob","options","interval","statusCallback","j","jobStatus","waitForJobCompletion","dataFile","fetchResultData","getConvertRFTToJson","itemDataUrl","itemUrl","translatedRFTNamesMap","outputName","rfxArgsEditorStrings","rasterFunctionEditor","rfxArgsEditor","mainGenStrings","translatedOutputNameKeys","translatedOutputNameJobParams","outputNameObj","parse","serviceProperties","itemProperties","outputType","outputLayerType","capabilities","dynamicImageryLayer","tiledImageryLayer","saveInFolder","folderId","getTranslatedOutputName","newMapLayers","oldMapLayers","changedMapLayer","array1","array2","uniqueResultOne","obj","obj2","uniqueResultTwo","arrayDifference","layer"],"mappings":"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BACLC,MAAO,cAET,CACED,IAAK,QACLC,MAAO,mBAET,CACED,IAAK,YACLC,MAAO,aAxFAF,GA4Fc,CACvB,CACEC,IAAK,EACLE,MAAO,eAET,CACEF,IAAK,EACLE,MAAO,QAET,CACEF,IAAK,EACLE,MAAO,QAET,CACEF,IAAK,EACLE,MAAO,QAET,CACEF,IAAK,EACLE,MAAO,SAET,CACEF,IAAK,GACLE,MAAO,OAET,CACEF,IAAK,GACLE,MAAO,eAET,CACEF,IAAK,GACLE,MAAO,eAET,CACEF,IAAK,GACLE,MAAO,OAET,CACEF,IAAK,GACLE,MAAO,QAET,CACEF,IAAK,GACLE,MAAO,OAET,CACEF,IAAK,GACLE,MAAO,SAET,CACEF,IAAK,GACLE,MAAO,QAET,CACEF,IAAK,GACLE,MAAO,OAET,CACEF,IAAK,GACLE,MAAO,WAET,CACEF,IAAK,GACLE,MAAO,SAET,CACEF,IAAK,GACLE,MAAO,MAET,CACEF,IAAK,GACLE,MAAO,SAET,CACEF,IAAK,GACLE,MAAO,QAET,CACEF,IAAK,GACLE,MAAO,UAET,CACEF,IAAK,GACLE,MAAO,cAET,CACEF,IAAK,GACLE,MAAO,YAET,CACEF,IAAK,GACLE,MAAO,OAET,CACEF,IAAK,GACLE,MAAO,QAET,CACEF,IAAK,GACLE,MAAO,UAET,CACEF,IAAK,GACLE,MAAO,OAET,CACEF,IAAK,GACLE,MAAO,QAET,CACEF,IAAK,GACLE,MAAO,SAET,CACEF,IAAK,GACLE,MAAO,SAET,CACEF,IAAK,EACLE,MAAO,QAET,CACEF,IAAK,EACLE,MAAO,SAET,CACEF,IAAK,EACLE,MAAO,SAET,CACEF,IAAK,EACLE,MAAO,SAET,CACEF,IAAK,GACLE,MAAO,eAET,CACEF,IAAK,GACLE,MAAO,sBAET,CACEF,IAAK,GACLE,MAAO,cAET,CACEF,IAAK,GACLE,MAAO,uBAET,CACEF,IAAK,GACLE,MAAO,eAET,CACEF,IAAK,GACLE,MAAO,eAET,CACEF,IAAK,GACLE,MAAO,cAET,CACEF,IAAK,GACLE,MAAO,eAET,CACEF,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"}