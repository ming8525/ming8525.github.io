{"version":3,"file":"index.js","sources":["../../../../node_modules/lodash-es/_freeGlobal.js","../../../../node_modules/lodash-es/_root.js","../../../../node_modules/lodash-es/_Symbol.js","../../../../node_modules/lodash-es/_getRawTag.js","../../../../node_modules/lodash-es/_objectToString.js","../../../../node_modules/lodash-es/_baseGetTag.js","../../../../node_modules/lodash-es/isObjectLike.js","../../../../node_modules/lodash-es/isSymbol.js","../../../../node_modules/lodash-es/_arrayMap.js","../../../../node_modules/lodash-es/isArray.js","../../../../node_modules/lodash-es/_baseToString.js","../../../../node_modules/lodash-es/isObject.js","../../../../node_modules/lodash-es/identity.js","../../../../node_modules/lodash-es/isFunction.js","../../../../node_modules/lodash-es/_coreJsData.js","../../../../node_modules/lodash-es/_isMasked.js","../../../../node_modules/lodash-es/_toSource.js","../../../../node_modules/lodash-es/_baseIsNative.js","../../../../node_modules/lodash-es/_getNative.js","../../../../node_modules/lodash-es/_getValue.js","../../../../node_modules/lodash-es/_WeakMap.js","../../../../node_modules/lodash-es/_baseCreate.js","../../../../node_modules/lodash-es/_apply.js","../../../../node_modules/lodash-es/_copyArray.js","../../../../node_modules/lodash-es/_shortOut.js","../../../../node_modules/lodash-es/constant.js","../../../../node_modules/lodash-es/_defineProperty.js","../../../../node_modules/lodash-es/_baseSetToString.js","../../../../node_modules/lodash-es/_setToString.js","../../../../node_modules/lodash-es/_baseIsNaN.js","../../../../node_modules/lodash-es/_arrayIncludes.js","../../../../node_modules/lodash-es/_baseIndexOf.js","../../../../node_modules/lodash-es/_strictIndexOf.js","../../../../node_modules/lodash-es/_baseFindIndex.js","../../../../node_modules/lodash-es/_isIndex.js","../../../../node_modules/lodash-es/_baseAssignValue.js","../../../../node_modules/lodash-es/eq.js","../../../../node_modules/lodash-es/_assignValue.js","../../../../node_modules/lodash-es/_copyObject.js","../../../../node_modules/lodash-es/_overRest.js","../../../../node_modules/lodash-es/_baseRest.js","../../../../node_modules/lodash-es/isLength.js","../../../../node_modules/lodash-es/isArrayLike.js","../../../../node_modules/lodash-es/_isIterateeCall.js","../../../../node_modules/lodash-es/_createAssigner.js","../../../../node_modules/lodash-es/_isPrototype.js","../../../../node_modules/lodash-es/_baseIsArguments.js","../../../../node_modules/lodash-es/isArguments.js","../../../../node_modules/lodash-es/isBuffer.js","../../../../node_modules/lodash-es/stubFalse.js","../../../../node_modules/lodash-es/_baseIsTypedArray.js","../../../../node_modules/lodash-es/_baseUnary.js","../../../../node_modules/lodash-es/_nodeUtil.js","../../../../node_modules/lodash-es/isTypedArray.js","../../../../node_modules/lodash-es/_arrayLikeKeys.js","../../../../node_modules/lodash-es/_baseTimes.js","../../../../node_modules/lodash-es/_overArg.js","../../../../node_modules/lodash-es/_nativeKeys.js","../../../../node_modules/lodash-es/_baseKeys.js","../../../../node_modules/lodash-es/keys.js","../../../../node_modules/lodash-es/assign.js","../../../../node_modules/lodash-es/_baseKeysIn.js","../../../../node_modules/lodash-es/_nativeKeysIn.js","../../../../node_modules/lodash-es/keysIn.js","../../../../node_modules/lodash-es/assignInWith.js","../../../../node_modules/lodash-es/_isKey.js","../../../../node_modules/lodash-es/_nativeCreate.js","../../../../node_modules/lodash-es/_hashGet.js","../../../../node_modules/lodash-es/_hashHas.js","../../../../node_modules/lodash-es/_Hash.js","../../../../node_modules/lodash-es/_assocIndexOf.js","../../../../node_modules/lodash-es/_hashClear.js","../../../../node_modules/lodash-es/_hashDelete.js","../../../../node_modules/lodash-es/_hashSet.js","../../../../node_modules/lodash-es/_listCacheDelete.js","../../../../node_modules/lodash-es/_ListCache.js","../../../../node_modules/lodash-es/_listCacheClear.js","../../../../node_modules/lodash-es/_listCacheGet.js","../../../../node_modules/lodash-es/_listCacheHas.js","../../../../node_modules/lodash-es/_listCacheSet.js","../../../../node_modules/lodash-es/_Map.js","../../../../node_modules/lodash-es/_getMapData.js","../../../../node_modules/lodash-es/_isKeyable.js","../../../../node_modules/lodash-es/_MapCache.js","../../../../node_modules/lodash-es/_mapCacheClear.js","../../../../node_modules/lodash-es/_mapCacheDelete.js","../../../../node_modules/lodash-es/_mapCacheGet.js","../../../../node_modules/lodash-es/_mapCacheHas.js","../../../../node_modules/lodash-es/_mapCacheSet.js","../../../../node_modules/lodash-es/memoize.js","../../../../node_modules/lodash-es/_stringToPath.js","../../../../node_modules/lodash-es/_memoizeCapped.js","../../../../node_modules/lodash-es/toString.js","../../../../node_modules/lodash-es/_castPath.js","../../../../node_modules/lodash-es/_toKey.js","../../../../node_modules/lodash-es/_baseGet.js","../../../../node_modules/lodash-es/get.js","../../../../node_modules/lodash-es/_arrayPush.js","../../../../node_modules/lodash-es/_isFlattenable.js","../../../../node_modules/lodash-es/_baseFlatten.js","../../../../node_modules/lodash-es/flatten.js","../../../../node_modules/lodash-es/_flatRest.js","../../../../node_modules/lodash-es/_getPrototype.js","../../../../node_modules/lodash-es/isPlainObject.js","../../../../node_modules/lodash-es/isError.js","../../../../node_modules/lodash-es/attempt.js","../../../../node_modules/lodash-es/_Stack.js","../../../../node_modules/lodash-es/_stackClear.js","../../../../node_modules/lodash-es/_stackDelete.js","../../../../node_modules/lodash-es/_stackGet.js","../../../../node_modules/lodash-es/_stackHas.js","../../../../node_modules/lodash-es/_stackSet.js","../../../../node_modules/lodash-es/_cloneBuffer.js","../../../../node_modules/lodash-es/stubArray.js","../../../../node_modules/lodash-es/_getSymbols.js","../../../../node_modules/lodash-es/_arrayFilter.js","../../../../node_modules/lodash-es/_getSymbolsIn.js","../../../../node_modules/lodash-es/_baseGetAllKeys.js","../../../../node_modules/lodash-es/_getAllKeys.js","../../../../node_modules/lodash-es/_getAllKeysIn.js","../../../../node_modules/lodash-es/_DataView.js","../../../../node_modules/lodash-es/_Promise.js","../../../../node_modules/lodash-es/_Set.js","../../../../node_modules/lodash-es/_getTag.js","../../../../node_modules/lodash-es/_initCloneArray.js","../../../../node_modules/lodash-es/_Uint8Array.js","../../../../node_modules/lodash-es/_cloneArrayBuffer.js","../../../../node_modules/lodash-es/_cloneRegExp.js","../../../../node_modules/lodash-es/_cloneSymbol.js","../../../../node_modules/lodash-es/_initCloneByTag.js","../../../../node_modules/lodash-es/_cloneDataView.js","../../../../node_modules/lodash-es/_cloneTypedArray.js","../../../../node_modules/lodash-es/isMap.js","../../../../node_modules/lodash-es/_baseIsMap.js","../../../../node_modules/lodash-es/isSet.js","../../../../node_modules/lodash-es/_baseIsSet.js","../../../../node_modules/lodash-es/_baseClone.js","../../../../node_modules/lodash-es/_initCloneObject.js","../../../../node_modules/lodash-es/_copySymbolsIn.js","../../../../node_modules/lodash-es/_baseAssignIn.js","../../../../node_modules/lodash-es/_copySymbols.js","../../../../node_modules/lodash-es/_baseAssign.js","../../../../node_modules/lodash-es/_arrayEach.js","../../../../node_modules/lodash-es/_SetCache.js","../../../../node_modules/lodash-es/_arraySome.js","../../../../node_modules/lodash-es/_cacheHas.js","../../../../node_modules/lodash-es/_setCacheAdd.js","../../../../node_modules/lodash-es/_setCacheHas.js","../../../../node_modules/lodash-es/_equalArrays.js","../../../../node_modules/lodash-es/_mapToArray.js","../../../../node_modules/lodash-es/_setToArray.js","../../../../node_modules/lodash-es/_equalByTag.js","../../../../node_modules/lodash-es/_equalObjects.js","../../../../node_modules/lodash-es/_baseIsEqualDeep.js","../../../../node_modules/lodash-es/_baseIsEqual.js","../../../../node_modules/lodash-es/_isStrictComparable.js","../../../../node_modules/lodash-es/_matchesStrictComparable.js","../../../../node_modules/lodash-es/_baseMatches.js","../../../../node_modules/lodash-es/_getMatchData.js","../../../../node_modules/lodash-es/_baseIsMatch.js","../../../../node_modules/lodash-es/_baseHasIn.js","../../../../node_modules/lodash-es/hasIn.js","../../../../node_modules/lodash-es/_hasPath.js","../../../../node_modules/lodash-es/property.js","../../../../node_modules/lodash-es/_baseProperty.js","../../../../node_modules/lodash-es/_basePropertyDeep.js","../../../../node_modules/lodash-es/_baseIteratee.js","../../../../node_modules/lodash-es/_baseMatchesProperty.js","../../../../node_modules/lodash-es/_baseFor.js","../../../../node_modules/lodash-es/_createBaseFor.js","../../../../node_modules/lodash-es/isArrayLikeObject.js","../../../../node_modules/lodash-es/_arrayIncludesWith.js","../../../../node_modules/lodash-es/last.js","../../../../node_modules/lodash-es/_escapeHtmlChar.js","../../../../node_modules/lodash-es/_basePropertyOf.js","../../../../node_modules/lodash-es/escape.js","../../../../node_modules/lodash-es/_baseIntersection.js","../../../../node_modules/lodash-es/_castArrayLikeObject.js","../../../../node_modules/lodash-es/intersectionBy.js","../../../../node_modules/lodash-es/_parent.js","../../../../node_modules/lodash-es/_baseSlice.js","../../../../node_modules/lodash-es/isEmpty.js","../../../../node_modules/lodash-es/isEqual.js","../../../../node_modules/lodash-es/mapValues.js","../../../../node_modules/lodash-es/_baseForOwn.js","../../../../node_modules/lodash-es/_baseUnset.js","../../../../node_modules/lodash-es/_customOmitClone.js","../../../../node_modules/lodash-es/omit.js","../../../../node_modules/lodash-es/_baseSet.js","../../../../node_modules/lodash-es/_basePickBy.js","../../../../node_modules/lodash-es/pickBy.js","../../../../node_modules/lodash-es/omitBy.js","../../../../node_modules/lodash-es/negate.js","../../../../node_modules/lodash-es/pick.js","../../../../node_modules/lodash-es/_basePick.js","../../../../node_modules/lodash-es/set.js","../../../../node_modules/lodash-es/_customDefaultsAssignIn.js","../../../../node_modules/lodash-es/_escapeStringChar.js","../../../../node_modules/lodash-es/_reInterpolate.js","../../../../node_modules/lodash-es/templateSettings.js","../../../../node_modules/lodash-es/_reEscape.js","../../../../node_modules/lodash-es/_reEvaluate.js","../../../../node_modules/lodash-es/template.js","../../../../node_modules/lodash-es/_baseValues.js","../../../../node_modules/lodash-es/_createSet.js","../../../../node_modules/lodash-es/noop.js","../../../../node_modules/lodash-es/_baseUniq.js","../../../../node_modules/lodash-es/unionBy.js","../../src/inputs/interfaces.ts","../../src/common/index.ts","../../src/localization/interfaces.ts","../../src/localization/index.ts","../../src/errors/index.ts","../../src/errors/interfaces.ts","../../../../node_modules/ext/global-this/is-implemented.js","../../../../node_modules/ext/global-this/implementation.js","../../../../node_modules/ext/global-this/index.js","../../../../node_modules/es6-symbol/is-implemented.js","../../../../node_modules/d/node_modules/type/value/is.js","../../../../node_modules/d/node_modules/type/object/is.js","../../../../node_modules/d/node_modules/type/prototype/is.js","../../../../node_modules/d/node_modules/type/function/is.js","../../../../node_modules/d/node_modules/type/plain-function/is.js","../../../../node_modules/es5-ext/object/is-value.js","../../../../node_modules/es5-ext/object/keys/shim.js","../../../../node_modules/es5-ext/object/keys/index.js","../../../../node_modules/es5-ext/object/keys/is-implemented.js","../../../../node_modules/es5-ext/object/valid-value.js","../../../../node_modules/es5-ext/object/assign/shim.js","../../../../node_modules/es5-ext/object/assign/index.js","../../../../node_modules/es5-ext/object/assign/is-implemented.js","../../../../node_modules/es5-ext/object/normalize-options.js","../../../../node_modules/es5-ext/string/#/contains/is-implemented.js","../../../../node_modules/es5-ext/string/#/contains/shim.js","../../../../node_modules/es5-ext/string/#/contains/index.js","../../../../node_modules/d/index.js","../../../../node_modules/es6-symbol/polyfill.js","../../../../node_modules/es6-symbol/validate-symbol.js","../../../../node_modules/es6-symbol/is-symbol.js","../../../../node_modules/es6-symbol/lib/private/generate-name.js","../../../../node_modules/es6-symbol/lib/private/setup/standard-symbols.js","../../../../node_modules/es6-symbol/lib/private/setup/symbol-registry.js","../../../../node_modules/es6-symbol/index.js","../../../../node_modules/tokenize-this/TokenizeThis.js","../../../../node_modules/sql-where-parser/SqlWhereParser.js","../../../analysis-ui-schema/src/analysis-tool-param-direction.ts","../../../analysis-ui-schema/src/analysis-tool-param.ts","../../../analysis-ui-schema/src/analysis-tool-ui-rule.ts","../../../analysis-ui-schema/src/analysis-tool-data.ts","../../src/interfaces.ts","../../src/schema/interfaces.ts","../../src/schema/history-versioning.ts","../../src/schema/index.ts","../../../../node_modules/fast-memoize/src/index.js","../../src/tools/batch-geocode-helpers.ts","../../src/tools/common.ts","../../src/t9n/errors/interfaces.ts","../../src/t9n/errors/index.ts","../../src/query/index.ts","../../src/storage/item-resource.ts","../../src/storage/session-storage.ts","../../src/storage/cache.ts","../../src/tools/geoenrich-helpers.ts","../../src/feature-layer/index.ts","../../src/tools/layer.ts","../../src/tools/gp-layer.ts","../../src/tools/error.ts","../../src/tools/history.ts","../../src/serialization/interfaces.ts","../../src/serialization/utils.ts","../../src/serialization/index.ts","../../src/tools/interfaces.ts","../../src/tools/tool-ui-helpers.ts","../../src/tools/jobs.ts","../../src/tools/process-info.ts","../../src/tools/results.ts","../../src/imagery-layer/index.ts","../../src/access/index.ts","../../src/data/index.ts","../../src/spatial-reference/spatial-references.ts","../../src/spatial-reference/index.ts","../../src/portal/index.ts","../../src/ui/index.ts","../../../analysis-ui-schema/src/analysis-tool-ui.ts","../../src/tools/access.ts","../../src/storage/combined.ts","../../src/inputs/index.ts","../../src/sql/index.ts","../../../../node_modules/lodash-es/cloneDeep.js","../../../../node_modules/lodash-es/toPath.js","../../../../node_modules/lodash-es/uniqWith.js"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n\nexport default assignInWith;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/** `Object#toString` result references. */\nvar domExcTag = '[object DOMException]',\n    errorTag = '[object Error]';\n\n/**\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n * `SyntaxError`, `TypeError`, or `URIError` object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n * @example\n *\n * _.isError(new Error);\n * // => true\n *\n * _.isError(Error);\n * // => false\n */\nfunction isError(value) {\n  if (!isObjectLike(value)) {\n    return false;\n  }\n  var tag = baseGetTag(value);\n  return tag == errorTag || tag == domExcTag ||\n    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n}\n\nexport default isError;\n","import apply from './_apply.js';\nimport baseRest from './_baseRest.js';\nimport isError from './isError.js';\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Function} func The function to attempt.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = baseRest(function(func, args) {\n  try {\n    return apply(func, undefined, args);\n  } catch (e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nexport default attempt;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n","import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n","import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n","import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n","import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n","import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n","import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import basePropertyOf from './_basePropertyOf.js';\n\n/** Used to map characters to HTML entities. */\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\n/**\n * Used by `_.escape` to convert characters to HTML entities.\n *\n * @private\n * @param {string} chr The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nvar escapeHtmlChar = basePropertyOf(htmlEscapes);\n\nexport default escapeHtmlChar;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default basePropertyOf;\n","import escapeHtmlChar from './_escapeHtmlChar.js';\nimport toString from './toString.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reUnescapedHtml = /[&<>\"']/g,\n    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n *\n * **Note:** No other characters are escaped. To escape additional\n * characters use a third-party library like [_he_](https://mths.be/he).\n *\n * Though the \">\" character is escaped for symmetry, characters like\n * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n * unless they're part of a tag or unquoted attribute value. See\n * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n * (under \"semi-related fun fact\") for more details.\n *\n * When working with HTML you should always\n * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n * XSS vectors.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escape('fred, barney, & pebbles');\n * // => 'fred, barney, &amp; pebbles'\n */\nfunction escape(string) {\n  string = toString(string);\n  return (string && reHasUnescapedHtml.test(string))\n    ? string.replace(reUnescapedHtml, escapeHtmlChar)\n    : string;\n}\n\nexport default escape;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseIntersection;\n","import isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nexport default castArrayLikeObject;\n","import arrayMap from './_arrayMap.js';\nimport baseIntersection from './_baseIntersection.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport castArrayLikeObject from './_castArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.intersection` except that it accepts `iteratee`\n * which is invoked for each element of each `arrays` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [2.1]\n *\n * // The `_.property` iteratee shorthand.\n * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }]\n */\nvar intersectionBy = baseRest(function(arrays) {\n  var iteratee = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  if (iteratee === last(mapped)) {\n    iteratee = undefined;\n  } else {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, baseIteratee(iteratee, 2))\n    : [];\n});\n\nexport default intersectionBy;\n","import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n","import isPlainObject from './isPlainObject.js';\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nexport default customOmitClone;\n","import arrayMap from './_arrayMap.js';\nimport baseClone from './_baseClone.js';\nimport baseUnset from './_baseUnset.js';\nimport castPath from './_castPath.js';\nimport copyObject from './_copyObject.js';\nimport customOmitClone from './_customOmitClone.js';\nimport flatRest from './_flatRest.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nexport default omit;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseIteratee from './_baseIteratee.js';\nimport negate from './negate.js';\nimport pickBy from './pickBy.js';\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nexport default omitBy;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n","import eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n * of source objects to the destination object for all destination properties\n * that resolve to `undefined`.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to assign.\n * @param {Object} object The parent object of `objValue`.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsAssignIn(objValue, srcValue, key, object) {\n  if (objValue === undefined ||\n      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n    return srcValue;\n  }\n  return objValue;\n}\n\nexport default customDefaultsAssignIn;\n","/** Used to escape characters for inclusion in compiled string literals. */\nvar stringEscapes = {\n  '\\\\': '\\\\',\n  \"'\": \"'\",\n  '\\n': 'n',\n  '\\r': 'r',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\n/**\n * Used by `_.template` to escape characters for inclusion in compiled string literals.\n *\n * @private\n * @param {string} chr The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nfunction escapeStringChar(chr) {\n  return '\\\\' + stringEscapes[chr];\n}\n\nexport default escapeStringChar;\n","/** Used to match template delimiters. */\nvar reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\nexport default reInterpolate;\n","import escape from './escape.js';\nimport reEscape from './_reEscape.js';\nimport reEvaluate from './_reEvaluate.js';\nimport reInterpolate from './_reInterpolate.js';\n\n/**\n * By default, the template delimiters used by lodash are like those in\n * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n * following template settings to use alternative delimiters.\n *\n * @static\n * @memberOf _\n * @type {Object}\n */\nvar templateSettings = {\n\n  /**\n   * Used to detect `data` property values to be HTML-escaped.\n   *\n   * @memberOf _.templateSettings\n   * @type {RegExp}\n   */\n  'escape': reEscape,\n\n  /**\n   * Used to detect code to be evaluated.\n   *\n   * @memberOf _.templateSettings\n   * @type {RegExp}\n   */\n  'evaluate': reEvaluate,\n\n  /**\n   * Used to detect `data` property values to inject.\n   *\n   * @memberOf _.templateSettings\n   * @type {RegExp}\n   */\n  'interpolate': reInterpolate,\n\n  /**\n   * Used to reference the data object in the template text.\n   *\n   * @memberOf _.templateSettings\n   * @type {string}\n   */\n  'variable': '',\n\n  /**\n   * Used to import variables into the compiled template.\n   *\n   * @memberOf _.templateSettings\n   * @type {Object}\n   */\n  'imports': {\n\n    /**\n     * A reference to the `lodash` function.\n     *\n     * @memberOf _.templateSettings.imports\n     * @type {Function}\n     */\n    '_': { 'escape': escape }\n  }\n};\n\nexport default templateSettings;\n","/** Used to match template delimiters. */\nvar reEscape = /<%-([\\s\\S]+?)%>/g;\n\nexport default reEscape;\n","/** Used to match template delimiters. */\nvar reEvaluate = /<%([\\s\\S]+?)%>/g;\n\nexport default reEvaluate;\n","import assignInWith from './assignInWith.js';\nimport attempt from './attempt.js';\nimport baseValues from './_baseValues.js';\nimport customDefaultsAssignIn from './_customDefaultsAssignIn.js';\nimport escapeStringChar from './_escapeStringChar.js';\nimport isError from './isError.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keys from './keys.js';\nimport reInterpolate from './_reInterpolate.js';\nimport templateSettings from './templateSettings.js';\nimport toString from './toString.js';\n\n/** Error message constants. */\nvar INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n/** Used to match empty string literals in compiled template source. */\nvar reEmptyStringLeading = /\\b__p \\+= '';/g,\n    reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n    reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n/**\n * Used to validate the `validate` option in `_.template` variable.\n *\n * Forbids characters which could potentially change the meaning of the function argument definition:\n * - \"(),\" (modification of function parameters)\n * - \"=\" (default value)\n * - \"[]{}\" (destructuring of function parameters)\n * - \"/\" (beginning of a comment)\n * - whitespace\n */\nvar reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n/**\n * Used to match\n * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n */\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n/** Used to ensure capturing order of template delimiters. */\nvar reNoMatch = /($^)/;\n\n/** Used to match unescaped characters in compiled string literals. */\nvar reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a compiled template function that can interpolate data properties\n * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n * properties may be accessed as free variables in the template. If a setting\n * object is given, it takes precedence over `_.templateSettings` values.\n *\n * **Note:** In the development build `_.template` utilizes\n * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n * for easier debugging.\n *\n * For more information on precompiling templates see\n * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n *\n * For more information on Chrome extension sandboxes see\n * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The template string.\n * @param {Object} [options={}] The options object.\n * @param {RegExp} [options.escape=_.templateSettings.escape]\n *  The HTML \"escape\" delimiter.\n * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n *  The \"evaluate\" delimiter.\n * @param {Object} [options.imports=_.templateSettings.imports]\n *  An object to import into the template as free variables.\n * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n *  The \"interpolate\" delimiter.\n * @param {string} [options.sourceURL='templateSources[n]']\n *  The sourceURL of the compiled template.\n * @param {string} [options.variable='obj']\n *  The data object variable name.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the compiled template function.\n * @example\n *\n * // Use the \"interpolate\" delimiter to create a compiled template.\n * var compiled = _.template('hello <%= user %>!');\n * compiled({ 'user': 'fred' });\n * // => 'hello fred!'\n *\n * // Use the HTML \"escape\" delimiter to escape data property values.\n * var compiled = _.template('<b><%- value %></b>');\n * compiled({ 'value': '<script>' });\n * // => '<b>&lt;script&gt;</b>'\n *\n * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the internal `print` function in \"evaluate\" delimiters.\n * var compiled = _.template('<% print(\"hello \" + user); %>!');\n * compiled({ 'user': 'barney' });\n * // => 'hello barney!'\n *\n * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n * // Disable support by replacing the \"interpolate\" delimiter.\n * var compiled = _.template('hello ${ user }!');\n * compiled({ 'user': 'pebbles' });\n * // => 'hello pebbles!'\n *\n * // Use backslashes to treat delimiters as plain text.\n * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n * compiled({ 'value': 'ignored' });\n * // => '<%- value %>'\n *\n * // Use the `imports` option to import `jQuery` as `jq`.\n * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n * compiled(data);\n * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n *\n * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n * compiled.source;\n * // => function(data) {\n * //   var __t, __p = '';\n * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n * //   return __p;\n * // }\n *\n * // Use custom template delimiters.\n * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n * var compiled = _.template('hello {{ user }}!');\n * compiled({ 'user': 'mustache' });\n * // => 'hello mustache!'\n *\n * // Use the `source` property to inline compiled templates for meaningful\n * // line numbers in error messages and stack traces.\n * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n *   var JST = {\\\n *     \"main\": ' + _.template(mainText).source + '\\\n *   };\\\n * ');\n */\nfunction template(string, options, guard) {\n  // Based on John Resig's `tmpl` implementation\n  // (http://ejohn.org/blog/javascript-micro-templating/)\n  // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\n\n  if (guard && isIterateeCall(string, options, guard)) {\n    options = undefined;\n  }\n  string = toString(string);\n  options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n  var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n      importsKeys = keys(imports),\n      importsValues = baseValues(imports, importsKeys);\n\n  var isEscaping,\n      isEvaluating,\n      index = 0,\n      interpolate = options.interpolate || reNoMatch,\n      source = \"__p += '\";\n\n  // Compile the regexp to match each delimiter.\n  var reDelimiters = RegExp(\n    (options.escape || reNoMatch).source + '|' +\n    interpolate.source + '|' +\n    (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n    (options.evaluate || reNoMatch).source + '|$'\n  , 'g');\n\n  // Use a sourceURL for easier debugging.\n  // The sourceURL gets injected into the source that's eval-ed, so be careful\n  // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n  // and escape the comment, thus injecting code that gets evaled.\n  var sourceURL = hasOwnProperty.call(options, 'sourceURL')\n    ? ('//# sourceURL=' +\n       (options.sourceURL + '').replace(/\\s/g, ' ') +\n       '\\n')\n    : '';\n\n  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n    interpolateValue || (interpolateValue = esTemplateValue);\n\n    // Escape characters that can't be included in string literals.\n    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n    // Replace delimiters with snippets.\n    if (escapeValue) {\n      isEscaping = true;\n      source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n    }\n    if (evaluateValue) {\n      isEvaluating = true;\n      source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n    }\n    if (interpolateValue) {\n      source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n    }\n    index = offset + match.length;\n\n    // The JS engine embedded in Adobe products needs `match` returned in\n    // order to produce the correct `offset` value.\n    return match;\n  });\n\n  source += \"';\\n\";\n\n  // If `variable` is not specified wrap a with-statement around the generated\n  // code to add the data object to the top of the scope chain.\n  var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n  if (!variable) {\n    source = 'with (obj) {\\n' + source + '\\n}\\n';\n  }\n  // Throw an error if a forbidden character was found in `variable`, to prevent\n  // potential command injection attacks.\n  else if (reForbiddenIdentifierChars.test(variable)) {\n    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n  }\n\n  // Cleanup code by stripping empty strings.\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n    .replace(reEmptyStringMiddle, '$1')\n    .replace(reEmptyStringTrailing, '$1;');\n\n  // Frame code as the function body.\n  source = 'function(' + (variable || 'obj') + ') {\\n' +\n    (variable\n      ? ''\n      : 'obj || (obj = {});\\n'\n    ) +\n    \"var __t, __p = ''\" +\n    (isEscaping\n       ? ', __e = _.escape'\n       : ''\n    ) +\n    (isEvaluating\n      ? ', __j = Array.prototype.join;\\n' +\n        \"function print() { __p += __j.call(arguments, '') }\\n\"\n      : ';\\n'\n    ) +\n    source +\n    'return __p\\n}';\n\n  var result = attempt(function() {\n    return Function(importsKeys, sourceURL + 'return ' + source)\n      .apply(undefined, importsValues);\n  });\n\n  // Provide the compiled function's source by its `toString` method or\n  // the `source` property as a convenience for inlining compiled templates.\n  result.source = source;\n  if (isError(result)) {\n    throw result;\n  }\n  return result;\n}\n\nexport default template;\n","import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nexport default baseValues;\n","import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n","import baseFlatten from './_baseFlatten.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.union` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which uniqueness is computed. Result values are chosen from the first\n * array in which the value occurs. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nvar unionBy = baseRest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2));\n});\n\nexport default unionBy;\n","export const UIInputStatus: { [key: string]: \"idle\" | \"valid\" | \"invalid\" } = {\n  IDLE: \"idle\",\n  VALID: \"valid\",\n  INVALID: \"invalid\"\n} as const;\n","import esriRequest from \"@arcgis/core/request\";\n\nimport { assign, isArray, isEmpty, isPlainObject, mapValues, omitBy, pickBy, toPath } from \"lodash-es\";\n\nimport {\n  AnalysisToolDataItem,\n  AnalysisToolPrimitiveDataItem,\n  AnalysisValidationParams,\n  MessageType\n} from \"analysis-ui-schema\";\n\nimport { NestedObject } from \"../spatial-reference/spatial-references\";\nimport { formatMessage } from \"../localization\";\nimport { UIInputStatus } from \"../inputs/interfaces\";\n\n/**\n * Indicates if a provided number value is valid.\n * An invalid value is: undefined | NaN | Infinite | -Infinite | null\n * See for more details:\n *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\n *   - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n * @param {number | undefined | null} value value to check\n * @returns {boolean} if valid or not\n */\nexport function isValidNumber(value: number | undefined | null): boolean {\n  return value !== undefined && value !== null && Number.isNaN(value) === false && Number.isFinite(value) === true;\n}\n\n/**\n * Zips together two arrays of the same length, similar to\n * Python's zip() function.\n * See for more details:\n *    - https://stackoverflow.com/questions/22015684/how-do-i-zip-two-arrays-in-javascript/22015930\n * @param array1\n * @param array2\n */\nexport function zip<T, K>(array1: T[], array2: K[]): (T | K)[][] {\n  return array1.map((a, index) => [a, array2[index]]);\n}\n\n/**\n * Checks for duplicate strings in an array. Returns true if there\n * are duplicates, false if each string is unique.\n * @param arr\n */\nexport function areThereDuplicates(arr: string[]): boolean {\n  return new Set(arr).size !== arr.length;\n}\n\n/**\n * Removes properties with empty objects from an object\n * @param obj\n * @returns\n */\nexport function removeEmptyObjects<T extends object | null | undefined>(obj: T): T {\n  // Based on https://stackoverflow.com/questions/38275753/how-to-remove-empty-values-from-object-using-lodash solution.\n  let nonEmptyObjects;\n  nonEmptyObjects = pickBy(obj, isPlainObject); // pick only objects\n  nonEmptyObjects = mapValues(nonEmptyObjects, removeEmptyObjects); // recursive call for nested objects\n  nonEmptyObjects = omitBy(nonEmptyObjects, isEmpty); // remove all empty objects\n  nonEmptyObjects = assign(omitBy(obj, isPlainObject), nonEmptyObjects); // assign back primitive values\n  return nonEmptyObjects as T;\n}\n\nfunction isEveryPropertyEmpty(value: AnalysisToolDataItem): boolean {\n  let isAllPropsEmpty = true;\n  if (typeof value === \"object\" && isArray(value) === false) {\n    // using for-in as it will work with objects with properties that set via accessors as well\n    for (const prop in value) {\n      // This will tell the TypeScript compiler that the obj object has a string index signature,\n      // and will allow to access its properties using a string index without getting the \"Element implicitly has an 'any' type\" error.\n      const propValue = (value as { [key: string]: AnalysisToolPrimitiveDataItem })?.[prop];\n      if (value.hasOwnProperty(prop) === true && propValue !== undefined && propValue !== null && propValue !== \"\") {\n        isAllPropsEmpty = false;\n        break;\n      }\n    }\n  }\n  return isAllPropsEmpty;\n}\n\n/**\n * Check for an empty value for data items like GPString and Field.\n * @param value data item value.\n * @returns whether the value is considered empty.\n */\nexport function isEmptyDataItem<T>(value: AnalysisToolDataItem | T): boolean {\n  return (\n    value === undefined ||\n    value === null ||\n    // single-select, \"\" is a special case for strings\n    (typeof value === \"string\" && value === \"\") ||\n    // single-select, empty objects are a special case for nested values\n    (isPlainObject(value) && isEmpty(value)) ||\n    // multi-select\n    (Array.isArray(value) && value.length < 1) ||\n    // only testing objects which are not arrays\n    // TODO: combine isEveryPropertyEmpty and isEmptyDataItem to single function\n    (typeof value === \"object\" && isArray(value) === false && isEveryPropertyEmpty(value))\n  );\n}\n\n/**\n * Checks whether or not a localName is included in an event's composedPath\n * This is very useful for popover patterns.\n * @param composedPath the event.composedPath() from the event\n * @param elementName the localName that you want to see if it is included\n * @returns boolean: whether or not the localName is in the composedPath\n */\nexport function isInComposedPath(composedPath: EventTarget[], elementName: string): boolean {\n  const localNames = composedPath.map((target: EventTarget) => {\n    return (target as HTMLElement).localName;\n  });\n  return localNames.includes(elementName);\n}\n\n/**\n * Wrapper for the esriRequest\n * @param url the url\n * @param options the response type and other options\n * @returns RequestResponse\n */\nexport async function request(url: string, options: __esri.RequestOptions): Promise<__esri.RequestResponse> {\n  return esriRequest(url, options);\n}\n\n/**\n * Flatten a nested object into a single level.\n * https://stackoverflow.com/a/55251598\n * @param {NestedObject} obj the object to flatten\n * @returns {Record<string, string>} the flattened object\n */\nexport const flattenObject = (obj: NestedObject): Record<string, string> => {\n  const flattened: Record<string, string> = {};\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    if (typeof value === \"object\") {\n      Object.assign(flattened, flattenObject(value));\n    } else {\n      flattened[key] = value;\n    }\n  });\n  return flattened;\n};\n\n/**\n * This function immutably sets a value at a path in an object.\n * @param {Record<string, unknown>} obj The object to update\n * @param {string | string[]} path An array of strings representing the path to the value to update in the object\n * @param {unknown} value The new value to set at the specified path.\n * @returns {Record<string, unknown>} A new object with the updated value.\n * @example\n * immutablySet({ a: { b: { c: 1 } } }, ['a', 'b', 'c'], 2)\n * // returns { a: { b: { c: 2 } } }\n * @example\n * immutablySet({ a: { b: [1, 2, 3] } }, ['a', 'b', '2'], 4)\n * // returns { a: { b: [1, 2, 4] } }\n * @example\n * immutablySet({ a: { b: { c: 1 } } }, 'a.b.c', 2)\n * // returns { a: { b: { c: 2 } } }\n * @example\n * immutablySet({ a: { b: { c: 1 } } }, 'a.d', { e: 2 })\n * // returns { a: { b: { c: 1 }, d: { e: 2 } } }\n */\nexport function setImmutableValue(\n  obj: Record<string, unknown>,\n  path: string | string[],\n  value: unknown\n): Record<string, unknown> {\n  const pathArray = Array.isArray(path) ? path : toPath(path);\n\n  const newObj: Record<string, unknown> = { ...obj };\n  let current: Record<string, unknown> | Record<string, unknown>[] = newObj;\n\n  // Traverse the path, creating new shallow copies as needed\n  for (let i = 0; i < pathArray.length - 1; i++) {\n    const key = pathArray[i];\n\n    // Check if the key exists or the next value is the wrong type\n    const nextKeyIsNumber = isValidNumber(Number(pathArray[i + 1]));\n    // This \"overwrite\" behavior is found in lodash.set\n    const shouldResetValue = Array.isArray(current[key]) !== nextKeyIsNumber;\n    if (current[key] === undefined || shouldResetValue) {\n      current[key] = nextKeyIsNumber ? [] : {};\n    }\n\n    current[key] = nextKeyIsNumber\n      ? [...(current[key] as Record<string, unknown>[])]\n      : { ...(current[key] as Record<string, unknown>) };\n\n    current = current[key] as Record<string, unknown>;\n  }\n\n  // Made it to the end of the path, set the value\n  current[pathArray[pathArray.length - 1]] = value;\n\n  return newObj;\n}\n\n/**\n * Parses a regex string and creates a RegExp object.\n * @param {string} regexString - The regex string in the format '/pattern/flags'.\n * @returns {RegExp|undefined} A RegExp object representing the parsed regex, or undefined if parsing fails.\n */\nexport function getRegExFromString(regexString: string): RegExp | undefined {\n  let regexLiteral: RegExp | undefined;\n  const regexParts = /^\\/(.*?)\\/([a-z]*)$/.exec(regexString);\n  const pattern = regexParts?.[1];\n  const flags = regexParts?.[2];\n  if (!isEmptyDataItem(pattern)) {\n    regexLiteral = new RegExp(pattern as string, flags);\n  }\n  return regexLiteral;\n}\n\n/**\n * Checks validationParamsMessage to make sure none of its fields are undefined before formatting message\n * @param {AnalysisValidationParams} validationParams\n * @returns {string|undefined} Formatted message with validationParams variables incorporated into the message\n */\nexport function formatValidationParamsMessage(validationParams?: AnalysisValidationParams): string | undefined {\n  const { message, variables } = validationParams ?? {};\n  // only message is required , we can have custom validation message without any variables\n  const validationParamsMessage = message !== undefined ? formatMessage(message, variables ?? {}) : undefined;\n  return validationParamsMessage;\n}\n\n/**\n * Converts an error key/code to a message template\n * @param {AnalysisValidationParams} validationParams\n * @param {{ [key: string]: string }} errorMessages\n * @returns {AnalysisValidationParams} validationParams with the message property (if a message exists for the error key)\n */\nexport function getValidationParamsMessageFromErrorKey(\n  errorMessages: { [key: string]: string },\n  validationParams?: AnalysisValidationParams\n): AnalysisValidationParams {\n  const { key, message: originalMessage, ...rest } = validationParams ?? {};\n  const errorKey = key ?? \"\";\n  // Check if the error key reference a validation param message or error message\n  const message =\n    errorMessages[errorKey] ?? validationParams?.[errorKey as keyof AnalysisValidationParams] ?? originalMessage;\n  return { ...rest, message };\n}\n\n/**\n *\n * @param messageType\n */\nexport function getUIInputStatusFromMessageType(messageType?: MessageType) {\n  const status = messageType === \"informative\" ? UIInputStatus.IDLE : UIInputStatus.INVALID;\n\n  return status;\n}\n\ninterface OpenableHtmlElement extends HTMLElement {\n  open: boolean;\n}\n\n/**\n * @param {OpenableHtmlElement | undefined} element the element to close and remove\n */\nexport function removeOpenableDomElement(element: OpenableHtmlElement | undefined): void {\n  if (element !== undefined) {\n    element.open = false;\n    element.remove();\n  }\n}\n\n/**\n * @param {Document} document used to append\n * @param {OpenableHtmlElement} element the element to add to the dom and open\n */\nexport function addOpenableDomElement(document: Document, element: OpenableHtmlElement): void {\n  if (document.body.contains(element) === false) {\n    document.body.appendChild(element);\n    element.open = true;\n  }\n}\n","// Based on https://medium.com/stencil-tricks/implementing-internationalisation-i18n-with-stencil-5e6559554117\nimport { LocaleItem } from \"analysis-ui-schema\";\n\nexport interface ComponentLocaleItem<T extends LocaleItem> {\n  strings: T;\n  dir: \"ltr\" | \"rtl\";\n  locale: string;\n}\n\n/**\n * Locale list (in alphabetical order) adopted from [JSAPI](https://devtopia.esri.com/WebGIS/arcgis-js-api/tree/master/esri/nls)\n * Full forms adopted from [1](https://www.science.co.il/language/Locale-codes.php) and [2](https://saimana.com/list-of-country-locale-code/)\n */\nexport const SupportedLocales = {\n  Arabic: \"ar\",\n  Bosnian: \"bs\",\n  Bulgarian: \"bg\",\n  Catalan: \"ca\",\n  Czech: \"cs\",\n  Danish: \"da\",\n  German: \"de\",\n  Greek: \"el\",\n  English: \"en\",\n  EnglishUSA: \"en-US\",\n  Spanish: \"es\",\n  Estonian: \"et\",\n  Finnish: \"fi\",\n  French: \"fr\",\n  Hebrew: \"he\",\n  Croatian: \"hr\",\n  Hungarian: \"hu\",\n  Indonesian: \"id\",\n  Italian: \"it\",\n  Japanese: \"ja\",\n  Korean: \"ko\",\n  Lithuanian: \"lt\",\n  Latvian: \"lv\",\n  NorwegianBokml: \"nb\",\n  Dutch: \"nl\",\n  Polish: \"pl\",\n  PortugueseBrazil: \"pt-BR\",\n  PortuguesePortugal: \"pt-PT\",\n  Romanian: \"ro\",\n  Russian: \"ru\",\n  Serbian: \"sr\",\n  Slovenian: \"sl\",\n  Slovak: \"sk\",\n  Swedish: \"sv\",\n  Thai: \"th\",\n  Turkish: \"tr\",\n  Ukrainian: \"uk\",\n  Vietnamese: \"vi\",\n  ChineseChina: \"zh-CN\",\n  ChineseHongKong: \"zh-HK\",\n  ChineseTaiwan: \"zh-TW\"\n} as const;\nexport type SupportedLocales = (typeof SupportedLocales)[keyof typeof SupportedLocales];\n\n/**\n * This is list of locales for supporting different number and date formats ,\n * for cases in UI we may need to use them\n */\nexport const SupportedLocalesForFormats = [\n  ...Object.values(SupportedLocales),\n  \"ar-u-nu-latn\",\n  \"en-AU\",\n  \"en-GB\",\n  \"es-ES\",\n  \"es-MX\",\n  \"de-AT\",\n  \"de-CH\",\n  \"de-DE\",\n  \"it-CH\",\n  \"it-IT\"\n];\nexport type SupportedLocalesForFormats =\n  | SupportedLocales\n  | \"ar-u-nu-latn\"\n  | \"en-AU\"\n  | \"en-GB\"\n  | \"es-ES\"\n  | \"es-MX\"\n  | \"de-CH\"\n  | \"de-DE\"\n  | \"it-CH\"\n  | \"it-IT\";\n\n/**\n * List of supported locales that are RTL\n * Adopted from https://devtopia.esri.com/WebGIS/arcgis-js-api/blob/4master/esri/intl/locale.ts\n */\nexport const RTLLocales: SupportedLocales[] = [SupportedLocales.Arabic, SupportedLocales.Hebrew];\n\nexport interface LocaleInfo {\n  locale: SupportedLocales;\n  formatLocale: SupportedLocalesForFormats;\n  rtl: boolean;\n}\n\nexport const TimestampOptions = {\n  long: {\n    dateStyle: \"medium\",\n    timeStyle: \"long\"\n  },\n  numeric: {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\"\n  }\n} as const;\n\n/**\n * Interface for the formatDurationTime function parameter.\n */\nexport interface FormatDurationTimeParams {\n  /**\n   * value of time to be formatted\n   */\n  value: number;\n  /**\n   * Unit to use in the duration time internationalized message.\n   * We are using the NumberFormat Unit to format this value\n   *\n   * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#unit).\n   */\n  unit: Intl.NumberFormatOptions[\"unit\"];\n  /**\n   * The length of the internationalized message.\n   * Here we use the unitDisplay option in Intl.NumberFormatOptions for formatting the time unit style.\n   *\n   * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#unitDisplay).\n   */\n  style: Intl.NumberFormatOptions[\"unitDisplay\"];\n}\n\nexport interface DurationTimeUnits {\n  [key: string]: {\n    single: Intl.RelativeTimeFormatUnit;\n    plural: Intl.RelativeTimeFormatUnit;\n  };\n}\n\nexport const SupportedOnlineHelpLocales = [\"ar\", \"de\", \"es\", \"fr\", \"it\", \"ja\", \"ko\", \"ru\", \"pl\", \"pt-br\", \"zh-cn\"];\n\nexport interface FormatHelpUrlParams {\n  url: string;\n  basePath: string;\n  portalUrl?: string;\n  locale?: SupportedLocales;\n}\n","import { template } from \"lodash-es\";\n\nimport { LocaleItem } from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem } from \"../common\";\n\nimport {\n  ComponentLocaleItem,\n  DurationTimeUnits,\n  FormatDurationTimeParams,\n  FormatHelpUrlParams,\n  LocaleInfo,\n  RTLLocales,\n  SupportedLocales,\n  SupportedLocalesForFormats,\n  SupportedOnlineHelpLocales\n} from \"./interfaces\";\n/**\n * Generates and returns a message with the keys in the input statement replaced with new values.\n * @param message\n * @param statement\n * @param parameters\n */\nexport function formatMessage(statement: Readonly<string>, parameters: Readonly<LocaleItem>): string {\n  const templateFn = template(statement);\n  return templateFn(parameters);\n}\n\n/*\nhttps://medium.com/@Cookie_Cookson/hi-lisa-backer-d0ebcdc2ff3e\nhttps://dockyard.com/blog/2019/04/16/lazy-loading-custom-assets-with-stenciljs-part-1\nuses the loaded script tag of the component to get the resource url \nexample:\n<script type=\"module\" src=\"http://127.0.0.1:5500/packages/arcgis-charts-config-components/dist/arcgis-charts-config-components/arcgis-charts-config-components.esm.js\" \ndata-stencil-namespace=\"arcgis-charts-config-components\"></script>\n*/\n/* Not working\nfunction getPublicPath(componentName: string): string {\n  const script: HTMLScriptElement = document.querySelector(\n    `script[data-stencil-namespace='${componentName}']`\n  ) as HTMLScriptElement;\n  return script?.getAttribute(\"data-resources-url\") ?? \"\";\n}\n*/\n\n/**\n * Extracts language portion of locale code\n * Reference: https://github.com/meikidd/locale-code/blob/master/src/index.js#L8\n * Examples:\n * - en-US => en\n * - zh-CN => zh\n * - zh-cn => zh\n * - en => en\n * @param locale\n */\nfunction extractLanguageTag(locale?: string): string {\n  const localeCodeRegex = /^([a-z]{2})-([A-Z]{1,2})$/;\n  const match = locale?.match(localeCodeRegex);\n  let output: string = SupportedLocales.English;\n  if (match !== null && match !== undefined && match?.length > 1) {\n    output = match[1];\n  } else if (locale?.length === 2 && locale.toLowerCase() === locale) {\n    output = locale;\n  }\n  return output;\n}\n\n/**\n * Converts a given locale into a supported locale.\n * In case of an unsupported locale, \"en\" is returned.\n * Examples:\n * - en-US => en-US\n * - zh-CN => zh-CN\n * - en => en\n * - es-AR => es\n * - en-UK => en\n * @param locale\n */\nexport function convertToSupportedLocale(locale?: string): SupportedLocales {\n  let output: string = SupportedLocales.English;\n  if (locale !== undefined) {\n    const supportedLocales = Object.values(SupportedLocales);\n    const hyphenatedSupportedLocales = supportedLocales.filter((ele) => {\n      return ele.indexOf(\"-\") !== -1;\n    });\n    if (locale.indexOf(\"-\") !== -1) {\n      const [lang, region] = locale.split(\"-\");\n      // To make sure it is valid locale code of form `zh-CN`.\n      // In ArcGIS Online user locale codes come with region in lower case `zh-cn`.\n      // TODO Remove next Eslint ignore comment.\n\n      locale = `${lang}-${region.toUpperCase()}`;\n    }\n    if (hyphenatedSupportedLocales.includes(locale as SupportedLocales) === true) {\n      output = locale;\n    } else {\n      const languageTag = extractLanguageTag(locale);\n      if (supportedLocales.includes(languageTag as SupportedLocales) === true) {\n        output = languageTag;\n      }\n    }\n  }\n  return output as SupportedLocales;\n}\n\n/**\n * Converts a given locale into a supported format locale.\n * In case of an unsupported locale, \"en\" is returned.\n * Examples:\n * - en-AU => en-AU\n * - zh-CN => zh-CN\n * - en => en\n * - en-GB => en-GB\n * - it-CH => it-CH\n * - it-ch => it-CH\n * @param locale\n */\nexport function convertToSupportedFormatLocale(locale?: string): SupportedLocalesForFormats {\n  let formatLocale = SupportedLocalesForFormats.find((item) => item === locale);\n  if (formatLocale === undefined) {\n    formatLocale = locale;\n  }\n  if (formatLocale !== undefined && formatLocale.indexOf(\"-\") !== -1) {\n    const [lang, region] = formatLocale.split(\"-\");\n    formatLocale = `${lang}-${region.toUpperCase()}`;\n  }\n  // Special handling to maintain latn numbering system for arabic locale\n  // https://devtopia.esri.com/WebGIS/arcgis-js-api/blob/4master/esri/intl/number.ts#L11\n  if (formatLocale === \"ar\") {\n    formatLocale = \"ar-u-nu-latn\";\n  }\n  return formatLocale as SupportedLocalesForFormats;\n}\n\n/**\n * Helper function to find the closest element crossing multiple (parent) shadowDOM boundaries.\n * The implementation is based on [this](https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd) solution.\n * @param {string} selector\n * @param {Element} base\n */\nexport function getClosestElement(selector: string, base: Element): Element | null {\n  function closestFrom(el?: Element | Window | Document): Element | null {\n    let element;\n    if (el === undefined || el === document || el === window) element = null;\n    else {\n      const found = (el as Element).closest(selector);\n      element = found || closestFrom(((el as Element).getRootNode() as ShadowRoot).host);\n    }\n    return element;\n  }\n  return closestFrom(base);\n}\n\n/**\n * Finds the locale of the closest element to the given element.\n * If no element given, and converts `window.navigator.language` into a supported locale.\n * @param element\n */\nexport function getLocaleInfo(element: Element = document.documentElement as Element): LocaleInfo {\n  const closestElement = getClosestElement(\"[lang]\", element);\n  const locale = (closestElement as HTMLElement)?.lang ?? window.navigator.language;\n  const convertedLocale = convertToSupportedLocale(locale);\n  const formatLocale = convertToSupportedFormatLocale(locale);\n  return { locale: convertedLocale, rtl: RTLLocales.includes(convertedLocale), formatLocale };\n}\n\n/**\n * Formats a time value in milliseconds since epoch to internatianlized string according to the locale, passing Intl number format options\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\n * @param {number | string | undefined} value to be formatted and localized\n * @param {Intl.NumberFormatOptions} options options object matching Intl.NumberFormat\n * @returns {string} localized / rounded string\n */\n/**\n * formats the timestamp\n * @param timestamp time value in milliseconds since Epoch\n * @param options\n * @returns the formatted timestamp\n */\nexport function formatTimeToLocale(timestamp?: number, options?: Intl.DateTimeFormatOptions): string {\n  const localeCode = getLocaleInfo().formatLocale;\n  let formattedValue = \"\";\n  if (!isEmptyDataItem(timestamp) && !Number.isNaN(timestamp)) {\n    const dateTimeFormat = new Intl.DateTimeFormat(localeCode, options);\n    formattedValue = dateTimeFormat.format(new Date(timestamp as number));\n  }\n  return formattedValue;\n}\n\n/**\n * Fetches the locale file of the given component; defaults to `\"en\"` locale\n * @param componentName\n * @param props\n * @param locale\n * @param resourcesUrl\n * @param props.path\n * @param props.locale\n * @param props.baseURL\n */\nexport async function fetchLocaleStrings<T extends LocaleItem>(props: {\n  path: string;\n  locale: string;\n  baseURL: string;\n}): Promise<T> {\n  const { path, locale, baseURL } = props;\n  // Using the getPublicPath method that leverages `data-resources-url` currently this is not working.\n  // const rUrl = getPublicPath(componentName) || resourcesUrl;\n  let localeData = {} as T;\n  try {\n    const response = await fetch(`${baseURL}t9n/${path}.t9n.${locale}.json`);\n    localeData = await response.json();\n  } catch (e) {\n    const defaultResponse = await fetch(`${baseURL}t9n/${path}.t9n.${SupportedLocales.English}.json`);\n    localeData = await defaultResponse.json();\n  }\n  return localeData;\n}\n\n/**\n * Fetches locale string for the given component\n * @param element\n * @param baseURL\n */\nexport async function fetchComponentLocaleStrings<T extends LocaleItem>(\n  element: Element,\n  baseURL: string\n): Promise<ComponentLocaleItem<T>> {\n  const componentName = element.tagName.toLowerCase();\n  const { locale, rtl } = getLocaleInfo(element);\n  const strings = await fetchLocaleStrings<T>({ path: componentName, locale, baseURL });\n  return { strings, dir: rtl === true ? \"rtl\" : \"ltr\", locale: locale };\n}\n\n/**\n * Returns if the detected language is rtl or ltr and returns the direction\n * @param element\n */\nexport function fetchLanguageDirection(element?: Element): \"rtl\" | \"ltr\" {\n  const { rtl } = getLocaleInfo(element);\n  return rtl === true ? \"rtl\" : \"ltr\";\n}\n\n/**\n * Returns localized data for\n * @param data the data object before localization\n * @param t9nStrings the translation file using which the data will be localized\n */\nexport function fetchLocalizedMessages<T extends object, U extends keyof T>(data: T, t9nStrings: LocaleItem): T {\n  const localizedData = data;\n  for (const [key, value] of Object.entries(localizedData)) {\n    if (typeof value === \"string\" && value.includes(\"$\")) {\n      // TODO: Simplify to not use unknown\n      localizedData[key as U] = t9nStrings[value.replace(\"$\", \"\")] as unknown as T[U];\n    }\n  }\n  return localizedData;\n}\n\n/**\n * update the enterprise help url for demo apps to absolute\n * @param {string} learnMoreUrl the url to be fixed for demo apps\n * @param {string} portalUrl the portal url\n * @returns string updated url for demo app\n */\nexport function fixUrlForDemoApp(learnMoreUrl: string, portalUrl: string) {\n  // Regular expression pattern to match an absolute URL\n  const absoluteURLPattern = /^(?:[a-z]+:)?\\/\\//i;\n  // Test if the URL matches the absolute URL pattern\n  if (absoluteURLPattern.test(learnMoreUrl) === false) {\n    // current App's url\n    const currentUrl = window.location.href;\n    // Create URL objects for both URLs\n    const currentOrigin = new URL(currentUrl).origin;\n    const portalOrigin = new URL(portalUrl).origin;\n    // for the demo apps or test apps domains would be different\n    if (currentOrigin !== portalOrigin) {\n      learnMoreUrl = `${portalOrigin}${learnMoreUrl}`;\n    }\n  }\n  return learnMoreUrl;\n}\n\n/**\n * Formats a learn more help URL correctly based on the parameters like help base path , portal url.\n * @param {FormatHelpUrlParams} params parameters to this formatLearnMoreHelpUrl\n * @param {string} url the url string from after the locale\n * @param {string} basePath the base path from the signed in portal object.\n * @param {string} locale the locale abbreviation for the browser.\n * @returns {string} the formatted url.\n */\nexport function formatLearnMoreHelpUrl(params: FormatHelpUrlParams): string {\n  const { locale = \"en\", portalUrl, url } = params;\n  let { basePath } = params;\n  if (locale === \"en-US\") {\n    basePath = basePath.replace(\"/en-US/\", \"/en/\");\n  }\n  const localeInLowerCase = locale.toLocaleLowerCase();\n  if (SupportedOnlineHelpLocales.includes(localeInLowerCase) === true) {\n    // following regex tests /en/ is present in url and replaces it with the locale\n    // https://docdev.arcgis.com/en/arcgis-online/analyze/aggregate-points-mv.htm\n    // self Response only provides with `en` locale not as per the user locale or current app locale\n    // so we need this replace call.\n    basePath = basePath.replace(/^https?:\\/\\/[^/]+\\/en/, (match: string) => match.replace(\"en\", localeInLowerCase));\n  }\n  // have to pass portal url\n  return portalUrl !== undefined ? fixUrlForDemoApp(`${basePath}${url}`, portalUrl) : `${basePath}${url}`;\n}\n\n/**\n * Formats a number or string representing a number according to the locale, passing Intl number format options\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/ReferenceGlobal_Objects/Intl/NumberFormat/NumberFormat#options\n * @param {number | string | undefined} value to be formatted and localized\n * @param {Intl.NumberFormatOptions} formatOptions options object matching Intl.NumberFormat\n * @returns {string} localized / rounded string\n */\nexport function formatNumberToLocale(value?: number | string, formatOptions?: Intl.NumberFormatOptions): string {\n  let formattedValue = \"\";\n  if (!isEmptyDataItem(value) && !Number.isNaN(value)) {\n    const localeCode = getLocaleInfo().formatLocale;\n    formattedValue = Intl.NumberFormat(localeCode, formatOptions).format(Number(value));\n  }\n  return formattedValue;\n}\n\n/**\n * Formats a value of time and a unit according to the locale\n * @param {FormatDurationTimeParams} params parameter object passed for formatting time\n * @param {number} params.value Time value to be formatted\n * @param {Intl.NumberFormatOptions[\"unit\"]} params.unit Unit to use in the relative time internationalized message.\n * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#unit).\n * @param {Intl.NumberFormatOptions[\"unitDisplay\"]} params.style The length of the internationalized message.\n * [MDN][MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#unitDisplay).\n * @returns {string} Internationalized string for the duration of time\n */\nfunction formatDurationTimePart(params: FormatDurationTimeParams): string {\n  const { value, unit, style } = params;\n  return formatNumberToLocale(value, { style: \"unit\", unit, unitDisplay: style });\n}\n\n/**\n * Formats time duration for a given start and end time value for the provided locale.\n * @param {number} startTime startTime indicated in milliseconds since epoch (UNIX time)\n * @param {number} endTime endTime indicated in milliseconds since epoch (UNIX time)\n * @returns {string} Internationalized string for the elapsed time\n */\nexport function formatDurationTime(startTime: number, endTime: number): string {\n  let time = \"\";\n  const units: DurationTimeUnits = {\n    seconds: { single: \"second\", plural: \"seconds\" },\n    minutes: { single: \"minute\", plural: \"minutes\" },\n    hours: { single: \"hour\", plural: \"hours\" },\n    days: { single: \"day\", plural: \"days\" }\n  };\n  const intervals = [\n    { unit: units.days, seconds: 86400 },\n    { unit: units.hours, seconds: 3600 },\n    { unit: units.minutes, seconds: 60 },\n    { unit: units.seconds, seconds: 1 }\n  ];\n\n  // convert seconds to larger units\n  let timeDiffSeconds = (endTime - startTime) / 1000;\n\n  const elapsedTimeParts = intervals.map((interval) => {\n    const value = Math.floor(timeDiffSeconds / interval.seconds);\n    timeDiffSeconds -= value * interval.seconds;\n    return {\n      // since we use the\n      // [Intl.NumberFormat Unit](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#unit\n      // it can only take singular time unit forms.\n      unit: interval.unit.single,\n      value\n    };\n  });\n\n  // trim 0 values from start of array, but always keep at least one unit\n  const firstValue = elapsedTimeParts.findIndex((unit) => unit.value > 0);\n  const nonEmptyElapsedTimeParts = elapsedTimeParts.splice(firstValue);\n  // format the time\n  time = nonEmptyElapsedTimeParts\n    .map(\n      (timePart) =>\n        `${formatDurationTimePart({\n          value: timePart.value,\n          unit: timePart.unit,\n          style: \"short\"\n        })}`\n    )\n    .join(\" \");\n\n  return time;\n}\n","/**\n * ArcgisWebAnalysisError is a class that enhances the debugging and error handling process. Rather than returning a generic [JavaScript\n * error](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error),\n * this ArcgisWebAnalysisError returns a standardized error object with several properties.\n */\nexport class ArcgisWebAnalysisError<T = any> extends Error {\n  /**\n   * A unique error name. This can be used to map to a localized error message to present to the user.\n   *\n   */\n  name: string;\n\n  /**\n   * The details object provides additional details specific to the error,\n   * giving more information about why the error was raised. For example, the details object includes\n   * additional information to help the developer diagnose issues with a problematic request.\n   *\n   */\n  details?: T;\n\n  /**\n   * Cause of the error. This is useful when the error is a result of another error.\n   * For example, if a request to a server fails, the cause of the error is the error returned by the server.\n   */\n  cause?: Error;\n\n  /**\n   * Creates a new ArcgisWebAnalysisError instance.\n   * @param {string} name - A unique error name.\n   * @param {string} [message] - A message describing the details of the error.\n   * @param {object} [details] - The details object provides additional details specific to the error.\n   * @param {Error} [cause] - Cause of the error.\n   */\n  constructor(name: string, message?: string, details?: T, cause?: Error) {\n    super(message);\n\n    this.name = name;\n    this.details = details;\n    this.cause = cause; // TODO: should be able to make use of builtin cause property\n  }\n}\n\n/**\n * Check if the error was from an aborted operation.\n * @param error\n */\nexport function wasAborted(error: unknown): boolean {\n  return error instanceof Error && error.name === \"AbortError\";\n}\n\nexport const DEFAULT_ERROR_KEY = \"default\";\nexport const DEFAULT_CREDIT_ERROR_KEY = \"creditsDefault\";\n","export const ErrorKeywords = {\n  Default: \"defaultError\",\n  CannotReopenTool: \"cannotReopenTool\",\n  CannotReopenWebTool: \"cannotReopenWebTool\",\n  CreditEstimationError: \"creditEstimationError\",\n  CreditThresholdExceededError: \"creditThresholdExceededError\",\n  CreditEstimationExecutionFailure: \"failedToExecuteEstimate\",\n  InsufficientCreditsError: \"InsufficientCreditsError\",\n  KeyPropertiesError: \"keyPropertiesError\",\n  LayerLoadFailure: \"layerLoadFailure\",\n  LayerUnavailable: \"layerUnavailable\",\n  NetworkError: \"networkError\",\n  PortalLoadError: \"portalLoadError\",\n  QueryFeaturesError: \"queryFeaturesError\",\n  ServiceNameExistsError: \"serviceNameExistsError\",\n  SpecialCharactersInServiceNameError: \"specialCharactersInServiceNameError\",\n  ToolValidationError: \"toolValidationError\",\n  WebToolFailedFetch: \"webToolFailedFetch\",\n  WebToolJSONChanged: \"webToolJSONChanged\",\n  WebToolPermissionsError: \"missingPermissionForWebTool\"\n} as const;\nexport type ErrorKeywords = (typeof ErrorKeywords)[keyof typeof ErrorKeywords];\n","\"use strict\";\n\nmodule.exports = function () {\n\tif (typeof globalThis !== \"object\") return false;\n\tif (!globalThis) return false;\n\treturn globalThis.Array === Array;\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of Object.prototype being sealed (via preventExtensions, seal or freeze)\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ is resolved with global context, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? globalThis : require(\"./implementation\");\n","\"use strict\";\n\nvar global     = require(\"ext/global-this\")\n  , validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar Symbol = global.Symbol;\n\tvar symbol;\n\tif (typeof Symbol !== \"function\") return false;\n\tsymbol = Symbol(\"test symbol\");\n\ttry { String(symbol); }\n\tcatch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n","\"use strict\";\n\nvar isSymbol = require(\"./is-symbol\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\tif (typeof value === \"symbol\") return true;\n\tif (!value.constructor) return false;\n\tif (value.constructor.name !== \"Symbol\") return false;\n\treturn value[value.constructor.toStringTag] === \"Symbol\";\n};\n","\"use strict\";\n\nvar d = require(\"d\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;\n\nvar created = create(null);\nmodule.exports = function (desc) {\n\tvar postfix = 0, name, ie11BugWorkaround;\n\twhile (created[desc + (postfix || \"\")]) ++postfix;\n\tdesc += postfix || \"\";\n\tcreated[desc] = true;\n\tname = \"@@\" + desc;\n\tdefineProperty(\n\t\tobjPrototype,\n\t\tname,\n\t\td.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t})\n\t);\n\treturn name;\n};\n","\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n","\"use strict\";\n\nvar d              = require(\"d\")\n  , validateSymbol = require(\"../../../validate-symbol\");\n\nvar registry = Object.create(null);\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (registry[key]) return registry[key];\n\t\t\treturn (registry[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (symbol) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(symbol);\n\t\t\tfor (key in registry) {\n\t\t\t\tif (registry[key] === symbol) return key;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t});\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? require(\"ext/global-this\").Symbol\n\t: require(\"./polyfill\");\n","\"use strict\";\n\nconst MODE_NONE = 'modeNone';\nconst MODE_DEFAULT = 'modeDefault';\nconst MODE_MATCH = 'modeMatch';\n\n/**\n * Sorts the tokenizable substrings by their length DESC.\n *\n * @param {string} a\n * @param {string} b\n * @returns {number}\n */\nconst sortTokenizableSubstrings = (a, b) => {\n\n    if (a.length > b.length) {\n        return -1;\n    }\n    if (a.length < b.length) {\n        return 1;\n    }\n    return 0;\n};\n\nconst endsWith = (str, suffix) => {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n};\n\n/**\n * Create an instance of this class for each new string you wish to parse.\n */\nclass Tokenizer {\n\n    /**\n     *\n     * @param {TokenizeThis} factory\n     * @param {string} str\n     * @param {function} forEachToken\n     */\n    constructor(factory, str, forEachToken) {\n\n        /**\n         * Holds the processed configuration.\n         *\n         * @type {TokenizeThis}\n         */\n        this.factory = factory;\n\n        /**\n         * The string to tokenize.\n         *\n         * @type {string}\n         */\n        this.str = str;\n\n        /**\n         * The function to call for teach token.\n         *\n         * @type {Function}\n         */\n        this.forEachToken = forEachToken;\n\n        /**\n         * The previous character consumed.\n         *\n         * @type {string}\n         */\n        this.previousChr = '';\n\n        /**\n         * The current quote to match.\n         *\n         * @type {string}\n         */\n        this.toMatch = '';\n\n        /**\n         * The current token being created.\n         *\n         * @type {string}\n         */\n        this.currentToken = '';\n\n        /**\n         * Keeps track of the current \"mode\" of tokenization.\n         * The tokenization rules are different depending if you are tokenizing an explicit string (surrounded by quotes),\n         * versus a non-explicit string (not surrounded by quotes).\n         *\n         * @type {*[]}\n         */\n        this.modeStack = [MODE_NONE];\n\n        this.currentIndex = 0;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    getCurrentMode() {\n\n        return this.modeStack[this.modeStack.length - 1];\n    }\n\n    /**\n     *\n     * @param {string} mode\n     * @returns {Number}\n     */\n    setCurrentMode(mode) {\n\n        return this.modeStack.push(mode);\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    completeCurrentMode() {\n\n        const currentMode = this.getCurrentMode();\n\n        if (currentMode === MODE_DEFAULT) {\n            this.pushDefaultModeTokenizables();\n        }\n\n        /**\n         * Don't push out empty tokens, unless they were an explicit string, e.g. \"\"\n         */\n        if ((currentMode === MODE_MATCH && this.currentToken === '') || this.currentToken !== '') {\n            this.push(this.currentToken);\n        }\n        this.currentToken = '';\n\n        return this.modeStack.pop();\n    }\n\n    /**\n     *\n     * @param {*} token\n     */\n    push(token) {\n\n        let surroundedBy = '';\n\n        if (this.factory.convertLiterals && this.getCurrentMode() !== MODE_MATCH) {\n\n            /**\n             * Convert the string version of literals into their...literal..form.\n             */\n            switch(token.toLowerCase()) {\n                case 'null':\n                    token = null;\n                    break;\n                case 'true':\n                    token = true;\n                    break;\n                case 'false':\n                    token = false;\n                    break;\n                default:\n                    if (isFinite(token)) {\n                        token = Number(token);\n                    }\n                    break;\n            }\n        } else {\n\n            /**\n             * The purpose of also transmitting the surroundedBy quote is to inform whether or not the token was an explicit string,\n             * versus a non-explicit string, e.g. \"=\" vs. =\n             * @type {string}\n             */\n            surroundedBy = this.toMatch;\n        }\n\n        if (this.forEachToken) {\n            this.forEachToken(token, surroundedBy, this.currentIndex);\n        }\n    }\n\n    tokenize() {\n\n        let index = 0;\n\n        while(index < this.str.length) {\n\n            this.currentIndex = index;\n            this.consume(this.str.charAt(index++));\n        }\n\n        while (this.getCurrentMode() !== MODE_NONE) {\n\n            this.completeCurrentMode();\n        }\n    }\n\n    /**\n     *\n     * @param {string} chr\n     */\n    consume(chr) {\n\n        this[this.getCurrentMode()](chr);\n        this.previousChr = chr;\n    }\n\n    /**\n     *\n     * @param {string} chr\n     * @returns {*}\n     */\n    [MODE_NONE](chr) {\n\n        if (!this.factory.matchMap[chr]) {\n\n            this.setCurrentMode(MODE_DEFAULT);\n            return this.consume(chr);\n        }\n\n        this.setCurrentMode(MODE_MATCH);\n        this.toMatch = chr;\n    }\n\n    /**\n     *\n     * @param {string} chr\n     * @returns {string}\n     */\n    [MODE_DEFAULT](chr) {\n\n        /**\n         * If we encounter a delimiter, its time to push out the current token.\n         */\n        if (this.factory.delimiterMap[chr]) {\n\n            return this.completeCurrentMode();\n        }\n\n        /**\n         * If we encounter a quote, only push out the current token if there's a sub-token directly before it.\n         */\n        if (this.factory.matchMap[chr]) {\n\n            let tokenizeIndex = 0;\n\n            while (tokenizeIndex < this.factory.tokenizeList.length) {\n\n                if (endsWith(this.currentToken, this.factory.tokenizeList[tokenizeIndex++])) {\n                    this.completeCurrentMode();\n                    return this.consume(chr);\n                }\n            }\n        }\n\n        this.currentToken+=chr;\n\n        return this.currentToken;\n    }\n\n    /**\n     * This crazy function parses out potential tokenizable substrings out of the current token.\n     *\n     * @returns {*}\n     */\n    pushDefaultModeTokenizables() {\n\n        // TODO: refactor this to be more performant.\n\n        let tokenizeIndex = 0;\n        let lowestIndexOfTokenize = Infinity;\n        let toTokenize = null;\n\n        /**\n         * Iterate through the list of tokenizable substrings.\n         */\n        while(this.currentToken && tokenizeIndex < this.factory.tokenizeList.length) {\n\n            const tokenize = this.factory.tokenizeList[tokenizeIndex++];\n            const indexOfTokenize = this.currentToken.indexOf(tokenize);\n\n            /**\n             * Find the substring closest to the beginning of the current token.\n             */\n            if (indexOfTokenize !== -1 && indexOfTokenize < lowestIndexOfTokenize) {\n\n                lowestIndexOfTokenize = indexOfTokenize;\n                toTokenize = tokenize;\n            }\n        }\n\n        /**\n         * No substrings to tokenize.  You're done.\n         */\n        if (!toTokenize) {\n            return;\n        }\n\n        /**\n         * A substring was found, but not at the very beginning of the string, e.g. A=B, where \"=\" is the substring.\n         * This will push out \"A\" first.\n         */\n        if (lowestIndexOfTokenize > 0) {\n            this.push(this.currentToken.substring(0, lowestIndexOfTokenize));\n        }\n\n        /**\n         * Push out the substring, then modify the current token to be everything past that substring.\n         * Recursively call this function again until there are no more substrings to tokenize.\n         */\n        if (lowestIndexOfTokenize !== -1) {\n\n            this.push(toTokenize);\n            this.currentToken = this.currentToken.substring(lowestIndexOfTokenize + toTokenize.length);\n            return this.pushDefaultModeTokenizables();\n        }\n    }\n\n    /**\n     *\n     * @param {string} chr\n     * @returns {string}\n     */\n    [MODE_MATCH](chr) {\n\n        if (chr === this.toMatch) {\n\n            if (this.previousChr !== this.factory.escapeCharacter) {\n\n                return this.completeCurrentMode();\n            }\n            this.currentToken = this.currentToken.substring(0, this.currentToken.length - 1);\n        }\n\n        this.currentToken+=chr;\n\n        return this.currentToken;\n    }\n}\n\n/**\n * This is the main class.  It takes in the config, processes it, and creates tokenizer instances based on that config.\n */\nclass TokenizeThis {\n\n    /**\n     *\n     * @param {{shouldTokenize: string[], shouldMatch: string[], shouldDelimitBy: string[]}} [config]\n     */\n    constructor(config) {\n\n        if (!config) {\n            config = {};\n        }\n\n        /**\n         *\n         * @type {{shouldTokenize: string[], shouldMatch: string[], shouldDelimitBy: string[], convertLiterals: boolean, escapeCharacter: string}}\n         */\n        config = Object.assign({}, this.constructor.defaultConfig, config);\n\n        /**\n         *\n         * @type {boolean}\n         */\n        this.convertLiterals = config.convertLiterals;\n\n        /**\n         *\n         * @type {string}\n         */\n        this.escapeCharacter = config.escapeCharacter;\n\n        /**\n         * Holds the list of tokenizable substrings.\n         *\n         * @type {Array}\n         */\n        this.tokenizeList = [];\n\n        /**\n         * Holds an easy lookup map of tokenizable substrings.\n         *\n         * @type {{}}\n         */\n        this.tokenizeMap = {};\n\n        /**\n         * Holds the list of quotes to match explicit strings with.\n         *\n         * @type {Array}\n         */\n        this.matchList = [];\n\n        /**\n         * Holds an easy lookup map of quotes to match explicit strings with.\n         *\n         * @type {{}}\n         */\n        this.matchMap = {};\n\n        /**\n         * Holds the list of delimiters.\n         *\n         * @type {Array}\n         */\n        this.delimiterList = [];\n\n        /**\n         * Holds an easy lookup map of delimiters.\n         *\n         * @type {{}}\n         */\n        this.delimiterMap = {};\n\n        /**\n         * Sorts the tokenizable substrings based on their length,\n         * such that \"<=\" will get matched before \"<\" does.\n         */\n        config.shouldTokenize.sort(sortTokenizableSubstrings).forEach((token) => {\n\n            if (!this.tokenizeMap[token]) {\n                this.tokenizeList.push(token);\n                this.tokenizeMap[token] = token;\n            }\n        });\n\n        config.shouldMatch.forEach((match) => {\n\n            if (!this.matchMap[match]) {\n                this.matchList.push(match);\n                this.matchMap[match] = match;\n            }\n        });\n\n        config.shouldDelimitBy.forEach((delimiter) => {\n\n            if (!this.delimiterMap[delimiter]) {\n                this.delimiterList.push(delimiter);\n                this.delimiterMap[delimiter] = delimiter;\n            }\n        });\n    }\n\n    /**\n     * Creates a Tokenizer, then immediately calls \"tokenize\".\n     *\n     * @param {string} str\n     * @param {function} forEachToken\n     * @returns {*}\n     */\n    tokenize(str, forEachToken) {\n\n        const tokenizerInstance = new Tokenizer(this, str, forEachToken);\n        return tokenizerInstance.tokenize();\n    }\n\n    /**\n     *\n     * @returns {{shouldTokenize: string[], shouldMatch: string[], shouldDelimitBy: string[], convertLiterals: boolean, escapeCharacter: string}}\n     */\n    static get defaultConfig() {\n\n        return {\n            shouldTokenize: ['(', ')', ',', '*', '/', '%', '+', '-', '=', '!=', '!', '<', '>', '<=', '>=', '^'],\n            shouldMatch: ['\"', \"'\", '`'],\n            shouldDelimitBy: [' ', \"\\n\", \"\\r\", \"\\t\"],\n            convertLiterals: true,\n            escapeCharacter: \"\\\\\"\n        };\n    }\n}\n\n/**\n *\n * @type {TokenizeThis}\n */\nmodule.exports = TokenizeThis;\n","\"use strict\";\nconst Symbol = require('es6-symbol');\nconst TokenizeThis = require('tokenize-this');\n\n/**\n * To distinguish between the binary minus and unary.\n *\n * @type {Symbol}\n */\nconst OPERATOR_UNARY_MINUS = Symbol('-');\n\n/**\n * Number of operands in a unary operation.\n *\n * @type {number}\n */\nconst OPERATOR_TYPE_UNARY = 1;\n\n/**\n * Number of operands in a binary operation.\n *\n * @type {number}\n */\nconst OPERATOR_TYPE_BINARY = 2;\n\n/**\n * Number of operands in a ternary operation.\n *\n * @type {number}\n */\nconst OPERATOR_TYPE_TERNARY = 3;\n\n/**\n * Defining the use of the unary minus.\n *\n * @type {{operators: [{}], tokenizer: {shouldTokenize: string[], shouldMatch: string[], shouldDelimitBy: string[]}}}\n */\nconst unaryMinusDefinition = {\n    [OPERATOR_UNARY_MINUS]: OPERATOR_TYPE_UNARY\n};\n\n/**\n * A wrapper class around operators to distinguish them from regular tokens.\n */\nclass Operator {\n    \n    constructor(value, type, precedence) {\n        this.value = value;\n        this.type = type;\n        this.precedence = precedence;\n    }\n    toJSON() {\n        return this.value;\n    }\n    toString() {\n        return `${this.value}`;\n    }\n}\n\n/**\n * The main parser class.\n */\nclass SqlWhereParser {\n\n    /**\n     *\n     * @param {{operators: [{}], tokenizer: {shouldTokenize: string[], shouldMatch: string[], shouldDelimitBy: string[]}}} [config]\n     */\n    constructor(config) {\n\n        if (!config) {\n            config = {};\n        }\n\n        /**\n         *\n         * @type {{operators: [{}], tokenizer: {shouldTokenize: string[], shouldMatch: string[], shouldDelimitBy: string[]}}}\n         */\n        config = Object.assign({}, this.constructor.defaultConfig, config);\n\n        /**\n         *\n         * @type {TokenizeThis}\n         */\n        this.tokenizer = new TokenizeThis(config.tokenizer);\n\n        /**\n         *\n         * @type {{}}\n         */\n        this.operators = {};\n\n        /**\n         * Flattens the operator definitions into a single object,\n         * whose keys are the operators, and the values are the Operator class wrappers.\n         */\n        config.operators.forEach((operators, precedence) => {\n            \n            Object.keys(operators).concat(Object.getOwnPropertySymbols(operators)).forEach((operator) => {\n\n                this.operators[operator] = new Operator(operator, operators[operator], precedence);\n            });\n        });\n    }\n\n    /**\n     *\n     * @param {string} sql\n     * @param {function} [evaluator]\n     * @returns {{}}\n     */\n    parse(sql, evaluator) {\n\n        const operatorStack = [];\n        const outputStream = [];\n        let lastOperator = undefined;\n        let tokenCount = 0;\n        let lastTokenWasOperatorOrLeftParenthesis = false;\n\n        if (!evaluator) {\n            evaluator = this.defaultEvaluator;\n        }\n\n        /**\n         * The following mess is an implementation of the Shunting-Yard Algorithm: http://wcipeg.com/wiki/Shunting_yard_algorithm\n         * See also: https://en.wikipedia.org/wiki/Shunting-yard_algorithm\n         */\n        this.tokenizer.tokenize(`(${sql})`, (token, surroundedBy) => {\n\n            tokenCount++;\n\n            /**\n             * Read a token.\n             */\n\n            if (typeof token === 'string' && !surroundedBy) {\n\n                let normalizedToken = token.toUpperCase();\n\n                /**\n                 * If the token is an operator, o1, then:\n                 */\n                if (this.operators[normalizedToken]) {\n\n                    /**\n                     * Hard-coded rule for between to ignore the next AND.\n                     */\n                    if (lastOperator === 'BETWEEN' && normalizedToken === 'AND') {\n                        lastOperator = 'AND';\n                        return;\n                    }\n\n                    /**\n                     * If the conditions are right for unary minus, convert it.\n                     */\n                    if (normalizedToken === '-' && (tokenCount === 1 || lastTokenWasOperatorOrLeftParenthesis)) {\n                        normalizedToken = OPERATOR_UNARY_MINUS;\n                    }\n\n                    /**\n                     * While there is an operator token o2 at the top of the operator stack,\n                     * and o1's precedence is less than or equal to that of o2,\n                     * pop o2 off the operator stack, onto the output queue:\n                     */\n                    while (operatorStack[operatorStack.length - 1] && operatorStack[operatorStack.length - 1] !== '(' && this.operatorPrecedenceFromValues(normalizedToken, operatorStack[operatorStack.length - 1])) {\n\n                        const operator = this.operators[operatorStack.pop()];\n                        const operands = [];\n                        let numOperands = operator.type;\n                        while (numOperands--) {\n                            operands.unshift(outputStream.pop());\n                        }\n                        outputStream.push(evaluator(operator.value, operands));\n                    }\n\n                    /**\n                     * At the end of iteration push o1 onto the operator stack.\n                     */\n                    operatorStack.push(normalizedToken);\n                    lastOperator = normalizedToken;\n\n                    lastTokenWasOperatorOrLeftParenthesis = true;\n\n                    /**\n                     * If the token is a left parenthesis (i.e. \"(\"), then push it onto the stack:\n                     */\n                } else if (token === '(') {\n\n                    operatorStack.push(token);\n                    lastTokenWasOperatorOrLeftParenthesis = true;\n\n                    /**\n                     * If the token is a right parenthesis (i.e. \")\"):\n                     */\n                } else if (token === ')') {\n\n                    /**\n                     * Until the token at the top of the stack is a left parenthesis,\n                     * pop operators off the stack onto the output queue.\n                     */\n                    while(operatorStack.length && operatorStack[operatorStack.length - 1] !== '(') {\n\n                        const operator = this.operators[operatorStack.pop()];\n                        const operands = [];\n                        let numOperands = operator.type;\n                        while (numOperands--) {\n                            operands.unshift(outputStream.pop());\n                        }\n\n                        outputStream.push(evaluator(operator.value, operands));\n                    }\n                    if (!operatorStack.length) {\n                        throw new SyntaxError('Unmatched parenthesis.');\n                    }\n                    /**\n                     * Pop the left parenthesis from the stack, but not onto the output queue.\n                     */\n                    operatorStack.pop();\n                    lastTokenWasOperatorOrLeftParenthesis = false;\n\n                    /**\n                     * Push everything else to the output queue.\n                     */\n                } else {\n                    outputStream.push(token);\n                    lastTokenWasOperatorOrLeftParenthesis = false;\n                }\n\n                /**\n                 * Push explicit strings to the output queue.\n                 */\n            } else {\n                outputStream.push(token);\n                lastTokenWasOperatorOrLeftParenthesis = false;\n            }\n        });\n\n\n        /**\n         * While there are still operator tokens in the stack:\n         */\n        while (operatorStack.length) {\n\n            const operatorValue = operatorStack.pop();\n\n            /**\n             * If the operator token on the top of the stack is a parenthesis, then there are mismatched parentheses.\n             */\n            if (operatorValue === '(') {\n                throw new SyntaxError('Unmatched parenthesis.');\n            }\n            const operator = this.operators[operatorValue];\n            const operands = [];\n            let numOperands = operator.type;\n            while (numOperands--) {\n                operands.unshift(outputStream.pop());\n            }\n\n            /**\n             * Pop the operator onto the output queue.\n             */\n            outputStream.push(evaluator(operator.value, operands));\n        }\n\n        if (outputStream.length > 1) {\n            throw new SyntaxError('Could not reduce to a single expression.');\n        }\n\n        return outputStream[0];\n    }\n\n    /**\n     *\n     * @param {string} sql\n     * @returns {[]}\n     */\n    toArray(sql) {\n\n        let expression = [];\n        let tokenCount = 0;\n        let lastToken = undefined;\n        const expressionParentheses = [];\n\n        this.tokenizer.tokenize(`(${sql})`, (token, surroundedBy) => {\n            \n            tokenCount++;\n            \n            switch (token) {\n                case '(':\n                    expressionParentheses.push(expression.length);\n                    break;\n                case ')':\n                    const precedenceParenthesisIndex = expressionParentheses.pop();\n\n                    let expressionTokens = expression.splice(precedenceParenthesisIndex, expression.length);\n\n                    while(expressionTokens && expressionTokens.constructor === Array && expressionTokens.length === 1) {\n                        expressionTokens = expressionTokens[0];\n                    }\n                    expression.push(expressionTokens);\n                    break;\n                case '':\n                    break;\n                case ',':\n                    break;\n                default:\n                    let operator = null;\n                    if (!surroundedBy) {\n                        operator = this.getOperator(token);\n                        if (token === '-' && (tokenCount === 1 || (lastToken === '(' || (lastToken && lastToken.constructor === Operator)))) {\n                            operator = this.getOperator(OPERATOR_UNARY_MINUS);\n                        }\n                    }\n                    expression.push(operator ? operator : token);\n                    break;\n            }\n            lastToken = token;\n        });\n\n        while(expression && expression.constructor === Array && expression.length === 1) {\n            expression = expression[0];\n        }\n\n        return expression;\n    }\n\n    /**\n     *\n     * @param {string|Symbol} operatorValue1\n     * @param {string|Symbol} operatorValue2\n     * @returns {boolean}\n     */\n    operatorPrecedenceFromValues(operatorValue1, operatorValue2) {\n\n        return this.operators[operatorValue2].precedence <= this.operators[operatorValue1].precedence;\n    }\n\n    /**\n     *\n     * @param {string|Symbol} operatorValue\n     * @returns {*}\n     */\n    getOperator(operatorValue) {\n\n        if (typeof operatorValue === 'string') {\n            return this.operators[operatorValue.toUpperCase()];\n        }\n        if (typeof operatorValue === 'symbol') {\n            return this.operators[operatorValue];\n        }\n        return null;\n    }\n\n\n    /**\n     *\n     * @param {string|Symbol} operatorValue\n     * @param {[]} operands\n     * @returns {*}\n     */\n    defaultEvaluator(operatorValue, operands) {\n\n        /**\n         * Convert back to regular minus, now that we have the proper number of operands.\n         */\n        if (operatorValue === OPERATOR_UNARY_MINUS) {\n            operatorValue = '-';\n        }\n        /**\n         * This is a trick to avoid the problem of inconsistent comma usage in SQL.\n         */\n        if (operatorValue === ',') {\n            return [].concat(operands[0], operands[1]);\n        }\n\n        return {\n            [operatorValue]: operands\n        };\n    }\n\n    /**\n     * \n     * @returns {{operators: [{}], tokenizer: {shouldTokenize: string[], shouldMatch: string[], shouldDelimitBy: string[]}}}\n     */\n    static get defaultConfig() {\n        \n        return {\n            operators: [ // TODO: add more operator definitions\n                {\n                    '!': OPERATOR_TYPE_UNARY\n                },\n                unaryMinusDefinition,\n                {\n                    '^': OPERATOR_TYPE_BINARY\n                },\n                {\n                    '*': OPERATOR_TYPE_BINARY,\n                    '/': OPERATOR_TYPE_BINARY,\n                    '%': OPERATOR_TYPE_BINARY\n                },\n                {\n                    '+': OPERATOR_TYPE_BINARY,\n                    '-': OPERATOR_TYPE_BINARY\n                },\n                {\n                    '=': OPERATOR_TYPE_BINARY,\n                    '<': OPERATOR_TYPE_BINARY,\n                    '>': OPERATOR_TYPE_BINARY,\n                    '<=': OPERATOR_TYPE_BINARY,\n                    '>=': OPERATOR_TYPE_BINARY,\n                    '!=': OPERATOR_TYPE_BINARY\n                },\n                {\n                    ',': OPERATOR_TYPE_BINARY // We treat commas as an operator, to aid in turning arbitrary numbers of comma-separated values into arrays.\n                },\n                {\n                    'NOT': OPERATOR_TYPE_UNARY\n                },\n                {\n                    'BETWEEN': OPERATOR_TYPE_TERNARY,\n                    'IN': OPERATOR_TYPE_BINARY,\n                    'IS': OPERATOR_TYPE_BINARY,\n                    'LIKE': OPERATOR_TYPE_BINARY\n                },\n                {\n                    'AND': OPERATOR_TYPE_BINARY\n                },\n                {\n                    'OR': OPERATOR_TYPE_BINARY\n                }\n            ],\n            tokenizer: {\n                shouldTokenize: ['(', ')', ',', '*', '/', '%', '+', '-', '=', '!=','!', '<', '>', '<=', '>=', '^'],\n                shouldMatch: ['\"', \"'\", '`'],\n                shouldDelimitBy: [' ', \"\\n\", \"\\r\", \"\\t\"]\n            }\n        };\n    }\n\n    static get Operator() {\n        return Operator;\n    }\n\n    static get OPERATOR_UNARY_MINUS() {\n        return OPERATOR_UNARY_MINUS;\n    }\n}\n\n/**\n *\n * @type {SqlWhereParser}\n */\nmodule.exports = SqlWhereParser;","/**\n * Explains the input param direction.\n */\nexport const AnalysisToolParamDirection = {\n  /**\n   * Direction is input.\n   */\n  Input: \"esriGPParameterDirectionInput\",\n  /**\n   * Direction is output.\n   */\n  Output: \"esriGPParameterDirectionOutput\"\n} as const;\nexport type AnalysisToolParamDirection = typeof AnalysisToolParamDirection[keyof typeof AnalysisToolParamDirection];\n","import { AnalysisToolDataItem } from \"./analysis-tool-data\";\nimport { AnalysisToolParamDataType } from \"./analysis-tool-param-data-type\";\nimport { AnalysisToolParamDirection } from \"./analysis-tool-param-direction\";\nimport { AnalysisToolParamFilter } from \"./analysis-tool-param-filter\";\nimport { AnalysisToolParamParameterType } from \"./analysis-tool-param-parameter-type\";\n\nexport const AnalysisEngine = {\n  Standard: \"standard\",\n  GeoAnalytics: \"geoanalytics\",\n  Raster: \"raster\",\n  Pipelines: \"pipelines\",\n  Session: \"session\"\n} as const;\n\nexport const AnalysisType = {\n  Tool: \"tool\",\n  RasterFunction: \"rft\",\n  WebTool: \"webTool\"\n} as const;\n\nexport type AnalysisEngine = (typeof AnalysisEngine)[keyof typeof AnalysisEngine];\nexport type AnalysisType = (typeof AnalysisType)[keyof typeof AnalysisType];\n\n/**\n * Explains about the analysis tool with param details from rest api.\n */\nexport interface AnalysisToolParam {\n  /**\n   * Name of the input parameter.\n   */\n  name: string;\n  /**\n   * Data type of the input parameter.\n   */\n  dataType: AnalysisToolParamDataType;\n  /**\n   * Diaplay name (label) of the parameter.\n   */\n  displayName?: string;\n  /**\n   * Description of the input param.\n   */\n  description?: string;\n  /**\n   * Direction of the output or input.\n   */\n  direction: AnalysisToolParamDirection;\n  /**\n   * Default value to be chosen for the parameter.\n   */\n  defaultValue?: AnalysisToolDataItem;\n  /**\n   * Explains whether the param is optional or required.\n   */\n  parameterType?: AnalysisToolParamParameterType;\n  /**\n   * Showing “categories”/sections in the tool.\n   */\n  category?: string;\n  /**\n   * List of choices for the param value to be chosen.\n   */\n  choiceList?: string[];\n  /**\n   * Explains from which param.\n   */\n  dependency?: string;\n  /**\n   * Filter for the param.\n   */\n  filter?: AnalysisToolParamFilter;\n  /**\n   * Sub-parameter info for compound data types like GP Value Table.\n   */\n  parameterInfos?: AnalysisToolParam[];\n}\n","import { AnalysisToolDataItem } from \"./analysis-tool-data\";\nimport { AnalysisToolParam } from \"./analysis-tool-param\";\nimport { AnalysisToolUIParam } from \"./analysis-tool-ui-param\";\n\n/**\n * Here are some examples of rules\n *\n * This is an equals rule:\n * ```json\n * {\n *   ruleType: \"equals\",\n *   valueA: \"$[Data].value\",\n *   valueB: \"10\",\n *   destination: \"$[Data].destination\",\n *   effectParams: {\n *     color: \"red\"\n *   }\n * }\n * ```\n * This will update `destination` with the specified `effectParams` if `valueA`  equals `valueB`.\n * In this case, if `valueA` is 10 and `valueB` is 10, `destination.color` will be set to `red`.\n *\n * This is a set rule:\n * ```json\n * {\n *   ruleType: \"set\",\n *   value: \"10\",\n *   destination: \"$[Data].numberInput\",\n *   property: \"min\"\n * }\n * ```\n * This will not perform any evaluation. It will indiscriminately set `destination.property` to `value`.\n * In this case `$[Data].numberInput.min` will be set to `10`.\n * Note that the set rule does not use effectParams.\n *\n * This is an expression rule:\n * ```json\n * {\n * ruleType: \"expression\",\n *   expression: \"$[Data].value > 10\",\n *   destination: \"$[Data].destination\",\n *   effectParams: {\n *     color: \"red\"\n *   }\n * }\n * ```\n * This will evaluate an sql expression and update `destination` with the specified `effectParams` if the expression evaluates to true.\n * In this case, if `value` is greater than 10, `destination.color` will be set to `red`.\n */\n\n// TODO: remove any throws spec error in JSONEditor\nexport type AnalysisToolRuleEffectParams = AnalysisToolUIParam | AnalysisToolParam | null | any;\n\n/**\n * The types that a rule can have.\n */\nexport const AnalysisRuleType = {\n  Equals: \"equals\",\n  Set: \"set\",\n  Expression: \"expression\"\n} as const;\nexport type AnalysisRuleType = (typeof AnalysisRuleType)[keyof typeof AnalysisRuleType];\n\nexport interface AnalysisExpressionOperator {\n  value: AnalysisOperator;\n  type: number;\n  precedence: number;\n}\n\n/**\n * The operators that can be used to evaluate an expression.\n */\nexport const AnalysisOperator = {\n  And: \"AND\",\n  Or: \"OR\",\n  Not: \"NOT\",\n  In: \"IN\",\n  NotIn: \"NOT IN\",\n  Equals: \"=\",\n  GreaterThan: \">\",\n  LessThan: \"<\",\n  GreaterThanOrEquals: \">=\",\n  LessThanOrEquals: \"<=\",\n  Like: \"LIKE\",\n  NotLike: \"NOT LIKE\"\n} as const;\nexport type AnalysisOperator = (typeof AnalysisOperator)[keyof typeof AnalysisOperator];\n\n/**\n * A rule can either be an equals, set, or expression.\n * If the condition of the rule is met then the effect is applied.\n */\nexport type AnalysisToolUIRule = AnalysisEqualsRule | AnalysisSetRule | AnalysisExpressionRule;\n\n/**\n * The base type for all rules.\n */\nexport interface AnalysisBaseRule {\n  /**\n   * The type of rule.\n   */\n  ruleType: AnalysisRuleType;\n  // TODO: extract destination and effectParams into separate interface and make an array\n  /**\n   * A name, or list of names, of the parameters to apply the rules to.\n   */\n  destination: string | string[];\n}\n\n/**\n * Checks equality, if it is equal then the effect is applied.\n */\nexport interface AnalysisEqualsRule extends AnalysisBaseRule {\n  /**\n   * The type of the rule. Always equals.\n   */\n  ruleType: \"equals\";\n  /**\n   * The first value to compare.\n   */\n  valueA: AnalysisToolDataItem;\n  /**\n   * The second value to compare.\n   */\n  valueB: AnalysisToolDataItem;\n  /**\n   * The parameters to apply to the rule.\n   */\n  effectParams: AnalysisToolRuleEffectParams;\n}\n\n/**\n * Indiscriminately sets the value of source to the property on the destination.\n */\nexport interface AnalysisSetRule extends AnalysisBaseRule {\n  /**\n   * The type of the rule. Always set.\n   */\n  ruleType: \"set\";\n  /**\n   * The value to set.\n   */\n  value: AnalysisToolDataItem;\n  /**\n   * The property name to set on the destination.\n   */\n  property: string;\n}\n\n/**\n * An expression rule is a rule that is evaluated and if it is true then the effect is applied.\n */\nexport interface AnalysisExpressionRule extends AnalysisBaseRule {\n  /**\n   * The type of the rule. Always expression.\n   */\n  ruleType: \"expression\";\n  /**\n   * expression follows SQL where clause expression syntax\n   */\n  expression: string;\n  /**\n   * The parameters to apply to the rule.\n   */\n  effectParams: AnalysisToolRuleEffectParams;\n}\n\n/**\n * The format that an expression must take.\n * It must be [ expressionItem, operator, expressionItem ]\n * this will look something like this: [ x, \">\", y ] or [ x, \">=\", 32 ] and so on.\n */\nexport type AnalysisExpression = [\n  AnalysisToolDataItem | AnalysisExpression,\n  AnalysisExpressionOperator,\n  AnalysisToolDataItem | AnalysisExpression\n];\n\n/**\n * Rule used for run time validation\n */\nexport interface AnalysisValidationRule {\n  expression: string;\n  errorKey: string;\n}\n","import { AnalysisToolUITravelMode } from \"./analysis-tool-ui-travel-mode\";\nimport { AnalysisExpression } from \"./analysis-tool-ui-rule\";\nimport { AnalysisRasterToolContext, AnalysisToolContext } from \"./analysis-tool-context\";\nimport { AnalysisToolUIParam } from \"./analysis-tool-ui-param\";\nimport { AnalysisToolParam } from \"./analysis-tool-param\";\nimport { AnalysisRFxDataItem } from \"./analysis-rfx-ui\";\n\nimport {\n  GPBoolean,\n  GPDataFile,\n  GPDouble,\n  GPFeatureRecordSetLayer,\n  GPLinearUnit,\n  GPMultiValue,\n  GPRasterDataLayer,\n  GPRecordSet,\n  GPString\n} from \"./geoprocessing-rest-data-types\";\nimport { GPQuery } from \"./query-builder-types\";\n\nexport type AnalysisToolPrimitiveDataItem =\n  | AnalysisToolContext\n  | AnalysisRasterToolContext\n  | GPBoolean\n  | GPString\n  | GPDouble\n  | GPFeatureRecordSetLayer\n  | GPRecordSet\n  | GPRasterDataLayer\n  | GPDataFile\n  | GPMultiValue\n  | GPLinearUnit\n  | GPQuery\n  | AnalysisToolUITravelMode\n  | AnalysisExpression\n  | undefined\n  | null;\n\nexport type AnalysisToolDataItem =\n  | AnalysisToolPrimitiveDataItem\n  | AnalysisRFxDataItem\n  | { [key: string]: AnalysisToolPrimitiveDataItem } // key-value\n  | { [key: string]: AnalysisToolPrimitiveDataItem }[]; // value table\n\n/**\n * enum name for property where the parameter view model is stored\n */\nexport const ParamViewModelKey = \"parameterViewModel\";\n\n/**\n * JSON representation of a parameter that Analysis tool would submit for execution.\n */\nexport interface AnalysisToolData {\n  [key: string]: AnalysisToolDataItem;\n  context?: AnalysisToolContext;\n  [ParamViewModelKey]?: AnalysisParamModel;\n}\n\n/**\n * The combined properties used in analysis tool to keep track of the tool form.\n */\nexport interface AnalysisToolFormData {\n  jobParams?: AnalysisToolData;\n  toolUiParameters?: AnalysisToolData;\n}\n\n/**\n * Keys from a tool ui parameter to pick for saving to the parameter view model\n * These are the keys available in the history details to access info about the parameter state\n * For future extending, a property just needs to be added to this array to include it\n */\nexport const UIParamModelKeys = [\n  \"choiceListLabels\",\n  \"label\",\n  \"visible\",\n  \"componentName\",\n  \"serializationType\",\n  \"serializationParameterName\",\n  \"serializationKeys\",\n  \"uiParameterInfoSubSet\",\n  \"submissionName\"\n] as const;\n\n/**\n * Keys from a tool parameter to pick for saving to the parameter view model\n * These are the keys available in the history details to access info about the parameter state\n * For future extending, a property just needs to be added to this array to include it\n */\nexport const ToolParamModelKeys = [\"dataType\", \"choiceList\", \"parameterType\"] as const;\n\n/**\n * Intermediary types for cleanliness\n */\ntype AnalysisUIParamModel = Pick<AnalysisToolUIParam, (typeof UIParamModelKeys)[number]>;\ntype AnalysisToolParamModel = Pick<AnalysisToolParam, (typeof ToolParamModelKeys)[number]>;\n\n/**\n * Parameter view model containing a subset of UI parameters and tool parameters keyed on parameter name\n * Saved with the uiOnlyParameters to pass more information about the UI at job submission to the history details\n * The tool component performs a `pick` from the above array or properties, providing a \"snapshot\" for the ui\n * Examples:\n *  { \"name\": \"pointLayer\", \"label\": \"$inputPointLayer\", \"componentName\": \"analysis-layer-input\", \"layerFilterType\": [\"feature_point\"] }\n *  -> { pointLayer: { label: \"$inputPointLayer\", componentName: \"analysis-layer-input\" }}\n *\n *  { \"name\": \"ringType\", \"visible\": false, \"choiceList\": [\"Disks\", \"Rings\"], \"choiceListLabels\": { \"Disks\": \"$disks\", \"Rings\": \"$rings\" }}\n *  -> { ringType: { choiceList: [\"Disks\", \"Rings\"], choiceListLabels:  \"Disks\": \"$disks\", \"Rings\": \"$rings\" }, visible: false }}\n */\nexport type AnalysisParamModel = Record<string, Partial<AnalysisUIParamModel & AnalysisToolParamModel>>;\n\n/**\n * The serialization method to use when getting the value of an input.\n * This can be extended to support other serialization methods.\n */\nexport const SerializationType = {\n  default: \"default\",\n  sequentialValues: \"sequentialValues\",\n  sequentialValueArray: \"sequentialValueArray\",\n  arrayValues: \"arrayValues\",\n  string: \"stringValue\",\n  wrapInAnArray: \"wrapInAnArray\"\n} as const;\nexport type SerializationType = (typeof SerializationType)[keyof typeof SerializationType];\n","import {\n  AnalysisEngine,\n  AnalysisExpression,\n  AnalysisToolData,\n  AnalysisToolDataItem,\n  AnalysisToolUIRule,\n  AnalysisType,\n  AnalysisValidationRule,\n  LocaleItem\n} from \"analysis-ui-schema\";\n// common interfaces used by all packages\n\n/**\n * Event payload of job result information from successful job run.\n */\nexport interface AnalysisJobResults {\n  /**\n   * Returned results from GP server after a successful job execution\n   */\n  results: __esri.ParameterValue[];\n  /**\n   * Information about the GP job that is associated with the results\n   */\n  jobInfo: __esri.JobInfo;\n}\n\n/**\n * Event payload of job status information from job run.\n */\nexport interface AnalysisGPJobStatus {\n  /**\n   * Information about the GP job that is being executed, including jobId, jobStatus, Messages, etc.\n   */\n  jobInfo: __esri.JobInfo;\n\n  /**\n   * Data that is passed once per job, only on initial GP job submission in order to create history items\n   */\n  submissionData?: {\n    /**\n     * internal tool name used to fetch t9n and render appropriate UI\n     */\n    toolName: string;\n    /**\n     * type of analysis engine associated with the tool which created the job\n     */\n    analysisEngine: AnalysisEngine;\n    /**\n     * type of analysis category associated with the tool or raster function which created the job\n     */\n    analysisType: AnalysisType;\n    /**\n     * All tool parameters that were submitted with the job\n     */\n    jobParams: AnalysisToolData;\n    /**\n     * Whatever is in the tool data but not part of job params\n     */\n    toolUiParameters: AnalysisToolData;\n\n    /**\n     * The Url associated with the webtool if the execution is for webtools, otherwise undefined\n     */\n    webToolServerUrl?: string;\n  };\n}\n\n/**\n * Multiple functions share these arguments as its passed through\n * Shared interface to use\n */\ninterface SharedRuleProps {\n  /**\n   * analysis tool data where a value can be pulled from\n   */\n  data: AnalysisToolData;\n  /**\n   * tools rendered params where a value can be pulled from\n   */\n  renderedParams: Record<string, HTMLElement>;\n  /**\n   * Instance of the current Analysis Tool.\n   */\n  currentTool?: HTMLElement;\n}\n\n/**\n * Argument types for processRule\n */\nexport interface ProcessRuleProps extends SharedRuleProps {\n  /**\n   * rule to process\n   */\n  rule: AnalysisToolUIRule;\n}\n\n/**\n * Argument types for parseValue\n */\nexport interface ParseValueProps extends SharedRuleProps {\n  /**\n   * value to parse for the rule\n   */\n  value: string | AnalysisToolDataItem | null;\n}\n\n/**\n * Argument types for evaluate\n */\nexport interface EvaluateProps extends SharedRuleProps {\n  /**\n   * expression to be evaluated in rule processing\n   */\n  expressions: AnalysisExpression | AnalysisExpression[] | null;\n}\n\n/**\n * Argument types for processValidationRule\n */\nexport interface ProcessValidationRuleProps extends SharedRuleProps {\n  /**\n   * rule to process\n   */\n  rule: AnalysisValidationRule;\n}\n\n/**\n * ArcGIS Item Types supported  in Analysis Results.\n */\nexport const AnalysisSupportedItemTypes = {\n  // ported from https://devtopia.esri.com/WebGIS/arcgis-js-api/blob/master/esri/dijit/analysis/ItemTypes.js\n  ImageService: \"Image Service\",\n  FeatureService: \"Feature Service\",\n  BigData: \"Big Data File Share\",\n  Csv: \"CSV\",\n  Xls: \"Microsoft Excel\",\n  MapService: \"Map Service\",\n  FeatureLayer: \"Feature Layer\",\n  BigDataFeature: \"featureClass\",\n  Table: \"Table\",\n  BigDataTable: \"table\", //Big Data Table,\n  MultiValueGrid: \"Multi-Variable Grid\",\n  GeoprocessingService: \"Geoprocessing Service\",\n  RasterFunctionTemplate: \"Raster function template\",\n  BdfsTemplate: \"bdfstemplate\",\n  DeepLearningPackage: \"Deep Learning Package\",\n  File: \"files\",\n  Doc: \"documents\",\n  Image: \"images\",\n  PDF: \"pdfs\",\n  Csvs: \"csvs\"\n} as const;\nexport type AnalysisSupportedItemTypes = (typeof AnalysisSupportedItemTypes)[keyof typeof AnalysisSupportedItemTypes];\n\n/**\n * Key to hold the selected layer object in the data, linked to the parameter\n */\nexport const SelectedLayersKey = \"_SelectedLayers\";\n\n/**\n * Key to hold the data type of a parameter, linked to an input component\n */\nexport const ParamGroupDataTypeKey = \"_ParamGroupDataType\";\n\nexport type ProcessedDataProperties = { [key: string]: any };\n\n/**\n * Result of `AnalyzeGeocodeInput`\n */\nexport type AnalyzeGeocodeResult = {\n  // ported from https://developers.arcgis.com/rest/services-reference/enterprise/analyze-geocode-input.htm\n  field_info: string;\n  column_names: string;\n  file_type: \"xlsx\" | \"csv\" | \"table\";\n  column_delimiter: \"SPACE\" | \"TAB\" | \"COMMA\" | \"PIPE\" | \"SEMICOLON\" | \"\";\n  text_qualifier: \"SINGLE_QUOTE\" | \"DOUBLE_QUOTE\" | \"\";\n  field_mapping: string;\n  header_row_exists: boolean;\n  singleline_field?: string;\n};\n\n/**\n * Federated Server on ArcGIS Enterprise\n */\nexport interface FederatedServer {\n  id: string;\n  name: string;\n  adminUrl: string;\n  url: string;\n  isHosted: boolean;\n  serverType: string;\n  serverRole: string;\n  serverFunction: string;\n  label?: string;\n  status?: string;\n  message?: string;\n  disabled?: boolean;\n  isSDS?: boolean;\n  imageHostingDisabled?: boolean;\n}\n\n/**\n * Format of the helpMap object received from portal.\n *\n */\nexport interface PortalHelpMapJSON {\n  /**\n   * v is the version used\n   */\n  v: string;\n  /**\n   * object of help ids mapped to help urls\n   */\n  m: LocaleItem;\n}\n\n/**\n * Server Edition license names.\n */\nexport const ServerEditionName = {\n  Advanced: \"svradvanced\",\n  Basic: \"svrbasic\",\n  Standard: \"svrstandard\"\n} as const;\nexport type ServerEditionName = (typeof ServerEditionName)[keyof typeof ServerEditionName];\n\n/**\n * Server Edition license names.\n */\nexport const ServerEditionFeatureName = {\n  Advanced: \"esriServerLicenseAdvanced\",\n  Basic: \"esriServerLicenseBasic\",\n  Standard: \"esriServerLicenseStandard\"\n} as const;\nexport type ServerEditionFeatureName = (typeof ServerEditionFeatureName)[keyof typeof ServerEditionFeatureName];\n\n/**\n * ArcGIS Server Response on ArcGIS Enterprise\n * Below is a sample ArcGIS Enterprise request URL used to access an individual server resource:\n * https://machine.domain.com/webadaptor/sharing/rest/portals/0123456789ABCDEF/servers/J5TUOrNQurCDgHFq?f=pjson\n */\nexport interface FederatedServerLicenseInfo extends FederatedServer {\n  edition: {\n    name: ServerEditionName;\n    version: string;\n    canExpire: boolean;\n    expiration: number;\n    featureName: ServerEditionFeatureName;\n  };\n  level: {\n    name: \"svrenterprise\";\n    version: string;\n    canExpire: boolean;\n    expiration: number;\n  };\n}\n\n/**\n * Possible deployments based on the portal source json\n */\nexport const PortalDeploymentType = {\n  Enterprise: \"ArcGISEnterprise\",\n  Kubernetes: \"ArcGISEnterpriseOnKubernetes\"\n} as const;\nexport type PortalDeploymentType = (typeof PortalDeploymentType)[keyof typeof PortalDeploymentType];\n\nexport class GetUIOnlyParamsProps {\n  toolData: AnalysisToolData;\n\n  keysToRemove: string[];\n\n  partialKeysToRemove?: string[];\n\n  isWebTool?: boolean;\n}\n\nexport class GetUIOnlyParamsToDisplayProps {\n  combinedParams: AnalysisToolData;\n\n  toolName: string;\n\n  isWebTool?: boolean;\n}\n","import { AnalysisEngine, AnalysisToolData, AnalysisType } from \"analysis-ui-schema\";\n\nexport interface AnalysisHistoryItem {\n  toolName: string;\n  startTimestamp: number;\n  endTimestamp: number | undefined;\n  jobParams: AnalysisToolData;\n  toolUiParameters: AnalysisToolData;\n  analysisEngine: AnalysisEngine;\n  analysisType: AnalysisType;\n  category: \"tools\" | \"rasterfunction\";\n  progress?: AnalysisJobProgress;\n  jobInfo: __esri.JobInfo;\n  results: __esri.ParameterValue[] | undefined;\n  resourceName?: string;\n  webToolServerUrl?: string;\n}\n\n/**\n * The paired down version of the __esri.ParameterValue with all properties\n * stringified and safe to be saved to an item resource. Only intended to be used for saving.\n */\nexport interface SerializedParameterValue {\n  value: string | string[];\n  dataType: string;\n  paramName: string;\n}\n\nexport interface SerializedHistoryItem extends Omit<AnalysisHistoryItem, \"jobInfo\" | \"results\"> {\n  jobInfo: string;\n  results: SerializedParameterValue[] | undefined;\n}\n\ninterface AnalysisJobProgress {\n  /**\n   *  Represent the progress value as percentage\n   * @minimum 0\n   * @maximum 1\n   * @default 0\n   */\n  percent: number;\n  message: string;\n}\n\nexport const AnalysisJobStatus = {\n  Canceled: \"job-cancelled\",\n  Canceling: \"job-cancelling\",\n  Deleted: \"job-deleted\",\n  Deleting: \"job-deleting\",\n  TimedOut: \"job-timed-out\",\n  Executing: \"job-executing\",\n  Failed: \"job-failed\",\n  New: \"job-new\",\n  Submitted: \"job-submitted\",\n  Succeeded: \"job-succeeded\",\n  Waiting: \"job-waiting\"\n};\n\nexport type AnalysisJobStatus = (typeof AnalysisJobStatus)[keyof typeof AnalysisJobStatus];\n\nexport const InProgressStatuses = [\n  AnalysisJobStatus.Canceling,\n  AnalysisJobStatus.Deleting,\n  AnalysisJobStatus.Executing,\n  AnalysisJobStatus.New,\n  AnalysisJobStatus.Submitted,\n  AnalysisJobStatus.Waiting\n];\n\nexport const CompletedStatuses = [\n  AnalysisJobStatus.Canceled,\n  AnalysisJobStatus.Deleted,\n  AnalysisJobStatus.Succeeded,\n  AnalysisJobStatus.TimedOut,\n  AnalysisJobStatus.Failed\n];\n\n/**\n * The interface used to store the analysis history in session storage and an item resource\n */\nexport interface AnalysisHistory {\n  /**\n   * The primary data to store and load\n   */\n  items: SerializedHistoryItem[];\n  /**\n   * The name of the file suffixing the prefix.\n   */\n  fileName: string;\n  /**\n   * The version of AnalysisHistoryItem stored in the file\n   */\n  version: string;\n}\n\n/**\n * The interface used to describe the item retrieved when trying to get licenses of a user\n */\nexport interface UserLicensedItem {\n  itemId: string;\n  entitlements: string[];\n}\n\nexport type SupportedResultItemType = __esri.Layer[\"type\"] | __esri.PortalItem[\"type\"];\n\nexport const historyVersion = \"1.2.0\" as const;\n","import ParameterValue from \"@arcgis/core/rest/support/ParameterValue\";\n\nimport { LayerUrlFilter } from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem } from \"../common\";\n\nimport { AnalysisHistoryItem, historyVersion } from \"./interfaces\";\n\n/**\n * Fixes the raster tool category by updating old items from \"rasterfunction\" to \"rastertool\"\n * and also adds a version number if it was missing.\n * @param {AnalysisHistoryItem} historyItem the item to update\n * @returns {AnalysisHistoryItem} the updated history item\n */\nfunction fixRasterToolsCategory(historyItem: AnalysisHistoryItem): AnalysisHistoryItem {\n  const updatedHistoryItem = historyItem;\n  if (historyItem.category === \"rasterfunction\") {\n    updatedHistoryItem.category = \"tools\";\n  }\n  return updatedHistoryItem;\n}\n\n/**\n * Converts gpDataType results into a partially blank parameterValue object.\n * Makes an assumption that it is a feature record set layer because at this point, non layer results\n * were not supported.\n * @param {AnalysisHistoryItem} historyItem the history item to update\n * @returns {AnalysisHistoryItem} the updated history item\n */\nfunction convertResultsToParameterValues(historyItem: AnalysisHistoryItem): AnalysisHistoryItem {\n  const updatedHistoryItem = historyItem;\n  updatedHistoryItem.results = updatedHistoryItem.results\n    ?.filter((result: LayerUrlFilter | ParameterValue) => isEmptyDataItem(result) === false)\n    .map((result: LayerUrlFilter | ParameterValue) => {\n      return \"value\" in result === true && typeof result === \"object\"\n        ? (result )\n        : new ParameterValue({\n            paramName: \"\",\n            dataType: \"feature-record-set-layer\",\n            value: result \n          });\n    });\n  return updatedHistoryItem;\n}\n\n/**\n * Converts items from 1.0.0 to 1.1.0\n * @param {AnalysisHistoryItem} historyItem the item to update\n * @returns {AnalysisHistoryItem} the updated history item\n */\n// eslint-disable-next-line  @typescript-eslint/naming-convention\nfunction convert_1_0_0_to_1_1_0(historyItem: AnalysisHistoryItem): AnalysisHistoryItem {\n  return fixRasterToolsCategory(historyItem);\n}\n\n/**\n * Converts items from 1.1.0 to 1.2.0\n * @param {AnalysisHistoryItem} historyItem the item to update\n * @returns {AnalysisHistoryItem} the updated history item\n */\n// eslint-disable-next-line  @typescript-eslint/naming-convention\nfunction convert_1_1_0_to_1_2_0(historyItem: AnalysisHistoryItem): AnalysisHistoryItem {\n  return convertResultsToParameterValues(historyItem);\n}\n\n/**\n * Updates a historyItem when loaded into the app to the current version\n * @param {AnalysisHistoryItem} historyItem the item to update\n * @param historyList\n * @param currentHistoryVersion\n * @returns {AnalysisHistoryItem} the updated history item\n */\nexport function convertHistorySpec(\n  historyList: AnalysisHistoryItem[],\n  currentHistoryVersion?: string\n): AnalysisHistoryItem[] {\n  let updatedHistoryList = historyList;\n  updatedHistoryList = historyList.map((historyItem: AnalysisHistoryItem) => {\n    let versionUpdatedTo = currentHistoryVersion;\n    let updatedHistoryItem = historyItem;\n    // this version comes from the top level of the history object and is passed in from the studio components store.\n    while (versionUpdatedTo !== historyVersion) {\n      // note that this version does not need to be returned as we set the version to latest in the studio components store\n      // when we save the history list.\n      switch (versionUpdatedTo) {\n        case \"1.0.0\":\n        case undefined:\n          updatedHistoryItem = convert_1_0_0_to_1_1_0(historyItem);\n          versionUpdatedTo = \"1.1.0\";\n          break;\n        case \"1.1.0\":\n          updatedHistoryItem = convert_1_1_0_to_1_2_0(historyItem);\n          versionUpdatedTo = \"1.2.0\";\n          break;\n        case \"1.2.0\":\n        default:\n          versionUpdatedTo = historyVersion;\n          break;\n      }\n    }\n    // return for map, not function.\n    return updatedHistoryItem;\n  });\n  return updatedHistoryList;\n}\n","import { get } from \"lodash-es\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore - this is a temporary fix for the type definition. We are ignoring this error: TS7016 Could not find declaration file\nimport SqlWhereParser from \"sql-where-parser\";\n\nimport {\n  AnalysisExpression,\n  AnalysisExpressionOperator,\n  AnalysisOperator,\n  AnalysisToolData,\n  AnalysisToolDataItem,\n  AnalysisToolParam,\n  AnalysisToolRuleEffectParams,\n  AnalysisUIParamComponentProps,\n  AnalysisUIParamProps\n} from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem } from \"../common\";\nimport {\n  EvaluateProps,\n  ParamGroupDataTypeKey,\n  ParseValueProps,\n  ProcessRuleProps,\n  ProcessValidationRuleProps,\n  SelectedLayersKey\n} from \"../interfaces\";\n\nexport * from \"./history-versioning\";\n\nfunction getValue<T>(object: T, key: string): AnalysisToolDataItem {\n  return get(object, key);\n}\n\nconst transformFns = [\"map\", \"mapkv\", \"filter\"] as const;\n\ntype Transform = (typeof transformFns)[number];\n\nconst isValidTransform = (t: string): t is Transform => transformFns.includes(t as Transform);\n\nconst arrayConcat = (acc: any[], curr: any) => [...acc, curr];\n\nconst toObject = (acc: any, curr: any) => ({ ...acc, ...curr });\n\nconst compose = (...fs: any[]) => fs.reduceRight((g, f) => (x: any) => g(f(x)));\n\nconst map = (transform: any) => (reducer: any) => (acc: any, curr: any) => reducer(acc, transform(curr));\n\nconst filter = (predicate: (i: any) => boolean) => (reducer: any) => (acc: any, curr: any) =>\n  predicate(curr) ? reducer(acc, curr) : acc;\n\nconst DATA_PREFIX = \"$[Data].\";\nconst COMPONENT_PREFIX = \"$[Component].\";\nconst CURRENT_TOOL_PREFIX = \"$[Component].currentTool.\";\nconst TRANSFORM_SUFFIX = /(^.+)(?:\\$\\{)((?:\\s*\\w+(?:\\s*\\w+)+)(?:\\s*;\\s*\\w+(?:\\s*\\w+)+)*\\s*)(?:\\}$)/;\n\n/**\n * Parses a value from the analysis tool data if applicable, otherwise just returns the value unchanged.\n * @param {ParseValueProps} props\n * @returns {AnalysisToolDataItem} The parsed value.\n */\nfunction parseValue(props: ParseValueProps): AnalysisToolDataItem {\n  const { data, renderedParams } = props;\n  const currentTool = props.currentTool ?? {};\n  let value = props.value;\n  let parsedValue: AnalysisToolDataItem;\n  if (typeof value === \"string\") {\n    let transforms: string | null = null;\n    const match = value.match(TRANSFORM_SUFFIX);\n    if (match !== null) {\n      transforms = match[2];\n      value = match[1];\n    }\n    if (value.includes(CURRENT_TOOL_PREFIX)) {\n      parsedValue = getValue(currentTool, value.split(CURRENT_TOOL_PREFIX)[1]);\n      parsedValue = isEmptyDataItem(parsedValue) ? undefined : parsedValue;\n    } else if (value.includes(COMPONENT_PREFIX)) {\n      parsedValue = getValue(renderedParams, value.split(COMPONENT_PREFIX)[1]);\n      parsedValue = isEmptyDataItem(parsedValue) ? undefined : parsedValue;\n    } else if (value.includes(DATA_PREFIX)) {\n      parsedValue = getValue(data, value.split(DATA_PREFIX)[1]);\n      parsedValue = isEmptyDataItem(parsedValue) ? undefined : parsedValue;\n    } else {\n      parsedValue = value;\n    }\n    if (transforms !== null) {\n      let toArray = true;\n      const fns: any[] = [];\n      transforms.split(\";\").forEach((t) => {\n        const [transform, ...args] = t.trim().split(/\\s+/);\n        if (isValidTransform(transform)) {\n          if (transform === \"map\") {\n            let fn;\n            if (args.length === 1) {\n              fn = (i: any) => i[args[0]];\n            } else {\n              fn = (i: any) => {\n                const result: { [key: string]: any } = {};\n                args.forEach((arg) => (result[arg] = i[arg]));\n                return result;\n              };\n            }\n            fns.unshift(map(fn));\n          } else if (transform === \"mapkv\") {\n            toArray = false;\n            const [key, val] = args;\n            fns.unshift(map((i: any) => ({ [i[key]]: i[val] })));\n          } else if (transform === \"filter\") {\n            const [attr, expr] = args;\n            if (expr) {\n              // TODO: evaluate expr, i.e: ...${filter fieldA > 20}\n            } else {\n              fns.unshift(filter((i: any) => i[attr] as boolean));\n            }\n          }\n        } else {\n          throw new Error(`Unknown transformation:${transform}`);\n        }\n      });\n      if (toArray) {\n        parsedValue = (<any>parsedValue).reduce(compose(...fns)(arrayConcat), []);\n      } else {\n        parsedValue = (<any>parsedValue).reduce(compose(...fns)(toObject), {});\n      }\n      parsedValue = isEmptyDataItem(parsedValue) ? undefined : parsedValue;\n    }\n  } else if (value === null) {\n    parsedValue = undefined;\n  } else {\n    parsedValue = value;\n  }\n  return parsedValue;\n}\n\n/**\n * Recursively parses the effect params and if any values have changed, returns a new object.\n * @param {AnalysisToolRuleEffectParams} effectParams the effect params to parse\n * @param {AnalysisToolData} data the analysis tool data\n * @param {Record<string, HTMLElement>} renderedParams currently rendered components\n * @param {HTMLElement | undefined} currentTool the instance of analysis tool\n * @returns {AnalysisToolRuleEffectParams} the parsed effect params\n */\nfunction parseEffectParams(\n  effectParams: AnalysisToolRuleEffectParams,\n  data: AnalysisToolData,\n  renderedParams: Record<string, HTMLElement>,\n  currentTool?: HTMLElement\n): AnalysisToolRuleEffectParams {\n  const isEffectParamsArray = Array.isArray(effectParams);\n  const updatedEffectParams: AnalysisToolRuleEffectParams = isEffectParamsArray ? [] : {};\n\n  // Track whether any values changed from the original effect params.\n  let hasValueChanged = false;\n  for (const [key, value] of Object.entries<AnalysisToolDataItem>(effectParams ?? {})) {\n    if (typeof value === \"object\") {\n      updatedEffectParams[key] = parseEffectParams(value, data, renderedParams, currentTool);\n      if (updatedEffectParams[key] !== value) hasValueChanged = true;\n    } else {\n      const parsedValue = parseValue({ value, data, renderedParams, currentTool });\n\n      const shouldMutateOriginal = isEffectParamsArray === true && parsedValue !== value;\n      if (shouldMutateOriginal) {\n        // To further narrow the scope of what will create a new object ref, if the\n        // value is directly contained in an array, we don't use the new effect params\n        // even if the value changed. This is often the case for \"choiceList\" and other\n        // similar params and is the original behavior of the code. This is done to\n        // prevent downstream component's from incorrectly emitting a change event.\n        // If this requirement changes, this check can be removed and\n        // the code should continue to use the new effect params if the value has changed.\n        // But for now, we will mutate the original effect params\n        effectParams[key] = parsedValue;\n      } else {\n        updatedEffectParams[key] = parsedValue;\n      }\n      if (shouldMutateOriginal === false && parsedValue !== value) hasValueChanged = true;\n    }\n  }\n\n  return hasValueChanged ? updatedEffectParams : effectParams ?? undefined;\n}\n\n/**\n * Evaluates a single expression formatted as: `{a} {operator} {b}`.\n * @param {AnalysisToolDataItem} a The first term of the expression.\n * @param {AnalysisToolDataItem} b The last term of the expression.\n * @param {AnalysisExpressionOperator | string} operator The operator of the expression.\n * @returns {boolean} true if the expression evaluates to true, false otherwise.\n */\nfunction evaluateExpression(\n  a?: AnalysisToolDataItem,\n  b?: AnalysisToolDataItem,\n  operator?: AnalysisExpressionOperator\n): boolean {\n  let result = false;\n  const bothBooleans = typeof a === \"boolean\" && typeof b === \"boolean\";\n  const canPerformNumericComparisons = a !== undefined && b !== undefined && a !== null && b !== null;\n  const canPatternMatch = typeof a === \"string\" && typeof b === \"string\";\n  switch (operator?.value.toUpperCase()) {\n    case AnalysisOperator.And:\n      result = bothBooleans && a && b;\n      break;\n    case AnalysisOperator.Or:\n      result = bothBooleans && (a || b);\n      break;\n    case AnalysisOperator.Equals:\n      result = a === b;\n      break;\n    case AnalysisOperator.Not:\n      result = a !== b;\n      break;\n    case AnalysisOperator.GreaterThan:\n      result = canPerformNumericComparisons && a > b;\n      break;\n    case AnalysisOperator.LessThan:\n      result = canPerformNumericComparisons && a < b;\n      break;\n    case AnalysisOperator.GreaterThanOrEquals:\n      result = canPerformNumericComparisons && a >= b;\n      break;\n    case AnalysisOperator.LessThanOrEquals:\n      result = canPerformNumericComparisons && a <= b;\n      break;\n    case AnalysisOperator.In:\n      // If using the `IN` operator with numbers, convert to strings for consistent comparison\n      result = Array.isArray(b) && b.map((val) => String(val)).includes(String(a));\n      break;\n    case AnalysisOperator.NotIn:\n      result = Array.isArray(b) && !b.map((val) => String(val)).includes(String(a));\n      break;\n    case AnalysisOperator.Like:\n      result = canPatternMatch && !!a.match(new RegExp(`^${b.replaceAll(/%+/g, \".*\")}$`));\n      break;\n    case AnalysisOperator.NotLike:\n      result = canPatternMatch && !a.match(new RegExp(`^${b.replaceAll(/%+/g, \".*\")}$`));\n      break;\n    default:\n      throw new Error(`Unknown operator:${operator}`);\n  }\n  return result;\n}\n\n/**\n * Evaluates the expressions array recursively.\n * @param {EvaluateProps} props\n * @returns {boolean} true if the expressions evaluate to true, false otherwise.\n */\nfunction evaluate(props: EvaluateProps): boolean {\n  const { expressions, data, renderedParams, currentTool } = props;\n  if (expressions !== null) {\n    const operator = expressions[1] as AnalysisExpressionOperator;\n    let operandA = expressions[0];\n    if (Array.isArray(operandA)) {\n      operandA = evaluate({ expressions: operandA as AnalysisExpression[], data, renderedParams, currentTool });\n    }\n\n    let operandB = expressions[2];\n    if (get(operandB, \"value\") === \"LIKE\" && operator.value === AnalysisOperator.Not && expressions[3] !== null) {\n      // Adjust operator & operandB for `NOT LIKE` case\n      operator.value = \"NOT LIKE\" as AnalysisOperator;\n      operandB = expressions[3] as AnalysisExpression;\n    } else if (get(operandB, \"value\") === \"IN\" && operator.value === AnalysisOperator.Not && expressions[3] !== null) {\n      // Adjust operator & operandB for `NOT IN` case\n      operator.value = \"NOT IN\" as AnalysisOperator;\n      operandB = expressions[3] as AnalysisExpression;\n    } else if (\n      Array.isArray(operandB) &&\n      operator.value !== AnalysisOperator.In &&\n      operator.value !== AnalysisOperator.NotIn\n    ) {\n      // If the operator is IN, treat operandB as an array of values\n      operandB = evaluate({ expressions: operandB as AnalysisExpression[], data, renderedParams, currentTool });\n    }\n\n    return evaluateExpression(\n      parseValue({ value: operandA, data, renderedParams, currentTool }),\n      parseValue({ value: operandB, data, renderedParams, currentTool }),\n      operator\n    );\n  } else {\n    // two return statements are unavoidable because of the recursion\n    return false;\n  }\n}\n\ntype EffectParams =\n  | (Omit<AnalysisUIParamProps, \"name\"> & AnalysisUIParamComponentProps)\n  | Omit<AnalysisToolParam, \"name\">;\n\n/**\n * Processes a rule and returns the effect to apply.\n * @param {ProcessRuleProps} props\n * @param props.rule rule to be processed\n * @param props.data tool data and state of the UI\n * @param props.renderedParams attributes of the rendered analysis components\n * @param {HTMLElement | undefined} props. the instance of analysis tool\n * @returns {AnalysisToolUIParam | AnalysisToolParam | undefined} the effect to apply\n */\nexport function processRule(props: ProcessRuleProps): EffectParams | undefined {\n  const { rule, data, renderedParams, currentTool } = props;\n  let effectParams: EffectParams | undefined;\n\n  switch (rule.ruleType) {\n    case \"equals\": {\n      const { valueA, valueB } = rule;\n      const parsedValueA = parseValue({ value: valueA, data, renderedParams, currentTool });\n      const parsedValueB = parseValue({ value: valueB, data, renderedParams, currentTool });\n      if (parsedValueA === parsedValueB) {\n        effectParams = parseEffectParams(rule.effectParams, data, renderedParams, currentTool);\n      }\n      break;\n    }\n    case \"set\": {\n      const parsedValue = parseValue({ value: rule.value, data, renderedParams, currentTool });\n\n      if (typeof rule.property !== \"string\") {\n        // Bad configuration, fail loudly\n        throw new Error(\"`set` rule must have a string `property`\");\n      }\n      effectParams = { [rule.property]: parsedValue } as EffectParams;\n      break;\n    }\n    case \"expression\": {\n      const parser = new SqlWhereParser();\n      const sqlArray = parser.toArray(rule.expression) as AnalysisExpression[];\n      const result = evaluate({ expressions: sqlArray, data, renderedParams, currentTool });\n      if (result === true) {\n        effectParams = parseEffectParams(rule.effectParams, data, renderedParams, currentTool);\n      }\n      break;\n    }\n    default:\n      break;\n  }\n  return effectParams;\n}\n\n/**\n *\n * @param props\n */\nexport function processValidationRule(props: ProcessValidationRuleProps): boolean {\n  const { rule, data, renderedParams, currentTool } = props;\n  const parser = new SqlWhereParser();\n  const sqlArray = parser.toArray(rule.expression) as AnalysisExpression[];\n  const result = evaluate({ expressions: sqlArray, data, renderedParams, currentTool });\n  return result;\n}\n\n/**\n * Generate a standard key to use for holding the selected layer in the data for a given input param\n * @param {paramName} the name of the param to use as a unique key prefix\n * @param paramName\n * @returns {string} the generated key\n */\nexport function generateSelectedLayersKey(paramName: string): string {\n  return `${paramName}${SelectedLayersKey}`;\n}\n\n/**\n * Generate a standard key to use for holding the data type in the data for a given input param\n * @param {string} paramName the name of the param to use as a unique key prefix\n * @returns {string} the generated key\n */\nexport function generateParamGroupDataTypeKey(paramName: string): string {\n  return `${paramName}${ParamGroupDataTypeKey}`;\n}\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","import memoize from \"fast-memoize\";\n\nimport { AnalysisToolUIRule } from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem, request } from \"../common\";\nimport { SupportedLocales } from \"../localization/interfaces\";\nimport { AnalyzeGeocodeResult, analyzeGeocodeInput } from \"../index\";\n\ntype GetToolUISourceCountryParams = {\n  geocodeServiceURL?: string;\n  locale: SupportedLocales;\n};\n\nexport type GetToolUIAddressFieldsParams = LayerParams | FileParams;\n\ntype AnalyzeGeocodeParams = {\n  asyncGeocodeUrl: string;\n  geocodeServiceURL?: string;\n  locale: SupportedLocales;\n};\n\nexport type LayerParams = AnalyzeGeocodeParams & {\n  inputTable?: {\n    url: string;\n    serviceToken?: string;\n  };\n  inputFileItem?: never;\n  inputFileParameters?: never;\n};\n\nexport type FileParams = AnalyzeGeocodeParams & {\n  inputFileItem?: { itemid: string };\n  inputFileParameters?: InputFileParams;\n  inputTable?: never;\n};\n\ntype InputFileParams = {\n  fileType: \"csv\" | \"xlsx\";\n  headerRowExists: \"true\" | \"false\";\n  columnDelimiter: \"SPACE\" | \"TAB\" | \"COMMA\" | \"PIPE\" | \"SEMICOLON\" | \"\";\n  textQualifier: \"SINGLE_QUOTE\" | \"DOUBLE_QUOTE\" | \"\";\n};\n\n// TODO: hard coded fields to simplify writing the rules since they are also hardcoded in `batchgeocode.tool.ui.json`.\n// Ideally, we need to get the address fields from the Geocoder and build UIParameters dynamically.\nconst addressFields = [\n  \"SingleLine\",\n  \"Address\",\n  \"Address2\",\n  \"Address3\",\n  \"Neighborhood\",\n  \"City\",\n  \"Subregion\",\n  \"Region\",\n  \"Postal\",\n  \"PostalExt\",\n  \"CountryCode\"\n];\n\nconst countrySerializerFn = (args: any[]): string => {\n  // memoize typings has args as any[] but we receive an object\n  // so doing this cast to use the locator URL as the cache key when it is defined.\n  const { geocodeServiceURL } = args as unknown as GetToolUISourceCountryParams;\n  return geocodeServiceURL ?? \"EMPTY_KEY\";\n};\n\nconst addressFieldsSerializerFn = (args: any[]): string => {\n  // memoize typings has args as any[] but we receive an object\n  // so doing this cast to use the locator URL + input as the cache key when they are defined.\n  const { geocodeServiceURL, inputFileItem, inputTable } = args as unknown as GetToolUIAddressFieldsParams;\n  const itemid = inputFileItem?.itemid;\n  const url = inputTable?.url;\n  return !isEmptyDataItem(geocodeServiceURL) && (!isEmptyDataItem(itemid) || !isEmptyDataItem(url))\n    ? `${geocodeServiceURL}${itemid}${url}`\n    : \"EMPTY_KEY\";\n};\n\n/**\n * This helper function for batch geocode does an asynchronous request for the selected\n * locator (geocodeServiceURL) to get its country list , which is then returned as country rule.\n * @param params\n * @returns {AnalysisToolUIRule} returns the rule for sourceCountry parameter.\n */\nexport const getToolUIJsonWithSourceCountryRule = memoize(\n  async (params: GetToolUISourceCountryParams): Promise<AnalysisToolUIRule> => {\n    const { geocodeServiceURL, locale } = params;\n    let countryRule: AnalysisToolUIRule;\n    if (isEmptyDataItem(geocodeServiceURL)) {\n      countryRule = {\n        ruleType: \"expression\",\n        expression: \"$[Data].geocodeServiceURL = NULL\",\n        destination: \"sourceCountry\",\n        effectParams: {\n          visible: false\n        }\n      };\n    } else {\n      let countries;\n      let detailedCountries;\n      try {\n        ({\n          data: { countries, detailedCountries }\n        } = await request(`${geocodeServiceURL}?f=json`, { responseType: \"json\" }));\n      } catch (err) {\n        console.error(\"Failed to get Locator info\");\n        throw err;\n      }\n      const labels: { [country: string]: string } = {};\n      detailedCountries.forEach((country: { name: string; localizedNames: { [key: string]: string } }) => {\n        // handle all cases where the user locale and the localized country names can be either 2 or 4 letter codes (i.e. \"en-US\" / \"en\")\n        const localizedNames = country.localizedNames;\n        const fourLetterLocale = locale.length > 2 && locale;\n        let localizedName: string | undefined;\n        if (typeof fourLetterLocale !== \"boolean\") {\n          localizedName = localizedNames[fourLetterLocale];\n        }\n        if (localizedName === undefined) {\n          const twoLetterLocale = locale.length === 2 ? locale.slice(0, 2) : locale;\n          localizedName = localizedNames[twoLetterLocale];\n          if (localizedName === undefined) {\n            const lang = Object.keys(localizedNames).find((key) => key.startsWith(twoLetterLocale));\n            if (lang !== undefined) {\n              localizedName = localizedNames[lang];\n            }\n          }\n        }\n        if (localizedName === null || localizedName === undefined || localizedName === \"\") {\n          // worst case scenario attempt to set the country label to English\n          localizedName = localizedNames[SupportedLocales.English] ?? localizedNames[SupportedLocales.EnglishUSA];\n        }\n        labels[country.name] = localizedName;\n      });\n      countryRule = {\n        ruleType: \"expression\",\n        expression: \"$[Data].geocodeServiceURL NOT null\",\n        destination: \"sourceCountry\",\n        effectParams: {\n          visible: true,\n          choiceList: countries,\n          choiceListLabels: labels\n        }\n      };\n    }\n    return countryRule;\n  },\n  {\n    serializer: countrySerializerFn\n  }\n);\n\n/**\n * This helper function for batch geocode does an asynchronous request for the selected\n * locator (geocodeServiceURL) and input data to get the suggested field mapping, which is then\n * returned as address rule alongside the original response of `AnalyzeGeocodeInput`.\n * @param params\n * @returns {{AnalysisToolUIRule, AnalyzeGeocodeResult}} returns the rule for geocodeUIParameters parameter, and the original response of `AnalyzeGeocodeInput`.\n */\nexport const getAddressFieldMappingRules = memoize(\n  async (\n    params: GetToolUIAddressFieldsParams\n  ): Promise<{ addressFieldsRule?: AnalysisToolUIRule; geocodeParameters?: AnalyzeGeocodeResult }> => {\n    const { geocodeServiceURL, inputFileItem, inputTable } = params;\n    let addressFieldsRule: AnalysisToolUIRule | undefined;\n    let geocodeParameters: AnalyzeGeocodeResult | undefined;\n    if (!isEmptyDataItem(geocodeServiceURL) && (!isEmptyDataItem(inputFileItem) || !isEmptyDataItem(inputTable))) {\n      let fieldInfo: Array<[string, string, number]>;\n      let fieldMapping: Array<[string, string]>;\n      geocodeParameters = await analyzeGeocodeInput(params);\n      try {\n        fieldInfo = JSON.parse(geocodeParameters.field_info);\n        fieldMapping = JSON.parse(geocodeParameters.field_mapping);\n      } catch (err) {\n        console.error(\"Failed to parse result of AnalyzeGeocodeInput\");\n        throw err;\n      }\n      const choiceList: string[] = fieldInfo.map((field) => field[0]);\n      const choiceListLabels = choiceList.reduce(\n        (acc: { [key: string]: string }, curr: string) => ({ ...acc, [curr]: curr }),\n        {}\n      );\n      addressFieldsRule = {\n        ruleType: \"expression\",\n        expression:\n          \"($[Data].geocodeServiceURL NOT null) AND (($[Data].inputTable NOT null) OR ($[Data].inputFileItem NOT null))\",\n        destination: `geocodeUIParameters`,\n        effectParams: addressFields.reduce((acc, curr, i) => {\n          const value = fieldMapping.find((mapping) => mapping[1] === curr)?.[0];\n          return {\n            ...acc,\n            [`UIparameterInfos[${i}].choiceList`]: choiceList,\n            [`UIparameterInfos[${i}].choiceListLabels`]: choiceListLabels,\n            [`UIparameterInfos[${i}].defaultValue`]: value\n          };\n        }, {})\n      };\n    }\n    return { addressFieldsRule, geocodeParameters };\n  },\n  {\n    serializer: addressFieldsSerializerFn\n  }\n);\n","import * as urlUtils from \"@arcgis/core/core/urlUtils\";\n\n/**\n * Returns the type of the server from the layer's url\n * @param {string} url layer url\n * @returns {string} the type  of the server\n */\nexport function getServiceType(url?: string): string {\n  let serviceType = \"\";\n  if (url !== undefined && url !== \"\") {\n    const urlParts: string[] = url.split(\"/\");\n\n    const services = urlParts.filter((part: string) => {\n      return new RegExp(\"[A-Z]{1}[a-z]+Server\").test(part) === true;\n    });\n    serviceType = services[services.length - 1];\n  }\n\n  return serviceType;\n}\n\n/**\n * Helper function for sanitizeTokensFromJobParams - splits the url into parts and removes the ?token\n * @param {string} url url to be sanitized\n * @returns {string} sanitized string\n */\nexport function sanitizeUrl(url: string): string {\n  return urlUtils.urlToObject(url).path;\n}\n","export interface ErrorStrings {\n  cannotWriteToItemResource: string;\n  defaultError: string;\n  failedToSaveHistory: string;\n  fullSessionStorage: string;\n  layerLoadFailure: string;\n  layerUnavailable: string;\n  queryFeaturesError: string;\n  portalLoadError: string;\n  InsufficientCreditsError: string;\n  serviceNameExistsError: string;\n  networkError: string;\n  toolValidationError: string;\n  keyPropertiesError: string;\n  creditEstimationError: string;\n}\n\nexport const CLIENT_THROWN_ERROR = \"analysis_ui\";\n","import { getLocaleInfo } from \"../../localization\";\nimport { SupportedLocales } from \"../../localization/interfaces\";\nimport { ArcgisWebAnalysisError } from \"../../errors\";\n\nimport { CLIENT_THROWN_ERROR, ErrorStrings } from \"./interfaces\";\n\n/**\n *\n * @param locale\n */\nexport async function fetchErrorsStrings(locale: SupportedLocales = getLocaleInfo().locale): Promise<ErrorStrings> {\n  // rollup does not support dynamic imports on runtime https://github.com/rollup/rollup/issues/2463\n  // So we use the imports before run time using this approach , the JSON are built into js files in `dist`.\n  // https://devtopia.esri.com/WebGIS/arcgis-charts/pull/1830\n  let strings = await import(\"./errors.t9n.en.json\");\n\n  switch (locale) {\n    case SupportedLocales.Arabic:\n      strings = await import(\"./errors.t9n.ar.json\");\n      break;\n    case SupportedLocales.Bosnian:\n      strings = await import(\"./errors.t9n.bs.json\");\n      break;\n    case SupportedLocales.Bulgarian:\n      strings = await import(\"./errors.t9n.bg.json\");\n      break;\n    case SupportedLocales.Catalan:\n      strings = await import(\"./errors.t9n.ca.json\");\n      break;\n    case SupportedLocales.Czech:\n      strings = await import(\"./errors.t9n.cs.json\");\n      break;\n    case SupportedLocales.Danish:\n      strings = await import(\"./errors.t9n.da.json\");\n      break;\n    case SupportedLocales.German:\n      strings = await import(\"./errors.t9n.de.json\");\n      break;\n    case SupportedLocales.Greek:\n      strings = await import(\"./errors.t9n.el.json\");\n      break;\n    case SupportedLocales.EnglishUSA:\n      strings = await import(\"./errors.t9n.en-US.json\");\n      break;\n    case SupportedLocales.Spanish:\n      strings = await import(\"./errors.t9n.es.json\");\n      break;\n    case SupportedLocales.Estonian:\n      strings = await import(\"./errors.t9n.et.json\");\n      break;\n    case SupportedLocales.Finnish:\n      strings = await import(\"./errors.t9n.fi.json\");\n      break;\n    case SupportedLocales.French:\n      strings = await import(\"./errors.t9n.fr.json\");\n      break;\n    case SupportedLocales.Hebrew:\n      strings = await import(\"./errors.t9n.he.json\");\n      break;\n    case SupportedLocales.Croatian:\n      strings = await import(\"./errors.t9n.hr.json\");\n      break;\n    case SupportedLocales.Hungarian:\n      strings = await import(\"./errors.t9n.hu.json\");\n      break;\n    case SupportedLocales.Indonesian:\n      strings = await import(\"./errors.t9n.id.json\");\n      break;\n    case SupportedLocales.Italian:\n      strings = await import(\"./errors.t9n.it.json\");\n      break;\n    case SupportedLocales.Japanese:\n      strings = await import(\"./errors.t9n.ja.json\");\n      break;\n    case SupportedLocales.Korean:\n      strings = await import(\"./errors.t9n.ko.json\");\n      break;\n    case SupportedLocales.Lithuanian:\n      strings = await import(\"./errors.t9n.lt.json\");\n      break;\n    case SupportedLocales.Latvian:\n      strings = await import(\"./errors.t9n.lv.json\");\n      break;\n    case SupportedLocales.NorwegianBokml:\n      strings = await import(\"./errors.t9n.nb.json\");\n      break;\n    case SupportedLocales.Dutch:\n      strings = await import(\"./errors.t9n.nl.json\");\n      break;\n    case SupportedLocales.Polish:\n      strings = await import(\"./errors.t9n.pl.json\");\n      break;\n    case SupportedLocales.PortugueseBrazil:\n      strings = await import(\"./errors.t9n.pt-BR.json\");\n      break;\n    case SupportedLocales.PortuguesePortugal:\n      strings = await import(\"./errors.t9n.pt-PT.json\");\n      break;\n    case SupportedLocales.Romanian:\n      strings = await import(\"./errors.t9n.ro.json\");\n      break;\n    case SupportedLocales.Russian:\n      strings = await import(\"./errors.t9n.ru.json\");\n      break;\n    case SupportedLocales.Serbian:\n      strings = await import(\"./errors.t9n.sr.json\");\n      break;\n    case SupportedLocales.Slovak:\n      strings = await import(\"./errors.t9n.sk.json\");\n      break;\n    case SupportedLocales.Slovenian:\n      strings = await import(\"./errors.t9n.sl.json\");\n      break;\n    case SupportedLocales.Swedish:\n      strings = await import(\"./errors.t9n.sv.json\");\n      break;\n    case SupportedLocales.Thai:\n      strings = await import(\"./errors.t9n.th.json\");\n      break;\n    case SupportedLocales.Turkish:\n      strings = await import(\"./errors.t9n.tr.json\");\n      break;\n    case SupportedLocales.Ukrainian:\n      strings = await import(\"./errors.t9n.uk.json\");\n      break;\n    case SupportedLocales.Vietnamese:\n      strings = await import(\"./errors.t9n.vi.json\");\n      break;\n    case SupportedLocales.ChineseChina:\n      strings = await import(\"./errors.t9n.zh-CN.json\");\n      break;\n    case SupportedLocales.ChineseHongKong:\n      strings = await import(\"./errors.t9n.zh-HK.json\");\n      break;\n    case SupportedLocales.ChineseTaiwan:\n      strings = await import(\"./errors.t9n.zh-TW.json\");\n      break;\n    case SupportedLocales.English:\n    default:\n      break;\n  }\n\n  return strings;\n}\n\n/**\n * Fetches the error strings to get the error message associated to the provided key, and throws an error.\n * If the message is not found a generic one is used.\n * @param errorKey The key pointing to the message to be used by the error\n * @param {any} [cause] The cause of the error (usually the original error), but can be anything\n * @throws {Error}\n */\nexport async function throwError(errorKey: keyof ErrorStrings | string, cause?: any): Promise<never> {\n  // Fetch error t9n strings based on the locale\n  const errorStrings = await fetchErrorsStrings();\n\n  const errorMessage = errorStrings[errorKey as keyof ErrorStrings] as string | undefined;\n\n  throw new ArcgisWebAnalysisError(\n    errorKey,\n    errorMessage ?? errorStrings.defaultError,\n    {\n      type: CLIENT_THROWN_ERROR\n    },\n    cause\n  );\n}\n","import Query from \"@arcgis/core/rest/support/Query\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport * as promiseUtils from \"@arcgis/core/core/promiseUtils\";\n\nimport { isEmptyDataItem } from \"../common\";\nimport { throwError } from \"../t9n/errors\";\nimport { ErrorKeywords } from \"../errors/interfaces\";\n\n/**\n *\n * Returns the total number of features satisfying the layer's configuration/filters.\n * If a layer has timeExtent and layer.useViewTime is true, it would return the layer features\n * within the view extent. When useViewTime is false, it provides the count based on the layer's timeExtent.\n * See https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#useViewTime.\n * @param layer\n * @param view\n */\nexport const queryCount = async (layer: FeatureLayer, view: MapView): Promise<number> => {\n  // TODO: Look into memoizing this function. Found that serializing the entire function arguments is too slow and blocks the UI\n  // Enable cacheHint so server can cache the same query request\n  // using simple where clause for passing definitionExpression\n  // TODO: reuse the robust combineFilters available in charts\n  // https://devtopia.esri.com/WebGIS/arcgis-charts/blob/master/packages/arcgis-charts-shared-utils/src/query-parser/index.ts#L24\n  // Analysis tools UI can add runtime filter as well so using combineFilter we can do layer.definitionExpression AND analysis filter.\n  const props: ConstructorParameters<typeof Query>[0] | undefined = {\n    cacheHint: true,\n    where: isEmptyDataItem(layer.definitionExpression) === false ? layer.definitionExpression : \"1=1\"\n  };\n  if (isEmptyDataItem(layer.timeInfo) === false) {\n    if (layer.useViewTime === true && isEmptyDataItem(view?.timeExtent) === false) {\n      props.timeExtent = view.timeExtent;\n    } else {\n      props.timeExtent = layer.timeExtent;\n    }\n  }\n  const query = new Query(props);\n  const count = await layer.queryFeatureCount(query);\n  return count;\n};\n\nexport type AbortControllerKeyType = string | number | Date;\n\nexport const abortControllerMap = new Map<AbortControllerKeyType, AbortController>();\nexport type Features = __esri.Graphic[] | number[];\n\n/**\n *  Fetches features from the layer, according to the passed query\n * @param props\n * @param {FeatureLayer} props.layer layer passed to query\n * @param {__esri.Query} props.query the query object which is being queried\n * @param {boolean} props.returnUniqueIdsOnly if true only objectIds are returned as per the query\n * @param {AbortControllerKeyType} props.abortKey abort key to abort the query request\n */\nexport async function queryFeatures(props: {\n  layer?: FeatureLayer;\n  query: __esri.Query;\n  returnUniqueIdsOnly?: boolean;\n  abortKey?: AbortControllerKeyType;\n}): Promise<Features> {\n  const { layer, query, returnUniqueIdsOnly, abortKey } = props;\n\n  let graphics: Features = [];\n\n  if (layer !== undefined) {\n    try {\n      if (returnUniqueIdsOnly === true) {\n        graphics = await layer.queryObjectIds(query);\n      } else {\n        const featuresSet = await layer.queryFeatures(query, {\n          signal: abortKey !== undefined ? abortControllerMap.get(abortKey)?.signal : undefined\n        });\n        graphics = featuresSet.features;\n      }\n    } catch (e) {\n      // Not throwing errors when we're aborting previous queries\n      if (promiseUtils.isAbortError(e) === false) {\n        throwError(ErrorKeywords.QueryFeaturesError);\n      }\n    }\n  }\n  return graphics;\n}\n\n/**\n * Aborts all existing queries and initializes a controller for new ones. The queries are associated\n * to a unique key to avoid cancelling queries for other charts.\n * @param key The key pointing to the abort controller to execute\n */\nexport function abortPendingQueries(key?: AbortControllerKeyType): void {\n  if (key !== undefined) {\n    // Looking for an existing controller\n    const currentAbortController = abortControllerMap.get(key);\n\n    // If it exists, we call an abort on it\n    if (currentAbortController !== undefined) currentAbortController.abort();\n\n    // Setting a new controller for the next round of queries\n    abortControllerMap.set(key, new AbortController());\n  }\n}\n","import PortalItemResource from \"@arcgis/core/portal/PortalItemResource\";\n\nimport { throwError } from \"../t9n/errors\";\n\nimport { PostItemResourceProps } from \"./interfaces\";\n\n/**\n * Reads resources from the portalItemResource and returns them.\n * @param {string} path the path to the resource, should be a global const\n * @param {__esri.PortalItem} portalItem the portal item, this is used to get the url\n * @returns {Promise<T | undefined>} returns the object stored in the portalItem if there is one\n */\nexport async function readItemResource<T>(path: string, portalItem: __esri.PortalItem): Promise<T | undefined> {\n  const portalItemResource = new PortalItemResource({\n    portalItem,\n    path\n  });\n  let portalItemResourceData = undefined;\n  try {\n    portalItemResourceData = await portalItemResource.fetch();\n  } catch (e) {\n    // Important note: this needs to stay no op so undefined can be returned properly to consuming functions.\n    // no op\n  }\n  return portalItemResourceData;\n}\n\n/**\n * Stores an object in a portalItem's resources\n * @param {PostItemResourceProps} props the properties to use: storageKey: string, portalItem: __esri.PortalItem, storageItem: any\n * @returns {Promise<__esri.PortalItemResource>} the updated portalItemResource\n */\nexport async function addOrUpdateItemResource<T>(props: PostItemResourceProps<T>): Promise<__esri.PortalItemResource> {\n  const { portalItem, data, path } = props;\n\n  let portalItemResource = new PortalItemResource({\n    portalItem,\n    path\n  });\n  const resourceBlob = new Blob([JSON.stringify(data)], { type: \"application/json\" });\n  const itemData = await readItemResource<T>(path as string, portalItem);\n  try {\n    if (itemData !== undefined) {\n      portalItemResource = await portalItemResource.update(resourceBlob);\n    } else {\n      await portalItem.addResource(portalItemResource, resourceBlob);\n    }\n  } catch (e) {\n    // TODO: add handling for generic errors not related to saving failing.\n    // As of now, any error in saving to the webmap will be treated the same and will bubble up to parent.\n    await throwError(\"cannotWriteToItemResource\", \"addOrUpdateItemResource\");\n  }\n\n  return portalItemResource;\n}\n","import { throwError } from \"../t9n/errors\";\n\n/**\n * Writes an item to session storage\n * @param { string} key sessionStorage Key\n * @param {string} value What you want to write (stringified)\n */\nexport async function writeToSessionStorage(key: string, value: string) {\n  try {\n    window.sessionStorage.setItem(key, value);\n  } catch (exception) {\n    if (exception.name === \"QuotaExceededError\" || exception.name === \"NS_ERROR_DOM_QUOTA_REACHED\") {\n      // If the error is that session storage is full we should handle it and translate it\n      await throwError(\"fullSessionStorage\", \"writeToSessionStorage\");\n    } else {\n      // otherwise generic errors should still bubble up.\n      throw exception;\n    }\n  }\n}\n\n/**\n * Removes an item from local storage\n * @param {string} key sessionStorage Key\n */\nexport function removeFromSessionStorage(key: string) {\n  window.sessionStorage.removeItem(key);\n}\n\n/**\n * Reads and returns an item in session storage.\n * @param {string} key the key to read from session storage.\n * @returns {any} the value in session storage for that key.\n */\nexport function readFromSessionStorage(key: string): any {\n  return window.sessionStorage.getItem(key);\n}\n\n/**\n * Determine if local storage is available\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#testing_for_availability\n * @returns {boolean} is the local storage available\n */\nexport function isSessionStorageAvailable(): boolean {\n  let response = false;\n  try {\n    const testKey = \"__sessionStorageAvailableTest__\";\n    window.sessionStorage.setItem(testKey, testKey);\n    window.sessionStorage.removeItem(testKey);\n    response = true;\n  } catch (exception) {\n    response =\n      exception instanceof DOMException &&\n      (exception.code === 22 ||\n        exception.code === 1014 ||\n        exception.name === \"QuotaExceededError\" ||\n        exception.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      window.sessionStorage !== null &&\n      window.sessionStorage !== undefined &&\n      window.sessionStorage.length !== 0;\n  }\n  return response;\n}\n","import { ArcgisWebAnalysisError } from \"../errors\";\n\nimport { Cache, CacheType, RequestCache, TypeParameter } from \"./interfaces\";\n\nconst cache: Cache = {};\nconst requestCache: RequestCache = {};\n\n/**\n * Allows memory caching of requests which are expected to be called multiple times\n * @param requester - function which fetches the data to be cached\n * @param key - unique global name for this cache type - see {@link CacheType}\n * @param id - unique id for this result inside this particular cache\n */\nexport async function fromCache(\n  requester: () => Promise<TypeParameter>,\n  key: CacheType,\n  id: string\n): Promise<TypeParameter | undefined> {\n  const cachedValue = cache[key]?.[id];\n  if (cachedValue !== undefined) {\n    return cachedValue;\n  }\n\n  const requestedCacheId = requestCache[key];\n  if (requestedCacheId === undefined || requestedCacheId === null) {\n    requestCache[key] = {} as Record<string, Promise<TypeParameter>>;\n  }\n\n  const requestedCacheValue = requestCache[key][id];\n  if (requestedCacheValue === undefined || requestedCacheValue === null) {\n    requestCache[key][id] = requester();\n  }\n\n  const cachedId = cache[key];\n  if (cachedId === undefined || cachedId === null) {\n    cache[key] = {} as Record<string, TypeParameter>;\n  }\n\n  let result;\n\n  try {\n    result = await requestCache[key][id];\n    cache[key][id] = result;\n  } catch (error) {\n    throw new ArcgisWebAnalysisError(\"CacheFetchError\", error);\n  }\n\n  return result;\n}\n\n/**\n * Checks for a value in the cache and returns if there\n * If missing, no requests will be performed\n * @param key - unique global name for this cache type - see {@link CacheType}\n * @param id - unique id for this result inside this particular cache, will clear all entries if not provided\n * @example\n * inCache(\"serviceInfo\", \"uniqueitemid\");\n */\nexport function inCache(key: CacheType, id: string): TypeParameter | undefined {\n  return cache?.[key]?.[id];\n}\n\n/**\n * Clear all cache entries\n * @example\n * clearAllCache();\n */\nexport const clearAllCaches = () => {\n  Object.keys(cache).forEach((key) => {\n    delete cache[key];\n  });\n  Object.keys(requestCache).forEach((key) => {\n    delete requestCache[key];\n  });\n};\n","import Point from \"@arcgis/core/geometry/Point\";\nimport Polyline from \"@arcgis/core/geometry/Polyline\";\nimport Polygon from \"@arcgis/core/geometry/Polygon\";\nimport esriId from \"@arcgis/core/identity/IdentityManager\";\nimport * as reactiveUtils from \"@arcgis/core/core/reactiveUtils\";\nimport Query from \"@arcgis/core/rest/support/Query\";\n\nimport { isEmptyDataItem, request } from \"../common\";\nimport { abortPendingQueries, queryFeatures } from \"../query\";\nimport { fromCache, inCache } from \"../storage\";\n\ninterface GetEnrichCountryRuleParams {\n  inputLayer?: __esri.FeatureLayer;\n  geoenrichmentUrl: string;\n  mapView?: __esri.MapView;\n}\n\n/**\n * returns a center point for a geometry ( polygon or polyline)\n * @param geometry the input geometry passed to find its center point\n * @returns {Point} the center point of the geometry\n */\nfunction getCenter(geometry: __esri.Geometry): Point {\n  const extent = geometry.extent;\n  return new Point({\n    x: (extent.xmin + extent.xmax) / 2,\n    y: (extent.ymin + extent.ymax) / 2,\n    spatialReference: extent.spatialReference\n  });\n}\n\n/**\n * returns a center point for a geometry ( point or polygon or polyline)\n * @param {Point | Polygon | Polyline} geometry the input geometry passed to find its center point\n * @returns {Point} the center point of the geometry\n */\nfunction getGeometryCenter(geometry: Point | Polygon | Polyline): Point {\n  let center: Point | undefined;\n  switch (geometry.type) {\n    case \"point\":\n      center = geometry;\n      break;\n    case \"polyline\":\n      // Pick one segment from the geometry and obtain its center\n      const path = geometry.paths[0];\n      const polyline = new Polyline({ spatialReference: geometry.spatialReference });\n      polyline.addPath(path);\n      center = getCenter(polyline);\n      break;\n    case \"polygon\":\n      if (isEmptyDataItem(geometry.centroid) === false) {\n        // use centroid for polygon when present\n        center = getGeometryCenter(geometry.centroid);\n      } else {\n        // Pick one ring from the geometry and obtain its center\n        const ring = geometry.rings[0];\n        const polygon = new Polygon({ spatialReference: geometry.spatialReference });\n        polygon.addRing(ring);\n        center = getCenter(polygon);\n      }\n      break;\n  }\n  return center;\n}\n\n/**\n * returns the center point for an input feature layer,\n * here when layerView is not available or no features are in view we query the server.\n * and find its geometry center to get the lat/long of the center for enrich task to use.\n * @param {__esri.FeatureLayer} inputLayer feature layer to be queried to get its sample point\n * @returns {Promise<Point | undefined>} returns the center point for finding the country for enrich.\n */\nasync function getCenterPointUsingServerQuery(inputLayer: __esri.FeatureLayer): Promise<Point> {\n  let point: Point | undefined = undefined;\n\n  // query the server\n  const query = new Query();\n  query.returnGeometry = true;\n  query.where = \"1=1\";\n  // we want to fetch only 5 features and find the mid-point , use it to determine the country\n  query.num = 5;\n  // setting maxAllowableOffset > 0 to simplify the returned geometries so it improves performance\n  query.maxAllowableOffset = 0.25;\n  query.outFields = [\"*\"];\n  // cache the results of same query\n  query.cacheHint = true;\n  // for polygons returning centroid so we can use that to determine the center\n  query.returnCentroid = inputLayer?.geometryType === \"polygon\";\n  abortPendingQueries(inputLayer.id);\n  const features = (await queryFeatures({\n    layer: inputLayer,\n    query,\n    abortKey: inputLayer.id\n  })) as __esri.Graphic[];\n  const featureIndex = Math.round(features.length / 2);\n  const sampleFeature = (features?.[featureIndex]?.geometry as Point | Polygon | Polyline) ?? undefined;\n  if (sampleFeature !== undefined) {\n    point = getGeometryCenter(sampleFeature);\n  } else {\n    point = getGeometryCenter(inputLayer.fullExtent.center);\n  }\n  return point;\n}\n\n/**\n * returns the center point for an input feature layer,\n * We could use fullExtent to find the center of feature layer which is not reliable\n * so we query the feature layer view to get the client-side geometries, pick the middle feature\n * when layerView is not available or no features are in view we query the server.\n * and find its geometry center to get the lat/long of the center for enrich task to use.\n * @param {GetEnrichCountryRuleParams} params parameters needed for the function\n * @returns {Promise<Point | undefined>} returns the center point for finding the country for enrich.\n */\nasync function getCenterPoint(params: GetEnrichCountryRuleParams): Promise<Point | undefined> {\n  const { inputLayer, mapView } = params;\n  let point: Point | undefined = undefined;\n  if (inputLayer !== undefined && mapView !== undefined) {\n    // Check for the first time layerView.updating becomes false. Then query for\n    // features that are visible within the view associated with the layer view.\n    let layerView: __esri.FeatureLayerView | undefined;\n    let sampleFeature: Point | Polygon | Polyline | undefined;\n    let featureIndex = 0;\n    let query: Query | undefined;\n    try {\n      layerView = await mapView.whenLayerView(inputLayer);\n      // when layer view is available we use the view to query\n      if (layerView !== undefined) {\n        await reactiveUtils.whenOnce(() => layerView?.updating === false);\n        query = layerView.createQuery();\n        const resultFeatureSet = await layerView.queryFeatures(query);\n        featureIndex = Math.floor(resultFeatureSet.features?.length / 2) ?? 0;\n\n        // we use the first feature from the list of features in the layer , when not present query the server ,\n        // otherwise we use the full extent\n        sampleFeature =\n          (resultFeatureSet.features?.[featureIndex]?.geometry as Point | Polygon | Polyline) ?? undefined;\n      }\n      // if sampleFeature is undefined either when there are no features in extent\n      if (sampleFeature === undefined) {\n        point = await getCenterPointUsingServerQuery(inputLayer);\n      } else {\n        point = getGeometryCenter(sampleFeature);\n      }\n    } catch (e) {\n      // if layerView is undefined like when we select layer from item browser with adding layer to map\n      point = await getCenterPointUsingServerQuery(inputLayer);\n    }\n  }\n  return point;\n}\n\nconst CountryNotFound = \"NOT_FOUND\";\n\n/**\n *  Returns the default country for an input layer by making an enrich an async request using first input feature geometry.\n * @param {GetEnrichCountryRuleParams} params input params to this function\n * @returns {string | undefined } returns the country Id when found otherwise returns undefined\n */\nasync function fetchEnrichmentCountry({ params }: { params: GetEnrichCountryRuleParams }): Promise<string> {\n  const { geoenrichmentUrl, inputLayer } = params;\n  let country: string = CountryNotFound;\n  const centerPoint = await getCenterPoint(params);\n  if (centerPoint !== undefined && inputLayer !== undefined) {\n    const url = `${geoenrichmentUrl}/Geoenrichment/Enrich?f=json`;\n    // const countryRule: AnalysisToolUIRule = [];\n    const credential = esriId.findCredential(url);\n    let token;\n    if (credential !== undefined) {\n      token = credential.token;\n    }\n    try {\n      const options = {\n        query: {\n          token,\n          f: \"json\",\n          studyAreas: JSON.stringify([{ geometry: centerPoint.toJSON() }]),\n          analysisVariables: JSON.stringify([\"GlobalIntersect.*\"]),\n          inSr: JSON.stringify(inputLayer.spatialReference.toJSON())\n        }\n      };\n      const response = await request(`${geoenrichmentUrl}/Geoenrichment/Enrich`, options);\n      // it mimics a GP result but nested this way to get the GPResult.value\n      const enrichResult = response.data.results[0].value;\n      const features: __esri.Graphic[] = enrichResult.FeatureSet?.[0]?.features ?? [];\n      const countriesList = features.map((feature) => feature.attributes.sourceCountry);\n      // there may be duplicate countries so using set.\n      const countries = Array.from(new Set(countriesList));\n      country = countries?.[0] ?? CountryNotFound;\n    } catch (err) {\n      // no-op\n      console.error(\"Failed to get enrich info\", err);\n    }\n  }\n  return country;\n}\n\n/**\n *  Returns the default country for an input layer by making an enrich an async request using first input feature geometry.\n * @param {GetEnrichCountryRuleParams} params input params to this function\n * @returns {string | undefined } returns the country Id when found otherwise returns undefined\n */\nexport async function getCountry(params: GetEnrichCountryRuleParams): Promise<string | undefined> {\n  let country: string | undefined;\n  const { inputLayer } = params;\n  if (inputLayer !== undefined) {\n    // check the cache first\n    country = inCache(\"enrichmentCountry\", inputLayer?.id) as string | undefined;\n    if (country === undefined) {\n      country = (await fromCache(() => fetchEnrichmentCountry({ params }), \"enrichmentCountry\", inputLayer?.id)) as\n        | string\n        | undefined;\n    }\n  }\n  if (country === CountryNotFound) {\n    country = undefined;\n  }\n  return country;\n}\n","import uniqueValues from \"@arcgis/core/smartMapping/statistics/uniqueValues\";\n\nimport { intersectionBy, unionBy } from \"lodash-es\";\n\nimport { SupportedLayer, SupportedLayerWithParent } from \"../tools/interfaces\";\nimport { ArcgisWebAnalysisError } from \"../errors\";\n\nimport { FilterFieldsParams } from \"./interfaces\";\n\n/**\n * @param {__esri.FeatureLayer | __esri.ImageryLayer | __esri.ImageryTileLayer} layer the layer to fetch from\n * @param {boolean} usePopupTemplateFieldsInfo use popup template or directly from the layer\n */\nexport async function fetchLayerFieldsInfo(\n  layer: __esri.FeatureLayer | __esri.ImageryLayer | __esri.ImageryTileLayer,\n  usePopupTemplateFieldsInfo: boolean\n): Promise<__esri.Field[]> {\n  await layer.load();\n  let fieldsInfo: __esri.Field[] = [];\n  if (layer.type === \"imagery-tile\" || layer.type === \"imagery\") {\n    fieldsInfo =\n      layer.type === \"imagery-tile\"\n        ? layer.rasterInfo?.attributeTable?.fields\n        : layer.serviceRasterInfo?.attributeTable?.fields;\n    if (usePopupTemplateFieldsInfo === true && layer.rasterFields !== undefined) {\n      const rasterFields = layer.rasterFields.map((field) => {\n        field.name = field.name.replace(/^.*\\.(.*)$/, \"$1\");\n        return field;\n      });\n      const valueField = rasterFields.find((field) => field.name === \"Raw\");\n      const valueFieldInfo = fieldsInfo.find((field) => field.name.toLowerCase() === \"value\");\n      if (valueField !== undefined && valueFieldInfo !== undefined) {\n        valueField.name = valueFieldInfo.name;\n        valueField.alias = valueFieldInfo.alias;\n        valueField.description = valueFieldInfo.description;\n        valueField.type = valueFieldInfo.type;\n      }\n      fieldsInfo = intersectionBy(rasterFields, fieldsInfo, \"name\");\n    }\n  } else {\n    fieldsInfo = [...layer.fields];\n    if (usePopupTemplateFieldsInfo === true && layer?.popupTemplate?.fieldInfos !== undefined) {\n      const popupFieldsInfo: __esri.Field[] = layer?.popupTemplate?.fieldInfos\n        .filter((field) => layer.fieldsIndex.get(field.fieldName))\n        .map((field) => {\n          // converting the popupField to __esri.Field and then converting to IField\n          const newField: __esri.Field = layer.fieldsIndex.get(field.fieldName);\n          newField.alias = field.label;\n          return newField;\n        });\n      // Replace field from feature layer with matching one from popup info based on name property\n      // First array passed (popup info) has preference\n      fieldsInfo = unionBy(popupFieldsInfo, fieldsInfo, \"name\");\n    }\n  }\n  return fieldsInfo;\n}\n\n/**\n * Checks whether the given field has a valid numeric type.\n * @param {__esri.Field[\"type\"]} fieldType\n * @returns {boolean} true or false based on the check\n */\nexport function isNumericField(fieldType: __esri.Field[\"type\"]): boolean {\n  const validNumericFields = [\"small-integer\", \"integer\", \"big-integer\", \"single\", \"double\", \"long\"];\n  return validNumericFields.includes(fieldType);\n}\n\n/**\n * returns list of fields based on filter conditions\n * @param {FilterFieldParams} params list of fields along with filter conditions allowDateType, allowStringType\n * @returns {__esri.Field[]} returns filtered list of fields\n */\nexport function filterFields(params: FilterFieldsParams): __esri.Field[] {\n  const { fields, allowDateType, allowStringType, allowOidType, allowNumericType, allowGeometryFields, layer } = params;\n  return fields.filter((field: __esri.Field) => {\n    let allowField = false;\n    if (allowOidType === true && field.type === \"oid\") {\n      allowField = true;\n    } else if (\n      allowNumericType === true &&\n      isNumericField(field.type) === true &&\n      (field.type !== \"big-integer\" || params.allowBigIntType === true)\n    ) {\n      if (\n        [layer?.geometryFieldsInfo?.shapeAreaField, layer?.geometryFieldsInfo?.shapeLengthField].includes(field.name)\n      ) {\n        allowField = allowGeometryFields;\n      } else {\n        allowField = true;\n      }\n    } else if (allowDateType === true && field.type === \"date\") {\n      allowField = true;\n    } else if (allowStringType === true && field.type === \"string\") {\n      allowField = true;\n    }\n    return allowField;\n  });\n}\n\n/**\n * Returns the label for the layer input popover list item to represent the input layer in the UI.\n * @param {SupportedLayer | __esri.Sublayer} layer the layer instance for which label is constructed.\n * @returns {string} returns the label for the layer list item.\n * @category Private\n */\nexport function getLayerLabel(layer: SupportedLayer | __esri.Sublayer): string {\n  // if the layer came from group layer we are looking at the parent , for sketch sub layer it has layer property\n  const groupSubLayer = layer as SupportedLayerWithParent;\n  const serviceTitle = groupSubLayer.parent?.title ?? undefined;\n  return serviceTitle !== undefined ? `${serviceTitle} - ${layer.title}` : layer.title;\n}\n\n/**\n * Returns unique values\n * @param props - properties containing layer and fieldName\n * @param props.layer\n * @param props.view\n * @param props.fieldName\n */\nexport async function getUniqueValues(props: {\n  layer: __esri.FeatureLayer;\n  fieldName: string;\n}): Promise<__esri.UniqueValuesResult> {\n  const { layer, fieldName } = props;\n  if (layer.type === \"feature\" && !layer.url) {\n    layer.outFields = [\"*\"];\n  }\n\n  try {\n    const result = await uniqueValues({\n      layer,\n      field: fieldName\n    });\n    return result;\n  } catch (err) {\n    throw new ArcgisWebAnalysisError(\"UniqueValuesRetrievalError\", err);\n  }\n}\n","import FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport GroupLayer from \"@arcgis/core/layers/GroupLayer\";\nimport Layer from \"@arcgis/core/layers/Layer\";\nimport Field from \"@arcgis/core/layers/support/Field\";\nimport PortalItem from \"@arcgis/core/portal/PortalItem\";\nimport Renderer from \"@arcgis/core/renderers/Renderer\";\nimport FeatureSet from \"@arcgis/core/rest/support/FeatureSet\";\nimport esriConfig from \"@arcgis/core/config\";\n\nimport { IField } from \"@esri/arcgis-rest-types\";\nimport { memoize } from \"lodash-es\";\n\nimport { FeatureCollection, LocaleItem } from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem, request } from \"../common\";\nimport { getLayerLabel } from \"../feature-layer\";\n\nimport { getServiceType } from \"./common\";\nimport { SupportedLayer, SupportedResult } from \"./interfaces\";\n\n/**\n * Determines if the input is a FeatureLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.FeatureLayer} layer is a FeatureLayer\n */\nexport function isFeatureLayer(layer: __esri.Layer): layer is __esri.FeatureLayer {\n  return layer.type === \"feature\";\n}\n\n/**\n * Determines if the input is a FeatureLayer if layer has type 'feature'and has a url\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.FeatureLayer} layer is a FeatureLayer\n */\nexport function isUrlFeatureLayer(layer: __esri.Layer): layer is __esri.FeatureLayer {\n  let isLayerFeature = false;\n  if (layer.type === \"feature\") {\n    isLayerFeature = isEmptyDataItem((layer as __esri.FeatureLayer).url) === false;\n  }\n  return isLayerFeature;\n}\n\n/**\n * Determines if the input is a TileLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.TileLayer} layer is a TileLayer\n */\nexport function isTileLayer(layer: __esri.Layer): layer is __esri.TileLayer {\n  return layer.type === \"tile\";\n}\n\n/**\n * Determines if the input is a ImageryLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.ImageryLayer} layer is a ImageryLayer\n */\nexport function isImageryLayer(layer: __esri.Layer): layer is __esri.ImageryLayer {\n  return layer.type === \"imagery\";\n}\n\n/**\n * Determines if the input is a ImageryTileLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.ImageryTileLayer} layer is a ImageryTileLayer\n */\nexport function isImageryTileLayer(layer: __esri.Layer): layer is __esri.ImageryTileLayer {\n  return layer.type === \"imagery-tile\";\n}\n\n/**\n * Determines if the input is a CSVLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.CSVLayer} layer is a CSVLayer\n */\nexport function isCsvLayer(layer: __esri.Layer): layer is __esri.CSVLayer {\n  return layer.type === \"csv\";\n}\n\n/**\n * Determines if the input is a KMLLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.KMLLayer} layer is a KMLLayer\n */\nexport function isKmlLayer(layer: __esri.Layer): layer is __esri.KMLLayer {\n  return layer.type === \"kml\";\n}\n\n/**\n * Determines if the input is a KMLLayer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {layer is __esri.KMLLayer} layer is a KMLLayer\n */\nexport function isRouteLayer(layer: __esri.Layer): layer is __esri.RouteLayer {\n  return layer.type === \"route\";\n}\n\n/**\n * Returns true if the layer is a table, otherwise false.\n * @param {__esri.Layer} layer The layer that you want to check\n * @returns {boolean} True if the layer is a table, otherwise false.\n */\nexport function isTableLayer(layer: __esri.Layer): boolean {\n  return isFeatureLayer(layer) && layer.isTable;\n}\n\n/**\n * Returns true if the layer is a group layer, otherwise false.\n * @param {__esri.Layer} layer The layer that you want to check\n * @returns {boolean} True if the layer is a group layer, otherwise false.\n */\nexport function isGroupLayer(layer: Layer): layer is GroupLayer {\n  return layer.type === \"group\";\n}\n\n/**\n * Determines if the input is a sketch layer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {boolean} True if it is a sketch layer\n */\nfunction isSketchLayer(layer: Layer): boolean {\n  return layer.type === \"map-notes\";\n}\n\n/**\n * Determines if the input is a Map Image layer\n * @param {__esri.Layer} layer the layer to check the type of\n * @returns {boolean} True if it is a Map Image layer\n */\nfunction isMapImageLayer(layer: Layer): layer is __esri.MapImageLayer {\n  return layer.type === \"map-image\";\n}\n\n/**\n * Determines if the input is a Feature Collection JSON\n * @param {SupportedLayer} layer the layer to check the type of\n * @returns {boolean} layer is a Feature Collection\n */\nexport function isFeatureCollectionJSON(layer: FeatureCollection): boolean {\n  return \"featureSet\" in layer;\n}\n\n/**\n * Determines if the feature layer can be used in Extract Data Tool.\n * Extract Data can be done\n * as an admin, you can extract anything in your org\n * as an owner, you can extract anything you own\n * if you don't own or admin, you must have export enabled on the input layer\n * @param {SupportedLayer} layer the layer to check the type of\n * @param {__esri.PortalUser} user the current user accessing the layers\n * @returns {boolean} layer is a Feature Collection\n */\nexport async function canExtractLayer(layer: SupportedLayer, user?: __esri.PortalUser): Promise<boolean> {\n  let canExtract = false;\n  let isAdmin = false;\n  let isOwner = false;\n  // checking if layer has extract capability\n  // layer.capabilities JSAPI Capabilities does not have mapping to find Extract so using\n  // sourceJSON which represents the layer (service) definition to check capabilities.\n  const hasExtractCapability =\n    (layer as FeatureLayer).sourceJSON?.capabilities?.toLowerCase().includes(\"extract\") ?? false;\n  if (user !== undefined) {\n    const { serviceItemId: id } = (layer as FeatureLayer)?.sourceJSON ?? {};\n    if (id !== undefined) {\n      const portalItem = new PortalItem({ id });\n      if (portalItem.loaded === false) {\n        await portalItem.load();\n      }\n      // https://developers.arcgis.com/javascript/latest/api-reference/esri-portal-PortalItem.html#isOrgItem\n      // isOrgItem : Indicates whether this item and the user whose credential was used to fetch this item\n      // belong to the same ArcGIS Enterprise Portal or ArcGIS Online Organization.\n      // using this property we only need to check the owner property for isOwner check\n      // and have to check role is admin role for isAdmin check :)\n      isOwner = portalItem.isOrgItem && portalItem.owner === user.username;\n      isAdmin = portalItem.isOrgItem && user.role === \"org_admin\";\n    }\n  }\n  // Layer has to be feature layer or table and\n  // either user accessing this layer is an admin of that org or owner of that layer or layer is extractable.\n  canExtract = (isFeatureLayer(layer) || isTableLayer(layer)) && (isAdmin || isOwner || hasExtractCapability);\n  return canExtract;\n}\n\n/**\n * Function creating a FeatureLayer from Feature Collection JSON\n * It returns the created Feature Layer.\n * It is memoized (cached) to avoid multiple requests for a same feature layer.\n */\nconst getFeatureLayerFromFeatureCollection = memoize((featColl: FeatureCollection): FeatureLayer => {\n  const inputArgument: __esri.FeatureLayerProperties = {};\n  let layerDefinition: FeatureCollection[\"layerDefinition\"] | undefined;\n  if (featColl.featureSet !== undefined) {\n    inputArgument.source = FeatureSet.fromJSON(featColl.featureSet).features;\n    layerDefinition = featColl.layerDefinition;\n    // Converting the field using JSAPI Field\n    if (layerDefinition.fields !== undefined) {\n      inputArgument.fields = layerDefinition.fields.map((field: IField): __esri.Field => Field.fromJSON(field));\n    }\n    // set optional properties if they are defined\n    if (layerDefinition.objectIdField !== undefined) inputArgument.objectIdField = layerDefinition.objectIdField;\n\n    if (layerDefinition.geometryType !== undefined) {\n      //FIXME: This conversion below did not work as expected, so mapping each JSON type to JSAPI geometry type\n      // const geometry = geometryJsonUtils.fromJSON({ type: layerDefinition.geometryType });\n      let type: __esri.FeatureLayerProperties[\"geometryType\"] = \"point\";\n      switch (layerDefinition.geometryType) {\n        case \"esriGeometryMultipoint\":\n          type = \"multipoint\";\n          break;\n        case \"esriGeometryPoint\":\n          type = \"point\";\n          break;\n        case \"esriGeometryPolygon\":\n          type = \"polygon\";\n          break;\n        case \"esriGeometryPolyline\":\n          type = \"polyline\";\n          break;\n        default:\n          break;\n      }\n      inputArgument.geometryType = type;\n    }\n\n    if (layerDefinition.spatialReference !== undefined)\n      inputArgument.spatialReference = layerDefinition.spatialReference;\n\n    if (layerDefinition.drawingInfo?.renderer !== undefined)\n      inputArgument.renderer = Renderer.fromJSON(layerDefinition.drawingInfo.renderer);\n  }\n  return new FeatureLayer(inputArgument);\n});\n\n/**\n * returns the localized geometry name for a feature layer for known geometry types , otherwise returns undefined.\n * @param {FeatureLayer} featureLayer layer whose geometry name is being constructed\n * @param {Record<string, LocaleItem>} strings list of the t9n common strings which has keys `toolInfoKeys.points/polygons/lines`\n * @returns {string | undefined} localized string or undefined when not found\n */\nfunction getLocalizedGeometryType(featureLayer: FeatureLayer, strings: Record<string, LocaleItem>): string | undefined {\n  let geometryTitle: string | undefined;\n  // these strings are loaded from analysis-tool-ui-assets common t9n asset, which is passed from the component\n  // so unable to use typeof import(\"./t9n/common.en.json\") as we wont know the path for this asset until runtime.\n  // points, lines, polygons strings are in toolInfoKeys object in common t9n object.\n  // are in https://devtopia.esri.com/WebGIS/arcgis-web-analysis/blob/master/packages/analysis-tool-ui-assets/src/assets/t9n/common.t9n.en.json#L549\n\n  switch (featureLayer.geometryType) {\n    case \"point\":\n      geometryTitle = strings.toolInfoKeys.points as string;\n      break;\n    case \"polygon\":\n      geometryTitle = strings.toolInfoKeys.polygons as string;\n      break;\n    case \"polyline\":\n      geometryTitle = strings.toolInfoKeys.lines as string;\n      break;\n  }\n  return geometryTitle;\n}\n\n/**\n * Returns the feature layers from sketch layer\n * sketch layer is group layer which has multiple sub layers which are graphics layers\n * This functions converts the sketch layer to JSON and then using the featureCollection JSON\n * array it creates feature layer for each sub layer if it has any features.\n * So if there are sub layers with empty features , feature layer is not created for that sub layer.\n * @param {__esri.MapNotesLayer} sketchLayer the sketch leyer passed\n * @param {Record<string, LocaleItem>} strings strings List of t9n strings to update the title of the layers\n * for example in sketch layers layerName (t9NGeometryName)\n * @returns {Promise<FeatureLayer[]>} list of feature layers from sketch layer\n */\nexport async function getFeatureLayersFromSketchLayer(\n  sketchLayer: __esri.MapNotesLayer,\n  strings: Record<string, LocaleItem>\n): Promise<FeatureLayer[]> {\n  await (sketchLayer as any).beforeSave();\n  const sketchLayerJson = (sketchLayer as any).toJSON({ origin: \"web-map\" });\n  const nonEmptySketchSubLayers = sketchLayerJson.featureCollection.layers.filter(\n    (featColl: FeatureCollection) => featColl.featureSet.features.length > 0 && featColl.layerDefinition.name !== \"Text\"\n  );\n  const loadingLayers = nonEmptySketchSubLayers.map(async (featColl: FeatureCollection) => {\n    const featureLayer = getFeatureLayerFromFeatureCollection(featColl);\n    const supportedGeometryName = getLocalizedGeometryType(featureLayer, strings);\n    const layerTitle = getLayerLabel(sketchLayer as SupportedLayer);\n    if (supportedGeometryName !== undefined) {\n      featureLayer.title = `${layerTitle} (${supportedGeometryName})`;\n    } else {\n      featureLayer.title = layerTitle;\n    }\n    await featureLayer.load();\n    return featureLayer;\n  });\n  const featureLayers = await Promise.all(loadingLayers);\n  return featureLayers;\n}\n\n/**\n * Returns the feature layers from map image layer\n * Map image layer display and analyze data from sublayers defined in a map service,\n * This function creates feature layer for each sub layer and returns them.\n * @param {__esri.MapImageLayer} mapImagelayer the map image leyer passed\n * @returns {Promise<FeatureLayer[]>} list of feature layers from map image layer\n */\nasync function getFeatureLayersFromMapImageLayer(mapImagelayer: __esri.MapImageLayer): Promise<FeatureLayer[]> {\n  // https://next.sites.afd.arcgis.com/javascript/latest/api-reference/esri-layers-MapImageLayer.html#allSublayers\n  // using allSubLayers and creating fetaure layers on each sub layer.\n  const loadingLayers = mapImagelayer.allSublayers.map(async (subLayer) => {\n    // A convenient method for creating a FeatureLayer instance based\n    // on the Sublayer's configuration, including dynamic sources.\n    // https://next.sites.afd.arcgis.com/javascript/latest/api-reference/esri-layers-support-Sublayer.html#createFeatureLayer\n    const featureLayer = await subLayer.createFeatureLayer();\n    await featureLayer.load();\n    featureLayer.title = getLayerLabel(subLayer);\n    return featureLayer;\n  });\n\n  const featureLayers = await Promise.all(loadingLayers);\n  return featureLayers;\n}\n\n/**\n * This function getFeatureLayers is used to convert layers like SketchLayer, KML to\n * feature layers to be used in analysis\n * Analysis tools only work on feature layers or tables or imagery layers.\n * SketchLayer is a custom group layer implementation type __esri.MapNotesLayer so we\n * convert its sub-layers to feature layers(feature collection) to use in analysis\n * The idea behind this function to take supported layers to compatible analysis layers\n * that analysis tools can understand.\n *  Map Viewer/ EXB App -> send a list of layers from Map -> getAnalysisLayers -> provides list of\n * supported analysis layers to use in tools\n * This includes flattening of the layers which is currently done in Map viewer and studio demo app\n * TODO: this is step 1 to this generic function getAnalysisLayers keeping the goal to avoid any regressions.\n * @param {SupportedLayer[]} layers list of supported layers\n * @param {Record<string, LocaleItem>} strings strings List of t9n strings to update the title of the layers\n * for example in sketch layers layerName (t9NGeometryName)\n */\nexport async function getAnalysisLayers(\n  layers: SupportedLayer[],\n  strings: Record<string, LocaleItem>\n): Promise<SupportedLayer[]> {\n  const sketchLayers: SupportedLayer[] = [];\n  const mapImageLayers: SupportedLayer[] = [];\n  let otherAnalysisLayers: SupportedLayer[] = [];\n  layers.forEach((layer) => {\n    if (isSketchLayer(layer) === true) {\n      sketchLayers.push(layer);\n    } else if (isMapImageLayer(layer)) {\n      mapImageLayers.push(layer);\n    } else {\n      otherAnalysisLayers.push(layer);\n    }\n  });\n\n  const analysisLayers: SupportedLayer[] = [];\n\n  if (sketchLayers.length > 0) {\n    const sketchLayersPromiseResult = await Promise.allSettled(\n      sketchLayers.map((sketchLayer) => getFeatureLayersFromSketchLayer(sketchLayer as __esri.MapNotesLayer, strings))\n    );\n    const sketchFeatureLayers = sketchLayersPromiseResult\n      .filter((res) => res.status === \"fulfilled\")\n      .map((fulfilledRes: PromiseFulfilledResult<FeatureLayer[]>) => fulfilledRes.value);\n    analysisLayers.push(...sketchFeatureLayers.flat());\n  }\n\n  if (mapImageLayers.length > 0) {\n    const mapImageLayersPromiseResult = await Promise.allSettled(\n      mapImageLayers.map((mapImageLayer) => getFeatureLayersFromMapImageLayer(mapImageLayer as __esri.MapImageLayer))\n    );\n    const mapImageFeatureLayers = mapImageLayersPromiseResult\n      .filter((res) => res.status === \"fulfilled\")\n      .map((fulfilledRes: PromiseFulfilledResult<FeatureLayer[]>) => fulfilledRes.value);\n    analysisLayers.push(...mapImageFeatureLayers.flat());\n  }\n\n  // Ensure that all other analysis layers are loaded or loading has been tried. An unloaded layer will be filtered out in the components\n  const otherAnalysisLayersLoadResults: PromiseSettledResult<SupportedLayer>[] = await Promise.allSettled(\n    otherAnalysisLayers.map((analysisLayer) =>\n      analysisLayer.loaded ? Promise.resolve(analysisLayer) : analysisLayer.load()\n    )\n  );\n\n  // Filter error load errors to not pass into components\n  otherAnalysisLayers = otherAnalysisLayersLoadResults\n    .filter((loadResults) => loadResults.status === \"fulfilled\")\n    .map((fulfilledResults: PromiseFulfilledResult<SupportedLayer>) => fulfilledResults.value);\n\n  return [...otherAnalysisLayers, ...analysisLayers];\n}\n\n/**\n * Checks if a Supported layer is a supported result\n * @param {__esri.Layer} gpResultValue The layer that you want to check\n * @returns { gpResultValue is SupportedResult} true if the layer is a supported result, otherwise false\n */\nexport function isSupportedResult(gpResultValue: __esri.Layer | PortalItem): gpResultValue is SupportedResult {\n  let isSupported = false;\n  const isPortalItem = gpResultValue instanceof PortalItem;\n  if (isPortalItem) {\n    isSupported = true;\n  } else {\n    isSupported =\n      isFeatureLayer(gpResultValue) ||\n      isImageryLayer(gpResultValue) ||\n      isTileLayer(gpResultValue) ||\n      isImageryTileLayer(gpResultValue) ||\n      isRouteLayer(gpResultValue) ||\n      isGroupLayer(gpResultValue);\n  }\n\n  return isSupported;\n}\n\n/**\n * Returns if an object is a supported layer\n * @param {__esri.Layer} layer The layer that you want to check\n * @returns {layer is SupportedLayer} True if the layer is a supported layer, otherwise false\n */\nexport function isSupportedLayer(layer: __esri.Layer): layer is SupportedLayer {\n  return (\n    (isFeatureLayer(layer) ||\n      isImageryLayer(layer) ||\n      isTileLayer(layer) ||\n      isImageryTileLayer(layer) ||\n      isCsvLayer(layer) ||\n      isKmlLayer(layer)) &&\n    isRouteLayer(layer) === false\n  );\n}\n\n/**\n * Gets a server url by removing specific layer information from a layer and leaving only the server portion\n * @param {SupportedLayer} layer the layer to get the server url of\n * @returns {string | undefined} the server url\n */\nfunction getServerUrlFromLayer(layer: SupportedLayer): string | undefined {\n  let serverUrl;\n  if (\"url\" in layer && isEmptyDataItem(layer.url) === false) {\n    const serviceType = getServiceType(layer.url);\n    serverUrl = `${layer.url.split(serviceType)[0]}${serviceType}`;\n  }\n  return serverUrl;\n}\n\n/**\n * Checks via a proxy server if the input layer is accessible and also returns the service url for it\n * @param {string} serverUrl\n * @param {string} portalUrl\n * @returns {Promise<string | undefined>}\n */\nconst getProxyServiceInfoHelper = memoize(\n  async (serverUrl: string, portalUrl?: string): Promise<string | undefined> => {\n    let status = false;\n    const url = window.location.href;\n    // NOTE: This is done for local development environments so they can function without a FQDN, but should not affect\n    // deployed apps.\n    if (url.includes(\"://localhost:\") === true || portalUrl === undefined) {\n      status = true;\n    } else {\n      const serviceUrl = `${serverUrl}${serverUrl.indexOf(\"?\") > -1 ? \"&\" : \"?\"}f=json`;\n      esriConfig.request.proxyUrl = `${portalUrl}/sharing/proxy`;\n      try {\n        const response = await request(serviceUrl, { useProxy: true });\n        status = isEmptyDataItem(response.data) === false;\n      } catch (exception) {\n        status = false;\n      }\n    }\n\n    return status === true ? serverUrl : undefined;\n  }\n);\n\n/**\n * Gets the proxy service info but attaches a layerId to the response\n * @param {SupportedLayer} layer layer being accessed via proxy service\n * @param {string} portalUrl current portal url\n * @returns {Promise<string | undefined>} layer.id is returned if layer was accessible\n */\nexport /** */\nconst getProxyServiceInfo = async (layer: SupportedLayer, portalUrl?: string): Promise<string | undefined> => {\n  let status;\n  const serverUrl = getServerUrlFromLayer(layer);\n\n  if (serverUrl !== undefined) {\n    status = await getProxyServiceInfoHelper(serverUrl, portalUrl);\n  } else {\n    status = layer.id;\n  }\n\n  return status !== undefined ? layer.id : undefined;\n};\n","import esriId from \"@arcgis/core/identity/IdentityManager\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport ImageryLayer from \"@arcgis/core/layers/ImageryLayer\";\nimport ImageryTileLayer from \"@arcgis/core/layers/ImageryTileLayer\";\nimport TileLayer from \"@arcgis/core/layers/TileLayer\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport * as geometryJsonUtils from \"@arcgis/core/geometry/support/jsonUtils\";\nimport Layer from \"@arcgis/core/layers/Layer\";\nimport PortalItem from \"@arcgis/core/portal/PortalItem\";\n\nimport { GeometryType, IFeature, IField } from \"@esri/arcgis-rest-types\";\n\nimport {\n  FeatureCollection,\n  GPDataType,\n  GPFeatureRecordSetLayer,\n  GPRasterDataLayer,\n  LayerUrlFilter,\n  LayerUrlRuleFilter\n} from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem } from \"../common\";\nimport { ErrorKeywords } from \"../errors/interfaces\";\nimport { throwError } from \"../t9n/errors\";\n\nimport { getServiceType, sanitizeUrl } from \"./common\";\nimport { isFeatureCollectionJSON, isGroupLayer, isImageryLayer } from \"./layer\";\n\nfunction getFeatureCollectionJSON(value: FeatureLayer): FeatureCollection {\n  const sourceArray = value.source.toArray();\n  const features: IFeature[] = sourceArray.map((graphic: __esri.Graphic) => graphic.toJSON());\n  const geometry = sourceArray[0].geometry;\n  const gpValue: FeatureCollection = {\n    layerDefinition: {\n      id: value.id,\n      drawingInfo: {\n        renderer: value.renderer.toJSON()\n      },\n      name: value.title\n    },\n    featureSet: {\n      features\n    },\n    nextObjectId: sourceArray.length,\n    showLegend: true\n  };\n  if (!isEmptyDataItem(value.objectIdField)) {\n    gpValue.layerDefinition.objectIdField = value.objectIdField;\n  }\n  if (!isEmptyDataItem(geometry)) {\n    gpValue.layerDefinition.geometryType = geometryJsonUtils.getJsonType(geometry) as GeometryType;\n  }\n  if (!isEmptyDataItem(value.spatialReference)) {\n    gpValue.layerDefinition.spatialReference = value.spatialReference.toJSON();\n  }\n  if (!isEmptyDataItem(value.fields)) {\n    gpValue.layerDefinition.fields = value?.fields.map((field: __esri.Field): IField => {\n      const fieldJson: IField = field.toJSON();\n      // JSAPI has issue with field.toJSON conversion and sketch layer field lengths.\n      // delete length property on OID field and string field should be at-least 255.\n      // https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/52165\n      // https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/52159\n      if (fieldJson.type === \"esriFieldTypeOID\" && fieldJson.length === -1) {\n        delete fieldJson.length;\n      }\n      if (fieldJson.type === \"esriFieldTypeString\" && fieldJson.length === -1) {\n        fieldJson.length = 255;\n      }\n      return fieldJson;\n    });\n  }\n  if (!isEmptyDataItem(value.types)) {\n    gpValue.layerDefinition.types = value.types.map((type: __esri.FeatureType) => {\n      return type.toJSON();\n    });\n  }\n  if (!isEmptyDataItem(value.typeIdField)) {\n    gpValue.layerDefinition.typeIdField = value.typeIdField;\n  }\n  if (!isEmptyDataItem(value.popupTemplate)) {\n    gpValue.popupInfo = value.popupTemplate.toJSON();\n  }\n  return gpValue;\n}\n\n/**\n * Returns GPFeatureRecordSetLayer value for a feature layer.\n * @param {FeatureLayer} value The featule layer passed\n * @param {MapView} mapView current MapView instance\n * @returns {GPFeatureRecordSetLayer | undefined} returns the GPFeatureRecordSetLayer object\n */\nexport function getGPFeatureRecordSetLayerValue(\n  value: FeatureLayer,\n  mapView?: MapView\n): GPFeatureRecordSetLayer | undefined {\n  let gpValue: GPFeatureRecordSetLayer | undefined;\n  if (isEmptyDataItem(value.url) === false) {\n    const credential = esriId.findCredential(value.url);\n    gpValue = {\n      url: `${value.url}/${value.layerId ?? 0}`\n    } as LayerUrlFilter;\n    if (credential !== undefined) {\n      gpValue.serviceToken = credential.token;\n    }\n    if (isEmptyDataItem(value.definitionExpression) === false) {\n      gpValue.filter = value.definitionExpression;\n    }\n    if (isEmptyDataItem(value.sourceJSON?.serviceItemId) === false) {\n      gpValue.itemId = value.sourceJSON?.serviceItemId;\n    }\n    // pass time filter when present\n    if (\n      isEmptyDataItem<__esri.TimeInfo>(value.timeInfo) === false &&\n      value.useViewTime === true &&\n      isEmptyDataItem<__esri.TimeExtent>(mapView?.timeExtent) === false\n    ) {\n      let timeFilter = \"\";\n      if (mapView?.timeExtent.start !== undefined) {\n        timeFilter += mapView?.timeExtent.start.getTime();\n        if (mapView?.timeExtent.end !== undefined) {\n          timeFilter += `, ${mapView?.timeExtent.end.getTime()}`;\n        }\n      } else if (mapView?.timeExtent.end !== undefined) {\n        timeFilter += mapView?.timeExtent.end.getTime();\n      }\n      if (timeFilter.length > 0) {\n        gpValue.time = timeFilter;\n      }\n    }\n  } else if (value.source !== undefined) {\n    // handle feature collection.\n    gpValue = getFeatureCollectionJSON(value);\n  }\n  return gpValue;\n}\n\n/**\n * Loads a list of GPFeatureRecordSetLayers and returns a list of FeatureLayers\n * @param {LayerUrlFilter[]} layers the list of unloaded layers (with urls)\n * @returns {Promise<__esri.FeatureLayer[]> } list of feature layer instances\n */\nexport async function loadFeatureLayers(layers: LayerUrlFilter[]): Promise<__esri.FeatureLayer[]> {\n  const featureLayers = layers?.map((layer: LayerUrlFilter) => {\n    return new FeatureLayer({ url: layer.url }).load();\n  });\n  return Promise.all(featureLayers);\n}\n\n/**\n * Returns the name of the service from the layer's url\n * @param {string} url layer url\n * @returns {string} the name of the service\n */\nexport function getServiceName(url?: string): string {\n  let serviceName = \"\";\n  if (url !== undefined && url !== \"\") {\n    const urlParts: string[] = url.split(\"/\");\n    const serviceType = getServiceType(url);\n    serviceName = urlParts[urlParts.indexOf(serviceType) - 1];\n  }\n\n  return serviceName;\n}\n\n/**\n * Returns GPFeatureRecordSetLayer value for an imagery layer including token/renderingrull/mosaicrule\n * @param {ImageryLayer} value imagery layer passed\n * @returns {GPRasterDataLayer | undefined} GPRasterDataLayer data value\n */\nexport function getImageryLayerValue(value: ImageryLayer | ImageryTileLayer): GPRasterDataLayer | undefined {\n  let gpValue: LayerUrlRuleFilter | undefined;\n  if (isEmptyDataItem(value.url) === false) {\n    let url = value.url;\n    if (url && url.indexOf(\"?token=\") > 0) {\n      url = url.slice(0, url.indexOf(\"?token=\"));\n    }\n    const credential = esriId.findCredential(value.url);\n    gpValue = {\n      url: `${url}`\n    } as LayerUrlRuleFilter;\n    if (credential !== undefined) {\n      gpValue = {\n        url: `${url}?token=${credential.token}`\n      } as LayerUrlRuleFilter;\n    }\n    if (isImageryLayer(value) && value.renderingRule !== undefined && value.renderingRule !== null) {\n      gpValue.renderingRule = value.renderingRule.toJSON();\n    }\n    if (isImageryLayer(value) && value.definitionExpression !== undefined && value.definitionExpression !== null) {\n      let mosaicRule = value.mosaicRule ?? __esri.MosaicRule.fromJSON(value.sourceJSON);\n      if (mosaicRule !== undefined && mosaicRule !== null) {\n        mosaicRule = mosaicRule.clone();\n        mosaicRule.where = value.definitionExpression;\n        gpValue.mosaicRule = mosaicRule.toJSON();\n      }\n    } else if (isImageryLayer(value) && value.mosaicRule !== undefined && value.mosaicRule !== null) {\n      gpValue.mosaicRule = value.mosaicRule.toJSON();\n    }\n  }\n  return gpValue;\n}\n\n/**\n * Returns GPFeatureRecordSetLayer value for a tile layer\n * @param {TileLayer} value tile layer passed\n * @returns {GPRasterDataLayer | undefined} GPRasterDataLayer data value\n */\nexport function getTileLayerValue(value: TileLayer): GPRasterDataLayer | undefined {\n  let gpValue: GPRasterDataLayer | undefined;\n  if (isEmptyDataItem(value.url) === false) {\n    gpValue = {\n      url: `${value.url}`\n    } as LayerUrlFilter;\n  }\n  return gpValue;\n}\n\n/**\n * Helper function for getting a layer object using the layer's url\n * @param {string} url the layer's url\n * @returns {Promise<Layer | undefined>} a layer object\n */\nasync function getLayerObjectFromUrl(url: string): Promise<Layer | undefined> {\n  let layer: Layer | undefined = undefined;\n\n  try {\n    layer = await Layer.fromArcGISServerUrl({\n      url: sanitizeUrl(url)\n    });\n  } catch (error) {\n    await throwError(ErrorKeywords.LayerUnavailable, error);\n  }\n\n  return layer;\n}\n\n/**\n * Helper function for getting a layer object using the layer's itemIdƒ\n * @param {string} itemId the layer's itemId\n * @returns {Promise<Layer | undefined>} a layer object\n */\nasync function getLayerObjectFromItemId(itemId: string): Promise<Layer | undefined> {\n  let layer: Layer | undefined = undefined;\n\n  try {\n    layer = await Layer.fromPortalItem({\n      portalItem: new PortalItem({\n        id: itemId\n      })\n    });\n  } catch (error) {\n    await throwError(ErrorKeywords.LayerUnavailable, error);\n  }\n\n  return layer;\n}\n\n/**\n * Helper function to load/group layer a layer object, and handle errors\n * @param {Layer} layer the layer to load\n * @returns {Promise<Layer>} the loaded layer\n */\nexport async function loadLayer(layer: Layer): Promise<Layer | undefined> {\n  let loadedLayer: Layer | undefined = undefined;\n\n  try {\n    loadedLayer = await (isGroupLayer(layer) === true ? layer.loadAll() : layer.load());\n  } catch (error) {\n    await throwError(ErrorKeywords.LayerLoadFailure, error);\n  }\n\n  return loadedLayer;\n}\n\n/**\n * This is a helper function that will create a FeatureLayer object from the GPFeatureRecordSetLayer\n * @param {GPDataType} gpResultValue GPFeatureRecordSetLayer\n * @returns {Promise<Layer | undefined>} returns a feature layer instance\n */\nexport async function getLayerObject(gpResultValue: GPDataType): Promise<Layer | undefined> {\n  let layer: Layer | undefined = undefined;\n\n  if (\n    typeof gpResultValue === \"object\" &&\n    \"itemId\" in gpResultValue &&\n    isEmptyDataItem(gpResultValue.itemId) === false\n  ) {\n    // type narrowing isn't working here, so we need to cast itemId to string\n    layer = await getLayerObjectFromItemId(gpResultValue.itemId as string);\n  } else if (\n    typeof gpResultValue === \"object\" &&\n    \"url\" in gpResultValue &&\n    isEmptyDataItem(gpResultValue.url) === false\n  ) {\n    layer = await getLayerObjectFromUrl(gpResultValue.url);\n  }\n  if (layer !== undefined) {\n    layer = await loadLayer(layer);\n  }\n\n  return layer;\n}\n\n/**\n * This is a helper function that will create a FeatureLayer object from the GPFeatureRecordSetLayer\n * @param {GPDataType} gpInputValue the job's layer value\n * @returns {Promise<Layer | undefined>} a layer object\n */\nexport async function getInputLayerObject(gpInputValue: GPDataType): Promise<Layer | undefined> {\n  let layer: Layer | undefined = undefined;\n  const errors = [];\n\n  const { url, itemId } = gpInputValue as { url: string; itemId: string };\n\n  if (isEmptyDataItem(url) === false) {\n    try {\n      layer = await getLayerObjectFromUrl(url);\n    } catch (error) {\n      // if error is thrown, try to load layer from itemId, but save error\n      errors.push(error);\n    }\n  }\n\n  // if the layer is still undefined, try to load layer from itemId\n  if (isEmptyDataItem(itemId) === false && isEmptyDataItem(layer) === true) {\n    try {\n      layer = await getLayerObjectFromItemId(itemId);\n    } catch (error) {\n      // unable to load layer from url or itemId, save error to throw later\n      errors.push(error);\n    }\n  }\n\n  // If this code is reached the sketch is no longer in the webmap\n  // Create an empty feature layer with a load error to pass through the warning to the UI\n  if (isFeatureCollectionJSON(gpInputValue as FeatureCollection)) {\n    layer = new FeatureLayer({\n      title: (gpInputValue as FeatureCollection)?.layerDefinition.name ?? \"\"\n    });\n  }\n\n  if (isEmptyDataItem(layer) === true && errors.length > 0) {\n    // if layer is still undefined and attempts to load layer from url and itemId failed, throw error\n    await throwError(ErrorKeywords.LayerUnavailable, errors);\n  }\n\n  return layer;\n}\n","import { isEqual, uniqWith } from \"lodash-es\";\n\nimport {\n  AnalysisToolValidationParams,\n  AnalysisValidationParams,\n  AnalysisValidityState,\n  MessageType,\n  Url\n} from \"analysis-ui-schema\";\n\nimport { ArcgisWebAnalysisError } from \"../errors\";\nimport { CLIENT_THROWN_ERROR } from \"../t9n/errors/interfaces\";\nimport { ErrorKeywords } from \"../errors/interfaces\";\n\nimport { getServiceName } from \"./gp-layer\";\n\nexport const ValidityState = {\n  Valid: \"valid\",\n  Info: \"informative\",\n  Warning: \"warning\",\n  Error: \"error\"\n} as const;\n\nexport type ValidityState = (typeof ValidityState)[keyof typeof ValidityState];\n\n/**\n * Parameter error interface\n * Used to track parameter-level errors\n */\nexport interface AnalysisParameterError {\n  /**\n   * A list of parameter errors\n   */\n  errors: AnalysisValidationParams[];\n\n  /**\n   * An optional map of nested parameter names to parameter errors\n   * This allows for complex components to track their own errors\n   * rather than relying on the tool\n   */\n  subParameterErrors?: {\n    [key: string]: AnalysisParameterError;\n  };\n}\n\n/**\n * Analysis tool error state interface\n * Used to track both tool-level and parameter-level errors\n * The location of the error is determined by where the error key\n * should be displayed in the UI\n */\nexport interface AnalysisToolErrorState {\n  /**\n   * Array of tool-level error keys\n   * These are the errors that should be displayed at the top of the tool\n   * including errors in analysis settings\n   */\n  toolAppErrorState: AnalysisToolValidationParams[];\n\n  /**\n   * Object mapping parameter names to the parameter's errors\n   * These errors will be propagated for display in the input component's UI\n   */\n  parameterErrorState: {\n    [key: string]: AnalysisParameterError;\n  };\n}\n\n/**\n * Counterpart to the AnalysisValidityState interface\n * This interface is defined externally to this project\n */\ninterface RFxValidityState {\n  valid: boolean;\n  errorStrings: string[];\n}\n\n/**\n *  check if error was thrown from the client JS code (this project), the server, or third party\n * @param {Error | ArcgisWebAnalysisError | undefined} error error object to check\n * @returns {boolean} true if error was thrown from client code\n */\nexport function isClientThrownError(error: Error | ArcgisWebAnalysisError | undefined): boolean {\n  /**\n   *  FIXME: ideally (e instanceof ArcgisWebAnalysisError) would suffice than looking at e.details.type\n   *  but that check is false here. It may be related to error was thrown in analysis-core\n   *  and when stencil code catches it, may be the instance information is getting lost in transit.\n   */\n  return error !== undefined && \"details\" in error && error.details?.type === CLIENT_THROWN_ERROR;\n}\n\n/**\n *  @param {Error | ArcgisWebAnalysisError} error error object\n *  @param {string | undefined} defaultErrorString default error string to return if error is not thrown from client code\n *  @returns {string | undefined} error message (if available or fallback provided)\n */\nexport function extractErrorMessage(\n  error?: Error | ArcgisWebAnalysisError,\n  defaultErrorString?: string\n): string | undefined {\n  return isClientThrownError(error) ? error?.message : defaultErrorString;\n}\n\n/**\n * Helper to derrive a validity state from an array of AnalysisValidityState objects\n * @param {AnalysisValidityState[]} validityStates An array of AnalysisValidityState objects (one or more)\n * @returns {ValidityState} A ValidityState enum value\n */\nexport function getValidityStatus(validityStates: (AnalysisValidityState | RFxValidityState)[]): ValidityState {\n  const areAllStatesValid = validityStates.every(({ valid }) => valid);\n  return areAllStatesValid ? ValidityState.Valid : ValidityState.Error;\n}\n\n/**\n * Converts an error to an AnalysisValidationParams object\n * This is used to convert errors to a format that can be consumed by analysis input components\n * @param {object} params The params object\n * @param {Error} params.error The error to convert\n * @param {string | undefined} params.errorKey The error key to convert\n * @param {{ [key: string]: string }} params.variables Variables to pass to the error message. Defaults to an empty object\n * @param {ValidityState} params.type The validity state of the error. Defaults to ValidityState.Error\n * @param {string | undefined} params.message The error message to use if it cannot be extracted from the error\n * @returns {AnalysisValidationParams} An AnalysisValidationParams object\n */\nexport function convertErrorToAnalysisValidationParams({\n  error,\n  errorKey,\n  message,\n  variables = {},\n  type = \"error\"\n}: {\n  error?: Error;\n  errorKey?: string;\n  variables?: { [key: string]: string };\n  type?: MessageType;\n  message?: string;\n}): AnalysisValidationParams {\n  return {\n    key: error?.name ?? errorKey ?? \"\",\n    type: type,\n    message: extractErrorMessage(error, message),\n    variables: variables\n  };\n}\n\n/**\n * Helper to update the tool error state with multiple AnalysisValidityState objects\n * @param {AnalysisToolErrorState} errorState The current error state\n * @param {AnalysisValidityState[]} validityStates The validity states to update the error state with\n * @param {AnalysisValidityState[]} RFxValidityStates The RFx validity states to update the error state with\n * @returns {AnalysisToolErrorState} An updated error state\n */\nexport function updateToolErrorState(\n  errorState: AnalysisToolErrorState,\n  validityStates: AnalysisValidityState[],\n  RFxValidityStates: RFxValidityState[] = []\n): AnalysisToolErrorState {\n  const newErrorState: AnalysisToolErrorState = { ...errorState, toolAppErrorState: [] };\n\n  const allStates = [...validityStates, ...RFxValidityStates];\n  allStates.forEach((state: AnalysisValidityState | RFxValidityState) => {\n    if (state.valid === false) {\n      let newToolErrors: AnalysisToolValidationParams[] = [];\n\n      if (\"errorKeys\" in state) {\n        newToolErrors = state.errorKeys.map((errorKey: string | undefined) =>\n          convertErrorToAnalysisValidationParams({ errorKey })\n        );\n      } else if (\"errorStrings\" in state) {\n        newToolErrors = state.errorStrings.map((errorString: string | undefined) =>\n          convertErrorToAnalysisValidationParams({ message: errorString })\n        );\n      }\n\n      newErrorState.toolAppErrorState.push(...newToolErrors);\n    }\n  });\n\n  // Remove duplicates\n  newErrorState.toolAppErrorState = uniqWith(newErrorState.toolAppErrorState, isEqual);\n\n  return newErrorState;\n}\n\n/**\n * Returns a validity state object for a given set of errors\n * @param {Error[]} errorList An array of errors\n * @returns {AnalysisValidityState} A validity state object\n */\nexport function getParameterErrors(errorList: (Error | ArcgisWebAnalysisError)[]): AnalysisParameterError {\n  const parameterErrors: AnalysisParameterError = {\n    errors: []\n  };\n\n  for (const error of errorList) {\n    let convertedError: AnalysisValidationParams | undefined = undefined;\n    const errorKey = error.name;\n\n    switch (errorKey) {\n      case ErrorKeywords.LayerUnavailable:\n        const layer = \"details\" in error ? error.details?.layer : undefined;\n        convertedError = convertErrorToAnalysisValidationParams({\n          error,\n          errorKey,\n          variables: {\n            title: getServiceName((layer as Url)?.url) ?? \"\"\n          }\n        });\n        break;\n      default:\n        break;\n    }\n    // TODO: Add more cases as needed\n\n    if (convertedError !== undefined) {\n      parameterErrors.errors.push(convertedError);\n    }\n  }\n\n  return parameterErrors;\n}\n","import FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\nimport Layer from \"@arcgis/core/layers/Layer\";\nimport JobInfo from \"@arcgis/core/rest/support/JobInfo\";\nimport ParameterValue from \"@arcgis/core/rest/support/ParameterValue\";\n\nimport { get } from \"lodash-es\";\n\nimport {\n  AnalysisEngine,\n  AnalysisToolDataItem,\n  AnalysisType,\n  FeatureCollection,\n  GPFeatureRecordSetLayer,\n  LocaleItem,\n  OutputName,\n  ParamViewModelKey,\n  RFxTemplate\n} from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem } from \"../common\";\nimport { generateParamGroupDataTypeKey, generateSelectedLayersKey } from \"../schema\";\nimport {\n  AnalysisHistoryItem,\n  AnalysisJobStatus,\n  SerializedHistoryItem,\n  SerializedParameterValue\n} from \"../schema/interfaces\";\nimport { ArcgisWebAnalysisError } from \"../errors\";\n\nimport {\n  AnalysisToolGlobalData,\n  ConvertJobLayersToMapLayersReturnType,\n  ConvertJobParamsToToolDataOptions,\n  ConvertJobParamsToToolDataReturnType,\n  SupportedLayer\n} from \"./interfaces\";\nimport { getInputLayerObject, loadLayer } from \"./gp-layer\";\nimport { isFeatureCollectionJSON } from \"./layer\";\nimport { sanitizeUrl } from \"./common\";\nimport { AnalysisToolErrorState, getParameterErrors } from \"./error\";\n\n/**\n * Filters the messages for a historyItem to not include extraneous messages.\n * Part of the intended effect here is to reduce storage size.\n * @param {__esri.GPMessage[]} messages the messages to be filtered\n * @param {boolean = false} isWebtool whether or not the tool associated with the messages is a webtool, default to false.\n * @param analysisType\n * @returns {__esri.GPMessage[]} the filtered messages\n */\nexport function filterHistoryItemMessages(\n  messages: __esri.GPMessage[],\n  analysisType?: AnalysisType\n): __esri.GPMessage[] {\n  return messages.filter((message: __esri.GPMessage) => {\n    let parsedMessage: { [key: string]: string };\n    try {\n      parsedMessage = JSON.parse(message.description);\n    } catch (e) {\n      parsedMessage = { description: message.description };\n    }\n\n    const isCreditMessage = \"cost\" in parsedMessage;\n    const isTranslatableMessage = \"messageCode\" in parsedMessage;\n    const isWebTool = analysisType === AnalysisType.WebTool;\n    return (\n      (message.type === \"warning\" || message.type === \"error\") &&\n      (isCreditMessage || isTranslatableMessage || isWebTool)\n    );\n  });\n}\n\n/**\n * Converts the esriJobMessageType to something we use internally for comparisons.\n * @param {string} messageType the type of the message on the message object\n * @returns {string} the type used for internal comparisons\n */\nexport function convertEsriMessageType(messageType: string): string {\n  let type = \"\";\n  switch (messageType) {\n    case \"esriJobMessageTypeInformative\":\n      type = \"informative\";\n      break;\n    case \"esriJobMessageTypeError\":\n      type = \"error\";\n      break;\n    case \"esriJobMessageTypeWarning\":\n      type = \"warning\";\n      break;\n    case \"error\":\n    case \"informative\":\n    case \"warning\":\n    default:\n      type = messageType;\n      break;\n  }\n  return type;\n}\n\n/**\n * Transforms GPFeatureRecordSetLayer from GPTask result params into mapLayers\n * @param {GPFeatureRecordSetLayer[]} jobLayers The result GPFeatureRecordSetLayer from a history item\n * @param {SupportedLayer[]} availableMapLayers the already available layers to check against\n * @returns {Promise<[SupportedLayer[], SupportedLayer[]]>} layers that should be added to mapLayers from the job params\n */\nexport async function convertJobLayersToMapLayers(\n  jobLayers: GPFeatureRecordSetLayer[],\n  availableMapLayers: SupportedLayer[]\n): Promise<ConvertJobLayersToMapLayersReturnType> {\n  const layersToAdd: GPFeatureRecordSetLayer[] = [];\n  const existingLoadedLayers: SupportedLayer[] = [];\n  const layerErrors: ArcgisWebAnalysisError[] = [];\n\n  jobLayers.forEach((gpLayer: GPFeatureRecordSetLayer) => {\n    let foundLayer;\n    // Prefer using URL first over itemId\n    if (\"url\" in gpLayer) {\n      const findCb = (availableLayer: SupportedLayer) => {\n        const hasLayerId = \"layerId\" in availableLayer;\n        const urlId = hasLayerId ? `/${availableLayer.layerId ?? 0}` : \"\";\n        const compareUrl = `${(availableLayer as FeatureLayer).url}${urlId}`;\n        return sanitizeUrl(gpLayer.url) === compareUrl;\n      };\n      foundLayer = availableMapLayers.find((availableLayer) => findCb(availableLayer));\n    } else if (\"itemId\" in gpLayer) {\n      // TODO: Could be a feature collection if the job did not create a service\n      // TODO: Does this handle sub layers?\n      foundLayer = availableMapLayers.find((availableLayer) => gpLayer.itemId === availableLayer.portalItem?.id);\n    } else if (\n      isFeatureCollectionJSON(gpLayer as FeatureCollection) &&\n      (gpLayer as FeatureCollection)?.layerDefinition.name !== undefined\n    ) {\n      foundLayer = availableMapLayers.find(\n        (availableLayer) => (gpLayer as FeatureCollection)?.layerDefinition.name === availableLayer.title\n      );\n    }\n    if (foundLayer === undefined) {\n      layersToAdd.push(gpLayer);\n    } else {\n      existingLoadedLayers.push(foundLayer);\n    }\n  });\n\n  const unloadedLayersToAdd = layersToAdd.map(async (layer: GPFeatureRecordSetLayer) => {\n    let loadedLayer: Layer | undefined;\n    // handle any errors in finding/creating the layer\n    try {\n      loadedLayer = await getInputLayerObject(layer);\n    } catch (error) {\n      layerErrors.push(\n        new ArcgisWebAnalysisError(\n          error.name,\n          error.message,\n          {\n            ...error.details,\n            layer\n          },\n          error.cause\n        )\n      );\n    }\n\n    // handle any errors in the layer loading\n    try {\n      loadedLayer = await loadLayer(loadedLayer as Layer);\n    } catch (error) {\n      layerErrors.push(\n        new ArcgisWebAnalysisError(\n          error.name,\n          error.message,\n          {\n            ...error.details,\n            layer\n          },\n          error.cause\n        )\n      );\n    }\n\n    return loadedLayer;\n  });\n\n  let loadedLayersToAdd = await Promise.all(unloadedLayersToAdd);\n  loadedLayersToAdd = loadedLayersToAdd.filter((layer) => layer !== undefined) ?? [];\n  // assertion to SupportedLayer[] is safe because of the filter for undefined above.\n  return {\n    existingLayers: existingLoadedLayers,\n    layersToAdd: loadedLayersToAdd as SupportedLayer[],\n    errors: layerErrors\n  };\n}\n\n/**\n * This method takes in job params and tool ui json and converts it into a useable data object for a tool.\n * @param {object} props - The options object.\n * @param props.jobParams AnalysisToolData, typically from either a history item or from a GP Task\n * @param props.toolJSON Tool UI JSON for this specific tool\n * @param props.uiOnlyParams\n * @param props.availableMapLayers the layers in the map to check against\n * @param props.toolName The name of the current tool\n * @param props.isWebTool Whether or not the tool is a web tool\n * @returns {Promise<{convertedJobParams: AnalysisToolGlobalData, layers: SupportedLayer[]}>} Tool data\n */\nexport async function convertJobParamsToToolData(\n  props: ConvertJobParamsToToolDataOptions\n): Promise<ConvertJobParamsToToolDataReturnType> {\n  const { jobParams, uiOnlyParams, toolName, availableMapLayers, toolJSON, isWebTool } = props;\n  const convertedJobParams: AnalysisToolGlobalData = {};\n  const resultingErrorState: AnalysisToolErrorState = {\n    toolAppErrorState: [],\n    parameterErrorState: {}\n  };\n  let layers: SupportedLayer[] = [];\n  const toolUIParamModel = uiOnlyParams?.[ParamViewModelKey];\n  let combinedParams = jobParams;\n  /**\n   * In case of `ChooseBestFacilities` where we use `submissionName` and different ui parameter\n   * names for each REST parameter, we need the tool data to be updated based on the\n   * combined parameters of jobParams and uiOnlyParams.\n   * TODO: In fact we can use this approach for all tools but that can be risky for R2 as we\n   * are past code freeze so scoped this combinedParams only for this tool.\n   * All other tools iterate on jobParams as before\n   */\n  if (toolName === \"ChooseBestFacilities\") {\n    combinedParams = { ...jobParams, ...uiOnlyParams };\n  }\n\n  for (const key in combinedParams) {\n    const parameterValue = <any>combinedParams[key];\n    /**\n     * we are checking if submissionName was used for this key, this only applies for combinedParams of jobParams and uiParams\n     * Only ChooseBestFacilities passes combinedParams in the above loop\n     * using this name we find the `toolJSONParam`\n     * for example: when key is \"maxCapCov_demandLocationsLayer\" parameterValue  = {\n     *   \"itemId\": \"82b3bc887ff842efa10e3ca24ab0b016\"\n     *   \"url\":\"\"https://servicesdev.arcgis.com/b5ADkBof6gCHCFQm/ArcGIS/rest/services/Power_Plants_in_the_U_S/FeatureServer/0\"\n     * }\n     * using parameterViewModel we get the submission name to be \"demandLocationsLayer\"\n     * and we get the REST dataType as GPFeatureRecordSetLayer, which then sets the selectedLayer property for maxCapCov_demandLocationsLayer\n     * correctly as maxCapCov_demandLocationsLayer_SelectedLayers = [layerInstance Object]\n     * fixes https://devtopia.esri.com/WebGIS/arcgis-web-analysis/issues/3786\n     */\n    const submissionName = get(toolUIParamModel, [key, \"submissionName\"]);\n    let toolJSONParam = toolJSON?.parameters?.find(\n      (param: { name: string }) => param.name === key || param.name === submissionName\n    );\n    // If the ui only params contain a data type for the key, use that to determine the conversion of it's value\n    // This is the case for the parameter-group as it's value is always sent as a GPString, but the data used to\n    // re-populate the parameter-group (and within the component) can be of any type\n    const dataTypeKey = generateParamGroupDataTypeKey(key);\n    const dataType = uiOnlyParams[dataTypeKey] ?? toolJSONParam?.dataType;\n\n    // If the tool is a web tool, we need to make sure that context is included in the converted\n    // result. For web tools context is not set in the toolJson but can still be present in the\n    // jobParams and should not be filtered out.\n    const isWebToolContext = isWebTool && key === \"context\";\n    if (isWebToolContext && toolJSONParam === undefined) {\n      toolJSONParam = {\n        name: \"context\",\n        dataType: \"GPString\",\n        direction: \"esriGPParameterDirectionInput\"\n      };\n    }\n\n    if (parameterValue !== undefined && parameterValue !== null && toolJSONParam !== undefined) {\n      switch (dataType) {\n        case \"GPString\":\n          if (key === \"context\") {\n            convertedJobParams[key] = !isEmptyDataItem(parameterValue) ? parameterValue : undefined;\n            continue;\n          }\n          if (!Array.isArray(parameterValue)) {\n            if (typeof parameterValue === \"object\" && !Array.isArray(parameterValue)) {\n              if (key === \"model\" || key === \"modelArguments\") {\n                convertedJobParams[key] = parameterValue;\n              } else {\n                // Treat as a layer input\n                const gpLayerValue = <GPFeatureRecordSetLayer>parameterValue;\n                const {\n                  existingLayers,\n                  layersToAdd,\n                  errors: layerErrors\n                } = await convertJobLayersToMapLayers([gpLayerValue], availableMapLayers);\n                const selectedLayersKey = generateSelectedLayersKey(key);\n                if (layerErrors.length > 0) {\n                  resultingErrorState.parameterErrorState[key] = getParameterErrors(layerErrors);\n                }\n\n                convertedJobParams[key] = gpLayerValue;\n                convertedJobParams[selectedLayersKey] = [...existingLayers, ...layersToAdd];\n                layers = layers.concat(layersToAdd);\n              }\n            } else {\n              // Handle the output name parameter\n              if (\n                typeof parameterValue === \"string\" &&\n                (parameterValue.includes(\"serviceProperties\") || parameterValue.includes(\"itemProperties\"))\n              ) {\n                const outputName: OutputName = JSON.parse(parameterValue);\n                convertedJobParams[key] =\n                  outputName?.serviceProperties?.name ?? outputName.itemProperties?.title ?? undefined;\n              } else {\n                // All other GPString can just be applied without extra logic\n                convertedJobParams[key] = String(parameterValue);\n              }\n            }\n            break;\n          } else {\n            // Else we do not break and fall through to the next condition\n            // This way we cleanly handle the incorrect REST data type\n            toolJSONParam.dataType = \"GPMultiValue:GPString\";\n          }\n        case \"GPMultiValue:GPString\":\n          const multiParameterValue = Array.isArray(parameterValue) ? parameterValue : [parameterValue];\n          if (multiParameterValue.every((val) => typeof val === \"object\")) {\n            // Treat as a layer input\n            const gpLayerValue = <GPFeatureRecordSetLayer[]>multiParameterValue;\n            const {\n              existingLayers,\n              layersToAdd,\n              errors: layerErrors\n            } = await convertJobLayersToMapLayers(gpLayerValue, availableMapLayers);\n            const selectedLayersKey = generateSelectedLayersKey(key);\n            if (layerErrors.length > 0) {\n              resultingErrorState.parameterErrorState[key] = getParameterErrors(layerErrors);\n            }\n\n            convertedJobParams[key] = gpLayerValue;\n            convertedJobParams[selectedLayersKey] = [...existingLayers, ...layersToAdd];\n            layers = layers.concat(layersToAdd);\n          } else {\n            convertedJobParams[key] = multiParameterValue.map((val) => String(val));\n          }\n          break;\n        case \"GPFeatureRecordSetLayer\":\n        case \"GPRecordSet\":\n        case \"GPMultiValue:GPFeatureRecordSetLayer\":\n        case \"GPMultiValue:GPRecordSet\":\n          {\n            const gpLayerValue = <GPFeatureRecordSetLayer | GPFeatureRecordSetLayer[]>parameterValue;\n            const {\n              existingLayers,\n              layersToAdd,\n              errors: layerErrors\n            } = await convertJobLayersToMapLayers(\n              Array.isArray(gpLayerValue) ? gpLayerValue : [gpLayerValue],\n              availableMapLayers\n            );\n            const selectedLayersKey = generateSelectedLayersKey(key);\n            if (layerErrors.length > 0) {\n              resultingErrorState.parameterErrorState[key] = getParameterErrors(layerErrors);\n            }\n\n            convertedJobParams[key] = gpLayerValue;\n            convertedJobParams[selectedLayersKey] = [...existingLayers, ...layersToAdd];\n            layers = layers.concat(layersToAdd);\n          }\n          break;\n        case \"GPDate\":\n        case \"GPBoolean\":\n        case \"GPDouble\":\n        case \"GPLong\":\n        case \"GPMultiValue:GPDouble\":\n        case \"GPLinearUnit\":\n        case \"Field\":\n        default:\n          convertedJobParams[key] = parameterValue;\n          break;\n      }\n    }\n  }\n  return { convertedJobParams, layers, resultingErrorState };\n}\n\n/**\n * Parses the jobInfo specifically for a historyItem and returns the normal object instead of the serialized one.\n * @param {SerializedHistoryItem} serializedHistoryItem the serialized history item that needs to be parsed\n * @returns {AnalysisHistoryItem} the parsed history item\n */\nexport function parseSerializedHistoryItem(serializedHistoryItem?: SerializedHistoryItem): AnalysisHistoryItem {\n  const serializedJobInfo =\n    serializedHistoryItem?.jobInfo !== undefined ? JSON.parse(serializedHistoryItem?.jobInfo) : {};\n  return {\n    ...serializedHistoryItem,\n    jobInfo: new JobInfo({ ...serializedJobInfo }),\n    results:\n      serializedHistoryItem?.results !== undefined\n        ? serializedHistoryItem.results.map((result: SerializedParameterValue) => {\n            const parsedResult = { ...result };\n            try {\n              parsedResult.value = Array.isArray(result.value)\n                ? result.value.map((stringifiedResult: string) => JSON.parse(stringifiedResult))\n                : JSON.parse(result.value);\n            } catch (e) {\n              // no-op\n            }\n            return new ParameterValue({\n              dataType: parsedResult.dataType as ParameterValue[\"dataType\"],\n              paramName: parsedResult.paramName,\n              value: parsedResult.value as ParameterValue[\"value\"]\n            });\n          })\n        : undefined\n  } as AnalysisHistoryItem;\n}\n\n/**\n * Returns true if the message input is a credit message that is also a warning.\n * @param {__esri.GPMessage[]} message the message to be checked\n * @returns {boolean} true if the message is the credit message.\n */\nexport function isWarningCreditMessage(message: __esri.GPMessage): boolean {\n  let isCreditMessage = false;\n  try {\n    isCreditMessage = \"cost\" in JSON.parse(message.description) && message.type === \"warning\";\n  } catch {\n    /** no-op */\n  }\n  return isCreditMessage;\n}\n\n/**\n * Get system raster function definition key from input RFT\n * @param {RFxTemplate} rfxTemplate to get the system raster function definition key from\n * @returns {string | undefined} the system RFx definition key or undefined for custom function cases\n */\nexport function getRFxDefKeyFromRFT(rfxTemplate: RFxTemplate): string | undefined {\n  let functionDefKey = rfxTemplate?.function?.type;\n  if (functionDefKey === \"LocalFunction\") {\n    // for local funcitons, return rfx def key as `LocalFunction__${localOp}`\n    // for example, return \"LocalFunction__1\" for Plus function\n    const localOp = rfxTemplate.arguments?.Operation?.value?.toString();\n    if (localOp !== undefined) {\n      functionDefKey += `__${localOp}`;\n    }\n  }\n  return functionDefKey;\n}\n\n/**\n * Get translated RFT name for the input history item\n * @param {AnalysisHistoryItem} historyItem to get translated RFT name for\n * @param {Map<string,string>} translatedRFTNamesMap contains all translated system RFT names\n * @returns {string} the translated RFT name\n */\nexport function getRFxTranslatedRFTName(\n  historyItem: AnalysisHistoryItem,\n  translatedRFTNamesMap: Map<string, string>\n): string {\n  const rfxTemplate = historyItem?.jobParams?.rasterFunction as RFxTemplate;\n  const rftName = rfxTemplate?.name;\n  let translatedRFTName;\n  if (!isEmptyDataItem(rfxTemplate)) {\n    if (rftName === rfxTemplate.function?.name) {\n      const rfxDefKey = getRFxDefKeyFromRFT(rfxTemplate);\n      if (rfxDefKey !== undefined) {\n        translatedRFTName = translatedRFTNamesMap.get(rfxDefKey);\n      }\n    } else {\n      // return the name of rfxTemplate for custom RFTs\n      translatedRFTName = rftName;\n    }\n  }\n\n  return translatedRFTName ?? rftName ?? \"\";\n}\n\n/**\n * Creates the history detail and adds to the DOM\n * @param {AnalysisHistoryItem} historyItem to parse tool name from\n * @param {LocaleItem} toolsT9nStrings strings to use\n * @returns {string} - translated tool name\n * @category Private\n */\nexport function getTranslatedToolName(historyItem: AnalysisHistoryItem, toolsT9nStrings: LocaleItem): string {\n  const camelCaseToolName = `${historyItem.toolName.charAt(0).toLowerCase()}${historyItem.toolName.slice(1)}`;\n  const key = historyItem.analysisEngine === AnalysisEngine.Raster ? `${camelCaseToolName}_ra` : camelCaseToolName;\n  const translatedToolName = toolsT9nStrings[key] as string | undefined;\n  return translatedToolName ?? historyItem.toolName;\n}\n\n/**\n * Returns true if the status inputted is cancellable and false otherwise\n * @param {AnalysisJobStatus} jobStatus the job status to check if it is cancellable\n * @returns {boolean} whether or not the status is cancellable.\n */\nexport function isStatusCancellable(jobStatus: AnalysisJobStatus): boolean {\n  return (\n    jobStatus === AnalysisJobStatus.Executing ||\n    jobStatus === AnalysisJobStatus.Submitted ||\n    jobStatus === AnalysisJobStatus.New ||\n    jobStatus === AnalysisJobStatus.Waiting\n  );\n}\n\n/**\n * Turns a feature collection into the version that we want to use and store in history and env settings.\n * should just be `{ layerDefinition: { name: string } }`\n * @param {FeatureCollection} value GP feature collection value\n * @returns {AnalysisToolDataItem} trimmed down feature collection for storage for history and env settings\n */\nexport function getFeatureCollectionValueForStorage(value: FeatureCollection): AnalysisToolDataItem | undefined {\n  const trimmedFeatureCollection =\n    value.layerDefinition.name !== undefined\n      ? ({\n          layerDefinition: {\n            name: value.layerDefinition.name ?? \"\"\n          },\n          featureSet: {}\n        } as AnalysisToolDataItem)\n      : undefined;\n  return trimmedFeatureCollection;\n}\n","import { AnalysisToolUIParam } from \"analysis-ui-schema\";\n\n/**\n * An abstract class to be extended by all classes that perform serialization.\n *\n * This provides a common interface for all serializers, allowing them to be used interchangeably.\n * This interface can later be used to create a generic serializer (or Builder) that can be\n * used to serialize any type of data.\n */\nexport abstract class AbstractSerializer<Input, Output> {\n  /**\n   * The main method of the serializer\n   * @param {Input} value - the value to be serialized\n   * @returns {Output} the serialized value, this should be able to be passed directly to the postProcess method\n   */\n  abstract serialize(value: Input): Output;\n\n  /**\n   * The method that prepares the value for serialization. This is called before the serialize method,\n   * and is used to perform any necessary transformations or saving of state.\n   *\n   * This method's implementation is optional, if not implemented, the provided value will be returned unchanged.\n   * @param {Input} value - the value to be serialized\n   * @param {AnalysisToolUIParam} _paramConfig - the configuration for the parameter\n   * @returns {Input} the prepared value, this should be able to be passed directly to the serialize method\n   */\n  prepare(value: Input, _paramConfig: AnalysisToolUIParam): Input {\n    return value;\n  }\n\n  /**\n   * The method that performs any necessary post-processing of the serialized value.\n   * This is called after the serialize method, and is used to perform any necessary transformations\n   * or re-naming of the serialized value. Often this will make use of data saved in the prepare method.\n   *\n   * This is optional, and if not provided the serialized value will be returned unchanged.\n   * @param {Output} value - the serialized value\n   * @param {AnalysisToolUIParam} _paramConfig - the configuration for the parameter\n   * @returns {Input | Output} the post-processed value to be used as the final serialized value\n   */\n  postProcess(value: Output, _paramConfig: AnalysisToolUIParam): Input | Output {\n    return value;\n  }\n}\n","import { AnalysisToolUIParam } from \"analysis-ui-schema\";\n\nimport { AbstractSerializer } from \"./interfaces\";\n\n/**\n * Helper to check if a value is an object or array\n * @param {unknown} value - the value to check\n * @returns {boolean} true if the value is an object or array\n */\nconst isNonNullObject = (value: unknown): value is Record<string, unknown> =>\n  typeof value === \"object\" && value !== null;\n\n/**\n * Mixin for AbstractSerializer that manages serialization keys for serializers classes\n * @param {typeof AbstractSerializer} Base - the base class to be extended\n * @returns {typeof AbstractSerializerWithKeys} the extended class\n */\nexport function WithKeys<Input, Output>(Base: typeof AbstractSerializer<Input, Output>) {\n  abstract class AbstractSerializerWithKeys extends Base {\n    /**\n     * The keys of the value to be serialized\n     * This property is set in the prepare method and used in the postProcess method\n     * @category Private\n     */\n    toSerializeKeys: string[];\n\n    /**\n     * A common method to get the keys of the object to be serialized.\n     * This method also updates the toSerializeKeys property\n     * @param {Input} value - the value that will be serialized and contains the keys\n     * @param {AnalysisToolUIParam} paramConfig - the configuration for the parameter\n     * @returns {string[]} the keys of the object to be serialized\n     */\n    getKeys(value: Input, paramConfig: AnalysisToolUIParam): string[] {\n      let keys: string[] = [];\n\n      if (Array.isArray(paramConfig.serializationKeys) && paramConfig.serializationKeys.length > 0) {\n        // Always use the serialization keys if they are provided\n        keys = paramConfig.serializationKeys;\n      } else if (isNonNullObject(value)) {\n        const allValueKeys: string[] = Array.isArray(value)\n          ? value.flatMap((arrayValue) =>\n              isNonNullObject(arrayValue) && !Array.isArray(arrayValue) ? Object.keys(arrayValue) : []\n            )\n          : Object.keys(value);\n\n        // make sure they are unique\n        keys = [...new Set(allValueKeys)];\n      }\n\n      this.toSerializeKeys = keys;\n\n      return keys;\n    }\n  }\n\n  return AbstractSerializerWithKeys;\n}\n","import { omit, pick, set } from \"lodash-es\";\n\nimport { AnalysisToolDataItem, AnalysisToolUIParam, SerializationType } from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem } from \"../common\";\n\nimport { AbstractSerializer } from \"./interfaces\";\nimport { WithKeys } from \"./utils\";\n\n/**\n * Returns a string representation of the values in the provided input object with a space delimiter.\n * It's important to note that this method will not work for objects with nested objects.\n * @param {Record<string, AnalysisToolDataItem>} value - the value to be serialized\n * @returns {string} a serialized string\n * @example\n * const value = { a: 1, b: 2, c: 3 };\n * serializeSequentialValues(value); // \"1 2 3\"\n */\nfunction serializeSequentialValues(value: Record<string, AnalysisToolDataItem>): string {\n  const valueList = Object.values(value).map((item) => (!isEmptyDataItem(item) ? `${item}` : \"\"));\n  return valueList.join(\" \").trim();\n}\n\n/**\n * Serializes an array of objects into an array of sequential values\n * @example\n *  const value = [{ a: 1, b: 2, c: 3 }, { a: 4, b: 5, c: 6 }, {}];\n *  const keys = [\"a\", \"b\"];\n *  serializeSequentialArrayValues(value, keys); // [\"1 2\", \"4 5\"]\n * @param {AnalysisToolDataItem[]} value - the value to be serialized\n * @param {string[]} keys - the keys of the objects in the array to be serialized\n * @returns {string[]} the array of sequential values\n */\nfunction serializeSequentialArrayValues(value: AnalysisToolDataItem[], keys: string[]): string[] {\n  let serializedValue: string[] = [];\n\n  const isValueArray = Array.isArray(value);\n  const hasKeys = keys !== undefined && keys.length > 0;\n\n  const shouldSerialize = isValueArray && hasKeys;\n  if (shouldSerialize) {\n    value.forEach((item) => {\n      if (typeof item === \"object\") {\n        const serializedItem = pick(item, keys) as Record<string, AnalysisToolDataItem>;\n\n        // Make sure the serialized item is not empty\n        if (!isEmptyDataItem(serializedItem)) {\n          serializedValue.push(serializeSequentialValues(serializedItem));\n        }\n      }\n    });\n  }\n  // this handles the case when the value array is already serialized.\n  else if (\n    isValueArray === true &&\n    hasKeys === false &&\n    value.length > 0 &&\n    value.every((item) => typeof item === \"string\")\n  ) {\n    serializedValue = value as string[];\n  }\n  return serializedValue;\n}\n\n/**\n * Returns an object representation of the provided value\n * If the value is an object, it will be returned as is.\n * If the value is an array, it will be returned as an object with the provided name as the key.\n * @param {Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[]} value - the object or array to be serialized\n * @param {string[]} keys - the keys of the object to be serialized\n * @param {string} name - the name of the object to be serialized\n * @returns {Record<string, AnalysisToolDataItem>} the serialized object or original value\n */\nfunction serializeArrayValues(\n  value: Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[],\n  keys?: string[],\n  name?: string\n): Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[] {\n  const serializedValue = {};\n\n  const isValueArray = Array.isArray(value);\n  const hasKeys = keys !== undefined && keys.length > 0;\n  const hasName = name !== undefined;\n\n  const shouldSerialize = isValueArray && hasKeys && hasName;\n  if (shouldSerialize) {\n    let serializedValues: AnalysisToolDataItem[] = [];\n\n    value.forEach((item) => {\n      if (typeof item === \"object\") {\n        const serializedItem = pick(item, keys);\n        serializedValues = [...serializedValues, ...Object.values(serializedItem)];\n      }\n    });\n\n    set(serializedValue, name, serializedValues);\n  }\n\n  return shouldSerialize ? serializedValue : value;\n}\n\n/**\n * Wraps a value in an Array\n * @example\n *  const value = { a: 1, b: 2, c: 3 };\n *  serializeWrapInArray(value); // [{ a: 1, b: 2, c: 3 }]\n *  const value = [a: 1, b: 2, c: 3 ];\n *  serializeWrapInArray(value); // [a: 1, b: 2, c: 3 ]\n * @param {AnalysisToolDataItem[]} value - the value to be wrapped in an array\n * @returns {AnalysisToolDataItem[]} the array of values\n */\nfunction serializeWrapInArray(value: Record<string, AnalysisToolDataItem>): AnalysisToolDataItem[] {\n  return isEmptyDataItem(value) === false ? [value].flat() : [];\n}\n\n/**\n * The default serializer. This performs no serialization and returns the value as is.\n * This default is defined so that every serialization type has a serializer.\n * @category Private\n */\nclass DefaultSerializer extends AbstractSerializer<\n  Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[],\n  Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[]\n> {\n  /**\n   * Serialization method that returns the value as is.\n   * @param {Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[]} value - the value to be serialized\n   * @returns {Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[]} the value as is\n   */\n  serialize(\n    value: Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[]\n  ): Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[] {\n    return value;\n  }\n}\n\n/**\n * Serialization class for sequential values\n * @category Private\n *\n * contains the following methods:\n * 1. serialize: serializes the value\n * 2. prepare: prepares the value to be serialized\n * 3. postProcess: post process the serialized value\n *\n * These three methods can be added to a Serializer interface and implemented by all the serializers,\n * though currently as we have only one serializer, this adds unnecessary overhead. The pattern can also\n * be extended to a \"builder\" pattern, where a list of prepare, serialize and postProcess methods can be\n * added to a builder to create a serializer. This would allow us to handle much more complex serialization\n * scenarios.\n *\n * There are also two private properties:\n * 1. toSerializeKeys: the keys of the value to be serialized\n * 2. value: the value to be serialized\n *\n * These are set in the prepare method and used in the postProcess method. Preventing the need to recalculate them\n * in the postProcess method.\n * @example <caption>Example of a sequential value with serializationParameterName</caption>\n * const serializer = new SequentialValuesSerializer();\n * const value = { a: 1, b: 2, c: { d: 3, e: 4 } };\n * const paramConfig = { serializationParameterName: \"c\" };\n * const serializedValue = serializer.serialize(serializer.prepare(value, paramConfig));\n * // serializedValue = \"3 4\"\n * const fullyProcessedValue = serializer.postProcess(serializedValue, paramConfig);\n * // fullyProcessedValue = { a: 1, b: 2, c: \"3 4\" }\n * @example <caption>Example of a sequential value with serializationParameterName and serializationKeys</caption>\n * const serializer = new SequentialValuesSerializer();\n * const value = { a: 1, b: 2, c: { d: 3, e: 4 } };\n * const paramConfig = { serializationParameterName: \"c\", serializationKeys: [\"e\", \"d\"] };\n * const serializedValue = serializer.serialize(serializer.prepare(value, paramConfig));\n * // serializedValue = \"4 3\"\n * const fullyProcessedValue = serializer.postProcess(serializedValue, paramConfig);\n * // fullyProcessedValue = { a: 1, b: 2, c: \"4 3\" }\n * @example <caption>Example of a sequential value with serializationKeys</caption>\n * const serializer = new SequentialValuesSerializer();\n * const value = { a: 1, b: 2, c: 3 };\n * const paramConfig = { serializationKeys: [\"c\", \"b\", \"a\"] };\n * const serializedValue = serializer.serialize(serializer.prepare(value, paramConfig));\n * // serializedValue = \"3 2 1\"\n * const fullyProcessedValue = serializer.postProcess(serializedValue, paramConfig);\n * // fullyProcessedValue = \"3 2 1\"\n */\nclass SequentialValuesSerializer extends WithKeys(AbstractSerializer<Record<string, AnalysisToolDataItem>, string>) {\n  /**\n   * The un-modified, original value to be serialized\n   * This property is set in the prepare method and used in the postProcess method. This is done\n   * to prevent the need to re-pass the value to the postProcess method\n   * @category Private\n   */\n  private originalValue: Record<string, AnalysisToolDataItem>;\n\n  /**\n   * Serializes the value, this method should be called after the prepare method with the value returned by the prepare method\n   * as the argument\n   * @param {Record<string, AnalysisToolDataItem>} value the value to be serialized\n   * @returns {string} the serialized value\n   */\n  serialize(value: Record<string, AnalysisToolDataItem>): string {\n    return serializeSequentialValues(value);\n  }\n\n  /**\n   * Prepares the data to be serialized based on the parameter configuration\n   * @param {Record<string, AnalysisToolDataItem>} value the original value to be serialized\n   * @param {AnalysisToolUIParam} paramConfig the parameter configuration, containing information about how to serialize the value\n   * @returns {Record<string, AnalysisToolDataItem>} the modified value to be serialized\n   */\n  prepare(\n    value: Record<string, AnalysisToolDataItem>,\n    paramConfig: AnalysisToolUIParam\n  ): Record<string, AnalysisToolDataItem> {\n    this.originalValue = value;\n    this.getKeys(value, paramConfig);\n\n    let toSerializeValue = value;\n    toSerializeValue = pick(value, this.toSerializeKeys);\n\n    return toSerializeValue;\n  }\n\n  /**\n   *\n   * @param {string} value the serialized value as returned by the serialize method\n   * @param {AnalysisToolUIParam} paramConfig the parameter configuration, containing information about how to serialize the value\n   * @returns {Record<string, AnalysisToolDataItem> | string} the post processed value\n   */\n  postProcess(value: string, paramConfig: AnalysisToolUIParam): Record<string, AnalysisToolDataItem> | string {\n    let fullyProcessedValue: Record<string, AnalysisToolDataItem> | string = value;\n\n    // If serializationParameterName is defined, if so, we have serialized a subset of the original value\n    // and we need to add the serialized value back to the original value\n    if (paramConfig.serializationParameterName !== undefined) {\n      // if serializationParameterName is defined, then the serialized value will be\n      const unSerializedSubset = omit(this.originalValue, this.toSerializeKeys);\n      // using lodash set to add the serialized value by the serialization name\n      set(unSerializedSubset, paramConfig.serializationParameterName, value);\n      fullyProcessedValue = unSerializedSubset;\n    }\n\n    return fullyProcessedValue;\n  }\n}\n\n/**\n * Serialization class for arrays with sequential values\n * @category Private\n * @example <caption>Example of a sequential array with serializationParameterName</caption>\n * const serializer = new SequentialValuesSerializer();\n * const value = [{\"mergingAttributesField\":\"COLOR\",\"toBeMergedField\":\"color\",\"outputType\":\"MATCH\"},{\"mergingAttributesField\":\"Value\",\"outputType\":\"RENAME\",\"mergedRenameField\":\"New value\"}]\n * const paramConfig = {\n *   \"serializationType\": \"arrayWithSequentialValues\",\n *   \"serializationParameterName\": \"mergingAttributes\",\n *   \"serializationKeys\": [\"mergingAttributesField\", \"operationType\",\n *     \"mergedRenameField\", \"toBeMergedField\"],\n * };\n * const serializedValue = serializer.serialize(serializer.prepare(paramConfig));\n * // serializedValue = [\"COLOR Match color\",\"Value Rename New value\"]\n */\nclass SequentialValueArraySerializer extends WithKeys(AbstractSerializer<AnalysisToolDataItem[], string[]>) {\n  /**\n   * Main method for serializing the value\n   * @param {AnalysisToolDataItem[]} value the value to be serialized\n   * @returns {string[]} the serialized value\n   */\n  serialize(value: AnalysisToolDataItem[]): string[] {\n    return serializeSequentialArrayValues(value, this.toSerializeKeys);\n  }\n\n  /**\n   * Prepares the data to be serialized based on the parameter configuration\n   * @param {AnalysisToolDataItem[]} value the original value to be serialized\n   * @param {AnalysisToolUIParam} paramConfig the parameter configuration, containing information about how to serialize the value\n   * @returns {AnalysisToolDataItem[]} the un-modified value to be serialized\n   */\n  prepare(value: AnalysisToolDataItem[], paramConfig: AnalysisToolUIParam): AnalysisToolDataItem[] {\n    this.getKeys(value, paramConfig);\n    return value;\n  }\n}\n\n/**\n * Serialization class for sequential arrays\n * @category Private\n *\n * contains the following methods:\n * 1. serialize: serializes the value\n * 2. prepare: prepares serializer parameters for serialization\n *\n * There are also two private properties:\n * 1. toSerializeKeys: the keys of the value to be serialized\n * 2. toSerializeName: the name to assgin to\n *\n * These are set in the prepare method and used in the serialize method.\n * @example <caption>Example of a sequential array with serializationParameterName</caption>\n * const serializer = new ArrayValuesSerializer();\n * const value = [url: \"aaaaa\", url: \"bbbbb\"];\n * const paramConfig = { serializationKeys: [\"url\"], serializationParameterName: \"urls\" };\n * const serializedValue = serializer.serialize(serializer.prepare(paramConfig));\n * // serializedValue = {urls: [\"aaaaa\", \"bbbbb\"] }\n */\nclass ArrayValuesSerializer extends WithKeys(\n  AbstractSerializer<\n    Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[],\n    Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[]\n  >\n) {\n  /**\n   * The name to be serialized to\n   * This property is set in the prepare method and used in the postProcess method\n   * @category Private\n   */\n  private toSerializeName: string | undefined;\n\n  /**\n   * Serializes the value, this method should be called after the prepare method\n   * @param {Record<string, AnalysisToolDataItem>} value the value to be serialized\n   * @returns {string | Record<string, AnalysisToolDataItem>} the serialized value\n   */\n  serialize(\n    value: Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[]\n  ): Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[] {\n    return serializeArrayValues(value, this.toSerializeKeys, this.toSerializeName);\n  }\n\n  /**\n   * Prepares the data to be serialized based on the parameter configuration\n   * @param {Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[]} value the original value to be serialized\n   * @param {AnalysisToolUIParam} paramConfig the parameter configuration, containing information about how to serialize the value\n   * @returns {Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[]} the provided value\n   */\n  prepare(value: Record<string, AnalysisToolDataItem> | AnalysisToolDataItem[], paramConfig: AnalysisToolUIParam) {\n    this.toSerializeName = paramConfig.serializationParameterName;\n    this.getKeys(value, paramConfig);\n\n    return value;\n  }\n}\n\n/**\n * Serialization class to serialize the received type as strinsg\n * @category Private\n * @example <caption>Example of a string serializer with serializationParameterName</caption>\n * const serializer = new StringValueSerializer();\n * const value = [{\"mergingAttributesField\":\"COLOR\",\"toBeMergedField\":\"color\",\"outputType\":\"MATCH\"},{\"mergingAttributesField\":\"Value\",\"outputType\":\"RENAME\",\"mergedRenameField\":\"New value\"}]\n * const paramConfig = {\n *   \"serializationType\": \"string\",\n *   \"serializationParameterName\": \"mergingAttributes\"\n * };\n * const serializedValue = serializer.serialize(serializer.prepare(paramConfig));\n * // serializedValue = '[{\"mergingAttributesField\":\"COLOR\",\"toBeMergedField\":\"color\",\"outputType\":\"MATCH\"},{\"mergingAttributesField\":\"Value\",\"outputType\":\"RENAME\",\"mergedRenameField\":\"New value\"}]'\n */\nclass StringValueSerializer extends WithKeys(AbstractSerializer<AnalysisToolDataItem[], string>) {\n  /**\n   * Main method for serializing the value\n   * @param {AnalysisToolDataItem[]} value the value to be serialized\n   * @returns {string[]} the serialized value\n   */\n  serialize(value: AnalysisToolDataItem[]): string {\n    return typeof value === \"string\" ? value : JSON.stringify(value);\n  }\n}\n\n/**\n * Serialization class for wrapping value in an array\n * @category Private\n *\n * contains the following methods:\n * 1. serialize: serializes the value\n * 2. prepare: prepares the value to be serialized\n * 3. postProcess: post process the serialized value\n *\n *\n * There are also two private properties:\n * 1. toSerializeKeys: the keys of the value to be serialized\n * 2. value: the value to be serialized\n *\n * These are set in the prepare method and used in the postProcess method. Preventing the need to recalculate them\n * in the postProcess method.\n * @example <caption>Example of a wrap value in an array</caption>\n * const serializer = new WrapInArraySerializer();\n * const value = { a: 1, b: 2, c: 3 };\n * const paramConfig = undefined;\n * const serializedValue = serializer.serialize(serializer.prepare(value, paramConfig));\n * // serializedValue = [{ a: 1, b: 2, c: 3 }]\n * const fullyProcessedValue = serializer.postProcess(serializedValue, paramConfig);\n * // fullyProcessedValue = [{ a: 1, b: 2, c: 3 }]\n */\nclass WrapInArraySerializer extends WithKeys(\n  AbstractSerializer<Record<string, AnalysisToolDataItem>, AnalysisToolDataItem[]>\n) {\n  /**\n   * Serializes the value, this method should be called after the prepare method with the value returned by the prepare method\n   * as the argument\n   * @param {Record<string, AnalysisToolDataItem>} value the value to be serialized\n   * @returns {string} the serialized value\n   */\n  serialize(value: Record<string, AnalysisToolDataItem>): AnalysisToolDataItem[] {\n    return serializeWrapInArray(value);\n  }\n}\n\n/**\n * Map of classes that can be used to serialize a value\n * Use unknown for the input and output types as the input and output types are different for each serializer\n */\nexport const serializers: { [K in SerializationType]: new () => AbstractSerializer<unknown, unknown> } = {\n  [SerializationType.sequentialValues]: SequentialValuesSerializer,\n  [SerializationType.sequentialValueArray]: SequentialValueArraySerializer,\n  [SerializationType.arrayValues]: ArrayValuesSerializer,\n  [SerializationType.string]: StringValueSerializer,\n  [SerializationType.wrapInAnArray]: WrapInArraySerializer,\n  [SerializationType.default]: DefaultSerializer\n} as const;\n","import {\n  AnalysisParamModel,\n  AnalysisToolData,\n  AnalysisToolDataItem,\n  AnalysisToolInfo,\n  AnalysisToolUI,\n  AnalysisToolUIParam,\n  LocaleItem,\n  OutputName,\n  ParamViewModelKey\n} from \"analysis-ui-schema\";\n\nimport { ParamGroupDataTypeKey, SelectedLayersKey } from \"../interfaces\";\nimport { ArcgisWebAnalysisError } from \"../errors\";\n\nimport { AnalysisToolErrorState } from \"./error\";\n/**\n * Abstract interface for dataset field information.\n */\nexport interface FieldInfo {\n  name: string;\n  alias: string;\n  type: string;\n  description?: string;\n}\n\ninterface Options {\n  signal: AbortSignal;\n}\n\n/**\n * Abstract interface for custom datasets used in Analysis tools.\n */\nexport interface Dataset {\n  id: string;\n  name: string;\n  description?: string;\n  getFields: (options?: Options) => Promise<FieldInfo[]>;\n}\n\n/**\n * Allowed items in the global data object\n */\nexport type GlobalValues =\n  | AnalysisToolDataItem\n  | __esri.Layer\n  | __esri.Layer[]\n  | SupportedLayer\n  | SupportedLayer[]\n  | Dataset\n  | Dataset[]\n  | __esri.MapView\n  | OutputName[\"itemProperties\"];\n\n/**\n * Data structure used to store and manage tool parameters.\n */\nexport interface AnalysisToolGlobalData {\n  mapView?: __esri.MapView;\n  mapLayers?: SupportedLayer[];\n  analysisSessionLayers?: __esri.FeatureLayer[];\n  analysisDatasets?: Dataset[];\n  [key: string]: GlobalValues;\n}\n\n/**\n * Known constants that translate to calculated values at job submission time.\n */\nexport const CalculatedParameterValueKeys = {\n  CurrentTime: \"CALCULATE_CURRENT_TIME\"\n} as const;\n\n/**\n * Names of known constants that translated to calculated values at job submission time.\n */\nexport type CalculatedParameterValueKeys =\n  | (typeof CalculatedParameterValueKeys)[keyof typeof CalculatedParameterValueKeys];\n\n// TODO: route layer import is not working\n// TODO: shapefile(.zip) import is not working\n/**\n * Supported layer types that can be used as an input to an analysis tool.\n */\nexport type SupportedLayer =\n  | __esri.FeatureLayer\n  | __esri.TileLayer\n  | __esri.ImageryLayer\n  | __esri.ImageryTileLayer\n  | __esri.CSVLayer\n  | __esri.KMLLayer\n  | (__esri.MapNotesLayer & { url: string })\n  | __esri.MapImageLayer;\n// added the url property to mapnotes layer just to avoid changes in type errors in code where url is expected on all supported layer types.\n// actually there we should have used FeatureLayer type not SupportedLayer.\n\n/**\n * Supported Layer with parent property\n * FIXME: parent property is not in the JS API typings for Layer even though it is in its code\n * so using this approach.\n */\nexport type SupportedLayerWithParent = SupportedLayer & { parent: __esri.Layer };\n\n/**\n * Supported layer types that can show up as a result of an analysis tool.\n */\nexport type SupportedResult =\n  | __esri.FeatureLayer\n  | __esri.TileLayer\n  | __esri.ImageryLayer\n  | __esri.ImageryTileLayer\n  | __esri.RouteLayer\n  | __esri.GroupLayer\n  | __esri.PortalItem;\n\n/**\n * Helper type for the schema of the process info messages\n */\nexport type ProcessInfoMessage = {\n  messageCode: string;\n  message: string | string[];\n  params: Record<string, string>;\n  style: string;\n};\n\n/**\n *\n * Type for the analysis tool UI assets object.\n *\n */\nexport interface AnalysisToolUIAssets {\n  /**\n   * Analysis tool REST json that describes the tool.\n   */\n  toolJson: AnalysisToolInfo;\n  /**\n   * Optional analysis tool ui json that is used override toolJson to provide richer UI.\n   *\n   */\n  toolUIJson?: AnalysisToolUI;\n  /**\n   * Optional tool ui labels and related strings for displaying the tool ui. It goes along wth toolUIJson.\n   */\n  toolT9n?: LocaleItem;\n  /**\n   * Strings loaded for the tool\n   *\n   */\n  toolUIStrings?: LocaleItem;\n  /**\n   * Optional tool help file path (currently an HTML file) to show popup parameter help.\n   */\n  toolHelpFilePath?: string;\n}\n\n/**\n *\n * Type for the analysis tool assets object. This includes the toolJson from REST tool information along with the other properties from analysis tool ui assets.\n *\n */\nexport interface AnalysisToolJsons extends AnalysisToolUIAssets {\n  /**\n   * REST tool json is required property of this assets object.\n   *\n   */\n  toolJson: AnalysisToolInfo;\n}\n\n/**\n * These are keys to be removed from the tool data before submitting the job.\n * Meaning these will not be included in the ui only params at all (and therefore\n * not shown in the history parameter list UI)\n */\nexport const DefaultUIOnlyParamKeys = {\n  /**\n   * These are full keys that will be removed. They will only be removed on\n   * a full match.\n   */\n  ExcludedUIOnlyParamKeys: [\"itemProperties\", \"userSettings\"],\n  /**\n   * These are partial keys that will be removed. They will be removed if\n   * the key contains the partial key (substring match).\n   */\n  ExcludedUIOnlyParamPartialKeys: [SelectedLayersKey],\n  /**\n   * These are full keys that will always be present in the ui only params.\n   * Meaning if they are not present in the tool data, they will be added\n   * even if they are undefined. These also cannot be removed using the\n   * ExcludedUIOnlyParamKeys or ExcludedUIOnlyParamPartialKeys.\n   */\n  AlwaysIncludedUIOnlyParamKeys: [\"saveResultIn\"]\n} as const;\n\n/**\n * These are keys that will be removed from the base ui only params before\n * displaying the history parameter list UI. Meaning these will not be displayed,\n * but will not be removed from the base ui only params.\n *\n * This also means since these are removed from the base ui only params, any keys\n * that are added to the base ui only params will be displayed in history\n * unless they are also added to this list.\n */\nexport const DefaultUIOnlyParamKeysForDisplay = {\n  /**\n   * These are full keys that will be removed. They will only be removed on\n   * a full match with a key in the base ui only params.\n   */\n  ExcludedUIOnlyParamKeysForUI: [...DefaultUIOnlyParamKeys.ExcludedUIOnlyParamKeys, ParamViewModelKey],\n  /**\n   * These are partial keys that will be removed. They will be removed if\n   * the key contains the partial key (substring match) with a key in the\n   * base ui only params.\n   */\n  ExcludedUIOnlyParamPartialKeysForUI: [...DefaultUIOnlyParamKeys.ExcludedUIOnlyParamPartialKeys, ParamGroupDataTypeKey]\n};\n\nexport interface PrepJobParamsForSubmissionOptions {\n  /**\n   * The tool data to be submitted.\n   *\n   * These are the REST parameters that are submitted to the server.\n   * This data can be serialized or replaced depending on the parameter's\n   * related tool UI json.\n   */\n  jobParams: AnalysisToolData;\n  /**\n   * All of the data that is currently in the tool.\n   *\n   * This contains all data for the tool's current state. Including, the Parameter\n   * View Model, UIOnlyParams, and the job params present in the UI. This data is\n   * only used when a parameter is renamed.\n   */\n  toolData: AnalysisToolData | undefined;\n  /**\n   * The tool UI json that is used to determine how to serialize the tool data.\n   *\n   * This contains all the information about the tool's UI. However it is not\n   * reflective of the current state of the tool. It is only used to determine\n   * if and how to serialize the tool data.\n   */\n  toolUIJson: AnalysisToolUIParam[];\n  /**\n   * The name of the tool that is being submitted.\n   *\n   * This is passed to determine if the tool requires special handling. While not explicitly\n   * required, it allows for more robust guardrails nearing the 2023 R2 release.\n   */\n  toolName: string | undefined;\n  /**\n   * Tool information and tool param information.\n   */\n  toolJSON?: AnalysisToolInfo;\n  /**\n   * A flag to determine the portal's \"isPortal\" property. This is used to determine\n   * if the output names should be formatted or not.\n   * @default false\n   */\n  isPortal?: boolean | undefined;\n}\n\nexport interface FilterAndRenameParamsOptions {\n  /**\n   * The job params/data to be filtered and renamed.\n   *\n   * These are the REST parameters that are submitted to the server and the base/starting\n   * data that will be filtered and renamed.\n   */\n  jobParams: AnalysisToolData | undefined;\n  /**\n   * The tool UI only parameters (all tool data that is not submitted to the server).\n   *\n   * This contains parameters and data that may be renamed to replace a job param.\n   */\n  UIOnlyParams: AnalysisToolData | undefined;\n  /**\n   * The tool UI parameter view model that is used to determine how to filter and rename the tool data.\n   */\n  toolUIParamModel: AnalysisParamModel | undefined;\n  /**\n   * A flag to determine if the parameter's submission name or the parameter's original name should be used.\n   *\n   * Submission name should be used when submitting the job, but original name should be used when displaying\n   * the parameter in the UI (as it maps back to the tool UI json).\n   */\n  useSubmissionName?: boolean;\n}\n\n/**\n * ConvertJobParamsToToolDataOptions interface type for convertJobParamsToToolData function argument\n */\nexport interface ConvertJobParamsToToolDataOptions {\n  /**\n   * The job params/data to be converted to tool data.\n   *\n   * These are the REST parameters that are submitted to the server and the base/starting\n   * data that will be filtered and renamed.\n   */\n  jobParams: AnalysisToolData | undefined;\n  /**\n   * The tool UI only parameters (all tool data that is not submitted to the server).\n   *\n   * This contains parameters and data that may be renamed to replace a job param.\n   */\n  uiOnlyParams: AnalysisToolData;\n  /**\n   * The name of the tool used\n   */\n  toolName: string;\n  /**\n   * List of available layers for analysis in the current map\n   */\n  availableMapLayers: SupportedLayer[];\n  /**\n   * Tool information and tool param information.\n   */\n  toolJSON: AnalysisToolInfo;\n  /**\n   * A flag to determine if the tool is a web tool or not.\n   */\n  isWebTool: boolean;\n}\n\n/**\n * The returned results of the convertJobParamsToToolData function\n */\nexport interface ConvertJobParamsToToolDataReturnType {\n  /**\n   * The tool data that was converted from the job params\n   */\n  convertedJobParams: AnalysisToolGlobalData;\n\n  /**\n   * A list of layers that were not found in the map and need to be added\n   */\n  layers: SupportedLayer[];\n\n  /**\n   * The error state representing any errors that were encountered\n   * while converting the job params to tool data that should be\n   * displayed in the UI\n   */\n  resultingErrorState: AnalysisToolErrorState;\n}\n\n/**\n * Return type for convert job layers to map layers function\n */\nexport interface ConvertJobLayersToMapLayersReturnType {\n  /**\n   * Layers already in the map\n   */\n  existingLayers: SupportedLayer[];\n\n  /**\n   * Layers that need to be added to the map\n   * There was an attempt to load these layers but no\n   * gaurantee that they were successfully loaded\n   */\n  layersToAdd: SupportedLayer[];\n\n  /**\n   * Any errors that were encountered while converting the layers\n   */\n  errors: ArcgisWebAnalysisError<unknown>[];\n}\n\n/**\n * The capabilities property of a geoprocessing service\n */\nexport type GPServiceCapabilities = Array<\"Uploads\" | \"\">;\n","import { memoize, omit } from \"lodash-es\";\n\nimport {\n  AnalysisEngine,\n  AnalysisToolData,\n  AnalysisToolInfo,\n  AnalysisToolParam,\n  AnalysisToolParamDirection,\n  AnalysisToolUI,\n  AnalysisToolUICurrentVersion,\n  AnalysisToolUIParam,\n  LocaleItem\n} from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem } from \"../common\";\nimport { SupportedLocales } from \"../localization/interfaces\";\nimport { GetUIOnlyParamsProps, GetUIOnlyParamsToDisplayProps } from \"../interfaces\";\n\nimport { AnalysisToolUIAssets, DefaultUIOnlyParamKeys, DefaultUIOnlyParamKeysForDisplay } from \"./interfaces\";\n\n/**\n * Gets all of the parameters (key-value pairs) from the given ToolUI.\n * @param {AnalysisToolUI[\"UIparameters\"] uiParameters} uiParameters\n * @returns {[keyof: string]: string} parameter label object\n */\nexport function getUIParamsByName(uiParameters: AnalysisToolUI[\"UIparameters\"]): {\n  [key: string]: AnalysisToolUIParam;\n} {\n  const paramsByName: { [key: string]: AnalysisToolUIParam } = {};\n  for (const uiParameter of uiParameters) {\n    if (uiParameter.UIparameters !== undefined) {\n      // nested case, recursive\n      Object.assign(paramsByName, getUIParamsByName(uiParameter.UIparameters));\n    } else if (uiParameter.name !== undefined) {\n      // default case\n      if (uiParameter.name !== undefined) {\n        paramsByName[uiParameter.name] = uiParameter;\n      }\n    }\n  }\n  return paramsByName;\n}\n/**\n * Returns the UI only parameters (includes ui params we don't want to show in history parameter list)\n * @param {AnalysisToolData} toolData the current tool data containing all the parameters\n * @param {string[]} keysToRemove the expected job parameters for the tool, or other keys to remove from the toolData\n * @param {string[]} partialKeysToRemove keys to be removed from the toolData if they are partial matches (ex. \"_SelectedLayers\")\n * @param {boolean} isWebTool whether or not the related tool is a webtool, defaults to false\n * @param props\n * @returns {AnalysisToolData} UI only parameters including\n */\nexport function getUIOnlyParams(props: GetUIOnlyParamsProps): AnalysisToolData {\n  const { toolData, keysToRemove } = props;\n  const isWebTool = props.isWebTool ?? false;\n  const partialKeysToRemove = props.partialKeysToRemove ?? [];\n  const { ExcludedUIOnlyParamKeys, ExcludedUIOnlyParamPartialKeys, AlwaysIncludedUIOnlyParamKeys } =\n    DefaultUIOnlyParamKeys;\n\n  // Save a copy of all always included key values, these will be added back after the filter.\n  const alwaysIncludedUIOnlyParams: AnalysisToolData = {};\n  if (!isWebTool) {\n    for (const key of AlwaysIncludedUIOnlyParamKeys) {\n      // Note: Even if the value is undefined, we still want to save it.\n      alwaysIncludedUIOnlyParams[key] = toolData[key];\n    }\n  }\n\n  // Remove all keys that are expected to be in the job parameters. As well as\n  // any keys that are explicitly excluded.\n  const allExcludedKeys = [...ExcludedUIOnlyParamKeys, ...keysToRemove];\n  const allExcludedPartialKeys = [...ExcludedUIOnlyParamPartialKeys, ...partialKeysToRemove];\n  // Find all substring matches for the partial keys\n  const keySubstringMatches = Object.keys(toolData).filter((key) =>\n    allExcludedPartialKeys.some((partialKey) => key.includes(partialKey))\n  );\n\n  const allParamKeysToRemove = [...allExcludedKeys, ...keySubstringMatches];\n\n  const toolUIOnlyParams: AnalysisToolData = omit(toolData, allParamKeysToRemove);\n\n  const removeEmptyItem = (key: string) => {\n    if (isEmptyDataItem(toolUIOnlyParams[key])) delete toolUIOnlyParams[key];\n  };\n  Object.keys(toolUIOnlyParams).forEach(removeEmptyItem);\n\n  // Add back in the always included keys\n  return { ...toolUIOnlyParams, ...alwaysIncludedUIOnlyParams };\n}\n\n/**\n * Returns the UI only parameters that we *want* to show in the history parameter list\n * This is a subset of the UI only parameters, as well as \"alwaysShown\" parameters that\n * we add back in for the history parameter list (even when they are not in the UI only params)\n * @param {AnalysisToolData} combinedParams the tool data containing all the parameters\n * @param {string} toolName the name of the tool { \"Aggregate Points\" | \"Create Buffers\" | \"Enrich Layer\" | etc }\n * @param {boolean} isWebTool whether or not the related tool is a webtool, defaults to false\n * @param props\n * @returns {AnalysisToolData} the ui only params that are expected to be shown in the history parameter list\n */\nexport function getUIOnlyParamsToDisplay(props: GetUIOnlyParamsToDisplayProps): AnalysisToolData {\n  const { combinedParams, toolName } = props;\n  const isWebTool = props.isWebTool ?? false;\n  const { ExcludedUIOnlyParamKeysForUI, ExcludedUIOnlyParamPartialKeysForUI } = DefaultUIOnlyParamKeysForDisplay;\n\n  let uiOnlyParamsToDisplay = getUIOnlyParams({\n    toolData: combinedParams,\n    keysToRemove: ExcludedUIOnlyParamKeysForUI,\n    partialKeysToRemove: ExcludedUIOnlyParamPartialKeysForUI,\n    isWebTool\n  });\n  // TODO: we need a way to generalize replace as needed below for enrich layer like we do with omit using `getUIOnlyParams`.\n  // one idea we have analysis-tool-history-display.json\n  // where we can have these rules for each tool as needed and also the general exclude rules\n  // {\n  //     EnrichLayer  analysisVariables labels replace\n  //      *           saveResultIn include\n  //      *           _selectLayersKey exclude\n  // } similar to mergeAttributes in merge layer.\n  if (uiOnlyParamsToDisplay.analysisVariables !== undefined && uiOnlyParamsToDisplay.labels !== undefined) {\n    uiOnlyParamsToDisplay.analysisVariables = uiOnlyParamsToDisplay.labels;\n    uiOnlyParamsToDisplay = omit(uiOnlyParamsToDisplay, \"labels\");\n  }\n\n  if (uiOnlyParamsToDisplay.hierarchy !== undefined && uiOnlyParamsToDisplay.hierarchyAlias !== undefined) {\n    uiOnlyParamsToDisplay.hierarchy = uiOnlyParamsToDisplay.hierarchyAlias;\n  }\n  uiOnlyParamsToDisplay = omit(uiOnlyParamsToDisplay, \"hierarchyAlias\");\n\n  if (uiOnlyParamsToDisplay.country !== undefined && uiOnlyParamsToDisplay.countryAlias !== undefined) {\n    uiOnlyParamsToDisplay.country = uiOnlyParamsToDisplay.countryAlias;\n  }\n  uiOnlyParamsToDisplay = omit(uiOnlyParamsToDisplay, \"countryAlias\");\n\n  // similar issue as seen with EnrichLayer mentioned above\n  // we have to exclude a tool level UI parameter for ExtractData resultType\n  // {\n  //    ExtractData resultType exclude\n  //\n  // }\n  // As mentioned in the above TODO: we need this tool level operation to be done here. As tool name is not passed using\n  // this combination to exclude it\n  if (uiOnlyParamsToDisplay.resultType !== undefined && uiOnlyParamsToDisplay.dataFormat !== undefined) {\n    uiOnlyParamsToDisplay = omit(uiOnlyParamsToDisplay, \"resultType\");\n  }\n  // Similar to the comments above though this is slightly more complex, however it could be handled in the same way\n  // this section handles the Choose Best Facilities tool\n  if (toolName === \"ChooseBestFacilities\") {\n    const uiParamPartialsToRemove = [\"_maxTravelRangeChoice\", \"_requiredFacilitiesCapacityChoice\", \"_demandChoice\"];\n    const paramPartialMatches = Object.keys(uiOnlyParamsToDisplay).filter((key) =>\n      uiParamPartialsToRemove.some((partialKey) => key.includes(partialKey))\n    );\n    uiOnlyParamsToDisplay = omit(uiOnlyParamsToDisplay, [\"previousWorkflow\", ...paramPartialMatches]);\n  }\n\n  return uiOnlyParamsToDisplay;\n}\n\n/**\n * Returns the tool name as pascal case from camel case\n * e.g. \"createBuffers\" -> \"CreateBuffers\"\n * @param {string} tooName\n * @param toolName\n * @returns {string}\n */\nexport const toPascalToolName = (toolName: string) => `${toolName.charAt(0).toUpperCase()}${toolName.slice(1)}`;\n\n/**\n * Returns the tool name as camel case from pascal case\n * e.g. \"CreateBuffers\" -> \"createBuffers\"\n * @param {string} tooName\n * @param toolName\n * @returns {string}\n */\nexport const toCamelToolName = (toolName: string) => `${toolName.charAt(0).toLowerCase()}${toolName.slice(1)}`;\n\n/**\n * This returns the suffix to be used for toolUIJson and toolT9n files\n * @param {AnalysisEngine} analysisEngine the analysis engine\n * @returns {string} the suffix\n */\nexport function formatAnalysisEngineSuffix(analysisEngine?: AnalysisEngine): string {\n  analysisEngine ??= AnalysisEngine.Standard;\n\n  let analysisEngineSuffix = \"\";\n  switch (analysisEngine) {\n    case AnalysisEngine.Raster:\n      analysisEngineSuffix = \"_ra\";\n      break;\n    default:\n    case AnalysisEngine.GeoAnalytics:\n    case AnalysisEngine.Standard:\n      analysisEngineSuffix = \"\";\n      break;\n  }\n  return analysisEngineSuffix;\n}\n\n/**\n * Gets both the toolUIJson and the tool T9n for a given tool name and locale\n * @param {SupportedLocales} locale the current locale\n * @param {string} name the tool's name\n * @param {(path: string) => Promise<any>} memoizeHelper, a helper function to memoize the fetch requests\n * @returns {Promise<{ toolUIJson: AnalysisToolUI, toolT9n: AnalysisToolT9n }>} the tool json and t9n\n */\nexport const getToolJSONs = memoize(\n  async (path: {\n    locale: SupportedLocales;\n    name: string;\n    analysisEngine?: AnalysisEngine;\n    assetPrefix: string;\n    memoizedHelper: (path: string) => Promise<any>;\n  }): Promise<AnalysisToolUIAssets> => {\n    const { locale, name, assetPrefix, analysisEngine, memoizedHelper } = path;\n\n    const lowercaseToolName = `${name.toLowerCase()}${formatAnalysisEngineSuffix(analysisEngine)}`;\n\n    let toolUIJson: AnalysisToolUI | undefined;\n    let toolT9n: LocaleItem | undefined;\n    let commonT9n: LocaleItem | undefined;\n    let toolJson: AnalysisToolInfo | undefined;\n\n    const toolPath = `${assetPrefix}/tool-ui-json/${lowercaseToolName}.tool.ui.json`;\n    const toolJSONPath = `${assetPrefix}/tool-json/${lowercaseToolName}.tool.json`;\n    const t9nPath = `${assetPrefix}/t9n/${lowercaseToolName}/${lowercaseToolName}.t9n.${locale}.json`;\n    const commonT9nPath = `${assetPrefix}/t9n/common.t9n.${locale}.json`;\n    let helpLocale = locale as string;\n    if (locale === SupportedLocales.English || locale === SupportedLocales.EnglishUSA) {\n      helpLocale = \"\";\n    } else if (helpLocale === SupportedLocales.NorwegianBokml) {\n      // FIX: we should let t9n team to change help HTML files to use nb for norwegian-bokamal(nb) locale we support,\n      // so this mapping is not needed.\n      helpLocale = \"no\";\n    }\n    const toolHelpFilePath = `${assetPrefix}/help/${\n      helpLocale !== \"\" ? helpLocale + \"/\" : \"\"\n    }${name}${formatAnalysisEngineSuffix(analysisEngine)}.html`;\n    try {\n      toolJson = (await memoizedHelper(toolJSONPath)) as AnalysisToolInfo;\n      toolUIJson = (await memoizedHelper(toolPath)) as AnalysisToolUI;\n      toolT9n = (await memoizedHelper(t9nPath)) as LocaleItem;\n      commonT9n = (await memoizedHelper(commonT9nPath)) as LocaleItem;\n      toolT9n = { ...commonT9n, ...toolT9n };\n    } catch {\n      toolUIJson = undefined;\n    }\n    return { toolJson: toolJson as AnalysisToolInfo, toolUIJson, toolT9n, toolHelpFilePath };\n  }\n);\n\n/**\n *\n * @param webToolJSON\n * @param commonT9nPath\n * @param memoizedHelper\n */\nexport async function getWebToolUIJson(\n  webToolJSON: AnalysisToolInfo,\n  commonT9nPath: string,\n  memoizedHelper: (path: string) => Promise<any>\n): Promise<AnalysisToolUI> {\n  let commonT9n: LocaleItem | undefined;\n  try {\n    commonT9n = (await memoizedHelper(commonT9nPath)) as LocaleItem;\n  } catch {\n    throw new Error(`Failed to fetch asset from path: \"${commonT9nPath}\"`);\n  }\n  const datasetInputParamsMap: Record<string, AnalysisToolParam> = {};\n  const webToolsUnits = commonT9n.webToolsUnits;\n  const inputParams: AnalysisToolParam[] = [];\n  const inputUIParameters: AnalysisToolUIParam[] = [];\n  let analysisBlock;\n  for (const param of webToolJSON.parameters ?? []) {\n    // custom web tools don't accept output parameters\n    if (param.direction === AnalysisToolParamDirection.Input) {\n      const inputUIParam: AnalysisToolUIParam = {\n        name: param.name,\n        label: param.displayName ?? param.name\n      };\n      if (param.name === \"esri_out_feature_service_name\" && param.dataType === \"GPString\") {\n        analysisBlock = {\n          componentName: \"analysis-block\",\n          label: commonT9n.resultLayerGroupLabel as unknown as string,\n          summaryText: commonT9n.resultLayerGroupText,\n          UIparameters: [inputUIParam]\n        };\n      } else {\n        if (param.dataType === \"GPFeatureRecordSetLayer\" || param.dataType === \"GPRecordSet\") {\n          datasetInputParamsMap[param.name] = param;\n        } else {\n          inputParams.push(param);\n          if (param.dataType === \"GPLinearUnit\") {\n            // add default units based on https://developers.arcgis.com/enterprise-sdk/api-reference/java/com/esri/arcgis/system/esriUnits.html\n            inputUIParam.choiceList = Object.keys(webToolsUnits);\n            inputUIParam.choiceListLabels = webToolsUnits as { [key: string]: string };\n          } else if (param.dataType === \"GPMultiValue:GPLinearUnit\") {\n            inputUIParam.UIparameterInfos = [\n              {\n                name: \"\",\n                choiceList: Object.keys(webToolsUnits),\n                choiceListLabels: webToolsUnits as { [key: string]: string }\n              }\n            ];\n          }\n        }\n\n        inputUIParameters.push(inputUIParam);\n      }\n    }\n  }\n\n  // provide a default tool ui json with all parameters inside an analysis block component\n  const toolUIJson: AnalysisToolUI = {\n    toolName: webToolJSON.name,\n    version: AnalysisToolUICurrentVersion,\n    UIparameters: [] as AnalysisToolUIParam[]\n  };\n\n  if (!isEmptyDataItem(inputUIParameters)) {\n    toolUIJson.UIparameters.push({\n      // label parameter is not added for a single default block\n      // we can potentially add more blocks by reading category information of the toolJSON\n      componentName: \"analysis-block\",\n      UIparameters: inputUIParameters\n    });\n  }\n\n  // Special case analysis-block, push to end of parameters\n  if (analysisBlock !== undefined) {\n    toolUIJson.UIparameters.push(analysisBlock);\n  }\n\n  // create rules based on dependency between Field and GPFeatureRecordSetLayer / GPRecordSet input params\n  for (const param of inputParams) {\n    let dependsOn: AnalysisToolParam | undefined;\n    if (param.dependency !== undefined) {\n      dependsOn = datasetInputParamsMap[param.dependency];\n    }\n    if ((param.dataType === \"Field\" || param.dataType === \"GPMultiValue:Field\") && dependsOn !== undefined) {\n      if (toolUIJson.rules === undefined) {\n        toolUIJson.rules = [];\n      }\n      toolUIJson.rules.push({\n        ruleType: \"expression\",\n        expression: `$[Data].${dependsOn.name} NOT null`,\n        destination: param.name,\n        effectParams: {\n          mapLayer: `$[Component].${dependsOn.name}.selectedLayers`\n        }\n      });\n    }\n  }\n  return toolUIJson;\n}\n\n/**\n * Determines if travel mode is used in this tool.\n * @category Public\n * @param {string} toolName\n * @returns {boolean}\n */\nexport function isTravelModeUsedByTool(toolName: string): boolean {\n  const supportedToolNames = [\n    \"ChooseBestFacilities\",\n    \"ConnectOriginsToDestinations\",\n    \"CreateDriveTimeAreas\",\n    \"EnrichLayer\",\n    \"FindNearest\",\n    \"PlanRoutes\",\n    \"SummarizeNearby\"\n  ];\n  return supportedToolNames.includes(toolName);\n}\n\nexport const StraightLineParameterValue = \"StraightLine\";\n\n/**\n * Checks if the parameter is a travel mode parameter or not.\n * @param paramName\n * @param toolName\n * @returns boolean Return value is true or false for the check if its a travel mode based parameter or not.\n */\nexport function isTravelModeParameter(paramName: AnalysisToolParam[\"name\"], toolName: string): boolean {\n  const knownTravelModeParameters = [\"travelMode\", \"nearType\", \"measurementType\", \"bufferType\"];\n  // Initially checking if the tool name and parameter is in the list of known tool names and parameter names.\n  let isTravelModeParam = isTravelModeUsedByTool(toolName) && knownTravelModeParameters.includes(paramName);\n  // This Switch case further checks if the toolName and its travel mode parameter match.\n  switch (toolName) {\n    case \"SummarizeNearby\":\n      isTravelModeParam = isTravelModeParam && paramName === \"nearType\";\n      break;\n    case \"EnrichLayer\":\n      isTravelModeParam = isTravelModeParam && paramName === \"bufferType\";\n      break;\n    case \"ConnectOriginsToDestinations\":\n    case \"FindNearest\":\n    case \"FindClosest\":\n      isTravelModeParam = isTravelModeParam && paramName === \"measurementType\";\n      break;\n    case \"PlanRoutes\":\n    case \"CreateDriveTimeAreas\":\n    case \"ChooseBestFacilities\":\n      isTravelModeParam = isTravelModeParam && paramName === \"travelMode\";\n      break;\n    default:\n      // we want to default to false if none of the above conditions match.\n      isTravelModeParam = false;\n      break;\n  }\n  return isTravelModeParam;\n}\n","import { get, omit, omitBy, pick, set } from \"lodash-es\";\n\nimport {\n  AnalysisToolData,\n  AnalysisToolDataItem,\n  AnalysisToolInfo,\n  AnalysisToolParam,\n  AnalysisToolParamDirection,\n  AnalysisToolUIParam,\n  AnalysisUIParamProps,\n  ItemId,\n  OutputName,\n  ParamViewModelKey\n} from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem, removeEmptyObjects } from \"../common\";\nimport { AnalysisSupportedItemTypes, AnalyzeGeocodeResult, ProcessedDataProperties } from \"../interfaces\";\nimport { serializers } from \"../serialization\";\n\nimport { sanitizeUrl } from \"./common\";\nimport { getUIParamsByName } from \"./tool-ui-helpers\";\nimport {\n  AnalysisToolGlobalData,\n  CalculatedParameterValueKeys,\n  FilterAndRenameParamsOptions,\n  PrepJobParamsForSubmissionOptions\n} from \"./interfaces\";\n\n/**\n * Takes the job params, and calculates any values that need to be calculated at job submission time\n * @param {AnalysisToolData} jobParams the job params object for which values to be calculated\n * @returns {AnalysisToolData} returns the job data\n */\nexport function calculateParameterValues(jobParams: AnalysisToolData): AnalysisToolData {\n  const calculatedJobParams = { ...jobParams };\n  for (const param in calculatedJobParams) {\n    switch (calculatedJobParams[param]) {\n      case CalculatedParameterValueKeys.CurrentTime:\n        calculatedJobParams[param] = new Date().getTime();\n        break;\n      default:\n        break;\n    }\n  }\n  return calculatedJobParams;\n}\n\n/**\n * Helper to replace a string's spaces with underscores\n * @param {string} value the string to replace spaces in\n * @returns {string} the string with spaces replaced with underscores\n */\nexport function replaceSpacesWithUnderscores(value: string): string {\n  return value.replace(/\\s/g, \"_\");\n}\n\n/**\n * Replaces spaces with underscores when the portal is not ArcGIS Online\n * @param {string} outputNameValue the output name parameter value to format (JSON string)\n * @param {boolean} isPortal true if running on on-premises portal\n * @returns {string} the output name parameter value formatted for the portal\n * @throws {Error} if the output name parameter value is not valid JSON\n */\nexport function formatOutputNameForPortal(outputNameValue: string, isPortal = false): string {\n  let formattedOutputName = outputNameValue;\n\n  if (isPortal === true) {\n    // Will throw an error if the output name parameter value is not valid JSON\n    const outputName = JSON.parse(outputNameValue);\n\n    // Define a map of potential sources for the service name (property path -> value)\n    const potentialServiceNamePaths = {\n      \"serviceProperties.name\": outputName.serviceProperties?.name,\n      \"itemProperties.title\": outputName.itemProperties?.title\n    };\n\n    // Find the first source that has a value\n    const [serviceNameSource, serviceName] =\n      Object.entries(potentialServiceNamePaths).find(([_key, value]) => value !== undefined) ?? [];\n\n    // Replace spaces with underscores\n    if (serviceNameSource !== undefined) {\n      const formattedServiceName = replaceSpacesWithUnderscores(serviceName);\n      set(outputName, serviceNameSource, formattedServiceName);\n    }\n\n    formattedOutputName = JSON.stringify(outputName);\n  }\n\n  return formattedOutputName;\n}\n\n/**\n * Gets the actual output parameter names, handling special cases / multi\n * @param {string[]} parameterNames the names to parse\n * @returns {string[]} parsed names containing only the output names\n */\nexport function getActualOutputNames(parameterNames?: string[]): string[] {\n  // TODO: Come back to this, need more robust pattern as tool list grows\n  // This works for min-ship tools\n  let outputParamNames = [\"outputName\"];\n  // Special case for CreateViewshed (RA) tool\n  // FIXME: Hardcoded special case here, we can use a master list if we need\n  if (parameterNames?.includes(\"aboveGroundLevelOutputName\") === true)\n    outputParamNames.push(\"aboveGroundLevelOutputName\");\n\n  if (parameterNames?.includes(\"outputName\") === false) {\n    // We have a non-standard or multiple output, handle as a special case\n    outputParamNames = parameterNames.filter((name) => name.toLowerCase().includes(\"output\"));\n  }\n  return outputParamNames;\n}\n\n/**\n * Returns the job parameters based on a toolJSON from a data object.\n * @param {AnalysisToolInfo} toolJSON the tool json for which we are getting the job parameters\n * @param {AnalysisToolGlobalData} data complete current tool data including empty values\n * @returns {AnalysisToolGlobalData} provides the job parameters for current ui state\n */\nexport function getJobParams(toolJSON: AnalysisToolInfo, data: AnalysisToolGlobalData): AnalysisToolGlobalData {\n  const { parameters } = toolJSON;\n  const parameterNames = parameters\n    ?.filter((parameter: AnalysisToolParam) => parameter.direction !== AnalysisToolParamDirection.Output)\n    ?.map((parameter: AnalysisToolParam) => parameter.name);\n  let jobParams = pick(data, parameterNames as string[]);\n  jobParams = removeEmptyObjects<AnalysisToolGlobalData>(jobParams);\n  return jobParams;\n}\n\n/**\n * Filters and renames keys in the job parameters based on their visibility and presence in the UI parameter model.\n *\n * If a key in job parameters is not present in the UI parameter view model, then it will be removed from the job parameters.\n * If a key is present in the UI parameter view model, is visible, and has a 'submissionName', then depending on the value of\n * 'useSubmissionName' (default is true), the function behaves as follows:\n *    - If 'useSubmissionName' is true, the key will be added/updated in the job parameters at the 'submissionName' key.\n *      The original key will then be removed from the job parameters.\n *    - If 'useSubmissionName' is false, the key will be added/updated in the job parameters at the original key. The 'submissionName'\n *      key will then be removed from the job parameters.\n * If a key is present in UI parameter model but does not have a 'submissionName', then it will be left as is in the job parameters.\n * @param {object} options - The options object.\n * @param {AnalysisToolData | undefined} options.jobParams - The job parameters to be filtered and potentially renamed.\n * @param {AnalysisToolData | undefined} options.UIOnlyParams - UI specific parameters that may or may not have a corresponding value in jobParams.\n * @param {AnalysisParamModel | undefined} options.toolUIParamModel - The UI parameter model used for determining key visibility and potential renaming.\n * @param {boolean} options.useSubmissionName - Whether or not to use the submissionName or original key when renaming. Defaults to true.\n * @returns {AnalysisToolData} The updated job parameters with keys filtered and renamed as per visibility and presence in the UI parameter model.\n */\nexport function filterAndRenameParams({\n  jobParams,\n  UIOnlyParams,\n  toolUIParamModel,\n  useSubmissionName = true\n}: FilterAndRenameParamsOptions): AnalysisToolData {\n  const updatedParams: AnalysisToolData = { ...jobParams };\n\n  if (isEmptyDataItem(toolUIParamModel) === false) {\n    // Use a temporary object to store the renamed parameters\n    // this prevents the edge case where a parameter is renamed to a job param that is later removed\n    const renamedParams: AnalysisToolData = {};\n\n    for (const [key, value] of Object.entries({ ...jobParams, ...UIOnlyParams })) {\n      // parameters not in the view model are REST parameters, with no intention of being shown in the UI\n      const inViewModel = toolUIParamModel?.[key] !== undefined;\n      const submissionName = get(toolUIParamModel, [key, \"submissionName\"]);\n      const isVisible = inViewModel && get(toolUIParamModel, [key, \"visible\"], true);\n      // parameters without a set \"visible\" property are assumed to be visible, so we default to true\n\n      // If the key has a submissionName and is visible, rename the key\n      if (submissionName !== undefined && isVisible === true) {\n        const newKey = useSubmissionName === true ? submissionName : key;\n        const removedKey = useSubmissionName === true ? key : submissionName;\n\n        renamedParams[newKey] = value;\n        delete updatedParams[removedKey];\n      } else if (inViewModel === false && key !== \"context\") {\n        // TODO: Remove the hardcoded check for \"context\" and improve logic to determine if a parameter\n        // should be removed or not. \"context\" is an example of a REST parameter that is not in the\n        // view model but should not be removed.\n\n        // If the key is not in the view model at all, remove it\n        // These are REST parameters that were not visible in the UI\n        delete updatedParams[key];\n      }\n    }\n\n    // Add the renamed parameters to the updated parameters\n    Object.assign(updatedParams, renamedParams);\n  }\n\n  return updatedParams;\n}\n\n/**\n * Returns the job parameters replaced by the UI only parameters with submission names\n * @param {AnalysisToolData} jobParams the job parameters to be replaced\n * @param {AnalysisToolData} UIOnlyParams the UI only parameters to replace with\n * @param {string} toolName the name of the tool to determine if renaming is needed\n * @returns {AnalysisToolData} the prepared/updated job parameters\n */\nexport function filterAndRenameJobParams(\n  jobParams: AnalysisToolData | undefined,\n  UIOnlyParams: AnalysisToolData | undefined,\n  toolName: string | undefined\n): AnalysisToolData {\n  let preppedJobParams = jobParams ?? {};\n\n  if (toolName === \"ChooseBestFacilities\") {\n    const UIparameterViewModel = UIOnlyParams?.[ParamViewModelKey];\n    preppedJobParams = filterAndRenameParams({\n      jobParams,\n      UIOnlyParams,\n      toolUIParamModel: UIparameterViewModel,\n      useSubmissionName: false\n    });\n  }\n\n  // For Batch Geocode tool we only want to show the `geocodeUIParameters` that match UI key value table.\n  if (toolName === \"BatchGeocode\") {\n    preppedJobParams = omit(preppedJobParams, \"geocodeParameters\");\n  }\n\n  return preppedJobParams;\n}\n\n/**\n *\n * @param toolData\n * @param jobParams\n * @param outParamName\n */\nexport function serializeOutputName(\n  toolData: AnalysisToolData,\n  jobParams: AnalysisToolData,\n  outParamName: string\n): string {\n  const outputName: OutputName = {};\n  if (\n    toolData !== undefined &&\n    (toolData.resultType === undefined ||\n      (toolData.resultType !== undefined &&\n        [\n          \"TILED_IMAGERY_LAYER\",\n          \"DYNAMIC_IMAGERY_LAYER\",\n          \"FEATURE_LAYER\",\n          AnalysisSupportedItemTypes.FeatureLayer,\n          AnalysisSupportedItemTypes.FeatureService,\n          AnalysisSupportedItemTypes.ImageService\n        ].includes(toolData.resultType as string)))\n  ) {\n    outputName.serviceProperties = {\n      name: jobParams[outParamName] as string\n    };\n  }\n  if (\n    outputName.serviceProperties !== undefined &&\n    toolData.resultType !== undefined &&\n    toolData.resultType !== null &&\n    [\"TILED_IMAGERY_LAYER\", \"DYNAMIC_IMAGERY_LAYER\"].includes(toolData.resultType as string)\n  ) {\n    outputName.serviceProperties.capabilities =\n      toolData.resultType === \"TILED_IMAGERY_LAYER\" ? \"Image, TilesOnly\" : \"Image\";\n  }\n  if (toolData.itemProperties !== undefined) {\n    outputName.itemProperties = toolData.itemProperties as OutputName[\"itemProperties\"];\n    if (outputName.itemProperties !== undefined) {\n      outputName.itemProperties.title = jobParams[outParamName] as string;\n      outputName.itemProperties.folderId = toolData.saveResultIn as string;\n    }\n  }\n  return JSON.stringify(outputName);\n}\n\nfunction serializeGenericParameter(\n  paramConfig: AnalysisToolUIParam,\n  parameterObject: AnalysisToolDataItem\n): AnalysisToolDataItem | undefined {\n  let fullyProcessedValue;\n  // Create a new serializer based on the serializationType\n  const serializationType = paramConfig.serializationType;\n  if (serializationType !== undefined) {\n    const serializer = new serializers[serializationType]();\n\n    // Perform the serialization\n    const preparedData = serializer.prepare(parameterObject, paramConfig);\n    const serializedValue = serializer.serialize(preparedData);\n    fullyProcessedValue = serializer.postProcess(serializedValue, paramConfig) as AnalysisToolDataItem;\n  }\n  return fullyProcessedValue;\n}\n\n/**\n * Perform \"one way\" serialization of the job params for the job submission. The returned object is not intended to be\n * deserialized\n *\n * The function checks if one or more job parameter has serialization properties as made available in AnalysisToolUIParam.\n * One or more JobParameters can have serializationType, serializationParameterName, serializationKeys defined to\n * determine its serialization. See AnalysisToolUIParam for documentation of these properties.\n *\n * We can have these scenarios for a jobParameter object when one or more of the above properties are defined.\n * serializationType alone can be defined\n * serializationParameterName alone cannot be used it needs the serializationType to be defined as well to do serialization based on the type provided.\n * serializationKeys alone cannot be defined it needs serializationParameterName to be defined as well, so we can serialize the keys listed to this\n * serialization parameter name provided. This agreement helps us to have intent declared explicitly.\n *\n * Case A: serializationType alone can be defined\n * horizontalFactor : { type: \"planar\", startAngle: -90, endAngle: 90}\n * would be serialized to\n * => horizontalFactor: \"planar -90 90\"\n *\n * Case B: serializationParameterName is defined\n * Sub-Case B.1: serializationParameterName is defined and serializationKeys is undefined\n * If one of its property is used as serializationParameterName\n * it would set the value to that property.\n * recordsToMatch: {\"orderByFields\": \"field \", sortOrder: \"ASC\"}\n * serializationParameterName is orderByFields\n * would be serialized to\n * => recordsToMatch: {\"orderByFields\": \"field ASC\"}\n * Sub-Case B.2 serializationParameterName is defined and serializationKeys and serializationKeys is defined.\n * serializationKeys is [\"orderByFields\", \"sortOrder\"]\n * recordsToMatch: { \"orderByFields\": \"field \", sortOrder: \"ASC\", topOrder: 1}\n * serializationParameterName is orderByFields\n * => recordsToMatch: {\"orderByFields\": \"field ASC\", topOrder: 1}\n *\n * Case C: if the parameterObject does not have serializationParameterName property name it would  be create\n * and store the serialized value\n * Sub-Case C.1: serializationKeys is undefined\n * serializationParameterName: orderGrouping\n * recordsToMatch: {\"orderByFields\": \"field \", sortOrder: \"ASC\"}\n * serializationKeys is undefined\n * => recordsToMatch: {\"orderGrouping\": \"field ASC\"}\n * Sub-Case C.2 When serializationKeys is defined\n * serializationKeys is [\"orderByFields\", \"sortOrder\"]\n * serializationParameterName: orderGrouping\n * and recordsToMatch: { \"orderByFields\": \"field \", sortOrder: \"ASC\", topOrder: 1}\n * => recordsToMatch: {\"orderGrouping\": \"field ASC\", topOrder: 1}\n * @param {PrepJobParamsForSubmissionOptions} options - the options for the function\n * @param {AnalysisToolData} options.jobParams - the job parameters to be serialized\n * @param {AnalysisToolData} options.toolData - unprocessed tool data, used to support renamed parameters\n * @param {toolUIJson} options.toolUIJson - the tool UI json which contains the serialization properties\n * @param {toolJSON} options.toolJSON - the json for the tool, this is used for output name serialization.\n * @param {string} options.toolName - the name of the tool to determine if renaming is needed\n * @param {boolean} options.isPortal - a flag to determine if the portal is on premise or not\n * @returns {AnalysisToolData} - the serialized job parameters\n */\nexport function prepJobParamsForSubmission(options: PrepJobParamsForSubmissionOptions): AnalysisToolData {\n  const { jobParams, toolData, toolUIJson, toolName, toolJSON, isPortal = false } = options;\n  // loop through job params and check if toolJson has a param with a serializationType set\n  let serializedJobParams: AnalysisToolData = { ...jobParams };\n  const paramsByName = getUIParamsByName(toolUIJson);\n\n  const parameterNames = toolJSON?.parameters\n    ?.filter((parameter: AnalysisToolParam) => parameter.direction !== AnalysisToolParamDirection.Output)\n    ?.map((parameter: AnalysisToolParam) => parameter.name);\n  const actualOutputNames = getActualOutputNames(parameterNames);\n\n  if (toolName === \"BatchGeocode\" && toolData !== undefined) {\n    // translate the UI only parameter `geocodeUIParameters` to the schema that `BatchGeocode` expects.\n    const geocodeUIParameters = toolData.geocodeUIParameters as ProcessedDataProperties;\n    const geocodeParameters = toolData.geocodeParameters as AnalyzeGeocodeResult;\n    const singleLine = toolData.singleOrMultiFieldSwitch === \"singleField\";\n    const addressFields = paramsByName.geocodeUIParameters.UIparameterInfos!.map(\n      (addressField: AnalysisUIParamProps) => addressField.name!\n    );\n    let fieldMapping: string[][];\n    if (singleLine) {\n      fieldMapping = addressFields.reduce((acc: string[][], curr) => {\n        if (curr === \"SingleLine\") {\n          acc.push([geocodeUIParameters[curr] ?? \"\", curr]);\n        } else {\n          acc.push([geocodeUIParameters[curr] ?? \"\", \"\"]);\n        }\n        return acc;\n      }, []);\n    } else {\n      fieldMapping = addressFields.reduce((acc: string[][], curr) => {\n        if (curr !== \"SingleLine\") {\n          acc.push([geocodeUIParameters[curr] ?? \"\", curr]);\n        }\n        return acc;\n      }, []);\n    }\n    geocodeParameters.field_mapping = JSON.stringify(fieldMapping);\n    serializedJobParams.geocodeParameters = geocodeParameters;\n    if (!isEmptyDataItem(serializedJobParams.inputFileItem)) {\n      // `BatchGeocode` expects `itemid` with lowercase `i`\n      serializedJobParams.inputFileItem = { itemid: (<ItemId>serializedJobParams.inputFileItem)?.itemId };\n    }\n  }\n\n  for (const paramName in serializedJobParams) {\n    const paramConfig = paramsByName[paramName];\n    const parameterValue = serializedJobParams[paramName];\n\n    // if parameter is not visible it would be already have its value undefined from analysis-tool\n    // if parameter is visible but has \"empty\" values like \"\", [], {}, undefined, null, {prop1: undefined, prop2: undefined}\n    // serialize it as undefined so it is not passed in job submission to the analysis tool.\n    if (isEmptyDataItem(parameterValue)) {\n      serializedJobParams[paramName] = undefined;\n    } else if (typeof parameterValue === \"object\" && paramConfig?.serializationType !== undefined) {\n      serializedJobParams[paramName] = serializeGenericParameter(paramConfig, parameterValue);\n    } else if (typeof parameterValue === \"string\" && actualOutputNames.includes(paramName) && toolData !== undefined) {\n      const outputNameObjectString = serializeOutputName(toolData, jobParams, paramName);\n      // FIXME: We should combine/refactor the formatOutputNameForPortal and serializeOutputName functions\n      // to avoid re-parsing the object created in serializeOutputName in formatOutputNameForPortal.\n      let formattedOutputName = outputNameObjectString;\n      try {\n        formattedOutputName = formatOutputNameForPortal(outputNameObjectString, isPortal);\n      } catch (error) {\n        // TODO: We incorrectly thought the parameterValue is an output name, but it is not.\n        // For now we will just ignore the error and pass the parameterValue as is.\n      }\n      serializedJobParams[paramName] = formattedOutputName;\n    }\n  }\n\n  // Check if a key in toolData should be renamed to a key in jobParams\n  // TODO: look for submissionName usage in the parameter view model to\n  // determine if we should call this rather than relying on the toolName\n  if (toolName === \"ChooseBestFacilities\") {\n    const UIparameterViewModel = toolData?.[ParamViewModelKey];\n    const UIOnlyParams = omit(toolData, Object.keys(serializedJobParams));\n\n    serializedJobParams = filterAndRenameParams({\n      jobParams: serializedJobParams,\n      UIOnlyParams,\n      toolUIParamModel: UIparameterViewModel\n    });\n  }\n\n  return omitBy(serializedJobParams, isEmptyDataItem) as AnalysisToolData;\n}\n\n/**\n * Removes tokens from jobParams\n * @param {AnalysisToolData} jobParams the item to sanitize\n * @returns {AnalysisToolData} the same jobParams as input, only sanitized.\n */\nexport function sanitizeTokensFromJobParams(jobParams: AnalysisToolData): AnalysisToolData {\n  for (const key of Object.keys(jobParams)) {\n    let currentParam = jobParams[key];\n    if (currentParam !== undefined && currentParam !== null) {\n      // FIXME: use better detection for what is a URL.\n      if (typeof currentParam === \"string\" && currentParam.includes(\"http\")) {\n        currentParam = sanitizeUrl(currentParam);\n      } else if (Array.isArray(currentParam)) {\n        currentParam.forEach((param: any) => {\n          if (typeof param === \"object\" && \"url\" in param && param.url !== undefined && param.url !== null) {\n            param.url = sanitizeUrl(param.url as string);\n            param.serviceToken = undefined;\n          }\n        });\n      } else if (\n        typeof currentParam === \"object\" &&\n        \"url\" in currentParam &&\n        currentParam.url !== undefined &&\n        currentParam.url !== null\n      ) {\n        currentParam.url = sanitizeUrl(currentParam.url as string);\n        (currentParam as any).serviceToken = undefined;\n      } else if (key === \"context\" && typeof currentParam === \"object\") {\n        sanitizeTokensFromJobParams(currentParam as AnalysisToolData);\n      }\n    }\n    jobParams[key] = currentParam;\n  }\n\n  return jobParams;\n}\n","import { formatMessage } from \"../localization\";\n\nimport { ProcessInfoMessage } from \"./interfaces\";\n\nfunction replaceTag(tag: \"&\" | \"<\" | \">\"): string {\n  const tagsToReplace = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\"\n  };\n  return tagsToReplace[tag] || tag;\n}\n\nfunction safeTagsReplace(str: string): string {\n  /* checking minimum characters <, > at this time */\n  return str.replace(/[<>]/g, replaceTag);\n}\n\n/**\n * Builds the process info report from the job messages\n * Port from 3.x: https://devtopia.esri.com/WebGIS/arcgis-js-api/blob/master/esri/dijit/analysis/utils.js#L276\n * // TODO: Fetch its own strings and not have as function argument\n * @param {string[]} messagesArray - array of messages to be de-serialized\n * @param {Record<string, string>} t9nMessageCodes - GP message codes to use for translation\n * @returns {string} the formatted html report\n */\nexport function buildProcessInfoReport(messagesArray: string[], t9nMessageCodes: Record<string, string> = {}): string {\n  let formattedReport = \"\";\n  messagesArray.forEach((report: string) => {\n    // Parse the stringified object into the `ProcessInfoMessage` type object\n    const messageObject: ProcessInfoMessage = JSON.parse(report);\n    const { message, messageCode, params, style } = messageObject;\n    if (Array.isArray(message)) {\n      const substitutionKeys: Record<string, string> = {};\n      let currentMessage = style;\n      // Loop below will replace values in this ^ html string with translations and actual values\n      message.forEach((singleMessage, index) => {\n        // Generate a key to reference the t9n json and use for later substitution\n        const messageCodeKey = `${messageCode}_${index}`;\n        // Replace the first closing of the td tag with an index based template string\n        currentMessage = currentMessage.replace(\"></\", \">${\" + messageCodeKey + \"}</\");\n        // Get the translated message based on the code + index\n        let localizedMessage =\n          t9nMessageCodes[messageCodeKey] !== undefined ? t9nMessageCodes[messageCodeKey] : singleMessage;\n        // Replace based on the params in the gp message\n        localizedMessage = formatMessage(localizedMessage, params);\n        localizedMessage = safeTagsReplace(localizedMessage);\n        // Populate mapping object for key to replace and its substituted value using `formatMessage`\n        substitutionKeys[messageCodeKey] = `${localizedMessage}`;\n      });\n      // Finally - substitute the templates created above and concat the string\n      formattedReport += formatMessage(currentMessage, substitutionKeys);\n    } else {\n      let localizedMessage = t9nMessageCodes[messageCode] !== undefined ? t9nMessageCodes[messageCode] : message;\n      localizedMessage = formatMessage(localizedMessage, params);\n      const firstClosingTag = style.indexOf(\"</\");\n      // Constructs a string like `<u><b>Initial Data Assessment</b></u><br/>`\n      formattedReport += `${style.substring(0, firstClosingTag)}${localizedMessage}${style.substring(firstClosingTag)}`;\n    }\n  });\n\n  return formattedReport;\n}\n","import Layer from \"@arcgis/core/layers/Layer\";\nimport PortalItem from \"@arcgis/core/portal/PortalItem\";\n\nimport { AnalysisToolInfo, AnalysisToolParam, AnalysisToolParamDirection, GPDataType } from \"analysis-ui-schema\";\n\nimport { isEmptyDataItem } from \"../common\";\n\nimport { getLayerObject } from \"./gp-layer\";\n\n/**\n * Returns the result parameters from toolJSON.\n * @param {AnalysisToolInfo} toolJSON passed toolJson input\n * @returns {string[]} list of result params\n */\nexport function getResultParams(toolJSON: AnalysisToolInfo): string[] {\n  const { parameters } = toolJSON;\n  const resultParams = parameters\n    ?.filter((parameter: AnalysisToolParam) => parameter.direction === AnalysisToolParamDirection.Output)\n    .map((parameter: AnalysisToolParam) => parameter.name);\n  return resultParams ?? [];\n}\n\n/**\n * Returns true if the input is a portalItem of type feature service or image service, and false otherwise\n * @param {Layer | PortalItem} result the instance of layer or portal item\n * @returns {boolean} whether or nto the layer object should be created or we should use the portalItem\n */\nexport function shouldCreateLayerObject(result: Layer | PortalItem): boolean {\n  return result instanceof PortalItem && (result.type === \"Feature Service\" || result.type === \"Image Service\");\n}\n\n/**\n * Returns true if the result is an instance of layer or is an instance of portalItem with either \"Feature Service\"\n * or \"Image service\" as the type\n * @param {Layer | PortalItem} result the instance of layer or portal item\n * @returns {result is __esri.PortalItem} boolean to add to map or not\n */\nexport function shouldAddToMap(result: Layer | PortalItem): boolean {\n  return shouldCreateLayerObject(result) || result instanceof Layer;\n}\n\n/**\n * Gets the supported results from a gp result.\n * @param {GPDataType} gpResultValue the result to get the object of\n * @returns {Promise<Layer | PortalItem | undefined>} returns list of supported layer results\n */\nexport async function getSupportedResults(gpResultValue: GPDataType): Promise<Layer | PortalItem | undefined> {\n  let result: Layer | PortalItem | undefined;\n  if (\n    typeof gpResultValue === \"object\" &&\n    \"itemId\" in gpResultValue &&\n    isEmptyDataItem(gpResultValue.itemId) === false\n  ) {\n    let portalItem = new PortalItem({\n      id: gpResultValue.itemId\n    });\n    portalItem = await portalItem.load();\n    if (shouldCreateLayerObject(portalItem) === true) {\n      result = await getLayerObject(gpResultValue);\n    } else {\n      result = portalItem;\n    }\n  } else {\n    result = await getLayerObject(gpResultValue);\n  }\n  return result;\n}\n","import Portal from \"@arcgis/core/portal/Portal\";\nimport esriId from \"@arcgis/core/identity/IdentityManager\";\n\nimport { FederatedServer } from \"../interfaces\";\nimport { isImageryLayer, isImageryTileLayer } from \"../tools\";\nimport { SupportedLayer } from \"../tools/interfaces\";\nimport { ErrorKeywords } from \"../errors/interfaces\";\nimport { throwError } from \"../t9n/errors\";\nimport { isEmptyDataItem, request } from \"../common\";\n\n/**\n * This function checks whether a layer is allowed for analysis\n * @param {SupportedLayer} layer mapLayer to be checked\n * @returns {boolean} true if layer is allowed for analysis and false otherwise\n */\nexport function checkLayerAllowAnalysis(layer: SupportedLayer): boolean {\n  let allowedAnalysis = true;\n  if (isImageryLayer(layer) || isImageryTileLayer(layer)) {\n    // check allowAnalysis flag from sourceJSON\n    if (layer.sourceJSON?.allowAnalysis === false) {\n      allowedAnalysis = false;\n    }\n\n    const isLayerHosted = layer.portalItem?.typeKeywords?.includes(\"Hosted Service\") ?? false;\n    if (isLayerHosted) {\n      // if the hosted imagery layer is within the same org as user,\n      // then it is considered as collocated service which analysis tool could directly access the source data.\n      allowedAnalysis = layer.portalItem.isOrgItem ?? false ? true : allowedAnalysis;\n    }\n  }\n  return allowedAnalysis;\n}\n\n/**\n * This function filters a list of layers by checking allow analysis property and returns list of layers allowed for analysis\n * @param {SupportedLayer[]} layers mapLayers to be filtered\n * @returns {SupportedLayer[]} list of layers filtered allow for analysis\n */\nexport function filterLayersAllowAnalysis(layers: SupportedLayer[]): SupportedLayer[] {\n  return layers.filter((layer) => checkLayerAllowAnalysis(layer));\n}\n\n/**\n * Get federated servers list from ArcGIS Enterprise deployed on WindowsLinux or Kubernetes\n * @param {Portal} portal portal instance\n * @returns {Promise<FederatedServer[]>} promise of the federated servers list from Enterprise\n */\nexport async function getFederatedServers(portal: Portal): Promise<FederatedServer[]> {\n  const { id, isPortal, restUrl, user } = portal;\n  let federatedServers: FederatedServer[] = [];\n  if (isPortal && !isEmptyDataItem(id) && !isEmptyDataItem(restUrl) && !isEmptyDataItem(user)) {\n    const url = restUrl + \"/portals/\" + id + \"/servers\";\n    const credential = esriId.findCredential(url);\n\n    let token;\n    if (credential !== undefined) {\n      token = credential.token;\n    }\n\n    const options = {\n      query: {\n        token: token,\n        f: \"json\"\n      }\n    };\n\n    try {\n      const response = await request(url, options);\n      federatedServers = response?.data?.servers ?? [];\n    } catch (e) {\n      await throwError(ErrorKeywords.NetworkError);\n    }\n  }\n  return federatedServers;\n}\n","import IdentityManager from \"@arcgis/core/identity/IdentityManager\";\nimport Portal from \"@arcgis/core/portal/Portal\";\nimport PortalUser from \"@arcgis/core/portal/PortalUser\";\nimport esriId from \"@arcgis/core/identity/IdentityManager\";\n\nimport memoize from \"fast-memoize\";\n\nimport { ErrorKeywords } from \"../errors/interfaces\";\nimport { throwError } from \"../t9n/errors\";\nimport { isEmptyDataItem, request } from \"../common\";\nimport { UserLicensedItem } from \"../schema/interfaces\";\nimport { getFederatedServers } from \"../imagery-layer\";\nimport { FederatedServer, FederatedServerLicenseInfo, ServerEditionName } from \"../interfaces\";\n\n/**\n * Checks if the user is an admin\n * @param user portal's user instance\n * @returns\n */\nfunction isAdmin(user: PortalUser): boolean {\n  return user.role?.includes(\"admin\") ?? false;\n}\n\n/**\n * Checks if the user is a publisher\n * @param user portal's user instance\n * @returns\n */\nfunction isPublisher(user: PortalUser): boolean {\n  return user.role?.includes(\"publisher\") ?? false;\n}\n\n/**\n * Determine if user has access to analysis run spatial analysis jobs.\n * @param user\n * @returns\n */\nexport function checkUserAccess(user: PortalUser): boolean {\n  let hasAccess = true;\n\n  // let errorMessage = \"\";\n  if (isEmptyDataItem(user?.orgId) === true) {\n    // analysis only available for org level users.\n    hasAccess = false;\n    // TODO: errorMessage = i18n.orgUsrMsg;\n  } else {\n    hasAccess = isAdmin(user) || isPublisher(user);\n    // TODO: errorMessage = i18n.pubRoleMsg;\n  }\n  return hasAccess;\n}\n\n/**\n * Checks if the user can perform standard analysis\n * @param portal portal instance\n * @returns\n */\nexport function canPerformStandardAnalysis(portal: Portal): boolean {\n  const isServerAvailable = isEmptyDataItem(portal.helperServices?.analysis?.url) === false;\n  const { user } = portal;\n  const atLeastPublisher = isPublisher(user) || isAdmin(user);\n  const privileges: string[] = user.sourceJSON.privileges ?? [];\n  const hasAnalysisPrivilege =\n    atLeastPublisher &&\n    privileges.includes(\"portal:publisher:publishFeatures\") &&\n    privileges.includes(\"premium:user:spatialanalysis\");\n  return isServerAvailable && hasAnalysisPrivilege;\n}\n\n/**\n * Checks if the user can perform geo analysis\n * @param portal portal instance\n * @returns\n */\nexport function canPerformGeoAnalytics(portal: Portal): boolean {\n  const isServerAvailable = isEmptyDataItem(portal.helperServices?.geoanalytics?.url) === false;\n  const { user } = portal;\n  const atLeastPublisher = isPublisher(user) || isAdmin(user);\n  const privileges: string[] = user.sourceJSON.privileges ?? [];\n  const hasGeoAnalyticsPrivilege =\n    atLeastPublisher &&\n    privileges.includes(\"portal:publisher:publishFeatures\") &&\n    privileges.includes(\"premium:publisher:geoanalytics\");\n  return isServerAvailable && hasGeoAnalyticsPrivilege;\n}\n\n/**\n * Fetches a user's licenses\n * @param portal portal instance\n * @returns\n */\nexport const fetchUserLicenses = memoize(\n  async (portal: Portal) => {\n    const { url: portalUrl } = portal;\n    const url = `${portalUrl}/sharing/rest/community/self`;\n    const credential = esriId.findCredential(url);\n\n    let token;\n    if (credential !== undefined) {\n      token = credential.token;\n    }\n\n    const options = {\n      query: {\n        returnUserLicensedItems: true,\n        token: token,\n        f: \"json\"\n      }\n    };\n\n    try {\n      const {\n        data: { userLicensedItems }\n      } = await request(url, options);\n      return [...userLicensedItems.map(({ entitlements }: UserLicensedItem) => entitlements)].flat();\n    } catch (e) {\n      await throwError(ErrorKeywords.NetworkError);\n    }\n\n    return [];\n  },\n  {\n    serializer: (args) => `${(args as unknown as Portal).user.username}`\n    // serializer: (args) => `${(args as unknown as Portal).user.id}`\n  }\n);\n\n/**\n * Checks a list of a user's entitlements to see if that user has image entitlemenet\n * @param portal portal instance\n * @returns\n */\nexport async function hasImageEntitlement(portal: Portal): Promise<boolean> {\n  let userHasImageEntitlement;\n\n  try {\n    const entitlements = await fetchUserLicenses(portal);\n    userHasImageEntitlement = entitlements?.some((entitlement: string) => entitlement.toLowerCase() === \"image\");\n  } catch (e) {\n    userHasImageEntitlement = false;\n  }\n\n  return userHasImageEntitlement;\n}\n\n/**\n * Checks if the user can perform raster analysis\n * @param {Portal} portal portal instance\n * @returns {Promise<boolean>} true if the user can perform raster analysis\n */\nexport async function canPerformRasterAnalysis(portal: Portal): Promise<boolean> {\n  const isServerAvailable = isEmptyDataItem(portal.helperServices?.rasterAnalytics?.url) === false;\n  const { user } = portal;\n  const atLeastPublisher = isPublisher(user) || isAdmin(user);\n  const privileges: string[] = user.sourceJSON.privileges ?? [];\n  // The entitlement check is not needed for Enterprise.\n  // The entitlement is referring to the ArcGIS Image for ArcGIS Online extension license assignment.\n  const userHasImageEntitlement = portal.isPortal ? true : await hasImageEntitlement(portal);\n  const hasRasterAnalyticsPrivilege: boolean =\n    atLeastPublisher &&\n    userHasImageEntitlement &&\n    privileges.includes(\"portal:publisher:publishFeatures\") &&\n    privileges.includes(\"premium:publisher:rasteranalysis\") &&\n    (privileges.includes(\"portal:publisher:publishDynamicImagery\") ||\n      privileges.includes(\"portal:publisher:publishTiledImagery\"));\n\n  let hasRasterAnalyticsServer = true;\n  if (portal.isPortal) {\n    // for ArcGIS Enterprise deployed on WL or K8s, look for RA serverFunction in FederatedServers\n    try {\n      hasRasterAnalyticsServer = (await getFederatedServers(portal))?.some((server) =>\n        server?.serverFunction?.toLowerCase()?.includes(\"rasteranalytics\")\n      );\n    } catch (e) {\n      // in case of Network Error, reset hasRasterAnalyticsServer back to true as default.\n      // the helperServices check should correctly determine if Enterprise has RA server or not.\n      hasRasterAnalyticsServer = true;\n    }\n  }\n\n  return isServerAvailable && hasRasterAnalyticsPrivilege && hasRasterAnalyticsServer;\n}\n\n/**\n * Checks if user had minimum privileges to use analysis widget in MV\n * @param {Portal} portal portal instance\n * @returns {boolean} true if user has minimum privileges\n */\nexport async function canUseAnalysis(portal: Portal): Promise<boolean> {\n  return (\n    checkUserAccess(portal?.user) && (canPerformStandardAnalysis(portal) || (await canPerformRasterAnalysis(portal)))\n  );\n}\n\n/**\n * Finds the credentials for a portal, wrapper for JSAPI method.\n * @param {string} url the url of the portal\n * @param {string} userId the user id of the portal\n * @returns {__esri.Credential} the associated credential\n */\nexport function findCredential(url: string, userId: string): __esri.Credential {\n  return IdentityManager.findCredential(url, userId);\n}\n\n/**\n * function to get deep learning query url\n * @param {Portal} portal portal instance\n * @returns {string} url string\n */\nexport function getDeepLearningQueryUrl(portal: Portal) {\n  const { helperServices } = portal;\n  return `${helperServices.rasterAnalytics.url}/QueryDeepLearningModelInfo`;\n}\n\n/**\n * checks if standard(feature) analysis server is advanced, this is\n * used in enterprise if the server license is advanced to enable\n * certain tools and tool parameter\n * @param {Portal} portal instance of the portal\n * @returns {Promise<boolean>}\n */\nexport async function isStandardAnalysisServerAdvanced(portal: Portal): Promise<boolean> {\n  let hasAdvancedLevelLicense = false;\n  const { id, restUrl } = portal;\n  try {\n    const federatedServers = await getFederatedServers(portal);\n    const hostingServers = federatedServers.filter((server: FederatedServer) => server.serverRole === \"HOSTING_SERVER\");\n    // currently there is only one HOSTING_SERVER , in future could be more , then account for each to get the license\n    // Standard Feature Analytics is only based on one HOSTING_SERVER would need more information in that scenario to determine\n    // Analysis Server at that time.Using helperservices to check this.\n    const hostingServer = hostingServers?.[0] ?? undefined;\n    if (hostingServer !== undefined) {\n      const url = `${restUrl}/portals/${id}/servers/${hostingServer.id}`;\n      const credential = esriId.findCredential(url);\n      let token;\n      if (credential !== undefined) {\n        token = credential.token;\n      }\n\n      const options = {\n        query: {\n          token: token,\n          f: \"json\"\n        }\n      };\n      const serverResponse = (await request(url, options)) as { data: FederatedServerLicenseInfo };\n      const serverInfo = serverResponse?.data;\n      // when edition and level are undefined for hosting server we default to advanced server license.\n      // Example: Kubernetes does not return these properties.\n      const defaultLicenseLevel =\n        isEmptyDataItem(serverInfo?.edition) && isEmptyDataItem(serverInfo?.level) ? ServerEditionName.Advanced : null;\n      const licenseLevel = serverInfo?.edition?.name ?? defaultLicenseLevel;\n      hasAdvancedLevelLicense = licenseLevel === ServerEditionName.Advanced;\n    }\n  } catch (e) {\n    //no-op\n  }\n  return hasAdvancedLevelLicense;\n}\n","import * as geoprocessor from \"@arcgis/core/rest/geoprocessor\";\n\nimport memoize from \"fast-memoize\";\nimport { cloneDeep, omit } from \"lodash-es\";\n\nimport { ModelParameters } from \"analysis-ui-schema\";\n\nimport {\n  AnalyzeGeocodeResult,\n  ArcgisWebAnalysisError,\n  GetToolUIAddressFieldsParams,\n  ProcessedDataProperties,\n  getDeepLearningQueryUrl\n} from \"../index\";\nimport { Dataset, FieldInfo } from \"../tools/interfaces\";\n\nimport { DimensionValues, DimensionVariables, ProcessedLayerProperties } from \"./interfaces\";\n/**\n * @category Private\n * @param {__esri.ImageryLayer | __esri.ImageryTileLayer} layer - the imagery layer to be processed\n * @returns {ProcessedLayerProperties}\n * process multidimensional imagery layer to get dimensions and variables\n * also get rasterInfo from imagery layer for accessing properties\n */\nexport const processImageryLayer = memoize(\n  async (layer: __esri.ImageryLayer | __esri.ImageryTileLayer): Promise<ProcessedLayerProperties> => {\n    let processedProperties: ProcessedLayerProperties = { isMultidimensional: false };\n    const mutlidimensionalInfo =\n      layer.type === \"imagery-tile\" ? layer.rasterInfo.multidimensionalInfo : layer.multidimensionalInfo;\n    const multidimensionalSubset = layer.multidimensionalSubset;\n    if (mutlidimensionalInfo !== undefined && mutlidimensionalInfo !== null) {\n      const variables =\n        multidimensionalSubset !== null && multidimensionalSubset !== undefined\n          ? // FIXME: Method is still missing in typings\n            (layer as any).getMultidimensionalSubsetVariables()\n          : mutlidimensionalInfo.variables;\n      if (variables !== undefined && variables.length > 0) {\n        const dimensions: string[] = [];\n        const variableFields: FieldInfo[] = [];\n        const dimensionVariables: DimensionVariables = {};\n        const dimensionValues: DimensionValues = {};\n        const dimensionVariableDatasets: { [key: string]: Dataset } = {};\n        const dimensionMinValues: ProcessedLayerProperties = {};\n        const dimensionMaxValues: ProcessedLayerProperties = {};\n        const dimensionMinValuesWithLabels: ProcessedLayerProperties = {};\n        const dimensionMaxValuesWithLabels: ProcessedLayerProperties = {};\n        variables.forEach((variable: __esri.RasterMultidimensionalInfoVariables, vidx: number) => {\n          let dimensionsDescription = \"\";\n          const variableName = variable.name;\n          variable.dimensions.forEach((dimension, index) => {\n            const dimensionName = dimension.name;\n            if (dimensions.indexOf(dimensionName) === -1) {\n              dimensions.push(dimensionName);\n            }\n            const dimensionDescription =\n              index > 0\n                ? `,${dimensionName}=${dimension.values?.length}`\n                : `${dimensionName}=${dimension.values?.length}`;\n            dimensionsDescription = dimensionsDescription.concat(dimensionDescription);\n            if (index === 0) {\n              dimensionValues[variableName] = {};\n            }\n            if (dimensionVariables[dimensionName] === undefined) {\n              dimensionVariables[dimensionName] = [];\n            }\n            dimensionValues[variableName][dimensionName] = dimension.values;\n            // only set values from first variable\n            if (vidx === 0) {\n              const values = dimension.values;\n              if (values !== undefined) {\n                if (dimensionName === \"StdTime\" && (dimension.unit === undefined || dimension.unit === \"ISO8601\")) {\n                  const dimMinValues: string[] = [];\n                  const dimMaxValues: string[] = [];\n                  const dimMinValuesWithLabels: ProcessedLayerProperties = {};\n                  const dimMaxValuesWithLabels: ProcessedLayerProperties = {};\n                  values.forEach((value: number[] | number) => {\n                    if (typeof value === \"number\") {\n                      const date = new Date(value);\n                      const label = date.toLocaleString();\n                      const val = date.toISOString();\n                      dimMinValues.push(val);\n                      dimMaxValues.push(val);\n                      dimMinValuesWithLabels[val] = label;\n                      dimMaxValuesWithLabels[val] = label;\n                    } else if (Array.isArray(value)) {\n                      const d1 = new Date(value[0]);\n                      const d2 = new Date(value[1]);\n                      const val1 = d1.toISOString();\n                      const val2 = d2.toISOString();\n                      dimMinValues.push(val1);\n                      dimMaxValues.push(val2);\n                      dimMinValuesWithLabels[val1] = d1.toLocaleString();\n                      dimMaxValuesWithLabels[val2] = d2.toLocaleString();\n                    }\n                  });\n                  dimensionMinValues[dimensionName] = dimMinValues;\n                  dimensionMaxValues[dimensionName] = dimMaxValues;\n                  dimensionMinValuesWithLabels[dimensionName] = dimMinValuesWithLabels;\n                  dimensionMaxValuesWithLabels[dimensionName] = dimMaxValuesWithLabels;\n                } else {\n                  if (Array.isArray(values) && typeof values[0] === \"number\") {\n                    dimensionMinValues[dimensionName] = dimensionMaxValues[dimensionName] = values.map(String);\n                  } else if (Array.isArray(values[0]) && Array.isArray(values[1])) {\n                    dimensionMinValues[dimensionName] = values[0].map(String);\n                    dimensionMaxValues[dimensionName] = values[1].map(String);\n                  }\n                }\n              }\n            }\n            dimensionVariables[dimensionName].push(variableName);\n          });\n          variableFields.push({\n            name: variableName,\n            alias: `${variableName}[${dimensionsDescription}](${variable.description})`,\n            type: \"string\"\n          });\n        });\n        for (const key in dimensionVariables) {\n          const filteredFields = variableFields.filter(\n            (variableKey) => dimensionVariables[key].indexOf(variableKey.name) > -1\n          );\n          dimensionVariableDatasets[key] = {\n            id: \"1\",\n            name: key,\n            description: \"DimensionVariables\",\n            getFields: () => Promise.resolve(filteredFields)\n          };\n        }\n        const variablesDataset: Dataset = {\n          id: \"1\",\n          name: \"Variables\",\n          description: \"Variables\",\n          getFields: () => Promise.resolve(variableFields)\n        };\n        processedProperties = {\n          isMultidimensional: true,\n          dimensions: dimensions,\n          dimensionVariableDatasets: dimensionVariableDatasets,\n          dimensionValues: dimensionValues,\n          variablesDataset: variablesDataset,\n          dimensionMinValues: dimensionMinValues,\n          dimensionMaxValues: dimensionMaxValues,\n          dimensionMinValuesWithLabels: dimensionMinValuesWithLabels,\n          dimensionMaxValuesWithLabels: dimensionMaxValuesWithLabels\n        };\n      }\n    }\n\n    const rasterInfo =\n      layer.type === \"imagery\" ? await layer.generateRasterInfo(layer.renderingRule) : layer.rasterInfo;\n    processedProperties.rasterInfo = rasterInfo;\n\n    return processedProperties;\n  }\n);\n\n/**\n * @category Public\n * @param {__esri.Portal} portal\n * @param signal\n * @param signal.signal\n * @param {__esri.PortalItem} item - the deep learning model item to be processed\n * @returns {ProcessedDataProperties }\n * process deep learning item to get key-value infos\n */\nexport async function processDeepLearningModelItem(\n  item: any,\n  portal: __esri.Portal,\n  signal?: { signal: AbortSignal }\n): Promise<ProcessedDataProperties> {\n  const dataTypeMap: ProcessedDataProperties = {\n    string: \"GPString\",\n    numeric: \"GPDouble\"\n  };\n  let parameterInfos: ModelParameters[] = [];\n  const value: ProcessedDataProperties = {};\n  let modelType;\n  let modelInfo: any;\n  if (item.sourceJSON?.properties !== undefined && item.sourceJSON?.properties !== null) {\n    modelInfo = cloneDeep(item.sourceJSON.properties);\n  } else {\n    try {\n      const gpjob = await geoprocessor.submitJob(\n        getDeepLearningQueryUrl(portal),\n        {\n          model: { itemId: item.id }\n        },\n        undefined,\n        signal\n      );\n      const jobInfo = await gpjob.waitForJobCompletion(signal);\n      const result = await jobInfo.fetchResultData(\"outModelInfo\", undefined, signal);\n      modelInfo = result?.value;\n      item.update();\n    } catch (err) {\n      console.error(\"fetching model item failed\");\n      if (signal?.signal.aborted === true) {\n        throw new ArcgisWebAnalysisError(\"AbortError\");\n      }\n      throw err;\n    }\n  }\n  if (modelInfo !== undefined && modelInfo !== null) {\n    const modelParamInfo = modelInfo.modelInfo?.ParameterInfo;\n    modelType = modelInfo.modelInfo?.ModelType;\n    const paramsToAvoid = [\"raster\", \"rasters\", \"model\", \"device\"];\n    const params = modelParamInfo?.filter((param: ModelParameters) => {\n      return (\n        Object.keys(dataTypeMap).includes(param.dataType) &&\n        param.required === \"0\" &&\n        paramsToAvoid.indexOf(param.name.toLowerCase()) < 0\n      );\n    });\n    parameterInfos = params?.map((param: ModelParameters) => {\n      param.dataType = dataTypeMap[param.dataType];\n      param.required = false; // we filter out params which are not required, so the value will be always false\n      return param;\n    });\n    if (parameterInfos !== undefined && parameterInfos?.length > 0) {\n      parameterInfos.forEach((param: ModelParameters) => {\n        const pname = param.name;\n        value[pname] = param.value;\n      });\n    }\n  }\n  return { parameterInfos: parameterInfos, value: value, modelType };\n}\n\n/**\n * @category Public\n * @param params `AnalyzeGeocodeInput` parameters + the url of the `asyncGeocode` helperService\n */\nexport const analyzeGeocodeInput = async (params: GetToolUIAddressFieldsParams): Promise<AnalyzeGeocodeResult> => {\n  const { asyncGeocodeUrl } = params;\n  const jobInfo = await geoprocessor.submitJob(`${asyncGeocodeUrl}/AnalyzeGeocodeInput`, {\n    ...omit(params, \"asyncGeocodeUrl\"),\n    f: \"json\"\n  });\n  try {\n    await jobInfo.waitForJobCompletion();\n    const result = await jobInfo.fetchResultData(\"geocodeParameters\");\n    return result.value as unknown as AnalyzeGeocodeResult;\n  } catch (err) {\n    console.error(\"AnalyzeGeocodeInput failed\");\n    throw err;\n  }\n};\n","export type NestedObject = { [key: string]: string | NestedObject };\n\nexport const srCategories: NestedObject = {\n  \"Geographic Coordinate Systems\": {\n    Africa: {\n      \"4143\": \"Abidjan 1987\",\n      \"4168\": \"Accra\",\n      \"4201\": \"Adindan\",\n      \"4205\": \"Afgooye\",\n      \"4206\": \"Agadez\",\n      \"4204\": \"Ain el Abd 1970\",\n      \"4209\": \"Arc 1950\",\n      \"4210\": \"Arc 1960\",\n      \"4713\": \"Ayabelle Lighthouse\",\n      \"4213\": \"Beduaram\",\n      \"6883\": \"Bioko\",\n      \"4165\": \"Bissau\",\n      \"4220\": \"Camacupa\",\n      \"8694\": \"Camacupa_2015\",\n      \"4222\": \"Cape\",\n      \"4223\": \"Carthage\",\n      \"4816\": \"Carthage (Paris)\",\n      \"37225\": \"Carthage (grads)\",\n      \"4315\": \"Conakry 1905\",\n      \"4226\": \"Cote d\\u0027Ivoire\",\n      \"4155\": \"Dabola 1981\",\n      \"4228\": \"Douala\",\n      \"4192\": \"Douala 1948\",\n      \"4229\": \"Egypt 1907\",\n      \"4199\": \"Egypt 1930\",\n      \"4706\": \"Egypt Gulf of Suez S-650 TL\",\n      \"4230\": \"European Datum 1950\",\n      \"4159\": \"European Libyan Datum 1979\",\n      \"6894\": \"Gambia\",\n      \"4197\": \"Garoua\",\n      \"4148\": \"Hartebeesthoek 1994\",\n      \"4697\": \"IGC 1962 Arc of the 6th Parallel South\",\n      \"4701\": \"IGCB 1955\",\n      \"4700\": \"IGN Astro 1960\",\n      \"4679\": \"Jouik 1961\",\n      \"4696\": \"Kasai 1953\",\n      \"4695\": \"Katanga 1955\",\n      \"4198\": \"Kousseri\",\n      \"4246\": \"Kuwait Oil Company\",\n      \"4319\": \"Kuwait Utility\",\n      \"4754\": \"LGD2006\",\n      \"4699\": \"Le Pouce 1934\",\n      \"4250\": \"Leigon\",\n      \"4251\": \"Liberia 1964\",\n      \"4142\": \"Locodjo 1965\",\n      \"4252\": \"Lome\",\n      \"4266\": \"M\\u0027poraloko\",\n      \"4128\": \"Madzansua\",\n      \"4256\": \"Mahe 1971\",\n      \"4259\": \"Malongo 1987\",\n      \"4260\": \"Manoca\",\n      \"4193\": \"Manoca 1962\",\n      \"4262\": \"Massawa\",\n      \"4702\": \"Mauritania 1999\",\n      \"4261\": \"Merchich\",\n      \"104261\": \"Merchich (degrees)\",\n      \"4705\": \"Mhast (Offshore)\",\n      \"4704\": \"Mhast (Onshore)\",\n      \"4703\": \"Mhast 1951\",\n      \"4263\": \"Minna\",\n      \"4130\": \"Moznet\",\n      \"4270\": \"Nahrwan 1967\",\n      \"4318\": \"National Geodetic Network (Kuwait)\",\n      \"4307\": \"Nord Sahara 1959\",\n      \"4680\": \"Nouakchott 1965\",\n      \"4129\": \"Observatario\",\n      \"4281\": \"Palestine 1923\",\n      \"4620\": \"Point 58\",\n      \"4282\": \"Pointe Noire\",\n      \"4286\": \"Qatar 1948\",\n      \"4285\": \"Qatar 1974\",\n      \"4046\": \"RGRDC 2005\",\n      \"8699\": \"RSAO13\",\n      \"4293\": \"Schwarzeck\",\n      \"4174\": \"Sierra Leone 1924\",\n      \"104103\": \"Sierra Leone 1960\",\n      \"4175\": \"Sierra Leone 1968\",\n      \"4164\": \"South Yemen\",\n      \"4296\": \"Sudan\",\n      \"4297\": \"Tananarive 1925\",\n      \"4810\": \"Tananarive 1925 (Paris)\",\n      \"4127\": \"Tete\",\n      \"4303\": \"Trucial Coast 1948\",\n      \"4304\": \"Voirol 1875\",\n      \"4811\": \"Voirol 1875 (Paris)\",\n      \"104139\": \"Voirol 1875 (grads)\",\n      \"4821\": \"Voirol 1879 (Paris)\",\n      \"4671\": \"Voirol 1879 (degrees)\",\n      \"104140\": \"Voirol 1879 (grads)\",\n      \"4163\": \"Yemen NGN 1996\",\n      \"4310\": \"Yoff\"\n    },\n    Antarctica: {\n      \"4176\": \"Australian Antarctic 1998\",\n      \"4715\": \"Camp Area Astro\",\n      \"4736\": \"Deception Island\",\n      \"4636\": \"Petrels 1972\",\n      \"4637\": \"Pointe Geologie Perroud 1950\",\n      \"7073\": \"RGTAAF07\",\n      \"7133\": \"RGTAAF07 (lon-lat)\",\n      \"4764\": \"RSRGD2000\"\n    },\n    Asia: {\n      \"6881\": \"Aden 1925\",\n      \"4204\": \"Ain el Abd 1970\",\n      \"4211\": \"Batavia\",\n      \"4813\": \"Batavia (Jakarta)\",\n      \"4214\": \"Beijing 1954\",\n      \"6882\": \"Bekaa Valley 1920\",\n      \"4219\": \"Bukit Rimpah\",\n      \"4490\": \"China Geodetic Coordinate System 2000\",\n      \"4755\": \"DGN 1995\",\n      \"5264\": \"DRUKREF 03\",\n      \"4227\": \"Deir ez Zor\",\n      \"4154\": \"European 1950 (ED77)\",\n      \"4230\": \"European Datum 1950\",\n      \"37202\": \"Everest - Bangladesh\",\n      \"37203\": \"Everest - India and Nepal\",\n      \"4132\": \"FD 1958\",\n      \"4232\": \"Fahud\",\n      \"5246\": \"GDBD2009\",\n      \"4742\": \"GDM 2000\",\n      \"104022\": \"GGD\",\n      \"4682\": \"Gulshan 303\",\n      \"4613\": \"Gunung Segara\",\n      \"4820\": \"Gunung Segara (Jakarta)\",\n      \"4147\": \"Hanoi 1972\",\n      \"4255\": \"Herat North\",\n      \"4738\": \"Hong Kong 1963\",\n      \"4739\": \"Hong Kong 1963 (67)\",\n      \"4611\": \"Hong Kong 1980\",\n      \"8427\": \"Hong Kong Geodetic CS\",\n      \"4236\": \"Hu Tzu Shan\",\n      \"6983\": \"IG05 Intermediate CRS\",\n      \"6990\": \"IG05(2012) Intermediate CRS\",\n      \"7136\": \"IGD05\",\n      \"7139\": \"IGD05(2012)\",\n      \"4670\": \"IGM 1995\",\n      \"3889\": \"IGRS\",\n      \"4667\": \"IKBD 1992\",\n      \"4239\": \"Indian 1954\",\n      \"4131\": \"Indian 1960\",\n      \"4240\": \"Indian 1975\",\n      \"4238\": \"Indonesian Datum 1974\",\n      \"4141\": \"Israel\",\n      \"4612\": \"JGD 2000\",\n      \"6668\": \"JGD 2011\",\n      \"104130\": \"Jordan\",\n      \"9333\": \"KSA-GRF17\",\n      \"4243\": \"Kalianpur 1880\",\n      \"4144\": \"Kalianpur 1937\",\n      \"4145\": \"Kalianpur 1962\",\n      \"4146\": \"Kalianpur 1975\",\n      \"4244\": \"Kandawala\",\n      \"4743\": \"Karbala 1979 Polservice\",\n      \"4245\": \"Kertau\",\n      \"4751\": \"Kertau (RSO)\",\n      \"4737\": \"Korea Geodetic Datum 2000\",\n      \"4162\": \"Korean Datum 1985\",\n      \"4166\": \"Korean Datum 1995\",\n      \"4246\": \"Kuwait Oil Company\",\n      \"4319\": \"Kuwait Utility\",\n      \"104009\": \"Kyrg-06\",\n      \"4677\": \"Lao 1993\",\n      \"4678\": \"Lao 1997\",\n      \"4253\": \"Luzon 1911\",\n      \"104134\": \"MONREF 1997\",\n      \"104135\": \"MSK 1942\",\n      \"8818\": \"MTRF-2000\",\n      \"8428\": \"Macao 1920\",\n      \"8431\": \"Macao 2008\",\n      \"4257\": \"Makassar\",\n      \"4804\": \"Makassar (Jakarta)\",\n      \"4744\": \"Nahrwan 1934\",\n      \"4270\": \"Nahrwan 1967\",\n      \"4693\": \"Nakhl-e Ghanem\",\n      \"4318\": \"National Geodetic Network (Kuwait)\",\n      \"6207\": \"Nepal Nagarkot\",\n      \"4555\": \"New Beijing\",\n      \"7373\": \"ONGD14\",\n      \"9294\": \"ONGD17\",\n      \"104126\": \"Observatorio Meteorologico 1965\",\n      \"37206\": \"Oman\",\n      \"4134\": \"PDO 1993\",\n      \"5546\": \"PNG94\",\n      \"4683\": \"PRS 1992\",\n      \"4280\": \"Padang 1884\",\n      \"4808\": \"Padang 1884 (Jakarta)\",\n      \"4281\": \"Palestine 1923\",\n      \"4284\": \"Pulkovo 1942\",\n      \"4200\": \"Pulkovo 1995\",\n      \"4614\": \"QND 1995\",\n      \"4286\": \"Qatar 1948\",\n      \"4285\": \"Qatar 1974\",\n      \"4153\": \"Rassadiran\",\n      \"5233\": \"SLD99\",\n      \"9470\": \"SRGI2013\",\n      \"4757\": \"SVY21\",\n      \"4294\": \"Segora\",\n      \"4295\": \"Serindung\",\n      \"37207\": \"South Asia Singapore\",\n      \"3821\": \"Taiwan 1967\",\n      \"3824\": \"Taiwan 1997\",\n      \"4298\": \"Timbalai 1948\",\n      \"4301\": \"Tokyo\",\n      \"4303\": \"Trucial Coast 1948\",\n      \"4756\": \"VN 2000\",\n      \"4676\": \"Vientiane 1982\",\n      \"4610\": \"Xian 1980\"\n    },\n    \"Atlantic Ocean\": {\n      \"4712\": \"Ascension Island 1958\",\n      \"4710\": \"Astro DOS 71-4\",\n      \"4183\": \"Azores Central 1948\",\n      \"4665\": \"Azores Central 1995\",\n      \"4182\": \"Azores Occidental 1939\",\n      \"4184\": \"Azores Oriental 1940\",\n      \"4664\": \"Azores Oriental 1995\",\n      \"4216\": \"Bermuda 1957\",\n      \"4762\": \"Bermuda 2000\",\n      \"37241\": \"Graciosa Base SW 1948\",\n      \"4658\": \"Hjorsey 1955\",\n      \"4722\": \"ISTS 061 Astro 1968\",\n      \"4185\": \"Madeira 1936\",\n      \"37245\": \"Observ. Meteorologico 1939\",\n      \"9403\": \"PN68\",\n      \"5013\": \"PTRA08\",\n      \"4728\": \"Pico de Las Nieves\",\n      \"4615\": \"Porto Santo 1936\",\n      \"4663\": \"Porto Santo 1995\",\n      \"4824\": \"Principe\",\n      \"4081\": \"REGCAN95\",\n      \"4463\": \"RGSPM06\",\n      \"7035\": \"RGSPM06 (lon-lat)\",\n      \"7886\": \"SHGD2015\",\n      \"37249\": \"Sao Braz\",\n      \"4823\": \"Sao Tome\",\n      \"4292\": \"Sapper Hill 1943\",\n      \"4616\": \"Selvagem Grande 1938\",\n      \"7881\": \"St. Helena Tritan\",\n      \"4734\": \"Tristan Astro 1968\"\n    },\n    \"Australia and New Zealand\": {\n      \"9309\": \"ATRF2014\",\n      \"4202\": \"Australian Geodetic Datum 1966\",\n      \"4203\": \"Australian Geodetic Datum 1984\",\n      \"4673\": \"Chatham Islands 1979\",\n      \"7844\": \"GDA2020\",\n      \"4283\": \"Geocentric Datum of Australia 1994\",\n      \"4167\": \"NZGD2000\",\n      \"4272\": \"New Zealand Geodetic Datum 1949\"\n    },\n    Caribbean: {\n      \"4600\": \"Anguilla 1957\",\n      \"4601\": \"Antigua 1943\",\n      \"4212\": \"Barbados 1938\",\n      \"6135\": \"CIGD11\",\n      \"4602\": \"Dominica 1945\",\n      \"4625\": \"Fort Desaix\",\n      \"4621\": \"Fort Marigot\",\n      \"37240\": \"Fort Thomas 1955\",\n      \"4723\": \"Grand Cayman 1959\",\n      \"4603\": \"Grenada 1953\",\n      \"4758\": \"JAD 2001\",\n      \"4241\": \"Jamaica 1875\",\n      \"4242\": \"Jamaica 1969\",\n      \"37243\": \"L.C. 5 Astro 1961\",\n      \"4726\": \"Little Cayman 1961\",\n      \"4604\": \"Montserrat 1958\",\n      \"4139\": \"Puerto Rico\",\n      \"7086\": \"RGAF09 (lon-lat)\",\n      \"4558\": \"RRAF 1991\",\n      \"4622\": \"Sainte Anne\",\n      \"4605\": \"St. Kitts 1955\",\n      \"4606\": \"St. Lucia 1955\",\n      \"4607\": \"St. Vincent 1945\"\n    },\n    \"Central America\": {\n      \"8907\": \"CR-SIRGAS\",\n      \"5365\": \"CR05\",\n      \"5371\": \"MARCARIO SOLIS\",\n      \"5451\": \"Ocotepeque 1935\",\n      \"5467\": \"Panama-Colon 1911\",\n      \"8972\": \"SIRGAS-CON DGF00P01\",\n      \"8973\": \"SIRGAS-CON DGF01P01\",\n      \"8974\": \"SIRGAS-CON DGF01P02\",\n      \"8975\": \"SIRGAS-CON DGF02P01\",\n      \"8976\": \"SIRGAS-CON DGF04P01\",\n      \"8977\": \"SIRGAS-CON DGF05P01\",\n      \"8978\": \"SIRGAS-CON DGF06P01\",\n      \"8979\": \"SIRGAS-CON DGF07P01\",\n      \"8980\": \"SIRGAS-CON DGF08P01\",\n      \"8981\": \"SIRGAS-CON SIR09P01\",\n      \"8982\": \"SIRGAS-CON SIR10P01\",\n      \"8983\": \"SIRGAS-CON SIR11P01\",\n      \"8984\": \"SIRGAS-CON SIR13P01\",\n      \"8985\": \"SIRGAS-CON SIR14P01\",\n      \"8986\": \"SIRGAS-CON SIR15P01\",\n      \"8987\": \"SIRGAS-CON SIR17P01\",\n      \"5393\": \"SIRGAS_ES2007.8\",\n      \"5464\": \"Sibun Gorge 1922\"\n    },\n    \"County Systems\": {\n      Minnesota: {\n        \"104700\": \"NAD 1983 HARN Adj MN Anoka\",\n        \"104701\": \"NAD 1983 HARN Adj MN Becker\",\n        \"104702\": \"NAD 1983 HARN Adj MN Beltrami North\",\n        \"104703\": \"NAD 1983 HARN Adj MN Beltrami South\",\n        \"104704\": \"NAD 1983 HARN Adj MN Benton\",\n        \"104705\": \"NAD 1983 HARN Adj MN Big Stone\",\n        \"104706\": \"NAD 1983 HARN Adj MN Blue Earth\",\n        \"104707\": \"NAD 1983 HARN Adj MN Brown\",\n        \"104708\": \"NAD 1983 HARN Adj MN Carlton\",\n        \"104709\": \"NAD 1983 HARN Adj MN Carver\",\n        \"104710\": \"NAD 1983 HARN Adj MN Cass North\",\n        \"104711\": \"NAD 1983 HARN Adj MN Cass South\",\n        \"104712\": \"NAD 1983 HARN Adj MN Chippewa\",\n        \"104713\": \"NAD 1983 HARN Adj MN Chisago\",\n        \"104714\": \"NAD 1983 HARN Adj MN Cook North\",\n        \"104715\": \"NAD 1983 HARN Adj MN Cook South\",\n        \"104716\": \"NAD 1983 HARN Adj MN Cottonwood\",\n        \"104717\": \"NAD 1983 HARN Adj MN Crow Wing\",\n        \"104718\": \"NAD 1983 HARN Adj MN Dakota\",\n        \"104719\": \"NAD 1983 HARN Adj MN Dodge\",\n        \"104720\": \"NAD 1983 HARN Adj MN Douglas\",\n        \"104721\": \"NAD 1983 HARN Adj MN Faribault\",\n        \"104722\": \"NAD 1983 HARN Adj MN Fillmore\",\n        \"104723\": \"NAD 1983 HARN Adj MN Freeborn\",\n        \"104724\": \"NAD 1983 HARN Adj MN Goodhue\",\n        \"104725\": \"NAD 1983 HARN Adj MN Grant\",\n        \"104726\": \"NAD 1983 HARN Adj MN Hennepin\",\n        \"104727\": \"NAD 1983 HARN Adj MN Houston\",\n        \"104728\": \"NAD 1983 HARN Adj MN Isanti\",\n        \"104729\": \"NAD 1983 HARN Adj MN Itasca North\",\n        \"104730\": \"NAD 1983 HARN Adj MN Itasca South\",\n        \"104731\": \"NAD 1983 HARN Adj MN Jackson\",\n        \"104732\": \"NAD 1983 HARN Adj MN Kanabec\",\n        \"104733\": \"NAD 1983 HARN Adj MN Kandiyohi\",\n        \"104734\": \"NAD 1983 HARN Adj MN Kittson\",\n        \"104735\": \"NAD 1983 HARN Adj MN Koochiching\",\n        \"104736\": \"NAD 1983 HARN Adj MN Lac Qui Parle\",\n        \"104737\": \"NAD 1983 HARN Adj MN Lake of the Woods North\",\n        \"104738\": \"NAD 1983 HARN Adj MN Lake of the Woods South\",\n        \"104739\": \"NAD 1983 HARN Adj MN Le Sueur\",\n        \"104740\": \"NAD 1983 HARN Adj MN Lincoln\",\n        \"104741\": \"NAD 1983 HARN Adj MN Lyon\",\n        \"104743\": \"NAD 1983 HARN Adj MN Mahnomen\",\n        \"104744\": \"NAD 1983 HARN Adj MN Marshall\",\n        \"104745\": \"NAD 1983 HARN Adj MN Martin\",\n        \"104742\": \"NAD 1983 HARN Adj MN McLeod\",\n        \"104746\": \"NAD 1983 HARN Adj MN Meeker\",\n        \"104747\": \"NAD 1983 HARN Adj MN Morrison\",\n        \"104748\": \"NAD 1983 HARN Adj MN Mower\",\n        \"104749\": \"NAD 1983 HARN Adj MN Murray\",\n        \"104750\": \"NAD 1983 HARN Adj MN Nicollet\",\n        \"104751\": \"NAD 1983 HARN Adj MN Nobles\",\n        \"104752\": \"NAD 1983 HARN Adj MN Norman\",\n        \"104753\": \"NAD 1983 HARN Adj MN Olmsted\",\n        \"104754\": \"NAD 1983 HARN Adj MN Ottertail\",\n        \"104755\": \"NAD 1983 HARN Adj MN Pennington\",\n        \"104756\": \"NAD 1983 HARN Adj MN Pine\",\n        \"104757\": \"NAD 1983 HARN Adj MN Pipestone\",\n        \"104758\": \"NAD 1983 HARN Adj MN Polk\",\n        \"104759\": \"NAD 1983 HARN Adj MN Pope\",\n        \"104760\": \"NAD 1983 HARN Adj MN Ramsey\",\n        \"104761\": \"NAD 1983 HARN Adj MN Red Lake\",\n        \"104762\": \"NAD 1983 HARN Adj MN Redwood\",\n        \"104763\": \"NAD 1983 HARN Adj MN Renville\",\n        \"104764\": \"NAD 1983 HARN Adj MN Rice\",\n        \"104765\": \"NAD 1983 HARN Adj MN Rock\",\n        \"104766\": \"NAD 1983 HARN Adj MN Roseau\",\n        \"104770\": \"NAD 1983 HARN Adj MN Scott\",\n        \"104771\": \"NAD 1983 HARN Adj MN Sherburne\",\n        \"104772\": \"NAD 1983 HARN Adj MN Sibley\",\n        \"104786\": \"NAD 1983 HARN Adj MN St Louis\",\n        \"104768\": \"NAD 1983 HARN Adj MN St Louis Central\",\n        \"104767\": \"NAD 1983 HARN Adj MN St Louis North\",\n        \"104769\": \"NAD 1983 HARN Adj MN St Louis South\",\n        \"104773\": \"NAD 1983 HARN Adj MN Stearns\",\n        \"104774\": \"NAD 1983 HARN Adj MN Steele\",\n        \"104775\": \"NAD 1983 HARN Adj MN Stevens\",\n        \"104776\": \"NAD 1983 HARN Adj MN Swift\",\n        \"104777\": \"NAD 1983 HARN Adj MN Todd\",\n        \"104778\": \"NAD 1983 HARN Adj MN Traverse\",\n        \"104779\": \"NAD 1983 HARN Adj MN Wabasha\",\n        \"104780\": \"NAD 1983 HARN Adj MN Wadena\",\n        \"104781\": \"NAD 1983 HARN Adj MN Waseca\",\n        \"104782\": \"NAD 1983 HARN Adj MN Watonwan\",\n        \"104783\": \"NAD 1983 HARN Adj MN Winona\",\n        \"104784\": \"NAD 1983 HARN Adj MN Wright\",\n        \"104785\": \"NAD 1983 HARN Adj MN Yellow Medicine\"\n      },\n      Wisconsin: { \"104808\": \"NAD 1983 HARN Adj. Wisconsin Chippewa WCCS\" }\n    },\n    Europe: {\n      \"4901\": \"ATF (Paris)\",\n      \"9384\": \"AbInvA96_2020-IRF\",\n      \"4191\": \"Albanian 1987\",\n      \"4289\": \"Amersfoort\",\n      \"7798\": \"BGS2005\",\n      \"4809\": \"Belge 1950 (Brussels)\",\n      \"4313\": \"Belge 1972\",\n      \"4801\": \"Bern 1898 (Bern)\",\n      \"4306\": \"Bern 1938\",\n      \"6311\": \"CGRS 1993\",\n      \"4149\": \"CH1903\",\n      \"4150\": \"CH1903+\",\n      \"104131\": \"D48\",\n      \"5681\": \"DB_REF\",\n      \"4274\": \"Datum 73\",\n      \"104105\": \"Datum Lisboa Bessel\",\n      \"104106\": \"Datum Lisboa Hayford\",\n      \"4316\": \"Dealul Piscului 1933 (Romania)\",\n      \"4317\": \"Dealul Piscului 1970 (Romania)\",\n      \"4314\": \"Deutsches Hauptdreiecksnetz\",\n      \"9758\": \"ECML14_NB-IRF\",\n      \"9739\": \"EOS21-IRF\",\n      \"9059\": \"ETRF 1989\",\n      \"9067\": \"ETRF2000\",\n      \"9702\": \"ETRF2000-PL\",\n      \"9068\": \"ETRF2005\",\n      \"9069\": \"ETRF2014\",\n      \"9060\": \"ETRF90\",\n      \"9061\": \"ETRF91\",\n      \"9062\": \"ETRF92\",\n      \"9063\": \"ETRF93\",\n      \"9064\": \"ETRF94\",\n      \"9065\": \"ETRF96\",\n      \"9066\": \"ETRF97\",\n      \"4258\": \"ETRS 1989\",\n      \"104129\": \"EUREF FIN\",\n      \"9763\": \"EWR2-IRF\",\n      \"104101\": \"Estonia 1937\",\n      \"4133\": \"Estonia 1992\",\n      \"4180\": \"Estonia 1997\",\n      \"4668\": \"European 1979\",\n      \"4230\": \"European Datum 1950\",\n      \"4231\": \"European Datum 1987\",\n      \"4741\": \"FD 1954\",\n      \"5593\": \"FEH2010\",\n      \"9453\": \"GBK19-IRF\",\n      \"4121\": \"GGRS 1987\",\n      \"7683\": \"GSK-2011\",\n      \"4120\": \"Greek\",\n      \"4815\": \"Greek (Athens)\",\n      \"8042\": \"Gusterberg (Ferro)\",\n      \"3819\": \"HD1909\",\n      \"9299\": \"HS2-IRF\",\n      \"4761\": \"HTRS96\",\n      \"104102\": \"Hermannskogel\",\n      \"4658\": \"Hjorsey 1955\",\n      \"4237\": \"Hungarian Datum 1972\",\n      \"4173\": \"IRENET95\",\n      \"4659\": \"ISN 1993\",\n      \"5324\": \"ISN 2004\",\n      \"8086\": \"ISN2016\",\n      \"9140\": \"KOSOVAREF01\",\n      \"4123\": \"Kartastokoordinaattijarjestelma\",\n      \"4661\": \"LKS 1992\",\n      \"4669\": \"LKS 1994\",\n      \"9547\": \"LTF2004(G)\",\n      \"4207\": \"Lisbon\",\n      \"4803\": \"Lisbon (Lisbon)\",\n      \"4666\": \"Lisbon 1890\",\n      \"4904\": \"Lisbon 1890 (Lisbon)\",\n      \"4181\": \"Luxembourg 1930\",\n      \"4805\": \"MGI (Ferro)\",\n      \"3906\": \"MGI 1901\",\n      \"9372\": \"MML07-IRF\",\n      \"4023\": \"MOLDREF99\",\n      \"4903\": \"Madrid 1870 (Madrid)\",\n      \"4312\": \"Militar-Geographische Institut\",\n      \"4265\": \"Monte Mario\",\n      \"4806\": \"Monte Mario (Rome)\",\n      \"4273\": \"NGO 1948\",\n      \"4817\": \"NGO 1948 (Oslo)\",\n      \"4807\": \"NTF (Paris)\",\n      \"4902\": \"Nord de Guerre (Paris)\",\n      \"4275\": \"Nouvelle Triangulation Francaise\",\n      \"4279\": \"OS (SN) 1980\",\n      \"4277\": \"OSGB 1936\",\n      \"4278\": \"OSGB 1970 (SN)\",\n      \"4188\": \"OSNI 1952\",\n      \"4746\": \"PD 83\",\n      \"4740\": \"PZ 1990\",\n      \"104017\": \"PZ-90.02\",\n      \"104018\": \"PZ-90.11\",\n      \"4284\": \"Pulkovo 1942\",\n      \"4179\": \"Pulkovo 1942 Adj 1958\",\n      \"4178\": \"Pulkovo 1942 Adj 1983\",\n      \"4200\": \"Pulkovo 1995\",\n      \"4745\": \"RD 83\",\n      \"6706\": \"RDN2008\",\n      \"4171\": \"RGF 1993\",\n      \"7084\": \"RGF 1993 (lon-lat)\",\n      \"4124\": \"RT 1990\",\n      \"4308\": \"RT38\",\n      \"4814\": \"RT38 (Stockholm)\",\n      \"4215\": \"Reseau National Belge 1950\",\n      \"4657\": \"Reykjavik 1900\",\n      \"104127\": \"Roma 1940\",\n      \"37257\": \"S-42 Hungary\",\n      \"4156\": \"S-JTSK\",\n      \"4818\": \"S-JTSK (Ferro)\",\n      \"8351\": \"S-JTSK [JTSK03]\",\n      \"5228\": \"S-JTSK-05\",\n      \"5229\": \"S-JTSK-05 (Ferro)\",\n      \"8685\": \"SRB_ETRS89\",\n      \"4075\": \"SREF98\",\n      \"4619\": \"SWEREF99\",\n      \"4765\": \"Slovenia 1996\",\n      \"8043\": \"St. Stephen (Ferro)\",\n      \"4151\": \"Swiss TRF 1995\",\n      \"4299\": \"TM65\",\n      \"4300\": \"TM75\",\n      \"9364\": \"TPEN11-IRF\",\n      \"5252\": \"TUREF\",\n      \"5561\": \"Ukraine 2000\",\n      \"104050\": \"Xrail84\",\n      \"4753\": \"fk89\"\n    },\n    \"Indian Ocean\": {\n      \"4708\": \"Anna 1 Astro 1965\",\n      \"4475\": \"Cadastre 1997\",\n      \"4632\": \"Combani 1950\",\n      \"104028\": \"GDM2008\",\n      \"4684\": \"Gan 1970\",\n      \"4646\": \"Grand Comoros\",\n      \"4724\": \"ISTS 073 Astro 1969\",\n      \"4698\": \"Kerguelen Island 1949\",\n      \"4256\": \"Mahe 1971\",\n      \"4470\": \"RGM04\",\n      \"7039\": \"RGM04 (lon-lat)\",\n      \"4627\": \"RGR 1992\",\n      \"7037\": \"RGR 1992 (lon-lat)\",\n      \"7073\": \"RGTAAF07\",\n      \"7133\": \"RGTAAF07 (lon-lat)\",\n      \"4626\": \"Reunion 1947\",\n      \"6892\": \"South East Island 1943\"\n    },\n    \"North America\": {\n      \"4196\": \"Ammassalik 1958\",\n      \"4212\": \"Barbados 1938\",\n      \"4216\": \"Bermuda 1957\",\n      \"4762\": \"Bermuda 2000\",\n      \"4747\": \"Greenland 1996\",\n      \"4660\": \"Helle 1954\",\n      \"4483\": \"Mexican Datum of 1993\",\n      \"6365\": \"Mexico ITRF2008\",\n      \"4194\": \"Qornoq 1927\",\n      \"5489\": \"RGAF09\",\n      \"4638\": \"Saint Pierre et Miquelon 1950\",\n      \"4195\": \"Scoresbysund 1952\",\n      Canada: {\n        \"4122\": \"Average Terrestrial System 1977\",\n        \"4267\": \"NAD 1927\",\n        \"4609\": \"NAD 1927 (CGQ77)\",\n        \"4608\": \"NAD 1927 (Definition 1976)\",\n        \"4269\": \"NAD 1983\",\n        \"4617\": \"NAD 1983 (CSRS)\",\n        \"8237\": \"NAD 1983 (CSRS) v2\",\n        \"8240\": \"NAD 1983 (CSRS) v3\",\n        \"8246\": \"NAD 1983 (CSRS) v4\",\n        \"8249\": \"NAD 1983 (CSRS) v5\",\n        \"8252\": \"NAD 1983 (CSRS) v6\",\n        \"8255\": \"NAD 1983 (CSRS) v7\",\n        \"8232\": \"NAD 1983 (CSRS96)\"\n      },\n      \"USA and territories\": {\n        \"37260\": \"Alaskan Islands\",\n        \"4169\": \"American Samoa 1962\",\n        \"104024\": \"California SRS Epoch 2017.50 (NAD83)\",\n        \"4717\": \"Cape Canaveral\",\n        \"4675\": \"Guam 1963\",\n        \"4267\": \"NAD 1927\",\n        \"4269\": \"NAD 1983\",\n        \"6318\": \"NAD 1983 (2011)\",\n        \"6783\": \"NAD 1983 (CORS96)\",\n        \"8860\": \"NAD 1983 (FBN)\",\n        \"8545\": \"NAD 1983 (HARN Corrected)\",\n        \"4759\": \"NAD 1983 (NSRS2007)\",\n        \"4152\": \"NAD 1983 HARN\",\n        \"4135\": \"Old Hawaiian\",\n        \"104138\": \"Old Hawaiian Intl 1924\",\n        \"4139\": \"Puerto Rico\",\n        \"4138\": \"St. George Island\",\n        \"4136\": \"St. Lawrence Island\",\n        \"4137\": \"St. Paul Island\"\n      }\n    },\n    Oceans: { \"Pacific Ocean\": { \"8900\": \"RGWF96\", \"8902\": \"RGWF96 (lon-lat)\" } },\n    \"Pacific Ocean\": {\n      \"37260\": \"Alaskan Islands\",\n      \"4169\": \"American Samoa 1962\",\n      \"4709\": \"Astro Beacon E 1945\",\n      \"4711\": \"Astronomical Station 1952\",\n      \"104112\": \"Bab South\",\n      \"4714\": \"Bellevue IGN\",\n      \"4716\": \"Canton Astro 1966\",\n      \"4672\": \"Chatham Island Astro 1971\",\n      \"37218\": \"DOS 1968\",\n      \"4719\": \"Easter Island 1967\",\n      \"4688\": \"Fatu Iva 1972\",\n      \"4721\": \"Fiji 1956\",\n      \"4720\": \"Fiji 1986\",\n      \"37221\": \"GUX 1 Astro\",\n      \"4675\": \"Guam 1963\",\n      \"4641\": \"IGN53 Mare\",\n      \"4633\": \"IGN56 Lifou\",\n      \"4689\": \"IGN63 Hiva Oa\",\n      \"4662\": \"IGN72 Grande Terre\",\n      \"4630\": \"IGN72 Nuku Hiva\",\n      \"4725\": \"Johnston Island 1961\",\n      \"4735\": \"Kusaie Astro 1951\",\n      \"4639\": \"MOP78\",\n      \"104113\": \"Majuro\",\n      \"4692\": \"Maupiti 1983\",\n      \"4727\": \"Midway Astro 1961\",\n      \"4691\": \"Moorea 1987\",\n      \"6325\": \"NAD 1983 (MA11)\",\n      \"6322\": \"NAD 1983 (PA11)\",\n      \"9072\": \"NAD 1983 MARP00\",\n      \"9075\": \"NAD 1983 PACP00\",\n      \"4644\": \"NEA74 Noumea\",\n      \"4135\": \"Old Hawaiian\",\n      \"104138\": \"Old Hawaiian Intl 1924\",\n      \"4763\": \"Pitcairn 2006\",\n      \"4729\": \"Pitcairn Astro 1967\",\n      \"104109\": \"Pohnpei\",\n      \"4645\": \"RGNC 1991\",\n      \"4749\": \"RGNC 1991-93\",\n      \"4687\": \"RGPF\",\n      \"4643\": \"ST71 Belep\",\n      \"4642\": \"ST84 Ile des Pins\",\n      \"4750\": \"ST87 Ouvea\",\n      \"4730\": \"Santo DOS 1965\",\n      \"4718\": \"Solomon 1968\",\n      \"5886\": \"TGD2005\",\n      \"4629\": \"Tahaa 1954\",\n      \"4628\": \"Tahiti\",\n      \"4690\": \"Tahiti 1979\",\n      \"4707\": \"Tern Island Astro 1961\",\n      \"4748\": \"Vanua Levu 1915\",\n      \"4752\": \"Viti Levu 1912\",\n      \"4731\": \"Viti Levu 1916\",\n      \"4733\": \"Wake Island Astro 1952\",\n      \"4732\": \"Wake-Eniwetok 1960\"\n    },\n    \"Solar System\": {\n      \"104975\": \"Sun 2015\",\n      \"Asteroid Belt\": { \"104972\": \"1 Ceres 2015\", \"104973\": \"4 Vesta 2015\" },\n      Earth: { \"104903\": \"Moon 2000\" },\n      Jupiter: {\n        \"104909\": \"Adrastea 2000\",\n        \"104910\": \"Amalthea 2000\",\n        \"104911\": \"Ananke 2000\",\n        \"104912\": \"Callisto 2000\",\n        \"104913\": \"Carme 2000\",\n        \"104914\": \"Elara 2000\",\n        \"104915\": \"Europa 2000\",\n        \"104916\": \"Ganymede 2000\",\n        \"104917\": \"Himalia 2000\",\n        \"104918\": \"Io 2000\",\n        \"104908\": \"Jupiter 2000\",\n        \"104919\": \"Leda 2000\",\n        \"104920\": \"Lysithea 2000\",\n        \"104921\": \"Metis 2000\",\n        \"104922\": \"Pasiphae 2000\",\n        \"104923\": \"Sinope 2000\",\n        \"104924\": \"Thebe 2000\"\n      },\n      Mars: {\n        \"104906\": \"Deimos 2000\",\n        \"104904\": \"Mars 1979\",\n        \"104905\": \"Mars 2000\",\n        \"104971\": \"Mars 2000 (Sphere)\",\n        \"104907\": \"Phobos 2000\"\n      },\n      Mercury: { \"104900\": \"Mercury 2000\", \"104974\": \"Mercury 2015\" },\n      Neptune: {\n        \"104961\": \"Despina 2000\",\n        \"104962\": \"Galatea 2000\",\n        \"104963\": \"Larissa 2000\",\n        \"104964\": \"Naiad 2000\",\n        \"104960\": \"Neptune 2000\",\n        \"104965\": \"Nereid 2000\",\n        \"104966\": \"Proteus 2000\",\n        \"104967\": \"Thalassa 2000\",\n        \"104968\": \"Triton 2000\"\n      },\n      Pluto: { \"104970\": \"Charon 2000\", \"104969\": \"Pluto 2000\" },\n      Saturn: {\n        \"104926\": \"Atlas 2000\",\n        \"104927\": \"Calypso 2000\",\n        \"104928\": \"Dione 2000\",\n        \"104929\": \"Enceladus 2000\",\n        \"104930\": \"Epimetheus 2000\",\n        \"104931\": \"Helene 2000\",\n        \"104932\": \"Hyperion 2000\",\n        \"104933\": \"Iapetus 2000\",\n        \"104934\": \"Janus 2000\",\n        \"104935\": \"Mimas 2000\",\n        \"104936\": \"Pan 2000\",\n        \"104937\": \"Pandora 2000\",\n        \"104938\": \"Phoebe 2000\",\n        \"104939\": \"Prometheus 2000\",\n        \"104940\": \"Rhea 2000\",\n        \"104925\": \"Saturn 2000\",\n        \"104941\": \"Telesto 2000\",\n        \"104942\": \"Tethys 2000\",\n        \"104943\": \"Titan 2000\"\n      },\n      Uranus: {\n        \"104945\": \"Ariel 2000\",\n        \"104946\": \"Belinda 2000\",\n        \"104947\": \"Bianca 2000\",\n        \"104948\": \"Cordelia 2000\",\n        \"104949\": \"Cressida 2000\",\n        \"104950\": \"Desdemona 2000\",\n        \"104951\": \"Juliet 2000\",\n        \"104952\": \"Miranda 2000\",\n        \"104953\": \"Oberon 2000\",\n        \"104954\": \"Ophelia 2000\",\n        \"104955\": \"Portia 2000\",\n        \"104956\": \"Puck 2000\",\n        \"104957\": \"Rosalind 2000\",\n        \"104958\": \"Titania 2000\",\n        \"104959\": \"Umbriel 2000\",\n        \"104944\": \"Uranus 2000\"\n      },\n      Venus: { \"104901\": \"Venus 1985\", \"104902\": \"Venus 2000\" }\n    },\n    \"South America\": {\n      \"4208\": \"Aratu\",\n      \"4218\": \"Bogota\",\n      \"4802\": \"Bogota (Bogota)\",\n      \"4623\": \"CSG 1967\",\n      \"4221\": \"Campo Inchauspe\",\n      \"4160\": \"Chos Malal 1914\",\n      \"4224\": \"Chua\",\n      \"4225\": \"Corrego Alegre\",\n      \"5524\": \"Corrego Alegre 1961\",\n      \"4235\": \"Guyane Francaise\",\n      \"4254\": \"Hito XVIII 1963\",\n      \"4247\": \"La Canoa\",\n      \"4249\": \"Lake\",\n      \"4288\": \"Loma Quintana\",\n      \"4686\": \"MAGNA\",\n      \"5354\": \"MARGEN\",\n      \"9251\": \"MMN\",\n      \"9253\": \"MMS\",\n      \"4157\": \"Mount Dillon\",\n      \"4158\": \"Naparima 1955\",\n      \"4271\": \"Naparima 1972\",\n      \"4172\": \"POSGAR\",\n      \"4694\": \"POSGAR 1994\",\n      \"4190\": \"POSGAR 1998\",\n      \"5340\": \"POSGAR 2007\",\n      \"4161\": \"Pampa del Castillo\",\n      \"5373\": \"Peru96\",\n      \"4248\": \"Provisional South American Datum 1956\",\n      \"9696\": \"REDGEOMIN\",\n      \"4189\": \"REGVEN\",\n      \"4624\": \"RGFG 1995\",\n      \"7041\": \"RGFG95 (lon-lat)\",\n      \"5527\": \"SAD 1969 (96)\",\n      \"4170\": \"SIRGAS\",\n      \"4674\": \"SIRGAS 2000\",\n      \"8972\": \"SIRGAS-CON DGF00P01\",\n      \"8973\": \"SIRGAS-CON DGF01P01\",\n      \"8974\": \"SIRGAS-CON DGF01P02\",\n      \"8975\": \"SIRGAS-CON DGF02P01\",\n      \"8976\": \"SIRGAS-CON DGF04P01\",\n      \"8977\": \"SIRGAS-CON DGF05P01\",\n      \"8978\": \"SIRGAS-CON DGF06P01\",\n      \"8979\": \"SIRGAS-CON DGF07P01\",\n      \"8980\": \"SIRGAS-CON DGF08P01\",\n      \"8981\": \"SIRGAS-CON SIR09P01\",\n      \"8982\": \"SIRGAS-CON SIR10P01\",\n      \"8983\": \"SIRGAS-CON SIR11P01\",\n      \"8984\": \"SIRGAS-CON SIR13P01\",\n      \"8985\": \"SIRGAS-CON SIR14P01\",\n      \"8986\": \"SIRGAS-CON SIR15P01\",\n      \"8987\": \"SIRGAS-CON SIR17P01\",\n      \"9184\": \"SIRGAS-Chile\",\n      \"8949\": \"SIRGAS-Chile 2010\",\n      \"9148\": \"SIRGAS-Chile 2013\",\n      \"9153\": \"SIRGAS-Chile 2016\",\n      \"5381\": \"SIRGAS-ROU98\",\n      \"4292\": \"Sapper Hill 1943\",\n      \"4618\": \"South American Datum 1969\",\n      \"9248\": \"Tapi Aike\",\n      \"4302\": \"Trinidad 1903\",\n      \"4309\": \"Yacare\",\n      \"4311\": \"Zanderij\"\n    },\n    \"Spheroid-based\": {\n      \"4001\": \"Airy 1830\",\n      \"4002\": \"Airy modified\",\n      \"4003\": \"Australian National\",\n      \"4035\": \"Authalic sphere\",\n      \"37008\": \"Authalic sphere (ARCINFO)\",\n      \"4122\": \"Average Terrestrial System 1977\",\n      \"4004\": \"Bessel 1841\",\n      \"4006\": \"Bessel Namibia\",\n      \"4005\": \"Bessel modified\",\n      \"4007\": \"Clarke 1858\",\n      \"4008\": \"Clarke 1866\",\n      \"4052\": \"Clarke 1866 Authalic Sphere\",\n      \"4009\": \"Clarke 1866 Michigan\",\n      \"4034\": \"Clarke 1880\",\n      \"4013\": \"Clarke 1880 (Arc)\",\n      \"4010\": \"Clarke 1880 (Benoit)\",\n      \"4011\": \"Clarke 1880 (IGN)\",\n      \"4012\": \"Clarke 1880 (RGS)\",\n      \"4014\": \"Clarke 1880 (SGA)\",\n      \"4015\": \"Everest (definition 1937)\",\n      \"4044\": \"Everest (definition 1962)\",\n      \"4016\": \"Everest (definition 1967)\",\n      \"4045\": \"Everest (definition 1975)\",\n      \"4042\": \"Everest 1830\",\n      \"4018\": \"Everest Modified\",\n      \"37006\": \"Everest modified 1969\",\n      \"37002\": \"Fischer 1960\",\n      \"37003\": \"Fischer 1968\",\n      \"37004\": \"Fischer modified\",\n      \"4031\": \"GEM gravity potential model\",\n      \"4036\": \"GRS 1967\",\n      \"4019\": \"GRS 1980\",\n      \"4047\": \"GRS 1980 Authalic Sphere\",\n      \"104047\": \"GRS 1980 Mean Radius Sphere\",\n      \"4020\": \"Helmert 1906\",\n      \"37005\": \"Hough 1960\",\n      \"4054\": \"Hughes 1980\",\n      \"4021\": \"Indonesian National\",\n      \"4022\": \"International 1924\",\n      \"4053\": \"International 1924 Authalic Sphere\",\n      \"4024\": \"Krasovsky 1940\",\n      \"4032\": \"OSU 1986 geoidal model\",\n      \"4033\": \"OSU 1991 geoidal model\",\n      \"4027\": \"Plessis 1817\",\n      \"104128\": \"Sphere EMEP\",\n      \"4028\": \"Struve 1860\",\n      \"4025\": \"Transit precise ephemeris\",\n      \"4760\": \"WGS 1966\",\n      \"37007\": \"Walbeck\",\n      \"4029\": \"War Office\"\n    },\n    World: {\n      \"9006\": \"IGS00\",\n      \"9012\": \"IGS05\",\n      \"9014\": \"IGS08\",\n      \"9019\": \"IGS14\",\n      \"9003\": \"IGS97\",\n      \"9009\": \"IGb00\",\n      \"9017\": \"IGb08\",\n      \"9380\": \"IGb14\",\n      \"8988\": \"ITRF 1988\",\n      \"8989\": \"ITRF 1989\",\n      \"8990\": \"ITRF 1990\",\n      \"8991\": \"ITRF 1991\",\n      \"8992\": \"ITRF 1992\",\n      \"8993\": \"ITRF 1993\",\n      \"8994\": \"ITRF 1994\",\n      \"8995\": \"ITRF 1996\",\n      \"8996\": \"ITRF 1997\",\n      \"8997\": \"ITRF 2000\",\n      \"8998\": \"ITRF 2005\",\n      \"8999\": \"ITRF 2008\",\n      \"9000\": \"ITRF 2014\",\n      \"4276\": \"NSWC 9Z-2\",\n      \"104017\": \"PZ-90.02\",\n      \"104018\": \"PZ-90.11\",\n      \"4760\": \"WGS 1966\",\n      \"4322\": \"WGS 1972\",\n      \"4324\": \"WGS 1972 TBE\",\n      \"4326\": \"WGS 1984\",\n      \"9055\": \"WGS 1984 (G1150)\",\n      \"9056\": \"WGS 1984 (G1674)\",\n      \"9057\": \"WGS 1984 (G1762)\",\n      \"9053\": \"WGS 1984 (G730)\",\n      \"9054\": \"WGS 1984 (G873)\",\n      \"8888\": \"WGS 1984 (Transit)\"\n    }\n  },\n  \"Projected Coordinate Systems\": {\n    \"ARC (equal arc-second)\": {\n      \"102421\": \"WGS84 ARC System Zone 01\",\n      \"102422\": \"WGS84 ARC System Zone 02\",\n      \"102423\": \"WGS84 ARC System Zone 03\",\n      \"102424\": \"WGS84 ARC System Zone 04\",\n      \"102425\": \"WGS84 ARC System Zone 05\",\n      \"102426\": \"WGS84 ARC System Zone 06\",\n      \"102427\": \"WGS84 ARC System Zone 07\",\n      \"102428\": \"WGS84 ARC System Zone 08\",\n      \"102429\": \"WGS84 ARC System Zone 09\",\n      \"102430\": \"WGS84 ARC System Zone 10\",\n      \"102431\": \"WGS84 ARC System Zone 11\",\n      \"102432\": \"WGS84 ARC System Zone 12\",\n      \"102433\": \"WGS84 ARC System Zone 13\",\n      \"102434\": \"WGS84 ARC System Zone 14\",\n      \"102435\": \"WGS84 ARC System Zone 15\",\n      \"102436\": \"WGS84 ARC System Zone 16\",\n      \"102437\": \"WGS84 ARC System Zone 17\",\n      \"102438\": \"WGS84 ARC System Zone 18\"\n    },\n    Continental: {\n      Africa: {\n        \"102022\": \"Africa Albers Equal Area Conic\",\n        \"102023\": \"Africa Equidistant Conic\",\n        \"102024\": \"Africa Lambert Conformal Conic\",\n        \"102011\": \"Africa Sinusoidal\"\n      },\n      Asia: {\n        \"102012\": \"Asia Lambert Conformal Conic\",\n        \"102025\": \"Asia North Albers Equal Area Conic\",\n        \"102026\": \"Asia North Equidistant Conic\",\n        \"102027\": \"Asia North Lambert Conformal Conic\",\n        \"102028\": \"Asia South Albers Equal Area Conic\",\n        \"102029\": \"Asia South Equidistant Conic\",\n        \"102030\": \"Asia South Lambert Conformal Conic\"\n      },\n      Europe: {\n        \"5643\": \"ED 1950 SPBA LCC\",\n        \"102069\": \"EMEP 150 Kilometer Grid\",\n        \"102068\": \"EMEP 50 Kilometer Grid\",\n        \"3035\": \"ETRS 1989 LAEA\",\n        \"3034\": \"ETRS 1989 LCC\",\n        \"102013\": \"Europe Albers Equal Area Conic\",\n        \"102031\": \"Europe Equidistant Conic\",\n        \"102014\": \"Europe Lambert Conformal Conic\"\n      },\n      \"North America\": {\n        \"3338\": \"Alaska Albers Equal Area Conic\",\n        \"102001\": \"Canada Albers Equal Area Conic\",\n        \"102002\": \"Canada Lambert Conformal Conic\",\n        \"102007\": \"Hawaii Albers Equal Area Conic\",\n        \"5069\": \"NAD 1927 Contiguous USA Albers\",\n        \"6350\": \"NAD 1983 (2011) Contiguous USA Albers\",\n        \"3979\": \"NAD 1983 CSRS Canada Atlas Lambert\",\n        \"3978\": \"NAD 1983 Canada Atlas Lambert\",\n        \"5070\": \"NAD 1983 Contiguous USA Albers\",\n        \"3174\": \"NAD 1983 Great Lakes Basin Albers\",\n        \"3175\": \"NAD 1983 Great Lakes and St. Lawrence Albers\",\n        \"5071\": \"NAD 1983 HARN Contiguous USA Albers\",\n        \"5072\": \"NAD 1983 NSRS2007 Contiguous USA Albers\",\n        \"102008\": \"North America Albers Equal Area Conic\",\n        \"102010\": \"North America Equidistant Conic\",\n        \"102009\": \"North America Lambert Conformal Conic\",\n        \"102589\": \"Panhandle Energy Albers\",\n        \"2163\": \"US National Atlas Equal Area\",\n        \"102003\": \"USA Contiguous Albers Equal Area Conic\",\n        \"102039\": \"USA Contiguous Albers Equal Area Conic USGS\",\n        \"102005\": \"USA Contiguous Equidistant Conic\",\n        \"102004\": \"USA Contiguous Lambert Conformal Conic\",\n        \"102215\": \"WGS 1984 Canada Atlas LCC\"\n      },\n      \"South America\": {\n        \"102033\": \"South America Albers Equal Area Conic\",\n        \"102032\": \"South America Equidistant Conic\",\n        \"102015\": \"South America Lambert Conformal Conic\"\n      }\n    },\n    \"County Systems\": {\n      \"102460\": \"HJAIA_AirportGrid_09March2010\",\n      \"102391\": \"NAD 1983 (2011) Fargo Ground Coordinate System (US Feet)\",\n      \"8065\": \"NAD 1983 (2011) PCCS zone 1 (Feet)\",\n      \"8066\": \"NAD 1983 (2011) PCCS zone 2 (Feet)\",\n      \"8067\": \"NAD 1983 (2011) PCCS zone 3 (Feet)\",\n      \"8068\": \"NAD 1983 (2011) PCCS zone 4 (Feet)\",\n      \"7131\": \"NAD 1983 (2011) San Francisco CS13 (Meters)\",\n      \"7132\": \"NAD 1983 (2011) San Francisco CS13 (US Feet)\",\n      \"102389\": \"NAD 1983 Fargo Ground Coordinate System (US Feet)\",\n      \"102390\": \"NAD 1983 HARN Fargo Ground Coordinate System (US Feet)\",\n      \"102459\": \"NAD 1983 Idaho - Ada County\",\n      \"102705\": \"NAD 1983 Nebraska - Lancaster County (US Feet)\",\n      Illinois: {\n        \"102901\": \"NAD 1983 (2011) ICS Aurora (US Feet)\",\n        \"102929\": \"NAD 1983 (2011) ICS Belleville (US Feet)\",\n        \"102914\": \"NAD 1983 (2011) ICS Bloomington (US Feet)\",\n        \"102932\": \"NAD 1983 (2011) ICS Carbondale (US Feet)\",\n        \"102925\": \"NAD 1983 (2011) ICS Carlinville (US Feet)\",\n        \"102916\": \"NAD 1983 (2011) ICS Champaign (US Feet)\",\n        \"102924\": \"NAD 1983 (2011) ICS Charleston (US Feet)\",\n        \"102903\": \"NAD 1983 (2011) ICS Chicago (US Feet)\",\n        \"102917\": \"NAD 1983 (2011) ICS Decatur (US Feet)\",\n        \"102928\": \"NAD 1983 (2011) ICS Effingham (US Feet)\",\n        \"102909\": \"NAD 1983 (2011) ICS Eureka (US Feet)\",\n        \"102902\": \"NAD 1983 (2011) ICS Freeport (US Feet)\",\n        \"102915\": \"NAD 1983 (2011) ICS Galesburg (US Feet)\",\n        \"102922\": \"NAD 1983 (2011) ICS Jacksonville (US Feet)\",\n        \"102927\": \"NAD 1983 (2011) ICS Jerseyville (US Feet)\",\n        \"102908\": \"NAD 1983 (2011) ICS Joliet (US Feet)\",\n        \"102919\": \"NAD 1983 (2011) ICS Lincoln (US Feet)\",\n        \"102920\": \"NAD 1983 (2011) ICS Macomb (US Feet)\",\n        \"102933\": \"NAD 1983 (2011) ICS Metropolis (US Feet)\",\n        \"102905\": \"NAD 1983 (2011) ICS Moline (US Feet)\",\n        \"102911\": \"NAD 1983 (2011) ICS Monmouth (US Feet)\",\n        \"102931\": \"NAD 1983 (2011) ICS Mount Vernon (US Feet)\",\n        \"102930\": \"NAD 1983 (2011) ICS Olney (US Feet)\",\n        \"102906\": \"NAD 1983 (2011) ICS Ottawa (US Feet)\",\n        \"102913\": \"NAD 1983 (2011) ICS Peoria (US Feet)\",\n        \"102910\": \"NAD 1983 (2011) ICS Pontiac (US Feet)\",\n        \"102918\": \"NAD 1983 (2011) ICS Quincy (US Feet)\",\n        \"102926\": \"NAD 1983 (2011) ICS Robinson (US Feet)\",\n        \"102904\": \"NAD 1983 (2011) ICS Rockford (US Feet)\",\n        \"102921\": \"NAD 1983 (2011) ICS Springfield (US Feet)\",\n        \"102907\": \"NAD 1983 (2011) ICS Sterling (US Feet)\",\n        \"102923\": \"NAD 1983 (2011) ICS Taylorville (US Feet)\",\n        \"102912\": \"NAD 1983 (2011) ICS Watseka (US Feet)\"\n      },\n      Indiana: {\n        Meters: {\n          \"7257\": \"NAD 1983 (2011) InGCS Adams (m)\",\n          \"7259\": \"NAD 1983 (2011) InGCS Allen (m)\",\n          \"7261\": \"NAD 1983 (2011) InGCS Bartholomew (m)\",\n          \"7263\": \"NAD 1983 (2011) InGCS Benton (m)\",\n          \"7265\": \"NAD 1983 (2011) InGCS Blackford-Delaware (m)\",\n          \"7267\": \"NAD 1983 (2011) InGCS Boone-Hendricks (m)\",\n          \"7269\": \"NAD 1983 (2011) InGCS Brown (m)\",\n          \"7271\": \"NAD 1983 (2011) InGCS Carroll (m)\",\n          \"7273\": \"NAD 1983 (2011) InGCS Cass (m)\",\n          \"7275\": \"NAD 1983 (2011) InGCS Clark-Floyd-Scott (m)\",\n          \"7277\": \"NAD 1983 (2011) InGCS Clay (m)\",\n          \"7279\": \"NAD 1983 (2011) InGCS Clinton (m)\",\n          \"7281\": \"NAD 1983 (2011) InGCS Crawford-Lawrence-Orange (m)\",\n          \"7283\": \"NAD 1983 (2011) InGCS Daviess-Greene (m)\",\n          \"7289\": \"NAD 1983 (2011) InGCS DeKalb (m)\",\n          \"7285\": \"NAD 1983 (2011) InGCS Dearborn-Ohio-Switzerland (m)\",\n          \"7287\": \"NAD 1983 (2011) InGCS Decatur-Rush (m)\",\n          \"7291\": \"NAD 1983 (2011) InGCS Dubois-Martin (m)\",\n          \"7293\": \"NAD 1983 (2011) InGCS Elkhart-Kosciusko-Wabash (m)\",\n          \"7295\": \"NAD 1983 (2011) InGCS Fayette-Franklin-Union (m)\",\n          \"7297\": \"NAD 1983 (2011) InGCS Fountain-Warren (m)\",\n          \"7299\": \"NAD 1983 (2011) InGCS Fulton-Marshall-St. Joseph (m)\",\n          \"7301\": \"NAD 1983 (2011) InGCS Gibson (m)\",\n          \"7303\": \"NAD 1983 (2011) InGCS Grant (m)\",\n          \"7305\": \"NAD 1983 (2011) InGCS Hamilton-Tipton (m)\",\n          \"7307\": \"NAD 1983 (2011) InGCS Hancock-Madison (m)\",\n          \"7309\": \"NAD 1983 (2011) InGCS Harrison-Washington (m)\",\n          \"7311\": \"NAD 1983 (2011) InGCS Henry (m)\",\n          \"7313\": \"NAD 1983 (2011) InGCS Howard-Miami (m)\",\n          \"7315\": \"NAD 1983 (2011) InGCS Huntington-Whitley (m)\",\n          \"7317\": \"NAD 1983 (2011) InGCS Jackson (m)\",\n          \"7319\": \"NAD 1983 (2011) InGCS Jasper-Porter (m)\",\n          \"7321\": \"NAD 1983 (2011) InGCS Jay (m)\",\n          \"7323\": \"NAD 1983 (2011) InGCS Jefferson (m)\",\n          \"7325\": \"NAD 1983 (2011) InGCS Jennings (m)\",\n          \"7327\": \"NAD 1983 (2011) InGCS Johnson-Marion (m)\",\n          \"7329\": \"NAD 1983 (2011) InGCS Knox (m)\",\n          \"7331\": \"NAD 1983 (2011) InGCS LaGrange-Noble (m)\",\n          \"7335\": \"NAD 1983 (2011) InGCS LaPorte-Pulaski-Starke (m)\",\n          \"7333\": \"NAD 1983 (2011) InGCS Lake-Newton (m)\",\n          \"7337\": \"NAD 1983 (2011) InGCS Monroe-Morgan (m)\",\n          \"7339\": \"NAD 1983 (2011) InGCS Montgomery-Putnam (m)\",\n          \"7341\": \"NAD 1983 (2011) InGCS Owen (m)\",\n          \"7343\": \"NAD 1983 (2011) InGCS Parke-Vermillion (m)\",\n          \"7345\": \"NAD 1983 (2011) InGCS Perry (m)\",\n          \"7347\": \"NAD 1983 (2011) InGCS Pike-Warrick (m)\",\n          \"7349\": \"NAD 1983 (2011) InGCS Posey (m)\",\n          \"7351\": \"NAD 1983 (2011) InGCS Randolph-Wayne (m)\",\n          \"7353\": \"NAD 1983 (2011) InGCS Ripley (m)\",\n          \"7355\": \"NAD 1983 (2011) InGCS Shelby (m)\",\n          \"7357\": \"NAD 1983 (2011) InGCS Spencer (m)\",\n          \"7359\": \"NAD 1983 (2011) InGCS Steuben (m)\",\n          \"7361\": \"NAD 1983 (2011) InGCS Sullivan (m)\",\n          \"7363\": \"NAD 1983 (2011) InGCS Tippecanoe-White (m)\",\n          \"7365\": \"NAD 1983 (2011) InGCS Vanderburgh (m)\",\n          \"7367\": \"NAD 1983 (2011) InGCS Vigo (m)\",\n          \"7369\": \"NAD 1983 (2011) InGCS Wells (m)\"\n        },\n        \"US Feet\": {\n          \"7258\": \"NAD 1983 (2011) InGCS Adams (ftUS)\",\n          \"7260\": \"NAD 1983 (2011) InGCS Allen (ftUS)\",\n          \"7262\": \"NAD 1983 (2011) InGCS Bartholomew (ftUS)\",\n          \"7264\": \"NAD 1983 (2011) InGCS Benton (ftUS)\",\n          \"7266\": \"NAD 1983 (2011) InGCS Blackford-Delaware (ftUS)\",\n          \"7268\": \"NAD 1983 (2011) InGCS Boone-Hendricks (ftUS)\",\n          \"7270\": \"NAD 1983 (2011) InGCS Brown (ftUS)\",\n          \"7272\": \"NAD 1983 (2011) InGCS Carroll (ftUS)\",\n          \"7274\": \"NAD 1983 (2011) InGCS Cass (ftUS)\",\n          \"7276\": \"NAD 1983 (2011) InGCS Clark-Floyd-Scott (ftUS)\",\n          \"7278\": \"NAD 1983 (2011) InGCS Clay (ftUS)\",\n          \"7280\": \"NAD 1983 (2011) InGCS Clinton (ftUS)\",\n          \"7282\": \"NAD 1983 (2011) InGCS Crawford-Lawrence-Orange (ftUS)\",\n          \"7284\": \"NAD 1983 (2011) InGCS Daviess-Greene (ftUS)\",\n          \"7290\": \"NAD 1983 (2011) InGCS DeKalb (ftUS)\",\n          \"7286\": \"NAD 1983 (2011) InGCS Dearborn-Ohio-Switzerland (ftUS)\",\n          \"7288\": \"NAD 1983 (2011) InGCS Decatur-Rush (ftUS)\",\n          \"7292\": \"NAD 1983 (2011) InGCS Dubois-Martin (ftUS)\",\n          \"7294\": \"NAD 1983 (2011) InGCS Elkhart-Kosciusko-Wabash (ftUS)\",\n          \"7296\": \"NAD 1983 (2011) InGCS Fayette-Franklin-Union (ftUS)\",\n          \"7298\": \"NAD 1983 (2011) InGCS Fountain-Warren (ftUS)\",\n          \"7300\": \"NAD 1983 (2011) InGCS Fulton-Marshall-St. Joseph (ftUS)\",\n          \"7302\": \"NAD 1983 (2011) InGCS Gibson (ftUS)\",\n          \"7304\": \"NAD 1983 (2011) InGCS Grant (ftUS)\",\n          \"7306\": \"NAD 1983 (2011) InGCS Hamilton-Tipton (ftUS)\",\n          \"7308\": \"NAD 1983 (2011) InGCS Hancock-Madison (ftUS)\",\n          \"7310\": \"NAD 1983 (2011) InGCS Harrison-Washington (ftUS)\",\n          \"7312\": \"NAD 1983 (2011) InGCS Henry (ftUS)\",\n          \"7314\": \"NAD 1983 (2011) InGCS Howard-Miami (ftUS)\",\n          \"7316\": \"NAD 1983 (2011) InGCS Huntington-Whitley (ftUS)\",\n          \"7318\": \"NAD 1983 (2011) InGCS Jackson (ftUS)\",\n          \"7320\": \"NAD 1983 (2011) InGCS Jasper-Porter (ftUS)\",\n          \"7322\": \"NAD 1983 (2011) InGCS Jay (ftUS)\",\n          \"7324\": \"NAD 1983 (2011) InGCS Jefferson (ftUS)\",\n          \"7326\": \"NAD 1983 (2011) InGCS Jennings (ftUS)\",\n          \"7328\": \"NAD 1983 (2011) InGCS Johnson-Marion (ftUS)\",\n          \"7330\": \"NAD 1983 (2011) InGCS Knox (ftUS)\",\n          \"7332\": \"NAD 1983 (2011) InGCS LaGrange-Noble (ftUS)\",\n          \"7336\": \"NAD 1983 (2011) InGCS LaPorte-Pulaski-Starke (ftUS)\",\n          \"7334\": \"NAD 1983 (2011) InGCS Lake-Newton (ftUS)\",\n          \"7338\": \"NAD 1983 (2011) InGCS Monroe-Morgan (ftUS)\",\n          \"7340\": \"NAD 1983 (2011) InGCS Montgomery-Putnam (ftUS)\",\n          \"7342\": \"NAD 1983 (2011) InGCS Owen (ftUS)\",\n          \"7344\": \"NAD 1983 (2011) InGCS Parke-Vermillion (ftUS)\",\n          \"7346\": \"NAD 1983 (2011) InGCS Perry (ftUS)\",\n          \"7348\": \"NAD 1983 (2011) InGCS Pike-Warrick (ftUS)\",\n          \"7350\": \"NAD 1983 (2011) InGCS Posey (ftUS)\",\n          \"7352\": \"NAD 1983 (2011) InGCS Randolph-Wayne (ftUS)\",\n          \"7354\": \"NAD 1983 (2011) InGCS Ripley (ftUS)\",\n          \"7356\": \"NAD 1983 (2011) InGCS Shelby (ftUS)\",\n          \"7358\": \"NAD 1983 (2011) InGCS Spencer (ftUS)\",\n          \"7360\": \"NAD 1983 (2011) InGCS Steuben (ftUS)\",\n          \"7362\": \"NAD 1983 (2011) InGCS Sullivan (ftUS)\",\n          \"7364\": \"NAD 1983 (2011) InGCS Tippecanoe-White (ftUS)\",\n          \"7366\": \"NAD 1983 (2011) InGCS Vanderburgh (ftUS)\",\n          \"7368\": \"NAD 1983 (2011) InGCS Vigo (ftUS)\",\n          \"7370\": \"NAD 1983 (2011) InGCS Wells (ftUS)\"\n        }\n      },\n      Iowa: {\n        \"7057\": \"NAD 1983 (2011) IaRCS zone 1\",\n        \"7066\": \"NAD 1983 (2011) IaRCS zone 10\",\n        \"7067\": \"NAD 1983 (2011) IaRCS zone 11\",\n        \"7068\": \"NAD 1983 (2011) IaRCS zone 12\",\n        \"7069\": \"NAD 1983 (2011) IaRCS zone 13\",\n        \"7070\": \"NAD 1983 (2011) IaRCS zone 14\",\n        \"7058\": \"NAD 1983 (2011) IaRCS zone 2\",\n        \"7059\": \"NAD 1983 (2011) IaRCS zone 3\",\n        \"7060\": \"NAD 1983 (2011) IaRCS zone 4\",\n        \"7061\": \"NAD 1983 (2011) IaRCS zone 5\",\n        \"7062\": \"NAD 1983 (2011) IaRCS zone 6\",\n        \"7063\": \"NAD 1983 (2011) IaRCS zone 7\",\n        \"7064\": \"NAD 1983 (2011) IaRCS zone 8\",\n        \"7065\": \"NAD 1983 (2011) IaRCS zone 9\"\n      },\n      Kansas: {\n        \"8518\": \"NAD 1983 (2011) KS RCS Zone 1\",\n        \"8527\": \"NAD 1983 (2011) KS RCS Zone 10\",\n        \"8528\": \"NAD 1983 (2011) KS RCS Zone 11\",\n        \"8529\": \"NAD 1983 (2011) KS RCS Zone 12\",\n        \"8531\": \"NAD 1983 (2011) KS RCS Zone 13\",\n        \"8533\": \"NAD 1983 (2011) KS RCS Zone 14\",\n        \"8534\": \"NAD 1983 (2011) KS RCS Zone 15\",\n        \"8535\": \"NAD 1983 (2011) KS RCS Zone 16\",\n        \"8536\": \"NAD 1983 (2011) KS RCS Zone 17\",\n        \"8538\": \"NAD 1983 (2011) KS RCS Zone 18\",\n        \"8539\": \"NAD 1983 (2011) KS RCS Zone 19\",\n        \"8519\": \"NAD 1983 (2011) KS RCS Zone 2\",\n        \"8540\": \"NAD 1983 (2011) KS RCS Zone 20\",\n        \"8520\": \"NAD 1983 (2011) KS RCS Zone 3\",\n        \"8521\": \"NAD 1983 (2011) KS RCS Zone 4\",\n        \"8522\": \"NAD 1983 (2011) KS RCS Zone 5\",\n        \"8523\": \"NAD 1983 (2011) KS RCS Zone 6\",\n        \"8524\": \"NAD 1983 (2011) KS RCS Zone 7\",\n        \"8525\": \"NAD 1983 (2011) KS RCS Zone 8\",\n        \"8526\": \"NAD 1983 (2011) KS RCS Zone 9\"\n      },\n      \"Las Vegas\": {\n        \"8383\": \"NAD 1983 (2011) NCRS Las Vegas (Meters)\",\n        \"8384\": \"NAD 1983 (2011) NCRS Las Vegas (US Feet)\",\n        \"8385\": \"NAD 1983 (2011) NCRS Las Vegas high (Meters)\",\n        \"8387\": \"NAD 1983 (2011) NCRS Las Vegas high (US Feet)\",\n        \"8379\": \"NAD 1983 NCRS Las Vegas (Meters)\",\n        \"8380\": \"NAD 1983 NCRS Las Vegas (US Feet)\",\n        \"8381\": \"NAD 1983 NCRS Las Vegas high (Meters)\",\n        \"8382\": \"NAD 1983 NCRS Las Vegas high (US Feet)\"\n      },\n      Minnesota: {\n        Meters: {\n          \"103600\": \"NAD 1983 HARN Adj MN Aitkin (Meters)\",\n          \"103608\": \"NAD 1983 HARN Adj MN Anoka (Meters)\",\n          \"103609\": \"NAD 1983 HARN Adj MN Becker (Meters)\",\n          \"103610\": \"NAD 1983 HARN Adj MN Beltrami North (Meters)\",\n          \"103611\": \"NAD 1983 HARN Adj MN Beltrami South (Meters)\",\n          \"103612\": \"NAD 1983 HARN Adj MN Benton (Meters)\",\n          \"103613\": \"NAD 1983 HARN Adj MN Big Stone (Meters)\",\n          \"103614\": \"NAD 1983 HARN Adj MN Blue Earth (Meters)\",\n          \"103615\": \"NAD 1983 HARN Adj MN Brown (Meters)\",\n          \"103616\": \"NAD 1983 HARN Adj MN Carlton (Meters)\",\n          \"103617\": \"NAD 1983 HARN Adj MN Carver (Meters)\",\n          \"103618\": \"NAD 1983 HARN Adj MN Cass North (Meters)\",\n          \"103619\": \"NAD 1983 HARN Adj MN Cass South (Meters)\",\n          \"103620\": \"NAD 1983 HARN Adj MN Chippewa (Meters)\",\n          \"103621\": \"NAD 1983 HARN Adj MN Chisago (Meters)\",\n          \"103601\": \"NAD 1983 HARN Adj MN Clay (Meters)\",\n          \"103602\": \"NAD 1983 HARN Adj MN Clearwater (Meters)\",\n          \"103622\": \"NAD 1983 HARN Adj MN Cook North (Meters)\",\n          \"103623\": \"NAD 1983 HARN Adj MN Cook South (Meters)\",\n          \"103624\": \"NAD 1983 HARN Adj MN Cottonwood (Meters)\",\n          \"103625\": \"NAD 1983 HARN Adj MN Crow Wing (Meters)\",\n          \"103626\": \"NAD 1983 HARN Adj MN Dakota (Meters)\",\n          \"103627\": \"NAD 1983 HARN Adj MN Dodge (Meters)\",\n          \"103628\": \"NAD 1983 HARN Adj MN Douglas (Meters)\",\n          \"103629\": \"NAD 1983 HARN Adj MN Faribault (Meters)\",\n          \"103630\": \"NAD 1983 HARN Adj MN Fillmore (Meters)\",\n          \"103631\": \"NAD 1983 HARN Adj MN Freeborn (Meters)\",\n          \"103632\": \"NAD 1983 HARN Adj MN Goodhue (Meters)\",\n          \"103633\": \"NAD 1983 HARN Adj MN Grant (Meters)\",\n          \"103634\": \"NAD 1983 HARN Adj MN Hennepin (Meters)\",\n          \"103635\": \"NAD 1983 HARN Adj MN Houston (Meters)\",\n          \"103603\": \"NAD 1983 HARN Adj MN Hubbard (Meters)\",\n          \"103636\": \"NAD 1983 HARN Adj MN Isanti (Meters)\",\n          \"103637\": \"NAD 1983 HARN Adj MN Itasca North (Meters)\",\n          \"103638\": \"NAD 1983 HARN Adj MN Itasca South (Meters)\",\n          \"103639\": \"NAD 1983 HARN Adj MN Jackson (Meters)\",\n          \"103640\": \"NAD 1983 HARN Adj MN Kanabec (Meters)\",\n          \"103641\": \"NAD 1983 HARN Adj MN Kandiyohi (Meters)\",\n          \"103642\": \"NAD 1983 HARN Adj MN Kittson (Meters)\",\n          \"103643\": \"NAD 1983 HARN Adj MN Koochiching (Meters)\",\n          \"103644\": \"NAD 1983 HARN Adj MN Lac Qui Parle (Meters)\",\n          \"103604\": \"NAD 1983 HARN Adj MN Lake (Meters)\",\n          \"103645\": \"NAD 1983 HARN Adj MN Lake of the Woods North (Meters)\",\n          \"103646\": \"NAD 1983 HARN Adj MN Lake of the Woods South (Meters)\",\n          \"103647\": \"NAD 1983 HARN Adj MN Le Sueur (Meters)\",\n          \"103648\": \"NAD 1983 HARN Adj MN Lincoln (Meters)\",\n          \"103649\": \"NAD 1983 HARN Adj MN Lyon (Meters)\",\n          \"103651\": \"NAD 1983 HARN Adj MN Mahnomen (Meters)\",\n          \"103652\": \"NAD 1983 HARN Adj MN Marshall (Meters)\",\n          \"103653\": \"NAD 1983 HARN Adj MN Martin (Meters)\",\n          \"103650\": \"NAD 1983 HARN Adj MN McLeod (Meters)\",\n          \"103654\": \"NAD 1983 HARN Adj MN Meeker (Meters)\",\n          \"103605\": \"NAD 1983 HARN Adj MN Mille Lacs (Meters)\",\n          \"103655\": \"NAD 1983 HARN Adj MN Morrison (Meters)\",\n          \"103656\": \"NAD 1983 HARN Adj MN Mower (Meters)\",\n          \"103657\": \"NAD 1983 HARN Adj MN Murray (Meters)\",\n          \"103658\": \"NAD 1983 HARN Adj MN Nicollet (Meters)\",\n          \"103659\": \"NAD 1983 HARN Adj MN Nobles (Meters)\",\n          \"103660\": \"NAD 1983 HARN Adj MN Norman (Meters)\",\n          \"103661\": \"NAD 1983 HARN Adj MN Olmsted (Meters)\",\n          \"103662\": \"NAD 1983 HARN Adj MN Ottertail (Meters)\",\n          \"103663\": \"NAD 1983 HARN Adj MN Pennington (Meters)\",\n          \"103664\": \"NAD 1983 HARN Adj MN Pine (Meters)\",\n          \"103665\": \"NAD 1983 HARN Adj MN Pipestone (Meters)\",\n          \"103666\": \"NAD 1983 HARN Adj MN Polk (Meters)\",\n          \"103667\": \"NAD 1983 HARN Adj MN Pope (Meters)\",\n          \"103668\": \"NAD 1983 HARN Adj MN Ramsey (Meters)\",\n          \"103669\": \"NAD 1983 HARN Adj MN Red Lake (Meters)\",\n          \"103670\": \"NAD 1983 HARN Adj MN Redwood (Meters)\",\n          \"103671\": \"NAD 1983 HARN Adj MN Renville (Meters)\",\n          \"103672\": \"NAD 1983 HARN Adj MN Rice (Meters)\",\n          \"103673\": \"NAD 1983 HARN Adj MN Rock (Meters)\",\n          \"103674\": \"NAD 1983 HARN Adj MN Roseau (Meters)\",\n          \"103678\": \"NAD 1983 HARN Adj MN Scott (Meters)\",\n          \"103679\": \"NAD 1983 HARN Adj MN Sherburne (Meters)\",\n          \"103680\": \"NAD 1983 HARN Adj MN Sibley (Meters)\",\n          \"103694\": \"NAD 1983 HARN Adj MN St. Louis (Meters)\",\n          \"103676\": \"NAD 1983 HARN Adj MN St. Louis Central (Meters)\",\n          \"103675\": \"NAD 1983 HARN Adj MN St. Louis North (Meters)\",\n          \"103677\": \"NAD 1983 HARN Adj MN St. Louis South (Meters)\",\n          \"103681\": \"NAD 1983 HARN Adj MN Stearns (Meters)\",\n          \"103682\": \"NAD 1983 HARN Adj MN Steele (Meters)\",\n          \"103683\": \"NAD 1983 HARN Adj MN Stevens (Meters)\",\n          \"103684\": \"NAD 1983 HARN Adj MN Swift (Meters)\",\n          \"103685\": \"NAD 1983 HARN Adj MN Todd (Meters)\",\n          \"103686\": \"NAD 1983 HARN Adj MN Traverse (Meters)\",\n          \"103687\": \"NAD 1983 HARN Adj MN Wabasha (Meters)\",\n          \"103688\": \"NAD 1983 HARN Adj MN Wadena (Meters)\",\n          \"103689\": \"NAD 1983 HARN Adj MN Waseca (Meters)\",\n          \"103606\": \"NAD 1983 HARN Adj MN Washington (Meters)\",\n          \"103690\": \"NAD 1983 HARN Adj MN Watonwan (Meters)\",\n          \"103607\": \"NAD 1983 HARN Adj MN Wilkin (Meters)\",\n          \"103691\": \"NAD 1983 HARN Adj MN Winona (Meters)\",\n          \"103692\": \"NAD 1983 HARN Adj MN Wright (Meters)\",\n          \"103693\": \"NAD 1983 HARN Adj MN Yellow Medicine (Meters)\"\n        },\n        \"US Feet\": {\n          \"103700\": \"NAD 1983 HARN Adj MN Aitkin (US Feet)\",\n          \"103708\": \"NAD 1983 HARN Adj MN Anoka (US Feet)\",\n          \"103709\": \"NAD 1983 HARN Adj MN Becker (US Feet)\",\n          \"103710\": \"NAD 1983 HARN Adj MN Beltrami North (US Feet)\",\n          \"103711\": \"NAD 1983 HARN Adj MN Beltrami South (US Feet)\",\n          \"103712\": \"NAD 1983 HARN Adj MN Benton (US Feet)\",\n          \"103713\": \"NAD 1983 HARN Adj MN Big Stone (US Feet)\",\n          \"103714\": \"NAD 1983 HARN Adj MN Blue Earth (US Feet)\",\n          \"103715\": \"NAD 1983 HARN Adj MN Brown (US Feet)\",\n          \"103716\": \"NAD 1983 HARN Adj MN Carlton (US Feet)\",\n          \"103717\": \"NAD 1983 HARN Adj MN Carver (US Feet)\",\n          \"103718\": \"NAD 1983 HARN Adj MN Cass North (US Feet)\",\n          \"103719\": \"NAD 1983 HARN Adj MN Cass South (US Feet)\",\n          \"103720\": \"NAD 1983 HARN Adj MN Chippewa (US Feet)\",\n          \"103721\": \"NAD 1983 HARN Adj MN Chisago (US Feet)\",\n          \"103701\": \"NAD 1983 HARN Adj MN Clay (US Feet)\",\n          \"103702\": \"NAD 1983 HARN Adj MN Clearwater (US Feet)\",\n          \"103722\": \"NAD 1983 HARN Adj MN Cook North (US Feet)\",\n          \"103723\": \"NAD 1983 HARN Adj MN Cook South (US Feet)\",\n          \"103724\": \"NAD 1983 HARN Adj MN Cottonwood (US Feet)\",\n          \"103725\": \"NAD 1983 HARN Adj MN Crow Wing (US Feet)\",\n          \"103726\": \"NAD 1983 HARN Adj MN Dakota (US Feet)\",\n          \"103727\": \"NAD 1983 HARN Adj MN Dodge (US Feet)\",\n          \"103728\": \"NAD 1983 HARN Adj MN Douglas (US Feet)\",\n          \"103729\": \"NAD 1983 HARN Adj MN Faribault (US Feet)\",\n          \"103730\": \"NAD 1983 HARN Adj MN Fillmore (US Feet)\",\n          \"103731\": \"NAD 1983 HARN Adj MN Freeborn (US Feet)\",\n          \"103732\": \"NAD 1983 HARN Adj MN Goodhue (US Feet)\",\n          \"103733\": \"NAD 1983 HARN Adj MN Grant (US Feet)\",\n          \"103734\": \"NAD 1983 HARN Adj MN Hennepin (US Feet)\",\n          \"103735\": \"NAD 1983 HARN Adj MN Houston (US Feet)\",\n          \"103703\": \"NAD 1983 HARN Adj MN Hubbard (US Feet)\",\n          \"103736\": \"NAD 1983 HARN Adj MN Isanti (US Feet)\",\n          \"103737\": \"NAD 1983 HARN Adj MN Itasca North (US Feet)\",\n          \"103738\": \"NAD 1983 HARN Adj MN Itasca South (US Feet)\",\n          \"103739\": \"NAD 1983 HARN Adj MN Jackson (US Feet)\",\n          \"103740\": \"NAD 1983 HARN Adj MN Kanabec (US Feet)\",\n          \"103741\": \"NAD 1983 HARN Adj MN Kandiyohi (US Feet)\",\n          \"103742\": \"NAD 1983 HARN Adj MN Kittson (US Feet)\",\n          \"103743\": \"NAD 1983 HARN Adj MN Koochiching (US Feet)\",\n          \"103744\": \"NAD 1983 HARN Adj MN Lac Qui Parle (US Feet)\",\n          \"103704\": \"NAD 1983 HARN Adj MN Lake (US Feet)\",\n          \"103745\": \"NAD 1983 HARN Adj MN Lake of the Woods North (US Feet)\",\n          \"103746\": \"NAD 1983 HARN Adj MN Lake of the Woods South (US Feet)\",\n          \"103747\": \"NAD 1983 HARN Adj MN Le Sueur (US Feet)\",\n          \"103748\": \"NAD 1983 HARN Adj MN Lincoln (US Feet)\",\n          \"103749\": \"NAD 1983 HARN Adj MN Lyon (US Feet)\",\n          \"103751\": \"NAD 1983 HARN Adj MN Mahnomen (US Feet)\",\n          \"103752\": \"NAD 1983 HARN Adj MN Marshall (US Feet)\",\n          \"103753\": \"NAD 1983 HARN Adj MN Martin (US Feet)\",\n          \"103750\": \"NAD 1983 HARN Adj MN McLeod (US Feet)\",\n          \"103754\": \"NAD 1983 HARN Adj MN Meeker (US Feet)\",\n          \"103705\": \"NAD 1983 HARN Adj MN Mille Lacs (US Feet)\",\n          \"103755\": \"NAD 1983 HARN Adj MN Morrison (US Feet)\",\n          \"103756\": \"NAD 1983 HARN Adj MN Mower (US Feet)\",\n          \"103757\": \"NAD 1983 HARN Adj MN Murray (US Feet)\",\n          \"103758\": \"NAD 1983 HARN Adj MN Nicollet (US Feet)\",\n          \"103759\": \"NAD 1983 HARN Adj MN Nobles (US Feet)\",\n          \"103760\": \"NAD 1983 HARN Adj MN Norman (US Feet)\",\n          \"103761\": \"NAD 1983 HARN Adj MN Olmsted (US Feet)\",\n          \"103762\": \"NAD 1983 HARN Adj MN Ottertail (US Feet)\",\n          \"103763\": \"NAD 1983 HARN Adj MN Pennington (US Feet)\",\n          \"103764\": \"NAD 1983 HARN Adj MN Pine (US Feet)\",\n          \"103765\": \"NAD 1983 HARN Adj MN Pipestone (US Feet)\",\n          \"103766\": \"NAD 1983 HARN Adj MN Polk (US Feet)\",\n          \"103767\": \"NAD 1983 HARN Adj MN Pope (US Feet)\",\n          \"103768\": \"NAD 1983 HARN Adj MN Ramsey (US Feet)\",\n          \"103769\": \"NAD 1983 HARN Adj MN Red Lake (US Feet)\",\n          \"103770\": \"NAD 1983 HARN Adj MN Redwood (US Feet)\",\n          \"103771\": \"NAD 1983 HARN Adj MN Renville (US Feet)\",\n          \"103772\": \"NAD 1983 HARN Adj MN Rice (US Feet)\",\n          \"103773\": \"NAD 1983 HARN Adj MN Rock (US Feet)\",\n          \"103774\": \"NAD 1983 HARN Adj MN Roseau (US Feet)\",\n          \"103778\": \"NAD 1983 HARN Adj MN Scott (US Feet)\",\n          \"103779\": \"NAD 1983 HARN Adj MN Sherburne (US Feet)\",\n          \"103780\": \"NAD 1983 HARN Adj MN Sibley (US Feet)\",\n          \"103695\": \"NAD 1983 HARN Adj MN St. Louis (US Feet)\",\n          \"103776\": \"NAD 1983 HARN Adj MN St. Louis Central (US Feet)\",\n          \"103775\": \"NAD 1983 HARN Adj MN St. Louis North (US Feet)\",\n          \"103777\": \"NAD 1983 HARN Adj MN St. Louis South (US Feet)\",\n          \"103781\": \"NAD 1983 HARN Adj MN Stearns (US Feet)\",\n          \"103782\": \"NAD 1983 HARN Adj MN Steele (US Feet)\",\n          \"103783\": \"NAD 1983 HARN Adj MN Stevens (US Feet)\",\n          \"103784\": \"NAD 1983 HARN Adj MN Swift (US Feet)\",\n          \"103785\": \"NAD 1983 HARN Adj MN Todd (US Feet)\",\n          \"103786\": \"NAD 1983 HARN Adj MN Traverse (US Feet)\",\n          \"103787\": \"NAD 1983 HARN Adj MN Wabasha (US Feet)\",\n          \"103788\": \"NAD 1983 HARN Adj MN Wadena (US Feet)\",\n          \"103789\": \"NAD 1983 HARN Adj MN Waseca (US Feet)\",\n          \"103706\": \"NAD 1983 HARN Adj MN Washington (US Feet)\",\n          \"103790\": \"NAD 1983 HARN Adj MN Watonwan (US Feet)\",\n          \"103707\": \"NAD 1983 HARN Adj MN Wilkin (US Feet)\",\n          \"103791\": \"NAD 1983 HARN Adj MN Winona (US Feet)\",\n          \"103792\": \"NAD 1983 HARN Adj MN Wright (US Feet)\",\n          \"103793\": \"NAD 1983 HARN Adj MN Yellow Medicine (US Feet)\"\n        }\n      },\n      Wisconsin: {\n        \"103946\": \"NAD 1983 HARN Adj. Wisconsin Chippewa WCCS (US foot)\",\n        \"103846\": \"NAD 1983 HARN Adj. Wisconsin Chippewa WCCS (meters)\"\n      },\n      \"Wisconsin CRS\": {\n        Meters: {\n          \"103300\": \"NAD 1983 HARN Wisconsin CRS Adams (Meters)\",\n          \"8225\": \"NAD 1983 HARN Wisconsin CRS Adams and Juneau (Meters)\",\n          \"8222\": \"NAD 1983 HARN Wisconsin CRS Ashland (Meters)\",\n          \"8218\": \"NAD 1983 HARN Wisconsin CRS Barron (Meters)\",\n          \"8214\": \"NAD 1983 HARN Wisconsin CRS Bayfield (Meters)\",\n          \"8212\": \"NAD 1983 HARN Wisconsin CRS Brown (Meters)\",\n          \"8209\": \"NAD 1983 HARN Wisconsin CRS Buffalo (Meters)\",\n          \"8207\": \"NAD 1983 HARN Wisconsin CRS Burnett (Meters)\",\n          \"103307\": \"NAD 1983 HARN Wisconsin CRS Calumet (Meters)\",\n          \"8205\": \"NAD 1983 HARN Wisconsin CRS Calumet, Fond du Lac, Outagamie and Winnebago (m)\",\n          \"8203\": \"NAD 1983 HARN Wisconsin CRS Chippewa (Meters)\",\n          \"8201\": \"NAD 1983 HARN Wisconsin CRS Clark (Meters)\",\n          \"8198\": \"NAD 1983 HARN Wisconsin CRS Columbia (Meters)\",\n          \"8196\": \"NAD 1983 HARN Wisconsin CRS Crawford (Meters)\",\n          \"8191\": \"NAD 1983 HARN Wisconsin CRS Dane (Meters)\",\n          \"103313\": \"NAD 1983 HARN Wisconsin CRS Dodge (Meters)\",\n          \"8187\": \"NAD 1983 HARN Wisconsin CRS Dodge and Jefferson (Meters)\",\n          \"8184\": \"NAD 1983 HARN Wisconsin CRS Door (Meters)\",\n          \"8181\": \"NAD 1983 HARN Wisconsin CRS Douglas (Meters)\",\n          \"8179\": \"NAD 1983 HARN Wisconsin CRS Dunn (Meters)\",\n          \"8092\": \"NAD 1983 HARN Wisconsin CRS Eau Claire (Meters)\",\n          \"8090\": \"NAD 1983 HARN Wisconsin CRS Florence (Meters)\",\n          \"103319\": \"NAD 1983 HARN Wisconsin CRS Fond du Lac (Meters)\",\n          \"8173\": \"NAD 1983 HARN Wisconsin CRS Forest (Meters)\",\n          \"8171\": \"NAD 1983 HARN Wisconsin CRS Grant (Meters)\",\n          \"103322\": \"NAD 1983 HARN Wisconsin CRS Green (Meters)\",\n          \"103323\": \"NAD 1983 HARN Wisconsin CRS Green Lake (Meters)\",\n          \"8167\": \"NAD 1983 HARN Wisconsin CRS Green Lake and Marquette (Meters)\",\n          \"8169\": \"NAD 1983 HARN Wisconsin CRS Green and Lafayette (Meters)\",\n          \"8165\": \"NAD 1983 HARN Wisconsin CRS Iowa (Meters)\",\n          \"8163\": \"NAD 1983 HARN Wisconsin CRS Iron (Meters)\",\n          \"8161\": \"NAD 1983 HARN Wisconsin CRS Jackson (Meters)\",\n          \"103327\": \"NAD 1983 HARN Wisconsin CRS Jefferson (Meters)\",\n          \"103328\": \"NAD 1983 HARN Wisconsin CRS Juneau (Meters)\",\n          \"103329\": \"NAD 1983 HARN Wisconsin CRS Kenosha (Meters)\",\n          \"8159\": \"NAD 1983 HARN Wisconsin CRS Kenosha, Milwaukee, Ozaukee and Racine (Meters)\",\n          \"103330\": \"NAD 1983 HARN Wisconsin CRS Kewaunee (Meters)\",\n          \"8157\": \"NAD 1983 HARN Wisconsin CRS Kewaunee, Manitowoc and Sheboygan (Meters)\",\n          \"8155\": \"NAD 1983 HARN Wisconsin CRS La Crosse (Meters)\",\n          \"103332\": \"NAD 1983 HARN Wisconsin CRS Lafayette (Meters)\",\n          \"8153\": \"NAD 1983 HARN Wisconsin CRS Langlade (Meters)\",\n          \"8151\": \"NAD 1983 HARN Wisconsin CRS Lincoln (Meters)\",\n          \"103335\": \"NAD 1983 HARN Wisconsin CRS Manitowoc (Meters)\",\n          \"8149\": \"NAD 1983 HARN Wisconsin CRS Marathon (Meters)\",\n          \"8147\": \"NAD 1983 HARN Wisconsin CRS Marinette (Meters)\",\n          \"103338\": \"NAD 1983 HARN Wisconsin CRS Marquette (Meters)\",\n          \"8145\": \"NAD 1983 HARN Wisconsin CRS Menominee (Meters)\",\n          \"103340\": \"NAD 1983 HARN Wisconsin CRS Milwaukee (Meters)\",\n          \"8143\": \"NAD 1983 HARN Wisconsin CRS Monroe (Meters)\",\n          \"8141\": \"NAD 1983 HARN Wisconsin CRS Oconto (Meters)\",\n          \"8139\": \"NAD 1983 HARN Wisconsin CRS Oneida (Meters)\",\n          \"103344\": \"NAD 1983 HARN Wisconsin CRS Outagamie (Meters)\",\n          \"103345\": \"NAD 1983 HARN Wisconsin CRS Ozaukee (Meters)\",\n          \"103346\": \"NAD 1983 HARN Wisconsin CRS Pepin (Meters)\",\n          \"8137\": \"NAD 1983 HARN Wisconsin CRS Pepin and Pierce (Meters)\",\n          \"103347\": \"NAD 1983 HARN Wisconsin CRS Pierce (Meters)\",\n          \"8135\": \"NAD 1983 HARN Wisconsin CRS Polk (Meters)\",\n          \"8133\": \"NAD 1983 HARN Wisconsin CRS Portage (Meters)\",\n          \"8131\": \"NAD 1983 HARN Wisconsin CRS Price (Meters)\",\n          \"103351\": \"NAD 1983 HARN Wisconsin CRS Racine (Meters)\",\n          \"8129\": \"NAD 1983 HARN Wisconsin CRS Richland (Meters)\",\n          \"8127\": \"NAD 1983 HARN Wisconsin CRS Rock (Meters)\",\n          \"8125\": \"NAD 1983 HARN Wisconsin CRS Rusk (Meters)\",\n          \"8123\": \"NAD 1983 HARN Wisconsin CRS Sauk (Meters)\",\n          \"8121\": \"NAD 1983 HARN Wisconsin CRS Sawyer (Meters)\",\n          \"8119\": \"NAD 1983 HARN Wisconsin CRS Shawano (Meters)\",\n          \"103358\": \"NAD 1983 HARN Wisconsin CRS Sheboygan (Meters)\",\n          \"8117\": \"NAD 1983 HARN Wisconsin CRS St. Croix (Meters)\",\n          \"8115\": \"NAD 1983 HARN Wisconsin CRS Taylor (Meters)\",\n          \"8113\": \"NAD 1983 HARN Wisconsin CRS Trempealeau (Meters)\",\n          \"8111\": \"NAD 1983 HARN Wisconsin CRS Vernon (Meters)\",\n          \"8109\": \"NAD 1983 HARN Wisconsin CRS Vilas (Meters)\",\n          \"8107\": \"NAD 1983 HARN Wisconsin CRS Walworth (Meters)\",\n          \"8105\": \"NAD 1983 HARN Wisconsin CRS Washburn (Meters)\",\n          \"8103\": \"NAD 1983 HARN Wisconsin CRS Washington (Meters)\",\n          \"8101\": \"NAD 1983 HARN Wisconsin CRS Waukesha (Meters)\",\n          \"8099\": \"NAD 1983 HARN Wisconsin CRS Waupaca (Meters)\",\n          \"8097\": \"NAD 1983 HARN Wisconsin CRS Waushara (Meters)\",\n          \"103370\": \"NAD 1983 HARN Wisconsin CRS Winnebago (Meters)\",\n          \"8095\": \"NAD 1983 HARN Wisconsin CRS Wood (Meters)\"\n        },\n        \"NAD 1983 (2011)\": {\n          Meters: {\n            \"7528\": \"NAD 1983 (2011) WISCRS Adams and Juneau (Meters)\",\n            \"7529\": \"NAD 1983 (2011) WISCRS Ashland (Meters)\",\n            \"7530\": \"NAD 1983 (2011) WISCRS Barron (Meters)\",\n            \"7531\": \"NAD 1983 (2011) WISCRS Bayfield (Meters)\",\n            \"7532\": \"NAD 1983 (2011) WISCRS Brown (Meters)\",\n            \"7533\": \"NAD 1983 (2011) WISCRS Buffalo (Meters)\",\n            \"7534\": \"NAD 1983 (2011) WISCRS Burnett (Meters)\",\n            \"7535\": \"NAD 1983 (2011) WISCRS Calumet, Fond du Lac, Outagamie, Winnebago (Meters)\",\n            \"7536\": \"NAD 1983 (2011) WISCRS Chippewa (Meters)\",\n            \"7537\": \"NAD 1983 (2011) WISCRS Clark (Meters)\",\n            \"7538\": \"NAD 1983 (2011) WISCRS Columbia (Meters)\",\n            \"7539\": \"NAD 1983 (2011) WISCRS Crawford (Meters)\",\n            \"7540\": \"NAD 1983 (2011) WISCRS Dane (Meters)\",\n            \"7541\": \"NAD 1983 (2011) WISCRS Dodge and Jefferson (Meters)\",\n            \"7542\": \"NAD 1983 (2011) WISCRS Door (Meters)\",\n            \"7543\": \"NAD 1983 (2011) WISCRS Douglas (Meters)\",\n            \"7544\": \"NAD 1983 (2011) WISCRS Dunn (Meters)\",\n            \"7545\": \"NAD 1983 (2011) WISCRS Eau Claire (Meters)\",\n            \"7546\": \"NAD 1983 (2011) WISCRS Florence (Meters)\",\n            \"7547\": \"NAD 1983 (2011) WISCRS Forest (Meters)\",\n            \"7548\": \"NAD 1983 (2011) WISCRS Grant (Meters)\",\n            \"7550\": \"NAD 1983 (2011) WISCRS Green Lake and Marquette (Meters)\",\n            \"7549\": \"NAD 1983 (2011) WISCRS Green and Lafayette (Meters)\",\n            \"7551\": \"NAD 1983 (2011) WISCRS Iowa (Meters)\",\n            \"7552\": \"NAD 1983 (2011) WISCRS Iron (Meters)\",\n            \"7553\": \"NAD 1983 (2011) WISCRS Jackson (Meters)\",\n            \"7554\": \"NAD 1983 (2011) WISCRS Kenosha, Milwaukee, Ozaukee, Racine (Meters)\",\n            \"7555\": \"NAD 1983 (2011) WISCRS Kewaunee, Manitowoc, Sheboygan (Meters)\",\n            \"7556\": \"NAD 1983 (2011) WISCRS La Crosse (Meters)\",\n            \"7557\": \"NAD 1983 (2011) WISCRS Langlade (Meters)\",\n            \"7558\": \"NAD 1983 (2011) WISCRS Lincoln (Meters)\",\n            \"7559\": \"NAD 1983 (2011) WISCRS Marathon (Meters)\",\n            \"7560\": \"NAD 1983 (2011) WISCRS Marinette (Meters)\",\n            \"7561\": \"NAD 1983 (2011) WISCRS Menominee (Meters)\",\n            \"7562\": \"NAD 1983 (2011) WISCRS Monroe (Meters)\",\n            \"7563\": \"NAD 1983 (2011) WISCRS Oconto (Meters)\",\n            \"7564\": \"NAD 1983 (2011) WISCRS Oneida (Meters)\",\n            \"7565\": \"NAD 1983 (2011) WISCRS Pepin and Pierce (Meters)\",\n            \"7566\": \"NAD 1983 (2011) WISCRS Polk (Meters)\",\n            \"7567\": \"NAD 1983 (2011) WISCRS Portage (Meters)\",\n            \"7568\": \"NAD 1983 (2011) WISCRS Price (Meters)\",\n            \"7569\": \"NAD 1983 (2011) WISCRS Richland (Meters)\",\n            \"7570\": \"NAD 1983 (2011) WISCRS Rock (Meters)\",\n            \"7571\": \"NAD 1983 (2011) WISCRS Rusk (Meters)\",\n            \"7572\": \"NAD 1983 (2011) WISCRS Sauk (Meters)\",\n            \"7573\": \"NAD 1983 (2011) WISCRS Sawyer (Meters)\",\n            \"7574\": \"NAD 1983 (2011) WISCRS Shawano (Meters)\",\n            \"7575\": \"NAD 1983 (2011) WISCRS St. Croix (Meters)\",\n            \"7576\": \"NAD 1983 (2011) WISCRS Taylor (Meters)\",\n            \"7577\": \"NAD 1983 (2011) WISCRS Trempealeau (Meters)\",\n            \"7578\": \"NAD 1983 (2011) WISCRS Vernon (Meters)\",\n            \"7579\": \"NAD 1983 (2011) WISCRS Vilas (Meters)\",\n            \"7580\": \"NAD 1983 (2011) WISCRS Walworth (Meters)\",\n            \"7581\": \"NAD 1983 (2011) WISCRS Washburn (Meters)\",\n            \"7582\": \"NAD 1983 (2011) WISCRS Washington (Meters)\",\n            \"7583\": \"NAD 1983 (2011) WISCRS Waukesha (Meters)\",\n            \"7584\": \"NAD 1983 (2011) WISCRS Waupaca (Meters)\",\n            \"7585\": \"NAD 1983 (2011) WISCRS Waushara (Meters)\",\n            \"7586\": \"NAD 1983 (2011) WISCRS Wood (Meters)\"\n          },\n          \"US Feet\": {\n            \"7587\": \"NAD 1983 (2011) WISCRS Adams and Juneau (US Feet)\",\n            \"7588\": \"NAD 1983 (2011) WISCRS Ashland (US Feet)\",\n            \"7589\": \"NAD 1983 (2011) WISCRS Barron (US Feet)\",\n            \"7590\": \"NAD 1983 (2011) WISCRS Bayfield (US Feet)\",\n            \"7591\": \"NAD 1983 (2011) WISCRS Brown (US Feet)\",\n            \"7592\": \"NAD 1983 (2011) WISCRS Buffalo (US Feet)\",\n            \"7593\": \"NAD 1983 (2011) WISCRS Burnett (US Feet)\",\n            \"7594\": \"NAD 1983 (2011) WISCRS Calumet, Fond du Lac, Outagamie, Winnebago (US Feet)\",\n            \"7595\": \"NAD 1983 (2011) WISCRS Chippewa (US Feet)\",\n            \"7596\": \"NAD 1983 (2011) WISCRS Clark (US Feet)\",\n            \"7597\": \"NAD 1983 (2011) WISCRS Columbia (US Feet)\",\n            \"7598\": \"NAD 1983 (2011) WISCRS Crawford (US Feet)\",\n            \"7599\": \"NAD 1983 (2011) WISCRS Dane (US Feet)\",\n            \"7600\": \"NAD 1983 (2011) WISCRS Dodge and Jefferson (US Feet)\",\n            \"7601\": \"NAD 1983 (2011) WISCRS Door (US Feet)\",\n            \"7602\": \"NAD 1983 (2011) WISCRS Douglas (US Feet)\",\n            \"7603\": \"NAD 1983 (2011) WISCRS Dunn (US Feet)\",\n            \"7604\": \"NAD 1983 (2011) WISCRS Eau Claire (US Feet)\",\n            \"7605\": \"NAD 1983 (2011) WISCRS Florence (US Feet)\",\n            \"7606\": \"NAD 1983 (2011) WISCRS Forest (US Feet)\",\n            \"7607\": \"NAD 1983 (2011) WISCRS Grant (US Feet)\",\n            \"7609\": \"NAD 1983 (2011) WISCRS Green Lake and Marquette (US Feet)\",\n            \"7608\": \"NAD 1983 (2011) WISCRS Green and Lafayette (US Feet)\",\n            \"7610\": \"NAD 1983 (2011) WISCRS Iowa (US Feet)\",\n            \"7611\": \"NAD 1983 (2011) WISCRS Iron (US Feet)\",\n            \"7612\": \"NAD 1983 (2011) WISCRS Jackson (US Feet)\",\n            \"7613\": \"NAD 1983 (2011) WISCRS Kenosha, Milwaukee, Ozaukee, Racine (US Feet)\",\n            \"7614\": \"NAD 1983 (2011) WISCRS Kewaunee, Manitowoc, Sheboygan (US Feet)\",\n            \"7615\": \"NAD 1983 (2011) WISCRS La Crosse (US Feet)\",\n            \"7616\": \"NAD 1983 (2011) WISCRS Langlade (US Feet)\",\n            \"7617\": \"NAD 1983 (2011) WISCRS Lincoln (US Feet)\",\n            \"7618\": \"NAD 1983 (2011) WISCRS Marathon (US Feet)\",\n            \"7619\": \"NAD 1983 (2011) WISCRS Marinette (US Feet)\",\n            \"7620\": \"NAD 1983 (2011) WISCRS Menominee (US Feet)\",\n            \"7621\": \"NAD 1983 (2011) WISCRS Monroe (US Feet)\",\n            \"7622\": \"NAD 1983 (2011) WISCRS Oconto (US Feet)\",\n            \"7623\": \"NAD 1983 (2011) WISCRS Oneida (US Feet)\",\n            \"7624\": \"NAD 1983 (2011) WISCRS Pepin and Pierce (US Feet)\",\n            \"7625\": \"NAD 1983 (2011) WISCRS Polk (US Feet)\",\n            \"7626\": \"NAD 1983 (2011) WISCRS Portage (US Feet)\",\n            \"7627\": \"NAD 1983 (2011) WISCRS Price (US Feet)\",\n            \"7628\": \"NAD 1983 (2011) WISCRS Richland (US Feet)\",\n            \"7629\": \"NAD 1983 (2011) WISCRS Rock (US Feet)\",\n            \"7630\": \"NAD 1983 (2011) WISCRS Rusk (US Feet)\",\n            \"7631\": \"NAD 1983 (2011) WISCRS Sauk (US Feet)\",\n            \"7632\": \"NAD 1983 (2011) WISCRS Sawyer (US Feet)\",\n            \"7633\": \"NAD 1983 (2011) WISCRS Shawano (US Feet)\",\n            \"7634\": \"NAD 1983 (2011) WISCRS St. Croix (US Feet)\",\n            \"7635\": \"NAD 1983 (2011) WISCRS Taylor (US Feet)\",\n            \"7636\": \"NAD 1983 (2011) WISCRS Trempealeau (US Feet)\",\n            \"7637\": \"NAD 1983 (2011) WISCRS Vernon (US Feet)\",\n            \"7638\": \"NAD 1983 (2011) WISCRS Vilas (US Feet)\",\n            \"7639\": \"NAD 1983 (2011) WISCRS Walworth (US Feet)\",\n            \"7640\": \"NAD 1983 (2011) WISCRS Washburn (US Feet)\",\n            \"7641\": \"NAD 1983 (2011) WISCRS Washington (US Feet)\",\n            \"7642\": \"NAD 1983 (2011) WISCRS Waukesha (US Feet)\",\n            \"7643\": \"NAD 1983 (2011) WISCRS Waupaca (US Feet)\",\n            \"7644\": \"NAD 1983 (2011) WISCRS Waushara (US Feet)\",\n            \"7645\": \"NAD 1983 (2011) WISCRS Wood (US Feet)\"\n          }\n        },\n        \"US Feet\": {\n          \"103400\": \"NAD 1983 HARN Wisconsin CRS Adams (US Feet)\",\n          \"8226\": \"NAD 1983 HARN Wisconsin CRS Adams and Juneau (US Feet)\",\n          \"8224\": \"NAD 1983 HARN Wisconsin CRS Ashland (US Feet)\",\n          \"8220\": \"NAD 1983 HARN Wisconsin CRS Barron (US Feet)\",\n          \"8216\": \"NAD 1983 HARN Wisconsin CRS Bayfield (US Feet)\",\n          \"8213\": \"NAD 1983 HARN Wisconsin CRS Brown (US Feet)\",\n          \"8210\": \"NAD 1983 HARN Wisconsin CRS Buffalo (US Feet)\",\n          \"8208\": \"NAD 1983 HARN Wisconsin CRS Burnett (US Feet)\",\n          \"103407\": \"NAD 1983 HARN Wisconsin CRS Calumet (US Feet)\",\n          \"8206\": \"NAD 1983 HARN Wisconsin CRS Calumet, Fond du Lac, Outagamie and Winnebago (ft)\",\n          \"8204\": \"NAD 1983 HARN Wisconsin CRS Chippewa (US Feet)\",\n          \"8202\": \"NAD 1983 HARN Wisconsin CRS Clark (US Feet)\",\n          \"8200\": \"NAD 1983 HARN Wisconsin CRS Columbia (US Feet)\",\n          \"8197\": \"NAD 1983 HARN Wisconsin CRS Crawford (US Feet)\",\n          \"8193\": \"NAD 1983 HARN Wisconsin CRS Dane (US Feet)\",\n          \"103413\": \"NAD 1983 HARN Wisconsin CRS Dodge (US Feet)\",\n          \"8189\": \"NAD 1983 HARN Wisconsin CRS Dodge and Jefferson (US Feet)\",\n          \"8185\": \"NAD 1983 HARN Wisconsin CRS Door (US Feet)\",\n          \"8182\": \"NAD 1983 HARN Wisconsin CRS Douglas (US Feet)\",\n          \"8180\": \"NAD 1983 HARN Wisconsin CRS Dunn (US Feet)\",\n          \"8093\": \"NAD 1983 HARN Wisconsin CRS Eau Claire (US Feet)\",\n          \"8091\": \"NAD 1983 HARN Wisconsin CRS Florence (US Feet)\",\n          \"103419\": \"NAD 1983 HARN Wisconsin CRS Fond du Lac (US Feet)\",\n          \"8177\": \"NAD 1983 HARN Wisconsin CRS Forest (US Feet)\",\n          \"8172\": \"NAD 1983 HARN Wisconsin CRS Grant (US Feet)\",\n          \"103422\": \"NAD 1983 HARN Wisconsin CRS Green (US Feet)\",\n          \"103423\": \"NAD 1983 HARN Wisconsin CRS Green Lake (US Feet)\",\n          \"8168\": \"NAD 1983 HARN Wisconsin CRS Green Lake and Marquette (US Feet)\",\n          \"8170\": \"NAD 1983 HARN Wisconsin CRS Green and Lafayette (US Feet)\",\n          \"8166\": \"NAD 1983 HARN Wisconsin CRS Iowa (US Feet)\",\n          \"8164\": \"NAD 1983 HARN Wisconsin CRS Iron (US Feet)\",\n          \"8162\": \"NAD 1983 HARN Wisconsin CRS Jackson (US Feet)\",\n          \"103427\": \"NAD 1983 HARN Wisconsin CRS Jefferson (US Feet)\",\n          \"103428\": \"NAD 1983 HARN Wisconsin CRS Juneau (US Feet)\",\n          \"103429\": \"NAD 1983 HARN Wisconsin CRS Kenosha (US Feet)\",\n          \"8160\": \"NAD 1983 HARN Wisconsin CRS Kenosha, Milwaukee, Ozaukee and Racine (US Feet)\",\n          \"103430\": \"NAD 1983 HARN Wisconsin CRS Kewaunee (US Feet)\",\n          \"8158\": \"NAD 1983 HARN Wisconsin CRS Kewaunee, Manitowoc and Sheboygan (US Feet)\",\n          \"8156\": \"NAD 1983 HARN Wisconsin CRS La Crosse (US Feet)\",\n          \"103432\": \"NAD 1983 HARN Wisconsin CRS Lafayette (US Feet)\",\n          \"8154\": \"NAD 1983 HARN Wisconsin CRS Langlade (US Feet)\",\n          \"8152\": \"NAD 1983 HARN Wisconsin CRS Lincoln (US Feet)\",\n          \"103435\": \"NAD 1983 HARN Wisconsin CRS Manitowoc (US Feet)\",\n          \"8150\": \"NAD 1983 HARN Wisconsin CRS Marathon (US Feet)\",\n          \"8148\": \"NAD 1983 HARN Wisconsin CRS Marinette (US Feet)\",\n          \"103438\": \"NAD 1983 HARN Wisconsin CRS Marquette (US Feet)\",\n          \"8146\": \"NAD 1983 HARN Wisconsin CRS Menominee (US Feet)\",\n          \"103440\": \"NAD 1983 HARN Wisconsin CRS Milwaukee (US Feet)\",\n          \"8144\": \"NAD 1983 HARN Wisconsin CRS Monroe (US Feet)\",\n          \"8142\": \"NAD 1983 HARN Wisconsin CRS Oconto (US Feet)\",\n          \"8140\": \"NAD 1983 HARN Wisconsin CRS Oneida (US Feet)\",\n          \"103444\": \"NAD 1983 HARN Wisconsin CRS Outagamie (US Feet)\",\n          \"103445\": \"NAD 1983 HARN Wisconsin CRS Ozaukee (US Feet)\",\n          \"103446\": \"NAD 1983 HARN Wisconsin CRS Pepin (US Feet)\",\n          \"8138\": \"NAD 1983 HARN Wisconsin CRS Pepin and Pierce (US Feet)\",\n          \"103447\": \"NAD 1983 HARN Wisconsin CRS Pierce (US Feet)\",\n          \"8136\": \"NAD 1983 HARN Wisconsin CRS Polk (US Feet)\",\n          \"8134\": \"NAD 1983 HARN Wisconsin CRS Portage (US Feet)\",\n          \"8132\": \"NAD 1983 HARN Wisconsin CRS Price (US Feet)\",\n          \"103451\": \"NAD 1983 HARN Wisconsin CRS Racine (US Feet)\",\n          \"8130\": \"NAD 1983 HARN Wisconsin CRS Richland (US Feet)\",\n          \"8128\": \"NAD 1983 HARN Wisconsin CRS Rock (US Feet)\",\n          \"8126\": \"NAD 1983 HARN Wisconsin CRS Rusk (US Feet)\",\n          \"8124\": \"NAD 1983 HARN Wisconsin CRS Sauk (US Feet)\",\n          \"8122\": \"NAD 1983 HARN Wisconsin CRS Sawyer (US Feet)\",\n          \"8120\": \"NAD 1983 HARN Wisconsin CRS Shawano (US Feet)\",\n          \"103458\": \"NAD 1983 HARN Wisconsin CRS Sheboygan (US Feet)\",\n          \"8118\": \"NAD 1983 HARN Wisconsin CRS St. Croix (US Feet)\",\n          \"8116\": \"NAD 1983 HARN Wisconsin CRS Taylor (US Feet)\",\n          \"8114\": \"NAD 1983 HARN Wisconsin CRS Trempealeau (US Feet)\",\n          \"8112\": \"NAD 1983 HARN Wisconsin CRS Vernon (US Feet)\",\n          \"8110\": \"NAD 1983 HARN Wisconsin CRS Vilas (US Feet)\",\n          \"8108\": \"NAD 1983 HARN Wisconsin CRS Walworth (US Feet)\",\n          \"8106\": \"NAD 1983 HARN Wisconsin CRS Washburn (US Feet)\",\n          \"8104\": \"NAD 1983 HARN Wisconsin CRS Washington (US Feet)\",\n          \"8102\": \"NAD 1983 HARN Wisconsin CRS Waukesha (US Feet)\",\n          \"8100\": \"NAD 1983 HARN Wisconsin CRS Waupaca (US Feet)\",\n          \"8098\": \"NAD 1983 HARN Wisconsin CRS Waushara (US Feet)\",\n          \"103470\": \"NAD 1983 HARN Wisconsin CRS Winnebago (US Feet)\",\n          \"8096\": \"NAD 1983 HARN Wisconsin CRS Wood (US Feet)\"\n        }\n      }\n    },\n    \"Gauss Kruger\": {\n      Asia: {\n        \"2044\": \"Hanoi 1972 GK Zone 18\",\n        \"2045\": \"Hanoi 1972 GK Zone 19\",\n        \"2395\": \"South Yemen GK Zone 8\",\n        \"2396\": \"South Yemen GK Zone 9\"\n      },\n      \"Beijing 1954\": {\n        \"2431\": \"Beijing 1954 3 Degree GK CM 102E\",\n        \"2432\": \"Beijing 1954 3 Degree GK CM 105E\",\n        \"2433\": \"Beijing 1954 3 Degree GK CM 108E\",\n        \"2434\": \"Beijing 1954 3 Degree GK CM 111E\",\n        \"2435\": \"Beijing 1954 3 Degree GK CM 114E\",\n        \"2436\": \"Beijing 1954 3 Degree GK CM 117E\",\n        \"2437\": \"Beijing 1954 3 Degree GK CM 120E\",\n        \"2438\": \"Beijing 1954 3 Degree GK CM 123E\",\n        \"2439\": \"Beijing 1954 3 Degree GK CM 126E\",\n        \"2440\": \"Beijing 1954 3 Degree GK CM 129E\",\n        \"2441\": \"Beijing 1954 3 Degree GK CM 132E\",\n        \"2442\": \"Beijing 1954 3 Degree GK CM 135E\",\n        \"2422\": \"Beijing 1954 3 Degree GK CM 75E\",\n        \"2423\": \"Beijing 1954 3 Degree GK CM 78E\",\n        \"2424\": \"Beijing 1954 3 Degree GK CM 81E\",\n        \"2425\": \"Beijing 1954 3 Degree GK CM 84E\",\n        \"2426\": \"Beijing 1954 3 Degree GK CM 87E\",\n        \"2427\": \"Beijing 1954 3 Degree GK CM 90E\",\n        \"2428\": \"Beijing 1954 3 Degree GK CM 93E\",\n        \"2429\": \"Beijing 1954 3 Degree GK CM 96E\",\n        \"2430\": \"Beijing 1954 3 Degree GK CM 99E\",\n        \"2401\": \"Beijing 1954 3 Degree GK Zone 25\",\n        \"2402\": \"Beijing 1954 3 Degree GK Zone 26\",\n        \"2403\": \"Beijing 1954 3 Degree GK Zone 27\",\n        \"2404\": \"Beijing 1954 3 Degree GK Zone 28\",\n        \"2405\": \"Beijing 1954 3 Degree GK Zone 29\",\n        \"2406\": \"Beijing 1954 3 Degree GK Zone 30\",\n        \"2407\": \"Beijing 1954 3 Degree GK Zone 31\",\n        \"2408\": \"Beijing 1954 3 Degree GK Zone 32\",\n        \"2409\": \"Beijing 1954 3 Degree GK Zone 33\",\n        \"2410\": \"Beijing 1954 3 Degree GK Zone 34\",\n        \"2411\": \"Beijing 1954 3 Degree GK Zone 35\",\n        \"2412\": \"Beijing 1954 3 Degree GK Zone 36\",\n        \"2413\": \"Beijing 1954 3 Degree GK Zone 37\",\n        \"2414\": \"Beijing 1954 3 Degree GK Zone 38\",\n        \"2415\": \"Beijing 1954 3 Degree GK Zone 39\",\n        \"2416\": \"Beijing 1954 3 Degree GK Zone 40\",\n        \"2417\": \"Beijing 1954 3 Degree GK Zone 41\",\n        \"2418\": \"Beijing 1954 3 Degree GK Zone 42\",\n        \"2419\": \"Beijing 1954 3 Degree GK Zone 43\",\n        \"2420\": \"Beijing 1954 3 Degree GK Zone 44\",\n        \"2421\": \"Beijing 1954 3 Degree GK Zone 45\",\n        \"21458\": \"Beijing 1954 GK CM 105E\",\n        \"21459\": \"Beijing 1954 GK CM 111E\",\n        \"21460\": \"Beijing 1954 GK CM 117E\",\n        \"21461\": \"Beijing 1954 GK CM 123E\",\n        \"21462\": \"Beijing 1954 GK CM 129E\",\n        \"21463\": \"Beijing 1954 GK CM 135E\",\n        \"21453\": \"Beijing 1954 GK CM 75E\",\n        \"21454\": \"Beijing 1954 GK CM 81E\",\n        \"21455\": \"Beijing 1954 GK CM 87E\",\n        \"21456\": \"Beijing 1954 GK CM 93E\",\n        \"21457\": \"Beijing 1954 GK CM 99E\",\n        \"21413\": \"Beijing 1954 GK Zone 13\",\n        \"21473\": \"Beijing 1954 GK Zone 13N\",\n        \"21414\": \"Beijing 1954 GK Zone 14\",\n        \"21474\": \"Beijing 1954 GK Zone 14N\",\n        \"21415\": \"Beijing 1954 GK Zone 15\",\n        \"21475\": \"Beijing 1954 GK Zone 15N\",\n        \"21416\": \"Beijing 1954 GK Zone 16\",\n        \"21476\": \"Beijing 1954 GK Zone 16N\",\n        \"21417\": \"Beijing 1954 GK Zone 17\",\n        \"21477\": \"Beijing 1954 GK Zone 17N\",\n        \"21418\": \"Beijing 1954 GK Zone 18\",\n        \"21478\": \"Beijing 1954 GK Zone 18N\",\n        \"21419\": \"Beijing 1954 GK Zone 19\",\n        \"21479\": \"Beijing 1954 GK Zone 19N\",\n        \"21420\": \"Beijing 1954 GK Zone 20\",\n        \"21480\": \"Beijing 1954 GK Zone 20N\",\n        \"21421\": \"Beijing 1954 GK Zone 21\",\n        \"21481\": \"Beijing 1954 GK Zone 21N\",\n        \"21422\": \"Beijing 1954 GK Zone 22\",\n        \"21482\": \"Beijing 1954 GK Zone 22N\",\n        \"21423\": \"Beijing 1954 GK Zone 23\",\n        \"21483\": \"Beijing 1954 GK Zone 23N\"\n      },\n      CGCS2000: {\n        \"4543\": \"CGCS2000 3 Degree GK CM 102E\",\n        \"4544\": \"CGCS2000 3 Degree GK CM 105E\",\n        \"4545\": \"CGCS2000 3 Degree GK CM 108E\",\n        \"4546\": \"CGCS2000 3 Degree GK CM 111E\",\n        \"4547\": \"CGCS2000 3 Degree GK CM 114E\",\n        \"4548\": \"CGCS2000 3 Degree GK CM 117E\",\n        \"4549\": \"CGCS2000 3 Degree GK CM 120E\",\n        \"4550\": \"CGCS2000 3 Degree GK CM 123E\",\n        \"4551\": \"CGCS2000 3 Degree GK CM 126E\",\n        \"4552\": \"CGCS2000 3 Degree GK CM 129E\",\n        \"4553\": \"CGCS2000 3 Degree GK CM 132E\",\n        \"4554\": \"CGCS2000 3 Degree GK CM 135E\",\n        \"4534\": \"CGCS2000 3 Degree GK CM 75E\",\n        \"4535\": \"CGCS2000 3 Degree GK CM 78E\",\n        \"4536\": \"CGCS2000 3 Degree GK CM 81E\",\n        \"4537\": \"CGCS2000 3 Degree GK CM 84E\",\n        \"4538\": \"CGCS2000 3 Degree GK CM 87E\",\n        \"4539\": \"CGCS2000 3 Degree GK CM 90E\",\n        \"4540\": \"CGCS2000 3 Degree GK CM 93E\",\n        \"4541\": \"CGCS2000 3 Degree GK CM 96E\",\n        \"4542\": \"CGCS2000 3 Degree GK CM 99E\",\n        \"4513\": \"CGCS2000 3 Degree GK Zone 25\",\n        \"4514\": \"CGCS2000 3 Degree GK Zone 26\",\n        \"4515\": \"CGCS2000 3 Degree GK Zone 27\",\n        \"4516\": \"CGCS2000 3 Degree GK Zone 28\",\n        \"4517\": \"CGCS2000 3 Degree GK Zone 29\",\n        \"4518\": \"CGCS2000 3 Degree GK Zone 30\",\n        \"4519\": \"CGCS2000 3 Degree GK Zone 31\",\n        \"4520\": \"CGCS2000 3 Degree GK Zone 32\",\n        \"4521\": \"CGCS2000 3 Degree GK Zone 33\",\n        \"4522\": \"CGCS2000 3 Degree GK Zone 34\",\n        \"4523\": \"CGCS2000 3 Degree GK Zone 35\",\n        \"4524\": \"CGCS2000 3 Degree GK Zone 36\",\n        \"4525\": \"CGCS2000 3 Degree GK Zone 37\",\n        \"4526\": \"CGCS2000 3 Degree GK Zone 38\",\n        \"4527\": \"CGCS2000 3 Degree GK Zone 39\",\n        \"4528\": \"CGCS2000 3 Degree GK Zone 40\",\n        \"4529\": \"CGCS2000 3 Degree GK Zone 41\",\n        \"4530\": \"CGCS2000 3 Degree GK Zone 42\",\n        \"4531\": \"CGCS2000 3 Degree GK Zone 43\",\n        \"4532\": \"CGCS2000 3 Degree GK Zone 44\",\n        \"4533\": \"CGCS2000 3 Degree GK Zone 45\",\n        \"4507\": \"CGCS2000 GK CM 105E\",\n        \"4508\": \"CGCS2000 GK CM 111E\",\n        \"4509\": \"CGCS2000 GK CM 117E\",\n        \"4510\": \"CGCS2000 GK CM 123E\",\n        \"4511\": \"CGCS2000 GK CM 129E\",\n        \"4512\": \"CGCS2000 GK CM 135E\",\n        \"4502\": \"CGCS2000 GK CM 75E\",\n        \"4503\": \"CGCS2000 GK CM 81E\",\n        \"4504\": \"CGCS2000 GK CM 87E\",\n        \"4505\": \"CGCS2000 GK CM 93E\",\n        \"4506\": \"CGCS2000 GK CM 99E\",\n        \"4491\": \"CGCS2000 GK Zone 13\",\n        \"4492\": \"CGCS2000 GK Zone 14\",\n        \"4493\": \"CGCS2000 GK Zone 15\",\n        \"4494\": \"CGCS2000 GK Zone 16\",\n        \"4495\": \"CGCS2000 GK Zone 17\",\n        \"4496\": \"CGCS2000 GK Zone 18\",\n        \"4497\": \"CGCS2000 GK Zone 19\",\n        \"4498\": \"CGCS2000 GK Zone 20\",\n        \"4499\": \"CGCS2000 GK Zone 21\",\n        \"4500\": \"CGCS2000 GK Zone 22\",\n        \"4501\": \"CGCS2000 GK Zone 23\"\n      },\n      Europe: {\n        \"2462\": \"Albanian 1987 GK Zone 4\",\n        \"8395\": \"ETRS 1989 GK CM 9E\",\n        \"3396\": \"PD 83 GK Zone 3\",\n        \"3397\": \"PD 83 GK Zone 4\",\n        \"3840\": \"Pulkovo 1942 Adj 1958 3 Degree GK Zone 10\",\n        \"3837\": \"Pulkovo 1942 Adj 1958 3 Degree GK Zone 3\",\n        \"3838\": \"Pulkovo 1942 Adj 1958 3 Degree GK Zone 4\",\n        \"3329\": \"Pulkovo 1942 Adj 1958 3 Degree GK Zone 5\",\n        \"3330\": \"Pulkovo 1942 Adj 1958 3 Degree GK Zone 6\",\n        \"3332\": \"Pulkovo 1942 Adj 1958 3 Degree GK Zone 8\",\n        \"3839\": \"Pulkovo 1942 Adj 1958 3 Degree GK Zone 9\",\n        \"5670\": \"Pulkovo 1942 Adj 1958 3-Degree GK Zone 3 (E-N)\",\n        \"5671\": \"Pulkovo 1942 Adj 1958 3-Degree GK Zone 4 (E-N)\",\n        \"5672\": \"Pulkovo 1942 Adj 1958 3-Degree GK Zone 5 (E-N)\",\n        \"3331\": \"Pulkovo 1942 Adj 1958 3-Degree GK Zone 7\",\n        \"3833\": \"Pulkovo 1942 Adj 1958 GK Zone 2\",\n        \"5631\": \"Pulkovo 1942 Adj 1958 GK Zone 2 (E-N)\",\n        \"3333\": \"Pulkovo 1942 Adj 1958 GK Zone 3\",\n        \"5663\": \"Pulkovo 1942 Adj 1958 GK Zone 3 (E-N)\",\n        \"3334\": \"Pulkovo 1942 Adj 1958 GK Zone 4\",\n        \"3335\": \"Pulkovo 1942 Adj 1958 GK Zone 5\",\n        \"2397\": \"Pulkovo 1942 Adj 1983 3 Degree GK Zone 3\",\n        \"2398\": \"Pulkovo 1942 Adj 1983 3 Degree GK Zone 4\",\n        \"2399\": \"Pulkovo 1942 Adj 1983 3 Degree GK Zone 5\",\n        \"3841\": \"Pulkovo 1942 Adj 1983 3 Degree GK Zone 6\",\n        \"4434\": \"Pulkovo 1942 Adj 1983 3 Degree GK Zone 8\",\n        \"5673\": \"Pulkovo 1942 Adj 1983 3-Degree GK Zone 3 (E-N)\",\n        \"5674\": \"Pulkovo 1942 Adj 1983 3-Degree GK Zone 4 (E-N)\",\n        \"5675\": \"Pulkovo 1942 Adj 1983 3-Degree GK Zone 5 (E-N)\",\n        \"4417\": \"Pulkovo 1942 Adj 1983 3-Degree GK Zone 7\",\n        \"3834\": \"Pulkovo 1942 Adj 1983 GK Zone 2\",\n        \"5664\": \"Pulkovo 1942 Adj 1983 GK Zone 2 (E-N)\",\n        \"3835\": \"Pulkovo 1942 Adj 1983 GK Zone 3\",\n        \"5665\": \"Pulkovo 1942 Adj 1983 GK Zone 3 (E-N)\",\n        \"3836\": \"Pulkovo 1942 Adj 1983 GK Zone 4\",\n        \"5668\": \"RD 83 3 Degree GK Zone 4 (E-N)\",\n        \"5669\": \"RD 83 3 Degree GK Zone 5 (E-N)\",\n        \"3398\": \"RD 83 GK Zone 4\",\n        \"3399\": \"RD 83 GK Zone 5\"\n      },\n      \"GSK 2011\": {\n        \"21334\": \"GSK-2011 GSK 3GK CM 102E\",\n        \"21335\": \"GSK-2011 GSK 3GK CM 105E\",\n        \"21336\": \"GSK-2011 GSK 3GK CM 108E\",\n        \"21337\": \"GSK-2011 GSK 3GK CM 111E\",\n        \"21338\": \"GSK-2011 GSK 3GK CM 114E\",\n        \"21339\": \"GSK-2011 GSK 3GK CM 117E\",\n        \"21340\": \"GSK-2011 GSK 3GK CM 120E\",\n        \"21341\": \"GSK-2011 GSK 3GK CM 123E\",\n        \"21342\": \"GSK-2011 GSK 3GK CM 126E\",\n        \"21343\": \"GSK-2011 GSK 3GK CM 129E\",\n        \"21344\": \"GSK-2011 GSK 3GK CM 132E\",\n        \"21345\": \"GSK-2011 GSK 3GK CM 135E\",\n        \"21346\": \"GSK-2011 GSK 3GK CM 138E\",\n        \"21347\": \"GSK-2011 GSK 3GK CM 141E\",\n        \"21348\": \"GSK-2011 GSK 3GK CM 144E\",\n        \"21349\": \"GSK-2011 GSK 3GK CM 147E\",\n        \"21350\": \"GSK-2011 GSK 3GK CM 150E\",\n        \"21351\": \"GSK-2011 GSK 3GK CM 153E\",\n        \"21352\": \"GSK-2011 GSK 3GK CM 156E\",\n        \"21353\": \"GSK-2011 GSK 3GK CM 159E\",\n        \"21354\": \"GSK-2011 GSK 3GK CM 162E\",\n        \"21355\": \"GSK-2011 GSK 3GK CM 165E\",\n        \"21356\": \"GSK-2011 GSK 3GK CM 168E\",\n        \"21364\": \"GSK-2011 GSK 3GK CM 168W\",\n        \"21357\": \"GSK-2011 GSK 3GK CM 171E\",\n        \"21363\": \"GSK-2011 GSK 3GK CM 171W\",\n        \"21358\": \"GSK-2011 GSK 3GK CM 174E\",\n        \"21362\": \"GSK-2011 GSK 3GK CM 174W\",\n        \"21359\": \"GSK-2011 GSK 3GK CM 177E\",\n        \"21361\": \"GSK-2011 GSK 3GK CM 177W\",\n        \"21360\": \"GSK-2011 GSK 3GK CM 180E\",\n        \"21307\": \"GSK-2011 GSK 3GK CM 21E\",\n        \"21308\": \"GSK-2011 GSK 3GK CM 24E\",\n        \"21309\": \"GSK-2011 GSK 3GK CM 27E\",\n        \"21310\": \"GSK-2011 GSK 3GK CM 30E\",\n        \"21311\": \"GSK-2011 GSK 3GK CM 33E\",\n        \"21312\": \"GSK-2011 GSK 3GK CM 36E\",\n        \"21313\": \"GSK-2011 GSK 3GK CM 39E\",\n        \"21314\": \"GSK-2011 GSK 3GK CM 42E\",\n        \"21315\": \"GSK-2011 GSK 3GK CM 45E\",\n        \"21316\": \"GSK-2011 GSK 3GK CM 48E\",\n        \"21317\": \"GSK-2011 GSK 3GK CM 51E\",\n        \"21318\": \"GSK-2011 GSK 3GK CM 54E\",\n        \"21319\": \"GSK-2011 GSK 3GK CM 57E\",\n        \"21320\": \"GSK-2011 GSK 3GK CM 60E\",\n        \"21321\": \"GSK-2011 GSK 3GK CM 63E\",\n        \"21322\": \"GSK-2011 GSK 3GK CM 66E\",\n        \"21323\": \"GSK-2011 GSK 3GK CM 69E\",\n        \"21324\": \"GSK-2011 GSK 3GK CM 72E\",\n        \"21325\": \"GSK-2011 GSK 3GK CM 75E\",\n        \"21326\": \"GSK-2011 GSK 3GK CM 78E\",\n        \"21327\": \"GSK-2011 GSK 3GK CM 81E\",\n        \"21328\": \"GSK-2011 GSK 3GK CM 84E\",\n        \"21329\": \"GSK-2011 GSK 3GK CM 87E\",\n        \"21330\": \"GSK-2011 GSK 3GK CM 90E\",\n        \"21331\": \"GSK-2011 GSK 3GK CM 93E\",\n        \"21332\": \"GSK-2011 GSK 3GK CM 96E\",\n        \"21333\": \"GSK-2011 GSK 3GK CM 99E\",\n        \"21210\": \"GSK-2011 GSK 3GK zone 10\",\n        \"21211\": \"GSK-2011 GSK 3GK zone 11\",\n        \"21212\": \"GSK-2011 GSK 3GK zone 12\",\n        \"21213\": \"GSK-2011 GSK 3GK zone 13\",\n        \"21214\": \"GSK-2011 GSK 3GK zone 14\",\n        \"21215\": \"GSK-2011 GSK 3GK zone 15\",\n        \"21216\": \"GSK-2011 GSK 3GK zone 16\",\n        \"21217\": \"GSK-2011 GSK 3GK zone 17\",\n        \"21218\": \"GSK-2011 GSK 3GK zone 18\",\n        \"21219\": \"GSK-2011 GSK 3GK zone 19\",\n        \"21220\": \"GSK-2011 GSK 3GK zone 20\",\n        \"21221\": \"GSK-2011 GSK 3GK zone 21\",\n        \"21222\": \"GSK-2011 GSK 3GK zone 22\",\n        \"21223\": \"GSK-2011 GSK 3GK zone 23\",\n        \"21224\": \"GSK-2011 GSK 3GK zone 24\",\n        \"21225\": \"GSK-2011 GSK 3GK zone 25\",\n        \"21226\": \"GSK-2011 GSK 3GK zone 26\",\n        \"21227\": \"GSK-2011 GSK 3GK zone 27\",\n        \"21228\": \"GSK-2011 GSK 3GK zone 28\",\n        \"21229\": \"GSK-2011 GSK 3GK zone 29\",\n        \"21230\": \"GSK-2011 GSK 3GK zone 30\",\n        \"21231\": \"GSK-2011 GSK 3GK zone 31\",\n        \"21232\": \"GSK-2011 GSK 3GK zone 32\",\n        \"21233\": \"GSK-2011 GSK 3GK zone 33\",\n        \"21234\": \"GSK-2011 GSK 3GK zone 34\",\n        \"21235\": \"GSK-2011 GSK 3GK zone 35\",\n        \"21236\": \"GSK-2011 GSK 3GK zone 36\",\n        \"21237\": \"GSK-2011 GSK 3GK zone 37\",\n        \"21238\": \"GSK-2011 GSK 3GK zone 38\",\n        \"21239\": \"GSK-2011 GSK 3GK zone 39\",\n        \"21240\": \"GSK-2011 GSK 3GK zone 40\",\n        \"21241\": \"GSK-2011 GSK 3GK zone 41\",\n        \"21242\": \"GSK-2011 GSK 3GK zone 42\",\n        \"21243\": \"GSK-2011 GSK 3GK zone 43\",\n        \"21244\": \"GSK-2011 GSK 3GK zone 44\",\n        \"21245\": \"GSK-2011 GSK 3GK zone 45\",\n        \"21246\": \"GSK-2011 GSK 3GK zone 46\",\n        \"21247\": \"GSK-2011 GSK 3GK zone 47\",\n        \"21248\": \"GSK-2011 GSK 3GK zone 48\",\n        \"21249\": \"GSK-2011 GSK 3GK zone 49\",\n        \"21250\": \"GSK-2011 GSK 3GK zone 50\",\n        \"21251\": \"GSK-2011 GSK 3GK zone 51\",\n        \"21252\": \"GSK-2011 GSK 3GK zone 52\",\n        \"21253\": \"GSK-2011 GSK 3GK zone 53\",\n        \"21254\": \"GSK-2011 GSK 3GK zone 54\",\n        \"21255\": \"GSK-2011 GSK 3GK zone 55\",\n        \"21256\": \"GSK-2011 GSK 3GK zone 56\",\n        \"21257\": \"GSK-2011 GSK 3GK zone 57\",\n        \"21258\": \"GSK-2011 GSK 3GK zone 58\",\n        \"21259\": \"GSK-2011 GSK 3GK zone 59\",\n        \"21260\": \"GSK-2011 GSK 3GK zone 60\",\n        \"21261\": \"GSK-2011 GSK 3GK zone 61\",\n        \"21262\": \"GSK-2011 GSK 3GK zone 62\",\n        \"21263\": \"GSK-2011 GSK 3GK zone 63\",\n        \"21264\": \"GSK-2011 GSK 3GK zone 64\",\n        \"21207\": \"GSK-2011 GSK 3GK zone 7\",\n        \"21208\": \"GSK-2011 GSK 3GK zone 8\",\n        \"21209\": \"GSK-2011 GSK 3GK zone 9\",\n        \"21018\": \"GSK-2011 Gauss-Kruger CM 105E\",\n        \"21019\": \"GSK-2011 Gauss-Kruger CM 111E\",\n        \"21020\": \"GSK-2011 Gauss-Kruger CM 117E\",\n        \"21021\": \"GSK-2011 Gauss-Kruger CM 123E\",\n        \"21022\": \"GSK-2011 Gauss-Kruger CM 129E\",\n        \"21023\": \"GSK-2011 Gauss-Kruger CM 135E\",\n        \"21024\": \"GSK-2011 Gauss-Kruger CM 141E\",\n        \"21025\": \"GSK-2011 Gauss-Kruger CM 147E\",\n        \"21026\": \"GSK-2011 Gauss-Kruger CM 153E\",\n        \"21027\": \"GSK-2011 Gauss-Kruger CM 159E\",\n        \"21028\": \"GSK-2011 Gauss-Kruger CM 165E\",\n        \"21029\": \"GSK-2011 Gauss-Kruger CM 171E\",\n        \"21032\": \"GSK-2011 Gauss-Kruger CM 171W\",\n        \"21030\": \"GSK-2011 Gauss-Kruger CM 177E\",\n        \"21031\": \"GSK-2011 Gauss-Kruger CM 177W\",\n        \"21004\": \"GSK-2011 Gauss-Kruger CM 21E\",\n        \"21005\": \"GSK-2011 Gauss-Kruger CM 27E\",\n        \"21006\": \"GSK-2011 Gauss-Kruger CM 33E\",\n        \"21007\": \"GSK-2011 Gauss-Kruger CM 39E\",\n        \"21008\": \"GSK-2011 Gauss-Kruger CM 45E\",\n        \"21009\": \"GSK-2011 Gauss-Kruger CM 51E\",\n        \"21010\": \"GSK-2011 Gauss-Kruger CM 57E\",\n        \"21011\": \"GSK-2011 Gauss-Kruger CM 63E\",\n        \"21012\": \"GSK-2011 Gauss-Kruger CM 69E\",\n        \"21013\": \"GSK-2011 Gauss-Kruger CM 75E\",\n        \"21014\": \"GSK-2011 Gauss-Kruger CM 81E\",\n        \"21015\": \"GSK-2011 Gauss-Kruger CM 87E\",\n        \"21016\": \"GSK-2011 Gauss-Kruger CM 93E\",\n        \"21017\": \"GSK-2011 Gauss-Kruger CM 99E\",\n        \"20910\": \"GSK-2011 Gauss-Kruger zone 10\",\n        \"20911\": \"GSK-2011 Gauss-Kruger zone 11\",\n        \"20912\": \"GSK-2011 Gauss-Kruger zone 12\",\n        \"20913\": \"GSK-2011 Gauss-Kruger zone 13\",\n        \"20914\": \"GSK-2011 Gauss-Kruger zone 14\",\n        \"20915\": \"GSK-2011 Gauss-Kruger zone 15\",\n        \"20916\": \"GSK-2011 Gauss-Kruger zone 16\",\n        \"20917\": \"GSK-2011 Gauss-Kruger zone 17\",\n        \"20918\": \"GSK-2011 Gauss-Kruger zone 18\",\n        \"20919\": \"GSK-2011 Gauss-Kruger zone 19\",\n        \"20920\": \"GSK-2011 Gauss-Kruger zone 20\",\n        \"20921\": \"GSK-2011 Gauss-Kruger zone 21\",\n        \"20922\": \"GSK-2011 Gauss-Kruger zone 22\",\n        \"20923\": \"GSK-2011 Gauss-Kruger zone 23\",\n        \"20924\": \"GSK-2011 Gauss-Kruger zone 24\",\n        \"20925\": \"GSK-2011 Gauss-Kruger zone 25\",\n        \"20926\": \"GSK-2011 Gauss-Kruger zone 26\",\n        \"20927\": \"GSK-2011 Gauss-Kruger zone 27\",\n        \"20928\": \"GSK-2011 Gauss-Kruger zone 28\",\n        \"20929\": \"GSK-2011 Gauss-Kruger zone 29\",\n        \"20930\": \"GSK-2011 Gauss-Kruger zone 30\",\n        \"20931\": \"GSK-2011 Gauss-Kruger zone 31\",\n        \"20932\": \"GSK-2011 Gauss-Kruger zone 32\",\n        \"20904\": \"GSK-2011 Gauss-Kruger zone 4\",\n        \"20905\": \"GSK-2011 Gauss-Kruger zone 5\",\n        \"20906\": \"GSK-2011 Gauss-Kruger zone 6\",\n        \"20907\": \"GSK-2011 Gauss-Kruger zone 7\",\n        \"20908\": \"GSK-2011 Gauss-Kruger zone 8\",\n        \"20909\": \"GSK-2011 Gauss-Kruger zone 9\"\n      },\n      \"New Beijing\": {\n        \"4791\": \"New Beijing Gauss-Kruger 3 Degree CM 102E\",\n        \"4792\": \"New Beijing Gauss-Kruger 3 Degree CM 105E\",\n        \"4793\": \"New Beijing Gauss-Kruger 3 Degree CM 108E\",\n        \"4794\": \"New Beijing Gauss-Kruger 3 Degree CM 111E\",\n        \"4795\": \"New Beijing Gauss-Kruger 3 Degree CM 114E\",\n        \"4796\": \"New Beijing Gauss-Kruger 3 Degree CM 117E\",\n        \"4797\": \"New Beijing Gauss-Kruger 3 Degree CM 120E\",\n        \"4798\": \"New Beijing Gauss-Kruger 3 Degree CM 123E\",\n        \"4799\": \"New Beijing Gauss-Kruger 3 Degree CM 126E\",\n        \"4800\": \"New Beijing Gauss-Kruger 3 Degree CM 129E\",\n        \"102569\": \"New Beijing Gauss-Kruger 3 Degree CM 132E\",\n        \"4822\": \"New Beijing Gauss-Kruger 3 Degree CM 135E\",\n        \"4782\": \"New Beijing Gauss-Kruger 3 Degree CM 75E\",\n        \"4783\": \"New Beijing Gauss-Kruger 3 Degree CM 78E\",\n        \"4784\": \"New Beijing Gauss-Kruger 3 Degree CM 81E\",\n        \"4785\": \"New Beijing Gauss-Kruger 3 Degree CM 84E\",\n        \"4786\": \"New Beijing Gauss-Kruger 3 Degree CM 87E\",\n        \"4787\": \"New Beijing Gauss-Kruger 3 Degree CM 90E\",\n        \"4788\": \"New Beijing Gauss-Kruger 3 Degree CM 93E\",\n        \"4789\": \"New Beijing Gauss-Kruger 3 Degree CM 96E\",\n        \"4790\": \"New Beijing Gauss-Kruger 3 Degree CM 99E\",\n        \"4652\": \"New Beijing Gauss-Kruger 3 Degree Zone 25\",\n        \"4653\": \"New Beijing Gauss-Kruger 3 Degree Zone 26\",\n        \"4654\": \"New Beijing Gauss-Kruger 3 Degree Zone 27\",\n        \"4655\": \"New Beijing Gauss-Kruger 3 Degree Zone 28\",\n        \"4656\": \"New Beijing Gauss-Kruger 3 Degree Zone 29\",\n        \"4766\": \"New Beijing Gauss-Kruger 3 Degree Zone 30\",\n        \"4767\": \"New Beijing Gauss-Kruger 3 Degree Zone 31\",\n        \"4768\": \"New Beijing Gauss-Kruger 3 Degree Zone 32\",\n        \"4769\": \"New Beijing Gauss-Kruger 3 Degree Zone 33\",\n        \"4770\": \"New Beijing Gauss-Kruger 3 Degree Zone 34\",\n        \"4771\": \"New Beijing Gauss-Kruger 3 Degree Zone 35\",\n        \"4772\": \"New Beijing Gauss-Kruger 3 Degree Zone 36\",\n        \"4773\": \"New Beijing Gauss-Kruger 3 Degree Zone 37\",\n        \"4774\": \"New Beijing Gauss-Kruger 3 Degree Zone 38\",\n        \"4775\": \"New Beijing Gauss-Kruger 3 Degree Zone 39\",\n        \"4776\": \"New Beijing Gauss-Kruger 3 Degree Zone 40\",\n        \"4777\": \"New Beijing Gauss-Kruger 3 Degree Zone 41\",\n        \"4778\": \"New Beijing Gauss-Kruger 3 Degree Zone 42\",\n        \"4779\": \"New Beijing Gauss-Kruger 3 Degree Zone 43\",\n        \"4780\": \"New Beijing Gauss-Kruger 3 Degree Zone 44\",\n        \"4781\": \"New Beijing Gauss-Kruger 3 Degree Zone 45\",\n        \"4584\": \"New Beijing Gauss-Kruger CM 105E\",\n        \"4585\": \"New Beijing Gauss-Kruger CM 111E\",\n        \"4586\": \"New Beijing Gauss-Kruger CM 117E\",\n        \"4587\": \"New Beijing Gauss-Kruger CM 123E\",\n        \"4588\": \"New Beijing Gauss-Kruger CM 129E\",\n        \"4589\": \"New Beijing Gauss-Kruger CM 135E\",\n        \"4579\": \"New Beijing Gauss-Kruger CM 75E\",\n        \"4580\": \"New Beijing Gauss-Kruger CM 81E\",\n        \"4581\": \"New Beijing Gauss-Kruger CM 87E\",\n        \"4582\": \"New Beijing Gauss-Kruger CM 93E\",\n        \"4583\": \"New Beijing Gauss-Kruger CM 99E\",\n        \"4568\": \"New Beijing Gauss-Kruger Zone 13\",\n        \"4569\": \"New Beijing Gauss-Kruger Zone 14\",\n        \"4570\": \"New Beijing Gauss-Kruger Zone 15\",\n        \"4571\": \"New Beijing Gauss-Kruger Zone 16\",\n        \"4572\": \"New Beijing Gauss-Kruger Zone 17\",\n        \"4573\": \"New Beijing Gauss-Kruger Zone 18\",\n        \"4574\": \"New Beijing Gauss-Kruger Zone 19\",\n        \"4575\": \"New Beijing Gauss-Kruger Zone 20\",\n        \"4576\": \"New Beijing Gauss-Kruger Zone 21\",\n        \"4577\": \"New Beijing Gauss-Kruger Zone 22\",\n        \"4578\": \"New Beijing Gauss-Kruger Zone 23\"\n      },\n      \"Pulkovo 1942\": {\n        \"2610\": \"Pulkovo 1942 3 Degree GK CM 102E\",\n        \"2611\": \"Pulkovo 1942 3 Degree GK CM 105E\",\n        \"2612\": \"Pulkovo 1942 3 Degree GK CM 108E\",\n        \"2613\": \"Pulkovo 1942 3 Degree GK CM 111E\",\n        \"2614\": \"Pulkovo 1942 3 Degree GK CM 114E\",\n        \"2615\": \"Pulkovo 1942 3 Degree GK CM 117E\",\n        \"2616\": \"Pulkovo 1942 3 Degree GK CM 120E\",\n        \"2617\": \"Pulkovo 1942 3 Degree GK CM 123E\",\n        \"2618\": \"Pulkovo 1942 3 Degree GK CM 126E\",\n        \"2619\": \"Pulkovo 1942 3 Degree GK CM 129E\",\n        \"2620\": \"Pulkovo 1942 3 Degree GK CM 132E\",\n        \"2621\": \"Pulkovo 1942 3 Degree GK CM 135E\",\n        \"2622\": \"Pulkovo 1942 3 Degree GK CM 138E\",\n        \"2623\": \"Pulkovo 1942 3 Degree GK CM 141E\",\n        \"2624\": \"Pulkovo 1942 3 Degree GK CM 144E\",\n        \"2625\": \"Pulkovo 1942 3 Degree GK CM 147E\",\n        \"2626\": \"Pulkovo 1942 3 Degree GK CM 150E\",\n        \"2627\": \"Pulkovo 1942 3 Degree GK CM 153E\",\n        \"2628\": \"Pulkovo 1942 3 Degree GK CM 156E\",\n        \"2629\": \"Pulkovo 1942 3 Degree GK CM 159E\",\n        \"2630\": \"Pulkovo 1942 3 Degree GK CM 162E\",\n        \"2631\": \"Pulkovo 1942 3 Degree GK CM 165E\",\n        \"2632\": \"Pulkovo 1942 3 Degree GK CM 168E\",\n        \"2640\": \"Pulkovo 1942 3 Degree GK CM 168W\",\n        \"2633\": \"Pulkovo 1942 3 Degree GK CM 171E\",\n        \"2639\": \"Pulkovo 1942 3 Degree GK CM 171W\",\n        \"2634\": \"Pulkovo 1942 3 Degree GK CM 174E\",\n        \"2638\": \"Pulkovo 1942 3 Degree GK CM 174W\",\n        \"2635\": \"Pulkovo 1942 3 Degree GK CM 177E\",\n        \"2637\": \"Pulkovo 1942 3 Degree GK CM 177W\",\n        \"2636\": \"Pulkovo 1942 3 Degree GK CM 180E\",\n        \"3147\": \"Pulkovo 1942 3 Degree GK CM 18E\",\n        \"2582\": \"Pulkovo 1942 3 Degree GK CM 21E\",\n        \"2583\": \"Pulkovo 1942 3 Degree GK CM 24E\",\n        \"2584\": \"Pulkovo 1942 3 Degree GK CM 27E\",\n        \"2585\": \"Pulkovo 1942 3 Degree GK CM 30E\",\n        \"2586\": \"Pulkovo 1942 3 Degree GK CM 33E\",\n        \"2587\": \"Pulkovo 1942 3 Degree GK CM 36E\",\n        \"2588\": \"Pulkovo 1942 3 Degree GK CM 39E\",\n        \"2589\": \"Pulkovo 1942 3 Degree GK CM 42E\",\n        \"2590\": \"Pulkovo 1942 3 Degree GK CM 45E\",\n        \"2591\": \"Pulkovo 1942 3 Degree GK CM 48E\",\n        \"2592\": \"Pulkovo 1942 3 Degree GK CM 51E\",\n        \"2593\": \"Pulkovo 1942 3 Degree GK CM 54E\",\n        \"2594\": \"Pulkovo 1942 3 Degree GK CM 57E\",\n        \"3146\": \"Pulkovo 1942 3 Degree GK CM 6\",\n        \"3389\": \"Pulkovo 1942 3 Degree GK CM 60\",\n        \"2595\": \"Pulkovo 1942 3 Degree GK CM 60E\",\n        \"2596\": \"Pulkovo 1942 3 Degree GK CM 63E\",\n        \"2597\": \"Pulkovo 1942 3 Degree GK CM 66E\",\n        \"2598\": \"Pulkovo 1942 3 Degree GK CM 69E\",\n        \"2599\": \"Pulkovo 1942 3 Degree GK CM 72E\",\n        \"2601\": \"Pulkovo 1942 3 Degree GK CM 75E\",\n        \"2602\": \"Pulkovo 1942 3 Degree GK CM 78E\",\n        \"2603\": \"Pulkovo 1942 3 Degree GK CM 81E\",\n        \"2604\": \"Pulkovo 1942 3 Degree GK CM 84E\",\n        \"2605\": \"Pulkovo 1942 3 Degree GK CM 87E\",\n        \"2606\": \"Pulkovo 1942 3 Degree GK CM 90E\",\n        \"2607\": \"Pulkovo 1942 3 Degree GK CM 93E\",\n        \"2608\": \"Pulkovo 1942 3 Degree GK CM 96E\",\n        \"2609\": \"Pulkovo 1942 3 Degree GK CM 99E\",\n        \"2526\": \"Pulkovo 1942 3 Degree GK Zone 10\",\n        \"2527\": \"Pulkovo 1942 3 Degree GK Zone 11\",\n        \"2528\": \"Pulkovo 1942 3 Degree GK Zone 12\",\n        \"2529\": \"Pulkovo 1942 3 Degree GK Zone 13\",\n        \"2530\": \"Pulkovo 1942 3 Degree GK Zone 14\",\n        \"2531\": \"Pulkovo 1942 3 Degree GK Zone 15\",\n        \"2532\": \"Pulkovo 1942 3 Degree GK Zone 16\",\n        \"2533\": \"Pulkovo 1942 3 Degree GK Zone 17\",\n        \"2534\": \"Pulkovo 1942 3 Degree GK Zone 18\",\n        \"2535\": \"Pulkovo 1942 3 Degree GK Zone 19\",\n        \"2536\": \"Pulkovo 1942 3 Degree GK Zone 20\",\n        \"2537\": \"Pulkovo 1942 3 Degree GK Zone 21\",\n        \"2538\": \"Pulkovo 1942 3 Degree GK Zone 22\",\n        \"2539\": \"Pulkovo 1942 3 Degree GK Zone 23\",\n        \"2540\": \"Pulkovo 1942 3 Degree GK Zone 24\",\n        \"2541\": \"Pulkovo 1942 3 Degree GK Zone 25\",\n        \"2542\": \"Pulkovo 1942 3 Degree GK Zone 26\",\n        \"2543\": \"Pulkovo 1942 3 Degree GK Zone 27\",\n        \"2544\": \"Pulkovo 1942 3 Degree GK Zone 28\",\n        \"2545\": \"Pulkovo 1942 3 Degree GK Zone 29\",\n        \"2546\": \"Pulkovo 1942 3 Degree GK Zone 30\",\n        \"2547\": \"Pulkovo 1942 3 Degree GK Zone 31\",\n        \"2548\": \"Pulkovo 1942 3 Degree GK Zone 32\",\n        \"2549\": \"Pulkovo 1942 3 Degree GK Zone 33\",\n        \"2551\": \"Pulkovo 1942 3 Degree GK Zone 34\",\n        \"2552\": \"Pulkovo 1942 3 Degree GK Zone 35\",\n        \"2553\": \"Pulkovo 1942 3 Degree GK Zone 36\",\n        \"2554\": \"Pulkovo 1942 3 Degree GK Zone 37\",\n        \"2555\": \"Pulkovo 1942 3 Degree GK Zone 38\",\n        \"2556\": \"Pulkovo 1942 3 Degree GK Zone 39\",\n        \"2557\": \"Pulkovo 1942 3 Degree GK Zone 40\",\n        \"2558\": \"Pulkovo 1942 3 Degree GK Zone 41\",\n        \"2559\": \"Pulkovo 1942 3 Degree GK Zone 42\",\n        \"2560\": \"Pulkovo 1942 3 Degree GK Zone 43\",\n        \"2561\": \"Pulkovo 1942 3 Degree GK Zone 44\",\n        \"2562\": \"Pulkovo 1942 3 Degree GK Zone 45\",\n        \"2563\": \"Pulkovo 1942 3 Degree GK Zone 46\",\n        \"2564\": \"Pulkovo 1942 3 Degree GK Zone 47\",\n        \"2565\": \"Pulkovo 1942 3 Degree GK Zone 48\",\n        \"2566\": \"Pulkovo 1942 3 Degree GK Zone 49\",\n        \"2567\": \"Pulkovo 1942 3 Degree GK Zone 50\",\n        \"2568\": \"Pulkovo 1942 3 Degree GK Zone 51\",\n        \"2569\": \"Pulkovo 1942 3 Degree GK Zone 52\",\n        \"2570\": \"Pulkovo 1942 3 Degree GK Zone 53\",\n        \"2571\": \"Pulkovo 1942 3 Degree GK Zone 54\",\n        \"2572\": \"Pulkovo 1942 3 Degree GK Zone 55\",\n        \"2573\": \"Pulkovo 1942 3 Degree GK Zone 56\",\n        \"2574\": \"Pulkovo 1942 3 Degree GK Zone 57\",\n        \"2575\": \"Pulkovo 1942 3 Degree GK Zone 58\",\n        \"2576\": \"Pulkovo 1942 3 Degree GK Zone 59\",\n        \"2578\": \"Pulkovo 1942 3 Degree GK Zone 61\",\n        \"2579\": \"Pulkovo 1942 3 Degree GK Zone 62\",\n        \"2580\": \"Pulkovo 1942 3 Degree GK Zone 63\",\n        \"2581\": \"Pulkovo 1942 3 Degree GK Zone 64\",\n        \"2523\": \"Pulkovo 1942 3 Degree GK Zone 7\",\n        \"2524\": \"Pulkovo 1942 3 Degree GK Zone 8\",\n        \"2525\": \"Pulkovo 1942 3 Degree GK Zone 9\",\n        \"2935\": \"Pulkovo 1942 CS63 Zone A1\",\n        \"2936\": \"Pulkovo 1942 CS63 Zone A2\",\n        \"2937\": \"Pulkovo 1942 CS63 Zone A3\",\n        \"2938\": \"Pulkovo 1942 CS63 Zone A4\",\n        \"3350\": \"Pulkovo 1942 CS63 Zone C0\",\n        \"3351\": \"Pulkovo 1942 CS63 Zone C1\",\n        \"3352\": \"Pulkovo 1942 CS63 Zone C2\",\n        \"2939\": \"Pulkovo 1942 CS63 Zone K2\",\n        \"2940\": \"Pulkovo 1942 CS63 Zone K3\",\n        \"2941\": \"Pulkovo 1942 CS63 Zone K4\",\n        \"28410\": \"Pulkovo 1942 GK Zone 10\",\n        \"28470\": \"Pulkovo 1942 GK Zone 10N\",\n        \"28411\": \"Pulkovo 1942 GK Zone 11\",\n        \"28471\": \"Pulkovo 1942 GK Zone 11N\",\n        \"28412\": \"Pulkovo 1942 GK Zone 12\",\n        \"28472\": \"Pulkovo 1942 GK Zone 12N\",\n        \"28413\": \"Pulkovo 1942 GK Zone 13\",\n        \"28473\": \"Pulkovo 1942 GK Zone 13N\",\n        \"28414\": \"Pulkovo 1942 GK Zone 14\",\n        \"28474\": \"Pulkovo 1942 GK Zone 14N\",\n        \"28415\": \"Pulkovo 1942 GK Zone 15\",\n        \"28475\": \"Pulkovo 1942 GK Zone 15N\",\n        \"28416\": \"Pulkovo 1942 GK Zone 16\",\n        \"28476\": \"Pulkovo 1942 GK Zone 16N\",\n        \"28417\": \"Pulkovo 1942 GK Zone 17\",\n        \"28477\": \"Pulkovo 1942 GK Zone 17N\",\n        \"28418\": \"Pulkovo 1942 GK Zone 18\",\n        \"28478\": \"Pulkovo 1942 GK Zone 18N\",\n        \"28419\": \"Pulkovo 1942 GK Zone 19\",\n        \"28479\": \"Pulkovo 1942 GK Zone 19N\",\n        \"28402\": \"Pulkovo 1942 GK Zone 2\",\n        \"28420\": \"Pulkovo 1942 GK Zone 20\",\n        \"28480\": \"Pulkovo 1942 GK Zone 20N\",\n        \"28421\": \"Pulkovo 1942 GK Zone 21\",\n        \"28481\": \"Pulkovo 1942 GK Zone 21N\",\n        \"28422\": \"Pulkovo 1942 GK Zone 22\",\n        \"28482\": \"Pulkovo 1942 GK Zone 22N\",\n        \"28423\": \"Pulkovo 1942 GK Zone 23\",\n        \"28483\": \"Pulkovo 1942 GK Zone 23N\",\n        \"28424\": \"Pulkovo 1942 GK Zone 24\",\n        \"28484\": \"Pulkovo 1942 GK Zone 24N\",\n        \"28425\": \"Pulkovo 1942 GK Zone 25\",\n        \"28485\": \"Pulkovo 1942 GK Zone 25N\",\n        \"28426\": \"Pulkovo 1942 GK Zone 26\",\n        \"28486\": \"Pulkovo 1942 GK Zone 26N\",\n        \"28427\": \"Pulkovo 1942 GK Zone 27\",\n        \"28487\": \"Pulkovo 1942 GK Zone 27N\",\n        \"28428\": \"Pulkovo 1942 GK Zone 28\",\n        \"28488\": \"Pulkovo 1942 GK Zone 28N\",\n        \"28429\": \"Pulkovo 1942 GK Zone 29\",\n        \"28489\": \"Pulkovo 1942 GK Zone 29N\",\n        \"28462\": \"Pulkovo 1942 GK Zone 2N\",\n        \"28403\": \"Pulkovo 1942 GK Zone 3\",\n        \"28430\": \"Pulkovo 1942 GK Zone 30\",\n        \"28490\": \"Pulkovo 1942 GK Zone 30N\",\n        \"28431\": \"Pulkovo 1942 GK Zone 31\",\n        \"28491\": \"Pulkovo 1942 GK Zone 31N\",\n        \"28432\": \"Pulkovo 1942 GK Zone 32\",\n        \"28492\": \"Pulkovo 1942 GK Zone 32N\",\n        \"28463\": \"Pulkovo 1942 GK Zone 3N\",\n        \"28404\": \"Pulkovo 1942 GK Zone 4\",\n        \"28464\": \"Pulkovo 1942 GK Zone 4N\",\n        \"28405\": \"Pulkovo 1942 GK Zone 5\",\n        \"28465\": \"Pulkovo 1942 GK Zone 5N\",\n        \"28406\": \"Pulkovo 1942 GK Zone 6\",\n        \"28466\": \"Pulkovo 1942 GK Zone 6N\",\n        \"28407\": \"Pulkovo 1942 GK Zone 7\",\n        \"28467\": \"Pulkovo 1942 GK Zone 7N\",\n        \"28408\": \"Pulkovo 1942 GK Zone 8\",\n        \"28468\": \"Pulkovo 1942 GK Zone 8N\",\n        \"28409\": \"Pulkovo 1942 GK Zone 9\",\n        \"28469\": \"Pulkovo 1942 GK Zone 9N\",\n        \"2508\": \"Pulkovo 1942 Gauss-Kruger CM 105E\",\n        \"2509\": \"Pulkovo 1942 Gauss-Kruger CM 111E\",\n        \"2510\": \"Pulkovo 1942 Gauss-Kruger CM 117E\",\n        \"2511\": \"Pulkovo 1942 Gauss-Kruger CM 123E\",\n        \"2512\": \"Pulkovo 1942 Gauss-Kruger CM 129E\",\n        \"2513\": \"Pulkovo 1942 Gauss-Kruger CM 135E\",\n        \"2514\": \"Pulkovo 1942 Gauss-Kruger CM 141E\",\n        \"2515\": \"Pulkovo 1942 Gauss-Kruger CM 147E\",\n        \"2516\": \"Pulkovo 1942 Gauss-Kruger CM 153E\",\n        \"2517\": \"Pulkovo 1942 Gauss-Kruger CM 159E\",\n        \"2518\": \"Pulkovo 1942 Gauss-Kruger CM 165E\",\n        \"2519\": \"Pulkovo 1942 Gauss-Kruger CM 171E\",\n        \"2522\": \"Pulkovo 1942 Gauss-Kruger CM 171W\",\n        \"2520\": \"Pulkovo 1942 Gauss-Kruger CM 177E\",\n        \"2521\": \"Pulkovo 1942 Gauss-Kruger CM 177W\",\n        \"2494\": \"Pulkovo 1942 Gauss-Kruger CM 21E\",\n        \"2495\": \"Pulkovo 1942 Gauss-Kruger CM 27E\",\n        \"2496\": \"Pulkovo 1942 Gauss-Kruger CM 33E\",\n        \"2497\": \"Pulkovo 1942 Gauss-Kruger CM 39E\",\n        \"2499\": \"Pulkovo 1942 Gauss-Kruger CM 51E\",\n        \"2500\": \"Pulkovo 1942 Gauss-Kruger CM 57E\",\n        \"2501\": \"Pulkovo 1942 Gauss-Kruger CM 63E\",\n        \"2503\": \"Pulkovo 1942 Gauss-Kruger CM 75E\",\n        \"2504\": \"Pulkovo 1942 Gauss-Kruger CM 81E\",\n        \"2505\": \"Pulkovo 1942 Gauss-Kruger CM 87E\",\n        \"2506\": \"Pulkovo 1942 Gauss-Kruger CM 93E\",\n        \"2507\": \"Pulkovo 1942 Gauss-Kruger CM 99E\",\n        \"2498\": \"Pulkovo 1942 Gauss-Krugerr CM 45E\",\n        \"2502\": \"Pulkovo 1942 Gauss-Krugerr CM 69E\"\n      },\n      \"Pulkovo 1995\": {\n        \"2726\": \"Pulkovo 1995 3 Degree GK CM 102E\",\n        \"2727\": \"Pulkovo 1995 3 Degree GK CM 105E\",\n        \"2728\": \"Pulkovo 1995 3 Degree GK CM 108E\",\n        \"2729\": \"Pulkovo 1995 3 Degree GK CM 111E\",\n        \"2730\": \"Pulkovo 1995 3 Degree GK CM 114E\",\n        \"2731\": \"Pulkovo 1995 3 Degree GK CM 117E\",\n        \"2732\": \"Pulkovo 1995 3 Degree GK CM 120E\",\n        \"2733\": \"Pulkovo 1995 3 Degree GK CM 123E\",\n        \"2734\": \"Pulkovo 1995 3 Degree GK CM 126E\",\n        \"2735\": \"Pulkovo 1995 3 Degree GK CM 129E\",\n        \"2738\": \"Pulkovo 1995 3 Degree GK CM 132E\",\n        \"2739\": \"Pulkovo 1995 3 Degree GK CM 135E\",\n        \"2740\": \"Pulkovo 1995 3 Degree GK CM 138E\",\n        \"2741\": \"Pulkovo 1995 3 Degree GK CM 141E\",\n        \"2742\": \"Pulkovo 1995 3 Degree GK CM 144E\",\n        \"2743\": \"Pulkovo 1995 3 Degree GK CM 147E\",\n        \"2744\": \"Pulkovo 1995 3 Degree GK CM 150E\",\n        \"2745\": \"Pulkovo 1995 3 Degree GK CM 153E\",\n        \"2746\": \"Pulkovo 1995 3 Degree GK CM 156E\",\n        \"2747\": \"Pulkovo 1995 3 Degree GK CM 159E\",\n        \"2748\": \"Pulkovo 1995 3 Degree GK CM 162E\",\n        \"2749\": \"Pulkovo 1995 3 Degree GK CM 165E\",\n        \"2750\": \"Pulkovo 1995 3 Degree GK CM 168E\",\n        \"2758\": \"Pulkovo 1995 3 Degree GK CM 168W\",\n        \"2751\": \"Pulkovo 1995 3 Degree GK CM 171E\",\n        \"2757\": \"Pulkovo 1995 3 Degree GK CM 171W\",\n        \"2752\": \"Pulkovo 1995 3 Degree GK CM 174E\",\n        \"2756\": \"Pulkovo 1995 3 Degree GK CM 174W\",\n        \"2753\": \"Pulkovo 1995 3 Degree GK CM 177E\",\n        \"2755\": \"Pulkovo 1995 3 Degree GK CM 177W\",\n        \"2754\": \"Pulkovo 1995 3 Degree GK CM 180E\",\n        \"3151\": \"Pulkovo 1995 3 Degree GK CM 18E\",\n        \"2699\": \"Pulkovo 1995 3 Degree GK CM 21E\",\n        \"2700\": \"Pulkovo 1995 3 Degree GK CM 24E\",\n        \"2701\": \"Pulkovo 1995 3 Degree GK CM 27E\",\n        \"2702\": \"Pulkovo 1995 3 Degree GK CM 30E\",\n        \"2703\": \"Pulkovo 1995 3 Degree GK CM 33E\",\n        \"2704\": \"Pulkovo 1995 3 Degree GK CM 36E\",\n        \"2705\": \"Pulkovo 1995 3 Degree GK CM 39E\",\n        \"2706\": \"Pulkovo 1995 3 Degree GK CM 42E\",\n        \"2707\": \"Pulkovo 1995 3 Degree GK CM 45E\",\n        \"2708\": \"Pulkovo 1995 3 Degree GK CM 48E\",\n        \"2709\": \"Pulkovo 1995 3 Degree GK CM 51E\",\n        \"2710\": \"Pulkovo 1995 3 Degree GK CM 54E\",\n        \"2711\": \"Pulkovo 1995 3 Degree GK CM 57E\",\n        \"3150\": \"Pulkovo 1995 3 Degree GK CM 6\",\n        \"3390\": \"Pulkovo 1995 3 Degree GK CM 60\",\n        \"2712\": \"Pulkovo 1995 3 Degree GK CM 60E\",\n        \"2713\": \"Pulkovo 1995 3 Degree GK CM 63E\",\n        \"2714\": \"Pulkovo 1995 3 Degree GK CM 66E\",\n        \"2715\": \"Pulkovo 1995 3 Degree GK CM 69E\",\n        \"2716\": \"Pulkovo 1995 3 Degree GK CM 72E\",\n        \"2717\": \"Pulkovo 1995 3 Degree GK CM 75E\",\n        \"2718\": \"Pulkovo 1995 3 Degree GK CM 78E\",\n        \"2719\": \"Pulkovo 1995 3 Degree GK CM 81E\",\n        \"2720\": \"Pulkovo 1995 3 Degree GK CM 84E\",\n        \"2721\": \"Pulkovo 1995 3 Degree GK CM 87E\",\n        \"2722\": \"Pulkovo 1995 3 Degree GK CM 90E\",\n        \"2723\": \"Pulkovo 1995 3 Degree GK CM 93E\",\n        \"2724\": \"Pulkovo 1995 3 Degree GK CM 96E\",\n        \"2725\": \"Pulkovo 1995 3 Degree GK CM 99E\",\n        \"2644\": \"Pulkovo 1995 3 Degree GK Zone 10\",\n        \"2645\": \"Pulkovo 1995 3 Degree GK Zone 11\",\n        \"2646\": \"Pulkovo 1995 3 Degree GK Zone 12\",\n        \"2647\": \"Pulkovo 1995 3 Degree GK Zone 13\",\n        \"2648\": \"Pulkovo 1995 3 Degree GK Zone 14\",\n        \"2649\": \"Pulkovo 1995 3 Degree GK Zone 15\",\n        \"2650\": \"Pulkovo 1995 3 Degree GK Zone 16\",\n        \"2651\": \"Pulkovo 1995 3 Degree GK Zone 17\",\n        \"2652\": \"Pulkovo 1995 3 Degree GK Zone 18\",\n        \"2653\": \"Pulkovo 1995 3 Degree GK Zone 19\",\n        \"2654\": \"Pulkovo 1995 3 Degree GK Zone 20\",\n        \"2655\": \"Pulkovo 1995 3 Degree GK Zone 21\",\n        \"2656\": \"Pulkovo 1995 3 Degree GK Zone 22\",\n        \"2657\": \"Pulkovo 1995 3 Degree GK Zone 23\",\n        \"2658\": \"Pulkovo 1995 3 Degree GK Zone 24\",\n        \"2659\": \"Pulkovo 1995 3 Degree GK Zone 25\",\n        \"2660\": \"Pulkovo 1995 3 Degree GK Zone 26\",\n        \"2661\": \"Pulkovo 1995 3 Degree GK Zone 27\",\n        \"2662\": \"Pulkovo 1995 3 Degree GK Zone 28\",\n        \"2663\": \"Pulkovo 1995 3 Degree GK Zone 29\",\n        \"2664\": \"Pulkovo 1995 3 Degree GK Zone 30\",\n        \"2665\": \"Pulkovo 1995 3 Degree GK Zone 31\",\n        \"2666\": \"Pulkovo 1995 3 Degree GK Zone 32\",\n        \"2667\": \"Pulkovo 1995 3 Degree GK Zone 33\",\n        \"2668\": \"Pulkovo 1995 3 Degree GK Zone 34\",\n        \"2669\": \"Pulkovo 1995 3 Degree GK Zone 35\",\n        \"2670\": \"Pulkovo 1995 3 Degree GK Zone 36\",\n        \"2671\": \"Pulkovo 1995 3 Degree GK Zone 37\",\n        \"2672\": \"Pulkovo 1995 3 Degree GK Zone 38\",\n        \"2673\": \"Pulkovo 1995 3 Degree GK Zone 39\",\n        \"2674\": \"Pulkovo 1995 3 Degree GK Zone 40\",\n        \"2675\": \"Pulkovo 1995 3 Degree GK Zone 41\",\n        \"2676\": \"Pulkovo 1995 3 Degree GK Zone 42\",\n        \"2677\": \"Pulkovo 1995 3 Degree GK Zone 43\",\n        \"2678\": \"Pulkovo 1995 3 Degree GK Zone 44\",\n        \"2679\": \"Pulkovo 1995 3 Degree GK Zone 45\",\n        \"2680\": \"Pulkovo 1995 3 Degree GK Zone 46\",\n        \"2681\": \"Pulkovo 1995 3 Degree GK Zone 47\",\n        \"2682\": \"Pulkovo 1995 3 Degree GK Zone 48\",\n        \"2683\": \"Pulkovo 1995 3 Degree GK Zone 49\",\n        \"2684\": \"Pulkovo 1995 3 Degree GK Zone 50\",\n        \"2685\": \"Pulkovo 1995 3 Degree GK Zone 51\",\n        \"2686\": \"Pulkovo 1995 3 Degree GK Zone 52\",\n        \"2687\": \"Pulkovo 1995 3 Degree GK Zone 53\",\n        \"2688\": \"Pulkovo 1995 3 Degree GK Zone 54\",\n        \"2689\": \"Pulkovo 1995 3 Degree GK Zone 55\",\n        \"2690\": \"Pulkovo 1995 3 Degree GK Zone 56\",\n        \"2691\": \"Pulkovo 1995 3 Degree GK Zone 57\",\n        \"2692\": \"Pulkovo 1995 3 Degree GK Zone 58\",\n        \"2693\": \"Pulkovo 1995 3 Degree GK Zone 59\",\n        \"2695\": \"Pulkovo 1995 3 Degree GK Zone 61\",\n        \"2696\": \"Pulkovo 1995 3 Degree GK Zone 62\",\n        \"2697\": \"Pulkovo 1995 3 Degree GK Zone 63\",\n        \"2698\": \"Pulkovo 1995 3 Degree GK Zone 64\",\n        \"2641\": \"Pulkovo 1995 3 Degree GK Zone 7\",\n        \"2642\": \"Pulkovo 1995 3 Degree GK Zone 8\",\n        \"2643\": \"Pulkovo 1995 3 Degree GK Zone 9\",\n        \"20010\": \"Pulkovo 1995 GK Zone 10\",\n        \"20070\": \"Pulkovo 1995 GK Zone 10N\",\n        \"20011\": \"Pulkovo 1995 GK Zone 11\",\n        \"20071\": \"Pulkovo 1995 GK Zone 11N\",\n        \"20012\": \"Pulkovo 1995 GK Zone 12\",\n        \"20072\": \"Pulkovo 1995 GK Zone 12N\",\n        \"20013\": \"Pulkovo 1995 GK Zone 13\",\n        \"20073\": \"Pulkovo 1995 GK Zone 13N\",\n        \"20014\": \"Pulkovo 1995 GK Zone 14\",\n        \"20074\": \"Pulkovo 1995 GK Zone 14N\",\n        \"20015\": \"Pulkovo 1995 GK Zone 15\",\n        \"20075\": \"Pulkovo 1995 GK Zone 15N\",\n        \"20016\": \"Pulkovo 1995 GK Zone 16\",\n        \"20076\": \"Pulkovo 1995 GK Zone 16N\",\n        \"20017\": \"Pulkovo 1995 GK Zone 17\",\n        \"20077\": \"Pulkovo 1995 GK Zone 17N\",\n        \"20018\": \"Pulkovo 1995 GK Zone 18\",\n        \"20078\": \"Pulkovo 1995 GK Zone 18N\",\n        \"20019\": \"Pulkovo 1995 GK Zone 19\",\n        \"20079\": \"Pulkovo 1995 GK Zone 19N\",\n        \"20002\": \"Pulkovo 1995 GK Zone 2\",\n        \"20020\": \"Pulkovo 1995 GK Zone 20\",\n        \"20080\": \"Pulkovo 1995 GK Zone 20N\",\n        \"20021\": \"Pulkovo 1995 GK Zone 21\",\n        \"20081\": \"Pulkovo 1995 GK Zone 21N\",\n        \"20022\": \"Pulkovo 1995 GK Zone 22\",\n        \"20082\": \"Pulkovo 1995 GK Zone 22N\",\n        \"20023\": \"Pulkovo 1995 GK Zone 23\",\n        \"20083\": \"Pulkovo 1995 GK Zone 23N\",\n        \"20024\": \"Pulkovo 1995 GK Zone 24\",\n        \"20084\": \"Pulkovo 1995 GK Zone 24N\",\n        \"20025\": \"Pulkovo 1995 GK Zone 25\",\n        \"20085\": \"Pulkovo 1995 GK Zone 25N\",\n        \"20026\": \"Pulkovo 1995 GK Zone 26\",\n        \"20086\": \"Pulkovo 1995 GK Zone 26N\",\n        \"20027\": \"Pulkovo 1995 GK Zone 27\",\n        \"20087\": \"Pulkovo 1995 GK Zone 27N\",\n        \"20028\": \"Pulkovo 1995 GK Zone 28\",\n        \"20088\": \"Pulkovo 1995 GK Zone 28N\",\n        \"20029\": \"Pulkovo 1995 GK Zone 29\",\n        \"20089\": \"Pulkovo 1995 GK Zone 29N\",\n        \"20062\": \"Pulkovo 1995 GK Zone 2N\",\n        \"20003\": \"Pulkovo 1995 GK Zone 3\",\n        \"20030\": \"Pulkovo 1995 GK Zone 30\",\n        \"20090\": \"Pulkovo 1995 GK Zone 30N\",\n        \"20031\": \"Pulkovo 1995 GK Zone 31\",\n        \"20091\": \"Pulkovo 1995 GK Zone 31N\",\n        \"20032\": \"Pulkovo 1995 GK Zone 32\",\n        \"20092\": \"Pulkovo 1995 GK Zone 32N\",\n        \"20063\": \"Pulkovo 1995 GK Zone 3N\",\n        \"20004\": \"Pulkovo 1995 GK Zone 4\",\n        \"20064\": \"Pulkovo 1995 GK Zone 4N\",\n        \"20005\": \"Pulkovo 1995 GK Zone 5\",\n        \"20065\": \"Pulkovo 1995 GK Zone 5N\",\n        \"20006\": \"Pulkovo 1995 GK Zone 6\",\n        \"20066\": \"Pulkovo 1995 GK Zone 6N\",\n        \"20007\": \"Pulkovo 1995 GK Zone 7\",\n        \"20067\": \"Pulkovo 1995 GK Zone 7N\",\n        \"20008\": \"Pulkovo 1995 GK Zone 8\",\n        \"20068\": \"Pulkovo 1995 GK Zone 8N\",\n        \"20009\": \"Pulkovo 1995 GK Zone 9\",\n        \"20069\": \"Pulkovo 1995 GK Zone 9N\",\n        \"2477\": \"Pulkovo 1995 Gauss-Kruger CM 105E\",\n        \"2478\": \"Pulkovo 1995 Gauss-Kruger CM 111E\",\n        \"2479\": \"Pulkovo 1995 Gauss-Kruger CM 117E\",\n        \"2480\": \"Pulkovo 1995 Gauss-Kruger CM 123E\",\n        \"2481\": \"Pulkovo 1995 Gauss-Kruger CM 129E\",\n        \"2482\": \"Pulkovo 1995 Gauss-Kruger CM 135E\",\n        \"2483\": \"Pulkovo 1995 Gauss-Kruger CM 141E\",\n        \"2484\": \"Pulkovo 1995 Gauss-Kruger CM 147E\",\n        \"2485\": \"Pulkovo 1995 Gauss-Kruger CM 153E\",\n        \"2486\": \"Pulkovo 1995 Gauss-Kruger CM 159E\",\n        \"2487\": \"Pulkovo 1995 Gauss-Kruger CM 165E\",\n        \"2488\": \"Pulkovo 1995 Gauss-Kruger CM 171E\",\n        \"2491\": \"Pulkovo 1995 Gauss-Kruger CM 171W\",\n        \"2489\": \"Pulkovo 1995 Gauss-Kruger CM 177E\",\n        \"2490\": \"Pulkovo 1995 Gauss-Kruger CM 177W\",\n        \"2463\": \"Pulkovo 1995 Gauss-Kruger CM 21E\",\n        \"2464\": \"Pulkovo 1995 Gauss-Kruger CM 27E\",\n        \"2465\": \"Pulkovo 1995 Gauss-Kruger CM 33E\",\n        \"2466\": \"Pulkovo 1995 Gauss-Kruger CM 39E\",\n        \"2467\": \"Pulkovo 1995 Gauss-Kruger CM 45E\",\n        \"2468\": \"Pulkovo 1995 Gauss-Kruger CM 51E\",\n        \"2469\": \"Pulkovo 1995 Gauss-Kruger CM 57E\",\n        \"2470\": \"Pulkovo 1995 Gauss-Kruger CM 63E\",\n        \"2471\": \"Pulkovo 1995 Gauss-Kruger CM 69E\",\n        \"2472\": \"Pulkovo 1995 Gauss-Kruger CM 75E\",\n        \"2473\": \"Pulkovo 1995 Gauss-Kruger CM 81E\",\n        \"2474\": \"Pulkovo 1995 Gauss-Kruger CM 87E\",\n        \"2475\": \"Pulkovo 1995 Gauss-Kruger CM 93E\",\n        \"2476\": \"Pulkovo 1995 Gauss-Kruger CM 99E\"\n      },\n      Turkey: {\n        \"2207\": \"ED 1950 3 Degree GK Zone 10\",\n        \"2208\": \"ED 1950 3 Degree GK Zone 11\",\n        \"2209\": \"ED 1950 3 Degree GK Zone 12\",\n        \"2210\": \"ED 1950 3 Degree GK Zone 13\",\n        \"2211\": \"ED 1950 3 Degree GK Zone 14\",\n        \"2212\": \"ED 1950 3 Degree GK Zone 15\",\n        \"2206\": \"ED 1950 3 Degree GK Zone 9\"\n      },\n      \"Xian 1980\": {\n        \"2379\": \"Xian 1980 3 Degree GK CM 102E\",\n        \"2380\": \"Xian 1980 3 Degree GK CM 105E\",\n        \"2381\": \"Xian 1980 3 Degree GK CM 108E\",\n        \"2382\": \"Xian 1980 3 Degree GK CM 111E\",\n        \"2383\": \"Xian 1980 3 Degree GK CM 114E\",\n        \"2384\": \"Xian 1980 3 Degree GK CM 117E\",\n        \"2385\": \"Xian 1980 3 Degree GK CM 120E\",\n        \"2386\": \"Xian 1980 3 Degree GK CM 123E\",\n        \"2387\": \"Xian 1980 3 Degree GK CM 126E\",\n        \"2388\": \"Xian 1980 3 Degree GK CM 129E\",\n        \"2389\": \"Xian 1980 3 Degree GK CM 132E\",\n        \"2390\": \"Xian 1980 3 Degree GK CM 135E\",\n        \"2370\": \"Xian 1980 3 Degree GK CM 75E\",\n        \"2371\": \"Xian 1980 3 Degree GK CM 78E\",\n        \"2372\": \"Xian 1980 3 Degree GK CM 81E\",\n        \"2373\": \"Xian 1980 3 Degree GK CM 84E\",\n        \"2374\": \"Xian 1980 3 Degree GK CM 87E\",\n        \"2375\": \"Xian 1980 3 Degree GK CM 90E\",\n        \"2376\": \"Xian 1980 3 Degree GK CM 93E\",\n        \"2377\": \"Xian 1980 3 Degree GK CM 96E\",\n        \"2378\": \"Xian 1980 3 Degree GK CM 99E\",\n        \"2349\": \"Xian 1980 3 Degree GK Zone 25\",\n        \"2350\": \"Xian 1980 3 Degree GK Zone 26\",\n        \"2351\": \"Xian 1980 3 Degree GK Zone 27\",\n        \"2352\": \"Xian 1980 3 Degree GK Zone 28\",\n        \"2353\": \"Xian 1980 3 Degree GK Zone 29\",\n        \"2354\": \"Xian 1980 3 Degree GK Zone 30\",\n        \"2355\": \"Xian 1980 3 Degree GK Zone 31\",\n        \"2356\": \"Xian 1980 3 Degree GK Zone 32\",\n        \"2357\": \"Xian 1980 3 Degree GK Zone 33\",\n        \"2358\": \"Xian 1980 3 Degree GK Zone 34\",\n        \"2359\": \"Xian 1980 3 Degree GK Zone 35\",\n        \"2360\": \"Xian 1980 3 Degree GK Zone 36\",\n        \"2361\": \"Xian 1980 3 Degree GK Zone 37\",\n        \"2362\": \"Xian 1980 3 Degree GK Zone 38\",\n        \"2363\": \"Xian 1980 3 Degree GK Zone 39\",\n        \"2364\": \"Xian 1980 3 Degree GK Zone 40\",\n        \"2365\": \"Xian 1980 3 Degree GK Zone 41\",\n        \"2366\": \"Xian 1980 3 Degree GK Zone 42\",\n        \"2367\": \"Xian 1980 3 Degree GK Zone 43\",\n        \"2368\": \"Xian 1980 3 Degree GK Zone 44\",\n        \"2369\": \"Xian 1980 3 Degree GK Zone 45\",\n        \"2343\": \"Xian 1980 GK CM 105E\",\n        \"2344\": \"Xian 1980 GK CM 111E\",\n        \"2345\": \"Xian 1980 GK CM 117E\",\n        \"2346\": \"Xian 1980 GK CM 123E\",\n        \"2347\": \"Xian 1980 GK CM 129E\",\n        \"2348\": \"Xian 1980 GK CM 135E\",\n        \"2338\": \"Xian 1980 GK CM 75E\",\n        \"2339\": \"Xian 1980 GK CM 81E\",\n        \"2340\": \"Xian 1980 GK CM 87E\",\n        \"2341\": \"Xian 1980 GK CM 93E\",\n        \"2342\": \"Xian 1980 GK CM 99E\",\n        \"2327\": \"Xian 1980 GK Zone 13\",\n        \"2328\": \"Xian 1980 GK Zone 14\",\n        \"2329\": \"Xian 1980 GK Zone 15\",\n        \"2330\": \"Xian 1980 GK Zone 16\",\n        \"2331\": \"Xian 1980 GK Zone 17\",\n        \"2332\": \"Xian 1980 GK Zone 18\",\n        \"2333\": \"Xian 1980 GK Zone 19\",\n        \"2334\": \"Xian 1980 GK Zone 20\",\n        \"2335\": \"Xian 1980 GK Zone 21\",\n        \"2336\": \"Xian 1980 GK Zone 22\",\n        \"2337\": \"Xian 1980 GK Zone 23\"\n      }\n    },\n    \"National Grids\": {\n      Africa: {\n        \"2165\": \"Abidjan 1987 TM 5 NW\",\n        \"2136\": \"Accra Ghana Grid\",\n        \"2137\": \"Accra TM 1 NW\",\n        \"2931\": \"Beduaram TM 13 NE\",\n        \"22091\": \"Camacupa TM 11 30 SE\",\n        \"22092\": \"Camacupa TM 12 SE\",\n        \"2088\": \"Carthage TM 11 NE\",\n        \"3119\": \"Douala 1948 AOF West\",\n        \"22991\": \"Egypt Blue Belt\",\n        \"22994\": \"Egypt Extended Purple Belt\",\n        \"3355\": \"Egypt Gulf of Suez S-650 TL Red Belt\",\n        \"22993\": \"Egypt Purple Belt\",\n        \"22992\": \"Egypt Red Belt\",\n        \"25000\": \"Ghana Metre Grid\",\n        \"3986\": \"Katanga 1955 Katanga Gauss A\",\n        \"3987\": \"Katanga 1955 Katanga Gauss B\",\n        \"3988\": \"Katanga 1955 Katanga Gauss C\",\n        \"3989\": \"Katanga 1955 Katanga Gauss D\",\n        \"4415\": \"Katanga 1955 Katanga Lambert\",\n        \"3315\": \"Katanga 1955 Katanga TM\",\n        \"2164\": \"Locodjo 1965 TM 5 NW\",\n        \"26194\": \"Merchich Sahara Nord\",\n        \"26195\": \"Merchich Sahara Sud\",\n        \"26393\": \"Nigeria East Belt\",\n        \"26392\": \"Nigeria Mid Belt\",\n        \"26391\": \"Nigeria West Belt\",\n        \"102491\": \"Nord Algerie Ancienne (degrees)\",\n        \"30491\": \"Nord Algerie ancienne\",\n        \"26191\": \"Nord Maroc\",\n        \"102191\": \"Nord Maroc (degrees)\",\n        \"30791\": \"Nord Sahara 1959 Voirol Unifie Nord\",\n        \"30792\": \"Nord Sahara 1959 Voirol Unifie Sud\",\n        \"22391\": \"Nord Tunisie\",\n        \"5844\": \"RGRDC 2005 Congo TM Zone 30\",\n        \"9159\": \"RSAO13 TM 12 SE\",\n        \"9156\": \"RSAO13 UTM zone 32S\",\n        \"9157\": \"RSAO13 UTM zone 33S\",\n        \"9158\": \"RSAO13 UTM zone 34S\",\n        \"26193\": \"Sahara\",\n        \"102193\": \"Sahara (degrees)\",\n        \"2159\": \"Sierra Leone 1924 New Colony Grid\",\n        \"2160\": \"Sierra Leone 1924 New War Office Grid\",\n        \"30492\": \"Sud Algerie Ancienne\",\n        \"102492\": \"Sud Algerie Ancienne Degree\",\n        \"26192\": \"Sud Maroc\",\n        \"102192\": \"Sud Maroc (degrees)\",\n        \"22392\": \"Sud Tunisie\",\n        \"29701\": \"Tananarive 1925 (Paris) Laborde Grid\",\n        \"8441\": \"Tananarive 1925 Laborde Grid\",\n        \"30493\": \"Voirol 1879 Nord Algerie Ancienne\",\n        \"30494\": \"Voirol 1879 Sud Algerie Ancienne\",\n        \"5223\": \"WGS 1984 Gabon TM\",\n        \"5523\": \"WGS 1984 Gabon TM 2011\",\n        \"5842\": \"WGS 1984 TM 12 SE\",\n        \"32766\": \"WGS 1984 TM 36 SE\",\n        \"2311\": \"WGS 1984 TM 6 NE\"\n      },\n      Argentina: {\n        \"22191\": \"Argentina Zone 1\",\n        \"22192\": \"Argentina Zone 2\",\n        \"22193\": \"Argentina Zone 3\",\n        \"22194\": \"Argentina Zone 4\",\n        \"22195\": \"Argentina Zone 5\",\n        \"22196\": \"Argentina Zone 6\",\n        \"22197\": \"Argentina Zone 7\",\n        \"2081\": \"Chos Malal 1914 Argentina 2\",\n        \"2083\": \"Hito XVIII 1963 Argentina 2\",\n        \"9252\": \"MMN Argentina 2\",\n        \"9254\": \"MMS Argentina 2\",\n        \"22181\": \"POSGAR 1994 Argentina Zone 1\",\n        \"22182\": \"POSGAR 1994 Argentina Zone 2\",\n        \"22183\": \"POSGAR 1994 Argentina Zone 3\",\n        \"22184\": \"POSGAR 1994 Argentina Zone 4\",\n        \"22185\": \"POSGAR 1994 Argentina Zone 5\",\n        \"22186\": \"POSGAR 1994 Argentina Zone 6\",\n        \"22187\": \"POSGAR 1994 Argentina Zone 7\",\n        \"22171\": \"POSGAR 1998 Argentina Zone 1\",\n        \"22172\": \"POSGAR 1998 Argentina Zone 2\",\n        \"22173\": \"POSGAR 1998 Argentina Zone 3\",\n        \"22174\": \"POSGAR 1998 Argentina Zone 4\",\n        \"22175\": \"POSGAR 1998 Argentina Zone 5\",\n        \"22176\": \"POSGAR 1998 Argentina Zone 6\",\n        \"22177\": \"POSGAR 1998 Argentina Zone 7\",\n        \"5343\": \"POSGAR 2007 Argentina Zone 1\",\n        \"5344\": \"POSGAR 2007 Argentina Zone 2\",\n        \"5345\": \"POSGAR 2007 Argentina Zone 3\",\n        \"5346\": \"POSGAR 2007 Argentina Zone 4\",\n        \"5347\": \"POSGAR 2007 Argentina Zone 5\",\n        \"5348\": \"POSGAR 2007 Argentina Zone 6\",\n        \"5349\": \"POSGAR 2007 Argentina Zone 7\",\n        \"9498\": \"POSGAR 2007 CABA 2019\",\n        \"9284\": \"Pampa del Castillo Argentina 1\",\n        \"2082\": \"Pampa del Castillo Argentina 2\",\n        \"9285\": \"Pampa del Castillo Argentina 3\",\n        \"9249\": \"Tapi Aike Argentina 1\",\n        \"9250\": \"Tapi Aike Argentina 2\"\n      },\n      Asia: {\n        \"102204\": \"Ain el Abd 1970 Aramco Lambert 2\",\n        \"2318\": \"Ain el Abd Aramco Lambert\",\n        \"20499\": \"Bahrain State Grid\",\n        \"5266\": \"DRUKREF 03 Bhutan National Grid\",\n        \"22780\": \"Deir ez Zor Levant Stereographic\",\n        \"22700\": \"Deir ez Zor Levant Zone\",\n        \"22770\": \"Deir ez Zor Syria Lambert\",\n        \"3893\": \"ED 1950 Iraq National Grid\",\n        \"3066\": \"ED 1950 Jordan TM\",\n        \"102061\": \"Everest Modified 1969 RSO Malaya (Meters)\",\n        \"3200\": \"FD 1958 Iraq\",\n        \"2093\": \"Hanoi 1972 GK 106 NE\",\n        \"3407\": \"Hong Kong 1963 Grid System\",\n        \"2326\": \"Hong Kong 1980 Grid\",\n        \"3176\": \"Indian 1960 TM 106NE\",\n        \"2039\": \"Israel TM Grid\",\n        \"6984\": \"Israeli Grid 05\",\n        \"6991\": \"Israeli Grid 05-12\",\n        \"102158\": \"Jordan JTM\",\n        \"31901\": \"KUDAMS KTM\",\n        \"102064\": \"Kandawala Ceylon Belt (Indian Yards 1937)\",\n        \"102063\": \"Kandawala Ceylon Belt (Meters)\",\n        \"5234\": \"Kandawala Sri Lanka Grid\",\n        \"6646\": \"Karbala 1979 Iraq National Grid\",\n        \"24600\": \"Kuwait Oil Co - Lambert\",\n        \"7692\": \"Kyrg-06 TM Zone 1\",\n        \"7693\": \"Kyrg-06 TM Zone 2\",\n        \"7694\": \"Kyrg-06 TM Zone 3\",\n        \"7695\": \"Kyrg-06 TM Zone 4\",\n        \"7696\": \"Kyrg-06 TM Zone 5\",\n        \"8433\": \"Macao 1920 Macao Grid\",\n        \"102448\": \"Macao 2008 Macao Grid\",\n        \"3394\": \"Nahrwan 1934 Iraq Zone\",\n        \"102306\": \"Nepal Nagarkot TM\",\n        \"102159\": \"Observatorio Meteorologico 1965 Macau Grid\",\n        \"5550\": \"PNG94 PNGMG94 Zone 54\",\n        \"5551\": \"PNG94 PNGMG94 Zone 55\",\n        \"5552\": \"PNG94 PNGMG94 Zone 56\",\n        \"3121\": \"PRS 1992 Philippines Zone I\",\n        \"3122\": \"PRS 1992 Philippines Zone II\",\n        \"3123\": \"PRS 1992 Philippines Zone III\",\n        \"3124\": \"PRS 1992 Philippines Zone IV\",\n        \"3125\": \"PRS 1992 Philippines Zone V\",\n        \"28193\": \"Palestine 1923 Israel CS Grid\",\n        \"28192\": \"Palestine 1923 Palestine Belt\",\n        \"28191\": \"Palestine 1923 Palestine Grid\",\n        \"7142\": \"Palestine 1923 Palestine Grid TM\",\n        \"103699\": \"Palestine Grid 1923 Modified TM\",\n        \"25391\": \"Philippines Zone I\",\n        \"25392\": \"Philippines Zone II\",\n        \"25393\": \"Philippines Zone III\",\n        \"25394\": \"Philippines Zone IV\",\n        \"25395\": \"Philippines Zone V\",\n        \"3388\": \"Pulkovo 1942 Caspian Sea Mercator\",\n        \"2932\": \"QND 1995 Qatar National Grid\",\n        \"2099\": \"Qatar 1948 Qatar Grid\",\n        \"28600\": \"Qatar National Grid\",\n        \"2057\": \"Rassadiran Nakhl e Taqi\",\n        \"5235\": \"SLD99 Sri Lanka Grid 1999\",\n        \"3827\": \"TWD 1967 TM Penghu\",\n        \"3828\": \"TWD 1967 TM Taiwan\",\n        \"3825\": \"TWD 1997 TM Penghu\",\n        \"3826\": \"TWD 1997 TM Taiwan\",\n        \"3415\": \"WGS 1972 BE South China Sea Lambert\",\n        \"2094\": \"WGS 1972 TM 106 NE\",\n        \"3997\": \"WGS 1984 Dubai Local TM\"\n      },\n      Australia: {\n        \"102071\": \"AGD 1966 ACT Grid AGC Zone\",\n        \"5825\": \"AGD 1966 ACT Standard Grid\",\n        \"20248\": \"AGD 1966 AMG Zone 48\",\n        \"20249\": \"AGD 1966 AMG Zone 49\",\n        \"20250\": \"AGD 1966 AMG Zone 50\",\n        \"20251\": \"AGD 1966 AMG Zone 51\",\n        \"20252\": \"AGD 1966 AMG Zone 52\",\n        \"20253\": \"AGD 1966 AMG Zone 53\",\n        \"20254\": \"AGD 1966 AMG Zone 54\",\n        \"20255\": \"AGD 1966 AMG Zone 55\",\n        \"20256\": \"AGD 1966 AMG Zone 56\",\n        \"20257\": \"AGD 1966 AMG Zone 57\",\n        \"20258\": \"AGD 1966 AMG Zone 58\",\n        \"102072\": \"AGD 1966 ISG 54 2\",\n        \"102073\": \"AGD 1966 ISG 54 3\",\n        \"102074\": \"AGD 1966 ISG 55 1\",\n        \"102075\": \"AGD 1966 ISG 55 2\",\n        \"102076\": \"AGD 1966 ISG 55 3\",\n        \"102077\": \"AGD 1966 ISG 56 1\",\n        \"102078\": \"AGD 1966 ISG 56 2\",\n        \"102079\": \"AGD 1966 ISG 56 3\",\n        \"3110\": \"AGD 1966 VICGRID\",\n        \"20348\": \"AGD 1984 AMG Zone 48\",\n        \"20349\": \"AGD 1984 AMG Zone 49\",\n        \"20350\": \"AGD 1984 AMG Zone 50\",\n        \"20351\": \"AGD 1984 AMG Zone 51\",\n        \"20352\": \"AGD 1984 AMG Zone 52\",\n        \"20353\": \"AGD 1984 AMG Zone 53\",\n        \"20354\": \"AGD 1984 AMG Zone 54\",\n        \"20355\": \"AGD 1984 AMG Zone 55\",\n        \"20356\": \"AGD 1984 AMG Zone 56\",\n        \"20357\": \"AGD 1984 AMG Zone 57\",\n        \"20358\": \"AGD 1984 AMG Zone 58\",\n        \"3577\": \"GDA 1994 Australia Albers\",\n        \"3113\": \"GDA 1994 BCSG02\",\n        \"6721\": \"GDA 1994 CIG94\",\n        \"6723\": \"GDA 1994 CKIG94\",\n        \"3112\": \"GDA 1994 Geoscience Australia Lambert\",\n        \"6732\": \"GDA 1994 MGA Zone 41\",\n        \"6733\": \"GDA 1994 MGA Zone 42\",\n        \"6734\": \"GDA 1994 MGA Zone 43\",\n        \"6735\": \"GDA 1994 MGA Zone 44\",\n        \"6736\": \"GDA 1994 MGA Zone 46\",\n        \"6737\": \"GDA 1994 MGA Zone 47\",\n        \"28348\": \"GDA 1994 MGA Zone 48\",\n        \"28349\": \"GDA 1994 MGA Zone 49\",\n        \"28350\": \"GDA 1994 MGA Zone 50\",\n        \"28351\": \"GDA 1994 MGA Zone 51\",\n        \"28352\": \"GDA 1994 MGA Zone 52\",\n        \"28353\": \"GDA 1994 MGA Zone 53\",\n        \"28354\": \"GDA 1994 MGA Zone 54\",\n        \"28355\": \"GDA 1994 MGA Zone 55\",\n        \"28356\": \"GDA 1994 MGA Zone 56\",\n        \"28357\": \"GDA 1994 MGA Zone 57\",\n        \"28358\": \"GDA 1994 MGA Zone 58\",\n        \"6738\": \"GDA 1994 MGA Zone 59\",\n        \"3308\": \"GDA 1994 New South Wales Lambert\",\n        \"102216\": \"GDA 1994 PCG94\",\n        \"3107\": \"GDA 1994 South Australia Lambert\",\n        \"3111\": \"GDA 1994 VICGRID94\",\n        \"8391\": \"GDA 1994 WEIPA94\",\n        \"8013\": \"GDA2020 ALB2020\",\n        \"9473\": \"GDA2020 Australian Albers\",\n        \"8016\": \"GDA2020 BCG2020\",\n        \"8014\": \"GDA2020 BIO2020\",\n        \"8015\": \"GDA2020 BRO2020\",\n        \"8017\": \"GDA2020 CARN2020\",\n        \"8018\": \"GDA2020 CIG2020\",\n        \"8019\": \"GDA2020 CKIG2020\",\n        \"8020\": \"GDA2020 COL2020\",\n        \"8021\": \"GDA2020 ESP2020\",\n        \"8022\": \"GDA2020 EXM2020\",\n        \"7845\": \"GDA2020 GA LCC\",\n        \"8023\": \"GDA2020 GCG2020\",\n        \"8024\": \"GDA2020 GOLD2020\",\n        \"8025\": \"GDA2020 JCG2020\",\n        \"8026\": \"GDA2020 KALB2020\",\n        \"8027\": \"GDA2020 KAR2020\",\n        \"8028\": \"GDA2020 KUN2020\",\n        \"8029\": \"GDA2020 LCG2020\",\n        \"7846\": \"GDA2020 MGA Zone 46\",\n        \"7847\": \"GDA2020 MGA Zone 47\",\n        \"7848\": \"GDA2020 MGA Zone 48\",\n        \"7849\": \"GDA2020 MGA Zone 49\",\n        \"7850\": \"GDA2020 MGA Zone 50\",\n        \"7851\": \"GDA2020 MGA Zone 51\",\n        \"7852\": \"GDA2020 MGA Zone 52\",\n        \"7853\": \"GDA2020 MGA Zone 53\",\n        \"7854\": \"GDA2020 MGA Zone 54\",\n        \"7855\": \"GDA2020 MGA Zone 55\",\n        \"7856\": \"GDA2020 MGA Zone 56\",\n        \"7857\": \"GDA2020 MGA Zone 57\",\n        \"7858\": \"GDA2020 MGA Zone 58\",\n        \"7859\": \"GDA2020 MGA Zone 59\",\n        \"8030\": \"GDA2020 MRCG2020\",\n        \"8058\": \"GDA2020 New South Wales Lambert\",\n        \"8031\": \"GDA2020 PCG2020\",\n        \"8032\": \"GDA2020 PHG2020\",\n        \"8059\": \"GDA2020 South Australia Lambert\",\n        \"7899\": \"GDA2020 Vicgrid\",\n        \"4462\": \"WGS 1984 Austalian Centre for Remote Sensing Lambert\",\n        \"6720\": \"WGS 1984 CIG92\",\n        \"6722\": \"WGS 1984 CKIG92\"\n      },\n      Austria: {\n        \"31282\": \"Austria (Ferro) Central Zone\",\n        \"31283\": \"Austria (Ferro) East Zone\",\n        \"31281\": \"Austria (Ferro) West Zone\",\n        \"3416\": \"ETRS 1989 Austria Lambert\",\n        \"31252\": \"MGI (Ferro) Austria GK Central\",\n        \"31253\": \"MGI (Ferro) Austria GK East\",\n        \"31251\": \"MGI (Ferro) Austria GK West\",\n        \"31288\": \"MGI (Ferro) M28\",\n        \"31289\": \"MGI (Ferro) M31\",\n        \"31290\": \"MGI (Ferro) M34\",\n        \"9272\": \"MGI (Greenwich) Austria Central\",\n        \"9273\": \"MGI (Greenwich) Austria East\",\n        \"9271\": \"MGI (Greenwich) Austria West\",\n        \"31255\": \"MGI Austria GK Central\",\n        \"31256\": \"MGI Austria GK East\",\n        \"31257\": \"MGI Austria GK M28\",\n        \"31258\": \"MGI Austria GK M31\",\n        \"31259\": \"MGI Austria GK M34\",\n        \"31254\": \"MGI Austria GK West\",\n        \"31287\": \"MGI Austria Lambert\",\n        \"31284\": \"MGI M28\",\n        \"31285\": \"MGI M31\",\n        \"31286\": \"MGI M34\"\n      },\n      Bangladesh: {\n        \"102954\": \"BUTM2010\",\n        \"102934\": \"Cassini Bangladesh Zone 01 Dinajpur\",\n        \"102935\": \"Cassini Bangladesh Zone 02 Rangpur\",\n        \"102936\": \"Cassini Bangladesh Zone 03 Rajshahi\",\n        \"102937\": \"Cassini Bangladesh Zone 04 Bogura\",\n        \"102938\": \"Cassini Bangladesh Zone 05 Pabna\",\n        \"102939\": \"Cassini Bangladesh Zone 06 Mymensingh\",\n        \"102940\": \"Cassini Bangladesh Zone 07 Dhaka\",\n        \"102941\": \"Cassini Bangladesh Zone 08 Faridpur\",\n        \"102942\": \"Cassini Bangladesh Zone 09 Sylhet\",\n        \"102943\": \"Cassini Bangladesh Zone 10 Kushtia\",\n        \"102944\": \"Cassini Bangladesh Zone 11 Joshore\",\n        \"102945\": \"Cassini Bangladesh Zone 12 Khulna\",\n        \"102946\": \"Cassini Bangladesh Zone 13 Barishal\",\n        \"102947\": \"Cassini Bangladesh Zone 14 Cumilla\",\n        \"102948\": \"Cassini Bangladesh Zone 15 Noakhali\",\n        \"102949\": \"Cassini Bangladesh Zone 16 Chottogram\",\n        \"102950\": \"Cassini Bangladesh Zone 17 CHT\",\n        \"3106\": \"Gulshan 303 Bangladesh TM 90 NE\",\n        \"9678\": \"Gulshan 303 Bangladesh Transverse Mercator\",\n        \"24305\": \"Kalianpur 1937 UTM Zone 45N\",\n        \"24306\": \"Kalianpur 1937 UTM Zone 46N\",\n        \"102951\": \"LCC Bangladesh\",\n        \"102952\": \"LCC Gulshan\",\n        \"102953\": \"UTM Bangladesh (BTM)\",\n        \"102955\": \"UTM Gulshan\",\n        \"9680\": \"WGS 84 TM 90 NE\"\n      },\n      Bhutan: {\n        \"5292\": \"DRUKREF 03 Bumthang TM\",\n        \"5293\": \"DRUKREF 03 Chhukha TM\",\n        \"5294\": \"DRUKREF 03 Dagana TM\",\n        \"5295\": \"DRUKREF 03 Gasa TM\",\n        \"5296\": \"DRUKREF 03 Ha TM\",\n        \"5297\": \"DRUKREF 03 Lhuentse TM\",\n        \"5298\": \"DRUKREF 03 Mongar TM\",\n        \"5299\": \"DRUKREF 03 Paro TM\",\n        \"5300\": \"DRUKREF 03 Pemagatshel TM\",\n        \"5301\": \"DRUKREF 03 Punakha TM\",\n        \"5302\": \"DRUKREF 03 Samdrup Jongkhar TM\",\n        \"5303\": \"DRUKREF 03 Samtse TM\",\n        \"5304\": \"DRUKREF 03 Sarpang TM\",\n        \"5305\": \"DRUKREF 03 Thimphu TM\",\n        \"5306\": \"DRUKREF 03 Trashigang TM\",\n        \"5307\": \"DRUKREF 03 Trongsa TM\",\n        \"5308\": \"DRUKREF 03 Tsirang TM\",\n        \"5309\": \"DRUKREF 03 Wangdue Phodrang TM\",\n        \"5310\": \"DRUKREF 03 Yangtse TM\",\n        \"5311\": \"DRUKREF 03 Zhemgang TM\"\n      },\n      Canada: {\n        \"2294\": \"ATS 1977 MTM 4 Nova Scotia\",\n        \"2295\": \"ATS 1977 MTM 5 Nova Scotia\",\n        \"2200\": \"ATS 1977 New Brunswick Stereographic\",\n        \"102178\": \"NAD 1927 10TM AEP Forest\",\n        \"102179\": \"NAD 1927 10TM AEP Resource\",\n        \"3771\": \"NAD 1927 3TM 111\",\n        \"3772\": \"NAD 1927 3TM 114\",\n        \"3773\": \"NAD 1927 3TM 117\",\n        \"3800\": \"NAD 1927 3TM 120\",\n        \"2016\": \"NAD 1927 CGQ77 MTM 10 SCoPQ\",\n        \"2008\": \"NAD 1927 CGQ77 MTM 2 SCoPQ\",\n        \"2009\": \"NAD 1927 CGQ77 MTM 3 SCoPQ\",\n        \"2010\": \"NAD 1927 CGQ77 MTM 4 SCoPQ\",\n        \"2011\": \"NAD 1927 CGQ77 MTM 5 SCoPQ\",\n        \"2012\": \"NAD 1927 CGQ77 MTM 6 SCoPQ\",\n        \"2013\": \"NAD 1927 CGQ77 MTM 7 SCoPQ\",\n        \"2014\": \"NAD 1927 CGQ77 MTM 8 SCoPQ\",\n        \"2015\": \"NAD 1927 CGQ77 MTM 9 SCoPQ\",\n        \"2138\": \"NAD 1927 CGQ77 Quebec Lambert\",\n        \"2031\": \"NAD 1927 CGQ77 UTM Zone 17N\",\n        \"2032\": \"NAD 1927 CGQ77 UTM Zone 18N\",\n        \"2033\": \"NAD 1927 CGQ77 UTM Zone 19N\",\n        \"2034\": \"NAD 1927 CGQ77 UTM Zone 20N\",\n        \"2035\": \"NAD 1927 CGQ77 UTM Zone 21N\",\n        \"2019\": \"NAD 1927 DEF 1976 MTM 10\",\n        \"2020\": \"NAD 1927 DEF 1976 MTM 11\",\n        \"2021\": \"NAD 1927 DEF 1976 MTM 12\",\n        \"2022\": \"NAD 1927 DEF 1976 MTM 13\",\n        \"2023\": \"NAD 1927 DEF 1976 MTM 14\",\n        \"2024\": \"NAD 1927 DEF 1976 MTM 15\",\n        \"2025\": \"NAD 1927 DEF 1976 MTM 16\",\n        \"2026\": \"NAD 1927 DEF 1976 MTM 17\",\n        \"2017\": \"NAD 1927 DEF 1976 MTM 8\",\n        \"2018\": \"NAD 1927 DEF 1976 MTM 9\",\n        \"2027\": \"NAD 1927 DEF 1976 UTM Zone 15N\",\n        \"2028\": \"NAD 1927 DEF 1976 UTM Zone 16N\",\n        \"2029\": \"NAD 1927 DEF 1976 UTM Zone 17N\",\n        \"2030\": \"NAD 1927 DEF 1976 UTM Zone 18N\",\n        \"32081\": \"NAD 1927 MTM 1\",\n        \"32082\": \"NAD 1927 MTM 2\",\n        \"32083\": \"NAD 1927 MTM 3\",\n        \"32084\": \"NAD 1927 MTM 4\",\n        \"32085\": \"NAD 1927 MTM 5\",\n        \"32086\": \"NAD 1927 MTM 6\",\n        \"7991\": \"NAD 1927 MTM zone 10\",\n        \"3797\": \"NAD 1927 MTQ Lambert\",\n        \"5588\": \"NAD 1927 New Brunswick Stereographic\",\n        \"32098\": \"NAD 1927 Quebec Lambert\",\n        \"8082\": \"NAD 1983 (2011) CSRS v6 MTM Nova Scotia zone 4\",\n        \"8083\": \"NAD 1983 (2011) CSRS v6 MTM Nova Scotia zone 5\",\n        \"103696\": \"NAD 1983 (CSRS) v6 UTM Zone 19N\",\n        \"103697\": \"NAD 1983 (CSRS) v6 UTM Zone 20N\",\n        \"103698\": \"NAD 1983 (CSRS) v6 UTM Zone 21N\",\n        \"3400\": \"NAD 1983 10TM AEP Forest\",\n        \"3401\": \"NAD 1983 10TM AEP Resource\",\n        \"3775\": \"NAD 1983 3TM 111\",\n        \"3776\": \"NAD 1983 3TM 114\",\n        \"3777\": \"NAD 1983 3TM 117\",\n        \"3801\": \"NAD 1983 3TM 120\",\n        \"3005\": \"NAD 1983 BC Environment Albers\",\n        \"3402\": \"NAD 1983 CSRS 10TM AEP Forest\",\n        \"3403\": \"NAD 1983 CSRS 10TM AEP Resource\",\n        \"3779\": \"NAD 1983 CSRS 3TM 111\",\n        \"3780\": \"NAD 1983 CSRS 3TM 114\",\n        \"3781\": \"NAD 1983 CSRS 3TM 117\",\n        \"3802\": \"NAD 1983 CSRS 3TM 120\",\n        \"3153\": \"NAD 1983 CSRS BC Environment Albers\",\n        \"26898\": \"NAD 1983 CSRS MTM  1\",\n        \"26899\": \"NAD 1983 CSRS MTM  2\",\n        \"2944\": \"NAD 1983 CSRS MTM  2 SCoPQ\",\n        \"2945\": \"NAD 1983 CSRS MTM  3\",\n        \"2946\": \"NAD 1983 CSRS MTM  4\",\n        \"2947\": \"NAD 1983 CSRS MTM  5\",\n        \"2948\": \"NAD 1983 CSRS MTM  6\",\n        \"2949\": \"NAD 1983 CSRS MTM  7\",\n        \"2950\": \"NAD 1983 CSRS MTM  8\",\n        \"2951\": \"NAD 1983 CSRS MTM  9\",\n        \"2952\": \"NAD 1983 CSRS MTM 10\",\n        \"26891\": \"NAD 1983 CSRS MTM 11\",\n        \"26892\": \"NAD 1983 CSRS MTM 12\",\n        \"26893\": \"NAD 1983 CSRS MTM 13\",\n        \"26894\": \"NAD 1983 CSRS MTM 14\",\n        \"26895\": \"NAD 1983 CSRS MTM 15\",\n        \"26896\": \"NAD 1983 CSRS MTM 16\",\n        \"26897\": \"NAD 1983 CSRS MTM 17\",\n        \"3799\": \"NAD 1983 CSRS MTQ Lambert\",\n        \"2953\": \"NAD 1983 CSRS New Brunswick Stereographic\",\n        \"3581\": \"NAD 1983 CSRS Northwest Territories Lambert\",\n        \"3162\": \"NAD 1983 CSRS Ontario MNR Lambert\",\n        \"2954\": \"NAD 1983 CSRS Prince Edward Island\",\n        \"6624\": \"NAD 1983 CSRS Quebec Albers\",\n        \"6622\": \"NAD 1983 CSRS Quebec Lambert\",\n        \"3348\": \"NAD 1983 CSRS Statistics Canada Lambert\",\n        \"5321\": \"NAD 1983 CSRS Teranet Ontario Lambert\",\n        \"3157\": \"NAD 1983 CSRS UTM Zone 10N\",\n        \"2955\": \"NAD 1983 CSRS UTM Zone 11N\",\n        \"2956\": \"NAD 1983 CSRS UTM Zone 12N\",\n        \"2957\": \"NAD 1983 CSRS UTM Zone 13N\",\n        \"3158\": \"NAD 1983 CSRS UTM Zone 14N\",\n        \"3159\": \"NAD 1983 CSRS UTM Zone 15N\",\n        \"3160\": \"NAD 1983 CSRS UTM Zone 16N\",\n        \"2958\": \"NAD 1983 CSRS UTM Zone 17N\",\n        \"2959\": \"NAD 1983 CSRS UTM Zone 18N\",\n        \"2960\": \"NAD 1983 CSRS UTM Zone 19N\",\n        \"2961\": \"NAD 1983 CSRS UTM Zone 20N\",\n        \"2962\": \"NAD 1983 CSRS UTM Zone 21N\",\n        \"3761\": \"NAD 1983 CSRS UTM Zone 22N\",\n        \"9709\": \"NAD 1983 CSRS UTM Zone 23N\",\n        \"9713\": \"NAD 1983 CSRS UTM Zone 24N\",\n        \"3154\": \"NAD 1983 CSRS UTM Zone 7N\",\n        \"3155\": \"NAD 1983 CSRS UTM Zone 8N\",\n        \"3156\": \"NAD 1983 CSRS UTM Zone 9N\",\n        \"3579\": \"NAD 1983 CSRS Yukon Albers\",\n        \"32181\": \"NAD 1983 MTM  1\",\n        \"32182\": \"NAD 1983 MTM  2\",\n        \"32180\": \"NAD 1983 MTM  2 SCoPQ\",\n        \"32183\": \"NAD 1983 MTM  3\",\n        \"32184\": \"NAD 1983 MTM  4\",\n        \"32185\": \"NAD 1983 MTM  5\",\n        \"32186\": \"NAD 1983 MTM  6\",\n        \"32187\": \"NAD 1983 MTM  7\",\n        \"32188\": \"NAD 1983 MTM  8\",\n        \"32189\": \"NAD 1983 MTM  9\",\n        \"32190\": \"NAD 1983 MTM 10\",\n        \"32191\": \"NAD 1983 MTM 11\",\n        \"32192\": \"NAD 1983 MTM 12\",\n        \"32193\": \"NAD 1983 MTM 13\",\n        \"32194\": \"NAD 1983 MTM 14\",\n        \"32195\": \"NAD 1983 MTM 15\",\n        \"32196\": \"NAD 1983 MTM 16\",\n        \"32197\": \"NAD 1983 MTM 17\",\n        \"3798\": \"NAD 1983 MTQ Lambert\",\n        \"3580\": \"NAD 1983 Northwest Territories Lambert\",\n        \"3161\": \"NAD 1983 Ontario MNR Lambert\",\n        \"6623\": \"NAD 1983 Quebec Albers\",\n        \"32198\": \"NAD 1983 Quebec Lambert\",\n        \"3347\": \"NAD 1983 Statistics Canada Lambert\",\n        \"5320\": \"NAD 1983 Teranet Ontario Lambert\",\n        \"9712\": \"NAD 1983 UTM Zone 24N\",\n        \"3578\": \"NAD 1983 Yukon Albers\",\n        \"2290\": \"Prince Edward Island Stereographic\"\n      },\n      \"Central and North America\": {\n        \"8908\": \"CR-SIRGAS CRTM05\",\n        \"8909\": \"CR-SIRGAS UTM Zone 16N\",\n        \"8910\": \"CR-SIRGAS UTM Zone 17N\",\n        \"5367\": \"CRTM05\",\n        \"103598\": \"GTM\",\n        \"4484\": \"Mexican Datum 1993 UTM Zone 11N\",\n        \"4485\": \"Mexican Datum 1993 UTM Zone 12N\",\n        \"4486\": \"Mexican Datum 1993 UTM Zone 13N\",\n        \"4487\": \"Mexican Datum 1993 UTM Zone 14N\",\n        \"4488\": \"Mexican Datum 1993 UTM Zone 15N\",\n        \"4489\": \"Mexican Datum 1993 UTM Zone 16N\",\n        \"6372\": \"Mexico ITRF2008 LCC\",\n        \"6362\": \"Mexico ITRF92 LCC\",\n        \"32061\": \"NAD 1927 Guatemala Norte\",\n        \"32062\": \"NAD 1927 Guatemala Sur\",\n        \"102221\": \"Ocotepeque 1935 Costa Rica Lambert Norte\",\n        \"102222\": \"Ocotepeque 1935 Costa Rica Lambert Sur\",\n        \"5456\": \"Ocotepeque 1935 Costa Rica Norte\",\n        \"5457\": \"Ocotepeque 1935 Costa Rica Sur\",\n        \"5460\": \"Ocotepeque 1935 El Salvador Lambert\",\n        \"5559\": \"Ocotepeque 1935 Guatemala Norte\",\n        \"5459\": \"Ocotepeque 1935 Guatemala Sur\",\n        \"5461\": \"Ocotepeque 1935 Nicaragua Norte\",\n        \"5462\": \"Ocotepeque 1935 Nicaragua Sur\",\n        \"5469\": \"Panama-Colon 1911 Panama Lambert\",\n        \"5472\": \"Panama-Colon 1911 Panama Polyconic\",\n        \"5589\": \"Sibun Gorge 1922 Colony Grid\",\n        \"102223\": \"WGS 1984 Costa Rica TM 90\"\n      },\n      \"Democratic Republic of the Congo\": {\n        \"3318\": \"IGC 1962 Congo TM Zone 12\",\n        \"3319\": \"IGC 1962 Congo TM Zone 14\",\n        \"3320\": \"IGC 1962 Congo TM Zone 16\",\n        \"3321\": \"IGC 1962 Congo TM Zone 18\",\n        \"3322\": \"IGC 1962 Congo TM Zone 20\",\n        \"3323\": \"IGC 1962 Congo TM Zone 22\",\n        \"3324\": \"IGC 1962 Congo TM Zone 24\",\n        \"3325\": \"IGC 1962 Congo TM Zone 26\",\n        \"3326\": \"IGC 1962 Congo TM Zone 28\",\n        \"3327\": \"IGC 1962 Congo TM Zone 30\",\n        \"3339\": \"IGCB 1955 Congo TM Zone 12\",\n        \"3340\": \"IGCB 1955 Congo TM Zone 14\",\n        \"3341\": \"IGCB 1955 Congo TM Zone 16\",\n        \"3316\": \"Kasai 1953 Congo TM Zone 22\",\n        \"3317\": \"Kasai 1953 Congo TM Zone 24\",\n        \"4048\": \"RGRDC 2005 Congo TM Zone 12\",\n        \"4049\": \"RGRDC 2005 Congo TM Zone 14\",\n        \"4050\": \"RGRDC 2005 Congo TM Zone 16\",\n        \"4051\": \"RGRDC 2005 Congo TM Zone 18\",\n        \"4056\": \"RGRDC 2005 Congo TM Zone 20\",\n        \"4057\": \"RGRDC 2005 Congo TM Zone 22\",\n        \"4058\": \"RGRDC 2005 Congo TM Zone 24\",\n        \"4059\": \"RGRDC 2005 Congo TM Zone 26\",\n        \"4060\": \"RGRDC 2005 Congo TM Zone 28\"\n      },\n      Europe: {\n        \"9387\": \"AbInvA96 2020 Grid\",\n        \"7801\": \"BGS2005 - CCS2005\",\n        \"21500\": \"Belge Lambert 1950\",\n        \"31370\": \"Belge Lambert 1972\",\n        \"102499\": \"Belge Lambert 1972 (Bad false easting and northing)\",\n        \"3447\": \"Belge Lambert 2005\",\n        \"3812\": \"Belge Lambert 2008\",\n        \"27700\": \"British National Grid\",\n        \"6312\": \"CGRS 1993 Cyprus Local Transverse Mercator\",\n        \"102319\": \"CGRS 1993 LTM\",\n        \"102060\": \"D48 Slovenia TM\",\n        \"102160\": \"Datum 73 Hayford Gauss IGeoE\",\n        \"102161\": \"Datum 73 Hayford Gauss IPCC\",\n        \"27493\": \"Datum 73 Modified Portuguese Grid\",\n        \"9761\": \"ECML14_NB Grid\",\n        \"23090\": \"ED 1950 TM 0 N\",\n        \"23095\": \"ED 1950 TM 5 NE\",\n        \"5627\": \"ED 1950 TM 6 NE\",\n        \"9741\": \"EOS21 Grid\",\n        \"6870\": \"ETRS 1989 Albania 2010\",\n        \"6962\": \"ETRS 1989 Albania LCC 2010\",\n        \"4093\": \"ETRS 1989 DKTM1\",\n        \"4094\": \"ETRS 1989 DKTM2\",\n        \"4095\": \"ETRS 1989 DKTM3\",\n        \"4096\": \"ETRS 1989 DKTM4\",\n        \"5316\": \"ETRS 1989 Faroe TM\",\n        \"3108\": \"ETRS 1989 Guernsey Grid\",\n        \"3109\": \"ETRS 1989 Jersey TM\",\n        \"102157\": \"ETRS 1989 Kosovo Grid\",\n        \"2198\": \"ETRS 1989 Kp2000 Bornholm\",\n        \"2196\": \"ETRS 1989 Kp2000 Jutland\",\n        \"2197\": \"ETRS 1989 Kp2000 Zealand\",\n        \"2176\": \"ETRS 1989 Poland CS2000 Zone 5\",\n        \"2177\": \"ETRS 1989 Poland CS2000 Zone 6\",\n        \"2178\": \"ETRS 1989 Poland CS2000 Zone 7\",\n        \"2179\": \"ETRS 1989 Poland CS2000 Zone 8\",\n        \"2180\": \"ETRS 1989 Poland CS92\",\n        \"3763\": \"ETRS 1989 Portugal TM06\",\n        \"102109\": \"ETRS 1989 Slovenia TM\",\n        \"2213\": \"ETRS 1989 TM 30 NE\",\n        \"25884\": \"ETRS 1989 TM Baltic 1993\",\n        \"102173\": \"ETRS 1989 UWPP 1992\",\n        \"102174\": \"ETRS 1989 UWPP 2000 PAS 5\",\n        \"102175\": \"ETRS 1989 UWPP 2000 PAS 6\",\n        \"102176\": \"ETRS 1989 UWPP 2000 PAS 7\",\n        \"102177\": \"ETRS 1989 UWPP 2000 PAS 8\",\n        \"9766\": \"EWR2 Grid\",\n        \"3301\": \"Estonia 1997 Estonia National Grid\",\n        \"3300\": \"Estonian Coordinate System of 1992\",\n        \"5596\": \"FEH2010 Fehmarnbelt TM\",\n        \"9456\": \"GBK19 Grid\",\n        \"2100\": \"Greek Grid\",\n        \"102070\": \"Guernsey Grid\",\n        \"23700\": \"HD 1972 EOV\",\n        \"102960\": \"HD 1972 EOV (shifted)\",\n        \"9300\": \"HS2 Survey Grid\",\n        \"3766\": \"HTRS96 Croatia LCC\",\n        \"3765\": \"HTRS96 Croatia TM\",\n        \"3058\": \"Helle 1954 Jan Mayen Grid\",\n        \"2157\": \"IRENET95 Irish Tranverse Mercator\",\n        \"3057\": \"ISN 1993 Lambert 1993\",\n        \"5638\": \"ISN 2004 LAEA Europe\",\n        \"5639\": \"ISN 2004 LCC Europe\",\n        \"5325\": \"ISN 2004 Lambert 2004\",\n        \"9039\": \"ISN2016 LAEA Europe\",\n        \"9040\": \"ISN2016 LCC Europe\",\n        \"8088\": \"ISN2016 Lambert 2016\",\n        \"29902\": \"Irish National Grid\",\n        \"9141\": \"KOSOVAREF01 Balkans Zone 7\",\n        \"3059\": \"LKS 1992 Latvia TM\",\n        \"102440\": \"LKS 1992 Latvia TM (FN = 0)\",\n        \"3346\": \"LKS 1994 Lithuania TM\",\n        \"102163\": \"Lisboa Bessel Bonne\",\n        \"102164\": \"Lisboa Hayford Gauss IGeoE\",\n        \"102165\": \"Lisboa Hayford Gauss IPCC\",\n        \"5018\": \"Lisbon (Greenwich) Portuguese Grid New\",\n        \"20791\": \"Lisbon (Lisbon) Portuguese Grid\",\n        \"20790\": \"Lisbon (Lisbon) Portuguese National Grid\",\n        \"102400\": \"London Survey Grid\",\n        \"2169\": \"Luxembourg 1930 Gauss\",\n        \"8677\": \"MGI 1901 Balkans zone 5\",\n        \"8678\": \"MGI 1901 Balkans zone 6\",\n        \"6316\": \"MGI 1901 Balkans zone 7\",\n        \"8679\": \"MGI 1901 Balkans zone 8\",\n        \"3912\": \"MGI 1901 Slovene National Grid\",\n        \"8686\": \"MGI 1901 Slovenia Grid\",\n        \"31265\": \"MGI 3 Degree Gauss Zone 5\",\n        \"31266\": \"MGI 3 Degree Gauss Zone 6\",\n        \"31267\": \"MGI 3 Degree Gauss Zone 7\",\n        \"31268\": \"MGI 3 Degree Gauss Zone 8\",\n        \"31275\": \"MGI Balkans 5\",\n        \"31276\": \"MGI Balkans 6\",\n        \"31277\": \"MGI Balkans 7\",\n        \"31279\": \"MGI Balkans 8\",\n        \"2170\": \"MGI Slovenia Grid\",\n        \"9373\": \"MML07 Grid\",\n        \"4026\": \"MOLDREF99 Moldova TM\",\n        \"6204\": \"Macedonian State Coordinate System\",\n        \"2062\": \"Madrid 1870 Madrid Spain\",\n        \"29901\": \"OSNI 1952 Irish National Grid\",\n        \"5633\": \"PTRA08 LAEA Europe\",\n        \"5632\": \"PTRA08 LCC Europe\",\n        \"3120\": \"Pulkovo 1942 Adj 1958 Poland Zone I\",\n        \"2172\": \"Pulkovo 1942 Adj 1958 Poland Zone II\",\n        \"2173\": \"Pulkovo 1942 Adj 1958 Poland Zone III\",\n        \"2174\": \"Pulkovo 1942 Adj 1958 Poland Zone IV\",\n        \"2175\": \"Pulkovo 1942 Adj 1958 Poland Zone V\",\n        \"3844\": \"Pulkovo 1942 Adj 1958 Stereo 1970\",\n        \"3328\": \"Pulkovo 1942(58) GUGiK-80\",\n        \"28992\": \"RD New\",\n        \"28991\": \"RD Old\",\n        \"5635\": \"REGCAN95 LAEA Europe\",\n        \"5634\": \"REGCAN95 LCC Europe\",\n        \"2400\": \"RT90 2.5 gon West\",\n        \"2065\": \"S-JTSK (Ferro) Krovak\",\n        \"5221\": \"S-JTSK (Ferro) Krovak EastNorth\",\n        \"5513\": \"S-JTSK Krovak\",\n        \"5514\": \"S-JTSK Krovak EastNorth\",\n        \"8352\": \"S-JTSK [JTSK03] Krovak\",\n        \"8353\": \"S-JTSK [JTSK03] Krovak EastNorth\",\n        \"8682\": \"SRB_ETRS89 UTM zone 34N\",\n        \"3794\": \"Slovenia 1996 Slovene National Grid\",\n        \"8687\": \"Slovenia 1996 UTM Zone 33N\",\n        \"31600\": \"Stereo 1933\",\n        \"31700\": \"Stereo 1970\",\n        \"29903\": \"TM75 Irish Grid\",\n        \"9367\": \"TPEN11 Grid\",\n        \"102194\": \"UWPP 1992\",\n        \"102195\": \"UWPP 2000 pas 5\",\n        \"102196\": \"UWPP 2000 pas 6\",\n        \"102197\": \"UWPP 2000 pas 7\",\n        \"102198\": \"UWPP 2000 pas 8\",\n        \"4037\": \"WGS 1984 TMzn35N (N,E)\",\n        \"4038\": \"WGS 1984 TMzn36N (N,E)\",\n        \"Highways England\": {\n          \"102814\": \"OSGB36 Highways England A10H1\",\n          \"102815\": \"OSGB36 Highways England A10H2\",\n          \"102816\": \"OSGB36 Highways England A11H1\",\n          \"102817\": \"OSGB36 Highways England A11H2\",\n          \"102818\": \"OSGB36 Highways England A11H3\",\n          \"102819\": \"OSGB36 Highways England A12H1\",\n          \"102820\": \"OSGB36 Highways England A12H2\",\n          \"102821\": \"OSGB36 Highways England A12H3\",\n          \"102822\": \"OSGB36 Highways England A13H1\",\n          \"102823\": \"OSGB36 Highways England A13H2\",\n          \"102824\": \"OSGB36 Highways England A14H1\",\n          \"102825\": \"OSGB36 Highways England A14H2\",\n          \"102826\": \"OSGB36 Highways England A15H1\",\n          \"102827\": \"OSGB36 Highways England A15H2\",\n          \"102828\": \"OSGB36 Highways England A16H1\",\n          \"102829\": \"OSGB36 Highways England A16H2\",\n          \"102830\": \"OSGB36 Highways England A17H1\",\n          \"102831\": \"OSGB36 Highways England A17H2\",\n          \"102832\": \"OSGB36 Highways England A18H1\",\n          \"102833\": \"OSGB36 Highways England A18H2\",\n          \"102834\": \"OSGB36 Highways England A19H1\",\n          \"102835\": \"OSGB36 Highways England A19H2\",\n          \"102799\": \"OSGB36 Highways England A1H1\",\n          \"102836\": \"OSGB36 Highways England A20H1\",\n          \"102837\": \"OSGB36 Highways England A20H2\",\n          \"102838\": \"OSGB36 Highways England A21H1\",\n          \"102839\": \"OSGB36 Highways England A21H2\",\n          \"102840\": \"OSGB36 Highways England A22H1\",\n          \"102841\": \"OSGB36 Highways England A22H2\",\n          \"102842\": \"OSGB36 Highways England A23H1\",\n          \"102843\": \"OSGB36 Highways England A23H2\",\n          \"102844\": \"OSGB36 Highways England A24H1\",\n          \"102845\": \"OSGB36 Highways England A24H2\",\n          \"102846\": \"OSGB36 Highways England A25H1\",\n          \"102847\": \"OSGB36 Highways England A25H2\",\n          \"102848\": \"OSGB36 Highways England A26H1\",\n          \"102849\": \"OSGB36 Highways England A26H2\",\n          \"102850\": \"OSGB36 Highways England A27H1\",\n          \"102851\": \"OSGB36 Highways England A27H2\",\n          \"102852\": \"OSGB36 Highways England A28H1\",\n          \"102853\": \"OSGB36 Highways England A28H2\",\n          \"102854\": \"OSGB36 Highways England A29H1\",\n          \"102800\": \"OSGB36 Highways England A2H1\",\n          \"102855\": \"OSGB36 Highways England A30H1\",\n          \"102801\": \"OSGB36 Highways England A3H1\",\n          \"102802\": \"OSGB36 Highways England A3H2\",\n          \"102803\": \"OSGB36 Highways England A4H1\",\n          \"102804\": \"OSGB36 Highways England A5H1\",\n          \"102805\": \"OSGB36 Highways England A5H2\",\n          \"102806\": \"OSGB36 Highways England A6H1\",\n          \"102807\": \"OSGB36 Highways England A6H2\",\n          \"102808\": \"OSGB36 Highways England A7H1\",\n          \"102809\": \"OSGB36 Highways England A7H2\",\n          \"102810\": \"OSGB36 Highways England A8H1\",\n          \"102811\": \"OSGB36 Highways England A8H2\",\n          \"102812\": \"OSGB36 Highways England A9H1\",\n          \"102813\": \"OSGB36 Highways England A9H2\",\n          \"102856\": \"OSGB36 Highways England B15H1\",\n          \"102857\": \"OSGB36 Highways England B15H2\",\n          \"102858\": \"OSGB36 Highways England B15H3\",\n          \"102859\": \"OSGB36 Highways England B16H1\",\n          \"102860\": \"OSGB36 Highways England B16H2\",\n          \"102861\": \"OSGB36 Highways England B16H3\",\n          \"102862\": \"OSGB36 Highways England B16H4\",\n          \"102863\": \"OSGB36 Highways England B17H1\",\n          \"102864\": \"OSGB36 Highways England B17H2\",\n          \"102865\": \"OSGB36 Highways England B18H1\",\n          \"102866\": \"OSGB36 Highways England B18H2\",\n          \"102867\": \"OSGB36 Highways England B19H1\",\n          \"102868\": \"OSGB36 Highways England B20H1\",\n          \"102869\": \"OSGB36 Highways England B21H1\",\n          \"102870\": \"OSGB36 Highways England B22H1\",\n          \"102871\": \"OSGB36 Highways England B23H1\",\n          \"102872\": \"OSGB36 Highways England B24H1\",\n          \"102873\": \"OSGB36 Highways England B25H1\",\n          \"102874\": \"OSGB36 Highways England B26H1\",\n          \"102875\": \"OSGB36 Highways England B27H1\",\n          \"102876\": \"OSGB36 Highways England B28H1\",\n          \"102877\": \"OSGB36 Highways England B29H1\",\n          \"102878\": \"OSGB36 Highways England B30H1\",\n          \"102879\": \"OSGB36 Highways England B31H1\",\n          \"102880\": \"OSGB36 Highways England B32H1\",\n          \"102881\": \"OSGB36 Highways England C13H1\",\n          \"102882\": \"OSGB36 Highways England C14H1\",\n          \"102883\": \"OSGB36 Highways England C14H2\",\n          \"102884\": \"OSGB36 Highways England C14H3\",\n          \"102885\": \"OSGB36 Highways England C14H4\",\n          \"102886\": \"OSGB36 Highways England C15H1\",\n          \"102887\": \"OSGB36 Highways England C15H2\",\n          \"102888\": \"OSGB36 Highways England C15H3\",\n          \"102889\": \"OSGB36 Highways England C15H4\",\n          \"102890\": \"OSGB36 Highways England C15H5\",\n          \"102891\": \"OSGB36 Highways England C16H1\",\n          \"102892\": \"OSGB36 Highways England C16H2\",\n          \"102893\": \"OSGB36 Highways England C16H3\",\n          \"102894\": \"OSGB36 Highways England C16H4\",\n          \"102895\": \"OSGB36 Highways England C17H1\",\n          \"102896\": \"OSGB36 Highways England C17H2\",\n          \"102897\": \"OSGB36 Highways England C18H1\",\n          \"102898\": \"OSGB36 Highways England C18H2\",\n          \"102899\": \"OSGB36 Highways England C19H1\",\n          \"102900\": \"OSGB36 Highways England C19H2\"\n        }\n      },\n      Finland: {\n        \"3873\": \"ETRS 1989 GK19FIN\",\n        \"3874\": \"ETRS 1989 GK20FIN\",\n        \"3875\": \"ETRS 1989 GK21FIN\",\n        \"3876\": \"ETRS 1989 GK22FIN\",\n        \"3877\": \"ETRS 1989 GK23FIN\",\n        \"3878\": \"ETRS 1989 GK24FIN\",\n        \"3879\": \"ETRS 1989 GK25FIN\",\n        \"3880\": \"ETRS 1989 GK26FIN\",\n        \"3881\": \"ETRS 1989 GK27FIN\",\n        \"3882\": \"ETRS 1989 GK28FIN\",\n        \"3883\": \"ETRS 1989 GK29FIN\",\n        \"3884\": \"ETRS 1989 GK30FIN\",\n        \"3885\": \"ETRS 1989 GK31FIN\",\n        \"5048\": \"ETRS 1989 TM35FIN (North,East)\",\n        \"3067\": \"EUREF FIN TM35FIN\",\n        \"2391\": \"Finland Zone 1\",\n        \"2392\": \"Finland Zone 2\",\n        \"2393\": \"Finland Zone 3\",\n        \"2394\": \"Finland Zone 4\",\n        \"3386\": \"KKJ Finland Zone 0\",\n        \"3387\": \"KKJ Finland Zone 5\",\n        Replaced: {\n          \"3126\": \"ETRS 1989 ETRS-GK19FIN\",\n          \"3127\": \"ETRS 1989 ETRS-GK20FIN\",\n          \"3128\": \"ETRS 1989 ETRS-GK21FIN\",\n          \"3129\": \"ETRS 1989 ETRS-GK22FIN\",\n          \"3130\": \"ETRS 1989 ETRS-GK23FIN\",\n          \"3131\": \"ETRS 1989 ETRS-GK24FIN\",\n          \"3132\": \"ETRS 1989 ETRS-GK25FIN\",\n          \"3133\": \"ETRS 1989 ETRS-GK26FIN\",\n          \"3134\": \"ETRS 1989 ETRS-GK27FIN\",\n          \"3135\": \"ETRS 1989 ETRS-GK28FIN\",\n          \"3136\": \"ETRS 1989 ETRS-GK29FIN\",\n          \"3137\": \"ETRS 1989 ETRS-GK30FIN\",\n          \"3138\": \"ETRS 1989 ETRS-GK31FIN\"\n        }\n      },\n      France: {\n        \"2192\": \"ED 1950 France EuroLambert\",\n        \"27581\": \"France I\",\n        \"27582\": \"France II\",\n        \"27583\": \"France III\",\n        \"27584\": \"France IV\",\n        \"27592\": \"NTF (Paris) Centre France\",\n        \"27594\": \"NTF (Paris) Corse\",\n        \"27562\": \"NTF (Paris) Lambert Centre France\",\n        \"27564\": \"NTF (Paris) Lambert Corse\",\n        \"27561\": \"NTF (Paris) Lambert Nord France\",\n        \"27563\": \"NTF (Paris) Lambert Sud France\",\n        \"27571\": \"NTF (Paris) Lambert Zone I\",\n        \"27572\": \"NTF (Paris) Lambert Zone II\",\n        \"27573\": \"NTF (Paris) Lambert Zone III\",\n        \"27574\": \"NTF (Paris) Lambert Zone IV\",\n        \"27591\": \"NTF (Paris) Nord France\",\n        \"27593\": \"NTF (Paris) Sud France\",\n        \"102581\": \"NTF France I (degrees)\",\n        \"102582\": \"NTF France II (degrees)\",\n        \"102583\": \"NTF France III (degrees)\",\n        \"102584\": \"NTF France IV (degrees)\",\n        \"102585\": \"NTF Lambert Zone I\",\n        \"102586\": \"NTF Lambert Zone II\",\n        \"102587\": \"NTF Lambert Zone III\",\n        \"102588\": \"NTF Lambert Zone IV\",\n        \"27500\": \"Nord de Guerre\",\n        \"3942\": \"RGF 1993 CC42\",\n        \"3943\": \"RGF 1993 CC43\",\n        \"3944\": \"RGF 1993 CC44\",\n        \"3945\": \"RGF 1993 CC45\",\n        \"3946\": \"RGF 1993 CC46\",\n        \"3947\": \"RGF 1993 CC47\",\n        \"3948\": \"RGF 1993 CC48\",\n        \"3949\": \"RGF 1993 CC49\",\n        \"3950\": \"RGF 1993 CC50\",\n        \"2154\": \"RGF 1993 Lambert-93\"\n      },\n      Germany: {\n        \"5682\": \"DB_REF 3-Degree GK Zone 2 (E-N)\",\n        \"5683\": \"DB_REF 3-Degree GK Zone 3 (E-N)\",\n        \"5684\": \"DB_REF 3-Degree GK Zone 4 (E-N)\",\n        \"5685\": \"DB_REF 3-Degree GK Zone 5 (E-N)\",\n        \"5680\": \"DHDN 3-Degree GK Zone 1 (E-N)\",\n        \"5676\": \"DHDN 3-Degree GK Zone 2 (E-N)\",\n        \"5677\": \"DHDN 3-Degree GK Zone 3 (E-N)\",\n        \"5678\": \"DHDN 3-Degree GK Zone 4 (E-N)\",\n        \"5679\": \"DHDN 3-Degree GK Zone 5 (E-N)\",\n        \"5520\": \"DHDN 3-Degree Gauss Zone 1\",\n        \"31466\": \"DHDN 3-Degree Gauss Zone 2\",\n        \"31467\": \"DHDN 3-Degree Gauss Zone 3\",\n        \"31468\": \"DHDN 3-Degree Gauss Zone 4\",\n        \"31469\": \"DHDN 3-Degree Gauss Zone 5\",\n        \"3068\": \"DHDN Soldner Berlin\",\n        \"8395\": \"ETRS 1989 GK CM 9E\",\n        \"5243\": \"ETRS 1989 LCC Germany (E-N)\",\n        \"4839\": \"ETRS 1989 LCC Germany (N-E)\",\n        \"5651\": \"ETRS 1989 UTM Zone 31N (N-zE)\",\n        \"5649\": \"ETRS 1989 UTM Zone 31N (zE-N)\",\n        \"5652\": \"ETRS 1989 UTM Zone 32N (N-zE)\",\n        \"102328\": \"ETRS 1989 UTM Zone 32N 7stellen\",\n        \"102329\": \"ETRS 1989 UTM Zone 32N 8stellen\",\n        \"5653\": \"ETRS 1989 UTM Zone 33N (N-zE)\",\n        \"5650\": \"ETRS 1989 UTM Zone 33N (zE-N)\",\n        \"102359\": \"ETRS 1989 UTM Zone 33N 7stellen\",\n        \"102360\": \"ETRS 1989 UTM Zone 33N 8stellen\",\n        \"4647\": \"ETRS 1989 UTM Zone N32\",\n        \"31491\": \"Germany Zone 1\",\n        \"31492\": \"Germany Zone 2\",\n        \"31493\": \"Germany Zone 3\",\n        \"31494\": \"Germany Zone 4\",\n        \"31495\": \"Germany Zone 5\",\n        \"3396\": \"PD 83 3-Degree GK Zone 3 (N-E)\",\n        \"3397\": \"PD 83 3-Degree GK Zone 4 (N-E)\",\n        \"5666\": \"PD 83 GK Zone 3 (E-N)\",\n        \"5667\": \"PD 83 GK Zone 4 (E-N)\",\n        \"3398\": \"RD 83 3-Degree GK Zone 4\",\n        \"5668\": \"RD 83 3-Degree GK Zone 4 (E-N)\",\n        \"3399\": \"RD 83 3-Degree GK Zone 5\",\n        \"5669\": \"RD 83 3-Degree GK Zone 5 (E-N)\"\n      },\n      \"Indian Subcontinent\": {\n        \"24370\": \"Kalianpur 1880 India Zone 0\",\n        \"24371\": \"Kalianpur 1880 India Zone I\",\n        \"24373\": \"Kalianpur 1880 India Zone III\",\n        \"24372\": \"Kalianpur 1880 India Zone IIa\",\n        \"24382\": \"Kalianpur 1880 India Zone IIb\",\n        \"24374\": \"Kalianpur 1880 India Zone IV\",\n        \"24375\": \"Kalianpur 1937 India Zone IIb\",\n        \"24305\": \"Kalianpur 1937 UTM Zone 45N\",\n        \"24306\": \"Kalianpur 1937 UTM Zone 46N\",\n        \"24376\": \"Kalianpur 1962 India Zone I\",\n        \"24377\": \"Kalianpur 1962 India Zone IIa\",\n        \"24311\": \"Kalianpur 1962 UTM Zone 41N\",\n        \"24312\": \"Kalianpur 1962 UTM Zone 42N\",\n        \"24313\": \"Kalianpur 1962 UTM Zone 43N\",\n        \"24378\": \"Kalianpur 1975 India Zone I\",\n        \"24381\": \"Kalianpur 1975 India Zone III\",\n        \"24379\": \"Kalianpur 1975 India Zone IIa\",\n        \"24380\": \"Kalianpur 1975 India Zone IIb\",\n        \"24383\": \"Kalianpur 1975 India Zone IV\",\n        \"24342\": \"Kalianpur 1975 UTM Zone 42N\",\n        \"24343\": \"Kalianpur 1975 UTM Zone 43N\",\n        \"24344\": \"Kalianpur 1975 UTM Zone 44N\",\n        \"24345\": \"Kalianpur 1975 UTM Zone 45N\",\n        \"24346\": \"Kalianpur 1975 UTM Zone 46N\",\n        \"24347\": \"Kalianpur 1975 UTM Zone 47N\",\n        \"7777\": \"WGS 1984 Andaman and Nicobar Islands\",\n        \"7756\": \"WGS 1984 Andhra Pradesh\",\n        \"7757\": \"WGS 1984 Arunachal Pradesh\",\n        \"7758\": \"WGS 1984 Assam\",\n        \"7759\": \"WGS 1984 Bihar\",\n        \"7778\": \"WGS 1984 Chhattisgarh\",\n        \"7760\": \"WGS 1984 Delhi\",\n        \"7779\": \"WGS 1984 Goa\",\n        \"7761\": \"WGS 1984 Gujarat\",\n        \"7762\": \"WGS 1984 Haryana\",\n        \"7763\": \"WGS 1984 Himachal Pradesh\",\n        \"7755\": \"WGS 1984 India NSF LCC\",\n        \"7771\": \"WGS 1984 India Northeast\",\n        \"7764\": \"WGS 1984 Jammu and Kashmir\",\n        \"7765\": \"WGS 1984 Jharkhand\",\n        \"7780\": \"WGS 1984 Karnataka\",\n        \"7781\": \"WGS 1984 Kerala\",\n        \"7782\": \"WGS 1984 Lakshadweep\",\n        \"7766\": \"WGS 1984 Madhya Pradesh\",\n        \"7767\": \"WGS 1984 Maharashtra\",\n        \"7768\": \"WGS 1984 Manipur\",\n        \"7769\": \"WGS 1984 Meghalaya\",\n        \"7783\": \"WGS 1984 Mizoram\",\n        \"7770\": \"WGS 1984 Nagaland\",\n        \"7772\": \"WGS 1984 Orissa\",\n        \"7773\": \"WGS 1984 Punjab\",\n        \"7774\": \"WGS 1984 Rajasthan\",\n        \"7784\": \"WGS 1984 Sikkim\",\n        \"7785\": \"WGS 1984 Tamil Nadu\",\n        \"7786\": \"WGS 1984 Tripura\",\n        \"7775\": \"WGS 1984 Uttar Pradesh\",\n        \"7776\": \"WGS 1984 Uttaranchal\",\n        \"7787\": \"WGS 1984 West Bengal\"\n      },\n      Indonesia: {\n        \"5330\": \"Batavia (Jakarta) NEIEZ\",\n        \"3001\": \"Batavia NEIEZ\",\n        \"2308\": \"Batavia TM 109 SE\",\n        \"23830\": \"DGN 1995 Indonesia TM-3 Zone 46 2\",\n        \"23831\": \"DGN 1995 Indonesia TM-3 Zone 47 1\",\n        \"23832\": \"DGN 1995 Indonesia TM-3 Zone 47 2\",\n        \"23833\": \"DGN 1995 Indonesia TM-3 Zone 48 1\",\n        \"23834\": \"DGN 1995 Indonesia TM-3 Zone 48 2\",\n        \"23835\": \"DGN 1995 Indonesia TM-3 Zone 49 1\",\n        \"23836\": \"DGN 1995 Indonesia TM-3 Zone 49 2\",\n        \"23837\": \"DGN 1995 Indonesia TM-3 Zone 50 1\",\n        \"23838\": \"DGN 1995 Indonesia TM-3 Zone 50 2\",\n        \"23839\": \"DGN 1995 Indonesia TM-3 Zone 51 1\",\n        \"23840\": \"DGN 1995 Indonesia TM-3 Zone 51 2\",\n        \"23841\": \"DGN 1995 Indonesia TM-3 Zone 52 1\",\n        \"23842\": \"DGN 1995 Indonesia TM-3 Zone 52 2\",\n        \"23843\": \"DGN 1995 Indonesia TM-3 Zone 53 1\",\n        \"23844\": \"DGN 1995 Indonesia TM-3 Zone 53 2\",\n        \"23845\": \"DGN 1995 Indonesia TM-3 Zone 54 1\",\n        \"3000\": \"Gunung Segara NEIEZ\",\n        \"5331\": \"Makassar (Jakarta) NEIEZ\",\n        \"3002\": \"Makassar NEIEZ\",\n        \"9476\": \"SRGI2013 UTM zone 46N\",\n        \"9477\": \"SRGI2013 UTM zone 47N\",\n        \"9487\": \"SRGI2013 UTM zone 47S\",\n        \"9478\": \"SRGI2013 UTM zone 48N\",\n        \"9488\": \"SRGI2013 UTM zone 48S\",\n        \"9479\": \"SRGI2013 UTM zone 49N\",\n        \"9489\": \"SRGI2013 UTM zone 49S\",\n        \"9480\": \"SRGI2013 UTM zone 50N\",\n        \"9490\": \"SRGI2013 UTM zone 50S\",\n        \"9481\": \"SRGI2013 UTM zone 51N\",\n        \"9491\": \"SRGI2013 UTM zone 51S\",\n        \"9482\": \"SRGI2013 UTM zone 52N\",\n        \"9492\": \"SRGI2013 UTM zone 52S\",\n        \"9493\": \"SRGI2013 UTM zone 53S\",\n        \"9494\": \"SRGI2013 UTM zone 54S\",\n        \"5329\": \"Segara (Jakarta) NEIEZ\",\n        \"2309\": \"WGS 1984 TM 116 SE\",\n        \"2310\": \"WGS 1984 TM 132 SE\"\n      },\n      Italy: {\n        \"9716\": \"IGM95 UTM Zone 34N\",\n        \"26591\": \"Monte Mario (Rome) Italy 1\",\n        \"26592\": \"Monte Mario (Rome) Italy 2\",\n        \"3003\": \"Monte Mario Italy 1\",\n        \"3004\": \"Monte Mario Italy 2\",\n        \"5659\": \"Monte Mario TM Emilia-Romagna\",\n        \"6875\": \"RDN2008 Italy zone\",\n        \"7794\": \"RDN2008 Italy zone (E-N)\",\n        \"7795\": \"RDN2008 Italy zone 12 (E-N)\",\n        \"6707\": \"RDN2008 TM32\",\n        \"6708\": \"RDN2008 TM33\",\n        \"6709\": \"RDN2008 TM34\",\n        \"7791\": \"RDN2008 UTM zone 32N\",\n        \"7792\": \"RDN2008 UTM zone 33N\",\n        \"7793\": \"RDN2008 UTM zone 34N\",\n        \"6876\": \"RDN2008 Zone 12\",\n        \"102093\": \"Roma 1940 Gauss Boaga Est\",\n        \"102094\": \"Roma 1940 Gauss Boaga Ovest\"\n      },\n      Japan: {\n        \"2443\": \"JGD 2000 Japan Zone  1\",\n        \"2444\": \"JGD 2000 Japan Zone  2\",\n        \"2445\": \"JGD 2000 Japan Zone  3\",\n        \"2446\": \"JGD 2000 Japan Zone  4\",\n        \"2447\": \"JGD 2000 Japan Zone  5\",\n        \"2448\": \"JGD 2000 Japan Zone  6\",\n        \"2449\": \"JGD 2000 Japan Zone  7\",\n        \"2450\": \"JGD 2000 Japan Zone  8\",\n        \"2451\": \"JGD 2000 Japan Zone  9\",\n        \"2452\": \"JGD 2000 Japan Zone 10\",\n        \"2453\": \"JGD 2000 Japan Zone 11\",\n        \"2454\": \"JGD 2000 Japan Zone 12\",\n        \"2455\": \"JGD 2000 Japan Zone 13\",\n        \"2456\": \"JGD 2000 Japan Zone 14\",\n        \"2457\": \"JGD 2000 Japan Zone 15\",\n        \"2458\": \"JGD 2000 Japan Zone 16\",\n        \"2459\": \"JGD 2000 Japan Zone 17\",\n        \"2460\": \"JGD 2000 Japan Zone 18\",\n        \"2461\": \"JGD 2000 Japan Zone 19\",\n        \"6669\": \"JGD 2011 Japan Zone  1\",\n        \"6670\": \"JGD 2011 Japan Zone  2\",\n        \"6671\": \"JGD 2011 Japan Zone  3\",\n        \"6672\": \"JGD 2011 Japan Zone  4\",\n        \"6673\": \"JGD 2011 Japan Zone  5\",\n        \"6674\": \"JGD 2011 Japan Zone  6\",\n        \"6675\": \"JGD 2011 Japan Zone  7\",\n        \"6676\": \"JGD 2011 Japan Zone  8\",\n        \"6677\": \"JGD 2011 Japan Zone  9\",\n        \"6678\": \"JGD 2011 Japan Zone 10\",\n        \"6679\": \"JGD 2011 Japan Zone 11\",\n        \"6680\": \"JGD 2011 Japan Zone 12\",\n        \"6681\": \"JGD 2011 Japan Zone 13\",\n        \"6682\": \"JGD 2011 Japan Zone 14\",\n        \"6683\": \"JGD 2011 Japan Zone 15\",\n        \"6684\": \"JGD 2011 Japan Zone 16\",\n        \"6685\": \"JGD 2011 Japan Zone 17\",\n        \"6686\": \"JGD 2011 Japan Zone 18\",\n        \"6687\": \"JGD 2011 Japan Zone 19\",\n        \"30161\": \"Japan Zone  1\",\n        \"30162\": \"Japan Zone  2\",\n        \"30163\": \"Japan Zone  3\",\n        \"30164\": \"Japan Zone  4\",\n        \"30165\": \"Japan Zone  5\",\n        \"30166\": \"Japan Zone  6\",\n        \"30167\": \"Japan Zone  7\",\n        \"30168\": \"Japan Zone  8\",\n        \"30169\": \"Japan Zone  9\",\n        \"30170\": \"Japan Zone 10\",\n        \"30171\": \"Japan Zone 11\",\n        \"30172\": \"Japan Zone 12\",\n        \"30173\": \"Japan Zone 13\",\n        \"30174\": \"Japan Zone 14\",\n        \"30175\": \"Japan Zone 15\",\n        \"30176\": \"Japan Zone 16\",\n        \"30177\": \"Japan Zone 17\",\n        \"30178\": \"Japan Zone 18\",\n        \"30179\": \"Japan Zone 19\"\n      },\n      Libya: {\n        \"2068\": \"ELD 1979 Libya  5\",\n        \"2069\": \"ELD 1979 Libya  6\",\n        \"2070\": \"ELD 1979 Libya  7\",\n        \"2071\": \"ELD 1979 Libya  8\",\n        \"2072\": \"ELD 1979 Libya  9\",\n        \"2073\": \"ELD 1979 Libya 10\",\n        \"2074\": \"ELD 1979 Libya 11\",\n        \"2075\": \"ELD 1979 Libya 12\",\n        \"2076\": \"ELD 1979 Libya 13\",\n        \"2087\": \"ELD 1979 TM 12 NE\",\n        \"3177\": \"LGD2006 Libya TM\",\n        \"3190\": \"LGD2006 Libya TM Zone  5\",\n        \"3191\": \"LGD2006 Libya TM Zone  6\",\n        \"3192\": \"LGD2006 Libya TM Zone  7\",\n        \"3193\": \"LGD2006 Libya TM Zone  8\",\n        \"3194\": \"LGD2006 Libya TM Zone  9\",\n        \"3195\": \"LGD2006 Libya TM Zone 10\",\n        \"3196\": \"LGD2006 Libya TM Zone 11\",\n        \"3197\": \"LGD2006 Libya TM Zone 12\",\n        \"3198\": \"LGD2006 Libya TM Zone 13\"\n      },\n      \"Malaysia and Singapore\": {\n        \"5247\": \"GDBD2009 GEORSO\",\n        \"3376\": \"GDM 2000 BRSO\",\n        \"3377\": \"GDM 2000 Johor\",\n        \"3383\": \"GDM 2000 Kedah and Perlis\",\n        \"3385\": \"GDM 2000 Kelantan\",\n        \"3375\": \"GDM 2000 MRSO\",\n        \"3378\": \"GDM 2000 Negeri Sembilan and Melaka\",\n        \"3379\": \"GDM 2000 Pahang\",\n        \"3384\": \"GDM 2000 Perak\",\n        \"3382\": \"GDM 2000 Pulau Pinang and Seberang Perai\",\n        \"3380\": \"GDM 2000 Selangor\",\n        \"3381\": \"GDM 2000 Terengganu\",\n        \"3167\": \"Kertau (RSO) RSO Malaya (Chains 1922 Truncated)\",\n        \"3168\": \"Kertau (RSO) RSO Malaya (Meters)\",\n        \"4390\": \"Kertau 1968 Johor Grid\",\n        \"4396\": \"Kertau 1968 Kedah and Perlis Grid\",\n        \"4398\": \"Kertau 1968 Kelantan Grid\",\n        \"4392\": \"Kertau 1968 Pahang Grid\",\n        \"4397\": \"Kertau 1968 Perak Revised Grid\",\n        \"4395\": \"Kertau 1968 Pinang Grid\",\n        \"4393\": \"Kertau 1968 Selangor Grid\",\n        \"4391\": \"Kertau 1968 Sembilan and Melaka Grid\",\n        \"4394\": \"Kertau 1968 Terengganu Grid\",\n        \"24571\": \"Kertau RSO Malaya (Benoit Chains 1895 B)\",\n        \"102062\": \"Kertau RSO Malaya (Meters)\",\n        \"24500\": \"Kertau Singapore Grid\",\n        \"3414\": \"SVY21 Singapore TM\",\n        \"29873\": \"Timbalai 1948 RSO Borneo (Meters)\",\n        \"29871\": \"Timbalai 1948 RSO Borneo (Sears Chains)\",\n        \"29872\": \"Timbalai 1948 RSO Borneo (Sears Feet)\",\n        \"29874\": \"Timbalai 1948 RSO Sarawak LSD (Meters)\"\n      },\n      \"New Zealand\": {\n        \"5518\": \"Chatham Island 1971 Map Grid\",\n        \"5519\": \"Chatham Islands 1979 Map Grid\",\n        \"27219\": \"NZGD 1949 Amuri Circuit\",\n        \"27206\": \"NZGD 1949 Bay of Plenty Circuit\",\n        \"27232\": \"NZGD 1949 Bluff Circuit\",\n        \"27217\": \"NZGD 1949 Buller Circuit\",\n        \"27214\": \"NZGD 1949 Collingwood Circuit\",\n        \"27225\": \"NZGD 1949 Gawler Circuit\",\n        \"27218\": \"NZGD 1949 Grey Circuit\",\n        \"27208\": \"NZGD 1949 Hawkes Bay Circuit\",\n        \"27221\": \"NZGD 1949 Hokitika Circuit\",\n        \"27223\": \"NZGD 1949 Jacksons Bay Circuit\",\n        \"27216\": \"NZGD 1949 Karamea Circuit\",\n        \"27227\": \"NZGD 1949 Lindis Peak Circuit\",\n        \"27220\": \"NZGD 1949 Marlborough Circuit\",\n        \"27205\": \"NZGD 1949 Mount Eden Circuit\",\n        \"27228\": \"NZGD 1949 Mount Nicholas Circuit\",\n        \"27224\": \"NZGD 1949 Mount Pleasant Circuit\",\n        \"27229\": \"NZGD 1949 Mount York Circuit\",\n        \"27215\": \"NZGD 1949 Nelson Circuit\",\n        \"27231\": \"NZGD 1949 North Taieri Circuit\",\n        \"27230\": \"NZGD 1949 Observation Point Circuit\",\n        \"27222\": \"NZGD 1949 Okarito Circuit\",\n        \"27207\": \"NZGD 1949 Poverty Bay Circuit\",\n        \"27209\": \"NZGD 1949 Taranaki Circuit\",\n        \"27226\": \"NZGD 1949 Timaru Circuit\",\n        \"27210\": \"NZGD 1949 Tuhirangi Circuit\",\n        \"27258\": \"NZGD 1949 UTM Zone 58S\",\n        \"27259\": \"NZGD 1949 UTM Zone 59S\",\n        \"27260\": \"NZGD 1949 UTM Zone 60S\",\n        \"27212\": \"NZGD 1949 Wairarapa Circuit\",\n        \"27211\": \"NZGD 1949 Wanganui Circuit\",\n        \"27213\": \"NZGD 1949 Wellington Circuit\",\n        \"2119\": \"NZGD 2000 Amuri Circuit\",\n        \"3790\": \"NZGD 2000 Antipodes Islands TM 2000\",\n        \"3788\": \"NZGD 2000 Auckland Islands TM 2000\",\n        \"2106\": \"NZGD 2000 Bay of Plenty Circuit\",\n        \"2132\": \"NZGD 2000 Bluff Circuit\",\n        \"2117\": \"NZGD 2000 Buller Circuit\",\n        \"3789\": \"NZGD 2000 Campbell Island TM 2000\",\n        \"3764\": \"NZGD 2000 Chatham Island Circuit\",\n        \"3793\": \"NZGD 2000 Chatham Islands TM 2000\",\n        \"2114\": \"NZGD 2000 Collingwood Circuit\",\n        \"2125\": \"NZGD 2000 Gawler Circuit\",\n        \"2118\": \"NZGD 2000 Grey Circuit\",\n        \"2108\": \"NZGD 2000 Hawkes Bay Circuit\",\n        \"2121\": \"NZGD 2000 Hokitika Circuit\",\n        \"2123\": \"NZGD 2000 Jacksons Bay Circuit\",\n        \"2116\": \"NZGD 2000 Karamea Circuit\",\n        \"2127\": \"NZGD 2000 Lindis Peak Circuit\",\n        \"2120\": \"NZGD 2000 Marlborough Circuit\",\n        \"2105\": \"NZGD 2000 Mount Eden Circuit\",\n        \"2128\": \"NZGD 2000 Mount Nicholas Circuit\",\n        \"2124\": \"NZGD 2000 Mount Pleasant Circuit\",\n        \"2129\": \"NZGD 2000 Mount York Circuit\",\n        \"3851\": \"NZGD 2000 NZ Continental Shelf 2000\",\n        \"2115\": \"NZGD 2000 Nelson Circuit\",\n        \"2193\": \"NZGD 2000 New Zealand Transverse Mercator\",\n        \"2131\": \"NZGD 2000 North Taieri Circuit\",\n        \"2130\": \"NZGD 2000 Observation Point Circuit\",\n        \"2122\": \"NZGD 2000 Okarito Circuit\",\n        \"2107\": \"NZGD 2000 Poverty Bay Circuit\",\n        \"3791\": \"NZGD 2000 Raoul Island TM 2000\",\n        \"2109\": \"NZGD 2000 Taranaki Circuit\",\n        \"2126\": \"NZGD 2000 Timaru Circuit\",\n        \"2110\": \"NZGD 2000 Tuhirangi Circuit\",\n        \"5700\": \"NZGD 2000 UTM Zone 1S\",\n        \"2133\": \"NZGD 2000 UTM Zone 58S\",\n        \"2134\": \"NZGD 2000 UTM Zone 59S\",\n        \"2135\": \"NZGD 2000 UTM Zone 60S\",\n        \"2112\": \"NZGD 2000 Wairarapa Circuit\",\n        \"2111\": \"NZGD 2000 Wanganui Circuit\",\n        \"2113\": \"NZGD 2000 Wellington Circuit\",\n        \"27200\": \"New Zealand Map Grid\",\n        \"27291\": \"New Zealand North Island\",\n        \"27292\": \"New Zealand South Island\",\n        \"3994\": \"WGS 1984 Mercator 41\",\n        \"9191\": \"WGS 1984 NIWA Albers\"\n      },\n      Norway: {\n        \"5110\": \"ETRS 1989 NTM Zone 10\",\n        \"5111\": \"ETRS 1989 NTM Zone 11\",\n        \"5112\": \"ETRS 1989 NTM Zone 12\",\n        \"5113\": \"ETRS 1989 NTM Zone 13\",\n        \"5114\": \"ETRS 1989 NTM Zone 14\",\n        \"5115\": \"ETRS 1989 NTM Zone 15\",\n        \"5116\": \"ETRS 1989 NTM Zone 16\",\n        \"5117\": \"ETRS 1989 NTM Zone 17\",\n        \"5118\": \"ETRS 1989 NTM Zone 18\",\n        \"5119\": \"ETRS 1989 NTM Zone 19\",\n        \"5120\": \"ETRS 1989 NTM Zone 20\",\n        \"5121\": \"ETRS 1989 NTM Zone 21\",\n        \"5122\": \"ETRS 1989 NTM Zone 22\",\n        \"5123\": \"ETRS 1989 NTM Zone 23\",\n        \"5124\": \"ETRS 1989 NTM Zone 24\",\n        \"5125\": \"ETRS 1989 NTM Zone 25\",\n        \"5126\": \"ETRS 1989 NTM Zone 26\",\n        \"5127\": \"ETRS 1989 NTM Zone 27\",\n        \"5128\": \"ETRS 1989 NTM Zone 28\",\n        \"5129\": \"ETRS 1989 NTM Zone 29\",\n        \"5130\": \"ETRS 1989 NTM Zone 30\",\n        \"5105\": \"ETRS 1989 NTM Zone 5\",\n        \"5106\": \"ETRS 1989 NTM Zone 6\",\n        \"5107\": \"ETRS 1989 NTM Zone 7\",\n        \"5108\": \"ETRS 1989 NTM Zone 8\",\n        \"5109\": \"ETRS 1989 NTM Zone 9\",\n        \"102450\": \"NGO 1948 (Oslo) Baerum Kommune\",\n        \"102451\": \"NGO 1948 (Oslo) Bergenhalvoen\",\n        \"102452\": \"NGO 1948 (Oslo) Oslo Kommune\",\n        \"27391\": \"NGO 1948 Oslo Norway Zone 1\",\n        \"27392\": \"NGO 1948 Oslo Norway Zone 2\",\n        \"27393\": \"NGO 1948 Oslo Norway Zone 3\",\n        \"27394\": \"NGO 1948 Oslo Norway Zone 4\",\n        \"27395\": \"NGO 1948 Oslo Norway Zone 5\",\n        \"27396\": \"NGO 1948 Oslo Norway Zone 6\",\n        \"27397\": \"NGO 1948 Oslo Norway Zone 7\",\n        \"27398\": \"NGO 1948 Oslo Norway Zone 8\",\n        \"Greenwich-based\": {\n          \"102136\": \"NGO 1948 Baerum Kommune\",\n          \"102137\": \"NGO 1948 Bergenhalvoen\",\n          \"102101\": \"NGO 1948 Norway Zone 1\",\n          \"102102\": \"NGO 1948 Norway Zone 2\",\n          \"102103\": \"NGO 1948 Norway Zone 3\",\n          \"102104\": \"NGO 1948 Norway Zone 4\",\n          \"102105\": \"NGO 1948 Norway Zone 5\",\n          \"102106\": \"NGO 1948 Norway Zone 6\",\n          \"102107\": \"NGO 1948 Norway Zone 7\",\n          \"102108\": \"NGO 1948 Norway Zone 8\",\n          \"102138\": \"NGO 1948 Oslo Kommune\"\n        }\n      },\n      Oceans: {\n        \"Atlantic Ocean\": {\n          \"7877\": \"Astro DOS 71_4 SHLG71\",\n          \"7878\": \"Astro DOS 71_4 UTM zone 30S\",\n          \"3770\": \"Bermuda 2000 National Grid\",\n          \"2003\": \"Grenada 1953 British West Indies Grid\",\n          \"7887\": \"SHMG2015\",\n          \"7882\": \"St. Helena Tritan SHLG(Tritan)\",\n          \"7883\": \"St. Helena Tritan UTM zone 30S\",\n          \"4826\": \"WGS 1984 Cape Verde Grid\",\n          \"3762\": \"WGS 1984 South Georgia Lambert\",\n          \"6703\": \"WGS 1984 TM 60 SW\"\n        },\n        Caribbean: {\n          \"2000\": \"Anguilla 1957 British West Indies Grid\",\n          \"2001\": \"Antigua 1943 British West Indies Grid\",\n          \"21292\": \"Barbados 1938 Barbados Grid\",\n          \"21291\": \"Barbados 1938 British West Indies Grid\",\n          \"6391\": \"Cayman Islands National Grid 2011\",\n          \"2002\": \"Dominica 1945 British West Indies Grid\",\n          \"6128\": \"Grand Cayman National Grid 1959\",\n          \"3448\": \"JAD 2001 Jamaica Grid\",\n          \"24100\": \"Jamaica 1875 Old Grid\",\n          \"24200\": \"Jamaica Grid\",\n          \"2004\": \"Montserrat 1958 British West Indies Grid\",\n          \"2066\": \"Mount Dillon Tobago Grid\",\n          \"2085\": \"NAD 1927 Cuba Norte\",\n          \"2086\": \"NAD 1927 Cuba Sur\",\n          \"6129\": \"Sister Islands National Grid 1961\",\n          \"2005\": \"St. Kitts 1955 British West Indies Grid\",\n          \"2006\": \"St. Lucia 1955 British West Indies Grid\",\n          \"2007\": \"St. Vincent 1945 British West Indies Grid\",\n          \"2314\": \"Trinidad 1903 Trinidad Grid (Clarke Feet)\",\n          \"30200\": \"Trinidad 1903 Trinidad Grid (Links Clarke)\"\n        },\n        \"Indian Ocean\": {\n          \"6721\": \"GDA 1994 CIG94\",\n          \"6723\": \"GDA 1994 CKIG94\",\n          \"103872\": \"GDM2008 LGM2012\",\n          \"3337\": \"Le Pouce 1934 Mauritius Grid\",\n          \"3727\": \"Reunion 1947 TM Reunion\",\n          \"6720\": \"WGS 1984 CIG92\",\n          \"6722\": \"WGS 1984 CKIG92\"\n        },\n        \"Pacific Ocean\": {\n          \"3102\": \"American Samoa 1962 Samoa Lambert\",\n          \"102096\": \"Bab South Palau Azimuthal Equidistant\",\n          \"3460\": \"Fiji 1986 Fiji Map Grid\",\n          \"3295\": \"Guam 1963 Yap Islands\",\n          \"3165\": \"NEA74 Noumea Lambert\",\n          \"3166\": \"NEA74 Noumea Lambert 2\",\n          \"3783\": \"Pitcairn 2006 Pitcairn TM 2006\",\n          \"102237\": \"Pohnpei Az Eq 1971\",\n          \"2984\": \"RGNC 1991 Lambert New Caledonia\",\n          \"3163\": \"RGNC 1991-93 Lambert New Caledonia\",\n          \"102238\": \"Saipan Az Eq 1969\",\n          \"5887\": \"TGD2005 Tonga Map Grid\"\n        }\n      },\n      \"South Africa\": {\n        \"102470\": \"Cape Lo15\",\n        \"102471\": \"Cape Lo17\",\n        \"102472\": \"Cape Lo19\",\n        \"102473\": \"Cape Lo21\",\n        \"102474\": \"Cape Lo23\",\n        \"102475\": \"Cape Lo25\",\n        \"102476\": \"Cape Lo27\",\n        \"102477\": \"Cape Lo29\",\n        \"102478\": \"Cape Lo31\",\n        \"102479\": \"Cape Lo33\",\n        \"102480\": \"Hartebeesthoek94 Lo15\",\n        \"102481\": \"Hartebeesthoek94 Lo17\",\n        \"102482\": \"Hartebeesthoek94 Lo19\",\n        \"102562\": \"Hartebeesthoek94 Lo19 (E-N)\",\n        \"102483\": \"Hartebeesthoek94 Lo21\",\n        \"102563\": \"Hartebeesthoek94 Lo21 (E-N)\",\n        \"102484\": \"Hartebeesthoek94 Lo23\",\n        \"102564\": \"Hartebeesthoek94 Lo23 (E-N)\",\n        \"102485\": \"Hartebeesthoek94 Lo25\",\n        \"102565\": \"Hartebeesthoek94 Lo25 (E-N)\",\n        \"102486\": \"Hartebeesthoek94 Lo27\",\n        \"102566\": \"Hartebeesthoek94 Lo27 (E-N)\",\n        \"102487\": \"Hartebeesthoek94 Lo29\",\n        \"102567\": \"Hartebeesthoek94 Lo29 (E-N)\",\n        \"102488\": \"Hartebeesthoek94 Lo31\",\n        \"102568\": \"Hartebeesthoek94 Lo31 (E-N)\",\n        \"102489\": \"Hartebeesthoek94 Lo33\",\n        \"9221\": \"Hartebeesthoek94 ZAF BSU Albers 25E\",\n        \"9222\": \"Hartebeesthoek94 ZAF BSU Albers 44E\"\n      },\n      \"South America\": {\n        \"2102\": \"Lake Maracaibo Grid\",\n        \"2101\": \"Lake Maracaibo Grid M1\",\n        \"2103\": \"Lake Maracaibo Grid M3\",\n        \"2104\": \"Lake Maracaibo La Rosa Grid\",\n        \"24892\": \"Peru Central Zone\",\n        \"24893\": \"Peru East Zone\",\n        \"24891\": \"Peru West Zone\",\n        \"2317\": \"Provisional South American Datum 1956 ICN Regional\",\n        \"5530\": \"SAD 1969 (96) Brazil Polyconic\",\n        \"29101\": \"SAD 1969 Brazil Polyconic\",\n        \"5641\": \"SIRGAS 2000 Brazil Mercator\",\n        \"5880\": \"SIRGAS 2000 Brazil Polyconic\",\n        \"2314\": \"Trinidad 1903 Trinidad Grid (Clarke Feet)\",\n        \"30200\": \"Trinidad 1903 Trinidad Grid (Links Clarke)\",\n        \"6703\": \"WGS 1984 TM 60 SW\",\n        \"31170\": \"Zanderij Suriname Old TM\",\n        \"31171\": \"Zanderij Suriname TM\",\n        \"31154\": \"Zanderij TM 54 NW\",\n        Colombia: {\n          \"102232\": \"Bogota Ciudad Bogota\",\n          \"21897\": \"Colombia Bogota Zone\",\n          \"21898\": \"Colombia E Central Zone\",\n          \"21899\": \"Colombia East Zone\",\n          \"102231\": \"Colombia West West Zone\",\n          \"21896\": \"Colombia West Zone\",\n          \"6244\": \"MAGNA Arauca 2007\",\n          \"6245\": \"MAGNA Armenia Quindio 2006\",\n          \"6246\": \"MAGNA Barranquilla Atlantico 1997\",\n          \"6247\": \"MAGNA Bogota DC 2005\",\n          \"6248\": \"MAGNA Bucaramanga Santander 2008\",\n          \"6249\": \"MAGNA Cali Valle del Cauca 2009\",\n          \"6250\": \"MAGNA Cartagena Bolivar 2005\",\n          \"102233\": \"MAGNA Ciudad Bogota\",\n          \"3116\": \"MAGNA Colombia Bogota\",\n          \"3117\": \"MAGNA Colombia Este\",\n          \"3118\": \"MAGNA Colombia Este Este\",\n          \"3115\": \"MAGNA Colombia Oeste\",\n          \"3114\": \"MAGNA Colombia Oeste Oeste\",\n          \"6251\": \"MAGNA Cucuta Norte de Santander 2011\",\n          \"6252\": \"MAGNA Florencia Caqueta 2007\",\n          \"6253\": \"MAGNA Ibague Tolima 2007\",\n          \"6254\": \"MAGNA Inirida Guainia 2008\",\n          \"6255\": \"MAGNA Leticia Amazonas 1994\",\n          \"6256\": \"MAGNA Manizales Caldas 2011\",\n          \"6257\": \"MAGNA Medellin Antioquia 2010\",\n          \"6258\": \"MAGNA Mitu Vaupes 2011\",\n          \"6259\": \"MAGNA Mocoa Putumayo 2011\",\n          \"6260\": \"MAGNA Monteria Cordoba 2006\",\n          \"6261\": \"MAGNA Neiva Huila 2006\",\n          \"6262\": \"MAGNA Pasto Narino 2008\",\n          \"6263\": \"MAGNA Pereira Risaralda 2007\",\n          \"6264\": \"MAGNA Popayan Cauca 2006\",\n          \"6265\": \"MAGNA Puerto Carreno Vichada 2011\",\n          \"6266\": \"MAGNA Quibdo Choco 2011\",\n          \"6267\": \"MAGNA Riohacha La Guajira 2006\",\n          \"6268\": \"MAGNA San Andres 2007\",\n          \"6269\": \"MAGNA San Jose del Guaviare 2011\",\n          \"6270\": \"MAGNA Santa Marta Magdalena 2007\",\n          \"6271\": \"MAGNA Sucre 2006\",\n          \"6272\": \"MAGNA Tunja Boyaca 1997\",\n          \"6273\": \"MAGNA Valledupar Cesar 2011\",\n          \"6274\": \"MAGNA Villavicencio Meta 2011\",\n          \"6275\": \"MAGNA Yopal Casanare 2006\",\n          \"103599\": \"MAGNA-SIRGAS CMT12\",\n          \"9377\": \"MAGNA-SIRGAS Origen-Nacional\"\n        }\n      },\n      \"South Korea\": {\n        \"5181\": \"Korea 2000 Korea Central Belt\",\n        \"5186\": \"Korea 2000 Korea Central Belt 2010\",\n        \"5182\": \"Korea 2000 Korea Central Belt Jeju\",\n        \"5183\": \"Korea 2000 Korea East Belt\",\n        \"5187\": \"Korea 2000 Korea East Belt 2010\",\n        \"5184\": \"Korea 2000 Korea East Sea Belt\",\n        \"5188\": \"Korea 2000 Korea East Sea Belt 2010\",\n        \"5179\": \"Korea 2000 Korea Unified Coordinate System\",\n        \"5180\": \"Korea 2000 Korea West Belt\",\n        \"5185\": \"Korea 2000 Korea West Belt 2010\",\n        \"2097\": \"Korean 1985 Korea Central Belt\",\n        \"5168\": \"Korean 1985 Korea Central Belt Jeju\",\n        \"2096\": \"Korean 1985 Korea East Belt\",\n        \"5167\": \"Korean 1985 Korea East Sea Belt\",\n        \"5178\": \"Korean 1985 Korea Unified Coordinate System\",\n        \"2098\": \"Korean 1985 Korea West Belt\",\n        \"5174\": \"Korean 1985 Modified Korea Central Belt\",\n        \"5175\": \"Korean 1985 Modified Korea Central Belt Jeju\",\n        \"5176\": \"Korean 1985 Modified Korea East Belt\",\n        \"5177\": \"Korean 1985 Modified Korea East Sea Belt\",\n        \"5173\": \"Korean 1985 Modified Korea West Belt\"\n      },\n      Sweden: {\n        \"3028\": \"RT38 0 gon\",\n        \"3029\": \"RT38 25 gon O\",\n        \"3027\": \"RT38 25 gon V\",\n        \"3030\": \"RT38 5 gon O\",\n        \"3026\": \"RT38 5 gon V\",\n        \"3025\": \"RT38 75 gon V\",\n        \"3022\": \"RT90 0 gon\",\n        \"3023\": \"RT90 25 gon O\",\n        \"3021\": \"RT90 25 gon V\",\n        \"3024\": \"RT90 5 gon O\",\n        \"3020\": \"RT90 5 gon V\",\n        \"3019\": \"RT90 75 gon V\",\n        \"3848\": \"SWEREF99 0 gon emulation\",\n        \"3007\": \"SWEREF99 12 00\",\n        \"3008\": \"SWEREF99 13 30\",\n        \"3012\": \"SWEREF99 14 15\",\n        \"3009\": \"SWEREF99 15 00\",\n        \"3013\": \"SWEREF99 15 45\",\n        \"3010\": \"SWEREF99 16 30\",\n        \"3014\": \"SWEREF99 17 15\",\n        \"3011\": \"SWEREF99 18 00\",\n        \"3015\": \"SWEREF99 18 45\",\n        \"3849\": \"SWEREF99 2.5 gon O emulation\",\n        \"3847\": \"SWEREF99 2.5 gon V emulation\",\n        \"3016\": \"SWEREF99 20 15\",\n        \"3017\": \"SWEREF99 21 45\",\n        \"3018\": \"SWEREF99 23 15\",\n        \"3850\": \"SWEREF99 5 gon O emulation\",\n        \"3846\": \"SWEREF99 5 gon V emulation\",\n        \"3845\": \"SWEREF99 7.5 gon V emulation\",\n        \"3854\": \"SWEREF99 County ST74\",\n        \"3006\": \"SWEREF99 TM\"\n      },\n      \"Switzerland and Liechtenstein\": {\n        \"21780\": \"Bern 1898 Bern LV03C\",\n        \"102956\": \"Bern 1898 Bern LV03C (shifted)\",\n        \"21781\": \"CH1903 LV03\",\n        \"102957\": \"CH1903 LV03 (shifted)\",\n        \"21782\": \"CH1903 LV03C-G\",\n        \"102958\": \"CH1903 LV03C-G (shifted)\",\n        \"2056\": \"CH1903+ LV95\",\n        \"102959\": \"CH1903+ LV95 (shifted)\"\n      },\n      Turkey: {\n        \"2319\": \"ED 1950 TM27\",\n        \"2320\": \"ED 1950 TM30\",\n        \"2321\": \"ED 1950 TM33\",\n        \"2322\": \"ED 1950 TM36\",\n        \"2323\": \"ED 1950 TM39\",\n        \"2324\": \"ED 1950 TM42\",\n        \"2325\": \"ED 1950 TM45\",\n        \"102551\": \"ED 1950 Turkey 10\",\n        \"102552\": \"ED 1950 Turkey 11\",\n        \"102553\": \"ED 1950 Turkey 12\",\n        \"102554\": \"ED 1950 Turkey 13\",\n        \"102555\": \"ED 1950 Turkey 14\",\n        \"102556\": \"ED 1950 Turkey 15\",\n        \"102550\": \"ED 1950 Turkey 9\",\n        \"5270\": \"TUREF 3 Degree GK Zone 10\",\n        \"5271\": \"TUREF 3 Degree GK Zone 11\",\n        \"5272\": \"TUREF 3 Degree GK Zone 12\",\n        \"5273\": \"TUREF 3 Degree GK Zone 13\",\n        \"5274\": \"TUREF 3 Degree GK Zone 14\",\n        \"5275\": \"TUREF 3 Degree GK Zone 15\",\n        \"5269\": \"TUREF 3 Degree GK Zone 9\",\n        \"5636\": \"TUREF LAEA Europe\",\n        \"5637\": \"TUREF LCC Europe\",\n        \"5253\": \"TUREF TM27\",\n        \"5254\": \"TUREF TM30\",\n        \"5255\": \"TUREF TM33\",\n        \"5256\": \"TUREF TM36\",\n        \"5257\": \"TUREF TM39\",\n        \"5258\": \"TUREF TM42\",\n        \"5259\": \"TUREF TM45\"\n      },\n      Ukraine: {\n        \"7825\": \"Pulkovo 1942 CS63 zone X1\",\n        \"7826\": \"Pulkovo 1942 CS63 zone X2\",\n        \"7827\": \"Pulkovo 1942 CS63 zone X3\",\n        \"7828\": \"Pulkovo 1942 CS63 zone X4\",\n        \"7829\": \"Pulkovo 1942 CS63 zone X5\",\n        \"7830\": \"Pulkovo 1942 CS63 zone X6\",\n        \"7831\": \"Pulkovo 1942 CS63 zone X7\",\n        \"5577\": \"Ukraine 2000 3 Degree GK CM 21E\",\n        \"5578\": \"Ukraine 2000 3 Degree GK CM 24E\",\n        \"5579\": \"Ukraine 2000 3 Degree GK CM 27E\",\n        \"5580\": \"Ukraine 2000 3 Degree GK CM 30E\",\n        \"5581\": \"Ukraine 2000 3 Degree GK CM 33E\",\n        \"5582\": \"Ukraine 2000 3 Degree GK CM 36E\",\n        \"5583\": \"Ukraine 2000 3 Degree GK CM 39E\",\n        \"5573\": \"Ukraine 2000 3-Degree GK Zone 10\",\n        \"5574\": \"Ukraine 2000 3-Degree GK Zone 11\",\n        \"5575\": \"Ukraine 2000 3-Degree GK Zone 12\",\n        \"5576\": \"Ukraine 2000 3-Degree GK Zone 13\",\n        \"5570\": \"Ukraine 2000 3-Degree GK Zone 7\",\n        \"5571\": \"Ukraine 2000 3-Degree GK Zone 8\",\n        \"5572\": \"Ukraine 2000 3-Degree GK Zone 9\",\n        \"5566\": \"Ukraine 2000 GK CM 21E\",\n        \"5567\": \"Ukraine 2000 GK CM 27E\",\n        \"5568\": \"Ukraine 2000 GK CM 33E\",\n        \"5569\": \"Ukraine 2000 GK CM 39E\",\n        \"5562\": \"Ukraine 2000 GK Zone 4\",\n        \"5563\": \"Ukraine 2000 GK Zone 5\",\n        \"5564\": \"Ukraine 2000 GK Zone 6\",\n        \"5565\": \"Ukraine 2000 GK Zone 7\",\n        \"6384\": \"Ukraine 2000 TM Zone 10\",\n        \"6385\": \"Ukraine 2000 TM Zone 11\",\n        \"6386\": \"Ukraine 2000 TM Zone 12\",\n        \"6387\": \"Ukraine 2000 TM Zone 13\",\n        \"6381\": \"Ukraine 2000 TM Zone 7\",\n        \"6382\": \"Ukraine 2000 TM Zone 8\",\n        \"6383\": \"Ukraine 2000 TM Zone 9\"\n      },\n      Vietnam: {\n        \"9205\": \"VN-2000 TM-3 103-00\",\n        \"9206\": \"VN-2000 TM-3 104-00\",\n        \"9207\": \"VN-2000 TM-3 104-30\",\n        \"9208\": \"VN-2000 TM-3 104-45\",\n        \"9209\": \"VN-2000 TM-3 105-30\",\n        \"9210\": \"VN-2000 TM-3 105-45\",\n        \"9211\": \"VN-2000 TM-3 106-00\",\n        \"9212\": \"VN-2000 TM-3 106-15\",\n        \"9213\": \"VN-2000 TM-3 106-30\",\n        \"9214\": \"VN-2000 TM-3 107-00\",\n        \"9215\": \"VN-2000 TM-3 107-15\",\n        \"9216\": \"VN-2000 TM-3 107-30\",\n        \"5899\": \"VN-2000 TM-3 107-45\",\n        \"9217\": \"VN-2000 TM-3 108-15\",\n        \"9218\": \"VN-2000 TM-3 108-30\",\n        \"5896\": \"VN-2000 TM-3 zone 481\",\n        \"5897\": \"VN-2000 TM-3 zone 482\",\n        \"5898\": \"VN-2000 TM-3 zone 491\"\n      }\n    },\n    Oceans: { Caribbean: { \"8035\": \"WGS 1984 TM Zone 20N (US Feet)\", \"8036\": \"WGS 1984 TM Zone 21N (US Feet)\" } },\n    Polar: {\n      \"5890\": \"JAXA Snow Depth Polar Stereographic North\",\n      \"3410\": \"NSIDC EASE Grid Global\",\n      \"3408\": \"NSIDC EASE Grid North\",\n      \"3409\": \"NSIDC EASE Grid South\",\n      \"3411\": \"NSIDC Sea Ice Polar Stereographic North\",\n      \"3412\": \"NSIDC Sea Ice Polar Stereographic South\",\n      \"102016\": \"North Pole Azimuthal Equidistant\",\n      \"102034\": \"North Pole Gnomonic\",\n      \"102017\": \"North Pole Lambert Azimuthal Equal Area\",\n      \"102035\": \"North Pole Orthographic\",\n      \"102018\": \"North Pole Stereographic\",\n      \"2986\": \"Perroud 1950 Terre Adelie Polar Stereographic\",\n      \"2985\": \"Petrels 1972 Terre Adelie Polar Stereographic\",\n      \"7082\": \"RGTAAF07 Terre Adelie Polar Stereographic\",\n      \"8455\": \"RGTAAF07 UTM Zone 53S\",\n      \"8456\": \"RGTAAF07 UTM Zone 54S\",\n      \"5480\": \"RSRGD2000 Borchgrevink Coast LC2000\",\n      \"3852\": \"RSRGD2000 Darwin Glacier LC2000\",\n      \"5479\": \"RSRGD2000 McMurdo Sound LC2000\",\n      \"5481\": \"RSRGD2000 Pennell Coast LC2000\",\n      \"5482\": \"RSRGD2000 Ross Ice Shelf PS2000\",\n      \"102019\": \"South Pole Azimuthal Equidistant\",\n      \"102036\": \"South Pole Gnomonic\",\n      \"102020\": \"South Pole Lambert Azimuthal Equal Area\",\n      \"102037\": \"South Pole Orthographic\",\n      \"102021\": \"South Pole Stereographic\",\n      \"32661\": \"UPS North\",\n      \"32761\": \"UPS South\",\n      \"3031\": \"WGS 1984 Antarctic Polar Stereographic\",\n      \"3995\": \"WGS 1984 Arctic Polar Stereographic\",\n      \"3033\": \"WGS 1984 Australian Antarctic Lambert\",\n      \"3032\": \"WGS 1984 Australian Antarctic Polar Stereographic\",\n      \"3973\": \"WGS 1984 EASE Grid North\",\n      \"3974\": \"WGS 1984 EASE Grid South\",\n      \"3996\": \"WGS 1984 IBCAO Polar Stereographic\",\n      \"9354\": \"WGS 1984 IBCSO Polar Stereographic\",\n      \"6931\": \"WGS 1984 NSIDC EASE-Grid 2.0 North\",\n      \"6932\": \"WGS 1984 NSIDC EASE-Grid 2.0 South\",\n      \"3413\": \"WGS 1984 NSIDC Sea Ice Polar Stereographic North\",\n      \"3976\": \"WGS 1984 NSIDC Sea Ice Polar Stereographic South\",\n      \"3572\": \"WGS 1984 North Pole LAEA Alaska\",\n      \"3574\": \"WGS 1984 North Pole LAEA Atlantic\",\n      \"3571\": \"WGS 1984 North Pole LAEA Bering Sea\",\n      \"3573\": \"WGS 1984 North Pole LAEA Canada\",\n      \"3575\": \"WGS 1984 North Pole LAEA Europe\",\n      \"3576\": \"WGS 1984 North Pole LAEA Russia\",\n      \"3294\": \"WGS 1984 USGS Transantarctic Mountains\",\n      \"EPSG Arctic\": {\n        \"6069\": \"ETRS 1989 EPSG Arctic zone 2-22\",\n        \"6070\": \"ETRS 1989 EPSG Arctic zone 3-11\",\n        \"6071\": \"ETRS 1989 EPSG Arctic zone 4-26\",\n        \"6072\": \"ETRS 1989 EPSG Arctic zone 4-28\",\n        \"6073\": \"ETRS 1989 EPSG Arctic zone 5-11\",\n        \"6074\": \"ETRS 1989 EPSG Arctic zone 5-13\",\n        \"6125\": \"ETRS 1989 EPSG Arctic zone 5-47\",\n        \"6050\": \"GR96 EPSG Arctic zone 1-25\",\n        \"6051\": \"GR96 EPSG Arctic zone 2-18\",\n        \"6052\": \"GR96 EPSG Arctic zone 2-20\",\n        \"6053\": \"GR96 EPSG Arctic zone 3-29\",\n        \"6054\": \"GR96 EPSG Arctic zone 3-31\",\n        \"6055\": \"GR96 EPSG Arctic zone 3-33\",\n        \"6056\": \"GR96 EPSG Arctic zone 4-20\",\n        \"6057\": \"GR96 EPSG Arctic zone 4-22\",\n        \"6058\": \"GR96 EPSG Arctic zone 4-24\",\n        \"6059\": \"GR96 EPSG Arctic zone 5-41\",\n        \"6060\": \"GR96 EPSG Arctic zone 5-43\",\n        \"6061\": \"GR96 EPSG Arctic zone 5-45\",\n        \"6062\": \"GR96 EPSG Arctic zone 6-26\",\n        \"6063\": \"GR96 EPSG Arctic zone 6-28\",\n        \"6064\": \"GR96 EPSG Arctic zone 6-30\",\n        \"6065\": \"GR96 EPSG Arctic zone 7-11\",\n        \"6066\": \"GR96 EPSG Arctic zone 7-13\",\n        \"6067\": \"GR96 EPSG Arctic zone 8-20\",\n        \"6068\": \"GR96 EPSG Arctic zone 8-22\",\n        \"6351\": \"NAD 1983 2011 EPSG Arctic zone 5-29\",\n        \"6352\": \"NAD 1983 2011 EPSG Arctic zone 5-31\",\n        \"6353\": \"NAD 1983 2011 EPSG Arctic zone 6-14\",\n        \"6354\": \"NAD 1983 2011 EPSG Arctic zone 6-16\",\n        \"6098\": \"NAD 1983 CSRS EPSG Arctic zone 1-23\",\n        \"6099\": \"NAD 1983 CSRS EPSG Arctic zone 2-14\",\n        \"6100\": \"NAD 1983 CSRS EPSG Arctic zone 2-16\",\n        \"6101\": \"NAD 1983 CSRS EPSG Arctic zone 3-25\",\n        \"6102\": \"NAD 1983 CSRS EPSG Arctic zone 3-27\",\n        \"6103\": \"NAD 1983 CSRS EPSG Arctic zone 3-29\",\n        \"6104\": \"NAD 1983 CSRS EPSG Arctic zone 4-14\",\n        \"6105\": \"NAD 1983 CSRS EPSG Arctic zone 4-16\",\n        \"6106\": \"NAD 1983 CSRS EPSG Arctic zone 4-18\",\n        \"6107\": \"NAD 1983 CSRS EPSG Arctic zone 5-33\",\n        \"6108\": \"NAD 1983 CSRS EPSG Arctic zone 5-35\",\n        \"6109\": \"NAD 1983 CSRS EPSG Arctic zone 5-37\",\n        \"6110\": \"NAD 1983 CSRS EPSG Arctic zone 5-39\",\n        \"6111\": \"NAD 1983 CSRS EPSG Arctic zone 6-18\",\n        \"6112\": \"NAD 1983 CSRS EPSG Arctic zone 6-20\",\n        \"6113\": \"NAD 1983 CSRS EPSG Arctic zone 6-22\",\n        \"6114\": \"NAD 1983 CSRS EPSG Arctic zone 6-24\",\n        \"6094\": \"NAD 1983 NSRS2007 EPSG Arctic zone 5-29\",\n        \"6095\": \"NAD 1983 NSRS2007 EPSG Arctic zone 5-31\",\n        \"6096\": \"NAD 1983 NSRS2007 EPSG Arctic zone 6-14\",\n        \"6097\": \"NAD 1983 NSRS2007 EPSG Arctic zone 6-16v\",\n        \"5936\": \"WGS 1984 EPSG Alaska Polar Stereographic\",\n        \"5921\": \"WGS 1984 EPSG Arctic Regional zone A1\",\n        \"5922\": \"WGS 1984 EPSG Arctic Regional zone A2\",\n        \"5923\": \"WGS 1984 EPSG Arctic Regional zone A3\",\n        \"5924\": \"WGS 1984 EPSG Arctic Regional zone A4\",\n        \"5925\": \"WGS 1984 EPSG Arctic Regional zone A5\",\n        \"5926\": \"WGS 1984 EPSG Arctic Regional zone B1\",\n        \"5927\": \"WGS 1984 EPSG Arctic Regional zone B2\",\n        \"5928\": \"WGS 1984 EPSG Arctic Regional zone B3\",\n        \"5929\": \"WGS 1984 EPSG Arctic Regional zone B4\",\n        \"5930\": \"WGS 1984 EPSG Arctic Regional zone B5\",\n        \"5931\": \"WGS 1984 EPSG Arctic Regional zone C1\",\n        \"5932\": \"WGS 1984 EPSG Arctic Regional zone C2\",\n        \"5933\": \"WGS 1984 EPSG Arctic Regional zone C3\",\n        \"5934\": \"WGS 1984 EPSG Arctic Regional zone C4\",\n        \"5935\": \"WGS 1984 EPSG Arctic Regional zone C5\",\n        \"6118\": \"WGS 1984 EPSG Arctic zone 1-21\",\n        \"6115\": \"WGS 1984 EPSG Arctic zone 1-27\",\n        \"6116\": \"WGS 1984 EPSG Arctic zone 1-29\",\n        \"6117\": \"WGS 1984 EPSG Arctic zone 1-31\",\n        \"6120\": \"WGS 1984 EPSG Arctic zone 2-10\",\n        \"6121\": \"WGS 1984 EPSG Arctic zone 2-12\",\n        \"6075\": \"WGS 1984 EPSG Arctic zone 2-24\",\n        \"6076\": \"WGS 1984 EPSG Arctic zone 2-26\",\n        \"6119\": \"WGS 1984 EPSG Arctic zone 2-28\",\n        \"6077\": \"WGS 1984 EPSG Arctic zone 3-13\",\n        \"6078\": \"WGS 1984 EPSG Arctic zone 3-15\",\n        \"6079\": \"WGS 1984 EPSG Arctic zone 3-17\",\n        \"6080\": \"WGS 1984 EPSG Arctic zone 3-19\",\n        \"6122\": \"WGS 1984 EPSG Arctic zone 3-21\",\n        \"6123\": \"WGS 1984 EPSG Arctic zone 3-23\",\n        \"6124\": \"WGS 1984 EPSG Arctic zone 4-12\",\n        \"6081\": \"WGS 1984 EPSG Arctic zone 4-30\",\n        \"6082\": \"WGS 1984 EPSG Arctic zone 4-32\",\n        \"6083\": \"WGS 1984 EPSG Arctic zone 4-34\",\n        \"6084\": \"WGS 1984 EPSG Arctic zone 4-36\",\n        \"6085\": \"WGS 1984 EPSG Arctic zone 4-38\",\n        \"6086\": \"WGS 1984 EPSG Arctic zone 4-40\",\n        \"6087\": \"WGS 1984 EPSG Arctic zone 5-15\",\n        \"6088\": \"WGS 1984 EPSG Arctic zone 5-17\",\n        \"6089\": \"WGS 1984 EPSG Arctic zone 5-19\",\n        \"6090\": \"WGS 1984 EPSG Arctic zone 5-21\",\n        \"6091\": \"WGS 1984 EPSG Arctic zone 5-23\",\n        \"6092\": \"WGS 1984 EPSG Arctic zone 5-25\",\n        \"6093\": \"WGS 1984 EPSG Arctic zone 5-27\",\n        \"5937\": \"WGS 1984 EPSG Canada Polar Stereographic\",\n        \"5938\": \"WGS 1984 EPSG Greenland Polar Stereographic\",\n        \"5939\": \"WGS 1984 EPSG Norway Polar Stereographic\",\n        \"5940\": \"WGS 1984 EPSG Russia Polar Stereographic\"\n      }\n    },\n    \"State Plane\": {\n      \"NAD 1927 (US Feet)\": {\n        \"26729\": \"NAD 1927 StatePlane Alabama East FIPS 0101\",\n        \"26730\": \"NAD 1927 StatePlane Alabama West FIPS 0102\",\n        \"26731\": \"NAD 1927 StatePlane Alaska  1 FIPS 5001\",\n        \"26732\": \"NAD 1927 StatePlane Alaska  2 FIPS 5002\",\n        \"26733\": \"NAD 1927 StatePlane Alaska  3 FIPS 5003\",\n        \"26734\": \"NAD 1927 StatePlane Alaska  4 FIPS 5004\",\n        \"26735\": \"NAD 1927 StatePlane Alaska  5 FIPS 5005\",\n        \"26736\": \"NAD 1927 StatePlane Alaska  6 FIPS 5006\",\n        \"26737\": \"NAD 1927 StatePlane Alaska  7 FIPS 5007\",\n        \"26738\": \"NAD 1927 StatePlane Alaska  8 FIPS 5008\",\n        \"26739\": \"NAD 1927 StatePlane Alaska  9 FIPS 5009\",\n        \"26740\": \"NAD 1927 StatePlane Alaska 10 FIPS 5010\",\n        \"26749\": \"NAD 1927 StatePlane Arizona Central FIPS 0202\",\n        \"26748\": \"NAD 1927 StatePlane Arizona East FIPS 0201\",\n        \"26750\": \"NAD 1927 StatePlane Arizona West FIPS 0203\",\n        \"26751\": \"NAD 1927 StatePlane Arkansas North FIPS 0301\",\n        \"26752\": \"NAD 1927 StatePlane Arkansas South FIPS 0302\",\n        \"26741\": \"NAD 1927 StatePlane California I FIPS 0401\",\n        \"26742\": \"NAD 1927 StatePlane California II FIPS 0402\",\n        \"26743\": \"NAD 1927 StatePlane California III FIPS 0403\",\n        \"26744\": \"NAD 1927 StatePlane California IV FIPS 0404\",\n        \"26745\": \"NAD 1927 StatePlane California V FIPS 0405\",\n        \"102699\": \"NAD 1927 StatePlane California V Ventura\",\n        \"26746\": \"NAD 1927 StatePlane California VI FIPS 0406\",\n        \"26799\": \"NAD 1927 StatePlane California VII FIPS 0407\",\n        \"26754\": \"NAD 1927 StatePlane Colorado Central FIPS 0502\",\n        \"26753\": \"NAD 1927 StatePlane Colorado North FIPS 0501\",\n        \"26755\": \"NAD 1927 StatePlane Colorado South FIPS 0503\",\n        \"26756\": \"NAD 1927 StatePlane Connecticut FIPS 0600\",\n        \"26757\": \"NAD 1927 StatePlane Delaware FIPS 0700\",\n        \"26758\": \"NAD 1927 StatePlane Florida East FIPS 0901\",\n        \"26760\": \"NAD 1927 StatePlane Florida North FIPS 0903\",\n        \"26759\": \"NAD 1927 StatePlane Florida West FIPS 0902\",\n        \"26766\": \"NAD 1927 StatePlane Georgia East FIPS 1001\",\n        \"26767\": \"NAD 1927 StatePlane Georgia West FIPS 1002\",\n        \"65061\": \"NAD 1927 StatePlane Guam FIPS 5400\",\n        \"26769\": \"NAD 1927 StatePlane Idaho Central FIPS 1102\",\n        \"26768\": \"NAD 1927 StatePlane Idaho East FIPS 1101\",\n        \"26770\": \"NAD 1927 StatePlane Idaho West FIPS 1103\",\n        \"26771\": \"NAD 1927 StatePlane Illinois East FIPS 1201\",\n        \"26772\": \"NAD 1927 StatePlane Illinois West FIPS 1202\",\n        \"26773\": \"NAD 1927 StatePlane Indiana East FIPS 1301\",\n        \"26774\": \"NAD 1927 StatePlane Indiana West FIPS 1302\",\n        \"26775\": \"NAD 1927 StatePlane Iowa North FIPS 1401\",\n        \"26776\": \"NAD 1927 StatePlane Iowa South FIPS 1402\",\n        \"26777\": \"NAD 1927 StatePlane Kansas North FIPS 1501\",\n        \"26778\": \"NAD 1927 StatePlane Kansas South FIPS 1502\",\n        \"26779\": \"NAD 1927 StatePlane Kentucky North FIPS 1601\",\n        \"26780\": \"NAD 1927 StatePlane Kentucky South FIPS 1602\",\n        \"26781\": \"NAD 1927 StatePlane Louisiana North FIPS 1701\",\n        \"32099\": \"NAD 1927 StatePlane Louisiana Offshore FIPS 1703\",\n        \"26782\": \"NAD 1927 StatePlane Louisiana South FIPS 1702\",\n        \"26783\": \"NAD 1927 StatePlane Maine East FIPS 1801\",\n        \"26784\": \"NAD 1927 StatePlane Maine West FIPS 1802\",\n        \"26785\": \"NAD 1927 StatePlane Maryland FIPS 1900\",\n        \"26786\": \"NAD 1927 StatePlane Massachusetts FIPS 2001\",\n        \"26787\": \"NAD 1927 StatePlane Massachusetts Isl FIPS 2002\",\n        \"26789\": \"NAD 1927 StatePlane Michigan Central FIPS 2112\",\n        \"5624\": \"NAD 1927 StatePlane Michigan Central Old\",\n        \"5623\": \"NAD 1927 StatePlane Michigan East Old\",\n        \"26788\": \"NAD 1927 StatePlane Michigan North FIPS 2111\",\n        \"26790\": \"NAD 1927 StatePlane Michigan South FIPS 2113\",\n        \"5625\": \"NAD 1927 StatePlane Michigan West Old\",\n        \"26792\": \"NAD 1927 StatePlane Minnesota Central FIPS 2202\",\n        \"26791\": \"NAD 1927 StatePlane Minnesota North FIPS 2201\",\n        \"26793\": \"NAD 1927 StatePlane Minnesota South FIPS 2203\",\n        \"26794\": \"NAD 1927 StatePlane Mississippi East FIPS 2301\",\n        \"26795\": \"NAD 1927 StatePlane Mississippi West FIPS 2302\",\n        \"26797\": \"NAD 1927 StatePlane Missouri Central FIPS 2402\",\n        \"26796\": \"NAD 1927 StatePlane Missouri East FIPS 2401\",\n        \"26798\": \"NAD 1927 StatePlane Missouri West FIPS 2403\",\n        \"32002\": \"NAD 1927 StatePlane Montana Central FIPS 2502\",\n        \"32001\": \"NAD 1927 StatePlane Montana North FIPS 2501\",\n        \"32003\": \"NAD 1927 StatePlane Montana South FIPS 2503\",\n        \"32005\": \"NAD 1927 StatePlane Nebraska North FIPS 2601\",\n        \"32006\": \"NAD 1927 StatePlane Nebraska South FIPS 2602\",\n        \"32008\": \"NAD 1927 StatePlane Nevada Central FIPS 2702\",\n        \"32007\": \"NAD 1927 StatePlane Nevada East FIPS 2701\",\n        \"32009\": \"NAD 1927 StatePlane Nevada West FIPS 2703\",\n        \"32010\": \"NAD 1927 StatePlane New Hampshire FIPS 2800\",\n        \"32011\": \"NAD 1927 StatePlane New Jersey FIPS 2900\",\n        \"32013\": \"NAD 1927 StatePlane New Mexico Central FIPS 3002\",\n        \"32012\": \"NAD 1927 StatePlane New Mexico East FIPS 3001\",\n        \"32014\": \"NAD 1927 StatePlane New Mexico West FIPS 3003\",\n        \"32016\": \"NAD 1927 StatePlane New York Central FIPS 3102\",\n        \"32015\": \"NAD 1927 StatePlane New York East FIPS 3101\",\n        \"4456\": \"NAD 1927 StatePlane New York Long Isl FIPS 3104\",\n        \"32017\": \"NAD 1927 StatePlane New York West FIPS 3103\",\n        \"32019\": \"NAD 1927 StatePlane North Carolina FIPS 3200\",\n        \"32020\": \"NAD 1927 StatePlane North Dakota N FIPS 3301\",\n        \"32021\": \"NAD 1927 StatePlane North Dakota S FIPS 3302\",\n        \"32022\": \"NAD 1927 StatePlane Ohio North FIPS 3401\",\n        \"32023\": \"NAD 1927 StatePlane Ohio South FIPS 3402\",\n        \"32024\": \"NAD 1927 StatePlane Oklahoma North FIPS 3501\",\n        \"32025\": \"NAD 1927 StatePlane Oklahoma South FIPS 3502\",\n        \"32026\": \"NAD 1927 StatePlane Oregon North FIPS 3601\",\n        \"32027\": \"NAD 1927 StatePlane Oregon South FIPS 3602\",\n        \"32028\": \"NAD 1927 StatePlane Pennsylvania North FIPS 3701\",\n        \"4455\": \"NAD 1927 StatePlane Pennsylvania South FIPS 3702\",\n        \"32059\": \"NAD 1927 StatePlane Puerto Rico FIPS 5201\",\n        \"32030\": \"NAD 1927 StatePlane Rhode Island FIPS 3800\",\n        \"32031\": \"NAD 1927 StatePlane South Carolina N FIPS 3901\",\n        \"32033\": \"NAD 1927 StatePlane South Carolina S FIPS 3902\",\n        \"32034\": \"NAD 1927 StatePlane South Dakota N FIPS 4001\",\n        \"32035\": \"NAD 1927 StatePlane South Dakota S FIPS 4002\",\n        \"2204\": \"NAD 1927 StatePlane Tennessee FIPS 4100\",\n        \"32039\": \"NAD 1927 StatePlane Texas Central FIPS 4203\",\n        \"32038\": \"NAD 1927 StatePlane Texas N Central FIPS 4202\",\n        \"32037\": \"NAD 1927 StatePlane Texas North FIPS 4201\",\n        \"32040\": \"NAD 1927 StatePlane Texas S Central FIPS 4204\",\n        \"32041\": \"NAD 1927 StatePlane Texas South FIPS 4205\",\n        \"32043\": \"NAD 1927 StatePlane Utah Central FIPS 4302\",\n        \"32042\": \"NAD 1927 StatePlane Utah North FIPS 4301\",\n        \"32044\": \"NAD 1927 StatePlane Utah South FIPS 4303\",\n        \"32045\": \"NAD 1927 StatePlane Vermont FIPS 3400\",\n        \"32060\": \"NAD 1927 StatePlane Virgin Isl St.Croix FIPS 5202\",\n        \"32046\": \"NAD 1927 StatePlane Virginia North FIPS 4501\",\n        \"32047\": \"NAD 1927 StatePlane Virginia South FIPS 4502\",\n        \"32048\": \"NAD 1927 StatePlane Washington North FIPS 4601\",\n        \"32049\": \"NAD 1927 StatePlane Washington South FIPS 4602\",\n        \"32050\": \"NAD 1927 StatePlane West Virginia N FIPS 4701\",\n        \"32051\": \"NAD 1927 StatePlane West Virginia S FIPS 4702\",\n        \"32053\": \"NAD 1927 StatePlane Wisconsin Central FIPS 4802\",\n        \"32052\": \"NAD 1927 StatePlane Wisconsin North FIPS 4801\",\n        \"32054\": \"NAD 1927 StatePlane Wisconsin South FIPS 4803\",\n        \"32056\": \"NAD 1927 StatePlane Wyoming E Central FIPS 4902\",\n        \"32055\": \"NAD 1927 StatePlane Wyoming East FIPS 4901\",\n        \"32057\": \"NAD 1927 StatePlane Wyoming W Central FIPS 4903\",\n        \"32058\": \"NAD 1927 StatePlane Wyoming West FIPS 4904\"\n      },\n      \"NAD 1983 (2011) (Intl Feet)\": {\n        \"6405\": \"NAD 1983 (2011) StatePlane Arizona Central FIPS 0202 (Intl Feet)\",\n        \"6407\": \"NAD 1983 (2011) StatePlane Arizona East FIPS 0201 (Intl Feet)\",\n        \"6409\": \"NAD 1983 (2011) StatePlane Arizona West FIPS 0203 (Intl Feet)\",\n        \"6494\": \"NAD 1983 (2011) StatePlane Michigan Central FIPS 2112 (Intl Feet)\",\n        \"6496\": \"NAD 1983 (2011) StatePlane Michigan North FIPS 2111 (Intl Feet)\",\n        \"6499\": \"NAD 1983 (2011) StatePlane Michigan South FIPS 2113 (Intl Feet)\",\n        \"6515\": \"NAD 1983 (2011) StatePlane Montana FIPS 2500 (Intl Feet)\",\n        \"6545\": \"NAD 1983 (2011) StatePlane North Dakota N FIPS 3301 (Intl Feet)\",\n        \"6547\": \"NAD 1983 (2011) StatePlane North Dakota S FIPS 3302 (Intl Feet)\",\n        \"6559\": \"NAD 1983 (2011) StatePlane Oregon North FIPS 3601 (Intl Feet)\",\n        \"6561\": \"NAD 1983 (2011) StatePlane Oregon South FIPS 3602 (Intl Feet)\",\n        \"6570\": \"NAD 1983 (2011) StatePlane South Carolina FIPS 3900 (Intl Feet)\",\n        \"103167\": \"NAD 1983 (2011) StatePlane Utah Central FIPS 4302 (Intl Feet)\",\n        \"103166\": \"NAD 1983 (2011) StatePlane Utah North FIPS 4301 (Intl Feet)\",\n        \"103168\": \"NAD 1983 (2011) StatePlane Utah South FIPS 4303 (Intl Feet)\"\n      },\n      \"NAD 1983 (2011) (Meters)\": {\n        \"6480\": \"NAD 1983 (2011) Maine 2000 Central Zone (Meters)\",\n        \"6481\": \"NAD 1983 (2011) Maine 2000 East Zone (Meters)\",\n        \"6482\": \"NAD 1983 (2011) Maine 2000 West Zone (Meters)\",\n        \"6355\": \"NAD 1983 (2011) StatePlane Alabama East FIPS 0101 (Meters)\",\n        \"6356\": \"NAD 1983 (2011) StatePlane Alabama West FIPS 0102 (Meters)\",\n        \"6394\": \"NAD 1983 (2011) StatePlane Alaska  1 FIPS 5001 (Meters)\",\n        \"6395\": \"NAD 1983 (2011) StatePlane Alaska  2 FIPS 5002 (Meters)\",\n        \"6396\": \"NAD 1983 (2011) StatePlane Alaska  3 FIPS 5003 (Meters)\",\n        \"6397\": \"NAD 1983 (2011) StatePlane Alaska  4 FIPS 5004 (Meters)\",\n        \"6398\": \"NAD 1983 (2011) StatePlane Alaska  5 FIPS 5005 (Meters)\",\n        \"6399\": \"NAD 1983 (2011) StatePlane Alaska  6 FIPS 5006 (Meters)\",\n        \"6400\": \"NAD 1983 (2011) StatePlane Alaska  7 FIPS 5007 (Meters)\",\n        \"6401\": \"NAD 1983 (2011) StatePlane Alaska  8 FIPS 5008 (Meters)\",\n        \"6402\": \"NAD 1983 (2011) StatePlane Alaska  9 FIPS 5009 (Meters)\",\n        \"6403\": \"NAD 1983 (2011) StatePlane Alaska 10 FIPS 5010 (Meters)\",\n        \"6404\": \"NAD 1983 (2011) StatePlane Arizona Central FIPS 0202 (Meters)\",\n        \"6406\": \"NAD 1983 (2011) StatePlane Arizona East FIPS 0201 (Meters)\",\n        \"6408\": \"NAD 1983 (2011) StatePlane Arizona West FIPS 0203 (Meters)\",\n        \"6410\": \"NAD 1983 (2011) StatePlane Arkansas North FIPS 0301 (Meters)\",\n        \"6412\": \"NAD 1983 (2011) StatePlane Arkansas South FIPS 0302 (Meters)\",\n        \"6415\": \"NAD 1983 (2011) StatePlane California I FIPS 0401 (Meters)\",\n        \"6417\": \"NAD 1983 (2011) StatePlane California II FIPS 0402 (Meters)\",\n        \"6419\": \"NAD 1983 (2011) StatePlane California III FIPS 0403 (Meters)\",\n        \"6421\": \"NAD 1983 (2011) StatePlane California IV FIPS 0404 (Meters)\",\n        \"6423\": \"NAD 1983 (2011) StatePlane California V FIPS 0405 (Meters)\",\n        \"6425\": \"NAD 1983 (2011) StatePlane California VI FIPS 0406 (Meters)\",\n        \"6427\": \"NAD 1983 (2011) StatePlane Colorado Central FIPS 0502 (Meter)\",\n        \"6429\": \"NAD 1983 (2011) StatePlane Colorado North FIPS 0501 (Meters)\",\n        \"6431\": \"NAD 1983 (2011) StatePlane Colorado South FIPS 0503 (Meters)\",\n        \"6433\": \"NAD 1983 (2011) StatePlane Connecticut FIPS 0600 (Meters)\",\n        \"6435\": \"NAD 1983 (2011) StatePlane Delaware FIPS 0700 (Meters)\",\n        \"6437\": \"NAD 1983 (2011) StatePlane Florida East FIPS 0901 (Meters)\",\n        \"6440\": \"NAD 1983 (2011) StatePlane Florida North FIPS 0903 (Meters)\",\n        \"6442\": \"NAD 1983 (2011) StatePlane Florida West FIPS 0902 (Meters)\",\n        \"6444\": \"NAD 1983 (2011) StatePlane Georgia East FIPS 1001 (Meters)\",\n        \"6446\": \"NAD 1983 (2011) StatePlane Georgia West FIPS 1002 (Meters)\",\n        \"6448\": \"NAD 1983 (2011) StatePlane Idaho Central FIPS 1102 (Meters)\",\n        \"6450\": \"NAD 1983 (2011) StatePlane Idaho East FIPS 1101 (Meters)\",\n        \"6452\": \"NAD 1983 (2011) StatePlane Idaho West FIPS 1103 (Meters)\",\n        \"6454\": \"NAD 1983 (2011) StatePlane Illinois East FIPS 1201 (Meters)\",\n        \"6456\": \"NAD 1983 (2011) StatePlane Illinois West FIPS 1202 (Meters)\",\n        \"6458\": \"NAD 1983 (2011) StatePlane Indiana East FIPS 1301 (Meters)\",\n        \"6460\": \"NAD 1983 (2011) StatePlane Indiana West FIPS 1302 (Meters)\",\n        \"6462\": \"NAD 1983 (2011) StatePlane Iowa North FIPS 1401 (Meters)\",\n        \"6464\": \"NAD 1983 (2011) StatePlane Iowa South FIPS 1402 (Meters)\",\n        \"6466\": \"NAD 1983 (2011) StatePlane Kansas North FIPS 1501 (Meters)\",\n        \"6468\": \"NAD 1983 (2011) StatePlane Kansas South FIPS 1502 (Meters)\",\n        \"6472\": \"NAD 1983 (2011) StatePlane Kentucky FIPS 1600 (Meters)\",\n        \"6470\": \"NAD 1983 (2011) StatePlane Kentucky North FIPS 1601 (Meters)\",\n        \"6474\": \"NAD 1983 (2011) StatePlane Kentucky South FIPS 1602 (Meters)\",\n        \"6476\": \"NAD 1983 (2011) StatePlane Louisiana North FIPS 1701 (Meters)\",\n        \"6478\": \"NAD 1983 (2011) StatePlane Louisiana South FIPS 1702 (Meters)\",\n        \"6483\": \"NAD 1983 (2011) StatePlane Maine East FIPS 1801 (Meters)\",\n        \"6485\": \"NAD 1983 (2011) StatePlane Maine West FIPS 1802 (Meters)\",\n        \"6487\": \"NAD 1983 (2011) StatePlane Maryland FIPS 1900 (Meters)\",\n        \"6491\": \"NAD 1983 (2011) StatePlane Massachusetts FIPS 2001 (Meters)\",\n        \"6489\": \"NAD 1983 (2011) StatePlane Massachusetts Isl FIPS 2002 (Meters)\",\n        \"6493\": \"NAD 1983 (2011) StatePlane Michigan Central FIPS 2112 (Meters)\",\n        \"6495\": \"NAD 1983 (2011) StatePlane Michigan North FIPS 2111 (Meters)\",\n        \"6498\": \"NAD 1983 (2011) StatePlane Michigan South FIPS 2113 (Meters)\",\n        \"6500\": \"NAD 1983 (2011) StatePlane Minnesota Central FIPS 2202 (Meters)\",\n        \"6502\": \"NAD 1983 (2011) StatePlane Minnesota North FIPS 2201 (Meters)\",\n        \"6504\": \"NAD 1983 (2011) StatePlane Minnesota South FIPS 2203 (Meters)\",\n        \"6506\": \"NAD 1983 (2011) StatePlane Mississippi East FIPS 2301 (Meters)\",\n        \"6509\": \"NAD 1983 (2011) StatePlane Mississippi West FIPS 2302 (Meters)\",\n        \"6511\": \"NAD 1983 (2011) StatePlane Missouri Central FIPS 2402 (Meters)\",\n        \"6512\": \"NAD 1983 (2011) StatePlane Missouri East FIPS 2401 (Meters)\",\n        \"6513\": \"NAD 1983 (2011) StatePlane Missouri West FIPS 2403 (Meters)\",\n        \"6514\": \"NAD 1983 (2011) StatePlane Montana FIPS 2500 (Meters)\",\n        \"6516\": \"NAD 1983 (2011) StatePlane Nebraska FIPS 2600 (Meters)\",\n        \"6518\": \"NAD 1983 (2011) StatePlane Nevada Central FIPS 2702 (Meters)\",\n        \"6520\": \"NAD 1983 (2011) StatePlane Nevada East FIPS 2701 (Meters)\",\n        \"6522\": \"NAD 1983 (2011) StatePlane Nevada West FIPS 2703 (Meters)\",\n        \"6524\": \"NAD 1983 (2011) StatePlane New Hampshire FIPS 2800 (Meters)\",\n        \"6526\": \"NAD 1983 (2011) StatePlane New Jersey FIPS 2900 (Meters)\",\n        \"6528\": \"NAD 1983 (2011) StatePlane New Mexico Central FIPS 3002 (Meters)\",\n        \"6530\": \"NAD 1983 (2011) StatePlane New Mexico East FIPS 3001 (Meters)\",\n        \"6532\": \"NAD 1983 (2011) StatePlane New Mexico West FIPS 3003 (Meters)\",\n        \"6534\": \"NAD 1983 (2011) StatePlane New York Central FIPS 3102 (Meters)\",\n        \"6536\": \"NAD 1983 (2011) StatePlane New York East FIPS 3101 (Meters)\",\n        \"6538\": \"NAD 1983 (2011) StatePlane New York Long Isl FIPS 3104 (Meters)\",\n        \"6540\": \"NAD 1983 (2011) StatePlane New York West FIPS 3103 (Meters)\",\n        \"6542\": \"NAD 1983 (2011) StatePlane North Carolina FIPS 3200 (Meters)\",\n        \"6544\": \"NAD 1983 (2011) StatePlane North Dakota N FIPS 3301 (Meters)\",\n        \"6546\": \"NAD 1983 (2011) StatePlane North Dakota S FIPS 3302 (Meters)\",\n        \"6548\": \"NAD 1983 (2011) StatePlane Ohio North FIPS 3401 (Meters)\",\n        \"6550\": \"NAD 1983 (2011) StatePlane Ohio South FIPS 3402 (Meters)\",\n        \"6552\": \"NAD 1983 (2011) StatePlane Oklahoma North FIPS 3501 (Meters)\",\n        \"6554\": \"NAD 1983 (2011) StatePlane Oklahoma South FIPS 3502 (Meters)\",\n        \"6558\": \"NAD 1983 (2011) StatePlane Oregon North FIPS 3601 (Meters)\",\n        \"6560\": \"NAD 1983 (2011) StatePlane Oregon South FIPS 3602 (Meters)\",\n        \"6566\": \"NAD 1983 (2011) StatePlane PR \\u0026 VI FIPS 5200 (Meters)\",\n        \"6562\": \"NAD 1983 (2011) StatePlane Pennsylvania North FIPS 3701 (Meters)\",\n        \"6564\": \"NAD 1983 (2011) StatePlane Pennsylvania South FIPS 3702 (Meters)\",\n        \"6567\": \"NAD 1983 (2011) StatePlane Rhode Island FIPS 3800 (Meters)\",\n        \"6569\": \"NAD 1983 (2011) StatePlane South Carolina FIPS 3900 (Meters)\",\n        \"6571\": \"NAD 1983 (2011) StatePlane South Dakota N FIPS 4001 (Meters)\",\n        \"6573\": \"NAD 1983 (2011) StatePlane South Dakota S FIPS 4002 (Meters)\",\n        \"6575\": \"NAD 1983 (2011) StatePlane Tennessee FIPS 4100 (Meters)\",\n        \"6577\": \"NAD 1983 (2011) StatePlane Texas Central FIPS 4203 (Meters)\",\n        \"6583\": \"NAD 1983 (2011) StatePlane Texas N Central FIPS 4202 (Meters)\",\n        \"6581\": \"NAD 1983 (2011) StatePlane Texas North FIPS 4201 (Meters)\",\n        \"6587\": \"NAD 1983 (2011) StatePlane Texas S Central FIPS 4204 (Meters)\",\n        \"6585\": \"NAD 1983 (2011) StatePlane Texas South FIPS 4205 (Meters)\",\n        \"6619\": \"NAD 1983 (2011) StatePlane Utah Central FIPS 4302 (Meters)\",\n        \"6620\": \"NAD 1983 (2011) StatePlane Utah North FIPS 4301 (Meters)\",\n        \"6621\": \"NAD 1983 (2011) StatePlane Utah South FIPS 4303 (Meters)\",\n        \"6589\": \"NAD 1983 (2011) StatePlane Vermont FIPS 4400 (Meters)\",\n        \"6592\": \"NAD 1983 (2011) StatePlane Virginia North FIPS 4501 (Meters)\",\n        \"6594\": \"NAD 1983 (2011) StatePlane Virginia South FIPS 4502 (Meters)\",\n        \"6596\": \"NAD 1983 (2011) StatePlane Washington North FIPS 4601 (Meters)\",\n        \"6598\": \"NAD 1983 (2011) StatePlane Washington South FIPS 4602 (Meters)\",\n        \"6600\": \"NAD 1983 (2011) StatePlane West Virginia N FIPS 4701 (Meters)\",\n        \"6602\": \"NAD 1983 (2011) StatePlane West Virginia S FIPS 4702 (Meters)\",\n        \"6879\": \"NAD 1983 (2011) StatePlane Wisconsin Central FIPS 4802 (Meters)\",\n        \"6606\": \"NAD 1983 (2011) StatePlane Wisconsin North FIPS 4801 (Meters)\",\n        \"6608\": \"NAD 1983 (2011) StatePlane Wisconsin South FIPS 4803 (Meters)\",\n        \"6613\": \"NAD 1983 (2011) StatePlane Wyoming E Central FIPS 4902 (Meters)\",\n        \"6611\": \"NAD 1983 (2011) StatePlane Wyoming East FIPS 4901 (Meters)\",\n        \"6617\": \"NAD 1983 (2011) StatePlane Wyoming W Central FIPS 4903 (Meters)\",\n        \"6615\": \"NAD 1983 (2011) StatePlane Wyoming West FIPS 4904 (Meters)\"\n      },\n      \"NAD 1983 (2011) (US Feet)\": {\n        \"9748\": \"NAD 1983 (2011) StatePlane Alabama East (US Feet)\",\n        \"9749\": \"NAD 1983 (2011) StatePlane Alabama West (US Feet)\",\n        \"102445\": \"NAD 1983 (2011) StatePlane Alaska  1 FIPS 5001 (US Feet)\",\n        \"102446\": \"NAD 1983 (2011) StatePlane Alaska  2 FIPS 5002 (US Feet)\",\n        \"102447\": \"NAD 1983 (2011) StatePlane Alaska  3 FIPS 5003 (US Feet)\",\n        \"102392\": \"NAD 1983 (2011) StatePlane Alaska  4 FIPS 5004 (US Feet)\",\n        \"102393\": \"NAD 1983 (2011) StatePlane Alaska  5 FIPS 5005 (US Feet)\",\n        \"102394\": \"NAD 1983 (2011) StatePlane Alaska  6 FIPS 5006 (US Feet)\",\n        \"102395\": \"NAD 1983 (2011) StatePlane Alaska  7 FIPS 5007 (US Feet)\",\n        \"102396\": \"NAD 1983 (2011) StatePlane Alaska  8 FIPS 5008 (US Feet)\",\n        \"102397\": \"NAD 1983 (2011) StatePlane Alaska  9 FIPS 5009 (US Feet)\",\n        \"102398\": \"NAD 1983 (2011) StatePlane Alaska 10 FIPS 5010 (US Feet)\",\n        \"6411\": \"NAD 1983 (2011) StatePlane Arkansas North FIPS 0301 (US Feet)\",\n        \"6413\": \"NAD 1983 (2011) StatePlane Arkansas South FIPS 0302 (US Feet)\",\n        \"6416\": \"NAD 1983 (2011) StatePlane California I FIPS 0401 (US Feet)\",\n        \"6418\": \"NAD 1983 (2011) StatePlane California II FIPS 0402 (US Feet)\",\n        \"6420\": \"NAD 1983 (2011) StatePlane California III FIPS 0403 (US Feet)\",\n        \"6422\": \"NAD 1983 (2011) StatePlane California IV FIPS 0404 (US Feet)\",\n        \"6424\": \"NAD 1983 (2011) StatePlane California V FIPS 0405 (US Feet)\",\n        \"6426\": \"NAD 1983 (2011) StatePlane California VI FIPS 0406 (US Feet)\",\n        \"6428\": \"NAD 1983 (2011) StatePlane Colorado Central FIPS 0502 (US Feet)\",\n        \"6430\": \"NAD 1983 (2011) StatePlane Colorado North FIPS 0501 (US Feet)\",\n        \"6432\": \"NAD 1983 (2011) StatePlane Colorado South FIPS 0503 (US Feet)\",\n        \"6434\": \"NAD 1983 (2011) StatePlane Connecticut FIPS 0600 (US Feet)\",\n        \"6436\": \"NAD 1983 (2011) StatePlane Delaware FIPS 0700 (US Feet)\",\n        \"6438\": \"NAD 1983 (2011) StatePlane Florida East FIPS 0901 (US Feet)\",\n        \"6441\": \"NAD 1983 (2011) StatePlane Florida North FIPS 0903 (US Feet)\",\n        \"6443\": \"NAD 1983 (2011) StatePlane Florida West FIPS 0902 (US Feet)\",\n        \"6445\": \"NAD 1983 (2011) StatePlane Georgia East FIPS 1001 (US Feet)\",\n        \"6447\": \"NAD 1983 (2011) StatePlane Georgia West FIPS 1002 (US Feet)\",\n        \"6449\": \"NAD 1983 (2011) StatePlane Idaho Central FIPS 1102 (US Feet)\",\n        \"6451\": \"NAD 1983 (2011) StatePlane Idaho East FIPS 1101 (US Feet)\",\n        \"6453\": \"NAD 1983 (2011) StatePlane Idaho West FIPS 1103 (US Feet)\",\n        \"6455\": \"NAD 1983 (2011) StatePlane Illinois East FIPS 1201 (US Feet)\",\n        \"6457\": \"NAD 1983 (2011) StatePlane Illinois West FIPS 1202 (US Feet)\",\n        \"6459\": \"NAD 1983 (2011) StatePlane Indiana East FIPS 1301 (US Feet)\",\n        \"6461\": \"NAD 1983 (2011) StatePlane Indiana West FIPS 1302 (US Feet)\",\n        \"6463\": \"NAD 1983 (2011) StatePlane Iowa North FIPS 1401 (US Feet)\",\n        \"6465\": \"NAD 1983 (2011) StatePlane Iowa South FIPS 1402 (US Feet)\",\n        \"6467\": \"NAD 1983 (2011) StatePlane Kansas North FIPS 1501 (US Feet)\",\n        \"6469\": \"NAD 1983 (2011) StatePlane Kansas South FIPS 1502 (US Feet)\",\n        \"6473\": \"NAD 1983 (2011) StatePlane Kentucky FIPS 1600 (US Feet)\",\n        \"6471\": \"NAD 1983 (2011) StatePlane Kentucky North FIPS 1601 (US Feet)\",\n        \"6475\": \"NAD 1983 (2011) StatePlane Kentucky South FIPS 1602 (US Feet)\",\n        \"6477\": \"NAD 1983 (2011) StatePlane Louisiana North FIPS 1701 (US Feet)\",\n        \"6479\": \"NAD 1983 (2011) StatePlane Louisiana South FIPS 1702 (US Feet)\",\n        \"6484\": \"NAD 1983 (2011) StatePlane Maine East FIPS 1801 (US Feet)\",\n        \"6486\": \"NAD 1983 (2011) StatePlane Maine West FIPS 1802 (US Feet)\",\n        \"6488\": \"NAD 1983 (2011) StatePlane Maryland FIPS 1900 (US Feet)\",\n        \"6492\": \"NAD 1983 (2011) StatePlane Massachusetts FIPS 2001 (US Feet)\",\n        \"6490\": \"NAD 1983 (2011) StatePlane Massachusetts Isl FIPS 2002 (US Feet)\",\n        \"6501\": \"NAD 1983 (2011) StatePlane Minnesota Central FIPS 2202 (US Feet)\",\n        \"6503\": \"NAD 1983 (2011) StatePlane Minnesota North FIPS 2201 (US Feet)\",\n        \"6505\": \"NAD 1983 (2011) StatePlane Minnesota South FIPS 2203 (US Feet)\",\n        \"6507\": \"NAD 1983 (2011) StatePlane Mississippi East FIPS 2301 (US Feet)\",\n        \"6510\": \"NAD 1983 (2011) StatePlane Mississippi West FIPS 2302 (US Feet)\",\n        \"6880\": \"NAD 1983 (2011) StatePlane Nebraska FIPS 2600 (US Feet)\",\n        \"6519\": \"NAD 1983 (2011) StatePlane Nevada Central FIPS 2702 (US Feet)\",\n        \"6521\": \"NAD 1983 (2011) StatePlane Nevada East FIPS 2701 (US Feet)\",\n        \"6523\": \"NAD 1983 (2011) StatePlane Nevada West FIPS 2703 (US Feet)\",\n        \"6525\": \"NAD 1983 (2011) StatePlane New Hampshire FIPS 2800 (US Feet)\",\n        \"6527\": \"NAD 1983 (2011) StatePlane New Jersey FIPS 2900 (US Feet)\",\n        \"6529\": \"NAD 1983 (2011) StatePlane New Mexico Central FIPS3002 (US Feet)\",\n        \"6531\": \"NAD 1983 (2011) StatePlane New Mexico East FIPS 3001 (US Feet)\",\n        \"6533\": \"NAD 1983 (2011) StatePlane New Mexico West FIPS 3003 (US Feet)\",\n        \"6535\": \"NAD 1983 (2011) StatePlane New York Central FIPS 3102 (US Feet)\",\n        \"6537\": \"NAD 1983 (2011) StatePlane New York East FIPS 3101 (US Feet)\",\n        \"6539\": \"NAD 1983 (2011) StatePlane New York Long Isl FIPS 3104 (US Feet)\",\n        \"6541\": \"NAD 1983 (2011) StatePlane New York West FIPS 3103 (US Feet)\",\n        \"6543\": \"NAD 1983 (2011) StatePlane North Carolina FIPS 3200 (US Feet)\",\n        \"6549\": \"NAD 1983 (2011) StatePlane Ohio North FIPS 3401 (US Feet)\",\n        \"6551\": \"NAD 1983 (2011) StatePlane Ohio South FIPS 3402 (US Feet)\",\n        \"6553\": \"NAD 1983 (2011) StatePlane Oklahoma North FIPS 3501 (US Feet)\",\n        \"6555\": \"NAD 1983 (2011) StatePlane Oklahoma South FIPS 3502 (US Feet)\",\n        \"6563\": \"NAD 1983 (2011) StatePlane Pennsylvania North FIPS3701 (US Feet)\",\n        \"6565\": \"NAD 1983 (2011) StatePlane Pennsylvania South FIPS3702 (US Feet)\",\n        \"6568\": \"NAD 1983 (2011) StatePlane Rhode Island FIPS 3800 (US Feet)\",\n        \"6572\": \"NAD 1983 (2011) StatePlane South Dakota N FIPS 4001 (US Feet)\",\n        \"6574\": \"NAD 1983 (2011) StatePlane South Dakota S FIPS 4002 (US Feet)\",\n        \"6576\": \"NAD 1983 (2011) StatePlane Tennessee FIPS 4100 (US Feet)\",\n        \"6578\": \"NAD 1983 (2011) StatePlane Texas Central FIPS 4203 (US Feet)\",\n        \"6584\": \"NAD 1983 (2011) StatePlane Texas N Central FIPS 4202 (US Feet)\",\n        \"6582\": \"NAD 1983 (2011) StatePlane Texas North FIPS 4201 (US Feet)\",\n        \"6588\": \"NAD 1983 (2011) StatePlane Texas S Central FIPS 4204 (US Feet)\",\n        \"6586\": \"NAD 1983 (2011) StatePlane Texas South FIPS 4205 (US Feet)\",\n        \"6625\": \"NAD 1983 (2011) StatePlane Utah Central FIPS 4302 (US Feet)\",\n        \"6626\": \"NAD 1983 (2011) StatePlane Utah North FIPS 4301 (US Feet)\",\n        \"6627\": \"NAD 1983 (2011) StatePlane Utah South FIPS 4303 (US Feet)\",\n        \"6590\": \"NAD 1983 (2011) StatePlane Vermont FIPS 4400 (US Feet)\",\n        \"6593\": \"NAD 1983 (2011) StatePlane Virginia North FIPS 4501 (US Feet)\",\n        \"6595\": \"NAD 1983 (2011) StatePlane Virginia South FIPS 4502 (US Feet)\",\n        \"6597\": \"NAD 1983 (2011) StatePlane Washington North FIPS 4601 (US Feet)\",\n        \"6599\": \"NAD 1983 (2011) StatePlane Washington South FIPS 4602 (US Feet)\",\n        \"6601\": \"NAD 1983 (2011) StatePlane West Virginia N FIPS 4701 (US Feet)\",\n        \"6603\": \"NAD 1983 (2011) StatePlane West Virginia S FIPS 4702 (US Feet)\",\n        \"6605\": \"NAD 1983 (2011) StatePlane Wisconsin Central FIPS 4802 (US Feet)\",\n        \"6607\": \"NAD 1983 (2011) StatePlane Wisconsin North FIPS 4801 (US Feet)\",\n        \"6609\": \"NAD 1983 (2011) StatePlane Wisconsin South FIPS 4803 (US Feet)\",\n        \"6614\": \"NAD 1983 (2011) StatePlane Wyoming E Central FIPS 4902 (US Feet)\",\n        \"6612\": \"NAD 1983 (2011) StatePlane Wyoming East FIPS 4901 (US Feet)\",\n        \"6618\": \"NAD 1983 (2011) StatePlane Wyoming W Central FIPS 4903 (US Feet)\",\n        \"6616\": \"NAD 1983 (2011) StatePlane Wyoming West FIPS 4904 (US Feet)\"\n      },\n      \"NAD 1983 (CORS96) (Intl Feet)\": {\n        \"103226\": \"NAD 1983 (CORS96) StatePlane Arizona Central FIPS 0202 (Intl Feet)\",\n        \"103225\": \"NAD 1983 (CORS96) StatePlane Arizona East FIPS 0201 (Intl Feet)\",\n        \"103227\": \"NAD 1983 (CORS96) StatePlane Arizona West FIPS 0203 (Intl Feet)\",\n        \"103385\": \"NAD 1983 (CORS96) StatePlane Michigan Central FIPS 2112 (Intl Feet)\",\n        \"103384\": \"NAD 1983 (CORS96) StatePlane Michigan North FIPS 2111 (Intl Feet)\",\n        \"103386\": \"NAD 1983 (CORS96) StatePlane Michigan South FIPS 2113 (Intl Feet)\",\n        \"103473\": \"NAD 1983 (CORS96) StatePlane Montana FIPS 2500 (Intl Feet)\",\n        \"103504\": \"NAD 1983 (CORS96) StatePlane North Dakota N FIPS 3301 (Intl Feet)\",\n        \"103505\": \"NAD 1983 (CORS96) StatePlane North Dakota S FIPS 3302 (Intl Feet)\",\n        \"6885\": \"NAD 1983 (CORS96) StatePlane Oregon North FIPS 3601 (Intl Feet)\",\n        \"6887\": \"NAD 1983 (CORS96) StatePlane Oregon South FIPS 3602 (Intl Feet)\",\n        \"103521\": \"NAD 1983 (CORS96) StatePlane South Carolina FIPS 3900 (Intl Feet)\",\n        \"103553\": \"NAD 1983 (CORS96) StatePlane Utah Central FIPS 4302 (Intl Feet)\",\n        \"103552\": \"NAD 1983 (CORS96) StatePlane Utah North FIPS 4301 (Intl Feet)\",\n        \"103554\": \"NAD 1983 (CORS96) StatePlane Utah South FIPS 4303 (Intl Feet)\"\n      },\n      \"NAD 1983 (CORS96) (Meters)\": {\n        \"103373\": \"NAD 1983 (CORS96) Maine 2000 Central Zone (Meters)\",\n        \"103372\": \"NAD 1983 (CORS96) Maine 2000 East Zone (Meters)\",\n        \"103374\": \"NAD 1983 (CORS96) Maine 2000 West Zone (Meters)\",\n        \"103220\": \"NAD 1983 (CORS96) StatePlane Alabama East FIPS 0101 (Meters)\",\n        \"103221\": \"NAD 1983 (CORS96) StatePlane Alabama West FIPS 0102 (Meters)\",\n        \"102366\": \"NAD 1983 (CORS96) StatePlane Alaska  1 FIPS 5001 (Meters)\",\n        \"102367\": \"NAD 1983 (CORS96) StatePlane Alaska  2 FIPS 5002 (Meters)\",\n        \"102368\": \"NAD 1983 (CORS96) StatePlane Alaska  3 FIPS 5003 (Meters)\",\n        \"102369\": \"NAD 1983 (CORS96) StatePlane Alaska  4 FIPS 5004 (Meters)\",\n        \"102370\": \"NAD 1983 (CORS96) StatePlane Alaska  5 FIPS 5005 (Meters)\",\n        \"102371\": \"NAD 1983 (CORS96) StatePlane Alaska  6 FIPS 5006 (Meters)\",\n        \"102372\": \"NAD 1983 (CORS96) StatePlane Alaska  7 FIPS 5007 (Meters)\",\n        \"102373\": \"NAD 1983 (CORS96) StatePlane Alaska  8 FIPS 5008 (Meters)\",\n        \"102374\": \"NAD 1983 (CORS96) StatePlane Alaska  9 FIPS 5009 (Meters)\",\n        \"102375\": \"NAD 1983 (CORS96) StatePlane Alaska 10 FIPS 5010 (Meters)\",\n        \"103223\": \"NAD 1983 (CORS96) StatePlane Arizona Central FIPS 0202 (Meters)\",\n        \"103222\": \"NAD 1983 (CORS96) StatePlane Arizona East FIPS 0201 (Meters)\",\n        \"103224\": \"NAD 1983 (CORS96) StatePlane Arizona West FIPS 0203 (Meters)\",\n        \"103228\": \"NAD 1983 (CORS96) StatePlane Arkansas North FIPS 0301 (Meters)\",\n        \"103229\": \"NAD 1983 (CORS96) StatePlane Arkansas South FIPS 0302 (Meters)\",\n        \"103232\": \"NAD 1983 (CORS96) StatePlane California I FIPS 0401 (Meters)\",\n        \"103233\": \"NAD 1983 (CORS96) StatePlane California II FIPS 0402 (Meters)\",\n        \"103234\": \"NAD 1983 (CORS96) StatePlane California III FIPS 0403 (Meters)\",\n        \"103235\": \"NAD 1983 (CORS96) StatePlane California IV FIPS 0404 (Meters)\",\n        \"103236\": \"NAD 1983 (CORS96) StatePlane California V FIPS 0405 (Meters)\",\n        \"103237\": \"NAD 1983 (CORS96) StatePlane California VI FIPS 0406 (Meters)\",\n        \"103245\": \"NAD 1983 (CORS96) StatePlane Colorado Central FIPS 0502 (Meter)\",\n        \"103244\": \"NAD 1983 (CORS96) StatePlane Colorado North FIPS 0501 (Meters)\",\n        \"103246\": \"NAD 1983 (CORS96) StatePlane Colorado South FIPS 0503 (Meters)\",\n        \"103250\": \"NAD 1983 (CORS96) StatePlane Connecticut FIPS 0600 (Meters)\",\n        \"103252\": \"NAD 1983 (CORS96) StatePlane Delaware FIPS 0700 (Meters)\",\n        \"103254\": \"NAD 1983 (CORS96) StatePlane Florida East FIPS 0901 (Meters)\",\n        \"103256\": \"NAD 1983 (CORS96) StatePlane Florida North FIPS 0903 (Meters)\",\n        \"103255\": \"NAD 1983 (CORS96) StatePlane Florida West FIPS 0902 (Meters)\",\n        \"103260\": \"NAD 1983 (CORS96) StatePlane Georgia East FIPS 1001 (Meters)\",\n        \"103261\": \"NAD 1983 (CORS96) StatePlane Georgia West FIPS 1002 (Meters)\",\n        \"103265\": \"NAD 1983 (CORS96) StatePlane Idaho Central FIPS 1102 (Meters)\",\n        \"103264\": \"NAD 1983 (CORS96) StatePlane Idaho East FIPS 1101 (Meters)\",\n        \"103266\": \"NAD 1983 (CORS96) StatePlane Idaho West FIPS 1103 (Meters)\",\n        \"103270\": \"NAD 1983 (CORS96) StatePlane Illinois East FIPS 1201 (Meters)\",\n        \"103271\": \"NAD 1983 (CORS96) StatePlane Illinois West FIPS 1202 (Meters)\",\n        \"103274\": \"NAD 1983 (CORS96) StatePlane Indiana East FIPS 1301 (Meters)\",\n        \"103275\": \"NAD 1983 (CORS96) StatePlane Indiana West FIPS 1302 (Meters)\",\n        \"103278\": \"NAD 1983 (CORS96) StatePlane Iowa North FIPS 1401 (Meters)\",\n        \"103279\": \"NAD 1983 (CORS96) StatePlane Iowa South FIPS 1402 (Meters)\",\n        \"103282\": \"NAD 1983 (CORS96) StatePlane Kansas North FIPS 1501 (Meters)\",\n        \"103283\": \"NAD 1983 (CORS96) StatePlane Kansas South FIPS 1502 (Meters)\",\n        \"103288\": \"NAD 1983 (CORS96) StatePlane Kentucky FIPS 1600 (Meters)\",\n        \"103286\": \"NAD 1983 (CORS96) StatePlane Kentucky North FIPS 1601 (Meters)\",\n        \"103290\": \"NAD 1983 (CORS96) StatePlane Kentucky South FIPS 1602 (Meters)\",\n        \"103292\": \"NAD 1983 (CORS96) StatePlane Louisiana North FIPS 1701 (Meters)\",\n        \"103293\": \"NAD 1983 (CORS96) StatePlane Louisiana South FIPS 1702 (Meters)\",\n        \"103296\": \"NAD 1983 (CORS96) StatePlane Maine East FIPS 1801 (Meters)\",\n        \"103297\": \"NAD 1983 (CORS96) StatePlane Maine West FIPS 1802 (Meters)\",\n        \"103375\": \"NAD 1983 (CORS96) StatePlane Maryland FIPS 1900 (Meters)\",\n        \"103377\": \"NAD 1983 (CORS96) StatePlane Massachusetts FIPS 2001 (Meters)\",\n        \"103378\": \"NAD 1983 (CORS96) StatePlane Massachusetts Isl FIPS 2002 (Meters)\",\n        \"103382\": \"NAD 1983 (CORS96) StatePlane Michigan Central FIPS 2112 (Meters)\",\n        \"103381\": \"NAD 1983 (CORS96) StatePlane Michigan North FIPS 2111 (Meters)\",\n        \"103383\": \"NAD 1983 (CORS96) StatePlane Michigan South FIPS 2113 (Meters)\",\n        \"103388\": \"NAD 1983 (CORS96) StatePlane Minnesota Central FIPS 2202 (Meters)\",\n        \"103387\": \"NAD 1983 (CORS96) StatePlane Minnesota North FIPS 2201 (Meters)\",\n        \"103389\": \"NAD 1983 (CORS96) StatePlane Minnesota South FIPS 2203 (Meters)\",\n        \"103393\": \"NAD 1983 (CORS96) StatePlane Mississippi East FIPS 2301 (Meters)\",\n        \"103394\": \"NAD 1983 (CORS96) StatePlane Mississippi West FIPS 2302 (Meters)\",\n        \"103398\": \"NAD 1983 (CORS96) StatePlane Missouri Central FIPS 2402 (Meters)\",\n        \"103397\": \"NAD 1983 (CORS96) StatePlane Missouri East FIPS 2401 (Meters)\",\n        \"103399\": \"NAD 1983 (CORS96) StatePlane Missouri West FIPS 2403 (Meters)\",\n        \"103472\": \"NAD 1983 (CORS96) StatePlane Montana FIPS 2500 (Meters)\",\n        \"103474\": \"NAD 1983 (CORS96) StatePlane Nebraska FIPS 2600 (Meters)\",\n        \"103477\": \"NAD 1983 (CORS96) StatePlane Nevada Central FIPS 2702 (Meters)\",\n        \"103476\": \"NAD 1983 (CORS96) StatePlane Nevada East FIPS 2701 (Meters)\",\n        \"103478\": \"NAD 1983 (CORS96) StatePlane Nevada West FIPS 2703 (Meters)\",\n        \"103482\": \"NAD 1983 (CORS96) StatePlane New Hampshire FIPS 2800 (Meters)\",\n        \"103484\": \"NAD 1983 (CORS96) StatePlane New Jersey FIPS 2900 (Meters)\",\n        \"103487\": \"NAD 1983 (CORS96) StatePlane New Mexico Central FIPS 3002 (Meters)\",\n        \"103486\": \"NAD 1983 (CORS96) StatePlane New Mexico East FIPS 3001 (Meters)\",\n        \"103488\": \"NAD 1983 (CORS96) StatePlane New Mexico West FIPS 3003 (Meters)\",\n        \"103493\": \"NAD 1983 (CORS96) StatePlane New York Central FIPS 3102 (Meters)\",\n        \"103492\": \"NAD 1983 (CORS96) StatePlane New York East FIPS 3101 (Meters)\",\n        \"103495\": \"NAD 1983 (CORS96) StatePlane New York Long Isl FIPS 3104 (Meters)\",\n        \"103494\": \"NAD 1983 (CORS96) StatePlane New York West FIPS 3103 (Meters)\",\n        \"103500\": \"NAD 1983 (CORS96) StatePlane North Carolina FIPS 3200 (Meters)\",\n        \"103502\": \"NAD 1983 (CORS96) StatePlane North Dakota N FIPS 3301 (Meters)\",\n        \"103503\": \"NAD 1983 (CORS96) StatePlane North Dakota S FIPS 3302 (Meters)\",\n        \"103506\": \"NAD 1983 (CORS96) StatePlane Ohio North FIPS 3401 (Meters)\",\n        \"103507\": \"NAD 1983 (CORS96) StatePlane Ohio South FIPS 3402 (Meters)\",\n        \"103510\": \"NAD 1983 (CORS96) StatePlane Oklahoma North FIPS 3501 (Meters)\",\n        \"103511\": \"NAD 1983 (CORS96) StatePlane Oklahoma South FIPS 3502 (Meters)\",\n        \"6884\": \"NAD 1983 (CORS96) StatePlane Oregon North FIPS 3601 (Meters)\",\n        \"6886\": \"NAD 1983 (CORS96) StatePlane Oregon South FIPS 3602 (Meters)\",\n        \"103514\": \"NAD 1983 (CORS96) StatePlane Pennsylvania North FIPS 3701 (Meters)\",\n        \"103516\": \"NAD 1983 (CORS96) StatePlane Pennsylvania South FIPS 3702 (Meters)\",\n        \"6307\": \"NAD 1983 (CORS96) StatePlane Puerto Rico and Virgin Islands (Meters)\",\n        \"103518\": \"NAD 1983 (CORS96) StatePlane Rhode Island FIPS 3800 (Meters)\",\n        \"103520\": \"NAD 1983 (CORS96) StatePlane South Carolina FIPS 3900 (Meters)\",\n        \"103522\": \"NAD 1983 (CORS96) StatePlane South Dakota N FIPS 4001 (Meters)\",\n        \"103523\": \"NAD 1983 (CORS96) StatePlane South Dakota S FIPS 4002 (Meters)\",\n        \"103526\": \"NAD 1983 (CORS96) StatePlane Tennessee FIPS 4100 (Meters)\",\n        \"103541\": \"NAD 1983 (CORS96) StatePlane Texas Central FIPS 4203 (Meters)\",\n        \"103540\": \"NAD 1983 (CORS96) StatePlane Texas N Central FIPS 4202 (Meters)\",\n        \"103539\": \"NAD 1983 (CORS96) StatePlane Texas North FIPS 4201 (Meters)\",\n        \"103542\": \"NAD 1983 (CORS96) StatePlane Texas S Central FIPS 4204 (Meters)\",\n        \"103543\": \"NAD 1983 (CORS96) StatePlane Texas South FIPS 4205 (Meters)\",\n        \"103550\": \"NAD 1983 (CORS96) StatePlane Utah Central FIPS 4302 (Meters)\",\n        \"103549\": \"NAD 1983 (CORS96) StatePlane Utah North FIPS 4301 (Meters)\",\n        \"103551\": \"NAD 1983 (CORS96) StatePlane Utah South FIPS 4303 (Meters)\",\n        \"103558\": \"NAD 1983 (CORS96) StatePlane Vermont FIPS 4400 (Meters)\",\n        \"103559\": \"NAD 1983 (CORS96) StatePlane Virginia North FIPS 4501 (Meters)\",\n        \"103560\": \"NAD 1983 (CORS96) StatePlane Virginia South FIPS 4502 (Meters)\",\n        \"103563\": \"NAD 1983 (CORS96) StatePlane Washington North FIPS 4601 (Meters)\",\n        \"103564\": \"NAD 1983 (CORS96) StatePlane Washington South FIPS 4602 (Meters)\",\n        \"103567\": \"NAD 1983 (CORS96) StatePlane West Virginia N FIPS 4701 (Meters)\",\n        \"103568\": \"NAD 1983 (CORS96) StatePlane West Virginia S FIPS 4702 (Meters)\",\n        \"103572\": \"NAD 1983 (CORS96) StatePlane Wisconsin Central FIPS 4802 (Meters)\",\n        \"103571\": \"NAD 1983 (CORS96) StatePlane Wisconsin North FIPS 4801 (Meters)\",\n        \"103573\": \"NAD 1983 (CORS96) StatePlane Wisconsin South FIPS 4803 (Meters)\",\n        \"103578\": \"NAD 1983 (CORS96) StatePlane Wyoming E Central FIPS 4902 (Meters)\",\n        \"103577\": \"NAD 1983 (CORS96) StatePlane Wyoming East FIPS 4901 (Meters)\",\n        \"103579\": \"NAD 1983 (CORS96) StatePlane Wyoming W Central FIPS 4903 (Meters)\",\n        \"103580\": \"NAD 1983 (CORS96) StatePlane Wyoming West FIPS 4904 (Meters)\"\n      },\n      \"NAD 1983 (CORS96) (US Feet)\": {\n        \"103230\": \"NAD 1983 (CORS96) StatePlane Arkansas North FIPS 0301 (US Feet)\",\n        \"103231\": \"NAD 1983 (CORS96) StatePlane Arkansas South FIPS 0302 (US Feet)\",\n        \"103238\": \"NAD 1983 (CORS96) StatePlane California I FIPS 0401 (US Feet)\",\n        \"103239\": \"NAD 1983 (CORS96) StatePlane California II FIPS 0402 (US Feet)\",\n        \"103240\": \"NAD 1983 (CORS96) StatePlane California III FIPS 0403 (US Feet)\",\n        \"103241\": \"NAD 1983 (CORS96) StatePlane California IV FIPS 0404 (US Feet)\",\n        \"103242\": \"NAD 1983 (CORS96) StatePlane California V FIPS 0405 (US Feet)\",\n        \"103243\": \"NAD 1983 (CORS96) StatePlane California VI FIPS 0406 (US Feet)\",\n        \"103248\": \"NAD 1983 (CORS96) StatePlane Colorado Central FIPS 0502 (US Feet)\",\n        \"103247\": \"NAD 1983 (CORS96) StatePlane Colorado North FIPS 0501 (US Feet)\",\n        \"103249\": \"NAD 1983 (CORS96) StatePlane Colorado South FIPS 0503 (US Feet)\",\n        \"103251\": \"NAD 1983 (CORS96) StatePlane Connecticut FIPS 0600 (US Feet)\",\n        \"103253\": \"NAD 1983 (CORS96) StatePlane Delaware FIPS 0700 (US Feet)\",\n        \"103257\": \"NAD 1983 (CORS96) StatePlane Florida East FIPS 0901 (US Feet)\",\n        \"103259\": \"NAD 1983 (CORS96) StatePlane Florida North FIPS 0903 (US Feet)\",\n        \"103258\": \"NAD 1983 (CORS96) StatePlane Florida West FIPS 0902 (US Feet)\",\n        \"103262\": \"NAD 1983 (CORS96) StatePlane Georgia East FIPS 1001 (US Feet)\",\n        \"103263\": \"NAD 1983 (CORS96) StatePlane Georgia West FIPS 1002 (US Feet)\",\n        \"103268\": \"NAD 1983 (CORS96) StatePlane Idaho Central FIPS 1102 (US Feet)\",\n        \"103267\": \"NAD 1983 (CORS96) StatePlane Idaho East FIPS 1101 (US Feet)\",\n        \"103269\": \"NAD 1983 (CORS96) StatePlane Idaho West FIPS 1103 (US Feet)\",\n        \"103272\": \"NAD 1983 (CORS96) StatePlane Illinois East FIPS 1201 (US Feet)\",\n        \"103273\": \"NAD 1983 (CORS96) StatePlane Illinois West FIPS 1202 (US Feet)\",\n        \"103276\": \"NAD 1983 (CORS96) StatePlane Indiana East FIPS 1301 (US Feet)\",\n        \"103277\": \"NAD 1983 (CORS96) StatePlane Indiana West FIPS 1302 (US Feet)\",\n        \"103280\": \"NAD 1983 (CORS96) StatePlane Iowa North FIPS 1401 (US Feet)\",\n        \"103281\": \"NAD 1983 (CORS96) StatePlane Iowa South FIPS 1402 (US Feet)\",\n        \"103284\": \"NAD 1983 (CORS96) StatePlane Kansas North FIPS 1501 (US Feet)\",\n        \"103285\": \"NAD 1983 (CORS96) StatePlane Kansas South FIPS 1502 (US Feet)\",\n        \"103289\": \"NAD 1983 (CORS96) StatePlane Kentucky FIPS 1600 (US Feet)\",\n        \"103287\": \"NAD 1983 (CORS96) StatePlane Kentucky North FIPS 1601 (US Feet)\",\n        \"103291\": \"NAD 1983 (CORS96) StatePlane Kentucky South FIPS 1602 (US Feet)\",\n        \"103294\": \"NAD 1983 (CORS96) StatePlane Louisiana North FIPS 1701 (US Feet)\",\n        \"103295\": \"NAD 1983 (CORS96) StatePlane Louisiana South FIPS 1702 (US Feet)\",\n        \"103298\": \"NAD 1983 (CORS96) StatePlane Maine East FIPS 1801 (US Feet)\",\n        \"103299\": \"NAD 1983 (CORS96) StatePlane Maine West FIPS 1802 (US Feet)\",\n        \"103376\": \"NAD 1983 (CORS96) StatePlane Maryland FIPS 1900 (US Feet)\",\n        \"103379\": \"NAD 1983 (CORS96) StatePlane Massachusetts FIPS 2001 (US Feet)\",\n        \"103380\": \"NAD 1983 (CORS96) StatePlane Massachusetts Isl FIPS 2002 (US Feet)\",\n        \"103391\": \"NAD 1983 (CORS96) StatePlane Minnesota Central FIPS 2202 (US Feet)\",\n        \"103390\": \"NAD 1983 (CORS96) StatePlane Minnesota North FIPS 2201 (US Feet)\",\n        \"103392\": \"NAD 1983 (CORS96) StatePlane Minnesota South FIPS 2203 (US Feet)\",\n        \"103395\": \"NAD 1983 (CORS96) StatePlane Mississippi East FIPS 2301 (US Feet)\",\n        \"103396\": \"NAD 1983 (CORS96) StatePlane Mississippi West FIPS 2302 (US Feet)\",\n        \"103475\": \"NAD 1983 (CORS96) StatePlane Nebraska FIPS 2600 (US Feet)\",\n        \"103480\": \"NAD 1983 (CORS96) StatePlane Nevada Central FIPS 2702 (US Feet)\",\n        \"103479\": \"NAD 1983 (CORS96) StatePlane Nevada East FIPS 2701 (US Feet)\",\n        \"103481\": \"NAD 1983 (CORS96) StatePlane Nevada West FIPS 2703 (US Feet)\",\n        \"103483\": \"NAD 1983 (CORS96) StatePlane New Hampshire FIPS 2800 (US Feet)\",\n        \"103485\": \"NAD 1983 (CORS96) StatePlane New Jersey FIPS 2900 (US Feet)\",\n        \"103490\": \"NAD 1983 (CORS96) StatePlane New Mexico Central FIPS3002 (US Feet)\",\n        \"103489\": \"NAD 1983 (CORS96) StatePlane New Mexico East FIPS 3001 (US Feet)\",\n        \"103491\": \"NAD 1983 (CORS96) StatePlane New Mexico West FIPS 3003 (US Feet)\",\n        \"103497\": \"NAD 1983 (CORS96) StatePlane New York Central FIPS 3102 (US Feet)\",\n        \"103496\": \"NAD 1983 (CORS96) StatePlane New York East FIPS 3101 (US Feet)\",\n        \"103499\": \"NAD 1983 (CORS96) StatePlane New York Long Isl FIPS 3104 (US Feet)\",\n        \"103498\": \"NAD 1983 (CORS96) StatePlane New York West FIPS 3103 (US Feet)\",\n        \"103501\": \"NAD 1983 (CORS96) StatePlane North Carolina FIPS 3200 (US Feet)\",\n        \"103508\": \"NAD 1983 (CORS96) StatePlane Ohio North FIPS 3401 (US Feet)\",\n        \"103509\": \"NAD 1983 (CORS96) StatePlane Ohio South FIPS 3402 (US Feet)\",\n        \"103512\": \"NAD 1983 (CORS96) StatePlane Oklahoma North FIPS 3501 (US Feet)\",\n        \"103513\": \"NAD 1983 (CORS96) StatePlane Oklahoma South FIPS 3502 (US Feet)\",\n        \"103515\": \"NAD 1983 (CORS96) StatePlane Pennsylvania North FIPS3701 (US Feet)\",\n        \"103517\": \"NAD 1983 (CORS96) StatePlane Pennsylvania South FIPS3702 (US Feet)\",\n        \"103519\": \"NAD 1983 (CORS96) StatePlane Rhode Island FIPS 3800 (US Feet)\",\n        \"103524\": \"NAD 1983 (CORS96) StatePlane South Dakota N FIPS 4001 (US Feet)\",\n        \"103525\": \"NAD 1983 (CORS96) StatePlane South Dakota S FIPS 4002 (US Feet)\",\n        \"103527\": \"NAD 1983 (CORS96) StatePlane Tennessee FIPS 4100 (US Feet)\",\n        \"103546\": \"NAD 1983 (CORS96) StatePlane Texas Central FIPS 4203 (US Feet)\",\n        \"103545\": \"NAD 1983 (CORS96) StatePlane Texas N Central FIPS 4202 (US Feet)\",\n        \"103544\": \"NAD 1983 (CORS96) StatePlane Texas North FIPS 4201 (US Feet)\",\n        \"103547\": \"NAD 1983 (CORS96) StatePlane Texas S Central FIPS 4204 (US Feet)\",\n        \"103548\": \"NAD 1983 (CORS96) StatePlane Texas South FIPS 4205 (US Feet)\",\n        \"103556\": \"NAD 1983 (CORS96) StatePlane Utah Central FIPS 4302 (US Feet)\",\n        \"103555\": \"NAD 1983 (CORS96) StatePlane Utah North FIPS 4301 (US Feet)\",\n        \"103557\": \"NAD 1983 (CORS96) StatePlane Utah South FIPS 4303 (US Feet)\",\n        \"103561\": \"NAD 1983 (CORS96) StatePlane Virginia North FIPS 4501 (US Feet)\",\n        \"103562\": \"NAD 1983 (CORS96) StatePlane Virginia South FIPS 4502 (US Feet)\",\n        \"103565\": \"NAD 1983 (CORS96) StatePlane Washington North FIPS 4601 (US Feet)\",\n        \"103566\": \"NAD 1983 (CORS96) StatePlane Washington South FIPS 4602 (US Feet)\",\n        \"103569\": \"NAD 1983 (CORS96) StatePlane West Virginia N FIPS 4701 (US Feet)\",\n        \"103570\": \"NAD 1983 (CORS96) StatePlane West Virginia S FIPS 4702 (US Feet)\",\n        \"103575\": \"NAD 1983 (CORS96) StatePlane Wisconsin Central FIPS 4802 (US Feet)\",\n        \"103574\": \"NAD 1983 (CORS96) StatePlane Wisconsin North FIPS 4801 (US Feet)\",\n        \"103576\": \"NAD 1983 (CORS96) StatePlane Wisconsin South FIPS 4803 (US Feet)\",\n        \"103582\": \"NAD 1983 (CORS96) StatePlane Wyoming E Central FIPS 4902 (US Feet)\",\n        \"103581\": \"NAD 1983 (CORS96) StatePlane Wyoming East FIPS 4901 (US Feet)\",\n        \"103583\": \"NAD 1983 (CORS96) StatePlane Wyoming W Central FIPS 4903 (US Feet)\",\n        \"103585\": \"NAD 1983 (CORS96) StatePlane Wyoming West FIPS 4904 (US Feet)\"\n      },\n      \"NAD 1983 (Intl Feet)\": {\n        \"2223\": \"NAD 1983 StatePlane Arizona Central FIPS 0202 (Intl Feet)\",\n        \"2222\": \"NAD 1983 StatePlane Arizona East FIPS 0201 (Intl Feet)\",\n        \"2224\": \"NAD 1983 StatePlane Arizona West FIPS 0203 (Intl Feet)\",\n        \"2252\": \"NAD 1983 StatePlane Michigan Central FIPS 2112 (Intl Feet)\",\n        \"2251\": \"NAD 1983 StatePlane Michigan North FIPS 2111 (Intl Feet)\",\n        \"2253\": \"NAD 1983 StatePlane Michigan South FIPS 2113 (Intl Feet)\",\n        \"2256\": \"NAD 1983 StatePlane Montana FIPS 2500 (Intl Feet)\",\n        \"2265\": \"NAD 1983 StatePlane North Dakota N FIPS 3301 (Intl Feet)\",\n        \"2266\": \"NAD 1983 StatePlane North Dakota S FIPS 3302 (Intl Feet)\",\n        \"2269\": \"NAD 1983 StatePlane Oregon North FIPS 3601 (Intl Feet)\",\n        \"2270\": \"NAD 1983 StatePlane Oregon South FIPS 3602 (Intl Feet)\",\n        \"2273\": \"NAD 1983 StatePlane South Carolina FIPS 3900 (Intl Feet)\",\n        \"2281\": \"NAD 1983 StatePlane Utah Central FIPS 4302 (Intl Feet)\",\n        \"2280\": \"NAD 1983 StatePlane Utah North FIPS 4301 (Intl Feet)\",\n        \"2282\": \"NAD 1983 StatePlane Utah South FIPS 4303 (Intl Feet)\"\n      },\n      \"NAD 1983 (Meters)\": {\n        \"3463\": \"NAD 1983 Maine 2000 Central Zone (Meters)\",\n        \"3072\": \"NAD 1983 Maine 2000 East Zone (Meters)\",\n        \"3074\": \"NAD 1983 Maine 2000 West Zone (Meters)\",\n        \"26929\": \"NAD 1983 StatePlane Alabama East FIPS 0101 (Meters)\",\n        \"26930\": \"NAD 1983 StatePlane Alabama West FIPS 0102 (Meters)\",\n        \"26931\": \"NAD 1983 StatePlane Alaska  1 FIPS 5001 (Meters)\",\n        \"26932\": \"NAD 1983 StatePlane Alaska  2 FIPS 5002 (Meters)\",\n        \"26933\": \"NAD 1983 StatePlane Alaska  3 FIPS 5003 (Meters)\",\n        \"26934\": \"NAD 1983 StatePlane Alaska  4 FIPS 5004 (Meters)\",\n        \"26935\": \"NAD 1983 StatePlane Alaska  5 FIPS 5005 (Meters)\",\n        \"26936\": \"NAD 1983 StatePlane Alaska  6 FIPS 5006 (Meters)\",\n        \"26937\": \"NAD 1983 StatePlane Alaska  7 FIPS 5007 (Meters)\",\n        \"26938\": \"NAD 1983 StatePlane Alaska  8 FIPS 5008 (Meters)\",\n        \"26939\": \"NAD 1983 StatePlane Alaska  9 FIPS 5009 (Meters)\",\n        \"26940\": \"NAD 1983 StatePlane Alaska 10 FIPS 5010 (Meters)\",\n        \"26949\": \"NAD 1983 StatePlane Arizona Central FIPS 0202 (Meters)\",\n        \"26948\": \"NAD 1983 StatePlane Arizona East FIPS 0201 (Meters)\",\n        \"26950\": \"NAD 1983 StatePlane Arizona West FIPS 0203 (Meters)\",\n        \"26951\": \"NAD 1983 StatePlane Arkansas North FIPS 0301 (Meters)\",\n        \"26952\": \"NAD 1983 StatePlane Arkansas South FIPS 0302 (Meters)\",\n        \"26941\": \"NAD 1983 StatePlane California I FIPS 0401 (Meters)\",\n        \"26942\": \"NAD 1983 StatePlane California II FIPS 0402 (Meters)\",\n        \"26943\": \"NAD 1983 StatePlane California III FIPS 0403 (Meters)\",\n        \"26944\": \"NAD 1983 StatePlane California IV FIPS 0404 (Meters)\",\n        \"26945\": \"NAD 1983 StatePlane California V FIPS 0405 (Meters)\",\n        \"26946\": \"NAD 1983 StatePlane California VI FIPS 0406 (Meters)\",\n        \"26954\": \"NAD 1983 StatePlane Colorado Central FIPS 0502 (Meters)\",\n        \"26953\": \"NAD 1983 StatePlane Colorado North FIPS 0501 (Meters)\",\n        \"26955\": \"NAD 1983 StatePlane Colorado South FIPS 0503 (Meters)\",\n        \"26956\": \"NAD 1983 StatePlane Connecticut FIPS 0600 (Meters)\",\n        \"26957\": \"NAD 1983 StatePlane Delaware FIPS 0700 (Meters)\",\n        \"26958\": \"NAD 1983 StatePlane Florida East FIPS 0901 (Meters)\",\n        \"26960\": \"NAD 1983 StatePlane Florida North FIPS 0903 (Meters)\",\n        \"26959\": \"NAD 1983 StatePlane Florida West FIPS 0902 (Meters)\",\n        \"26966\": \"NAD 1983 StatePlane Georgia East FIPS 1001 (Meters)\",\n        \"26967\": \"NAD 1983 StatePlane Georgia West FIPS 1002 (Meters)\",\n        \"65161\": \"NAD 1983 StatePlane Guam FIPS 5400 (Meters)\",\n        \"26961\": \"NAD 1983 StatePlane Hawaii 1 FIPS 5101 (Meters)\",\n        \"26962\": \"NAD 1983 StatePlane Hawaii 2 FIPS 5102 (Meters)\",\n        \"26963\": \"NAD 1983 StatePlane Hawaii 3 FIPS 5103 (Meters)\",\n        \"26964\": \"NAD 1983 StatePlane Hawaii 4 FIPS 5104 (Meters)\",\n        \"26965\": \"NAD 1983 StatePlane Hawaii 5 FIPS 5105 (Meters)\",\n        \"26969\": \"NAD 1983 StatePlane Idaho Central FIPS 1102 (Meters)\",\n        \"26968\": \"NAD 1983 StatePlane Idaho East FIPS 1101 (Meters)\",\n        \"26970\": \"NAD 1983 StatePlane Idaho West FIPS 1103 (Meters)\",\n        \"26971\": \"NAD 1983 StatePlane Illinois East FIPS 1201 (Meters)\",\n        \"26972\": \"NAD 1983 StatePlane Illinois West FIPS 1202 (Meters)\",\n        \"26973\": \"NAD 1983 StatePlane Indiana East FIPS 1301 (Meters)\",\n        \"26974\": \"NAD 1983 StatePlane Indiana West FIPS 1302 (Meters)\",\n        \"26975\": \"NAD 1983 StatePlane Iowa North FIPS 1401 (Meters)\",\n        \"26976\": \"NAD 1983 StatePlane Iowa South FIPS 1402 (Meters)\",\n        \"26977\": \"NAD 1983 StatePlane Kansas North FIPS 1501 (Meters)\",\n        \"26978\": \"NAD 1983 StatePlane Kansas South FIPS 1502 (Meters)\",\n        \"3088\": \"NAD 1983 StatePlane Kentucky FIPS 1600 (Meters)\",\n        \"2205\": \"NAD 1983 StatePlane Kentucky North FIPS 1601 (Meters)\",\n        \"26980\": \"NAD 1983 StatePlane Kentucky South FIPS 1602 (Meters)\",\n        \"26981\": \"NAD 1983 StatePlane Louisiana North FIPS 1701 (Meters)\",\n        \"32199\": \"NAD 1983 StatePlane Louisiana Offshore FIPS 1703 (Meters)\",\n        \"26982\": \"NAD 1983 StatePlane Louisiana South FIPS 1702 (Meters)\",\n        \"26983\": \"NAD 1983 StatePlane Maine East FIPS 1801 (Meters)\",\n        \"26984\": \"NAD 1983 StatePlane Maine West FIPS 1802 (Meters)\",\n        \"26985\": \"NAD 1983 StatePlane Maryland FIPS 1900 (Meters)\",\n        \"26986\": \"NAD 1983 StatePlane Massachusetts FIPS 2001 (Meters)\",\n        \"26987\": \"NAD 1983 StatePlane Massachusetts Isl FIPS 2002 (Meters)\",\n        \"26989\": \"NAD 1983 StatePlane Michigan Central FIPS 2112 (Meters)\",\n        \"26988\": \"NAD 1983 StatePlane Michigan North FIPS 2111 (Meters)\",\n        \"26990\": \"NAD 1983 StatePlane Michigan South FIPS 2113 (Meters)\",\n        \"26992\": \"NAD 1983 StatePlane Minnesota Central FIPS 2202 (Meters)\",\n        \"26991\": \"NAD 1983 StatePlane Minnesota North FIPS 2201 (Meters)\",\n        \"26993\": \"NAD 1983 StatePlane Minnesota South FIPS 2203 (Meters)\",\n        \"26994\": \"NAD 1983 StatePlane Mississippi East FIPS 2301 (Meters)\",\n        \"26995\": \"NAD 1983 StatePlane Mississippi West FIPS 2302 (Meters)\",\n        \"26997\": \"NAD 1983 StatePlane Missouri Central FIPS 2402 (Meters)\",\n        \"26996\": \"NAD 1983 StatePlane Missouri East FIPS 2401 (Meters)\",\n        \"26998\": \"NAD 1983 StatePlane Missouri West FIPS 2403 (Meters)\",\n        \"32100\": \"NAD 1983 StatePlane Montana FIPS 2500 (Meters)\",\n        \"32104\": \"NAD 1983 StatePlane Nebraska FIPS 2600 (Meters)\",\n        \"32108\": \"NAD 1983 StatePlane Nevada Central FIPS 2702 (Meters)\",\n        \"32107\": \"NAD 1983 StatePlane Nevada East FIPS 2701 (Meters)\",\n        \"32109\": \"NAD 1983 StatePlane Nevada West FIPS 2703 (Meters)\",\n        \"32110\": \"NAD 1983 StatePlane New Hampshire FIPS 2800 (Meters)\",\n        \"32111\": \"NAD 1983 StatePlane New Jersey FIPS 2900 (Meters)\",\n        \"32113\": \"NAD 1983 StatePlane New Mexico Central FIPS 3002 (Meters)\",\n        \"32112\": \"NAD 1983 StatePlane New Mexico East FIPS 3001 (Meters)\",\n        \"32114\": \"NAD 1983 StatePlane New Mexico West FIPS 3003 (Meters)\",\n        \"32116\": \"NAD 1983 StatePlane New York Central FIPS 3102 (Meters)\",\n        \"32115\": \"NAD 1983 StatePlane New York East FIPS 3101 (Meters)\",\n        \"32118\": \"NAD 1983 StatePlane New York Long Isl FIPS 3104 (Meters)\",\n        \"32117\": \"NAD 1983 StatePlane New York West FIPS 3103 (Meters)\",\n        \"32119\": \"NAD 1983 StatePlane North Carolina FIPS 3200 (Meters)\",\n        \"32120\": \"NAD 1983 StatePlane North Dakota N FIPS 3301 (Meters)\",\n        \"32121\": \"NAD 1983 StatePlane North Dakota S FIPS 3302 (Meters)\",\n        \"32122\": \"NAD 1983 StatePlane Ohio North FIPS 3401 (Meters)\",\n        \"32123\": \"NAD 1983 StatePlane Ohio South FIPS 3402 (Meters)\",\n        \"32124\": \"NAD 1983 StatePlane Oklahoma North FIPS 3501 (Meters)\",\n        \"32125\": \"NAD 1983 StatePlane Oklahoma South FIPS 3502 (Meters)\",\n        \"32126\": \"NAD 1983 StatePlane Oregon North FIPS 3601 (Meters)\",\n        \"32127\": \"NAD 1983 StatePlane Oregon South FIPS 3602 (Meters)\",\n        \"32128\": \"NAD 1983 StatePlane Pennsylvania North FIPS 3701 (Meters)\",\n        \"32129\": \"NAD 1983 StatePlane Pennsylvania South FIPS 3702 (Meters)\",\n        \"32161\": \"NAD 1983 StatePlane Puerto Rico Virgin Isl FIPS 5200 (Meters)\",\n        \"32130\": \"NAD 1983 StatePlane Rhode Island FIPS 3800 (Meters)\",\n        \"32133\": \"NAD 1983 StatePlane South Carolina FIPS 3900 (Meters)\",\n        \"32134\": \"NAD 1983 StatePlane South Dakota N FIPS 4001 (Meters)\",\n        \"32135\": \"NAD 1983 StatePlane South Dakota S FIPS 4002 (Meters)\",\n        \"32136\": \"NAD 1983 StatePlane Tennessee FIPS 4100 (Meters)\",\n        \"32139\": \"NAD 1983 StatePlane Texas Central FIPS 4203 (Meters)\",\n        \"32138\": \"NAD 1983 StatePlane Texas N Central FIPS 4202 (Meters)\",\n        \"32137\": \"NAD 1983 StatePlane Texas North FIPS 4201 (Meters)\",\n        \"32140\": \"NAD 1983 StatePlane Texas S Central FIPS 4204 (Meters)\",\n        \"32141\": \"NAD 1983 StatePlane Texas South FIPS 4205 (Meters)\",\n        \"32143\": \"NAD 1983 StatePlane Utah Central FIPS 4302 (Meters)\",\n        \"32142\": \"NAD 1983 StatePlane Utah North FIPS 4301 (Meters)\",\n        \"32144\": \"NAD 1983 StatePlane Utah South FIPS 4303 (Meters)\",\n        \"32145\": \"NAD 1983 StatePlane Vermont FIPS 4400 (Meters)\",\n        \"32146\": \"NAD 1983 StatePlane Virginia North FIPS 4501 (Meters)\",\n        \"32147\": \"NAD 1983 StatePlane Virginia South FIPS 4502 (Meters)\",\n        \"32148\": \"NAD 1983 StatePlane Washington North FIPS 4601 (Meters)\",\n        \"32149\": \"NAD 1983 StatePlane Washington South FIPS 4602 (Meters)\",\n        \"32150\": \"NAD 1983 StatePlane West Virginia N FIPS 4701 (Meters)\",\n        \"32151\": \"NAD 1983 StatePlane West Virginia S FIPS 4702 (Meters)\",\n        \"32153\": \"NAD 1983 StatePlane Wisconsin Central FIPS 4802 (Meters)\",\n        \"32152\": \"NAD 1983 StatePlane Wisconsin North FIPS 4801 (Meters)\",\n        \"32154\": \"NAD 1983 StatePlane Wisconsin South FIPS 4803 (Meters)\",\n        \"32156\": \"NAD 1983 StatePlane Wyoming E Central FIPS 4902 (Meters)\",\n        \"32155\": \"NAD 1983 StatePlane Wyoming East FIPS 4901 (Meters)\",\n        \"32157\": \"NAD 1983 StatePlane Wyoming W Central FIPS 4903 (Meters)\",\n        \"32158\": \"NAD 1983 StatePlane Wyoming West FIPS 4904 (Meters)\"\n      },\n      \"NAD 1983 (PA11) (Meters)\": {\n        \"6628\": \"NAD 1983 (PA11) StatePlane Hawaii 1 FIPS 5101 (Meters)\",\n        \"6629\": \"NAD 1983 (PA11) StatePlane Hawaii 2 FIPS 5102 (Meters)\",\n        \"6630\": \"NAD 1983 (PA11) StatePlane Hawaii 3 FIPS 5103 (Meters)\",\n        \"6631\": \"NAD 1983 (PA11) StatePlane Hawaii 4 FIPS 5104 (Meters)\",\n        \"6632\": \"NAD 1983 (PA11) StatePlane Hawaii 5 FIPS 5105 (Meters)\"\n      },\n      \"NAD 1983 (PA11) (US Feet)\": {\n        \"102525\": \"NAD 1983 (PA11) StatePlane Hawaii 1 FIPS 5101 (US Feet)\",\n        \"102526\": \"NAD 1983 (PA11) StatePlane Hawaii 2 FIPS 5102 (US Feet)\",\n        \"6633\": \"NAD 1983 (PA11) StatePlane Hawaii 3 FIPS 5103 (US Feet)\",\n        \"102528\": \"NAD 1983 (PA11) StatePlane Hawaii 4 FIPS 5104 (US Feet)\",\n        \"102529\": \"NAD 1983 (PA11) StatePlane Hawaii 5 FIPS 5105 (US Feet)\"\n      },\n      \"NAD 1983 (US Feet)\": {\n        \"102629\": \"NAD 1983 StatePlane Alabama East FIPS 0101 (US Feet)\",\n        \"102630\": \"NAD 1983 StatePlane Alabama West FIPS 0102 (US Feet)\",\n        \"102631\": \"NAD 1983 StatePlane Alaska  1 FIPS 5001 (US Feet)\",\n        \"102632\": \"NAD 1983 StatePlane Alaska  2 FIPS 5002 (US Feet)\",\n        \"102633\": \"NAD 1983 StatePlane Alaska  3 FIPS 5003 (US Feet)\",\n        \"102634\": \"NAD 1983 StatePlane Alaska  4 FIPS 5004 (US Feet)\",\n        \"102635\": \"NAD 1983 StatePlane Alaska  5 FIPS 5005 (US Feet)\",\n        \"102636\": \"NAD 1983 StatePlane Alaska  6 FIPS 5006 (US Feet)\",\n        \"102637\": \"NAD 1983 StatePlane Alaska  7 FIPS 5007 (US Feet)\",\n        \"102638\": \"NAD 1983 StatePlane Alaska  8 FIPS 5008 (US Feet)\",\n        \"102639\": \"NAD 1983 StatePlane Alaska  9 FIPS 5009 (US Feet)\",\n        \"102640\": \"NAD 1983 StatePlane Alaska 10 FIPS 5010 (US Feet)\",\n        \"102649\": \"NAD 1983 StatePlane Arizona Central FIPS 0202 (US Feet)\",\n        \"102648\": \"NAD 1983 StatePlane Arizona East FIPS 0201 (US Feet)\",\n        \"102650\": \"NAD 1983 StatePlane Arizona West FIPS 0203 (US Feet)\",\n        \"3433\": \"NAD 1983 StatePlane Arkansas North FIPS 0301 (US Feet)\",\n        \"3434\": \"NAD 1983 StatePlane Arkansas South FIPS 0302 (US Feet)\",\n        \"2225\": \"NAD 1983 StatePlane California I FIPS 0401 (US Feet)\",\n        \"2226\": \"NAD 1983 StatePlane California II FIPS 0402 (US Feet)\",\n        \"2227\": \"NAD 1983 StatePlane California III FIPS 0403 (US Feet)\",\n        \"2228\": \"NAD 1983 StatePlane California IV FIPS 0404 (US Feet)\",\n        \"2229\": \"NAD 1983 StatePlane California V FIPS 0405 (US Feet)\",\n        \"2230\": \"NAD 1983 StatePlane California VI FIPS 0406 (US Feet)\",\n        \"2232\": \"NAD 1983 StatePlane Colorado Central FIPS 0502 (US Feet)\",\n        \"2231\": \"NAD 1983 StatePlane Colorado North FIPS 0501 (US Feet)\",\n        \"2233\": \"NAD 1983 StatePlane Colorado South FIPS 0503 (US Feet)\",\n        \"2234\": \"NAD 1983 StatePlane Connecticut FIPS 0600 (US Feet)\",\n        \"2235\": \"NAD 1983 StatePlane Delaware FIPS 0700 (US Feet)\",\n        \"2236\": \"NAD 1983 StatePlane Florida East FIPS 0901 (US Feet)\",\n        \"2238\": \"NAD 1983 StatePlane Florida North FIPS 0903 (US Feet)\",\n        \"2237\": \"NAD 1983 StatePlane Florida West FIPS 0902 (US Feet)\",\n        \"2239\": \"NAD 1983 StatePlane Georgia East FIPS 1001 (US Feet)\",\n        \"2240\": \"NAD 1983 StatePlane Georgia West FIPS 1002 (US Feet)\",\n        \"102766\": \"NAD 1983 StatePlane Guam FIPS 5400 (US Feet)\",\n        \"102661\": \"NAD 1983 StatePlane Hawaii 1 FIPS 5101 (US Feet)\",\n        \"102662\": \"NAD 1983 StatePlane Hawaii 2 FIPS 5102 (US Feet)\",\n        \"3759\": \"NAD 1983 StatePlane Hawaii 3 FIPS 5103 (US Feet)\",\n        \"102664\": \"NAD 1983 StatePlane Hawaii 4 FIPS 5104 (US Feet)\",\n        \"102665\": \"NAD 1983 StatePlane Hawaii 5 FIPS 5105 (US Feet)\",\n        \"2242\": \"NAD 1983 StatePlane Idaho Central FIPS 1102 (US Feet)\",\n        \"2241\": \"NAD 1983 StatePlane Idaho East FIPS 1101 (US Feet)\",\n        \"2243\": \"NAD 1983 StatePlane Idaho West FIPS 1103 (US Feet)\",\n        \"3435\": \"NAD 1983 StatePlane Illinois East FIPS 1201 (US Feet)\",\n        \"3436\": \"NAD 1983 StatePlane Illinois West FIPS 1202 (US Feet)\",\n        \"2965\": \"NAD 1983 StatePlane Indiana East FIPS 1301 (US Feet)\",\n        \"2966\": \"NAD 1983 StatePlane Indiana West FIPS 1302 (US Feet)\",\n        \"3417\": \"NAD 1983 StatePlane Iowa North FIPS 1401 (US Feet)\",\n        \"3418\": \"NAD 1983 StatePlane Iowa South FIPS 1402 (US Feet)\",\n        \"3419\": \"NAD 1983 StatePlane Kansas North FIPS 1501 (US Feet)\",\n        \"3420\": \"NAD 1983 StatePlane Kansas South FIPS 1502 (US Feet)\",\n        \"3089\": \"NAD 1983 StatePlane Kentucky FIPS 1600 (US Feet)\",\n        \"2246\": \"NAD 1983 StatePlane Kentucky North FIPS 1601 (US Feet)\",\n        \"2247\": \"NAD 1983 StatePlane Kentucky South FIPS 1602 (US Feet)\",\n        \"3451\": \"NAD 1983 StatePlane Louisiana North FIPS 1701 (US Feet)\",\n        \"3453\": \"NAD 1983 StatePlane Louisiana Offshore FIPS 1703 (US Feet)\",\n        \"3452\": \"NAD 1983 StatePlane Louisiana South FIPS 1702 (US Feet)\",\n        \"26847\": \"NAD 1983 StatePlane Maine East FIPS 1801 (US Feet)\",\n        \"26848\": \"NAD 1983 StatePlane Maine West FIPS 1802 (US Feet)\",\n        \"2248\": \"NAD 1983 StatePlane Maryland FIPS 1900 (US Feet)\",\n        \"2249\": \"NAD 1983 StatePlane Massachusetts FIPS 2001 (US Feet)\",\n        \"2250\": \"NAD 1983 StatePlane Massachusetts Isl FIPS 2002 (US Feet)\",\n        \"102689\": \"NAD 1983 StatePlane Michigan Central FIPS 2112 (US Feet)\",\n        \"102688\": \"NAD 1983 StatePlane Michigan North FIPS 2111 (US Feet)\",\n        \"102690\": \"NAD 1983 StatePlane Michigan South FIPS 2113 (US Feet)\",\n        \"26850\": \"NAD 1983 StatePlane Minnesota Central FIPS 2202 (US Feet)\",\n        \"26849\": \"NAD 1983 StatePlane Minnesota North FIPS 2201 (US Feet)\",\n        \"26851\": \"NAD 1983 StatePlane Minnesota South FIPS 2203 (US Feet)\",\n        \"2254\": \"NAD 1983 StatePlane Mississippi East FIPS 2301 (US Feet)\",\n        \"2255\": \"NAD 1983 StatePlane Mississippi West FIPS 2302 (US Feet)\",\n        \"102697\": \"NAD 1983 StatePlane Missouri Central FIPS 2402 (US Feet)\",\n        \"102696\": \"NAD 1983 StatePlane Missouri East FIPS 2401 (US Feet)\",\n        \"102698\": \"NAD 1983 StatePlane Missouri West FIPS 2403 (US Feet)\",\n        \"102700\": \"NAD 1983 StatePlane Montana FIPS 2500 (US Feet)\",\n        \"26852\": \"NAD 1983 StatePlane Nebraska FIPS 2600 (US Feet)\",\n        \"3422\": \"NAD 1983 StatePlane Nevada Central FIPS 2702 (US Feet)\",\n        \"3421\": \"NAD 1983 StatePlane Nevada East FIPS 2701 (US Feet)\",\n        \"3423\": \"NAD 1983 StatePlane Nevada West FIPS 2703 (US Feet)\",\n        \"3437\": \"NAD 1983 StatePlane New Hampshire FIPS 2800 (US Feet)\",\n        \"3424\": \"NAD 1983 StatePlane New Jersey FIPS 2900 (US Feet)\",\n        \"2258\": \"NAD 1983 StatePlane New Mexico Central FIPS 3002 (US Feet)\",\n        \"2257\": \"NAD 1983 StatePlane New Mexico East FIPS 3001 (US Feet)\",\n        \"2259\": \"NAD 1983 StatePlane New Mexico West FIPS 3003 (US Feet)\",\n        \"2261\": \"NAD 1983 StatePlane New York Central FIPS 3102 (US Feet)\",\n        \"2260\": \"NAD 1983 StatePlane New York East FIPS 3101 (US Feet)\",\n        \"2263\": \"NAD 1983 StatePlane New York Long Isl FIPS 3104 (US Feet)\",\n        \"2262\": \"NAD 1983 StatePlane New York West FIPS 3103 (US Feet)\",\n        \"2264\": \"NAD 1983 StatePlane North Carolina FIPS 3200 (US Feet)\",\n        \"102720\": \"NAD 1983 StatePlane North Dakota N FIPS 3301 (US Feet)\",\n        \"102721\": \"NAD 1983 StatePlane North Dakota S FIPS 3302 (US Feet)\",\n        \"3734\": \"NAD 1983 StatePlane Ohio North FIPS 3401 (US Feet)\",\n        \"3735\": \"NAD 1983 StatePlane Ohio South FIPS 3402 (US Feet)\",\n        \"2267\": \"NAD 1983 StatePlane Oklahoma North FIPS 3501 (US Feet)\",\n        \"2268\": \"NAD 1983 StatePlane Oklahoma South FIPS 3502 (US Feet)\",\n        \"102726\": \"NAD 1983 StatePlane Oregon North FIPS 3601 (US Feet)\",\n        \"102727\": \"NAD 1983 StatePlane Oregon South FIPS 3602 (US Feet)\",\n        \"2271\": \"NAD 1983 StatePlane Pennsylvania North FIPS 3701 (US Feet)\",\n        \"2272\": \"NAD 1983 StatePlane Pennsylvania South FIPS 3702 (US Feet)\",\n        \"102761\": \"NAD 1983 StatePlane Puerto Rico Virgin Isl FIPS 5200 (US Feet)\",\n        \"3438\": \"NAD 1983 StatePlane Rhode Island FIPS 3800 (US Feet)\",\n        \"102733\": \"NAD 1983 StatePlane South Carolina FIPS 3900 (US Feet)\",\n        \"4457\": \"NAD 1983 StatePlane South Dakota N FIPS 4001 (US Feet)\",\n        \"3455\": \"NAD 1983 StatePlane South Dakota S FIPS 4002 (US Feet)\",\n        \"2274\": \"NAD 1983 StatePlane Tennessee FIPS 4100 (US Feet)\",\n        \"2277\": \"NAD 1983 StatePlane Texas Central FIPS 4203 (US Feet)\",\n        \"2276\": \"NAD 1983 StatePlane Texas N Central FIPS 4202 (US Feet)\",\n        \"2275\": \"NAD 1983 StatePlane Texas North FIPS 4201 (US Feet)\",\n        \"2278\": \"NAD 1983 StatePlane Texas S Central FIPS 4204 (US Feet)\",\n        \"2279\": \"NAD 1983 StatePlane Texas South FIPS 4205 (US Feet)\",\n        \"3566\": \"NAD 1983 StatePlane Utah Central FIPS 4302 (US Feet)\",\n        \"3560\": \"NAD 1983 StatePlane Utah North FIPS 4301 (US Feet)\",\n        \"3567\": \"NAD 1983 StatePlane Utah South FIPS 4303 (US Feet)\",\n        \"5646\": \"NAD 1983 StatePlane Vermont FIPS 4400 (US Feet)\",\n        \"2283\": \"NAD 1983 StatePlane Virginia North FIPS 4501 (US Feet)\",\n        \"2284\": \"NAD 1983 StatePlane Virginia South FIPS 4502 (US Feet)\",\n        \"2285\": \"NAD 1983 StatePlane Washington North FIPS 4601 (US Feet)\",\n        \"2286\": \"NAD 1983 StatePlane Washington South FIPS 4602 (US Feet)\",\n        \"26853\": \"NAD 1983 StatePlane West Virginia N FIPS 4701 (US Feet)\",\n        \"26854\": \"NAD 1983 StatePlane West Virginia S FIPS 4702 (US Feet)\",\n        \"2288\": \"NAD 1983 StatePlane Wisconsin Central FIPS 4802 (US Feet)\",\n        \"2287\": \"NAD 1983 StatePlane Wisconsin North FIPS 4801 (US Feet)\",\n        \"2289\": \"NAD 1983 StatePlane Wisconsin South FIPS 4803 (US Feet)\",\n        \"3737\": \"NAD 1983 StatePlane Wyoming E Central FIPS 4902 (US Feet)\",\n        \"3736\": \"NAD 1983 StatePlane Wyoming East FIPS 4901 (US Feet)\",\n        \"3738\": \"NAD 1983 StatePlane Wyoming W Central FIPS 4903 (US Feet)\",\n        \"3739\": \"NAD 1983 StatePlane Wyoming West FIPS 4904 (US Feet)\"\n      },\n      \"NAD 1983 HARN (Intl Feet)\": {\n        \"2868\": \"NAD 1983 HARN StatePlane Arizona Central FIPS 0202 (Intl Feet)\",\n        \"2867\": \"NAD 1983 HARN StatePlane Arizona East FIPS 0201 (Intl Feet)\",\n        \"2869\": \"NAD 1983 HARN StatePlane Arizona West FIPS 0203 (Intl Feet)\",\n        \"2897\": \"NAD 1983 HARN StatePlane Michigan Central FIPS 2112 (Intl Feet)\",\n        \"2896\": \"NAD 1983 HARN StatePlane Michigan North FIPS 2111 (Intl Feet)\",\n        \"2898\": \"NAD 1983 HARN StatePlane Michigan South FIPS 2113 (Intl Feet)\",\n        \"2901\": \"NAD 1983 HARN StatePlane Montana FIPS 2500 (Intl Feet)\",\n        \"2909\": \"NAD 1983 HARN StatePlane North Dakota N FIPS 3301 (Intl Feet)\",\n        \"2910\": \"NAD 1983 HARN StatePlane North Dakota S FIPS 3302 (Intl Feet)\",\n        \"2913\": \"NAD 1983 HARN StatePlane Oregon North FIPS 3601 (Intl Feet)\",\n        \"2914\": \"NAD 1983 HARN StatePlane Oregon South FIPS 3602 (Intl Feet)\",\n        \"3361\": \"NAD 1983 HARN StatePlane South Carolina FIPS 3900 (Intl Feet)\",\n        \"2922\": \"NAD 1983 HARN StatePlane Utah Central FIPS 4302 (Intl Feet)\",\n        \"2921\": \"NAD 1983 HARN StatePlane Utah North FIPS 4301 (Intl Feet)\",\n        \"2923\": \"NAD 1983 HARN StatePlane Utah South FIPS 4303 (Intl Feet)\"\n      },\n      \"NAD 1983 HARN (Meters)\": {\n        \"3464\": \"NAD 1983 HARN Maine 2000 Central Zone (Meters)\",\n        \"3075\": \"NAD 1983 HARN Maine 2000 East Zone (Meters)\",\n        \"3077\": \"NAD 1983 HARN Maine 2000 West Zone (Meters)\",\n        \"2759\": \"NAD 1983 HARN StatePlane Alabama East FIPS 0101 (Meters)\",\n        \"2760\": \"NAD 1983 HARN StatePlane Alabama West FIPS 0102 (Meters)\",\n        \"2762\": \"NAD 1983 HARN StatePlane Arizona Central FIPS 0202 (Meters)\",\n        \"2761\": \"NAD 1983 HARN StatePlane Arizona East FIPS 0201 (Meters)\",\n        \"2763\": \"NAD 1983 HARN StatePlane Arizona West FIPS 0203 (Meters)\",\n        \"2764\": \"NAD 1983 HARN StatePlane Arkansas North FIPS 0301 (Meters)\",\n        \"2765\": \"NAD 1983 HARN StatePlane Arkansas South FIPS 0302 (Meters)\",\n        \"2766\": \"NAD 1983 HARN StatePlane California I FIPS 0401 (Meters)\",\n        \"2767\": \"NAD 1983 HARN StatePlane California II FIPS 0402 (Meters)\",\n        \"2768\": \"NAD 1983 HARN StatePlane California III FIPS 0403 (Meters)\",\n        \"2769\": \"NAD 1983 HARN StatePlane California IV FIPS 0404 (Meters)\",\n        \"2770\": \"NAD 1983 HARN StatePlane California V FIPS 0405 (Meters)\",\n        \"2771\": \"NAD 1983 HARN StatePlane California VI FIPS 0406 (Meters)\",\n        \"2773\": \"NAD 1983 HARN StatePlane Colorado Central FIPS 0502 (Meters)\",\n        \"2772\": \"NAD 1983 HARN StatePlane Colorado North FIPS 0501 (Meters)\",\n        \"2774\": \"NAD 1983 HARN StatePlane Colorado South FIPS 0503 (Meters)\",\n        \"2775\": \"NAD 1983 HARN StatePlane Connecticut FIPS 0600 (Meters)\",\n        \"2776\": \"NAD 1983 HARN StatePlane Delaware FIPS 0700 (Meters)\",\n        \"2777\": \"NAD 1983 HARN StatePlane Florida East FIPS 0901 (Meters)\",\n        \"2779\": \"NAD 1983 HARN StatePlane Florida North FIPS 0903 (Meters)\",\n        \"2778\": \"NAD 1983 HARN StatePlane Florida West FIPS 0902 (Meters)\",\n        \"2780\": \"NAD 1983 HARN StatePlane Georgia East FIPS 1001 (Meters)\",\n        \"2781\": \"NAD 1983 HARN StatePlane Georgia West FIPS 1002 (Meters)\",\n        \"2782\": \"NAD 1983 HARN StatePlane Hawaii 1 FIPS 5101 (Meters)\",\n        \"2783\": \"NAD 1983 HARN StatePlane Hawaii 2 FIPS 5102 (Meters)\",\n        \"2784\": \"NAD 1983 HARN StatePlane Hawaii 3 FIPS 5103 (Meters)\",\n        \"2785\": \"NAD 1983 HARN StatePlane Hawaii 4 FIPS 5104 (Meters)\",\n        \"2786\": \"NAD 1983 HARN StatePlane Hawaii 5 FIPS 5105 (Meters)\",\n        \"2788\": \"NAD 1983 HARN StatePlane Idaho Central FIPS 1102 (Meters)\",\n        \"2787\": \"NAD 1983 HARN StatePlane Idaho East FIPS 1101 (Meters)\",\n        \"2789\": \"NAD 1983 HARN StatePlane Idaho West FIPS 1103 (Meters)\",\n        \"2790\": \"NAD 1983 HARN StatePlane Illinois East FIPS 1201 (Meters)\",\n        \"2791\": \"NAD 1983 HARN StatePlane Illinois West FIPS 1202 (Meters)\",\n        \"2792\": \"NAD 1983 HARN StatePlane Indiana East FIPS 1301 (Meters)\",\n        \"2793\": \"NAD 1983 HARN StatePlane Indiana West FIPS 1302 (Meters)\",\n        \"2794\": \"NAD 1983 HARN StatePlane Iowa North FIPS 1401 (Meters)\",\n        \"2795\": \"NAD 1983 HARN StatePlane Iowa South FIPS 1402 (Meters)\",\n        \"2796\": \"NAD 1983 HARN StatePlane Kansas North FIPS 1501 (Meters)\",\n        \"2797\": \"NAD 1983 HARN StatePlane Kansas South FIPS 1502 (Meters)\",\n        \"3090\": \"NAD 1983 HARN StatePlane Kentucky FIPS 1600 (Meters)\",\n        \"2798\": \"NAD 1983 HARN StatePlane Kentucky North FIPS 1601 (Meters)\",\n        \"2799\": \"NAD 1983 HARN StatePlane Kentucky South FIPS 1602 (Meters)\",\n        \"2800\": \"NAD 1983 HARN StatePlane Louisiana North FIPS 1701 (Meters)\",\n        \"2801\": \"NAD 1983 HARN StatePlane Louisiana South FIPS 1702 (Meters)\",\n        \"2802\": \"NAD 1983 HARN StatePlane Maine East FIPS 1801 (Meters)\",\n        \"2803\": \"NAD 1983 HARN StatePlane Maine West FIPS 1802 (Meters)\",\n        \"2804\": \"NAD 1983 HARN StatePlane Maryland FIPS 1900 (Meters)\",\n        \"2805\": \"NAD 1983 HARN StatePlane Massachusetts FIPS 2001 (Meters)\",\n        \"2806\": \"NAD 1983 HARN StatePlane Massachusetts Isl FIPS 2002 (Meters)\",\n        \"2808\": \"NAD 1983 HARN StatePlane Michigan Central FIPS 2112 (Meters)\",\n        \"2807\": \"NAD 1983 HARN StatePlane Michigan North FIPS 2111 (Meters)\",\n        \"2809\": \"NAD 1983 HARN StatePlane Michigan South FIPS 2113 (Meters)\",\n        \"2811\": \"NAD 1983 HARN StatePlane Minnesota Central FIPS 2202 (Meters)\",\n        \"2810\": \"NAD 1983 HARN StatePlane Minnesota North FIPS 2201 (Meters)\",\n        \"2812\": \"NAD 1983 HARN StatePlane Minnesota South FIPS 2203 (Meters)\",\n        \"2813\": \"NAD 1983 HARN StatePlane Mississippi East FIPS 2301 (Meters)\",\n        \"2814\": \"NAD 1983 HARN StatePlane Mississippi West FIPS 2302 (Meters)\",\n        \"2816\": \"NAD 1983 HARN StatePlane Missouri Central FIPS 2402 (Meters)\",\n        \"2815\": \"NAD 1983 HARN StatePlane Missouri East FIPS 2401 (Meters)\",\n        \"2817\": \"NAD 1983 HARN StatePlane Missouri West FIPS 2403 (Meters)\",\n        \"2818\": \"NAD 1983 HARN StatePlane Montana FIPS 2500 (Meters)\",\n        \"2819\": \"NAD 1983 HARN StatePlane Nebraska FIPS 2600 (Meters)\",\n        \"2821\": \"NAD 1983 HARN StatePlane Nevada Central FIPS 2702 (Meters)\",\n        \"2820\": \"NAD 1983 HARN StatePlane Nevada East FIPS 2701 (Meters)\",\n        \"2822\": \"NAD 1983 HARN StatePlane Nevada West FIPS 2703 (Meters)\",\n        \"2823\": \"NAD 1983 HARN StatePlane New Hampshire FIPS 2800 (Meters)\",\n        \"2824\": \"NAD 1983 HARN StatePlane New Jersey FIPS 2900 (Meters)\",\n        \"2826\": \"NAD 1983 HARN StatePlane New Mexico Central FIPS 3002 (Meters)\",\n        \"2825\": \"NAD 1983 HARN StatePlane New Mexico East FIPS 3001 (Meters)\",\n        \"2827\": \"NAD 1983 HARN StatePlane New Mexico West FIPS 3003 (Meters)\",\n        \"2829\": \"NAD 1983 HARN StatePlane New York Central FIPS 3102 (Meters)\",\n        \"2828\": \"NAD 1983 HARN StatePlane New York East FIPS 3101 (Meters)\",\n        \"2831\": \"NAD 1983 HARN StatePlane New York Long Isl FIPS 3104 (Meters)\",\n        \"2830\": \"NAD 1983 HARN StatePlane New York West FIPS 3103 (Meters)\",\n        \"3358\": \"NAD 1983 HARN StatePlane North Carolina FIPS 3200 (Meters)\",\n        \"2832\": \"NAD 1983 HARN StatePlane North Dakota N FIPS 3301 (Meters)\",\n        \"2833\": \"NAD 1983 HARN StatePlane North Dakota S FIPS 3302 (Meters)\",\n        \"2834\": \"NAD 1983 HARN StatePlane Ohio North FIPS 3401 (Meters)\",\n        \"2835\": \"NAD 1983 HARN StatePlane Ohio South FIPS 3402 (Meters)\",\n        \"2836\": \"NAD 1983 HARN StatePlane Oklahoma North FIPS 3501 (Meters)\",\n        \"2837\": \"NAD 1983 HARN StatePlane Oklahoma South FIPS 3502 (Meters)\",\n        \"2838\": \"NAD 1983 HARN StatePlane Oregon North FIPS 3601 (Meters)\",\n        \"2839\": \"NAD 1983 HARN StatePlane Oregon South FIPS 3602 (Meters)\",\n        \"2866\": \"NAD 1983 HARN StatePlane PR VI FIPS 5200 (Meters)\",\n        \"3362\": \"NAD 1983 HARN StatePlane Pennsylvania North FIPS 3701 (Meters)\",\n        \"3364\": \"NAD 1983 HARN StatePlane Pennsylvania South FIPS 3702 (Meters)\",\n        \"2840\": \"NAD 1983 HARN StatePlane Rhode Island FIPS 3800 (Meters)\",\n        \"3360\": \"NAD 1983 HARN StatePlane South Carolina FIPS 3900 (Meters)\",\n        \"2841\": \"NAD 1983 HARN StatePlane South Dakota N FIPS 4001 (Meters)\",\n        \"2842\": \"NAD 1983 HARN StatePlane South Dakota S FIPS 4002 (Meters)\",\n        \"2843\": \"NAD 1983 HARN StatePlane Tennessee FIPS 4100 (Meters)\",\n        \"2846\": \"NAD 1983 HARN StatePlane Texas Central FIPS 4203 (Meters)\",\n        \"2845\": \"NAD 1983 HARN StatePlane Texas N Central FIPS 4202 (Meters)\",\n        \"2844\": \"NAD 1983 HARN StatePlane Texas North FIPS 4201 (Meters)\",\n        \"2847\": \"NAD 1983 HARN StatePlane Texas S Central FIPS 4204 (Meters)\",\n        \"2848\": \"NAD 1983 HARN StatePlane Texas South FIPS 4205 (Meters)\",\n        \"2850\": \"NAD 1983 HARN StatePlane Utah Central FIPS 4302 (Meters)\",\n        \"2849\": \"NAD 1983 HARN StatePlane Utah North FIPS 4301 (Meters)\",\n        \"2851\": \"NAD 1983 HARN StatePlane Utah South FIPS 4303 (Meters)\",\n        \"2852\": \"NAD 1983 HARN StatePlane Vermont FIPS 4400 (Meters)\",\n        \"2853\": \"NAD 1983 HARN StatePlane Virginia North FIPS 4501 (Meters)\",\n        \"2854\": \"NAD 1983 HARN StatePlane Virginia South FIPS 4502 (Meters)\",\n        \"2855\": \"NAD 1983 HARN StatePlane Washington North FIPS 4601 (Meters)\",\n        \"2856\": \"NAD 1983 HARN StatePlane Washington South FIPS 4602 (Meters)\",\n        \"2857\": \"NAD 1983 HARN StatePlane West Virginia N FIPS 4701 (Meters)\",\n        \"2858\": \"NAD 1983 HARN StatePlane West Virginia S FIPS 4702 (Meters)\",\n        \"2860\": \"NAD 1983 HARN StatePlane Wisconsin Central FIPS 4802 (Meters)\",\n        \"2859\": \"NAD 1983 HARN StatePlane Wisconsin North FIPS 4801 (Meters)\",\n        \"2861\": \"NAD 1983 HARN StatePlane Wisconsin South FIPS 4803 (Meters)\",\n        \"2863\": \"NAD 1983 HARN StatePlane Wyoming E Central FIPS 4902 (Meters)\",\n        \"2862\": \"NAD 1983 HARN StatePlane Wyoming East FIPS 4901 (Meters)\",\n        \"2864\": \"NAD 1983 HARN StatePlane Wyoming W Central FIPS 4903 (Meters)\",\n        \"2865\": \"NAD 1983 HARN StatePlane Wyoming West FIPS 4904 (Meters)\"\n      },\n      \"NAD 1983 HARN (US Feet)\": {\n        \"102041\": \"City Of Bellevue NAD83 2007\",\n        \"3441\": \"NAD 1983 HARN StatePlane Arkansas North FIPS 0301 (US Feet)\",\n        \"3442\": \"NAD 1983 HARN StatePlane Arkansas South FIPS 0302 (US Feet)\",\n        \"2870\": \"NAD 1983 HARN StatePlane California I FIPS 0401 (US Feet)\",\n        \"2871\": \"NAD 1983 HARN StatePlane California II FIPS 0402 (US Feet)\",\n        \"2872\": \"NAD 1983 HARN StatePlane California III FIPS 0403 (US Feet)\",\n        \"2873\": \"NAD 1983 HARN StatePlane California IV FIPS 0404 (US Feet)\",\n        \"2874\": \"NAD 1983 HARN StatePlane California V FIPS 0405 (US Feet)\",\n        \"2875\": \"NAD 1983 HARN StatePlane California VI FIPS 0406 (US Feet)\",\n        \"2877\": \"NAD 1983 HARN StatePlane Colorado Central FIPS 0502 (US Feet)\",\n        \"2876\": \"NAD 1983 HARN StatePlane Colorado North FIPS 0501 (US Feet)\",\n        \"2878\": \"NAD 1983 HARN StatePlane Colorado South FIPS 0503 (US Feet)\",\n        \"2879\": \"NAD 1983 HARN StatePlane Connecticut FIPS 0600 (US Feet)\",\n        \"2880\": \"NAD 1983 HARN StatePlane Delaware FIPS 0700 (US Feet)\",\n        \"2881\": \"NAD 1983 HARN StatePlane Florida East FIPS 0901 (US Feet)\",\n        \"2883\": \"NAD 1983 HARN StatePlane Florida North FIPS 0903 (US Feet)\",\n        \"2882\": \"NAD 1983 HARN StatePlane Florida West FIPS 0902 (US Feet)\",\n        \"2884\": \"NAD 1983 HARN StatePlane Georgia East FIPS 1001 (US Feet)\",\n        \"2885\": \"NAD 1983 HARN StatePlane Georgia West FIPS 1002 (US Feet)\",\n        \"102461\": \"NAD 1983 HARN StatePlane Hawaii 1 FIPS 5101 (US Feet)\",\n        \"102462\": \"NAD 1983 HARN StatePlane Hawaii 2 FIPS 5102 (US Feet)\",\n        \"3760\": \"NAD 1983 HARN StatePlane Hawaii 3 FIPS 5103 (US Feet)\",\n        \"102464\": \"NAD 1983 HARN StatePlane Hawaii 4 FIPS 5104 (US Feet)\",\n        \"102465\": \"NAD 1983 HARN StatePlane Hawaii 5 FIPS 5105 (US Feet)\",\n        \"2887\": \"NAD 1983 HARN StatePlane Idaho Central FIPS 1102 (US Feet)\",\n        \"2886\": \"NAD 1983 HARN StatePlane Idaho East FIPS 1101 (US Feet)\",\n        \"2888\": \"NAD 1983 HARN StatePlane Idaho West FIPS 1103 (US Feet)\",\n        \"3443\": \"NAD 1983 HARN StatePlane Illinois East FIPS 1201 (US Feet)\",\n        \"3444\": \"NAD 1983 HARN StatePlane Illinois West FIPS 1202 (US Feet)\",\n        \"2967\": \"NAD 1983 HARN StatePlane Indiana East FIPS 1301 (US Feet)\",\n        \"2968\": \"NAD 1983 HARN StatePlane Indiana West FIPS 1302 (US Feet)\",\n        \"3425\": \"NAD 1983 HARN StatePlane Iowa North FIPS 1401 (US Feet)\",\n        \"3426\": \"NAD 1983 HARN StatePlane Iowa South FIPS 1402 (US Feet)\",\n        \"3427\": \"NAD 1983 HARN StatePlane Kansas North FIPS 1501 (US Feet)\",\n        \"3428\": \"NAD 1983 HARN StatePlane Kansas South FIPS 1502 (US Feet)\",\n        \"3091\": \"NAD 1983 HARN StatePlane Kentucky FIPS 1600 (US Feet)\",\n        \"2891\": \"NAD 1983 HARN StatePlane Kentucky North FIPS 1601 (US Feet)\",\n        \"2892\": \"NAD 1983 HARN StatePlane Kentucky South FIPS 1602 (US Feet)\",\n        \"3456\": \"NAD 1983 HARN StatePlane Louisiana North FIPS 1701 (US Feet)\",\n        \"3457\": \"NAD 1983 HARN StatePlane Louisiana South FIPS 1702 (US Feet)\",\n        \"26855\": \"NAD 1983 HARN StatePlane Maine East FIPS 1801 (US Feet)\",\n        \"26856\": \"NAD 1983 HARN StatePlane Maine West FIPS 1802 (US Feet)\",\n        \"2893\": \"NAD 1983 HARN StatePlane Maryland FIPS 1900 (US Feet)\",\n        \"2894\": \"NAD 1983 HARN StatePlane Massachusetts FIPS 2001 (US Feet)\",\n        \"2895\": \"NAD 1983 HARN StatePlane Massachusetts Isl FIPS 2002 (US Feet)\",\n        \"26858\": \"NAD 1983 HARN StatePlane Minnesota Central FIPS 2202 (US Feet)\",\n        \"26857\": \"NAD 1983 HARN StatePlane Minnesota North FIPS 2201 (US Feet)\",\n        \"26859\": \"NAD 1983 HARN StatePlane Minnesota South FIPS 2203 (US Feet)\",\n        \"2899\": \"NAD 1983 HARN StatePlane Mississippi East FIPS 2301 (US Feet)\",\n        \"2900\": \"NAD 1983 HARN StatePlane Mississippi West FIPS 2302 (US Feet)\",\n        \"26860\": \"NAD 1983 HARN StatePlane Nebraska FIPS 2600 (US Feet)\",\n        \"3430\": \"NAD 1983 HARN StatePlane Nevada Central FIPS 2702 (US Feet)\",\n        \"3429\": \"NAD 1983 HARN StatePlane Nevada East FIPS 2701 (US Feet)\",\n        \"3431\": \"NAD 1983 HARN StatePlane Nevada West FIPS 2703 (US Feet)\",\n        \"3445\": \"NAD 1983 HARN StatePlane New Hampshire FIPS 2800 (US Feet)\",\n        \"3432\": \"NAD 1983 HARN StatePlane New Jersey FIPS 2900 (US Feet)\",\n        \"2903\": \"NAD 1983 HARN StatePlane New Mexico Central FIPS 3002 (US Feet)\",\n        \"2902\": \"NAD 1983 HARN StatePlane New Mexico East FIPS 3001 (US Feet)\",\n        \"2904\": \"NAD 1983 HARN StatePlane New Mexico West FIPS 3003 (US Feet)\",\n        \"2906\": \"NAD 1983 HARN StatePlane New York Central FIPS 3102 (US Feet)\",\n        \"2905\": \"NAD 1983 HARN StatePlane New York East FIPS 3101 (US Feet)\",\n        \"2908\": \"NAD 1983 HARN StatePlane New York Long Isl FIPS 3104 (US Feet)\",\n        \"2907\": \"NAD 1983 HARN StatePlane New York West FIPS 3103 (US Feet)\",\n        \"3404\": \"NAD 1983 HARN StatePlane North Carolina FIPS 3200 (US Feet)\",\n        \"3753\": \"NAD 1983 HARN StatePlane Ohio North FIPS 3401 (US Feet)\",\n        \"3754\": \"NAD 1983 HARN StatePlane Ohio South FIPS 3402 (US Feet)\",\n        \"2911\": \"NAD 1983 HARN StatePlane Oklahoma North FIPS 3501 (US Feet)\",\n        \"2912\": \"NAD 1983 HARN StatePlane Oklahoma South FIPS 3502 (US Feet)\",\n        \"3363\": \"NAD 1983 HARN StatePlane Pennsylvania North FIPS 3701 (US Feet)\",\n        \"3365\": \"NAD 1983 HARN StatePlane Pennsylvania South FIPS 3702 (US Feet)\",\n        \"3446\": \"NAD 1983 HARN StatePlane Rhode Island FIPS 3800 (US Feet)\",\n        \"3458\": \"NAD 1983 HARN StatePlane South Dakota N FIPS 4001 (US Feet)\",\n        \"3459\": \"NAD 1983 HARN StatePlane South Dakota S FIPS 4002 (US Feet)\",\n        \"2915\": \"NAD 1983 HARN StatePlane Tennessee FIPS 4100 (US Feet)\",\n        \"2918\": \"NAD 1983 HARN StatePlane Texas Central FIPS 4203 (US Feet)\",\n        \"2917\": \"NAD 1983 HARN StatePlane Texas N Central FIPS 4202 (US Feet)\",\n        \"2916\": \"NAD 1983 HARN StatePlane Texas North FIPS 4201 (US Feet)\",\n        \"2919\": \"NAD 1983 HARN StatePlane Texas S Central FIPS 4204 (US Feet)\",\n        \"2920\": \"NAD 1983 HARN StatePlane Texas South FIPS 4205 (US Feet)\",\n        \"3569\": \"NAD 1983 HARN StatePlane Utah Central FIPS 4302 (US Feet)\",\n        \"3568\": \"NAD 1983 HARN StatePlane Utah North FIPS 4301 (US Feet)\",\n        \"3570\": \"NAD 1983 HARN StatePlane Utah South FIPS 4303 (US Feet)\",\n        \"5654\": \"NAD 1983 HARN StatePlane Vermont FIPS 4400 (US Feet)\",\n        \"2924\": \"NAD 1983 HARN StatePlane Virginia North FIPS 4501 (US Feet)\",\n        \"2925\": \"NAD 1983 HARN StatePlane Virginia South FIPS 4502 (US Feet)\",\n        \"2926\": \"NAD 1983 HARN StatePlane Washington North FIPS 4601 (US Feet)\",\n        \"2927\": \"NAD 1983 HARN StatePlane Washington South FIPS 4602 (US Feet)\",\n        \"26861\": \"NAD 1983 HARN StatePlane West Virginia N FIPS 4701 (US Feet)\",\n        \"26862\": \"NAD 1983 HARN StatePlane West Virginia S FIPS 4702 (US Feet)\",\n        \"2929\": \"NAD 1983 HARN StatePlane Wisconsin Central FIPS 4802 (US Feet)\",\n        \"2928\": \"NAD 1983 HARN StatePlane Wisconsin North FIPS 4801 (US Feet)\",\n        \"2930\": \"NAD 1983 HARN StatePlane Wisconsin South FIPS 4803 (US Feet)\",\n        \"3756\": \"NAD 1983 HARN StatePlane Wyoming E Central FIPS 4902 (US Feet)\",\n        \"3755\": \"NAD 1983 HARN StatePlane Wyoming East FIPS 4901 (US Feet)\",\n        \"3757\": \"NAD 1983 HARN StatePlane Wyoming W Central FIPS 4903 (US Feet)\",\n        \"3758\": \"NAD 1983 HARN StatePlane Wyoming West FIPS 4904 (US Feet)\"\n      },\n      \"NAD 1983 NSRS2007 (Intl Feet)\": {\n        \"3479\": \"NAD 1983 NSRS2007 StatePlane Arizona Central FIPS 0202 (Intl Feet)\",\n        \"3481\": \"NAD 1983 NSRS2007 StatePlane Arizona East FIPS 0201 (Intl Feet)\",\n        \"3483\": \"NAD 1983 NSRS2007 StatePlane Arizona West FIPS 0203 (Intl Feet)\",\n        \"3588\": \"NAD 1983 NSRS2007 StatePlane Michigan Central FIPS 2112 (Intl Feet)\",\n        \"3590\": \"NAD 1983 NSRS2007 StatePlane Michigan North FIPS 2111 (Intl Feet)\",\n        \"3593\": \"NAD 1983 NSRS2007 StatePlane Michigan South FIPS 2113 (Intl Feet)\",\n        \"3605\": \"NAD 1983 NSRS2007 StatePlane Montana FIPS 2500 (Intl Feet)\",\n        \"3634\": \"NAD 1983 NSRS2007 StatePlane North Dakota N FIPS 3301 (Intl Feet)\",\n        \"3636\": \"NAD 1983 NSRS2007 StatePlane North Dakota S FIPS 3302 (Intl Feet)\",\n        \"3646\": \"NAD 1983 NSRS2007 StatePlane Oregon North FIPS 3601 (Intl Feet)\",\n        \"3648\": \"NAD 1983 NSRS2007 StatePlane Oregon South FIPS 3602 (Intl Feet)\",\n        \"3656\": \"NAD 1983 NSRS2007 StatePlane South Carolina FIPS 3900 (Intl Feet)\",\n        \"3676\": \"NAD 1983 NSRS2007 StatePlane Utah Central FIPS 4302 (Intl Feet)\",\n        \"3679\": \"NAD 1983 NSRS2007 StatePlane Utah North FIPS 4301 (Intl Feet)\",\n        \"3682\": \"NAD 1983 NSRS2007 StatePlane Utah South FIPS 4303 (Intl Feet)\"\n      },\n      \"NAD 1983 NSRS2007 (Meters)\": {\n        \"3554\": \"NAD 1983 NSRS2007 Maine 2000 Central Zone (Meters)\",\n        \"3555\": \"NAD 1983 NSRS2007 Maine 2000 East Zone (Meters)\",\n        \"3556\": \"NAD 1983 NSRS2007 Maine 2000 West Zone (Meters)\",\n        \"3465\": \"NAD 1983 NSRS2007 StatePlane Alabama East FIPS 0101 (Meters)\",\n        \"3466\": \"NAD 1983 NSRS2007 StatePlane Alabama West FIPS 0102 (Meters)\",\n        \"3468\": \"NAD 1983 NSRS2007 StatePlane Alaska  1 FIPS 5001 (Meters)\",\n        \"3469\": \"NAD 1983 NSRS2007 StatePlane Alaska  2 FIPS 5002 (Meters)\",\n        \"3470\": \"NAD 1983 NSRS2007 StatePlane Alaska  3 FIPS 5003 (Meters)\",\n        \"3471\": \"NAD 1983 NSRS2007 StatePlane Alaska  4 FIPS 5004 (Meters)\",\n        \"3472\": \"NAD 1983 NSRS2007 StatePlane Alaska  5 FIPS 5005 (Meters)\",\n        \"3473\": \"NAD 1983 NSRS2007 StatePlane Alaska  6 FIPS 5006 (Meters)\",\n        \"3474\": \"NAD 1983 NSRS2007 StatePlane Alaska  7 FIPS 5007 (Meters)\",\n        \"3475\": \"NAD 1983 NSRS2007 StatePlane Alaska  8 FIPS 5008 (Meters)\",\n        \"3476\": \"NAD 1983 NSRS2007 StatePlane Alaska  9 FIPS 5009 (Meters)\",\n        \"3477\": \"NAD 1983 NSRS2007 StatePlane Alaska 10 FIPS 5010 (Meters)\",\n        \"3478\": \"NAD 1983 NSRS2007 StatePlane Arizona Central FIPS 0202 (Meters)\",\n        \"3480\": \"NAD 1983 NSRS2007 StatePlane Arizona East FIPS 0201 (Meters)\",\n        \"3482\": \"NAD 1983 NSRS2007 StatePlane Arizona West FIPS 0203 (Meters)\",\n        \"3484\": \"NAD 1983 NSRS2007 StatePlane Arkansas North FIPS 0301 (Meters)\",\n        \"3486\": \"NAD 1983 NSRS2007 StatePlane Arkansas South FIPS 0302 (Meters)\",\n        \"3489\": \"NAD 1983 NSRS2007 StatePlane California I FIPS 0401 (Meters)\",\n        \"3491\": \"NAD 1983 NSRS2007 StatePlane California II FIPS 0402 (Meters)\",\n        \"3493\": \"NAD 1983 NSRS2007 StatePlane California III FIPS 0403 (Meters)\",\n        \"3495\": \"NAD 1983 NSRS2007 StatePlane California IV FIPS 0404 (Meters)\",\n        \"3497\": \"NAD 1983 NSRS2007 StatePlane California V FIPS 0405 (Meters)\",\n        \"3499\": \"NAD 1983 NSRS2007 StatePlane California VI FIPS 0406 (Meters)\",\n        \"3501\": \"NAD 1983 NSRS2007 StatePlane Colorado Central FIPS 0502 (Meter)\",\n        \"3503\": \"NAD 1983 NSRS2007 StatePlane Colorado North FIPS 0501 (Meters)\",\n        \"3505\": \"NAD 1983 NSRS2007 StatePlane Colorado South FIPS 0503 (Meters)\",\n        \"3507\": \"NAD 1983 NSRS2007 StatePlane Connecticut FIPS 0600 (Meters)\",\n        \"3509\": \"NAD 1983 NSRS2007 StatePlane Delaware FIPS 0700 (Meters)\",\n        \"3511\": \"NAD 1983 NSRS2007 StatePlane Florida East FIPS 0901 (Meters)\",\n        \"3514\": \"NAD 1983 NSRS2007 StatePlane Florida North FIPS 0903 (Meters)\",\n        \"3516\": \"NAD 1983 NSRS2007 StatePlane Florida West FIPS 0902 (Meters)\",\n        \"3518\": \"NAD 1983 NSRS2007 StatePlane Georgia East FIPS 1001 (Meters)\",\n        \"3520\": \"NAD 1983 NSRS2007 StatePlane Georgia West FIPS 1002 (Meters)\",\n        \"3522\": \"NAD 1983 NSRS2007 StatePlane Idaho Central FIPS 1102 (Meters)\",\n        \"3524\": \"NAD 1983 NSRS2007 StatePlane Idaho East FIPS 1101 (Meters)\",\n        \"3526\": \"NAD 1983 NSRS2007 StatePlane Idaho West FIPS 1103 (Meters)\",\n        \"3528\": \"NAD 1983 NSRS2007 StatePlane Illinois East FIPS 1201 (Meters)\",\n        \"3530\": \"NAD 1983 NSRS2007 StatePlane Illinois West FIPS 1202 (Meters)\",\n        \"3532\": \"NAD 1983 NSRS2007 StatePlane Indiana East FIPS 1301 (Meters)\",\n        \"3534\": \"NAD 1983 NSRS2007 StatePlane Indiana West FIPS 1302 (Meters)\",\n        \"3536\": \"NAD 1983 NSRS2007 StatePlane Iowa North FIPS 1401 (Meters)\",\n        \"3538\": \"NAD 1983 NSRS2007 StatePlane Iowa South FIPS 1402 (Meters)\",\n        \"3540\": \"NAD 1983 NSRS2007 StatePlane Kansas North FIPS 1501 (Meters)\",\n        \"3542\": \"NAD 1983 NSRS2007 StatePlane Kansas South FIPS 1502 (Meters)\",\n        \"3546\": \"NAD 1983 NSRS2007 StatePlane Kentucky FIPS 1600 (Meters)\",\n        \"3544\": \"NAD 1983 NSRS2007 StatePlane Kentucky North FIPS 1601 (Meters)\",\n        \"3548\": \"NAD 1983 NSRS2007 StatePlane Kentucky South FIPS 1602 (Meters)\",\n        \"3550\": \"NAD 1983 NSRS2007 StatePlane Louisiana North FIPS 1701 (Meters)\",\n        \"3552\": \"NAD 1983 NSRS2007 StatePlane Louisiana South FIPS 1702 (Meters)\",\n        \"3557\": \"NAD 1983 NSRS2007 StatePlane Maine East FIPS 1801 (Meters)\",\n        \"3558\": \"NAD 1983 NSRS2007 StatePlane Maine West FIPS 1802 (Meters)\",\n        \"3559\": \"NAD 1983 NSRS2007 StatePlane Maryland FIPS 1900 (Meters)\",\n        \"3585\": \"NAD 1983 NSRS2007 StatePlane Massachusetts FIPS 2001 (Meters)\",\n        \"3583\": \"NAD 1983 NSRS2007 StatePlane Massachusetts Isl FIPS 2002 (Meters)\",\n        \"3587\": \"NAD 1983 NSRS2007 StatePlane Michigan Central FIPS 2112 (Meters)\",\n        \"3589\": \"NAD 1983 NSRS2007 StatePlane Michigan North FIPS 2111 (Meters)\",\n        \"3592\": \"NAD 1983 NSRS2007 StatePlane Michigan South FIPS 2113 (Meters)\",\n        \"3594\": \"NAD 1983 NSRS2007 StatePlane Minnesota Central FIPS 2202 (Meters)\",\n        \"3595\": \"NAD 1983 NSRS2007 StatePlane Minnesota North FIPS 2201 (Meters)\",\n        \"3596\": \"NAD 1983 NSRS2007 StatePlane Minnesota South FIPS 2203 (Meters)\",\n        \"3597\": \"NAD 1983 NSRS2007 StatePlane Mississippi East FIPS 2301 (Meters)\",\n        \"3599\": \"NAD 1983 NSRS2007 StatePlane Mississippi West FIPS 2302 (Meters)\",\n        \"3601\": \"NAD 1983 NSRS2007 StatePlane Missouri Central FIPS 2402 (Meters)\",\n        \"3602\": \"NAD 1983 NSRS2007 StatePlane Missouri East FIPS 2401 (Meters)\",\n        \"3603\": \"NAD 1983 NSRS2007 StatePlane Missouri West FIPS 2403 (Meters)\",\n        \"3604\": \"NAD 1983 NSRS2007 StatePlane Montana FIPS 2500 (Meters)\",\n        \"3606\": \"NAD 1983 NSRS2007 StatePlane Nebraska FIPS 2600 (Meters)\",\n        \"3607\": \"NAD 1983 NSRS2007 StatePlane Nevada Central FIPS 2702 (Meters)\",\n        \"3609\": \"NAD 1983 NSRS2007 StatePlane Nevada East FIPS 2701 (Meters)\",\n        \"3611\": \"NAD 1983 NSRS2007 StatePlane Nevada West FIPS 2703 (Meters)\",\n        \"3613\": \"NAD 1983 NSRS2007 StatePlane New Hampshire FIPS 2800 (Meters)\",\n        \"3615\": \"NAD 1983 NSRS2007 StatePlane New Jersey FIPS 2900 (Meters)\",\n        \"3617\": \"NAD 1983 NSRS2007 StatePlane New Mexico Central FIPS 3002 (Meters)\",\n        \"3619\": \"NAD 1983 NSRS2007 StatePlane New Mexico East FIPS 3001 (Meters)\",\n        \"3621\": \"NAD 1983 NSRS2007 StatePlane New Mexico West FIPS 3003 (Meters)\",\n        \"3623\": \"NAD 1983 NSRS2007 StatePlane New York Central FIPS 3102 (Meters)\",\n        \"3625\": \"NAD 1983 NSRS2007 StatePlane New York East FIPS 3101 (Meters)\",\n        \"3627\": \"NAD 1983 NSRS2007 StatePlane New York Long Isl FIPS 3104 (Meters)\",\n        \"3629\": \"NAD 1983 NSRS2007 StatePlane New York West FIPS 3103 (Meters)\",\n        \"3631\": \"NAD 1983 NSRS2007 StatePlane North Carolina FIPS 3200 (Meters)\",\n        \"3633\": \"NAD 1983 NSRS2007 StatePlane North Dakota N FIPS 3301 (Meters)\",\n        \"3635\": \"NAD 1983 NSRS2007 StatePlane North Dakota S FIPS 3302 (Meters)\",\n        \"3637\": \"NAD 1983 NSRS2007 StatePlane Ohio North FIPS 3401 (Meters)\",\n        \"3638\": \"NAD 1983 NSRS2007 StatePlane Ohio South FIPS 3402 (Meters)\",\n        \"3639\": \"NAD 1983 NSRS2007 StatePlane Oklahoma North FIPS 3501 (Meters)\",\n        \"3641\": \"NAD 1983 NSRS2007 StatePlane Oklahoma South FIPS 3502 (Meters)\",\n        \"3645\": \"NAD 1983 NSRS2007 StatePlane Oregon North FIPS 3601 (Meters)\",\n        \"3647\": \"NAD 1983 NSRS2007 StatePlane Oregon South FIPS 3602 (Meters)\",\n        \"4437\": \"NAD 1983 NSRS2007 StatePlane PR \\u0026 VI FIPS 5200 (Meters)\",\n        \"3649\": \"NAD 1983 NSRS2007 StatePlane Pennsylvania North FIPS 3701 (Meters)\",\n        \"3651\": \"NAD 1983 NSRS2007 StatePlane Pennsylvania South FIPS 3702 (Meters)\",\n        \"3653\": \"NAD 1983 NSRS2007 StatePlane Rhode Island FIPS 3800 (Meters)\",\n        \"3655\": \"NAD 1983 NSRS2007 StatePlane South Carolina FIPS 3900 (Meters)\",\n        \"3657\": \"NAD 1983 NSRS2007 StatePlane South Dakota N FIPS 4001 (Meters)\",\n        \"3659\": \"NAD 1983 NSRS2007 StatePlane South Dakota S FIPS 4002 (Meters)\",\n        \"3661\": \"NAD 1983 NSRS2007 StatePlane Tennessee FIPS 4100 (Meters)\",\n        \"3663\": \"NAD 1983 NSRS2007 StatePlane Texas Central FIPS 4203 (Meters)\",\n        \"3669\": \"NAD 1983 NSRS2007 StatePlane Texas N Central FIPS 4202 (Meters)\",\n        \"3667\": \"NAD 1983 NSRS2007 StatePlane Texas North FIPS 4201 (Meters)\",\n        \"3673\": \"NAD 1983 NSRS2007 StatePlane Texas S Central FIPS 4204 (Meters)\",\n        \"3671\": \"NAD 1983 NSRS2007 StatePlane Texas South FIPS 4205 (Meters)\",\n        \"3675\": \"NAD 1983 NSRS2007 StatePlane Utah Central FIPS 4302 (Meters)\",\n        \"3678\": \"NAD 1983 NSRS2007 StatePlane Utah North FIPS 4301 (Meters)\",\n        \"3681\": \"NAD 1983 NSRS2007 StatePlane Utah South FIPS 4303 (Meters)\",\n        \"3684\": \"NAD 1983 NSRS2007 StatePlane Vermont FIPS 4400 (Meters)\",\n        \"3685\": \"NAD 1983 NSRS2007 StatePlane Virginia North FIPS 4501 (Meters)\",\n        \"3687\": \"NAD 1983 NSRS2007 StatePlane Virginia South FIPS 4502 (Meters)\",\n        \"3689\": \"NAD 1983 NSRS2007 StatePlane Washington North FIPS 4601 (Meters)\",\n        \"3691\": \"NAD 1983 NSRS2007 StatePlane Washington South FIPS 4602 (Meters)\",\n        \"3693\": \"NAD 1983 NSRS2007 StatePlane West Virginia N FIPS 4701 (Meters)\",\n        \"3694\": \"NAD 1983 NSRS2007 StatePlane West Virginia S FIPS 4702 (Meters)\",\n        \"3695\": \"NAD 1983 NSRS2007 StatePlane Wisconsin Central FIPS 4802 (Meters)\",\n        \"3697\": \"NAD 1983 NSRS2007 StatePlane Wisconsin North FIPS 4801 (Meters)\",\n        \"3699\": \"NAD 1983 NSRS2007 StatePlane Wisconsin South FIPS 4803 (Meters)\",\n        \"3703\": \"NAD 1983 NSRS2007 StatePlane Wyoming E Central FIPS 4902 (Meters)\",\n        \"3702\": \"NAD 1983 NSRS2007 StatePlane Wyoming East FIPS 4901 (Meters)\",\n        \"3704\": \"NAD 1983 NSRS2007 StatePlane Wyoming W Central FIPS 4903 (Meters)\",\n        \"3705\": \"NAD 1983 NSRS2007 StatePlane Wyoming West FIPS 4904 (Meters)\"\n      },\n      \"NAD 1983 NSRS2007 (US Feet)\": {\n        \"3485\": \"NAD 1983 NSRS2007 StatePlane Arkansas North FIPS 0301 (US Feet)\",\n        \"3487\": \"NAD 1983 NSRS2007 StatePlane Arkansas South FIPS 0302 (US Feet)\",\n        \"3490\": \"NAD 1983 NSRS2007 StatePlane California I FIPS 0401 (US Feet)\",\n        \"3492\": \"NAD 1983 NSRS2007 StatePlane California II FIPS 0402 (US Feet)\",\n        \"3494\": \"NAD 1983 NSRS2007 StatePlane California III FIPS 0403 (US Feet)\",\n        \"3496\": \"NAD 1983 NSRS2007 StatePlane California IV FIPS 0404 (US Feet)\",\n        \"3498\": \"NAD 1983 NSRS2007 StatePlane California V FIPS 0405 (US Feet)\",\n        \"3500\": \"NAD 1983 NSRS2007 StatePlane California VI FIPS 0406 (US Feet)\",\n        \"3502\": \"NAD 1983 NSRS2007 StatePlane Colorado Central FIPS 0502 (US Feet)\",\n        \"3504\": \"NAD 1983 NSRS2007 StatePlane Colorado North FIPS 0501 (US Feet)\",\n        \"3506\": \"NAD 1983 NSRS2007 StatePlane Colorado South FIPS 0503 (US Feet)\",\n        \"3508\": \"NAD 1983 NSRS2007 StatePlane Connecticut FIPS 0600 (US Feet)\",\n        \"3510\": \"NAD 1983 NSRS2007 StatePlane Delaware FIPS 0700 (US Feet)\",\n        \"3512\": \"NAD 1983 NSRS2007 StatePlane Florida East FIPS 0901 (US Feet)\",\n        \"3515\": \"NAD 1983 NSRS2007 StatePlane Florida North FIPS 0903 (US Feet)\",\n        \"3517\": \"NAD 1983 NSRS2007 StatePlane Florida West FIPS 0902 (US Feet)\",\n        \"3519\": \"NAD 1983 NSRS2007 StatePlane Georgia East FIPS 1001 (US Feet)\",\n        \"3521\": \"NAD 1983 NSRS2007 StatePlane Georgia West FIPS 1002 (US Feet)\",\n        \"3523\": \"NAD 1983 NSRS2007 StatePlane Idaho Central FIPS 1102 (US Feet)\",\n        \"3525\": \"NAD 1983 NSRS2007 StatePlane Idaho East FIPS 1101 (US Feet)\",\n        \"3527\": \"NAD 1983 NSRS2007 StatePlane Idaho West FIPS 1103 (US Feet)\",\n        \"3529\": \"NAD 1983 NSRS2007 StatePlane Illinois East FIPS 1201 (US Feet)\",\n        \"3531\": \"NAD 1983 NSRS2007 StatePlane Illinois West FIPS 1202 (US Feet)\",\n        \"3533\": \"NAD 1983 NSRS2007 StatePlane Indiana East FIPS 1301 (US Feet)\",\n        \"3535\": \"NAD 1983 NSRS2007 StatePlane Indiana West FIPS 1302 (US Feet)\",\n        \"3537\": \"NAD 1983 NSRS2007 StatePlane Iowa North FIPS 1401 (US Feet)\",\n        \"3539\": \"NAD 1983 NSRS2007 StatePlane Iowa South FIPS 1402 (US Feet)\",\n        \"3541\": \"NAD 1983 NSRS2007 StatePlane Kansas North FIPS 1501 (US Feet)\",\n        \"3543\": \"NAD 1983 NSRS2007 StatePlane Kansas South FIPS 1502 (US Feet)\",\n        \"3547\": \"NAD 1983 NSRS2007 StatePlane Kentucky FIPS 1600 (US Feet)\",\n        \"3545\": \"NAD 1983 NSRS2007 StatePlane Kentucky North FIPS 1601 (US Feet)\",\n        \"3549\": \"NAD 1983 NSRS2007 StatePlane Kentucky South FIPS 1602 (US Feet)\",\n        \"3551\": \"NAD 1983 NSRS2007 StatePlane Louisiana North FIPS 1701 (US Feet)\",\n        \"3553\": \"NAD 1983 NSRS2007 StatePlane Louisiana South FIPS 1702 (US Feet)\",\n        \"26863\": \"NAD 1983 NSRS2007 StatePlane Maine East FIPS 1801 (US Feet)\",\n        \"26864\": \"NAD 1983 NSRS2007 StatePlane Maine West FIPS 1802 (US Feet)\",\n        \"3582\": \"NAD 1983 NSRS2007 StatePlane Maryland FIPS 1900 (US Feet)\",\n        \"3586\": \"NAD 1983 NSRS2007 StatePlane Massachusetts FIPS 2001 (US Feet)\",\n        \"3584\": \"NAD 1983 NSRS2007 StatePlane Massachusetts Isl FIPS 2002 (US Feet)\",\n        \"26866\": \"NAD 1983 NSRS2007 StatePlane Minnesota Central FIPS 2202 (US Feet)\",\n        \"26865\": \"NAD 1983 NSRS2007 StatePlane Minnesota North FIPS 2201 (US Feet)\",\n        \"26867\": \"NAD 1983 NSRS2007 StatePlane Minnesota South FIPS 2203 (US Feet)\",\n        \"3598\": \"NAD 1983 NSRS2007 StatePlane Mississippi East FIPS 2301 (US Feet)\",\n        \"3600\": \"NAD 1983 NSRS2007 StatePlane Mississippi West FIPS 2302 (US Feet)\",\n        \"26868\": \"NAD 1983 NSRS2007 StatePlane Nebraska FIPS 2600 (US Feet)\",\n        \"3608\": \"NAD 1983 NSRS2007 StatePlane Nevada Central FIPS 2702 (US Feet)\",\n        \"3610\": \"NAD 1983 NSRS2007 StatePlane Nevada East FIPS 2701 (US Feet)\",\n        \"3612\": \"NAD 1983 NSRS2007 StatePlane Nevada West FIPS 2703 (US Feet)\",\n        \"3614\": \"NAD 1983 NSRS2007 StatePlane New Hampshire FIPS 2800 (US Feet)\",\n        \"3616\": \"NAD 1983 NSRS2007 StatePlane New Jersey FIPS 2900 (US Feet)\",\n        \"3618\": \"NAD 1983 NSRS2007 StatePlane New Mexico Central FIPS3002 (US Feet)\",\n        \"3620\": \"NAD 1983 NSRS2007 StatePlane New Mexico East FIPS 3001 (US Feet)\",\n        \"3622\": \"NAD 1983 NSRS2007 StatePlane New Mexico West FIPS 3003 (US Feet)\",\n        \"3624\": \"NAD 1983 NSRS2007 StatePlane New York Central FIPS 3102 (US Feet)\",\n        \"3626\": \"NAD 1983 NSRS2007 StatePlane New York East FIPS 3101 (US Feet)\",\n        \"3628\": \"NAD 1983 NSRS2007 StatePlane New York Long Isl FIPS 3104 (US Feet)\",\n        \"3630\": \"NAD 1983 NSRS2007 StatePlane New York West FIPS 3103 (US Feet)\",\n        \"3632\": \"NAD 1983 NSRS2007 StatePlane North Carolina FIPS 3200 (US Feet)\",\n        \"3728\": \"NAD 1983 NSRS2007 StatePlane Ohio North FIPS 3401 (US Feet)\",\n        \"3729\": \"NAD 1983 NSRS2007 StatePlane Ohio South FIPS 3402 (US Feet)\",\n        \"3640\": \"NAD 1983 NSRS2007 StatePlane Oklahoma North FIPS 3501 (US Feet)\",\n        \"3642\": \"NAD 1983 NSRS2007 StatePlane Oklahoma South FIPS 3502 (US Feet)\",\n        \"3650\": \"NAD 1983 NSRS2007 StatePlane Pennsylvania North FIPS3701 (US Feet)\",\n        \"3652\": \"NAD 1983 NSRS2007 StatePlane Pennsylvania South FIPS3702 (US Feet)\",\n        \"3654\": \"NAD 1983 NSRS2007 StatePlane Rhode Island FIPS 3800 (US Feet)\",\n        \"3658\": \"NAD 1983 NSRS2007 StatePlane South Dakota N FIPS 4001 (US Feet)\",\n        \"3660\": \"NAD 1983 NSRS2007 StatePlane South Dakota S FIPS 4002 (US Feet)\",\n        \"3662\": \"NAD 1983 NSRS2007 StatePlane Tennessee FIPS 4100 (US Feet)\",\n        \"3664\": \"NAD 1983 NSRS2007 StatePlane Texas Central FIPS 4203 (US Feet)\",\n        \"3670\": \"NAD 1983 NSRS2007 StatePlane Texas N Central FIPS 4202 (US Feet)\",\n        \"3668\": \"NAD 1983 NSRS2007 StatePlane Texas North FIPS 4201 (US Feet)\",\n        \"3674\": \"NAD 1983 NSRS2007 StatePlane Texas S Central FIPS 4204 (US Feet)\",\n        \"3672\": \"NAD 1983 NSRS2007 StatePlane Texas South FIPS 4205 (US Feet)\",\n        \"3677\": \"NAD 1983 NSRS2007 StatePlane Utah Central FIPS 4302 (US Feet)\",\n        \"3680\": \"NAD 1983 NSRS2007 StatePlane Utah North FIPS 4301 (US Feet)\",\n        \"3683\": \"NAD 1983 NSRS2007 StatePlane Utah South FIPS 4303 (US Feet)\",\n        \"5655\": \"NAD 1983 NSRS2007 StatePlane Vermont FIPS 4400 (US Feet)\",\n        \"3686\": \"NAD 1983 NSRS2007 StatePlane Virginia North FIPS 4501 (US Feet)\",\n        \"3688\": \"NAD 1983 NSRS2007 StatePlane Virginia South FIPS 4502 (US Feet)\",\n        \"3690\": \"NAD 1983 NSRS2007 StatePlane Washington North FIPS 4601 (US Feet)\",\n        \"3692\": \"NAD 1983 NSRS2007 StatePlane Washington South FIPS 4602 (US Feet)\",\n        \"26869\": \"NAD 1983 NSRS2007 StatePlane West Virginia N FIPS 4701 (US Feet)\",\n        \"26870\": \"NAD 1983 NSRS2007 StatePlane West Virginia S FIPS 4702 (US Feet)\",\n        \"3696\": \"NAD 1983 NSRS2007 StatePlane Wisconsin Central FIPS 4802 (US Feet)\",\n        \"3698\": \"NAD 1983 NSRS2007 StatePlane Wisconsin North FIPS 4801 (US Feet)\",\n        \"3700\": \"NAD 1983 NSRS2007 StatePlane Wisconsin South FIPS 4803 (US Feet)\",\n        \"3731\": \"NAD 1983 NSRS2007 StatePlane Wyoming E Central FIPS 4902 (US Feet)\",\n        \"3730\": \"NAD 1983 NSRS2007 StatePlane Wyoming East FIPS 4901 (US Feet)\",\n        \"3732\": \"NAD 1983 NSRS2007 StatePlane Wyoming W Central FIPS 4903 (US Feet)\",\n        \"3733\": \"NAD 1983 NSRS2007 StatePlane Wyoming West FIPS 4904 (US Feet)\"\n      },\n      \"Other GCS\": {\n        \"65062\": \"American Samoa 1962 StatePlane Amer. Samoa FIPS 5300 (US Feet)\",\n        \"102240\": \"Guam Geodetic Network 1993 (Meters)\",\n        \"102239\": \"Guam Geodetic Triangulation Network 1963 (Meters)\",\n        \"4414\": \"NAD 1983 HARN Guam Map Grid (Meters)\",\n        \"6637\": \"NAD 1983 MA11 Guam Map Grid (Meters)\",\n        \"3561\": \"Old Hawaiian StatePlane Hawaii 1 FIPS 5101 (US Feet)\",\n        \"3562\": \"Old Hawaiian StatePlane Hawaii 2 FIPS 5102 (US Feet)\",\n        \"3563\": \"Old Hawaiian StatePlane Hawaii 3 FIPS 5103 (US Feet)\",\n        \"3564\": \"Old Hawaiian StatePlane Hawaii 4 FIPS 5104 (US Feet)\",\n        \"3565\": \"Old Hawaiian StatePlane Hawaii 5 FIPS 5105 (US Feet)\",\n        \"3991\": \"Puerto Rico StatePlane Puerto Rico FIPS 5201 (US Feet)\",\n        \"3992\": \"Puerto Rico StatePlane Virgin Isl St.Croix FIPS 5202 (US Feet)\"\n      }\n    },\n    \"State Systems\": {\n      \"102117\": \"NAD 1927 Alaska Albers (Meters)\",\n      \"2964\": \"NAD 1927 Alaska Albers (US Feet)\",\n      \"3309\": \"NAD 1927 California (Teale) Albers (Meters)\",\n      \"102118\": \"NAD 1927 Georgia Statewide Albers (US Feet)\",\n      \"102122\": \"NAD 1927 Michigan GeoRef (Meters)\",\n      \"102120\": \"NAD 1927 Michigan GeoRef (US Feet)\",\n      \"3069\": \"NAD 1927 Wisconsin TM (Meters)\",\n      \"6393\": \"NAD 1983 (2011) Alaska Albers (Meters)\",\n      \"6414\": \"NAD 1983 (2011) California (Teale) Albers (Meters)\",\n      \"6439\": \"NAD 1983 (2011) Florida GDL Albers (Meters)\",\n      \"6924\": \"NAD 1983 (2011) Kansas LCC\",\n      \"6925\": \"NAD 1983 (2011) Kansas LCC ftUS\",\n      \"6497\": \"NAD 1983 (2011) Michigan GeoRef (Meters)\",\n      \"6508\": \"NAD 1983 (2011) Mississippi TM (Meters)\",\n      \"6591\": \"NAD 1983 (2011) Virginia Lambert (Meters)\",\n      \"6610\": \"NAD 1983 (2011) Wisconsin TM (Meters)\",\n      \"102974\": \"NAD 1983 (2011) Wisconsin TM (US Feet)\",\n      \"102247\": \"NAD 1983 (CORS96) Alaska Albers (Meters)\",\n      \"102399\": \"NAD 1983 Albers BLM Montana, North Dakota, South Dakota\",\n      \"102760\": \"NAD 1983 California (Teale) Albers (Intl Feet)\",\n      \"3310\": \"NAD 1983 California (Teale) Albers (Meters)\",\n      \"102600\": \"NAD 1983 California (Teale) Albers (US Feet)\",\n      \"3086\": \"NAD 1983 Florida GDL Albers (Meters)\",\n      \"102604\": \"NAD 1983 Georgia Statewide Lambert (US Feet)\",\n      \"3311\": \"NAD 1983 HARN California (Teale) Albers (Meters)\",\n      \"3087\": \"NAD 1983 HARN Florida GDL Albers (Meters)\",\n      \"3079\": \"NAD 1983 HARN Michigan GeoRef (Meters)\",\n      \"3815\": \"NAD 1983 HARN Mississippi TM (Meters)\",\n      \"3969\": \"NAD 1983 HARN Virginia Lambert (Meters)\",\n      \"3071\": \"NAD 1983 HARN Wisconsin TM (Meters)\",\n      \"102220\": \"NAD 1983 HARN Wisconsin TM (US Feet)\",\n      \"8826\": \"NAD 1983 Idaho TM (Meters)\",\n      \"6922\": \"NAD 1983 Kansas LCC\",\n      \"6923\": \"NAD 1983 Kansas LCC ftUS\",\n      \"3078\": \"NAD 1983 Michigan GeoRef (Meters)\",\n      \"102121\": \"NAD 1983 Michigan GeoRef (US Feet)\",\n      \"3814\": \"NAD 1983 Mississippi TM (Meters)\",\n      \"3467\": \"NAD 1983 NSRS2007 Alaska Albers (Meters)\",\n      \"3488\": \"NAD 1983 NSRS2007 California (Teale) Albers (Meters)\",\n      \"3513\": \"NAD 1983 NSRS2007 Florida GDL Albers (Meters)\",\n      \"3591\": \"NAD 1983 NSRS2007 Michigan GeoRef (Meters)\",\n      \"3816\": \"NAD 1983 NSRS2007 Mississippi TM (Meters)\",\n      \"3970\": \"NAD 1983 NSRS2007 Virginia Lambert (Meters)\",\n      \"3701\": \"NAD 1983 NSRS2007 Wisconsin TM (Meters)\",\n      \"102217\": \"NAD 1983 NSRS2007 Wisconsin TM (US Feet)\",\n      \"9674\": \"NAD 1983 USFS R6 Albers (Meters)\",\n      \"102042\": \"NAD 1983 USFS R9 Albers (Meters)\",\n      \"3968\": \"NAD 1983 Virginia Lambert (Meters)\",\n      \"3070\": \"NAD 1983 Wisconsin TM (Meters)\",\n      \"102219\": \"NAD 1983 Wisconsin TM (US Feet)\",\n      \"102212\": \"NAD 1983 WyLam (Meters)\",\n      \"102759\": \"WGS 1984 California (Teale) Albers (Intl Feet)\",\n      \"102599\": \"WGS 1984 California (Teale) Albers (US Feet)\",\n      Oregon: {\n        \"6557\": \"NAD 1983 (2011) Oregon Statewide Lambert (Intl Feet)\",\n        \"6556\": \"NAD 1983 (2011) Oregon Statewide Lambert (Meters)\",\n        \"6868\": \"NAD 1983 (CORS96) Oregon Statewide Lambert (Intl Feet)\",\n        \"6867\": \"NAD 1983 (CORS96) Oregon Statewide Lambert (Meters)\",\n        \"2994\": \"NAD 1983 HARN Oregon Statewide Lambert (Intl Feet)\",\n        \"2993\": \"NAD 1983 HARN Oregon Statewide Lambert (Meters)\",\n        \"3644\": \"NAD 1983 NSRS2007 Oregon Statewide Lambert (Intl Feet)\",\n        \"3643\": \"NAD 1983 NSRS2007 Oregon Statewide Lambert (Meters)\",\n        \"2992\": \"NAD 1983 Oregon Statewide Lambert (Intl Feet)\",\n        \"2991\": \"NAD 1983 Oregon Statewide Lambert (Meters)\",\n        \"6787\": \"OCRS Baker NAD 1983 2011 TM (Feet Intl)\",\n        \"6786\": \"OCRS Baker NAD 1983 2011 TM (Meters)\",\n        \"6785\": \"OCRS Baker NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6784\": \"OCRS Baker NAD 1983 CORS96 TM (Meters)\",\n        \"6799\": \"OCRS Bend-Burns NAD 1983 2011 LCC (Feet Intl)\",\n        \"6798\": \"OCRS Bend-Burns NAD 1983 2011 LCC (Meters)\",\n        \"6797\": \"OCRS Bend-Burns NAD 1983 CORS96 LCC (Feet Intl)\",\n        \"6796\": \"OCRS Bend-Burns NAD 1983 CORS96 LCC (Meters)\",\n        \"6791\": \"OCRS Bend-Klamath Falls NAD 1983 2011 TM (Feet Intl)\",\n        \"6790\": \"OCRS Bend-Klamath Falls NAD 1983 2011 TM (Meters)\",\n        \"6789\": \"OCRS Bend-Klamath Falls NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6788\": \"OCRS Bend-Klamath Falls NAD 1983 CORS96 TM (Meters)\",\n        \"6795\": \"OCRS Bend-Redmond-Prineville NAD 1983 2011 LCC (Feet Intl)\",\n        \"6794\": \"OCRS Bend-Redmond-Prineville NAD 1983 2011 LCC (Meters)\",\n        \"6793\": \"OCRS Bend-Redmond-Prineville NAD 1983 CORS96 LCC (Feet Intl)\",\n        \"6792\": \"OCRS Bend-Redmond-Prineville NAD 1983 CORS96 LCC (Meters)\",\n        \"8312\": \"OCRS Burns-Harper NAD 1983 2011 TM (Feet Intl)\",\n        \"8311\": \"OCRS Burns-Harper NAD 1983 2011 TM (Meters)\",\n        \"8314\": \"OCRS Canyon City-Burns NAD 1983 2011 TM (Feet Intl)\",\n        \"8313\": \"OCRS Canyon City-Burns NAD 1983 2011 TM (Meters)\",\n        \"6803\": \"OCRS Canyonville-Grants Pass NAD 1983 2011 TM (Feet Intl)\",\n        \"6802\": \"OCRS Canyonville-Grants Pass NAD 1983 2011 TM (Meters)\",\n        \"6801\": \"OCRS Canyonville-Grants Pass NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6800\": \"OCRS Canyonville-Grants Pass NAD 1983 CORS96 TM (Meters)\",\n        \"8316\": \"OCRS Coast Range North NAD 1983 2011 LCC (Feet Intl)\",\n        \"8315\": \"OCRS Coast Range North NAD 1983 2011 LCC (Meters)\",\n        \"6807\": \"OCRS Columbia River East NAD 1983 2011 LCC (Feet Intl)\",\n        \"6806\": \"OCRS Columbia River East NAD 1983 2011 LCC (Meters)\",\n        \"6805\": \"OCRS Columbia River East NAD 1983 CORS96 LCC (Feet Intl)\",\n        \"6804\": \"OCRS Columbia River East NAD 1983 CORS96 LCC (Meters)\",\n        \"6811\": \"OCRS Columbia River West NAD 1983 2011 OM (Feet Intl)\",\n        \"6810\": \"OCRS Columbia River West NAD 1983 2011 OM (Meters)\",\n        \"6809\": \"OCRS Columbia River West NAD 1983 CORS96 OM (Feet Intl)\",\n        \"6808\": \"OCRS Columbia River West NAD 1983 CORS96 OM (Meters)\",\n        \"6815\": \"OCRS Cottage Grove-Canyonville NAD 1983 2011 TM (Feet Intl)\",\n        \"6814\": \"OCRS Cottage Grove-Canyonville NAD 1983 2011 TM (Meters)\",\n        \"6813\": \"OCRS Cottage Grove-Canyonville NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6812\": \"OCRS Cottage Grove-Canyonville NAD 1983 CORS96 TM (Meters)\",\n        \"8318\": \"OCRS Dayville-Prairie City NAD 1983 2011 TM (Feet Intl)\",\n        \"8317\": \"OCRS Dayville-Prairie City NAD 1983 2011 TM (Meters)\",\n        \"8320\": \"OCRS Denio-Burns NAD 1983 2011 TM (Feet Intl)\",\n        \"8319\": \"OCRS Denio-Burns NAD 1983 2011 TM (Meters)\",\n        \"6819\": \"OCRS Dufur-Madras NAD 1983 2011 TM (Feet Intl)\",\n        \"6818\": \"OCRS Dufur-Madras NAD 1983 2011 TM (Meters)\",\n        \"6817\": \"OCRS Dufur-Madras NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6816\": \"OCRS Dufur-Madras NAD 1983 CORS96 TM (Meters)\",\n        \"6823\": \"OCRS Eugene NAD 1983 2011 TM (Feet Intl)\",\n        \"6822\": \"OCRS Eugene NAD 1983 2011 TM (Meters)\",\n        \"6821\": \"OCRS Eugene NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6820\": \"OCRS Eugene NAD 1983 CORS96 TM (Meters)\",\n        \"6827\": \"OCRS Grants Pass-Ashland NAD 1983 2011 TM (Feet Intl)\",\n        \"6826\": \"OCRS Grants Pass-Ashland NAD 1983 2011 TM (Meters)\",\n        \"6825\": \"OCRS Grants Pass-Ashland NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6824\": \"OCRS Grants Pass-Ashland NAD 1983 CORS96 TM (Meters)\",\n        \"6831\": \"OCRS Gresham-Warm Springs NAD 1983 2011 TM (Feet Intl)\",\n        \"6830\": \"OCRS Gresham-Warm Springs NAD 1983 2011 TM (Meters)\",\n        \"6829\": \"OCRS Gresham-Warm Springs NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6828\": \"OCRS Gresham-Warm Springs NAD 1983 CORS96 TM (Meters)\",\n        \"8322\": \"OCRS Halfway NAD 1983 2011 LCC (Feet Intl)\",\n        \"8321\": \"OCRS Halfway NAD 1983 2011 LCC (Meters)\",\n        \"6835\": \"OCRS La Grande NAD 1983 2011 TM (Feet Intl)\",\n        \"6834\": \"OCRS La Grande NAD 1983 2011 TM (Meters)\",\n        \"6833\": \"OCRS La Grande NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6832\": \"OCRS La Grande NAD 1983 CORS96 TM (Meters)\",\n        \"8324\": \"OCRS Medford-Diamond Lake NAD 1983 2011 LCC (Feet Intl)\",\n        \"8323\": \"OCRS Medford-Diamond Lake NAD 1983 2011 LCC (Meters)\",\n        \"8326\": \"OCRS Mitchell NAD 1983 2011 LCC (Feet Intl)\",\n        \"8325\": \"OCRS Mitchell NAD 1983 2011 LCC (Meters)\",\n        \"8328\": \"OCRS North Central NAD 1983 2011 LCC (Feet Intl)\",\n        \"8327\": \"OCRS North Central NAD 1983 2011 LCC (Meters)\",\n        \"8330\": \"OCRS Ochoco Summit NAD 1983 2011 LCC (Feet Intl)\",\n        \"8329\": \"OCRS Ochoco Summit NAD 1983 2011 LCC (Meters)\",\n        \"6839\": \"OCRS Ontario NAD 1983 2011 TM (Feet Intl)\",\n        \"6838\": \"OCRS Ontario NAD 1983 2011 TM (Meters)\",\n        \"6837\": \"OCRS Ontario NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6836\": \"OCRS Ontario NAD 1983 CORS96 TM (Meters)\",\n        \"6843\": \"OCRS Oregon Coast NAD 1983 2011 OM (Feet Intl)\",\n        \"6842\": \"OCRS Oregon Coast NAD 1983 2011 OM (Meters)\",\n        \"6841\": \"OCRS Oregon Coast NAD 1983 CORS96 OM (Feet Intl)\",\n        \"6840\": \"OCRS Oregon Coast NAD 1983 CORS96 OM (Meters)\",\n        \"8332\": \"OCRS Owyhee NAD 1983 2011 TM (Feet Intl)\",\n        \"8331\": \"OCRS Owyhee NAD 1983 2011 TM (Meters)\",\n        \"6847\": \"OCRS Pendleton NAD 1983 2011 TM (Feet Intl)\",\n        \"6846\": \"OCRS Pendleton NAD 1983 2011 TM (Meters)\",\n        \"6845\": \"OCRS Pendleton NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6844\": \"OCRS Pendleton NAD 1983 CORS96 TM (Meters)\",\n        \"6851\": \"OCRS Pendleton-La Grande NAD 1983 2011 TM (Feet Intl)\",\n        \"6850\": \"OCRS Pendleton-La Grande NAD 1983 2011 TM (Meters)\",\n        \"6849\": \"OCRS Pendleton-La Grande NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6848\": \"OCRS Pendleton-La Grande NAD 1983 CORS96 TM (Meters)\",\n        \"8334\": \"OCRS Pilot Rock-Ukiah NAD 1983 2011 LCC (Feet Intl)\",\n        \"8333\": \"OCRS Pilot Rock-Ukiah NAD 1983 2011 LCC (Meters)\",\n        \"6855\": \"OCRS Portland NAD 1983 2011 LCC (Feet Intl)\",\n        \"6854\": \"OCRS Portland NAD 1983 2011 LCC (Meters)\",\n        \"6853\": \"OCRS Portland NAD 1983 CORS96 LCC (Feet Intl)\",\n        \"6852\": \"OCRS Portland NAD 1983 CORS96 LCC (Meters)\",\n        \"8336\": \"OCRS Prairie City-Brogan NAD 1983 2011 LCC (Feet Intl)\",\n        \"8335\": \"OCRS Prairie City-Brogan NAD 1983 2011 LCC (Meters)\",\n        \"8338\": \"OCRS Riley-Lakeview NAD 1983 2011 TM (Feet Intl)\",\n        \"8337\": \"OCRS Riley-Lakeview NAD 1983 2011 TM (Meters)\",\n        \"6859\": \"OCRS Salem NAD 1983 2011 TM (Feet Intl)\",\n        \"6858\": \"OCRS Salem NAD 1983 2011 TM (Meters)\",\n        \"6857\": \"OCRS Salem NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6856\": \"OCRS Salem NAD 1983 CORS96 TM (Meters)\",\n        \"6863\": \"OCRS Santiam Pass NAD 1983 2011 TM (Feet Intl)\",\n        \"6862\": \"OCRS Santiam Pass NAD 1983 2011 TM (Meters)\",\n        \"6861\": \"OCRS Santiam Pass NAD 1983 CORS96 TM (Feet Intl)\",\n        \"6860\": \"OCRS Santiam Pass NAD 1983 CORS96 TM (Meters)\",\n        \"8340\": \"OCRS Siskiyou Pass NAD 1983 2011 LCC (Feet Intl)\",\n        \"8339\": \"OCRS Siskiyou Pass NAD 1983 2011 LCC (Meters)\",\n        \"8342\": \"OCRS Ukiah-Fox NAD 1983 2011 LCC (Feet Intl)\",\n        \"8341\": \"OCRS Ukiah-Fox NAD 1983 2011 LCC (Meters)\",\n        \"8344\": \"OCRS Wallowa NAD 1983 2011 TM (Feet Intl)\",\n        \"8343\": \"OCRS Wallowa NAD 1983 2011 TM (Meters)\",\n        \"8346\": \"OCRS Warner Highway NAD 1983 2011 LCC (Feet Intl)\",\n        \"8345\": \"OCRS Warner Highway NAD 1983 2011 LCC (Meters)\",\n        \"8348\": \"OCRS Willamette Pass NAD 1983 2011 TM (Feet Intl)\",\n        \"8347\": \"OCRS Willamette Pass NAD 1983 2011 TM (Meters)\"\n      },\n      Texas: {\n        \"3080\": \"NAD 1927 Texas Statewide Mapping System (Intl Feet)\",\n        \"6579\": \"NAD 1983 (2011) Texas Centric Mapping System Albers (Meters)\",\n        \"6580\": \"NAD 1983 (2011) Texas Centric Mapping System Lambert (Meters)\",\n        \"3085\": \"NAD 1983 HARN Texas Centric Mapping System Albers (Meters)\",\n        \"3084\": \"NAD 1983 HARN Texas Centric Mapping System Lambert (Meters)\",\n        \"3665\": \"NAD 1983 NSRS2007 Texas Centric Mapping System Albers (Meters)\",\n        \"3666\": \"NAD 1983 NSRS2007 Texas Centric Mapping System Lambert (Meters)\",\n        \"3083\": \"NAD 1983 Texas Centric Mapping System Albers (Meters)\",\n        \"3082\": \"NAD 1983 Texas Centric Mapping System Lambert (Meters)\",\n        \"3081\": \"NAD 1983 Texas Statewide Mapping System (Meters)\"\n      }\n    },\n    Tribal: {\n      Montana: {\n        \"7127\": \"NAD 1983 (2011) RMTCRS Billings (Intl Feet)\",\n        \"7117\": \"NAD 1983 (2011) RMTCRS Billings (Meters)\",\n        \"7120\": \"NAD 1983 (2011) RMTCRS Blackfeet (Intl Feet)\",\n        \"7110\": \"NAD 1983 (2011) RMTCRS Blackfeet (Meters)\",\n        \"7126\": \"NAD 1983 (2011) RMTCRS Bobcat (Intl Feet)\",\n        \"7116\": \"NAD 1983 (2011) RMTCRS Bobcat (Meters)\",\n        \"7125\": \"NAD 1983 (2011) RMTCRS Crow (Intl Feet)\",\n        \"7115\": \"NAD 1983 (2011) RMTCRS Crow (Meters)\",\n        \"7122\": \"NAD 1983 (2011) RMTCRS Fort Belknap (Intl Feet)\",\n        \"7112\": \"NAD 1983 (2011) RMTCRS Fort Belknap (Meters)\",\n        \"7123\": \"NAD 1983 (2011) RMTCRS Fort Peck Assiniboine (Intl Feet)\",\n        \"7113\": \"NAD 1983 (2011) RMTCRS Fort Peck Assiniboine (Meters)\",\n        \"7124\": \"NAD 1983 (2011) RMTCRS Fort Peck Sioux (Intl Feet)\",\n        \"7114\": \"NAD 1983 (2011) RMTCRS Fort Peck Sioux (Meters)\",\n        \"7121\": \"NAD 1983 (2011) RMTCRS Milk River (Intl Feet)\",\n        \"7111\": \"NAD 1983 (2011) RMTCRS Milk River (Meters)\",\n        \"7119\": \"NAD 1983 (2011) RMTCRS St Mary (Intl Feet)\",\n        \"7109\": \"NAD 1983 (2011) RMTCRS St Mary (Meters)\"\n      },\n      Navajo: {\n        \"103594\": \"NAD 1983 (2011) Navajo Nation Coordinate System (Intl Feet)\",\n        \"103592\": \"NAD 1983 (2011) Navajo Nation Coordinate System (Meters)\",\n        \"103593\": \"NAD 1983 (2011) Navajo Nation Coordinate System (US Feet)\",\n        \"103588\": \"NAD 1983 HARN Navajo Nation Coordinate System (Intl Feet)\",\n        \"103586\": \"NAD 1983 HARN Navajo Nation Coordinate System (Meters)\",\n        \"103587\": \"NAD 1983 HARN Navajo Nation Coordinate System (US Feet)\",\n        \"103591\": \"NAD 1983 NSRS2007 Navajo Nation Coordinate System (Intl Feet)\",\n        \"103589\": \"NAD 1983 NSRS2007 Navajo Nation Coordinate System (Meters)\",\n        \"103590\": \"NAD 1983 NSRS2007 Navajo Nation Coordinate System (US Feet)\"\n      },\n      Wyoming: {\n        \"7118\": \"NAD 1983 (2011) RMTCRS Wind River (Meters)\",\n        \"7128\": \"NAD 1983 (2011) RMTCRS Wind River (US Feet)\"\n      }\n    },\n    UTM: {\n      Africa: {\n        \"2043\": \"Abidjan 1987 UTM Zone 29N\",\n        \"2041\": \"Abidjan 1987 UTM Zone 30N\",\n        \"20135\": \"Adindan UTM Zone 35N\",\n        \"20136\": \"Adindan UTM Zone 36N\",\n        \"20137\": \"Adindan UTM Zone 37N\",\n        \"20138\": \"Adindan UTM Zone 38N\",\n        \"20934\": \"Arc 1950 UTM Zone 34S\",\n        \"20935\": \"Arc 1950 UTM Zone 35S\",\n        \"20936\": \"Arc 1950 UTM Zone 36S\",\n        \"21095\": \"Arc 1960 UTM Zone 35N\",\n        \"21035\": \"Arc 1960 UTM Zone 35S\",\n        \"21096\": \"Arc 1960 UTM Zone 36N\",\n        \"21036\": \"Arc 1960 UTM Zone 36S\",\n        \"21097\": \"Arc 1960 UTM Zone 37N\",\n        \"21037\": \"Arc 1960 UTM Zone 37S\",\n        \"2095\": \"Bissau UTM Zone 28N\",\n        \"22032\": \"Camacupa UTM Zone 32S\",\n        \"22033\": \"Camacupa UTM Zone 33S\",\n        \"22234\": \"Cape UTM Zone 34S\",\n        \"22235\": \"Cape UTM Zone 35S\",\n        \"22236\": \"Cape UTM Zone 36S\",\n        \"22332\": \"Carthage UTM Zone 32N\",\n        \"31528\": \"Conakry 1905 UTM Zone 28N\",\n        \"31529\": \"Conakry 1905 UTM Zone 29N\",\n        \"22832\": \"Douala UTM Zone 32N\",\n        \"2312\": \"Garoua UTM Zone 33N\",\n        \"3342\": \"IGCB 1955 Congo UTM Zone 33S\",\n        \"3367\": \"IGN Astro 1960 UTM Zone 28N\",\n        \"3368\": \"IGN Astro 1960 UTM Zone 29N\",\n        \"3369\": \"IGN Astro 1960 UTM Zone 30N\",\n        \"2313\": \"Kousseri UTM Zone 33N\",\n        \"3199\": \"LGD2006 UTM Zone 32N\",\n        \"3201\": \"LGD2006 UTM Zone 33N\",\n        \"3202\": \"LGD2006 UTM Zone 34N\",\n        \"3203\": \"LGD2006 UTM Zone 35N\",\n        \"2042\": \"Locodjo 1965 UTM Zone 29N\",\n        \"2040\": \"Locodjo 1965 UTM Zone 30N\",\n        \"25231\": \"Lome UTM Zone 31N\",\n        \"26632\": \"M\\u0027poraloko UTM Zone 32N\",\n        \"26692\": \"M\\u0027poraloko UTM Zone 32S\",\n        \"25932\": \"Malongo 1987 UTM Zone 32S\",\n        \"7992\": \"Malongo 1987 UTM zone 33S\",\n        \"2215\": \"Manoca 1962 UTM Zone 32N\",\n        \"26237\": \"Massawa UTM Zone 37N\",\n        \"3343\": \"Mauritania 1999 UTM Zone 28N\",\n        \"3344\": \"Mauritania 1999 UTM Zone 29N\",\n        \"3345\": \"Mauritania 1999 UTM Zone 30N\",\n        \"102144\": \"Merchich (degrees) UTM Zone 28N\",\n        \"3354\": \"Mhast (offshore) UTM Zone 32S\",\n        \"3353\": \"Mhast (onshore) UTM Zone 32S\",\n        \"26331\": \"Minna UTM Zone 31N\",\n        \"26332\": \"Minna UTM Zone 32N\",\n        \"3036\": \"Moznet UTM Zone 36S\",\n        \"3037\": \"Moznet UTM Zone 37S\",\n        \"5629\": \"Moznet UTM Zone 38S\",\n        \"31838\": \"NGN UTM Zone 38N\",\n        \"31839\": \"NGN UTM Zone 39N\",\n        \"30729\": \"Nord Sahara 1959 UTM Zone 29N\",\n        \"30730\": \"Nord Sahara 1959 UTM Zone 30N\",\n        \"30731\": \"Nord Sahara 1959 UTM Zone 31N\",\n        \"30732\": \"Nord Sahara 1959 UTM Zone 32N\",\n        \"28232\": \"Pointe Noire UTM Zone 32S\",\n        \"4061\": \"RGRDC 2005 UTM Zone 33S\",\n        \"4062\": \"RGRDC 2005 UTM Zone 34S\",\n        \"4063\": \"RGRDC 2005 UTM Zone 35S\",\n        \"29333\": \"Schwarzeck UTM Zone 33S\",\n        \"2161\": \"Sierra Leone 1968 UTM Zone 28N\",\n        \"2162\": \"Sierra Leone 1968 UTM Zone 29N\",\n        \"29635\": \"Sudan UTM Zone 35N\",\n        \"29636\": \"Sudan UTM Zone 36N\",\n        \"29738\": \"Tananarive 1925 UTM Zone 38S\",\n        \"29739\": \"Tananarive 1925 UTM Zone 39S\",\n        \"2736\": \"Tete UTM Zone 36S\",\n        \"2737\": \"Tete UTM Zone 37S\",\n        \"31028\": \"Yoff 1972 UTM Zone 28N\"\n      },\n      Asia: {\n        \"20538\": \"Afgooye UTM Zone 38N\",\n        \"20539\": \"Afgooye UTM Zone 39N\",\n        \"20436\": \"Ain el Abd 1970 UTM Zone 36N\",\n        \"20437\": \"Ain el Abd 1970 UTM Zone 37N\",\n        \"20438\": \"Ain el Abd 1970 UTM Zone 38N\",\n        \"20439\": \"Ain el Abd 1970 UTM Zone 39N\",\n        \"20440\": \"Ain el Abd 1970 UTM Zone 40N\",\n        \"3461\": \"Dabola 1981 UTM Zone 28N\",\n        \"3462\": \"Dabola 1981 UTM Zone 29N\",\n        \"23239\": \"Fahud UTM Zone 39N\",\n        \"23240\": \"Fahud UTM Zone 40N\",\n        \"102141\": \"Hong Kong 1980 UTM Zone 49N\",\n        \"102142\": \"Hong Kong 1980 UTM Zone 50N\",\n        \"3829\": \"Hu Tzu Shan UTM Zone 51N\",\n        \"3064\": \"IGM 1995 UTM Zone 32N\",\n        \"3065\": \"IGM 1995 UTM Zone 33N\",\n        \"3890\": \"IGRS UTM Zone 37N\",\n        \"3891\": \"IGRS UTM Zone 38N\",\n        \"3892\": \"IGRS UTM Zone 39N\",\n        \"23946\": \"Indian 1954 UTM Zone 46N\",\n        \"23947\": \"Indian 1954 UTM Zone 47N\",\n        \"23948\": \"Indian 1954 UTM Zone 48N\",\n        \"3148\": \"Indian 1960 UTM Zone 48N\",\n        \"3149\": \"Indian 1960 UTM Zone 49N\",\n        \"24047\": \"Indian 1975 UTM Zone 47N\",\n        \"24048\": \"Indian 1975 UTM Zone 48N\",\n        \"3097\": \"JGD 2000 UTM Zone 51N\",\n        \"3098\": \"JGD 2000 UTM Zone 52N\",\n        \"3099\": \"JGD 2000 UTM Zone 53N\",\n        \"3100\": \"JGD 2000 UTM Zone 54N\",\n        \"3101\": \"JGD 2000 UTM Zone 55N\",\n        \"102150\": \"JGD 2000 UTM Zone 56N\",\n        \"6688\": \"JGD 2011 UTM Zone 51N\",\n        \"6689\": \"JGD 2011 UTM Zone 52N\",\n        \"6690\": \"JGD 2011 UTM Zone 53N\",\n        \"6691\": \"JGD 2011 UTM Zone 54N\",\n        \"6692\": \"JGD 2011 UTM Zone 55N\",\n        \"102598\": \"JGD 2011 UTM Zone 56N\",\n        \"9356\": \"KSA-GRF17 UTM zone 36N\",\n        \"9357\": \"KSA-GRF17 UTM zone 37N\",\n        \"9358\": \"KSA-GRF17 UTM zone 38N\",\n        \"9359\": \"KSA-GRF17 UTM zone 39N\",\n        \"9360\": \"KSA-GRF17 UTM zone 40N\",\n        \"3391\": \"Karbala 1979 Polservice UTM Zone 37N\",\n        \"3392\": \"Karbala 1979 Polservice UTM Zone 38N\",\n        \"3393\": \"Karbala 1979 Polservice UTM Zone 39N\",\n        \"102453\": \"Luzon 1911 UTM Zone 50N\",\n        \"102454\": \"Luzon 1911 UTM Zone 51N\",\n        \"102455\": \"Luzon 1911 UTM Zone 52N\",\n        \"102224\": \"MONREF 1997 UTM Zone 46 N\",\n        \"102225\": \"MONREF 1997 UTM Zone 47 N\",\n        \"102226\": \"MONREF 1997 UTM Zone 48 N\",\n        \"102227\": \"MONREF 1997 UTM Zone 49 N\",\n        \"102228\": \"MONREF 1997 UTM Zone 50 N\",\n        \"8836\": \"MTRF 2000 UTM zone 36N\",\n        \"8837\": \"MTRF 2000 UTM zone 37N\",\n        \"8838\": \"MTRF 2000 UTM zone 38N\",\n        \"8839\": \"MTRF 2000 UTM zone 39N\",\n        \"8840\": \"MTRF 2000 UTM zone 40N\",\n        \"7005\": \"Nahrwan 1934 UTM zone 37N\",\n        \"7006\": \"Nahrwan 1934 UTM zone 38N\",\n        \"7007\": \"Nahrwan 1934 UTM zone 39N\",\n        \"27037\": \"Nahrwan 1967 UTM Zone 37N\",\n        \"27038\": \"Nahrwan 1967 UTM Zone 38N\",\n        \"27039\": \"Nahrwan 1967 UTM Zone 39N\",\n        \"27040\": \"Nahrwan 1967 UTM Zone 40N\",\n        \"3307\": \"Nakhl-e Ghanem UTM Zone 39N\",\n        \"7374\": \"ONGD14 UTM Zone 39N\",\n        \"7375\": \"ONGD14 UTM Zone 40N\",\n        \"7376\": \"ONGD14 UTM Zone 41N\",\n        \"9295\": \"ONGD17 UTM Zone 39N\",\n        \"9296\": \"ONGD17 UTM Zone 40N\",\n        \"9297\": \"ONGD17 UTM Zone 41N\",\n        \"3439\": \"PDO 1993 UTM Zone 39N\",\n        \"3440\": \"PDO 1993 UTM Zone 40N\",\n        \"102456\": \"PRS 1992 UTM Zone 50N\",\n        \"102457\": \"PRS 1992 UTM Zone 51N\",\n        \"102458\": \"PRS 1992 UTM Zone 52N\",\n        \"102143\": \"QND 1995 UTM Zone 39N\",\n        \"2550\": \"Samboja UTM Zone 50S\",\n        \"3092\": \"Tokyo UTM Zone 51N\",\n        \"3093\": \"Tokyo UTM Zone 52N\",\n        \"3094\": \"Tokyo UTM Zone 53N\",\n        \"3095\": \"Tokyo UTM Zone 54N\",\n        \"3096\": \"Tokyo UTM Zone 55N\",\n        \"102156\": \"Tokyo UTM Zone 56N\",\n        \"30339\": \"Trucial Coast 1948 UTM Zone 39N\",\n        \"30340\": \"Trucial Coast 1948 UTM Zone 40N\",\n        \"3405\": \"VN 2000 UTM Zone 48N\",\n        \"3406\": \"VN 2000 UTM Zone 49N\",\n        \"5836\": \"Yemen NGN 1996 UTM Zone 37N\",\n        \"2089\": \"Yemen NGN 1996 UTM Zone 38N\",\n        \"2090\": \"Yemen NGN 1996 UTM Zone 39N\",\n        \"5837\": \"Yemen NGN 1996 UTM Zone 40N\"\n      },\n      \"BLM (US Feet)\": {\n        \"4401\": \"NAD 1927 BLM Zone  1N (US Feet)\",\n        \"4402\": \"NAD 1927 BLM Zone  2N (US Feet)\",\n        \"4403\": \"NAD 1927 BLM Zone  3N (US Feet)\",\n        \"4404\": \"NAD 1927 BLM Zone  4N (US Feet)\",\n        \"4405\": \"NAD 1927 BLM Zone  5N (US Feet)\",\n        \"4406\": \"NAD 1927 BLM Zone  6N (US Feet)\",\n        \"4407\": \"NAD 1927 BLM Zone  7N (US Feet)\",\n        \"4408\": \"NAD 1927 BLM Zone  8N (US Feet)\",\n        \"4409\": \"NAD 1927 BLM Zone  9N (US Feet)\",\n        \"4410\": \"NAD 1927 BLM Zone 10N (US Feet)\",\n        \"4411\": \"NAD 1927 BLM Zone 11N (US Feet)\",\n        \"4412\": \"NAD 1927 BLM Zone 12N (US Feet)\",\n        \"4413\": \"NAD 1927 BLM Zone 13N (US Feet)\",\n        \"32064\": \"NAD 1927 BLM Zone 14N (US Feet)\",\n        \"32065\": \"NAD 1927 BLM Zone 15N (US Feet)\",\n        \"32066\": \"NAD 1927 BLM Zone 16N (US Feet)\",\n        \"32067\": \"NAD 1927 BLM Zone 17N (US Feet)\",\n        \"4418\": \"NAD 1927 BLM Zone 18N (US Feet)\",\n        \"4419\": \"NAD 1927 BLM Zone 19N (US Feet)\",\n        \"4399\": \"NAD 1927 BLM Zone 59N (US Feet)\",\n        \"4400\": \"NAD 1927 BLM Zone 60N (US Feet)\",\n        \"4421\": \"NAD 1983 BLM Zone  1N (US Feet)\",\n        \"4422\": \"NAD 1983 BLM Zone  2N (US Feet)\",\n        \"4423\": \"NAD 1983 BLM Zone  3N (US Feet)\",\n        \"4424\": \"NAD 1983 BLM Zone  4N (US Feet)\",\n        \"4425\": \"NAD 1983 BLM Zone  5N (US Feet)\",\n        \"4426\": \"NAD 1983 BLM Zone  6N (US Feet)\",\n        \"4427\": \"NAD 1983 BLM Zone  7N (US Feet)\",\n        \"4428\": \"NAD 1983 BLM Zone  8N (US Feet)\",\n        \"4429\": \"NAD 1983 BLM Zone  9N (US Feet)\",\n        \"4430\": \"NAD 1983 BLM Zone 10N (US Feet)\",\n        \"4431\": \"NAD 1983 BLM Zone 11N (US Feet)\",\n        \"4432\": \"NAD 1983 BLM Zone 12N (US Feet)\",\n        \"4433\": \"NAD 1983 BLM Zone 13N (US Feet)\",\n        \"32164\": \"NAD 1983 BLM Zone 14N (US Feet)\",\n        \"32165\": \"NAD 1983 BLM Zone 15N (US Feet)\",\n        \"32166\": \"NAD 1983 BLM Zone 16N (US Feet)\",\n        \"32167\": \"NAD 1983 BLM Zone 17N (US Feet)\",\n        \"4438\": \"NAD 1983 BLM Zone 18N (US Feet)\",\n        \"4439\": \"NAD 1983 BLM Zone 19N (US Feet)\",\n        \"4217\": \"NAD 1983 BLM Zone 59N (US Feet)\",\n        \"4420\": \"NAD 1983 BLM Zone 60N (US Feet)\",\n        \"32664\": \"WGS 1984 BLM Zone 14N (US Feet)\",\n        \"32665\": \"WGS 1984 BLM Zone 15N (US Feet)\",\n        \"32666\": \"WGS 1984 BLM Zone 16N (US Feet)\",\n        \"32667\": \"WGS 1984 BLM Zone 17N (US Feet)\"\n      },\n      Europe: {\n        \"7803\": \"BGS2005 UTM zone 34N\",\n        \"7799\": \"BGS2005 UTM zone 34N (N-E)\",\n        \"9391\": \"BGS2005 UTM zone 35N\",\n        \"7800\": \"BGS2005 UTM zone 35N (N-E)\",\n        \"7805\": \"BGS2005 UTM zone 36N\",\n        \"27429\": \"Datum 73 UTM Zone 29N\",\n        \"2058\": \"ED 1950 ED77 UTM Zone 38N\",\n        \"2059\": \"ED 1950 ED77 UTM Zone 39N\",\n        \"2060\": \"ED 1950 ED77 UTM Zone 40N\",\n        \"2061\": \"ED 1950 ED77 UTM Zone 41N\",\n        \"2077\": \"ELD 1979 UTM Zone 32N\",\n        \"2078\": \"ELD 1979 UTM Zone 33N\",\n        \"2079\": \"ELD 1979 UTM Zone 34N\",\n        \"2080\": \"ELD 1979 UTM Zone 35N\",\n        \"3038\": \"ETRS 1989 ETRS-TM26\",\n        \"3039\": \"ETRS 1989 ETRS-TM27\",\n        \"3040\": \"ETRS 1989 ETRS-TM28\",\n        \"3041\": \"ETRS 1989 ETRS-TM29\",\n        \"3042\": \"ETRS 1989 ETRS-TM30\",\n        \"3043\": \"ETRS 1989 ETRS-TM31\",\n        \"3044\": \"ETRS 1989 ETRS-TM32\",\n        \"3045\": \"ETRS 1989 ETRS-TM33\",\n        \"3046\": \"ETRS 1989 ETRS-TM34\",\n        \"3047\": \"ETRS 1989 ETRS-TM35\",\n        \"3048\": \"ETRS 1989 ETRS-TM36\",\n        \"3049\": \"ETRS 1989 ETRS-TM37\",\n        \"3050\": \"ETRS 1989 ETRS-TM38\",\n        \"3051\": \"ETRS 1989 ETRS-TM39\",\n        \"102097\": \"ETRS 1989 UTM Zone 26N\",\n        \"102098\": \"ETRS 1989 UTM Zone 27N\",\n        \"25828\": \"ETRS 1989 UTM Zone 28N\",\n        \"25829\": \"ETRS 1989 UTM Zone 29N\",\n        \"25830\": \"ETRS 1989 UTM Zone 30N\",\n        \"25831\": \"ETRS 1989 UTM Zone 31N\",\n        \"25832\": \"ETRS 1989 UTM Zone 32N\",\n        \"25833\": \"ETRS 1989 UTM Zone 33N\",\n        \"25834\": \"ETRS 1989 UTM Zone 34N\",\n        \"25835\": \"ETRS 1989 UTM Zone 35N\",\n        \"25836\": \"ETRS 1989 UTM Zone 36N\",\n        \"25837\": \"ETRS 1989 UTM Zone 37N\",\n        \"25838\": \"ETRS 1989 UTM Zone 38N\",\n        \"102099\": \"ETRS 1989 UTM Zone 39N\",\n        \"23028\": \"European Datum 1950 UTM Zone 28N\",\n        \"23029\": \"European Datum 1950 UTM Zone 29N\",\n        \"23030\": \"European Datum 1950 UTM Zone 30N\",\n        \"23031\": \"European Datum 1950 UTM Zone 31N\",\n        \"23032\": \"European Datum 1950 UTM Zone 32N\",\n        \"23033\": \"European Datum 1950 UTM Zone 33N\",\n        \"23034\": \"European Datum 1950 UTM Zone 34N\",\n        \"23035\": \"European Datum 1950 UTM Zone 35N\",\n        \"23036\": \"European Datum 1950 UTM Zone 36N\",\n        \"23037\": \"European Datum 1950 UTM Zone 37N\",\n        \"23038\": \"European Datum 1950 UTM Zone 38N\",\n        \"3374\": \"FD 1954 UTM Zone 29N\",\n        \"3767\": \"HTRS96 UTM Zone 33N\",\n        \"3768\": \"HTRS96 UTM Zone 34N\",\n        \"3054\": \"Hjorsey 1955 UTM Zone 26N\",\n        \"3055\": \"Hjorsey 1955 UTM Zone 27N\",\n        \"3056\": \"Hjorsey 1955 UTM Zone 28N\",\n        \"2158\": \"IRENET95 UTM Zone 29N\",\n        \"102132\": \"NGO 1948 UTM Zone 32N\",\n        \"102133\": \"NGO 1948 UTM Zone 33N\",\n        \"102134\": \"NGO 1948 UTM Zone 34N\",\n        \"102135\": \"NGO 1948 UTM Zone 35N\",\n        \"9404\": \"PN68 UTM zone 27N\",\n        \"9405\": \"PN68 UTM zone 28N\",\n        \"9406\": \"PN84 UTM zone 27N\",\n        \"9407\": \"PN84 UTM zone 28N\",\n        \"2216\": \"Qornoq 1927 UTM Zone 22N\",\n        \"2217\": \"Qornoq 1927 UTM Zone 23N\",\n        \"7791\": \"RDN2008 UTM zone 32N\",\n        \"7792\": \"RDN2008 UTM zone 33N\",\n        \"7793\": \"RDN2008 UTM zone 34N\",\n        \"4082\": \"REGCAN95 UTM Zone 27N\",\n        \"4083\": \"REGCAN95 UTM Zone 28N\"\n      },\n      Indonesia: {\n        \"21148\": \"Batavia UTM Zone 48S\",\n        \"21149\": \"Batavia UTM Zone 49S\",\n        \"21150\": \"Batavia UTM Zone 50S\",\n        \"23866\": \"DGN 1995 UTM Zone 46N\",\n        \"23867\": \"DGN 1995 UTM Zone 47N\",\n        \"23877\": \"DGN 1995 UTM Zone 47S\",\n        \"23868\": \"DGN 1995 UTM Zone 48N\",\n        \"23878\": \"DGN 1995 UTM Zone 48S\",\n        \"23869\": \"DGN 1995 UTM Zone 49N\",\n        \"23879\": \"DGN 1995 UTM Zone 49S\",\n        \"23870\": \"DGN 1995 UTM Zone 50N\",\n        \"23880\": \"DGN 1995 UTM Zone 50S\",\n        \"23871\": \"DGN 1995 UTM Zone 51N\",\n        \"23881\": \"DGN 1995 UTM Zone 51S\",\n        \"23872\": \"DGN 1995 UTM Zone 52N\",\n        \"23882\": \"DGN 1995 UTM Zone 52S\",\n        \"23883\": \"DGN 1995 UTM Zone 53S\",\n        \"23884\": \"DGN 1995 UTM Zone 54S\",\n        \"2933\": \"Gunung Segara UTM Zone 50S\",\n        \"23846\": \"Indonesia 1974 UTM Zone 46N\",\n        \"23886\": \"Indonesia 1974 UTM Zone 46S\",\n        \"23847\": \"Indonesia 1974 UTM Zone 47N\",\n        \"23887\": \"Indonesia 1974 UTM Zone 47S\",\n        \"23848\": \"Indonesia 1974 UTM Zone 48N\",\n        \"23888\": \"Indonesia 1974 UTM Zone 48S\",\n        \"23849\": \"Indonesia 1974 UTM Zone 49N\",\n        \"23889\": \"Indonesia 1974 UTM Zone 49S\",\n        \"23850\": \"Indonesia 1974 UTM Zone 50N\",\n        \"23890\": \"Indonesia 1974 UTM Zone 50S\",\n        \"23851\": \"Indonesia 1974 UTM Zone 51N\",\n        \"23891\": \"Indonesia 1974 UTM Zone 51S\",\n        \"23852\": \"Indonesia 1974 UTM Zone 52N\",\n        \"23892\": \"Indonesia 1974 UTM Zone 52S\",\n        \"23853\": \"Indonesia 1974 UTM Zone 53N\",\n        \"23893\": \"Indonesia 1974 UTM Zone 53S\",\n        \"23894\": \"Indonesia 1974 UTM Zone 54S\"\n      },\n      Malaysia: {\n        \"24547\": \"Kertau UTM Zone 47N\",\n        \"24548\": \"Kertau UTM Zone 48N\",\n        \"29849\": \"Timbalai 1948 UTM Zone 49N\",\n        \"29850\": \"Timbalai 1948 UTM Zone 50N\"\n      },\n      \"NAD 1927\": {\n        \"26701\": \"NAD 1927 UTM Zone  1N\",\n        \"26702\": \"NAD 1927 UTM Zone  2N\",\n        \"26703\": \"NAD 1927 UTM Zone  3N\",\n        \"26704\": \"NAD 1927 UTM Zone  4N\",\n        \"26705\": \"NAD 1927 UTM Zone  5N\",\n        \"26706\": \"NAD 1927 UTM Zone  6N\",\n        \"26707\": \"NAD 1927 UTM Zone  7N\",\n        \"26708\": \"NAD 1927 UTM Zone  8N\",\n        \"26709\": \"NAD 1927 UTM Zone  9N\",\n        \"26710\": \"NAD 1927 UTM Zone 10N\",\n        \"26711\": \"NAD 1927 UTM Zone 11N\",\n        \"26712\": \"NAD 1927 UTM Zone 12N\",\n        \"26713\": \"NAD 1927 UTM Zone 13N\",\n        \"26714\": \"NAD 1927 UTM Zone 14N\",\n        \"26715\": \"NAD 1927 UTM Zone 15N\",\n        \"26716\": \"NAD 1927 UTM Zone 16N\",\n        \"26717\": \"NAD 1927 UTM Zone 17N\",\n        \"26718\": \"NAD 1927 UTM Zone 18N\",\n        \"26719\": \"NAD 1927 UTM Zone 19N\",\n        \"26720\": \"NAD 1927 UTM Zone 20N\",\n        \"26721\": \"NAD 1927 UTM Zone 21N\",\n        \"26722\": \"NAD 1927 UTM Zone 22N\",\n        \"3370\": \"NAD 1927 UTM Zone 59N\",\n        \"3371\": \"NAD 1927 UTM Zone 60N\"\n      },\n      \"NAD 1983\": {\n        \"26901\": \"NAD 1983 UTM Zone  1N\",\n        \"26902\": \"NAD 1983 UTM Zone  2N\",\n        \"26903\": \"NAD 1983 UTM Zone  3N\",\n        \"26904\": \"NAD 1983 UTM Zone  4N\",\n        \"26905\": \"NAD 1983 UTM Zone  5N\",\n        \"26906\": \"NAD 1983 UTM Zone  6N\",\n        \"26907\": \"NAD 1983 UTM Zone  7N\",\n        \"26908\": \"NAD 1983 UTM Zone  8N\",\n        \"26909\": \"NAD 1983 UTM Zone  9N\",\n        \"26910\": \"NAD 1983 UTM Zone 10N\",\n        \"26911\": \"NAD 1983 UTM Zone 11N\",\n        \"26912\": \"NAD 1983 UTM Zone 12N\",\n        \"26913\": \"NAD 1983 UTM Zone 13N\",\n        \"26914\": \"NAD 1983 UTM Zone 14N\",\n        \"26915\": \"NAD 1983 UTM Zone 15N\",\n        \"26916\": \"NAD 1983 UTM Zone 16N\",\n        \"26917\": \"NAD 1983 UTM Zone 17N\",\n        \"26918\": \"NAD 1983 UTM Zone 18N\",\n        \"26919\": \"NAD 1983 UTM Zone 19N\",\n        \"26920\": \"NAD 1983 UTM Zone 20N\",\n        \"26921\": \"NAD 1983 UTM Zone 21N\",\n        \"26922\": \"NAD 1983 UTM Zone 22N\",\n        \"26923\": \"NAD 1983 UTM Zone 23N\",\n        \"102213\": \"NAD 1983 UTM Zone 58N\",\n        \"3372\": \"NAD 1983 UTM Zone 59N\",\n        \"3373\": \"NAD 1983 UTM Zone 60N\"\n      },\n      \"New Zealand\": {\n        \"27258\": \"NZGD 1949 UTM Zone 58S\",\n        \"27259\": \"NZGD 1949 UTM Zone 59S\",\n        \"27260\": \"NZGD 1949 UTM Zone 60S\",\n        \"2133\": \"NZGD 2000 UTM Zone 58S\",\n        \"2134\": \"NZGD 2000 UTM Zone 59S\",\n        \"2135\": \"NZGD 2000 UTM Zone 60S\"\n      },\n      \"North America\": {\n        \"2219\": \"ATS 1977 UTM Zone 19N\",\n        \"2220\": \"ATS 1977 UTM Zone 20N\",\n        \"3356\": \"Grand Cayman 1959 UTM Zone 17N\",\n        \"3178\": \"Greenland 1996 UTM Zone 18N\",\n        \"3179\": \"Greenland 1996 UTM Zone 19N\",\n        \"3180\": \"Greenland 1996 UTM Zone 20N\",\n        \"3181\": \"Greenland 1996 UTM Zone 21N\",\n        \"3182\": \"Greenland 1996 UTM Zone 22N\",\n        \"3183\": \"Greenland 1996 UTM Zone 23N\",\n        \"3184\": \"Greenland 1996 UTM Zone 24N\",\n        \"3185\": \"Greenland 1996 UTM Zone 25N\",\n        \"3186\": \"Greenland 1996 UTM Zone 26N\",\n        \"3187\": \"Greenland 1996 UTM Zone 27N\",\n        \"3188\": \"Greenland 1996 UTM Zone 28N\",\n        \"3189\": \"Greenland 1996 UTM Zone 29N\",\n        \"3449\": \"JAD 2001 UTM Zone 17N\",\n        \"3450\": \"JAD 2001 UTM Zone 18N\",\n        \"3357\": \"Little Cayman 1961 UTM Zone 17N\",\n        \"6366\": \"Mexico ITRF2008 UTM Zone 11N\",\n        \"6367\": \"Mexico ITRF2008 UTM Zone 12N\",\n        \"6368\": \"Mexico ITRF2008 UTM Zone 13N\",\n        \"6369\": \"Mexico ITRF2008 UTM Zone 14N\",\n        \"6370\": \"Mexico ITRF2008 UTM Zone 15N\",\n        \"6371\": \"Mexico ITRF2008 UTM Zone 16N\",\n        \"6330\": \"NAD 1983 (2011) UTM Zone  1N\",\n        \"6331\": \"NAD 1983 (2011) UTM Zone  2N\",\n        \"6332\": \"NAD 1983 (2011) UTM Zone  3N\",\n        \"6333\": \"NAD 1983 (2011) UTM Zone  4N\",\n        \"6334\": \"NAD 1983 (2011) UTM Zone  5N\",\n        \"6335\": \"NAD 1983 (2011) UTM Zone  6N\",\n        \"6336\": \"NAD 1983 (2011) UTM Zone  7N\",\n        \"6337\": \"NAD 1983 (2011) UTM Zone  8N\",\n        \"6338\": \"NAD 1983 (2011) UTM Zone  9N\",\n        \"6339\": \"NAD 1983 (2011) UTM Zone 10N\",\n        \"6340\": \"NAD 1983 (2011) UTM Zone 11N\",\n        \"6341\": \"NAD 1983 (2011) UTM Zone 12N\",\n        \"6342\": \"NAD 1983 (2011) UTM Zone 13N\",\n        \"6343\": \"NAD 1983 (2011) UTM Zone 14N\",\n        \"6344\": \"NAD 1983 (2011) UTM Zone 15N\",\n        \"6345\": \"NAD 1983 (2011) UTM Zone 16N\",\n        \"6346\": \"NAD 1983 (2011) UTM Zone 17N\",\n        \"6347\": \"NAD 1983 (2011) UTM Zone 18N\",\n        \"6348\": \"NAD 1983 (2011) UTM Zone 19N\",\n        \"102045\": \"NAD 1983 (2011) UTM Zone 20N\",\n        \"6328\": \"NAD 1983 (2011) UTM Zone 59N\",\n        \"6329\": \"NAD 1983 (2011) UTM Zone 60N\",\n        \"102401\": \"NAD 1983 (CORS96) UTM Zone  1N\",\n        \"102402\": \"NAD 1983 (CORS96) UTM Zone  2N\",\n        \"102403\": \"NAD 1983 (CORS96) UTM Zone  3N\",\n        \"102404\": \"NAD 1983 (CORS96) UTM Zone  4N\",\n        \"102405\": \"NAD 1983 (CORS96) UTM Zone  5N\",\n        \"102406\": \"NAD 1983 (CORS96) UTM Zone  6N\",\n        \"102407\": \"NAD 1983 (CORS96) UTM Zone  7N\",\n        \"102408\": \"NAD 1983 (CORS96) UTM Zone  8N\",\n        \"102409\": \"NAD 1983 (CORS96) UTM Zone  9N\",\n        \"102410\": \"NAD 1983 (CORS96) UTM Zone 10N\",\n        \"102411\": \"NAD 1983 (CORS96) UTM Zone 11N\",\n        \"102412\": \"NAD 1983 (CORS96) UTM Zone 12N\",\n        \"102413\": \"NAD 1983 (CORS96) UTM Zone 13N\",\n        \"102414\": \"NAD 1983 (CORS96) UTM Zone 14N\",\n        \"102415\": \"NAD 1983 (CORS96) UTM Zone 15N\",\n        \"102416\": \"NAD 1983 (CORS96) UTM Zone 16N\",\n        \"102417\": \"NAD 1983 (CORS96) UTM Zone 17N\",\n        \"102418\": \"NAD 1983 (CORS96) UTM Zone 18N\",\n        \"102419\": \"NAD 1983 (CORS96) UTM Zone 19N\",\n        \"102043\": \"NAD 1983 (CORS96) UTM Zone 20N\",\n        \"102364\": \"NAD 1983 (CORS96) UTM Zone 59N\",\n        \"102365\": \"NAD 1983 (CORS96) UTM Zone 60N\",\n        \"8692\": \"NAD 1983 (MA11) UTM Zone 54N\",\n        \"8693\": \"NAD 1983 (MA11) UTM Zone 55N\",\n        \"3708\": \"NAD 1983 (NSRS2007) UTM Zone  1N\",\n        \"3709\": \"NAD 1983 (NSRS2007) UTM Zone  2N\",\n        \"3710\": \"NAD 1983 (NSRS2007) UTM Zone  3N\",\n        \"3711\": \"NAD 1983 (NSRS2007) UTM Zone  4N\",\n        \"3712\": \"NAD 1983 (NSRS2007) UTM Zone  5N\",\n        \"3713\": \"NAD 1983 (NSRS2007) UTM Zone  6N\",\n        \"3714\": \"NAD 1983 (NSRS2007) UTM Zone  7N\",\n        \"3715\": \"NAD 1983 (NSRS2007) UTM Zone  8N\",\n        \"3716\": \"NAD 1983 (NSRS2007) UTM Zone  9N\",\n        \"3717\": \"NAD 1983 (NSRS2007) UTM Zone 10N\",\n        \"3718\": \"NAD 1983 (NSRS2007) UTM Zone 11N\",\n        \"3719\": \"NAD 1983 (NSRS2007) UTM Zone 12N\",\n        \"3720\": \"NAD 1983 (NSRS2007) UTM Zone 13N\",\n        \"3721\": \"NAD 1983 (NSRS2007) UTM Zone 14N\",\n        \"3722\": \"NAD 1983 (NSRS2007) UTM Zone 15N\",\n        \"3723\": \"NAD 1983 (NSRS2007) UTM Zone 16N\",\n        \"3724\": \"NAD 1983 (NSRS2007) UTM Zone 17N\",\n        \"3725\": \"NAD 1983 (NSRS2007) UTM Zone 18N\",\n        \"3726\": \"NAD 1983 (NSRS2007) UTM Zone 19N\",\n        \"102044\": \"NAD 1983 (NSRS2007) UTM Zone 20N\",\n        \"3706\": \"NAD 1983 (NSRS2007) UTM Zone 59N\",\n        \"3707\": \"NAD 1983 (NSRS2007) UTM Zone 60N\",\n        \"6636\": \"NAD 1983 (PA11) UTM Zone 2S\",\n        \"6634\": \"NAD 1983 (PA11) UTM Zone 4N\",\n        \"6635\": \"NAD 1983 (PA11) UTM Zone 5N\",\n        \"3740\": \"NAD 1983 HARN UTM Zone 10N\",\n        \"3741\": \"NAD 1983 HARN UTM Zone 11N\",\n        \"3742\": \"NAD 1983 HARN UTM Zone 12N\",\n        \"3743\": \"NAD 1983 HARN UTM Zone 13N\",\n        \"3744\": \"NAD 1983 HARN UTM Zone 14N\",\n        \"3745\": \"NAD 1983 HARN UTM Zone 15N\",\n        \"3746\": \"NAD 1983 HARN UTM Zone 16N\",\n        \"3747\": \"NAD 1983 HARN UTM Zone 17N\",\n        \"3748\": \"NAD 1983 HARN UTM Zone 18N\",\n        \"3749\": \"NAD 1983 HARN UTM Zone 19N\",\n        \"2195\": \"NAD 1983 HARN UTM Zone 2S\",\n        \"3750\": \"NAD 1983 HARN UTM Zone 4N\",\n        \"3751\": \"NAD 1983 HARN UTM Zone 5N\",\n        \"102703\": \"NAD 1983 PACP00 UTM Zone 2S\",\n        \"102701\": \"NAD 1983 PACP00 UTM Zone 4N\",\n        \"102702\": \"NAD 1983 PACP00 UTM Zone 5N\",\n        \"3920\": \"Puerto Rico UTM Zone 20N\",\n        \"2216\": \"Qornoq 1927 UTM Zone 22N\",\n        \"2217\": \"Qornoq 1927 UTM Zone 23N\",\n        \"2987\": \"Saint Pierre et Miquelon 1950 UTM Zone 21N\"\n      },\n      Oceans: {\n        \"Atlantic Ocean\": {\n          \"7878\": \"Astro DOS 71_4 UTM zone 30S\",\n          \"2189\": \"Azores Central 1948 UTM Zone 26N\",\n          \"3063\": \"Azores Central 1995 UTM Zone 26N\",\n          \"2188\": \"Azores Occidental 1939 UTM Zone 25N\",\n          \"2190\": \"Azores Oriental 1940 UTM Zone 26N\",\n          \"3062\": \"Azores Oriental 1995 UTM Zone 26N\",\n          \"3769\": \"Bermuda 1957 UTM Zone 20N\",\n          \"102162\": \"Graciosa Base SW 1948 UTM Zone 26N\",\n          \"3054\": \"Hjorsey 1955 UTM Zone 26N\",\n          \"3055\": \"Hjorsey 1955 UTM Zone 27N\",\n          \"3056\": \"Hjorsey 1955 UTM Zone 28N\",\n          \"2191\": \"Madeira 1936 UTM Zone 28N\",\n          \"5014\": \"PTRA08 UTM Zone 25N\",\n          \"5015\": \"PTRA08 UTM Zone 26N\",\n          \"5016\": \"PTRA08 UTM Zone 28N\",\n          \"2942\": \"Porto Santo 1936 UTM Zone 28N\",\n          \"3061\": \"Porto Santo 1995 UTM Zone 28N\",\n          \"4467\": \"RGSPM 2006 UTM Zone 21N\",\n          \"102168\": \"Sao Braz UTM Zone 26N\",\n          \"29220\": \"Sapper Hill 1943 UTM Zone 20S\",\n          \"29221\": \"Sapper Hill 1943 UTM Zone 21S\",\n          \"2943\": \"Selvagem Grande 1938 UTM Zone 28N\",\n          \"7883\": \"St. Helena Tritan UTM zone 30S\"\n        },\n        Caribbean: {\n          \"2973\": \"Fort Desaix UTM Zone 20N\",\n          \"2969\": \"Fort Marigot UTM Zone 20N\",\n          \"3449\": \"JAD 2001 UTM Zone 17N\",\n          \"3450\": \"JAD 2001 UTM Zone 18N\",\n          \"3920\": \"Puerto Rico UTM Zone 20N\",\n          \"5490\": \"RGAF09 UTM Zone 20N\",\n          \"4559\": \"RRAF 1991 UTM Zone 20N\",\n          \"2970\": \"Sainte Anne UTM Zone 20N\"\n        },\n        \"Indian Ocean\": {\n          \"5879\": \"Cadastre 1997 UTM Zone 38S\",\n          \"2980\": \"Combani 1950 UTM Zone 38S\",\n          \"2999\": \"Grand Comoros UTM Zone 38S\",\n          \"3336\": \"Kerguelen Island 1949 UTM Zone 42S\",\n          \"4471\": \"RGM 2004 UTM Zone 38S\",\n          \"5644\": \"RGR 1992 UTM Zone 39S\",\n          \"2975\": \"RGR 1992 UTM Zone 40S\",\n          \"7074\": \"RGTAAF07 UTM zone 37S\",\n          \"7075\": \"RGTAAF07 UTM zone 38S\",\n          \"7076\": \"RGTAAF07 UTM zone 39S\",\n          \"7077\": \"RGTAAF07 UTM zone 40S\",\n          \"7078\": \"RGTAAF07 UTM zone 41S\",\n          \"7079\": \"RGTAAF07 UTM zone 42S\",\n          \"7080\": \"RGTAAF07 UTM zone 43S\",\n          \"7081\": \"RGTAAF07 UTM zone 44S\",\n          \"6915\": \"South East Island 1943 UTM Zone 40N\"\n        },\n        \"Pacific Ocean\": {\n          \"102116\": \"American Samoa 1962 UTM Zone 2S\",\n          \"3303\": \"Fatu Iva 1972 UTM Zone 7S\",\n          \"3142\": \"Fiji 1956 UTM Zone 1S\",\n          \"3141\": \"Fiji 1956 UTM Zone 60S\",\n          \"2995\": \"IGN53 Mare UTM Zone 58S\",\n          \"3172\": \"IGN53 Mare UTM Zone 59S\",\n          \"2981\": \"IGN56 Lifou UTM Zone 58S\",\n          \"3302\": \"IGN63 Hiva Oa UTM Zone 7S\",\n          \"3060\": \"IGN72 Grande Terre UTM Zone 58S\",\n          \"2978\": \"IGN72 Nuku Hiva UTM Zone 7S\",\n          \"2988\": \"MOP78 UTM Zone 1S\",\n          \"3306\": \"Maupiti 1983 UTM Zone 5S\",\n          \"3305\": \"Moorea 1987 UTM Zone 6S\",\n          \"8692\": \"NAD 1983 (MA11) UTM Zone 54N\",\n          \"8693\": \"NAD 1983 (MA11) UTM Zone 55N\",\n          \"2998\": \"NEA74 Noumea UTM Zone 58S\",\n          \"102166\": \"Observ Meteorologico 1939 UTM Zone 25N\",\n          \"102114\": \"Old Hawaiian UTM Zone 4N\",\n          \"102115\": \"Old Hawaiian UTM Zone 5N\",\n          \"3784\": \"Pitcairn 1967 UTM Zone 9S\",\n          \"3169\": \"RGNC 1991-93 UTM Zone 57S\",\n          \"3170\": \"RGNC 1991-93 UTM Zone 58S\",\n          \"3171\": \"RGNC 1991-93 UTM Zone 59S\",\n          \"3296\": \"RGPF UTM Zone 5S\",\n          \"3297\": \"RGPF UTM Zone 6S\",\n          \"3298\": \"RGPF UTM Zone 7S\",\n          \"3299\": \"RGPF UTM Zone 8S\",\n          \"8903\": \"RGWF96 UTM Zone 1S\",\n          \"2997\": \"ST71 Belep UTM Zone 58S\",\n          \"2996\": \"ST84 Ile des Pins UTM Zone 58S\",\n          \"3164\": \"ST87 Ouvea UTM Zone 58S\",\n          \"2977\": \"Tahaa UTM Zone 5S\",\n          \"3304\": \"Tahiti 1979 UTM Zone 6S\",\n          \"2976\": \"Tahiti UTM Zone 6S\"\n        }\n      },\n      \"South America\": {\n        \"20822\": \"Aratu UTM Zone 22S\",\n        \"20823\": \"Aratu UTM Zone 23S\",\n        \"20824\": \"Aratu UTM Zone 24S\",\n        \"5337\": \"Aratu UTM Zone 25S\",\n        \"21817\": \"Bogota UTM Zone 17N\",\n        \"21818\": \"Bogota UTM Zone 18N\",\n        \"3312\": \"CSG 1967 UTM Zone 21N\",\n        \"2971\": \"CSG 1967 UTM Zone 22N\",\n        \"2315\": \"Campo Inchauspe UTM 19S\",\n        \"2316\": \"Campo Inchauspe UTM 20S\",\n        \"4071\": \"Chua UTM Zone 23S\",\n        \"5536\": \"Corrego Alegre 1961 UTM Zone 21S\",\n        \"5537\": \"Corrego Alegre 1961 UTM Zone 22S\",\n        \"5538\": \"Corrego Alegre 1961 UTM Zone 23S\",\n        \"5539\": \"Corrego Alegre 1961 UTM Zone 24S\",\n        \"22521\": \"Corrego Alegre UTM Zone 21S\",\n        \"22522\": \"Corrego Alegre UTM Zone 22S\",\n        \"22523\": \"Corrego Alegre UTM Zone 23S\",\n        \"22524\": \"Corrego Alegre UTM Zone 24S\",\n        \"22525\": \"Corrego Alegre UTM Zone 25S\",\n        \"2084\": \"Hito XVIII 1963 UTM Zone 19S\",\n        \"24718\": \"La Canoa UTM Zone 18N\",\n        \"24719\": \"La Canoa UTM Zone 19N\",\n        \"24720\": \"La Canoa UTM Zone 20N\",\n        \"24721\": \"La Canoa UTM Zone 21N\",\n        \"5356\": \"MARGEN UTM Zone 19S\",\n        \"5355\": \"MARGEN UTM Zone 20S\",\n        \"5357\": \"MARGEN UTM Zone 21S\",\n        \"2067\": \"Naparima 1955 UTM Zone 20N\",\n        \"27120\": \"Naparima 1972 UTM Zone 20N\",\n        \"9265\": \"POSGAR 2007 UTM Zone 19S\",\n        \"24817\": \"PSAD 1956 UTM Zone 17N\",\n        \"24877\": \"PSAD 1956 UTM Zone 17S\",\n        \"24818\": \"PSAD 1956 UTM Zone 18N\",\n        \"24878\": \"PSAD 1956 UTM Zone 18S\",\n        \"24819\": \"PSAD 1956 UTM Zone 19N\",\n        \"24879\": \"PSAD 1956 UTM Zone 19S\",\n        \"24820\": \"PSAD 1956 UTM Zone 20N\",\n        \"24880\": \"PSAD 1956 UTM Zone 20S\",\n        \"24821\": \"PSAD 1956 UTM Zone 21N\",\n        \"24881\": \"PSAD 1956 UTM Zone 21S\",\n        \"24882\": \"PSAD 1956 UTM Zone 22S\",\n        \"5839\": \"Peru96 UTM Zone 17S\",\n        \"5387\": \"Peru96 UTM Zone 18S\",\n        \"5389\": \"Peru96 UTM Zone 19S\",\n        \"9697\": \"REDGEOMIN UTM zone 12S\",\n        \"9698\": \"REDGEOMIN UTM zone 18S\",\n        \"9699\": \"REDGEOMIN UTM zone 19S\",\n        \"2201\": \"REGVEN UTM Zone 18N\",\n        \"2202\": \"REGVEN UTM Zone 19N\",\n        \"2203\": \"REGVEN UTM Zone 20N\",\n        \"3313\": \"RGFG 1995 UTM Zone 21N\",\n        \"2972\": \"RGFG 1995 UTM Zone 22N\",\n        \"8950\": \"SIRGAS-Chile 2010 UTM zone 18S\",\n        \"8951\": \"SIRGAS-Chile 2010 UTM zone 19S\",\n        \"9149\": \"SIRGAS-Chile 2013 UTM zone 18S\",\n        \"9150\": \"SIRGAS-Chile 2013 UTM zone 19S\",\n        \"9154\": \"SIRGAS-Chile 2016 UTM zone 18S\",\n        \"9155\": \"SIRGAS-Chile 2016 UTM zone 19S\",\n        \"5362\": \"SIRGAS-Chile UTM Zone 18S\",\n        \"5361\": \"SIRGAS-Chile UTM Zone 19S\",\n        \"5382\": \"SIRGAS-ROU98 UTM Zone 21S\",\n        \"5383\": \"SIRGAS-ROU98 UTM Zone 22S\",\n        \"29220\": \"Sapper Hill 1943 UTM Zone 20S\",\n        \"29221\": \"Sapper Hill 1943 UTM Zone 21S\",\n        \"5875\": \"South American 1969 (96) UTM Zone 18S\",\n        \"5876\": \"South American 1969 (96) UTM Zone 19S\",\n        \"5877\": \"South American 1969 (96) UTM Zone 20S\",\n        \"5531\": \"South American 1969 (96) UTM Zone 21S\",\n        \"5858\": \"South American 1969 (96) UTM Zone 22S\",\n        \"5533\": \"South American 1969 (96) UTM Zone 23S\",\n        \"5534\": \"South American 1969 (96) UTM Zone 24S\",\n        \"5535\": \"South American 1969 (96) UTM Zone 25S\",\n        \"31121\": \"Zanderij 1972 UTM Zone 21N\",\n        \"SAD 1969\": {\n          \"5463\": \"South American 1969 UTM Zone 17N\",\n          \"29187\": \"South American 1969 UTM Zone 17S\",\n          \"29168\": \"South American 1969 UTM Zone 18N\",\n          \"29188\": \"South American 1969 UTM Zone 18S\",\n          \"29169\": \"South American 1969 UTM Zone 19N\",\n          \"29189\": \"South American 1969 UTM Zone 19S\",\n          \"29170\": \"South American 1969 UTM Zone 20N\",\n          \"29190\": \"South American 1969 UTM Zone 20S\",\n          \"29171\": \"South American 1969 UTM Zone 21N\",\n          \"29191\": \"South American 1969 UTM Zone 21S\",\n          \"29172\": \"South American 1969 UTM Zone 22N\",\n          \"29192\": \"South American 1969 UTM Zone 22S\",\n          \"29193\": \"South American 1969 UTM Zone 23S\",\n          \"29194\": \"South American 1969 UTM Zone 24S\",\n          \"29195\": \"South American 1969 UTM Zone 25S\"\n        },\n        SIRGAS: {\n          \"31986\": \"SIRGAS UTM Zone 17N\",\n          \"31992\": \"SIRGAS UTM Zone 17S\",\n          \"31987\": \"SIRGAS UTM Zone 18N\",\n          \"31993\": \"SIRGAS UTM Zone 18S\",\n          \"31988\": \"SIRGAS UTM Zone 19N\",\n          \"31994\": \"SIRGAS UTM Zone 19S\",\n          \"31989\": \"SIRGAS UTM Zone 20N\",\n          \"31995\": \"SIRGAS UTM Zone 20S\",\n          \"31990\": \"SIRGAS UTM Zone 21N\",\n          \"31996\": \"SIRGAS UTM Zone 21S\",\n          \"31991\": \"SIRGAS UTM Zone 22N\",\n          \"31997\": \"SIRGAS UTM Zone 22S\",\n          \"31998\": \"SIRGAS UTM Zone 23S\",\n          \"31999\": \"SIRGAS UTM Zone 24S\",\n          \"32000\": \"SIRGAS UTM Zone 25S\"\n        },\n        \"SIRGAS 2000\": {\n          \"31965\": \"SIRGAS 2000 UTM Zone 11N\",\n          \"31966\": \"SIRGAS 2000 UTM Zone 12N\",\n          \"31967\": \"SIRGAS 2000 UTM Zone 13N\",\n          \"31968\": \"SIRGAS 2000 UTM Zone 14N\",\n          \"31969\": \"SIRGAS 2000 UTM Zone 15N\",\n          \"31970\": \"SIRGAS 2000 UTM Zone 16N\",\n          \"31971\": \"SIRGAS 2000 UTM Zone 17N\",\n          \"31977\": \"SIRGAS 2000 UTM Zone 17S\",\n          \"31972\": \"SIRGAS 2000 UTM Zone 18N\",\n          \"31978\": \"SIRGAS 2000 UTM Zone 18S\",\n          \"31973\": \"SIRGAS 2000 UTM Zone 19N\",\n          \"31979\": \"SIRGAS 2000 UTM Zone 19S\",\n          \"31974\": \"SIRGAS 2000 UTM Zone 20N\",\n          \"31980\": \"SIRGAS 2000 UTM Zone 20S\",\n          \"31975\": \"SIRGAS 2000 UTM Zone 21N\",\n          \"31981\": \"SIRGAS 2000 UTM Zone 21S\",\n          \"31976\": \"SIRGAS 2000 UTM Zone 22N\",\n          \"31982\": \"SIRGAS 2000 UTM Zone 22S\",\n          \"6210\": \"SIRGAS 2000 UTM Zone 23N\",\n          \"31983\": \"SIRGAS 2000 UTM Zone 23S\",\n          \"6211\": \"SIRGAS 2000 UTM Zone 24N\",\n          \"31984\": \"SIRGAS 2000 UTM Zone 24S\",\n          \"31985\": \"SIRGAS 2000 UTM Zone 25S\",\n          \"5396\": \"SIRGAS 2000 UTM Zone 26S\"\n        }\n      },\n      \"WGS 1972\": {\n        \"Northern Hemisphere\": {\n          \"32201\": \"WGS 1972 UTM Zone  1N\",\n          \"32202\": \"WGS 1972 UTM Zone  2N\",\n          \"32203\": \"WGS 1972 UTM Zone  3N\",\n          \"32204\": \"WGS 1972 UTM Zone  4N\",\n          \"32205\": \"WGS 1972 UTM Zone  5N\",\n          \"32206\": \"WGS 1972 UTM Zone  6N\",\n          \"32207\": \"WGS 1972 UTM Zone  7N\",\n          \"32208\": \"WGS 1972 UTM Zone  8N\",\n          \"32209\": \"WGS 1972 UTM Zone  9N\",\n          \"32210\": \"WGS 1972 UTM Zone 10N\",\n          \"32211\": \"WGS 1972 UTM Zone 11N\",\n          \"32212\": \"WGS 1972 UTM Zone 12N\",\n          \"32213\": \"WGS 1972 UTM Zone 13N\",\n          \"32214\": \"WGS 1972 UTM Zone 14N\",\n          \"32215\": \"WGS 1972 UTM Zone 15N\",\n          \"32216\": \"WGS 1972 UTM Zone 16N\",\n          \"32217\": \"WGS 1972 UTM Zone 17N\",\n          \"32218\": \"WGS 1972 UTM Zone 18N\",\n          \"32219\": \"WGS 1972 UTM Zone 19N\",\n          \"32220\": \"WGS 1972 UTM Zone 20N\",\n          \"32221\": \"WGS 1972 UTM Zone 21N\",\n          \"32222\": \"WGS 1972 UTM Zone 22N\",\n          \"32223\": \"WGS 1972 UTM Zone 23N\",\n          \"32224\": \"WGS 1972 UTM Zone 24N\",\n          \"32225\": \"WGS 1972 UTM Zone 25N\",\n          \"32226\": \"WGS 1972 UTM Zone 26N\",\n          \"32227\": \"WGS 1972 UTM Zone 27N\",\n          \"32228\": \"WGS 1972 UTM Zone 28N\",\n          \"32229\": \"WGS 1972 UTM Zone 29N\",\n          \"32230\": \"WGS 1972 UTM Zone 30N\",\n          \"32231\": \"WGS 1972 UTM Zone 31N\",\n          \"32232\": \"WGS 1972 UTM Zone 32N\",\n          \"32233\": \"WGS 1972 UTM Zone 33N\",\n          \"32234\": \"WGS 1972 UTM Zone 34N\",\n          \"32235\": \"WGS 1972 UTM Zone 35N\",\n          \"32236\": \"WGS 1972 UTM Zone 36N\",\n          \"32237\": \"WGS 1972 UTM Zone 37N\",\n          \"32238\": \"WGS 1972 UTM Zone 38N\",\n          \"32239\": \"WGS 1972 UTM Zone 39N\",\n          \"32240\": \"WGS 1972 UTM Zone 40N\",\n          \"32241\": \"WGS 1972 UTM Zone 41N\",\n          \"32242\": \"WGS 1972 UTM Zone 42N\",\n          \"32243\": \"WGS 1972 UTM Zone 43N\",\n          \"32244\": \"WGS 1972 UTM Zone 44N\",\n          \"32245\": \"WGS 1972 UTM Zone 45N\",\n          \"32246\": \"WGS 1972 UTM Zone 46N\",\n          \"32247\": \"WGS 1972 UTM Zone 47N\",\n          \"32248\": \"WGS 1972 UTM Zone 48N\",\n          \"32249\": \"WGS 1972 UTM Zone 49N\",\n          \"32250\": \"WGS 1972 UTM Zone 50N\",\n          \"32251\": \"WGS 1972 UTM Zone 51N\",\n          \"32252\": \"WGS 1972 UTM Zone 52N\",\n          \"32253\": \"WGS 1972 UTM Zone 53N\",\n          \"32254\": \"WGS 1972 UTM Zone 54N\",\n          \"32255\": \"WGS 1972 UTM Zone 55N\",\n          \"32256\": \"WGS 1972 UTM Zone 56N\",\n          \"32257\": \"WGS 1972 UTM Zone 57N\",\n          \"32258\": \"WGS 1972 UTM Zone 58N\",\n          \"32259\": \"WGS 1972 UTM Zone 59N\",\n          \"32260\": \"WGS 1972 UTM Zone 60N\"\n        },\n        \"Southern Hemisphere\": {\n          \"32301\": \"WGS 1972 UTM Zone  1S\",\n          \"32302\": \"WGS 1972 UTM Zone  2S\",\n          \"32303\": \"WGS 1972 UTM Zone  3S\",\n          \"32304\": \"WGS 1972 UTM Zone  4S\",\n          \"32305\": \"WGS 1972 UTM Zone  5S\",\n          \"32306\": \"WGS 1972 UTM Zone  6S\",\n          \"32307\": \"WGS 1972 UTM Zone  7S\",\n          \"32308\": \"WGS 1972 UTM Zone  8S\",\n          \"32309\": \"WGS 1972 UTM Zone  9S\",\n          \"32310\": \"WGS 1972 UTM Zone 10S\",\n          \"32311\": \"WGS 1972 UTM Zone 11S\",\n          \"32312\": \"WGS 1972 UTM Zone 12S\",\n          \"32313\": \"WGS 1972 UTM Zone 13S\",\n          \"32314\": \"WGS 1972 UTM Zone 14S\",\n          \"32315\": \"WGS 1972 UTM Zone 15S\",\n          \"32316\": \"WGS 1972 UTM Zone 16S\",\n          \"32317\": \"WGS 1972 UTM Zone 17S\",\n          \"32318\": \"WGS 1972 UTM Zone 18S\",\n          \"32319\": \"WGS 1972 UTM Zone 19S\",\n          \"32320\": \"WGS 1972 UTM Zone 20S\",\n          \"32321\": \"WGS 1972 UTM Zone 21S\",\n          \"32322\": \"WGS 1972 UTM Zone 22S\",\n          \"32323\": \"WGS 1972 UTM Zone 23S\",\n          \"32324\": \"WGS 1972 UTM Zone 24S\",\n          \"32325\": \"WGS 1972 UTM Zone 25S\",\n          \"32326\": \"WGS 1972 UTM Zone 26S\",\n          \"32327\": \"WGS 1972 UTM Zone 27S\",\n          \"32328\": \"WGS 1972 UTM Zone 28S\",\n          \"32329\": \"WGS 1972 UTM Zone 29S\",\n          \"32330\": \"WGS 1972 UTM Zone 30S\",\n          \"32331\": \"WGS 1972 UTM Zone 31S\",\n          \"32332\": \"WGS 1972 UTM Zone 32S\",\n          \"32333\": \"WGS 1972 UTM Zone 33S\",\n          \"32334\": \"WGS 1972 UTM Zone 34S\",\n          \"32335\": \"WGS 1972 UTM Zone 35S\",\n          \"32336\": \"WGS 1972 UTM Zone 36S\",\n          \"32337\": \"WGS 1972 UTM Zone 37S\",\n          \"32338\": \"WGS 1972 UTM Zone 38S\",\n          \"32339\": \"WGS 1972 UTM Zone 39S\",\n          \"32340\": \"WGS 1972 UTM Zone 40S\",\n          \"32341\": \"WGS 1972 UTM Zone 41S\",\n          \"32342\": \"WGS 1972 UTM Zone 42S\",\n          \"32343\": \"WGS 1972 UTM Zone 43S\",\n          \"32344\": \"WGS 1972 UTM Zone 44S\",\n          \"32345\": \"WGS 1972 UTM Zone 45S\",\n          \"32346\": \"WGS 1972 UTM Zone 46S\",\n          \"32347\": \"WGS 1972 UTM Zone 47S\",\n          \"32348\": \"WGS 1972 UTM Zone 48S\",\n          \"32349\": \"WGS 1972 UTM Zone 49S\",\n          \"32350\": \"WGS 1972 UTM Zone 50S\",\n          \"32351\": \"WGS 1972 UTM Zone 51S\",\n          \"32352\": \"WGS 1972 UTM Zone 52S\",\n          \"32353\": \"WGS 1972 UTM Zone 53S\",\n          \"32354\": \"WGS 1972 UTM Zone 54S\",\n          \"32355\": \"WGS 1972 UTM Zone 55S\",\n          \"32356\": \"WGS 1972 UTM Zone 56S\",\n          \"32357\": \"WGS 1972 UTM Zone 57S\",\n          \"32358\": \"WGS 1972 UTM Zone 58S\",\n          \"32359\": \"WGS 1972 UTM Zone 59S\",\n          \"32360\": \"WGS 1972 UTM Zone 60S\"\n        }\n      },\n      \"WGS 1984\": {\n        \"Northern Hemisphere\": {\n          \"102570\": \"WGS 1984 Complex UTM Zone 20N\",\n          \"102571\": \"WGS 1984 Complex UTM Zone 21N\",\n          \"102572\": \"WGS 1984 Complex UTM Zone 22N\",\n          \"102573\": \"WGS 1984 Complex UTM Zone 23N\",\n          \"102574\": \"WGS 1984 Complex UTM Zone 24N\",\n          \"102575\": \"WGS 1984 Complex UTM Zone 25N\",\n          \"102576\": \"WGS 1984 Complex UTM Zone 26N\",\n          \"102577\": \"WGS 1984 Complex UTM Zone 27N\",\n          \"102578\": \"WGS 1984 Complex UTM Zone 28N\",\n          \"102579\": \"WGS 1984 Complex UTM Zone 29N\",\n          \"102580\": \"WGS 1984 Complex UTM Zone 30N\",\n          \"32601\": \"WGS 1984 UTM Zone  1N\",\n          \"32602\": \"WGS 1984 UTM Zone  2N\",\n          \"32603\": \"WGS 1984 UTM Zone  3N\",\n          \"32604\": \"WGS 1984 UTM Zone  4N\",\n          \"32605\": \"WGS 1984 UTM Zone  5N\",\n          \"32606\": \"WGS 1984 UTM Zone  6N\",\n          \"32607\": \"WGS 1984 UTM Zone  7N\",\n          \"32608\": \"WGS 1984 UTM Zone  8N\",\n          \"32609\": \"WGS 1984 UTM Zone  9N\",\n          \"32610\": \"WGS 1984 UTM Zone 10N\",\n          \"32611\": \"WGS 1984 UTM Zone 11N\",\n          \"32612\": \"WGS 1984 UTM Zone 12N\",\n          \"32613\": \"WGS 1984 UTM Zone 13N\",\n          \"32614\": \"WGS 1984 UTM Zone 14N\",\n          \"32615\": \"WGS 1984 UTM Zone 15N\",\n          \"32616\": \"WGS 1984 UTM Zone 16N\",\n          \"32617\": \"WGS 1984 UTM Zone 17N\",\n          \"32618\": \"WGS 1984 UTM Zone 18N\",\n          \"32619\": \"WGS 1984 UTM Zone 19N\",\n          \"32620\": \"WGS 1984 UTM Zone 20N\",\n          \"32621\": \"WGS 1984 UTM Zone 21N\",\n          \"32622\": \"WGS 1984 UTM Zone 22N\",\n          \"32623\": \"WGS 1984 UTM Zone 23N\",\n          \"32624\": \"WGS 1984 UTM Zone 24N\",\n          \"32625\": \"WGS 1984 UTM Zone 25N\",\n          \"32626\": \"WGS 1984 UTM Zone 26N\",\n          \"32627\": \"WGS 1984 UTM Zone 27N\",\n          \"32628\": \"WGS 1984 UTM Zone 28N\",\n          \"32629\": \"WGS 1984 UTM Zone 29N\",\n          \"32630\": \"WGS 1984 UTM Zone 30N\",\n          \"32631\": \"WGS 1984 UTM Zone 31N\",\n          \"32632\": \"WGS 1984 UTM Zone 32N\",\n          \"32633\": \"WGS 1984 UTM Zone 33N\",\n          \"32634\": \"WGS 1984 UTM Zone 34N\",\n          \"32635\": \"WGS 1984 UTM Zone 35N\",\n          \"32636\": \"WGS 1984 UTM Zone 36N\",\n          \"32637\": \"WGS 1984 UTM Zone 37N\",\n          \"32638\": \"WGS 1984 UTM Zone 38N\",\n          \"32639\": \"WGS 1984 UTM Zone 39N\",\n          \"32640\": \"WGS 1984 UTM Zone 40N\",\n          \"32641\": \"WGS 1984 UTM Zone 41N\",\n          \"32642\": \"WGS 1984 UTM Zone 42N\",\n          \"32643\": \"WGS 1984 UTM Zone 43N\",\n          \"32644\": \"WGS 1984 UTM Zone 44N\",\n          \"32645\": \"WGS 1984 UTM Zone 45N\",\n          \"32646\": \"WGS 1984 UTM Zone 46N\",\n          \"32647\": \"WGS 1984 UTM Zone 47N\",\n          \"32648\": \"WGS 1984 UTM Zone 48N\",\n          \"32649\": \"WGS 1984 UTM Zone 49N\",\n          \"32650\": \"WGS 1984 UTM Zone 50N\",\n          \"32651\": \"WGS 1984 UTM Zone 51N\",\n          \"32652\": \"WGS 1984 UTM Zone 52N\",\n          \"32653\": \"WGS 1984 UTM Zone 53N\",\n          \"32654\": \"WGS 1984 UTM Zone 54N\",\n          \"32655\": \"WGS 1984 UTM Zone 55N\",\n          \"32656\": \"WGS 1984 UTM Zone 56N\",\n          \"32657\": \"WGS 1984 UTM Zone 57N\",\n          \"32658\": \"WGS 1984 UTM Zone 58N\",\n          \"32659\": \"WGS 1984 UTM Zone 59N\",\n          \"32660\": \"WGS 1984 UTM Zone 60N\"\n        },\n        \"Southern Hemisphere\": {\n          \"32701\": \"WGS 1984 UTM Zone  1S\",\n          \"32702\": \"WGS 1984 UTM Zone  2S\",\n          \"32703\": \"WGS 1984 UTM Zone  3S\",\n          \"32704\": \"WGS 1984 UTM Zone  4S\",\n          \"32705\": \"WGS 1984 UTM Zone  5S\",\n          \"32706\": \"WGS 1984 UTM Zone  6S\",\n          \"32707\": \"WGS 1984 UTM Zone  7S\",\n          \"32708\": \"WGS 1984 UTM Zone  8S\",\n          \"32709\": \"WGS 1984 UTM Zone  9S\",\n          \"32710\": \"WGS 1984 UTM Zone 10S\",\n          \"32711\": \"WGS 1984 UTM Zone 11S\",\n          \"32712\": \"WGS 1984 UTM Zone 12S\",\n          \"32713\": \"WGS 1984 UTM Zone 13S\",\n          \"32714\": \"WGS 1984 UTM Zone 14S\",\n          \"32715\": \"WGS 1984 UTM Zone 15S\",\n          \"32716\": \"WGS 1984 UTM Zone 16S\",\n          \"32717\": \"WGS 1984 UTM Zone 17S\",\n          \"32718\": \"WGS 1984 UTM Zone 18S\",\n          \"32719\": \"WGS 1984 UTM Zone 19S\",\n          \"32720\": \"WGS 1984 UTM Zone 20S\",\n          \"32721\": \"WGS 1984 UTM Zone 21S\",\n          \"32722\": \"WGS 1984 UTM Zone 22S\",\n          \"32723\": \"WGS 1984 UTM Zone 23S\",\n          \"32724\": \"WGS 1984 UTM Zone 24S\",\n          \"32725\": \"WGS 1984 UTM Zone 25S\",\n          \"32726\": \"WGS 1984 UTM Zone 26S\",\n          \"32727\": \"WGS 1984 UTM Zone 27S\",\n          \"32728\": \"WGS 1984 UTM Zone 28S\",\n          \"32729\": \"WGS 1984 UTM Zone 29S\",\n          \"32730\": \"WGS 1984 UTM Zone 30S\",\n          \"32731\": \"WGS 1984 UTM Zone 31S\",\n          \"32732\": \"WGS 1984 UTM Zone 32S\",\n          \"32733\": \"WGS 1984 UTM Zone 33S\",\n          \"32734\": \"WGS 1984 UTM Zone 34S\",\n          \"32735\": \"WGS 1984 UTM Zone 35S\",\n          \"32736\": \"WGS 1984 UTM Zone 36S\",\n          \"32737\": \"WGS 1984 UTM Zone 37S\",\n          \"32738\": \"WGS 1984 UTM Zone 38S\",\n          \"32739\": \"WGS 1984 UTM Zone 39S\",\n          \"32740\": \"WGS 1984 UTM Zone 40S\",\n          \"32741\": \"WGS 1984 UTM Zone 41S\",\n          \"32742\": \"WGS 1984 UTM Zone 42S\",\n          \"32743\": \"WGS 1984 UTM Zone 43S\",\n          \"32744\": \"WGS 1984 UTM Zone 44S\",\n          \"32745\": \"WGS 1984 UTM Zone 45S\",\n          \"32746\": \"WGS 1984 UTM Zone 46S\",\n          \"32747\": \"WGS 1984 UTM Zone 47S\",\n          \"32748\": \"WGS 1984 UTM Zone 48S\",\n          \"32749\": \"WGS 1984 UTM Zone 49S\",\n          \"32750\": \"WGS 1984 UTM Zone 50S\",\n          \"32751\": \"WGS 1984 UTM Zone 51S\",\n          \"32752\": \"WGS 1984 UTM Zone 52S\",\n          \"32753\": \"WGS 1984 UTM Zone 53S\",\n          \"32754\": \"WGS 1984 UTM Zone 54S\",\n          \"32755\": \"WGS 1984 UTM Zone 55S\",\n          \"32756\": \"WGS 1984 UTM Zone 56S\",\n          \"32757\": \"WGS 1984 UTM Zone 57S\",\n          \"32758\": \"WGS 1984 UTM Zone 58S\",\n          \"32759\": \"WGS 1984 UTM Zone 59S\",\n          \"32760\": \"WGS 1984 UTM Zone 60S\"\n        }\n      }\n    },\n    World: {\n      \"54098\": \"Adams Square II (world)\",\n      \"54043\": \"Aitoff (world)\",\n      \"54032\": \"Azimuthal Equidistant (world)\",\n      \"54017\": \"Behrmann (world)\",\n      \"102299\": \"Berghaus Star AAG\",\n      \"54024\": \"Bonne (world)\",\n      \"54028\": \"Cassini (world)\",\n      \"54080\": \"Compact Miller (world)\",\n      \"54046\": \"Craster Parabolic (world)\",\n      \"54051\": \"Cube (world)\",\n      \"54034\": \"Cylindrical Equal Area (world)\",\n      \"54015\": \"Eckert I (world)\",\n      \"54014\": \"Eckert II (world)\",\n      \"54013\": \"Eckert III (world)\",\n      \"54012\": \"Eckert IV (world)\",\n      \"54011\": \"Eckert V (world)\",\n      \"54010\": \"Eckert VI (world)\",\n      \"8857\": \"Equal Earth (world)\",\n      \"8858\": \"Equal Earth (world) Americas\",\n      \"8859\": \"Equal Earth (world) Asia-Pacific\",\n      \"54027\": \"Equidistant Conic (world)\",\n      \"54002\": \"Equidistant Cylindrical (world)\",\n      \"54045\": \"Flat Polar Quartic (world)\",\n      \"54050\": \"Fuller (world)\",\n      \"102498\": \"GOES-16 East ABI Fixed Grid ITRF2008\",\n      \"54016\": \"Gall Stereographic (world)\",\n      \"54052\": \"Goode Homolosine (Land)\",\n      \"54053\": \"Goode Homolosine (Ocean)\",\n      \"54044\": \"Hammer-Aitoff (world)\",\n      \"54025\": \"Hotine (world)\",\n      \"54023\": \"Loximuthal (world)\",\n      \"54004\": \"Mercator (world)\",\n      \"54003\": \"Miller Cylindrical (world)\",\n      \"54009\": \"Mollweide (world)\",\n      \"3410\": \"NSIDC EASE Grid Global\",\n      \"54077\": \"Natural Earth (world)\",\n      \"54078\": \"Natural Earth II (world)\",\n      \"54079\": \"Patterson (world)\",\n      \"54091\": \"Peirce quincuncial North Pole in a diamond (world)\",\n      \"54090\": \"Peirce quincuncial North Pole in a square (world)\",\n      \"54001\": \"Plate Carree (world)\",\n      \"54021\": \"Polyconic (world)\",\n      \"54022\": \"Quartic Authalic (world)\",\n      \"54030\": \"Robinson (world)\",\n      \"54008\": \"Sinusoidal (world)\",\n      \"54099\": \"Spilhaus Ocean Map in Square\",\n      \"54026\": \"Stereographic (world)\",\n      \"102038\": \"The World from Space\",\n      \"54048\": \"Times (world)\",\n      \"54100\": \"Tobler Cylindrical I (world)\",\n      \"54101\": \"Tobler Cylindrical II (world)\",\n      \"54031\": \"Two Point Equidistant (world)\",\n      \"54029\": \"Van der Grinten I (world)\",\n      \"54049\": \"Vertical Perspective (world)\",\n      \"3975\": \"WGS 1984 EASE Grid Global\",\n      \"6933\": \"WGS 1984 NSIDC EASE-Grid 2.0 Global\",\n      \"3832\": \"WGS 1984 PDC Mercator\",\n      \"32662\": \"WGS 1984 Plate Carree\",\n      \"3857\": \"WGS 1984 Web Mercator (auxiliary sphere)\",\n      \"4087\": \"WGS 1984 World Equidistant Cylindrical (std parallel = 0)\",\n      \"3395\": \"WGS 1984 World Mercator\",\n      \"54074\": \"Wagner IV (world)\",\n      \"54075\": \"Wagner V (world)\",\n      \"54076\": \"Wagner VII (world)\",\n      \"54018\": \"Winkel I (world)\",\n      \"54019\": \"Winkel II (world)\",\n      \"54042\": \"Winkel Tripel (NGS - world)\"\n    },\n    \"World (Sphere-based)\": {\n      \"53043\": \"Aitoff (sphere)\",\n      \"53032\": \"Azimuthal Equidistant (sphere)\",\n      \"53017\": \"Behrmann (sphere)\",\n      \"53024\": \"Bonne (sphere)\",\n      \"53028\": \"Cassini (sphere)\",\n      \"53080\": \"Compact Miller (sphere)\",\n      \"53046\": \"Craster Parabolic (sphere)\",\n      \"53034\": \"Cylindrical Equal Area (sphere)\",\n      \"53015\": \"Eckert I (sphere)\",\n      \"53014\": \"Eckert II (sphere)\",\n      \"53013\": \"Eckert III (sphere)\",\n      \"53012\": \"Eckert IV (sphere)\",\n      \"53011\": \"Eckert V (sphere)\",\n      \"53010\": \"Eckert VI (sphere)\",\n      \"53035\": \"Equal Earth (sphere)\",\n      \"53036\": \"Equal Earth (sphere) Americas\",\n      \"53037\": \"Equal Earth (sphere) Asia-Pacific\",\n      \"53027\": \"Equidistant Conic (sphere)\",\n      \"53002\": \"Equidistant Cylindrical (sphere)\",\n      \"53045\": \"Flat Polar Quartic (sphere)\",\n      \"53016\": \"Gall Stereographic (sphere)\",\n      \"53044\": \"Hammer-Aitoff (sphere)\",\n      \"53025\": \"Hotine (sphere)\",\n      \"53023\": \"Loximuthal (sphere)\",\n      \"53004\": \"Mercator (sphere)\",\n      \"53003\": \"Miller Cylindrical (sphere)\",\n      \"53009\": \"Mollweide (sphere)\",\n      \"53077\": \"Natural Earth (sphere)\",\n      \"53078\": \"Natural Earth II (sphere)\",\n      \"53079\": \"Patterson (sphere)\",\n      \"53001\": \"Plate Carree (sphere)\",\n      \"53021\": \"Polyconic (sphere)\",\n      \"53022\": \"Quartic Authalic (sphere)\",\n      \"53030\": \"Robinson (sphere)\",\n      \"53008\": \"Sinusoidal (sphere)\",\n      \"53026\": \"Stereographic (sphere)\",\n      \"53048\": \"Times (sphere)\",\n      \"53031\": \"Two Point Equidistant (sphere)\",\n      \"53029\": \"Van der Grinten I (sphere)\",\n      \"53049\": \"Vertical Perspective (sphere)\",\n      \"53074\": \"Wagner IV (sphere)\",\n      \"53075\": \"Wagner V (sphere)\",\n      \"53076\": \"Wagner VII (sphere)\",\n      \"53018\": \"Winkel I (sphere)\",\n      \"53019\": \"Winkel II (sphere)\",\n      \"53042\": \"Winkel Tripel (NGS - sphere)\",\n      \"4088\": \"World Equidistant Cylindrical (Sphere) (GRS80 authalic) (std parallel = 0)\"\n    }\n  },\n  \"Vertical Coordinate Systems\": {\n    \"Ellipsoidal-based\": {\n      Africa: { \"115719\": \"Hartebeesthoek94\", \"115744\": \"LGD2006\", \"115754\": \"Moznet\", \"115785\": \"RGRDC 2005\" },\n      Asia: {\n        \"115705\": \"China Geodetic Coordinate System 2000\",\n        \"115710\": \"DGN 1995\",\n        \"115711\": \"DRUKREF 03\",\n        \"115716\": \"GDBD2009\",\n        \"115717\": \"GDM 2000\",\n        \"115845\": \"GGD\",\n        \"115839\": \"Hong Kong Geodetic CS\",\n        \"115721\": \"IG05 Intermediate CRS\",\n        \"115723\": \"IG05(2012) Intermediate CRS\",\n        \"115720\": \"IGD05\",\n        \"115722\": \"IGD05(2012)\",\n        \"115724\": \"IGM 1995\",\n        \"115725\": \"IGRS\",\n        \"115740\": \"JGD 2000\",\n        \"115741\": \"JGD 2011\",\n        \"115742\": \"Korea 2000\",\n        \"115743\": \"Lao 1997\",\n        \"115747\": \"MACAO 2008\",\n        \"115753\": \"MONREF 1997\",\n        \"115843\": \"MTRF-2000\",\n        \"115764\": \"Nepal Nagarkot\",\n        \"115846\": \"ONGD14\",\n        \"115847\": \"ONGD17\",\n        \"115767\": \"PNG94\",\n        \"115771\": \"PRS 1992\",\n        \"115793\": \"SLD99\",\n        \"115800\": \"TWD 1997\",\n        \"115802\": \"Yemen NGN 1996\"\n      },\n      \"Australia and New Zealand\": { \"115715\": \"GDA 1994\", \"115805\": \"GDA2020\", \"115765\": \"NZGD 2000\" },\n      \"Central America\": {\n        \"115849\": \"CR-SIRGAS\",\n        \"115708\": \"CR05\",\n        \"115749\": \"MARCARIO SOLIS\",\n        \"115851\": \"SIRGAS Continuously Operating Network DGF00P01\",\n        \"115852\": \"SIRGAS Continuously Operating Network DGF01P01\",\n        \"115853\": \"SIRGAS Continuously Operating Network DGF01P02\",\n        \"115854\": \"SIRGAS Continuously Operating Network DGF02P01\",\n        \"115855\": \"SIRGAS Continuously Operating Network DGF04P01\",\n        \"115856\": \"SIRGAS Continuously Operating Network DGF05P01\",\n        \"115857\": \"SIRGAS Continuously Operating Network DGF06P01\",\n        \"115858\": \"SIRGAS Continuously Operating Network DGF07P01\",\n        \"115859\": \"SIRGAS Continuously Operating Network DGF08P01\",\n        \"115860\": \"SIRGAS Continuously Operating Network SIR09P01\",\n        \"115861\": \"SIRGAS Continuously Operating Network SIR10P01\",\n        \"115862\": \"SIRGAS Continuously Operating Network SIR11P01\",\n        \"115863\": \"SIRGAS Continuously Operating Network SIR13P01\",\n        \"115864\": \"SIRGAS Continuously Operating Network SIR14P01\",\n        \"115865\": \"SIRGAS Continuously Operating Network SIR15P01\",\n        \"115866\": \"SIRGAS Continuously Operating Network SIR17P01\"\n      },\n      Europe: {\n        \"115806\": \"BGS2005\",\n        \"115709\": \"DB-REF\",\n        \"115873\": \"ETRF 2005\",\n        \"115874\": \"ETRF 2014\",\n        \"115829\": \"ETRF2000\",\n        \"115822\": \"ETRF90\",\n        \"115823\": \"ETRF91\",\n        \"115824\": \"ETRF92\",\n        \"115825\": \"ETRF93\",\n        \"115826\": \"ETRF94\",\n        \"115827\": \"ETRF96\",\n        \"115828\": \"ETRF97\",\n        \"115701\": \"ETRS 1989\",\n        \"115713\": \"EUREF-FIN\",\n        \"115712\": \"Estonia 1997\",\n        \"115714\": \"FEH2010\",\n        \"115813\": \"GSK-2011\",\n        \"115726\": \"IRENET95\",\n        \"115727\": \"ISN 1993\",\n        \"115728\": \"ISN 2004\",\n        \"115838\": \"ISN2016\",\n        \"115872\": \"KOSOVAREF01\",\n        \"115745\": \"LKS 1992\",\n        \"115746\": \"LKS 1994\",\n        \"115752\": \"MOLDREF99\",\n        \"115773\": \"PZ 1990\",\n        \"115815\": \"PZ-90.02\",\n        \"115814\": \"PZ-90.11\",\n        \"115774\": \"RDN2008\",\n        \"115778\": \"RGF 1993\",\n        \"115848\": \"S-JTSK [JTSK03]\",\n        \"115796\": \"S-JTSK-05\",\n        \"115797\": \"S-JTSK-05 (Ferro)\",\n        \"115842\": \"SRB ETRS89\",\n        \"115795\": \"SREF98\",\n        \"115798\": \"SWEREF99\",\n        \"115794\": \"Slovenia 1996\",\n        \"115706\": \"Swiss TRF 1995\",\n        \"115804\": \"TUREF\",\n        \"115801\": \"Ukraine 2000\"\n      },\n      \"North America\": {\n        \"115844\": \"California SRS Epoch 2017.50 (NAD83)\",\n        \"115718\": \"Greenland 1996\",\n        \"115751\": \"Mexico ITRF2008\",\n        \"115702\": \"NAD 1983\",\n        \"115755\": \"NAD 1983 (2011)\",\n        \"115757\": \"NAD 1983 (CSRS)\",\n        \"115840\": \"NAD 1983 (FBN)\",\n        \"115841\": \"NAD 1983 (HARN Corrected)\",\n        \"115761\": \"NAD 1983 (NSRS2007)\",\n        \"115756\": \"NAD 1983 CORS96\",\n        \"115758\": \"NAD 1983 HARN\",\n        \"115831\": \"NAD83(CSRS)v2\",\n        \"115832\": \"NAD83(CSRS)v3\",\n        \"115833\": \"NAD83(CSRS)v4\",\n        \"115834\": \"NAD83(CSRS)v5\",\n        \"115835\": \"NAD83(CSRS)v6\",\n        \"115836\": \"NAD83(CSRS)v7\",\n        \"115830\": \"NAD83(CSRS96)\"\n      },\n      Oceans: {\n        \"115707\": \"CIGD11\",\n        \"115704\": \"Cadastre 1997\",\n        \"115739\": \"JAD 2001\",\n        \"115760\": \"NAD 1983 (MARP00)\",\n        \"115762\": \"NAD 1983 (PA11)\",\n        \"115763\": \"NAD 1983 (PACP00)\",\n        \"115759\": \"NAD_1983 (MA11)\",\n        \"115772\": \"PTRA08\",\n        \"115775\": \"REGCAN95\",\n        \"115777\": \"RGAF09\",\n        \"115779\": \"RGFG 1995\",\n        \"115780\": \"RGM 2004\",\n        \"115781\": \"RGNC 1991\",\n        \"115782\": \"RGNC 1991-93\",\n        \"115783\": \"RGPF\",\n        \"115784\": \"RGR 1992\",\n        \"115786\": \"RGSPM 2006\",\n        \"115850\": \"RGWF96\",\n        \"115787\": \"RRAF 1991\",\n        \"115811\": \"SHGD2015\",\n        \"115812\": \"St. Helena Tritan\",\n        \"115799\": \"TGD2005\"\n      },\n      Polar: { \"115703\": \"Australian Antarctic 1998\", \"115788\": \"RSRGD2000\" },\n      \"South America\": {\n        \"115748\": \"MAGNA\",\n        \"115750\": \"MARGEN\",\n        \"115768\": \"POSGAR\",\n        \"115769\": \"POSGAR 1994\",\n        \"115770\": \"POSGAR 1998\",\n        \"115766\": \"Peru96\",\n        \"115776\": \"REGVEN\",\n        \"115789\": \"SIRGAS 2000\",\n        \"115851\": \"SIRGAS Continuously Operating Network DGF00P01\",\n        \"115852\": \"SIRGAS Continuously Operating Network DGF01P01\",\n        \"115853\": \"SIRGAS Continuously Operating Network DGF01P02\",\n        \"115854\": \"SIRGAS Continuously Operating Network DGF02P01\",\n        \"115855\": \"SIRGAS Continuously Operating Network DGF04P01\",\n        \"115856\": \"SIRGAS Continuously Operating Network DGF05P01\",\n        \"115857\": \"SIRGAS Continuously Operating Network DGF06P01\",\n        \"115858\": \"SIRGAS Continuously Operating Network DGF07P01\",\n        \"115859\": \"SIRGAS Continuously Operating Network DGF08P01\",\n        \"115860\": \"SIRGAS Continuously Operating Network SIR09P01\",\n        \"115861\": \"SIRGAS Continuously Operating Network SIR10P01\",\n        \"115862\": \"SIRGAS Continuously Operating Network SIR11P01\",\n        \"115863\": \"SIRGAS Continuously Operating Network SIR13P01\",\n        \"115864\": \"SIRGAS Continuously Operating Network SIR14P01\",\n        \"115865\": \"SIRGAS Continuously Operating Network SIR15P01\",\n        \"115866\": \"SIRGAS Continuously Operating Network SIR17P01\",\n        \"115791\": \"SIRGAS ES2007.8\",\n        \"115790\": \"SIRGAS-Chile\",\n        \"115792\": \"SIRGAS-ROU98\"\n      },\n      World: {\n        \"115868\": \"IGS00\",\n        \"115870\": \"IGS05\",\n        \"115837\": \"IGS14\",\n        \"115867\": \"IGS97\",\n        \"115869\": \"IGb00\",\n        \"115871\": \"IGb08\",\n        \"115729\": \"ITRF 1988\",\n        \"115730\": \"ITRF 1989\",\n        \"115731\": \"ITRF 1990\",\n        \"115732\": \"ITRF 1991\",\n        \"115733\": \"ITRF 1992\",\n        \"115734\": \"ITRF 1993\",\n        \"115735\": \"ITRF 1996\",\n        \"115736\": \"ITRF 1997\",\n        \"115737\": \"ITRF 2000\",\n        \"115738\": \"ITRF 2005\",\n        \"115803\": \"ITRF 2008\",\n        \"115810\": \"ITRF 2014\",\n        \"115700\": \"WGS 1984\",\n        \"115819\": \"WGS 1984 (G1150)\",\n        \"115818\": \"WGS 1984 (G1674)\",\n        \"115817\": \"WGS 1984 (G1762)\",\n        \"115821\": \"WGS 1984 (G730)\",\n        \"115820\": \"WGS 1984 (G873)\",\n        \"115816\": \"WGS 1984 (Transit)\"\n      }\n    },\n    \"Gravity-related\": {\n      Africa: { \"9402\": \"Ceuta 2 height\", \"5796\": \"Lagos 1955\", \"5722\": \"Maputo\", \"9279\": \"SA LLD height\" },\n      Asia: {\n        \"5734\": \"AIOC95 (Depth)\",\n        \"5797\": \"AIOC95 (Height)\",\n        \"5752\": \"Bandar Abbas\",\n        \"5706\": \"Caspian\",\n        \"5611\": \"Caspian height\",\n        \"5725\": \"Fahud Height Datum 1993\",\n        \"5751\": \"Fao\",\n        \"3886\": \"Fao 1979\",\n        \"7976\": \"HKPD depth\",\n        \"5726\": \"Ha Tien 1960\",\n        \"5727\": \"Hon Dau 1992\",\n        \"5739\": \"Hong Kong Chart Datum\",\n        \"5738\": \"Hong Kong Principal Datum\",\n        \"9471\": \"INAGeoid2020 height\",\n        \"5193\": \"Incheon (Height)\",\n        \"6693\": \"JSLD72 height\",\n        \"6694\": \"Japanese Geodetic Datum 2000 (vertical) height\",\n        \"6695\": \"Japanese Geodetic Datum 2011 (vertical) height\",\n        \"5723\": \"Japanese Standard Levelling Datum 1969\",\n        \"5790\": \"KOC Construction Datum\",\n        \"7979\": \"KOC WD height\",\n        \"5789\": \"KOC Well Datum\",\n        \"5614\": \"KOC Well Datum (depth in IFt)\",\n        \"9335\": \"KSA-VRF14 height\",\n        \"5788\": \"Kuwait PWD\",\n        \"8841\": \"MVGC height\",\n        \"8434\": \"Macao height\",\n        \"9681\": \"NVD 1992 height\",\n        \"5724\": \"PDO Height Datum 1993\",\n        \"5843\": \"Ras Ghumays (Height)\",\n        \"6916\": \"SHD height\",\n        \"5237\": \"SLVD (Height)\",\n        \"8904\": \"TWVD 2001 height\",\n        \"5736\": \"Yellow Sea 1956\",\n        \"5737\": \"Yellow Sea 1985\"\n      },\n      \"Australia and New Zealand\": {\n        \"5711\": \"AHD\",\n        \"5712\": \"AHD (Tasmania)\",\n        \"9458\": \"AVWS height\",\n        \"5759\": \"Auckland\",\n        \"5760\": \"Bluff\",\n        \"5771\": \"Chatham Island\",\n        \"5761\": \"Dunedin\",\n        \"4458\": \"Dunedin Bluff 1960 height\",\n        \"5762\": \"Gisborne\",\n        \"5763\": \"Lyttelton\",\n        \"5764\": \"Moturiki\",\n        \"4440\": \"NZVD2009 height\",\n        \"7839\": \"NZVD2016 height\",\n        \"5765\": \"Napier\",\n        \"5766\": \"Nelson\",\n        \"5767\": \"One Tree Point\",\n        \"5772\": \"Stewart Island\",\n        \"5769\": \"Taranaki\",\n        \"5768\": \"Tararu\",\n        \"5770\": \"Wellington\"\n      },\n      \"Central America\": { \"8911\": \"DACR52 height\" },\n      Europe: {\n        \"5782\": \"Alicante\",\n        \"5775\": \"Antalya\",\n        \"9669\": \"BGS2005 height\",\n        \"5705\": \"Baltic\",\n        \"8358\": \"Baltic 1957 depth\",\n        \"8357\": \"Baltic 1957 height\",\n        \"5786\": \"Baltic 1982\",\n        \"9650\": \"Baltic 1986 height\",\n        \"5612\": \"Baltic depth\",\n        \"5735\": \"Black Sea\",\n        \"5336\": \"Black Sea (Depth)\",\n        \"9672\": \"CD Norway depth\",\n        \"9722\": \"Cagliari 1956 height\",\n        \"9721\": \"Catania 1965 height\",\n        \"5781\": \"Constanta\",\n        \"7699\": \"DHHN12 height\",\n        \"7837\": \"DHHN2016 height\",\n        \"5784\": \"DHHN85\",\n        \"5783\": \"DHHN92\",\n        \"5799\": \"DVR90\",\n        \"5733\": \"Dansk Normal Nul\",\n        \"5777\": \"Durres\",\n        \"9663\": \"EH2000 height\",\n        \"5787\": \"EOMA 1980\",\n        \"5621\": \"EVRF 2007\",\n        \"9389\": \"EVRF 2019 height\",\n        \"9390\": \"EVRF 2019 mean-tide height\",\n        \"9274\": \"EVRF2000 Austria height\",\n        \"9651\": \"EVRF2007-PL height\",\n        \"5730\": \"EVRS 2000\",\n        \"5597\": \"FCSVR10 (Height)\",\n        \"5317\": \"FVR09 (Height)\",\n        \"7446\": \"Famagusta 1960 height\",\n        \"5778\": \"GHA\",\n        \"5214\": \"Genoa (Height)\",\n        \"5610\": \"HVRS71\",\n        \"8089\": \"ISN2004 height\",\n        \"9394\": \"Ibiza height\",\n        \"9666\": \"LAS07 height\",\n        \"9287\": \"LAT NL depth\",\n        \"5729\": \"LHN95\",\n        \"5728\": \"LN 1902\",\n        \"7700\": \"Latvia 2000 height\",\n        \"9288\": \"MSL NL depth\",\n        \"9392\": \"Mallorca height\",\n        \"9393\": \"Menorca height\",\n        \"3900\": \"N2000 height\",\n        \"8675\": \"N43 height\",\n        \"5717\": \"N60\",\n        \"5709\": \"NAP\",\n        \"5774\": \"NG-L\",\n        \"5791\": \"NGC 1948\",\n        \"5720\": \"NGF IGN69\",\n        \"5721\": \"NGF IGN78\",\n        \"5719\": \"NGF Lallemand\",\n        \"5941\": \"NN2000 height\",\n        \"5776\": \"NN54\",\n        \"5710\": \"Oostende\",\n        \"5716\": \"Piraeus\",\n        \"105603\": \"REDNAP height\",\n        \"5615\": \"RH1900\",\n        \"5613\": \"RH2000\",\n        \"5718\": \"RH70\",\n        \"5785\": \"SNN76\",\n        \"8691\": \"SRB_VRS12 height\",\n        \"5779\": \"SVS2000\",\n        \"8690\": \"SVS2010\",\n        \"5195\": \"Trieste (Height)\",\n        \"8881\": \"Vienna height\"\n      },\n      \"Ireland and United Kingdom\": {\n        \"5732\": \"Belfast\",\n        \"9451\": \"British Isles height (ensemble)\",\n        \"5750\": \"Douglas\",\n        \"5741\": \"Fair Isle\",\n        \"5748\": \"Flannan Isles\",\n        \"5743\": \"Foula\",\n        \"9303\": \"HS2-VRF height\",\n        \"5742\": \"Lerwick\",\n        \"5731\": \"Malin Head\",\n        \"5701\": \"Newlyn\",\n        \"5740\": \"Newlyn (Orkney Isles)\",\n        \"5745\": \"North Rona\",\n        \"7707\": \"ODN (Offshore) height\",\n        \"5754\": \"Poolbeg\",\n        \"7962\": \"Poolbeg height (m)\",\n        \"5747\": \"St Kilda\",\n        \"5749\": \"St Marys\",\n        \"5746\": \"Stornoway\",\n        \"5744\": \"Sule Skerry\"\n      },\n      \"North America\": {\n        \"5713\": \"CGVD 1928\",\n        \"9245\": \"CGVD2013 (CGG2013a) height\",\n        \"6647\": \"CGVD2013 height\",\n        \"8266\": \"GVR2000 height\",\n        \"8267\": \"GVR2016 height\",\n        \"5608\": \"IGLD 1955\",\n        \"5609\": \"IGLD 1985\",\n        \"8053\": \"MSL depth (ftUS)\",\n        \"8052\": \"MSL height (ftUS)\",\n        \"6358\": \"NAVD88 depth (ftUS)\",\n        \"6357\": \"NAVD88 depth (m)\",\n        \"8228\": \"NAVD88 height (ftIntl)\",\n        \"6360\": \"NAVD88 height (ftUS)\",\n        \"5703\": \"NAVD88 height (m)\",\n        \"6359\": \"NGVD29 depth (ftUS)\",\n        \"5702\": \"NGVD29 height (ftUS)\",\n        \"7968\": \"NGVD29 height (m)\"\n      },\n      Oceans: {\n        \"Atlantic Ocean\": {\n          \"5792\": \"Danger 1950\",\n          \"9401\": \"El Hierro height\",\n          \"9396\": \"Fuerteventura height\",\n          \"9397\": \"Gran Canaria height\",\n          \"7888\": \"Jamestown 1971 height\",\n          \"9399\": \"La Gomera height\",\n          \"9400\": \"La Palma height\",\n          \"9395\": \"Lanzarote height\",\n          \"7890\": \"SHVD2015 height\",\n          \"7889\": \"St. Helena Tritan 2011 height\",\n          \"9398\": \"Tenerife height\"\n        },\n        \"Caribbean Sea\": {\n          \"6132\": \"CBVD61 height\",\n          \"6130\": \"GCVD54 height\",\n          \"5795\": \"Guadeloupe 1951\",\n          \"5756\": \"IGN 1987\",\n          \"5757\": \"IGN 1988\",\n          \"9130\": \"IGN 2008 LD height\",\n          \"6131\": \"LCVD61 height\",\n          \"5794\": \"Martinique 1950\",\n          \"6641\": \"PRVD02 height\",\n          \"6642\": \"VIVD09 height\"\n        },\n        \"Indian Ocean\": { \"5758\": \"IGN 1989\", \"5793\": \"Mayotte 1950\" },\n        \"Pacific Ocean\": {\n          \"6643\": \"ASVD02 height\",\n          \"5607\": \"Bora Bora SAU 2001\",\n          \"6644\": \"GUVD04 height\",\n          \"6639\": \"Guam 1963 height\",\n          \"5605\": \"Huahine SAU 2001\",\n          \"5601\": \"IGN 1966\",\n          \"5616\": \"IGN 1988 Les Saintes\",\n          \"5617\": \"IGN 1988 Marie-Galante\",\n          \"5619\": \"IGN 1988 St Barthelemy\",\n          \"5620\": \"IGN 1988 St Martin\",\n          \"5618\": \"IGN 1992 La Desirade\",\n          \"7652\": \"Kiunga height\",\n          \"7651\": \"Kumul 34 height\",\n          \"5604\": \"Maupiti SAU 2001\",\n          \"5602\": \"Moorea SAU 1981\",\n          \"5753\": \"NGNC\",\n          \"9351\": \"NGNC08 height\",\n          \"5600\": \"NGPF\",\n          \"6640\": \"NMVD03 height\",\n          \"7447\": \"PNG08 height\",\n          \"7841\": \"POM08 height\",\n          \"7832\": \"POM96 height\",\n          \"9675\": \"Pago Pago 2020 height\",\n          \"5603\": \"Raiatea SAU 2001\",\n          \"5606\": \"Tahaa SAU 2001\",\n          \"6638\": \"Tutuila 1962 height\"\n        }\n      },\n      Portugal: {\n        \"6184\": \"Cais da Figueirinha - Angra do Heroismo height\",\n        \"6182\": \"Cais da Madalena height\",\n        \"6178\": \"Cais da Pontinha - Funchal height\",\n        \"6179\": \"Cais da Vila - Porto Santo height\",\n        \"6186\": \"Cais da Vila do Porto height\",\n        \"6180\": \"Cais das Velas height\",\n        \"5780\": \"Cascais\",\n        \"6181\": \"Horta height\",\n        \"6187\": \"Ponta Delgada height\",\n        \"6183\": \"Santa Cruz da Graciosa height\",\n        \"6185\": \"Santa Cruz das Flores height\"\n      },\n      \"South America\": { \"5755\": \"NGG 1977\", \"9255\": \"SRVN16 height\" },\n      World: {\n        \"3855\": \"EGM2008 Geoid\",\n        \"5798\": \"EGM84 Geoid\",\n        \"5773\": \"EGM96 Geoid\",\n        \"5872\": \"HAT (Height)\",\n        \"5871\": \"HHWLT (Height)\",\n        \"5874\": \"HW (Height)\",\n        \"5863\": \"ISLW (Depth)\",\n        \"5831\": \"Instantaneous Water Level (Depth)\",\n        \"5829\": \"Instantaneous Water Level (Height)\",\n        \"5861\": \"LAT (Depth)\",\n        \"5862\": \"LLWLT (Depth)\",\n        \"5873\": \"LW (Depth)\",\n        \"5869\": \"MHHW (Height)\",\n        \"5868\": \"MHW (Height)\",\n        \"5870\": \"MHWS (Height)\",\n        \"5866\": \"MLLW (Depth)\",\n        \"5864\": \"MLLWS (Depth)\",\n        \"5867\": \"MLW (Depth)\",\n        \"5865\": \"MLWS (Depth)\",\n        \"5715\": \"MSL (Depth)\",\n        \"5714\": \"MSL (Height)\",\n        \"8051\": \"MSL depth (ft)\",\n        \"8050\": \"MSL height (ft)\",\n        \"105700\": \"WGS 1984 Geoid\"\n      }\n    },\n    \"Unknown Height Systems\": {\n      \"115808\": \"Unknown height system (US survey feet)\",\n      \"115809\": \"Unknown height system (international feet)\",\n      \"115807\": \"Unknown height system (meters)\"\n    }\n  }\n};\n","import { flattenObject } from \"../common\";\n\nimport { NestedObject, srCategories } from \"./spatial-references\";\n\nexport type { NestedObject } from \"./spatial-references\";\nexport { srCategories };\n\nlet wkidMap: Map<number, string> | undefined = undefined;\n\n/**\n * Returns a flat map of all the spatial references, using WKID as the key\n * @returns {Map<number, string>} the map of spatial references\n */\nexport function getWkidMap(): Map<number, string> {\n  if (wkidMap === undefined) {\n    wkidMap = new Map();\n\n    const flatWkids = flattenObject(srCategories);\n\n    Object.keys(flatWkids).forEach((key) => {\n      wkidMap?.set(Number(key), flatWkids[key]);\n    });\n  }\n  return wkidMap;\n}\n\n/**\n * Returns matching spatial reference description for given WKID\n * @param {number} wkid the WKID of the spatial reference\n * @returns {string} the description of the spatial reference (if found)\n */\nexport function getSpatialReferenceDescription(wkid: number): string | undefined {\n  if (wkidMap === undefined) wkidMap = getWkidMap();\n\n  return wkidMap.get(wkid);\n}\n\n/**\n * Returns list of matching spatial references for a given search string\n * @param {string} searchString the search stringFields\n * @returns {NestedObject} the list of matching spatial references\n */\nexport function filterSpatialReferences(searchString: string): NestedObject {\n  if (wkidMap === undefined) wkidMap = getWkidMap();\n  // This regex contains all special characters and will let us replace them with an escapedd value in the regex\n  const specialCharacters = /[\\!\\#\\$\\%\\^\\&\\*\\)\\(\\+\\=\\.\\<\\>\\{\\}\\[\\]\\:\\;\\'\\\"\\|\\~\\`\\_\\-]/g;\n\n  const regexString = searchString.replace(specialCharacters, \"\\\\$&\");\n\n  // use u for unicode to include special characters\n  // use i to ignore case\n  // use g for a global search\n  const regexPattern = new RegExp(regexString, \"igu\");\n\n  const matches: NestedObject = {};\n\n  wkidMap.forEach((value, key) => {\n    regexPattern.lastIndex = 0;\n    if (regexPattern.test(value) || regexPattern.test(key.toString())) {\n      matches[String(key)] = value;\n    }\n  });\n\n  return matches;\n}\n","import PortalItem from \"@arcgis/core/portal/PortalItem\";\nimport request from \"@arcgis/core/request\";\n\nimport memoize from \"fast-memoize\";\n\nimport { PortalHelpMapJSON } from \"../interfaces\";\n\nexport const getPortalItemMemo = memoize(\n  (itemId: string, portal?: __esri.Portal): __esri.PortalItem => {\n    return new PortalItem({ id: itemId, portal });\n  },\n  {\n    serializer: (args) => `${args[0] as string}-${(args[1] as __esri.Portal | undefined)?.url}`\n  }\n);\n\n/**\n * Gets the help base url from a portal object\n * @param {__esri.Portal} portal the portal object\n * @returns {string} the help base url\n */\nexport function getHelpBaseUrl(portal?: __esri.Portal): string {\n  return portal?.sourceJSON.helpBase ?? \"\";\n}\n\n/**\n * Updated a portal item based on itemId with the passed in properties\n * @param {string} itemId - itemId to the portal item to be updated\n * @param {Partial<PortalItem>} newProperties - Map of property to update to its new value\n * @returns {Promise<PortalItem>} The updated portal item\n */\nexport async function updateItemProperties(itemId: string, newProperties: Partial<PortalItem>): Promise<PortalItem> {\n  const resultItem = new PortalItem({\n    id: itemId\n  });\n  const loadedPortalItem: PortalItem = await resultItem.load();\n  let updatedPortalItem = Object.assign(loadedPortalItem, newProperties);\n  updatedPortalItem = await updatedPortalItem.update();\n  return updatedPortalItem;\n}\n\n/**\n * Check whether ArcGIS Enterprise deployment is on Kubernetes\n * @param {__esri.Portal} portal the portal object\n * @returns {boolean} true if ArcGIS Enterprise deployment is on Kubernetes\n */\nexport function isArcGISEnterpriseOnKubernetes(portal: __esri.Portal): boolean {\n  return portal?.sourceJSON?.portalDeploymentType === \"ArcGISEnterpriseOnKubernetes\";\n}\n\n/**\n * fetches the portal helpMap\n * @param {__esri.Portal} portal the portal instance for which the helpMap to be fetched\n * @returns {Promise<LocaleItem | undefined>} returns the help map when successfully fetched , otherwise undefind\n */\nexport const getPortalHelpMap = memoize(\n  async (portal: __esri.Portal): Promise<PortalHelpMapJSON | undefined> => {\n    const { restUrl } = portal;\n    const url = `${restUrl}/portals/helpmap`;\n    let helpMap: PortalHelpMapJSON | undefined;\n    try {\n      const fetchPortalHelpMap = await request(url, {\n        query: { f: \"json\" },\n        responseType: \"json\",\n        method: \"auto\"\n      });\n      helpMap = (await fetchPortalHelpMap.data?.helpMap) ?? undefined;\n    } catch (e) {\n      helpMap = undefined;\n    }\n    return helpMap;\n  },\n  {\n    serializer: (args) => `${args[0] as string}-${(args[1] as __esri.Portal | undefined)?.url}`\n  }\n);\n","export const UIDefaults = {\n  DebounceTimer: 400,\n  HelpDebounceTimer: 1500,\n  PopoverTimer: 60,\n  Scale: \"s\"\n} as const;\n","import { AnalysisToolUIParam } from \"./analysis-tool-ui-param\";\nimport { AnalysisToolUIRule, AnalysisValidationRule } from \"./analysis-tool-ui-rule\";\nimport { AnalysisToolUITravelModeInfo } from \"./analysis-tool-ui-travel-mode-info\";\nimport { AnalysisToolEnvironmentSettings } from \"./analysis-tool-ui-environment-settings\";\n\n/**\n * Version of the current specification. Matches the package.json one.\n */\nexport const AnalysisToolUICurrentVersion = \"0.1.0\" as const;\n\nexport interface LocaleItem {\n  [key: string]: string | LocaleItem;\n}\n\n/**\n * Gives a JSON representation of UI for an analysis tool.\n */\nexport interface AnalysisToolUI {\n  /**\n   * Name of the tool, e.g. create-drive-time-areas\n   */\n  toolName: string;\n  /**\n   * Version of the current UI schema specification.\n   */\n  version: typeof AnalysisToolUICurrentVersion;\n  /**\n   * Possible travel modes for network analysis.\n   */\n  travelModeInfo?: AnalysisToolUITravelModeInfo;\n  /**\n   * Filter travel mode types based on time , distance, other mode of travel, when defined only allows that mode.\n   * when undefined ( default case) will allow all travel modes\n   */\n  filterTravelModeType?: \"time\" | \"distance\" | \"other\";\n  /**\n   * The travel mode choice list is dynamically generated\n   * when true, includes the straight line option in that choice list\n   */\n  includeStraightLine?: boolean;\n  /**\n   * List of rules that are checked at job submit time\n   */\n  validationRules?: AnalysisValidationRule[];\n  /**\n   * List of rules that needs to be applied on the param UI.\n   */\n  rules?: AnalysisToolUIRule[];\n  /**\n   * Translated UI Strings used by the tool.\n   */\n  t9n?: LocaleItem;\n  /**\n   * Represents the UI for each of the parameters.\n   */\n  UIparameters: AnalysisToolUIParam[];\n  /**\n   * Object map to show/hide different environment settings.\n   */\n  environmentSettings?: AnalysisToolEnvironmentSettings;\n}\n","import PortalUser from \"@arcgis/core/portal/PortalUser\";\n\n/**\n * Helper to check if the logged in user has NA license\n * @param {PortalUser} user the logged in user\n * @returns {boolean} true/false\n */\nexport function hasNAPrivilege(user?: PortalUser): boolean {\n  const privilegesArray = user?.sourceJSON.privileges as string[] | undefined;\n  return privilegesArray !== undefined && privilegesArray.includes(\"premium:user:networkanalysis\");\n}\n\n/**\n * Checks if the logged in user has Geoenrichment privileges\n * @param {PortalUser} user the logged in user\n * @returns {boolean} true/false\n */\nexport function hasGeoEnrichmentPrivilege(user?: PortalUser): boolean {\n  const privilegesArray = user?.sourceJSON.privileges as string[] | undefined;\n  return privilegesArray !== undefined && privilegesArray.includes(\"premium:user:geoenrichment\");\n}\n\n/**\n * Checks if the logged in user has the runWebTools privilege\n * @param {PortalUser} user the logged in user\n * @returns {boolean} true/false\n */\nexport function hasRunWebToolPrivilege(user?: PortalUser): boolean {\n  const privilegesArray = user?.sourceJSON.privileges as string[] | undefined;\n  return privilegesArray !== undefined && privilegesArray.includes(\"portal:user:runWebTool\");\n}\n","import { UpdateSavedResourceProps } from \"./interfaces\";\nimport { addOrUpdateItemResource, readItemResource } from \"./item-resource\";\nimport {\n  isSessionStorageAvailable,\n  readFromSessionStorage,\n  removeFromSessionStorage,\n  writeToSessionStorage\n} from \"./session-storage\";\n\n/**\n * Dynamically loads a resource by doing: webMap ?? sessionStorage ?? undefined\n * @param {string} path the path to the resource, example: `\"analysis/history/file1.json\"`\n * @param {__esri.PortalItem | undefined} portalItem the portalItem to use, used for reading from the item resources\n * @returns {Promise<T | undefined>} returns the data stored in the webMap or sessionStorage, or undefined if neither exist\n */\nexport async function loadSavedResource<T>(path: string, portalItem?: __esri.PortalItem): Promise<T | undefined> {\n  let itemData;\n  // First check if there is any data stored in the item resources.\n  const loadItemResource = portalItem !== undefined && portalItem !== null;\n  try {\n    if (loadItemResource) {\n      itemData = await readItemResource<T>(path, portalItem);\n    }\n    // Second if there is no data in the item resources, check session storage.\n    if (itemData === undefined && isSessionStorageAvailable()) {\n      const sessionStorageData = readFromSessionStorage(path);\n      if (sessionStorageData !== null) {\n        itemData = JSON.parse(sessionStorageData);\n      }\n    }\n  } catch (e) {\n    // Bubbles up any error that occured from downstream methods\n    throw e;\n  }\n  return itemData;\n}\n\n/**\n * Updates an entry in an item resource.\n * @param {UpdateSavedResourceProps} props the properties to use: storageKey: string, portalItem: __esri.PortalItem, resource: T, version: string.\n * @returns {Promise<string>} the resource name that was written.\n */\nasync function updateItemResource<T>(props: UpdateSavedResourceProps<T>): Promise<string> {\n  const { portalItem, path, resource } = props;\n  let writtenName = \"\";\n\n  if (portalItem !== undefined) {\n    try {\n      await addOrUpdateItemResource({\n        data: resource,\n        portalItem,\n        path\n      });\n\n      writtenName = path;\n    } catch (e) {\n      // Bubbles up any error that occured from downstream methods\n      throw e;\n    }\n  }\n  return writtenName;\n}\n\n/**\n * Updates an entry in session storage with the provided data\n * @param {Pick<UpdateSavedResourceProps<T>, \"resource\" | \"storageKey\" | \"version\">} props the properties that are picked from UpdateSavedResourceProps\n * @returns {{Promise<string>}} whether or not the operation was successful.\n */\nasync function updateSessionStorage<T>(\n  props: Pick<UpdateSavedResourceProps<T>, \"resource\" | \"storageKey\" | \"version\">\n): Promise<string> {\n  const { resource, storageKey } = props;\n  let writtenName = \"\";\n  if (isSessionStorageAvailable()) {\n    try {\n      removeFromSessionStorage(storageKey);\n      await writeToSessionStorage(storageKey, JSON.stringify(resource));\n      writtenName = storageKey;\n    } catch (e) {\n      // Bubbles up any error that occured from downstream methods\n      throw e;\n    }\n  }\n  return writtenName;\n}\n\n/**\n * Updates a resource that may have already been saved, or adds a new one. `webMap ?? sessionStorage ?? undefined`\n * @param {UpdateSavedResourceProps} props the properties to use: storageKey: string, portalItem: __esri.PortalItem, resource: AnalysisHistoryItem[], version: string.\n * @returns {Promise<boolean>} whether or not the operation was successful.\n */\nexport async function updateSavedResource<T>(props: UpdateSavedResourceProps<T>): Promise<string> {\n  const { resource, storageKey, version, onlyWriteToSessionStorage } = props;\n  let writtenName = \"\";\n  const writeToItemResource = props.portalItem !== undefined && onlyWriteToSessionStorage === false;\n  try {\n    if (writeToItemResource) {\n      writtenName = await updateItemResource<T>(props);\n    } else {\n      writtenName = await updateSessionStorage<T>({ resource, storageKey, version });\n    }\n  } catch (e) {\n    // Bubbles up any error that occured from downstream methods\n    throw e;\n  }\n  return writtenName;\n}\n","import { isValidNumber } from \"../common\";\n\n/**\n * Returns a string representation of the provided number for use with calcite-input. It also\n * guards against invalid types following this logic:\n *   - If the value is valid (not NaN, finite), the value is returned as a string\n *   - If not and if a valid default value is provided, the default value is returned as a string\n *   - If not, an empty string is returned\n * @param value\n * @param defaultValue\n * @returns a sanitized string\n */\nexport function sanitizeNumber(value?: number | string | null, defaultValue?: number): string {\n  let returnedValue;\n  if (value !== null) {\n    const testedValue: number | undefined = typeof value === \"string\" ? Number.parseFloat(value) : value;\n\n    if (isValidNumber(testedValue)) returnedValue = testedValue;\n    else if (isValidNumber(defaultValue)) returnedValue = defaultValue;\n  }\n\n  return returnedValue === undefined ? \"\" : `${returnedValue}`;\n}\n\n/**\n * Parses a value string to a number for use with calcite-input. If the string is empty, it will return undefined.\n * If the string is otherwise invalid, it will return NaN.\n * @param value calcite-input value\n * @returns {number | undefined} the parsed number\n */\nexport function parseNumber(value: string): number | undefined {\n  if (value === \"\") return undefined;\n  return Number.parseFloat(value);\n}\n","import { parseWhereClause as arcgisParseWhereClause } from \"@arcgis/core/core/sql\";\n\n/**\n * Parses a where clause, see `@arcgis/core/core/sql` for usage.\n * @param clause\n * @param fields\n */\nexport function parseWhereClause(clause: string, fields: __esri.FieldsIndex): Promise<__esri.WhereClause> {\n  return arcgisParseWhereClause(clause, fields);\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import arrayMap from './_arrayMap.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\nimport stringToPath from './_stringToPath.js';\nimport toKey from './_toKey.js';\nimport toString from './toString.js';\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nexport default toPath;\n","import baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n}\n\nexport default uniqWith;\n"],"names":["freeGlobal$1","global","Object","freeSelf","self","root$1","freeGlobal","Function","Symbol$2","root","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","baseGetTag","value","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","isSymbol","arrayMap","array","iteratee","index","length","Array","isArray$1","isArray","symbolProto","symbolToString","baseToString","isObject","type","identity","isFunction","uid","coreJsData$1","maskSrcKey","exec","coreJsData","keys","IE_PROTO","funcToString","toSource","func","reIsHostCtor","funcProto","reIsNative","RegExp","replace","baseIsNative","test","getNative","object","key","getValue","WeakMap$1","objectCreate","create","baseCreate","proto","baseCreate$1","apply","thisArg","args","copyArray","source","nativeNow","Date","now","constant","count","lastCalled","defineProperty","defineProperty$3","baseSetToString","string","configurable","enumerable","writable","setToString","stamp","remaining","arguments","setToString$1","baseIsNaN","arrayIncludes","fromIndex","strictIndexOf","predicate","fromRight","baseFindIndex","baseIndexOf","reIsUint","isIndex","baseAssignValue","eq","other","assignValue","objValue","copyObject","props","customizer","isNew","newValue","nativeMax","Math","max","overRest","start","transform","otherArgs","this","baseRest","isLength","isArrayLike","isIterateeCall","createAssigner","assigner","sources","guard","isPrototype","Ctor","constructor","baseIsArguments","propertyIsEnumerable","isArguments","isArguments$1","freeExports","exports","nodeType","freeModule","module","Buffer","isBuffer$1","isBuffer","typedArrayTags","baseUnary","freeProcess","process","nodeUtil$1","types","require","binding","nodeIsTypedArray","nodeUtil","isTypedArray","isTypedArray$1","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","n","baseTimes","String","push","overArg","arg","nativeKeys$1","baseKeys","nativeKeys","assign","assign$3","baseKeysIn","nativeKeysIn","isProto","keysIn","assignInWith","srcIndex","extendWith","reIsDeepProp","reIsPlainProp","isKey","nativeCreate$1","Hash","entries","clear","entry","set","assocIndexOf","__data__","nativeCreate","size","has","get","data","splice","ListCache","pop","Map$2","getMapData","map","isKeyable","MapCache","hash","Map","memoize","resolver","TypeError","memoized","cache","Cache","memoize$2","rePropName","reEscapeChar","stringToPath","memoizeCapped","charCodeAt","match","number","quote","subString","stringToPath$1","castPath","toKey","baseGet","path","defaultValue","arrayPush","values","offset","spreadableSymbol","isConcatSpreadable","isFlattenable","baseFlatten","depth","isStrict","flatten","flatRest","getPrototype$1","getPrototypeOf","objectCtorString","isPlainObject","getPrototype","isError","message","name","attempt","Error","attempt$1","Stack","pairs","LARGE_ARRAY_SIZE","allocUnsafe","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","resIndex","arrayFilter","symbol","getSymbols$1","getSymbolsIn","getSymbolsIn$1","baseGetAllKeys","keysFunc","symbolsFunc","getAllKeys","getAllKeysIn","DataView$1","Promise$2","Set$2","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","DataView","mapCtorString","promiseCtorString","Promise","setCtorString","Set","weakMapCtorString","WeakMap","getTag","ArrayBuffer","resolve","ctorString","getTag$1","Uint8Array$1","Uint8Array","cloneArrayBuffer","arrayBuffer","byteLength","reFlags","symbolValueOf","valueOf","initCloneByTag","isDeep","regexp","dataView","buffer","byteOffset","cloneDataView","typedArray","cloneTypedArray","lastIndex","nodeIsMap","isMap","isMap$1","nodeIsSet","isSet","isSet$1","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","stack","isFlat","isFull","input","initCloneArray","isFunc","slice","copy","cloneBuffer","initCloneObject","copySymbolsIn","baseAssignIn","copySymbols","baseAssign","stacked","forEach","subValue","add","arrayEach","SetCache","arraySome","cacheHas","equalArrays","equalFunc","isPartial","arrLength","othLength","arrStacked","othStacked","seen","arrValue","othValue","compared","othIndex","mapToArray","setToArray","arrayTag","baseIsEqualDeep","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","convert","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","skipCtor","objCtor","othCtor","equalObjects","baseIsEqual","isStrictComparable","matchesStrictComparable","srcValue","baseMatches","matchData","getMatchData","noCustomizer","COMPARE_PARTIAL_FLAG","baseIsMatch","baseHasIn","hasIn","hasFunc","hasPath","property","basePropertyDeep","baseIteratee","baseFor","iterable","baseFor$1","isArrayLikeObject","arrayIncludesWith","comparator","last","escapeHtmlChar$1","reUnescapedHtml","reHasUnescapedHtml","nativeMin","min","castArrayLikeObject","intersectionBy","arrays","mapped","includes","caches","maxLength","Infinity","outer","computed","baseIntersection","intersectionBy$1","parent","end","baseSlice","isEmpty","isEqual","mapValues","baseForOwn","baseUnset","customOmitClone","omit","paths","CLONE_DEEP_FLAG","omit$1","baseSet","nested","basePickBy","pickBy","prop","omitBy","negate","pick","basePick","pick$1","customDefaultsAssignIn","stringEscapes","escapeStringChar","chr","reInterpolate$1","templateSettings$1","escape","evaluate","interpolate","reInterpolate","variable","imports","_","escapeHtmlChar","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reForbiddenIdentifierChars","reEsTemplate","reNoMatch","reUnescapedString","template","options","settings","templateSettings","isEscaping","isEvaluating","importsKeys","importsValues","baseValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","createSet$1","baseUniq","isCommon","createSet","seenIndex","unionBy$1","UIInputStatus","IDLE","VALID","INVALID","isValidNumber","Number","isNaN","isFinite","removeEmptyObjects","obj","nonEmptyObjects","isEmptyDataItem","isAllPropsEmpty","propValue","isEveryPropertyEmpty","async","request","url","esriRequest","flattenObject","flattened","SupportedLocales","Arabic","Bosnian","Bulgarian","Catalan","Czech","Danish","German","Greek","English","EnglishUSA","Spanish","Estonian","Finnish","French","Hebrew","Croatian","Hungarian","Indonesian","Italian","Japanese","Korean","Lithuanian","Latvian","NorwegianBokml","Dutch","Polish","PortugueseBrazil","PortuguesePortugal","Romanian","Russian","Serbian","Slovenian","Slovak","Swedish","Thai","Turkish","Ukrainian","Vietnamese","ChineseChina","ChineseHongKong","ChineseTaiwan","SupportedLocalesForFormats","RTLLocales","SupportedOnlineHelpLocales","formatMessage","statement","parameters","templateFn","convertToSupportedLocale","locale","output","supportedLocales","hyphenatedSupportedLocales","filter","ele","indexOf","lang","region","split","toUpperCase","languageTag","toLowerCase","extractLanguageTag","convertToSupportedFormatLocale","formatLocale","find","item","getClosestElement","selector","base","closestFrom","el","element","document","window","closest","getRootNode","host","getLocaleInfo","documentElement","navigator","language","convertedLocale","rtl","fetchLocaleStrings","baseURL","localeData","response","fetch","json","defaultResponse","fixUrlForDemoApp","learnMoreUrl","portalUrl","currentUrl","location","href","currentOrigin","URL","origin","portalOrigin","formatNumberToLocale","formatOptions","formattedValue","localeCode","Intl","NumberFormat","format","ArcgisWebAnalysisError","details","cause","super","ErrorKeywords","Default","CannotReopenTool","CannotReopenWebTool","CreditEstimationError","CreditThresholdExceededError","CreditEstimationExecutionFailure","InsufficientCreditsError","KeyPropertiesError","LayerLoadFailure","LayerUnavailable","NetworkError","PortalLoadError","QueryFeaturesError","ServiceNameExistsError","SpecialCharactersInServiceNameError","ToolValidationError","WebToolFailedFetch","WebToolJSONChanged","WebToolPermissionsError","naiveFallback","implementation","error","__global__","globalThis_1","globalThis","require$$1","require$$0","validTypes","is","isValue","possibleTypes","function","classRe","functionToString","val","foo","bar","trzy","dest","src","i","str","contains","searchString","isPlainFunction","require$$2","normalizeOpts","opts1","require$$4","d","dModule","dscr","c","w","desc","d$4","gs","SymbolPolyfill","HiddenSymbol","isNativeSafe","validateSymbol","objPrototype","created","NativeSymbol","registry","generateName","ie11BugWorkaround","postfix","setupStandardSymbols","defineProperties","hasInstance","iterator","search","species","toPrimitive","unscopables","setupSymbolRegistry","for","keyFor","ignore","description","polyfill","__description__","__name__","es6Symbol","MODE_NONE","MODE_DEFAULT","MODE_MATCH","sortTokenizableSubstrings","a","b","endsWith","suffix","Tokenizer","factory","forEachToken","previousChr","toMatch","currentToken","modeStack","currentIndex","getCurrentMode","setCurrentMode","mode","completeCurrentMode","currentMode","pushDefaultModeTokenizables","token","surroundedBy","convertLiterals","tokenize","consume","charAt","matchMap","delimiterMap","tokenizeIndex","tokenizeList","lowestIndexOfTokenize","toTokenize","indexOfTokenize","substring","escapeCharacter","TokenizeThis_1","config","defaultConfig","tokenizeMap","matchList","delimiterList","shouldTokenize","sort","shouldMatch","shouldDelimitBy","delimiter","TokenizeThis","OPERATOR_UNARY_MINUS","unaryMinusDefinition","Operator","precedence","toJSON","SqlWhereParser_1","tokenizer","operators","concat","operator","parse","sql","evaluator","operatorStack","outputStream","lastOperator","tokenCount","lastTokenWasOperatorOrLeftParenthesis","defaultEvaluator","normalizedToken","operatorPrecedenceFromValues","operands","numOperands","unshift","SyntaxError","operatorValue","toArray","lastToken","expression","expressionParentheses","precedenceParenthesisIndex","expressionTokens","getOperator","operatorValue1","operatorValue2","NOT","BETWEEN","IN","IS","LIKE","AND","OR","AnalysisToolParamDirection","AnalysisEngine","AnalysisType","AnalysisOperator","ParamViewModelKey","SerializationType","AnalysisSupportedItemTypes","ImageService","FeatureService","BigData","Csv","Xls","MapService","FeatureLayer","BigDataFeature","Table","BigDataTable","MultiValueGrid","GeoprocessingService","RasterFunctionTemplate","BdfsTemplate","DeepLearningPackage","File","Doc","Image","PDF","Csvs","SelectedLayersKey","ParamGroupDataTypeKey","ServerEditionName","Advanced","Basic","Standard","AnalysisJobStatus","Canceled","Canceling","Deleted","Deleting","TimedOut","Executing","Failed","New","Submitted","Succeeded","Waiting","InProgressStatuses","CompletedStatuses","historyVersion","convert_1_0_0_to_1_1_0","historyItem","updatedHistoryItem","category","fixRasterToolsCategory","convert_1_1_0_to_1_2_0","results","ParameterValue","paramName","dataType","convertResultsToParameterValues","transformFns","arrayConcat","acc","curr","toObject","compose","fs","reduceRight","g","f","x","reducer","DATA_PREFIX","COMPONENT_PREFIX","CURRENT_TOOL_PREFIX","TRANSFORM_SUFFIX","parseValue","renderedParams","currentTool","parsedValue","transforms","fns","t","trim","isValidTransform","fn","attr","expr","reduce","parseEffectParams","effectParams","isEffectParamsArray","updatedEffectParams","hasValueChanged","shouldMutateOriginal","expressions","operandA","operandB","bothBooleans","canPerformNumericComparisons","canPatternMatch","replaceAll","evaluateExpression","generateSelectedLayersKey","generateParamGroupDataTypeKey","monadic","serializer","cacheKey","isPrimitive","computedValue","variadic","assemble","context","strategy","serialize","bind","strategyDefault","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","cacheDefault","strategies","addressFields","getToolUIJsonWithSourceCountryRule","params","geocodeServiceURL","countryRule","ruleType","destination","visible","countries","detailedCountries","responseType","err","console","labels","country","localizedNames","fourLetterLocale","localizedName","twoLetterLocale","startsWith","choiceList","choiceListLabels","getAddressFieldMappingRules","inputFileItem","inputTable","addressFieldsRule","geocodeParameters","fieldInfo","fieldMapping","analyzeGeocodeInput","field_info","field_mapping","field","mapping","itemid","getServiceType","serviceType","services","part","sanitizeUrl","urlUtils","urlToObject","CLIENT_THROWN_ERROR","fetchErrorsStrings","strings","reject","throwError","errorKey","errorStrings","errorMessage","defaultError","abortControllerMap","queryFeatures","layer","query","returnUniqueIdsOnly","abortKey","graphics","queryObjectIds","signal","features","promiseUtils","isAbortError","abortPendingQueries","currentAbortController","abort","AbortController","readItemResource","portalItem","portalItemResource","PortalItemResource","portalItemResourceData","addOrUpdateItemResource","resourceBlob","Blob","itemData","update","addResource","writeToSessionStorage","sessionStorage","setItem","exception","removeFromSessionStorage","removeItem","readFromSessionStorage","getItem","isSessionStorageAvailable","testKey","DOMException","code","requestCache","fromCache","requester","id","cachedValue","requestedCacheId","requestedCacheValue","cachedId","inCache","getCenter","geometry","extent","Point","xmin","xmax","y","ymin","ymax","spatialReference","getGeometryCenter","center","polyline","Polyline","addPath","centroid","ring","rings","polygon","Polygon","addRing","getCenterPointUsingServerQuery","inputLayer","point","Query","returnGeometry","where","num","maxAllowableOffset","outFields","cacheHint","returnCentroid","geometryType","sampleFeature","round","fullExtent","CountryNotFound","fetchEnrichmentCountry","geoenrichmentUrl","centerPoint","mapView","layerView","featureIndex","whenLayerView","reactiveUtils","whenOnce","updating","createQuery","resultFeatureSet","floor","getCenterPoint","credential","esriId","findCredential","studyAreas","analysisVariables","inSr","enrichResult","countriesList","FeatureSet","feature","attributes","sourceCountry","from","isNumericField","fieldType","getLayerLabel","serviceTitle","title","isFeatureLayer","isTileLayer","isImageryLayer","isImageryTileLayer","isCsvLayer","isKmlLayer","isRouteLayer","isTableLayer","isTable","isGroupLayer","isFeatureCollectionJSON","getFeatureLayerFromFeatureCollection","featColl","inputArgument","layerDefinition","featureSet","fromJSON","fields","Field","objectIdField","drawingInfo","renderer","Renderer","getFeatureLayersFromSketchLayer","sketchLayer","beforeSave","loadingLayers","featureCollection","layers","featureLayer","supportedGeometryName","geometryTitle","toolInfoKeys","points","polygons","lines","getLocalizedGeometryType","layerTitle","load","all","getProxyServiceInfoHelper","serverUrl","status","serviceUrl","esriConfig","proxyUrl","useProxy","getServiceName","serviceName","urlParts","getLayerObjectFromUrl","Layer","fromArcGISServerUrl","getLayerObjectFromItemId","itemId","fromPortalItem","PortalItem","loadLayer","loadedLayer","loadAll","getLayerObject","gpResultValue","getInputLayerObject","gpInputValue","errors","ValidityState","Valid","Info","Warning","isClientThrownError","extractErrorMessage","defaultErrorString","convertErrorToAnalysisValidationParams","variables","getParameterErrors","errorList","parameterErrors","convertedError","convertJobLayersToMapLayers","jobLayers","availableMapLayers","layersToAdd","existingLoadedLayers","layerErrors","gpLayer","foundLayer","findCb","availableLayer","urlId","layerId","compareUrl","unloadedLayersToAdd","loadedLayersToAdd","existingLayers","getRFxDefKeyFromRFT","rfxTemplate","functionDefKey","localOp","Operation","AbstractSerializer","prepare","_paramConfig","postProcess","isNonNullObject","WithKeys","Base","getKeys","paramConfig","serializationKeys","allValueKeys","flatMap","arrayValue","toSerializeKeys","serializeSequentialValues","join","SequentialValuesSerializer","originalValue","toSerializeValue","fullyProcessedValue","serializationParameterName","unSerializedSubset","SequentialValueArraySerializer","serializedValue","isValueArray","hasKeys","serializedItem","every","serializeSequentialArrayValues","ArrayValuesSerializer","shouldSerialize","serializedValues","serializeArrayValues","toSerializeName","StringValueSerializer","WrapInArraySerializer","flat","serializeWrapInArray","serializers","SerializationType_sequentialValues","SerializationType_sequentialValueArray","SerializationType_arrayValues","SerializationType_string","SerializationType_wrapInAnArray","SerializationType_default","CalculatedParameterValueKeys","CurrentTime","DefaultUIOnlyParamKeys","ExcludedUIOnlyParamKeys","ExcludedUIOnlyParamPartialKeys","AlwaysIncludedUIOnlyParamKeys","DefaultUIOnlyParamKeysForDisplay","ExcludedUIOnlyParamKeysForUI","ExcludedUIOnlyParamPartialKeysForUI","getUIParamsByName","uiParameters","paramsByName","uiParameter","UIparameters","getUIOnlyParams","toolData","keysToRemove","isWebTool","partialKeysToRemove","alwaysIncludedUIOnlyParams","allExcludedKeys","allExcludedPartialKeys","allParamKeysToRemove","some","partialKey","toolUIOnlyParams","formatAnalysisEngineSuffix","analysisEngine","analysisEngineSuffix","getToolJSONs","assetPrefix","memoizedHelper","lowercaseToolName","toolUIJson","toolT9n","commonT9n","toolJson","toolPath","toolJSONPath","t9nPath","commonT9nPath","helpLocale","toolHelpFilePath","isTravelModeUsedByTool","toolName","replaceSpacesWithUnderscores","formatOutputNameForPortal","outputNameValue","isPortal","formattedOutputName","outputName","potentialServiceNamePaths","serviceProperties","itemProperties","serviceNameSource","_key","getActualOutputNames","parameterNames","outputParamNames","filterAndRenameParams","jobParams","UIOnlyParams","toolUIParamModel","useSubmissionName","updatedParams","renamedParams","inViewModel","submissionName","isVisible","removedKey","serializeOutputName","outParamName","resultType","capabilities","folderId","saveResultIn","serializeGenericParameter","parameterObject","serializationType","preparedData","replaceTag","shouldCreateLayerObject","checkLayerAllowAnalysis","allowedAnalysis","sourceJSON","allowAnalysis","typeKeywords","isOrgItem","getFederatedServers","portal","restUrl","user","federatedServers","servers","isAdmin","role","isPublisher","checkUserAccess","hasAccess","orgId","canPerformStandardAnalysis","isServerAvailable","helperServices","analysis","atLeastPublisher","privileges","hasAnalysisPrivilege","fetchUserLicenses","returnUserLicensedItems","userLicensedItems","entitlements","username","hasImageEntitlement","userHasImageEntitlement","entitlement","canPerformRasterAnalysis","rasterAnalytics","hasRasterAnalyticsPrivilege","hasRasterAnalyticsServer","server","serverFunction","getDeepLearningQueryUrl","processImageryLayer","processedProperties","isMultidimensional","mutlidimensionalInfo","rasterInfo","multidimensionalInfo","multidimensionalSubset","getMultidimensionalSubsetVariables","dimensions","variableFields","dimensionVariables","dimensionValues","dimensionVariableDatasets","dimensionMinValues","dimensionMaxValues","dimensionMinValuesWithLabels","dimensionMaxValuesWithLabels","vidx","dimensionsDescription","variableName","dimension","dimensionName","dimensionDescription","unit","dimMinValues","dimMaxValues","dimMinValuesWithLabels","dimMaxValuesWithLabels","date","label","toLocaleString","toISOString","d1","d2","val1","val2","alias","filteredFields","variableKey","getFields","variablesDataset","generateRasterInfo","renderingRule","asyncGeocodeUrl","jobInfo","geoprocessor","submitJob","waitForJobCompletion","fetchResultData","srCategories","Africa","Antarctica","Asia","Caribbean","Minnesota","Wisconsin","Europe","Canada","Oceans","Earth","Jupiter","Mars","Mercury","Neptune","Pluto","Saturn","Uranus","Venus","World","Continental","Illinois","Indiana","Meters","Iowa","Kansas","CGCS2000","Turkey","Argentina","Australia","Austria","Bangladesh","Bhutan","Finland","Replaced","France","Germany","Indonesia","Italy","Japan","Libya","Norway","Colombia","Sweden","Ukraine","Vietnam","Polar","Oregon","Texas","Tribal","Montana","Navajo","Wyoming","UTM","Malaysia","SIRGAS","Portugal","wkidMap","getWkidMap","flatWkids","getPortalItemMemo","getPortalHelpMap","helpMap","fetchPortalHelpMap","method","Enterprise","Kubernetes","long","dateStyle","timeStyle","numeric","hour","minute","second","DebounceTimer","HelpDebounceTimer","PopoverTimer","Scale","body","appendChild","open","arr","messagesArray","t9nMessageCodes","formattedReport","report","messageObject","messageCode","style","substitutionKeys","currentMessage","singleMessage","messageCodeKey","localizedMessage","safeTagsReplace","firstClosingTag","calculatedJobParams","param","getTime","canExtract","isOwner","hasExtractCapability","serviceItemId","loaded","owner","geoanalytics","hasGeoAnalyticsPrivilege","messageType","historyList","currentHistoryVersion","updatedHistoryList","versionUpdatedTo","uiOnlyParams","toolJSON","convertedJobParams","resultingErrorState","toolAppErrorState","parameterErrorState","combinedParams","parameterValue","toolJSONParam","direction","gpLayerValue","selectedLayersKey","multiParameterValue","componentName","tagName","dir","usePopupTemplateFieldsInfo","fieldsInfo","attributeTable","serviceRasterInfo","rasterFields","valueField","valueFieldInfo","popupTemplate","fieldInfos","popupFieldsInfo","fieldsIndex","fieldName","newField","unionBy","t9nStrings","localizedData","preppedJobParams","UIparameterViewModel","allowDateType","allowStringType","allowOidType","allowNumericType","allowGeometryFields","allowField","allowBigIntType","geometryFieldsInfo","shapeAreaField","shapeLengthField","messages","analysisType","parsedMessage","isCreditMessage","isTranslatableMessage","regexString","regexPattern","matches","userId","IdentityManager","startTime","endTime","time","units","seconds","single","plural","minutes","hours","days","timeDiffSeconds","elapsedTimeParts","interval","firstValue","findIndex","timePart","unitDisplay","formatDurationTimePart","basePath","localeInLowerCase","toLocaleLowerCase","timestamp","DateTimeFormat","validationParams","sketchLayers","mapImageLayers","otherAnalysisLayers","isSketchLayer","isMapImageLayer","analysisLayers","sketchFeatureLayers","allSettled","res","fulfilledRes","mapImageFeatureLayers","mapImageLayer","mapImagelayer","allSublayers","subLayer","createFeatureLayer","getFeatureLayersFromMapImageLayer","otherAnalysisLayersLoadResults","analysisLayer","loadResults","fulfilledResults","gpValue","serviceToken","definitionExpression","timeInfo","useViewTime","timeExtent","timeFilter","sourceArray","graphic","nextObjectId","showLegend","geometryJsonUtils","getJsonType","fieldJson","typeIdField","popupInfo","getFeatureCollectionJSON","helpBase","mosaicRule","__esri","MosaicRule","clone","parameter","getServerUrlFromLayer","translatedRFTNamesMap","rasterFunction","rftName","translatedRFTName","rfxDefKey","regexLiteral","regexParts","pattern","flags","resultParams","wkid","toolsT9nStrings","camelCaseToolName","uiOnlyParamsToDisplay","hierarchy","hierarchyAlias","countryAlias","dataFormat","uiParamPartialsToRemove","paramPartialMatches","uniqueValues","errorMessages","originalMessage","rest","validityStates","valid","webToolJSON","datasetInputParamsMap","webToolsUnits","inputParams","inputUIParameters","analysisBlock","inputUIParam","displayName","resultLayerGroupLabel","summaryText","resultLayerGroupText","UIparameterInfos","version","dependsOn","dependency","rules","mapLayer","privilegesArray","portalDeploymentType","composedPath","elementName","target","localName","hasAdvancedLevelLicense","hostingServer","serverRole","serverInfo","defaultLicenseLevel","edition","level","jobStatus","isSupported","isTravelModeParam","isLayerFeature","featureLayers","loadItemResource","sessionStorageData","parseFloat","serializedHistoryItem","serializedJobInfo","JobInfo","parsedResult","stringifiedResult","clause","arcgisParseWhereClause","parseWhereClause","serializedJobParams","actualOutputNames","geocodeUIParameters","singleLine","singleOrMultiFieldSwitch","addressField","outputNameObjectString","dataTypeMap","parameterInfos","modelType","modelInfo","properties","cloneDeep","gpjob","model","aborted","modelParamInfo","ParameterInfo","ModelType","paramsToAvoid","required","pname","rule","valueA","valueB","SqlWhereParser","view","queryFeatureCount","remove","returnedValue","testedValue","sanitizeTokensFromJobParams","currentParam","pathArray","toPath","newObj","current","nextKeyIsNumber","shouldResetValue","newProperties","resultItem","loadedPortalItem","updatedPortalItem","resource","storageKey","onlyWriteToSessionStorage","writtenName","writeToItemResource","updateItemResource","updateSessionStorage","errorState","RFxValidityStates","newErrorState","state","newToolErrors","errorKeys","errorString","array1","array2"],"mappings":"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AS,0BACT,MAAS,0BACT,MAAS,0BACT,MAAS,0BACT,MAAS,0BACT,MAAS,0BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,2BACT,MAAS,0BACT,MAAS,0BACT,MAAS,0BACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,gCACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,+BACT,MAAS,gCAEX,cAAe,CACb,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,OAAU,4CACV,KAAQ,4CACR,KAAQ,2CACR,KAAQ,2CACR,KAAQ,2CACR,KAAQ,2CACR,KAAQ,2CACR,KAAQ,2CACR,KAAQ,2CACR,KAAQ,2CACR,KAAQ,2CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,4CACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,oCAEV,eAAgB,CACd,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,gCACR,KAAQ,iCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,KAAQ,4BACR,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,yBACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,yBACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,yBACT,MAAS,0BACT,MAAS,yBACT,MAAS,0BACT,MAAS,yBACT,MAAS,0BACT,MAAS,yBACT,MAAS,0BACT,MAAS,yBACT,MAAS,0BACT,MAAS,yBACT,MAAS,0BACT,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,oCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,oCACR,KAAQ,qCAEV,eAAgB,CACd,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,gCACR,KAAQ,iCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,mCACR,KAAQ,kCACR,KAAQ,kCACR,KAAQ,kCACR,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BACT,MAAS,0BACT,MAAS,2BA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"}