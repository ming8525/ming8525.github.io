{
  "add": "ng_Add_______ny",
  "done": "ng_Done_________ny",
  "cancel": "ng_Cancel_____________ny",
  "clear": "ng_Clear___________ny",
  "close": "ng_Close___________ny",
  "open": "ng_Open_________ny",
  "back": "ng_Back_________ny",
  "collapse": "ng_Collapse_________________ny",
  "expand": "ng_Expand_____________ny",
  "replaceField": "ng_Replace field______________ny",
  "addField": "ng_Add field___________________ny",
  "loading": "ng_Loading_______________ny",
  "expression": "ng_Expression_____________________ny",
  "sumOfCategories": "ng_Sum of categories__________________ny",
  "panels": {
    "styleOptions": "ng_Style options______________ny",
    "visualization": "ng_Visualization______________ny",
    "___symbolStyle": "ng_Symbol style_____________ny",
    "gallery": {
      "styles": "ng_Styles_____________ny",
      "chooseAttributes": "ng_Choose attributes__________________ny",
      "chooseAttributesMsg": "ng_Choose which fields you want to map. The order will affect how some styles are applied_____________________________________________ny.",
      "field": "ng_Field___________ny",
      "addField": "ng_Add a field____________ny",
      "addExpression": "ng_Add an expression__________________ny",
      "tip1": "ng_Add a field to start ${smartMappingLink}______________________ny.",
      "tip1Link": "ng_smart mapping______________ny",
      "tip2": "ng_Add more fields to try more styles___________________ny.",
      "removeField": "ng_Remove field_____________ny",
      "newExpression": "ng_New expression_______________ny",
      "editExpression": "ng_Edit expression________________ny",
      "removeExpression": "ng_Remove expression__________________ny",
      "showLocation": "ng_Show location only___________________ny",
      "pickStyle": "ng_Pick a style_____________ny",
      "styleMsg": {
        "empty": "ng_Choose attributes above for more styles_____________________ny.",
        "oneNumber": "ng_These styles are good for visualizing a single numeric field________________________________ny.",
        "multipleNumber": "ng_These styles are good for visualizing multiple numeric fields________________________________ny.",
        "any": "ng_These styles are good for your current field selection_____________________________ny."
      },
      "chartClusterMsg": "ng_Changing style is not supported while Clustering (chart) is enabled. Change aggregation type  or disable aggregation to change the layer style_________________________________________________________________________ny.",
      "errors": {
        "changeRendererErrorMsg": "ng_The layer is not providing enough information to change the drawing style______________________________________ny.",
        "getHistogramErrorMsg": "ng_The layer is not providing enough information to draw the histogram___________________________________ny.",
        "expressionMustBeNumber": "ng_The expression must return a number value______________________ny."
      }
    },
    "rasterGallery": {
      "style": "ng_Style___________ny",
      "symbologyOptions": "ng_Select Style_____________ny"
    },
    "simple": {
      "simpleStyle": "ng_Location (Single symbol)_________________________ny",
      "pointSymbolStyle": "ng_Point symbol style___________________ny",
      "lineSymbolStyle": "ng_Line symbol style__________________ny",
      "polygonSymbolStyle": "ng_Polygon symbol style_____________________ny",
      "___editSymbolStyle": "ng_Edit symbol style__________________ny"
    },
    "color": {
      "colorStyle": "ng_Counts and Amounts (color)___________________________ny",
      "colorStyleDate": "ng_Continuous Timeline (color)____________________________ny",
      "colorAgeStyle": "ng_Age (Color)____________ny",
      "collapse": "ng_Collapse_________________ny",
      "expand": "ng_Expand_____________ny",
      "visualization": "ng_Visualization______________ny",
      "symbolStyle": "ng_Symbol style_____________ny",
      "line": "ng_Line_________ny",
      "color": "ng_Color___________ny",
      "backgroundTransparency": "ng_Background transparency________________________ny",
      "transparency": "ng_Transparency_____________ny",
      "dataRange": "ng_Data range_____________________ny",
      "invertSlider": "ng_Flip ramp colors_________________ny",
      "zoomSlider": "ng_Magnify slider_______________ny",
      "resetSlider": "ng_Reset slider positions_______________________ny",
      "includeInLegend": "ng_Include in legend__________________ny",
      "legend": "ng_Legend_____________ny",
      "highToLow": "ng_High to low____________ny",
      "aboveAndBelow": "ng_Above and below________________ny",
      "above": "ng_Above___________ny",
      "below": "ng_Below___________ny",
      "centered": "ng_Centered on____________ny",
      "extremes": "ng_Extremes_________________ny",
      "newToOld": "ng_New to old_____________________ny",
      "beforeAndAfter": "ng_Before and after_________________ny",
      "before": "ng_Before_____________ny",
      "after": "ng_After___________ny",
      "estimatedValuesMsg": "ng_Numbers based on sampling data_________________ny.",
      "zeroFeaturesMsg": "ng_No features to display________________________ny.",
      "legendMsg": "ng_Edit how the layer will be represented in the legend____________________________ny.",
      "percentValue": "ng_${num}%_______________ny",
      "other": "ng_Other___________ny"
    },
    "size": {
      "sizeStyle": "ng_Counts and Amounts (size)__________________________ny",
      "sizeStyleChart": "ng_Charts (size)______________ny",
      "sizeStyleDate": "ng_Continuous Timeline (size)___________________________ny",
      "sizeAgeStyle": "ng_Age (Size)_____________________ny",
      "collapse": "ng_Collapse_________________ny",
      "expand": "ng_Expand_____________ny",
      "visualization": "ng_Visualization______________ny",
      "expression": "ng_Expression_____________________ny",
      "line": "ng_Line_________ny",
      "color": "ng_Color___________ny",
      "symbolStyle": "ng_Symbol style_____________ny",
      "transparency": "ng_Transparency_____________ny",
      "backgroundTransparency": "ng_Background transparency________________________ny",
      "background": "ng_Background_____________________ny",
      "dataRange": "ng_Data range_____________________ny",
      "invertSlider": "ng_Invert size ramp_________________ny",
      "zoomSlider": "ng_Magnify slider_______________ny",
      "resetSlider": "ng_Reset slider positions_______________________ny",
      "automatic": "ng_Automatic___________________ny",
      "custom": "ng_Custom_____________ny",
      "min": "ng_Min_______ny",
      "max": "ng_Max_______ny",
      "px": "ng_px_____ny",
      "highToLow": "ng_High to low____________ny",
      "above": "ng_Above___________ny",
      "below": "ng_Below___________ny",
      "newToOld": "ng_New to old_____________________ny",
      "before": "ng_Before_____________ny",
      "after": "ng_After___________ny",
      "includeInLegend": "ng_Include in legend__________________ny",
      "estimatedValuesMsg": "ng_Numbers based on sampling data_________________ny.",
      "zeroFeaturesMsg": "ng_No features to display________________________ny.",
      "legendMsg": "ng_Edit how the layer will be represented in the legend____________________________ny.",
      "other": "ng_Other___________ny"
    },
    "colorSize": {},
    "colorSizeUnivariate": {
      "colorSizeStyle": "ng_Color and Size_______________ny",
      "collapse": "ng_Collapse_________________ny",
      "expand": "ng_Expand_____________ny",
      "visualization": "ng_Visualization______________ny",
      "theme": "ng_Theme___________ny",
      "symbolStyle": "ng_Symbol style_____________ny",
      "editSymbolStyle": "ng_Edit symbol style__________________ny",
      "colorScheme": "ng_Color scheme_____________ny",
      "continuous": "ng_Continuous_____________________ny",
      "binary": "ng_Binary_____________ny",
      "line": "ng_Line_________ny",
      "color": "ng_Color___________ny",
      "backgroundTransparency": "ng_Background transparency________________________ny",
      "transparency": "ng_Transparency_____________ny",
      "dataRange": "ng_Data range_____________________ny",
      "invertSlider": "ng_Flip ramp colors_________________ny",
      "zoomSlider": "ng_Magnify slider_______________ny",
      "resetSlider": "ng_Reset slider positions_______________________ny",
      "sizeRange": "ng_Size range_____________________ny",
      "adjustSizeAutomatically": "ng_Adjust size automatically__________________________ny",
      "dividedBy": "ng_Divided by_____________________ny",
      "replaceField": "ng_Replace field______________ny",
      "chooseField": "ng_Choose a field_______________ny",
      "clear": "ng_Clear___________ny",
      "includeInLegend": "ng_Include in legend__________________ny",
      "legend": "ng_Legend_____________ny",
      "highToLow": "ng_High to low____________ny",
      "aboveAndBelow": "ng_Above and below________________ny",
      "above": "ng_Above___________ny",
      "below": "ng_Below___________ny",
      "before": "ng_Before_____________ny",
      "after": "ng_After___________ny",
      "newToOld": "ng_New to old_____________________ny",
      "beforeAndAfter": "ng_Before and after_________________ny",
      "legendMsg": "ng_Edit how the layer will be represented in the legend____________________________ny.",
      "symbolPicker": {
        "circles": "ng_Circles_______________ny",
        "squares": "ng_Squares_______________ny",
        "chevrons": "ng_Chevrons_________________ny",
        "circlesChevrons": "ng_Circles with chevrons______________________ny",
        "arrows": "ng_Arrows_____________ny",
        "circleArrows": "ng_Circles with arrows____________________ny",
        "plusMinus": "ng_Plus and minus_______________ny",
        "circlePlusMinus": "ng_Circles with plus and minus____________________________ny",
        "faces": "ng_Faces___________ny",
        "triangles": "ng_Triangles___________________ny",
        "thumbs": "ng_Thumbs up and thumbs down__________________________ny",
        "custom": "ng_Custom_____________ny"
      }
    },
    "relationship": {
      "relationshipStyle": "ng_Relationship_____________ny",
      "dataRange": "ng_Data range_____________________ny",
      "gridSize": "ng_Grid size___________________ny",
      "gridsize4": "ng_4 x 4___________ny",
      "gridsize3": "ng_3 x 3___________ny",
      "gridsize2": "ng_2 x 2___________ny"
    },
    "predominance": {
      "styleOptions": "ng_Style options______________ny",
      "predominanceStyle": "ng_Predominant Category_____________________ny",
      "fieldName": "ng_Field name_____________________ny",
      "drawingOrder": "ng_Display features by value order_________________ny",
      "other": "ng_Other___________ny",
      "tooManyValues": "ng_There are more than ${count} unique values. Values not listed here will still display on the map in this category__________________________________________________________ny.",
      "noFeatures": "ng_The selected attribute has no values. All features will draw as \"${other}\"_______________________________________ny.",
      "accessibility": {
        "editSymbolFor": "ng_Edit symbol for ${value}__________________________ny.",
        "editLabelFor": "ng_Edit label for ${value}_________________________ny.",
        "countFor": "ng_Count for ${value}____________________ny."
      }
    },
    "compare": {
      "compareStyle": "ng_Compare A to B_______________ny",
      "ratioTitle": "ng_Showing the ratio of ${field1} to ${field2}_______________________ny",
      "percentTitle": "ng_Showing ${field1} as a percent of ${field2}_______________________ny",
      "percentTotalTitle": "ng_Showing ${field1} as a percent of ${field1} and ${field2}______________________________ny",
      "labels": "ng_Labels_____________ny",
      "centerAt": "ng_Center at___________________ny",
      "ratioLabel": "ng_Show the ratio of A to B_________________________ny",
      "percentLabel": "ng_Show A as a percent of B_________________________ny",
      "percentTotalLabel": "ng_Show A as a percent of A and B_______________________________ny",
      "centerEqualValues": "ng_Equal values_____________ny",
      "centerAverageValue": "ng_Average value______________ny",
      "includeInLegend": "ng_Include in legend__________________ny"
    },
    "chart": {
      "styleOptions": "ng_Style options______________ny",
      "chartStyle": "ng_Charts_____________ny",
      "chartStyleColor": "ng_Charts (color)_______________ny",
      "fieldName": "ng_Field name_____________________ny",
      "symbolStyle": "ng_Symbol style_____________ny",
      "chartSize": "ng_Chart size_____________________ny",
      "chartSizeRange": "ng_Chart size range_________________ny",
      "adjustChartSizeAutomatically": "ng_Adjust chart size automatically_________________ny",
      "min": "ng_Min_______ny",
      "max": "ng_Max_______ny",
      "shape": "ng_Shape___________ny",
      "px": "ng_px_____ny",
      "percentValue": "ng_${num}%_______________ny",
      "pie": "ng_Pie_______ny",
      "donut": "ng_Donut___________ny",
      "smaller": "ng_Smaller_______________ny",
      "larger": "ng_Larger_____________ny",
      "grouping": "ng_Grouping_________________ny",
      "groupingInfo": "ng_Values below the grouping % are aggregated into <b>${other}</b> to simplify the chart____________________________________________ny.",
      "line": "ng_Line_________ny",
      "color": "ng_Color___________ny",
      "transparency": "ng_Transparency_____________ny",
      "backgroundTransparency": "ng_Background transparency________________________ny",
      "editSymbolStyle": "ng_Edit symbol style__________________ny",
      "background": "ng_Background_____________________ny",
      "editChartColors": "ng_Edit colors____________ny",
      "other": "ng_Other___________ny",
      "noData": "ng_No value_________________ny",
      "changeTooltip": "ng_Change the attribute and drawing style_____________________ny.",
      "otherTooltip": "ng_Show or hide features in this category_____________________ny.",
      "accessibility": {
        "editSymbolFor": "ng_Edit symbol for ${value}__________________________ny.",
        "editLabelFor": "ng_Edit label for ${value}_________________________ny."
      }
    },
    "flow": {
      "styleOptions": "ng_Style options______________ny",
      "flowStyle": "ng_Flow_________ny",
      "symbology": "ng_Symbology options__________________ny",
      "colorScheme": "ng_Color scheme_____________ny",
      "flowline": "ng_Flowline_________________ny",
      "wavefront": "ng_Wavefront___________________ny",
      "speed": "ng_Speed___________ny",
      "density": "ng_Density_______________ny",
      "length": "ng_Length_____________ny",
      "width": "ng_Width___________ny",
      "px": "ng_px_____ny",
      "slow": "ng_Slow_________ny",
      "fast": "ng_Fast_________ny",
      "short": "ng_Short___________ny",
      "long": "ng_Long_________ny",
      "low": "ng_Low_______ny",
      "high": "ng_High_________ny",
      "singleColor": "ng_Single color_____________ny",
      "colorRamp": "ng_Color ramp_____________________ny",
      "dataRange": "ng_Data range_____________________ny",
      "invertSlider": "ng_Flip ramp colors_________________ny",
      "resetSlider": "ng_Reset slider positions_______________________ny",
      "flowDirection": "ng_Flow direction_______________ny",
      "to": "ng_To_____ny",
      "from": "ng_From_________ny",
      "roundEndCaps": "ng_Round end caps_______________ny",
      "forWideLines": "ng_Available for wider lines__________________________ny",
      "includeInLegend": "ng_Include in legend__________________ny",
      "layerEffects": "ng_Layer effects______________ny",
      "adjustEffects": "ng_Adjust in Effects pane_______________________ny"
    },
    "vectorField": {
      "styleOptions": "ng_Style options______________ny",
      "vectorField": "ng_Vector field_____________ny",
      "symbolType": "ng_Symbol type____________ny",
      "symbolDensity": "ng_Symbol density_______________ny",
      "symbolScaling": "ng_Symbol scaling (px)____________________ny",
      "magnitudeRange": "ng_Magnitude range________________ny",
      "moreProps": "ng_More properties________________ny",
      "min": "ng_Minimum_______________ny",
      "max": "ng_Maximum_______________ny",
      "low": "ng_Low_______ny",
      "high": "ng_High_________ny",
      "convertMagnitude": "ng_Convert magnitude__________________ny",
      "inputUnits": "ng_Input units____________ny",
      "outputUnits": "ng_Output units_____________ny",
      "invertSymbols": "ng_Invert symbols_______________ny",
      "invertSymbolsTip": "ng_Draw the symbols in the opposite direction_______________________ny.\nng_By default, the symbols are displayed in the direction defined by the data. If the angle direction in the data is measured based on the beginning of the mass flow, such as wind, use this option to invert the vector symbol direction_____________________________________________________________________________________________________________________ny.",
      "symbolStyleOptions": {
        "simpleScalar": {
          "title": "ng_Simple scalar______________ny",
          "description": "ng_Symbolizes the magnitude of the data using graduated symbol sizes__________________________________ny."
        },
        "singleArrow": {
          "title": "ng_Single arrow_____________ny",
          "description": "ng_A single arrow depicting direction and magnitude__________________________ny."
        },
        "windBarbs": {
          "title": "ng_Wind barbs_____________________ny",
          "description": "ng_Wind barbs indicating wind direction and magnitude___________________________ny."
        },
        "beaufort": {
          "title": "ng_Beaufort wind scale____________________ny",
          "description": "ng_Symbolizes the magnitude and direction of wind using the Beaufort Wind Scale________________________________________ny."
        },
        "oceanCurrentKnots": {
          "title": "ng_Ocean current (knots)______________________ny",
          "description": "ng_Ocean current symbol indicating current and magnitude using 9 predefined categories___________________________________________ny."
        },
        "oceanCurrentMps": {
          "title": "ng_Ocean current (m/s)____________________ny",
          "description": "ng_Ocean current symbol indicating current and magnitude using 4 predefined categories___________________________________________ny."
        },
        "classifiedArrow": {
          "title": "ng_Classified arrow_________________ny",
          "description": "ng_Symbolizes the magnitude and direction of flow, using categories calculated based on magnitude limits____________________________________________________ny."
        }
      },
      "unitOptions": {
        "esriMetersPerSecond": "ng_m/s_______ny",
        "esriKilometersPerHour": "ng_km/h_________ny",
        "esriKnots": "ng_knots___________ny",
        "esriFeetPerSecond": "ng_ft/sec_____________ny",
        "esriMilesPerHour": "ng_mph_______ny"
      }
    },
    "stretch": {
      "styleOptions": "ng_Style options______________ny",
      "stretch": "ng_Stretch_______________ny",
      "symbologyOptions": "ng_Symbology options__________________ny",
      "band": "ng_Band_________ny",
      "min": "ng_Min_______ny",
      "max": "ng_Max_______ny",
      "mean": "ng_Mean_________ny",
      "stddev": "ng_Standard deviation___________________ny",
      "colorScheme": "ng_Color scheme_____________ny",
      "gamma": "ng_Gamma___________ny",
      "dynamicRangeAdjustment": "ng_Apply dynamic range adjustment_______________________________ny",
      "statistics": "ng_Statistics_____________________ny"
    },
    "rgb": {
      "styleOptions": "ng_Style options______________ny",
      "rgb": "ng_RGB_______ny",
      "red": "ng_Red_______ny",
      "green": "ng_Green___________ny",
      "blue": "ng_Blue_________ny",
      "symbology": "ng_Symbology options__________________ny",
      "min": "ng_Min_______ny",
      "max": "ng_Max_______ny",
      "mean": "ng_Mean_________ny",
      "stddev": "ng_Standard deviation___________________ny",
      "gamma": "ng_Gamma___________ny",
      "dynamicRangeAdjustment": "ng_Apply dynamic range adjustment_______________________________ny",
      "individualGamma": "ng_Change individual band gamma values___________________ny",
      "statistics": "ng_Statistics_____________________ny"
    },
    "shadedRelief": {
      "styleOptions": "ng_Style options______________ny",
      "shadedRelief": "ng_Shaded relief______________ny",
      "symbologyOptions": "ng_Symbology options__________________ny",
      "hillshadeType": "ng_Hillshade type_______________ny",
      "hillshadeTypeOptions": {
        "traditional": "ng_Traditional____________ny",
        "multidirectional": "ng_Multidirectional_________________ny"
      },
      "hillshadeTypeOptionDescriptions": {
        "traditional": "ng_Calculates hillshade from a single illumination direction______________________________ny.",
        "multidirectional": "ng_Combines light from multiple sources to represent an enhanced visualization of the terrain_______________________________________________ny."
      },
      "colorRamp": "ng_Color ramp_____________________ny",
      "colorScheme": "ng_Color scheme_____________ny",
      "azimuth": "ng_Azimuth (degrees)__________________ny",
      "altitude": "ng_Altitude (degrees)___________________ny",
      "scaling": "ng_Scaling_______________ny",
      "scalingOptions": {
        "none": "ng_None_________ny",
        "adjusted": "ng_Adjusted_________________ny"
      },
      "zFactor": "ng_Z Factor_________________ny",
      "pixelSizePower": "ng_Pixel size power_________________ny",
      "pixelSizeFactor": "ng_Pixel size factor__________________ny"
    },
    "classBreaks": {
      "styleOptions": "ng_Style options______________ny",
      "classBreaks": "ng_Class breaks_____________ny",
      "field": "ng_Field___________ny",
      "value": "ng_Value___________ny",
      "colorScheme": "ng_Color scheme_____________ny",
      "classifyClasses": "ng_Number of classes__________________ny",
      "definedInterval": "ng_Interval_________________ny",
      "invertSlider": "ng_Invert slider______________ny",
      "dataRange": "ng_Data range_____________________ny",
      "accessibility": {
        "editColorFor": "ng_Edit color for ${value}_________________________ny.",
        "editLabelFor": "ng_Edit label for ${value}_________________________ny."
      }
    },
    "colormap": {
      "styleOptions": "ng_Style options______________ny",
      "colormap": "ng_Colormap_________________ny",
      "color": "ng_Color___________ny",
      "value": "ng_Value___________ny",
      "label": "ng_Label___________ny",
      "colormapTable": "ng_Colormap table_______________ny",
      "accessibility": {
        "editLabelFor": "ng_Edit label for ${value}_________________________ny."
      }
    },
    "uniqueValue": {
      "styleOptions": "ng_Style options______________ny",
      "uniqueValue": "ng_Unique value_____________ny",
      "field": "ng_Field___________ny",
      "value": "ng_Value___________ny",
      "colorScheme": "ng_Color scheme_____________ny",
      "other": "ng_Other___________ny",
      "otherTooltip": "ng_Show or hide features in this category_____________________ny.",
      "accessibility": {
        "editColorFor": "ng_Edit color for ${value}_________________________ny.",
        "editLabelFor": "ng_Edit label for ${value}_________________________ny."
      }
    },
    "heatmap": {
      "styleOptions": "ng_Style options______________ny",
      "heatmapStyle": "ng_Heat Map_________________ny",
      "softenEdges": "ng_Soften edges_____________ny",
      "less": "ng_Less_________ny",
      "more": "ng_More_________ny",
      "areaOfInfluence": "ng_Area of influence__________________ny",
      "lock": "ng_Lock heat map______________ny",
      "lockHelp": "ng_Prevents heat map from regenerating at each zoom level_____________________________ny.",
      "regenerate": "ng_Regenerate_____________________ny",
      "smaller": "ng_Smaller_______________ny",
      "larger": "ng_Larger_____________ny"
    },
    "type": {
      "styleOptions": "ng_Style options______________ny",
      "typeActions": "ng_Type actions_____________ny",
      "typeStyle": "ng_Types (Unique symbols)_______________________ny",
      "typeStyleDate": "ng_Discrete Time Periods (categories)__________________ny",
      "expression": "ng_Expression_____________________ny",
      "symbolStyle": "ng_Symbol style_____________ny",
      "drawingOrder": "ng_Display features by value order_________________ny",
      "groupNameHint": "ng_Title___________ny",
      "defaultGroupName": "ng_Group ${number}________________ny",
      "label": "ng_Label___________ny",
      "value": "ng_Value___________ny",
      "displayedValue": "ng_Displayed value________________ny",
      "storedValue": "ng_Stored value_____________ny",
      "valueNotUnique": "ng_Value must be unique_____________________ny",
      "editTypeColors": "ng_Edit colors____________ny",
      "color": "ng_Color___________ny",
      "other": "ng_Other___________ny",
      "noData": "ng_No value_________________ny",
      "estimatedValuesMsg": "ng_Counts based on sampling data_______________________________ny.",
      "addValue": "ng_Add value___________________ny",
      "changeColors": "ng_Change group colors____________________ny",
      "selectAllValues": "ng_Select all values__________________ny",
      "separateValues": "ng_Separate values________________ny",
      "moveUp": "ng_Move up_______________ny",
      "moveDown": "ng_Move down___________________ny",
      "mergeValues": "ng_Merge values_____________ny",
      "moveToGroup": "ng_Move to group______________ny",
      "newGroup": "ng_New group___________________ny",
      "checkValue": "ng_Check value____________ny",
      "searchGroups": "ng_Search groups______________ny",
      "selectGroup": "ng_Select group_____________ny",
      "untitledGroup": "ng_Untitled group_______________ny",
      "clearSelection": "ng_Clear selection________________ny",
      "tooltips": {
        "options": "ng_Options_______________ny",
        "otherTooltip": "ng_Show or hide features in this category_____________________ny.",
        "changeTooltip": "ng_Change the attribute and drawing style_____________________ny.",
        "dragGroup": "ng_Drag to arrange groups_______________________ny",
        "dragType": "ng_Drag to arrange types______________________ny",
        "renameGroup": "ng_Rename group_____________ny",
        "renameType": "ng_Rename type____________ny",
        "changeSymbol": "ng_Change symbol______________ny"
      },
      "accessibility": {
        "editSymbolFor": "ng_Edit symbol for ${value}__________________________ny.",
        "editLabelFor": "ng_Edit label for ${value}_________________________ny.",
        "countFor": "ng_Count for ${value}____________________ny.",
        "arrowTooltip": "ng_Move ${value} value out_________________________ny."
      },
      "errors": {
        "tooManyValues": "ng_There are more than ${count} unique values. Values not listed here will still display on the map in this category__________________________________________________________ny.",
        "noFeatures": "ng_The selected attribute has no values. All features will draw as \"${other}\"_______________________________________ny."
      }
    },
    "dotDensity": {
      "styleOptions": "ng_Style options______________ny",
      "dotDensityStyle": "ng_Dot Density____________ny",
      "symbolStyle": "ng_Symbol style_____________ny",
      "legend": "ng_Legend_____________ny",
      "dotsRepresent": "ng_Dots represent_______________ny",
      "dotValue": "ng_Dot value___________________ny",
      "dotSize": "ng_Dot size_________________ny",
      "px": "ng_px_____ny",
      "dotEquation": "ng_1 dot = ${count} ${units}__________________________ny",
      "varyDotByScale": "ng_Vary dot value by scale________________________ny",
      "blendOverlappingColors": "ng_Blend overlapping colors_________________________ny",
      "dotValueEquation": "ng_1 dot = ${value} ${units}__________________________ny",
      "dot": "ng_Dot_______ny",
      "dots": "ng_Dots_________ny",
      "dotColor": "ng_Dot color___________________ny",
      "dotTransparency": "ng_Dot transparency_________________ny",
      "background": "ng_Background_____________________ny",
      "editSymbolFor": "ng_Edit symbol for ${fieldName}______________________________ny.",
      "editLabelFor": "ng_Edit label for ${fieldName}_____________________________ny."
    }
  },
  "arcade": {
    "newExpression": "ng_New expression_______________ny",
    "defaultExpressionScript_line1": "ng_Write a script that returns a value that will be used to draw features_____________________________________ny.",
    "defaultExpressionScript_line2": "ng_For example, find the percentage of oak trees________________________ny:",
    "currentMapScale": "ng_Current Map Scale__________________ny"
  },
  "styler": {
    "symbolStyle": "ng_Symbol style_____________ny",
    "background": "ng_Background_____________________ny",
    "backgroundTransparency": "ng_Background transparency________________________ny",
    "line": "ng_Line_________ny",
    "dot": "ng_Dot_______ny",
    "dots": "ng_Dots_________ny",
    "dotColor": "ng_Dot color___________________ny",
    "dotTransparency": "ng_Dot transparency_________________ny",
    "color": "ng_Color___________ny",
    "transparency": "ng_Transparency_____________ny",
    "other": "ng_Other___________ny"
  },
  "tile": {
    "selectStyle": "ng_Select style_____________ny",
    "styleOptions": "ng_Style options______________ny",
    "moreInfo": "ng_More information_________________ny",
    "info": {
      "title": "ng_When to use ${title}_____________________ny",
      "learnMore": "ng_Learn more_____________________ny"
    },
    "simpleStyle": "ng_Location (single symbol)_________________________ny",
    "typeStyle": "ng_Types (unique symbols)_______________________ny",
    "typeAgeStyle": "ng_Types and Size (age)_____________________ny",
    "dotDensityStyle": "ng_Dot Density____________ny",
    "heatmapStyle": "ng_Heat Map_________________ny",
    "colorStyle": "ng_Counts and Amounts (color)___________________________ny",
    "sizeStyle": "ng_Counts and Amounts (size)__________________________ny",
    "sizeStyleChart": "ng_Charts (size)______________ny",
    "typeStyleDate": "ng_Discrete Time Periods (categories)__________________ny",
    "colorStyleDate": "ng_Continuous Timeline (color)____________________________ny",
    "sizeStyleDate": "ng_Continuous Timeline (size)___________________________ny",
    "colorAgeStyle": "ng_Age (color)____________ny",
    "sizeAgeStyle": "ng_Age (size)_____________________ny",
    "typeSizeStyle": "ng_Types and Size_______________ny",
    "typeSizeAgeStyle": "ng_Types and Size (age)_____________________ny",
    "colorSizeStyle": "ng_Color and Size_______________ny",
    "colorAgeSizeStyle": "ng_Color (age) and Size_____________________ny",
    "colorSizeAgeStyle": "ng_Color and Size (age)_____________________ny",
    "predominanceStyle": "ng_Predominant category_____________________ny",
    "predominanceSizeStyle": "ng_Predominant category and Size______________________________ny",
    "chartStyle": "ng_Charts_____________ny",
    "chartSizeStyle": "ng_Charts and Size________________ny",
    "chartStyleColor": "ng_Charts (color)_______________ny",
    "compareStyle": "ng_Compare A to B_______________ny",
    "relationshipStyle": "ng_Relationship_____________ny",
    "relationshipSizeStyle": "ng_Relationship and Size______________________ny",
    "symbologyRGBStyle": "ng_RGB_______ny",
    "symbologyStretchStyle": "ng_Stretch_______________ny",
    "symbologyClassBreaksStyle": "ng_Classify_________________ny",
    "symbologyUniqueValuesStyle": "ng_Unique values______________ny",
    "symbologyShadedReliefStyle": "ng_Shaded relief______________ny",
    "symbologyVectorFieldStyle": "ng_Vector field_____________ny",
    "symbologyColormapStyle": "ng_Colormap_________________ny",
    "rasterFlowStyle": "ng_Flow_________ny",
    "styleOptionsUnavailable": "ng_Style options unavailable__________________________ny",
    "close": "ng_Close___________ny",
    "learnMore": "ng_Learn more_____________________ny",
    "tooltips": {
      "title": "ng_When to use ${title}_____________________ny",
      "color": "ng_Use colors to represent your numeric or ranked data. Choose a theme that matches your data to a particular color scheme. For example, show data like age or income with the High-to-low theme that uses a simple light to dark color scheme_______________________________________________________________________________________________________________________ny.",
      "colorDate": "ng_Use colors to represent your date data. Choose a theme that matches your data to a particular color scheme. For example, show data like age or income with the Above and Below theme that centers the ramp on a meaningful value such as an average or a goal________________________________________________________________________________________________________________________________ny.",
      "colorAge": "ng_Use colors to represent the age of features. Age reflects the length of time from a start date to an end date. For example, show features less than 30 days old as green and more than 90 days old as red______________________________________________________________________________________________________ny.",
      "size": "ng_Use different symbol sizes to represent your numeric or ranked data. The larger the symbol, the bigger the data value____________________________________________________________ny.",
      "sizeDate": "ng_Use different symbol sizes to represent your date data. For example, larger symbols could represent newer dates_________________________________________________________ny.",
      "sizeAge": "ng_Use size to represent the age of features. Age reflects the length of time from a start date to an end date. For example, show data like new crimes with a large symbol and have the symbol decrease in size until it is 90 days old____________________________________________________________________________________________________________________ny.",
      "type": "ng_Show different categories of features — such as type of tree, road class, or province name — with different colors. Some categories will not have an inherent order. For categories that do, such as educational attainment and income, consider using a sequential color ramp to visualize ranked categories________________________________________________________________________________________________________________________________________________________ny.",
      "typeDate": "ng_Show different categories of features — such as years or days — with different colors____________________________________________ny.",
      "color_Size": "ng_The first attribute you choose uses color to represent your numeric or ranked data. The second attribute uses different symbol sizes to represent your numeric or ranked data. This map style works particularly well when the first attribute is a rate, ratio, percent, index or similar type of data_____________________________________________________________________________________________________________________________________________________ny.",
      "color_SizeDate": "ng_The first attribute you choose uses color to represent your numeric or ranked data. The second attribute uses different symbol sizes to represent your date data as a continuous timeline______________________________________________________________________________________________ny.",
      "color_SizeAge": "ng_The first attribute you choose uses color to represent your numeric or ranked data. The second attribute uses different symbol sizes to represent the age of features____________________________________________________________________________________ny.",
      "colorDate_Size": "ng_The first attribute you choose uses color to represent your date data as a continuous timeline. The second attribute uses different symbol sizes to represent your numeric or ranked data______________________________________________________________________________________________ny.",
      "colorDate_SizeDate": "ng_The first attribute you choose uses color to represent your date data as a continuous timeline. The second attribute uses different symbol sizes to represent your date data as a continuous timeline____________________________________________________________________________________________________ny.",
      "colorDate_SizeAge": "ng_The first attribute you choose uses color to represent your date data as a continuous timeline. The second attribute uses different symbol sizes to represent the age of features__________________________________________________________________________________________ny.",
      "colorAge_Size": "ng_The first attribute you choose uses color to represent the age of features. The second attribute uses different symbol sizes to represent your numeric or ranked data____________________________________________________________________________________ny.",
      "colorAge_SizeDate": "ng_The first attribute you choose uses color to represent the age of features. The second attribute uses different symbol sizes to represent your date data as a continuous timeline__________________________________________________________________________________________ny.",
      "type_Size": "ng_The first attribute you choose categorizes your data based on the unique values found, and uses color to distinguish them on the map. The second attribute uses different symbol sizes to represent your numeric or ranked data_________________________________________________________________________________________________________________ny.",
      "type_SizeDate": "ng_The first attribute you choose categorizes your data based on the unique values found, and uses color to distinguish them on the map. The second attribute uses different symbol sizes to represent your date data as a continuous timeline_______________________________________________________________________________________________________________________ny.",
      "typeDate_Size": "ng_The first attribute you choose categorizes your date data based on the unique values found, and uses color to distinguish them on the map. The second attribute uses different symbol sizes to represent your data___________________________________________________________________________________________________________ny.",
      "type_SizeAge": "ng_The first attribute you choose categorizes your data based on the unique values found, and uses color to distinguish them on the map. The second attribute uses different symbol sizes to represent the age of features_____________________________________________________________________________________________________________ny.",
      "predominance": "ng_Compare attributes that share a common subject and unit of measurement to see which has the highest value. Example: choose Corn Acres, Wheat Acres, and Cotton Acres to see which is the predominant crop in each area. Color shows the predominant category and transparency shows the relative strength of the predominance________________________________________________________________________________________________________________________________________________________________ny.",
      "predominanceSize": "ng_Compare attributes that share a common subject and unit of measurement to see which has the highest value. Example: choose Corn Acres, Wheat Acres, and Cotton Acres to see which is the predominant crop in each area. Color shows the predominant category, size shows the sum of the categories, and transparency shows the relative strength of the predominance____________________________________________________________________________________________________________________________________________________________________________________ny.",
      "sizeForPredominance": "ng_Use different symbol sizes to represent the sum of all categories. The larger the symbol, the bigger the value_________________________________________________________ny.",
      "chart": "ng_Compare the relative abundance of different categories of things at locations. Example: compare the relative proportions of different age generations in a country or state (gen-z, millenials, gen-x, and boomers)___________________________________________________________________________________________________________ny.",
      "chartSize": "ng_Compare the relative abundance of different categories of things at locations and use size to capture the total amount or magnitude. Example: compare the relative proportions of different crop types (corn, wheat, soy beans, cotton) while the overall size of the pie depicts how much total crops are harvested____________________________________________________________________________________________________________________________________________________________ny.",
      "relationship": "ng_Use hybrid colors to view the relationship between two numeric attributes. Each attribute uses a distinct sequential color scheme to represent its classified data. Both schemes converge, allowing you to view and explore where the attributes may be related_________________________________________________________________________________________________________________________________ny.",
      "relationshipSize": "ng_Use hybrid colors to view the relationship between the first two numeric attributes. The third attribute uses different sizes to represent your numeric or ranked data_____________________________________________________________________________________ny.",
      "location": "ng_Show the geographic boundaries, lines, or point locations of your data_____________________________________ny.",
      "dotDensity": "ng_Use dot density to visualize the distribution of one attribute or compare multiple attributes. Choose the quantity that each dot represents. Example: 1 dot represents 1,000 people or 1 dot represents 20 trees__________________________________________________________________________________________________________ny.",
      "heatMap": "ng_Show areas of high activity with stronger colors that appear to glow hotter_______________________________________ny.",
      "compare": "ng_The first attribute is compared to the second attribute, and represented as a simple ratio, or as \"A as a percent of B\", or as \"A as a percent of A+B.\" Examples: Revenue / Cost of Sale, or Corn Acres / Total Acres, or Corn Acres / (Corn + Wheat Acres)_______________________________________________________________________________________________________________________________ny.",
      "stretch": "ng_Use a stretch renderer to enhance the visual contrast of data for analysis. An appropriate stretch renderer can enhance the contrast of imagery, allowing the user to control how their data is displayed for efficient imagery analysis______________________________________________________________________________________________________________________ny.",
      "rgb": "ng_An RGB renderer is used to adjust the color bands of a multispectral image. Apply an RGB renderer to a layer to enhance feature visibility_______________________________________________________________________ny.",
      "classify": "ng_The Classify renderer displays thematic data by grouping cell values into classes. Use this type of thematic classification on continuous phenomena, such as slope, distance, or suitability, where you want to classify the range into a small number of classes and assign colors to those classes____________________________________________________________________________________________________________________________________________________ny.",
      "uniqueValues": "ng_The Unique Values renderer is used to display each value in the image layer individually. For instance, you might have discrete categories representing particular objects on the earth's surface, such as those in a thematic layer, which could display soil types or land use__________________________________________________________________________________________________________________________________________ny.",
      "shadedRelief": "ng_Shaded relief renderer produces a grayscale or colored 3D representation of the surface on a layer, with the sun's relative position taken into account for shading the image. This renderer uses a hillshading technique for visualizing terrain determined by a light source and the slope and aspect of the elevation surface__________________________________________________________________________________________________________________________________________________________________ny.",
      "vectorField": "ng_Use Vector field renderer to visualize flow direction and magnitude information in your raster with vector symbols___________________________________________________________ny.",
      "colormap": "ng_A colormap renderer displays single-band thematic data based on specific colors, aiding in visual analysis of the data. Like the unique values renderer, the colormap renderer should be used to differentiate between classes or categories, but with a set of predefined colors from the associated colormap_________________________________________________________________________________________________________________________________________________________ny.",
      "flow": "ng_Motion helps to highlight both the direction and magnitude of flow in a field. Apply blend modes or layer effects to further enhance the lines_________________________________________________________________________ny."
    }
  },
  "transparency": {
    "transparency": "ng_Transparency_____________ny",
    "transparencyByAttribute": "ng_Transparency by attribute__________________________ny",
    "transparencyByPredominance": "ng_Transparency by predominant percentage____________________ny",
    "transparencyLabel": "ng_Set transparency based on attribute values______________________ny",
    "transparencyLabelPredominance": "ng_Set transparency based on the predominant percentage___________________________ny",
    "attribute": "ng_Attribute___________________ny",
    "field": "ng_Field___________ny",
    "dividedBy": "ng_Divided by_____________________ny",
    "clear": "ng_Clear___________ny",
    "transparencyRange": "ng_Transparency range___________________ny",
    "transparencyHighValues": "ng_High values____________ny",
    "transparencyLowValues": "ng_Low values_____________________ny",
    "percentValue": "ng_${num}%_______________ny",
    "zoomSlider": "ng_Magnify slider_______________ny",
    "resetSlider": "ng_Reset slider positions_______________________ny",
    "includeInLegend": "ng_Include in legend__________________ny"
  },
  "fieldPickList": {
    "replace": "ng_Replace_______________ny",
    "selectFields": "ng_Select fields______________ny",
    "searchFields": "ng_Search fields______________ny",
    "info": "ng_Info_________ny",
    "displayName": "ng_Display name_____________ny",
    "type": "ng_Type_________ny",
    "default": "ng_Default_______________ny",
    "fieldName": "ng_Field name_____________________ny",
    "sort": "ng_Sort_________ny"
  },
  "attributeInput": {
    "attribute": "ng_Attribute___________________ny",
    "chooseField": "ng_Choose a field_______________ny",
    "editExpression": "ng_Edit expression________________ny",
    "expression": "ng_Expression_____________________ny",
    "useField": "ng_Use field___________________ny",
    "useExpression": "ng_Use expression_______________ny",
    "errors": {
      "expressionMustBeNumber": "ng_The expression must return a number value______________________ny."
    }
  },
  "rotation": {
    "rotationByAttribute": "ng_Rotation by attribute______________________ny",
    "rotationLabel": "ng_Rotate symbols based on attribute values_____________________ny",
    "field": "ng_Field___________ny",
    "geographic": "ng_Geographic_____________________ny",
    "arithmetic": "ng_Arithmetic_____________________ny",
    "rotateZeroDegrees": "ng_0°_____ny"
  },
  "backgroundSymbol": {
    "backgroundStyle": "ng_Background symbol style________________________ny",
    "showBackgroundSymbol": "ng_Show background symbol_______________________ny"
  },
  "themeButton": {
    "theme": "ng_Theme___________ny",
    "selectTheme": "ng_Select theme_____________ny",
    "highToLow": "ng_High to low____________ny",
    "highToLowMsg": "ng_Vary the size of features from high to low_______________________ny.",
    "above": "ng_Above___________ny",
    "aboveMsg": "ng_Emphasize data above a key value like zero or the average______________________________ny.",
    "below": "ng_Below___________ny",
    "belowMsg": "ng_Emphasize data below a key value like zero or the average______________________________ny.",
    "newToOld": "ng_New to old_____________________ny",
    "newToOldMsg": "ng_Vary the size of features from new to old______________________ny.",
    "before": "ng_Before_____________ny",
    "beforeMsg": "ng_Emphasize data before a key date__________________ny.",
    "after": "ng_After___________ny",
    "afterMsg": "ng_Emphasize data after a key date_________________ny.",
    "color": {
      "aboveAndBelow": "ng_Above and below________________ny",
      "aboveAndBelowMsg": "ng_Show data above and below a value like zero or the average_______________________________ny.",
      "centered": "ng_Centered on____________ny",
      "centeredMsg": "ng_Center on and highlight a particular range of values____________________________ny.",
      "extremes": "ng_Extremes_________________ny",
      "extremesMsg": "ng_Highlight the extreme values______________________________ny.",
      "beforeAndAfter": "ng_Before and after_________________ny",
      "beforeAndAfterMsg": "ng_Show dates before and after a given date______________________ny."
    }
  },
  "methodButton": {
    "method": "ng_Method_____________ny",
    "selectMethod": "ng_Select method______________ny",
    "naturalBreaks": "ng_Natural breaks_______________ny",
    "naturalBreaksMsg": "ng_Create classes based on the natural grouping of the data______________________________ny.",
    "equalInterval": "ng_Equal interval_______________ny",
    "equalIntervalMsg": "ng_Create classes with equal ranges__________________ny.",
    "standardDeviation": "ng_Standard deviation___________________ny",
    "standardDeviationMsg": "ng_Create classes above and below the mean using the standard deviation____________________________________ny.",
    "quantile": "ng_Quantile_________________ny",
    "quantileMsg": "ng_Create classes with the same number of features_________________________ny.",
    "manualBreaks": "ng_Manual breaks______________ny",
    "manualBreaksMsg": "ng_Create classes with custom ranges__________________ny.",
    "definedInterval": "ng_Defined interval_________________ny",
    "definedIntervalMsg": "ng_Create classes with given interval width______________________ny."
  },
  "dropdown": {
    "dropdownOptions": "ng_Dropdown options_________________ny"
  },
  "age": {
    "units": "ng_Units___________ny",
    "from": "ng_From_________ny",
    "to": "ng_To_____ny",
    "seconds": "ng_Seconds_______________ny",
    "minutes": "ng_Minutes_______________ny",
    "hours": "ng_Hours___________ny",
    "days": "ng_Days_________ny",
    "months": "ng_Months_____________ny",
    "years": "ng_Years___________ny",
    "field": "ng_Field___________ny",
    "customDate": "ng_Custom date____________ny",
    "flip": "ng_Flip From and To_________________ny",
    "nextMonth": "ng_Next month_____________________ny",
    "previousMonth": "ng_Previous month_______________ny"
  },
  "classify": {
    "classifyData": "ng_Classify data______________ny",
    "classifyClasses": "ng_Number of classes__________________ny",
    "classifyRoundClasses": "ng_Round classes______________ny",
    "classifyStdDevIntervals": "ng_Standard deviation___________________ny",
    "selectAnOption": "ng_Select an option_________________ny",
    "accessibility": {
      "editSymbolFor": "ng_Edit symbol for ${value}__________________________ny.",
      "editLabelFor": "ng_Edit label for ${value}_________________________ny."
    }
  },
  "dividedByButton": {
    "dividedBy": "ng_Divided by_____________________ny"
  },
  "defaultSymbol": {
    "showDefaultSymbol": "ng_Show features with no values_____________________________ny",
    "showDefaultSymbolClassed": "ng_Show features with out of range or no values_______________________ny",
    "other": "ng_Other___________ny",
    "label": "ng_Label___________ny"
  },
  "symbolPairButton": {
    "symbolPair": "ng_Symbol pair____________ny",
    "singleSymbol": "ng_Single symbol______________ny",
    "circles": "ng_Circles_______________ny",
    "squares": "ng_Squares_______________ny",
    "chevrons": "ng_Chevrons_________________ny",
    "circlesChevrons": "ng_Circles with chevrons______________________ny",
    "arrows": "ng_Arrows_____________ny",
    "circleArrows": "ng_Circles with arrows____________________ny",
    "plusMinus": "ng_Plus and minus_______________ny",
    "circlePlusMinus": "ng_Circles with plus and minus____________________________ny",
    "faces": "ng_Faces___________ny",
    "triangles": "ng_Triangles___________________ny",
    "thumbs": "ng_Thumbs up and thumbs down__________________________ny",
    "custom": "ng_Custom_____________ny"
  },
  "sizeRangeSlider": {
    "adjustSizeAutomatically": "ng_Adjust size automatically__________________________ny",
    "min": "ng_Min_______ny",
    "px": "ng_px_____ny",
    "sizeRange": "ng_Size range_____________________ny"
  },
  "colorSizeSlider": {
    "dataRange": "ng_Data range_____________________ny",
    "invertSlider": "ng_Flip ramp colors_________________ny",
    "zoomSlider": "ng_Magnify slider_______________ny",
    "resetSlider": "ng_Reset slider positions_______________________ny"
  },
  "stretchTypeButton": {
    "stretchType": "ng_Stretch type_____________ny",
    "stretchTypeOptions": {
      "none": "ng_None_________ny",
      "minimumMaximum": "ng_Minimum maximum________________ny",
      "percentClip": "ng_Percent clip_____________ny",
      "standardDeviation": "ng_Standard deviation___________________ny",
      "histogramEqualize": "ng_Histogram equalize___________________ny",
      "custom": "ng_Custom_____________ny"
    },
    "stretchTypeOptionDescriptions": {
      "none": "ng_Displays values between the potential minimum and maximum______________________________ny.",
      "minimumMaximum": "ng_Displays values between the actual minimum and maximum_____________________________ny.",
      "percentClip": "ng_Cut off percentages of highest and lowest values__________________________ny.",
      "standardDeviation": "ng_Displays values between a specified number of standard deviations__________________________________ny.",
      "histogramEqualize": "ng_Displays values with histogram equalize_____________________ny.",
      "custom": "ng_Displays values with custom histogram____________________ny."
    }
  },
  "relationshipLegend": {
    "legend": "ng_Legend_____________ny",
    "labels": "ng_Labels_____________ny",
    "accessibility": {
      "editLabelForTop": "ng_Edit label for top value__________________________ny.",
      "editLabelForLeft": "ng_Edit label for left value___________________________ny.",
      "editLabelForRight": "ng_Edit label for right value____________________________ny.",
      "editLabelForBottom": "ng_Edit label for bottom value_____________________________ny."
    }
  },
  "relationshipFocusButton": {
    "focus": "ng_Focus___________ny",
    "focusHighHigh": "ng_High values____________ny",
    "focusHighLow": "ng_High values / Low values_________________________ny",
    "focusLowHigh": "ng_Low values / High values_________________________ny",
    "focusLowLow": "ng_Low values_____________________ny",
    "none": "ng_None_________ny",
    "focusNoneMsg": "ng_The legend is a square with no focus on a particular corner_______________________________ny.",
    "focusHighHighMsg": "ng_The legend is a diamond, focusing on features with high values for both fields_________________________________________ny.",
    "focusHighLowMsg": "ng_The legend is a diamond, focusing on features with high values in the first field and low values in the second field____________________________________________________________ny.",
    "focusLowHighMsg": "ng_The legend is a diamond, focusing on features with low values in the first and high values in the second field_________________________________________________________ny.",
    "focusLowLowMsg": "ng_The legend is a diamond, focusing on features with low values for both fields________________________________________ny."
  }
}
