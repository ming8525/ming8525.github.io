"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_esri_calcite-components_dist_esm_calcite-card_entry_js"],{

/***/ "./node_modules/@esri/calcite-components/dist/esm/calcite-card.entry.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/calcite-card.entry.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcite_card: () => (/* binding */ Card)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _conditionalSlot_f6710875_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conditionalSlot-f6710875.js */ "./node_modules/@esri/calcite-components/dist/esm/conditionalSlot-f6710875.js");
/* harmony import */ var _dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom-ed00a585.js */ "./node_modules/@esri/calcite-components/dist/esm/dom-ed00a585.js");
/* harmony import */ var _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locale-6e783cf0.js */ "./node_modules/@esri/calcite-components/dist/esm/locale-6e783cf0.js");
/* harmony import */ var _t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./t9n-0bcdca54.js */ "./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js");
/* harmony import */ var _observers_71d332db_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./observers-71d332db.js */ "./node_modules/@esri/calcite-components/dist/esm/observers-71d332db.js");
/* harmony import */ var _guid_21fecfa4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./guid-21fecfa4.js */ "./node_modules/@esri/calcite-components/dist/esm/guid-21fecfa4.js");
/* harmony import */ var _resources_cf82388c_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./resources-cf82388c.js */ "./node_modules/@esri/calcite-components/dist/esm/resources-cf82388c.js");
/* harmony import */ var _key_61f82ddb_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./key-61f82ddb.js */ "./node_modules/@esri/calcite-components/dist/esm/key-61f82ddb.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */










const CSS = {
  container: "container",
  header: "header",
  footer: "footer",
  title: "title",
  subtitle: "subtitle",
  checkboxWrapper: "checkbox-wrapper",
  thumbnailWrapper: "thumbnail-wrapper",
};
const SLOTS = {
  thumbnail: "thumbnail",
  title: "title",
  subtitle: "subtitle",
  footerStart: "footer-start",
  footerEnd: "footer-end",
};

const cardCss = ":host{display:block;max-inline-size:100%}:host .calcite-card-container{position:relative;display:flex;block-size:100%;flex-direction:column;justify-content:space-between;overflow:hidden;border-width:1px;border-style:solid;border-color:var(--calcite-color-border-2);background-color:var(--calcite-color-foreground-1);color:var(--calcite-color-text-3);--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);border-radius:var(--calcite-border-radius-base)}.container{position:relative;display:flex;flex:1 1 auto;flex-direction:column}:host([loading]) .calcite-card-container *:not(calcite-loader):not(.calcite-card-loader-container){pointer-events:none;opacity:0}:host([loading]) .calcite-card-loader-container{position:absolute;inset:0px;display:flex;align-items:center}.header,.footer{display:flex;padding-inline:0.75rem;padding-block:0.75rem 0.25rem}.header{flex-direction:column}.footer{margin-block-start:auto;flex-direction:row;align-content:space-between;justify-content:space-between;padding-inline:0.75rem;padding-block:0.25rem 0.75rem}.card-content{padding:0.75rem;font-size:var(--calcite-font-size--2);line-height:1.375;color:var(--calcite-color-text-3)}:host([selected]) .calcite-card-container{border-color:var(--calcite-color-brand)}slot[name=title]::slotted(*),*::slotted([slot=title]){margin:0px;font-size:var(--calcite-font-size--1);line-height:1.375;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-color-text-1)}:host([selectable]) .header{padding-inline-end:2rem}slot[name=subtitle]::slotted(*),*::slotted([slot=subtitle]){margin:0px;margin-block-start:0.5rem;font-size:var(--calcite-font-size--2);line-height:1.375;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-color-text-2)}slot[name=thumbnail]::slotted(img),img::slotted([slot=thumbnail]){min-inline-size:100%;max-inline-size:100%}slot[name=footer-start]::slotted(*),*::slotted([slot=footer-start]){align-self:center;font-size:var(--calcite-font-size--2);line-height:1.375;margin-inline-end:auto}slot[name=footer-end]::slotted(*),*::slotted([slot=footer-end]){align-self:center;font-size:var(--calcite-font-size--2);line-height:1.375}.checkbox-wrapper{position:absolute;margin:0px;padding:0px;inset-block-start:0.5rem;inset-inline-end:0.5rem}.thumbnail-wrapper{display:flex}.calcite-card-container.inline{flex-direction:row}.calcite-card-container.inline>.container{inline-size:60%}.calcite-card-container.inline>.thumbnail-wrapper{inline-size:40%;align-items:flex-start}.calcite-card-container.inline slot[name=thumbnail]::slotted(img),.calcite-card-container.inline img::slotted([slot=thumbnail]){inline-size:100%}slot[name=footer-start]::slotted(*),slot[name=footer-end]::slotted(*){display:flex;gap:0.25rem}:host([hidden]){display:none}[hidden]{display:none}";

const Card = class {
  constructor(hostRef) {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteCardSelect = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteCardSelect", 6);
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    this.cardSelectClick = () => {
      this.selectCard();
    };
    this.cardSelectKeyDown = (event) => {
      switch (event.key) {
        case " ":
        case "Enter":
          this.selectCard();
          event.preventDefault();
          break;
      }
    };
    this.loading = false;
    this.selected = false;
    this.selectable = false;
    this.thumbnailPosition = "block-start";
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.effectiveLocale = undefined;
    this.defaultMessages = undefined;
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    (0,_conditionalSlot_f6710875_js__WEBPACK_IMPORTED_MODULE_1__.c)(this);
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
  }
  disconnectedCallback() {
    (0,_conditionalSlot_f6710875_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.d)(this);
  }
  async componentWillLoad() {
    await (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.s)(this);
  }
  render() {
    const thumbnailInline = this.thumbnailPosition.startsWith("inline");
    const thumbnailStart = this.thumbnailPosition.endsWith("start");
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: { "calcite-card-container": true, inline: thumbnailInline } }, this.loading ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { "aria-live": "polite", class: "calcite-card-loader-container" }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-loader", { label: this.messages.loading }))) : null, thumbnailStart && this.renderThumbnail(), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("section", { "aria-busy": (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.t)(this.loading), class: { [CSS.container]: true } }, this.selectable ? this.renderCheckbox() : null, this.renderHeader(), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "card-content" }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)), this.renderFooter()), !thumbnailStart && this.renderThumbnail()));
  }
  effectiveLocaleChange() {
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.u)(this, this.effectiveLocale);
  }
  selectCard() {
    this.selected = !this.selected;
    this.calciteCardSelect.emit();
  }
  renderThumbnail() {
    return (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.e)(this.el, SLOTS.thumbnail) ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("section", { class: CSS.thumbnailWrapper }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.thumbnail }))) : null;
  }
  renderCheckbox() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: CSS.checkboxWrapper, onClick: this.cardSelectClick, onKeyDown: this.cardSelectKeyDown }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { checked: this.selected, label: this.messages.select })));
  }
  renderHeader() {
    const { el } = this;
    const title = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.e)(el, SLOTS.title);
    const subtitle = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.e)(el, SLOTS.subtitle);
    const hasHeader = title || subtitle;
    return hasHeader ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("header", { class: CSS.header }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.title }), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.subtitle }))) : null;
  }
  renderFooter() {
    const { el } = this;
    const startFooter = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.e)(el, SLOTS.footerStart);
    const endFooter = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.e)(el, SLOTS.footerEnd);
    const hasFooter = startFooter || endFooter;
    return hasFooter ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("footer", { class: CSS.footer }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.footerStart }), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.footerEnd }))) : null;
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "messageOverrides": ["onMessagesChange"],
    "effectiveLocale": ["effectiveLocaleChange"]
  }; }
};
Card.style = cardCss;



//# sourceMappingURL=calcite-card.entry.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/conditionalSlot-f6710875.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/conditionalSlot-f6710875.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ connectConditionalSlotComponent),
/* harmony export */   d: () => (/* binding */ disconnectConditionalSlotComponent)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _observers_71d332db_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observers-71d332db.js */ "./node_modules/@esri/calcite-components/dist/esm/observers-71d332db.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



const observed = new Set();
let mutationObserver;
const observerOptions = { childList: true };
/**
 * Helper to set up a conditional slot component on connectedCallback.
 *
 * @param component
 * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.
 *
 * ```
 * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}
 * ```
 */
function connectConditionalSlotComponent(component) {
  if (!mutationObserver) {
    mutationObserver = (0,_observers_71d332db_js__WEBPACK_IMPORTED_MODULE_1__.c)("mutation", processMutations);
  }
  mutationObserver.observe(component.el, observerOptions);
}
/**
 * Helper to tear down a conditional slot component on disconnectedCallback.
 *
 * @param component
 * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.
 *
 * ```
 * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}
 * ```
 */
function disconnectConditionalSlotComponent(component) {
  observed.delete(component.el);
  // we explicitly process queued mutations and disconnect and reconnect
  // the observer until MutationObserver gets an `unobserve` method
  // see https://github.com/whatwg/dom/issues/126
  processMutations(mutationObserver.takeRecords());
  mutationObserver.disconnect();
  for (const [element] of observed.entries()) {
    mutationObserver.observe(element, observerOptions);
  }
}
function processMutations(mutations) {
  mutations.forEach(({ target }) => {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.f)(target);
  });
}



//# sourceMappingURL=conditionalSlot-f6710875.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ connectMessages),
/* harmony export */   d: () => (/* binding */ disconnectMessages),
/* harmony export */   s: () => (/* binding */ setUpMessages),
/* harmony export */   u: () => (/* binding */ updateMessages)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale-6e783cf0.js */ "./node_modules/@esri/calcite-components/dist/esm/locale-6e783cf0.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



const componentLangToMessageBundleCache = {};
async function getMessageBundle(lang, component) {
  const key = `${component}_${lang}`;
  if (componentLangToMessageBundleCache[key]) {
    return componentLangToMessageBundleCache[key];
  }
  componentLangToMessageBundleCache[key] = fetch((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.a)(`./assets/${component}/t9n/messages_${lang}.json`))
    .then((resp) => {
    if (!resp.ok) {
      throwMessageFetchError();
    }
    return resp.json();
  })
    .catch(() => throwMessageFetchError());
  return componentLangToMessageBundleCache[key];
}
function throwMessageFetchError() {
  throw new Error("could not fetch component message bundle");
}
function mergeMessages(component) {
  component.messages = {
    ...component.defaultMessages,
    ...component.messageOverrides,
  };
}
/**
 * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.
 *
 * @param component
 */
async function setUpMessages(component) {
  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);
  mergeMessages(component);
}
async function fetchMessages(component, lang) {
  const { el } = component;
  const tag = el.tagName.toLowerCase();
  const componentName = tag.replace("calcite-", "");
  return getMessageBundle((0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_1__.g)(lang, "t9n"), componentName);
}
/**
 * This utility must be set up for the component to update its default message bundle if the locale changes.
 *
 * It can be set up in **either** of the following ways:
 *
 * 1. called from `LocalizedComponent`'s `onLocaleChange` method or
 * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop
 *
 * @param component
 * @param lang
 */
async function updateMessages(component, lang) {
  component.defaultMessages = await fetchMessages(component, lang);
  mergeMessages(component);
}
/**
 * This utility sets up internals for messages support.
 *
 * It needs to be called in `connectedCallback`
 *
 * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.
 *
 * @param component
 */
function connectMessages(component) {
  component.onMessagesChange = defaultOnMessagesChange;
}
/**
 * This utility tears down internals for messages support.
 *
 * It needs to be called in `disconnectedCallback`
 *
 * @param component
 */
function disconnectMessages(component) {
  component.onMessagesChange = undefined;
}
function defaultOnMessagesChange() {
  mergeMessages(this);
}



//# sourceMappingURL=t9n-0bcdca54.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,