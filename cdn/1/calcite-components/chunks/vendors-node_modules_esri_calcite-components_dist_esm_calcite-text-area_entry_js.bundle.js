"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_esri_calcite-components_dist_esm_calcite-text-area_entry_js"],{

/***/ "./node_modules/@esri/calcite-components/dist/esm/calcite-text-area.entry.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/calcite-text-area.entry.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcite_text_area: () => (/* binding */ TextArea)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _form_4876c9e5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form-4876c9e5.js */ "./node_modules/@esri/calcite-components/dist/esm/form-4876c9e5.js");
/* harmony import */ var _label_1c285d41_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./label-1c285d41.js */ "./node_modules/@esri/calcite-components/dist/esm/label-1c285d41.js");
/* harmony import */ var _dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dom-ed00a585.js */ "./node_modules/@esri/calcite-components/dist/esm/dom-ed00a585.js");
/* harmony import */ var _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./locale-6e783cf0.js */ "./node_modules/@esri/calcite-components/dist/esm/locale-6e783cf0.js");
/* harmony import */ var _observers_71d332db_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./observers-71d332db.js */ "./node_modules/@esri/calcite-components/dist/esm/observers-71d332db.js");
/* harmony import */ var _loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./loadable-b17396e0.js */ "./node_modules/@esri/calcite-components/dist/esm/loadable-b17396e0.js");
/* harmony import */ var _t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./t9n-0bcdca54.js */ "./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js");
/* harmony import */ var _interactive_cbd8a6dc_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./interactive-cbd8a6dc.js */ "./node_modules/@esri/calcite-components/dist/esm/interactive-cbd8a6dc.js");
/* harmony import */ var _guid_21fecfa4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./guid-21fecfa4.js */ "./node_modules/@esri/calcite-components/dist/esm/guid-21fecfa4.js");
/* harmony import */ var _throttle_f4d8c9e4_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./throttle-f4d8c9e4.js */ "./node_modules/@esri/calcite-components/dist/esm/throttle-f4d8c9e4.js");
/* harmony import */ var _component_f94cab72_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./component-f94cab72.js */ "./node_modules/@esri/calcite-components/dist/esm/component-f94cab72.js");
/* harmony import */ var _resources_cf82388c_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./resources-cf82388c.js */ "./node_modules/@esri/calcite-components/dist/esm/resources-cf82388c.js");
/* harmony import */ var _key_61f82ddb_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./key-61f82ddb.js */ "./node_modules/@esri/calcite-components/dist/esm/key-61f82ddb.js");
/* harmony import */ var _browser_ece29da7_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./browser-ece29da7.js */ "./node_modules/@esri/calcite-components/dist/esm/browser-ece29da7.js");
/* harmony import */ var _debounce_85958bb1_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./debounce-85958bb1.js */ "./node_modules/@esri/calcite-components/dist/esm/debounce-85958bb1.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */

















const CSS = {
  assistiveText: "assistive-text",
  characterLimit: "character-limit",
  content: "content",
  container: "container",
  footer: "footer",
  resizeDisabled: "resize--disabled",
  resizeDisabledX: "resize--disabled-x",
  resizeDisabledY: "resize--disabled-y",
  characterOverLimit: "character--over-limit",
  readOnly: "readonly",
  textAreaInvalid: "text-area--invalid",
  footerSlotted: "footer--slotted",
  borderColor: "border--color",
  hide: "hide",
  blockSizeFull: "block-size--full",
  footerEndSlotOnly: "footer--end-only",
};
const SLOTS = {
  footerStart: "footer-start",
  footerEnd: "footer-end",
};
const RESIZE_TIMEOUT = 100;

const textAreaCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{position:relative;display:inline-block;block-size:100%;inline-size:100%}textarea{position:relative;margin:0px;box-sizing:border-box;display:block;inline-size:100%;border-width:1px;border-color:var(--calcite-color-border-input);background-color:var(--calcite-color-foreground-1);font-family:var(--calcite-sans-family);color:var(--calcite-color-text-1);min-inline-size:12rem;border-block-end:1px solid var(--calcite-color-border-3)}@media screen and (max-width: 480px){textarea{resize:none}}textarea:focus{outline:2px solid var(--calcite-color-brand);outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          )}textarea.text-area--invalid{border-width:1px;border-block-end-width:1px;border-style:solid;border-color:var(--calcite-color-status-danger)}textarea.text-area--invalid:focus{outline:2px solid var(--calcite-color-status-danger);outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          )}textarea.footer--slotted{min-inline-size:18rem}.footer{box-sizing:border-box;display:flex;align-items:center;border-width:1px;border-block-start-width:0px;border-style:solid;border-color:var(--calcite-color-border-input);background-color:var(--calcite-color-foreground-1)}.character-limit{display:flex;align-items:center;justify-content:flex-end;white-space:nowrap;font-weight:var(--calcite-font-weight-normal);color:var(--calcite-color-text-2)}.character--over-limit{font-weight:var(--calcite-font-weight-bold);color:var(--calcite-color-status-danger)}:host([resize=none]) textarea{resize:none}:host([resize=horizontal]) textarea{resize:horizontal}:host([resize=vertical]) textarea{resize:vertical}:host([scale=s]){font-size:var(--calcite-font-size--2)}:host([scale=s]) .footer{padding-block:0.25rem;padding-inline:0.5rem;min-block-size:1.75rem}:host([scale=s]) textarea{padding-block:0.25rem;padding-inline:0.5rem}:host([scale=s]) textarea,:host([scale=s]) .footer,:host([scale=s]) .character-limit{padding-inline-start:0.5rem;font-size:var(--calcite-font-size--2)}:host([scale=m]) textarea{padding-block:0.5rem;padding-inline:0.75rem}:host([scale=m]) .footer{padding-block:0.5rem;padding-inline:0.75rem;min-block-size:2.25rem}:host([scale=m]) textarea,:host([scale=m]) .footer,:host([scale=m]) .character-limit{padding-inline-start:0.75rem;font-size:var(--calcite-font-size--1)}:host([scale=l]){font-size:var(--calcite-font-size-0)}:host([scale=l]) textarea{padding-block:0.75rem;padding-inline:1rem}:host([scale=l]) .footer{padding-block:0.75rem;padding-inline:1rem;min-block-size:2.75rem}:host([scale=l]) textarea,:host([scale=l]) .footer,:host([scale=l]) .character-limit{padding-inline-start:1rem;font-size:var(--calcite-font-size-0)}:host([status=invalid]) textarea{border-color:var(--calcite-color-status-danger)}:host([status=invalid]) textarea:focus{outline:2px solid var(--calcite-color-status-danger);outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          )}.readonly{background-color:var(--calcite-color-background);font-weight:var(--calcite-font-weight-medium)}:host([disabled]) textarea,:host([disabled]) footer{opacity:0.5}.border--color{border-block-end-width:1px;border-color:var(--calcite-color-border-input)}.border--color:focus{border-block-end-width:2px}textarea.block-size--full{block-size:100%}.content,.hide{display:none}.container{display:flex;inline-size:100%;justify-content:space-between}.footer--end-only{justify-content:flex-end}.assistive-text{position:absolute;inline-size:1px;block-size:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}:host([hidden]){display:none}[hidden]{display:none}";

const TextArea = class {
  constructor(hostRef) {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteTextAreaInput = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteTextAreaInput", 7);
    this.calciteTextAreaChange = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteTextAreaChange", 7);
    this.guid = (0,_guid_21fecfa4_js__WEBPACK_IMPORTED_MODULE_9__.g)();
    this.handleInput = (event) => {
      this.value = event.target["value"];
      this.calciteTextAreaInput.emit();
    };
    this.handleChange = () => {
      this.calciteTextAreaChange.emit();
    };
    this.contentSlotChangeHandler = () => {
      if (!this.value) {
        const nodes = this.el.childNodes;
        nodes.forEach((el) => {
          if (el.nodeName === "#text") {
            this.value = el.nodeValue.trim();
          }
        });
      }
    };
    this.renderCharacterLimit = () => {
      if (this.maxLength) {
        this.localizedCharacterLengthObj = this.getLocalizedCharacterLength();
        return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: CSS.characterLimit }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: { [CSS.characterOverLimit]: this.isCharacterLimitExceeded() } }, this.localizedCharacterLengthObj.currentLength), "/", this.localizedCharacterLengthObj.maxLength));
      }
      return null;
    };
    this.resizeObserver = (0,_observers_71d332db_js__WEBPACK_IMPORTED_MODULE_5__.c)("resize", async () => {
      await (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_6__.b)(this);
      const { textAreaHeight, textAreaWidth, elHeight, elWidth, footerHeight, footerWidth } = this.getHeightAndWidthOfElements();
      if (footerWidth > 0 && footerWidth !== textAreaWidth) {
        this.footerEl.style.width = `${textAreaWidth}px`;
      }
      if (elWidth !== textAreaWidth || elHeight !== textAreaHeight + (footerHeight || 0)) {
        this.setHeightAndWidthToAuto();
      }
    });
    this.setTextAreaEl = (el) => {
      this.textAreaEl = el;
      this.resizeObserver.observe(el);
    };
    // height and width are set to auto here to avoid overlapping on to neighboring elements in the layout when user starts resizing.
    // throttle is used to avoid flashing of textarea when user resizes.
    this.setHeightAndWidthToAuto = (0,_throttle_f4d8c9e4_js__WEBPACK_IMPORTED_MODULE_10__.t)(() => {
      if (this.resize === "vertical" || this.resize === "both") {
        this.el.style.height = "auto";
      }
      if (this.resize === "horizontal" || this.resize === "both") {
        this.el.style.width = "auto";
      }
    }, RESIZE_TIMEOUT, { leading: false });
    this.autofocus = false;
    this.columns = undefined;
    this.disabled = false;
    this.form = undefined;
    this.groupSeparator = false;
    this.label = undefined;
    this.maxLength = undefined;
    this.messages = undefined;
    this.name = undefined;
    this.numberingSystem = undefined;
    this.placeholder = undefined;
    this.readOnly = false;
    this.required = false;
    this.resize = "both";
    this.rows = undefined;
    this.scale = "m";
    this.status = "idle";
    this.value = undefined;
    this.wrap = "soft";
    this.messageOverrides = undefined;
    this.defaultMessages = undefined;
    this.endSlotHasElements = undefined;
    this.startSlotHasElements = undefined;
    this.effectiveLocale = "";
    this.localizedCharacterLengthObj = undefined;
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    (0,_interactive_cbd8a6dc_js__WEBPACK_IMPORTED_MODULE_8__.c)(this);
    (0,_label_1c285d41_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    (0,_form_4876c9e5_js__WEBPACK_IMPORTED_MODULE_1__.c)(this);
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_7__.c)(this);
  }
  async componentWillLoad() {
    (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_6__.s)(this);
    await (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_7__.s)(this);
  }
  componentDidLoad() {
    (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_6__.a)(this);
  }
  componentDidRender() {
    (0,_interactive_cbd8a6dc_js__WEBPACK_IMPORTED_MODULE_8__.u)(this);
    this.setTextAreaHeight();
  }
  disconnectedCallback() {
    (0,_interactive_cbd8a6dc_js__WEBPACK_IMPORTED_MODULE_8__.d)(this);
    (0,_label_1c285d41_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
    (0,_form_4876c9e5_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_4__.d)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_7__.d)(this);
    this.resizeObserver?.disconnect();
  }
  render() {
    const hasFooter = this.startSlotHasElements || this.endSlotHasElements || !!this.maxLength;
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("textarea", { "aria-describedby": this.guid, "aria-invalid": (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_3__.t)(this.isCharacterLimitExceeded()), "aria-label": (0,_label_1c285d41_js__WEBPACK_IMPORTED_MODULE_2__.g)(this), autofocus: this.autofocus, class: {
        [CSS.readOnly]: this.readOnly,
        [CSS.textAreaInvalid]: this.isCharacterLimitExceeded(),
        [CSS.footerSlotted]: this.endSlotHasElements && this.startSlotHasElements,
        [CSS.blockSizeFull]: !hasFooter,
        [CSS.borderColor]: !hasFooter,
      }, cols: this.columns, disabled: this.disabled, name: this.name, onChange: this.handleChange, onInput: this.handleInput, placeholder: this.placeholder, readonly: this.readOnly, required: this.required, rows: this.rows, value: this.value, wrap: this.wrap,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setTextAreaEl }), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: { [CSS.content]: true } }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { onSlotchange: this.contentSlotChangeHandler })), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("footer", { class: {
        [CSS.footer]: true,
        [CSS.readOnly]: this.readOnly,
        [CSS.hide]: !hasFooter,
      }, ref: (el) => (this.footerEl = el) }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
        [CSS.container]: true,
        [CSS.footerEndSlotOnly]: !this.startSlotHasElements && this.endSlotHasElements,
      } }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.footerStart, onSlotchange: (event) => (this.startSlotHasElements = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_3__.b)(event)) }), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.footerEnd, onSlotchange: (event) => (this.endSlotHasElements = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_3__.b)(event)) })), this.renderCharacterLimit()), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)(_form_4876c9e5_js__WEBPACK_IMPORTED_MODULE_1__.H, { component: this }), this.isCharacterLimitExceeded() && ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { "aria-hidden": true, "aria-live": "polite", class: CSS.assistiveText, id: this.guid }, this.replacePlaceHoldersInMessages()))));
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    await (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_6__.c)(this);
    this.textAreaEl.focus();
  }
  /** Selects the text of the component's `value`. */
  async selectText() {
    await (0,_loadable_b17396e0_js__WEBPACK_IMPORTED_MODULE_6__.b)(this);
    this.textAreaEl.select();
  }
  effectiveLocaleChange() {
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_7__.u)(this, this.effectiveLocale);
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onFormReset() {
    this.value = this.defaultValue;
  }
  onLabelClick() {
    this.setFocus();
  }
  getLocalizedCharacterLength() {
    const currentLength = this.value ? this.value.length.toString() : "0";
    const maxLength = this.maxLength.toString();
    if (this.numberingSystem === "latn") {
      return { currentLength, maxLength };
    }
    _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_4__.n.numberFormatOptions = {
      locale: this.effectiveLocale,
      numberingSystem: this.numberingSystem,
      signDisplay: "never",
      useGrouping: this.groupSeparator,
    };
    return {
      currentLength: _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_4__.n.localize(currentLength),
      maxLength: _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_4__.n.localize(maxLength),
    };
  }
  syncHiddenFormInput(input) {
    input.setCustomValidity("");
    if (this.isCharacterLimitExceeded()) {
      input.setCustomValidity(this.replacePlaceHoldersInMessages());
    }
  }
  setTextAreaHeight() {
    const { textAreaHeight, elHeight, footerHeight } = this.getHeightAndWidthOfElements();
    if (footerHeight > 0 && textAreaHeight + footerHeight != elHeight) {
      this.textAreaEl.style.height = `${elHeight - footerHeight}px`;
    }
  }
  getHeightAndWidthOfElements() {
    const { height: textAreaHeight, width: textAreaWidth } = this.textAreaEl.getBoundingClientRect();
    const { height: elHeight, width: elWidth } = this.el.getBoundingClientRect();
    const { height: footerHeight, width: footerWidth } = this.footerEl?.getBoundingClientRect();
    return {
      textAreaHeight,
      textAreaWidth,
      elHeight,
      elWidth,
      footerHeight,
      footerWidth,
    };
  }
  replacePlaceHoldersInMessages() {
    return this.messages.tooLong
      .replace("{maxLength}", this.localizedCharacterLengthObj.maxLength)
      .replace("{currentLength}", this.localizedCharacterLengthObj.currentLength);
  }
  isCharacterLimitExceeded() {
    return this.value?.length > this.maxLength;
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "messageOverrides": ["onMessagesChange"],
    "effectiveLocale": ["effectiveLocaleChange"]
  }; }
};
TextArea.style = textAreaCss;



//# sourceMappingURL=calcite-text-area.entry.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/component-f94cab72.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/component-f94cab72.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ componentOnReady),
/* harmony export */   g: () => (/* binding */ getIconScale)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */
function getIconScale(componentScale) {
  return componentScale === "l" ? "m" : "s";
}
/**
 * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.
 *
 * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3
 *
 * @param el - the host element to wait for
 */
async function componentOnReady(el) {
  await (isStencilEl(el)
    ? el.componentOnReady()
    : new Promise((resolve) => requestAnimationFrame(() => resolve())));
}
function isStencilEl(el) {
  return typeof el.componentOnReady === "function";
}



//# sourceMappingURL=component-f94cab72.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/label-1c285d41.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/label-1c285d41.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ associateExplicitLabelToUnlabeledComponent),
/* harmony export */   b: () => (/* binding */ labelDisconnectedEvent),
/* harmony export */   c: () => (/* binding */ connectLabel),
/* harmony export */   d: () => (/* binding */ disconnectLabel),
/* harmony export */   g: () => (/* binding */ getLabelText),
/* harmony export */   l: () => (/* binding */ labelConnectedEvent)
/* harmony export */ });
/* harmony import */ var _dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-ed00a585.js */ "./node_modules/@esri/calcite-components/dist/esm/dom-ed00a585.js");
/* harmony import */ var _component_f94cab72_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./component-f94cab72.js */ "./node_modules/@esri/calcite-components/dist/esm/component-f94cab72.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



/**
 * Exported for testing purposes only
 *
 * @internal
 */
const labelClickEvent = "calciteInternalLabelClick";
const labelConnectedEvent = "calciteInternalLabelConnected";
const labelDisconnectedEvent = "calciteInternalLabelDisconnected";
const labelTagName = "calcite-label";
const labelToLabelables = new WeakMap();
const onLabelClickMap = new WeakMap();
const onLabelConnectedMap = new WeakMap();
const onLabelDisconnectedMap = new WeakMap();
const unlabeledComponents = new Set();
const findLabelForComponent = (componentEl) => {
  const { id } = componentEl;
  const forLabel = id && (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_0__.q)(componentEl, { selector: `${labelTagName}[for="${id}"]` });
  if (forLabel) {
    return forLabel;
  }
  const parentLabel = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_0__.c)(componentEl, labelTagName);
  if (!parentLabel ||
    // labelable components within other custom elements are not considered labelable
    hasAncestorCustomElements(parentLabel, componentEl)) {
    return null;
  }
  return parentLabel;
};
function hasAncestorCustomElements(label, componentEl) {
  let traversedElements;
  const customElementAncestorCheckEventType = "custom-element-ancestor-check";
  const listener = (event) => {
    event.stopImmediatePropagation();
    const composedPath = event.composedPath();
    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));
  };
  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });
  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));
  label.removeEventListener(customElementAncestorCheckEventType, listener);
  const ancestorCustomElements = traversedElements
    .filter((el) => el !== componentEl && el !== label)
    .filter((el) => el.tagName?.includes("-"));
  return ancestorCustomElements.length > 0;
}
/**
 * Helper to set up label interactions on connectedCallback.
 *
 * @param component
 */
function connectLabel(component) {
  if (!component) {
    return;
  }
  const labelEl = findLabelForComponent(component.el);
  if ((onLabelClickMap.has(labelEl) && labelEl === component.labelEl) ||
    (!labelEl && unlabeledComponents.has(component))) {
    return;
  }
  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);
  if (labelEl) {
    component.labelEl = labelEl;
    const labelables = labelToLabelables.get(labelEl) || [];
    labelables.push(component);
    labelToLabelables.set(labelEl, labelables.sort(sortByDOMOrder));
    if (!onLabelClickMap.has(component.labelEl)) {
      onLabelClickMap.set(component.labelEl, onLabelClick);
      component.labelEl.addEventListener(labelClickEvent, onLabelClick);
    }
    unlabeledComponents.delete(component);
    document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));
    onLabelDisconnectedMap.set(component, boundOnLabelDisconnected);
    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);
  }
  else if (!unlabeledComponents.has(component)) {
    boundOnLabelDisconnected();
    document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));
  }
}
/**
 * Helper to tear down label interactions on disconnectedCallback on labelable components.
 *
 * @param component
 */
function disconnectLabel(component) {
  if (!component) {
    return;
  }
  unlabeledComponents.delete(component);
  document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));
  document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));
  onLabelConnectedMap.delete(component);
  onLabelDisconnectedMap.delete(component);
  if (!component.labelEl) {
    return;
  }
  const labelables = labelToLabelables.get(component.labelEl);
  if (labelables.length === 1) {
    component.labelEl.removeEventListener(labelClickEvent, onLabelClickMap.get(component.labelEl));
    onLabelClickMap.delete(component.labelEl);
  }
  labelToLabelables.set(component.labelEl, labelables.filter((labelable) => labelable !== component).sort(sortByDOMOrder));
  component.labelEl = null;
}
function sortByDOMOrder(a, b) {
  return (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_0__.k)(a.el, b.el) ? -1 : 1;
}
/**
 * Helper to get the label text from a component.
 *
 * @param component
 */
function getLabelText(component) {
  return component.label || component.labelEl?.textContent?.trim() || "";
}
function onLabelClick(event) {
  const labelClickTarget = event.detail.sourceEvent.target;
  const labelables = labelToLabelables.get(this);
  const clickedLabelable = labelables.find((labelable) => labelable.el === labelClickTarget);
  const labelableChildClicked = labelables.includes(clickedLabelable);
  if (labelableChildClicked) {
    // no need to forward click as labelable will receive focus
    return;
  }
  const firstLabelable = labelables[0];
  if (firstLabelable.disabled) {
    return;
  }
  firstLabelable.onLabelClick(event);
}
function onLabelConnected() {
  if (unlabeledComponents.has(this)) {
    connectLabel(this);
  }
}
function onLabelDisconnected() {
  unlabeledComponents.add(this);
  const boundOnLabelConnected = onLabelConnectedMap.get(this) || onLabelConnected.bind(this);
  onLabelConnectedMap.set(this, boundOnLabelConnected);
  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);
}
/**
 * Helper to associate an explicit label (i.e., using `for`) with a labelable component that does not have an associated label.
 *
 * @param label - the label element
 */
async function associateExplicitLabelToUnlabeledComponent(label) {
  await (0,_component_f94cab72_js__WEBPACK_IMPORTED_MODULE_1__.c)(label);
  const alreadyLabeled = labelToLabelables.has(label);
  if (alreadyLabeled) {
    return;
  }
  const forComponentEl = label.ownerDocument?.getElementById(label.for);
  if (!forComponentEl) {
    return;
  }
  requestAnimationFrame(() => {
    for (const labelable of unlabeledComponents) {
      if (labelable.el === forComponentEl) {
        connectLabel(labelable);
        break;
      }
    }
  });
}



//# sourceMappingURL=label-1c285d41.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsY2l0ZS1jb21wb25lbnRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2VzbV9jYWxjaXRlLXRleHQtYXJlYV9lbnRyeV9qcy5idW5kbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzZHO0FBQ1I7QUFDSjtBQUNQO0FBQ3lCO0FBQ3JEO0FBQytFO0FBQ2xCO0FBQ0M7QUFDN0U7QUFDUTtBQUN0QjtBQUNBO0FBQ047QUFDSTtBQUNDOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVDQUF1QyxlQUFlLHlCQUF5QixpQkFBaUIsd0NBQXdDLG1EQUFtRCxvQkFBb0IsTUFBTSxrQkFBa0IscUJBQXFCLGdCQUFnQixpQkFBaUIsU0FBUyxrQkFBa0IsV0FBVyxzQkFBc0IsY0FBYyxpQkFBaUIsaUJBQWlCLCtDQUErQyxtREFBbUQsdUNBQXVDLGtDQUFrQyxzQkFBc0IseURBQXlELHFDQUFxQyxTQUFTLGFBQWEsZUFBZSw2Q0FBNkMsa1BBQWtQLDRCQUE0QixpQkFBaUIsMkJBQTJCLG1CQUFtQixnREFBZ0Qsa0NBQWtDLHFEQUFxRCxrUEFBa1AseUJBQXlCLHNCQUFzQixRQUFRLHNCQUFzQixhQUFhLG1CQUFtQixpQkFBaUIsNkJBQTZCLG1CQUFtQiwrQ0FBK0MsbURBQW1ELGlCQUFpQixhQUFhLG1CQUFtQix5QkFBeUIsbUJBQW1CLDhDQUE4QyxrQ0FBa0MsdUJBQXVCLDRDQUE0Qyx5Q0FBeUMsOEJBQThCLFlBQVksb0NBQW9DLGtCQUFrQixrQ0FBa0MsZ0JBQWdCLGlCQUFpQixzQ0FBc0MseUJBQXlCLHNCQUFzQixzQkFBc0IsdUJBQXVCLDBCQUEw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O0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFOEs7O0FBRTlLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9lc20vY2FsY2l0ZS10ZXh0LWFyZWEuZW50cnkuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9lc20vY29tcG9uZW50LWY5NGNhYjcyLmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvZXNtL2xhYmVsLTFjMjg1ZDQxLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vRXNyaS9jYWxjaXRlLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYWluL0xJQ0VOU0UubWQgZm9yIGRldGFpbHMuXG4gKiB2Mi4wLjBcbiAqL1xuaW1wb3J0IHsgciBhcyByZWdpc3Rlckluc3RhbmNlLCBjIGFzIGNyZWF0ZUV2ZW50LCBoLCBIIGFzIEhvc3QsIGcgYXMgZ2V0RWxlbWVudCB9IGZyb20gJy4vaW5kZXgtODZmYWVmOWMuanMnO1xuaW1wb3J0IHsgYyBhcyBjb25uZWN0Rm9ybSwgZCBhcyBkaXNjb25uZWN0Rm9ybSwgSCBhcyBIaWRkZW5Gb3JtSW5wdXRTbG90IH0gZnJvbSAnLi9mb3JtLTQ4NzZjOWU1LmpzJztcbmltcG9ydCB7IGMgYXMgY29ubmVjdExhYmVsLCBkIGFzIGRpc2Nvbm5lY3RMYWJlbCwgZyBhcyBnZXRMYWJlbFRleHQgfSBmcm9tICcuL2xhYmVsLTFjMjg1ZDQxLmpzJztcbmltcG9ydCB7IGIgYXMgc2xvdENoYW5nZUhhc0Fzc2lnbmVkRWxlbWVudCwgdCBhcyB0b0FyaWFCb29sZWFuIH0gZnJvbSAnLi9kb20tZWQwMGE1ODUuanMnO1xuaW1wb3J0IHsgYyBhcyBjb25uZWN0TG9jYWxpemVkLCBkIGFzIGRpc2Nvbm5lY3RMb2NhbGl6ZWQsIG4gYXMgbnVtYmVyU3RyaW5nRm9ybWF0dGVyIH0gZnJvbSAnLi9sb2NhbGUtNmU3ODNjZjAuanMnO1xuaW1wb3J0IHsgYyBhcyBjcmVhdGVPYnNlcnZlciB9IGZyb20gJy4vb2JzZXJ2ZXJzLTcxZDMzMmRiLmpzJztcbmltcG9ydCB7IHMgYXMgc2V0VXBMb2FkYWJsZUNvbXBvbmVudCwgYSBhcyBzZXRDb21wb25lbnRMb2FkZWQsIGMgYXMgY29tcG9uZW50Rm9jdXNhYmxlLCBiIGFzIGNvbXBvbmVudExvYWRlZCB9IGZyb20gJy4vbG9hZGFibGUtYjE3Mzk2ZTAuanMnO1xuaW1wb3J0IHsgYyBhcyBjb25uZWN0TWVzc2FnZXMsIHMgYXMgc2V0VXBNZXNzYWdlcywgZCBhcyBkaXNjb25uZWN0TWVzc2FnZXMsIHUgYXMgdXBkYXRlTWVzc2FnZXMgfSBmcm9tICcuL3Q5bi0wYmNkY2E1NC5qcyc7XG5pbXBvcnQgeyBjIGFzIGNvbm5lY3RJbnRlcmFjdGl2ZSwgdSBhcyB1cGRhdGVIb3N0SW50ZXJhY3Rpb24sIGQgYXMgZGlzY29ubmVjdEludGVyYWN0aXZlIH0gZnJvbSAnLi9pbnRlcmFjdGl2ZS1jYmQ4YTZkYy5qcyc7XG5pbXBvcnQgeyBnIGFzIGd1aWQgfSBmcm9tICcuL2d1aWQtMjFmZWNmYTQuanMnO1xuaW1wb3J0IHsgdCBhcyB0aHJvdHRsZSB9IGZyb20gJy4vdGhyb3R0bGUtZjRkOGM5ZTQuanMnO1xuaW1wb3J0ICcuL2NvbXBvbmVudC1mOTRjYWI3Mi5qcyc7XG5pbXBvcnQgJy4vcmVzb3VyY2VzLWNmODIzODhjLmpzJztcbmltcG9ydCAnLi9rZXktNjFmODJkZGIuanMnO1xuaW1wb3J0ICcuL2Jyb3dzZXItZWNlMjlkYTcuanMnO1xuaW1wb3J0ICcuL2RlYm91bmNlLTg1OTU4YmIxLmpzJztcblxuY29uc3QgQ1NTID0ge1xuICBhc3Npc3RpdmVUZXh0OiBcImFzc2lzdGl2ZS10ZXh0XCIsXG4gIGNoYXJhY3RlckxpbWl0OiBcImNoYXJhY3Rlci1saW1pdFwiLFxuICBjb250ZW50OiBcImNvbnRlbnRcIixcbiAgY29udGFpbmVyOiBcImNvbnRhaW5lclwiLFxuICBmb290ZXI6IFwiZm9vdGVyXCIsXG4gIHJlc2l6ZURpc2FibGVkOiBcInJlc2l6ZS0tZGlzYWJsZWRcIixcbiAgcmVzaXplRGlzYWJsZWRYOiBcInJlc2l6ZS0tZGlzYWJsZWQteFwiLFxuICByZXNpemVEaXNhYmxlZFk6IFwicmVzaXplLS1kaXNhYmxlZC15XCIsXG4gIGNoYXJhY3Rlck92ZXJMaW1pdDogXCJjaGFyYWN0ZXItLW92ZXItbGltaXRcIixcbiAgcmVhZE9ubHk6IFwicmVhZG9ubHlcIixcbiAgdGV4dEFyZWFJbnZhbGlkOiBcInRleHQtYXJlYS0taW52YWxpZFwiLFxuICBmb290ZXJTbG90dGVkOiBcImZvb3Rlci0tc2xvdHRlZFwiLFxuICBib3JkZXJDb2xvcjogXCJib3JkZXItLWNvbG9yXCIsXG4gIGhpZGU6IFwiaGlkZVwiLFxuICBibG9ja1NpemVGdWxsOiBcImJsb2NrLXNpemUtLWZ1bGxcIixcbiAgZm9vdGVyRW5kU2xvdE9ubHk6IFwiZm9vdGVyLS1lbmQtb25seVwiLFxufTtcbmNvbnN0IFNMT1RTID0ge1xuICBmb290ZXJTdGFydDogXCJmb290ZXItc3RhcnRcIixcbiAgZm9vdGVyRW5kOiBcImZvb3Rlci1lbmRcIixcbn07XG5jb25zdCBSRVNJWkVfVElNRU9VVCA9IDEwMDtcblxuY29uc3QgdGV4dEFyZWFDc3MgPSBcIjpob3N0KFtkaXNhYmxlZF0pe2N1cnNvcjpkZWZhdWx0Oy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO29wYWNpdHk6dmFyKC0tY2FsY2l0ZS1vcGFjaXR5LWRpc2FibGVkKX06aG9zdChbZGlzYWJsZWRdKSAqLDpob3N0KFtkaXNhYmxlZF0pIDo6c2xvdHRlZCgqKXtwb2ludGVyLWV2ZW50czpub25lfTpob3N0e3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6aW5saW5lLWJsb2NrO2Jsb2NrLXNpemU6MTAwJTtpbmxpbmUtc2l6ZToxMDAlfXRleHRhcmVhe3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbjowcHg7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6YmxvY2s7aW5saW5lLXNpemU6MTAwJTtib3JkZXItd2lkdGg6MXB4O2JvcmRlci1jb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLWJvcmRlci1pbnB1dCk7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMSk7Zm9udC1mYW1pbHk6dmFyKC0tY2FsY2l0ZS1zYW5zLWZhbWlseSk7Y29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci10ZXh0LTEpO21pbi1pbmxpbmUtc2l6ZToxMnJlbTtib3JkZXItYmxvY2stZW5kOjFweCBzb2xpZCB2YXIoLS1jYWxjaXRlLWNvbG9yLWJvcmRlci0zKX1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7dGV4dGFyZWF7cmVzaXplOm5vbmV9fXRleHRhcmVhOmZvY3Vze291dGxpbmU6MnB4IHNvbGlkIHZhcigtLWNhbGNpdGUtY29sb3ItYnJhbmQpO291dGxpbmUtb2Zmc2V0OmNhbGMoXFxuICAgICAgICAgICAgLTJweCAqXFxuICAgICAgICAgICAgY2FsYyhcXG4gICAgICAgICAgICAgIDEgLVxcbiAgICAgICAgICAgICAgMiAqIGNsYW1wKFxcbiAgICAgICAgICAgICAgICAwLFxcbiAgICAgICAgICAgICAgICB2YXIoLS1jYWxjaXRlLW9mZnNldC1pbnZlcnQtZm9jdXMpLFxcbiAgICAgICAgICAgICAgICAxXFxuICAgICAgICAgICAgICApXFxuICAgICAgICAgICAgKVxcbiAgICAgICAgICApfXRleHRhcmVhLnRleHQtYXJlYS0taW52YWxpZHtib3JkZXItd2lkdGg6MXB4O2JvcmRlci1ibG9jay1lbmQtd2lkdGg6MXB4O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItY29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyKX10ZXh0YXJlYS50ZXh0LWFyZWEtLWludmFsaWQ6Zm9jdXN7b3V0bGluZToycHggc29saWQgdmFyKC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyKTtvdXRsaW5lLW9mZnNldDpjYWxjKFxcbiAgICAgICAgICAgIC0ycHggKlxcbiAgICAgICAgICAgIGNhbGMoXFxuICAgICAgICAgICAgICAxIC1cXG4gICAgICAgICAgICAgIDIgKiBjbGFtcChcXG4gICAgICAgICAgICAgICAgMCxcXG4gICAgICAgICAgICAgICAgdmFyKC0tY2FsY2l0ZS1vZmZzZXQtaW52ZXJ0LWZvY3VzKSxcXG4gICAgICAgICAgICAgICAgMVxcbiAgICAgICAgICAgICAgKVxcbiAgICAgICAgICAgIClcXG4gICAgICAgICAgKX10ZXh0YXJlYS5mb290ZXItLXNsb3R0ZWR7bWluLWlubGluZS1zaXplOjE4cmVtfS5mb290ZXJ7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7Ym9yZGVyLXdpZHRoOjFweDtib3JkZXItYmxvY2stc3RhcnQtd2lkdGg6MHB4O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItY29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItaW5wdXQpO2JhY2tncm91bmQtY29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTEpfS5jaGFyYWN0ZXItbGltaXR7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7d2hpdGUtc3BhY2U6bm93cmFwO2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbm9ybWFsKTtjb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLXRleHQtMil9LmNoYXJhY3Rlci0tb3Zlci1saW1pdHtmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWJvbGQpO2NvbG9yOnZhcigtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlcil9Omhvc3QoW3Jlc2l6ZT1ub25lXSkgdGV4dGFyZWF7cmVzaXplOm5vbmV9Omhvc3QoW3Jlc2l6ZT1ob3Jpem9udGFsXSkgdGV4dGFyZWF7cmVzaXplOmhvcml6b250YWx9Omhvc3QoW3Jlc2l6ZT12ZXJ0aWNhbF0pIHRleHRhcmVhe3Jlc2l6ZTp2ZXJ0aWNhbH06aG9zdChbc2NhbGU9c10pe2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0tMil9Omhvc3QoW3NjYWxlPXNdKSAuZm9vdGVye3BhZGRpbmctYmxvY2s6MC4yNXJlbTtwYWRkaW5nLWlubGluZTowLjVyZW07bWluLWJsb2NrLXNpemU6MS43NXJlbX06aG9zdChbc2NhbGU9c10pIHRleHRhcmVhe3BhZGRpbmctYmxvY2s6MC4yNXJlbTtwYWRkaW5nLWlubGluZTowLjVyZW19Omhvc3QoW3NjYWxlPXNdKSB0ZXh0YXJlYSw6aG9zdChbc2NhbGU9c10pIC5mb290ZXIsOmhvc3QoW3NjYWxlPXNdKSAuY2hhcmFjdGVyLWxpbWl0e3BhZGRpbmctaW5saW5lLXN0YXJ0OjAuNXJlbTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtLTIpfTpob3N0KFtzY2FsZT1tXSkgdGV4dGFyZWF7cGFkZGluZy1ibG9jazowLjVyZW07cGFkZGluZy1pbmxpbmU6MC43NXJlbX06aG9zdChbc2NhbGU9bV0pIC5mb290ZXJ7cGFkZGluZy1ibG9jazowLjVyZW07cGFkZGluZy1pbmxpbmU6MC43NXJlbTttaW4tYmxvY2stc2l6ZToyLjI1cmVtfTpob3N0KFtzY2FsZT1tXSkgdGV4dGFyZWEsOmhvc3QoW3NjYWxlPW1dKSAuZm9vdGVyLDpob3N0KFtzY2FsZT1tXSkgLmNoYXJhY3Rlci1saW1pdHtwYWRkaW5nLWlubGluZS1zdGFydDowLjc1cmVtO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0tMSl9Omhvc3QoW3NjYWxlPWxdKXtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtMCl9Omhvc3QoW3NjYWxlPWxdKSB0ZXh0YXJlYXtwYWRkaW5nLWJsb2NrOjAuNzVyZW07cGFkZGluZy1pbmxpbmU6MXJlbX06aG9zdChbc2NhbGU9bF0pIC5mb290ZXJ7cGFkZGluZy1ibG9jazowLjc1cmVtO3BhZGRpbmctaW5saW5lOjFyZW07bWluLWJsb2NrLXNpemU6Mi43NXJlbX06aG9zdChbc2NhbGU9bF0pIHRleHRhcmVhLDpob3N0KFtzY2FsZT1sXSkgLmZvb3Rlciw6aG9zdChbc2NhbGU9bF0pIC5jaGFyYWN0ZXItbGltaXR7cGFkZGluZy1pbmxpbmUtc3RhcnQ6MXJlbTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtMCl9Omhvc3QoW3N0YXR1cz1pbnZhbGlkXSkgdGV4dGFyZWF7Ym9yZGVyLWNvbG9yOnZhcigtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlcil9Omhvc3QoW3N0YXR1cz1pbnZhbGlkXSkgdGV4dGFyZWE6Zm9jdXN7b3V0bGluZToycHggc29saWQgdmFyKC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyKTtvdXRsaW5lLW9mZnNldDpjYWxjKFxcbiAgICAgICAgICAgIC0ycHggKlxcbiAgICAgICAgICAgIGNhbGMoXFxuICAgICAgICAgICAgICAxIC1cXG4gICAgICAgICAgICAgIDIgKiBjbGFtcChcXG4gICAgICAgICAgICAgICAgMCxcXG4gICAgICAgICAgICAgICAgdmFyKC0tY2FsY2l0ZS1vZmZzZXQtaW52ZXJ0LWZvY3VzKSxcXG4gICAgICAgICAgICAgICAgMVxcbiAgICAgICAgICAgICAgKVxcbiAgICAgICAgICAgIClcXG4gICAgICAgICAgKX0ucmVhZG9ubHl7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLWJhY2tncm91bmQpO2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKX06aG9zdChbZGlzYWJsZWRdKSB0ZXh0YXJlYSw6aG9zdChbZGlzYWJsZWRdKSBmb290ZXJ7b3BhY2l0eTowLjV9LmJvcmRlci0tY29sb3J7Ym9yZGVyLWJsb2NrLWVuZC13aWR0aDoxcHg7Ym9yZGVyLWNvbG9yOnZhcigtLWNhbGNpdGUtY29sb3ItYm9yZGVyLWlucHV0KX0uYm9yZGVyLS1jb2xvcjpmb2N1c3tib3JkZXItYmxvY2stZW5kLXdpZHRoOjJweH10ZXh0YXJlYS5ibG9jay1zaXplLS1mdWxse2Jsb2NrLXNpemU6MTAwJX0uY29udGVudCwuaGlkZXtkaXNwbGF5Om5vbmV9LmNvbnRhaW5lcntkaXNwbGF5OmZsZXg7aW5saW5lLXNpemU6MTAwJTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0uZm9vdGVyLS1lbmQtb25seXtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmR9LmFzc2lzdGl2ZS10ZXh0e3Bvc2l0aW9uOmFic29sdXRlO2lubGluZS1zaXplOjFweDtibG9jay1zaXplOjFweDtwYWRkaW5nOjA7bWFyZ2luOi0xcHg7b3ZlcmZsb3c6aGlkZGVuO2NsaXA6cmVjdCgwLCAwLCAwLCAwKTt3aGl0ZS1zcGFjZTpub3dyYXA7Ym9yZGVyLXdpZHRoOjB9OjpzbG90dGVkKGlucHV0W3Nsb3Q9aGlkZGVuLWZvcm0taW5wdXRdKXttYXJnaW46MCAhaW1wb3J0YW50O29wYWNpdHk6MCAhaW1wb3J0YW50O291dGxpbmU6bm9uZSAhaW1wb3J0YW50O3BhZGRpbmc6MCAhaW1wb3J0YW50O3Bvc2l0aW9uOmFic29sdXRlICFpbXBvcnRhbnQ7aW5zZXQ6MCAhaW1wb3J0YW50O3RyYW5zZm9ybTpub25lICFpbXBvcnRhbnQ7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUgIWltcG9ydGFudDt6LWluZGV4Oi0xICFpbXBvcnRhbnR9Omhvc3QoW2Rpc2FibGVkXSkgOjpzbG90dGVkKFtjYWxjaXRlLWh5ZHJhdGVkXVtkaXNhYmxlZF0pLDpob3N0KFtkaXNhYmxlZF0pIFtjYWxjaXRlLWh5ZHJhdGVkXVtkaXNhYmxlZF17b3BhY2l0eToxfTpob3N0KFtoaWRkZW5dKXtkaXNwbGF5Om5vbmV9W2hpZGRlbl17ZGlzcGxheTpub25lfVwiO1xuXG5jb25zdCBUZXh0QXJlYSA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoaG9zdFJlZikge1xuICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgaG9zdFJlZik7XG4gICAgdGhpcy5jYWxjaXRlVGV4dEFyZWFJbnB1dCA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiY2FsY2l0ZVRleHRBcmVhSW5wdXRcIiwgNyk7XG4gICAgdGhpcy5jYWxjaXRlVGV4dEFyZWFDaGFuZ2UgPSBjcmVhdGVFdmVudCh0aGlzLCBcImNhbGNpdGVUZXh0QXJlYUNoYW5nZVwiLCA3KTtcbiAgICB0aGlzLmd1aWQgPSBndWlkKCk7XG4gICAgdGhpcy5oYW5kbGVJbnB1dCA9IChldmVudCkgPT4ge1xuICAgICAgdGhpcy52YWx1ZSA9IGV2ZW50LnRhcmdldFtcInZhbHVlXCJdO1xuICAgICAgdGhpcy5jYWxjaXRlVGV4dEFyZWFJbnB1dC5lbWl0KCk7XG4gICAgfTtcbiAgICB0aGlzLmhhbmRsZUNoYW5nZSA9ICgpID0+IHtcbiAgICAgIHRoaXMuY2FsY2l0ZVRleHRBcmVhQ2hhbmdlLmVtaXQoKTtcbiAgICB9O1xuICAgIHRoaXMuY29udGVudFNsb3RDaGFuZ2VIYW5kbGVyID0gKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLnZhbHVlKSB7XG4gICAgICAgIGNvbnN0IG5vZGVzID0gdGhpcy5lbC5jaGlsZE5vZGVzO1xuICAgICAgICBub2Rlcy5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgICAgIGlmIChlbC5ub2RlTmFtZSA9PT0gXCIjdGV4dFwiKSB7XG4gICAgICAgICAgICB0aGlzLnZhbHVlID0gZWwubm9kZVZhbHVlLnRyaW0oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5yZW5kZXJDaGFyYWN0ZXJMaW1pdCA9ICgpID0+IHtcbiAgICAgIGlmICh0aGlzLm1heExlbmd0aCkge1xuICAgICAgICB0aGlzLmxvY2FsaXplZENoYXJhY3Rlckxlbmd0aE9iaiA9IHRoaXMuZ2V0TG9jYWxpemVkQ2hhcmFjdGVyTGVuZ3RoKCk7XG4gICAgICAgIHJldHVybiAoaChcInNwYW5cIiwgeyBjbGFzczogQ1NTLmNoYXJhY3RlckxpbWl0IH0sIGgoXCJzcGFuXCIsIHsgY2xhc3M6IHsgW0NTUy5jaGFyYWN0ZXJPdmVyTGltaXRdOiB0aGlzLmlzQ2hhcmFjdGVyTGltaXRFeGNlZWRlZCgpIH0gfSwgdGhpcy5sb2NhbGl6ZWRDaGFyYWN0ZXJMZW5ndGhPYmouY3VycmVudExlbmd0aCksIFwiL1wiLCB0aGlzLmxvY2FsaXplZENoYXJhY3Rlckxlbmd0aE9iai5tYXhMZW5ndGgpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgdGhpcy5yZXNpemVPYnNlcnZlciA9IGNyZWF0ZU9ic2VydmVyKFwicmVzaXplXCIsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGNvbXBvbmVudExvYWRlZCh0aGlzKTtcbiAgICAgIGNvbnN0IHsgdGV4dEFyZWFIZWlnaHQsIHRleHRBcmVhV2lkdGgsIGVsSGVpZ2h0LCBlbFdpZHRoLCBmb290ZXJIZWlnaHQsIGZvb3RlcldpZHRoIH0gPSB0aGlzLmdldEhlaWdodEFuZFdpZHRoT2ZFbGVtZW50cygpO1xuICAgICAgaWYgKGZvb3RlcldpZHRoID4gMCAmJiBmb290ZXJXaWR0aCAhPT0gdGV4dEFyZWFXaWR0aCkge1xuICAgICAgICB0aGlzLmZvb3RlckVsLnN0eWxlLndpZHRoID0gYCR7dGV4dEFyZWFXaWR0aH1weGA7XG4gICAgICB9XG4gICAgICBpZiAoZWxXaWR0aCAhPT0gdGV4dEFyZWFXaWR0aCB8fCBlbEhlaWdodCAhPT0gdGV4dEFyZWFIZWlnaHQgKyAoZm9vdGVySGVpZ2h0IHx8IDApKSB7XG4gICAgICAgIHRoaXMuc2V0SGVpZ2h0QW5kV2lkdGhUb0F1dG8oKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnNldFRleHRBcmVhRWwgPSAoZWwpID0+IHtcbiAgICAgIHRoaXMudGV4dEFyZWFFbCA9IGVsO1xuICAgICAgdGhpcy5yZXNpemVPYnNlcnZlci5vYnNlcnZlKGVsKTtcbiAgICB9O1xuICAgIC8vIGhlaWdodCBhbmQgd2lkdGggYXJlIHNldCB0byBhdXRvIGhlcmUgdG8gYXZvaWQgb3ZlcmxhcHBpbmcgb24gdG8gbmVpZ2hib3JpbmcgZWxlbWVudHMgaW4gdGhlIGxheW91dCB3aGVuIHVzZXIgc3RhcnRzIHJlc2l6aW5nLlxuICAgIC8vIHRocm90dGxlIGlzIHVzZWQgdG8gYXZvaWQgZmxhc2hpbmcgb2YgdGV4dGFyZWEgd2hlbiB1c2VyIHJlc2l6ZXMuXG4gICAgdGhpcy5zZXRIZWlnaHRBbmRXaWR0aFRvQXV0byA9IHRocm90dGxlKCgpID0+IHtcbiAgICAgIGlmICh0aGlzLnJlc2l6ZSA9PT0gXCJ2ZXJ0aWNhbFwiIHx8IHRoaXMucmVzaXplID09PSBcImJvdGhcIikge1xuICAgICAgICB0aGlzLmVsLnN0eWxlLmhlaWdodCA9IFwiYXV0b1wiO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMucmVzaXplID09PSBcImhvcml6b250YWxcIiB8fCB0aGlzLnJlc2l6ZSA9PT0gXCJib3RoXCIpIHtcbiAgICAgICAgdGhpcy5lbC5zdHlsZS53aWR0aCA9IFwiYXV0b1wiO1xuICAgICAgfVxuICAgIH0sIFJFU0laRV9USU1FT1VULCB7IGxlYWRpbmc6IGZhbHNlIH0pO1xuICAgIHRoaXMuYXV0b2ZvY3VzID0gZmFsc2U7XG4gICAgdGhpcy5jb2x1bW5zID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmZvcm0gPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5ncm91cFNlcGFyYXRvciA9IGZhbHNlO1xuICAgIHRoaXMubGFiZWwgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5tYXhMZW5ndGggPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5tZXNzYWdlcyA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLm5hbWUgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5udW1iZXJpbmdTeXN0ZW0gPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5wbGFjZWhvbGRlciA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnJlYWRPbmx5ID0gZmFsc2U7XG4gICAgdGhpcy5yZXF1aXJlZCA9IGZhbHNlO1xuICAgIHRoaXMucmVzaXplID0gXCJib3RoXCI7XG4gICAgdGhpcy5yb3dzID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuc2NhbGUgPSBcIm1cIjtcbiAgICB0aGlzLnN0YXR1cyA9IFwiaWRsZVwiO1xuICAgIHRoaXMudmFsdWUgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy53cmFwID0gXCJzb2Z0XCI7XG4gICAgdGhpcy5tZXNzYWdlT3ZlcnJpZGVzID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuZGVmYXVsdE1lc3NhZ2VzID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuZW5kU2xvdEhhc0VsZW1lbnRzID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuc3RhcnRTbG90SGFzRWxlbWVudHMgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5lZmZlY3RpdmVMb2NhbGUgPSBcIlwiO1xuICAgIHRoaXMubG9jYWxpemVkQ2hhcmFjdGVyTGVuZ3RoT2JqID0gdW5kZWZpbmVkO1xuICB9XG4gIG9uTWVzc2FnZXNDaGFuZ2UoKSB7XG4gICAgLyogd2lyZWQgdXAgYnkgdDluIHV0aWwgKi9cbiAgfVxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vXG4gIC8vICBMaWZlY3ljbGVcbiAgLy9cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBjb25uZWN0SW50ZXJhY3RpdmUodGhpcyk7XG4gICAgY29ubmVjdExhYmVsKHRoaXMpO1xuICAgIGNvbm5lY3RGb3JtKHRoaXMpO1xuICAgIGNvbm5lY3RMb2NhbGl6ZWQodGhpcyk7XG4gICAgY29ubmVjdE1lc3NhZ2VzKHRoaXMpO1xuICB9XG4gIGFzeW5jIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgIHNldFVwTG9hZGFibGVDb21wb25lbnQodGhpcyk7XG4gICAgYXdhaXQgc2V0VXBNZXNzYWdlcyh0aGlzKTtcbiAgfVxuICBjb21wb25lbnREaWRMb2FkKCkge1xuICAgIHNldENvbXBvbmVudExvYWRlZCh0aGlzKTtcbiAgfVxuICBjb21wb25lbnREaWRSZW5kZXIoKSB7XG4gICAgdXBkYXRlSG9zdEludGVyYWN0aW9uKHRoaXMpO1xuICAgIHRoaXMuc2V0VGV4dEFyZWFIZWlnaHQoKTtcbiAgfVxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBkaXNjb25uZWN0SW50ZXJhY3RpdmUodGhpcyk7XG4gICAgZGlzY29ubmVjdExhYmVsKHRoaXMpO1xuICAgIGRpc2Nvbm5lY3RGb3JtKHRoaXMpO1xuICAgIGRpc2Nvbm5lY3RMb2NhbGl6ZWQodGhpcyk7XG4gICAgZGlzY29ubmVjdE1lc3NhZ2VzKHRoaXMpO1xuICAgIHRoaXMucmVzaXplT2JzZXJ2ZXI/LmRpc2Nvbm5lY3QoKTtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgaGFzRm9vdGVyID0gdGhpcy5zdGFydFNsb3RIYXNFbGVtZW50cyB8fCB0aGlzLmVuZFNsb3RIYXNFbGVtZW50cyB8fCAhIXRoaXMubWF4TGVuZ3RoO1xuICAgIHJldHVybiAoaChIb3N0LCBudWxsLCBoKFwidGV4dGFyZWFcIiwgeyBcImFyaWEtZGVzY3JpYmVkYnlcIjogdGhpcy5ndWlkLCBcImFyaWEtaW52YWxpZFwiOiB0b0FyaWFCb29sZWFuKHRoaXMuaXNDaGFyYWN0ZXJMaW1pdEV4Y2VlZGVkKCkpLCBcImFyaWEtbGFiZWxcIjogZ2V0TGFiZWxUZXh0KHRoaXMpLCBhdXRvZm9jdXM6IHRoaXMuYXV0b2ZvY3VzLCBjbGFzczoge1xuICAgICAgICBbQ1NTLnJlYWRPbmx5XTogdGhpcy5yZWFkT25seSxcbiAgICAgICAgW0NTUy50ZXh0QXJlYUludmFsaWRdOiB0aGlzLmlzQ2hhcmFjdGVyTGltaXRFeGNlZWRlZCgpLFxuICAgICAgICBbQ1NTLmZvb3RlclNsb3R0ZWRdOiB0aGlzLmVuZFNsb3RIYXNFbGVtZW50cyAmJiB0aGlzLnN0YXJ0U2xvdEhhc0VsZW1lbnRzLFxuICAgICAgICBbQ1NTLmJsb2NrU2l6ZUZ1bGxdOiAhaGFzRm9vdGVyLFxuICAgICAgICBbQ1NTLmJvcmRlckNvbG9yXTogIWhhc0Zvb3RlcixcbiAgICAgIH0sIGNvbHM6IHRoaXMuY29sdW1ucywgZGlzYWJsZWQ6IHRoaXMuZGlzYWJsZWQsIG5hbWU6IHRoaXMubmFtZSwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlLCBvbklucHV0OiB0aGlzLmhhbmRsZUlucHV0LCBwbGFjZWhvbGRlcjogdGhpcy5wbGFjZWhvbGRlciwgcmVhZG9ubHk6IHRoaXMucmVhZE9ubHksIHJlcXVpcmVkOiB0aGlzLnJlcXVpcmVkLCByb3dzOiB0aGlzLnJvd3MsIHZhbHVlOiB0aGlzLnZhbHVlLCB3cmFwOiB0aGlzLndyYXAsXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvanN4LXNvcnQtcHJvcHMgLS0gcmVmIHNob3VsZCBiZSBsYXN0IHNvIG5vZGUgYXR0cnMvcHJvcHMgYXJlIGluIHN5bmMgKHNlZSBodHRwczovL2dpdGh1Yi5jb20vRXNyaS9jYWxjaXRlLWRlc2lnbi1zeXN0ZW0vcHVsbC82NTMwKVxuICAgICAgcmVmOiB0aGlzLnNldFRleHRBcmVhRWwgfSksIGgoXCJzcGFuXCIsIHsgY2xhc3M6IHsgW0NTUy5jb250ZW50XTogdHJ1ZSB9IH0sIGgoXCJzbG90XCIsIHsgb25TbG90Y2hhbmdlOiB0aGlzLmNvbnRlbnRTbG90Q2hhbmdlSGFuZGxlciB9KSksIGgoXCJmb290ZXJcIiwgeyBjbGFzczoge1xuICAgICAgICBbQ1NTLmZvb3Rlcl06IHRydWUsXG4gICAgICAgIFtDU1MucmVhZE9ubHldOiB0aGlzLnJlYWRPbmx5LFxuICAgICAgICBbQ1NTLmhpZGVdOiAhaGFzRm9vdGVyLFxuICAgICAgfSwgcmVmOiAoZWwpID0+ICh0aGlzLmZvb3RlckVsID0gZWwpIH0sIGgoXCJkaXZcIiwgeyBjbGFzczoge1xuICAgICAgICBbQ1NTLmNvbnRhaW5lcl06IHRydWUsXG4gICAgICAgIFtDU1MuZm9vdGVyRW5kU2xvdE9ubHldOiAhdGhpcy5zdGFydFNsb3RIYXNFbGVtZW50cyAmJiB0aGlzLmVuZFNsb3RIYXNFbGVtZW50cyxcbiAgICAgIH0gfSwgaChcInNsb3RcIiwgeyBuYW1lOiBTTE9UUy5mb290ZXJTdGFydCwgb25TbG90Y2hhbmdlOiAoZXZlbnQpID0+ICh0aGlzLnN0YXJ0U2xvdEhhc0VsZW1lbnRzID0gc2xvdENoYW5nZUhhc0Fzc2lnbmVkRWxlbWVudChldmVudCkpIH0pLCBoKFwic2xvdFwiLCB7IG5hbWU6IFNMT1RTLmZvb3RlckVuZCwgb25TbG90Y2hhbmdlOiAoZXZlbnQpID0+ICh0aGlzLmVuZFNsb3RIYXNFbGVtZW50cyA9IHNsb3RDaGFuZ2VIYXNBc3NpZ25lZEVsZW1lbnQoZXZlbnQpKSB9KSksIHRoaXMucmVuZGVyQ2hhcmFjdGVyTGltaXQoKSksIGgoSGlkZGVuRm9ybUlucHV0U2xvdCwgeyBjb21wb25lbnQ6IHRoaXMgfSksIHRoaXMuaXNDaGFyYWN0ZXJMaW1pdEV4Y2VlZGVkKCkgJiYgKGgoXCJzcGFuXCIsIHsgXCJhcmlhLWhpZGRlblwiOiB0cnVlLCBcImFyaWEtbGl2ZVwiOiBcInBvbGl0ZVwiLCBjbGFzczogQ1NTLmFzc2lzdGl2ZVRleHQsIGlkOiB0aGlzLmd1aWQgfSwgdGhpcy5yZXBsYWNlUGxhY2VIb2xkZXJzSW5NZXNzYWdlcygpKSkpKTtcbiAgfVxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vXG4gIC8vICBQdWJsaWMgTWV0aG9kc1xuICAvL1xuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKiBTZXRzIGZvY3VzIG9uIHRoZSBjb21wb25lbnQuICovXG4gIGFzeW5jIHNldEZvY3VzKCkge1xuICAgIGF3YWl0IGNvbXBvbmVudEZvY3VzYWJsZSh0aGlzKTtcbiAgICB0aGlzLnRleHRBcmVhRWwuZm9jdXMoKTtcbiAgfVxuICAvKiogU2VsZWN0cyB0aGUgdGV4dCBvZiB0aGUgY29tcG9uZW50J3MgYHZhbHVlYC4gKi9cbiAgYXN5bmMgc2VsZWN0VGV4dCgpIHtcbiAgICBhd2FpdCBjb21wb25lbnRMb2FkZWQodGhpcyk7XG4gICAgdGhpcy50ZXh0QXJlYUVsLnNlbGVjdCgpO1xuICB9XG4gIGVmZmVjdGl2ZUxvY2FsZUNoYW5nZSgpIHtcbiAgICB1cGRhdGVNZXNzYWdlcyh0aGlzLCB0aGlzLmVmZmVjdGl2ZUxvY2FsZSk7XG4gIH1cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvL1xuICAvLyAgUHJpdmF0ZSBNZXRob2RzXG4gIC8vXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgb25Gb3JtUmVzZXQoKSB7XG4gICAgdGhpcy52YWx1ZSA9IHRoaXMuZGVmYXVsdFZhbHVlO1xuICB9XG4gIG9uTGFiZWxDbGljaygpIHtcbiAgICB0aGlzLnNldEZvY3VzKCk7XG4gIH1cbiAgZ2V0TG9jYWxpemVkQ2hhcmFjdGVyTGVuZ3RoKCkge1xuICAgIGNvbnN0IGN1cnJlbnRMZW5ndGggPSB0aGlzLnZhbHVlID8gdGhpcy52YWx1ZS5sZW5ndGgudG9TdHJpbmcoKSA6IFwiMFwiO1xuICAgIGNvbnN0IG1heExlbmd0aCA9IHRoaXMubWF4TGVuZ3RoLnRvU3RyaW5nKCk7XG4gICAgaWYgKHRoaXMubnVtYmVyaW5nU3lzdGVtID09PSBcImxhdG5cIikge1xuICAgICAgcmV0dXJuIHsgY3VycmVudExlbmd0aCwgbWF4TGVuZ3RoIH07XG4gICAgfVxuICAgIG51bWJlclN0cmluZ0Zvcm1hdHRlci5udW1iZXJGb3JtYXRPcHRpb25zID0ge1xuICAgICAgbG9jYWxlOiB0aGlzLmVmZmVjdGl2ZUxvY2FsZSxcbiAgICAgIG51bWJlcmluZ1N5c3RlbTogdGhpcy5udW1iZXJpbmdTeXN0ZW0sXG4gICAgICBzaWduRGlzcGxheTogXCJuZXZlclwiLFxuICAgICAgdXNlR3JvdXBpbmc6IHRoaXMuZ3JvdXBTZXBhcmF0b3IsXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgY3VycmVudExlbmd0aDogbnVtYmVyU3RyaW5nRm9ybWF0dGVyLmxvY2FsaXplKGN1cnJlbnRMZW5ndGgpLFxuICAgICAgbWF4TGVuZ3RoOiBudW1iZXJTdHJpbmdGb3JtYXR0ZXIubG9jYWxpemUobWF4TGVuZ3RoKSxcbiAgICB9O1xuICB9XG4gIHN5bmNIaWRkZW5Gb3JtSW5wdXQoaW5wdXQpIHtcbiAgICBpbnB1dC5zZXRDdXN0b21WYWxpZGl0eShcIlwiKTtcbiAgICBpZiAodGhpcy5pc0NoYXJhY3RlckxpbWl0RXhjZWVkZWQoKSkge1xuICAgICAgaW5wdXQuc2V0Q3VzdG9tVmFsaWRpdHkodGhpcy5yZXBsYWNlUGxhY2VIb2xkZXJzSW5NZXNzYWdlcygpKTtcbiAgICB9XG4gIH1cbiAgc2V0VGV4dEFyZWFIZWlnaHQoKSB7XG4gICAgY29uc3QgeyB0ZXh0QXJlYUhlaWdodCwgZWxIZWlnaHQsIGZvb3RlckhlaWdodCB9ID0gdGhpcy5nZXRIZWlnaHRBbmRXaWR0aE9mRWxlbWVudHMoKTtcbiAgICBpZiAoZm9vdGVySGVpZ2h0ID4gMCAmJiB0ZXh0QXJlYUhlaWdodCArIGZvb3RlckhlaWdodCAhPSBlbEhlaWdodCkge1xuICAgICAgdGhpcy50ZXh0QXJlYUVsLnN0eWxlLmhlaWdodCA9IGAke2VsSGVpZ2h0IC0gZm9vdGVySGVpZ2h0fXB4YDtcbiAgICB9XG4gIH1cbiAgZ2V0SGVpZ2h0QW5kV2lkdGhPZkVsZW1lbnRzKCkge1xuICAgIGNvbnN0IHsgaGVpZ2h0OiB0ZXh0QXJlYUhlaWdodCwgd2lkdGg6IHRleHRBcmVhV2lkdGggfSA9IHRoaXMudGV4dEFyZWFFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCB7IGhlaWdodDogZWxIZWlnaHQsIHdpZHRoOiBlbFdpZHRoIH0gPSB0aGlzLmVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IHsgaGVpZ2h0OiBmb290ZXJIZWlnaHQsIHdpZHRoOiBmb290ZXJXaWR0aCB9ID0gdGhpcy5mb290ZXJFbD8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRleHRBcmVhSGVpZ2h0LFxuICAgICAgdGV4dEFyZWFXaWR0aCxcbiAgICAgIGVsSGVpZ2h0LFxuICAgICAgZWxXaWR0aCxcbiAgICAgIGZvb3RlckhlaWdodCxcbiAgICAgIGZvb3RlcldpZHRoLFxuICAgIH07XG4gIH1cbiAgcmVwbGFjZVBsYWNlSG9sZGVyc0luTWVzc2FnZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMubWVzc2FnZXMudG9vTG9uZ1xuICAgICAgLnJlcGxhY2UoXCJ7bWF4TGVuZ3RofVwiLCB0aGlzLmxvY2FsaXplZENoYXJhY3Rlckxlbmd0aE9iai5tYXhMZW5ndGgpXG4gICAgICAucmVwbGFjZShcIntjdXJyZW50TGVuZ3RofVwiLCB0aGlzLmxvY2FsaXplZENoYXJhY3Rlckxlbmd0aE9iai5jdXJyZW50TGVuZ3RoKTtcbiAgfVxuICBpc0NoYXJhY3RlckxpbWl0RXhjZWVkZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWU/Lmxlbmd0aCA+IHRoaXMubWF4TGVuZ3RoO1xuICB9XG4gIHN0YXRpYyBnZXQgYXNzZXRzRGlycygpIHsgcmV0dXJuIFtcImFzc2V0c1wiXTsgfVxuICBnZXQgZWwoKSB7IHJldHVybiBnZXRFbGVtZW50KHRoaXMpOyB9XG4gIHN0YXRpYyBnZXQgd2F0Y2hlcnMoKSB7IHJldHVybiB7XG4gICAgXCJtZXNzYWdlT3ZlcnJpZGVzXCI6IFtcIm9uTWVzc2FnZXNDaGFuZ2VcIl0sXG4gICAgXCJlZmZlY3RpdmVMb2NhbGVcIjogW1wiZWZmZWN0aXZlTG9jYWxlQ2hhbmdlXCJdXG4gIH07IH1cbn07XG5UZXh0QXJlYS5zdHlsZSA9IHRleHRBcmVhQ3NzO1xuXG5leHBvcnQgeyBUZXh0QXJlYSBhcyBjYWxjaXRlX3RleHRfYXJlYSB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxjaXRlLXRleHQtYXJlYS5lbnRyeS5qcy5tYXAiLCIvKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9MSUNFTlNFLm1kIGZvciBkZXRhaWxzLlxuICogdjIuMC4wXG4gKi9cbmZ1bmN0aW9uIGdldEljb25TY2FsZShjb21wb25lbnRTY2FsZSkge1xuICByZXR1cm4gY29tcG9uZW50U2NhbGUgPT09IFwibFwiID8gXCJtXCIgOiBcInNcIjtcbn1cbi8qKlxuICogVGhpcyB1dGlsIGhlbHBzIHVzIHdhaXQgZm9yIGEgY29tcG9uZW50IHRvIGJlIHJlYWR5IGZvciBib3RoIGxhenktbG9hZGluZyAoYGRpc3RgIG91dHB1dCkgYW5kIG5vbi1sYXp5LWxvYWRpbmcgKGBjb21wb25lbnRzYCBvdXRwdXQpIGNvbXBvbmVudHMuXG4gKlxuICogQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2lvbmljLXRlYW0vaW9uaWMtZnJhbWV3b3JrL2Jsb2IvMWE4YmQ2ZC9jb3JlL3NyYy91dGlscy9oZWxwZXJzLnRzI0w2MEMxLUw3OUMzXG4gKlxuICogQHBhcmFtIGVsIC0gdGhlIGhvc3QgZWxlbWVudCB0byB3YWl0IGZvclxuICovXG5hc3luYyBmdW5jdGlvbiBjb21wb25lbnRPblJlYWR5KGVsKSB7XG4gIGF3YWl0IChpc1N0ZW5jaWxFbChlbClcbiAgICA/IGVsLmNvbXBvbmVudE9uUmVhZHkoKVxuICAgIDogbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiByZXNvbHZlKCkpKSk7XG59XG5mdW5jdGlvbiBpc1N0ZW5jaWxFbChlbCkge1xuICByZXR1cm4gdHlwZW9mIGVsLmNvbXBvbmVudE9uUmVhZHkgPT09IFwiZnVuY3Rpb25cIjtcbn1cblxuZXhwb3J0IHsgY29tcG9uZW50T25SZWFkeSBhcyBjLCBnZXRJY29uU2NhbGUgYXMgZyB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wb25lbnQtZjk0Y2FiNzIuanMubWFwIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9Fc3JpL2NhbGNpdGUtZGVzaWduLXN5c3RlbS9ibG9iL21haW4vTElDRU5TRS5tZCBmb3IgZGV0YWlscy5cbiAqIHYyLjAuMFxuICovXG5pbXBvcnQgeyBrIGFzIGlzQmVmb3JlLCBxIGFzIHF1ZXJ5RWxlbWVudFJvb3RzLCBjIGFzIGNsb3Nlc3RFbGVtZW50Q3Jvc3NTaGFkb3dCb3VuZGFyeSB9IGZyb20gJy4vZG9tLWVkMDBhNTg1LmpzJztcbmltcG9ydCB7IGMgYXMgY29tcG9uZW50T25SZWFkeSB9IGZyb20gJy4vY29tcG9uZW50LWY5NGNhYjcyLmpzJztcblxuLyoqXG4gKiBFeHBvcnRlZCBmb3IgdGVzdGluZyBwdXJwb3NlcyBvbmx5XG4gKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IGxhYmVsQ2xpY2tFdmVudCA9IFwiY2FsY2l0ZUludGVybmFsTGFiZWxDbGlja1wiO1xuY29uc3QgbGFiZWxDb25uZWN0ZWRFdmVudCA9IFwiY2FsY2l0ZUludGVybmFsTGFiZWxDb25uZWN0ZWRcIjtcbmNvbnN0IGxhYmVsRGlzY29ubmVjdGVkRXZlbnQgPSBcImNhbGNpdGVJbnRlcm5hbExhYmVsRGlzY29ubmVjdGVkXCI7XG5jb25zdCBsYWJlbFRhZ05hbWUgPSBcImNhbGNpdGUtbGFiZWxcIjtcbmNvbnN0IGxhYmVsVG9MYWJlbGFibGVzID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IG9uTGFiZWxDbGlja01hcCA9IG5ldyBXZWFrTWFwKCk7XG5jb25zdCBvbkxhYmVsQ29ubmVjdGVkTWFwID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IG9uTGFiZWxEaXNjb25uZWN0ZWRNYXAgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgdW5sYWJlbGVkQ29tcG9uZW50cyA9IG5ldyBTZXQoKTtcbmNvbnN0IGZpbmRMYWJlbEZvckNvbXBvbmVudCA9IChjb21wb25lbnRFbCkgPT4ge1xuICBjb25zdCB7IGlkIH0gPSBjb21wb25lbnRFbDtcbiAgY29uc3QgZm9yTGFiZWwgPSBpZCAmJiBxdWVyeUVsZW1lbnRSb290cyhjb21wb25lbnRFbCwgeyBzZWxlY3RvcjogYCR7bGFiZWxUYWdOYW1lfVtmb3I9XCIke2lkfVwiXWAgfSk7XG4gIGlmIChmb3JMYWJlbCkge1xuICAgIHJldHVybiBmb3JMYWJlbDtcbiAgfVxuICBjb25zdCBwYXJlbnRMYWJlbCA9IGNsb3Nlc3RFbGVtZW50Q3Jvc3NTaGFkb3dCb3VuZGFyeShjb21wb25lbnRFbCwgbGFiZWxUYWdOYW1lKTtcbiAgaWYgKCFwYXJlbnRMYWJlbCB8fFxuICAgIC8vIGxhYmVsYWJsZSBjb21wb25lbnRzIHdpdGhpbiBvdGhlciBjdXN0b20gZWxlbWVudHMgYXJlIG5vdCBjb25zaWRlcmVkIGxhYmVsYWJsZVxuICAgIGhhc0FuY2VzdG9yQ3VzdG9tRWxlbWVudHMocGFyZW50TGFiZWwsIGNvbXBvbmVudEVsKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBwYXJlbnRMYWJlbDtcbn07XG5mdW5jdGlvbiBoYXNBbmNlc3RvckN1c3RvbUVsZW1lbnRzKGxhYmVsLCBjb21wb25lbnRFbCkge1xuICBsZXQgdHJhdmVyc2VkRWxlbWVudHM7XG4gIGNvbnN0IGN1c3RvbUVsZW1lbnRBbmNlc3RvckNoZWNrRXZlbnRUeXBlID0gXCJjdXN0b20tZWxlbWVudC1hbmNlc3Rvci1jaGVja1wiO1xuICBjb25zdCBsaXN0ZW5lciA9IChldmVudCkgPT4ge1xuICAgIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgIGNvbnN0IGNvbXBvc2VkUGF0aCA9IGV2ZW50LmNvbXBvc2VkUGF0aCgpO1xuICAgIHRyYXZlcnNlZEVsZW1lbnRzID0gY29tcG9zZWRQYXRoLnNsaWNlKGNvbXBvc2VkUGF0aC5pbmRleE9mKGNvbXBvbmVudEVsKSwgY29tcG9zZWRQYXRoLmluZGV4T2YobGFiZWwpKTtcbiAgfTtcbiAgbGFiZWwuYWRkRXZlbnRMaXN0ZW5lcihjdXN0b21FbGVtZW50QW5jZXN0b3JDaGVja0V2ZW50VHlwZSwgbGlzdGVuZXIsIHsgb25jZTogdHJ1ZSB9KTtcbiAgY29tcG9uZW50RWwuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoY3VzdG9tRWxlbWVudEFuY2VzdG9yQ2hlY2tFdmVudFR5cGUsIHsgY29tcG9zZWQ6IHRydWUsIGJ1YmJsZXM6IHRydWUgfSkpO1xuICBsYWJlbC5yZW1vdmVFdmVudExpc3RlbmVyKGN1c3RvbUVsZW1lbnRBbmNlc3RvckNoZWNrRXZlbnRUeXBlLCBsaXN0ZW5lcik7XG4gIGNvbnN0IGFuY2VzdG9yQ3VzdG9tRWxlbWVudHMgPSB0cmF2ZXJzZWRFbGVtZW50c1xuICAgIC5maWx0ZXIoKGVsKSA9PiBlbCAhPT0gY29tcG9uZW50RWwgJiYgZWwgIT09IGxhYmVsKVxuICAgIC5maWx0ZXIoKGVsKSA9PiBlbC50YWdOYW1lPy5pbmNsdWRlcyhcIi1cIikpO1xuICByZXR1cm4gYW5jZXN0b3JDdXN0b21FbGVtZW50cy5sZW5ndGggPiAwO1xufVxuLyoqXG4gKiBIZWxwZXIgdG8gc2V0IHVwIGxhYmVsIGludGVyYWN0aW9ucyBvbiBjb25uZWN0ZWRDYWxsYmFjay5cbiAqXG4gKiBAcGFyYW0gY29tcG9uZW50XG4gKi9cbmZ1bmN0aW9uIGNvbm5lY3RMYWJlbChjb21wb25lbnQpIHtcbiAgaWYgKCFjb21wb25lbnQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgbGFiZWxFbCA9IGZpbmRMYWJlbEZvckNvbXBvbmVudChjb21wb25lbnQuZWwpO1xuICBpZiAoKG9uTGFiZWxDbGlja01hcC5oYXMobGFiZWxFbCkgJiYgbGFiZWxFbCA9PT0gY29tcG9uZW50LmxhYmVsRWwpIHx8XG4gICAgKCFsYWJlbEVsICYmIHVubGFiZWxlZENvbXBvbmVudHMuaGFzKGNvbXBvbmVudCkpKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IGJvdW5kT25MYWJlbERpc2Nvbm5lY3RlZCA9IG9uTGFiZWxEaXNjb25uZWN0ZWQuYmluZChjb21wb25lbnQpO1xuICBpZiAobGFiZWxFbCkge1xuICAgIGNvbXBvbmVudC5sYWJlbEVsID0gbGFiZWxFbDtcbiAgICBjb25zdCBsYWJlbGFibGVzID0gbGFiZWxUb0xhYmVsYWJsZXMuZ2V0KGxhYmVsRWwpIHx8IFtdO1xuICAgIGxhYmVsYWJsZXMucHVzaChjb21wb25lbnQpO1xuICAgIGxhYmVsVG9MYWJlbGFibGVzLnNldChsYWJlbEVsLCBsYWJlbGFibGVzLnNvcnQoc29ydEJ5RE9NT3JkZXIpKTtcbiAgICBpZiAoIW9uTGFiZWxDbGlja01hcC5oYXMoY29tcG9uZW50LmxhYmVsRWwpKSB7XG4gICAgICBvbkxhYmVsQ2xpY2tNYXAuc2V0KGNvbXBvbmVudC5sYWJlbEVsLCBvbkxhYmVsQ2xpY2spO1xuICAgICAgY29tcG9uZW50LmxhYmVsRWwuYWRkRXZlbnRMaXN0ZW5lcihsYWJlbENsaWNrRXZlbnQsIG9uTGFiZWxDbGljayk7XG4gICAgfVxuICAgIHVubGFiZWxlZENvbXBvbmVudHMuZGVsZXRlKGNvbXBvbmVudCk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihsYWJlbENvbm5lY3RlZEV2ZW50LCBvbkxhYmVsQ29ubmVjdGVkTWFwLmdldChjb21wb25lbnQpKTtcbiAgICBvbkxhYmVsRGlzY29ubmVjdGVkTWFwLnNldChjb21wb25lbnQsIGJvdW5kT25MYWJlbERpc2Nvbm5lY3RlZCk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihsYWJlbERpc2Nvbm5lY3RlZEV2ZW50LCBib3VuZE9uTGFiZWxEaXNjb25uZWN0ZWQpO1xuICB9XG4gIGVsc2UgaWYgKCF1bmxhYmVsZWRDb21wb25lbnRzLmhhcyhjb21wb25lbnQpKSB7XG4gICAgYm91bmRPbkxhYmVsRGlzY29ubmVjdGVkKCk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihsYWJlbERpc2Nvbm5lY3RlZEV2ZW50LCBvbkxhYmVsRGlzY29ubmVjdGVkTWFwLmdldChjb21wb25lbnQpKTtcbiAgfVxufVxuLyoqXG4gKiBIZWxwZXIgdG8gdGVhciBkb3duIGxhYmVsIGludGVyYWN0aW9ucyBvbiBkaXNjb25uZWN0ZWRDYWxsYmFjayBvbiBsYWJlbGFibGUgY29tcG9uZW50cy5cbiAqXG4gKiBAcGFyYW0gY29tcG9uZW50XG4gKi9cbmZ1bmN0aW9uIGRpc2Nvbm5lY3RMYWJlbChjb21wb25lbnQpIHtcbiAgaWYgKCFjb21wb25lbnQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdW5sYWJlbGVkQ29tcG9uZW50cy5kZWxldGUoY29tcG9uZW50KTtcbiAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihsYWJlbENvbm5lY3RlZEV2ZW50LCBvbkxhYmVsQ29ubmVjdGVkTWFwLmdldChjb21wb25lbnQpKTtcbiAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihsYWJlbERpc2Nvbm5lY3RlZEV2ZW50LCBvbkxhYmVsRGlzY29ubmVjdGVkTWFwLmdldChjb21wb25lbnQpKTtcbiAgb25MYWJlbENvbm5lY3RlZE1hcC5kZWxldGUoY29tcG9uZW50KTtcbiAgb25MYWJlbERpc2Nvbm5lY3RlZE1hcC5kZWxldGUoY29tcG9uZW50KTtcbiAgaWYgKCFjb21wb25lbnQubGFiZWxFbCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBsYWJlbGFibGVzID0gbGFiZWxUb0xhYmVsYWJsZXMuZ2V0KGNvbXBvbmVudC5sYWJlbEVsKTtcbiAgaWYgKGxhYmVsYWJsZXMubGVuZ3RoID09PSAxKSB7XG4gICAgY29tcG9uZW50LmxhYmVsRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihsYWJlbENsaWNrRXZlbnQsIG9uTGFiZWxDbGlja01hcC5nZXQoY29tcG9uZW50LmxhYmVsRWwpKTtcbiAgICBvbkxhYmVsQ2xpY2tNYXAuZGVsZXRlKGNvbXBvbmVudC5sYWJlbEVsKTtcbiAgfVxuICBsYWJlbFRvTGFiZWxhYmxlcy5zZXQoY29tcG9uZW50LmxhYmVsRWwsIGxhYmVsYWJsZXMuZmlsdGVyKChsYWJlbGFibGUpID0+IGxhYmVsYWJsZSAhPT0gY29tcG9uZW50KS5zb3J0KHNvcnRCeURPTU9yZGVyKSk7XG4gIGNvbXBvbmVudC5sYWJlbEVsID0gbnVsbDtcbn1cbmZ1bmN0aW9uIHNvcnRCeURPTU9yZGVyKGEsIGIpIHtcbiAgcmV0dXJuIGlzQmVmb3JlKGEuZWwsIGIuZWwpID8gLTEgOiAxO1xufVxuLyoqXG4gKiBIZWxwZXIgdG8gZ2V0IHRoZSBsYWJlbCB0ZXh0IGZyb20gYSBjb21wb25lbnQuXG4gKlxuICogQHBhcmFtIGNvbXBvbmVudFxuICovXG5mdW5jdGlvbiBnZXRMYWJlbFRleHQoY29tcG9uZW50KSB7XG4gIHJldHVybiBjb21wb25lbnQubGFiZWwgfHwgY29tcG9uZW50LmxhYmVsRWw/LnRleHRDb250ZW50Py50cmltKCkgfHwgXCJcIjtcbn1cbmZ1bmN0aW9uIG9uTGFiZWxDbGljayhldmVudCkge1xuICBjb25zdCBsYWJlbENsaWNrVGFyZ2V0ID0gZXZlbnQuZGV0YWlsLnNvdXJjZUV2ZW50LnRhcmdldDtcbiAgY29uc3QgbGFiZWxhYmxlcyA9IGxhYmVsVG9MYWJlbGFibGVzLmdldCh0aGlzKTtcbiAgY29uc3QgY2xpY2tlZExhYmVsYWJsZSA9IGxhYmVsYWJsZXMuZmluZCgobGFiZWxhYmxlKSA9PiBsYWJlbGFibGUuZWwgPT09IGxhYmVsQ2xpY2tUYXJnZXQpO1xuICBjb25zdCBsYWJlbGFibGVDaGlsZENsaWNrZWQgPSBsYWJlbGFibGVzLmluY2x1ZGVzKGNsaWNrZWRMYWJlbGFibGUpO1xuICBpZiAobGFiZWxhYmxlQ2hpbGRDbGlja2VkKSB7XG4gICAgLy8gbm8gbmVlZCB0byBmb3J3YXJkIGNsaWNrIGFzIGxhYmVsYWJsZSB3aWxsIHJlY2VpdmUgZm9jdXNcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgZmlyc3RMYWJlbGFibGUgPSBsYWJlbGFibGVzWzBdO1xuICBpZiAoZmlyc3RMYWJlbGFibGUuZGlzYWJsZWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZmlyc3RMYWJlbGFibGUub25MYWJlbENsaWNrKGV2ZW50KTtcbn1cbmZ1bmN0aW9uIG9uTGFiZWxDb25uZWN0ZWQoKSB7XG4gIGlmICh1bmxhYmVsZWRDb21wb25lbnRzLmhhcyh0aGlzKSkge1xuICAgIGNvbm5lY3RMYWJlbCh0aGlzKTtcbiAgfVxufVxuZnVuY3Rpb24gb25MYWJlbERpc2Nvbm5lY3RlZCgpIHtcbiAgdW5sYWJlbGVkQ29tcG9uZW50cy5hZGQodGhpcyk7XG4gIGNvbnN0IGJvdW5kT25MYWJlbENvbm5lY3RlZCA9IG9uTGFiZWxDb25uZWN0ZWRNYXAuZ2V0KHRoaXMpIHx8IG9uTGFiZWxDb25uZWN0ZWQuYmluZCh0aGlzKTtcbiAgb25MYWJlbENvbm5lY3RlZE1hcC5zZXQodGhpcywgYm91bmRPbkxhYmVsQ29ubmVjdGVkKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihsYWJlbENvbm5lY3RlZEV2ZW50LCBib3VuZE9uTGFiZWxDb25uZWN0ZWQpO1xufVxuLyoqXG4gKiBIZWxwZXIgdG8gYXNzb2NpYXRlIGFuIGV4cGxpY2l0IGxhYmVsIChpLmUuLCB1c2luZyBgZm9yYCkgd2l0aCBhIGxhYmVsYWJsZSBjb21wb25lbnQgdGhhdCBkb2VzIG5vdCBoYXZlIGFuIGFzc29jaWF0ZWQgbGFiZWwuXG4gKlxuICogQHBhcmFtIGxhYmVsIC0gdGhlIGxhYmVsIGVsZW1lbnRcbiAqL1xuYXN5bmMgZnVuY3Rpb24gYXNzb2NpYXRlRXhwbGljaXRMYWJlbFRvVW5sYWJlbGVkQ29tcG9uZW50KGxhYmVsKSB7XG4gIGF3YWl0IGNvbXBvbmVudE9uUmVhZHkobGFiZWwpO1xuICBjb25zdCBhbHJlYWR5TGFiZWxlZCA9IGxhYmVsVG9MYWJlbGFibGVzLmhhcyhsYWJlbCk7XG4gIGlmIChhbHJlYWR5TGFiZWxlZCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBmb3JDb21wb25lbnRFbCA9IGxhYmVsLm93bmVyRG9jdW1lbnQ/LmdldEVsZW1lbnRCeUlkKGxhYmVsLmZvcik7XG4gIGlmICghZm9yQ29tcG9uZW50RWwpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICBmb3IgKGNvbnN0IGxhYmVsYWJsZSBvZiB1bmxhYmVsZWRDb21wb25lbnRzKSB7XG4gICAgICBpZiAobGFiZWxhYmxlLmVsID09PSBmb3JDb21wb25lbnRFbCkge1xuICAgICAgICBjb25uZWN0TGFiZWwobGFiZWxhYmxlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IHsgYXNzb2NpYXRlRXhwbGljaXRMYWJlbFRvVW5sYWJlbGVkQ29tcG9uZW50IGFzIGEsIGxhYmVsRGlzY29ubmVjdGVkRXZlbnQgYXMgYiwgY29ubmVjdExhYmVsIGFzIGMsIGRpc2Nvbm5lY3RMYWJlbCBhcyBkLCBnZXRMYWJlbFRleHQgYXMgZywgbGFiZWxDb25uZWN0ZWRFdmVudCBhcyBsIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxhYmVsLTFjMjg1ZDQxLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==