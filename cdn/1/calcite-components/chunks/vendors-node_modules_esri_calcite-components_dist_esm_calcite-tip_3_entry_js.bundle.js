"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_esri_calcite-components_dist_esm_calcite-tip_3_entry_js"],{

/***/ "./node_modules/@esri/calcite-components/dist/esm/Heading-b6ae61b8.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/Heading-b6ae61b8.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: () => (/* binding */ Heading),
/* harmony export */   c: () => (/* binding */ constrainHeadingLevel)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */


function constrainHeadingLevel(level) {
  return Math.min(Math.max(Math.ceil(level), 1), 6);
}
const Heading = (props, children) => {
  const HeadingTag = props.level ? `h${props.level}` : "div";
  delete props.level;
  return (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)(HeadingTag, { ...props }, children);
};



//# sourceMappingURL=Heading-b6ae61b8.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/calcite-tip_3.entry.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/calcite-tip_3.entry.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcite_tip: () => (/* binding */ Tip),
/* harmony export */   calcite_tip_group: () => (/* binding */ TipGroup),
/* harmony export */   calcite_tip_manager: () => (/* binding */ TipManager)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _conditionalSlot_f6710875_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conditionalSlot-f6710875.js */ "./node_modules/@esri/calcite-components/dist/esm/conditionalSlot-f6710875.js");
/* harmony import */ var _dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom-ed00a585.js */ "./node_modules/@esri/calcite-components/dist/esm/dom-ed00a585.js");
/* harmony import */ var _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locale-6e783cf0.js */ "./node_modules/@esri/calcite-components/dist/esm/locale-6e783cf0.js");
/* harmony import */ var _t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./t9n-0bcdca54.js */ "./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js");
/* harmony import */ var _Heading_b6ae61b8_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Heading-b6ae61b8.js */ "./node_modules/@esri/calcite-components/dist/esm/Heading-b6ae61b8.js");
/* harmony import */ var _observers_71d332db_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./observers-71d332db.js */ "./node_modules/@esri/calcite-components/dist/esm/observers-71d332db.js");
/* harmony import */ var _guid_21fecfa4_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./guid-21fecfa4.js */ "./node_modules/@esri/calcite-components/dist/esm/guid-21fecfa4.js");
/* harmony import */ var _resources_cf82388c_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./resources-cf82388c.js */ "./node_modules/@esri/calcite-components/dist/esm/resources-cf82388c.js");
/* harmony import */ var _key_61f82ddb_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./key-61f82ddb.js */ "./node_modules/@esri/calcite-components/dist/esm/key-61f82ddb.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */











const CSS$1 = {
  container: "container",
  header: "header",
  heading: "heading",
  close: "close",
  imageFrame: "image-frame",
  content: "content",
  info: "info",
};
const ICONS$1 = {
  close: "x",
};
const SLOTS = {
  thumbnail: "thumbnail",
};

const tipCss = ":host{position:relative;margin:1rem;box-sizing:border-box;display:flex;flex-direction:row;border-width:1px;border-style:solid;border-color:var(--calcite-color-border-2);background-color:var(--calcite-color-foreground-1);font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-color-text-2)}:host *{box-sizing:border-box}.container{inline-size:100%;padding:1rem}:host([closed]),:host([closed]) .container{display:none}:host([selected]) .container{margin:0px;border-style:none;padding:0px}.header{margin:0px;display:flex;align-content:space-between;align-items:center;fill:var(--calcite-color-text-2);color:var(--calcite-color-text-2)}.heading{margin:0px;padding:0px;font-weight:var(--calcite-font-weight-medium)}.header .heading{flex:1 1 auto;padding:0.5rem}.header{margin-block-end:0.5rem}.header .heading{padding:0px;font-size:var(--calcite-font-size-0);line-height:1.25rem;color:var(--calcite-color-text-1)}.container[hidden]{display:none}.content{display:flex}.info{padding-block:0px;padding-inline:1rem;inline-size:70%}.info:only-child{inline-size:100%;padding-inline:0px}::slotted(p){margin-block-start:0px}::slotted(a){outline-color:transparent;color:var(--calcite-color-brand)}::slotted(a:focus){outline:2px solid var(--calcite-color-brand);outline-offset:calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          )}.image-frame{inline-size:25%}.image-frame img{max-inline-size:100%}::slotted(img){max-inline-size:100%}:host([hidden]){display:none}[hidden]{display:none}";

const Tip = class {
  constructor(hostRef) {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteTipDismiss = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteTipDismiss", 6);
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.hideTip = () => {
      this.closed = true;
      this.calciteTipDismiss.emit();
    };
    this.closed = false;
    this.closeDisabled = false;
    this.heading = undefined;
    this.headingLevel = undefined;
    this.selected = false;
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.defaultMessages = undefined;
    this.effectiveLocale = "";
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  effectiveLocaleChange() {
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.u)(this, this.effectiveLocale);
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    (0,_conditionalSlot_f6710875_js__WEBPACK_IMPORTED_MODULE_1__.c)(this);
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
  }
  async componentWillLoad() {
    await (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.s)(this);
  }
  disconnectedCallback() {
    (0,_conditionalSlot_f6710875_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.d)(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderHeader() {
    const { heading, headingLevel, el } = this;
    const parentLevel = el.closest("calcite-tip-manager")?.headingLevel;
    const relativeLevel = parentLevel ? (0,_Heading_b6ae61b8_js__WEBPACK_IMPORTED_MODULE_5__.c)(parentLevel + 1) : null;
    const level = headingLevel || relativeLevel;
    return heading ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("header", { class: CSS$1.header }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)(_Heading_b6ae61b8_js__WEBPACK_IMPORTED_MODULE_5__.H, { class: CSS$1.heading, level: level }, heading))) : null;
  }
  renderDismissButton() {
    const { closeDisabled, hideTip } = this;
    return !closeDisabled ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-action", { class: CSS$1.close, icon: ICONS$1.close, onClick: hideTip, scale: "l", text: this.messages.close })) : null;
  }
  renderImageFrame() {
    const { el } = this;
    return (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.e)(el, SLOTS.thumbnail) ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS$1.imageFrame, key: "thumbnail" }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { name: SLOTS.thumbnail }))) : null;
  }
  renderInfoNode() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS$1.info }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
  }
  renderContent() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS$1.content }, this.renderImageFrame(), this.renderInfoNode()));
  }
  render() {
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("article", { class: CSS$1.container }, this.renderHeader(), this.renderContent()), this.renderDismissButton()));
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "messageOverrides": ["onMessagesChange"],
    "effectiveLocale": ["effectiveLocaleChange"]
  }; }
};
Tip.style = tipCss;

const tipGroupCss = ":host{box-sizing:border-box;display:block;background-color:var(--calcite-color-foreground-1);font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-color-text-2)}::slotted(calcite-tip){margin:0px;border-style:none;max-inline-size:var(--calcite-tip-max-width)}:host([hidden]){display:none}[hidden]{display:none}";

const TipGroup = class {
  constructor(hostRef) {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.groupTitle = undefined;
  }
  render() {
    return (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null);
  }
};
TipGroup.style = tipGroupCss;

const CSS = {
  header: "header",
  heading: "heading",
  close: "close",
  container: "container",
  tipContainer: "tip-container",
  tipContainerAdvancing: "tip-container--advancing",
  tipContainerRetreating: "tip-container--retreating",
  pagination: "pagination",
  pagePosition: "page-position",
  pageNext: "page-next",
  pagePrevious: "page-previous",
};
const ICONS = {
  chevronLeft: "chevron-left",
  chevronRight: "chevron-right",
  close: "x",
};

const tipManagerCss = ":host{box-sizing:border-box;display:block;background-color:var(--calcite-color-foreground-1);font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-color-text-2);--calcite-tip-manager-height:19vh}:host *{box-sizing:border-box}:host([closed]){display:none}.header{margin:0px;display:flex;align-content:space-between;align-items:center;fill:var(--calcite-color-text-2);color:var(--calcite-color-text-2)}.heading{margin:0px;padding:0px;font-weight:var(--calcite-font-weight-medium)}.header .heading{flex:1 1 auto;padding:0.5rem}.header{border-width:0px;border-block-end-width:1px;border-style:solid;border-color:var(--calcite-color-border-3);padding-block:0px;padding-inline-end:0px;padding-inline-start:1rem}.header .heading{padding:0px;font-size:var(--calcite-font-size-1);line-height:1.5rem;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-color-text-1)}.container{position:relative;overflow:hidden;outline-color:transparent;min-block-size:150px}.container:focus{outline:2px solid var(--calcite-color-brand);outline-offset:calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          )}.tip-container{margin-block-start:1px;display:flex;align-items:flex-start;justify-content:center;overflow:auto;padding:1rem;outline-color:transparent;animation-name:none;animation-duration:var(--calcite-animation-timing);block-size:var(--calcite-tip-manager-height)}.tip-container:focus{outline:2px solid var(--calcite-color-brand);outline-offset:calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          )}::slotted(calcite-tip){margin:0px;border-style:none;max-inline-size:var(--calcite-tip-max-width)}.tip-container--advancing{animation-name:tip-advance}.tip-container--retreating{animation-name:tip-retreat}.pagination{display:flex;align-items:center;justify-content:center;padding-inline:0px;padding-block:0.75rem 0.5rem}.page-position{margin-block:0px;margin-inline:0.5rem;font-size:var(--calcite-font-size--2);line-height:1rem}@keyframes tip-advance{0%{opacity:0;transform:translate3d(50px, 0, 0) scale(0.99)}100%{opacity:1;transform:translate3d(0, 0, 0) scale(1)}}@keyframes tip-retreat{0%{opacity:0;transform:translate3d(-50px, 0, 0) scale(0.99)}100%{opacity:1;transform:translate3d(0, 0, 0) scale(1)}}:host([hidden]){display:none}[hidden]{display:none}";

const TipManager = class {
  constructor(hostRef) {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteTipManagerClose = (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteTipManagerClose", 6);
    this.mutationObserver = (0,_observers_71d332db_js__WEBPACK_IMPORTED_MODULE_6__.c)("mutation", () => this.setUpTips());
    this.hideTipManager = () => {
      this.closed = true;
      this.calciteTipManagerClose.emit();
    };
    this.previousClicked = () => {
      this.previousTip();
    };
    this.nextClicked = () => {
      this.nextTip();
    };
    this.tipManagerKeyDownHandler = (event) => {
      if (event.target !== this.container) {
        return;
      }
      switch (event.key) {
        case "ArrowRight":
          event.preventDefault();
          this.nextTip();
          break;
        case "ArrowLeft":
          event.preventDefault();
          this.previousTip();
          break;
        case "Home":
          event.preventDefault();
          this.selectedIndex = 0;
          break;
        case "End":
          event.preventDefault();
          this.selectedIndex = this.total - 1;
          break;
      }
    };
    this.storeContainerRef = (el) => {
      this.container = el;
    };
    this.closed = false;
    this.headingLevel = undefined;
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.selectedIndex = undefined;
    this.tips = undefined;
    this.total = undefined;
    this.direction = undefined;
    this.groupTitle = undefined;
    this.defaultMessages = undefined;
    this.effectiveLocale = "";
  }
  closedChangeHandler() {
    this.direction = null;
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  selectedChangeHandler() {
    this.showSelectedTip();
    this.updateGroupTitle();
  }
  async effectiveLocaleChange() {
    await (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.u)(this, this.effectiveLocale);
    this.updateGroupTitle();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
    this.setUpTips();
    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });
  }
  async componentWillLoad() {
    await (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.s)(this);
    this.updateGroupTitle();
  }
  disconnectedCallback() {
    this.mutationObserver?.disconnect();
    (0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_t9n_0bcdca54_js__WEBPACK_IMPORTED_MODULE_4__.d)(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Selects the next `calcite-tip` to display. */
  async nextTip() {
    this.direction = "advancing";
    const nextIndex = this.selectedIndex + 1;
    this.selectedIndex = (nextIndex + this.total) % this.total;
  }
  /** Selects the previous `calcite-tip` to display. */
  async previousTip() {
    this.direction = "retreating";
    const previousIndex = this.selectedIndex - 1;
    this.selectedIndex = (previousIndex + this.total) % this.total;
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  setUpTips() {
    const tips = Array.from(this.el.querySelectorAll("calcite-tip"));
    this.total = tips.length;
    if (this.total === 0) {
      return;
    }
    const selectedTip = this.el.querySelector("calcite-tip[selected]");
    this.tips = tips;
    this.selectedIndex = selectedTip ? tips.indexOf(selectedTip) : 0;
    tips.forEach((tip) => {
      tip.closeDisabled = true;
    });
    this.showSelectedTip();
  }
  showSelectedTip() {
    this.tips.forEach((tip, index) => {
      const isSelected = this.selectedIndex === index;
      tip.selected = isSelected;
      tip.hidden = !isSelected;
    });
  }
  updateGroupTitle() {
    if (this.tips) {
      const selectedTip = this.tips[this.selectedIndex];
      const tipParent = selectedTip.closest("calcite-tip-group");
      this.groupTitle = tipParent?.groupTitle || this.messages?.defaultGroupTitle;
    }
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderPagination() {
    const dir = (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.g)(this.el);
    const { selectedIndex, tips, total, messages } = this;
    const nextLabel = messages.next;
    const previousLabel = messages.previous;
    const paginationLabel = messages.defaultPaginationLabel;
    return tips.length > 1 ? ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("footer", { class: CSS.pagination }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-action", { class: CSS.pagePrevious, icon: dir === "ltr" ? ICONS.chevronLeft : ICONS.chevronRight, onClick: this.previousClicked, scale: "m", text: previousLabel }), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: CSS.pagePosition }, `${paginationLabel} ${selectedIndex + 1}/${total}`), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-action", { class: CSS.pageNext, icon: dir === "ltr" ? ICONS.chevronRight : ICONS.chevronLeft, onClick: this.nextClicked, scale: "m", text: nextLabel }))) : null;
  }
  render() {
    const { closed, direction, headingLevel, groupTitle, selectedIndex, messages, total } = this;
    const closeLabel = messages.close;
    if (total === 0) {
      return null;
    }
    return ((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("section", { "aria-hidden": (0,_dom_ed00a585_js__WEBPACK_IMPORTED_MODULE_2__.t)(closed), class: CSS.container, hidden: closed, onKeyDown: this.tipManagerKeyDownHandler, tabIndex: 0,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.storeContainerRef }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("header", { class: CSS.header }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)(_Heading_b6ae61b8_js__WEBPACK_IMPORTED_MODULE_5__.H, { class: CSS.heading, level: headingLevel }, groupTitle), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-action", { class: CSS.close, onClick: this.hideTipManager, scale: "m", text: closeLabel }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: ICONS.close, scale: "m" }))), (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: {
        [CSS.tipContainer]: true,
        [CSS.tipContainerAdvancing]: !closed && direction === "advancing",
        [CSS.tipContainerRetreating]: !closed && direction === "retreating",
      }, key: selectedIndex, tabIndex: 0 }, (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)), this.renderPagination()));
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "closed": ["closedChangeHandler"],
    "messageOverrides": ["onMessagesChange"],
    "selectedIndex": ["selectedChangeHandler"],
    "effectiveLocale": ["effectiveLocaleChange"]
  }; }
};
TipManager.style = tipManagerCss;



//# sourceMappingURL=calcite-tip_3.entry.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/conditionalSlot-f6710875.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/conditionalSlot-f6710875.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ connectConditionalSlotComponent),
/* harmony export */   d: () => (/* binding */ disconnectConditionalSlotComponent)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _observers_71d332db_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observers-71d332db.js */ "./node_modules/@esri/calcite-components/dist/esm/observers-71d332db.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



const observed = new Set();
let mutationObserver;
const observerOptions = { childList: true };
/**
 * Helper to set up a conditional slot component on connectedCallback.
 *
 * @param component
 * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.
 *
 * ```
 * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}
 * ```
 */
function connectConditionalSlotComponent(component) {
  if (!mutationObserver) {
    mutationObserver = (0,_observers_71d332db_js__WEBPACK_IMPORTED_MODULE_1__.c)("mutation", processMutations);
  }
  mutationObserver.observe(component.el, observerOptions);
}
/**
 * Helper to tear down a conditional slot component on disconnectedCallback.
 *
 * @param component
 * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.
 *
 * ```
 * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}
 * ```
 */
function disconnectConditionalSlotComponent(component) {
  observed.delete(component.el);
  // we explicitly process queued mutations and disconnect and reconnect
  // the observer until MutationObserver gets an `unobserve` method
  // see https://github.com/whatwg/dom/issues/126
  processMutations(mutationObserver.takeRecords());
  mutationObserver.disconnect();
  for (const [element] of observed.entries()) {
    mutationObserver.observe(element, observerOptions);
  }
}
function processMutations(mutations) {
  mutations.forEach(({ target }) => {
    (0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.f)(target);
  });
}



//# sourceMappingURL=conditionalSlot-f6710875.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/esm/t9n-0bcdca54.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ connectMessages),
/* harmony export */   d: () => (/* binding */ disconnectMessages),
/* harmony export */   s: () => (/* binding */ setUpMessages),
/* harmony export */   u: () => (/* binding */ updateMessages)
/* harmony export */ });
/* harmony import */ var _index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-86faef9c.js */ "./node_modules/@esri/calcite-components/dist/esm/index-86faef9c.js");
/* harmony import */ var _locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale-6e783cf0.js */ "./node_modules/@esri/calcite-components/dist/esm/locale-6e783cf0.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



const componentLangToMessageBundleCache = {};
async function getMessageBundle(lang, component) {
  const key = `${component}_${lang}`;
  if (componentLangToMessageBundleCache[key]) {
    return componentLangToMessageBundleCache[key];
  }
  componentLangToMessageBundleCache[key] = fetch((0,_index_86faef9c_js__WEBPACK_IMPORTED_MODULE_0__.a)(`./assets/${component}/t9n/messages_${lang}.json`))
    .then((resp) => {
    if (!resp.ok) {
      throwMessageFetchError();
    }
    return resp.json();
  })
    .catch(() => throwMessageFetchError());
  return componentLangToMessageBundleCache[key];
}
function throwMessageFetchError() {
  throw new Error("could not fetch component message bundle");
}
function mergeMessages(component) {
  component.messages = {
    ...component.defaultMessages,
    ...component.messageOverrides,
  };
}
/**
 * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.
 *
 * @param component
 */
async function setUpMessages(component) {
  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);
  mergeMessages(component);
}
async function fetchMessages(component, lang) {
  const { el } = component;
  const tag = el.tagName.toLowerCase();
  const componentName = tag.replace("calcite-", "");
  return getMessageBundle((0,_locale_6e783cf0_js__WEBPACK_IMPORTED_MODULE_1__.g)(lang, "t9n"), componentName);
}
/**
 * This utility must be set up for the component to update its default message bundle if the locale changes.
 *
 * It can be set up in **either** of the following ways:
 *
 * 1. called from `LocalizedComponent`'s `onLocaleChange` method or
 * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop
 *
 * @param component
 * @param lang
 */
async function updateMessages(component, lang) {
  component.defaultMessages = await fetchMessages(component, lang);
  mergeMessages(component);
}
/**
 * This utility sets up internals for messages support.
 *
 * It needs to be called in `connectedCallback`
 *
 * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.
 *
 * @param component
 */
function connectMessages(component) {
  component.onMessagesChange = defaultOnMessagesChange;
}
/**
 * This utility tears down internals for messages support.
 *
 * It needs to be called in `disconnectedCallback`
 *
 * @param component
 */
function disconnectMessages(component) {
  component.onMessagesChange = undefined;
}
function defaultOnMessagesChange() {
  mergeMessages(this);
}



//# sourceMappingURL=t9n-0bcdca54.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,