System.register(["jimu-core","jimu-ui","jimu-theme","jimu-layouts/layout-runtime"], function(__WEBPACK_DYNAMIC_EXPORT__, __system_context__) {
	var __WEBPACK_EXTERNAL_MODULE_jimu_core__ = {};
	var __WEBPACK_EXTERNAL_MODULE_jimu_ui__ = {};
	var __WEBPACK_EXTERNAL_MODULE_jimu_theme__ = {};
	var __WEBPACK_EXTERNAL_MODULE_jimu_layouts_layout_runtime__ = {};
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_jimu_core__, "__esModule", { value: true });
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_jimu_ui__, "__esModule", { value: true });
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_jimu_theme__, "__esModule", { value: true });
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_jimu_layouts_layout_runtime__, "__esModule", { value: true });
	return {
		setters: [
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_jimu_core__[key] = module[key];
				});
			},
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_jimu_ui__[key] = module[key];
				});
			},
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_jimu_theme__[key] = module[key];
				});
			},
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_jimu_layouts_layout_runtime__[key] = module[key];
				});
			}
		],
		execute: function() {
			__WEBPACK_DYNAMIC_EXPORT__(
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./jimu-icons/svg/outlined/application/maxgrid.svg":
/*!*********************************************************!*\
  !*** ./jimu-icons/svg/outlined/application/maxgrid.svg ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 12 12\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M12 0H7v1h4v4h1V1zM0 12h5v-1H1V7H0v4z\" clip-rule=\"evenodd\"></path></svg>"

/***/ }),

/***/ "./jimu-icons/svg/outlined/application/visible.svg":
/*!*********************************************************!*\
  !*** ./jimu-icons/svg/outlined/application/visible.svg ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"#000\" fill-rule=\"evenodd\" d=\"M8 12c-2.667 0-5.667-1.333-7-4 1.333-2.667 4.333-4 7-4s5.667 1.333 7 4c-1.333 2.667-4.333 4-7 4m0-7c-2.618 0-4.578.967-6 3 1.422 2.033 3.382 3 6 3s4.578-.967 6-3c-1.422-2.033-3.382-3-6-3m0 5.5a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5m0-1a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3\" clip-rule=\"evenodd\"></path></svg>"

/***/ }),

/***/ "./jimu-icons/svg/outlined/directional/left.svg":
/*!******************************************************!*\
  !*** ./jimu-icons/svg/outlined/directional/left.svg ***!
  \******************************************************/
/***/ ((module) => {

module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"#000\" fill-rule=\"evenodd\" d=\"M11.347 2.146a.485.485 0 0 1 0 .708L5.76 8l5.587 5.146a.486.486 0 0 1 0 .708.538.538 0 0 1-.738 0l-5.956-5.5a.485.485 0 0 1 0-.708l5.956-5.5a.538.538 0 0 1 .738 0\" clip-rule=\"evenodd\"></path></svg>"

/***/ }),

/***/ "./jimu-icons/svg/outlined/directional/right.svg":
/*!*******************************************************!*\
  !*** ./jimu-icons/svg/outlined/directional/right.svg ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"#000\" fill-rule=\"evenodd\" d=\"M4.653 13.854a.485.485 0 0 1 0-.708L10.24 8 4.653 2.854a.485.485 0 0 1 0-.708.538.538 0 0 1 .738 0l5.956 5.5a.485.485 0 0 1 0 .708l-5.956 5.5a.538.538 0 0 1-.738 0\" clip-rule=\"evenodd\"></path></svg>"

/***/ }),

/***/ "./jimu-icons/svg/outlined/directional/up-double.svg":
/*!***********************************************************!*\
  !*** ./jimu-icons/svg/outlined/directional/up-double.svg ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"#000\" fill-rule=\"evenodd\" d=\"M13.146 13.847a.486.486 0 0 0 .708 0 .538.538 0 0 0 0-.738l-5.5-5.956a.485.485 0 0 0-.708 0l-5.5 5.956a.538.538 0 0 0 0 .738.485.485 0 0 0 .708 0L8 8.26zm0-5a.485.485 0 0 0 .708 0 .538.538 0 0 0 0-.738l-5.5-5.956a.485.485 0 0 0-.708 0l-5.5 5.956a.538.538 0 0 0 0 .738.485.485 0 0 0 .708 0L8 3.26z\" clip-rule=\"evenodd\"></path></svg>"

/***/ }),

/***/ "./jimu-icons/svg/outlined/editor/close.svg":
/*!**************************************************!*\
  !*** ./jimu-icons/svg/outlined/editor/close.svg ***!
  \**************************************************/
/***/ ((module) => {

module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"#000\" d=\"m8.745 8 6.1 6.1a.527.527 0 1 1-.745.746L8 8.746l-6.1 6.1a.527.527 0 1 1-.746-.746l6.1-6.1-6.1-6.1a.527.527 0 0 1 .746-.746l6.1 6.1 6.1-6.1a.527.527 0 0 1 .746.746z\"></path></svg>"

/***/ }),

/***/ "./jimu-icons/outlined/application/maxgrid.tsx":
/*!*****************************************************!*\
  !*** ./jimu-icons/outlined/application/maxgrid.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MaxgridOutlined: () => (/* binding */ MaxgridOutlined)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _svg_outlined_application_maxgrid_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../svg/outlined/application/maxgrid.svg */ "./jimu-icons/svg/outlined/application/maxgrid.svg");
/* harmony import */ var _svg_outlined_application_maxgrid_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_svg_outlined_application_maxgrid_svg__WEBPACK_IMPORTED_MODULE_1__);
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};


const MaxgridOutlined = (props) => {
    const SVG = window.SVG;
    const { className } = props, others = __rest(props, ["className"]);
    const classes = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('jimu-icon jimu-icon-component', className);
    if (!SVG)
        return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("svg", Object.assign({ className: classes }, others));
    return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(SVG, Object.assign({ className: classes, src: (_svg_outlined_application_maxgrid_svg__WEBPACK_IMPORTED_MODULE_1___default()) }, others));
};


/***/ }),

/***/ "./jimu-icons/outlined/application/visible.tsx":
/*!*****************************************************!*\
  !*** ./jimu-icons/outlined/application/visible.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VisibleOutlined: () => (/* binding */ VisibleOutlined)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _svg_outlined_application_visible_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../svg/outlined/application/visible.svg */ "./jimu-icons/svg/outlined/application/visible.svg");
/* harmony import */ var _svg_outlined_application_visible_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_svg_outlined_application_visible_svg__WEBPACK_IMPORTED_MODULE_1__);
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};


const VisibleOutlined = (props) => {
    const SVG = window.SVG;
    const { className } = props, others = __rest(props, ["className"]);
    const classes = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('jimu-icon jimu-icon-component', className);
    if (!SVG)
        return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("svg", Object.assign({ className: classes }, others));
    return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(SVG, Object.assign({ className: classes, src: (_svg_outlined_application_visible_svg__WEBPACK_IMPORTED_MODULE_1___default()) }, others));
};


/***/ }),

/***/ "./jimu-icons/outlined/directional/left.tsx":
/*!**************************************************!*\
  !*** ./jimu-icons/outlined/directional/left.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LeftOutlined: () => (/* binding */ LeftOutlined)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _svg_outlined_directional_left_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../svg/outlined/directional/left.svg */ "./jimu-icons/svg/outlined/directional/left.svg");
/* harmony import */ var _svg_outlined_directional_left_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_svg_outlined_directional_left_svg__WEBPACK_IMPORTED_MODULE_1__);
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};


const LeftOutlined = (props) => {
    const SVG = window.SVG;
    const { className } = props, others = __rest(props, ["className"]);
    const classes = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('jimu-icon jimu-icon-component', className);
    if (!SVG)
        return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("svg", Object.assign({ className: classes }, others));
    return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(SVG, Object.assign({ className: classes, src: (_svg_outlined_directional_left_svg__WEBPACK_IMPORTED_MODULE_1___default()) }, others));
};


/***/ }),

/***/ "./jimu-icons/outlined/directional/right.tsx":
/*!***************************************************!*\
  !*** ./jimu-icons/outlined/directional/right.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RightOutlined: () => (/* binding */ RightOutlined)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _svg_outlined_directional_right_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../svg/outlined/directional/right.svg */ "./jimu-icons/svg/outlined/directional/right.svg");
/* harmony import */ var _svg_outlined_directional_right_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_svg_outlined_directional_right_svg__WEBPACK_IMPORTED_MODULE_1__);
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};


const RightOutlined = (props) => {
    const SVG = window.SVG;
    const { className } = props, others = __rest(props, ["className"]);
    const classes = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('jimu-icon jimu-icon-component', className);
    if (!SVG)
        return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("svg", Object.assign({ className: classes }, others));
    return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(SVG, Object.assign({ className: classes, src: (_svg_outlined_directional_right_svg__WEBPACK_IMPORTED_MODULE_1___default()) }, others));
};


/***/ }),

/***/ "./jimu-icons/outlined/directional/up-double.tsx":
/*!*******************************************************!*\
  !*** ./jimu-icons/outlined/directional/up-double.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpDoubleOutlined: () => (/* binding */ UpDoubleOutlined)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _svg_outlined_directional_up_double_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../svg/outlined/directional/up-double.svg */ "./jimu-icons/svg/outlined/directional/up-double.svg");
/* harmony import */ var _svg_outlined_directional_up_double_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_svg_outlined_directional_up_double_svg__WEBPACK_IMPORTED_MODULE_1__);
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};


const UpDoubleOutlined = (props) => {
    const SVG = window.SVG;
    const { className } = props, others = __rest(props, ["className"]);
    const classes = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('jimu-icon jimu-icon-component', className);
    if (!SVG)
        return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("svg", Object.assign({ className: classes }, others));
    return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(SVG, Object.assign({ className: classes, src: (_svg_outlined_directional_up_double_svg__WEBPACK_IMPORTED_MODULE_1___default()) }, others));
};


/***/ }),

/***/ "./jimu-icons/outlined/editor/close.tsx":
/*!**********************************************!*\
  !*** ./jimu-icons/outlined/editor/close.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CloseOutlined: () => (/* binding */ CloseOutlined)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _svg_outlined_editor_close_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../svg/outlined/editor/close.svg */ "./jimu-icons/svg/outlined/editor/close.svg");
/* harmony import */ var _svg_outlined_editor_close_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_svg_outlined_editor_close_svg__WEBPACK_IMPORTED_MODULE_1__);
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};


const CloseOutlined = (props) => {
    const SVG = window.SVG;
    const { className } = props, others = __rest(props, ["className"]);
    const classes = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('jimu-icon jimu-icon-component', className);
    if (!SVG)
        return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("svg", Object.assign({ className: classes }, others));
    return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(SVG, Object.assign({ className: classes, src: (_svg_outlined_editor_close_svg__WEBPACK_IMPORTED_MODULE_1___default()) }, others));
};


/***/ }),

/***/ "./jimu-layouts/lib/builder/builder-locale.ts":
/*!****************************************************!*\
  !*** ./jimu-layouts/lib/builder/builder-locale.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   loadMessage: () => (/* binding */ loadMessage)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _translations_default__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../translations/default */ "./jimu-layouts/lib/translations/default.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


function loadMessage() {
    return __awaiter(this, void 0, void 0, function* () {
        let locale = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appContext.locale;
        locale = jimu_core__WEBPACK_IMPORTED_MODULE_0__.i18n.getLocaleToLoad(locale, jimu_core__WEBPACK_IMPORTED_MODULE_0__.translatedLocales);
        if (locale) {
            return yield jimu_core__WEBPACK_IMPORTED_MODULE_0__.i18n.loadLocaleMessages('jimu-layouts/lib/translations', locale).then((messages) => {
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.appActions.i18nMessagesLoaded('jimu-layouts', messages));
                jimu_core__WEBPACK_IMPORTED_MODULE_0__.i18n.resetIntls();
                return messages;
            });
        }
        else {
            return Promise.resolve(_translations_default__WEBPACK_IMPORTED_MODULE_1__["default"]);
        }
    });
}


/***/ }),

/***/ "./jimu-layouts/lib/builder/layout-context.tsx":
/*!*****************************************************!*\
  !*** ./jimu-layouts/lib/builder/layout-context.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LayoutContext: () => (/* binding */ LayoutContext)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

const LayoutContext = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createContext({});


/***/ }),

/***/ "./jimu-layouts/lib/builder/page-context.tsx":
/*!***************************************************!*\
  !*** ./jimu-layouts/lib/builder/page-context.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PageContext: () => (/* binding */ PageContext),
/* harmony export */   PageVisibilityContext: () => (/* binding */ PageVisibilityContext),
/* harmony export */   ScreenGroupContext: () => (/* binding */ ScreenGroupContext),
/* harmony export */   ViewVisibilityContext: () => (/* binding */ ViewVisibilityContext),
/* harmony export */   ViewportVisibilityContext: () => (/* binding */ ViewportVisibilityContext)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

const PageContext = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createContext({
    viewOnly: true
});
const ViewportVisibilityContext = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createContext(true);
const PageVisibilityContext = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createContext(true);
const ViewVisibilityContext = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createContext({
    isInView: false,
    isInCurrentView: false
});
const ScreenGroupContext = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createContext('');


/***/ }),

/***/ "./jimu-layouts/lib/builder/theme-tooltip.tsx":
/*!****************************************************!*\
  !*** ./jimu-layouts/lib/builder/theme-tooltip.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ThemedTooltip: () => (/* binding */ ThemedTooltip)
/* harmony export */ });
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var jimu_theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-theme */ "jimu-theme");


const ThemedTooltip = (0,jimu_theme__WEBPACK_IMPORTED_MODULE_1__.withBuilderTheme)(jimu_ui__WEBPACK_IMPORTED_MODULE_0__.Tooltip);


/***/ }),

/***/ "./jimu-layouts/lib/column-layout/common/style.ts":
/*!********************************************************!*\
  !*** ./jimu-layouts/lib/column-layout/common/style.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getLayoutStyle: () => (/* binding */ getLayoutStyle)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

const getLayoutStyle = (layoutSetting) => (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
  height: 100%;
  overflow-x: hidden;
  justify-content: ${layoutSetting.justifyContent};
  overflow-y: auto !important;
  -ms-overflow-style: none;  /* Internet Explorer 10+ */
  scrollbar-width: none;  /* Firefox */
  &::-webkit-scrollbar {
    display: none;  /* Safari and Chrome */
  }
  &:hover {
    -ms-overflow-style: auto;  /* Internet Explorer 10+ */
    scrollbar-width: auto;  /* Firefox */
    &::-webkit-scrollbar {
      display: block;  /* Safari and Chrome */
    }
  }
  & > div.flexbox-layout-item ~ div.flexbox-layout-item {
    margin-top: ${layoutSetting.space}px;
  }
`;


/***/ }),

/***/ "./jimu-layouts/lib/column-layout/common/util.ts":
/*!*******************************************************!*\
  !*** ./jimu-layouts/lib/column-layout/common/util.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calHeight: () => (/* binding */ calHeight),
/* harmony export */   getItemStyle: () => (/* binding */ getItemStyle),
/* harmony export */   isStretchInCrossAxis: () => (/* binding */ isStretchInCrossAxis)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../types */ "./jimu-layouts/lib/types.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");



function calHeight(itemSetting, bbox) {
    var _a, _b;
    if (((_a = itemSetting.autoProps) === null || _a === void 0 ? void 0 : _a.height) === _types__WEBPACK_IMPORTED_MODULE_1__.LayoutItemSizeModes.Auto || itemSetting.heightMode === 'ratio') {
        if (itemSetting.heightMode === 'ratio') {
            return { height: 'auto', flex: '0 0 auto' };
        }
        return { height: 'auto' };
    }
    if (((_b = itemSetting.autoProps) === null || _b === void 0 ? void 0 : _b.height) === _types__WEBPACK_IMPORTED_MODULE_1__.LayoutItemSizeModes.Stretch || itemSetting.heightMode === 'fit') {
        return { flex: '1 1 auto' };
    }
    return { height: bbox.height, flexShrink: 0 };
}
function isStretchInCrossAxis(layoutItem) {
    var _a, _b;
    return ((_b = (_a = layoutItem.setting) === null || _a === void 0 ? void 0 : _a.autoProps) === null || _b === void 0 ? void 0 : _b.width) !== _types__WEBPACK_IMPORTED_MODULE_1__.LayoutItemSizeModes.Custom;
}
function getItemStyle(style, layoutSetting, isStretch) {
    var _a, _b, _c;
    const isAutoHeight = ((_a = layoutSetting.autoProps) === null || _a === void 0 ? void 0 : _a.height) === _types__WEBPACK_IMPORTED_MODULE_1__.LayoutItemSizeModes.Auto;
    return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
    align-self: ${isStretch ? 'stretch' : (_c = (_b = layoutSetting.style) === null || _b === void 0 ? void 0 : _b.alignSelf) !== null && _c !== void 0 ? _c : 'auto'};
    width: ${(0,_utils__WEBPACK_IMPORTED_MODULE_2__.getValueOfBBox)(style, 'width')};
    height: ${(0,_utils__WEBPACK_IMPORTED_MODULE_2__.getValueOfBBox)(style, 'height')};
    flex: ${style.flex};
    flex-shrink: ${style.flexShrink};
    min-height: ${isAutoHeight ? 'unset' : null};
  `;
}


/***/ }),

/***/ "./jimu-layouts/lib/column-layout/default-setting.ts":
/*!***********************************************************!*\
  !*** ./jimu-layouts/lib/column-layout/default-setting.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_COLUMN_LAYOUT_SETTING: () => (/* binding */ DEFAULT_COLUMN_LAYOUT_SETTING)
/* harmony export */ });
const DEFAULT_COLUMN_LAYOUT_SETTING = {
    min: 16,
    space: 10
};


/***/ }),

/***/ "./jimu-layouts/lib/column-layout/runtime/layout-item.tsx":
/*!****************************************************************!*\
  !*** ./jimu-layouts/lib/column-layout/runtime/layout-item.tsx ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ColumnItem: () => (/* binding */ ColumnItem)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../types */ "./jimu-layouts/lib/types.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _runtime_layout_item__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../runtime/layout-item */ "./jimu-layouts/lib/runtime/layout-item.tsx");
/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/util */ "./jimu-layouts/lib/column-layout/common/util.ts");
/** @jsx jsx */





class ColumnItem extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    isStretchInCrossAxis() {
        const { layoutItem } = this.props;
        return _common_util__WEBPACK_IMPORTED_MODULE_4__.isStretchInCrossAxis(layoutItem);
    }
    calHeight(itemSetting, bbox) {
        return _common_util__WEBPACK_IMPORTED_MODULE_4__.calHeight(itemSetting, bbox);
    }
    getStyle(layoutSetting, isStretch) {
        const { layoutItem } = this.props;
        const bbox = layoutItem.bbox || {};
        const style = this.calHeight(layoutSetting, bbox);
        if (isStretch) {
            style.width = 'auto';
        }
        else {
            style.width = bbox.width;
        }
        this.autoHeight = style.height === 'auto';
        return _common_util__WEBPACK_IMPORTED_MODULE_4__.getItemStyle(style, layoutSetting, isStretch);
    }
    render() {
        var _a, _b;
        const { layoutId, layoutItem, onClick } = this.props;
        if (!layoutItem || layoutItem.isPending) {
            return null;
        }
        const layoutSetting = layoutItem.setting || {};
        const heightMode = (_b = (_a = layoutSetting.autoProps) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : _types__WEBPACK_IMPORTED_MODULE_1__.LayoutItemSizeModes.Custom;
        const mergedClass = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('flexbox-layout-item', { 'd-flex': heightMode !== _types__WEBPACK_IMPORTED_MODULE_1__.LayoutItemSizeModes.Auto });
        const isStretch = this.isStretchInCrossAxis();
        const keepAspectRatio = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.shouldUseAspectRatio)(layoutSetting);
        const ratio = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.parseAspectRatio)(layoutSetting.aspectRatio);
        const oneByOneAnimationProps = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.handleOnebyOneAnimation)(this.props);
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_runtime_layout_item__WEBPACK_IMPORTED_MODULE_3__["default"], Object.assign({ css: this.getStyle(layoutSetting, isStretch), layoutId: layoutId, layoutItemId: layoutItem.id, onClick: onClick, className: mergedClass, forceAspectRatio: keepAspectRatio, aspectRatio: ratio, autoHeight: this.autoHeight }, oneByOneAnimationProps)));
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/column-layout/runtime/layout.tsx":
/*!***********************************************************!*\
  !*** ./jimu-layouts/lib/column-layout/runtime/layout.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _layout_item__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layout-item */ "./jimu-layouts/lib/column-layout/runtime/layout-item.tsx");
/* harmony import */ var _default_setting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../default-setting */ "./jimu-layouts/lib/column-layout/default-setting.ts");
/* harmony import */ var _common_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/style */ "./jimu-layouts/lib/column-layout/common/style.ts");
/** @jsx jsx */






class Layout extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    createItem(itemId, index, layoutSetting) {
        const { layout } = this.props;
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_layout_item__WEBPACK_IMPORTED_MODULE_3__.ColumnItem, { key: itemId, index: index, space: layoutSetting.space, layoutId: layout.id, layoutItemId: itemId, layoutItem: layout.content[itemId] }));
    }
    render() {
        const { layout, className } = this.props;
        const content = layout.order || (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.Immutable)([]);
        const layoutSetting = Object.assign({}, _default_setting__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_COLUMN_LAYOUT_SETTING, layout.setting);
        const mergedStyle = {
            position: 'relative',
            overflow: 'hidden',
            padding: jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toCSSPadding(layoutSetting.padding)
        };
        const outClass = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('layout column-layout d-flex w-100', className);
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: outClass, style: mergedStyle, "data-layoutid": layout.id },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.IntersectionContext.Provider, { value: { monitor: true, layoutId: layout.id } },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.OneByOneAnimation, { oid: layout.id, className: 'trail-container d-flex flex-column w-100', css: (0,_common_style__WEBPACK_IMPORTED_MODULE_5__.getLayoutStyle)(layoutSetting) }, (content.asMutable()).map((layoutItem, index) => this.createItem(layoutItem, index, layoutSetting))))));
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.connect(_utils__WEBPACK_IMPORTED_MODULE_2__.mapStateToLayoutProps)(Layout));


/***/ }),

/***/ "./jimu-layouts/lib/common/page-util.ts":
/*!**********************************************!*\
  !*** ./jimu-layouts/lib/common/page-util.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_FOOTER_HEIGHT: () => (/* binding */ DEFAULT_FOOTER_HEIGHT),
/* harmony export */   DEFAULT_HEADER_HEIGHT: () => (/* binding */ DEFAULT_HEADER_HEIGHT),
/* harmony export */   computePageHeight: () => (/* binding */ computePageHeight)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

const DEFAULT_HEADER_HEIGHT = 75;
const DEFAULT_FOOTER_HEIGHT = 75;
function computePageHeight(pageJson, headerFooterHeight) {
    if (pageJson) {
        const appConfig = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
        const pageLayoutId = pageJson.layout[appConfig.mainSizeMode];
        const layout = appConfig.layouts[pageLayoutId];
        // only grid page need specific height
        if ((layout === null || layout === void 0 ? void 0 : layout.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.GridLayout) {
            if (headerFooterHeight > 0) {
                return `calc(100% - ${headerFooterHeight}px)`;
            }
            return '100%';
        }
    }
    return 'auto';
}


/***/ }),

/***/ "./jimu-layouts/lib/controller-panel/runtime/group.tsx":
/*!*************************************************************!*\
  !*** ./jimu-layouts/lib/controller-panel/runtime/group.tsx ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ControllerPanelGroup: () => (/* binding */ ControllerPanelGroup)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./jimu-layouts/lib/controller-panel/util.ts");
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ "./jimu-layouts/lib/controller-panel/runtime/layout.tsx");
/** @jsx jsx */



function ControllerPanelGroup(props) {
    const { pageId } = props;
    const controllerInfo = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        return (0,_util__WEBPACK_IMPORTED_MODULE_1__.findPageRelatedControllerIds)(state.appConfig, pageId, state.browserSizeMode);
    });
    const controllerIds = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => controllerInfo.split(',').filter(id => id !== ''), [controllerInfo]);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.Fragment, null, controllerIds.map((id) => ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_layout__WEBPACK_IMPORTED_MODULE_2__.ControllerPanel, { key: id, controllerId: id })))));
}


/***/ }),

/***/ "./jimu-layouts/lib/controller-panel/runtime/layout.tsx":
/*!**************************************************************!*\
  !*** ./jimu-layouts/lib/controller-panel/runtime/layout.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ControllerPanel: () => (/* binding */ ControllerPanel)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./panel */ "./jimu-layouts/lib/controller-panel/runtime/panel.tsx");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "./jimu-layouts/lib/controller-panel/util.ts");
/** @jsx jsx */



function ControllerPanel(props) {
    const { controllerId } = props;
    const [minimized, setMinimized] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(false);
    const innerLayoutId = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        // find the layoutInfo of the opened widget
        const controllerJson = state.appConfig.widgets[controllerId];
        const layoutName = controllerJson.manifest.layouts[0].name;
        const sizeModeLayouts = controllerJson.layouts[layoutName];
        return sizeModeLayouts[state.browserSizeMode] || sizeModeLayouts[state.appConfig.mainSizeMode];
    });
    const items = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a;
        // find the items of the opened widget
        const layout = state.appConfig.layouts[innerLayoutId];
        const itemIds = Object.keys((_a = layout.content) !== null && _a !== void 0 ? _a : {})
            .filter(itemId => {
            const layoutItem = layout.content[itemId];
            return (layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.widgetId) != null && !layoutItem.isPending;
        });
        itemIds.sort();
        return itemIds.join(',');
    });
    const hasItemOpened = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a, _b;
        const openedWidgets = Object.keys((_a = state.widgetsRuntimeInfo) !== null && _a !== void 0 ? _a : {}).filter(widgetId => {
            const info = state.widgetsRuntimeInfo[widgetId];
            return info.state === jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetState.Opened;
        });
        // find the items of the opened widget
        const layout = state.appConfig.layouts[innerLayoutId];
        return Object.keys((_b = layout.content) !== null && _b !== void 0 ? _b : {})
            .some(itemId => {
            const layoutItem = layout.content[itemId];
            return (layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.widgetId) != null && !layoutItem.isPending && openedWidgets.includes(layoutItem.widgetId);
        });
    });
    const itemIdList = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => items.split(',').filter(id => id !== ''), [items]);
    const panelJson = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        return state.appConfig.controllerPanels[controllerId];
    });
    const handleClose = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((e, widgetId) => {
        e.stopPropagation();
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.appActions.closeWidget(widgetId));
    }, []);
    const toggleMinimized = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        setMinimized(!minimized);
    }, [minimized]);
    const style = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
    ${(0,_util__WEBPACK_IMPORTED_MODULE_2__.convertToStyle)(panelJson)}
    height: ${minimized ? '36px' : panelJson === null || panelJson === void 0 ? void 0 : panelJson.height};
    transition: height 0.3s ease-in-out;
    transform: ${(0,_util__WEBPACK_IMPORTED_MODULE_2__.panelTransformStyle)(panelJson)}
  `, [panelJson, minimized]);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('panel-container', { 'd-none': !hasItemOpened }), css: style },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.Fragment, null, itemIdList.map(itemId => ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_panel__WEBPACK_IMPORTED_MODULE_1__.Panel, { key: itemId, controllerId: controllerId, layoutId: innerLayoutId, layoutItemId: itemId, minimized: minimized, onToggle: toggleMinimized, onClose: handleClose }))))));
}


/***/ }),

/***/ "./jimu-layouts/lib/controller-panel/runtime/panel.tsx":
/*!*************************************************************!*\
  !*** ./jimu-layouts/lib/controller-panel/runtime/panel.tsx ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Panel: () => (/* binding */ Panel)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var jimu_icons_outlined_editor_close__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jimu-icons/outlined/editor/close */ "./jimu-icons/outlined/editor/close.tsx");
/* harmony import */ var jimu_icons_outlined_directional_up_double__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jimu-icons/outlined/directional/up-double */ "./jimu-icons/outlined/directional/up-double.tsx");
/** @jsx jsx */




const { animated, useSpring } = jimu_core__WEBPACK_IMPORTED_MODULE_0__.spring;
const style = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
  position: relative;
  display: flex;
  background-color: var(--white);
  box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.2);
  .panel-header {
    background-color: var(--primary-600);
    color: var(--white);
    font-weight: 500;
    font-size: 0.875rem;
    height: 36px;
    .actions .jimu-btn {
      color: var(--primary-200);
      &:hover {
        color: var(--white);
      }
    }
  }
  .panel-content {
    position: relative;
    overflow: hidden;

    .widget-content {
      z-index: 0;
    }

    .widget-mask {
      position: absolute;
      background: transparent;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      z-index: 1;
    }
  }
`;
function Panel(props) {
    const { layoutId, layoutItemId, controllerId, minimized, onClose, onToggle } = props;
    const [mounted, setMounted] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(false);
    const ref = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const widgetId = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        const layoutItem = state.appConfig.layouts[layoutId].content[layoutItemId];
        return layoutItem.widgetId;
    });
    const isOpen = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a;
        const info = (_a = state.widgetsRuntimeInfo) === null || _a === void 0 ? void 0 : _a[widgetId];
        return (info === null || info === void 0 ? void 0 : info.state) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetState.Opened;
    });
    const label = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        const widgetJson = state.appConfig.widgets[widgetId];
        return widgetJson === null || widgetJson === void 0 ? void 0 : widgetJson.label;
    }, jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.shallowEqual);
    const widgetClassLoaded = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a;
        const widgetRuntimeInfo = state.widgetsRuntimeInfo[widgetId];
        return (_a = widgetRuntimeInfo === null || widgetRuntimeInfo === void 0 ? void 0 : widgetRuntimeInfo.isClassLoaded) !== null && _a !== void 0 ? _a : false;
    });
    const effect = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        const panelJson = state.appConfig.controllerPanels[controllerId];
        return panelJson.effect;
    });
    const animationObj = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        var _a, _b;
        if ((effect === null || effect === void 0 ? void 0 : effect.type) && effect.type !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationType.None) {
            return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAnimationEffect)(effect.type, {
                configType: (_a = effect.option) === null || _a === void 0 ? void 0 : _a.configType,
                direction: (_b = effect.option) === null || _b === void 0 ? void 0 : _b.direction
            });
        }
        return null;
    }, [effect]);
    const [effectProps, api] = useSpring(() => {
        return jimu_core__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ANIMATION_PROPS;
    }, [animationObj]);
    const handleClose = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((e) => {
        onClose(e, widgetId);
        // after panel closed, focus back to button
        const button = document.querySelector(`.widget-controller .avatar-card[data-widgetid='${widgetId}']`).querySelector('button');
        button === null || button === void 0 ? void 0 : button.focus();
    }, [widgetId, onClose]);
    (0,jimu_ui__WEBPACK_IMPORTED_MODULE_1__.useTrapFocusLoop)(ref, true, true, false, mounted && isOpen);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if (isOpen && !mounted) { // load the class when this widget is opened the first time
            setMounted(true);
            jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetManager.getInstance()
                .loadWidgetClass(widgetId)
                .catch((err) => {
                console.log(err);
            });
        }
    }, [isOpen, widgetId, mounted]);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if (isOpen && animationObj != null) {
            api.start(Object.assign(Object.assign({}, animationObj.animateProps()), { onRest: () => {
                    jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.defer(() => {
                        ref.current.style.clipPath = null; // eliminate clipPath to show box-shadow
                    });
                } }));
        }
    }, [api, isOpen, animationObj]);
    let WidgetClass;
    if (mounted && widgetClassLoaded) {
        WidgetClass = jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetManager.getInstance().getWidgetClass(widgetId);
    }
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(animated.div, { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('controller-panel flex-column w-100 h-100', { 'd-none': !mounted || !isOpen }), css: style, ref: ref, style: animationObj != null ? effectProps : null },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'panel-header d-flex align-items-center flex-shrink-0 px-4' },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'label d-flex align-items-center h-100' },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'text-truncate' }, label)),
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'actions ml-auto d-flex align-items-center' },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Button, { className: 'p-0', icon: true, type: 'tertiary', size: 'sm', onClick: onToggle },
                    (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_icons_outlined_directional_up_double__WEBPACK_IMPORTED_MODULE_3__.UpDoubleOutlined, { css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
              transform: rotate(${minimized ? 180 : 0}deg);
              transition: transform 0.3s ease-in-out;
            ` })),
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Button, { className: 'p-0 ml-2', icon: true, type: 'tertiary', size: 'sm', onClick: handleClose },
                    (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_icons_outlined_editor_close__WEBPACK_IMPORTED_MODULE_2__.CloseOutlined, null)))),
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'panel-content d-flex flex-grow-1' },
            !widgetClassLoaded && (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Loading, { type: jimu_ui__WEBPACK_IMPORTED_MODULE_1__.LoadingType.Donut }),
            WidgetClass && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'w-100 h-100 widget-content p-1' },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.ErrorBoundary, null,
                    (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(WidgetClass, { widgetId: widgetId, layoutId: layoutId, layoutItemId: layoutItemId })))))));
}


/***/ }),

/***/ "./jimu-layouts/lib/controller-panel/util.ts":
/*!***************************************************!*\
  !*** ./jimu-layouts/lib/controller-panel/util.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   convertToStyle: () => (/* binding */ convertToStyle),
/* harmony export */   findPageRelatedControllerIds: () => (/* binding */ findPageRelatedControllerIds),
/* harmony export */   panelTransformStyle: () => (/* binding */ panelTransformStyle)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _search_contents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../search/contents */ "./jimu-layouts/lib/search/contents.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./jimu-layouts/lib/types.ts");



function findPageRelatedControllerIds(appConfig, pageId, browserSizeMode) {
    var _a;
    const result = Object.keys((_a = appConfig.controllerPanels) !== null && _a !== void 0 ? _a : {}).filter(controllerId => {
        const rootInfo = (0,_search_contents__WEBPACK_IMPORTED_MODULE_1__.getContentRootContainerInfo)(appConfig, controllerId, jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, browserSizeMode);
        if (rootInfo == null) {
            return false;
        }
        if (rootInfo.type !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page) {
            return true;
        }
        return rootInfo.id === pageId;
    });
    result.sort();
    return result.join(',');
}
function panelTransformStyle(panelJson) {
    if (panelJson == null) {
        return null;
    }
    const { position, offsetX = 0, offsetY = 0 } = panelJson;
    let translate;
    if (panelJson.widthMode !== _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch) {
        if (offsetX !== 0) {
            translate = `translateX(${offsetX}px)`;
        }
        if (position === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.TopCenter || position === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.MiddleCenter || position === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.BottomCenter) {
            translate = translate != null ? `${translate} translateX(-50%)` : 'translateX(-50%)';
        }
    }
    if (panelJson.heightMode !== _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch) {
        if (offsetY !== 0) {
            translate = translate != null ? `${translate} translateY(${offsetY}px)` : `translateY(${offsetY}px)`;
        }
        if (position === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.MiddleLeft || position === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.MiddleCenter || position === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.MiddleRight) {
            translate = translate != null ? `${translate} translateY(-50%)` : 'translateY(-50%)';
        }
    }
    return translate;
}
function convertToStyle(panelJson) {
    let posStyle;
    switch (panelJson === null || panelJson === void 0 ? void 0 : panelJson.position) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.TopLeft:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: 0; left: 0; bottom: auto; right: auto;`;
            break;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.TopRight:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: 0; left: auto; bottom: auto; right: 0;`;
            break;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.BottomLeft:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: auto; left: 0; bottom: 0; right: auto;`;
            break;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.BottomRight:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: auto; left: auto; bottom: 0; right: 0;`;
            break;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.TopCenter:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: 0; left: 50%; bottom: auto; right: auto;`;
            break;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.BottomCenter:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: auto; left: 50%; bottom: 0; right: auto;`;
            break;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.MiddleLeft:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: 50%; left: 0; bottom: auto; right: auto;`;
            break;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.MiddleRight:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: 50%; left: auto; bottom: auto; right: 0;`;
            break;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ControllerPosition.MiddleCenter:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: 50%; left: 50%; bottom: auto; right: auto;`;
            break;
        default:
            posStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `top: 0; left: 0; bottom: auto; right: auto;`;
            break;
    }
    let widthModeStyle;
    let heightModeStyle;
    if (panelJson.widthMode === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch) {
        widthModeStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `width:auto;left:${panelJson.left};right:${panelJson.right};`;
    }
    if (panelJson.heightMode === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch) {
        heightModeStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `height:auto;top:${panelJson.top};bottom:${panelJson.bottom};`;
    }
    return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
    position: fixed;
    ${posStyle}
    width: ${panelJson === null || panelJson === void 0 ? void 0 : panelJson.width};
    height: ${panelJson === null || panelJson === void 0 ? void 0 : panelJson.height};
    ${widthModeStyle};
    ${heightModeStyle}
    overflow: visible;
    z-index: 2;
  `;
}


/***/ }),

/***/ "./jimu-layouts/lib/default-common-setting.ts":
/*!****************************************************!*\
  !*** ./jimu-layouts/lib/default-common-setting.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_LAYOUT_ITEM_SETTING: () => (/* binding */ DEFAULT_LAYOUT_ITEM_SETTING)
/* harmony export */ });
const DEFAULT_LAYOUT_ITEM_SETTING = {
    order: 0
};


/***/ }),

/***/ "./jimu-layouts/lib/fixed-layout/common/util.ts":
/*!******************************************************!*\
  !*** ./jimu-layouts/lib/fixed-layout/common/util.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getPositionStyle: () => (/* binding */ getPositionStyle)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");


function getPositionStyle(mergedStyle) {
    return [
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      position: absolute;
      left: ${(0,_utils__WEBPACK_IMPORTED_MODULE_1__.getValueOfBBox)(mergedStyle, 'left')};
      right: ${(0,_utils__WEBPACK_IMPORTED_MODULE_1__.getValueOfBBox)(mergedStyle, 'right')};
      top: ${(0,_utils__WEBPACK_IMPORTED_MODULE_1__.getValueOfBBox)(mergedStyle, 'top')};
      bottom: ${(0,_utils__WEBPACK_IMPORTED_MODULE_1__.getValueOfBBox)(mergedStyle, 'bottom')};
      width: ${(0,_utils__WEBPACK_IMPORTED_MODULE_1__.getValueOfBBox)(mergedStyle, 'width')};
      height: ${(0,_utils__WEBPACK_IMPORTED_MODULE_1__.getValueOfBBox)(mergedStyle, 'height')};
    `,
        mergedStyle.transform
    ];
}


/***/ }),

/***/ "./jimu-layouts/lib/fixed-layout/default-setting.ts":
/*!**********************************************************!*\
  !*** ./jimu-layouts/lib/fixed-layout/default-setting.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_FIX_LAYOUT_ITEM_SETTING: () => (/* binding */ DEFAULT_FIX_LAYOUT_ITEM_SETTING),
/* harmony export */   DEFAULT_FIX_LAYOUT_SETTING: () => (/* binding */ DEFAULT_FIX_LAYOUT_SETTING)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _default_common_setting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../default-common-setting */ "./jimu-layouts/lib/default-common-setting.ts");


const DEFAULT_FIX_LAYOUT_SETTING = jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.assign({}, {
    gridSize: 1
});
const DEFAULT_FIX_LAYOUT_ITEM_SETTING = jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.assign({}, _default_common_setting__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_LAYOUT_ITEM_SETTING, {
    lockParent: false,
    lockLayout: false,
    autoProps: {}
});


/***/ }),

/***/ "./jimu-layouts/lib/fixed-layout/fixed-layout-util.ts":
/*!************************************************************!*\
  !*** ./jimu-layouts/lib/fixed-layout/fixed-layout-util.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   applyPositionSetting: () => (/* binding */ applyPositionSetting),
/* harmony export */   applySnapResult: () => (/* binding */ applySnapResult),
/* harmony export */   autoResponseToDevice: () => (/* binding */ autoResponseToDevice),
/* harmony export */   contains: () => (/* binding */ contains),
/* harmony export */   fixedLayoutTransform: () => (/* binding */ fixedLayoutTransform),
/* harmony export */   flipAutoProps: () => (/* binding */ flipAutoProps),
/* harmony export */   flipBBox: () => (/* binding */ flipBBox),
/* harmony export */   generateBBoxStyle: () => (/* binding */ generateBBoxStyle),
/* harmony export */   generateResizingBBoxStyle: () => (/* binding */ generateResizingBBoxStyle),
/* harmony export */   getAbsolutePos: () => (/* binding */ getAbsolutePos),
/* harmony export */   intersects: () => (/* binding */ intersects),
/* harmony export */   mergePos: () => (/* binding */ mergePos),
/* harmony export */   sortLayoutItems: () => (/* binding */ sortLayoutItems)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./jimu-layouts/lib/types.ts");
/* eslint-disable prefer-const */



function sortLayoutItems(layout) {
    if (layout.content == null || Object.keys(layout.content).length === 0) {
        return [];
    }
    const defaultSize = 1280;
    const parseValue = (value) => {
        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPercentage)(value) ? (parseFloat(value) * defaultSize) / 100 : +value;
    };
    const sortFunc = (item1, item2) => {
        // compare top
        const top1 = parseValue(item1.bbox.top);
        const top2 = parseValue(item2.bbox.top);
        if (top1 > top2) {
            return 1;
        }
        if (top1 < top2) {
            return -1;
        }
        // compare left
        const left1 = parseValue(item1.bbox.left);
        const left2 = parseValue(item2.bbox.left);
        if (left1 > left2) {
            return 1;
        }
        if (left1 < left2) {
            return -1;
        }
        return 0;
    };
    return Object.keys(layout.content)
        .map(key => layout.content[key])
        .sort(sortFunc)
        .map(layoutItem => layoutItem.id);
}
function fixedLayoutTransform(layout, fromSizeMode, toSizeMode) {
    const fromSizeModeWidth = jimu_core__WEBPACK_IMPORTED_MODULE_1__.utils.getSizeModeWidth(fromSizeMode);
    const toSizeModeWidth = jimu_core__WEBPACK_IMPORTED_MODULE_1__.utils.getSizeModeWidth(toSizeMode);
    if (fromSizeModeWidth < toSizeModeWidth) {
        return layout;
    }
    return autoResponseToDevice(layout, toSizeModeWidth);
}
/**
 * Convert a layout to a small size(width) layout.
 *
 * Return the new layout.
 *
 *
 * @param layout
 * @param convertToColumn
 * @param appConfig
 */
function autoResponseToDevice(layout, deviceWidth) {
    const defaultWidth = deviceWidth;
    const defaultHeight = 800;
    const content = layout.order;
    if (content == null || content.length === 0) {
        return layout;
    }
    let updatedLayout = (0,jimu_core__WEBPACK_IMPORTED_MODULE_1__.Immutable)(layout);
    const bboxes = [];
    content.forEach(itemId => {
        bboxes.push(Object.assign({ id: itemId }, getAbsolutePos(layout.content[itemId].bbox, defaultWidth, defaultHeight)));
    });
    bboxes.sort(sortPos);
    // merge the items that are contained by another
    const groupedBBoxes = [bboxes[0]];
    for (let i = 1; i < bboxes.length; i++) {
        const item = bboxes[i];
        // eslint-disable-next-line
        const grouped = groupedBBoxes.some(b => {
            if (contains(b, item)) {
                // b is always at the top left of the item after sorting
                if (b.content == null) {
                    b.content = [];
                }
                b.content.push(Object.assign({}, item));
                return true;
            }
        });
        if (!grouped) {
            groupedBBoxes.push(item);
        }
    }
    // restrict the bbox of each item into the container
    let lastTop = 0;
    let updatedContent = [];
    groupedBBoxes.forEach(b => {
        let deltaY = 0;
        restrictPos(b, defaultWidth);
        if (b.y < lastTop) {
            deltaY = lastTop - b.y;
            b.y = lastTop;
        }
        lastTop = b.y + b.h;
        updatedLayout = updatedLayout
            .setIn(['content', b.id, 'bbox'], {
            left: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toRatio)(b.x, defaultWidth),
            top: `${b.y}px`,
            width: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toRatio)(b.w, defaultWidth),
            height: `${b.h}px`
        })
            .setIn(['content', b.id, 'setting', 'autoProps', 'width'], _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom);
        updatedContent.push(b.id);
        if (b.content != null) {
            b.content.forEach(subItem => {
                restrictPos(subItem, defaultWidth);
                if (deltaY > 0) {
                    subItem.y += deltaY;
                }
                updatedLayout = updatedLayout
                    .setIn(['content', b.id, 'bbox'], {
                    left: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toRatio)(b.x, defaultWidth),
                    top: `${b.y}px`,
                    width: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toRatio)(b.w, defaultWidth),
                    height: `${b.h}px`
                })
                    .setIn(['content', b.id, 'setting', 'autoProps', 'width'], _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom);
                updatedContent.push(subItem.id);
            });
        }
    });
    updatedLayout = updatedLayout.set('order', updatedContent);
    return updatedLayout;
}
function restrictPos(b, maxWidth, isInGroup) {
    // restrict the bbox of each item into the container
    if (b.x > maxWidth) {
        if (!isInGroup) {
            // wrap the item
            b.x = 0;
            b.y += b.h;
        }
        else {
            // move left
            b.x = maxWidth - b.w;
        }
    }
    if (b.x < 0) {
        b.x = 0;
    }
    if (b.x + b.w > maxWidth) {
        if (b.w < maxWidth) {
            b.x = maxWidth - b.w;
        }
        else {
            b.w = maxWidth;
            b.x = 0;
        }
    }
}
function sortPos(p1, p2) {
    // top to bottom, left to right
    if (p1.y !== p2.y) {
        return p1.y > p2.y ? 1 : -1;
    }
    else if (p1.x !== p2.x) {
        return p1.x > p2.x ? 1 : -1;
    }
    return 0;
}
function intersects(p1, p2) {
    const x1 = Math.max(p1.x, p2.x);
    const x2 = Math.min(p1.x + p1.w, p2.x + p2.w);
    const y1 = Math.max(p1.y, p2.y);
    const y2 = Math.min(p1.y + p1.h, p2.y + p2.h);
    return x1 < x2 && y1 < y2;
}
function contains(p1, p2) {
    return p1.x <= p2.x && p1.x + p1.w > p2.x + p2.w && p1.y <= p2.y && p1.y + p1.h > p2.y + p2.h;
}
function mergePos(p1, p2) {
    const left = Math.min(p1.x, p2.x);
    const top = Math.min(p1.y, p2.y);
    const right = Math.max(p1.x + p1.w, p2.x + p2.w);
    const bottom = Math.max(p1.y + p1.h, p2.y + p2.h);
    return {
        x: left,
        y: top,
        w: right - left,
        h: bottom - top
    };
}
function getAbsolutePos(b, containerWidth, containerHeight) {
    var _a, _b;
    const result = {};
    let x = 0;
    let y = 0;
    let w = containerWidth;
    let h = containerHeight * 0.2; // default is 100% width, 20% height
    if (b != null) {
        ['left', 'right', 'top', 'bottom', 'width', 'height'].forEach(prop => {
            if (b[prop] !== undefined && b[prop] !== 'auto') {
                const size = ['left', 'right', 'width'].includes(prop) ? containerWidth : containerHeight;
                result[prop] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPercentage)(b[prop]) ? (0,_utils__WEBPACK_IMPORTED_MODULE_0__.fromRatio)(b[prop], size) : parseFloat(b[prop]);
            }
        });
        if (result.left !== undefined) {
            x = result.left;
        }
        if (result.width !== undefined) {
            w = result.width;
            if (result.left === undefined && result.right !== undefined) {
                x = containerWidth - result.right - w;
            }
        }
        else {
            w = containerWidth - ((_a = result.left) !== null && _a !== void 0 ? _a : 0) - ((_b = result.right) !== null && _b !== void 0 ? _b : 0);
        }
        if (result.top !== undefined) {
            y = result.top;
        }
        if (result.height !== undefined) {
            h = result.height;
            if (result.top === undefined && result.bottom !== undefined) {
                y = containerHeight - result.bottom - h;
            }
        }
        else if (result.top !== undefined && result.bottom !== undefined) {
            h = containerHeight - result.top - result.bottom;
        }
    }
    return { x, y, w, h };
}
function generateResizingBBoxStyle(initRect, containerRect, delta, autoFlip = false) {
    const result = {};
    result.left = initRect.left + delta.dx;
    result.width = initRect.width + delta.dw;
    const right = containerRect.right - initRect.right;
    if (delta.dw === 0) {
        // move
        result.right = right - delta.dx;
    }
    else if (delta.dx === 0) {
        // resize at right
        if (delta.dw > 0) {
            delta.dw = Math.min(right, delta.dw);
        }
        result.right = right - delta.dw;
        result.width = initRect.width + delta.dw;
    }
    else {
        result.right = right;
        if (delta.dx < 0) {
            delta.dx = Math.max(-initRect.left, delta.dx);
            delta.dw = -delta.dx;
            result.left = initRect.left + delta.dx;
            result.width = initRect.width + delta.dw;
        }
    }
    result.top = initRect.top + delta.dy;
    result.height = initRect.height + delta.dh;
    const bottom = containerRect.bottom - initRect.bottom;
    if (delta.dh === 0) {
        // move
        result.bottom = bottom - delta.dy;
    }
    else if (delta.dy === 0) {
        // resize at bottom
        if (delta.dh > 0) {
            delta.dh = Math.min(bottom, delta.dh);
        }
        result.bottom = bottom - delta.dh;
        result.height = initRect.height + delta.dh;
    }
    else {
        result.bottom = bottom;
        if (delta.dy < 0) {
            delta.dy = Math.max(-initRect.top, delta.dy);
            delta.dh = -delta.dy;
            result.top = initRect.top + delta.dy;
            result.height = initRect.height + delta.dh;
        }
    }
    if (autoFlip && (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isRTL)()) {
        return flipBBox(result);
    }
    return result;
}
function generateBBoxStyle(bbox, setting) {
    var _a, _b, _c, _d, _e;
    const result = {};
    let autoProps = (_a = setting === null || setting === void 0 ? void 0 : setting.autoProps) !== null && _a !== void 0 ? _a : {};
    let box = bbox;
    const heightMode = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getLayoutItemSizeMode)('height', bbox, autoProps);
    const widthMode = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getLayoutItemSizeMode)('width', bbox, autoProps);
    if (heightMode === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch) {
        result.top = box.top;
        result.bottom = box.bottom;
    }
    else {
        const topAuto = (_b = autoProps.top) !== null && _b !== void 0 ? _b : false;
        const bottomAuto = (_c = autoProps.bottom) !== null && _c !== void 0 ? _c : false;
        if (heightMode === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom) {
            result.height = box.height;
        }
        // one and only one of the top or bottom can be used
        if ((topAuto === bottomAuto || bottomAuto) && bbox.top != null) {
            result.top = box.top;
        }
        else {
            result.bottom = box.bottom;
        }
        // align center
        if (setting.vCenter && box.top === '50%') {
            result.top = '50%';
        }
    }
    if (widthMode === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch) {
        result.left = box.left;
        result.right = box.right;
    }
    else {
        const leftAuto = (_d = autoProps.left) !== null && _d !== void 0 ? _d : false;
        const rightAuto = (_e = autoProps.right) !== null && _e !== void 0 ? _e : false;
        if (widthMode === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom) {
            result.width = box.width;
        }
        // one and only one of the left or right can be used
        if (leftAuto === rightAuto) {
            if (box.left != null) {
                result.left = box.left;
            }
            else {
                result.right = box.right;
            }
        }
        else if (leftAuto && box.right != null) {
            result.right = box.right;
        }
        else {
            result.left = box.left;
        }
        // align center
        if (setting.hCenter && box.left === '50%') {
            result.left = '50%';
        }
    }
    return result;
}
function flipAutoProps(autoProps) {
    const result = (0,jimu_core__WEBPACK_IMPORTED_MODULE_1__.Immutable)(autoProps);
    const temp = autoProps.left;
    return result.set('left', autoProps.right).set('right', temp);
}
function flipBBox(bbox) {
    const result = (0,jimu_core__WEBPACK_IMPORTED_MODULE_1__.Immutable)(bbox);
    const temp = bbox.left;
    return result.set('left', bbox.right).set('right', temp);
}
function applyPositionSetting(bbox, itemSetting, isResizing = false) {
    const extraStyle = {};
    const hCenter = itemSetting.hCenter && bbox.left === '50%';
    const vCenter = itemSetting.vCenter && bbox.top === '50%';
    const sign = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isRTL)() ? -1 : 1;
    if (hCenter && vCenter) {
        extraStyle.right = 'auto';
        extraStyle.bottom = 'auto';
        extraStyle.transform = `translate(${sign * -50}%, -50%)`;
    }
    else if (hCenter) {
        extraStyle.right = 'auto';
        extraStyle.transform = `translateX(${sign * -50}%)`;
    }
    else if (vCenter) {
        extraStyle.bottom = 'auto';
        extraStyle.transform = 'translateY(-50%)';
    }
    if (!isResizing && (0,_utils__WEBPACK_IMPORTED_MODULE_0__.shouldUseAspectRatio)(itemSetting)) {
        extraStyle.height = 'auto';
    }
    return extraStyle;
}
/**
 * Do not change the autoProps value except that value is empty.
 */
function applySnapResult(bbox, setting, containerRect, snapRect) {
    var _a, _b;
    let outputBox = bbox;
    let outSetting = (0,jimu_core__WEBPACK_IMPORTED_MODULE_1__.Immutable)(setting !== null && setting !== void 0 ? setting : {});
    if (((_a = setting === null || setting === void 0 ? void 0 : setting.autoProps) === null || _a === void 0 ? void 0 : _a.width) !== _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch) {
        if (snapRect.left < snapRect.right) {
            if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isRTL)()) {
                outSetting = outSetting.setIn(['autoProps', 'right'], false).setIn(['autoProps', 'left'], true);
            }
            else {
                outSetting = outSetting.setIn(['autoProps', 'left'], false).setIn(['autoProps', 'right'], true);
            }
        }
        else {
            if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isRTL)()) {
                outSetting = outSetting.setIn(['autoProps', 'left'], false).setIn(['autoProps', 'right'], true);
            }
            else {
                outSetting = outSetting.setIn(['autoProps', 'right'], false).setIn(['autoProps', 'left'], true);
            }
        }
    }
    if (((_b = setting === null || setting === void 0 ? void 0 : setting.autoProps) === null || _b === void 0 ? void 0 : _b.height) !== _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch) {
        if (snapRect.top < snapRect.bottom) {
            outSetting = outSetting.setIn(['autoProps', 'top'], false).setIn(['autoProps', 'bottom'], true);
        }
        else {
            outSetting = outSetting.setIn(['autoProps', 'top'], true).setIn(['autoProps', 'bottom'], false);
        }
    }
    ['left', 'right', 'top', 'bottom', 'width', 'height'].forEach(prop => {
        const size = prop === 'left' || prop === 'right' || prop === 'width' ? containerRect.width : containerRect.height;
        let usePercentage = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPercentage)(bbox[prop]);
        if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isRTL)()) {
            if (prop === 'left') {
                usePercentage = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPercentage)(bbox.right);
            }
            else if (prop === 'right') {
                usePercentage = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPercentage)(bbox.left);
            }
        }
        if (bbox[prop] == null || usePercentage) {
            outputBox = outputBox.set(prop, (0,_utils__WEBPACK_IMPORTED_MODULE_0__.toRatio)(snapRect[prop], size));
        }
        else {
            outputBox = outputBox.set(prop, `${Math.round(snapRect[prop])}px`);
        }
    });
    return { bbox: outputBox, setting: outSetting };
}


/***/ }),

/***/ "./jimu-layouts/lib/fixed-layout/runtime/layout-item.tsx":
/*!***************************************************************!*\
  !*** ./jimu-layouts/lib/fixed-layout/runtime/layout-item.tsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FixedLayoutItem)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types */ "./jimu-layouts/lib/types.ts");
/* harmony import */ var _default_setting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../default-setting */ "./jimu-layouts/lib/fixed-layout/default-setting.ts");
/* harmony import */ var _runtime_layout_item__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../runtime/layout-item */ "./jimu-layouts/lib/runtime/layout-item.tsx");
/* harmony import */ var _fixed_layout_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fixed-layout-util */ "./jimu-layouts/lib/fixed-layout/fixed-layout-util.ts");
/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/util */ "./jimu-layouts/lib/fixed-layout/common/util.ts");
/** @jsx jsx */







class FixedLayoutItem extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    getPositionStyle(itemSetting) {
        const { layoutItem, transformedBBox } = this.props;
        const bbox = transformedBBox !== null && transformedBBox !== void 0 ? transformedBBox : layoutItem.bbox;
        const pos = (0,_fixed_layout_util__WEBPACK_IMPORTED_MODULE_5__.generateBBoxStyle)(bbox, itemSetting);
        const mergedStyle = Object.assign(Object.assign({}, pos), (0,_fixed_layout_util__WEBPACK_IMPORTED_MODULE_5__.applyPositionSetting)(layoutItem.bbox, itemSetting));
        return _common_util__WEBPACK_IMPORTED_MODULE_6__.getPositionStyle(mergedStyle);
    }
    render() {
        const { layoutItem, layoutId } = this.props;
        if (layoutItem == null || layoutItem.isPending) {
            return null;
        }
        const itemSetting = jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.assign({}, _default_setting__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_FIX_LAYOUT_ITEM_SETTING, layoutItem.setting);
        const ratio = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.parseAspectRatio)(itemSetting.aspectRatio);
        const useAspectRatio = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.shouldUseAspectRatio)(itemSetting);
        const oneByOneAnimationProps = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.handleOnebyOneAnimation)(this.props);
        const [cssStyle, transform] = this.getPositionStyle(itemSetting);
        const widthMode = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getLayoutItemSizeMode)('width', layoutItem.bbox, itemSetting.autoProps);
        const heightMode = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getLayoutItemSizeMode)('height', layoutItem.bbox, itemSetting.autoProps);
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_runtime_layout_item__WEBPACK_IMPORTED_MODULE_4__["default"], Object.assign({ css: cssStyle, style: { transform }, layoutId: layoutId, layoutItemId: layoutItem.id, forceAspectRatio: useAspectRatio, aspectRatio: ratio, isInSection: this.props.isInSection, autoWidth: widthMode === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Auto, autoHeight: heightMode === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Auto }, oneByOneAnimationProps)));
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/fixed-layout/runtime/layout.tsx":
/*!**********************************************************!*\
  !*** ./jimu-layouts/lib/fixed-layout/runtime/layout.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _layout_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout-item */ "./jimu-layouts/lib/fixed-layout/runtime/layout-item.tsx");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _default_setting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../default-setting */ "./jimu-layouts/lib/fixed-layout/default-setting.ts");
/** @jsx jsx */





class FixedLayoutViewer extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    createItem(layout, itemId, index, transformed) {
        const layoutItem = layout.content[itemId];
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_layout_item__WEBPACK_IMPORTED_MODULE_2__["default"], { key: `${layout.id}_${itemId}`, index: index, layoutId: layout.id, layoutItemId: itemId, layoutItem: layoutItem, transformedBBox: transformed
                ? (layout.content[itemId].bbox)
                : null, isInSection: this.props.isInSection }));
    }
    render() {
        const { layout, layouts, className, style, browserSizeMode } = this.props;
        if (!layout) {
            return null;
        }
        let targetLayout = layout;
        let transformed = false;
        if (layouts[browserSizeMode] !== layout.id && this.layoutTransform) {
            let fromSizeMode;
            // eslint-disable-next-line
            Object.keys(layouts).some(mode => {
                if (layouts[mode] === layout.id) {
                    fromSizeMode = mode;
                    return true;
                }
            });
            targetLayout = this.layoutTransform(layout, fromSizeMode, browserSizeMode);
            transformed = true;
        }
        const layoutSetting = jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.assign({}, _default_setting__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_FIX_LAYOUT_SETTING, targetLayout.setting);
        const layoutIds = (targetLayout.order || []);
        const mergedClasses = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('layout fixed-layout d-flex', className);
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: mergedClasses, style: Object.assign(Object.assign(Object.assign({ position: 'relative', height: 'auto' }, style), jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toCSSStyle(layoutSetting.style)), { width: '100%', overflow: 'hidden' }), "data-layoutid": targetLayout.id }, layoutIds.length > 0 && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.IntersectionContext.Provider, { value: { monitor: false } },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.OneByOneAnimation, { css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
                position: absolute;
                left: 0;
                right: 0;
                top: 0;
                bottom: 0;
              `, oid: layout.id, "data-layoutid": layout.id }, layoutIds.map((itemId, index) => this.createItem(targetLayout, itemId, index, transformed)))))));
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.connect(_utils__WEBPACK_IMPORTED_MODULE_3__.mapStateToLayoutProps)(FixedLayoutViewer));


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/common/index.tsx":
/*!*******************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/common/index.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScreenMainPanel: () => (/* reexport safe */ _screen_main_panel__WEBPACK_IMPORTED_MODULE_1__.ScreenMainPanel),
/* harmony export */   ScreenMainPanelList: () => (/* reexport safe */ _screen_main_panel_list__WEBPACK_IMPORTED_MODULE_2__.ScreenMainPanelList),
/* harmony export */   ScreenSidePanel: () => (/* reexport safe */ _screen_side_panel__WEBPACK_IMPORTED_MODULE_0__.ScreenSidePanel)
/* harmony export */ });
/* harmony import */ var _screen_side_panel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./screen-side-panel */ "./jimu-layouts/lib/flow-layout/common/screen-side-panel.tsx");
/* harmony import */ var _screen_main_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./screen-main-panel */ "./jimu-layouts/lib/flow-layout/common/screen-main-panel.tsx");
/* harmony import */ var _screen_main_panel_list__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./screen-main-panel-list */ "./jimu-layouts/lib/flow-layout/common/screen-main-panel-list.tsx");





/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/common/screen-main-panel-list.tsx":
/*!************************************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/common/screen-main-panel-list.tsx ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScreenMainPanelList: () => (/* binding */ ScreenMainPanelList)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _screen_main_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./screen-main-panel */ "./jimu-layouts/lib/flow-layout/common/screen-main-panel.tsx");
/** @jsx jsx */


function getContainerStyle(transitionType, viewHeight, headerHeight, isSmallSize, numOfScreens) {
    if (transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade) {
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      position: sticky;
      height: ${viewHeight}px;
      top: 0;

      body:not(.design-mode) & {
        height: ${headerHeight > 0 ? `calc(100vh - ${headerHeight}px)` : '100vh'};
        height: ${headerHeight > 0 ? `calc(var(--vh) * 100 - ${headerHeight}px)` : 'calc(var(--vh) * 100)'};
        top: ${headerHeight > 0 ? `${headerHeight}px` : 0};
        .layout .exb-drop-area {
          pointer-events: none !important;
        }
      }

      .screen-main-panel {
        position: absolute;
        opacity: 0;
        visibility: hidden;
        z-index: 0;
        transition: ${isSmallSize ? null : 'opacity 400ms'};
        top: 0;
        /* height: ${isSmallSize ? 'unset' : '100% !important'}; */

        .layout .exb-drop-area {
          pointer-events: none;
        }

        &.is-active {
          opacity: 1;
          visibility: visible;
          pointer-events: auto;
          z-index: 1;

          .layout .exb-drop-area {
            pointer-events: auto;
          }
        }
      }
    `;
    }
    if (transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Cover) {
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      position: sticky;
      height: ${viewHeight}px;
      overflow: hidden;
      top: 0;

      body:not(.design-mode) & {
        height: 100%;
        overflow: unset;
        position: relative;

        .screen-main-panel {
          top: ${headerHeight > 0 ? `${headerHeight}px` : 0};
        }
      }

      & > div:first-of-type {
        margin-top: 0 !important;
      }

      .screen-main-panel {
        position: sticky;
        top: 0;
        margin-top: ${numOfScreens === 1 ? '0 !important' : null};

        .spacing-area {
          display: none;
        }
      }
    `;
    }
    if (transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Push) {
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      position: sticky;
      height: ${viewHeight}px;
      overflow: hidden;
      top: 0;

      body:not(.design-mode) & {
        height: auto;
        overflow: unset;

        .screen-main-panel > .layout {
          top: ${headerHeight > 0 ? `${headerHeight}px` : 0};
        }
      }

      .screen-main-panel > .layout {
        position: sticky !important;
        top: 0;
      }
    `;
    }
}
function getPlaceholderStyle(transitionType, viewHeight, isSmallSize) {
    if (transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade) {
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      height: calc(100% - ${viewHeight}px);
      background: transparent;
      pointer-events: none;

      body:not(.design-mode) & {
        height: calc(100% - 100vh);
        height: calc(100% - var(--vh) * 100);
      }
    `;
    }
    if (transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Cover || transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Push) {
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      height: calc(100% - ${viewHeight}px);
      background: transparent;
      pointer-events: none;
      display: block;

      body:not(.design-mode) & {
        height: calc(100% - 100vh);
        height: calc(100% - var(--vh) * 100);
        display: none;
      }
    `;
    }
}
function ScreenMainPanelList(props) {
    const { rootLayoutId, activeIndex, viewHeight, headerHeight, screens, transitionType, isSmallSize, layoutEntry, isDesignMode, formatMessage, builderTheme } = props;
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.Fragment, null,
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'screen-container', css: getContainerStyle(transitionType, viewHeight, headerHeight, isSmallSize, screens.length) }, screens.map((screenId, idx) => {
            return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_screen_main_panel__WEBPACK_IMPORTED_MODULE_1__.ScreenMainPanel, { key: screenId, rootLayoutId: rootLayoutId, index: idx, isActive: activeIndex === idx, screenId: screenId, viewHeight: viewHeight, headerHeight: headerHeight, isAbsolute: transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade, isLast: idx === screens.length - 1, isSmallSize: isSmallSize, layoutEntry: layoutEntry, isDesignMode: isDesignMode, formatMessage: formatMessage, builderTheme: builderTheme }));
        })),
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'screen-placeholder', css: getPlaceholderStyle(transitionType, viewHeight, isSmallSize) })));
}


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/common/screen-main-panel.tsx":
/*!*******************************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/common/screen-main-panel.tsx ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScreenMainPanel: () => (/* binding */ ScreenMainPanel)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _builder_page_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type */ "./jimu-layouts/lib/flow-layout/common/type.ts");
/* harmony import */ var jimu_icons_outlined_application_visible__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jimu-icons/outlined/application/visible */ "./jimu-icons/outlined/application/visible.tsx");
/* harmony import */ var _builder_theme_tooltip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../builder/theme-tooltip */ "./jimu-layouts/lib/builder/theme-tooltip.tsx");
/** @jsx jsx */






function ScreenMainPanel(props) {
    const { rootLayoutId, viewHeight, headerHeight, screenId, isActive, isAbsolute, isLast, isSmallSize, layoutEntry: LayoutEntry, isDesignMode, formatMessage, builderTheme } = props;
    const screenJson = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        return state.appConfig.screens[screenId];
    });
    const panelVisible = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a, _b, _c;
        return (_c = (_b = (_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.screenPanelStates) === null || _b === void 0 ? void 0 : _b[screenId]) !== null && _c !== void 0 ? _c : true;
    });
    const { main } = screenJson;
    const { side, size, overlay = true } = screenJson.panel || {};
    const elementRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const showPanel = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.appActions.screenPanelVisibleChanged(screenId, true));
    }, [screenId]);
    function getStyle() {
        var _a, _b, _c, _d;
        if (isSmallSize) {
            const isDocked = !overlay && screenJson.panel != null; // overlay === false
            const heightInDesignMode = isDocked
                ? `${Math.round(viewHeight * _type__WEBPACK_IMPORTED_MODULE_3__.SCREEN_RATIO_IN_SMALL_SIZE)}px`
                : `${viewHeight}px`;
            const heightInRuntime = isDocked
                ? `${Math.round(100 * _type__WEBPACK_IMPORTED_MODULE_3__.SCREEN_RATIO_IN_SMALL_SIZE)}`
                : '100';
            return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
        pointer-events: none !important;
        display: flex;
        flex-direction: column;
        width: 100%;
        height: ${viewHeight}px;

        > .layout {
          ${jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toBackgroundEmotionStyle((_b = (_a = screenJson.main) === null || _a === void 0 ? void 0 : _a.background) !== null && _b !== void 0 ? _b : {})};
          height: ${heightInDesignMode} !important;
          border: none !important;
          pointer-events: auto;
        }

        body:not(.design-mode) & {
          height: ${headerHeight > 0 ? `calc(100vh - ${headerHeight}px)` : '100vh'};
          height: ${headerHeight > 0 ? `calc(var(--vh) * 100 - ${headerHeight}px)` : 'calc(var(--vh) * 100)'};
          > .layout {
            height: ${heightInRuntime}vh !important;
            height: calc(var(--vh) * ${heightInRuntime}) !important;
          }
        }

        .spacing-area {
          flex: 1;
          background: transparent;
          pointer-events: none;
        }

        .toggle-visible-btn {
          position: absolute;
          bottom: 0;
          right: left;
          pointer-events: auto;
        }
      `;
        }
        let left = '0px';
        let right = '0px';
        if (side !== 'none') {
            if (!overlay && side !== 'right') {
                left = size;
            }
            if (!overlay && side === 'right') {
                right = size;
            }
        }
        const btnStyle = builderTheme
            ? (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      color: ${builderTheme.colors.palette.dark[900]};
      background-color: ${builderTheme.colors.palette.light[400]};
      border-color: ${builderTheme.colors.palette.light[600]};
      &:hover {
        color: ${builderTheme.colors.black};
        background-color: ${builderTheme.colors.palette.light[600]};
      }
    `
            : null;
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      ${jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toBackgroundEmotionStyle((_d = (_c = screenJson.main) === null || _c === void 0 ? void 0 : _c.background) !== null && _d !== void 0 ? _d : {})};
      left: ${isAbsolute ? left : null};
      right: ${isAbsolute ? right : null};
      margin-left: ${!isAbsolute ? left : null};
      margin-right: ${!isAbsolute ? right : null};
      pointer-events: auto;
      display: flex;
      flex-direction: column;
      position: relative;

      > .layout {
        height: ${viewHeight}px !important;
        background: transparent;
        border: none !important;
      }

      body:not(.design-mode) & {
        > .layout {
          height: ${headerHeight > 0 ? `calc(100vh - ${headerHeight}px)` : '100vh'} !important;
          height: ${headerHeight > 0 ? `calc(var(--vh) * 100 - ${headerHeight}px)` : 'calc(var(--vh) * 100)'} !important;
        }
      }

      .spacing-area {
        flex: 1;
        background: transparent;
        pointer-events: none;
      }

      .toggle-visible-btn {
        position: absolute;
        bottom: 0;
        right: 0;

        > button {
          ${btnStyle};
          svg {
            margin-right: 0;
            margin-left: 0;
          }
        }
      }
    `;
    }
    const clazzName = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('screen-main-panel', {
        'is-active': isActive,
        'last-one': isLast
    });
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_2__.PageVisibilityContext.Provider, { value: isAbsolute ? isActive : true },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { id: `${rootLayoutId}_screen_${screenId}`, className: clazzName, css: getStyle(), ref: elementRef, "data-screenid": screenId, "data-index": props.index },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayoutEntry, { layouts: main.layout, isInWidget: true }),
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'spacing-area' }),
            isDesignMode && !panelVisible && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'toggle-visible-btn', onClick: showPanel, "data-testid": 'toggleBtn' },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_theme_tooltip__WEBPACK_IMPORTED_MODULE_5__.ThemedTooltip, { placement: 'auto', title: formatMessage('showInDesignView') },
                    (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Button, { type: 'default', size: 'sm', className: 'rounded' },
                        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_icons_outlined_application_visible__WEBPACK_IMPORTED_MODULE_4__.VisibleOutlined, { size: 'm' }))))))));
}


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/common/screen-side-panel.tsx":
/*!*******************************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/common/screen-side-panel.tsx ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScreenSidePanel: () => (/* binding */ ScreenSidePanel),
/* harmony export */   getSidePanelStyle: () => (/* binding */ getSidePanelStyle)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _use_intersection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../use-intersection */ "./jimu-layouts/lib/flow-layout/use-intersection.tsx");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type */ "./jimu-layouts/lib/flow-layout/common/type.ts");
/** @jsx jsx */




const MIN_PANEL_RATIO = 0.25;
function getSidePanelStyle(props, viewHeight, headerHeight, isActive, verticalSpace, stretched, transitionType, screenTransitionType, isSmallSize) {
    const { side, size, offset, background, overlay = true, padding } = props.panel || {};
    const isRTL = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appContext.isRTL;
    const factor = isRTL ? (side === 'left' ? '-' : '') : (side === 'right' ? '-' : '');
    const backgroundStyle = jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toBackgroundEmotionStyle(background !== null && background !== void 0 ? background : {});
    const spacing = parseFloat(verticalSpace);
    if (isSmallSize) {
        // overlay === false
        const docked = !overlay;
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      width: 100%;
      background: transparent;
      pointer-events: none;
      position: relative;
      opacity: ${transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade ? (isActive ? '1' : '0.5') : null};
      min-height: ${screenTransitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Cover ? `${viewHeight}px` : null};
      padding-top: ${screenTransitionType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade && docked ? `${Math.round(viewHeight * _type__WEBPACK_IMPORTED_MODULE_3__.SCREEN_RATIO_IN_SMALL_SIZE)}px` : null};

      &.top-spacing > .panel-content {
        /* margin-top: ${Math.round(viewHeight * _type__WEBPACK_IMPORTED_MODULE_3__.SCREEN_RATIO_IN_SMALL_SIZE)}px; */
      }

      .panel-content {
        width: 100%;
        ${overlay ? '' : backgroundStyle};
        /* margin-top: ${transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Push ? '${Math.round(viewHeight * SCREEN_RATIO_IN_SMALL_SIZE)}px' : 'unset'}; */

        > .layout, > .layout-wrapper > .layout {
          pointer-events: auto;
          ${overlay ? backgroundStyle : ''};
          min-height: ${Math.round(viewHeight * MIN_PANEL_RATIO)}px;
          padding: ${jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toCSSPadding(padding)};
        }

        > .layout-wrapper > .column-layout > .trail-container,
        > .column-layout > .trail-container {
          overflow-y: hidden;
        }

        > .layout-wrapper > .placeholder-btn {
          pointer-events: auto;
          ${overlay ? backgroundStyle : ''};
        }

        .panel-spacing {
          height: ${Math.round(viewHeight * spacing / 100)}px;
        }
      }

      .panel-content-placeholder {
        width: 1px;
        min-height: ${viewHeight}px;
      }

      body:not(.design-mode) & {
        min-height: ${screenTransitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Cover ? '100vh' : null};
        min-height: ${screenTransitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Cover ? 'calc(var(--vh) * 100)' : null};
        padding-top: ${screenTransitionType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade && docked ? `${100 * _type__WEBPACK_IMPORTED_MODULE_3__.SCREEN_RATIO_IN_SMALL_SIZE}vh` : null};
        padding-top: ${screenTransitionType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade && docked ? `calc(var(--vh) * ${100 * _type__WEBPACK_IMPORTED_MODULE_3__.SCREEN_RATIO_IN_SMALL_SIZE})` : null};

        > .layout, > .layout-wrapper > .layout {
          min-height: ${Math.round(100 * MIN_PANEL_RATIO)}vh;
          min-height: calc(var(--vh) * ${Math.round(100 * MIN_PANEL_RATIO)});
        }

        .panel-content-placeholder {
          min-height: 100vh;
          min-height: calc(var(--vh) * 100);
        }

        .panel-spacing {
          height: ${spacing}vh;
          height: calc(var(--vh) * ${spacing});
        }
      }
    `;
    }
    return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
    width: 100%;
    background: transparent;
    pointer-events: none;
    display: flex;
    flex-direction: ${side === 'right' ? 'row-reverse' : 'row'};
    justify-content: ${side === 'center' && overlay ? 'center' : 'flex-start'};
    position: relative;
    opacity: ${transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade ? (isActive ? '1' : '0.5') : null};

    &.top-spacing > .panel-content {
      /* margin-top: ${Math.round(viewHeight * 2 / 3)}px; */
    }

    .panel-content {
      width: ${size};
      transform: ${overlay && Math.abs(parseFloat(offset)) > 0 ? `translateX(${factor}${offset})` : null};
      flex: 0 auto;
      min-height: ${stretched ? `${viewHeight}px` : 'unset'};
      ${overlay ? '' : backgroundStyle};

      > .layout,
      > .layout-wrapper > .layout {
        pointer-events: auto;
        ${overlay ? backgroundStyle : ''};
        min-height: ${Math.round(viewHeight * MIN_PANEL_RATIO)}px;
        padding: ${jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toCSSPadding(padding)};
      }

      > .layout-wrapper > .column-layout > .trail-container,
      > .column-layout > .trail-container {
        overflow-y: hidden;
      }

      > .layout-wrapper > .placeholder-btn {
        pointer-events: auto;
        ${overlay ? backgroundStyle : ''};
      }

      .panel-spacing {
        height: ${Math.round(viewHeight * spacing / 100)}px;

        &.last-item {
          height: ${stretched ? `${Math.round(viewHeight * spacing / 100)}` : viewHeight}px;
        }
      }
    }

    .panel-content-placeholder {
      width: 1px;
      min-height: ${stretched ? viewHeight : Math.round(viewHeight * MIN_PANEL_RATIO)}px;
    }

    body:not(.design-mode) & {
      &.top-spacing > .panel-content {
        /* margin-top: ${66.7}vh; */
      }

      .panel-content {
        min-height: ${stretched ? (headerHeight > 0 ? `calc(100vh - ${headerHeight}px)` : '100vh') : 'unset'};
        min-height: ${stretched ? (headerHeight > 0 ? `calc(var(--vh) * 100 - ${headerHeight}px)` : 'calc(var(--vh) * 100)') : 'unset'};
        > .layout, > .layout-wrapper > .layout {
          min-height: unset;
        }

        .panel-spacing {
          height: ${spacing}vh;
          height: calc(var(--vh) * ${spacing});

          &.last-item {
            height: ${stretched ? spacing : 100}vh;
            height: calc(var(--vh) * ${stretched ? spacing : 100});
          }
        }
      }
      .panel-content-placeholder {
        min-height: ${stretched ? '100' : Math.round(100 * MIN_PANEL_RATIO)}vh;
        min-height: calc(var(--vh) * ${stretched ? '100' : Math.round(100 * MIN_PANEL_RATIO)});
      }
    }
  `;
}
/* eslint-disable @typescript-eslint/no-unused-vars */
function ScreenSidePanel(props) {
    var _a;
    const { index, screenId, onInterctionChange, onHeightChange, viewHeight, headerHeight, layoutEntry: LayoutEntry, isActive, isSmallSize, transitionType, screenTransitionType, triggerType, stretched, verticalSpace = '0' } = props;
    const screenJson = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        return state.appConfig.screens[screenId];
    });
    const { panel } = screenJson;
    const elementRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const [loaded, setLoaded] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(false);
    const handleHeightChangeRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const intersectionChange = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((isIntersecting) => {
        onInterctionChange(index, isIntersecting);
    }, [index, onInterctionChange]);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        handleHeightChangeRef.current = jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.debounce(onHeightChange, 200);
        return () => {
            var _a;
            (_a = handleHeightChangeRef.current) === null || _a === void 0 ? void 0 : _a.cancel();
        };
    }, [onHeightChange]);
    const onSizeChange = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((width, height) => {
        var _a;
        (_a = handleHeightChangeRef.current) === null || _a === void 0 ? void 0 : _a.call(handleHeightChangeRef, index, height);
    }, [index]);
    (0,_use_intersection__WEBPACK_IMPORTED_MODULE_2__.useIntersection)(elementRef.current, props.refElement, isSmallSize ? jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTriggerType.Lower : (triggerType !== null && triggerType !== void 0 ? triggerType : jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTriggerType.Bottom), intersectionChange);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        setLoaded(true);
    }, []);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('screen-side-panel', {
            'top-spacing': index === 0 && (((_a = screenJson.panel) === null || _a === void 0 ? void 0 : _a.overlay) || isSmallSize)
        }), "data-screenid": screenId, "data-index": index, ref: elementRef, css: getSidePanelStyle(screenJson, viewHeight, headerHeight, isActive, verticalSpace, stretched || panel == null, transitionType, screenTransitionType, isSmallSize) },
        panel && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'panel-content' },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayoutEntry, { layouts: panel.layout }),
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('panel-spacing', { 'last-item': props.isLast }) }))),
        !panel && (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'panel-content-placeholder' }),
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactResizeDetector, { handleHeight: true, onResize: onSizeChange })));
}


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/common/type.ts":
/*!*****************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/common/type.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_HEADER_HEIGHT: () => (/* binding */ DEFAULT_HEADER_HEIGHT),
/* harmony export */   SCREEN_RATIO_IN_SMALL_SIZE: () => (/* binding */ SCREEN_RATIO_IN_SMALL_SIZE)
/* harmony export */ });
const SCREEN_RATIO_IN_SMALL_SIZE = 0.33;
const DEFAULT_HEADER_HEIGHT = 75;


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/common/util.ts":
/*!*****************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/common/util.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calHeight: () => (/* binding */ calHeight),
/* harmony export */   updateScreenHeight: () => (/* binding */ updateScreenHeight)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");


function updateScreenHeight(mainPanelContainer, sidePanelContainer, browserSizeMode) {
    const screenElements = mainPanelContainer.querySelectorAll('div.screen-main-panel');
    const panelElements = sidePanelContainer.querySelectorAll('div.screen-side-panel');
    const size = screenElements.length;
    for (let i = 1; i < size; i++) {
        const screenItem = screenElements.item(i);
        const previousItem = screenElements.item(i - 1);
        const previousPanelItem = panelElements.item(i - 1);
        screenItem.style.marginTop = `${previousPanelItem.clientHeight - previousItem.clientHeight}px`;
    }
    if (browserSizeMode !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small) {
        mainPanelContainer.style.height = `${sidePanelContainer.clientHeight}px`;
    }
}
function calHeight(layoutItem, itemSetting) {
    const bbox = layoutItem.bbox || {};
    const height = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getValueOfBBox)(bbox, 'height');
    if (!height || (0,_utils__WEBPACK_IMPORTED_MODULE_1__.isPercentage)(height)) {
        return 'auto';
    }
    switch (itemSetting.heightMode) {
        case 'auto':
            return 'auto';
        case 'fixed':
            return height;
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/default-setting.ts":
/*!*********************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/default-setting.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_FLOW_ITEM_SETTING: () => (/* binding */ DEFAULT_FLOW_ITEM_SETTING),
/* harmony export */   DEFAULT_FLOW_SETTING: () => (/* binding */ DEFAULT_FLOW_SETTING)
/* harmony export */ });
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");

const DEFAULT_FLOW_SETTING = {
    gutter: 0,
    style: {
        padding: {
            number: [0],
            unit: 'px'
        },
        justifyContent: 'flex-start',
        alignItems: 'stretch',
        borderRadius: {
            number: [0],
            unit: jimu_ui__WEBPACK_IMPORTED_MODULE_0__.DistanceUnits.PIXEL
        }
    }
};
const DEFAULT_FLOW_ITEM_SETTING = {
    lockParent: true,
    heightMode: 'auto',
    offsetX: 0,
    offsetY: 0
};


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/layout-transform.ts":
/*!**********************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/layout-transform.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FlowLayoutTransformer: () => (/* binding */ FlowLayoutTransformer)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

class FlowLayoutTransformer {
    constructor() {
        this.id = 'flow-layout-transformer';
        this.layoutType = jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.FlowLayout;
    }
    transformLayout(layout, fromSizeMode, toSizeMode) {
        if (fromSizeMode !== toSizeMode && toSizeMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small) {
            let updatedLayout = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.Immutable)(layout);
            (layout.order || []).forEach((itemId) => {
                updatedLayout = updatedLayout.setIn(['content', itemId, 'setting', 'heightMode'], 'auto');
            });
            return updatedLayout;
        }
        return layout;
    }
    transformLayoutItem(item, index, fromLayoutId, toLayoutId, fromSizeMode, toSizeMode) {
        return { index, item };
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/layout-utils.ts":
/*!******************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/layout-utils.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calculateFloatingPosition: () => (/* binding */ calculateFloatingPosition),
/* harmony export */   getWidthFromSetting: () => (/* binding */ getWidthFromSetting),
/* harmony export */   mapStateToFlowItemProps: () => (/* binding */ mapStateToFlowItemProps)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _search_contents__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../search/contents */ "./jimu-layouts/lib/search/contents.ts");




const mapStateToFlowItemProps = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.createSelector)([
    (state, ownProps) => {
        var _a;
        const { layoutItem } = ownProps;
        const selection = (_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.selection;
        if (selection) {
            return selection.layoutId === ownProps.layoutId && selection.layoutItemId === layoutItem.id;
        }
        return false;
    },
    (state, ownProps) => {
        var _a, _b, _c;
        const { layoutItem } = ownProps;
        let padding = [0, 0, 0, 0];
        if (layoutItem.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
            const widgetId = layoutItem.widgetId;
            const widgetJson = state.appConfig.widgets[widgetId];
            if (widgetJson) {
                padding = jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.expandStyleArray((_c = (_b = (_a = widgetJson.config) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.padding) === null || _c === void 0 ? void 0 : _c.number);
            }
        }
        return padding[0] + padding[2]; // top and bottom padding of inner row widget
    },
    (state, ownProps) => {
        const { layoutItem } = ownProps;
        let isEmpty = true;
        if (layoutItem.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
            const widgetId = layoutItem.widgetId;
            const widgetJson = state.appConfig.widgets[widgetId];
            if (widgetJson) {
                const layoutName = Object.keys(widgetJson.layouts)[0];
                const layoutId = (0,_search_contents__WEBPACK_IMPORTED_MODULE_3__.findLayoutId)(widgetJson.layouts[layoutName], state.browserSizeMode, state.appConfig.mainSizeMode);
                const layout = state.appConfig.layouts[layoutId];
                if (layout && Object.keys(layout.content || []).length > 0) {
                    // eslint-disable-next-line
                    Object.keys(layout.content || []).some((itemId) => {
                        const layoutItem = layout.content[itemId];
                        if (!layoutItem.isPending) {
                            isEmpty = false;
                            return true;
                        }
                    });
                }
            }
        }
        return isEmpty;
    }
], (selected, padding, isEmpty) => ({ selected, padding, isEmpty }));
function getWidthFromSetting(setting) {
    const value = parseFloat(setting === null || setting === void 0 ? void 0 : setting.width);
    if (value > 0) {
        if (`${setting.width}`.includes('px')) {
            return `${Math.round(value)}px`;
        }
        return `${Math.round(value)}%`;
    }
    return '100%';
}
function calculateFloatingPosition(layoutItem, resizingProps = {}) {
    var _a, _b, _c;
    const setting = layoutItem.setting;
    const floatingArea = (_a = setting === null || setting === void 0 ? void 0 : setting.floatingArea) !== null && _a !== void 0 ? _a : 1;
    const offsetX = `${(_b = setting === null || setting === void 0 ? void 0 : setting.offsetX) !== null && _b !== void 0 ? _b : 0}px`;
    const offsetY = `${(_c = setting === null || setting === void 0 ? void 0 : setting.offsetY) !== null && _c !== void 0 ? _c : 0}px`;
    const { dh, dw, initWidth, initHeight, isResizing } = resizingProps;
    // translateX will not be modified by the emotion if it uses calc()
    const translateX = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.isRTL)() ? `translateX(calc(50% + ${offsetX}))` : `translateX(calc(-50% + ${offsetX}))`;
    const pos = {};
    switch (floatingArea) {
        case 1: // top-left
            pos.left = offsetX;
            pos.top = offsetY;
            pos.transform = null;
            break;
        case 2: // top-center
            pos.left = '50%';
            pos.top = offsetY;
            pos.transform = translateX;
            break;
        case 3: // top-right
            pos.right = offsetX;
            pos.top = offsetY;
            pos.transform = null;
            break;
        case 4: // middle-left
            pos.left = offsetX;
            pos.top = '50%';
            pos.transform = `translateY(calc(-50% + ${offsetY}))`;
            break;
        case 5: // middle-center
            pos.left = '50%';
            pos.top = '50%';
            pos.transform = `${translateX} translateY(calc(-50% + ${offsetY}))`;
            break;
        case 6: // middle-right
            pos.right = offsetX;
            pos.top = '50%';
            pos.transform = `translateY(calc(-50% + ${offsetY}))`;
            break;
        case 7: // bottom-left
            pos.left = offsetX;
            pos.bottom = offsetY;
            pos.transform = null;
            break;
        case 8: // bottom-center
            pos.left = '50%';
            pos.bottom = offsetY;
            pos.transform = translateX;
            break;
        case 9: // bottom-right
            pos.right = offsetX;
            pos.bottom = offsetY;
            pos.transform = null;
            break;
    }
    return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
    position: fixed;
    z-index: 1;
    width: ${isResizing ? `${initWidth + dw}px` : (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getValueOfBBox)(layoutItem.bbox, 'width')};
    height: ${isResizing ? `${initHeight + dh}px` : (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getValueOfBBox)(layoutItem.bbox, 'height')};
    left: ${pos.left};
    right: ${pos.right};
    top: ${pos.top};
    bottom: ${pos.bottom};
    transform: ${pos.transform};
  `;
}


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/runtime/floating-layout-item.tsx":
/*!***********************************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/runtime/floating-layout-item.tsx ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FloatingLayoutItem)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _runtime_layout_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../runtime/layout-item */ "./jimu-layouts/lib/runtime/layout-item.tsx");
/* harmony import */ var _layout_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../layout-utils */ "./jimu-layouts/lib/flow-layout/layout-utils.ts");
/** @jsx jsx */



class FloatingLayoutItem extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    calculatePosition() {
        const { layoutItem } = this.props;
        return (0,_layout_utils__WEBPACK_IMPORTED_MODULE_2__.calculateFloatingPosition)(layoutItem);
    }
    render() {
        const { layoutId, layoutItem, onClick } = this.props;
        if (!layoutItem) {
            return null;
        }
        const mergedClass = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('flow-layout-item floating', 'd-flex');
        // const itemSetting: FlowLayoutItemSetting = lodash.assign({}, DEFAULT_FLOW_ITEM_SETTING, layoutItem.setting);
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_runtime_layout_item__WEBPACK_IMPORTED_MODULE_1__["default"], { css: this.calculatePosition(), layoutId: layoutId, layoutItemId: layoutItem.id, onClick: onClick, className: mergedClass }));
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/runtime/layout-item.tsx":
/*!**************************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/runtime/layout-item.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _default_setting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../default-setting */ "./jimu-layouts/lib/flow-layout/default-setting.ts");
/* harmony import */ var _layout_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../layout-utils */ "./jimu-layouts/lib/flow-layout/layout-utils.ts");
/* harmony import */ var _runtime_layout_item__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../runtime/layout-item */ "./jimu-layouts/lib/runtime/layout-item.tsx");
/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/util */ "./jimu-layouts/lib/flow-layout/common/util.ts");
/** @jsx jsx */






class FlowLayoutItem extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    componentDidMount() {
        var _a;
        const queryObject = (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().queryObject) !== null && _a !== void 0 ? _a : {};
        const { layoutId, layoutItem } = this.props;
        const domId = `${layoutId}_block_${layoutItem.id}`;
        if (queryObject.block_id === domId) {
            const dom = document.getElementById(domId);
            setTimeout(() => {
                dom.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }, 500);
        }
    }
    calHeight(itemSetting) {
        const height = _common_util__WEBPACK_IMPORTED_MODULE_5__.calHeight(this.props.layoutItem, itemSetting);
        this.autoHeight = height === 'auto';
        return height;
    }
    getStyle(itemSetting) {
        const { index, gutter } = this.props;
        const sign = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.isRTL)() ? -1 : 1;
        return [
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
        margin-top: ${index > 0 ? `${gutter}px` : 'unset'};
        width: ${(0,_layout_utils__WEBPACK_IMPORTED_MODULE_3__.getWidthFromSetting)(itemSetting)};
        height: ${this.calHeight(itemSetting)};
        flex-shrink: 0;
      `,
            itemSetting.offsetX || itemSetting.offsetY ? `translate(${(itemSetting.offsetX || 0) * sign}px, ${itemSetting.offsetY || 0}px)` : null
        ];
    }
    render() {
        const { layoutId, layoutItem, onClick, isEmpty } = this.props;
        if (!layoutItem || isEmpty) {
            return null;
        }
        const mergedClass = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('flow-layout-item', 'd-flex');
        const itemSetting = jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.assign({}, _default_setting__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_FLOW_ITEM_SETTING, layoutItem.setting);
        const oneByOneAnimationProps = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.handleOnebyOneAnimation)(this.props);
        const [cssStyle, transform] = this.getStyle(itemSetting);
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_runtime_layout_item__WEBPACK_IMPORTED_MODULE_4__["default"], Object.assign({ id: `${layoutId}_block_${layoutItem.id}`, css: cssStyle, style: { transform }, layoutId: layoutId, layoutItemId: layoutItem.id, onClick: onClick, className: mergedClass, autoHeight: this.autoHeight }, oneByOneAnimationProps)));
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.connect(_layout_utils__WEBPACK_IMPORTED_MODULE_3__.mapStateToFlowItemProps)(FlowLayoutItem));


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/runtime/layout.tsx":
/*!*********************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/runtime/layout.tsx ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _layout_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout-item */ "./jimu-layouts/lib/flow-layout/runtime/layout-item.tsx");
/* harmony import */ var _floating_layout_item__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./floating-layout-item */ "./jimu-layouts/lib/flow-layout/runtime/floating-layout-item.tsx");
/* harmony import */ var _screen_group__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./screen-group */ "./jimu-layouts/lib/flow-layout/runtime/screen-group.tsx");
/* harmony import */ var _default_setting__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../default-setting */ "./jimu-layouts/lib/flow-layout/default-setting.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/** @jsx jsx */







class Layout extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    constructor(props) {
        super(props);
        const exts = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ExtensionManager.getInstance().getExtensions(`${jimu_core__WEBPACK_IMPORTED_MODULE_0__.extensionSpec.ExtensionPoints.LayoutTransformer}`);
        if (exts && exts.length > 0) {
            const ext = exts.find(item => item.layoutType === this.props.layout.type);
            this.layoutTransform = ext === null || ext === void 0 ? void 0 : ext.transformLayout;
        }
    }
    _createItem(item, index, layoutSetting) {
        var _a;
        const { layout } = this.props;
        if (item === null || item === void 0 ? void 0 : item.isPending) {
            return null;
        }
        if (item.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup) {
            return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_screen_group__WEBPACK_IMPORTED_MODULE_4__.ScreenGroup, { key: `${item.id}_${index}`, itemIndex: index, layoutId: layout.id, layoutItemId: item.id, layoutItem: item }));
        }
        if ((_a = item.setting) === null || _a === void 0 ? void 0 : _a.isFloating) {
            return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_floating_layout_item__WEBPACK_IMPORTED_MODULE_3__["default"], { key: item.id, index: index, gutter: layoutSetting.gutter, layoutId: layout.id, layoutItemId: item.id, layoutItem: item }));
        }
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_layout_item__WEBPACK_IMPORTED_MODULE_2__["default"], { key: item.id, index: index, gutter: layoutSetting.gutter, layoutId: layout.id, layoutItemId: item.id, layoutItem: item }));
    }
    render() {
        const { layout, className, style, layouts, browserSizeMode } = this.props;
        if (!layout) {
            return null;
        }
        let targetLayout = layout;
        if (layouts[browserSizeMode] !== layout.id && this.layoutTransform) {
            let fromSizeMode;
            // eslint-disable-next-line
            Object.keys(layouts).some(mode => {
                if (layouts[mode] === layout.id) {
                    fromSizeMode = mode;
                    return true;
                }
            });
            targetLayout = this.layoutTransform(layout, fromSizeMode, browserSizeMode);
        }
        const content = targetLayout.order || [];
        const layoutSetting = jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.assign({}, _default_setting__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_FLOW_SETTING, targetLayout.setting);
        const mergedStyle = Object.assign(Object.assign(Object.assign({}, style), jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toCSSStyle(layoutSetting.style)), { position: 'relative' });
        const outClass = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('layout flow-layout w-100', className);
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: outClass, style: mergedStyle, "data-layoutid": layout.id },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.IntersectionContext.Provider, { value: { monitor: true } },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.OneByOneAnimation, { oid: targetLayout.id, "data-layoutid": targetLayout.id, className: 'trail-container d-flex flex-column align-items-center', css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
              width: 100%;
            ` }, content.map((layoutItemId, index) => this._createItem(targetLayout.content[layoutItemId], index, layoutSetting))))));
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.connect(_utils__WEBPACK_IMPORTED_MODULE_6__.mapStateToLayoutProps)(Layout));


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/runtime/screen-group.tsx":
/*!***************************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/runtime/screen-group.tsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScreenGroup: () => (/* binding */ ScreenGroup)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common */ "./jimu-layouts/lib/flow-layout/common/index.tsx");
/* harmony import */ var _runtime_layout_entry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../runtime/layout-entry */ "./jimu-layouts/lib/runtime/layout-entry.tsx");
/* harmony import */ var _common_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/type */ "./jimu-layouts/lib/flow-layout/common/type.ts");
/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/util */ "./jimu-layouts/lib/flow-layout/common/util.ts");
/* harmony import */ var _builder_page_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");
/** @jsx jsx */






function getStyle(transitionType, isOverlay) {
    return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
    position: relative;
    width: 100%;

    .main-panels {
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      pointer-events: none;
      z-index: 0;
    }

    .side-panels {
      position: relative;
      z-index: 1;
      pointer-events: none;

      > div:first-of-type > div.panel-content {
        padding-top: ${Math.round(100 * _common_type__WEBPACK_IMPORTED_MODULE_3__.SCREEN_RATIO_IN_SMALL_SIZE)}vh;
        padding-top: calc(var(--vh) * ${Math.round(100 * _common_type__WEBPACK_IMPORTED_MODULE_3__.SCREEN_RATIO_IN_SMALL_SIZE)});
      }

      /* > div:nth-last-of-type(2) {
        min-height: 100vh;
      } */
    }

    &.small-size .main-panels {
      z-index: ${isOverlay ? 0 : 1};
    }

    &.small-size .side-panels {
      z-index: ${isOverlay ? 1 : 0};
    }

    &.print-preview {
      .screen-container {
        height: auto;
        position: relative;

        .screen-main-panel {
          position: relative;
          opacity: 1 !important;
        }
      }
      .screen-side-panel {
        min-height: calc(var(--vh) * 100);
        opacity: 1 !important;
        .panel-spacing {
          display: none;
        }
      }
      .screen-placeholder {
        display: none;
      }
    }
  `;
}
function ScreenGroup(props) {
    var _a;
    const { layoutId, layoutItemId, layoutItem } = props;
    const { screenGroupId } = layoutItem;
    const screenGroup = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        return state.appConfig.screenGroups[layoutItem.screenGroupId];
    });
    const isPrintPreview = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a, _b;
        return (_b = (_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.isPrintPreview) !== null && _b !== void 0 ? _b : false;
    });
    const hasPanel = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        // screen with panel and without panel can be mixed
        const screenIds = state.appConfig.screenGroups[layoutItem.screenGroupId].screens;
        return screenIds.some(screenId => {
            const screen = state.appConfig.screens[screenId];
            return screen.panel != null;
        });
    });
    const browserSizeMode = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        return state.browserSizeMode;
    });
    const { pageId } = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useContext(_builder_page_context__WEBPACK_IMPORTED_MODULE_5__.PageContext);
    const headerHeight = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        const pageJson = state.appConfig.pages[pageId];
        if (pageJson === null || pageJson === void 0 ? void 0 : pageJson.header) {
            const headerJson = state.appConfig.header;
            if (headerJson === null || headerJson === void 0 ? void 0 : headerJson.sticky) {
                const browserSizeMode = state.browserSizeMode;
                const mainSizeMode = state.appConfig.mainSizeMode;
                const height = headerJson.height[browserSizeMode] || headerJson.height[mainSizeMode] || _common_type__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_HEADER_HEIGHT;
                return parseInt(height, 10);
            }
        }
        return 0;
    });
    const { screens, stretchPanel = true, triggerType = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTriggerType.Bottom, verticalSpace = '0', panelTransitionType = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Push } = screenGroup;
    let transitionType = isPrintPreview ? null : ((_a = screenGroup.transitionType) !== null && _a !== void 0 ? _a : jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade);
    if (!isPrintPreview && browserSizeMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small && !hasPanel) {
        transitionType = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Cover;
    }
    const navInfo = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a;
        return (_a = state.appRuntimeInfo.screenGroupNavInfos) === null || _a === void 0 ? void 0 : _a[screenGroupId];
    });
    const domRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const screenGroupRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const mainPanelRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const [activeIndex, setActiveIndex] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(0);
    const isOverlay = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        var _a, _b, _c;
        if (browserSizeMode !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small) {
            return false;
        }
        const appConfig = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
        const screens = (_b = (_a = appConfig.screenGroups) === null || _a === void 0 ? void 0 : _a[screenGroupId]) === null || _b === void 0 ? void 0 : _b.screens;
        if (screens === null || screens === void 0 ? void 0 : screens[activeIndex]) {
            const screen = appConfig.screens[screens[activeIndex]];
            return (_c = screen.panel) === null || _c === void 0 ? void 0 : _c.overlay;
        }
        return false;
    }, [screenGroupId, activeIndex, browserSizeMode]);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if ((navInfo === null || navInfo === void 0 ? void 0 : navInfo.activeIndex) != null && navInfo.activeIndex !== activeIndex) {
            setActiveIndex(navInfo.activeIndex);
        }
    }, [navInfo, activeIndex]);
    const onInterctionChange = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((index, isIntersecting) => {
        if (isIntersecting && index !== activeIndex) {
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.appActions.screenGroupNavInfoChanged(screenGroupId, index, false));
        }
        else if (!isIntersecting && index > 0) {
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.appActions.screenGroupNavInfoChanged(screenGroupId, index - 1, false));
        }
    }, [activeIndex, screenGroupId]);
    const sidepanelResizeHandler = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        if (!screenGroupRef.current) {
            return;
        }
        const mainPanelContainer = screenGroupRef.current.children[0];
        const sidePanelContainer = screenGroupRef.current.children[1];
        // Sync the height between main panel and side panel
        const count = sidePanelContainer.childElementCount;
        for (let i = 0; i < count; i++) {
            const elem = sidePanelContainer.children[i];
            const screenId = elem.getAttribute('data-screenid');
            const mainPanelElem = mainPanelContainer.querySelector(`[data-screenid="${screenId}"]`);
            if (mainPanelElem) {
                if (isPrintPreview) {
                    mainPanelElem.style.height = `${elem.clientHeight}px`;
                }
                else {
                    mainPanelElem.style.height = null;
                }
            }
        }
        mainPanelContainer.style.height = `${sidePanelContainer.clientHeight}px`;
    }, [isPrintPreview]);
    const debounceResizeHandler = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.debounce(sidepanelResizeHandler, 200), [sidepanelResizeHandler]);
    const onSidePanelHeightChange = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((index, height) => {
        if (!screenGroupRef.current) {
            return;
        }
        const mainPanelContainer = screenGroupRef.current.children[0];
        const sidePanelContainer = screenGroupRef.current.children[1];
        if (transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Fade) {
            mainPanelContainer.style.height = `${sidePanelContainer.clientHeight}px`;
            return;
        }
        if (transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Cover) {
            (0,_common_util__WEBPACK_IMPORTED_MODULE_4__.updateScreenHeight)(mainPanelContainer, sidePanelContainer, browserSizeMode);
            return;
        }
        if (transitionType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTransitionType.Push) {
            const relatedElement = mainPanelContainer.querySelector(`div.screen-main-panel[data-index="${index}"]`);
            const panelElement = sidePanelContainer.querySelector(`div.screen-side-panel[data-index="${index}"]`);
            relatedElement.style.height = `${panelElement.clientHeight}px`;
            mainPanelContainer.style.height = `${sidePanelContainer.clientHeight}px`;
        }
    }, [browserSizeMode, transitionType]);
    if (screens.length > 0) {
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('flow-layout-item', { 'print-preview': isPrintPreview, 'small-size': browserSizeMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small }), css: getStyle(transitionType, isOverlay), "data-layoutitemid": layoutItemId, "data-layoutid": layoutId, ref: domRef },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'screen-group', ref: screenGroupRef },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'main-panels', ref: mainPanelRef },
                    (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common__WEBPACK_IMPORTED_MODULE_1__.ScreenMainPanelList, { rootLayoutId: layoutId, activeIndex: activeIndex, screens: screens, transitionType: transitionType, layoutEntry: _runtime_layout_entry__WEBPACK_IMPORTED_MODULE_2__["default"], headerHeight: headerHeight, isSmallSize: browserSizeMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small })),
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'side-panels' },
                    screens.map((screenId, idx) => {
                        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common__WEBPACK_IMPORTED_MODULE_1__.ScreenSidePanel, { key: screenId, index: idx, isLast: idx === screens.length - 1, screenId: screenId, refElement: null, layoutEntry: _runtime_layout_entry__WEBPACK_IMPORTED_MODULE_2__["default"], isActive: idx === activeIndex, stretched: stretchPanel, triggerType: triggerType, verticalSpace: verticalSpace, transitionType: panelTransitionType, screenTransitionType: transitionType, onHeightChange: onSidePanelHeightChange, onInterctionChange: onInterctionChange, isSmallSize: browserSizeMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small, headerHeight: headerHeight }));
                    }),
                    (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactResizeDetector, { handleHeight: true, onResize: debounceResizeHandler })))));
    }
    return null;
}


/***/ }),

/***/ "./jimu-layouts/lib/flow-layout/use-intersection.tsx":
/*!***********************************************************!*\
  !*** ./jimu-layouts/lib/flow-layout/use-intersection.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   INTERSECTION_HEIGHT: () => (/* binding */ INTERSECTION_HEIGHT),
/* harmony export */   useIntersection: () => (/* binding */ useIntersection)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

const INTERSECTION_HEIGHT = 2; // in percentage
function buildThresholdList() {
    const step = 100;
    const result = [0];
    for (let i = 1; i <= step; i++) {
        result.push(i / step);
    }
    return result;
}
function getRootMargin(triggerType) {
    switch (triggerType) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTriggerType.Top:
            return `0% 0% -${100 - INTERSECTION_HEIGHT}% 0%`;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTriggerType.Bottom:
            // make a little space between the bottom in order to trigger screen out
            return `-${100 - INTERSECTION_HEIGHT}% 0% -2px 0%`;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTriggerType.Upper:
            return `-${100 / 3 - INTERSECTION_HEIGHT / 2}% 0% -${200 / 3 - INTERSECTION_HEIGHT / 2}% 0%`;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ScreenTriggerType.Lower:
            return `-${200 / 3 - INTERSECTION_HEIGHT / 2}% 0% -${100 / 3 - INTERSECTION_HEIGHT / 2}% 0%`;
        default:
            return undefined;
    }
}
/**
 *
 * @param ref
 * @param rootElement
 * @param onIntersectionChange
 */
function useIntersection(ref, rootElement, triggerType, onIntersectionChange) {
    const observerRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const lastIntersecting = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if (observerRef.current) {
            observerRef.current.unobserve(ref);
            observerRef.current = null;
        }
        const handleIntersectionChange = (entry) => {
            /**
             * This event may be trigged later than the intersecting time.
             * For example, the two rects may looks like the following when
             * interction change event is fired.
             *               ------------ rect.top
             *               |          |
             *          ----------------------- rootRect.top
             *          |    |          |     |
             *          |    |          |     |
             *          |    |          |     |
             *          ----------------------- rootRect.bottom
             *               |          |
             *               |          |
             *               ------------ rect.bottom
             */
            const rect = entry.boundingClientRect;
            const rootRect = entry.rootBounds;
            const isTopIntersecting = Math.abs(rect.bottom - rootRect.top) >= Math.abs(rect.top - rootRect.top);
            if (entry.isIntersecting) {
                lastIntersecting.current = true;
                if (isTopIntersecting) {
                    onIntersectionChange(true);
                    return false;
                }
            }
            else if (lastIntersecting.current) {
                lastIntersecting.current = false;
                if (isTopIntersecting) {
                    onIntersectionChange(false);
                    return false;
                }
            }
        };
        if (ref && typeof IntersectionObserver === 'function') {
            const handler = (entries) => {
                handleIntersectionChange(entries[0]);
            };
            const observer = new IntersectionObserver(handler, {
                threshold: buildThresholdList(),
                root: rootElement || document,
                rootMargin: getRootMargin(triggerType)
            });
            observer.observe(ref);
            observerRef.current = observer;
            return () => {
                observerRef.current.unobserve(ref);
                observerRef.current = null;
            };
        }
    }, [ref, rootElement, onIntersectionChange, triggerType]);
}


/***/ }),

/***/ "./jimu-layouts/lib/grid-layout/common/splitter.tsx":
/*!**********************************************************!*\
  !*** ./jimu-layouts/lib/grid-layout/common/splitter.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Splitter: () => (/* binding */ Splitter)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

const MIN_SIZE = 32;
function restrictResizing(prevItemRect, nextItemRect, direction, dx, dy, isRTL) {
    let x = dx;
    let y = dy;
    if (direction === 'row') {
        const prevWidth = isRTL ? nextItemRect.width : prevItemRect.width;
        const nextWidth = isRTL ? prevItemRect.width : nextItemRect.width;
        if (dx < 0) {
            if (prevWidth > MIN_SIZE) {
                x = -Math.min(Math.abs(dx), prevWidth - MIN_SIZE);
            }
            else {
                x = 0;
            }
        }
        if (dx > 0) {
            if (nextWidth > MIN_SIZE) {
                x = Math.min(dx, nextWidth - MIN_SIZE);
            }
            else {
                x = 0;
            }
        }
    }
    else {
        if (dy < 0) {
            if (prevItemRect.height > MIN_SIZE) {
                y = -Math.min(Math.abs(dy), prevItemRect.height - MIN_SIZE);
            }
            else {
                y = 0;
            }
        }
        if (dy > 0) {
            if (nextItemRect.height > MIN_SIZE) {
                y = Math.min(dy, nextItemRect.height - MIN_SIZE);
            }
            else {
                y = 0;
            }
        }
    }
    return { x, y };
}
function getSize(layoutItemElement) {
    const layoutId = layoutItemElement.getAttribute('data-layoutid');
    const layoutItemId = layoutItemElement.getAttribute('data-layoutitemid');
    const appConfig = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
    const layoutItem = appConfig.layouts[layoutId].content[layoutItemId];
    return +layoutItem.bbox.width;
}
function Splitter(props) {
    var _a, _b;
    const { referenceItemId, direction, layoutId, onResizeEnd } = props;
    const domRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const interactableRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const interactRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef(null);
    const isRTL = (_b = (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appContext) === null || _a === void 0 ? void 0 : _a.isRTL) !== null && _b !== void 0 ? _b : false;
    const isDesignMode = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        return state.appRuntimeInfo.appMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.AppMode.Design;
    });
    const layoutResizable = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a, _b;
        const layout = state.appConfig.layouts[props.layoutId];
        return (_b = (_a = layout.setting) === null || _a === void 0 ? void 0 : _a.resizable) !== null && _b !== void 0 ? _b : true;
    });
    const size = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a, _b;
        const layout = state.appConfig.layouts[layoutId];
        return (_b = (_a = layout.setting) === null || _a === void 0 ? void 0 : _a.splitSize) !== null && _b !== void 0 ? _b : 8;
    });
    const color = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a, _b;
        const layout = state.appConfig.layouts[layoutId];
        return (_b = (_a = layout.setting) === null || _a === void 0 ? void 0 : _a.splitColor) !== null && _b !== void 0 ? _b : 'var(--light-500)';
    });
    const style = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        const pxSize = `${size}px`;
        const canResize = isDesignMode ? true : layoutResizable;
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      width: ${direction === 'col' ? '100%' : pxSize};
      height: ${direction === 'col' ? pxSize : '100%'};
      background: ${color};
      position: relative;
      z-index: 10;
      flex-shrink: 0;

      .horizontal-splitter {
        cursor: ${canResize ? 'col-resize' : 'default'};
      }

      .vertical-splitter {
        cursor: ${canResize ? 'row-resize' : 'default'};
      }
    `;
    }, [direction, layoutResizable, isDesignMode, size, color]);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.hooks.useEffectOnce(() => {
        let dx;
        let dy;
        let parentRect;
        let prevItem;
        let prevItemRect;
        let prevSize;
        let originPrevItemWidth;
        let originPrevItemHeight;
        let nextItem;
        let nextItemRect;
        let nextSize;
        let originNextItemWidth;
        let originNextItemHeight;
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.moduleLoader.loadModule('jimu-core/dnd').then(module => {
            const interact = module.interact;
            interactRef.current = interact;
            if (!domRef.current) { // maybe unmounted in this async callback
                return;
            }
            interactableRef.current = interact(domRef.current)
                .origin('parent')
                .draggable({
                inertia: false,
                autoScroll: false,
                enabled: isDesignMode ? true : layoutResizable,
                modifiers: [
                    interact.modifiers.restrict({
                        restriction: 'parent'
                    })
                ],
                lockAxis: direction === 'row' ? 'x' : 'y',
                onstart: (event) => {
                    event.stopPropagation();
                    dx = 0;
                    dy = 0;
                    parentRect = domRef.current.parentElement.getBoundingClientRect();
                    prevItem = domRef.current.previousElementSibling;
                    prevItemRect = prevItem.getBoundingClientRect();
                    originPrevItemWidth = prevItem.style.width;
                    originPrevItemHeight = prevItem.style.height;
                    prevSize = getSize(prevItem);
                    nextItem = domRef.current.nextElementSibling;
                    nextItemRect = nextItem.getBoundingClientRect();
                    originNextItemWidth = nextItem.style.width;
                    originNextItemHeight = nextItem.style.height;
                    nextSize = getSize(nextItem);
                },
                onmove: (event) => {
                    event.stopPropagation();
                    dx += event.dx;
                    dy += event.dy;
                    const { x, y } = restrictResizing(prevItemRect, nextItemRect, direction, dx, dy, isRTL);
                    const factor = isRTL ? -1 : 1;
                    if (direction === 'row') {
                        prevItem.style.width = `calc(${prevSize}% + ${x * factor}px)`;
                        nextItem.style.width = `calc(${nextSize}% - ${x * factor}px)`;
                    }
                    else {
                        prevItem.style.height = `calc(${prevSize}% + ${y}px)`;
                        nextItem.style.height = `calc(${nextSize}% - ${y}px)`;
                    }
                },
                onend: (event) => {
                    event.stopPropagation();
                    dx += event.dx;
                    dy += event.dy;
                    const { x, y } = restrictResizing(prevItemRect, nextItemRect, direction, dx, dy, isRTL);
                    const factor = isRTL ? -1 : 1;
                    // restore style of items
                    prevItem.style.width = originPrevItemWidth;
                    nextItem.style.width = originNextItemWidth;
                    prevItem.style.height = originPrevItemHeight;
                    nextItem.style.height = originNextItemHeight;
                    onResizeEnd(referenceItemId, Math.round(x * factor * 10000 / parentRect.width) / 100, Math.round(y * 10000 / parentRect.height) / 100);
                }
            });
        });
        return () => {
            var _a;
            (_a = interactableRef.current) === null || _a === void 0 ? void 0 : _a.unset();
            interactableRef.current = null;
        };
    });
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if (interactableRef.current != null) {
            interactRef.current(domRef.current).draggable(isDesignMode ? true : layoutResizable);
        }
    }, [layoutResizable, isDesignMode]);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { ref: domRef, css: style, className: 'grid-split flex-shrink-0' },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('w-100 h-100', {
                'horizontal-splitter': direction === 'row',
                'vertical-splitter': direction === 'col'
            }) })));
}


/***/ }),

/***/ "./jimu-layouts/lib/grid-layout/common/utils.ts":
/*!******************************************************!*\
  !*** ./jimu-layouts/lib/grid-layout/common/utils.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calPaddingStyle: () => (/* binding */ calPaddingStyle),
/* harmony export */   getGridItem: () => (/* binding */ getGridItem),
/* harmony export */   getGridLayoutStructure: () => (/* binding */ getGridLayoutStructure),
/* harmony export */   getLabelOfGridTab: () => (/* binding */ getLabelOfGridTab),
/* harmony export */   indexOfPlainContent: () => (/* binding */ indexOfPlainContent),
/* harmony export */   isExpandable: () => (/* binding */ isExpandable),
/* harmony export */   isLastChildOfRootItem: () => (/* binding */ isLastChildOfRootItem)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");


function indexOfPlainContent(layout, layoutItemId) {
    var _a, _b;
    let start = 0;
    const rootItemId = layout.setting.rootItem;
    const rootItem = getGridItem(layout, rootItemId);
    if (rootItem && ((_a = rootItem.children) === null || _a === void 0 ? void 0 : _a.length) > 0) {
        const candidates = [...rootItem.children];
        while (candidates.length > 0) {
            const firstItemId = candidates.shift();
            const firstItem = getGridItem(layout, firstItemId);
            const parentId = firstItem.parent;
            const parentItem = getGridItem(layout, parentId);
            if (`${firstItem.id}` === layoutItemId ||
                (parentItem.gridType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Tab && parentItem.children.includes(layoutItemId))) {
                return start;
            }
            if (((_b = firstItem.children) === null || _b === void 0 ? void 0 : _b.length) > 0) {
                // it is a group
                candidates.unshift(...firstItem.children);
                continue;
            }
            // tab only increase index once
            if (parentItem.gridType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Tab ||
                (parentItem.gridType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Tab && parentItem.children.indexOf(firstItemId) === 0)) {
                start += 1;
            }
        }
    }
    return start;
}
function isLastChildOfRootItem(layout, layoutItemId) {
    var _a;
    let currentItem = getGridItem(layout, layoutItemId);
    if (((_a = currentItem === null || currentItem === void 0 ? void 0 : currentItem.children) === null || _a === void 0 ? void 0 : _a.length) > 0) {
        // children's is behind currentItem
        return false;
    }
    while (currentItem != null) {
        const parentId = currentItem.parent;
        if (parentId == null) {
            break;
        }
        // check if it the last child of its parent
        const parentItem = getGridItem(layout, parentId);
        const len = parentItem.children.length;
        const lastId = parentItem.children[len - 1];
        if (+lastId !== +currentItem.id) {
            return false;
        }
        currentItem = parentItem;
    }
    return true;
}
function isExpandable(state, layoutId, layoutItemId) {
    var _a, _b;
    const layout = state.appConfig.layouts[layoutId];
    const layoutItem = layout.content[layoutItemId];
    const canExpand = (_a = layoutItem.expandable) !== null && _a !== void 0 ? _a : true;
    if (!canExpand) {
        return false;
    }
    // set expandable to false if it is the only item in grid
    const rootItem = (_b = layout === null || layout === void 0 ? void 0 : layout.setting) === null || _b === void 0 ? void 0 : _b.rootItem;
    let isOnlyItem = false;
    if (rootItem === layoutItemId) {
        const rootLayoutItem = getGridItem(layout, rootItem);
        if (rootLayoutItem.children == null || rootLayoutItem.children.length === 0) {
            isOnlyItem = true;
        }
    }
    return !isOnlyItem;
}
function getGridItem(layout, layoutItemId) {
    var _a;
    return (_a = layout.content) === null || _a === void 0 ? void 0 : _a[layoutItemId];
}
function fetchGridNode(layout, layoutItemId) {
    const item = getGridItem(layout, layoutItemId);
    if (item == null) {
        return null;
    }
    const { gridType = jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Plain, children } = item;
    const result = { layoutItemId, type: gridType };
    if ((children === null || children === void 0 ? void 0 : children.length) > 0) {
        result.children = [...children].map((itemId) => fetchGridNode(layout, itemId));
    }
    return result;
}
function getGridLayoutStructure(layout) {
    var _a;
    if (layout.type !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.GridLayout) {
        return null;
    }
    const rootItemId = (_a = layout.setting) === null || _a === void 0 ? void 0 : _a.rootItem;
    return fetchGridNode(layout, `${rootItemId}`);
}
function getLabelOfGridTab(appConfig, layoutInfo, translate) {
    var _a, _b, _c, _d, _e, _f, _g;
    const { layoutId, layoutItemId } = layoutInfo;
    const layoutItem = appConfig.layouts[layoutId].content[layoutItemId];
    if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
        const widget = appConfig.widgets[layoutItem.widgetId];
        if (!widget) {
            return translate('placeholder');
        }
        return (_b = (_a = widget === null || widget === void 0 ? void 0 : widget.label) !== null && _a !== void 0 ? _a : layoutItem.label) !== null && _b !== void 0 ? _b : layoutItem.id; // may be a placeholder
    }
    if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section) {
        const section = appConfig.sections[layoutItem.sectionId];
        return section.label;
    }
    if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.gridType) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Row) {
        return (_c = layoutItem.label) !== null && _c !== void 0 ? _c : translate('gridRow');
    }
    if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.gridType) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Column) {
        return (_d = layoutItem.label) !== null && _d !== void 0 ? _d : translate('gridCol');
    }
    if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.gridType) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Tab) {
        return (_e = layoutItem.label) !== null && _e !== void 0 ? _e : translate('tabs');
    }
    return (_g = (_f = layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.label) !== null && _f !== void 0 ? _f : layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.id) !== null && _g !== void 0 ? _g : '';
}
function calPaddingStyle(layoutSetting) {
    var _a;
    const padding = jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toCSSPadding((_a = layoutSetting === null || layoutSetting === void 0 ? void 0 : layoutSetting.style) === null || _a === void 0 ? void 0 : _a.padding);
    if (padding) {
        if (layoutSetting.paddingColor) {
            const paddingTokens = padding.split(' ');
            const paddingColor = layoutSetting.paddingColor;
            let prefix = '';
            const ua = window.jimuUA.browser.name.toLowerCase();
            if (ua === 'firefox') {
                prefix = '-moz-';
            }
            else if (ua === 'safari' || ua === 'chrome') {
                prefix = '-webkit-';
            }
            return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
        padding: ${padding};
        background-image:
        ${prefix}linear-gradient(270deg, ${paddingColor} ${paddingTokens[0]}, transparent ${paddingTokens[0]}),
        ${prefix}linear-gradient(180deg, ${paddingColor} ${paddingTokens[1]}, transparent ${paddingTokens[1]}),
        ${prefix}linear-gradient(90deg, ${paddingColor} ${paddingTokens[2]}, transparent ${paddingTokens[2]}),
        ${prefix}linear-gradient(0deg, ${paddingColor} ${paddingTokens[3]}, transparent ${paddingTokens[3]});
      `;
        }
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      padding: ${padding};
    `;
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/grid-layout/layout-transform.ts":
/*!**********************************************************!*\
  !*** ./jimu-layouts/lib/grid-layout/layout-transform.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GridLayoutTransformer: () => (/* binding */ GridLayoutTransformer)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

class GridLayoutTransformer {
    constructor() {
        this.id = 'grid-layout-transformer';
        this.layoutType = jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.GridLayout;
        this.transformLayout = (layout, fromSizeMode, toSizeMode) => {
            var _a, _b;
            if (fromSizeMode !== toSizeMode && toSizeMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small) {
                let updatedLayout = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.Immutable)(layout);
                const rootId = (_a = layout.setting) === null || _a === void 0 ? void 0 : _a.rootItem;
                if (rootId && ((_b = layout.content) === null || _b === void 0 ? void 0 : _b[rootId])) {
                    const contentIds = [];
                    const rootItem = layout.content[rootId];
                    updatedLayout = this.collectItem(layout, rootId, rootItem.children, contentIds);
                    if (contentIds.length > 0) {
                        updatedLayout = updatedLayout.setIn(['content', rootId, 'gridType'], jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Tab);
                        updatedLayout = updatedLayout.setIn(['content', rootId, 'children'], contentIds);
                    }
                }
                return updatedLayout;
            }
            return layout;
        };
        this.collectItem = (layout, rootId, childIds, itemList) => {
            let updatedLayout = layout;
            childIds === null || childIds === void 0 ? void 0 : childIds.forEach(itemId => {
                var _a;
                if (!layout.content[itemId].isPending) {
                    const item = layout.content[itemId];
                    if (item.gridType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Column && item.gridType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Row && item.gridType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Tab) {
                        itemList.push(itemId);
                        updatedLayout = updatedLayout.setIn(['content', itemId, 'parent'], rootId);
                    }
                    else if (((_a = item.children) === null || _a === void 0 ? void 0 : _a.length) > 0) {
                        updatedLayout = this.collectItem(updatedLayout, rootId, item.children, itemList);
                    }
                }
            });
            return updatedLayout;
        };
    }
    transformLayoutItem(item, index, fromLayoutId, toLayoutId, fromSizeMode, toSizeMode) {
        return { index, item };
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/grid-layout/runtime/grid-item.tsx":
/*!************************************************************!*\
  !*** ./jimu-layouts/lib/grid-layout/runtime/grid-item.tsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GridItemComponent: () => (/* binding */ GridItemComponent)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _layout_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout-item */ "./jimu-layouts/lib/grid-layout/runtime/layout-item.tsx");
/* harmony import */ var _common_splitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/splitter */ "./jimu-layouts/lib/grid-layout/common/splitter.tsx");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/utils */ "./jimu-layouts/lib/grid-layout/common/utils.ts");
/** @jsx jsx */





function GridItemComponent(props) {
    const { layout, layoutItemId, isLast, className } = props;
    const layoutItem = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        return (0,_common_utils__WEBPACK_IMPORTED_MODULE_4__.getGridItem)(layout, layoutItemId);
    }, [layout, layoutItemId]);
    const parentType = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        if (layoutItem.parent) {
            const parentItem = (0,_common_utils__WEBPACK_IMPORTED_MODULE_4__.getGridItem)(layout, layoutItem.parent);
            return parentItem.gridType;
        }
        return null;
    }, [layout, layoutItem]);
    const size = +layoutItem.bbox.width;
    const animationContext = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useContext(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationContext);
    const interval = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        var _a, _b;
        if (((_b = (_a = animationContext === null || animationContext === void 0 ? void 0 : animationContext.setting) === null || _a === void 0 ? void 0 : _a.option) === null || _b === void 0 ? void 0 : _b.parentMode) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ParentAnimationMode.AllAtOnce) {
            return 0;
        }
        return 250;
    }, [animationContext]);
    const getStyle = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        if (parentType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Row) {
            return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
        height: 100%;
        width: ${size}%;
      `;
        }
        if (parentType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Column) {
            return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
        width: 100%;
        height: ${size}%;
      `;
        }
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      width: 100%;
      height: 100%;
    `;
    }, [size, parentType]);
    if (layoutItem.gridType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Row) {
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(RowContainer, { className: className, css: getStyle(), layout: layout, layoutItemId: layoutItemId, items: layoutItem.children }));
    }
    if (layoutItem.gridType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Column) {
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(ColContainer, { className: className, css: getStyle(), layout: layout, layoutItemId: layoutItemId, items: layoutItem.children }));
    }
    if (layoutItem.gridType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.GridItemType.Tab) {
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(TabContainer, { className: className, css: getStyle(), layout: layout, layoutItemId: layoutItemId, items: layoutItem.children }));
    }
    const idx = (0,_common_utils__WEBPACK_IMPORTED_MODULE_4__.indexOfPlainContent)(layout, layoutItemId);
    const isLastChild = (0,_common_utils__WEBPACK_IMPORTED_MODULE_4__.isLastChildOfRootItem)(layout, layoutItemId);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_layout_item__WEBPACK_IMPORTED_MODULE_2__.GridLayoutItem, { css: getStyle(), className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)(`d-flex ${className}`, { 'is-last': isLast }), layoutId: layout.id, layoutItemId: layoutItemId, delay: idx * interval, isLastChild: isLastChild }));
}
function RowContainer(props) {
    const { layout, layoutItemId, items, className } = props;
    const getAppConfigActionFnRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.hooks.useEffectOnce(() => {
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.moduleLoader.loadModule('jimu-for-builder').then((m) => {
            getAppConfigActionFnRef.current = m.getAppConfigAction;
        });
    });
    const handleResizeEnd = jimu_core__WEBPACK_IMPORTED_MODULE_0__.hooks.useEventCallback((id, dx) => {
        const appConfigAction = getAppConfigActionFnRef.current();
        const index = items.indexOf(id);
        const nextId = items[index + 1];
        const layoutItem = layout.content[id];
        const nextLayoutItem = layout.content[nextId];
        appConfigAction.editLayoutItemProperty({
            layoutId: layout.id,
            layoutItemId: id
        }, 'bbox', { width: +layoutItem.bbox.width + dx }).editLayoutItemProperty({
            layoutId: layout.id,
            layoutItemId: nextId
        }, 'bbox', { width: +nextLayoutItem.bbox.width - dx }).exec();
    });
    const createItem = (itemId, isLast) => {
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.Fragment, { key: itemId },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(GridItemComponent, { key: itemId, layout: layout, layoutItemId: itemId }),
            !isLast && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common_splitter__WEBPACK_IMPORTED_MODULE_3__.Splitter, { referenceItemId: itemId, layoutId: layout.id, direction: 'row', onResizeEnd: handleResizeEnd }))));
    };
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: `d-flex ${className}`, css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
        .is-last {
          width: auto;
          flex-grow: 1;
          flex-shrink: 1;
          flex-basis: 0;
        }
      `, "data-layoutid": layout.id, "data-layoutitemid": layoutItemId }, items.map((item, index) => createItem(item, index === items.length - 1))));
}
function ColContainer(props) {
    const { layout, layoutItemId, items, className } = props;
    const getAppConfigActionFnRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.hooks.useEffectOnce(() => {
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.moduleLoader.loadModule('jimu-for-builder').then((m) => {
            getAppConfigActionFnRef.current = m.getAppConfigAction;
        });
    });
    const handleResizeEnd = jimu_core__WEBPACK_IMPORTED_MODULE_0__.hooks.useEventCallback((id, dx, dy) => {
        const appConfigAction = getAppConfigActionFnRef.current();
        const index = items.indexOf(id);
        const nextId = items[index + 1];
        const layoutItem = layout.content[id];
        const nextLayoutItem = layout.content[nextId];
        appConfigAction.editLayoutItemProperty({
            layoutId: layout.id,
            layoutItemId: id
        }, 'bbox', { width: +layoutItem.bbox.width + dy }).editLayoutItemProperty({
            layoutId: layout.id,
            layoutItemId: nextId
        }, 'bbox', { width: +nextLayoutItem.bbox.width - dy }).exec();
    });
    const createItem = (itemId, isLast) => {
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.Fragment, { key: itemId },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(GridItemComponent, { key: itemId, layout: layout, layoutItemId: itemId }),
            !isLast && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common_splitter__WEBPACK_IMPORTED_MODULE_3__.Splitter, { referenceItemId: itemId, layoutId: layout.id, direction: 'col', onResizeEnd: handleResizeEnd }))));
    };
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: `d-flex flex-column ${className}`, css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
        .is-last {
          height: auto;
          flex-grow: 1;
          flex-shrink: 1;
          flex-basis: 0;
        }
      `, "data-layoutid": layout.id, "data-layoutitemid": layoutItemId }, items.map((item, index) => createItem(item, index === items.length - 1))));
}
function TabContainer(props) {
    const { layout, layoutItemId, items, className } = props;
    const translate = jimu_core__WEBPACK_IMPORTED_MODULE_0__.hooks.useTranslation(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.defaultMessages);
    const getLabel = (itemId) => {
        const appConfig = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
        return (0,_common_utils__WEBPACK_IMPORTED_MODULE_4__.getLabelOfGridTab)(appConfig, { layoutId: layout.id, layoutItemId: itemId }, translate);
    };
    const createItem = (itemId, index) => {
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Tab, { key: index, id: `${index}`, title: getLabel(itemId) },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(GridItemComponent, { layout: layout, layoutItemId: itemId })));
    };
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: className, "data-layoutid": layout.id, "data-layoutitemid": layoutItemId },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Tabs, { type: 'tabs', fill: true, scrollable: true, className: 'w-100 h-100', css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
          & > .tab-content {
            overflow: hidden;
          }
        ` }, [...items].map((item, index) => createItem(item, index)))));
}


/***/ }),

/***/ "./jimu-layouts/lib/grid-layout/runtime/layout-item.tsx":
/*!**************************************************************!*\
  !*** ./jimu-layouts/lib/grid-layout/runtime/layout-item.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GridLayoutItem: () => (/* binding */ GridLayoutItem)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _runtime_layout_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../runtime/layout-item */ "./jimu-layouts/lib/runtime/layout-item.tsx");
/* harmony import */ var jimu_icons_outlined_application_maxgrid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jimu-icons/outlined/application/maxgrid */ "./jimu-icons/outlined/application/maxgrid.tsx");
/* harmony import */ var jimu_icons_outlined_editor_close__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jimu-icons/outlined/editor/close */ "./jimu-icons/outlined/editor/close.tsx");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/utils */ "./jimu-layouts/lib/grid-layout/common/utils.ts");
/** @jsx jsx */






const style = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
  & > .max-grid-item-btn {
    display: none;
    background: var(--light-500);
    width: 26px;
    height: 26px;
    position: absolute;
    top: 0;
    right: 0;
  }

  &:hover > .max-grid-item-btn {
    display: flex;
    justify-content: center;
    align-items: center;
  }
`;
const maximizedStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
  position: absolute;
  left: 0;
  top: 0;
  width: 100% !important;
  height: 100% !important;
  z-index: 20;
  background: var(--light);
`;
function GridLayoutItem(props) {
    const [maximized, setMaximized] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(false);
    const expandable = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        return _common_utils__WEBPACK_IMPORTED_MODULE_5__.isExpandable(state, props.layoutId, props.layoutItemId);
    });
    const toggleMaximize = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        setMaximized(!maximized);
    }, [maximized]);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_runtime_layout_item__WEBPACK_IMPORTED_MODULE_2__["default"], Object.assign({}, props, { css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `${style};${maximized ? maximizedStyle : ''}` }), expandable && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_ui__WEBPACK_IMPORTED_MODULE_1__.Button, { icon: true, type: 'tertiary', className: 'max-grid-item-btn p-0', onClick: toggleMaximize },
        maximized && (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_icons_outlined_editor_close__WEBPACK_IMPORTED_MODULE_4__.CloseOutlined, null),
        !maximized && (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_icons_outlined_application_maxgrid__WEBPACK_IMPORTED_MODULE_3__.MaxgridOutlined, null)))));
}


/***/ }),

/***/ "./jimu-layouts/lib/grid-layout/runtime/layout.tsx":
/*!*********************************************************!*\
  !*** ./jimu-layouts/lib/grid-layout/runtime/layout.tsx ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _grid_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./grid-item */ "./jimu-layouts/lib/grid-layout/runtime/grid-item.tsx");
/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/utils */ "./jimu-layouts/lib/grid-layout/common/utils.ts");
/** @jsx jsx */




class GridLayout extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    findExtension() {
        const exts = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ExtensionManager.getInstance().getExtensions(`${jimu_core__WEBPACK_IMPORTED_MODULE_0__.extensionSpec.ExtensionPoints.LayoutTransformer}`);
        if ((exts === null || exts === void 0 ? void 0 : exts.length) > 0) {
            const ext = exts.find(item => item.layoutType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.GridLayout);
            this.layoutTransform = ext === null || ext === void 0 ? void 0 : ext.transformLayout;
        }
    }
    render() {
        var _a, _b;
        const { layouts, layout, browserSizeMode, mainSizeMode, className } = this.props;
        const viewOnly = layouts[browserSizeMode] !== layout.id;
        let finalLayout = layout;
        if (viewOnly) {
            if (this.layoutTransform == null) {
                this.findExtension();
            }
            if (this.layoutTransform != null) {
                finalLayout = this.layoutTransform(layout, mainSizeMode, browserSizeMode);
            }
        }
        const { rootItem: rootItemId } = (_a = finalLayout.setting) !== null && _a !== void 0 ? _a : {};
        const rootItem = (_b = finalLayout.content) === null || _b === void 0 ? void 0 : _b[rootItemId];
        const outClass = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('layout grid-layout d-flex w-100 h-100', className);
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: outClass, css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `overflow: hidden;${(0,_common_utils__WEBPACK_IMPORTED_MODULE_3__.calPaddingStyle)(finalLayout.setting)};`, "data-layoutid": finalLayout.id },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.IntersectionContext.Provider, { value: { monitor: false } },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.OneByOneAnimation, { oid: finalLayout.id, "data-layoutid": finalLayout.id, className: 'trail-container d-flex w-100 h-100', css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
              width: 100%;
            ` }, rootItem
                    ? (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_grid_item__WEBPACK_IMPORTED_MODULE_2__.GridItemComponent, { className: 'w-100 h-100', layout: finalLayout, layoutItemId: rootItemId })
                    : this.props.children))));
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.connect(_utils__WEBPACK_IMPORTED_MODULE_1__.mapStateToLayoutProps)(GridLayout));


/***/ }),

/***/ "./jimu-layouts/lib/layout-factory.ts":
/*!********************************************!*\
  !*** ./jimu-layouts/lib/layout-factory.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   findLayoutBuilder: () => (/* binding */ findLayoutBuilder),
/* harmony export */   findLayoutViewer: () => (/* binding */ findLayoutViewer),
/* harmony export */   registerLayoutBuilder: () => (/* binding */ registerLayoutBuilder),
/* harmony export */   registerLayoutViewer: () => (/* binding */ registerLayoutViewer)
/* harmony export */ });
const layoutBuilders = {};
const layoutViewers = {};
function registerLayoutBuilder(type, component) {
    layoutBuilders[type] = component;
}
function registerLayoutViewer(type, component) {
    layoutViewers[type] = component;
}
function findLayoutBuilder(type) {
    return layoutBuilders[type];
}
function findLayoutViewer(type) {
    return layoutViewers[type];
}


/***/ }),

/***/ "./jimu-layouts/lib/row-layout/common/util.ts":
/*!****************************************************!*\
  !*** ./jimu-layouts/lib/row-layout/common/util.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getItemStyle: () => (/* binding */ getItemStyle)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");


function getItemStyle(isMultiRow, sign, gutter, mergedStyle, itemSetting) {
    var _a, _b, _c, _d;
    if (isMultiRow) {
        return [
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
        padding: ${gutter / 2}px 0;
        height: ${_utils__WEBPACK_IMPORTED_MODULE_1__.getValueOfBBox(mergedStyle, 'height')};
        align-self: ${mergedStyle.alignSelf};
      `,
            itemSetting.offsetX !== 0 || itemSetting.offsetY !== 0
                ? `translate(${((_a = itemSetting.offsetX) !== null && _a !== void 0 ? _a : 0) * sign}px, ${(_b = itemSetting.offsetY) !== null && _b !== void 0 ? _b : 0}px)`
                : null
        ];
    }
    return [
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      padding: 0 ${gutter / 2}px;
      height: ${_utils__WEBPACK_IMPORTED_MODULE_1__.getValueOfBBox(mergedStyle, 'height')};
      align-self: ${mergedStyle.alignSelf};
    `,
        itemSetting.offsetX !== 0 || itemSetting.offsetY !== 0
            ? `translate(${((_c = itemSetting.offsetX) !== null && _c !== void 0 ? _c : 0) * sign}px, ${(_d = itemSetting.offsetY) !== null && _d !== void 0 ? _d : 0}px)`
            : null
    ];
}


/***/ }),

/***/ "./jimu-layouts/lib/row-layout/default-setting.ts":
/*!********************************************************!*\
  !*** ./jimu-layouts/lib/row-layout/default-setting.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_ROW_ITEM_SETTING: () => (/* binding */ DEFAULT_ROW_ITEM_SETTING),
/* harmony export */   DEFAULT_ROW_LAYOUT_SETTING: () => (/* binding */ DEFAULT_ROW_LAYOUT_SETTING)
/* harmony export */ });
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");

const DEFAULT_ROW_LAYOUT_SETTING = {
    space: 10,
    style: {
        padding: {
            number: [10, 10, 10, 10],
            unit: jimu_ui__WEBPACK_IMPORTED_MODULE_0__.DistanceUnits.PIXEL
        }
    }
};
const DEFAULT_ROW_ITEM_SETTING = {
    heightMode: 'fixed',
    aspectRatio: 1,
    offsetX: 0,
    offsetY: 0,
    style: {
        alignSelf: 'flex-start'
    }
};


/***/ }),

/***/ "./jimu-layouts/lib/row-layout/layout-transform.ts":
/*!*********************************************************!*\
  !*** ./jimu-layouts/lib/row-layout/layout-transform.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RowLayoutTransformer: () => (/* binding */ RowLayoutTransformer),
/* harmony export */   getHeightOfLayoutItems: () => (/* binding */ getHeightOfLayoutItems),
/* harmony export */   getWidgetHeight: () => (/* binding */ getWidgetHeight)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _search__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../search */ "./jimu-layouts/lib/search/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ "./jimu-layouts/lib/row-layout/types.ts");




function getWidgetHeight(appConfig, widgetsState, widgetId) {
    var _a, _b, _c, _d, _e, _f, _g;
    const widgetJson = appConfig.widgets[widgetId];
    if (widgetJson != null) {
        const browserSizeMode = _utils__WEBPACK_IMPORTED_MODULE_2__.getCurrentSizeMode();
        const mainSizeMode = appConfig.mainSizeMode;
        const layoutId = widgetJson.layouts.DEFAULT[browserSizeMode];
        const mainLayoutId = widgetJson.layouts.DEFAULT[mainSizeMode];
        const layout = (_a = appConfig.layouts[layoutId]) !== null && _a !== void 0 ? _a : appConfig.layouts[mainLayoutId];
        const padding = (_e = (_d = (_c = (_b = layout.setting) === null || _b === void 0 ? void 0 : _b.style) === null || _c === void 0 ? void 0 : _c.padding) === null || _d === void 0 ? void 0 : _d.number) !== null && _e !== void 0 ? _e : [0];
        const paddingValues = _utils__WEBPACK_IMPORTED_MODULE_2__.expandStyleArray(padding);
        const widgetHeight = (_g = (_f = widgetsState === null || widgetsState === void 0 ? void 0 : widgetsState[widgetId]) === null || _f === void 0 ? void 0 : _f.height) !== null && _g !== void 0 ? _g : 0;
        let pt = paddingValues[0];
        let pb = paddingValues[2];
        if (_utils__WEBPACK_IMPORTED_MODULE_2__.isPercentage(pt)) {
            pt = _utils__WEBPACK_IMPORTED_MODULE_2__.fromRatio(pt, widgetHeight);
        }
        if (_utils__WEBPACK_IMPORTED_MODULE_2__.isPercentage(pb)) {
            pb = _utils__WEBPACK_IMPORTED_MODULE_2__.fromRatio(pb, widgetHeight);
        }
        return widgetHeight - pt - pb;
    }
    return 0;
}
function getHeightOfLayoutItems(appConfig, widgetsState, layoutId) {
    var _a;
    const widgetId = _search__WEBPACK_IMPORTED_MODULE_1__.getWidgetIdThatUseTheLayoutId(appConfig, layoutId);
    const widgetHeight = getWidgetHeight(appConfig, widgetsState, widgetId);
    if (widgetHeight > 0) {
        const rowLayout = appConfig.layouts[layoutId];
        const itemIds = (_a = rowLayout.order) !== null && _a !== void 0 ? _a : [];
        const result = {};
        itemIds.forEach(itemId => {
            const layoutItem = appConfig.layouts[layoutId].content[itemId];
            result[itemId] = _utils__WEBPACK_IMPORTED_MODULE_2__.calHeightOfLayoutItem(widgetHeight, layoutItem);
        });
        return result;
    }
    return null;
}
class RowLayoutTransformer {
    constructor() {
        this.id = 'row-layout-transformer';
        this.layoutType = jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.RowLayout;
    }
    transformLayout(layout, fromSizeMode, toSizeMode, appConfig) {
        var _a, _b;
        if (fromSizeMode === toSizeMode) {
            return layout;
        }
        let updatedLayout = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.Immutable)(layout);
        if (toSizeMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small) {
            const itemHeights = getHeightOfLayoutItems(appConfig, (_a = window.runtimeInfo) === null || _a === void 0 ? void 0 : _a.widgets, layout.id);
            let index = 0;
            const order = Object.keys((_b = layout.content) !== null && _b !== void 0 ? _b : {}).sort((a, b) => {
                return parseInt(layout.content[a].bbox.left, 10) - parseInt(layout.content[b].bbox.left, 10);
            });
            order.forEach(itemId => {
                var _a, _b, _c;
                const layoutItem = layout.content[itemId];
                if (!layoutItem.isPending) {
                    updatedLayout = updatedLayout.setIn(['content', itemId, 'bbox'], {
                        left: index * _types__WEBPACK_IMPORTED_MODULE_3__.TOTAL_COLS,
                        width: _types__WEBPACK_IMPORTED_MODULE_3__.TOTAL_COLS,
                        height: (_b = (_a = layoutItem.bbox) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 'auto'
                    });
                    if (itemHeights != null) {
                        const setting = (_c = layoutItem.setting) !== null && _c !== void 0 ? _c : (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.Immutable)({});
                        updatedLayout = updatedLayout
                            .setIn(['content', itemId, 'bbox', 'height'], itemHeights[itemId].height)
                            .setIn(['content', itemId, 'setting'], setting.merge(itemHeights[itemId].setting));
                    }
                    index += 1;
                }
            });
        }
        return updatedLayout;
    }
    transformLayoutItem(item, index, fromLayoutId, toLayoutId, fromSizeMode, toSizeMode) {
        return { item, index };
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/row-layout/runtime/layout-item.tsx":
/*!*************************************************************!*\
  !*** ./jimu-layouts/lib/row-layout/runtime/layout-item.tsx ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ RowItem)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ "./jimu-layouts/lib/row-layout/utils.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../types */ "./jimu-layouts/lib/types.ts");
/* harmony import */ var _runtime_layout_item__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../runtime/layout-item */ "./jimu-layouts/lib/runtime/layout-item.tsx");
/* harmony import */ var _default_setting__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../default-setting */ "./jimu-layouts/lib/row-layout/default-setting.ts");
/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/util */ "./jimu-layouts/lib/row-layout/common/util.ts");
/** @jsx jsx */







class RowItem extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    getStyle(itemSetting) {
        const { gutter, layoutItem, isMultiRow } = this.props;
        const bbox = layoutItem.bbox;
        const sign = _utils__WEBPACK_IMPORTED_MODULE_2__.isRTL() ? -1 : 1;
        const mergedStyle = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.calItemHeight)(itemSetting, bbox, isMultiRow);
        return _common_util__WEBPACK_IMPORTED_MODULE_6__.getItemStyle(isMultiRow, sign, gutter, mergedStyle, itemSetting);
    }
    render() {
        var _a;
        const { span, offset, layoutId, layoutItem } = this.props;
        if (layoutItem == null || layoutItem.isPending) {
            return null;
        }
        const itemSetting = jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.assign({}, _default_setting__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_ROW_ITEM_SETTING, layoutItem.setting);
        const mergedClass = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('row-layout-item', `col-${span}`, `offset-${offset}`);
        const heightMode = (_a = itemSetting.autoProps) === null || _a === void 0 ? void 0 : _a.height;
        const ratio = _utils__WEBPACK_IMPORTED_MODULE_2__.parseAspectRatio(itemSetting.aspectRatio);
        const oneByOneAnimationProps = _utils__WEBPACK_IMPORTED_MODULE_2__.handleOnebyOneAnimation(this.props);
        const [cssStyle, transform] = this.getStyle(itemSetting);
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_runtime_layout_item__WEBPACK_IMPORTED_MODULE_4__["default"], Object.assign({ css: cssStyle, style: { transform }, className: mergedClass, layoutId: layoutId, layoutItemId: layoutItem.id, forceAspectRatio: _utils__WEBPACK_IMPORTED_MODULE_2__.shouldUseAspectRatio(itemSetting), aspectRatio: ratio, onClick: this.props.onClick, autoHeight: heightMode === _types__WEBPACK_IMPORTED_MODULE_3__.LayoutItemSizeModes.Auto }, oneByOneAnimationProps)));
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/row-layout/runtime/layout.tsx":
/*!********************************************************!*\
  !*** ./jimu-layouts/lib/row-layout/runtime/layout.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./row */ "./jimu-layouts/lib/row-layout/runtime/row.tsx");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _default_setting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../default-setting */ "./jimu-layouts/lib/row-layout/default-setting.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../types */ "./jimu-layouts/lib/row-layout/types.ts");
/** @jsx jsx */






class RowLayout extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    constructor(props) {
        super(props);
        this.onResize = (width, height) => {
            var _a;
            if (this.props.browserSizeMode !== this.props.mainSizeMode) {
                return;
            }
            if (width === 0 && height === 0) {
                return;
            }
            const { widgetId } = this.props;
            if (((_a = window.runtimeInfo.widgets) === null || _a === void 0 ? void 0 : _a[widgetId]) != null) {
                window.runtimeInfo.widgets[widgetId].height = height;
            }
            else {
                window.runtimeInfo.widgets[widgetId] = { height };
            }
        };
        this.handleDebounceResize = jimu_core__WEBPACK_IMPORTED_MODULE_0__.lodash.debounce(this.onResize, 200);
    }
    findExtension() {
        const exts = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ExtensionManager.getInstance().getExtensions(`${jimu_core__WEBPACK_IMPORTED_MODULE_0__.extensionSpec.ExtensionPoints.LayoutTransformer}`);
        if ((exts === null || exts === void 0 ? void 0 : exts.length) > 0) {
            const ext = exts.find(item => item.layoutType ===
                jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.RowLayout);
            this.layoutTransform = ext === null || ext === void 0 ? void 0 : ext.transformLayout;
        }
    }
    collectRowItems() {
        var _a;
        const content = (_a = this.finalLayout.order) !== null && _a !== void 0 ? _a : [];
        const rows = [];
        let row = [];
        let rowIndex = 0;
        rows.push(row);
        content.forEach((itemId) => {
            if (this.finalLayout.content[itemId].isPending) {
                return;
            }
            const bbox = this.finalLayout.content[itemId].bbox;
            const left = parseInt(bbox.left, 10);
            const rowNum = Math.floor(left / _types__WEBPACK_IMPORTED_MODULE_5__.TOTAL_COLS);
            if (rowNum > rowIndex) {
                row = [];
                rowIndex = rowNum;
                rows.push(row);
            }
            row.push(itemId);
        });
        return rows;
    }
    transform() {
        const { layout, layouts, browserSizeMode, mainSizeMode } = this.props;
        if (this.layoutTransform == null) {
            this.findExtension();
        }
        let targetLayout = layout;
        if (layouts[browserSizeMode] !== layout.id &&
            this.layoutTransform != null) {
            targetLayout = this.layoutTransform(layout, mainSizeMode, browserSizeMode, _utils__WEBPACK_IMPORTED_MODULE_3__.getAppConfig());
        }
        this.finalLayout = targetLayout;
        this.numOfRows = this.collectRowItems().length;
    }
    createRow() {
        const { layout, layouts } = this.props;
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_row__WEBPACK_IMPORTED_MODULE_2__.Row, { layouts: layouts, layout: layout, transformedLayout: this.finalLayout, isMultiRow: this.finalLayout !== layout || this.numOfRows > 1 }));
    }
    render() {
        var _a, _b;
        const { layout, className } = this.props;
        const layoutSetting = (_a = layout.setting) !== null && _a !== void 0 ? _a : _default_setting__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_ROW_LAYOUT_SETTING;
        const style = (_b = layoutSetting.style) !== null && _b !== void 0 ? _b : _default_setting__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_ROW_LAYOUT_SETTING.style;
        this.transform();
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('layout d-flex', className), css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
          width: 100%;
          padding: ${jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toCSSPadding(style.padding)};
        `, "data-layoutid": layout.id },
            this.createRow(),
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactResizeDetector, { handleHeight: true, onResize: this.handleDebounceResize })));
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.connect(_utils__WEBPACK_IMPORTED_MODULE_3__.mapStateToLayoutProps)(RowLayout));


/***/ }),

/***/ "./jimu-layouts/lib/row-layout/runtime/row.tsx":
/*!*****************************************************!*\
  !*** ./jimu-layouts/lib/row-layout/runtime/row.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Row: () => (/* binding */ Row)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _layout_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layout-item */ "./jimu-layouts/lib/row-layout/runtime/layout-item.tsx");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _builder_page_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ "./jimu-layouts/lib/row-layout/utils.ts");
/* harmony import */ var _default_setting__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../default-setting */ "./jimu-layouts/lib/row-layout/default-setting.ts");
/** @jsx jsx */






class Row extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    constructor(props) {
        super(props);
        this.flipLeftRight = _utils__WEBPACK_IMPORTED_MODULE_2__.isRTL();
    }
    collectBounds() {
        var _a;
        const { transformedLayout } = this.props;
        const content = (_a = transformedLayout.order) !== null && _a !== void 0 ? _a : [];
        this.childRects = [];
        content.forEach(itemId => {
            var _a, _b;
            if (transformedLayout.content[itemId].isPending) {
                return;
            }
            const bbox = (_b = (_a = transformedLayout.content) === null || _a === void 0 ? void 0 : _a[itemId]) === null || _b === void 0 ? void 0 : _b.bbox;
            if (bbox != null) {
                this.childRects.push({
                    layoutId: transformedLayout.id,
                    id: itemId,
                    left: parseInt(bbox.left, 10),
                    width: parseInt(bbox.width, 10),
                    height: parseInt(bbox.height, 10)
                });
            }
        });
        return this.childRects.sort((a, b) => a.left - b.left);
    }
    getConfig() {
        var _a;
        const { layout } = this.props;
        return (_a = layout.setting) !== null && _a !== void 0 ? _a : _default_setting__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_ROW_LAYOUT_SETTING;
    }
    createItem(childRects, index, layoutStyle) {
        var _a;
        const { transformedLayout, isMultiRow } = this.props;
        // const { isDragging, draggingItemId, dragOutOfBoundary } = this.state;
        const config = this.getConfig();
        const childRect = childRects[index];
        const gutter = (_a = config.space) !== null && _a !== void 0 ? _a : 0;
        let offset;
        if (index === 0) {
            offset = childRect.left;
        }
        else {
            const previousBBox = childRects[index - 1];
            offset = childRect.left - previousBBox.left - previousBBox.width;
        }
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_layout_item__WEBPACK_IMPORTED_MODULE_1__["default"], { key: `${childRect.layoutId}_${childRect.id}`, offset: offset, gutter: gutter, span: childRect.width, isMultiRow: isMultiRow, layoutId: transformedLayout.id, layoutItemId: childRect.id, layoutItem: transformedLayout.content[childRect.id], alignItems: layoutStyle.alignItems }));
    }
    render() {
        var _a, _b;
        const { layout, className } = this.props;
        this.collectBounds();
        const content = this.childRects;
        const config = this.getConfig();
        const layoutStyle = (_a = config.style) !== null && _a !== void 0 ? _a : {};
        const gutter = (_b = config.space) !== null && _b !== void 0 ? _b : 0;
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_3__.PageContext.Consumer, null, (props) => {
            return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('row-layout', className, {
                    'row-rtl': this.flipLeftRight
                }), css: _utils__WEBPACK_IMPORTED_MODULE_4__.ROW_STYLE, "data-layoutid": layout.id },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
                  width: 100%;
                  max-width: ${props.maxWidth > 0
                        ? `${props.maxWidth}px`
                        : 'none'};
                ` },
                    (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
                    position: relative;
                    height: 100%;
                    margin-left: ${-gutter / 2}px;
                    margin-right: ${-gutter / 2}px;
                    display: flex;
                    flex-direction: column;
                  ` }, content.length > 0 && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.IntersectionContext.Provider, { value: { monitor: false } },
                        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.OneByOneAnimation, { oid: layout.id, className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('row h-100 m-0', {
                                'flex-nowrap': !this.props.isMultiRow
                            }), css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
                          position: relative;
                          height: 100%;
                          overflow: ${this.props.isMultiRow ? 'auto' : 'unset'};
                        ` }, content.map((_, index) => this.createItem(content, index, layoutStyle)))))))));
        }));
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/row-layout/types.ts":
/*!**********************************************!*\
  !*** ./jimu-layouts/lib/row-layout/types.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MIN_SPAN: () => (/* binding */ MIN_SPAN),
/* harmony export */   TOTAL_COLS: () => (/* binding */ TOTAL_COLS)
/* harmony export */ });
const MIN_SPAN = 2;
const TOTAL_COLS = 12;


/***/ }),

/***/ "./jimu-layouts/lib/row-layout/utils.ts":
/*!**********************************************!*\
  !*** ./jimu-layouts/lib/row-layout/utils.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ROW_STYLE: () => (/* binding */ ROW_STYLE),
/* harmony export */   calItemHeight: () => (/* binding */ calItemHeight),
/* harmony export */   flipRowItemPos: () => (/* binding */ flipRowItemPos)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ "./jimu-layouts/lib/row-layout/types.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./jimu-layouts/lib/types.ts");



const ROW_STYLE = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
  width: 100%;
  display: flex;
  justify-content: center;

  .offset-1 {
    margin-left: 8.33333%;
    margin-right: 0;
  }
  .offset-2 {
    margin-left: 16.66667%;
    margin-right: 0;
  }
  .offset-3 {
    margin-left: 25%;
    margin-right: 0;
  }
  .offset-4 {
    margin-left: 33.33333%;
    margin-right: 0;
  }
  .offset-5 {
    margin-left: 41.66667%;
    margin-right: 0;
  }
  .offset-6 {
    margin-left: 50%;
    margin-right: 0;
  }
  .offset-7 {
    margin-left: 58.33333%;
    margin-right: 0;
  }
  .offset-8 {
    margin-left: 66.66667%;
    margin-right: 0;
  }
  .offset-9 {
    margin-left: 75%;
    margin-right: 0;
  }
  .offset-10 {
    margin-left: 83.33333%;
    margin-right: 0;
  }
  .offset-11 {
    margin-left: 91.66667%;
    margin-right: 0;
  }
`;
function flipRowItemPos(bbox) {
    const result = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.Immutable)(bbox);
    return result.set('left', _types__WEBPACK_IMPORTED_MODULE_1__.TOTAL_COLS - parseInt(bbox.left, 10) - parseInt(bbox.width, 10));
}
function calItemHeight(itemSetting, bbox, isMultiRow) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
    if (isMultiRow) {
        return {
            height: ((_a = itemSetting.autoProps) === null || _a === void 0 ? void 0 : _a.height) === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Auto ? 'auto' : bbox.height,
            alignSelf: (_c = (_b = itemSetting.style) === null || _b === void 0 ? void 0 : _b.alignSelf) !== null && _c !== void 0 ? _c : 'flex-start'
        };
    }
    // 1. aspect ratio
    if (itemSetting.heightMode === 'ratio') {
        return { alignSelf: (_e = (_d = itemSetting.style) === null || _d === void 0 ? void 0 : _d.alignSelf) !== null && _e !== void 0 ? _e : 'flex-start' };
    }
    // 2. use autoProps.height first
    if (((_f = itemSetting.autoProps) === null || _f === void 0 ? void 0 : _f.height) === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Auto) {
        return { height: 'auto', alignSelf: (_h = (_g = itemSetting.style) === null || _g === void 0 ? void 0 : _g.alignSelf) !== null && _h !== void 0 ? _h : 'flex-start' };
    }
    else if (((_j = itemSetting.autoProps) === null || _j === void 0 ? void 0 : _j.height) === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom) {
        return { height: bbox.height, alignSelf: (_l = (_k = itemSetting.style) === null || _k === void 0 ? void 0 : _k.alignSelf) !== null && _l !== void 0 ? _l : 'flex-start' };
    }
    else if (((_m = itemSetting.autoProps) === null || _m === void 0 ? void 0 : _m.height) === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch) {
        return { alignSelf: 'stretch' };
    }
    // 3. back compatible, use setting.heightMode
    if (itemSetting.heightMode === 'fit') {
        return { alignSelf: 'stretch' };
    }
    else if (parseFloat(bbox.height) > 0) {
        return { height: bbox.height, alignSelf: (_p = (_o = itemSetting.style) === null || _o === void 0 ? void 0 : _o.alignSelf) !== null && _p !== void 0 ? _p : 'flex-start' };
    }
    return { alignSelf: 'stretch' };
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/layout-entry.tsx":
/*!***************************************************!*\
  !*** ./jimu-layouts/lib/runtime/layout-entry.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _layout_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../layout-factory */ "./jimu-layouts/lib/layout-factory.ts");



class LayoutEntry extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    render() {
        const { layout } = this.props;
        if (!layout) {
            return null;
        }
        const LayoutElement = (0,_layout_factory__WEBPACK_IMPORTED_MODULE_2__.findLayoutViewer)(layout.type || jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.FlowLayout);
        if (!LayoutElement) {
            // console.error('Unkonw layout type.', layout.type);
            return null;
        }
        return jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(LayoutElement, Object.assign({}, this.props));
    }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.connect(_utils__WEBPACK_IMPORTED_MODULE_1__.mapStateToLayoutProps)(LayoutEntry));


/***/ }),

/***/ "./jimu-layouts/lib/runtime/layout-item-hook/use-liveview-playid.ts":
/*!**************************************************************************!*\
  !*** ./jimu-layouts/lib/runtime/layout-item-hook/use-liveview-playid.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useLiveviewPlayId: () => (/* binding */ useLiveviewPlayId)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_layouts_layout_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-layouts/layout-runtime */ "jimu-layouts/layout-runtime");


/**
 * Generate playId when the whole page's animation is played in live view mode.
 * 1. page is activated
 *
 * @param option
 * @returns
 */
function useLiveviewPlayId(type, hasParentAnimation) {
    const [liveViewPlayId, setLiveViewPlayId] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(null);
    const isPageVisible = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useContext(jimu_layouts_layout_runtime__WEBPACK_IMPORTED_MODULE_1__.PageVisibilityContext);
    const visibleRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef(false);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        // visible -> invisible or invisible -> visible
        if (type != null && !hasParentAnimation && visibleRef.current !== isPageVisible) {
            visibleRef.current = isPageVisible;
            setLiveViewPlayId((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getNextAnimationId)());
        }
    }, [isPageVisible, hasParentAnimation, type]);
    const resetPlayId = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        setLiveViewPlayId(null);
    }, []);
    return [
        liveViewPlayId,
        !isPageVisible,
        resetPlayId
    ];
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/layout-item.tsx":
/*!**************************************************!*\
  !*** ./jimu-layouts/lib/runtime/layout-item.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LayoutItem)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./jimu-layouts/lib/types.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _search__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../search */ "./jimu-layouts/lib/search/index.ts");
/* harmony import */ var _widget_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./widget-renderer */ "./jimu-layouts/lib/runtime/widget-renderer.tsx");
/* harmony import */ var _section_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./section-renderer */ "./jimu-layouts/lib/runtime/section-renderer.tsx");
/* harmony import */ var _layout_item_hook_use_liveview_playid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./layout-item-hook/use-liveview-playid */ "./jimu-layouts/lib/runtime/layout-item-hook/use-liveview-playid.ts");
/* harmony import */ var _use_viewport_intersection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../use-viewport-intersection */ "./jimu-layouts/lib/use-viewport-intersection.ts");
/* harmony import */ var _builder_page_context__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/** @jsx jsx */









function findInnerLayoutId(state, layoutId, layoutItemId) {
    var _a;
    const layoutItem = state.appConfig.layouts[layoutId].content[layoutItemId];
    if (layoutItem.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
        const widgetJson = state.appConfig.widgets[layoutItem.widgetId]; // may be a placeholder
        const sizeModeLayout = (_a = widgetJson === null || widgetJson === void 0 ? void 0 : widgetJson.layouts) === null || _a === void 0 ? void 0 : _a.DEFAULT;
        if (sizeModeLayout) {
            return sizeModeLayout[state.browserSizeMode];
        }
    }
    return null;
}
/* eslint-disable react-hooks/exhaustive-deps */
function LayoutItem(props) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    const stateProps = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => mapStateToProps(state, props), jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.shallowEqual);
    const isPrintPreview = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => { var _a, _b; return (_b = (_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.isPrintPreview) !== null && _b !== void 0 ? _b : false; });
    const allProps = Object.assign(Object.assign({}, props), stateProps);
    const refObj = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const { layoutId, layoutItemId, layoutItem } = allProps;
    const { className, children, id, isLastChild } = allProps, otherProps = __rest(allProps, ["className", "children", "id", "isLastChild"]);
    const isWidget = (layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget;
    const isSection = (layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section;
    const { effect, oneByOneEffect, hoverEffect } = !isPrintPreview ? ((_b = (_a = allProps.layoutItem) === null || _a === void 0 ? void 0 : _a.setting) !== null && _b !== void 0 ? _b : {}) : {};
    let effectType = (_c = effect === null || effect === void 0 ? void 0 : effect[jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationTriggerType.ScrollIntoView]) === null || _c === void 0 ? void 0 : _c.type;
    effectType = effectType && effectType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationType.None ? effectType : null;
    let oneByOneEffectType = (_d = oneByOneEffect === null || oneByOneEffect === void 0 ? void 0 : oneByOneEffect[jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationTriggerType.ScrollIntoView]) === null || _d === void 0 ? void 0 : _d.type;
    oneByOneEffectType = oneByOneEffectType && oneByOneEffectType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationType.None ? oneByOneEffectType : null;
    /* eslint-disable @typescript-eslint/no-unused-vars */
    const [mounted, setMounted] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(false);
    const [animationContext, setAnimationContext] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState({
        setting: oneByOneEffect === null || oneByOneEffect === void 0 ? void 0 : oneByOneEffect[jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationTriggerType.ScrollIntoView],
        playId: null,
        oid: stateProps.innerLayoutId,
        revert: null
    });
    const isInViewport = (0,_use_viewport_intersection__WEBPACK_IMPORTED_MODULE_7__.useViewportIntersection)(refObj.current, allProps.watchViewportVisibility);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        setMounted(true);
    }, []);
    const { setting: parentAnimationSetting } = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useContext(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationContext);
    const [asOnePlayId, asOneRevert, onAsOneAnimationEnd] = (0,_layout_item_hook_use_liveview_playid__WEBPACK_IMPORTED_MODULE_6__.useLiveviewPlayId)(effectType, (parentAnimationSetting === null || parentAnimationSetting === void 0 ? void 0 : parentAnimationSetting.type) != null && parentAnimationSetting.type !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationType.None);
    const [oneByOnePlayId, oneByOneRevert, onOnebyOneAnimationEnd] = (0,_layout_item_hook_use_liveview_playid__WEBPACK_IMPORTED_MODULE_6__.useLiveviewPlayId)(oneByOneEffectType, (parentAnimationSetting === null || parentAnimationSetting === void 0 ? void 0 : parentAnimationSetting.type) != null && parentAnimationSetting.type !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationType.None);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        // no as one playId, set onebyone directly
        if (asOnePlayId == null && oneByOnePlayId) {
            setAnimationContext({
                setting: oneByOneEffect === null || oneByOneEffect === void 0 ? void 0 : oneByOneEffect[jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationTriggerType.ScrollIntoView],
                playId: oneByOnePlayId,
                oid: stateProps.innerLayoutId,
                revert: oneByOneRevert,
                onContextAnimationEnd: oneByOneRevert // no need to reset animation context if it is revert
                    ? null
                    : () => {
                        onOnebyOneAnimationEnd();
                        setAnimationContext({
                            setting: oneByOneEffect === null || oneByOneEffect === void 0 ? void 0 : oneByOneEffect[jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationTriggerType.ScrollIntoView],
                            oid: stateProps.innerLayoutId,
                            playId: -1
                        });
                    }
            });
        }
    }, [asOnePlayId, oneByOnePlayId]);
    const handleSingleAnimationStart = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        var _a;
        // maybe there is no one by one animation, but some child element has its own animation
        const setting = oneByOneEffect === null || oneByOneEffect === void 0 ? void 0 : oneByOneEffect[jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationTriggerType.ScrollIntoView];
        const revert = ((_a = setting === null || setting === void 0 ? void 0 : setting.option) === null || _a === void 0 ? void 0 : _a.start) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationStartMode.AfterPrevious;
        setAnimationContext({
            setting,
            playId: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getNextAnimationId)(),
            oid: stateProps.innerLayoutId,
            revert,
            onContextAnimationEnd: revert
                ? null
                : () => {
                    setAnimationContext({ setting, oid: stateProps.innerLayoutId, playId: -1 });
                }
        });
    }, [oneByOneEffectType]);
    const handleSingleAnimationEnd = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        var _a;
        const setting = oneByOneEffect === null || oneByOneEffect === void 0 ? void 0 : oneByOneEffect[jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationTriggerType.ScrollIntoView];
        // only plays when start mode is "after previous"
        if (((_a = setting === null || setting === void 0 ? void 0 : setting.option) === null || _a === void 0 ? void 0 : _a.start) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationStartMode.AfterPrevious) {
            setAnimationContext({
                setting,
                playId: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getNextAnimationId)(),
                oid: stateProps.innerLayoutId,
                revert: false,
                onContextAnimationEnd: () => {
                    setAnimationContext({ setting, oid: stateProps.innerLayoutId, playId: -1 });
                }
            });
        }
        if (asOnePlayId > 0) { // reset the playId if this animation is triggered by asOnePlayId
            onAsOneAnimationEnd === null || onAsOneAnimationEnd === void 0 ? void 0 : onAsOneAnimationEnd();
        }
    }, [oneByOneEffectType, asOnePlayId]);
    if (!allProps.layoutItem || (isSection && !layoutItem.sectionId)) {
        return null;
    }
    // const effectType = effect ? (visible ? effect?.[AnimationTriggerType.ScrollIntoView]?.type: AnimationType.FadeOut) : null;
    const effectOption = (_e = effect === null || effect === void 0 ? void 0 : effect[jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationTriggerType.ScrollIntoView]) === null || _e === void 0 ? void 0 : _e.option;
    const rotate = (_j = (_h = (_g = (_f = layoutItem.setting) === null || _f === void 0 ? void 0 : _f.style) === null || _g === void 0 ? void 0 : _g.transform) === null || _h === void 0 ? void 0 : _h.rotate) !== null && _j !== void 0 ? _j : 0;
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_8__.ViewportVisibilityContext.Provider, { value: isInViewport },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationComponent, { id: id, parentId: layoutId, type: effectType, configType: effectOption === null || effectOption === void 0 ? void 0 : effectOption.configType, direction: effectOption === null || effectOption === void 0 ? void 0 : effectOption.direction, revert: asOneRevert, delay: props.delay, isLastChild: isLastChild, playId: asOnePlayId, onAnimationStart: handleSingleAnimationStart, onAnimationEnd: handleSingleAnimationEnd, ref: refObj, css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
          ${(0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getHoverStyle)(hoverEffect === null || hoverEffect === void 0 ? void 0 : hoverEffect.type, hoverEffect === null || hoverEffect === void 0 ? void 0 : hoverEffect.setting)};
          position: relative;
          overflow: visible;
          min-width: ${_types__WEBPACK_IMPORTED_MODULE_1__.MIN_LAYOUT_ITEM_SIZE}px;
          min-height: ${_types__WEBPACK_IMPORTED_MODULE_1__.MIN_LAYOUT_ITEM_SIZE}px;
        `, style: props.style, className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('d-flex layout-item', className, {
                'is-widget': isWidget,
                'is-section': isSection
            }), "data-layoutitemid": layoutItemId, "data-layoutid": layoutId },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationContext.Provider, { value: animationContext },
                isWidget && (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_widget_renderer__WEBPACK_IMPORTED_MODULE_4__.WidgetRenderer, Object.assign({ rotate: rotate }, otherProps)),
                isSection && (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_section_renderer__WEBPACK_IMPORTED_MODULE_5__.SectionRenderer, Object.assign({ rotate: rotate }, otherProps))),
            props.children)));
}
function mapStateToProps(state, ownProps) {
    const layoutItemProps = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.mapStateToLayoutItemProps)(state, ownProps);
    if (!layoutItemProps.layoutItem) {
        return layoutItemProps;
    }
    if (layoutItemProps.layoutItem.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
        const { layoutId, layoutItemId } = ownProps;
        const innerLayoutId = findInnerLayoutId(state, layoutId, layoutItemId);
        const result = Object.assign({}, layoutItemProps);
        if (innerLayoutId) {
            result.innerLayoutId = innerLayoutId;
        }
        return result;
    }
    const sectionProps = (0,_search__WEBPACK_IMPORTED_MODULE_3__.getSectionInfo)(state, layoutItemProps.layoutItem.sectionId);
    return Object.assign(Object.assign({}, layoutItemProps), sectionProps);
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/page-body.tsx":
/*!************************************************!*\
  !*** ./jimu-layouts/lib/runtime/page-body.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PageBody: () => (/* binding */ PageBody)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _builder_page_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");
/* harmony import */ var _layout_entry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout-entry */ "./jimu-layouts/lib/runtime/layout-entry.tsx");
/* harmony import */ var _search__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../search */ "./jimu-layouts/lib/search/index.ts");
/* harmony import */ var _common_page_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/page-util */ "./jimu-layouts/lib/common/page-util.ts");
/* harmony import */ var _controller_panel_runtime_group__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../controller-panel/runtime/group */ "./jimu-layouts/lib/controller-panel/runtime/group.tsx");
/** @jsx jsx */






/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable react-hooks/exhaustive-deps */
function PageBody(props) {
    const { pageJson, visible, pageContext, browserSizeMode, isPrintPreview, headerFooterHeight } = props;
    const [playId, setPlayId] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState();
    const layout = pageJson.layout;
    /* eslint-disable react-hooks/exhaustive-deps */
    const pageHeight = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        return (0,_common_page_util__WEBPACK_IMPORTED_MODULE_4__.computePageHeight)(pageJson, headerFooterHeight);
    }, [headerFooterHeight]);
    const oneByOneEffect = !isPrintPreview && pageJson.oneByOneEffect && pageJson.oneByOneEffect.type !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationType.None ? pageJson.oneByOneEffect : null;
    // const effectType = oneByOneEffect ? (visible ? oneByOneEffect.type : AnimationType.FadeOut) : null;
    const revert = oneByOneEffect ? (!visible) : null;
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if (oneByOneEffect) {
            setPlayId((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getNextAnimationId)());
        }
    }, [visible]);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        var _a;
        if (visible && layout) {
            // add scrollable class name to body if page is scrollable
            const appConfig = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
            const layoutId = layout[appConfig.mainSizeMode];
            const layoutType = (_a = appConfig.layouts[layoutId]) === null || _a === void 0 ? void 0 : _a.type;
            const htmlNode = document.getElementsByTagName('html')[0];
            if (layoutType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.FlowLayout) {
                htmlNode.classList.add('scrollable');
            }
            else {
                htmlNode.classList.remove('scrollable');
            }
        }
    }, [visible]);
    let maxWidth;
    if (pageJson.mode !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.PageMode.FitWindow && pageJson.maxWidth > 0) {
        maxWidth = pageJson.maxWidth;
    }
    const pageContextValue = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        const state = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState();
        let rootLayoutId;
        if (pageJson.layout) {
            rootLayoutId = _search__WEBPACK_IMPORTED_MODULE_3__.findLayoutId(pageJson.layout, browserSizeMode, state.appConfig.mainSizeMode);
        }
        return Object.assign(Object.assign({}, pageContext), { maxWidth, 
            // visible,
            viewOnly: true, rootLayoutId, pageId: pageJson.id });
    }, [pageContext, maxWidth, pageJson.id]);
    const animationContextValue = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        return {
            setting: oneByOneEffect,
            revert,
            playId: oneByOneEffect ? playId : null,
            oid: pageContextValue.rootLayoutId,
            onContextAnimationEnd: () => {
                setPlayId(-1);
            }
        };
    }, [oneByOneEffect, revert, playId]);
    if (!layout) {
        return;
    }
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.PageContext.Provider, { key: pageJson.id, value: pageContextValue },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.PageVisibilityContext.Provider, { value: visible },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { id: pageJson.id, "data-pageid": pageJson.id, className: 'page', css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
            display: ${visible ? 'flex' : 'none'};
            background-color: ${pageJson.bodyBackgroundColor || 'transparent'};
            height: ${pageHeight};
            flex: 1 0 auto;
            z-index: 1;
          ` },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationContext.Provider, { value: animationContextValue },
                    (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_layout_entry__WEBPACK_IMPORTED_MODULE_2__["default"], { layouts: layout, className: 'w-100 flex-grow-1', css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
                margin: 0 auto;
                background-color: transparent;
                z-index: 0;
              ` })),
                browserSizeMode !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small && (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_controller_panel_runtime_group__WEBPACK_IMPORTED_MODULE_5__.ControllerPanelGroup, { pageId: pageJson.id })))));
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/page-footer.tsx":
/*!**************************************************!*\
  !*** ./jimu-layouts/lib/runtime/page-footer.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PageFooter: () => (/* binding */ PageFooter)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _builder_page_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");
/* harmony import */ var _layout_entry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout-entry */ "./jimu-layouts/lib/runtime/layout-entry.tsx");
/** @jsx jsx */



function PageFooter(props) {
    var _a, _b;
    const { footerJson, visible, browserSizeMode, theme, mainSizeMode, pageContext, onHeightChange } = props;
    const height = footerJson.height[browserSizeMode] || footerJson.height[mainSizeMode] || 50;
    const layout = footerJson.layout;
    let backgroundIMage;
    if (footerJson.backgroundIMage) {
        if (typeof (footerJson.backgroundIMage) === 'string') {
            backgroundIMage = footerJson.backgroundIMage;
        }
        else if (typeof (footerJson.backgroundIMage) === 'object') {
            backgroundIMage = footerJson.backgroundIMage.url;
        }
    }
    const footerStyle = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        var _a;
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      display: ${visible ? 'flex' : 'none'};
      width: 100%;
      min-height: ${Math.round(parseFloat(height))}px;
      height: auto;
      overflow: hidden;
      background-color: ${footerJson.backgroundColor || theme.footer.bg || 'transparent'};
      background-image: ${backgroundIMage};
      background-position: ${footerJson.backgroundPosition};
      color: ${(_a = theme === null || theme === void 0 ? void 0 : theme.footer) === null || _a === void 0 ? void 0 : _a.color};
      z-index: 0;
    `;
    }, [
        visible,
        height,
        footerJson.backgroundColor,
        backgroundIMage,
        footerJson.backgroundPosition,
        (_a = theme === null || theme === void 0 ? void 0 : theme.footer) === null || _a === void 0 ? void 0 : _a.bg,
        (_b = theme === null || theme === void 0 ? void 0 : theme.footer) === null || _b === void 0 ? void 0 : _b.color
    ]);
    const pageContextValue = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        return Object.assign(Object.assign({}, pageContext), { viewOnly: true });
    }, [pageContext]);
    const handleSizeChange = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((_, height) => {
        onHeightChange(height);
    }, [onHeightChange]);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.PageContext.Provider, { value: pageContextValue },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.PageVisibilityContext.Provider, { value: visible },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'footer', css: footerStyle },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_layout_entry__WEBPACK_IMPORTED_MODULE_2__["default"], { layouts: layout, className: 'w-100 flex-grow-1' }),
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactResizeDetector, { handleHeight: true, handleWidth: false, onResize: handleSizeChange })))));
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/page-header.tsx":
/*!**************************************************!*\
  !*** ./jimu-layouts/lib/runtime/page-header.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PageHeader: () => (/* binding */ PageHeader)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _builder_page_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");
/* harmony import */ var _layout_entry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout-entry */ "./jimu-layouts/lib/runtime/layout-entry.tsx");
/** @jsx jsx */



function PageHeader(props) {
    var _a, _b;
    const { headerJson, visible, browserSizeMode, theme, mainSizeMode, pageContext, onHeightChange } = props;
    const height = headerJson.height[browserSizeMode] || headerJson.height[mainSizeMode] || 50;
    const layout = headerJson.layout;
    let backgroundIMage;
    if (headerJson.backgroundIMage) {
        if (typeof (headerJson.backgroundIMage) === 'string') {
            backgroundIMage = headerJson.backgroundIMage;
        }
        else if (typeof (headerJson.backgroundIMage) === 'object') {
            backgroundIMage = headerJson.backgroundIMage.url;
        }
    }
    const headerStyle = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        var _a;
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      display: ${visible ? 'flex' : 'none'};
      position: ${headerJson.sticky ? 'sticky' : 'relative'};
      z-index: ${headerJson.sticky ? 2 : '0'};
      top: 0;
      width: 100%;
      min-height: ${Math.round(parseFloat(height))}px;
      height: auto;
      overflow: hidden;
      background-color: ${headerJson.backgroundColor || theme.header.bg || 'transparent'};
      background-image: ${backgroundIMage};
      background-position: ${headerJson.backgroundPosition};
      color: ${(_a = theme === null || theme === void 0 ? void 0 : theme.header) === null || _a === void 0 ? void 0 : _a.color};
      flex: 0 0 auto;
    `;
    }, [
        visible,
        height,
        headerJson.sticky,
        headerJson.backgroundColor,
        backgroundIMage,
        headerJson.backgroundPosition,
        (_a = theme === null || theme === void 0 ? void 0 : theme.header) === null || _a === void 0 ? void 0 : _a.bg,
        (_b = theme === null || theme === void 0 ? void 0 : theme.header) === null || _b === void 0 ? void 0 : _b.color
    ]);
    const pageContextValue = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        return Object.assign(Object.assign({}, pageContext), { viewOnly: true });
    }, [pageContext]);
    const handleSizeChange = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((_, height) => {
        onHeightChange(height);
    }, [onHeightChange]);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.PageContext.Provider, { value: pageContextValue },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.PageVisibilityContext.Provider, { value: visible },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'header', css: headerStyle },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_layout_entry__WEBPACK_IMPORTED_MODULE_2__["default"], { layouts: layout, className: 'w-100 flex-grow-1' }),
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactResizeDetector, { handleHeight: true, handleWidth: false, onResize: handleSizeChange })))));
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/page-renderer.tsx":
/*!****************************************************!*\
  !*** ./jimu-layouts/lib/runtime/page-renderer.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _fixed_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fixed-layout/runtime/layout */ "./jimu-layouts/lib/fixed-layout/runtime/layout.tsx");
/* harmony import */ var _flow_layout_layout_transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../flow-layout/layout-transform */ "./jimu-layouts/lib/flow-layout/layout-transform.ts");
/* harmony import */ var _row_layout_layout_transform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../row-layout/layout-transform */ "./jimu-layouts/lib/row-layout/layout-transform.ts");
/* harmony import */ var _grid_layout_layout_transform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../grid-layout/layout-transform */ "./jimu-layouts/lib/grid-layout/layout-transform.ts");
/* harmony import */ var _flow_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../flow-layout/runtime/layout */ "./jimu-layouts/lib/flow-layout/runtime/layout.tsx");
/* harmony import */ var _grid_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../grid-layout/runtime/layout */ "./jimu-layouts/lib/grid-layout/runtime/layout.tsx");
/* harmony import */ var _column_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../column-layout/runtime/layout */ "./jimu-layouts/lib/column-layout/runtime/layout.tsx");
/* harmony import */ var _builder_page_context__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");
/* harmony import */ var _layout_factory__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../layout-factory */ "./jimu-layouts/lib/layout-factory.ts");
/* harmony import */ var _page_body__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./page-body */ "./jimu-layouts/lib/runtime/page-body.tsx");
/* harmony import */ var _page_header__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./page-header */ "./jimu-layouts/lib/runtime/page-header.tsx");
/* harmony import */ var _page_footer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./page-footer */ "./jimu-layouts/lib/runtime/page-footer.tsx");
/* harmony import */ var jimu_theme__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! jimu-theme */ "jimu-theme");
/* harmony import */ var _print_preview_tool__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./print-preview-tool */ "./jimu-layouts/lib/runtime/print-preview-tool.tsx");
/** @jsx jsx */















(0,_layout_factory__WEBPACK_IMPORTED_MODULE_9__.registerLayoutViewer)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.FixedLayout, _fixed_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_1__["default"]);
(0,_layout_factory__WEBPACK_IMPORTED_MODULE_9__.registerLayoutViewer)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.FlowLayout, _flow_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_5__["default"]);
(0,_layout_factory__WEBPACK_IMPORTED_MODULE_9__.registerLayoutViewer)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.GridLayout, _grid_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_6__["default"]);
(0,_layout_factory__WEBPACK_IMPORTED_MODULE_9__.registerLayoutViewer)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.ColumnLayout, _column_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_7__["default"]);
class PageRenderer extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    constructor(props) {
        super(props);
        this.updateHeaderHeight = (height) => {
            this.setState({ headerHeight: height });
        };
        this.updateFooterHeight = (height) => {
            this.setState({ footerHeight: height });
        };
        this.isMac = () => {
            var _a, _b;
            return ((_b = (_a = window.jimuUA) === null || _a === void 0 ? void 0 : _a.os) === null || _b === void 0 ? void 0 : _b.name) === 'macOS';
        };
        this.state = { headerHeight: 0, footerHeight: 0 };
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.ExtensionManager.getInstance().registerExtension({
            epName: jimu_core__WEBPACK_IMPORTED_MODULE_0__.extensionSpec.ExtensionPoints.LayoutTransformer,
            extension: new _flow_layout_layout_transform__WEBPACK_IMPORTED_MODULE_2__.FlowLayoutTransformer()
        });
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.ExtensionManager.getInstance().registerExtension({
            epName: jimu_core__WEBPACK_IMPORTED_MODULE_0__.extensionSpec.ExtensionPoints.LayoutTransformer,
            extension: new _row_layout_layout_transform__WEBPACK_IMPORTED_MODULE_3__.RowLayoutTransformer()
        });
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.ExtensionManager.getInstance().registerExtension({
            epName: jimu_core__WEBPACK_IMPORTED_MODULE_0__.extensionSpec.ExtensionPoints.LayoutTransformer,
            extension: new _grid_layout_layout_transform__WEBPACK_IMPORTED_MODULE_4__.GridLayoutTransformer()
        });
        // these settings will not change during runtime
        this.pageContext = {
            theme: this.props.theme
        };
        if (!window.jimuConfig.isBuilder) {
            if (this.isMac()) {
                this.keyBindings = {
                    'command+keyp': this.handlePrintEvent
                };
            }
            else {
                this.keyBindings = {
                    'ctrl+keyp': this.handlePrintEvent
                };
            }
        }
    }
    componentDidUpdate(prevProps) {
        const previousPageId = getVisiblePageId(prevProps.pageStatus);
        const currentPageId = getVisiblePageId(this.props.pageStatus);
        if (previousPageId !== currentPageId) {
            const htmlNode = document.getElementsByTagName('html')[0];
            htmlNode.scrollTop = 0;
        }
    }
    handlePrintEvent(e) {
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.appActions.activePrintPreview());
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.jimuHistory.changeQueryObject({ print_preview: String(true) });
        e.cancelBubble = true;
        e.preventDefault();
        e.stopImmediatePropagation();
    }
    render() {
        const { pageStatus, pages, theme, isPrintPreview } = this.props;
        const visiblePageId = getVisiblePageId(pageStatus);
        if (!visiblePageId || !(pages === null || pages === void 0 ? void 0 : pages[visiblePageId])) {
            return null;
        }
        let width = '100%';
        const pageJson = pages[visiblePageId] || {};
        if (pageJson && !isNaN(+pageJson.width)) {
            width = `${+pageJson.width}px`;
        }
        const mergedStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      width: ${width};
      margin: 0 auto;
      min-height: 100%;
      overflow: auto;
      height: 100%;
      background-color: ${pageJson && pageJson.backgroundColor};

      html.scrollable & {
        height: auto;
        overflow: unset;
        min-height: 100vh;
      }
    `;
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'page-renderer d-flex flex-column', css: mergedStyle, ref: el => { this.pageRef = el; }, "data-testid": 'pageRenderer' },
            isPrintPreview && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_print_preview_tool__WEBPACK_IMPORTED_MODULE_14__.PrintPreviewTool, null)),
            this.renderDialog(),
            this.renderHeader(),
            Object.keys(pageStatus).map(pId => this.renderPageBody(pId, theme)),
            this.renderFooter(),
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.Keyboard, { bindings: this.keyBindings })));
    }
    renderHeader() {
        if (!this.props.header) {
            return null;
        }
        const { header, headerVisible, browserSizeMode, theme, mainSizeMode } = this.props;
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_page_header__WEBPACK_IMPORTED_MODULE_11__.PageHeader, { headerJson: header, pageContext: this.pageContext, visible: headerVisible, browserSizeMode: browserSizeMode, mainSizeMode: mainSizeMode, theme: theme, onHeightChange: this.updateHeaderHeight }));
    }
    renderFooter() {
        if (!this.props.footer) {
            return null;
        }
        const { footer, footerVisible, browserSizeMode, mainSizeMode, theme } = this.props;
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_page_footer__WEBPACK_IMPORTED_MODULE_12__.PageFooter, { footerJson: footer, pageContext: this.pageContext, visible: footerVisible, browserSizeMode: browserSizeMode, mainSizeMode: mainSizeMode, theme: theme, onHeightChange: this.updateFooterHeight }));
    }
    renderPageBody(renderedPageId, theme) {
        const { pageStatus, pages, isPrintPreview } = this.props;
        const pageJson = pages[renderedPageId];
        if (!pageJson) {
            // page is removed
            return;
        }
        const visible = !!pageStatus[renderedPageId];
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_page_body__WEBPACK_IMPORTED_MODULE_10__.PageBody, { key: pageJson.id, pageJson: pageJson, pageContext: this.pageContext, browserSizeMode: this.props.browserSizeMode, visible: visible, isPrintPreview: isPrintPreview, headerFooterHeight: this.state.headerHeight + this.state.footerHeight }));
    }
    renderDialog() {
        const { dialogId, urlDialogJson, splashDialogJson, isSplashClosed, isPageDlgClosed, pageDialogJson, pageDialogId } = this.props;
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.Fragment, null,
            urlDialogJson && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_8__.PageContext.Provider, { value: Object.assign(Object.assign({}, this.pageContext), { dialogId: dialogId, viewOnly: true }) },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AppDialog, { dialogJson: urlDialogJson, runtime: true }))),
            !isPageDlgClosed && pageDialogJson && (urlDialogJson === null || urlDialogJson === void 0 ? void 0 : urlDialogJson.id) !== pageDialogJson.id && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_8__.PageContext.Provider, { value: Object.assign(Object.assign({}, this.pageContext), { dialogId: pageDialogId, viewOnly: true }) },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AppDialog, { dialogJson: pageDialogJson, runtime: true, isOpenByPage: true }))),
            !isSplashClosed && splashDialogJson && (urlDialogJson === null || urlDialogJson === void 0 ? void 0 : urlDialogJson.id) !== splashDialogJson.id && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_builder_page_context__WEBPACK_IMPORTED_MODULE_8__.PageContext.Provider, { value: Object.assign(Object.assign({}, this.pageContext), { dialogId: splashDialogJson.id, viewOnly: true }) },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AppDialog, { dialogJson: splashDialogJson, runtime: true })))));
    }
}
PageRenderer.displayName = 'RuntimePageRenderer';
const mapStateToProps = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.createSelector)([
    (state) => state.appConfig.pages,
    (state) => state.appConfig.dialogs,
    (state) => state.appConfig.header,
    (state) => state.appConfig.footer,
    (state) => state.browserSizeMode,
    (state) => state.appConfig.mainSizeMode,
    (state) => {
        var _a;
        const realState = window.jimuConfig.isBuilder ? state.appStateInBuilder : state;
        return (_a = realState === null || realState === void 0 ? void 0 : realState.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.dialogInfos;
    },
    (state) => {
        var _a;
        const realState = window.jimuConfig.isBuilder ? state.appStateInBuilder : state;
        return (_a = realState === null || realState === void 0 ? void 0 : realState.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.currentPageId;
    },
    (state) => {
        var _a, _b, _c;
        const realState = window.jimuConfig.isBuilder ? state.appStateInBuilder : state;
        const currentPageId = (_a = realState === null || realState === void 0 ? void 0 : realState.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.currentPageId;
        return (_c = (_b = realState === null || realState === void 0 ? void 0 : realState.appConfig) === null || _b === void 0 ? void 0 : _b.pages[currentPageId]) === null || _c === void 0 ? void 0 : _c.autoOpenDialogId;
    },
    (state) => { var _a, _b; return (_b = (_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.isPrintPreview) !== null && _b !== void 0 ? _b : false; },
    (_, ownProps) => getVisiblePageId(ownProps.pageStatus),
    (_, ownProps) => ownProps.dialogId
], (pages, dialogs, header, footer, browserSizeMode, mainSizeMode, dialogInfos, currentPageId, pageDlgId, isPrintPreview, pageId, dialogId) => {
    var _a, _b;
    if (!pageId || !pages[pageId]) {
        return {};
    }
    const splashDlgJson = dialogs[Object.keys(dialogs).find(dlgId => dialogs[dlgId].isSplash)];
    return {
        pages: pages,
        header: header,
        headerVisible: !!pages[pageId].header,
        footer: footer,
        footerVisible: !!pages[pageId].footer,
        browserSizeMode: browserSizeMode,
        mainSizeMode: mainSizeMode,
        splashDialogJson: splashDlgJson,
        isSplashClosed: (_a = dialogInfos === null || dialogInfos === void 0 ? void 0 : dialogInfos[splashDlgJson === null || splashDlgJson === void 0 ? void 0 : splashDlgJson.id]) === null || _a === void 0 ? void 0 : _a.isClosed,
        pageDialogId: pageDlgId,
        pageDialogJson: dialogs[pageDlgId],
        isPageDlgClosed: (_b = dialogInfos === null || dialogInfos === void 0 ? void 0 : dialogInfos[currentPageId + '-' + pageDlgId]) === null || _b === void 0 ? void 0 : _b.isClosed,
        urlDialogJson: dialogs[dialogId],
        isPrintPreview
    };
});
function getVisiblePageId(pageStatus) {
    return Object.keys(pageStatus).find(pid => pageStatus[pid]);
}
// connect<IMapStateToProps, IMapDispatchToProps, ICompProps, IReduxState>(mapStateToProps, mapDispatchToProps)
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.connect(mapStateToProps)((0,jimu_theme__WEBPACK_IMPORTED_MODULE_13__.withTheme)(PageRenderer)));


/***/ }),

/***/ "./jimu-layouts/lib/runtime/print-preview-tool.tsx":
/*!*********************************************************!*\
  !*** ./jimu-layouts/lib/runtime/print-preview-tool.tsx ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PrintPreviewTool: () => (/* binding */ PrintPreviewTool)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_icons_outlined_editor_close__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-icons/outlined/editor/close */ "./jimu-icons/outlined/editor/close.tsx");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/** @jsx jsx */



const style = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
  display: flex;
  height: 64px;
  background: var(--dark-700);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1500;

  .jimu-btn {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .label {
    white-space: nowrap;
  }

  @media print {
    & {
      display: none;
    }
  }
`;
function PrintPreviewTool() {
    const intl = jimu_core__WEBPACK_IMPORTED_MODULE_0__.i18n.getIntl();
    const btnRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        btnRef.current.focus();
    }, []);
    const formatMessage = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((id) => {
        return intl.formatMessage({ id });
    }, [intl]);
    const handleClose = jimu_core__WEBPACK_IMPORTED_MODULE_0__.hooks.useEventCallback(() => {
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.jimuHistory.changeQueryObject({ print_preview: null });
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.appActions.quitPrintPreview());
    });
    const invokeBrowserPrint = jimu_core__WEBPACK_IMPORTED_MODULE_0__.hooks.useEventCallback(() => {
        window.print();
    });
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'print-preview-tool shadow-lg', css: style },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'd-flex justify-content-center align-items-center flex-grow-1' },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_ui__WEBPACK_IMPORTED_MODULE_2__.Button, { ref: btnRef, "aria-label": formatMessage('printCurrentPage'), type: 'primary', onClick: invokeBrowserPrint }, formatMessage('printCurrentPage'))),
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_ui__WEBPACK_IMPORTED_MODULE_2__.Button, { className: 'ml-auto', icon: true, type: 'tertiary', "aria-label": formatMessage('close'), onClick: handleClose },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_icons_outlined_editor_close__WEBPACK_IMPORTED_MODULE_1__.CloseOutlined, { color: 'var(--white)' }))));
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/section-auto-play.tsx":
/*!********************************************************!*\
  !*** ./jimu-layouts/lib/runtime/section-auto-play.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useAutoPlay: () => (/* binding */ useAutoPlay)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./jimu-layouts/lib/types.ts");
/** @jsx jsx */


function nextView(sectionId, loop) {
    var _a, _b;
    const state = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState();
    const views = state.appConfig.sections[sectionId].views;
    let navInfo = (_b = (_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.sectionNavInfos) === null || _b === void 0 ? void 0 : _b[sectionId];
    const currentIndex = (navInfo === null || navInfo === void 0 ? void 0 : navInfo.currentViewId) ? views.indexOf(navInfo.currentViewId) : 0;
    const nextIndex = currentIndex < views.length - 1 ? currentIndex + 1 : 0;
    if (!loop && nextIndex === 0) {
        return false;
    }
    // do not change queryObject when it is auto playing
    if (navInfo) {
        navInfo = navInfo.set('previousViewId', views[currentIndex]).set('currentViewId', views[nextIndex]);
    }
    else {
        navInfo = {
            previousViewId: views[currentIndex],
            currentViewId: views[nextIndex]
        };
    }
    (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.appActions.sectionNavInfoChanged(sectionId, navInfo));
    return true;
}
function useAutoPlay(props) {
    const { sectionId, autoPlay, interval = _types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_AUTOPLAY_INTERVAL, loop = false } = props;
    const playHandlerRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    // const [isPlaying, setIsPlaying] = React.useState<boolean>();
    const isAutoplaySuspendMode = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a, _b;
        if (!autoPlay) {
            return null;
        }
        return ((_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.appMode) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.AppMode.Design || ((_b = state.appRuntimeInfo) === null || _b === void 0 ? void 0 : _b.isPrintPreview);
    });
    const modeRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef(isAutoplaySuspendMode);
    const stopPlay = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        if (playHandlerRef.current) {
            clearInterval(playHandlerRef.current);
            playHandlerRef.current = null;
        }
    }, []);
    const startPlay = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        stopPlay(); // stop previous auto play
        playHandlerRef.current = setInterval(() => {
            const continued = nextView(sectionId, loop);
            if (!continued) {
                stopPlay();
            }
        }, interval * 1000);
    }, [sectionId, loop, interval, stopPlay]);
    // auto play props change affects
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if (!modeRef.current) {
            if (!autoPlay) {
                stopPlay();
                return;
            }
            startPlay();
        }
        return () => {
            stopPlay();
        };
    }, [autoPlay, interval, loop, stopPlay, startPlay]);
    // isDesignMode change affects
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if (modeRef.current !== isAutoplaySuspendMode && isAutoplaySuspendMode !== null) {
            modeRef.current = isAutoplaySuspendMode;
            if (isAutoplaySuspendMode) {
                stopPlay();
                return;
            }
            if (autoPlay) {
                startPlay();
            }
        }
    }, [isAutoplaySuspendMode, startPlay, stopPlay, autoPlay]);
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/section-content.tsx":
/*!******************************************************!*\
  !*** ./jimu-layouts/lib/runtime/section-content.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SectionContent: () => (/* binding */ SectionContent)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _view_content__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view-content */ "./jimu-layouts/lib/runtime/view-content.tsx");
/** @jsx jsx */


function SectionContent(props) {
    var _a, _b;
    const { views, navInfo, animationPreview, playMode, currentIndex, previousIndex, progress, loop, viewTransition } = props;
    const isPreviewOneByOne = animationPreview && playMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationPlayMode.OneByOne;
    const { setting, playId } = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useContext(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationContext);
    const isDesignMode = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a;
        if (!setting || setting.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationType.None) {
            return true;
        }
        return ((_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.appMode) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.AppMode.Design;
    });
    // isDesignMode === false
    const animationSetting = !isDesignMode || isPreviewOneByOne || ((navInfo === null || navInfo === void 0 ? void 0 : navInfo.playId) && (navInfo === null || navInfo === void 0 ? void 0 : navInfo.withOneByOne)) ? setting : null;
    const animationContext = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        return {
            // trigger: AnimationTriggerType.Manual,
            setting: animationSetting,
            playId: isPreviewOneByOne ? playId : null
            // inheritedOneByOneSetting: null,
            // depth: depth + 1,
            // onAnimationEnd
        };
    }, [animationSetting, isPreviewOneByOne, playId]);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.AnimationContext.Provider, { value: animationContext },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'section-content' },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.TransitionContainer, { useProgress: (_a = navInfo === null || navInfo === void 0 ? void 0 : navInfo.useProgress) !== null && _a !== void 0 ? _a : false, useStep: (_b = navInfo === null || navInfo === void 0 ? void 0 : navInfo.useStep) !== null && _b !== void 0 ? _b : false, previousIndex: previousIndex, currentIndex: currentIndex, progress: progress, transitionType: viewTransition === null || viewTransition === void 0 ? void 0 : viewTransition.type, direction: viewTransition === null || viewTransition === void 0 ? void 0 : viewTransition.direction, playId: navInfo === null || navInfo === void 0 ? void 0 : navInfo.playId, withOneByOne: navInfo === null || navInfo === void 0 ? void 0 : navInfo.withOneByOne, loop: loop }, views.map((viewId) => {
                const isActive = viewId === views[currentIndex];
                return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_view_content__WEBPACK_IMPORTED_MODULE_1__.ViewContent, { key: viewId, viewId: viewId, isActive: isActive, layoutEntryComponent: props.layoutEntryComponent, viewVisibilityContext: props.viewVisibilityContext }));
            })))));
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/section-nav.tsx":
/*!**************************************************!*\
  !*** ./jimu-layouts/lib/runtime/section-nav.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SectionNav: () => (/* binding */ SectionNav)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_icons_outlined_directional_left__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-icons/outlined/directional/left */ "./jimu-icons/outlined/directional/left.tsx");
/* harmony import */ var jimu_icons_outlined_directional_right__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jimu-icons/outlined/directional/right */ "./jimu-icons/outlined/directional/right.tsx");
/** @jsx jsx */



function SectionNav(props) {
    var _a, _b, _c;
    const { sectionId, currentIndex, numOfViews, onCurrentViewChange } = props;
    const arrowsNav = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a;
        return (_a = state.appConfig.sections[sectionId]) === null || _a === void 0 ? void 0 : _a.arrowsNav;
    });
    const dotsNav = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a;
        return (_a = state.appConfig.sections[sectionId]) === null || _a === void 0 ? void 0 : _a.dotsNav;
    });
    const dotsNavPosition = (_a = dotsNav === null || dotsNav === void 0 ? void 0 : dotsNav.position) !== null && _a !== void 0 ? _a : 'b';
    const dots = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        const result = [];
        for (let i = 0; i < numOfViews; i++) {
            result.push(i);
        }
        return result;
    }, [numOfViews]);
    const arrowStyle = () => {
        var _a, _b, _c, _d;
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      position: absolute;
      cursor: pointer;
      pointer-events: auto;

      &.disabled {
        cursor: default;
        svg {
          color: var(--light-400);
        }
      }

      &.first {
        left: ${(_a = arrowsNav.offset) !== null && _a !== void 0 ? _a : 0}px;
        top: 50%;
        transform: translateY(-50%);

        &.vertical {
          top: ${(_b = arrowsNav.offset) !== null && _b !== void 0 ? _b : 0}px;
          left: 50%;
          transform: translateX(-50%) rotate(90deg);
        }
      }
      &.second {
        right: ${(_c = arrowsNav.offset) !== null && _c !== void 0 ? _c : 0}px;
        top: 50%;
        transform: translateY(-50%);

        &.vertical {
          bottom: ${(_d = arrowsNav.offset) !== null && _d !== void 0 ? _d : 0}px;
          left: 50%;
          top: auto;
          right: auto;
          transform: translateX(-50%) rotate(90deg);
        }
      }
    `;
    };
    const dotStyle = () => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      position: absolute;
      display: flex;
      flex-direction: ${dotsNavPosition === 'l' || dotsNavPosition === 'r' ? 'column' : 'row'};
      justify-content: center;
      align-items: center;
      overflow: visible;
      pointer-events: none;
      background: transparent;

      .dot {
        pointer-events: all;
        cursor: pointer;
        border: 1px solid var(--light-500);
        background: var(--light-100);
        width: ${(_a = dotsNav.size) !== null && _a !== void 0 ? _a : 8}px;
        height: ${(_b = dotsNav.size) !== null && _b !== void 0 ? _b : 8}px;

        &.active {
          border-color: var(--white);
          background: var(--primary-500);
          width: ${dotsNav.size > 0 ? dotsNav.size * 1.5 : 12}px;
          height: ${dotsNav.size > 0 ? dotsNav.size * 1.5 : 12}px;
        }

        &.disabled {
          cursor: default;
        }
      }

      &.snap-left {
        height: 100%;
        top: 0;
        left: ${(_c = dotsNav.offset) !== null && _c !== void 0 ? _c : 50}px;
        width: ${(_d = dotsNav.size) !== null && _d !== void 0 ? _d : 8}px;

        > div:not(:first-of-type) {
          margin-top: ${(_e = dotsNav.spacing) !== null && _e !== void 0 ? _e : 10}px;
        }
      }
      &.snap-right {
        height: 100%;
        top: 0;
        right: ${(_f = dotsNav.offset) !== null && _f !== void 0 ? _f : 50}px;
        width: ${(_g = dotsNav.size) !== null && _g !== void 0 ? _g : 8}px;

        > div:not(:first-of-type) {
          margin-top: ${(_h = dotsNav.spacing) !== null && _h !== void 0 ? _h : 10}px;
        }
      }
      &.snap-top {
        width: 100%;
        top: ${(_j = dotsNav.offset) !== null && _j !== void 0 ? _j : 50}px;
        height: ${(_k = dotsNav.size) !== null && _k !== void 0 ? _k : 8}px;

        > div:not(:first-of-type) {
          margin-left: ${(_l = dotsNav.spacing) !== null && _l !== void 0 ? _l : 10}px;
        }
      }
      &.snap-bottom {
        width: 100%;
        bottom: ${(_m = dotsNav.offset) !== null && _m !== void 0 ? _m : 50}px;
        height: ${(_o = dotsNav.size) !== null && _o !== void 0 ? _o : 8}px;

        > div:not(:first-of-type) {
          margin-left: ${(_p = dotsNav.spacing) !== null && _p !== void 0 ? _p : 10}px;
        }
      }
    `;
    };
    const createDot = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((index, isActive) => {
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { key: index, className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('dot rounded-circle', { active: isActive, disabled: numOfViews <= 1 }), onClick: isActive ? undefined : () => { onCurrentViewChange(index); } }));
    }, [onCurrentViewChange, numOfViews]);
    const previousView = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        const nextIndex = currentIndex > 0 ? currentIndex - 1 : numOfViews - 1;
        onCurrentViewChange(nextIndex);
    }, [currentIndex, numOfViews, onCurrentViewChange]);
    const nextView = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        const nextIndex = currentIndex < numOfViews - 1 ? currentIndex + 1 : 0;
        onCurrentViewChange(nextIndex);
    }, [currentIndex, numOfViews, onCurrentViewChange]);
    const hasPreviousView = numOfViews > 1 && currentIndex !== 0;
    const hasNextView = numOfViews > 1 && currentIndex !== numOfViews - 1;
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.Fragment, null,
        (arrowsNav === null || arrowsNav === void 0 ? void 0 : arrowsNav.visible) && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.Fragment, null,
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('arrows-nav first', {
                    vertical: arrowsNav.direction === 'v',
                    disabled: !hasPreviousView
                }), css: arrowStyle(), onClick: hasPreviousView ? previousView : null },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_icons_outlined_directional_left__WEBPACK_IMPORTED_MODULE_1__.LeftOutlined, { autoFlip: arrowsNav.direction !== 'v', size: (_b = arrowsNav.size) !== null && _b !== void 0 ? _b : 24 })),
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('arrows-nav second', {
                    vertical: arrowsNav.direction === 'v',
                    disabled: !hasNextView
                }), css: arrowStyle(), onClick: hasNextView ? nextView : null },
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_icons_outlined_directional_right__WEBPACK_IMPORTED_MODULE_2__.RightOutlined, { autoFlip: arrowsNav.direction !== 'v', size: (_c = arrowsNav.size) !== null && _c !== void 0 ? _c : 24 })))),
        (dotsNav === null || dotsNav === void 0 ? void 0 : dotsNav.visible) && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('dots-nav', {
                'snap-left': dotsNavPosition === 'l',
                'snap-top': dotsNavPosition === 't',
                'snap-right': dotsNavPosition === 'r',
                'snap-bottom': dotsNavPosition === 'b'
            }), css: dotStyle() }, dots.map((index) => createDot(index, index === currentIndex))))));
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/section-renderer-base.tsx":
/*!************************************************************!*\
  !*** ./jimu-layouts/lib/runtime/section-renderer-base.tsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SectionRendererBase: () => (/* binding */ SectionRendererBase)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./jimu-layouts/lib/types.ts");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _section_content__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./section-content */ "./jimu-layouts/lib/runtime/section-content.tsx");
/* harmony import */ var _section_nav__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./section-nav */ "./jimu-layouts/lib/runtime/section-nav.tsx");
/* harmony import */ var _section_auto_play__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./section-auto-play */ "./jimu-layouts/lib/runtime/section-auto-play.tsx");
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/** @jsx jsx */






function getStyle(forceAspectRatio, aspectRatio) {
    return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
    overflow: visible;
    position: relative;
    aspect-ratio: ${forceAspectRatio && aspectRatio > 0 ? aspectRatio : null};

    .section-content {
      position: relative;
      overflow: hidden;
      width: 100%;
      height: 100%;
      z-index: 0;
    }

    .section-view {
      position: absolute;
    }

    .hidden {
      display: none !important;
    }
  `;
}
function SectionRendererBase(props) {
    var _a;
    const { views, navInfo, activeView, animationPreview, playMode, transition, sectionId, autoPlay, focusable = true, interval = _types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_AUTOPLAY_INTERVAL, loop = true, className, sectionStyle, rotate, forceAspectRatio, aspectRatio, layoutEntryComponent, viewVisibilityContext } = props;
    const currentIndexRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const sectionRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const hasFocusRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef(false);
    const isSectionFocusedRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef(false);
    const blurEventHandlerRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef(null);
    const [interuptAutoplay, setInteruptAutoplay] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(false);
    const activeViewId = activeView === null || activeView === void 0 ? void 0 : activeView.id;
    const renderInfo = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        var _a;
        let visibleViews = views;
        let currentIndex;
        let previousIndex;
        let progress;
        if (navInfo) {
            visibleViews = (_a = navInfo.visibleViews) !== null && _a !== void 0 ? _a : views;
            if (navInfo.useProgress) {
                progress = navInfo.progress;
                const r = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getIndexFromProgress)(progress, visibleViews.length);
                currentIndex = r.currentIndex;
            }
            else {
                currentIndex = Math.max(0, visibleViews.indexOf(navInfo.currentViewId));
                if (navInfo.previousViewId) {
                    previousIndex = Math.max(0, visibleViews.indexOf(navInfo.previousViewId));
                }
                else {
                    previousIndex = Math.max(0, currentIndex - 1);
                }
            }
        }
        else {
            // TODO remove nav by activeView, use navInfo only
            currentIndex = Math.max(0, visibleViews.indexOf(activeViewId));
            previousIndex = currentIndex;
        }
        currentIndexRef.current = currentIndex;
        return { currentIndex, previousIndex, progress };
    }, [activeViewId, navInfo, views]);
    const _b = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        return jimu_ui__WEBPACK_IMPORTED_MODULE_2__.styleUtils.toCSSStyle(sectionStyle);
    }, [sectionStyle]), { transform } = _b, otherStyle = __rest(_b, ["transform"]);
    const rotateStyle = rotate > 0 || rotate < 0 ? `rotateZ(${rotate}deg)` : '';
    let mergedTransform = rotateStyle;
    if (transform) {
        mergedTransform = `${transform} ${rotateStyle}`;
    }
    const onMouseEnter = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        setInteruptAutoplay(true);
    }, []);
    const onMouseLeave = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback(() => {
        setInteruptAutoplay(false);
    }, []);
    const onFocus = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((e) => {
        hasFocusRef.current = true;
        isSectionFocusedRef.current = e.target === sectionRef.current;
        if (blurEventHandlerRef.current != null) {
            clearTimeout(blurEventHandlerRef.current);
            blurEventHandlerRef.current = null;
        }
        if (autoPlay) {
            setInteruptAutoplay(true);
        }
    }, [autoPlay]);
    const onBlur = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((e) => {
        hasFocusRef.current = false;
        if (blurEventHandlerRef.current != null) {
            clearTimeout(blurEventHandlerRef.current);
            blurEventHandlerRef.current = null;
        }
        if (autoPlay) {
            blurEventHandlerRef.current = setTimeout(() => {
                setInteruptAutoplay(false);
            }, 500);
        }
    }, [autoPlay]);
    const isAutoPlaying = autoPlay && !interuptAutoplay;
    (0,_section_auto_play__WEBPACK_IMPORTED_MODULE_5__.useAutoPlay)({
        sectionId,
        interval,
        loop,
        autoPlay: isAutoPlaying
    });
    const onCurrentViewChange = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useCallback((nextIndex) => {
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.jimuHistory.changeView(sectionId, views[nextIndex]);
    }, [sectionId, views]);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)(`section-layout layout-item-content w-100 ${(_a = sectionStyle === null || sectionStyle === void 0 ? void 0 : sectionStyle.boxShadow) === null || _a === void 0 ? void 0 : _a.presetStyle}`, className), css: getStyle(forceAspectRatio, aspectRatio), "data-sectionid": sectionId, style: Object.assign(Object.assign({}, otherStyle), { transform: mergedTransform }), onMouseEnter: autoPlay ? onMouseEnter : null, onMouseLeave: autoPlay ? onMouseLeave : null, onTouchStart: autoPlay ? onMouseEnter : null, onTouchEnd: autoPlay ? onMouseLeave : null, onFocus: onFocus, onBlur: onBlur, tabIndex: focusable ? 0 : undefined, ref: sectionRef },
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_section_content__WEBPACK_IMPORTED_MODULE_3__.SectionContent, { views: views, navInfo: navInfo, animationPreview: animationPreview, playMode: playMode, currentIndex: renderInfo.currentIndex, previousIndex: renderInfo.previousIndex, progress: renderInfo.progress, loop: isAutoPlaying && loop, viewTransition: transition, layoutEntryComponent: layoutEntryComponent, viewVisibilityContext: viewVisibilityContext }),
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(_section_nav__WEBPACK_IMPORTED_MODULE_4__.SectionNav, { sectionId: sectionId, numOfViews: views.length, currentIndex: renderInfo.currentIndex, onCurrentViewChange: onCurrentViewChange })));
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/section-renderer.tsx":
/*!*******************************************************!*\
  !*** ./jimu-layouts/lib/runtime/section-renderer.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SectionRenderer: () => (/* binding */ SectionRenderer)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _layout_entry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layout-entry */ "./jimu-layouts/lib/runtime/layout-entry.tsx");
/* harmony import */ var _section_renderer_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./section-renderer-base */ "./jimu-layouts/lib/runtime/section-renderer-base.tsx");
/* harmony import */ var _builder_page_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");




class SectionRenderer extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    render() {
        return (jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(_section_renderer_base__WEBPACK_IMPORTED_MODULE_2__.SectionRendererBase, Object.assign({}, this.props, { layoutEntryComponent: _layout_entry__WEBPACK_IMPORTED_MODULE_1__["default"], viewVisibilityContext: _builder_page_context__WEBPACK_IMPORTED_MODULE_3__.ViewVisibilityContext })));
    }
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/view-content.tsx":
/*!***************************************************!*\
  !*** ./jimu-layouts/lib/runtime/view-content.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ViewContent: () => (/* binding */ ViewContent)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var jimu_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jimu-theme */ "jimu-theme");
/** @jsx jsx */

// import { ViewVisibilityContext } from '../builder/page-context';


function getBackgroundStyle(view, bgColor) {
    if (!view) {
        return null;
    }
    let backgroundImage = {};
    if (view.backgroundIMage) {
        backgroundImage = typeof view.backgroundIMage === 'string' ? {} : view.backgroundIMage;
    }
    const fillType = view.backgroundPosition ? jimu_ui__WEBPACK_IMPORTED_MODULE_1__.FillType[view.backgroundPosition.toUpperCase()] : jimu_ui__WEBPACK_IMPORTED_MODULE_1__.FillType.FILL;
    let color;
    // for back compatible
    if (view.backgroundColor == null) {
        color = bgColor;
    }
    else if (view.backgroundColor === '') {
        color = 'transparent';
    }
    else {
        color = view.backgroundColor ? view.backgroundColor : '';
    }
    const backgroundConfig = {
        color,
        fillType: fillType,
        image: backgroundImage
    };
    return jimu_ui__WEBPACK_IMPORTED_MODULE_1__.styleUtils.toBackgroundStyle(backgroundConfig);
}
function ViewContent(props) {
    var _a, _b;
    const { viewId, isActive, layoutEntryComponent, viewVisibilityContext } = props;
    const view = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.useSelector((state) => {
        var _a, _b;
        return (_b = (_a = state.appConfig) === null || _a === void 0 ? void 0 : _a.views) === null || _b === void 0 ? void 0 : _b[viewId];
    });
    const bgColor = (_b = (_a = (0,jimu_theme__WEBPACK_IMPORTED_MODULE_2__.useTheme)()) === null || _a === void 0 ? void 0 : _a.body) === null || _b === void 0 ? void 0 : _b.bg;
    const LayoutEntry = layoutEntryComponent;
    const ViewVisibilityContext = viewVisibilityContext;
    const [started, setStarted] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(false);
    const viewVisibility = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useMemo(() => {
        return { isInView: true, isInCurrentView: isActive };
    }, [isActive]);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if (isActive && view.lazyLoad && !started) {
            setStarted(true);
        }
    }, [isActive, view.lazyLoad, started]);
    return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('w-100 h-100 d-flex section-view', {
            [jimu_ui__WEBPACK_IMPORTED_MODULE_1__.FOCUSABLE_CONTAINER_CLASS]: isActive
        }), style: getBackgroundStyle(view, bgColor), css: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `&, .exb-drop-area { pointer-events: ${isActive ? 'auto' : 'none'}; }`, key: viewId, id: `${view.parent}_${view.id}` }, (started || !view.lazyLoad) && ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.ErrorBoundary, null,
        (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(ViewVisibilityContext.Provider, { value: viewVisibility },
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(LayoutEntry, { layouts: view === null || view === void 0 ? void 0 : view.layout, isInSection: true, className: 'w-100' }))))));
}


/***/ }),

/***/ "./jimu-layouts/lib/runtime/widget-renderer.tsx":
/*!******************************************************!*\
  !*** ./jimu-layouts/lib/runtime/widget-renderer.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WidgetRenderer: () => (/* binding */ WidgetRenderer)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/** @jsx jsx */



class _WidgetRenderer extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.PureComponent {
    constructor(props) {
        super(props);
        this.onMouseDown = this.onMouseDown.bind(this);
        this.ref = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createRef();
        this.state = { error: null };
    }
    loadWidgetClass() {
        const { widgetId, isClassLoaded } = this.props;
        if (widgetId && !isClassLoaded) {
            jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetManager.getInstance().loadWidgetClass(widgetId).catch(err => {
                console.log(err);
                this.setState({
                    error: jimu_core__WEBPACK_IMPORTED_MODULE_0__.i18n.getIntl().formatMessage({ id: 'widgetLoadError' })
                });
            });
        }
    }
    componentDidMount() {
        this.loadWidgetClass();
    }
    componentDidUpdate() {
        this.loadWidgetClass();
    }
    /**
     * Must add an extra div to keep the aspect ratio.
     * https://www.w3schools.com/howto/howto_css_aspect_ratio.asp
     */
    renderWidgetContent() {
        const { widgetId, layoutId, layoutItemId, autoWidth, autoHeight, onInitResizeHandler, onInitDragHandler } = this.props;
        let WidgetClass;
        if (widgetId) {
            WidgetClass = jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetManager.getInstance().getWidgetClass(widgetId);
        }
        if (this.state.error) {
            return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: 'widget-content' }, this.state.error);
        }
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)('widget-content', { 'd-none': !widgetId }) }, WidgetClass && (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(jimu_core__WEBPACK_IMPORTED_MODULE_0__.ErrorBoundary, null,
            (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)(WidgetClass, { widgetId: widgetId, layoutId: layoutId, layoutItemId: layoutItemId, autoWidth: autoWidth, autoHeight: autoHeight, onInitResizeHandler: onInitResizeHandler, onInitDragHandler: onInitDragHandler }))));
    }
    getStyle() {
        const { forceAspectRatio, aspectRatio } = this.props;
        // for app-loader widget only, usable in touch device
        const overflowScrollingStyle = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      -webkit-overflow-scrolling: touch;
    `;
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.css) `
      ${this.props.widgetId === 'app-loader' ? overflowScrollingStyle : ''};
      overflow: ${this.props.canCrossLayoutBoundary ? 'visible' : 'hidden'};
      position: relative;
      aspect-ratio: ${forceAspectRatio && aspectRatio > 0 ? aspectRatio : null};

      .widget-content {
        position: relative;
        height: 100%;
        width: 100%;
        z-index: 0;
      }
    `;
    }
    onMouseDown() {
        var _a;
        // doesn't need to activate placeholder
        if (this.props.widgetId) {
            const state = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState();
            if (((_a = state.widgetsRuntimeInfo[this.props.widgetId]) === null || _a === void 0 ? void 0 : _a.state) !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetState.Active) {
                (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().dispatch(jimu_core__WEBPACK_IMPORTED_MODULE_0__.appActions.activateWidget(this.props.widgetId));
            }
        }
    }
    render() {
        var _a, _b;
        const { className, widgetStyle, widgetId, rotate } = this.props;
        const _c = jimu_ui__WEBPACK_IMPORTED_MODULE_2__.styleUtils.toCSSStyle(widgetStyle), { transform } = _c, otherStyle = __rest(_c, ["transform"]);
        const rotateStyle = rotate > 0 || rotate < 0 ? `rotateZ(${rotate}deg)` : '';
        let mergedTransform = rotateStyle;
        if (transform) {
            mergedTransform = `${transform} ${rotateStyle}`;
        }
        return ((0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { className: (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.classNames)(`widget-renderer layout-item-content w-100 ${(_b = (_a = widgetStyle === null || widgetStyle === void 0 ? void 0 : widgetStyle.boxShadow) === null || _a === void 0 ? void 0 : _a.presetStyle) !== null && _b !== void 0 ? _b : ''}`, className), css: this.getStyle(), style: Object.assign(Object.assign({}, otherStyle), { transform: mergedTransform }), onMouseDownCapture: this.onMouseDown, "data-widgetid": widgetId, ref: this.ref },
            this.renderWidgetContent(),
            this.props.children));
    }
}
const WidgetRenderer = jimu_core__WEBPACK_IMPORTED_MODULE_0__.ReactRedux.connect(_utils__WEBPACK_IMPORTED_MODULE_1__.mapStateToWidgetProps)(_WidgetRenderer);


/***/ }),

/***/ "./jimu-layouts/lib/search/contents.ts":
/*!*********************************************!*\
  !*** ./jimu-layouts/lib/search/contents.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkIsLayoutInfoInWidget: () => (/* binding */ checkIsLayoutInfoInWidget),
/* harmony export */   findLayoutId: () => (/* binding */ findLayoutId),
/* harmony export */   findLayoutItem: () => (/* binding */ findLayoutItem),
/* harmony export */   findParentLayoutInfo: () => (/* binding */ findParentLayoutInfo),
/* harmony export */   getBlockAnchorPointsInPage: () => (/* binding */ getBlockAnchorPointsInPage),
/* harmony export */   getBrowserSizeModeByLayoutId: () => (/* binding */ getBrowserSizeModeByLayoutId),
/* harmony export */   getBrowserSizeModeByLayoutIdAndWidgetId: () => (/* binding */ getBrowserSizeModeByLayoutIdAndWidgetId),
/* harmony export */   getChildrenContents: () => (/* binding */ getChildrenContents),
/* harmony export */   getContentContainerInfo: () => (/* binding */ getContentContainerInfo),
/* harmony export */   getContentIdInLayoutItem: () => (/* binding */ getContentIdInLayoutItem),
/* harmony export */   getContentLayoutInfosInOneSizeMode: () => (/* binding */ getContentLayoutInfosInOneSizeMode),
/* harmony export */   getContentLayoutItem: () => (/* binding */ getContentLayoutItem),
/* harmony export */   getContentRootContainerInfo: () => (/* binding */ getContentRootContainerInfo),
/* harmony export */   getContentsInContainer: () => (/* binding */ getContentsInContainer),
/* harmony export */   getContentsInContainerRecursive: () => (/* binding */ getContentsInContainerRecursive),
/* harmony export */   getContentsInContainerRecursiveAdv: () => (/* binding */ getContentsInContainerRecursiveAdv),
/* harmony export */   getContentsInLayout: () => (/* binding */ getContentsInLayout),
/* harmony export */   getContentsInLayoutRecursive: () => (/* binding */ getContentsInLayoutRecursive),
/* harmony export */   getContentsInLayoutWithRecrusiveLayouts: () => (/* binding */ getContentsInLayoutWithRecrusiveLayouts),
/* harmony export */   getContentsInTheSameContainer: () => (/* binding */ getContentsInTheSameContainer),
/* harmony export */   getContentsInTheSameRootContainer: () => (/* binding */ getContentsInTheSameRootContainer),
/* harmony export */   getLayoutInfoHoldContent: () => (/* binding */ getLayoutInfoHoldContent),
/* harmony export */   getLayoutInfosByType: () => (/* binding */ getLayoutInfosByType),
/* harmony export */   getLayoutInfosHoldcontent: () => (/* binding */ getLayoutInfosHoldcontent),
/* harmony export */   getLayoutItemIds: () => (/* binding */ getLayoutItemIds),
/* harmony export */   getMapWidgets: () => (/* binding */ getMapWidgets),
/* harmony export */   getParentWidgetIdOfContent: () => (/* binding */ getParentWidgetIdOfContent),
/* harmony export */   getRelatedLayoutInfosInWidgetByLayoutInfo: () => (/* binding */ getRelatedLayoutInfosInWidgetByLayoutInfo),
/* harmony export */   getRelatedLayoutItemsInWidgetByLayoutInfo: () => (/* binding */ getRelatedLayoutItemsInWidgetByLayoutInfo),
/* harmony export */   getRootContainerInfoOfLayout: () => (/* binding */ getRootContainerInfoOfLayout),
/* harmony export */   getScreenAnchorPointsInPage: () => (/* binding */ getScreenAnchorPointsInPage),
/* harmony export */   getWidgetIdThatUseTheLayoutId: () => (/* binding */ getWidgetIdThatUseTheLayoutId)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

function findLayoutItem(appConfig, layoutInfo) {
    var _a, _b, _c;
    if (!layoutInfo) {
        return null;
    }
    const { layoutId, layoutItemId } = layoutInfo;
    return (_c = (_b = (_a = appConfig.layouts) === null || _a === void 0 ? void 0 : _a[layoutId]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c[layoutItemId];
}
/**
 * Find parent layout item in current page.
 * @param layoutInfo
 */
function findParentLayoutInfo(layoutInfo, appConfig, browserSizeMode) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
    const { layoutId } = layoutInfo;
    const layout = appConfig.layouts[layoutId];
    switch ((_a = layout === null || layout === void 0 ? void 0 : layout.parent) === null || _a === void 0 ? void 0 : _a.type) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.View:
            {
                const viewJson = appConfig.views[layout.parent.id];
                const sectionJson = appConfig.sections[viewJson.parent];
                if (((_c = (_b = sectionJson === null || sectionJson === void 0 ? void 0 : sectionJson.parent) === null || _b === void 0 ? void 0 : _b[browserSizeMode]) === null || _c === void 0 ? void 0 : _c.length) === 1) {
                    return sectionJson.parent[browserSizeMode][0];
                }
                if (((_e = (_d = sectionJson === null || sectionJson === void 0 ? void 0 : sectionJson.parent) === null || _d === void 0 ? void 0 : _d[browserSizeMode]) === null || _e === void 0 ? void 0 : _e.length) > 1) {
                    return findParentLayoutInfo(sectionJson.parent[browserSizeMode][0], appConfig, browserSizeMode);
                }
                return null;
            }
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Widget:
            {
                const widgetJson = appConfig.widgets[layout.parent.id];
                if (((_g = (_f = widgetJson === null || widgetJson === void 0 ? void 0 : widgetJson.parent) === null || _f === void 0 ? void 0 : _f[browserSizeMode]) === null || _g === void 0 ? void 0 : _g.length) === 1) {
                    return widgetJson.parent[browserSizeMode][0];
                }
                if (((_j = (_h = widgetJson === null || widgetJson === void 0 ? void 0 : widgetJson.parent) === null || _h === void 0 ? void 0 : _h[browserSizeMode]) === null || _j === void 0 ? void 0 : _j.length) > 1) {
                    return findParentLayoutInfo(widgetJson.parent[browserSizeMode][0], appConfig, browserSizeMode);
                }
                return null;
            }
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Screen:
            {
                const screenJson = appConfig.screens[layout.parent.id];
                const sgJson = appConfig.screenGroups[screenJson.parent];
                return (_k = sgJson.parent) === null || _k === void 0 ? void 0 : _k[browserSizeMode];
            }
        default:
            return null;
    }
}
function getContentIdInLayoutItem(item) {
    switch (item.type) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget:
            return typeof (item.widgetId) === 'string' ? item.widgetId : null;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section:
            return typeof (item.sectionId) === 'string' ? item.sectionId : null;
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup:
            return typeof (item.screenGroupId) === 'string' ? item.screenGroupId : null;
        default:
            return null;
    }
}
/**
 * return the content ids in the layout. Do not consider the embedded layouts
 * @param layoutJson
 */
function getContentsInLayout(layoutJson, type, withPending = false) {
    if (!(layoutJson === null || layoutJson === void 0 ? void 0 : layoutJson.content)) {
        return [];
    }
    return Object.keys(layoutJson.content)
        .filter(itemId => layoutJson.content[itemId].type === type &&
        !!getContentIdInLayoutItem(layoutJson.content[itemId]) &&
        (withPending || !layoutJson.content[itemId].isPending))
        .map(itemId => getContentIdInLayoutItem(layoutJson.content[itemId]));
}
/**
 * Return the content ids in a layout, search the whole layout tree, including the layout widget, the normal widget that has embed layout, and views, screens, etc.
 * @param appConfig
 * @param layoutId the layout to search
 * @param type content type
 * @param sizeMode the sizeMode to search
 * @param withPending will include the pending content if true
 */
function getContentsInLayoutRecursive(appConfig, layoutId, type, sizeMode, withPending = false) {
    let ret = [];
    const widgetIds = getContentsInLayout(appConfig.layouts[layoutId], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, withPending);
    const sectionIds = getContentsInLayout(appConfig.layouts[layoutId], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section, withPending);
    const screenGroupIds = getContentsInLayout(appConfig.layouts[layoutId], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup, withPending);
    if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
        ret = ret.concat(widgetIds);
    }
    else if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section) {
        ret = ret.concat(sectionIds);
    }
    else if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup) {
        ret = ret.concat(screenGroupIds);
    }
    const hasLayoutWidgetIds = widgetIds.filter(widgetId => {
        var _a, _b, _c, _d, _e;
        return ((_b = (_a = appConfig.widgets[widgetId]) === null || _a === void 0 ? void 0 : _a.manifest) === null || _b === void 0 ? void 0 : _b.widgetType) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetType.Layout ||
            ((_e = (_d = (_c = appConfig.widgets[widgetId]) === null || _c === void 0 ? void 0 : _c.manifest) === null || _d === void 0 ? void 0 : _d.properties) === null || _e === void 0 ? void 0 : _e.hasEmbeddedLayout);
    });
    hasLayoutWidgetIds.forEach(hasLayoutWidgetId => {
        var _a;
        Object.keys((_a = appConfig.widgets[hasLayoutWidgetId].layouts) !== null && _a !== void 0 ? _a : {}).forEach(layoutKey => {
            const layoutId = findLayoutId(appConfig.widgets[hasLayoutWidgetId].layouts[layoutKey], sizeMode, appConfig.mainSizeMode);
            ret = ret.concat(getContentsInLayoutRecursive(appConfig, layoutId, type, sizeMode, withPending));
        });
    });
    sectionIds.forEach(sectionId => {
        var _a, _b;
        (_b = (_a = appConfig.sections) === null || _a === void 0 ? void 0 : _a[sectionId]) === null || _b === void 0 ? void 0 : _b.views.forEach(viewId => {
            const layoutId = findLayoutId(appConfig.views[viewId].layout, sizeMode, appConfig.mainSizeMode);
            if (appConfig.views[viewId] && layoutId) {
                ret = ret.concat(getContentsInLayoutRecursive(appConfig, layoutId, type, sizeMode, withPending));
            }
        });
    });
    screenGroupIds.forEach(screenGroupId => {
        var _a, _b;
        (_b = (_a = appConfig.screenGroups) === null || _a === void 0 ? void 0 : _a[screenGroupId]) === null || _b === void 0 ? void 0 : _b.screens.forEach(screenId => {
            var _a, _b, _c, _d, _e;
            const mainLayoutId = findLayoutId((_b = (_a = appConfig.screens) === null || _a === void 0 ? void 0 : _a[screenId]) === null || _b === void 0 ? void 0 : _b.main.layout, sizeMode, appConfig.mainSizeMode);
            if (mainLayoutId) {
                ret = ret.concat(getContentsInLayoutRecursive(appConfig, mainLayoutId, type, sizeMode, withPending));
            }
            const panelLayoutId = findLayoutId((_e = (_d = (_c = appConfig.screens) === null || _c === void 0 ? void 0 : _c[screenId]) === null || _d === void 0 ? void 0 : _d.panel) === null || _e === void 0 ? void 0 : _e.layout, sizeMode, appConfig.mainSizeMode);
            if (panelLayoutId) {
                ret = ret.concat(getContentsInLayoutRecursive(appConfig, panelLayoutId, type, sizeMode, withPending));
            }
        });
    });
    return ret;
}
/**
 * Return the content ids in a layout, search the widgets with layout but don't search nested containers.
 * @param appConfig
 * @param layoutId
 * @param type
 */
function getContentsInLayoutWithRecrusiveLayouts(appConfig, layoutId, type, sizeMode, withPending = false) {
    let ret = [];
    // No need to deal with screen group as it cannot be placed in a layout widget
    const widgetIds = getContentsInLayout(appConfig.layouts[layoutId], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, withPending);
    const sectionIds = getContentsInLayout(appConfig.layouts[layoutId], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section, withPending);
    const sgIds = getContentsInLayout(appConfig.layouts[layoutId], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup, withPending);
    if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
        ret = ret.concat(widgetIds);
    }
    else if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup) {
        ret = ret.concat(sgIds);
    }
    else {
        ret = ret.concat(sectionIds);
    }
    const layoutWidgetIds = widgetIds.filter(widgetId => appConfig.widgets &&
        appConfig.widgets[widgetId] &&
        (appConfig.widgets[widgetId].manifest.widgetType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetType.Layout || appConfig.widgets[widgetId].manifest.properties.hasEmbeddedLayout));
    layoutWidgetIds.forEach(layoutWidgetId => {
        var _a;
        Object.keys((_a = appConfig.widgets[layoutWidgetId].layouts) !== null && _a !== void 0 ? _a : {}).forEach(layoutKey => {
            const layoutId = findLayoutId(appConfig.widgets[layoutWidgetId].layouts[layoutKey], sizeMode, appConfig.mainSizeMode);
            ret = ret.concat(getContentsInLayoutWithRecrusiveLayouts(appConfig, layoutId, type, sizeMode, withPending));
        });
    });
    return ret;
}
/**
 * Return the layout item that holds the content.
 * In one layout, a content is not allowed to be put in multiple items.
 * @param layoutJson
 * @param widgetId
 */
function getContentLayoutItem(layoutJson, id, type) {
    if (!(layoutJson === null || layoutJson === void 0 ? void 0 : layoutJson.content)) {
        return null;
    }
    const layoutItemId = Object.keys(layoutJson.content).find(itemId => layoutJson.content[itemId].type === type &&
        (layoutJson.content[itemId].widgetId === id || layoutJson.content[itemId].sectionId === id || layoutJson.content[itemId].screenGroupId === id) &&
        !layoutJson.content[itemId].isPending);
    return layoutJson.content[layoutItemId];
}
/**
 * Return the layout item ids in a layout
 * @param appConfig
 * @param layoutId
 * @param withPending
 */
function getLayoutItemIds(appConfig, layoutId, withPending = false) {
    const layout = appConfig.layouts[layoutId];
    if (layout === null || layout === void 0 ? void 0 : layout.content) {
        return withPending
            ? Object.keys(layout.content)
            : Object.keys(layout.content).filter(itemId => !layout.content[itemId].isPending);
    }
    return [];
}
function getLayoutInfosByType(layoutJson, type, withPending = false) {
    if (!(layoutJson === null || layoutJson === void 0 ? void 0 : layoutJson.content)) {
        return [];
    }
    return Object.keys(layoutJson.content)
        .filter(itemId => layoutJson.content[itemId].type === type &&
        !!getContentIdInLayoutItem(layoutJson.content[itemId]) &&
        (withPending || !layoutJson.content[itemId].isPending))
        .map(itemId => ({ layoutId: layoutJson.id, layoutItemId: itemId }));
}
/**
 * Find a widget id that use the layoutId
 * @param appConfig
 * @param layoutId
 */
function getWidgetIdThatUseTheLayoutId(appConfig, layoutId) {
    var _a;
    // eslint-disable-next-line
    const layoutJson = appConfig.layouts[layoutId];
    if (((_a = layoutJson === null || layoutJson === void 0 ? void 0 : layoutJson.parent) === null || _a === void 0 ? void 0 : _a.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Widget) {
        return layoutJson.parent.id;
    }
    return null;
}
/**
 * Return the container that holds the widget, search the widgets with layout but don't search the nested container.
 * @param appConfig
 * @param widgetId
 */
function getContentContainerInfo(appConfig, id, type, sizeMode, withPending = false) {
    var _a;
    const layoutInfo = getLayoutInfoHoldContent(appConfig, id, type, sizeMode, withPending);
    if (layoutInfo) {
        const layoutJson = appConfig.layouts[layoutInfo.layoutId];
        switch ((_a = layoutJson.parent) === null || _a === void 0 ? void 0 : _a.type) {
            case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Page:
                return { type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page, id: layoutJson.parent.id };
            case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Dialog:
                return { type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Dialog, id: layoutJson.parent.id };
            case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Header:
                return { type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Header, id: 'header' };
            case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Footer:
                return { type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Footer, id: 'footer' };
            case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.View:
                return { type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.View, id: layoutJson.parent.id };
            case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Screen:
                {
                    const screenJson = appConfig.screens[layoutJson.parent.id];
                    const mainPanelLayoutId = screenJson.main.layout[sizeMode];
                    return { type: mainPanelLayoutId === layoutInfo.layoutId ? jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.ScreenMain : jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.ScreenPanel, id: layoutJson.parent.id };
                }
            case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Widget:
                {
                    const widgetId = layoutJson.parent.id;
                    return getContentContainerInfo(appConfig, widgetId, type, sizeMode, withPending);
                }
        }
    }
    return null;
}
/**
 * Return the root container of the content, search the whole layout tree. There are 4 types of root container: page, window, header, footer.
 */
function getContentRootContainerInfo(appConfig, id, type, sizeMode, withPending = false) {
    let layoutInfo = getLayoutInfoHoldContent(appConfig, id, type, sizeMode, withPending);
    let useSizeMode = sizeMode;
    if (!layoutInfo) {
        // try to find from main size mode, since sizeMode layout may be tranformed automatically from main size mode
        layoutInfo = getLayoutInfoHoldContent(appConfig, id, type, appConfig.mainSizeMode, withPending);
        useSizeMode = appConfig.mainSizeMode;
    }
    if (layoutInfo) {
        return getRootContainerInfoOfLayout(appConfig, layoutInfo.layoutId, useSizeMode);
    }
}
function getRootContainerInfoOfLayout(appConfig, layoutId, sizeMode) {
    var _a;
    let layoutJson = appConfig.layouts[layoutId];
    while ((layoutJson === null || layoutJson === void 0 ? void 0 : layoutJson.parent) && [jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Screen, jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.View, jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Widget].includes(layoutJson.parent.type)) {
        const layoutInfo = findParentLayoutInfo({ layoutId }, appConfig, sizeMode);
        layoutId = layoutInfo === null || layoutInfo === void 0 ? void 0 : layoutInfo.layoutId;
        layoutJson = appConfig.layouts[layoutId];
    }
    switch ((_a = layoutJson === null || layoutJson === void 0 ? void 0 : layoutJson.parent) === null || _a === void 0 ? void 0 : _a.type) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Dialog:
            return { type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Dialog, id: layoutJson.parent.id };
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Page:
            return { type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page, id: layoutJson.parent.id };
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Header:
            return { type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Header, id: 'header' };
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Footer:
            return { type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Footer, id: 'footer' };
    }
}
/**
 * Get the contents in a container. Do not search the nested container.
 */
function getContentsInContainer(appConfig, containerInfo, type, browserSizeMode, withPending = false) {
    var _a, _b, _c, _d, _e, _f;
    let layoutId;
    switch (containerInfo.type) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page:
            layoutId = findLayoutId((_b = (_a = appConfig.pages) === null || _a === void 0 ? void 0 : _a[containerInfo.id]) === null || _b === void 0 ? void 0 : _b.layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutWithRecrusiveLayouts(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Header:
            layoutId = findLayoutId((_c = appConfig.header) === null || _c === void 0 ? void 0 : _c.layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutWithRecrusiveLayouts(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Footer:
            layoutId = findLayoutId((_d = appConfig.footer) === null || _d === void 0 ? void 0 : _d.layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutWithRecrusiveLayouts(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.View:
            layoutId = findLayoutId((_f = (_e = appConfig.views) === null || _e === void 0 ? void 0 : _e[containerInfo.id]) === null || _f === void 0 ? void 0 : _f.layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutWithRecrusiveLayouts(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Dialog:
            layoutId = findLayoutId(appConfig.dialogs[containerInfo.id].layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutWithRecrusiveLayouts(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.ScreenMain:
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.ScreenPanel:
            if (!appConfig.screens || !appConfig.screens[containerInfo.id]) {
                return [];
            }
            const mainLayoutId = findLayoutId(appConfig.screens[containerInfo.id].main.layout, browserSizeMode, appConfig.mainSizeMode);
            if (!mainLayoutId) {
                return [];
            }
            const mainContents = getContentsInLayoutWithRecrusiveLayouts(appConfig, mainLayoutId, type, browserSizeMode, withPending);
            if (appConfig.screens[containerInfo.id].panel) {
                const panelLayoutId = findLayoutId(appConfig.screens[containerInfo.id].panel.layout, browserSizeMode, appConfig.mainSizeMode);
                const panelContents = getContentsInLayoutWithRecrusiveLayouts(appConfig, panelLayoutId, type, browserSizeMode, withPending);
                return mainContents.concat(panelContents);
            }
            return mainContents;
    }
}
/**
 * Get the contents in a container. Search the whole layout tree.
 */
function getContentsInContainerRecursive(appConfig, containerInfo, type, browserSizeMode, withPending = false) {
    var _a, _b, _c, _d, _e, _f;
    let layoutId;
    switch (containerInfo.type) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page:
            layoutId = findLayoutId((_b = (_a = appConfig.pages) === null || _a === void 0 ? void 0 : _a[containerInfo.id]) === null || _b === void 0 ? void 0 : _b.layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutRecursive(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Header:
            layoutId = findLayoutId((_c = appConfig.header) === null || _c === void 0 ? void 0 : _c.layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutRecursive(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Footer:
            layoutId = findLayoutId((_d = appConfig.footer) === null || _d === void 0 ? void 0 : _d.layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutRecursive(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.View:
            layoutId = findLayoutId((_f = (_e = appConfig.views) === null || _e === void 0 ? void 0 : _e[containerInfo.id]) === null || _f === void 0 ? void 0 : _f.layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutRecursive(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Dialog:
            layoutId = findLayoutId(appConfig.dialogs[containerInfo.id].layout, browserSizeMode, appConfig.mainSizeMode);
            return layoutId ? getContentsInLayoutRecursive(appConfig, layoutId, type, browserSizeMode, withPending) : [];
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.ScreenMain:
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.ScreenPanel:
            if (!appConfig.screens || !appConfig.screens[containerInfo.id]) {
                return [];
            }
            const mainLayoutId = findLayoutId(appConfig.screens[containerInfo.id].main.layout, browserSizeMode, appConfig.mainSizeMode);
            if (!mainLayoutId) {
                return [];
            }
            const mainContents = getContentsInLayoutRecursive(appConfig, mainLayoutId, type, browserSizeMode);
            if (appConfig.screens[containerInfo.id].panel) {
                const panelLayoutId = findLayoutId(appConfig.screens[containerInfo.id].panel.layout, browserSizeMode, appConfig.mainSizeMode);
                const panelContents = getContentsInLayoutRecursive(appConfig, panelLayoutId, type, browserSizeMode);
                return mainContents.concat(panelContents);
            }
            return mainContents;
    }
}
/**
 * Get the contents in a container with more options, search the whole layout tree.
 *
 * header, footer and the current page body are considered as one container.
 *
 * @param options
 *    the currentPageId will be used if the container is header/footer.
 */
function getContentsInContainerRecursiveAdv(appConfig, containerInfo, type, browserSizeMode, options) {
    const getContentsInOneContainer = (_containerInfo) => {
        let ids = [];
        if (options.includeOtherSizeMode) {
            ids = ids.concat(getContentsInContainerRecursive(appConfig, _containerInfo, type, jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Large, options.includePending), getContentsInContainerRecursive(appConfig, _containerInfo, type, jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Medium, options.includePending), getContentsInContainerRecursive(appConfig, _containerInfo, type, jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode.Small, options.includePending));
        }
        else {
            ids = getContentsInContainerRecursive(appConfig, _containerInfo, type, browserSizeMode, options.includePending);
        }
        ids = Array.from(new Set(ids));
        return ids;
    };
    if (containerInfo.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Dialog) {
        return getContentsInOneContainer(containerInfo);
    }
    if (containerInfo.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page) {
        const pageJson = appConfig.pages[containerInfo.id];
        let ids = getContentsInOneContainer(containerInfo);
        if (pageJson.header) {
            ids = ids.concat(getContentsInOneContainer({ type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Header, id: 'header' }));
        }
        if (pageJson.footer) {
            ids = ids.concat(getContentsInOneContainer({ type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Footer, id: 'footer' }));
        }
        ids = Array.from(new Set(ids));
        return ids;
    }
    if (containerInfo.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Header) {
        const pageJson = appConfig.pages[options.currentPageId];
        let ids = getContentsInOneContainer(containerInfo).concat(getContentsInOneContainer({ type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page, id: options.currentPageId }));
        if (pageJson === null || pageJson === void 0 ? void 0 : pageJson.footer) {
            ids = ids.concat(getContentsInOneContainer({ type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Footer, id: 'footer' }));
        }
        ids = Array.from(new Set(ids));
        return ids;
    }
    if (containerInfo.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Footer) {
        const pageJson = appConfig.pages[options.currentPageId];
        let ids = getContentsInOneContainer(containerInfo).concat(getContentsInOneContainer({ type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page, id: options.currentPageId }));
        if (pageJson === null || pageJson === void 0 ? void 0 : pageJson.header) {
            ids = ids.concat(getContentsInOneContainer({ type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Header, id: 'header' }));
        }
        ids = Array.from(new Set(ids));
        return ids;
    }
}
/**
 * Return the layoutId for specific sizeMode. If the sizeMode does not exist, return the main sizeMode layoutId.
 * @param layouts
 * @param browserSizeMode
 * @param mainSizeMode
 */
function findLayoutId(layouts, browserSizeMode, mainSizeMode) {
    if (!layouts) {
        return null;
    }
    return layouts[browserSizeMode] || layouts[mainSizeMode];
}
/**
 * If the content has only one parent, return it directly.
 * If the content has multiple parents, these parents must be contained in a widget's layout, return the widget's parent.
 * @param appConfig
 * @param id
 * @param type
 * @param sizeMode
 * @param withPending
 * @returns
 */
function getLayoutInfoHoldContent(appConfig, id, type, sizeMode, withPending = true) {
    var _a, _b, _c, _d, _e;
    switch (type) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup:
            {
                const sg = appConfig.screenGroups[id];
                const layoutInfo = (_a = sg.parent) === null || _a === void 0 ? void 0 : _a[sizeMode];
                const layoutItem = findLayoutItem(appConfig, layoutInfo);
                return withPending || !(layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.isPending) ? layoutInfo : null;
            }
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section:
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget:
            {
                let content;
                if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
                    content = appConfig.widgets[id];
                }
                if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section) {
                    content = appConfig.sections[id];
                }
                if (((_c = (_b = content === null || content === void 0 ? void 0 : content.parent) === null || _b === void 0 ? void 0 : _b[sizeMode]) === null || _c === void 0 ? void 0 : _c.length) === 1) {
                    const layoutInfo = content.parent[sizeMode][0];
                    const layoutItem = findLayoutItem(appConfig, layoutInfo);
                    return withPending || !(layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.isPending) ? layoutInfo : null;
                }
                if (((_e = (_d = content === null || content === void 0 ? void 0 : content.parent) === null || _d === void 0 ? void 0 : _d[sizeMode]) === null || _e === void 0 ? void 0 : _e.length) > 1) {
                    // find grand parnet
                    const layoutInfo = content.parent[sizeMode][0];
                    const parentLayoutJson = appConfig.layouts[layoutInfo.layoutId];
                    if (parentLayoutJson === null || parentLayoutJson === void 0 ? void 0 : parentLayoutJson.parent) {
                        return getLayoutInfoHoldContent(appConfig, parentLayoutJson.parent.id, jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, sizeMode, withPending);
                    }
                }
            }
    }
    return null;
}
/**
 * In one layout, one widget/section is NOT allowed be put in more than one layout item.
 * However, in widget that has layouts, one widget/section may be put in multiple layouts.
 *
 * if `sizeMode` is passed in, return the items in the size mode only, else return all items
 * @param appConfig
 * @param type
 * @param id
 * @param sizeMode
 */
function getLayoutInfosHoldcontent(appConfig, type, id, sizeMode) {
    switch (type) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup:
            {
                const sg = appConfig.screenGroups[id];
                if (sg.parent) {
                    if (sizeMode) {
                        return [sg.parent[sizeMode]];
                    }
                    return Object.values(sg.parent);
                }
            }
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section:
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget:
            {
                let content;
                if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
                    content = appConfig.widgets[id];
                }
                if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section) {
                    content = appConfig.sections[id];
                }
                if (content === null || content === void 0 ? void 0 : content.parent) { // placeholder has no content
                    if (sizeMode) {
                        return content.parent[sizeMode];
                    }
                    const result = [];
                    Object.values(content.parent).forEach((layoutInfos) => {
                        result.push(...layoutInfos);
                    });
                    return result;
                }
            }
    }
    return [];
}
/**
 * Find a widget id (parent widget id) that the widget layout contains the widgetId/sectionId.
 * Return the direct parent only.
 * @param appConfig
 * @param id the widget/section id
 * @param type
 * @param sizeMode
 */
function getParentWidgetIdOfContent(appConfig, id, type, sizeMode) {
    var _a, _b, _c, _d, _e, _f, _g;
    let parentLayoutId;
    if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
        const widgetJson = appConfig.widgets[id];
        parentLayoutId = (_c = (_b = (_a = widgetJson === null || widgetJson === void 0 ? void 0 : widgetJson.parent) === null || _a === void 0 ? void 0 : _a[sizeMode]) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.layoutId;
    }
    if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section) {
        const sectionJson = appConfig.sections[id];
        parentLayoutId = (_f = (_e = (_d = sectionJson === null || sectionJson === void 0 ? void 0 : sectionJson.parent) === null || _d === void 0 ? void 0 : _d[sizeMode]) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.layoutId;
    }
    if (parentLayoutId) {
        const layoutJson = appConfig.layouts[parentLayoutId];
        if (((_g = layoutJson === null || layoutJson === void 0 ? void 0 : layoutJson.parent) === null || _g === void 0 ? void 0 : _g.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Widget) {
            return layoutJson.parent.id;
        }
    }
    return null;
}
/**
 * Get children widgets/sections in a widget, find one level only. Includes all size mode
 * @param appConfig
 * @param parentWidgetId
 * @param type
 */
function getChildrenContents(appConfig, parentWidgetId, type, withPending) {
    const parentWidgetJson = appConfig.widgets[parentWidgetId];
    if (!parentWidgetJson.layouts) {
        return [];
    }
    let ret = [];
    Object.keys(parentWidgetJson.layouts).forEach(layoutName => {
        Object.keys(parentWidgetJson.layouts[layoutName]).forEach(sizeMode => {
            const layoutJson = appConfig.layouts[parentWidgetJson.layouts[layoutName][sizeMode]];
            ret = ret.concat(getContentsInLayout(layoutJson, type, withPending));
        });
    });
    // remove duplicates
    return Array.from(new Set(ret));
}
/**
 * Return the layoutInfo for the widget/section, there may be multiple layoutInfos for the widget/section.
 *
 * One widget/section is allowed to be put in one layout only one time, but it's allowed be put in multiple layouts.
 * There are 2 cases for multiple layouts:
 *    * One widget/section is allowed to be put in multiple size mode (this function is for one size mode only, so we don't consider this case)
 *    * In one size mode, one widget (i.e. List widget) may have multiple state layouts to hold the same widget.
 * @param appConfig
 * @param contentId
 * @param type
 */
function getContentLayoutInfosInOneSizeMode(appConfig, contentId, type, sizeMode) {
    var _a, _b, _c;
    switch (type) {
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup:
            {
                const sg = appConfig.screenGroups[contentId];
                if ((_a = sg.parent) === null || _a === void 0 ? void 0 : _a[sizeMode]) {
                    return [sg.parent[sizeMode]];
                }
            }
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section:
        case jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget:
            {
                let content;
                if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
                    content = appConfig.widgets[contentId];
                }
                if (type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section) {
                    content = appConfig.sections[contentId];
                }
                if (((_c = (_b = content === null || content === void 0 ? void 0 : content.parent) === null || _b === void 0 ? void 0 : _b[sizeMode]) === null || _c === void 0 ? void 0 : _c.length) > 0) {
                    return content.parent[sizeMode];
                }
            }
    }
    return [];
}
/**
 * Return the size mode of the layout. Because under one size mode, only widget may have multiple layouts,
 * and this function is used only for widgets that have layouts, so pass widget id to make the search easy.
 * @param appConfig
 * @param layoutId
 * @param widgetId
 */
function getBrowserSizeModeByLayoutIdAndWidgetId(appConfig, layoutId, widgetId) {
    const widgetJson = appConfig.widgets[widgetId];
    if (!widgetJson)
        return undefined;
    let sizeMode;
    // eslint-disable-next-line
    Object.keys(widgetJson.layouts).find(name => {
        // eslint-disable-next-line
        const res = Object.keys(widgetJson.layouts[name]).find(device => {
            if (widgetJson.layouts[name][device] === layoutId) {
                sizeMode = device;
                return true;
            }
        });
        if (res) {
            return true;
        }
    });
    return sizeMode;
}
/**
 * Get the size mode that the layout belongs to
 */
function getBrowserSizeModeByLayoutId(appConfig, layoutId) {
    return jimu_core__WEBPACK_IMPORTED_MODULE_0__.appConfigUtils.getSizeModeOfALayout(appConfig, layoutId);
}
/**
 * Find all layoutInfos that the content id, section or widget, is equal to each other in the widget on the browserSizeMode
 *
 * @param appConfig
 * @param layoutInfo
 * @param parentWidgetId
 * @param sizeMode
 */
function getRelatedLayoutInfosInWidgetByLayoutInfo(appConfig, layoutInfo, parentWidgetId, sizeMode) {
    const parentWidget = appConfig.widgets[parentWidgetId];
    if (!parentWidget)
        return [];
    const layoutItem = appConfig.layouts[layoutInfo.layoutId] &&
        appConfig.layouts[layoutInfo.layoutId].content &&
        appConfig.layouts[layoutInfo.layoutId].content[layoutInfo.layoutItemId];
    if (!layoutItem)
        return [];
    const contentType = layoutItem.type;
    let contentId;
    // No need to deal with screen group as it cannot be placed in a layout widget
    if (contentType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section) {
        contentId = layoutItem.sectionId;
    }
    else if (contentType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
        contentId = layoutItem.widgetId;
    }
    // widgetId may be undefined for placeholder
    if (!contentId) {
        if (checkIsLayoutInfoInWidget(appConfig, parentWidgetId, layoutInfo)) {
            return [layoutInfo];
        }
        else {
            return [];
        }
    }
    return getContentLayoutInfosInWidget(appConfig, contentId, contentType, parentWidgetId, sizeMode);
}
/**
 * Same as `getRelatedLayoutInfosInWidgetByLayoutInfo`, but return the layout items
 * @param appConfig
 * @param layoutInfo
 * @param parentWId
 * @param browserSizeMode
 */
function getRelatedLayoutItemsInWidgetByLayoutInfo(appConfig, layoutInfo, parentWId, browserSizeMode) {
    return getRelatedLayoutInfosInWidgetByLayoutInfo(appConfig, layoutInfo, parentWId, browserSizeMode).map(layoutInfo => appConfig.layouts[layoutInfo.layoutId][layoutInfo.layoutItemId]);
}
/**
 * Find layout infos in a widget that holds the specific widget or section.
 * @param appConfig
 * @param id The widget or section id to be searched
 * @param type
 * @param parentWidgetId The container widget
 * @param browserSizeMode
 */
function getContentLayoutInfosInWidget(appConfig, id, type, parentWidgetId, browserSizeMode) {
    const parentWidget = appConfig.widgets[parentWidgetId];
    if (!parentWidget || !id)
        return [];
    const items = [];
    parentWidget.layouts &&
        Object.keys(parentWidget.layouts).forEach(s => {
            const layoutId = parentWidget.layouts[s][browserSizeMode];
            const layoutJson = appConfig.layouts[layoutId];
            layoutJson &&
                layoutJson.content &&
                Object.keys(layoutJson.content).forEach(key => {
                    const layoutEle = layoutJson.content[key];
                    if (layoutEle.type === type && (layoutEle.widgetId === id || layoutEle.sectionId === id || layoutEle.screenGroupId === id)) {
                        items.push({
                            layoutId: layoutJson.id,
                            layoutItemId: layoutEle.id
                        });
                    }
                    else if (layoutEle.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
                        const wJson = appConfig.widgets[layoutEle.widgetId];
                        if (wJson && wJson.manifest.widgetType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetType.Layout) {
                            items.push(...getContentLayoutInfosInWidget(appConfig, id, type, wJson.id, browserSizeMode));
                        }
                    }
                });
        });
    return items;
}
function checkIsLayoutInfoInWidget(appConfig, parentWId, layoutInfo) {
    const parentWidget = appConfig.widgets[parentWId];
    if (!parentWidget)
        return false;
    let find = false;
    parentWidget.layouts &&
        Object.keys(parentWidget.layouts).some(layoutName => {
            return Object.keys(parentWidget.layouts[layoutName]).some(sizeMode => {
                const layoutId = parentWidget.layouts[layoutName][sizeMode];
                const layoutItemIds = getLayoutItemIds(appConfig, layoutId, true);
                return layoutItemIds.some(itemId => {
                    if (layoutInfo.layoutId === layoutId && layoutInfo.layoutItemId === itemId) {
                        find = true;
                        return true;
                    }
                    return false;
                });
            });
        });
    return find;
}
/**
 * Return the widget/section ids that in the same container with the widget
 * @param appConfig
 * @param widgetId
 */
function getContentsInTheSameContainer(appConfig, id, type, retType, sizeMode, withPending = false) {
    const containerInfo = getContentContainerInfo(appConfig, id, type, sizeMode, withPending);
    if (!containerInfo) {
        return [];
    }
    return getContentsInContainer(appConfig, containerInfo, retType, sizeMode, withPending);
}
/**
 * Return the widget/section ids that in the same root container with the widget
 * @param appConfig
 * @param widgetId
 */
function getContentsInTheSameRootContainer(appConfig, id, type, retType, sizeMode, withPending = false) {
    const containerInfo = getContentRootContainerInfo(appConfig, id, type, sizeMode, withPending);
    if (!containerInfo) {
        return [];
    }
    return getContentsInContainerRecursive(appConfig, containerInfo, retType, sizeMode, withPending);
}
function getBlockAnchorPointsInPage(appConfig, pageId, sizeMode) {
    var _a, _b;
    const pageJson = appConfig.pages[pageId];
    const layoutId = (_a = pageJson === null || pageJson === void 0 ? void 0 : pageJson.layout) === null || _a === void 0 ? void 0 : _a[sizeMode];
    const layoutJson = appConfig.layouts[layoutId];
    const blocks = [];
    if ((layoutJson === null || layoutJson === void 0 ? void 0 : layoutJson.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.FlowLayout) {
        Object.keys((_b = layoutJson.content) !== null && _b !== void 0 ? _b : {}).sort().forEach(layoutItemId => {
            var _a;
            const layoutItem = layoutJson.content[layoutItemId];
            if (layoutItem.isPending || ((_a = layoutItem.setting) === null || _a === void 0 ? void 0 : _a.isFloating)) {
                return;
            }
            if (layoutItem.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
                const anchor = generateBlockAnchorPoint(appConfig, { layoutId, layoutItemId });
                if (anchor) {
                    blocks.push(anchor);
                }
            }
        });
    }
    return blocks;
}
function getScreenAnchorPointsInPage(appConfig, pageId, sizeMode) {
    var _a, _b;
    const pageJson = appConfig.pages[pageId];
    const layoutId = (_a = pageJson === null || pageJson === void 0 ? void 0 : pageJson.layout) === null || _a === void 0 ? void 0 : _a[sizeMode];
    const layoutJson = appConfig.layouts[layoutId];
    const screenGroups = [];
    if ((layoutJson === null || layoutJson === void 0 ? void 0 : layoutJson.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutType.FlowLayout) {
        Object.keys((_b = layoutJson.content) !== null && _b !== void 0 ? _b : {}).sort().forEach(layoutItemId => {
            var _a;
            const layoutItem = layoutJson.content[layoutItemId];
            if (layoutItem.isPending || ((_a = layoutItem.setting) === null || _a === void 0 ? void 0 : _a.isFloating)) {
                return;
            }
            if (layoutItem.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup) {
                const screenGroup = appConfig.screenGroups[layoutItem.screenGroupId];
                const screens = [];
                screenGroup === null || screenGroup === void 0 ? void 0 : screenGroup.screens.forEach(screenId => {
                    const anchor = generateScreenAnchorPoint(appConfig, layoutId, screenId);
                    if (anchor) {
                        screens.push(anchor);
                    }
                });
                screenGroups.push({ id: screenGroup.id, label: screenGroup.label, screens });
            }
        });
    }
    return screenGroups;
}
function generateBlockAnchorPoint(appConfig, layoutInfo) {
    const { layoutId, layoutItemId } = layoutInfo;
    const layoutItem = appConfig.layouts[layoutId].content[layoutItemId];
    const widgetJson = appConfig.widgets[layoutItem.widgetId];
    if (widgetJson) {
        return { label: widgetJson.label, id: `${layoutId}_block_${layoutItemId}` };
    }
    return null;
}
function generateScreenAnchorPoint(appConfig, layoutId, screenId) {
    const screenJson = appConfig.screens[screenId];
    if (screenJson) {
        return { label: screenJson.label, id: `${layoutId}_screen_${screenId}` };
    }
    return null;
}
/**
 *
 * @param appConfig
 * @param currentContainerType Dialog or Page
 * @param currentId dialog or page id
 */
function getMapWidgets(appConfig, sizeMode, currentContainerType, currentId) {
    const flatContainerMaps = [];
    // if map is in header/footer, put them in the first current page only
    const currentItem = {
        id: currentId,
        type: currentContainerType,
        maps: getContentsInContainerRecursiveAdv(appConfig, { type: currentContainerType, id: currentId }, jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, sizeMode, { includePending: false, includeOtherSizeMode: false })
            .filter(widgetId => appConfig.widgets[widgetId].manifest.properties.canCreateMapView)
    };
    flatContainerMaps.push(currentItem);
    Object.keys(appConfig.pages).forEach(pageId => {
        if (pageId === currentId) {
            return;
        }
        const item = {
            id: pageId,
            type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page,
            maps: getContentsInContainerRecursive(appConfig, { id: pageId, type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page }, jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, sizeMode)
                .filter(widgetId => appConfig.widgets[widgetId].manifest.properties.canCreateMapView)
        };
        flatContainerMaps.push(item);
    });
    Object.keys(appConfig.dialogs || {}).forEach(dlgId => {
        if (dlgId === currentId) {
            return;
        }
        const item = {
            id: dlgId,
            type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Dialog,
            maps: getContentsInContainerRecursive(appConfig, { id: dlgId, type: jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Dialog }, jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, sizeMode)
                .filter(widgetId => appConfig.widgets[widgetId].manifest.properties.canCreateMapView)
        };
        flatContainerMaps.push(item);
    });
    return flatContainerMaps;
}


/***/ }),

/***/ "./jimu-layouts/lib/search/index.ts":
/*!******************************************!*\
  !*** ./jimu-layouts/lib/search/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   findLayoutId: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.findLayoutId),
/* harmony export */   findLayoutItem: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.findLayoutItem),
/* harmony export */   findParentLayoutInfo: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.findParentLayoutInfo),
/* harmony export */   getBlockAnchorPointsInPage: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getBlockAnchorPointsInPage),
/* harmony export */   getBrowserSizeModeByLayoutId: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getBrowserSizeModeByLayoutId),
/* harmony export */   getBrowserSizeModeByLayoutIdAndWidgetId: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getBrowserSizeModeByLayoutIdAndWidgetId),
/* harmony export */   getChildrenContents: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getChildrenContents),
/* harmony export */   getContentContainerInfo: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentContainerInfo),
/* harmony export */   getContentIdInLayoutItem: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentIdInLayoutItem),
/* harmony export */   getContentLayoutInfosInOneSizeMode: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentLayoutInfosInOneSizeMode),
/* harmony export */   getContentLayoutItem: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentLayoutItem),
/* harmony export */   getContentRootContainerInfo: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentRootContainerInfo),
/* harmony export */   getContentsInContainer: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentsInContainer),
/* harmony export */   getContentsInContainerRecursive: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentsInContainerRecursive),
/* harmony export */   getContentsInContainerRecursiveAdv: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentsInContainerRecursiveAdv),
/* harmony export */   getContentsInLayout: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentsInLayout),
/* harmony export */   getContentsInLayoutRecursive: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentsInLayoutRecursive),
/* harmony export */   getContentsInLayoutWithRecrusiveLayouts: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentsInLayoutWithRecrusiveLayouts),
/* harmony export */   getContentsInTheSameContainer: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentsInTheSameContainer),
/* harmony export */   getContentsInTheSameRootContainer: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getContentsInTheSameRootContainer),
/* harmony export */   getLayoutInfosByType: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getLayoutInfosByType),
/* harmony export */   getLayoutInfosHoldcontent: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getLayoutInfosHoldcontent),
/* harmony export */   getLayoutItemIds: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getLayoutItemIds),
/* harmony export */   getMapWidgets: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getMapWidgets),
/* harmony export */   getParentWidgetIdOfContent: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getParentWidgetIdOfContent),
/* harmony export */   getPendingLayoutItemsFromOtherSizeMode: () => (/* reexport safe */ _pending__WEBPACK_IMPORTED_MODULE_2__.getPendingLayoutItemsFromOtherSizeMode),
/* harmony export */   getPendingLayoutItemsFromOtherSizeModeInDialog: () => (/* reexport safe */ _pending__WEBPACK_IMPORTED_MODULE_2__.getPendingLayoutItemsFromOtherSizeModeInDialog),
/* harmony export */   getPendingLayoutItemsFromOtherSizeModeInPage: () => (/* reexport safe */ _pending__WEBPACK_IMPORTED_MODULE_2__.getPendingLayoutItemsFromOtherSizeModeInPage),
/* harmony export */   getPendingLayoutItemsInDialog: () => (/* reexport safe */ _pending__WEBPACK_IMPORTED_MODULE_2__.getPendingLayoutItemsInDialog),
/* harmony export */   getPendingLayoutItemsInLayoutWithDeep: () => (/* reexport safe */ _pending__WEBPACK_IMPORTED_MODULE_2__.getPendingLayoutItemsInLayoutWithDeep),
/* harmony export */   getPendingLayoutItemsInPage: () => (/* reexport safe */ _pending__WEBPACK_IMPORTED_MODULE_2__.getPendingLayoutItemsInPage),
/* harmony export */   getRelatedLayoutInfosInWidgetByLayoutInfo: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getRelatedLayoutInfosInWidgetByLayoutInfo),
/* harmony export */   getRelatedLayoutItemsInWidgetByLayoutInfo: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getRelatedLayoutItemsInWidgetByLayoutInfo),
/* harmony export */   getScreenAnchorPointsInPage: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getScreenAnchorPointsInPage),
/* harmony export */   getSectionInfo: () => (/* reexport safe */ _section__WEBPACK_IMPORTED_MODULE_1__.getSectionInfo),
/* harmony export */   getWidgetIdThatUseTheLayoutId: () => (/* reexport safe */ _contents__WEBPACK_IMPORTED_MODULE_0__.getWidgetIdThatUseTheLayoutId)
/* harmony export */ });
/* harmony import */ var _contents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contents */ "./jimu-layouts/lib/search/contents.ts");
/* harmony import */ var _section__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./section */ "./jimu-layouts/lib/search/section.ts");
/* harmony import */ var _pending__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pending */ "./jimu-layouts/lib/search/pending.ts");





/***/ }),

/***/ "./jimu-layouts/lib/search/pending.ts":
/*!********************************************!*\
  !*** ./jimu-layouts/lib/search/pending.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getPendingLayoutItemsFromOtherSizeMode: () => (/* binding */ getPendingLayoutItemsFromOtherSizeMode),
/* harmony export */   getPendingLayoutItemsFromOtherSizeModeInDialog: () => (/* binding */ getPendingLayoutItemsFromOtherSizeModeInDialog),
/* harmony export */   getPendingLayoutItemsFromOtherSizeModeInPage: () => (/* binding */ getPendingLayoutItemsFromOtherSizeModeInPage),
/* harmony export */   getPendingLayoutItemsInDialog: () => (/* binding */ getPendingLayoutItemsInDialog),
/* harmony export */   getPendingLayoutItemsInLayoutWithDeep: () => (/* binding */ getPendingLayoutItemsInLayoutWithDeep),
/* harmony export */   getPendingLayoutItemsInPage: () => (/* binding */ getPendingLayoutItemsInPage)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _contents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contents */ "./jimu-layouts/lib/search/contents.ts");


/**
 * Return the pending widgets/sections in the current size mode.
 * @param appConfig
 * @param pageId
 * @param sizeMode
 * @param pagePart
 */
function getPendingLayoutItemsInPage(appConfig, pageId, sizeMode, pagePart) {
    const pageJson = appConfig.pages[pageId];
    if (!pageJson) {
        return [];
    }
    if (pagePart === jimu_core__WEBPACK_IMPORTED_MODULE_0__.PagePart.Header) {
        if (!pageJson.header || !appConfig.header) {
            return [];
        }
        return getPendingLayoutItemsInLayoutWithDeep(appConfig, appConfig.header.layout[sizeMode], sizeMode);
    }
    else if (pagePart === jimu_core__WEBPACK_IMPORTED_MODULE_0__.PagePart.Footer) {
        if (!pageJson.footer || !appConfig.footer) {
            return [];
        }
        return getPendingLayoutItemsInLayoutWithDeep(appConfig, appConfig.footer.layout[sizeMode], sizeMode);
    }
    else if (pagePart === jimu_core__WEBPACK_IMPORTED_MODULE_0__.PagePart.Body) {
        return getPendingLayoutItemsInLayoutWithDeep(appConfig, pageJson.layout[sizeMode], sizeMode);
    }
    return [];
}
/**
 * Return the pending widgets/sections from other size mode.
 * The pending means: the widgets/sections are in page's other mode but are not in the current mode (passed in)
 * @param appConfig
 * @param pageId
 * @param type
 * @param sizeMode
 */
function getPendingLayoutItemsFromOtherSizeModeInPage(appConfig, pageId, sizeMode, pagePart) {
    const pageJson = appConfig.pages[pageId];
    if (!pageJson) {
        return [];
    }
    if (pagePart === jimu_core__WEBPACK_IMPORTED_MODULE_0__.PagePart.Header) {
        if (!pageJson.header || !appConfig.header) {
            return [];
        }
        return getPendingLayoutItemsFromOtherSizeMode(appConfig, appConfig.header.layout, sizeMode);
    }
    else if (pagePart === jimu_core__WEBPACK_IMPORTED_MODULE_0__.PagePart.Footer) {
        if (!pageJson.footer || !appConfig.footer) {
            return [];
        }
        return getPendingLayoutItemsFromOtherSizeMode(appConfig, appConfig.footer.layout, sizeMode);
    }
    else if (pagePart === jimu_core__WEBPACK_IMPORTED_MODULE_0__.PagePart.Body) {
        return getPendingLayoutItemsFromOtherSizeMode(appConfig, pageJson.layout, sizeMode);
    }
    return [];
}
/**
 * Return the pending widgets/sections in the current size mode.
 * @param appConfig
 * @param dialogId
 * @param sizeMode
 */
function getPendingLayoutItemsInDialog(appConfig, dialogId, sizeMode) {
    const dialogJson = appConfig.dialogs[dialogId];
    if (!dialogJson) {
        return [];
    }
    return getPendingLayoutItemsInLayoutWithDeep(appConfig, dialogJson.layout[sizeMode], sizeMode);
}
/**
 * Return the pending widgets/sections from other size mode.
 * The pending means: the widgets/sections are in dialog's other mode but are not in the current mode (passed in)
 * @param appConfig
 * @param dialogId
 * @param sizeMode
 */
function getPendingLayoutItemsFromOtherSizeModeInDialog(appConfig, dialogId, sizeMode) {
    const dialogJson = appConfig.dialogs[dialogId];
    if (!dialogJson) {
        return [];
    }
    return getPendingLayoutItemsFromOtherSizeMode(appConfig, dialogJson.layout, sizeMode);
}
/**
 * Return the pending widgets/sections in the current size mode.
 * @param appConfig
 * @param layoutId
 * @param sizeMode the current size mode
 */
function getPendingLayoutItemsInLayoutWithDeep(appConfig, layoutId, sizeMode) {
    let retItems = [];
    const widgetItems = (0,_contents__WEBPACK_IMPORTED_MODULE_1__.getLayoutInfosByType)(appConfig.layouts[layoutId], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, true);
    widgetItems.forEach(widgetItem => {
        const item = appConfig.layouts[widgetItem.layoutId].content[widgetItem.layoutItemId];
        if (item.isPending) {
            retItems.push(widgetItem);
        }
        else {
            if (appConfig.widgets[item.widgetId].layouts) {
                Object.keys(appConfig.widgets[item.widgetId].layouts).forEach(layoutName => {
                    retItems = retItems.concat(getPendingLayoutItemsInLayoutWithDeep(appConfig, appConfig.widgets[item.widgetId].layouts[layoutName][sizeMode], sizeMode));
                });
            }
        }
    });
    const sectionItems = (0,_contents__WEBPACK_IMPORTED_MODULE_1__.getLayoutInfosByType)(appConfig.layouts[layoutId], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section, true);
    sectionItems.forEach(sectionItem => {
        const item = appConfig.layouts[sectionItem.layoutId].content[sectionItem.layoutItemId];
        if (item.isPending) {
            retItems.push(sectionItem);
        }
        else {
            if (appConfig.sections[item.sectionId].views) {
                appConfig.sections[item.sectionId].views.forEach(viewId => {
                    retItems = retItems.concat(getPendingLayoutItemsInLayoutWithDeep(appConfig, appConfig.views[viewId].layout[sizeMode], sizeMode));
                });
            }
        }
    });
    const sgItems = (0,_contents__WEBPACK_IMPORTED_MODULE_1__.getLayoutInfosByType)(appConfig.layouts[layoutId], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup, true);
    sgItems.forEach(sgItem => {
        var _a, _b;
        const item = appConfig.layouts[sgItem.layoutId].content[sgItem.layoutItemId];
        if (item.isPending) {
            retItems.push(sgItem);
        }
        else {
            const sgId = item.screenGroupId;
            (_b = (_a = appConfig.screenGroups) === null || _a === void 0 ? void 0 : _a[sgId].screens) === null || _b === void 0 ? void 0 : _b.forEach(screenId => {
                const screenJson = appConfig === null || appConfig === void 0 ? void 0 : appConfig.screens[screenId];
                if (screenJson.main) {
                    retItems = retItems.concat(getPendingLayoutItemsInLayoutWithDeep(appConfig, screenJson.main.layout[sizeMode], sizeMode));
                }
                if (screenJson.panel) {
                    retItems = retItems.concat(getPendingLayoutItemsInLayoutWithDeep(appConfig, screenJson.panel.layout[sizeMode], sizeMode));
                }
            });
        }
    });
    return retItems;
}
/**
 * Return the pending widgets/sections/screenGroups.
 * The pending means: the widgets/sections/screenGroups are in layout's other mode but are not in the current mode (passed in).
 * @param appConfig
 * @param pageId
 * @param type
 * @param sizeMode
 */
function getPendingLayoutItemsFromOtherSizeMode(appConfig, layout, sizeMode, thisWidgetIds = null, thisSectionIds = null, thisScreenGroupIds = null) {
    const retItems = [];
    if (!thisWidgetIds) {
        thisWidgetIds = (0,_contents__WEBPACK_IMPORTED_MODULE_1__.getContentsInLayoutRecursive)(appConfig, layout[sizeMode], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, sizeMode, true);
    }
    if (!thisSectionIds) {
        thisSectionIds = (0,_contents__WEBPACK_IMPORTED_MODULE_1__.getContentsInLayoutRecursive)(appConfig, layout[sizeMode], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section, sizeMode, true);
    }
    if (!thisScreenGroupIds) {
        thisScreenGroupIds = (0,_contents__WEBPACK_IMPORTED_MODULE_1__.getContentsInLayoutRecursive)(appConfig, layout[sizeMode], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup, sizeMode, true);
    }
    const otherModes = Object.keys(jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode)
        .filter(mode => jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode[mode] !== sizeMode)
        .map(k => jimu_core__WEBPACK_IMPORTED_MODULE_0__.BrowserSizeMode[k]);
    otherModes.forEach(mode => {
        const widgetItems = (0,_contents__WEBPACK_IMPORTED_MODULE_1__.getLayoutInfosByType)(appConfig.layouts[layout[mode]], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget, true);
        widgetItems.forEach(widgetItem => {
            var _a;
            const item = appConfig.layouts[widgetItem.layoutId].content[widgetItem.layoutItemId];
            if (((_a = appConfig.widgets[item.widgetId].manifest) === null || _a === void 0 ? void 0 : _a.widgetType) !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetType.Layout &&
                thisWidgetIds.indexOf(item.widgetId) < 0) {
                !isContentExists(appConfig, retItems, widgetItem) && retItems.push(widgetItem);
            }
            else {
                if (appConfig.widgets[item.widgetId].layouts) {
                    Object.keys(appConfig.widgets[item.widgetId].layouts).forEach(layoutName => {
                        getPendingLayoutItemsFromOtherSizeMode(appConfig, appConfig.widgets[item.widgetId].layouts[layoutName], sizeMode, thisWidgetIds, thisSectionIds, thisScreenGroupIds).forEach(widgetItem => {
                            !isContentExists(appConfig, retItems, widgetItem) && retItems.push(widgetItem);
                        });
                    });
                }
            }
        });
        const sectionItems = (0,_contents__WEBPACK_IMPORTED_MODULE_1__.getLayoutInfosByType)(appConfig.layouts[layout[mode]], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section, true);
        sectionItems.forEach(sectionItem => {
            const item = appConfig.layouts[sectionItem.layoutId].content[sectionItem.layoutItemId];
            if (thisSectionIds.indexOf(item.sectionId) < 0) {
                !isContentExists(appConfig, retItems, sectionItem) && retItems.push(sectionItem);
            }
            else {
                if (appConfig.sections[item.sectionId].views) {
                    appConfig.sections[item.sectionId].views.forEach(viewId => {
                        getPendingLayoutItemsFromOtherSizeMode(appConfig, appConfig.views[viewId].layout, sizeMode, thisWidgetIds, thisSectionIds, thisScreenGroupIds).forEach(sectionItem => {
                            !isContentExists(appConfig, retItems, sectionItem) && retItems.push(sectionItem);
                        });
                    });
                }
            }
        });
        const sgItems = (0,_contents__WEBPACK_IMPORTED_MODULE_1__.getLayoutInfosByType)(appConfig.layouts[layout[mode]], jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.ScreenGroup, true);
        sgItems.forEach(sgItem => {
            var _a, _b;
            const item = appConfig.layouts[sgItem.layoutId].content[sgItem.layoutItemId];
            if (thisScreenGroupIds.indexOf(item.screenGroupId) < 0) {
                !isContentExists(appConfig, retItems, sgItem) && retItems.push(sgItem);
            }
            else {
                if ((_b = (_a = appConfig.screenGroups) === null || _a === void 0 ? void 0 : _a[item.screenGroupId]) === null || _b === void 0 ? void 0 : _b.screens) {
                    appConfig.screenGroups[item.screenGroupId].screens.forEach(screenId => {
                        var _a;
                        const screenJson = (_a = appConfig.screens) === null || _a === void 0 ? void 0 : _a[screenId];
                        if (screenJson === null || screenJson === void 0 ? void 0 : screenJson.main) {
                            getPendingLayoutItemsFromOtherSizeMode(appConfig, screenJson.main.layout, sizeMode, thisWidgetIds, thisSectionIds, thisScreenGroupIds).forEach(sectionItem => {
                                !isContentExists(appConfig, retItems, sectionItem) && retItems.push(sectionItem);
                            });
                        }
                        if (screenJson === null || screenJson === void 0 ? void 0 : screenJson.panel) {
                            getPendingLayoutItemsFromOtherSizeMode(appConfig, screenJson.panel.layout, sizeMode, thisWidgetIds, thisSectionIds, thisScreenGroupIds).forEach(sectionItem => {
                                !isContentExists(appConfig, retItems, sectionItem) && retItems.push(sectionItem);
                            });
                        }
                    });
                }
            }
        });
    });
    return retItems;
}
function isContentExists(appConfig, layoutInfos, layoutInfo) {
    const layoutItem = appConfig.layouts[layoutInfo.layoutId].content[layoutInfo.layoutItemId];
    return !!layoutInfos.find(info => {
        const item = appConfig.layouts[info.layoutId].content[info.layoutItemId];
        return (item.type === layoutItem.type &&
            ((item.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget && item.widgetId === layoutItem.widgetId) ||
                (item.type === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Section && item.sectionId === layoutItem.sectionId)));
    });
}


/***/ }),

/***/ "./jimu-layouts/lib/search/section.ts":
/*!********************************************!*\
  !*** ./jimu-layouts/lib/search/section.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getSectionInfo: () => (/* binding */ getSectionInfo)
/* harmony export */ });
function getSectionInfo(state, sectionId) {
    var _a;
    const section = state.appConfig.sections[sectionId];
    if (!section || !section.views) {
        return null;
    }
    const navInfo = (_a = state.appRuntimeInfo.sectionNavInfos) === null || _a === void 0 ? void 0 : _a[section.id];
    let activeView;
    if (!navInfo) {
        const activeViewId = section.views[0];
        activeView = state.appConfig.views[activeViewId];
    }
    return {
        sectionId,
        navInfo,
        activeView,
        views: section.views,
        sectionStyle: section.style,
        transition: section.transition,
        autoPlay: section.autoPlay,
        interval: section.interval,
        loop: section.loop,
        focusable: section.focusable
    };
}


/***/ }),

/***/ "./jimu-layouts/lib/translations/default.ts":
/*!**************************************************!*\
  !*** ./jimu-layouts/lib/translations/default.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    previousView: 'Previous view',
    nextView: 'Next view',
    originTL: 'Top left as origin',
    originTR: 'Top right as origin',
    originBL: 'Bottom left as origin',
    originBR: 'Bottom right as origin',
    alignLeft: 'Align left',
    alignRight: 'Align right',
    alignTop: 'Align top',
    alignCenter: 'Align center',
    alignHCenter: 'Horizontal center',
    alignVCenter: 'Vertical center',
    alignBottom: 'Align bottom',
    alignStretch: 'Align stretch',
    sendBackward: 'Send backward',
    bringForward: 'Bring forward',
    sendToBack: 'Send to back',
    bringToFront: 'Bring to front',
    zoomoutFixed: 'Zoom out fixed',
    order: 'Order',
    moveToLeft: 'Move to left',
    moveToRight: 'Move to right',
    moveToTop: 'Move to top',
    moveToBottom: 'Move to bottom',
    addView: 'New view',
    duplicateScreen: 'Duplicate screen',
    deleteScreen: 'Delete screen',
    applyToFirstPanel: 'Apply to the first panel',
    deleteView: 'Delete view',
    duplicateView: 'Duplicate view',
    insertABlock: 'Insert block',
    insertAScreenGroup: 'Insert screen group',
    moveup: 'Move up',
    movedown: 'Move down',
    chooseTemplate: 'Choose a {type} template',
    chooseHeaderTemplate: 'Choose a header template',
    chooseFooterTemplate: 'Choose a footer template',
    dropWidgetToAdd: 'Or drag a widget here',
    snapToLeft: 'Snap to left',
    snapToTop: 'Snap to top',
    snapToBottom: 'Snap to bottom',
    snapToRight: 'Snap to right',
    fullWidth: 'Full width',
    fullHeight: 'Full height',
    fullSize: 'Full size',
    restoreSize: 'Restore size',
    pendingTip: 'Move to the pending list',
    setting: 'Settings',
    dragToMove: 'Drag to move {label}',
    lockLayout: 'Lock position and size',
    unlockLayout: 'Unlock position and size',
    editHeader: 'Edit header',
    editFooter: 'Edit footer',
    transform: 'Transform',
    rotation: 'Rotation',
    angle: 'Angle',
    floating: 'Pin',
    sinking: 'Unpin',
    floatingArea: 'Floating area',
    changeToAuto: 'Change to auto',
    changeToCustom: 'Change to custom',
    positionType: 'Position type',
    sticky: 'Sticky',
    fixed: 'Fixed',
    flow: 'Flow',
    stack: 'Stack',
    fixedAtTop: 'Floating at the top when scrolling',
    actNormal: 'Act as normal widget',
    hideInDesignView: 'Hide in design view',
    showInDesignView: 'Show in design view',
    unlockGridItem: 'Unlock this widget to reorganize its internal widgets.',
    lockGridItem: 'Lock this widget.',
    splitHorizontally: 'Split horizontally',
    splitVertically: 'Split vertically'
});


/***/ }),

/***/ "./jimu-layouts/lib/types.ts":
/*!***********************************!*\
  !*** ./jimu-layouts/lib/types.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CLICK_TOLRERANCE: () => (/* binding */ CLICK_TOLRERANCE),
/* harmony export */   COLS_IN_ONE_ROW: () => (/* binding */ COLS_IN_ONE_ROW),
/* harmony export */   CONTEXT_MENU_ICON_SIZE: () => (/* binding */ CONTEXT_MENU_ICON_SIZE),
/* harmony export */   CONTEXT_MENU_ITEM_SIZE: () => (/* binding */ CONTEXT_MENU_ITEM_SIZE),
/* harmony export */   DEFAULT_AUTOPLAY_INTERVAL: () => (/* binding */ DEFAULT_AUTOPLAY_INTERVAL),
/* harmony export */   LayoutItemSizeModes: () => (/* binding */ LayoutItemSizeModes),
/* harmony export */   LayoutZIndex: () => (/* binding */ LayoutZIndex),
/* harmony export */   MIN_LAYOUT_ITEM_SIZE: () => (/* binding */ MIN_LAYOUT_ITEM_SIZE),
/* harmony export */   OrderAdjustType: () => (/* binding */ OrderAdjustType)
/* harmony export */ });
var OrderAdjustType;
(function (OrderAdjustType) {
    OrderAdjustType[OrderAdjustType["BringForward"] = 0] = "BringForward";
    OrderAdjustType[OrderAdjustType["SendBackward"] = 1] = "SendBackward";
    OrderAdjustType[OrderAdjustType["BringToFront"] = 2] = "BringToFront";
    OrderAdjustType[OrderAdjustType["SendToBack"] = 3] = "SendToBack";
})(OrderAdjustType || (OrderAdjustType = {}));
const COLS_IN_ONE_ROW = 12;
const CONTEXT_MENU_ITEM_SIZE = 28;
const CONTEXT_MENU_ICON_SIZE = 16;
const MIN_LAYOUT_ITEM_SIZE = 16;
const CLICK_TOLRERANCE = 5;
const DEFAULT_AUTOPLAY_INTERVAL = 3;
// 0 < zIndex < 10 is managed by component itself
var LayoutZIndex;
(function (LayoutZIndex) {
    LayoutZIndex["Auto"] = "auto";
    LayoutZIndex[LayoutZIndex["Normal"] = 0] = "Normal";
    LayoutZIndex[LayoutZIndex["BoundaryDropArea"] = 10] = "BoundaryDropArea";
    LayoutZIndex[LayoutZIndex["DragMoveTip"] = 20] = "DragMoveTip";
    LayoutZIndex[LayoutZIndex["HandlerTools"] = 30] = "HandlerTools";
    LayoutZIndex[LayoutZIndex["DraggingItem"] = 40] = "DraggingItem";
})(LayoutZIndex || (LayoutZIndex = {}));
var LayoutItemSizeModes;
(function (LayoutItemSizeModes) {
    LayoutItemSizeModes["Auto"] = "AUTO";
    LayoutItemSizeModes["Stretch"] = "STRETCH";
    LayoutItemSizeModes["Custom"] = "CUSTOM";
})(LayoutItemSizeModes || (LayoutItemSizeModes = {}));


/***/ }),

/***/ "./jimu-layouts/lib/use-viewport-intersection.ts":
/*!*******************************************************!*\
  !*** ./jimu-layouts/lib/use-viewport-intersection.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useViewportIntersection: () => (/* binding */ useViewportIntersection)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");

function buildThresholdList() {
    const step = 10;
    const result = [0];
    for (let i = 1; i <= step; i++) {
        result.push(i / step);
    }
    return result;
}
/**
 *
 * @param ref
 * @param rootElement
 * @param onIntersectionChange
 */
function useViewportIntersection(ref, watchViewportVisibility) {
    const observerRef = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useRef();
    const [isInViewport, setIsInViewport] = jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useState(true);
    jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.useEffect(() => {
        if (observerRef.current) {
            observerRef.current.unobserve(ref);
            observerRef.current = null;
        }
        if (!watchViewportVisibility) {
            return;
        }
        const handleIntersectionChange = (entry) => {
            if (entry.target.classList.contains('playing-animation')) {
                return;
            }
            if (entry.boundingClientRect.width > 0 && entry.boundingClientRect.height > 0) {
                setIsInViewport(entry.isIntersecting);
            }
        };
        if (ref && typeof IntersectionObserver === 'function') {
            const handler = (entries) => {
                handleIntersectionChange(entries[0]);
            };
            const observer = new IntersectionObserver(handler, {
                threshold: buildThresholdList(),
                root: document,
                rootMargin: '20%'
            });
            observer.observe(ref);
            observerRef.current = observer;
            return () => {
                observerRef.current.unobserve(ref);
                observerRef.current = null;
            };
        }
    }, [ref, watchViewportVisibility]);
    return isInViewport;
}


/***/ }),

/***/ "./jimu-layouts/lib/utils.ts":
/*!***********************************!*\
  !*** ./jimu-layouts/lib/utils.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   autoBindHandlers: () => (/* binding */ autoBindHandlers),
/* harmony export */   calHeightOfLayoutItem: () => (/* binding */ calHeightOfLayoutItem),
/* harmony export */   contains: () => (/* binding */ contains),
/* harmony export */   emptyFunc: () => (/* binding */ emptyFunc),
/* harmony export */   expandStyleArray: () => (/* binding */ expandStyleArray),
/* harmony export */   fromRatio: () => (/* binding */ fromRatio),
/* harmony export */   gcd: () => (/* binding */ gcd),
/* harmony export */   getActivePagePart: () => (/* binding */ getActivePagePart),
/* harmony export */   getAppConfig: () => (/* binding */ getAppConfig),
/* harmony export */   getCurrentDialogId: () => (/* binding */ getCurrentDialogId),
/* harmony export */   getCurrentDialogRootLayoutId: () => (/* binding */ getCurrentDialogRootLayoutId),
/* harmony export */   getCurrentPageId: () => (/* binding */ getCurrentPageId),
/* harmony export */   getCurrentPageRootLayoutId: () => (/* binding */ getCurrentPageRootLayoutId),
/* harmony export */   getCurrentSizeMode: () => (/* binding */ getCurrentSizeMode),
/* harmony export */   getFooterRootLayoutId: () => (/* binding */ getFooterRootLayoutId),
/* harmony export */   getHeaderRootLayoutId: () => (/* binding */ getHeaderRootLayoutId),
/* harmony export */   getLayoutItemSizeMode: () => (/* binding */ getLayoutItemSizeMode),
/* harmony export */   getMaximumId: () => (/* binding */ getMaximumId),
/* harmony export */   getValueOfBBox: () => (/* binding */ getValueOfBBox),
/* harmony export */   handleOnebyOneAnimation: () => (/* binding */ handleOnebyOneAnimation),
/* harmony export */   intersects: () => (/* binding */ intersects),
/* harmony export */   isEmptyLayout: () => (/* binding */ isEmptyLayout),
/* harmony export */   isFunctionalWidget: () => (/* binding */ isFunctionalWidget),
/* harmony export */   isNumber: () => (/* binding */ isNumber),
/* harmony export */   isPercentage: () => (/* binding */ isPercentage),
/* harmony export */   isRTL: () => (/* binding */ isRTL),
/* harmony export */   isWidgetHasEmbeddedLayout: () => (/* binding */ isWidgetHasEmbeddedLayout),
/* harmony export */   isWidgetPlaceholder: () => (/* binding */ isWidgetPlaceholder),
/* harmony export */   mapStateToLayoutItemProps: () => (/* binding */ mapStateToLayoutItemProps),
/* harmony export */   mapStateToLayoutProps: () => (/* binding */ mapStateToLayoutProps),
/* harmony export */   mapStateToWidgetProps: () => (/* binding */ mapStateToWidgetProps),
/* harmony export */   normalizeLinearUnit: () => (/* binding */ normalizeLinearUnit),
/* harmony export */   parseAspectRatio: () => (/* binding */ parseAspectRatio),
/* harmony export */   relativeClientRect: () => (/* binding */ relativeClientRect),
/* harmony export */   replaceBoundingBox: () => (/* binding */ replaceBoundingBox),
/* harmony export */   shouldUseAspectRatio: () => (/* binding */ shouldUseAspectRatio),
/* harmony export */   toRatio: () => (/* binding */ toRatio),
/* harmony export */   updateBoundingBoxProp: () => (/* binding */ updateBoundingBoxProp)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var jimu_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-ui */ "jimu-ui");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ "./jimu-layouts/lib/types.ts");
/* harmony import */ var _search_contents__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./search/contents */ "./jimu-layouts/lib/search/contents.ts");
/* eslint-disable prefer-const */




const emptyFunc = () => { };
function autoBindHandlers(el, fns) {
    fns.forEach(key => {
        if (el[key]) {
            el[key] = el[key].bind(el);
        }
    });
}
/**
 * Get the maximum id of the layout item which can be converted to a number.
 * @param layoutMap
 */
function getMaximumId(layoutMap) {
    let max = -1;
    if (layoutMap.content) {
        Object.keys(layoutMap.content).forEach(key => {
            const id = parseInt(key, 10);
            if (id > max) {
                max = id;
            }
        });
    }
    return max;
}
/**
 * Checks if `value` is classified as a percentage value
 * @param value
 */
function isPercentage(value) {
    return /^-?\d*(\.\d+)?%$/.test(value);
}
function isEmptyLayout(layout) {
    var _a;
    const itemIds = Object.keys((_a = layout.content) !== null && _a !== void 0 ? _a : {});
    if (itemIds.length === 0) {
        return true;
    }
    const hasNonPending = itemIds.some(id => {
        const item = layout.content[id];
        return !item.isPending;
    });
    return !hasNonPending;
}
/**
 * Checks if `value` is classified as a finite number
 * @param value
 */
function isNumber(value) {
    const result = parseFloat(value);
    return !isNaN(result) && isFinite(result);
}
function getValueOfBBox(bbox, prop) {
    if ((bbox === null || bbox === void 0 ? void 0 : bbox[prop]) == null) {
        return null;
    }
    if (typeof bbox[prop] === 'string') {
        return bbox[prop];
    }
    if (isNumber(bbox[prop])) {
        return `${Math.round(parseFloat(bbox[prop]))}px`;
    }
    return null;
}
/**
 * Convert the value to percentage value in respect to the total
 * @param value
 * @param total
 */
function toRatio(value, total) {
    return `${((value * 100) / total).toFixed(1)}%`;
}
/**
 * Convert a percentage value to pixel in respect to the total
 * @param ratio
 * @param total
 */
function fromRatio(ratio, total) {
    return (parseFloat(`${ratio}`) * total) / 100;
}
const mapStateToLayoutProps = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.createSelector)([
    (state) => state.appConfig.mainSizeMode,
    (state) => state.browserSizeMode,
    (state, ownProps) => {
        var _a, _b, _c, _d, _e;
        let isCustomRoot;
        if (state.browserSizeMode === state.appConfig.mainSizeMode) {
            isCustomRoot = true;
        }
        else {
            // depend on the root layout item
            let useSizeMode;
            if ((_a = ownProps.layouts) === null || _a === void 0 ? void 0 : _a[state.browserSizeMode]) {
                useSizeMode = state.browserSizeMode;
            }
            else if ((_b = ownProps.layouts) === null || _b === void 0 ? void 0 : _b[state.appConfig.mainSizeMode]) {
                useSizeMode = state.appConfig.mainSizeMode;
            }
            const useLayoutId = (_c = ownProps.layouts) === null || _c === void 0 ? void 0 : _c[useSizeMode];
            const container = (0,_search_contents__WEBPACK_IMPORTED_MODULE_3__.getRootContainerInfoOfLayout)(state.appConfig, useLayoutId, useSizeMode);
            if ((container === null || container === void 0 ? void 0 : container.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Header) {
                isCustomRoot = state.appConfig.header.layout[state.browserSizeMode] != null;
            }
            else if ((container === null || container === void 0 ? void 0 : container.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Footer) {
                isCustomRoot = state.appConfig.footer.layout[state.browserSizeMode] != null;
            }
            else if ((container === null || container === void 0 ? void 0 : container.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Dialog) {
                const dialogJson = state.appConfig.dialogs[container.id];
                isCustomRoot = dialogJson.layout[state.browserSizeMode] != null;
            }
            else if ((container === null || container === void 0 ? void 0 : container.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.ContainerType.Page) {
                const pageJson = state.appConfig.pages[container.id];
                isCustomRoot = pageJson.layout[state.browserSizeMode] != null;
            }
        }
        if (isCustomRoot && ((_d = ownProps.layouts) === null || _d === void 0 ? void 0 : _d[state.browserSizeMode])) {
            const layoutId = ownProps.layouts[state.browserSizeMode];
            return state.appConfig.layouts[layoutId];
        }
        const layoutId = (_e = ownProps.layouts) === null || _e === void 0 ? void 0 : _e[state.appConfig.mainSizeMode];
        return state.appConfig.layouts[layoutId];
    }
], (mainSizeMode, browserSizeMode, layout) => ({ mainSizeMode, browserSizeMode, layout }));
const mapStateToLayoutItemProps = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.createSelector)([
    (state, ownProps) => {
        var _a, _b, _c;
        const { layoutId, layoutItemId } = ownProps;
        return (_c = (_b = (_a = state.appConfig.layouts) === null || _a === void 0 ? void 0 : _a[layoutId]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c[layoutItemId];
    },
    (state, ownProps) => {
        var _a, _b, _c, _d, _e, _f;
        const { layoutId, layoutItemId } = ownProps;
        const layoutItem = (_c = (_b = (_a = state.appConfig.layouts) === null || _a === void 0 ? void 0 : _a[layoutId]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c[layoutItemId];
        if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget && layoutItem.widgetId) {
            const widget = state.appConfig.widgets[layoutItem.widgetId];
            return (_f = (_e = (_d = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _d === void 0 ? void 0 : _d.properties) === null || _e === void 0 ? void 0 : _e.watchViewportVisibility) !== null && _f !== void 0 ? _f : false;
        }
        return false;
    },
    (state) => { var _a; return (_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.selection; },
    (state) => { var _a; return (_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.animationPreview; },
    (state) => { var _a; return (_a = state.appRuntimeInfo) === null || _a === void 0 ? void 0 : _a.hoverPreview; },
    (_, ownProps) => ownProps.layoutId
], (layoutItem, watchViewportVisibility, selection, animationPreview, hoverPreview, layoutId) => {
    var _a;
    if (!layoutItem) {
        return {
            layoutItem: null,
            selected: false
        };
    }
    let selected = false;
    const isPending = (_a = layoutItem.isPending) !== null && _a !== void 0 ? _a : false;
    if (selection) {
        selected = selection.layoutId === layoutId && selection.layoutItemId === layoutItem.id;
    }
    const result = {
        selected,
        watchViewportVisibility,
        layoutItem: isPending ? null : layoutItem,
        autoScroll: selected ? selection.autoScroll : undefined
    };
    if (selected && (animationPreview === null || animationPreview === void 0 ? void 0 : animationPreview.layoutInfo)) {
        const { layoutId: animLayoutId, layoutItemId: animItemId } = animationPreview.layoutInfo;
        result.animationPreview = animLayoutId === layoutId && animItemId === layoutItem.id;
        result.playMode = result.animationPreview ? animationPreview.playMode : null;
        result.previewId = result.animationPreview ? animationPreview.id : null;
    }
    else if (selected && (hoverPreview === null || hoverPreview === void 0 ? void 0 : hoverPreview.layoutInfo)) {
        const { layoutId: hoverLayoutId, layoutItemId: hoverItemId } = hoverPreview.layoutInfo;
        result.hoverPreview = hoverLayoutId === layoutId && hoverItemId === layoutItem.id;
        result.previewId = result.hoverPreview ? hoverPreview.id : null;
    }
    return result;
});
const mapStateToWidgetProps = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.createSelector)([
    (state, ownProps) => {
        var _a, _b, _c;
        const { layoutId, layoutItemId } = ownProps;
        const layoutItem = (_c = (_b = (_a = state.appConfig.layouts) === null || _a === void 0 ? void 0 : _a[layoutId]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c[layoutItemId];
        if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget && layoutItem.widgetId) {
            return state.appConfig.widgets[layoutItem.widgetId];
        }
    },
    (state, ownProps) => {
        var _a, _b, _c, _d;
        const { layoutId, layoutItemId } = ownProps;
        const layoutItem = (_c = (_b = (_a = state.appConfig.layouts) === null || _a === void 0 ? void 0 : _a[layoutId]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c[layoutItemId];
        if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget && !layoutItem.widgetId) {
            return (_d = layoutItem.setting) === null || _d === void 0 ? void 0 : _d.placeholderStyle;
        }
    },
    (state, ownProps) => {
        var _a, _b, _c;
        const { layoutId, layoutItemId } = ownProps;
        const layoutItem = (_c = (_b = (_a = state.appConfig.layouts) === null || _a === void 0 ? void 0 : _a[layoutId]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c[layoutItemId];
        if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget && layoutItem.widgetId) {
            return state.widgetsRuntimeInfo[layoutItem.widgetId];
        }
    },
    (state, ownProps) => {
        var _a, _b, _c;
        const { layoutId, layoutItemId } = ownProps;
        const layoutItem = (_c = (_b = (_a = state.appConfig.layouts) === null || _a === void 0 ? void 0 : _a[layoutId]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c[layoutItemId];
        if ((layoutItem === null || layoutItem === void 0 ? void 0 : layoutItem.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget && !layoutItem.widgetId) {
            return state.widgetsState[layoutItem.widgetId];
        }
    },
    (state, ownProps) => {
        var _a, _b;
        const { layoutId } = ownProps;
        const layoutJson = (_a = state.appConfig.layouts) === null || _a === void 0 ? void 0 : _a[layoutId];
        if (((_b = layoutJson.parent) === null || _b === void 0 ? void 0 : _b.type) === jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutParentType.Widget) {
            const parentWidgetId = layoutJson.parent.id;
            const widgetJson = state.appConfig.widgets[parentWidgetId];
            return /widgets\/common\/controller\/?/.test(widgetJson.uri);
        }
        return false;
    }
], (widget, placeholderStyle, widgetRuntimeInfo, widgetState, isInController) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
    const supportInlineEditing = (_b = (_a = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _a === void 0 ? void 0 : _a.properties) === null || _b === void 0 ? void 0 : _b.supportInlineEditing;
    return {
        hasEmbeddedLayout: ((_d = (_c = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _c === void 0 ? void 0 : _c.properties) === null || _d === void 0 ? void 0 : _d.hasEmbeddedLayout) && Object.keys((_e = widget.layouts) !== null && _e !== void 0 ? _e : {}).length > 0,
        supportInlineEditing,
        supportRepeat: (_g = (_f = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _f === void 0 ? void 0 : _f.properties) === null || _g === void 0 ? void 0 : _g.supportRepeat,
        isClassLoaded: (_h = widgetRuntimeInfo === null || widgetRuntimeInfo === void 0 ? void 0 : widgetRuntimeInfo.isClassLoaded) !== null && _h !== void 0 ? _h : false,
        isInlineEditing: supportInlineEditing && (widgetRuntimeInfo === null || widgetRuntimeInfo === void 0 ? void 0 : widgetRuntimeInfo.isInlineEditing),
        isInController,
        useDragHandler: (_l = (_k = (_j = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _j === void 0 ? void 0 : _j.properties) === null || _k === void 0 ? void 0 : _k.useDragHandler) !== null && _l !== void 0 ? _l : false,
        widgetStyle: widget != null ? widget.style : placeholderStyle,
        canCrossLayoutBoundary: (_o = (_m = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _m === void 0 ? void 0 : _m.properties) === null || _o === void 0 ? void 0 : _o.canCrossLayoutBoundary,
        hasExtension: ((_q = (_p = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _p === void 0 ? void 0 : _p.extensions) === null || _q === void 0 ? void 0 : _q.length) > 0,
        widgetJson: widget,
        widgetId: widget === null || widget === void 0 ? void 0 : widget.id,
        isFunctionalWidget: ((_r = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _r === void 0 ? void 0 : _r.widgetType) !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetType.Layout,
        widgetState
    };
});
function isWidgetHasEmbeddedLayout(widgetId, appConfig) {
    var _a, _b, _c, _d;
    const widget = (_a = appConfig === null || appConfig === void 0 ? void 0 : appConfig.widgets) === null || _a === void 0 ? void 0 : _a[widgetId];
    if ((_c = (_b = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _b === void 0 ? void 0 : _b.properties) === null || _c === void 0 ? void 0 : _c.hasEmbeddedLayout) {
        return Object.keys((_d = widget === null || widget === void 0 ? void 0 : widget.layouts) !== null && _d !== void 0 ? _d : {}).length > 0;
    }
    return false;
}
function isFunctionalWidget(widgetId, appConfig) {
    var _a, _b;
    const widget = (_a = appConfig === null || appConfig === void 0 ? void 0 : appConfig.widgets) === null || _a === void 0 ? void 0 : _a[widgetId];
    const type = (_b = widget === null || widget === void 0 ? void 0 : widget.manifest) === null || _b === void 0 ? void 0 : _b.widgetType;
    return type !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.WidgetType.Layout;
}
function isWidgetPlaceholder(appConfig, item) {
    var _a, _b;
    if (!item || item.itemType !== jimu_core__WEBPACK_IMPORTED_MODULE_0__.LayoutItemType.Widget) {
        return false;
    }
    if (item.layoutInfo) {
        // Layout item without widgetId
        const { layoutId, layoutItemId } = item.layoutInfo;
        const layoutItem = (_b = (_a = appConfig.layouts) === null || _a === void 0 ? void 0 : _a[layoutId].content) === null || _b === void 0 ? void 0 : _b[layoutItemId];
        if (layoutItem && !layoutItem.widgetId) {
            return true;
        }
    }
    if (!item.layoutInfo && !item.uri) {
        // New widget without uri
        return true;
    }
    return false;
}
/**
 * Replace the values of bounding box b1 with values of b2, try to keep the unit of each property.
 * @param b1
 * @param b2
 * @param containerRect
 */
function replaceBoundingBox(b1, b2, containerRect) {
    if (!b1) {
        return (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.Immutable)({
            left: isPercentage(b2.left) ? b2.left : `${Math.round(b2.left)}px`,
            right: isPercentage(b2.right) ? b2.right : `${Math.round(b2.right)}px`,
            top: isPercentage(b2.top) ? b2.top : `${Math.round(b2.top)}px`,
            bottom: isPercentage(b2.bottom) ? b2.bottom : `${Math.round(b2.bottom)}px`,
            width: isPercentage(b2.width) ? b2.width : `${Math.round(b2.width)}px`,
            height: isPercentage(b2.height) ? b2.height : `${Math.round(b2.height)}px`
        });
    }
    let result = b1;
    ['left', 'right', 'top', 'bottom', 'width', 'height'].forEach(key => {
        if (result[key] != null) {
            result = updateBoundingBoxProp(key, result, b2[key], containerRect);
        }
        else if (b2[key] != null) {
            result = result.set(key, `${Math.round(b2[key])}px`);
        }
    });
    return result;
}
/**
 * Update a property of the bounding box
 * @param prop
 * @param b
 * @param newValue
 * @param containerRect
 */
function updateBoundingBoxProp(prop, b, newValue, containerRect) {
    if (b[prop] == null || b[prop] === 'auto') {
        return b;
    }
    let updated = b;
    if (isPercentage(b[prop])) {
        if (prop === 'left' || prop === 'right' || prop === 'width') {
            if (isPercentage(newValue)) {
                updated = b.set(prop, newValue);
            }
            else {
                updated = b.set(prop, `${((+newValue * 100) / containerRect.width).toFixed(4)}%`);
            }
        }
        else {
            if (isPercentage(newValue)) {
                updated = b.set(prop, newValue);
            }
            else {
                updated = b.set(prop, `${((+newValue * 100) / containerRect.height).toFixed(4)}%`);
            }
        }
    }
    else {
        if (isPercentage(newValue)) {
            if (prop === 'left' || prop === 'right' || prop === 'width') {
                updated = b.set(prop, Math.round((parseFloat(`${newValue}`) * containerRect.width) / 100));
            }
            else {
                updated = b.set(prop, Math.round((parseFloat(`${newValue}`) * containerRect.height) / 100));
            }
        }
        else {
            if (isNaN(+newValue)) {
                updated = b.without(prop);
            }
            else {
                updated = b.set(prop, `${Math.round(+newValue)}px`);
            }
        }
    }
    return updated;
}
function relativeClientRect(r1, r2) {
    return {
        left: r1.left - r2.left,
        top: r1.top - r2.top,
        right: r1.right,
        bottom: r1.bottom,
        width: r1.width,
        height: r1.height,
        id: null
    };
}
function isRTL() {
    var _a, _b;
    return (_b = (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appContext) === null || _a === void 0 ? void 0 : _a.isRTL) !== null && _b !== void 0 ? _b : false;
}
function parseAspectRatio(ratio) {
    let width = 100;
    let height = 100;
    if (typeof ratio === 'number') {
        width = 100;
        height = Math.round(ratio * 100);
    }
    else if (typeof ratio === 'string') {
        const items = ratio.split(':');
        width = parseInt(items[0], 10);
        height = parseInt(items[1], 10);
    }
    return width / height;
}
function expandStyleArray(dataArray) {
    if (!dataArray || dataArray.length === 0) {
        return [0, 0, 0, 0];
    }
    else if (dataArray.length === 1) {
        return [dataArray[0], dataArray[0], dataArray[0], dataArray[0]];
    }
    else if (dataArray.length === 2) { // top/bottom, left/right
        return [dataArray[0], dataArray[1], dataArray[0], dataArray[1]];
    }
    else if (dataArray.length === 3) {
        return [dataArray[0], dataArray[1], dataArray[2], 0];
    }
    else {
        return [dataArray[0], dataArray[1], dataArray[2], dataArray[3]];
    }
}
function calHeightOfLayoutItem(containerHeight, layoutItem) {
    var _a, _b, _c, _d;
    const setting = (_a = layoutItem.setting) !== null && _a !== void 0 ? _a : {};
    const mode = getLayoutItemSizeMode('height', layoutItem.bbox, setting.autoProps);
    let result;
    if (setting.heightMode === 'ratio') {
        result = {
            setting: {
                heightMode: 'ratio',
                aspectRatio: (_b = setting.aspectRatio) !== null && _b !== void 0 ? _b : 1,
                autoProps: { height: _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom }
            }
        };
    }
    else if (mode !== _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom) {
        return {
            height: mode === _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch ? containerHeight : null,
            setting: {
                autoProps: { height: mode }
            }
        };
    }
    else {
        // fit or fixed or no height mode
        let height = (_d = (_c = layoutItem.bbox) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : containerHeight;
        if (isPercentage(height)) {
            height = fromRatio(height, containerHeight);
        }
        else {
            height = parseInt(height);
        }
        result = {
            height,
            setting: {
                heightMode: 'fixed',
                autoProps: { height: _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom }
            }
        };
    }
    return result;
}
function getAppConfig() {
    var _a;
    return window.jimuConfig.isBuilder
        ? (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appStateInBuilder) === null || _a === void 0 ? void 0 : _a.appConfig
        : (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
}
function getCurrentSizeMode() {
    var _a, _b;
    return ((_a = window === null || window === void 0 ? void 0 : window.jimuConfig) === null || _a === void 0 ? void 0 : _a.isBuilder)
        ? (_b = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appStateInBuilder) === null || _b === void 0 ? void 0 : _b.browserSizeMode
        : (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().browserSizeMode;
}
function getCurrentPageId() {
    var _a, _b, _c;
    return window.jimuConfig.isBuilder
        ? (_b = (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appStateInBuilder) === null || _a === void 0 ? void 0 : _a.appRuntimeInfo) === null || _b === void 0 ? void 0 : _b.currentPageId
        : (_c = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appRuntimeInfo) === null || _c === void 0 ? void 0 : _c.currentPageId;
}
function getCurrentDialogId() {
    var _a, _b, _c;
    return window.jimuConfig.isBuilder
        ? (_b = (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appStateInBuilder) === null || _a === void 0 ? void 0 : _a.appRuntimeInfo) === null || _b === void 0 ? void 0 : _b.currentDialogId
        : (_c = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appRuntimeInfo) === null || _c === void 0 ? void 0 : _c.currentDialogId;
}
function getActivePagePart() {
    var _a, _b, _c;
    return window.jimuConfig.isBuilder
        ? (_b = (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appStateInBuilder) === null || _a === void 0 ? void 0 : _a.appRuntimeInfo) === null || _b === void 0 ? void 0 : _b.activePagePart
        : (_c = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appRuntimeInfo) === null || _c === void 0 ? void 0 : _c.activePagePart;
}
function getCurrentDialogRootLayoutId() {
    var _a, _b, _c;
    const appConfig = window.jimuConfig.isBuilder
        ? (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appStateInBuilder) === null || _a === void 0 ? void 0 : _a.appConfig
        : (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
    const dialogId = getCurrentDialogId();
    const browserSizeMode = getCurrentSizeMode();
    return (_c = (_b = appConfig === null || appConfig === void 0 ? void 0 : appConfig.dialogs[dialogId]) === null || _b === void 0 ? void 0 : _b.layout) === null || _c === void 0 ? void 0 : _c[browserSizeMode];
}
function getCurrentPageRootLayoutId() {
    var _a, _b, _c;
    const appConfig = window.jimuConfig.isBuilder
        ? (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appStateInBuilder) === null || _a === void 0 ? void 0 : _a.appConfig
        : (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
    const pageId = getCurrentPageId();
    const browserSizeMode = getCurrentSizeMode();
    return (_c = (_b = appConfig === null || appConfig === void 0 ? void 0 : appConfig.pages[pageId]) === null || _b === void 0 ? void 0 : _b.layout) === null || _c === void 0 ? void 0 : _c[browserSizeMode];
}
function getHeaderRootLayoutId() {
    var _a, _b, _c;
    const appConfig = window.jimuConfig.isBuilder
        ? (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appStateInBuilder) === null || _a === void 0 ? void 0 : _a.appConfig
        : (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
    const browserSizeMode = getCurrentSizeMode();
    return (_c = (_b = appConfig === null || appConfig === void 0 ? void 0 : appConfig.header) === null || _b === void 0 ? void 0 : _b.layout) === null || _c === void 0 ? void 0 : _c[browserSizeMode];
}
function getFooterRootLayoutId() {
    var _a, _b, _c;
    const appConfig = window.jimuConfig.isBuilder
        ? (_a = (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appStateInBuilder) === null || _a === void 0 ? void 0 : _a.appConfig
        : (0,jimu_core__WEBPACK_IMPORTED_MODULE_0__.getAppStore)().getState().appConfig;
    const browserSizeMode = getCurrentSizeMode();
    return (_c = (_b = appConfig === null || appConfig === void 0 ? void 0 : appConfig.footer) === null || _b === void 0 ? void 0 : _b.layout) === null || _c === void 0 ? void 0 : _c[browserSizeMode];
}
/**
 * Check if rect1 contains rect2
 * @param rect1
 * @param rect2
 */
function contains(rect1, rect2) {
    return rect2.left >= rect1.left && rect2.left + rect2.width <= rect1.left + rect1.width &&
        rect2.top >= rect1.top && rect2.top + rect2.height <= rect1.top + rect1.height;
}
function intersects(r1, r2) {
    return !(r2.left > r1.left + r1.width ||
        r2.left + r2.width < r1.left ||
        r2.top > r1.top + r1.height ||
        r2.top + r2.height < r1.top);
}
function normalizeLinearUnit(value) {
    var _a, _b, _c, _d;
    let unit;
    let distance;
    if (value != null && typeof value === 'object') {
        unit = (_a = value.unit) !== null && _a !== void 0 ? _a : jimu_ui__WEBPACK_IMPORTED_MODULE_1__.DistanceUnits.PIXEL;
        distance = (_b = value.distance) !== null && _b !== void 0 ? _b : 0;
    }
    else {
        const ret = jimu_core__WEBPACK_IMPORTED_MODULE_0__.polished.getValueAndUnit(value);
        unit = (_c = ret === null || ret === void 0 ? void 0 : ret[1]) !== null && _c !== void 0 ? _c : jimu_ui__WEBPACK_IMPORTED_MODULE_1__.DistanceUnits.PIXEL;
        distance = (_d = ret === null || ret === void 0 ? void 0 : ret[0]) !== null && _d !== void 0 ? _d : 0;
    }
    // Keep one decimal in percentage and use integer in pixel
    distance = unit === jimu_ui__WEBPACK_IMPORTED_MODULE_1__.DistanceUnits.PERCENTAGE ? Math.round(distance * 10) / 10 : Math.round(distance);
    return `${distance}${unit}`;
}
function getLayoutItemSizeMode(side, bbox, autoProps) {
    const mode = autoProps === null || autoProps === void 0 ? void 0 : autoProps[side];
    const first = side === 'width' ? 'left' : 'top';
    const last = side === 'width' ? 'right' : 'bottom';
    if (!mode) { // false or undefined
        if (bbox[side] != null) {
            return _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom;
        }
        else if (bbox[first] != null && bbox[last] != null) {
            return _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch;
        }
        return _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Auto;
    }
    if (mode === true) { // width or height is auto
        if (bbox[first] != null && bbox[last] != null) {
            return _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch;
        }
        return _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Auto;
    }
    switch (mode) {
        case _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Auto:
            return _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Auto;
        case _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch:
            return _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Stretch;
        default:
            return _types__WEBPACK_IMPORTED_MODULE_2__.LayoutItemSizeModes.Custom;
    }
}
function shouldUseAspectRatio(itemSetting) {
    return itemSetting.heightMode === 'ratio' && itemSetting.aspectRatio != null;
}
function gcd(x, y) {
    let m = Math.max(x, y);
    let n = Math.min(x, y);
    while (n !== 0) {
        const temp = n;
        n = m % n;
        m = temp;
    }
    return m;
}
function handleOnebyOneAnimation(props) {
    const { delay, isLastChild } = props;
    return { delay, isLastChild };
}


/***/ }),

/***/ "jimu-core":
/*!****************************!*\
  !*** external "jimu-core" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_core__;

/***/ }),

/***/ "jimu-layouts/layout-runtime":
/*!**********************************************!*\
  !*** external "jimu-layouts/layout-runtime" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_layouts_layout_runtime__;

/***/ }),

/***/ "jimu-theme":
/*!*****************************!*\
  !*** external "jimu-theme" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_theme__;

/***/ }),

/***/ "jimu-ui":
/*!**************************!*\
  !*** external "jimu-ui" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_ui__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!*****************************************!*\
  !*** ./jimu-layouts/layout-runtime.tsx ***!
  \*****************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CLICK_TOLRERANCE: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_16__.CLICK_TOLRERANCE),
/* harmony export */   COLS_IN_ONE_ROW: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_16__.COLS_IN_ONE_ROW),
/* harmony export */   CONTEXT_MENU_ICON_SIZE: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_16__.CONTEXT_MENU_ICON_SIZE),
/* harmony export */   CONTEXT_MENU_ITEM_SIZE: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_16__.CONTEXT_MENU_ITEM_SIZE),
/* harmony export */   ColumnLayoutViewer: () => (/* reexport safe */ _lib_column_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   DEFAULT_AUTOPLAY_INTERVAL: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_16__.DEFAULT_AUTOPLAY_INTERVAL),
/* harmony export */   FixedLayoutViewer: () => (/* reexport safe */ _lib_fixed_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   GridLayoutViewer: () => (/* reexport safe */ _lib_grid_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   LayoutContext: () => (/* reexport safe */ _lib_builder_layout_context__WEBPACK_IMPORTED_MODULE_2__.LayoutContext),
/* harmony export */   LayoutEntry: () => (/* reexport safe */ _lib_runtime_layout_entry__WEBPACK_IMPORTED_MODULE_11__["default"]),
/* harmony export */   LayoutItem: () => (/* reexport safe */ _lib_runtime_layout_item__WEBPACK_IMPORTED_MODULE_12__["default"]),
/* harmony export */   LayoutItemSizeModes: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_16__.LayoutItemSizeModes),
/* harmony export */   LayoutZIndex: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_16__.LayoutZIndex),
/* harmony export */   MIN_LAYOUT_ITEM_SIZE: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_16__.MIN_LAYOUT_ITEM_SIZE),
/* harmony export */   OrderAdjustType: () => (/* reexport safe */ _lib_types__WEBPACK_IMPORTED_MODULE_16__.OrderAdjustType),
/* harmony export */   PageContext: () => (/* reexport safe */ _lib_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.PageContext),
/* harmony export */   PageRenderer: () => (/* reexport safe */ _lib_runtime_page_renderer__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   PageVisibilityContext: () => (/* reexport safe */ _lib_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.PageVisibilityContext),
/* harmony export */   RowLayoutViewer: () => (/* reexport safe */ _lib_row_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   SectionRenderer: () => (/* reexport safe */ _lib_runtime_section_renderer__WEBPACK_IMPORTED_MODULE_9__.SectionRenderer),
/* harmony export */   ViewVisibilityContext: () => (/* reexport safe */ _lib_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.ViewVisibilityContext),
/* harmony export */   ViewportVisibilityContext: () => (/* reexport safe */ _lib_builder_page_context__WEBPACK_IMPORTED_MODULE_1__.ViewportVisibilityContext),
/* harmony export */   WidgetRenderer: () => (/* reexport safe */ _lib_runtime_widget_renderer__WEBPACK_IMPORTED_MODULE_8__.WidgetRenderer),
/* harmony export */   defaultMessages: () => (/* reexport safe */ _lib_translations_default__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   findLayoutBuilder: () => (/* reexport safe */ _lib_layout_factory__WEBPACK_IMPORTED_MODULE_15__.findLayoutBuilder),
/* harmony export */   findLayoutViewer: () => (/* reexport safe */ _lib_layout_factory__WEBPACK_IMPORTED_MODULE_15__.findLayoutViewer),
/* harmony export */   init: () => (/* binding */ init),
/* harmony export */   registerLayoutBuilder: () => (/* reexport safe */ _lib_layout_factory__WEBPACK_IMPORTED_MODULE_15__.registerLayoutBuilder),
/* harmony export */   registerLayoutViewer: () => (/* reexport safe */ _lib_layout_factory__WEBPACK_IMPORTED_MODULE_15__.registerLayoutViewer),
/* harmony export */   searchUtils: () => (/* reexport module object */ _lib_search__WEBPACK_IMPORTED_MODULE_13__),
/* harmony export */   utils: () => (/* reexport module object */ _lib_utils__WEBPACK_IMPORTED_MODULE_14__)
/* harmony export */ });
/* harmony import */ var _lib_builder_builder_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/builder/builder-locale */ "./jimu-layouts/lib/builder/builder-locale.ts");
/* harmony import */ var _lib_builder_page_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/builder/page-context */ "./jimu-layouts/lib/builder/page-context.tsx");
/* harmony import */ var _lib_builder_layout_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/builder/layout-context */ "./jimu-layouts/lib/builder/layout-context.tsx");
/* harmony import */ var _lib_translations_default__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/translations/default */ "./jimu-layouts/lib/translations/default.ts");
/* harmony import */ var _lib_fixed_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/fixed-layout/runtime/layout */ "./jimu-layouts/lib/fixed-layout/runtime/layout.tsx");
/* harmony import */ var _lib_column_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/column-layout/runtime/layout */ "./jimu-layouts/lib/column-layout/runtime/layout.tsx");
/* harmony import */ var _lib_row_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/row-layout/runtime/layout */ "./jimu-layouts/lib/row-layout/runtime/layout.tsx");
/* harmony import */ var _lib_grid_layout_runtime_layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/grid-layout/runtime/layout */ "./jimu-layouts/lib/grid-layout/runtime/layout.tsx");
/* harmony import */ var _lib_runtime_widget_renderer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/runtime/widget-renderer */ "./jimu-layouts/lib/runtime/widget-renderer.tsx");
/* harmony import */ var _lib_runtime_section_renderer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/runtime/section-renderer */ "./jimu-layouts/lib/runtime/section-renderer.tsx");
/* harmony import */ var _lib_runtime_page_renderer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lib/runtime/page-renderer */ "./jimu-layouts/lib/runtime/page-renderer.tsx");
/* harmony import */ var _lib_runtime_layout_entry__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./lib/runtime/layout-entry */ "./jimu-layouts/lib/runtime/layout-entry.tsx");
/* harmony import */ var _lib_runtime_layout_item__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./lib/runtime/layout-item */ "./jimu-layouts/lib/runtime/layout-item.tsx");
/* harmony import */ var _lib_search__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./lib/search */ "./jimu-layouts/lib/search/index.ts");
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./lib/utils */ "./jimu-layouts/lib/utils.ts");
/* harmony import */ var _lib_layout_factory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lib/layout-factory */ "./jimu-layouts/lib/layout-factory.ts");
/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./lib/types */ "./jimu-layouts/lib/types.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


















function init() {
    return __awaiter(this, void 0, void 0, function* () {
        return yield Promise.all([(0,_lib_builder_builder_locale__WEBPACK_IMPORTED_MODULE_0__.loadMessage)()]);
    });
}

})();

/******/ 	return __webpack_exports__;
/******/ })()

			);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,